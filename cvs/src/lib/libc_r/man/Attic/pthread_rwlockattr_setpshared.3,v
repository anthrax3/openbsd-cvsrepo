head	1.7;
access;
symbols
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.10
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.8
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@.\" @;


1.7
date	2003.01.20.18.14.06;	author marc;	state dead;
branches;
next	1.6;

1.6
date	2002.05.01.08.03.30;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.12.21.48.03;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.12.24.00.15.08;	author alex;	state Exp;
branches;
next	1.3;

1.3
date	99.11.24.05.35.33;	author d;	state Exp;
branches;
next	1.2;

1.2
date	99.04.21.20.36.41;	author alex;	state Exp;
branches;
next	1.1;

1.1
date	98.11.09.03.13.16;	author d;	state Exp;
branches;
next	;


desc
@@


1.7
log
@
bye-bye libc_r sources.
the sources have been moved (with history) to /usr/src/lib/libpthread
@
text
@.\" $OpenBSD: pthread_rwlockattr_setpshared.3,v 1.6 2002/05/01 08:03:30 mpech Exp $
.\" Copyright (c) 1998 Alex Nash
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: pthread_rwlockattr_setpshared.3,v 1.2 1999/08/28 00:03:11 peter Exp $
.\"
.Dd August 4, 1998
.Dt PTHREAD_RWLOCKATTR_SETPSHARED 3
.Os
.Sh NAME
.Nm pthread_rwlockattr_setpshared
.Nd set the process shared attribute
.Sh SYNOPSIS
.Fd #include <pthread.h>
.Ft int
.Fn pthread_rwlockattr_setpshared "pthread_rwlockattr_t *attr" "int pshared"
.Sh DESCRIPTION
The
.Fn pthread_rwlockattr_setpshared
function sets the process shared attribute of
.Fa attr
to the value referenced by
.Fa pshared .
.Fa pshared
may be one of two values:
.Bl -hang -offset flag -width 123456789012345678901234
.It Ar PTHREAD_PROCESS_SHARED
Any thread of any process that has access to the memory where the
read/write lock resides can manipulate the lock.
.It Ar PTHREAD_PROCESS_PRIVATE
Only threads created within the same process as the thread that
initialized the read/write lock can manipulate the lock.
This is the default value.
.El
.Sh RETURN VALUES
If successful, the
.Fn pthread_rwlockattr_setpshared
function will return zero.
Otherwise an error number will be returned to indicate the error.
.Sh SEE ALSO
.Xr pthread_rwlock_init 3 ,
.Xr pthread_rwlockattr_init 3 ,
.Xr pthread_rwlockattr_setpshared 3
.Sh STANDARDS
The
.Fn pthread_rwlockattr_setpshared
function is expected to conform to
.St -susv2 .
.Sh ERRORS
.Fn pthread_rwlockattr_setpshared
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value specified by
.Fa attr
or
.Fa pshared
is invalid.
.El
.Sh HISTORY
The
.Fn pthread_rwlockattr_setpshared
function first appeared in
.Fx 3.0
and
.Ox 2.5 .
.Sh BUGS
The PTHREAD_PROCESS_SHARED attribute is not supported.
@


1.6
log
@o) start new sentence on a new line;
o) always close .Bl tags;
o) fix usage of .Xr;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_rwlockattr_setpshared.3,v 1.5 2000/04/12 21:48:03 aaron Exp $
@


1.5
log
@Trailing whitespace begone!
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_rwlockattr_setpshared.3,v 1.4 1999/12/24 00:15:08 alex Exp $
d53 2
a54 2
initialized the read/write lock can manipulate the lock.  This is
the default value.
d59 2
a60 2
function will return zero.  Otherwise an error number will be returned
to indicate the error.
@


1.4
log
@Fix synopsis.  bde@@freebsd.org
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_rwlockattr_setpshared.3,v 1.3 1999/11/24 05:35:33 d Exp $
d85 1
a85 1
.Fx 3.0 
@


1.3
log
@Add FreeBSD tags
@
text
@d1 1
a1 1
.\" $OpenBSD$
d37 1
a37 1
.Fn pthread_rwlockattr_setpshared "pthread_rwlockattr_t *attr" "int *pshared"
@


1.2
log
@This is OpenBSD.
@
text
@d1 1
d26 1
a26 2
.\"	$Id: pthread_rwlockattr_setpshared.3,v 1.1 1998/11/09 03:13:16 d Exp $
.\"	$OpenBSD: pthread_rwlockattr_setpshared.3,v 1.1 1998/11/09 03:13:16 d Exp $
d85 2
@


1.1
log
@sync with FreeBSD (rwlock, gc thread, man pages)
add (broken) mips md stuff
fix some const warnings
add sigaltstack() stub
another hash at getting shlib auto-init to work (mips/elf and i386/a.out)
@
text
@d25 2
a26 2
.\"	$Id: pthread_rwlockattr_setpshared.3,v 1.1 1998/09/07 19:01:43 alex Exp $
.\"	$OpenBSD$
d85 1
a85 1
.Fx 3.0 .
@

