head	1.11;
access;
symbols
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@.\" @;


1.11
date	2003.01.20.18.14.06;	author marc;	state dead;
branches;
next	1.10;

1.10
date	2002.05.01.08.03.30;	author mpech;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.21.20.12.19;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2001.12.07.15.47.44;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.24.18.17.30;	author jasoni;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.10.11.45.35;	author d;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.22.13.59.29;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.11.24.05.35.31;	author d;	state Exp;
branches;
next	1.3;

1.3
date	99.05.16.19.55.46;	author alex;	state Exp;
branches;
next	1.2;

1.2
date	99.03.10.10.04.41;	author d;	state Exp;
branches;
next	1.1;

1.1
date	99.01.17.23.57.28;	author d;	state Exp;
branches;
next	;


desc
@@


1.11
log
@
bye-bye libc_r sources.
the sources have been moved (with history) to /usr/src/lib/libpthread
@
text
@.\" $OpenBSD: pthread_cancel.3,v 1.10 2002/05/01 08:03:30 mpech Exp $
.\"
.Dd January 17, 1999
.Dt PTHREAD_CANCEL 3
.Os
.Sh NAME
.Nm pthread_cancel
.Nd cancel execution of a thread
.Sh SYNOPSIS
.Fd #include <pthread.h>
.Ft int
.Fn pthread_cancel "pthread_t thread"
.Sh DESCRIPTION
The
.Fn pthread_cancel
function requests that
.Fa thread
be cancelled.
The target thread's cancelability state and type determines
when the cancellation takes effect.
When the cancellation is acted on, the cancellation cleanup handlers for
.Fa thread
are called.
When the last cancellation cleanup handler returns,
the thread-specific data destructor functions will be called for
.Fa thread .
When the last destructor function returns,
.Fa thread
will be terminated.
.Pp
The cancellation processing in the target thread runs asynchronously with
respect to the calling thread returning from
.Fn pthread_cancel .
.Pp
A status of
.Dv PTHREAD_CANCELED
is made available to any threads joining with the target.
The symbolic constant
.Dv PTHREAD_CANCELED
expands to a constant expression of type
.Ft "(void *)"
whose value matches no pointer to an object in memory nor the value
.Dv NULL .
.Sh RETURN VALUES
If successful, the
.Fn pthread_cancel
functions will return zero.
Otherwise an error number will be returned to indicate the error.
.Sh ERRORS
.Fn pthread_cancel
will fail if:
.Bl -tag -width Er
.It Bq Er ESRCH
No thread could be found corresponding to that specified by the given
thread ID.
.El
.Sh SEE ALSO
.Xr pthread_cleanup_pop 3 ,
.Xr pthread_cleanup_push 3 ,
.Xr pthread_exit 3 ,
.Xr pthread_join 3 ,
.Xr pthread_setcancelstate 3 ,
.Xr pthread_setcanceltype 3 ,
.Xr pthread_testcancel 3
.Sh STANDARDS
.Fn pthread_cancel
conforms to
.St -p1003.1-96 .
@


1.10
log
@o) start new sentence on a new line;
o) always close .Bl tags;
o) fix usage of .Xr;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_cancel.3,v 1.9 2002/02/21 20:12:19 fgsch Exp $
@


1.9
log
@Use .St for standards. Random cleanups as well.
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_cancel.3,v 1.8 2001/12/07 15:47:44 fgsch Exp $
d18 4
a21 3
be cancelled. The target thread's cancelability state and type determines
when the cancellation takes effect. When the cancellation is acted on,
the cancellation cleanup handlers for
d23 2
a24 1
are called. When the last cancellation cleanup handler returns,
d37 2
a38 2
is made available to any threads joining with the target. The symbolic
constant
d47 2
a48 2
functions will return zero. Otherwise an error number will be returned to
indicate the error.
@


1.8
log
@o point pthread_setcancel(type|state) manpages where they belong.
o remove functions from pthread_cancel(3).
@
text
@d1 2
a2 1
.\" $OpenBSD: pthread_cancel.3,v 1.7 2001/06/24 18:17:30 jasoni Exp $
d65 2
a66 3
conform to ISO/IEC 9945-1 ANSI/IEEE
.Pq Dq Tn POSIX
Std 1003.1 Second Edition 1996-07-12.
@


1.7
log
@grammar
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_cancel.3,v 1.6 2000/02/10 11:45:35 d Exp $
d6 1
a6 3
.Nm pthread_cancel ,
.Nm pthread_setcancelstate ,
.Nm pthread_setcanceltype
a11 4
.Ft int
.Fn pthread_setcancelstate "int state" "int *oldstate"
.Ft int
.Fn pthread_setcanceltype "int type" "int *oldtype"
d63 1
a63 4
.Fn pthread_cancel ,
.Fn pthread_setcancelstate ,
and
.Fn pthread_setcanceltype
@


1.6
log
@document existence of pthread_setcancelstate and pthread_setcanceltype
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_cancel.3,v 1.5 2000/01/22 13:59:29 aaron Exp $
d48 1
a48 1
If successful,  the
@


1.5
log
@canceled -> cancelled
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_cancel.3,v 1.4 1999/11/24 05:35:31 d Exp $
d6 3
a8 1
.Nm pthread_cancel
d14 4
d44 1
a44 1
.Ft "(void *)" ,
d69 5
a73 2
.Fn pthread_cancel
conforms to ISO/IEC 9945-1 ANSI/IEEE
@


1.4
log
@Add FreeBSD tags
@
text
@d1 1
a1 1
.\" $OpenBSD$
d17 1
a17 1
be canceled. The target thread's cancelability state and type determines
@


1.3
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
@


1.2
log
@Fix .Os so that correct OS version appears
@
text
@a53 3
.Xr pthread_testcancel 3 ,
.Xr pthread_setcancelstate 3 ,
.Xr pthread_setcanceltype 3 ,
d57 4
a60 1
.Xr pthread_join 3
@


1.1
log
@pthread_cancel() and cancellation points
@
text
@d3 1
a3 1
.Os BSD 4
@

