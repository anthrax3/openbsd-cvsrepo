head	1.32;
access;
symbols
	OPENBSD_3_2:1.26.0.2
	OPENBSD_3_2_BASE:1.26
	OPENBSD_3_1:1.22.0.2
	OPENBSD_3_1_BASE:1.22
	OPENBSD_3_0:1.19.0.2
	OPENBSD_3_0_BASE:1.19
	OPENBSD_2_9:1.14.0.2
	OPENBSD_2_9_BASE:1.14
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@# @;


1.32
date	2003.01.20.18.14.05;	author marc;	state dead;
branches;
next	1.31;

1.31
date	2002.12.03.06.39.39;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2002.12.02.09.00.16;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2002.11.21.20.45.05;	author marc;	state Exp;
branches;
next	1.28;

1.28
date	2002.10.30.20.16.50;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2002.10.16.16.10.24;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2002.06.28.01.44.53;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2002.06.10.14.59.01;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	2002.04.19.15.48.35;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2002.04.17.16.00.34;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2002.02.23.18.29.20;	author drahn;	state Exp;
branches;
next	1.21;

1.21
date	2001.10.30.17.01.07;	author tdeval;	state Exp;
branches;
next	1.20;

1.20
date	2001.10.24.08.16.42;	author jjbg;	state Exp;
branches;
next	1.19;

1.19
date	2001.10.01.20.36.17;	author markus;	state Exp;
branches;
next	1.18;

1.18
date	2001.08.06.20.14.47;	author jakob;	state Exp;
branches;
next	1.17;

1.17
date	2001.06.26.21.12.33;	author dugsong;	state Exp;
branches;
next	1.16;

1.16
date	2001.06.18.18.11.14;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2001.05.15.21.14.39;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2001.03.09.18.14.06;	author art;	state Exp;
branches;
next	1.13;

1.13
date	2001.03.04.21.22.07;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2001.01.31.17.42.25;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2000.11.21.00.51.46;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.17.21.59.37;	author provos;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.20.19.04.08;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.01.23.13.19;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.20.07.09.00;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.21.22.19.04;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.06.15.20.56;	author d;	state Exp;
branches;
next	1.4;

1.4
date	99.11.28.11.31.24;	author d;	state Exp;
branches;
next	1.3;

1.3
date	99.06.29.19.39.35;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.06.15.03.16.18;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.08.27.09.00.33;	author d;	state Exp;
branches;
next	;


desc
@@


1.32
log
@
bye-bye libc_r sources.
the sources have been moved (with history) to /usr/src/lib/libpthread
@
text
@major=7
minor=0
@


1.31
log
@Crank all library major numbers.  Needed due to the fact that we
now build libraries with propolice enabled.  Without this, existing
binaries (such as ports/packages) that link with any system library
other than libc will fail with an undefined symbol of "___guard"
(__guard on ELF).
Pointed out by markus@@ and discussed with deraadt@@
@
text
@@


1.30
log
@Import propolice (http://www.trl.ibm.com/projects/security/ssp), a stack
attack protection scheme, into gcc.

This protection is enabled by default. It can be turned off by using the
-fno-stack-protector flag.

Code by Hiroaki Etoh (etoh at jp dot ibm dot com); work on openbsd-specific
integration by fgsch@@, deraadt@@ and myself; tests by fgsch@@, naddy@@ and
myself; beer drinking by myself.

Please note that system upgrades with this new code will require a new
libc and ld.so to be build and installed before the propolice-enabled
compiler can be installed.
@
text
@d1 2
a2 2
major=6
minor=9
@


1.29
log
@
Add strerror_r and functions versions of getchar_unlocked and
putchar_unlocked.   Crank the minor on related libs.  OK fgs@@, deraadt@@
@
text
@d2 1
a2 1
minor=8
@


1.28
log
@Minor bump for [gs]etres[ug]id(2)
@
text
@d2 1
a2 1
minor=7
@


1.27
log
@Implement isfdtype(3) as per the POSIX.1g draft; requested by David Hill
@
text
@d2 1
a2 1
minor=6
@


1.26
log
@minor bump for readpassphrase() flag addition
@
text
@d2 1
a2 1
minor=5
@


1.25
log
@put back in the assert changes for ISO C 99 (put __func__ in it)
@
text
@d2 1
a2 1
minor=4
@


1.24
log
@avoid cranking libc minors for another few weeks
@
text
@d2 1
a2 1
minor=3
@


1.23
log
@Use __func__ in assert.
ok millert@@
@
text
@d2 1
a2 1
minor=4
@


1.22
log
@bump minor, EA support was added to libc.
@
text
@d2 1
a2 1
minor=3
@


1.21
log
@mprotect allocations sized at 0 bytes.  This will cause a fault for access
to such, permitting them to be discovered, instead of exploited as the ssh
crc insertion detector was.  Idea by theo, written by tdeval.
@
text
@d2 1
a2 1
minor=2
@


1.20
log
@syslog_r() implementation. deraadt@@ ok.
@
text
@d2 1
a2 1
minor=1
@


1.19
log
@new rmd160 implementation.  based on
ftp://ftp.rsasecurity.com/pub/cryptobytes/crypto3n2.pdf, ok deraadt@@
@
text
@d2 1
a2 1
minor=0
@


1.18
log
@bump minor; getrrsetbyname(3) in libc
@
text
@d1 2
a2 2
major=5
minor=3
@


1.17
log
@crank minor version
@
text
@d2 1
a2 1
minor=2
@


1.16
log
@Add new cgetusedb() function to toggle reading of .db files in getcap(3).
Needed for cap_mkdb to really DRT when given several input files or
an output file with a different name from the input file.
cvs: ----------------------------------------------------------------------
@
text
@d2 1
a2 1
minor=1
@


1.15
log
@Make path length variables size_t.  This fixes the problem where
things like rm can't remove files with ridiculously long path names
that were created by some script kiddie trying in vain to exploit
something.  Previously, the length was effectively constrained to
USHRT_MAX due to one of the internal structs.  Also, nuke FTS_CHDIRROOT
since it never worked correctly and hasn't been documented for a
long time.
@
text
@d2 1
a2 1
minor=0
@


1.14
log
@m{,un}lockall
@
text
@d1 2
a2 2
major=4
minor=2
@


1.13
log
@Forgot commit, oops.
@
text
@d2 1
a2 1
minor=1
@


1.12
log
@move utmp to large format, usernames to 32 chars; downsj
@
text
@d2 1
a2 1
minor=0
@


1.11
log
@crank minor number
@
text
@d1 2
a2 2
major=3
minor=3
@


1.10
log
@crank minor
@
text
@d2 1
a2 1
minor=2
@


1.9
log
@Crank minor to correspond to login.conf changes in libc
@
text
@d2 1
a2 1
minor=1
@


1.8
log
@bye bye semconfig(2)
@
text
@d2 1
a2 1
minor=0
@


1.7
log
@bump because of p{read,write}{,v}
@
text
@d1 2
a2 2
major=2
minor=2
@


1.6
log
@Increment the minor number for fseeko()/ftello() addition.
@
text
@d2 1
a2 1
minor=1
@


1.5
log
@happy with non-weak testing. bump major versions just in case.
@
text
@d2 1
a2 1
minor=0
@


1.4
log
@bump
@
text
@d1 2
a2 2
major=1
minor=2
@


1.3
log
@temporary crank
@
text
@d2 1
a2 1
minor=1
@


1.2
log
@this should definately have been cranked before
@
text
@d2 1
a2 1
minor=0
@


1.1
log
@experimental threaded libc - kernel only
@
text
@d1 1
a1 1
major=0
@

