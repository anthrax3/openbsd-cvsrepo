head	1.2;
access;
symbols
	OPENBSD_3_2:1.1.0.16
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.14
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.12
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.10
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.20.18.14.05;	author marc;	state dead;
branches;
next	1.1;

1.1
date	99.01.17.23.40.01;	author d;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
bye-bye libc_r sources.
the sources have been moved (with history) to /usr/src/lib/libpthread
@
text
@#include <pthread.h>
#include <string.h>
#include <err.h>
#include "bench.h"

static char name[] =  "Condition Variable Signal/Broadcast, No Waiters";
static char doc[] = 
"\tThis is the amount of time needed to execute pthread_cond_signal()\n"
"\tor pthread_cond_broadcast() if there are no threads blocked on\n"
"\tthe condition.";

int
main() {
	pthread_cond_t c;
	bench_t b;

	bench_init(&b, name, doc, "per call of pthread_cond_signal()");
	bench_header(&b);
	pthread_cond_init(&c, NULL);
	bench_amortize(&b, BENCH_LOOPS) {
		pthread_cond_signal(&c);
	}
	bench_report(&b);

	bench_init(&b, NULL, NULL, "per call of pthread_cond_broadcast()");
	pthread_cond_init(&c, NULL);
	bench_amortize(&b, BENCH_LOOPS) {
		pthread_cond_broadcast(&c);
	}
	bench_report(&b);

	exit(0);
}


@


1.1
log
@some performance metrics
@
text
@@

