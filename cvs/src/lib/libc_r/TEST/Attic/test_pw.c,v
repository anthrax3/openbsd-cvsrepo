head	1.6;
access;
symbols
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2001.08.15.14.43.15;	author fgsch;	state dead;
branches;
next	1.5;

1.5
date	2000.03.23.05.18.33;	author d;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.06.06.58.34;	author d;	state Exp;
branches;
next	1.3;

1.3
date	99.11.28.11.27.20;	author d;	state Exp;
branches;
next	1.2;

1.2
date	99.01.10.22.57.08;	author d;	state Exp;
branches;
next	1.1;

1.1
date	98.09.03.11.04.46;	author d;	state Exp;
branches;
next	;


desc
@@


1.6
log
@TEST has moved to regress/lib/libc_r.
@
text
@/*	$OpenBSD: test_pw.c,v 1.5 2000/03/23 05:18:33 d Exp $	*/
#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <pwd.h>
#include "test.h"

int
main()
{
	struct passwd *pw;
	struct passwd pwbuf;
	char buf[8192];
	char name[16];

	CHECKn(pw = getpwuid(getuid()));
	printf("getpwuid(%d) => %p\n", getuid(), pw);
	printf(" name: %s\n  uid: %d\n  gid: %d\n"
	    "class: %s\ngecos: %s\n  dir: %s\nshell: %s\n",
	    pw->pw_name, pw->pw_uid, pw->pw_gid,
	    pw->pw_class, pw->pw_gecos, pw->pw_dir, pw->pw_shell);

	strlcpy(name, pw->pw_name, sizeof name);
	CHECKe(getpwnam_r(name, &pwbuf, buf, sizeof buf, &pw));
	ASSERT(pwbuf.pw_uid == getuid());

	SUCCEED;
}
@


1.5
log
@test re-entrant getpwnam_r
@
text
@d1 1
a1 1
/*	$OpenBSD: test_pw.c,v 1.4 2000/01/06 06:58:34 d Exp $	*/
@


1.4
log
@ident, clean
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d12 3
d22 5
@


1.3
log
@remove redundant macro
@
text
@d1 1
@


1.2
log
@nice-ify
@
text
@d12 1
a12 1
	CHECKen(pw = getpwuid(getuid()));
@


1.1
log
@libpthread tests modified for uthreads
@
text
@d5 1
d10 1
a10 1
  struct passwd *pw;
d12 7
a18 10
  pw = getpwuid(getuid());
  if (!pw) {
    printf("getpwuid(%d) died!\n", getuid());
    exit(1);
  }
  printf("getpwuid(%d) => %p\n", getuid(), pw);
  printf("  you are: %s\n  uid: %d\n  gid: %d\n  class: %s\n  gecos: %s\n  dir: %s\n  shell: %s\n",
	 pw->pw_name, pw->pw_uid, pw->pw_gid, pw->pw_class, pw->pw_gecos, pw->pw_dir,
	 pw->pw_shell);
  exit(0);
@

