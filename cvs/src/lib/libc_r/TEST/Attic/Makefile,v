head	1.23;
access;
symbols
	OPENBSD_2_9:1.22.0.4
	OPENBSD_2_9_BASE:1.22
	OPENBSD_2_8:1.22.0.2
	OPENBSD_2_8_BASE:1.22
	OPENBSD_2_7:1.18.0.2
	OPENBSD_2_7_BASE:1.18
	OPENBSD_2_6:1.10.0.4
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@# @;


1.23
date	2001.08.15.14.43.15;	author fgsch;	state dead;
branches;
next	1.22;

1.22
date	2000.10.12.00.55.21;	author brad;	state Exp;
branches;
next	1.21;

1.21
date	2000.10.04.05.50.58;	author d;	state Exp;
branches;
next	1.20;

1.20
date	2000.08.07.01.51.29;	author brad;	state Exp;
branches;
next	1.19;

1.19
date	2000.08.07.01.23.58;	author brad;	state Exp;
branches;
next	1.18;

1.18
date	2000.02.10.11.42.07;	author d;	state Exp;
branches;
next	1.17;

1.17
date	2000.01.08.08.05.43;	author d;	state Exp;
branches;
next	1.16;

1.16
date	2000.01.06.16.59.18;	author d;	state Exp;
branches;
next	1.15;

1.15
date	2000.01.06.16.20.07;	author d;	state Exp;
branches;
next	1.14;

1.14
date	2000.01.06.07.00.02;	author d;	state Exp;
branches;
next	1.13;

1.13
date	99.12.02.02.44.34;	author d;	state Exp;
branches;
next	1.12;

1.12
date	99.11.30.00.50.30;	author d;	state Exp;
branches;
next	1.11;

1.11
date	99.11.30.00.47.18;	author d;	state Exp;
branches;
next	1.10;

1.10
date	99.03.24.23.19.56;	author d;	state Exp;
branches;
next	1.9;

1.9
date	99.03.24.00.22.56;	author d;	state Exp;
branches;
next	1.8;

1.8
date	99.03.10.09.23.54;	author d;	state Exp;
branches;
next	1.7;

1.7
date	99.02.01.08.50.18;	author d;	state Exp;
branches;
next	1.6;

1.6
date	99.01.19.01.47.54;	author d;	state Exp;
branches;
next	1.5;

1.5
date	99.01.18.00.00.33;	author d;	state Exp;
branches;
next	1.4;

1.4
date	99.01.10.22.57.03;	author d;	state Exp;
branches;
next	1.3;

1.3
date	98.12.23.06.50.21;	author d;	state Exp;
branches;
next	1.2;

1.2
date	98.12.10.00.31.38;	author d;	state Exp;
branches;
next	1.1;

1.1
date	98.09.03.11.04.43;	author d;	state Exp;
branches;
next	;


desc
@@


1.23
log
@TEST has moved to regress/lib/libc_r.
@
text
@# $OpenBSD: Makefile,v 1.22 2000/10/12 00:55:21 brad Exp $
# Copyright (c) 1993 Chris Provenzano, proven@@athena.mit.edu

LIBC_R?=	/usr/lib/libc_r.a
LIBPTHREAD?=	/usr/lib/libpthread.a

.if 1 # ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "sparc"
PTHREAD=	-lpthread
DPADD +=	${LIBPTHREAD}
.else
PTHREAD=	-pthread
DPADD +=	${LIBC_R}
.endif

CFLAGS +=	-Wall # -Werror
DEBUG =		-ggdb
CFLAGS +=	-DSRCDIR='"${.CURDIR}"'
LDLIBS +=	${PTHREAD} -lm  ${LDSTATIC}
MKDEP =		-p ${PTHREAD}

# This list used to include test_select, but that test doesn't terminate.
TESTS = test_create test_pthread_join test_switch test_sleep test_readdir \
	test_fork test_execve test_preemption test_setjmp \
	test_sock_1 test_sock_2 test_stdio_1 test_pthread_mutex \
	test_pthread_cond_timedwait test_netdb test_cwd \
	test_sock_2a test_cancel test_sigsuspend test_sigwait \
	test_select test_poll test_signal test_stdarg test_close \
	test_group

SRCS =		${TESTS:=.c}
CLEANFILES +=	${TESTS} 
SKIP_TESTS +=	test_sock_2a

all : tests

MAXTIME=	5

tests : ${TESTS}
	@@faillist= ; \
	for i in ${.ALLSRC} ; do \
	  case " ${SKIP_TESTS} " in \
	  *" $$i "*) \
		  : skip ;; \
	  *) \
		  echo ; echo "*** $$i ***"; \
		  if (ulimit -t ${MAXTIME}; ${.OBJDIR}/$$i); then \
			  echo "-- $$i passed"; \
		  else \
			  echo "-- $$i FAILED (exit code $$?)" >&2; \
			  faillist="$$faillist $$i"; \
		  fi;; \
	  esac; \
	done; \
	if test -n "$$faillist"; then \
		echo; echo "*** tests that failed:$$faillist" >&2; exit 1; \
	else \
		echo; echo "All tests passed OK."; exit 0; \
	fi

.include <bsd.prog.mk>
.include <bsd.dep.mk>
@


1.22
log
@refix breakage in previous commit, d@@ forgot to remove his change while
testing libpthread on sparc (which is not built by default ... yet).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2000/10/04 05:50:58 d Exp $
@


1.21
log
@bit of a cleanup
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2000/08/07 01:51:29 brad Exp $
d7 1
a7 1
.if ${MACHINE_ARCH} == "sparc"
@


1.20
log
@remove test_pw until we get getpwnam_r() back
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2000/08/07 01:23:58 brad Exp $
d7 1
a7 1
.if 1 # ${MACHINE_ARCH} == "i386"
d36 2
d39 1
a39 1
	@@faillist= ; ulimit -t 10; \
d46 1
a46 1
		  if ${.OBJDIR}/$$i; then \
d49 1
a49 1
			  echo "-- $$i FAILED (exit code $$?)"; \
d55 1
a55 1
		echo; echo "*** tests that failed:$$faillist"; exit 1; \
@


1.19
log
@this obviously wasn't tested, fix check. We don't even build libpthread by
default on i386 yet.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2000/02/10 11:42:07 d Exp $
d25 1
a25 1
	test_pthread_cond_timedwait test_netdb test_pw test_cwd \
@


1.18
log
@ident. fix comment.
@
text
@d1 1
a1 1
# $OpenBSD$
d7 4
a10 1
.if 1 # ${MACHINE_ARCH} != "i386"
a12 3
.else
PTHREAD=	-lpthread
DPADD +=	${LIBPTHREAD}
@


1.17
log
@test getgrent stuff
@
text
@d1 1
a1 2
# Generated automatically from Makefile.in by configure.
# === GNUmakefile ============================================================
a2 6
#
#	Description: This file is for creating the test programs for libpthread.a
#
#	1.00 93/08/03 proven
#		-Initial cut for pthreads.
#
@


1.16
log
@for now, use -lpthread on i386. one day every arch will do this...
@
text
@d14 1
a14 1
.if ${MACHINE_ARCH} != "i386"
d34 2
a35 1
	test_select test_poll test_signal test_stdarg test_close
@


1.15
log
@abstract -pthread switch into PTHREAD var
@
text
@d12 1
d14 1
d16 5
a25 1
DPADD +=	${LIBC_R}
@


1.14
log
@use new tests, and -lpthread
@
text
@d13 2
d18 1
a18 1
LDLIBS +=	-lpthread -lm  ${LDSTATIC}
d20 1
a20 1
MKDEP =		-p -lpthread
@


1.13
log
@add setjmp test
@
text
@d16 1
a16 1
LDLIBS +=	-pthread -lm  ${LDSTATIC}
d18 1
a18 1
MKDEP =		-p -pthread
d26 1
a26 1
	test_select test_poll
@


1.12
log
@set the ulimit a little higher for test_preemption
@
text
@d22 1
a22 1
	test_fork test_execve test_preemption \
@


1.11
log
@enable test_select and test_poll
@
text
@d35 1
a35 1
	@@faillist= ; ulimit -t 5; \
@


1.10
log
@allow make depend to work
@
text
@d25 2
a26 1
	test_sock_2a test_cancel test_sigsuspend test_sigwait
@


1.9
log
@revert to -pthread
@
text
@d18 1
a18 1
MKDEP =		-p
@


1.8
log
@define and use a SET_NAME macro so that these tests work under other thread implementations
@
text
@d16 1
a16 1
LDLIBS +=	-lpthread -lm  ${LDSTATIC}
@


1.7
log
@add test_sigsuspend test_sigwait
@
text
@d13 2
a14 3
CPPFLAGS +=	-pthread
LDFLAGS +=	-pthread
CFLAGS +=	-ggdb -Wall # -Werror
d16 1
a16 1
LDLIBS +=	-lm
@


1.6
log
@performance metrics are now elsewhere
@
text
@d26 1
a26 1
	test_sock_2a test_cancel
@


1.5
log
@sync with previous changes
@
text
@d32 1
a32 11
# This list used to include p_bench_semaphore, but the semaphore support isn't
# defined for all targets (or used for any).

BENCHMARKS = p_bench_read p_bench_mutex p_bench_yield \
	p_bench_getpid p_bench_pthread_create

SRCS +=		${BENCHMARKS:=.c}
CLEANFILES +=	${BENCHMARKS} 


all : tests # benchmarks
a54 2

benchmarks: ${BENCHMARKS}
@


1.4
log
@nice-ify
@
text
@d26 1
a26 1
	test_sock_2a
@


1.3
log
@nicer tests
@
text
@d13 2
a14 1
CFLAGS +=	-pthread
d19 1
d23 1
a23 1
	test_fork test_execve test_preemption test_preemption_float \
d28 4
d34 1
d38 2
a39 1
CLEANFILES += ${TESTS} ${BENCHMARKS} 
a40 1
SKIP_TESTS =	test_sock_2a
d45 1
a45 1
	@@faillist= ; ulimit -t 600; \
d61 1
a61 1
		echo; echo "*** FAILED TESTS:$$faillist"; exit 1; \
d63 1
a63 1
		exit 0; \
d69 1
@


1.2
log
@tests are now useful
@
text
@d38 5
a42 4
	@@for i in ${.ALLSRC} ; do \
	  echo ; echo "*** $$i ***"; \
	  case " ${SKIP_TESTS} " in *" $$i "*) \
		  echo "-- $$i skipped";; \
d44 7
a50 6
	  if ${.OBJDIR}/$$i; then \
		  echo "-- $$i passed"; \
	  else \
		  echo "-- $$i FAILED (exit code $$?)"; \
		  : exit 1; \
	  fi;; \
d52 6
a57 1
	done; exit 0
@


1.1
log
@libpthread tests modified for uthreads
@
text
@d23 2
a24 1
	test_pthread_cond_timedwait test_netdb test_pw test_cwd
d33 2
d40 3
d47 3
a49 2
		  exit 1; \
	  fi; \
@

