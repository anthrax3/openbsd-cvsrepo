head	1.5;
access;
symbols
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2001.08.15.14.43.15;	author fgsch;	state dead;
branches;
next	1.4;

1.4
date	2001.08.12.12.05.45;	author d;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.04.05.50.58;	author d;	state Exp;
branches;
next	1.2;

1.2
date	2000.01.04.02.31.44;	author d;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.04.00.18.15;	author d;	state Exp;
branches;
next	;


desc
@@


1.5
log
@TEST has moved to regress/lib/libc_r.
@
text
@/*	$OpenBSD: test_stdarg.c,v 1.4 2001/08/12 12:05:45 d Exp $	*/
/* David Leonard <d@@openbsd.org>, 2001. Public Domain. */
/*
 * Test <stdarg.h>
 */

#include <pthread.h>
#include <stdio.h>
#include <stdarg.h>
#include "test.h"

#define EQ(v,exp) _CHECK(v, == exp, NULL) 

int thing;

int
test1(char *fmt, ...)
{
	va_list	ap;

	char	ch;
	int	i;
	char	c;
	long	l;
	void 	*p;
	char 	*ofmt = fmt;

	va_start(ap, fmt);
	for (; *fmt; fmt++)
	    switch ((ch =*fmt)) {
	    case 'i':		
		i = va_arg(ap, int); 
		EQ(i, 1234);
		break;
	    case 'c':		
		c = va_arg(ap, char); 
		EQ(c, 'x');
		break;
	    case 'l':		
		l = va_arg(ap, long); 
		EQ(l, 123456789L);
		break;
	    case 'p':		
		p = va_arg(ap, void *); 
		EQ(p, &thing);
		break;
	    default:
		fprintf(stderr, "unexpected character 0x%02x `%c' in %s(%p) at %p\n",
			ch, ch, ofmt, ofmt, fmt);
		ASSERT(0);
	    }
	va_end(ap);
	return 9;
}

void * 
run_test(arg)
	void *arg;
{
	char *msg = (char *)arg;
	int i;

	SET_NAME(msg);

	puts(msg);
	for (i = 0; i < 1000000; i++) {
		ASSERT(test1("iclp", 1234, 'x', 123456789L, &thing) == 9);
	}
	printf("ok\n");
	return NULL;
}

int
main()
{
	pthread_t t1, t2;

	printf("trying loop in single-threaded mode:\n");
	run_test("main");
	printf("now running loop with 2 threads:\n");
	CHECKr(pthread_create(&t1, NULL, run_test, "child 1"));
	CHECKr(pthread_create(&t2, NULL, run_test, "child 2"));
	CHECKr(pthread_join(t1, NULL));
	CHECKr(pthread_join(t2, NULL));
	SUCCEED;
}
@


1.4
log
@public domain
@
text
@d1 1
a1 1
/*	$OpenBSD: test_stdarg.c,v 1.3 2000/10/04 05:50:58 d Exp $	*/
@


1.3
log
@bit of a cleanup
@
text
@d1 2
a2 1
/*	$OpenBSD: test_stdarg.c,v 1.2 2000/01/04 02:31:44 d Exp $	*/
@


1.2
log
@fix bugs in test. now succeeds
@
text
@d1 1
a1 1
/*	$OpenBSD: test_stdarg.c,v 1.1 2000/01/04 00:18:15 d Exp $	*/
d11 2
d20 1
d24 2
a25 1
	void *	p;
d29 1
a29 1
	    switch (*fmt) {
d32 1
a32 1
		ASSERT(i == 1234);
d36 1
a36 1
		ASSERT(c == 'x');
d40 1
a40 1
		ASSERT(l == 123456789L);
d44 1
a44 1
		ASSERT(p == &thing);
d47 2
d62 3
a64 1
	printf("Testing stdarg: %s\n", msg);
d77 5
a81 3
	run_test("in main thread");
	CHECKr(pthread_create(&t1, NULL, run_test, "in child thread 1"));
	CHECKr(pthread_create(&t2, NULL, run_test, "in child thread 2"));
@


1.1
log
@Test stdarg for fgsch@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d25 1
a25 1
	    switch (*fmt++) {
d54 1
d57 4
a60 1
	ASSERT(test1("iclp", 1234, 'x', 123456789L, &thing) == 9);
d67 1
a67 1
	pthread_t thread;
d70 4
a73 2
	CHECKr(pthread_create(&thread, NULL, run_test, "in child thread"));
	CHECKr(pthread_join(thread, NULL));
@

