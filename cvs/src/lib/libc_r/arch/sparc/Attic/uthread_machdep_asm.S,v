head	1.6;
access;
symbols
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2003.01.20.18.14.06;	author marc;	state dead;
branches;
next	1.5;

1.5
date	2001.12.18.06.24.13;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.18.06.23.08;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.18.03.44.40;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.19.39.27;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.25.01.16.40;	author d;	state Exp;
branches;
next	;


desc
@@


1.6
log
@
bye-bye libc_r sources.
the sources have been moved (with history) to /usr/src/lib/libpthread
@
text
@/*	$OpenBSD: uthread_machdep_asm.S,v 1.5 2001/12/18 06:24:13 fgsch Exp $	*/
/* David Leonard <d@@csee.uq.edu.au>. Public domain. */

#include <machine/asm.h>
#include <machine/trap.h>

/*
 * Switch stacks.
 * On sparc this also means we switch register windows.
 */

#ifdef __sparcv9__
#define flushw		.word 0x81580000
#else
#define flushw		t ST_FLUSHWIN
#endif

#define SA(x)	(((x)+7)&(~0x7))
#define MINFRAME ((16+1+6)*4)	

/*
 * void _thread_machdep_switch(newstate, oldstate);
 *	struct _machdep_state *newstate, *oldstate;
 */
ENTRY(_thread_machdep_switch)

	/* new window */
	save	%sp, -SA(MINFRAME), %sp

	/* flush all windows (except current one) into memory frames */
	flushw

	/* switch the stack pointer and return address */
	st 	%fp, [%i1 + 0]
	st	%i7, [%i1 + 4]
	ld	[%i0 + 0], %fp
	ld	[%i0 + 4], %i7

	/* return to saved window at new %fp */
	ret
	restore

@


1.5
log
@sigh, do it right.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.4 2001/12/18 06:23:08 fgsch Exp $	*/
@


1.4
log
@Fix func decl. in comment.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.3 2001/12/18 03:44:40 marc Exp $	*/
d22 1
a22 1
 * void _thread_switch(newstate, oldstate);
@


1.3
log
@
Software invoked traps should use the ST_ versions of the trap number
with the high bit of the trap number stripped per the V8 arch manual.

The stack alignment code was broken.  It tried to align to a 32 byte
boundary (only 8 byte boundary is required) by first adding 15 bytes
then masking.  It could have aligned down.

The minimum frame size was twice the size needed by allocating 8
bytes per saved value instead of the needed 4.   This bug offset
the bug in the stack alignment code.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.2 2001/09/10 19:39:27 jason Exp $	*/
d21 4
a24 1
/* void _thread_switch(int newstate[2], int savestate[2], int flags); */
@


1.2
log
@Our gcc defines __sparcv9__ not __sparc_v9__
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.1 2000/09/25 01:16:40 d Exp $	*/
d15 1
a15 1
#define flushw		t T_FLUSHWIN
d18 2
a19 2
#define SA(x)	(((x)+15)&(~0x1f))
#define MINFRAME ((16+1+6)*8)	
@


1.1
log
@preparation for switch-based threads
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d12 1
a12 1
#ifdef __sparc_v9__
@

