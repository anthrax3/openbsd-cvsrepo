head	1.3;
access;
symbols
	OPENBSD_3_2:1.2.0.8
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2003.01.20.18.14.05;	author marc;	state dead;
branches;
next	1.2;

1.2
date	2001.03.13.00.05.51;	author d;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.25.01.16.40;	author d;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
bye-bye libc_r sources.
the sources have been moved (with history) to /usr/src/lib/libpthread
@
text
@/*	 $OpenBSD: uthread_machdep.c,v 1.2 2001/03/13 00:05:51 d Exp $	*/
/* David Leonard, <d@@csee.uq.edu.au>. Public domain. */

/*
 * Machine-dependent thread state functions for OpenBSD/i386.
 */

#include <machine/param.h>
#include <pthread.h>
#include "pthread_private.h"

struct frame {
	int	fr_gs;
	int	fr_fs;
	int	fr_es;
	int	fr_ds;

	int	fr_edi;
	int	fr_esi;
	int	fr_ebp;
	int	fr_esp;
	int	fr_ebx;
	int	fr_edx;
	int	fr_ecx;
	int	fr_eax;

	int	fr_eip;
	int	fr_cs;		/* XXX unreachable? */
};

#define copyreg(reg, lval) \
	__asm__("mov %%" #reg ", %0" : "=g"(lval))

/*
 * Given a stack and an entry function, initialise a state
 * structure that can be later switched to.
 */
void
_thread_machdep_init(statep, base, len, entry)
        struct _machdep_state* statep;
        void *base;
        int len;
        void (*entry)(void);
{
	struct frame *f;

	/* Locate the initial frame, aligned at the top of the stack */
	f = (struct frame *)(((int)base + len - sizeof *f) & ~ALIGNBYTES);

	/* Set up initial frame */
	f->fr_esp = (int)&f->fr_edi;
	copyreg(cs, f->fr_cs);
	copyreg(ds, f->fr_ds);
	copyreg(es, f->fr_es);
	copyreg(fs, f->fr_fs);
	copyreg(gs, f->fr_gs);
	f->fr_ebp = (int)-1;
	f->fr_eip = (int)entry;

	statep->esp = (int)f;
}

void
_thread_machdep_save_float_state(ms)
	struct _machdep_state *ms;
{
	char *fdata = (char *)&ms->fpreg;

	__asm__("fsave %0"::"m" (*fdata));
}

void
_thread_machdep_restore_float_state(ms)
	struct _machdep_state *ms;
{
	char *fdata = (char *)&ms->fpreg;

	__asm__("frstor %0"::"m" (*fdata));
}

@


1.2
log
@typo in comment
@
text
@d1 1
a1 1
/*	 $OpenBSD: uthread_machdep.c,v 1.1 2000/09/25 01:16:40 d Exp $	*/
@


1.1
log
@preparation for switch-based threads
@
text
@d1 1
a1 1
/*	 $OpenBSD$	*/
d5 1
a5 1
 * Machine-dependent thread state functions for OpenBSD/sparc.
@

