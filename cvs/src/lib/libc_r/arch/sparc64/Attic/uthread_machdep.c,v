head	1.3;
access;
symbols
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2003.01.20.18.14.06;	author marc;	state dead;
branches;
next	1.2;

1.2
date	2002.01.02.19.12.43;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.10.20.00.14;	author jason;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
bye-bye libc_r sources.
the sources have been moved (with history) to /usr/src/lib/libpthread
@
text
@/*	$OpenBSD: uthread_machdep.c,v 1.2 2002/01/02 19:12:43 art Exp $	*/

/*
 * Machine-dependent thread state functions for OpenBSD/sparc.
 */

#include <sys/types.h>
#include <machine/frame.h>
#include <machine/param.h>
#include <pthread.h>
#include "pthread_private.h"

/*
 * Given a stack and an entry function, initialise a state
 * structure that can be later switched to.
 */
void
_thread_machdep_init(statep, base, len, entry)
	struct _machdep_state* statep;
	void *base;
	int len;
	void (*entry)(void);
{
	struct frame64 *f;

	/* Locate the initial frame, aligned at the top of the stack */
	f = (struct frame64 *)(((long)base + len - sizeof *f) & ~ALIGNBYTES);
	
	f->fr_fp = 0;				/* purposefully misaligned */
	f->fr_pc = -1;				/* for gdb */
	statep->fp = (u_long)f - BIAS;
	statep->pc = -8 + (u_long)entry;
}

void
_thread_machdep_save_float_state(statep)
	struct _machdep_state* statep;
{
}

void
_thread_machdep_restore_float_state(statep)
	struct _machdep_state* statep;
{
}
@


1.2
log
@fp and pc are 64 bit.
And just to make things more fun -1, is not a misaligned stack on sparc64.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep.c,v 1.1 2001/09/10 20:00:14 jason Exp $	*/
@


1.1
log
@Enough for libc_r on sparc64 to build (this stuff is mostly taken from sparc,
and will need attention before it can be expected to work).
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep.c,v 1.1 2000/09/25 01:16:40 d Exp $	*/
d27 1
a27 1
	f = (struct frame64 *)(((int)base + len - sizeof *f) & ~ALIGNBYTES);
d29 1
a29 1
	f->fr_fp = (struct frame64 *)-1;	/* purposefully misaligned */
d31 2
a32 2
	statep->fp = (int)f;
	statep->pc = -8 + (int)entry;
@

