head	1.5;
access;
symbols
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2003.01.20.18.14.06;	author marc;	state dead;
branches;
next	1.4;

1.4
date	2002.08.25.22.10.44;	author brad;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.02.23.05.53;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.02.19.11.28;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.10.20.00.14;	author jason;	state Exp;
branches;
next	;


desc
@@


1.5
log
@
bye-bye libc_r sources.
the sources have been moved (with history) to /usr/src/lib/libpthread
@
text
@/*	$OpenBSD: uthread_machdep_asm.S,v 1.4 2002/08/25 22:10:44 brad Exp $	*/
/* David Leonard <d@@csee.uq.edu.au>. Public domain. */

#include <machine/asm.h>
#include <machine/trap.h>
#include <machine/frame.h>

/*
 * Switch stacks.
 * On sparc this also means we switch register windows.
 */

#ifdef __sparcv9__
#define flushw		.word 0x81580000
#else
#define flushw		t T_FLUSHWIN
#endif

/*
 * void _thread_machdep_switch(long newstate[2], long savestate[2], int flags);
 */
ENTRY(_thread_machdep_switch)

	/* new window */
	save	%sp, -CC64FSZ, %sp

	/* flush all windows (except current one) into memory frames */
	flushw

	/* switch the stack pointer and return address */
	stx 	%fp, [%i1 + 0]
	stx	%i7, [%i1 + 8]
	ldx	[%i0 + 0], %fp
	ldx	[%i0 + 8], %i7

	/* return to saved window at new %fp */
	ret
	 restore

@


1.4
log
@fix comment.
--
Ok'd by: jason@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.3 2002/01/02 23:05:53 art Exp $	*/
@


1.3
log
@correct fram size.
pointed out by marc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.2 2002/01/02 19:11:28 art Exp $	*/
d19 3
a21 1
/* void _thread_switch(long newstate[2], long savestate[2], int flags); */
@


1.2
log
@fp and pc are 64 bit.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.1 2001/09/10 20:00:14 jason Exp $	*/
d6 1
a18 3
#define SA(x)	(((x)+15)&(~0x1f))
#define MINFRAME ((16+1+6)*8)	

d23 1
a23 1
	save	%sp, -SA(MINFRAME), %sp
@


1.1
log
@Enough for libc_r on sparc64 to build (this stuff is mostly taken from sparc,
and will need attention before it can be expected to work).
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.1 2000/09/25 01:16:40 d Exp $	*/
d21 1
a21 1
/* void _thread_switch(int newstate[2], int savestate[2], int flags); */
d31 4
a34 4
	st 	%fp, [%i1 + 0]
	st	%i7, [%i1 + 4]
	ld	[%i0 + 0], %fp
	ld	[%i0 + 4], %i7
d38 1
a38 1
	restore
@

