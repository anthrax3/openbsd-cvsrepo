head	1.6;
access;
symbols
	OPENBSD_3_2:1.5.0.12
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.10
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.8
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.8
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.6
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.4
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2003.02.24.22.30.12;	author matthieu;	state dead;
branches;
next	1.5;

1.5
date	2000.03.02.01.49.09;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	98.02.03.23.33.52;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.01.19.12.29.25;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.12.21.22.23.38;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.03.05.11.25.29;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Bye, unused code.
@
text
@/*	$OpenBSD: aperture.c,v 1.5 2000/03/02 01:49:09 todd Exp $	*/

/*
 * Copyright 1994 the XFree86 Project Inc. 
 */

/* 
 * linear framebuffer aperture driver for OpenBSD
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>
#include <sys/errno.h>

#define VGA_START 0xA0000
#ifdef PC98 
#define VGA_END   0xFFFFF
#define HOLE16M_START	0xF00000
#define HOLE16M_END	0xFFFFFF
#else 
#define VGA_END   0xBFFFF
#endif 

/* open counter */
static int ap_open_count = 0;

/*
 * Open the device
 */
int
apopen(dev_t dev, int oflags, int devtype, struct proc *p)
{

    if (suser(p->p_ucred, &p->p_acflag) != 0) {
	return(EPERM);
    }
    /* authorize only one simultaneous open() */
    if (ap_open_count > 0) {
	return(EPERM);
    }
    ap_open_count++;

    return(0);
}

/*
 * Close the device
 */
int
apclose(dev_t dev, int cflags, int devtype, struct proc *p)
{

    ap_open_count--;
    return(0);
}

/*
 *  mmap() physical memory sections
 * 
 * allow only section in the vga framebuffer and above main memory 
 * to be mapped
 */
int
apmmap(dev_t dev, int offset, int length)
{

#ifdef AP_DEBUG
    printf("apmmap: addr 0x%x\n", offset);
#endif
    if  ((minor(dev) == 0) 
	 && ((offset >= VGA_START && offset <= VGA_END )
	     || (unsigned)offset > (unsigned)ctob(physmem)
#ifdef PC98
	     || ((unsigned)offset >=HOLE16M_START
                   && (unsigned)offset <= HOLE16M_END)
#endif
	     )) {
	return i386_btop(offset);
    } else {
	return(-1);
    }
}
       
@


1.5
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.4
log
@openbsd
@
text
@d1 1
a1 1
/*	$OpenbSD$	*/
@


1.3
log
@update to the 1.6 aperture driver from 3.2 XFree86.
add manual (composed from mem(4) and README)
@
text
@d8 1
a8 1
 * linear framebuffer aperture driver for NetBSD
@


1.2
log
@-Wall madness.
@
text
@d1 1
a1 1
/*	$OpenBSD: aperture.c,v 1.1 1996/03/05 11:25:29 mickey Exp $	*/
d17 5
d23 1
d34 1
d72 7
a78 2
	  && ((offset >= VGA_START && offset <= VGA_END)
	     || (unsigned)offset > (unsigned)ctob(physmem))) {
@


1.1
log
@XFree86 aperture driver.
From 3.1.2 version (for NetBSD).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a27 2
    struct pcred *pc = p->p_cred;

d65 1
a65 1
	  && (offset >= VGA_START && offset <= VGA_END 
@
