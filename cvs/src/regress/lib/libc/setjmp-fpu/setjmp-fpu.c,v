head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.6
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.8
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2015.11.08.18.10.14;	author miod;	state Exp;
branches;
next	1.2;
commitid	BvflD28dH2LPQc3L;

1.2
date	2013.12.29.05.46.43;	author martynas;	state Exp;
branches;
next	1.1;

1.1
date	2013.12.29.01.39.44;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Make sure we use a sigjmp_buf in the sigsetjmp() part of the test.
@
text
@#include <fenv.h>
#include <setjmp.h>

int
TEST_SETJMP(int argc, char *argv[])
{
	JMP_BUF env;
	int rv;

	/* Set up the FPU control word register. */
	fesetround(FE_UPWARD);
	fedisableexcept(FE_ALL_EXCEPT);
	feenableexcept(FE_DIVBYZERO);

	rv = SETJMP(env, 0);

	if (rv == 0) {
		fexcept_t flag = FE_OVERFLOW;

		/* Mess with the FPU control word. */
		fesetround(FE_DOWNWARD);
		fedisableexcept(FE_DIVBYZERO);

		/* Set the FPU exception flags. */
		fesetexceptflag(&flag, FE_ALL_EXCEPT);

		LONGJMP(env, 1);
	} else if (rv == 1) {
		fexcept_t flag = 0;

		/* Verify that the FPU control word is preserved. */
		if (fegetround() != FE_UPWARD
		    || fegetexcept() != FE_DIVBYZERO)
			return (1);

		/* Verify that the FPU exception flags weren't clobbered. */
		fegetexceptflag(&flag, FE_ALL_EXCEPT);
		if (flag != FE_OVERFLOW)
			return (1);

		return (0);
	}

	/* This is not supposed to happen. */
	return (1);
}
@


1.2
log
@- Verify that the FPU exception flags weren't clobbered as required by C99.
- Additionally, test _setjmp and sigsetjmp as implementations are different.
@
text
@d7 1
a7 1
	jmp_buf env;
@


1.1
log
@Add a regression test to verify that the FPU control word state is
preserved by setjmp.  Currently under REGRESS_FULL as this fails
on certain archs.
@
text
@d5 1
a5 1
main(int argc, char *argv[])
d15 1
a15 1
	rv = setjmp(env);
a16 1
	/* Mess with the FPU control word. */
d18 3
d23 5
a27 2
		longjmp(env, 1);
	/* Verify that the FPU control word is preserved. */
d29 3
d35 6
a41 3
	/* This is not supposed to happen. */
	} else {
		return (1);
d44 1
@

