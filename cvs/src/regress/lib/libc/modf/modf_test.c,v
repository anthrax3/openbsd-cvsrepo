head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.12
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.10
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2014.06.07.01.47.02;	author tobiasu;	state Exp;
branches;
next	;
commitid	Ww9DWOYmZEYYBsY2;


desc
@@


1.1
log
@Add basic regression test for modf() issue.

encouraged by deraadt and miod
@
text
@/* Public domain, 2014, Tobias Ulmer <tobiasu@@tmux.org> */

/* Test for bug introduced in 4.4BSD modf() on sparc */

#include <math.h>

#define BIGFLOAT (5e15) /* Number large enough to trigger the "big" case */

int
main(void)
{
	double f, i;

	f = modf(BIGFLOAT, &i);
	if (i != BIGFLOAT)
		return 1;
	if (f != 0.0)
		return 1;

	/* Repeat, maybe we were lucky */
	f = modf(BIGFLOAT, &i);
	if (i != BIGFLOAT)
		return 1;
	if (f != 0.0)
		return 1;

	/* With negative number, for good measure */
	f = modf(-BIGFLOAT, &i);
	if (i != -BIGFLOAT)
		return 1;
	if (f != 0.0)
		return 1;

	return 0;
}
@
