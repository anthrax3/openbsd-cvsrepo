head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.10
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.22
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.20
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.16
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.14
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.12
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2015.01.20.04.41.01;	author krw;	state Exp;
branches;
next	1.1;
commitid	4iV7KHZz26Tut4Vx;

1.1
date	2009.11.19.08.06.06;	author guenther;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Missing $OpenBSD$'s.

ok deraadt@@
@
text
@/*	$OpenBSD$	*/
/*
 * Copyright (c) 2008 Bret S. Lambert <blambert@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <stdio.h>
#include <pthread.h>
#include "local.h"

int
writefn(void *cookie, const char *buf, int size)
{
	return 0;
}

void
fopen_thread(void *v)
{
	FILE *file;
	int i;

	for (i = 0; i < 4096; i++) {
		file = fwopen(&i, writefn);
		if (file != NULL) {
			fputc('0', file);
			pthread_yield();
			fclose(file);
		}
	}
}

int
main(void)
{
	run_threads(fopen_thread, NULL);
	exit(0);
}
@


1.1
log
@Add regression tests for stdio threading.  Originally by blambert with
some further hacking by me
@
text
@d1 1
@

