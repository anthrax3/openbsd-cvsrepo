head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.24
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.20
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.18
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.16
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.10
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2011.09.17.15.12.38;	author stsp;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.01.23.04.58;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Expand fnmatch() regress with patterns obtained from the tests for APR's
new fnmatch implementation. With kind permission from Bill Rowe.
Tweak the test code to allow comment lines in the test data file.
ok millert@@
@
text
@/*	$OpenBSD: fnm_test.c,v 1.1 2008/10/01 23:04:58 millert Exp $	*/

/*
 * Public domain, 2008, Todd C. Miller <Todd.Miller@@courtesan.com>
 */

#include <err.h>
#include <fnmatch.h>
#include <stdio.h>
#include <stdlib.h>
#include <util.h>

int
main(int argc, char **argv)
{
	FILE *fp = stdin;
	char pattern[1024], string[1024];
	char *line;
	const char delim[3] = {'\0', '\0', '#'};
	int errors = 0, flags, got, want;

	if (argc > 1) {
		if ((fp = fopen(argv[1], "r")) == NULL)
			err(1, "%s", argv[1]);
	}

	/*
	 * Read in test file, which is formatted thusly:
	 *
	 * pattern string flags expected_result
	 *
	 * lines starting with '#' are comments
	 */
	for (;;) {
		line = fparseln(fp, NULL, NULL, delim, 0);
		if (!line)
			break;
		got = sscanf(line, "%s %s 0x%x %d", pattern, string, &flags,
		    &want);
		if (got == EOF) {
			free(line);
			break;
		}
		if (pattern[0] == '#') {
			free(line);
			continue;
		}
		if (got == 4) {
			got = fnmatch(pattern, string, flags);
			if (got != want) {
				warnx("%s %s %d: want %d, got %d", pattern,
				    string, flags, want, got);
				errors++;
			}
		} else {
			warnx("unrecognized line '%s'\n", line);
			errors++;
		}
		free(line);
	}
	exit(errors);
}
@


1.1
log
@Regress driver for fnmatch(3).  Needs more tests.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d11 1
d18 2
d32 1
d35 4
a38 1
		got = fscanf(fp, "%s %s 0x%x %d\n", pattern, string, &flags,
d40 2
a41 1
		if (got == EOF)
d43 5
d55 3
d59 1
@

