head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.6
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.18
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.16
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.16
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.14
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.12
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.10
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.07.20.01.52.28;	author millert;	state Exp;
branches;
next	1.3;
commitid	1K7DsYjDc1gtQpBp;

1.3
date	2011.03.13.22.12.37;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.21.00.38.22;	author martynas;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.29.18.41.56;	author otto;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Add VIS_DQ to escape double quotes.  OK deraadt@@ semarie@@ reyk@@
@
text
@/*	$OpenBSD: vis_test.c,v 1.3 2011/03/13 22:12:37 deraadt Exp $	*/

/* Public domain. 2005, Otto Moerbeek */

#include <limits.h>
#include <stdlib.h>
#include <string.h>
#include <stdio.h>
#include <vis.h>

#define NTESTS	8000
#define NCH	800

char ibuf[NCH];
char obuf[NCH * 4];
char rbuf[NCH * 4];

int flags[] = {
	VIS_ALL,
	VIS_GLOB,
	VIS_TAB,
	VIS_NL,
	VIS_DQ,
	VIS_WHITE,
	VIS_SAFE
};

char *flagname[] = {
	"VIS_ALL",
	"VIS_GLOB",
	"VIS_TAB",
	"VIS_NL",
	"VIS_DQ",
	"VIS_WHITE",
	"VIS_SAFE"
};

int title;

void
dotitle(int i, int j)
{
	if (title == 0)
		printf("%d %s:", i, flagname[j]);
	title = 1;
}

int
main(int argc, char *argv[])
{

	char inp[UCHAR_MAX + 1];
	char out[4 * UCHAR_MAX + 1];
	int i, j, fail = 0;
	ssize_t owant, o, r;

	for (i = 0; i <= UCHAR_MAX; i++) {
		inp[i] = i;
	}
	strvisx(out, inp, UCHAR_MAX + 1, 0);
	printf("%s\n", out);

	for (i = 0; i < NTESTS; i++) {
		arc4random_buf(ibuf, sizeof(ibuf) - 1);
		ibuf[sizeof(ibuf) - 1] = '\0';
		title = 0;

		for (j = 0; j < sizeof(flags)/sizeof(flags[0]); j++) {
			owant = sizeof(ibuf);
			o = strnvis(obuf, ibuf, owant, flags[j]);
			if (o >= owant) {
				owant = o + 1;
				o = strnvis(obuf, ibuf, owant, flags[j]);
				if (o > owant) {
					dotitle(i, j);
					printf("HUGE overflow\n");
				}
				if (o < owant - 1) {
					dotitle(i, j);
					printf("over-estimate of overflow\n");
				}
			} else if (o > strlen(ibuf) * 4) {
				dotitle(i, j);
				printf("wants too much %d %d\n", o, strlen(ibuf) * 4);
				continue;
			}

			r = strnunvis(rbuf, obuf, sizeof rbuf);

			if (r == -1) {
				dotitle(i, j);
				printf("cannot decode\n");
				printf("%s\n", obuf);
				fail = 1;
			} else if (r != strlen(ibuf)) {
				dotitle(i, j);
				printf("rlen %d != inlen %d\n", r, strlen(ibuf));
				printf("%s\n", obuf);
				printf("%s\n", rbuf);
				fail = 1;
			} else if (bcmp(ibuf, rbuf, r)) {
				dotitle(i, j);
				printf("strings are different\n");
				printf("%s\n", ibuf);
				printf("%s\n", rbuf);
				fail = 1;
			}
		}
	}
	exit(fail);
}
@


1.3
log
@add a regress test for the vis and unvis functions.  after finding one
bug, this then found a 2nd bug..
worked on with guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: vis_test.c,v 1.2 2009/06/21 00:38:22 martynas Exp $	*/
d23 1
d33 1
@


1.2
log
@fix rcs ids.  ok sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
d11 35
d47 1
a47 1
main()
d49 1
d52 2
a53 1
	int i;
d60 49
a108 1
	exit(0);
@


1.1
log
@Basic regress test for the vis(3) family of functions. Extra tests
for various flag values will be added later.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD */
@

