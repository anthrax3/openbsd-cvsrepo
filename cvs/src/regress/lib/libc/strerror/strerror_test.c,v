head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.8
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.44
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.42
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.40
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.38
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.34
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.32
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.30
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.28
	OPENBSD_5_0:1.4.0.26
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.24
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.22
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.18
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.20
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.16
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.14
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.12
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2015.09.14.06.31.25;	author guenther;	state Exp;
branches;
next	1.4;
commitid	NHT4J29uwp9GJb4e;

1.4
date	2005.05.13.07.06.20;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.08.06.34.25;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.02.22.34.29;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.30.17.15.12;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Test the exported strsignal() API, not the (now hidden) internal API

noted by daniel@@
@
text
@/* $OpenBSD: strerror_test.c,v 1.4 2005/05/13 07:06:20 otto Exp $ */
/*
 * Copyright (c) 2004 Marc Espie <espie@@cvs.openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include <signal.h>
#include <string.h>
#include <stdio.h>
#include <limits.h>
#include <errno.h>

void
check_strerror_r(int val)
{
	char buffer[NL_TEXTMAX + 1];
	int i, r;

	memset(buffer, 'X', sizeof(buffer) - 1);
	buffer[sizeof(buffer) - 1] = '\0';
	(void)strerror_r(val, NULL, 0);	/* XXX */
	for (i = 0; i < 25; i++) {
		r = strerror_r(val, buffer, i);
		printf("%d %d %zu: %s\n", i, r, strlen(buffer), buffer);
	}
}

void
check_strsignal(int val)
{
	printf("%s\n", strsignal(val));
}

int 
main()
{
	printf("%s\n", strerror(21345));
	printf("%s\n", strerror(-21345));
	printf("%s\n", strerror(0));
	printf("%s\n", strerror(INT_MAX));
	printf("%s\n", strerror(INT_MIN));
	printf("%s\n", strerror(EPERM));
	check_strerror_r(EPERM);
	check_strerror_r(21345);
	check_strsignal(-1);
	check_strsignal(0);
	check_strsignal(10);
	check_strsignal(NSIG-1);
	check_strsignal(NSIG);
	check_strsignal(100);
	check_strsignal(INT_MAX);
	check_strsignal(INT_MIN);
	check_strsignal(UINT_MAX);
	return 0;
}
@


1.4
log
@Add tests for __strsignal(). Put here since the tests are very similar
to the strerror() test.
@
text
@d1 1
a1 1
/* $OpenBSD: strerror_test.c,v 1.3 2005/05/08 06:34:25 otto Exp $ */
d41 1
a41 7
	char buffer[NL_TEXTMAX + 1];
	int i, r;

	memset(buffer, 'X', sizeof(buffer) - 1);
	buffer[sizeof(buffer) - 1] = '\0';
	(void)__strsignal(val, buffer);
	printf("%s\n", buffer);
@


1.3
log
@Try to catch some more errors and adapt to slightly changed strerror.
@
text
@d1 1
a1 1
/* $OpenBSD: strerror_test.c,v 1.2 2004/05/02 22:34:29 espie Exp $ */
d17 1
d38 12
d61 9
@


1.2
log
@more tests, okay millert@@ (we probably don't pass them all yet, and will
after the strerror_r code is committed).
@
text
@d1 1
a1 1
/* $OpenBSD: strerror_test.c,v 1.1 2004/04/30 17:15:12 espie Exp $ */
d25 1
a25 1
	char buffer[NL_TEXTMAX];
d28 2
a29 1
	memset(buffer, 0, sizeof(buffer));
d33 1
a33 1
		printf("%d %d %lu: %s\n", i, r, strlen(buffer), buffer);
@


1.1
log
@Add tests for strerror.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d20 18
a37 1
int main()
d44 3
@

