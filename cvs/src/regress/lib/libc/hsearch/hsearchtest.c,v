head	1.2;
access;
symbols
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.28
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.18
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.26
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.24
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.22
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.20
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.16
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.14
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.24
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.20
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.18
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.16
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.14
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.12
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.10
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.8
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.6
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2009.10.27.23.59.32;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.24.04.33.07;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@/*	$OpenBSD: hsearchtest.c,v 1.1 2004/06/24 04:33:07 millert Exp $	*/
/*	$NetBSD: hsearchtest.c,v 1.5 2003/07/26 19:38:46 salo Exp $	*/

/*
 * Copyright (c) 2001 Christopher G. Demetriou
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *          This product includes software developed for the
 *          NetBSD Project.  See http://www.NetBSD.org/ for
 *          information about NetBSD.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * <<Id: LICENSE,v 1.2 2000/06/14 15:57:33 cgd Exp>>
 */

/*
 * Test program for hsearch() et al.
 */

#include <search.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#define	TEST(e)	((e) ? (void)0 : testfail(__FILE__, __LINE__, #e))

static void
testfail(const char *file, unsigned long line, const char *expression)
{

	fprintf(stderr, "TEST FAILED: %s: file %s, line %ld\n",
	    expression, file, line);
	exit(1);
}

int
main(int argc, char *argv[])
{
	ENTRY e, *ep, *ep2;
	int created_ok;
	char ch[2];
	int i;

	created_ok = hcreate(16);
	TEST(created_ok);

	/* ch[1] should be constant from here on down. */
	ch[1] = '\0';
	
	/* Basic insertions.  Check enough that there'll be collisions. */
	for (i = 0; i < 26; i++) {
		ch[0] = 'a' + i;
		e.key = strdup(ch);	/* ptr to provided key is kept! */
		TEST(e.key != NULL);
		e.data = (void *)(long)i;
		ep = hsearch(e, ENTER);
		TEST(ep != NULL);
		TEST(strcmp(ep->key, ch) == 0);
		TEST((long)ep->data == i);
	}

	/* e.key should be constant from here on down. */
	e.key = ch;

	/* Basic lookups. */
	for (i = 0; i < 26; i++) {
		ch[0] = 'a' + i;
		ep = hsearch(e, FIND);
		TEST(ep != NULL);
		TEST(strcmp(ep->key, ch) == 0);
		TEST((long)ep->data == i);
	}

	/* Check duplicate entry.  Should _not_ overwrite existing data.  */
	ch[0] = 'a';
	e.data = (void *)(long)12345;
	ep = hsearch(e, FIND);
	TEST(ep != NULL);
	TEST(strcmp(ep->key, ch) == 0);
	TEST((long)ep->data == 0);

	/* Check for something that's not there. */
	ch[0] = 'A';
	ep = hsearch(e, FIND);
	TEST(ep == NULL);

	/* Check two at once. */
	ch[0] = 'a';
	ep = hsearch(e, FIND);
	ch[0] = 'b';
	ep2 = hsearch(e, FIND);
	TEST(ep != NULL);
	TEST(strcmp(ep->key, "a") == 0 && (long)ep->data == 0);
	TEST(ep2 != NULL);
	TEST(strcmp(ep2->key, "b") == 0 && (long)ep2->data == 1);

	hdestroy();

	exit(0);
}
@


1.1
log
@hsearch regress from NetBSD via ray at cyth dot net
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a40 9

#ifndef lint
static const char copyright[] =
"@@(#) Copyright (c) 2001 Christopher G. Demetriou.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
static const char rcsid[] = "$OpenBSD$";
#endif /* not lint */
@

