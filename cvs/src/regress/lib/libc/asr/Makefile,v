head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.14
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	eric_g2k12:1.1.1.1
	eric:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.03.10.17.23.48;	author eric;	state Exp;
branches;
next	1.3;
commitid	fjRD5UmQmNzb6pN3;

1.3
date	2013.04.01.10.18.28;	author eric;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.07.21.00.31;	author eric;	state Exp;
branches;
next	1.1;

1.1
date	2012.07.13.17.49.53;	author eric;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.07.13.17.49.53;	author eric;	state Exp;
branches;
next	;


desc
@@


1.4
log
@refresh the test infrastructure a bit.
@
text
@#	$OpenBSD: Makefile,v 1.3 2013/04/01 10:18:28 eric Exp $

#
# Notes on building and running the regression tests
#
# The regress suite builds two sets of static executables: the former linked
# against the system libc, and the latter against the libc found in /usr/obj
# The idea is to compare the output of all programs with internal changes in
# the libc (more specifically the resolver).  They will be run in a chrooted
# environment to test various /etc configurations without touching the local
# machine config files.
#
# First, build a libc that needs testing, then:
#
# $ make
# $ doas make install
# $ doas make regress
#
# Tests output goes into a $REGRESSDIR/tmp.XXXXXXXXXX directory, and a digest
# is displayed at the end.
#

REGRESSDIR?=	/tmp/regress-asr
REGRESS?=	regress.sh

A?=	.a
B?=	.b

DIRA?=	/usr/lib
DIRB?=	/usr/obj/lib/libc


all: build

build:
	cd bin && EXT=${A} LDFLAGS=-L${DIRA} make
	cd bin && EXT=${B} LDFLAGS=-L${DIRB} make

clean:
	cd bin && EXT=${A} make clean
	cd bin && EXT=${B} make clean

install:
	mkdir -p ${REGRESSDIR}/bin
	cd bin && BINDIR=${REGRESSDIR}/bin EXT=${A} make install
	cd bin && BINDIR=${REGRESSDIR}/bin EXT=${B} make install

uninstall:
	rm -rf ${REGRESSDIR}

regress:
	RUNDIR=${REGRESSDIR} A=${A} B=${B} sh ${.CURDIR}/${REGRESS}
@


1.3
log
@tweak makefile now that asr is built by default.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2012/08/07 21:00:31 eric Exp $
d4 1
a4 1
# Note on building and running the regress tests:
d6 6
a11 3
# The regress suite builds two sets of static executables: one linked
# against the current libc, and one linked against a libc with the resolver
# replaced. The idea is to compare the output of all programs in both cases.
d13 1
a13 9
# So before building the regression test programs, you need to have two
# static libc: the system libc.a in /usr/lib/ which is assumed to be built
# with asr, and a pre-asr libc.a in the "./lib/" directory (you can build
# one by commenting out the ".include "${LIBCSRCDIR}/asr/Makefile.inc"
# line from the /usr/src/lib/libc/Makefile.in and rebuild the libc).
# 
# When done, run "make && make install". This builds and installs the two sets
# of programs in REGRESSDIR. They will run chrooted there to allow testing with
# various /etc environment without messing up the local machine config files.
d15 3
a17 3
# When you are sure everything is in place, run "make regress". This will
# create two files: $REGRESSDIR/output.log with the output of all tests,
# and $REGRESSDIR/regress.log with the diffs for those that "failed".
d19 2
a20 1
# Note that the "install" and "regress" targets need to be run as root.
d23 8
a30 2
LIBCDIRSTD?=	${.CURDIR}/lib
LIBCDIRASR?=	/usr/lib
a31 2
REGRESSDIR?=	/tmp/regress
REGRESS?=	regress.sh
d36 2
a37 2
	cd bin && EXT=.asr LDFLAGS=-L${LIBCDIRASR} make
	cd bin && EXT=.std LDFLAGS=-L${LIBCDIRSTD} make
d40 2
a41 2
	cd bin && EXT=.std make clean
	cd bin && EXT=.asr make clean
a43 1
	mkdir -p ${REGRESSDIR}/etc
d45 2
a46 2
	cd bin && BINDIR=${REGRESSDIR}/bin EXT=.std make install
	cd bin && BINDIR=${REGRESSDIR}/bin EXT=.asr make install
d52 1
a52 1
	RUNDIR=${REGRESSDIR} sh ${.CURDIR}/${REGRESS}
@


1.2
log
@allow to choose an alternate regress script
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.1.1 2012/07/13 17:49:53 eric Exp $
d10 5
a14 5
# So before building the regression test programs, you need to have the two
# libc.a ready.  By default, it is assumed that the asr-enabled libc was just
# built from src but not installed, so the current libc.a is expected to be
# found in /usr/lib, and the new one in /usr/obj/lib/libc. If your setting
# is different, just set LIBCDIRSTD and LIBCDIRASR accordingly.
d21 1
a21 1
# create two files: $REGRESSDIR/output.log with the output of all run tests,
d24 1
a24 1
# Note that "install" and "regress" targets need to be run as root.
d27 2
a28 2
LIBCDIRSTD?=	/usr/lib
LIBCDIRASR?=	/usr/obj/lib/libc
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.117 2011/09/17 16:59:53 pirofti Exp $
d31 1
d53 1
a53 1
	RUNDIR=${REGRESSDIR} sh ${.CURDIR}/regress.sh
@


1.1.1.1
log
@import regression suite for asr
@
text
@@
