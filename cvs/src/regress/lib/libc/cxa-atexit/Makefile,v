head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.16
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.12
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.10
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2013.08.06.19.11.53;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.10.18.20.31;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.03.14.42.44;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove support for COMPILER_VERSION == gcc2.
Change the logic depending upon COMPILER_VERSION everywhere, to assume gcc4
is the norm and to explicitely test for gcc3 when a different behaviour
is required.
No functional change intended. Be sure to `make install' in share/mk before
attempting to do anything.
@
text
@# $OpenBSD: Makefile,v 1.2 2010/05/10 18:20:31 drahn Exp $

SUBDIR+= libgd1 libgd2 test1

install:

.include <bsd.subdir.mk>
@


1.2
log
@Switch to using COMPILER_VERSION instead of USE_GCC3, allows for more flexible
complier picking, eg supporting gcc2, gcc3, and gcc4. based on diff by Marco,
with fixes from espie@@.
ok espie@@ general mumbling of approval of others.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2007/09/03 14:42:44 millert Exp $
a2 4
.include <bsd.own.mk>


.if ${COMPILER_VERSION:L} == "gcc3" || ${COMPILER_VERSION:L} == "gcc4" 
a3 1
.endif
@


1.1
log
@Adapt atexit() regress to recent changes and add __cxa_atexit() regress.
__cxa_atexit() regress from kurt@@
@
text
@d1 1
a1 1
# $OpenBSD$
a4 1
USE_GCC3?=No
d6 1
a6 1
.if ${USE_GCC3:L} == "yes"
@

