head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.46
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.42
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.32
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.40
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.38
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.36
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.34
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.30
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.28
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.26
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.24
	OPENBSD_5_0:1.2.0.22
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.20
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.18
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.12
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2017.07.27.15.08.37;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	kdEwnOlcL3GBuDNJ;

1.2
date	2006.05.16.05.47.13;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.18.19.03.30;	author otto;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix all clang warnings in libc regress and cleanup some make files.
@
text
@/*	$OpenBSD: malloc_ulimit1.c,v 1.2 2006/05/16 05:47:13 otto Exp $	*/

/* Public Domain, 2006, Otto Moerbeek <otto@@drijf.net> */

#include <sys/types.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <err.h>
#include <stdlib.h>
#include <stdio.h>

/*
 * This code tries to trigger the case present in -current as of April
 * 2006) where the allocation of the region itself succeeds, but the
 * page dir entry pages fails.
 * This in turn trips a "hole in directories" error.
 * Having a large (512M) ulimit -m helps a lot in triggering the 
 * problem. Note that you may need to run this test multiple times to
 * see the error.
*/

#define	STARTI	1300
#define FACTOR 	1024

int
main()
{
	struct rlimit lim;
	size_t sz;
	int i;
	void *p;

	if (getrlimit(RLIMIT_DATA, &lim) == -1)
		err(1, "getrlimit");

	sz = lim.rlim_cur / FACTOR;

	for (i = STARTI; i >= 0; i--) {
		size_t len = (sz-i) * FACTOR;
		p = malloc(len);
		free(p);
		free(malloc(4096));
	}
	return (0);
}
@


1.2
log
@Don't forget to return 0 on success, doh.
@
text
@d1 1
a1 1
/*	$OpenBSD: malloc_ulimit1.c,v 1.1 2006/04/18 19:03:30 otto Exp $	*/
d25 1
@


1.1
log
@Near ulimit test case 1
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 1
@

