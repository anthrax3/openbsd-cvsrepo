head	1.48;
access;
symbols
	OPENBSD_6_1:1.48.0.4
	OPENBSD_6_1_BASE:1.48
	OPENBSD_6_0:1.48.0.2
	OPENBSD_6_0_BASE:1.48
	OPENBSD_5_9:1.47.0.2
	OPENBSD_5_9_BASE:1.47
	OPENBSD_5_8:1.46.0.6
	OPENBSD_5_8_BASE:1.46
	OPENBSD_5_7:1.46.0.4
	OPENBSD_5_7_BASE:1.46
	OPENBSD_5_6:1.43.0.4
	OPENBSD_5_6_BASE:1.43
	OPENBSD_5_5:1.38.0.4
	OPENBSD_5_5_BASE:1.38
	OPENBSD_5_4:1.36.0.2
	OPENBSD_5_4_BASE:1.36
	OPENBSD_5_3:1.35.0.2
	OPENBSD_5_3_BASE:1.35
	OPENBSD_5_2:1.34.0.2
	OPENBSD_5_2_BASE:1.34
	OPENBSD_5_1_BASE:1.33
	OPENBSD_5_1:1.33.0.4
	OPENBSD_5_0:1.33.0.2
	OPENBSD_5_0_BASE:1.33
	OPENBSD_4_9:1.32.0.2
	OPENBSD_4_9_BASE:1.32
	OPENBSD_4_8:1.31.0.4
	OPENBSD_4_8_BASE:1.31
	OPENBSD_4_7:1.31.0.2
	OPENBSD_4_7_BASE:1.31
	OPENBSD_4_6:1.28.0.6
	OPENBSD_4_6_BASE:1.28
	OPENBSD_4_5:1.28.0.2
	OPENBSD_4_5_BASE:1.28
	OPENBSD_4_4:1.26.0.4
	OPENBSD_4_4_BASE:1.26
	OPENBSD_4_3:1.26.0.2
	OPENBSD_4_3_BASE:1.26
	OPENBSD_4_2:1.25.0.2
	OPENBSD_4_2_BASE:1.25
	OPENBSD_4_1:1.24.0.2
	OPENBSD_4_1_BASE:1.24
	OPENBSD_4_0:1.23.0.2
	OPENBSD_4_0_BASE:1.23
	OPENBSD_3_9:1.21.0.4
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.21.0.2
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.18.0.2
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.17.0.2
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.13.0.2
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.10.0.2
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.1.1.0.18
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.48
date	2016.05.29.17.09.07;	author beck;	state Exp;
branches;
next	1.47;
commitid	IfIy24HBWELjFXRD;

1.47
date	2015.10.23.12.59.12;	author claudio;	state Exp;
branches;
next	1.46;
commitid	m14Cvnadno0dgPbp;

1.46
date	2014.12.02.20.23.05;	author millert;	state Exp;
branches;
next	1.45;
commitid	ncLJX9TkAAbFdLYM;

1.45
date	2014.12.02.17.48.34;	author millert;	state Exp;
branches;
next	1.44;
commitid	1xjVyUKYVSleCnFJ;

1.44
date	2014.12.02.17.26.30;	author millert;	state Exp;
branches;
next	1.43;
commitid	grsJrmXF9LEVw7CC;

1.43
date	2014.07.03.21.12.24;	author miod;	state Exp;
branches;
next	1.42;
commitid	tsdASf3OqPDRAjuB;

1.42
date	2014.06.18.08.24.00;	author matthew;	state Exp;
branches;
next	1.41;
commitid	lm9iJ0qfV1AfSIlQ;

1.41
date	2014.06.13.01.55.02;	author matthew;	state Exp;
branches;
next	1.40;
commitid	owi6gNEYgY9G0V9l;

1.40
date	2014.06.12.22.01.55;	author matthew;	state Exp;
branches;
next	1.39;
commitid	G8t1MWjEvkBzIpgv;

1.39
date	2014.06.07.01.46.40;	author tobiasu;	state Exp;
branches;
next	1.38;
commitid	pt9wokeJXgClVP2e;

1.38
date	2013.12.29.01.39.44;	author martynas;	state Exp;
branches;
next	1.37;

1.37
date	2013.08.01.21.26.30;	author kettenis;	state Exp;
branches;
next	1.36;

1.36
date	2013.05.02.09.20.17;	author mpi;	state Exp;
branches;
next	1.35;

1.35
date	2012.11.18.04.11.09;	author jsing;	state Exp;
branches;
next	1.34;

1.34
date	2012.07.11.10.46.23;	author naddy;	state Exp;
branches;
next	1.33;

1.33
date	2011.07.02.18.12.48;	author martynas;	state Exp;
branches;
next	1.32;

1.32
date	2010.08.23.22.34.37;	author millert;	state Exp;
branches;
next	1.31;

1.31
date	2010.02.11.07.35.38;	author guenther;	state Exp;
branches;
next	1.30;

1.30
date	2009.11.21.09.56.10;	author guenther;	state Exp;
branches;
next	1.29;

1.29
date	2009.11.19.08.06.06;	author guenther;	state Exp;
branches;
next	1.28;

1.28
date	2008.10.02.12.26.45;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2008.09.07.20.36.10;	author martynas;	state Exp;
branches;
next	1.26;

1.26
date	2007.09.03.14.42.43;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2007.05.17.03.02.32;	author ray;	state Exp;
branches;
next	1.24;

1.24
date	2006.09.29.11.00.24;	author otto;	state Exp;
branches;
next	1.23;

1.23
date	2006.03.25.20.28.19;	author otto;	state Exp;
branches;
next	1.22;

1.22
date	2006.03.10.05.46.17;	author ray;	state Exp;
branches;
next	1.21;

1.21
date	2005.08.29.18.41.56;	author otto;	state Exp;
branches;
next	1.20;

1.20
date	2005.08.12.00.28.08;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2005.08.11.21.57.02;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2004.10.25.15.10.36;	author otto;	state Exp;
branches;
next	1.17;

1.17
date	2004.08.03.20.39.28;	author otto;	state Exp;
branches;
next	1.16;

1.16
date	2004.07.10.06.41.51;	author david;	state Exp;
branches;
next	1.15;

1.15
date	2004.06.24.04.33.07;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.30.17.15.12;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2004.02.11.23.38.11;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.20.16.47.55;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.15.04.23.49;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.12.06.49.04;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2002.08.30.07.58.08;	author dhartmei;	state Exp;
branches;
next	1.8;

1.8
date	2002.07.05.15.54.30;	author itojun;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.23.01.25.10;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.18.11.28.27;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.01.58.33;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.03.19.18.42;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.05.09.52.01;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.29.02.05.37;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.31;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.31;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.48
log
@We don't have sigreturn anymore
@
text
@#	$OpenBSD: Makefile,v 1.47 2015/10/23 12:59:12 claudio Exp $

SUBDIR+= _setjmp alloca arc4random-fork
SUBDIR+= atexit basename cephes cxa-atexit db dirname env
SUBDIR+= explicit_bzero fmemopen fnmatch fpclassify getcap getopt_long glob
SUBDIR+= hsearch ifnameindex longjmp locale malloc mkstemp modf netdb
SUBDIR+= open_memstream orientation popen printf
SUBDIR+= regex setjmp setjmp-signal sigsetjmp sprintf stdio_threading
SUBDIR+= stpncpy strerror strlcat strlcpy strnlen strtod strtol strtonum
SUBDIR+= telldir time timingsafe vis

.if defined(REGRESS_FULL) || make(clean) || make(cleandir) || make(obj)
SUBDIR+= getaddrinfo
SUBDIR+= setjmp-fpu
.endif

.if (${MACHINE_ARCH} != "vax")
SUBDIR+= ieeefp
.endif

.if exists(arch/${MACHINE_ARCH})
SUBDIR+= arch/${MACHINE_ARCH}
.endif

install:

.include <bsd.subdir.mk>
@


1.47
log
@Add ifnameindex to te libc regress tests
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2014/12/02 20:23:05 millert Exp $
d8 1
a8 1
SUBDIR+= regex setjmp setjmp-signal sigreturn sigsetjmp sprintf stdio_threading
@


1.46
log
@Add simple strlcpy regress
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.45 2014/12/02 17:48:34 millert Exp $
d6 2
a7 2
SUBDIR+= hsearch longjmp locale malloc mkstemp modf netdb open_memstream
SUBDIR+= orientation popen printf
@


1.45
log
@Add simple strlcat regress
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2014/12/02 17:26:30 millert Exp $
d8 2
a9 2
SUBDIR+= regex setjmp setjmp-signal sigreturn sigsetjmp sprintf
SUBDIR+= stdio_threading stpncpy strerror strlcat strnlen strtod strtol strtonum
@


1.44
log
@Add strnlen to SUBDIRS so we actually run its tests.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.43 2014/07/03 21:12:24 miod Exp $
d9 1
a9 1
SUBDIR+= stdio_threading stpncpy strerror strnlen strtod strtol strtonum
@


1.43
log
@Enter the REGRESS_FULL target subdirs for clean, cleandir and obj targets.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.42 2014/06/18 08:24:00 matthew Exp $
d9 1
a9 1
SUBDIR+= stdio_threading stpncpy strerror strtod strtol strtonum
@


1.42
log
@Add regress tests to make sure arc4random(3) is reinitialized
correctly in fork children.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.41 2014/06/13 01:55:02 matthew Exp $
d12 1
a12 1
.if defined(REGRESS_FULL)
@


1.41
log
@Add regress tests for timingsafe_bcmp and timingsafe_memcmp.

timingsafe_memcmp tests are disabled for now, pending its addition to
libc.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.40 2014/06/12 22:01:55 matthew Exp $
d3 2
a4 1
SUBDIR+= _setjmp alloca atexit basename cephes cxa-atexit db dirname env
@


1.40
log
@Add regress test for explicit_bzero.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.39 2014/06/07 01:46:40 tobiasu Exp $
d9 1
a9 1
SUBDIR+= telldir time vis
@


1.39
log
@Add basic regression test for modf() issue.

encouraged by deraadt and miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2013/12/29 01:39:44 martynas Exp $
d4 1
a4 1
SUBDIR+= fmemopen fnmatch fpclassify getcap getopt_long glob
@


1.38
log
@Add a regression test to verify that the FPU control word state is
preserved by setjmp.  Currently under REGRESS_FULL as this fails
on certain archs.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2013/08/01 21:26:30 kettenis Exp $
d5 1
a5 1
SUBDIR+= hsearch longjmp locale malloc mkstemp netdb open_memstream 
@


1.37
log
@Some tests are currently failing.  Only run those if the REGRESS_FULL
variable is set.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36 2013/05/02 09:20:17 mpi Exp $
d13 1
@


1.36
log
@Hook up fmemopen and open_memstream tests.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.35 2012/11/18 04:11:09 jsing Exp $
d4 1
a4 1
SUBDIR+= fmemopen fnmatch fpclassify getaddrinfo getcap getopt_long glob
d10 4
@


1.35
log
@Add a regress test for strtol, which currently fails.

ok otto@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 2011/07/02 18:12:48 martynas Exp $
d4 3
a6 2
SUBDIR+= fnmatch fpclassify getaddrinfo getcap getopt_long glob hsearch
SUBDIR+= longjmp locale malloc mkstemp netdb orientation popen printf
@


1.34
log
@catch off-by-one errors in stpncpy(); ok guenther@@
@
text
@d7 2
a8 1
SUBDIR+= stdio_threading stpncpy strerror strtod strtonum telldir time vis
@


1.33
log
@Add cephes.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 2010/08/23 22:34:37 millert Exp $
d3 5
a7 5
SUBDIR+= _setjmp alloca atexit basename cxa-atexit db dirname fnmatch
SUBDIR+= fpclassify getaddrinfo getcap getopt_long glob hsearch longjmp
SUBDIR+= locale malloc netdb popen printf regex setjmp setjmp-signal
SUBDIR+= sigreturn sigsetjmp sprintf strerror strtod strtonum telldir time vis
SUBDIR+= orientation stdio_threading mkstemp env cephes
@


1.32
log
@Add setenv/putenv regress
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2010/02/11 07:35:38 guenther Exp $
d7 1
a7 1
SUBDIR+= orientation stdio_threading mkstemp env
@


1.31
log
@Add a regression suite for mkstemp(), verifying that it neither overruns
no underruns the supplied template buffer, that it can generate names that
don't contain any X's, and that all open() calls that pass O_CREAT also
pass O_EXCL
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2009/11/21 09:56:10 guenther Exp $
d7 1
a7 1
SUBDIR+= orientation stdio_threading mkstemp
@


1.30
log
@Add a (hopefully) comprehensive regression test of how stdio functions
affect stream orientation
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2009/11/19 08:06:06 guenther Exp $
d7 1
a7 1
SUBDIR+= orientation stdio_threading
@


1.29
log
@Add regression tests for stdio threading.  Originally by blambert with
some further hacking by me
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2008/10/02 12:26:45 millert Exp $
d7 1
a7 1
SUBDIR+= stdio_threading
@


1.28
log
@Hook up fnmatch and glob regress.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2008/09/07 20:36:10 martynas Exp $
d7 1
@


1.27
log
@- replace dtoa w/ David's gdtoa, version 2008-03-15
- provide proper dtoa locks
- use the real strtof implementation
- add strtold, __hdtoa, __hldtoa
- add %a/%A support
- don't lose precision in printf, don't round to double anymore
- implement extended-precision versions of libc functions: fpclassify,
isnan, isinf, signbit, isnormal, isfinite, now that the ieee.h is
fixed
- separate vax versions of strtof, and __hdtoa
- add complex math support.  added functions: cacos, casin, catan,
ccos, csin, ctan, cacosh, casinh, catanh, ccosh, csinh, ctanh, cexp,
clog, cabs, cpow, csqrt, carg, cimag, conj, cproj, creal, cacosf,
casinf, catanf, ccosf, csinf, ctanf, cacoshf, casinhf, catanhf,
ccoshf, csinhf, ctanhf, cexpf, clogf, cabsf, cpowf, csqrtf, cargf,
cimagf, conjf, cprojf, crealf
- add fdim, fmax, fmin
- add log2. (adapted implementation e_log.c.  could be more acruate
& faster, but it's good enough for now)
- remove wrappers & cruft in libm, supposed to work-around mistakes
in SVID, etc.;  use ieee versions.  fixes issues in python 2.6 for
djm@@
- make _digittoint static
- proper definitions for i386, and amd64 in ieee.h
- sh, powerpc don't really have extended-precision
- add missing definitions for mips64 (quad), m{6,8}k (96-bit) float.h
for LDBL_*
- merge lead to frac for m{6,8}k, for gdtoa to work properly
- add FRAC*BITS & EXT_TO_ARRAY32 definitions in ieee.h, for hdtoa&ldtoa
to use
- add EXT_IMPLICIT_NBIT definition, which indicates implicit
normalization bit
- add regression tests for libc: fpclassify and printf
- arith.h & gd_qnan.h definitions
- update ieee.h: hppa doesn't have quad-precision, hppa64 does
- add missing prototypes to gdtoaimp
- on 64-bit platforms make sure gdtoa doesn't use a long when it
really wants an int
- etc., what i may have forgotten...
- bump libm major, due to removed&changed symbols
- no libc bump, since this is riding on djm's libc major crank from
a day ago

discussed with / requested by / testing theo, sthen@@, djm@@, jsg@@,
merdely@@, jsing@@, tedu@@, brad@@, jakemsr@@, and others.
looks good to millert@@
parts of the diff ok kettenis@@

this commit does not include:
- man page changes
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2007/09/03 14:42:43 millert Exp $
d3 4
a6 4
SUBDIR+= _setjmp alloca atexit basename cxa-atexit db dirname fpclassify 
SUBDIR+= getaddrinfo getcap getopt_long hsearch longjmp locale malloc
SUBDIR+= netdb popen printf regex setjmp setjmp-signal sigreturn sigsetjmp
SUBDIR+= sprintf strerror strtod strtonum telldir time vis
@


1.26
log
@Adapt atexit() regress to recent changes and add __cxa_atexit() regress.
__cxa_atexit() regress from kurt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2007/05/17 03:02:32 ray Exp $
d3 3
a5 3
SUBDIR+= _setjmp alloca atexit basename cxa-atexit db dirname getaddrinfo
SUBDIR+= getcap getopt_long hsearch longjmp locale malloc
SUBDIR+= netdb popen regex setjmp setjmp-signal sigreturn sigsetjmp
@


1.25
log
@Add basename(3) and dirname(3) regression tests, from tbert.

OK otto@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2006/09/29 11:00:24 otto Exp $
d3 1
a3 1
SUBDIR+= _setjmp alloca atexit basename db dirname getaddrinfo
@


1.24
log
@add strtod() underflow test
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2006/03/25 20:28:19 otto Exp $
d3 2
a4 2
SUBDIR+= _setjmp alloca atexit db getaddrinfo getcap getopt_long hsearch longjmp
SUBDIR+= locale malloc
@


1.23
log
@hook telldir
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2006/03/10 05:46:17 ray Exp $
d6 1
a6 1
SUBDIR+= sprintf strerror strtonum telldir time vis
@


1.22
log
@Hook up getcap test.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2005/08/29 18:41:56 otto Exp $
d6 1
a6 1
SUBDIR+= sprintf strerror strtonum time vis
@


1.21
log
@Basic regress test for the vis(3) family of functions. Extra tests
for various flag values will be added later.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2005/08/12 00:28:08 deraadt Exp $
d3 1
a3 1
SUBDIR+= _setjmp alloca atexit db getaddrinfo getopt_long hsearch longjmp
@


1.20
log
@untested Makefile commited
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2005/08/11 21:57:02 espie Exp $
d6 1
a6 1
SUBDIR+= sprintf strerror strtonum time
@


1.19
log
@regression test to check that isw* functions yield the same result as
is* functions, and that basic mb->wchar conversion yields sensible results.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2004/10/25 15:10:36 otto Exp $
d3 1
a3 1
SUBDIR+= _setjmp alloca atexit db getaddrinfo getopt_long hsearch longjmp \
@


1.18
log
@basic regression test for some netdb functions
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2004/08/03 20:39:28 otto Exp $
d3 2
a4 1
SUBDIR+= _setjmp alloca atexit db getaddrinfo getopt_long hsearch longjmp malloc
@


1.17
log
@Enable strtonum test
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2004/07/10 06:41:51 david Exp $
d4 1
a4 1
SUBDIR+= popen regex setjmp setjmp-signal sigreturn sigsetjmp
@


1.16
log
@add getopt_long regress; ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2004/06/24 04:33:07 millert Exp $
d5 1
a5 1
SUBDIR+= sprintf strerror time
@


1.15
log
@hsearch regress from NetBSD via ray at cyth dot net
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2004/04/30 17:15:12 espie Exp $
d3 1
a3 1
SUBDIR+= _setjmp alloca atexit db getaddrinfo hsearch longjmp malloc
@


1.14
log
@Add tests for strerror.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2004/02/11 23:38:11 deraadt Exp $
d3 1
a3 1
SUBDIR+= _setjmp alloca atexit db getaddrinfo longjmp malloc
@


1.13
log
@include some missing ones
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2004/01/20 16:47:55 millert Exp $
d5 1
a5 1
SUBDIR+= sprintf time
@


1.12
log
@Add strptime regress from NetBSD; OK miod@@ after un-peeing.
@
text
@d1 5
a5 1
#	$OpenBSD: Makefile,v 1.11 2003/05/15 04:23:49 deraadt Exp $
a6 3
SUBDIR+= alloca
SUBDIR+= _setjmp db getaddrinfo regex setjmp sigsetjmp malloc sigreturn popen
SUBDIR+= longjmp atexit sprintf time
@


1.11
log
@first sprintf test: positional args
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2003/02/12 06:49:04 mickey Exp $
d5 1
a5 1
SUBDIR+= longjmp atexit sprintf
@


1.10
log
@simple alloca test. done twice per deraadt@@ suggest
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2002/08/30 07:58:08 dhartmei Exp $
d5 1
a5 1
SUBDIR+= longjmp atexit
@


1.9
log
@re-enable function pointer table protection, this time make sure that
malloc.c gets the first mmap() call (since it depends on that, for its
sbrk(0) use). ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2002/07/05 15:54:30 itojun Exp $
d3 1
@


1.8
log
@regress for getaddrinfo/getnameinfo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2002/02/23 01:25:10 art Exp $
d4 1
a4 1
SUBDIR+= longjmp
@


1.7
log
@no more need to explicitly specify regress: _SUBDIRUSE targets anymore.
XXX - what about the install targets?
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2002/02/18 11:28:27 art Exp $
d3 1
a3 1
SUBDIR+= _setjmp db regex setjmp sigsetjmp malloc sigreturn popen
@


1.6
log
@add longjmp
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2002/02/16 01:58:33 art Exp $
a11 2

regress: _SUBDIRUSE
@


1.5
log
@popen
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.4 2002/01/03 19:18:42 marc Exp $
#	$NetBSD: Makefile,v 1.6 1995/04/24 05:52:15 cgd Exp $
d4 1
@


1.4
log
@add sigreturn subdir
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2001/12/05 09:52:01 deraadt Exp $
d4 1
a4 1
SUBDIR+= _setjmp db regex setjmp sigsetjmp malloc sigreturn
@


1.3
log
@malloc(n) regression test
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2001/01/29 02:05:37 niklas Exp $
d4 1
a4 1
SUBDIR+= _setjmp db regex setjmp sigsetjmp malloc
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1995/04/24 05:52:15 cgd Exp $
d4 1
a4 1
SUBDIR+= _setjmp db regex setjmp sigsetjmp
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
