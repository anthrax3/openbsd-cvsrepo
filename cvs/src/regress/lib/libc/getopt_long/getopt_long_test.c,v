head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.56
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.58
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.54
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.44
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.52
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.50
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.48
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.46
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.42
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.40
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.38
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.36
	OPENBSD_5_0:1.6.0.34
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4;
locks; strict;
comment	@ * @;


1.6
date	2003.06.17.21.56.24;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.01.52.40;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.08.19.25.08;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.07.19.57.24;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.05.22.29.46;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2002.12.05.21.42.17;	author millert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Sync with share/misc/license.template and add missing DARPA credit
where applicable.
@
text
@/*
 * Copyright (c) 2002 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F39502-99-1-0512.
 */

#include <stdio.h>
#include <stdlib.h>
#include <getopt.h>

/*
 * Simple getopt_long() and getopt_long_only() excerciser.
 * ENVIRONMENT:
 *	LONG_ONLY	: use getopt_long_only() (default is getopt_long())
 *	POSIXLY_CORRECT	: don't permute args
 */

int
main(int argc, char **argv)
{
	int ch, idx, goggles;
	int (*gl)(int, char * const *, const char *, const struct option *, int *);
	struct option longopts[] = {
		{ "force", no_argument, 0, 0 },
		{ "fast", no_argument, 0, '1' },
		{ "best", no_argument, 0, '9' },
		{ "input", required_argument, 0, 'i' },
		{ "illiterate", no_argument, 0, 0 },
		{ "drinking", required_argument, &goggles, 42 },
		{ "help", no_argument, 0, 'h' },
		{ 0, 0, 0, 0 },
	};

	if (getenv("LONG_ONLY")) {
		gl = getopt_long_only;
		printf("getopt_long_only");
	} else {
		gl = getopt_long;
		printf("getopt_long");
	}
	if (getenv("POSIXLY_CORRECT"))
		printf(" (POSIXLY_CORRECT)");
	printf(": ");
	for (idx = 1; idx < argc; idx++)
		printf("%s ", argv[idx]);
	printf("\n");

	goggles = 0;
	for (;;) {
		idx = -1;
		ch = gl(argc, argv, "19bf:i:hW;-", longopts, &idx);
		if (ch == -1)
			break;
		switch (ch) {
		case 0:
		case '1':
		case '9':
		case 'h':
		case 'b':
		case '-':
			if (idx != -1) {
				if (goggles == 42)
					printf("option %s, arg %s\n",
					    longopts[idx].name, optarg);
				else
					printf("option %s\n",
					    longopts[idx].name);
			} else
				printf("option %c\n", ch);
			break;
		case 'f':
		case 'i':
			if (idx != -1)
				printf("option %s, arg %s\n",
				    longopts[idx].name, optarg);
			else
				printf("option %c, arg %s\n", ch, optarg);
			break;

		case '?':
			break;

		default:
			printf("unexpected return value: %c\n", ch);
			break;
		}
	}
	argc -= optind;
	argv += optind;

	if (argc > 0) {
		printf("remaining ARGV: ");
		while (argc--)
			printf("%s ", *argv++);
		printf("\n");
	}
	printf("\n");

	exit (0);
}
@


1.5
log
@Use an ISC-tyle license for all my code; it is simpler and more permissive.
@
text
@d8 11
a18 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND TODD C. MILLER DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL TODD C. MILLER BE LIABLE
 * FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
@


1.4
log
@Test option "-" (BSD extension)
@
text
@a2 1
 * All rights reserved.
d4 3
a6 8
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d8 7
a14 10
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.3
log
@Add test for fix in revision 1.5 of getopt_long.c
@
text
@d70 1
a70 1
		ch = gl(argc, argv, "19bf:i:hW;", longopts, &idx);
d79 1
@


1.2
log
@excercise "-W longopt"
@
text
@d78 1
@


1.1
log
@simple regress for getopt_long() and getopt_long_only()
@
text
@d70 1
a70 1
		ch = gl(argc, argv, "19bf:i:h", longopts, &idx);
@

