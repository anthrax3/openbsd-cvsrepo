head	1.25;
access;
symbols
	OPENBSD_6_1:1.25.0.4
	OPENBSD_6_1_BASE:1.25
	OPENBSD_6_0:1.23.0.4
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.23.0.2
	OPENBSD_5_9_BASE:1.23
	OPENBSD_5_8:1.22.0.4
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.21.0.4
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.19.0.4
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.14.0.16
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.12
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.10
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.8
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.6
	OPENBSD_5_0:1.14.0.4
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.2
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.13.0.8
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.4
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.6
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.2
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.12.0.22
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.20
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.18
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.16
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.12
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.10
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@# @;


1.25
date	2017.03.05.14.15.53;	author jsing;	state Exp;
branches;
next	1.24;
commitid	4IxGVgcKp1Gtoy7Y;

1.24
date	2016.11.04.19.45.12;	author jsing;	state Exp;
branches;
next	1.23;
commitid	ac97Dn1Xr6ijYQ3I;

1.23
date	2015.09.01.17.02.17;	author jsing;	state Exp;
branches;
next	1.22;
commitid	QjJpBrhs9iMemp4K;

1.22
date	2015.06.28.00.08.27;	author doug;	state Exp;
branches;
next	1.21;
commitid	JVzmospDlYt9nhzg;

1.21
date	2015.02.06.09.36.16;	author doug;	state Exp;
branches;
next	1.20;
commitid	t6BPqtyhmeNgetxc;

1.20
date	2015.02.06.08.48.39;	author jsing;	state Exp;
branches;
next	1.19;
commitid	GDJkCDVKcykbNMDv;

1.19
date	2014.07.13.16.03.54;	author jsing;	state Exp;
branches;
next	1.18;
commitid	cr5n55nO6YEqVMjh;

1.18
date	2014.05.24.14.56.32;	author jsing;	state Exp;
branches;
next	1.17;

1.17
date	2014.05.24.13.32.46;	author jsing;	state dead;
branches;
next	1.16;

1.16
date	2014.04.17.08.06.59;	author jsg;	state Exp;
branches;
next	1.15;

1.15
date	2014.04.16.08.29.22;	author jsg;	state Exp;
branches;
next	1.14;

1.14
date	2010.10.03.19.47.18;	author naddy;	state Exp;
branches;
next	1.13;

1.13
date	2008.09.06.12.21.54;	author djm;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.16.03.15.14;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.24.08.37.14;	author markus;	state Exp;
branches;
next	1.10;

1.10
date	2002.09.26.11.39.50;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	2002.09.02.20.01.43;	author avsm;	state Exp;
branches;
next	1.8;

1.8
date	2002.09.01.16.29.31;	author markus;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.15.02.36.07;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.15.18.51.39;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.02.15.17.34;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.07.20.27.08;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.29.02.05.46;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	99.01.05.17.53.09;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.01.04.07.59.57;	author beck;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Add an initial regress test that covers the server-side of libssl, by
providing SSL_accept() with fixed ClientHello messages.
@
text
@#	$OpenBSD: Makefile,v 1.24 2016/11/04 19:45:12 jsing Exp $

SUBDIR= \
	asn1 \
	bytestring \
	ciphers \
	client \
	pqueue \
	server \
	ssl \
	unit

install:

.include <bsd.subdir.mk>
@


1.24
log
@Move pqueue regress from libcrypto to libssl, since that's where the pqueue
code now lives. Also unbreak the regress following the symbol hiding
changes in libssl.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2015/09/01 17:02:17 jsing Exp $
d9 1
@


1.23
log
@Add an initial TLS client regress, which currently covers ClientHello
message generation.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2015/06/28 00:08:27 doug Exp $
d8 1
@


1.22
log
@Convert ssl_bytes_to_cipher_list to CBS.

Link in the new 'unit' regress and expand the invalid tests to include
some that would fail before the CBS conversion.

input + ok miod@@ jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2015/02/06 09:36:16 doug Exp $
d7 1
@


1.21
log
@Import BoringSSL's crypto bytestring and crypto bytebuilder APIs.

This is imported with as few changes as possible for the initial commit.
I removed OPENSSL_EXPORT, replaced OPENSSL_malloc() etc with malloc()
and changed a few header includes.

BoringSSL has this as part of their public API.  We're leaving it internal
to libssl for now.

Based on BoringSSL's CBB/CBS API as of commit
c5cc15b4f5b1d6e9b9112cb8d30205a638aa2c54.

input + ok jsing@@, miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2015/02/06 08:48:39 jsing Exp $
d7 2
a8 1
	ssl
@


1.20
log
@Add libssl ciphers regress, which currently only covers
get_cipher_by_char/put_cipher_by_char.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2014/07/13 16:03:54 jsing Exp $
d5 1
@


1.19
log
@Add a regress test for the ASN1 handling of SSL session tickets.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2014/05/24 14:56:32 jsing Exp $
d5 1
@


1.18
log
@Move ssltest.c to a regress test.
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 1
@


1.17
log
@Move the regress tests that are in lib/libssl to usr.sbin/openssl,
since they are really testing openssl(1) (although this also tests
libcrypto and libssl), rather than actual parts of the libssl library.

Discussed with miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2014/04/17 08:06:59 jsg Exp $
d3 2
a4 1
CLEANFILES+= testdsa.key testdsa.pem rsakey.pem rsacert.pem dsa512.pem
d6 1
a6 1
REGRESS_TARGETS=ssl-enc ssl-dsa ssl-rsa 
d8 1
a8 52
OPENSSL=/usr/sbin/openssl
CLEAR1=p
CIPHER=cipher
CLEAR2=clear
LIBCRYPTO=-lcrypto

${CLEAR1}: openssl.cnf
	cat ${.CURDIR}/openssl.cnf > ${CLEAR1}

CLEANFILES+=${CLEAR1}

ENCTARGETS=aes-128-cbc aes-128-cfb aes-128-cfb1 aes-128-cfb8
ENCTARGETS+=aes-128-ecb aes-128-ofb aes-192-cbc aes-192-cfb
ENCTARGETS+=aes-192-cfb1 aes-192-cfb8 aes-192-ecb aes-192-ofb
ENCTARGETS+=aes-256-cbc aes-256-cfb aes-256-cfb1 aes-256-cfb8
ENCTARGETS+=aes-256-ecb aes-256-ofb
ENCTARGETS+=bf-cbc bf-cfb bf-ecb bf-ofb
ENCTARGETS+=cast-cbc cast5-cbc cast5-cfb cast5-ecb cast5-ofb
ENCTARGETS+=des-cbc des-cfb des-cfb8 des-ecb des-ede
ENCTARGETS+=des-ede-cbc des-ede-cfb des-ede-ofb des-ede3
ENCTARGETS+=des-ede3-cbc des-ede3-cfb des-ede3-ofb des-ofb desx-cbc
ENCTARGETS+=rc2-40-cbc rc2-64-cbc rc2-cbc rc2-cfb rc2-ecb rc2-ofb
ENCTARGETS+=rc4 rc4-40

.for ENC in ${ENCTARGETS}
${CIPHER}.${ENC}: ${CLEAR1}
	${OPENSSL} enc -${ENC} -bufsize 113 -e -k test < ${CLEAR1} > ${CIPHER}.${ENC}
${CIPHER}.${ENC}.b64: ${CLEAR1}
	${OPENSSL} enc -${ENC} -bufsize 113 -a -e -k test < ${CLEAR1} > ${CIPHER}.${ENC}.b64

${CLEAR2}.${ENC}: ${CIPHER}.${ENC}
	${OPENSSL} enc -${ENC} -bufsize 157 -d -k test < ${CIPHER}.${ENC} > ${CLEAR2}.${ENC}
${CLEAR2}.${ENC}.b64: ${CIPHER}.${ENC}.b64
	${OPENSSL} enc -${ENC} -bufsize 157 -a -d -k test < ${CIPHER}.${ENC}.b64 > ${CLEAR2}.${ENC}.b64

ssl-enc-${ENC}: ${CLEAR1} ${CLEAR2}.${ENC}
	cmp ${CLEAR1} ${CLEAR2}.${ENC}
ssl-enc-${ENC}.b64: ${CLEAR1} ${CLEAR2}.${ENC}.b64
	cmp ${CLEAR1} ${CLEAR2}.${ENC}.b64

REGRESS_TARGETS+=ssl-enc-${ENC} ssl-enc-${ENC}.b64
CLEANFILES+=${CIPHER}.${ENC} ${CIPHER}.${ENC}.b64 ${CLEAR2}.${ENC} ${CLEAR2}.${ENC}.b64 .rnd
.endfor

ssl-enc:
	sh ${.CURDIR}/testenc.sh ${.OBJDIR} ${.CURDIR}
ssl-dsa:
	sh ${.CURDIR}/testdsa.sh ${.OBJDIR} ${.CURDIR}
ssl-rsa:
	sh ${.CURDIR}/testrsa.sh ${.OBJDIR} ${.CURDIR}

.include <bsd.regress.mk>
@


1.16
log
@Remove the ossltests target, these are now all in libcrypto regress
except sha256t/sha512t which are likely to be removed for license reasons.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2014/04/16 08:29:22 jsg Exp $
@


1.15
log
@adapt to test file moves
md2test and rsatest targets removed as the files have been removed
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2010/10/03 19:47:18 naddy Exp $
d5 1
a5 1
REGRESS_TARGETS=ossltests ssl-enc ssl-dsa ssl-rsa 
a12 56
BFTEST=		bftest
BNTEST=		bntest
CASTTEST=	casttest
DESTEST=	destest
DHTEST=		dhtest
DSATEST=	dsatest
ECDHTEST=	ecdhtest
ECDSATEST=	ecdsatest
ECTEST=		ectest
ENGINETEST=	enginetest
EVPTEST=	evptest
EXPTEST=	exptest
HMACTEST=	hmactest
IGETEST=	igetest
MD4TEST=	md4test
MD5TEST=	md5test
RANDTEST=	randtest
RC2TEST=	rc2test
RC4TEST=	rc4test
RMDTEST=	rmdtest
SHA1TEST=	sha1test
SHA256TEST=	sha256t
SHA512TEST=	sha512t
SHATEST=	shatest

SSLDIR=	${.CURDIR}/../../../lib/libssl/src/crypto
CRYPTODIR= ${.CURDIR}/../libcrypto
CFLAGS+= -Wall -I${SSLDIR} -I${SSLDIR}/..

CLEANFILES+=	$(BNTEST).c $(ECTEST).c $(HMACTEST).c \
	$(SHATEST).c $(SHA1TEST).c $(MDC2TEST).c $(RMDTEST).c \
	$(RANDTEST).c $(DHTEST).c $(ENGINETEST).c \
	$(CASTTEST).c $(EXPTEST).c $(DSATEST).c \
	$(EVPTEST).c $(DESTEST).c ${RC2TEST}.c ${RC4TEST}.c \
	${MD4TEST}.c ${MD5TEST}.c ${BFTEST}.c ${ECDHTEST}.c ${ECDSATEST}.c \
	${IGETEST}.c ${SHA256TEST}.c ${SHA512TEST}.c

CLEANFILES+=	$(BNTEST) $(ECTEST) $(HMACTEST) \
	$(SHATEST) $(SHA1TEST) $(MDC2TEST) $(RMDTEST) \
	$(RANDTEST) $(DHTEST) $(ENGINETEST) \
	$(CASTTEST) $(EXPTEST) $(DSATEST) \
	$(EVPTEST) $(DESTEST) ${RC2TEST} ${RC4TEST} ${MD4TEST} \
	${MD5TEST} ${BFTEST} ${ECDHTEST} ${ECDSATEST} ${IGETEST} \
	${SHA256TEST} ${SHA512TEST}

CLEANFILES+= ${BNTEST}.out

OTESTS= ${ENGINETEST}  \
	${EXPTEST} ${RANDTEST} \
	${MD4TEST} ${MD5TEST} \
	${SHATEST} ${SHA1TEST} ${HMACTEST} ${RMDTEST} ${MDC2TEST} \
	${CASTTEST} ${BFTEST} ${RC2TEST} ${RC4TEST} ${DESTEST} \
	${DHTEST} ${DSATEST} \
	${ECTEST} ${ECDHTEST} ${ECDSATEST} $(IGETEST) \
	$(SHA256TEST) $(SHA512TEST)

a56 150

ossltests: ${OTESTS} ${BNTEST} ${EVPTEST}
	@@echo running ${BNTEST}, check ${.OBJDIR}/${BNTEST}.out if this fails.
	${.OBJDIR}/${BNTEST} > ${.OBJDIR}/${BNTEST}.out 2>&1
.for OT in ${OTESTS}
	@@echo running ${OT}
	${.OBJDIR}/${OT} 
.endfor
	@@echo running ${EVPTEST}
	${.OBJDIR}/${EVPTEST} ${CRYPTODIR}/evp/evptests.txt

$(BNTEST).c: ${CRYPTODIR}/bn/bntest.c
	cp ${CRYPTODIR}/bn/bntest.c ${.OBJDIR}

$(BNTEST): ${BNTEST}.c
	cc ${CFLAGS} -o $(BNTEST) ${BNTEST}.c $(LIBCRYPTO)

$(EXPTEST).c: ${CRYPTODIR}/exp/exptest.c
	cp ${CRYPTODIR}/exp/exptest.c ${.OBJDIR}

$(EXPTEST): ${EXPTEST}.c
	cc ${CFLAGS} -o $(EXPTEST) ${EXPTEST}.c $(LIBCRYPTO)

$(ECTEST).c: ${CRYPTODIR}/ec/ectest.c
	cp ${CRYPTODIR}/ec/ectest.c ${.OBJDIR}

$(ECTEST): ${ECTEST}.c
	cc ${CFLAGS} -o $(ECTEST) ${ECTEST}.c $(LIBCRYPTO)

$(EVPTEST).c: ${CRYPTODIR}/evp/${EVPTEST}.c
	cp ${CRYPTODIR}/evp/${EVPTEST}.c ${.OBJDIR}
$(EVPTEST): ${EVPTEST}.c
	cc ${CFLAGS} -o $(EVPTEST) ${EVPTEST}.c $(LIBCRYPTO)

$(SHATEST).c: ${CRYPTODIR}/sha/${SHATEST}.c
	cp ${CRYPTODIR}/sha/${SHATEST}.c ${.OBJDIR}
$(SHATEST): ${SHATEST}.c
	cc ${CFLAGS} -o $(SHATEST) ${SHATEST}.c $(LIBCRYPTO)

$(SHA1TEST).c: ${CRYPTODIR}/sha1/${SHA1TEST}.c
	cp ${CRYPTODIR}/sha1/${SHA1TEST}.c ${.OBJDIR}
$(SHA1TEST): ${SHA1TEST}.c
	cc ${CFLAGS} -o $(SHA1TEST) ${SHA1TEST}.c $(LIBCRYPTO)

$(RANDTEST).c: ${CRYPTODIR}/rand/${RANDTEST}.c
	cp ${CRYPTODIR}/rand/${RANDTEST}.c ${.OBJDIR}
$(RANDTEST): ${RANDTEST}.c
	cc ${CFLAGS} -o $(RANDTEST) ${RANDTEST}.c $(LIBCRYPTO)

$(RMDTEST).c: ${CRYPTODIR}/rmd/${RMDTEST}.c
	cp ${CRYPTODIR}/rmd/${RMDTEST}.c ${.OBJDIR}
$(RMDTEST): ${RMDTEST}.c
	cc ${CFLAGS} -o $(RMDTEST) ${RMDTEST}.c $(LIBCRYPTO)

$(DHTEST).c: ${CRYPTODIR}/dh/${DHTEST}.c
	cp ${CRYPTODIR}/dh/${DHTEST}.c ${.OBJDIR}

$(DHTEST): ${DHTEST}.c
	cc ${CFLAGS} -o $(DHTEST) ${DHTEST}.c $(LIBCRYPTO)

$(ENGINETEST).c: ${SSLDIR}/engine/${ENGINETEST}.c
	cp ${SSLDIR}/engine/${ENGINETEST}.c ${.OBJDIR}

$(ENGINETEST): ${ENGINETEST}.c
	cc ${CFLAGS} -o $(ENGINETEST) ${ENGINETEST}.c $(LIBCRYPTO)

$(CASTTEST).c: ${CRYPTODIR}/cast/${CASTTEST}.c
	cp ${CRYPTODIR}/cast/${CASTTEST}.c ${.OBJDIR}

$(CASTTEST): ${CASTTEST}.c
	cc ${CFLAGS} -o $(CASTTEST) ${CASTTEST}.c $(LIBCRYPTO)

$(DSATEST).c: ${CRYPTODIR}/dsa/${DSATEST}.c
	cp ${CRYPTODIR}/dsa/${DSATEST}.c ${.OBJDIR}

$(DSATEST): ${DSATEST}.c
	cc ${CFLAGS} -o $(DSATEST) ${DSATEST}.c $(LIBCRYPTO)


$(HMACTEST).c: ${CRYPTODIR}/hmac/${HMACTEST}.c
	cp ${CRYPTODIR}/hmac/${HMACTEST}.c ${.OBJDIR}

$(HMACTEST): ${HMACTEST}.c
	cc ${CFLAGS} -o $(HMACTEST) ${HMACTEST}.c $(LIBCRYPTO)

$(DESTEST).c: ${CRYPTODIR}/des/${DESTEST}.c
	cp ${CRYPTODIR}/des/${DESTEST}.c ${.OBJDIR}

$(DESTEST): ${DESTEST}.c
	cc ${CFLAGS} -o $(DESTEST) ${DESTEST}.c $(LIBCRYPTO)

$(BFTEST).c: ${CRYPTODIR}/bf/${BFTEST}.c
	cp ${CRYPTODIR}/bf/${BFTEST}.c ${.OBJDIR}

$(BFTEST): ${BFTEST}.c
	cc ${CFLAGS} -o $(BFTEST) ${BFTEST}.c $(LIBCRYPTO)

$(RC2TEST).c: ${CRYPTODIR}/rc2/${RC2TEST}.c
	cp ${CRYPTODIR}/rc2/${RC2TEST}.c ${.OBJDIR}

$(RC2TEST): ${RC2TEST}.c
	cc ${CFLAGS} -o $(RC2TEST) ${RC2TEST}.c $(LIBCRYPTO)

$(RC4TEST).c: ${CRYPTODIR}/rc4/${RC4TEST}.c
	cp ${CRYPTODIR}/rc4/${RC4TEST}.c ${.OBJDIR}

$(RC4TEST): ${RC4TEST}.c
	cc ${CFLAGS} -o $(RC4TEST) ${RC4TEST}.c $(LIBCRYPTO)

$(MD4TEST).c: ${CRYPTODIR}/md4/${MD4TEST}.c
	cp ${CRYPTODIR}/md4/${MD4TEST}.c ${.OBJDIR}

$(MD4TEST): ${MD4TEST}.c
	cc ${CFLAGS} -o $(MD4TEST) ${MD4TEST}.c $(LIBCRYPTO)

$(MD5TEST).c: ${CRYPTODIR}/md5/${MD5TEST}.c
	cp ${CRYPTODIR}/md5/${MD5TEST}.c ${.OBJDIR}

$(MD5TEST): ${MD5TEST}.c
	cc ${CFLAGS} -o $(MD5TEST) ${MD5TEST}.c $(LIBCRYPTO)

$(ECDHTEST).c: ${CRYPTODIR}/ecdh/${ECDHTEST}.c
	cp ${CRYPTODIR}/ecdh/${ECDHTEST}.c ${.OBJDIR}

$(ECDHTEST): ${ECDHTEST}.c
	cc ${CFLAGS} -o $(ECDHTEST) ${ECDHTEST}.c $(LIBCRYPTO)

$(ECDSATEST).c: ${CRYPTODIR}/ecdsa/${ECDSATEST}.c
	cp ${CRYPTODIR}/ecdsa/${ECDSATEST}.c ${.OBJDIR}

$(ECDSATEST): ${ECDSATEST}.c
	cc ${CFLAGS} -o $(ECDSATEST) ${ECDSATEST}.c $(LIBCRYPTO)

$(IGETEST).c: ${SSLDIR}/../test/${IGETEST}.c
	cp ${SSLDIR}/../test/${IGETEST}.c ${.OBJDIR}

$(IGETEST): ${IGETEST}.c
	cc ${CFLAGS} -o $(IGETEST) ${IGETEST}.c $(LIBCRYPTO)

$(SHA256TEST).c: ${SSLDIR}/sha/${SHA256TEST}.c
	cp ${SSLDIR}/sha/${SHA256TEST}.c ${.OBJDIR}

$(SHA256TEST): ${SHA256TEST}.c
	cc ${CFLAGS} -o $(SHA256TEST) ${SHA256TEST}.c $(LIBCRYPTO)

$(SHA512TEST).c: ${SSLDIR}/sha/${SHA512TEST}.c
	cp ${SSLDIR}/sha/${SHA512TEST}.c ${.OBJDIR}

$(SHA512TEST): ${SHA512TEST}.c
	cc ${CFLAGS} -o $(SHA512TEST) ${SHA512TEST}.c $(LIBCRYPTO)
@


1.14
log
@don't use non-standard CFLAGS; ok miod@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2008/09/06 12:21:54 djm Exp $
d23 1
a23 1
EVPTEST=	evp_test
a26 1
MD2TEST=	md2test
a32 1
RSATEST=	rsa_test
d39 1
d45 2
a46 2
	$(CASTTEST).c $(EXPTEST).c $(DSATEST).c $(RSATEST).c \
	$(EVPTEST).c $(DESTEST).c ${RC2TEST}.c ${RC4TEST}.c ${MD2TEST}.c \
d53 2
a54 2
	$(CASTTEST) $(EXPTEST) $(DSATEST) $(RSATEST) \
	$(EVPTEST) $(DESTEST) ${RC2TEST} ${RC4TEST} ${MD2TEST} ${MD4TEST} \
d62 1
a62 1
	${MD2TEST} ${MD4TEST} ${MD5TEST} \
d65 1
a65 1
	${DHTEST} ${DSATEST} ${RSATEST} \
d122 1
a122 1
	${.OBJDIR}/${EVPTEST} ${SSLDIR}/evp/evptests.txt
d124 2
a125 2
$(BNTEST).c: ${SSLDIR}/bn/bntest.c
	cp ${SSLDIR}/bn/bntest.c ${.OBJDIR}
d130 2
a131 2
$(EXPTEST).c: ${SSLDIR}/bn/exptest.c
	cp ${SSLDIR}/bn/exptest.c ${.OBJDIR}
d136 2
a137 2
$(ECTEST).c: ${SSLDIR}/ec/ectest.c
	cp ${SSLDIR}/ec/ectest.c ${.OBJDIR}
d142 2
a143 2
$(EVPTEST).c: ${SSLDIR}/evp/${EVPTEST}.c
	cp ${SSLDIR}/evp/${EVPTEST}.c ${.OBJDIR}
d147 2
a148 2
$(SHATEST).c: ${SSLDIR}/sha/${SHATEST}.c
	cp ${SSLDIR}/sha/${SHATEST}.c ${.OBJDIR}
d152 2
a153 2
$(SHA1TEST).c: ${SSLDIR}/sha/${SHA1TEST}.c
	cp ${SSLDIR}/sha/${SHA1TEST}.c ${.OBJDIR}
d157 2
a158 2
$(RANDTEST).c: ${SSLDIR}/rand/${RANDTEST}.c
	cp ${SSLDIR}/rand/${RANDTEST}.c ${.OBJDIR}
d162 2
a163 2
$(RMDTEST).c: ${SSLDIR}/ripemd/${RMDTEST}.c
	cp ${SSLDIR}/ripemd/${RMDTEST}.c ${.OBJDIR}
d167 2
a168 2
$(DHTEST).c: ${SSLDIR}/dh/${DHTEST}.c
	cp ${SSLDIR}/dh/${DHTEST}.c ${.OBJDIR}
d179 2
a180 2
$(CASTTEST).c: ${SSLDIR}/cast/${CASTTEST}.c
	cp ${SSLDIR}/cast/${CASTTEST}.c ${.OBJDIR}
d185 2
a186 8
$(RSATEST).c: ${SSLDIR}/rsa/${RSATEST}.c
	cp ${SSLDIR}/rsa/${RSATEST}.c ${.OBJDIR}

$(RSATEST): ${RSATEST}.c
	cc ${CFLAGS} -o $(RSATEST) ${RSATEST}.c $(LIBCRYPTO)

$(DSATEST).c: ${SSLDIR}/dsa/${DSATEST}.c
	cp ${SSLDIR}/dsa/${DSATEST}.c ${.OBJDIR}
d192 2
a193 2
$(HMACTEST).c: ${SSLDIR}/hmac/${HMACTEST}.c
	cp ${SSLDIR}/hmac/${HMACTEST}.c ${.OBJDIR}
d198 2
a199 2
$(DESTEST).c: ${SSLDIR}/des/${DESTEST}.c
	cp ${SSLDIR}/des/${DESTEST}.c ${.OBJDIR}
d204 2
a205 2
$(BFTEST).c: ${SSLDIR}/bf/${BFTEST}.c
	cp ${SSLDIR}/bf/${BFTEST}.c ${.OBJDIR}
d210 2
a211 2
$(RC2TEST).c: ${SSLDIR}/rc2/${RC2TEST}.c
	cp ${SSLDIR}/rc2/${RC2TEST}.c ${.OBJDIR}
d216 2
a217 2
$(RC4TEST).c: ${SSLDIR}/rc4/${RC4TEST}.c
	cp ${SSLDIR}/rc4/${RC4TEST}.c ${.OBJDIR}
d222 2
a223 8
$(MD2TEST).c: ${SSLDIR}/md2/${MD2TEST}.c
	cp ${SSLDIR}/md2/${MD2TEST}.c ${.OBJDIR}

$(MD2TEST): ${MD2TEST}.c
	cc ${CFLAGS} -o $(MD2TEST) ${MD2TEST}.c $(LIBCRYPTO)

$(MD4TEST).c: ${SSLDIR}/md4/${MD4TEST}.c
	cp ${SSLDIR}/md4/${MD4TEST}.c ${.OBJDIR}
d228 2
a229 2
$(MD5TEST).c: ${SSLDIR}/md5/${MD5TEST}.c
	cp ${SSLDIR}/md5/${MD5TEST}.c ${.OBJDIR}
d234 2
a235 2
$(ECDHTEST).c: ${SSLDIR}/ecdh/${ECDHTEST}.c
	cp ${SSLDIR}/ecdh/${ECDHTEST}.c ${.OBJDIR}
d240 2
a241 2
$(ECDSATEST).c: ${SSLDIR}/ecdsa/${ECDSATEST}.c
	cp ${SSLDIR}/ecdsa/${ECDSATEST}.c ${.OBJDIR}
@


1.13
log
@update for openssl-0.9.8h
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2003/06/16 03:15:14 mickey Exp $
d41 1
a41 1
CFLAGS= -O -g -Wall -I${SSLDIR} -I${SSLDIR}/..
@


1.12
log
@missing blowfish test
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2003/05/24 08:37:14 markus Exp $
d11 1
d13 1
d15 6
d22 2
d25 2
a26 3
SHATEST=	shatest
SHA1TEST=	sha1test
RMDTEST=	rmdtest
d30 1
a30 1
HMACTEST=	hmactest
d33 1
a33 6
BFTEST=		bftest
CASTTEST=	casttest
DESTEST=	destest
RANDTEST=	randtest
DHTEST=		dhtest
DSATEST=	dsatest
d35 4
a38 2
ENGINETEST=	enginetest
EVPTEST=	evp_test
d41 1
a41 2

CFLAGS= -O -I${SSLDIR} -I${SSLDIR}/..
d48 2
a49 1
	${MD4TEST}.c ${MD5TEST}.c ${BFTEST}.c
d56 2
a57 1
	${MD5TEST} ${BFTEST}
d67 2
a68 1
	${ECTEST}
d75 12
a86 4
ENCTARGETS=rc4 des-cfb des-ede-cfb des-ede3-cfb des-ofb des-ede-ofb des-ede3-ofb
ENCTARGETS+=des-ecb des-ede des-ede3 desx des-cbc des-ede-cbc des-ede3-cbc
ENCTARGETS+=rc2-ecb rc2-cfb rc2-ofb rc2-cbc bf-ecb bf-cfb bf-ofb bf-cbc rc4
ENCTARGETS+=cast5-ecb cast5-cfb cast5-ofb cast5-cbc
d90 1
a90 1
	${OPENSSL} ${ENC} -bufsize 113 -e -k test < ${CLEAR1} > ${CIPHER}.${ENC}
d92 1
a92 1
	${OPENSSL} ${ENC} -bufsize 113 -a -e -k test < ${CLEAR1} > ${CIPHER}.${ENC}.b64
d95 1
a95 1
	${OPENSSL} ${ENC} -bufsize 157 -d -k test < ${CIPHER}.${ENC} > ${CLEAR2}.${ENC}
d97 1
a97 1
	${OPENSSL} ${ENC} -bufsize 157 -a -d -k test < ${CIPHER}.${ENC}.b64 > ${CLEAR2}.${ENC}.b64
d129 1
a129 1
	cc ${CFLAGS} -o $(BNTEST) ${BNTEST}.c -lcrypto
d135 1
a135 1
	cc ${CFLAGS} -o $(EXPTEST) ${EXPTEST}.c -lcrypto
d141 1
a141 1
	cc ${CFLAGS} -o $(ECTEST) ${ECTEST}.c -lcrypto
d146 1
a146 1
	cc ${CFLAGS} -o $(EVPTEST) ${EVPTEST}.c -lcrypto
d151 1
a151 1
	cc ${CFLAGS} -o $(SHATEST) ${SHATEST}.c -lcrypto
d156 1
a156 1
	cc ${CFLAGS} -o $(SHA1TEST) ${SHA1TEST}.c -lcrypto
d161 1
a161 1
	cc ${CFLAGS} -o $(RANDTEST) ${RANDTEST}.c -lcrypto
d166 1
a166 1
	cc ${CFLAGS} -o $(RMDTEST) ${RMDTEST}.c -lcrypto
d172 1
a172 1
	cc ${CFLAGS} -o $(DHTEST) ${DHTEST}.c -lcrypto
d178 1
a178 1
	cc ${CFLAGS} -o $(ENGINETEST) ${ENGINETEST}.c -lcrypto
d184 1
a184 1
	cc ${CFLAGS} -o $(CASTTEST) ${CASTTEST}.c -lcrypto
d190 1
a190 1
	cc ${CFLAGS} -o $(RSATEST) ${RSATEST}.c -lcrypto
d196 1
a196 1
	cc ${CFLAGS} -o $(DSATEST) ${DSATEST}.c -lcrypto
d203 1
a203 1
	cc ${CFLAGS} -o $(HMACTEST) ${HMACTEST}.c -lcrypto
d209 1
a209 1
	cc ${CFLAGS} -o $(DESTEST) ${DESTEST}.c -lcrypto
d215 1
a215 1
	cc ${CFLAGS} -o $(BFTEST) ${BFTEST}.c -lcrypto
d221 1
a221 1
	cc ${CFLAGS} -o $(RC2TEST) ${RC2TEST}.c -lcrypto
d227 1
a227 1
	cc ${CFLAGS} -o $(RC4TEST) ${RC4TEST}.c -lcrypto
d233 1
a233 1
	cc ${CFLAGS} -o $(MD2TEST) ${MD2TEST}.c -lcrypto
d239 1
a239 1
	cc ${CFLAGS} -o $(MD4TEST) ${MD4TEST}.c -lcrypto
d245 31
a275 1
	cc ${CFLAGS} -o $(MD5TEST) ${MD5TEST}.c -lcrypto
@


1.11
log
@un-break test; report and test by davidkrause
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2002/09/26 11:39:50 markus Exp $
d43 1
a43 1
	${MD4TEST}.c ${MD5TEST}.c
d50 1
a50 1
	${MD5TEST}\
d58 1
a58 1
	${CASTTEST} ${RC2TEST} ${RC4TEST} ${DESTEST} \
@


1.10
log
@remove MDC2; patents
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2002/09/02 20:01:43 avsm Exp $
d34 3
d89 1
a89 1
CLEANFILES+=${CIPHER}.${ENC} ${CIPHER}.${ENC}.b64 ${CLEAR2}.${ENC} ${CLEAR2}.${ENC}.b64 e_os.h .rnd
a98 3
e_os.h: ${.CURDIR}/../../../lib/libssl/src/e_os.h
	cp ${.CURDIR}/../../../lib/libssl/src/e_os.h ${.OBJDIR}

d107 1
a107 1
	${.OBJDIR}/${EVPTEST} ${.CURDIR}/../../../lib/libssl/src/crypto/evp/evptests.txt
d109 2
a110 2
$(BNTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/bn/bntest.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/bn/bntest.c ${.OBJDIR}
d112 2
a113 2
$(BNTEST): ${BNTEST}.c e_os.h
	cc -O -o $(BNTEST) ${BNTEST}.c -lcrypto
d115 2
a116 2
$(EXPTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/bn/exptest.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/bn/exptest.c ${.OBJDIR}
d118 2
a119 2
$(EXPTEST): ${EXPTEST}.c e_os.h
	cc -O -o $(EXPTEST) ${EXPTEST}.c -lcrypto
d121 2
a122 2
$(ECTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/ec/ectest.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/ec/ectest.c ${.OBJDIR}
d124 2
a125 2
$(ECTEST): ${ECTEST}.c e_os.h
	cc -O -o $(ECTEST) ${ECTEST}.c -lcrypto
d127 4
a130 4
$(EVPTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/evp/${EVPTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/evp/${EVPTEST}.c ${.OBJDIR}
$(EVPTEST): ${EVPTEST}.c e_os.h
	cc -O -o $(EVPTEST) ${EVPTEST}.c -lcrypto
d132 4
a135 4
$(SHATEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/sha/${SHATEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/sha/${SHATEST}.c ${.OBJDIR}
$(SHATEST): ${SHATEST}.c e_os.h
	cc -O -o $(SHATEST) ${SHATEST}.c -lcrypto
d137 4
a140 4
$(SHA1TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/sha/${SHA1TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/sha/${SHA1TEST}.c ${.OBJDIR}
$(SHA1TEST): ${SHA1TEST}.c e_os.h
	cc -O -o $(SHA1TEST) ${SHA1TEST}.c -lcrypto
d142 4
a145 4
$(RANDTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/rand/${RANDTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/rand/${RANDTEST}.c ${.OBJDIR}
$(RANDTEST): ${RANDTEST}.c e_os.h
	cc -O -o $(RANDTEST) ${RANDTEST}.c -lcrypto
d147 4
a150 4
$(RMDTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/ripemd/${RMDTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/ripemd/${RMDTEST}.c ${.OBJDIR}
$(RMDTEST): ${RMDTEST}.c e_os.h
	cc -O -o $(RMDTEST) ${RMDTEST}.c -lcrypto
d152 2
a153 2
$(DHTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/dh/${DHTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/dh/${DHTEST}.c ${.OBJDIR}
d155 2
a156 2
$(DHTEST): ${DHTEST}.c e_os.h
	cc -O -o $(DHTEST) ${DHTEST}.c -lcrypto
d158 2
a159 2
$(ENGINETEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/engine/${ENGINETEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/engine/${ENGINETEST}.c ${.OBJDIR}
d161 2
a162 2
$(ENGINETEST): ${ENGINETEST}.c e_os.h
	cc -O -o $(ENGINETEST) ${ENGINETEST}.c -lcrypto
d164 2
a165 2
$(CASTTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/cast/${CASTTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/cast/${CASTTEST}.c ${.OBJDIR}
d167 2
a168 2
$(CASTTEST): ${CASTTEST}.c e_os.h
	cc -O -o $(CASTTEST) ${CASTTEST}.c -lcrypto
d170 2
a171 2
$(RSATEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/rsa/${RSATEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/rsa/${RSATEST}.c ${.OBJDIR}
d173 2
a174 2
$(RSATEST): ${RSATEST}.c e_os.h
	cc -O -o $(RSATEST) ${RSATEST}.c -lcrypto
d176 2
a177 2
$(DSATEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/dsa/${DSATEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/dsa/${DSATEST}.c ${.OBJDIR}
d179 2
a180 2
$(DSATEST): ${DSATEST}.c e_os.h
	cc -O -o $(DSATEST) ${DSATEST}.c -lcrypto
d183 2
a184 2
$(HMACTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/hmac/${HMACTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/hmac/${HMACTEST}.c ${.OBJDIR}
d186 2
a187 2
$(HMACTEST): ${HMACTEST}.c e_os.h
	cc -O -o $(HMACTEST) ${HMACTEST}.c -lcrypto
d189 2
a190 2
$(DESTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/des/${DESTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/des/${DESTEST}.c ${.OBJDIR}
d192 2
a193 2
$(DESTEST): ${DESTEST}.c e_os.h
	cc -O -o $(DESTEST) ${DESTEST}.c -lcrypto
d195 2
a196 2
$(BFTEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/bf/${BFTEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/bf/${BFTEST}.c ${.OBJDIR}
d198 2
a199 2
$(BFTEST): ${BFTEST}.c e_os.h
	cc -O -o $(BFTEST) ${BFTEST}.c -lcrypto
d201 2
a202 2
$(RC2TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/rc2/${RC2TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/rc2/${RC2TEST}.c ${.OBJDIR}
d204 2
a205 2
$(RC2TEST): ${RC2TEST}.c e_os.h
	cc -O -o $(RC2TEST) ${RC2TEST}.c -lcrypto
d207 2
a208 2
$(RC4TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/rc4/${RC4TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/rc4/${RC4TEST}.c ${.OBJDIR}
d210 2
a211 2
$(RC4TEST): ${RC4TEST}.c e_os.h
	cc -O -o $(RC4TEST) ${RC4TEST}.c -lcrypto
d213 2
a214 2
$(MD2TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/md2/${MD2TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/md2/${MD2TEST}.c ${.OBJDIR}
d216 2
a217 2
$(MD2TEST): ${MD2TEST}.c e_os.h
	cc -O -o $(MD2TEST) ${MD2TEST}.c -lcrypto
d219 2
a220 2
$(MD4TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/md4/${MD4TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/md4/${MD4TEST}.c ${.OBJDIR}
d222 2
a223 2
$(MD4TEST): ${MD4TEST}.c e_os.h
	cc -O -o $(MD4TEST) ${MD4TEST}.c -lcrypto
d225 2
a226 2
$(MD5TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/md5/${MD5TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/md5/${MD5TEST}.c ${.OBJDIR}
d228 2
a229 2
$(MD5TEST): ${MD5TEST}.c e_os.h
	cc -O -o $(MD5TEST) ${MD5TEST}.c -lcrypto
@


1.9
log
@Rename a bunch of the old bsd.regress.mk variables into the new ones.

ok art@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2002/09/01 16:29:31 markus Exp $
a16 1
MDC2TEST=	mdc2test
a145 5

$(MDC2TEST).c: ${.CURDIR}/../../../lib/libssl/src/crypto/mdc2/${MDC2TEST}.c
	cp ${.CURDIR}/../../../lib/libssl/src/crypto/mdc2/${MDC2TEST}.c ${.OBJDIR}
$(MDC2TEST): ${MDC2TEST}.c e_os.h
	cc -O -o $(MDC2TEST) ${MDC2TEST}.c -lcrypto
@


1.8
log
@e_os.h is longer installed
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2002/05/15 02:36:07 beck Exp $
d5 1
a5 1
REGRESSTARGETS=ossltests ssl-enc ssl-dsa ssl-rsa 
d86 1
a86 1
REGRESSTARGETS+=ssl-enc-${ENC} ssl-enc-${ENC}.b64
@


1.7
log
@Build and run openssl regress tests in addition to our own.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2002/01/15 18:51:39 art Exp $
d97 2
a98 2
e_os.h: /usr/include/openssl/e_os.h
	cp /usr/include/openssl/e_os.h ${.OBJDIR}
@


1.6
log
@Move the enc tests into the Makefile and split them into
several small tests.
beck@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2002/01/02 15:17:34 art Exp $
d5 1
a5 1
REGRESSTARGETS=ssl-enc ssl-dsa ssl-rsa
d12 48
d87 1
a87 1
CLEANFILES+=${CIPHER}.${ENC} ${CIPHER}.${ENC}.b64 ${CLEAR2}.${ENC} ${CLEAR2}.${ENC}.b64
d96 140
@


1.5
log
@Convert to bsd.regress.mk.
Not finished yet.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2001/02/07 20:27:08 todd Exp $
d6 35
@


1.4
log
@uncomment rsa test; ok millert@@
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.3 2001/01/29 02:05:46 niklas Exp $

d5 1
a5 1
install:
d7 1
a7 1
regress:
d9 1
d11 1
d14 1
a14 1
.include <bsd.prog.mk>
@


1.3
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD$
d11 1
a11 1
#	sh ${.CURDIR}/testrsa.sh ${.OBJDIR} ${.CURDIR}
@


1.2
log
@   Fix up for make regress. Should handle objdir now.
@
text
@d1 2
@


1.1
log
@ssl lib test scripts. Need to be tested so as not to break build process
before this libssl dir is added to the upper level Makefile.
@
text
@d7 3
a9 3
	sh ${.CURDIR}/testenc.sh
	sh ${.CURDIR}/testdsa.sh
#	sh ${.CURDIR}/testrsa.sh
@

