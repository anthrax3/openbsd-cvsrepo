head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.2
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2017.07.05.15.31.45;	author bluhm;	state Exp;
branches;
next	1.7;
commitid	eYx6IbLq0jXNHWKX;

1.7
date	2017.07.04.21.56.05;	author bluhm;	state Exp;
branches;
next	1.6;
commitid	swjcJDMDn5X7XeEF;

1.6
date	2017.07.03.18.19.55;	author bluhm;	state Exp;
branches;
next	1.5;
commitid	DBhhLSUFgUy3oGv6;

1.5
date	2016.09.18.21.06.46;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	a8gtJciEMSKdUYV5;

1.4
date	2016.04.11.21.15.11;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	jyYExBZQe6kHacko;

1.3
date	2016.03.20.17.19.48;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	i7dvYVQoanOIP2WU;

1.2
date	2016.03.01.16.12.11;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	WpEedg9ROj05L4FI;

1.1
date	2016.02.11.15.37.20;	author schwarze;	state Exp;
branches;
next	;
commitid	HXxulMOT7085CpbX;


desc
@@


1.8
log
@Implement the generated dependency with a stamp file to avoid needless
recompiling of the test programs.  Add some RCS ids.
@
text
@#	$OpenBSD: Makefile,v 1.7 2017/07/04 21:56:05 bluhm Exp $
#
# Author: Ingo Schwarze <schwarze@@openbsd.org>, 2016.  Public Domain.

REGRESS_TARGETS = getcmd read_char

CLEANFILES +=	test_read_char test_getcmd out_getcmd.txt

read_char: stamp-generated test_read_char
	sh ${.CURDIR}/test_read_char.sh

getcmd: stamp-generated test_getcmd
	echo -n s | ./test_getcmd > out_getcmd.txt
	diff -u ${.CURDIR}/exp_getcmd.txt out_getcmd.txt

.include <bsd.regress.mk>
@


1.7
log
@Fix building the libedit regress programs.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2017/07/03 18:19:55 bluhm Exp $
d9 1
a9 1
read_char: generated test_read_char
d12 1
a12 1
getcmd: generated test_getcmd
@


1.6
log
@Generate source and header files for regress on demand.
OK espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2016/09/18 21:06:46 bluhm Exp $
d9 1
a9 3
test_read_char test_getcmd: generated

read_char: test_read_char
d12 1
a12 1
getcmd: test_getcmd
@


1.5
log
@The libedit regress tests require header files generated during the
build.  Add a dependency to run make depend in /usr/src/lib/libedit.
Problem found by otto@@; OK schwarze@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2016/04/11 21:15:11 schwarze Exp $
a6 2
CPPFLAGS +=	-I${.CURDIR}/../../../../lib/libedit
CPPFLAGS +=	-I${.OBJDIR}/../../../../lib/libedit
d9 1
a9 2
depend:
	cd ${.CURDIR}/../../../../lib/libedit && make depend
d11 1
a11 1
read_char: depend test_read_char
d14 1
a14 1
getcmd: depend test_getcmd
@


1.4
log
@drop -DWIDECHAR, it's no longer needed
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2016/03/20 17:19:48 schwarze Exp $
a3 2
#
# Run "cd /usr/src/lib/libedit && make obj && make depend" first.
d11 4
a14 1
read_char: test_read_char
d17 1
a17 1
getcmd: test_getcmd
@


1.3
log
@Fix the CHARSET_IS_UTF8 case in read_char().
For now, this mainly help programs explicitly using
wide-character functions like el_wgetc(3) and el_wgets(3).

1. After reading an invalid byte sequence, do not throw away additional
valid bytes; fix by me using mbrtowc(3), obsoleting utf8_islead().
2. When read(2) returns EOF, return that information to the caller,
do not prod on and potentially access garbage data in the buffer;
from Linas Vepstas via NetBSD read.c rev. 1.70 2013/05/27.
3. After read__fixio() failure, restore errno to the one set by read();
from Steffen Nurpmeso via NetBSD read.c rev. 1.68 2012/09/10.
4. After read__fixio() success, restore errno to the initial state
upon function entry; fix by me.

OK czarkoff@@.  Also committed to NetBSD.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2016/03/01 16:12:11 schwarze Exp $
a8 1
CPPFLAGS +=	-DWIDECHAR
@


1.2
log
@More unit tests for libedit.
Those that still fail are commented out in the Makefiles for now;
i have patches for them.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2016/02/11 15:37:20 schwarze Exp $
d7 1
a7 2
REGRESS_TARGETS = getcmd
#REGRESS_TARGETS += read_char
@


1.1
log
@Slowly start a unit test suite for libedit; Christos is right that
fiddling with the internals of that code is dangerous without it.
Intentionally not linked to the build yet, because many of the tests
still fail: The related bugfixes are too intrusive right now and will
go in after unlock.
@
text
@d1 1
a1 1
#	$OpenBSD$
d7 2
a8 1
REGRESS_TARGETS = check
a9 1
PROG =		test_read_char
d13 1
a13 1
MAN =
d15 1
a15 1
check:
d17 4
@

