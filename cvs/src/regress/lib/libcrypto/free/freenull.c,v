head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.4
	OPENBSD_6_2_BASE:1.4;
locks; strict;
comment	@ * @;


1.4
date	2017.05.06.21.23.57;	author jsing;	state Exp;
branches;
next	1.3;
commitid	bPmkSJZYmBTJl1vT;

1.3
date	2017.05.06.21.22.58;	author jsing;	state Exp;
branches;
next	1.2;
commitid	oTHzWCzld9qr4zkR;

1.2
date	2017.05.06.21.21.00;	author jsing;	state Exp;
branches;
next	1.1;
commitid	7Blbq0n8DOmgIdkA;

1.1
date	2017.05.02.04.03.06;	author beck;	state Exp;
branches;
next	;
commitid	nQn2C63YbFcXRKAs;


desc
@@


1.4
log
@Add more functions.
@
text
@/* $OpenBSD: freenull.c,v 1.3 2017/05/06 21:22:58 jsing Exp $ */
/*
 * Copyright (c) 2017 Bob Beck <beck@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <openssl/asn1.h>
#include <openssl/x509.h>
#include <openssl/x509v3.h>

#include <err.h>
#include <stdio.h>
#include <string.h>

/* Make sure we do the right thing. Add here if you convert ones in tree */
int
main(int argc, char **argv)
{
	ASN1_INTEGER_free(NULL);
	ASN1_OBJECT_free(NULL);
	ASN1_OCTET_STRING_free(NULL);

	BIO_free_all(NULL);

	DIST_POINT_free(NULL);

	EVP_PKEY_free(NULL);

	GENERAL_NAME_free(NULL);
	GENERAL_SUBTREE_free(NULL);

	NAME_CONSTRAINTS_free(NULL);

	sk_GENERAL_NAME_pop_free(NULL, GENERAL_NAME_free);
	sk_X509_NAME_ENTRY_pop_free(NULL, X509_NAME_ENTRY_free);

	X509_NAME_ENTRY_free(NULL);

	printf("PASS\n");

	return (0);
}
@


1.3
log
@Sort/group functions.
@
text
@d1 1
a1 1
/* $OpenBSD: freenull.c,v 1.2 2017/05/06 21:21:00 jsing Exp $ */
d34 2
d37 2
@


1.2
log
@Not much point using a failed variable here.
@
text
@d1 1
a1 1
/* $OpenBSD: freenull.c,v 1.1 2017/05/02 04:03:06 beck Exp $ */
d30 1
a31 1
	ASN1_INTEGER_free(NULL);
d33 1
a33 2
	NAME_CONSTRAINTS_free(NULL);
	GENERAL_SUBTREE_free(NULL);
d35 1
a35 1
	X509_NAME_ENTRY_free(NULL);
d37 4
d43 2
@


1.1
log
@Add regress for free functions that should be safe with NULL
@
text
@d1 1
a1 1
/* $OpenBSD: asn1time.c,v 1.8 2015/12/28 14:18:38 bcook Exp $ */
a29 1
	int failed = 0;
d40 1
d42 2
a43 1
	return (failed);
@

