head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.12
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4;
locks; strict;
comment	@# @;


1.4
date	2014.07.08.15.53.52;	author jsing;	state Exp;
branches;
next	1.3;
commitid	SNwTGMs3omAtML1E;

1.3
date	2014.06.01.11.11.45;	author miod;	state Exp;
branches;
next	1.2;
commitid	pprV7mwqPqiWQwba;

1.2
date	2014.05.30.15.17.43;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2014.04.22.21.27.15;	author miod;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Include -DLIBRESSL_INTERNAL in regress makefiles.

ok miod@@
@
text
@#	$OpenBSD: Makefile,v 1.3 2014/06/01 11:11:45 miod Exp $

PROG=	aes_wrap
LDADD=	-lcrypto
DPADD=	${LIBCRYPTO}
WARNINGS=	Yes
CFLAGS+=	-DLIBRESSL_INTERNAL -Werror

.include <bsd.regress.mk>
@


1.3
log
@Build these tests with WARNINGS=Yes and -Werror, and do the necessary
fixes to keep building.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2014/05/30 15:17:43 jsing Exp $
d7 1
a7 1
CFLAGS+=	-Werror
@


1.2
log
@Move the AES wrap test code into regress.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2014/04/22 21:27:15 miod Exp $
d6 2
@


1.1
log
@When compiling with AES_WRAP_TEST, make main() return a meaningful value
instead of garbage, and add this to the libcrypto regress. Note these tests
are incomplete, as they always use the default IV.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2014/04/17 18:33:22 miod Exp $
a3 5
CRYPTO=	${.CURDIR}/../../../../lib/libssl/src/crypto
CFLAGS+=	-DAES_WRAP_TEST
CFLAGS+=	-I${CRYPTO} -I${CRYPTO}/aes
.PATH:	${CRYPTO}/aes

@

