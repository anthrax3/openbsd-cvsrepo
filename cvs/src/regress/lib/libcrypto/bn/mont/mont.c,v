head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.14
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2014.10.22.13.23.05;	author jsing;	state Exp;
branches;
next	1.1;
commitid	3U5zHVoh958LtwCY;

1.1
date	2014.06.20.10.38.22;	author miod;	state Exp;
branches;
next	;
commitid	LTDKdxhXP4qKNCDT;


desc
@@


1.2
log
@Use arc4random_buf() instead of RAND_bytes() or RAND_pseudo_bytes() (most
with unchecked return values).
@
text
@/*	$OpenBSD: mont.c,v 1.1 2014/06/20 10:38:22 miod Exp $	*/

/*
 * Copyright (c) 2014 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <err.h>

#include <openssl/bn.h>
#include <openssl/crypto.h>
#include <openssl/dh.h>
#include <openssl/err.h>

/*
 * Test for proper bn_mul_mont behaviour when operands are of vastly different
 * sizes.
 */

int
main(int argc, char *argv[])
{
	DH *dh;
	unsigned char *key, r[32 + 16 * 8];
	size_t privsz;

	arc4random_buf(r, sizeof(r));

	for (privsz = 32; privsz <= sizeof(r); privsz += 8) {
		dh = DH_new();
		if (dh == NULL)
			goto err;
		if (DH_generate_parameters_ex(dh, 32, DH_GENERATOR_2,
		    NULL) == 0)
			goto err;

		/* force private key to be much larger than public one */
		dh->priv_key = BN_bin2bn(r, privsz, NULL);
		if (dh->priv_key == NULL)
			goto err;

		if (DH_generate_key(dh) == 0)
			goto err;
		key = malloc(DH_size(dh));
		if (key == NULL)
			err(1, "malloc");
		if (DH_compute_key(key, dh->pub_key, dh) == -1)
			goto err;

		free(key);
		DH_free(dh);
	}

	return 0;

err:
	ERR_print_errors_fp(stderr);
	return 1;
}
@


1.1
log
@Simple regress test for the amd64 bn_mul_mont bug found by Joyent
( https://github.com/joyent/node/issues/7704 ), about to be fixed in
libcrypto.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a27 1
#include <openssl/rand.h>
d41 1
a41 1
	RAND_bytes(r, sizeof r);
@

