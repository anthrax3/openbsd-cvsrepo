head	1.28;
access;
symbols
	OPENBSD_6_2:1.28.0.2
	OPENBSD_6_2_BASE:1.28
	OPENBSD_6_1:1.27.0.4
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.23.0.2
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.22.0.2
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.18.0.4
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.17.0.4
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.4
	OPENBSD_5_6_BASE:1.16
	openssl_1_0_1g:1.1.1.1
	OPENSSL:1.1.1;
locks; strict;
comment	@# @;


1.28
date	2017.05.06.20.42.57;	author beck;	state Exp;
branches;
next	1.27;
commitid	oiPliYfiaA8u9lRb;

1.27
date	2017.01.25.06.44.22;	author beck;	state Exp;
branches;
next	1.26;
commitid	MrFXw1voSzvdOEH5;

1.26
date	2017.01.18.09.04.02;	author beck;	state Exp;
branches;
next	1.25;
commitid	zwPvH0njl9Fy5vlA;

1.25
date	2016.11.05.15.09.02;	author jsing;	state Exp;
branches;
next	1.24;
commitid	qNsdmsRQHXGtYAan;

1.24
date	2016.11.04.19.45.12;	author jsing;	state Exp;
branches;
next	1.23;
commitid	ac97Dn1Xr6ijYQ3I;

1.23
date	2016.07.04.23.43.30;	author beck;	state Exp;
branches;
next	1.22;
commitid	ULf8jWRfHJlnpG92;

1.22
date	2015.09.25.16.12.30;	author jsing;	state Exp;
branches;
next	1.21;
commitid	DvYk0D4o0AR04goK;

1.21
date	2015.09.14.01.45.03;	author doug;	state Exp;
branches;
next	1.20;
commitid	WI3ltGMbnAaZXz3O;

1.20
date	2015.09.13.23.36.21;	author doug;	state Exp;
branches;
next	1.19;
commitid	4CxCgJZcnC9PKUvF;

1.19
date	2015.09.13.21.09.56;	author doug;	state Exp;
branches;
next	1.18;
commitid	e818W60lrMrFrzEk;

1.18
date	2015.06.20.01.07.25;	author doug;	state Exp;
branches;
next	1.17;
commitid	odUD1eZ4N02tuzg5;

1.17
date	2014.11.18.21.52.43;	author miod;	state Exp;
branches;
next	1.16;
commitid	motjrXC1tWnAoarn;

1.16
date	2014.07.11.20.37.59;	author miod;	state Exp;
branches;
next	1.15;
commitid	H7Xa2GNlhR8HTumS;

1.15
date	2014.07.02.16.29.36;	author jsing;	state Exp;
branches;
next	1.14;
commitid	nYziSElNXDg69HbC;

1.14
date	2014.06.22.14.30.52;	author jsing;	state Exp;
branches;
next	1.13;
commitid	bCrthIqD1mkpfxeH;

1.13
date	2014.06.22.14.28.07;	author jsing;	state Exp;
branches;
next	1.12;
commitid	dggCOt5OIi72pazm;

1.12
date	2014.05.31.14.39.06;	author jsing;	state Exp;
branches;
next	1.11;

1.11
date	2014.05.30.15.38.28;	author jsing;	state Exp;
branches;
next	1.10;

1.10
date	2014.05.18.22.04.14;	author guenther;	state Exp;
branches;
next	1.9;

1.9
date	2014.05.14.14.46.35;	author jsing;	state Exp;
branches;
next	1.8;

1.8
date	2014.05.06.20.27.17;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2014.05.03.15.07.46;	author jsing;	state Exp;
branches;
next	1.6;

1.6
date	2014.05.02.19.27.04;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2014.05.01.13.15.22;	author jsing;	state Exp;
branches;
next	1.4;

1.4
date	2014.04.22.21.27.13;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2014.04.17.18.33.21;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2014.04.17.07.52.08;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2014.04.15.18.01.15;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.04.15.18.01.15;	author miod;	state Exp;
branches;
next	;


desc
@@


1.28
log
@Bring in HKDF, from BoringSSL, with regress tests modified to be
in C. Ride previous minor bump
ok tom@@ inoguchi@@ jsing@@
@
text
@#	$OpenBSD: Makefile,v 1.27 2017/01/25 06:44:22 beck Exp $

SUBDIR= \
	aead \
	aeswrap \
	asn1 \
	base64 \
	bf \
	bio \
	bn \
	cast \
	chacha \
	cts128 \
	curve25519 \
	des \
	dh \
	dsa \
	ec \
	ecdh \
	ecdsa \
	engine \
	evp \
	exp \
	gcm128 \
	gost \
	hkdf \
	hmac \
	idea \
	ige \
	md4 \
	md5 \
	pbkdf2 \
	pkcs7 \
	poly1305 \
	rand \
	rc2 \
	rc4 \
	rmd \
	rsa \
	sha1 \
	sha2 \
	sha256 \
	sha512 \
	utf8

install:

.include <bsd.subdir.mk>
@


1.27
log
@link in rsa test
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2017/01/18 09:04:02 beck Exp $
d26 1
@


1.26
log
@unhook ocsp test from the default since it currently requires network access and
therefore appears to break in bluhm's test setup
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2016/11/05 15:09:02 jsing Exp $
d38 1
@


1.25
log
@Add regress for X25519, converted from BoringSSL.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2016/11/04 19:45:12 jsing Exp $
a30 1
	ocsp \
@


1.24
log
@Move pqueue regress from libcrypto to libssl, since that's where the pqueue
code now lives. Also unbreak the regress following the symbol hiding
changes in libssl.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2016/07/04 23:43:30 beck Exp $
d14 1
@


1.23
log
@Add a nasty little ocsp regress test in the hope pedants will make it better.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2015/09/25 16:12:30 jsing Exp $
a33 1
	pqueue \
@


1.22
log
@Add initial regress tests for ASN.1 times.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2015/09/14 01:45:03 doug Exp $
d30 1
@


1.21
log
@Temporarily revive MD4 for MS CHAP support.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2015/09/13 23:36:21 doug Exp $
d6 1
@


1.20
log
@Remove MD4 support from LibreSSL.

MD4 should have been removed a long time ago.  Also, RFC 6150 moved it to
historic in 2011.  Rides the major crank from removing SHA-0.

Discussed with many including beck@@, millert@@, djm@@, sthen@@
ok jsing@@, input + ok bcook@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2015/09/13 21:09:56 doug Exp $
d27 1
@


1.19
log
@Remove SHA-0 support.

SHA-0 was withdrawn shortly after publication 20 years ago and replaced
with SHA-1.  This will require a major crank.

ok bcook@@, jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2015/06/20 01:07:25 doug Exp $
a26 1
	md4 \
@


1.18
log
@Remove obsolete MDC-2DES from libcrypto.

ok deraadt@@ jsing@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2014/11/18 21:52:43 miod Exp $
a36 1
	sha \
@


1.17
log
@GOST regression tests; from Dmitry Eremin-Solenikov
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2014/07/11 20:37:59 miod Exp $
a28 1
	mdc2 \
@


1.16
log
@Regression test for PKCS5_PBKDF2_HMAC(), written by Christian Heimes ; from
OpenSSL trunk
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2014/07/02 16:29:36 jsing Exp $
d23 1
@


1.15
log
@Add an initial regress test for pkcs7.

This currently fails when signing/verifying with a detached signature.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2014/06/22 14:30:52 jsing Exp $
d29 1
@


1.14
log
@Add a skeleton regress for crypto/bio, which currently only covers
BIO_get_port() and fails since the current code believes that "-1" is a
valid port.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2014/06/22 14:28:07 jsing Exp $
d29 1
@


1.13
log
@Hook in the aead regress.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2014/05/31 14:39:06 jsing Exp $
d8 1
@


1.12
log
@Move the cts128 and gcm128 tests to regress.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2014/05/30 15:38:28 jsing Exp $
d4 1
@


1.11
log
@Move sha256 and sha512 tests to regress and wire them up.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2014/05/18 22:04:14 guenther Exp $
d10 1
@


1.10
log
@Add regression test for UTF8_{getc,putc}()
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2014/05/14 14:46:35 jsing Exp $
d35 2
@


1.9
log
@Add poly1305 to libcrypto utilising Andrew Moon's public domain
implementation.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2014/05/06 20:27:17 miod Exp $
d34 2
a35 1
	sha2
@


1.8
log
@Add a fixed (read: non-SIGSEGV'ing) pq_test.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2014/05/03 15:07:46 jsing Exp $
d26 1
@


1.7
log
@Initial version of a base64 regress.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2014/05/02 19:27:04 miod Exp $
d26 1
@


1.6
log
@Simple sha{224,256,384,512} test using the FIPS 180-2 test vectors available
from http://csrc.nist.gov/groups/ST/toolkit/examples.html
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2014/05/01 13:15:22 jsing Exp $
d5 1
@


1.5
log
@Add ChaCha to libcrypto, based on djb's public domain implementation.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2014/04/22 21:27:13 miod Exp $
d30 2
a31 1
	sha1
@


1.4
log
@When compiling with AES_WRAP_TEST, make main() return a meaningful value
instead of garbage, and add this to the libcrypto regress. Note these tests
are incomplete, as they always use the default IV.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2014/04/17 18:33:21 miod Exp $
d8 1
@


1.3
log
@crypto/modes/gcm128.c can be used as its own selftest. Add it to regress,
conveniently leaving the benchmark code not compiled in the test.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2014/04/17 07:52:08 jsg Exp $
d4 1
@


1.2
log
@move enginetest to regress as was done with the other tests
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.1.1 2014/04/15 18:01:15 miod Exp $
d16 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD$
d13 1
@


1.1.1.1
log
@Import the OpenSSL libcrypto tests in a form suitable for our rergress
infrastructure.
The following tests have not been imported, for their code lacks a licence:
asn1, rsa, sha256, sha512, wp.
@
text
@@
