head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.58
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.54
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.44
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.52
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.50
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.48
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.46
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.42
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.40
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.38
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.36
	OPENBSD_5_0:1.5.0.34
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.32
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.30
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.26
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4;
locks; strict;
comment	@ * @;


1.5
date	2003.07.31.21.48.06;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.16.23.06.15;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.11.23.26.35;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.03.04.33.48;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.15.14.37.13;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.15.14.37.13;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.5
log
@various cleanups; david says results are same
@
text
@/*	$OpenBSD: signal.c,v 1.4 2002/06/16 23:06:15 marc Exp $	*/
/* David Leonard <d@@openbsd.org>, 2001. Public Domain. */

/*
 * This program tests signal handler re-entrancy.
 */

#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include "test.h"

volatile int alarmed;

static void *
sleeper(void *arg)
{
	sigset_t mask;

	/* Ignore all signals in this thread */
	sigfillset(&mask);
	CHECKe(sigprocmask(SIG_SETMASK, &mask, NULL));
	ASSERT(sleep(3) == 0);
	CHECKe(write(STDOUT_FILENO, "\n", 1));
	SUCCEED;
}

static void
handler(int sig)
{
	int save_errno = errno;

	alarmed = 1;
	alarm(1);
	signal(SIGALRM, handler);
	errno = save_errno;
}

int
main(int argc, char *argv[])
{
	pthread_t slpr;

	ASSERT(signal(SIGALRM, handler) != SIG_ERR);
	CHECKe(alarm(1));
	CHECKr(pthread_create(&slpr, NULL, sleeper, NULL));
	/* ASSERT(sleep(1) == 0); */
	for (;;) {
		if (alarmed) {
			alarmed = 0;
			CHECKe(write(STDOUT_FILENO, "!", 1));
		}
	}
}
@


1.4
log
@write newline before successful test completion
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.c,v 1.3 2001/11/11 23:26:35 deraadt Exp $	*/
d17 2
a18 3
void *
sleeper(arg)
	void *arg;
d30 2
a31 3
void
handler(sig)
	int sig;
d42 1
a42 1
main()
@


1.3
log
@signal race fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.c,v 1.2 2001/11/03 04:33:48 marc Exp $	*/
d27 1
@


1.2
log
@
Fix pthread_mutex regression test... undefined behavior does not
mean != EPERM in one test, minor changes to recursive mutex test.

remove printf in signal test signal handler, run test long enough
to ensure signal hander is called at least twice, reduce output.

Note: running these tests over a remote console may indicate bogus
falures due to console output latency.  Any test that takes longer
than 5 seconds to complete may be flagged as a failure.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.c,v 1.1.1.1 2001/08/15 14:37:13 fgsch Exp $	*/
d34 2
d39 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: test_signal.c,v 1.3 2000/10/04 05:50:58 d Exp $	*/
d15 2
d26 1
a26 2

	ASSERT(sleep(2) == 0);
d34 1
a34 1
	printf("signal handler %d\n", sig);
d48 6
a53 2
	for (;;)
		CHECKe(write(STDOUT_FILENO, ".", 1));
@


1.1.1.1
log
@Regression tests for libc_r (pthreads) library.
Thanks to pval@@ for resolving the license stuff.
@
text
@@
