head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.6
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.18
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.16
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2;
locks; strict;
comment	@ * @;


1.3
date	2016.03.17.19.40.43;	author krw;	state Exp;
branches;
next	1.2;
commitid	aCmYZrmRmWHLuztW;

1.2
date	2011.10.10.08.21.06;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.09.23.46.50;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Last parameter to execl[e]() functions *must* be cast to a pointer.
Just NULL is not good practise as NULL is theoretically allowed to
be an integer rather than a pointer.

Use (char *)NULL consistently instead of scattering a few (char *)0
and (void *)NULL into the mix.

Prompted by and probably ok deraadt@@ millert@@ kettenis@@

Definitely ok mestre@@ ratchov@@
@
text
@/*	$OpenBSD: ignore_sigchild.c,v 1.2 2011/10/10 08:21:06 fgsch Exp $	*/
/*
 * Federico G. Schwindt <fgsch@@openbsd.org>, 2011. Public Domain.
 */
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>
#include <signal.h>
#include "test.h"

int
main(int argc, char **argv)
{
	int status;
	pid_t pid;

	ASSERT(signal(SIGCHLD, SIG_IGN) != SIG_ERR);

	switch ((pid = fork())) {
	case -1:
		PANIC("fork");
	case 0:
		execl("/usr/bin/false", "false", (char *)NULL);
		PANIC("execlp");
	default:
		break;
	}

	CHECKe(alarm(2));
	ASSERT(wait(&status) == -1);
	ASSERT(errno == ECHILD);
	SUCCEED;
}
@


1.2
log
@allow for this to timeout rather than hanging forever.
@
text
@d1 1
a1 1
/*	$OpenBSD: ignore_sigchild.c,v 1.1 2011/10/09 23:46:50 fgsch Exp $	*/
d23 1
a23 1
		execl("/usr/bin/false", "false", NULL);
@


1.1
log
@Test for the wait*() hang issue when SIGCHLD is ignored, as seen in
the python's subprocess' test.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d29 1
@

