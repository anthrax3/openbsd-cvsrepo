head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.20
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.22
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.18
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.8
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.16
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.14
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.12
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.03.19.17.41.57;	author oga;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add a (failing) test for a deadlock with fifos and threads.

The ``sleep until we have a writer'' behaviour of an open() on a fifo
does so with the file descriptor table locked, so if we are waiting for
another thread to be our writer we will hang forever.

Found this using zotero and firefox.

ok fgsch@@
@
text
@# $OpenBSD: Makefile,v 1.1 2006/09/22 18:33:18 kurt Exp $

PROG=	blocked_fifo

.include <bsd.regress.mk>
@
