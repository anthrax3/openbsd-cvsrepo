head	1.9;
access;
symbols
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	pthread_regression:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2003.01.19.23.08.31;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	2003.01.14.20.04.44;	author marc;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.16.05.02.48;	author marc;	state Exp;
branches;
next	1.6;

1.6
date	2002.09.02.20.01.43;	author avsm;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.17.04.48.24;	author marc;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.20.00.15.36;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.03.00.43.47;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.12.21.11.11;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.15.14.37.10;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.15.14.37.10;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.9
log
@repository move to libpthread
@
text
@# $OpenBSD: Makefile.inc,v 1.8 2003/01/14 20:04:44 marc Exp $
# Copyright (c) 1993 Chris Provenzano, proven@@athena.mit.edu

LIBPTHREAD=	/usr/lib/libpthread.a

LDADD+=		-pthread
DPADD+=		${LIBPTHREAD}

CFLAGS+=	-Wall # -Werror
#DEBUG=		-ggdb
CFLAGS+=	-DSRCDIR='"${.CURDIR}"'
CFLAGS+=	-I${.CURDIR}/../include

NOMAN=

REGRESS_MAXTIME?=30
@


1.8
log
@
Bye-bye libc_r.   libc_r and libnpthread go away.  libpthread
takes their place.  The -pthread option to gcc uses libpthread.
ppc portion of patch from drahn@@ (thanks).   gcc portions of patch
OK espie@@.   Ports testing (no bad effects!) by naddy@@

best build sequence is: build gcc, build system, build ports
remove /usr/lib/lib{c_r,npthread}.*.   Note, once libc_r and
libnpthread is removed threaded ports will stop working until
they have been re-built using the libpthread and the updated gcc.
That's why the above build sequence is recommended.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.7 2002/11/16 05:02:48 marc Exp $
@


1.7
log
@use -lnpthread when USELIBPTHREAD=yes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.6 2002/09/02 20:01:43 avsm Exp $
d4 1
a4 3
LIBC_R?=	/usr/lib/libc_r.a
LIBPTHREAD?=	/usr/lib/libnpthread.a
USELIBPTHREAD?=	no
d6 1
a6 3
.if ${USELIBPTHREAD:L} == yes
# this tests using libnpthread/libc
LDADD+=		-lnpthread
a7 5
.else
# This tests using libc_r
LDADD+=		-pthread
DPADD+=		${LIBC_R}
.endif
@


1.6
log
@Rename a bunch of the old bsd.regress.mk variables into the new ones.

ok art@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.5 2002/06/17 04:48:24 marc Exp $
d5 1
a5 1
LIBPTHREAD?=	/usr/lib/libpthread.a
d9 2
a10 2
# this tests using libpthread/libc
LDADD+=		-lpthread
@


1.5
log
@
Remove bogus make expression that only confused readers of the file.
'make' will do the regression tests using libc_r
'make USELIBPTHREAD=yes' will do the regression tests using libpthread
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.4 2002/04/20 00:15:36 art Exp $
d25 1
a25 1
REGRESSMAXTIME?=30
@


1.4
log
@Raise the time limit from 5 seconds to 30 seconds.
5 seconds is not enough to compile those tests on sun4c (actually, the
time limit should not be applied to compilation, but fixing that is a pain).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.3 2002/01/03 00:43:47 art Exp $
d6 1
d8 2
a9 1
.if 1 # ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "sparc"
d13 1
d19 1
a19 1
DEBUG=		-ggdb
@


1.3
log
@convert everything to bsd.regress.mk
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.2 2001/11/12 21:11:11 fgsch Exp $
d22 1
a22 1
REGRESSMAXTIME?=5
@


1.2
log
@Make MAXTIME overrideable.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.1.1.1 2001/08/15 14:37:10 fgsch Exp $
d22 1
a22 9
MAXTIME?=	5

regress: ${PROG}
	@@echo; echo "*** $? ***"; \
	if (ulimit -t ${MAXTIME}; ${.OBJDIR}/$?); then \
		echo "-- $? passed"; \
	else \
		echo "-- $? FAILED (exit code $$?)" >&2; \
	fi; 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2000/10/12 00:55:21 brad Exp $
d22 1
a22 1
MAXTIME=	5
@


1.1.1.1
log
@Regression tests for libc_r (pthreads) library.
Thanks to pval@@ for resolving the license stuff.
@
text
@@
