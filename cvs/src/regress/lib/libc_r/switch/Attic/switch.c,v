head	1.4;
access;
symbols
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.1.1.0.4
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	pthread_regression:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2003.01.19.23.08.33;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2002.10.12.18.59.13;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.16.23.06.53;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.15.14.37.16;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.15.14.37.16;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.4
log
@repository move to libpthread
@
text
@/*	$OpenBSD: switch.c,v 1.3 2002/10/12 18:59:13 marc Exp $	*/
/*
 * Copyright (c) 1993, 1994, 1995, 1996 by Chris Provenzano and contributors, 
 * proven@@mit.edu All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Chris Provenzano,
 *	the University of California, Berkeley, and contributors.
 * 4. Neither the name of Chris Provenzano, the University, nor the names of
 *   contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY CHRIS PROVENZANO AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL CHRIS PROVENZANO, THE REGENTS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */ 

/* ==== test_switch.c ========================================================
 * Copyright (c) 1993 by Chris Provenzano, proven@@athena.mit.edu
 *
 * Description : Test context switch functionality.
 *
 *  1.00 93/08/04 proven
 *      -Started coding this file.
 */

#include <pthread.h>
#include <stdio.h>
#include <errno.h>
#include <unistd.h>
#include <stdlib.h>

#include "test.h"

const char buf[] = "abcdefghijklmnopqrstuvwxyz";
char x[sizeof(buf)];
int fd = 1;

volatile int ending = 0;

/* ==========================================================================
 * usage();
 */
void usage(void)
{
    extern char *__progname;
    printf("usage: %s [-?] [-c count]\n", __progname);
	printf("count must be between 2 and 26\n");
    errno = 0;
}

void *
new_thread(arg)
	void *arg;
{
	int i;

	SET_NAME("writer");
	while (!ending) {
		CHECKe(write (fd, (char *) arg, 1));
		x[(char *)arg - buf] = 1;
		for (i = 0; i < 999999; i += 1)
			;
	}
	return NULL;
}

int
main(argc, argv)
	int argc;
	char **argv;
{
	pthread_t thread;
	int count = 4;
	int eof = 0;
	long i;

	/* Getopt variables. */
	extern int optind, opterr;
	extern char *optarg;

	while (!eof)
	  switch (getopt (argc, argv, "c:d?"))
	    {
	    case EOF:
	      eof = 1;
	      break;
	    case 'c':
	      count = atoi(optarg);
	      if ((count > 26) || (count < 2)) {
			  count = 2;
	      }
	      break;
	    case '?':
	      usage();
	      return(OK);
	    default:
	      usage();
	      return(NOTOK);
	    }

	/* create the threads */
	for (i = 0; i < count; i++)
		CHECKr(pthread_create(&thread, NULL, new_thread, 
		    (void*)(buf+i)));

	/* give all threads a chance to run */
	sleep (2);

	ending = 1;
	for (i = 0; i < count; i++)
		ASSERT(x[i]);	/* make sure each thread ran */

	CHECKe(write(STDOUT_FILENO, "\n", 1));
	SUCCEED;
}
@


1.3
log
@
reduce the amount of output on this test so you can see when things
go wrong.   Remove dead code.
@
text
@d1 1
a1 1
/*	$OpenBSD: switch.c,v 1.2 2002/06/16 23:06:53 marc Exp $	*/
@


1.2
log
@write newline before successful test completion
@
text
@d1 1
a1 1
/*	$OpenBSD: switch.c,v 1.1.1.1 2001/08/15 14:37:16 fgsch Exp $	*/
d49 1
d63 2
a64 1
    printf("test_switch [-d?] [-c count]\n");
d73 2
d79 2
a91 1
	int debug = 0;
a104 3
	    case 'd':
	      debug++;
	      break;
d125 1
a125 1
	sleep (4);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: test_switch.c,v 1.7 2000/10/04 05:50:58 d Exp $	*/
d129 1
@


1.1.1.1
log
@Regression tests for libc_r (pthreads) library.
Thanks to pval@@ for resolving the license stuff.
@
text
@@
