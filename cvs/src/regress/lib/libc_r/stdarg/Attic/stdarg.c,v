head	1.5;
access;
symbols
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	pthread_regression:1.1.1.1
	fgsch:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2003.01.19.23.08.33;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2001.12.12.21.18.34;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.20.16.43.16;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.15.14.48.31;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.15.14.37.16;	author fgsch;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.15.14.37.16;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.5
log
@repository move to libpthread
@
text
@/*	$OpenBSD: stdarg.c,v 1.4 2001/12/12 21:18:34 fgsch Exp $	*/
/* David Leonard <d@@openbsd.org>, 2001. Public Domain. */

/*
 * Test <stdarg.h>
 */

#include <pthread.h>
#include <stdio.h>
#include <stdarg.h>
#include <stdlib.h>
#include "test.h"

#define EQ(v,exp) _CHECK(v, == exp, NULL) 

int thing;

int
test1(char *fmt, ...)
{
	va_list	ap;

	char	ch;
	int	i;
	int	c;
	long	l;
	void 	*p;
	char 	*ofmt = fmt;

	va_start(ap, fmt);
	for (; *fmt; fmt++)
	    switch ((ch =*fmt)) {
	    case 'i':		
		i = va_arg(ap, int); 
		EQ(i, 1234);
		break;
	    case 'c':		
		c = va_arg(ap, int); 
		EQ(c, 'x');
		break;
	    case 'l':		
		l = va_arg(ap, long); 
		EQ(l, 123456789L);
		break;
	    case 'p':		
		p = va_arg(ap, void *); 
		EQ(p, &thing);
		break;
	    default:
		fprintf(stderr,
		    "unexpected character 0x%02x `%c' in %s(%p) at %p\n",
		    ch, ch, ofmt, ofmt, fmt);
		ASSERT(0);
	    }
	va_end(ap);
	return 9;
}

void * 
run_test(arg)
	void *arg;
{
	char *msg = (char *)arg;
	int i;

	SET_NAME(msg);

	puts(msg);
	for (i = 0; i < 1000000; i++) {
		ASSERT(test1("iclp", 1234, 'x', 123456789L, &thing) == 9);
	}
	printf("ok\n");
	return NULL;
}

int
main()
{
	pthread_t t1, t2;

	printf("trying loop in single-threaded mode:\n");
	run_test("main");
	printf("now running loop with 2 threads:\n");
	CHECKr(pthread_create(&t1, NULL, run_test, "child 1"));
	CHECKr(pthread_create(&t2, NULL, run_test, "child 2"));
	CHECKr(pthread_join(t1, NULL));
	CHECKr(pthread_join(t2, NULL));
	SUCCEED;
}
@


1.4
log
@indent.
@
text
@d1 1
a1 1
/*	$OpenBSD: stdarg.c,v 1.3 2001/09/20 16:43:16 todd Exp $	*/
@


1.3
log
@per man page and gcc 3.0.1, exit requires prototype from stdlib.h
@
text
@d1 1
a1 1
/*	$OpenBSD: stdarg.c,v 1.2 2001/08/15 14:48:31 fgsch Exp $	*/
d50 3
a52 2
		fprintf(stderr, "unexpected character 0x%02x `%c' in %s(%p) at %p\n",
			ch, ch, ofmt, ofmt, fmt);
@


1.2
log
@Use int instead of char to avoid promotion.
@
text
@d1 1
a1 1
/*	$OpenBSD: stdarg.c,v 1.1.1.1 2001/08/15 14:37:16 fgsch Exp $	*/
d11 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: test_stdarg.c,v 1.3 2000/10/04 05:50:58 d Exp $	*/
d24 1
a24 1
	char	c;
d37 1
a37 1
		c = va_arg(ap, char); 
@


1.1.1.1
log
@Regression tests for libc_r (pthreads) library.
Thanks to pval@@ for resolving the license stuff.
@
text
@@
