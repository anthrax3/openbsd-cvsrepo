head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.32
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.30
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.20
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.28
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.26
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.24
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.22
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.18
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.16
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.14
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.12
	OPENBSD_5_0:1.1.0.10
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.8
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.6
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2009.04.09.01.24.43;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.1
log
@fpaccuracy, by prof. Gaston H. Gonnet, uses some most difficult
values to test accuracy of math functions (currently, only double
precision tests are present)
a report summary (fpaccuracy.out) containing max errs in ulp is generated
originally under gpl.  consented to relicense it under our license
ok millert@@
@
text
@/*	$OpenBSD$	*/

/*
 * Written by Martynas Venckus.  Public domain
 */

#include <err.h>
#include <stdio.h>

#include "fpaccuracy.h"

int
main(int argc, char *argv[])
{
	FILE *out;
	int retval = 0;

	if ((out = fopen("fpaccuracy.out", "w")) == NULL)
		err(1, NULL);

	fprintf(out, "%8s %5s %27s %26s %25s\n", "function", "tests",
		"max err in ulps", "argument (max err)", "value (max err)");
	retval |= fpaccuracy_Gamma(out);
	retval |= fpaccuracy_INV(out);
	retval |= fpaccuracy_Pix(out);
	retval |= fpaccuracy_acos(out);
	retval |= fpaccuracy_acosh(out);
	retval |= fpaccuracy_asin(out);
	retval |= fpaccuracy_asinh(out);
	retval |= fpaccuracy_atan(out);
	retval |= fpaccuracy_atanh(out);
	retval |= fpaccuracy_cos(out);
	retval |= fpaccuracy_cosh(out);
	retval |= fpaccuracy_erf(out);
	retval |= fpaccuracy_erfc(out);
	retval |= fpaccuracy_exp(out);
	retval |= fpaccuracy_j0(out);
	retval |= fpaccuracy_j1(out);
	retval |= fpaccuracy_lgamma(out);
	retval |= fpaccuracy_log(out);
	retval |= fpaccuracy_log10(out);
	retval |= fpaccuracy_pow2_x(out);
	retval |= fpaccuracy_powx_275(out);
	retval |= fpaccuracy_sin(out);
	retval |= fpaccuracy_sinh(out);
	retval |= fpaccuracy_sqrt(out);
	retval |= fpaccuracy_tan(out);
	retval |= fpaccuracy_tanh(out);
	retval |= fpaccuracy_y0(out);
	retval |= fpaccuracy_y1(out);

	fclose(out);

	return retval;
}

@
