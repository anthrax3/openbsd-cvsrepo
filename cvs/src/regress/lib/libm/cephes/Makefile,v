head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.24
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.22
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.12
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.20
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.18
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.16
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.14
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2011.06.02.21.47.40;	author martynas;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.30.20.23.35;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Add the quadruple-precision constants;  testvect works better now
on sparc64.
@
text
@#	$OpenBSD: Makefile,v 1.1 2011/05/30 20:23:35 martynas Exp $

PROG = cephes
SRCS = cephes.c const.c constll.c monot.c monotl.c monotll.c polevll.c \
       testvect.c testvectl.c testvectll.c
LDADD = -lm
DPADD = ${LIBM}

.include <bsd.regress.mk>
@


1.1
log
@Import regression test vectors from the Cephes math library.  This
covers C99 double, extended and quadruple precision functions.
Stephen relicensed this under the right license.

Testvect contains special values from C9X section F.9.  Monot
contains test vectors synthesized around NPTS points, which are
near the boundaries where the algorithms (likely) change their
methods;  helping to detect coding/monotonicity errors.

Note that a lot of extended and quadruple precision tests are if0'd
for now;  since our math library is incomplete.  Hopefully this
will change soon.  (-;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2009/04/09 01:24:43 martynas Exp $
d4 1
a4 1
SRCS = cephes.c const.c monot.c monotl.c monotll.c polevll.c \
@

