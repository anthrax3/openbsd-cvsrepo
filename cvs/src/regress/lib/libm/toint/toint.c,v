head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.30
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.32
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.28
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.18
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.26
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.24
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.22
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.20
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.5.0.24
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.20
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.18
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.16
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.14
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.12
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.10
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.8
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.6
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.4
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2010.02.06.18.53.19;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2009.07.06.00.06.10;	author martynas;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.02.20.37.42;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.02.23.52.17;	author david;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.31.21.48.04;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.31.03.23.41;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.12.07.08.44;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.7
log
@add (currently failing) test for double -> long long
(I'm using long long for this test to work on 32-bit archs).
@
text
@/*	$OpenBSD: toint.c,v 1.6 2009/07/06 00:06:10 martynas Exp $	*/

/*	Written by Michael Shalayeff, 2003, Public domain.	*/

#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <signal.h>
#include <unistd.h>

void
sigfpe(int sig, siginfo_t *si, void *v)
{
	char buf[132];

	if (si) {
		snprintf(buf, sizeof(buf), "sigfpe: trap=%d code=%d addr=%p\n",
		    si->si_trapno, si->si_code, si->si_addr);
		write(1, buf, strlen(buf));
	}
	_exit(1);
}

int
toint(double d)
{
	return (int)(d + 1);
}

long long
toll(double d)
{
	return (long long)d;
}

int
main(int argc, char *argv[])
{
	struct sigaction sa;
	int i;

	memset(&sa, 0, sizeof(sa));
	sa.sa_sigaction = sigfpe;
	sa.sa_flags = SA_SIGINFO;
	sigaction(SIGFPE, &sa, NULL);

	if (toint(8.6) != 9)
		exit(1);

	if (toll(2.3456e+17) != 234560000000000000LL)
		exit(1);

	exit(0);
}
@


1.6
log
@don't test unspecified behavior per ISO C (section F.4).  this made
machines following IEC/IEEE for fp arith fail, since they take more
care of overflowed value.  failure on zaurus reported by david@@.
ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: toint.c,v 1.5 2004/04/02 20:37:42 mickey Exp $	*/
d31 6
d49 3
@


1.5
log
@add test for an int overflow; found by otto@@ on hppa
@
text
@d1 1
a1 1
/*	$OpenBSD: toint.c,v 1.4 2003/09/02 23:52:17 david Exp $	*/
a43 6

	i = toint(INT_MAX);
	if (i != INT_MIN) {
		printf("%d != %d\n", i, INT_MIN);
		exit(1);
	}
@


1.4
log
@add missing includes
ok deraadt@@ tedu@@ dhartmei@@ krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: toint.c,v 1.3 2003/07/31 21:48:04 deraadt Exp $	*/
d5 1
d12 1
a12 1
static void
d18 2
a19 2
		snprintf(buf, sizeof(buf), "sigfpe: addr=%p, code=%d\n",
		    si->si_addr, si->si_code);
d25 1
a25 1
static int
d28 1
a28 1
	return (int)d;
d35 1
d42 6
a47 1
	if (toint(8.6) != 8)
d49 1
@


1.3
log
@various cleanups; david says results are same
@
text
@d1 1
a1 1
/*	$OpenBSD: toint.c,v 1.2 2003/07/31 03:23:41 mickey Exp $	*/
d6 2
@


1.2
log
@fix the license
@
text
@d1 1
a1 1
/*	$OpenBSD: toint.c,v 1.1 2003/02/12 07:08:44 mickey Exp $	*/
d9 1
a9 1
void
d22 1
a22 1
int
d29 1
a29 1
main()
@


1.1
log
@a double to int conversion test
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d3 1
a3 1
/*	Copyright (c) 2003 Michael Shalayeff. Publci domain.	*/
@

