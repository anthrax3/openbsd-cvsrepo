head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.6
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@ * @;


1.2
date	2016.01.16.15.53.10;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	q8YAia7w4WJFmfRK;

1.1
date	2016.01.12.09.00.39;	author schwarze;	state Exp;
branches;
next	;
commitid	u0ghwKJEyD1nxk41;


desc
@@


1.2
log
@better mockup for promptlen()
@
text
@/*
 * This file is in the public domain.
 * It contains parts from ksh/config.h, which is in the public domain,
 * and additions by Ingo Schwarze <schwarze@@openbsd.org> (2016),
 * who places the additions in the public domain, too.
 */

#define BEL	0x07

/* tty driver characters we are interested in */
typedef struct {
	int erase;
	int kill;
	int werase;
	int intr;
	int quit;
	int eof;
} X_chars;

/* edit.c */
extern X_chars edchars;

#define x_getc()				getchar()
#define x_flush()
#define x_putc(c)				putchar(c)
#define x_puts(s)				fputs(s, stdout)
#define x_mode(a)
#define x_do_comment(a, b, c)			-1
#define x_print_expansions(a, b, c)
#define x_cf_glob(a, b, c, d, e, f, g, h)	0
#define x_longest_prefix(a, b)			0
#define x_basename(a, b)			0
#define x_free_words(a, b)
#define x_escape(a, b, c)			-1

int x_vi(char *, size_t);

/* lex.c */
int promptlen(const char *, const char **);
@


1.1
log
@The ksh(1) vi editing mode code is much harder to understand than
the emacs editing mode code, so add a testsuite before touching it.
To avoid having to deal with the horrendous low-level terminal
handling and high-level command execution code, write the tests in
unit test style rather than in integration test style, by providing
minimal glue to run vi.c stand-alone.  In case relevant internal
interfaces in sh.c, edit.c, and friends are changed, the glue may
need adjustment.
Not testing completion and history at this time, only line editing.
@
text
@d20 1
a27 1
#define promptlen(s, a)				strlen(s)
d37 3
@

