head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.18
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.16
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.14
	OPENBSD_5_0:1.2.0.12
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.10
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.0.24
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.22
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.20
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.18
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.16
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.14
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.12
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.10
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.8
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.6
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.12.02.20.39.44;	author millert;	state dead;
branches;
next	1.3;

1.3
date	2013.06.08.21.36.50;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.29.23.27.26;	author jaredy;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.09.18.52.49;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Move ksh test files into regress.
@
text
@#! /bin/sh
# $OpenBSD: seterror.sh,v 1.3 2013/06/08 21:36:50 millert Exp $

# set -e is supposed to abort the script for errors that are not caught
# otherwise.

set -e

if true; then false && false; fi
if true; then if true; then false && false; fi; fi

for i in 1 2 3
do
	false && true
	true || false
done

! true | false

true
@


1.3
log
@POSIX specifies that for an AND/OR list, only the last command's
exit status matters for "set -e".  OK espie@@
@
text
@d2 1
a2 1
# $OpenBSD: seterror.sh,v 1.2 2009/01/29 23:27:26 jaredy Exp $
@


1.2
log
@pass "xerrok" status across the execution call stack to more closely
match what both POSIX and ksh.1 already describe in regards to set
-e/errexit's behavior in determining when to exit from nonzero return
values.

specifically, the truth values tested as operands to `&&' and `||', as
well as the resulting compound expression itself, along with the truth
value resulting from a negated command (i.e. a pipeline prefixed `!'),
should not make the shell exit when -e is in effect.

issue reported by matthieu.
testing matthieu, naddy.
ok miod (earlier version), otto.
man page ok jmc.
@
text
@d2 1
a2 1
# $OpenBSD: seterror.sh,v 1.1 2003/02/09 18:52:49 espie Exp $
d14 2
a15 2
	true && false
	false || false
@


1.1
log
@a common construct that ksh fails.
@
text
@d2 1
a2 1
# $OpenBSD$
d9 3
d14 2
a15 1
	false && true
d17 3
@

