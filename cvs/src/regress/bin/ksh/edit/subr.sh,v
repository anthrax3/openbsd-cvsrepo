head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2017.07.05.19.27.26;	author anton;	state Exp;
branches;
next	1.3;
commitid	psa7ha1wQQGA2NPN;

1.3
date	2017.07.05.06.31.59;	author anton;	state Exp;
branches;
next	1.2;
commitid	l3TaM7dOrpz93VaH;

1.2
date	2017.06.17.09.55.01;	author anton;	state Exp;
branches;
next	1.1;
commitid	8vDoOJmn24XQ0XDS;

1.1
date	2017.06.05.14.10.11;	author anton;	state Exp;
branches;
next	;
commitid	gyBA1jDSy3L9LYuX;


desc
@@


1.4
log
@Revert previously added tests for file completion that are currently failing.

Prodded by bluhm@@
@
text
@# Copyright (c) 2016 Ingo Schwarze <schwarze@@openbsd.org>
# Copyright (c) 2017 Anton Lindqvist <anton@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

testseq() {
	stdin=$1
	exp=$(echo "$2")
	act=$(echo -n "$stdin" | ./edit ksh -r)
	[ "$exp" = "$act" ] && return 0

	echo input:
	echo ">>>$stdin<<<"
	echo -n "$stdin" | hexdump -Cv
	echo expected:
	echo ">>>$exp<<<"
	echo -n "$exp" | hexdump -Cv
	echo actual:
	echo ">>>$act<<<"
	echo -n "$act" | hexdump -Cv

	return 1
}
@


1.3
log
@Add tests for file completion in ksh emacs mode, currently failing.

While here, pass the v option to hexdump in order to output all data.
@
text
@a15 8
genseq() {
	n=$1
	while [ $# -ge 1 ]; do
		shift
		jot -n -b "$1" -s '' "$n"
	done
}

@


1.2
log
@Pass the command to execute as an argument. Allows the edit program to be
reused.
@
text
@d16 8
d32 1
a32 1
	echo -n "$stdin" | hexdump -C
d35 1
a35 1
	echo -n "$exp" | hexdump -C
d38 1
a38 1
	echo -n "$act" | hexdump -C
@


1.1
log
@Add new edit regress files.

Absent from my previous commit.
@
text
@d19 1
a19 1
	act=$(echo -n "$stdin" | ./edit)
@

