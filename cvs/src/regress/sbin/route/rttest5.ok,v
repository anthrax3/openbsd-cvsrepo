head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.4
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2;
locks; strict;
comment	@# @;


1.10
date	2017.02.28.10.17.37;	author mpi;	state Exp;
branches;
next	1.9;
commitid	2VcagUtsWD2jFhW3;

1.9
date	2016.09.01.11.36.15;	author bluhm;	state Exp;
branches;
next	1.8;
commitid	rHFpjLaRGad0GCRL;

1.8
date	2016.08.22.16.55.14;	author mpi;	state Exp;
branches;
next	1.7;
commitid	dkTZ6kk6d0ogYX88;

1.7
date	2016.07.19.10.47.39;	author mpi;	state Exp;
branches;
next	1.6;
commitid	0sWOCExGb92OBGf2;

1.6
date	2015.11.09.10.49.36;	author mpi;	state Exp;
branches;
next	1.5;
commitid	X0vWRjkoOCde8R5q;

1.5
date	2015.10.25.14.56.14;	author mpi;	state Exp;
branches;
next	1.4;
commitid	dNYbwyikXwqLrYW3;

1.4
date	2015.09.23.09.00.04;	author mpi;	state Exp;
branches;
next	1.3;
commitid	rdqUHuR3XgPi3cjy;

1.3
date	2014.10.29.09.51.44;	author mpi;	state Exp;
branches;
next	1.2;
commitid	xEcKgkYM3g27eQNK;

1.2
date	2014.05.14.19.10.21;	author claudio;	state Exp;
branches;
next	1.1;

1.1
date	2014.04.18.16.38.28;	author claudio;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Reflect recent net/route.c change.  Adding a conflicting route no
longer increment a 'use' counter.
@
text
@Routing tables

Internet:
Destination        Gateway            Flags   Refs      Use   Mtu  Prio Iface
10.8.1/24          192.0.2.2          UGS        0        0 32768    16 lo10002
10.8.1/24          192.0.2.2          UGS        0        0 32768    17 lo10002
10.8.1/24          192.0.2.2          UGS        0        0 32768    18 lo10002
192.0.2.1          192.0.2.1          UHl        0        0 32768     1 lo10001
192.0.2.2          192.0.2.2          UHhl       3        8 32768     1 lo10002
192.0.2.3          192.0.2.3          UHl        0        0 32768     1 lo10003
192.0.2.4          192.0.2.4          UHl        0        0 32768     1 lo10004
@


1.9
log
@Now the cached route flag appears in "route show".  Adapt test.
OK mpi@@
@
text
@d5 1
a5 1
10.8.1/24          192.0.2.2          UGS        0        1 32768    16 lo10002
@


1.8
log
@Sync counters now that ifa_ifwithroute() no longer uses ifa_ifwithnet().
@
text
@d9 1
a9 1
192.0.2.2          192.0.2.2          UHl        3        8 32768     1 lo10002
@


1.7
log
@Update counters & unbreak now that rtrequest(RTM_ADD, ...) caches the
gateway.
@
text
@d9 1
a9 1
192.0.2.2          192.0.2.2          UHl        3        4 32768     1 lo10002
@


1.6
log
@Match recent rtalloc(9) rewrite.

Gateway routes are now cached the first time they are used and no longer
when they are added.  This allows to track down which multipath route is
being selected as next-hop.
@
text
@d9 1
a9 1
192.0.2.2          192.0.2.2          UHl        1        1 32768     1 lo10002
@


1.5
log
@Sync after recent rtable_insert() change.
@
text
@d9 1
a9 1
192.0.2.2          192.0.2.2          UHl        3        4 32768     1 lo10002
@


1.4
log
@Sync with recent rt_use change.
@
text
@d5 1
a5 1
10.8.1/24          192.0.2.2          UGS        0        0 32768    16 lo10002
d9 1
a9 1
192.0.2.2          192.0.2.2          UHl        3        3 32768     1 lo10002
@


1.3
log
@Update test outputs to reflect the fact that routes to loopback addresses
are plain local routes.
@
text
@d9 1
a9 1
192.0.2.2          192.0.2.2          UHl        3        0 32768     1 lo10002
@


1.2
log
@Adjust route outputs to the new lo(4) MTU which is now the same on all archs.
Makes this regress work again.
@
text
@d8 4
a11 4
192.0.2.1          192.0.2.1          UH         0        0 32768     4 lo10001
192.0.2.2          192.0.2.2          UH         3        0 32768     4 lo10002
192.0.2.3          192.0.2.3          UH         0        0 32768     4 lo10003
192.0.2.4          192.0.2.4          UH         0        0 32768     4 lo10004
@


1.1
log
@Introduce some regress tests against our routing table. At least that way
there is a chance that we do not break the network stack even more.
These regress tests already found a few issues.
The framework is ugly and does not properly recover from failures. Somebody
more skilled can come up with a better solution.
mpi@@, blambert@@ and sthen@@ support this
@
text
@d5 7
a11 7
10.8.1/24          192.0.2.2          UGS        0        0 33136    16 lo10002
10.8.1/24          192.0.2.2          UGS        0        0 33136    17 lo10002
10.8.1/24          192.0.2.2          UGS        0        0 33136    18 lo10002
192.0.2.1          192.0.2.1          UH         0        0 33136     4 lo10001
192.0.2.2          192.0.2.2          UH         3        0 33136     4 lo10002
192.0.2.3          192.0.2.3          UH         0        0 33136     4 lo10003
192.0.2.4          192.0.2.4          UH         0        0 33136     4 lo10004
@

