head	1.3;
access;
symbols
	OPENBSD_6_1:1.2.0.30
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.26
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.16
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.24
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.22
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.20
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.18
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.18
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.20
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.16
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.14
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.12
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.10
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.07.03.18.19.55;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	DBhhLSUFgUy3oGv6;

1.2
date	2010.06.29.19.50.16;	author reyk;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.08.17.12.48;	author cloder;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Generate source and header files for regress on demand.
OK espie@@
@
text
@#	$OpenBSD: Makefile,v 1.2 2010/06/29 19:50:16 reyk Exp $
#	$EOM: Makefile,v 1.10 2000/04/07 20:19:43 niklas Exp $

# Test DH:

PROG=		dhtest
SRCS=		dh.c dhtest.c
OS!=		awk '/^OS=/ { print $$2 }' ${.CURDIR}/../../Makefile
FEATURES!=	awk '/^FEATURES=/ { print $$0 }' ${.CURDIR}/../../Makefile | sed 's/FEATURES=.//'
CFLAGS+=	-DUSE_EC
LDADD+=		-lcrypto
DPADD+=		${LIBCRYPTO}

.if ${FEATURES:Mgmp} == "gmp"
CFLAGS+=	-DMP_FLAVOUR=MP_FLAVOUR_GMP
LDADD+=		-lgmp
DPADD+=		${LIBGMP}
.else
CFLAGS+=	-DMP_FLAVOUR=MP_FLAVOUR_OPENSSL
.endif

.include <bsd.regress.mk>
@


1.2
log
@Replace the hand-crafted Diffie-Hellman implementation in isakmpd with
the smaller implementation from iked that is using libcrypto instead.
This allows to remove a lot of code (which is always good), get rid of
some custom crypto code by using libcrypto, theoretically adds
support for many new MODP and EC2N/ECP modes (but it is not configurable
yet), and allows to share the dh.c/dh.h code in different codebases
(it is identical in isakmpd and iked, but could also be used elsewhere).

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2005/04/08 17:12:48 cloder Exp $
a7 2
TOPSRC=		${.CURDIR}/../../../../sbin/isakmpd
TOPOBJ!=	cd ${TOPSRC}; printf "all:\n\t@@pwd\n" |${MAKE} -f-
d10 1
a10 4
.PATH:		${TOPSRC} ${TOPSRC}/sysdep/openbsd ${TOPOBJ}
CFLAGS+=	-I${TOPSRC} -I${TOPSRC}/sysdep/openbsd -I${TOPOBJ} -Wall \
		-DUSE_EC
NOMAN=
a12 1
DEBUG=		-g
@


1.1
log
@Moved these tests here from sbin/isakmpd/regress.  They mostly work
but are not enabled by default yet.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2004/02/25 16:01:29 hshoexer Exp $
d7 1
a7 2
SRCS=		math_2n.c math_ec2n.c math_group.c dh.c dhtest.c log.c util.c \
		sysdep.c gmp_util.c conf.c
@

