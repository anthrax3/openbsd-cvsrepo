head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.20
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.10
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.18
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.16
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.14
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.12
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.2.0.14
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.10
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.8
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.6
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2011.12.12.23.44.40;	author mikeb;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.27.10.33.37;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.4;

1.4
date	2010.01.13.01.08.38;	author mcbride;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.06.14.11.07;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.01.23.19.18;	author mcbride;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update regression tests wrt skip steps (fixed in pfctl.c rev1.305);
ok henning mcbride (a while back)
@
text
@@@0 match out on tun1000000 inet from 10.0.0.0/24 to any nat-to <__automatic_0:2> round-robin sticky-address
  [ Skip steps: i=3 r=end f=3 p=3 sp=end dp=3 ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@1 match in on tun1000000 inet from any to 10.0.1.1 rdr-to 10.0.0.0/24 random sticky-address
  [ Skip steps: i=3 d=end r=end f=3 p=3 sa=end sp=end dp=3 ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@2 match in on tun1000000 inet from any to 10.0.1.2 rdr-to <__automatic_1:2> round-robin sticky-address
  [ Skip steps: d=end r=end sa=end sp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@3 pass in proto tcp from any to any port = 22 flags S/SA keep state (source-track global)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@4 pass in proto tcp from any to any port = 25 flags S/SA keep state (source-track global)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@5 pass in proto tcp from any to any port = 80 flags S/SA keep state (source-track rule, max-src-states 3, max-src-nodes 1000)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@6 pass in proto tcp from any to any port = 123 flags S/SA keep state (source-track rule, max-src-nodes 1000)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@7 pass in proto tcp from any to any port = 321 flags S/SA keep state (source-track global, max-src-states 3)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@


1.6
log
@adjust for port numbers instead of names by default
From: Lawrence Teo <lteo at devio at us>
@
text
@d2 1
a2 1
  [ Skip steps: i=3 d=end f=3 p=3 sp=end dp=3 ]
d6 1
a6 1
  [ Skip steps: i=3 r=end d=end f=3 p=3 sa=end sp=end dp=3 ]
d10 1
a10 1
  [ Skip steps: r=end d=end sa=end sp=end ]
d14 1
a14 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end ]
d18 1
a18 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end ]
d22 1
a22 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end ]
d26 1
a26 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end ]
d30 1
a30 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end dp=end ]
@


1.5
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@d13 1
a13 1
@@3 pass in proto tcp from any to any port = ssh flags S/SA keep state (source-track global)
d17 1
a17 1
@@4 pass in proto tcp from any to any port = smtp flags S/SA keep state (source-track global)
d21 1
a21 1
@@5 pass in proto tcp from any to any port = www flags S/SA keep state (source-track rule, max-src-states 3, max-src-nodes 1000)
d25 1
a25 1
@@6 pass in proto tcp from any to any port = ntp flags S/SA keep state (source-track rule, max-src-nodes 1000)
@


1.4
log
@Update regress output files to -current behaviour
- non-pool translation/routing specification
- leftover bits from nat-to/rdr-to/binat-to
@
text
@d2 1
a2 1
  [ Skip steps: i=3 f=3 p=3 sp=end dp=3 ]
d6 1
a6 1
  [ Skip steps: i=3 d=end f=3 p=3 sa=end sp=end dp=3 ]
d10 1
a10 1
  [ Skip steps: d=end sa=end sp=end ]
d14 1
a14 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end ]
d18 1
a18 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end ]
d22 1
a22 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end ]
d26 1
a26 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end ]
d30 1
a30 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
@


1.3
log
@more updates for new pf with source-hash manually added to
loaded output as it doesn't currently appear as it should.

ok henning@@
@
text
@d1 1
a1 1
@@0 match out on tun1000000 inet from 10.0.0.0/24 to any nat-to { 10.0.1.1, 10.0.1.2 } round-robin sticky-address
d9 1
a9 1
@@2 match in on tun1000000 inet from any to 10.0.1.2 rdr-to { 10.0.0.1, 10.0.0.2 } round-robin sticky-address
@


1.2
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d1 2
a2 2
@@0 nat on tun1000000 inet from 10.0.0.0/24 to any -> { 10.0.1.1, 10.0.1.2 } round-robin sticky-address
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d5 2
a6 2
@@0 rdr on tun1000000 inet from any to 10.0.1.1 -> 10.0.0.0/24 random sticky-address
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end dp=end ]
d9 2
a10 2
@@1 rdr on tun1000000 inet from any to 10.0.1.2 -> { 10.0.0.1, 10.0.0.2 } round-robin sticky-address
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d13 1
a13 1
@@0 pass in proto tcp from any to any port = ssh flags S/SA keep state (source-track global)
d17 1
a17 1
@@1 pass in proto tcp from any to any port = smtp flags S/SA keep state (source-track global)
d21 1
a21 1
@@2 pass in proto tcp from any to any port = www flags S/SA keep state (source-track rule, max-src-states 3, max-src-nodes 1000)
d25 1
a25 1
@@3 pass in proto tcp from any to any port = ntp flags S/SA keep state (source-track rule, max-src-nodes 1000)
d29 1
a29 1
@@4 pass in proto tcp from any to any port = 321 flags S/SA keep state (source-track global, max-src-states 3)
@


1.1
log
@First pass at doing regress tests on the optimizer (pfctl -o).
Still need to add some more input files to test specific corner cases.
@
text
@d13 1
a13 1
@@0 pass in proto tcp from any to any port = ssh keep state (source-track global)
d17 1
a17 1
@@1 pass in proto tcp from any to any port = smtp keep state (source-track global)
d21 1
a21 1
@@2 pass in proto tcp from any to any port = www keep state (source-track rule, max-src-states 3, max-src-nodes 1000)
d25 1
a25 1
@@3 pass in proto tcp from any to any port = ntp keep state (source-track rule, max-src-nodes 1000)
d29 1
a29 1
@@4 pass in proto tcp from any to any port = 321 keep state (source-track global, max-src-states 3)
@

