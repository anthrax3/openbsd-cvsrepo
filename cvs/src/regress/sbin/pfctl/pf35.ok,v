head	1.17;
access;
symbols
	OPENBSD_6_1:1.17.0.14
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.10
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.8
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.6
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.14.0.8
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.6
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.4
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.2
	OPENBSD_5_0:1.13.0.2
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.12.0.18
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.16
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.12
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.14
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.10
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.8
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.6
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.4
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.2
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.11.0.10
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.8
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9;
locks; strict;
comment	@# @;


1.17
date	2014.04.18.10.48.23;	author henning;	state Exp;
branches;
next	1.16;

1.16
date	2013.10.12.12.18.44;	author henning;	state Exp;
branches;
next	1.15;

1.15
date	2013.07.31.16.20.11;	author mikeb;	state Exp;
branches;
next	1.14;

1.14
date	2011.11.27.10.33.37;	author henning;	state Exp;
branches;
next	1.13;

1.13
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.12;

1.12
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.30.12.53.56;	author kjc;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.9;

1.9
date	2003.03.03.14.18.04;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.02.23.40.52;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2002.12.17.00.35.34;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2002.12.13.21.53.41;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.08.00.20.17;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.05.14.13.37;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.05.13.09.32;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.28.14.51.05;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.27.19.00.21;	author henning;	state Exp;
branches;
next	;


desc
@@


1.17
log
@stop testing altq stuffz
how many tests I wrote back then... (of which the majority is pointless)
@
text
@intf = "lo0"
pass out on lo0 inet proto tcp from any to any port = 22 flags S/SA tos 0x10
pass out on lo0 inet proto tcp from any to any port = 22 flags S/SA tos 0x08
@


1.16
log
@adopt existing altq regress to queueing changes; queuespecs for altq use
"oldqueue" as keyword for the transition phase
@
text
@d2 2
a3 17
developerhosts = "10.0.0.0/24"
employeehosts = "10.0.1.0/24"
altq on lo0 cbq( red ecn ) bandwidth 10Mb qlimit 100 tbrsize 5000 queue { std http mail ssh }
oldqueue std bandwidth 10% qlimit 1 cbq( default ) 
oldqueue http bandwidth 60% priority 2 cbq( red borrow ) { employees developers }
oldqueue developers bandwidth 60% 
oldqueue employees bandwidth 40% 
oldqueue mail bandwidth 10% priority 0 cbq( red ecn borrow ) 
oldqueue ssh bandwidth 20% cbq( borrow ) { ssh_interactive ssh_bulk }
oldqueue ssh_interactive bandwidth 30% priority 7 
oldqueue ssh_bulk bandwidth 70% priority 0 qlimit 60 
block return out on lo0 inet all set ( queue std )
pass out on lo0 inet proto tcp from 10.0.0.0/24 to any port = 80 flags S/SA set ( queue developers )
pass out on lo0 inet proto tcp from 10.0.1.0/24 to any port = 80 flags S/SA set ( queue employees )
pass out on lo0 inet proto tcp from any to any port = 22 flags S/SA tos 0x10 set ( queue ssh_interactive )
pass out on lo0 inet proto tcp from any to any port = 22 flags S/SA tos 0x08 set ( queue ssh_bulk )
pass out on lo0 inet proto tcp from any to any port = 25 flags S/SA set ( queue mail )
@


1.15
log
@fixup pfctl regress fallout from the "set tos" and "set queue" changes
@
text
@d5 8
a12 8
queue std bandwidth 10% qlimit 1 cbq( default ) 
queue http bandwidth 60% priority 2 cbq( red borrow ) { employees developers }
queue developers bandwidth 60% 
queue employees bandwidth 40% 
queue mail bandwidth 10% priority 0 cbq( red ecn borrow ) 
queue ssh bandwidth 20% cbq( borrow ) { ssh_interactive ssh_bulk }
queue ssh_interactive bandwidth 30% priority 7 
queue ssh_bulk bandwidth 70% priority 0 qlimit 60 
@


1.14
log
@adjust for port numbers instead of names by default
From: Lawrence Teo <lteo at devio at us>
@
text
@d13 6
a18 6
block return out on lo0 inet all queue std
pass out on lo0 inet proto tcp from 10.0.0.0/24 to any port = 80 flags S/SA queue developers
pass out on lo0 inet proto tcp from 10.0.1.0/24 to any port = 80 flags S/SA queue employees
pass out on lo0 inet proto tcp from any to any port = 22 flags S/SA tos 0x10 queue ssh_interactive
pass out on lo0 inet proto tcp from any to any port = 22 flags S/SA tos 0x08 queue ssh_bulk
pass out on lo0 inet proto tcp from any to any port = 25 flags S/SA queue mail
@


1.13
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@d14 5
a18 5
pass out on lo0 inet proto tcp from 10.0.0.0/24 to any port = www flags S/SA queue developers
pass out on lo0 inet proto tcp from 10.0.1.0/24 to any port = www flags S/SA queue employees
pass out on lo0 inet proto tcp from any to any port = ssh flags S/SA tos 0x10 queue ssh_interactive
pass out on lo0 inet proto tcp from any to any port = ssh flags S/SA tos 0x08 queue ssh_bulk
pass out on lo0 inet proto tcp from any to any port = smtp flags S/SA queue mail
@


1.12
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d14 5
a18 5
pass out on lo0 inet proto tcp from 10.0.0.0/24 to any port = www flags S/SA keep state queue developers
pass out on lo0 inet proto tcp from 10.0.1.0/24 to any port = www flags S/SA keep state queue employees
pass out on lo0 inet proto tcp from any to any port = ssh flags S/SA tos 0x10 keep state queue ssh_interactive
pass out on lo0 inet proto tcp from any to any port = ssh flags S/SA tos 0x08 keep state queue ssh_bulk
pass out on lo0 inet proto tcp from any to any port = smtp flags S/SA keep state queue mail
@


1.11
log
@more altq parameter tweaks to silence warnings.
noticed by david@@
@
text
@d14 5
a18 5
pass out on lo0 inet proto tcp from 10.0.0.0/24 to any port = www keep state queue developers
pass out on lo0 inet proto tcp from 10.0.1.0/24 to any port = www keep state queue employees
pass out on lo0 inet proto tcp from any to any port = ssh tos 0x10 keep state queue ssh_interactive
pass out on lo0 inet proto tcp from any to any port = ssh tos 0x08 keep state queue ssh_bulk
pass out on lo0 inet proto tcp from any to any port = smtp keep state queue mail
@


1.10
log
@Big Sync
@
text
@d7 2
a8 2
queue developers 
queue employees bandwidth 10% 
d11 2
a12 2
queue ssh_interactive priority 7 
queue ssh_bulk priority 0 qlimit 60 
@


1.9
log
@regen
@
text
@d13 6
a18 6
block return out on lo0 inet all queue std 
pass out on lo0 inet proto tcp from 10.0.0.0/24 to any port = www keep state queue developers 
pass out on lo0 inet proto tcp from 10.0.1.0/24 to any port = www keep state queue employees 
pass out on lo0 inet proto tcp from any to any port = ssh tos 0x10 keep state queue ssh_interactive 
pass out on lo0 inet proto tcp from any to any port = ssh tos 0x08 keep state queue ssh_bulk 
pass out on lo0 inet proto tcp from any to any port = smtp keep state queue mail 
@


1.8
log
@regen after pfctl changes
@
text
@d4 1
a4 1
altq on lo0 cbq( red ecn ) bandwidth 10.00Mb qlimit 100 tbrsize 5000 queue { std http mail ssh }
@


1.7
log
@"cosmetical changes if at all". yeah.
@
text
@d5 8
a12 8
queue std bandwidth 1.00Mb qlimit 1 cbq( default ) 
queue http bandwidth 6.00Mb priority 2 cbq( red borrow ) { employees developers }
queue developers bandwidth 6.00Mb 
queue employees bandwidth 600.00Kb 
queue mail bandwidth 1.00Mb priority 0 cbq( red ecn borrow ) 
queue ssh bandwidth 2.00Mb cbq( borrow ) { ssh_interactive ssh_bulk }
queue ssh_interactive bandwidth 2.00Mb priority 7 
queue ssh_bulk bandwidth 2.00Mb priority 0 qlimit 60 
@


1.6
log
@adjust after minor output change (whitespace)
@
text
@d5 1
a5 1
queue std bandwidth 1000.00Kb qlimit 1 cbq( default ) 
d9 1
a9 1
queue mail bandwidth 1000.00Kb priority 0 cbq( red ecn borrow ) 
@


1.5
log
@adjust after syntax change
@
text
@d13 6
a18 6
block return out on lo0 inet all queue std
pass out on lo0 inet proto tcp from 10.0.0.0/24 to any port = www keep state queue developers
pass out on lo0 inet proto tcp from 10.0.1.0/24 to any port = www keep state queue employees
pass out on lo0 inet proto tcp from any to any port = ssh tos 0x10 keep state queue ssh_interactive
pass out on lo0 inet proto tcp from any to any port = ssh tos 0x08 keep state queue ssh_bulk
pass out on lo0 inet proto tcp from any to any port = smtp keep state queue mail
@


1.4
log
@no more rule numbers in output
@
text
@d4 1
a4 1
altq on lo0 scheduler cbq( red ecn ) bandwidth 10.00Mb qlimit 100 tbrsize 5000 queue { std http mail ssh }
@


1.3
log
@adjust after pfctl output changes
@
text
@d13 6
a18 6
@@0 block return out on lo0 inet all queue std
@@1 pass out on lo0 inet proto tcp from 10.0.0.0/24 to any port = www keep state queue developers
@@2 pass out on lo0 inet proto tcp from 10.0.1.0/24 to any port = www keep state queue employees
@@3 pass out on lo0 inet proto tcp from any to any port = ssh tos 0x10 keep state queue ssh_interactive
@@4 pass out on lo0 inet proto tcp from any to any port = ssh tos 0x08 keep state queue ssh_bulk
@@5 pass out on lo0 inet proto tcp from any to any port = smtp keep state queue mail
@


1.2
log
@test qlimit on altq rule
@
text
@d1 3
a3 3
intf = lo0
developerhosts = 10.0.0.0/24
employeehosts = 10.0.1.0/24
@


1.1
log
@more altq testing
@
text
@d4 1
a4 1
altq on lo0 scheduler cbq( red ecn ) bandwidth 10.00Mb tbrsize 5000 queue { std http mail ssh }
@

