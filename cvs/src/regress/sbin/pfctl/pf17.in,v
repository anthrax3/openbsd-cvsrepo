head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.34
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.32
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.28
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.18
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.26
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.24
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.20
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.16
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2009.09.23.14.08.33;	author jsg;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.22.05.41.40;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2004.01.03.22.03.03;	author cedric;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.31.16.12.09;	author cedric;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.31.11.55.04;	author cedric;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.26.14.10.32;	author cedric;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.14.12.59.09;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.11.02.16.30;	author kjell;	state Exp;
branches;
next	;


desc
@@


1.9
log
@More tweaks to try to catchup to recent pf changes.
pfopt5 part from sthen@@

ok henning@@ sthen@@
@
text
@# test binat

match on lo0 from 192.168.1.1 to any binat-to 10.0.0.1
match on lo0 proto tcp from 192.168.1.2 to any binat-to 10.0.0.2
match on lo0 proto udp from 192.168.1.3 to any binat-to 10.0.0.3
match on lo0 proto icmp from 192.168.1.4 to any binat-to 10.0.0.4

match on lo0 from 192.168.1.5 to 172.16.1.1 binat-to 10.0.0.5
match on lo0 from 192.168.1.6 to 172.16.1.2/32 binat-to 10.0.0.6
match on lo0 from 192.168.1.7 to 172.16.2.0/24 binat-to 10.0.0.7

match on lo0 from 192.168.2.0/24 to any binat-to 10.0.5.0/24
match on lo0 from 192.168.2.0/28 to any binat-to 10.0.4.0/28
match on lo0 from 192.168.2.0/30 to 192.168.3.1 binat-to 10.0.3.0/30

match on lo0 from 192.168.1.8 to ! 172.17.0.0/16 binat-to 10.0.0.8

match on lo0 from 1.1.1.1 to no-route binat-to 2.2.2.2
match on lo0 from (lo0:0) to 1.1.1.1 binat-to 2.2.2.2
match on lo0 from (lo0:0) to 1.1.1.1 binat-to (lo1000000:0)
match on lo0 inet from (lo0:0) to (lo1000000:0) binat-to (lo1000000:0)
match on lo0 from 1.1.1.1 to <sometable> binat-to 2.2.2.2
match on lo0 from 1.1.1.1 to !<sometable> binat-to 2.2.2.2
match on lo0 from 1.1.1.1 to (lo1000000:0) binat-to 2.2.2.2
match on lo0 from 1.1.1.1 to !(lo1000000:0) binat-to 2.2.2.2
match on lo0 from (lo0:0) to <sometable> binat-to 2.2.2.2

match on lo0 from ::1 to no-route binat-to ::2
match on lo0 from (lo0:0) to ::1 binat-to ::2
match on lo0 from (lo0:0) to ::1 binat-to (lo1000000:0)
match on lo0 inet6 from (lo0:0) to (lo1000000:0) binat-to (lo1000000:0)
match on lo0 from ::1 to <sometable> binat-to ::2
match on lo0 from ::1 to !<sometable> binat-to ::2
match on lo0 from ::1 to (lo1000000:0) binat-to ::2
match on lo0 from ::1 to !(lo1000000:0) binat-to ::2
match on lo0 from (lo0:0) to <sometable> binat-to ::2

match on lo0 from ::1 to (lo0) binat-to ::1
match on lo0 from ::1 to (lo0:0) binat-to ::1
match on lo0 from ::1 to (lo0:peer) binat-to ::1
match on lo0 from ::1 to (lo0:peer:0) binat-to ::1
match on lo0 from ::1 to (lo0:broadcast) binat-to ::1
match on lo0 from ::1 to (lo0:broadcast:0) binat-to ::1
match on lo0 from ::1 to (lo0:network) binat-to ::1
match on lo0 from ::1 to (lo0:network:0) binat-to ::1
match on lo0 from ::1 to (lo0)/100 binat-to ::2
match on lo0 from ::1 to (lo0:0)/100 binat-to ::2
match on lo0 from ::1 to (lo0:peer)/100 binat-to ::2
match on lo0 from ::1 to (lo0:peer:0)/100 binat-to ::2

match on lo from (lo0:0) to ::1 binat-to ::2
match on tun from (lo0:0) to ::1 binat-to ::2
@


1.8
log
@cope with recent canges
@
text
@d3 47
a49 48
no binat on lo0 from 192.168.1.1 to 10.1.2.3
binat on lo0 from 192.168.1.1 to any -> 10.0.0.1
binat on lo0 proto tcp from 192.168.1.2 to any -> 10.0.0.2
binat on lo0 proto udp from 192.168.1.3 to any -> 10.0.0.3
binat on lo0 proto icmp from 192.168.1.4 to any -> 10.0.0.4

binat on lo0 from 192.168.1.5 to 172.16.1.1 -> 10.0.0.5
binat on lo0 from 192.168.1.6 to 172.16.1.2/32 -> 10.0.0.6
binat on lo0 from 192.168.1.7 to 172.16.2.0/24 -> 10.0.0.7

binat on lo0 from 192.168.2.0/24 to any -> 10.0.5.0/24
binat on lo0 from 192.168.2.0/28 to any -> 10.0.4.0/28
binat on lo0 from 192.168.2.0/30 to 192.168.3.1 -> 10.0.3.0/30

binat on lo0 from 192.168.1.8 to ! 172.17.0.0/16 -> 10.0.0.8

binat on lo0 from 1.1.1.1 to no-route -> 2.2.2.2
binat on lo0 from (lo0:0) to 1.1.1.1 -> 2.2.2.2
binat on lo0 from (lo0:0) to 1.1.1.1 -> (lo1000000:0)
binat on lo0 inet from (lo0:0) to (lo1000000:0) -> (lo1000000:0)
binat on lo0 from 1.1.1.1 to <sometable> -> 2.2.2.2
binat on lo0 from 1.1.1.1 to !<sometable> -> 2.2.2.2
binat on lo0 from 1.1.1.1 to (lo1000000:0) -> 2.2.2.2
binat on lo0 from 1.1.1.1 to !(lo1000000:0) -> 2.2.2.2
binat on lo0 from (lo0:0) to <sometable> -> 2.2.2.2

binat on lo0 from ::1 to no-route -> ::2
binat on lo0 from (lo0:0) to ::1 -> ::2
binat on lo0 from (lo0:0) to ::1 -> (lo1000000:0)
binat on lo0 inet6 from (lo0:0) to (lo1000000:0) -> (lo1000000:0)
binat on lo0 from ::1 to <sometable> -> ::2
binat on lo0 from ::1 to !<sometable> -> ::2
binat on lo0 from ::1 to (lo1000000:0) -> ::2
binat on lo0 from ::1 to !(lo1000000:0) -> ::2
binat on lo0 from (lo0:0) to <sometable> -> ::2

binat on lo0 from ::1 to (lo0) -> ::1
binat on lo0 from ::1 to (lo0:0) -> ::1
binat on lo0 from ::1 to (lo0:peer) -> ::1
binat on lo0 from ::1 to (lo0:peer:0) -> ::1
binat on lo0 from ::1 to (lo0:broadcast) -> ::1
binat on lo0 from ::1 to (lo0:broadcast:0) -> ::1
binat on lo0 from ::1 to (lo0:network) -> ::1
binat on lo0 from ::1 to (lo0:network:0) -> ::1
binat on lo0 from ::1 to (lo0)/100 -> ::2
binat on lo0 from ::1 to (lo0:0)/100 -> ::2
binat on lo0 from ::1 to (lo0:peer)/100 -> ::2
binat on lo0 from ::1 to (lo0:peer:0)/100 -> ::2
d51 2
a52 2
binat on lo from (lo0:0) to ::1 -> ::2
binat on tun from (lo0:0) to ::1 -> ::2
@


1.7
log
@Do not use (self) in pfload regress tests, it makes result config-dependant.
Found by David Krause, analyzed by Ryan McBride.
@
text
@d39 12
a50 12
binat on lo0 from ::1 to (lo) -> ::1
binat on lo0 from ::1 to (lo:0) -> ::1
binat on lo0 from ::1 to (lo:peer) -> ::1
binat on lo0 from ::1 to (lo:peer:0) -> ::1
binat on lo0 from ::1 to (lo:broadcast) -> ::1
binat on lo0 from ::1 to (lo:broadcast:0) -> ::1
binat on lo0 from ::1 to (lo:network) -> ::1
binat on lo0 from ::1 to (lo:network:0) -> ::1
binat on lo0 from ::1 to (lo)/100 -> ::2
binat on lo0 from ::1 to (lo:0)/100 -> ::2
binat on lo0 from ::1 to (lo:peer)/100 -> ::2
binat on lo0 from ::1 to (lo:peer:0)/100 -> ::2
@


1.6
log
@Test new interface syntax.
@
text
@d39 12
a50 12
binat on lo0 from ::1 to (self) -> ::1
binat on lo0 from ::1 to (self:0) -> ::1
binat on lo0 from ::1 to (self:peer) -> ::1
binat on lo0 from ::1 to (self:peer:0) -> ::1
binat on lo0 from ::1 to (self:broadcast) -> ::1
binat on lo0 from ::1 to (self:broadcast:0) -> ::1
binat on lo0 from ::1 to (self:network) -> ::1
binat on lo0 from ::1 to (self:network:0) -> ::1
binat on lo0 from ::1 to (self)/100 -> ::2
binat on lo0 from ::1 to (self:0)/100 -> ::2
binat on lo0 from ::1 to (self:peer)/100 -> ::2
binat on lo0 from ::1 to (self:peer:0)/100 -> ::2
@


1.5
log
@Sync after interface improvements.
@
text
@d39 15
@


1.4
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d20 3
a22 3
binat on lo0 from (lo0) to 1.1.1.1 -> 2.2.2.2
binat on lo0 from (lo0) to 1.1.1.1 -> (lo1000000)
binat on lo0 inet from (lo0) to (lo1000000) -> (lo1000000)
d25 3
a27 3
binat on lo0 from 1.1.1.1 to (lo1000000) -> 2.2.2.2
binat on lo0 from 1.1.1.1 to !(lo1000000) -> 2.2.2.2
binat on lo0 from (lo0) to <sometable> -> 2.2.2.2
d30 3
a32 3
binat on lo0 from (lo0) to ::1 -> ::2
binat on lo0 from (lo0) to ::1 -> (lo1000000)
binat on lo0 inet6 from (lo0) to (lo1000000) -> (lo1000000)
d35 3
a37 3
binat on lo0 from ::1 to (lo1000000) -> ::2
binat on lo0 from ::1 to !(lo1000000) -> ::2
binat on lo0 from (lo0) to <sometable> -> ::2
@


1.3
log
@As promised, a bunch of new valid binat tests.
@
text
@d21 2
a22 2
binat on lo0 from (lo0) to 1.1.1.1 -> (lo1)
binat on lo0 inet from (lo0) to (lo1) -> (lo1)
d25 2
a26 2
binat on lo0 from 1.1.1.1 to (lo1) -> 2.2.2.2
binat on lo0 from 1.1.1.1 to !(lo1) -> 2.2.2.2
d31 2
a32 2
binat on lo0 from (lo0) to ::1 -> (lo1)
binat on lo0 inet6 from (lo0) to (lo1) -> (lo1)
d35 2
a36 2
binat on lo0 from ::1 to (lo1) -> ::2
binat on lo0 from ::1 to !(lo1) -> ::2
@


1.2
log
@test binat netblocks
from ryan
@
text
@d18 21
@


1.1
log
@Use merged config file format. The separate NAT loop can go away,
since all files are now loaded the same way. Add regress tests for
invalid ordering of scrub, nat, filter rules
@
text
@d13 4
@

