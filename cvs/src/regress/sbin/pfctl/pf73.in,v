head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.30
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.20
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.28
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.26
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.24
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.22
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.18
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.16
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.14
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.12
	OPENBSD_5_0:1.3.0.10
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.8
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.6
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.22
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.20
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.18
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.16
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2009.04.06.12.41.48;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.15.00.11.48;	author frantzen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@scrub gone
@
text
@pass proto tcp scrub(reassemble tcp)
@


1.2
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d1 1
a1 13
scrub proto tcp reassemble tcp
scrub proto tcp all reassemble tcp
scrub proto tcp from any to any reassemble tcp
scrub proto tcp all fragment crop reassemble tcp
scrub proto tcp all fragment drop-ovl reassemble tcp
scrub proto tcp all reassemble tcp fragment reassemble
scrub proto tcp from { <regress.1> !<regress.2> } to any reassemble tcp
scrub inet proto tcp from { 10.0.0.1, 10.0.0.2 } to { 10.0.0.3, 10.0.0.4 } reassemble tcp
scrub log on lo0 proto tcp from any to any min-ttl 25 reassemble tcp
scrub log on lo0 inet6 proto tcp from { (lo1000000), (lo0) } to 2000::1 reassemble tcp
scrub log on {lo0 lo1000000} proto tcp from any to any reassemble tcp
scrub on lo0 proto tcp all reassemble tcp
scrub on lo0 proto tcp from any to any fragment reassemble max-mss 224 min-ttl 15 no-df reassemble tcp
@


1.1
log
@tests for "scrub tcp reassemble"
@
text
@d10 2
a11 2
scrub log on lo0 inet6 proto tcp from { (lo1), (lo0) } to 2000::1 reassemble tcp
scrub log on {lo0 lo1} proto tcp from any to any reassemble tcp
@

