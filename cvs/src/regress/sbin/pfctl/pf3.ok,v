head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.24
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.22
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.12
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.20
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.18
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.16
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.14
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.10
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.8
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.6
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.4
	OPENBSD_5_0:1.13.0.2
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.12.0.18
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.16
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.12
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.14
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.10
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.8
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.6
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.4
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.2
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.10.0.14
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@# @;


1.13
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.12;

1.12
date	2006.10.17.08.15.32;	author mcbride;	state Exp;
branches;
next	1.11;

1.11
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.06.11.09.48;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.05.14.13.37;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2002.10.27.13.59.14;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.05.22.25.33;	author dhartmei;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.30.14.59.29;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.01.04.07.39;	author hugh;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.27.18.23.39;	author dhartmei;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.03.08.16.01;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.31.09.02.18;	author wilfried;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@pass in all flags S/SA
pass in all flags S/SA
block drop in proto tcp all flags FPUEW/FSRPAUEW
block drop in proto tcp all flags FS/FSRA
block drop in proto tcp all flags /FSRAW
pass in proto udp all
pass in proto icmp all
pass in proto tcp all flags S/SA
pass in all flags S/SA no state
pass in all no state
pass in all flags any
pass in all flags S/SA
pass in all flags S/SA
@


1.12
log
@'flags S/SA' not implicit if the rule is stateless.
@
text
@d1 2
a2 2
pass in all flags S/SA keep state
pass in all flags S/SA keep state
d6 3
a8 3
pass in proto udp all keep state
pass in proto icmp all keep state
pass in proto tcp all flags S/SA keep state
d11 3
a13 3
pass in all flags any keep state
pass in all flags S/SA keep state
pass in all flags S/SA keep state
@


1.11
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d10 1
a10 1
pass in all flags any no state
@


1.10
log
@Big Sync
@
text
@d1 2
a2 2
pass in all
pass in all
d6 8
a13 4
pass in proto udp all
pass in proto icmp all
pass in proto tcp all flags S/SA
pass in all flags S/SA
@


1.9
log
@block -> block drop
@
text
@d1 9
a9 9
pass in all 
pass in all 
block drop in proto tcp all flags FPUEW/FSRPAUEW 
block drop in proto tcp all flags FS/FSRA 
block drop in proto tcp all flags /FSRAW 
pass in proto udp all 
pass in proto icmp all 
pass in proto tcp all flags S/SA 
pass in all flags S/SA 
@


1.8
log
@no more rule numbers in output
@
text
@d3 3
a5 3
block in proto tcp all flags FPUEW/FSRPAUEW 
block in proto tcp all flags FS/FSRA 
block in proto tcp all flags /FSRAW 
@


1.7
log
@flags X is dead
@
text
@d1 9
a9 9
@@0 pass in all 
@@1 pass in all 
@@2 block in proto tcp all flags FPUEW/FSRPAUEW 
@@3 block in proto tcp all flags FS/FSRA 
@@4 block in proto tcp all flags /FSRAW 
@@5 pass in proto udp all 
@@6 pass in proto icmp all 
@@7 pass in proto tcp all flags S/SA 
@@8 pass in all flags S/SA 
@


1.6
log
@Expand {} lists from left to right, so 'pass in from { a, b } to any'
becomes '@@0 pass in from a to any @@1 pass in from b to any' instead of
the other way around. Patch from Camiel Dobbelaar.
@
text
@d8 2
a9 2
@@7 pass in proto tcp all flags S/FSRPAUEW 
@@8 pass in all flags S/FSRPAUEW 
@


1.5
log
@positive regression test for flag handling
@
text
@d6 1
a6 1
@@5 pass in proto tcp all flags S/FSRPAUEW 
d8 1
a8 1
@@7 pass in proto udp all 
@


1.4
log
@Update tests to reflect ECN support.
@
text
@d6 4
@


1.3
log
@And adjust regress tests to match the rule number output.
@
text
@d3 1
a3 1
@@2 block in proto tcp all flags FPU/FSRPAU 
d5 1
a5 1
@@4 block in proto tcp all flags /FSRA 
@


1.2
log
@sync with output format changes (pfctl)
@
text
@d2 4
a5 4
@@0 pass in all 
@@0 block in proto tcp all flags FPU/FSRPAU 
@@0 block in proto tcp all flags FS/FSRA 
@@0 block in proto tcp all flags /FSRA 
@


1.1
log
@allow to test that flags are unset, ok dhartmei@@,  mickey@@
@
text
@d1 5
a5 5
@@1 pass in all 
@@1 pass in all 
@@1 block in proto tcp all flags FPU/FSRPAU 
@@1 block in proto tcp all flags FS/FSRA 
@@1 block in proto tcp all flags /FSRA 
@

