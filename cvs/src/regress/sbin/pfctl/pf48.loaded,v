head	1.13;
access;
symbols
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.14
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.10
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.8
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.6
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.12
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.8
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.6
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.4
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.2
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.8.0.6
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.4
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.7.0.4
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.13
date	2014.06.25.15.14.20;	author mikeb;	state Exp;
branches;
next	1.12;
commitid	vdQ0f9G49C4trITR;

1.12
date	2011.12.12.21.41.29;	author mikeb;	state Exp;
branches;
next	1.11;

1.11
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.06.14.11.07;	author jsg;	state Exp;
branches;
next	1.9;

1.9
date	2009.04.06.12.41.48;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2007.09.19.12.51.05;	author mpf;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.6;

1.6
date	2003.08.01.06.05.34;	author cedric;	state Exp;
branches;
next	1.5;

1.5
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.29.00.53.41;	author cedric;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.18.20.27.01;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.30.13.14.40;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.25.20.46.45;	author cedric;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Explicitely specify address family when translation pool may contain
addresses of different address families.
@
text
@@@0 match out on lo0 inet from <regress.1:2> to <regress.2:*> nat-to 127.0.0.1
  [ Skip steps: d=2 f=2 p=end da=4 sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@1 match out on ! lo0 inet from ! <regress.1:2> to <regress.2:*> nat-to 127.0.0.1
  [ Skip steps: p=end da=4 sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@2 match in on lo0 inet6 from <regress.1:2> to <regress.2:*> rdr-to ::1
  [ Skip steps: d=6 f=4 p=end da=4 sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@3 match in on ! lo0 inet6 from ! <regress.1:2> to <regress.2:*> rdr-to ::1
  [ Skip steps: d=6 p=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@4 match in from <regress.1:2> to any
  [ Skip steps: i=end d=6 r=end f=end p=end da=6 sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@5 match in from ! <regress.2:*> to any
  [ Skip steps: i=end r=end f=end p=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@6 match out from any to ! <regress.1:2>
  [ Skip steps: i=end d=8 r=end f=end p=end sa=8 sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@7 match out from any to <regress.2:*>
  [ Skip steps: i=end r=end f=end p=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@8 pass in from <regress:6> to any flags S/SA
  [ Skip steps: i=end r=end f=end p=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@9 pass out from any to <regress:6> flags S/SA
  [ Skip steps: i=end r=end f=end p=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@10 pass in from <regress.1:2> to any flags S/SA
  [ Skip steps: i=end d=12 r=end f=end p=end da=12 sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@11 pass in from <regress.2:*> to any flags S/SA
  [ Skip steps: i=end r=end f=end p=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@12 pass out from any to ! <regress.1:2> flags S/SA
  [ Skip steps: i=end d=end r=end f=end p=end sa=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@13 pass out from any to ! <regress.2:*> flags S/SA
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@


1.12
log
@fixup regression tests wrt skip steps (fixed in pfctl.c rev1.305);
ok henning mcbride (a while back)
@
text
@d1 2
a2 2
@@0 match out on lo0 inet6 from <regress.1:2> to <regress.2:*> nat-to ::1
  [ Skip steps: d=2 p=end da=4 sp=end dp=end ]
@


1.11
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@d2 1
a2 1
  [ Skip steps: r=2 p=end da=4 sp=end dp=end ]
d10 1
a10 1
  [ Skip steps: r=6 f=4 p=end da=4 sp=end dp=end ]
d14 1
a14 1
  [ Skip steps: r=6 p=end sp=end dp=end ]
d18 1
a18 1
  [ Skip steps: i=end r=6 d=end f=end p=end da=6 sp=end dp=end ]
d22 1
a22 1
  [ Skip steps: i=end d=end f=end p=end sp=end dp=end ]
d26 1
a26 1
  [ Skip steps: i=end r=8 d=end f=end p=end sa=8 sp=end dp=end ]
d30 1
a30 1
  [ Skip steps: i=end d=end f=end p=end sp=end dp=end ]
d34 1
a34 1
  [ Skip steps: i=end d=end f=end p=end sp=end dp=end ]
d38 1
a38 1
  [ Skip steps: i=end d=end f=end p=end sp=end dp=end ]
d42 1
a42 1
  [ Skip steps: i=end r=12 d=end f=end p=end da=12 sp=end dp=end ]
d46 1
a46 1
  [ Skip steps: i=end d=end f=end p=end sp=end dp=end ]
d50 1
a50 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end sp=end dp=end ]
d54 1
a54 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end dp=end ]
@


1.10
log
@more updates for new pf with source-hash manually added to
loaded output as it doesn't currently appear as it should.

ok henning@@
@
text
@d1 2
a2 2
@@0 match out on lo0 inet from <regress.1:2> to <regress.2:*> nat-to 127.0.0.1
  [ Skip steps: d=2 f=4 p=end sp=end da=4 dp=end ]
d6 1
a6 1
  [ Skip steps: f=4 p=end sp=end da=4 dp=end ]
d9 2
a10 2
@@2 match in on lo0 inet from <regress.1:2> to <regress.2:*> rdr-to 127.0.0.1
  [ Skip steps: d=6 f=4 p=end sp=end da=4 dp=end ]
d13 2
a14 2
@@3 match in on ! lo0 inet from ! <regress.1:2> to <regress.2:*> rdr-to 127.0.0.1
  [ Skip steps: d=6 p=end sp=end dp=end ]
d18 1
a18 1
  [ Skip steps: i=end d=6 f=end p=end sp=end da=6 dp=end ]
d22 1
a22 1
  [ Skip steps: i=end f=end p=end sp=end dp=end ]
d26 1
a26 1
  [ Skip steps: i=end d=8 f=end p=end sa=8 sp=end dp=end ]
d30 1
a30 1
  [ Skip steps: i=end f=end p=end sp=end dp=end ]
d33 2
a34 2
@@8 pass in from <regress:6> to any flags S/SA keep state
  [ Skip steps: i=end f=end p=end sp=end dp=end ]
d37 2
a38 2
@@9 pass out from any to <regress:6> flags S/SA keep state
  [ Skip steps: i=end f=end p=end sp=end dp=end ]
d41 2
a42 2
@@10 pass in from <regress.1:2> to any flags S/SA keep state
  [ Skip steps: i=end d=12 f=end p=end sp=end da=12 dp=end ]
d45 2
a46 2
@@11 pass in from <regress.2:*> to any flags S/SA keep state
  [ Skip steps: i=end f=end p=end sp=end dp=end ]
d49 2
a50 2
@@12 pass out from any to ! <regress.1:2> flags S/SA keep state
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end dp=end ]
d53 2
a54 2
@@13 pass out from any to ! <regress.2:*> flags S/SA keep state
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
@


1.9
log
@scrub gone
@
text
@d1 2
a2 2
@@0 nat on lo0 inet from <regress.1:2> to <regress.2:*> -> 127.0.0.1
  [ Skip steps: d=end f=end p=end sp=end da=end dp=end ]
d5 2
a6 2
@@1 nat on ! lo0 inet from ! <regress.1:2> to <regress.2:*> -> 127.0.0.1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d9 2
a10 2
@@0 rdr on lo0 inet from <regress.1:2> to <regress.2:*> -> 127.0.0.1
  [ Skip steps: d=end f=end p=end sp=end da=end dp=end ]
d13 2
a14 2
@@1 rdr on ! lo0 inet from ! <regress.1:2> to <regress.2:*> -> 127.0.0.1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d17 2
a18 2
@@0 match in from <regress.1:2> to any
  [ Skip steps: i=end d=2 f=end p=end sp=end da=2 dp=end ]
d21 1
a21 1
@@1 match in from ! <regress.2:*> to any
d25 2
a26 2
@@2 match out from any to ! <regress.1:2>
  [ Skip steps: i=end d=4 f=end p=end sa=4 sp=end dp=end ]
d29 1
a29 1
@@3 match out from any to <regress.2:*>
d33 1
a33 1
@@4 pass in from <regress:6> to any flags S/SA keep state
d37 1
a37 1
@@5 pass out from any to <regress:6> flags S/SA keep state
d41 2
a42 2
@@6 pass in from <regress.1:2> to any flags S/SA keep state
  [ Skip steps: i=end d=8 f=end p=end sp=end da=8 dp=end ]
d45 1
a45 1
@@7 pass in from <regress.2:*> to any flags S/SA keep state
d49 1
a49 1
@@8 pass out from any to ! <regress.1:2> flags S/SA keep state
d53 1
a53 1
@@9 pass out from any to ! <regress.2:*> flags S/SA keep state
@


1.8
log
@Remove "localhost" from the table test, since the result is dependent
on the resolver.  In some enviroments you'll get an AAAA for it,
in others you won't. Testing the resolver isn't really the intention
of this test anyway.
OK henning
@
text
@d17 1
a17 1
@@0 scrub in from <regress.1:2> to any fragment reassemble
d21 1
a21 1
@@1 scrub in from ! <regress.2:*> to any fragment reassemble
d25 2
a26 2
@@2 scrub out from any to ! <regress.1:2> fragment reassemble
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end dp=end ]
d29 2
a30 2
@@3 scrub out from any to <regress.2:*> fragment reassemble
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d33 1
a33 1
@@0 pass in from <regress:6> to any flags S/SA keep state
d37 1
a37 1
@@1 pass out from any to <regress:6> flags S/SA keep state
d41 2
a42 2
@@2 pass in from <regress.1:2> to any flags S/SA keep state
  [ Skip steps: i=end d=4 f=end p=end sp=end da=4 dp=end ]
d45 1
a45 1
@@3 pass in from <regress.2:*> to any flags S/SA keep state
d49 1
a49 1
@@4 pass out from any to ! <regress.1:2> flags S/SA keep state
d53 1
a53 1
@@5 pass out from any to ! <regress.2:*> flags S/SA keep state
@


1.7
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d1 1
a1 1
@@0 nat on lo0 inet from <regress.1:3> to <regress.2:*> -> 127.0.0.1
d5 1
a5 1
@@1 nat on ! lo0 inet from ! <regress.1:3> to <regress.2:*> -> 127.0.0.1
d9 1
a9 1
@@0 rdr on lo0 inet from <regress.1:3> to <regress.2:*> -> 127.0.0.1
d13 1
a13 1
@@1 rdr on ! lo0 inet from ! <regress.1:3> to <regress.2:*> -> 127.0.0.1
d17 1
a17 1
@@0 scrub in from <regress.1:3> to any fragment reassemble
d25 1
a25 1
@@2 scrub out from any to ! <regress.1:3> fragment reassemble
d41 1
a41 1
@@2 pass in from <regress.1:3> to any flags S/SA keep state
d49 1
a49 1
@@4 pass out from any to ! <regress.1:3> flags S/SA keep state
@


1.6
log
@Big Step was too big - reintroduce skip step optimizations.
@
text
@d33 1
a33 1
@@0 pass in from <regress:6> to any
d37 1
a37 1
@@1 pass out from any to <regress:6>
d41 1
a41 1
@@2 pass in from <regress.1:3> to any
d45 1
a45 1
@@3 pass in from <regress.2:*> to any
d49 1
a49 1
@@4 pass out from any to ! <regress.1:3>
d53 1
a53 1
@@5 pass out from any to ! <regress.2:*>
@


1.5
log
@Big Sync
@
text
@d2 1
a2 1
  [ Skip steps: d=end f=end p=end sp=end dp=end ]
d10 1
a10 1
  [ Skip steps: d=end f=end p=end sp=end dp=end ]
@


1.4
log
@Sync with skip step optimisation.
@
text
@d2 1
a2 1
  [ Skip steps: d=end f=end p=end sp=end da=end dp=end ]
d10 1
a10 1
  [ Skip steps: d=end f=end p=end sp=end da=end dp=end ]
d17 1
a17 1
@@0 scrub in from <regress.1:3> to any fragment reassemble 
d21 1
a21 1
@@1 scrub in from ! <regress.2:*> to any fragment reassemble 
d25 1
a25 1
@@2 scrub out from any to ! <regress.1:3> fragment reassemble 
d29 1
a29 1
@@3 scrub out from any to <regress.2:*> fragment reassemble 
d33 1
a33 1
@@0 pass in from <regress:6> to any 
d37 1
a37 1
@@1 pass out from any to <regress:6> 
d41 1
a41 1
@@2 pass in from <regress.1:3> to any 
d45 1
a45 1
@@3 pass in from <regress.2:*> to any 
d49 1
a49 1
@@4 pass out from any to ! <regress.1:3> 
d53 1
a53 1
@@5 pass out from any to ! <regress.2:*> 
@


1.3
log
@regen; output formatting change
@
text
@d2 1
a2 1
  [ Skip steps: d=end f=end p=end sp=end dp=end ]
d10 1
a10 1
  [ Skip steps: d=end f=end p=end sp=end dp=end ]
@


1.2
log
@we can enabled pfload48 now that tabledefs can live inside anchors
@
text
@d2 3
a4 4
[ Skip steps: d=end f=end p=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d6 3
a8 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d10 3
a12 4
[ Skip steps: d=end f=end p=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d14 3
a16 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d18 3
a20 4
[ Skip steps: i=end d=2 f=end p=end sp=end da=2 dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d22 3
a24 4
[ Skip steps: i=end f=end p=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d26 3
a28 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d30 3
a32 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d34 3
a36 4
[ Skip steps: i=end f=end p=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d38 3
a40 4
[ Skip steps: i=end f=end p=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d42 3
a44 4
[ Skip steps: i=end d=4 f=end p=end sp=end da=4 dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d46 3
a48 4
[ Skip steps: i=end f=end p=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d50 3
a52 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d54 3
a56 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@


1.1
log
@Regression tests for table statements and rules containing tables.
ok henning@@
@
text
@d1 20
d23 1
d28 1
d33 1
d38 1
d43 1
d48 1
d53 1
d58 1
d63 1
d68 1
@

