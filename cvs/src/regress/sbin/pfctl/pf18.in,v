head	1.8;
access;
symbols
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.32
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.28
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.18
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.26
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.24
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.22
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.20
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.16
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.14
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.12
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.10
	OPENBSD_5_0:1.8.0.8
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.6.0.26
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.22
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.20
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.18
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.16
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.14
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4;
locks; strict;
comment	@# @;


1.8
date	2009.09.23.14.08.33;	author jsg;	state Exp;
branches;
next	1.7;

1.7
date	2009.09.02.17.25.46;	author jsg;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2003.01.18.05.16.43;	author mcbride;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.13.18.37.09;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.09.10.41.14;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.11.05.11.27;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.11.02.16.30;	author kjell;	state Exp;
branches;
next	;


desc
@@


1.8
log
@More tweaks to try to catchup to recent pf changes.
pfopt5 part from sthen@@

ok henning@@ sthen@@
@
text
@# test nat

TEST_LIST1 = "{ 192.168.1.5, 192.168.1.6, 192.168.1.7 }"
TEST_LIST2 = "{ 172.6.1.1, 172.14.1.2/32, 172.16.2.0/24 }"

match out on lo0 from 192.168.1.1 to any nat-to 10.0.0.1
match out on lo0 proto tcp from 192.168.1.2 to any nat-to 10.0.0.2
match out on lo0 proto udp from 192.168.1.3 to any nat-to 10.0.0.3
match out on lo0 proto icmp from 192.168.1.4 to any nat-to 10.0.0.4

match out on lo0 inet from $TEST_LIST1 to $TEST_LIST2 nat-to lo0

match out on lo0 inet from 192.168.0.1/24 to any nat-to (lo0)

match out on lo0 from 192.168.1.8 to ! 172.17.0.0/16 nat-to 10.0.0.8

match out on ! lo0 proto { udp, tcp } from any to any nat-to 10.0.0.8 static-port

match out on { lo0, tun1000000 } from any to any nat-to 10.0.0.8
@


1.7
log
@convert a bunch of rdr/nat rules to the new syntax
Things still need to be changed for route-to/binat/command line
options among other things.

ok henning
@
text
@a5 1
no nat on lo0 from 192.168.1.1 to 10.1.2.3
@


1.6
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d7 4
a10 4
nat on lo0 from 192.168.1.1 to any -> 10.0.0.1
nat on lo0 proto tcp from 192.168.1.2 to any -> 10.0.0.2
nat on lo0 proto udp from 192.168.1.3 to any -> 10.0.0.3
nat on lo0 proto icmp from 192.168.1.4 to any -> 10.0.0.4
d12 1
a12 1
nat on lo0 inet from $TEST_LIST1 to $TEST_LIST2 -> lo0
d14 1
a14 1
nat on lo0 inet from 192.168.0.1/24 to any -> (lo0)
d16 1
a16 1
nat on lo0 from 192.168.1.8 to ! 172.17.0.0/16 -> 10.0.0.8
d18 1
a18 1
nat on ! lo0 proto { udp, tcp } from any to any -> 10.0.0.8 static-port
d20 1
a20 1
nat on { lo0, tun1000000 } from any to any -> 10.0.0.8
@


1.5
log
@Add "static-port" to some of the nat rule tests.
@
text
@d20 1
a20 1
nat on { lo0, tun0 } from any to any -> 10.0.0.8
@


1.4
log
@regression test for interface and proto list expansion in nat rules
@
text
@d18 1
a18 1
nat on ! lo0 proto { udp, tcp } from any to any -> 10.0.0.8 
@


1.3
log
@the new interface-to-ip lookup fuctions requires the address family to be
specified in this cases.

ok pb@@, dhartmei@@, kjell@@
@
text
@d17 4
@


1.2
log
@regression test for NATing to dynamic addresses ( nat ... -> (if) )
ok dhartmei@@
@
text
@d12 1
a12 1
nat on lo0 from $TEST_LIST1 to $TEST_LIST2 -> lo0
@


1.1
log
@Use merged config file format. The separate NAT loop can go away,
since all files are now loaded the same way. Add regress tests for
invalid ordering of scrub, nat, filter rules
@
text
@d14 2
@

