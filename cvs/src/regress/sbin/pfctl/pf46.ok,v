head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.24
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.22
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.12
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.20
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.18
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.16
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.14
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.10
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.8
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.6
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.4
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.4.0.14
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.10
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.8
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.6
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.4
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.2
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.8
date	2011.07.27.10.40.05;	author mcbride;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.6;

1.6
date	2010.01.13.01.08.38;	author mcbride;	state Exp;
branches;
next	1.5;

1.5
date	2009.09.23.14.08.33;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.03.15.44.52;	author dhartmei;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.06.11.36.04;	author mcbride;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update regress tests for weighted round-robin (and recent pool bugfix)
@
text
@table <__automatic_0> const { 127.0.0.1@@pflog0 127.0.0.2@@pflog0 }
table <__automatic_1> const { 127.0.0.1@@pflog0 127.0.0.2@@pflog0 }
pass in on lo0 inet all flags S/SA route-to <__automatic_0> round-robin
pass out on lo0 inet all flags S/SA route-to <__automatic_1> round-robin
pass in on lo0 inet all flags S/SA route-to 127.0.0.0/24@@pflog0 bitmask
pass out on lo0 inet all flags S/SA dup-to 127.0.0.0/24@@pflog0 random
pass in on lo0 inet all flags S/SA reply-to 127.0.0.0/28@@pflog0
pass out on lo0 inet all flags S/SA route-to 127.0.0.0/24@@pflog0 source-hash 0x4da8e393fd22f577426cfdf7fe52d3b0
pass in on lo0 inet all flags S/SA dup-to 127.0.0.0/24@@pflog0 round-robin
@


1.7
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@d6 1
a6 1
pass out on lo0 inet all flags S/SA dup-to 127.0.0.0/24@@pflog0
d9 1
a9 1
pass in on lo0 inet all flags S/SA dup-to 127.0.0.0/24@@pflog0
@


1.6
log
@Update regress output files to -current behaviour
- non-pool translation/routing specification
- leftover bits from nat-to/rdr-to/binat-to
@
text
@d3 7
a9 7
pass in on lo0 inet all flags S/SA keep state route-to <__automatic_0> round-robin
pass out on lo0 inet all flags S/SA keep state route-to <__automatic_1> round-robin
pass in on lo0 inet all flags S/SA keep state route-to 127.0.0.0/24@@pflog0
pass out on lo0 inet all flags S/SA keep state dup-to 127.0.0.0/24@@pflog0
pass in on lo0 inet all flags S/SA keep state reply-to 127.0.0.0/28@@pflog0
pass out on lo0 inet all flags S/SA keep state route-to 127.0.0.0/24@@pflog0
pass in on lo0 inet all flags S/SA keep state dup-to 127.0.0.0/24@@pflog0
@


1.5
log
@More tweaks to try to catchup to recent pf changes.
pfopt5 part from sthen@@

ok henning@@ sthen@@
@
text
@d1 9
a9 8
pass in on lo0 inet from any to any route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } round-robin
pass out on lo0 inet from any to any route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } round-robin
pass in on lo0 inet from any to any route-to (pflog0 127.0.0.0/24) bitmask
pass out on lo0 inet from any to any dup-to (pflog0 127.0.0.0/24) random
pass in on lo0 inet6 from any to any reply-to { pflog0, pflog0 } round-robin
pass in on lo0 inet from any to any reply-to (pflog0 127.0.0.0/28) source-hash 0x0123456789abcdef0123456789abcdef
pass out on lo0 inet from any to any route-to (pflog0 127.0.0.0/24) source-hash 0x4da8e393fd22f577426cfdf7fe52d3b0
pass in on lo0 inet from any to any dup-to (pflog0 127.0.0.0/24) round-robin
@


1.4
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d1 8
a8 8
pass in on lo0 route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } round-robin inet all flags S/SA keep state
pass out on lo0 route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } round-robin inet all flags S/SA keep state
pass in on lo0 route-to (pflog0 127.0.0.0/24) bitmask inet all flags S/SA keep state
pass out on lo0 dup-to (pflog0 127.0.0.0/24) random inet all flags S/SA keep state
pass in on lo0 reply-to { pflog0, pflog0 } round-robin inet6 all flags S/SA keep state
pass in on lo0 reply-to (pflog0 127.0.0.0/28) source-hash 0x0123456789abcdef0123456789abcdef inet all flags S/SA keep state
pass out on lo0 route-to (pflog0 127.0.0.0/24) source-hash 0x4da8e393fd22f577426cfdf7fe52d3b0 inet all flags S/SA keep state
pass in on lo0 dup-to (pflog0 127.0.0.0/24) round-robin inet all flags S/SA keep state
@


1.3
log
@Big Sync
@
text
@d1 8
a8 8
pass in on lo0 route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } round-robin inet all
pass out on lo0 route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } round-robin inet all
pass in on lo0 route-to (pflog0 127.0.0.0/24) bitmask inet all
pass out on lo0 dup-to (pflog0 127.0.0.0/24) random inet all
pass in on lo0 reply-to { pflog0, pflog0 } round-robin inet6 all
pass in on lo0 reply-to (pflog0 127.0.0.0/28) source-hash 0x0123456789abcdef0123456789abcdef inet all
pass out on lo0 route-to (pflog0 127.0.0.0/24) source-hash 0x4da8e393fd22f577426cfdf7fe52d3b0 inet all
pass in on lo0 dup-to (pflog0 127.0.0.0/24) round-robin inet all
@


1.2
log
@Don't allow loopback interfaces as route/reply/dup-to targets. ok henning@@
@
text
@d1 8
a8 8
pass in on lo0 route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } round-robin inet all 
pass out on lo0 route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } round-robin inet all 
pass in on lo0 route-to (pflog0 127.0.0.0/24) bitmask inet all 
pass out on lo0 dup-to (pflog0 127.0.0.0/24) random inet all 
pass in on lo0 reply-to { pflog0, pflog0 } round-robin inet6 all 
pass in on lo0 reply-to (pflog0 127.0.0.0/28) source-hash 0x0123456789abcdef0123456789abcdef inet all 
pass out on lo0 route-to (pflog0 127.0.0.0/24) source-hash 0x4da8e393fd22f577426cfdf7fe52d3b0 inet all 
pass in on lo0 dup-to (pflog0 127.0.0.0/24) round-robin inet all 
@


1.1
log
@Add tests for address pools with route-to/reply-to/dup-to.
@
text
@d1 8
a8 8
pass in on lo0 route-to { (lo0 127.0.0.1), (lo0 127.0.0.2) } round-robin inet all 
pass out on lo0 route-to { (lo0 127.0.0.1), (lo0 127.0.0.2) } round-robin inet all 
pass in on lo0 route-to (lo0 127.0.0.0/24) bitmask inet all 
pass out on lo0 dup-to (lo0 127.0.0.0/24) random inet all 
pass in on lo0 reply-to { lo0, lo0 } round-robin inet6 all 
pass in on lo0 reply-to (lo0 127.0.0.0/28) source-hash 0x0123456789abcdef0123456789abcdef inet all 
pass out on lo0 route-to (lo0 127.0.0.0/24) source-hash 0x4da8e393fd22f577426cfdf7fe52d3b0 inet all 
pass in on lo0 dup-to (lo0 127.0.0.0/24) round-robin inet all 
@

