head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.34
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.32
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.28
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.18
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.26
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.24
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.22
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.4
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.10.0.10
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.8
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.6
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.4
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.8.0.12
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.10
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.8
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.6
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4;
locks; strict;
comment	@# @;


1.12
date	2009.09.23.14.08.33;	author jsg;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.06.12.41.47;	author henning;	state Exp;
branches;
next	1.10;

1.10
date	2006.10.17.08.15.32;	author mcbride;	state Exp;
branches;
next	1.9;

1.9
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.12.12.52.48;	author mcbride;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.05.14.13.37;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.24.11.29.04;	author dhartmei;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.13.04.27.02;	author kjell;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.11.18.07.06;	author frantzen;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.11.02.16.30;	author kjell;	state Exp;
branches;
next	;


desc
@@


1.12
log
@More tweaks to try to catchup to recent pf changes.
pfopt5 part from sthen@@

ok henning@@ sthen@@
@
text
@match out on lo0 inet from 192.168.1.1 to any nat-to 10.0.0.1
match in on lo0 inet proto tcp from any to 1.2.3.4 port = 2222 rdr-to 10.0.0.10 port 22
match out on lo0 inet from 192.168.1.1 to any nat-to 10.0.0.1 static-port
match in on lo0 inet from any to 10.0.0.1 rdr-to 192.168.1.1
pass in on lo1000000 all no state
@


1.11
log
@scrub gone
@
text
@d1 4
a4 3
nat on lo0 inet from 192.168.1.1 to any -> 10.0.0.1
rdr on lo0 inet proto tcp from any to 1.2.3.4 port = 2222 -> 10.0.0.10 port 22
binat on lo0 inet from 192.168.1.1 to any -> 10.0.0.1
@


1.10
log
@'flags S/SA' not implicit if the rule is stateless.
@
text
@a0 1
scrub in on lo0 all fragment reassemble
@


1.9
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d5 1
a5 1
pass in on lo1000000 all flags S/SA no state
@


1.8
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d5 1
a5 1
pass in on lo1000000 all
@


1.7
log
@Big Sync
@
text
@d5 1
a5 1
pass in on lo1 all
@


1.6
log
@Match changes in pfctl which make rdr behave more like the other rule types.

ok dhartmei@@
@
text
@d1 1
a1 1
scrub in on lo0 all fragment reassemble 
d5 1
a5 1
pass in on lo1 all 
@


1.5
log
@no more rule numbers in output
@
text
@d3 1
a3 1
rdr on lo0 inet proto tcp from any to 1.2.3.4 port 2222 -> 10.0.0.10 port 22
@


1.4
log
@scrub on <if> works now, update regress tests.
@
text
@d1 1
a1 1
@@0 scrub in on lo0 all fragment reassemble 
d5 1
a5 1
@@1 pass in on lo1 all 
@


1.3
log
@Scrub rules are now numbered properly. my bad. ok frantzen@@
@
text
@d1 1
a1 1
@@0 scrub in all fragment reassemble 
@


1.2
log
@sync w/ default implicit "fragment reassemble" scrub modifier
@
text
@d5 1
a5 1
@@0 pass in on lo1 all 
@


1.1
log
@Use merged config file format. The separate NAT loop can go away,
since all files are now loaded the same way. Add regress tests for
invalid ordering of scrub, nat, filter rules
@
text
@d1 1
a1 1
@@0 scrub in all 
@

