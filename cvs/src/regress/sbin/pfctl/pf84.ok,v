head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.22
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.20
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.10
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.18
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.16
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.14
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.12
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.8
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.6
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.3.0.14
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.10
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.8
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.6
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.4
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2011.11.27.10.33.37;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2010.01.13.01.08.38;	author mcbride;	state Exp;
branches;
next	1.4;

1.4
date	2009.09.23.14.08.33;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.24.20.47.16;	author mcbride;	state Exp;
branches;
next	1.1;

1.1
date	2003.12.16.05.02.46;	author mcbride;	state Exp;
branches;
next	;


desc
@@


1.6
log
@adjust for port numbers instead of names by default
From: Lawrence Teo <lteo at devio at us>
@
text
@table <__automatic_0> const { 10.0.1.1 10.0.1.2 }
table <__automatic_1> const { 10.0.0.1 10.0.0.2 }
match out on tun1000000 inet from 10.0.0.0/24 to any nat-to <__automatic_0> round-robin sticky-address
match in on tun1000000 inet from any to 10.0.1.1 rdr-to 10.0.0.0/24 random sticky-address
match in on tun1000000 inet from any to 10.0.1.2 rdr-to <__automatic_1> round-robin sticky-address
pass in proto tcp from any to any port = 22 flags S/SA keep state (source-track global)
pass in proto tcp from any to any port = 25 flags S/SA keep state (source-track global)
pass in proto tcp from any to any port = 80 flags S/SA keep state (source-track rule, max-src-states 3, max-src-nodes 1000)
pass in proto tcp from any to any port = 123 flags S/SA keep state (source-track rule, max-src-nodes 1000)
pass in proto tcp from any to any port = 321 flags S/SA keep state (source-track global, max-src-states 3)
@


1.5
log
@Update regress output files to -current behaviour
- non-pool translation/routing specification
- leftover bits from nat-to/rdr-to/binat-to
@
text
@d6 4
a9 4
pass in proto tcp from any to any port = ssh flags S/SA keep state (source-track global)
pass in proto tcp from any to any port = smtp flags S/SA keep state (source-track global)
pass in proto tcp from any to any port = www flags S/SA keep state (source-track rule, max-src-states 3, max-src-nodes 1000)
pass in proto tcp from any to any port = ntp flags S/SA keep state (source-track rule, max-src-nodes 1000)
@


1.4
log
@More tweaks to try to catchup to recent pf changes.
pfopt5 part from sthen@@

ok henning@@ sthen@@
@
text
@d1 3
a3 1
match out on tun1000000 inet from 10.0.0.0/24 to any nat-to { 10.0.1.1, 10.0.1.2 } round-robin sticky-address
d5 1
a5 1
match in on tun1000000 inet from any to 10.0.1.2 rdr-to { 10.0.0.1, 10.0.0.2 } round-robin sticky-address
@


1.3
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d1 3
a3 3
nat on tun1000000 inet from 10.0.0.0/24 to any -> { 10.0.1.1, 10.0.1.2 } round-robin sticky-address
rdr on tun1000000 inet from any to 10.0.1.1 -> 10.0.0.0/24 random sticky-address
rdr on tun1000000 inet from any to 10.0.1.2 -> { 10.0.0.1, 10.0.0.2 } round-robin sticky-address
@


1.2
log
@Handle 'source-track rule' requirement for 'max-src-nodes'.
@
text
@d4 5
a8 5
pass in proto tcp from any to any port = ssh keep state (source-track global)
pass in proto tcp from any to any port = smtp keep state (source-track global)
pass in proto tcp from any to any port = www keep state (source-track rule, max-src-states 3, max-src-nodes 1000)
pass in proto tcp from any to any port = ntp keep state (source-track rule, max-src-nodes 1000)
pass in proto tcp from any to any port = 321 keep state (source-track global, max-src-states 3)
@


1.1
log
@Test source-tracking syntax.
@
text
@d7 1
a7 1
pass in proto tcp from any to any port = ntp keep state (source-track global, max-src-nodes 1000)
@

