head	1.13;
access;
symbols
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.8
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.6
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.4
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.2
	OPENBSD_5_0:1.10.0.16
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.14
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.12
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.8
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.10
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.6
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.4
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.2
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.9.0.16
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.14
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.12
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.13
date	2014.04.18.10.48.23;	author henning;	state dead;
branches;
next	1.12;

1.12
date	2013.10.12.12.18.53;	author henning;	state Exp;
branches;
next	1.11;

1.11
date	2011.11.27.10.33.37;	author henning;	state Exp;
branches;
next	1.10;

1.10
date	2007.09.19.12.52.48;	author mpf;	state Exp;
branches;
next	1.9;

1.9
date	2004.03.07.20.16.01;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2004.02.19.07.45.43;	author kjc;	state Exp;
branches;
next	1.7;

1.7
date	2004.01.14.08.46.20;	author kjc;	state Exp;
branches;
next	1.6;

1.6
date	2003.08.20.15.50.24;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.18.20.32.59;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.18.20.27.41;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.12.19.17.55;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.03.14.42.24;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.11.15.07.19;	author henning;	state Exp;
branches;
next	;


desc
@@


1.13
log
@stop testing altq stuffz
how many tests I wrote back then... (of which the majority is pointless)
@
text
@oldqueue praise on lo0 priq( default ) 
  [ qid=1 ifname=lo0 ifbandwidth=10Mb ]
oldqueue wim on lo0 priority 15 
  [ qid=2 ifname=lo0 ifbandwidth=10Mb ]
oldqueue hi on lo0 priority 7 
  [ qid=3 ifname=lo0 ifbandwidth=10Mb ]
@@0 pass in on lo0 proto tcp from any to any port = 22 flags S/SA keep state queue(hi, wim)
  [ Skip steps: d=end f=end p=end sa=end sp=end da=end dp=3 ]
  [ queue: qname=hi qid=3 pqname=wim pqid=2 ]
@@1 pass in proto tcp from any to any port = 22 flags S/SA keep state queue(hi, wim)
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=3 ]
  [ queue: qname=hi qid=3 pqname=wim pqid=2 ]
@@2 pass in proto tcp from any to any port = 22 flags S/SA keep state queue wim
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end ]
  [ queue: qname=wim qid=2 pqname= pqid=2 ]
@@3 pass in proto tcp from any to any port = 25 flags S/SA keep state queue praise
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
  [ queue: qname=praise qid=1 pqname= pqid=1 ]
@


1.12
log
@adopt existing altq regress to queueing changes; queuespecs for altq use
"oldqueue" as keyword for the transition phase
@
text
@@


1.11
log
@adjust for port numbers instead of names by default
From: Lawrence Teo <lteo at devio at us>
@
text
@d1 1
a1 1
queue praise on lo0 priq( default ) 
d3 1
a3 1
queue wim on lo0 priority 15 
d5 1
a5 1
queue hi on lo0 priority 7 
@


1.10
log
@Adopt 14 altq tests to the change of the queue output format.
OK henning
@
text
@d7 1
a7 1
@@0 pass in on lo0 proto tcp from any to any port = ssh flags S/SA keep state queue(hi, wim)
d10 1
a10 1
@@1 pass in proto tcp from any to any port = ssh flags S/SA keep state queue(hi, wim)
d13 1
a13 1
@@2 pass in proto tcp from any to any port = ssh flags S/SA keep state queue wim
d16 1
a16 1
@@3 pass in proto tcp from any to any port = smtp flags S/SA keep state queue praise
@


1.9
log
@we change dthe queue ID allocator so that all IDs moved by 1 now, and
ppp0/1 are no more by default
@
text
@d1 1
a1 1
queue praise priq( default ) 
d3 1
a3 1
queue wim priority 15 
d5 1
a5 1
queue hi priority 7 
d7 1
a7 1
@@0 pass in on lo0 proto tcp from any to any port = ssh keep state queue(hi, wim)
d10 1
a10 1
@@1 pass in proto tcp from any to any port = ssh keep state queue(hi, wim)
d13 1
a13 1
@@2 pass in proto tcp from any to any port = ssh keep state queue wim
d16 1
a16 1
@@3 pass in proto tcp from any to any port = smtp keep state queue praise
@


1.8
log
@regen; qid change.
@
text
@d2 2
d5 1
a5 1
queue wim priority 15 
a6 2
queue hi priority 7 
  [ qid=4 ifname=lo0 ifbandwidth=10Mb ]
d9 1
a9 1
  [ queue: qname=hi qid=4 pqname=wim pqid=3 ]
d12 1
a12 1
  [ queue: qname=hi qid=4 pqname=wim pqid=3 ]
d15 1
a15 1
  [ queue: qname=wim qid=3 pqname= pqid=3 ]
d18 1
a18 1
  [ queue: qname=praise qid=2 pqname= pqid=2 ]
@


1.7
log
@regen; qid change.
@
text
@d2 1
a2 1
  [ qid=1 ifname=lo0 ifbandwidth=10Mb ]
d4 1
a4 1
  [ qid=2 ifname=lo0 ifbandwidth=10Mb ]
d6 1
a6 1
  [ qid=3 ifname=lo0 ifbandwidth=10Mb ]
d9 1
a9 1
  [ queue: qname=hi qid=3 pqname=wim pqid=2 ]
d12 1
a12 1
  [ queue: qname=hi qid=3 pqname=wim pqid=2 ]
d15 1
a15 1
  [ queue: qname=wim qid=2 pqname= pqid=2 ]
d18 1
a18 1
  [ queue: qname=praise qid=1 pqname= pqid=1 ]
@


1.6
log
@sync
@
text
@d2 2
d5 1
a5 1
queue wim priority 15 
a6 2
queue hi priority 7 
  [ qid=4 ifname=lo0 ifbandwidth=10Mb ]
d9 1
a9 1
  [ queue: qname=hi qid=4 pqname=wim pqid=3 ]
d12 1
a12 1
  [ queue: qname=hi qid=4 pqname=wim pqid=3 ]
d15 1
a15 1
  [ queue: qname=wim qid=3 pqname= pqid=3 ]
d18 1
a18 1
  [ queue: qname=praise qid=2 pqname= pqid=2 ]
@


1.5
log
@regen
@
text
@d7 1
a7 1
@@0 pass in on lo0 proto tcp from any to any port = ssh keep state queue(hi, wim) 
d10 1
a10 1
@@1 pass in proto tcp from any to any port = ssh keep state queue(hi, wim) 
d13 1
a13 1
@@2 pass in proto tcp from any to any port = ssh keep state queue wim 
d16 1
a16 1
@@3 pass in proto tcp from any to any port = smtp keep state queue praise 
@


1.4
log
@regen these as well
@
text
@d2 1
a2 1
[ qid=2 ifname=lo0 ifbandwidth=10Mb ]
d4 1
a4 1
[ qid=3 ifname=lo0 ifbandwidth=10Mb ]
d6 1
a6 1
[ qid=4 ifname=lo0 ifbandwidth=10Mb ]
@


1.3
log
@regen; queue ID allocation starts at 2 instead of 1 now
@
text
@d8 2
a9 2
[ Skip steps: d=end f=end p=end sa=end sp=end da=end dp=3 ]
[ queue: qname=hi qid=4 pqname=wim pqid=3 ]
d11 2
a12 2
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=3 ]
[ queue: qname=hi qid=4 pqname=wim pqid=3 ]
d14 2
a15 2
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end ]
[ queue: qname=wim qid=3 pqname= pqid=3 ]
d17 2
a18 2
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname=praise qid=2 pqname= pqid=2 ]
@


1.2
log
@queue ID assignment algorith changed for PRIQ
@
text
@d2 1
a2 1
[ qid=1 ifname=lo0 ifbandwidth=10Mb ]
d4 1
a4 1
[ qid=2 ifname=lo0 ifbandwidth=10Mb ]
d6 1
a6 1
[ qid=3 ifname=lo0 ifbandwidth=10Mb ]
d9 1
a9 1
[ queue: qname=hi qid=3 pqname=wim pqid=2 ]
d12 1
a12 1
[ queue: qname=hi qid=3 pqname=wim pqid=2 ]
d15 1
a15 1
[ queue: qname=wim qid=2 pqname= pqid=2 ]
d18 1
a18 1
[ queue: qname=praise qid=1 pqname= pqid=1 ]
@


1.1
log
@test rules get the qid and pqid assigned correctly
@
text
@d2 2
a4 2
queue wim priority 15 
[ qid=16 ifname=lo0 ifbandwidth=10Mb ]
d6 1
a6 1
[ qid=8 ifname=lo0 ifbandwidth=10Mb ]
d9 1
a9 1
[ queue: qname=hi qid=8 pqname=wim pqid=16 ]
d12 1
a12 1
[ queue: qname=hi qid=8 pqname=wim pqid=16 ]
d15 1
a15 1
[ queue: qname=wim qid=16 pqname= pqid=16 ]
d18 1
a18 1
[ queue: qname=praise qid=2 pqname= pqid=2 ]
@

