head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.44
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.42
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.40
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.38
	OPENBSD_5_0:1.2.0.36
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.34
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.32
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.28
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.30
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.26
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.24
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.22
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.20
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.18
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.16
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.14
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2014.04.18.10.48.23;	author henning;	state dead;
branches;
next	1.3;

1.3
date	2013.10.12.12.18.48;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.12.15.50.30;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.10.12.07.01;	author henning;	state Exp;
branches;
next	;


desc
@@


1.4
log
@stop testing altq stuffz
how many tests I wrote back then... (of which the majority is pointless)
@
text
@# queue doubly defined on one interface
altq on gif3 cbq bandwidth 100Kb queue { eins, zwei }
oldqueue eins cbq (default) { zwei }
oldqueue zwei
@


1.3
log
@adopt existing altq regress to queueing changes; queuespecs for altq use
"oldqueue" as keyword for the transition phase
@
text
@@


1.2
log
@use gif3 instead of lo0 for this test and thus avoid the mtu issue on
loopback interfaces with 64bit archs. as the minimum bandwidth calculation
includes mtu and it is given in the error message... go figure
@
text
@d3 2
a4 2
queue eins cbq (default) { zwei }
queue zwei
@


1.1
log
@queue doubly defined on one interface, fails right now
(is later rejected at load time by the kernel, but pfctl should detect it)
@
text
@d2 1
a2 1
altq on lo0 cbq bandwidth 100Kb queue { eins, zwei }
@

