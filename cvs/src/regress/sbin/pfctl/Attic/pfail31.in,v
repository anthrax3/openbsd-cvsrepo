head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.44
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.42
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.40
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.38
	OPENBSD_5_0:1.5.0.36
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.34
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.32
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.28
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.30
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.26
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.24
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.22
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.20
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.18
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.16
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.14
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.12
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.10
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.8
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.6
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5;
locks; strict;
comment	@# @;


1.7
date	2014.04.18.10.48.23;	author henning;	state dead;
branches;
next	1.6;

1.6
date	2013.10.12.12.18.48;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2003.03.12.15.47.28;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.09.22.23.31;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.09.18.08.53;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.02.12.38.15;	author henning;	state dead;
branches;
next	1.1;

1.1
date	2003.02.28.22.21.58;	author henning;	state Exp;
branches;
next	;


desc
@@


1.7
log
@stop testing altq stuffz
how many tests I wrote back then... (of which the majority is pointless)
@
text
@#test an edge case: LOOP_THROUGH modifies the list

lan_if = lo0
ext_if = nothere0

altq on $ext_if bandwidth 512Kb tbrsize 33224 cbq queue { q_ext_std }
oldqueue q_ext_std bandwidth 100% cbq(default) { q_ext_p2p }
oldqueue   q_ext_p2p bandwidth 25% cbq(red ecn)

altq on $lan_if bandwidth 512Kb tbrsize 33224 cbq queue { q_lan_std }
oldqueue q_lan_std bandwidth 100% cbq(default) { q_lan_p2p }
oldqueue   q_lan_p2p bandwidth 25% cbq(red ecn)
@


1.6
log
@adopt existing altq regress to queueing changes; queuespecs for altq use
"oldqueue" as keyword for the transition phase
@
text
@@


1.5
log
@hardcode tbrsize to make this test on 64bit archs happy, as usual
@
text
@d7 2
a8 2
queue q_ext_std bandwidth 100% cbq(default) { q_ext_p2p }
queue   q_ext_p2p bandwidth 25% cbq(red ecn)
d11 2
a12 2
queue q_lan_std bandwidth 100% cbq(default) { q_lan_p2p }
queue   q_lan_p2p bandwidth 25% cbq(red ecn)
@


1.4
log
@add comments what we are testing - these tests look so simple that they
might get removed later otherwise, so make clear these are edge cases in
internals we are provoking
@
text
@d6 1
a6 1
altq on $ext_if bandwidth 512Kb cbq queue { q_ext_std }
d10 1
a10 1
altq on $lan_if bandwidth 512Kb cbq queue { q_lan_std }
@


1.3
log
@same edge case for LOOP_THROUGH in totally different context
@
text
@d1 2
@


1.2
log
@cbq control keyword is gone
@
text
@d1 2
a2 1
#queue cannot be both default and control
d4 7
a10 2
altq on lo0 bandwidth 1Mb cbq queue yayayaya
queue yayayaya cbq(default control)
@


1.1
log
@a cbq queue cannot be both default and control queue
fails right now
@
text
@@

