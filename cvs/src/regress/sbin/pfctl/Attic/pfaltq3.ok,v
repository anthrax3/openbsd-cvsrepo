head	1.12;
access;
symbols
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.10.0.24
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.22
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.20
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.18
	OPENBSD_5_0:1.10.0.16
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.14
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.12
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.8
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.10
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.6
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.4
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.2
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.9.0.14
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.12
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.10
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.8
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.6
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.12
date	2014.04.18.10.48.23;	author henning;	state dead;
branches;
next	1.11;

1.11
date	2013.10.12.12.18.52;	author henning;	state Exp;
branches;
next	1.10;

1.10
date	2007.09.19.12.52.48;	author mpf;	state Exp;
branches;
next	1.9;

1.9
date	2004.05.03.12.56.02;	author kjc;	state Exp;
branches;
next	1.8;

1.8
date	2004.03.07.20.16.01;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2004.02.19.07.45.43;	author kjc;	state Exp;
branches;
next	1.6;

1.6
date	2004.01.14.08.46.20;	author kjc;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.18.20.32.59;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.12.19.17.55;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.11.14.03.22;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.11.11.14.59;	author henning;	state Exp;
branches;
next	;


desc
@@


1.12
log
@stop testing altq stuffz
how many tests I wrote back then... (of which the majority is pointless)
@
text
@oldqueue root_lo0 on lo0 bandwidth 10Mb priority 0 cbq( wrr root ) {eins, zwei, drei}
  [ qid=1 ifname=lo0 ifbandwidth=10Mb ]
oldqueue  eins on lo0 bandwidth 1Mb cbq( default ) 
  [ qid=3 ifname=lo0 ifbandwidth=10Mb ]
oldqueue  zwei on lo0 bandwidth 6Mb {sub2, sub3}
  [ qid=4 ifname=lo0 ifbandwidth=10Mb ]
oldqueue   sub2 on lo0 bandwidth 3Mb 
  [ qid=5 ifname=lo0 ifbandwidth=10Mb ]
oldqueue   sub3 on lo0 bandwidth 3Mb 
  [ qid=6 ifname=lo0 ifbandwidth=10Mb ]
oldqueue  drei on lo0 bandwidth 3Mb {subseven}
  [ qid=7 ifname=lo0 ifbandwidth=10Mb ]
oldqueue   subseven on lo0 bandwidth 2.70Mb 
  [ qid=10 ifname=lo0 ifbandwidth=10Mb ]
oldqueue root_tun1000000 on tun1000000 bandwidth 128Kb priority 0 cbq( wrr root ) {zwei, vier, fuenf}
  [ qid=2 ifname=tun1000000 ifbandwidth=128Kb ]
oldqueue  zwei on tun1000000 bandwidth 76.80Kb {sub2, sub3}
  [ qid=4 ifname=tun1000000 ifbandwidth=128Kb ]
oldqueue   sub2 on tun1000000 bandwidth 38.40Kb 
  [ qid=5 ifname=tun1000000 ifbandwidth=128Kb ]
oldqueue   sub3 on tun1000000 bandwidth 38.40Kb 
  [ qid=6 ifname=tun1000000 ifbandwidth=128Kb ]
oldqueue  vier on tun1000000 bandwidth 32Kb cbq( default ) 
  [ qid=8 ifname=tun1000000 ifbandwidth=128Kb ]
oldqueue  fuenf on tun1000000 bandwidth 19.20Kb {subseven}
  [ qid=9 ifname=tun1000000 ifbandwidth=128Kb ]
oldqueue   subseven on tun1000000 bandwidth 17.28Kb 
  [ qid=10 ifname=tun1000000 ifbandwidth=128Kb ]
@


1.11
log
@adopt existing altq regress to queueing changes; queuespecs for altq use
"oldqueue" as keyword for the transition phase
@
text
@@


1.10
log
@Adopt 14 altq tests to the change of the queue output format.
OK henning
@
text
@d1 1
a1 1
queue root_lo0 on lo0 bandwidth 10Mb priority 0 cbq( wrr root ) {eins, zwei, drei}
d3 1
a3 1
queue  eins on lo0 bandwidth 1Mb cbq( default ) 
d5 1
a5 1
queue  zwei on lo0 bandwidth 6Mb {sub2, sub3}
d7 1
a7 1
queue   sub2 on lo0 bandwidth 3Mb 
d9 1
a9 1
queue   sub3 on lo0 bandwidth 3Mb 
d11 1
a11 1
queue  drei on lo0 bandwidth 3Mb {subseven}
d13 1
a13 1
queue   subseven on lo0 bandwidth 2.70Mb 
d15 1
a15 1
queue root_tun1000000 on tun1000000 bandwidth 128Kb priority 0 cbq( wrr root ) {zwei, vier, fuenf}
d17 1
a17 1
queue  zwei on tun1000000 bandwidth 76.80Kb {sub2, sub3}
d19 1
a19 1
queue   sub2 on tun1000000 bandwidth 38.40Kb 
d21 1
a21 1
queue   sub3 on tun1000000 bandwidth 38.40Kb 
d23 1
a23 1
queue  vier on tun1000000 bandwidth 32Kb cbq( default ) 
d25 1
a25 1
queue  fuenf on tun1000000 bandwidth 19.20Kb {subseven}
d27 1
a27 1
queue   subseven on tun1000000 bandwidth 17.28Kb 
@


1.9
log
@more altq bandwidth tweaks for "make pfaltq".
@
text
@d1 1
a1 1
queue root_lo0 bandwidth 10Mb priority 0 cbq( wrr root ) {eins, zwei, drei}
d3 1
a3 1
queue  eins bandwidth 1Mb cbq( default ) 
d5 1
a5 1
queue  zwei bandwidth 6Mb {sub2, sub3}
d7 1
a7 1
queue   sub2 bandwidth 3Mb 
d9 1
a9 1
queue   sub3 bandwidth 3Mb 
d11 1
a11 1
queue  drei bandwidth 3Mb {subseven}
d13 1
a13 1
queue   subseven bandwidth 2.70Mb 
d15 1
a15 1
queue root_tun1000000 bandwidth 128Kb priority 0 cbq( wrr root ) {zwei, vier, fuenf}
d17 1
a17 1
queue  zwei bandwidth 76.80Kb {sub2, sub3}
d19 1
a19 1
queue   sub2 bandwidth 38.40Kb 
d21 1
a21 1
queue   sub3 bandwidth 38.40Kb 
d23 1
a23 1
queue  vier bandwidth 32Kb cbq( default ) 
d25 1
a25 1
queue  fuenf bandwidth 19.20Kb {subseven}
d27 1
a27 1
queue   subseven bandwidth 17.28Kb 
@


1.8
log
@we change dthe queue ID allocator so that all IDs moved by 1 now, and
ppp0/1 are no more by default
@
text
@d5 1
a5 1
queue  zwei bandwidth 8Mb {sub2, sub3}
d7 1
a7 1
queue   sub2 bandwidth 4Mb 
d9 1
a9 1
queue   sub3 bandwidth 4Mb 
d11 1
a11 1
queue  drei bandwidth 1Mb {subseven}
d13 1
a13 1
queue   subseven bandwidth 900Kb 
d15 14
a28 14
queue root_tun1000000 bandwidth 33.60Kb priority 0 cbq( wrr root ) {zwei, vier, fuenf}
  [ qid=2 ifname=tun1000000 ifbandwidth=33.60Kb ]
queue  zwei bandwidth 26.88Kb {sub2, sub3}
  [ qid=4 ifname=tun1000000 ifbandwidth=33.60Kb ]
queue   sub2 bandwidth 13.40Kb 
  [ qid=5 ifname=tun1000000 ifbandwidth=33.60Kb ]
queue   sub3 bandwidth 13.40Kb 
  [ qid=6 ifname=tun1000000 ifbandwidth=33.60Kb ]
queue  vier bandwidth 16.80Kb cbq( default ) 
  [ qid=8 ifname=tun1000000 ifbandwidth=33.60Kb ]
queue  fuenf bandwidth 16.80Kb {subseven}
  [ qid=9 ifname=tun1000000 ifbandwidth=33.60Kb ]
queue   subseven bandwidth 15.12Kb 
  [ qid=10 ifname=tun1000000 ifbandwidth=33.60Kb ]
@


1.7
log
@regen; qid change.
@
text
@d2 1
a2 1
  [ qid=2 ifname=lo0 ifbandwidth=10Mb ]
d4 2
d7 1
a7 1
queue  zwei bandwidth 8Mb {sub2, sub3}
d9 1
a9 1
queue   sub2 bandwidth 4Mb 
d11 1
a11 1
queue   sub3 bandwidth 4Mb 
a12 2
queue  drei bandwidth 1Mb {subseven}
  [ qid=8 ifname=lo0 ifbandwidth=10Mb ]
d14 1
a14 1
  [ qid=11 ifname=lo0 ifbandwidth=10Mb ]
d16 1
a16 1
  [ qid=3 ifname=tun1000000 ifbandwidth=33.60Kb ]
d18 2
d21 1
a21 1
queue   sub2 bandwidth 13.40Kb 
a22 2
queue   sub3 bandwidth 13.40Kb 
  [ qid=7 ifname=tun1000000 ifbandwidth=33.60Kb ]
d24 2
d27 1
a27 1
queue  fuenf bandwidth 16.80Kb {subseven}
a28 2
queue   subseven bandwidth 15.12Kb 
  [ qid=11 ifname=tun1000000 ifbandwidth=33.60Kb ]
@


1.6
log
@regen; qid change.
@
text
@d2 1
a2 1
  [ qid=1 ifname=lo0 ifbandwidth=10Mb ]
d4 1
a4 1
  [ qid=3 ifname=lo0 ifbandwidth=10Mb ]
d6 1
a6 1
  [ qid=4 ifname=lo0 ifbandwidth=10Mb ]
d8 1
a8 1
  [ qid=5 ifname=lo0 ifbandwidth=10Mb ]
d10 1
a10 1
  [ qid=6 ifname=lo0 ifbandwidth=10Mb ]
d12 1
a12 1
  [ qid=7 ifname=lo0 ifbandwidth=10Mb ]
d14 1
a14 1
  [ qid=10 ifname=lo0 ifbandwidth=10Mb ]
d16 1
a16 1
  [ qid=2 ifname=tun1000000 ifbandwidth=33.60Kb ]
d18 1
a18 1
  [ qid=4 ifname=tun1000000 ifbandwidth=33.60Kb ]
d20 1
a20 1
  [ qid=5 ifname=tun1000000 ifbandwidth=33.60Kb ]
d22 1
a22 1
  [ qid=6 ifname=tun1000000 ifbandwidth=33.60Kb ]
d24 1
a24 1
  [ qid=8 ifname=tun1000000 ifbandwidth=33.60Kb ]
d26 1
a26 1
  [ qid=9 ifname=tun1000000 ifbandwidth=33.60Kb ]
d28 1
a28 1
  [ qid=10 ifname=tun1000000 ifbandwidth=33.60Kb ]
@


1.5
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d2 1
a2 1
  [ qid=4294967294 ifname=lo0 ifbandwidth=10Mb ]
d4 1
a4 1
  [ qid=4294967293 ifname=lo0 ifbandwidth=10Mb ]
d6 1
a6 1
  [ qid=2 ifname=lo0 ifbandwidth=10Mb ]
d8 1
a8 1
  [ qid=3 ifname=lo0 ifbandwidth=10Mb ]
d10 1
a10 1
  [ qid=4 ifname=lo0 ifbandwidth=10Mb ]
d12 1
a12 1
  [ qid=5 ifname=lo0 ifbandwidth=10Mb ]
d14 1
a14 1
  [ qid=7 ifname=lo0 ifbandwidth=10Mb ]
d16 1
a16 1
  [ qid=4294967294 ifname=tun1000000 ifbandwidth=33.60Kb ]
d18 1
a18 1
  [ qid=2 ifname=tun1000000 ifbandwidth=33.60Kb ]
d20 1
a20 1
  [ qid=3 ifname=tun1000000 ifbandwidth=33.60Kb ]
d22 1
a22 1
  [ qid=4 ifname=tun1000000 ifbandwidth=33.60Kb ]
d24 1
a24 1
  [ qid=4294967293 ifname=tun1000000 ifbandwidth=33.60Kb ]
d26 1
a26 1
  [ qid=6 ifname=tun1000000 ifbandwidth=33.60Kb ]
d28 1
a28 1
  [ qid=7 ifname=tun1000000 ifbandwidth=33.60Kb ]
@


1.4
log
@regen
@
text
@d15 2
a16 2
queue root_tun0 bandwidth 33.60Kb priority 0 cbq( wrr root ) {zwei, vier, fuenf}
  [ qid=4294967294 ifname=tun0 ifbandwidth=33.60Kb ]
d18 1
a18 1
  [ qid=2 ifname=tun0 ifbandwidth=33.60Kb ]
d20 1
a20 1
  [ qid=3 ifname=tun0 ifbandwidth=33.60Kb ]
d22 1
a22 1
  [ qid=4 ifname=tun0 ifbandwidth=33.60Kb ]
d24 1
a24 1
  [ qid=4294967293 ifname=tun0 ifbandwidth=33.60Kb ]
d26 1
a26 1
  [ qid=6 ifname=tun0 ifbandwidth=33.60Kb ]
d28 1
a28 1
  [ qid=7 ifname=tun0 ifbandwidth=33.60Kb ]
@


1.3
log
@regen; queue ID allocation starts at 2 instead of 1 now
@
text
@d2 1
a2 1
[ qid=4294967294 ifname=lo0 ifbandwidth=10Mb ]
d4 1
a4 1
[ qid=4294967293 ifname=lo0 ifbandwidth=10Mb ]
d6 1
a6 1
[ qid=2 ifname=lo0 ifbandwidth=10Mb ]
d8 1
a8 1
[ qid=3 ifname=lo0 ifbandwidth=10Mb ]
d10 1
a10 1
[ qid=4 ifname=lo0 ifbandwidth=10Mb ]
d12 1
a12 1
[ qid=5 ifname=lo0 ifbandwidth=10Mb ]
d14 1
a14 1
[ qid=7 ifname=lo0 ifbandwidth=10Mb ]
d16 1
a16 1
[ qid=4294967294 ifname=tun0 ifbandwidth=33.60Kb ]
d18 1
a18 1
[ qid=2 ifname=tun0 ifbandwidth=33.60Kb ]
d20 1
a20 1
[ qid=3 ifname=tun0 ifbandwidth=33.60Kb ]
d22 1
a22 1
[ qid=4 ifname=tun0 ifbandwidth=33.60Kb ]
d24 1
a24 1
[ qid=4294967293 ifname=tun0 ifbandwidth=33.60Kb ]
d26 1
a26 1
[ qid=6 ifname=tun0 ifbandwidth=33.60Kb ]
d28 1
a28 1
[ qid=7 ifname=tun0 ifbandwidth=33.60Kb ]
@


1.2
log
@regen
@
text
@d6 1
a6 1
[ qid=1 ifname=lo0 ifbandwidth=10Mb ]
d8 1
a8 1
[ qid=2 ifname=lo0 ifbandwidth=10Mb ]
d10 1
a10 1
[ qid=3 ifname=lo0 ifbandwidth=10Mb ]
d12 1
a12 1
[ qid=4 ifname=lo0 ifbandwidth=10Mb ]
d14 1
a14 1
[ qid=6 ifname=lo0 ifbandwidth=10Mb ]
d18 1
a18 1
[ qid=1 ifname=tun0 ifbandwidth=33.60Kb ]
d20 1
a20 1
[ qid=2 ifname=tun0 ifbandwidth=33.60Kb ]
d22 1
a22 1
[ qid=3 ifname=tun0 ifbandwidth=33.60Kb ]
d26 1
a26 1
[ qid=5 ifname=tun0 ifbandwidth=33.60Kb ]
d28 1
a28 1
[ qid=6 ifname=tun0 ifbandwidth=33.60Kb ]
@


1.1
log
@more complicated cbq queue id assigment verification
@
text
@d14 1
a14 1
[ qid=5 ifname=lo0 ifbandwidth=10Mb ]
d26 1
a26 1
[ qid=4 ifname=tun0 ifbandwidth=33.60Kb ]
d28 1
a28 1
[ qid=5 ifname=tun0 ifbandwidth=33.60Kb ]
@

