head	1.10;
access;
symbols
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.8.0.10
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.8
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.6
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.4
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.2
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.10
date	2009.09.03.12.07.56;	author jsg;	state dead;
branches;
next	1.9;

1.9
date	2009.05.14.22.57.18;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.28.14.30.05;	author mcbride;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.04.12.18.37;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.28.16.44.33;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.27.04.20.26;	author david;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.18.18.05.52;	author henning;	state Exp;
branches;
next	;


desc
@@


1.10
log
@adapt to nat changes
ok henning
@
text
@stdin:6: Rules must be in order: options, normalization, queueing, translation, filtering
set require-order yes
@


1.9
log
@handle the new require-order default of "no" in existing tests, and add
a new test to check it's working correctly.  ok deraadt@@
@
text
@@


1.8
log
@Expected regress changes due to separation of parsing and kernel loading.
@
text
@d1 2
a2 1
stdin:5: Rules must be in order: options, normalization, queueing, translation, filtering
@


1.7
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@a1 2
scrub in on lo0 all fragment reassemble
pass in on lo1000000 all flags S/SA keep state
@


1.6
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d3 1
a3 1
pass in on lo1000000 all
@


1.5
log
@sync
@
text
@d3 1
a3 1
pass in on lo1 all
@


1.4
log
@Big Sync
@
text
@a1 1
pfctl: Syntax error in config file: pf rules not loaded
@


1.3
log
@sync
@
text
@d3 2
a4 2
scrub in on lo0 all fragment reassemble 
pass in on lo1 all 
@


1.2
log
@update regress test output to match change in error message
ok henning@@
@
text
@d2 1
a2 1
pfctl: Syntax error in file: pf rules not loaded
@


1.1
log
@test pfctl output for the fail tests too.
that ensures that not a single failure-causing statement makes the whole
test succeed.
@
text
@d1 1
a1 1
stdin:5: Rules must be in order: options, scrub, queue, NAT, filter
@

