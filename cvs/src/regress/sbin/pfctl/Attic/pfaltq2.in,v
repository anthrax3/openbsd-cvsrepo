head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.40
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.38
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.36
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.34
	OPENBSD_5_0:1.3.0.32
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.30
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.28
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.24
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.26
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.22
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.20
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.18
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2014.04.18.10.48.23;	author henning;	state dead;
branches;
next	1.4;

1.4
date	2013.10.12.12.18.52;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.11.15.10.31;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.11.11.05.11;	author henning;	state Exp;
branches;
next	;


desc
@@


1.5
log
@stop testing altq stuffz
how many tests I wrote back then... (of which the majority is pointless)
@
text
@#queue id assignment with cbq: two same named queues on different interfaces
#must have the same qid

altq on { lo0 tun1000000 } tbrsize 1824 cbq bandwidth 10Mb queue { one two }
oldqueue one bandwidth 10% cbq(default)
oldqueue two bandwidth 90% { three four}
oldqueue  three bandwidth 50%
oldqueue  four bandwidth 40%

@


1.4
log
@adopt existing altq regress to queueing changes; queuespecs for altq use
"oldqueue" as keyword for the transition phase
@
text
@@


1.3
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d5 4
a8 4
queue one bandwidth 10% cbq(default)
queue two bandwidth 90% { three four}
queue  three bandwidth 50%
queue  four bandwidth 40%
@


1.2
log
@add comments saying what we are testing
@
text
@d4 1
a4 1
altq on { lo0 tun0 } tbrsize 1824 cbq bandwidth 10Mb queue { one two }
@


1.1
log
@test queue ID assignment with cbq
@
text
@d1 3
@

