head	1.10;
access;
symbols
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.24
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.22
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.20
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.18
	OPENBSD_5_0:1.8.0.16
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.14
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.12
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.8
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.10
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.6
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.4
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.7.0.16
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.14
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.12
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3;
locks; strict;
comment	@# @;


1.10
date	2014.04.18.10.48.23;	author henning;	state dead;
branches;
next	1.9;

1.9
date	2013.10.12.12.18.54;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2007.09.19.12.52.48;	author mpf;	state Exp;
branches;
next	1.7;

1.7
date	2004.03.07.20.16.01;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2004.02.19.07.45.43;	author kjc;	state Exp;
branches;
next	1.5;

1.5
date	2004.01.14.08.46.20;	author kjc;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.18.20.32.59;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.12.19.17.55;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.05.21.47.57;	author henning;	state Exp;
branches;
next	;


desc
@@


1.10
log
@stop testing altq stuffz
how many tests I wrote back then... (of which the majority is pointless)
@
text
@oldqueue one on tun1000000 priq( default ) 
  [ qid=1 ifname=tun1000000 ifbandwidth=10Mb ]
oldqueue one on tun1000001 priq( default ) 
  [ qid=1 ifname=tun1000001 ifbandwidth=10Mb ]
oldqueue two on tun1000000 priority 15 
  [ qid=2 ifname=tun1000000 ifbandwidth=10Mb ]
oldqueue two on tun1000001 priority 0 
  [ qid=2 ifname=tun1000001 ifbandwidth=10Mb ]
@


1.9
log
@adopt existing altq regress to queueing changes; queuespecs for altq use
"oldqueue" as keyword for the transition phase
@
text
@@


1.8
log
@Adopt 14 altq tests to the change of the queue output format.
OK henning
@
text
@d1 1
a1 1
queue one on tun1000000 priq( default ) 
d3 1
a3 1
queue one on tun1000001 priq( default ) 
d5 1
a5 1
queue two on tun1000000 priority 15 
d7 1
a7 1
queue two on tun1000001 priority 0 
@


1.7
log
@we change dthe queue ID allocator so that all IDs moved by 1 now, and
ppp0/1 are no more by default
@
text
@d1 1
a1 1
queue one priq( default ) 
d3 1
a3 1
queue one priq( default ) 
d5 1
a5 1
queue two priority 15 
d7 1
a7 1
queue two priority 0 
@


1.6
log
@regen; qid change.
@
text
@d2 1
a2 3
  [ qid=2 ifname=ppp0 ifbandwidth=10Mb ]
queue one priq( default ) 
  [ qid=2 ifname=ppp1 ifbandwidth=10Mb ]
d4 2
d7 1
a7 1
queue one priq( default ) 
a8 8
queue two priority 15 
  [ qid=3 ifname=ppp0 ifbandwidth=10Mb ]
queue two priority 0 
  [ qid=3 ifname=ppp1 ifbandwidth=10Mb ]
queue two priority 0 
  [ qid=3 ifname=tun1000000 ifbandwidth=10Mb ]
queue two priority 0 
  [ qid=3 ifname=tun1000001 ifbandwidth=10Mb ]
@


1.5
log
@regen; qid change.
@
text
@d2 1
a2 1
  [ qid=1 ifname=ppp0 ifbandwidth=10Mb ]
d4 1
a4 1
  [ qid=1 ifname=ppp1 ifbandwidth=10Mb ]
d6 1
a6 1
  [ qid=1 ifname=tun1000000 ifbandwidth=10Mb ]
d8 1
a8 1
  [ qid=1 ifname=tun1000001 ifbandwidth=10Mb ]
d10 1
a10 1
  [ qid=2 ifname=ppp0 ifbandwidth=10Mb ]
d12 1
a12 1
  [ qid=2 ifname=ppp1 ifbandwidth=10Mb ]
d14 1
a14 1
  [ qid=2 ifname=tun1000000 ifbandwidth=10Mb ]
d16 1
a16 1
  [ qid=2 ifname=tun1000001 ifbandwidth=10Mb ]
@


1.4
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d2 1
a2 1
  [ qid=2 ifname=ppp0 ifbandwidth=10Mb ]
d4 1
a4 1
  [ qid=2 ifname=ppp1 ifbandwidth=10Mb ]
d6 1
a6 1
  [ qid=2 ifname=tun1000000 ifbandwidth=10Mb ]
d8 1
a8 1
  [ qid=2 ifname=tun1000001 ifbandwidth=10Mb ]
d10 1
a10 1
  [ qid=3 ifname=ppp0 ifbandwidth=10Mb ]
d12 1
a12 1
  [ qid=3 ifname=ppp1 ifbandwidth=10Mb ]
d14 1
a14 1
  [ qid=3 ifname=tun1000000 ifbandwidth=10Mb ]
d16 1
a16 1
  [ qid=3 ifname=tun1000001 ifbandwidth=10Mb ]
@


1.3
log
@regen
@
text
@d6 1
a6 1
  [ qid=2 ifname=tun0 ifbandwidth=10Mb ]
d8 1
a8 1
  [ qid=2 ifname=tun1 ifbandwidth=10Mb ]
d14 1
a14 1
  [ qid=3 ifname=tun0 ifbandwidth=10Mb ]
d16 1
a16 1
  [ qid=3 ifname=tun1 ifbandwidth=10Mb ]
@


1.2
log
@regen; queue ID allocation starts at 2 instead of 1 now
@
text
@d2 1
a2 1
[ qid=2 ifname=ppp0 ifbandwidth=10Mb ]
d4 1
a4 1
[ qid=2 ifname=ppp1 ifbandwidth=10Mb ]
d6 1
a6 1
[ qid=2 ifname=tun0 ifbandwidth=10Mb ]
d8 1
a8 1
[ qid=2 ifname=tun1 ifbandwidth=10Mb ]
d10 1
a10 1
[ qid=3 ifname=ppp0 ifbandwidth=10Mb ]
d12 1
a12 1
[ qid=3 ifname=ppp1 ifbandwidth=10Mb ]
d14 1
a14 1
[ qid=3 ifname=tun0 ifbandwidth=10Mb ]
d16 1
a16 1
[ qid=3 ifname=tun1 ifbandwidth=10Mb ]
@


1.1
log
@test queue .. on $interface
@
text
@d2 1
a2 1
[ qid=1 ifname=ppp0 ifbandwidth=10Mb ]
d4 1
a4 1
[ qid=1 ifname=ppp1 ifbandwidth=10Mb ]
d6 1
a6 1
[ qid=1 ifname=tun0 ifbandwidth=10Mb ]
d8 1
a8 1
[ qid=1 ifname=tun1 ifbandwidth=10Mb ]
d10 1
a10 1
[ qid=2 ifname=ppp0 ifbandwidth=10Mb ]
d12 1
a12 1
[ qid=2 ifname=ppp1 ifbandwidth=10Mb ]
d14 1
a14 1
[ qid=2 ifname=tun0 ifbandwidth=10Mb ]
d16 1
a16 1
[ qid=2 ifname=tun1 ifbandwidth=10Mb ]
@

