head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.4.0.40
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.38
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.36
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.34
	OPENBSD_5_0:1.4.0.32
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.30
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.28
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.24
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.26
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.22
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.20
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.18
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.16
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.14
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.12
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.10
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2014.04.18.10.48.23;	author henning;	state dead;
branches;
next	1.5;

1.5
date	2013.10.12.12.18.44;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.16.22.21.19;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.08.00.20.17;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.29.17.43.41;	author henning;	state Exp;
branches;
next	;


desc
@@


1.6
log
@stop testing altq stuffz
how many tests I wrote back then... (of which the majority is pointless)
@
text
@#test altq with interface expansion
#also tests multiple queues with the same name but on different interfaces

altq on { lo0 lo1000000 } tbrsize 1824 cbq bandwidth 10Mb queue std
oldqueue	std cbq(default)
@


1.5
log
@adopt existing altq regress to queueing changes; queuespecs for altq use
"oldqueue" as keyword for the transition phase
@
text
@@


1.4
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d5 1
a5 1
queue	std cbq(default)
@


1.3
log
@loopback interface MTU differs on 64 bit archs.
interface MTU is part of the tbrsize calculation.
thus we need to specify the tbrsize in the input files to make the tests
work on 64 bit platforms.
@
text
@d4 1
a4 1
altq on { lo0 lo1 } tbrsize 1824 cbq bandwidth 10Mb queue std
@


1.2
log
@adjust after syntax change
@
text
@d4 1
a4 1
altq on { lo0 lo1 } cbq bandwidth 10Mb queue std
@


1.1
log
@test altq with interface expansion
as side-effect, this also tests multiple queues with the same name but on
different interfaces
@
text
@d4 1
a4 1
altq on { lo0 lo1 } scheduler cbq bandwidth 10Mb queue std
@

