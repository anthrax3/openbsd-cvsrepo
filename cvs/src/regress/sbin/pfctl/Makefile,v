head	1.227;
access;
symbols
	OPENBSD_6_2_BASE:1.227
	OPENBSD_6_1:1.224.0.4
	OPENBSD_6_1_BASE:1.224
	OPENBSD_6_0:1.223.0.6
	OPENBSD_6_0_BASE:1.223
	OPENBSD_5_9:1.223.0.2
	OPENBSD_5_9_BASE:1.223
	OPENBSD_5_8:1.223.0.4
	OPENBSD_5_8_BASE:1.223
	OPENBSD_5_7:1.222.0.4
	OPENBSD_5_7_BASE:1.222
	OPENBSD_5_6:1.219.0.4
	OPENBSD_5_6_BASE:1.219
	OPENBSD_5_5:1.218.0.14
	OPENBSD_5_5_BASE:1.218
	OPENBSD_5_4:1.218.0.10
	OPENBSD_5_4_BASE:1.218
	OPENBSD_5_3:1.218.0.8
	OPENBSD_5_3_BASE:1.218
	OPENBSD_5_2:1.218.0.6
	OPENBSD_5_2_BASE:1.218
	OPENBSD_5_1_BASE:1.218
	OPENBSD_5_1:1.218.0.4
	OPENBSD_5_0:1.218.0.2
	OPENBSD_5_0_BASE:1.218
	OPENBSD_4_9:1.214.0.4
	OPENBSD_4_9_BASE:1.214
	OPENBSD_4_8:1.214.0.2
	OPENBSD_4_8_BASE:1.214
	OPENBSD_4_7:1.209.0.2
	OPENBSD_4_7_BASE:1.209
	OPENBSD_4_6:1.205.0.4
	OPENBSD_4_6_BASE:1.205
	OPENBSD_4_5:1.203.0.4
	OPENBSD_4_5_BASE:1.203
	OPENBSD_4_4:1.203.0.2
	OPENBSD_4_4_BASE:1.203
	OPENBSD_4_3:1.201.0.2
	OPENBSD_4_3_BASE:1.201
	OPENBSD_4_2:1.196.0.2
	OPENBSD_4_2_BASE:1.196
	OPENBSD_4_1:1.195.0.2
	OPENBSD_4_1_BASE:1.195
	OPENBSD_4_0:1.190.0.6
	OPENBSD_4_0_BASE:1.190
	OPENBSD_3_9:1.190.0.4
	OPENBSD_3_9_BASE:1.190
	OPENBSD_3_8:1.190.0.2
	OPENBSD_3_8_BASE:1.190
	OPENBSD_3_7:1.185.0.2
	OPENBSD_3_7_BASE:1.185
	OPENBSD_3_6:1.180.0.2
	OPENBSD_3_6_BASE:1.180
	OPENBSD_3_5:1.177.0.2
	OPENBSD_3_5_BASE:1.177
	OPENBSD_3_4:1.163.0.2
	OPENBSD_3_4_BASE:1.163
	OPENBSD_3_3:1.118.0.2
	OPENBSD_3_3_BASE:1.118
	OPENBSD_3_2:1.37.0.2
	OPENBSD_3_2_BASE:1.37
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10;
locks; strict;
comment	@# @;


1.227
date	2017.08.11.22.30.38;	author benno;	state Exp;
branches;
next	1.226;
commitid	y1VyeV9JnotblbHq;

1.226
date	2017.07.19.13.02.46;	author mikeb;	state Exp;
branches;
next	1.225;
commitid	tvccPyT1clCivOej;

1.225
date	2017.07.07.23.55.21;	author bluhm;	state Exp;
branches;
next	1.224;
commitid	HPFM3FepOktcWNt0;

1.224
date	2016.09.30.14.27.52;	author otto;	state Exp;
branches;
next	1.223;
commitid	u4ZmY7s6OMLI5Y3S;

1.223
date	2015.05.19.17.16.20;	author mikeb;	state Exp;
branches;
next	1.222;
commitid	v9Jey7MZIxSSNz6Z;

1.222
date	2014.11.13.17.35.30;	author pelikan;	state Exp;
branches;
next	1.221;
commitid	fa4STfE4zutHmPJh;

1.221
date	2014.10.28.19.03.03;	author benno;	state Exp;
branches;
next	1.220;
commitid	gzcBXRi8YNRkDDpq;

1.220
date	2014.08.23.00.11.03;	author pelikan;	state Exp;
branches;
next	1.219;
commitid	YY1Dd1zH9rSATCPx;

1.219
date	2014.04.18.10.48.23;	author henning;	state Exp;
branches;
next	1.218;

1.218
date	2011.07.27.10.40.05;	author mcbride;	state Exp;
branches;
next	1.217;

1.217
date	2011.07.24.01.22.11;	author mcbride;	state Exp;
branches;
next	1.216;

1.216
date	2011.07.08.21.57.48;	author mcbride;	state Exp;
branches;
next	1.215;

1.215
date	2011.07.07.01.58.12;	author mcbride;	state Exp;
branches;
next	1.214;

1.214
date	2010.07.03.02.32.45;	author phessler;	state Exp;
branches;
next	1.213;

1.213
date	2010.07.01.22.26.26;	author phessler;	state Exp;
branches;
next	1.212;

1.212
date	2010.06.30.21.18.06;	author sthen;	state Exp;
branches;
next	1.211;

1.211
date	2010.06.20.20.35.06;	author phessler;	state Exp;
branches;
next	1.210;

1.210
date	2010.05.10.02.00.50;	author krw;	state Exp;
branches;
next	1.209;

1.209
date	2010.01.13.00.52.14;	author mcbride;	state Exp;
branches;
next	1.208;

1.208
date	2009.09.24.11.04.10;	author jsg;	state Exp;
branches;
next	1.207;

1.207
date	2009.09.03.12.38.32;	author jsg;	state Exp;
branches;
next	1.206;

1.206
date	2009.09.03.12.07.56;	author jsg;	state Exp;
branches;
next	1.205;

1.205
date	2009.05.14.22.57.18;	author sthen;	state Exp;
branches;
next	1.204;

1.204
date	2009.04.06.12.41.47;	author henning;	state Exp;
branches;
next	1.203;

1.203
date	2008.05.09.02.44.55;	author markus;	state Exp;
branches;
next	1.202;

1.202
date	2008.05.08.00.44.57;	author mpf;	state Exp;
branches;
next	1.201;

1.201
date	2007.10.14.21.52.14;	author deraadt;	state Exp;
branches;
next	1.200;

1.200
date	2007.10.13.16.54.43;	author deraadt;	state Exp;
branches;
next	1.199;

1.199
date	2007.09.23.21.00.00;	author mpf;	state Exp;
branches;
next	1.198;

1.198
date	2007.09.19.22.45.04;	author mpf;	state Exp;
branches;
next	1.197;

1.197
date	2007.08.30.12.24.28;	author dhartmei;	state Exp;
branches;
next	1.196;

1.196
date	2007.05.02.20.16.18;	author david;	state Exp;
branches;
next	1.195;

1.195
date	2006.11.28.17.03.03;	author henning;	state Exp;
branches;
next	1.194;

1.194
date	2006.11.07.06.18.10;	author mcbride;	state Exp;
branches;
next	1.193;

1.193
date	2006.11.07.05.31.26;	author mcbride;	state Exp;
branches;
next	1.192;

1.192
date	2006.11.07.01.14.17;	author mcbride;	state Exp;
branches;
next	1.191;

1.191
date	2006.10.25.14.30.46;	author henning;	state Exp;
branches;
next	1.190;

1.190
date	2005.05.28.19.45.49;	author mpf;	state Exp;
branches;
next	1.189;

1.189
date	2005.05.28.00.55.56;	author mpf;	state Exp;
branches;
next	1.188;

1.188
date	2005.05.28.00.52.41;	author mpf;	state Exp;
branches;
next	1.187;

1.187
date	2005.05.26.20.22.29;	author camield;	state Exp;
branches;
next	1.186;

1.186
date	2005.04.22.11.08.32;	author camield;	state Exp;
branches;
next	1.185;

1.185
date	2005.01.27.15.30.35;	author dhartmei;	state Exp;
branches;
next	1.184;

1.184
date	2004.12.29.06.09.11;	author david;	state Exp;
branches;
next	1.183;

1.183
date	2004.12.07.21.32.00;	author mcbride;	state Exp;
branches;
next	1.182;

1.182
date	2004.10.05.18.33.44;	author mcbride;	state Exp;
branches;
next	1.181;

1.181
date	2004.10.01.23.19.17;	author mcbride;	state Exp;
branches;
next	1.180;

1.180
date	2004.07.03.19.31.34;	author henning;	state Exp;
branches;
next	1.179;

1.179
date	2004.06.29.22.14.30;	author henning;	state Exp;
branches;
next	1.178;

1.178
date	2004.05.21.23.10.49;	author dhartmei;	state Exp;
branches;
next	1.177;

1.177
date	2004.02.24.21.09.06;	author mcbride;	state Exp;
branches;
next	1.176;

1.176
date	2004.02.18.20.15.49;	author mcbride;	state Exp;
branches;
next	1.175;

1.175
date	2004.02.11.04.17.18;	author mcbride;	state Exp;
branches;
next	1.174;

1.174
date	2004.02.04.18.30.32;	author mcbride;	state Exp;
branches;
next	1.173;

1.173
date	2004.02.03.19.39.45;	author henning;	state Exp;
branches;
next	1.172;

1.172
date	2004.01.26.04.20.48;	author deraadt;	state Exp;
branches;
next	1.171;

1.171
date	2004.01.26.02.34.23;	author david;	state Exp;
branches;
next	1.170;

1.170
date	2004.01.06.12.34.05;	author cedric;	state Exp;
branches;
next	1.169;

1.169
date	2003.12.30.16.48.47;	author henning;	state Exp;
branches;
next	1.168;

1.168
date	2003.12.16.05.02.46;	author mcbride;	state Exp;
branches;
next	1.167;

1.167
date	2003.12.16.00.30.16;	author mcbride;	state Exp;
branches;
next	1.166;

1.166
date	2003.12.06.15.35.38;	author sturm;	state Exp;
branches;
next	1.165;

1.165
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.164;

1.164
date	2003.11.06.15.22.16;	author henning;	state Exp;
branches;
next	1.163;

1.163
date	2003.08.20.16.33.08;	author henning;	state Exp;
branches;
next	1.162;

1.162
date	2003.08.20.13.04.50;	author henning;	state Exp;
branches;
next	1.161;

1.161
date	2003.07.19.15.08.30;	author cedric;	state Exp;
branches;
next	1.160;

1.160
date	2003.07.19.14.18.09;	author cedric;	state Exp;
branches;
next	1.159;

1.159
date	2003.07.11.09.21.00;	author cedric;	state Exp;
branches;
next	1.158;

1.158
date	2003.07.04.11.09.05;	author henning;	state Exp;
branches;
next	1.157;

1.157
date	2003.06.18.11.38.56;	author henning;	state Exp;
branches;
next	1.156;

1.156
date	2003.06.18.11.09.21;	author henning;	state Exp;
branches;
next	1.155;

1.155
date	2003.06.12.09.43.52;	author henning;	state Exp;
branches;
next	1.154;

1.154
date	2003.05.26.08.12.54;	author henning;	state Exp;
branches;
next	1.153;

1.153
date	2003.05.26.06.03.53;	author henning;	state Exp;
branches;
next	1.152;

1.152
date	2003.05.19.20.30.30;	author henning;	state Exp;
branches;
next	1.151;

1.151
date	2003.05.19.20.25.45;	author henning;	state Exp;
branches;
next	1.150;

1.150
date	2003.05.19.18.38.13;	author henning;	state Exp;
branches;
next	1.149;

1.149
date	2003.05.19.18.21.28;	author henning;	state Exp;
branches;
next	1.148;

1.148
date	2003.05.17.02.07.07;	author henning;	state Exp;
branches;
next	1.147;

1.147
date	2003.05.17.01.55.09;	author henning;	state Exp;
branches;
next	1.146;

1.146
date	2003.05.15.06.28.50;	author henning;	state Exp;
branches;
next	1.145;

1.145
date	2003.05.15.06.27.01;	author henning;	state Exp;
branches;
next	1.144;

1.144
date	2003.05.15.06.25.07;	author henning;	state Exp;
branches;
next	1.143;

1.143
date	2003.05.15.00.11.48;	author frantzen;	state Exp;
branches;
next	1.142;

1.142
date	2003.05.14.22.55.34;	author henning;	state Exp;
branches;
next	1.141;

1.141
date	2003.05.14.22.46.34;	author henning;	state Exp;
branches;
next	1.140;

1.140
date	2003.05.14.05.29.08;	author henning;	state Exp;
branches;
next	1.139;

1.139
date	2003.05.14.05.26.34;	author henning;	state Exp;
branches;
next	1.138;

1.138
date	2003.05.14.05.21.19;	author frantzen;	state Exp;
branches;
next	1.137;

1.137
date	2003.05.13.21.43.43;	author henning;	state Exp;
branches;
next	1.136;

1.136
date	2003.05.11.01.56.14;	author mcbride;	state Exp;
branches;
next	1.135;

1.135
date	2003.05.03.17.01.47;	author henning;	state Exp;
branches;
next	1.134;

1.134
date	2003.05.01.16.18.10;	author henning;	state Exp;
branches;
next	1.133;

1.133
date	2003.04.30.13.14.40;	author henning;	state Exp;
branches;
next	1.132;

1.132
date	2003.04.15.11.33.04;	author henning;	state Exp;
branches;
next	1.131;

1.131
date	2003.04.15.10.55.10;	author henning;	state Exp;
branches;
next	1.130;

1.130
date	2003.04.14.16.52.25;	author henning;	state Exp;
branches;
next	1.129;

1.129
date	2003.04.14.15.14.14;	author henning;	state Exp;
branches;
next	1.128;

1.128
date	2003.04.13.23.49.12;	author henning;	state Exp;
branches;
next	1.127;

1.127
date	2003.04.13.23.40.52;	author henning;	state Exp;
branches;
next	1.126;

1.126
date	2003.04.13.23.38.45;	author henning;	state Exp;
branches;
next	1.125;

1.125
date	2003.04.13.23.37.39;	author henning;	state Exp;
branches;
next	1.124;

1.124
date	2003.04.13.16.57.31;	author henning;	state Exp;
branches;
next	1.123;

1.123
date	2003.04.12.20.11.30;	author henning;	state Exp;
branches;
next	1.122;

1.122
date	2003.04.05.21.50.14;	author henning;	state Exp;
branches;
next	1.121;

1.121
date	2003.04.05.21.47.57;	author henning;	state Exp;
branches;
next	1.120;

1.120
date	2003.04.03.14.20.09;	author henning;	state Exp;
branches;
next	1.119;

1.119
date	2003.03.27.16.13.14;	author henning;	state Exp;
branches;
next	1.118;

1.118
date	2003.03.19.14.03.52;	author henning;	state Exp;
branches;
next	1.117;

1.117
date	2003.03.11.15.26.44;	author henning;	state Exp;
branches;
next	1.116;

1.116
date	2003.03.11.15.07.19;	author henning;	state Exp;
branches;
next	1.115;

1.115
date	2003.03.11.15.05.53;	author henning;	state Exp;
branches;
next	1.114;

1.114
date	2003.03.11.12.00.07;	author henning;	state Exp;
branches;
next	1.113;

1.113
date	2003.03.11.11.14.59;	author henning;	state Exp;
branches;
next	1.112;

1.112
date	2003.03.11.11.05.11;	author henning;	state Exp;
branches;
next	1.111;

1.111
date	2003.03.11.10.57.11;	author henning;	state Exp;
branches;
next	1.110;

1.110
date	2003.03.10.12.07.01;	author henning;	state Exp;
branches;
next	1.109;

1.109
date	2003.03.09.18.08.53;	author henning;	state Exp;
branches;
next	1.108;

1.108
date	2003.03.09.18.04.29;	author henning;	state Exp;
branches;
next	1.107;

1.107
date	2003.03.08.14.24.20;	author henning;	state Exp;
branches;
next	1.106;

1.106
date	2003.03.07.12.55.58;	author henning;	state Exp;
branches;
next	1.105;

1.105
date	2003.03.02.23.44.35;	author henning;	state Exp;
branches;
next	1.104;

1.104
date	2003.03.02.12.38.15;	author henning;	state Exp;
branches;
next	1.103;

1.103
date	2003.02.28.22.21.58;	author henning;	state Exp;
branches;
next	1.102;

1.102
date	2003.02.28.21.25.22;	author henning;	state Exp;
branches;
next	1.101;

1.101
date	2003.02.26.14.22.58;	author cedric;	state Exp;
branches;
next	1.100;

1.100
date	2003.02.26.13.39.46;	author henning;	state Exp;
branches;
next	1.99;

1.99
date	2003.02.26.13.29.12;	author henning;	state Exp;
branches;
next	1.98;

1.98
date	2003.02.26.13.25.20;	author henning;	state Exp;
branches;
next	1.97;

1.97
date	2003.02.26.13.19.02;	author henning;	state Exp;
branches;
next	1.96;

1.96
date	2003.02.25.09.06.32;	author cedric;	state Exp;
branches;
next	1.95;

1.95
date	2003.02.24.20.56.56;	author henning;	state Exp;
branches;
next	1.94;

1.94
date	2003.02.23.00.22.11;	author mcbride;	state Exp;
branches;
next	1.93;

1.93
date	2003.02.22.23.26.39;	author mcbride;	state Exp;
branches;
next	1.92;

1.92
date	2003.02.22.19.03.21;	author henning;	state Exp;
branches;
next	1.91;

1.91
date	2003.02.21.20.11.20;	author henning;	state Exp;
branches;
next	1.90;

1.90
date	2003.02.21.17.18.24;	author henning;	state Exp;
branches;
next	1.89;

1.89
date	2003.02.21.17.11.45;	author henning;	state Exp;
branches;
next	1.88;

1.88
date	2003.02.21.17.08.41;	author henning;	state Exp;
branches;
next	1.87;

1.87
date	2003.02.21.10.48.29;	author henning;	state Exp;
branches;
next	1.86;

1.86
date	2003.02.20.00.19.20;	author henning;	state Exp;
branches;
next	1.85;

1.85
date	2003.02.19.23.33.11;	author henning;	state Exp;
branches;
next	1.84;

1.84
date	2003.02.19.23.27.20;	author henning;	state Exp;
branches;
next	1.83;

1.83
date	2003.02.19.23.22.48;	author henning;	state Exp;
branches;
next	1.82;

1.82
date	2003.02.19.23.19.10;	author henning;	state Exp;
branches;
next	1.81;

1.81
date	2003.02.19.23.15.51;	author henning;	state Exp;
branches;
next	1.80;

1.80
date	2003.02.19.23.11.57;	author henning;	state Exp;
branches;
next	1.79;

1.79
date	2003.02.19.22.43.56;	author henning;	state Exp;
branches;
next	1.78;

1.78
date	2003.02.19.19.17.35;	author henning;	state Exp;
branches;
next	1.77;

1.77
date	2003.02.19.16.23.43;	author henning;	state Exp;
branches;
next	1.76;

1.76
date	2003.02.19.16.20.26;	author henning;	state Exp;
branches;
next	1.75;

1.75
date	2003.02.18.19.11.57;	author henning;	state Exp;
branches;
next	1.74;

1.74
date	2003.02.18.18.05.52;	author henning;	state Exp;
branches;
next	1.73;

1.73
date	2003.02.18.17.54.01;	author henning;	state Exp;
branches;
next	1.72;

1.72
date	2003.02.18.17.38.12;	author henning;	state Exp;
branches;
next	1.71;

1.71
date	2003.02.14.22.33.47;	author henning;	state Exp;
branches;
next	1.70;

1.70
date	2003.02.14.17.21.00;	author henning;	state Exp;
branches;
next	1.69;

1.69
date	2003.02.14.10.59.20;	author henning;	state Exp;
branches;
next	1.68;

1.68
date	2003.02.03.15.44.52;	author dhartmei;	state Exp;
branches;
next	1.67;

1.67
date	2003.01.30.15.32.22;	author henning;	state Exp;
branches;
next	1.66;

1.66
date	2003.01.30.15.16.11;	author henning;	state Exp;
branches;
next	1.65;

1.65
date	2003.01.25.20.46.45;	author cedric;	state Exp;
branches;
next	1.64;

1.64
date	2003.01.19.10.03.26;	author camield;	state Exp;
branches;
next	1.63;

1.63
date	2003.01.15.17.08.16;	author cedric;	state Exp;
branches;
next	1.62;

1.62
date	2003.01.14.15.37.29;	author henning;	state Exp;
branches;
next	1.61;

1.61
date	2003.01.14.14.43.31;	author cedric;	state Exp;
branches;
next	1.60;

1.60
date	2003.01.06.11.36.04;	author mcbride;	state Exp;
branches;
next	1.59;

1.59
date	2002.12.19.10.10.35;	author mcbride;	state Exp;
branches;
next	1.58;

1.58
date	2002.12.18.16.49.54;	author dhartmei;	state Exp;
branches;
next	1.57;

1.57
date	2002.12.17.20.08.18;	author henning;	state Exp;
branches;
next	1.56;

1.56
date	2002.12.13.22.07.32;	author henning;	state Exp;
branches;
next	1.55;

1.55
date	2002.12.13.22.03.28;	author henning;	state Exp;
branches;
next	1.54;

1.54
date	2002.12.08.02.18.56;	author henning;	state Exp;
branches;
next	1.53;

1.53
date	2002.12.07.23.25.30;	author dhartmei;	state Exp;
branches;
next	1.52;

1.52
date	2002.12.06.14.29.55;	author dhartmei;	state Exp;
branches;
next	1.51;

1.51
date	2002.12.05.15.01.09;	author markus;	state Exp;
branches;
next	1.50;

1.50
date	2002.12.05.14.14.50;	author henning;	state Exp;
branches;
next	1.49;

1.49
date	2002.12.05.13.43.17;	author markus;	state Exp;
branches;
next	1.48;

1.48
date	2002.12.04.11.35.41;	author henning;	state Exp;
branches;
next	1.47;

1.47
date	2002.12.02.09.43.25;	author deraadt;	state Exp;
branches;
next	1.46;

1.46
date	2002.11.29.17.43.41;	author henning;	state Exp;
branches;
next	1.45;

1.45
date	2002.11.28.12.44.42;	author mcbride;	state Exp;
branches;
next	1.44;

1.44
date	2002.11.27.19.00.21;	author henning;	state Exp;
branches;
next	1.43;

1.43
date	2002.11.25.18.27.51;	author mickey;	state Exp;
branches;
next	1.42;

1.42
date	2002.11.25.16.16.07;	author henning;	state Exp;
branches;
next	1.41;

1.41
date	2002.11.24.20.46.30;	author henning;	state Exp;
branches;
next	1.40;

1.40
date	2002.11.22.16.34.59;	author markus;	state Exp;
branches;
next	1.39;

1.39
date	2002.11.07.17.11.51;	author henning;	state Exp;
branches;
next	1.38;

1.38
date	2002.10.07.13.48.58;	author henning;	state Exp;
branches;
next	1.37;

1.37
date	2002.09.22.15.19.08;	author henning;	state Exp;
branches;
next	1.36;

1.36
date	2002.09.20.09.40.19;	author henning;	state Exp;
branches;
next	1.35;

1.35
date	2002.09.18.14.03.48;	author henning;	state Exp;
branches;
next	1.34;

1.34
date	2002.09.18.13.33.43;	author henning;	state Exp;
branches;
next	1.33;

1.33
date	2002.09.18.12.25.14;	author henning;	state Exp;
branches;
next	1.32;

1.32
date	2002.09.18.08.59.08;	author henning;	state Exp;
branches;
next	1.31;

1.31
date	2002.09.18.08.57.09;	author henning;	state Exp;
branches;
next	1.30;

1.30
date	2002.09.15.17.41.43;	author henning;	state Exp;
branches;
next	1.29;

1.29
date	2002.09.12.11.17.49;	author henning;	state Exp;
branches;
next	1.28;

1.28
date	2002.09.02.20.01.43;	author avsm;	state Exp;
branches;
next	1.27;

1.27
date	2002.07.30.15.01.41;	author henning;	state Exp;
branches;
next	1.26;

1.26
date	2002.07.21.01.37.57;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2002.07.20.19.52.50;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2002.07.15.18.19.37;	author henning;	state Exp;
branches;
next	1.23;

1.23
date	2002.07.08.11.46.32;	author dhartmei;	state Exp;
branches;
next	1.22;

1.22
date	2002.07.06.18.21.50;	author henning;	state Exp;
branches;
next	1.21;

1.21
date	2002.07.06.17.08.41;	author henning;	state Exp;
branches;
next	1.20;

1.20
date	2002.06.25.08.17.16;	author henning;	state Exp;
branches;
next	1.19;

1.19
date	2002.06.11.18.07.49;	author frantzen;	state Exp;
branches;
next	1.18;

1.18
date	2002.06.11.02.16.30;	author kjell;	state Exp;
branches;
next	1.17;

1.17
date	2002.06.10.02.10.39;	author kjell;	state Exp;
branches;
next	1.16;

1.16
date	2002.06.09.02.51.45;	author kjell;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.08.09.43.58;	author kjell;	state Exp;
branches;
next	1.14;

1.14
date	2002.06.07.18.36.54;	author frantzen;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.18.13.08.51;	author art;	state Exp;
branches;
next	1.12;

1.12
date	2002.01.01.23.05.30;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.26.16.53.27;	author jasoni;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.07.11.56.58;	author dhartmei;	state Exp;
branches;
next	1.9;

1.9
date	2001.09.15.23.25.23;	author wilfried;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.06.18.45.13;	author jasoni;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.04.13.58.49;	author dhartmei;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.28.12.17.04;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.25.21.54.26;	author frantzen;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.23.04.29.57;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.19.16.31.06;	author dhartmei;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.31.09.02.18;	author wilfried;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.26.14.33.45;	author markus;	state Exp;
branches;
next	;


desc
@@


1.227
log
@add option -N (no domain resolution)
manpage wording and reminder about usage() jmc@@
ok florian@@ henning@@
@
text
@# $OpenBSD: Makefile,v 1.226 2017/07/19 13:02:46 mikeb Exp $

# TARGETS
# pf: feed pfNN.in through pfctl and check whether the output matches pfNN.ok
# selfpf: feed pfctl output through pfctl again and verify it stays the same
# pfail: invalid rulesets pfctl must reject; pfailNN.in and pfailNN.ok
# pfsetup: set up lo1 and perform more tests
# pfr: table tests
# pfsimple: just check whether pfctl accepts a given ruleset, not checking output
# pfload: load ruleset into anchor regress and verify pfctl -vvsr
# pfoptimize: as pfload, with -o flag to pfctl
# pfopt: as target pf, but supply extra command line options
# pfcmd: test pfctl command line parsing

PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
PFTESTS+=28 29 30 31 32 34 35 36 38 39 40 41 44 46 47 48 49 50
PFTESTS+=52 53 54 55 56 57 60 61 65 66 67 68 69 70 71 72 73
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
PFTESTS+=97 98 99 100 101 102 103 104 105 106 107 108 109 110 111
PFFAIL=1 2 3 4 5 6 7 8 11 12 13 14 15 16 17 19 20 23 25 27
PFFAIL+=30 37 38 39 40 41 42 43 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
PFSIMPLE=1 2
PFSETUP=1 4
PFLOAD=1 2 3 4 5 7 8 9 10 11 12 13 14 15 16 17 18 19 20 23 24 25 26 27 28 29
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 48 49 54 56 60 61 65 66 67 68 69 70 71
PFLOAD+=72 73 74 75 76 77 78 79 80 81 82 84 87 88 89 90 91 92 99 100 101
PFTABLE=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
PFOPT=1 2 6
PFIF2IP=1 2 3
PFCHKSUM=1 2 3
PFCMD=1
PFCMDFAIL=1

MAKEOBJDIRPREFIX=

SHELL=/bin/sh

.MAIN: all

.ifmake !obj && !clean && !cleandir && !regress
.if (${.TARGET} != all && ! make(all)) || (${.TARGET} == all)
.BEGIN:
	-${SUDO} ifconfig lo1000000 create
	-${SUDO} ifconfig tun1000000 create
	-${SUDO} ifconfig tun1000001 create

.END:
	-${SUDO} ifconfig lo1000000 destroy
	-${SUDO} ifconfig tun1000000 destroy
	-${SUDO} ifconfig tun1000001 destroy

.INTERRUPT:
	-${SUDO} ifconfig lo1000000 destroy
	-${SUDO} ifconfig lo1000010 destroy
	-${SUDO} ifconfig tun1000000 destroy
	-${SUDO} ifconfig tun1000001 destroy
.endif
.endif

.for n in ${PFFAIL}
PFAIL_TARGETS+=pfail${n}
PFAIL_UPDATES+=pfail${n}-update

pfail${n}:
	pfctl -o none -nv -f - < ${.CURDIR}/pfail${n}.in 2>&1 | \
	    diff -u ${.CURDIR}/pfail${n}.ok /dev/stdin

pfail${n}-update:
	if pfctl -o none -nv -f - < ${.CURDIR}/pfail${n}.in > \
	    ${.CURDIR}/pfail${n}.ok 2>&1; then \
		true; \
	fi;
	
.endfor

pfail:		${PFAIL_TARGETS}
pfail-update:	${PFAIL_UPDATES}
REGRESS_TARGETS+=pfail
UPDATE_TARGETS+=pfail-update

.for n in ${PFTESTS}
PF_TARGETS+=pf${n}
PF_UPDATES+=pf${n}-update

pf${n}:
	pfctl -o none -nv -f - < ${.CURDIR}/pf${n}.in | \
	    diff -u ${.CURDIR}/pf${n}.ok /dev/stdin

pf${n}-update:
	pfctl -o none -nv -f - < ${.CURDIR}/pf${n}.in > ${.CURDIR}/pf${n}.ok

SELFPF_TARGETS+=selfpf${n}
selfpf${n}:
	pfctl -o none -nv -f - < ${.CURDIR}/pf${n}.ok | \
	    diff -u ${.CURDIR}/pf${n}.ok /dev/stdin

.endfor

pf:		${PF_TARGETS}
selfpf:		${SELFPF_TARGETS}
pf-update:	${PF_UPDATES}
REGRESS_TARGETS+=pf-include-setup pf
REGRESS_TARGETS+=selfpf
UPDATE_TARGETS+=pf-update

pf-include-setup:
	-cp ${.CURDIR}/pf95.include ${.OBJDIR}
	chmod og-rwx ${.OBJDIR}/pf95.include
	-cp ${.CURDIR}/pf103.include ${.OBJDIR}
	chmod og-rwx ${.OBJDIR}/pf103.include

.for n in ${PFSIMPLE}
PFSIMPLE_TARGETS+=pfsimple${n}

pfsimple${n}:
	pfctl -o none -nf - < ${.CURDIR}/pfsimple${n}.in

.endfor

pfsimple:	${PFSIMPLE_TARGETS}
REGRESS_TARGETS+=pfsimple

.for n in ${PFLOAD}
PFLOAD_TARGETS+=pfload${n}
PFLOAD_UPDATES+=pfload${n}-update

pfload${n}:
	${SUDO} pfctl -o none -a regress -f - < ${.CURDIR}/pf${n}.in
	(${SUDO} pfctl -o none -a 'regress/*' -gvvsr | \
	    sed -e 's/__automatic_[0-9a-f]*_/__automatic_/g' ) | \
	    diff -u ${.CURDIR}/pf${n}.loaded /dev/stdin
	${SUDO} pfctl -o none -a regress -Fr >/dev/null 2>&1

pfload${n}-update:
	${SUDO} pfctl -o none -a regress -f - < ${.CURDIR}/pf${n}.in
	(${SUDO} pfctl -o none -a 'regress/*' -gvvsr | \
	    sed -e 's/__automatic_[0-9a-f]*_/__automatic_/g' ) \
	    > ${.CURDIR}/pf${n}.loaded
	${SUDO} pfctl -o none -a regress -Fr >/dev/null 2>&1

.endfor

pfload:		${PFLOAD_TARGETS}
pfload-update:	${PFLOAD_UPDATES}
REGRESS_TARGETS+=pfload
REGRESS_ROOT_TARGETS+=pfload
UPDATE_TARGETS+=pfload-update

.for n in ${PFLOAD}
PFOPTIMIZE_TARGETS+=pfoptimize${n}
PFOPTIMIZE_UPDATES+=pfoptimize${n}-update

pfoptimize${n}:
	${SUDO} pfctl -obasic -a regress -f - < ${.CURDIR}/pf${n}.in
	(${SUDO} pfctl -o none -a regress -gvvsr | \
	    sed -e 's/__automatic_[0-9a-f]*_/__automatic_/g') | \
	    diff -u ${.CURDIR}/pf${n}.optimized /dev/stdin
	${SUDO} pfctl -o none -a regress -Fr >/dev/null 2>&1

pfoptimize${n}-update:
	${SUDO} pfctl -obasic -a regress -f - < ${.CURDIR}/pf${n}.in
	(${SUDO} pfctl -o none -a regress -gvvsr | \
	    sed -e 's/__automatic_[0-9a-f]*_/__automatic_/g' ) \
	    > ${.CURDIR}/pf${n}.optimized
	${SUDO} pfctl -o none -a regress -Fr >/dev/null 2>&1

.endfor

pfoptimize:		${PFOPTIMIZE_TARGETS}
pfoptimize-update:	${PFOPTIMIZE_UPDATES}
REGRESS_TARGETS+=pfoptimize
REGRESS_ROOT_TARGETS+=pfoptimize
UPDATE_TARGETS+=pfoptimize-update

.for n in ${PFTABLE}
PFR_TARGETS+=pfr${n}
PFR_UPDATES+=pfr${n}-update

pfr${n}:
	${SUDO} /bin/ksh ${.CURDIR}/pfr.exec ${.CURDIR}/pfr${n}.in | \
	    diff -u ${.CURDIR}/pfr${n}.ok /dev/stdin

pfr${n}-update:
	${SUDO} /bin/ksh ${.CURDIR}/pfr.exec ${.CURDIR}/pfr${n}.in > \
	    ${.CURDIR}/pfr${n}.ok

.endfor

pfr:		${PFR_TARGETS}
pfr-update:	${PFR_UPDATES}
NODEFAULT_TARGETS+=pfr
REGRESS_ROOT_TARGETS+=pfr

.for n in ${PFIF2IP}
PFI_TARGETS+=pfi${n}
PFI_UPDATES+=pfi${n}-update

pfi${n}:
	xargs ${SUDO} /bin/ksh ${.CURDIR}/if2ip <${.CURDIR}/pfi${n}.in | \
            diff -u ${.CURDIR}/pfi${n}.ok /dev/stdin

pfi${n}-update:
	xargs ${SUDO} /bin/ksh ${.CURDIR}/if2ip <${.CURDIR}/pfi${n}.in \
	    > ${.CURDIR}/pfi${n}.ok

.endfor

pfi:            ${PFI_TARGETS}
pfi-update:     ${PFI_UPDATES}
REGRESS_TARGETS+=pfi
REGRESS_ROOT_TARGETS+=pfi
UPDATE_TARGETS+=pfi-update

.for n in ${PFOPT}
PFOPT_TARGETS+=pfopt${n}
PFOPT_UPDATES+=pfopt${n}-update

pfopt${n}:
	pfctl -o none -nv -f - `cat ${.CURDIR}/pfopt${n}.opts` \
	    < ${.CURDIR}/pfopt${n}.in | \
	    diff -u ${.CURDIR}/pfopt${n}.ok /dev/stdin

pfopt${n}-update:
	pfctl -o none -nv -f - `cat ${.CURDIR}/pfopt${n}.opts` \
	    < ${.CURDIR}/pfopt${n}.in > ${.CURDIR}/pfopt${n}.ok

.endfor

pfopt:		${PFOPT_TARGETS}
pfopt-update:	${PFOPT_UPDATES}
REGRESS_TARGETS+=pfopt
UPDATE_TARGETS+=pfopt-update

.for n in ${PFCMD}
PFCMD_TARGETS+=pfcmd${n}
PFCMD_UPDATES+=pfcmd${n}-update

pfcmd${n}:
	${SUDO} pfctl `cat ${.CURDIR}/pfcmd${n}.opts` \
	    -f ${.CURDIR}/pfcmd${n}.in

pfcmd${n}-update:
	${SUDO} pfctl -f - `cat ${.CURDIR}/pfcmd${n}.opts` \
	    < ${.CURDIR}/pfcmd${n}.in > ${.CURDIR}/pfcmd${n}.ok

.endfor

pfcmd:		${PFCMD_TARGETS}
pfcmd-update:	${PFCMD_UPDATES}
NODEFAULT_TARGETS+=pfcmd
REGRESS_TARGETS+=pfcmd

REGRESS_ROOT_TARGETS+=pfcmd
UPDATE_TARGETS+=pfcmd-update

.for n in ${PFCMDFAIL}
PFCMDFAIL_TARGETS+=pfcmdfail${n}
PFCMDFAIL_UPDATES+=pfcmdfail${n}-update

pfcmdfail${n}:
	${SUDO} pfctl `cat ${.CURDIR}/pfcmdfail${n}.opts` \
	    -f - < ${.CURDIR}/pfcmdfail${n}.in 2>&1 | \
            diff -u ${.CURDIR}/pfcmdfail${n}.ok /dev/stdin

pfcmdfail${n}-update:
	if ${SUDO} pfctl `cat ${.CURDIR}/pfcmdfail${n}.opts` \
	    -f - < ${.CURDIR}/pfcmdfail${n}.in > \
	    ${.CURDIR}/pfcmdfail${n}.ok 2>&1; then \
		true; \
	fi;

.endfor

pfcmdfail:		${PFCMDFAIL_TARGETS}
pfcmdfail-update:	${PFCMDFAIL_UPDATES}
NODEFAULT_TARGETS+=pfcmdfail
REGRESS_TARGETS+=pfcmdfail

REGRESS_ROOT_TARGETS+=pfcmd
UPDATE_TARGETS+=pfcmd-update

.for n in ${PFSETUP}
PFSETUP_TARGETS+=pfsetup${n}
PFSETUP_UPDATES+=pfsetup${n}-update

pfsetup${n}:
	${SUDO} ${SHELL} ${.CURDIR}/pfsetup${n}.setup
	pfctl -o none -nv -f - < ${.CURDIR}/pfsetup${n}.in | \
	    diff -u ${.CURDIR}/pfsetup${n}.ok /dev/stdin
	${SUDO} ${SHELL} ${.CURDIR}/pfsetup${n}.clean

pfsetup${n}-update:
	${SUDO} ${SHELL} ${.CURDIR}/pfsetup${n}.setup
	pfctl -o none -nv -f - < ${.CURDIR}/pfsetup${n}.in \
	    > ${.CURDIR}/pfsetup${n}.ok
	${SUDO} ${SHELL} ${.CURDIR}/pfsetup${n}.clean

.endfor

pfsetup:	${PFSETUP_TARGETS}
pfsetup-update:	${PFSETUP_UPDATES}

NODEFAULT_TARGETS+=pfsetup
REGRESS_ROOT_TARGETS+=pfsetup

.for n in ${PFCHKSUM}
PFCHKSUM_TARGETS+=pfchksum${n}
PFCHKSUM_UPDATES+=pfchksum${n}-update

pfchksum${n}:
	${SUDO} pfctl -o none -Fa >/dev/null 2>&1
	${SUDO} pfctl -o none -f - < ${.CURDIR}/pfchksum${n}.in
	${SUDO} pfctl -o none -vsi | grep '^Checksum:' | \
		 diff -u ${.CURDIR}/pfchksum${n}.ok /dev/stdin
	${SUDO} pfctl -o none -Fa >/dev/null 2>&1

pfchksum${n}-update:
	${SUDO} pfctl -o none -Fa >/dev/null 2>&1
	${SUDO} pfctl -o none -f - < ${.CURDIR}/pfchksum${n}.in
	${SUDO} pfctl -o none -vsi | grep '^Checksum:' > ${.CURDIR}/pfchksum${n}.ok
	${SUDO} pfctl -o none -Fa >/dev/null 2>&1

.endfor

pfchksum:		${PFCHKSUM_TARGETS}
pfchksum-update:	${PFCHKSUM_UPDATES}

NODEFAULT_TARGETS+=pfchksum
REGRESS_ROOT_TARGETS+=pfchksum

update:	${UPDATE_TARGETS}

alltests: ${REGRESS_TARGETS} ${NODEFAULT_TARGETS}

.PHONY: ${REGRESS_TARGETS}

.include <bsd.regress.mk>
@


1.226
log
@Regression tests asserting various HFSC and FQ-CoDel functionality
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.225 2017/07/07 23:55:21 bluhm Exp $
d32 1
d252 26
@


1.225
log
@Remove all references to "make depend" from regress.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.224 2016/09/30 14:27:52 otto Exp $
d19 1
a19 1
PFTESTS+=97 98 99 100 101 102 103 104
d21 1
a21 1
PFFAIL+=30 37 38 39 40 41 42 43 47 48 49 50 51 52 53 54 55 56
@


1.224
log
@also copy pf103.include to obj dir
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.223 2015/05/19 17:16:20 mikeb Exp $
d39 1
a39 1
.ifmake !obj && !clean && !cleandir && !depend && !regress
@


1.223
log
@Test divert-to rules' address handling (pfctl/parse.y -r1.648)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.222 2014/11/13 17:35:30 pelikan Exp $
d108 2
@


1.222
log
@keep queues around when anchors are being loaded

ok mikeb
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.221 2014/10/28 19:03:03 benno Exp $
d19 1
a19 1
PFTESTS+=97 98 99 100 101 102 103
d21 1
a21 1
PFFAIL+=30 37 38 39 40 41 42 43 47 48 49 50 51 52 53 54
@


1.221
log
@add a regression test for the pfctl parser bug recently fixed by
mikeb@@ in pfctl/parse.y rev 1.641.
with feedback from mikeb sthen and henning
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.220 2014/08/23 00:11:03 pelikan Exp $
d19 1
a19 1
PFTESTS+=97 98 99 100 101 102
@


1.220
log
@when you specify queues in a rule, make sure they have been defined.

DIOCADDRULE EBUSY turns into an error message that pfctl -n catches.
DIOCXCOMMIT EINVAL after the kernel rejected the rules was reported
to occur, possibly from hfsc.c: this should be fixed as well.

ok henning mikeb sthen
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.219 2014/04/18 10:48:23 henning Exp $
d19 1
a19 1
PFTESTS+=97 98 99 100 101
@


1.219
log
@stop testing altq stuffz
how many tests I wrote back then... (of which the majority is pointless)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.217 2011/07/24 01:22:11 mcbride Exp $
d21 1
a21 1
PFFAIL+=30 37 38 39 40 41 42 43 47 48 49 50 51 52 53
@


1.218
log
@Update regress tests for weighted round-robin (and recent pool bugfix)
@
text
@d16 2
a17 2
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
PFTESTS+=52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
d20 2
a21 2
PFFAIL=1 2 3 4 5 6 7 8 11 12 13 14 15 16 17 18 19 20 23 25 27
PFFAIL+=29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
d23 1
a23 1
PFSETUP=1 2 3 4
a26 5
PFALTQ=1 2 3 4 5 6 7 8 9 10 11 12 13 14
# disabled; no altq in anchors
# PFLOAD+=33 35 37 42 43 45 51 58 59 62 63 64
# only testing parser, load test would be useless
# PFLOAD+=6 22 41 50 52 53 55 57 83 85 86
d28 1
a28 1
PFOPT=1 2 3 6
a275 27

.for n in ${PFALTQ}
PFALTQ_TARGETS+=pfaltq${n}
PFALTQ_UPDATES+=pfaltq${n}-update

pfaltq${n}:
	${SUDO} pfctl -o none -Fa >/dev/null 2>&1
	${SUDO} pfctl -o none -f - < ${.CURDIR}/pfaltq${n}.in
	( ${SUDO} pfctl -o none -gsq; \
	${SUDO} pfctl -o none -gsr ) | \
	    diff -u ${.CURDIR}/pfaltq${n}.ok /dev/stdin
	${SUDO} pfctl -o none -Fa >/dev/null 2>&1

pfaltq${n}-update:
	${SUDO} pfctl -o none -Fa >/dev/null 2>&1
	${SUDO} pfctl -o none -f - < ${.CURDIR}/pfaltq${n}.in
	( ${SUDO} pfctl -o none -gsq; \
	${SUDO} pfctl -o none -gsr ) > ${.CURDIR}/pfaltq${n}.ok
	${SUDO} pfctl -o none -Fa >/dev/null 2>&1

.endfor

pfaltq:		${PFALTQ_TARGETS}
pfaltq-update:	${PFALTQ_UPDATES}

NODEFAULT_TARGETS+=pfaltq
REGRESS_ROOT_TARGETS+=pfaltq
@


1.217
log
@Update PF table regress tests to work with -current.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.216 2011/07/08 21:57:48 mcbride Exp $
d32 1
a32 1
PFTABLE=1 2 3 4 5 6 7 8 9 10 11 12 13
@


1.216
log
@Add regress tests for 'prio' keyword.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.215 2011/07/07 01:58:12 mcbride Exp $
d32 1
a32 1
PFTABLE=1 2 3 4 5 6 7 8 9 10 11 12 13 14
@


1.215
log
@Regress test cleanup step 1 of n: require-order no longer exists.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.215 2011/07/07 01:48:12 mcbride Exp $
d19 1
a19 1
PFTESTS+=97 98 99 100
d21 1
a21 1
PFFAIL+=29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 52 53
d26 1
a26 1
PFLOAD+=72 73 74 75 76 77 78 79 80 81 82 84 87 88 89 90 91 92 99 100
@


1.214
log
@add several new tests for pfctl, and fix the output of some existing
tests for the updated pfctl.

OK henning@@, mcbride@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.212 2010/06/30 21:18:06 sthen Exp $
d17 1
a17 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
d37 2
@


1.213
log
@if we cannot copy the setup file (because objdir doesn't exist), then
continue anyways.
@
text
@d13 1
d19 1
a19 1
PFTESTS+=97 98 99
d26 1
a26 1
PFLOAD+=72 73 74 75 76 77 78 79 80 81 82 84 87 88 89 90 91 92 99
d32 1
a32 1
PFTABLE=1 2 3 4 5 6 7 8 9 10 11 12 13
d36 1
d233 22
@


1.212
log
@Add a test for route labels, re PR6416. ok phessler@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.211 2010/06/20 20:35:06 phessler Exp $
d107 1
a107 1
	cp ${.CURDIR}/pf95.include ${.OBJDIR}
@


1.211
log
@The -R option was removed from pfctl in March, so we no longer need this
test.  The remaining pieces are all tested in other regress tests.

OK sthen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.210 2010/05/10 02:00:50 krw Exp $
d18 1
a18 1
PFTESTS+=97 98
d25 1
a25 1
PFLOAD+=72 73 74 75 76 77 78 79 80 81 82 84 87 88 89 90 91 92
@


1.210
log
@Various comment typos. 'wether' -> 'whether' (most popular), 'possiblity' ->
'possibility', 'optins' -> 'options', 'resposne' -> 'response', 'unecessary' -> 'unnecessary', 'desination' -> 'destination'. Collected from various misc@@
and tech@@ postings, many by Brad Tilley.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.209 2010/01/13 00:52:14 mcbride Exp $
d32 1
a32 1
PFOPT=1 2 3 5 6
@


1.209
log
@Remove random component of auto-generated table names in loaded rules.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.208 2009/09/24 11:04:10 jsg Exp $
d4 1
a4 1
# pf: feed pfNN.in through pfctl and check wether the output matches pfNN.ok
d9 1
a9 1
# pfsimple: just check wether pfctl accepts a given ruleset, not checking output
@


1.208
log
@Remove some tests that are no longer relevant with the new pf.
ok henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.207 2009/09/03 12:38:32 jsg Exp $
d127 2
a128 1
	(${SUDO} pfctl -o none -a 'regress/*' -gvvsr) | \
d134 3
a136 1
	(${SUDO} pfctl -o none -a 'regress/*' -gvvsr) > ${.CURDIR}/pf${n}.loaded
d153 2
a154 1
	(${SUDO} pfctl -o none -a regress -gvvsr) | \
d160 3
a162 1
	(${SUDO} pfctl -o none -a regress -gvvsr) > ${.CURDIR}/pf${n}.optimized
@


1.207
log
@Adapt to new pfctl, remove use of -Fn and -sn
Thanks to phessler for pointing out that the show command was
buried in '-gvvsn'

ok henning
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.206 2009/09/03 12:07:56 jsg Exp $
d19 2
a20 2
PFFAIL=1 2 3 4 5 6 7 8 11 12 13 14 15 16 17 18 19 20 23 24 25 27
PFFAIL+=28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
@


1.206
log
@adapt to nat changes
ok henning
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.205 2009/05/14 22:57:18 sthen Exp $
d127 1
a127 2
	(${SUDO} pfctl -o none -a 'regress/*' -gvvsn; \
	${SUDO} pfctl -o none -a 'regress/*' -gvvsr) | \
a128 1
	${SUDO} pfctl -o none -a regress -Fn >/dev/null 2>&1
d133 1
a133 3
	(${SUDO} pfctl -o none -a 'regress/*' -gvvsn; \
	${SUDO} pfctl -o none -a 'regress/*' -gvvsr) > ${.CURDIR}/pf${n}.loaded
	${SUDO} pfctl -o none -a regress -Fn >/dev/null 2>&1
d150 1
a150 2
	(${SUDO} pfctl -o none -a regress -gvvsn; \
	${SUDO} pfctl -o none -a regress -gvvsr) | \
a151 1
	${SUDO} pfctl -o none -a regress -Fn >/dev/null 2>&1
d156 1
a156 3
	(${SUDO} pfctl -o none -a regress -gvvsn; \
	${SUDO} pfctl -o none -a regress -gvvsr) > ${.CURDIR}/pf${n}.optimized
	${SUDO} pfctl -o none -a regress -Fn >/dev/null 2>&1
@


1.205
log
@handle the new require-order default of "no" in existing tests, and add
a new test to check it's working correctly.  ok deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.204 2009/04/06 12:41:47 henning Exp $
d19 1
a19 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 23 24 25 27
d32 1
a32 1
PFOPT=1 2 3 4 5 6
@


1.204
log
@scrub gone
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.203 2008/05/09 02:44:55 markus Exp $
d18 1
a18 1
PFTESTS+=97
@


1.203
log
@divert packets to local socket without modifying the ip header;
makes transparent proxies much easier; ok beck@@, feedback claudio@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.202 2008/05/08 00:44:57 mpf Exp $
d23 1
a23 1
PFLOAD=1 2 3 4 5 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29
@


1.202
log
@Add/Fix regression tests for sequences of numbers and stacked
assignments of variables.
OK deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.201 2007/10/14 21:52:14 deraadt Exp $
d18 1
@


1.201
log
@regression test for include directive (if anyone has a better way to do
this messy include file copy, let me know)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.200 2007/10/13 16:54:43 deraadt Exp $
d17 1
a17 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
@


1.200
log
@we decided numbers used as strings is wrong
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.199 2007/09/23 21:00:00 mpf Exp $
d17 1
a17 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
d101 1
a101 1
REGRESS_TARGETS+=pf
d104 4
@


1.199
log
@Allow numbers to be used as unquoted strings again.
While there, also restrict the use of concatenated, unquoted
strings for variable assignments only.

Eyeballed by markus@@, OK henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.198 2007/09/19 22:45:04 mpf Exp $
d17 1
a17 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
d19 1
a19 1
PFFAIL+=28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
@


1.198
log
@Fix and re-enable tests for interface->address translation.
OK henning
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.197 2007/08/30 12:24:28 dhartmei Exp $
d17 1
a17 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
@


1.197
log
@regress test address ranges
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.195 2006/11/28 17:03:03 henning Exp $
d205 3
a207 3
# REGRESS_TARGETS+=pfi
# REGRESS_ROOT_TARGETS+=pfi
# UPDATE_TARGETS+=pfi-update
@


1.196
log
@now that optimization is on by default, fix the regress tests by
disabling optimization for the non-optimized tests, ok henning@@
@
text
@d17 1
a17 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
@


1.195
log
@very basic regress test for rtable select code
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.194 2006/11/07 06:18:10 mcbride Exp $
d64 1
a64 1
	pfctl -nv -f - < ${.CURDIR}/pfail${n}.in 2>&1 | \
d68 1
a68 1
	if pfctl -nv -f - < ${.CURDIR}/pfail${n}.in > \
d85 1
a85 1
	pfctl -nv -f - < ${.CURDIR}/pf${n}.in | \
d89 1
a89 1
	pfctl -nv -f - < ${.CURDIR}/pf${n}.in > ${.CURDIR}/pf${n}.ok
d93 1
a93 1
	pfctl -nv -f - < ${.CURDIR}/pf${n}.ok | \
d109 1
a109 1
	pfctl -nf - < ${.CURDIR}/pfsimple${n}.in
d121 3
a123 3
	${SUDO} pfctl -a regress -f - < ${.CURDIR}/pf${n}.in
	(${SUDO} pfctl -a 'regress/*' -gvvsn; \
	${SUDO} pfctl -a 'regress/*' -gvvsr) | \
d125 2
a126 2
	${SUDO} pfctl -a regress -Fn >/dev/null 2>&1
	${SUDO} pfctl -a regress -Fr >/dev/null 2>&1
d129 5
a133 5
	${SUDO} pfctl -a regress -f - < ${.CURDIR}/pf${n}.in
	(${SUDO} pfctl -a 'regress/*' -gvvsn; \
	${SUDO} pfctl -a 'regress/*' -gvvsr) > ${.CURDIR}/pf${n}.loaded
	${SUDO} pfctl -a regress -Fn >/dev/null 2>&1
	${SUDO} pfctl -a regress -Fr >/dev/null 2>&1
d148 3
a150 3
	${SUDO} pfctl -o -a regress -f - < ${.CURDIR}/pf${n}.in
	(${SUDO} pfctl -a regress -gvvsn; \
	${SUDO} pfctl -a regress -gvvsr) | \
d152 2
a153 2
	${SUDO} pfctl -a regress -Fn >/dev/null 2>&1
	${SUDO} pfctl -a regress -Fr >/dev/null 2>&1
d156 5
a160 5
	${SUDO} pfctl -o -a regress -f - < ${.CURDIR}/pf${n}.in
	(${SUDO} pfctl -a regress -gvvsn; \
	${SUDO} pfctl -a regress -gvvsr) > ${.CURDIR}/pf${n}.optimized
	${SUDO} pfctl -a regress -Fn >/dev/null 2>&1
	${SUDO} pfctl -a regress -Fr >/dev/null 2>&1
d214 1
a214 1
	pfctl -nv -f - `cat ${.CURDIR}/pfopt${n}.opts` \
d219 1
a219 1
	pfctl -nv -f - `cat ${.CURDIR}/pfopt${n}.opts` \
d235 1
a235 1
	pfctl -nv -f - < ${.CURDIR}/pfsetup${n}.in | \
d241 1
a241 1
	pfctl -nv -f - < ${.CURDIR}/pfsetup${n}.in \
d258 4
a261 4
	${SUDO} pfctl -Fa >/dev/null 2>&1
	${SUDO} pfctl -f - < ${.CURDIR}/pfaltq${n}.in
	( ${SUDO} pfctl -gsq; \
	${SUDO} pfctl -gsr ) | \
d263 1
a263 1
	${SUDO} pfctl -Fa >/dev/null 2>&1
d266 5
a270 5
	${SUDO} pfctl -Fa >/dev/null 2>&1
	${SUDO} pfctl -f - < ${.CURDIR}/pfaltq${n}.in
	( ${SUDO} pfctl -gsq; \
	${SUDO} pfctl -gsr ) > ${.CURDIR}/pfaltq${n}.ok
	${SUDO} pfctl -Fa >/dev/null 2>&1
d285 3
a287 3
	${SUDO} pfctl -Fa >/dev/null 2>&1
	${SUDO} pfctl -f - < ${.CURDIR}/pfchksum${n}.in
	${SUDO} pfctl -vsi | grep '^Checksum:' | \
d289 1
a289 1
	${SUDO} pfctl -Fa >/dev/null 2>&1
d292 4
a295 4
	${SUDO} pfctl -Fa >/dev/null 2>&1
	${SUDO} pfctl -f - < ${.CURDIR}/pfchksum${n}.in
	${SUDO} pfctl -vsi | grep '^Checksum:' > ${.CURDIR}/pfchksum${n}.ok
	${SUDO} pfctl -Fa >/dev/null 2>&1
@


1.194
log
@Use anchor recursion when printing loaded ruleset (make certain that recursion
works and catch some other potential anchor weirdnesses). Non recursive
printing still tested in pfopt6.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.193 2006/11/07 05:31:26 mcbride Exp $
d17 1
a17 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
@


1.193
log
@Add test for -a with nested anchors.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.192 2006/11/07 01:14:17 mcbride Exp $
d122 2
a123 2
	(${SUDO} pfctl -a regress -gvvsn; \
	${SUDO} pfctl -a regress -gvvsr) | \
d130 2
a131 2
	(${SUDO} pfctl -a regress -gvvsn; \
	${SUDO} pfctl -a regress -gvvsr) > ${.CURDIR}/pf${n}.loaded
@


1.192
log
@Add regress tests for inline anchors.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.191 2006/10/25 14:30:46 henning Exp $
d31 1
a31 1
PFOPT=1 2 3 4 5
@


1.191
log
@test logging to alternate pflog interfaces
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.190 2005/05/28 19:45:49 mpf Exp $
d17 1
a17 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
d24 1
a24 1
PFLOAD+=72 73 74 75 76 77 78 79 80 81 82 84 87 88 89 90
@


1.190
log
@pfail test for "log-all"
ok dhartmei@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.189 2005/05/28 00:55:56 mpf Exp $
d17 1
a17 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
d24 1
a24 1
PFLOAD+=72 73 74 75 76 77 78 79 80 81 82 84 87 88 89
@


1.189
log
@Set default test shell to /bin/sh.
Also destroy lo1000010 at interrupt.
ok henning@@ mcbride@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.187 2005/05/26 20:22:29 camield Exp $
d19 1
a19 1
PFFAIL+=28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
@


1.188
log
@regression tests for pf checksum.
ok mcbride@@
@
text
@d35 2
d53 1
@


1.187
log
@nat pass log tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.186 2005/04/22 11:08:32 camield Exp $
d33 1
d276 25
@


1.186
log
@test bad flag combinations
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.185 2005/01/27 15:30:35 dhartmei Exp $
d19 1
a19 1
PFFAIL+=28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
@


1.185
log
@dynamic interface names must start with a letter. catches the nonsensical
"(10.1.2.3)" that results from a simple typo like "$(ext_ip)" instead of
"$(ext_if)".
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.184 2004/12/29 06:09:11 david Exp $
d19 1
a19 1
PFFAIL+=28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
@


1.184
log
@define REGRESS_ROOT_TARGETS for the tests that require root privileges
(will only run these particular tests if root or SUDO is defined)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.183 2004/12/07 21:32:00 mcbride Exp $
d19 1
a19 1
PFFAIL+=28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
@


1.183
log
@Tests for max-src-conn, max-src-conn-rate, and overload <foo> flush global.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.182 2004/10/05 18:33:44 mcbride Exp $
d136 1
d163 1
d183 1
d202 1
d247 1
d274 1
@


1.182
log
@Regress tests for pfctl -o rule reordering and duplicate rule removal.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.181 2004/10/01 23:19:17 mcbride Exp $
d17 1
a17 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
d24 1
a24 1
PFLOAD+=72 73 74 75 76 77 78 79 80 81 82 84 87 88
@


1.181
log
@First pass at doing regress tests on the optimizer (pfctl -o).
Still need to add some more input files to test specific corner cases.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.180 2004/07/03 19:31:34 henning Exp $
d17 1
a17 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85 86
d24 1
a24 1
PFLOAD+=72 73 74 75 76 77 78 79 80 81 82 84
d29 1
a29 1
# PFLOAD+=6 22 41 50 52 53 55 57 83 85
d162 1
@


1.180
log
@pfctl can finally run as non-root again, so we can get rid of a lot of ${SUDO}s
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.179 2004/06/29 22:14:30 henning Exp $
d11 1
d137 25
@


1.179
log
@cope with pfctl changes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.178 2004/05/21 23:10:49 dhartmei Exp $
d59 1
a59 1
	${SUDO} pfctl -nv -f - < ${.CURDIR}/pfail${n}.in 2>&1 | \
d63 1
a63 1
	if ${SUDO} pfctl -nv -f - < ${.CURDIR}/pfail${n}.in > \
d80 1
a80 1
	${SUDO} pfctl -nv -f - < ${.CURDIR}/pf${n}.in | \
d84 1
a84 1
	${SUDO} pfctl -nv -f - < ${.CURDIR}/pf${n}.in > ${.CURDIR}/pf${n}.ok
d88 1
a88 1
	${SUDO} pfctl -nv -f - < ${.CURDIR}/pf${n}.ok | \
d104 1
a104 1
	${SUDO} pfctl -nf - < ${.CURDIR}/pfsimple${n}.in
d179 1
a179 1
	${SUDO} pfctl -nv -f - `cat ${.CURDIR}/pfopt${n}.opts` \
d184 1
a184 1
	${SUDO} pfctl -nv -f - `cat ${.CURDIR}/pfopt${n}.opts` \
d200 1
a200 1
	${SUDO} pfctl -nv -f - < ${.CURDIR}/pfsetup${n}.in | \
d206 1
a206 1
	${SUDO} pfctl -nv -f - < ${.CURDIR}/pfsetup${n}.in \
@


1.178
log
@Use '/' instead of ':' as separator for anchor path components. Note that
the parser now needs quotes around paths containing separators.
ok mcbride@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.177 2004/02/24 21:09:06 mcbride Exp $
d17 2
a18 2
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 27
PFFAIL+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
d171 2
a172 2
REGRESS_TARGETS+=pfi
UPDATE_TARGETS+=pfi-update
@


1.177
log
@Test for error with 'source-track global'/'max-src-nodes' combo.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.176 2004/02/18 20:15:49 mcbride Exp $
d10 1
a10 1
# pfload: load ruleset into anchor regress:regress and verify pfctl -vvsr
d17 1
a17 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
d116 3
a118 3
	${SUDO} pfctl -a regress:regress -f - < ${.CURDIR}/pf${n}.in
	(${SUDO} pfctl -a regress:regress -gvvsn; \
	${SUDO} pfctl -a regress:regress -gvvsr) | \
d120 2
a121 2
	${SUDO} pfctl -a regress:regress -Fn >/dev/null 2>&1
	${SUDO} pfctl -a regress:regress -Fr >/dev/null 2>&1
d124 5
a128 5
	${SUDO} pfctl -a regress:regress -f - < ${.CURDIR}/pf${n}.in
	(${SUDO} pfctl -a regress:regress -gvvsn; \
	${SUDO} pfctl -a regress:regress -gvvsr) > ${.CURDIR}/pf${n}.loaded
	${SUDO} pfctl -a regress:regress -Fn >/dev/null 2>&1
	${SUDO} pfctl -a regress:regress -Fr >/dev/null 2>&1
@


1.176
log
@Make sure interface cleanup and setup are only run once, and clean up if we
interrupt the tests. ok henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.175 2004/02/11 04:17:18 mcbride Exp $
d18 1
a18 1
PFFAIL+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
@


1.175
log
@Deal with pfctl always needing root by adding ${SUDO} where it's needed.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.174 2004/02/04 18:30:32 mcbride Exp $
d33 2
d36 1
d46 6
@


1.174
log
@Test comment continuation with \
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.173 2004/02/03 19:39:45 henning Exp $
d50 1
a50 1
	pfctl -nv -f - < ${.CURDIR}/pfail${n}.in 2>&1 | \
d54 1
a54 1
	if pfctl -nv -f - < ${.CURDIR}/pfail${n}.in > \
d71 1
a71 1
	pfctl -nv -f - < ${.CURDIR}/pf${n}.in | \
d75 1
a75 1
	pfctl -nv -f - < ${.CURDIR}/pf${n}.in > ${.CURDIR}/pf${n}.ok
d79 1
a79 1
	pfctl -nv -f - < ${.CURDIR}/pf${n}.ok | \
d95 1
a95 1
	pfctl -nf - < ${.CURDIR}/pfsimple${n}.in
d170 1
a170 1
	pfctl -nv -f - `cat ${.CURDIR}/pfopt${n}.opts` \
d175 1
a175 1
	pfctl -nv -f - `cat ${.CURDIR}/pfopt${n}.opts` \
d191 1
a191 1
	pfctl -nv -f - < ${.CURDIR}/pfsetup${n}.in | \
d197 2
a198 1
	pfctl -nv -f - < ${.CURDIR}/pfsetup${n}.in > ${.CURDIR}/pfsetup${n}.ok
@


1.173
log
@adding tests after fixing bugs to prevent them from reapperaing gives extra
karma points: tag macro expansion
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.172 2004/01/26 04:20:48 deraadt Exp $
d16 1
a16 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84 85
@


1.172
log
@if one destroy fails, keep trying the others
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.171 2004/01/26 02:34:23 david Exp $
d16 1
a16 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83 84
d28 1
a28 1
# PFLOAD+=6 22 41 50 52 53 55 57 83
@


1.171
log
@don't create/destroy interfaces in depend or regress
stops interfaces from being created/destroyed out of order

ok dhartmei@@ henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.170 2004/01/06 12:34:05 cedric Exp $
d40 3
a42 3
	${SUDO} ifconfig lo1000000 destroy
	${SUDO} ifconfig tun1000000 destroy
	${SUDO} ifconfig tun1000001 destroy
@


1.170
log
@Add tests for interface->address translation in userland and in the kernel.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.169 2003/12/30 16:48:47 henning Exp $
d33 1
a33 1
.ifmake !obj && !clean && !cleandir
@


1.169
log
@destroy on tun works now, so destroy the tun nterfaces we created for the
tests after we're done
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.168 2003/12/16 05:02:46 mcbride Exp $
d31 1
d145 19
@


1.168
log
@Test source-tracking syntax.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.167 2003/12/16 00:30:16 mcbride Exp $
d40 2
a41 3
# destroy on tun does not work yet
#	${SUDO} ifconfig tun1000000 destroy
#	${SUDO} ifconfig tun1000001 destroy
@


1.167
log
@Test failure of attempt to set hostid to 0.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.166 2003/12/06 15:35:38 sturm Exp $
d16 1
a16 1
PFTESTS+=74 75 76 77 78 79 80 81 82 83
d23 1
a23 1
PFLOAD+=72 73 74 75 76 77 78 79 80 81 82
@


1.166
log
@don't create/destroy interfaces in obj, clean and cleandir
eases source updates from pre-cloning

ok henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.165 2003/12/05 16:55:40 henning Exp $
d18 1
a18 1
PFFAIL+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
@


1.165
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.164 2003/11/06 15:22:16 henning Exp $
d32 1
d43 1
@


1.164
log
@antispoof with ipless interface
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.163 2003/08/20 16:33:08 henning Exp $
d31 11
@


1.163
log
@perhaps we should better test operator clue instead...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.162 2003/08/20 13:04:50 henning Exp $
d16 1
a16 1
PFTESTS+=74 75 76 77 78 79 80 81 82
d28 1
a28 1
# PFLOAD+=6 22 41 50 52 53 55 57
@


1.162
log
@test invalid priorities fro CBQ and PRIQ
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.161 2003/07/19 15:08:30 cedric Exp $
d18 1
a18 1
PFFAIL+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
@


1.161
log
@Verify that no skip step apply to theses rules for the source address.
This actually uncovers a little buglet in skip steps calculation.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.160 2003/07/19 14:18:09 cedric Exp $
d18 1
a18 1
PFFAIL+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
@


1.160
log
@Skip step optimization involving dynaddr, tables, no-route.
Optimisation should be done on theses rules.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.159 2003/07/11 09:21:00 cedric Exp $
d16 1
a16 1
PFTESTS+=74 75 76 77 78 79 80 81
d23 1
a23 1
PFLOAD+=72 73 74 75 76 77 78 79 80 81
@


1.159
log
@Illegal table definitions.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.158 2003/07/04 11:09:05 henning Exp $
d16 1
a16 1
PFTESTS+=74 75 76 77 78 79 80
d23 1
a23 1
PFLOAD+=72 73 74 75 76 77 78 79 80
@


1.158
log
@test nat pass
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.157 2003/06/18 11:38:56 henning Exp $
d18 1
a18 1
PFFAIL+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
@


1.157
log
@addr expansion in labels and the no-route case
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.156 2003/06/18 11:09:21 henning Exp $
d16 1
a16 1
PFTESTS+=74 75 76 77 78 79
d23 1
a23 1
PFLOAD+=72 73 74 75 76 77 78 79
@


1.156
log
@try to prevent a deja-vue with this just fixed bug later by testing testing
testing testing
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.155 2003/06/12 09:43:52 henning Exp $
d16 1
a16 1
PFTESTS+=74 75 76 77 78
d23 1
a23 1
PFLOAD+=72 73 74 75 76 77 78
@


1.155
log
@make sure the bug doesn't come back...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.154 2003/05/26 08:12:54 henning Exp $
d16 1
a16 1
PFTESTS+=74 75 76 77
d23 1
a23 1
PFLOAD+=72 73 74 75 76 77
@


1.154
log
@move table tests from default set to "alltests" target; they are slow
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.153 2003/05/26 06:03:53 henning Exp $
d16 1
a16 1
PFTESTS+=74 75 76
d23 1
a23 1
PFLOAD+=72 73 74 75 76
@


1.153
log
@what was broken once should be tested in future
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.152 2003/05/19 20:30:30 henning Exp $
d131 1
a131 2
REGRESS_TARGETS+=pfr
UPDATE_TARGETS+=pfr-update
@


1.152
log
@introduce a "alltests" target which includes the pfaltq and pfsetup targets
which are not in the default suite
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.151 2003/05/19 20:25:45 henning Exp $
d16 1
a16 1
PFTESTS+=74 75
d23 1
a23 1
PFLOAD+=72 73 74 75
@


1.151
log
@invalid v4 netnasks
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.150 2003/05/19 18:38:13 henning Exp $
d174 1
a174 4
.ifdef DO_PFSETUP
REGRESS_TARGETS+=pfsetup
UPDATE_TARGETS+=pfsetup-update
.endif
d200 2
d203 2
@


1.150
log
@invalid hostspec in redirection target
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.149 2003/05/19 18:21:28 henning Exp $
d18 1
a18 1
PFFAIL+=28 29 30 31 32 33 34 35 36 37 38 39 40 41
@


1.149
log
@obviously wrong netmask
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.148 2003/05/17 02:07:07 henning Exp $
d18 1
a18 1
PFFAIL+=28 29 30 31 32 33 34 35 36 37 38 39 40
@


1.148
log
@! tagged
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.147 2003/05/17 01:55:09 henning Exp $
d18 1
a18 1
PFFAIL+=28 29 30 31 32 33 34 35 36 37 38 39
@


1.147
log
@synproxy
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.146 2003/05/15 06:28:50 henning Exp $
d16 1
a16 1
PFTESTS+=74
d23 1
a23 1
PFLOAD+=72 73 74
@


1.146
log
@and tag too long in binat codepath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.145 2003/05/15 06:27:01 henning Exp $
d16 1
d23 1
a23 1
PFLOAD+=72 73
@


1.145
log
@tag too long in the nat/rdr codepath
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.144 2003/05/15 06:25:07 henning Exp $
d17 1
a17 1
PFFAIL+=28 29 30 31 32 33 34 35 36 37 38
@


1.144
log
@too long tag on filter
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.143 2003/05/15 00:11:48 frantzen Exp $
d17 1
a17 1
PFFAIL+=28 29 30 31 32 33 34 35 36 37
@


1.143
log
@tests for "scrub tcp reassemble"
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.142 2003/05/14 22:55:34 henning Exp $
d17 1
a17 1
PFFAIL+=28 29 30 31 32 33 34 35 36
@


1.142
log
@test binat and tagging
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.141 2003/05/14 22:46:34 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
d22 1
a22 1
PFLOAD+=72
@


1.141
log
@test tagging on rdr
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.140 2003/05/14 05:29:08 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
d22 1
@


1.140
log
@more tags testing
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.139 2003/05/14 05:26:34 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
d21 1
a21 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 48 49 54 56 60 61 65 66 67 68 69 70
@


1.139
log
@tags on nat
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.138 2003/05/14 05:21:19 frantzen Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
d21 1
a21 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 48 49 54 56 60 61 65 66 67 68 69
@


1.138
log
@test scrub w/ protocol and ports
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.137 2003/05/13 21:43:43 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
d21 1
a21 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 48 49 54 56 60 61 65 66 67 68
@


1.137
log
@test tagging
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.136 2003/05/11 01:56:14 mcbride Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
d21 1
a21 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 48 49 54 56 60 61 65 66 67
@


1.136
log
@Regress tests for explicit nat translation port.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.135 2003/05/03 17:01:47 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
d21 1
a21 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 48 49 54 56 60 61 65 66
@


1.135
log
@more extensive antispoof test
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.134 2003/05/01 16:18:10 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
d21 1
a21 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 48 49 54 56 60 61 65
@


1.134
log
@label on antispoof
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.133 2003/04/30 13:14:40 henning Exp $
d19 1
a19 1
PFSETUP=1 2 3
@


1.133
log
@we can enabled pfload48 now that tabledefs can live inside anchors
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.132 2003/04/15 11:33:04 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63 64
d21 1
a21 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 48 49 54 56 60 61
@


1.132
log
@try to provoke print_hfsc_sc to malfunction
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.131 2003/04/15 10:55:10 henning Exp $
d21 1
a21 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 49 54 56 60 61
a24 2
# disabled; no table def in anchors
# PFLOAD+=48
@


1.131
log
@feedback test the service curve print/parse functions
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.130 2003/04/14 16:52:25 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62 63
d24 1
a24 1
# PFLOAD+=33 35 37 42 43 45 51 58 59 62 63
@


1.130
log
@try to provoke print_hfsc_opts to leave out linkshare because m2 == bandwidth
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.129 2003/04/14 15:14:14 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61 62
d24 1
a24 1
# PFLOAD+=33 35 37 42 43 45 51 58 59 62
@


1.129
log
@test realtime service curve spec
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.128 2003/04/13 23:49:12 henning Exp $
d22 1
a22 1
PFALTQ=1 2 3 4 5 6 7 8 9 10 11 12 13
@


1.128
log
@more hfsc test; especially for the feedback test
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.127 2003/04/13 23:40:52 henning Exp $
d22 1
a22 1
PFALTQ=1 2 3 4 5 6 7 8 9 10 11 12
@


1.127
log
@test double upperlimit service curve
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.126 2003/04/13 23:38:45 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60 61
d24 1
a24 1
# PFLOAD+=33 35 37 42 43 45 51 58 59
@


1.126
log
@test doubly linkshare specification
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.125 2003/04/13 23:37:39 henning Exp $
d17 1
a17 1
PFFAIL+=28 29 30 31 32 33 34 35
@


1.125
log
@test service curves
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.124 2003/04/13 16:57:31 henning Exp $
d17 1
a17 1
PFFAIL+=28 29 30 31 32 33 34
@


1.124
log
@bit more complicated case to provoke qid assignment errors with hfsc
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.123 2003/04/12 20:11:30 henning Exp $
d22 1
a22 1
PFALTQ=1 2 3 4 5 6 7 8 9 10 11
@


1.123
log
@test HFSC
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.122 2003/04/05 21:50:14 henning Exp $
d22 1
a22 1
PFALTQ=1 2 3 4 5 6 7 8 9 10
@


1.122
log
@test dynaddr with netmask
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.121 2003/04/05 21:47:57 henning Exp $
d22 1
a22 1
PFALTQ=1 2 3 4 5 6 7 8 9
@


1.121
log
@test queue .. on $interface
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.120 2003/04/03 14:20:09 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59 60
d21 1
a21 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 49 54 56 60
@


1.120
log
@differently named queues on different interfaces must get different queue
IDs. this conflicts with the way priq works now, where
queueID = priority + 1
thus, this test fails atm.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.119 2003/03/27 16:13:14 henning Exp $
d22 1
a22 1
PFALTQ=1 2 3 4 5 6 7
@


1.119
log
@test invalid cbq and priq flags, respectively
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.118 2003/03/19 14:03:52 henning Exp $
d22 1
a22 1
PFALTQ=1 2 3 4 5 6
@


1.118
log
@test netmasks with multicast addresses
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.117 2003/03/11 15:26:44 henning Exp $
d17 1
a17 1
PFFAIL+=28 29 30 31 32
@


1.117
log
@check for rules getting qid and pqid set with cbq
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.116 2003/03/11 15:07:19 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58 59
d21 1
a21 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 49 54 56
@


1.116
log
@test rules get the qid and pqid assigned correctly
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.115 2003/03/11 15:05:53 henning Exp $
d22 1
a22 1
PFALTQ=1 2 3 4 5
@


1.115
log
@include pfctl -gsr output in the verification for the pfaltq tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.114 2003/03/11 12:00:07 henning Exp $
d22 1
a22 1
PFALTQ=1 2 3 4
@


1.114
log
@verify different named queues don't get the same queue id on different
interfaces
fails right now
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.113 2003/03/11 11:14:59 henning Exp $
d184 4
a187 2
	${SUDO} pfctl -Fq -f - < ${.CURDIR}/pfaltq${n}.in
	${SUDO} pfctl -gsq | \
d189 1
a189 1
	${SUDO} pfctl -Fq >/dev/null 2>&1
d192 5
a196 3
	${SUDO} pfctl -Fq -f - < ${.CURDIR}/pfaltq${n}.in
	${SUDO} pfctl -gsq > ${.CURDIR}/pfaltq${n}.ok
	${SUDO} pfctl -Fq >/dev/null 2>&1
@


1.113
log
@more complicated cbq queue id assigment verification
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.112 2003/03/11 11:05:11 henning Exp $
d22 1
a22 1
PFALTQ=1 2 3
@


1.112
log
@test queue ID assignment with cbq
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.111 2003/03/11 10:57:11 henning Exp $
d22 1
a22 1
PFALTQ=1 2
@


1.111
log
@new class of regress tests.
add target "pfaltq".
altq rules are loaded into the kernel and pfctl -gsq output is verified.
opposed to most other regress tests, these ones modify the existing setup,
as altq definitons cannot live in anchors. all queue definitions are flushed
by these tests. Thus, they are not run by default (not part of
REGRESS_TARGETS), but must be run explicitely (make pfaltq).

pfaltq1: very queue id assignment on multiple interfaces with the priq
scheduler
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.110 2003/03/10 12:07:01 henning Exp $
d22 1
a22 1
PFALTQ=1
@


1.110
log
@queue doubly defined on one interface, fails right now
(is later rejected at load time by the kernel, but pfctl should detect it)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.109 2003/03/09 18:08:53 henning Exp $
d22 1
d178 20
@


1.109
log
@same edge case for LOOP_THROUGH in totally different context
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.108 2003/03/09 18:04:29 henning Exp $
d17 1
a17 1
PFFAIL+=28 29 30 31
@


1.108
log
@test an edge case in LOOP_THROUGH behaviour
fails right now
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.107 2003/03/08 14:24:20 henning Exp $
d17 1
a17 1
PFFAIL+=28 29 30
@


1.107
log
@-g in pfload${n}-update
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.106 2003/03/07 12:55:58 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57 58
d23 1
a23 1
# PFLOAD+=33 35 37 42 43 45 51 58
@


1.106
log
@use -g
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.105 2003/03/02 23:44:35 henning Exp $
d102 2
a103 2
	(${SUDO} pfctl -a regress:regress -vvsn; \
	${SUDO} pfctl -a regress:regress -vvsr) > ${.CURDIR}/pf${n}.loaded
@


1.105
log
@queue on two interfaces
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.104 2003/03/02 12:38:15 henning Exp $
d94 2
a95 2
	(${SUDO} pfctl -a regress:regress -vvsn; \
	${SUDO} pfctl -a regress:regress -vvsr) | \
@


1.104
log
@cbq control keyword is gone
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.103 2003/02/28 22:21:58 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56 57
d23 1
a23 1
# PFLOAD+=33 35 37 42 43 45 51
@


1.103
log
@a cbq queue cannot be both default and control queue
fails right now
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.102 2003/02/28 21:25:22 henning Exp $
d17 1
a17 1
PFFAIL+=28 29 30 31
@


1.102
log
@add targets to regenerate the .ok files

ok cedric@@, silence others
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.101 2003/02/26 14:22:58 cedric Exp $
d17 1
a17 1
PFFAIL+=28 29 30
@


1.101
log
@And a couple more binat failures.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.100 2003/02/26 13:39:46 henning Exp $
d33 1
d39 6
d47 2
a48 1
pfail:	${PFAIL_TARGETS}
d50 1
d54 1
d60 3
d70 3
a72 2
pf:	${PF_TARGETS}
selfpf:	${SELFPF_TARGETS}
d75 1
d90 1
d100 7
d109 2
a110 1
pfload:	${PFLOAD_TARGETS}
d112 1
d116 1
d122 4
d128 2
a129 1
pfr:	${PFR_TARGETS}
d131 1
d135 1
d142 4
d148 2
a149 1
pfopt:	${PFOPT_TARGETS}
d151 1
d155 1
d163 5
d171 1
d175 1
d177 2
@


1.100
log
@altq without scheduler
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.99 2003/02/26 13:29:12 henning Exp $
d17 1
a17 1
PFFAIL+=28 29
@


1.99
log
@binat-anchor: no fromto, no proto list expansion
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.98 2003/02/26 13:25:20 henning Exp $
d17 1
a17 1
PFFAIL+=28
@


1.98
log
@rdr-anchor: no src port, no dst port list expansion, no dst port operators
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.97 2003/02/26 13:19:02 henning Exp $
d17 1
@


1.97
log
@anchorname too long
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.96 2003/02/25 09:06:32 cedric Exp $
d16 1
a16 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
@


1.96
log
@Add regress tests for the 'table <foo> file "filename"' syntax.
Syntax checks only in pfsimple2, real tests in pfr13.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.95 2003/02/24 20:56:56 henning Exp $
d16 1
a16 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
@


1.95
log
@test for invalid next pointers in symhead with macro redefinitions.
fails right now
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.94 2003/02/23 00:22:11 mcbride Exp $
d17 1
a17 1
PFSIMPLE=1
d27 1
a27 1
PFTABLE=1 2 3 4 5 6 7 8 9 10 11 12
@


1.94
log
@Test for invalid scrub rules.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.93 2003/02/22 23:26:39 mcbride Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55 56
d26 1
a26 1
# PFLOAD+=6 22 41 50 52 53 55
@


1.93
log
@Make the pfload regression tests check translation rules as well as
filter rules.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.92 2003/02/22 19:03:21 henning Exp $
d16 1
a16 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
@


1.92
log
@krause found one more untested thing: per-rule timeouts and per-rule state
limit.
woohoo!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.91 2003/02/21 20:11:20 henning Exp $
d77 2
a78 1
	${SUDO} pfctl -a regress:regress -vvsr | \
@


1.91
log
@test altq tbrsize calculation
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.90 2003/02/21 17:18:24 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54 55
d20 1
a20 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 49 54
@


1.90
log
@whole bunch of options tests, idea by krause
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.89 2003/02/21 17:11:45 henning Exp $
d18 1
a18 1
PFSETUP=1
@


1.89
log
@test scrub random-id, pointed out by krause
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.88 2003/02/21 17:08:41 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53 54
d26 1
a26 1
# PFLOAD+=6 22 41 50 52 53
@


1.88
log
@more testing: illegal port, af mismatch w/ route-to and more flags tcponly
from krause
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.87 2003/02/21 10:48:29 henning Exp $
d15 1
a15 1
PFTESTS+=51 52 53
d20 1
a20 1
PFLOAD+=30 31 32 34 36 38 39 40 44 46 47 49
@


1.87
log
@set loginterface to nonexistant interface
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.86 2003/02/20 00:19:20 henning Exp $
d16 1
a16 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
@


1.86
log
@test for nonexistant interface rejection in the dynaddr case
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.85 2003/02/19 23:33:11 henning Exp $
d16 1
a16 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
@


1.85
log
@address family uniqueness with NAT
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.84 2003/02/19 23:27:20 henning Exp $
d16 1
a16 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
@


1.84
log
@redirect to tables is invalid
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.83 2003/02/19 23:22:48 henning Exp $
d16 1
a16 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
@


1.83
log
@poor queues need a parent
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.82 2003/02/19 23:19:10 henning Exp $
d16 1
a16 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
@


1.82
log
@flags S is invalid
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.81 2003/02/19 23:15:51 henning Exp $
d16 1
a16 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
@


1.81
log
@test labelmacro $if
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.80 2003/02/19 23:11:57 henning Exp $
d16 1
a16 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
@


1.80
log
@bogus. pf25 tests this better.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.79 2003/02/19 22:43:56 henning Exp $
d15 1
a15 1
PFTESTS+=51 52
d26 1
a26 1
# PFLOAD+=6 22 41 50 52
@


1.79
log
@reorganize the Makefile: add a target for each type of tests. document them.
side-effect: quite a speedup.

ok cedric@@ dhartmei@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.77 2003/02/19 16:23:43 henning Exp $
d17 1
a17 1
PFSIMPLE=1 2
@


1.78
log
@try to provoke host() misbehavior
@
text
@d3 10
d31 1
a31 1
REGRESS_TARGETS+=pfail${n}
d39 3
d43 1
a43 1
REGRESS_TARGETS+=pf${n}
d49 1
a49 1
REGRESS_TARGETS+=selfpf${n}
d56 5
d62 1
a62 1
REGRESS_TARGETS+=pfsimple${n}
d69 3
d73 1
a73 1
REGRESS_TARGETS+=pfload${n}
d84 3
d88 1
a88 1
REGRESS_TARGETS+=pfr${n}
d96 3
d100 1
a100 1
REGRESS_TARGETS+=pfopt${n}
d109 3
a111 1
.ifdef DO_PFSETUP
d113 1
a113 1
REGRESS_TARGETS+=pfsetup${n}
d122 5
@


1.77
log
@two more load tests; verified on i386 alpha sparc64
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.76 2003/02/19 16:20:26 henning Exp $
d6 1
a6 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
@


1.76
log
@add hints why some regress tests have no pfload counterpart
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.75 2003/02/18 19:11:57 henning Exp $
d10 1
a10 1
PFLOAD+=30 31 32 34 36 38 39 40 44 49
@


1.75
log
@test correct operation of the -N, -O, -A and -R load options.
some of these fail right now.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.74 2003/02/18 18:05:52 henning Exp $
d11 6
a16 2
#disabled now due to no altq and table in anchors
#PFLOAD+=33 35 43 48
@


1.74
log
@test pfctl output for the fail tests too.
that ensures that not a single failure-causing statement makes the whole
test succeed.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.73 2003/02/18 17:54:01 henning Exp $
d14 1
a14 1
PFOPT=1
@


1.73
log
@test setting all optimization levels
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.72 2003/02/18 17:38:12 henning Exp $
d20 2
a21 3
	if pfctl -nv -f - < ${.CURDIR}/pfail${n}.in > /dev/null 2>&1 ; then \
		false ; \
	fi
@


1.72
log
@test set require-order no
a regress test especially written for miod@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.71 2003/02/14 22:33:47 henning Exp $
d5 1
a5 1
PFTESTS+=51
@


1.71
log
@test double macro def
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.70 2003/02/14 17:21:00 henning Exp $
d5 1
@


1.70
log
@emacsed out. route-to loopback is valid now
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.69 2003/02/14 10:59:20 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
@


1.69
log
@test -Dmacro=value
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.68 2003/02/03 15:44:52 dhartmei Exp $
d5 1
a5 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
@


1.68
log
@Don't allow loopback interfaces as route/reply/dup-to targets. ok henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.67 2003/01/30 15:32:22 henning Exp $
d13 1
d68 9
@


1.67
log
@need to disable load tests for altq and table stuff for now :-(
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.66 2003/01/30 15:16:11 henning Exp $
d5 1
a5 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
@


1.66
log
@test :network and :broadcast modifiers
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.65 2003/01/25 20:46:45 cedric Exp $
d9 3
a11 1
PFLOAD+=30 31 32 33 34 35 36 38 39 40 43 44 48 49
@


1.65
log
@Regression tests for table statements and rules containing tables.
ok henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.64 2003/01/19 10:03:26 camield Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
d9 1
a9 1
PFLOAD+=30 31 32 33 34 35 36 38 39 40 43 44 48
@


1.64
log
@Test label expansion functions.

ok dhartmei henning
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.63 2003/01/15 17:08:16 cedric Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
d9 1
a9 1
PFLOAD+=30 31 32 33 34 35 36 38 39 40 43 44
@


1.63
log
@Bunch of new regression tests. The only missing thing now is tests
for the <table> syntax in rules.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.62 2003/01/14 15:37:29 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
@


1.62
log
@${SUDO} in pfsetup
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.61 2003/01/14 14:43:31 cedric Exp $
d10 1
a10 1
PFTABLE=1 2 3 4 5 6 7 8 9
@


1.61
log
@Add regression tests for radix table address manipulations.
ok dhartmei@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.60 2003/01/06 11:36:04 mcbride Exp $
d71 1
a71 1
	${SHELL} ${.CURDIR}/pfsetup${n}.setup
d74 1
a74 1
	${SHELL} ${.CURDIR}/pfsetup${n}.clean
@


1.60
log
@Add tests for address pools with route-to/reply-to/dup-to.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.59 2002/12/19 10:10:35 mcbride Exp $
d10 1
d55 10
@


1.59
log
@use ${SUDO} for pfctl when we actually use the ioctls.

ok markus@@ henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.58 2002/12/18 16:49:54 dhartmei Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
@


1.58
log
@Load regress rules into anchor regress:regress and compare the output
of pfctl -vvsr with expected output. This verifies that skip step
values don't change unexpectedly.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.57 2002/12/17 20:08:18 henning Exp $
d47 2
a48 2
	pfctl -a regress:regress -f - < ${.CURDIR}/pf${n}.in
	pfctl -a regress:regress -vvsr | \
d50 2
a51 2
	pfctl -a regress:regress -Fn >/dev/null 2>&1
	pfctl -a regress:regress -Fr >/dev/null 2>&1
@


1.57
log
@test PRIQ
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.56 2002/12/13 22:07:32 henning Exp $
d8 2
d40 12
@


1.56
log
@test scrub options in unusual order
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.55 2002/12/13 22:03:28 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
@


1.55
log
@test extended syntax for queue assignment on filter rules
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.54 2002/12/08 02:18:56 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
@


1.54
log
@test options on altq and queue rules in fancy order
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.53 2002/12/07 23:25:30 dhartmei Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
@


1.53
log
@regress test anchor syntax
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.52 2002/12/06 14:29:55 dhartmei Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40 41
@


1.52
log
@Direction (in/out) is now optional in filter rules, 'block all' is valid,
for instance. Add a regress test for those.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.51 2002/12/05 15:01:09 markus Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39 40
@


1.51
log
@change self test to use pfX.ok as input; ok henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.50 2002/12/05 14:14:50 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38 39
@


1.50
log
@and we no longer need to strip the rule numbers off, as they are gone
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.49 2002/12/05 13:43:17 markus Exp $
d28 2
a29 7
	if pfctl -nv -f - < ${.CURDIR}/pf${n}.in | \
	    pfctl -nvf - > /dev/null; then \
		true ; \
	else \
		pfctl -nv -f - < ${.CURDIR}/pf${n}.in; \
		false; \
	fi
@


1.49
log
@enable 'self' tests; ok henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.48 2002/12/04 11:35:41 henning Exp $
a28 1
	    sed 's/^@@[^ ]* //' |\
@


1.48
log
@test opts in another than the classical order
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.47 2002/12/02 09:43:25 deraadt Exp $
d26 1
a26 1
#REGRESS_TARGETS+=selfpf${n}
d30 1
a30 1
	    pfctl -nvf - > /dev/null ; then \
d34 1
a34 1
		false ; \
a35 2

self: selfpf${n}
@


1.47
log
@test user, actually, test multiple user commands
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.46 2002/11/29 17:43:41 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37 38
@


1.46
log
@test altq with interface expansion
as side-effect, this also tests multiple queues with the same name but on
different interfaces
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.45 2002/11/28 12:44:42 mcbride Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36 37
@


1.45
log
@add regression test for nat pools

ok henning@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.44 2002/11/27 19:00:21 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35 36
@


1.44
log
@more altq testing
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.43 2002/11/25 18:27:51 mickey Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34 35
@


1.43
log
@create a new set of regress tests, which require an active
setup/cleanup of interfaces/protocols/etc.
this is not ran by default and requires a DO_PFSETUP
make variable set to be activated, one has to run
as root as well.
add one simple test for the proper loN link1 address
expansion.
henning@@ ok
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.42 2002/11/25 16:16:07 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33 34
@


1.42
log
@test mixed af rules. broken right now. sigh.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.41 2002/11/24 20:46:30 henning Exp $
d7 1
d48 13
@


1.41
log
@test altq and queue
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.40 2002/11/22 16:34:59 markus Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32 33
@


1.40
log
@add (disabled) self tests (make self); ok frantzen
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.39 2002/11/07 17:11:51 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31 32
@


1.39
log
@CIDR tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.38 2002/10/07 13:48:58 henning Exp $
d24 13
@


1.38
log
@test generic return
test set block-policy
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2002/09/22 15:19:08 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30 31
@


1.37
log
@test line buffer overflow checks in pfctl

ok frantzen@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2002/09/20 09:40:19 henning Exp $
d4 1
a4 1
PFTESTS+=28 29 30
@


1.36
log
@test line continuation
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2002/09/18 14:03:48 henning Exp $
d5 1
a5 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13 14
@


1.35
log
@test port ranges in rdr rules
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2002/09/18 13:33:43 henning Exp $
d4 1
a4 1
PFTESTS+=28 29
@


1.34
log
@test log keywords and log quick/quick log order
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2002/09/18 12:25:14 henning Exp $
d4 1
a4 1
PFTESTS+=28
@


1.33
log
@test af detection logic in nat and rdr rules
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2002/09/18 08:59:08 henning Exp $
d4 1
@


1.32
log
@test antispoof
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2002/09/18 08:57:09 henning Exp $
d3 1
a3 1
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
@


1.31
log
@new kind of pfctl regression tests:
we have stuff we cannot test in our regression tests as of now as the pfctl
-nvf output varies depending on the machine config - esp. network interfaces
et all. But we can at least test wether pfctl eats the syntax.

add a test for the "self" keyword.

ok markus@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2002/09/15 17:41:43 henning Exp $
d5 1
a5 1
PFSIMPLE=1
@


1.30
log
@some dynaddr tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2002/09/12 11:17:49 henning Exp $
d5 1
d23 8
@


1.29
log
@regress test for antispoof
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2002/09/02 20:01:43 avsm Exp $
d3 2
a4 2
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12 13
@


1.28
log
@Rename a bunch of the old bsd.regress.mk variables into the new ones.

ok art@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2002/07/30 15:01:41 henning Exp $
d3 1
a3 1
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
@


1.27
log
@negative regression test for flags handling
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2002/07/21 01:37:57 deraadt Exp $
d7 1
a7 1
REGRESSTARGETS+=pfail${n}
d17 1
a17 1
REGRESSTARGETS+=pf${n}
d25 1
a25 1
.PHONY: ${REGRESSTARGETS}
@


1.26
log
@test missing comma
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2002/07/20 19:52:50 deraadt Exp $
d4 1
a4 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11 12
@


1.25
log
@use diff nicer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2002/07/15 18:19:37 henning Exp $
d3 1
a3 1
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
@


1.24
log
@test "on ! interface"
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2002/07/08 11:46:32 dhartmei Exp $
d21 1
a21 1
	    cmp -s ${.CURDIR}/pf${n}.ok /dev/stdin
@


1.23
log
@Don't allow 'flags' option in non-TCP rules, found by mpech@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2002/07/06 18:21:50 henning Exp $
d3 1
a3 1
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
@


1.22
log
@theo doesn't like it.
always use the pfctl in path.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2002/07/06 17:08:41 henning Exp $
d4 1
a4 1
PFFAIL=1 2 3 4 5 6 7 8 9 10 11
@


1.21
log
@use sbin/pfctl/${__objdir}/pfctl for regression tests if existant, fall
back to pfctl in path otherwise.
will save my ass sooner or later.
ok millert@@, pb@@
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.20 2002/06/25 08:17:16 henning Exp $

.include <bsd.obj.mk>
a5 2
PFDIR=${.CURDIR}/../../../sbin/pfctl/${__objdir}/

a8 6
.BEGIN:
.if !exists(${PFDIR}pfctl)
.undef PFDIR

.endif

d10 1
a10 1
	if ${PFDIR}pfctl -nv -f - < ${.CURDIR}/pfail${n}.in > /dev/null 2>&1 ; then \
d20 1
a20 1
	${PFDIR}pfctl -nv -f - < ${.CURDIR}/pf${n}.in | \
@


1.20
log
@regression tests for options in pf.conf
ok dhartmei@@, kjell@@
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.19 2002/06/11 18:07:49 frantzen Exp $
d8 2
d13 6
d20 1
a20 1
	if pfctl -nv -f - < ${.CURDIR}/pfail${n}.in > /dev/null 2>&1 ; then \
d30 1
a30 1
	pfctl -nv -f - < ${.CURDIR}/pf${n}.in | \
@


1.19
log
@turn on pf21
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2002/06/11 02:16:30 kjell Exp $
d3 2
a4 2
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
PFFAIL=1 2 3 4 5 6 7 8 9 10
@


1.18
log
@Use merged config file format. The separate NAT loop can go away,
since all files are now loaded the same way. Add regress tests for
invalid ordering of scrub, nat, filter rules
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2002/06/10 02:10:39 kjell Exp $
d3 1
a3 1
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
@


1.17
log
@Add regression tests for scrub
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2002/06/09 02:51:45 kjell Exp $
d3 2
a4 2
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
PFFAIL=1 2 3 4 5 6 7 8
d10 1
a10 1
	if pfctl -nv -R - < ${.CURDIR}/pfail${n}.in > /dev/null 2>&1 ; then \
d20 1
a20 1
	pfctl -nv -R - < ${.CURDIR}/pf${n}.in | \
a21 11

.endfor

NATTESTS=binat1 nat1 rdr1

.for n in ${NATTESTS}
REGRESSTARGETS+=${n}

${n}:
	pfctl -nv -N - < ${.CURDIR}/${n}.in | \
	    cmp -s ${.CURDIR}/${n}.ok /dev/stdin
@


1.16
log
@Add regression tests for rdr list processing
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2002/06/08 09:43:58 kjell Exp $
d3 1
a3 1
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14
@


1.15
log
@Add regression tests for NAT list expansion
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2002/06/07 18:36:54 frantzen Exp $
d25 1
a25 1
NATTESTS=binat1 nat1
@


1.14
log
@whoops.  turn on the IPv6 scope test
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2002/02/18 13:08:51 art Exp $
d25 1
a25 3
binat1:
	pfctl -nv -N - < ${.CURDIR}/binat1.in | \
	    cmp -s ${.CURDIR}/binat1.ok /dev/stdin
d27 8
a34 1
REGRESSTARGETS+=binat1
@


1.13
log
@Clean up.
 - Don't print failure and return succes, shut up and fail properly.
 - Don't generate reults once and rerun compares later. Rerun every time.
 - Don't generate any files, pipes are there to be used.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2002/01/01 23:05:30 art Exp $
d3 1
a3 1
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13
@


1.12
log
@trivial conversions to bsd.regress.mk
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2001/11/26 16:53:27 jasoni Exp $
d10 3
a12 2
	@@pfctl -nv -R - < ${.CURDIR}/pfail${n}.in > /dev/null 2>&1 && \
	    echo 'test pfail${n} does not fail as expected' || true
a13 1
.PHONY: pfail${n} regress
d19 3
a21 5
pf${n}: pf${n}.out
	@@cmp -s ${.CURDIR}/pf${n}.ok pf${n}.out || \
	    echo 'test pf${n} output does not match expected output'
pf${n}.out:
	pfctl -nv -R - < ${.CURDIR}/pf${n}.in > $@@
a22 2
.PHONY: pf${n} regress
CLEANFILES+=pf${n}.out
d25 3
a27 3
binat1: binat1.out
	@@cmp -s ${.CURDIR}/binat1.ok binat1.out || \
	   echo 'test binat1 output does not match expected output'
d29 1
a29 4
binat1.out:
	pfctl -nv -N - < ${.CURDIR}/binat1.in > $@@

CLEANFILES+=binat1.out
d31 1
a31 1
REGRESSTARGETS+=binat1
@


1.11
log
@add tests for fastroute options
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2001/10/07 11:56:58 dhartmei Exp $
a2 2
NOMAN=
NOPROG=
d7 1
a7 1
regress: pfail${n}
d17 1
a17 1
regress: pf${n}
d38 1
a38 1
regress: binat1
d40 1
a40 2
.PHONY: regress
.include <bsd.prog.mk>
@


1.10
log
@Add interface name to address translation to pfctl, document it and add
a regress test. Translation is done on rule set load-time only, so the
rule sets must be reloaded when an interface address changes.
parse.y patch from Cedric Berger. Similar patch from Jonathon Fletcher.
Thanks to both.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2001/09/15 23:25:23 wilfried Exp $
d5 2
a6 2
PFTESTS=1 2 3 4 5 6 7 8 9 10 11 12
PFFAIL=1 2 3 4 5 6 7
@


1.9
log
@return-icmp / icmp-type tests, ok dhartmei@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2001/09/06 18:45:13 jasoni Exp $
d5 1
a5 1
PFTESTS=1 2 3 4 5 6 7 8 9 10 11
@


1.8
log
@add test for binat
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2001/09/04 13:58:49 dhartmei Exp $
d5 2
a6 1
PFTESTS=1 2 3 4 5 6 7 8 9
d8 9
a16 3
pfail1:
	@@pfctl -nv -R - < ${.CURDIR}/pfail1.in > /dev/null 2>&1 || \
	    echo 'test pfail1 fails as expected'
d40 1
a40 1
regress: pfail1 binat1
d42 1
a42 1
.PHONY: regress pfail1
@


1.7
log
@Add regress test for "on { if, if }" syntax.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2001/08/28 12:17:04 markus Exp $
d24 10
a33 1
regress: pfail1
@


1.6
log
@move '!' from host_list to host:  "xhost : '!' host | host;"; ok dhartmei@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2001/08/25 21:54:26 frantzen Exp $
d5 1
a5 1
PFTESTS=1 2 3 4 5 6 7 8
@


1.5
log
@PF ISN randomization.  Or in trekkie techno-babble, ISN phase modulation.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2001/08/23 04:29:57 deraadt Exp $
d5 1
a5 1
PFTESTS=1 2 3 4 5 6 7
@


1.4
log
@new tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2001/08/19 16:31:06 dhartmei Exp $
d5 1
a5 1
PFTESTS=1 2 3 4 5 6
@


1.3
log
@Regress test for parameter list expansion syntax.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2001/07/31 09:02:18 wilfried Exp $
d5 1
a5 1
PFTESTS=1 2 3 4
d8 2
a9 2
	@@pfctl -nvR- < ${.CURDIR}/pfail1.in > /dev/null 2>&1 || \
	    echo 'test pfail1 should fail'
d18 1
a18 1
	pfctl -nvR- < ${.CURDIR}/pf${n}.in > $@@
@


1.2
log
@allow to test that flags are unset, ok dhartmei@@,  mickey@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2001/07/26 14:33:45 markus Exp $
d5 1
a5 1
PFTESTS=1 2 3
@


1.1
log
@initial tests for the pfctl parser
@
text
@d1 1
a1 1
# $OpenBSD: $
d5 1
a5 1
PFTESTS=1 2
@

