head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.22
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.12
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.20
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.18
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.16
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.14
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.10
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.18
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.16
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.12
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.14
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.10
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.12
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.10
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.5;

1.5
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.05.14.13.37;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2002.12.02.09.43.25;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@pass in on tun1000000 proto tcp all user = 3 flags S/SA
pass in on tun1000000 proto tcp all group = 7 flags S/SA
pass in on tun1000000 proto tcp all user = 3 group = 0 flags S/SA
pass in on tun1000000 proto tcp all user = 0 group = 0 flags S/SA
@


1.5
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d1 4
a4 4
pass in on tun1000000 proto tcp all user = 3 flags S/SA keep state
pass in on tun1000000 proto tcp all group = 7 flags S/SA keep state
pass in on tun1000000 proto tcp all user = 3 group = 0 flags S/SA keep state
pass in on tun1000000 proto tcp all user = 0 group = 0 flags S/SA keep state
@


1.4
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d1 4
a4 4
pass in on tun1000000 proto tcp all user = 3
pass in on tun1000000 proto tcp all group = 7
pass in on tun1000000 proto tcp all user = 3 group = 0
pass in on tun1000000 proto tcp all user = 0 group = 0
@


1.3
log
@Big Sync
@
text
@d1 4
a4 4
pass in on tun0 proto tcp all user = 3
pass in on tun0 proto tcp all group = 7
pass in on tun0 proto tcp all user = 3 group = 0
pass in on tun0 proto tcp all user = 0 group = 0
@


1.2
log
@no more rule numbers in output
@
text
@d1 4
a4 4
pass in on tun0 proto tcp all user = 3 
pass in on tun0 proto tcp all group = 7 
pass in on tun0 proto tcp all user = 3 group = 0 
pass in on tun0 proto tcp all user = 0 group = 0 
@


1.1
log
@test user, actually, test multiple user commands
@
text
@d1 4
a4 4
@@0 pass in on tun0 proto tcp all user = 3 
@@1 pass in on tun0 proto tcp all group = 7 
@@2 pass in on tun0 proto tcp all user = 3 group = 0 
@@3 pass in on tun0 proto tcp all user = 0 group = 0 
@

