head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.12
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.10
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.8
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.6
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.4
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.6.0.6
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.4
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.10
date	2014.06.25.15.14.20;	author mikeb;	state Exp;
branches;
next	1.9;
commitid	vdQ0f9G49C4trITR;

1.9
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.8;

1.8
date	2009.09.23.14.08.33;	author jsg;	state Exp;
branches;
next	1.7;

1.7
date	2009.04.06.12.41.48;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2007.09.19.12.51.05;	author mpf;	state Exp;
branches;
next	1.5;

1.5
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.11.09.12.25;	author cedric;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.11.08.29.34;	author cedric;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.25.20.46.45;	author cedric;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Explicitely specify address family when translation pool may contain
addresses of different address families.
@
text
@table <regress> { 1.2.3.4 !5.6.7.8 10.0.0.0/8 ::1 fe80::1 127.0.0.1 }
table <regress.1> const { ::1 fe80::/64 }
table <regress.a> const { 1.2.3.4 !5.6.7.8 ::1 ::2 ::3 } file "/dev/null" { 4.3.2.1 }
match out on lo0 inet from <regress.1> to <regress.2> nat-to 127.0.0.1
match out on ! lo0 inet from ! <regress.1> to <regress.2> nat-to 127.0.0.1
match in on lo0 inet6 from <regress.1> to <regress.2> rdr-to ::1
match in on ! lo0 inet6 from ! <regress.1> to <regress.2> rdr-to ::1
match in from <regress.1> to any
match in from ! <regress.2> to any
match out from any to ! <regress.1>
match out from any to <regress.2>
pass in from <regress> to any flags S/SA
pass out from any to <regress> flags S/SA
pass in from <regress.1> to any flags S/SA
pass in from <regress.2> to any flags S/SA
pass out from any to ! <regress.1> flags S/SA
pass out from any to ! <regress.2> flags S/SA
@


1.9
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@d4 1
a4 1
match out on lo0 inet6 from <regress.1> to <regress.2> nat-to ::1
@


1.8
log
@More tweaks to try to catchup to recent pf changes.
pfopt5 part from sthen@@

ok henning@@ sthen@@
@
text
@d1 1
a1 1
table <regress> { 1.2.3.4 !5.6.7.8 10.0.0.0/8 127.0.0.1 ::1 fe80::1 }
d4 1
a4 1
match out on lo0 inet from <regress.1> to <regress.2> nat-to 127.0.0.1
d6 2
a7 2
match in on lo0 inet from <regress.1> to <regress.2> rdr-to 127.0.0.1
match in on ! lo0 inet from ! <regress.1> to <regress.2> rdr-to 127.0.0.1
d12 6
a17 6
pass in from <regress> to any flags S/SA keep state
pass out from any to <regress> flags S/SA keep state
pass in from <regress.1> to any flags S/SA keep state
pass in from <regress.2> to any flags S/SA keep state
pass out from any to ! <regress.1> flags S/SA keep state
pass out from any to ! <regress.2> flags S/SA keep state
@


1.7
log
@scrub gone
@
text
@d4 4
a7 4
nat on lo0 inet from <regress.1> to <regress.2> -> 127.0.0.1
nat on ! lo0 inet from ! <regress.1> to <regress.2> -> 127.0.0.1
rdr on lo0 inet from <regress.1> to <regress.2> -> 127.0.0.1
rdr on ! lo0 inet from ! <regress.1> to <regress.2> -> 127.0.0.1
@


1.6
log
@Remove "localhost" from the table test, since the result is dependent
on the resolver.  In some enviroments you'll get an AAAA for it,
in others you won't. Testing the resolver isn't really the intention
of this test anyway.
OK henning
@
text
@a3 4
scrub in from <regress.1> to any fragment reassemble
scrub in from ! <regress.2> to any fragment reassemble
scrub out from any to ! <regress.1> fragment reassemble
scrub out from any to <regress.2> fragment reassemble
d8 4
@


1.5
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d2 1
a2 1
table <regress.1> const { ::1 fe80::/64 ::1 127.0.0.1 }
@


1.4
log
@Big Sync
@
text
@d12 6
a17 6
pass in from <regress> to any
pass out from any to <regress>
pass in from <regress.1> to any
pass in from <regress.2> to any
pass out from any to ! <regress.1>
pass out from any to ! <regress.2>
@


1.3
log
@More complete table definition.
@
text
@d4 4
a7 4
scrub in from <regress.1> to any fragment reassemble 
scrub in from ! <regress.2> to any fragment reassemble 
scrub out from any to ! <regress.1> fragment reassemble 
scrub out from any to <regress.2> fragment reassemble 
d12 6
a17 6
pass in from <regress> to any 
pass out from any to <regress> 
pass in from <regress.1> to any 
pass in from <regress.2> to any 
pass out from any to ! <regress.1> 
pass out from any to ! <regress.2> 
@


1.2
log
@Better parsing and -v support for tables:

  - remove the tableaddrs and tableaddr yacc production and reuse
    host_list instead.
  - produce better error messages.
  - do not load addresses from external file when it is not
    required (like with -R option).
  - store initializers in a new node_tinit linked list before
    putting them into the address buffer (see next point).
  - add a new print_tabledef() function, which makes "pfctl -nvf"
    print something useful for table definitions, which in turn
    makes it possible to write better regress tests (see first chunk
    of the diff) and bring table definition consistant with other
    parsed rules.

ok dhartmei@@
@
text
@d3 1
@


1.1
log
@Regression tests for table statements and rules containing tables.
ok henning@@
@
text
@d1 2
@

