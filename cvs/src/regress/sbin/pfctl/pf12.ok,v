head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.26
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.22
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.12
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.20
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.18
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.16
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.18
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.16
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.12
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.14
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.10
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.8
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.6
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.4
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.2
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.17.08.15.32;	author mcbride;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.6;

1.6
date	2003.07.29.20.28.33;	author cedric;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.05.14.13.37;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.22.07.10.33;	author camield;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.24.18.10.25;	author dhartmei;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.27.18.23.39;	author dhartmei;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.07.11.56.58;	author dhartmei;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@pass in inet from 127.0.0.1 to 127.0.0.0/8 no state
pass in inet from 127.0.0.0/16 to 127.0.0.0/24 no state
pass in inet from 127.0.0.0/25 to ! 127.0.0.0/26 flags S/SA
pass in inet from ! 127.0.0.1 to 127.0.0.0/16 flags S/SA
pass in inet from ! 127.0.0.1 to ! 127.0.0.0/8 flags S/SA
@


1.8
log
@'flags S/SA' not implicit if the rule is stateless.
@
text
@d3 3
a5 3
pass in inet from 127.0.0.0/25 to ! 127.0.0.0/26 flags S/SA keep state
pass in inet from ! 127.0.0.1 to 127.0.0.0/16 flags S/SA keep state
pass in inet from ! 127.0.0.1 to ! 127.0.0.0/8 flags S/SA keep state
@


1.7
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d1 2
a2 2
pass in inet from 127.0.0.1 to 127.0.0.0/8 flags S/SA no state
pass in inet from 127.0.0.0/16 to 127.0.0.0/24 flags S/SA no state
@


1.6
log
@Big Sync
@
text
@d1 5
a5 5
pass in inet from 127.0.0.1 to 127.0.0.0/8
pass in inet from 127.0.0.0/16 to 127.0.0.0/24
pass in inet from 127.0.0.0/25 to ! 127.0.0.0/26
pass in inet from ! 127.0.0.1 to 127.0.0.0/16
pass in inet from ! 127.0.0.1 to ! 127.0.0.0/8
@


1.5
log
@no more rule numbers in output
@
text
@d1 5
a5 5
pass in inet from 127.0.0.1 to 127.0.0.0/8 
pass in inet from 127.0.0.0/16 to 127.0.0.0/24 
pass in inet from 127.0.0.0/25 to ! 127.0.0.0/26 
pass in inet from ! 127.0.0.1 to 127.0.0.0/16 
pass in inet from ! 127.0.0.1 to ! 127.0.0.0/8 
@


1.4
log
@Update for new semantics of set_ipmask (netmask is applied immediately
to an address by pfctl).
@
text
@d1 5
a5 5
@@0 pass in inet from 127.0.0.1 to 127.0.0.0/8 
@@1 pass in inet from 127.0.0.0/16 to 127.0.0.0/24 
@@2 pass in inet from 127.0.0.0/25 to ! 127.0.0.0/26 
@@3 pass in inet from ! 127.0.0.1 to 127.0.0.0/16 
@@4 pass in inet from ! 127.0.0.1 to ! 127.0.0.0/8 
@


1.3
log
@Add dynamic (in-kernel) interface name -> address translation. Instead of
using just the interface name instead of an address and reloading the rule
set whenever the interface changes its address, the interface name can be
put in parentheses, and the kernel will keep track of changes and update
rules. There is no additional cost for evaluating rules (per packet),
the cost occurs when an interface changes address (and the rules are
traversed and updated where necessary).
@
text
@d1 5
a5 5
@@0 pass in inet from 127.0.0.1 to 127.0.0.1/8 
@@1 pass in inet from 127.0.0.1/16 to 127.0.0.1/24 
@@2 pass in inet from 127.0.0.1/25 to ! 127.0.0.1/26 
@@3 pass in inet from ! 127.0.0.1 to 127.0.0.1/16 
@@4 pass in inet from ! 127.0.0.1 to ! 127.0.0.1/8 
@


1.2
log
@And adjust regress tests to match the rule number output.
@
text
@d1 1
a1 1
@@0 pass in inet from 127.0.0.1/32 to 127.0.0.1/8 
d4 2
a5 2
@@3 pass in inet from ! 127.0.0.1/32 to 127.0.0.1/16 
@@4 pass in inet from ! 127.0.0.1/32 to ! 127.0.0.1/8 
@


1.1
log
@Add interface name to address translation to pfctl, document it and add
a regress test. Translation is done on rule set load-time only, so the
rule sets must be reloaded when an interface address changes.
parse.y patch from Cedric Berger. Similar patch from Jonathon Fletcher.
Thanks to both.
@
text
@d2 4
a5 4
@@0 pass in inet from 127.0.0.1/16 to 127.0.0.1/24 
@@0 pass in inet from 127.0.0.1/25 to ! 127.0.0.1/26 
@@0 pass in inet from ! 127.0.0.1/32 to 127.0.0.1/16 
@@0 pass in inet from ! 127.0.0.1/32 to ! 127.0.0.1/8 
@

