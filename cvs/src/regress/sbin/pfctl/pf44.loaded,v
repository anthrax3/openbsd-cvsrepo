head	1.10;
access;
symbols
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.24
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.20
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.18
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.16
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.14
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.12
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.8
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.6
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.4
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.8
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.6
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4;
locks; strict;
comment	@# @;


1.10
date	2011.12.12.21.41.29;	author mikeb;	state Exp;
branches;
next	1.9;

1.9
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.8;

1.8
date	2009.06.30.03.42.11;	author david;	state Exp;
branches;
next	1.7;

1.7
date	2009.04.06.12.41.48;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.18.20.27.01;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.11.14.04.57;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.08.14.30.27;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.01.04.26.19;	author dhartmei;	state Exp;
branches;
next	1.1;

1.1
date	2002.12.18.16.49.54;	author dhartmei;	state Exp;
branches;
next	;


desc
@@


1.10
log
@fixup regression tests wrt skip steps (fixed in pfctl.c rev1.305);
ok henning mcbride (a while back)
@
text
@@@0 match in on lo0 all scrub (no-df min-ttl 15 max-mss 224)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@1 match in on lo0 all scrub (no-df min-ttl 15 max-mss 224)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@2 match in on lo0 all scrub (no-df min-ttl 15 max-mss 224)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@3 match in on lo0 all scrub (no-df min-ttl 15 max-mss 224)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@4 match in on lo0 all scrub (no-df min-ttl 15 max-mss 224)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@5 match in on lo0 all scrub (no-df min-ttl 15 reassemble tcp max-mss 224)
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@


1.9
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@d2 1
a2 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end dp=end ]
d6 1
a6 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end dp=end ]
d10 1
a10 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end dp=end ]
d14 1
a14 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end dp=end ]
d18 1
a18 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end dp=end ]
d22 1
a22 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end dp=end ]
@


1.8
log
@update after the "reassemble tcp" fix (kernel/6178); ok sthen@@
@
text
@d2 1
a2 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d6 1
a6 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d10 1
a10 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d14 1
a14 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d18 1
a18 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d22 1
a22 1
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
@


1.7
log
@scrub gone
@
text
@d21 1
a21 1
@@5 match in on lo0 all scrub (no-df min-ttl 15 max-mss 224)
@


1.6
log
@Big Sync
@
text
@d1 1
a1 1
@@0 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment reassemble
d5 1
a5 1
@@1 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment reassemble
d9 1
a9 1
@@2 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment reassemble
d13 1
a13 1
@@3 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment drop-ovl
d17 1
a17 1
@@4 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment crop
d21 1
a21 1
@@5 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment reassemble
@


1.5
log
@regen; output formatting change
@
text
@d1 1
a1 1
@@0 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment reassemble 
d5 1
a5 1
@@1 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment reassemble 
d9 1
a9 1
@@2 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment reassemble 
d13 1
a13 1
@@3 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment drop-ovl 
d17 1
a17 1
@@4 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment crop 
d21 1
a21 1
@@5 scrub in on lo0 all no-df min-ttl 15 max-mss 224 fragment reassemble 
@


1.4
log
@regen
@
text
@d2 3
a4 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d6 3
a8 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d10 3
a12 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d14 3
a16 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d18 3
a20 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

d22 3
a24 4
[ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
[ queue: qname= qid=0 pqname= pqid=0 ]
[ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]

@


1.3
log
@regen after pfctl output change
@
text
@d3 1
a3 1
[ Queue: qname= qid=0 pqname= pqid=0 ]
d8 1
a8 1
[ Queue: qname= qid=0 pqname= pqid=0 ]
d13 1
a13 1
[ Queue: qname= qid=0 pqname= pqid=0 ]
d18 1
a18 1
[ Queue: qname= qid=0 pqname= pqid=0 ]
d23 1
a23 1
[ Queue: qname= qid=0 pqname= pqid=0 ]
d28 1
a28 1
[ Queue: qname= qid=0 pqname= pqid=0 ]
@


1.2
log
@Remove skip step for action (scrub vs. non-scrub), as scrub rules are
stored in a separate list now. Regress tests still pass after
sed "s/ a=end / /g", other skip steps are not affected.
@
text
@d3 1
d8 1
d13 1
d18 1
d23 1
d28 1
@


1.1
log
@Load regress rules into anchor regress:regress and compare the output
of pfctl -vvsr with expected output. This verifies that skip step
values don't change unexpectedly.
@
text
@d2 1
a2 1
[ Skip steps: a=end i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d6 1
a6 1
[ Skip steps: a=end i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d10 1
a10 1
[ Skip steps: a=end i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d14 1
a14 1
[ Skip steps: a=end i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d18 1
a18 1
[ Skip steps: a=end i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
d22 1
a22 1
[ Skip steps: a=end i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
@

