head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.22
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.12
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.20
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.18
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.16
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.14
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.10
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.8
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.18
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.16
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.12
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.14
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.10
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.8
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.6
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.4
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.2.0.14
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.19.14.18.09;	author cedric;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@ip_list = "{ ::1 ::2 ::3 0.0.0.1 0.0.0.2 0.0.0.3 }"
table_list = "{ <bar1> <bar2> <bar3> }"
pass inet6 from (lo0) to ::1 flags S/SA
pass inet6 from (lo0) to ::2 flags S/SA
pass inet6 from (lo0) to ::3 flags S/SA
pass inet from (lo0) to 0.0.0.1 flags S/SA
pass inet from (lo0) to 0.0.0.2 flags S/SA
pass inet from (lo0) to 0.0.0.3 flags S/SA
pass from <foo> to <bar1> flags S/SA
pass from <foo> to <bar2> flags S/SA
pass from <foo> to <bar3> flags S/SA
pass inet6 from <foo> to ::1 flags S/SA
pass inet6 from <foo> to ::2 flags S/SA
pass inet6 from <foo> to ::3 flags S/SA
pass inet from <foo> to 0.0.0.1 flags S/SA
pass inet from <foo> to 0.0.0.2 flags S/SA
pass inet from <foo> to 0.0.0.3 flags S/SA
pass from <foo> to <bar1> flags S/SA
pass from <foo> to <bar2> flags S/SA
pass from <foo> to <bar3> flags S/SA
pass from no-route to <bar1> flags S/SA
pass from no-route to <bar2> flags S/SA
pass from no-route to <bar3> flags S/SA
pass inet6 from no-route to ::1 flags S/SA
pass inet6 from no-route to ::2 flags S/SA
pass inet6 from no-route to ::3 flags S/SA
pass inet from no-route to 0.0.0.1 flags S/SA
pass inet from no-route to 0.0.0.2 flags S/SA
pass inet from no-route to 0.0.0.3 flags S/SA
pass from no-route to <bar1> flags S/SA
pass from no-route to <bar2> flags S/SA
pass from no-route to <bar3> flags S/SA
@


1.3
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d3 30
a32 30
pass inet6 from (lo0) to ::1 flags S/SA keep state
pass inet6 from (lo0) to ::2 flags S/SA keep state
pass inet6 from (lo0) to ::3 flags S/SA keep state
pass inet from (lo0) to 0.0.0.1 flags S/SA keep state
pass inet from (lo0) to 0.0.0.2 flags S/SA keep state
pass inet from (lo0) to 0.0.0.3 flags S/SA keep state
pass from <foo> to <bar1> flags S/SA keep state
pass from <foo> to <bar2> flags S/SA keep state
pass from <foo> to <bar3> flags S/SA keep state
pass inet6 from <foo> to ::1 flags S/SA keep state
pass inet6 from <foo> to ::2 flags S/SA keep state
pass inet6 from <foo> to ::3 flags S/SA keep state
pass inet from <foo> to 0.0.0.1 flags S/SA keep state
pass inet from <foo> to 0.0.0.2 flags S/SA keep state
pass inet from <foo> to 0.0.0.3 flags S/SA keep state
pass from <foo> to <bar1> flags S/SA keep state
pass from <foo> to <bar2> flags S/SA keep state
pass from <foo> to <bar3> flags S/SA keep state
pass from no-route to <bar1> flags S/SA keep state
pass from no-route to <bar2> flags S/SA keep state
pass from no-route to <bar3> flags S/SA keep state
pass inet6 from no-route to ::1 flags S/SA keep state
pass inet6 from no-route to ::2 flags S/SA keep state
pass inet6 from no-route to ::3 flags S/SA keep state
pass inet from no-route to 0.0.0.1 flags S/SA keep state
pass inet from no-route to 0.0.0.2 flags S/SA keep state
pass inet from no-route to 0.0.0.3 flags S/SA keep state
pass from no-route to <bar1> flags S/SA keep state
pass from no-route to <bar2> flags S/SA keep state
pass from no-route to <bar3> flags S/SA keep state
@


1.2
log
@Big Sync
@
text
@d3 30
a32 30
pass inet6 from (lo0) to ::1
pass inet6 from (lo0) to ::2
pass inet6 from (lo0) to ::3
pass inet from (lo0) to 0.0.0.1
pass inet from (lo0) to 0.0.0.2
pass inet from (lo0) to 0.0.0.3
pass from <foo> to <bar1>
pass from <foo> to <bar2>
pass from <foo> to <bar3>
pass inet6 from <foo> to ::1
pass inet6 from <foo> to ::2
pass inet6 from <foo> to ::3
pass inet from <foo> to 0.0.0.1
pass inet from <foo> to 0.0.0.2
pass inet from <foo> to 0.0.0.3
pass from <foo> to <bar1>
pass from <foo> to <bar2>
pass from <foo> to <bar3>
pass from no-route to <bar1>
pass from no-route to <bar2>
pass from no-route to <bar3>
pass inet6 from no-route to ::1
pass inet6 from no-route to ::2
pass inet6 from no-route to ::3
pass inet from no-route to 0.0.0.1
pass inet from no-route to 0.0.0.2
pass inet from no-route to 0.0.0.3
pass from no-route to <bar1>
pass from no-route to <bar2>
pass from no-route to <bar3>
@


1.1
log
@Skip step optimization involving dynaddr, tables, no-route.
Optimisation should be done on theses rules.
@
text
@d3 30
a32 30
pass inet6 from (lo0) to ::1 
pass inet6 from (lo0) to ::2 
pass inet6 from (lo0) to ::3 
pass inet from (lo0) to 0.0.0.1 
pass inet from (lo0) to 0.0.0.2 
pass inet from (lo0) to 0.0.0.3 
pass from <foo> to <bar1> 
pass from <foo> to <bar2> 
pass from <foo> to <bar3> 
pass inet6 from <foo> to ::1 
pass inet6 from <foo> to ::2 
pass inet6 from <foo> to ::3 
pass inet from <foo> to 0.0.0.1 
pass inet from <foo> to 0.0.0.2 
pass inet from <foo> to 0.0.0.3 
pass from <foo> to <bar1> 
pass from <foo> to <bar2> 
pass from <foo> to <bar3> 
pass from no-route to <bar1> 
pass from no-route to <bar2> 
pass from no-route to <bar3> 
pass inet6 from no-route to ::1 
pass inet6 from no-route to ::2 
pass inet6 from no-route to ::3 
pass inet from no-route to 0.0.0.1 
pass inet from no-route to 0.0.0.2 
pass inet from no-route to 0.0.0.3 
pass from no-route to <bar1> 
pass from no-route to <bar2> 
pass from no-route to <bar3> 
@

