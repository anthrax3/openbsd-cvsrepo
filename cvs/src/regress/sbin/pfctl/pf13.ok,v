head	1.17;
access;
symbols
	OPENBSD_6_0:1.16.0.20
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.10
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.18
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.16
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.14
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.12
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.8
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.6
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.4
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.2
	OPENBSD_5_0:1.15.0.2
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.14.0.6
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.4
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.12.0.14
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.10
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.8
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.6
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.4
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.2
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.11.0.12
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.10
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.8
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.6
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.4
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2;
locks; strict;
comment	@# @;


1.17
date	2016.09.01.16.18.09;	author henning;	state Exp;
branches;
next	1.16;
commitid	1YZeac6u4qmzjapG;

1.16
date	2011.11.27.10.33.37;	author henning;	state Exp;
branches;
next	1.15;

1.15
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.14;

1.14
date	2010.01.13.01.08.38;	author mcbride;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.06.14.11.07;	author jsg;	state Exp;
branches;
next	1.12;

1.12
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.11;

1.11
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.29.20.28.33;	author cedric;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.24.13.59.32;	author mcbride;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.06.11.09.48;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2002.12.05.14.13.37;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2002.11.24.20.42.17;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.22.07.10.33;	author camield;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.20.19.52.59;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.24.18.10.25;	author dhartmei;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.27.18.23.39;	author dhartmei;	state Exp;
branches;
next	1.1;

1.1
date	2001.11.26.16.53.27;	author jasoni;	state Exp;
branches;
next	;


desc
@@


1.17
log
@no route-to/reply-to/dup-to on block rules, aka make this pass again
triggered by bluhm's *meep, secret*
@
text
@pass in quick on enc0 all flags S/SA
pass in quick on enc0 inet all flags S/SA
pass in quick on enc0 inet6 all flags S/SA
pass out quick on tun1000000 inet all flags S/SA route-to tun1000001
pass out quick on tun1000000 inet from any to 192.168.1.1 flags S/SA route-to tun1000001
pass out quick on tun1000000 inet6 from any to fec0::1 flags S/SA route-to tun1000001
pass in on tun1000000 inet proto tcp from any to any port = 21 flags S/SA dup-to 192.168.1.1@@tun1000001
pass in on tun1000000 inet6 proto tcp from any to any port = 21 flags S/SA dup-to fec0::1@@tun1000001
pass in quick on tun1000000 inet from 192.168.1.1 to 10.1.1.1 flags S/SA route-to tun1000001
pass in quick on tun1000000 inet6 from fec0::/64 to fec1::2 flags S/SA route-to tun1000001
pass in on tun1000000 inet proto tcp from any to any port = 21 flags S/SA reply-to 192.168.1.1@@tun1000001
pass in on tun1000000 inet6 proto tcp from any to any port = 21 flags S/SA reply-to fec0::1@@tun1000001
pass in quick on tun1000000 inet from 192.168.1.1 to 10.1.1.1 flags S/SA reply-to tun1000001
pass in quick on tun1000000 inet6 from fec0::/64 to fec1::2 flags S/SA reply-to tun1000001
pass in quick on tun1000000 inet from 192.168.1.1 to 10.1.1.1 flags S/SA dup-to 192.168.1.100@@tun1000001
pass in quick on tun1000000 inet6 from fec0::/64 to fec1::2 flags S/SA dup-to fec1::2@@tun1000001
@


1.16
log
@adjust for port numbers instead of names by default
From: Lawrence Teo <lteo at devio at us>
@
text
@d7 2
a8 2
block drop in on tun1000000 inet proto tcp from any to any port = 21 dup-to 192.168.1.1@@tun1000001
block drop in on tun1000000 inet6 proto tcp from any to any port = 21 dup-to fec0::1@@tun1000001
d11 2
a12 2
block drop in on tun1000000 inet proto tcp from any to any port = 21 reply-to 192.168.1.1@@tun1000001
block drop in on tun1000000 inet6 proto tcp from any to any port = 21 reply-to fec0::1@@tun1000001
@


1.15
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@d7 2
a8 2
block drop in on tun1000000 inet proto tcp from any to any port = ftp dup-to 192.168.1.1@@tun1000001
block drop in on tun1000000 inet6 proto tcp from any to any port = ftp dup-to fec0::1@@tun1000001
d11 2
a12 2
block drop in on tun1000000 inet proto tcp from any to any port = ftp reply-to 192.168.1.1@@tun1000001
block drop in on tun1000000 inet6 proto tcp from any to any port = ftp reply-to fec0::1@@tun1000001
@


1.14
log
@Update regress output files to -current behaviour
- non-pool translation/routing specification
- leftover bits from nat-to/rdr-to/binat-to
@
text
@d1 6
a6 6
pass in quick on enc0 all flags S/SA keep state fastroute
pass in quick on enc0 inet all flags S/SA keep state fastroute
pass in quick on enc0 inet6 all flags S/SA keep state fastroute
pass out quick on tun1000000 inet all flags S/SA keep state route-to tun1000001
pass out quick on tun1000000 inet from any to 192.168.1.1 flags S/SA keep state route-to tun1000001
pass out quick on tun1000000 inet6 from any to fec0::1 flags S/SA keep state route-to tun1000001
d9 2
a10 2
pass in quick on tun1000000 inet from 192.168.1.1 to 10.1.1.1 flags S/SA keep state route-to tun1000001
pass in quick on tun1000000 inet6 from fec0::/64 to fec1::2 flags S/SA keep state route-to tun1000001
d13 4
a16 4
pass in quick on tun1000000 inet from 192.168.1.1 to 10.1.1.1 flags S/SA keep state reply-to tun1000001
pass in quick on tun1000000 inet6 from fec0::/64 to fec1::2 flags S/SA keep state reply-to tun1000001
pass in quick on tun1000000 inet from 192.168.1.1 to 10.1.1.1 flags S/SA keep state dup-to 192.168.1.100@@tun1000001
pass in quick on tun1000000 inet6 from fec0::/64 to fec1::2 flags S/SA keep state dup-to fec1::2@@tun1000001
@


1.13
log
@more updates for new pf with source-hash manually added to
loaded output as it doesn't currently appear as it should.

ok henning@@
@
text
@d7 2
a8 2
block drop in on tun1000000 inet proto tcp from any to any port = ftp dup-to (tun1000001 192.168.1.1)
block drop in on tun1000000 inet6 proto tcp from any to any port = ftp dup-to (tun1000001 fec0::1)
d11 2
a12 2
block drop in on tun1000000 inet proto tcp from any to any port = ftp reply-to (tun1000001 192.168.1.1)
block drop in on tun1000000 inet6 proto tcp from any to any port = ftp reply-to (tun1000001 fec0::1)
d15 2
a16 2
pass in quick on tun1000000 inet from 192.168.1.1 to 10.1.1.1 flags S/SA keep state dup-to (tun1000001 192.168.1.100)
pass in quick on tun1000000 inet6 from fec0::/64 to fec1::2 flags S/SA keep state dup-to (tun1000001 fec1::2)
@


1.12
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d1 16
a16 16
pass in quick on enc0 fastroute all flags S/SA keep state
pass in quick on enc0 fastroute inet all flags S/SA keep state
pass in quick on enc0 fastroute inet6 all flags S/SA keep state
pass out quick on tun1000000 route-to tun1000001 inet all flags S/SA keep state
pass out quick on tun1000000 route-to tun1000001 inet from any to 192.168.1.1 flags S/SA keep state
pass out quick on tun1000000 route-to tun1000001 inet6 from any to fec0::1 flags S/SA keep state
block drop in on tun1000000 dup-to (tun1000001 192.168.1.1) inet proto tcp from any to any port = ftp
block drop in on tun1000000 dup-to (tun1000001 fec0::1) inet6 proto tcp from any to any port = ftp
pass in quick on tun1000000 route-to tun1000001 inet from 192.168.1.1 to 10.1.1.1 flags S/SA keep state
pass in quick on tun1000000 route-to tun1000001 inet6 from fec0::/64 to fec1::2 flags S/SA keep state
block drop in on tun1000000 reply-to (tun1000001 192.168.1.1) inet proto tcp from any to any port = ftp
block drop in on tun1000000 reply-to (tun1000001 fec0::1) inet6 proto tcp from any to any port = ftp
pass in quick on tun1000000 reply-to tun1000001 inet from 192.168.1.1 to 10.1.1.1 flags S/SA keep state
pass in quick on tun1000000 reply-to tun1000001 inet6 from fec0::/64 to fec1::2 flags S/SA keep state
pass in quick on tun1000000 dup-to (tun1000001 192.168.1.100) inet from 192.168.1.1 to 10.1.1.1 flags S/SA keep state
pass in quick on tun1000000 dup-to (tun1000001 fec1::2) inet6 from fec0::/64 to fec1::2 flags S/SA keep state
@


1.11
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@d1 6
a6 6
pass in quick on enc0 fastroute all
pass in quick on enc0 fastroute inet all
pass in quick on enc0 fastroute inet6 all
pass out quick on tun1000000 route-to tun1000001 inet all
pass out quick on tun1000000 route-to tun1000001 inet from any to 192.168.1.1
pass out quick on tun1000000 route-to tun1000001 inet6 from any to fec0::1
d9 2
a10 2
pass in quick on tun1000000 route-to tun1000001 inet from 192.168.1.1 to 10.1.1.1
pass in quick on tun1000000 route-to tun1000001 inet6 from fec0::/64 to fec1::2
d13 4
a16 4
pass in quick on tun1000000 reply-to tun1000001 inet from 192.168.1.1 to 10.1.1.1
pass in quick on tun1000000 reply-to tun1000001 inet6 from fec0::/64 to fec1::2
pass in quick on tun1000000 dup-to (tun1000001 192.168.1.100) inet from 192.168.1.1 to 10.1.1.1
pass in quick on tun1000000 dup-to (tun1000001 fec1::2) inet6 from fec0::/64 to fec1::2
@


1.10
log
@Big Sync
@
text
@d4 13
a16 13
pass out quick on tun0 route-to tun1 inet all
pass out quick on tun0 route-to tun1 inet from any to 192.168.1.1
pass out quick on tun0 route-to tun1 inet6 from any to fec0::1
block drop in on tun0 dup-to (tun1 192.168.1.1) inet proto tcp from any to any port = ftp
block drop in on tun0 dup-to (tun1 fec0::1) inet6 proto tcp from any to any port = ftp
pass in quick on tun0 route-to tun1 inet from 192.168.1.1 to 10.1.1.1
pass in quick on tun0 route-to tun1 inet6 from fec0::/64 to fec1::2
block drop in on tun0 reply-to (tun1 192.168.1.1) inet proto tcp from any to any port = ftp
block drop in on tun0 reply-to (tun1 fec0::1) inet6 proto tcp from any to any port = ftp
pass in quick on tun0 reply-to tun1 inet from 192.168.1.1 to 10.1.1.1
pass in quick on tun0 reply-to tun1 inet6 from fec0::/64 to fec1::2
pass in quick on tun0 dup-to (tun1 192.168.1.100) inet from 192.168.1.1 to 10.1.1.1
pass in quick on tun0 dup-to (tun1 fec1::2) inet6 from fec0::/64 to fec1::2
@


1.9
log
@Add "reply-to" keyword to regress test.
@
text
@d1 16
a16 16
pass in quick on enc0 fastroute all 
pass in quick on enc0 fastroute inet all 
pass in quick on enc0 fastroute inet6 all 
pass out quick on tun0 route-to tun1 inet all 
pass out quick on tun0 route-to tun1 inet from any to 192.168.1.1 
pass out quick on tun0 route-to tun1 inet6 from any to fec0::1 
block drop in on tun0 dup-to (tun1 192.168.1.1) inet proto tcp from any to any port = ftp 
block drop in on tun0 dup-to (tun1 fec0::1) inet6 proto tcp from any to any port = ftp 
pass in quick on tun0 route-to tun1 inet from 192.168.1.1 to 10.1.1.1 
pass in quick on tun0 route-to tun1 inet6 from fec0::/64 to fec1::2 
block drop in on tun0 reply-to (tun1 192.168.1.1) inet proto tcp from any to any port = ftp 
block drop in on tun0 reply-to (tun1 fec0::1) inet6 proto tcp from any to any port = ftp 
pass in quick on tun0 reply-to tun1 inet from 192.168.1.1 to 10.1.1.1 
pass in quick on tun0 reply-to tun1 inet6 from fec0::/64 to fec1::2 
pass in quick on tun0 dup-to (tun1 192.168.1.100) inet from 192.168.1.1 to 10.1.1.1 
pass in quick on tun0 dup-to (tun1 fec1::2) inet6 from fec0::/64 to fec1::2 
@


1.8
log
@block -> block drop
@
text
@d11 4
@


1.7
log
@no more rule numbers in output
@
text
@d7 2
a8 2
block in on tun0 dup-to (tun1 192.168.1.1) inet proto tcp from any to any port = ftp 
block in on tun0 dup-to (tun1 fec0::1) inet6 proto tcp from any to any port = ftp 
@


1.6
log
@make succeed again; explicit address family needed in one more case now
@
text
@d1 12
a12 12
@@0 pass in quick on enc0 fastroute all 
@@1 pass in quick on enc0 fastroute inet all 
@@2 pass in quick on enc0 fastroute inet6 all 
@@3 pass out quick on tun0 route-to tun1 inet all 
@@4 pass out quick on tun0 route-to tun1 inet from any to 192.168.1.1 
@@5 pass out quick on tun0 route-to tun1 inet6 from any to fec0::1 
@@6 block in on tun0 dup-to (tun1 192.168.1.1) inet proto tcp from any to any port = ftp 
@@7 block in on tun0 dup-to (tun1 fec0::1) inet6 proto tcp from any to any port = ftp 
@@8 pass in quick on tun0 route-to tun1 inet from 192.168.1.1 to 10.1.1.1 
@@9 pass in quick on tun0 route-to tun1 inet6 from fec0::/64 to fec1::2 
@@10 pass in quick on tun0 dup-to (tun1 192.168.1.100) inet from 192.168.1.1 to 10.1.1.1 
@@11 pass in quick on tun0 dup-to (tun1 fec1::2) inet6 from fec0::/64 to fec1::2 
@


1.5
log
@Update for new semantics of set_ipmask (netmask is applied immediately
to an address by pfctl).
@
text
@d4 1
a4 1
@@3 pass out quick on tun0 route-to tun1 all 
@


1.4
log
@adapt to new dup-to syntax
@
text
@d10 1
a10 1
@@9 pass in quick on tun0 route-to tun1 inet6 from fec0::1/64 to fec1::2 
d12 1
a12 1
@@11 pass in quick on tun0 dup-to (tun1 fec1::2) inet6 from fec0::1/64 to fec1::2 
@


1.3
log
@Add dynamic (in-kernel) interface name -> address translation. Instead of
using just the interface name instead of an address and reloading the rule
set whenever the interface changes its address, the interface name can be
put in parentheses, and the kernel will keep track of changes and update
rules. There is no additional cost for evaluating rules (per packet),
the cost occurs when an interface changes address (and the rules are
traversed and updated where necessary).
@
text
@d7 2
a8 2
@@6 block in on tun0 dup-to tun1:192.168.1.1 inet proto tcp from any to any port = ftp 
@@7 block in on tun0 dup-to tun1:fec0::1 inet6 proto tcp from any to any port = ftp 
d11 2
a12 2
@@10 pass in quick on tun0 dup-to tun1:192.168.1.100 inet from 192.168.1.1 to 10.1.1.1 
@@11 pass in quick on tun0 dup-to tun1:fec1::2 inet6 from fec0::1/64 to fec1::2 
@


1.2
log
@And adjust regress tests to match the rule number output.
@
text
@d5 2
a6 2
@@4 pass out quick on tun0 route-to tun1 inet from any to 192.168.1.1/32 
@@5 pass out quick on tun0 route-to tun1 inet6 from any to fec0::1/128 
d9 4
a12 4
@@8 pass in quick on tun0 route-to tun1 inet from 192.168.1.1/32 to 10.1.1.1/32 
@@9 pass in quick on tun0 route-to tun1 inet6 from fec0::1/64 to fec1::2/128 
@@10 pass in quick on tun0 dup-to tun1:192.168.1.100 inet from 192.168.1.1/32 to 10.1.1.1/32 
@@11 pass in quick on tun0 dup-to tun1:fec1::2 inet6 from fec0::1/64 to fec1::2/128 
@


1.1
log
@add tests for fastroute options
@
text
@d2 11
a12 11
@@0 pass in quick on enc0 fastroute inet all 
@@0 pass in quick on enc0 fastroute inet6 all 
@@0 pass out quick on tun0 route-to tun1 all 
@@0 pass out quick on tun0 route-to tun1 inet from any to 192.168.1.1/32 
@@0 pass out quick on tun0 route-to tun1 inet6 from any to fec0::1/128 
@@0 block in on tun0 dup-to tun1:192.168.1.1 inet proto tcp from any to any port = ftp 
@@0 block in on tun0 dup-to tun1:fec0::1 inet6 proto tcp from any to any port = ftp 
@@0 pass in quick on tun0 route-to tun1 inet from 192.168.1.1/32 to 10.1.1.1/32 
@@0 pass in quick on tun0 route-to tun1 inet6 from fec0::1/64 to fec1::2/128 
@@0 pass in quick on tun0 dup-to tun1:192.168.1.100 inet from 192.168.1.1/32 to 10.1.1.1/32 
@@0 pass in quick on tun0 dup-to tun1:fec1::2 inet6 from fec0::1/64 to fec1::2/128 
@

