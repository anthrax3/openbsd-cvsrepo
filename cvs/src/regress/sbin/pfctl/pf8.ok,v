head	1.14;
access;
symbols
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.56
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.52
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.42
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.50
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.48
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.46
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.44
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.40
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.38
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.36
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.34
	OPENBSD_5_0:1.14.0.32
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.30
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.28
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.24
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.26
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.22
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.20
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.18
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.16
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.14
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.12
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.10
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.8
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.6
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.4
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.2
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3;
locks; strict;
comment	@# @;


1.14
date	2003.12.05.16.55.40;	author henning;	state Exp;
branches;
next	1.13;

1.13
date	2003.07.29.20.28.34;	author cedric;	state Exp;
branches;
next	1.12;

1.12
date	2002.12.06.11.09.48;	author henning;	state Exp;
branches;
next	1.11;

1.11
date	2002.12.05.14.13.37;	author henning;	state Exp;
branches;
next	1.10;

1.10
date	2002.12.05.13.09.32;	author henning;	state Exp;
branches;
next	1.9;

1.9
date	2002.10.05.22.25.33;	author dhartmei;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.08.08.45.16;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2002.06.08.08.06.04;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.24.18.10.25;	author dhartmei;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.27.18.23.39;	author dhartmei;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.13.07.01.04;	author dhartmei;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.15.21.53.09;	author dhartmei;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.03.08.16.01;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.28.12.17.04;	author markus;	state Exp;
branches;
next	;


desc
@@


1.14
log
@lo1, tun0, tun1 don't exist any more. thus, create the interfaces we need for
regress purposes before starting and destroy them afterwards.
lo1 -> lo1000000
tun0 -> tun1000000
tun1 -> tun1000001

ok markus@@
@
text
@extern = "{ ! 10.0.0.0/8, 10.1.2.3 }"
block drop out log on tun1000001 inet from ! 10.0.0.0/8 to any
block drop out log on tun1000001 inet from 10.1.2.3 to any
@


1.13
log
@Big Sync
@
text
@d2 2
a3 2
block drop out log on tun1 inet from ! 10.0.0.0/8 to any
block drop out log on tun1 inet from 10.1.2.3 to any
@


1.12
log
@block -> block drop
@
text
@d2 2
a3 2
block drop out log on tun1 inet from ! 10.0.0.0/8 to any 
block drop out log on tun1 inet from 10.1.2.3 to any 
@


1.11
log
@no more rule numbers in output
@
text
@d2 2
a3 2
block out log on tun1 inet from ! 10.0.0.0/8 to any 
block out log on tun1 inet from 10.1.2.3 to any 
@


1.10
log
@adjust after pfctl output changes
@
text
@d2 2
a3 2
@@0 block out log on tun1 inet from ! 10.0.0.0/8 to any 
@@1 block out log on tun1 inet from 10.1.2.3 to any 
@


1.9
log
@Expand {} lists from left to right, so 'pass in from { a, b } to any'
becomes '@@0 pass in from a to any @@1 pass in from b to any' instead of
the other way around. Patch from Camiel Dobbelaar.
@
text
@d1 1
a1 1
extern = { ! 10.0.0.0/8, 10.1.2.3 }
@


1.8
log
@no macro concatenation via +=
@
text
@d2 2
a3 2
@@0 block out log on tun1 inet from 10.1.2.3 to any 
@@1 block out log on tun1 inet from ! 10.0.0.0/8 to any 
@


1.7
log
@regression test for macro concatenation
ok dhartmei@@
@
text
@d1 3
a3 6
extern = { ! 10.0.0.0/8, 10.1.2.3, 
extern += 10.1.2.4, 10.1.2.5 }
@@0 block out log on tun1 inet from 10.1.2.5 to any 
@@1 block out log on tun1 inet from 10.1.2.4 to any 
@@2 block out log on tun1 inet from 10.1.2.3 to any 
@@3 block out log on tun1 inet from ! 10.0.0.0/8 to any 
@


1.6
log
@Add dynamic (in-kernel) interface name -> address translation. Instead of
using just the interface name instead of an address and reloading the rule
set whenever the interface changes its address, the interface name can be
put in parentheses, and the kernel will keep track of changes and update
rules. There is no additional cost for evaluating rules (per packet),
the cost occurs when an interface changes address (and the rules are
traversed and updated where necessary).
@
text
@d1 6
a6 3
extern = { ! 10.0.0.0/8, 10.1.2.3  }
@@0 block out log on tun1 inet from 10.1.2.3 to any 
@@1 block out log on tun1 inet from ! 10.0.0.0/8 to any 
@


1.5
log
@And adjust regress tests to match the rule number output.
@
text
@d2 1
a2 1
@@0 block out log on tun1 inet from 10.1.2.3/32 to any 
@


1.4
log
@Use more common interface names like lo0, tun0, enc0 for regress tests,
so they run anywhere. From jason@@.
@
text
@d3 1
a3 1
@@0 block out log on tun1 inet from ! 10.0.0.0/8 to any 
@


1.3
log
@Update regress tests. Some input syntax has changed (inet/inet6) as well
as some output format (netmasks, inet/inet6, return-icmp).
@
text
@d2 2
a3 2
@@0 block out log on rl0 inet from 10.1.2.3/32 to any 
@@0 block out log on rl0 inet from ! 10.0.0.0/8 to any 
@


1.2
log
@sync with output format changes (pfctl)
@
text
@d2 2
a3 2
@@0 block out log on rl0 from 10.1.2.3 to any 
@@0 block out log on rl0 from ! 10.0.0.0/255.0.0.0 to any 
@


1.1
log
@move '!' from host_list to host:  "xhost : '!' host | host;"; ok dhartmei@@
@
text
@d2 2
a3 2
@@1 block out log on rl0 from 10.1.2.3 to any 
@@1 block out log on rl0 from ! 10.0.0.0/255.0.0.0 to any 
@

