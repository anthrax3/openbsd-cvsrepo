head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.24
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.20
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.18
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.16
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.14
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.12
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.8
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.18
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.16
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.12
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.14
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.10
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.8
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.6
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.12.12.23.44.40;	author mikeb;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.08.06.17.58;	author mcbride;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.06.17.09.41;	author mcbride;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.01.23.19.17;	author mcbride;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update regression tests wrt skip steps (fixed in pfctl.c rev1.305);
ok henning mcbride (a while back)
@
text
@@@0 pass in inet proto icmp all icmp-type echorep
  [ Skip steps: i=end d=end r=end f=4 p=4 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@1 pass in inet proto icmp all icmp-type echorep code 0
  [ Skip steps: i=end d=end r=end f=4 p=4 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@2 pass in inet proto icmp all icmp-type 1
  [ Skip steps: i=end d=end r=end f=4 p=4 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@3 pass in inet proto icmp all icmp-type 1 code 1
  [ Skip steps: i=end d=end r=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@4 pass in inet6 proto ipv6-icmp all icmp6-type 0
  [ Skip steps: i=end d=end r=end f=8 p=8 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@5 pass in inet6 proto ipv6-icmp all icmp6-type 0 code 0
  [ Skip steps: i=end d=end r=end f=8 p=8 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@6 pass in inet6 proto ipv6-icmp all icmp6-type unreach
  [ Skip steps: i=end d=end r=end f=8 p=8 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@7 pass in inet6 proto ipv6-icmp all icmp6-type unreach code admin-unr
  [ Skip steps: i=end d=end r=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@8 block drop in inet proto icmp all icmp-type echorep
  [ Skip steps: i=end d=end r=end f=12 p=12 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@9 block drop in inet proto icmp all icmp-type echorep code 0
  [ Skip steps: i=end d=end r=end f=12 p=12 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@10 block drop in inet proto icmp all icmp-type 1
  [ Skip steps: i=end d=end r=end f=12 p=12 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@11 block drop in inet proto icmp all icmp-type 1 code 1
  [ Skip steps: i=end d=end r=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@12 block drop in inet6 proto ipv6-icmp all icmp6-type 0
  [ Skip steps: i=end d=end r=end f=16 p=16 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@13 block drop in inet6 proto ipv6-icmp all icmp6-type 0 code 0
  [ Skip steps: i=end d=end r=end f=16 p=16 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@14 block drop in inet6 proto ipv6-icmp all icmp6-type unreach
  [ Skip steps: i=end d=end r=end f=16 p=16 sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@15 block drop in inet6 proto ipv6-icmp all icmp6-type unreach code admin-unr
  [ Skip steps: i=end d=end r=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@16 pass in inet proto icmp all icmp-type unreach code needfrag
  [ Skip steps: i=end d=end r=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@@17 pass in inet6 proto ipv6-icmp all icmp6-type timex code reassemb
  [ Skip steps: i=end d=end r=end f=end p=end sa=end da=end sp=end dp=end ]
  [ queue: qname= qid=0 pqname= pqid=0 ]
  [ Evaluations: 0         Packets: 0         Bytes: 0           States: 0     ]
@


1.3
log
@Update regress tests for the following changes:
- if_addr RB_TREE (Address sort differently on an interface)
- skip steps changes
	- RDOMAIN
	- reordering of address/port tests
- fastroute is gone
- keep state is no longer printed by default
- lo0 now has link-local scope address in addition to ::1
@
text
@d2 1
a2 1
  [ Skip steps: i=end r=end d=end f=4 p=4 sa=end da=end sp=end dp=end ]
d6 1
a6 1
  [ Skip steps: i=end r=end d=end f=4 p=4 sa=end da=end sp=end dp=end ]
d10 1
a10 1
  [ Skip steps: i=end r=end d=end f=4 p=4 sa=end da=end sp=end dp=end ]
d14 1
a14 1
  [ Skip steps: i=end r=end d=end sa=end da=end sp=end dp=end ]
d18 1
a18 1
  [ Skip steps: i=end r=end d=end f=8 p=8 sa=end da=end sp=end dp=end ]
d22 1
a22 1
  [ Skip steps: i=end r=end d=end f=8 p=8 sa=end da=end sp=end dp=end ]
d26 1
a26 1
  [ Skip steps: i=end r=end d=end f=8 p=8 sa=end da=end sp=end dp=end ]
d30 1
a30 1
  [ Skip steps: i=end r=end d=end sa=end da=end sp=end dp=end ]
d34 1
a34 1
  [ Skip steps: i=end r=end d=end f=12 p=12 sa=end da=end sp=end dp=end ]
d38 1
a38 1
  [ Skip steps: i=end r=end d=end f=12 p=12 sa=end da=end sp=end dp=end ]
d42 1
a42 1
  [ Skip steps: i=end r=end d=end f=12 p=12 sa=end da=end sp=end dp=end ]
d46 1
a46 1
  [ Skip steps: i=end r=end d=end sa=end da=end sp=end dp=end ]
d50 1
a50 1
  [ Skip steps: i=end r=end d=end f=16 p=16 sa=end da=end sp=end dp=end ]
d54 1
a54 1
  [ Skip steps: i=end r=end d=end f=16 p=16 sa=end da=end sp=end dp=end ]
d58 1
a58 1
  [ Skip steps: i=end r=end d=end f=16 p=16 sa=end da=end sp=end dp=end ]
d62 1
a62 1
  [ Skip steps: i=end r=end d=end sa=end da=end sp=end dp=end ]
d66 1
a66 1
  [ Skip steps: i=end r=end d=end sa=end da=end sp=end dp=end ]
d70 1
a70 1
  [ Skip steps: i=end r=end d=end f=end p=end sa=end da=end sp=end dp=end ]
@


1.2
log
@Handle default 'flags S/SA keep state', 'no state' and 'flags any'.
@
text
@d1 2
a2 2
@@0 pass in inet proto icmp all icmp-type echorep keep state
  [ Skip steps: i=end d=end f=4 p=4 sa=end sp=end da=end dp=end ]
d5 2
a6 2
@@1 pass in inet proto icmp all icmp-type echorep code 0 keep state
  [ Skip steps: i=end d=end f=4 p=4 sa=end sp=end da=end dp=end ]
d9 2
a10 2
@@2 pass in inet proto icmp all icmp-type 1 keep state
  [ Skip steps: i=end d=end f=4 p=4 sa=end sp=end da=end dp=end ]
d13 2
a14 2
@@3 pass in inet proto icmp all icmp-type 1 code 1 keep state
  [ Skip steps: i=end d=end sa=end sp=end da=end dp=end ]
d17 2
a18 2
@@4 pass in inet6 proto ipv6-icmp all icmp6-type 0 keep state
  [ Skip steps: i=end d=end f=8 p=8 sa=end sp=end da=end dp=end ]
d21 2
a22 2
@@5 pass in inet6 proto ipv6-icmp all icmp6-type 0 code 0 keep state
  [ Skip steps: i=end d=end f=8 p=8 sa=end sp=end da=end dp=end ]
d25 2
a26 2
@@6 pass in inet6 proto ipv6-icmp all icmp6-type unreach keep state
  [ Skip steps: i=end d=end f=8 p=8 sa=end sp=end da=end dp=end ]
d29 2
a30 2
@@7 pass in inet6 proto ipv6-icmp all icmp6-type unreach code admin-unr keep state
  [ Skip steps: i=end d=end sa=end sp=end da=end dp=end ]
d34 1
a34 1
  [ Skip steps: i=end d=end f=12 p=12 sa=end sp=end da=end dp=end ]
d38 1
a38 1
  [ Skip steps: i=end d=end f=12 p=12 sa=end sp=end da=end dp=end ]
d42 1
a42 1
  [ Skip steps: i=end d=end f=12 p=12 sa=end sp=end da=end dp=end ]
d46 1
a46 1
  [ Skip steps: i=end d=end sa=end sp=end da=end dp=end ]
d50 1
a50 1
  [ Skip steps: i=end d=end f=16 p=16 sa=end sp=end da=end dp=end ]
d54 1
a54 1
  [ Skip steps: i=end d=end f=16 p=16 sa=end sp=end da=end dp=end ]
d58 1
a58 1
  [ Skip steps: i=end d=end f=16 p=16 sa=end sp=end da=end dp=end ]
d62 1
a62 1
  [ Skip steps: i=end d=end sa=end sp=end da=end dp=end ]
d65 2
a66 2
@@16 pass in inet proto icmp all icmp-type unreach code needfrag keep state
  [ Skip steps: i=end d=end sa=end sp=end da=end dp=end ]
d69 2
a70 2
@@17 pass in inet6 proto ipv6-icmp all icmp6-type timex code reassemb keep state
  [ Skip steps: i=end d=end f=end p=end sa=end sp=end da=end dp=end ]
@


1.1
log
@First pass at doing regress tests on the optimizer (pfctl -o).
Still need to add some more input files to test specific corner cases.
@
text
@d1 1
a1 1
@@0 pass in inet proto icmp all icmp-type echorep
d5 1
a5 1
@@1 pass in inet proto icmp all icmp-type echorep code 0
d9 1
a9 1
@@2 pass in inet proto icmp all icmp-type 1
d13 1
a13 1
@@3 pass in inet proto icmp all icmp-type 1 code 1
d17 1
a17 1
@@4 pass in inet6 proto ipv6-icmp all icmp6-type 0
d21 1
a21 1
@@5 pass in inet6 proto ipv6-icmp all icmp6-type 0 code 0
d25 1
a25 1
@@6 pass in inet6 proto ipv6-icmp all icmp6-type unreach
d29 1
a29 1
@@7 pass in inet6 proto ipv6-icmp all icmp6-type unreach code admin-unr
d65 1
a65 1
@@16 pass in inet proto icmp all icmp-type unreach code needfrag
d69 1
a69 1
@@17 pass in inet6 proto ipv6-icmp all icmp6-type timex code reassemb
@

