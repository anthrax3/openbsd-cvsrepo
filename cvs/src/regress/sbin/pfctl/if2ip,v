head	1.6;
access;
symbols
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.30
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.20
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.28
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.26
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.24
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.22
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.18
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.16
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.14
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.12
	OPENBSD_5_0:1.6.0.10
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.8
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.6
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.4
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.5.0.6
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.14
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.12
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.10
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.8
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2009.06.30.03.44.35;	author david;	state Exp;
branches;
next	1.5;

1.5
date	2007.09.19.22.45.04;	author mpf;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.07.07.46.30;	author cedric;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.21.23.10.49;	author dhartmei;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.11.18.34.51;	author cedric;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.06.12.34.05;	author cedric;	state Exp;
branches;
next	;


desc
@@


1.6
log
@add "-o none" to pfctl call to prevent automatic table creation of
multiple addresses which causes the test to fail; ok sthen@@
@
text
@#!/bin/ksh
# simple script that compare and display interface to address translation
# done by the userland pfctl tool and by the kernel PF dynamic code.

if2ip_user() {
    echo "pass in from $1" | pfctl -o none -nvf- 2>/dev/null \
	| awk '{print  "   "(($3=="on")?$7:$5)}' | sort -u
}

kernel_spec() {
    set -- `echo $1 | sed "s;/; ;"`
    if [ "X$2" == "X" ]; then
	echo "($1)"
    else
	echo "($1)/$2"
    fi
}

if2ip_kernel() {
    T=`echo "pass in on tun100 from $1" | pfctl -a regress/if2ip -f- \
	-vf- | awk '{ print $6}' | tr -d "()"` 
    pfctl -a _pf -t "$T" -Ts | sort
    pfctl -a regress/if2ip -qFr
}

while [ "X$1" != "X" ]; do
    if [ "$1" == "-q" ]; then
	QUIET=1
	shift
    fi
    if [ "$1" == "-v" ]; then
	QUIET=0
	shift
    fi

    UIP=`if2ip_user $1`
    KIF=`kernel_spec $1`
    KIP=`if2ip_kernel $KIF`

    if [ "$QUIET" == "1" ]; then
	if [ "$UIP" == "$KIP" ]; then
	    echo "$1 and $KIF match."
	else
	    echo "$1 and $KIF mismatch."
	fi
    else
	echo "$1:"$UIP
	echo "$KIF:"$KIP
    fi

    if [ "$UIP" != "$KIP" ]; then
	exit 1
    fi
    shift
done
@


1.5
log
@Fix and re-enable tests for interface->address translation.
OK henning
@
text
@d6 1
a6 1
    echo "pass in from $1" | pfctl -nvf- 2>/dev/null \
@


1.4
log
@workaround.
@
text
@d20 1
a20 1
    T=`echo "pass in on tun100 from $1" | pfctl -a _regress/if2ip -f- \
d23 1
a23 1
    pfctl -a _regress/if2ip -qFr
@


1.3
log
@Use '/' instead of ':' as separator for anchor path components. Note that
the parser now needs quotes around paths containing separators.
ok mcbride@@
@
text
@d22 1
a22 1
    pfctl -a _pf/_if -t "$T" -Ts | sort
@


1.2
log
@Fix interface clobbering for link-local addresses. Found by Pyun YongHyeon.
Fix "antispoof for foo" when foo has no addresses.
ok+help dhartmei@@, ok mcbride@@
@
text
@d20 1
a20 1
    T=`echo "pass in on tun100 from $1" | pfctl -a _regress:if2ip -f- \
d22 2
a23 2
    pfctl -a _pf:_if -t "$T" -Ts | sort
    pfctl -a _regress:if2ip -qFr
@


1.1
log
@Add tests for interface->address translation in userland and in the kernel.
@
text
@d6 2
a7 2
    echo "pass in on tun100 from $1" | pfctl -nvf- 2>/dev/null \
	| awk '{print  "   "$7}' | sort -u
@

