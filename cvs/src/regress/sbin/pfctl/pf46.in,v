head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.34
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.32
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.28
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.18
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.26
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.24
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.22
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.20
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.16
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.14
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.2.0.30
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.26
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.24
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.22
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.20
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.18
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.16
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.14
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2010.01.12.15.57.47;	author mcbride;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.23.14.08.33;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.03.15.44.52;	author dhartmei;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.06.11.36.04;	author mcbride;	state Exp;
branches;
next	;


desc
@@


1.4
log
@{ if0, if1 } is ambiguous in a route spec, and this should have been
rejected before (I'm surprised this worked)
@
text
@pass in on lo0 from any to any route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) }
pass out on lo0 from any to any route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } round-robin
pass in on lo0 from any to any route-to (pflog0 127.0.0.1/24) bitmask
pass out on lo0 from any to any dup-to (pflog0 127.0.0.1/24) random
pass in on lo0 inet from any to any reply-to (pflog0 127.0.0.0/28) source-hash 0x0123456789ABCDEF0123456789abcdef
pass out on lo0 from any to any  route-to (pflog0 127.0.0.1/24) source-hash foobarlicious 
pass in on lo0 from any to any dup-to (pflog0 127.0.0.1/24) round-robin
@


1.3
log
@More tweaks to try to catchup to recent pf changes.
pfopt5 part from sthen@@

ok henning@@ sthen@@
@
text
@a4 1
pass in on lo0 inet6 from any to any reply-to { pflog0, pflog0 } round-robin
@


1.2
log
@Don't allow loopback interfaces as route/reply/dup-to targets. ok henning@@
@
text
@d1 8
a8 8
pass in on lo0 route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } all
pass out on lo0 route-to { (pflog0 127.0.0.1), (pflog0 127.0.0.2) } round-robin all
pass in on lo0 route-to (pflog0 127.0.0.1/24) bitmask all
pass out on lo0 dup-to (pflog0 127.0.0.1/24) random all
pass in on lo0 reply-to { pflog0, pflog0 } round-robin inet6 all
pass in on lo0 reply-to (pflog0 127.0.0.0/28) source-hash 0x0123456789ABCDEF0123456789abcdef inet all 
pass out on lo0 route-to (pflog0 127.0.0.1/24) source-hash foobarlicious all 
pass in on lo0 dup-to (pflog0 127.0.0.1/24) round-robin all
@


1.1
log
@Add tests for address pools with route-to/reply-to/dup-to.
@
text
@d1 8
a8 8
pass in on lo0 route-to { (lo0 127.0.0.1), (lo0 127.0.0.2) } all
pass out on lo0 route-to { (lo0 127.0.0.1), (lo0 127.0.0.2) } round-robin all
pass in on lo0 route-to (lo0 127.0.0.1/24) bitmask all
pass out on lo0 dup-to (lo0 127.0.0.1/24) random all
pass in on lo0 reply-to { lo0, lo0 } round-robin inet6 all
pass in on lo0 reply-to (lo0 127.0.0.0/28) source-hash 0x0123456789ABCDEF0123456789abcdef inet all 
pass out on lo0 route-to (lo0 127.0.0.1/24) source-hash foobarlicious all 
pass in on lo0 dup-to (lo0 127.0.0.1/24) round-robin all
@

