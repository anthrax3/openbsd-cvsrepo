head	1.61;
access;
symbols
	OPENBSD_6_0:1.59.0.18
	OPENBSD_6_0_BASE:1.59
	OPENBSD_5_9:1.59.0.8
	OPENBSD_5_9_BASE:1.59
	OPENBSD_5_8:1.59.0.16
	OPENBSD_5_8_BASE:1.59
	OPENBSD_5_7:1.59.0.14
	OPENBSD_5_7_BASE:1.59
	OPENBSD_5_6:1.59.0.12
	OPENBSD_5_6_BASE:1.59
	OPENBSD_5_5:1.59.0.10
	OPENBSD_5_5_BASE:1.59
	OPENBSD_5_4:1.59.0.6
	OPENBSD_5_4_BASE:1.59
	OPENBSD_5_3:1.59.0.4
	OPENBSD_5_3_BASE:1.59
	OPENBSD_5_2:1.59.0.2
	OPENBSD_5_2_BASE:1.59
	OPENBSD_5_1_BASE:1.58
	OPENBSD_5_1:1.58.0.8
	OPENBSD_5_0:1.58.0.6
	OPENBSD_5_0_BASE:1.58
	OPENBSD_4_9:1.58.0.4
	OPENBSD_4_9_BASE:1.58
	OPENBSD_4_8:1.58.0.2
	OPENBSD_4_8_BASE:1.58
	OPENBSD_4_7:1.57.0.2
	OPENBSD_4_7_BASE:1.57
	OPENBSD_4_6:1.56.0.6
	OPENBSD_4_6_BASE:1.56
	OPENBSD_4_5:1.56.0.2
	OPENBSD_4_5_BASE:1.56
	OPENBSD_4_4:1.51.0.2
	OPENBSD_4_4_BASE:1.51
	OPENBSD_4_3:1.50.0.2
	OPENBSD_4_3_BASE:1.50
	OPENBSD_4_2:1.49.0.2
	OPENBSD_4_2_BASE:1.49
	OPENBSD_4_1:1.47.0.2
	OPENBSD_4_1_BASE:1.47
	OPENBSD_4_0:1.42.0.2
	OPENBSD_4_0_BASE:1.42
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6;
locks; strict;
comment	@# @;


1.61
date	2017.03.23.17.12.27;	author bluhm;	state Exp;
branches;
next	1.60;
commitid	NiSz1LomWnYsJWlT;

1.60
date	2017.03.23.13.57.07;	author bluhm;	state Exp;
branches;
next	1.59;
commitid	9dv57XYpmtw2gcdP;

1.59
date	2012.07.08.17.54.57;	author naddy;	state Exp;
branches;
next	1.58;

1.58
date	2010.05.10.02.00.49;	author krw;	state Exp;
branches;
next	1.57;

1.57
date	2009.08.04.15.07.54;	author jsing;	state Exp;
branches;
next	1.56;

1.56
date	2009.01.30.14.24.52;	author bluhm;	state Exp;
branches;
next	1.55;

1.55
date	2009.01.29.10.08.13;	author bluhm;	state Exp;
branches;
next	1.54;

1.54
date	2009.01.28.18.07.19;	author bluhm;	state Exp;
branches;
next	1.53;

1.53
date	2009.01.20.14.40.36;	author mpf;	state Exp;
branches;
next	1.52;

1.52
date	2008.12.22.14.08.45;	author hshoexer;	state Exp;
branches;
next	1.51;

1.51
date	2008.07.01.14.08.39;	author bluhm;	state Exp;
branches;
next	1.50;

1.50
date	2008.01.04.11.09.20;	author hshoexer;	state Exp;
branches;
next	1.49;

1.49
date	2007.05.10.06.10.04;	author hshoexer;	state Exp;
branches;
next	1.48;

1.48
date	2007.03.16.20.51.01;	author markus;	state Exp;
branches;
next	1.47;

1.47
date	2007.02.19.10.12.45;	author hshoexer;	state Exp;
branches;
next	1.46;

1.46
date	2007.01.10.14.37.09;	author markus;	state Exp;
branches;
next	1.45;

1.45
date	2007.01.04.21.31.21;	author markus;	state Exp;
branches;
next	1.44;

1.44
date	2006.11.16.11.33.58;	author markus;	state Exp;
branches;
next	1.43;

1.43
date	2006.10.31.14.39.53;	author hshoexer;	state Exp;
branches;
next	1.42;

1.42
date	2006.08.29.23.15.01;	author naddy;	state Exp;
branches;
next	1.41;

1.41
date	2006.08.29.17.52.40;	author naddy;	state Exp;
branches;
next	1.40;

1.40
date	2006.07.21.12.50.55;	author hshoexer;	state Exp;
branches;
next	1.39;

1.39
date	2006.07.21.12.45.19;	author hshoexer;	state Exp;
branches;
next	1.38;

1.38
date	2006.07.21.12.32.16;	author hshoexer;	state Exp;
branches;
next	1.37;

1.37
date	2006.07.21.12.30.44;	author hshoexer;	state Exp;
branches;
next	1.36;

1.36
date	2006.06.20.21.44.30;	author hshoexer;	state Exp;
branches;
next	1.35;

1.35
date	2006.06.18.18.18.23;	author hshoexer;	state Exp;
branches;
next	1.34;

1.34
date	2006.06.15.17.03.21;	author hshoexer;	state Exp;
branches;
next	1.33;

1.33
date	2006.06.15.11.05.58;	author hshoexer;	state Exp;
branches;
next	1.32;

1.32
date	2006.06.08.21.20.19;	author todd;	state Exp;
branches;
next	1.31;

1.31
date	2006.06.08.21.15.21;	author naddy;	state Exp;
branches;
next	1.30;

1.30
date	2006.06.08.18.24.32;	author hshoexer;	state Exp;
branches;
next	1.29;

1.29
date	2006.06.02.17.06.42;	author naddy;	state Exp;
branches;
next	1.28;

1.28
date	2006.06.02.06.21.14;	author hshoexer;	state Exp;
branches;
next	1.27;

1.27
date	2006.06.02.06.10.08;	author hshoexer;	state Exp;
branches;
next	1.26;

1.26
date	2006.06.02.04.12.52;	author naddy;	state Exp;
branches;
next	1.25;

1.25
date	2006.06.02.00.25.52;	author hshoexer;	state Exp;
branches;
next	1.24;

1.24
date	2006.06.02.00.24.59;	author hshoexer;	state Exp;
branches;
next	1.23;

1.23
date	2006.05.31.11.34.24;	author todd;	state Exp;
branches;
next	1.22;

1.22
date	2006.05.30.19.36.54;	author hshoexer;	state Exp;
branches;
next	1.21;

1.21
date	2006.05.30.19.25.23;	author hshoexer;	state Exp;
branches;
next	1.20;

1.20
date	2006.04.19.16.13.41;	author hshoexer;	state Exp;
branches;
next	1.19;

1.19
date	2006.04.13.12.04.34;	author hshoexer;	state Exp;
branches;
next	1.18;

1.18
date	2006.04.12.14.07.11;	author hshoexer;	state Exp;
branches;
next	1.17;

1.17
date	2006.03.31.14.30.21;	author hshoexer;	state Exp;
branches;
next	1.16;

1.16
date	2006.03.31.14.02.08;	author markus;	state Exp;
branches;
next	1.15;

1.15
date	2006.03.31.13.13.51;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.30.13.40.44;	author reyk;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.30.12.44.20;	author markus;	state Exp;
branches;
next	1.12;

1.12
date	2006.02.03.10.33.27;	author hshoexer;	state Exp;
branches;
next	1.11;

1.11
date	2005.12.06.14.27.57;	author markus;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.26.23.27.34;	author hshoexer;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.30.20.05.24;	author hshoexer;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.16.21.36.12;	author hshoexer;	state Exp;
branches;
next	1.7;

1.7
date	2005.09.05.08.50.47;	author hshoexer;	state Exp;
branches;
next	1.6;

1.6
date	2005.08.11.09.57.24;	author hshoexer;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.09.14.58.09;	author hshoexer;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.09.12.45.56;	author hshoexer;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.08.14.51.51;	author hshoexer;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.08.14.44.59;	author hshoexer;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.05.09.18.26;	author hshoexer;	state Exp;
branches;
next	;


desc
@@


1.61
log
@Add tests for SA grouped in bundles.
@
text
@# $OpenBSD: Makefile,v 1.60 2017/03/23 13:57:07 bluhm Exp $

# you can update the *.ok files with: make -i | patch
# TARGETS
# ipsec: feed ipsecNN.in through ipsecctl and check whether the output matches
# 	 ipsecNN.ok
# tcpmd5: same as above, but for tcpmd5 rules
# sa:	 same as above, but for SA rules.
# ike:	 same as above, but for ike rules.

IPSECTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
IPSECTESTS+=25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
IPSECTESTS+=51 52 53 54 55 56 57 58
TCPMD5TESTS=1 2 3
SATESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
SAFAIL=1 2 3
IPSECFAIL=1 2 3
IKEFAIL=1 3 4 5 6 8 9 11 12 13 14
IKETESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
IKETESTS+=16 17 18 19 20 21 22 23
IKETESTS+=29 30 31 32 33 34 35 36 37 38 39 40
IKETESTS+=41 42 43 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
IKETESTS+=63 64 65 66 67 68

IKEDELTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
IKEDELTESTS+=16 17 18 19 20 21 22 23
IKEDELTESTS+=29 30 31 32 33 34 35 36 37 38 39 40
IKEDELTESTS+=41 42 43 46 47

SHELL=		/bin/sh
IPSECCTL?=	/sbin/ipsecctl

.MAIN: all

.for n in ${IPSECTESTS}
IPSEC_TARGETS+=ipsec${n}

ipsec${n}:
	cat ${.CURDIR}/ipsec${n}.in | sed -e 's,DIR,${.CURDIR},g' | \
	    ${IPSECCTL} -nv -f - | diff -u ${.CURDIR}/ipsec${n}.ok /dev/stdin
.endfor

.for n in ${TCPMD5TESTS}
TCPMD5_TARGETS+=tcpmd5${n}

tcpmd5${n}:
	cat ${.CURDIR}/tcpmd5${n}.in | sed -e 's,DIR,${.CURDIR},g' | \
	    ${IPSECCTL} -nkv -f - | diff -u ${.CURDIR}/tcpmd5${n}.ok /dev/stdin
.endfor

.for n in ${SATESTS}
SA_TARGETS+=sa${n}

sa${n}:
	cat ${.CURDIR}/sa${n}.in | sed -e 's,DIR,${.CURDIR},g' | \
	    ${IPSECCTL} -knv -f - | diff -u ${.CURDIR}/sa${n}.ok /dev/stdin
.endfor

.for n in ${SAFAIL}
SAFAIL_TARGETS+=safail${n}

safail${n}:
	cat ${.CURDIR}/safail${n}.in | sed -e 's,DIR,${.CURDIR},g' | \
	    ${IPSECCTL} -nv -f - 2>&1 | diff -u ${.CURDIR}/safail${n}.ok /dev/stdin
.endfor

.for n in ${IPSECFAIL}
IPSECFAIL_TARGETS+=ipsecfail${n}

ipsecfail${n}:
	cat ${.CURDIR}/ipsecfail${n}.in | sed -e 's,DIR,${.CURDIR},g' | \
	    ${IPSECCTL} -nv -f - 2>&1 | diff -u ${.CURDIR}/ipsecfail${n}.ok /dev/stdin
.endfor

.for n in ${IKETESTS}
IKE_TARGETS+=ike${n}

ike${n}:
	cat ${.CURDIR}/ike${n}.in | sed -e 's,DIR,${.CURDIR},g' | \
	    ${IPSECCTL} -nv -f - | diff -u ${.CURDIR}/ike${n}.ok /dev/stdin
.endfor

.for n in ${IKEFAIL}
IKEFAIL_TARGETS+=ikefail${n}

ikefail${n}:
	cat ${.CURDIR}/ikefail${n}.in | sed -e 's,DIR,${.CURDIR},g' | \
	    ${IPSECCTL} -nv -f - 2>&1 | diff -u ${.CURDIR}/ikefail${n}.ok /dev/stdin
.endfor

.for n in ${IKEDELTESTS}
IKEDEL_TARGETS+=ikedel${n}

ikedel${n}:
	cat ${.CURDIR}/ikedel${n}.in | sed -e 's,DIR,${.CURDIR},g' | \
	    ${IPSECCTL} -dnv -f - | diff -u ${.CURDIR}/ikedel${n}.ok /dev/stdin
.endfor

ipsec:		${IPSEC_TARGETS}
REGRESS_TARGETS+=ipsec

tcpmd5:		${TCPMD5_TARGETS}
REGRESS_TARGETS+=tcpmd5

sa:		${SA_TARGETS}
REGRESS_TARGETS+=sa

safail:		${SAFAIL_TARGETS}
REGRESS_TARGETS+=safail

ipsecfail:	${IPSECFAIL_TARGETS}
REGRESS_TARGETS+=ipsecfail

ike:		${IKE_TARGETS}
REGRESS_TARGETS+=ike

ikefail:	${IKEFAIL_TARGETS}
REGRESS_TARGETS+=ikefail

ikedel:		${IKEDEL_TARGETS}
REGRESS_TARGETS+=ikedel

alltests: ${REGRESS_TARGETS}

.PHONY: ${REGRESS_TARGETS}

.include <bsd.regress.mk>
@


1.60
log
@Allow to override location of ipsecctl tool with IPSECCTL environment.
Useful for development testing without make install.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.59 2012/07/08 17:54:57 naddy Exp $
d15 1
a15 1
SATESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
@


1.59
log
@AES-CTR, AES-GCM, AES-GMAC are disallowed with manual SAs
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.58 2010/05/10 02:00:49 krw Exp $
d30 2
a31 1
SHELL=/bin/sh
d40 1
a40 1
	    ipsecctl -nv -f - | diff -u ${.CURDIR}/ipsec${n}.ok /dev/stdin
d48 1
a48 1
	    ipsecctl -nkv -f - | diff -u ${.CURDIR}/tcpmd5${n}.ok /dev/stdin
d56 1
a56 1
	    ipsecctl -knv -f - | diff -u ${.CURDIR}/sa${n}.ok /dev/stdin
d64 1
a64 1
	    ipsecctl -nv -f - 2>&1 | diff -u ${.CURDIR}/safail${n}.ok /dev/stdin
d72 1
a72 1
	    ipsecctl -nv -f - 2>&1 | diff -u ${.CURDIR}/ipsecfail${n}.ok /dev/stdin
d80 1
a80 1
	    ipsecctl -nv -f - | diff -u ${.CURDIR}/ike${n}.ok /dev/stdin
d88 1
a88 1
	    ipsecctl -nv -f - 2>&1 | diff -u ${.CURDIR}/ikefail${n}.ok /dev/stdin
d96 1
a96 1
	    ipsecctl -dnv -f - | diff -u ${.CURDIR}/ikedel${n}.ok /dev/stdin
@


1.58
log
@Various comment typos. 'wether' -> 'whether' (most popular), 'possiblity' ->
'possibility', 'optins' -> 'options', 'resposne' -> 'response', 'unecessary' -> 'unnecessary', 'desination' -> 'destination'. Collected from various misc@@
and tech@@ postings, many by Brad Tilley.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.57 2009/08/04 15:07:54 jsing Exp $
d16 1
a16 1
SAFAIL=1 2
@


1.57
log
@Add regress tests with IPv4 and IPv6 addresses for the srcid and/or dstid.

ok hshoexer@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.55 2009/01/29 10:08:13 bluhm Exp $
d5 1
a5 1
# ipsec: feed ipsecNN.in through ipsecctl and check wether the output matches
@


1.56
log
@If the "peer" address is not specified or derived from "to" for
"ike" rules in ipsec.conf, the default peer is used.  In theory
ipsecctl -f ipsec.conf can configure the default peer for each "ike"
entry.  As isakmpd only supports one default peer, the last "ike"
rule that uses a default peer wins.  This configuration is then
significant for all "ike" rules that use the default peer.

Now a warning is printed if a later rule in ipsec.conf changes the
configuration of the original default peer.  This should be an error
but that would break existing user configs.  So only a warning is
printed.

ok hshoexer@@, todd@@
@
text
@d23 1
@


1.55
log
@Remove ikefail10 ipsecctl regression test as it always fails.  It
was expecting a certain parser error message.  Accepting the ikefail10
config file is not considered to be a bug anymore.

ok hshoexer@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.54 2009/01/28 18:07:19 bluhm Exp $
d18 1
a18 1
IKEFAIL=1 3 4 5 6 8 9 11 12 13
@


1.54
log
@Allow to specify ike and flow explicitly without peer.  The any
keyword as argument for the peer parameter will do that.  An ike
without peer creates the peer-default config.  A flow without peer
acquires a host-to-host SA.

tested by grunk@@, todd@@,  ok grunk@@, hshoexer@@, todd@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.53 2009/01/20 14:40:36 mpf Exp $
d18 1
a18 1
IKEFAIL=1 3 4 5 6 8 9 10 11 12 13
@


1.53
log
@Regression tests for source flow NAT support.
OK hshoexer@@, markus@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.52 2008/12/22 14:08:45 hshoexer Exp $
d13 1
a13 1
IPSECTESTS+=51 52 53 54 55 56 57
d22 1
a22 1
IKETESTS+=41 42 43 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
@


1.52
log
@add regression test for aes-{128,192,256} being used with main and quick
mode.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.51 2008/07/01 14:08:39 bluhm Exp $
d18 1
a18 1
IKEFAIL=1 3 4 5 6 8 9 10 11 12
d22 1
a22 1
IKETESTS+=41 42 43 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
@


1.51
log
@If multiple to addresses but no peer are given in an ike or flow
rule, the current to address is taken as peer during expansion.
This makes the broken regress test ikefail7 obsolete as address
family mismatch cannot happen anymore.
ok hshoexer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.50 2008/01/04 11:09:20 hshoexer Exp $
d22 1
a22 1
IKETESTS+=41 42 43 46 47 48 49 50 51 52 53 54 55 56 57 58 59
@


1.50
log
@Add a regression test for handling addresses with trailing '/32' and address
type IPV4_ADDR.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.49 2007/05/10 06:10:04 hshoexer Exp $
d13 1
a13 1
IPSECTESTS+=51 52 53
d17 2
a18 2
IPSECFAIL=1 2
IKEFAIL=1 3 4 5 6 7 8 9 10 11 12
@


1.49
log
@Do not crash when lists include the "any" keyword.  Reported by
<ralf.horstmann at gmx.net>, thanks!

Slightly different fix.  Also add a regression test.

ok mpf@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.48 2007/03/16 20:51:01 markus Exp $
d22 1
a22 1
IKETESTS+=41 42 43 46 47 48 49 50 51 52 53 54 55 56 57 58
@


1.48
log
@move autodetection of the ID type to the parser.  this way the
static flows have the correct ID, too. ok hshoexer, reyk
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.47 2007/02/19 10:12:45 hshoexer Exp $
d22 1
a22 1
IKETESTS+=41 42 43 46 47 48 49 50 51 52 53 54 55 56 57
@


1.47
log
@we have to use '-k' now to show keys.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.46 2007/01/10 14:37:09 markus Exp $
d22 1
a22 1
IKETESTS+=41 42 43 46 47 48 49 50 51 52 53 54 55 56
@


1.46
log
@allow rule if there is at least _one_ matching address family combination.
this allows 'flow from lo0 to 127.0.0.1' if lo0 has an ipv6 address.
ok itojun@@, hshoexer@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.45 2007/01/04 21:31:21 markus Exp $
d46 1
a46 1
	    ipsecctl -nv -f - | diff -u ${.CURDIR}/tcpmd5${n}.ok /dev/stdin
d54 1
a54 1
	    ipsecctl -nv -f - | diff -u ${.CURDIR}/sa${n}.ok /dev/stdin
@


1.45
log
@don't pass -1 as a netmask; report vicviq at gmail.com
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.44 2006/11/16 11:33:58 markus Exp $
d13 1
a13 1
IPSECTESTS+=51 52
@


1.44
log
@add comment on how to update the *.ok files; ok hshoexer@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.43 2006/10/31 14:39:53 hshoexer Exp $
d22 1
a22 1
IKETESTS+=41 42 43 46 47 48 49 50 51 52 53 54 55
@


1.43
log
@Add some regression tests for odd ipsecctl behaviour noticed by
Prabhu Gurumurt.  Test ikefail10 should fail, but does not and needs
to be fixed.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.42 2006/08/29 23:15:01 naddy Exp $
d3 1
@


1.42
log
@Test for an as yet unresolved problem:
If list expansion produces peer pairings between different address
families, this should be an error.

Suggested by and ok hshoexer@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.41 2006/08/29 17:52:40 naddy Exp $
d17 1
a17 1
IKEFAIL=1 3 4 5 6 7
@


1.41
log
@Add support for IKE AH rules to ipsecctl.  Man page input by jmc@@.
ok hshoexer@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.40 2006/07/21 12:50:55 hshoexer Exp $
d17 1
a17 1
IKEFAIL=1 3 4 5 6
@


1.40
log
@tests similar to ike49 and ike50, but with ipv6 addresses.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.39 2006/07/21 12:45:19 hshoexer Exp $
d17 1
a17 1
IKEFAIL=1 3 4 5
d21 1
a21 1
IKETESTS+=41 42 43 46 47 48 49 50 51 52
@


1.39
log
@yet another test.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.38 2006/07/21 12:32:16 hshoexer Exp $
d21 1
a21 1
IKETESTS+=41 42 43 46 47 48 49 50
@


1.38
log
@new tests for default peer usage
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2006/07/21 12:30:44 hshoexer Exp $
d21 1
a21 1
IKETESTS+=41 42 43 46 47 48 49
@


1.37
log
@update and enable that test
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2006/06/20 21:44:30 hshoexer Exp $
d21 1
a21 1
IKETESTS+=41 42 43 46 47
@


1.36
log
@The ike/ikedel tests 48 to 50 do net exist yet.  They will be needed
for stuff that will soon be commited.  In the meanwhile disable
them.  Noticed by david@@, thanks!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2006/06/18 18:18:23 hshoexer Exp $
d21 1
a21 1
IKETESTS+=41 42 43 46
@


1.35
log
@adopt to recent changes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2006/06/15 17:03:21 hshoexer Exp $
d21 1
a21 1
IKETESTS+=41 42 43 46 49
d26 1
a26 1
IKEDELTESTS+=41 42 43 46 47 48 49 50
@


1.34
log
@Add a bunch of test for deletion of ike rules, add a test for "to
any" rules without a peer specified.  These tests resulted in the
recent fix in ipsecctl/ike.c.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2006/06/15 11:05:58 hshoexer Exp $
d21 1
a21 1
IKETESTS+=41 42 43 46 47
d26 1
a26 1
IKEDELTESTS+=41 42 43 46 47
@


1.33
log
@add safail2
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2006/06/08 21:20:19 todd Exp $
d21 6
a26 1
IKETESTS+=41 42 43 46
d88 8
d116 3
@


1.32
log
@really, this is the correct *.ok output, what was generated in the past was
due to recently fixed code
move some ike?? to ikefail?
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2006/06/08 21:15:21 naddy Exp $
d15 1
a15 1
SAFAIL=1
@


1.31
log
@Add a transport mode specifier to ike rules.  Tunnel mode remains the default.
"looks right" hshoexer@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2006/06/08 18:24:32 hshoexer Exp $
d17 1
a17 1
IKEFAIL=1 3
d21 1
a21 1
IKETESTS+=41 42 43 44 45 46
@


1.30
log
@Add tests for a tiny regression I've just found
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2006/06/02 17:06:42 naddy Exp $
d21 1
a21 1
IKETESTS+=41 42 43 44 45
@


1.29
log
@check port modifiers in ike rules
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2006/06/02 06:21:14 hshoexer Exp $
d21 1
a21 1
IKETESTS+=41 42 43
@


1.28
log
@enable all ike tests, even though some of them are currently broken.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2006/06/02 06:10:08 hshoexer Exp $
d17 1
a17 1
IKEFAIL=1
d21 1
a21 1
IKETESTS+=41
@


1.27
log
@new test for setting lifetimes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2006/06/02 04:12:52 naddy Exp $
d19 2
a20 2
#IKETESTS+=16 17 18 19 20 21 22 23 24
#IKETESTS+=25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
@


1.26
log
@check port modifiers in flow rules; ok hshoexer@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2006/06/02 00:25:52 hshoexer Exp $
d18 1
a18 1
IKETESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
d21 1
@


1.25
log
@fix this test, too.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2006/06/02 00:24:59 hshoexer Exp $
d11 2
a12 2
IPSECTESTS+=25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44
IPSECTESTS+=39
d16 1
a16 1
IPSECFAIL=1
@


1.24
log
@fix this tests.  Enable a bunch of new sa tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2006/05/31 11:34:24 todd Exp $
d12 1
a12 1
#IPSECTESTS+=39
@


1.23
log
@add some regress for v6; ok hshoexer@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2006/05/30 19:36:54 hshoexer Exp $
d14 1
a14 1
SATESTS=1 2 3 4 5 6 7 8 9 10 11 12
d16 1
a16 1
IPSECFAIL=1 2
@


1.22
log
@tests for rule expansion and ike
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2006/05/30 19:25:23 hshoexer Exp $
d11 2
d16 5
a20 1
IKETESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14
d58 8
d74 8
d94 3
d99 3
@


1.21
log
@tests for rule expansion
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2006/04/19 16:13:41 hshoexer Exp $
d14 1
a14 1
IKETESTS=1 2 3 4 5 6 7 8 9 10 11
@


1.20
log
@adopt to recent changes and add some more tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2006/04/13 12:04:34 hshoexer Exp $
d10 1
a10 1
IPSECTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
@


1.19
log
@regression tests for "local"
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2006/04/12 14:07:11 hshoexer Exp $
d10 1
a10 1
IPSECTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
@


1.18
log
@connect tests for transport mode
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2006/03/31 14:30:21 hshoexer Exp $
d14 1
a14 1
IKETESTS=1 2 3 4 5 6 7 8 9 10
@


1.17
log
@forgot those in previous commit...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2006/03/31 14:02:08 markus Exp $
d12 1
a12 1
SATESTS=1 2 3 4 5 6 7 8 9 10
@


1.16
log
@allow specification of encapsulated protocol for ike; ok hshoexer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2006/03/31 13:13:51 markus Exp $
d14 1
a14 1
IKETESTS=1 2 3 4 5 6 7 8 10
@


1.15
log
@allow specification of encapsulated protocol for flows; ok hshoexer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2006/03/30 13:40:44 reyk Exp $
d14 1
a14 1
IKETESTS=1 2 3 4 5 6 7 8
@


1.14
log
@add regress tests for dynamic, bypass, deny and the macros.

inspired my markus last commit, ok hshoexer@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2006/03/30 12:44:20 markus Exp $
d10 1
a10 1
IPSECTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
d14 1
a14 1
IKETESTS=1 2 3 4 5 6 7 8 9
@


1.13
log
@allow specification of outer local ips in flows (SADB_EXT_ADDRESS_SRC); ok hshoexer, reyk
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2006/02/03 10:33:27 hshoexer Exp $
d10 1
a10 1
IPSECTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
d14 1
a14 1
IKETESTS=1 2 3 4 5 6 7 8
@


1.12
log
@First simple regression tests for invalid rules
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2005/12/06 14:27:57 markus Exp $
d10 1
a10 1
IPSECTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13 14
@


1.11
log
@ipip support: ip-in-ip w/o gif(4); ok hshoexer
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2005/11/26 23:27:34 hshoexer Exp $
d13 1
d44 8
d68 3
@


1.10
log
@test for swapped rules
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2005/10/30 20:05:24 hshoexer Exp $
d10 1
a10 1
IPSECTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13
d12 1
a12 1
SATESTS=1 2 3 4 5 6 7 8 9
@


1.9
log
@add a regression test for ipcomp
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2005/10/16 21:36:12 hshoexer Exp $
d12 1
a12 1
SATESTS=1 2 3 4 5 6 7 8
@


1.8
log
@Regression tests for "any" keyword.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2005/09/05 08:50:47 hshoexer Exp $
d12 1
a12 1
SATESTS=1 2 3 4 5 6 7
@


1.7
log
@enable tests for isakmp/ike
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2005/08/11 09:57:24 hshoexer Exp $
d10 1
a10 1
IPSECTESTS=1 2 3 4 5 6 7 8 9 10 11 12
d12 2
a13 2
SATESTS=1 2 3 4 5 6
IKETESTS=1 2 3 4 5 6 7
@


1.6
log
@Make sure, tests using "file" work when obj/ directory is present.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2005/08/09 14:58:09 hshoexer Exp $
d8 1
d13 1
d43 8
d59 3
@


1.5
log
@Make tests more readable by using predefined keyfiles.  Add test for tcpmd5
using a key from a file.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2005/08/09 12:45:56 hshoexer Exp $
d21 2
a22 3
	ipsecctl -nv -f - < ${.CURDIR}/ipsec${n}.in | \
	    diff -u ${.CURDIR}/ipsec${n}.ok /dev/stdin

d29 2
a30 2
	ipsecctl -nv -f - < ${.CURDIR}/tcpmd5${n}.in | \
	    diff -u ${.CURDIR}/tcpmd5${n}.ok /dev/stdin
d37 2
a38 2
	ipsecctl -nv -f - < ${.CURDIR}/sa${n}.in | \
	    diff -u ${.CURDIR}/sa${n}.ok /dev/stdin
@


1.4
log
@test for SAs
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2005/08/08 14:51:51 hshoexer Exp $
d10 1
a10 1
TCPMD5TESTS=1 2
@


1.3
log
@no test "ipsec13" yet
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2005/08/08 14:44:59 hshoexer Exp $
d7 1
d11 1
a11 1
SATESTS=1 2 3 4
@


1.2
log
@some simple regression tests for static keying
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2005/08/05 09:18:26 hshoexer Exp $
d8 1
a8 1
IPSECTESTS=1 2 3 4 5 6 7 8 9 10 11 12 13
@


1.1
log
@Some basic regression tests for ipsecctl, not connected yet.
@
text
@d1 1
a1 1
# $OpenBSD:$
d8 1
a8 1
IPSECTESTS=1 2 3 4 5 6 7 8 9 10 11 12
d10 1
d33 8
d46 3
@

