head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.2
date	2014.09.07.06.53.16;	author guenther;	state Exp;
branches;
next	1.1;
commitid	zNnQHgNQ5TEoYGjJ;

1.1
date	2014.09.07.04.13.52;	author guenther;	state Exp;
branches;
next	;
commitid	QjQ7B0WkpiH50ChI;


desc
@@


1.2
log
@Add Henri Kemppainen's copyright
@
text
@/*
 * Copyright (c) 2014 Henri Kemppainen <duclare@@guu.fi>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <dlfcn.h>
#include <stdio.h>

int
main()
{
        void *libaa, *libbb;
	int flag = RTLD_NOW;

        if ((libaa = dlopen("libaa.so", flag)) == NULL) {
                printf("dlopen(\"libaa.so\", %d) FAILED\n", flag);
                return 1;
        }

	if ((libbb = dlopen("libbb.so", flag)) == NULL) {
		printf("dlopen(\"libbb.so\", %d) FAILED\n", flag);
		return 1;
	}

        if (dlclose(libbb)) {
                printf("dlclose(libbb) FAILED\n%s\n", dlerror());
		return 1;
        }

	if ((libbb = dlopen("libbb.so", flag)) == NULL) {
		printf("dlopen(\"libbb.so\", %d) FAILED\n", flag);
		return 1;
	}

        if (dlclose(libbb)) {
                printf("dlclose(libbb) FAILED\n%s\n", dlerror());
		return 1;
        }

        if (dlclose(libaa)) {
                printf("dlclose(libaa) FAILED\n%s\n", dlerror());
		return 1;
        }

	return 0;
}

@


1.1
log
@Add dependency tests from Henri Kemppainen (duclare (at) guu.fi).
order1 demonstrates why the fix in ld.so/library_subr.c rev 1.34 is necessary
order2 demonstrates that that fix isn't completely correct
@
text
@d1 16
@

