head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.14
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.16
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.12
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2013.10.15.22.49.03;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.31.23.29.46;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.30.22.03.51;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@# $OpenBSD: Makefile,v 1.2 2013/03/31 23:29:46 miod Exp $

.include <bsd.obj.mk>

AA_DIR=${.CURDIR}/../libaa

AA_OBJDIR!=	if [ -d $(AA_DIR)/${__objdir} ]; then \
			echo "$(AA_DIR)/${__objdir}"; \
		else \
			echo "$(AA_DIR)"; \
		fi

PROG=		prog1
SRCS=		main.c
CPPFLAGS+= 	-I$(AA_DIR)
LDADD+=		-laa
LDFLAGS+=	-Wl,-z,origin,-rpath,'$$ORIGIN/$${OSNAME}/$$OSREL/$${PLATFORM}'
LDFLAGS+=	-L$(AA_OBJDIR)

REGRESS_TARGETS = test

.PHONY: test
test: $(PROG)
	mkdir -p "OpenBSD/`uname -r`/`uname -m`"
	cp $(AA_OBJDIR)/libaa.so* "OpenBSD/`uname -r`/`uname -m`/"
	./$(PROG)

clean:
	rm -f a.out [Ee]rrs mklog *.core y.tab.h \
	    ${PROG} ${OBJS} ${_LEXINTM} ${_YACCINTM} ${CLEANFILES}
	rm -rf OpenBSD

.include <bsd.regress.mk>
@


1.2
log
@Do not depend on the value of PATH to run.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2013/03/30 22:03:51 kurt Exp $
d29 1
a29 1
	rm -f a.out [Ee]rrs mklog core *.core y.tab.h \
@


1.1
log
@- Add regress for forthcomming rpath ORIGIN substitution support.
okay matthew@@
@
text
@d1 1
a1 1
# $OpenBSD$
d26 1
a26 1
	$(PROG)
@

