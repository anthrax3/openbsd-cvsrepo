head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.1.1.0.10
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.8
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.4
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.2
	OPENBSD_5_3_BASE:1.1.1.1
	matthew_2012-Aug-16:1.1.1.1
	matthew:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2017.08.01.13.05.55;	author deraadt;	state Exp;
branches;
next	1.2;
commitid	prKcoKu1D9JO57kc;

1.2
date	2015.01.20.04.41.01;	author krw;	state Exp;
branches;
next	1.1;
commitid	4iV7KHZz26Tut4Vx;

1.1
date	2012.08.16.17.21.05;	author matthew;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.08.16.17.21.05;	author matthew;	state Exp;
branches;
next	;


desc
@@


1.3
log
@A fix is coming in the future, but in the meantime we should never declare
a section(".openbsd.randomdata") variable as static or const, because the
compiler optimizes out access.
@
text
@/*	$OpenBSD: aa.c,v 1.2 2015/01/20 04:41:01 krw Exp $	*/
#include <sys/types.h>

int64_t aavalue __attribute__((section(".openbsd.randomdata")));

int64_t
getaavalue()
{
	return (aavalue);
}
@


1.2
log
@Missing $OpenBSD$'s.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
static int64_t aavalue __attribute__((section(".openbsd.randomdata")));
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@basic randomdata regression tests
@
text
@@
