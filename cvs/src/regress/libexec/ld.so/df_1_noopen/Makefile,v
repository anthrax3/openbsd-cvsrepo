head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.10
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.12
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.8
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2014.12.01.01.16.46;	author deraadt;	state Exp;
branches;
next	1.5;
commitid	KE5rE3L7S2tlygle;

1.5
date	2013.12.22.12.29.25;	author kettenis;	state Exp;
branches;
next	1.4;

1.4
date	2013.08.06.19.11.53;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2013.04.02.07.15.02;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.23.19.46.09;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2012.06.15.20.50.06;	author matthew;	state Exp;
branches;
next	;


desc
@@


1.6
log
@run script with ${SHELL}
@
text
@# $OpenBSD: Makefile,v 1.5 2013/12/22 12:29:25 kettenis Exp $

.include <bsd.own.mk>

REGRESS_TARGETS = test

.include <bsd.regress.mk>

EMPTYFILE=	emptyfile
CLEANFILES+=	${EMPTYFILE}
LIB_DEPENDS=	${EMPTYFILE}

# gcc3 will error with "file not recognized: File truncated" if the input file
# is not at least four bytes long!
${EMPTYFILE}:
	printf "\n\n\n\n" > $@@

CLEANFILES+=lib1.so lib2.so lib3.so dlopen dlopen1 dlopen2 dlopen3

.PHONY: test
test: lib1.so lib2.so lib3.so dlopen dlopen1 dlopen2 dlopen3
	${SHELL} ${.CURDIR}/test.sh

lib1.so: ${LIB_DEPENDS}
	cc -o lib1.so ${EMPTYFILE} -fPIC -shared -Wl,-znodlopen

lib2.so: ${LIB_DEPENDS}
	cc -o lib2.so ${EMPTYFILE} -fPIC -shared -L. -l1

lib3.so: ${LIB_DEPENDS}
	cc -o lib3.so ${EMPTYFILE} -fPIC -shared -L. -l2

dlopen: dlopen.c
	cc -o dlopen ${.CURDIR}/dlopen.c

dlopen1: dlopen.c
	cc -o dlopen1 ${.CURDIR}/dlopen.c -L. -l1

dlopen2: dlopen.c
	cc -o dlopen2 ${.CURDIR}/dlopen.c -L. -l2

dlopen3: dlopen.c
	cc -o dlopen3 ${.CURDIR}/dlopen.c -L. -l3
@


1.5
log
@Seems gcc4 whines about an empty file as well, so just unconditionally do
what we did for gcc3.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/08/06 19:11:53 miod Exp $
d22 1
a22 1
	${.CURDIR}/test.sh
@


1.4
log
@Remove support for COMPILER_VERSION == gcc2.
Change the logic depending upon COMPILER_VERSION everywhere, to assume gcc4
is the norm and to explicitely test for gcc3 when a different behaviour
is required.
No functional change intended. Be sure to `make install' in share/mk before
attempting to do anything.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/04/02 07:15:02 miod Exp $
a8 1
.if ${COMPILER_VERSION} == "gcc3"
a16 4
.else
EMPTYFILE=	/dev/null
LIB_DEPENDS=
.endif
@


1.3
log
@Let this work on gcc < 4, which don't accept /dev/null as a valid input file.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/01/23 19:46:09 miod Exp $
d9 1
a9 4
.if ${COMPILER_VERSION} == "gcc4"
EMPTYFILE=	/dev/null
LIB_DEPENDS=
.else
d18 3
@


1.2
log
@give this a chance to work after make obj
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.1 2012/06/15 20:50:06 matthew Exp $
d7 18
d27 1
a27 1
	./test.sh
d29 2
a30 2
lib1.so:
	cc -o lib1.so /dev/null -fPIC -shared -Wl,-znodlopen
d32 2
a33 2
lib2.so:
	cc -o lib2.so /dev/null -fPIC -shared -L. -l1
d35 2
a36 2
lib3.so:
	cc -o lib3.so /dev/null -fPIC -shared -L. -l2
a48 2

.include <bsd.regress.mk>
@


1.1
log
@Add a regress test for ld.so's DF_1_NOOPEN support.
@
text
@d1 1
a1 1
# $OpenBSD$
d19 1
a19 1
	cc -o dlopen dlopen.c
d22 1
a22 1
	cc -o dlopen1 dlopen.c -L. -l1
d25 1
a25 1
	cc -o dlopen2 dlopen.c -L. -l2
d28 1
a28 1
	cc -o dlopen3 dlopen.c -L. -l3
@

