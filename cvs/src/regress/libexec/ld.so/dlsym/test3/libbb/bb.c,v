head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.46
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.48
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.44
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.34
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.42
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.40
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.38
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.36
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.32
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.30
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.28
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.26
	OPENBSD_5_0:1.2.0.24
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.22
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.20
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.16
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.18
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.14
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.12
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.10
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.8
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	dlsym_test3:1.1.1.1
	kurt:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2005.09.19.21.50.27;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.19.03.34.18;	author kurt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.09.19.03.34.18;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Verify which symbol is found when same strong symbol found in multiple files.
ok kurt@@
@
text
@/*	$OpenBSD: bb.c,v 1.1.1.1 2005/09/19 03:34:18 kurt Exp $	*/

/*
 * Copyright (c) 2005 Kurt Miller <kurt@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <dlfcn.h>
#include <stdio.h>

int bbSymbol;
int commonSymbol;

/*
 * this test is setup where the main program group dlopen's libbb and libdd
 * without RTLD_GLOBAL. libcc is part of libbb load group. libee is part of
 * libdd load group.
 */
int
bbTest1(void *libbb, void *libdd)
{
	int ret = 0;

	/* check RTLD_DEFAULT can *not* see symbols in libdd object group */
	if (dlsym(RTLD_DEFAULT, "ddSymbol") != NULL) {
		printf("dlsym(RTLD_DEFAULT, \"ddSymbol\") != NULL\n");
		ret = 1;
	}

	/* check RTLD_SELF can *not* see symbols in libdd object group */
	if (dlsym(RTLD_SELF, "ddSymbol") != NULL) {
		printf("dlsym(RTLD_SELF, \"ddSymbol\") != NULL\n");
		ret = 1;
	}

	/* check RTLD_NEXT can *not* see symbols in libdd object group */
	if (dlsym(RTLD_NEXT, "ddSymbol") != NULL) {
		printf("dlsym(RTLD_NEXT, \"ddSymbol\") != NULL\n");
		ret = 1;
	}

	/* check NULL can *not* see symbols in libdd object group */
	if (dlsym(NULL, "ddSymbol") != NULL) {
		printf("dlsym(NULL, \"ddSymbol\") != NULL\n");
		ret = 1;
	}

	/* libbb should *not* see symbols in libdd or libee */
	if (dlsym(libbb, "ddSymbol") != NULL) {
		printf("dlsym(libbb, \"ddSymbol\") != NULL\n");
		ret = 1;
	}

	/* libdd should *not* see symbols in libbb or libcc */
	if (dlsym(libdd, "bbSymbol") != NULL) {
		printf("dlsym(libdd, \"bbSymbol\") != NULL\n");
		ret = 1;
	}

	/* libbb should see symbols in libbb and libcc */
	if (dlsym(libbb, "ccSymbol") == NULL) {
		printf("dlsym(libbb, \"ccSymbol\") == NULL\n");
		ret = 1;
	}

	/* libdd should see symbols in libbb and libee */
	if (dlsym(libdd, "eeSymbol") == NULL) {
		printf("dlsym(libdd, \"eeSymbol\") == NULL\n");
		ret = 1;
	}

	return (ret);
}

/*
 * this test is setup where the main program group dlopen's libbb and libdd.
 * libdd is opened with RTLD_GLOBAL. libcc is part of libbb load group. libee
 * is part of libdd load group.
 */
int
bbTest2()
{
	int ret = 0;

	/* check RTLD_DEFAULT can see symbols in libdd object group */
	if (dlsym(RTLD_DEFAULT, "eeSymbol") != NULL) {
		printf("dlsym(RTLD_DEFAULT, \"ddSymbol\") != NULL\n");
		ret = 1;
	}

	/* check RTLD_SELF can see symbols in libdd object group */
	if (dlsym(RTLD_SELF, "eeSymbol") != NULL) {
		printf("dlsym(RTLD_SELF, \"ddSymbol\") != NULL\n");
		ret = 1;
	}

	/* check RTLD_NEXT can see symbols in libdd object group */
	if (dlsym(RTLD_NEXT, "eeSymbol") != NULL) {
		printf("dlsym(RTLD_NEXT, \"ddSymbol\") != NULL\n");
		ret = 1;
	}

	return (ret);
}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d23 1
@


1.1.1.1
log
@addtional tests involving two dlopened load groups
@
text
@@
