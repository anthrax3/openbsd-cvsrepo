head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.2
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.6
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.40
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.38
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.36
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.32
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.30
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.28
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.26
	OPENBSD_5_0:1.2.0.24
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.22
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.20
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.16
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.18
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.14
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.12
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.10
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.8
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2017.03.18.16.45.32;	author kettenis;	state Exp;
branches;
next	1.3;
commitid	4SLS1yRbVQYkN3Nz;

1.3
date	2015.06.15.01.10.19;	author deraadt;	state Exp;
branches;
next	1.2;
commitid	mOaak3Z5BtkjhHKw;

1.2
date	2005.09.21.18.01.28;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.17.02.58.54;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@The prog3 sub-tests tests DT_RPATH behaviour.  Add --disable-new-dtags to
the linker options such that DT_RPATH gets set instead of DT_RUNPATH on
platforms using lld as the linker.
@
text
@# $OpenBSD: Makefile,v 1.3 2015/06/15 01:10:19 deraadt Exp $

.include <bsd.obj.mk>

PROG=prog3

SRCS=main.c

AA_DIR=${.CURDIR}/../libaa
AA_OBJDIR!=    if [ -d $(AA_DIR)/${__objdir} ]; then \
                        echo "$(AA_DIR)/${__objdir}"; \
		else \
			echo "$(AA_DIR)"; \
		fi

AC_DIR=${.CURDIR}/../libac
AC_OBJDIR!=    if [ -d $(AC_DIR)/${__objdir} ]; then \
                        echo "$(AC_DIR)/${__objdir}"; \
		else \
			echo "$(AC_DIR)"; \
		fi



LDADD=
#LDADD+=-laa
#LDADD+=-lac
LDFLAGS=-L$(AA_OBJDIR) -L$(AC_OBJDIR)
LDFLAGS+= -Wl,-disable-new-dtags
LDFLAGS+= -Wl,-rpath,$(AA_OBJDIR)  -Wl,-rpath,$(AC_OBJDIR) 
NOMAN=
CC=c++

.include <bsd.regress.mk>
@


1.3
log
@fix regress fallout due to CFLAGS vs CXXFLAGS
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2005/09/21 18:01:28 drahn Exp $
d29 1
@


1.2
log
@This test is now C, not C++. main.C ->main.c
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2005/09/17 02:58:54 drahn Exp $
a24 1
CFLAGS=-I${.CURDIR}/../libac
@


1.1
log
@add regression tests to validate that dlopened objects can pick up their
depend libraries. Also that dlopen() does not just exit when a dependant
library is not found.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2005/09/13 20:51:39 drahn Exp $
d7 1
a7 1
SRCS=main.C
@

