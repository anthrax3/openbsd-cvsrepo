head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.24
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.22
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.12
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.20
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.18
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.16
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.14
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.22
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.20
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.16
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.18
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.14
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.12
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.10
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.8
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.6
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	DLOPEN_DRAHN:1.1.1.1
	DLOPEN_TEST:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2011.04.03.22.29.50;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.19.18.39.37;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.18.19.58.49;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.13.21.03.46;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.13.20.51.39;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.09.13.20.51.39;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Fix the really bad C++ test code that I wrote long ago.
@
text
@/*
 * Public Domain 2003 Dale Rahn
 *
 * $OpenBSD: aa.C,v 1.4 2005/09/19 18:39:37 deraadt Exp $
 */

#include <iostream>
#include <string.h>
#include "aa.h"
char strbuf[512];

extern "C" { 
const char *libname = "libaa";
};

extern "C" char *
lib_entry()
{
	strlcpy(strbuf, libname, sizeof strbuf);
	strlcat(strbuf, ":", sizeof strbuf);
	strlcat(strbuf, "aa", sizeof strbuf);
	return strbuf;
	std::cout << "called into aa " << libname << " libname " << "\n";
}

AA::AA(const char *arg)
{
	_name = arg;
}
AA::~AA()
{
}

AA foo("A");
@


1.4
log
@ansi clean so that all gcc versions can compile these; ok drahn
@
text
@d4 1
a4 1
 * $OpenBSD: aa.C,v 1.3 2005/09/18 19:58:49 drahn Exp $
d13 1
a13 1
char *libname = "libaa";
d26 1
a26 1
AA::AA(char *arg)
@


1.3
log
@Make these tests more regress like, self diagnosing, less verbose.
@
text
@d4 1
a4 1
 * $OpenBSD: aa.C,v 1.2 2005/09/13 21:03:46 drahn Exp $
d8 1
@


1.2
log
@Compile without warnings on external C linkage.
@
text
@d4 1
a4 1
 * $OpenBSD: aa.C,v 1.1.1.1 2005/09/13 20:51:39 drahn Exp $
d9 1
a9 1
int a;
d15 1
a15 1
extern "C" void
d18 4
a26 1
	a = 1;
a30 1
	std::cout << "dtors AA " << libname << " " << _name << "\n";
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
 * $OpenBSD: aa.C,v 1.1 2003/02/01 19:56:17 drahn Exp $
d11 3
a13 1
extern "C" char *libname = "libaa";
@


1.1.1.1
log
@dlopen regress tests.
@
text
@@
