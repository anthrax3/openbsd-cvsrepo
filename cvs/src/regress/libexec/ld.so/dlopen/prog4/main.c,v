head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.48
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.44
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.34
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.42
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.40
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.38
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.36
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.32
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.30
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.28
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.26
	OPENBSD_5_0:1.2.0.24
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.22
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.20
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.16
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.18
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.14
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.12
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.10
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.8
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2;
locks; strict;
comment	@ * @;


1.2
date	2005.09.18.19.58.50;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.17.02.58.55;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Make these tests more regress like, self diagnosing, less verbose.
@
text
@/*
 * Public Domain 2003 Dale Rahn
 *
 * $OpenBSD: main.c,v 1.1 2005/09/17 02:58:55 drahn Exp $
 */
#include <stdio.h>
#include <dlfcn.h>

int
main()
{
	void *handle;
	int ret = 0;

	handle = dlopen("libac.so.0.0", RTLD_LAZY);
	if (handle != NULL) {
		printf("found libaa, dependancy of libac, not expected\n");
		ret = 1;
	}

	return ret;
}
@


1.1
log
@add regression tests to validate that dlopened objects can pick up their
depend libraries. Also that dlopen() does not just exit when a dependant
library is not found.
@
text
@d4 1
a4 1
 * $OpenBSD: prog2.C,v 1.1.1.1 2005/09/13 20:51:39 drahn Exp $
d12 1
a13 1
	void *handle;
@

