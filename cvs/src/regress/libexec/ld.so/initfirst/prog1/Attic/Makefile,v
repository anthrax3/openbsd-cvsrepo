head	1.3;
access;
symbols
	kurt_20111128:1.1.1.1
	kurt:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2011.11.29.04.36.15;	author kurt;	state dead;
branches;
next	1.2;

1.2
date	2011.11.29.04.06.42;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.08.23.51.02;	author guenther;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.11.29.03.38.26;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@clean up initfirst regress conflict created by my import. split tests
into two sub dirs.
@
text
@# $OpenBSD: Makefile,v 1.2 2011/11/29 04:06:42 guenther Exp $

PROGS=		prog1 prog2 prog3 prog4
SRCS=		main.c
OBJS=		main.o
LDFLAGS+=	-Wl,-E
LDFLAGS+=	-Wl,-rpath,$(IF1_OBJDIR) -L$(IF1_OBJDIR)
LDFLAGS+=	-Wl,-rpath,$(IF2_OBJDIR) -L$(IF2_OBJDIR)
LDFLAGS+=	-Wl,-rpath,$(IF3_OBJDIR) -L$(IF3_OBJDIR)
LDFLAGS+=	-Wl,-rpath,$(NORMAL_OBJDIR) -L$(NORMAL_OBJDIR)
LDADD_prog1+=	-lnormal -lif1 -lif2
LDADD_prog2+=	-lif1 -lnormal -lif2
LDADD_prog3+=	-lif1 -lif2 -lnormal
LDADD_prog4+=	-lif1 -lif2 -lif3
CLEANFILES+=	${PROGS}

REGRESS_TARGETS=do-prog1 do-prog2 do-prog3 do-prog4

do-prog1: prog1
	./prog1 | cmp -s ${.CURDIR}/expected1 -
do-prog2: prog2
	./prog2 | cmp -s ${.CURDIR}/expected2 -
do-prog3: prog3
	./prog3 | cmp -s ${.CURDIR}/expected3 -
do-prog4: prog4
	./prog4 | cmp -s ${.CURDIR}/expected4 -

.include <bsd.regress.mk>

${PROGS}: ${LIBCRT0} ${OBJS} ${LIBC} ${CRTBEGIN} ${CRTEND} ${DPADD}
	${CC} ${LDFLAGS} ${LDSTATIC} -o ${.TARGET} ${OBJS} ${LDADD_${.TARGET}}

@


1.2
log
@Check the destructor order too
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2011/11/08 23:51:02 guenther Exp $
@


1.1
log
@Regress for -z initfirst support
@
text
@d1 1
a1 1
# $OpenBSD$
d15 1
d20 1
a20 1
	./prog1 | grep -v ^fini | cmp -s ${.CURDIR}/expected1 -
d22 1
a22 1
	./prog2 | grep -v ^fini | cmp -s ${.CURDIR}/expected2 -
d24 1
a24 1
	./prog3 | grep -v ^fini | cmp -s ${.CURDIR}/expected3 -
d26 1
a26 1
	./prog4 | grep -v ^fini | cmp -s ${.CURDIR}/expected4 -
d32 1
@


1.1.1.1
log
@ld.so initfirst regress test
@
text
@d3 23
a25 1
.include <bsd.obj.mk>
d27 1
a27 24
PROG=prog1

SRCS=prog1.C

AA_DIR=${.CURDIR}/../libaa
AA_OBJDIR!=    if [ -d $(AA_DIR)/${__objdir} ]; then \
                        echo "$(AA_DIR)/${__objdir}"; \
		else \
			echo "$(AA_DIR)"; \
		fi

AB_DIR=${.CURDIR}/../libab
AB_OBJDIR!=    if [ -d $(AB_DIR)/${__objdir} ]; then \
                        echo "$(AB_DIR)/${__objdir}"; \
		else \
			echo "$(AB_DIR)"; \
		fi

AC_DIR=${.CURDIR}/../libac
AC_OBJDIR!=    if [ -d $(AC_DIR)/${__objdir} ]; then \
                        echo "$(AC_DIR)/${__objdir}"; \
		else \
			echo "$(AC_DIR)"; \
		fi
d29 2
a30 28
AD_DIR=${.CURDIR}/../libad
AD_OBJDIR!=    if [ -d $(AD_DIR)/${__objdir} ]; then \
                        echo "$(AD_DIR)/${__objdir}"; \
		else \
			echo "$(AD_DIR)"; \
		fi

AE_DIR=${.CURDIR}/../libae
AE_OBJDIR!=    if [ -d $(AE_DIR)/${__objdir} ]; then \
                        echo "$(AE_DIR)/${__objdir}"; \
		else \
			echo "$(AE_DIR)"; \
		fi

LDADD=-laa
LDFLAGS=  -L$(AA_OBJDIR)
LDFLAGS+= -Wl,-rpath,$(AA_OBJDIR) 
LDFLAGS+= -Wl,-rpath,$(AB_OBJDIR) 
LDFLAGS+= -Wl,-rpath,$(AC_OBJDIR) 
LDFLAGS+= -Wl,-rpath,$(AD_OBJDIR) 
LDFLAGS+= -Wl,-rpath,$(AE_OBJDIR) 
NOMAN=
CC=c++

run-regress-${PROG}: ${PROG}
	[ "`./${PROG}`" = "DBECAPpacebd" ]

.include <bsd.regress.mk>
@

