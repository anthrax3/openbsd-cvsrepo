head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.30
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.26
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.16
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.24
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.22
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.20
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.18
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.16
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.18
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.14
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.12
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.10
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.8
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.6
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.4
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.2
	OPENBSD_3_9_BASE:1.1.1.1
	edgecases_test3:1.1.1.1
	kurt:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2010.06.20.17.57.09;	author phessler;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.23.19.02.29;	author kurt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.09.23.19.02.29;	author kurt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Add some missing includes, so we do not have implicit function
declarations.

OK miod@@, millert@@
@
text
@/*	$OpenBSD: bb.c,v 1.1.1.1 2005/09/23 19:02:29 kurt Exp $	*/

/*
 * Copyright (c) 2005 Kurt Miller <kurt@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <stdio.h>

int weakFunction1(void) __attribute__((weak));
int weakFunction2(void) __attribute__((weak));

/* this function should be called */
int
weakFunction1()
{
	return 0;
}

/* this function should be not be called, the one it libaa should */
int
weakFunction2()
{
	return 1;
}

int
bbTest1()
{
	int ret = 0;

	/*
	 * make sure weakFunction1 from libaa (undefined weak) doesn't
	 * interfere with calling weakFunction1 here
	 */
	if (weakFunction1) {
		weakFunction1();
	} else {
		printf("weakFunction1() overwritten by undefined weak "
		    "in libaa\n");
		ret = 1;
	}

	/*
	 * make sure weakFunction2 from libaa is called instead of the
	 * one here
	 */
	if (weakFunction2()) {
		printf("wrong weakFunction2() called\n");
		ret = 1;
	}

	return (ret);
}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: ee.c,v 1.1.1.1 2005/09/19 03:34:18 kurt Exp $	*/
d18 2
@


1.1.1.1
log
@make sure a undefined weak doesn't interfere with a defined one of the
same name in a different shared lib. also make sure first weak symbol
is selected when duplicates exist.
@
text
@@
