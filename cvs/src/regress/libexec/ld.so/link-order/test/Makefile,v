head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.20
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.18
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.14
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.4
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.12
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.10
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.8
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.12
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.10
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.8
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3;
locks; strict;
comment	@# @;


1.7
date	2013.07.05.21.29.51;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2010.08.04.18.25.24;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.03.17.07.36;	author phessler;	state Exp;
branches;
next	1.4;

1.4
date	2010.06.20.14.19.13;	author phessler;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.01.07.08.31;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.01.06.43.03;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.01.05.51.31;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@ELF_TOOLCHAIN bye bye.
@
text
@# $OpenBSD: Makefile,v 1.6 2010/08/04 18:25:24 kettenis Exp $

.include <bsd.own.mk>

REGRESS_TARGETS=	test-none test-single test-minor-1 test-minor-2 \
			test-major-1 test-major-2
REGRESS_TARGETS+=	test-nover test-nover-single-1 test-nover-single-2

.include <bsd.obj.mk>

DIR_NOVER=${.CURDIR}/../libnover

OBJDIR_NOVER!=	if [ -d $(DIR_NOVER)/${__objdir} ]; then \
			echo "$(DIR_NOVER)/${__objdir}"; \
		else \
			echo "$(DIR_NOVER)"; \
		fi

DIR_10=${.CURDIR}/../lib10

OBJDIR_10!=	if [ -d $(DIR_10)/${__objdir} ]; then \
			echo "$(DIR_10)/${__objdir}"; \
		else \
			echo "$(DIR_10)"; \
		fi

DIR_11=${.CURDIR}/../lib11

OBJDIR_11!=	if [ -d $(DIR_11)/${__objdir} ]; then \
			echo "$(DIR_11)/${__objdir}"; \
		else \
			echo "$(DIR_11)"; \
		fi

DIR_20=${.CURDIR}/../lib20

OBJDIR_20!=	if [ -d $(DIR_20)/${__objdir} ]; then \
			echo "$(DIR_20)/${__objdir}"; \
		else \
			echo "$(DIR_20)"; \
		fi

DIR_PROG=${.CURDIR}/../prog

OBJDIR_PROG!=	if [ -d $(DIR_PROG)/${__objdir} ]; then \
			echo "$(DIR_PROG)/${__objdir}"; \
		else \
			echo "$(DIR_PROG)"; \
		fi

PROGPATH=	${OBJDIR_PROG}/prog

prog:
	@@cd $(DIR_PROG) && $(MAKE)

make-lib: prog
	@@mkdir lib >/dev/null 2>&1 || true

clean:
	@@rm lib/* >/dev/null 2>&1 || true

test-none:	make-lib clean
	sh ${.CURDIR}/test.sh ${PROGPATH} '%ERROR%'

test-nover:	make-lib clean
	cp ${OBJDIR_NOVER}/libtest.so lib/
	sh ${.CURDIR}/test.sh ${PROGPATH} none

test-single:	make-lib clean
	cp ${OBJDIR_10}/libtest.so.1.0 lib/
	sh ${.CURDIR}/test.sh ${PROGPATH} 1.0

test-minor-1:	make-lib clean
	cp ${OBJDIR_10}/libtest.so.1.0 ${OBJDIR_11}/libtest.so.1.1 lib/
	sh ${.CURDIR}/test.sh ${PROGPATH} 1.1

test-minor-2:	make-lib clean
	cp ${OBJDIR_10}/libtest.so.1.0 ${OBJDIR_11}/libtest.so.1.1 lib/
	sh ${.CURDIR}/test.sh ${PROGPATH} 1.1

test-major-1:	make-lib clean
	cp ${OBJDIR_11}/libtest.so.1.1 ${OBJDIR_20}/libtest.so.2.0 lib/
	sh ${.CURDIR}/test.sh ${PROGPATH} 2.0

test-major-2:	make-lib clean
	cp ${OBJDIR_11}/libtest.so.1.1 ${OBJDIR_20}/libtest.so.2.0 lib/
	sh ${.CURDIR}/test.sh ${PROGPATH} 2.0

test-nover-single-1:	make-lib clean
	cp ${OBJDIR_NOVER}/libtest.so ${OBJDIR_10}/libtest.so.1.0 lib/
	sh ${.CURDIR}/test.sh ${PROGPATH} none

test-nover-single-2:	make-lib clean
	cp ${OBJDIR_10}/libtest.so.1.0 ${OBJDIR_NOVER}/libtest.so lib/
	sh ${.CURDIR}/test.sh ${PROGPATH} none

.include <bsd.regress.mk>
@


1.6
log
@Revert previous since it makes the tests fail.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2010/07/03 17:07:36 phessler Exp $
a6 1
.if (${ELF_TOOLCHAIN} == "yes")
a7 1
.endif
a10 1
.if (${ELF_TOOLCHAIN} == "yes")
a17 1
.endif
a64 1
.if (${ELF_TOOLCHAIN} == "yes")
a67 1
.endif
a88 1
.if (${ELF_TOOLCHAIN} == "yes")
a95 1
.endif
@


1.5
log
@clean up all created files
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2010/06/20 14:19:13 phessler Exp $
d64 1
a64 1
	@@rm -r lib >/dev/null 2>&1 || true
@


1.4
log
@Have yet another regress test actually build the test program, before
trying to use it.

OK (a long time ago) david@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2003/07/01 07:08:31 niklas Exp $
d64 1
a64 1
	@@rm lib/* >/dev/null 2>&1 || true
@


1.3
log
@Do not try unversioned lib tests on a.out
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2003/07/01 06:43:03 niklas Exp $
d57 4
a60 1
make-lib:
@


1.2
log
@try to vary physical directory layout of the libdir.
Catches case spotted by Dale.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2003/07/01 05:51:31 niklas Exp $
d3 7
a9 3
REGRESS_TARGETS=	test-none test-nover test-single test-minor-1 \
			test-minor-2 test-major-1 test-major-2 \
			test-nover-single-1 test-nover-single-2
d13 1
d21 1
d66 1
d70 1
d92 1
d100 1
@


1.1
log
@A regression test for checking that dlopen prefers the correct shared library
@
text
@d1 1
a1 1
# $OpenBSD$
d3 3
a5 2
REGRESS_TARGETS=	test-none test-nover test-single test-minor \
			test-major test-nover-single
d68 1
a68 1
test-minor:	make-lib clean
d72 9
a80 1
test-major:	make-lib clean
d84 1
a84 1
test-nover-single:	make-lib clean
d86 4
@

