head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.12
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.1.1.0.24
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.22
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.20
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.18
	OPENBSD_5_0:1.1.1.1.0.16
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.12
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.8
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	OPENBSD_4_3_BASE:1.1.1.1
	V0:1.1.1.1
	LAZY:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2017.02.25.07.28.32;	author jsg;	state Exp;
branches;
next	1.2;
commitid	o45S2hSKbgrOD8tL;

1.2
date	2013.10.28.08.40.05;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.02.18.36.59;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.01.02.18.36.59;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Add missing includes to avoid implicit function declarations.
@
text
@/*	$OpenBSD: prog.c,v 1.2 2013/10/28 08:40:05 jsg Exp $ */
/* Public Domain, 2008, Matthieu Herrb */

#include <dlfcn.h>
#include <stdio.h>
#include <stdlib.h>
#include <err.h>

void *handle = NULL;

typedef int (*foofunc)(void);

int
main(int argc, char *argv[])
{
	foofunc foo;
	int i;

	printf("loading: %s\n", FOO);
	handle = dlopen(FOO, RTLD_LAZY|RTLD_GLOBAL);
	if (handle == NULL) {
		errx(1, "dlopen: %s: %s\n", FOO, dlerror());
	}
	printf("loaded: %s\n", FOO);
	printf("looking up foo\n");
	foo = (foofunc)dlsym(handle, "foo");
	printf("found %p - calling it\n", foo);
	i = foo();
	printf("done.\n");
	exit(i);
}
@


1.2
log
@include stdlib.h for exit()
@
text
@d1 1
a1 1
/*	$OpenBSD: prog.c,v 1.1.1.1 2008/01/02 18:36:59 matthieu Exp $ */
d7 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d6 1
@


1.1.1.1
log
@regression test for lazy binding.
"people need never hold off on adding stuff to regress" deraadt@@
@
text
@@
