head	1.4;
access;
symbols
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.0.56
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.46
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.54
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.52
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.50
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.48
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.44
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.42
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.40
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.38
	OPENBSD_5_0:1.1.0.36
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.34
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.32
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.28
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.30
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.26
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.24
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.22
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.20
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.18
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.16
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.14
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.12
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.10
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.8
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.6
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2017.08.07.16.33.52;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	MgbSh4TvWUlBhd2t;

1.3
date	2017.08.04.18.23.52;	author kettenis;	state Exp;
branches;
next	1.2;
commitid	aW1JR0zoRq5Et6UU;

1.2
date	2016.09.27.06.52.50;	author kettenis;	state Exp;
branches;
next	1.1;
commitid	8AToVlRBj1OP7JF9;

1.1
date	2003.02.01.19.56.17;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Silence most clang warnings in ld.so regress.
OK kettenis@@
@
text
@/*
 * Public Domain 2003 Dale Rahn
 *
 * $OpenBSD: aa.C,v 1.3 2017/08/04 18:23:52 kettenis Exp $
 */

#include "aa.h"
volatile int a;


AA::AA(const char *arg)
{
	a = 1;
}

AA foo("A");
@


1.3
log
@Use volatile to keep clang from optimizing things too much.  Force linking
with the c++ command instead of cc by setting CC=${CXX}.  This is a hack
and a better solution is under development.  Linking with c++ is necessary
to make the shared libraries depend up libc++.so such that  the iostream
objects are constructed before we use them.

ok bluhm@@
@
text
@d4 1
a4 1
 * $OpenBSD: aa.C,v 1.2 2016/09/27 06:52:50 kettenis Exp $
d11 1
a11 1
AA::AA(char *arg)
@


1.2
log
@Modernize constructor test such that it builds again and enable it.

ok bluhm@@
@
text
@d4 1
a4 1
 * $OpenBSD: aa.C,v 1.1 2003/02/01 19:56:17 drahn Exp $
d8 1
a8 1
int a;
@


1.1
log
@Test programs for dependant shared library constructors.
@
text
@d4 1
a4 1
 * $OpenBSD$
a6 1
#include "iostream.h"
@

