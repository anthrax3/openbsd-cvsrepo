head	1.19;
access;
symbols
	OPENBSD_6_2:1.19.0.4
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.18.0.12
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.8
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.6
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.4
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.17.0.38
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.36
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.32
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.30
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.28
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.26
	OPENBSD_5_0:1.17.0.24
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.22
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.20
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.16
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.18
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.14
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.12
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.10
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.8
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.17.0.6
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.4
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.2
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.16.0.2
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.11.0.4
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11;
locks; strict;
comment	@# @;


1.19
date	2017.07.06.21.33.45;	author bluhm;	state Exp;
branches;
next	1.18;
commitid	zgV2Qd3u6Nt5aufU;

1.18
date	2014.11.24.17.01.29;	author otto;	state Exp;
branches;
next	1.17;
commitid	u60OSiBXCfwgpMai;

1.17
date	2005.12.13.19.29.43;	author otto;	state Exp;
branches;
next	1.16;

1.16
date	2005.04.02.18.06.10;	author otto;	state Exp;
branches;
next	1.15;

1.15
date	2005.03.29.10.54.56;	author otto;	state Exp;
branches;
next	1.14;

1.14
date	2005.03.27.17.45.44;	author otto;	state Exp;
branches;
next	1.13;

1.13
date	2004.12.01.08.30.53;	author otto;	state Exp;
branches;
next	1.12;

1.12
date	2004.10.19.07.39.36;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2003.12.17.15.11.36;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2003.12.09.12.46.32;	author otto;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.01.09.15.51;	author otto;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.26.19.32.39;	author otto;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.17.11.13.38;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2003.11.14.20.27.17;	author otto;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.06.19.50.04;	author otto;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.04.08.11.41;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2003.10.22.12.17.56;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2003.10.18.19.48.10;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.21.19.30.07;	author otto;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Delete variable REGRESS_TARGET, missing plural S is a typo and it
is not used.  Convert tests into a common style.
OK anton@@
@
text
@# $OpenBSD: Makefile,v 1.18 2014/11/24 17:01:29 otto Exp $

DC?=		dc
DCFLAGS=	-x
CLEANFILES=	*.log

REGRESS_TARGETS=     t1  t2  t3  t4  t5  t6  t7  t8  t9 \
		t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 \
		t20 t21 t22 t23 t24 t25 t26 t27

# .in: input file
# .out: desired result

# t1: basic operations, prints "dc: Runtime warning: non-zero scale in exponent"
# t2: factoring program
# t3: string handling
# t4: more string ops
# t5: bc output, computing exp
# t6: nesting level and tail recursion
# t7: number input and string handling
# t8: bc output, array operations
# t9: output for different bases and wrapping of long lines
# t10: test J and M operators
# t11: test extended comparison operators
# t12: test r operator, prints two "stack empty" warnings
# t13: test #, n and a
# t14: test N, G, ( and {
# t15: more N, G, ( and {
# t16: even more N, G, ( and {
# t17: test R (drop)
# t18: read uninitialized and initialized array locations
# t19: test extended registers
# t20: towers of hanoi
# t21: 500 decimals of pi
# t22: sqrt
# t23: factorial 1000
# t24: line continuations
# t25: exp
# t26: non-decimal fractions
# t27: fix a double free

.SUFFIXES: .in

.in:
	@@echo ${*}
	@@${DC} ${DCFLAGS} ${.CURDIR}/${*}.in > ${*}.log
	@@cmp -s ${.CURDIR}/${*}.out ${*}.log || \
		(echo "XXX ${*} failed" && false)

.include <bsd.regress.mk>
@


1.18
log
@add a (currently crashing) test case by Sebastien Marie
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2005/12/13 19:29:43 otto Exp $
d3 7
a9 4
DC=dc -x

REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 \
	t18 t19 t20 t21 t22 t23 t24 t25 t26 t27
a41 2
all: clean ${REGRESS_TARGET}

d46 1
a46 1
	@@${DC} ${.CURDIR}/${*}.in > ${*}.log
a48 4

# Clean all files generated
clean:
	rm -f *.log
@


1.17
log
@Test non-decimal fraction input, which is currently broken, but will be fixed
soon.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2005/04/02 18:06:10 otto Exp $
d6 1
a6 1
	t18 t19 t20 t21 t22 t23 t24 t25 t26
d37 1
@


1.16
log
@Regressions for raise
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2005/03/29 10:54:56 otto Exp $
d6 1
a6 1
	t18 t19 t20 t21 t22 t23 t24 t25
d36 1
@


1.15
log
@Adapt to new wrapping, including new test.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2005/03/27 17:45:44 otto Exp $
d6 1
a6 1
	t18 t19 t20 t21 t22 t23 t24
d35 1
@


1.14
log
@Test new dynamic growing call stack.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2004/12/01 08:30:53 otto Exp $
d6 1
a6 1
	t18 t19 t20 t21 t22 t23
d34 1
@


1.13
log
@sqrt regress tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2004/10/19 07:39:36 otto Exp $
d6 1
a6 1
	t18 t19 t20 t21 t22
d33 1
@


1.12
log
@extra regression test: compute 500 digits of pi
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2003/12/17 15:11:36 otto Exp $
d6 1
a6 1
	t18 t19 t20 t21
d32 1
@


1.11
log
@Extra regression test (mostly string handling). With kind permission from
the author, Kevin Quick <quick at null dot net>. Let's all sing along!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2003/12/09 12:46:32 otto Exp $
d6 1
a6 1
	t18 t19 t20
d31 1
@


1.10
log
@Towers of Hanoi regression test.
BSD license with permission from author Amit Singh <amit_s at acm dot org>.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2003/12/01 09:15:51 otto Exp $
d5 2
a6 2
REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 \
	t19 t20
d13 1
@


1.9
log
@Test extended registers.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2003/11/26 19:32:39 otto Exp $
d6 1
a6 1
	t19
d29 1
@


1.8
log
@Test reading uninitialized array locations.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2003/11/17 11:13:38 otto Exp $
d3 1
a3 1
DC=dc
d5 2
a6 1
REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18
d28 1
@


1.7
log
@Test drop ('R').
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2003/11/14 20:27:17 otto Exp $
d5 1
a5 1
REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17
d26 1
@


1.6
log
@Tests for new boolean operations.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2003/11/06 19:50:04 otto Exp $
d5 1
a5 1
REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16
d25 1
@


1.5
log
@Test #, n, and a.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2003/11/04 08:11:41 otto Exp $
d5 1
a5 1
REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13
d22 3
@


1.4
log
@Test r operator.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2003/10/22 12:17:56 otto Exp $
d5 1
a5 1
REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9 t10 t11 t12
d21 1
@


1.3
log
@Regressions for new extended comparison operators.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2003/10/18 19:48:10 otto Exp $
d5 1
a5 1
REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9 t10 t11
d19 2
@


1.2
log
@Regression test for J and M.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2003/09/21 19:30:07 otto Exp $
d5 1
a5 1
REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9 t10
@


1.1
log
@A set of regressions for dc(1).
@
text
@d1 1
a1 1
# $OpenBSD$
d5 1
a5 1
REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9
d18 1
@

