head	1.12;
access;
symbols
	OPENBSD_6_1:1.11.0.4
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.26
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.24
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.20
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.18
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.16
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.14
	OPENBSD_5_0:1.7.0.12
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.10
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.8
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.4
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.6
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.6.0.18
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.16
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.14
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.12
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4;
locks; strict;
comment	@# @;


1.12
date	2017.05.26.20.27.21;	author tedu;	state Exp;
branches;
next	1.11;
commitid	ng1PfzR7jToqbkPy;

1.11
date	2016.09.02.07.46.18;	author otto;	state Exp;
branches;
next	1.10;
commitid	htjrFLp4nk71o5X7;

1.10
date	2016.02.22.19.31.38;	author tobias;	state Exp;
branches;
next	1.9;
commitid	rjbcfoSwH70LKKdQ;

1.9
date	2015.10.13.17.07.05;	author tobias;	state Exp;
branches;
next	1.8;
commitid	Gi81qMU8MCxU18OZ;

1.8
date	2014.11.25.16.01.08;	author tobias;	state Exp;
branches;
next	1.7;
commitid	xQx2D8KRCaP1MZCy;

1.7
date	2008.08.20.18.29.37;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.20.19.25.23;	author otto;	state Exp;
branches;
next	1.5;

1.5
date	2004.06.14.18.40.23;	author otto;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.02.16.33.33;	author david;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.10.18.30.33;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.07.21.01.29;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.22.19.31.51;	author otto;	state Exp;
branches;
next	;


desc
@@


1.12
log
@add a test for the git diffs, suggested by tom
@
text
@# $OpenBSD: Makefile,v 1.11 2016/09/02 07:46:18 otto Exp $

PATCH=patch
PATCHOPTIONS=-sN

REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19

# Currently t3 fails

# .in: input file
# .diff: patch
# .out: desired result after patching

# t1: diff contains invalid line number 0.
# t2: diff contains invalid line numbers beyond end of input file.
# t3: a case where patch should detect a previously applied patch.
#     Diff transform an empty file into a single line one. Currently fails.
# t4: a case where patch has to detect a previously applied patch.
#     Diff transform a file with a single line with an eol into a single
#     line without eol.
# t5: both files in diff do not exist. t5.in should be missing.
# t6-t12: various cases of no eol at end of file handling.
# t13: a case where patch has to detect a previously applied patch.
#     Diff transform a file ending with no eol into a file ending with eol.
# t14: diff in normal diff format.
# t15: diff in context diff format.
# t16: diff in ed format.
# t17: diff in ed format that inserts a dot-line.
# t18: diff in ed format that fully replaces input content.

all: clean ${REGRESS_TARGET}

.SUFFIXES: .in

.in:
	@@echo ${*}
	@@cp ${.CURDIR}/${*}.in ${*}.copy
	@@${PATCH} ${PATCHOPTIONS} ${*}.copy ${.CURDIR}/${*}.diff
	@@cmp -s ${*}.copy ${.CURDIR}/${*}.out || \
		(echo "XXX ${*} failed" && false)

t3:
	@@echo ${*}
	@@cp ${.CURDIR}/${*}.in ${*}.copy
	@@(! ${PATCH} ${PATCHOPTIONS} ${*}.copy ${.CURDIR}/${*}.diff)
	@@cmp -s ${*}.copy ${.CURDIR}/${*}.out || \
		(echo "XXX ${*} failed" && false)
t4:
	@@echo ${*}
	@@cp ${.CURDIR}/${*}.in ${*}.copy
	@@(! ${PATCH} ${PATCHOPTIONS} ${*}.copy ${.CURDIR}/${*}.diff)
	@@cmp -s ${*}.copy ${.CURDIR}/${*}.out || \
		(echo "XXX ${*} failed" && false)

t5:
	@@echo ${*}
	@@rm -f ${*}
	@@${PATCH} ${PATCHOPTIONS} < ${.CURDIR}/${*}.diff
	@@cmp -s ${*} ${.CURDIR}/${*}.out || (echo "XXX ${*} failed" && false)

t13:
	@@echo ${*}
	@@cp ${.CURDIR}/${*}.in ${*}.copy
	@@(! ${PATCH} ${PATCHOPTIONS} ${*}.copy ${.CURDIR}/${*}.diff)
	@@cmp -s ${*}.copy ${.CURDIR}/${*}.out || \
		(echo "XXX ${*} failed" && false)

t19:
	@@echo t19
	@@mkdir -p d19
	@@cp ${.CURDIR}/t19.in d19/file
	@@${PATCH} -t ${PATCHOPTIONS} < ${.CURDIR}/t19.diff
	@@cmp -s ${.CURDIR}/t19.out d19/file || (echo "XXX t19 failed" && false)


# Clean all files generated
clean:
	rm -rf *.copy *.orig *.rej t5 d19

.PHONY: t5

.include <bsd.regress.mk>
@


1.11
log
@disable t3, it is known to fail
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2016/02/22 19:31:38 tobias Exp $
d6 1
a6 1
REGRESS_TARGETS=t1 t2 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18
d68 8
d78 1
a78 1
	rm -f *.copy *.orig *.rej t5
@


1.10
log
@Properly handle ed-files which fully replace input file content. This
misbehaviour is triggered with 'c' and 'i' commands on empty buffers.

Spotted and fixed by Martin Natano <natano at natano dot net>.

ok millert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2015/10/13 17:07:05 tobias Exp $
d6 3
a8 1
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18
@


1.9
log
@Test t16 for ed-formatted diffs does not contain a substitution.
Add a minimalistic check in t17.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2014/11/25 16:01:08 tobias Exp $
d6 1
a6 1
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17
d26 2
a27 1
# t17: diff in ed format that inserts a dot-line
@


1.8
log
@Also cover other diff formats besides unified ones.

ok otto
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2008/08/20 18:29:37 otto Exp $
d6 1
a6 1
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16
d26 1
@


1.7
log
@mention t3 fails
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2004/06/20 19:25:23 otto Exp $
d6 1
a6 1
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13
d14 1
a14 1
# t3: a case where it patch should detect a previously applied patch.
d23 3
@


1.6
log
@Some more regressions, mostly involving no eol at end of file. t4
and t13 currenlty fail, but this will be fixed real soon now.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2004/06/14 18:40:23 otto Exp $
d15 1
a15 1
#     Diff transform an empty file into a single line one.
@


1.5
log
@Correct test case 3 now that patch(1) is a bit smarter about empty files.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2003/09/02 16:33:33 david Exp $
d6 1
a6 1
REGRESS_TARGETS=t1 t2 t3 t4 t5
d17 2
a18 3
#     Diff transform an file with a single line without eol into a single
#     line with eol. Fails because patch does not detect the previously
#     applied diff.
d20 3
d53 7
@


1.4
log
@add t5 to the clean target
ok deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2003/08/10 18:30:33 otto Exp $
d15 1
a15 2
#     Diff transform an empty file into a single line one. Patch cannot
#     detect this because it has an empty context.
d33 6
@


1.3
log
@New regression case and some minor Makefile cleanup.

ok millert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2003/08/07 21:01:29 otto Exp $
d49 1
a49 1
	rm -f *.copy *.orig *.rej
@


1.2
log
@Two new regressions concerning detection of already applied patches.

ok millert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2003/07/22 19:31:51 otto Exp $
d6 1
a6 1
REGRESS_TARGETS=t1 t2 t3 t4
d21 1
d31 2
a32 1
	@@cmp -s ${*}.copy ${.CURDIR}/${*}.out || (echo "XXX ${*} failed" && false)
d38 9
a46 2
	@@cmp -s ${*}.copy ${.CURDIR}/${*}.out || (echo "XXX ${*} failed" && false)
	
d50 2
@


1.1
log
@A set of regressions for patch(1). Currently it consists of two
cases dealing with invalid line numbers in the patch files.

ok millert@@
@
text
@d1 1
a1 1
# $OpenBSD$
d4 1
d6 1
a6 1
REGRESS_TARGETS=t1 t2
d12 1
a12 1
# t1: diff contains invalid line number 0. Fails.
d14 7
d27 1
d29 1
a29 1
	@@${PATCH} -s ${*}.copy ${.CURDIR}/${*}.diff
d32 6
@

