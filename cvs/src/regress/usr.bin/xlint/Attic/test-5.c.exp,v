head	1.8;
access;
symbols
	OPENBSD_5_2:1.7.0.26
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.24
	OPENBSD_5_0:1.7.0.22
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.20
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.18
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.14
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.16
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.12
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.10
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.8
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4;
locks; strict;
comment	@# @;


1.8
date	2012.07.28.19.07.07;	author guenther;	state dead;
branches;
next	1.7;

1.7
date	2006.04.26.16.16.43;	author cloder;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.25.01.31.46;	author cloder;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.20.03.38.41;	author cloder;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.15.05.46.43;	author cloder;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.10.19.20.21;	author cloder;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.28.01.06.12;	author cloder;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.28.01.05.08;	author cloder;	state Exp;
branches;
next	;


desc
@@


1.8
log
@lint is with us no more; remove regress tests
@
text
@test-5.c:34: warning: foo() arg #1: converted from 'int' to 'unsigned long long'
test-5.c:35: warning: foobar() arg #1: conversion of 'long long' to 'int' is out of range
test-5.c:36: warning: bar() arg #1: conversion of negative constant to unsigned type
Lint pass2:
@


1.7
log
@Reflect prettier function names change in lint warnings
@
text
@@


1.6
log
@Reflect latest lint commit, which fixes many type conversion false
positives and negatives.
@
text
@d1 3
a3 3
test-5.c:34: warning: foo arg #1: converted from 'int' to 'unsigned long long'
test-5.c:35: warning: foobar arg #1: conversion of 'long long' to 'int' is out of range
test-5.c:36: warning: bar arg #1: conversion of negative constant to unsigned type
@


1.5
log
@Reflect new warning format
@
text
@a2 1
test-5.c:36: warning: bar arg #1: converted from 'int' to 'unsigned int'
@


1.4
log
@kjell forgot to update this after his last message commit :)
@
text
@d1 4
a4 4
test-5.c:34: warning: arg #1 converted to 'unsigned long long' by prototype
test-5.c:35: warning: conversion of 'long long' to 'int' is out of range, arg #1
test-5.c:36: warning: arg #1 converted to 'unsigned int' by prototype
test-5.c:36: warning: conversion of negative constant to unsigned type, arg #1
@


1.3
log
@Match new lint warning and error format (similar to gcc's format).
@
text
@d1 1
a1 1
test-5.c:34: warning: conversion to 'unsigned long long' due to prototype, arg #1
d3 1
a3 1
test-5.c:36: warning: conversion to 'unsigned int' due to prototype, arg #1
@


1.2
log
@Remove dammit
@
text
@d1 4
a4 4
test-5.c(34): warning: conversion to 'unsigned long long' due to prototype, arg #1
test-5.c(35): warning: conversion of 'long long' to 'int' is out of range, arg #1
test-5.c(36): warning: conversion to 'unsigned int' due to prototype, arg #1
test-5.c(36): warning: conversion of negative constant to unsigned type, arg #1
@


1.1
log
@Test for promoting in-range literal to bigger type
@
text
@a2 1
dammit2
@

