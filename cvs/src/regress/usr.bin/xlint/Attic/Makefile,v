head	1.30;
access;
symbols
	OPENBSD_5_2:1.29.0.6
	OPENBSD_5_2_BASE:1.29
	OPENBSD_5_1_BASE:1.29
	OPENBSD_5_1:1.29.0.4
	OPENBSD_5_0:1.29.0.2
	OPENBSD_5_0_BASE:1.29
	OPENBSD_4_9:1.28.0.4
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.2
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.27.0.14
	OPENBSD_4_7_BASE:1.27
	OPENBSD_4_6:1.27.0.16
	OPENBSD_4_6_BASE:1.27
	OPENBSD_4_5:1.27.0.12
	OPENBSD_4_5_BASE:1.27
	OPENBSD_4_4:1.27.0.10
	OPENBSD_4_4_BASE:1.27
	OPENBSD_4_3:1.27.0.8
	OPENBSD_4_3_BASE:1.27
	OPENBSD_4_2:1.27.0.6
	OPENBSD_4_2_BASE:1.27
	OPENBSD_4_1:1.27.0.4
	OPENBSD_4_1_BASE:1.27
	OPENBSD_4_0:1.27.0.2
	OPENBSD_4_0_BASE:1.27
	OPENBSD_3_9:1.18.0.2
	OPENBSD_3_9_BASE:1.18;
locks; strict;
comment	@# @;


1.30
date	2012.07.28.19.07.07;	author guenther;	state dead;
branches;
next	1.29;

1.29
date	2011.05.31.22.35.19;	author martynas;	state Exp;
branches;
next	1.28;

1.28
date	2010.07.25.23.00.05;	author guenther;	state Exp;
branches;
next	1.27;

1.27
date	2006.05.28.23.55.42;	author cloder;	state Exp;
branches;
next	1.26;

1.26
date	2006.05.05.20.02.11;	author otto;	state Exp;
branches;
next	1.25;

1.25
date	2006.05.03.18.45.25;	author cloder;	state Exp;
branches;
next	1.24;

1.24
date	2006.04.28.18.31.13;	author otto;	state Exp;
branches;
next	1.23;

1.23
date	2006.04.27.20.41.19;	author otto;	state Exp;
branches;
next	1.22;

1.22
date	2006.04.25.01.31.46;	author cloder;	state Exp;
branches;
next	1.21;

1.21
date	2006.04.20.04.03.05;	author cloder;	state Exp;
branches;
next	1.20;

1.20
date	2006.04.20.03.39.14;	author cloder;	state Exp;
branches;
next	1.19;

1.19
date	2006.03.20.05.06.37;	author cloder;	state Exp;
branches;
next	1.18;

1.18
date	2005.12.16.03.02.22;	author cloder;	state Exp;
branches;
next	1.17;

1.17
date	2005.12.12.23.37.51;	author cloder;	state Exp;
branches;
next	1.16;

1.16
date	2005.12.10.19.19.49;	author cloder;	state Exp;
branches;
next	1.15;

1.15
date	2005.12.10.19.16.56;	author cloder;	state Exp;
branches;
next	1.14;

1.14
date	2005.12.10.17.42.37;	author cloder;	state Exp;
branches;
next	1.13;

1.13
date	2005.12.09.04.30.58;	author cloder;	state Exp;
branches;
next	1.12;

1.12
date	2005.12.09.03.36.14;	author cloder;	state Exp;
branches;
next	1.11;

1.11
date	2005.12.03.01.04.06;	author cloder;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.02.21.24.09;	author grunk;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.01.05.19.25;	author cloder;	state Exp;
branches;
next	1.8;

1.8
date	2005.12.01.05.07.55;	author cloder;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.30.19.44.08;	author cloder;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.30.19.39.16;	author cloder;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.28.01.05.08;	author cloder;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.26.20.45.30;	author cloder;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.23.20.38.57;	author cloder;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.23.00.13.56;	author cloder;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.21.18.25.57;	author cloder;	state Exp;
branches;
next	;


desc
@@


1.30
log
@lint is with us no more; remove regress tests
@
text
@# $OpenBSD: Makefile,v 1.29 2011/05/31 22:35:19 martynas Exp $

TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 \
	23 24 25 26
LINT=		lint

.for i in ${TEST_MODULES}
REGRESS_TARGETS+= test-${i}
GENERATE_TARGETS+=generate-${i}
test-${i}:
	${LINT} ${LINTFLAGS} test-${i}.c 2>&1 | diff -u ${.CURDIR}/test-${i}.c.exp -

generate-${i}:
	${LINT} ${LINTFLAGS} test-${i}.c 2>&1 > ${.CURDIR}/test-${i}.c.exp
.endfor

.PHONY:	${REGRESS_TARGETS} generate ${GENERATE_TARGETS}

generate: ${GENERATE_TARGETS}


NOOBJ= Yes

.include <bsd.regress.mk>

@


1.29
log
@Test lint warnings about empty non-compound selection statements.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2010/07/25 23:00:05 guenther Exp $
@


1.28
log
@basic regress tests (based on test-19.c) for _Bool and _Complex support
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2006/05/28 23:55:42 cloder Exp $
d4 1
a4 1
	23 24 25
@


1.27
log
@We pull in LINTFLAGS from sys.mk, no need to reproduce it here
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2006/05/05 20:02:11 otto Exp $
d4 1
a4 1
	23
@


1.26
log
@test pointer casts
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2006/05/03 18:45:25 cloder Exp $
a5 1
LINTFLAGS?=	-chabx
@


1.25
log
@Add some regress tests for lint1 crashes which are not solved yet
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2006/04/28 18:31:13 otto Exp $
d3 2
a4 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22
@


1.24
log
@remove p flag from LINTFLAGS; ok cloder@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2006/04/27 20:41:19 otto Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20
@


1.23
log
@Add test for "expression has null effect" warnings.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2006/04/25 01:31:46 cloder Exp $
d5 1
a5 1
LINTFLAGS?=	-chapbx
@


1.22
log
@Reflect latest lint commit, which fixes many type conversion false
positives and negatives.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2006/04/20 04:03:05 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19
@


1.21
log
@Test for (soon to be coming) LINTUSED special comment
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2006/04/20 03:39:14 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18
@


1.20
log
@Test case for unreachable breaks
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2006/03/20 05:06:37 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17
@


1.19
log
@Add a regression test for false positive with ((x == y) == z), fixed in
r1.31 of usr.bin/xlint/lint1/tree.c
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2005/12/16 03:02:22 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12 13 14 15 16
@


1.18
log
@Add a regression test for lint catching division by zero.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2005/12/12 23:37:51 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12 13 14 15
@


1.17
log
@Regression test for constant in conditional context
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2005/12/10 19:19:49 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12 13 14
@


1.16
log
@Add a generate target
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2005/12/10 19:16:56 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12 13
@


1.15
log
@Add a regression test for suspicious use of sizeof.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2005/12/10 17:42:37 cloder Exp $
d9 1
d12 3
d17 4
a20 1
.PHONY:	${REGRESS_TARGETS}
@


1.14
log
@Remove test 11 (gcc attribute parsing) from the list.  We will keep it in
the tree, as it is a very useful test for anyone else who wants to try to
parse these (with lint or any other parser).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2005/12/09 04:30:58 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 12
@


1.13
log
@Add regression test for assignment in conditional context
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2005/12/09 03:36:14 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 11 12
@


1.12
log
@Reverse order of diff so that output makes more sense.  kjell said he
would commit this but he is too much of a slacker.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2005/12/03 01:04:06 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10 11
@


1.11
log
@Add a couple more __attribute__ test cases to test 11, and hook up 11
now that lint deals with attributes.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2005/12/02 21:24:09 grunk Exp $
d10 1
a10 1
	${LINT} ${LINTFLAGS} test-${i}.c 2>&1 | diff -u - ${.CURDIR}/test-${i}.c.exp
@


1.10
log
@add test that lint gets keywords from comments out of #define macros
ok cloder@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2005/12/01 05:19:25 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9 10
@


1.9
log
@Regress test for testing unsigned less than 0
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2005/12/01 05:07:55 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8 9
@


1.8
log
@Add regression test for lint2 being less noisy about "foo declared but
never used or defined".
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2005/11/30 19:44:08 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7 8
@


1.7
log
@Regression test for slashslash comments
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2005/11/30 19:39:16 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6 7
@


1.6
log
@Regression test for __func__
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2005/11/28 01:05:08 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5 6
@


1.5
log
@Test for promoting in-range literal to bigger type
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2005/11/26 20:45:30 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4 5
@


1.4
log
@Add test 4 (case ranges) and adjust output of other cases to reflect the
fact that we have libraries now.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2005/11/23 20:38:57 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3 4
@


1.3
log
@Test "inline" keyword
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2005/11/23 00:13:56 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2 3
@


1.2
log
@Add regression test for right shift of N-bit quantity by >= N bits
OK millert, deraadt
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2005/11/21 18:25:57 cloder Exp $
d3 1
a3 1
TEST_MODULES=	1 2
@


1.1
log
@Basic regress framework for xlint. Not hooked up yet.
OK deraadt, input from millert
@
text
@d1 1
a1 1
# $OpenBSD$
d3 1
a3 1
TEST_MODULES=	1
@

