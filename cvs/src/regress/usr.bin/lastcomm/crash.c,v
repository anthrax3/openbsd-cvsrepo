head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.2
	OPENBSD_6_2_BASE:1.1.1.1
	bluhm_20170608:1.1.1.1
	bluhm:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2017.06.08.17.29.33;	author bluhm;	state Exp;
branches
	1.1.1.1;
next	;
commitid	p28OZcyMxVqRJamD;

1.1.1.1
date	2017.06.08.17.29.33;	author bluhm;	state Exp;
branches;
next	;
commitid	p28OZcyMxVqRJamD;


desc
@@



1.1
log
@Initial revision
@
text
@/*	$OpenBSD$	*/

#include <err.h>
#include <stdlib.h>
#include <signal.h>

void handler(int);

int
main(int argc, char *argv[])
{
	int *i;

	if (signal(SIGSEGV, handler) == SIG_ERR)
		err(1, "signal");

	i = (void *)0x10UL;
	(*i)++;
	return *i;
}

void
handler(int signum)
{
	exit(0);
}
@


1.1.1.1
log
@Start with a clean /var/account/acct accounting file and turn on
process accounting with accton(8).  Each test executes a command
with a unique name and checks the flags in the lastcomm(1) output.
Run tests with fork, su, core, xsig, pledge, trap accounting.
@
text
@@
