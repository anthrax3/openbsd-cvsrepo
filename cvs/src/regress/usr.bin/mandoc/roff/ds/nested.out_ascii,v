head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.07.04.14.53.27;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	b0KXfVBm69j6HJWE;

1.2
date	2014.08.26.11.32.56;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	QJnN8iCFzEXgbRZx;

1.1
date	2014.04.07.21.00.00;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@DS-NESTED(1)                General Commands Manual               DS-NESTED(1)

NNAAMMEE
     ddss--nneesstteedd - nested string expansion

DDEESSCCRRIIPPTTIIOONN
     This is the output.

     This is surprising.  This is surprising.

OpenBSD                          July 4, 2017                          OpenBSD
@


1.2
log
@inevitable churn caused by the section title change
@
text
@d11 1
a11 1
OpenBSD                          April 7, 2010                         OpenBSD
@


1.1
log
@We already supported (outer) user-defined strings containing references
to other (inner) user-defined strings in their values, such that the inner
ones get expanded at expansion time of the outer ones (delayed evaluation).
Now we also support specifying the name of an (outer) user-defined
string to expand using the expanded values of some other (inner)
user-defined strings (indirect reference).
@
text
@d1 1
a1 1
DS-NESTED(1)               OpenBSD Reference Manual               DS-NESTED(1)
@

