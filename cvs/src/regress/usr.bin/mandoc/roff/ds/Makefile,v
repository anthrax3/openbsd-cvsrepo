head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.12
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2014.06.29.22.12.54;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	0q8PJtpXMYCyUZJE;

1.4
date	2014.04.07.21.00.00;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2014.02.14.23.05.08;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.17.16.28.46;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2011.02.06.00.18.58;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Major roff_getname() cleanup.
* Return the name even if it is terminated by an escape sequence, not a blank.
* Skip the full escape sequence using mandoc_escape(), not just the first byte.
* Make it non-destructive, return the length instead of writing a '\0'.
* Let .ds and .as cope with the above changes to the internal interface.
* Fix .rm and .rr to accept an escape sequence as the end of a name.
* Fix .nr and .rr to not set/delete a register with an empty name.
@
text
@# $OpenBSD: Makefile,v 1.4 2014/04/07 21:00:00 schwarze Exp $

REGRESS_TARGETS = append escname nested quoting

.include <bsd.regress.mk>
@


1.4
log
@We already supported (outer) user-defined strings containing references
to other (inner) user-defined strings in their values, such that the inner
ones get expanded at expansion time of the outer ones (delayed evaluation).
Now we also support specifying the name of an (outer) user-defined
string to expand using the expanded values of some other (inner)
user-defined strings (indirect reference).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/02/14 23:05:08 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS = append nested quoting
@


1.3
log
@Implement the roff(7) .as request (append to user-defined string).
Missing feature found by jca@@ in ratpoison(1).
The ratpoison(1) manual still doesn't work because it uses .shift
and .while, too (apparently, ratpoison is so complex that it
needs a Turing-complete language to even format its manual :-).

Written at Christchurch International Airport.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2011/11/17 16:28:46 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS = quoting append
@


1.2
log
@Complete overhaul of the mandoc(1) test suite.
* Test the recently introduced -Tman output mode, too.
* Specify date and OS arguments in all tests.
* Remove the kludge of sed(1)ing away the page footer lines.
* New make(1) variables SKIP_TMAN, SKIP_GROFF.
* Drop obsolete, clumsy make(1) variable GROFF_TARGETS.
* Delete obsolete mdoc/Bl/E*.sh error reporting tests.
* Silence char/N/basic.
* New targets:
- ascii, ascii-clean - to run -Tascii tests only
- tman, tman-clean - to run the new -Tman tests only
- obj-clean - maintainer only, needed before groff-clean and groff
- groff-clean - maintainer only, affects checked-in files
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2011/02/06 00:18:58 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS=quoting
@


1.1
log
@more tests found in my other tree
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2010/04/25 17:35:31 schwarze Exp $
a2 1
GROFF_TARGETS=quoting
@

