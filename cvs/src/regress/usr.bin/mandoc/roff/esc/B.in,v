head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.14
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2017.07.04.14.53.27;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	b0KXfVBm69j6HJWE;

1.2
date	2014.07.06.19.08.57;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	rolX8OitNNoUBJoD;

1.1
date	2014.04.08.01.36.50;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.Dd $Mdocdate: July 4 2017 $
.Dt ESC-B 1
.Os
.Sh NAME
.Nm esc-B
.Nd the roff escape B sequence: validate numerical expression
.Sh DESCRIPTION
empty: \B''
.br
digit: \B'0'
.br
no number: \B'no number'
.br
trailing garbage: \B'1X'
.br
trailing operator: \B'1+'
.br
infix operator: \B'1+1'
.br
infix and trailing operator: \B'1+1+'
.br
chain of operations: \B'1+2+3+4'
.br
trailing para: \B'1+('
.br
unclosed para: \B'(1'
.br
empty pair of parentheses: \B'()'
.br
parentheses containing number: \B'(42)'
.br
complex expression: \B'3+(3*(5==5*2)*4)+(3*5)/2'
.br
other delimiter: \Bx1+1x
.br
no closing delimiter: \B'1+1
@


1.2
log
@Clean up messages related to plain text and to escape sequences.
* Mention invalid escape sequences and string names, and fallbacks.
* Hierarchical naming.
@
text
@d1 2
a2 1
.Dd July 6, 2014
d4 1
a4 1
.Os OpenBSD
@


1.1
log
@Fully implement the \B (validate numerical expression) and
partially implement the \w (measure text width) escape sequence
in a way that makes them usable in numerical expressions and in
conditional requests, similar to how \n (interpolate number register)
and \* (expand user-defined string) are implemented.

This lets mandoc(1) handle the baroque low-level roff code
found at the beginning of the ggrep(1) manual.
Thanks to pascal@@ for the report.
@
text
@d1 1
a1 1
.Dd April 8, 2014
d35 2
@

