head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.4
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.1.0.12
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.04.14.53.27;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	b0KXfVBm69j6HJWE;

1.1
date	2015.01.01.09.06.39;	author schwarze;	state Exp;
branches;
next	;
commitid	dTA7EdzuaQgVRS9Z;


desc
@@


1.2
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.Dd $Mdocdate: July 4 2017 $
.Dt FACTORIAL 1
.Os
.Sh NAME
.Nm factorial
.Nd factorial sequence
.Sh DESCRIPTION
.\" recursively calculate a single factorial
.de rfac
.  ie \\$1>1 \{\
.    No \\$1 *
.    nr i \\$1-1
.    rfac \\ni
.    nr acc \\n[acc]*\\$1
.  \}
.  el .nr acc 1
..
.\" recursively print a sequence of factorials
.de fac
.  No \\$1! =
.  rfac \\$1
.  if \\$1>1 1 =
.  No \\n[acc]
.  if \\$1 \{\
.    br
.    nr i \\$1-1
.    fac \\ni
.  \}
..
.\" main program
.fac 9
@


1.1
log
@The roff(7) language is Turing-complete, even the part implemented
in mandoc(1).  So practice some recursive programming to make sure
it doesn't get broken.
@
text
@d1 2
a2 1
.Dd December 30, 2014
d4 1
a4 1
.Os OpenBSD
@

