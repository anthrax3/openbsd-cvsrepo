head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.1.0.12
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.07.04.14.53.27;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	b0KXfVBm69j6HJWE;

1.1
date	2014.12.30.10.28.56;	author schwarze;	state Exp;
branches;
next	;
commitid	vjGwLOQiGRR7EyiE;


desc
@@


1.2
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.Dd $Mdocdate: July 4 2017 $
.Dt DE-STARTDE 1
.Os
.Sh NAME
.Nm de-startde
.Nd macro starting a macro definition, but not ending it
.Sh DESCRIPTION
define outer macro:
.de outer
outer macro called; define inner macro:
.de inner
inner macro called; end outer scope.
..
outer scope ended; outer macro now defined.
.Pp
call outer macro:
.outer
returned from call of outer macro; end inner scope.
..
inner scope ended; inner macro now defined.
.Pp
call inner macro:
.inner
returned from call of inner macro.
@


1.1
log
@Test the weird construct of a user-defined macro starting (but not
ending!) the definition of another user defined macro.
Mandoc already handles this correctly, make sure it won't get broken.
@
text
@d1 2
a2 1
.Dd December 30, 2014
d4 1
a4 1
.Os OpenBSD
@

