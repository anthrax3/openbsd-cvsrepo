head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.10
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.03.08.04.43.39;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Improve .if/.ie condition handling.
* Support string comparisons.
* Support negation not only for numerical, but for all conditions.
* Switch the `o' condition from false to true.
* Handle the `c', `d', and `r' conditions as false for now.
* Use int for boolean data instead of rolling our own "enum roffrule";
needed such that we can use the standard ! and == operators.

Havard Eidnes reported via the NetBSD bug tracking system that some
Tcl*(3) manuals need this, and Thomas Klausner <wiz at NetBSD>
forwarded the report to me.  This doesn't make the crazy Tcl*(3)
macrology maze happy yet, but brings us a bit closer.
@
text
@.TH COND-STRCMP 1 "March 8, 2014" OpenBSD
.SH NAME
cond-strcmp \- roff conditions involving string comparison
.SH DESCRIPTION
empty:
.ie """ (t)
.el (f)
one char:
.ie xaxax (t)
.el (f)
three chars:
.ie xabcxabcx (t)
.el (f)
.br
mismatch:
.ie xabcxabdx (t)
.el (f)
longer:
.ie xabcxabcdx (t)
.el (f)
shorter:
.ie xabcdxabcx (t)
.el (f)
.br
no middle:
.ie xabc (t)
.el (f)
no end:
.ie xabcxabc
.el (f)
.SS Negation
match:
.ie !xabcxabcx (t)
.el (f)
mismatch:
.ie !xaxbx (t)
.el (f)
@
