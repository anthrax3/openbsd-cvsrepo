head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.14
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.07.04.14.53.26;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	b0KXfVBm69j6HJWE;

1.2
date	2014.07.07.21.35.42;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	O2S43bw50KTGcriR;

1.1
date	2013.06.27.09.48.23;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.TH COND-CLOSE 1 2013-06-27
.SH NAME
cond-close \- closing conditional macros
.SH DESCRIPTION
.if t \{.unknown \}
closing after an unknown macro
.PP
.if t \{.ig \}
closing after an ignored macro
.PP
.if t \{text \}
closing after plain text
.PP
.if n \{
still open at the end of the file
@


1.2
log
@Clean up ERROR messages related to document structure and macros:
Hierarchical naming and mention macro names in messages.
@
text
@d1 2
a2 1
.TH COND-CLOSE 1 2013-06-27 OpenBSD
@


1.1
log
@Parse for the closing delimiter `\}' for conditionals
even when the conditional evaluated to false.

While here, reshuffle the code to reduce indentation and make it
more readable; that way, we can even trim down the comments because
it becomes obvious what the code does.

Found in zipinfo(1) - thanks to espie@@ and naddy@@
for making me look at that manual page.
@
text
@d13 3
@

