head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2017.07.04.14.53.27;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	b0KXfVBm69j6HJWE;

1.4
date	2017.06.25.12.48.58;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	sEarNP5yvw5NJVzM;

1.3
date	2017.06.17.22.46.26;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	cZz8ExRoPNYxAmqE;

1.2
date	2014.12.18.17.43.07;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	799XcRPZtFFR5Ih8;

1.1
date	2014.11.10.20.59.41;	author schwarze;	state Exp;
branches;
next	;
commitid	dYTNtpHdR6HoVvDX;


desc
@@


1.5
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@mandoc: divzero.in:7:4: ERROR: divide by zero: 1/0
mandoc: divzero.in:8:4: ERROR: divide by zero: 1%0
@


1.4
log
@cope with changes in BASE messages
@
text
@d1 2
a2 3
mandoc: divzero.in:6:4: ERROR: divide by zero: 1/0
mandoc: divzero.in:7:4: ERROR: divide by zero: 1%0
mandoc: divzero.in: BASE: RCS id missing: (OpenBSD)
@


1.3
log
@churn related to the new style message about RCS ids
@
text
@d3 1
a3 1
mandoc: divzero.in: STYLE: RCS id missing
@


1.2
log
@Don't let the modulo operator divide by zero.
Found by jsg@@ with afl.
@
text
@d3 1
@


1.1
log
@more tests found in my tree
@
text
@d2 1
@

