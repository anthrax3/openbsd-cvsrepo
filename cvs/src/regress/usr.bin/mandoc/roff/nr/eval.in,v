head	1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.10
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.04.07.15.05.12;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Almost complete implementation of roff(7) numerical expressions.
Support all binary operators except ';' (scale conversion).
Fully support chained operations and nested parentheses.
Use this for the .nr, .if, and .ie requests.
While here, fix parsing of integer numbers in roff_getnum().
@
text
@.TH NR-EVAL 1 "April 7, 2014" OpenBSD
.SH NAME
nr-eval \- numeric expressions in assignments to number registers
.SH DESCRIPTION
.nr mr 1
1: \n(mr
.br
.nr mr nonumber
nonumber: \n(mr
.br
.nr mr 3X
3X: \n(mr
.br
.nr mr 4+
4+: \n(mr
.br
.nr mr 2+3
2+3: \n(mr
.br
.nr mr 1+1:
1+1:: \n(mr
.br
.nr mr 10-3
10-3: \n(mr
.br
.nr mr 4*2
4*2: \n(mr
.br
.nr mr 27/3
27/3: \n(mr
.br
.nr mr 58%16
58%16: \n(mr
.br
.nr mr 11<?20
11<?20: \n(mr
.br
.nr mr 30<?12
30<?12: \n(mr
.br
.nr mr 7>?13
7>?13: \n(mr
.br
.nr mr 14>?6
14>?6: \n(mr
.br
.nr mr 2+3*3
2+3*3: \n(mr
.br
.nr mr 16+(
para at eol: \n(mr
.br
.nr mr (17
unclosed para: \n(mr
.br
.nr mr (18)
(18): \n(mr
.br
.nr mr ( 25 - 6 )
( 25 - 6 ): \n(mr
.br
.nr mr 11+( 3*3 )
11+( 3*3 ): \n(mr
.br
.nr mr 3+(3*(5==5*2)*4)+(3*5)/2
3+(3*(5==5*2)*4)+(3*5)/2: \n(mr
.br
@
