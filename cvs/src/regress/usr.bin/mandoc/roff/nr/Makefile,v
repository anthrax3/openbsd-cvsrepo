head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@# @;


1.9
date	2015.01.23.00.38.43;	author schwarze;	state Exp;
branches;
next	1.8;
commitid	nzPhVsQa0WQJ7Tyu;

1.8
date	2014.11.10.20.59.41;	author schwarze;	state Exp;
branches;
next	1.7;
commitid	dYTNtpHdR6HoVvDX;

1.7
date	2014.07.06.19.08.57;	author schwarze;	state Exp;
branches;
next	1.6;
commitid	rolX8OitNNoUBJoD;

1.6
date	2014.06.29.22.12.54;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	0q8PJtpXMYCyUZJE;

1.5
date	2014.04.07.15.05.12;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2014.04.05.20.33.38;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2014.02.14.22.27.32;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2013.12.15.21.18.00;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.03.22.04.07;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Wonders of roff(7): Integer numbers in numerical expressions can carry
scaling units, and some manuals (e.g. in devel/grcs) actually use that,
so let's support it.  Missing feature reported by naddy@@.
@
text
@# $OpenBSD: Makefile,v 1.8 2014/11/10 20:59:41 schwarze Exp $

REGRESS_TARGETS = argc divzero eval escname int predef rr scale
LINT_TARGETS	= divzero escname

.include <bsd.regress.mk>
@


1.8
log
@more tests found in my tree
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2014/07/06 19:08:57 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS = argc divzero eval escname int predef rr
@


1.7
log
@Clean up messages related to plain text and to escape sequences.
* Mention invalid escape sequences and string names, and fallbacks.
* Hierarchical naming.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2014/06/29 22:12:54 schwarze Exp $
d3 2
a4 2
REGRESS_TARGETS = argc eval escname int predef rr
LINT_TARGETS	= escname
@


1.6
log
@Major roff_getname() cleanup.
* Return the name even if it is terminated by an escape sequence, not a blank.
* Skip the full escape sequence using mandoc_escape(), not just the first byte.
* Make it non-destructive, return the length instead of writing a '\0'.
* Let .ds and .as cope with the above changes to the internal interface.
* Fix .rm and .rr to accept an escape sequence as the end of a name.
* Fix .nr and .rr to not set/delete a register with an empty name.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2014/04/07 15:05:12 schwarze Exp $
d4 1
@


1.5
log
@Almost complete implementation of roff(7) numerical expressions.
Support all binary operators except ';' (scale conversion).
Fully support chained operations and nested parentheses.
Use this for the .nr, .if, and .ie requests.
While here, fix parsing of integer numbers in roff_getnum().
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/04/05 20:33:38 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS = argc eval int predef rr
@


1.4
log
@Implement the roff(7) .rr (remove register) request.
As reported by sthen@@, the perl-5.18 pod2man(1) preamble
thinks cool kids use that in manuals.  I hope *you* know better.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/02/14 22:27:32 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS = int argc predef rr
@


1.3
log
@Handle some predefined read-only number registers, e.g. .H and .V.
In particular, this improves handling of the pod2man(1) preamble;
for examples of the effect, see some author names in perlthrtut(1).

Missing feature reported by Andreas Voegele <mail at andreasvoegele dot com>
more than two years ago.  Written at Christchurch International Airport.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/12/15 21:18:00 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS = int argc predef
@


1.2
log
@The "value" argument to the roff(7) .nr requests ends right before
the first non-digit character.  While here, implement and document
an optional sign, requesting increment or decrement, as documented
in the Ossanna/Kernighan/Ritter troff manual and supported by groff.

Reported by bentley@@ on discuss at mdocml.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2013/10/03 22:04:07 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS = int argc
@


1.1
log
@Expand references to number registers in exactly the same way as
references to user-defined strings.  While here, make number registers
signed int, like in groff.

Inspired by NetBSD roff.c rev. 1.8 and read.c rev. 1.7
written by Christos Zoulas on March 21, 2013, but implemented
in a completely different way, without hacking into read.c,
where this functionality really doesn't belong.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2011/11/17 16:28:46 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS = int
@

