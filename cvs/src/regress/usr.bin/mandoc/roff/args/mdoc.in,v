head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.07.04.14.53.26;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	b0KXfVBm69j6HJWE;

1.2
date	2014.11.19.03.07.43;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	DMACP9kwk2BHECLD;

1.1
date	2013.12.15.23.56.21;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.Dd $Mdocdate: July 4 2017 $
.Dt ARGS-MDOC 1
.Os
.Sh NAME
.Nm args-mdoc
.Nd arguments to mdoc macros
.Sh DESCRIPTION
standard unquoted:
.Fl one two
text
.br
escaped blanks:
.Fl one\ one two\ two
text
.br
escaped 'e' character:
.Fl one\eone two
text
.br
.\"escaped backslash before blank:
.\"Fl one\\ two
.\"text
.\"br
escaped backslash before 'e' character:
.Fl one\\e two
text
.br
double inter-argument space:
.Fl one  two
text
.br
triple inter-argument space:
.Fl one   two
text
.br
single eol blank:
.Fl one two 
text
.br
double eol blank:
.Fl one two  
text
.br
triple eol blank:
.Fl one two   
text
.br
standard quoted:
.Fl "one" "two"
text
.br
quoted quotes:
.Fl "one""one" """two"""
text
.br
quoted whitespace:
.Fl "one one" "two two"
text
.br
escaped 'e' characters:
.Fl "one \e one" "\e"
text
.br
.\"escaped backslash before blank:
.\"Fl "one\\ one" "\\ "
.\"text
.\"br
.\"escaped backslash before 'e' character:
.\"Fl "one\\eone" "\\e"
.\"text
.\"br
double inter-argument space:
.Fl "one one"  "two two"
text
.br
triple inter-argument space:
.Fl "one one"   "two two"
text
.br
missing inter-argument space:
.Fl "one one"two\ two
text
.br
single eol blank:
.Fl "one one" "two two" 
text
.br
double eol blank:
.Fl "one one" "two two"  
text
.br
triple eol blank:
.Fl "one one" "two two"   
text
.br
trailing blanks in arguments:
.Fl "one " "two "
text
.br
unterminated quotes:
.Fl "one
.Fl one "two
text
.br
single trailing blank in unterminated quotes:
.Fl "one 
.Fl one "two 
text
.br
double trailing blank in unterminated quotes:
.Fl "one  
.Fl one "two  
text
.br
tab after macro:
.Fl	one two
text
.br
escape sequence after macro:
.Fl\(lqone two
text
.br
backslash at eol:
.Fl one two\
@


1.2
log
@Escape sequences terminate high-level macro names, and when doing so,
they are ignored, just in the same way as for request names
and for low-level macro names.
This also cures a warning in the pod2man(1) preamble.
@
text
@d1 2
a2 1
.Dd November 19, 2014
d4 1
a4 1
.Os OpenBSD
@


1.1
log
@In quoted macro arguments, double quotes can be quoted by doubling them.
For a long time, we handle this in roff(7) and man(7) macros.
Now add correct handling for the mdoc(7) case, too.

Closely based on a patch by Tsugutomo dot ENAMI at jp dot sony dot com,
see http://gnats.netbsd.org/cgi-bin/query-pr-single.pl?number=48438
received via Thomas Klausner (wiz@@), slightly tweaked by me.
@
text
@d1 1
a1 1
.Dd December 15, 2013
d24 4
a27 4
.\"escaped backslash before 'e' character:
.\"Fl one\\e two
.\"text
.\"br
d113 8
@

