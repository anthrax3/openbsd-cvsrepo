head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.2
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.12
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.10
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.8
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2017.07.04.14.53.26;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	b0KXfVBm69j6HJWE;

1.4
date	2017.06.17.22.46.26;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	cZz8ExRoPNYxAmqE;

1.3
date	2016.12.07.23.12.25;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	YHQkgpzQ0jpmW4Cc;

1.2
date	2014.11.19.03.07.43;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	DMACP9kwk2BHECLD;

1.1
date	2011.01.03.22.27.21;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.TH ARGS-MAN 1 "November 19, 2014"
.SH NAME
args-man - arguments to man macros
.SH DESCRIPTION
standard unquoted:
.IB one two
text
.br
escaped blanks:
.IB one\ one two\ two
text
.br
escaped 'e' character:
.IB one\eone two
text
.br
.\"escaped backslash before blank:
.\"IB one\\ two
.\"text
.\"br
escaped backslash before 'e' character:
.IB one\\e two
text
.br
double inter-argument space:
.IB one  two
text
.br
triple inter-argument space:
.IB one   two
text
.br
single eol blank:
.IB one two 
text
.br
double eol blank:
.IB one two  
text
.br
triple eol blank:
.IB one two   
text
.br
standard quoted:
.IB "one" "two"
text
.br
quoted quotes:
.IB "one""one" """two"""
text
.br
quoted whitespace:
.IB "one one" "two two"
text
.br
escaped 'e' characters:
.IB "one \e one" "\e"
text
.br
escaped backslash before blank:
.IB "one\\ one" "\\ "
text
.br
escaped backslash before 'e' character:
.IB "one\\eone" "\\e"
text
.br
double inter-argument space:
.IB "one one"  "two two"
text
.br
triple inter-argument space:
.IB "one one"   "two two"
text
.br
missing inter-argument space:
.IB "one one"two\ two
text
.br
single eol blank:
.IB "one one" "two two" 
text
.br
double eol blank:
.IB "one one" "two two"  
text
.br
triple eol blank:
.IB "one one" "two two"   
text
.br
.\" Disabled for now because mandoc man(7) seems to
.\" mishandle trailing blanks in arguments,
.\" but that really isn't urgent to fix.
.ig
trailing blanks in arguments:
.IB "one " "two "
text
.br
..
unterminated quotes:
.IB "one
text
.br
.IB one "two
text
.br
.ig
single trailing blank in unterminated quotes:
.IB "one 
text
.br
.IB one "two 
text
.br
double trailing blank in unterminated quotes:
.IB "one  
text
.br
.IB one "two  
text
.br
..
tab after macro:
.IB     one two
text
.br
escape sequence after macro:
.IB\(lqone two
text
.br
backslash at eol:
.IB one two\
@


1.4
log
@churn related to the new style message about RCS ids
@
text
@d1 2
a2 1
.TH ARGS-MAN 1 "November 19, 2014" OpenBSD
@


1.3
log
@comment out non-working parts of the test with .ig rather than \",
this is not supposed to test whitespace at the end of comments;
noticed by bluhm@@ who sent a different patch
@
text
@d1 1
a1 1
.TH ARGS-MAN 1 "November 19, 2014"
@


1.2
log
@Escape sequences terminate high-level macro names, and when doing so,
they are ignored, just in the same way as for request names
and for low-level macro names.
This also cures a warning in the pod2man(1) preamble.
@
text
@d93 9
a101 4
.\"trailing blanks in arguments:
.\"IB "one " "two "
.\"text
.\"br
d104 2
d109 16
a124 10
.\"single trailing blank in unterminated quotes:
.\"IB "one 
.\"IB one "two 
.\"text
.\"br
.\"double trailing blank in unterminated quotes:
.\"IB "one  
.\"IB one "two  
.\"text
.\"br
@


1.1
log
@Unify roff macro argument parsing (in roff.c, roff_userdef()) and man macro
argument parsing (in man_argv.c, man_args()), both having different bugs,
to use one common macro argument parser (in mandoc.c, mandoc_getarg()),
because from the point of view of roff, man macros are just roff macros,
hence their arguments are parsed in exactly the same way.

While doing so, fix these bugs:
 * Escaped blanks (i.e. those preceded by an odd number of backslashes)
   were mishandled as argument separators in unquoted arguments to
   user-defined roff macros.
 * Unescaped blanks preceded by an even number of backslashes were not
   recognized as argument separators in unquoted arguments to man macros.
 * Escaped backslashes (i.e. pairs of backslashes) were not reduced
   to single backslashes both in unquoted and quoted arguments both
   to user-defined roff macros and to man macros.
 * Escaped quotes (i.e. pairs of quotes inside quoted arguments) were
   not reduced to single quotes in man macros.

OK kristaps@@

Note that mdoc macro argument parsing is yet another beast for no good
reason and is probably afflicted by similar bugs.  But i don't attempt
to fix that right now because it is intricately entangled with lots of
unrelated high-level mdoc(7) functionality, like delimiter handling and
column list phrase handling.  Disentagling that would waste too much
time now.
@
text
@d1 1
a1 1
.TH ARGS-MAN 1 "January 1, 2011"
d112 8
@

