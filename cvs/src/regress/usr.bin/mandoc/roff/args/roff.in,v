head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.2
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.12
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.10
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.8
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2017.07.04.14.53.26;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	b0KXfVBm69j6HJWE;

1.4
date	2017.06.17.22.46.26;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	cZz8ExRoPNYxAmqE;

1.3
date	2016.12.07.23.08.07;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	xZYvvYyeSWcpitMu;

1.2
date	2015.02.21.14.46.33;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	ANhezdEKR3pAmsQ7;

1.1
date	2011.01.03.22.27.21;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.TH ARGS-ROFF 1 "February 21, 2015"
.SH NAME
args-roff - arguments to roff macros
.SH DESCRIPTION
.de test
.BI (\\$1) "(\\$2)"
.br
..
arguments containing quotes:
.test a"b a"b
.de test
(\\$1) (\\$2)
.br
..
standard unquoted:
.test one two
escaped blanks:
.test one\ one two\ two
escaped 'e' character:
.test one\eone two
escaped backslash before blank:
.test one\\ two
escaped backslash before 'e' character:
.test one\\e two
double inter-argument space:
.test one  two
triple inter-argument space:
.test one   two
single eol blank:
.test one two 
double eol blank:
.test one two  
triple eol blank:
.test one two   
standard quoted:
.test "one" "two"
quoted quotes:
.test "one""one" """two"""
quoted whitespace:
.test "one one" "two two"
escaped 'e' characters:
.test "one \e one" "\e"
escaped backslash before blank:
.test "one\\ one" "\\ "
escaped backslash before 'e' character:
.test "one\\eone" "\\e"
double inter-argument space:
.test "one one"  "two two"
triple inter-argument space:
.test "one one"   "two two"
missing inter-argument space:
.test "one one"two\ two
single eol blank:
.test "one one" "two two" 
double eol blank:
.test "one one" "two two"  
triple eol blank:
.test "one one" "two two"   
trailing blanks in arguments:
.test "one " "two "
unterminated quotes:
.test "one
.test one "two
single trailing blank in unterminated quotes:
.test "one 
.test one "two 
double trailing blank in unterminated quotes:
.test "one  
.test one "two  
backslash at eol:
.test one two\
@


1.4
log
@churn related to the new style message about RCS ids
@
text
@d1 2
a2 1
.TH ARGS-ROFF 1 "February 21, 2015" OpenBSD
@


1.3
log
@enable commented parts of the test, they seem to work now
@
text
@d1 1
a1 1
.TH ARGS-ROFF 1 "February 21, 2015"
@


1.2
log
@Escape quotes when expanding macro arguments.
This fixes a bug naddy@@ found in plan9/rc(1).
@
text
@d62 1
a62 1
.\"test "one
d65 1
a65 1
.\"test "one 
d68 1
a68 1
.\"test "one  
@


1.1
log
@Unify roff macro argument parsing (in roff.c, roff_userdef()) and man macro
argument parsing (in man_argv.c, man_args()), both having different bugs,
to use one common macro argument parser (in mandoc.c, mandoc_getarg()),
because from the point of view of roff, man macros are just roff macros,
hence their arguments are parsed in exactly the same way.

While doing so, fix these bugs:
 * Escaped blanks (i.e. those preceded by an odd number of backslashes)
   were mishandled as argument separators in unquoted arguments to
   user-defined roff macros.
 * Unescaped blanks preceded by an even number of backslashes were not
   recognized as argument separators in unquoted arguments to man macros.
 * Escaped backslashes (i.e. pairs of backslashes) were not reduced
   to single backslashes both in unquoted and quoted arguments both
   to user-defined roff macros and to man macros.
 * Escaped quotes (i.e. pairs of quotes inside quoted arguments) were
   not reduced to single quotes in man macros.

OK kristaps@@

Note that mdoc macro argument parsing is yet another beast for no good
reason and is probably afflicted by similar bugs.  But i don't attempt
to fix that right now because it is intricately entangled with lots of
unrelated high-level mdoc(7) functionality, like delimiter handling and
column list phrase handling.  Disentagling that would waste too much
time now.
@
text
@d1 1
a1 1
.TH ARGS-ROFF 1 "January 1, 2011"
d5 6
@

