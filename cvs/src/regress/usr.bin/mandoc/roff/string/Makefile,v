head	1.7;
access;
symbols
	OPENBSD_6_1:1.6.0.14
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.10
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.8
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.6
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.12
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.8
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4;
locks; strict;
comment	@# @;


1.7
date	2017.06.18.17.35.40;	author schwarze;	state Exp;
branches;
next	1.6;
commitid	8HibBVlKkTGWZtha;

1.6
date	2014.07.06.19.08.57;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	rolX8OitNNoUBJoD;

1.5
date	2011.11.17.16.28.46;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2011.01.10.23.53.32;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.01.21.14.09;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.09.23.01.18;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.09.20.56.30;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Implement appending to standard man(7) and mdoc(7) macros with .am.

With roff_getstrn(), provide finer control which definitions
can be used for what:
* All definitions can be used for .if d tests and .am appending.
* User-defined for \* expansion, .dei expansion, and macro calling.
* Predefined for \* expansion.
* Standard macros, original or renamed, for macro calling.

Several related improvements while here:
* Do not return string table entries that have explicitly been removed.
* Do not create a rentab entry when trying to rename a non-existent macro.
* Clear an existing rentab entry when the external interface
roff_setstr() is called with its name.
* Avoid trailing blanks in macro lines generated from renamed
and from aliased macros.
* Delete the duplicate __m*_reserved[] tables, just use roff_name[].
@
text
@# $OpenBSD: Makefile,v 1.6 2014/07/06 19:08:57 schwarze Exp $

REGRESS_TARGETS	 = escape infinite name std zerolength
LINT_TARGETS	 = name std

# The infinite test fails badly with groff-1.20.1:
# It fails to print the following text.

SKIP_GROFF	?= infinite

# Groff can expand standard macros as strings, but mandoc cannot.

SKIP_GROFF	+= std

.include <bsd.regress.mk>
@


1.6
log
@Clean up messages related to plain text and to escape sequences.
* Mention invalid escape sequences and string names, and fallbacks.
* Hierarchical naming.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2011/11/17 16:28:46 schwarze Exp $
d3 2
a4 2
REGRESS_TARGETS=escape infinite zerolength name
LINT_TARGETS = name
d9 5
a13 1
SKIP_GROFF ?= infinite
@


1.5
log
@Complete overhaul of the mandoc(1) test suite.
* Test the recently introduced -Tman output mode, too.
* Specify date and OS arguments in all tests.
* Remove the kludge of sed(1)ing away the page footer lines.
* New make(1) variables SKIP_TMAN, SKIP_GROFF.
* Drop obsolete, clumsy make(1) variable GROFF_TARGETS.
* Delete obsolete mdoc/Bl/E*.sh error reporting tests.
* Silence char/N/basic.
* New targets:
- ascii, ascii-clean - to run -Tascii tests only
- tman, tman-clean - to run the new -Tman tests only
- obj-clean - maintainer only, needed before groff-clean and groff
- groff-clean - maintainer only, affects checked-in files
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2011/01/10 23:53:32 schwarze Exp $
d4 1
@


1.4
log
@Refactoring in preparation for .rm support:
Unify parsing of names given as roff request arguments into a new
function roff_getname(), which is rather different from the parsing
function for normal arguments, mandoc_getarg(), because names cannot
be quoted and cannot contain whitespace or escaped characters.
The new function now throws an ERROR when finding escaped characters
in a name.
"I'm fine with this." kristaps@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2011/01/01 21:14:09 schwarze Exp $
a3 1
GROFF_TARGETS=escape zerolength name
d7 2
@


1.3
log
@test handling of zero-length user-defined strings
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2010/12/09 23:01:18 schwarze Exp $
d3 2
a4 2
REGRESS_TARGETS=escape infinite zerolength
GROFF_TARGETS=escape zerolength
@


1.2
log
@Abort endless loops during roff macro and string expansion.
For now, use the simplest conceivable approach, like groff does:
Just a fixed, ugly input stack limit.
Kristaps@@ agrees.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2010/12/09 20:56:30 schwarze Exp $
d3 5
a7 1
REGRESS_TARGETS=escape infinite
@


1.1
log
@Roff only interpolates \* strings when the leading backslash is not escaped.
Kristaps@@ agrees with the idea, even though he didn't review the final patch.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2010/04/25 17:35:31 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS=escape
@

