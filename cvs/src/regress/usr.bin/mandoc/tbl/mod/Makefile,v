head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	schwarze_20150129:1.1.1.1
	schwarze:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2017.06.27.19.51.28;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	hf6gheSH5FGfZBbp;

1.4
date	2017.06.08.18.11.15;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	iJqHiCg2x8ufqICJ;

1.3
date	2017.05.01.20.53.58;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	PGTJ06Z83SZXcUuO;

1.2
date	2015.02.10.11.02.19;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	hGY7n6Yi9hW0eo23;

1.1
date	2015.01.29.23.24.24;	author schwarze;	state Exp;
branches
	1.1.1.1;
next	;
commitid	xWLfFZ2zRFexPVhn;

1.1.1.1
date	2015.01.29.23.24.24;	author schwarze;	state Exp;
branches;
next	;
commitid	xWLfFZ2zRFexPVhn;


desc
@@


1.5
log
@test inter-column spacing
@
text
@# $OpenBSD: Makefile,v 1.4 2017/06/08 18:11:15 schwarze Exp $

REGRESS_TARGETS	 = badfont expand expand-toowide font misalign spacing width
LINT_TARGETS	 = badfont font

# groff-1.22.3 defects:
# - The "f" font modifier swallows a following newline character.
# - When space is insufficient (on either side) for properly aligning
#   a number, GNU tbl(1) moves the number too much to the right,
#   overflowing the column, even if space would be sufficient without
#   left padding.

SKIP_GROFF	 = badfont misalign

.include <bsd.regress.mk>
@


1.4
log
@Implement w layout specifier (minimum column width).
Improve width calculation of text blocks.
Reduces the groff/mandoc diff in Base+Xenocara by about 800 lines.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2017/05/01 20:53:58 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS	 = badfont expand expand-toowide font misalign width
@


1.3
log
@When trying to expand some columns in a table where the sum of the
widths of the remaining columns is already wider than the line
length, underflowing size_t and dying from ENOMEM is the wrong plan.
Instead, simply refrain from expanding anything in such a situation,
avoiding a crash that tb@@ found with afl.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2015/02/10 11:02:19 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS	 = badfont expand expand-toowide font misalign
@


1.2
log
@Do not read past the end of the buffer if an "f" layout font modifier
is followed by the end of the input line instead of a font specifier.
Found by jsg@@ with afl, test case #591.

While here, improve functionality as well:
* There is no "r" font modifier.
* Font specifiers (as opposed to font modifiers) are case sensitive.
* One-character font specifiers require trailing whitespace.
* Ignore parenthised and two-letter font specifiers.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2015/01/29 23:24:24 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS	 = badfont expand font misalign
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2015/01/28 17:30:37 schwarze Exp $
d3 2
a4 1
REGRESS_TARGETS	 = expand font misalign
d6 2
a7 1
# groff-1.22.3 defect:
d13 1
a13 1
SKIP_GROFF	 = misalign
@


1.1.1.1
log
@reorg tbl(7) test suite
@
text
@@
