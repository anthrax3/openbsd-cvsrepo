head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.14
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.10
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.8
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.6
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.6
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2014.06.20.18.27.51;	author schwarze;	state Exp;
branches;
next	1.8;
commitid	mLT3bl90uvOuwvq2;

1.8
date	2014.03.08.18.00.59;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2013.11.10.19.26.31;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2012.07.18.10.36.20;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.17.16.28.45;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.18.20.49.57;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.24.20.26.52;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.30.16.05.29;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2009.12.23.23.40.58;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Infrastructure for regression tests of mandoc messages.
Even though messages are not going to be as stable as formatted output,
that is, even though the *.out_lint files are expected to change now and then,
from now on, i want to be able to catch unintended changes in messages.
@
text
@# $OpenBSD: Makefile,v 1.8 2014/03/08 18:00:59 schwarze Exp $

SUBDIR = accent bar hyphen space unicode N

.include "../Makefile.sub"
.include <bsd.subdir.mk>
@


1.8
log
@Test handling of combining and non-combining accents
for the ASCII and UTF-8 output modes.
Related to mandoc/chars.in rev. 1.21.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2013/11/10 19:26:31 schwarze Exp $
d5 1
a5 2
ascii groff groff-clean obj-clean tman: _SUBDIRUSE

@


1.7
log
@basic tests for the \[uXXXX] escape sequence
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2012/07/18 10:36:20 schwarze Exp $
d3 1
a3 1
SUBDIR = bar hyphen space unicode N
@


1.6
log
@The mdoc(7) \*(Ba predefined string actually forces roman font;
that's stupid because it may break enclosing font changes,
but let's do the same for groff bug compatibility.

--> Never use \*(Ba, use just plain "|"! <--

Also, predefined strings are already expanded by the roff(7) parser,
so the mdoc(7) parser has to look for the expanded string.

Formatting improvements in ksh(1), less(1), atan2(3),
hostapd.conf(5), snmpd.conf(5), and mknod(8).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2011/11/17 16:28:45 schwarze Exp $
d3 1
a3 1
SUBDIR = hyphen bar space N
@


1.5
log
@Complete overhaul of the mandoc(1) test suite.
* Test the recently introduced -Tman output mode, too.
* Specify date and OS arguments in all tests.
* Remove the kludge of sed(1)ing away the page footer lines.
* New make(1) variables SKIP_TMAN, SKIP_GROFF.
* Drop obsolete, clumsy make(1) variable GROFF_TARGETS.
* Delete obsolete mdoc/Bl/E*.sh error reporting tests.
* Silence char/N/basic.
* New targets:
- ascii, ascii-clean - to run -Tascii tests only
- tman, tman-clean - to run the new -Tman tests only
- obj-clean - maintainer only, needed before groff-clean and groff
- groff-clean - maintainer only, affects checked-in files
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2011/09/18 20:49:57 schwarze Exp $
d3 1
a3 1
SUBDIR+= hyphen space N
@


1.4
log
@check whether breakable hyphens
1) are formatted correctly (normal, bold or underlined)
2) actually break the line

test cases fixed by term.c rev. 1.60
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2011/07/24 20:26:52 schwarze Exp $
d5 1
a5 1
groff: _SUBDIRUSE
@


1.3
log
@Theo reported that make cleandir deleted too much, triggering this cleanup:

Since quite some time, the groff output files are checked into CVS.
* thus, no longer provide a "groff-clean" target to delete them
* from official targets, no longer call the "groff" target generating them
* do not reimplement "clean" and "cleandir", simply use the official targets
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2011/01/30 16:05:29 schwarze Exp $
d3 1
a3 1
SUBDIR+= space N
@


1.2
log
@Implement the \N'number' (numbered character) roff escape sequence.
Don't use it in new manuals, it is inherently non-portable, but we
need it for backward-compatibility with existing manuals, for example
in Xenocara driver pages.
ok kristaps@@ matthieu@@ jmc@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2009/12/23 23:40:58 schwarze Exp $
d5 1
a5 1
groff groff-clean: _SUBDIRUSE
@


1.1
log
@regression test for non-breaking space (\~);
fails with 1.9.13, succeeds with 1.9.14
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2009/10/28 03:20:42 schwarze Exp $
d3 1
a3 1
SUBDIR+= space
@

