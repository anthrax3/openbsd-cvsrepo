head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.12
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2014.12.19.04.57.11;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	bjUOzumNjzY2mijc;

1.3
date	2014.10.29.03.39.26;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	Qnj97pmtXpKf1Iri;

1.2
date	2014.10.28.02.49.48;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	rG053fgO7c4o4wul;

1.1
date	2013.11.10.19.26.31;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Rewrite the low-level UTF-8 parser from scratch.
It accepted invalid byte sequences like 0xc080-c1bf, 0xe08080-e09fbf,
0xeda080-edbfbf, and 0xf0808080-f08fbfbf, produced valid roff Unicode
escape sequences from them, and the algorithm contained strong
defenses against any attempt to fix it.

This cures an assertion failure in the terminal formatter caused
by sneaking in ASCII 0x08 (backspace) by "encoding" it as an (invalid)
multibyte UTF-8 sequence, found by jsg@@ with afl.

As a bonus, the new algorithm also reduces the code in the function
by about 20%.
@
text
@# $OpenBSD: Makefile,v 1.3 2014/10/29 03:39:26 schwarze Exp $

REGRESS_TARGETS  = ascii input invalid latin1 latin1diff
REGRESS_TARGETS += man mdoc named namediff nogroff
SKIP_ASCII 	 = man mdoc
UTF8_TARGETS	 = ${REGRESS_TARGETS}
HTML_TARGETS	 = ascii invalid latin1 latin1diff named namediff nogroff
LINT_TARGETS	 = input invalid

SKIP_GROFF	 = input nogroff
SKIP_GROFF_ASCII = latin1diff namediff

.include <bsd.regress.mk>
@


1.3
log
@test various recent improvements of special character rendering
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2014/10/28 02:49:48 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS  = ascii invalid latin1 latin1diff
d8 1
a8 1
LINT_TARGETS	 = invalid
d10 1
a10 1
SKIP_GROFF	 = nogroff
@


1.2
log
@some new and/or updated regression tests for -Tascii, -Tutf8
and -Thtml rendering of character escape sequences
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2013/11/10 19:26:31 schwarze Exp $
d3 6
a8 4
REGRESS_TARGETS = ascii latin1 latin1diff man mdoc named namediff
SKIP_ASCII = man mdoc
UTF8_TARGETS = ascii latin1 latin1diff man mdoc named namediff
HTML_TARGETS = ascii latin1 latin1diff named namediff
d10 1
@


1.1
log
@basic tests for the \[uXXXX] escape sequence
@
text
@d1 1
a1 1
# $OpenBSD$
d3 6
a8 3
REGRESS_TARGETS = man mdoc
SKIP_ASCII = ALL
UTF8_TARGETS = man mdoc
@

