head	1.4;
access;
symbols
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2017.07.04.14.53.23;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	b0KXfVBm69j6HJWE;

1.3
date	2017.06.14.20.56.42;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	TqZotKuvzxmoDeN5;

1.2
date	2014.10.29.03.39.26;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	Qnj97pmtXpKf1Iri;

1.1
date	2014.10.28.02.49.48;	author schwarze;	state Exp;
branches;
next	;
commitid	rG053fgO7c4o4wul;


desc
@@


1.4
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.TH CHAR-UNICODE-ASCII 1 "October 27, 2014"
.SH NAME
char-unicode-ascii \- Unicode characters in the ASCII range
.SH DESCRIPTION
.nf
BEGINTEST
\[u0022]\N'34'\(dq	QUOTATION MARK
\[u0023]\N'35'\(sh	NUMBER SIGN
\[u0024]\N'36'\(Do	DOLLAR SIGN
\[u0027]\N'39'\(aq	APOSTROPHE
\[u002B]\N'43'\(pl	PLUS SIGN
\N'45'\-	HYPHEN-MINUS
\N'46'\.	FULL STOP
\[u002F]\N'47'\(sl	SOLIDUS
\[u003D]\N'61'\(eq	EQUALS SIGN
\[u0040]\N'64'\(at	COMMERCIAL AT
\[u005B]\N'91'\(lB	LEFT SQUARE BRACKET
\[u005C]\N'92'\e\(rs	REVERSE SOLIDUS
\[u005D]\N'93'\(rB	RIGHT SQUARE BRACKET
\[u005E]\N'94'\(a^\(ha	CIRCUMFLEX ACCENT
\[u005F]\N'95'\(ul\(ru	LOW LINE
\[u0060]\N'96'\`\(ga	GRAVE ACCENT
\[u007B]\N'123'\(lC	LEFT CURLY BRACKET
\[u007C]\N'124'\(ba\(or	VERTICAL LINE
\[u007D]\N'125'\(rC	RIGHT CURLY BRACKET
\[u007E]\N'126'\(a~\(ti	TILDE
ENDTEST
.fi
@


1.3
log
@add the \(ru (0.5m baseline ruler) character escape sequence,
abused by mail/nmh; groff_char(7) confirms that this really exists
@
text
@d1 2
a2 1
.TH CHAR-UNICODE-ASCII 1 "October 27, 2014" OpenBSD
@


1.2
log
@test various recent improvements of special character rendering
@
text
@d21 1
a21 1
\[u005F]\N'95'\(ul	LOW LINE
@


1.1
log
@some new and/or updated regression tests for -Tascii, -Tutf8
and -Thtml rendering of character escape sequences
@
text
@a28 1
Note that groff does not handle \eC'u00XX' in the ASCII range.
@

