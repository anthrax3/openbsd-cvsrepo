head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.4
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.3.0.12
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2017.07.04.14.53.23;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	b0KXfVBm69j6HJWE;

1.3
date	2015.01.24.10.07.58;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	S11bl58eNymvqy0E;

1.2
date	2015.01.24.01.59.40;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	pxeX1HXdNjYPBYKE;

1.1
date	2014.08.18.16.26.13;	author schwarze;	state Exp;
branches;
next	;
commitid	ytc98H3JPc5RCcXi;


desc
@@


1.4
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.TH RS-BROKEN 1 "January 24, 2015"
.SH NAME
RS-broken \- indented blocks broken by other blocks
.SH DESCRIPTION
broken by PP:
.RS 2n
indented
.PP
still indented
.RE
broken by IP:
.RS
indented
.IP tag 6n
first line
.br
second line
.PP
still indented
.RE
broken by TP:
.RS
indented
.TP 6n
tag
first line
.br
second line
.PP
still indented
.RE
broken by HP:
.RS
indented
.HP 2n
Let's have a longer text here such that we can see the line break.
.PP
still indented
.RE
trailing PP:
.RS
indented
.PP
.RE
final text
@


1.3
log
@preserve .PP before .RE; effect found in audio/pms(1)
@
text
@d1 2
a2 1
.TH RS-BROKEN 1 "January 24, 2015" OpenBSD
@


1.2
log
@Support .RE with an argument; needed for audio/pms(1).
@
text
@d40 5
@


1.1
log
@When the first child of the node being validated gets deleted during
validation, man_node_unlink() switches to MAN_NEXT_CHILD.  After
that, we have to switch back to MAN_NEXT_SIBLING after completing
validation, or subsequent parsing would add content into an already
closed node, clobbering potentially existing children, causing
information loss and a memory leak.  Bug found by kristaps@@ with
valgrind in groff(7) on Mac OS X.

Note that the switch back must be conditional, for if the node being
validated itself gets deleted, we must *not* go to MAN_NEXT_SIBLING,
which would not only yield wrong results in general but also crash
in malformed manuals having an empty paragraph before the first .SH,
for example OpenBSD c++filt(1).

While here, add the missing <sys/types.h> as required before mandoc.h.
@
text
@d1 1
a1 1
.TH RS-BROKEN 1 "August 28, 2014" OpenBSD
d5 1
a5 1
initial text
d11 1
a11 1
back to normal
d13 26
a38 1
.P
@

