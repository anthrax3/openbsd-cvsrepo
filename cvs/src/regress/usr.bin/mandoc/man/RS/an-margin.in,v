head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2017.07.04.14.53.23;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	b0KXfVBm69j6HJWE;

1.1
date	2017.06.13.19.33.24;	author schwarze;	state Exp;
branches;
next	;
commitid	uvrReT81UJA15xDi;


desc
@@


1.2
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.TH RS-AN-MARGIN 1 "June 13, 2017"
.SH NAME
RS-an-margin \- reStructuredText peeks at an internal register
.SH DESCRIPTION
regular
text
.RS 0.0
zero
indent
\n[an-margin]
.RS 3.5
non-zero
indent
\n[an-margin]
.RE
back to
zero
indent
\n[an-margin]
.RE
back to
regular
text
\n[an-margin]
@


1.1
log
@Partial support for the \n[an-margin] number register.

Manuals autogenerated from reStructuredText are reckless enough
to peek at this non-portable, implementation-dependent, highly
groff-specific internal register - for no good reason, because the
man(7) language natively provides in a much simpler way what they
are trying to emulate here with much fragility.

A full implementation would be very hard because it would require
access to output-device-specific formatting data at the roff(7)
preprocessor stage, which mandoc doesn't support at all.
So hardcode a few magic numbers as reStructuredText expects them
for terminal output.  For other output modes (like HTML), code using
this register is utterly broken anyway.
@
text
@d1 2
a2 1
.TH RS-AN-MARGIN 1 "June 13, 2017" OpenBSD
@

