head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.6.0.8
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3;
locks; strict;
comment	@# @;


1.8
date	2017.03.08.22.53.35;	author schwarze;	state Exp;
branches;
next	1.7;
commitid	S0sHiOvvLc7ECRCI;

1.7
date	2017.03.05.19.59.25;	author schwarze;	state Exp;
branches;
next	1.6;
commitid	oe0SPH5Gl3TsCzFo;

1.6
date	2015.02.16.19.02.32;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	FIU2ZPmmtKgDK48N;

1.5
date	2014.11.28.18.07.38;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	FLjJT6vAqGK0xVjM;

1.4
date	2014.08.14.02.00.53;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	pqgg86JpQ4OXDxJ3;

1.3
date	2014.07.02.08.03.57;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	6YAyJvjUGZHqlyiq;

1.2
date	2014.06.20.22.58.41;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	ktgkM223FL3EC6E8;

1.1
date	2014.06.20.18.32.51;	author schwarze;	state Exp;
branches;
next	;
commitid	jjzTl6WbjEdf57ey;


desc
@@


1.8
log
@Now that markdown output is tested for almost everything, test all
input files in -T markdown output mode by default and only mark
those files with SKIP_MARKDOWN that are not to be tested.
Much easier to read, and almost minus 40 lines of Makefile code.
@
text
@# $OpenBSD: Makefile,v 1.7 2017/03/05 19:59:25 schwarze Exp $

REGRESS_TARGETS	 = badsec case dupe fourargs late
REGRESS_TARGETS	+= missing noarg nobody nosec order
LINT_TARGETS	 = badsec case dupe fourargs late
LINT_TARGETS	+= missing noarg nobody nosec order

SKIP_GROFF	 = badsec nobody
SKIP_ASCII	 = badsec
SKIP_MARKDOWN	?= badsec

# When the section is missing from the man(7) .TH title line,
# empty parentheses are shown in the page header.
# When the section is missing from the mdoc(7) .Dt title line,
# no empty parentheses are shown in the page header.
# Hence, there is no bug-compatible translation from mdoc(7)
# to man(7) for this case.  That's not mandoc(1)'s fault.

SKIP_TMAN	 = fourargs late missing noarg nosec

.include <bsd.regress.mk>
@


1.7
log
@first batch of -T markdown tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2015/02/16 19:02:32 schwarze Exp $
a6 2
MARKDOWN_TARGETS  = case dupe fourargs late
MARKDOWN_TARGETS += missing noarg nobody nosec order
d10 1
@


1.6
log
@clean up post_dt() validation function;
improved diagnostics, minus six lines of code
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2014/11/28 18:07:38 schwarze Exp $
d7 2
@


1.5
log
@Drop useless architecture table.  Validating architecture names
is a job for makewhatis(8)/mandoc.db(5), not for the parser.
Removes 150 lines from source files and 4k (1%) from the binary.
Bloat found by deraadt@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/08/14 02:00:53 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS	 = badsec case dupe late
d5 1
a5 1
LINT_TARGETS	 = badsec case dupe late
d18 1
a18 1
SKIP_TMAN	 = late missing noarg nosec
@


1.4
log
@new regression tests collected during recent work
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/07/02 08:03:57 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS	 = badarch badsec case dupe late
d5 1
a5 1
LINT_TARGETS	 = badarch badsec case dupe late
d8 2
a9 2
SKIP_GROFF	 = badarch badsec nobody
SKIP_ASCII	 = badarch badsec
@


1.3
log
@move test to the right directory
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2014/06/20 22:58:41 schwarze Exp $
d3 4
a6 4
REGRESS_TARGETS	 = case badsec badarch nodate baddate
REGRESS_TARGETS	+= noos order dupe nobody lateos
LINT_TARGETS	 = case badsec badarch nodate baddate
LINT_TARGETS	+= noos order dupe nobody lateos
d8 11
a18 2
SKIP_GROFF	 = badsec badarch nodate baddate noos nobody
SKIP_ASCII	 = badsec badarch nodate baddate noos
@


1.2
log
@As suggested by jmc@@, only include line and column numbers into messages
when they are meaningful, to avoid confusing stuff like this:
$ mandoc /dev/null
mandoc: /dev/null:0:1: FATAL: not a manual
Instead, just say:
mandoc: /dev/null: FATAL: not a manual

Another example this applies to is documents having a prologue,
but lacking a body.  Do not throw a FATAL error for these; instead,
issue a warning and show the empty document, in the man(7) case with
the same amount of blank lines as groff does.  Also downgrade mdoc(7)
documents having content before the first .Sh from FATAL to WARNING.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2014/06/20 18:32:51 schwarze Exp $
d4 1
a4 1
REGRESS_TARGETS	+= noos order dupe nobody lateos befSh
d6 1
a6 1
LINT_TARGETS	+= noos order dupe nobody lateos befSh
d8 2
a9 2
SKIP_GROFF = badsec badarch nodate baddate noos nobody befSh
SKIP_ASCII = badsec badarch nodate baddate noos befSh
@


1.1
log
@regression tests for prologue warnings
@
text
@d1 1
a1 1
# $OpenBSD$
d3 7
a9 4
REGRESS_TARGETS = case badsec badarch nodate baddate noos order dupe lateos
LINT_TARGETS = case badsec badarch nodate baddate noos order dupe lateos
SKIP_GROFF = badsec badarch nodate baddate noos
SKIP_ASCII = badsec badarch nodate baddate noos
@

