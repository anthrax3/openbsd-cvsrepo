head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.10
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2017.07.04.14.53.25;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	b0KXfVBm69j6HJWE;

1.4
date	2017.06.25.12.48.57;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	sEarNP5yvw5NJVzM;

1.3
date	2017.06.17.22.46.25;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	cZz8ExRoPNYxAmqE;

1.2
date	2017.06.11.19.48.27;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	Ja7YNtdzMnyr3Ti7;

1.1
date	2014.06.20.22.58.41;	author schwarze;	state Exp;
branches;
next	;
commitid	ktgkM223FL3EC6E8;


desc
@@


1.5
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@mandoc: nobody.in: WARNING: no document body
@


1.4
log
@cope with changes in BASE messages
@
text
@a0 3
mandoc: nobody.in:3:5: BASE: operating system explicitly specified: Os OpenBSD (OpenBSD)
mandoc: nobody.in:1:5: BASE: Mdocdate missing: Dd June (OpenBSD)
mandoc: nobody.in: BASE: RCS id missing: (OpenBSD)
@


1.3
log
@churn related to the new style message about RCS ids
@
text
@d1 3
a3 2
mandoc: nobody.in:1:5: STYLE: Mdocdate missing: Dd June
mandoc: nobody.in: STYLE: RCS id missing
@


1.2
log
@churn caused by the new Mdocdate messages, no easy way to avoid this :(
@
text
@d2 1
@


1.1
log
@As suggested by jmc@@, only include line and column numbers into messages
when they are meaningful, to avoid confusing stuff like this:
$ mandoc /dev/null
mandoc: /dev/null:0:1: FATAL: not a manual
Instead, just say:
mandoc: /dev/null: FATAL: not a manual

Another example this applies to is documents having a prologue,
but lacking a body.  Do not throw a FATAL error for these; instead,
issue a warning and show the empty document, in the man(7) case with
the same amount of blank lines as groff does.  Also downgrade mdoc(7)
documents having content before the first .Sh from FATAL to WARNING.
@
text
@d1 1
@

