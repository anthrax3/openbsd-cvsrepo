head	1.39;
access;
symbols
	OPENBSD_6_2_BASE:1.39
	OPENBSD_6_1:1.37.0.4
	OPENBSD_6_1_BASE:1.37
	OPENBSD_6_0:1.29.0.4
	OPENBSD_6_0_BASE:1.29
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.28.0.6
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.4
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.23.0.4
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.15.0.4
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.2
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.2
	OPENBSD_5_0:1.7.0.4
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2;
locks; strict;
comment	@# @;


1.39
date	2017.07.16.17.53.29;	author schwarze;	state Exp;
branches;
next	1.38;
commitid	od5sO4mtAhazpp4s;

1.38
date	2017.06.29.15.21.46;	author schwarze;	state Exp;
branches;
next	1.37;
commitid	GIZSbEspTHFlNqWu;

1.37
date	2017.03.08.22.53.35;	author schwarze;	state Exp;
branches;
next	1.36;
commitid	S0sHiOvvLc7ECRCI;

1.36
date	2017.03.08.15.08.17;	author schwarze;	state Exp;
branches;
next	1.35;
commitid	tJ9SMPAe3XbNyfT1;

1.35
date	2017.03.08.14.45.33;	author schwarze;	state Exp;
branches;
next	1.34;
commitid	IAH4cvMDT5QLFL1l;

1.34
date	2017.03.07.15.31.18;	author schwarze;	state Exp;
branches;
next	1.33;
commitid	tUbpBWnuSHdX9D3n;

1.33
date	2017.03.05.19.59.25;	author schwarze;	state Exp;
branches;
next	1.32;
commitid	oe0SPH5Gl3TsCzFo;

1.32
date	2017.02.11.20.22.17;	author schwarze;	state Exp;
branches;
next	1.31;
commitid	ivIhpwuH93gYPo1z;

1.31
date	2016.10.17.19.00.16;	author schwarze;	state Exp;
branches;
next	1.30;
commitid	3tr3UYKGzacVNoa9;

1.30
date	2016.08.20.14.43.39;	author schwarze;	state Exp;
branches;
next	1.29;
commitid	epkxu6NfanH6WQ2U;

1.29
date	2015.10.12.15.27.53;	author schwarze;	state Exp;
branches;
next	1.28;
commitid	VfpZTgiLsGboNvp1;

1.28
date	2015.02.06.02.04.35;	author schwarze;	state Exp;
branches;
next	1.27;
commitid	ZI6u3EG8xLvfZl5l;

1.27
date	2014.12.20.02.26.42;	author schwarze;	state Exp;
branches;
next	1.26;
commitid	uca6hEcrcxivtoqC;

1.26
date	2014.11.10.21.54.29;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	rgh5oUCZECxGjmVa;

1.25
date	2014.10.30.20.05.33;	author schwarze;	state Exp;
branches;
next	1.24;
commitid	0MyCvIn2JIoyqJkI;

1.24
date	2014.08.14.02.00.52;	author schwarze;	state Exp;
branches;
next	1.23;
commitid	pqgg86JpQ4OXDxJ3;

1.23
date	2014.07.07.21.35.42;	author schwarze;	state Exp;
branches;
next	1.22;
commitid	O2S43bw50KTGcriR;

1.22
date	2014.07.05.01.11.33;	author schwarze;	state Exp;
branches;
next	1.21;
commitid	xwzAVywNWdayFtqP;

1.21
date	2014.07.04.01.50.03;	author schwarze;	state Exp;
branches;
next	1.20;
commitid	Y8kkUfI8kBY4R2Vw;

1.20
date	2014.07.03.23.23.45;	author schwarze;	state Exp;
branches;
next	1.19;
commitid	r0fsz0DrjbQnVa67;

1.19
date	2014.07.02.13.10.15;	author schwarze;	state Exp;
branches;
next	1.18;
commitid	Ao0fphsjJ98jbj9D;

1.18
date	2014.07.02.11.42.56;	author schwarze;	state Exp;
branches;
next	1.17;
commitid	aUdrdtDM8sKwymS7;

1.17
date	2014.04.14.00.08.08;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2013.10.06.13.27.48;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2012.11.19.22.28.35;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2012.11.18.17.59.03;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2012.11.16.13.25.34;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2012.07.10.20.36.33;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2012.07.10.19.53.12;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2012.07.10.15.33.41;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2012.07.10.14.35.57;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2011.11.17.16.28.45;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2011.01.09.18.15.51;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2011.01.04.02.11.32;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.01.05.29.57;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2010.04.13.22.49.47;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.12.22.57.05;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2009.12.24.23.29.44;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2009.10.28.03.20.42;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.39
log
@test -diag -width and -inset -width
@
text
@# $OpenBSD: Makefile,v 1.38 2017/06/29 15:21:46 schwarze Exp $

REGRESS_TARGETS  = item inset diag ohang bullet dash enum hang tag
REGRESS_TARGETS += column column_nogroff colNoIt
REGRESS_TARGETS += extend nested offset secstart

REGRESS_TARGETS += notype multitype badargs
REGRESS_TARGETS += empty noIt emptyhead emptytag emptyitem multitag
REGRESS_TARGETS += bareIt bareTa unclosed break breakingIt breakingTa broken

UTF8_TARGETS	 = dash

LINT_TARGETS	 = inset diag column column_nogroff notype badargs tag
LINT_TARGETS	+= empty noIt emptyhead emptytag emptyitem
LINT_TARGETS	+= bareIt bareTa break breakingIt broken

# groff-mandoc differences:
# - groff allows enclosures to span Ta, mandoc does not

SKIP_GROFF ?= breakingTa

# groff-1.22.3 defects:
# - column list items with no args but multiple lines cause bogus breaks
# - in column lists, the tab macro cannot be a line macro
# - lists with missing or late type ruin indentation
# - empty lists ruin indentation and sometimes cause empty lines
# - breaking lists continue indefinitely
# - breaking items sometimes ruin indentation, sometimes abort processing
# - breaking a list aborts processing
# - empty -tag item heads lose the blank line and the indentation

SKIP_GROFF += column_nogroff notype empty emptytag break breakingIt broken

SKIP_TMAN ?= column colNoIt multitype multitag bareTa break breakingTa broken

# Fixing the indentation in long .IP and .TP tags in -man -Tascii
# caused a minor regression in -Tman that is not trivial to fix,
# so disable the related test for now.

SKIP_TMAN += tag

# Empty heads are still mishandled by -Tman.

SKIP_TMAN += column_nogroff emptyhead emptytag

# mandoc -T markdown still has issues with badly nested lists

SKIP_MARKDOWN ?= break

.include <bsd.regress.mk>
@


1.38
log
@warn about some non-portable idioms in .Bl -column;
triggered by a question from Yuri Pankov (illumos)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2017/03/08 22:53:35 schwarze Exp $
d13 1
a13 1
LINT_TARGETS	 = column column_nogroff notype badargs tag
@


1.37
log
@Now that markdown output is tested for almost everything, test all
input files in -T markdown output mode by default and only mark
those files with SKIP_MARKDOWN that are not to be tested.
Much easier to read, and almost minus 40 lines of Makefile code.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2017/03/08 15:08:17 schwarze Exp $
d4 2
a5 1
REGRESS_TARGETS += column colNoIt extend nested offset secstart
d13 1
a13 1
LINT_TARGETS	 = column notype badargs tag
d23 2
d32 1
a32 1
SKIP_GROFF += notype empty break breakingIt broken emptytag
d44 1
a44 1
SKIP_TMAN += emptyhead emptytag
@


1.36
log
@.Bl -column never gets blank lines between rows
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2017/03/08 14:45:33 schwarze Exp $
a15 6
MARKDOWN_TARGETS  = item inset diag ohang bullet dash enum hang tag
MARKDOWN_TARGETS += column colNoIt extend nested offset secstart
MARKDOWN_TARGETS += notype multitype badargs
MARKDOWN_TARGETS += empty noIt emptyhead emptytag emptyitem multitag
MARKDOWN_TARGETS += bareIt bareTa unclosed breakingIt breakingTa broken

d42 4
@


1.35
log
@enable -T markdown tests of filled displays and tagged lists
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2017/03/07 15:31:18 schwarze Exp $
d17 1
a17 1
MARKDOWN_TARGETS += extend nested offset secstart
@


1.34
log
@Escape blanks at the end of markdown lines
such that they don't look like output line breaks.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2017/03/05 19:59:25 schwarze Exp $
d16 5
a20 4
MARKDOWN_TARGETS  = item inset diag ohang bullet dash enum
MARKDOWN_TARGETS += notype multitype
MARKDOWN_TARGETS += empty emptyitem
MARKDOWN_TARGETS += bareIt bareTa unclosed breakingTa
@


1.33
log
@first batch of -T markdown tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2017/02/11 20:22:17 schwarze Exp $
d16 1
a16 1
MARKDOWN_TARGETS  = item diag ohang bullet dash enum
@


1.32
log
@new regression tests for mdoc_macro.c revs. 1.167-1.172
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2016/10/17 19:00:16 schwarze Exp $
d15 5
@


1.31
log
@test .Bl -tag without -width;
related to mandoc/mdoc_term.c rev. 1.231 and to textproc/groff-1.22.3p3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2016/08/20 14:43:39 schwarze Exp $
d8 1
a8 1
REGRESS_TARGETS += bareIt bareTa unclosed break breakingIt broken
d16 5
d29 1
a29 1
SKIP_GROFF ?= notype empty break breakingIt broken emptytag
d31 1
a31 1
SKIP_TMAN ?= column colNoIt multitype multitag bareTa break broken
@


1.30
log
@If a column list starts with implicit rows (that is, rows without .It)
and roff-level nodes (e.g. tbl or eqn) follow, don't run into an
assertion.  Instead, wrap the roff-level nodes in their own row.
Issue found by tb@@ with afl(1).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2015/10/12 15:27:53 schwarze Exp $
d12 1
a12 1
LINT_TARGETS	 = column notype badargs
@


1.29
log
@Use "-" rather than "\(hy" for the heads of .Bl -dash and -hyphen lists.
In UTF-8 output, that renders as ASCII HYPHEN-MINUS (U+002D)
rather than HYPHEN (U+2010), which looks better and matches groff.
In ASCII output, it makes no difference.
Suggested by naddy@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2015/02/06 02:04:35 schwarze Exp $
d4 1
a4 1
REGRESS_TARGETS += column extend nested offset secstart
d26 1
a26 1
SKIP_TMAN ?= column multitype multitag bareTa break broken
@


1.28
log
@better handle empty .Bd .Bl .D1 .Dl blocks
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2014/12/20 02:26:42 schwarze Exp $
d9 2
@


1.27
log
@Fix two issues causing a class of assertion failures found by jsg@@ with afl.
1) rew_sub(): Make sure REWIND_MORE is acted upon even when followed by
REWIND_NONE.  This prevents .It from ending up inside other children of .Bl.
2) blk_exp_close(): Only allow extension of .Bl when it has at least
one .It.  Otherwise, a broken child block could be moved in front of
the .Bl, effectively resulting in a .Bl that ended before it began.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2014/11/10 21:54:29 schwarze Exp $
d11 1
a11 1
LINT_TARGETS	+= noIt emptyhead emptytag emptyitem
@


1.26
log
@add required vertical spacing before lists that begin
at the beginning of the first item of an enclosing list
right at the beginning of a new section or subsection;
minibug reported by Steffen Nurpmeso <sdaoden at yandex dot com>
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2014/10/30 20:05:33 schwarze Exp $
d8 1
a8 1
REGRESS_TARGETS += bareIt bareTa unclosed break broken
d12 1
a12 1
LINT_TARGETS	+= bareIt bareTa break broken
d14 1
a14 1
# groff-1.22.2 defects:
d18 1
d22 1
a22 1
SKIP_GROFF ?= notype empty break broken emptytag
@


1.25
log
@Major bugsquashing with respect to -offset and -width:
1. Support specifying the .Bd and .Bl -offset as a macro default width;
while here, simplify the code handling the same for .Bl -width.
2. Correct handling of .Bl -offset arguments:  unlike .Bd -offset, the
arguments "left", "indent", and "indent-two" have no special meaning.
3. Fix the scaling of string length -offset and -width arguments in -Thtml.
Triggered by an incomplete documentation patch from bentley@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2014/08/14 02:00:52 schwarze Exp $
d4 1
a4 1
REGRESS_TARGETS += column extend nested offset
@


1.24
log
@new regression tests collected during recent work
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2014/07/07 21:35:42 schwarze Exp $
d4 1
a4 1
REGRESS_TARGETS += column extend nested
@


1.23
log
@Clean up ERROR messages related to document structure and macros:
Hierarchical naming and mention macro names in messages.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2014/07/05 01:11:33 schwarze Exp $
d8 1
a8 1
REGRESS_TARGETS += bareTa unclosed break broken
d10 1
a10 1
LINT_TARGETS	 = notype badargs
d12 1
a12 1
LINT_TARGETS	+= bareTa break broken
@


1.22
log
@Cleanup regarding -offset and -width:
* Bugfix: Last one wins, not first one.
* Fix .Bl -width without argument: it means 0n, so do not ignore it.
* Report macro names, argument names and fallbacks in related messages.
* Simplify: Garbage collect auxiliary variables in pre_bd() and pre_bl().
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2014/07/04 01:50:03 schwarze Exp $
d12 1
a12 1
LINT_TARGETS	+= break broken
@


1.21
log
@Clean up messages related to missing arguments.
* Do not warn about empty -column cells, they seem valid to me.
* Downgrade empty item and missing -std from ERROR to WARNING.
* Hierarchical naming.
* Descriptive, not imperative style.
* Mention macro names, argument names, and fallbacks.
* Garbage collect some unreachable code in post_it().
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2014/07/03 23:23:45 schwarze Exp $
d6 2
a7 2
REGRESS_TARGETS += notype multitype multitag
REGRESS_TARGETS += empty noIt emptyhead emptytag emptyitem
d10 3
a12 1
LINT_TARGETS	 = notype noIt emptyhead emptytag emptyitem break broken
@


1.20
log
@Fix formatting of empty .Bl -inset item heads.
Downgrade empty item heads from ERROR to WARNING.
Show the list type in the error message.
Choose better variable names for nodes in post_it().
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2014/07/02 13:10:15 schwarze Exp $
d6 2
a7 2
REGRESS_TARGETS += multitype multitag
REGRESS_TARGETS += empty noIt emptyhead emptytag
d10 1
a10 1
LINT_TARGETS	 = noIt emptyhead emptytag break broken
d13 1
d19 1
a19 1
SKIP_GROFF ?= empty break broken emptytag
@


1.19
log
@Disentangle the MANDOCERR_CHILD message, which reported three
completely different things, into three distinct messages.
Also mention the macro names we are talking about.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2014/07/02 11:42:56 schwarze Exp $
d6 3
a8 1
REGRESS_TARGETS += multitype multitag empty noIt bareTa unclosed break broken
d10 1
a10 1
LINT_TARGETS	 = noIt break broken
d12 1
a12 1
# groff-1.20.1 defects:
d16 1
d18 1
a18 1
SKIP_GROFF ?= empty break broken
d27 4
@


1.18
log
@Clean up warnings related to macros and nesting.
* Hierarchical naming of enum mandocerr items.
* Improve the wording to make it comprehensible.
* Mention the offending macro.
* Garbage collect one chunk of ancient, long unreachable code.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2014/04/14 00:08:08 schwarze Exp $
d8 1
a8 1
LINT_TARGETS	 = break broken
@


1.17
log
@When i committed man_term.c rev. 1.99, i forgot to adjust this test;
now i found the M in my tree...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2013/10/06 13:27:48 schwarze Exp $
d7 2
@


1.16
log
@If there is random stuff inside a .Bl block body before the first .It,
do not throw a FATAL error and do not die, but just throw a WARNING
and move the stuff out of the .Bl block.

This bug felt completely 2008-ish; meanwhile, such bugs from the
Kristaps-doesnt-like-syntax-errors-so-lets-just-give-up--Era
are becoming rare, but this was one of the last survivors.

Thanks to bentley@@ for reminding me to finally fix this.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2012/11/19 22:28:35 schwarze Exp $
d16 6
@


1.15
log
@Do not crash on stray .Ta macros found outside column lists.
Problem reported by jmc@@, thanks.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2012/11/18 17:59:03 schwarze Exp $
d6 1
a6 1
REGRESS_TARGETS += multitype multitag empty bareTa unclosed break broken
@


1.14
log
@Correct indentation for lists and displays inside lists.

Inspired by a diff from millert@@, but implemented rather
differently and with slightly better functionality.
In particular, this one respects -offset and -width
arguments found in the input file.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2012/11/16 13:25:34 schwarze Exp $
d6 1
a6 1
REGRESS_TARGETS += multitype multitag empty unclosed break broken
d15 1
a15 1
SKIP_TMAN ?= column multitype multitag break broken
@


1.13
log
@Fix a crash triggered by .Bl -tag .It Xo .El .Sh found by florian@@.

* When allocating a body end marker, copy the pointer to the normalized
block information from the body block, avoiding the risk of subsequent
null pointer derefence.
* When inserting the body end marker into the syntax tree, do not try to
copy that pointer from the parent block, because not being a direkt child
of the block it belongs to is the whole point of a body end marker.
* Even non-callable blocks (like Bd and Bl) can break other blocks;
when this happens, postpone closing them out in the usual way.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2012/07/10 20:36:33 schwarze Exp $
d15 1
a15 1
SKIP_TMAN ?= column nested multitype multitag break broken
@


1.12
log
@basic implementation of -Tman .Bl -tag
while here, do some minor outflags cleanup
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2012/07/10 19:53:12 schwarze Exp $
d6 1
a6 1
REGRESS_TARGETS+=multitype multitag empty unclosed
d8 4
a11 2
# groff-1.20.1 mishandles empty lists,
# ruining indentation and sometimes causing empty lines.
d13 1
a13 1
SKIP_GROFF ?= empty
d15 1
a15 1
SKIP_TMAN ?= column nested multitype multitag
@


1.11
log
@multiple fixes to -Tascii .HP rendering:
* do not add an excessive blank line before the block
* in literal mode, start a new line after the tag

getting this to work requires some general (print_man_node) fixes:
* in literal mode, break the output line at the end of each
input line, not just after those input lines ending in text
* but don't break it when there was no output on the line
* and adjust the margins after the .HP tag

these general fixes require an adjustment to -Tascii .TP rendering:
* set up NOBREAK mode before the body, not after the head

finally, based on all this, implement -Tman .Bl -hang in terms of .HP
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2012/07/10 15:33:41 schwarze Exp $
d13 1
a13 1
SKIP_TMAN ?= tag column extend nested multitype multitag empty
@


1.10
log
@Remove a hack that was intended for groff-1.15 bug compatibility:
When the width of a tag in .Bl -hang was exactly one character
shorter than the maximum length that would fit, the following text
would have a negative hang of one character (i.e., hang to the left).
That bug is no longer present in groff-1.21, so relax mandoc, too.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2012/07/10 14:35:57 schwarze Exp $
d13 1
a13 1
SKIP_TMAN ?= tag hang column extend nested multitype multitag empty
@


1.9
log
@* implement -Tman .Bl -item -inset -diag -ohang -dash -hyphen -enum .It
* fix -Tman .Bl -bullet .It
* adjust the -Tascii .Bl -bullet -dash -hyphen .It
default and minimum width to new groff standards,
it changed from 4n (in groff 1.15) to 2n (in groff 1.21)
* same for -Tascii -enum, it changed from 5n to 2n
* use -hang formatting for -Tascii -enum -width 2n
* for -Tascii -enum, the default is -width 3n
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2011/11/17 16:28:45 schwarze Exp $
a5 3
# mandoc still contains a compatibility hack with groff-1.15
# regarding hang list indentation.

d9 1
a9 1
# ruining indentation and sometimes cauisng empty lines.
d11 1
a11 1
SKIP_GROFF ?= hang empty
@


1.8
log
@Complete overhaul of the mandoc(1) test suite.
* Test the recently introduced -Tman output mode, too.
* Specify date and OS arguments in all tests.
* Remove the kludge of sed(1)ing away the page footer lines.
* New make(1) variables SKIP_TMAN, SKIP_GROFF.
* Drop obsolete, clumsy make(1) variable GROFF_TARGETS.
* Delete obsolete mdoc/Bl/E*.sh error reporting tests.
* Silence char/N/basic.
* New targets:
- ascii, ascii-clean - to run -Tascii tests only
- tman, tman-clean - to run the new -Tman tests only
- obj-clean - maintainer only, needed before groff-clean and groff
- groff-clean - maintainer only, affects checked-in files
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2011/01/09 18:15:51 schwarze Exp $
d3 2
a4 1
REGRESS_TARGETS=tag inset hang diag column extend nested
d16 1
a16 1
SKIP_TMAN ?= tag inset hang diag column extend nested multitype multitag empty
@


1.7
log
@check that lists lacking their end macro do not crash;
related to mdoc_macro.c rev. 1.59
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2011/01/04 02:11:32 schwarze Exp $
a3 1
GROFF_TARGETS=tag inset diag column extend nested
a8 1
GROFF_TARGETS+=multitype multitag unclosed
d13 3
a15 2
REGRESS_TARGETS+=EMULTILIST
REGRESS_SLOW_TARGETS=EMULTILIST
@


1.6
log
@some more tests regarding empty macros
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2010/07/01 05:29:57 schwarze Exp $
d9 2
a10 2
REGRESS_TARGETS+=multitype multitag empty
GROFF_TARGETS+=multitype multitag
@


1.5
log
@major update of the mandoc test suite:
* add various new and extend a few existing tests
* stop using Mdocdate to ease syncing with NetBSD
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2010/04/13 22:49:47 schwarze Exp $
d3 11
a13 2
REGRESS_TARGETS=tag inset hang diag column multitag extend nested multitype
GROFF_TARGETS=tag inset hang diag column multitag extend nested multitype
@


1.4
log
@test handling of multiple .It macros without intervening text;
related to term.c 1.29
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2010/04/12 22:57:05 schwarze Exp $
d3 2
a4 2
REGRESS_TARGETS=tag inset hang diag column multitag nested
GROFF_TARGETS=tag inset hang diag column multitag nested
d6 1
a6 1
REGRESS_TARGETS+=EMULTILIST ENOTYPE
a7 11

# broken:
# different rendering of bullet
# and different indentation
#REGRESS_TARGETS+=bullet
#GROFF_TARGETS+=bullet.out_ascii

# broken:
# different indentation
#REGRESS_TARGETS+=enum
#GROFF_TARGETS+=enum.out_ascii
@


1.3
log
@new test to check vertical spacing in nested lists,
related to mdoc_term.c rev. 1.74
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2009/12/24 23:29:44 schwarze Exp $
d3 2
a4 2
REGRESS_TARGETS=tag inset hang diag column nested
GROFF_TARGETS=tag inset hang diag column nested
@


1.2
log
@Regression test for .Bl -column;
mandoc 1.9.14 still fails this one, patch being sent to kristaps@@.

The groff .Bl -column spacing we are trying to follow is weird:
with less than 5 columns, groff puts 4 blanks between columns;
with exactly 5 columns, groff puts 3 blanks between columns;
with more than 5 columns, and also with more than 78 characters per line,
groff usually falls over and bites the dust - though the exact failures
look rather different in various cases, and a few cases even work...

No use trying to test anything for more than 5 columns, though.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2009/10/28 03:20:42 schwarze Exp $
d3 2
a4 2
REGRESS_TARGETS=tag inset hang diag column
GROFF_TARGETS=tag inset hang diag column
@


1.1
log
@Add the first batch of mandoc(1) regression tests, testing for a few bugs
fixed in 1.9.9 and some older, rather subtle issues in list displays.

Directory layout and naming scheme was chosen such that later inclusion
of tests for -man and -Thtml will not force us to rename everything,
even though the layout might still seem a bit sparse right now.
More tests will slowly be added while investigating and fixing issues.
@
text
@d1 1
a1 1
# $OpenBSD$
d3 2
a4 2
REGRESS_TARGETS=tag inset hang diag
GROFF_TARGETS=tag inset hang diag
@

