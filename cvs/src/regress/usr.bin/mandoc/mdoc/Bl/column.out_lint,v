head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.8
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4;
locks; strict;
comment	@# @;


1.6
date	2015.10.17.00.19.58;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	67CJSTzbNGkiWCoU;

1.5
date	2015.10.16.19.21.05;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	w9t8HInxZyZI655h;

1.4
date	2015.02.06.16.05.51;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	Bj9alpGWXCQILmH9;

1.3
date	2015.02.04.18.58.09;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	fjQt2d2WjsAKf1nR;

1.2
date	2014.12.13.13.13.26;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	RH8Jz9QDDr5L3VlD;

1.1
date	2014.08.14.02.00.52;	author schwarze;	state Exp;
branches;
next	;
commitid	pqgg86JpQ4OXDxJ3;


desc
@@


1.6
log
@Very tricky diff to fix macro interpretation and spacing around tabs
in .Bl -column; it took me more than a day to get this right.
Triggered by a loosely related bug report from tim@@.

The lesson for you is:  Use .Ta macros in .Bl -column, avoid tabs,
or you are in for surprises:  The last word before a tab is not
interpreted as a macro (unless there is a blank in between), the
first word after a tab isn't either (unless there is a blank in
between), and a blank after a tab causes a leading blank in the
respective output cell.  Yes, "blank", "tab", "blank tab" and "tab
blank" all have different semantics; if you write code relying on
that, good luck maintaining it afterwards...
@
text
@mandoc: column.in:71:2: WARNING: wrong number of cells: 2 columns, 1 cells
mandoc: column.in:74:2: WARNING: wrong number of cells: 2 columns, 4 cells
mandoc: column.in:75:2: WARNING: wrong number of cells: 2 columns, 5 cells
mandoc: column.in:103:18: WARNING: skipping -width argument: Bl -column
@


1.5
log
@test mixing of tabs with Ta
@
text
@d4 1
a4 1
mandoc: column.in:89:18: WARNING: skipping -width argument: Bl -column
@


1.4
log
@replace the last legacy generic message type, "argument count wrong",
by more specific messages, improving diagnostics for .cc .tr .Bl -column
@
text
@d4 1
a4 1
mandoc: column.in:78:18: WARNING: skipping -width argument: Bl -column
@


1.3
log
@fix column numbers of macro arguments in messages
@
text
@d1 3
a3 3
mandoc: column.in:71:2: ERROR: argument count wrong: columns == 2 (have 1)
mandoc: column.in:74:2: ERROR: argument count wrong: columns == 2 (have 4)
mandoc: column.in:75:2: ERROR: argument count wrong: columns == 2 (have 5)
@


1.2
log
@Fix a regression found by Carsten dot Kunze at arcor dot de:
Do not show bogus quotes when .Bl -column phrases are quoted.
@
text
@d4 1
a4 1
mandoc: column.in:78:25: WARNING: skipping -width argument: Bl -column
@


1.1
log
@new regression tests collected during recent work
@
text
@d1 4
a4 4
mandoc: column.in:67:2: ERROR: argument count wrong: columns == 2 (have 1)
mandoc: column.in:70:2: ERROR: argument count wrong: columns == 2 (have 4)
mandoc: column.in:71:2: ERROR: argument count wrong: columns == 2 (have 5)
mandoc: column.in:74:25: WARNING: skipping -width argument: Bl -column
@

