head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.16
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.12
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2017.07.04.14.53.24;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	b0KXfVBm69j6HJWE;

1.2
date	2013.12.24.19.10.34;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2013.12.24.16.01.15;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@.\" $OpenBSD$
.Dd $Mdocdate: July 4 2017 $
.Dt BK-INPUTLINES 1
.Os
.Sh NAME
.Nm Bk-inputlines
.Nd effect of input lines breaks on word keeps
.Sh SYNOPSIS
.Nm
.Ar x x x x x x x x x x x x x x x x x x x x x x x x x x x
.Bk -words
.Oo Oo No a Oc Oo No b Oc Oc Pq one line
.Ek
.Pp
.Nm
.Ar x x x x x x x x x x x x x x x x x x x x x x x x x x x
.Bk -words
.Oo
.Oo No a Oc Oo No b Oc Oc Pq "break after first Oo"
.Ek
.Pp
.Nm
.Ar x x x x x x x x x x x x x x x x x x x x x x x x x x x
.Bk -words
.Oo Oo
.No a Oc Oo b Oc Oc Pq "break after second Oo"
.Ek
.Pp
.Nm
.Ar x x x x x x x x x x x x x x x x x x x x x x x x x x x
.Bk -words
.Oo Oo No a
.Oc Oo No b Oc Oc Pq "break before first Oc"
.Ek
.Pp
.Nm
.Ar x x x x x x x x x x x x x x x x x x x x x x x x x x x
.Bk -words
.Oo Oo No a Oc
.Oo No b Oc Oc Pq "break after first Oc"
.Ek
.Pp
.Nm
.Ar x x x x x x x x x x x x x x x x x x x x x x x x x x x
.Bk -words
.Oo Oo No a Oc Oo
.No b Oc Oc Pq "break after third Oo"
.Ek
.Pp
.Nm
.Ar x x x x x x x x x x x x x x x x x x x x x x x x x x x x
.Bk -words
.Oo a No b Oc
.Ek
.Pp
.Nm
.Ar x x x x x x x x x x x x x x x x x x x x x x x x x x x x
.Bk -words
.Oo a
.No b Oc
.Ek
.Pp
.Nm
.Ar x x x x x x x x x x x x x x x x x x x x x x x x x x x x
.Bk -words
.Oo a Oc No b
.Ek
.Pp
.Nm
.Ar x x x x x x x x x x x x x x x x x x x x x x x x x x x x
.Bk -words
.Oo a Oc
.No b
.Ek
@


1.2
log
@When deciding whether two consecutive macros are on the same input line,
we have to compare the line where the first one *ends* (not where it begins)
to the line where the second one starts.
This fixes the bug that .Bk allowed output line breaks right after block
macros spanning more than one input line, even when the next macro follows
on the same line.
@
text
@d1 2
a2 1
.Dd December 24, 2010
d4 1
a4 1
.Os OpenBSD
@


1.1
log
@More .Bk tests to lessen the risk of upcoming work.
@
text
@a20 2
.\" XXX does not work yet
.ig
a34 1
..
@

