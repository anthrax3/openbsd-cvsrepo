head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.1.0.12
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2017.07.04.14.53.24;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	b0KXfVBm69j6HJWE;

1.4
date	2017.06.25.12.48.56;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	sEarNP5yvw5NJVzM;

1.3
date	2017.06.17.22.46.24;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	cZz8ExRoPNYxAmqE;

1.2
date	2017.06.11.19.48.26;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	Ja7YNtdzMnyr3Ti7;

1.1
date	2015.02.07.16.39.44;	author schwarze;	state Exp;
branches;
next	;
commitid	Qzl2n2ulv8PNdpCW;


desc
@@


1.5
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@mandoc: broken.in:11:2: ERROR: inserting missing end of block: Sh breaks Bk
mandoc: broken.in:10:2: WARNING: empty block: Bk
@


1.4
log
@cope with changes in BASE messages
@
text
@d1 2
a2 5
mandoc: broken.in:10:2: ERROR: inserting missing end of block: Sh breaks Bk
mandoc: broken.in:3:5: BASE: operating system explicitly specified: Os OpenBSD (OpenBSD)
mandoc: broken.in:1:5: BASE: Mdocdate missing: Dd February (OpenBSD)
mandoc: broken.in:9:2: WARNING: empty block: Bk
mandoc: broken.in: BASE: RCS id missing: (OpenBSD)
@


1.3
log
@churn related to the new style message about RCS ids
@
text
@d2 2
a3 1
mandoc: broken.in:1:5: STYLE: Mdocdate missing: Dd February
d5 1
a5 1
mandoc: broken.in: STYLE: RCS id missing
@


1.2
log
@churn caused by the new Mdocdate messages, no easy way to avoid this :(
@
text
@d4 1
@


1.1
log
@Closing a block validates it, which may end up deleting it,
so if we are in a loop over blocks, cleanly restart the loop
rather than risking use after free; found by jsg@@ with afl.
@
text
@d2 1
@

