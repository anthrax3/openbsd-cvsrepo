head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.6
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2017.03.08.22.53.35;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	S0sHiOvvLc7ECRCI;

1.4
date	2014.07.04.16.11.42;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	sgqZ9hnRM3L6yvgn;

1.3
date	2014.07.02.11.42.56;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	aUdrdtDM8sKwymS7;

1.2
date	2012.11.16.17.16.29;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2012.07.09.18.55.40;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Now that markdown output is tested for almost everything, test all
input files in -T markdown output mode by default and only mark
those files with SKIP_MARKDOWN that are not to be tested.
Much easier to read, and almost minus 40 lines of Makefile code.
@
text
@# $OpenBSD: Makefile,v 1.4 2014/07/04 16:11:42 schwarze Exp $

REGRESS_TARGETS	= nest multiargs badargs break broken
LINT_TARGETS	= multiargs badargs break broken

# mandoc -T markdown ignores .Bf, at least for now

SKIP_MARKDOWN ?= ALL

# groff-1.22.2 defects:
#  - If the first argument to .Bf is a bad one,
#    no block is opened at all and the .Ef causes another error.
#  - If a font block breaks another block,
#    fonts get mixed up when the other block finally ends.

SKIP_GROFF = badargs break

SKIP_TMAN = break broken

.include <bsd.regress.mk>
@


1.4
log
@Clean up messages regarding excess arguments:
* Downgrade ".Bf -emphasis Em" from FATAL to WARNING.
* Mention the macros, the arguments, and the fallbacks.
* Hierarchical naming.
Also fix the handling of excess .It head arguments in -Tman.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2014/07/02 11:42:56 schwarze Exp $
d5 4
@


1.3
log
@Clean up warnings related to macros and nesting.
* Hierarchical naming of enum mandocerr items.
* Improve the wording to make it comprehensible.
* Mention the offending macro.
* Garbage collect one chunk of ancient, long unreachable code.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2012/11/16 17:16:29 schwarze Exp $
d3 2
a4 2
REGRESS_TARGETS = nest break broken
LINT_TARGETS	= break broken
d6 3
a8 1
# groff-1.20.1 defect:
d12 1
a12 1
SKIP_GROFF = break
@


1.2
log
@Improve formatting of badly nested font blocks.
The basic idea is to already pop the font at the end marker
instead of allowing it to linger until the final end of the block.

This requires a few preliminaries:
* For each block, save a pointer to the previous font
  to be used in case the block breaks another and gets extended.
* That requires making node information writable during rendering.
* Now fonts may get popped in the wrong order; hence, after the stack
  has already been rewound further by some block that began earlier,
  ignore popping a font that was put on the stack later.
* To be able to exploit all this for font blocks, tie processing
  to their body, not their block, which is more logical anyway.

Triggered by florian@@ reporting vaguely similar issues with list blocks.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2012/07/09 18:55:40 schwarze Exp $
d4 1
@


1.1
log
@Implement -Tman .Bf.
To get the spacing right,
* avoid man(7) code line breaks at places where no spacing is allowed
* allow spacing right after .Sm on
* allow spacing after empty .Fl at the end of an input line
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2012/07/07 14:10:55 schwarze Exp $
d3 9
a11 1
REGRESS_TARGETS = nest
@

