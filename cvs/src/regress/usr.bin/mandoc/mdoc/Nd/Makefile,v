head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2017.03.08.22.53.35;	author schwarze;	state Exp;
branches;
next	1.6;
commitid	S0sHiOvvLc7ECRCI;

1.6
date	2017.03.05.19.59.26;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	oe0SPH5Gl3TsCzFo;

1.5
date	2015.02.11.13.37.31;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	VGYKVVAdlQgUdM8r;

1.4
date	2015.02.04.16.38.31;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	MoF7T4hAk1bvNz7U;

1.3
date	2013.10.06.22.45.13;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.17.16.28.45;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2011.02.05.18.19.12;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Now that markdown output is tested for almost everything, test all
input files in -T markdown output mode by default and only mark
those files with SKIP_MARKDOWN that are not to be tested.
Much easier to read, and almost minus 40 lines of Makefile code.
@
text
@# $OpenBSD: Makefile,v 1.6 2017/03/05 19:59:26 schwarze Exp $

REGRESS_TARGETS	 = broken hyph noarg par
LINT_TARGETS	 = broken noarg

SKIP_MARKDOWN	?= broken

.include <bsd.regress.mk>
@


1.6
log
@first batch of -T markdown tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2015/02/11 13:37:31 schwarze Exp $
d5 2
a6 1
MARKDOWN_TARGETS = hyph noarg par
@


1.5
log
@explicit blocks close out .Nd; fixing data structure corruption
eventually leading to NULL pointer access;
found by jsg@@ with afl, text case #455.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2015/02/04 16:38:31 schwarze Exp $
d5 1
@


1.4
log
@more specific .Nd diagnostics, allowing to get rid of enum check_lvl
and the respective argument of check_count()
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/10/06 22:45:13 schwarze Exp $
d3 2
a4 2
REGRESS_TARGETS	 = hyph noarg par
LINT_TARGETS	 = noarg
@


1.3
log
@We don't do hyphenation, but we allow breaking the line at hyphens that are
already there in the middle of words.  So far, we only allowed this on text
lines.  Now it turns out some macros allow this for their arguments, too,
in particular .Nd and most of the .%? citation macros.

Issue found by Franco Fichtner <franco at lastsummer dot de> while doing
systematic groff-mandoc comparisons in the DragonFly base system, THANKS!

While here, garbage collect two empty prevalidator function pointer lists
and sort a couple of function declarations.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2011/11/17 16:28:45 schwarze Exp $
d3 2
a4 1
REGRESS_TARGETS = noarg hyph
@


1.2
log
@Complete overhaul of the mandoc(1) test suite.
* Test the recently introduced -Tman output mode, too.
* Specify date and OS arguments in all tests.
* Remove the kludge of sed(1)ing away the page footer lines.
* New make(1) variables SKIP_TMAN, SKIP_GROFF.
* Drop obsolete, clumsy make(1) variable GROFF_TARGETS.
* Delete obsolete mdoc/Bl/E*.sh error reporting tests.
* Silence char/N/basic.
* New targets:
- ascii, ascii-clean - to run -Tascii tests only
- tman, tman-clean - to run the new -Tman tests only
- obj-clean - maintainer only, needed before groff-clean and groff
- groff-clean - maintainer only, affects checked-in files
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2011/02/05 18:19:12 schwarze Exp $
d3 1
a3 1
REGRESS_TARGETS=noarg
@


1.1
log
@some more tests found in my tree
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2009/12/24 23:29:44 schwarze Exp $
a3 1
GROFF_TARGETS=noarg
@

