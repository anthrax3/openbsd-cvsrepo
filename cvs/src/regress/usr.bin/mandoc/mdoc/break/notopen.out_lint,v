head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2017.07.04.14.53.26;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	b0KXfVBm69j6HJWE;

1.4
date	2017.06.25.12.48.58;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	sEarNP5yvw5NJVzM;

1.3
date	2017.06.17.22.46.26;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	cZz8ExRoPNYxAmqE;

1.2
date	2017.06.11.19.48.28;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	Ja7YNtdzMnyr3Ti7;

1.1
date	2016.08.20.17.58.09;	author schwarze;	state Exp;
branches;
next	;
commitid	ruds5O2o6F2jNWeX;


desc
@@


1.5
log
@Messages of the -Wbase level now print STYLE:.  Since this
causes horrible churn anyway, profit of the opportunity to stop
excessive testing, such that this is hopefully the last instance
of such churn.  Consistently use OpenBSD RCS tags, blank .Os,
blank fourth .TH argument, and Mdocdate like everywhere else.
Use -Ios=OpenBSD for platform-independent predictable output.
@
text
@mandoc: notopen.in:11:2: ERROR: skipping end of block that is not open: Pc
@


1.4
log
@cope with changes in BASE messages
@
text
@d1 1
a1 4
mandoc: notopen.in:10:2: ERROR: skipping end of block that is not open: Pc
mandoc: notopen.in:3:5: BASE: operating system explicitly specified: Os OpenBSD (OpenBSD)
mandoc: notopen.in:1:5: BASE: Mdocdate missing: Dd August (OpenBSD)
mandoc: notopen.in: BASE: RCS id missing: (OpenBSD)
@


1.3
log
@churn related to the new style message about RCS ids
@
text
@d2 3
a4 2
mandoc: notopen.in:1:5: STYLE: Mdocdate missing: Dd August
mandoc: notopen.in: STYLE: RCS id missing
@


1.2
log
@churn caused by the new Mdocdate messages, no easy way to avoid this :(
@
text
@d3 1
@


1.1
log
@When a mismatching end macro occurs while at least two nested blocks
are open, all except the innermost open block got a bogus MDOC_ENDED
marker, in some situations triggering segfaults down the road
which tb@@ found with afl(1).
Fix the logic error by figuring out up front whether an end macro
has a matching body, and if it hasn't, don't mark any blocks as broken.
@
text
@d2 1
@

