head	1.4;
access;
symbols
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2017.05.17.22.07.46;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	GFeLSCFl6TkN5Qfc;

1.3
date	2016.08.30.22.20.03;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	7v8nWmf1zaSbUjAK;

1.2
date	2016.08.04.09.18.53;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	18CMt9vISOauHgdQ;

1.1
date	2016.07.30.10.56.13;	author schwarze;	state Exp;
branches;
next	;
commitid	o23p1rq9Y9q750Ix;


desc
@@


1.4
log
@Stop testing the creation and the properties of empty databases.
They are about to be deprecated.
For the tests built on top of them,
use a database containing a single page instead.
@
text
@
>>> padipage
dbm_dump: name0 jumps from 0x28 to 0x3c
dbm_dump: sect0 jumps from 0x44 to 0x54
dbm_dump: desc0 jumps from 0x57 to 0x5a
dbm_dump: file0 jumps from 0x63 to 0x6c
dbm_dump: macros jumps from 0x7b to 0x8c

>>> padfpage
dbm_dump: name0 jumps from 0x28 to 0x44
dbm_dump: sect0 jumps from 0x54 to 0x57
dbm_dump: desc0 jumps from 0x5a to 0x63
dbm_dump: file0 jumps from 0x6c to 0x7b

>>> padmpage
dbm_dump: name jumps from 0x58 to 0x68
dbm_dump: sect jumps from 0x7a to 0x7d
dbm_dump: desc jumps from 0x89 to 0x92
dbm_dump: file jumps from 0xaa to 0xba
dbm_dump: name0 jumps from 0x3c to 0x50

>>> padmacros
dbm_dump: macros jumps from 0x14 to 0x4c

>>> padimacro
dbm_dump: macro0 jumps from 0xe0 to 0xe4

>>> padmmacro
dbm_dump: macro jumps from 0xe4 to 0xe8

>>> padientry
dbm_dump: value0 jumps from 0xf4 to 0xfc
dbm_dump: page0 jumps from 0x10c to 0x114
dbm_dump: macro jumps from 0x124 to 0x12c

>>> padfentry
dbm_dump: value0 jumps from 0xf4 to 0x103
dbm_dump: page0 jumps from 0x113 to 0x11c

>>> padmentry
dbm_dump: value jumps from 0x103 to 0x10c
dbm_dump: pages jumps from 0x11c to 0x124
dbm_dump: value0 jumps from 0xf4 to 0xfc

>>> padfmagic
dbm_dump: end jumps from 0x170 to 0x174

>>> badname0
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: name wants (NULL), ignoring
dbm_dump: name0 wants (NULL), ignoring
dbm_dump: sect0 jumps from (NULL) to 0x30

>>> badname
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: name wants (NULL), ignoring

>>> badsect0
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: sect wants (NULL), ignoring
dbm_dump: sect0 wants (NULL), ignoring
dbm_dump: desc0 jumps from (NULL) to 0x33

>>> badsect
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: sect wants (NULL), ignoring

>>> badarch0
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: arch0 jumps from 0x71 to 0x78

>>> badarch
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: arch wants (NULL), ignoring

>>> baddesc0
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: desc wants (NULL), ignoring
dbm_dump: desc0 wants (NULL), ignoring
dbm_dump: file0 jumps from (NULL) to 0x3c

>>> baddesc
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: desc wants (NULL), ignoring

>>> badfile0
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: file wants (NULL), ignoring
dbm_dump: file0 wants (NULL), ignoring
dbm_dump: macros jumps from (NULL) to 0x4c

>>> badfile
dbm_dump: dbm_get: Database corrupt: offset -1
dbm_dump: file wants (NULL), ignoring

>>> nonexistent
dbm_dump: nonexistent.db: No such file or directory

>>> short
dbm_dump: dbm_map(short.db): File too short
dbm_dump: short.db: Inappropriate file type or format

>>> badimagic
dbm_dump: dbm_map(badimagic.db): Bad initial magic 3a7d0cdc (expected 3a7d0cdb)
dbm_dump: badimagic.db: Inappropriate file type or format

>>> badversion
dbm_dump: dbm_map(badversion.db): Bad version number 2 (expected 1)
dbm_dump: badversion.db: Inappropriate file type or format

>>> badmacrosp
dbm_dump: dbm_get: Database corrupt: offset 1000 > 372
dbm_dump: dbm_open(badmacrosp.db): Invalid offset of macros array
dbm_dump: badmacrosp.db: Inappropriate file type or format

>>> badendp
dbm_dump: dbm_map(badendp.db): Inconsistent file size 372 (expected 373)
dbm_dump: badendp.db: Inappropriate file type or format

>>> badnpages
dbm_dump: dbm_open(badnpages.db): Invalid number of pages: -1
dbm_dump: badnpages.db: Inappropriate file type or format

>>> badnmacros
dbm_dump: dbm_open(badnmacros.db): Invalid number of macros: 37
dbm_dump: badnmacros.db: Inappropriate file type or format

>>> badmacrop
dbm_dump: dbm_get: Database corrupt: offset 1000 > 372
dbm_dump: dbm_open(badmacrop.db): Invalid offset of macro 0
dbm_dump: badmacrop.db: Inappropriate file type or format

>>> badfmagic
dbm_dump: dbm_map(badfmagic.db): Bad final magic 3a7d0cdc (expected 3a7d0cdb)
dbm_dump: badfmagic.db: Inappropriate file type or format
@


1.3
log
@Test handling of invalid pointers in the pages table.
In such cases, do not access NULL pointers in dbm_dump.
Make the setup in the run/Makefile a bit more systematic.
Output starts getting too long, so make everything silent;
you can always use "make -dl" to debug specific tests.
@
text
@d26 1
a26 1
dbm_dump: macro0 jumps from 0xa8 to 0xac
d29 1
a29 1
dbm_dump: macro jumps from 0xac to 0xb0
d46 1
a46 1
dbm_dump: end jumps from 0x138 to 0x13c
d117 1
a117 1
dbm_dump: dbm_get: Database corrupt: offset 1000 > 316
d122 1
a122 1
dbm_dump: dbm_map(badendp.db): Inconsistent file size 316 (expected 317)
d134 1
a134 1
dbm_dump: dbm_get: Database corrupt: offset 1000 > 316
@


1.2
log
@adjust database file name and version number to what was committed
@
text
@d48 53
@


1.1
log
@test suite for the new mandoc.db(5) format;
will be enabled after committing in src/usr.bin/mandoc
@
text
@d60 1
a60 1
dbm_dump: dbm_map(badversion.db): Bad version number 1 (expected 0)
@

