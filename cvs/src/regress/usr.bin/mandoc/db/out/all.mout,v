head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3;
locks; strict;
comment	@# @;


1.5
date	2017.08.23.12.25.02;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	nCNJdJGiqbVuA3Fb;

1.4
date	2017.08.08.17.23.49;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	J0ADt6bCNe9PFWTH;

1.3
date	2017.02.16.11.51.47;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	HroVHpny5re2rBiX;

1.2
date	2016.08.30.22.20.03;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	7v8nWmf1zaSbUjAK;

1.1
date	2016.07.30.10.56.13;	author schwarze;	state Exp;
branches;
next	;
commitid	o23p1rq9Y9q750Ix;


desc
@@


1.5
log
@Catch up with mansearch.c rev. 1.60: When finding a bogus database
entry, print a meaningful warning and skip the entry.

The tests now require the actual manual pages to be around in
addition to the database, they find more results and print more
warnings.
@
text
@
>>> onepage
empty(1) - no title

>>> twopages
> second
man1/second.1
> empty
man1/empty.1
man1/second.1

>>> threepages
> second
man1/second.1
> third
man1/third.1
> empty
man1/empty.1
man1/second.1
man1/third.1

>>> threemacros
> Xr=one
man1/empty.1
> Xr~^t
empty(1) - one(1) # three(3) # two(2)

>>> sortpages
one, empty(1) - no title
two, empty(1) - no title

>>> sortpages_rev
one, empty(1) - no title
two, empty(1) - no title

>>> so
man1/one.1

>>> so_rev
man1/one.1

>>> sortnames
sortnames, link, withsyn, another, last(1) - sorting names

>>> twosect
empty(1, 8) - no title

>>> twoarch
empty(1/amd64, i386) - no title

>>> threearch
> amd64
man1/amd64/empty.1
> i386
man1/i386/empty.1
> sgi
man1/sgi/empty.1

>>> fn
> fn_type
man3/fn.3
> fn_func
man3/fn.3
> fn_arg
man3/fn.3
> fo_type
man3/fn.3
> fo_func
man: nothing appropriate
> fo_arg
man3/fn.3

>>> in
> In
man3/in.3
> Fd
man3/in.3

>>> va
> b2
man3/va.3
> t1
man3/va.3
> a1
man3/va.3
> t2
man3/va.3
> a2
man3/va.3

>>> sh
> Sh
man1/sh.1
> Ss
man1/sh.1

>>> xr
> bare
man1/xr.1
> page
man1/xr.1

>>> empty

>>> badname0
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/empty.1

>>> badname
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/empty.1
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/second.1
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/third.1

>>> badsect0
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/empty.1

>>> badsect
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/empty.1
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/third.1

>>> badarch0
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/amd64/empty.1

>>> badarch
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/i386/empty.1

>>> baddesc0
empty(1) - (NULL)

>>> baddesc
empty(1) - no title
second, empty(1) - (NULL)
third, empty(1) - no title

>>> badfile0
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/empty.1

>>> badfile
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/empty.1
/usr/obj/regress/usr.bin/mandoc/db/run/man/man1/third.1
@


1.4
log
@Mandoc no longer uses names that only occur in the SYNOPSIS.
Adapt test.
OK schwarze@@
@
text
@d106 1
d114 1
d135 1
a135 1
/usr/obj/regress/usr.bin/mandoc/db/run/man/(NULL)
a138 1
/usr/obj/regress/usr.bin/mandoc/db/run/man/(NULL)
@


1.3
log
@cope with macro value sorting implemented in dba.c rev. 1.6
@
text
@d43 1
a43 1
sortnames, link, withsyn, another, last, onlysyn(1) - sorting names
@


1.2
log
@Test handling of invalid pointers in the pages table.
In such cases, do not access NULL pointers in dbm_dump.
Make the setup in the run/Makefile a bit more systematic.
Output starts getting too long, so make everything silent;
you can always use "make -dl" to debug specific tests.
@
text
@d26 1
a26 1
empty(1) - two(2) # three(3) # one(1)
@


1.1
log
@test suite for the new mandoc.db(5) format;
will be enabled after committing in src/usr.bin/mandoc
@
text
@a1 2
>>> empty

d51 8
d69 1
d102 37
@

