head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.06.26.20.11.23;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	Y6PFO0syIzpVk1IY;

1.2
date	2017.03.11.16.03.24;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	SwVJ3NihnGDzV77L;

1.1
date	2015.01.28.21.10.28;	author schwarze;	state Exp;
branches;
next	;
commitid	fvM2x3xHE0B4upcu;


desc
@@


1.3
log
@catch up with the recent eqn(7) improvements
@
text
@# $OpenBSD: Makefile,v 1.2 2017/03/11 16:03:24 schwarze Exp $

REGRESS_TARGETS	 = font infinite invalid quoted
LINT_TARGETS	 = infinite invalid

.include <bsd.regress.mk>
@


1.2
log
@test infinite recursion in eqn(7) "define" statements
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2015/01/28 21:10:28 schwarze Exp $
d3 2
a4 2
REGRESS_TARGETS	 = invalid infinite
LINT_TARGETS	 = invalid infinite
@


1.1
log
@Clean up eqn(7) error handling:
* When "define" fails, do not drop the whole equation.
* Free memory after "undef".
* Use standard mandoc error types instead of rolling our own.
* Delete obfuscating EQN_MSG() macro.
* Add function prototypes while here.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2015/01/01 12:53:46 schwarze Exp $
d3 2
a4 2
REGRESS_TARGETS	 = invalid
LINT_TARGETS	 = invalid
@

