head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.2.0.32
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.40
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.38
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.36
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.34
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.30
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.28
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.26
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.24
	OPENBSD_5_0:1.2.0.22
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.20
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.18
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.12
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2016.06.07.19.34.05;	author okan;	state Exp;
branches;
next	1.3;
commitid	B6SZ82zGAl8JmImj;

1.3
date	2016.05.31.17.28.14;	author okan;	state Exp;
branches;
next	1.2;
commitid	TbqQLas1H9bGMpca;

1.2
date	2006.03.05.07.13.11;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.21.09.07.52;	author otto;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Replace (remaining) systrace policy files with columns of numbers for
the tab spacing regression test; from Ray Lai.
@
text
@#	$OpenBSD: Makefile,v 1.3 2016/05/31 17:28:14 okan Exp $

SDIFF?=sdiff
REGRESS_TARGETS=test-lflag test-sflag test-wflag \
    test-tabs test-tabends test-tabends2 test-tabends3 \
    test-merge test-merge2 test-merge3 test-merge4 test-merge5 \
    test-merge6 test-merge7 test-merge8 test-merge9 test-merge10 \
    test-merge11 test-merge12 test-same test-oneline test-oneline2 \
    test-dot test-dot2 test-short test-stdin test-stdin2 \
    test-Iflag12 test-Iflag21 test-Isflag12 test-Isflag21 \
    test-Ilflag12 test-Ilflag21 test-Ilsflag12 test-Ilsflag21

test-Iflag12: file1 file2 Iflag12.out
	${SDIFF} -w 125 -I '.*filename.*' ${.CURDIR}/file1 ${.CURDIR}/file2 | \
	    diff -u - ${.CURDIR}/Iflag12.out

test-Iflag21: file1 file2 Iflag21.out
	${SDIFF} -w 125 -I '.*filename.*' ${.CURDIR}/file2 ${.CURDIR}/file1 | \
	    diff -u - ${.CURDIR}/Iflag21.out

test-Isflag12: file1 file2 Isflag12.out
	${SDIFF} -sw 125 -I '.*filename.*' ${.CURDIR}/file1 ${.CURDIR}/file2 | \
	    diff -u - ${.CURDIR}/Isflag12.out

test-Isflag21: file1 file2 Isflag21.out
	${SDIFF} -sw 125 -I '.*filename.*' ${.CURDIR}/file2 ${.CURDIR}/file1 | \
	    diff -u - ${.CURDIR}/Isflag21.out

test-Ilflag12: file1 file2 Ilflag12.out
	${SDIFF} -lw 125 -I '.*filename.*' ${.CURDIR}/file1 ${.CURDIR}/file2 | \
	    diff -u - ${.CURDIR}/Ilflag12.out

test-Ilflag21: file1 file2 Ilflag21.out
	${SDIFF} -lw 125 -I '.*filename.*' ${.CURDIR}/file2 ${.CURDIR}/file1 | \
	    diff -u - ${.CURDIR}/Ilflag21.out

test-Ilsflag12: file1 file2 Ilsflag12.out
	${SDIFF} -sw 125 -I '.*filename.*' ${.CURDIR}/file1 ${.CURDIR}/file2 | \
	    diff -u - ${.CURDIR}/Ilsflag12.out

test-Ilsflag21: file1 file2 Ilsflag21.out
	${SDIFF} -sw 125 -I '.*filename.*' ${.CURDIR}/file2 ${.CURDIR}/file1 | \
	    diff -u - ${.CURDIR}/Ilsflag21.out

test-lflag: file1 file2 lflag.out
	${SDIFF} -l ${.CURDIR}/file1 ${.CURDIR}/file2 | diff -u ${.CURDIR}/lflag.out -

test-sflag: file1 file2 sflag.out
	${SDIFF} -s ${.CURDIR}/file1 ${.CURDIR}/file2 | diff -u ${.CURDIR}/sflag.out -

test-wflag: file1 file2 wflag.out
	${SDIFF} -w 40 ${.CURDIR}/file1 ${.CURDIR}/file2 | diff -u ${.CURDIR}/wflag.out -

test-tabs: tabs.in tabs.out
	${SDIFF} ${.CURDIR}/tabs.in ${.CURDIR}/tabs.in | diff -u ${.CURDIR}/tabs.out -

test-tabends: tabends tabends.out
	${SDIFF} -w30 ${.CURDIR}/tabends /dev/null | diff -u ${.CURDIR}/tabends.out -

test-tabends2: tabends tabends2.out
	${SDIFF} -w30 /dev/null ${.CURDIR}/tabends | diff -u ${.CURDIR}/tabends2.out -

test-tabends3: tabends tabends3.out
	${SDIFF} -w19 ${.CURDIR}/tabends /dev/null | diff -u ${.CURDIR}/tabends3.out -

test-merge: file1 file2
	yes l | ${SDIFF} -o merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file1 merge.out

test-merge2: file1 file2
	yes r | ${SDIFF} -o merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file2 merge.out

test-merge3: file1 file2
	yes el | VISUAL=cat ${SDIFF} -o merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file1 merge.out

test-merge4: file1 file2
	yes er | VISUAL=cat ${SDIFF} -o merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file2 merge.out

test-merge5: file1 file2
	yes l | ${SDIFF} -so merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file1 merge.out

test-merge6: file1 file2
	yes r | ${SDIFF} -so merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file2 merge.out

test-merge7: file1 file2
	yes l | ${SDIFF} -lo merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file1 merge.out

test-merge8: file1 file2
	yes r | ${SDIFF} -lo merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file2 merge.out

test-merge9: file1 file2
	yes l | ${SDIFF} -lso merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file1 merge.out

test-merge10: file1 file2
	yes r | ${SDIFF} -lso merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file2 merge.out

test-merge11: file1 file2
	{ while :; do echo s;echo l;echo v;echo l;done; } | \
	    ${SDIFF} -o merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file1 merge.out

test-merge12: file1 file2
	{ while :; do echo s;echo r;echo v;echo r;done; } | \
	    ${SDIFF} -o merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 >/dev/null || true
	diff -u ${.CURDIR}/file2 merge.out

test-same: file1
	${SDIFF} ${.CURDIR}/file1 ${.CURDIR}/file1 | diff -u ${.CURDIR}/same.out -

test-oneline: oneline.in
	${SDIFF} /dev/null ${.CURDIR}/oneline.in | fgrep -q abcd

test-oneline2: oneline.in
	${SDIFF} ${.CURDIR}/oneline.in /dev/null | fgrep -q abcd

test-dot:
	${SDIFF} /dev/null ${.CURDIR}/dot.in | fgrep -q '> .'

test-dot2:
	${SDIFF} ${.CURDIR}/dot.in /dev/null | fgrep -q .

test-stdin:
	echo stdin | ${SDIFF} /dev/null /dev/stdin | fgrep -q '> stdin'

test-stdin2:
	echo stdin | ${SDIFF} /dev/stdin /dev/null | fgrep -q stdin

test-short: short.in short.out
	diff -u ${.CURDIR}/short.out ${.CURDIR}/short.in

clean:
	rm -f merge.out

.include <bsd.regress.mk>
@


1.3
log
@Replace most of the tests based on systrace output; from Ray.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2006/03/05 07:13:11 otto Exp $
d54 2
a55 2
test-tabs: tabs1 tabs2 tabs.out
	${SDIFF} ${.CURDIR}/tabs1 ${.CURDIR}/tabs2 | diff -u ${.CURDIR}/tabs.out -
@


1.2
log
@Enable more tests now that sdiff handles stdin; from Ray
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2006/02/21 09:07:52 otto Exp $
d52 1
a52 1
	${SDIFF} -w 125 ${.CURDIR}/file1 ${.CURDIR}/file2 | diff -u ${.CURDIR}/wflag.out -
d137 2
a138 4
test-short: short.out
	echo "r\nl\nr\nl" | ${SDIFF} -o merge.out ${.CURDIR}/file1 ${.CURDIR}/file2 \
	    >/dev/null || true
	diff -u ${.CURDIR}/short.out merge.out
@


1.1
log
@sdiff regress tests from Ray
@
text
@d1 1
a1 1
#	$OpenBSD$
d9 1
a9 1
    test-dot test-dot2 test-short \
a11 1
    #test-stdin test-stdin2
@

