head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.6
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3;
locks; strict;
comment	@# @;


1.3
date	2015.07.28.12.25.27;	author zhuk;	state Exp;
branches;
next	1.2;
commitid	iamVnoqAxjh6SVN7;

1.2
date	2015.07.26.17.31.18;	author zhuk;	state Exp;
branches;
next	1.1;
commitid	ROvmxEveFKnoaFg4;

1.1
date	2015.07.26.17.28.05;	author zhuk;	state Exp;
branches;
next	;
commitid	JGpTcROEgKAC9yLE;


desc
@@


1.3
log
@Add (currently failing) test for passing PATH via keepenv in doas.

Initial report by Ze Loff on misc@@.
@
text
@# $OpenBSD: Makefile,v 1.2 2015/07/26 17:31:18 zhuk Exp $

REGRESS_TARGETS = \
	t-okay \
	t-fail-quotes \
	t-permit-1 \
	t-run-keepenv-path

REGRESS_ROOT_TARGETS =	${REGRESS_TARGETS:M*-run*}

TEST_CONFIG_CMD =	doas -C ${.CURDIR}/$@@.conf >$@@.out 2>$@@.err
TEST_ERRORS_CMD = \
	if [ -s $@@.err -a ! -s ${.CURDIR}/$@@.expected.err ]; then \
		echo "FAIL: unexpected error output:" >&2; \
		cat $@@.err >&2; \
		exit 1; \
	elif [ -s ${.CURDIR}/$@@.expected.err ]; then \
		diff -u ${.CURDIR}/$@@.expected.err $@@.err; \
	fi
TEST_OUTPUT_CMD = ${TEST_ERRORS_CMD:C/\.err/.out/:C/error //}

CLEANFILES +=	${REGRESS_TARGETS:=.out}
CLEANFILES +=	${REGRESS_TARGETS:=.err}

.for t in ${REGRESS_TARGETS:N*-fail*:N*-permit*:N*-run*}
${t}:
	@@echo '$@@'
	@@${TEST_CONFIG_CMD}
	@@${TEST_ERRORS_CMD}
	@@${TEST_OUTPUT_CMD}
.endfor

.for t in ${REGRESS_TARGETS:M*-fail*}
${t}:
	@@echo '$@@'
	@@ ! ${TEST_CONFIG_CMD}
	@@${TEST_ERRORS_CMD}
	@@${TEST_OUTPUT_CMD}
.endfor

.for t in ${REGRESS_TARGETS:M*-permit*}
${t}:
	@@echo '$@@'
	@@rv=true; \
	while read ident cmdline; do \
		read expected; \
		set +e; \
		action=$$(doas -C ${.CURDIR}/$@@.conf -u $$ident $$cmdline); \
		ret=$$?; \
		set -e; \
		if [ X"$$action" != X"$$expected" ]; then \
			echo "FAILED: expected '$$expected'," \
			    "but got '$$action'" >&2; \
			echo "        for command: $$cmdline" >&2; \
			rv=false; \
		fi; \
		if [ X"$$action" = Xdeny -a $$ret -eq 0 ]; then \
			echo "FAILED: deny without error return" >&2; \
			echo "        for command: $$cmdline" >&2; \
			rv=false; \
		elif [ X"$$action" != Xdeny -a $$ret -ne 0 ]; then \
			echo "FAILED: permit with error return" >&2; \
			echo "        for command: $$cmdline" >&2; \
			rv=false; \
		fi; \
	done <${.CURDIR}/$@@.patterns; \
	$$rv
.endfor

.for t in ${REGRESS_TARGETS:M*-run*}
${t}:
	@@echo '$@@'
	@@${SUDO} rm -Rf $t.root
	@@${SUDO} install -d -o ${BINOWN} -g ${BINGRP} -m ${DIRMODE} $t.root/etc
	@@${SUDO} install -d -o ${BINOWN} -g ${BINGRP} -m ${DIRMODE} $t.root/bin
	@@${SUDO} install -d -o ${BINOWN} -g ${BINGRP} -m ${DIRMODE} $t.root/usr/bin
	@@${SUDO} install -d -o ${BINOWN} -g ${BINGRP} -m ${DIRMODE} $t.root/usr/lib
	@@${SUDO} install -d -o ${BINOWN} -g ${BINGRP} -m ${DIRMODE} $t.root/usr/libexec
	@@${SUDO} install -o root -g wheel -m 0444 \
	    ${.CURDIR}/$t.conf $t.root/etc/doas.conf
	@@${SUDO} install -o root -g wheel -m 0400 \
	    ${.CURDIR}/master.passwd $t.root/etc/master.passwd
	@@${SUDO} pwd_mkdb -d $t.root/etc -p master.passwd
	@@${SUDO} install -o ${SHAREOWN} -g ${SHAREGRP} -m ${SHAREMODE} \
	    /usr/libexec/ld.so $t.root/usr/libexec/ld.so
	@@${SUDO} install -o ${LIBOWN} -g ${LIBGRP} -m ${LIBMODE} \
	    /usr/lib/libc.so.* $t.root/usr/lib
	@@${SUDO} install -o ${BINOWN} -g ${BINGRP} -m ${BINMODE} \
	    /bin/echo $t.root/bin/echo
	@@${SUDO} install -o ${BINOWN} -g ${BINGRP} -m 4555 \
	    /usr/bin/doas $t.root/usr/bin/doas
	@@${SUDO} env MALLOC_OPTIONS=S chroot -u nobody $t.root /usr/bin/doas echo okay
.endfor
# cleanup copied files
afterclean: cleanroots
cleanroots:
.for t in ${REGRESS_TARGETS:M*-run*}
	${SUDO} rm -Rf $t.root
.endfor

.include <bsd.regress.mk>
@


1.2
log
@Make test names printed like other test suites do.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2015/07/26 17:28:05 zhuk Exp $
d6 2
a7 1
	t-permit-1
d9 3
a11 1
TEST_RUN_CMD =	doas -C ${.CURDIR}/$@@.conf >$@@.out 2>$@@.err
d25 1
a25 1
.for t in ${REGRESS_TARGETS:N*-fail*:N*-permit*}
d28 1
a28 1
	@@${TEST_RUN_CMD}
d36 1
a36 1
	@@ ! ${TEST_RUN_CMD}
d68 31
@


1.1
log
@Import test suite for doas. Relies on recently committed command matching
functionlity with -C flag.
@
text
@d1 1
a1 1
# $OpenBSD$
d24 1
a24 1
	@@echo '===> $@@'
d32 1
a32 1
	@@echo '===> $@@'
d40 1
a40 1
	@@echo '===> $@@'
@

