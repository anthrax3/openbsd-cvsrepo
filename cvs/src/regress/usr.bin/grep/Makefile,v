head	1.17;
access;
symbols
	OPENBSD_6_0:1.17.0.16
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.6
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.14
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.12
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.10
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.8
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.4
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.15.0.6
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.4
	OPENBSD_5_0:1.15.0.2
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.13.0.18
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.16
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.12
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.14
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.10
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.8
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.6
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.4
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.2
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.11.0.2
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.10.0.2
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4;
locks; strict;
comment	@# @;


1.17
date	2012.12.12.15.11.25;	author weerd;	state Exp;
branches;
next	1.16;

1.16
date	2012.12.11.08.22.59;	author weerd;	state Exp;
branches;
next	1.15;

1.15
date	2011.07.11.22.01.28;	author okan;	state Exp;
branches;
next	1.14;

1.14
date	2011.07.11.20.35.41;	author tedu;	state Exp;
branches;
next	1.13;

1.13
date	2007.02.13.21.48.20;	author kili;	state Exp;
branches;
next	1.12;

1.12
date	2005.04.03.19.15.17;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2004.10.03.19.24.58;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2004.05.07.19.10.06;	author otto;	state Exp;
branches;
next	1.9;

1.9
date	2004.02.04.05.53.49;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2004.01.25.21.28.35;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2004.01.25.21.26.55;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2004.01.19.02.27.10;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.06.20.19.12;	author otto;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.17.19.14.43;	author pvalchev;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.17.19.07.10;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.02.20.26.59;	author pvalchev;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.02.07.07.49;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Add a regression test for the bug millert@@ fixed previously.

OK millert@@
@
text
@# $OpenBSD: Makefile,v 1.16 2012/12/11 08:22:59 weerd Exp $

REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 \
	t18 t19 t20 t21 t22 t23 t24 t25 t26

t1:
	grep t.s ${.CURDIR}/in | diff - ${.CURDIR}/t1.out

t2:
	grep -w separated ${.CURDIR}/in | diff - ${.CURDIR}/t1.out

t3:
	grep ^Beginning ${.CURDIR}/in | diff - ${.CURDIR}/t3.out

t4:
	grep -i end$$ ${.CURDIR}/in | diff - ${.CURDIR}/t4.out

t5:
	egrep '\?|\*$$' ${.CURDIR}/in | diff - ${.CURDIR}/t5.out

t6:
	grep -v [l] ${.CURDIR}/in | diff - ${.CURDIR}/t6.out

t7:
	grep -x line ${.CURDIR}/in | diff - ${.CURDIR}/t7.out

t8:
	fgrep line. ${.CURDIR}/in | diff - /dev/null

t9:
	grep non.existent ${.CURDIR}/in | diff - /dev/null

t10:
	grep -s foo nonexistentfile | diff - /dev/null

t11:
	grep -C1 examples ${.CURDIR}/in | diff - ${.CURDIR}/t11.out

t12:
	egrep -f ${.CURDIR}/t1.out ${.CURDIR}/in | diff - ${.CURDIR}/t1.out

t13:
	grep 'abcd. abcd.' ${.CURDIR}/t13.in | diff - ${.CURDIR}/t13.out

t14:
	test X`grep -w -l u_int ${.CURDIR}/t14.in` = X${.CURDIR}/t14.in

t15:
	grep -w tu ${.CURDIR}/t15.in | diff - ${.CURDIR}/t15.out

t16:
	grep -w to ${.CURDIR}/t15.in | diff - ${.CURDIR}/t15.out

t17:
	grep -w '^foo' ${.CURDIR}/t17.in | diff - ${.CURDIR}/t17.out

t18:
	grep -w '^foo$$' ${.CURDIR}/t17.in | diff - ${.CURDIR}/t17.out

t19:
	grep  -w 'a.' ${.CURDIR}/t19.in | diff - ${.CURDIR}/t19.out
	fgrep -w -e 'aa' -e 'a_' ${.CURDIR}/t19.in | diff - ${.CURDIR}/t19.out

t20:
	echo '='   | grep  -w  '='  | diff - /dev/null
	echo '='   | fgrep -w  '='  | diff - /dev/null
	echo 'a='  | grep  -w  'a=' | diff - /dev/null
	echo 'a='  | fgrep -w  'a=' | diff - /dev/null
	echo '=b'  | grep  -w  '=b' | diff - /dev/null
	echo '=b'  | fgrep -w  '=b' | diff - /dev/null
	echo 'a=b' | grep  -qw 'a=b'
	echo 'a=b' | fgrep -qw 'a=b'
	echo '+'   | grep  -w  '+'  | diff - /dev/null
	echo '+'   | fgrep -w  '+'  | diff - /dev/null
	echo 'a+'  | grep  -w  'a+' | diff - /dev/null
	echo 'a+'  | fgrep -w  'a+' | diff - /dev/null
	echo '+b'  | grep  -w  '+b' | diff - /dev/null
	echo '+b'  | fgrep -w  '+b' | diff - /dev/null
	echo 'a+b' | grep  -qw 'a+b'
	echo 'a+b' | fgrep -qw 'a+b'

t21:
	grep -l D.e ${.CURDIR}/in | diff - ${.CURDIR}/t21.out
	egrep -l D.e ${.CURDIR}/in | diff - ${.CURDIR}/t21.out
	grep -l '.*D.e' ${.CURDIR}/in | diff - ${.CURDIR}/t21.out
	egrep -l '.*D.e' ${.CURDIR}/in | diff - ${.CURDIR}/t21.out

t22:
	grep -l 'a.*b' ${.CURDIR}/t22.in

t23:
	egrep -w 'word1|word2|word3' ${.CURDIR}/t23.in

t24:
	grep -e '' < ${.CURDIR}/in | diff - ${.CURDIR}/in
	grep -x -e '' < ${.CURDIR}/in | diff - /dev/null
	grep -f /dev/null < ${.CURDIR}/in | diff - /dev/null

t25:
	grep -o [ab] ${.CURDIR}/t25.in | diff - ${.CURDIR}/t25.out

t26:
	echo 'aaab' | grep -o 'a*' | head -n 10 | diff - ${.CURDIR}/t26.out


.PHONY: t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20
.PHONY: t21 t22 t23 t24 t25 t26

.include <bsd.regress.mk>
@


1.16
log
@Add a (currently failing) regression test for a bug in grep.  Otto@@
has a fix under review.

OK otto@@ blambert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2011/07/11 22:01:28 okan Exp $
d4 1
a4 1
	t18 t19 t20 t21 t22 t23 t24 t25
d102 3
d107 1
a107 1
.PHONY: t21 t22 t23 t24 t25
@


1.15
log
@repair t24 when obj exists, like other targets.

sure tedu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2011/07/11 20:35:41 tedu Exp $
d4 1
a4 1
	t18 t19 t20 t21 t22 t23 t24
d99 3
d104 1
a104 1
.PHONY: t21 t22 t23 t24
@


1.14
log
@how annoying.  soembody added a regress test that would have caught my
grep bug, but didn't turn it on.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2007/02/13 21:48:20 kili Exp $
d95 3
a97 3
	grep -e '' < in | diff - in
	grep -x -e '' < in | diff - /dev/null
	grep -f /dev/null < in | diff - /dev/null
@


1.13
log
@
- Be explicit on command line checking, instead of relying on patterns,
  which may be NULL (e.g. -e '').
- let add_pattern() decide how to deal with empty patterns, don't do
  magic in read_patterns().

This unbreaks stuff like grep -e '', and makes grep -f <file> more
POSIX compliant. Semantics for grep -f /dev/null (or any other empty
file) may be questionable, but this case isn't specified by POSIX,
and matching nothing at all seems to be sane.

Thanks to otto@@, who mentioned potential problems related to the
-x option with the first patch i sent.

ok jaredy@@ (some time ago), otto@@, millert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2005/04/03 19:15:17 otto Exp $
d4 1
a4 1
	t18 t19 t20 t21 t22 t23
@


1.12
log
@Test for egrep -w "foo|bar"
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2004/10/03 19:24:58 otto Exp $
d94 6
d101 1
a101 1
.PHONY: t21 t22 t23
@


1.11
log
@new regressions, based on PR 3940
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2004/05/07 19:10:06 otto Exp $
d4 1
a4 1
	t18 t19 t20 t21 t22
d91 3
d95 1
a95 1
.PHONY: t21 t22
@


1.10
log
@Regression tests for fgrep -w and grep -w. Also enable a few tests that
were defined, but not called.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2004/02/04 05:53:49 millert Exp $
d4 1
a4 1
	t18 t19 t20
d82 9
d92 1
@


1.9
log
@Test ^ and $ in -w mode; currently fails.  Fix awaiting approval...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2004/01/25 21:28:35 millert Exp $
d3 2
a4 1
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16
d60 23
a82 1
.PHONY: t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18
@


1.8
log
@Add missing REGRESS_TARGETS for t15 and t16
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2004/01/25 21:26:55 millert Exp $
d53 7
a59 1
.PHONY: t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16
@


1.7
log
@Two more tests; based on a failure Matthieu found with my first
first for grep -w.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2004/01/19 02:27:10 espie Exp $
d3 1
a3 1
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14
@


1.6
log
@test taken from /usr/include/db.h
ok millert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2003/12/06 20:19:12 otto Exp $
d47 7
a53 1
.PHONY: t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14
@


1.5
log
@Add test for pattern containing multiple dots (PR 3597).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2003/07/17 19:14:43 pvalchev Exp $
d3 1
a3 1
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13
d44 4
a47 1
.PHONY: t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13
@


1.4
log
@test -f
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2003/07/17 19:07:10 pvalchev Exp $
d3 1
a3 1
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12
d41 4
a44 1
.PHONY: t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12
@


1.3
log
@test grep -C
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2003/07/02 20:26:59 pvalchev Exp $
d3 1
a3 1
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11
d38 4
a41 1
.PHONY: t1 t2 t3 t4 t5 t6 t7 t8 t9 t10
@


1.2
log
@use /dev/null
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2003/07/02 07:07:49 pvalchev Exp $
d3 1
a3 1
REGRESS_TARGETS=t1 t2 t3 t4 t5 t6 t7 t8 t9 t10
d34 3
@


1.1
log
@add grep regression tests suite, a few ideas from millert incorporated
@
text
@d1 1
a1 1
# $OpenBSD$
d27 1
a27 1
	fgrep line. ${.CURDIR}/in | diff - ${.CURDIR}/empty
d30 1
a30 1
	grep non.existent ${.CURDIR}/in | diff - ${.CURDIR}/empty
d33 1
a33 1
	grep -s foo nonexistentfile | diff - ${.CURDIR}/empty
@

