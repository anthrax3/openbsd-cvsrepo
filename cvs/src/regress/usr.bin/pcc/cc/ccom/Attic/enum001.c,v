head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2007.10.07.18.12.43;	author otto;	state dead;
branches;
next	1.2;

1.2
date	2007.10.05.17.28.47;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.30.14.31.25;	author otto;	state Exp;
branches;
next	;


desc
@@


1.3
log
@and reorg this tree as well
@
text
@/* code should produce exactly one warning */

enum foo { bar };
enum footoo { bar1 };

enum foo f(void) { return bar; }
double g(void) { return 0.0; }

struct baz {
	enum foo (*ff)(void);
};

struct baz a[] = { {f},
	{g} };


static int h(enum foo *);
static int h(enum foo *arg)
{
	return 0;
}

int main()
{
	return 0;
}
@


1.2
log
@basic tests now work, including those that should fail
@
text
@@


1.1
log
@test case involving superfluous type warnings involving enums
@
text
@d6 2
a7 2
enum foo f(void);
double g(void);
d19 5
@

