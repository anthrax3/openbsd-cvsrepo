head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2007.10.07.18.12.43;	author otto;	state dead;
branches;
next	1.3;

1.3
date	2007.10.05.17.28.47;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2007.09.26.13.00.05;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.26.11.29.10;	author otto;	state Exp;
branches;
next	;


desc
@@


1.4
log
@and reorg this tree as well
@
text
@
enum foo {aap};

enum foo eval_table(void) { return aap; }

static const struct ops {
        enum foo (*afrunc)(void);
} eval_ops[] = {
        { eval_table },
};

main()
{
	return 0;
}


@


1.3
log
@basic tests now work, including those that should fail
@
text
@@


1.2
log
@more minimal example
@
text
@d4 1
a4 1
enum foo eval_table(void);
d11 5
@


1.1
log
@two more test cases
@
text
@a0 1
/* should not issue: init004.c, line 17: warning: illegal pointer combination */
d2 1
a2 1
struct ops;
d4 1
a4 5
typedef enum  { aap} Linetype;

typedef Linetype eval_fn(const struct ops *, int *, const char **);

static eval_fn eval_table, eval_unary;
d7 1
a7 5
        eval_fn *inner;
        struct op {
                const char *str;
                int (*fn)(int, int);
        } op[5];
d9 1
a9 1
        { eval_table, { { "||", 0 } } },
@

