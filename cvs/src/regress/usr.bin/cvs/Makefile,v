head	1.32;
access;
symbols
	OPENBSD_6_2:1.32.0.2
	OPENBSD_6_2_BASE:1.32
	OPENBSD_6_1:1.31.0.4
	OPENBSD_6_1_BASE:1.31
	OPENBSD_6_0:1.28.0.26
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.16
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.28.0.24
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.22
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.28.0.20
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.28.0.18
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.28.0.14
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.28.0.12
	OPENBSD_5_3_BASE:1.28
	OPENBSD_5_2:1.28.0.10
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.8
	OPENBSD_5_0:1.28.0.6
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.28.0.4
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.2
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.26.0.6
	OPENBSD_4_7_BASE:1.26
	OPENBSD_4_6:1.26.0.8
	OPENBSD_4_6_BASE:1.26
	OPENBSD_4_5:1.26.0.4
	OPENBSD_4_5_BASE:1.26
	OPENBSD_4_4:1.26.0.2
	OPENBSD_4_4_BASE:1.26
	OPENBSD_4_3:1.25.0.2
	OPENBSD_4_3_BASE:1.25
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3;
locks; strict;
comment	@# @;


1.32
date	2017.07.07.23.55.21;	author bluhm;	state Exp;
branches;
next	1.31;
commitid	HPFM3FepOktcWNt0;

1.31
date	2016.09.30.22.11.37;	author bluhm;	state Exp;
branches;
next	1.30;
commitid	5K3Tw0Gic2gDSbms;

1.30
date	2016.09.30.14.33.10;	author bluhm;	state Exp;
branches;
next	1.29;
commitid	htVGBa9qIiKSqHRA;

1.29
date	2016.09.29.06.45.38;	author otto;	state Exp;
branches;
next	1.28;
commitid	Xhx5aYrLMQpIHNrg;

1.28
date	2010.07.13.21.31.17;	author nicm;	state Exp;
branches;
next	1.27;

1.27
date	2010.07.13.20.47.56;	author nicm;	state Exp;
branches;
next	1.26;

1.26
date	2008.03.10.20.03.21;	author tobias;	state Exp;
branches;
next	1.25;

1.25
date	2008.02.15.23.26.58;	author xsa;	state Exp;
branches;
next	1.24;

1.24
date	2008.02.15.23.13.45;	author xsa;	state Exp;
branches;
next	1.23;

1.23
date	2008.02.15.18.05.38;	author xsa;	state Exp;
branches;
next	1.22;

1.22
date	2008.02.14.22.32.48;	author xsa;	state Exp;
branches;
next	1.21;

1.21
date	2008.02.10.11.42.28;	author xsa;	state Exp;
branches;
next	1.20;

1.20
date	2008.02.09.12.20.33;	author tobias;	state Exp;
branches;
next	1.19;

1.19
date	2008.02.07.16.16.57;	author tobias;	state Exp;
branches;
next	1.18;

1.18
date	2008.02.05.20.15.24;	author tobias;	state Exp;
branches;
next	1.17;

1.17
date	2008.02.05.18.40.43;	author tobias;	state Exp;
branches;
next	1.16;

1.16
date	2008.02.05.18.11.34;	author tobias;	state Exp;
branches;
next	1.15;

1.15
date	2008.02.01.13.36.43;	author tobias;	state Exp;
branches;
next	1.14;

1.14
date	2008.01.31.21.00.16;	author tobias;	state Exp;
branches;
next	1.13;

1.13
date	2008.01.31.17.49.47;	author tobias;	state Exp;
branches;
next	1.12;

1.12
date	2008.01.23.09.34.08;	author tobias;	state Exp;
branches;
next	1.11;

1.11
date	2008.01.10.12.30.09;	author tobias;	state Exp;
branches;
next	1.10;

1.10
date	2008.01.10.12.24.16;	author tobias;	state Exp;
branches;
next	1.9;

1.9
date	2008.01.10.12.13.02;	author tobias;	state Exp;
branches;
next	1.8;

1.8
date	2008.01.10.10.20.11;	author tobias;	state Exp;
branches;
next	1.7;

1.7
date	2008.01.10.09.39.32;	author tobias;	state Exp;
branches;
next	1.6;

1.6
date	2008.01.06.14.45.50;	author tobias;	state Exp;
branches;
next	1.5;

1.5
date	2007.10.09.12.46.29;	author tobias;	state Exp;
branches;
next	1.4;

1.4
date	2007.09.20.00.32.32;	author niallo;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.06.06.21.47;	author niallo;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.05.08.04.24;	author xsa;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.05.05.49.41;	author niallo;	state Exp;
branches;
next	;


desc
@@


1.32
log
@Remove all references to "make depend" from regress.
@
text
@#	$OpenBSD: Makefile,v 1.31 2016/09/30 22:11:37 bluhm Exp $

# Regression tests by Niall O'Higgins <niallo@@openbsd.org> and
# Tobias Stoeckmann <tobias@@openbsd.org>.
# Based on OpenRCS regression framework.

.include <bsd.own.mk>

OPENCVS=	${BSDSRCDIR}/usr.bin/cvs/obj/opencvs
CVS?=		${OPENCVS}
CVSCMD=		${CVS} -f

REGRESS_ROOT=	${.OBJDIR}/regress_cvs_root
REGRESS_WCOPY=	${.OBJDIR}/regress_cvs_wcopy
REGRESS_SEED=	${REGRESS_WCOPY}/seed
REGRESS_IMPORT=	${.OBJDIR}/regress_cvs_import

.if defined(REMOTE)
MYCVSROOT?=	localhost:${REGRESS_ROOT}
.if defined(CVS_SERVER)
TESTFILE=	$(CVS_SERVER)
.else
TESTFILE=	cvs
.endif
.else
TESTFILE=	${CVS:T}
MYCVSROOT?=	${REGRESS_ROOT}
.endif

DIFF=		diff -u

CLEANFILES=	regress_cvs_root regress_cvs_wcopy regress_cvs_stderr \
		regress_cvs_stdout regress_cvs_import

# These must be done in order.
LTESTS= cvs-initial \
	cvs-import-mflag \
	cvs-checkout-dflag \
	cvs-checkout-rflag-HEAD \
	cvs-checkout-kflag-k-rflag-HEAD \
	cvs-checkout-rflag-inval_branch_rev \
	cvs-checkout-rflag-too_high \
	cvs-checkout \
	cvs-checkout-pflag \
	cvs-tag \
	cvs-add \
	cvs-add-dir \
	cvs-add-subdir_file \
	cvs-commit-Fflag \
	cvs-checkout \
	cvs-tag-branch \
	cvs-checkout-rflag_branch \
	cvs-diff-file \
	cvs-commit-to_branch \
	cvs-annotate \
	cvs-annotate-rflag-inval_branch_rev \
	cvs-annotate-rflag-inval_branch_rev-fflag \
	cvs-annotate-rflag-unknown_symbol-fflag \
	cvs-checkout-kflag-kv-rflag-1.1 \
	cvs-update-Aflag-kflag-kv \
	cvs-update-Aflag-kflag-k-rflag-1.1 \
	cvs-update-Aflag-rflag-1.1 \
	cvs-update-Aflag \
	cvs-status \
	cvs-diff \
	cvs-remove-fflag \
	cvs-status-vflag \
	cvs-log \
	cvs-rlog \
	cvs-rtag-one_more_branch \
	cvs-export \
	cvs-update-with-local
# Known to fail.
#	cvs-update-for_subdir
#	cvs-release-dflag

.for t in ${LTESTS}
REGRESS_TARGETS+=test-${t}
test-${t}: ${CVS}
.endfor

# XXX - should not print anything
test-cvs-add:
	@@echo "initial content" > ${REGRESS_SEED}/seed2.txt
	@@cd ${REGRESS_SEED}; \
	    ${CVSCMD} -q add seed2.txt > /dev/null 2> /dev/null
#	    eval 'test `${CVSCMD} -Q add seed2.txt | wc -l` -eq 0'

test-cvs-add-dir:
	@@mkdir ${REGRESS_SEED}/subdir
	@@cd ${REGRESS_SEED}; ${CVSCMD} -q add subdir > /dev/null 2> /dev/null
	@@test -d ${REGRESS_SEED}/subdir/CVS && \
	    test -d ${REGRESS_ROOT}/seed/subdir

test-cvs-add-subdir_file:
	@@echo "initial content of seed3.txt" > ${REGRESS_SEED}/subdir/seed3.txt
	@@cd ${REGRESS_SEED}; \
	    ${CVSCMD} -q add subdir/seed3.txt > /dev/null 2> /dev/null
#	@@eval 'test `${CVSCMD} -Q add seed2.txt | wc -l` -eq 0'

test-cvs-annotate:
	@@cd ${REGRESS_SEED}; \
	    eval 'test `${CVSCMD} -Q annotate seed1.txt 2>/dev/null | \
	    wc -l` -eq 3'

test-cvs-annotate-rflag-inval_branch_rev:
	@@cd ${REGRESS_SEED}; \
	    eval 'test `${CVSCMD} -Q annotate -r 1.2.3.4 seed1.txt 2>/dev/null \
	    | wc -l` -eq 0'

test-cvs-annotate-rflag-inval_branch_rev-fflag:
	@@cd ${REGRESS_SEED}; \
	    eval 'test `${CVSCMD} -Q annotate -f -r 1.2.3.4 seed1.txt \
	    2>/dev/null | wc -l` -eq 3'

test-cvs-annotate-rflag-unknown_symbol-fflag:
	@@cd ${REGRESS_SEED}; \
	    eval 'test `${CVSCMD} -Q annotate -f -r UNKNOWN seed1.txt \
	    2>/dev/null | wc -l` -eq 0'

test-cvs-checkout:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; ${CVSCMD} -Q -d ${MYCVSROOT} co seed > /dev/null
	@@test -f ${REGRESS_SEED}/seed1.txt

test-cvs-checkout-kflag-k-rflag-HEAD:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co -rHEAD -kkv seed > /dev/null
	@@test -f ${REGRESS_SEED}/seed1.txt
	@@eval 'test `grep -c -e THEAD -e -kkv \
	    ${REGRESS_SEED}/CVS/Entries | wc -l` -eq 1'
	@@eval 'test `grep -c Id$ \
	    ${REGRESS_SEED}/seed1.txt | wc -l` -eq 1'

test-cvs-checkout-kflag-kv-rflag-1.1:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co -r 1.1 -kkv seed > /dev/null
	@@test -f ${REGRESS_SEED}/seed1.txt
	@@eval 'test `grep -c -e T1.1 -e -kkv \
	    ${REGRESS_SEED}/CVS/Entries | wc -l` -eq 1'

test-cvs-checkout-pflag:
	@@eval 'test `${CVSCMD} -Q -d ${MYCVSROOT} checkout \
	    -p seed/seed1.txt 2>/dev/null | wc -l` -eq 2'

test-cvs-checkout-rflag_branch:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co -r FIRST_BRANCH seed > /dev/null
	@@test -f ${REGRESS_SEED}/seed1.txt
	@@eval 'test `grep -c TFIRST_BRANCH ${REGRESS_SEED}/CVS/Entries` -eq 2'

test-cvs-checkout-rflag-inval_branch_rev:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; ${CVSCMD} -Q -d ${MYCVSROOT} co -r1.2.3.4 seed
	@@eval 'test ! -f ${REGRESS_SEED}/seed1.txt'

test-cvs-checkout-rflag-too_high:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; ${CVSCMD} -Q -d ${MYCVSROOT} co -r1.5 seed
	@@eval 'test ! -f ${REGRESS_SEED}/seed1.txt'

test-cvs-checkout-rflag-HEAD:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co -rHEAD seed > /dev/null
	@@test -f ${REGRESS_SEED}/seed1.txt
	@@eval 'test `grep -c THEAD ${REGRESS_SEED}/CVS/Entries | wc -l` -eq 1'

test-cvs-checkout-rflag-1.1:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co -r 1.1 seed > /dev/null
	@@test -f ${REGRESS_SEED}/seed1.txt && test -f ${REGRESS_SEED}/seed2.txt

test-cvs-checkout-dflag:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co -d seed2 seed > /dev/null
	@@test -d ${REGRESS_WCOPY}/seed2/CVS

test-cvs-checkout-subdir:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co seed/subdir > /dev/null
	@@test -f ${REGRESS_SEED}/subdir/seed3.txt && \
	    test ! -f ${REGRESS_SEED}/seed2.txt

test-cvs-commit-Fflag:
	@@sleep 1
	@@echo "second line" >> ${REGRESS_SEED}/seed1.txt
	@@echo "commit seed repo" > ${REGRESS_WCOPY}/logmsg.txt
	@@cd ${REGRESS_SEED}; ${CVSCMD} commit \
	    -F ${REGRESS_WCOPY}/logmsg.txt > /dev/null
	@@grep "^@@commit seed repo" \
	    ${REGRESS_ROOT}/seed/seed1.txt,v > /dev/null
	@@eval 'test `cat ${REGRESS_ROOT}/seed/seed1.txt,v | wc -l` -eq 60'
	@@test -f ${REGRESS_ROOT}/seed/seed2.txt,v

test-cvs-commit-to_branch:
	@@sleep 1
	@@cd ${REGRESS_SEED}; ${CVSCMD} commit -m'first branch seed' > /dev/null
	@@eval 'test `cat ${REGRESS_ROOT}/seed/seed1.txt,v | wc -l` -eq 80'
	@@eval 'test `grep -c TFIRST_BRANCH ${REGRESS_SEED}/CVS/Entries` -eq 2'

test-cvs-diff:
	@@sleep 1
	@@echo "modified" > ${REGRESS_SEED}/seed2.txt
	@@cd ${REGRESS_SEED}; eval 'test `${CVSCMD} -Q diff | wc -l` -eq 9'

test-cvs-diff-file:
	@@sleep 1
	@@echo "first branch line" >> ${REGRESS_SEED}/seed1.txt
	@@cd ${REGRESS_SEED}; \
	    eval 'test `${CVSCMD} -Q diff seed1.txt | wc -l` -eq 7'

test-cvs-export:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir ${REGRESS_WCOPY}
	@@cd ${REGRESS_WCOPY}; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} export -r HEAD seed > /dev/null
	@@test -f ${REGRESS_SEED}/seed1.txt

test-cvs-import-mflag:
	@@rm -rf ${REGRESS_IMPORT}
	@@mkdir ${REGRESS_IMPORT}
	@@cp ${.CURDIR}/seed1.txt ${REGRESS_IMPORT}
	@@touch -t 200001010100 ${REGRESS_IMPORT}/seed1.txt
	@@cd ${REGRESS_IMPORT} && ${CVSCMD} -Q -d ${MYCVSROOT} import \
	    -m'import seed repo' seed regress regress_import > /dev/null
	@@chmod u+w ${REGRESS_ROOT}/seed/seed1.txt,v
	@@perl ${.CURDIR}/setdate.pl ${REGRESS_ROOT}/seed/seed1.txt,v 1.1 \
	    2000.01.01.00.00.00
	@@perl ${.CURDIR}/setdate.pl ${REGRESS_ROOT}/seed/seed1.txt,v 1.1.1.1 \
	    2000.01.01.00.00.00
	@@sed "s/author `whoami`/author user/" \
	    ${REGRESS_ROOT}/seed/seed1.txt,v | \
	    ${DIFF} - ${.CURDIR}/test_${TESTFILE}_import_01_seed1.txt,v

test-cvs-initial: clean
	@@${CVSCMD} -d ${MYCVSROOT} init
	@@test -d ${REGRESS_ROOT}/CVSROOT

test-cvs-log:
	@@cd ${REGRESS_SEED}; eval 'test `${CVSCMD} -Q log | wc -l` -eq 68'

test-cvs-release-dflag: test-cvs-checkout
	@@cd ${REGRESS_WCOPY}; ${CVSCMD} -Q -d ${MYCVSROOT} release -d seed
	@@test ! -d ${.OBJDIR}/regress_cvs_wcopy/seed
	@@eval 'test `grep '^F' ${REGRESS_ROOT}/CVSROOT/history | wc -l` -eq 1'

test-cvs-remove-fflag:
	@@cd ${REGRESS_SEED}; ${CVSCMD} -Q remove -f seed1.txt
	@@test ! -f ${REGRESS_SEED}/seed1.txt

test-cvs-rlog:
	@@eval 'test `${CVSCMD} -Q -d ${MYCVSROOT} rlog seed | wc -l` -eq 65'

test-cvs-status:
	@@cd ${REGRESS_SEED}; eval 'test `${CVSCMD} -Q status | wc -l` -eq 21'

test-cvs-status-vflag:
	@@cd ${REGRESS_SEED}; eval 'test `${CVSCMD} -Q status -v | wc -l` -eq 33'

test-cvs-tag:
	@@cd ${REGRESS_SEED}; ${CVSCMD} -Q tag FIRST_TAG > /dev/null
	@@grep FIRST_TAG ${REGRESS_ROOT}/seed/seed1.txt,v > /dev/null

test-cvs-tag-branch:
	@@cd ${REGRESS_SEED}; ${CVSCMD} -Q tag -b FIRST_BRANCH > /dev/null
	@@grep FIRST_BRANCH ${REGRESS_ROOT}/seed/seed1.txt,v > /dev/null

test-cvs-rtag-one_more_branch:
	@@${CVSCMD} -d ${MYCVSROOT} -Q rtag -b SECOND_BRANCH seed > /dev/null
	@@grep SECOND_BRANCH ${REGRESS_ROOT}/seed/seed2.txt,v \
	    | grep 4 > /dev/null

test-cvs-update-Aflag:
	@@cd ${REGRESS_SEED}; ${CVSCMD} -Q update -A > /dev/null
	@@eval 'test `grep -c -e T1 -e kkv ${REGRESS_SEED}/CVS/Entries` -eq 0'

test-cvs-update-Aflag-kflag-kv:
	@@cd ${REGRESS_SEED}; ${CVSCMD} -Q update -A -kv > /dev/null
	@@eval 'test `grep -c T1 ${REGRESS_SEED}/CVS/Entries` -eq 0'
	@@eval 'test `grep -c kv ${REGRESS_SEED}/CVS/Entries` -eq 2'

test-cvs-update-Aflag-kflag-k-rflag-1.1:
	@@cd ${REGRESS_SEED}; ${CVSCMD} -Q update -A -kk -r 1.1 > /dev/null
	@@eval 'test `grep -c T1 ${REGRESS_SEED}/CVS/Entries` -eq 2'
	@@eval 'test `grep -c kk ${REGRESS_SEED}/CVS/Entries` -eq 2'

test-cvs-update-Aflag-rflag-1.1:
	@@cd ${REGRESS_SEED}; ${CVSCMD} -Q update -A -r 1.1 > /dev/null
	@@eval 'test `grep -c T1 ${REGRESS_SEED}/CVS/Entries` -eq 2'
	@@eval 'test `grep -c kk ${REGRESS_SEED}/CVS/Entries` -eq 0'

test-cvs-update-for_subdir:
	@@cd ${REGRESS_SEED}; ${CVSCMD} -Q update > /dev/null
	@@test -f ${REGRESS_SEED}/subdir/seed3.txt && \
	    test ! -f ${REGRESS_SEED}/seed1.txt && \
	    test ! -f ${REGRESS_SEED}/seed2.txt

test-cvs-merge:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir -p ${REGRESS_WCOPY}/a ${REGRESS_WCOPY}/b
	@@cd ${REGRESS_WCOPY}/a; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co seed > /dev/null
	@@cd ${REGRESS_WCOPY}/b; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co seed > /dev/null
	@@echo "modified text" > ${REGRESS_WCOPY}/a/seed/seed1.txt
	@@cd ${REGRESS_WCOPY}/a/seed && ${CVSCMD} -Q com -m 'a' > /dev/null
	@@echo "modified text 2" > ${REGRESS_WCOPY}/b/seed/seed1.txt
	@@cd ${REGRESS_WCOPY}/b/seed && ${CVSCMD} -Q up > /dev/null 2>&1
	@@echo "modified text" > ${REGRESS_WCOPY}/b/seed/seed1.txt
	@@cd ${REGRESS_WCOPY}/b/seed && test `${CVSCMD} -q up | wc -l` -eq 0

test-cvs-update-with-local:
	@@rm -rf ${REGRESS_WCOPY}
	@@mkdir -p ${REGRESS_WCOPY}/a ${REGRESS_WCOPY}/b
	@@cd ${REGRESS_WCOPY}/a; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co seed > /dev/null
	@@cd ${REGRESS_WCOPY}/b; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} co seed > /dev/null
	@@echo "new file" > ${REGRESS_WCOPY}/a/seed/test.txt
	@@cd ${REGRESS_WCOPY}/a/seed && \
		${CVSCMD} -Q add test.txt > /dev/null && \
		${CVSCMD} -Q com -m 'a' > /dev/null
	@@echo "local file" > ${REGRESS_WCOPY}/b/seed/test.txt
	@@cd ${REGRESS_WCOPY}/b/seed && \
		${CVSCMD} -Q up 2>&1|grep -q '^C test.txt' && \
		grep -q '^local file' test.txt

clean:
	@@rm -rf ${CLEANFILES}

# opencvs is not linked to the build, so make it on demand as a workaround
${OPENCVS}:
	cd ${BSDSRCDIR}/usr.bin/cvs && ${MAKE} obj
	cd ${BSDSRCDIR}/usr.bin/cvs && ${MAKE} all

.include <bsd.regress.mk>
@


1.31
log
@The import test of regress/usr.bin/cvs tries to touch a file in
src, not in obj.  So better populate an import directory in obj and
import from there.  Also remove trailing whitespaces and semicolons.
OK otto@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2016/09/30 14:33:10 bluhm Exp $
a350 1
	cd ${BSDSRCDIR}/usr.bin/cvs && ${MAKE} depend
@


1.30
log
@The opencvs sources are not linked to the build.  To make the cvs
regression test run, build opencvs on demand as a dependency.
Input and OK otto@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2016/09/29 06:45:38 otto Exp $
d16 1
d33 1
a33 1
		regress_cvs_stdout
d143 1
a143 1
	@@test -f ${REGRESS_SEED}/seed1.txt;
d176 1
a176 1
	@@test -f ${REGRESS_SEED}/seed1.txt;
d237 5
a241 3
	@@cd ${.CURDIR}/import_seed; \
	    touch -t 200001010100 seed1.txt; \
	    ${CVSCMD} -Q -d ${MYCVSROOT} import \
d339 1
a339 1
		${CVSCMD} -Q com -m 'a' > /dev/null; 
@


1.29
log
@with commitids, status produces an extra line per revision
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2010/07/13 21:31:17 nicm Exp $
d7 4
a10 1
CVS?=		opencvs
d25 1
a25 1
TESTFILE=	${CVS}
a33 1

d78 1
d344 6
@


1.28
log
@Test for the awesome let's-silently-overwrite-local-files bug.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2010/07/13 20:47:56 nicm Exp $
d266 1
a266 1
	@@cd ${REGRESS_SEED}; eval 'test `${CVSCMD} -Q status | wc -l` -eq 18'
d269 1
a269 1
	@@cd ${REGRESS_SEED}; eval 'test `${CVSCMD} -Q status -v | wc -l` -eq 30'
@


1.27
log
@regress for merge bug.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2008/03/10 20:03:21 tobias Exp $
d69 1
a69 1
	cvs-merge
d322 16
@


1.26
log
@Further improve regress for OpenCVS by including possibility to change and
check dates in RCS files (needed for various -D cases).  As a reference,
import has been adjusted.

Also, it is no longer needed to supply -f option if CVS is specified
with make.

ok joris
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2008/02/15 23:26:58 xsa Exp $
d68 2
a69 1
	cvs-export
d308 14
@


1.25
log
@More cleanup;
Introduce variables instead of hardcoding XXX occurrences.
OK tobias@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2008/02/15 23:13:45 xsa Exp $
d7 2
a8 1
CVS?=		opencvs -f
d16 2
d19 4
d26 2
d81 2
a82 2
	    ${CVS} -q add seed2.txt > /dev/null 2> /dev/null
#	    eval 'test `${CVS} -Q add seed2.txt | wc -l` -eq 0'
d86 1
a86 1
	@@cd ${REGRESS_SEED}; ${CVS} -q add subdir > /dev/null 2> /dev/null
d93 2
a94 2
	    ${CVS} -q add subdir/seed3.txt > /dev/null 2> /dev/null
#	@@eval 'test `${CVS} -Q add seed2.txt | wc -l` -eq 0'
d98 2
a99 1
	    eval 'test `${CVS} -Q annotate seed1.txt 2>/dev/null | wc -l` -eq 3'
d103 1
a103 1
	    eval 'test `${CVS} -Q annotate -r 1.2.3.4 seed1.txt 2>/dev/null \
d108 2
a109 2
	    eval 'test `${CVS} -Q annotate -f -r 1.2.3.4 seed1.txt 2>/dev/null \
	    | wc -l` -eq 3'
d113 2
a114 2
	    eval 'test `${CVS} -Q annotate -f -r UNKNOWN seed1.txt 2>/dev/null \
	    | wc -l` -eq 0'
d119 1
a119 1
	@@cd ${REGRESS_WCOPY}; ${CVS} -Q -d ${MYCVSROOT} co seed > /dev/null
d126 1
a126 1
	    ${CVS} -Q -d ${MYCVSROOT} co -rHEAD -kkv seed > /dev/null
d137 1
a137 1
	    ${CVS} -Q -d ${MYCVSROOT} co -r 1.1 -kkv seed > /dev/null
d143 1
a143 1
	@@eval 'test `${CVS} -Q -d ${MYCVSROOT} checkout \
d150 1
a150 1
	    ${CVS} -Q -d ${MYCVSROOT} co -r FIRST_BRANCH seed > /dev/null
d157 1
a157 1
	@@cd ${REGRESS_WCOPY}; ${CVS} -Q -d ${MYCVSROOT} co -r1.2.3.4 seed
d163 1
a163 1
	@@cd ${REGRESS_WCOPY}; ${CVS} -Q -d ${MYCVSROOT} co -r1.5 seed
d170 1
a170 1
	    ${CVS} -Q -d ${MYCVSROOT} co -rHEAD seed > /dev/null
d178 1
a178 1
	    ${CVS} -Q -d ${MYCVSROOT} co -r 1.1 seed > /dev/null
d185 1
a185 1
	    ${CVS} -Q -d ${MYCVSROOT} co -d seed2 seed > /dev/null
a188 1
	@@echo "test-cvs-checkout-subdir"
d192 1
a192 1
	    ${CVS} -Q -d ${MYCVSROOT} co seed/subdir > /dev/null
d200 1
a200 1
	@@cd ${REGRESS_SEED}; ${CVS} commit \
d209 1
a209 1
	@@cd ${REGRESS_SEED}; ${CVS} commit -m'first branch seed' > /dev/null
d216 1
a216 1
	@@cd ${REGRESS_SEED}; eval 'test `${CVS} -Q diff | wc -l` -eq 9'
d222 1
a222 1
	    eval 'test `${CVS} -Q diff seed1.txt | wc -l` -eq 7'
d228 1
a228 1
	    ${CVS} -Q -d ${MYCVSROOT} export -r HEAD seed > /dev/null
d233 2
a234 1
	    ${CVS} -Q -d ${MYCVSROOT} import \
d236 8
a243 1
	@@test -f ${REGRESS_ROOT}/seed/seed1.txt,v
d246 1
a246 1
	@@${CVS} -d ${MYCVSROOT} init
d250 1
a250 1
	@@cd ${REGRESS_SEED}; eval 'test `${CVS} -Q log | wc -l` -eq 68'
d253 1
a253 1
	@@cd ${REGRESS_WCOPY}; ${CVS} -Q -d ${MYCVSROOT} release -d seed
d258 1
a258 1
	@@cd ${REGRESS_SEED}; ${CVS} -Q remove -f seed1.txt
d262 1
a262 1
	@@eval 'test `${CVS} -Q -d ${MYCVSROOT} rlog seed | wc -l` -eq 65'
d265 1
a265 1
	@@cd ${REGRESS_SEED}; eval 'test `${CVS} -Q status | wc -l` -eq 18'
d268 1
a268 1
	@@cd ${REGRESS_SEED}; eval 'test `${CVS} -Q status -v | wc -l` -eq 30'
d271 1
a271 1
	@@cd ${REGRESS_SEED}; ${CVS} -Q tag FIRST_TAG > /dev/null
d275 1
a275 1
	@@cd ${REGRESS_SEED}; ${CVS} -Q tag -b FIRST_BRANCH > /dev/null
d279 1
a279 1
	@@${CVS} -d ${MYCVSROOT} -Q rtag -b SECOND_BRANCH seed > /dev/null
d284 1
a284 1
	@@cd ${REGRESS_SEED}; ${CVS} -Q update -A > /dev/null
d288 1
a288 1
	@@cd ${REGRESS_SEED}; ${CVS} -Q update -A -kv > /dev/null
d293 1
a293 1
	@@cd ${REGRESS_SEED}; ${CVS} -Q update -A -kk -r 1.1 > /dev/null
d298 1
a298 1
	@@cd ${REGRESS_SEED}; ${CVS} -Q update -A -r 1.1 > /dev/null
d303 1
a303 2
	@@echo "test-cvs-update-for_subdir"
	@@cd ${REGRESS_SEED}; ${CVS} -Q update > /dev/null
@


1.24
log
@Cleanup; OK tobias@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2008/02/15 18:05:38 xsa Exp $
d9 1
d14 1
a14 1
MYCVSROOT?=	localhost:${.OBJDIR}/regress_cvs_root
d16 1
a16 1
MYCVSROOT?=	${.OBJDIR}/regress_cvs_root
d79 1
a79 1
	    test -d ${.OBJDIR}/regress_cvs_root/seed/subdir
d194 3
a196 4
	    ${.OBJDIR}/regress_cvs_root/seed/seed1.txt,v > /dev/null
	@@eval 'test `cat ${.OBJDIR}/regress_cvs_root/seed/seed1.txt,v | wc -l` \
	    -eq 60'
	@@test -f ${.OBJDIR}/regress_cvs_root/seed/seed2.txt,v
d201 1
a201 2
	@@eval 'test `cat ${.OBJDIR}/regress_cvs_root/seed/seed1.txt,v | wc -l` \
	    -eq 80'
d226 1
a226 1
	@@test -f ${.OBJDIR}/regress_cvs_root/seed/seed1.txt,v
d230 1
a230 1
	@@test -d ${.OBJDIR}/regress_cvs_root/CVSROOT
d238 1
a238 2
	@@eval 'test `grep '^F' ${.OBJDIR}/regress_cvs_root/CVSROOT/history \
	    | wc -l` -eq 1'
d255 1
a255 2
	@@grep FIRST_TAG ${.OBJDIR}/regress_cvs_root/seed/seed1.txt,v \
	    > /dev/null
d259 1
a259 2
	@@grep FIRST_BRANCH ${.OBJDIR}/regress_cvs_root/seed/seed1.txt,v \
	    > /dev/null
d263 1
a263 1
	@@grep SECOND_BRANCH ${.OBJDIR}/regress_cvs_root/seed/seed2.txt,v \
@


1.23
log
@Test that removed file is not there anymore when using -f in
cvs-remove-fflag test.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2008/02/14 22:32:48 xsa Exp $
d9 3
d69 2
a70 2
	@@echo "initial content" > ${.OBJDIR}/regress_cvs_wcopy/seed/seed2.txt
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
d75 3
a77 4
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy/seed/subdir
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    ${CVS} -q add subdir > /dev/null 2> /dev/null
	@@test -d ${.OBJDIR}/regress_cvs_wcopy/seed/subdir/CVS && \
d81 2
a82 3
	@@echo "initial content of seed3.txt" \
	    > ${.OBJDIR}/regress_cvs_wcopy/seed/subdir/seed3.txt
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
d84 1
a84 1
#	eval 'test `${CVS} -Q add seed2.txt | wc -l` -eq 0'
d87 1
a87 1
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
d91 1
a91 1
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
d96 1
a96 1
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
d101 1
a101 1
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
d106 4
a109 5
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy
	@@cd ${.OBJDIR}/regress_cvs_wcopy; \
	    ${CVS} -Q -d ${MYCVSROOT} co seed > /dev/null
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt
d112 3
a114 3
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy
	@@cd ${.OBJDIR}/regress_cvs_wcopy; \
d116 1
a116 1
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt;
d118 1
a118 1
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries | wc -l` -eq 1'
d120 1
a120 1
	    ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt | wc -l` -eq 1'
d123 3
a125 3
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy
	@@cd ${.OBJDIR}/regress_cvs_wcopy; \
d127 1
a127 1
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt;
d129 1
a129 1
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries | wc -l` -eq 1'
d136 6
a141 8
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy
	@@cd ${.OBJDIR}/regress_cvs_wcopy; \
	    ${CVS} -Q -d ${MYCVSROOT} co -r FIRST_BRANCH seed \
	    > /dev/null
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt
	@@eval 'test `grep -c TFIRST_BRANCH \
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` -eq 2'
d144 4
a147 5
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy
	@@cd ${.OBJDIR}/regress_cvs_wcopy; \
	    ${CVS} -Q -d ${MYCVSROOT} co -r1.2.3.4 seed
	@@eval 'test ! -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt'
d150 4
a153 5
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy
	@@cd ${.OBJDIR}/regress_cvs_wcopy; \
	    ${CVS} -Q -d ${MYCVSROOT} co -r1.5 seed
	@@eval 'test ! -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt'
d156 3
a158 3
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy
	@@cd ${.OBJDIR}/regress_cvs_wcopy; \
d160 2
a161 3
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt;
	@@eval 'test `grep -c THEAD \
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries | wc -l` -eq 1'
d164 3
a166 3
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy; \
	    cd ${.OBJDIR}/regress_cvs_wcopy; \
d168 1
a168 2
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt && \
	    test -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed2.txt
d171 3
a173 3
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy; \
	    cd ${.OBJDIR}/regress_cvs_wcopy; \
d175 1
a175 1
	@@test -d ${.OBJDIR}/regress_cvs_wcopy/seed2/CVS
d179 3
a181 3
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy; \
	    cd ${.OBJDIR}/regress_cvs_wcopy; \
d183 2
a184 2
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/subdir/seed3.txt && \
	    test ! -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed2.txt
d188 4
a191 4
	@@echo "second line" >> ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt
	@@echo "commit seed repo" > ${.OBJDIR}/regress_cvs_wcopy/logmsg.txt
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; ${CVS} commit \
	    -F ${.OBJDIR}/regress_cvs_wcopy/logmsg.txt > /dev/null
d200 1
a200 2
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; ${CVS} commit \
	    -m'first branch seed' > /dev/null
d203 1
a203 2
	@@eval 'test `grep -c TFIRST_BRANCH \
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` -eq 2'
d207 2
a208 3
	@@echo "modified" > ${.OBJDIR}/regress_cvs_wcopy/seed/seed2.txt
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    eval 'test `${CVS} -Q diff | wc -l` -eq 9'
d212 2
a213 2
	@@echo "first branch line" >> ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
d217 3
a219 3
	@@rm -rf ${.OBJDIR}/regress_cvs_wcopy
	@@mkdir ${.OBJDIR}/regress_cvs_wcopy; \
	    cd ${.OBJDIR}/regress_cvs_wcopy; \
d221 1
a221 1
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt
d234 1
a234 2
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    eval 'test `${CVS} -Q log | wc -l` -eq 68'
d237 1
a237 2
	@@cd ${.OBJDIR}/regress_cvs_wcopy; \
	    ${CVS} -Q -d ${MYCVSROOT} release -d seed
d239 2
a240 1
	@@eval 'test `grep '^F' ${.OBJDIR}/regress_cvs_root/CVSROOT/history | wc -l` -eq 1'
d243 2
a244 2
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; ${CVS} -Q remove -f seed1.txt
	@@test ! -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt
d250 1
a250 2
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    eval 'test `${CVS} -Q status | wc -l` -eq 18'
d253 1
a253 2
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    eval 'test `${CVS} -Q status -v | wc -l` -eq 30'
d256 1
a256 2
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    ${CVS} -Q tag FIRST_TAG > /dev/null
d261 1
a261 2
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    ${CVS} -Q tag -b FIRST_BRANCH > /dev/null
d271 2
a272 4
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    ${CVS} -Q update -A > /dev/null
	@@eval 'test `grep -c -e T1 -e kkv \
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` -eq 0'
d275 3
a277 6
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    ${CVS} -Q update -A -kv > /dev/null
	@@eval 'test `grep -c T1 \
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` -eq 0'
	@@eval 'test `grep -c kv \
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` -eq 2'
d280 3
a282 6
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    ${CVS} -Q update -A -kk -r 1.1 > /dev/null
	@@eval 'test `grep -c T1 \
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` -eq 2'
	@@eval 'test `grep -c kk \
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` -eq 2'
d285 3
a287 6
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    ${CVS} -Q update -A -r 1.1 > /dev/null
	@@eval 'test `grep -c T1 \
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` -eq 2'
	@@eval 'test `grep -c kk \
	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` -eq 0'
d291 4
a294 5
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; \
	    ${CVS} -Q update > /dev/null
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/subdir/seed3.txt && \
	    test ! -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt && \
	    test ! -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed2.txt
@


1.22
log
@Add `cvs release -d' test but commented out. OK tobiasregress@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2008/02/10 11:42:28 xsa Exp $
d254 1
@


1.21
log
@Enable client<->server remote setup. Use -DREMOTE.
OK tobias@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2008/02/09 12:20:33 tobias Exp $
d58 1
d245 6
@


1.20
log
@Get in proper support for checkout/update -A when it comes to keyword
expansion options.

OK joris@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2008/02/07 16:16:57 tobias Exp $
d8 4
d13 1
@


1.19
log
@Don't use .cvsrc of user running regress tests.

OK xsa@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2008/02/05 20:15:24 tobias Exp $
d39 3
a270 1
# XXX - Output is not GNU conform
a273 1
#	    eval 'test `${CVS} -q update -A | wc -l` -eq 1'
d275 24
@


1.18
log
@Tag expansion can be pure evil...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2008/02/05 18:40:43 tobias Exp $
d7 1
a7 1
CVS?=		opencvs
@


1.17
log
@Added keyword expansion tests and extended update -A test for this.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2008/02/05 18:11:34 tobias Exp $
d110 1
a110 1
	@@eval 'test `grep -c $Id$ \
@


1.16
log
@Extended regress test further to check new "checkout -d" functionality and
diff.  Also zapped unused DIFF.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2008/02/01 13:36:43 tobias Exp $
d19 1
d38 1
a38 1
	cvs-checkout-rflag-1.1 \
d102 20
d273 2
a274 2
	@@eval 'test `grep -c T1 ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` \
	    -eq 0'
@


1.15
log
@Another GNU cvs weirdo:  During annotate, invalid revisions are allowed if
-f is supplied (thus switching to HEAD), but unknown symbols end in fatal.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2008/01/31 21:00:16 tobias Exp $
a7 2
DIFF=		diff -u

d17 1
d31 1
a47 1
#	cvs-checkout-dflag
a48 2
# Known to behave unconform to GNU cvs.
#	cvs-diff-file
d134 3
a136 1
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt
d147 5
a151 3
	@@${CVS} -Q -d ${MYCVSROOT} co -d \
	    ${.OBJDIR}/regress_cvs_wcopy seed
	@@test -d ${.OBJDIR}/regress_cvs_wcopy
a175 1
	@@echo "first branch line" >> ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt
d190 4
a193 1
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; ${CVS} -Q diff seed1.txt
@


1.14
log
@opencvs (r)log work fine now, activated regress for them.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2008/01/31 17:49:47 tobias Exp $
d36 1
a50 1
#	cvs-annotate-rflag-unknown_symbol-fflag
@


1.13
log
@export works fine in local and remote setup now
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2008/01/23 09:34:08 tobias Exp $
d42 2
a47 1
#	cvs-rlog
a51 2
#	cvs-log
#	cvs-rlog
d210 2
a211 1
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; ${CVS} -Q log
d217 1
a217 1
	@@${CVS} -Q -d ${MYCVSROOT} rlog seed
@


1.12
log
@Don't reset the sticky tag of a file in CVS/Entries if it is not requested.

OK niallo@@, xsa@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2008/01/10 12:30:09 tobias Exp $
d42 2
a43 1
	cvs-rtag-one_more_branch
a50 1
#	cvs-export
d194 1
d197 1
a197 1
	    ${CVS} -Q -d ${MYCVSROOT} export
@


1.11
log
@more tests
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2008/01/10 12:24:16 tobias Exp $
d181 2
a182 2
#	@@eval 'test `grep -c TFIRST_BRANCH \
#	    ${.OBJDIR}/regress_cvs_wcopy/seed/CVS/Entries` -eq 2'
@


1.10
log
@Make it easier to test local and remote setups by adding a Makefile var
called MYCVSROOT (just to make sure noone thinks it is 'CVSROOT', -d is
still needed).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2008/01/10 12:13:02 tobias Exp $
d26 2
d29 1
d39 1
d41 2
a42 1
	cvs-status-vflag
d46 1
a48 1
#	cvs-diff
d52 1
d65 14
d153 9
d220 1
a220 1
	    eval 'test `${CVS} -Q status | wc -l` -eq 12'
d224 1
a224 1
	    eval 'test `${CVS} -Q status -v | wc -l` -eq 21'
d238 5
d250 8
@


1.9
log
@extend already available regress tests
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2008/01/10 10:20:11 tobias Exp $
d10 2
d82 1
a82 1
	    ${CVS} -Q -d ${.OBJDIR}/regress_cvs_root co seed > /dev/null
d86 1
a86 1
	@@eval 'test `${CVS} -Q -d ${.OBJDIR}/regress_cvs_root checkout \
d93 1
a93 1
	    ${CVS} -Q -d ${.OBJDIR}/regress_cvs_root co -r FIRST_BRANCH seed \
d103 1
a103 1
	    ${CVS} -Q -d ${.OBJDIR}/regress_cvs_root co -r1.2.3.4 seed
d110 1
a110 1
	    ${CVS} -Q -d ${.OBJDIR}/regress_cvs_root co -r1.5 seed
d117 1
a117 1
	    ${CVS} -Q -d ${.OBJDIR}/regress_cvs_root co -rHEAD seed > /dev/null
d124 1
a124 1
	    ${CVS} -Q -d ${.OBJDIR}/regress_cvs_root co -r 1.1 seed > /dev/null
d129 1
a129 1
	@@${CVS} -Q -d ${.OBJDIR}/regress_cvs_root co -d \
d167 1
a167 1
	    ${CVS} -Q -d ${.OBJDIR}/regress_cvs_root export
d172 1
a172 1
	    ${CVS} -Q -d ${.OBJDIR}/regress_cvs_root import \
d177 1
a177 1
	@@${CVS} -d ${.OBJDIR}/regress_cvs_root init
d187 1
a187 1
	@@${CVS} -Q -d ${.OBJDIR}/regress_cvs_root rlog seed
@


1.8
log
@Adjust value to proper GNU cvs output (and OpenCVS now, too)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2008/01/10 09:39:32 tobias Exp $
d94 2
d123 2
a124 1
	@@test -f ${.OBJDIR}/regress_cvs_wcopy/seed/seed1.txt
d141 1
d150 2
d154 4
a157 1
	@@cd ${.OBJDIR}/regress_cvs_wcopy/seed; ${CVS} -Q diff
d212 2
@


1.7
log
@Slap in -b support for tag command.  It was missing for a full regress test
as of now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2008/01/06 14:45:50 tobias Exp $
d145 1
a145 1
	    -eq 77'
@


1.6
log
@Branches are separated with \n\t in GNU rcs/cvs.
This makes regress tests easier to check with OpenCVS and GNU cvs.

OK xsa@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2007/10/09 12:46:29 tobias Exp $
a191 1
# Does not work with OpenCVS, but we need it for further tests _now_.
d194 1
a194 1
	    cvs -Q tag -b FIRST_BRANCH > /dev/null
@


1.5
log
@New OpenCVS regression tests.

OK niallo@@, xsa@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2007/09/20 00:32:32 niallo Exp $
d137 1
a137 1
	    -eq 59'
d145 1
a145 1
	    -eq 75'
@


1.4
log
@some initial regress bits for opencvs.  not expected to pass just yet.

ok joris@@ ray@@ xsa@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d3 2
a4 1
# Regression tests by Niall O'Higgins <niallo@@openbsd.org>.
d10 2
a11 1
CLEANFILES=	regress_cvs_root regress_cvs_wcopy
d14 1
a14 2
# XXX - These may need to be done in order.
#	(At least start with cvs-initial.)
d16 29
a44 2
	cvs-import \
	cvs-checkout-dflag
d50 115
d167 4
d172 2
a173 2
test-cvs-import:
	@@cd ${.CURDIR}/import_seed; ${CVS} -Q -d ${.OBJDIR}/regress_cvs_root import -m'import seed repo' seed regress regress_`date +%Y%m%d`
d175 29
a203 3
test-cvs-checkout-dflag:
	@@${CVS} -Q -d ${.OBJDIR}/regress_cvs_root co -d ${.OBJDIR}/regress_cvs_wcopy seed
	@@test -d ${.OBJDIR}/regress_cvs_wcopy
@


1.3
log
@work around import limitations
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2007/06/05 08:04:24 xsa Exp $
d9 1
a9 1
CLEANFILES=	regress_cvs_root regress_cvs_wcopy importdir
d26 1
a26 5
	@@mkdir -p ${.OBJDIR}/importdir
	@@cp -f ${.CURDIR}/import_seed/seed* ${.OBJDIR}/importdir
	@@cd ${.OBJDIR}/importdir; ${CVS} -Q		\
	    -d ${.OBJDIR}/regress_cvs_root import	\
	    -m'import seed repo' seed regress regress_`date +%Y%m%d`
d29 1
a29 2
	@@${CVS} -Q -d ${.OBJDIR}/regress_cvs_root co	\
	    -d ${.OBJDIR}/regress_cvs_wcopy seed
@


1.2
log
@Wrap long lines.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2007/06/05 05:49:41 niallo Exp $
d9 1
a9 1
CLEANFILES=	regress_cvs_root regress_cvs_wcopy
d26 3
a28 1
	@@cd ${.CURDIR}/import_seed; ${CVS} -Q		\
@


1.1
log
@add very basic regress framework for opencvs.
more to come.

ok joris@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.40 2007/03/15 13:05:23 bluhm Exp $
d26 3
a28 1
	@@cd ${.CURDIR}/import_seed; ${CVS} -Q -d ${.OBJDIR}/regress_cvs_root import -m'import seed repo' seed regress regress_`date +%Y%m%d`
d31 2
a32 1
	@@${CVS} -Q -d ${.OBJDIR}/regress_cvs_root co -d ${.OBJDIR}/regress_cvs_wcopy seed
@

