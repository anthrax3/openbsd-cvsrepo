head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.0.26
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.16
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.24
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.22
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.20
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.18
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.09.28.11.46.45;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	u9rycPDvA0jA7fDN;

1.1
date	2010.06.29.21.22.03;	author halex;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Do not close stdout when starting netcat, redirect to /dev/null
instead.  This prevents that the ftp test hangs in nc poll(2).  Add
OpenBSD RCS id while there.
@
text
@#!/bin/sh
#	$OpenBSD$

: ${FTP:=ftp}

tmpdir=$(readlink -f temp) &&
mkdir $tmpdir || exit 1

trap 'rm -rf "$tmpdir"' EXIT
trap 'rm -rf "$tmpdir"; exit 1' INT HUP TERM

cd "$tmpdir" || exit 1

mkdir src dest &&
cd dest || exit 1

echo 'DASH' >> ../src/-
echo 'XXXX' >> ../src/X

args=$1
exitcode=$2
stdout=$3
stderr=$4
files=$5

echo "Testing ${FTP} $1"

eval "\"\$FTP\" $1" >../stdout 2>../stderr
echo -n $? > ../exitcode
for a in *; do
	test -e $a || continue
	print -rn -- "[$a] "
	cat ./$a
done >../files

result=0
for a in exitcode stdout stderr files; do
	if ! eval "[ X\"\$$a\" == X\"$(<../$a)\" ]"; then
		echo "*** $a ***"
		echo "expected:"
		eval "print -r -- \"\$$a\"" | sed 's/^/> /'
		echo "got:"
		cat ../$a | sed 's/^/> /'
		echo
		result=1
	fi
done

exit $result
@


1.1
log
@Add regression tests for ftp regarding the -o flag.

lots of help and ok phessler@@
@
text
@d2 1
@

