head	1.11;
access;
symbols
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.6.0.6
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2;
locks; strict;
comment	@# @;


1.11
date	2017.04.30.23.33.48;	author djm;	state Exp;
branches;
next	1.10;
commitid	9mApJQ1q88FyYy7a;

1.10
date	2017.04.17.11.02.31;	author jsg;	state Exp;
branches;
next	1.9;
commitid	G1o5NqrQGBr6ZzEn;

1.9
date	2016.11.01.13.43.27;	author tb;	state Exp;
branches;
next	1.8;
commitid	pBCtG0AEsm5tbSei;

1.8
date	2016.09.30.11.55.20;	author bluhm;	state Exp;
branches;
next	1.7;
commitid	sqi57uFiAqSYM6qf;

1.7
date	2016.09.28.20.09.52;	author bluhm;	state Exp;
branches;
next	1.6;
commitid	rVKKG7sBbec8pBE4;

1.6
date	2015.07.01.23.11.18;	author djm;	state Exp;
branches;
next	1.5;
commitid	OFfesfxh5BAofToY;

1.5
date	2015.06.15.06.38.50;	author djm;	state Exp;
branches;
next	1.4;
commitid	8a24yURufsQ7gV5t;

1.4
date	2015.03.31.22.57.56;	author djm;	state Exp;
branches;
next	1.3;
commitid	EJ4pTJ9b1Av21NCa;

1.3
date	2015.01.23.21.21.23;	author miod;	state Exp;
branches;
next	1.2;
commitid	PoVvmU0S29jY0L7o;

1.2
date	2014.06.24.01.14.18;	author djm;	state Exp;
branches;
next	1.1;
commitid	ykKEHe6cpJlsqpsg;

1.1
date	2014.04.30.05.32.00;	author djm;	state Exp;
branches;
next	;


desc
@@


1.11
log
@remove SSHv1 support from unit tests
@
text
@#	$OpenBSD: Makefile.inc,v 1.10 2017/04/17 11:02:31 jsg Exp $

REGRESS_FAIL_EARLY?=	yes

.include <bsd.own.mk>
.include <bsd.obj.mk>

MALLOC_OPTIONS?=	CFGJRSUX
TEST_ENV?=		MALLOC_OPTIONS=${MALLOC_OPTIONS}

# XXX detect from ssh binary?
OPENSSL?=	yes

.if (${OPENSSL:L} == "yes")
CFLAGS+=	-DWITH_OPENSSL
.endif

# enable warnings
WARNINGS=Yes

DEBUG=-g
CFLAGS+=	-fstack-protector-all
CDIAGFLAGS=	-Wall
CDIAGFLAGS+=	-Wextra
CDIAGFLAGS+=	-Werror
CDIAGFLAGS+=	-Wchar-subscripts
CDIAGFLAGS+=	-Wcomment
CDIAGFLAGS+=	-Wformat
CDIAGFLAGS+=	-Wformat-security
CDIAGFLAGS+=	-Wimplicit
CDIAGFLAGS+=	-Winline
CDIAGFLAGS+=	-Wmissing-declarations
CDIAGFLAGS+=	-Wmissing-prototypes
CDIAGFLAGS+=	-Wparentheses
CDIAGFLAGS+=	-Wpointer-arith
CDIAGFLAGS+=	-Wreturn-type
CDIAGFLAGS+=	-Wshadow
CDIAGFLAGS+=	-Wsign-compare
CDIAGFLAGS+=	-Wstrict-aliasing
CDIAGFLAGS+=	-Wstrict-prototypes
CDIAGFLAGS+=	-Wswitch
CDIAGFLAGS+=	-Wtrigraphs
CDIAGFLAGS+=	-Wuninitialized
CDIAGFLAGS+=	-Wunused
.if ${COMPILER_VERSION:L} != "gcc3"
CDIAGFLAGS+=	-Wpointer-sign
CDIAGFLAGS+=	-Wold-style-definition
.endif

SSHREL=../../../../../usr.bin/ssh

CFLAGS+=-I${.CURDIR}/../test_helper -I${.CURDIR}/${SSHREL}

.if exists(${.CURDIR}/../test_helper/${__objdir})
LDADD+=-L${.CURDIR}/../test_helper/${__objdir} -ltest_helper
DPADD+=${.CURDIR}/../test_helper/${__objdir}/libtest_helper.a
.else
LDADD+=-L${.CURDIR}/../test_helper -ltest_helper
DPADD+=${.CURDIR}/../test_helper/libtest_helper.a
.endif

.if exists(${.CURDIR}/${SSHREL}/lib/${__objdir})
LDADD+=-L${.CURDIR}/${SSHREL}/lib/${__objdir} -lssh
LIBSSH=${.CURDIR}/${SSHREL}/lib/${__objdir}/libssh.a
.else
LDADD+=-L${.CURDIR}/${SSHREL}/lib -lssh
LIBSSH=${.CURDIR}/${SSHREL}/lib/libssh.a
.endif
DPADD+=${LIBSSH}
${PROG}: ${LIBSSH}
${LIBSSH}:
	cd ${.CURDIR}/${SSHREL} && ${MAKE} lib

LDADD+= -lutil
DPADD+= ${LIBUTIL}

.if (${OPENSSL:L} == "yes")
LDADD+= -lcrypto
DPADD+= ${LIBCRYPTO}
.endif
@


1.10
log
@Change COMPILER_VERSION tests which limited additional warnings to gcc4
to instead skip them on gcc3 as clang can handle -Wpointer-sign and
-Wold-style-definition.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2016/11/01 13:43:27 tb Exp $
a11 1
SSH1?=		no
a15 7
.else
# SSH v.1 requires OpenSSL.
SSH1=		no
.endif

.if (${SSH1:L} == "yes")
CFLAGS+=	-DWITH_SSH1
@


1.9
log
@Clean up MALLOC_OPTIONS.  For the unittests, move MALLOC_OPTIONS and
TEST_ENV to unittets/Makefile.inc.

ok otto
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2016/09/30 11:55:20 bluhm Exp $
d53 1
a53 1
.if ${COMPILER_VERSION} == "gcc4"
@


1.8
log
@In ssh tests set REGRESS_FAIL_EARLY with ?= so that the environment
can change it.
OK djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2016/09/28 20:09:52 bluhm Exp $
d7 3
@


1.7
log
@Add a makefile rule to create the ssh library when regress needs
it.  This allows to run the ssh regression tests without doing a
"make build" before.
Discussed with dtucker@@ and djm@@; OK djm@@
@
text
@d1 3
a3 1
#	$OpenBSD: Makefile.inc,v 1.6 2015/07/01 23:11:18 djm Exp $
a6 2

REGRESS_FAIL_EARLY= yes
@


1.6
log
@don't expect SSH v.1 in unittests
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 2015/06/15 06:38:50 djm Exp $
d69 1
a69 1
DPADD+=${.CURDIR}/${SSHREL}/lib/${__objdir}/libssh.a
d72 1
a72 1
DPADD+=${.CURDIR}/${SSHREL}/lib/libssh.a
d74 4
@


1.5
log
@turn SSH1 back on to match src/usr.bin/ssh being tested
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 2015/03/31 22:57:56 djm Exp $
d9 1
a9 1
SSH1?=		yes
@


1.4
log
@split SSH1 and OPENSSL build options like src/usr.bin/ssh and
update SSH1=no; ok markus@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 2015/01/23 21:21:23 miod Exp $
d9 1
a9 1
SSH1?=		no
@


1.3
log
@-Wpointer-sign is supported by gcc 4 only.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 2014/06/24 01:14:18 djm Exp $
d8 2
a9 1
# XXX detect from ssh binary? 
d11 1
d13 8
a20 1
CFLAGS+=	-DWITH_OPENSSL -DWITH_SSH1
@


1.2
log
@unit and fuzz tests for new key API
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2014/04/30 05:32:00 djm Exp $
a31 1
CDIAGFLAGS+=	-Wpointer-sign
d42 1
@


1.1
log
@unit tests for new buffer API; including basic fuzz testing
@
text
@d1 1
a1 1
#	$OpenBSD$
d6 8
d66 4
d72 1
@

