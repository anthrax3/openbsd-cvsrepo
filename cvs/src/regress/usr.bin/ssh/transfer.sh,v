head	1.4;
access;
symbols
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.3.0.12
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.46
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.44
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.42
	OPENBSD_5_0:1.1.0.40
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.38
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.36
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.32
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.34
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.30
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.28
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.26
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.24
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.22
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.20
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.18
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.16
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.14
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.12
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.10
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.8
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.04.30.23.34.55;	author djm;	state Exp;
branches;
next	1.3;
commitid	gKq3obgPsgFIm4Ff;

1.3
date	2015.03.03.22.35.19;	author markus;	state Exp;
branches;
next	1.2;
commitid	m52xwEKWrNr11xhO;

1.2
date	2013.05.17.04.29.14;	author dtucker;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.27.00.03.37;	author markus;	state Exp;
branches;
next	;


desc
@@


1.4
log
@eliminate explicit specification of protocol in tests and loops over
protocol. We only support SSHv2 now.
@
text
@#	$OpenBSD: transfer.sh,v 1.3 2015/03/03 22:35:19 markus Exp $
#	Placed in the Public Domain.

tid="transfer data"

rm -f ${COPY}
${SSH} -n -q -F $OBJ/ssh_proxy somehost cat ${DATA} > ${COPY}
if [ $? -ne 0 ]; then
	fail "ssh cat $DATA failed"
fi
cmp ${DATA} ${COPY}		|| fail "corrupted copy"

for s in 10 100 1k 32k 64k 128k 256k; do
	trace "dd-size ${s}"
	rm -f ${COPY}
	dd if=$DATA obs=${s} 2> /dev/null | \
		${SSH} -q -F $OBJ/ssh_proxy somehost "cat > ${COPY}"
	if [ $? -ne 0 ]; then
		fail "ssh cat $DATA failed"
	fi
	cmp $DATA ${COPY}		|| fail "corrupted copy"
done
rm -f ${COPY}
@


1.3
log
@make it possible to run tests w/o ssh1 support; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: transfer.sh,v 1.2 2013/05/17 04:29:14 dtucker Exp $
d6 9
a14 2
for p in ${SSH_PROTOCOLS}; do
	verbose "$tid: proto $p"
d16 2
a17 1
	${SSH} -n -q -$p -F $OBJ/ssh_proxy somehost cat ${DATA} > ${COPY}
d21 1
a21 12
	cmp ${DATA} ${COPY}		|| fail "corrupted copy"

	for s in 10 100 1k 32k 64k 128k 256k; do
		trace "proto $p dd-size ${s}"
		rm -f ${COPY}
		dd if=$DATA obs=${s} 2> /dev/null | \
			${SSH} -q -$p -F $OBJ/ssh_proxy somehost "cat > ${COPY}"
		if [ $? -ne 0 ]; then
			fail "ssh cat $DATA failed"
		fi
		cmp $DATA ${COPY}		|| fail "corrupted copy"
	done
@


1.2
log
@Move the setting of DATA and COPY into test-exec.sh
@
text
@d1 1
a1 1
#	$OpenBSD: transfer.sh,v 1.1 2002/03/27 00:03:37 markus Exp $
d6 1
a6 1
for p in 1 2; do
@


1.1
log
@transfer data test
@
text
@d1 1
a1 1
#	$OpenBSD: connect.sh,v 1.3 2002/02/16 01:09:47 markus Exp $
a4 3

DATA=/bin/ls
COPY=${OBJ}/copy
@

