head	1.10;
access;
symbols
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.12
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.8
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.10
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.7.0.30
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.28
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.26
	OPENBSD_5_0:1.7.0.24
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.22
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.20
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.16
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.18
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.14
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.12
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.10
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.8
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.6
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.4
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3;
locks; strict;
comment	@# @;


1.10
date	2014.01.26.10.49.17;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2013.05.17.10.35.43;	author dtucker;	state Exp;
branches;
next	1.8;

1.8
date	2013.05.17.04.29.14;	author dtucker;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.31.10.36.33;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.31.10.23.23;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.27.06.49.21;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2005.06.30.11.02.37;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.08.12.59.35;	author dtucker;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.16.13.15.09;	author dtucker;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.13.13.51.02;	author dtucker;	state Exp;
branches;
next	;


desc
@@


1.10
log
@make sure $SCP is tested on the remote end rather than whichever one
happens to be in $PATH; from portable
@
text
@#	$OpenBSD: scp.sh,v 1.9 2013/05/17 10:35:43 dtucker Exp $
#	Placed in the Public Domain.

tid="scp"

#set -x

COPY2=${OBJ}/copy2
DIR=${COPY}.dd
DIR2=${COPY}.dd2

SRC=`dirname ${SCRIPT}`
cp ${SRC}/scp-ssh-wrapper.sh ${OBJ}/scp-ssh-wrapper.scp
chmod 755 ${OBJ}/scp-ssh-wrapper.scp
scpopts="-q -S ${OBJ}/scp-ssh-wrapper.scp"
export SCP # used in scp-ssh-wrapper.scp

scpclean() {
	rm -rf ${COPY} ${COPY2} ${DIR} ${DIR2}
	mkdir ${DIR} ${DIR2}
}

verbose "$tid: simple copy local file to local file"
scpclean
$SCP $scpopts ${DATA} ${COPY} || fail "copy failed"
cmp ${DATA} ${COPY} || fail "corrupted copy"

verbose "$tid: simple copy local file to remote file"
scpclean
$SCP $scpopts ${DATA} somehost:${COPY} || fail "copy failed"
cmp ${DATA} ${COPY} || fail "corrupted copy"

verbose "$tid: simple copy remote file to local file"
scpclean
$SCP $scpopts somehost:${DATA} ${COPY} || fail "copy failed"
cmp ${DATA} ${COPY} || fail "corrupted copy"

verbose "$tid: simple copy local file to remote dir"
scpclean
cp ${DATA} ${COPY}
$SCP $scpopts ${COPY} somehost:${DIR} || fail "copy failed"
cmp ${COPY} ${DIR}/copy || fail "corrupted copy"

verbose "$tid: simple copy local file to local dir"
scpclean
cp ${DATA} ${COPY}
$SCP $scpopts ${COPY} ${DIR} || fail "copy failed"
cmp ${COPY} ${DIR}/copy || fail "corrupted copy"

verbose "$tid: simple copy remote file to local dir"
scpclean
cp ${DATA} ${COPY}
$SCP $scpopts somehost:${COPY} ${DIR} || fail "copy failed"
cmp ${COPY} ${DIR}/copy || fail "corrupted copy"

verbose "$tid: recursive local dir to remote dir"
scpclean
rm -rf ${DIR2}
cp ${DATA} ${DIR}/copy
$SCP $scpopts -r ${DIR} somehost:${DIR2} || fail "copy failed"
diff -rN ${DIR} ${DIR2} || fail "corrupted copy"

verbose "$tid: recursive local dir to local dir"
scpclean
rm -rf ${DIR2}
cp ${DATA} ${DIR}/copy
$SCP $scpopts -r ${DIR} ${DIR2} || fail "copy failed"
diff -rN ${DIR} ${DIR2} || fail "corrupted copy"

verbose "$tid: recursive remote dir to local dir"
scpclean
rm -rf ${DIR2}
cp ${DATA} ${DIR}/copy
$SCP $scpopts -r somehost:${DIR} ${DIR2} || fail "copy failed"
diff -rN ${DIR} ${DIR2} || fail "corrupted copy"

verbose "$tid: shell metacharacters"
scpclean
(cd ${DIR} && \
 touch '`touch metachartest`' && \
 $SCP $scpopts *metachar* ${DIR2} 2>/dev/null; \
 [ ! -f metachartest ] ) || fail "shell metacharacters"

if [ ! -z "$SUDO" ]; then
	verbose "$tid: skipped file after scp -p with failed chown+utimes"
	scpclean
	cp -p ${DATA} ${DIR}/copy
	cp -p ${DATA} ${DIR}/copy2
	cp ${DATA} ${DIR2}/copy
	chmod 660 ${DIR2}/copy
	$SUDO chown root ${DIR2}/copy
	$SCP -p $scpopts somehost:${DIR}/\* ${DIR2} >/dev/null 2>&1
	$SUDO diff -rN ${DIR} ${DIR2} || fail "corrupted copy"
	$SUDO rm ${DIR2}/copy
fi

for i in 0 1 2 3 4; do
	verbose "$tid: disallow bad server #$i"
	SCPTESTMODE=badserver_$i
	export DIR SCPTESTMODE
	scpclean
	$SCP $scpopts somehost:${DATA} ${DIR} >/dev/null 2>/dev/null
	[ -d {$DIR}/rootpathdir ] && fail "allows dir relative to root dir"
	[ -d ${DIR}/dotpathdir ] && fail "allows dir creation in non-recursive mode"

	scpclean
	$SCP -r $scpopts somehost:${DATA} ${DIR2} >/dev/null 2>/dev/null
	[ -d ${DIR}/dotpathdir ] && fail "allows dir creation outside of subdir"
done

verbose "$tid: detect non-directory target"
scpclean
echo a > ${COPY}
echo b > ${COPY2}
$SCP $scpopts ${DATA} ${COPY} ${COPY2}
cmp ${COPY} ${COPY2} >/dev/null && fail "corrupt target"

scpclean
rm -f ${OBJ}/scp-ssh-wrapper.exe
@


1.9
log
@use a file extention that's not special on some platforms.  from portable
@
text
@d1 1
a1 1
#	$OpenBSD: scp.sh,v 1.8 2013/05/17 04:29:14 dtucker Exp $
d16 1
@


1.8
log
@Move the setting of DATA and COPY into test-exec.sh
@
text
@d1 1
a1 1
#	$OpenBSD: scp.sh,v 1.7 2006/01/31 10:36:33 djm Exp $
d13 3
a15 3
cp ${SRC}/scp-ssh-wrapper.sh ${OBJ}/scp-ssh-wrapper.exe
chmod 755 ${OBJ}/scp-ssh-wrapper.exe
scpopts="-q -S ${OBJ}/scp-ssh-wrapper.exe"
@


1.7
log
@regress test for "scp a b c" where "c" is not a directory
@
text
@d1 1
a1 1
#	$OpenBSD: scp.sh,v 1.6 2006/01/31 10:23:23 djm Exp $
a7 2
DATA=/bin/ls
COPY=${OBJ}/copy
@


1.6
log
@regression test for CVE-2006-0225 written by dtucker@@
@
text
@d1 1
a1 1
#	$OpenBSD: scp.sh,v 1.5 2006/01/27 06:49:21 djm Exp $
d111 7
@


1.5
log
@regress test for local to local scp copies; ok dtucker@@
@
text
@d1 1
a1 1
#	$OpenBSD: scp.sh,v 1.4 2005/06/30 11:02:37 markus Exp $
d77 7
@


1.4
log
@allow SUDO=sudo; from Alexander Bluhm
@
text
@d1 1
a1 1
#	$OpenBSD: scp.sh,v 1.3 2004/07/08 12:59:35 dtucker Exp $
d24 5
d45 6
d62 7
@


1.3
log
@Regress test for bz #863 (scp double-error), requires $SUDO.  ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: scp.sh,v 1.2 2004/06/16 13:15:09 dtucker Exp $
d69 1
a69 1
	diff -rN ${DIR} ${DIR2} || fail "corrupted copy"
@


1.2
log
@Make scp -r tests use diff -rN not cmp (which won't do dirs.  ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: scp.sh,v 1.1 2004/06/13 13:51:02 dtucker Exp $
d59 13
@


1.1
log
@Add scp regression test; with & ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d48 1
d51 1
a51 1
cmp ${DIR} ${DIR2} || fail "corrupted copy"
d55 1
d58 1
a58 1
cmp ${DIR} ${DIR2} || fail "corrupted copy"
@

