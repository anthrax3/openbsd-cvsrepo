head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.4
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.5.0.12
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.54
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.52
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.48
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.46
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.44
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.42
	OPENBSD_5_0:1.4.0.40
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.38
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.36
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.32
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.34
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.30
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.28
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.26
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.24
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.22
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.20
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.18
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4;
locks; strict;
comment	@# @;


1.6
date	2017.04.30.23.34.55;	author djm;	state Exp;
branches;
next	1.5;
commitid	gKq3obgPsgFIm4Ff;

1.5
date	2015.03.03.22.35.19;	author markus;	state Exp;
branches;
next	1.4;
commitid	m52xwEKWrNr11xhO;

1.4
date	2002.03.15.13.08.56;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.01.09.47;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.15.14.41.38;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.14.23.18.00;	author markus;	state Exp;
branches;
next	;


desc
@@


1.6
log
@eliminate explicit specification of protocol in tests and loops over
protocol. We only support SSHv2 now.
@
text
@#	$OpenBSD: yes-head.sh,v 1.5 2015/03/03 22:35:19 markus Exp $
#	Placed in the Public Domain.

tid="yes pipe head"

lines=`${SSH} -F $OBJ/ssh_proxy thishost 'yes | head -2000' | (sleep 3 ; wc -l)`
if [ $? -ne 0 ]; then
	fail "yes|head test failed"
	lines = 0;
fi
if [ $lines -ne 2000 ]; then
	fail "yes|head returns $lines lines instead of 2000"
fi
@


1.5
log
@make it possible to run tests w/o ssh1 support; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: yes-head.sh,v 1.4 2002/03/15 13:08:56 markus Exp $
d6 8
a13 10
for p in ${SSH_PROTOCOLS}; do
	lines=`${SSH} -$p -F $OBJ/ssh_proxy thishost 'yes | head -2000' | (sleep 3 ; wc -l)`
	if [ $? -ne 0 ]; then
		fail "yes|head test failed"
		lines = 0;
	fi
	if [ $lines -ne 2000 ]; then
		fail "yes|head returns $lines lines instead of 2000"
	fi
done
@


1.4
log
@allow specification of binary-under-test with
	$TEST_SSH_{SSH,SSHD,SSHAGENT,SSHADD,SSHKEYGEN,SSHKEYSCAN}
@
text
@d1 1
a1 1
#	$OpenBSD: yes-head.sh,v 1.3 2002/02/16 01:09:47 markus Exp $
d6 1
a6 1
for p in 1 2; do
@


1.3
log
@$OpenBSD$, public domain
@
text
@d1 1
a1 1
#	$OpenBSD: $
d7 1
a7 1
	lines=`ssh -$p -F $OBJ/ssh_proxy thishost 'yes | head -2000' | (sleep 3 ; wc -l)`
@


1.2
log
@we don't need a listening sshd for most of our tests, just
connect client and server w/o TCP:
	ssh -o 'proxycommand sshd -i -f $OBJ/sshd_proxy'
@
text
@d1 3
@


1.1
log
@serveral tests for ssh-keygen/ssh/sshd/ssh-add/ssh-agent

note that these tests will start sshd on 127.0.0.1:4242
and will fail if the realpath of /usr/src/usr.sbin/ssh/obj/ contains
a group or world writeable directory.
@
text
@d1 1
a1 1
tid="yes|head"
d4 1
a4 1
	lines=`ssh -$p -F $OBJ/ssh_config thishost 'yes | head -2000' | (sleep 3 ; wc -l)`
@

