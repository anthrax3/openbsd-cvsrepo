head	1.2;
access;
symbols
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2016.09.14.00.45.31;	author dtucker;	state Exp;
branches;
next	1.1;
commitid	CPebn3dBaaeOhCx2;

1.1
date	2016.09.12.02.25.46;	author dtucker;	state Exp;
branches;
next	;
commitid	SOD2yl1ucoFmmKnX;


desc
@@


1.2
log
@Improve test coverage of ssh-keygen -T a bit.
@
text
@#	$OpenBSD: keygen-moduli.sh,v 1.1 2016/09/12 02:25:46 dtucker Exp $
#	Placed in the Public Domain.

tid="keygen moduli"

# Try "start at the beginning and stop after 1", "skip 1 then stop after 1"
# and "skip 2 and run to the end with checkpointing".  Since our test data
# file has 3 lines, these should always result in 1 line of output.
for i in "-J1" "-j1 -J1" "-j2 -K $OBJ/moduli.ckpt"; do
	trace "keygen $i"
	rm -f $OBJ/moduli.out $OBJ/moduli.ckpt
	${SSHKEYGEN} -T $OBJ/moduli.out -f ${SRC}/moduli.in $i 2>/dev/null || \
	    fail "keygen screen failed $i"
	lines=`wc -l <$OBJ/moduli.out`
	test "$lines" -eq "1" || fail "expected 1 line, got $lines"
done

rm -f $OBJ/moduli.out $OBJ/moduli.ckpt
@


1.1
log
@Add testcase for ssh-keygen -j, -J and -K options for moduli screening.
Does not currently test generation as that is extremely slow.
@
text
@d1 1
a1 1
#	$OpenBSD$
d6 5
a10 1
for i in 0 1 2; do
d12 2
a13 3
	${SSHKEYGEN} -T $OBJ/moduli.out -f ${SRC}/moduli.in -j$i -J1 \
	    -K $OBJ/moduli.ckpt 2>/dev/null || \
	    fail "keygen screen failed line $i"
@

