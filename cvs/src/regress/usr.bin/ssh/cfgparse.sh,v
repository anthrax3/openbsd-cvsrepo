head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.6
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5;
locks; strict;
comment	@# @;


1.6
date	2016.06.03.03.47.59;	author dtucker;	state Exp;
branches;
next	1.5;
commitid	hlWXsGWyHiqRC01e;

1.5
date	2015.05.29.03.05.13;	author djm;	state Exp;
branches;
next	1.4;
commitid	X0iVks5UmIRx58jY;

1.4
date	2015.05.04.01.51.39;	author dtucker;	state Exp;
branches;
next	1.3;
commitid	N9TSJOzPpCnID8pp;

1.3
date	2015.05.04.01.47.53;	author dtucker;	state Exp;
branches;
next	1.2;
commitid	5aPlxWD9faJ8CZ6h;

1.2
date	2015.04.29.05.23.27;	author dtucker;	state Exp;
branches;
next	1.1;
commitid	swMPmT7Y1AmEHdmV;

1.1
date	2015.04.23.05.01.19;	author dtucker;	state Exp;
branches;
next	;
commitid	Z5sVeBHgp15qZPLk;


desc
@@


1.6
log
@Add 'sshd' to the test ID as I'm about to add a similar set for ssh.
@
text
@#	$OpenBSD: cfgparse.sh,v 1.5 2015/05/29 03:05:13 djm Exp $
#	Placed in the Public Domain.

tid="sshd config parse"

# We need to use the keys generated for the regression test because sshd -T
# will fail if we're not running with SUDO (no permissions for real keys) or
# if we are # running tests on a system that has never had sshd installed
# (keys won't exist).

grep "HostKey " $OBJ/sshd_config > $OBJ/sshd_config_minimal
SSHD_KEYS="`cat $OBJ/sshd_config_minimal`"

verbose "reparse minimal config"
($SUDO ${SSHD} -T -f $OBJ/sshd_config_minimal >$OBJ/sshd_config.1 &&
 $SUDO ${SSHD} -T -f $OBJ/sshd_config.1 >$OBJ/sshd_config.2 &&
 diff $OBJ/sshd_config.1 $OBJ/sshd_config.2) || fail "reparse minimal config"

verbose "reparse regress config"
($SUDO ${SSHD} -T -f $OBJ/sshd_config >$OBJ/sshd_config.1 &&
 $SUDO ${SSHD} -T -f $OBJ/sshd_config.1 >$OBJ/sshd_config.2 &&
 diff $OBJ/sshd_config.1 $OBJ/sshd_config.2) || fail "reparse regress config"

verbose "listenaddress order"
# expected output
cat > $OBJ/sshd_config.0 <<EOD
listenaddress 1.2.3.4:1234
listenaddress 1.2.3.4:5678
listenaddress [::1]:1234
listenaddress [::1]:5678
EOD
# test input sets.  should all result in the output above.
# test 1: addressfamily and port first
cat > $OBJ/sshd_config.1 <<EOD
${SSHD_KEYS}
addressfamily any
port 1234
port 5678
listenaddress 1.2.3.4
listenaddress ::1
EOD
($SUDO ${SSHD} -T -f $OBJ/sshd_config.1 | \
 grep 'listenaddress ' >$OBJ/sshd_config.2 &&
 diff $OBJ/sshd_config.0 $OBJ/sshd_config.2) || \
 fail "listenaddress order 1"
# test 2: listenaddress first
cat > $OBJ/sshd_config.1 <<EOD
${SSHD_KEYS}
listenaddress 1.2.3.4
listenaddress ::1
port 1234
port 5678
addressfamily any
EOD
($SUDO ${SSHD} -T -f $OBJ/sshd_config.1 | \
 grep 'listenaddress ' >$OBJ/sshd_config.2 &&
 diff $OBJ/sshd_config.0 $OBJ/sshd_config.2) || \
 fail "listenaddress order 2"

# cleanup
rm -f $OBJ/sshd_config.[012]
@


1.5
log
@make this work without SUDO set; ok dtucker@@
@
text
@d1 1
a1 1
#	$OpenBSD: cfgparse.sh,v 1.4 2015/05/04 01:51:39 dtucker Exp $
d4 1
a4 1
tid="config parse"
@


1.4
log
@Specify regression test host keys so that this test will work without
SUDO (because it can't read the real host keys) and in -portable on
systems where sshd hasn't been installed yet (because the keys don't
exist yet).
@
text
@d1 1
a1 1
#	$OpenBSD: cfgparse.sh,v 1.3 2015/05/04 01:47:53 dtucker Exp $
d48 1
@


1.3
log
@Use diff w/out -u for better portability
@
text
@d1 1
a1 1
#	$OpenBSD: cfgparse.sh,v 1.2 2015/04/29 05:23:27 dtucker Exp $
d6 10
a15 2
verbose "reparse default config"
($SUDO ${SSHD} -T -f /dev/null >$OBJ/sshd_config.1 &&
d17 1
a17 1
 diff $OBJ/sshd_config.1 $OBJ/sshd_config.2) || fail "reparse default config"
d35 1
@


1.2
log
@Add tests for ListenAddress/Port/AddressFamily in alternate orders.
@
text
@d1 1
a1 1
#	$OpenBSD: cfgparse.sh,v 1.1 2015/04/23 05:01:19 dtucker Exp $
d35 1
a35 1
 diff -u $OBJ/sshd_config.0 $OBJ/sshd_config.2) || \
d47 1
a47 1
 diff -u $OBJ/sshd_config.0 $OBJ/sshd_config.2) || \
@


1.1
log
@Add a simple regression test for sshd's configuration parser.  Right now,
all it does is run the output of sshd -T back through itself and ensure
the output is valid and invariant.
@
text
@d1 1
a1 1
#	$OpenBSD$
d16 36
a51 1
rm -f $OBJ/sshd_config.[12]
@

