head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.18
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.14
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.16
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.12
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.10
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.10
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2012.05.13.01.42.32;	author dtucker;	state Exp;
branches;
next	1.3;

1.3
date	2010.02.09.04.57.36;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.07.22.17.48;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2008.06.10.05.23.32;	author dtucker;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Add "Match LocalAddress" and "Match LocalPort" to sshd and adjust tests
to match.  Feedback and ok djm@@ markus@@.
@
text
@#	$OpenBSD: addrmatch.sh,v 1.3 2010/02/09 04:57:36 djm Exp $
#	Placed in the Public Domain.

tid="address match"

mv $OBJ/sshd_proxy $OBJ/sshd_proxy_bak

run_trial()
{
	user="$1"; addr="$2"; host="$3"; laddr="$4"; lport="$5"
	expected="$6"; descr="$7"

	verbose "test $descr for $user $addr $host"
	result=`${SSHD} -f $OBJ/sshd_proxy -T \
	    -C user=${user},addr=${addr},host=${host},laddr=${laddr},lport=${lport} | \
	    awk '/^forcecommand/ {print $2}'`
	if [ "$result" != "$expected" ]; then
		fail "failed '$descr' expected $expected got $result"
	fi
}

cp $OBJ/sshd_proxy_bak $OBJ/sshd_proxy
cat >>$OBJ/sshd_proxy <<EOD
ForceCommand nomatch
Match Address 192.168.0.0/16,!192.168.30.0/24,10.0.0.0/8,host.example.com
	ForceCommand match1
Match Address 1.1.1.1,::1,!::3,2000::/16
	ForceCommand match2
Match LocalAddress 127.0.0.1,::1
	ForceCommand match3
Match LocalPort 5678
	ForceCommand match4
EOD

run_trial user 192.168.0.1 somehost 1.2.3.4 1234 match1 "first entry"
run_trial user 192.168.30.1 somehost 1.2.3.4 1234 nomatch "negative match"
run_trial user 19.0.0.1 somehost 1.2.3.4 1234 nomatch "no match"
run_trial user 10.255.255.254 somehost 1.2.3.4 1234 match1 "list middle"
run_trial user 192.168.30.1 192.168.0.1 1.2.3.4 1234 nomatch "faked IP in hostname"
run_trial user 1.1.1.1 somehost.example.com 1.2.3.4 1234 match2 "bare IP4 address"
run_trial user 19.0.0.1 somehost 127.0.0.1 1234 match3 "localaddress"
run_trial user 19.0.0.1 somehost 1.2.3.4 5678 match4 "localport"

run_trial user ::1 somehost.example.com ::2 1234 match2 "bare IP6 address"
run_trial user ::2 somehost.exaple.com ::2 1234 nomatch "deny IPv6"
run_trial user ::3 somehost ::2 1234 nomatch "IP6 negated"
run_trial user ::4 somehost ::2 1234 nomatch "IP6 no match"
run_trial user 2000::1 somehost ::2 1234 match2 "IP6 network"
run_trial user 2001::1 somehost ::2 1234 nomatch "IP6 network"
run_trial user ::5 somehost ::1 1234 match3 "IP6 localaddress"
run_trial user ::5 somehost ::2 5678 match4 "IP6 localport"

cp $OBJ/sshd_proxy_bak $OBJ/sshd_proxy
rm $OBJ/sshd_proxy_bak
@


1.3
log
@clean up droppings
@
text
@d1 1
a1 1
#	$OpenBSD: addrmatch.sh,v 1.2 2008/12/07 22:17:48 djm Exp $
d10 2
a11 1
	user="$1"; addr="$2"; host="$3"; expected="$4"; descr="$5"
d15 2
a16 2
	    -C user=${user},addr=${addr},host=${host} | \
	    awk '/^passwordauthentication/ {print $2}'`
d18 1
a18 1
		fail "failed for $user $addr $host: expected $expected, got $result"
d24 1
a24 1
PasswordAuthentication no
d26 1
a26 1
	PasswordAuthentication yes
d28 5
a32 1
	PasswordAuthentication yes
d35 17
a51 12
run_trial user 192.168.0.1 somehost yes		"permit, first entry"
run_trial user 192.168.30.1 somehost no		"deny, negative match"
run_trial user 19.0.0.1 somehost no		"deny, no match"
run_trial user 10.255.255.254 somehost yes	"permit, list middle"
run_trial user 192.168.30.1 192.168.0.1 no	"deny, faked IP in hostname"
run_trial user 1.1.1.1 somehost.example.com yes	"permit, bare IP4 address"
run_trial user ::1 somehost.example.com	 yes	"permit, bare IP6 address"
run_trial user ::2 somehost.exaple.com no	"deny IPv6"
run_trial user ::3 somehost no			"deny IP6 negated"
run_trial user ::4 somehost no			"deny, IP6 no match"
run_trial user 2000::1 somehost yes		"permit, IP6 network"
run_trial user 2001::1 somehost no		"deny, IP6 network"
@


1.2
log
@match string "passwordauthentication" only at start of line, not anywhere
in sshd -T output
@
text
@d1 1
a1 1
#	$OpenBSD: addrmatch.sh,v 1.1 2008/06/10 05:23:32 dtucker Exp $
d6 1
a6 1
mv $OBJ/sshd_proxy $OBJ/sshd_proxy_orig
d21 1
a21 1
cp $OBJ/sshd_proxy_orig $OBJ/sshd_proxy
d42 3
@


1.1
log
@Regress test for Match CIDR rules.  ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d15 1
a15 1
	    awk '/passwordauthentication/ {print $2}'`
@

