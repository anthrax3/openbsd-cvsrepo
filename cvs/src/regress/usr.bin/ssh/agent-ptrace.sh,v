head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.1.0.44
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.42
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.40
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.38
	OPENBSD_5_0:1.1.0.36
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.34
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.32
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.28
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.30
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.26
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.24
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.22
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.20
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.18
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.16
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.14
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.12
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.10
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.8
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.6
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2015.09.11.04.55.01;	author djm;	state Exp;
branches;
next	1.2;
commitid	Atrkuhvtz46YbH6r;

1.2
date	2014.02.27.21.21.25;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2002.12.09.15.38.30;	author markus;	state Exp;
branches;
next	;


desc
@@


1.3
log
@skip if running as root; many systems (inc OpenBSD) allow
root to ptrace arbitrary processes
@
text
@#	$OpenBSD: agent-ptrace.sh,v 1.2 2014/02/27 21:21:25 djm Exp $
#	Placed in the Public Domain.

tid="disallow agent ptrace attach"

if [ "x$USER" = "xroot" ]; then
	echo "Skipped: running as root"
	exit 0
fi

trace "start agent"
eval `${SSHAGENT} -s` > /dev/null
r=$?
if [ $r -ne 0 ]; then
	fail "could not start ssh-agent: exit code $r"
else
	# ls -l ${SSH_AUTH_SOCK}
	gdb ${SSHAGENT} ${SSH_AGENT_PID} > ${OBJ}/gdb.out 2>&1 << EOF
		quit
EOF
	r=$?
	if [ $r -ne 0 ]; then
		fail "gdb failed: exit code $r"
	fi
	grep -q 'ptrace: Operation not permitted.' ${OBJ}/gdb.out
	r=$?
	rm -f ${OBJ}/gdb.out
	if [ $r -ne 0 ]; then
		fail "ptrace succeeded?: exit code $r"
	fi

	trace "kill agent"
	${SSHAGENT} -k > /dev/null
fi
@


1.2
log
@keep return values that are printed in error messages;
from portable
@
text
@d1 1
a1 1
#	$OpenBSD: agent-ptrace.sh,v 1.1 2002/12/09 15:38:30 markus Exp $
d5 5
@


1.1
log
@make sure gdb cannot attach to a running agent
@
text
@d1 1
a1 1
#	$OpenBSD: $
d16 3
a18 2
	if [ $? -ne 0 ]; then
		fail "gdb failed: exit code $?"
@

