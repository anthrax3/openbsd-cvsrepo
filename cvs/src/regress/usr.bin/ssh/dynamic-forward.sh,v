head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.8
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.4
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.4.0.28
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.26
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.22
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.24
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.20
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.18
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.16
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.14
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.12
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.10
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.8
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2;
locks; strict;
comment	@# @;


1.11
date	2015.03.03.22.35.19;	author markus;	state Exp;
branches;
next	1.10;
commitid	m52xwEKWrNr11xhO;

1.10
date	2013.05.17.04.29.14;	author dtucker;	state Exp;
branches;
next	1.9;

1.9
date	2011.06.03.00.29.52;	author dtucker;	state Exp;
branches;
next	1.8;

1.8
date	2011.05.31.02.03.34;	author dtucker;	state Exp;
branches;
next	1.7;

1.7
date	2011.05.31.02.01.58;	author dtucker;	state Exp;
branches;
next	1.6;

1.6
date	2011.05.20.06.32.30;	author dtucker;	state Exp;
branches;
next	1.5;

1.5
date	2011.05.20.05.19.50;	author dtucker;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.22.22.55.56;	author dtucker;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.28.12.16.57;	author dtucker;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.03.08.21.46;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.26.14.23.10;	author markus;	state Exp;
branches;
next	;


desc
@@


1.11
log
@make it possible to run tests w/o ssh1 support; ok djm@@
@
text
@#	$OpenBSD: dynamic-forward.sh,v 1.10 2013/05/17 04:29:14 dtucker Exp $
#	Placed in the Public Domain.

tid="dynamic forwarding"

FWDPORT=`expr $PORT + 1`

if [ -x "`which nc`" ] && nc -h 2>&1 | grep "proxy address" >/dev/null; then
	proxycmd="nc -x 127.0.0.1:$FWDPORT -X"
elif [ -x "`which connect`" ]; then
	proxycmd="connect -S 127.0.0.1:$FWDPORT -"
else
	echo "skipped (no suitable ProxyCommand found)"
	exit 0
fi
trace "will use ProxyCommand $proxycmd"

start_sshd

for p in ${SSH_PROTOCOLS}; do
	n=0
	error="1"
	trace "start dynamic forwarding, fork to background"
	while [ "$error" -ne 0 -a "$n" -lt 3 ]; do
		n=`expr $n + 1`
		${SSH} -$p -F $OBJ/ssh_config -f -D $FWDPORT -q \
		    -oExitOnForwardFailure=yes somehost exec sh -c \
			\'"echo \$\$ > $OBJ/remote_pid; exec sleep 444"\'
		error=$?
		if [ "$error" -ne 0 ]; then
			trace "forward failed proto $p attempt $n err $error"
			sleep $n
		fi
	done
	if [ "$error" -ne 0 ]; then
		fatal "failed to start dynamic forwarding proto $p"
	fi

	for s in 4 5; do
	    for h in 127.0.0.1 localhost; do
		trace "testing ssh protocol $p socks version $s host $h"
		${SSH} -F $OBJ/ssh_config \
			-o "ProxyCommand ${proxycmd}${s} $h $PORT" \
			somehost cat ${DATA} > ${COPY}
		test -f ${COPY}	 || fail "failed copy ${DATA}"
		cmp ${DATA} ${COPY} || fail "corrupted copy of ${DATA}"
	    done
	done

	if [ -f $OBJ/remote_pid ]; then
		remote=`cat $OBJ/remote_pid`
		trace "terminate remote shell, pid $remote"
		if [ $remote -gt 1 ]; then
			kill -HUP $remote
		fi
	else
		fail "no pid file: $OBJ/remote_pid"
	fi
done
@


1.10
log
@Move the setting of DATA and COPY into test-exec.sh
@
text
@d1 1
a1 1
#	$OpenBSD: dynamic-forward.sh,v 1.9 2011/06/03 00:29:52 dtucker Exp $
d20 1
a20 1
for p in 1 2; do
@


1.9
log
@Retry establishing the port forwarding after a small delay, should make
the tests less flaky when the previous test is slow to shut down and free
up the port.
@
text
@d1 1
a1 1
#	$OpenBSD: dynamic-forward.sh,v 1.8 2011/05/31 02:03:34 dtucker Exp $
d44 3
a46 3
			somehost cat /bin/ls > $OBJ/ls.copy
		test -f $OBJ/ls.copy	 || fail "failed copy /bin/ls"
		cmp /bin/ls $OBJ/ls.copy || fail "corrupted copy of /bin/ls"
@


1.8
log
@work around startup and teardown races; caught by deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: dynamic-forward.sh,v 1.4 2004/06/22 22:55:56 dtucker Exp $
d21 2
d24 14
a37 3
	${SSH} -$p -F $OBJ/ssh_config -f -D $FWDPORT -q \
		-oExitOnForwardFailure=yes somehost \
		exec sh -c \'"echo \$\$ > $OBJ/remote_pid; exec sleep 444"\'
a55 1
		sleep 1
@


1.7
log
@back out revs 1.6 and 1.5 since it's not reliable
@
text
@d22 2
a23 1
	${SSH} -$p -F $OBJ/ssh_config -f -D $FWDPORT -q somehost \
d43 1
@


1.6
log
@fix dumb error in dynamic-forward test
@
text
@d1 1
a1 1
#	$OpenBSD: dynamic-forward.sh,v 1.5 2011/05/20 05:19:50 dtucker Exp $
d22 2
a23 15
	rm -f $OBJ/remote_pid
	${SSH} -$p -F $OBJ/ssh_config -D $FWDPORT -q somehost \
		exec sh -c \'"echo \$\$ > $OBJ/remote_pid; exec sleep 444"\' &
	client_pid=$!

	# Wait for ssh to start
	n=0
	while test ! -f $OBJ/remote_pid; do
		sleep 1
		n=`expr $n + 1`
		if test $n -gt 60; then
			kill $client_pid
			fail "Timed out waiting for client to connect"
		fi
	done
a41 1
		rm -f $OBJ/remote_pid
a44 3

	# Wait for listening ssh to terminate
	wait
@


1.5
log
@Prevent races in dynamic forwarding test; ok djm
@
text
@d1 1
a1 1
#	$OpenBSD: dynamic-forward.sh,v 1.4 2004/06/22 22:55:56 dtucker Exp $
d32 1
a32 1
		if test $n > 60; then
@


1.4
log
@Allow setting of port for regress from TEST_SSH_PORT variable; ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: dynamic-forward.sh,v 1.3 2004/02/28 12:16:57 dtucker Exp $
d22 15
a36 2
	${SSH} -$p -F $OBJ/ssh_config -f -D $FWDPORT -q somehost \
		exec sh -c \'"echo \$\$ > $OBJ/remote_pid; exec sleep 444"\'
d55 1
d59 3
@


1.3
log
@Make dynamic-forward understand nc's new output.  ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: dynamic-forward.sh,v 1.2 2003/07/03 08:21:46 markus Exp $
d6 1
a6 2
PORT=4242
FWDPORT=4243
@


1.2
log
@add socks5; speedup; reformat; based on patch from dtucker@@zip.com.au
@
text
@d1 1
a1 1
#	$OpenBSD: dynamic-forward.sh,v 1.1 2003/06/26 14:23:10 markus Exp $
d9 1
a9 1
if [ -x `which nc` ] && nc -h 2>&1 | grep "x proxy address" >/dev/null; then
d11 1
a11 1
elif [ -x `which connect` ]; then
@


1.1
log
@test -D with socks; dtucker@@zip.com.au
@
text
@d1 1
a1 1
#	$OpenBSD: dynamic-forward.sh,v 1.4 2002/03/15 13:08:56 markus Exp $
a21 3
  for s in 4; do
    for h in 127.0.0.1 localhost; do
	trace "testing ssh protocol $p socks version $s host $h"
d23 2
a24 1
	${SSH} -$p -F $OBJ/ssh_config -f -D $FWDPORT somehost sleep 10
d26 20
a45 9
	trace "transfer over forwarded channel and check result"
	${SSH} -F $OBJ/ssh_config -o "ProxyCommand ${proxycmd}${s} $h $PORT" \
		somehost cat /bin/ls > $OBJ/ls.copy
	test -f $OBJ/ls.copy	 || fail "failed copy /bin/ls"
	cmp /bin/ls $OBJ/ls.copy || fail "corrupted copy of /bin/ls"

	sleep 10
    done
  done
@

