head	1.13;
access;
symbols
	OPENBSD_6_0:1.13.0.6
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.4
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.11.0.6
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.16
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.14
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.10
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.12
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.13
date	2015.03.24.20.22.17;	author markus;	state Exp;
branches;
next	1.12;
commitid	gbmXWxEI6RvKxhBC;

1.12
date	2015.03.03.22.35.19;	author markus;	state Exp;
branches;
next	1.11;
commitid	m52xwEKWrNr11xhO;

1.11
date	2013.11.21.03.18.51;	author djm;	state Exp;
branches;
next	1.10;

1.10
date	2013.11.07.02.48.38;	author dtucker;	state Exp;
branches;
next	1.9;

1.9
date	2013.05.17.04.29.14;	author dtucker;	state Exp;
branches;
next	1.8;

1.8
date	2013.05.17.00.37.40;	author dtucker;	state Exp;
branches;
next	1.7;

1.7
date	2013.01.12.11.23.53;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2012.10.05.02.20.48;	author dtucker;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.28.05.07.45;	author dtucker;	state Exp;
branches;
next	1.4;

1.4
date	2011.08.02.01.23.41;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.07.19.41.46;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.24.04.09.54;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.25.22.11.49;	author markus;	state Exp;
branches;
next	;


desc
@@


1.13
log
@use ${SSH} for -Q instead of installed ssh
@
text
@#	$OpenBSD: cipher-speed.sh,v 1.12 2015/03/03 22:35:19 markus Exp $
#	Placed in the Public Domain.

tid="cipher speed"

getbytes ()
{
	sed -n '/transferred/s/.*secs (\(.* bytes.sec\).*/\1/p'
}

tries="1 2"

for c in `${SSH} -Q cipher`; do n=0; for m in `${SSH} -Q mac`; do
	trace "proto 2 cipher $c mac $m"
	for x in $tries; do
		printf "$c/$m:\t"
		( ${SSH} -o 'compression no' \
			-F $OBJ/ssh_proxy -2 -m $m -c $c somehost \
			exec sh -c \'"dd of=/dev/null obs=32k"\' \
		< ${DATA} ) 2>&1 | getbytes

		if [ $? -ne 0 ]; then
			fail "ssh -2 failed with mac $m cipher $c"
		fi
	done
	# No point trying all MACs for AEAD ciphers since they are ignored.
	if ${SSH} -Q cipher-auth | grep "^${c}\$" >/dev/null 2>&1 ; then
		break
	fi
	n=$(($n + 1))
done; done

if ssh_version 1; then
	ciphers="3des blowfish"
else
	ciphers=""
fi
for c in $ciphers; do
	trace "proto 1 cipher $c"
	for x in $tries; do
		printf "$c:\t"
		( ${SSH} -o 'compression no' \
			-F $OBJ/ssh_proxy -1 -c $c somehost \
			exec sh -c \'"dd of=/dev/null obs=32k"\' \
		< ${DATA} ) 2>&1 | getbytes
		if [ $? -ne 0 ]; then
			fail "ssh -1 failed with cipher $c"
		fi
	done
done
@


1.12
log
@make it possible to run tests w/o ssh1 support; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.11 2013/11/21 03:18:51 djm Exp $
d27 1
a27 1
	if ssh -Q cipher-auth | grep "^${c}\$" >/dev/null 2>&1 ; then
@


1.11
log
@use new "ssh -Q cipher-auth" query to obtain lists of authenticated
encryption ciphers instead of specifying them manually; ensures that
the new chacha20poly1305@@openssh.com mode is tested;

ok markus@@ and naddy@@ as part of the diff to add
chacha20poly1305@@openssh.com
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.10 2013/11/07 02:48:38 dtucker Exp $
d33 5
a37 1
ciphers="3des blowfish"
@


1.10
log
@Use ssh -Q instead of hardcoding lists of ciphers or MACs.
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.9 2013/05/17 04:29:14 dtucker Exp $
d26 4
a29 4
	# No point trying all MACs for GCM since they are ignored.
	case $c in
	aes*-gcm@@openssh.com)	test $n -gt 0 && break;;
	esac
@


1.9
log
@Move the setting of DATA and COPY into test-exec.sh
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.8 2013/05/17 00:37:40 dtucker Exp $
d13 1
a13 9
ciphers="aes128-cbc 3des-cbc blowfish-cbc cast128-cbc 
	arcfour128 arcfour256 arcfour 
	aes192-cbc aes256-cbc rijndael-cbc@@lysator.liu.se
	aes128-ctr aes192-ctr aes256-ctr
	aes128-gcm@@openssh.com aes256-gcm@@openssh.com"
macs="hmac-sha1 hmac-md5 umac-64@@openssh.com umac-128@@openssh.com
	hmac-sha1-96 hmac-md5-96 hmac-sha2-256 hmac-sha2-512"

for c in $ciphers; do n=0; for m in $macs; do
@


1.8
log
@replace 'echo -n' with 'printf' since it's more portable
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.7 2013/01/12 11:23:53 djm Exp $
a11 2
DATA=/bin/ls
DATA=/bsd
@


1.7
log
@test AES-GCM modes; feedback markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.6 2012/10/05 02:20:48 dtucker Exp $
d26 1
a26 1
		echo -n "$c/$m:\t"
d47 1
a47 1
		echo -n "$c:\t"
@


1.6
log
@Add umac-128@@openssh.com to the list of MACs to be tested
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.5 2012/06/28 05:07:45 dtucker Exp $
d18 2
a19 1
	aes128-ctr aes192-ctr aes256-ctr"
d23 1
a23 1
for c in $ciphers; do for m in $macs; do
d36 5
@


1.5
log
@Remove hmac-sha2-256-96 and hmac-sha2-512-96 MACs since they were removed
from draft6 of the spec and will not be in the RFC when published.  Patch
from mdb at juniper net via bz#2023, ok markus.
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.4 2011/08/02 01:23:41 djm Exp $
d19 2
a20 2
macs="hmac-sha1 hmac-md5 umac-64@@openssh.com hmac-sha1-96 hmac-md5-96
	hmac-sha2-256 hmac-sha2-512"
@


1.4
log
@add SHA256/SHA512 based HMAC modes
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.3 2007/06/07 19:41:46 pvalchev Exp $
d20 1
a20 1
	hmac-sha2-256 hmac-sha2-256-96 hmac-sha2-512 hmac-sha2-512-96"
@


1.3
log
@test umac-64@@openssh.com
ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.2 2005/05/24 04:09:54 djm Exp $
a14 1
macs="hmac-sha1 hmac-md5 umac-64@@openssh.com hmac-sha1-96 hmac-md5-96"
d16 5
a20 1
	arcfour128 arcfour256 arcfour aes192-cbc aes256-cbc aes128-ctr"
@


1.2
log
@add new arcfour modes
@
text
@d1 1
a1 1
#	$OpenBSD: cipher-speed.sh,v 1.1 2003/11/25 22:11:49 markus Exp $
d15 1
a15 1
macs="hmac-sha1 hmac-md5 hmac-sha1-96 hmac-md5-96"
@


1.1
log
@test cipher speed for different hmac/cipher combinations.
disabled for now, use
	make LTESTS=cipher-speed t-cipher-speed
to run the test
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.5 2002/02/18 12:52:26 markus Exp $
d17 1
a17 1
	arcfour aes192-cbc aes256-cbc aes128-ctr"
@

