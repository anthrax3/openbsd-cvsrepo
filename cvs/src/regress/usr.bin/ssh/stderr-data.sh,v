head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.2
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.4.0.12
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.46
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.44
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.42
	OPENBSD_5_0:1.2.0.40
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.38
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.36
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.32
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.34
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.30
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.28
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.26
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.24
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.22
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.20
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.18
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.16
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.14
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.12
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.10
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2017.04.30.23.34.55;	author djm;	state Exp;
branches;
next	1.4;
commitid	gKq3obgPsgFIm4Ff;

1.4
date	2015.03.03.22.35.19;	author markus;	state Exp;
branches;
next	1.3;
commitid	m52xwEKWrNr11xhO;

1.3
date	2013.05.17.04.29.14;	author dtucker;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.27.22.39.52;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.23.16.38.09;	author markus;	state Exp;
branches;
next	;


desc
@@


1.5
log
@eliminate explicit specification of protocol in tests and loops over
protocol. We only support SSHv2 now.
@
text
@#	$OpenBSD: stderr-data.sh,v 1.4 2015/03/03 22:35:19 markus Exp $
#	Placed in the Public Domain.

tid="stderr data transfer"

for n in '' -n; do
	verbose "test $tid: ($n)"
	${SSH} $n -F $OBJ/ssh_proxy otherhost exec \
	    sh -c \'"exec > /dev/null; sleep 3; cat ${DATA} 1>&2 $s"\' \
		2> ${COPY}
	r=$?
	if [ $r -ne 0 ]; then
		fail "ssh failed with exit code $r"
	fi
	cmp ${DATA} ${COPY}	|| fail "stderr corrupt"
	rm -f ${COPY}

	${SSH} $n -F $OBJ/ssh_proxy otherhost exec \
	    sh -c \'"echo a; exec > /dev/null; sleep 3; cat ${DATA} 1>&2 $s"\' \
		> /dev/null 2> ${COPY}
	r=$?
	if [ $r -ne 0 ]; then
		fail "ssh failed with exit code $r"
	fi
	cmp ${DATA} ${COPY}	|| fail "stderr corrupt"
	rm -f ${COPY}
done
@


1.4
log
@make it possible to run tests w/o ssh1 support; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: stderr-data.sh,v 1.3 2013/05/17 04:29:14 dtucker Exp $
d7 3
a9 4
for p in ${SSH_PROTOCOLS}; do
	verbose "test $tid: proto $p ($n)"
	${SSH} $n -$p -F $OBJ/ssh_proxy otherhost \
		exec sh -c \'"exec > /dev/null; sleep 3; cat ${DATA} 1>&2 $s"\' \
d18 2
a19 2
	${SSH} $n -$p -F $OBJ/ssh_proxy otherhost \
		exec sh -c \'"echo a; exec > /dev/null; sleep 3; cat ${DATA} 1>&2 $s"\' \
a26 1
done
@


1.3
log
@Move the setting of DATA and COPY into test-exec.sh
@
text
@d1 1
a1 1
#	$OpenBSD: stderr-data.sh,v 1.2 2002/03/27 22:39:52 markus Exp $
d7 1
a7 1
for p in 1 2; do
@


1.2
log
@typos
@
text
@d1 1
a1 1
#	$OpenBSD: stderr-data.sh,v 1.1 2002/03/23 16:38:09 markus Exp $
a4 4

DATA=/bin/ls
COPY=${OBJ}/copy
rm -f ${COPY}
@


1.1
log
@some tests for stderr handling
@
text
@d1 1
a1 1
#	$OpenBSD: exit-status.sh,v 1.6 2002/03/15 13:08:56 markus Exp $
d25 1
a25 1
		>- 2> ${COPY}
@

