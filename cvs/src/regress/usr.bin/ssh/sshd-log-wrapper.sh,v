head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.6
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.14
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.10
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.34
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.32
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.30
	OPENBSD_5_0:1.2.0.28
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.26
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.24
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.22
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.18
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.16
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.14
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.12
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2016.11.25.02.56.49;	author dtucker;	state Exp;
branches;
next	1.3;
commitid	GBjpW35Acgyi33yX;

1.3
date	2013.04.07.02.16.03;	author dtucker;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.27.11.40.30;	author dtucker;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.27.11.33.30;	author dtucker;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Reverse args to sshd-log-wrapper.  Matches change in portable, where it
allows sshd do be optionally run under Valgrind.
@
text
@#!/bin/sh
#       $OpenBSD: sshd-log-wrapper.sh,v 1.3 2013/04/07 02:16:03 dtucker Exp $
#       Placed in the Public Domain.
#
# simple wrapper for sshd proxy mode to catch stderr output
# sh sshd-log-wrapper.sh /path/to/logfile /path/to/sshd [args...]

log=$1
shift

exec "$@@" -E$log
@


1.3
log
@use -E option for ssh and sshd to write debuging logs to ssh{,d}.log and
save the output from any failing tests.  If a test fails the debug output
from ssh and sshd for the failing tests (and only the failing tests) should
be available in failed-ssh{,d}.log.
@
text
@d2 1
a2 1
#       $OpenBSD: sshd-log-wrapper.sh,v 1.2 2005/02/27 11:40:30 dtucker Exp $
d6 1
a6 1
# sh sshd-log-wrapper.sh /path/to/sshd /path/to/logfile
d8 1
a8 3
sshd=$1
log=$2
shift
d11 1
a11 1
exec $sshd -E$log $@@
@


1.2
log
@Don't truncate logfile here either
@
text
@d2 1
a2 1
#       $OpenBSD: sshd-log-wrapper.sh,v 1.1 2005/02/27 11:33:30 dtucker Exp $
d13 1
a13 1
exec $sshd $@@ -e 2>>$log
@


1.1
log
@Add optional capability to log output from regress commands; ok markus@@
Use with: make TEST_SSH_LOGFILE=/tmp/regress.log
@
text
@d2 1
a2 1
#       $OpenBSD$
d13 1
a13 1
exec $sshd $@@ -e 2>$log
@

