head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.2
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.8.0.8
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.4
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.8
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.5.0.34
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.32
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.30
	OPENBSD_5_0:1.5.0.28
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.26
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.24
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.20
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.22
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.18
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.16
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.14
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.12
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.10
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.8
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4;
locks; strict;
comment	@# @;


1.10
date	2016.12.16.01.06.27;	author dtucker;	state Exp;
branches;
next	1.9;
commitid	Q8QqRgY9IYItm25a;

1.9
date	2016.12.15.23.50.37;	author dtucker;	state Exp;
branches;
next	1.8;
commitid	LNS0R2AO7nX40KwI;

1.8
date	2015.03.03.22.35.19;	author markus;	state Exp;
branches;
next	1.7;
commitid	m52xwEKWrNr11xhO;

1.7
date	2013.05.17.10.23.52;	author dtucker;	state Exp;
branches;
next	1.6;

1.6
date	2013.05.17.04.29.14;	author dtucker;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.08.02.01.50;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.26.06.16.07;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.25.01.32.44;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.25.01.25.11;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.24.19.32.00;	author djm;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Move the "stop sshd" code into its own helper function.  Patch from
Zev Weiss <zev at bewilderbeest.net>, ok djm@@
@
text
@#	$OpenBSD: reexec.sh,v 1.9 2016/12/15 23:50:37 dtucker Exp $
#	Placed in the Public Domain.

tid="reexec tests"

SSHD_ORIG=$SSHD
SSHD_COPY=$OBJ/sshd

# Start a sshd and then delete it
start_sshd_copy ()
{
	cp $SSHD_ORIG $SSHD_COPY
	SSHD=$SSHD_COPY
	start_sshd
	SSHD=$SSHD_ORIG
}

# Do basic copy tests
copy_tests ()
{
	rm -f ${COPY}
	for p in ${SSH_PROTOCOLS} ; do
		verbose "$tid: proto $p"
		${SSH} -nqo "Protocol=$p" -F $OBJ/ssh_config somehost \
		    cat ${DATA} > ${COPY}
		if [ $? -ne 0 ]; then
			fail "ssh cat $DATA failed"
		fi
		cmp ${DATA} ${COPY}		|| fail "corrupted copy"
		rm -f ${COPY}
	done
}

verbose "test config passing"

cp $OBJ/sshd_config $OBJ/sshd_config.orig
start_sshd
echo "InvalidXXX=no" >> $OBJ/sshd_config

copy_tests

stop_sshd

cp $OBJ/sshd_config.orig $OBJ/sshd_config

verbose "test reexec fallback"

start_sshd_copy
rm -f $SSHD_COPY

copy_tests

stop_sshd

verbose "test reexec fallback without privsep"

cp $OBJ/sshd_config.orig $OBJ/sshd_config
echo "UsePrivilegeSeparation=no" >> $OBJ/sshd_config

start_sshd_copy
rm -f $SSHD_COPY

copy_tests

stop_sshd


@


1.9
log
@Use $SUDO to read pidfile in case root's umask is restricted.  From
portable.
@
text
@d1 1
a1 1
#	$OpenBSD: reexec.sh,v 1.8 2015/03/03 22:35:19 markus Exp $
d42 1
a42 2
$SUDO kill `$SUDO cat $PIDFILE`
rm -f $PIDFILE
d53 1
a53 2
$SUDO kill `$SUDO cat $PIDFILE`
rm -f $PIDFILE
d65 1
a65 2
$SUDO kill `$SUDO cat $PIDFILE`
rm -f $PIDFILE
@


1.8
log
@make it possible to run tests w/o ssh1 support; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: reexec.sh,v 1.7 2013/05/17 10:23:52 dtucker Exp $
d54 1
a54 1
$SUDO kill `cat $PIDFILE`
d67 1
a67 1
$SUDO kill `cat $PIDFILE`
@


1.7
log
@Use SUDO when cat'ing pid files and running the sshd log wrapper so that
it works with a restrictive umask and the pid files are not world readable.
Changes from -portable.
@
text
@d1 1
a1 1
#	$OpenBSD: reexec.sh,v 1.6 2013/05/17 04:29:14 dtucker Exp $
d22 1
a22 1
	for p in 1 2; do
@


1.6
log
@Move the setting of DATA and COPY into test-exec.sh
@
text
@d1 1
a1 1
#	$OpenBSD: reexec.sh,v 1.5 2004/10/08 02:01:50 djm Exp $
d42 1
a42 1
$SUDO kill `cat $PIDFILE`
@


1.5
log
@shrink and tidy; ok dtucker@@
@
text
@d1 1
a1 1
#	$OpenBSD: reexec.sh,v 1.4 2004/06/26 06:16:07 djm Exp $
a5 2
DATA=/bin/ls
COPY=${OBJ}/copy
@


1.4
log
@don't change the name of the copied sshd for the reexec fallback test, makes
life simpler for portable
@
text
@d1 1
a1 1
#	$OpenBSD: reexec.sh,v 1.3 2004/06/25 01:32:44 djm Exp $
d12 1
a12 1
start_sshd_copy_zap ()
a16 1
	rm -f $SSHD_COPY
d20 16
d37 1
a38 1

a39 1

d42 1
a42 11
rm -f ${COPY}
for p in 1 2; do
	verbose "$tid: proto $p"
	${SSH} -nqo "Protocol=$p" -F $OBJ/ssh_config somehost \
	    cat ${DATA} > ${COPY}
	if [ $? -ne 0 ]; then
		fail "ssh cat $DATA failed"
	fi
	cmp ${DATA} ${COPY}		|| fail "corrupted copy"
	rm -f ${COPY}
done
d51 2
a52 1
start_sshd_copy_zap
d54 1
a54 11
rm -f ${COPY}
for p in 1 2; do
	verbose "$tid: proto $p"
	${SSH} -nqo "Protocol=$p" -F $OBJ/ssh_config somehost \
	    cat ${DATA} > ${COPY}
	if [ $? -ne 0 ]; then
		fail "ssh cat $DATA failed"
	fi
	cmp ${DATA} ${COPY}		|| fail "corrupted copy"
	rm -f ${COPY}
done
d64 2
a65 1
start_sshd_copy_zap
d67 1
a67 11
rm -f ${COPY}
for p in 1 2; do
	verbose "$tid: proto $p"
	${SSH} -nqo "Protocol=$p" -F $OBJ/ssh_config somehost \
	    cat ${DATA} > ${COPY}
	if [ $? -ne 0 ]; then
		fail "ssh cat $DATA failed"
	fi
	cmp ${DATA} ${COPY}		|| fail "corrupted copy"
	rm -f ${COPY}
done
a71 1
cp $OBJ/sshd_config.orig $OBJ/sshd_config
@


1.3
log
@simplify
@
text
@d1 1
a1 1
#	$OpenBSD: reexec.sh,v 1.2 2004/06/25 01:25:11 djm Exp $
d9 1
a9 1
SSHD_COPY=$OBJ/sshd.copy
@


1.2
log
@clean reexec-specific junk out of text-exec.sh and simplify; idea markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: reexec.sh,v 1.1 2004/06/24 19:32:00 djm Exp $
d8 2
d14 2
a15 3
	cp ${SSHD} $OBJ/sshd.copy
	SSHD_ORIG=$SSHD
	SSHD=`which $OBJ/sshd.copy`
d17 1
a17 1
	rm -f $SSHD
@


1.1
log
@regress test for re-exec corner cases
@
text
@d1 1
a1 1
#	$OpenBSD$
d8 11
@

