head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.14
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.12
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.05.17.10.34.30;	author dtucker;	state Exp;
branches;
next	1.1;

1.1
date	2009.08.13.00.57.17;	author djm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@use a more portable negated if structure.  from portable
@
text
@#	$OpenBSD: portnum.sh,v 1.1 2009/08/13 00:57:17 djm Exp $
#	Placed in the Public Domain.

tid="port number parsing"

badport() {
	port=$1
	verbose "$tid: invalid port $port"
	if ${SSH} -F $OBJ/ssh_proxy -p $port somehost true 2>/dev/null ; then
		fail "$tid accepted invalid port $port"
	fi
}
goodport() {
	port=$1
	verbose "$tid: valid port $port"
	if ${SSH} -F $OBJ/ssh_proxy -p $port somehost true 2>/dev/null ; then
		:
	else
		fail "$tid rejected valid port $port"
	fi
}

badport 0
badport 65536
badport 131073
badport 2000blah
badport blah2000

goodport 1
goodport 22
goodport 2222
goodport 22222
goodport 65535

@


1.1
log
@regression test for port number parsing. written as part of the a2port
change that went into 5.2 but I forgot to commit it at the time...
@
text
@d1 1
a1 1
#	$OpenBSD$
d16 3
a18 1
	if ! ${SSH} -F $OBJ/ssh_proxy -p $port somehost true 2>/dev/null ; then
@

