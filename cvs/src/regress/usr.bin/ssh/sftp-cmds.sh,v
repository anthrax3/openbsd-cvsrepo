head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.20
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.18
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.14
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.10
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.12
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.12.0.4
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.6
	OPENBSD_5_0:1.11.0.4
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.10
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.6
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.4
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.2
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.14
date	2013.06.21.02.26.26;	author djm;	state Exp;
branches;
next	1.13;

1.13
date	2013.05.17.04.29.14;	author dtucker;	state Exp;
branches;
next	1.12;

1.12
date	2012.06.01.00.52.52;	author djm;	state Exp;
branches;
next	1.11;

1.11
date	2010.12.04.00.21.19;	author djm;	state Exp;
branches;
next	1.10;

1.10
date	2009.08.13.01.11.55;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2007.12.12.05.04.03;	author djm;	state Exp;
branches;
next	1.8;

1.8
date	2007.10.24.03.32.35;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.29.09.44.00;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.07.07.04.52;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2003.07.19.00.46.31;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.15.04.07.12;	author mouring;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.04.09.34.22;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.10.07.52.41;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.08.23.54.22;	author djm;	state Exp;
branches;
next	;


desc
@@


1.14
log
@unbreak sftp-cmds for renamed test data (s/ls/data/)
@
text
@#	$OpenBSD: sftp-cmds.sh,v 1.13 2013/05/17 04:29:14 dtucker Exp $
#	Placed in the Public Domain.

# XXX - TODO: 
# - chmod / chown / chgrp
# - -p flag for get & put

tid="sftp commands"

GLOBFILES=`(cd /bin;echo l*)`

# Path with embedded quote
QUOTECOPY=${COPY}".\"blah\""
QUOTECOPY_ARG=${COPY}'.\"blah\"'
# File with spaces
SPACECOPY="${COPY} this has spaces.txt"
SPACECOPY_ARG="${COPY}\ this\ has\ spaces.txt"
# File with glob metacharacters
GLOBMETACOPY="${COPY} [metachar].txt"

rm -rf ${COPY} ${COPY}.1 ${COPY}.2 ${COPY}.dd ${COPY}.dd2
mkdir ${COPY}.dd

verbose "$tid: lls"
echo "cd ${OBJ}\nlls" | ${SFTP} -D ${SFTPSERVER} 2>&1 | \
	grep -q copy.dd || fail "lls failed"

verbose "$tid: lls w/path"
echo "lls ${OBJ}" | ${SFTP} -D ${SFTPSERVER} 2>&1 | \
	grep -q copy.dd || fail "lls w/path failed"

verbose "$tid: ls"
echo "ls ${OBJ}" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "ls failed"
# XXX always successful

verbose "$tid: shell"
echo "!echo hi there" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "shell failed"
# XXX always successful

verbose "$tid: pwd"
echo "pwd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "pwd failed"
# XXX always successful

verbose "$tid: lpwd"
echo "lpwd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "lpwd failed"
# XXX always successful

verbose "$tid: quit"
echo "quit" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "quit failed"
# XXX always successful

verbose "$tid: help"
echo "help" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "help failed"
# XXX always successful

rm -f ${COPY}
verbose "$tid: get"
echo "get $DATA $COPY" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "get failed"
cmp $DATA ${COPY} || fail "corrupted copy after get"

rm -f ${COPY}
verbose "$tid: get quoted"
echo "get \"$DATA\" $COPY" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "get failed"
cmp $DATA ${COPY} || fail "corrupted copy after get"

rm -f ${QUOTECOPY}
cp $DATA ${QUOTECOPY}
verbose "$tid: get filename with quotes"
echo "get \"$QUOTECOPY_ARG\" ${COPY}" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "get failed"
cmp ${COPY} ${QUOTECOPY} || fail "corrupted copy after get with quotes"
rm -f ${QUOTECOPY} ${COPY}

rm -f "$SPACECOPY" ${COPY}
cp $DATA "$SPACECOPY"
verbose "$tid: get filename with spaces"
echo "get ${SPACECOPY_ARG} ${COPY}" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
        || fail "get failed"
cmp ${COPY} "$SPACECOPY" || fail "corrupted copy after get with spaces"

rm -f "$GLOBMETACOPY" ${COPY}
cp $DATA "$GLOBMETACOPY"
verbose "$tid: get filename with glob metacharacters"
echo "get \"${GLOBMETACOPY}\" ${COPY}" | \
	${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 || fail "get failed"
cmp ${COPY} "$GLOBMETACOPY" || \
	fail "corrupted copy after get with glob metacharacters"

rm -f ${COPY}.dd/*
verbose "$tid: get to directory"
echo "get $DATA ${COPY}.dd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
        || fail "get failed"
cmp $DATA ${COPY}.dd/${DATANAME} || fail "corrupted copy after get"

rm -f ${COPY}.dd/*
verbose "$tid: glob get to directory"
echo "get /bin/l* ${COPY}.dd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
        || fail "get failed"
for x in $GLOBFILES; do
        cmp /bin/$x ${COPY}.dd/$x || fail "corrupted copy after get"
done

rm -f ${COPY}.dd/*
verbose "$tid: get to local dir"
echo "lcd ${COPY}.dd\nget $DATA" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
        || fail "get failed"
cmp $DATA ${COPY}.dd/${DATANAME} || fail "corrupted copy after get"

rm -f ${COPY}.dd/*
verbose "$tid: glob get to local dir"
echo "lcd ${COPY}.dd\nget /bin/l*" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
        || fail "get failed"
for x in $GLOBFILES; do
        cmp /bin/$x ${COPY}.dd/$x || fail "corrupted copy after get"
done

rm -f ${COPY}
verbose "$tid: put"
echo "put $DATA $COPY" | \
	${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 || fail "put failed"
cmp $DATA ${COPY} || fail "corrupted copy after put"

rm -f ${QUOTECOPY}
verbose "$tid: put filename with quotes"
echo "put $DATA \"$QUOTECOPY_ARG\"" | \
	${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 || fail "put failed"
cmp $DATA ${QUOTECOPY} || fail "corrupted copy after put with quotes"

rm -f "$SPACECOPY"
verbose "$tid: put filename with spaces"
echo "put $DATA ${SPACECOPY_ARG}" | \
	${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 || fail "put failed"
cmp $DATA "$SPACECOPY" || fail "corrupted copy after put with spaces"

rm -f ${COPY}.dd/*
verbose "$tid: put to directory"
echo "put $DATA ${COPY}.dd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "put failed"
cmp $DATA ${COPY}.dd/${DATANAME} || fail "corrupted copy after put"

rm -f ${COPY}.dd/*
verbose "$tid: glob put to directory"
echo "put /bin/l* ${COPY}.dd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "put failed"
for x in $GLOBFILES; do
	cmp /bin/$x ${COPY}.dd/$x || fail "corrupted copy after put"
done

rm -f ${COPY}.dd/*
verbose "$tid: put to local dir"
echo "cd ${COPY}.dd\nput $DATA" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "put failed"
cmp $DATA ${COPY}.dd/${DATANAME} || fail "corrupted copy after put"

rm -f ${COPY}.dd/*
verbose "$tid: glob put to local dir"
echo "cd ${COPY}.dd\nput /bin/l*" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "put failed"
for x in $GLOBFILES; do
        cmp /bin/$x ${COPY}.dd/$x || fail "corrupted copy after put"
done

verbose "$tid: rename"
echo "rename $COPY ${COPY}.1" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "rename failed"
test -f ${COPY}.1 || fail "missing file after rename"
cmp $DATA ${COPY}.1 >/dev/null 2>&1 || fail "corrupted copy after rename"

verbose "$tid: rename directory"
echo "rename ${COPY}.dd ${COPY}.dd2" | \
	${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 || \
	fail "rename directory failed"
test -d ${COPY}.dd && fail "oldname exists after rename directory"
test -d ${COPY}.dd2 || fail "missing newname after rename directory"

verbose "$tid: ln"
echo "ln ${COPY}.1 ${COPY}.2" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 || fail "ln failed"
test -f ${COPY}.2 || fail "missing file after ln"
cmp ${COPY}.1 ${COPY}.2 || fail "created file is not equal after ln"

verbose "$tid: ln -s"
rm -f ${COPY}.2
echo "ln -s ${COPY}.1 ${COPY}.2" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 || fail "ln -s failed"
test -L ${COPY}.2 || fail "missing file after ln -s"

verbose "$tid: mkdir"
echo "mkdir ${COPY}.dd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "mkdir failed"
test -d ${COPY}.dd || fail "missing directory after mkdir"

# XXX do more here
verbose "$tid: chdir"
echo "chdir ${COPY}.dd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "chdir failed"

verbose "$tid: rmdir"
echo "rmdir ${COPY}.dd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "rmdir failed"
test -d ${COPY}.1 && fail "present directory after rmdir"

verbose "$tid: lmkdir"
echo "lmkdir ${COPY}.dd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "lmkdir failed"
test -d ${COPY}.dd || fail "missing directory after lmkdir"

# XXX do more here
verbose "$tid: lchdir"
echo "lchdir ${COPY}.dd" | ${SFTP} -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "lchdir failed"

rm -rf ${COPY} ${COPY}.1 ${COPY}.2 ${COPY}.dd ${COPY}.dd2
rm -rf ${QUOTECOPY} "$SPACECOPY" "$GLOBMETACOPY"


@


1.13
log
@Move the setting of DATA and COPY into test-exec.sh
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.12 2012/06/01 00:52:52 djm Exp $
d101 1
a101 1
cmp $DATA ${COPY}.dd/ls || fail "corrupted copy after get"
d115 1
a115 1
cmp $DATA ${COPY}.dd/ls || fail "corrupted copy after get"
d147 1
a147 1
cmp $DATA ${COPY}.dd/ls || fail "corrupted copy after put"
d161 1
a161 1
cmp $DATA ${COPY}.dd/ls || fail "corrupted copy after put"
@


1.12
log
@don't delete .* on cleanup due to unintended env expansion; pointed out in
bz#2014 by openssh AT roumenpetrov.info
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.11 2010/12/04 00:21:19 djm Exp $
a9 2
DATA=/bin/ls
COPY=${OBJ}/copy
@


1.11
log
@adjust for hard-link support
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.10 2009/08/13 01:11:55 djm Exp $
d23 1
a23 1
rm -rf ${COPY} ${COPY}.1 ${COPY}.2 ${COPY}.dd ${COPY}.dd2 ${BATCH}.*
d221 1
a221 1
rm -rf ${COPY} ${COPY}.1 ${COPY}.2 ${COPY}.dd ${COPY}.dd2 ${BATCH}.*
@


1.10
log
@date: 2009/08/13 01:11:19;  author: djm;  state: Exp;  lines: +10 -7
Swizzle options: "-P sftp_server_path" moves to "-D sftp_server_path",
add "-P port" to match scp(1). Fortunately, the -P option is only really
used by our regression scripts.

part of larger patch from carlosvsilvapt@@gmail.com for his Google Summer
of Code work; ok deraadt markus
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.9 2007/12/12 05:04:03 djm Exp $
d188 7
a194 1
test -L ${COPY}.2 || fail "missing file after ln"
@


1.9
log
@unbreak lls command and add a regress test that would have caught the
breakage; spotted by mouring@@
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.8 2007/10/24 03:32:35 djm Exp $
d27 1
a27 1
echo "cd ${OBJ}\nlls" | ${SFTP} -P ${SFTPSERVER} 2>&1 | \
d31 1
a31 1
echo "lls ${OBJ}" | ${SFTP} -P ${SFTPSERVER} 2>&1 | \
d35 1
a35 1
echo "ls ${OBJ}" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d40 1
a40 1
echo "!echo hi there" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d45 1
a45 1
echo "pwd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d50 1
a50 1
echo "lpwd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d55 1
a55 1
echo "quit" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d60 1
a60 1
echo "help" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d66 1
a66 1
echo "get $DATA $COPY" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d72 1
a72 1
echo "get \"$DATA\" $COPY" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d79 1
a79 1
echo "get \"$QUOTECOPY_ARG\" ${COPY}" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d87 1
a87 1
echo "get ${SPACECOPY_ARG} ${COPY}" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d95 1
a95 1
	${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 || fail "get failed"
d101 1
a101 1
echo "get $DATA ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d107 1
a107 1
echo "get /bin/l* ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d115 1
a115 1
echo "lcd ${COPY}.dd\nget $DATA" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d121 1
a121 1
echo "lcd ${COPY}.dd\nget /bin/l*" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d130 1
a130 1
	${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 || fail "put failed"
d136 1
a136 1
	${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 || fail "put failed"
d142 1
a142 1
	${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 || fail "put failed"
d147 1
a147 1
echo "put $DATA ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d153 1
a153 1
echo "put /bin/l* ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d161 1
a161 1
echo "cd ${COPY}.dd\nput $DATA" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d167 1
a167 1
echo "cd ${COPY}.dd\nput /bin/l*" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d174 1
a174 1
echo "rename $COPY ${COPY}.1" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d181 1
a181 1
	${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 || \
d187 1
a187 1
echo "ln ${COPY}.1 ${COPY}.2" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 || fail "ln failed"
d191 1
a191 1
echo "mkdir ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d197 1
a197 1
echo "chdir ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d201 1
a201 1
echo "rmdir ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d206 1
a206 1
echo "lmkdir ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
d212 1
a212 1
echo "lchdir ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
@


1.8
log
@comprehensive tests for sftp escaping its interaction with globbing;
ok dtucker@@
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.7 2006/08/29 09:44:00 djm Exp $
d27 6
a32 3
echo "lls ${OBJ}" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "lls failed"
# XXX always successful
@


1.7
log
@clean up our mess
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.6 2003/10/07 07:04:52 djm Exp $
d17 5
d77 1
a77 1
	|| fail "put failed"
d81 15
d126 2
a127 2
echo "put $DATA $COPY" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "put failed"
d132 2
a133 2
echo "put $DATA \"$QUOTECOPY_ARG\"" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "put failed"
d136 6
d177 3
a179 2
echo "rename ${COPY}.dd ${COPY}.dd2" | ${SFTP} -P ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "rename directory failed"
d213 1
a213 1
rm -rf ${QUOTECOPY}
@


1.6
log
@more sftp quoting regress tests; ok markus
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.5 2003/07/19 00:46:31 djm Exp $
d186 1
@


1.5
log
@regress test for sftp arguments with escaped quotes; ok markus
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.4 2003/05/15 04:07:12 mouring Exp $
d61 14
@


1.4
log
@Advanced put/get testing for sftp.  OK @@djm
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.3 2003/04/04 09:34:22 djm Exp $
d14 4
d95 6
@


1.3
log
@More regression tests, including recent directory rename bug; ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.2 2003/01/10 07:52:41 djm Exp $
a4 1
# - globbed operations
d12 1
d15 1
d58 28
d92 28
a125 1
mkdir ${COPY}.dd
@


1.2
log
@Cleanup before use (would break if run after t-sftp), less console spam
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-cmds.sh,v 1.1 2003/01/08 23:54:22 djm Exp $
d14 1
a14 1
rm -rf ${COPY} ${COPY}.1 ${COPY}.2 ${COPY}.dd ${BATCH}.*
d69 7
d105 1
a105 1
rm -rf ${COPY} ${COPY}.1 ${COPY}.2 ${COPY}.dd ${BATCH}.*
@


1.1
log
@More regress tests for sftp, most commands are now exercised as is batchmode
ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d14 5
a18 2
verbose "$tid: ls"
echo "lls ${OBJ}" | ${SFTP} -P ${SFTPSERVER} || fail "lls failed"
d22 2
a23 1
echo "ls ${OBJ}" | ${SFTP} -P ${SFTPSERVER} || fail "ls failed"
d27 2
a28 1
echo "!echo hi there" | ${SFTP} -P ${SFTPSERVER} || fail "shell failed"
d32 2
a33 1
echo "pwd" | ${SFTP} -P ${SFTPSERVER} || fail "pwd failed"
d37 2
a38 1
echo "lpwd" | ${SFTP} -P ${SFTPSERVER} || fail "lpwd failed"
d42 2
a43 1
echo "quit" | ${SFTP} -P ${SFTPSERVER} || fail "quit failed"
d47 2
a48 1
echo "help" | ${SFTP} -P ${SFTPSERVER} || fail "help failed"
d53 2
a54 1
echo "get $DATA $COPY" | ${SFTP} -P ${SFTPSERVER} || fail "get failed"
d59 2
a60 1
echo "put $DATA $COPY" | ${SFTP} -P ${SFTPSERVER} || fail "put failed"
d64 2
a65 1
echo "rename $COPY ${COPY}.1" | ${SFTP} -P ${SFTPSERVER} || fail "rename failed"
d67 1
a67 1
cmp $DATA ${COPY}.1 || fail "corrupted copy after rename"
d70 1
a70 1
echo "ln ${COPY}.1 ${COPY}.2" | ${SFTP} -P ${SFTPSERVER} || fail "ln failed"
d74 2
a75 1
echo "mkdir ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} || fail "mkdir failed"
d80 2
a81 1
echo "chdir ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} || fail "chdir failed"
d84 2
a85 1
echo "rmdir ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} || fail "rmdir failed"
d89 2
a90 1
echo "lmkdir ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} || fail "lmkdir failed"
d95 2
a96 1
echo "lchdir ${COPY}.dd" | ${SFTP} -P ${SFTPSERVER} || fail "lchdir failed"
d98 1
a98 1
rm -rf ${COPY} ${COPY}.1 ${COPY}.2 ${COPY}.dd 
@

