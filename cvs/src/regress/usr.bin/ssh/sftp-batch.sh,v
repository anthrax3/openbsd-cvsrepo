head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.10
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.12
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.14
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.26
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.22
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.20
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.18
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2013.05.17.04.29.14;	author dtucker;	state Exp;
branches;
next	1.4;

1.4
date	2009.08.13.01.11.55;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.13.09.49.06;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.10.07.52.41;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.08.23.54.22;	author djm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Move the setting of DATA and COPY into test-exec.sh
@
text
@#	$OpenBSD: sftp-batch.sh,v 1.4 2009/08/13 01:11:55 djm Exp $
#	Placed in the Public Domain.

tid="sftp batchfile"

BATCH=${OBJ}/sftp.bb

rm -rf ${COPY} ${COPY}.1 ${COPY}.2 ${COPY}.dd ${BATCH}.*

cat << EOF > ${BATCH}.pass.1
	get $DATA $COPY
	put ${COPY} ${COPY}.1
	rm ${COPY}
	-put ${COPY} ${COPY}.2
EOF

cat << EOF > ${BATCH}.pass.2
	# This is a comment

	# That was a blank line
	ls
EOF

cat << EOF > ${BATCH}.fail.1
	get $DATA $COPY
	put ${COPY} ${COPY}.3
	rm ${COPY}.*
	# The next command should fail
	put ${COPY}.3 ${COPY}.4
EOF

cat << EOF > ${BATCH}.fail.2
	# The next command should fail
	jajajajaja
EOF

verbose "$tid: good commands"
${SFTP} -b ${BATCH}.pass.1 -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "good commands failed"

verbose "$tid: bad commands"
${SFTP} -b ${BATCH}.fail.1 -D ${SFTPSERVER} >/dev/null 2>&1 \
	&& fail "bad commands succeeded"

verbose "$tid: comments and blanks"
${SFTP} -b ${BATCH}.pass.2 -D ${SFTPSERVER} >/dev/null 2>&1 \
	|| fail "comments & blanks failed"

verbose "$tid: junk command"
${SFTP} -b ${BATCH}.fail.2 -D ${SFTPSERVER} >/dev/null 2>&1 \
	&& fail "junk command succeeded"

rm -rf ${COPY} ${COPY}.1 ${COPY}.2 ${COPY}.dd ${BATCH}.*


@


1.4
log
@date: 2009/08/13 01:11:19;  author: djm;  state: Exp;  lines: +10 -7
Swizzle options: "-P sftp_server_path" moves to "-D sftp_server_path",
add "-P port" to match scp(1). Fortunately, the -P option is only really
used by our regression scripts.

part of larger patch from carlosvsilvapt@@gmail.com for his Google Summer
of Code work; ok deraadt markus
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-batch.sh,v 1.3 2004/01/13 09:49:06 djm Exp $
a5 2
DATA=/bin/ls
COPY=${OBJ}/copy
@


1.3
log
@don't delete thyself when running without obj/ ; ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-batch.sh,v 1.2 2003/01/10 07:52:41 djm Exp $
d40 1
a40 1
${SFTP} -b ${BATCH}.pass.1 -P ${SFTPSERVER} >/dev/null 2>&1 \
d44 1
a44 1
${SFTP} -b ${BATCH}.fail.1 -P ${SFTPSERVER} >/dev/null 2>&1 \
d48 1
a48 1
${SFTP} -b ${BATCH}.pass.2 -P ${SFTPSERVER} >/dev/null 2>&1 \
d52 1
a52 1
${SFTP} -b ${BATCH}.fail.2 -P ${SFTPSERVER} >/dev/null 2>&1 \
@


1.2
log
@Cleanup before use (would break if run after t-sftp), less console spam
@
text
@d1 1
a1 1
#	$OpenBSD: sftp-batch.sh,v 1.1 2003/01/08 23:54:22 djm Exp $
d8 1
a8 1
BATCH=${OBJ}/sftp-batch
@


1.1
log
@More regress tests for sftp, most commands are now exercised as is batchmode
ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d10 1
a10 1
rm -rf ${COPY} ${COPY}.* ${BATCH}.*
d40 2
a41 1
${SFTP} -b ${BATCH}.pass.1 -P ${SFTPSERVER} || fail "good commands failed"
d44 2
a45 1
${SFTP} -b ${BATCH}.fail.1 -P ${SFTPSERVER} && fail "bad commands succeeded"
d48 2
a49 1
${SFTP} -b ${BATCH}.pass.2 -P ${SFTPSERVER} || fail "comments & blanks failed"
d52 2
a53 1
${SFTP} -b ${BATCH}.fail.2 -P ${SFTPSERVER} && fail "junk command succeeded"
d55 1
a55 1
rm -rf ${COPY} ${COPY}.1 ${COPY}.2 ${COPY}.dd 
@

