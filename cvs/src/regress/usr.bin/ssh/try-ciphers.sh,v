head	1.25;
access;
symbols
	OPENBSD_6_0:1.25.0.6
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.2
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.25.0.4
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.24.0.2
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.23.0.4
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.22.0.4
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.20.0.2
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.19.0.2
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.13.0.2
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.4
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.11.0.16
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.14
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.10
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.12
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.8
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.6
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7;
locks; strict;
comment	@# @;


1.25
date	2015.03.24.20.22.17;	author markus;	state Exp;
branches;
next	1.24;
commitid	gbmXWxEI6RvKxhBC;

1.24
date	2015.03.03.22.35.19;	author markus;	state Exp;
branches;
next	1.23;
commitid	m52xwEKWrNr11xhO;

1.23
date	2014.04.21.22.15.37;	author djm;	state Exp;
branches;
next	1.22;

1.22
date	2013.11.21.03.18.51;	author djm;	state Exp;
branches;
next	1.21;

1.21
date	2013.11.07.02.48.38;	author dtucker;	state Exp;
branches;
next	1.20;

1.20
date	2013.05.17.10.16.26;	author dtucker;	state Exp;
branches;
next	1.19;

1.19
date	2013.02.11.23.58.51;	author djm;	state Exp;
branches;
next	1.18;

1.18
date	2013.01.12.11.23.53;	author djm;	state Exp;
branches;
next	1.17;

1.17
date	2012.12.11.23.12.13;	author markus;	state Exp;
branches;
next	1.16;

1.16
date	2012.12.11.22.32.56;	author markus;	state Exp;
branches;
next	1.15;

1.15
date	2012.10.05.02.20.48;	author dtucker;	state Exp;
branches;
next	1.14;

1.14
date	2012.09.06.04.11.07;	author dtucker;	state Exp;
branches;
next	1.13;

1.13
date	2012.06.28.05.07.45;	author dtucker;	state Exp;
branches;
next	1.12;

1.12
date	2011.08.02.01.23.41;	author djm;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.07.19.41.46;	author pvalchev;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.24.04.10.54;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2004.02.28.13.44.45;	author dtucker;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.12.15.40.01;	author markus;	state Exp;
branches;
next	1.7;

1.7
date	2002.04.03.09.30.01;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.15.13.08.56;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.18.12.52.26;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.18.11.40.42;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.01.09.47;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.15.14.41.38;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.14.23.18.00;	author markus;	state Exp;
branches;
next	;


desc
@@


1.25
log
@use ${SSH} for -Q instead of installed ssh
@
text
@#	$OpenBSD: try-ciphers.sh,v 1.24 2015/03/03 22:35:19 markus Exp $
#	Placed in the Public Domain.

tid="try ciphers"

cp $OBJ/sshd_proxy $OBJ/sshd_proxy_bak

for c in `${SSH} -Q cipher`; do
	n=0
	for m in `${SSH} -Q mac`; do
		trace "proto 2 cipher $c mac $m"
		verbose "test $tid: proto 2 cipher $c mac $m"
		cp $OBJ/sshd_proxy_bak $OBJ/sshd_proxy
		echo "Ciphers=$c" >> $OBJ/sshd_proxy
		echo "MACs=$m" >> $OBJ/sshd_proxy
		${SSH} -F $OBJ/ssh_proxy -2 -m $m -c $c somehost true
		if [ $? -ne 0 ]; then
			fail "ssh -2 failed with mac $m cipher $c"
		fi
		# No point trying all MACs for AEAD ciphers since they
		# are ignored.
		if ${SSH} -Q cipher-auth | grep "^${c}\$" >/dev/null 2>&1 ; then
			break
		fi
		n=`expr $n + 1`
	done
done

if ssh_version 1; then
	ciphers="3des blowfish"
else
	ciphers=""
fi
for c in $ciphers; do
	trace "proto 1 cipher $c"
	verbose "test $tid: proto 1 cipher $c"
	${SSH} -F $OBJ/ssh_proxy -1 -c $c somehost true
	if [ $? -ne 0 ]; then
		fail "ssh -1 failed with cipher $c"
	fi
done

@


1.24
log
@make it possible to run tests w/o ssh1 support; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.23 2014/04/21 22:15:37 djm Exp $
d22 1
a22 1
		if ssh -Q cipher-auth | grep "^${c}\$" >/dev/null 2>&1 ; then
@


1.23
log
@repair regress tests broken by server-side default cipher/kex/mac changes
by ensuring that the option under test is included in the server's
algorithm list
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.22 2013/11/21 03:18:51 djm Exp $
d29 5
a33 1
ciphers="3des blowfish"
@


1.22
log
@use new "ssh -Q cipher-auth" query to obtain lists of authenticated
encryption ciphers instead of specifying them manually; ensures that
the new chacha20poly1305@@openssh.com mode is tested;

ok markus@@ and naddy@@ as part of the diff to add
chacha20poly1305@@openssh.com
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.21 2013/11/07 02:48:38 dtucker Exp $
d6 2
d13 3
@


1.21
log
@Use ssh -Q instead of hardcoding lists of ciphers or MACs.
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.20 2013/05/17 10:16:26 dtucker Exp $
d15 5
a19 4
		# No point trying all MACs for GCM since they are ignored.
		case $c in
		aes*-gcm@@openssh.com)	test $n -gt 0 && break;;
		esac
@


1.20
log
@use expr for math to keep diffs vs portable down
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.19 2013/02/11 23:58:51 djm Exp $
d6 1
a6 14
ciphers="aes128-cbc 3des-cbc blowfish-cbc cast128-cbc 
	arcfour128 arcfour256 arcfour 
	aes192-cbc aes256-cbc rijndael-cbc@@lysator.liu.se
	aes128-ctr aes192-ctr aes256-ctr
	aes128-gcm@@openssh.com aes256-gcm@@openssh.com"
macs="hmac-sha1 hmac-md5 umac-64@@openssh.com umac-128@@openssh.com
	hmac-sha1-96 hmac-md5-96 hmac-sha2-256 hmac-sha2-512
	hmac-sha1-etm@@openssh.com hmac-md5-etm@@openssh.com
	umac-64-etm@@openssh.com umac-128-etm@@openssh.com
	hmac-sha1-96-etm@@openssh.com hmac-md5-96-etm@@openssh.com
	hmac-sha2-256-etm@@openssh.com hmac-sha2-512-etm@@openssh.com
	hmac-ripemd160-etm@@openssh.com"

for c in $ciphers; do
d8 1
a8 1
	for m in $macs; do
@


1.19
log
@remove acss here too
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.18 2013/01/12 11:23:53 djm Exp $
d32 1
a32 1
		n=$(($n + 1))
@


1.18
log
@test AES-GCM modes; feedback markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.17 2012/12/11 23:12:13 markus Exp $
a45 10
echo "Ciphers acss@@openssh.org" >> $OBJ/sshd_proxy
c=acss@@openssh.org
for m in $macs; do
	trace "proto 2 $c mac $m"
	verbose "test $tid: proto 2 cipher $c mac $m"
	${SSH} -F $OBJ/ssh_proxy -2 -m $m -c $c somehost true
	if [ $? -ne 0 ]; then
		fail "ssh -2 failed with mac $m cipher $c"
	fi
done
@


1.17
log
@add hmac-ripemd160-etm@@openssh.com
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.16 2012/12/11 22:32:56 markus Exp $
d9 2
a10 1
	aes128-ctr aes192-ctr aes256-ctr"
d20 1
d28 5
@


1.16
log
@add etm modes
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.15 2012/10/05 02:20:48 dtucker Exp $
d15 2
a16 1
	hmac-sha2-256-etm@@openssh.com hmac-sha2-512-etm@@openssh.com"
@


1.15
log
@Add umac-128@@openssh.com to the list of MACs to be tested
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.14 2012/09/06 04:11:07 dtucker Exp $
d11 5
a15 1
	hmac-sha1-96 hmac-md5-96 hmac-sha2-256 hmac-sha2-512"
@


1.14
log
@Restore missing space.
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.13 2012/06/28 05:07:45 dtucker Exp $
d10 2
a11 2
macs="hmac-sha1 hmac-md5 umac-64@@openssh.com hmac-sha1-96 hmac-md5-96
	hmac-sha2-256 hmac-sha2-512"
@


1.13
log
@Remove hmac-sha2-256-96 and hmac-sha2-512-96 MACs since they were removed
from draft6 of the spec and will not be in the RFC when published.  Patch
from mdb at juniper net via bz#2023, ok markus.
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.12 2011/08/02 01:23:41 djm Exp $
d11 1
a11 1
	hmac-sha2-256hmac-sha2-512"
@


1.12
log
@add SHA256/SHA512 based HMAC modes
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.11 2007/06/07 19:41:46 pvalchev Exp $
d11 1
a11 1
	hmac-sha2-256 hmac-sha2-256-96 hmac-sha2-512 hmac-sha2-512-96"
@


1.11
log
@test umac-64@@openssh.com
ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.10 2005/05/24 04:10:54 djm Exp $
d10 2
a11 1
macs="hmac-sha1 hmac-md5 umac-64@@openssh.com hmac-sha1-96 hmac-md5-96"
@


1.10
log
@oops, new arcfour modes here too
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.9 2004/02/28 13:44:45 dtucker Exp $
d10 1
a10 1
macs="hmac-sha1 hmac-md5 hmac-sha1-96 hmac-md5-96"
@


1.9
log
@Test acss too; ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.8 2003/06/12 15:40:01 markus Exp $
d6 2
a7 1
ciphers="aes128-cbc 3des-cbc blowfish-cbc cast128-cbc arcfour 
@


1.8
log
@add ctr
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.7 2002/04/03 09:30:01 markus Exp $
d29 11
@


1.7
log
@add rijndael-cbc@@lysator.liu.se
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.6 2002/03/15 13:08:56 markus Exp $
d7 2
a8 1
	aes192-cbc aes256-cbc rijndael-cbc@@lysator.liu.se"
@


1.6
log
@allow specification of binary-under-test with
	$TEST_SSH_{SSH,SSHD,SSHAGENT,SSHADD,SSHKEYGEN,SSHKEYSCAN}
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.5 2002/02/18 12:52:26 markus Exp $
d6 2
a7 1
ciphers="aes128-cbc 3des-cbc blowfish-cbc cast128-cbc arcfour aes192-cbc aes256-cbc"
@


1.5
log
@no printf+\r, just use echo
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.4 2002/02/18 11:40:42 markus Exp $
d13 1
a13 1
		ssh -F $OBJ/ssh_proxy -2 -m $m -c $c somehost true
d24 1
a24 1
	ssh -F $OBJ/ssh_proxy -1 -c $c somehost true
@


1.4
log
@don't mark tests as slow, have some slow tests print out information by default
@
text
@d1 1
a1 1
#	$OpenBSD: try-ciphers.sh,v 1.3 2002/02/16 01:09:47 markus Exp $
d12 1
a12 1
		verbose "test $tid: proto 2 cipher $c mac $m             \r"
d23 1
a23 1
	verbose "test $tid: proto 1 cipher $c                             \r"
a28 1
verbose "\n"
@


1.3
log
@$OpenBSD$, public domain
@
text
@d1 1
a1 1
#	$OpenBSD: $
d11 2
a12 1
		trace "proto 2 mac $m cipher $c"
d23 1
d29 1
@


1.2
log
@we don't need a listening sshd for most of our tests, just
connect client and server w/o TCP:
	ssh -o 'proxycommand sshd -i -f $OBJ/sshd_proxy'
@
text
@d1 3
@


1.1
log
@serveral tests for ssh-keygen/ssh/sshd/ssh-add/ssh-agent

note that these tests will start sshd on 127.0.0.1:4242
and will fail if the realpath of /usr/src/usr.sbin/ssh/obj/ contains
a group or world writeable directory.
@
text
@d8 2
a9 1
		ssh -F $OBJ/ssh_config -2 -m $m -c $c somehost true
d18 2
a19 1
	ssh -F $OBJ/ssh_config -1 -c $c somehost true
@

