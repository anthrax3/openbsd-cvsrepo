head	1.36;
access;
symbols
	OPENBSD_6_2:1.36.0.2
	OPENBSD_6_2_BASE:1.36
	OPENBSD_6_1:1.33.0.22
	OPENBSD_6_1_BASE:1.33
	OPENBSD_6_0:1.33.0.18
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.33.0.8
	OPENBSD_5_9_BASE:1.33
	OPENBSD_5_8:1.33.0.16
	OPENBSD_5_8_BASE:1.33
	OPENBSD_5_7:1.33.0.14
	OPENBSD_5_7_BASE:1.33
	OPENBSD_5_6:1.33.0.12
	OPENBSD_5_6_BASE:1.33
	OPENBSD_5_5:1.33.0.10
	OPENBSD_5_5_BASE:1.33
	OPENBSD_5_4:1.33.0.6
	OPENBSD_5_4_BASE:1.33
	OPENBSD_5_3:1.33.0.4
	OPENBSD_5_3_BASE:1.33
	OPENBSD_5_2:1.33.0.2
	OPENBSD_5_2_BASE:1.33;
locks; strict;
comment	@# @;


1.36
date	2017.07.25.12.49.29;	author bluhm;	state Exp;
branches;
next	1.35;
commitid	mF07lSGCIg2wuJOW;

1.35
date	2017.07.10.18.48.37;	author bluhm;	state Exp;
branches;
next	1.34;
commitid	YohYjko9Gb5OG8hV;

1.34
date	2017.07.07.10.56.13;	author bluhm;	state Exp;
branches;
next	1.33;
commitid	W0G5eCAVL1sh4xbF;

1.33
date	2012.07.17.09.35.09;	author jasper;	state Exp;
branches;
next	1.32;

1.32
date	2012.07.13.08.44.31;	author espie;	state Exp;
branches;
next	1.31;

1.31
date	2012.07.13.08.31.46;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	2012.07.12.12.36.56;	author espie;	state Exp;
branches;
next	1.29;

1.29
date	2012.07.12.12.18.05;	author espie;	state Exp;
branches;
next	1.28;

1.28
date	2012.07.12.11.42.57;	author espie;	state Exp;
branches;
next	1.27;

1.27
date	2012.07.11.14.24.36;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	2012.07.11.14.14.05;	author espie;	state Exp;
branches;
next	1.25;

1.25
date	2012.07.11.13.24.44;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	2012.07.11.08.58.14;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2012.07.10.11.37.14;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2012.07.09.23.15.33;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2012.07.09.21.37.33;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2012.07.09.18.42.45;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2012.07.09.14.33.53;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2012.07.09.12.57.16;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2012.07.09.10.13.45;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2012.07.08.07.46.35;	author jasper;	state Exp;
branches;
next	1.15;

1.15
date	2012.07.07.18.27.18;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2012.07.06.19.16.52;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2012.07.04.13.11.14;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2012.07.04.12.58.12;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2012.07.04.12.46.47;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2012.07.04.11.52.46;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2012.07.04.10.46.32;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2012.07.04.10.22.45;	author sthen;	state Exp;
branches;
next	1.7;

1.7
date	2012.07.02.14.28.38;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2012.07.02.13.45.27;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2012.07.02.13.11.34;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2012.07.02.12.58.53;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2012.07.02.12.40.20;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.02.12.22.05;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.07.02.12.02.36;	author espie;	state Exp;
branches;
next	;


desc
@@


1.36
log
@Do not remove files from CVS tree during make clean.
@
text
@# $OpenBSD: Makefile,v 1.35 2017/07/10 18:48:37 bluhm Exp $
REGRESS_TARGETS = test-compile-0 test-link-0 test-install-0 \
	test-run-0 test-link-1 test-install-1 test-run-1 \
	test-link-2 test-link-3 test-link-4 \
	test-link-5 test-link-6 test-run-2 test-run-3 \
	error-1 error-2 error-3 test-alternate-0 \
	test-implicit-0 test-run-4 test-implicit-1 \
	test-help error-4 error-6 test-bond test-implicit-2 \
	test-Wc test-Xcompiler stupid-gdb pthread-0 pthread-1 \
	pthread-2 test-o-0

COMPILE_TESTS = compile-mode-0 compile-mode-1 compile-mode-2 \
	compile-mode-3 compile-mode-4 compile-mode-5 \
	compile-mode-6 compile-mode-7 compile-mode-8 \
	compile-mode-9 compile-mode-10 compile-mode-11 \
	compile-mode-12 compile-mode-13

FAILING_TARGETS += error-0
REGRESS_TARGETS += version-override-0 version-override-1 error-5 \
		    ${COMPILE_TESTS} prefer-static linkception-0 \
		    release-0 release-1 trip-0
FAILING_TARGETS += test-all-static

REGRESS_TARGETS += ${FAILING_TARGETS}

${FAILING_TARGETS}:
	# regress target $@@ is know to fail
	@@echo DISABLED

compile-tests: ${COMPILE_TESTS}

LIBTOOL ?= /usr/bin/libtool

DEST = ${.OBJDIR}/dest/usr/local
DEST2 = ${.OBJDIR}/dest2/usr/local
DEST3 = ${.OBJDIR}/dest3/usr/local

WEIRD = a++b.weird
NOTWEIRD = a__b_weird

test-compile-0: ${OBJLA}

test-link-0: liba.la

test-link-1: p1

test-run-0: p1
	./p1

test-link-2: liba0.la liba1.la

test-link-3: p2

test-run-2: p2
	./p2

test-install-0: ${DEST}/lib/liba.la

test-install-1: ${DEST}/bin/p1

test-run-1: ${DEST}/bin/p1
	LD_LIBRARY_PATH=${DEST}/lib ${DEST}/bin/p1

test-run-3:  ${DEST}/bin/p2
	LD_LIBRARY_PATH=${DEST}/lib ${DEST}/bin/p2

test-run-4: p2
	${LIBTOOL} --mode=execute ./p2

test-help:
	${LIBTOOL} --help > /dev/null

# affects sysutils/nut
test-all-static: s1
	file ${.OBJDIR}/.libs/s1 | grep 'statically linked'

s1: c.lo liba.la
	${LIBTOOL} --mode=link ${CC} ${CFLAGS} -o s1 c.lo -la -all-static

error-0: liba.la
# this should error out (not absolute directory)
	if ${LIBTOOL} --mode=install cp liba.la dest; then exit 1; fi

test-bond: dummy3.c
	# one single instance of -o
	@@if ${LIBTOOL} --mode=compile cc -c -o dummy3.lo -o 7 dummy3.c; then exit 1; fi

dummy.c dummy2.c dummy3.c:
	@@touch $@@

dummy2.lo: dummy2.c
	${LIBTOOL} --mode=compile --tag=disable-shared --tag=disable-static ${CC} -c -o dummy2.lo dummy2.c

error-1: dummy.c
	${LIBTOOL} --mode=compile --tag=notatag ${CC} -c -o dummy.lo dummy.c 2>&1|fgrep -q "ignoring unknown tag"

error-2: dummy.c
	if ${LIBTOOL} --mode=compile --tag=@@ ${CC} -c -o dummy.lo dummy.c; then exit 1; fi
	
error-3: dummy.c
	if ${LIBTOOL} --mode=foo ${CC} -c -o dummy.lo dummy.c; then exit 1; fi
	
error-4: dummy.c
	# libtool -mode=... is an invalid option
	@@if ${LIBTOOL} -mode=compile ${CC} -c -o dummy.lo dummy.c; then exit 1; fi

error-5: libbad.la
	fgrep -q "library_names=''" libbad.la || exit 1

error-6:
	# implicit mode detection failure: libtool foo
	@@if ${LIBTOOL} foo; then exit 1; fi

prefer-static: dummy2.lo
	if fgrep -q .libs/dummy2.o dummy2.lo; then exit 1; fi

test-alternate-0: dummy.c
	${LIBTOOL} compile ${CC} -c -o dummy.lo dummy.c
	${LIBTOOL} comp ${CC} -c -o dummy.lo dummy.c

test-implicit-0: dummy.c
	${LIBTOOL} ${CC} -c -o dummy.lo dummy.c

test-implicit-1: liba.la
	mkdir -p ${DEST2}/lib
	${LIBTOOL} install liba.la ${DEST2}/lib/liba.la

test-implicit-2: liba.la
	mkdir -p ${DEST3}/lib
	${LIBTOOL} install -c liba.la ${DEST3}/lib/liba.la

version-override-0: liba9.la
	fgrep -q "liba9.so.4.2" liba9.la

version-override-1: lib${WEIRD}.la
	fgrep -q "lib${WEIRD}.so.5.6" lib${WEIRD}.la

compile-mode-0: dummy.c
	${LIBTOOL} --mode=compile ${CC} -c dummy.c|tee out0
	@@fgrep .libs/dummy.o out0|fgrep -q -- -fPIC
	@@fgrep -q ' dummy.o' out0
	@@if fgrep ' dummy.o' out0|fgrep -q -- -fPIC; then exit 1; fi

compile-mode-1: dummy.c
	${LIBTOOL} --mode=compile --tag=disable-shared ${CC} -c dummy.c|tee out1
	@@if fgrep -q .libs/dummy.o out1; then exit 1; fi
	@@fgrep -q ' dummy.o' out1
	@@if fgrep ' dummy.o' out1|fgrep -q -- -fPIC; then exit 1; fi

compile-mode-2: dummy.c
	${LIBTOOL} --mode=compile --tag=disable-static ${CC} -c dummy.c|tee out2
	@@fgrep .libs/dummy.o out2|fgrep -q -- -fPIC
	@@if fgrep -q ' dummy.o' out2; then exit 1; fi

compile-mode-3: dummy.c
	# can't disable both, will keep static
	${LIBTOOL} --mode=compile --tag=disable-static --tag=disable-shared ${CC} -c dummy.c|tee out3
	@@if fgrep -q .libs/dummy.o out3; then exit 1; fi
	@@fgrep -q ' dummy.o' out3
	@@if fgrep ' dummy.o' out3|fgrep -q -- -fPIC; then exit 1; fi

compile-mode-4: dummy.c
	# can't disable both, will keep static
	${LIBTOOL} --mode=compile --tag=disable-shared --tag=disable-static ${CC} -c dummy.c|tee out4
	@@if fgrep -q .libs/dummy.o out4; then exit 1; fi
	@@fgrep -q ' dummy.o' out4
	@@if fgrep ' dummy.o' out4|fgrep -- -fPIC; then exit 1; fi

compile-mode-5: dummy.c
	${LIBTOOL} --mode=compile ${CC} -static -c dummy.c|tee out5
	@@if fgrep -q .libs/dummy.o out5; then exit 1; fi
	@@fgrep -q ' dummy.o' out5
	@@if fgrep ' dummy.o' out5|fgrep -- -fPIC; then exit 1; fi

compile-mode-6: dummy.c
	${LIBTOOL} --mode=compile ${CC} -static -prefer-pic -c dummy.c|tee out6
	@@if fgrep -q .libs/dummy.o out6; then exit 1; fi
	@@fgrep ' dummy.o' out6|fgrep -q -- -fPIC

compile-mode-7: dummy.c
	${LIBTOOL} --mode=compile ${CC} -static -fpie -c dummy.c|tee out7
	@@if fgrep -q .libs/dummy.o out7; then exit 1; fi
	@@fgrep ' dummy.o' out7|fgrep -q -- -fpie
	@@if fgrep ' dummy.o' out7|fgrep -- -fpie|fgrep -q -- -fPIC; then exit 1; fi

compile-mode-8: dummy.c
	${LIBTOOL} --mode=compile ${CC} -static -prefer-pic -fpie -c dummy.c|tee out8
	@@if fgrep -q .libs/dummy.o out8; then exit 1; fi
	@@fgrep ' dummy.o' out8|fgrep -q -- -fPIC
	@@if fgrep ' dummy.o' out8|fgrep -- -fPIC|fgrep -q -- -fpie;  then exit 1; fi

compile-mode-9: dummy.c
	${LIBTOOL} --mode=compile ${CC} -shared -c dummy.c|tee out9
	@@fgrep -q .libs/dummy.o out9

compile-mode-10: dummy.c
	${LIBTOOL} --mode=compile ${CC} -shared -prefer-non-pic -c dummy.c|tee out10
	@@fgrep .libs/dummy.o out10|fgrep -q -- -fPIC

compile-mode-11: dummy.c
	# -shared + -static -> static
	${LIBTOOL} --mode=compile ${CC} -shared -static -c dummy.c|tee out11
	@@if fgrep -q .libs/dummy.o out11; then exit 1; fi
	@@fgrep -q ' dummy.o' out11
	@@if fgrep ' dummy.o' out11|fgrep -q -- -fPIC; then exit 1; fi

compile-mode-12: dummy.c
	# -shared + -static -> static
	${LIBTOOL} --mode=compile ${CC} -shared -static -prefer-pic -c dummy.c|tee out12
	@@if fgrep -q .libs/dummy.o out12; then exit 1; fi
	@@fgrep ' dummy.o' out12|fgrep -q -- -fPIC

compile-mode-13: dummy.c
	# -static + -shared ->  configuration error
	if ${LIBTOOL} --mode=compile ${CC} -static -shared -c dummy.c; then exit 1; fi

test-Wc: 
	${LIBTOOL} --mode=compile ${CC} -c -Wc,-DA,-DB ${.CURDIR}/d.c

test-Xcompiler: 
	${LIBTOOL} --mode=compile ${CC} -c -Xcompiler -DA -Xcompiler -DB ${.CURDIR}/d.c

stupid-gdb:
	@@${LIBTOOL} --config|fgrep -q 'objdir=.libs'

linkception-0: e.lo
	# check that linking with libX11 works, which is funny to do
	# since -lX11 brings in -lxcb, BUT -lxcb wants some other stuff
	# afterwards !
	${LIBTOOL} --mode=link ${CC} -o e -L/usr/X11R6/lib e.lo -lX11

test-link-4: e.lo
	@@if ${LIBTOOL} --mode=link ${CC} -o e -L /usr/X11R6/lib e.lo -lX11; then exit 1; fi

# check that -x c works with libraries linking
test-link-5: liba4.la

# but not with programs !!!
test-link-6: e.lo
	@@if ${LIBTOOL} --mode=link ${CC} -o e -x c e.lo 2>/dev/null; then exit 1; fi

test-o-0: e.lo
	@@if ${LIBTOOL} --mode=link ${CC} -oe e.lo; then exit 1; fi
	
pthread-0: e.lo liba2.la
	@@${LIBTOOL} --mode=link ${CC} -o e e.lo -la2|tee out.13
	@@fgrep -q -- -pthread out.13

pthread-1: e.lo liba2.la
	@@${LIBTOOL} --mode=link ${CC} -pthread -o e e.lo -la2|tee out.14
	@@fgrep -q -- -pthread out.14
	@@if grep -q -- "-pthread.*-pthread" out.14; then exit 1; fi

pthread-2: e.lo
	${LIBTOOL} --mode=link ${CC} -o e -pthread -pthread e.lo |tee out.15
	@@fgrep -q -- -pthread out.15
	@@if grep -q -- "-pthread.*-pthread" out.15; then exit 1; fi

release-0: liba3.la
	test -f .libs/liba3-0.so.0.0 || exit 1

release-1: ${DEST}/lib/liba3.la
	@@test -h ${DEST}/lib/liba3.so.0.0
	@@test `readlink ${DEST}/lib/liba3.so.0.0` = liba3-0.so.0.0

trip-0: dummy.c a.lo b.lo
	rm -f .libs/libtrip.so.10.5
	mkdir -p lib1
	${CC} -shared -o  lib1/libtrip.so.10.5 dummy.c
	${CC} -shared -o  lib1/libtrip.so.10.10 dummy.c
	${LIBTOOL} --mode=link ${CC} -o libbogus.la -Llib1 ${SOPTS} a.lo b.lo -ltrip
	if test -e .libs/libtrip.so.10.5; then exit 1; fi

#weird-shit-1: a.lo
#	${LIBTOOL} --mode=link ${CC} -rpath /usr/local/lib --export-symbols a.def -o liba2.la a.lo
#
${DEST}/bin/p1: ${DEST}/lib/liba.la
${DEST}/bin/p2: ${DEST}/lib/liba0.la ${DEST}/lib/liba1.la

# basic framework to build/link stuff
SOPTS = -version-info 0:0:0 -rpath /usr/local/lib

LIBS = a a0 a1 a2 a3 a4 bad a9 ${WEIRD}
PRGS = p1 p2

OBJ_a = a.lo b.lo
a_OPTS = ${SOPTS}

OBJ_a0 = a.lo
a0_OPTS = ${SOPTS}

OBJ_a1 = b.lo
a1_OPTS = ${SOPTS} -la0

OBJ_a2 = a.lo b.lo
a2_OPTS = ${OPTS} -pthread

OBJ_a3 = a.lo b.lo
a3_OPTS = ${a_OPTS} -release 0

OBJ_a4 = a.lo b.lo
a4_OPTS = -x c ${a_OPTS} 

# libbad has a bogus rpath option
OBJ_bad = a.lo b.lo
bad_OPTS = --version-info 0:0:0 --rpath /usr/local/lib

OBJ_a9 = ${OBJ_a}
a9_OPTS = ${a_OPTS}
LIBS_ENV = liba9_ltversion=4.2

OBJ_${WEIRD} = ${OBJ_a}
${WEIRD}_OPTS = ${a_OPTS}
LIBS_ENV += lib${NOTWEIRD}_ltversion=5.6

OBJ_p1 = c.lo liba.la
LINK_p1 = c.lo -la

OBJ_p2 = c.lo liba0.la liba1.la
LINK_p2 = c.lo -la1


# stuff to compile/link/install everything
.SUFFIXES: .lo

.c.lo:
	${LIBTOOL} --mode=compile ${CC} -c ${CFLAGS} ${.CURDIR}/$*.c

.for p in ${PRGS}
$p: ${OBJ_$p}
	${LIBTOOL} --mode=link ${CC} ${CFLAGS} -o $@@ ${LINK_$p}
.endfor

.for t in ${PRGS}
${DEST}/bin/$t: $t
	mkdir -p ${DEST}/bin
	${LIBTOOL} --mode=install cp $t ${DEST}/bin/$t
.endfor

.for t in ${LIBS}
${DEST}/lib/lib$t.la: lib$t.la
	mkdir -p ${DEST}/lib
	${LIBTOOL} --mode=install cp lib$t.la ${DEST}/lib/lib$t.la
.endfor

.for l in ${LIBS}
lib$l.la: ${OBJ_$l}
	${LIBS_ENV} ${LIBTOOL} --mode=link ${CC} ${CFLAGS} -o $@@ ${$l_OPTS} ${OBJ_$l}
.endfor

CLEANFILES += ${PRGS} s1 e dummy*.c *.d *.o *.lo *.la .libs/* lib1/* out*
CLEANFILES += ${DEST}/bin/* ${DEST}/lib/* ${DEST2}/lib/* ${DEST3}/lib/*

.PHONY: ${REGRESS_TARGETS} regress compile-tests

.include <bsd.regress.mk>
@


1.35
log
@The libtool regress used PROGS as a regular variable.  Rename it
to avoid the new special meaning in bsd.prog.mk.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2017/07/07 10:56:13 bluhm Exp $
d351 1
a351 1
CLEANFILES += ${PRGS} s1 *.c *.o *.lo *.la .libs/* lib1/* out*
@


1.34
log
@Make libtool regress tests pass:
- There are no NOPIC architectures anymore.
- Add DISABLED targets for tests failing intensionally without
  touching the real targets.
- In execute mode libtool command line must use ./p2 as .  is not
  in my PATH.
OK mpi@@ espie@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2012/07/17 09:35:09 jasper Exp $
d284 1
a284 1
PROGS = p1 p2
d329 1
a329 1
.for p in ${PROGS}
d334 1
a334 1
.for t in ${PROGS}
d351 1
a351 1
CLEANFILES += ${PROGS} s1 *.c *.o *.lo *.la .libs/* lib1/* out*
@


1.33
log
@test the actual object file instead of the wrapper script

ok espie@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2012/07/13 08:44:31 espie Exp $
a18 4
.include <bsd.own.mk>
.if defined(NOPIC)
FAILING_TARGETS += static-arch-fail
.else
a22 1
.endif
d26 4
d68 1
a68 1
	${LIBTOOL} --mode=execute p2
a136 4

static-arch-fail:
	@@echo "Some tests are not run on static architectures"
	@@exit 1
@


1.32
log
@fixed test
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2012/07/13 08:31:46 espie Exp $
d26 1
a26 1
FAILING_TARGETS += test-all-static 
d76 1
a76 1
	file s1 | grep 'statically linked'
@


1.31
log
@wrong library ordering
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2012/07/12 12:36:56 espie Exp $
d25 2
a26 2
		    release-0 release-1
FAILING_TARGETS += test-all-static trip-0
d272 1
d356 1
a356 1
CLEANFILES += ${PROGS} s1 *.c *.o *.lo *.la .libs/* out*
@


1.30
log
@crazy libtool option non-handling
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2012/07/12 12:18:05 espie Exp $
d26 1
a26 1
FAILING_TARGETS += test-all-static 
d270 7
@


1.29
log
@fucking stupid testcases
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2012/07/12 11:42:57 espie Exp $
d10 1
a10 1
	pthread-2
d247 3
@


1.28
log
@more pthread
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2012/07/11 14:24:36 espie Exp $
d4 2
a5 1
	test-link-2 test-link-3 test-run-2 test-run-3 \
d237 10
d277 1
a277 1
LIBS = a a0 a1 a2 a3 bad a9 ${WEIRD}
d294 3
@


1.27
log
@check link is okay too
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2012/07/11 14:14:05 espie Exp $
d8 2
a9 1
	test-Wc test-Xcompiler stupid-gdb pthread-0 pthread-1
d244 5
@


1.26
log
@-release 0 is valid
fix --version-info   -> -version-info
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2012/07/11 13:24:44 espie Exp $
d23 1
a23 1
		    release-0
d246 4
@


1.25
log
@sprinkle pthread tests
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2012/07/11 08:58:14 espie Exp $
d22 2
a23 1
		    ${COMPILE_TESTS} prefer-static linkception-0
d244 3
d254 1
a254 1
SOPTS = --version-info 0:0:0 -rpath /usr/local/lib
d256 1
a256 1
LIBS = a a0 a1 a2 bad a9 ${WEIRD}
d270 3
@


1.24
log
@check that linking with X11 will work, we'll check later exactly what
we want there.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2012/07/10 11:37:14 espie Exp $
d8 1
a8 1
	test-Wc test-Xcompiler stupid-gdb
d234 9
d252 1
a252 1
LIBS = a a0 a1 bad a9 ${WEIRD}
d263 3
@


1.23
log
@dd all kinds of funky tests for compile mode
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2012/07/09 23:15:33 espie Exp $
d8 1
a8 1
	test-Wc test-Xcompiler stupid-gdb \
d21 3
a23 3
REGRESS_TARGETS += version-override-0 version-override-1 \
		    ${COMPILE_TESTS}
FAILING_TARGETS += test-all-static error-5 prefer-static
d228 9
@


1.22
log
@#! stupid test
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2012/07/09 21:37:33 espie Exp $
d8 7
a14 1
	test-Wc test-Xcompiler stupid-gdb
d21 2
a22 1
REGRESS_TARGETS += version-override-0 version-override-1
d28 2
d140 79
d293 1
a293 1
CLEANFILES += ${PROGS} s1 *.c *.o *.lo *.la .libs/* 
d296 1
a296 1
.PHONY: ${REGRESS_TARGETS} regress
@


1.21
log
@support for -Wc,*,*  and -Xcompiler $arg
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2012/07/09 18:42:45 espie Exp $
d8 1
a8 1
	test-Wc test-Xcompiler
d136 3
@


1.20
log
@second fuckup in implicit detection
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2012/07/09 14:33:53 espie Exp $
d7 2
a8 1
	test-help error-4 error-6 test-bond test-implicit-2
d130 6
@


1.19
log
@another stupid test
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2012/07/09 12:57:16 espie Exp $
d7 1
a7 1
	test-help error-4 error-6 test-bond
d24 1
d116 4
d196 1
a196 1
CLEANFILES += ${DEST}/bin/* ${DEST}/lib/* ${DEST2}/lib/*
@


1.18
log
@more arg parsing failure
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2012/07/09 10:13:45 espie Exp $
d7 1
a7 1
	test-help error-4 error-6
d71 3
a73 2
dummy.c:
	@@touch dummy.c
d75 2
a76 2
dummy2.c:
	@@touch dummy2.c
@


1.17
log
@we should prefer --disable-shared  if both are mentioned
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2012/07/08 07:46:35 jasper Exp $
d7 1
a7 1
	test-help error-4
d90 2
a91 1
	if ${LIBTOOL} -mode=compile ${CC} -c -o dummy.lo dummy.c; then exit 1; fi
d95 4
@


1.16
log
@add a test for the fixed --help
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2012/07/07 18:27:18 espie Exp $
d7 1
a7 1
	test-help
d9 1
a9 1
FAILING_TARGETS += error-0 error-4
d15 1
a15 1
FAILING_TARGETS += test-all-static error-5
d74 6
d95 3
d137 1
@


1.15
log
@reorder stuff so that known failing targets are last
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2012/07/06 19:16:52 espie Exp $
d6 2
a7 1
	test-implicit-0 test-run-4 test-implicit-1
d56 3
@


1.14
log
@from print/pdflib
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2012/07/04 13:11:14 espie Exp $
d5 2
a6 3
	error-0 error-1 error-2 error-3 error-4 test-alternate-0 \
	test-implicit-0 test-run-4 \
	test-implicit-1
d8 1
d11 1
a11 1
REGRESS_TARGETS += static-arch-fail
d13 2
a14 2
REGRESS_TARGETS += test-all-static error-5 \
	version-override-0 version-override-1
d16 2
@


1.13
log
@library version overrides
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2012/07/04 12:58:12 espie Exp $
d7 1
d20 1
d90 4
d168 2
a169 1
CLEANFILES += ${PROGS} s1 *.c *.o *.lo *.la .libs/* ${DEST}/bin/* ${DEST}/lib/*
@


1.12
log
@move stuff around, don't even try to run dynamic arch tests on static arches.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2012/07/04 12:46:47 espie Exp $
d6 1
a6 1
	test-implicit-0 test-run-4
d12 2
a13 1
REGRESS_TARGETS += test-all-static error-5
d20 3
d88 6
d104 1
a104 1
LIBS = a a0 a1 bad
d119 7
d159 1
a159 1
	${LIBTOOL} --mode=link ${CC} ${CFLAGS} -o $@@ ${$l_OPTS} ${OBJ_$l}
@


1.11
log
@our libtool currently fucks up -- and - options.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2012/07/04 11:52:46 espie Exp $
d5 9
a13 2
	error-0 error-1 error-2 error-3 error-4 error-5 test-alternate-0 \
	test-implicit-0 test-run-4 test-all-static
d83 4
@


1.10
log
@simplify
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2012/07/04 10:46:32 sthen Exp $
d5 1
a5 1
	error-0 error-1 error-2 test-alternate-0 \
d64 6
d83 1
a83 1
LIBS = a a0 a1
d94 3
@


1.9
log
@- fix dependencies for test-all-static so it runs standalone
- add s1, p1, p2 to CLEANFILES

pointed out by espie@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2012/07/04 10:22:45 sthen Exp $
d125 1
a125 1
CLEANFILES += p1 p2 s1 *.c *.o *.lo *.la .libs/* ${DEST}/bin/* ${DEST}/lib/*
@


1.8
log
@add a test for -all-static. ok jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2012/07/02 14:28:38 espie Exp $
d42 4
a45 1
test-all-static:
a46 1
	file s1 | grep 'statically linked'
d125 1
a125 1
CLEANFILES += *.c *.o *.lo *.la .libs/* ${DEST}/bin/* ${DEST}/lib/*
@


1.7
log
@fix dependencies, test --mode=execute
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2012/07/02 13:45:27 espie Exp $
d6 1
a6 1
	test-implicit-0 test-run-4
d40 5
@


1.6
log
@gnu libtool forbids invalid modes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2012/07/02 13:11:34 espie Exp $
d5 2
a6 1
	error-0 error-1 error-2 test-alternate-0
d38 3
d61 3
d102 1
a102 1
${DEST}/bin/$t:
d108 1
a108 1
${DEST}/lib/lib$t.la:
@


1.5
log
@recent libtool has some alternate invocation mode
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2012/07/02 12:58:53 espie Exp $
d41 4
a44 2
error-1:
	touch dummy.c
d47 1
a47 2
error-2:
	touch dummy.c
d50 4
a53 2
test-alternate-0:
	touch dummy.c
@


1.4
log
@so gnu libtool even has some forbidden tags...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2012/07/02 12:40:20 espie Exp $
d5 1
a5 1
	error-0 error-1 error-2
d49 5
@


1.3
log
@those should error out... They don't, not yet.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2012/07/02 12:22:05 espie Exp $
d5 1
a5 1
	error-0 error-1
d45 3
@


1.2
log
@tweak so that it also works with gnu-libtool
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2012/07/02 12:02:36 espie Exp $
d4 2
a5 1
	test-link-2 test-link-3 test-run-2 test-run-3
d37 9
d100 1
a100 1
CLEANFILES += *.o *.lo *.la .libs/* ${DEST}/bin/* ${DEST}/lib/*
@


1.1
log
@basic libtool regression tests
okay jasper@@
@
text
@d1 1
a1 1
# $OpenBSD$
d8 2
d26 1
a26 3
test-install-0: dest/liba.la

test-install-1: dest/p1
d28 1
a28 2
test-run-1: dest/p1
	LD_LIBRARY_PATH=dest dest/p1
d30 2
a31 2
test-run-3:  dest/p2
	LD_LIBRARY_PATH=dest dest/p2
d33 2
a34 2
dest/p1: dest/liba.la
dest/p2: dest/liba0.la dest/liba1.la
d36 2
d40 1
a40 1
SOPTS = --version-info 0:0:0 --rpath /usr/local/lib
a61 2
FULLLIBS = ${LIBS:S/^/lib/:S/$/.la/}

d73 10
a82 4
.for t in ${PROGS} ${FULLLIBS}
dest/$t:
	mkdir -p dest
	${LIBTOOL} --mode=install cp $t dest/$t
d90 1
a90 1
CLEANFILES += *.o *.lo *.la .libs/* dest/*
@

