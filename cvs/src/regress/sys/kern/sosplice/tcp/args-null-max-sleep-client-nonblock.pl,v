head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.22
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.20
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.16
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	bluhm_20130103:1.1.1.1
	bluhm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.01.17.17.58.28;	author bluhm;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.15.10.43.17;	author bluhm;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.03.17.36.39;	author bluhm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.01.03.17.36.39;	author bluhm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Improve socket splicing tests:
- One more UDP test.
- Enforce that kernel returns EFBIG where appropriate.
- Better comments in test files.
@
text
@# test maximum data length with empty client write,
# client sleeps before writing,
# relay is non-blocking

use strict;
use warnings;

our %args = (
    client => {
	func => sub { sleep 3; write_stream(@@_); },
	len => 0,
    },
    relay => {
	max => 113,
	nomax => 1,
	nonblocking => 1,
    },
    len => 0,
    md5 => "d41d8cd98f00b204e9800998ecf8427e",
);
@


1.2
log
@The socket splicing tests allow the kernel to return EFBIG in case
the splicing maximum has been reached.
@
text
@d1 3
a3 1
# test maximum data length with delay before empty client write with non-blocking relay
@


1.1
log
@Initial revision
@
text
@d13 1
@


1.1.1.1
log
@Reengineer the socket splicing regression tests:
- Move the tests from splice to new sosplice directory for consistent naming.
- Split the API tests and the TCP splicing tests into separate directories.
- Create some tests for the upcoming UDP splicing.
- Tests can be run in obj directories now.
- The API tests can run both on a local and on a remote machine now.
- Fix the forking TCP tests which splice and read or write simultaneously.
- Bunch of little fixes for races in the tests.
- Deduplicate code, move checks into common functions.
@
text
@@
