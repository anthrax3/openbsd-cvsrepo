head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.16
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.12
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.10
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	bluhm_20130103:1.1.1.1
	bluhm:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2013.08.09.19.51.11;	author bluhm;	state Exp;
branches;
next	1.4;

1.4
date	2013.08.07.00.38.41;	author bluhm;	state Exp;
branches;
next	1.3;

1.3
date	2013.08.01.21.26.30;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.08.21.42.19;	author bluhm;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.03.17.36.38;	author bluhm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.01.03.17.36.38;	author bluhm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Move the check for required perl packages into Makefile.inc so that
make obj always runs through als sudirs.
@
text
@#	$OpenBSD: Makefile,v 1.4 2013/08/07 00:38:41 bluhm Exp $

SUBDIR =
SUBDIR +=	error
SUBDIR +=	tcp
SUBDIR +=	udp
SUBDIR +=	perf

.include <bsd.subdir.mk>
@


1.4
log
@Check wether the required perl packages are installed.  If not,
print a message and skip the regression tests which need them.
OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2013/08/01 21:26:30 kettenis Exp $
d3 1
a3 9

PERL_REQUIRE !=	perl -Mstrict -Mwarnings -e ' \
    eval { require BSD::Socket::Splice } or print $@@; \
    eval { require IO::Socket::INET6 } or print $@@; \
    eval { require Socket6 } or print $@@; \
'

SUBDIR +=	perf
.if empty(PERL_REQUIRE)
d7 1
a7 5
.else
all: _SUBDIRUSE
	@@echo "${PERL_REQUIRE}"
	@@echo install these perl packages for additional tests
.endif
@


1.3
log
@Some tests are currently failing.  Only run those if the REGRESS_FULL
variable is set.
@
text
@d1 8
a8 1
#	$OpenBSD: Makefile,v 1.2 2013/01/08 21:42:19 bluhm Exp $
d11 1
a11 2

.if defined(REGRESS_FULL)
d15 4
@


1.2
log
@Add performance test for socket splicing.  Two tcpbench processes
are used as server and client.  Between them is a relay process
that can either copy or splice the data.  Benchmarking is done for
TCP and UDP and for copy and splice.  All tests are executed on
localhost per default.  Alternatively the relay process can be
started on a remote machine.
Depending on hardware and environment socket splicing has increased
my throughput by 30% or up to 150% in this test.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.1.1 2013/01/03 17:36:38 bluhm Exp $
d3 3
a5 1
SUBDIR =
d9 1
a9 1
SUBDIR +=	perf
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD$
d7 1
@


1.1.1.1
log
@Reengineer the socket splicing regression tests:
- Move the tests from splice to new sosplice directory for consistent naming.
- Split the API tests and the TCP splicing tests into separate directories.
- Create some tests for the upcoming UDP splicing.
- Tests can be run in obj directories now.
- The API tests can run both on a local and on a remote machine now.
- Fix the forking TCP tests which splice and read or write simultaneously.
- Bunch of little fixes for races in the tests.
- Deduplicate code, move checks into common functions.
@
text
@@
