head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.10
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	bluhm_20130103:1.1.1.1
	bluhm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.08.18.22.58.19;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	Lrki66TGIJh8PoUM;

1.2
date	2013.01.05.13.53.42;	author bluhm;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.03.17.36.39;	author bluhm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.01.03.17.36.39;	author bluhm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Make the perl modules consistent for the multiple regression tests.
This includes coding style, better error messages and variable
naming.
@
text
@#!/usr/bin/perl
#	$OpenBSD: direct.pl,v 1.2 2013/01/05 13:53:42 bluhm Exp $

# Copyright (c) 2010-2014 Alexander Bluhm <bluhm@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;
use Socket;
use Socket6;

use Client;
use Server;
require 'funcs.pl';

sub usage {
	die "usage: direct.pl [test-args.pl]\n";
}

my $testfile;
our %args;
if (@@ARGV and -f $ARGV[-1]) {
	$testfile = pop;
	do $testfile
	    or die "Do test file $testfile failed: ", $@@ || $!;
}
@@ARGV == 0 or usage();

my $s = Server->new(
    idle		=> 4,
    func		=> \&read_datagram,
    %{$args{server}},
    protocol		=> "udp",
    listendomain	=> AF_INET,
    listenaddr		=> "127.0.0.1",
);
my $c = Client->new(
    func		=> \&write_datagram,
    %{$args{client}},
    protocol		=> "udp",
    connectdomain	=> AF_INET,
    connectaddr		=> "127.0.0.1",
    connectport		=> $s->{listenport},
);

$s->run;
$c->run->up;
$s->up;

$c->down;
$s->down;

check_logs($c, undef, $s, %args);
@


1.2
log
@Add more tests for UDP socket splicing and enhance existing tests.
@
text
@d2 1
a2 1
#	$OpenBSD: direct.pl,v 1.1.1.1 2013/01/03 17:36:39 bluhm Exp $
d4 1
a4 1
# Copyright (c) 2010-2013 Alexander Bluhm <bluhm@@openbsd.org>
d31 1
a31 1
my $test;
d34 3
a36 3
	$test = pop;
	do $test
	    or die "Do test file $test failed: ", $@@ || $!;
a37 1

@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
#	$OpenBSD$
d42 1
@


1.1.1.1
log
@Reengineer the socket splicing regression tests:
- Move the tests from splice to new sosplice directory for consistent naming.
- Split the API tests and the TCP splicing tests into separate directories.
- Create some tests for the upcoming UDP splicing.
- Tests can be run in obj directories now.
- The API tests can run both on a local and on a remote machine now.
- Fix the forking TCP tests which splice and read or write simultaneously.
- Bunch of little fixes for races in the tests.
- Deduplicate code, move checks into common functions.
@
text
@@
