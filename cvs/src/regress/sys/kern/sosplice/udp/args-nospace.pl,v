head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.18
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.16
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.14
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.12
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	bluhm_20130103:1.1.1.1
	bluhm:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.01.05.13.53.42;	author bluhm;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.03.17.36.39;	author bluhm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.01.03.17.36.39;	author bluhm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Add more tests for UDP socket splicing and enhance existing tests.
@
text
@# test sending an udp packet that does not fit into splice space

use strict;
use warnings;

our %args = (
    client => {
	lengths => [ 1, 10000, 2, 10001, 3 ],
	sndbuf => 30000,
	nocheck => 1,
    },
    relay => {
	func => sub { sleep 3; errignore(@@_); relay(@@_); },
	down => "Message too long",
	rcvbuf => 30000,
	sndbuf => 10000,
	nocheck => 1,
    },
    server => {
	rcvbuf => 30000,
    },
    len => 10003,
    lengths => "1 10000 2",
    md5 => "2ec9a4b45a449095245177d2cf51dd24",
);
@


1.1
log
@Initial revision
@
text
@d13 2
d17 1
a19 1
	num => 4,
d22 3
a24 3
    len => 10006,
    lengths => "1 10000 2 3",
    md5 => "90c347b1853f03d6e73aa88c9d12ce55",
@


1.1.1.1
log
@Reengineer the socket splicing regression tests:
- Move the tests from splice to new sosplice directory for consistent naming.
- Split the API tests and the TCP splicing tests into separate directories.
- Create some tests for the upcoming UDP splicing.
- Tests can be run in obj directories now.
- The API tests can run both on a local and on a remote machine now.
- Fix the forking TCP tests which splice and read or write simultaneously.
- Bunch of little fixes for races in the tests.
- Deduplicate code, move checks into common functions.
@
text
@@
