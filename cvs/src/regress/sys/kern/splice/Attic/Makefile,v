head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.01.03.17.48.15;	author bluhm;	state dead;
branches;
next	1.3;

1.3
date	2011.08.28.13.24.21;	author bluhm;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.22.02.06.00;	author bluhm;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.07.22.06.08;	author bluhm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@The socket splicing tests have been moved from directory splice to
sosplice.
@
text
@#	$OpenBSD: Makefile,v 1.3 2011/08/28 13:24:21 bluhm Exp $

# The following ports must be installed for the regression tests:
# p5-BSD-Socket-Splice	perl interface to OpenBSD socket splicing
# p5-IO-Socket-INET6	object interface for AF_INET and AF_INET6 domain sockets
# p5-Socket6		Perl defines relating to AF_INET6 sockets

ERRS !=			cd ${.CURDIR} && ls error-*.pl
ARGS !=			cd ${.CURDIR} && ls args-*.pl
TARGETS ?=		${ERRS} ${ARGS}
REGRESS_TARGETS =	${TARGETS:S/^/run-regress-/}
CLEANFILES =		*.log ktrace.out

# Fill out these variables if you want to test socket splicing with
# the relay process running on a remote machine.  You have to specify
# a local and remote ip address for the tcp connections.  To control
# the remote machine you need a hostname for ssh to log in.  All the
# test files must be in the same directory local and remote.
LOCAL_ADDR ?=
REMOTE_ADDR ?=
REMOTE_SSH ?=

# Set variables so that make runs with and without obj directory.
# Only do that if necessary to keep visible output short.

.if ${.CURDIR} == ${.OBJDIR}
PERLINC =
PERLPATH =
.else
PERLINC =	-I${.CURDIR}
PERLPATH =	${.CURDIR}/
.endif

# The error tests try to splice unsuitable sockets and check the
# kernel error code.

.for e in ${ERRS}
run-regress-$e: $e
	time perl ${PERLINC} ${PERLPATH}$e
.endfor

# The arg tests take a perl hash with arguments controlling the
# test parameters.  Generally they consist of client, relay, server.
# The relay.pl test fork these three processes locally.  The remote.pl
# test has local client and server but the relay process is running
# on a remote machine reachable with ssh.  For echo.pl test the
# relay is an echo process and the client and server process share
# the same tcp connection.  All tests can run with a regular userland
# copy relay or with a kernel socket splicing relay.

.for a in ${ARGS}
run-regress-$a: $a
	time perl ${PERLINC} ${PERLPATH}relay.pl copy ${PERLPATH}$a
	time perl ${PERLINC} ${PERLPATH}relay.pl splice ${PERLPATH}$a
.if ! empty (REMOTE_SSH)
	time perl ${PERLINC} ${PERLPATH}remote.pl copy ${LOCAL_ADDR} ${REMOTE_ADDR} ${REMOTE_SSH} ${PERLPATH}$a
	time perl ${PERLINC} ${PERLPATH}remote.pl splice ${LOCAL_ADDR} ${REMOTE_ADDR} ${REMOTE_SSH} ${PERLPATH}$a
.endif
	time perl ${PERLINC} ${PERLPATH}echo.pl copy ${PERLPATH}$a
	time perl ${PERLINC} ${PERLPATH}echo.pl splice ${PERLPATH}$a
.endfor

.include <bsd.regress.mk>
@


1.3
log
@Allow splice make regress to run with and without obj directory.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2011/04/22 02:06:00 bluhm Exp $
@


1.2
log
@Make the socket splicing regression tests architecture independent
by using the perl module BSD::Socket::Splice from ports.  Tested
on i386 and sparc64.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2011/01/07 22:06:08 bluhm Exp $
d8 2
a9 2
ERRS !=			ls error-*.pl
ARGS !=			ls args-*.pl
d23 11
d39 1
a39 1
	time perl $e
d53 2
a54 2
	time perl relay.pl copy $a
	time perl relay.pl splice $a
d56 2
a57 2
	time perl remote.pl copy ${LOCAL_ADDR} ${REMOTE_ADDR} ${REMOTE_SSH} $a
	time perl remote.pl splice ${LOCAL_ADDR} ${REMOTE_ADDR} ${REMOTE_SSH} $a
d59 2
a60 2
	time perl echo.pl copy $a
	time perl echo.pl splice $a
@


1.1
log
@Add kernel regression tests for socket splicing.
@
text
@d1 1
a1 1
#	$OpenBSD$
d3 4
a6 3
# The following ports must be installed for the args-* regression test:
# p5-IO-Socket-INET6  object interface for AF_INET and AF_INET6 domain sockets
# p5-Socket6          Perl defines relating to AF_INET6 sockets
d19 3
a21 3
#LOCAL_ADDR ?=
#REMOTE_ADDR ?=
#REMOTE_SSH ?=
d44 1
a44 1
.if REMOTE_SSH
@

