head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2013.01.03.17.48.15;	author bluhm;	state dead;
branches;
next	1.2;

1.2
date	2011.04.22.02.06.00;	author bluhm;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.07.22.06.08;	author bluhm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@The socket splicing tests have been moved from directory splice to
sosplice.
@
text
@#!/usr/bin/perl
# test ENOTCONN for splicing to unconnected socket

use Errno;
use IO::Socket;
use BSD::Socket::Splice "SO_SPLICE";

my $sl = IO::Socket::INET->new(
    Proto => "tcp",
    Listen => 5,
    LocalAddr => "127.0.0.1",
) or die "socket listen failed: $!";

my $s = IO::Socket::INET->new(
    Proto => "tcp",
    PeerAddr => $sl->sockhost(),
    PeerPort => $sl->sockport(),
) or die "socket failed: $!";

my $ss = IO::Socket::INET->new(
    Proto => "tcp",
) or die "socket splice failed: $!";

$s->setsockopt(SOL_SOCKET, SO_SPLICE, pack('i', $ss->fileno()))
    and die "splice to unconnected socket succeeded";
$!{ENOTCONN}
    or die "error not ENOTCONN: $!"
@


1.2
log
@Make the socket splicing regression tests architecture independent
by using the perl module BSD::Socket::Splice from ports.  Tested
on i386 and sparc64.
@
text
@@


1.1
log
@Add kernel regression tests for socket splicing.
@
text
@d6 1
a6 1
use constant SO_SPLICE => 0x1023;
@

