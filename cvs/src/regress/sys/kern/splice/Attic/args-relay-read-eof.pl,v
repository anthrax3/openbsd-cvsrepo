head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.01.03.17.48.15;	author bluhm;	state dead;
branches;
next	1.1;

1.1
date	2011.03.13.01.27.23;	author bluhm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@The socket splicing tests have been moved from directory splice to
sosplice.
@
text
@# test waiting for splice finish with read and eof has happend

use strict;
use warnings;

our %args = (
    client => {
	# fill server buffer, relay send buffer, half relay recv buffer
	# then send eof
	len => 2**13 + 2**10,
    },
    relay => {
	nonblocking => 1,
	readblocking => 1,
	sndbuf => 2**12,
	rcvbuf => 2**12,
    },
    server => {
	# wait until all buffers are filled and client sends eof
	func => sub { sleep 4; read_char(@@_); },
	rcvbuf => 2**12,
    },
    len => 9216,
    md5 => "6d263239be35ccf30cb04c5f58a35dbe",
);

1;
@


1.1
log
@Test that reading from a spliced socket does not return eof if there
is still data in the receive socket buffer.
@
text
@@

