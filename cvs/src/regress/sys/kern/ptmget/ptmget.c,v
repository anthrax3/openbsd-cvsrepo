head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.48
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.38
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.46
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.44
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.42
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.40
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.36
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.34
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.32
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.30
	OPENBSD_5_0:1.2.0.28
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.26
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.24
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.22
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.18
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.16
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.14
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.12
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2016.08.27.04.34.28;	author guenther;	state Exp;
branches;
next	1.2;
commitid	UWR0QWqpPCtSC5Sw;

1.2
date	2004.12.22.00.54.39;	author david;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.18.20.56.22;	author beck;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Pull in <sys/time.h> for struct timeval
<sys/*.h> includes go before <*.h> includes

ok deraadt@@
@
text
@/*	$OpenBSD: ptmget.c,v 1.2 2004/12/22 00:54:39 david Exp $ */
/*
 *	Written by Bob Beck <beck@@openbsd.org> 2004 Public Domain.
 *	Basic test to ensure /dev/ptm works, and what it returns
 * 	can be used via tty(4);
 */
#include <sys/types.h>
#include <sys/ioctl.h>
#include <sys/time.h>
#include <sys/tty.h>
#include <sys/stat.h>

#include <err.h>
#include <fcntl.h>
#include <grp.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

int
main(int argc, char *argv[])
{
	int fd;
	struct ptmget ptm;
	struct termios ti;
	struct stat sb;
	struct group *gr;
	gid_t ttygid;

	if ((gr = getgrnam("tty")) != NULL)
		ttygid = gr->gr_gid;
	else
		ttygid = 4;
	fd = open("/dev/ptm", O_RDWR, 0);
	if (fd == -1)
		err(1, "Can't open /dev/ptm");
	if ((ioctl(fd, PTMGET, &ptm) == -1))
		err(1, "ioctl PTMGET failed");
	if ((tcgetattr(ptm.sfd, &ti) == -1))
		err(1, "tcgetattr failed on slave");
	if ((tcgetattr(ptm.cfd, &ti) == -1))
		err(1, "tcgetattr failed on master");
	if ((ioctl(ptm.sfd, TIOCSTOP) == -1))
		err(1, "ioctl TIOCSTOP failed on slave");
	if ((ioctl(ptm.cfd, TIOCSTOP) == -1))
		err(1, "ioctl TIOCSTOP failed on master");
	bzero(&sb, sizeof(sb));
	if ((stat(ptm.sn, &sb) == -1))
		err(1, "can't stat slave %s", ptm.sn);
	if (sb.st_mode != (S_IFCHR | S_IWUSR | S_IRUSR | S_IWGRP))
		errx(1, "Bad mode %o on %s, should be %o", sb.st_mode,
		     ptm.sn, (S_IFCHR | S_IWUSR | S_IRUSR | S_IWGRP));
	if (sb.st_gid != ttygid)
		errx(1, "%s gid is %d not the tty group(%d)", ptm.sn,
		     sb.st_gid, ttygid);
	if (sb.st_uid != geteuid())
		errx(1, "%s owned by %d, not the current user (%d)", ptm.sn,
		     sb.st_uid, geteuid());
	return(0);
}
@


1.2
log
@some -Wimplicit-function-declaration cleaning; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ptmget.c,v 1.1 2004/01/18 20:56:22 beck Exp $ */
d7 6
a18 5

#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/types.h>
#include <sys/stat.h>
@


1.1
log
@add regression tests for /dev/ptm.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d11 1
d14 1
@

