head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.54
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.44
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.52
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.50
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.48
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.46
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.42
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.40
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2003.07.31.21.48.08;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.16.01.03.35;	author nordin;	state Exp;
branches;
next	1.1;

1.1
date	2001.12.17.01.22.05;	author nordin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@various cleanups; david says results are same
@
text
@/*	$OpenBSD: getrusage.c,v 1.2 2002/02/16 01:03:35 nordin Exp $	*/
/*
 *	Written by Thomas Nordin <nordin@@openbsd.org> 2002 Public Domain.
 */
#include <err.h>
#include <limits.h>
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>

#include <sys/time.h>
#include <sys/resource.h>
#include <sys/types.h>

int
main(int argc, char *argv[])
{
	struct timeval utime;
	struct timeval stime;
        struct rusage r;
        int i;

	timerclear(&utime);
	timerclear(&stime);
	do {
		if (getrusage(RUSAGE_SELF, &r) == -1)
			err(1, "getrusage");

		if (timercmp(&(r.ru_utime), &utime, <))
			errx(1, "user time decreased");
		utime = r.ru_utime;

		if (timercmp(&(r.ru_stime), &stime, <))
			errx(1, "system time decreased");
		stime = r.ru_stime;
        } while (utime.tv_sec < 1 && stime.tv_sec < 1);

        return 0;
}
@


1.2
log
@Add license.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d16 1
a16 1
main()
@


1.1
log
@Check for monotonic user and system time.
@
text
@d1 4
@

