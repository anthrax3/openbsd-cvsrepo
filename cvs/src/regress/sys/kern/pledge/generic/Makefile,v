head	1.8;
access;
symbols
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6;
locks; strict;
comment	@# @;


1.8
date	2017.02.21.15.46.25;	author tb;	state Exp;
branches;
next	1.7;
commitid	ZgMsBDaVsJfQDEJ9;

1.7
date	2016.04.25.19.30.10;	author tedu;	state Exp;
branches;
next	1.6;
commitid	r85wi1VwENfIlP06;

1.6
date	2015.11.03.11.03.10;	author semarie;	state Exp;
branches;
next	1.5;
commitid	7hRWIEvJ53RGOvSV;

1.5
date	2015.11.03.10.08.57;	author semarie;	state Exp;
branches;
next	1.4;
commitid	SRuZRQvS8ifTqGDg;

1.4
date	2015.10.26.18.52.19;	author semarie;	state Exp;
branches;
next	1.3;
commitid	GSr8DcEToMYp39H4;

1.3
date	2015.10.09.11.38.39;	author semarie;	state Exp;
branches;
next	1.2;
commitid	v66qeCEiJDE16OlM;

1.2
date	2015.10.09.11.38.05;	author semarie;	state Exp;
branches;
next	1.1;
commitid	EccnxJocNG6QZ9Um;

1.1
date	2015.10.09.06.44.13;	author semarie;	state Exp;
branches;
next	;
commitid	OMHrQoEqoUBdOfmt;


desc
@@


1.8
log
@Make test_request_tty() also pass in environments without tty by opening a
pseudo-tty and testing on the slave instead of stderr.

nicm confirms that this approach is fine
bluhm tested in his environment and the tests now pass

from semarie
@
text
@#	$OpenBSD: Makefile,v 1.7 2016/04/25 19:30:10 tedu Exp $
PROG=	generic
SRCS+=	main.c manager.c test_stdio.c test_tty.c
NOMAN=	yes

LDADD+=		-lutil
CFLAGS+=	-Wall -Werror

REGRESS_TARGETS+=	test_normal

test_normal: ${PROG}
	./${PROG} | diff -I OpenBSD -u ${.CURDIR}/tests.out -

.include <bsd.regress.mk>
@


1.7
log
@remove systrace
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2015/11/03 11:03:10 semarie Exp $
d6 1
@


1.6
log
@regress: pledge

check for error output for systrace
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2015/11/03 10:08:57 semarie Exp $
a5 2
CLEANFILES += systrace.filter systrace.err

d8 1
a8 1
REGRESS_TARGETS+=	test_normal test_systrace_1 test_systrace_2
a11 11

test_systrace_1: ${PROG} systrace.filter
	systrace -e -a -f systrace.filter ./${PROG} | diff -I OpenBSD -u ${.CURDIR}/tests.out -

test_systrace_2: ${PROG} systrace.filter
	systrace -E systrace.err -a -f systrace.filter ./${PROG} >/dev/null
	test ! -s systrace.err

systrace.filter: systrace.filter.in
	sed 's,$${OBJDIR},'"$$(readlink -nf ${PWD})," ${.CURDIR}/systrace.filter.in >$@@.tmp
	mv $@@.tmp $@@
@


1.5
log
@regress pledge: check the regress with systrace enabled too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2015/10/26 18:52:19 semarie Exp $
d6 1
a6 1
CLEANFILES += systrace.filter
d10 1
a10 1
REGRESS_TARGETS+=	test_normal test_systrace
d15 1
a15 1
test_systrace: ${PROG} systrace.filter
d17 4
@


1.4
log
@update regress suite for pledge
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2015/10/09 11:38:39 semarie Exp $
d6 2
a10 1
REGRESS_SKIP_TARGETS+=	test_systrace
d15 6
a20 2
test_systrace: ${PROG}
	systrace -A ./${PROG} | diff -I OpenBSD -u ${.CURDIR}/tests.out -
@


1.3
log
@regress pledge: remove 'regenerate' target
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2015/10/09 11:38:05 semarie Exp $
d3 1
a3 1
SRCS+=	main.c manager.c test_tty.c
@


1.2
log
@add "tty" regress for pledge
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2015/10/09 06:44:13 semarie Exp $
a15 4

regenerate: ${PROG}
	echo '#	$$OpenBSD: Makefile,v 1.1 2015/10/09 06:44:13 semarie Exp $$' > ${.CURDIR}/tests.out
	./${PROG} | tee -a ${.CURDIR}/tests.out
@


1.1
log
@follow tame->pledge in regress
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2015/09/24 06:25:54 semarie Exp $
d3 1
a3 1
SRCS+=	main.c manager.c
d18 1
a18 1
	echo '#	$$OpenBSD: Makefile,v 1.3 2015/09/24 06:25:54 semarie Exp $$' > ${.CURDIR}/tests.out
@

