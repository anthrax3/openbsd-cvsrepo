head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.6
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2016.04.27.13.05.05;	author semarie;	state Exp;
branches;
next	1.1;
commitid	PEhP4G9PO8yg7dfR;

1.1
date	2015.10.26.18.52.19;	author semarie;	state Exp;
branches;
next	;
commitid	GSr8DcEToMYp39H4;


desc
@@


1.2
log
@unbreak pledge/generic test (breaked since ?)

it still requires a pledge(2) with wlpath enable.
@
text
@/*	$OpenBSD: test_stdio.c,v 1.1 2015/10/26 18:52:19 semarie Exp $ */
/*
 * Copyright (c) 2015 Sebastien Marie <semarie@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/resource.h>
#include <sys/stat.h>

#include <errno.h>
#include <unistd.h>

void
test_request_stdio()
{
	if (pledge("stdio", NULL) == -1)
		_exit(errno);

	clock_getres(CLOCK_MONOTONIC, NULL);
	{ struct timespec tp; clock_gettime(CLOCK_MONOTONIC, &tp); }
	/* fchdir(); */
	getdtablecount();
	getegid();
	geteuid();
	getgid();
	getgroups(0, NULL);
	{ struct itimerval v; getitimer(ITIMER_REAL, &v); }
	getlogin();
	getpgid(0);
	getpgrp();
	getpid();
	getppid();
	/* getresgid(); */
	/* getresuid(); */
	{ struct rlimit rl; getrlimit(RLIMIT_CORE, &rl); }
	getsid(0);
	getthrid();
	{ struct timeval tp; gettimeofday(&tp, NULL); }
	getuid();
	geteuid();
	issetugid();
	/* nanosleep(); */
	/* sigreturn(); */
	umask(0000);
	/* wait4(); */
}
@


1.1
log
@update regress suite for pledge
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d32 1
a32 1
	clock_gettime(CLOCK_MONOTONIC, NULL);
d39 1
a39 1
	getitimer(ITIMER_REAL, NULL);
@

