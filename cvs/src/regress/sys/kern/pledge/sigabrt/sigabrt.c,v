head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@ * @;


1.2
date	2016.01.09.06.13.43;	author semarie;	state Exp;
branches;
next	1.1;
commitid	dcaV4x1VpVc8yivT;

1.1
date	2015.10.09.06.44.13;	author semarie;	state Exp;
branches;
next	;
commitid	OMHrQoEqoUBdOfmt;


desc
@@


1.2
log
@drop "abort" promise, and make it the default behaviour.
The current code has already setted it by default since 1.74

any pledge failure tries to make a coredump (default rules for coredump still
applies: so setuid binaries don't create them locally).

ok deraadt@@
@
text
@/*	$OpenBSD: sigabrt.c,v 1.1 2015/10/09 06:44:13 semarie Exp $ */
/*
 * Copyright (c) 2015 Sebastien Marie <semarie@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <err.h>
#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <unistd.h>

void
handler(int sigraised)
{
	/* this handler shouldn't not be called */
	printf("forbidden STDIO in SIGABRT handler\n");
}

int
main(int argc, char *argv[])
{
	/* install SIGABRT handler */
	signal(SIGABRT, &handler);

	printf("permitted STDIO\n");
	fflush(stdout);

	if (pledge("", NULL) == -1)
		err(EXIT_FAILURE, "pledge");

	/* this will triggered pledge_fail() */
	printf("forbidden STDIO 1\n");

	/* shouldn't continue */
	printf("forbidden STDIO 2\n");
	return (EXIT_SUCCESS);
}
@


1.1
log
@follow tame->pledge in regress
@
text
@d1 1
a1 1
/*	$OpenBSD: sigabrt.c,v 1.3 2015/09/10 11:16:08 semarie Exp $ */
d40 1
a40 1
	if (pledge("abort", NULL) == -1)
@

