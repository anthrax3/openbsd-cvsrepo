head	1.4;
access;
symbols
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.48
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.46
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.44
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.42
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.38
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.36
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.34
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.32
	OPENBSD_5_0:1.2.0.30
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.28
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.26
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.22
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.24
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.20
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.18
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.16
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.14
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.12
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.10
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.8
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2016.09.23.18.39.54;	author otto;	state dead;
branches;
next	1.3;
commitid	ZJZR6FfLNff2dT7s;

1.3
date	2015.08.28.05.55.06;	author guenther;	state Exp;
branches;
next	1.2;
commitid	UrZMYfG1m0zm4x80;

1.2
date	2004.08.02.20.18.50;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.18.16.02.11;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Zap. Has been disabled for a long time and makes unholy assumptions about
the address pace layout. ok bluhhm@@
@
text
@/*	$OpenBSD: mquery.c,v 1.3 2015/08/28 05:55:06 guenther Exp $ */

/*
 * Copyright (c) 2003 Dale Rahn. All rights reserved.
 *
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/mman.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <errno.h>
#include <machine/vmparam.h>

char chardata = 'a';
extern char etext;
extern char edata;

main()
{
	void *addr;
	void *ret;
	void *bound_a;
	void *bound_b;

	/* check heap */

	errno = 0;
	addr = sbrk(0);
	/* mquery fixed is not allowed in heap, check errno? */
	ret = mquery(addr, 0x1000, PROT_READ|PROT_WRITE, MAP_FIXED, -1, 0);
	if (ret != MAP_FAILED) 
		exit (1);

	errno = 0;
	addr = sbrk(0);
	/* mquery should return next available address after heap. */
	ret = mquery(addr, 0x1000, PROT_READ|PROT_WRITE, 0, -1, 0);
	if (ret == MAP_FAILED) 
		exit (2);


	/* check data */

	errno = 0;
	addr = &chardata;
	/* mquery fixed is not allowed in heap, check errno? */
	ret = mquery(addr, 0x1000, PROT_READ|PROT_WRITE, MAP_FIXED, -1, 0);
	if (ret != MAP_FAILED) 
		exit (3);

	errno = 0;
	addr = &chardata;
	/* mquery should return next available address after heap. */
	ret = mquery(addr, 0x1000, PROT_READ|PROT_WRITE, 0, -1, 0);
	if (ret == MAP_FAILED) 
		exit (4);
	if (ret < (void *)&edata) {
		printf("mquerry returned %p &edata %p\n",
		    ret, (void *)&edata);
		/* should always return above data*/
		exit (5);
	}
#define PAD	(64 * 1024 * 8)
	bound_a = (void *)&chardata;
	bound_b = (void *)(&chardata + MAXDSIZ-PAD);
	/* chardata + MAXDSIZ is valid??? */
	if (ret >= bound_a && ret < bound_b) {
		printf("returned %p should be not be ~%p - ~%p\n",
		    ret, bound_a, bound_b);
		exit (6);
	}

	/* check text */

	errno = 0;
	addr = &main;
	/* mquery on text addresses should fail. */
	ret = mquery(addr, 0x1000, PROT_READ|PROT_WRITE, MAP_FIXED, -1, 0);
	if (ret != MAP_FAILED) 
		exit (7);

	errno = 0;
	addr = &main;
	/* mquery on text addresses should return below data or above heap. */
	ret = mquery(addr, 0x1000, PROT_READ|PROT_WRITE, 0, -1, 0);
	if (ret == MAP_FAILED) 
		exit (8);
	if (ret < (void *)&etext) {
		/* should always return above text */
		exit (9);
	}
	/* chardata + MAXDSIZ is valid??? */
	if (ret >= (void *)&chardata && ret < (void *)(&chardata + MAXDSIZ))
		exit (10);
	
	exit (0);
}


@


1.3
log
@Add obviously missing #includes
@
text
@d1 1
a1 1
/*	$OpenBSD: mquery.c,v 1.2 2004/08/02 20:18:50 drahn Exp $ */
@


1.2
log
@A long time ago, the mquery API changed, however the regress was never updated.
pointed out last week, and again today by art.
@
text
@d1 1
a1 1
/*	$OpenBSD: mquery.c,v 1.2 2004/08/02 20:18:26 drahn Exp $ */
d30 2
@


1.1
log
@regression test for mquery syscall.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d41 3
a43 1
	int ret;
d50 2
a51 2
	ret = mquery(MAP_FIXED, &addr, 0x1000, -1, 0);
	if (ret != -1) 
d57 2
a58 2
	ret = mquery(0, &addr, 0x1000, -1, 0);
	if (ret != 0) 
d67 2
a68 2
	ret = mquery(MAP_FIXED, &addr, 0x1000, -1, 0);
	if (ret != -1) 
d74 2
a75 2
	ret = mquery(0, &addr, 0x1000, -1, 0);
	if (ret != 0) 
d77 3
a79 1
	if (addr < (void *)&edata) {
d83 3
d87 3
a89 4
	if (addr >= (void *)&chardata && addr < (void *)(&chardata + MAXDSIZ)) {
		printf("returned %p should be not be ~%p - %p\n",
		    addr, (void *)&chardata,
		    (void *)(&chardata + MAXDSIZ));
d98 2
a99 2
	ret = mquery(MAP_FIXED, &addr, 0x1000, -1, 0);
	if (ret != -1)
d105 2
a106 2
	ret = mquery(0, &addr, 0x1000, -1, 0);
	if (ret != 0)
d108 1
a108 1
	if (addr < (void *)&etext) {
d113 1
a113 1
	if (addr >= (void *)&chardata && addr < (void *)(&chardata + MAXDSIZ))
@

