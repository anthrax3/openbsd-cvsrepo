head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.0.22
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.20
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.18
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.16
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.14
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.10
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2017.03.08.18.42.28;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	EREMRweXYMy47WXs;

1.1
date	2011.07.06.04.43.01;	author guenther;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fix comment block
@
text
@/*	$OpenBSD: fchdir.c,v 1.1 2011/07/06 04:43:01 guenther Exp $ */

/*
 *	Written by Philip Guenther <guenther@@openbsd.org> 2011 Public Domain.
 *
 *	Verify errno returns from fchdir()
 */
#include <sys/types.h>
#include <sys/socket.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

int
main(int argc, char *argv[])
{
	int fds[2];
	int fd;

	if ((fd = open("/etc/passwd", O_RDONLY)) == -1)
		err(1, "open");
	if (fchdir(fd) == 0)
		errx(1, "fchdir file succeeded");
	if (errno != ENOTDIR)
		err(1, "fchdir file: wrong errno");
	close(fd);

	if (pipe(fds))
		err(1, "pipe");
	if (fchdir(fds[0]) == 0)
		errx(1, "fchdir pipe succeeded");
	if (errno != ENOTDIR)
		err(1, "fchdir pipe: wrong errno");
	close(fds[0]);
	close(fds[1]);

	if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) == -1)
		err(1, "socket");
	if (fchdir(fd) == 0)
		errx(1, "fchdir socket succeeded");
	if (errno != ENOTDIR)
		err(1, "fchdir socket: wrong errno");
	close(fd);

	if (fchdir(fd) == 0)
		errx(1, "fchdir bad fd succeeded");
	if (errno != EBADF)
		err(1, "fchdir bad fd: wrong errno");

	return 0;
}
@


1.1
log
@Add regress for errno returns of failed fchdir()s
@
text
@d1 2
a2 1
/*	$OpenBSD$
@

