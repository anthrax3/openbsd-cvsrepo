head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.56
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.58
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.54
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.44
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.52
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.50
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.48
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.46
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.42
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.40
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2003.08.02.01.24.36;	author david;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.31.21.48.08;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.31.15.53.12;	author art;	state Exp;
branches;
next	;


desc
@@


1.3
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@/*	$OpenBSD: minherit.c,v 1.2 2003/07/31 21:48:08 deraadt Exp $	*/
/*
 * Written by Artur Grabowski <art@@openbsd.org> Public Domain.
 */
#include <sys/types.h>
#include <sys/wait.h>
#include <sys/mman.h>

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <err.h>
#include <unistd.h>

#define MAGIC "inherited"

int
main(int argc, char *argv[])
{
	void *map1, *map2;
	int page_size;
	int status;

	page_size = getpagesize();

	if ((map1 = mmap(NULL, page_size, PROT_READ|PROT_WRITE, MAP_ANON,
	    -1, 0)) == MAP_FAILED)
		err(1, "mmap");

	if ((map2 = mmap(NULL, page_size, PROT_READ|PROT_WRITE, MAP_ANON,
	    -1, 0)) == MAP_FAILED)
		err(1, "mmap");

	memset(map1, 0, sizeof(MAGIC));
	memcpy(map2, MAGIC, sizeof(MAGIC));

	if (minherit(map1, page_size, MAP_INHERIT_SHARE) != 0)
		err(1, "minherit");

	if (minherit(map2, page_size, MAP_INHERIT_NONE) != 0)
		err(1, "minherit");

	switch(fork()) {
	case -1:
		err(1, "fork");
	case 0:
		memcpy(map1, MAGIC, sizeof(MAGIC));
		/* map2 is not mapped and should give us error on munmap */
		if (munmap(map2, page_size) == 0)
			_exit(1);
		_exit(0);
	}

	if (wait(&status) < 0)
		err(1, "wait");

	if (!WIFEXITED(status))
		err(1, "child error");

	if (memcmp(map1, MAGIC, sizeof(MAGIC)) != 0)
		return 1;

	return WEXITSTATUS(status) != 0;
}
@


1.2
log
@various cleanups; david says results are same
@
text
@d1 1
a1 1
/*	$OpenBSD: minherit.c,v 1.1 2002/01/31 15:53:12 art Exp $	*/
d13 1
d64 1
a64 1
}@


1.1
log
@simple test for minherit.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d17 1
a17 1
main()
@

