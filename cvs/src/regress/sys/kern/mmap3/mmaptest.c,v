head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.8
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.38
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.36
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.32
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.30
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.28
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.26
	OPENBSD_5_0:1.6.0.24
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.22
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.20
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.16
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.18
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.14
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.12
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.10
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.8
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.6
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	strip:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.09.27.06.28.45;	author doug;	state Exp;
branches;
next	1.6;
commitid	f4Emp3aOD3XoUoYk;

1.6
date	2006.02.20.17.03.27;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.15.12.09.34;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.02.01.24.36;	author david;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.31.21.48.08;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.21.14.45.17;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.21.12.53.35;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.08.21.12.53.35;	author espie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Fix mmap() calls that check for a result other than MAP_FAILED.

ok tedu@@
@
text
@/* $OpenBSD: mmaptest.c,v 1.6 2006/02/20 17:03:27 mickey Exp $ */
/*
 * Copyright (c) 2002 Marc Espie.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
 * PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/mman.h>
#include <fcntl.h>
#include <stdlib.h>
#include <stdio.h>
#include <err.h>
#include <unistd.h>

#define	AREA	(16 * 4096)
/* 
 * Check for mmap/ftruncate interaction.  Specifically, ftruncate on
 * a short file may lose modifications made through an mmapped area.  
 */
int 
main(int argc, char *argv[])
{
	int i;
	int fd;
	char area[AREA];
	char *a2;
	for (i = 0 ; i < AREA; i++)
		area[i] = 5;

	fd = open("test.out", O_WRONLY|O_CREAT|O_TRUNC, 0600);
	if (fd == -1)
		err(1, "open(test.out)");
	if (write(fd, area, AREA) != AREA)
		err(1, "write");
	if (close(fd))
		err(1, "close");
	fd = open("test.out", O_RDWR);
	if (fd == -1)
		err(1, "open(test.out) 2");
	a2 = mmap(NULL, AREA, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);
	if (a2 == MAP_FAILED)
		err(1, "mmap");
	a2[10] = 3;
	msync(a2, AREA, MS_SYNC|MS_INVALIDATE);
	if (mlock(a2, AREA))
		err(1, "mlock");
	if (ftruncate(fd, 128))
		err(1, "ftruncate");
	if (munlock(a2, AREA))
		err(1, "munlock");
	if (close(fd))
		err(1, "close");
	fd = open("test.out", O_RDONLY);
	if (fd == -1)
		err(1, "open(test.out) 3");
	if (read(fd, area, AREA) != 128)
		err(1, "read");
	if (area[10] != 3)
		errx(1, "area[10] != 3");
	if (close(fd))
		err(1, "close");
	return 0;
}

@


1.6
log
@make it more evil and panic; from egger@@
@
text
@d1 1
a1 1
/* $OpenBSD: mmaptest.c,v 1.5 2006/02/15 12:09:34 mickey Exp $ */
d61 1
a61 1
	if (!a2)
@


1.5
log
@use proper msync
@
text
@d1 1
a1 1
/* $OpenBSD: mmaptest.c,v 1.4 2003/08/02 01:24:36 david Exp $ */
d35 1
d45 1
a45 1
	char area[256];
d47 1
a47 1
	for (i = 0 ; i < 256; i++)
d53 1
a53 1
	if (write(fd, area, 256) != 256)
d60 1
a60 1
	a2 = mmap(NULL, 256, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);
d64 3
a66 1
	msync(a2, 256, MS_SYNC|MS_INVALIDATE);
d69 2
d76 1
a76 1
	if (read(fd, area, 256) != 128)
@


1.4
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: mmaptest.c,v 1.3 2003/07/31 21:48:08 deraadt Exp $ */
d63 1
@


1.3
log
@various cleanups; david says results are same
@
text
@d1 1
a1 1
/* $OpenBSD: mmaptest.c,v 1.2 2002/08/21 14:45:17 espie Exp $ */
d33 1
@


1.2
log
@oopsie
@
text
@d1 1
a1 1
/* $OpenBSD: mmaptest.c,v 1.1.1.1 2002/08/21 12:53:35 espie Exp $ */
d39 1
a39 1
main()
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a3 2
 *
 * Extensive code modifications for the OpenBSD project.
@


1.1.1.1
log
@Regression test for non-ubc mmap/ftruncate interaction.
Noticed on strip, test prompted by art@@.

(turns out `normal' strip isn't affected because normal binaries are
page-padded).
@
text
@@
