head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.12
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.46
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.44
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.40
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.38
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.36
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.34
	OPENBSD_5_0:1.4.0.32
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.30
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.28
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.24
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.26
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.22
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.20
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.18
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.16
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.14
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.12
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.10
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2015.01.19.00.22.30;	author guenther;	state Exp;
branches;
next	1.4;
commitid	RqjZigDpMJeDnQTG;

1.4
date	2004.02.28.03.29.15;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.31.21.48.08;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.14.22.43.03;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.11.15.40.31;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@The kernel doesn't actually care what a sockaddr's sa_len is on input,
so don't waste code setting it
@
text
@/*	$OpenBSD: accept.c,v 1.4 2004/02/28 03:29:15 deraadt Exp $	*/
/*
 *	Written by Artur Grabowski <art@@openbsd.org>, 2002 Public Domain.
 */
#include <sys/param.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <sys/wait.h>
#include <sys/un.h>

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>
#include <err.h>
#include <signal.h>
#include <string.h>

#define	SOCK_NAME	"test-sock"

int	child(void);

int
main(int argc, char *argv[])
{
	int listensock, sock;
	struct sockaddr_un sun, csun;
	int csunlen;
	int fd, lastfd;
	int status;
	int ischild = 0;

	/*
	 * Create the listen socket.
	 */
	if ((listensock = socket(PF_LOCAL, SOCK_STREAM, 0)) == -1)
		err(1, "socket");

	unlink(SOCK_NAME);
	memset(&sun, 0, sizeof(sun));
	sun.sun_family = AF_LOCAL;
	strlcpy(sun.sun_path, SOCK_NAME, sizeof sun.sun_path);


	if (bind(listensock, (struct sockaddr *)&sun, sizeof(sun)) == -1)
		err(1, "bind");

	if (listen(listensock, 1) == -1)
		err(1, "listen");

	switch (fork()) {
	case -1:
		err(1, "fork");
	case 0:
		return child();
	}

	while ((fd = open("/dev/null", O_RDONLY)) >= 0)
		lastfd = fd;

	switch (fork()) {
	case -1:
		err(1, "fork");
	case 0:
		ischild = 1;
		close(lastfd);	/* Close one fd so that accept can succeed */
		sleep(2); /* sleep a bit so that we're the second to accept */
	}
	
	sock = accept(listensock, (struct sockaddr *)&csun, &csunlen);

	if (!ischild && sock >= 0)
		errx(1, "accept succeeded in parent");
	if (ischild && sock < 0)
		err(1, "accept failed in child");

	while (!ischild && wait4(-1, &status, 0, NULL) > 0)
		;

	return (0);
}

int
child()
{
	int i, fd, sock;
	struct sockaddr_un sun;

	/*
	 * Create socket and connect to the receiver.
	 */
	if ((sock = socket(PF_LOCAL, SOCK_STREAM, 0)) == -1)
		errx(1, "child socket");

	(void) memset(&sun, 0, sizeof(sun));
	sun.sun_family = AF_LOCAL;
	(void) strlcpy(sun.sun_path, SOCK_NAME, sizeof sun.sun_path);

	if (connect(sock, (struct sockaddr *)&sun, sizeof(sun)) == -1)
		err(1, "child connect");

	return (0);
}
@


1.4
log
@avoid bad functions; tedu ok
@
text
@d1 1
a1 1
/*	$OpenBSD: accept.c,v 1.3 2003/07/31 21:48:08 deraadt Exp $	*/
a42 1
	sun.sun_len = SUN_LEN(&sun);
a97 1
	sun.sun_len = SUN_LEN(&sun);
@


1.3
log
@various cleanups; david says results are same
@
text
@d1 1
a1 1
/*	$OpenBSD: accept.c,v 1.2 2002/02/14 22:43:03 art Exp $	*/
d42 1
a42 1
	strcpy(sun.sun_path, SOCK_NAME);
d98 1
a98 1
	(void) strcpy(sun.sun_path, SOCK_NAME);
@


1.2
log
@Try to initialize variables correctly, that usually helps.
@
text
@d1 1
a1 1
/*	$OpenBSD: accept.c,v 1.1 2002/02/11 15:40:31 art Exp $	*/
d24 1
a24 3
main(argc, argv)
	int argc;
	char *argv[];
@


1.1
log
@Test some obscrue behavior of accept.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d33 1
a33 1
	int ischild;
@

