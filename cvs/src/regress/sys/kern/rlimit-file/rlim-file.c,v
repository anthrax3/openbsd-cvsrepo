head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.46
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.42
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.40
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2014.05.20.01.25.24;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.31.21.48.10;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.08.17.09.24;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.05.16.19.49;	author art;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Use errc/warnc to simplify code.
Also, in 'ftp', always put the error message last, after the hostname/ipaddr.

ok jsing@@ krw@@ millert@@
@
text
@/*	$OpenBSD: rlim-file.c,v 1.3 2003/07/31 21:48:10 deraadt Exp $	*/
/*
 *	Written by Artur Grabowski <art@@openbsd.org> (2002) Public Domain.
 */
#include <sys/types.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <err.h>
#include <unistd.h>
#include <fcntl.h>
#include <errno.h>
#include <string.h>

int
main(int argc, char *argv[])
{
	int lim, fd, fds[2];
	struct rlimit rl;

	if (getrlimit(RLIMIT_NOFILE, &rl) < 0)
		err(1, "getrlimit");

	lim = rl.rlim_cur;

	fd = -1;
	while (fd < lim - 2)
		if ((fd = open("/dev/null", O_RDONLY)) < 0)
			err(1, "open");

	if (pipe(fds) == 0)
		errx(1, "pipe was allowed");

	if (errno == ENFILE)
		errx(1, "try to do the test on a less loaded system");

	if (errno != EMFILE)
		err(1, "bad errno (%d)", errno);

	return 0;
}

@


1.3
log
@various cleanups; david says results are same
@
text
@d1 1
a1 1
/*	$OpenBSD: rlim-file.c,v 1.2 2002/02/08 17:09:24 art Exp $	*/
d37 1
a37 1
		errx(1, "bad errno (%d): %s", errno, strerror(errno));
@


1.2
log
@Check that we get the right errno.
@
text
@d1 1
a1 1
/*	$OpenBSD: rlim-file.c,v 1.1 2002/02/05 16:19:49 art Exp $	*/
d15 1
a15 1
main()
@


1.1
log
@Test for correct enforcement of file rlimits (with a small twist).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d11 2
d32 6
@

