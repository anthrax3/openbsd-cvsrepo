head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.54
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.44
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.52
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.50
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.48
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.46
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.42
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.40
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.38
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.36
	OPENBSD_5_0:1.2.0.34
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.32
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.30
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.26
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.28
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.24
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.22
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.20
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.18
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.16
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.14
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2016.09.20.23.05.27;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	5GU2P4d8AX6RwJst;

1.2
date	2003.07.31.21.48.08;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.27.17.11.51;	author art;	state Exp;
branches;
next	;


desc
@@


1.3
log
@To make debugging the kqueue test easier, always print the assertion
failure before returning.
@
text
@/*	$OpenBSD: kqueue-fork.c,v 1.2 2003/07/31 21:48:08 deraadt Exp $	*/
/*
 *	Written by Artur Grabowski <art@@openbsd.org> 2002 Public Domain
 */

#include <sys/types.h>
#include <sys/event.h>
#include <sys/wait.h>

#include <err.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include "main.h"

int
check_inheritance(void)
{
	int kq, status;

	ASS((kq = kqueue()) >= 0,
	    warn("kqueue"));

	/*
	 * Check if the kqueue is properly closed on fork().
	 */

	switch (fork()) {
	case -1:
		err(1, "fork");
	case 0:
		if (close(kq) < 0)
			_exit(0);
		warnx("fork didn't close kqueue");
		_exit(1);
	}
	if (wait(&status) < 0)
		err(1, "wait");

	if (!WIFEXITED(status))
		errx(1, "child didn't exit?");

	close(kq);
	return (WEXITSTATUS(status) != 0);
}
@


1.2
log
@various cleanups; david says results are same
@
text
@d1 1
a1 1
/*	$OpenBSD: kqueue-fork.c,v 1.1 2002/02/27 17:11:51 art Exp $	*/
a5 5
#include <stdlib.h>
#include <stdio.h>
#include <err.h>
#include <unistd.h>

d10 6
a15 1
int check_inheritance(void);
d22 2
a23 4
	if ((kq = kqueue()) < 0) {
		warn("kqueue");
		return (1);
	}
@


1.1
log
@Add a test for inheriting kqueue descriptors on fork.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d14 2
@

