head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2016.09.20.23.05.27;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	5GU2P4d8AX6RwJst;

1.1
date	2015.12.05.10.51.49;	author blambert;	state Exp;
branches;
next	;
commitid	k6b93i7fxnCQSNsx;


desc
@@


1.2
log
@To make debugging the kqueue test easier, always print the assertion
failure before returning.
@
text
@/*	$OpenBSD: kqueue-timer.c,v 1.1 2015/12/05 10:51:49 blambert Exp $	*/
/*
 * Copyright (c) 2015 Bret Stephen Lambert <blambert@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/time.h>
#include <sys/event.h>

#include <err.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

#include "main.h"

int
do_timer(void)
{
	int kq, n;
	struct kevent ev;
	struct timespec ts;

	ASS((kq = kqueue()) >= 0,
	    warn("kqueue"));

	memset(&ev, 0, sizeof(ev));
	ev.filter = EVFILT_TIMER;
	ev.flags = EV_ADD | EV_ENABLE | EV_ONESHOT;
	ev.data = 500;			/* 1/2 second in ms */

	n = kevent(kq, &ev, 1, NULL, 0, NULL);
	ASSX(n != -1);

	ts.tv_sec = 2;			/* wait 2s for kqueue timeout */
	ts.tv_nsec = 0;

	n = kevent(kq, NULL, 0, &ev, 1, &ts);
	ASSX(n == 1);

	/* Now retry w/o EV_ONESHOT, as EV_CLEAR is implicit */

	memset(&ev, 0, sizeof(ev));
	ev.filter = EVFILT_TIMER;
	ev.flags = EV_ADD | EV_ENABLE;
	ev.data = 500;			/* 1/2 second in ms */

	n = kevent(kq, &ev, 1, NULL, 0, NULL);
	ASSX(n != -1);

	ts.tv_sec = 2;			/* wait 2s for kqueue timeout */
	ts.tv_nsec = 0;

	n = kevent(kq, NULL, 0, &ev, 1, &ts);
	ASSX(n == 1);

	return (0);
}
@


1.1
log
@simplistic regress test for KEVENT_TIMER kqueue(2) calls

ok and prodding tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d17 1
d21 2
d24 1
a25 1
#include <string.h>
d27 1
a27 1
int do_timer(void);
d36 2
a37 2
	if ((kq = kqueue()) == -1)
		return (1);
d44 2
a45 2
	if (kevent(kq, &ev, 1, NULL, 0, NULL) == -1)
		return (1);
d50 2
a51 2
	if ((n = kevent(kq, NULL, 0, &ev, 1, &ts)) != 1)
		return (1);
d60 2
a61 2
	if (kevent(kq, &ev, 1, NULL, 0, NULL) == -1)
		return (1);
d66 2
a67 2
	if ((n = kevent(kq, NULL, 0, &ev, 1, &ts)) != 1)
		return (1);
@

