head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	bluhm_20170111:1.1.1.1
	bluhm:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.01.18.11.56.10;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	8KXn0jlT2hHMPxir;

1.2
date	2017.01.13.01.33.14;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	Fnujr5zqs4CdXD6a;

1.1
date	2017.01.11.17.10.32;	author bluhm;	state Exp;
branches
	1.1.1.1;
next	;
commitid	82rBAAPTPNPaW3zF;

1.1.1.1
date	2017.01.11.17.10.32;	author bluhm;	state Exp;
branches;
next	;
commitid	82rBAAPTPNPaW3zF;


desc
@@


1.3
log
@Do not unconfigure mount points, vnd devices and NFS daemons during
"make clean".  "make build" does a recursive "make cleandir" and
there this behavior is undesired unexpected.
reported by naddy@@
@
text
@# $OpenBSD: Makefile,v 1.2 2017/01/13 01:33:14 bluhm Exp $

CLEANFILES=	diskimage stamp-*

.PHONY: disk mount unconfig clean

disk: unconfig
	dd if=/dev/zero of=diskimage bs=100k count=16
	vnconfig vnd0 diskimage
	disklabel -wA -T ${.CURDIR}/disktemplate vnd0
	disklabel vnd0
.for p in a b d e f g h i j k l m n o p
	newfs vnd0${p}
.endfor
	disklabel vnd0 | grep -q '16 partitions:'
	[ `disklabel vnd0 | grep -c '\<4.2BSD\>'` -eq 15 ]

mount: disk
	mkdir -p /mnt/regress-mount
	mount /dev/vnd0a /mnt/regress-mount
	mkdir /mnt/regress-mount/b
	mount /dev/vnd0b /mnt/regress-mount/b
	f=/mnt/regress-mount; for p in d e f g h i j k l m n o p;\
	    do f=$$f/$$p; mkdir $$f; mount /dev/vnd0$$p $$f; done
	mount
	[ `mount | grep -c '/dev/vnd0. on /mnt/regress-mount\>'` -eq 15 ]

unconfig:
	-umount -f /dev/vnd0a 2>/dev/null || true
	-rmdir /mnt/regress-mount 2>/dev/null || true
	-vnconfig -u vnd0 2>/dev/null || true
	-rm -f stamp-setup

stamp-setup:
	@@echo '\n======== $@@ ========'
	${.MAKE} -C ${.CURDIR} mount
	date >$@@

REGRESS_TARGETS+=	run-regress-unmount-nested
run-regress-unmount-nested: stamp-setup
	@@echo '\n======== $@@ ========'
	! umount /mnt/regress-mount
	umount -f /mnt/regress-mount
	mount
	[ `mount | grep -c '/dev/vnd0. on /mnt/regress-mount\>'` -eq 0 ]

REGRESS_TARGETS+=	run-regress-cleanup
run-regress-cleanup:
	@@echo '\n======== $@@ ========'
	${.MAKE} -C ${.CURDIR} unconfig

.include <bsd.regress.mk>
@


1.2
log
@Make mount points and makefiles for file system tests consistent.
Link tests to the build.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2017/01/11 17:10:32 bluhm Exp $
d3 1
a3 1
CLEANFILES=	diskimage
a32 4

clean: _SUBDIRUSE unconfig
	rm -f a.out [Ee]rrs mklog *.core y.tab.h stamp-* \
	    ${PROG} ${OBJS} ${_LEXINTM} ${_YACCINTM} ${CLEANFILES}
@


1.1
log
@Initial revision
@
text
@d1 3
a3 1
# $OpenBSD$
d7 1
a7 1
disk: clean
d19 5
a23 4
	mount /dev/vnd0a /mnt
	mkdir /mnt/b
	mount /dev/vnd0b /mnt/b
	f=/mnt; for p in d e f g h i j k l m n o p;\
d26 1
a26 1
	[ `mount | grep -c '/dev/vnd0. on /mnt\>'` -eq 15 ]
d29 2
a30 1
	-umount -f /mnt 2>/dev/null || true
d32 1
d34 16
a49 2
clean: unconfig
	-rm -f diskimage
d51 4
a54 7
REGRESS_TARGETS=	run-regress-unmount-nested
run-regress-unmount-nested: mount
	! umount /mnt
	umount -f /mnt
	mount
	[ `mount | grep -c '/dev/vnd0. on /mnt\>'` -eq 0 ]
	cd ${.CURDIR} && ${.MAKE} unconfig
@


1.1.1.1
log
@Add a test that creates a nested tree of mount points.  All partitions
of a vnd(4) device are mounted under /mnt.  A single umount(8) of
/mnt should unmount all of them.
@
text
@@
