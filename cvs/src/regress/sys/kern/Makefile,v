head	1.70;
access;
symbols
	OPENBSD_6_2_BASE:1.70
	OPENBSD_6_1:1.68.0.4
	OPENBSD_6_1_BASE:1.68
	OPENBSD_6_0:1.65.0.4
	OPENBSD_6_0_BASE:1.65
	OPENBSD_5_9:1.65.0.2
	OPENBSD_5_9_BASE:1.65
	OPENBSD_5_8:1.63.0.6
	OPENBSD_5_8_BASE:1.63
	OPENBSD_5_7:1.63.0.4
	OPENBSD_5_7_BASE:1.63
	OPENBSD_5_6:1.62.0.4
	OPENBSD_5_6_BASE:1.62
	OPENBSD_5_5:1.61.0.4
	OPENBSD_5_5_BASE:1.61
	OPENBSD_5_4:1.60.0.4
	OPENBSD_5_4_BASE:1.60
	OPENBSD_5_3:1.60.0.2
	OPENBSD_5_3_BASE:1.60
	OPENBSD_5_2:1.58.0.2
	OPENBSD_5_2_BASE:1.58
	OPENBSD_5_1_BASE:1.56
	OPENBSD_5_1:1.56.0.4
	OPENBSD_5_0:1.56.0.2
	OPENBSD_5_0_BASE:1.56
	OPENBSD_4_9:1.54.0.12
	OPENBSD_4_9_BASE:1.54
	OPENBSD_4_8:1.54.0.10
	OPENBSD_4_8_BASE:1.54
	OPENBSD_4_7:1.54.0.6
	OPENBSD_4_7_BASE:1.54
	OPENBSD_4_6:1.54.0.8
	OPENBSD_4_6_BASE:1.54
	OPENBSD_4_5:1.54.0.4
	OPENBSD_4_5_BASE:1.54
	OPENBSD_4_4:1.54.0.2
	OPENBSD_4_4_BASE:1.54
	OPENBSD_4_3:1.53.0.4
	OPENBSD_4_3_BASE:1.53
	OPENBSD_4_2:1.53.0.2
	OPENBSD_4_2_BASE:1.53
	OPENBSD_4_1:1.52.0.2
	OPENBSD_4_1_BASE:1.52
	OPENBSD_4_0:1.51.0.6
	OPENBSD_4_0_BASE:1.51
	OPENBSD_3_9:1.51.0.4
	OPENBSD_3_9_BASE:1.51
	OPENBSD_3_8:1.51.0.2
	OPENBSD_3_8_BASE:1.51
	OPENBSD_3_7:1.47.0.4
	OPENBSD_3_7_BASE:1.47
	OPENBSD_3_6:1.47.0.2
	OPENBSD_3_6_BASE:1.47
	OPENBSD_3_5:1.43.0.2
	OPENBSD_3_5_BASE:1.43
	OPENBSD_3_4:1.41.0.2
	OPENBSD_3_4_BASE:1.41
	OPENBSD_3_3:1.40.0.2
	OPENBSD_3_3_BASE:1.40
	OPENBSD_3_2:1.39.0.2
	OPENBSD_3_2_BASE:1.39
	OPENBSD_3_1:1.31.0.2
	OPENBSD_3_1_BASE:1.31
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.10
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.70
date	2017.07.07.23.15.27;	author bluhm;	state Exp;
branches;
next	1.69;
commitid	o44bwTTe61BAwrkn;

1.69
date	2017.04.30.09.03.58;	author mpi;	state Exp;
branches;
next	1.68;
commitid	8Ge22hgSZmVdrfGF;

1.68
date	2017.01.13.01.33.14;	author bluhm;	state Exp;
branches;
next	1.67;
commitid	Fnujr5zqs4CdXD6a;

1.67
date	2016.10.05.16.53.34;	author bluhm;	state Exp;
branches;
next	1.66;
commitid	qLGYfwUPZCloAWfT;

1.66
date	2016.09.23.18.40.30;	author otto;	state Exp;
branches;
next	1.65;
commitid	WjJashx8cerChwfM;

1.65
date	2015.10.26.05.28.37;	author semarie;	state Exp;
branches;
next	1.64;
commitid	gkgOc9mkD8ECcTyP;

1.64
date	2015.10.09.06.50.01;	author semarie;	state Exp;
branches;
next	1.63;
commitid	TS9cbsTw5oP0v70W;

1.63
date	2015.02.10.00.45.31;	author claudio;	state Exp;
branches;
next	1.62;
commitid	x1OLVY4gJqPWSOJr;

1.62
date	2014.04.27.22.18.25;	author guenther;	state Exp;
branches;
next	1.61;

1.61
date	2013.10.07.15.52.17;	author jsing;	state Exp;
branches;
next	1.60;

1.60
date	2013.01.03.17.43.34;	author bluhm;	state Exp;
branches;
next	1.59;

1.59
date	2013.01.02.17.54.46;	author millert;	state Exp;
branches;
next	1.58;

1.58
date	2012.04.12.14.00.22;	author guenther;	state Exp;
branches;
next	1.57;

1.57
date	2012.03.05.02.40.21;	author guenther;	state Exp;
branches;
next	1.56;

1.56
date	2011.07.06.04.43.01;	author guenther;	state Exp;
branches;
next	1.55;

1.55
date	2011.07.05.23.14.19;	author claudio;	state Exp;
branches;
next	1.54;

1.54
date	2008.07.25.11.57.53;	author art;	state Exp;
branches;
next	1.53;

1.53
date	2007.04.29.20.13.16;	author art;	state Exp;
branches;
next	1.52;

1.52
date	2006.10.23.15.18.47;	author espie;	state Exp;
branches;
next	1.51;

1.51
date	2005.07.11.12.53.01;	author art;	state Exp;
branches;
next	1.50;

1.50
date	2005.05.31.09.28.07;	author art;	state Exp;
branches;
next	1.49;

1.49
date	2005.04.26.21.37.00;	author miod;	state Exp;
branches;
next	1.48;

1.48
date	2005.04.21.17.45.52;	author miod;	state Exp;
branches;
next	1.47;

1.47
date	2004.08.05.02.59.49;	author art;	state Exp;
branches;
next	1.46;

1.46
date	2004.07.28.21.35.30;	author art;	state Exp;
branches;
next	1.45;

1.45
date	2004.07.20.07.09.26;	author david;	state Exp;
branches;
next	1.44;

1.44
date	2004.04.12.02.49.15;	author tedu;	state Exp;
branches;
next	1.43;

1.43
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.42;

1.42
date	2003.11.04.07.38.08;	author mickey;	state Exp;
branches;
next	1.41;

1.41
date	2003.04.23.21.45.57;	author jason;	state Exp;
branches;
next	1.40;

1.40
date	2002.11.26.18.31.59;	author mickey;	state Exp;
branches;
next	1.39;

1.39
date	2002.08.31.22.56.01;	author mickey;	state Exp;
branches;
next	1.38;

1.38
date	2002.08.31.20.29.46;	author mickey;	state Exp;
branches;
next	1.37;

1.37
date	2002.08.27.16.37.42;	author matthieu;	state Exp;
branches;
next	1.36;

1.36
date	2002.08.21.12.54.39;	author espie;	state Exp;
branches;
next	1.35;

1.35
date	2002.08.17.23.04.29;	author art;	state Exp;
branches;
next	1.34;

1.34
date	2002.07.26.01.32.07;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2002.07.01.18.30.58;	author mickey;	state Exp;
branches;
next	1.32;

1.32
date	2002.04.30.23.23.39;	author millert;	state Exp;
branches;
next	1.31;

1.31
date	2002.03.25.05.21.17;	author nordin;	state Exp;
branches;
next	1.30;

1.30
date	2002.02.23.01.25.11;	author art;	state Exp;
branches;
next	1.29;

1.29
date	2002.02.22.23.34.31;	author art;	state Exp;
branches;
next	1.28;

1.28
date	2002.02.17.05.11.37;	author art;	state Exp;
branches;
next	1.27;

1.27
date	2002.02.16.14.35.42;	author art;	state Exp;
branches;
next	1.26;

1.26
date	2002.02.16.14.24.52;	author art;	state Exp;
branches;
next	1.25;

1.25
date	2002.02.16.13.59.14;	author art;	state Exp;
branches;
next	1.24;

1.24
date	2002.02.16.00.48.44;	author art;	state Exp;
branches;
next	1.23;

1.23
date	2002.02.11.15.41.01;	author art;	state Exp;
branches;
next	1.22;

1.22
date	2002.02.09.13.57.02;	author art;	state Exp;
branches;
next	1.21;

1.21
date	2002.02.08.21.40.01;	author art;	state Exp;
branches;
next	1.20;

1.20
date	2002.02.08.21.10.28;	author art;	state Exp;
branches;
next	1.19;

1.19
date	2002.02.08.20.59.10;	author art;	state Exp;
branches;
next	1.18;

1.18
date	2002.02.08.20.19.00;	author art;	state Exp;
branches;
next	1.17;

1.17
date	2002.02.08.20.04.34;	author art;	state Exp;
branches;
next	1.16;

1.16
date	2002.02.08.19.05.41;	author art;	state Exp;
branches;
next	1.15;

1.15
date	2002.02.08.18.48.24;	author art;	state Exp;
branches;
next	1.14;

1.14
date	2002.02.08.17.36.12;	author art;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.05.16.36.01;	author art;	state Exp;
branches;
next	1.12;

1.12
date	2002.01.31.15.54.18;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.07.00.02.06;	author provos;	state Exp;
branches;
next	1.10;

1.10
date	2002.01.03.15.04.10;	author art;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.03.03.18.01;	author art;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.03.02.31.46;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.17.01.22.05;	author nordin;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.08.22.44.24;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.19.08.41.57;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.29.02.05.54;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	98.06.28.19.54.51;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	98.06.28.18.38.32;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.35;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.70
log
@Remove useless make depend targets.
@
text
@#	$OpenBSD: Makefile,v 1.69 2017/04/30 09:03:58 mpi Exp $

SUBDIR+= __syscall access accept dup2 dup2_self exec_self execve exit extent
SUBDIR+= fchdir
SUBDIR+= fcntl_dup
SUBDIR+= flock
SUBDIR+= futex
SUBDIR+= getpeereid getrusage gettimeofday itimer 
SUBDIR+= kqueue mbuf minherit
SUBDIR+= main-thread-exited
SUBDIR+= mmap mmap2 mmap3 mmap-fail
SUBDIR+= mount
SUBDIR+= nanosleep noexec
SUBDIR+= pledge
SUBDIR+= pread preadv ptmget pty pwrite pwritev rcvtimeo
SUBDIR+= rlimit-file signal signal-stress sigprof sigsuspend
SUBDIR+= sosplice
SUBDIR+= syscall sysvmsg sysvsem
SUBDIR+= sysvshm unalign unfdpass wait
SUBDIR+= sig-stop
SUBDIR+= unixsock bind

# The setuid subtest creates set user/group id binaries in the obj directory.
# Do not run this test by default, it may trigger alerts from daily security.
.ifmake clean || cleandir || obj
SUBDIR+= setuid
.endif

install:

.include <bsd.subdir.mk>
@


1.69
log
@Regression tests for futex(2).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.68 2017/01/13 01:33:14 bluhm Exp $
d14 1
a14 1
#SUBDIR+= pledge
d25 1
a25 1
.ifmake clean || cleandir || depend || obj
@


1.68
log
@Make mount points and makefiles for file system tests consistent.
Link tests to the build.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.67 2016/10/05 16:53:34 bluhm Exp $
d7 1
@


1.67
log
@Link the setuid regress test to the build in a way that the obj
directory gets created.  But do not run the test during a global
make regress, as the test puts a setuid binary into the object
directory.  Also remove the setuid bit after the test has been run
manually.
OK otto@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.66 2016/09/23 18:40:30 otto Exp $
d11 1
@


1.66
log
@Zap mquery test for good
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.65 2015/10/26 05:28:37 semarie Exp $
d20 6
@


1.65
log
@temporary unhook regress/sys/kern/pledge from regress
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.64 2015/10/09 06:50:01 semarie Exp $
a10 1
#SUBDIR+= mquery
@


1.64
log
@hook pledge
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.63 2015/02/10 00:45:31 claudio Exp $
d12 3
a14 1
SUBDIR+= nanosleep noexec pledge pread preadv ptmget pty pwrite pwritev rcvtimeo
@


1.63
log
@Add bind regress test
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.62 2014/04/27 22:18:25 guenther Exp $
d12 1
a12 1
SUBDIR+= nanosleep noexec pread preadv ptmget pty pwrite pwritev rcvtimeo
@


1.62
log
@Regress for access()
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.61 2013/10/07 15:52:17 jsing Exp $
d18 1
a18 1
SUBDIR+= unixsock
@


1.61
log
@Add a regression test that ensures profiling signals are delivered to the
thread whose execution consumed the CPU time and resulted in the profiling
timer expiring. This test currently fails and will be fixed shortly.

Feedback from guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.60 2013/01/03 17:43:34 bluhm Exp $
d3 1
a3 1
SUBDIR+= __syscall accept dup2 dup2_self exec_self execve exit extent
@


1.60
log
@Add subdir sosplice.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.59 2013/01/02 17:54:46 millert Exp $
d13 1
a13 1
SUBDIR+= rlimit-file signal signal-stress sigsuspend
@


1.59
log
@regress test for pty TTYHOG bug; OK miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.58 2012/04/12 14:00:22 guenther Exp $
d14 1
@


1.58
log
@rfork RIP
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.57 2012/03/05 02:40:21 guenther Exp $
d12 1
a12 1
SUBDIR+= nanosleep noexec pread preadv ptmget pwrite pwritev rcvtimeo
@


1.57
log
@If the main thread exits, the process should still be able to get
signals
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.56 2011/07/06 04:43:01 guenther Exp $
a12 1
#SUBDIR+= rfork
@


1.56
log
@Add regress for errno returns of failed fchdir()s
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.55 2011/07/05 23:14:19 claudio Exp $
d9 1
@


1.55
log
@Hook unixsock up
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.54 2008/07/25 11:57:53 art Exp $
d4 1
@


1.54
log
@flock
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.53 2007/04/29 20:13:16 art Exp $
d16 1
@


1.53
log
@add sig-stop.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.52 2006/10/23 15:18:47 espie Exp $
d4 3
a6 1
SUBDIR+= fcntl_dup getpeereid getrusage gettimeofday itimer 
@


1.52
log
@regression test for getpeereid. okay claudio
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.51 2005/07/11 12:53:01 art Exp $
d13 1
@


1.51
log
@+= mmap-fail
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.50 2005/05/31 09:28:07 art Exp $
d4 2
a5 1
SUBDIR+= fcntl_dup getrusage gettimeofday itimer kqueue mbuf minherit
@


1.50
log
@+=sigsuspend
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.49 2005/04/26 21:37:00 miod Exp $
d5 1
a5 1
SUBDIR+= mmap mmap2 mmap3
@


1.49
log
@A regress test for accessing long long on a long aligned, but not long long
aligned, boundary on 32 bit systems.
Written a while ago for m88k, eventually turned into a real regress test.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.48 2005/04/21 17:45:52 miod Exp $
d9 2
a10 1
SUBDIR+= rlimit-file signal signal-stress syscall sysvmsg sysvsem
@


1.48
log
@Add a regression test for the extent subroutines; from NetBSD.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.47 2004/08/05 02:59:49 art Exp $
d3 8
a10 6
SUBDIR+= execve getrusage kqueue mmap mmap2 mmap3 dup2 minherit rlimit-file
SUBDIR+= fcntl_dup dup2_self ptmget pread preadv exit wait mbuf pwrite pwritev
SUBDIR+= syscall __syscall unfdpass accept nanosleep sysvmsg sysvsem
SUBDIR+= sysvshm gettimeofday signal exec_self noexec signal-stress
SUBDIR+= rcvtimeo itimer extent
#SUBDIR+= mquery rfork
@


1.47
log
@Add signal-stress. Good luck.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2004/07/28 21:35:30 art Exp $
d7 1
a7 1
SUBDIR+= rcvtimeo itimer
@


1.46
log
@Add itimer.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.45 2004/07/20 07:09:26 david Exp $
d6 1
a6 1
SUBDIR+= sysvshm gettimeofday signal exec_self noexec
@


1.45
log
@add commented-out entries for currently disabled regress tests
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2004/04/12 02:49:15 tedu Exp $
d7 1
a7 1
SUBDIR+= rcvtimeo
@


1.44
log
@don't check rfork.  the RFMEM changes had two effects.  some of the
regress conditions (rfmem-stack) are no longer true, and other tests
have to be rewritten to handle shared stacks.  spotted by david@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.43 2004/02/10 01:31:20 millert Exp $
d8 1
@


1.43
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.42 2003/11/04 07:38:08 mickey Exp $
d6 1
a6 1
SUBDIR+= sysvshm rfork gettimeofday signal exec_self noexec
@


1.42
log
@old __syscall test is really a wait() test
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.41 2003/04/23 21:45:57 jason Exp $
d4 1
a4 1
SUBDIR+= fcntl_dup dup2_self pread preadv exit wait mbuf pwrite pwritev
@


1.41
log
@check for sizeof(struct mbuf) vs MSIZE botches
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.40 2002/11/26 18:31:59 mickey Exp $
d4 1
a4 1
SUBDIR+= fcntl_dup dup2_self pread preadv exit mbuf pwrite pwritev
@


1.40
log
@test for working timeouts on recv, currently failing
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.39 2002/08/31 22:56:01 mickey Exp $
d4 1
a4 1
SUBDIR+= fcntl_dup dup2_self pread preadv exit pwrite pwritev
@


1.39
log
@a combined non-exec test set.
allows reusing same testing code for:
- text & mprotect (not finished, not enabled);
- data, data & mprotect;
- bss, bss & mprotect;
- heap, heap & mprotect;
- stack, stack & mprotect.
also a test for mmaping pages in those areas
and see how it allows execution (suggested by art@@),
not enabled yet.
all tested on i386 and hppa.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2002/08/31 20:29:46 mickey Exp $
d7 1
@


1.38
log
@a simple nxheap test hacked out of nxstack and nxheap-mprotect; tested on i386 and hppa
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2002/08/27 16:37:42 matthieu Exp $
d6 1
a6 4
SUBDIR+= sysvshm rfork gettimeofday signal exec_self
SUBDIR+= nxstack nxstack-mprotect
SUBDIR+= nxheap  nxheap-mprotect
SUBDIR+= nxbss
@


1.37
log
@A test for non executable heap / mprotect. Ok art@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36 2002/08/21 12:54:39 espie Exp $
d6 4
a9 2
SUBDIR+= sysvshm rfork gettimeofday signal nxstack nxbss
SUBDIR+= exec_self nxheap-mprotect
@


1.36
log
@+mmap3
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.35 2002/08/17 23:04:29 art Exp $
d7 1
a7 1
SUBDIR+= exec_self
@


1.35
log
@Add exec_self
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.34 2002/07/26 01:32:07 deraadt Exp $
d3 1
a3 1
SUBDIR+= execve getrusage kqueue mmap mmap2 dup2 minherit rlimit-file
@


1.34
log
@regress these only on the architectures where they are expected to work
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 2002/07/01 18:30:58 mickey Exp $
d7 1
@


1.33
log
@art said, let it fail
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 2002/04/30 23:23:39 millert Exp $
d6 1
a6 1
SUBDIR+= sysvshm rfork gettimeofday signal nxstack
@


1.32
log
@Do signal regress tests
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2002/03/25 05:21:17 nordin Exp $
d6 1
a6 1
SUBDIR+= sysvshm rfork gettimeofday signal
@


1.31
log
@Enable gettimeofday regression test.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2002/02/23 01:25:11 art Exp $
d6 1
a6 1
SUBDIR+= sysvshm rfork gettimeofday
@


1.30
log
@no more need to explicitly specify regress: _SUBDIRUSE targets anymore.
XXX - what about the install targets?
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2002/02/22 23:34:31 art Exp $
d6 1
a6 1
SUBDIR+= sysvshm rfork
@


1.29
log
@Get rid of more Ms in my tree.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2002/02/17 05:11:37 art Exp $
a6 2

regress: _SUBDIRUSE
@


1.28
log
@rfork
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.27 2002/02/16 14:35:42 art Exp $
#	$NetBSD: Makefile,v 1.2 1995/04/20 22:42:51 cgd Exp $
@


1.27
log
@sysvshm
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2002/02/16 14:24:52 art Exp $
d7 1
a7 1
SUBDIR+= sysvshm
@


1.26
log
@sysvsem
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2002/02/16 13:59:14 art Exp $
d7 1
@


1.25
log
@sysvsmg
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2002/02/16 00:48:44 art Exp $
d6 1
a6 1
SUBDIR+= syscall __syscall unfdpass accept nanosleep sysvmsg
@


1.24
log
@nanosleep
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2002/02/11 15:41:01 art Exp $
d6 1
a6 1
SUBDIR+= syscall __syscall unfdpass accept nanosleep
@


1.23
log
@accept
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2002/02/09 13:57:02 art Exp $
d6 1
a6 1
SUBDIR+= syscall __syscall unfdpass accept
@


1.22
log
@Enable unfdpass (still failing).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2002/02/08 21:40:01 art Exp $
d6 1
a6 1
SUBDIR+= syscall __syscall unfdpass
@


1.21
log
@add syscall and __syscall
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2002/02/08 21:10:28 art Exp $
d6 1
a6 2
SUBDIR+= syscall __syscall
#SUBDIR+= unfdpass
@


1.20
log
@pwritev
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2002/02/08 20:59:10 art Exp $
d6 1
@


1.19
log
@pwrite
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2002/02/08 20:19:00 art Exp $
d5 1
a5 1
SUBDIR+= fcntl_dup dup2_self pread preadv exit pwrite
@


1.18
log
@Add exit.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2002/02/08 20:04:34 art Exp $
d5 1
a5 1
SUBDIR+= fcntl_dup dup2_self pread preadv exit
@


1.17
log
@preadv
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2002/02/08 19:05:41 art Exp $
d5 1
a5 1
SUBDIR+= fcntl_dup dup2_self pread preadv
@


1.16
log
@pread
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2002/02/08 18:48:24 art Exp $
d5 1
a5 1
SUBDIR+= fcntl_dup dup2_self pread
@


1.15
log
@dup2_self
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2002/02/08 17:36:12 art Exp $
d5 1
a5 1
SUBDIR+= fcntl_dup dup2_self
@


1.14
log
@Add fcntl_dup.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2002/02/05 16:36:01 art Exp $
d5 1
a5 1
SUBDIR+=fcntl_dup
@


1.13
log
@Add rlimit-file.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2002/01/31 15:54:18 art Exp $
d5 1
@


1.12
log
@add minherit
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2002/01/07 00:02:06 provos Exp $
d4 2
a5 1
SUBDIR+= execve getrusage kqueue mmap mmap2 dup2 minherit #unfdpass
@


1.11
log
@add kqueue
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2002/01/03 15:04:10 art Exp $
d4 1
a4 1
SUBDIR+= execve getrusage kqueue mmap mmap2 dup2 #unfdpass
@


1.10
log
@add mmap2
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2002/01/03 03:18:01 art Exp $
d4 1
a4 1
SUBDIR+= execve getrusage mmap mmap2 dup2 #unfdpass
@


1.9
log
@Don't enable unfdpass just yet
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2002/01/03 02:31:46 art Exp $
d4 1
a4 1
SUBDIR+= execve getrusage mmap dup2 #unfdpass
@


1.8
log
@Add unfdpass. It doesn't build, but that error is a regression
test error, not an error that will stop make. :)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2001/12/17 01:22:05 nordin Exp $
d4 1
a4 1
SUBDIR+= execve getrusage mmap dup2 unfdpass
@


1.7
log
@Check for monotonic user and system time.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2001/10/08 22:44:24 art Exp $
d4 1
a4 1
SUBDIR+= execve getrusage mmap dup2
@


1.6
log
@Add dup2.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2001/06/19 08:41:57 niklas Exp $
d4 1
a4 1
SUBDIR+= execve mmap dup2
@


1.5
log
@A simple mmap regression test
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2001/01/29 02:05:54 niklas Exp $
d4 1
a4 1
SUBDIR+= execve mmap
@


1.4
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1995/04/20 22:42:51 cgd Exp $
d4 1
a4 1
SUBDIR+= execve
@


1.3
log
@oops
@
text
@d1 1
@


1.2
log
@fix Makefiles
@
text
@d3 1
a3 1
SUBDIR+= execve unfdpass
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
SUBDIR+= execve
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
