head	1.4;
access;
symbols
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.10.09.06.44.14;	author semarie;	state dead;
branches;
next	1.3;
commitid	OMHrQoEqoUBdOfmt;

1.3
date	2015.09.10.11.16.08;	author semarie;	state Exp;
branches;
next	1.2;
commitid	gdTf12JqMFqGgAKZ;

1.2
date	2015.08.23.04.59.31;	author semarie;	state Exp;
branches;
next	1.1;
commitid	u4JGEQPksyW2vvi8;

1.1
date	2015.07.27.18.03.36;	author semarie;	state Exp;
branches;
next	;
commitid	4EJKGKX9O8gdwlfD;


desc
@@


1.4
log
@follow tame->pledge in regress
@
text
@/*	$OpenBSD: sigkill.c,v 1.3 2015/09/10 11:16:08 semarie Exp $ */
/*
 * Copyright (c) 2015 Sebastien Marie <semarie@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <unistd.h>

void
handler(int sigraised)
{
	/* the handler shouldn't not be called */
	printf("forbidden STDIO in %d handler\n", sigraised);
}

int
main(int argc, char *argv[])
{
	/* install some handlers */
	signal(SIGHUP, &handler);
	signal(SIGABRT, &handler);

	printf("permitted STDIO\n");
	fflush(stdout);

	tame("", NULL);

	/* this will triggered tame_fail() */
	printf("forbidden STDIO 1\n");

	/* shouldn't continue */
	printf("forbidden STDIO 2\n");
	return (EXIT_SUCCESS);
}
@


1.3
log
@convert tame(2) regress to new API
@
text
@d1 1
a1 1
/*	$OpenBSD: sigkill.c,v 1.2 2015/08/23 04:59:31 semarie Exp $ */
@


1.2
log
@convert to new tame(2) ABI/API
@
text
@d1 1
a1 1
/*	$OpenBSD: sigkill.c,v 1.1 2015/07/27 18:03:36 semarie Exp $ */
a17 2
#include <sys/tame.h>

d21 1
d40 1
a40 1
	tame(0, NULL);
@


1.1
log
@add some regress for tame. just a starting point for now
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d41 1
a41 1
	tame(0);
@

