head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.42
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.38
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.28
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.36
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.34
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.32
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.30
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.26
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.24
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.22
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.20
	OPENBSD_5_0:1.1.0.18
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.16
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.14
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.12
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2007.04.29.20.10.24;	author art;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Quite dumb test for torturing SIGSTOP/SIGCONT.
@
text
@/*	$OpenBSD$	*/
/*
 *	Written by Artur Grabowski <art@@openbsd.org> 2007 Public Domain.
 */
#include <sys/types.h>
#include <sys/time.h>
#include <sys/wait.h>

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <time.h>
#include <err.h>
#include <signal.h>

int
main(int argc, char **argv)
{
	struct timespec ts;
	pid_t child;
	int status;
	int count;
	int toggle = 0;

	switch((child = fork())) {
	case -1:
		err(1, "fork");
	case 0:
		ts.tv_sec = 0;
		ts.tv_nsec = 1000;
		for (count = 0; count < 100; count++) {
			nanosleep(&ts, NULL);
		}
		exit(0);
	default:
		break;
	}

	ts.tv_sec = 1;
	ts.tv_nsec = 0;
	nanosleep(&ts, NULL);

	do {
		toggle ^= 1;
		if (kill(child, toggle ? SIGSTOP : SIGCONT)) {
			if (wait(&status) < 0)
				err(1, "wait");
			break;
		}
	} while(waitpid(child, &status, WCONTINUED|WUNTRACED) > 0 &&
	    (toggle ? WIFSTOPPED(status) : WIFCONTINUED(status)));

	if (!WIFEXITED(status))
		err(1, "bad status: %d\n", status);

	return 0;
}
@
