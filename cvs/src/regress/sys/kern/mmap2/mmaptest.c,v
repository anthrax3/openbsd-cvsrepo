head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.56
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.58
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.54
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.44
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.52
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.50
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.48
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.46
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.42
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.40
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.38
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.36
	OPENBSD_5_0:1.6.0.34
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3;
locks; strict;
comment	@ * @;


1.6
date	2003.07.31.21.48.08;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.12.04.09.31;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.11.23.41.23;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.18.15.24.18;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.03.15.07.05;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.03.15.03.42;	author art;	state Exp;
branches;
next	;


desc
@@


1.6
log
@various cleanups; david says results are same
@
text
@/*	$OpenBSD: mmaptest.c,v 1.5 2002/09/12 04:09:31 mickey Exp $	*/
/*
 *	Written by Artur Grabowski <art@@openbsd.org>, 2001 Public Domain
 */

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <err.h>
#include <string.h>

#include <sys/types.h>
#include <sys/mman.h>

/*
 * Map the same physical page in two places in memory.
 * Should cause a cache alias on sparc and other VAC architectures.
 */

#define MAGIC "The voices in my head are trying to ignore me."

int
main(int argc, char *argv[])
{
	char fname[25] = "/tmp/mmaptestXXXXXXXXXX";
	int page_size;
	int fd;
	char *v1, *v2;

	if ((fd = mkstemp(fname)) < 0)
		err(1, "mkstemp");

	if (remove(fname) < 0)
		err(1, "remove");

	if ((page_size = sysconf(_SC_PAGESIZE)) < 0)
		err(1, "sysconf");

	if (ftruncate(fd, 2 * page_size) < 0)
		err(1, "ftruncate");

	/* map two pages, then map the first page over the second */

	v1 = mmap(NULL, 2 * page_size, PROT_READ|PROT_WRITE,
	    MAP_SHARED, fd, 0);
	if (v1 == MAP_FAILED)
		err(1, "mmap 1");

	/* No need to unmap, mmap is supposed to do that for us if MAP_FIXED */

	v2 = mmap(v1 + page_size, page_size, PROT_READ|PROT_WRITE,
	    MAP_SHARED|MAP_FIXED, fd, 0);
	if (v2 == MAP_FAILED)
		err(1, "mmap 2");

	memcpy(v1, MAGIC, sizeof(MAGIC));

	if (memcmp(v2, MAGIC, sizeof(MAGIC)) != 0)
		errx(1, "comparison 1 failed");

	if (memcmp(v1, v2, sizeof(MAGIC)) != 0)
		errx(1, "comparison 2 failed");

	if (munmap(v1, 2 * page_size) < 0)
		errx(1, "munmap");

	close(fd);

	return 0;
}

@


1.5
log
@a grammar in err msgs and a tiny formating fix
@
text
@d1 1
a1 1
/*	$OpenBSD: mmaptest.c,v 1.4 2002/09/11 23:41:23 mickey Exp $	*/
d23 1
a23 1
main()
@


1.4
log
@errx is a proper function here
@
text
@d1 1
a1 1
/*	$OpenBSD: mmaptest.c,v 1.3 2002/02/18 15:24:18 art Exp $	*/
d44 2
a45 1
	v1 = mmap(NULL, 2 * page_size, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);
d59 1
a59 1
		errx(1, "comparsion 1 failed");
d62 1
a62 1
		errx(1, "comparsion 2 failed");
@


1.3
log
@Change license to public domain and update comment.
@
text
@d1 1
a1 1
/*	$OpenBSD: mmaptest.c,v 1.2 2002/01/03 15:07:05 art Exp $	*/
d58 1
a58 1
		err(1, "comparsion 1 failed");
d61 1
a61 1
		err(1, "comparsion 2 failed");
d64 1
a64 1
		err(1, "munmap");
@


1.2
log
@Fix two obvious bugs that show up when trying this on sparc64, sigh.
@
text
@d1 1
a1 1
/*	$OpenBSD: mmaptest.c,v 1.1 2002/01/03 15:03:42 art Exp $	*/
d3 1
a3 25
 * Copyright (c) 2001 Artur Grabowski <art@@openbsd.org>
 * All rights reserved. 
 *
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
 *
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
 * 2. Redistributions in binary form must reproduce the above copyright 
 *    notice, this list of conditions and the following disclaimer in the 
 *    documentation and/or other materials provided with the distribution. 
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission. 
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
d16 2
a17 2
 * Map the same object in two places in memory.
 * Should cause a cache alias on sparc.
@


1.1
log
@cause a cache alias on sparc and see if that works correctly.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d34 1
d91 2
@

