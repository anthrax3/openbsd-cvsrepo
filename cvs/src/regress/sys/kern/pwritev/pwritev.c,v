head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.22
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.24
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.20
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.10
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.18
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.16
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.14
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.12
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.8
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2011.11.06.15.00.34;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.05.15.43.04;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.02.23.52.17;	author david;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.31.21.48.09;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.08.21.06.05;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Regress tests for negative offsets, wrapping offsets, and the lack of
interaction of pwrite/pwritev with O_APPEND.

Based on a patch from Alexander Polakov (polachok at gmail.com)
Further tests with deraadt@@
@
text
@/*	$OpenBSD: pwritev.c,v 1.4 2011/11/05 15:43:04 guenther Exp $	*/
/*
 *	Written by Artur Grabowski <art@@openbsd.org> 2002 Public Domain.
 */
#include <sys/types.h>
#include <sys/uio.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

int
main(int argc, char *argv[])
{	
	char temp[] = "/tmp/pwritevXXXXXXXXX";
	char magic[10] = "0123456789";
	const char zeroes[10] = "0000000000";
	char buf[10];
	struct iovec iov[2];
	char c;
	int fd, ret;

	if ((fd = mkstemp(temp)) < 0)
		err(1, "mkstemp");
	remove(temp);

	if (write(fd, zeroes, sizeof(zeroes)) != sizeof(zeroes))
		err(1, "write");

	if (lseek(fd, 5, SEEK_SET) != 5)
		err(1, "lseek");

	iov[0].iov_base = &magic[8];
	iov[0].iov_len = 2;
	iov[1].iov_base = &magic[7];
	iov[1].iov_len = 2;

	if (pwritev(fd, iov, 2, 4) != 4)
		err(1, "pwritev");

	if (read(fd, &c, 1) != 1)
		err(1, "read");

	if (c != '9')
		errx(1, "read %c != %c", c, '9');

	c = '5';
	if (write(fd, &c, 1) != 1)
		err(1, "write");

	if (pread(fd, buf, 10, 0) != 10)
		err(1, "pread");

	iov[1].iov_base = &magic[1];
	iov[1].iov_len = 2;
	if ((ret = pwritev(fd, iov, 2, -1)) != -1)
		errx(1, "pwritev with negative offset succeeded,\
				returning %d", ret);
	if (errno != EINVAL)
		err(1, "pwritev with negative offset");

	if ((ret = pwritev(fd, iov, 2, LLONG_MAX)) != -1)
		errx(1, "pwritev with wrapping offset succeeded,\
				returning %d", ret);
	if (errno != EFBIG && errno != EINVAL)
		err(1, "pwritev with wrapping offset");

	if (memcmp(buf, "0000895800", 10) != 0)
		errx(1, "data mismatch: %s != %s", buf, "0000895800");

	/* pwrite should be unaffected by O_APPEND */
	if (fcntl(fd, F_SETFL, fcntl(fd, F_GETFL) | O_APPEND))
		err(1, "fcntl");
	if (pwritev(fd, iov, 2, 2) != 4)
		err(1, "pwritev");
	if (pread(fd, buf, 10, 0) != 10)
		err(1, "pread");
	if (memcmp(buf, "0089125800", 10) != 0)
		errx(1, "data mismatch: %s != %s", buf, "0089125800");

	close(fd);

	/* also, verify that pwritev fails on ttys */
	fd = open("/dev/tty", O_RDWR);
	if (fd < 0)
		printf("skipping tty test\n");
	else if ((ret = pwritev(fd, iov, 2, 7)) != -1)
		errx(1, "pwritev succeeded on tty, returning %d", ret);
	else if (errno != ESPIPE)
		err(1, "pwritev");

	return 0;
}
@


1.4
log
@Verify this fails with ESPIPE on ttys
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.3 2003/09/02 23:52:17 david Exp $	*/
d7 4
a14 3
#include <err.h>
#include <errno.h>
#include <fcntl.h>
d58 14
d74 10
@


1.3
log
@add missing includes
ok deraadt@@ tedu@@ dhartmei@@ krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.2 2003/07/31 21:48:09 deraadt Exp $	*/
d12 1
d24 1
a24 1
	int fd;
d42 1
a42 1
		err(1, "pwrite");
d59 11
@


1.2
log
@various cleanups; david says results are same
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.1 2002/02/08 21:06:05 art Exp $	*/
d9 1
@


1.1
log
@test pwritev
@
text
@d1 1
a1 1
/*	$OpenBSD: pwrite.c,v 1.1 2002/02/08 20:58:02 art Exp $	*/
d14 1
a14 1
main()
@

