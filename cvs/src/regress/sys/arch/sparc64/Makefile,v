head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.2.0.54
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.44
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.52
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.50
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.48
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.46
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.42
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.40
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.38
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.36
	OPENBSD_5_0:1.2.0.34
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.32
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.30
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.26
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.28
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.24
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.22
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.20
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.18
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.16
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.14
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2017.03.01.22.25.52;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	OcoC0ZIDXssqYCT0;

1.3
date	2017.03.01.00.40.39;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	NzdgqcgiJBoNULVt;

1.2
date	2003.07.12.04.08.33;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.10.14.40.42;	author jason;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Print message why tests are skipped.
@
text
@#	$OpenBSD: Makefile,v 1.3 2017/03/01 00:40:39 bluhm Exp $

.if ${MACHINE_ARCH} == "sparc64"
SUBDIR=emul-popc emul-ldqstq

.elif make(regress) || make(all)
${.TARGETS}:
	@@echo Regress for architecture sparc64 cannot run on ${MACHINE_ARCH}.
	@@echo SKIPPED
.endif

install:

.include <bsd.subdir.mk>
@


1.3
log
@Print SKIPPED if the architecture dependent regression tests are
executed on the wrong machine.  This allows to distinguish their
result from a passed test.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2003/07/12 04:08:33 jason Exp $
d8 1
@


1.2
log
@simplistic regression tests for ldq/stq
badfreg: attempts to execute invalid opcodes (invalid floating point regs)
goodfreg: runs through all valid fp regs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2003/07/10 14:40:42 jason Exp $
d5 4
d10 2
@


1.1
log
@regression for emulation of POPC instruction (currently only the sign
extended immediate is tested)... register version in a bit.
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 1
a4 1
SUBDIR=emul-popc
@

