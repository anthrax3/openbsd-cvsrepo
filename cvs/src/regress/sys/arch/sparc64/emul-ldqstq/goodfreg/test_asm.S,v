head	1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.54
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.44
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.52
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.50
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.48
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.46
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.42
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.40
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.38
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.36
	OPENBSD_5_0:1.1.0.34
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.32
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.30
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.26
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.28
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.24
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.22
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.20
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.18
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.16
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.14
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.12
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.10
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.8
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.4
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.07.12.04.08.33;	author jason;	state Exp;
branches;
next	;


desc
@@


1.1
log
@simplistic regression tests for ldq/stq
badfreg: attempts to execute invalid opcodes (invalid floating point regs)
goodfreg: runs through all valid fp regs
@
text
@/*	$OpenBSD$	*/

/*
 * Copyright (c) 2003 Jason L. Wright (jason@@thought.net)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <machine/asm.h>
#include <machine/trap.h>
#include <machine/frame.h>

ENTRY(asm_ldq_f0)
	retl
	 ldq	[%o0], %f0

ENTRY(asm_ldq_f4)
	retl
	 ldq	[%o0], %f4

ENTRY(asm_ldq_f8)
	retl
	 ldq	[%o0], %f8

ENTRY(asm_ldq_f12)
	retl
	 ldq	[%o0], %f12

ENTRY(asm_ldq_f16)
	retl
	 ldq	[%o0], %f16

ENTRY(asm_ldq_f20)
	retl
	 ldq	[%o0], %f20

ENTRY(asm_ldq_f24)
	retl
	 ldq	[%o0], %f24

ENTRY(asm_ldq_f28)
	retl
	 ldq	[%o0], %f28

ENTRY(asm_ldq_f32)
	retl
	 ldq	[%o0], %f32

ENTRY(asm_ldq_f36)
	retl
	 ldq	[%o0], %f36

ENTRY(asm_ldq_f40)
	retl
	 ldq	[%o0], %f40

ENTRY(asm_ldq_f44)
	retl
	 ldq	[%o0], %f44

ENTRY(asm_ldq_f48)
	retl
	 ldq	[%o0], %f48

ENTRY(asm_ldq_f52)
	retl
	 ldq	[%o0], %f52

ENTRY(asm_ldq_f56)
	retl
	 ldq	[%o0], %f56

ENTRY(asm_ldq_f60)
	retl
	 ldq	[%o0], %f60

ENTRY(asm_stq_f0)
	retl
	 stq	%f0, [%o0]

ENTRY(asm_stq_f4)
	retl
	 stq	%f4, [%o0]

ENTRY(asm_stq_f8)
	retl
	 stq	%f8, [%o0]

ENTRY(asm_stq_f12)
	retl
	 stq	%f12, [%o0]

ENTRY(asm_stq_f16)
	retl
	 stq	%f16, [%o0]

ENTRY(asm_stq_f20)
	retl
	 stq	%f20, [%o0]

ENTRY(asm_stq_f24)
	retl
	 stq	%f24, [%o0]

ENTRY(asm_stq_f28)
	retl
	 stq	%f28, [%o0]

ENTRY(asm_stq_f32)
	retl
	 stq	%f32, [%o0]

ENTRY(asm_stq_f36)
	retl
	 stq	%f36, [%o0]

ENTRY(asm_stq_f40)
	retl
	 stq	%f40, [%o0]

ENTRY(asm_stq_f44)
	retl
	 stq	%f44, [%o0]

ENTRY(asm_stq_f48)
	retl
	 stq	%f48, [%o0]

ENTRY(asm_stq_f52)
	retl
	 stq	%f52, [%o0]

ENTRY(asm_stq_f56)
	retl
	 stq	%f56, [%o0]

ENTRY(asm_stq_f60)
	retl
	 stq	%f60, [%o0]
@
