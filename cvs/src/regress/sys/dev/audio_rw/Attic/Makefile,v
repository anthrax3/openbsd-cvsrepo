head	1.4;
access;
symbols
	OPENBSD_6_0:1.3.0.36
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.26
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.34
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.32
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.30
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.28
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.24
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.22
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.20
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.18
	OPENBSD_5_0:1.3.0.16
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.14
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.12
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.10
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.6
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	jakemsr-20070705:1.1.1.1
	jakemsr:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2016.09.06.04.35.03;	author ratchov;	state dead;
branches;
next	1.3;
commitid	BLrL2CXkbwInHj9w;

1.3
date	2007.10.03.21.49.13;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.31.03.14.09;	author jakemsr;	state Exp;
branches;
next	1.1;

1.1
date	2007.07.06.00.43.38;	author jakemsr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.07.06.00.43.38;	author jakemsr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove test programs for the audio driver, as we've better
converage with base tools and programs in regress/lib/libsndio

ok deraadt
@
text
@#	$OpenBSD: Makefile,v 1.3 2007/10/03 21:49:13 jakemsr Exp $

PROG=	audiotest_rw
CFLAGS+=-Wall -Wstrict-prototypes -Wmissing-prototypes
MAN1=	audiotest_rw.1

.ifndef DO_AUTEST
REGRESS_SKIP =
.else
REGRESS_TARGETS =
REGRESS_TARGETS +=	run-regress-record
REGRESS_TARGETS +=	run-regress-record-duplex
REGRESS_TARGETS +=	run-regress-record-poll
REGRESS_TARGETS +=	run-regress-record-select
REGRESS_TARGETS +=	run-regress-record-bufinfo
REGRESS_TARGETS +=	run-regress-record-poll-duplex
REGRESS_TARGETS +=	run-regress-record-select-duplex
REGRESS_TARGETS +=	run-regress-record-bufinfo-duplex
REGRESS_TARGETS +=	run-regress-play
REGRESS_TARGETS +=	run-regress-play-duplex
REGRESS_TARGETS +=	run-regress-play-poll
REGRESS_TARGETS +=	run-regress-play-select
REGRESS_TARGETS +=	run-regress-play-bufinfo
REGRESS_TARGETS +=	run-regress-play-poll-duplex
REGRESS_TARGETS +=	run-regress-play-select-duplex
REGRESS_TARGETS +=	run-regress-play-bufinfo-duplex
REGRESS_TARGETS +=	run-regress-duplex
REGRESS_TARGETS +=	run-regress-duplex-poll
REGRESS_TARGETS +=	run-regress-duplex-select
REGRESS_TARGETS +=	run-regress-duplex-bufinfo
.endif


# audio data file for playing tests

master.pcm: ${PROG}
	@@echo "creating master input file"
	./audiotest_rw -o master.pcm ${OPTS}


# recording tests

run-regress-record: ${PROG}
	./audiotest_rw -o test.pcm  ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)

run-regress-record-duplex: ${PROG}
	./audiotest_rw -o test.pcm -d  ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)

run-regress-record-poll: ${PROG}
	./audiotest_rw -o test.pcm -p  ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)

run-regress-record-select: ${PROG}
	./audiotest_rw -o test.pcm -s ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)

run-regress-record-bufinfo: ${PROG}
	./audiotest_rw -o test.pcm -n ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)

run-regress-record-poll-duplex: ${PROG}
	./audiotest_rw -o test.pcm -p -d ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)

run-regress-record-select-duplex: ${PROG}
	./audiotest_rw -o test.pcm -s -d ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)

run-regress-record-bufinfo-duplex: ${PROG}
	./audiotest_rw -o test.pcm -n -d ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)


# playing tests

run-regress-play: ${PROG} master.pcm
	./audiotest_rw -i master.pcm ${OPTS}

run-regress-play-duplex: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -d ${OPTS}

run-regress-play-poll: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -p ${OPTS}

run-regress-play-select: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -s ${OPTS}

run-regress-play-bufinfo: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -n ${OPTS}

run-regress-play-poll-duplex: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -p -d ${OPTS}

run-regress-play-select-duplex: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -s -d ${OPTS}

run-regress-play-bufinfo-duplex: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -n -d ${OPTS}


# full-duplex tests

run-regress-duplex: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -o test.pcm ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)

run-regress-duplex-poll: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -o test.pcm -p ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)

run-regress-duplex-select: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -o test.pcm -s ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)

run-regress-duplex-bufinfo: ${PROG} master.pcm
	./audiotest_rw -i master.pcm -o test.pcm -n ${OPTS}
	@@test -s test.pcm || (echo "no output" && false)


.include <bsd.regress.mk>
@


1.3
log
@
add two new audio ioctls, AUDIO_GETPRINFO and AUDIO_GETRRINFO, and the
data structure these ioctls use, audio_bufinfo.

these ioctls return information about the play and record buffers
into the audio_bufinfo structure.

these are being added to aid in porting non-native audio applications
and libraries, and to fix issues in our OSS audio emulation.  these
ioctls exist only on OpenBSD and should not be used in code intended
for distribution.

ok ratchov
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2007/07/31 03:14:09 jakemsr Exp $
@


1.2
log
@pass command line options to audiotest_rw through OPTS, e.g.

$ OPTS="-e 1 -r 22050 -c 1 -b 1024" DO_AUTEST=1 make
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.1.1 2007/07/06 00:43:38 jakemsr Exp $
d15 1
d18 1
d23 1
d26 1
d30 1
d59 4
d71 4
d90 3
d99 3
d115 4
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD$
d33 1
a33 1
	./audiotest_rw -o master.pcm
d39 1
a39 1
	./audiotest_rw -o test.pcm
d43 1
a43 1
	./audiotest_rw -o test.pcm -d
d47 1
a47 1
	./audiotest_rw -o test.pcm -p
d51 1
a51 1
	./audiotest_rw -o test.pcm -s
d55 1
a55 1
	./audiotest_rw -o test.pcm -p -d
d59 1
a59 1
	./audiotest_rw -o test.pcm -s -d
d66 1
a66 1
	./audiotest_rw -i master.pcm
d69 1
a69 1
	./audiotest_rw -i master.pcm -d
d72 1
a72 1
	./audiotest_rw -i master.pcm -p
d75 1
a75 1
	./audiotest_rw -i master.pcm -s
d78 1
a78 1
	./audiotest_rw -i master.pcm -p -d
d81 1
a81 1
	./audiotest_rw -i master.pcm -s -d
d87 1
a87 1
	./audiotest_rw -i master.pcm -o test.pcm
d91 1
a91 1
	./audiotest_rw -i master.pcm -o test.pcm -p
d95 1
a95 1
	./audiotest_rw -i master.pcm -o test.pcm -s
@


1.1.1.1
log
@regression tests for various audio read(2) and write(2) scenarios

@
text
@@
