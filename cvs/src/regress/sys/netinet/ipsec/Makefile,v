head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6
	bluhm_20170206:1.1.1.1
	bluhm:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2017.02.27.16.53.59;	author bluhm;	state Exp;
branches;
next	1.5;
commitid	1etDVlj4DY6lAghO;

1.5
date	2017.02.13.17.54.27;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	QdZDDgO8zyidhhiV;

1.4
date	2017.02.08.23.09.28;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	ijZ5G7yC0GxN00CG;

1.3
date	2017.02.08.17.58.59;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	EEeNxU6pA9OS6i77;

1.2
date	2017.02.06.22.58.51;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	95HOSuhexmuLTCxk;

1.1
date	2017.02.06.21.54.05;	author bluhm;	state Exp;
branches
	1.1.1.1;
next	;
commitid	ymImhD4qA3SEDVJy;

1.1.1.1
date	2017.02.06.21.54.05;	author bluhm;	state Exp;
branches;
next	;
commitid	ymImhD4qA3SEDVJy;


desc
@@


1.6
log
@Add IPsec tests for ipip encapsulation.
@
text
@#	$OpenBSD: Makefile,v 1.5 2017/02/13 17:54:27 bluhm Exp $

# This test needs a manual setup of four machines, the make
# target create-setup can be used distribute the configuration.
# The setup is the same as for regress/sys/net/pf_forward.
# Set up machines: SRC IPS RT ECO
# SRC is the machine where this makefile is running.
# IPS is running IPsec, it is reflecting or forwarding packets.
# RT is a router forwarding packets, maximum MTU is 1300.
# ECO is reflecting the ping and UDP and TCP echo packets.
#
# By choosing the net prefix of the outgoing packet the mode is selected
# 5 -> 5 : transport v4
# 4 -> 5 : transport v6
# 8 -> c : tunnel v4 stack v4
# 8 -> c : tunnel v4 stack v6
# 8 -> d : tunnel v6 stack v4
# 8 -> d : tunnel v6 stack v6
# 8 -> e : tunnel v4 forward v4
# 8 -> e : tunnel v4 forward v6
# 8 -> f : tunnel v6 forward v4
# 8 -> f : tunnel v6 forward v6
#
#               1400        1300
# +---+   0   +---+   1   +---+   2   +---+
# |SRC| ----> |IPS| ----> |RT | ----> |ECO|
# +---+ 458 5 +---+ cd    +---+    ef +---+
#     out    in   out    in   out    in
#
# The encapsulation is chosen by the digit before
# 0,1 ESP
# 2,3 AH
# 4,5 IPIP

PREFIX_IPV4 ?=	10.188.1
PREFIX_IPV6 ?=	fdd7:e83e:66bc:1

# IPv4 outgoing address is selected by route if address of cloning route,
# so SRC_TRANSP_IPV4 and IPS_TRANSP_IPV4 must be in same net
# IPv6 outgoing address is selected common prefix, 4 and 5 are close together
# SRC_TRANSP_IPV6 and IPS_TRANSP_IPV6 should be in different network
# to avoid encryption of neighbor discovery packets

SRC_OUT_IPV4 ?=	${PREFIX_IPV4}00.17
SRC_OUT_IPV6 ?=	${PREFIX_IPV6}00::17
SRC_ESP_TRANSP_IPV4 ?=	${PREFIX_IPV4}05.17
SRC_ESP_TRANSP_IPV6 ?=	${PREFIX_IPV6}04::17
SRC_ESP_TUNNEL_IPV4 ?=	${PREFIX_IPV4}08.17
SRC_ESP_TUNNEL_IPV6 ?=	${PREFIX_IPV6}08::17
SRC_AH_TRANSP_IPV4 ?=	${PREFIX_IPV4}25.17
SRC_AH_TRANSP_IPV6 ?=	${PREFIX_IPV6}24::17
SRC_AH_TUNNEL_IPV4 ?=	${PREFIX_IPV4}28.17
SRC_AH_TUNNEL_IPV6 ?=	${PREFIX_IPV6}28::17
SRC_IPIP_TRANSP_IPV4 ?=	${PREFIX_IPV4}45.17
SRC_IPIP_TRANSP_IPV6 ?=	${PREFIX_IPV6}44::17
SRC_IPIP_TUNNEL_IPV4 ?=	${PREFIX_IPV4}48.17
SRC_IPIP_TUNNEL_IPV6 ?=	${PREFIX_IPV6}48::17

IPS_IN_IPV4 ?=	${PREFIX_IPV4}00.70
IPS_IN_IPV6 ?=	${PREFIX_IPV6}00::70
IPS_OUT_IPV4 ?=	${PREFIX_IPV4}01.70
IPS_OUT_IPV6 ?=	${PREFIX_IPV6}01::70
IPS_ESP_TRANSP_IPV4 ?=	${PREFIX_IPV4}05.70
IPS_ESP_TRANSP_IPV6 ?=	${PREFIX_IPV6}05::70
IPS_ESP_TUNNEL4_IPV4 ?=	${PREFIX_IPV4}12.70
IPS_ESP_TUNNEL4_IPV6 ?=	${PREFIX_IPV6}0c::70
IPS_ESP_TUNNEL6_IPV4 ?=	${PREFIX_IPV4}13.70
IPS_ESP_TUNNEL6_IPV6 ?=	${PREFIX_IPV6}0d::70
IPS_AH_TRANSP_IPV4 ?=	${PREFIX_IPV4}25.70
IPS_AH_TRANSP_IPV6 ?=	${PREFIX_IPV6}25::70
IPS_AH_TUNNEL4_IPV4 ?=	${PREFIX_IPV4}32.70
IPS_AH_TUNNEL4_IPV6 ?=	${PREFIX_IPV6}2c::70
IPS_AH_TUNNEL6_IPV4 ?=	${PREFIX_IPV4}33.70
IPS_AH_TUNNEL6_IPV6 ?=	${PREFIX_IPV6}2d::70
IPS_IPIP_TRANSP_IPV4 ?=	${PREFIX_IPV4}45.70
IPS_IPIP_TRANSP_IPV6 ?=	${PREFIX_IPV6}45::70
IPS_IPIP_TUNNEL4_IPV4 ?=	${PREFIX_IPV4}52.70
IPS_IPIP_TUNNEL4_IPV6 ?=	${PREFIX_IPV6}4c::70
IPS_IPIP_TUNNEL6_IPV4 ?=	${PREFIX_IPV4}53.70
IPS_IPIP_TUNNEL6_IPV6 ?=	${PREFIX_IPV6}4d::70

RT_IN_IPV4 ?=	${PREFIX_IPV4}01.71
RT_IN_IPV6 ?=	${PREFIX_IPV6}01::71
RT_OUT_IPV4 ?=	${PREFIX_IPV4}02.71
RT_OUT_IPV6 ?=	${PREFIX_IPV6}02::71

ECO_IN_IPV4 ?=	${PREFIX_IPV4}02.72
ECO_IN_IPV6 ?=	${PREFIX_IPV6}02::72
ECO_ESP_TUNNEL4_IPV4 ?=	${PREFIX_IPV4}14.72
ECO_ESP_TUNNEL4_IPV6 ?=	${PREFIX_IPV6}0e::72
ECO_ESP_TUNNEL6_IPV4 ?=	${PREFIX_IPV4}15.72
ECO_ESP_TUNNEL6_IPV6 ?=	${PREFIX_IPV6}0f::72
ECO_AH_TUNNEL4_IPV4 ?=	${PREFIX_IPV4}34.72
ECO_AH_TUNNEL4_IPV6 ?=	${PREFIX_IPV6}2e::72
ECO_AH_TUNNEL6_IPV4 ?=	${PREFIX_IPV4}35.72
ECO_AH_TUNNEL6_IPV6 ?=	${PREFIX_IPV6}2f::72
ECO_IPIP_TUNNEL4_IPV4 ?=	${PREFIX_IPV4}54.72
ECO_IPIP_TUNNEL4_IPV6 ?=	${PREFIX_IPV6}4e::72
ECO_IPIP_TUNNEL6_IPV4 ?=	${PREFIX_IPV4}55.72
ECO_IPIP_TUNNEL6_IPV6 ?=	${PREFIX_IPV6}4f::72

# Configure Addresses on the machines, there must be routes for the
# networks.  Adapt interface and addresse variables to your local
# setup.  To control the remote machine you need a hostname for
# ssh to log in.
#
# IPS and ECO need inetd echo service on TRANSP and TUNNEL addresses.
# Run make create-setup to copy hostname.if files to the machines
# Run make check-setup to see if you got the setup correct.

SRC_OUT_IF ?=	tap4
IPS_IN_IF ?=	vio1
IPS_OUT_IF ?=	vio2
RT_IN_IF ?=	vio1
RT_OUT_IF ?=	vio2
ECO_IN_IF ?=	vio1

.if empty (IPS_SSH) || empty (RT_SSH) || empty (ECO_SSH)
regress:
	@@echo this tests needs three remote machines to operate on
	@@echo IPS_SSH RT_SSH ECO_SSH are empty
	@@echo fill out these variables for additional tests, then
	@@echo check wether your test machines are set up properly
	@@echo SKIPPED
.endif

.MAIN: all

.if make (regress) || make (all)
.BEGIN: ipsec.conf addr.py
	@@echo
	${SUDO} true
	ssh -t ${IPS_SSH} ${SUDO} true
	rm -f stamp-ipsec
.endif

depend: addr.py

# Create python include file containing the addresses.
addr.py: Makefile
	rm -f $@@ $@@.tmp
.for host in SRC IPS RT ECO
.for dir in IN OUT
.for ipv in IF IPV4 IPV6
	echo '${host}_${dir}_${ipv}="${${host}_${dir}_${ipv}}"' >>$@@.tmp
.endfor
.endfor
.endfor
.for sec in ESP AH IPIP
.for host mode in SRC TRANSP SRC TUNNEL \
    IPS TRANSP IPS TUNNEL4 IPS TUNNEL6 \
    ECO TUNNEL4 ECO TUNNEL6
.for ipv in IPV4 IPV6
	echo '${host}_${sec}_${mode}_${ipv}="${${host}_${sec}_${mode}_${ipv}}"'\
	    >>$@@.tmp
.endfor
.endfor
.endfor
	mv $@@.tmp $@@

# load the ipsec sa and flow into the kernel of the SRC and IPS machine
stamp-ipsec: addr.py ipsec.conf
	@@echo '\n======== $@@ ========'
	cat addr.py ${.CURDIR}/ipsec.conf | ipsecctl -n -f -
	${SUDO} ipsecctl -F
	cat addr.py ${.CURDIR}/ipsec.conf | ${SUDO} ipsecctl -f -
	ssh ${IPS_SSH} ${SUDO} ipsecctl -F
	cat addr.py ${.CURDIR}/ipsec.conf | ssh ${IPS_SSH} ${SUDO} ipsecctl\
	    -f - -D FROM=to -D TO=from -D LOCAL=peer -D PEER=local
	@@date >$@@

# Ping all addresses.  This ensures that the IP addresses are configured
# and all routing table are set up to allow bidirectional packet flow.

.for host dir in SRC OUT IPS IN IPS OUT RT IN RT OUT ECO IN
.for ping ipv in ping IPV4 ping6 IPV6
TARGETS +=      ping-${host}_${dir}_${ipv}
run-regress-ping-${host}_${dir}_${ipv}:
	@@echo '\n======== $@@ ========'
	${ping} -n -c 1 -w 2 ${${host}_${dir}_${ipv}}
.endfor
.endfor

run-regress-ping-IPS_ESP_TRANSP_IPV6:
	@@echo '\n======== $@@ ========'
	@@echo 'IPv6 IPsec input does not filter enc0 interface with pf.  Echo'
	@@echo 'request does not create state and echo reply does not pass pf.'
	@@echo DISABLED

run-regress-tcp-IPS_ESP_TRANSP_IPV6:
	@@echo '\n======== $@@ ========'
	@@echo 'IPv6 IPsec input does not filter enc0 interface with pf.  TCP'
	@@echo 'SYN does not create state and SYN+ACK does not pass pf.'
	@@echo DISABLED

.for sec in ESP AH IPIP

.for host mode in SRC TRANSP SRC TUNNEL \
    IPS TRANSP IPS TUNNEL4 IPS TUNNEL6 \
    ECO TUNNEL4 ECO TUNNEL6
.for ping ipv in ping IPV4 ping6 IPV6
TARGETS +=      ping-${host}_${sec}_${mode}_${ipv}
ping ${host:L} ${sec:L} ${mode:L} ${ipv:L}:\
    run-regress-ping-${host}_${sec}_${mode}_${ipv}
run-regress-ping-${host}_${sec}_${mode}_${ipv}:
	@@echo '\n======== $@@ ========'
	netstat -s -p ${sec:L:S/ipip/ipencap/} |\
	    awk '/input ${sec} /{print $$1}' >pkt.in
	netstat -s -p ${sec:L:S/ipip/ipencap/} |\
	    awk '/output ${sec} /{print $$1}' >pkt.out
	${ping} -n -c 1 -w 2 ${${host}_${sec}_${mode}_${ipv}}
.if "${host}" != SRC
	netstat -s -p ${sec:L:S/ipip/ipencap/} |\
	    awk '/input ${sec} /{print $$1-1}' |\
	    diff pkt.in -
	netstat -s -p ${sec:L:S/ipip/ipencap/} |\
	    awk '/output ${sec} /{print $$1-1}' |\
	    diff pkt.out -
.endif
.endfor
.endfor

.for host mode in IPS TRANSP IPS TUNNEL4 IPS TUNNEL6 \
    ECO TUNNEL4 ECO TUNNEL6
.for ipv in IPV4 IPV6
TARGETS +=      udp-${host}_${sec}_${mode}_${ipv}
udp ${host:L} ${sec:L} ${mode:L} ${ipv:L}:\
    run-regress-udp-${host}_${sec}_${mode}_${ipv}
run-regress-udp-${host}_${sec}_${mode}_${ipv}:
	@@echo '\n======== $@@ ========'
	netstat -s -p ${sec:L:S/ipip/ipencap/} | awk '/input ${sec} /{print $$1}' >pkt.in
	netstat -s -p ${sec:L:S/ipip/ipencap/} | awk '/output ${sec} /{print $$1}' >pkt.out
	echo $$$$ | nc -n -u -w 1 ${${host}_${sec}_${mode}_${ipv}} 7 |\
	    fgrep $$$$
	netstat -s -p ${sec:L:S/ipip/ipencap/} | awk '/input ${sec} /{print $$1-1}' |\
	    diff pkt.in -
	netstat -s -p ${sec:L:S/ipip/ipencap/} | awk '/output ${sec} /{print $$1-1}' |\
	    diff pkt.out -

TARGETS +=      tcp-${host}_${sec}_${mode}_${ipv}
tcp ${host:L} ${sec:L} ${mode:L} ${ipv:L}:\
    run-regress-tcp-${host}_${sec}_${mode}_${ipv}
run-regress-tcp-${host}_${sec}_${mode}_${ipv}:
	@@echo '\n======== $@@ ========'
	netstat -s -p ${sec:L:S/ipip/ipencap/} | awk '/input ${sec} /{print $$1}' >pkt.in
	netstat -s -p ${sec:L:S/ipip/ipencap/} | awk '/output ${sec} /{print $$1}' >pkt.out
	echo $$$$ | nc -n -N -w 3 ${${host}_${sec}_${mode}_${ipv}} 7 |\
	    fgrep $$$$
	netstat -s -p ${sec:L:S/ipip/ipencap/} | awk '/input ${sec} /{print $$1-4}' |\
	    diff pkt.in -
	netstat -s -p ${sec:L:S/ipip/ipencap/} | awk '/output ${sec} /{print $$1-6}' |\
	    diff pkt.out -
.endfor
.endfor

.endfor

REGRESS_TARGETS =	${TARGETS:S/^/run-regress-/}

${REGRESS_TARGETS}: stamp-ipsec

CLEANFILES +=		addr.py *.pyc *.log stamp-* */hostname.* *.{in,out}

.PHONY: create-setup

create-setup: stamp-hostname

etc/hostname.${SRC_OUT_IF}: Makefile
	@@echo '\n======== $@@ ========'
	mkdir -p ${@@:H}
	rm -f $@@ $@@.tmp
	echo '### regress ipsec $@@' >$@@.tmp
	echo '# SRC_OUT' >>$@@.tmp
.for inet ipv masklen in inet IPV4 255.255.255.0 inet6 IPV6 64
	echo '${inet} alias ${SRC_OUT_${ipv}} ${masklen}' >>$@@.tmp
.endfor
.for sec in ESP AH IPIP
	echo '## SRC_${sec}' >>$@@.tmp
.for mode in TRANSP TUNNEL
	echo '# SRC_${sec}_${mode}' >>$@@.tmp
.for inet ipv masklen in inet IPV4 255.255.255.0 inet6 IPV6 64
	echo '${inet} alias ${SRC_${sec}_${mode}_${ipv}} ${masklen}' >>$@@.tmp
.endfor
.endfor
	echo '# IPS_${sec}_TRANSP_IPV6/64 IPS_IN_IPV6' >>$@@.tmp
	echo '!route -q delete -inet6 ${IPS_${sec}_TRANSP_IPV6}/64' >>$@@.tmp
	echo '!route add -inet6 ${IPS_${sec}_TRANSP_IPV6}/64 ${IPS_IN_IPV6}'\
	    >>$@@.tmp
.for host dir in RT IN ECO IN
	echo '# ${host}_${dir}/pfxlen IPS_IN' >>$@@.tmp
.for inet ipv pfxlen in inet IPV4 24 inet6 IPV6 64
	echo '!route -q delete -${inet} ${${host}_${dir}_${ipv}}/${pfxlen}'\
	    >>$@@.tmp
	echo '!route add -${inet} ${${host}_${dir}_${ipv}}/${pfxlen}\
	    ${IPS_IN_${ipv}}' >>$@@.tmp
.endfor
.endfor
.for host in IPS ECO
.for mode in TUNNEL4 TUNNEL6
	echo '# ${host}_${sec}_${mode}/pfxlen reject\
	    ${SRC_${sec}_TUNNEL_${ipv}}' >>$@@.tmp
.for inet ipv pfxlen in inet IPV4 24 inet6 IPV6 64
	echo '!route -q delete -${inet}\
	    ${${host}_${sec}_${mode}_${ipv}}/${pfxlen}' >>$@@.tmp
	echo '!route add -${inet} ${${host}_${sec}_${mode}_${ipv}}/${pfxlen}\
	    -reject ${SRC_${sec}_TUNNEL_${ipv}}' >>$@@.tmp
.endfor
.endfor
.endfor
.endfor
	mv $@@.tmp $@@

${IPS_SSH}/hostname.${IPS_IN_IF}: Makefile
	mkdir -p ${@@:H}
	rm -f $@@ $@@.tmp
	echo '### regress ipsec $@@' >$@@.tmp
	echo '# IPS_IN' >>$@@.tmp
.for inet ipv masklen in inet IPV4 255.255.255.0 inet6 IPV6 64
	echo '${inet} alias ${IPS_IN_${ipv}} ${masklen}' >>$@@.tmp
.endfor
.for sec in ESP AH IPIP
	echo '## IPS_${sec}' >>$@@.tmp
	echo '# IPS_${sec}_TRANSP' >>$@@.tmp
.for inet ipv masklen in inet IPV4 255.255.255.0 inet6 IPV6 64
	echo '${inet} alias ${IPS_${sec}_TRANSP_${ipv}} ${masklen}' >>$@@.tmp
.endfor
	echo '# SRC_${sec}_TRANSP_IPV6/64 SRC_OUT_IPV6' >>$@@.tmp
	echo '!route -q delete -inet6 ${SRC_${sec}_TRANSP_IPV6}/64' >>$@@.tmp
	echo '!route add -inet6 ${SRC_${sec}_TRANSP_IPV6}/64 ${SRC_OUT_IPV6}'\
	    >>$@@.tmp
.for mode in TUNNEL
	echo '# SRC_${sec}_${mode}/pfxlen reject ${IPS_IN_${ipv}}' >>$@@.tmp
.for inet ipv pfxlen in inet IPV4 24 inet6 IPV6 64
	echo '!route -q delete -${inet}\
	    ${SRC_${sec}_${mode}_${ipv}}/${pfxlen}' >>$@@.tmp
	echo '!route add -${inet} ${SRC_${sec}_${mode}_${ipv}}/${pfxlen}\
	    -reject ${IPS_IN_${ipv}}' >>$@@.tmp
.endfor
.endfor
.endfor
	mv $@@.tmp $@@

${IPS_SSH}/hostname.${IPS_OUT_IF}: Makefile
	@@echo '\n======== $@@ ========'
	mkdir -p ${@@:H}
	rm -f $@@ $@@.tmp
	echo '### regress ipsec $@@' >$@@.tmp
	echo '# IPS_OUT' >>$@@.tmp
.for inet ipv masklen in inet IPV4 255.255.255.0 inet6 IPV6 64
	echo '${inet} alias ${IPS_OUT_${ipv}} ${masklen}' >>$@@.tmp
.endfor
	echo '# ECO_IN/pfxlen RT_IN' >>$@@.tmp
.for inet ipv pfxlen in inet IPV4 24 inet6 IPV6 64
	echo '!route -q delete -${inet} ${ECO_IN_${ipv}}/${pfxlen}'\
	    >>$@@.tmp
	echo '!route add -${inet} ${ECO_IN_${ipv}}/${pfxlen} ${RT_IN_${ipv}}'\
	    >>$@@.tmp
.endfor
.for sec in ESP AH IPIP
	echo '## IPS_${sec}' >>$@@.tmp
.for mode in TUNNEL4 TUNNEL6
	echo '# IPS_${sec}_${mode}' >>$@@.tmp
.for inet ipv masklen in inet IPV4 255.255.255.0 inet6 IPV6 64
	echo '${inet} alias ${IPS_${sec}_${mode}_${ipv}} ${masklen}' >>$@@.tmp
.endfor
.endfor
.for mode in TUNNEL4 TUNNEL6
	echo '# ECO_${sec}_${mode}/pfxlen RT_IN' >>$@@.tmp
.for inet ipv pfxlen in inet IPV4 24 inet6 IPV6 64
	echo '!route -q delete -${inet}\
	    ${ECO_${sec}_${mode}_${ipv}}/${pfxlen}' >>$@@.tmp
	echo '!route add -${inet} ${ECO_${sec}_${mode}_${ipv}}/${pfxlen}\
	    ${RT_IN_${ipv}}' >>$@@.tmp
.endfor
.endfor
.endfor
	mv $@@.tmp $@@

${RT_SSH}/hostname.${RT_IN_IF}: Makefile
	@@echo '\n======== $@@ ========'
	mkdir -p ${@@:H}
	rm -f $@@ $@@.tmp
	echo '### regress ipsec $@@' >$@@.tmp
	echo '# RT_IN' >>$@@.tmp
.for inet ipv masklen in inet IPV4 255.255.255.0 inet6 IPV6 64
	echo '${inet} alias ${RT_IN_${ipv}} ${masklen}' >>$@@.tmp
.endfor
	echo '# SRC_OUT/pfxlen IPS_OUT' >>$@@.tmp
.for inet ipv pfxlen in inet IPV4 24 inet6 IPV6 64
	echo '!route -q delete -${inet} ${SRC_OUT_${ipv}}/${pfxlen}'\
	    >>$@@.tmp
	echo '!route add -${inet} ${SRC_OUT_${ipv}}/${pfxlen}'\
	    ${IPS_OUT_${ipv}} >>$@@.tmp
.endfor
.for sec in ESP AH IPIP
	echo '## IPS_${sec}' >>$@@.tmp
.for mode in TUNNEL
	echo '# SRC_${mode}/pfxlen IPS_OUT' >>$@@.tmp
.for inet ipv pfxlen in inet IPV4 24 inet6 IPV6 64
	echo '!route -q delete -${inet} ${SRC_${sec}_${mode}_${ipv}}/${pfxlen}'\
	    >>$@@.tmp
	echo '!route add -${inet} ${SRC_${sec}_${mode}_${ipv}}/${pfxlen}\
	    ${IPS_OUT_${ipv}}' >>$@@.tmp
.endfor
.endfor
.endfor
	mv $@@.tmp $@@

${RT_SSH}/hostname.${RT_OUT_IF}: Makefile
	@@echo '\n======== $@@ ========'
	mkdir -p ${@@:H}
	rm -f $@@ $@@.tmp
	echo '### regress ipsec $@@' >$@@.tmp
	echo '# RT_OUT' >>$@@.tmp
.for inet ipv masklen in inet IPV4 255.255.255.0 inet6 IPV6 64
	echo '${inet} alias ${RT_OUT_${ipv}} ${masklen}' >>$@@.tmp
.endfor
.for sec in ESP AH IPIP
	echo '## IPS_${sec}' >>$@@.tmp
.for mode in TUNNEL4 TUNNEL6
	echo '# ECO_${sec}_${mode}/pfxlen ECO_IN' >>$@@.tmp
.for inet ipv pfxlen in inet IPV4 24 inet6 IPV6 64
	echo '!route -q delete -${inet}\
	    ${ECO_${sec}_${mode}_${ipv}}/${pfxlen}' >>$@@.tmp
	echo '!route add -${inet} ${ECO_${sec}_${mode}_${ipv}}/${pfxlen}\
	    ${ECO_IN_${ipv}}' >>$@@.tmp
.endfor
.endfor
.endfor
	mv $@@.tmp $@@

${ECO_SSH}/hostname.${ECO_IN_IF}: Makefile
	@@echo '\n======== $@@ ========'
	mkdir -p ${@@:H}
	rm -f $@@ $@@.tmp
	echo '### regress ipsec $@@' >$@@.tmp
	echo '# ECO_IN' >>$@@.tmp
.for inet ipv masklen in inet IPV4 255.255.255.0 inet6 IPV6 64
	echo '${inet} alias ${ECO_IN_${ipv}} ${masklen}' >>$@@.tmp
.endfor
.for host in IPS SRC
	echo '# ${host}_OUT/pfxlen RT_OUT' >>$@@.tmp
.for inet ipv pfxlen in inet IPV4 24 inet6 IPV6 64
	echo '!route -q delete -${inet} ${${host}_OUT_${ipv}}/${pfxlen}'\
	    >>$@@.tmp
	echo '!route add -${inet} ${${host}_OUT_${ipv}}/${pfxlen}\
	    ${RT_OUT_${ipv}}' >>$@@.tmp
.endfor
.endfor
.for sec in ESP AH IPIP
	echo '## IPS_${sec}' >>$@@.tmp
.for mode in TUNNEL4 TUNNEL6
	echo '# ECO_${sec}_${mode}' >>$@@.tmp
.for inet ipv masklen in inet IPV4 255.255.255.0 inet6 IPV6 64
	echo '${inet} alias ${ECO_${sec}_${mode}_${ipv}} ${masklen}' >>$@@.tmp
.endfor
.endfor
.for mode in TUNNEL
	echo '# SRC_${sec}_${mode}/pfxlen RT_OUT' >>$@@.tmp
.for inet ipv pfxlen in inet IPV4 24 inet6 IPV6 64
	echo '!route -q delete -${inet}\
	    ${SRC_${sec}_${mode}_${ipv}}/${pfxlen}' >>$@@.tmp
	echo '!route add -${inet} ${SRC_${sec}_${mode}_${ipv}}/${pfxlen}\
	    ${RT_OUT_${ipv}}' >>$@@.tmp
.endfor
.endfor
.endfor
	mv $@@.tmp $@@

stamp-hostname: etc/hostname.${SRC_OUT_IF} \
    ${IPS_SSH}/hostname.${IPS_IN_IF} ${IPS_SSH}/hostname.${IPS_OUT_IF} \
    ${RT_SSH}/hostname.${RT_IN_IF} ${RT_SSH}/hostname.${RT_OUT_IF} \
    ${ECO_SSH}/hostname.${ECO_IN_IF}
	@@echo '\n======== $@@ ========'
	${SUDO} sh -c "umask 027;\
	    { sed '/^### regress/,\$$d' /etc/hostname.${SRC_OUT_IF} &&\
	    cat; } >/etc/hostname.${SRC_OUT_IF}.tmp"\
	    <etc/hostname.${SRC_OUT_IF}
	${SUDO} sh -c "mv /etc/hostname.${SRC_OUT_IF}.tmp\
	    /etc/hostname.${SRC_OUT_IF} &&\
	    sh /etc/netstart ${SRC_OUT_IF}"
.for host dir in IPS IN IPS OUT RT IN RT OUT ECO IN
	ssh root@@${${host}_SSH} "umask 027;\
	    { sed '/^### regress/,\$$d' /etc/hostname.${${host}_${dir}_IF} &&\
	    cat; } >/etc/hostname.${${host}_${dir}_IF}.tmp"\
	    <${${host}_SSH}/hostname.${${host}_${dir}_IF}
	ssh root@@${${host}_SSH} "mv /etc/hostname.${${host}_${dir}_IF}.tmp\
	    /etc/hostname.${${host}_${dir}_IF} &&\
	    sh /etc/netstart ${${host}_${dir}_IF}"
.endfor
	date >$@@

.PHONY: check-setup

# Check wether the address, route and remote setup is correct
check-setup: check-setup-src check-setup-ips check-setup-rt check-setup-eco

check-setup-src:
	@@echo '\n======== $@@ ========'
.for ping inet ipv in ping inet IPV4 ping6 inet6 IPV6
.for host dir in SRC OUT
	${ping} -n -c 1 ${${host}_${dir}_${ipv}}  # ${host}_${dir}_${ipv}
	route -n get -${inet} ${${host}_${dir}_${ipv}} |\
	    grep -q 'flags: .*LOCAL'  # ${host}_${dir}_${ipv}
.endfor
	${ping} -n -c 1 ${IPS_IN_${ipv}}  # IPS_IN_${ipv}
.for host dir in IPS OUT RT IN RT OUT ECO IN
	route -n get -${inet} ${${host}_${dir}_${ipv}} |\
	    fgrep -q 'gateway: ${IPS_IN_${ipv}}' \
	    # ${host}_${dir}_${ipv} IPS_IN_${ipv}
.endfor
.for sec in ESP AH IPIP
.for host mode in SRC TRANSP SRC TUNNEL
	${ping} -n -c 1 ${${host}_${sec}_${mode}_${ipv}} \
	    # ${host}_${sec}_${mode}_${ipv}
	route -n get -${inet} ${${host}_${sec}_${mode}_${ipv}} |\
	    grep -q 'flags: .*LOCAL'  # ${host}_${sec}_${mode}_${ipv}
.endfor
.for host mode in IPS TUNNEL4 IPS TUNNEL6 ECO TUNNEL4 ECO TUNNEL6
	route -n get -${inet} ${${host}_${sec}_${mode}_${ipv}} |\
	    grep -q 'flags: .*REJECT'  # ${host}_${sec}_${mode}_${ipv}
.endfor
.endfor
.endfor
.for sec in ESP AH IPIP
	route -n get -inet ${IPS_${sec}_TRANSP_IPV4} |\
	    egrep -q 'flags: .*(CLONING|CLONED)'  # IPS_${sec}_TRANSP_IPV4
	route -n get -inet6 ${IPS_${sec}_TRANSP_IPV6} |\
	    fgrep -q 'gateway: ${IPS_IN_IPV6}' \
	    # IPS_${sec}_TRANSP_IPV6 IPS_IN_IPV6
.endfor
	sysctl net.inet.esp.enable | fgrep =1
	sysctl net.inet.ah.enable | fgrep =1
	sysctl net.inet.ipip.allow | fgrep =1

check-setup-ips:
	@@echo '\n======== $@@ ========'
.for ping inet ipv in ping inet IPV4 ping6 inet6 IPV6
.for host dir in IPS IN IPS OUT
	ssh ${IPS_SSH} ${ping} -n -c 1 ${${host}_${dir}_${ipv}} \
	    # ${host}_${dir}_${ipv}
	ssh ${IPS_SSH} route -n get -${inet} ${${host}_${dir}_${ipv}} |\
	    grep -q 'flags: .*LOCAL'  # ${host}_${dir}_${ipv}
.endfor
	ssh ${IPS_SSH} ${ping} -n -c 1 ${SRC_OUT_${ipv}}  # SRC_OUT_${ipv}
	ssh ${IPS_SSH} ${ping} -n -c 1 ${RT_IN_${ipv}}  # RT_IN_${ipv}
.for host dir in RT OUT ECO IN
	ssh ${IPS_SSH} route -n get -${inet} ${${host}_${dir}_${ipv}} |\
	    fgrep -q 'gateway: ${RT_IN_${ipv}}' \
	    # ${host}_${dir}_${ipv} RT_IN_${ipv}
.endfor
.for sec in ESP AH IPIP
.for host mode in IPS TRANSP IPS TUNNEL4 IPS TUNNEL6
	ssh ${IPS_SSH} ${ping} -n -c 1 ${${host}_${sec}_${mode}_${ipv}} \
	    # ${host}_${sec}_${mode}_${ipv}
	ssh ${IPS_SSH} route -n get -${inet} ${${host}_${sec}_${mode}_${ipv}} |\
	    grep -q 'flags: .*LOCAL'  # ${host}_${sec}_${mode}_${ipv}
.endfor
.for host mode in ECO TUNNEL4 ECO TUNNEL6
	ssh ${IPS_SSH} route -n get -${inet} ${${host}_${sec}_${mode}_${ipv}} |\
	    fgrep -q 'gateway: ${RT_IN_${ipv}}' \
	    # ${host}_${sec}_${mode}_${ipv} RT_IN_${ipv}
.endfor
.for host mode in SRC TUNNEL
	ssh ${IPS_SSH} route -n get -${inet} ${${host}_${sec}_${mode}_${ipv}} |\
	    grep -q 'flags: .*REJECT'  # ${host}_${sec}_${mode}_${ipv}
.endfor
.for host mode in IPS TRANSP IPS TUNNEL4 IPS TUNNEL6
	ssh ${IPS_SSH} netstat -nav -f ${inet} -p udp |\
	    fgrep ' ${${host}_${sec}_${mode}_${ipv}}.7 ' \
	    # ${host}_${sec}_${mode}_${ipv}
.endfor
.endfor
	ssh ${ECO_SSH} netstat -na -f ${inet} -p tcp | fgrep ' *.7 '
.endfor
.for sec in ESP AH IPIP
	ssh ${IPS_SSH} route -n get -inet ${SRC_${sec}_TRANSP_IPV4} |\
	    egrep -q 'flags: .*(CLONING|CLONED)'  # SRC_${sec}_TRANSP_IPV4
	ssh ${IPS_SSH} route -n get -inet6 ${SRC_${sec}_TRANSP_IPV6} |\
	    fgrep -q 'gateway: ${SRC_OUT_IPV6}' \
	    # SRC_${sec}_TRANSP_IPV6 SRC_OUT_IPV6
.endfor
	ssh ${IPS_SSH} sysctl net.inet.esp.enable | fgrep =1
	ssh ${IPS_SSH} sysctl net.inet.ah.enable | fgrep =1
	ssh ${IPS_SSH} sysctl net.inet.ipip.allow | fgrep =1

check-setup-rt:
	@@echo '\n======== $@@ ========'
.for ping inet ipv in ping inet IPV4 ping6 inet6 IPV6
.for host dir in RT IN RT OUT
	ssh ${RT_SSH} ${ping} -n -c 1 ${${host}_${dir}_${ipv}} \
	    # ${host}_${dir}_${ipv}
	ssh ${RT_SSH} route -n get -${inet} ${${host}_${dir}_${ipv}} |\
	    grep -q 'flags: .*LOCAL'  # ${host}_${dir}_${ipv}
.endfor
	ssh ${RT_SSH} ${ping} -n -c 1 ${IPS_OUT_${ipv}}  # IPS_OUT_${ipv}
.for host dir in IPS IN SRC OUT
	ssh ${RT_SSH} route -n get -${inet} ${${host}_${dir}_${ipv}} |\
	    fgrep -q 'gateway: ${IPS_OUT_${ipv}}' \
	    # ${host}_${dir}_${ipv} IPS_OUT_${ipv}
.endfor
	ssh ${RT_SSH} ${ping} -n -c 1 ${ECO_IN_${ipv}}  # ECO_IN_${ipv}
.for sec in ESP AH IPIP
.for host mode in SRC TUNNEL
	ssh ${RT_SSH} route -n get -${inet} ${${host}_${sec}_${mode}_${ipv}} |\
	    fgrep -q 'gateway: ${IPS_OUT_${ipv}}' \
	    # ${host}_${sec}_${mode}_${ipv} IPS_OUT_${ipv}
.endfor
.for host mode in ECO TUNNEL4 ECO TUNNEL6
	ssh ${RT_SSH} route -n get -${inet} ${${host}_${sec}_${mode}_${ipv}} |\
	    fgrep -q 'gateway: ${ECO_IN_${ipv}}' \
	    # ${host}_${sec}_${mode}_${ipv} ECO_IN_${ipv}
.endfor
.endfor
.endfor

check-setup-eco:
	@@echo '\n======== $@@ ========'
.for ping inet ipv in ping inet IPV4 ping6 inet6 IPV6
.for host dir in ECO IN
	ssh ${ECO_SSH} ${ping} -n -c 1 ${${host}_${dir}_${ipv}} \
	    # ${host}_${dir}_${ipv}
	ssh ${ECO_SSH} route -n get -${inet} ${${host}_${dir}_${ipv}} |\
	    grep -q 'flags: .*LOCAL'  # ${host}_${dir}_${ipv}
.endfor
	ssh ${ECO_SSH} ${ping} -n -c 1 ${RT_OUT_${ipv}}  # RT_OUT_${ipv}
.for host dir in RT IN IPS OUT IPS IN SRC OUT
	ssh ${ECO_SSH} route -n get -${inet} ${${host}_${dir}_${ipv}} |\
	    fgrep -q 'gateway: ${RT_OUT_${ipv}}' \
	    # ${host}_${dir}_${ipv} RT_OUT_${ipv}
.endfor
.for sec in ESP AH IPIP
.for host mode in ECO TUNNEL4 ECO TUNNEL6
	ssh ${ECO_SSH} ${ping} -n -c 1 ${${host}_${sec}_${mode}_${ipv}} \
	    # ${host}_${sec}_${mode}_${ipv}
	ssh ${ECO_SSH} route -n get -${inet} ${${host}_${sec}_${mode}_${ipv}} |\
	    grep -q 'flags: .*LOCAL'  # ${host}_${sec}_${mode}_${ipv}
.endfor
.for host mode in SRC TUNNEL
	ssh ${ECO_SSH} route -n get -${inet} ${${host}_${sec}_${mode}_${ipv}} |\
	    fgrep -q 'gateway: ${RT_OUT_${ipv}}' \
	    # ${host}_${sec}_${mode}_${ipv} RT_OUT_${ipv}
.endfor
.for host mode in ECO TUNNEL4 ECO TUNNEL6
	ssh ${ECO_SSH} netstat -nav -f ${inet} -p udp |\
	    fgrep ' ${${host}_${sec}_${mode}_${ipv}}.7 ' \
	    # ${host}_${sec}_${mode}_${ipv}
.endfor
.endfor
	ssh ${ECO_SSH} netstat -na -f ${inet} -p tcp | fgrep ' *.7 '
.endfor

.include <bsd.regress.mk>
@


1.5
log
@Test IPsec with AH the same way it is already done for ESP.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2017/02/08 23:09:28 bluhm Exp $
d33 1
d54 4
d75 6
d97 4
d149 1
a149 1
.for sec in ESP AH
d164 1
d166 1
a166 3
	cat addr.py ${.CURDIR}/ipsec.conf | ipsecctl -n -f -
	cat addr.py ${.CURDIR}/ipsec.conf | \
	    ${SUDO} ipsecctl -f -
d168 2
a169 3
	cat addr.py ${.CURDIR}/ipsec.conf | \
	    ssh ${IPS_SSH} ${SUDO} ipsecctl -f - \
	    -D FROM=to -D TO=from -D LOCAL=peer -D PEER=local
d184 1
a184 3
.for sec in ESP AH

run-regress-ping-IPS_${sec}_TRANSP_IPV6:
d190 1
a190 1
run-regress-tcp-IPS_${sec}_TRANSP_IPV6:
d196 2
d203 2
d207 4
a210 2
	netstat -s -p ${sec:L} | awk '/input ${sec} /{print $$1}' >pkt.in
	netstat -s -p ${sec:L} | awk '/output ${sec} /{print $$1}' >pkt.out
d213 2
a214 1
	netstat -s -p ${sec:L} | awk '/input ${sec} /{print $$1-1}' |\
d216 2
a217 1
	netstat -s -p ${sec:L} | awk '/output ${sec} /{print $$1-1}' |\
d227 2
d231 2
a232 2
	netstat -s -p ${sec:L} | awk '/input ${sec} /{print $$1}' >pkt.in
	netstat -s -p ${sec:L} | awk '/output ${sec} /{print $$1}' >pkt.out
d235 1
a235 1
	netstat -s -p ${sec:L} | awk '/input ${sec} /{print $$1-1}' |\
d237 1
a237 1
	netstat -s -p ${sec:L} | awk '/output ${sec} /{print $$1-1}' |\
d241 2
d245 2
a246 2
	netstat -s -p ${sec:L} | awk '/input ${sec} /{print $$1}' >pkt.in
	netstat -s -p ${sec:L} | awk '/output ${sec} /{print $$1}' >pkt.out
d249 1
a249 1
	netstat -s -p ${sec:L} | awk '/input ${sec} /{print $$1-4}' |\
d251 1
a251 1
	netstat -s -p ${sec:L} | awk '/output ${sec} /{print $$1-6}' |\
d277 1
a277 1
.for sec in ESP AH
d321 1
a321 1
.for sec in ESP AH
d359 1
a359 1
.for sec in ESP AH
d395 1
a395 1
.for sec in ESP AH
d418 1
a418 1
.for sec in ESP AH
d450 1
a450 1
.for sec in ESP AH
d512 1
a512 1
.for sec in ESP AH
d525 1
a525 1
.for sec in ESP AH
d532 3
d552 1
a552 1
.for sec in ESP AH
d576 1
a576 1
.for sec in ESP AH
d583 3
d603 1
a603 1
.for sec in ESP AH
d632 1
a632 1
.for sec in ESP AH
@


1.4
log
@Fix IP address schema to make space for AH tests.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2017/02/08 17:58:59 bluhm Exp $
d30 3
d45 8
a52 4
SRC_TRANSP_IPV4 ?=	${PREFIX_IPV4}05.17
SRC_TRANSP_IPV6 ?=	${PREFIX_IPV6}04::17
SRC_TUNNEL_IPV4 ?=	${PREFIX_IPV4}08.17
SRC_TUNNEL_IPV6 ?=	${PREFIX_IPV6}08::17
d58 12
a69 6
IPS_TRANSP_IPV4 ?=	${PREFIX_IPV4}05.70
IPS_TRANSP_IPV6 ?=	${PREFIX_IPV6}05::70
IPS_TUNNEL4_IPV4 ?=	${PREFIX_IPV4}12.70
IPS_TUNNEL4_IPV6 ?=	${PREFIX_IPV6}0c::70
IPS_TUNNEL6_IPV4 ?=	${PREFIX_IPV4}13.70
IPS_TUNNEL6_IPV6 ?=	${PREFIX_IPV6}0d::70
d78 8
a85 4
ECO_TUNNEL4_IPV4 ?=	${PREFIX_IPV4}14.72
ECO_TUNNEL4_IPV6 ?=	${PREFIX_IPV6}0e::72
ECO_TUNNEL6_IPV4 ?=	${PREFIX_IPV4}15.72
ECO_TUNNEL6_IPV6 ?=	${PREFIX_IPV6}0f::72
d134 2
a135 1
.for host dir in SRC TRANSP SRC TUNNEL \
d139 3
a141 1
	echo '${host}_${dir}_${ipv}="${${host}_${dir}_${ipv}}"' >>$@@.tmp
d162 12
a173 1
run-regress-ping-IPS_TRANSP_IPV6:
d179 1
a179 1
run-regress-tcp-IPS_TRANSP_IPV6:
d185 3
a187 4
.for host dir in SRC OUT SRC TRANSP SRC TUNNEL \
    IPS IN IPS OUT IPS TRANSP IPS TUNNEL4 IPS TUNNEL6 \
    RT IN RT OUT \
    ECO IN ECO TUNNEL4 ECO TUNNEL6
d189 2
a190 2
TARGETS +=      ping-${host}_${dir}_${ipv}
run-regress-ping-${host}_${dir}_${ipv}:
d192 8
a199 6
	netstat -s -p esp | awk '/input ESP /{print $$1}' >esp.in
	netstat -s -p esp | awk '/output ESP /{print $$1}' >esp.out
	${ping} -n -c 1 -w 2 ${${host}_${dir}_${ipv}}
.if "${host}" != SRC && "${dir}" != IN && "${dir}" != OUT
	netstat -s -p esp | awk '/input ESP /{print $$1-1}' | diff esp.in -
	netstat -s -p esp | awk '/output ESP /{print $$1-1}' | diff esp.out -
d204 1
a204 1
.for host dir in IPS TRANSP IPS TUNNEL4 IPS TUNNEL6 \
d207 2
a208 2
TARGETS +=      udp-${host}_${dir}_${ipv}
run-regress-udp-${host}_${dir}_${ipv}:
d210 20
a229 14
	netstat -s -p esp | awk '/input ESP /{print $$1}' >esp.in
	netstat -s -p esp | awk '/output ESP /{print $$1}' >esp.out
	echo $$$$ | nc -n -u -w 1 ${${host}_${dir}_${ipv}} 7 | fgrep $$$$
	netstat -s -p esp | awk '/input ESP /{print $$1-1}' | diff esp.in -
	netstat -s -p esp | awk '/output ESP /{print $$1-1}' | diff esp.out -

TARGETS +=      tcp-${host}_${dir}_${ipv}
run-regress-tcp-${host}_${dir}_${ipv}:
	@@echo '\n======== $@@ ========'
	netstat -s -p esp | awk '/input ESP /{print $$1}' >esp.in
	netstat -s -p esp | awk '/output ESP /{print $$1}' >esp.out
	echo $$$$ | nc -n -N -w 3 ${${host}_${dir}_${ipv}} 7 | fgrep $$$$
	netstat -s -p esp | awk '/input ESP /{print $$1-4}' | diff esp.in -
	netstat -s -p esp | awk '/output ESP /{print $$1-6}' | diff esp.out -
d233 2
d250 1
a250 2
.for dir in OUT TRANSP TUNNEL
	echo '# SRC_${dir}' >>$@@.tmp
d252 1
a252 1
	echo '${inet} alias ${SRC_${dir}_${ipv}} ${masklen}' >>$@@.tmp
d254 6
d261 5
a265 3
	echo '# IPS_TRANSP_IPV6/64 IPS_IN_IPV6' >>$@@.tmp
	echo '!route -q delete -inet6 ${IPS_TRANSP_IPV6}/64' >>$@@.tmp
	echo '!route add -inet6 ${IPS_TRANSP_IPV6}/64 ${IPS_IN_IPV6}' >>$@@.tmp
d271 2
a272 2
	echo '!route add -${inet} ${${host}_${dir}_${ipv}}/${pfxlen}'\
	    ${IPS_IN_${ipv}} >>$@@.tmp
d276 3
a278 2
.for dir in TUNNEL4 TUNNEL6
	echo '# ${host}_${dir}/pfxlen reject ${SRC_TUNNEL_${ipv}}' >>$@@.tmp
d280 5
a284 4
	echo '!route -q delete -${inet} ${${host}_${dir}_${ipv}}/${pfxlen}'\
	    >>$@@.tmp
	echo '!route add -${inet} ${${host}_${dir}_${ipv}}/${pfxlen}'\
	    -reject ${SRC_TUNNEL_${ipv}} >>$@@.tmp
d294 1
a294 2
.for dir in IN TRANSP
	echo '# IPS_${dir}' >>$@@.tmp
d296 1
a296 1
	echo '${inet} alias ${IPS_${dir}_${ipv}} ${masklen}' >>$@@.tmp
d298 5
d304 6
a309 5
	echo '# SRC_TRANSP_IPV6/64 SRC_OUT_IPV6' >>$@@.tmp
	echo '!route -q delete -inet6 ${SRC_TRANSP_IPV6}/64' >>$@@.tmp
	echo '!route add -inet6 ${SRC_TRANSP_IPV6}/64 ${SRC_OUT_IPV6}' >>$@@.tmp
.for host dir in SRC TUNNEL
	echo '# ${host}_${dir}/pfxlen reject ${IPS_IN_${ipv}}' >>$@@.tmp
d311 5
a315 4
	echo '!route -q delete -${inet} ${${host}_${dir}_${ipv}}/${pfxlen}'\
	    >>$@@.tmp
	echo '!route add -${inet} ${${host}_${dir}_${ipv}}/${pfxlen}'\
	    -reject ${IPS_IN_${ipv}} >>$@@.tmp
d325 15
a339 2
.for dir in OUT TUNNEL4 TUNNEL6
	echo '# IPS_${dir}' >>$@@.tmp
d341 1
a341 1
	echo '${inet} alias ${IPS_${dir}_${ipv}} ${masklen}' >>$@@.tmp
d344 2
a345 2
.for dir in IN TUNNEL4 TUNNEL6
	echo '# ECO_${dir}/pfxlen RT_IN' >>$@@.tmp
d347 5
a351 4
	echo '!route -q delete -${inet} ${ECO_${dir}_${ipv}}/${pfxlen}'\
	    >>$@@.tmp
	echo '!route add -${inet} ${ECO_${dir}_${ipv}}/${pfxlen}'\
	    ${RT_IN_${ipv}} >>$@@.tmp
d365 1
a365 2
.for dir in OUT TUNNEL
	echo '# SRC_${dir}/pfxlen IPS_OUT' >>$@@.tmp
d367 1
a367 1
	echo '!route -q delete -${inet} ${SRC_${dir}_${ipv}}/${pfxlen}'\
d369 1
a369 1
	echo '!route add -${inet} ${SRC_${dir}_${ipv}}/${pfxlen}'\
d372 11
d395 4
a398 2
.for dir in TUNNEL4 TUNNEL6
	echo '# ECO_${dir}/pfxlen ECO_IN' >>$@@.tmp
d400 5
a404 4
	echo '!route -q delete -${inet} ${ECO_${dir}_${ipv}}/${pfxlen}'\
	    >>$@@.tmp
	echo '!route add -${inet} ${ECO_${dir}_${ipv}}/${pfxlen}'\
	    ${ECO_IN_${ipv}} >>$@@.tmp
d414 1
a414 2
.for dir in IN TUNNEL4 TUNNEL6
	echo '# ECO_${dir}' >>$@@.tmp
d416 1
a416 2
	echo '${inet} alias ${ECO_${dir}_${ipv}} ${masklen}' >>$@@.tmp
.endfor
d418 2
a419 1
	echo '# IPS_OUT/pfxlen RT_OUT' >>$@@.tmp
d421 1
a421 1
	echo '!route -q delete -${inet} ${IPS_OUT_${ipv}}/${pfxlen}'\
d423 11
a433 2
	echo '!route add -${inet} ${IPS_OUT_${ipv}}/${pfxlen}'\
	    ${RT_OUT_${ipv}} >>$@@.tmp
d435 2
a436 2
.for dir in OUT TUNNEL
	echo '# SRC_${dir}/pfxlen RT_OUT' >>$@@.tmp
d438 5
a442 4
	echo '!route -q delete -${inet} ${SRC_${dir}_${ipv}}/${pfxlen}'\
	    >>$@@.tmp
	echo '!route add -${inet} ${SRC_${dir}_${ipv}}/${pfxlen}'\
	    ${RT_OUT_${ipv}} >>$@@.tmp
d478 1
a478 1
.for host dir in SRC OUT SRC TRANSP SRC TUNNEL
d489 11
a499 3
.for host dir in IPS TUNNEL4 IPS TUNNEL6 ECO TUNNEL4 ECO TUNNEL6
	route -n get -${inet} ${${host}_${dir}_${ipv}} |\
	    grep -q 'flags: .*REJECT'  # ${host}_${dir}_${ipv}
d502 4
a505 3
	route -n get -inet ${IPS_TRANSP_IPV4} |\
	    egrep -q 'flags: .*(CLONING|CLONED)' # IPS_TRANSP_IPV4
	route -n get -inet6 ${IPS_TRANSP_IPV6} |\
d507 2
a508 1
	    # IPS_TRANSP_IPV6 IPS_IN_IPV6
d513 1
a513 1
.for host dir in IPS IN IPS OUT IPS TRANSP IPS TUNNEL4 IPS TUNNEL6
d521 1
a521 1
.for host dir in RT OUT ECO IN ECO TUNNEL4 ECO TUNNEL6
d526 15
a540 3
.for host dir in SRC TUNNEL
	ssh ${IPS_SSH} route -n get -${inet} ${${host}_${dir}_${ipv}} |\
	    grep -q 'flags: .*REJECT'  # ${host}_${dir}_${ipv}
d542 1
a542 1
.for host dir in IPS TRANSP IPS TUNNEL4 IPS TUNNEL6
d544 3
a546 1
	    fgrep ' ${${host}_${dir}_${ipv}}.7 '  # ${host}_${dir}_${ipv}
d550 4
a553 3
	ssh ${IPS_SSH} route -n get -inet ${SRC_TRANSP_IPV4} |\
	    egrep -q 'flags: .*(CLONING|CLONED)' # SRC_TRANSP_IPV4
	ssh ${IPS_SSH} route -n get -inet6 ${SRC_TRANSP_IPV6} |\
d555 2
a556 1
	    # SRC_TRANSP_IPV6 SRC_OUT_IPV6
d568 1
a568 1
.for host dir in IPS IN SRC OUT SRC TUNNEL
d574 8
a581 2
.for host dir in ECO TUNNEL4 ECO TUNNEL6
	ssh ${RT_SSH} route -n get -${inet} ${${host}_${dir}_${ipv}} |\
d583 2
a584 1
	    # ${host}_${dir}_${ipv} ECO_IN_${ipv}
d591 1
a591 1
.for host dir in ECO IN ECO TUNNEL4 ECO TUNNEL6
d598 1
a598 1
.for host dir in RT IN IPS OUT IPS IN SRC OUT SRC TUNNEL
d603 13
a615 1
.for host dir in ECO TUNNEL4 ECO TUNNEL6
d617 3
a619 1
	    fgrep ' ${${host}_${dir}_${ipv}}.7 '  # ${host}_${dir}_${ipv}
@


1.3
log
@Encrypt UDP and TCP packets in test.  Use a sane transport config.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2017/02/06 22:58:51 bluhm Exp $
d41 1
a41 1
SRC_OUT_IPV6 ?=	${PREFIX_IPV6}0::17
d43 1
a43 1
SRC_TRANSP_IPV6 ?=	${PREFIX_IPV6}4::17
d45 1
a45 1
SRC_TUNNEL_IPV6 ?=	${PREFIX_IPV6}8::17
d48 1
a48 1
IPS_IN_IPV6 ?=	${PREFIX_IPV6}0::70
d50 1
a50 1
IPS_OUT_IPV6 ?=	${PREFIX_IPV6}1::70
d52 1
a52 1
IPS_TRANSP_IPV6 ?=	${PREFIX_IPV6}5::70
d54 1
a54 1
IPS_TUNNEL4_IPV6 ?=	${PREFIX_IPV6}c::70
d56 1
a56 1
IPS_TUNNEL6_IPV6 ?=	${PREFIX_IPV6}d::70
d59 1
a59 1
RT_IN_IPV6 ?=	${PREFIX_IPV6}1::71
d61 1
a61 1
RT_OUT_IPV6 ?=	${PREFIX_IPV6}2::71
d64 1
a64 1
ECO_IN_IPV6 ?=	${PREFIX_IPV6}2::72
d66 1
a66 1
ECO_TUNNEL4_IPV6 ?=	${PREFIX_IPV6}e::72
d68 1
a68 1
ECO_TUNNEL6_IPV6 ?=	${PREFIX_IPV6}f::72
d369 1
a369 1
	ssh ${${host}_SSH} ${SUDO} "umask 027;\
d373 1
a373 1
	ssh ${${host}_SSH} ${SUDO} "mv /etc/hostname.${${host}_${dir}_IF}.tmp\
@


1.2
log
@Ping via IPsec must increment ESP input and output counter by one.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.1.1 2017/02/06 21:54:05 bluhm Exp $
d75 1
d148 5
d172 23
d429 5
d479 5
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD$
d156 2
d159 4
d170 1
a170 1
CLEANFILES +=		addr.py *.pyc *.log stamp-* */hostname.*
@


1.1.1.1
log
@Test combinations of IPsec tunnel and transport mode on several
machines.  For now only ESP encrypted IPv4 and IPv6 ICMP ping packets
are generated.
@
text
@@
