head	1.13;
access;
symbols
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.10
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.8
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.6
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.8
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.6
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.16
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.14
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.10
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.12
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.8
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.6
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.12
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.10
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2;
locks; strict;
comment	@# @;


1.13
date	2014.07.03.21.12.24;	author miod;	state Exp;
branches;
next	1.12;
commitid	tsdASf3OqPDRAjuB;

1.12
date	2014.06.19.19.34.22;	author matthew;	state Exp;
branches;
next	1.11;
commitid	gDU1Z77D43iXHIf7;

1.11
date	2014.06.13.07.17.54;	author matthew;	state Exp;
branches;
next	1.10;
commitid	wGJG5WtkR5ByPeKf;

1.10
date	2013.08.01.21.26.30;	author kettenis;	state Exp;
branches;
next	1.9;

1.9
date	2011.10.07.20.16.55;	author ariane;	state Exp;
branches;
next	1.8;

1.8
date	2011.10.07.19.43.07;	author ariane;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.05.17.48.59;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2007.05.21.07.28.16;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.06.20.40.55;	author kurt;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.03.18.26.54;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.06.10.14.20;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.23.01.25.11;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.16.17.34.14;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Enter the REGRESS_FULL target subdirs for clean, cleandir and obj targets.
@
text
@#	$OpenBSD: Makefile,v 1.12 2014/06/19 19:34:22 matthew Exp $

SUBDIR+= minherit_zero
SUBDIR+= misc mmap_4g mmap_size mmap_fixed mmap_mod
SUBDIR+= mmap_noreplace mmap_write_self
SUBDIR+= mmap0

.if defined(REGRESS_FULL) || make(clean) || make(cleandir) || make(obj)
SUBDIR+= mmap_hint
.endif

install:

.include <bsd.subdir.mk>
@


1.12
log
@Add a basic regress test for __MAP_NOREPLACE.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2014/06/13 07:17:54 matthew Exp $
d8 1
a8 1
.if defined(REGRESS_FULL)
@


1.11
log
@Add regress test for MAP_INHERIT_ZERO.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2013/08/01 21:26:30 kettenis Exp $
d4 2
a5 1
SUBDIR+= misc mmap_4g mmap_size mmap_fixed mmap_mod mmap_write_self
@


1.10
log
@Some tests are currently failing.  Only run those if the REGRESS_FULL
variable is set.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2011/10/07 20:16:55 ariane Exp $
d3 1
@


1.9
log
@Test hint-based mmap allocations.

A hint-based allocation may only fail if no memory is available near the
allocation. The value of near is chosen to be 2GB in this scenario.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2011/10/07 19:43:07 ariane Exp $
d3 6
a8 2
SUBDIR=misc mmap_4g mmap_size mmap_fixed mmap_mod mmap_write_self
SUBDIR+=mmap0 mmap_hint
@


1.8
log
@mmap with len=0 should fail with EINVAL.

- posix says so
- the current allocator doesn't like it
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2011/07/05 17:48:59 art Exp $
d3 2
a4 1
SUBDIR=misc mmap_4g mmap_size mmap_fixed mmap_mod mmap_write_self mmap0
@


1.7
log
@plug in mmap_write_self
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2007/05/21 07:28:16 art Exp $
d3 1
a3 1
SUBDIR=misc mmap_4g mmap_size mmap_fixed mmap_mod mmap_write_self
@


1.6
log
@Add mmap_mod.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2006/04/06 20:40:55 kurt Exp $
d3 1
a3 1
SUBDIR=misc mmap_4g mmap_size mmap_fixed mmap_mod
@


1.5
log
@enable mmap_fixed regress
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2005/05/03 18:26:54 otto Exp $
d3 1
a3 1
SUBDIR=misc mmap_4g mmap_size mmap_fixed
@


1.4
log
@Test writing to a mmapped file around the 4GB offset.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2005/01/06 10:14:20 otto Exp $
d3 1
a3 1
SUBDIR=misc mmap_4g mmap_size
@


1.3
log
@sanity checks on size arg to mmap.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2002/02/23 01:25:11 art Exp $
d3 1
a3 1
SUBDIR=misc mmap_size
@


1.2
log
@no more need to explicitly specify regress: _SUBDIRUSE targets anymore.
XXX - what about the install targets?
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2002/02/16 17:34:14 art Exp $
d3 1
a3 1
SUBDIR=misc
@


1.1
log
@Need a Makefile here.
@
text
@d1 1
a1 1
#	$OpenBSD$
a3 2

regress: _SUBDIRUSE
@

