head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.4
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.1.0.24
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.20
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.18
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.16
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.14
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.12
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2017.07.13.11.24.58;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	fVR85DrsU8nNEZXu;

1.1
date	2011.10.07.20.16.55;	author ariane;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Round VM_MAXUSER_ADDRESS down to next page to make mmap_hint regress
pass on sparc64.
@
text
@#	$OpenBSD: Makefile,v 1.1 2011/10/07 20:16:55 ariane Exp $

PROG=	mmap_hint
CFLAGS=	-Wall

.include <bsd.regress.mk>
@


1.1
log
@Test hint-based mmap allocations.

A hint-based allocation may only fail if no memory is available near the
allocation. The value of near is chosen to be 2GB in this scenario.
@
text
@d1 4
a4 2
#	$OpenBSD: Makefile,v 1.1 2011/10/07 19:43:07 ariane Exp $
PROG=mmap_hint
@

