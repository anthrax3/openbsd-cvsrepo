head	1.3;
access;
symbols
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2005.12.07.01.47.04;	author pedro;	state dead;
branches;
next	1.2;

1.2
date	2003.07.31.21.48.07;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.08.17.33.32;	author art;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Moved to regress/sys/dev/fdesc
@
text
@/*	$OpenBSD: confuse.c,v 1.2 2003/07/31 21:48:07 deraadt Exp $	*/
/*
 *	Written by Artur Grabowski <art@@openbsd.org> 2002 Public Domain.
 */
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <err.h>
#include <fcntl.h>
#include <errno.h>

int
main(int argc, char *argv[])
{
	char fname[64];
	int fd, newfd;

	if ((fd = open("/dev/null", O_RDONLY)) < 0)
		err(1, "open(/dev/null)");

	/* Try to confuse fdescfs by making it open into itself. */
	close(fd);

	snprintf(fname, sizeof(fname), "/dev/fd/%d", fd);

	if ((newfd = open(fname, O_RDONLY)) == fd)
		errx(1, "open of %s to %d succeeded, beware.", fname, fd);

	if (newfd >= 0)
		errx(1, "open(%s) gave us the unexpected %d", fname, fd);

	if (errno == ENOENT)
		err(1, "open(%s)", fname);

	if (errno == ENXIO)
		errx(1, "no support for fdesc in kernel"); 

	warn("errno was (%d)", errno);

	return 0;
}
@


1.2
log
@various cleanups; david says results are same
@
text
@d1 1
a1 1
/*	$OpenBSD: confuse.c,v 1.1 2002/02/08 17:33:32 art Exp $	*/
@


1.1
log
@Try to confuse /dev/fd (might crash the kernel on other systems or if someone screws up in the kernel).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d13 1
a13 1
main()
@

