head	1.5;
access;
symbols
	bluhm_20170113:1.1.1.1 bluhm:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2017.02.10.12.30.50;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	zgbXh5Gy5IhEpluw;

1.4
date	2017.01.18.11.56.10;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	8KXn0jlT2hHMPxir;

1.3
date	2017.01.16.19.12.36;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	ClI8loV5z8qc0zt8;

1.2
date	2017.01.13.01.33.14;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	Fnujr5zqs4CdXD6a;

1.1
date	2017.01.13.01.01.19;	author bluhm;	state Exp;
branches
	1.1.1.1;
next	;
commitid	H6ck70du9VfL32Yl;

1.1.1.1
date	2017.01.13.01.01.19;	author bluhm;	state Exp;
branches;
next	;
commitid	H6ck70du9VfL32Yl;


desc
@@


1.5
log
@Create and connect to unix domain sockets on NFS mounted file system.
@
text
@# $OpenBSD: Makefile,v 1.4 2017/01/18 11:56:10 bluhm Exp $

PROGS=		mmap-sysctl-copyin mmap-sysctl-copyout
OBJS=		${PROGS:S/$/.o/}
CLEANFILES=	${PROGS} diskimage stamp-*

.PHONY: disk nfs mount unconfig clean

disk: unconfig
	dd if=/dev/zero of=diskimage bs=512 count=4k
	vnconfig vnd0 diskimage
	newfs vnd0c

nfs:
	grep '/mnt/regress-nfs-server\>' /etc/exports || \
	    echo /mnt/regress-nfs-server -maproot=0:0 127.0.0.1 >>/etc/exports
	rcctl -f start portmap
	rcctl -f start nfsd
	rcctl -f start mountd

mount: disk nfs
	mkdir -p /mnt/regress-nfs-server
	mount /dev/vnd0c /mnt/regress-nfs-server
	mkdir -p /mnt/regress-nfs-client
	mount -t nfs 127.0.0.1:/mnt/regress-nfs-server /mnt/regress-nfs-client

unconfig:
	-umount -f -t nfs -h 127.0.0.1 -a || true
	-rmdir /mnt/regress-nfs-client 2>/dev/null || true
	-pkill -KILL mountd || true
	-rcctl -f stop nfsd
	-rcctl -f stop portmap
	-umount -f /dev/vnd0c 2>/dev/null || true
	-rmdir /mnt/regress-nfs-server 2>/dev/null || true
	-vnconfig -u vnd0 2>/dev/null || true
	-rm -f stamp-setup

stamp-setup:
	@@echo '\n======== $@@ ========'
	${.MAKE} -C ${.CURDIR} mount
	date >$@@

REGRESS_TARGETS+=	run-regress-read
run-regress-read: stamp-setup
	@@echo '\n======== $@@ ========'
	echo -n $@@ >/mnt/regress-nfs-server/read
	[ $@@ = "`cat /mnt/regress-nfs-client/read`" ]

REGRESS_TARGETS+=	run-regress-write
run-regress-write: stamp-setup
	@@echo '\n======== $@@ ========'
	echo -n $@@ >/mnt/regress-nfs-client/write
	[ $@@ = "`cat /mnt/regress-nfs-server/write`" ]

.for p in ${PROGS}
REGRESS_TARGETS+=	run-regress-${p}
run-regress-${p}: stamp-setup ${p}
	@@echo '\n======== $@@ ========'
	./${p}
.endfor

.for socktype nctype in stream -U dgram -Uu
REGRESS_TARGETS+=	run-regress-socket-${socktype}
run-regress-socket-${socktype}: stamp-setup
	@@echo '\n======== $@@ ========'
	rm -f /mnt/regress-nfs-client/socket-${socktype}
	nc ${nctype} -v -l /mnt/regress-nfs-client/socket-${socktype} &
	[ -S /mnt/regress-nfs-client/socket-${socktype} ] || sleep 1
	[ -S /mnt/regress-nfs-client/socket-${socktype} ]
	nc ${nctype} -z /mnt/regress-nfs-client/socket-${socktype}
.if "${socktype}" == dgram
	pkill -xf "nc -Uu -v -l /mnt/regress-nfs-client/socket-dgram"
.endif
.endfor

REGRESS_TARGETS+=	run-regress-cleanup
run-regress-cleanup:
	@@echo '\n======== $@@ ========'
	-pkill -xf "nc -U -v -l /mnt/regress-nfs-client/socket-stream" || true
	-pkill -xf "nc -Uu -v -l /mnt/regress-nfs-client/socket-dgram" || true
	${.MAKE} -C ${.CURDIR} unconfig

.include <bsd.regress.mk>
@


1.4
log
@Do not unconfigure mount points, vnd devices and NFS daemons during
"make clean".  "make build" does a recursive "make cleandir" and
there this behavior is undesired unexpected.
reported by naddy@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2017/01/16 19:12:36 bluhm Exp $
d28 1
a28 1
	-umount -f -t nfs -h 127.0.0.1 -a
d62 14
d79 2
@


1.3
log
@SIGTERM does not reliably terminate mountd(8), use -KILL for cleanup.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2017/01/13 01:33:14 bluhm Exp $
d5 1
a5 1
CLEANFILES=	diskimage
a36 4

clean: _SUBDIRUSE unconfig
	rm -f a.out [Ee]rrs mklog *.core y.tab.h stamp-* \
	    ${PROGS} ${OBJS} ${_LEXINTM} ${_YACCINTM} ${CLEANFILES}
@


1.2
log
@Make mount points and makefiles for file system tests consistent.
Link tests to the build.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1.1.1 2017/01/13 01:01:19 bluhm Exp $
d30 1
a30 1
	-pkill mountd || true
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD$
d15 2
a16 2
	grep '/mnt/nfs-server\>' /etc/exports || \
	    echo /mnt/nfs-server -maproot=0:0 127.0.0.1 >>/etc/exports
d22 4
a25 4
	mkdir -p /mnt/nfs-server
	mount /dev/vnd0c /mnt/nfs-server
	mkdir -p /mnt/nfs-client
	mount -t nfs 127.0.0.1:/mnt/nfs-server /mnt/nfs-client
d29 1
a29 1
	-rmdir /mnt/nfs-client 2>/dev/null || true
d34 1
a34 1
	-rmdir /mnt/nfs-server 2>/dev/null || true
d50 2
a51 2
	echo -n $@@ >/mnt/nfs-server/read
	[ $@@ = "`cat /mnt/nfs-client/read`" ]
d56 2
a57 2
	echo -n $@@ >/mnt/nfs-client/write
	[ $@@ = "`cat /mnt/nfs-server/write`" ]
@


1.1.1.1
log
@Use a NFS mount via loopback for testing file system operations.
By changing files directly on the server and accessing them on the
client or vice versa, specific kernel behavior can be triggered.
Especially using file mmap(2) over NFS is tested.
@
text
@@
