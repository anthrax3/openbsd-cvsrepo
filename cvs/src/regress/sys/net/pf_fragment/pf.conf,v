head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.8
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2015.08.24.23.12.53;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	io7tL4yJ4LeVqmMX;

1.3
date	2015.08.13.15.46.01;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	uJhwczfXJPtkffM7;

1.2
date	2015.07.21.17.51.50;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	rrWHLPuCICxdemKP;

1.1
date	2014.07.12.22.43.31;	author bluhm;	state Exp;
branches;
next	;
commitid	8kciCoVC9NsnDpq4;


desc
@@


1.4
log
@Extend the pf forward and fragment tests with a second challenge
for path MTU discovery.  The router behind the pf machine has MTU
1300.  The ICMP packet generated by the router matches the pf state
and is NATed correctly.  Additionally the pf machine itself has an
interface MTU 1400.  So when pf is sending a packet is has to
generate a correct "fragmentation needed" or "packet too big" ICMP
response.  This is done with pf route-to and reply-to.
@
text
@# pf on PF must have these rules in the regress anchor

pass to { $PF_IN/24 $PF_IN6/64 }
pass to { $RT_IN/24 $RT_IN6/64 }
pass to { $ECO_IN/24 $ECO_IN6/64 }
pass to { $RDR_IN/24 $RDR_IN6/64 }

pass in  to $RDR_IN/24  rdr-to $ECO_IN  allow-opts tag rdr
pass out                nat-to $PF_OUT  allow-opts tagged rdr
pass in  to $RDR_IN6/64 rdr-to $ECO_IN6 allow-opts tag rdr
pass out                nat-to $PF_OUT6 allow-opts tagged rdr

pass in  to $RTT_IN/24                             allow-opts tag rtt
pass out                route-to $RT_IN@@$PF_IFOUT  allow-opts tagged rtt
pass in  to $RTT_IN6/64                            allow-opts tag rtt
pass out                route-to $RT_IN6@@$PF_IFOUT allow-opts tagged rtt
@


1.3
log
@Add IPv6 fragment tests for pf route-to.  A big ping packet is sent
in fragments to a machine running pf.  From there it is forwarded
with route-to to a router with a smaller MTU.  Path MTU discovery
has to make successive fragments shorter and pf route-to has to
preserve the fragment size.
@
text
@d13 4
a16 4
pass in  to $RTT_IN/24                          allow-opts tag rtt
pass out                route-to $RT_IN@@$PF_IF  allow-opts tagged rtt
pass in  to $RTT_IN6/64                         allow-opts tag rtt
pass out                route-to $RT_IN6@@$PF_IF allow-opts tagged rtt
@


1.2
log
@Extend the setup with another address for testing pf route-to.
@
text
@d13 4
a16 2
pass in  to $RTT_IN/24  route-to $RT_IN  allow-opts
pass in  to $RTT_IN6/64 route-to $RT_IN6 allow-opts
@


1.1
log
@Automatically load the required pf rules into the kernel of the
remote test machine.
@
text
@d12 3
@

