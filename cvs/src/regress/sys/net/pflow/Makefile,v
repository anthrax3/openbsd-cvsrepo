head	1.7;
access;
symbols
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@# @;


1.7
date	2017.03.03.21.34.14;	author bluhm;	state Exp;
branches;
next	1.6;
commitid	qAvEjax3lixKW4Ec;

1.6
date	2017.02.27.21.56.09;	author bluhm;	state Exp;
branches;
next	1.5;
commitid	ADNFjNepsFdVyksx;

1.5
date	2016.10.26.14.06.33;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	yHSLNN6nxp0Yf6eY;

1.4
date	2014.03.29.11.49.41;	author florian;	state Exp;
branches;
next	1.3;

1.3
date	2013.09.13.14.51.50;	author florian;	state Exp;
branches;
next	1.2;

1.2
date	2013.08.23.08.25.57;	author florian;	state Exp;
branches;
next	1.1;

1.1
date	2013.08.11.10.01.56;	author florian;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Do not use an obsolete copy of a Perl module from CPAN for testing.
Require that the p5-Net-Flow package is installed and use it.
@
text
@# $OpenBSD: Makefile,v 1.6 2017/02/27 21:56:09 bluhm Exp $
#
#  template_v10
#  ----------------
#  * create pflow0 sending from 127.0.0.1 to 127.0.0.1:9996
#  * wait for first template and compare it to known good template
#  * destroy pflow0
#
#  flow_10_{4,6}
#  -----------------
#  * create pflow0 sending from 127.0.0.1 to 127.0.0.1:9996
#  * add 10.11.12.13 and 2001:db8::13 to lo0
#  * load pf ruleset which skips on all interfaces except lo0 to not lose
#    existing ssh sessions, e.g.:
#	set skip on {em0 cas0 cas1 enc0}
#	pass on lo0 no state
#	pass on lo0 proto tcp from port 12345 to port 12346 keep state (pflow)
#  * enable pf
#  * generate IPv4 or IPv6 traffic
#  * wait for flow and compare it with known good flow
#  * destroy pflow0
#  * delete 10.11.12.13 and 2001:db8::13 from lo0
#
# ifconfig
# --------
# Take up pflow0 and test various combinations of flowdst, flowsrc and proto.
# Destroy it in the end.

REGRESS_TARGETS=template_v10 flow_10_4 flow_10_6 ifconfig

PROG=   gen_traffic
LDADD=  -levent

.if ! (make(clean) || make(cleandir) || make(obj))
PF_ENABLED !!=	pfctl -si | grep '^Status: Enabled ' || true
.endif
.if empty(PF_ENABLED)
regress:
	@@echo Enable pf on localhost to run pflow test.
	@@echo SKIPPED
.endif

PERL_REQUIRE !!= perl -e 'eval { require Net::Flow } or print $@@'
.if ! empty(PERL_REQUIRE)
regress:
	@@echo "${PERL_REQUIRE}"
	@@echo Install the p5-Net-Flow package to run pflow test.
	@@echo SKIPPED
.endif

template_v10:
	perl ${.CURDIR}/template.pl 10 \
	    | diff -up ${.CURDIR}/template.v10 /dev/stdin

flow_10_4: gen_traffic
	perl ${.CURDIR}/flow.pl 10 4 \
	    | diff -up ${.CURDIR}/flow.10_4 /dev/stdin
flow_10_6: gen_traffic
	perl ${.CURDIR}/flow.pl 10 6 \
	    | diff -up ${.CURDIR}/flow.10_6 /dev/stdin

ifconfig:
	sh ${.CURDIR}/ifconfig.sh 2>&1 \
	    | diff -up ${.CURDIR}/ifconfig.ok /dev/stdin

.PHONY: ${REGRESS_TARGETS}

.include <bsd.regress.mk>
@


1.6
log
@Do not turn on pf in a regression test, require that it has been
enabled before.  Better skip the test than create unexpected side
effects.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2016/10/26 14:06:33 bluhm Exp $
d35 1
a35 1
PF_ENABLED !=	pfctl -si | grep '^Status: Enabled ' || true
d39 9
a47 1
	@@echo enable pf on localhost to run pflog test
d52 1
a52 1
	perl -I ${.CURDIR} ${.CURDIR}/template.pl 10 \
d56 1
a56 1
	perl -I ${.CURDIR} ${.CURDIR}/flow.pl 10 4 \
d59 1
a59 1
	perl -I ${.CURDIR} ${.CURDIR}/flow.pl 10 6 \
@


1.5
log
@Cleanup pflow test before fixing it.  Be more verbose to make
debugging easier.  Handle EINPROGRESS connect(2) error correctly.
Perl pack Q fails on 32 bit machines, add workaround.  Restore
interfaces in END block, works also if script dies.
OK florian@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2014/03/29 11:49:41 florian Exp $
d33 9
@


1.4
log
@pflowproto 9 is no more.
While there fix regression for inaddr_any flowsrc.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/09/13 14:51:50 florian Exp $
d36 1
a36 1
	    | cmp -s ${.CURDIR}/template.v10 /dev/stdin
d40 1
a40 1
	    | cmp -s ${.CURDIR}/flow.10_4 /dev/stdin
d43 1
a43 1
	    | cmp -s ${.CURDIR}/flow.10_6 /dev/stdin
d47 1
a47 1
	    | cmp -s ${.CURDIR}/ifconfig.ok /dev/stdin
@


1.3
log
@Test various combinations of flowdst, flowsrc and proto.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/08/23 08:25:57 florian Exp $
d3 1
a3 1
#  template_v{9,10}
d9 1
a9 1
#  flow_{9,10}_{4,6}
d29 1
a29 2
REGRESS_TARGETS=template_v9 template_v10 flow_9_4 flow_9_6 flow_10_4 flow_10_6
REGRESS_TARGETS+=ifconfig
a33 3
template_v9:
	perl -I ${.CURDIR} ${.CURDIR}/template.pl 9 \
	    | cmp -s ${.CURDIR}/template.v9 /dev/stdin
a37 6
flow_9_4: gen_traffic
	perl -I ${.CURDIR} ${.CURDIR}/flow.pl 9 4 \
	    | cmp -s ${.CURDIR}/flow.9_4 /dev/stdin
flow_9_6: gen_traffic
	perl -I ${.CURDIR} ${.CURDIR}/flow.pl 9 6 \
	    | cmp -s ${.CURDIR}/flow.9_6 /dev/stdin
@


1.2
log
@flow regression tests.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2013/08/11 10:01:56 florian Exp $
d23 5
d30 1
d54 4
@


1.1
log
@pflow(4) template regression tests
@
text
@d1 22
a22 1
# $OpenBSD$
d24 4
a27 1
REGRESS_TARGETS=template_v9 template_v10
d30 5
a34 1
	${.CURDIR}/template.pl 9 | cmp -s ${.CURDIR}/template.v9 /dev/stdin
d36 12
a47 2
template_v10:
	${.CURDIR}/template.pl 10 | cmp -s ${.CURDIR}/template.v10 /dev/stdin
@

