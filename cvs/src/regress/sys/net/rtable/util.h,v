head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.8
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2015.11.04.09.45.52;	author mpi;	state Exp;
branches;
next	;
commitid	FEdk7nPXQjqIFBhN;


desc
@@


1.1
log
@Basic framework to test the rtable_* API directly from userland.

You can replace inet{,6}-fullfeed.txt with a dump of your fullfeed table
to really stress this test framework.  I did not commit them because CVS
certainly doesn't like ~7M file.
@
text
@/* 	$OpenBSD$ */

/*
 * Copyright (c) 2015 Martin Pieuchot
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

void	route_insert(unsigned int, sa_family_t, char *);
void	route_delete(unsigned int, sa_family_t, char *);
void	route_lookup(unsigned int, sa_family_t, char *);

int	do_from_file(unsigned int, sa_family_t, char *,
	    void (*f)(unsigned int, sa_family_t, char *));

int	rtentry_dump(struct rtentry *, void *, unsigned int);
int	rtentry_delete(struct rtentry *, void *, unsigned int);
void	rt_maskedcopy(struct sockaddr *, struct sockaddr *, struct sockaddr *);
int	maskcmp(sa_family_t, struct sockaddr *, struct sockaddr *);
int	inet_net_ptosa(sa_family_t, const char *, struct sockaddr *,
	     struct sockaddr *);
char	*inet_net_satop(sa_family_t, struct sockaddr *, int, char *, size_t);
@
