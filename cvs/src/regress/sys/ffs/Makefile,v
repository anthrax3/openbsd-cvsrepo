head	1.7;
access;
symbols
	OPENBSD_6_0:1.4.0.22
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.12
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.20
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.18
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.16
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.14
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.10
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.8
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.16
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.14
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.10
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.12
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3;
locks; strict;
comment	@# @;


1.7
date	2017.01.13.01.19.13;	author bluhm;	state Exp;
branches;
next	1.6;
commitid	tu3qslUHSTc5XXDf;

1.6
date	2017.01.11.00.02.48;	author bluhm;	state Exp;
branches;
next	1.5;
commitid	pNRYI74zItv5z3GZ;

1.5
date	2017.01.10.23.16.15;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	gnGyncMdzf0C9TDl;

1.4
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.10.11.23.38;	author pedro;	state Exp;
branches;
next	1.2;

1.2
date	2007.03.30.19.28.25;	author pedro;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.30.19.02.51;	author pedro;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Run the existing tests for FFS also on a NFS mount point.
@
text
@# $OpenBSD: Makefile,v 1.6 2017/01/11 00:02:48 bluhm Exp $

SUBDIR=		ffs nfs
PROG=		fstest
NOMAN=		yes

.include <bsd.prog.mk>
@


1.6
log
@Fix trailing whitespace.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2017/01/10 23:16:15 bluhm Exp $
d3 3
a5 1
PROG=	fstest
d7 1
a7 70
mount: unmount
	dd if=/dev/zero of=fakeobj bs=512 count=4k
	vnconfig vnd0 fakeobj
	newfs /dev/rvnd0c
	mount /dev/vnd0c /mnt

unmount:
	-umount -f /mnt 2>/dev/null || true
	-vnconfig -u vnd0 2>/dev/null || true
	-vnconfig -u vnd1 2>/dev/null || true

clean: unmount
	-rm -f fakeobj
	-rm -f fstest
	-rm -f fstest.o

chflags: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/chflags/*.t

chmod: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/chmod/*.t

chown: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/chown/*.t

link: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/link/*.t

mkdir: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/mkdir/*.t

mkfifo: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/mkfifo/*.t

open: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/open/*.t

rename: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/rename/*.t

rmdir: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/rmdir/*.t

symlink: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/symlink/*.t

truncate: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/truncate/*.t

unlink: ${PROG} mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/unlink/*.t

run-regress-fstest: mount
	cd /mnt && env FSTEST=${.OBJDIR}/fstest /bin/sh ${.CURDIR}/run\
		${.CURDIR}/tests/*/*.t
	cd ${.CURDIR} && ${.MAKE} unmount

.include <bsd.regress.mk>
@


1.5
log
@Cleanup the mount point and vnd devices before and after the test.
Use objdir and curdir correctly.  Link ffs regress to the build.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2011/04/18 16:52:11 thib Exp $
d32 1
a32 1
	
@


1.4
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2007/04/10 11:23:38 pedro Exp $
d5 3
a7 3
mount:
	dd if=/dev/zero of=${.CURDIR}/fakeobj bs=512 count=4k
	vnconfig vnd0 ${.CURDIR}/fakeobj
d11 9
a19 7
clean:
	-umount /mnt
	-vnconfig -u vnd0
	-vnconfig -u vnd1
	-rm -f ${.CURDIR}/fakeobj
	-rm -f ${.OBJDIR}/fstest
	-rm -f ${.OBJDIR}/fstest.o
d72 1
@


1.3
log
@No need to use umount -f now that both cases of vnode leakage were fixed
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2007/03/30 19:28:25 pedro Exp $
d7 3
a9 3
	vnconfig svnd0 ${.CURDIR}/fakeobj
	newfs /dev/rsvnd0c
	mount /dev/svnd0c /mnt
d13 2
a14 2
	-vnconfig -u svnd0
	-vnconfig -u svnd1
@


1.2
log
@Don't assume 'run' to be executable, pointed out and okay deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2007/03/30 19:02:51 pedro Exp $
d12 1
a12 1
	-umount -f /mnt
@


1.1
log
@Add regression test suite for FFS, from FreeBSD, okay art@@ deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD$
d20 1
a20 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d24 1
a24 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d28 1
a28 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d32 1
a32 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d36 1
a36 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d40 1
a40 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d44 1
a44 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d48 1
a48 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d52 1
a52 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d56 1
a56 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d60 1
a60 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d64 1
a64 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
d68 1
a68 1
	cd /mnt && env FSTEST=${.OBJDIR}/fstest ${.CURDIR}/run\
@

