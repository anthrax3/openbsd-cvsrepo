head	1.4;
access;
symbols
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.2.0.22
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.12
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.20
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.18
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.16
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.14
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.16
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.14
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.12
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.01.12.01.43.53;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	9RtsEGRIgSTlArmf;

1.3
date	2017.01.12.01.04.50;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	1mqPuRSyRM01fUXx;

1.2
date	2011.04.18.16.52.11;	author thib;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.30.19.02.51;	author pedro;	state Exp;
branches;
next	;


desc
@@


1.4
log
@The program to create hard links is called ln(1) and not link.
@
text
@#!/bin/sh
# $FreeBSD: src/tools/regression/fstest/tests/link/15.t,v 1.1 2007/01/17 01:42:09 pjd Exp $

desc="link returns ENOSPC if the directory in which the entry for the new link is being placed cannot be extended because there is no space left on the file system containing the directory"

n0=`namegen`
n1=`namegen`
n2=`namegen`

expect 0 mkdir ${n0} 0755
dd if=/dev/zero of=tmpdisk bs=1k count=256 status=none
vnconfig vnd1 tmpdisk
newfs /dev/rvnd1c >/dev/null
mount /dev/vnd1c ${n0}
expect 0 create ${n0}/${n1} 0644
i=0
while :; do
	ln ${n0}/${n1} ${n0}/${i} 2>/dev/null
	if [ $? -ne 0 ]; then
		break
	fi
	i=`expr $i + 1`
done
expect ENOSPC link ${n0}/${n1} ${n0}/${n2}
umount /dev/vnd1c
vnconfig -u vnd1
rm tmpdisk
expect 0 rmdir ${n0}
@


1.3
log
@Do not suppress error messages to stderr, but remove unnecessary
debug prints.  This gives better hints why the tests are failing.
@
text
@d18 1
a18 1
	link ${n0}/${n1} ${n0}/${i}
@


1.2
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d11 1
a11 1
dd if=/dev/zero of=tmpdisk bs=1k count=256 2>/dev/null
d18 1
a18 1
	link ${n0}/${n1} ${n0}/${i} >/dev/null 2>&1
@


1.1
log
@Add regression test suite for FFS, from FreeBSD, okay art@@ deraadt@@
@
text
@d12 3
a14 3
vnconfig svnd1 tmpdisk
newfs /dev/rsvnd1c >/dev/null
mount /dev/svnd1c ${n0}
d25 2
a26 2
umount /dev/svnd1c
vnconfig -u svnd1
@

