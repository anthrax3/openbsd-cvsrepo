head	1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.42
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.38
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.28
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.36
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.34
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.32
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.30
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.26
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.24
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.22
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.20
	OPENBSD_5_0:1.1.0.18
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.16
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.14
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.12
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2007.03.30.19.02.51;	author pedro;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add regression test suite for FFS, from FreeBSD, okay art@@ deraadt@@
@
text
@#!/bin/sh
# $FreeBSD: src/tools/regression/fstest/tests/link/00.t,v 1.1 2007/01/17 01:42:09 pjd Exp $

desc="link creates hardlinks"

n0=`namegen`
n1=`namegen`
n2=`namegen`
n3=`namegen`

expect 0 mkdir ${n3} 0755
cdir=`pwd`
cd ${n3}

expect 0 create ${n0} 0644
expect regular,0644,1 lstat ${n0} type,mode,nlink

expect 0 link ${n0} ${n1}
expect regular,0644,2 lstat ${n0} type,mode,nlink
expect regular,0644,2 lstat ${n1} type,mode,nlink

expect 0 link ${n1} ${n2}
expect regular,0644,3 lstat ${n0} type,mode,nlink
expect regular,0644,3 lstat ${n1} type,mode,nlink
expect regular,0644,3 lstat ${n2} type,mode,nlink

expect 0 chmod ${n1} 0201
expect 0 chown ${n1} 65534 65533

expect regular,0201,3,65534,65533 lstat ${n0} type,mode,nlink,uid,gid
expect regular,0201,3,65534,65533 lstat ${n1} type,mode,nlink,uid,gid
expect regular,0201,3,65534,65533 lstat ${n2} type,mode,nlink,uid,gid

expect 0 unlink ${n0}
expect ENOENT lstat ${n0} type,mode,nlink,uid,gid
expect regular,0201,2,65534,65533 lstat ${n1} type,mode,nlink,uid,gid
expect regular,0201,2,65534,65533 lstat ${n2} type,mode,nlink,uid,gid

expect 0 unlink ${n2}
expect ENOENT lstat ${n0} type,mode,nlink,uid,gid
expect regular,0201,1,65534,65533 lstat ${n1} type,mode,nlink,uid,gid
expect ENOENT lstat ${n2} type,mode,nlink,uid,gid

expect 0 unlink ${n1}
expect ENOENT lstat ${n0} type,mode,nlink,uid,gid
expect ENOENT lstat ${n1} type,mode,nlink,uid,gid
expect ENOENT lstat ${n2} type,mode,nlink,uid,gid

expect 0 mkfifo ${n0} 0644
expect fifo,0644,1 lstat ${n0} type,mode,nlink

expect 0 link ${n0} ${n1}
expect fifo,0644,2 lstat ${n0} type,mode,nlink
expect fifo,0644,2 lstat ${n1} type,mode,nlink

expect 0 link ${n1} ${n2}
expect fifo,0644,3 lstat ${n0} type,mode,nlink
expect fifo,0644,3 lstat ${n1} type,mode,nlink
expect fifo,0644,3 lstat ${n2} type,mode,nlink

expect 0 chmod ${n1} 0201
expect 0 chown ${n1} 65534 65533

expect fifo,0201,3,65534,65533 lstat ${n0} type,mode,nlink,uid,gid
expect fifo,0201,3,65534,65533 lstat ${n1} type,mode,nlink,uid,gid
expect fifo,0201,3,65534,65533 lstat ${n2} type,mode,nlink,uid,gid

expect 0 unlink ${n0}
expect ENOENT lstat ${n0} type,mode,nlink,uid,gid
expect fifo,0201,2,65534,65533 lstat ${n1} type,mode,nlink,uid,gid
expect fifo,0201,2,65534,65533 lstat ${n2} type,mode,nlink,uid,gid

expect 0 unlink ${n2}
expect ENOENT lstat ${n0} type,mode,nlink,uid,gid
expect fifo,0201,1,65534,65533 lstat ${n1} type,mode,nlink,uid,gid
expect ENOENT lstat ${n2} type,mode,nlink,uid,gid

expect 0 unlink ${n1}
expect ENOENT lstat ${n0} type,mode,nlink,uid,gid
expect ENOENT lstat ${n1} type,mode,nlink,uid,gid
expect ENOENT lstat ${n2} type,mode,nlink,uid,gid

# successful link(2) updates ctime.
expect 0 create ${n0} 0644
ctime1=`${FSTEST} stat ${n0} ctime`
dctime1=`${FSTEST} stat . ctime`
dmtime1=`${FSTEST} stat . mtime`
sleep 1
expect 0 link ${n0} ${n1}
ctime2=`${FSTEST} stat ${n0} ctime`
test_check $ctime1 -lt $ctime2
dctime2=`${FSTEST} stat . ctime`
test_check $dctime1 -lt $dctime2
dmtime2=`${FSTEST} stat . mtime`
test_check $dctime1 -lt $dmtime2
expect 0 unlink ${n0}
expect 0 unlink ${n1}

expect 0 mkfifo ${n0} 0644
ctime1=`${FSTEST} stat ${n0} ctime`
dctime1=`${FSTEST} stat . ctime`
dmtime1=`${FSTEST} stat . mtime`
sleep 1
expect 0 link ${n0} ${n1}
ctime2=`${FSTEST} stat ${n0} ctime`
test_check $ctime1 -lt $ctime2
dctime2=`${FSTEST} stat . ctime`
test_check $dctime1 -lt $dctime2
dmtime2=`${FSTEST} stat . mtime`
test_check $dctime1 -lt $dmtime2
expect 0 unlink ${n0}
expect 0 unlink ${n1}

# unsuccessful link(2) does not update ctime.
expect 0 create ${n0} 0644
expect 0 chown ${n0} 65534 -1
ctime1=`${FSTEST} stat ${n0} ctime`
dctime1=`${FSTEST} stat . ctime`
dmtime1=`${FSTEST} stat . mtime`
sleep 1
expect EACCES -u 65534 link ${n0} ${n1}
ctime2=`${FSTEST} stat ${n0} ctime`
test_check $ctime1 -eq $ctime2
dctime2=`${FSTEST} stat . ctime`
test_check $dctime1 -eq $dctime2
dmtime2=`${FSTEST} stat . mtime`
test_check $dctime1 -eq $dmtime2
expect 0 unlink ${n0}

expect 0 mkfifo ${n0} 0644
expect 0 chown ${n0} 65534 -1
ctime1=`${FSTEST} stat ${n0} ctime`
dctime1=`${FSTEST} stat . ctime`
dmtime1=`${FSTEST} stat . mtime`
sleep 1
expect EACCES -u 65534 link ${n0} ${n1}
ctime2=`${FSTEST} stat ${n0} ctime`
test_check $ctime1 -eq $ctime2
dctime2=`${FSTEST} stat . ctime`
test_check $dctime1 -eq $dctime2
dmtime2=`${FSTEST} stat . mtime`
test_check $dctime1 -eq $dmtime2
expect 0 unlink ${n0}

cd ${cdir}
expect 0 rmdir ${n3}
@
