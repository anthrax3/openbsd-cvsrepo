head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.18
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.16
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.8
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2013.12.28.02.14.32;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add regression tests to check whether GCC folds unsafe builtins and
actually shows the security warning.  Also add some other cases
where GCC used to yield the warning but shouldn't (e.g. strncat
simplified into strcat).
@
text
@#include <string.h>

int
main(int argc, char **argv)
{
	char buf[512];
	volatile char *rv;

	/* This expression cannot be folded. */
	rv = strcat(buf, argv[0]);

	return (1);
}
@
