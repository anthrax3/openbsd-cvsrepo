head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.12
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3;
locks; strict;
comment	@# @;


1.3
date	2014.09.02.17.43.29;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	uB2qKOs5zbFwXm2E;

1.2
date	2014.09.02.00.26.30;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	9hOtCJWVU54mPrrd;

1.1
date	2014.08.25.19.32.29;	author bluhm;	state Exp;
branches;
next	;
commitid	inoId0bZtQfwETU8;


desc
@@


1.3
log
@To examine the operation of the signal handlers, the tests grep in
the ktrace output of syslogd.  Also make the tests work without DNS
and without sudo.
@
text
@# The client writes a message to Sys::Syslog native method.
# The syslogd writes it into a file and through a pipe.
# The syslogd -4 passes it via IPv4 UDP to localhost.
# The server receives the message on its UDP socket.
# Check that localhost gets resolved to the 127.0.0.1 address.

use strict;
use warnings;
use Socket;

our %args = (
    syslogd => {
	loghost => '@@localhost:$connectport',
	options => ["-4"],
    },
    server => {
	listen => { domain => AF_INET, addr => "127.0.0.1" },
    },
);

1;
@


1.2
log
@Add tests that run the syslogd signal handlers.
@
text
@d13 1
a13 1
	loghost => '@@localhost.:$connectport',
@


1.1
log
@Add tests where the IP address family has been chosen by -4 or -6
command line switch and udp4:// or udp6:// loghost prefix.
@
text
@d9 1
@

