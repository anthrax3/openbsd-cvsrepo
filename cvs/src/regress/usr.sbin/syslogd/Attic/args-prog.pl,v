head	1.3;
access;
symbols
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2015.07.16.17.00.39;	author bluhm;	state dead;
branches;
next	1.2;
commitid	2IXgmuzlcB7rgRn3;

1.2
date	2015.07.16.16.34.49;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	0M9ba2ikkjyPND6j;

1.1
date	2014.10.29.16.42.57;	author bluhm;	state Exp;
branches;
next	;
commitid	JzJTvMXw7vJGDdtw;


desc
@@


1.3
log
@This feature is tested in args-block-prog-quick.pl now.
@
text
@# Test with default values, that is:
# The client writes a message to Sys::Syslog native method.
# The syslogd writes it into a file and through a pipe.
# The syslogd passes it via UDP to the loghost.
# The server receives the message on its UDP socket.
# Find the message in client, file, pipe, syslogd, server log.
# Check messages in special log files selected with !prog !!prog !*.

use strict;
use warnings;
use Cwd;

my %log;
@@log{qw(foo bar foobar)} = ();
foreach my $name (keys %log) {
    $log{$name} = getcwd()."/$name.log";
    open(my $fh, '>', $log{$name})
	or die "Create $log{$name} failed: $!";
}

sub check_file {
    my ($name, $pattern) = @@_;
    check_pattern($name, $log{$name}, $pattern, \&filegrep);
}

our %args = (
    syslogd => {
	conf => <<"EOF",
!syslogd
*.*	$log{foo}
!!syslogd-regress
*.*	$log{bar}
!*
*.*	$log{foobar}
EOF
    },
    check => sub {
	check_file("foo",    { get_testgrep() => 0, qr/syslogd: start/ => 1 });
	check_file("bar",    { get_testgrep() => 1, qr/syslogd: start/ => 0 });
	check_file("foobar", { get_testgrep() => 0, qr/syslogd: start/ => 1 });
    },
);

1;
@


1.2
log
@Test that syslogd does not append white spaces to messages.  Per
default the test pattern is stricter now.  Also do some test cleanup
@
text
@@


1.1
log
@Add a test the checks the syslogd !prog !!prog !* feature.
@
text
@d38 3
a40 3
	check_file("foo",    { get_testlog() => 0, qr/syslogd: start/ => 1 });
	check_file("bar",    { get_testlog() => 1, qr/syslogd: start/ => 0 });
	check_file("foobar", { get_testlog() => 0, qr/syslogd: start/ => 1 });
@

