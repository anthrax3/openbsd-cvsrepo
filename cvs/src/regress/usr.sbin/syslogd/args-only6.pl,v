head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.8
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.10
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.6
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2015.07.16.16.34.49;	author bluhm;	state Exp;
branches;
next	1.5;
commitid	0M9ba2ikkjyPND6j;

1.5
date	2015.06.28.19.12.20;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	NYXd127rtOQXcb3J;

1.4
date	2015.06.15.21.44.57;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	BmPbwQg6idYgxXrC;

1.3
date	2014.09.13.23.38.24;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	8abA8sLPTwAOrtQB;

1.2
date	2014.09.02.00.26.30;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	9hOtCJWVU54mPrrd;

1.1
date	2014.08.25.19.32.29;	author bluhm;	state Exp;
branches;
next	;
commitid	inoId0bZtQfwETU8;


desc
@@


1.6
log
@Test that syslogd does not append white spaces to messages.  Per
default the test pattern is stricter now.  Also do some test cleanup
@
text
@# The client writes a message to a localhost IPv6 UDP socket.
# The syslogd writes it into a file and through a pipe.
# The syslogd -6 passes it via IPv6 UDP to the loghost.
# The server receives the message on its UDP socket.
# Find the message in client, file, pipe, syslogd, server log.
# Check that the syslogd has no IPv4 socket in fstat output.

use strict;
use warnings;
use Socket;

our %args = (
    client => {
	connect => { domain => AF_INET6, addr => "::1", port => 514 },
    },
    syslogd => {
	fstat => {
	    qr/^root .* internet/ => 0,
	    qr/^_syslogd .* internet/ => 1,
	    qr/ internet / => 0,
	},
	loghost => '@@[::1]:$connectport',
	options => ["-6nu"],
    },
    server => {
	listen => { domain => AF_INET6, addr => "::1" },
    },
    file => {
	loggrep => qr/ ::1 /. get_testgrep(),
    },
);

1;
@


1.5
log
@Use fstat to check that the privsep parent of syslogd closes all
internet sockets also when invoked with -u.
@
text
@d29 1
a29 1
	loggrep => qr/ ::1 /. get_testlog(),
@


1.4
log
@Rework how fstat and ktrace pattern are specified in the test
arguments.  Add tests to check wether syslogd privsep works.  This
is done for debug and foreground and daemon mode.  Fstat is checked
for chroot and sockets.  Ktrace dump is grepped for setting uid and
gid.
@
text
@d18 2
@


1.3
log
@Add tests for syslogd's memory buffer and read it with syslogc.
@
text
@d17 3
a19 1
	fstat => 1,
a27 5
    },
    fstat => {
	loggrep => {
	    qr/ internet / => 0,
	},
@


1.2
log
@Add tests that run the syslogd signal handlers.
@
text
@d25 1
a25 1
	loggrep => qr/ ::1 /. get_log(),
@


1.1
log
@Add tests where the IP address family has been chosen by -4 or -6
command line switch and udp4:// or udp6:// loghost prefix.
@
text
@d10 1
@

