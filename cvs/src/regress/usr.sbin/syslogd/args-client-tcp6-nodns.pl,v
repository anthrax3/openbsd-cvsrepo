head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.10
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2015.07.16.16.34.49;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	0M9ba2ikkjyPND6j;

1.1
date	2015.07.07.18.03.11;	author bluhm;	state Exp;
branches;
next	;
commitid	qTzx3B33iQFlT4Uv;


desc
@@


1.2
log
@Test that syslogd does not append white spaces to messages.  Per
default the test pattern is stricter now.  Also do some test cleanup
@
text
@# The syslogd listens on ::1 TCP socket.
# The client writes a message into a ::1 TCP socket.
# The syslogd writes it into a file and through a pipe without dns.
# The syslogd passes it via UDP to the loghost.
# The server receives the message on its UDP socket.
# Find the message in client, file, pipe, syslogd, server log.
# Check that the file log contains the ::1 address.

use strict;
use warnings;
use Socket;

our %args = (
    client => {
	connect => { domain => AF_INET6, proto => "tcp", addr => "::1",
	    port => 514 },
    },
    syslogd => {
	options => ["-n", "-T", "[::1]:514"],
    },
    file => {
	loggrep => qr/ ::1 /. get_testgrep(),
    },
);

1;
@


1.1
log
@Add tests for incomming syslog messages over TCP.
@
text
@d22 1
a22 1
	loggrep => qr/ ::1 /. get_testlog(),
@

