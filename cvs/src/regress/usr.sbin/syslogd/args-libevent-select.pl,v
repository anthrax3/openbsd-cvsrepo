head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.06.15.21.44.57;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	BmPbwQg6idYgxXrC;

1.1
date	2014.10.05.18.43.05;	author bluhm;	state Exp;
branches;
next	;
commitid	EkI7GavIRtUg1v3y;


desc
@@


1.2
log
@Rework how fstat and ktrace pattern are specified in the test
arguments.  Add tests to check wether syslogd privsep works.  This
is done for debug and foreground and daemon mode.  Fstat is checked
for chroot and sockets.  Ktrace dump is grepped for setting uid and
gid.
@
text
@# The client writes a message to Sys::Syslog native method.
# The syslogd writes it into a file and through a pipe.
# The syslogd passes it via UDP to the loghost.
# The server receives the message on its UDP socket.
# Find the message in client, file, pipe, syslogd, server log.
# Check in log and ktrace that select has been used.

use strict;
use warnings;

$ENV{EVENT_NOKQUEUE} = 1;
$ENV{EVENT_NOPOLL} = 1;
$ENV{EVENT_NOSELECT} = 0;

our %args = (
    syslogd => {
	loggrep => qr/libevent using: select/,
	ktrace => qr/CALL  select/,
    },
);

1;
@


1.1
log
@Test that the specified libevent backend kqueue(2) or poll(2) or
select(2) is used by syslogd.
@
text
@d18 1
a18 2
	ktrace => 1,
	kdump => qr/CALL  select/,
@

