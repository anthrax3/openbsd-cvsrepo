head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.1.0.2
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2017.04.05.22.32.14;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	7DBpdoIApLnFWBfl;

1.4
date	2017.02.07.16.04.33;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	Etjs5G1iiU32m3bx;

1.3
date	2017.01.31.16.35.57;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	YbRLOsqUpUGpP6H0;

1.2
date	2016.09.21.12.01.17;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	o9jUvlZXlix0kG8u;

1.1
date	2016.07.12.09.57.20;	author bluhm;	state Exp;
branches;
next	;
commitid	65GSYKzyEOhOJae2;


desc
@@


1.5
log
@Syslogd's debug and error messages have changed a bit, adapt test.
@
text
@# The client writes a message to Sys::Syslog native method.
# The syslogd writes it into a file and through a pipe.
# The syslogd passes it via TLS with client certificate to the loghost.
# The server tries to verify the connection to its TLS socket with wrong ca.
# Find the message in client, file, pipe, syslogd log.
# Check that syslogd and server have error message in log.

use strict;
use warnings;
use Socket;

our %args = (
    syslogd => {
	options => [qw(-c client.crt -k client.key)],
	loghost => '@@tls://localhost:$connectport',
	loggrep => {
	    qr/ClientCertfile client.crt/ => 1,
	    qr/ClientKeyfile client.key/ => 1,
	    qr/syslogd\[\d+\]: loghost .* connection error: /.
		qr/handshake failed: error:.*:SSL routines:/.
		qr/CONNECT_CR_FINISHED:tlsv1 alert decrypt error/ => 1,
	    get_testgrep() => 1,
	},
    },
    server => {
	listen => { domain => AF_UNSPEC, proto => "tls", addr => "localhost" },
	sslca => "fake-ca.crt",
	up => qr/IO::Socket::SSL socket accept failed/,
	down => qr/SSL accept attempt failed error/,
	exit => 255,
	loggrep => {
	    qr/Server IO::Socket::SSL socket accept failed: /.
		qr/,SSL accept attempt failed error:.*:SSL routines:/.
		qr/ACCEPT_SR_CERT:no certificate returned/ => 1.
	},
    },
);

1;
@


1.4
log
@Adapt regex in syslogd test to the new shiny libssl error messages.
@
text
@d19 1
a19 1
	    qr/syslogd: loghost .* connection error: /.
d21 1
a21 1
		qr/CONNECT_CR_FINISHED:tlsv1 alert decrypt error/ => 2,
@


1.3
log
@The libssl and libcrypto error messages have changed.  Adapt the
regex for the expected output in the log files.
@
text
@d20 2
a21 2
		qr/handshake failed: error:.*:/.
		qr/SSL_internal:tlsv1 alert decrypt error/ => 2,
d33 2
a34 2
		qr/,SSL accept attempt failed error:.*:/.
		qr/SSL_internal:no certificate returned/ => 1.
@


1.2
log
@Test syslogd TLS client certificate validation.
@
text
@d20 2
a21 2
		qr/handshake failed: error:.*/.
		qr/SSL3_READ_BYTES:tlsv1 alert decrypt error/ => 2,
d33 2
a34 2
		qr/,SSL accept attempt failed error:.*/.
		qr/SSL3_GET_CLIENT_CERTIFICATE:no certificate returned/ => 1.
@


1.1
log
@Add regression tests for syslogd TLS client certificates.
@
text
@d27 1
a27 2
	sslverify => 1,
	cacrt => "fake-ca.crt",
@

