head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.4
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2017.04.05.22.32.14;	author bluhm;	state Exp;
branches;
next	1.5;
commitid	7DBpdoIApLnFWBfl;

1.5
date	2016.08.17.12.22.28;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	1BXh6cs0MCCZSxHD;

1.4
date	2015.09.10.18.37.06;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	knbdS9rxp7T1Jmwi;

1.3
date	2015.07.16.16.34.49;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	0M9ba2ikkjyPND6j;

1.2
date	2015.02.09.21.06.35;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	ijXbEt8h29UoWlgz;

1.1
date	2015.01.28.19.23.22;	author bluhm;	state Exp;
branches;
next	;
commitid	6n55AVIuWA7LUOak;


desc
@@


1.6
log
@Syslogd's debug and error messages have changed a bit, adapt test.
@
text
@# The client writes a message to Sys::Syslog native method.
# The syslogd writes it into a file and through a pipe.
# The syslogd passes it via TLS to localhost loghost.
# The cafile is empty.
# Find the message in client, file, pipe, syslogd log.
# Check that syslogd has verify failure and server has no message.

use strict;
use warnings;
use Socket;

our %args = (
    syslogd => {
	loghost => '@@tls://localhost:$connectport',
	loggrep => {
	    qr/CAfile empty/ => 1,
	    qr/Logging to FORWTLS \@@tls:\/\/localhost:\d+/ => '>=4',
	    qr/syslogd\[\d+\]: tls_connect_socket .*: /.
		qr/ssl verify memory setup failure/ => 1,
	    get_testgrep() => 1,
	},
	cacrt => "empty",
    },
    server => {
	listen => { domain => AF_UNSPEC, proto => "tls", addr => "localhost" },
	up => "IO::Socket::SSL socket accept failed",
	down => "Server",
	exit => 255,
	loggrep => {
	    qr/listen sock: (127.0.0.1|::1) \d+/ => 1,
	    qr/SSL accept attempt failed because of handshake problems/ => 1,
	    get_testgrep() => 0,
	},
    },
);

1;
@


1.5
log
@syslogd(8) uses new libtls certificate and key file loading.  So
the tests behave a little bit different now.
@
text
@d18 2
a19 2
	    qr/syslogd: tls_connect_socket .*: /.
		qr/ssl verify memory setup failure/ => 2,
@


1.4
log
@Grep for new error messages about tls_connect_socket.  Libtls now
reports handshake failed.  Make bufsize tests more reliable.
@
text
@d16 1
a16 1
	    qr/CAfile empty, size 0/ => 1,
@


1.3
log
@Test that syslogd does not append white spaces to messages.  Per
default the test pattern is stricter now.  Also do some test cleanup
@
text
@d18 1
a18 1
	    qr/syslogd: loghost .* connection error: /.
@


1.2
log
@Error messages form libtls have changed, adapt syslogd tests.
@
text
@d20 1
a20 1
	    get_testlog() => 1,
d32 1
a32 1
	    get_testlog() => 0,
@


1.1
log
@Test the x509 certificate validation of syslog over TLS.
@
text
@d18 2
a19 1
	    qr/error: ssl verify memory setup failure/ => 2,
@

