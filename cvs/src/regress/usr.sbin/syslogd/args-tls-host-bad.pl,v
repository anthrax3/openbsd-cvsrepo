head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.4.0.10
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.6
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3;
locks; strict;
comment	@# @;


1.5
date	2017.04.05.22.32.14;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	7DBpdoIApLnFWBfl;

1.4
date	2015.07.16.16.34.49;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	0M9ba2ikkjyPND6j;

1.3
date	2015.02.11.21.51.13;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	oVck3lsrH2XH2G1o;

1.2
date	2015.02.09.21.06.35;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	ijXbEt8h29UoWlgz;

1.1
date	2015.01.28.19.23.22;	author bluhm;	state Exp;
branches;
next	;
commitid	6n55AVIuWA7LUOak;


desc
@@


1.5
log
@Syslogd's debug and error messages have changed a bit, adapt test.
@
text
@# The client writes a message to Sys::Syslog native method.
# The syslogd writes it into a file and through a pipe.
# The syslogd passes it via TLS to 127.0.0.1 loghost.
# Server certificate is issued for localhost.
# Find the message in client, file, pipe, syslogd log.
# Check that syslogd denies host `127.0.0.1' and server has no message.

use strict;
use warnings;
use Socket;

our %args = (
    syslogd => {
	loghost => '@@tls://127.0.0.1:$connectport',
	loggrep => {
	    qr/Logging to FORWTLS \@@tls:\/\/127.0.0.1:\d+/ => '>=4',
	    qr/syslogd\[\d+\]: loghost .* connection error: /.
		qr/name `127.0.0.1' not present in server/ => 1,
	    get_testgrep() => 1,
	},
	cacrt => "ca.crt",
    },
    server => {
	listen => { domain => AF_INET, proto => "tls", addr => "127.0.0.1" },
	loggrep => {
	    qr/listen sock: 127.0.0.1 \d+/ => 1,
	    get_testgrep() => 0,
	},
    },
);

1;
@


1.4
log
@Test that syslogd does not append white spaces to messages.  Per
default the test pattern is stricter now.  Also do some test cleanup
@
text
@d17 2
a18 2
	    qr/syslogd: loghost .* connection error: /.
		qr/name `127.0.0.1' not present in server/ => '>=1',
@


1.3
log
@Make syslogd tests more reliable.  Allow a range of certain log
messages, in case some got lost.  Slow down client when sending
multiple log messages.  Sort patterns when checking log files.  TLS
error messages have changed, adapt tests.
@
text
@d19 1
a19 1
	    get_testlog() => 1,
d27 1
a27 1
	    get_testlog() => 0,
@


1.2
log
@Error messages form libtls have changed, adapt syslogd tests.
@
text
@d18 1
a18 1
		qr/host `127.0.0.1' not present in server/ => '>=1',
@


1.1
log
@Test the x509 certificate validation of syslog over TLS.
@
text
@d17 2
a18 1
	    qr/error: host `127.0.0.1' not present in server/ => '>=1',
@

