head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.6
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.8
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3;
locks; strict;
comment	@# @;


1.3
date	2015.10.19.20.16.09;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	kVDnyxLzqDFKPFoO;

1.2
date	2015.09.10.18.37.06;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	knbdS9rxp7T1Jmwi;

1.1
date	2015.09.09.08.48.46;	author bluhm;	state Exp;
branches;
next	;
commitid	bbarh0dLTKPjADRO;


desc
@@


1.3
log
@Test syslogd logging to a tty which belongs to a user.  This is
done with a utmp entry for a pty fake login.  All messages are read
from the pty and written into a log file.
@
text
@# Stop syslogd.
# The client writes 8 message with 8192 to a localhost IPv6 UDP socket.
# Continue syslogd.
# The syslogd writes it into a file and through a pipe.
# The syslogd passes it via TCP to the loghost.
# The server receives the message on its TCP socket.
# Find the message in client, file, syslogd, server log.
# Check that 8 long UDP messages can be processed at once.

use strict;
use warnings;
use Socket;
use constant MAXLINE => 8192;

our %args = (
    client => {
	connect => { domain => AF_INET6, addr => "::1", port => 514 },
	func => sub {
	    my $self = shift;
	    ${$self->{syslogd}}->kill_syslogd('STOP');
	    write_lines($self, 8, MAXLINE);
	    IO::Handle::flush(\*STDOUT);
	    ${$self->{syslogd}}->kill_syslogd('CONT');
	    ${$self->{server}}->loggrep(get_charlog(), 8)
		or die ref($self), " server did not receive all messages";
	    write_shutdown($self);
	},
	loggrep => { get_charlog() => 8 },
    },
    syslogd => {
	options => ["-un"],
	loghost => '@@tcp://localhost:$connectport',
	loggrep => {
	    qr/[gs]etsockopt bufsize/ => 0,
	    get_charlog() => 8,
	},
    },
    server => {
	listen => { domain => AF_UNSPEC, proto => "tcp", addr => "localhost" },
	loggrep => { get_charlog() => 8 },
    },
    file => {
	loggrep => { get_charlog() => 8 },
    },
    pipe => { nocheck => 1 },
    tty => { nocheck => 1 },
);

1;
@


1.2
log
@Grep for new error messages about tls_connect_socket.  Libtls now
reports handshake failed.  Make bufsize tests more reliable.
@
text
@a41 3
    pipe => {
	nocheck => 1,
    },
d45 2
@


1.1
log
@Test that syslogd can process 8 full size messages from sendsyslog(2)
or UDP socket or UNIX domain socket at once.
@
text
@d24 2
a25 2
	    ${$self->{syslogd}}->loggrep(get_charlog(), 8)
		or die ref($self), " syslogd did not receive all messages";
@

