head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2015.10.19.20.16.09;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	kVDnyxLzqDFKPFoO;

1.3
date	2015.08.01.14.55.58;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	mKDhz3mFTSL2PZNi;

1.2
date	2015.07.19.20.18.18;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	3V6wL7hT2XianIlr;

1.1
date	2015.07.07.18.03.11;	author bluhm;	state Exp;
branches;
next	;
commitid	qTzx3B33iQFlT4Uv;


desc
@@


1.4
log
@Test syslogd logging to a tty which belongs to a user.  This is
done with a utmp entry for a pty fake login.  All messages are read
from the pty and written into a log file.
@
text
@# The syslogd listens on 127.0.0.1 TCP socket.
# The client writes three lines into a 127.0.0.1 TCP socket in a single chunk.
# The syslogd writes it into a file and through a pipe.
# The syslogd passes it via UDP to the loghost.
# The server receives the message on its UDP socket.
# Find the message in file, pipe, syslogd, server log.
# Check that the file log contains all messages.

use strict;
use warnings;
use Socket;

my %threegrep = (
    get_firstlog() => 1,
    get_secondlog() => 1,
    get_thirdlog() => 1,
);

our %args = (
    client => {
	connect => { domain => AF_INET, proto => "tcp", addr => "127.0.0.1",
	    port => 514 },
	func => sub {
	    my $self = shift;
	    my $msg = get_firstlog()."\n".get_secondlog()."\n".get_thirdlog();
	    write_message($self, $msg);
	    ${$self->{syslogd}}->loggrep(get_thirdlog(), 5)
		or die ref($self), " syslogd did not receive third log";
	    write_shutdown($self);
	},
	loggrep => {},
    },
    syslogd => {
	options => ["-T", "127.0.0.1:514"],
	loggrep => {
	    %threegrep,
	    qr/tcp logger .* non transparent framing, use \d+ bytes/ => 3,
	},
    },
    server => { loggrep => \%threegrep },
    file => { loggrep => \%threegrep },
    pipe => { loggrep => \%threegrep },
    tty => { loggrep => \%threegrep },
);

1;
@


1.3
log
@Use Socket to make Perl syntax check of single test files pass.
@
text
@d43 1
@


1.2
log
@Test octet counting and non transparent framing.
@
text
@d11 1
@


1.1
log
@Add tests for incomming syslog messages over TCP.
@
text
@d36 1
a36 1
	    qr/tcp logger .* complete line/ => 3,
@

