head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.6
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2016.03.21.23.23.15;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	ICMd7I0he7hx5htW;

1.1
date	2015.12.04.13.49.42;	author bluhm;	state Exp;
branches;
next	;
commitid	Png8GPl0MIbEHtve;


desc
@@


1.2
log
@System call sendsyslog2 is gone, adapt tests.
@
text
@# The client writes a message with sendsyslog syscall.
# The syslogd writes it into a file and through a pipe.
# The syslogd passes it via UDP to the loghost.
# The server receives the message on its UDP socket.
# Find the message in client, file, pipe, syslogd, server log.
# Create a ktrace dump of the client and check that sendsyslog(2)
# has been used.

use strict;
use warnings;

our %args = (
    client => {
	connect => { domain => "sendsyslog" },
	ktrace => {
	    qr/CALL  sendsyslog\(/ => 2,
	    qr/GIO   fd -1 wrote \d+ bytes/ => 2,
	    qr/RET   sendsyslog 0/ => 2,
	},
    },
);

1;
@


1.1
log
@Add tests that call the syscalls sendsyslog(2) and sendsyslog2(2)
directly.
@
text
@d14 1
a14 1
	connect => { domain => "sendsyslog", version => 0 },
d16 1
a16 2
	    qr/CALL  sendsyslog\(/ => 1,
	    qr/CALL  sendsyslog2\(/ => 1,
d18 1
a18 2
	    qr/RET   sendsyslog 0/ => 1,
	    qr/RET   sendsyslog2 0/ => 1,
@

