head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2014.07.13.23.59.57;	author benno;	state Exp;
branches;
next	1.1;
commitid	00QzKfdnlM5irvq9;

1.1
date	2014.07.12.15.47.18;	author benno;	state Exp;
branches;
next	;
commitid	CleGXex2HPb18DZG;


desc
@@


1.2
log
@fix regress tests after log changes. noticed by bluhm@@.
everybody stand back. i know regular expressions.
@
text
@# test appending headers, both directions

use strict;
use warnings;

my %header_client = (
	"X-Header-Client" => "ABC",
);
my %header_server = (
	"X-Header-Server" => "XYZ",
);
our %args = (
    client => {
	func => \&http_client,
	header => \%header_client,
	loggrep => {
	    "X-Header-Server: XYZ" => 1,
	    "X-Header-Server: xyz" => 1,
	},
    },
    relayd => {
	protocol => [ "http",
	    'match request header append "X-Header-Client" value "abc"',
	    'match response header append "X-Header-Server" value "xyz"',
	    'match request header log "X-Header*"',
	    'match response header log "X-Header*"',
	],
	loggrep => { qr/ (?:done|last write \(done\)), \[X-Header-Client: ABC\]\ GET \{X-Header-Server: XYZ\};/ => 1 },
    },
    server => {
	func => \&http_server,
	header => \%header_server,
	loggrep => {
	    "X-Header-Client: ABC" => 1,
	    "X-Header-Client: abc" => 1,
	},
    },
);

1;
@


1.1
log
@fix relay "append header" action, add regression test for append
ok reyk
@
text
@d28 1
a28 1
	loggrep => { qr/ (?:done|last write \(done\)), \[X-Header-Client: ABC\]\ \[X-Header-Server: XYZ\]/ => 1 },
@

