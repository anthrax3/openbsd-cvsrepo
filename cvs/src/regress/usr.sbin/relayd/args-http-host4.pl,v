head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.2
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.07.27.06.55.44;	author reyk;	state Exp;
branches;
next	;
commitid	7JdoxjTbye4XkUae;


desc
@@


1.1
log
@Improve parsing of the Host by following RFC 7230 Section 5.4 more strictly:

- Respond with a 400 (Bad Request) if there is more than one Host:
header to prevent ambiguities.

- Make sure that the host in the optional absolute form of
request-target (eg. GET http://www.target.com/ HTTP/1.1) matches the
Host: value.  Proxies are supposed to ignore the Host: value if the
request-target exists, but relayd used to ignore the absolute
request-target form instead.  In HTTP terminology, relayd is a gateway
and not a proxy, but it has to make sure that the host is validated
consistently.

OK benno@@ bluhm@@
@
text
@use strict;
use warnings;

our %args = (
    client => {
	func => sub {
	    my $self = shift;
	    print <<'EOF';
GET http://www.foo.com/1 HTTP/1.1
Host: www.bar.com

EOF
	    # no http_response($self, 1);
	},
	http_vers => ["1.1"],
	nocheck => 1,
	method => "GET",
    },
    relayd => {
	protocol => [ "http",
	    "match request header log Host",
	    "match request path log \"*\"",
	],
	loggrep => {
	    qr/, malformed host$/ => 1,
	    qr/\[http:\/\/www.foo.com\/1\] GET/ => 0,
	    qr/\[Host: www.bar.com\]/ => 0,
	},
    },
    server => {
	func => \&http_server,
	noserver => 1,
	nocheck => 1,
    }
);

1;
@
