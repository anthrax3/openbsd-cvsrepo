head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.16
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.14
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4;
locks; strict;
comment	@# @;


1.4
date	2014.07.10.19.42.59;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	nk40kclwQAcI5z4r;

1.3
date	2014.07.09.16.48.55;	author reyk;	state Exp;
branches;
next	1.2;
commitid	tyiEIIip8IP7h6pK;

1.2
date	2014.05.09.11.49.26;	author andre;	state Exp;
branches;
next	1.1;

1.1
date	2014.05.02.14.50.26;	author andre;	state Exp;
branches;
next	;


desc
@@


1.4
log
@To make sure that at least anything is tested, add a length check
per default for the default length value in check_logs().  If a
test doesn't want this check, it has to disable it explicitly with
nocheck.  Also remove unneeded nocheck switches for deeper testing.
@
text
@use strict;
use warnings;

our %args = (
    client => {
	func => \&http_client,
	path => "foobar?path",
    },
    relayd => {
	protocol => [ "http",
	    'match request path "/foobar" value "*" tag RING0',
	    'block request',
	    'pass request quick tagged RING0',
	],
	loggrep => { ", RING0,.*done" => 1 },
    },
    server => {
	func => \&http_server,
    },
    len => 12,
);

1;
@


1.3
log
@Update and extend the regress tests to use the new grammar of the
filtering rules.  Some of the filenames are based on the old grammar,
we keep them for now and just update the contents to have a
before/after comparison of the features.

Most of the work was done by Andre de Oliveira (andre@@)

OK bluhm@@ benno@@
@
text
@d20 1
@


1.2
log
@Adds $relayd->{dummyrun} and $client->{noclient} flags to relayd tests
framework. These flags can be set from test file which eases performing
dry-runs of relayd long enough to do relayd.conf parsing, thus enabling the
grammar/parser-only tests.  While here, fix and improves args-http-mark.pl to a
correct use-case.

ok reyk
@
text
@d11 3
a13 2
	    'request path mark "*" from "/foobar" with 55',
	    'request header append "bar" to "foo" marked 55',
d15 1
a15 1
	loggrep => { ", 55,.*done" => 1 },
a18 1
	loggrep => { "foo: bar" => 1 },
@


1.1
log
@Add regression tests to relayd to cover a few key types/actions combinations.

ok reyk
@
text
@d12 1
a12 1
	    'request path change "path" to "foobarchangedpath" marked 55',
d18 1
@

