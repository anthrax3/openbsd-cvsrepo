head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.12
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.14
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5;
locks; strict;
comment	@# @;


1.5
date	2014.07.10.19.42.59;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	nk40kclwQAcI5z4r;

1.4
date	2014.07.09.16.48.55;	author reyk;	state Exp;
branches;
next	1.3;
commitid	tyiEIIip8IP7h6pK;

1.3
date	2014.06.22.14.18.01;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	9lcQYgJu0eGKsg3G;

1.2
date	2014.05.12.21.30.42;	author andre;	state Exp;
branches;
next	1.1;

1.1
date	2014.05.09.11.53.28;	author andre;	state Exp;
branches;
next	;


desc
@@


1.5
log
@To make sure that at least anything is tested, add a length check
per default for the default length value in check_logs().  If a
test doesn't want this check, it has to disable it explicitly with
nocheck.  Also remove unneeded nocheck switches for deeper testing.
@
text
@use strict;
use warnings;

our %args = (
    client => {
	func => \&http_client,
	len => 33,
    },
    relayd => {
	protocol => [ "http",
	    'match request path "/3*" value "*" tag RING0',
	    'match request tagged RING0 tag RINGX',
	],
	loggrep => { ", RINGX,.*done" => 1 },
    },
    server => {
	func => \&http_server,
    },
    len => 33,
);

1;
@


1.4
log
@Update and extend the regress tests to use the new grammar of the
filtering rules.  Some of the filenames are based on the old grammar,
we keep them for now and just update the contents to have a
before/after comparison of the features.

Most of the work was done by Andre de Oliveira (andre@@)

OK bluhm@@ benno@@
@
text
@d19 1
@


1.3
log
@Fix the relayd regression tests.  Now they pass with and without
an obj directory.  The relayd process can also run on a remote
machine for different timing.
@
text
@d6 2
a7 2
	noclient => 1,
	nocheck => 1,
d11 2
a12 1
	    'request path mark "*" with 99 marked 55',
d14 1
a14 2
	loggrep => { "either mark or marked" => 1 },
	dryrun => "relayd.conf:4: either mark or marked",
d17 1
a17 2
	noserver => 1,
	nocheck => 1,
@


1.2
log
@Refactors "dummyrun" flag as "dryrun" with an approach similar to the one used
for client/server processes checks through $self->{down} state control
variable, while here, do not instantiate a client when noclient is defined,
reflecting server object instantiation behaviour.

ok bluhm
@
text
@d14 1
a14 1
	dryrun => "relayd.conf",
@


1.1
log
@Adds a couple tests for relayd parser, specially recent modifications reyk@@ did
to the grammar.

ok reyk
@
text
@d14 1
a14 1
	dummyrun => 1,
@

