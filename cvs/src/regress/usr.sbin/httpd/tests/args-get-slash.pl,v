head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.0.6
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.2
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.07.14.13.31.44;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	ypkKxkYa6bEGRi40;

1.2
date	2016.09.01.14.44.39;	author reyk;	state Exp;
branches;
next	1.1;
commitid	HryexZ0m69DcyWIY;

1.1
date	2015.07.16.16.35.57;	author reyk;	state Exp;
branches;
next	;
commitid	U71O9DhbbekfmB5Z;


desc
@@


1.3
log
@Do not mix Perl read() with sysread().  Data could get stuck in the
buffered IO and test run-regress-args-get-1073741824.pl would fail
on slow hardware.  Introduce a common function read_part() that
uses Perl read().  Limit debug output to one line per 1% of data.
Remove unused function http_server().  Fix whitespace.  Cleanup
Makefile.
@
text
@use strict;
use warnings;

our %args = (
    client => {
	func => sub {
	    my $self = shift;
	    print "GET /\r\n\r\n";
	},
	nocheck => 1
    },
    httpd => {
	loggrep => {
	    qr/"GET \/" 400 0/ => 1,
	},
    },
);

1;

@


1.2
log
@Fix regress test, server returns 400 instead of 500 now
@
text
@d10 1
a10 1
        nocheck => 1
@


1.1
log
@Add httpd regression tests based on bluhm's regression suite for
relayd - "bluhm test".  This is just the initial version, more tests
and changes will be done.

As discussed with bluhm@@ florian@@
@
text
@d14 1
a14 1
	    qr/"GET \/" 500 0/ => 1,
@

