head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.48
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.46
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.36
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.44
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.42
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.40
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.38
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.34
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.32
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.30
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.28
	OPENBSD_5_0:1.1.0.26
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.24
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.22
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.18
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.20
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.16
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.14
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.12
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.10
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2005.07.20.15.33.50;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@minitar script to test OpenBSD::Ustar, should be able to read/write archives
fully compatible with the tar Ustar format.
@
text
@#! /usr/bin/perl
#
# ex:ts=8 sw=4:
# $OpenBSD$
#
# Copyright (c) 2005 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use OpenBSD::Ustar;
use strict;

my $mode = shift;
my $arcname;
my ($what, $verbose);

sub create
{
	my $arcname = shift;
	open my $out, '>', $arcname or die "bad archive $arcname: $!\n";
	my $arc = OpenBSD::Ustar->new($out, '.');
	for my $f (@@_) {
		my $e = $arc->prepare($f);
		$e->write();
	}
	$arc->close();
}

sub extract
{
	my $arcname = shift;
	open my $in, '<', $arcname or die "bad archive $arcname: $!\n";
	my $arc = OpenBSD::Ustar->new($in);
	while (my $e = $arc->next()) {
		$e->create();
	}
	$arc->close();
}

sub test
{
	my $arcname = shift;
	open my $in, '<', $arcname or die "bad archive $arcname: $!\n";
	my $arc = OpenBSD::Ustar->new($in);
	while (my $e = $arc->next()) {
		print $e->{name}, "\n";
	}
	$arc->close();
}

if ($mode =~ s/c//) {
	$what = \&create;
} elsif ($mode =~ s/t//) {
	$what = \&test;
} elsif ($mode =~ s/x//) {
	$what = \&extract;
}
if ($mode =~ s/f//) {
	$arcname = shift;
}
if ($mode =~ s/v//) {
	$verbose = 1;
}

if ($mode ne '') {
	die "Bad mode\n";
}

if (!defined $what) {
	die "Bad mode\n";
}

&$what($arcname, @@ARGV);
@
