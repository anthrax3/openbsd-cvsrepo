head	1.12;
access;
symbols
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.34
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.32
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.30
	OPENBSD_5_0:1.10.0.28
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.26
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.24
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.20
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.22
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.18
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.16
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.14
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.12
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.10
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.8
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6;
locks; strict;
comment	@ * @;


1.12
date	2014.04.22.10.01.15;	author reyk;	state dead;
branches;
next	1.11;

1.11
date	2013.06.17.18.57.39;	author robert;	state Exp;
branches;
next	1.10;

1.10
date	2004.10.29.16.25.42;	author biorn;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.12.00.00.38;	author hin;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.30.20.06.23;	author hin;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.06.09.12.30;	author hin;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.29.17.45.40;	author jakob;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.11.09.36.05;	author hin;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.27.15.22.42;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.27.06.20.46;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.22.15.57.36;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.25.08.17.54;	author hin;	state Exp;
branches;
next	;


desc
@@


1.12
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@/* This is an OS dependent, generated file */


#ifndef __ROKEN_H__
#define __ROKEN_H__

/* -*- C -*- */
/*
 * Copyright (c) 1995-2005 Kungliga Tekniska HÃ¶gskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <stdint.h>
#include <string.h>
#include <signal.h>

#define ROKEN_LIB_FUNCTION
#define ROKEN_LIB_CALL
#define ROKEN_LIB_VARIABLE


typedef int rk_socket_t;

#define rk_closesocket(x) close(x)
#define rk_SOCK_IOCTL(s,c,a) ioctl((s),(c),(a))
#define rk_IS_BAD_SOCKET(s) ((s) < 0)
#define rk_IS_SOCKET_ERROR(rv) ((rv) < 0)
#define rk_SOCK_ERRNO errno
#define rk_INVALID_SOCKET (-1)

#define rk_SOCK_INIT() 0
#define rk_SOCK_EXIT() do { } while(0)


#define IN_LOOPBACKNET 127


#define UNREACHABLE(x)
#define UNUSED_ARGUMENT(x)


#include <sys/param.h>
#include <inttypes.h>
#include <sys/types.h>
#include <unistd.h>
#include <sys/socket.h>
#include <sys/uio.h>
#include <grp.h>
#include <sys/stat.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <arpa/nameser.h>
#include <resolv.h>
#include <syslog.h>
#include <fcntl.h>
#include <errno.h>
#include <err.h>
#include <termios.h>
#include <sys/ioctl.h>
#include <sys/time.h>
#include <time.h>

#include <paths.h>

#include <dirent.h>



#include <roken-common.h>

ROKEN_CPP_START

#define rk_UNCONST(x) ((void *)(uintptr_t)(const void *)(x))












#define asnprintf rk_asnprintf
ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
    rk_asnprintf (char **, size_t, const char *, ...)
     __attribute__ ((format (printf, 3, 4)));

#define vasnprintf rk_vasnprintf
ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
    vasnprintf (char **, size_t, const char *, va_list)
     __attribute__((format (printf, 3, 0)));



#define strlwr rk_strlwr
ROKEN_LIB_FUNCTION char * ROKEN_LIB_CALL strlwr(char *);



#define strsep_copy rk_strsep_copy
ROKEN_LIB_FUNCTION ssize_t ROKEN_LIB_CALL strsep_copy(const char**, const char*, char*, size_t);




#define strupr rk_strupr
ROKEN_LIB_FUNCTION char * ROKEN_LIB_CALL strupr(char *);





#define rk_strerror_r strerror_r







#include <pwd.h>
ROKEN_LIB_FUNCTION struct passwd * ROKEN_LIB_CALL k_getpwnam (const char *);
ROKEN_LIB_FUNCTION struct passwd * ROKEN_LIB_CALL k_getpwuid (uid_t);

ROKEN_LIB_FUNCTION const char * ROKEN_LIB_CALL get_default_username (void);








#define rk_rename(__rk_rn_from,__rk_rn_to) rename(__rk_rn_from,__rk_rn_to)

ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL daemon(int, int);









#define bswap32 rk_bswap32
ROKEN_LIB_FUNCTION unsigned int ROKEN_LIB_CALL bswap32(unsigned int);

#define bswap16 rk_bswap16
ROKEN_LIB_FUNCTION unsigned short ROKEN_LIB_CALL bswap16(unsigned short);



ROKEN_LIB_FUNCTION time_t ROKEN_LIB_CALL tm2time (struct tm, int);

ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL unix_verify_user(char *, char *);

ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL roken_concat (char *, size_t, ...);

ROKEN_LIB_FUNCTION size_t ROKEN_LIB_CALL roken_mconcat (char **, size_t, ...);

ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL roken_vconcat (char *, size_t, va_list);

ROKEN_LIB_FUNCTION size_t ROKEN_LIB_CALL
    roken_vmconcat (char **, size_t, va_list);

ROKEN_LIB_FUNCTION ssize_t ROKEN_LIB_CALL
    net_write (rk_socket_t, const void *, size_t);

ROKEN_LIB_FUNCTION ssize_t ROKEN_LIB_CALL
    net_read (rk_socket_t, void *, size_t);

ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
    issuid(void);


ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL get_window_size(int fd, int *, int *);




#define getipnodebyname rk_getipnodebyname
ROKEN_LIB_FUNCTION struct hostent * ROKEN_LIB_CALL
getipnodebyname (const char *, int, int, int *);

#define getipnodebyaddr rk_getipnodebyaddr
ROKEN_LIB_FUNCTION struct hostent * ROKEN_LIB_CALL
getipnodebyaddr (const void *, size_t, int, int *);

#define freehostent rk_freehostent
ROKEN_LIB_FUNCTION void ROKEN_LIB_CALL
freehostent (struct hostent *);

#define copyhostent rk_copyhostent
ROKEN_LIB_FUNCTION struct hostent * ROKEN_LIB_CALL
copyhostent (const struct hostent *);









ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
getnameinfo_verified(const struct sockaddr *, socklen_t,
		     char *, size_t,
		     char *, size_t,
		     int);

ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
roken_getaddrinfo_hostspec(const char *, int, struct addrinfo **); 
ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
roken_getaddrinfo_hostspec2(const char *, int, int, struct addrinfo **);




#define emalloc rk_emalloc
ROKEN_LIB_FUNCTION void * ROKEN_LIB_CALL emalloc (size_t);
#define ecalloc rk_ecalloc
ROKEN_LIB_FUNCTION void * ROKEN_LIB_CALL ecalloc(size_t, size_t);
#define erealloc rk_erealloc
ROKEN_LIB_FUNCTION void * ROKEN_LIB_CALL erealloc (void *, size_t);
#define estrdup rk_estrdup
ROKEN_LIB_FUNCTION char * ROKEN_LIB_CALL estrdup (const char *);

/*
 * kludges and such
 */

ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
roken_gethostby_setup(const char*, const char*);
ROKEN_LIB_FUNCTION struct hostent* ROKEN_LIB_CALL
roken_gethostbyname(const char*);
ROKEN_LIB_FUNCTION struct hostent* ROKEN_LIB_CALL 
roken_gethostbyaddr(const void*, size_t, int);

#define roken_getservbyname(x,y) getservbyname(x,y)

#define roken_openlog(a,b,c) openlog(a,b,c)

#define roken_getsockname(a,b,c) getsockname(a,b,c)




ROKEN_LIB_FUNCTION void ROKEN_LIB_CALL
mini_inetd_addrinfo (struct addrinfo*, rk_socket_t *);

ROKEN_LIB_FUNCTION void ROKEN_LIB_CALL
mini_inetd (int, rk_socket_t *);


#define strsvis rk_strsvis
ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
strsvis(char *, const char *, int, const char *);

#define strsvisx rk_strsvisx
ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
strsvisx(char *, const char *, size_t, int, const char *);


ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
strvis(char *, const char *, int);

ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
strvisx(char *, const char *, size_t, int);

#define svis rk_svis
ROKEN_LIB_FUNCTION char * ROKEN_LIB_CALL
svis(char *, int, int, int, const char *);

ROKEN_LIB_FUNCTION int ROKEN_LIB_CALL
unvis(char *, int, int *, int);

#define vis rk_vis
ROKEN_LIB_FUNCTION char * ROKEN_LIB_CALL
vis(char *, int, int, int);




#define rk_random() arc4random()




ROKEN_CPP_END

#endif /* __ROKEN_H__ */
@


1.11
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@@


1.10
log
@Merge with heimdal-0.6.3 Tested by beck@@, msf@@, me and others. ok beck@@
@
text
@d9 1
a9 1
 * Copyright (c) 1995 - 2001 Kungliga Tekniska Högskolan
a40 3
/* $KTH: roken.h.in,v 1.159 2001/08/21 15:32:05 assar Exp $ */
/* $Id: roken.h,v 1.9 2003/05/12 00:00:38 hin Exp $ */

d44 1
d48 25
d84 2
d97 2
a99 1
#define ROKEN_LIB_FUNCTION
d105 2
d116 5
a120 1
int asnprintf (char **ret, size_t max_sz, const char *format, ...)
d123 3
a125 1
int vasnprintf (char **ret, size_t max_sz, const char *format, va_list ap)
a128 1
char * strndup(const char *old, size_t sz);
d130 2
a131 1
char * strlwr(char *);
a132 1
size_t strnlen(const char*, size_t);
d135 2
a136 1
ssize_t strsep_copy(const char**, const char*, char*, size_t);
d141 2
a142 1
char * strupr(char *);
d148 2
d157 4
a160 2
struct passwd *k_getpwnam (const char *user);
struct passwd *k_getpwuid (uid_t uid);
a161 1
const char *get_default_username (void);
d169 1
d171 1
d181 2
d184 2
a186 2
#define bswap32 swap32
#define bswap16 swap16
d189 1
a189 1
time_t tm2time (struct tm tm, int local);
d191 1
a191 1
int unix_verify_user(char *user, char *password);
d193 1
a193 1
void mini_inetd (int port);
d195 1
a195 1
int roken_concat (char *s, size_t len, ...);
d197 1
a197 1
size_t roken_mconcat (char **s, size_t max_len, ...);
d199 2
a200 1
int roken_vconcat (char *s, size_t len, va_list args);
d202 2
a203 1
size_t roken_vmconcat (char **s, size_t max_len, va_list args);
d205 2
a206 1
ssize_t net_write (int fd, const void *buf, size_t nbytes);
d208 2
a209 1
ssize_t net_read (int fd, void *buf, size_t nbytes);
a210 1
int issuid(void);
d212 1
a213 1
int get_window_size(int fd, struct winsize *);
d217 3
a219 1
extern char **environ;
d221 3
a223 2
struct hostent *
getipnodebyname (const char *name, int af, int flags, int *error_num);
d225 3
a227 2
struct hostent *
getipnodebyaddr (const void *src, size_t len, int af, int *error_num);
d229 3
a231 2
void
freehostent (struct hostent *h);
a232 2
struct hostent *
copyhostent (const struct hostent *h);
d241 5
a245 5
int
getnameinfo_verified(const struct sockaddr *sa, socklen_t salen,
		     char *host, size_t hostlen,
		     char *serv, size_t servlen,
		     int flags);
d247 4
a250 2
int roken_getaddrinfo_hostspec(const char *, int, struct addrinfo **); 
int roken_getaddrinfo_hostspec2(const char *, int, int, struct addrinfo **);
d254 9
a262 4
void *emalloc (size_t);
void *ecalloc(size_t num, size_t sz);
void *erealloc (void *, size_t);
char *estrdup (const char *);
d268 6
a273 3
int roken_gethostby_setup(const char*, const char*);
struct hostent* roken_gethostbyname(const char*);
struct hostent* roken_gethostbyaddr(const void*, size_t, int);
a280 1
void setprogname(const char *argv0);
a281 1
const char *getprogname(void);
d283 41
a323 2
void set_progname(char *argv0);
const char *get_progname(void);
a325 1
#define ROKEN_VERSION 0.6.3
@


1.9
log
@Update version number
@
text
@d42 1
a42 1
/* $Id: roken.h,v 1.8 2002/05/30 20:06:23 hin Exp $ */
d231 1
a231 1
#define ROKEN_VERSION 0.6RC1
@


1.8
log
@First pass of get/setprogname() cleanup. Much more to come later.

ok deraadt@@, pval@@
@
text
@d42 1
a42 1
/* $Id: roken.h,v 1.7 2002/02/06 09:12:30 hin Exp $ */
d231 1
a231 1
#define ROKEN_VERSION 0.4e
@


1.7
log
@Merge heimdal-0.4e
@
text
@d42 1
a42 1
/* $Id: roken.h,v 1.6 2001/09/29 17:45:40 jakob Exp $ */
a170 2

extern const char *__progname;
@


1.6
log
@we now have pidfile(3) in libutil
@
text
@d41 2
a42 1
/* $Id: roken.h,v 1.5 2001/07/11 09:36:05 hin Exp $ */
d51 1
d77 1
d206 5
d232 2
a233 1
#define ROKEN_VERSION 0.3e
@


1.5
log
@Use our swap16 and swap32 instead of the ones in libroken.
@
text
@d41 1
a41 1
/* $Id: roken.h,v 1.4 2001/06/27 15:22:42 hin Exp $ */
a138 1
void pidfile (const char*);
@


1.4
log
@-Wall
@
text
@d41 1
a41 1
/* $Id: roken.h,v 1.3 2001/06/27 06:20:46 hin Exp $ */
d141 2
a142 3
unsigned int bswap32(unsigned int);

unsigned short bswap16(unsigned short);
@


1.3
log
@Add prototype for getprogname() and setprogname()
@
text
@d41 1
a41 1
/* $Id: roken.h,v 1.2 2001/06/22 15:57:36 hin Exp $ */
d138 6
@


1.2
log
@Fix roken_getsockname with a #define
@
text
@d41 1
a41 1
/* $Id: roken.h,v 1.1 2001/05/25 08:17:54 hin Exp $ */
d212 4
@


1.1
log
@Include stuff needed for Heimdal.
@
text
@d9 1
a9 1
 * Copyright (c) 1995 - 2000 Kungliga Tekniska Högskolan
d41 1
a41 1
/* $Id: roken.h,v 1.1 2000/08/01 17:45:19 hin Exp $ */
d211 2
d216 1
a216 1
#define ROKEN_VERSION 0.3a
@

