head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5;
locks; strict;
comment	@# @;


1.6
date	2014.04.22.10.01.15;	author reyk;	state dead;
branches;
next	1.5;

1.5
date	2013.07.02.19.00.09;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2013.06.21.12.26.03;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2013.06.21.10.59.40;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2013.06.19.19.36.42;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2013.06.17.19.11.35;	author robert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@# $OpenBSD: Makefile,v 1.5 2013/07/02 19:00:09 ajacoutot Exp $

LIB=	asn1
INCS=	asn1_err.h asn1-common.h heim_asn1.h der.h der-protos.h der-private.h

SRCS=	asn1_err.c \
	asn1_err.h \
	der.c \
	der_copy.c \
	der_cmp.c \
	der_free.c \
	der_format.c \
	der_get.c \
	der_length.c \
	der_put.c \
	extra.c \
	template.c \
	timegm.c \
	roken.h \
	${GEN:S/.x$/.c/:S/.hx$/.h/}

CPPFLAGS=	-I${KRB5DIR}/lib/asn1 -I${KRB5DIR}/lib/roken -I${KRB5DIR}/lib/com_err -I.

GEN_RFC2459=	asn1_rfc2459_asn1.x rfc2459_asn1.hx rfc2459_asn1-priv.hx
GEN_CMS= 	asn1_cms_asn1.x cms_asn1.hx cms_asn1-priv.hx
GEN_K5=		asn1_krb5_asn1.x krb5_asn1.hx krb5_asn1-priv.hx
GEN_DIGEST=	asn1_digest_asn1.x digest_asn1.hx digest_asn1-priv.hx

GEN+=	${GEN_RFC2459}
GEN+=	${GEN_CMS}
GEN+=	${GEN_K5}
GEN+=	${GEN_DIGEST}

CLEANFILES= ${GEN} ${GEN:S/.x$/.c/:S/.hx$/.h/} *_asn1_files

INCS+=	krb5_asn1.h \
	cms_asn1.h \
	rfc2459_asn1.h \
	digest_asn1.h

${GEN_CMS}: cms.asn1 cms.opt
	${ASN1_COMPILE} --one-code-file \
		--option-file=${.ALLSRC:M*.opt} ${.ALLSRC:M*.asn1} cms_asn1

${GEN_RFC2459}: rfc2459.asn1
	${ASN1_COMPILE} \
		--one-code-file \
		--preserve-binary=TBSCertificate \
		--preserve-binary=TBSCRLCertList \
		--preserve-binary=Name \
		--sequence=GeneralNames \
		--sequence=Extensions \
		--sequence=CRLDistributionPoints ${.ALLSRC:M*.asn1} rfc2459_asn1

${GEN_K5}: krb5.asn1 krb5.opt
	${ASN1_COMPILE} \
		--one-code-file \
		--option-file=${.ALLSRC:M*.opt} \
		${.ALLSRC:M*.asn1} krb5_asn1

${GEN_DIGEST}: digest.asn1
	${ASN1_COMPILE} --one-code-file \
		${.ALLSRC:M*.asn1} digest_asn1

.SUFFIXES: .h .c .x .hx

.x.c:
	cmp -s ${.IMPSRC} ${.TARGET} 2> /dev/null || cp ${.IMPSRC} ${.TARGET}

.hx.h:
	cmp -s ${.IMPSRC} ${.TARGET} 2> /dev/null || cp ${.IMPSRC} ${.TARGET}

.include <bsd.lib.mk>

.SUFFIXES: .h .c .x .hx

.PATH: ${KRB5DIR}/lib/asn1 ${KRB5DIR}/include ${.CURDIR}/../../include
@


1.5
log
@Most CFLAGS should be CPPFLAGS, so fix that.
Remove non existent LDAP* variables.

ok robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/06/21 12:26:03 ajacoutot Exp $
@


1.4
log
@digest.c is needed for some operations with the kdc(8).

ok robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/06/21 10:59:40 ajacoutot Exp $
d22 1
a22 1
CFLAGS+=-I${KRB5DIR}/lib/asn1 -I${KRB5DIR}/lib/roken -I${KRB5DIR}/lib/com_err -I.
@


1.3
log
@Remove some useless FreeBSD-specific variables.

ok robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/06/19 19:36:42 robert Exp $
d27 1
d32 1
d38 2
a39 1
	rfc2459_asn1.h
d60 4
@


1.2
log
@start un-bloating kerberos by removing support for hx509, pthreads, spnego,
ntlm, pkinit
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2013/06/17 19:11:35 robert Exp $
a4 2

VERSION_MAP=	${.CURDIR}/version.map
@


1.1
log
@2nd part of:
update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.
@
text
@d1 1
a1 1
# $OpenBSD$
a3 1
LDFLAGS=	-Wl,--no-undefined
a28 6
GEN_PKINIT= 	asn1_pkinit_asn1.x pkinit_asn1.hx pkinit_asn1-priv.hx
GEN_PKCS8=	asn1_pkcs8_asn1.x pkcs8_asn1.hx pkcs8_asn1-priv.hx
GEN_PKCS9=	asn1_pkcs9_asn1.x pkcs9_asn1.hx pkcs9_asn1-priv.hx
GEN_PKCS12=	asn1_pkcs12_asn1.x pkcs12_asn1.hx pkcs12_asn1-priv.hx
GEN_DIGEST=	asn1_digest_asn1.x digest_asn1.hx digest_asn1-priv.hx
GEN_KX509=	asn1_kx509_asn1.x kx509_asn1.hx kx509_asn1-priv.hx
a32 6
GEN+=	${GEN_PKINIT}
GEN+=	${GEN_PKCS8}
GEN+=	${GEN_PKCS9}
GEN+=	${GEN_PKCS12}
GEN+=	${GEN_DIGEST}
GEN+=	${GEN_KX509}
a36 1
	pkinit_asn1.h \
d38 1
a38 6
	rfc2459_asn1.h \
	pkcs8_asn1.h \
	pkcs9_asn1.h \
	pkcs12_asn1.h \
	digest_asn1.h \
	kx509_asn1.h
a58 24

${GEN_PKINIT}: pkinit.asn1
	${ASN1_COMPILE} --one-code-file \
		${.ALLSRC:M*.asn1} pkinit_asn1

${GEN_PKCS8}: pkcs8.asn1
	${ASN1_COMPILE} --one-code-file \
		${.ALLSRC:M*.asn1} pkcs8_asn1

${GEN_PKCS9}: pkcs9.asn1
	${ASN1_COMPILE} --one-code-file \
		${.ALLSRC:M*.asn1} pkcs9_asn1

${GEN_PKCS12}: pkcs12.asn1
	${ASN1_COMPILE} --one-code-file \
		${.ALLSRC:M*.asn1} pkcs12_asn1

${GEN_DIGEST}: digest.asn1
	${ASN1_COMPILE} --one-code-file \
		${.ALLSRC:M*.asn1} digest_asn1

${GEN_KX509}: kx509.asn1
	${ASN1_COMPILE} --one-code-file \
		${.ALLSRC:M*.asn1} kx509_asn1
@

