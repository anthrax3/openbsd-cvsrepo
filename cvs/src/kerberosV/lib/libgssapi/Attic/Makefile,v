head	1.10;
access;
symbols
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8;
locks; strict;
comment	@# @;


1.10
date	2014.04.22.10.01.15;	author reyk;	state dead;
branches;
next	1.9;

1.9
date	2013.11.02.14.15.07;	author ajacoutot;	state Exp;
branches;
next	1.8;

1.8
date	2013.07.02.19.00.09;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2013.07.01.05.15.23;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2013.06.21.09.39.50;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.19.19.36.43;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2013.06.17.21.47.19;	author robert;	state Exp;
branches;
next	1.3;

1.3
date	2013.06.17.21.27.16;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2013.06.17.21.14.19;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2013.06.17.19.11.35;	author robert;	state Exp;
branches;
next	;


desc
@@


1.10
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@# $OpenBSD: Makefile,v 1.9 2013/11/02 14:15:07 ajacoutot Exp $

LIB=	gssapi

GEN_GSSAPI=	asn1_GSSAPIContextToken.x gssapi_asn1-priv.hx gssapi_asn1.hx

GEN_SPNEGO=	asn1_ContextFlags.x asn1_MechType.x asn1_MechTypeList.x asn1_NegHints.x \
		asn1_NegTokenInit.x asn1_NegTokenInitWin.x asn1_NegTokenResp.x asn1_NegotiationToken.x \
		asn1_NegotiationTokenWin.x spnego_asn1-priv.hx spnego_asn1.hx

GEN=	${GEN_GSSAPI} ${GEN_SPNEGO}

GGEN=	asn1_ContextFlags.x		\
	asn1_GSSAPIContextToken.x	\
	asn1_MechType.x			\
	asn1_MechTypeList.x		\
	asn1_NegotiationToken.x		\
	asn1_NegotiationTokenWin.x	\
	asn1_NegHints.x			\
	asn1_NegTokenInit.x		\
	asn1_NegTokenInitWin.x		\
	asn1_NegTokenResp.x		\

krb5src= \
	krb5/8003.c \
	krb5/accept_sec_context.c \
	krb5/acquire_cred.c \
	krb5/add_cred.c \
	krb5/address_to_krb5addr.c \
	krb5/aeap.c \
	krb5/arcfour.c \
	krb5/authorize_localname.c \
	krb5/canonicalize_name.c \
	krb5/creds.c \
	krb5/ccache_name.c \
	krb5/cfx.c \
	krb5/compare_name.c \
	krb5/compat.c \
	krb5/context_time.c \
	krb5/copy_ccache.c \
	krb5/decapsulate.c \
	krb5/delete_sec_context.c \
	krb5/display_name.c \
	krb5/display_status.c \
	krb5/duplicate_name.c \
	krb5/encapsulate.c \
	krb5/export_name.c \
	krb5/export_sec_context.c \
	krb5/external.c \
	krb5/get_mic.c \
	krb5/import_name.c \
	krb5/import_sec_context.c \
	krb5/indicate_mechs.c \
	krb5/init.c \
	krb5/init_sec_context.c \
	krb5/inquire_context.c \
	krb5/inquire_cred.c \
	krb5/inquire_cred_by_mech.c \
	krb5/inquire_cred_by_oid.c \
	krb5/inquire_mechs_for_name.c \
	krb5/inquire_names_for_mech.c \
	krb5/inquire_sec_context_by_oid.c \
	krb5/pname_to_uid.c \
	krb5/process_context_token.c \
	krb5/prf.c \
	krb5/release_buffer.c \
	krb5/release_cred.c \
	krb5/release_name.c \
	krb5/sequence.c \
	krb5/store_cred.c \
	krb5/set_cred_option.c \
	krb5/set_sec_context_option.c \
	krb5/ticket_flags.c \
	krb5/unwrap.c \
	krb5/verify_mic.c \
	krb5/wrap.c

mechsrc = \
	mech/context.c \
	mech/doxygen.c \
	mech/gss_accept_sec_context.c \
	mech/gss_acquire_cred.c \
	mech/gss_acquire_cred_ext.c \
	mech/gss_acquire_cred_with_password.c \
	mech/gss_add_cred.c \
	mech/gss_add_oid_set_member.c \
	mech/gss_authorize_localname.c \
	mech/gss_aeap.c \
	mech/gss_buffer_set.c \
	mech/gss_canonicalize_name.c \
	mech/gss_compare_name.c \
	mech/gss_context_time.c \
	mech/gss_create_empty_oid_set.c \
	mech/gss_cred.c \
	mech/gss_decapsulate_token.c \
	mech/gss_delete_name_attribute.c \
	mech/gss_delete_sec_context.c \
	mech/gss_display_name.c \
	mech/gss_display_name_ext.c \
	mech/gss_display_status.c \
	mech/gss_duplicate_name.c \
	mech/gss_duplicate_oid.c \
	mech/gss_encapsulate_token.c \
	mech/gss_export_name.c \
	mech/gss_export_name_composite.c \
	mech/gss_export_sec_context.c \
	mech/gss_get_mic.c \
	mech/gss_get_name_attribute.c \
	mech/gss_import_name.c \
	mech/gss_import_sec_context.c \
	mech/gss_indicate_mechs.c \
	mech/gss_init_sec_context.c \
	mech/gss_inquire_context.c \
	mech/gss_inquire_cred.c \
	mech/gss_inquire_cred_by_mech.c \
	mech/gss_inquire_cred_by_oid.c \
	mech/gss_inquire_mechs_for_name.c \
	mech/gss_inquire_name.c \
	mech/gss_inquire_names_for_mech.c \
	mech/gss_krb5.c \
	mech/gss_mech_switch.c \
	mech/gss_mo.c \
	mech/gss_names.c \
	mech/gss_oid.c \
	mech/gss_oid_equal.c \
	mech/gss_oid_to_str.c \
	mech/gss_pname_to_uid.c \
	mech/gss_process_context_token.c \
	mech/gss_pseudo_random.c \
	mech/gss_release_buffer.c \
	mech/gss_release_cred.c \
	mech/gss_release_name.c \
	mech/gss_release_oid.c \
	mech/gss_release_oid_set.c \
	mech/gss_seal.c \
	mech/gss_set_cred_option.c \
	mech/gss_set_name_attribute.c \
	mech/gss_set_sec_context_option.c \
	mech/gss_sign.c \
	mech/gss_store_cred.c \
	mech/gss_test_oid_set_member.c \
	mech/gss_unseal.c \
	mech/gss_unwrap.c \
	mech/gss_utils.c \
	mech/gss_verify.c \
	mech/gss_verify_mic.c \
	mech/gss_wrap.c \
	mech/gss_wrap_size_limit.c \
	mech/gss_inquire_sec_context_by_oid.c

spnegosrc = \
	spnego/accept_sec_context.c \
	spnego/compat.c \
	spnego/context_stubs.c \
	spnego/cred_stubs.c \
	spnego/external.c \
	spnego/init_sec_context.c

KRB5SRC=	${krb5src:S@@/@@__@@}
MECHSRC=	${mechsrc:S@@/@@__@@}
SPNEGOSRC=	${spnegosrc:S@@/@@__@@}


SRCS=	${KRB5SRC} \
	${MECHSRC} \
	${SPNEGOSRC} \
	gkrb5_err.c \
	gkrb5_err.h \
	${GEN:S/.x$/.c/:S/.hx$/.h/}

INCS=		gssapi.h

OIDINCS=	gssapi_oid.h
OIDINCSDIR=	${INCLUDEDIR}/gssapi

KRB5INCS=	gssapi.h gssapi_krb5.h
KRB5INCSDIR=	${INCLUDEDIR}/gssapi

SPNEGOINCS=	gssapi_spnego.h
SPNEGOINCSDIR=	${INCLUDEDIR}/gssapi

INCSGROUPS=	INCS OIDINCS KRB5INCS SPNEGOINCS

GEN+=		gssapi_asn1.hx \
		gssapi_asn1-priv.hx \
		spnego_asn1.hx \
		spnego_asn1-priv.hx

MPAGES=		gssapi.3 \
		gss_acquire_cred.3 \
		mech.5

MSRC=		${KRB5DIR}/lib/gssapi \
		${KRB5DIR}/lib/gssapi/mech

MLINKS= \
		gss_acquire_cred.3	gss_accept_sec_context.3	\
		gss_acquire_cred.3	gss_add_cred.3			\
		gss_acquire_cred.3	gss_add_oid_set_member.3	\
		gss_acquire_cred.3	gss_canonicalize_name.3		\
		gss_acquire_cred.3	gss_compare_name.3		\
		gss_acquire_cred.3	gss_context_time.3		\
		gss_acquire_cred.3	gss_create_empty_oid_set.3	\
		gss_acquire_cred.3	gss_delete_sec_context.3	\
		gss_acquire_cred.3	gss_display_name.3		\
		gss_acquire_cred.3	gss_display_status.3		\
		gss_acquire_cred.3	gss_duplicate_name.3		\
		gss_acquire_cred.3	gss_export_name.3		\
		gss_acquire_cred.3	gss_export_sec_context.3	\
		gss_acquire_cred.3	gss_get_mic.3			\
		gss_acquire_cred.3	gss_import_name.3		\
		gss_acquire_cred.3	gss_import_sec_context.3	\
		gss_acquire_cred.3	gss_indicate_mechs.3		\
		gss_acquire_cred.3	gss_init_sec_context.3		\
		gss_acquire_cred.3	gss_inquire_context.3		\
		gss_acquire_cred.3	gss_inquire_cred.3		\
		gss_acquire_cred.3	gss_inquire_cred_by_mech.3	\
		gss_acquire_cred.3	gss_inquire_mechs_for_name.3	\
		gss_acquire_cred.3	gss_inquire_names_for_mech.3	\
		gss_acquire_cred.3	gss_krb5_ccache_name.3		\
		gss_acquire_cred.3	gss_krb5_compat_des3_mic.3	\
		gss_acquire_cred.3	gss_krb5_copy_ccache.3		\
		gss_acquire_cred.3	gss_krb5_get_tkt_flags.3	\
		gss_acquire_cred.3	gss_krb5_import_ccache.3	\
		gss_acquire_cred.3	gss_krb5_import_cred.3		\
		gss_acquire_cred.3	gss_process_context_token.3	\
		gss_acquire_cred.3	gss_release_buffer.3		\
		gss_acquire_cred.3	gss_release_cred.3		\
		gss_acquire_cred.3	gss_release_name.3		\
		gss_acquire_cred.3	gss_release_oid_set.3		\
		gss_acquire_cred.3	gss_seal.3			\
		gss_acquire_cred.3	gss_sign.3			\
		gss_acquire_cred.3	gss_test_oid_set_member.3	\
		gss_acquire_cred.3	gss_unseal.3			\
		gss_acquire_cred.3	gss_unwrap.3			\
		gss_acquire_cred.3	gss_verify.3			\
		gss_acquire_cred.3	gss_verify_mic.3		\
		gss_acquire_cred.3	gss_wrap.3			\
		gss_acquire_cred.3	gss_wrap_size_limit.3		\
		gss_acquire_cred.3	gsskrb5_extract_authz_data_from_sec_context.3 \
		gss_acquire_cred.3	gsskrb5_register_acceptor_identity.3

CPPFLAGS=	-I${KRB5DIR}/lib/gssapi \
		-I${KRB5DIR}/lib/gssapi/gssapi \
		-I${KRB5DIR}/lib/gssapi/krb5 \
		-I${KRB5DIR}/lib/gssapi/mech \
		-I${KRB5DIR}/lib/gssapi/spnego \
		-I${KRB5DIR}/lib/krb5 \
		-I${KRB5DIR}/lib/asn1 \
		-I${KRB5DIR}/lib/roken -I.

CLEANFILES=	${GEN} ${GEN:S/.x$/.c/:S/.hx$/.h/} gssapi_asn1_files spnego_asn1_files \
		gssapi_asn1-template.c spnego_asn1-template.c

.for i in ${KRB5SRC} ${MECHSRC} ${SPNEGOSRC}
CLEANFILES+=$i
SRCS+=$i

${i}: ${i:S@@__@@/@@}
	ln -s ${.ALLSRC} ${.OBJDIR}/${i}
.endfor

${GEN_GSSAPI}: gssapi.asn1
	${ASN1_COMPILE} ${.ALLSRC:M*.asn1} gssapi_asn1

${GEN_SPNEGO}: spnego.asn1 spnego.opt
	${ASN1_COMPILE} --option-file=${.ALLSRC:M*.opt} ${.ALLSRC:M*.asn1} spnego_asn1

.SUFFIXES: .h .c .x .hx

.x.c:
	cmp -s ${.IMPSRC} ${.TARGET} 2> /dev/null || cp ${.IMPSRC} ${.TARGET}

.hx.h:
	cmp -s ${.IMPSRC} ${.TARGET} 2> /dev/null || cp ${.IMPSRC} ${.TARGET}

.include <bsd.lib.mk>

.SUFFIXES: .h .c .x .hx

.PATH:	${KRB5DIR}/lib/gssapi/gssapi ${KRB5DIR}/lib/gssapi ${KRB5DIR}/lib/gssapi/krb5 \
	${KRB5DIR}/lib/gssapi/mech ${KRB5DIR}/lib/gssapi/spnego
@


1.9
log
@Bring back spnego support into gssapi as we used to have it before
the update to 1.5.2.

ok miod@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2013/07/02 19:00:09 ajacoutot Exp $
@


1.8
log
@Most CFLAGS should be CPPFLAGS, so fix that.
Remove non existent LDAP* variables.

ok robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2013/07/01 05:15:23 ajacoutot Exp $
d7 3
a9 3
#GEN_SPNEGO=	asn1_ContextFlags.x asn1_MechType.x asn1_MechTypeList.x asn1_NegHints.x \
#		asn1_NegTokenInit.x asn1_NegTokenInitWin.x asn1_NegTokenResp.x asn1_NegotiationToken.x \
#		asn1_NegotiationTokenWin.x spnego_asn1-priv.hx spnego_asn1.hx
d11 1
a11 1
GEN=	${GEN_GSSAPI} #${GEN_SPNEGO}
d161 1
a161 1
#SPNEGOSRC=	${spnegosrc:S@@/@@__@@}
d166 1
d179 2
a180 2
#SPNEGOINCS=	gssapi_spnego.h
#SPNEGOINCSDIR=	${INCLUDEDIR}/gssapi
d182 1
a182 1
INCSGROUPS=	INCS OIDINCS KRB5INCS #SPNEGOINCS
d185 3
a187 1
		gssapi_asn1-priv.hx
d247 1
d255 1
a255 1
.for i in ${KRB5SRC} ${MECHSRC}
d266 3
d281 2
a282 1
.PATH: ${KRB5DIR}/lib/gssapi/gssapi ${KRB5DIR}/lib/gssapi ${KRB5DIR}/lib/gssapi/krb5 ${KRB5DIR}/lib/gssapi/mech
@


1.7
log
@Pass all Kerberos man pages to a sed substitution to fix paths so that
they match hier(7).
e.g. /etc/krb5.conf versus /etc/kerberosV/krb5.conf

help from espie@@
ok espie@@ robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2013/06/21 09:39:50 ajacoutot Exp $
d240 7
a246 7
CFLAGS+=-I${KRB5DIR}/lib/gssapi
CFLAGS+=-I${KRB5DIR}/lib/gssapi/gssapi
CFLAGS+=-I${KRB5DIR}/lib/gssapi/krb5
CFLAGS+=-I${KRB5DIR}/lib/gssapi/mech
CFLAGS+=-I${KRB5DIR}/lib/krb5
CFLAGS+=-I${KRB5DIR}/lib/asn1
CFLAGS+=-I${KRB5DIR}/lib/roken -I.
@


1.6
log
@No need to look under spnego since support it gone.

ok robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2013/06/19 19:36:43 robert Exp $
d186 1
a186 1
MAN=		gssapi.3 \
d189 3
@


1.5
log
@start un-bloating kerberos by removing support for hx509, pthreads, spnego,
ntlm, pkinit
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2013/06/17 21:47:19 robert Exp $
d271 1
a271 2
.PATH: ${KRB5DIR}/lib/gssapi/gssapi ${KRB5DIR}/lib/gssapi ${KRB5DIR}/lib/gssapi/krb5 ${KRB5DIR}/lib/gssapi/mech \
	${KRB5DIR}/lib/gssapi/spnego
@


1.4
log
@fix the generated files target to avoid rebuilding every time
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2013/06/17 21:27:16 robert Exp $
d7 3
a9 3
GEN_SPNEGO=	asn1_ContextFlags.x asn1_MechType.x asn1_MechTypeList.x asn1_NegHints.x \
		asn1_NegTokenInit.x asn1_NegTokenInitWin.x asn1_NegTokenResp.x asn1_NegotiationToken.x \
		asn1_NegotiationTokenWin.x spnego_asn1-priv.hx spnego_asn1.hx
d11 1
a11 1
GEN=	${GEN_GSSAPI} ${GEN_SPNEGO}
a158 32
ntlmsrc = \
	ntlm/accept_sec_context.c \
	ntlm/acquire_cred.c \
	ntlm/add_cred.c \
	ntlm/canonicalize_name.c \
	ntlm/compare_name.c \
	ntlm/context_time.c \
	ntlm/creds.c \
	ntlm/crypto.c \
	ntlm/delete_sec_context.c \
	ntlm/display_name.c \
	ntlm/display_status.c \
	ntlm/duplicate_name.c \
	ntlm/export_name.c \
	ntlm/export_sec_context.c \
	ntlm/external.c \
	ntlm/import_name.c \
	ntlm/import_sec_context.c \
	ntlm/indicate_mechs.c \
	ntlm/init_sec_context.c \
	ntlm/inquire_context.c \
	ntlm/inquire_cred_by_mech.c \
	ntlm/inquire_mechs_for_name.c \
	ntlm/inquire_names_for_mech.c \
	ntlm/inquire_sec_context_by_oid.c \
	ntlm/iter_cred.c \
	ntlm/process_context_token.c \
	ntlm/release_cred.c \
	ntlm/release_name.c \
	ntlm/kdc.c

NTLMSRC=	${ntlmsrc:S@@/@@__@@}
d161 1
a161 1
SPNEGOSRC=	${spnegosrc:S@@/@@__@@}
a165 2
	${SPNEGOSRC} \
	${NTLMSRC} \
d178 2
a179 2
SPNEGOINCS=	gssapi_spnego.h
SPNEGOINCSDIR=	${INCLUDEDIR}/gssapi
d181 1
a181 1
INCSGROUPS=	INCS OIDINCS KRB5INCS SPNEGOINCS
d184 1
a184 3
		gssapi_asn1-priv.hx \
		spnego_asn1.hx \
		spnego_asn1-priv.hx
a240 2
CFLAGS+=-I${KRB5DIR}/lib/gssapi/ntlm
CFLAGS+=-I${KRB5DIR}/lib/gssapi/spnego
d248 1
a248 1
.for i in ${KRB5SRC} ${MECHSRC} ${SPNEGOSRC} ${NTLMSRC}
a258 3
${GEN_SPNEGO}: spnego.asn1 spnego.opt
	${ASN1_COMPILE} --option-file=${.ALLSRC:M*.opt} ${.ALLSRC:M*.asn1} spnego_asn1

d272 1
a272 1
	${KRB5DIR}/lib/gssapi/spnego ${KRB5DIR}/lib/ntlm
@


1.3
log
@ditch the beforedepend target and properly generate SRCS file list that
includes the symlinked src files as well
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2013/06/17 21:14:19 robert Exp $
d5 9
a13 1
GEN=	asn1_ContextFlags.x		\
d294 1
a294 1
gengssapi: gssapi.asn1
d297 1
a297 1
genspnego: spnego.asn1 spnego.opt
a298 2

${GEN}: gengssapi genspnego
@


1.2
log
@remove whitespace
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2013/06/17 19:11:35 robert Exp $
d280 1
a280 1
.endfor
d282 2
a283 4
beforedepend:
.for i in ${KRB5SRC} ${MECHSRC} ${SPNEGOSRC} ${NTLMSRC}
	cmp -s ${KRB5DIR}/lib/gssapi/${i:S@@__@@/@@} ${.OBJDIR}/${i} || \
		ln -sf ${KRB5DIR}/lib/gssapi/${i:S@@__@@/@@} ${.OBJDIR}/${i}
@


1.1
log
@2nd part of:
update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.
@
text
@d1 1
a1 1
# $OpenBSD$
d291 1
a291 1
genspnego: spnego.asn1 spnego.opt	
@

