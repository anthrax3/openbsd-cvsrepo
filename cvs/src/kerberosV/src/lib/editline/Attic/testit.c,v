head	1.2;
access;
symbols
	HEIMDAL_0_7_2:1.1.1.4
	HEIMDAL_0_6_3:1.1.1.3
	HEIMDAL_0_6RC1:1.1.1.2
	OPENBSD_3_3:1.1.1.1.0.8
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.6
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.4
	OPENBSD_3_1_BASE:1.1.1.1
	HEIMDAL_0_4e:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	HEIMDAL_0_3f:1.1.1.1
	HEIMDAL_0_3e:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.12.17.18.47;	author hin;	state dead;
branches;
next	1.1;

1.1
date	2001.05.25.07.52.14;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.25.07.52.14;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.11.02.16.11;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.10.29.15.55.41;	author biorn;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2006.04.14.07.33.52;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.2
log
@These files are not use by us, so they're removed to make the tree
a little bit leaner, and to get rid of some bad string functions.
@
text
@/*  $KTH: 1.2 $
**
**  A "micro-shell" to test editline library.
**  If given any arguments, commands aren't executed.
*/
#if defined(HAVE_CONFIG_H)
#include <config.h>
#endif
#include <stdio.h>
#include <stdlib.h>
#ifdef HAVE_ERRNO_H
#include <errno.h>
#endif

#include "editline.h"

int
main(int ac, char **av)
{
    char	*p;
    int		doit;

    doit = ac == 1;
    while ((p = readline("testit> ")) != NULL) {
	(void)printf("\t\t\t|%s|\n", p);
	if (doit)
	    if (strncmp(p, "cd ", 3) == 0) {
		if (chdir(&p[3]) < 0)
		    perror(&p[3]);
	    } else if (system(p) != 0) {
		perror(p);
	    }
	add_history(p);
	free(p);
    }
    exit(0);
    /* NOTREACHED */
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of heimdal-0.3e
@
text
@@


1.1.1.2
log
@Import of heimdal-0.6rc1
@
text
@d1 1
a1 1
/*  $KTH: 1.3 $
a13 1
#include <getarg.h>
a16 23
static int n_flag	= 0;
static int version_flag = 0;
static int help_flag	= 0;

static struct getargs args[] = {
    {"dry-run", 'n',	arg_flag,	&n_flag,
     "do not run commands", NULL },
    {"version",	0,	arg_flag,	&version_flag,
     "print version", NULL },
    {"help",	0,	arg_flag,	&help_flag,
     NULL, NULL }
};

static void
usage (int ret)
{
    arg_printusage (args,
		    sizeof(args)/sizeof(*args),
		    NULL,
		    "");
    exit (ret);
}

d18 1
a18 1
main(int argc, char **argv)
d21 1
a21 17
    int optind = 0;

    setprogname (argv[0]);

    if(getarg(args, sizeof(args) / sizeof(args[0]), argc, argv, &optind))
	usage(1);
    
    if (help_flag)
	usage (0);

    if(version_flag){
	print_version(NULL);
	exit(0);
    }

    argc -= optind;
    argv += optind;
d23 1
d26 1
a26 1
	if (!n_flag) {
a32 1
	}
@


1.1.1.3
log
@Import of heimdal-0.6.3
@
text
@d1 1
a1 1
/*  $Revision: 1.3 $
@


1.1.1.4
log
@Import of heimdal-0.7.2
@
text
@d1 1
a1 1
/*  $Revision: 1.4 $
d16 1
a16 1
#include "edit_locl.h"
@


