head	1.7;
access;
symbols
	OPENBSD_5_3:1.6.0.20
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.18
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.16
	OPENBSD_5_0:1.6.0.14
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.12
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.10
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.6
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.8
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	HEIMDAL_0_7_2:1.1.1.2
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.1.1.1.0.8
	OPENBSD_3_7_BASE:1.1.1.1
	HEIMDAL_0_6_3:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.6
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.4
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	HEIMDAL_0_6:1.1.1.1
	HEIMDAL_0_6RC1:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@.\" @;


1.7
date	2013.06.17.18.57.44;	author robert;	state dead;
branches;
next	1.6;

1.6
date	2008.07.14.07.39.34;	author mbalmer;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.30.09.20.00;	author biorn;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.14.08.15.04;	author biorn;	state Exp;
branches;
next	1.3;

1.3
date	2005.07.29.16.21.45;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.24.20.18.47;	author biorn;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.11.02.15.55;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.11.02.15.55;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.04.14.07.33.22;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@.\" Copyright (c) 2003, 2005 Kungliga Tekniska Högskolan
.\" (Royal Institute of Technology, Stockholm, Sweden).
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $KTH: krb5_address.3,v 1.10 2005/04/24 07:52:03 lha Exp $
.\"
.Dd April 24, 2005
.Dt KRB5_ADDRESS 3
.Os HEIMDAL
.Sh NAME
.Nm krb5_address ,
.Nm krb5_addresses ,
.Nm krb5_sockaddr2address ,
.Nm krb5_sockaddr2port ,
.Nm krb5_addr2sockaddr ,
.Nm krb5_max_sockaddr_size ,
.Nm krb5_sockaddr_uninteresting ,
.Nm krb5_h_addr2sockaddr ,
.Nm krb5_h_addr2addr ,
.Nm krb5_anyaddr ,
.Nm krb5_print_address ,
.Nm krb5_parse_address ,
.Nm krb5_address_order ,
.Nm krb5_address_compare ,
.Nm krb5_address_search ,
.Nm krb5_free_address ,
.Nm krb5_free_addresses ,
.Nm krb5_copy_address ,
.Nm krb5_copy_addresses ,
.Nm krb5_append_addresses ,
.Nm krb5_make_addrport
.Nd manage addresses in Kerberos
.Sh LIBRARY
Kerberos 5 Library (libkrb5, -lkrb5)
.Sh SYNOPSIS
.In krb5.h
.Pp
.Ft krb5_error_code
.Fo krb5_sockaddr2address
.Fa "krb5_context context"
.Fa "const struct sockaddr *sa"
.Fa "krb5_address *addr"
.Fc
.Ft krb5_error_code
.Fo krb5_sockaddr2port
.Fa "krb5_context context"
.Fa "const struct sockaddr *sa"
.Fa "int16_t *port"
.Fc
.Ft krb5_error_code
.Fo krb5_addr2sockaddr
.Fa "krb5_context context"
.Fa "const krb5_address *addr"
.Fa "struct sockaddr *sa"
.Fa "krb5_socklen_t *sa_size"
.Fa "int port"
.Fc
.Ft size_t
.Fo krb5_max_sockaddr_size
.Fa "void"
.Fc
.Ft "krb5_boolean"
.Fo krb5_sockaddr_uninteresting
.Fa "const struct sockaddr *sa"
.Fc
.Ft krb5_error_code
.Fo krb5_h_addr2sockaddr
.Fa "krb5_context context"
.Fa "int af"
.Fa "const char *addr"
.Fa "struct sockaddr *sa"
.Fa "krb5_socklen_t *sa_size"
.Fa "int port"
.Fc
.Ft krb5_error_code
.Fo krb5_h_addr2addr
.Fa "krb5_context context"
.Fa "int af"
.Fa "const char *haddr"
.Fa "krb5_address *addr"
.Fc
.Ft krb5_error_code
.Fo krb5_anyaddr
.Fa "krb5_context context"
.Fa "int af"
.Fa "struct sockaddr *sa"
.Fa "krb5_socklen_t *sa_size"
.Fa "int port"
.Fc
.Ft krb5_error_code
.Fo krb5_print_address
.Fa "const krb5_address *addr"
.Fa "char *str"
.Fa "size_t len"
.Fa "size_t *ret_len"
.Fc
.Ft krb5_error_code
.Fo krb5_parse_address
.Fa "krb5_context context"
.Fa "const char *string"
.Fa "krb5_addresses *addresses"
.Fc
.Ft int
.Fo "krb5_address_order"
.Fa "krb5_context context"
.Fa "const krb5_address *addr1"
.Fa "const krb5_address *addr2"
.Fc
.Ft "krb5_boolean"
.Fo krb5_address_compare
.Fa "krb5_context context"
.Fa "const krb5_address *addr1"
.Fa "const krb5_address *addr2"
.Fc
.Ft "krb5_boolean"
.Fo krb5_address_search
.Fa "krb5_context context"
.Fa "const krb5_address *addr"
.Fa "const krb5_addresses *addrlist"
.Fc
.Ft krb5_error_code
.Fo krb5_free_address
.Fa "krb5_context context"
.Fa "krb5_address *address"
.Fc
.Ft krb5_error_code
.Fo krb5_free_addresses
.Fa "krb5_context context"
.Fa "krb5_addresses *addresses"
.Fc
.Ft krb5_error_code
.Fo krb5_copy_address
.Fa "krb5_context context"
.Fa "const krb5_address *inaddr"
.Fa "krb5_address *outaddr"
.Fc
.Ft krb5_error_code
.Fo krb5_copy_addresses
.Fa "krb5_context context"
.Fa "const krb5_addresses *inaddr"
.Fa "krb5_addresses *outaddr"
.Fc
.Ft krb5_error_code
.Fo krb5_append_addresses
.Fa "krb5_context context"
.Fa "krb5_addresses *dest"
.Fa "const krb5_addresses *source"
.Fc
.Ft krb5_error_code
.Fo krb5_make_addrport
.Fa "krb5_context context"
.Fa "krb5_address **res"
.Fa "const krb5_address *addr"
.Fa "int16_t port"
.Fc
.Sh DESCRIPTION
The
.Li krb5_address
structure holds a address that can be used in Kerberos API
calls. There are help functions to set and extract address information
of the address.
.Pp
The
.Li krb5_addresses
structure holds a set of krb5_address:es.
.Pp
.Fn krb5_sockaddr2address
stores a address a
.Li "struct sockaddr"
.Fa sa
in the krb5_address
.Fa addr .
.Pp
.Fn krb5_sockaddr2port
extracts a
.Fa port
(if possible) from a
.Li "struct sockaddr"
.Fa sa .
.Pp
.Fn krb5_addr2sockaddr
sets the
struct sockaddr
.Fa sockaddr
from
.Fa addr
and
.Fa port .
The argument
.Fa sa_size
should initially contain the size of the
.Fa sa ,
and after the call, it will contain the actual length of the address.
.Pp
.Fn krb5_max_sockaddr_size
returns the max size of the
.Li struct sockaddr
that the Kerberos library will return.
.Pp
.Fn krb5_sockaddr_uninteresting
returns
.Dv TRUE
for all
.Fa sa
that the kerberos library thinks are uninteresting.
One example are link local addresses.
.Pp
.Fn krb5_h_addr2sockaddr
initializes a
.Li "struct sockaddr"
.Fa sa
from
.Fa af
and the
.Li "struct hostent"
(see
.Xr gethostbyname 3 )
.Fa h_addr_list
component.
The argument
.Fa sa_size
should initially contain the size of the
.Fa sa ,
and after the call, it will contain the actual length of the address.
.Pp
.Fn krb5_h_addr2addr
works like
.Fn krb5_h_addr2sockaddr
with the exception that it operates on a
.Li krb5_address
instead of a
.Li struct sockaddr .
.Pp
.Fn krb5_anyaddr
fills in a
.Li "struct sockaddr"
.Fa sa
that can be used to
.Xr bind 2
to.
The argument
.Fa sa_size
should initially contain the size of the
.Fa sa ,
and after the call, it will contain the actual length of the address.
.Pp
.Fn krb5_print_address
prints the address in
.Fa addr
to the string
.Fa string
that have the length
.Fa len .
If
.Fa ret_len
is not
.Dv NULL ,
it will be filled with the length of the string if size were unlimited (not
including the final
.Ql \e0 ) .
.Pp
.Fn krb5_parse_address
Returns the resolved hostname in
.Fa string
to the
.Li krb5_addresses
.Fa addresses .
.Pp
.Fn krb5_address_order
compares the addresses
.Fa addr1
and
.Fa addr2
so that it can be used for sorting addresses. If the addresses are the
same address
.Fa krb5_address_order
will return 0.
.Pp
.Fn krb5_address_compare
compares the addresses
.Fa addr1
and
.Fa addr2 .
Returns
.Dv TRUE
if the two addresses are the same.
.Pp
.Fn krb5_address_search
checks if the address
.Fa addr
is a member of the address set list
.Fa addrlist .
.Pp
.Fn krb5_free_address
frees the data stored in the
.Fa address
that is alloced with any of the krb5_address functions.
.Pp
.Fn krb5_free_addresses
frees the data stored in the
.Fa addresses
that is alloced with any of the krb5_address functions.
.Pp
.Fn krb5_copy_address
copies the content of address
.Fa inaddr
to
.Fa outaddr .
.Pp
.Fn krb5_copy_addresses
copies the content of the address list
.Fa inaddr
to
.Fa outaddr .
.Pp
.Fn krb5_append_addresses
adds the set of addresses in
.Fa source
to
.Fa dest .
While copying the addresses, duplicates are also sorted out.
.Pp
.Fn krb5_make_addrport
allocates and creates an
krb5_address in
.Fa res
of type KRB5_ADDRESS_ADDRPORT from
.Fa ( addr , port ) .
.Sh SEE ALSO
.Xr krb5 3 ,
.Xr krb5.conf 5 ,
.Xr kerberos 8
@


1.6
log
@mange -> manage

from Markus Bergkvist <markus.bergkvist@@telia.com>
@
text
@@


1.5
log
@Minor tweaks, mostly eyeballed by jmc@@
@
text
@d59 1
a59 1
.Nd mange addresses in Kerberos
@


1.4
log
@Merge of heimdal 0.7.2
Tested by todd & beck, ok beck.
@
text
@d285 2
a286 2
it will be filled with the length of the string if size where unlimited (not
included the final
@


1.3
log
@- sort SEE ALSO
- full month name for .Dd
- don't end .Nd w/ a full stop

fixes passed back to heimdal people...
@
text
@d1 3
a3 3
.\" Copyright (c) 2003 Kungliga Tekniska Högskolan
.\" (Royal Institute of Technology, Stockholm, Sweden). 
.\" All rights reserved. 
d5 3
a7 3
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions 
.\" are met: 
d9 2
a10 2
.\" 1. Redistributions of source code must retain the above copyright 
.\"    notice, this list of conditions and the following disclaimer. 
d12 3
a14 3
.\" 2. Redistributions in binary form must reproduce the above copyright 
.\"    notice, this list of conditions and the following disclaimer in the 
.\"    documentation and/or other materials provided with the distribution. 
d16 3
a18 3
.\" 3. Neither the name of the Institute nor the names of its contributors 
.\"    may be used to endorse or promote products derived from this software 
.\"    without specific prior written permission. 
d20 15
a34 15
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
.\" SUCH DAMAGE. 
.\" 
.\" $KTH: krb5_address.3,v 1.4 2003/04/16 13:58:12 lha Exp $
.\" 
.Dd March 11, 2002
d195 1
a195 1
stores a address a 
d216 1
d218 1
a218 1
should be initially contain the size of the
d245 1
a245 1
.Fa h_addr_list 
d247 1
d268 1
d270 1
a270 1
should be initially contain the size of the
d285 3
a287 1
it will be filled with the length of the string.
d351 1
a351 1
allocates and creates an 
@


1.2
log
@A bunch of small fixes, both mdoc and english.

ok jmc@@ and beck@@
@
text
@d59 1
a59 1
.Nd mange addresses in Kerberos.
@


1.1
log
@Initial revision
@
text
@d216 1
a216 1
.Fa Sa_size
d231 1
a231 1
that for that the kerberos library thinks are uninteresting.
d246 2
a247 2
.Fa Sa_size
should be initially contain the size of the
a249 2
.Fa sa
argument.
d257 1
a257 1
.Li struct sockaddr
d264 1
a264 1
.Xf bind 3
d266 1
a266 1
.Fa Sa_size
d274 1
a274 1
to the a string
d280 1
a280 1
if not
d282 1
a282 1
it will be filled in length of the string.
d285 1
a285 1
Returns the resolving a hostname in
d292 1
a292 1
compares to addresses
d298 2
a299 1
.Fa krb5_address_order will be return 0.
d306 1
a306 1
returns
@


1.1.1.1
log
@Import of heimdal-0.6rc1
@
text
@@


1.1.1.2
log
@Import of heimdal-0.7.2
@
text
@d1 3
a3 3
.\" Copyright (c) 2003, 2005 Kungliga Tekniska Högskolan
.\" (Royal Institute of Technology, Stockholm, Sweden).
.\" All rights reserved.
d5 3
a7 3
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
d9 2
a10 2
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
d12 3
a14 3
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
d16 3
a18 3
.\" 3. Neither the name of the Institute nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
d20 15
a34 15
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $KTH: krb5_address.3,v 1.10 2005/04/24 07:52:03 lha Exp $
.\"
.Dd April 24, 2005
d59 1
a59 1
.Nd mange addresses in Kerberos
d195 1
a195 1
stores a address a
d216 2
a217 3
The argument
.Fa sa_size
should initially contain the size of the
d231 1
a231 1
that the kerberos library thinks are uninteresting.
d244 1
a244 1
.Fa h_addr_list
d246 2
a247 3
The argument
.Fa sa_size
should initially contain the size of the
d250 2
d259 1
a259 1
.Li struct sockaddr .
d266 1
a266 1
.Xf bind 2
d268 2
a269 3
The argument
.Fa sa_size
should initially contain the size of the
d276 1
a276 1
to the string
d282 1
a282 1
is not
d284 1
a284 3
it will be filled with the length of the string if size where unlimited (not
included the final
.Ql \e0 ) .
d287 1
a287 1
Returns the resolved a hostname in
d294 1
a294 1
compares the addresses
d300 1
a300 2
.Fa krb5_address_order
will be return 0.
d307 1
a307 1
Returns
d347 1
a347 1
allocates and creates an
@

