head	1.3;
access;
symbols
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.28
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.26
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.24
	OPENBSD_5_0:1.1.1.1.0.22
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.20
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.18
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.14
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.16
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.12
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.10
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	HEIMDAL_0_7_2:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2014.04.22.10.01.32;	author reyk;	state dead;
branches;
next	1.2;

1.2
date	2013.06.17.18.57.44;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.14.07.33.23;	author biorn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.04.14.07.33.23;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@/*
 * Copyright (c) 2004 Kungliga Tekniska HÃ¶gskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* $Id: krb5_ccapi.h,v 1.2 2013/06/17 18:57:44 robert Exp $ */

#ifndef KRB5_CCAPI_H
#define KRB5_CCAPI_H 1

#include <krb5-types.h>

 #ifdef __APPLE__
#pragma pack(push,2)
#endif

enum {
    cc_credentials_v5 = 2
};

enum {
    ccapi_version_3 = 3,
    ccapi_version_4 = 4
};

enum {
    ccNoError						= 0,

    ccIteratorEnd					= 201,
    ccErrBadParam,
    ccErrNoMem,
    ccErrInvalidContext,
    ccErrInvalidCCache,

    ccErrInvalidString,					/* 206 */
    ccErrInvalidCredentials,
    ccErrInvalidCCacheIterator,
    ccErrInvalidCredentialsIterator,
    ccErrInvalidLock,

    ccErrBadName,					/* 211 */
    ccErrBadCredentialsVersion,
    ccErrBadAPIVersion,
    ccErrContextLocked,
    ccErrContextUnlocked,

    ccErrCCacheLocked,					/* 216 */
    ccErrCCacheUnlocked,
    ccErrBadLockType,
    ccErrNeverDefault,
    ccErrCredentialsNotFound,

    ccErrCCacheNotFound,				/* 221 */
    ccErrContextNotFound,
    ccErrServerUnavailable,
    ccErrServerInsecure,
    ccErrServerCantBecomeUID,

    ccErrTimeOffsetNotSet				/* 226 */
};

typedef int32_t cc_int32;
typedef uint32_t cc_uint32;
typedef struct cc_context_t *cc_context_t;
typedef struct cc_ccache_t *cc_ccache_t;
typedef struct cc_ccache_iterator_t *cc_ccache_iterator_t;
typedef struct cc_credentials_v5_t cc_credentials_v5_t;
typedef struct cc_credentials_t *cc_credentials_t;
typedef struct cc_credentials_iterator_t *cc_credentials_iterator_t;
typedef struct cc_string_t *cc_string_t;
typedef cc_uint32 cc_time_t;

typedef struct cc_data {
    cc_uint32 type;
    cc_uint32 length;
    void *data;
} cc_data;

struct cc_credentials_v5_t {
    char *client;
    char *server;
    cc_data keyblock;
    cc_time_t authtime;
    cc_time_t starttime;
    cc_time_t endtime;
    cc_time_t renew_till;
    cc_uint32 is_skey;
    cc_uint32 ticket_flags;
#define	KRB5_CCAPI_TKT_FLG_FORWARDABLE			0x40000000
#define	KRB5_CCAPI_TKT_FLG_FORWARDED			0x20000000
#define	KRB5_CCAPI_TKT_FLG_PROXIABLE			0x10000000
#define	KRB5_CCAPI_TKT_FLG_PROXY			0x08000000
#define	KRB5_CCAPI_TKT_FLG_MAY_POSTDATE			0x04000000
#define	KRB5_CCAPI_TKT_FLG_POSTDATED			0x02000000
#define	KRB5_CCAPI_TKT_FLG_INVALID			0x01000000
#define	KRB5_CCAPI_TKT_FLG_RENEWABLE			0x00800000
#define	KRB5_CCAPI_TKT_FLG_INITIAL			0x00400000
#define	KRB5_CCAPI_TKT_FLG_PRE_AUTH			0x00200000
#define	KRB5_CCAPI_TKT_FLG_HW_AUTH			0x00100000
#define	KRB5_CCAPI_TKT_FLG_TRANSIT_POLICY_CHECKED	0x00080000
#define	KRB5_CCAPI_TKT_FLG_OK_AS_DELEGATE		0x00040000
#define	KRB5_CCAPI_TKT_FLG_ANONYMOUS			0x00020000
    cc_data **addresses;
    cc_data ticket;
    cc_data second_ticket;
    cc_data **authdata;
};


typedef struct cc_string_functions {
    cc_int32 (*release)(cc_string_t);
} cc_string_functions;

struct cc_string_t {
    const char *data;
    const cc_string_functions *func;
};

typedef struct cc_credentials_union {
    cc_int32 version;
    union {
	cc_credentials_v5_t* credentials_v5;
    } credentials;
} cc_credentials_union;

struct cc_credentials_functions {
    cc_int32 (*release)(cc_credentials_t);
    cc_int32 (*compare)(cc_credentials_t, cc_credentials_t, cc_uint32*);
};

struct cc_credentials_t {
    const cc_credentials_union* data;
    const struct cc_credentials_functions* func;
};

struct cc_credentials_iterator_functions {
    cc_int32 (*release)(cc_credentials_iterator_t);
    cc_int32 (*next)(cc_credentials_iterator_t, cc_credentials_t*);
};

struct cc_credentials_iterator_t {
    const struct cc_credentials_iterator_functions *func;
};

struct cc_ccache_iterator_functions {
    cc_int32 (*release) (cc_ccache_iterator_t);
    cc_int32 (*next)(cc_ccache_iterator_t, cc_ccache_t*);
};

struct cc_ccache_iterator_t {
    const struct cc_ccache_iterator_functions* func;
};

typedef struct cc_ccache_functions {
    cc_int32 (*release)(cc_ccache_t);
    cc_int32 (*destroy)(cc_ccache_t);
    cc_int32 (*set_default)(cc_ccache_t);
    cc_int32 (*get_credentials_version)(cc_ccache_t, cc_uint32*);
    cc_int32 (*get_name)(cc_ccache_t, cc_string_t*);
    cc_int32 (*get_principal)(cc_ccache_t, cc_uint32, cc_string_t*);
    cc_int32 (*set_principal)(cc_ccache_t, cc_uint32, const char*);
    cc_int32 (*store_credentials)(cc_ccache_t, const cc_credentials_union*);
    cc_int32 (*remove_credentials)(cc_ccache_t, cc_credentials_t);
    cc_int32 (*new_credentials_iterator)(cc_ccache_t,
					 cc_credentials_iterator_t*);
    cc_int32 (*move)(cc_ccache_t, cc_ccache_t);
    cc_int32 (*lock)(cc_ccache_t, cc_uint32, cc_uint32);
    cc_int32 (*unlock)(cc_ccache_t);
    cc_int32 (*get_last_default_time)(cc_ccache_t, cc_time_t*);
    cc_int32 (*get_change_time)(cc_ccache_t, cc_time_t*);
    cc_int32 (*compare)(cc_ccache_t, cc_ccache_t, cc_uint32*);
    cc_int32 (*get_kdc_time_offset)(cc_ccache_t, cc_int32, cc_time_t *);
    cc_int32 (*set_kdc_time_offset)(cc_ccache_t, cc_int32, cc_time_t);
    cc_int32 (*clear_kdc_time_offset)(cc_ccache_t, cc_int32);
} cc_ccache_functions;

struct cc_ccache_t {
    const cc_ccache_functions *func;
};

struct  cc_context_functions {
    cc_int32 (*release)(cc_context_t);
    cc_int32 (*get_change_time)(cc_context_t, cc_time_t *);
    cc_int32 (*get_default_ccache_name)(cc_context_t, cc_string_t*);
    cc_int32 (*open_ccache)(cc_context_t, const char*, cc_ccache_t *);
    cc_int32 (*open_default_ccache)(cc_context_t, cc_ccache_t*);
    cc_int32 (*create_ccache)(cc_context_t,const char*, cc_uint32,
			      const char*, cc_ccache_t*);
    cc_int32 (*create_default_ccache)(cc_context_t, cc_uint32,
				      const char*, cc_ccache_t*);
    cc_int32 (*create_new_ccache)(cc_context_t, cc_uint32,
				  const char*, cc_ccache_t*);
    cc_int32 (*new_ccache_iterator)(cc_context_t, cc_ccache_iterator_t*);
    cc_int32 (*lock)(cc_context_t, cc_uint32, cc_uint32);
    cc_int32 (*unlock)(cc_context_t);
    cc_int32 (*compare)(cc_context_t, cc_context_t, cc_uint32*);
};

struct cc_context_t {
    const struct cc_context_functions* func;
};

typedef cc_int32
(*cc_initialize_func)(cc_context_t*, cc_int32, cc_int32 *, char const **);

#ifdef __APPLE__
#pragma pack(pop)
#endif


#endif /* KRB5_CCAPI_H */
@


1.2
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@d34 1
a34 1
/* $Id$ */
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
 * Copyright (c) 2004 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden). 
 * All rights reserved. 
d6 3
a8 3
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
d10 2
a11 2
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
d13 3
a15 3
 * 2. Redistributions in binary form must reproduce the above copyright 
 *    notice, this list of conditions and the following disclaimer in the 
 *    documentation and/or other materials provided with the distribution. 
d17 3
a19 3
 * 3. Neither the name of the Institute nor the names of its contributors 
 *    may be used to endorse or promote products derived from this software 
 *    without specific prior written permission. 
d21 11
a31 11
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
 * SUCH DAMAGE. 
d34 1
a34 1
/* $KTH: krb5_ccapi.h,v 1.1 2004/09/11 04:00:42 lha Exp $ */
d41 4
d50 2
a51 1
    ccapi_version_3 = 3
d56 1
a56 1
    
d68 1
a68 1
    
d74 1
a74 1
    
d80 1
a80 1
    
d86 1
a86 1
    
d91 1
a91 1
typedef u_int32_t cc_uint32;
d99 1
a99 1
typedef time_t cc_time_t;
d116 15
a130 1
    cc_uint32 ticket_flags; /* XXX ticket flags undefined */
d187 1
a187 1
    cc_int32 (*get_name)(cc_ccache_t ccache,cc_string_t*);
d194 1
a194 1
    cc_int32 (*move)(cc_ccache_t source, cc_ccache_t);
d198 1
a198 1
    cc_int32 (*get_change_time)(cc_ccache_t ccache, cc_time_t*);
d231 1
a231 1
typedef cc_int32 
d233 5
@


1.1.1.1
log
@Import of heimdal-0.7.2
@
text
@@
