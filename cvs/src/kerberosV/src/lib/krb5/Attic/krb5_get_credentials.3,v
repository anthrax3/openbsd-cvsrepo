head	1.3;
access;
symbols
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.1.1.0.28
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.26
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.24
	OPENBSD_5_0:1.1.1.1.0.22
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.20
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.18
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.14
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.16
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.12
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.10
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	HEIMDAL_0_7_2:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@.\" @;


1.3
date	2014.04.22.10.01.32;	author reyk;	state dead;
branches;
next	1.2;

1.2
date	2013.06.17.18.57.44;	author robert;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.14.07.33.24;	author biorn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.04.14.07.33.24;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@.\" Copyright (c) 2004 - 2005 Kungliga Tekniska HÃ¶gskolan
.\" (Royal Institute of Technology, Stockholm, Sweden).
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id: krb5_get_credentials.3,v 1.2 2013/06/17 18:57:44 robert Exp $
.\"
.Dd July 26, 2004
.Dt KRB5_GET_CREDENTIALS 3
.Os HEIMDAL
.Sh NAME
.Nm krb5_get_credentials ,
.Nm krb5_get_credentials_with_flags ,
.Nm krb5_get_kdc_cred ,
.Nm krb5_get_renewed_creds
.Nd get credentials from the KDC using krbtgt
.Sh LIBRARY
Kerberos 5 Library (libkrb5, -lkrb5)
.Sh SYNOPSIS
.In krb5.h
.Ft krb5_error_code
.Fo krb5_get_credentials
.Fa "krb5_context context"
.Fa "krb5_flags options"
.Fa "krb5_ccache ccache"
.Fa "krb5_creds *in_creds"
.Fa "krb5_creds **out_creds"
.Fc
.Ft krb5_error_code
.Fo krb5_get_credentials_with_flags
.Fa "krb5_context context"
.Fa "krb5_flags options"
.Fa "krb5_kdc_flags flags"
.Fa "krb5_ccache ccache"
.Fa "krb5_creds *in_creds"
.Fa "krb5_creds **out_creds"
.Fc
.Ft krb5_error_code
.Fo krb5_get_kdc_cred
.Fa "krb5_context context"
.Fa "krb5_ccache id"
.Fa "krb5_kdc_flags flags"
.Fa "krb5_addresses *addresses"
.Fa "Ticket  *second_ticket"
.Fa "krb5_creds *in_creds"
.Fa "krb5_creds **out_creds"
.Fc
.Ft krb5_error_code
.Fo krb5_get_renewed_creds
.Fa "krb5_context context"
.Fa "krb5_creds *creds"
.Fa "krb5_const_principal client"
.Fa "krb5_ccache ccache"
.Fa "const char *in_tkt_service"
.Fc
.Sh DESCRIPTION
.Fn krb5_get_credentials_with_flags
get credentials specified by
.Fa in_creds->server
and
.Fa in_creds->client
(the rest of the
.Fa in_creds
structure is ignored)
by first looking in the
.Fa ccache
and if doesn't exists or is expired, fetch the credential from the KDC
using the krbtgt in
.Fa ccache .
The credential is returned in
.Fa out_creds
and should be freed using the function
.Fn krb5_free_creds .
.Pp
Valid flags to pass into
.Fa options
argument are:
.Pp
.Bl -tag -width "KRB5_GC_EXPIRED_OK" -compact
.It KRB5_GC_CACHED
Only check the
.Fa ccache ,
don't got out on network to fetch credential.
.It KRB5_GC_USER_USER
Request a user to user ticket.
This option doesn't store the resulting user to user credential in
the
.Fa ccache .
.It KRB5_GC_EXPIRED_OK
returns the credential even if it is expired, default behavior is trying
to refetch the credential from the KDC.
.El
.Pp
.Fa Flags
are KDCOptions, note the caller must fill in the bit-field and not
use the integer associated structure.
.Pp
.Fn krb5_get_credentials
works the same way as
.Fn krb5_get_credentials_with_flags
except that the
.Fa flags
field is missing.
.Pp
.Fn krb5_get_kdc_cred
does the same as the functions above, but the caller must fill in all
the information andits closer to the wire protocol.
.Pp
.Fn krb5_get_renewed_creds
renews a credential given by
.Fa in_tkt_service
(if
.Dv NULL
the default
.Li krbtgt )
using the credential cache
.Fa ccache .
The result is stored in
.Fa creds
and should be freed using
.Fa krb5_free_creds .
.Sh EXAMPLES
Here is a example function that get a credential from a credential cache
.Fa id
or the KDC and returns it to the caller.
.Bd -literal
#include <krb5.h>

int
getcred(krb5_context context, krb5_ccache id, krb5_creds **creds)
{
    krb5_error_code ret;
    krb5_creds in;

    ret = krb5_parse_name(context, "client@@EXAMPLE.COM",
			  &in.client);
    if (ret)
	krb5_err(context, 1, ret, "krb5_parse_name");

    ret = krb5_parse_name(context, "host/server.example.com@@EXAMPLE.COM",
			  &in.server);
    if (ret)
	krb5_err(context, 1, ret, "krb5_parse_name");

    ret = krb5_get_credentials(context, 0, id, &in, creds);
    if (ret)
	krb5_err(context, 1, ret, "krb5_get_credentials");

    return 0;
}
.Ed
.Sh SEE ALSO
.Xr krb5 3 ,
.Xr krb5_get_forwarded_creds 3 ,
.Xr krb5.conf 5
@


1.2
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@d32 1
a32 1
.\" $Id$
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\" Copyright (c) 2004 - 2005 Kungliga Tekniska Högskolan
d32 1
a32 1
.\" $KTH: krb5_get_credentials.3,v 1.3 2005/05/18 04:07:38 lha Exp $
d40 2
a41 3
.Nm krb5_get_cred_from_kdc ,
.Nm krb5_get_cred_from_kdc_opt ,
.Nm krb5_get_kdc_cred
d56 1
a56 1
.Fo krb5_get_credentials
a64 17
.Fo krb5_get_cred_from_kdc
.Fa "krb5_context context"
.Fa "krb5_ccache ccache"
.Fa "krb5_creds *in_creds"
.Fa "krb5_creds **out_creds"
.Fa "krb5_creds ***ret_tgts"
.Fc
.Ft krb5_error_code
.Fo krb5_get_cred_from_kdc_opt
.Fa "krb5_context context"
.Fa "krb5_ccache ccache"
.Fa "krb5_creds *in_creds"
.Fa "krb5_creds **out_creds"
.Fa "krb5_creds ***ret_tgts"
.Fa "krb5_flags flags"
.Fc
.Ft krb5_error_code
d74 8
d84 8
a91 1
get credentials by first looking in the
d96 5
d105 1
a105 1
.Bl -tag -width "KRB5_GC_USER_USER" -compact
d111 2
a112 2
request a user to user ticket.
This options doesn't store the resulting user to user credential in
d116 1
a116 1
returns the credential even if its expired, default behavior is trying
a130 8
.Fn krb5_get_cred_from_kdc
and
.Fn krb5_get_cred_from_kdc_opt
fetches the credential from the KDC very much like
.Fn krb5_get_credentials, but doesn't look in the
.Fa ccache
if the credential exists there first.
.Pp
d134 44
@


1.1.1.1
log
@Import of heimdal-0.7.2
@
text
@@
