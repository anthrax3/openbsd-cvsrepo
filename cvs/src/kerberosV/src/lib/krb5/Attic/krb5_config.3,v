head	1.3;
access;
symbols
	OPENBSD_5_3:1.2.0.28
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.26
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.24
	OPENBSD_5_0:1.2.0.22
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.20
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.18
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.12
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	HEIMDAL_0_7_2:1.1.1.4
	OPENBSD_3_9:1.1.1.3.0.12
	OPENBSD_3_9_BASE:1.1.1.3
	OPENBSD_3_8:1.1.1.3.0.10
	OPENBSD_3_8_BASE:1.1.1.3
	OPENBSD_3_7:1.1.1.3.0.8
	OPENBSD_3_7_BASE:1.1.1.3
	HEIMDAL_0_6_3:1.1.1.3
	OPENBSD_3_6:1.1.1.3.0.6
	OPENBSD_3_6_BASE:1.1.1.3
	OPENBSD_3_5:1.1.1.3.0.4
	OPENBSD_3_5_BASE:1.1.1.3
	OPENBSD_3_4:1.1.1.3.0.2
	OPENBSD_3_4_BASE:1.1.1.3
	HEIMDAL_0_6:1.1.1.3
	HEIMDAL_0_6RC1:1.1.1.3
	OPENBSD_3_3:1.1.1.2.0.8
	OPENBSD_3_3_BASE:1.1.1.2
	OPENBSD_3_2:1.1.1.2.0.6
	OPENBSD_3_2_BASE:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.4
	OPENBSD_3_1_BASE:1.1.1.2
	HEIMDAL_0_4e:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.2
	OPENBSD_3_0_BASE:1.1.1.2
	HEIMDAL_0_3f:1.1.1.2
	HEIMDAL_0_3e:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@.\" @;


1.3
date	2013.06.17.18.57.44;	author robert;	state dead;
branches;
next	1.2;

1.2
date	2006.06.13.07.07.21;	author biorn;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.25.07.50.51;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.25.07.50.51;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.06.22.21.24.29;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.02.15.55;	author hin;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2006.04.14.07.33.23;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@.\" Copyright (c) 2000 - 2004 Kungliga Tekniska Högskolan
.\" (Royal Institute of Technology, Stockholm, Sweden).
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"
.\" $KTH: krb5_config.3,v 1.8 2004/03/20 18:15:01 lha Exp $
.\"
.Dd March 20, 2004
.Dt KRB5_CONFIG_GET 3
.Os HEIMDAL
.Sh NAME
.Nm krb5_config_file_free ,
.Nm krb5_config_free_strings ,
.Nm krb5_config_get ,
.Nm krb5_config_get_bool ,
.Nm krb5_config_get_bool_default ,
.Nm krb5_config_get_int ,
.Nm krb5_config_get_int_default ,
.Nm krb5_config_get_list ,
.Nm krb5_config_get_next ,
.Nm krb5_config_get_string ,
.Nm krb5_config_get_string_default ,
.Nm krb5_config_get_strings ,
.Nm krb5_config_get_time ,
.Nm krb5_config_get_time_default ,
.Nm krb5_config_parse_file ,
.Nm krb5_config_parse_file_multi ,
.Nm krb5_config_vget ,
.Nm krb5_config_vget_bool ,
.Nm krb5_config_vget_bool_default ,
.Nm krb5_config_vget_int ,
.Nm krb5_config_vget_int_default ,
.Nm krb5_config_vget_list ,
.Nm krb5_config_vget_next ,
.Nm krb5_config_vget_string ,
.Nm krb5_config_vget_string_default ,
.Nm krb5_config_vget_strings ,
.Nm krb5_config_vget_time ,
.Nm krb5_config_vget_time_default
.Nd get configuration value
.Sh LIBRARY
Kerberos 5 Library (libkrb5, -lkrb5)
.Sh SYNOPSIS
.In krb5.h
.Ft krb5_error_code
.Fo krb5_config_file_free
.Fa "krb5_context context"
.Fa "krb5_config_section *s"
.Fc
.Ft void
.Fo krb5_config_free_strings
.Fa "char **strings"
.Fc
.Ft "const void *"
.Fo krb5_config_get
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "int type"
.Fa "..."
.Fc
.Ft krb5_boolean
.Fo krb5_config_get_bool
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "..."
.Fc
.Ft krb5_boolean
.Fo krb5_config_get_bool_default
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "krb5_boolean def_value"
.Fa "..."
.Fc
.Ft int
.Fo krb5_config_get_int
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "..."
.Fc
.Ft int
.Fo krb5_config_get_int_default
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "int def_value"
.Fa "..."
.Fc
.Ft const char*
.Fo krb5_config_get_string
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "..."
.Fc
.Ft const char*
.Fo krb5_config_get_string_default
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "const char *def_value"
.Fa "..."
.Fc
.Ft "char**"
.Fo krb5_config_get_strings
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "..."
.Fc
.Ft int
.Fo krb5_config_get_time
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "..."
.Fc
.Ft int
.Fo krb5_config_get_time_default
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "int def_value"
.Fa "..."
.Fc
.Ft krb5_error_code
.Fo krb5_config_parse_file
.Fa "krb5_context context"
.Fa "const char *fname"
.Fa "krb5_config_section **res"
.Fc
.Ft krb5_error_code
.Fo krb5_config_parse_file_multi
.Fa "krb5_context context"
.Fa "const char *fname"
.Fa "krb5_config_section **res"
.Fc
.Ft "const void *"
.Fo krb5_config_vget
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "int type"
.Fa "va_list args"
.Fc
.Ft krb5_boolean
.Fo krb5_config_vget_bool
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft krb5_boolean
.Fo krb5_config_vget_bool_default
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "krb5_boolean def_value"
.Fa "va_list args"
.Fc
.Ft int
.Fo krb5_config_vget_int
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft int
.Fo krb5_config_vget_int_default
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "int def_value"
.Fa "va_list args"
.Fc
.Ft "const krb5_config_binding *"
.Fo krb5_config_vget_list
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft "const void *"
.Fo krb5_config_vget_next
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "const krb5_config_binding **pointer"
.Fa "int type"
.Fa "va_list args"
.Fc
.Ft "const char *"
.Fo krb5_config_vget_string
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft "const char *"
.Fo krb5_config_vget_string_default
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "const char *def_value"
.Fa "va_list args"
.Fc
.Ft char **
.Fo krb5_config_vget_strings
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft int
.Fo krb5_config_vget_time
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft int
.Fo krb5_config_vget_time_default
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "int def_value"
.Fa "va_list args"
.Fc
.Sh DESCRIPTION
These functions get values from the
.Xr krb5.conf 5
configuration file, or another configuration database specified by the
.Fa c
parameter.
.Pp
The variable arguments should be a list of strings naming each
subsection to look for. For example:
.Bd -literal -offset indent
krb5_config_get_bool_default(context, NULL, FALSE, 
     "libdefaults", "log_utc", NULL);
.Ed
.Pp
gets the boolean value for the
.Dv log_utc
option, defaulting to
.Dv FALSE .
.Pp
.Fn krb5_config_get_bool_default
will convert the option value to a boolean value, where
.Sq yes ,
.Sq true ,
and any non-zero number means
.Dv TRUE ,
and any other value
.Dv FALSE .
.Pp
.Fn krb5_config_get_int_default
will convert the value to an integer.
.Pp
.Fn krb5_config_get_time_default
will convert the value to a period of time (not a time stamp) in
seconds, so the string
.Sq 2 weeks
will be converted to
1209600 (2 * 7 * 24 * 60 * 60).
.Pp
.Fn krb5_config_free_strings
free
.Fa strings
as returned by
.Fn krb5_config_get_strings
and
.Fn krb5_config_vget_strings .
.Pp
.Fn krb5_config_file_free
free the result of
.Fn krb5_config_parse_file
and
.Fn krb5_config_parse_file_multi .
.Sh SEE ALSO
.Xr krb5_appdefault 3 ,
.Xr krb5_init_context 3 ,
.Xr krb5.conf 5
.Sh BUGS
For the default functions, other than for the string case, there's no
way to tell whether there was a value specified or not.
@


1.2
log
@Grammar fixes, both mdoc & english.
Improved and approved by jmc@@
@
text
@@


1.1
log
@Initial revision
@
text
@d1 36
a36 4
.\" Copyright (c) 2000 Kungliga Tekniska Högskolan
.\" $KTH: krb5_config.3,v 1.1 2000/07/25 10:22:46 joda Exp $
.Dd July 25, 2000
.Dt KRB5_CONFIG 3
d39 4
d44 1
d46 3
d50 20
a69 3
.Nm krb5_config_get_time_default
.Nd Get configuration value

d71 17
a87 2
.Fd #include <krb5.h>

d89 18
a106 1
.Fn krb5_config_get_bool_default "krb5_context context" "krb5_config_section *c" "krb5_boolean def_value" "..."
d108 6
a113 1
.Fn krb5_config_get_int_default "krb5_context context" "krb5_config_section *c" "int def_value" "..."
d115 63
a177 1
.Fn krb5_config_get_string_default "krb5_context context" "krb5_config_section *c" "const char *def_value" "..."
d179 58
a236 2
.Fn krb5_config_get_time_default "krb5_context context" "krb5_config_section *c" "int def_value" "..."

d238 2
a239 3

These functions get values from the 
.Xr krb5.conf 5 
d243 1
a243 1

a245 1

d247 2
a248 1
krb5_config_get_bool_default(context, NULL, FALSE, "libdefaults", "log_utc", NULL)
d250 1
a250 1

d255 1
a255 1

d258 1
a258 1
.Sq yes , 
d262 1
a262 1
and any other value 
d264 1
a264 1

d267 1
a267 1

d274 14
a287 6

.Sh BUGS

Other than for the string case, there's no way to tell whether there
was a value specified or not.

d290 1
d292 3
@


1.1.1.1
log
@Import of heimdal-0.3e
@
text
@@


1.1.1.2
log
@Import of heimdal-0.3f

Lots of changes, highlights include:

 * change default keytab to ANY:FILE:/etc/krb5.keytab,krb4:/etc/srvtab,
   the new keytab type that tries both of these in order (SRVTAB is
   also an alias for krb4:)

 * improve error reporting and error handling (error messages should
   be more detailed and more useful)

 * the API is closer to what MIT krb5 is using

 * more compatible with windows 2000

 * removed some memory leaks

 * bug fixes
@
text
@d2 1
a2 1
.\" $KTH: krb5_config.3,v 1.2 2001/05/02 08:59:23 assar Exp $
d11 2
a12 1
.Nd get configuration value
d15 1
d24 1
d26 1
d32 1
a32 1
.Pp
d35 1
d39 1
a39 1
.Pp
d44 1
a44 1
.Pp
d53 1
a53 1
.Pp
d56 1
a56 1
.Pp
d63 1
d65 1
d68 1
@


1.1.1.3
log
@Import of heimdal-0.6rc1
@
text
@d2 1
a2 1
.\" $KTH: krb5_config.3,v 1.5 2003/04/16 13:58:14 lha Exp $
a11 2
.Sh LIBRARY
Kerberos 5 Library (libkrb5, -lkrb5)
d13 1
a13 1
.In krb5.h
d23 2
a24 2
These functions get values from the
.Xr krb5.conf 5
d42 1
a42 1
.Sq yes ,
d46 1
a46 1
and any other value
@


1.1.1.4
log
@Import of heimdal-0.7.2
@
text
@d1 4
a4 36
.\" Copyright (c) 2000 - 2004 Kungliga Tekniska Högskolan
.\" (Royal Institute of Technology, Stockholm, Sweden).
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"
.\" $KTH: krb5_config.3,v 1.8 2004/03/20 18:15:01 lha Exp $
.\"
.Dd March 20, 2004
.Dt KRB5_CONFIG_GET 3
a6 4
.Nm krb5_config_file_free ,
.Nm krb5_config_free_strings ,
.Nm krb5_config_get ,
.Nm krb5_config_get_bool ,
a7 1
.Nm krb5_config_get_int ,
a8 3
.Nm krb5_config_get_list ,
.Nm krb5_config_get_next ,
.Nm krb5_config_get_string ,
d10 1
a10 17
.Nm krb5_config_get_strings ,
.Nm krb5_config_get_time ,
.Nm krb5_config_get_time_default ,
.Nm krb5_config_parse_file ,
.Nm krb5_config_parse_file_multi ,
.Nm krb5_config_vget ,
.Nm krb5_config_vget_bool ,
.Nm krb5_config_vget_bool_default ,
.Nm krb5_config_vget_int ,
.Nm krb5_config_vget_int_default ,
.Nm krb5_config_vget_list ,
.Nm krb5_config_vget_next ,
.Nm krb5_config_vget_string ,
.Nm krb5_config_vget_string_default ,
.Nm krb5_config_vget_strings ,
.Nm krb5_config_vget_time ,
.Nm krb5_config_vget_time_default
a15 16
.Ft krb5_error_code
.Fo krb5_config_file_free
.Fa "krb5_context context"
.Fa "krb5_config_section *s"
.Fc
.Ft void
.Fo krb5_config_free_strings
.Fa "char **strings"
.Fc
.Ft "const void *"
.Fo krb5_config_get
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "int type"
.Fa "..."
.Fc
d17 1
a17 18
.Fo krb5_config_get_bool
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "..."
.Fc
.Ft krb5_boolean
.Fo krb5_config_get_bool_default
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "krb5_boolean def_value"
.Fa "..."
.Fc
.Ft int
.Fo krb5_config_get_int
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "..."
.Fc
d19 1
a19 6
.Fo krb5_config_get_int_default
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "int def_value"
.Fa "..."
.Fc
d21 1
a21 63
.Fo krb5_config_get_string
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "..."
.Fc
.Ft const char*
.Fo krb5_config_get_string_default
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "const char *def_value"
.Fa "..."
.Fc
.Ft "char**"
.Fo krb5_config_get_strings
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "..."
.Fc
.Ft int
.Fo krb5_config_get_time
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "..."
.Fc
.Ft int
.Fo krb5_config_get_time_default
.Fa "krb5_context context"
.Fa "krb5_config_section *c"
.Fa "int def_value"
.Fa "..."
.Fc
.Ft krb5_error_code
.Fo krb5_config_parse_file
.Fa "krb5_context context"
.Fa "const char *fname"
.Fa "krb5_config_section **res"
.Fc
.Ft krb5_error_code
.Fo krb5_config_parse_file_multi
.Fa "krb5_context context"
.Fa "const char *fname"
.Fa "krb5_config_section **res"
.Fc
.Ft "const void *"
.Fo krb5_config_vget
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "int type"
.Fa "va_list args"
.Fc
.Ft krb5_boolean
.Fo krb5_config_vget_bool
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft krb5_boolean
.Fo krb5_config_vget_bool_default
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "krb5_boolean def_value"
.Fa "va_list args"
.Fc
d23 1
a23 58
.Fo krb5_config_vget_int
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft int
.Fo krb5_config_vget_int_default
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "int def_value"
.Fa "va_list args"
.Fc
.Ft "const krb5_config_binding *"
.Fo krb5_config_vget_list
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft "const void *"
.Fo krb5_config_vget_next
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "const krb5_config_binding **pointer"
.Fa "int type"
.Fa "va_list args"
.Fc
.Ft "const char *"
.Fo krb5_config_vget_string
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft "const char *"
.Fo krb5_config_vget_string_default
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "const char *def_value"
.Fa "va_list args"
.Fc
.Ft char **
.Fo krb5_config_vget_strings
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft int
.Fo krb5_config_vget_time
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "va_list args"
.Fc
.Ft int
.Fo krb5_config_vget_time_default
.Fa "krb5_context context"
.Fa "const krb5_config_section *c"
.Fa "int def_value"
.Fa "va_list args"
.Fc
d34 1
a34 2
krb5_config_get_bool_default(context, NULL, FALSE, 
     "libdefaults", "log_utc", NULL);
d60 3
a62 14
.Pp
.Fn krb5_config_free_strings
free
.Fa strings
as returned by
.Fn krb5_config_get_strings
and
.Fn krb5_config_vget_strings .
.Pp
.Fn krb5_config_file_free
free the result of
.Fn krb5_config_parse_file
and
.Fa krb5_config_parse_file_multi .
a64 1
.Xr krb5_init_context 3 ,
a65 3
.Sh BUGS
For the default functions, other than for the string case, there's no
way to tell whether there was a value specified or not.
@


