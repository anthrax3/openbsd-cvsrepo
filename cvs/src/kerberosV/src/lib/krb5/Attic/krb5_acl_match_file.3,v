head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.28
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.26
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.24
	OPENBSD_5_0:1.2.0.22
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.20
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.18
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.12
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	HEIMDAL_0_7_2:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@.\" @;


1.4
date	2014.04.22.10.01.32;	author reyk;	state dead;
branches;
next	1.3;

1.3
date	2013.06.17.18.57.44;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.13.07.07.21;	author biorn;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.14.07.33.22;	author biorn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.04.14.07.33.22;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@.\" Copyright (c) 2004, 2006 Kungliga Tekniska HÃ¶gskolan
.\" (Royal Institute of Technology, Stockholm, Sweden).
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id: krb5_acl_match_file.3,v 1.3 2013/06/17 18:57:44 robert Exp $
.\"
.Dd May 12, 2006
.Dt KRB5_ACL_MATCH_FILE 3
.Os HEIMDAL
.Sh NAME
.Nm krb5_acl_match_file ,
.Nm krb5_acl_match_string
.Nd ACL matching functions
.Sh LIBRARY
Kerberos 5 Library (libkrb5, -lkrb5)
.Sh SYNOPSIS
.Ft krb5_error_code
.Fo krb5_acl_match_file
.Fa "krb5_context context"
.Fa "const char *file"
.Fa "const char *format"
.Fa "..."
.Fc
.Ft krb5_error_code
.Fo krb5_acl_match_string
.Fa "krb5_context context"
.Fa "const char *string"
.Fa "const char *format"
.Fa "..."
.Fc
.Sh DESCRIPTION
.Nm krb5_acl_match_file
matches ACL format against each line in a file.
Lines starting with # are treated like comments and ignored.
.Pp
.Nm krb5_acl_match_string
matches ACL format against a string.
.Pp
The ACL format has three format specifiers: s, f, and r.
Each specifier will retrieve one argument from the variable arguments
for either matching or storing data.
The input string is split up using " " and "\et" as a delimiter; multiple
" " and "\et" in a row are considered to be the same.
.Pp
.Bl -tag -width "fXX" -offset indent
.It s
Matches a string using
.Xr strcmp 3
(case sensitive).
.It f
Matches the string with
.Xr fnmatch 3 .
The
.Fa flags
argument (the last argument) passed to the fnmatch function is 0.
.It r
Returns a copy of the string in the char ** passed in; the copy must be
freed with
.Xr free 3 .
There is no need to
.Xr free 3
the string on error: the function will clean up and set the pointer to
.Dv NULL .
.El
.Pp
All unknown format specifiers cause an error.
.Sh EXAMPLES
.Bd -literal -offset indent
char *s;

ret = krb5_acl_match_string(context, "foo", "s", "foo");
if (ret)
    krb5_errx(context, 1, "acl didn't match");
ret = krb5_acl_match_string(context, "foo foo baz/kaka",
    "ss", "foo", &s, "foo/*");
if (ret) {
    /* no need to free(s) on error */
    assert(s == NULL);
    krb5_errx(context, 1, "acl didn't match");
}
free(s);
.Ed
.Sh SEE ALSO
.Xr krb5 3
@


1.3
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@d32 1
a32 1
.\" $Id$
@


1.2
log
@Grammar fixes, both mdoc & english.
Improved and approved by jmc@@
@
text
@d1 1
a1 1
.\" Copyright (c) 2004 Kungliga Tekniska Högskolan
d32 1
a32 1
.\" $KTH: krb5_acl_match_file.3,v 1.2 2004/03/31 04:23:18 lha Exp $
d34 1
a34 1
.Dd March 20, 2004
d66 1
a66 1
The ACL format has three format specifiers: s, f and r.
@


1.1
log
@Initial revision
@
text
@d40 1
a40 1
.Nd ACL matching functions .
d66 5
a70 5
The ACL format have tree format specifiers, s, f, r.
Each specifier will pull of one argument from the varable arguments
for ether maching or storing data.
The input string is split up using " " and "\t" as delimiter, multiple
" " and "\t" in a row are considered to be the same.
d72 1
a72 1
.Bl -tag -width "f" -offset indent
d74 3
a76 1
matches a string using strcmp (case sensetive).
d78 1
a78 1
matches the string with
d80 1
a80 1
The 
d82 1
a82 1
argument (the last argument) passed to the fnmatch function is 0. 
d84 1
a84 1
returns a copy the string in the char ** passed in, the copy must be
d89 1
a89 1
the string on error, the function will clean up and set the pointer to
d93 1
a93 2
All unknown format specifiers causes an error.
.Pp
d95 2
a96 2
.Bd -literal
    char *s;
d98 11
a108 11
    ret = krb5_acl_match_string(context, "foo", "s", "foo");
    if (ret)
	krb5_errx(context, 1, "acl didn't match");
    ret = krb5_acl_match_string(context, "foo foo baz/kaka",
        "ss", "foo", &s, "foo/*");
    if (ret) {
        /* no need to free(s) on error */
	assert(s == NULL);
	krb5_errx(context, 1, "acl didn't match");
    }
    free(s);
@


1.1.1.1
log
@Import of heimdal-0.7.2
@
text
@@
