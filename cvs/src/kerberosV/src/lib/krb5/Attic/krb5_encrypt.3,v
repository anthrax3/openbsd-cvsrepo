head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.28
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.26
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.24
	OPENBSD_5_0:1.4.0.22
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.20
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.18
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.14
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.16
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.12
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.10
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.8
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.6
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	HEIMDAL_0_7_2:1.1.1.4
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.1.3.0.8
	OPENBSD_3_7_BASE:1.1.1.3
	HEIMDAL_0_6_3:1.1.1.3
	OPENBSD_3_6:1.1.1.3.0.6
	OPENBSD_3_6_BASE:1.1.1.3
	OPENBSD_3_5:1.1.1.3.0.4
	OPENBSD_3_5_BASE:1.1.1.3
	OPENBSD_3_4:1.1.1.3.0.2
	OPENBSD_3_4_BASE:1.1.1.3
	HEIMDAL_0_6:1.1.1.3
	HEIMDAL_0_6RC1:1.1.1.3
	OPENBSD_3_3:1.1.1.2.0.6
	OPENBSD_3_3_BASE:1.1.1.2
	OPENBSD_3_2:1.1.1.2.0.4
	OPENBSD_3_2_BASE:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.2
	OPENBSD_3_1_BASE:1.1.1.2
	HEIMDAL_0_4e:1.1.1.2
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	HEIMDAL_0_3f:1.1.1.1
	HEIMDAL_0_3e:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@.\" @;


1.6
date	2014.04.22.10.01.32;	author reyk;	state dead;
branches;
next	1.5;

1.5
date	2013.06.17.18.57.44;	author robert;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.30.10.14.43;	author biorn;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.14.08.15.04;	author biorn;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.02.04.00.08;	author david;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.25.07.50.51;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.25.07.50.51;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.02.06.08.55.32;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.02.15.55;	author hin;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2006.04.14.07.33.23;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.6
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@.\" Copyright (c) 1999 - 2004 Kungliga Tekniska HÃ¶gskolan
.\" (Royal Institute of Technology, Stockholm, Sweden).
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id: krb5_encrypt.3,v 1.5 2013/06/17 18:57:44 robert Exp $
.\"
.Dd March 20, 2004
.Dt KRB5_ENCRYPT 3
.Os HEIMDAL
.Sh NAME
.Nm krb5_crypto_getblocksize ,
.Nm krb5_crypto_getconfoundersize
.Nm krb5_crypto_getenctype ,
.Nm krb5_crypto_getpadsize ,
.Nm krb5_crypto_overhead ,
.Nm krb5_decrypt ,
.Nm krb5_decrypt_EncryptedData ,
.Nm krb5_decrypt_ivec ,
.Nm krb5_decrypt_ticket ,
.Nm krb5_encrypt ,
.Nm krb5_encrypt_EncryptedData ,
.Nm krb5_encrypt_ivec ,
.Nm krb5_enctype_disable ,
.Nm krb5_enctype_keysize ,
.Nm krb5_enctype_to_string ,
.Nm krb5_enctype_valid ,
.Nm krb5_get_wrapped_length ,
.Nm krb5_string_to_enctype
.Nd "encrypt and decrypt data, set and get encryption type parameters"
.Sh LIBRARY
Kerberos 5 Library (libkrb5, -lkrb5)
.Sh SYNOPSIS
.In krb5.h
.Ft krb5_error_code
.Fo krb5_encrypt
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "void *data"
.Fa "size_t len"
.Fa "krb5_data *result"
.Fc
.Ft krb5_error_code
.Fo krb5_encrypt_EncryptedData
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "void *data"
.Fa "size_t len"
.Fa "int kvno"
.Fa "EncryptedData *result"
.Fc
.Ft krb5_error_code
.Fo krb5_encrypt_ivec
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "void *data"
.Fa "size_t len"
.Fa "krb5_data *result"
.Fa "void *ivec"
.Fc
.Ft krb5_error_code
.Fo krb5_decrypt
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "void *data"
.Fa "size_t len"
.Fa "krb5_data *result"
.Fc
.Ft krb5_error_code
.Fo krb5_decrypt_EncryptedData
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "EncryptedData *e"
.Fa "krb5_data *result"
.Fc
.Ft krb5_error_code
.Fo krb5_decrypt_ivec
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "void *data"
.Fa "size_t len"
.Fa "krb5_data *result"
.Fa "void *ivec"
.Fc
.Ft krb5_error_code
.Fo krb5_decrypt_ticket
.Fa "krb5_context context"
.Fa "Ticket *ticket"
.Fa "krb5_keyblock *key"
.Fa "EncTicketPart *out"
.Fa "krb5_flags flags"
.Fc
.Ft krb5_error_code
.Fo krb5_crypto_getblocksize
.Fa "krb5_context context"
.Fa "size_t *blocksize"
.Fc
.Ft krb5_error_code
.Fo krb5_crypto_getenctype
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "krb5_enctype *enctype"
.Fc
.Ft krb5_error_code
.Fo krb5_crypto_getpadsize
.Fa "krb5_context context"
.Fa size_t *padsize"
.Fc
.Ft krb5_error_code
.Fo krb5_crypto_getconfoundersize
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa size_t *confoundersize"
.Fc
.Ft krb5_error_code
.Fo krb5_enctype_keysize
.Fa "krb5_context context"
.Fa "krb5_enctype type"
.Fa "size_t *keysize"
.Fc
.Ft krb5_error_code
.Fo krb5_crypto_overhead
.Fa "krb5_context context"
.Fa size_t *padsize"
.Fc
.Ft krb5_error_code
.Fo krb5_string_to_enctype
.Fa "krb5_context context"
.Fa "const char *string"
.Fa "krb5_enctype *etype"
.Fc
.Ft krb5_error_code
.Fo krb5_enctype_to_string
.Fa "krb5_context context"
.Fa "krb5_enctype etype"
.Fa "char **string"
.Fc
.Ft krb5_error_code
.Fo krb5_enctype_valid
.Fa "krb5_context context"
.Fa "krb5_enctype etype"
.Fc
.Ft void
.Fo krb5_enctype_disable
.Fa "krb5_context context"
.Fa "krb5_enctype etype"
.Fc
.Ft size_t
.Fo krb5_get_wrapped_length
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "size_t data_len"
.Fc
.Sh DESCRIPTION
These functions are used to encrypt and decrypt data.
.Pp
.Fn krb5_encrypt_ivec
puts the encrypted version of
.Fa data
(of size
.Fa len )
in
.Fa result .
If the encryption type supports using derived keys,
.Fa usage
should be the appropriate key-usage.
.Fa ivec
is a pointer to a initial IV, it is modified to the end IV at the end of
the round.
Ivec should be the size of
If
.Dv NULL
is passed in, the default IV is used.
.Fn krb5_encrypt
does the same as
.Fn krb5_encrypt_ivec
but with
.Fa ivec
being
.Dv NULL .
.Fn krb5_encrypt_EncryptedData
does the same as
.Fn krb5_encrypt ,
but it puts the encrypted data in a
.Fa EncryptedData
structure instead. If
.Fa kvno
is not zero, it will be put in the (optional)
.Fa kvno
field in the
.Fa EncryptedData .
.Pp
.Fn krb5_decrypt_ivec ,
.Fn krb5_decrypt ,
and
.Fn krb5_decrypt_EncryptedData
works similarly.
.Pp
.Fn krb5_decrypt_ticket
decrypts the encrypted part of
.Fa ticket
with
.Fa key .
.Fn krb5_decrypt_ticket
also verifies the timestamp in the ticket, invalid flag and if the KDC
haven't verified the transited path, the transit path.
.Pp
.Fn krb5_enctype_keysize ,
.Fn krb5_crypto_getconfoundersize ,
.Fn krb5_crypto_getblocksize ,
.Fn krb5_crypto_getenctype ,
.Fn krb5_crypto_getpadsize ,
.Fn krb5_crypto_overhead
all returns various (sometimes) useful information from a crypto context.
.Fn krb5_crypto_overhead
is the combination of krb5_crypto_getconfoundersize,
krb5_crypto_getblocksize and krb5_crypto_getpadsize and return the
maximum overhead size.
.Pp
.Fn krb5_enctype_to_string
converts a encryption type number to a string that can be printable
and stored. The strings returned should be freed with
.Xr free 3 .
.Pp
.Fn krb5_string_to_enctype
converts a encryption type strings to a encryption type number that
can use used for other Kerberos crypto functions.
.Pp
.Fn krb5_enctype_valid
returns 0 if the encrypt is supported and not disabled, otherwise and
error code is returned.
.Pp
.Fn krb5_enctype_disable
(globally, for all contextes) disables the
.Fa enctype .
.Pp
.Fn krb5_get_wrapped_length
returns the size of an encrypted packet by
.Fa crypto
of length
.Fa data_len .
.\" .Sh EXAMPLE
.\" .Sh BUGS
.Sh SEE ALSO
.Xr krb5_create_checksum 3 ,
.Xr krb5_crypto_init 3
@


1.5
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@d32 1
a32 1
.\" $Id$
@


1.4
log
@Fix long .Nd lines. Help from jmc@@
@
text
@d1 1
a1 1
.\" Copyright (c) 1999 - 2004 Kungliga Tekniska Högskolan
d32 1
a32 1
.\" $KTH: krb5_encrypt.3,v 1.15.4.1 2005/10/26 10:06:18 lha Exp $
d42 1
d144 1
a144 1
.Fa "krb5_crypto crypto
d154 5
d200 1
a200 1
is a pointer to a initial IV, its modified to the end IV at the end of
d202 1
a202 1
Ivec should be the size of 
d232 1
a232 1
decrypts the encrypted part of 
d244 2
a245 1
.Fn krb5_crypto_getpadsize
d247 4
@


1.3
log
@Merge of heimdal 0.7.2
Tested by todd & beck, ok beck.
@
text
@d55 1
a55 1
.Nd encrypt and decrypt data, set and get encryption type parameters
@


1.2
log
@.Dd cleanup
@
text
@d1 3
a3 30
.\" Copyright (c) 1999 Kungliga Tekniska Högskolan
.\" (Royal Institute of Technology, Stockholm, Sweden). 
.\" All rights reserved. 
.\"
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions 
.\" are met: 
.\"
.\" 1. Redistributions of source code must retain the above copyright 
.\"    notice, this list of conditions and the following disclaimer. 
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright 
.\"    notice, this list of conditions and the following disclaimer in the 
.\"    documentation and/or other materials provided with the distribution. 
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors 
.\"    may be used to endorse or promote products derived from this software 
.\"    without specific prior written permission. 
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
.\" SUCH DAMAGE. 
d5 3
a7 1
.\" $KTH: krb5_encrypt.3,v 1.7 2003/04/16 13:58:15 lha Exp $
d9 26
a34 1
.Dd April 7, 1999
d38 4
d44 2
d47 9
a55 2
.Nm krb5_encrypt_EncryptedData
.Nd encrypt and decrypt data
d61 79
a139 1
.Fn krb5_encrypt "krb5_context context" "krb5_crypto crypto" "unsigned usage" "void *data" "size_t len" "krb5_data *result"
d141 5
a145 1
.Fn krb5_encrypt_EncryptedData "krb5_context context" "krb5_crypto crypto" "unsigned usage" "void *data" "size_t len" "int kvno" "EncryptedData *result"
d147 5
a151 1
.Fn krb5_decrypt "krb5_context context" "krb5_crypto crypto" "unsigned usage" "void *data" "size_t len" "krb5_data *result"
d153 27
a179 1
.Fn krb5_decrypt_EncryptedData "krb5_context context" "krb5_crypto crypto" "unsigned usage" "EncryptedData *e" "krb5_data *result"
d183 1
a183 1
.Fn krb5_encrypt
d193 14
d214 3
a216 2
is not zero, it will be put in the
.Fa kvno field in the
d219 1
d224 39
@


1.1
log
@Initial revision
@
text
@d2 33
a34 2
.\" $KTH: krb5_encrypt.3,v 1.2 2001/01/26 22:43:22 assar Exp $
.Dd April  7, 1999
d38 3
a40 3
.Nm krb5_decrypt , 
.Nm krb5_decrypt_EncryptedData , 
.Nm krb5_encrypt , 
d43 2
d46 1
a46 1
.Fd #include <krb5.h>
d59 1
a59 1
puts the encrypted version of 
d65 1
a65 1
If the encryption type supports using derived keys, 
d72 4
a75 4
.Fa EncryptedData 
structure instead. If 
.Fa kvno 
is not zero, it will be put in the 
d86 2
a87 2
.Xr krb5_crypto_init 3 ,
.Xr krb5_create_checksum 3
@


1.1.1.1
log
@Import of heimdal-0.3e
@
text
@@


1.1.1.2
log
@Import of heimdal-0.4e
@
text
@d2 1
a2 1
.\" $KTH: krb5_encrypt.3,v 1.3 2001/07/12 08:42:28 assar Exp $
d53 2
a54 2
.Xr krb5_create_checksum 3 ,
.Xr krb5_crypto_init 3
@


1.1.1.3
log
@Import of heimdal-0.6rc1
@
text
@d2 1
a2 32
.\" (Royal Institute of Technology, Stockholm, Sweden). 
.\" All rights reserved. 
.\"
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions 
.\" are met: 
.\"
.\" 1. Redistributions of source code must retain the above copyright 
.\"    notice, this list of conditions and the following disclaimer. 
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright 
.\"    notice, this list of conditions and the following disclaimer in the 
.\"    documentation and/or other materials provided with the distribution. 
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors 
.\"    may be used to endorse or promote products derived from this software 
.\"    without specific prior written permission. 
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
.\" SUCH DAMAGE. 
.\"
.\" $KTH: krb5_encrypt.3,v 1.7 2003/04/16 13:58:15 lha Exp $
.\"
d7 3
a9 3
.Nm krb5_decrypt ,
.Nm krb5_decrypt_EncryptedData ,
.Nm krb5_encrypt ,
a11 2
.Sh LIBRARY
Kerberos 5 Library (libkrb5, -lkrb5)
d13 1
a13 1
.In krb5.h
d26 1
a26 1
puts the encrypted version of
d32 1
a32 1
If the encryption type supports using derived keys,
d39 4
a42 4
.Fa EncryptedData
structure instead. If
.Fa kvno
is not zero, it will be put in the
@


1.1.1.4
log
@Import of heimdal-0.7.2
@
text
@d1 30
a30 3
.\" Copyright (c) 1999 - 2004 Kungliga Tekniska Högskolan
.\" (Royal Institute of Technology, Stockholm, Sweden).
.\" All rights reserved.
d32 1
a32 3
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
d34 1
a34 26
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $KTH: krb5_encrypt.3,v 1.15.4.1 2005/10/26 10:06:18 lha Exp $
.\"
.Dd March 20, 2004
a37 4
.Nm krb5_crypto_getblocksize ,
.Nm krb5_crypto_getconfoundersize
.Nm krb5_crypto_getenctype ,
.Nm krb5_crypto_getpadsize ,
a39 2
.Nm krb5_decrypt_ivec ,
.Nm krb5_decrypt_ticket ,
d41 2
a42 9
.Nm krb5_encrypt_EncryptedData ,
.Nm krb5_encrypt_ivec ,
.Nm krb5_enctype_disable ,
.Nm krb5_enctype_keysize ,
.Nm krb5_enctype_to_string ,
.Nm krb5_enctype_valid ,
.Nm krb5_get_wrapped_length ,
.Nm krb5_string_to_enctype
.Nd encrypt and decrypt data, set and get encryption type parameters
d48 1
a48 79
.Fo krb5_encrypt
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "void *data"
.Fa "size_t len"
.Fa "krb5_data *result"
.Fc
.Ft krb5_error_code
.Fo krb5_encrypt_EncryptedData
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "void *data"
.Fa "size_t len"
.Fa "int kvno"
.Fa "EncryptedData *result"
.Fc
.Ft krb5_error_code
.Fo krb5_encrypt_ivec
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "void *data"
.Fa "size_t len"
.Fa "krb5_data *result"
.Fa "void *ivec"
.Fc
.Ft krb5_error_code
.Fo krb5_decrypt
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "void *data"
.Fa "size_t len"
.Fa "krb5_data *result"
.Fc
.Ft krb5_error_code
.Fo krb5_decrypt_EncryptedData
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "EncryptedData *e"
.Fa "krb5_data *result"
.Fc
.Ft krb5_error_code
.Fo krb5_decrypt_ivec
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "unsigned usage"
.Fa "void *data"
.Fa "size_t len"
.Fa "krb5_data *result"
.Fa "void *ivec"
.Fc
.Ft krb5_error_code
.Fo krb5_decrypt_ticket
.Fa "krb5_context context"
.Fa "Ticket *ticket"
.Fa "krb5_keyblock *key"
.Fa "EncTicketPart *out"
.Fa "krb5_flags flags"
.Fc
.Ft krb5_error_code
.Fo krb5_crypto_getblocksize
.Fa "krb5_context context"
.Fa "size_t *blocksize"
.Fc
.Ft krb5_error_code
.Fo krb5_crypto_getenctype
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "krb5_enctype *enctype"
.Fc
.Ft krb5_error_code
.Fo krb5_crypto_getpadsize
.Fa "krb5_context context"
.Fa size_t *padsize"
.Fc
d50 1
a50 5
.Fo krb5_crypto_getconfoundersize
.Fa "krb5_context context"
.Fa "krb5_crypto crypto
.Fa size_t *confoundersize"
.Fc
d52 1
a52 5
.Fo krb5_enctype_keysize
.Fa "krb5_context context"
.Fa "krb5_enctype type"
.Fa "size_t *keysize"
.Fc
d54 1
a54 27
.Fo krb5_string_to_enctype
.Fa "krb5_context context"
.Fa "const char *string"
.Fa "krb5_enctype *etype"
.Fc
.Ft krb5_error_code
.Fo krb5_enctype_to_string
.Fa "krb5_context context"
.Fa "krb5_enctype etype"
.Fa "char **string"
.Fc
.Ft krb5_error_code
.Fo krb5_enctype_valid
.Fa "krb5_context context"
.Fa "krb5_enctype etype"
.Fc
.Ft void
.Fo krb5_enctype_disable
.Fa "krb5_context context"
.Fa "krb5_enctype etype"
.Fc
.Ft size_t
.Fo krb5_get_wrapped_length
.Fa "krb5_context context"
.Fa "krb5_crypto crypto"
.Fa "size_t data_len"
.Fc
d58 1
a58 1
.Fn krb5_encrypt_ivec
a67 14
.Fa ivec
is a pointer to a initial IV, its modified to the end IV at the end of
the round.
Ivec should be the size of 
If
.Dv NULL
is passed in, the default IV is used.
.Fn krb5_encrypt
does the same as
.Fn krb5_encrypt_ivec
but with
.Fa ivec
being
.Dv NULL .
d75 2
a76 3
is not zero, it will be put in the (optional)
.Fa kvno
field in the
a78 1
.Fn krb5_decrypt_ivec ,
a82 39
.Pp
.Fn krb5_decrypt_ticket
decrypts the encrypted part of 
.Fa ticket
with
.Fa key .
.Fn krb5_decrypt_ticket
also verifies the timestamp in the ticket, invalid flag and if the KDC
haven't verified the transited path, the transit path.
.Pp
.Fn krb5_enctype_keysize ,
.Fn krb5_crypto_getconfoundersize ,
.Fn krb5_crypto_getblocksize ,
.Fn krb5_crypto_getenctype ,
.Fn krb5_crypto_getpadsize
all returns various (sometimes) useful information from a crypto context.
.Pp
.Fn krb5_enctype_to_string
converts a encryption type number to a string that can be printable
and stored. The strings returned should be freed with
.Xr free 3 .
.Pp
.Fn krb5_string_to_enctype
converts a encryption type strings to a encryption type number that
can use used for other Kerberos crypto functions.
.Pp
.Fn krb5_enctype_valid
returns 0 if the encrypt is supported and not disabled, otherwise and
error code is returned.
.Pp
.Fn krb5_enctype_disable
(globally, for all contextes) disables the
.Fa enctype .
.Pp
.Fn krb5_get_wrapped_length
returns the size of an encrypted packet by
.Fa crypto
of length
.Fa data_len .
@


