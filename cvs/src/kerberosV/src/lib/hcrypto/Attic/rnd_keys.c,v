head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2014.04.22.10.01.28;	author reyk;	state dead;
branches;
next	1.1;

1.1
date	2013.06.17.19.11.42;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@/*
 * Copyright (c) 1995, 1996, 1997, 1999 Kungliga Tekniska HÃ¶gskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "config.h"


#define HC_DEPRECATED

#ifdef KRB5
#include <krb5-types.h>
#endif
#include <stdlib.h>

#include <des.h>
#include <rand.h>

#undef __attribute__
#define __attribute__(X)

void HC_DEPRECATED
DES_rand_data(void *outdata, int size)
{
    RAND_bytes(outdata, size);
}

void HC_DEPRECATED
DES_generate_random_block(DES_cblock *block)
{
    RAND_bytes(block, sizeof(*block));
}

#define DES_rand_data_key hc_DES_rand_data_key

void HC_DEPRECATED
DES_rand_data_key(DES_cblock *key);

/*
 * Generate a random DES key.
 */

void HC_DEPRECATED
DES_rand_data_key(DES_cblock *key)
{
    DES_new_random_key(key);
}

void HC_DEPRECATED
DES_set_sequence_number(void *ll)
{
}

void HC_DEPRECATED
DES_set_random_generator_seed(DES_cblock *seed)
{
    RAND_seed(seed, sizeof(*seed));
}

/**
 * Generate a random des key using a random block, fixup parity and
 * skip weak keys.
 *
 * @@param key is set to a random key.
 *
 * @@return 0 on success, non zero on random number generator failure.
 *
 * @@ingroup hcrypto_des
 */

int HC_DEPRECATED
DES_new_random_key(DES_cblock *key)
{
    do {
	if (RAND_bytes(key, sizeof(*key)) != 1)
	    return 1;
	DES_set_odd_parity(key);
    } while(DES_is_weak_key(key));

    return(0);
}

/**
 * Seed the random number generator. Deprecated, use @@ref page_rand
 *
 * @@param seed a seed to seed that random number generate with.
 *
 * @@ingroup hcrypto_des
 */

void HC_DEPRECATED
DES_init_random_number_generator(DES_cblock *seed)
{
    RAND_seed(seed, sizeof(*seed));
}

/**
 * Generate a random key, deprecated since it doesn't return an error
 * code, use DES_new_random_key().
 *
 * @@param key is set to a random key.
 *
 * @@ingroup hcrypto_des
 */

void HC_DEPRECATED
DES_random_key(DES_cblock *key)
{
    if (DES_new_random_key(key))
	abort();
}
@


1.1
log
@2nd part of:
update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.
@
text
@@

