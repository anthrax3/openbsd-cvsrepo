head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.6
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.28
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.26
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.24
	OPENBSD_5_0:1.5.0.22
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.20
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.18
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.14
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.16
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.12
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	HEIMDAL_0_7_2:1.1.1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	HEIMDAL_0_6_3:1.1.1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.1.2.0.2
	OPENBSD_3_4_BASE:1.1.1.2
	HEIMDAL_0_6:1.1.1.2
	HEIMDAL_0_6RC1:1.1.1.2
	OPENBSD_3_3:1.1.1.1.0.8
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.6
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.4
	OPENBSD_3_1_BASE:1.1.1.1
	HEIMDAL_0_4e:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	HEIMDAL_0_3f:1.1.1.1
	HEIMDAL_0_3e:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@.\" @;


1.7
date	2014.04.22.10.01.31;	author reyk;	state dead;
branches;
next	1.6;

1.6
date	2013.06.17.18.57.43;	author robert;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.30.10.31.18;	author biorn;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.14.08.15.04;	author biorn;	state Exp;
branches;
next	1.3;

1.3
date	2005.07.29.16.21.44;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.07.10.32.48;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.25.07.52.27;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.25.07.52.27;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.11.02.16.14;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.04.14.07.33.57;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.7
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@.\" Copyright (c) 1998 - 2006 Kungliga Tekniska HÃ¶gskolan
.\" (Royal Institute of Technology, Stockholm, Sweden).
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	$Id: kafs.3,v 1.6 2013/06/17 18:57:43 robert Exp $
.\"
.Dd May  1, 2006
.Os HEIMDAL
.Dt KAFS 3
.Sh NAME
.Nm k_hasafs ,
.Nm k_hasafs_recheck ,
.Nm k_pioctl ,
.Nm k_unlog ,
.Nm k_setpag ,
.Nm k_afs_cell_of_file ,
.Nm kafs_set_verbose ,
.Nm kafs_settoken_rxkad ,
.Nm kafs_settoken ,
.Nm krb_afslog ,
.Nm krb_afslog_uid ,
.Nm kafs_settoken5 ,
.Nm krb5_afslog ,
.Nm krb5_afslog_uid
.Nd AFS library
.Sh LIBRARY
AFS cache manager access library (libkafs, -lkafs)
.Sh SYNOPSIS
.In kafs.h
.Ft int
.Fn k_afs_cell_of_file "const char *path" "char *cell" "int len"
.Ft int
.Fn k_hasafs "void"
.Ft int
.Fn k_hasafs_recheck "void"
.Ft int
.Fn k_pioctl "char *a_path" "int o_opcode" "struct ViceIoctl *a_paramsP" "int a_followSymlinks"
.Ft int
.Fn k_setpag "void"
.Ft int
.Fn k_unlog "void"
.Ft void
.Fn kafs_set_verbose "void (*func)(void *, const char *, int)" "void *"
.Ft int
.Fn kafs_settoken_rxkad "const char *cell" "struct ClearToken *token" "void *ticket" "size_t ticket_len"
.Ft int
.Fn kafs_settoken "const char *cell" "uid_t uid" "CREDENTIALS *c"
.Fn krb_afslog "char *cell" "char *realm"
.Ft int
.Fn krb_afslog_uid "char *cell" "char *realm" "uid_t uid"
.Ft krb5_error_code
.Fn krb5_afslog_uid "krb5_context context" "krb5_ccache id" "const char *cell" "krb5_const_realm realm" "uid_t uid"
.Ft int
.Fn kafs_settoken5 "const char *cell" "uid_t uid" "krb5_creds *c"
.Ft krb5_error_code
.Fn krb5_afslog "krb5_context context" "krb5_ccache id" "const char *cell" "krb5_const_realm realm"
.Sh DESCRIPTION
.Fn k_hasafs
initializes some library internal structures, and tests for the
presence of AFS in the kernel, none of the other functions should be
called before
.Fn k_hasafs
is called, or if it fails.
.Pp
.Fn k_hasafs_recheck
forces a recheck if a AFS client has started since last time
.Fn k_hasafs
or
.Fn k_hasafs_recheck
was called.
.Pp
.Fn kafs_set_verbose
set a log function that will be called each time the kafs library does
something important so that the application using libkafs can output
verbose logging.
Calling the function
.Fa kafs_set_verbose
with the function argument set to
.Dv NULL
will stop libkafs from calling the logging function (if set).
.Pp
.Fn kafs_settoken_rxkad
set
.Li rxkad
with the
.Fa token
and
.Fa ticket
(that have the length
.Fa ticket_len )
for a given
.Fa cell .
.Pp
.Fn kafs_settoken
and
.Fn kafs_settoken5
work the same way as
.Fn kafs_settoken_rxkad
but internally converts the Kerberos 4 or 5 credential to a afs
cleartoken and ticket.
.Pp
.Fn krb_afslog ,
and
.Fn krb_afslog_uid
obtains new tokens (and possibly tickets) for the specified
.Fa cell
and
.Fa realm .
If
.Fa cell
is
.Dv NULL ,
the local cell is used. If
.Fa realm
is
.Dv NULL ,
the function tries to guess what realm to use. Unless you  have some good knowledge of what cell or realm to use, you should pass
.Dv NULL .
.Fn krb_afslog
will use the real user-id for the
.Dv ViceId
field in the token,
.Fn krb_afslog_uid
will use
.Fa uid .
.Pp
.Fn krb5_afslog ,
and
.Fn krb5_afslog_uid
are the Kerberos 5 equivalents of
.Fn krb_afslog ,
and
.Fn krb_afslog_uid .
.Pp
.Fn krb5_afslog ,
.Fn kafs_settoken5
can be configured to behave differently via a
.Nm krb5_appdefault
option
.Li afs-use-524
in
.Pa krb5.conf .
Possible values for
.Li afs-use-524
are:
.Bl -tag -width local
.It yes
use the 524 server in the realm to convert the ticket
.It no
use the Kerberos 5 ticket directly, can be used with if the afs cell
support 2b token.
.It local, 2b
convert the Kerberos 5 credential to a 2b token locally (the same work
as a 2b 524 server should have done).
.El
.Pp
Example:
.Pp
.Bd -literal
[appdefaults]
	SU.SE = { afs-use-524 = local }
	PDC.KTH.SE = { afs-use-524 = yes }
	afs-use-524 = yes
.Ed
.Pp
libkafs will use the
.Li libkafs
as application name when running the
.Nm krb5_appdefault
function call.
.Pp
The (uppercased) cell name is used as the realm to the
.Nm krb5_appdefault function.
.Pp
.\" The extra arguments are the ubiquitous context, and the cache id where
.\" to store any obtained tickets. Since AFS servers normally can't handle
.\" Kerberos 5 tickets directly, these functions will first obtain version
.\" 5 tickets for the requested cells, and then convert them to version 4
.\" tickets, that can be stashed in the kernel. To convert tickets the
.\" .Fn krb524_convert_creds_kdc
.\" function will be used.
.\" .Pp
.Fn k_afs_cell_of_file
will in
.Fa cell
return the cell of a specified file, no more than
.Fa len
characters is put in
.Fa cell .
.Pp
.Fn k_pioctl
does a
.Fn pioctl
system call with the specified arguments. This function is equivalent to
.Fn lpioctl .
.Pp
.Fn k_setpag
initializes a new PAG.
.Pp
.Fn k_unlog
removes destroys all tokens in the current PAG.
.Sh RETURN VALUES
.Fn k_hasafs
returns 1 if AFS is present in the kernel, 0 otherwise.
.Fn krb_afslog
and
.Fn krb_afslog_uid
returns 0 on success, or a Kerberos error number on failure.
.Fn k_afs_cell_of_file ,
.Fn k_pioctl ,
.Fn k_setpag ,
and
.Fn k_unlog
all return the value of the underlaying system call, 0 on success.
.Sh ENVIRONMENT
The following environment variable affect the mode of operation of
.Nm kafs :
.Bl -tag -width AFS_SYSCALL
.It Ev AFS_SYSCALL
Normally,
.Nm kafs
will try to figure out the correct system call(s) that are used by AFS
by itself.  If it does not manage to do that, or does it incorrectly,
you can set this variable to the system call number or list of system
call numbers that should be used.
.El
.Sh EXAMPLES
The following code from
.Nm login
will obtain a new PAG and tokens for the local cell and the cell of
the users home directory.
.Bd -literal
if (k_hasafs()) {
	char cell[64];
	k_setpag();
	if(k_afs_cell_of_file(pwd->pw_dir, cell, sizeof(cell)) == 0)
		krb_afslog(cell, NULL);
	krb_afslog(NULL, NULL);
}
.Ed
.Sh ERRORS
If any of these functions (apart from
.Fn k_hasafs )
is called without AFS being present in the kernel, the process will
usually (depending on the operating system) receive a SIGSYS signal.
.Sh SEE ALSO
.Xr krb5_appdefault 3 ,
.Xr krb5.conf 5
.Rs
.%A Transarc Corporation
.%J AFS-3 Programmer's Reference
.%T File Server/Cache Manager Interface
.%D 1991
.Re
.Sh FILES
libkafs will search for
.Pa ThisCell and
.Pa TheseCells
in the following locations:
.Pa /usr/vice/etc ,
.Pa /etc/openafs ,
.Pa /var/db/openafs/etc ,
.Pa /usr/arla/etc ,
.Pa /etc/arla ,
and
.Pa /etc/afs
.Sh BUGS
.Ev AFS_SYSCALL
has no effect under AIX.
@


1.6
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@d32 1
a32 1
.\"	$Id$
@


1.5
log
@Add a missing ,
@
text
@d1 3
a3 3
.\" Copyright (c) 1998 - 1999, 2001 - 2003 Kungliga Tekniska Högskolan
.\" (Royal Institute of Technology, Stockholm, Sweden). 
.\" All rights reserved. 
d5 3
a7 3
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions 
.\" are met: 
d9 2
a10 2
.\" 1. Redistributions of source code must retain the above copyright 
.\"    notice, this list of conditions and the following disclaimer. 
d12 3
a14 3
.\" 2. Redistributions in binary form must reproduce the above copyright 
.\"    notice, this list of conditions and the following disclaimer in the 
.\"    documentation and/or other materials provided with the distribution. 
d16 3
a18 3
.\" 3. Neither the name of the Institute nor the names of its contributors 
.\"    may be used to endorse or promote products derived from this software 
.\"    without specific prior written permission. 
d20 11
a30 13
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
.\" SUCH DAMAGE. 
.\" 
.\"	$KTH: kafs.3,v 1.17 2003/11/07 23:18:02 lha Exp $
d32 3
a34 1
.Dd March 17, 2003
d39 1
d62 2
d92 7
d164 1
a164 1
can be configured to behave differently via a 
d274 1
a274 1
.Xr krb5_appdefaults 3 ,
d282 12
@


1.4
log
@Merge of heimdal 0.7.2
Tested by todd & beck, ok beck.
@
text
@d47 1
a47 1
.Nm krb_afslog_uid
@


1.3
log
@- sort SEE ALSO
- full month name for .Dd
- don't end .Nd w/ a full stop

fixes passed back to heimdal people...
@
text
@d32 1
a32 1
.\"	$KTH: kafs.3,v 1.16 2003/04/16 13:58:27 lha Exp $
d154 1
a154 1
can be configured to behave differently via a
d189 1
a189 1
The (uppercased) cellname is used as the realm to the
d211 1
a211 1
syscall with the specified arguments. This function is equivalent to
@


1.2
log
@diffrently -> differently;
@
text
@d34 1
a34 1
.Dd Mar 17, 2003
d264 2
a271 3
.Pp
.Xr krb5_appdefaults 3 ,
.Xr krb5.conf 5
@


1.1
log
@Initial revision
@
text
@d1 3
a3 1
.\"	$KTH: kafs.3,v 1.4 2001/01/11 16:16:29 assar Exp $
d5 31
a35 2
.Dd May 7, 1997
.Os KTH-KRB
d43 3
d48 3
a50 2
.\" .Nm krb5_afslog ,
.\" .Nm krb5_afslog_uid
d52 2
d55 1
a55 1
.Fd #include <kafs.h>
d59 1
a59 1
.Fn k_hasafs
d63 5
a67 1
.Fn k_setpag
d69 1
a69 1
.Fn k_unlog
d71 1
d75 6
a80 4
.\" .Ft krb5_error_code
.\" .Fn krb5_afslog_uid "krb5_context context" "krb5_ccache id" "const char *cell" "krb5_const_realm realm" "uid_t uid"
.\" .Ft krb5_error_code
.\" .Fn krb5_afslog "krb5_context context" "krb5_ccache id" "const char *cell" "krb5_const_realm realm"
d84 2
a85 2
presense of AFS in the kernel, none of the other functions should be
called before 
d89 30
d126 1
a126 1
If 
d128 1
a128 1
is 
d130 2
a131 2
the local cell is used. If 
.Fa realm 
d135 2
a136 2
.Dv NULL . 
.Fn krb_afslog 
d139 1
a139 1
field in the token, 
d144 48
a191 7
.\" .Fn krb5_afslog ,
.\" and 
.\" .Fn krb5_afslog_uid
.\" are the Kerberos 5 equivalents of
.\" .Fn krb_afslog ,
.\" and
.\" .Fn krb_afslog_uid .
d201 1
a201 1
will in 
d205 1
a205 1
characters is put in 
d209 1
a209 1
does a 
d219 13
a243 13
.Sh RETURN VALUES
.Fn k_hasafs
returns 1 if AFS is present in the kernel, 0 otherwise.
.Fn krb_afslog
and
.Fn krb_afslog_uid
returns 0 on success, or a kerberos error number on failure.
.Fn k_afs_cell_of_file ,
.Fn k_pioctl , 
.Fn k_setpag ,
and
.Fn k_unlog
all return the value of the underlaying system call, 0 on success.
d246 1
a246 1
.Nm login 
d259 1
a259 1
If any of these functions (appart from 
d261 1
a261 1
is called without AFS beeing present in the kernel, the process will
d270 3
@


1.1.1.1
log
@Import of heimdal-0.3e
@
text
@@


1.1.1.2
log
@Import of heimdal-0.6rc1
@
text
@d1 1
a1 3
.\" Copyright (c) 1998 - 1999, 2001 - 2003 Kungliga Tekniska Högskolan
.\" (Royal Institute of Technology, Stockholm, Sweden). 
.\" All rights reserved. 
d3 2
a4 31
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions 
.\" are met: 
.\"
.\" 1. Redistributions of source code must retain the above copyright 
.\"    notice, this list of conditions and the following disclaimer. 
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright 
.\"    notice, this list of conditions and the following disclaimer in the 
.\"    documentation and/or other materials provided with the distribution. 
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors 
.\"    may be used to endorse or promote products derived from this software 
.\"    without specific prior written permission. 
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
.\" SUCH DAMAGE. 
.\" 
.\"	$KTH: kafs.3,v 1.16 2003/04/16 13:58:27 lha Exp $
.\"
.Dd Mar 17, 2003
.Os HEIMDAL
a11 3
.Nm kafs_set_verbose ,
.Nm kafs_settoken_rxkad ,
.Nm kafs_settoken ,
d14 2
a15 3
.Nm kafs_settoken5 ,
.Nm krb5_afslog ,
.Nm krb5_afslog_uid
a16 2
.Sh LIBRARY
AFS cache manager access library (libkafs, -lkafs)
d18 1
a18 1
.In kafs.h
d22 1
a22 1
.Fn k_hasafs "void"
d26 1
a26 1
.Fn k_setpag "void"
d28 1
a28 5
.Fn k_unlog "void"
.Ft void
.Fn kafs_set_verbose "void (*func)(void *, const char *, int)" "void *"
.Ft int
.Fn kafs_settoken_rxkad "const char *cell" "struct ClearToken *token" "void *ticket" "size_t ticket_len"
a29 1
.Fn kafs_settoken "const char *cell" "uid_t uid" "CREDENTIALS *c"
d33 4
a36 6
.Ft krb5_error_code
.Fn krb5_afslog_uid "krb5_context context" "krb5_ccache id" "const char *cell" "krb5_const_realm realm" "uid_t uid"
.Ft int
.Fn kafs_settoken5 "const char *cell" "uid_t uid" "krb5_creds *c"
.Ft krb5_error_code
.Fn krb5_afslog "krb5_context context" "krb5_ccache id" "const char *cell" "krb5_const_realm realm"
d40 2
a41 2
presence of AFS in the kernel, none of the other functions should be
called before
a44 30
.Fn kafs_set_verbose
set a log function that will be called each time the kafs library does
something important so that the application using libkafs can output
verbose logging.
Calling the function
.Fa kafs_set_verbose
with the function argument set to
.Dv NULL
will stop libkafs from calling the logging function (if set).
.Pp
.Fn kafs_settoken_rxkad
set
.Li rxkad
with the
.Fa token
and
.Fa ticket
(that have the length
.Fa ticket_len )
for a given
.Fa cell .
.Pp
.Fn kafs_settoken
and
.Fn kafs_settoken5
work the same way as
.Fn kafs_settoken_rxkad
but internally converts the Kerberos 4 or 5 credential to a afs
cleartoken and ticket.
.Pp
d52 1
a52 1
If
d54 1
a54 1
is
d56 2
a57 2
the local cell is used. If
.Fa realm
d61 2
a62 2
.Dv NULL .
.Fn krb_afslog
d65 1
a65 1
field in the token,
d70 7
a76 48
.Fn krb5_afslog ,
and
.Fn krb5_afslog_uid
are the Kerberos 5 equivalents of
.Fn krb_afslog ,
and
.Fn krb_afslog_uid .
.Pp
.Fn krb5_afslog ,
.Fn kafs_settoken5
can be configured to behave diffrently via a 
.Nm krb5_appdefault
option
.Li afs-use-524
in
.Pa krb5.conf .
Possible values for
.Li afs-use-524
are:
.Bl -tag -width local
.It yes
use the 524 server in the realm to convert the ticket
.It no
use the Kerberos 5 ticket directly, can be used with if the afs cell
support 2b token.
.It local, 2b
convert the Kerberos 5 credential to a 2b token locally (the same work
as a 2b 524 server should have done).
.El
.Pp
Example:
.Pp
.Bd -literal
[appdefaults]
	SU.SE = { afs-use-524 = local }
	PDC.KTH.SE = { afs-use-524 = yes }
	afs-use-524 = yes
.Ed
.Pp
libkafs will use the
.Li libkafs
as application name when running the
.Nm krb5_appdefault
function call.
.Pp
The (uppercased) cellname is used as the realm to the
.Nm krb5_appdefault function.
.Pp
d86 1
a86 1
will in
d90 1
a90 1
characters is put in
d94 1
a94 1
does a
a103 13
.Sh RETURN VALUES
.Fn k_hasafs
returns 1 if AFS is present in the kernel, 0 otherwise.
.Fn krb_afslog
and
.Fn krb_afslog_uid
returns 0 on success, or a Kerberos error number on failure.
.Fn k_afs_cell_of_file ,
.Fn k_pioctl ,
.Fn k_setpag ,
and
.Fn k_unlog
all return the value of the underlaying system call, 0 on success.
d116 13
d131 1
a131 1
.Nm login
d144 1
a144 1
If any of these functions (apart from
d146 1
a146 1
is called without AFS being present in the kernel, the process will
a154 3
.Pp
.Xr krb5_appdefaults 3 ,
.Xr krb5.conf 5
@


1.1.1.3
log
@Import of heimdal-0.7.2
@
text
@d32 1
a32 1
.\"	$KTH: kafs.3,v 1.17 2003/11/07 23:18:02 lha Exp $
d154 1
a154 1
can be configured to behave differently via a 
d189 1
a189 1
The (uppercased) cell name is used as the realm to the
d211 1
a211 1
system call with the specified arguments. This function is equivalent to
@


