head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	HEIMDAL_0_7_2:1.1.1.5
	HEIMDAL_0_6_3:1.1.1.4
	OPENBSD_3_3:1.1.1.3.0.6
	OPENBSD_3_3_BASE:1.1.1.3
	OPENBSD_3_2:1.1.1.3.0.4
	OPENBSD_3_2_BASE:1.1.1.3
	OPENBSD_3_1:1.1.1.3.0.2
	OPENBSD_3_1_BASE:1.1.1.3
	HEIMDAL_0_4e:1.1.1.3
	OPENBSD_3_0:1.1.1.2.0.2
	OPENBSD_3_0_BASE:1.1.1.2
	HEIMDAL_0_3f:1.1.1.2
	HEIMDAL_0_3e:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.04.22.10.01.33;	author reyk;	state dead;
branches;
next	1.3;

1.3
date	2013.06.17.18.57.45;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.12.17.18.48;	author hin;	state dead;
branches;
next	1.1;

1.1
date	2001.05.25.07.51.06;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.25.07.51.06;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.06.22.21.24.54;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.02.06.08.55.43;	author hin;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.10.29.15.55.38;	author biorn;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2006.04.14.07.33.37;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@# $Id: Makefile.am,v 1.3 2013/06/17 18:57:45 robert Exp $

include $(top_srcdir)/Makefile.am.common

ACLOCAL_AMFLAGS = -I ../../cf

CLEANFILES = roken.h make-roken.c $(XHEADERS)

lib_LTLIBRARIES = libroken.la

libroken_la_LDFLAGS = -version-info 19:0:1
libroken_la_CPPFLAGS = -DBUILD_ROKEN_LIB

if versionscript
libroken_la_LDFLAGS += $(LDFLAGS_VERSION_SCRIPT)$(srcdir)/version-script.map
endif

AM_CPPFLAGS += $(libroken_la_CPPFLAGS)
if HAVE_DBHEADER
AM_CPPFLAGS += -I$(DBHEADER)
endif

noinst_PROGRAMS = snprintf-test resolve-test rkpty

check_PROGRAMS = 				\
		base64-test			\
		getaddrinfo-test		\
		getifaddrs-test			\
		hex-test			\
		test-readenv			\
		parse_bytes-test		\
		parse_reply-test		\
		parse_time-test			\
		snprintf-test			\
		strpftime-test			\
		tsearch-test

TESTS = $(check_PROGRAMS)

LDADD = libroken.la
make_roken_LDADD = 

noinst_LTLIBRARIES = libtest.la
libtest_la_SOURCES = strftime.c strptime.c snprintf.c tsearch.c
libtest_la_CFLAGS = -DTEST_SNPRINTF -DTEST_STRPFTIME

parse_reply_test_SOURCES = parse_reply-test.c resolve.c
parse_reply_test_CFLAGS  = -DTEST_RESOLVE

test_readenv_SOURCES = test-readenv.c test-mem.c

rkpty_LDADD = $(LIB_openpty) $(LDADD)

parse_time_test_SOURCES = parse_time-test.c test-mem.c

strpftime_test_SOURCES	= strpftime-test.c strpftime-test.h
strpftime_test_LDADD = libtest.la $(LDADD)
strpftime_test_CFLAGS = -DTEST_STRPFTIME
snprintf_test_SOURCES	= snprintf-test.c
snprintf_test_LDADD = libtest.la $(LDADD)
snprintf_test_CFLAGS	= -DTEST_SNPRINTF
tsearch_test_SOURCES	= tsearch-test.c
tsearch_test_LDADD = libtest.la $(LDADD)
tsearch_test_CFLAGS	= -DTEST_TSEARCH

resolve_test_SOURCES = resolve-test.c

libroken_la_SOURCES =		\
	base64.c		\
	bswap.c			\
	concat.c		\
	cloexec.c		\
	ct.c			\
	doxygen.c		\
	dumpdata.c		\
	environment.c		\
	eread.c			\
	esetenv.c		\
	ewrite.c		\
	getaddrinfo_hostspec.c	\
	get_default_username.c	\
	get_window_size.c	\
	getarg.c		\
	getnameinfo_verified.c	\
	getprogname.c		\
	h_errno.c		\
	hex.c			\
	hostent_find_fqdn.c	\
	issuid.c		\
	k_getpwnam.c		\
	k_getpwuid.c		\
	mini_inetd.c		\
	net_read.c		\
	net_write.c		\
	parse_bytes.c		\
	parse_time.c		\
	parse_units.c		\
	qsort.c			\
	rand.c			\
	realloc.c		\
	resolve.c		\
	roken_gethostby.c	\
	rtbl.c			\
	rtbl.h			\
	setprogname.c		\
	signal.c		\
	simple_exec.c		\
	snprintf.c		\
	socket.c		\
	strcollect.c		\
	strerror_r.c		\
	strpool.c		\
	timeval.c		\
	tm2time.c		\
	unvis.c			\
	verify.c		\
	vis.c			\
	warnerr.c		\
	write_pid.c		\
	xfree.c			\
	xdbm.h

EXTRA_libroken_la_SOURCES =	\
	err.hin			\
	glob.hin		\
	fnmatch.hin		\
	ifaddrs.hin		\
	search.hin		\
	vis.hin	

libroken_la_LIBADD = @@LTLIBOBJS@@ $(LIB_crypt)

$(LTLIBOBJS) $(libroken_la_OBJECTS): roken.h $(XHEADERS)

BUILT_SOURCES = roken.h

if have_err_h
err_h =
else
err_h = err.h
endif

if have_fnmatch_h
fnmatch_h =
else
fnmatch_h = fnmatch.h
endif

if have_glob_h
glob_h =
else
glob_h = glob.h
endif

if have_ifaddrs_h
ifaddrs_h =
else
ifaddrs_h = ifaddrs.h
endif

if have_search_h
search_h = 
else
search_h = search.h
endif

if have_vis_h
vis_h = 
else
vis_h = vis.h
endif

## these are controlled by configure
XHEADERS = $(err_h) $(fnmatch_h) $(glob_h) $(ifaddrs_h) $(search_h) $(vis_h)
CLEANFILES += err.h fnmatch.h glob.h ifaddrs.h search.h vis.h

dist_include_HEADERS = 				\
	base64.h				\
	getarg.h				\
	hex.h					\
	parse_bytes.h 				\
	parse_time.h 				\
	parse_units.h				\
	resolve.h 				\
	roken-common.h 				\
	rtbl.h 					\
	xdbm.h

if have_socket_wrapper
libroken_la_SOURCES += socket_wrapper.c socket_wrapper.h
dist_include_HEADERS += socket_wrapper.h
endif

build_HEADERZ = test-mem.h $(XHEADERS)

nodist_include_HEADERS = roken.h
rokenincludedir = $(includedir)/roken
nodist_rokeninclude_HEADERS = $(XHEADERS)

man_MANS = getarg.3 parse_time.3 rtbl.3 ecalloc.3

SUFFIXES += .hin
.hin.h:
	cp $< $@@

# Make make-roken deprecated in 1.4 when we know that roken-h-process.pl works
if !CROSS_COMPILE

noinst_PROGRAMS += make-roken
BUILT_SOURCES += make-roken.c

nodist_make_roken_SOURCES = make-roken.c

roken.h: make-roken$(EXEEXT)
	@@./make-roken$(EXEEXT) > tmp.h ;\
	if [ -f roken.h ] && cmp -s tmp.h roken.h ; then rm -f tmp.h ; \
	else rm -f roken.h; mv tmp.h roken.h; fi

make-roken.c: roken.h.in roken.awk
	$(AWK) -f $(srcdir)/roken.awk $(srcdir)/roken.h.in > make-roken.c

else

roken.h: $(top_srcdir)/cf/roken-h-process.pl roken.h.in
	perl $(top_srcdir)/cf/roken-h-process.pl \
	-c $(top_builddir)/include/config.h  \
	-p $(srcdir)/roken.h.in -o roken.h

endif


EXTRA_DIST = \
	NTMakefile \
	roken.awk roken.h.in \
	$(man_MANS) \
	test-mem.h \
	ndbm_wrap.c \
	ndbm_wrap.h \
	version-script.map
@


1.3
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@d1 1
a1 1
# $Id$
@


1.2
log
@These files are not use by us, so they're removed to make the tree
a little bit leaner, and to get rid of some bad string functions.
@
text
@d1 1
a1 1
# $KTH: Makefile.am,v 1.94 2001/01/30 01:53:30 assar Exp $
d3 1
a3 1
AUTOMAKE_OPTIONS = foreign no-dependencies
a4 3
AM_CFLAGS += $(WFLAGS)

## ACLOCAL = @@ACLOCAL@@ -I cf
a9 1
libroken_la_LDFLAGS = -version-info 11:1:2
d11 11
a21 1
noinst_PROGRAMS = make-roken
d23 1
a23 1
nodist_make_roken_SOURCES = make-roken.c
d25 12
a36 3
check_PROGRAMS = parse_bytes-test \
		strpftime-test \
		getaddrinfo-test
d40 9
a48 1
LIB_crypt = @@LIB_crypt@@
d50 1
a50 1
common_LDADD = libroken.la $(LIB_crypt)
d52 15
a66 5
strpftime_test_SOURCES = strpftime-test.c strftime.c strptime.c snprintf.c
##snprintf_test_SOURCES  = snprintf-test.c snprintf.c
##snprintf_test_LDADD    = $(common_LDADD) -lm
getaddrinfo_test_LDADD = $(common_LDADD)
parse_bytes_test_LDADD = $(common_LDADD)
d70 1
d72 4
a75 1
	emalloc.c		\
a77 1
	erealloc.c		\
a78 1
	estrdup.c		\
d85 4
d98 3
d105 1
d111 2
a117 1
	vis.h			\
d120 1
a123 4
	chown.c			\
	copyhostent.c		\
	daemon.c		\
	err.c			\
d125 1
a125 4
	errx.c			\
	fchown.c		\
	flock.c			\
	fnmatch.c		\
a126 18
	freeaddrinfo.c		\
	freehostent.c		\
	gai_strerror.c		\
	getaddrinfo.c		\
	getdtablesize.c		\
	getegid.c		\
	geteuid.c		\
	getgid.c		\
	gethostname.c		\
	getifaddrs.c		\
	getipnodebyaddr.c	\
	getipnodebyname.c	\
	getopt.c		\
	gettimeofday.c		\
	getuid.c		\
	getusershell.c		\
	glob.hin		\
	hstrerror.c		\
d128 2
a129 44
	inet_aton.c		\
	inet_ntop.c		\
	inet_pton.c		\
	initgroups.c		\
	innetgr.c		\
	iruserok.c		\
	lstat.c			\
	memmove.c		\
	mkstemp.c		\
	putenv.c		\
	rcmd.c			\
	readv.c			\
	recvmsg.c		\
	sendmsg.c		\
	setegid.c		\
	setenv.c		\
	seteuid.c		\
	strcasecmp.c		\
	strdup.c		\
	strerror.c		\
	strftime.c		\
	strlcat.c		\
	strlcpy.c		\
	strlwr.c		\
	strncasecmp.c		\
	strndup.c		\
	strnlen.c		\
	strptime.c		\
	strsep.c		\
	strsep_copy.c		\
	strtok_r.c		\
	strupr.c		\
	swab.c			\
	unsetenv.c		\
	verr.c			\
	verrx.c			\
	vsyslog.c		\
	vwarn.c			\
	vwarnx.c		\
	warn.c			\
	warnx.c			\
	writev.c

EXTRA_DIST = roken.awk roken.h.in
d131 1
a131 1
libroken_la_LIBADD = @@LTLIBOBJS@@
d133 1
a133 1
$(LTLIBOBJS) $(libroken_la_OBJECTS): $(include_HEADERS) roken.h
d135 1
a135 1
BUILT_SOURCES = make-roken.c roken.h
d161 6
d174 2
a175 1
XHEADERS = $(err_h) $(fnmatch_h) $(glob_h) $(ifaddrs_h) $(vis_h)
d177 1
a177 1
include_HEADERS = 				\
d180 1
d187 8
a194 2
	xdbm.h					\
	$(XHEADERS) 
d197 2
d200 1
d206 8
d221 19
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of heimdal-0.3e
@
text
@@


1.1.1.2
log
@Import of heimdal-0.3f

Lots of changes, highlights include:

 * change default keytab to ANY:FILE:/etc/krb5.keytab,krb4:/etc/srvtab,
   the new keytab type that tries both of these in order (SRVTAB is
   also an alias for krb4:)

 * improve error reporting and error handling (error messages should
   be more detailed and more useful)

 * the API is closer to what MIT krb5 is using

 * more compatible with windows 2000

 * removed some memory leaks

 * bug fixes
@
text
@d1 1
a1 1
# $KTH: Makefile.am,v 1.96 2001/05/16 23:57:10 assar Exp $
d13 1
a13 1
libroken_la_LDFLAGS = -version-info 12:0:3
a36 1
	bswap.c			\
@


1.1.1.3
log
@Import of heimdal-0.4e
@
text
@d1 1
a1 1
# $KTH: Makefile.am,v 1.115 2001/09/03 05:05:14 assar Exp $
d3 1
a3 1
include $(top_srcdir)/Makefile.am.common
d5 3
d13 1
a13 1
libroken_la_LDFLAGS = -version-info 14:3:5
d15 1
a15 1
noinst_PROGRAMS = make-roken snprintf-test
d19 3
a21 6
check_PROGRAMS = 				\
		base64-test			\
		getaddrinfo-test		\
		parse_bytes-test		\
		snprintf-test			\
		strpftime-test
d27 1
a27 2
LDADD = libroken.la $(LIB_crypt)
make_roken_LDADD = 
d29 5
a33 3
strpftime_test_SOURCES	= strpftime-test.c strftime.c strptime.c snprintf.c
snprintf_test_SOURCES	= snprintf-test.c snprintf.c
snprintf_test_CFLAGS	= -DTEST_SNPRINTF
d39 1
d42 1
d44 1
a50 3
	getprogname.c		\
	h_errno.c		\
	hostent_find_fqdn.c	\
a63 1
	setprogname.c		\
a82 4
	ecalloc.c		\
	emalloc.c		\
	erealloc.c		\
	estrdup.c		\
d93 1
a144 1
	vis.hin			\
d154 1
a154 1
libroken_la_LIBADD = @@LTLIBOBJS@@ $(DBLIB)
d156 1
a156 1
$(LTLIBOBJS) $(libroken_la_OBJECTS): $(include_HEADERS) roken.h $(XHEADERS)
a206 1
man_MANS = getarg.3
d208 1
a208 1
SUFFIXES = .hin
@


1.1.1.4
log
@Import of heimdal-0.6.3
@
text
@d1 1
a1 1
# $KTH: Makefile.am,v 1.122.6.3 2003/10/14 16:13:15 joda Exp $
d10 1
a10 1
libroken_la_LDFLAGS = -version-info 16:3:0
a19 1
		parse_reply-test		\
d25 2
d30 2
a31 11
noinst_LTLIBRARIES = libtest.la
libtest_la_SOURCES = strftime.c strptime.c snprintf.c
libtest_la_CFLAGS = -DTEST_SNPRINTF

parse_reply_test_SOURCES = parse_reply-test.c resolve.c
parse_reply_test_CFLAGS  = -DTEST_RESOLVE

strpftime_test_SOURCES	= strpftime-test.c
strpftime_test_LDADD = libtest.la $(LDADD)
snprintf_test_SOURCES	= snprintf-test.c
snprintf_test_LDADD = libtest.la $(LDADD)
d80 8
d89 20
d110 1
d112 43
a154 1
	vis.hin	
d160 1
a160 1
$(LTLIBOBJS) $(libroken_la_OBJECTS): roken.h $(XHEADERS)
d213 1
a213 1
SUFFIXES += .hin
@


1.1.1.5
log
@Import of heimdal-0.7.2
@
text
@d1 1
a1 1
# $KTH: Makefile.am,v 1.137 2005/05/24 11:39:01 lha Exp $
d10 1
a10 2
libroken_la_LDFLAGS = -version-info 17:0:1
libroken_la_CPPFLAGS = -DBUILD_ROKEN_LIB
d12 1
a12 1
noinst_PROGRAMS = make-roken snprintf-test resolve-test
a18 2
		hex-test			\
		test-readenv			\
a20 1
		parse_time-test			\
a35 4
test_readenv_SOURCES = test-readenv.c test-mem.c

parse_time_test_SOURCES = parse_time-test.c test-mem.c

d38 1
a38 1
snprintf_test_SOURCES	= snprintf-test.c snprintf-test.h
a41 2
resolve_test_SOURCES = resolve-test.c

a56 1
	hex.c			\
a66 1
	realloc.c		\
d95 1
a95 5
libroken_la_LIBADD = @@LTLIBOBJS@@
if have_cgetent
else
libroken_la_LIBADD += $(DBLIB)
endif
a132 1
CLEANFILES += err.h fnmatch.h glob.h ifaddrs.h vis.h
a136 1
	hex.h					\
a145 2
build_HEADERZ = test-mem.h

d148 1
a148 1
man_MANS = getarg.3 parse_time.3 rtbl.3
@


