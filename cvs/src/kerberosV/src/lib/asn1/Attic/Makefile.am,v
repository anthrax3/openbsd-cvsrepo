head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	HEIMDAL_0_7_2:1.1.1.5
	HEIMDAL_0_6_3:1.1.1.4
	OPENBSD_3_3:1.1.1.3.0.6
	OPENBSD_3_3_BASE:1.1.1.3
	OPENBSD_3_2:1.1.1.3.0.4
	OPENBSD_3_2_BASE:1.1.1.3
	OPENBSD_3_1:1.1.1.3.0.2
	OPENBSD_3_1_BASE:1.1.1.3
	HEIMDAL_0_4e:1.1.1.3
	OPENBSD_3_0:1.1.1.2.0.2
	OPENBSD_3_0_BASE:1.1.1.2
	HEIMDAL_0_3f:1.1.1.2
	HEIMDAL_0_3e:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.04.22.10.01.26;	author reyk;	state dead;
branches;
next	1.3;

1.3
date	2013.06.17.18.57.42;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.12.17.18.46;	author hin;	state dead;
branches;
next	1.1;

1.1
date	2001.05.25.07.49.53;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.25.07.49.53;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.06.22.21.22.08;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.02.06.08.54.59;	author hin;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.10.29.15.55.33;	author biorn;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2006.04.14.07.32.51;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@# $Id: Makefile.am,v 1.3 2013/06/17 18:57:42 robert Exp $

include $(top_srcdir)/Makefile.am.common

YFLAGS = -d -t

lib_LTLIBRARIES = libasn1.la
libasn1_la_LDFLAGS = -version-info 8:0:0

noinst_LTLIBRARIES = libasn1base.la

if versionscript
libasn1_la_LDFLAGS += $(LDFLAGS_VERSION_SCRIPT)$(srcdir)/version-script.map
endif


libasn1_la_LIBADD = \
	libasn1base.la \
	@@LIB_com_err@@ \
	$(LIBADD_roken)

BUILT_SOURCES =				\
	$(gen_files_rfc2459:.x=.c)	\
	$(gen_files_cms:.x=.c)		\
	$(gen_files_krb5:.x=.c)		\
	$(gen_files_pkinit:.x=.c)	\
	$(gen_files_pkcs8:.x=.c)	\
	$(gen_files_pkcs9:.x=.c)	\
	$(gen_files_pkcs12:.x=.c)	\
	$(gen_files_digest:.x=.c)	\
	$(gen_files_kx509:.x=.c)

gen_files_krb5 = asn1_krb5_asn1.x
gen_files_cms = asn1_cms_asn1.x
gen_files_rfc2459 = asn1_rfc2459_asn1.x
gen_files_pkinit = asn1_pkinit_asn1.x
gen_files_pkcs12 = asn1_pkcs12_asn1.x
gen_files_pkcs8 = asn1_pkcs8_asn1.x
gen_files_pkcs9 = asn1_pkcs9_asn1.x
gen_files_test = asn1_test_asn1.x
gen_files_digest = asn1_digest_asn1.x
gen_files_kx509 = asn1_kx509_asn1.x

noinst_PROGRAMS = asn1_gen

libexec_heimdal_PROGRAMS = asn1_compile asn1_print

TESTS = check-der check-gen check-timegm check-ber check-template
check_PROGRAMS = $(TESTS)

asn1_gen_SOURCES = asn1_gen.c
asn1_print_SOURCES = asn1_print.c
check_der_SOURCES = check-der.c check-common.c check-common.h

check_template_SOURCES = check-template.c check-common.c check-common.h
nodist_check_template_SOURCES = $(gen_files_test:.x=.c)

dist_check_gen_SOURCES = check-gen.c check-common.c check-common.h
nodist_check_gen_SOURCES = $(gen_files_test:.x=.c)

build_HEADERZ = asn1-template.h

asn1_compile_SOURCES = 				\
	asn1_queue.h				\
	asn1parse.y				\
	der.h					\
	gen.c					\
	gen_copy.c				\
	gen_decode.c				\
	gen_encode.c				\
	gen_free.c				\
	gen_glue.c				\
	gen_length.c				\
	gen_locl.h				\
	gen_seq.c				\
	gen_template.c				\
	hash.c					\
	hash.h					\
	lex.l					\
	lex.h					\
	main.c					\
	asn1-template.h				\
	symbol.c				\
	symbol.h

dist_libasn1base_la_SOURCES =			\
	der_locl.h 				\
	der.c					\
	der.h					\
	der_get.c				\
	der_put.c				\
	der_free.c				\
	der_length.c				\
	der_copy.c				\
	der_cmp.c				\
	der_format.c				\
	heim_asn1.h				\
	extra.c					\
	template.c				\
	timegm.c

nodist_libasn1base_la_SOURCES = 	\
	asn1_err.h			\
	asn1_err.c

nodist_libasn1_la_SOURCES = $(BUILT_SOURCES)

asn1_compile_LDADD = \
	$(LIB_roken) $(LEXLIB)

check_der_LDADD = \
	libasn1base.la \
	$(LIB_roken)

check_template_LDADD = $(check_der_LDADD)
asn1_print_LDADD = $(check_der_LDADD) $(LIB_com_err)
asn1_gen_LDADD = $(check_der_LDADD)
check_timegm_LDADD = $(check_der_LDADD)

check_gen_LDADD = \
	libasn1.la \
	$(LIB_roken)

check_ber_LDADD = $(check_gen_LDADD)

CLEANFILES = \
	$(BUILT_SOURCES) \
	$(gen_files_rfc2459) \
	$(gen_files_cms) \
	$(gen_files_krb5) \
	$(gen_files_pkinit) \
	$(gen_files_pkcs8) \
	$(gen_files_pkcs9) \
	$(gen_files_pkcs12) \
	$(gen_files_digest) \
	$(gen_files_kx509) \
	$(gen_files_test) $(nodist_check_gen_SOURCES) \
	asn1_err.c asn1_err.h \
	rfc2459_asn1_files rfc2459_asn1*.h* \
	cms_asn1_files cms_asn1*.h* \
	krb5_asn1_files krb5_asn1*.h* \
	pkinit_asn1_files pkinit_asn1*.h* \
	pkcs8_asn1_files pkcs8_asn1*.h* \
	pkcs9_asn1_files pkcs9_asn1*.h* \
	pkcs12_asn1_files pkcs12_asn1*.h* \
	digest_asn1_files digest_asn1*.h* \
	kx509_asn1_files kx509_asn1*.h* \
	test_asn1_files test_asn1*.h*

dist_include_HEADERS = der.h heim_asn1.h der-protos.h der-private.h
dist_include_HEADERS += asn1-common.h

nodist_include_HEADERS = asn1_err.h
nodist_include_HEADERS += krb5_asn1.h
nodist_include_HEADERS += pkinit_asn1.h
nodist_include_HEADERS += cms_asn1.h
nodist_include_HEADERS += rfc2459_asn1.h
nodist_include_HEADERS += pkcs8_asn1.h
nodist_include_HEADERS += pkcs9_asn1.h
nodist_include_HEADERS += pkcs12_asn1.h
nodist_include_HEADERS += digest_asn1.h
nodist_include_HEADERS += kx509_asn1.h

priv_headers  = krb5_asn1-priv.h
priv_headers += pkinit_asn1-priv.h
priv_headers += cms_asn1-priv.h
priv_headers += rfc2459_asn1-priv.h
priv_headers += pkcs8_asn1-priv.h
priv_headers += pkcs9_asn1-priv.h
priv_headers += pkcs12_asn1-priv.h
priv_headers += digest_asn1-priv.h
priv_headers += kx509_asn1-priv.h
priv_headers += test_asn1.h test_asn1-priv.h



$(asn1_compile_OBJECTS): asn1parse.h asn1parse.c $(srcdir)/der-protos.h $(srcdir)/der-private.h
$(libasn1_la_OBJECTS): $(nodist_include_HEADERS) $(priv_headers) asn1_err.h $(srcdir)/der-protos.h $(srcdir)/der-private.h
$(libasn1base_la_OBJECTS): asn1_err.h $(srcdir)/der-protos.h $(srcdir)/der-private.h
$(check_gen_OBJECTS): test_asn1.h
$(check_template_OBJECTS): test_asn1_files
$(asn1_print_OBJECTS): krb5_asn1.h

asn1parse.h: asn1parse.c

$(gen_files_krb5) krb5_asn1.hx krb5_asn1-priv.hx: krb5_asn1_files
$(gen_files_pkinit) pkinit_asn1.hx pkinit_asn1-priv.hx: pkinit_asn1_files
$(gen_files_pkcs8) pkcs8_asn1.hx pkcs8_asn1-priv.hx: pkcs8_asn1_files
$(gen_files_pkcs9) pkcs9_asn1.hx pkcs9_asn1-priv.hx: pkcs9_asn1_files
$(gen_files_pkcs12) pkcs12_asn1.hx pkcs12_asn1-priv.hx: pkcs12_asn1_files
$(gen_files_digest) digest_asn1.hx digest_asn1-priv.hx: digest_asn1_files
$(gen_files_kx509) kx509_asn1.hx kx509_asn1-priv.hx: kx509_asn1_files
$(gen_files_rfc2459) rfc2459_asn1.hx rfc2459_asn1-priv.hx: rfc2459_asn1_files
$(gen_files_cms) cms_asn1.hx cms_asn1-priv.hx: cms_asn1_files
$(gen_files_test) test_asn1.hx test_asn1-priv.hx: test_asn1_files

rfc2459_asn1_files: asn1_compile$(EXEEXT) $(srcdir)/rfc2459.asn1
	$(ASN1_COMPILE) --one-code-file --preserve-binary=TBSCertificate --preserve-binary=TBSCRLCertList --preserve-binary=Name --sequence=GeneralNames --sequence=Extensions --sequence=CRLDistributionPoints $(srcdir)/rfc2459.asn1 rfc2459_asn1 || (rm -f rfc2459_asn1_files ; exit 1)

cms_asn1_files: asn1_compile$(EXEEXT) $(srcdir)/cms.asn1 $(srcdir)/cms.opt
	$(ASN1_COMPILE) --one-code-file --option-file=$(srcdir)/cms.opt $(srcdir)/cms.asn1 cms_asn1 || (rm -f cms_asn1_files ; exit 1)

krb5_asn1_files: asn1_compile$(EXEEXT) $(srcdir)/krb5.asn1 $(srcdir)/krb5.opt
	$(ASN1_COMPILE) --one-code-file --option-file=$(srcdir)/krb5.opt $(srcdir)/krb5.asn1 krb5_asn1 || (rm -f krb5_asn1_files ; exit 1)

pkinit_asn1_files: asn1_compile$(EXEEXT) $(srcdir)/pkinit.asn1
	$(ASN1_COMPILE) --one-code-file $(srcdir)/pkinit.asn1 pkinit_asn1 || (rm -f pkinit_asn1_files ; exit 1)

pkcs8_asn1_files: asn1_compile$(EXEEXT) $(srcdir)/pkcs8.asn1
	$(ASN1_COMPILE) --one-code-file $(srcdir)/pkcs8.asn1 pkcs8_asn1 || (rm -f pkcs8_asn1_files ; exit 1)

pkcs9_asn1_files: asn1_compile$(EXEEXT) $(srcdir)/pkcs9.asn1
	$(ASN1_COMPILE) --one-code-file $(srcdir)/pkcs9.asn1 pkcs9_asn1 || (rm -f pkcs9_asn1_files ; exit 1)

pkcs12_asn1_files: asn1_compile$(EXEEXT) $(srcdir)/pkcs12.asn1
	$(ASN1_COMPILE) --one-code-file $(srcdir)/pkcs12.asn1 pkcs12_asn1 || (rm -f pkcs12_asn1_files ; exit 1)

digest_asn1_files: asn1_compile$(EXEEXT) $(srcdir)/digest.asn1
	$(ASN1_COMPILE) --one-code-file $(srcdir)/digest.asn1 digest_asn1 || (rm -f digest_asn1_files ; exit 1)

kx509_asn1_files: asn1_compile$(EXEEXT) $(srcdir)/kx509.asn1
	$(ASN1_COMPILE) --one-code-file $(srcdir)/kx509.asn1 kx509_asn1 || (rm -f kx509_asn1_files ; exit 1)

test_asn1_files: asn1_compile$(EXEEXT) $(srcdir)/test.asn1
	$(ASN1_COMPILE) --one-code-file --sequence=TESTSeqOf $(srcdir)/test.asn1 test_asn1 || (rm -f test_asn1_files ; exit 1)


EXTRA_DIST =		\
	NTMakefile	\
	asn1_compile-version.rc \
	libasn1-exports.def \
	cms.asn1	\
	cms.opt		\
	asn1_err.et	\
	canthandle.asn1	\
	digest.asn1	\
	krb5.asn1	\
	krb5.opt	\
	kx509.asn1	\
	pkcs12.asn1	\
	pkcs8.asn1	\
	pkcs9.asn1	\
	pkinit.asn1	\
	rfc2459.asn1	\
	setchgpw2.asn1	\
	test.asn1	\
	test.gen	\
	version-script.map

$(srcdir)/der-protos.h:
	cd $(srcdir) && perl ../../cf/make-proto.pl -q -P comment -o der-protos.h $(dist_libasn1base_la_SOURCES) || rm -f der-protos.h

$(srcdir)/der-private.h:
	cd $(srcdir) && perl ../../cf/make-proto.pl -q -P comment -p der-private.h $(dist_libasn1base_la_SOURCES) || rm -f der-private.h
@


1.3
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@d1 1
a1 1
# $Id$
@


1.2
log
@These files are not use by us, so they're removed to make the tree
a little bit leaner, and to get rid of some bad string functions.
@
text
@d1 1
a1 1
# $KTH: Makefile.am,v 1.59 2001/01/30 01:46:53 assar Exp $
d5 1
a5 1
YFLAGS = -d
d8 1
a8 1
libasn1_la_LDFLAGS = -version-info 4:0:2
d10 94
a103 3
BUILT_SOURCES =			\
	$(gen_files:.x=.c)	\
	asn1_err.h		\
d106 1
a106 68
gen_files =					\
	asn1_APOptions.x			\
	asn1_AP_REP.x				\
	asn1_AP_REQ.x				\
	asn1_AS_REP.x				\
	asn1_AS_REQ.x				\
	asn1_Authenticator.x			\
	asn1_AuthorizationData.x		\
	asn1_CKSUMTYPE.x			\
	asn1_Checksum.x				\
	asn1_ETYPE_INFO.x			\
	asn1_ETYPE_INFO_ENTRY.x			\
	asn1_EncAPRepPart.x			\
	asn1_EncASRepPart.x			\
	asn1_EncKDCRepPart.x			\
	asn1_EncKrbCredPart.x			\
	asn1_EncKrbPrivPart.x			\
	asn1_EncTGSRepPart.x			\
	asn1_EncTicketPart.x			\
	asn1_EncryptedData.x			\
	asn1_EncryptionKey.x			\
	asn1_HostAddress.x			\
	asn1_HostAddresses.x			\
	asn1_KDCOptions.x			\
	asn1_KDC_REP.x				\
	asn1_KDC_REQ.x				\
	asn1_KDC_REQ_BODY.x			\
	asn1_KRB_CRED.x				\
	asn1_KRB_ERROR.x			\
	asn1_KRB_PRIV.x				\
	asn1_KRB_SAFE.x				\
	asn1_KRB_SAFE_BODY.x			\
	asn1_KerberosTime.x			\
	asn1_KrbCredInfo.x			\
	asn1_LastReq.x				\
	asn1_MESSAGE_TYPE.x			\
	asn1_METHOD_DATA.x			\
	asn1_NAME_TYPE.x			\
	asn1_PADATA_TYPE.x			\
	asn1_PA_DATA.x				\
	asn1_PA_ENC_TS_ENC.x			\
	asn1_Principal.x			\
	asn1_PrincipalName.x			\
	asn1_Realm.x				\
	asn1_TGS_REP.x				\
	asn1_TGS_REQ.x				\
	asn1_Ticket.x				\
	asn1_TicketFlags.x			\
	asn1_TransitedEncoding.x		\
	asn1_UNSIGNED.x


noinst_PROGRAMS = asn1_compile asn1_print
check_PROGRAMS = check-der
TESTS = check-der

asn1_compile_SOURCES = parse.y lex.l main.c hash.c symbol.c gen.c \
	gen_encode.c gen_decode.c gen_free.c gen_length.c gen_copy.c \
	gen_glue.c

libasn1_la_SOURCES = \
	der_get.c \
	der_put.c \
	der_free.c \
	der_length.c \
	der_copy.c \
	timegm.c \
	$(BUILT_SOURCES)
d112 1
a112 2
	libasn1.la \
	../com_err/libcom_err.la \
d115 4
a118 1
asn1_print_LDADD = $(check_der_LDADD)
d120 3
a122 10
TESTS = check-der

CLEANFILES = lex.c parse.c parse.h asn1.h $(BUILT_SOURCES) \
	$(gen_files) asn1_files

include_HEADERS = asn1.h asn1_err.h der.h

$(asn1_compile_OBJECTS): parse.h

$(gen_files) asn1.h: asn1_files
d124 1
a124 2
asn1_files: asn1_compile$(EXEEXT) $(srcdir)/k5.asn1
	./asn1_compile$(EXEEXT) $(srcdir)/k5.asn1
d126 123
a248 1
$(libasn1_la_OBJECTS): asn1.h asn1_err.h
d250 2
a251 1
$(asn1_print_OBJECTS): asn1.h
d253 2
a254 1
EXTRA_DIST = asn1_err.et
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of heimdal-0.3e
@
text
@@


1.1.1.2
log
@Import of heimdal-0.3f

Lots of changes, highlights include:

 * change default keytab to ANY:FILE:/etc/krb5.keytab,krb4:/etc/srvtab,
   the new keytab type that tries both of these in order (SRVTAB is
   also an alias for krb4:)

 * improve error reporting and error handling (error messages should
   be more detailed and more useful)

 * the API is closer to what MIT krb5 is using

 * more compatible with windows 2000

 * removed some memory leaks

 * bug fixes
@
text
@d1 1
a1 1
# $KTH: Makefile.am,v 1.63 2001/05/16 23:49:27 assar Exp $
d8 1
a8 1
libasn1_la_LDFLAGS = -version-info 5:0:0
a24 1
	asn1_ENCTYPE.x				\
a49 1
	asn1_LR_TYPE.x				\
d71 11
a81 21
asn1_compile_SOURCES = 				\
	gen.c					\
	gen_copy.c				\
	gen_decode.c				\
	gen_encode.c				\
	gen_free.c				\
	gen_glue.c				\
	gen_length.c				\
	hash.c					\
	lex.l					\
	main.c					\
	parse.y					\
	symbol.c

libasn1_la_SOURCES =				\
	der_get.c				\
	der_put.c				\
	der_free.c				\
	der_length.c				\
	der_copy.c				\
	timegm.c				\
d96 1
a96 1
CLEANFILES = lex.c parse.c parse.h krb5_asn1.h $(BUILT_SOURCES) \
d99 1
a99 1
include_HEADERS = krb5_asn1.h asn1_err.h der.h
d103 1
a103 1
$(gen_files) krb5_asn1.h: asn1_files
d106 1
a106 1
	./asn1_compile$(EXEEXT) $(srcdir)/k5.asn1 krb5_asn1
d108 1
a108 1
$(libasn1_la_OBJECTS): krb5_asn1.h asn1_err.h
d110 1
a110 1
$(asn1_print_OBJECTS): krb5_asn1.h
@


1.1.1.3
log
@Import of heimdal-0.4e
@
text
@d1 1
a1 1
# $KTH: Makefile.am,v 1.67 2001/09/02 16:56:45 joda Exp $
a9 2
libasn1_la_LIBADD = @@LIB_com_err@@

d101 1
d106 2
d113 1
a113 1
$(asn1_compile_OBJECTS): parse.h parse.c
@


1.1.1.4
log
@Import of heimdal-0.6.3
@
text
@d1 1
a1 1
# $KTH: Makefile.am,v 1.69.2.3 2004/06/21 08:26:44 lha Exp $
d8 1
a8 1
libasn1_la_LDFLAGS = -version-info 6:2:0
a25 1
	asn1_ChangePasswdDataMS.x		\
d72 2
a73 6
check_PROGRAMS = check-der check-gen
TESTS = check-der check-gen

check_der_SOURCES = check-der.c check-common.c
check_gen_SOURCES = check-gen.c check-common.c

a104 1
check_gen_LDADD = $(check_der_LDADD)
@


1.1.1.5
log
@Import of heimdal-0.7.2
@
text
@d1 1
a1 1
# $KTH: Makefile.am,v 1.79 2005/04/29 18:42:52 lha Exp $
d8 1
a8 1
libasn1_la_LDFLAGS = -version-info 7:0:1
d10 1
a10 1
libasn1_la_LIBADD = $(LIB_com_err)
a17 4
	asn1_AD_AND_OR.x			\
	asn1_AD_IF_RELEVANT.x			\
	asn1_AD_KDCIssued.x			\
	asn1_AD_MANDATORY_FOR_KDC.x		\
a24 2
	asn1_AUTHDATA_TYPE.x			\
	asn1_CBCParameter.x			\
a29 2
	asn1_ETYPE_INFO2.x			\
	asn1_ETYPE_INFO2_ENTRY.x		\
a39 1
	asn1_EtypeList.x			\
a50 1
	asn1_KerberosString.x			\
d53 1
a54 1
	asn1_LastReq.x				\
a59 1
	asn1_PA_ENC_SAM_RESPONSE_ENC.x		\
a60 6
	asn1_PA_PAC_REQUEST.x			\
	asn1_PA_SAM_CHALLENGE_2.x		\
	asn1_PA_SAM_CHALLENGE_2_BODY.x		\
	asn1_PA_SAM_REDIRECT.x			\
	asn1_PA_SAM_RESPONSE_2.x		\
	asn1_PA_SAM_TYPE.x			\
a62 1
	asn1_RC2CBCParameter.x			\
a63 1
	asn1_SAMFlags.x				\
d71 1
a99 1
	der_cmp.c				\
d113 2
a114 3
CLEANFILES = lex.c parse.c parse.h krb5_asn1.h \
	$(BUILT_SOURCES) \
	$(gen_files) asn1_files asn1_files2
@


