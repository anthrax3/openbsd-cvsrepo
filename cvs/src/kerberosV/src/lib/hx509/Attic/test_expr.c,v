head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2014.04.22.10.01.30;	author reyk;	state dead;
branches;
next	1.1;

1.1
date	2013.06.17.19.11.43;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@
#include "hx_locl.h"
#include <err.h>

struct foo {
    int val;
    char *str;
} foo[] = {
    { 0, "FALSE" },
    { 1, "TRUE" },
    { 0, "!TRUE" },
    { 0, "! TRUE" },
    { 0, "!\tTRUE" },
    { 0, "( FALSE AND FALSE )" },
    { 0, "( TRUE AND FALSE )" },
    { 1, "( TRUE AND TRUE )" },
    { 1, "( TRUE OR TRUE )" },
    { 1, "( TRUE OR FALSE )" },
    { 0, "( FALSE OR FALSE )" },
    { 1, "! ( FALSE OR FALSE )" },

    { 1, "\"foo\" TAILMATCH \"foo\"" },
    { 1, "\"foobar\" TAILMATCH \"bar\"" },
    { 0, "\"foobar\" TAILMATCH \"foo\"" },

    { 1, "\"foo\" == \"foo\"" },
    { 0, "\"foo\" == \"bar\"" },
    { 0, "\"foo\" != \"foo\"" },
    { 1, "\"foo\" != \"bar\"" },
    { 1, "%{variable} == \"foo\"" },
    { 0, "%{variable} == \"bar\"" },
    { 1, "%{context.variable} == \"foo\"" },
    { 0, "%{context.variable} == \"bar\"" },
    { 1, "\"foo\" IN ( \"bar\", \"foo\")" },
    { 0, "\"foo\" IN ( \"bar\", \"baz\")" },
    { 0, "\"bar\" IN %{context}" },
    { 1, "\"foo\" IN %{context}" },
    { 1, "\"variable\" IN %{context}" },

    { 1, "\"foo\" IN %{context} AND %{context.variable} == \"foo\"" }
};

int
main(int argc, char **argv)
{
    struct hx_expr *expr;
    hx509_context context;
    hx509_env env = NULL, env2 = NULL;
    int val, i, ret;

#if 0
    extern int yydebug;
    yydebug = 1;
#endif

    ret = hx509_context_init(&context);
    if (ret)
	errx(1, "hx509_context_init failed with %d", ret);

    hx509_env_add(context, &env, "variable", "foo");
    hx509_env_add(context, &env2, "variable", "foo");
    hx509_env_add_binding(context, &env, "context", env2);

    for (i = 0; i < sizeof(foo)/sizeof(foo[0]); i++) {

	expr = _hx509_expr_parse(foo[i].str);
	if (expr == NULL)
	    errx(1, "_hx509_expr_parse failed for %d: %s", i, foo[i].str);

	val = _hx509_expr_eval(context, env, expr);
	if (foo[i].val) {
	    if (val == 0)
		errx(1, "_hx509_expr_eval not true when it should: %d: %s",
		     i, foo[i].str);
	} else {
	    if (val)
		errx(1, "_hx509_expr_eval true when it should not: %d: %s",
		     i, foo[i].str);
	}

	_hx509_expr_free(expr);
    }

    hx509_env_free(&env);

    return 0;
}
@


1.1
log
@2nd part of:
update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.
@
text
@@

