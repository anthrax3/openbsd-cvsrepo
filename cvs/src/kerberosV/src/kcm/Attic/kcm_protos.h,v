head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.1.1.0.28
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.26
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.24
	OPENBSD_5_0:1.1.1.1.0.22
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.20
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.18
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.14
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.16
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.12
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.10
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	HEIMDAL_0_7_2:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.06.17.18.57.41;	author robert;	state dead;
branches;
next	1.1;

1.1
date	2006.04.14.07.32.41;	author biorn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.04.14.07.32.41;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@/* This is a generated file */
#ifndef __kcm_protos_h__
#define __kcm_protos_h__

#include <stdarg.h>

#ifdef __cplusplus
extern "C" {
#endif

krb5_error_code
kcm_access (
	krb5_context /*context*/,
	kcm_client */*client*/,
	kcm_operation /*opcode*/,
	kcm_ccache /*ccache*/);

krb5_error_code
kcm_ccache_acquire (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/,
	krb5_creds **/*credp*/);

krb5_error_code
kcm_ccache_destroy (
	krb5_context /*context*/,
	const char */*name*/);

krb5_error_code
kcm_ccache_destroy_client (
	krb5_context /*context*/,
	kcm_client */*client*/,
	const char */*name*/);

krb5_error_code
kcm_ccache_destroy_if_empty (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/);

krb5_error_code
kcm_ccache_enqueue_default (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/,
	krb5_creds */*newcred*/);

krb5_error_code
kcm_ccache_gen_new (
	krb5_context /*context*/,
	pid_t /*pid*/,
	uid_t /*uid*/,
	gid_t /*gid*/,
	kcm_ccache */*ccache*/);

krb5_error_code
kcm_ccache_new (
	krb5_context /*context*/,
	const char */*name*/,
	kcm_ccache */*ccache*/);

krb5_error_code
kcm_ccache_new_client (
	krb5_context /*context*/,
	kcm_client */*client*/,
	const char */*name*/,
	kcm_ccache */*ccache_p*/);

char *kcm_ccache_nextid (
	pid_t /*pid*/,
	uid_t /*uid*/,
	gid_t /*gid*/);

krb5_error_code
kcm_ccache_refresh (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/,
	krb5_creds **/*credp*/);

krb5_error_code
kcm_ccache_remove_cred (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/,
	krb5_flags /*whichfields*/,
	const krb5_creds */*mcreds*/);

krb5_error_code
kcm_ccache_remove_cred_internal (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/,
	krb5_flags /*whichfields*/,
	const krb5_creds */*mcreds*/);

krb5_error_code
kcm_ccache_remove_creds (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/);

krb5_error_code
kcm_ccache_remove_creds_internal (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/);

krb5_error_code
kcm_ccache_resolve (
	krb5_context /*context*/,
	const char */*name*/,
	kcm_ccache */*ccache*/);

krb5_error_code
kcm_ccache_resolve_client (
	krb5_context /*context*/,
	kcm_client */*client*/,
	kcm_operation /*opcode*/,
	const char */*name*/,
	kcm_ccache */*ccache*/);

krb5_error_code
kcm_ccache_retrieve_cred (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/,
	krb5_flags /*whichfields*/,
	const krb5_creds */*mcreds*/,
	krb5_creds **/*credp*/);

krb5_error_code
kcm_ccache_retrieve_cred_internal (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/,
	krb5_flags /*whichfields*/,
	const krb5_creds */*mcreds*/,
	krb5_creds **/*creds*/);

krb5_error_code
kcm_ccache_store_cred (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/,
	krb5_creds */*creds*/,
	int /*copy*/);

krb5_error_code
kcm_ccache_store_cred_internal (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/,
	krb5_creds */*creds*/,
	int /*copy*/,
	krb5_creds **/*credp*/);

krb5_error_code
kcm_chmod (
	krb5_context /*context*/,
	kcm_client */*client*/,
	kcm_ccache /*ccache*/,
	u_int16_t /*mode*/);

krb5_error_code
kcm_chown (
	krb5_context /*context*/,
	kcm_client */*client*/,
	kcm_ccache /*ccache*/,
	uid_t /*uid*/,
	gid_t /*gid*/);

krb5_error_code
kcm_cleanup_events (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/);

void
kcm_configure (
	int /*argc*/,
	char **/*argv*/);

krb5_error_code
kcm_cursor_delete (
	krb5_context /*context*/,
	pid_t /*pid*/,
	kcm_ccache /*ccache*/,
	u_int32_t /*key*/);

krb5_error_code
kcm_cursor_find (
	krb5_context /*context*/,
	pid_t /*pid*/,
	kcm_ccache /*ccache*/,
	u_int32_t /*key*/,
	kcm_cursor **/*cursor*/);

krb5_error_code
kcm_cursor_new (
	krb5_context /*context*/,
	pid_t /*pid*/,
	kcm_ccache /*ccache*/,
	u_int32_t */*cursor*/);

krb5_error_code
kcm_debug_ccache (krb5_context /*context*/);

krb5_error_code
kcm_debug_events (krb5_context /*context*/);

krb5_error_code
kcm_dispatch (
	krb5_context /*context*/,
	kcm_client */*client*/,
	krb5_data */*req_data*/,
	krb5_data */*resp_data*/);

krb5_error_code
kcm_enqueue_event (
	krb5_context /*context*/,
	kcm_event */*event*/);

krb5_error_code
kcm_enqueue_event_internal (
	krb5_context /*context*/,
	kcm_event */*event*/);

krb5_error_code
kcm_enqueue_event_relative (
	krb5_context /*context*/,
	kcm_event */*event*/);

krb5_error_code
kcm_internal_ccache (
	krb5_context /*context*/,
	kcm_ccache /*c*/,
	krb5_ccache /*id*/);

void
kcm_log (
	int /*level*/,
	const char */*fmt*/,
	...);

char*
kcm_log_msg (
	int /*level*/,
	const char */*fmt*/,
	...);

char*
kcm_log_msg_va (
	int /*level*/,
	const char */*fmt*/,
	va_list /*ap*/);

void
kcm_loop (void);

const char *kcm_op2string (kcm_operation /*opcode*/);

void
kcm_openlog (void);

krb5_error_code
kcm_release_ccache (
	krb5_context /*context*/,
	kcm_ccache */*ccache*/);

krb5_error_code
kcm_remove_event (
	krb5_context /*context*/,
	kcm_event */*event*/);

krb5_error_code
kcm_retain_ccache (
	krb5_context /*context*/,
	kcm_ccache /*ccache*/);

krb5_error_code
kcm_run_events (
	krb5_context /*context*/,
	time_t /*now*/);

krb5_error_code
kcm_zero_ccache_data (
	krb5_context /*context*/,
	kcm_ccache /*cache*/);

krb5_error_code
kcm_zero_ccache_data_internal (
	krb5_context /*context*/,
	kcm_ccache_data */*cache*/);

#ifdef __cplusplus
}
#endif

#endif /* __kcm_protos_h__ */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of heimdal-0.7.2
@
text
@@
