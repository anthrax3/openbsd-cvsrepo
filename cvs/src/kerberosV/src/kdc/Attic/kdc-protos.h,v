head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2014.04.22.10.01.26;	author reyk;	state dead;
branches;
next	1.1;

1.1
date	2013.06.17.18.57.41;	author robert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@/* This is a generated file */
#ifndef __kdc_protos_h__
#define __kdc_protos_h__

#include <stdarg.h>

#ifdef __cplusplus
extern "C" {
#endif

krb5_error_code
kdc_check_flags (
	krb5_context /*context*/,
	krb5_kdc_configuration */*config*/,
	hdb_entry_ex */*client_ex*/,
	const char */*client_name*/,
	hdb_entry_ex */*server_ex*/,
	const char */*server_name*/,
	krb5_boolean /*is_as_req*/);

void
kdc_log (
	krb5_context /*context*/,
	krb5_kdc_configuration */*config*/,
	int /*level*/,
	const char */*fmt*/,
	...);

char*
kdc_log_msg (
	krb5_context /*context*/,
	krb5_kdc_configuration */*config*/,
	int /*level*/,
	const char */*fmt*/,
	...);

char*
kdc_log_msg_va (
	krb5_context /*context*/,
	krb5_kdc_configuration */*config*/,
	int /*level*/,
	const char */*fmt*/,
	va_list /*ap*/);

void
kdc_openlog (
	krb5_context /*context*/,
	const char */*service*/,
	krb5_kdc_configuration */*config*/);

krb5_error_code
krb5_kdc_get_config (
	krb5_context /*context*/,
	krb5_kdc_configuration **/*config*/);

krb5_error_code
krb5_kdc_pk_initialize (
	krb5_context /*context*/,
	krb5_kdc_configuration */*config*/,
	const char */*user_id*/,
	const char */*anchors*/,
	char **/*pool*/,
	char **/*revoke_list*/);

krb5_error_code
krb5_kdc_pkinit_config (
	krb5_context /*context*/,
	krb5_kdc_configuration */*config*/);

int
krb5_kdc_process_krb5_request (
	krb5_context /*context*/,
	krb5_kdc_configuration */*config*/,
	unsigned char */*buf*/,
	size_t /*len*/,
	krb5_data */*reply*/,
	const char */*from*/,
	struct sockaddr */*addr*/,
	int /*datagram_reply*/);

int
krb5_kdc_process_request (
	krb5_context /*context*/,
	krb5_kdc_configuration */*config*/,
	unsigned char */*buf*/,
	size_t /*len*/,
	krb5_data */*reply*/,
	krb5_boolean */*prependlength*/,
	const char */*from*/,
	struct sockaddr */*addr*/,
	int /*datagram_reply*/);

int
krb5_kdc_save_request (
	krb5_context /*context*/,
	const char */*fn*/,
	const unsigned char */*buf*/,
	size_t /*len*/,
	const krb5_data */*reply*/,
	const struct sockaddr */*sa*/);

krb5_error_code
krb5_kdc_set_dbinfo (
	krb5_context /*context*/,
	struct krb5_kdc_configuration */*c*/);

void
krb5_kdc_update_time (struct timeval */*tv*/);

krb5_error_code
krb5_kdc_windc_init (krb5_context /*context*/);

#ifdef __cplusplus
}
#endif

#endif /* __kdc_protos_h__ */
@


1.1
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@@

