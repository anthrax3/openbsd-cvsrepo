head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	HEIMDAL_0_6_3:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.04.22.10.01.19;	author reyk;	state dead;
branches;
next	1.3;

1.3
date	2013.06.17.19.11.38;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.29.21.14.54;	author biorn;	state dead;
branches;
next	1.1;

1.1
date	2004.10.29.15.55.24;	author biorn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.10.29.15.55.24;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@
RSHD(8)                   BSD System Manager's Manual                  RSHD(8)

NNAAMMEE
     rrsshhdd -- remote shell server

SSYYNNOOPPSSIISS
     rrsshhdd [--aaiikkllnnvvxxPPLL] [--pp _p_o_r_t]

DDEESSCCRRIIPPTTIIOONN
     rrsshhdd is the server for the rsh(1) program. It provides an authenticated
     remote command execution service.  Supported options are:

     --nn, ----nnoo--kkeeeeppaalliivvee
             Disables keep-alive messages.  Keep-alives are packets sent at
             certain intervals to make sure that the client is still there,
             even when it doesn't send any data.

     --kk, ----kkeerrbbeerrooss
             Assume that clients connecting to this server will use some form
             of Kerberos authentication. See the _E_X_A_M_P_L_E_S section for a sample
             inetd.conf(5) configuration.

     --xx, ----eennccrryypptt
             For Kerberos 4 this means that the connections are encrypted.
             Kerberos 5 can negotiate encryption even without this option, but
             if it's present rrsshhdd will deny unencrypted connections. This
             option implies --kk.

     --vv, ----vvaaccuuoouuss
             If the connecting client does not use any Kerberised authentica-
             tion, print a message that complains about this fact, and exit.
             This is helpful if you want to move away from old port-based
             authentication.

     --PP      When using the AFS filesystem, users' authentication tokens are
             put in something called a PAG (Process Authentication Group).
             Multiple processes can share a PAG, but normally each login ses-
             sion has its own PAG. This option disables the sseettppaagg() call, so
             all tokens will be put in the default (uid-based) PAG, making it
             possible to share tokens between sessions. This is only useful in
             peculiar environments, such as some batch systems.

     --ii, ----nnoo--iinneettdd
             The --ii option will cause rrsshhdd to create a socket, instead of
             assuming that its stdin came from inetd(8).  This is mostly use-
             ful for debugging.

     --pp _p_o_r_t, ----ppoorrtt==_p_o_r_t
             Port to use with --ii.

     --aa      This flag is for backwards compatibility only.

     --LL      This flag enables logging of connections to syslogd(8).  This
             option is always on in this implementation.

FFIILLEESS
     /etc/hosts.equiv
     ~/.rhosts

EEXXAAMMPPLLEESS
     The following can be used to enable Kerberised rsh in inetd.cond(5),
     while disabling non-Kerberised connections:

     shell   stream  tcp  nowait  root  /usr/libexec/rshd  rshd -v
     kshell  stream  tcp  nowait  root  /usr/libexec/rshd  rshd -k
     ekshell stream  tcp  nowait  root  /usr/libexec/rshd  rshd -kx

SSEEEE AALLSSOO
     rsh(1), iruserok(3)

HHIISSTTOORRYY
     The rrsshhdd command appeared in 4.2BSD.

AAUUTTHHOORRSS
     This implementation of rrsshhdd was written as part of the Heimdal Kerberos 5
     implementation.

HEIMDAL                        November 22, 2002                       HEIMDAL
@


1.3
log
@2nd part of:
update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.
@
text
@@


1.2
log
@Remove unneeded files. ok beck@@
@
text
@d2 1
a2 1
RSHD(8)                  UNIX System Manager's Manual                  RSHD(8)
d5 1
a5 1
     rrsshhdd - remote shell server
d27 2
a28 2
             if it's present rrsshhdd will deny unencrypted connections. This op-
             tion implies --kk.
d33 2
a34 2
             This is helpful if you want to move away from old port-based au-
             thentication.
d45 3
a47 3
             The --ii option will cause rrsshhdd to create a socket, instead of as-
             suming that its stdin came from inetd(8).  This is mostly useful
             for debugging.
d54 2
a55 2
     --LL      This flag enables logging of connections to syslogd(8).  This op-
             tion is always on in this implementation.
d70 1
a70 1
     rsh(1),  iruserok(3)
d79 1
a79 1
 HEIMDAL                       November 22, 2002                             2
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of heimdal-0.6.3
@
text
@@
