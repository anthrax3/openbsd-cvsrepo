head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	HEIMDAL_0_7_2:1.1.1.4
	HEIMDAL_0_6_3:1.1.1.3
	HEIMDAL_0_6RC1:1.1.1.3
	OPENBSD_3_3:1.1.1.2.0.6
	OPENBSD_3_3_BASE:1.1.1.2
	OPENBSD_3_2:1.1.1.2.0.4
	OPENBSD_3_2_BASE:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.2
	OPENBSD_3_1_BASE:1.1.1.2
	HEIMDAL_0_4e:1.1.1.2
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	HEIMDAL_0_3f:1.1.1.1
	HEIMDAL_0_3e:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2014.04.22.10.01.18;	author reyk;	state dead;
branches;
next	1.3;

1.3
date	2013.06.17.19.11.36;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.12.17.18.43;	author hin;	state dead;
branches;
next	1.1;

1.1
date	2001.05.25.07.46.41;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.25.07.46.41;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.02.06.08.53.05;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.02.14.22;	author hin;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2006.04.14.07.32.29;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@/*
 * Copyright (c) 1998 - 2001 Kungliga Tekniska HÃ¶gskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "ftpd_locl.h"
#include <gssapi/gssapi.h>

/* XXX sync with gssapi.c */
struct gssapi_data {
    gss_ctx_id_t context_hdl;
    gss_name_t client_name;
    gss_cred_id_t delegated_cred_handle;
    void *mech_data;
};

int gssapi_userok(void*, char*); /* to keep gcc happy */
int gssapi_session(void*, char*); /* to keep gcc happy */

int
gssapi_userok(void *app_data, char *username)
{
    struct gssapi_data *data = app_data;

    /* Yes, this logic really is inverted. */
    return !gss_userok(data->client_name, username);
}

int
gssapi_session(void *app_data, char *username)
{
    struct gssapi_data *data = app_data;
    OM_uint32 major, minor;
    int ret = 0;

    if (data->delegated_cred_handle != GSS_C_NO_CREDENTIAL) {
        major = gss_store_cred(&minor, data->delegated_cred_handle,
                               GSS_C_INITIATE, GSS_C_NO_OID,
                               1, 1, NULL, NULL);
        if (GSS_ERROR(major))
            ret = 1;
	afslog(NULL, 1);
    }

    gss_release_cred(&minor, &data->delegated_cred_handle);
    return ret;
}
@


1.3
log
@2nd part of:
update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.
@
text
@@


1.2
log
@These files are not use by us, so they're removed to make the tree
a little bit leaner, and to get rid of some bad string functions.
@
text
@d2 3
a4 3
 * Copyright (c) 1998 - 2001 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden). 
 * All rights reserved. 
d6 3
a8 3
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
d10 2
a11 2
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
d13 3
a15 3
 * 2. Redistributions in binary form must reproduce the above copyright 
 *    notice, this list of conditions and the following disclaimer in the 
 *    documentation and/or other materials provided with the distribution. 
d17 3
a19 3
 * 3. Neither the name of the Institute nor the names of its contributors 
 *    may be used to endorse or promote products derived from this software 
 *    without specific prior written permission. 
d21 11
a31 11
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
 * SUCH DAMAGE. 
d35 1
a35 10
#include <gssapi.h>
#include <krb5.h>

RCSID("$KTH: gss_userok.c,v 1.7 2001/01/30 00:36:58 assar Exp $");

/* XXX a bit too much of krb5 dependency here... 
   What is the correct way to do this? 
   */

extern krb5_context gssapi_krb5_context;
d38 1
a38 1
struct gss_data {
d40 1
a40 1
    char *client_name;
d42 1
d45 11
a55 1
int gss_userok(void*, char*); /* to keep gcc happy */
d58 1
a58 1
gss_userok(void *app_data, char *username)
d60 11
a70 65
    struct gss_data *data = app_data;
    if(gssapi_krb5_context) {
	krb5_principal client;
	krb5_error_code ret;
        
	ret = krb5_parse_name(gssapi_krb5_context, data->client_name, &client);
	if(ret)
	    return 1;
	ret = krb5_kuserok(gssapi_krb5_context, client, username);
        if (!ret) {
           krb5_free_principal(gssapi_krb5_context, client);
           return 1;
        }
        
        ret = 0;
        
        /* more of krb-depend stuff :-( */
	/* gss_add_cred() ? */
        if (data->delegated_cred_handle && 
            data->delegated_cred_handle->ccache ) {
            
           krb5_ccache ccache = NULL; 
           char* ticketfile;
           struct passwd *pw;
	   OM_uint32 minor_status;
           
           pw = getpwnam(username);
           
	   if (pw == NULL) {
	       ret = 1;
	       goto fail;
	   }

           asprintf (&ticketfile, "%s%u", KRB5_DEFAULT_CCROOT, pw->pw_uid);
        
           ret = krb5_cc_resolve(gssapi_krb5_context, ticketfile, &ccache);
           if (ret)
              goto fail;
           
           ret = gss_krb5_copy_ccache(&minor_status,
				      data->delegated_cred_handle,
				      ccache);
           if (ret)
              goto fail;
           
           chown (ticketfile+5, pw->pw_uid, pw->pw_gid);
           
#ifdef KRB4
           if (k_hasafs()) {
              krb5_afslog(gssapi_krb5_context, ccache, 0, 0);
           }
#endif
           esetenv ("KRB5CCNAME", ticketfile, 1);
           
fail:
           if (ccache)
              krb5_cc_close(gssapi_krb5_context, ccache); 
           krb5_cc_destroy(gssapi_krb5_context, 
                           data->delegated_cred_handle->ccache);
           data->delegated_cred_handle->ccache = NULL;
           free(ticketfile);
        }
           
	krb5_free_principal(gssapi_krb5_context, client);
        return ret;
d72 3
a74 1
    return 1;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of heimdal-0.3e
@
text
@@


1.1.1.2
log
@Import of heimdal-0.4e
@
text
@d38 1
a38 1
RCSID("$KTH: gss_userok.c,v 1.8 2001/08/05 06:38:57 assar Exp $");
d91 1
a91 2
           asprintf (&ticketfile, "%s%u", KRB5_DEFAULT_CCROOT,
		     (unsigned)pw->pw_uid);
@


1.1.1.3
log
@Import of heimdal-0.6rc1
@
text
@d38 1
a38 1
RCSID("$KTH: gss_userok.c,v 1.10 2003/03/18 13:56:35 lha Exp $");
d106 1
d108 1
a108 1
	       krb5_afslog(gssapi_krb5_context, ccache, 0, 0);
d110 1
@


1.1.1.4
log
@Import of heimdal-0.7.2
@
text
@d38 1
a38 1
RCSID("$KTH: gss_userok.c,v 1.12 2003/05/21 15:08:48 lha Exp $");
a61 1
	OM_uint32 minor_status;
d76 3
a78 1
        if (data->delegated_cred_handle != GSS_C_NO_CREDENTIAL) {
d82 1
d101 1
a101 2
           if (ret) {
	      ret = 0;
a102 1
	   }
d114 3
a119 1
	gss_release_cred(&minor_status, &data->delegated_cred_handle);
@


