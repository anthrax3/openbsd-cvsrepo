head	1.3;
access;
symbols
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@.\" @;


1.3
date	2014.04.22.10.01.23;	author reyk;	state dead;
branches;
next	1.2;

1.2
date	2014.04.18.09.47.35;	author ajacoutot;	state Exp;
branches;
next	1.1;

1.1
date	2013.06.17.19.11.40;	author robert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@.TH "krb5_ccache_intro" 3 "9 Dec 2012" "Version 1.5.3" "HeimdalKerberos5library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
krb5_ccache_intro \- The credential cache functions 
.SH "Kerberos credential caches"
.PP
krb5_ccache structure holds a Kerberos credential cache.
.PP
Heimdal support the follow types of credential caches:
.PP
.IP "\(bu" 2
SCC Store the credential in a database
.IP "\(bu" 2
FILE Store the credential in memory
.IP "\(bu" 2
MEMORY Store the credential in memory
.IP "\(bu" 2
API A credential cache server based solution for Mac OS X
.IP "\(bu" 2
KCM A credential cache server based solution for all platforms
.PP
.SS "Example"
This is a minimalistic version of klist: 
.PP
.nf
#include <krb5.h>

int
main (int argc, char **argv)
{
    krb5_context context;
    krb5_cc_cursor cursor;
    krb5_error_code ret;
    krb5_ccache id;
    krb5_creds creds;

    if (krb5_init_context (&context) != 0)
        errx(1, 'krb5_context');

    ret = krb5_cc_default (context, &id);
    if (ret)
        krb5_err(context, 1, ret, 'krb5_cc_default');

    ret = krb5_cc_start_seq_get(context, id, &cursor);
    if (ret)
        krb5_err(context, 1, ret, 'krb5_cc_start_seq_get');

    while((ret = krb5_cc_next_cred(context, id, &cursor, &creds)) == 0){
        char *principal;

        krb5_unparse_name(context, creds.server, &principal);
        printf('principal: %s\\n', principal);
        free(principal);
        krb5_free_cred_contents (context, &creds);
    }
    ret = krb5_cc_end_seq_get(context, id, &cursor);
    if (ret)
        krb5_err(context, 1, ret, 'krb5_cc_end_seq_get');

    krb5_cc_close(context, id);

    krb5_free_context(context);
    return 0;
}

.fi
.PP
 
@


1.2
log
@Upgrade our KerberosV to Heimdal 1.5.3 (minor update).

- Fix leaking file descriptors in KDC
- Better socket/timeout handling in libkrb5
- General bug fixes

ok robert@@
@
text
@@


1.1
log
@2nd part of:
update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.
@
text
@d1 1
a1 1
.TH "krb5_ccache_intro" 3 "11 Jan 2012" "Version 1.5.2" "HeimdalKerberos5library" \" -*- nroff -*-
@

