head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.1.3.0.28
	OPENBSD_5_3_BASE:1.1.1.3
	OPENBSD_5_2:1.1.1.3.0.26
	OPENBSD_5_2_BASE:1.1.1.3
	OPENBSD_5_1_BASE:1.1.1.3
	OPENBSD_5_1:1.1.1.3.0.24
	OPENBSD_5_0:1.1.1.3.0.22
	OPENBSD_5_0_BASE:1.1.1.3
	OPENBSD_4_9:1.1.1.3.0.20
	OPENBSD_4_9_BASE:1.1.1.3
	OPENBSD_4_8:1.1.1.3.0.18
	OPENBSD_4_8_BASE:1.1.1.3
	OPENBSD_4_7:1.1.1.3.0.14
	OPENBSD_4_7_BASE:1.1.1.3
	OPENBSD_4_6:1.1.1.3.0.16
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.12
	OPENBSD_4_5_BASE:1.1.1.3
	OPENBSD_4_4:1.1.1.3.0.10
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.8
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_2:1.1.1.3.0.6
	OPENBSD_4_2_BASE:1.1.1.3
	OPENBSD_4_1:1.1.1.3.0.4
	OPENBSD_4_1_BASE:1.1.1.3
	OPENBSD_4_0:1.1.1.3.0.2
	OPENBSD_4_0_BASE:1.1.1.3
	HEIMDAL_0_7_2:1.1.1.3
	OPENBSD_3_9:1.1.1.2.0.12
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.10
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.8
	OPENBSD_3_7_BASE:1.1.1.2
	HEIMDAL_0_6_3:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.6
	OPENBSD_3_6_BASE:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.4
	OPENBSD_3_5_BASE:1.1.1.2
	OPENBSD_3_4:1.1.1.2.0.2
	OPENBSD_3_4_BASE:1.1.1.2
	HEIMDAL_0_6:1.1.1.2
	HEIMDAL_0_6RC1:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.06.17.18.57.41;	author robert;	state dead;
branches;
next	1.1;

1.1
date	2003.05.11.02.15.27;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.11.02.15.27;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.13.02.59.35;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.04.14.07.32.35;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@/*
 * Copyright (c) 2002 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden). 
 * All rights reserved. 
 *
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
 *
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
 *
 * 2. Redistributions in binary form must reproduce the above copyright 
 *    notice, this list of conditions and the following disclaimer in the 
 *    documentation and/or other materials provided with the distribution. 
 *
 * 3. Neither the name of the Institute nor the names of its contributors 
 *    may be used to endorse or promote products derived from this software 
 *    without specific prior written permission. 
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
 * SUCH DAMAGE. 
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
RCSID("$KTH: make_crypto.c,v 1.4 2003/01/12 18:54:46 nectar Exp $");
#endif
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>

int
main(int argc, char **argv)
{
    char *p;
    FILE *f;
    if(argc != 2) {
	fprintf(stderr, "Usage: make_crypto file\n");
	exit(1);
    }
    f = fopen(argv[1], "w");
    if(f == NULL) {
	perror(argv[1]);
	exit(1);
    }
    for(p = argv[1]; *p; p++)
	if(!isalnum((int)*p))
	    *p = '_';
    fprintf(f, "#ifndef __%s__\n", argv[1]);
    fprintf(f, "#define __%s__\n", argv[1]);
#ifdef HAVE_OPENSSL
    fputs("#define OPENSSL_DES_LIBDES_COMPATIBILITY\n", f);
    fputs("#include <openssl/des.h>\n", f);
    fputs("#include <openssl/rc4.h>\n", f);
    fputs("#include <openssl/md4.h>\n", f);
    fputs("#include <openssl/md5.h>\n", f);
    fputs("#include <openssl/sha.h>\n", f);
#else
    fputs("#include <des.h>\n", f);
    fputs("#include <md4.h>\n", f);
    fputs("#include <md5.h>\n", f);
    fputs("#include <sha.h>\n", f);
    fputs("#include <rc4.h>\n", f);
#ifdef HAVE_OLD_HASH_NAMES
    fputs("\n", f);
    fputs("    typedef struct md4 MD4_CTX;\n", f);
    fputs("#define MD4_Init md4_init\n", f);
    fputs("#define MD4_Update md4_update\n", f);
    fputs("#define MD4_Final(D, C) md4_finito((C), (D))\n", f);
    fputs("\n", f);
    fputs("    typedef struct md5 MD5_CTX;\n", f);
    fputs("#define MD5_Init md5_init\n", f);
    fputs("#define MD5_Update md5_update\n", f);
    fputs("#define MD5_Final(D, C) md5_finito((C), (D))\n", f);
    fputs("\n", f);
    fputs("    typedef struct sha SHA_CTX;\n", f);
    fputs("#define SHA1_Init sha_init\n", f);
    fputs("#define SHA1_Update sha_update\n", f);
    fputs("#define SHA1_Final(D, C) sha_finito((C), (D))\n", f);
#endif
#endif
    fprintf(f, "#endif /* __%s__ */\n", argv[1]);
    fclose(f);
    exit(0);
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of heimdal-0.6rc1
@
text
@@


1.1.1.2
log
@Import of heimdal-0.6, released earlier today.
@
text
@d2 1
a2 1
 * Copyright (c) 2002 - 2003 Kungliga Tekniska Högskolan
d36 1
a36 1
RCSID("$KTH: make_crypto.c,v 1.4.2.1 2003/05/05 20:10:27 joda Exp $");
a68 3
#if ENABLE_AES
    fputs("#include <openssl/aes.h>\n", f);
#endif    
@


1.1.1.3
log
@Import of heimdal-0.7.2
@
text
@d2 1
a2 1
 * Copyright (c) 2002 - 2005 Kungliga Tekniska Högskolan
d36 1
a36 1
RCSID("$KTH: make_crypto.c,v 1.12 2005/04/18 07:56:41 lha Exp $");
d58 1
a58 1
	if(!isalnum((unsigned char)*p))
a62 1
    fputs("#ifndef OPENSSL_DES_LIBDES_COMPATIBILITY\n", f);
a63 1
    fputs("#endif\n", f);
a65 1
    fputs("#include <openssl/rc2.h>\n", f);
d69 1
d71 1
a71 1
    fputs("#include <openssl/ui.h>\n", f);
a72 5
    fputs("#ifdef KRB5\n", f);
    fputs("#include <krb5-types.h>\n", f);
    fputs("#elif defined(KRB4)\n", f);
    fputs("#include <ktypes.h>\n", f);
    fputs("#endif\n", f);
a77 2
    fputs("#include <rc2.h>\n", f);
    fputs("#include <aes.h>\n", f);
@


