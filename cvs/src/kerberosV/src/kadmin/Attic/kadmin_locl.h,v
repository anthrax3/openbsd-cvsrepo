head	1.8;
access;
symbols
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.28
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.26
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.24
	OPENBSD_5_0:1.6.0.22
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.20
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.18
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.14
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.16
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.12
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.10
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.8
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	HEIMDAL_0_7_2:1.1.1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	HEIMDAL_0_6_3:1.1.1.4
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	HEIMDAL_0_6:1.1.1.4
	HEIMDAL_0_6RC1:1.1.1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	HEIMDAL_0_4e:1.1.1.3
	OPENBSD_3_0:1.1.1.2.0.2
	OPENBSD_3_0_BASE:1.1.1.2
	HEIMDAL_0_3f:1.1.1.2
	HEIMDAL_0_3e:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2014.04.22.10.01.26;	author reyk;	state dead;
branches;
next	1.7;

1.7
date	2013.06.17.18.57.41;	author robert;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.14.08.15.03;	author biorn;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.11.03.39.59;	author hin;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.15.02.41.36;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.06.09.10.02;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.18.00.48.39;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.25.07.49.43;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.25.07.49.43;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.06.22.21.21.38;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.02.06.08.54.47;	author hin;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.05.11.02.15.28;	author hin;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2006.04.14.07.32.38;	author biorn;	state Exp;
branches;
next	;


desc
@@


1.8
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@/*
 * Copyright (c) 1997-2004 Kungliga Tekniska HÃ¶gskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * $Id: kadmin_locl.h,v 1.7 2013/06/17 18:57:41 robert Exp $
 */

#ifndef __ADMIN_LOCL_H__
#define __ADMIN_LOCL_H__

#include <config.h>

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <errno.h>
#include <limits.h>
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_SYS_SELECT_H
#include <sys/select.h>
#endif
#ifdef HAVE_FCNTL_H
#include <fcntl.h>
#endif
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_SYS_SELECT_H
#include <sys/select.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#ifdef HAVE_NETINET_IN6_H
#include <netinet/in6.h>
#endif
#ifdef HAVE_NETINET6_IN6_H
#include <netinet6/in6.h>
#endif

#ifdef HAVE_UTIL_H
#include <util.h>
#endif
#ifdef HAVE_LIBUTIL_H
#include <libutil.h>
#endif
#ifdef HAVE_NETDB_H
#include <netdb.h>
#endif
#ifdef HAVE_SYS_UN_H
#include <sys/un.h>
#endif
#include <err.h>
#include <roken.h>
#include <krb5.h>
#include <krb5_locl.h>
#include <hdb.h>
#include <hdb_err.h>
#include <hex.h>
#include <kadm5/admin.h>
#include <kadm5/private.h>
#include <kadm5/kadm5_err.h>
#include <parse_time.h>
#include <getarg.h>

extern krb5_context context;
extern void * kadm_handle;

#undef ALLOC
#define ALLOC(X) ((X) = malloc(sizeof(*(X))))

/* util.c */

void attributes2str(krb5_flags, char *, size_t);
int  str2attributes(const char *, krb5_flags *);
int  parse_attributes (const char *, krb5_flags *, int *, int);
int  edit_attributes (const char *, krb5_flags *, int *, int);

void time_t2str(time_t, char *, size_t, int);
int  str2time_t (const char *, time_t *);
int  parse_timet (const char *, krb5_timestamp *, int *, int);
int  edit_timet (const char *, krb5_timestamp *, int *,
		 int);

void deltat2str(unsigned, char *, size_t);
int  str2deltat(const char *, krb5_deltat *);
int  parse_deltat (const char *, krb5_deltat *, int *, int);
int  edit_deltat (const char *, krb5_deltat *, int *, int);

int edit_entry(kadm5_principal_ent_t, int *, kadm5_principal_ent_t, int);
void set_defaults(kadm5_principal_ent_t, int *, kadm5_principal_ent_t, int);
int set_entry(krb5_context, kadm5_principal_ent_t, int *,
	      const char *, const char *, const char *,
	      const char *, const char *);
int
foreach_principal(const char *, int (*)(krb5_principal, void*),
		  const char *, void *);

int parse_des_key (const char *, krb5_key_data *, const char **);

/* random_password.c */

void
random_password(char *, size_t);

/* kadm_conn.c */

extern sig_atomic_t term_flag, doing_useful_work;

void parse_ports(krb5_context, const char*);
void start_server(krb5_context, const char*);

/* server.c */

krb5_error_code
kadmind_loop (krb5_context, krb5_keytab, int);

/* rpc.c */

int
handle_mit(krb5_context, void *, size_t, int);


#endif /* __ADMIN_LOCL_H__ */
@


1.7
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@d35 1
a35 1
 * $Id$
@


1.6
log
@Merge of heimdal 0.7.2
Tested by todd & beck, ok beck.
@
text
@d2 3
a4 3
 * Copyright (c) 1997-2004 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden). 
 * All rights reserved. 
d6 3
a8 3
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
d10 2
a11 2
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
d13 3
a15 3
 * 2. Redistributions in binary form must reproduce the above copyright 
 *    notice, this list of conditions and the following disclaimer in the 
 *    documentation and/or other materials provided with the distribution. 
d17 3
a19 3
 * 3. Neither the name of the Institute nor the names of its contributors 
 *    may be used to endorse or promote products derived from this software 
 *    without specific prior written permission. 
d21 11
a31 11
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
 * SUCH DAMAGE. 
d34 2
a35 2
/* 
 * $KTH: kadmin_locl.h,v 1.45 2004/06/27 15:04:07 joda Exp $
a40 1
#ifdef HAVE_CONFIG_H
d42 1
a42 1
#endif
d92 1
d107 21
a127 29
void attributes2str(krb5_flags attributes, char *str, size_t len);
int  str2attributes(const char *str, krb5_flags *flags);
int  parse_attributes (const char *resp, krb5_flags *attr, int *mask, int bit);
int  edit_attributes (const char *prompt, krb5_flags *attr, int *mask,
		      int bit);

void time_t2str(time_t t, char *str, size_t len, int include_time);
int  str2time_t (const char *str, time_t *time);
int  parse_timet (const char *resp, krb5_timestamp *value, int *mask, int bit);
int  edit_timet (const char *prompt, krb5_timestamp *value, int *mask,
		 int bit);

void deltat2str(unsigned t, char *str, size_t len);
int  str2deltat(const char *str, krb5_deltat *delta);
int  parse_deltat (const char *resp, krb5_deltat *value, int *mask, int bit);
int  edit_deltat (const char *prompt, krb5_deltat *value, int *mask, int bit);

int edit_entry(kadm5_principal_ent_t ent, int *mask,
	       kadm5_principal_ent_t default_ent, int default_mask);
void set_defaults(kadm5_principal_ent_t ent, int *mask,
		  kadm5_principal_ent_t default_ent, int default_mask);
int set_entry(krb5_context context,
	      kadm5_principal_ent_t ent,
	      int *mask,
	      const char *max_ticket_life,
	      const char *max_renewable_life,
	      const char *expiration,
	      const char *pw_expiration,
	      const char *attributes);
d129 2
a130 9
foreach_principal(const char *exp, 
		  int (*func)(krb5_principal, void*), 
		  const char *funcname,
		  void *data);

int parse_des_key (const char *key_string,
		   krb5_key_data *key_data, const char **err);

/* server.c */
d132 1
a132 2
krb5_error_code
kadmind_loop (krb5_context, krb5_auth_context, krb5_keytab, int);
d137 1
a137 1
random_password(char *pw, size_t len);
d141 1
a141 1
extern volatile sig_atomic_t term_flag, doing_useful_work;
d144 1
a144 1
int start_server(krb5_context);
d149 7
a155 1
kadmind_loop (krb5_context, krb5_auth_context, krb5_keytab, int);
@


1.5
log
@Merge 0.6rc1
@
text
@d2 1
a2 1
 * Copyright (c) 1997-2001 Kungliga Tekniska Högskolan
d35 1
a35 1
 * $KTH: kadmin_locl.h,v 1.41 2002/09/10 20:04:45 joda Exp $
a98 1

a101 19
#define DECL(X) int X(int, char **)

DECL(add_new_key);
DECL(cpw_entry);
DECL(del_entry);
DECL(del_enctype);
DECL(exit_kadmin);
DECL(ext_keytab);
DECL(get_entry);
DECL(get_privs);
DECL(help);
DECL(list_princs);
DECL(mod_entry);
DECL(rename_entry);
DECL(init);
DECL(dump);
DECL(load);
DECL(merge);

a148 5

/* version4.c */

void
handle_v4(krb5_context context, krb5_keytab keytab, int len, int fd);
@


1.4
log
@basic change to make kerbV build with OpenSSL 0.9.7 -
since the newer OpenSSL's wish to depreciate the libdes
api, and now do not have symbol conflicts with libdes,
we change the build here so that we use the libdes <des.h>
and use libdes rather than libcrypto (this is the same thing
kerberosIV uses)
@
text
@d35 1
a35 1
 * $KTH: kadmin_locl.h,v 1.40 2001/08/22 20:30:24 assar Exp $
a88 5
#ifdef HAVE_OPENSSL
#include <des.h>
#else
#include <des.h>
#endif
@


1.3
log
@Merge heimdal-0.4e
@
text
@d90 1
a90 1
#include <openssl/des.h>
@


1.2
log
@volatile sig_atomic_t
@
text
@d35 1
a35 1
 * $KTH: kadmin_locl.h,v 1.36 2001/05/07 05:32:04 assar Exp $
d78 3
d89 1
a89 1
#ifdef HAVE_OPENSSL_DES_H
d151 2
a165 2

void get_response(const char *prompt, const char *def, char *buf, size_t len);
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * Copyright (c) 1997-2000 Kungliga Tekniska Högskolan
d35 1
a35 1
 * $KTH: kadmin_locl.h,v 1.34 2000/09/19 12:46:18 assar Exp $
d86 3
d90 1
d159 1
d184 1
a184 1
sig_atomic_t term_flag, doing_useful_work;
@


1.1.1.1
log
@Import of heimdal-0.3e
@
text
@@


1.1.1.2
log
@Import of heimdal-0.3f

Lots of changes, highlights include:

 * change default keytab to ANY:FILE:/etc/krb5.keytab,krb4:/etc/srvtab,
   the new keytab type that tries both of these in order (SRVTAB is
   also an alias for krb4:)

 * improve error reporting and error handling (error messages should
   be more detailed and more useful)

 * the API is closer to what MIT krb5 is using

 * more compatible with windows 2000

 * removed some memory leaks

 * bug fixes
@
text
@d2 1
a2 1
 * Copyright (c) 1997-2001 Kungliga Tekniska Högskolan
d35 1
a35 1
 * $KTH: kadmin_locl.h,v 1.36 2001/05/07 05:32:04 assar Exp $
a85 3
#ifdef HAVE_OPENSSL_DES_H
#include <openssl/des.h>
#else
a86 1
#endif
a154 1
		  const char *funcname,
d179 1
a179 1
extern sig_atomic_t term_flag, doing_useful_work;
@


1.1.1.3
log
@Import of heimdal-0.4e
@
text
@d35 1
a35 1
 * $KTH: kadmin_locl.h,v 1.40 2001/08/22 20:30:24 assar Exp $
a77 3
#ifdef HAVE_LIBUTIL_H
#include <libutil.h>
#endif
d86 1
a86 1
#ifdef HAVE_OPENSSL
a147 2
void set_defaults(kadm5_principal_ent_t ent, int *mask,
		  kadm5_principal_ent_t default_ent, int default_mask);
d161 2
@


1.1.1.4
log
@Import of heimdal-0.6rc1
@
text
@d35 1
a35 1
 * $KTH: kadmin_locl.h,v 1.41 2002/09/10 20:04:45 joda Exp $
d89 5
@


1.1.1.5
log
@Import of heimdal-0.7.2
@
text
@d2 1
a2 1
 * Copyright (c) 1997-2004 Kungliga Tekniska Högskolan
d35 1
a35 1
 * $KTH: kadmin_locl.h,v 1.45 2004/06/27 15:04:07 joda Exp $
d99 1
d103 19
d169 5
@


