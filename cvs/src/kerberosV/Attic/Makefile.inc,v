head	1.23;
access;
symbols
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.20.0.2
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.10.0.28
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.26
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.24
	OPENBSD_5_0:1.10.0.22
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.20
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.18
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.14
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.16
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.12
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.10
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.8
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.9.0.12
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.6.0.8
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.6
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.4
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6;
locks; strict;
comment	@# @;


1.23
date	2014.04.22.10.01.15;	author reyk;	state dead;
branches;
next	1.22;

1.22
date	2014.04.15.20.55.42;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2013.08.06.19.05.57;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2013.07.22.14.13.46;	author ajacoutot;	state Exp;
branches;
next	1.19;

1.19
date	2013.07.12.18.58.13;	author stsp;	state Exp;
branches;
next	1.18;

1.18
date	2013.07.01.05.15.23;	author ajacoutot;	state Exp;
branches;
next	1.17;

1.17
date	2013.06.21.17.02.20;	author robert;	state Exp;
branches;
next	1.16;

1.16
date	2013.06.21.14.12.26;	author ajacoutot;	state Exp;
branches;
next	1.15;

1.15
date	2013.06.19.19.36.41;	author robert;	state Exp;
branches;
next	1.14;

1.14
date	2013.06.18.17.49.59;	author robert;	state Exp;
branches;
next	1.13;

1.13
date	2013.06.18.17.27.21;	author robert;	state Exp;
branches;
next	1.12;

1.12
date	2013.06.18.06.20.14;	author robert;	state Exp;
branches;
next	1.11;

1.11
date	2013.06.17.18.57.39;	author robert;	state Exp;
branches;
next	1.10;

1.10
date	2006.04.14.08.28.54;	author biorn;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.14.16.14.43;	author mho;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.14.08.01.02;	author mho;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.11.03.53.07;	author hin;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.07.22.10.02;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.08.17.56.52;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.27.15.55.30;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.27.15.22.40;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.25.13.01.23;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.25.08.24.13;	author hin;	state Exp;
branches;
next	;


desc
@@


1.23
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to have it in base - disable and
remove it.  If the 2 two people who use it still want it, they can
make a port or recompile OpenBSD on their own.

There is a quote in theo.c from August 2010: "basically, dung beetles
fucking.  that's what kerberosV + openssl is like".

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok deraadt@@ henning@@
@
text
@# $OpenBSD: Makefile.inc,v 1.22 2014/04/15 20:55:42 miod Exp $

KRB5DIR=	${.CURDIR}/../../../kerberosV/src
KRB5SUBST=	${KRB5DIR}/../varsub

CPPFLAGS+=	-DHAVE_CONFIG_H -DNO_NTLM
CPPFLAGS+=	-I${.CURDIR}/../../include -I/usr/include/kerberosV

LIBHEIMIPCC=	${.OBJDIR}/../../lib/libheimipcc/libheimipcc.a
LIBHEIMIPCS=	${.OBJDIR}/../../lib/libheimipcs/libheimipcs.a
LIBVERS=	${.OBJDIR}/../../lib/libvers/libvers.a
LIBSL=		${.OBJDIR}/../../lib/libsl/libsl.a

.if defined(SRCS)

ETSRCS=	\
	${KRB5DIR}/lib/asn1/asn1_err.et \
	${KRB5DIR}/lib/hdb/hdb_err.et \
	${KRB5DIR}/lib/kadm5/kadm5_err.et \
	${KRB5DIR}/lib/krb5/heim_err.et \
	${KRB5DIR}/lib/krb5/k524_err.et \
	${KRB5DIR}/lib/krb5/krb5_err.et \
	${KRB5DIR}/lib/krb5/krb_err.et \
	${KRB5DIR}/lib/gssapi/krb5/gkrb5_err.et \
	${KRB5DIR}/lib/wind/wind_err.et \
	${KRB5DIR}/lib/ntlm/ntlm_err.et

.for ET in ${ETSRCS}
.  for _ET in ${ET:T:R}
.    if ${SRCS:M${_ET}.[ch]} != ""
.ORDER: ${_ET}.c ${_ET}.h
${_ET}.c ${_ET}.h: ${ET}
	${COMPILE_ET} ${.ALLSRC}
CLEANFILES+=	${_ET}.h ${_ET}.c
.    endif
.  endfor
.endfor

.endif # defined(SRCS)

.if defined(MPAGES)

MAN += ${MPAGES:S@@^@@${.OBJDIR}/@@}
CLEANFILES += ${MAN}

.  for PAGE in ${MPAGES}
.    for dir in ${MSRC}
.      if exists(${dir}/${PAGE:T})
${PAGE}: ${dir}/${PAGE:T}
	sed -f ${KRB5SUBST} ${dir}/${PAGE:T} >$@@.tmp && mv $@@.tmp $@@
.      endif
.    endfor
.  endfor

.endif # defined(MPAGES)

ASN1_COMPILE=	asn1_compile
SLC=		slc
COMPILE_ET=	compile_et


INCSGROUPS?=	INCS
INCLUDEDIR?=	/usr/include/kerberosV
INCSDIR?=	${INCLUDEDIR}

.if !target(includes)
.  for group in ${INCSGROUPS}
.    if defined(${group}) && !empty(${group})

${group}OWN?=	${BINOWN}
${group}GRP?=	${BINGRP}
${group}MODE?=	${NONBINMODE}
${group}DIR?=	/usr/include

_${group}INCS=
.      for header in ${${group}}
.        if defined(${group}OWN_${header:T}) || defined(${group}GRP_${header:T}) || \
            defined(${group}MODE_${header:T}) || defined(${group}DIR_${header:T}) || \
            defined(${group}NAME_${header:T})
${group}OWN_${header:T} ?=	${${group}OWN}
${group}GRP_${header:T} ?=	${${group}GRP}
${group}MODE_${header:T} ?=	${${group}MODE}
${group}DIR_${header:T} ?=	${${group}DIR}
.          if defined(${group}NAME)
${group}NAME_${header:T} ?=	${${group}NAME}
.          else
${group}NAME_${header:T} ?=	${header:T}
.          endif
includes: _${group}INS_${header:T}
_${group}INS_${header:T}: ${header}
	test -d ${DESTDIR}${${group}DIR_${.ALLSRC:T}}) || \
	    ${INSTALL} -d -o root -g bin -m 755 \
		${DESTDIR}${${group}DIR_${.ALLSRC:T}}
	${INSTALL} -C -o ${${group}OWN_${.ALLSRC:T}} \
	    -g ${${group}GRP_${.ALLSRC:T}} -m ${${group}MODE_${.ALLSRC:T}} \
	    ${.ALLSRC} \
	    ${DESTDIR}${${group}DIR_${.ALLSRC:T}}/${${group}NAME_${.ALLSRC:T}}
.        else
_${group}INCS+= ${header}
.        endif
.      endfor
.      if !empty(_${group}INCS)
includes: _${group}INS
_${group}INS: ${_${group}INCS}
	test -d ${DESTDIR}${${group}DIR} || \
	    ${INSTALL} -d -o root -g bin -m 755 \
		${DESTDIR}${${group}DIR}
.        if defined(${group}NAME)
	${INSTALL} -C -o ${${group}OWN} -g ${${group}GRP} -m ${${group}MODE} \
	    ${.ALLSRC} ${DESTDIR}${${group}DIR}/${${group}NAME}
.        else
	${INSTALL} -C -o ${${group}OWN} -g ${${group}GRP} -m ${${group}MODE} \
	    ${.ALLSRC} ${DESTDIR}${${group}DIR}/
.        endif
.      endif
.    endif # defined(${group}) && !empty(${group})
.  endfor
.endif

.include <bsd.own.mk>
@


1.22
log
@Remove workarounds for ld reaching MAXDSIZ on vax, now that MAXDSIZ is
more comfortable.
Reminded by brad@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.21 2013/08/06 19:05:57 miod Exp $
@


1.21
log
@Switch vax to gcc 3.3.6.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.20 2013/07/22 14:13:46 ajacoutot Exp $
a7 3
.if ${MACHINE} == "vax"
LDFLAGS+=	-Wl,--no-keep-memory
.endif
@


1.20
log
@Missed one CFLAGS -> CPPFLAGS

ok robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.19 2013/07/12 18:58:13 stsp Exp $
d8 3
@


1.19
log
@Remove exectuable bit from files in /usr/include/kerberosV; ok robert
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.18 2013/07/01 05:15:23 ajacoutot Exp $
d6 2
a7 1
CFLAGS+=	-DHAVE_CONFIG_H -DNO_NTLM -I${.CURDIR}/../../include -I/usr/include/kerberosV
@


1.18
log
@Pass all Kerberos man pages to a sed substitution to fix paths so that
they match hier(7).
e.g. /etc/krb5.conf versus /etc/kerberosV/krb5.conf

help from espie@@
ok espie@@ robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.17 2013/06/21 17:02:20 robert Exp $
d71 1
a71 1
${group}MODE?=	${BINMODE}
@


1.17
log
@Fix some dependencies and in the meantime indent all the loops in the
Makefile.inc file to make it more readable.
Also add missing files to CLEANFILES so that make clean removes all the
generated files.

with help from espie@@, thanks!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.16 2013/06/21 14:12:26 ajacoutot Exp $
d4 1
d39 16
@


1.16
log
@Pass NO_NTLM to the compile line.
ok robert@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.15 2013/06/19 19:36:41 robert Exp $
d27 2
a28 2
.for _ET in ${ET:T:R}
.if ${SRCS:M${_ET}.[ch]} != ""
d33 2
a34 2
.endif
.endfor
d49 2
a50 2
.for group in ${INCSGROUPS}
.if defined(${group}) && !empty(${group})
d58 2
a59 2
.for header in ${${group}}
.if defined(${group}OWN_${header:T}) || defined(${group}GRP_${header:T}) || \
d62 9
a70 9
${group}OWN_${header:T}?=	${${group}OWN}
${group}GRP_${header:T}?=	${${group}GRP}
${group}MODE_${header:T}?=	${${group}MODE}
${group}DIR_${header:T}?=	${${group}DIR}
.if defined(${group}NAME)
${group}NAME_${header:T}?=	${${group}NAME}
.else
${group}NAME_${header:T}?=	${header:T}
.endif
d73 2
a74 2
.if !exists(${DESTDIR}${${group}DIR_${.ALLSRC:T}})
	${INSTALL} -d -o root -g bin -m 755 \
a75 1
.endif
d80 1
a80 1
.else
d82 3
a84 3
.endif
.endfor
.if !empty(_${group}INCS)
d87 2
a88 2
.if !exists(${DESTDIR}${${group}DIR})
	${INSTALL} -d -o root -g bin -m 755 \
d90 1
a90 2
.endif
.if defined(${group}NAME)
d93 1
a93 1
.else
d96 4
a99 5
.endif
.endif

.endif # defined(${group}) && !empty(${group})
.endfor
@


1.15
log
@start un-bloating kerberos by removing support for hx509, pthreads, spnego,
ntlm, pkinit
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.14 2013/06/18 17:49:59 robert Exp $
d5 1
a5 1
CFLAGS+=	-DHAVE_CONFIG_H -I${.CURDIR}/../../include -I/usr/include/kerberosV
@


1.14
log
@create include directories if they are non-existent
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.13 2013/06/18 17:27:21 robert Exp $
a22 1
	${KRB5DIR}/lib/hx509/hx509_err.et \
@


1.13
log
@add a trailing / at the end of the directory when installing includes
to avoid installing a bogus file
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.12 2013/06/18 06:20:14 robert Exp $
d74 4
d89 4
a104 3

#YACC=bison -by
#YACC=byacc
@


1.12
log
@don't create include directories in the include target, mtree is taking
care of it
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.11 2013/06/17 18:57:39 robert Exp $
d90 1
a90 1
	    ${.ALLSRC} ${DESTDIR}${${group}DIR}
@


1.11
log
@update kerberosV to Heimdal 1.5.2 using BSD Makefiles based
on the ones from FreeBSD

This is getting commited now so that we can patch it up
fast in the tree.
There are known regressions so please don't try to build
this on your own now, please wait for the next available
snapshot.

If however you would still want to build it, make sure
build and install everything in the tools directory first.

This is not the full commit yet because there are several
subdirectories.
@
text
@d1 1
a1 1
# $OpenBSD$
a73 5
.if !exists(${${group}DIR})
	${INSTALL} -d -o root -g bin -m 755 \
		${${group}DIR}
.endif

a84 4
.if !exists(${${group}DIR})
	${INSTALL} -d -o root -g bin -m 755 \
		${${group}DIR}
.endif
@


1.10
log
@fixes for heimdal 0.7.2
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.10 2006/03/31 21:13:18 biorn Exp $
d3 1
a3 2
KRB5DIR	= ${.CURDIR}/${KRBDEPTH}
KRB5SRC	= ${.CURDIR}/${KRBDEPTH}/src
d5 29
a33 10
CFLAGS	+= -DHAVE_CONFIG_H -DBINDIR=\"/usr/bin\" -DSBINDIR=\"/usr/sbin\"\
	   -DLIBEXECDIR=\"/usr/libexec\" -DSYSCONFDIR=\"/etc/kerberosV\" \
	   -I${DESTDIR}/usr/include/kerberosV \
	   -I${KRB5DIR}/include -I${KRB5SRC}/lib/roken\
	   -I${KRB5SRC}/include -I${KRB5SRC}/lib/sl  \
	   -I${KRB5SRC}/lib/krb5
CFLAGS+=	-Wall
.include <bsd.own.mk>				# for 'NOPIC' definition
.if !defined(NOPIC)
CFLAGS	+= -DHAVE_DLOPEN
d35 22
d58 48
a105 2
PRINTVER=	print_version.c
ROKENSRC=	${KRB5SRC}/lib/roken
d107 2
a108 2
.PATH:	${KRB5SRC}/man
.PATH:	${KRB5DIR}/openbsd-vers
d110 1
a110 1
COMPILE_ET	= /usr/bin/compile_et
@


1.9
log
@Enable build of unified libkrb5. ok deraadt, todd. Testing by hin, jakob, David Krause, ...
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.8 2003/05/14 08:01:02 mho Exp $
d10 2
a11 1
	   -I${KRB5SRC}/include -I${KRB5SRC}/lib/sl 
@


1.8
log
@Remove krb4 support.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.7 2003/05/11 03:53:07 hin Exp $
d17 2
a18 2
LIBROKEN= 	-L${KRBDEPTH}/lib/roken -lroken
LIBROKEN_PIC= 	-L${KRBDEPTH}/lib/roken -lroken_pic
d21 1
a23 2

COM_ERR=	-lcom_err_pic
@


1.7
log
@define SYSCONFDIR
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.6 2001/08/07 22:10:02 miod Exp $
a5 3
KRB4DIR	= ${KRB5DIR}/../kerberosIV
KRB4SRC	= ${KRB4DIR}/src

a8 1
	   -I${DESTDIR}/usr/include/kerberosIV \
d10 1
a10 1
	   -I${KRB5SRC}/include -I${KRB4SRC}/lib/sl 
a18 1
LIBSL=		-L${KRBDEPTH}/../kerberosIV/lib/sl -lsl
@


1.6
log
@Make kerberosV compile entirely on platforms lacking shared libraries,
i.e. hppa, mvme88k and vax.

Discussed a lot with hugh@@ and (less) with hin@@, probably the least
ugly patch we could make.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.5 2001/07/08 17:56:52 brad Exp $
d10 1
a10 1
	   -DLIBEXECDIR=\"/usr/libexec\" \
@


1.5
log
@remove MIPS leftovers.
--
Ok'd by deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.4 2001/06/27 15:55:30 hin Exp $
d16 4
@


1.4
log
@er, don't compile and link kerberosV with -g
@
text
@d1 1
a1 3
# $OpenBSD: Makefile.inc,v 1.3 2001/06/27 15:22:40 hin Exp $

CFLAGS+=	-Wall
d15 1
a24 1
.if (${MACHINE_ARCH} != "mips")
a25 3
.else
COM_ERR=	-lcom_err
.endif
@


1.3
log
@-Wall
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.2 2001/05/25 13:01:23 hin Exp $
d3 1
a3 2
CFLAGS+=	-g -Wall
LDFLAGS+=	-g
@


1.2
log
@Remove bogus and incorrect version string.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.1 2001/05/25 08:24:13 hin Exp $
d3 1
a3 1
CFLAGS+=	-g
@


1.1
log
@krb5 main Makefile.

Set 'KERBEROS5=Yes' in /etc/mk.conf to enable the experimental kerberos5
support.
@
text
@d1 1
a1 1
# $OpenBSD$
a4 2

KRB5VERSION = "heimdal-0.3b"
@

