head	1.183;
access;
symbols
	OPENBSD_6_1:1.182.0.4
	OPENBSD_6_1_BASE:1.182
	OPENBSD_6_0:1.175.0.2
	OPENBSD_6_0_BASE:1.175
	OPENBSD_5_9:1.172.0.2
	OPENBSD_5_9_BASE:1.172
	OPENBSD_5_8:1.170.0.4
	OPENBSD_5_8_BASE:1.170
	OPENBSD_5_7:1.160.0.2
	OPENBSD_5_7_BASE:1.160
	OPENBSD_5_6:1.150.0.4
	OPENBSD_5_6_BASE:1.150
	OPENBSD_5_5:1.144.0.4
	OPENBSD_5_5_BASE:1.144
	OPENBSD_5_4:1.140.0.2
	OPENBSD_5_4_BASE:1.140
	OPENBSD_5_3:1.136.0.2
	OPENBSD_5_3_BASE:1.136
	OPENBSD_5_2:1.116.0.2
	OPENBSD_5_2_BASE:1.116
	OPENBSD_5_1_BASE:1.114
	OPENBSD_5_1:1.114.0.2
	OPENBSD_5_0:1.110.0.2
	OPENBSD_5_0_BASE:1.110
	OPENBSD_4_9:1.104.0.2
	OPENBSD_4_9_BASE:1.104
	OPENBSD_4_8:1.103.0.2
	OPENBSD_4_8_BASE:1.103
	OPENBSD_4_7:1.100.0.4
	OPENBSD_4_7_BASE:1.100
	OPENBSD_4_6:1.100.0.6
	OPENBSD_4_6_BASE:1.100
	OPENBSD_4_5:1.100.0.2
	OPENBSD_4_5_BASE:1.100
	OPENBSD_4_4:1.99.0.2
	OPENBSD_4_4_BASE:1.99
	OPENBSD_4_3:1.98.0.2
	OPENBSD_4_3_BASE:1.98
	OPENBSD_4_2:1.97.0.4
	OPENBSD_4_2_BASE:1.97
	OPENBSD_4_1:1.97.0.2
	OPENBSD_4_1_BASE:1.97
	OPENBSD_4_0:1.95.0.2
	OPENBSD_4_0_BASE:1.95
	OPENBSD_3_9:1.94.0.2
	OPENBSD_3_9_BASE:1.94
	OPENBSD_3_8:1.93.0.2
	OPENBSD_3_8_BASE:1.93
	OPENBSD_3_7:1.92.0.2
	OPENBSD_3_7_BASE:1.92
	OPENBSD_3_6:1.88.0.2
	OPENBSD_3_6_BASE:1.88
	OPENBSD_3_5:1.81.0.2
	OPENBSD_3_5_BASE:1.81
	OPENBSD_3_4:1.70.0.2
	OPENBSD_3_4_BASE:1.70
	OPENBSD_3_3:1.63.0.2
	OPENBSD_3_3_BASE:1.63
	OPENBSD_3_2:1.62.0.2
	OPENBSD_3_2_BASE:1.62
	OPENBSD_3_1:1.59.0.4
	OPENBSD_3_1_BASE:1.59
	OPENBSD_3_0:1.59.0.2
	OPENBSD_3_0_BASE:1.59
	OPENBSD_2_9:1.41.0.2
	OPENBSD_2_9_BASE:1.41
	OPENBSD_2_8:1.35.0.2
	OPENBSD_2_8_BASE:1.35
	OPENBSD_2_7:1.31.0.2
	OPENBSD_2_7_BASE:1.31
	OPENBSD_2_6:1.25.0.2
	OPENBSD_2_6_BASE:1.25
	OPENBSD_2_5:1.24.0.2
	OPENBSD_2_5_BASE:1.24
	OPENBSD_2_4:1.23.0.2
	OPENBSD_2_4_BASE:1.23
	OPENBSD_2_3:1.20.0.2
	OPENBSD_2_3_BASE:1.20
	OPENBSD_2_2:1.19.0.2
	OPENBSD_2_2_BASE:1.19
	OPENBSD_2_1:1.18.0.2
	OPENBSD_2_1_BASE:1.18
	OPENBSD_2_0:1.12.0.2
	OPENBSD_2_0_BASE:1.12
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.183
date	2017.04.17.15.53.21;	author kettenis;	state Exp;
branches;
next	1.182;
commitid	CwS5CiKF5Bc2ksoZ;

1.182
date	2016.12.18.17.02.21;	author patrick;	state Exp;
branches;
next	1.181;
commitid	uJ26eJjVzw83T8nD;

1.181
date	2016.11.19.14.20.58;	author tb;	state Exp;
branches;
next	1.180;
commitid	cJjw851oyvO56iNN;

1.180
date	2016.10.05.18.00.41;	author natano;	state Exp;
branches;
next	1.179;
commitid	6NqQgOcrjHcdPwol;

1.179
date	2016.09.21.18.27.55;	author natano;	state Exp;
branches;
next	1.178;
commitid	ro6tRJzYq6fnhUQl;

1.178
date	2016.09.08.18.59.49;	author kettenis;	state Exp;
branches;
next	1.177;
commitid	e0pgovqaeKqy33lg;

1.177
date	2016.09.03.10.47.24;	author jsg;	state Exp;
branches;
next	1.176;
commitid	nSJNIZFGjOCrZYov;

1.176
date	2016.09.01.10.15.47;	author tedu;	state Exp;
branches;
next	1.175;
commitid	HYcODrvrYNeZYtvh;

1.175
date	2016.07.04.18.01.44;	author guenther;	state Exp;
branches;
next	1.174;
commitid	MDAws5Y7do6cFWlq;

1.174
date	2016.07.04.17.56.54;	author guenther;	state Exp;
branches;
next	1.173;
commitid	5eUIFI2Jrfo1wSqV;

1.173
date	2016.03.09.16.28.47;	author deraadt;	state Exp;
branches;
next	1.172;
commitid	OSDG2O3Cgeifnf1W;

1.172
date	2015.10.26.10.43.42;	author bluhm;	state Exp;
branches;
next	1.171;
commitid	TxqyjUVPfw3iA85U;

1.171
date	2015.08.31.20.02.49;	author deraadt;	state Exp;
branches;
next	1.170;
commitid	WGcfLIPrifum6jzp;

1.170
date	2015.07.03.11.18.23;	author miod;	state Exp;
branches;
next	1.169;
commitid	USpv7a3euYojAPmZ;

1.169
date	2015.06.02.04.33.39;	author miod;	state Exp;
branches;
next	1.168;
commitid	8Wp0khXM3cnhsnMI;

1.168
date	2015.06.01.17.36.19;	author miod;	state Exp;
branches;
next	1.167;
commitid	MPvATu4lQ8RLIXjC;

1.167
date	2015.06.01.17.35.24;	author miod;	state Exp;
branches;
next	1.166;
commitid	OOxbrPETkyPPPHYX;

1.166
date	2015.05.29.20.30.49;	author miod;	state Exp;
branches;
next	1.165;
commitid	aIvBxqojHW0TqwgX;

1.165
date	2015.05.28.18.23.13;	author miod;	state Exp;
branches;
next	1.164;
commitid	TUNIsCNk7seLBLCq;

1.164
date	2015.05.28.18.16.42;	author miod;	state Exp;
branches;
next	1.163;
commitid	UwlIHCwcKA7FqAUg;

1.163
date	2015.05.21.19.26.34;	author miod;	state Exp;
branches;
next	1.162;
commitid	yUQpyaznVo1Cj5UL;

1.162
date	2015.05.21.19.13.59;	author kettenis;	state Exp;
branches;
next	1.161;
commitid	9YMMDFQi9UVVK9cH;

1.161
date	2015.05.08.10.28.34;	author kettenis;	state Exp;
branches;
next	1.160;
commitid	EA6Ssh9O7DIEzx9J;

1.160
date	2015.01.06.22.19.36;	author deraadt;	state Exp;
branches;
next	1.159;
commitid	BJChtddmDT3liIZE;

1.159
date	2015.01.03.00.58.26;	author deraadt;	state Exp;
branches;
next	1.158;
commitid	gjrJrqQwbGq8riuq;

1.158
date	2014.12.31.23.12.36;	author deraadt;	state Exp;
branches;
next	1.157;
commitid	i95Jn6V5O4Iz36pB;

1.157
date	2014.12.30.19.26.38;	author miod;	state Exp;
branches;
next	1.156;
commitid	UERJD8H1hSHEx8By;

1.156
date	2014.12.28.05.17.21;	author deraadt;	state Exp;
branches;
next	1.155;
commitid	Suc37QlBrTbHK3Dh;

1.155
date	2014.12.27.07.23.09;	author deraadt;	state Exp;
branches;
next	1.154;
commitid	UkG5DEruXZwLk3Ng;

1.154
date	2014.12.25.23.15.26;	author kettenis;	state Exp;
branches;
next	1.153;
commitid	JfqzjIXMU850JRUi;

1.153
date	2014.12.25.18.58.34;	author pascal;	state Exp;
branches;
next	1.152;
commitid	SokhVXu6ILR1CTpQ;

1.152
date	2014.12.23.17.20.11;	author deraadt;	state Exp;
branches;
next	1.151;
commitid	T4oV73ZTs59qo8Ti;

1.151
date	2014.12.23.16.35.53;	author deraadt;	state Exp;
branches;
next	1.150;
commitid	2AVPzNipEWb1immD;

1.150
date	2014.04.22.14.42.53;	author reyk;	state Exp;
branches;
next	1.149;

1.149
date	2014.04.22.09.48.51;	author reyk;	state Exp;
branches;
next	1.148;

1.148
date	2014.04.13.08.35.27;	author brad;	state Exp;
branches;
next	1.147;

1.147
date	2014.03.23.17.29.06;	author pascal;	state Exp;
branches;
next	1.146;

1.146
date	2014.03.23.03.33.58;	author tedu;	state Exp;
branches;
next	1.145;

1.145
date	2014.03.18.22.36.31;	author miod;	state Exp;
branches;
next	1.144;

1.144
date	2014.01.25.06.09.43;	author deraadt;	state Exp;
branches;
next	1.143;

1.143
date	2014.01.18.05.54.51;	author martynas;	state Exp;
branches;
next	1.142;

1.142
date	2013.12.28.17.08.48;	author deraadt;	state Exp;
branches;
next	1.141;

1.141
date	2013.08.06.19.05.57;	author miod;	state Exp;
branches;
next	1.140;

1.140
date	2013.07.05.21.13.35;	author miod;	state Exp;
branches;
next	1.139;

1.139
date	2013.03.23.15.04.28;	author miod;	state Exp;
branches;
next	1.138;

1.138
date	2013.03.20.21.30.10;	author miod;	state Exp;
branches;
next	1.137;

1.137
date	2013.03.10.08.50.42;	author miod;	state Exp;
branches;
next	1.136;

1.136
date	2013.02.10.20.27.18;	author miod;	state Exp;
branches;
next	1.135;

1.135
date	2013.02.02.13.38.41;	author miod;	state Exp;
branches;
next	1.134;

1.134
date	2013.01.31.23.35.02;	author miod;	state Exp;
branches;
next	1.133;

1.133
date	2013.01.05.11.20.55;	author miod;	state Exp;
branches;
next	1.132;

1.132
date	2012.12.01.21.08.20;	author miod;	state Exp;
branches;
next	1.131;

1.131
date	2012.10.19.02.14.47;	author deraadt;	state Exp;
branches;
next	1.130;

1.130
date	2012.09.11.04.38.38;	author deraadt;	state Exp;
branches;
next	1.129;

1.129
date	2012.09.02.18.10.49;	author kettenis;	state Exp;
branches;
next	1.128;

1.128
date	2012.09.02.16.37.43;	author deraadt;	state Exp;
branches;
next	1.127;

1.127
date	2012.09.02.03.44.19;	author deraadt;	state Exp;
branches;
next	1.126;

1.126
date	2012.09.01.03.12.16;	author deraadt;	state Exp;
branches;
next	1.125;

1.125
date	2012.08.31.17.16.21;	author pascal;	state Exp;
branches;
next	1.124;

1.124
date	2012.08.28.16.45.03;	author pascal;	state Exp;
branches;
next	1.123;

1.123
date	2012.08.28.14.26.47;	author pascal;	state Exp;
branches;
next	1.122;

1.122
date	2012.08.23.06.14.41;	author deraadt;	state Exp;
branches;
next	1.121;

1.121
date	2012.08.22.19.41.56;	author pascal;	state Exp;
branches;
next	1.120;

1.120
date	2012.08.20.20.44.26;	author sthen;	state Exp;
branches;
next	1.119;

1.119
date	2012.08.17.17.09.43;	author haesbaert;	state Exp;
branches;
next	1.118;

1.118
date	2012.08.14.20.14.35;	author matthew;	state Exp;
branches;
next	1.117;

1.117
date	2012.08.14.20.11.37;	author matthew;	state Exp;
branches;
next	1.116;

1.116
date	2012.04.12.11.22.14;	author jsg;	state Exp;
branches;
next	1.115;

1.115
date	2012.04.08.15.56.28;	author jsg;	state Exp;
branches;
next	1.114;

1.114
date	2011.11.25.05.25.25;	author miod;	state Exp;
branches;
next	1.113;

1.113
date	2011.11.12.18.32.35;	author jasper;	state Exp;
branches;
next	1.112;

1.112
date	2011.11.11.13.04.54;	author jsing;	state Exp;
branches;
next	1.111;

1.111
date	2011.09.19.08.06.22;	author okan;	state Exp;
branches;
next	1.110;

1.110
date	2011.07.10.17.03.38;	author miod;	state Exp;
branches;
next	1.109;

1.109
date	2011.07.08.22.21.11;	author miod;	state Exp;
branches;
next	1.108;

1.108
date	2011.07.06.18.39.30;	author miod;	state Exp;
branches;
next	1.107;

1.107
date	2011.07.05.00.15.03;	author drahn;	state Exp;
branches;
next	1.106;

1.106
date	2011.07.04.23.37.32;	author drahn;	state Exp;
branches;
next	1.105;

1.105
date	2011.06.23.22.46.12;	author schwarze;	state Exp;
branches;
next	1.104;

1.104
date	2010.09.24.14.04.06;	author miod;	state Exp;
branches;
next	1.103;

1.103
date	2010.07.08.20.25.40;	author kettenis;	state Exp;
branches;
next	1.102;

1.102
date	2010.05.26.14.39.38;	author kettenis;	state Exp;
branches;
next	1.101;

1.101
date	2010.05.09.12.31.41;	author espie;	state Exp;
branches;
next	1.100;

1.100
date	2008.09.07.19.22.03;	author deraadt;	state Exp;
branches;
next	1.99;

1.99
date	2008.03.28.17.10.57;	author drahn;	state Exp;
branches;
next	1.98;

1.98
date	2007.11.03.15.14.32;	author espie;	state Exp;
branches;
next	1.97;

1.97
date	2006.10.06.20.58.17;	author miod;	state Exp;
branches;
next	1.96;

1.96
date	2006.09.26.23.14.52;	author martin;	state Exp;
branches;
next	1.95;

1.95
date	2006.06.26.03.12.37;	author brad;	state Exp;
branches;
next	1.94;

1.94
date	2005.11.23.18.34.33;	author deraadt;	state Exp;
branches;
next	1.93;

1.93
date	2005.08.08.05.53.01;	author espie;	state Exp;
branches;
next	1.92;

1.92
date	2005.01.18.00.28.42;	author mickey;	state Exp;
branches;
next	1.91;

1.91
date	2004.12.30.21.51.05;	author pvalchev;	state Exp;
branches;
next	1.90;

1.90
date	2004.11.07.00.39.15;	author brad;	state Exp;
branches;
next	1.89;

1.89
date	2004.10.29.20.29.34;	author pvalchev;	state Exp;
branches;
next	1.88;

1.88
date	2004.09.06.06.38.02;	author deraadt;	state Exp;
branches;
next	1.87;

1.87
date	2004.07.24.19.14.08;	author miod;	state Exp;
branches;
next	1.86;

1.86
date	2004.07.08.01.29.23;	author pvalchev;	state Exp;
branches;
next	1.85;

1.85
date	2004.06.24.04.35.13;	author pvalchev;	state Exp;
branches;
next	1.84;

1.84
date	2004.06.22.19.50.01;	author pvalchev;	state Exp;
branches;
next	1.83;

1.83
date	2004.06.01.20.43.44;	author mickey;	state Exp;
branches;
next	1.82;

1.82
date	2004.05.18.19.07.32;	author mickey;	state Exp;
branches;
next	1.81;

1.81
date	2004.03.02.18.18.27;	author miod;	state Exp;
branches;
next	1.80;

1.80
date	2004.02.27.17.36.16;	author deraadt;	state Exp;
branches;
next	1.79;

1.79
date	2004.02.21.03.04.18;	author deraadt;	state Exp;
branches;
next	1.78;

1.78
date	2004.02.12.05.28.02;	author drahn;	state Exp;
branches;
next	1.77;

1.77
date	2004.02.11.23.15.50;	author deraadt;	state Exp;
branches;
next	1.76;

1.76
date	2004.02.09.17.45.34;	author deraadt;	state Exp;
branches;
next	1.75;

1.75
date	2004.02.09.02.33.20;	author drahn;	state Exp;
branches;
next	1.74;

1.74
date	2004.02.07.23.49.05;	author deraadt;	state Exp;
branches;
next	1.73;

1.73
date	2004.02.01.06.02.13;	author drahn;	state Exp;
branches;
next	1.72;

1.72
date	2004.01.28.02.28.14;	author mickey;	state Exp;
branches;
next	1.71;

1.71
date	2003.12.27.23.23.21;	author espie;	state Exp;
branches;
next	1.70;

1.70
date	2003.09.06.18.20.23;	author miod;	state Exp;
branches;
next	1.69;

1.69
date	2003.08.21.07.04.09;	author deraadt;	state Exp;
branches;
next	1.68;

1.68
date	2003.07.22.17.26.06;	author brad;	state Exp;
branches;
next	1.67;

1.67
date	2003.07.08.13.59.13;	author espie;	state Exp;
branches;
next	1.66;

1.66
date	2003.05.14.08.01.02;	author mho;	state Exp;
branches;
next	1.65;

1.65
date	2003.05.13.20.36.08;	author mho;	state Exp;
branches;
next	1.64;

1.64
date	2003.04.17.03.50.24;	author drahn;	state Exp;
branches;
next	1.63;

1.63
date	2002.12.07.22.31.00;	author millert;	state Exp;
branches;
next	1.62;

1.62
date	2002.08.11.23.13.10;	author art;	state Exp;
branches;
next	1.61;

1.61
date	2002.08.03.08.10.42;	author pvalchev;	state Exp;
branches;
next	1.60;

1.60
date	2002.06.12.04.07.17;	author art;	state Exp;
branches;
next	1.59;

1.59
date	2001.09.27.07.27.52;	author art;	state Exp;
branches;
next	1.58;

1.58
date	2001.09.25.13.04.30;	author drahn;	state Exp;
branches;
next	1.57;

1.57
date	2001.09.25.10.26.40;	author espie;	state Exp;
branches;
next	1.56;

1.56
date	2001.09.25.09.39.15;	author espie;	state Exp;
branches;
next	1.55;

1.55
date	2001.09.24.20.12.10;	author jason;	state Exp;
branches;
next	1.54;

1.54
date	2001.09.24.15.29.11;	author art;	state Exp;
branches;
next	1.53;

1.53
date	2001.09.02.14.34.14;	author art;	state Exp;
branches;
next	1.52;

1.52
date	2001.08.23.16.37.46;	author art;	state Exp;
branches;
next	1.51;

1.51
date	2001.07.18.13.23.03;	author espie;	state Exp;
branches;
next	1.50;

1.50
date	2001.06.27.18.09.26;	author drahn;	state Exp;
branches;
next	1.49;

1.49
date	2001.06.27.06.16.48;	author art;	state Exp;
branches;
next	1.48;

1.48
date	2001.06.26.21.37.48;	author miod;	state Exp;
branches;
next	1.47;

1.47
date	2001.06.26.19.02.55;	author hin;	state Exp;
branches;
next	1.46;

1.46
date	2001.06.13.19.02.14;	author art;	state Exp;
branches;
next	1.45;

1.45
date	2001.06.13.12.47.00;	author art;	state Exp;
branches;
next	1.44;

1.44
date	2001.05.08.17.30.42;	author aaron;	state Exp;
branches;
next	1.43;

1.43
date	2001.05.05.15.20.28;	author millert;	state Exp;
branches;
next	1.42;

1.42
date	2001.05.04.22.49.00;	author aaron;	state Exp;
branches;
next	1.41;

1.41
date	2001.04.03.23.00.09;	author espie;	state Exp;
branches;
next	1.40;

1.40
date	2001.02.17.00.04.55;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2001.02.16.05.26.27;	author drahn;	state Exp;
branches;
next	1.38;

1.38
date	2000.11.10.00.24.31;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2000.11.08.19.42.14;	author art;	state Exp;
branches;
next	1.36;

1.36
date	2000.11.08.11.59.06;	author art;	state Exp;
branches;
next	1.35;

1.35
date	2000.10.29.07.33.45;	author hugh;	state Exp;
branches;
next	1.34;

1.34
date	2000.09.07.03.59.33;	author rahnds;	state Exp;
branches;
next	1.33;

1.33
date	2000.07.03.16.59.58;	author marc;	state Exp;
branches;
next	1.32;

1.32
date	2000.05.15.06.10.21;	author niklas;	state Exp;
branches;
next	1.31;

1.31
date	2000.03.31.18.03.54;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	2000.02.25.16.55.06;	author hin;	state Exp;
branches;
next	1.29;

1.29
date	2000.02.25.15.11.39;	author hin;	state Exp;
branches;
next	1.28;

1.28
date	2000.02.08.20.26.29;	author espie;	state Exp;
branches;
next	1.27;

1.27
date	99.12.01.15.29.56;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	99.10.29.14.15.19;	author art;	state Exp;
branches;
next	1.25;

1.25
date	99.06.22.12.54.05;	author art;	state Exp;
branches;
next	1.24;

1.24
date	99.03.03.05.50.19;	author smurph;	state Exp;
branches;
next	1.23;

1.23
date	98.09.15.17.24.46;	author art;	state Exp;
branches;
next	1.22;

1.22
date	98.08.28.21.44.24;	author mickey;	state Exp;
branches;
next	1.21;

1.21
date	98.07.05.04.38.58;	author rahnds;	state Exp;
branches;
next	1.20;

1.20
date	98.03.12.16.54.21;	author art;	state Exp;
branches;
next	1.19;

1.19
date	97.06.01.05.25.28;	author downsj;	state Exp;
branches;
next	1.18;

1.18
date	97.04.29.22.04.20;	author tholo;	state Exp;
branches;
next	1.17;

1.17
date	97.04.27.21.38.32;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	97.04.20.11.43.47;	author niklas;	state Exp;
branches;
next	1.15;

1.15
date	97.04.19.21.26.08;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	97.02.18.15.52.36;	author rahnds;	state Exp;
branches;
next	1.13;

1.13
date	96.11.24.02.47.41;	author niklas;	state Exp;
branches;
next	1.12;

1.12
date	96.09.16.10.23.58;	author downsj;	state Exp;
branches;
next	1.11;

1.11
date	96.09.16.10.16.04;	author downsj;	state Exp;
branches;
next	1.10;

1.10
date	96.09.04.22.52.04;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.07.27.10.05.52;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.05.25.09.03.44;	author pefo;	state Exp;
branches;
next	1.7;

1.7
date	96.04.22.01.28.35;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.03.05.11.12.56;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.03.02.21.01.24;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.02.25.19.02.35;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	95.12.23.21.49.53;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.47.22;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.46;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.46;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.183
log
@Change build infrastructure to allow building both gcc and clang.  This
doesn't actually flip the switch yet, so aarch64 continues to be the only
architecture for which we build clang.

ok jsg@@, deraadt@@
@
text
@#	$OpenBSD: bsd.own.mk,v 1.182 2016/12/18 17:02:21 patrick Exp $
#	$NetBSD: bsd.own.mk,v 1.24 1996/04/13 02:08:09 thorpej Exp $

# Host-specific overrides
.if defined(MAKECONF) && exists(${MAKECONF})
.include "${MAKECONF}"
.elif exists(/etc/mk.conf)
.include "/etc/mk.conf"
.endif

# Set `WARNINGS' to `yes' to add appropriate warnings to each compilation
WARNINGS?=	no
# Set `SKEY' to `yes' to build with support for S/key authentication.
SKEY?=		yes
# Set `YP' to `yes' to build with support for NIS/YP.
YP?=		yes

CLANG_ARCH=aarch64
GCC4_ARCH=alpha amd64 arm hppa i386 mips64 mips64el powerpc sh sparc64
GCC3_ARCH=m88k

# m88k: ?
PIE_ARCH=alpha amd64 arm hppa i386 mips64 mips64el powerpc sh sparc64
STATICPIE_ARCH=alpha amd64 arm hppa i386 mips64 mips64el powerpc sh sparc64

.for _arch in ${MACHINE_ARCH}
.if !empty(GCC3_ARCH:M${_arch})
COMPILER_VERSION?=gcc3
.elif !empty(GCC4_ARCH:M${_arch})
COMPILER_VERSION?=gcc4
.elif !empty(CLANG_ARCH:M${_arch})
COMPILER_VERSION?=clang
.endif

.if !empty(GCC3_ARCH:M${_arch})
BUILD_GCC3?=yes
.else
BUILD_GCC3?=no
.endif
.if !empty(GCC4_ARCH:M${_arch})
BUILD_GCC4?=yes
.else
BUILD_GCC4?=no
.endif
.if !empty(CLANG_ARCH:M${_arch})
BUILD_CLANG?=yes
.else
BUILD_CLANG?=no
.endif

.if !empty(STATICPIE_ARCH:M${_arch})
STATICPIE?=-pie
.endif

.if !empty(PIE_ARCH:M${_arch})
NOPIE_FLAGS?=-fno-pie
NOPIE_LDFLAGS?=-nopie
PIE_DEFAULT?=${DEFAULT_PIE_DEF}
.else
NOPIE_FLAGS?=
PIE_DEFAULT?=
.endif
.endfor

# where the system object and source trees are kept; can be configurable
# by the user in case they want them in ~/foosrc and ~/fooobj, for example
BSDSRCDIR?=	/usr/src
BSDOBJDIR?=	/usr/obj

BINGRP?=	bin
BINOWN?=	root
BINMODE?=	555
NONBINMODE?=	444
DIRMODE?=	755

SHAREDIR?=	/usr/share
SHAREGRP?=	bin
SHAREOWN?=	root
SHAREMODE?=	${NONBINMODE}

MANDIR?=	/usr/share/man/man
MANGRP?=	bin
MANOWN?=	root
MANMODE?=	${NONBINMODE}

LIBDIR?=	/usr/lib
LIBGRP?=	${BINGRP}
LIBOWN?=	${BINOWN}
LIBMODE?=	${NONBINMODE}

DOCDIR?=	/usr/share/doc
DOCGRP?=	bin
DOCOWN?=	root
DOCMODE?=	${NONBINMODE}

LOCALEDIR?=	/usr/share/locale
LOCALEGRP?=	wheel
LOCALEOWN?=	root
LOCALEMODE?=	${NONBINMODE}

.if !defined(CDIAGFLAGS)
CDIAGFLAGS=	-Wall -Wpointer-arith -Wuninitialized -Wstrict-prototypes
CDIAGFLAGS+=	-Wmissing-prototypes -Wunused -Wsign-compare
CDIAGFLAGS+=	-Wshadow
.  if ${COMPILER_VERSION} == "gcc4"
CDIAGFLAGS+=	-Wdeclaration-after-statement
.  endif
.endif

# Shared files for system gnu configure, not used yet
GNUSYSTEM_AUX_DIR?=${BSDSRCDIR}/share/gnu

INSTALL_COPY?=	-c
.ifndef DEBUG
INSTALL_STRIP?=	-s
.endif

STATIC?=	-static ${STATICPIE}

# Define SYS_INCLUDE to indicate whether you want symbolic links to the system
# source (``symlinks''), or a separate copy (``copies''); (latter useful
# in environments where it's not possible to keep /sys publicly readable)
#SYS_INCLUDE= 	symlinks

# pic relocation flags.
.if (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "sparc64")
PICFLAG?=-fPIC
.else
PICFLAG?=-fpic
.endif

.if ${MACHINE_ARCH} == "sparc64"
ASPICFLAG=-KPIC
.endif

.if ${MACHINE_ARCH} == "alpha" || ${MACHINE_ARCH} == "powerpc" || \
    ${MACHINE_ARCH} == "sparc64"
# big PIE
DEFAULT_PIE_DEF=-DPIE_DEFAULT=2
.else
# small pie
DEFAULT_PIE_DEF=-DPIE_DEFAULT=1
.endif

# don't try to generate PROFILED versions of libraries on machines
# which don't support profiling.
.if 0
NOPROFILE=
.endif

BUILDUSER?= build
WOBJGROUP?= wobj
WOBJUMASK?= 007

BSD_OWN_MK=Done

.PHONY: spell clean cleandir obj manpages print all \
	depend beforedepend afterdepend cleandepend subdirdepend \
	all cleanman includes \
	beforeinstall realinstall maninstall afterinstall install
@


1.182
log
@Introduce a list of architectures that use clang as compiler.  The
first arch on that list is aarch64.

ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.181 2016/11/19 14:20:58 tb Exp $
d19 1
d27 18
d46 1
a46 3
COMPILER_VERSION?=clang
.elif !empty(GCC3_ARCH:M${_arch})
COMPILER_VERSION?=gcc3
d48 1
a48 1
COMPILER_VERSION?=gcc4
@


1.181
log
@Enable builds with a dedicated user that cannot elevate privileges or write
to /usr/src or /usr/xenocara.

Change /usr/{,x}obj to owner build:wobj with mode 770 and install the
systemwide makefiles before starting a build.  The root of the noperm fs
containing DESTDIR should also be owned by build:wobj.

Developers will need to add their users to group wobj to be able to write
to /usr/{,x}obj/.

"push forward" deraadt; testing, input & ok rpe
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.180 2016/10/05 18:00:41 natano Exp $
d18 1
d26 3
a28 1
.if !empty(GCC3_ARCH:M${_arch})
@


1.180
log
@De-escalate to an unprivileged users during 'make build' and 'make release'.

- If you start make build as root, everything will be run as root.
  Nothing new here. New is, that you can set BUILDUSER=somebody and the
  unprived parts will be run as somebody.
- If you start make build with sudo, the unprived parts will be run as
  the real user (meaning YOU). You can still set BUILDUSER=somebody and
  the uprived parts will run as somebody.
- If you start make build as a normal user it will error out. "I'm sorry
  Dave."

Note that DESTDIR must be on partition with the noperm flag set for make
release to work correctly as an unprivileged user.

idea and ok deraadt
input and ok tb ratchov millert
rpe, halex and probably others where part of the conversation to make
this happen, thanks!
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.179 2016/09/21 18:27:55 natano Exp $
d131 3
a133 1
BUILDUSER?= ${USER}
@


1.179
log
@Loadable kernel modules are gone.
ok millert, deraadt and tb, who sent the same diff to tech@@ some time ago
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.178 2016/09/08 18:59:49 kettenis Exp $
d130 2
@


1.178
log
@Enable -static -pie on arm.

ok guenther@@, jsg@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.177 2016/09/03 10:47:24 jsg Exp $
a74 5

LKMDIR?=	/usr/lkm
LKMGRP?=	${BINGRP}
LKMOWN?=	${BINOWN}
LKMMODE?=	${NONBINMODE}
@


1.177
log
@Enable PIE on arm now that sjlj exceptions are no longer used after
the switch to eabi.  This does not include static PIE which will be
handled later.

A specific sequence of steps is required to cross over this change,
using a snapshot is the easiest way to do so.

ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.176 2016/09/01 10:15:47 tedu Exp $
d22 1
a22 1
STATICPIE_ARCH=alpha amd64 hppa i386 mips64 mips64el powerpc sh sparc64
@


1.176
log
@remove sparc support
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.175 2016/07/04 18:01:44 guenther Exp $
a19 1
# arm: needs to switch away from SJLJ exceptions
d21 1
a21 1
PIE_ARCH=alpha amd64 hppa i386 mips64 mips64el powerpc sh sparc64
@


1.175
log
@DEBUGLIBS has been broken since the gcc4 switch, so delete it.  CFLAGS
contains -g by default anyway

problem noted by Edgar Pettijohn (edgar (at) pettijohn-web.com)
ok millert@@ kettenis@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.174 2016/07/04 17:56:54 guenther Exp $
d22 2
a23 2
PIE_ARCH=alpha amd64 hppa i386 mips64 mips64el powerpc sh sparc sparc64
STATICPIE_ARCH=alpha amd64 hppa i386 mips64 mips64el powerpc sh sparc sparc64
d118 1
a118 1
.if ${MACHINE_ARCH} == "sparc" || ${MACHINE_ARCH} == "sparc64"
d123 1
a123 1
    ${MACHINE_ARCH} == "sparc" || ${MACHINE_ARCH} == "sparc64"
@


1.174
log
@gcc's -fvisibility=hidden isn't the behavior we wanted when cleaning up
symbol exports, so delete ${VISIBILITY_HIDDEN} as unused

ok kettenis@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.173 2016/03/09 16:28:47 deraadt Exp $
a16 2
# Set `DEBUGLIBS' to `yes' to build libraries with debugging symbols
DEBUGLIBS?=	no
@


1.173
log
@We are done providing support for the vax.
lots of agreement.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.172 2015/10/26 10:43:42 bluhm Exp $
a46 4

.if ${COMPILER_VERSION} == "gcc4"
VISIBILITY_HIDDEN?=-fvisibility=hidden
.endif
@


1.172
log
@Nothing in base uses native language support anymore.  Remove NLS
support from the makefiles.
OK naddy@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.171 2015/08/31 20:02:49 deraadt Exp $
d20 1
a20 1
GCC3_ARCH=m88k vax
a22 1
# vax: no shared libraries
a115 6

# don't try to generate PIC versions of libraries on machines
# which don't support PIC.
.if ${MACHINE_ARCH} == "vax"
NOPIC=
.endif
@


1.171
log
@update reasons for arch without pie; with pascal
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.170 2015/07/03 11:18:23 miod Exp $
a88 5
NLSDIR?=	/usr/share/nls
NLSGRP?=	bin
NLSOWN?=	root
NLSMODE?=	${NONBINMODE}

d154 1
a154 1
	all cleanman nlsinstall cleannls includes \
@


1.170
log
@Enable static pie on sparc; be sure to upgrade your compiler before your
next build (or wait for the snapshot to reach the mirrors)
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.169 2015/06/02 04:33:39 miod Exp $
d22 3
a24 2
# arm needs binutils-2.17, which still lacks W^X support
# gcc3 lacks PIE support
@


1.169
log
@Make sparc go PIE (not `static PIE' yet).
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.168 2015/06/01 17:36:19 miod Exp $
d25 1
a25 1
STATICPIE_ARCH=alpha amd64 hppa i386 mips64 mips64el powerpc sh sparc64
@


1.168
log
@Now that we do not need to build binutils 2.15 (except for gdb), simplify the
build logic.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.167 2015/06/01 17:35:24 miod Exp $
d23 2
a24 4
# sparc has not been tried
# m88k unknown
# hppa64 unknown
PIE_ARCH=alpha amd64 hppa i386 mips64 mips64el powerpc sh sparc64
d140 1
a140 1
    ${MACHINE_ARCH} == "sparc64"
@


1.167
log
@Switch m88k ports to binutils 2.17.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.166 2015/05/29 20:30:49 miod Exp $
a20 1
BINUTILS215_ARCH=
a33 6
.endif

.if !empty(BINUTILS215_ARCH:M${_arch})
BINUTILS_VERSION=binutils
.else
BINUTILS_VERSION=binutils-2.17
@


1.166
log
@Switch vax to bunnytils 2.17.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.165 2015/05/28 18:23:13 miod Exp $
d21 1
a21 1
BINUTILS215_ARCH=m88k
@


1.165
log
@Invert the binutils 2.17 logic to only list non-2.17 platforms.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.164 2015/05/28 18:16:42 miod Exp $
d21 1
a21 1
BINUTILS215_ARCH=m88k vax
@


1.164
log
@Switch alpha, arm, sh and sparc to binutils 2.17.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.163 2015/05/21 19:26:34 miod Exp $
d21 1
a21 1
BINUTILS217_ARCH=alpha amd64 arm hppa hppa64 i386 ia64 mips64 mips64el powerpc sh sparc sparc64
d37 3
a39 1
.if !empty(BINUTILS217_ARCH:M${_arch})
a40 2
.else
BINUTILS_VERSION=binutils
@


1.163
log
@no such thing as mips64le
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.162 2015/05/21 19:13:59 kettenis Exp $
d21 1
a21 1
BINUTILS217_ARCH=amd64 hppa hppa64 i386 ia64 mips64 mips64el powerpc sparc64
@


1.162
log
@Switch amd64, hppa, mips64, mips64le and powerpc to binutils 2.17.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.161 2015/05/08 10:28:34 kettenis Exp $
d21 1
a21 1
BINUTILS217_ARCH=amd64 hppa hppa64 i386 ia64 mips64 mips64le powerpc sparc64
@


1.161
log
@Switch i386 and sparc64 to binutils 2.17.  More architectures to follow if
this doesn't cause any serious regressions.

ok espie@@, pascal@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.160 2015/01/06 22:19:36 deraadt Exp $
d21 1
a21 1
BINUTILS217_ARCH=hppa64 i386 ia64 sparc64
@


1.160
log
@mips64 architectures moving to static PIE
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.159 2015/01/03 00:58:26 deraadt Exp $
d21 1
a21 1
BINUTILS217_ARCH=hppa64 ia64
@


1.159
log
@ok, landisk snapshots are out that do static PIE
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.158 2014/12/31 23:12:36 deraadt Exp $
d28 1
a28 1
STATICPIE_ARCH=alpha amd64 hppa i386 powerpc sh sparc64
@


1.158
log
@Do not take sh to STATICPIE yet.  That will happen once matching
snapshots exist.  That is why mips64 is still held up (arranged with
kettenis)
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.157 2014/12/30 19:26:38 miod Exp $
d28 1
a28 1
STATICPIE_ARCH=alpha amd64 hppa i386 powerpc sparc64
@


1.157
log
@self-relocating crt0 bits for sh, and enable static pie by default. With some
archdep.h help from kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.156 2014/12/28 05:17:21 deraadt Exp $
d28 1
a28 1
STATICPIE_ARCH=alpha amd64 hppa i386 powerpc sh sparc64
@


1.156
log
@alpha now supports -static -pie binaries; ok kettenis
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.155 2014/12/27 07:23:09 deraadt Exp $
d28 1
a28 1
STATICPIE_ARCH=alpha amd64 hppa i386 powerpc sparc64
@


1.155
log
@As indicated by kettenis and kurt, hppa i386 powerpc now support static
pie.  snapshots matching this change in behaviour heading out soon.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.154 2014/12/25 23:15:26 kettenis Exp $
d28 1
a28 1
STATICPIE_ARCH=amd64 hppa i386 powerpc sparc64
@


1.154
log
@We no longer need -Wl,-Bsymbolic for -static -pie.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.153 2014/12/25 18:58:34 pascal Exp $
d28 1
a28 1
STATICPIE_ARCH=amd64 sparc64
@


1.153
log
@Delete misleading and dangerous comment about customising STATIC.  Nowadays,
it's not a user-settable knob.

general agreement from miod@@ kettenis@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.152 2014/12/23 17:20:11 deraadt Exp $
d44 1
a44 1
STATICPIE?=-pie -Wl,-Bsymbolic
@


1.152
log
@sparc64 can move to static pie
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.151 2014/12/23 16:35:53 deraadt Exp $
a123 2
# This may be changed for _single filesystem_ configurations (such as
# routers and other embedded systems); normal systems should leave it alone!
@


1.151
log
@Small changes to buil
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.150 2014/04/22 14:42:53 reyk Exp $
d28 1
a28 1
STATICPIE_ARCH=amd64
@


1.150
log
@Finally remove KERBEROS5? from the Makefile infrastructure.

ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.149 2014/04/22 09:48:51 reyk Exp $
d28 1
d43 4
d126 1
a126 1
STATIC?=	-static
@


1.149
log
@The complexity and quality of kerberosV and the fact that almost
nobody is using it doesn't justify to enable it by default.  It will
be disabled and removed from base and possibly be moved to ports.

Discussed with many.  Tests by henning@@ reyk@@ and others.
ok henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.148 2014/04/13 08:35:27 brad Exp $
a14 2
# Set `KERBEROS5' to `yes' to build with support for Kerberos5 authentication.
KERBEROS5?=	no
@


1.148
log
@Clean up last bits of TCP_WRAPPERS and ELF_TOOLCHAIN.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.147 2014/03/23 17:29:06 pascal Exp $
d16 1
a16 1
KERBEROS5?=	yes
@


1.147
log
@Finally give powerpc PIE.  Remaining bugs on socppc fixed by kettenis@@.

"I think you should do this switch right away" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.146 2014/03/23 03:33:58 tedu Exp $
a18 3
# Set `TCP_WRAPPERS' to `yes' to build certain networking daemons with
# integrated support for libwrap.
TCP_WRAPPERS?=	no
a20 2
# Set toolchain to be able to know differences.
ELF_TOOLCHAIN?=	yes
a144 2
.elif ${ELF_TOOLCHAIN:L} == "no"
ASPICFLAG=-k
@


1.146
log
@default to tcpwrappers off. ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.145 2014/03/18 22:36:31 miod Exp $
a29 1
# powerpc has problems on some "embedded" powerpc.
d34 1
a34 1
PIE_ARCH=alpha amd64 hppa i386 mips64 mips64el sh sparc64
@


1.145
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.144 2014/01/25 06:09:43 deraadt Exp $
d21 1
a21 1
TCP_WRAPPERS?=	yes
@


1.144
log
@some processors were not listed in the PIE block
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.143 2014/01/18 05:54:51 martynas Exp $
d27 1
a27 1
GCC3_ARCH=m68k m88k vax
a33 1
# m68k unknown
@


1.143
log
@Remove -Wbounded:  it is now the compiler default.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.142 2013/12/28 17:08:48 deraadt Exp $
d33 3
@


1.142
log
@i386 changes to PIE.  See faq/current.html or use the snapshots to cross
this.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.141 2013/08/06 19:05:57 miod Exp $
d110 1
a110 1
CDIAGFLAGS+=	-Wmissing-prototypes -Wunused -Wsign-compare -Wbounded
@


1.141
log
@Switch vax to gcc 3.3.6.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.140 2013/07/05 21:13:35 miod Exp $
a29 1
# i386 PIE works; but there are RAMDISK fitting problems.
d32 2
a33 1
PIE_ARCH=alpha amd64 hppa mips64 mips64el sh sparc64
@


1.140
log
@VAX is an ELF citizen now.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.139 2013/03/23 15:04:28 miod Exp $
d27 1
a27 2
GCC2_ARCH=vax
GCC4_ARCH=alpha amd64 arm hppa hppa64 i386 ia64 mips64 mips64el powerpc sh sparc sparc64
d36 3
a38 3
.if !empty(GCC2_ARCH:M${_arch})
COMPILER_VERSION?=gcc2
.elif !empty(GCC4_ARCH:M${_arch})
a39 2
.else
COMPILER_VERSION?=gcc3
@


1.139
log
@Revert 1.138 and switch amd64, i386, arm, sh and sparc64 back to binutils 2.15.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.138 2013/03/20 21:30:10 miod Exp $
a24 3
.if ${MACHINE_ARCH} == "vax"
ELF_TOOLCHAIN?=	no
.else
a25 1
.endif
@


1.138
log
@Switch amd64, arm, i386, sh and sparc64 to binutils 2.17. Other platforms to
follow soon.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.137 2013/03/10 08:50:42 miod Exp $
d33 1
a33 1
BINUTILS217_ARCH=amd64 arm hppa64 i386 ia64 sh sparc64
@


1.137
log
@Allow the PIE/NOPIE variables in bsd.own.mk to be overriden. Force proper
values in Makefile.cross to make sure binutils are built with the proper
PIE_DEFAULT value for the target.
ok millert@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.136 2013/02/10 20:27:18 miod Exp $
d33 1
a33 1
BINUTILS217_ARCH=hppa64 ia64
@


1.136
log
@switch m68k ports to gcc3
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.135 2013/02/02 13:38:41 miod Exp $
d56 3
a58 3
NOPIE_FLAGS=-fno-pie
NOPIE_LDFLAGS=-nopie
PIE_DEFAULT=${DEFAULT_PIE_DEF}
d60 2
a61 2
NOPIE_FLAGS=
PIE_DEFAULT=
@


1.135
log
@m68k ports are now ELF citizens.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.134 2013/01/31 23:35:02 miod Exp $
d31 1
a31 1
GCC2_ARCH=m68k vax
@


1.134
log
@Enable shared libraries on m88k platforms.
And there was much rejoicing.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.133 2013/01/05 11:20:55 miod Exp $
d25 1
a25 1
.if ${MACHINE_ARCH} == "m68k" || ${MACHINE_ARCH} == "vax"
a151 7
. if ${MACHINE_ARCH} == "m68k"
# Function CSE makes gas -k not recognize external function calls as lazily
# resolvable symbols, thus sometimes making ld.so report undefined symbol
# errors on symbols found in shared library members that would never be
# called.  Ask niklas@@openbsd.org for details.
PICFLAG+=-fno-function-cse
. endif
@


1.133
log
@Switch m88k ports to ELF.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.132 2012/12/01 21:08:20 miod Exp $
d143 1
a143 1
.if ${MACHINE_ARCH} == "m88k" || ${MACHINE_ARCH} == "vax"
@


1.132
log
@Switch m88k ports to gcc 3.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.131 2012/10/19 02:14:47 deraadt Exp $
d25 1
a25 2
.if ${MACHINE_ARCH} == "m68k" || ${MACHINE_ARCH} == "m88k" || \
    ${MACHINE_ARCH} == "vax"
@


1.131
log
@Document the current situation with who is PIE, and who is not.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.130 2012/09/11 04:38:38 deraadt Exp $
d32 1
a32 1
GCC2_ARCH=m68k m88k vax
@


1.130
log
@sh can move to PIE, for better or worse.  maybe it becomes slower, maybe
it hits more gcc bugs.  or even better -- maybe we learn something which
benefits the other platforms.
ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.129 2012/09/02 18:10:49 kettenis Exp $
d37 2
a38 3
# sparc & powerpc needs consideration of -fpic/-fPIC vs -fpie/-fPIE
# arm needs binutils-2.17, after that regains W^X support
# sh has register spill problems in gcc (see usr.bin/sort) with -fpie
@


1.129
log
@We need big PIE on powerpc because the GOT gets too big for some bloatware
like GCC.

ok deraadt@@, pascal@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.128 2012/09/02 16:37:43 deraadt Exp $
d33 1
a33 1
GCC4_ARCH=alpha amd64 arm hppa hppa64 i386 ia64 mips64 mips64el powerpc sparc sparc64 sh
d40 1
a40 1
PIE_ARCH=alpha amd64 hppa mips64 mips64el sparc64
@


1.128
log
@take hppa to PIE as well; ok kettenis pascal
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.127 2012/09/02 03:44:19 deraadt Exp $
d169 2
a170 1
.if ${MACHINE_ARCH} == "alpha" || ${MACHINE_ARCH} == "sparc64"
@


1.127
log
@enable PIE on alpha, and document the situation for other
architectures not running PIE yet.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.126 2012/09/01 03:12:16 deraadt Exp $
d40 1
a40 1
PIE_ARCH=alpha amd64 mips64 mips64el sparc64
@


1.126
log
@avr32 did not happen
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.125 2012/08/31 17:16:21 pascal Exp $
d35 6
a40 1
PIE_ARCH=amd64 mips64 mips64el sparc64
@


1.125
log
@Enable PIE on amd64, mips64(el) and sparc64.

Most work done by kurt@@ some years ago; also, most work committed over the last
weeks was based on a diff by him.  Cheers, kurt@@!

Lots and lots of helpful input, comments, feedback and diffs from deraadt@@,
kettenis@@ and matthew@@, miod@@ and others.  Thanks!

Bulk builds done by naddy@@, sthen@@, landry@@ and in progress from pea@@ and
jasper@@.

Pending architectures are alpha, i386, hppa, arm, sparc and landisk.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.124 2012/08/28 16:45:03 pascal Exp $
d33 2
a34 2
GCC4_ARCH=alpha amd64 arm avr32 hppa hppa64 i386 ia64 mips64 mips64el powerpc sparc sparc64 sh
BINUTILS217_ARCH=avr32 hppa64 ia64
@


1.124
log
@We can't add -nopie to LDFLAGS yet, since cc doesn't understand it.  Use
NOPIE_LDFLAGS instead.  Noticed by matthew@@ and deraadt@@.  Sorry for the
breakage ...
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.123 2012/08/28 14:26:47 pascal Exp $
d35 1
a35 1
PIE_ARCH=
@


1.123
log
@LDFLAGS will be -nopie for the NOPIE case, change GCC_PIE_DEFAULT -> PIE_DEFAULT
since it will affect binutils too.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.122 2012/08/23 06:14:41 deraadt Exp $
d54 1
@


1.122
log
@turn off AFS
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.121 2012/08/22 19:41:56 pascal Exp $
d54 1
a54 1
GCC_PIE_DEFAULT=${DEFAULT_PIE_DEF}
d57 1
a57 1
GCC_PIE_DEFAULT=
@


1.121
log
@share/mk bits for PIE, currently disabled.

ok matthew@@ deraadt@@ kettenis@@, manpage prodding and ok jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.120 2012/08/20 20:44:26 sthen Exp $
a21 2
# Set `AFS` to `yes' to build with AFS support.
AFS?=		yes
@


1.120
log
@add -Wdeclaration-after-statement to the default CDIAGFLAGS (used when
WARNINGS=yes is set) on gcc4 arch.  ok haesbaert@@ deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.119 2012/08/17 17:09:43 haesbaert Exp $
d37 1
d53 8
d163 8
@


1.119
log
@Add a default CDIAGFLAGS, so that programs may be enable warnings by
making "make WARNINGS=Yes" without having to add a bunch of CDIAGFLAGS
to its makefile.

sure deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.118 2012/08/14 20:14:35 matthew Exp $
d108 3
@


1.118
log
@Garbage collect the USE_GCC variables; everything uses
COMPILER_VERSION now.

From Brad.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.117 2012/08/14 20:11:37 matthew Exp $
d84 1
a84 1
DOCDIR?=        /usr/share/doc
d87 1
a87 1
DOCMODE?=       ${NONBINMODE}
d103 6
@


1.117
log
@Add framework support for controlling symbol visibility in shared
objects, inspired by NetBSD.

Discussed with kurt, kettenis, and millert.
ok kettenis
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.116 2012/04/12 11:22:14 jsg Exp $
a39 1
USE_GCC3?=no
a43 1
USE_GCC3?=yes
@


1.116
log
@move sh to gcc4
ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.115 2012/04/08 15:56:28 jsg Exp $
d55 4
@


1.115
log
@unhook lint from the tree.  The parser is incomplete and difficult
to fix and there are several alternatives that don't tell quite so many
dangerous lies.

enthusiastic agreement from a bunch of people
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.114 2011/11/25 05:25:25 miod Exp $
d35 1
a35 2
#GCC3_ARCH=sh
GCC4_ARCH=alpha amd64 arm avr32 hppa hppa64 i386 ia64 mips64 mips64el powerpc sparc sparc64
@


1.114
log
@Switch alpha to gcc4 (and there was much rejoicing)
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.113 2011/11/12 18:32:35 jasper Exp $
a78 1
LINTLIBDIR?=	/usr/libdata/lint
d156 1
a156 1
	all lint cleanman nlsinstall cleannls includes \
@


1.113
log
@- add avr32 which'll use gcc4/binutils-2.17
- remove BINUTILS217_ARCH from Makefile.cross as bsd.own.mk is included there
  (requested by drahn@@)

ok drahn@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.112 2011/11/11 13:04:54 jsing Exp $
d35 2
a36 2
#GCC3_ARCH=alpha sh
GCC4_ARCH=amd64 arm avr32 hppa hppa64 i386 ia64 mips64 mips64el powerpc sparc sparc64
@


1.112
log
@hppa64 uses binutils 2.17.

ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.111 2011/09/19 08:06:22 okan Exp $
d36 2
a37 2
GCC4_ARCH=amd64 arm hppa hppa64 i386 ia64 mips64 mips64el powerpc sparc sparc64
BINUTILS217_ARCH=hppa64 ia64
@


1.111
log
@remove the /usr/share/man/ps* hierarchy and supporting variables; MANPS
disappeared during the source manuals switch.

no objections from schwarze@@ jmc@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.110 2011/07/10 17:03:38 miod Exp $
d37 1
a37 1
BINUTILS217_ARCH=ia64
@


1.110
log
@Switch arm ports to gcc4. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.109 2011/07/08 22:21:11 miod Exp $
a76 5

PSDIR?=		/usr/share/man/ps
PSGRP?=		bin
PSOWN?=		root
PSMODE?=	${NONBINMODE}
@


1.109
log
@Switch sparc to gcc4. No source upgrade possible (well, it obviously can be
done, but it's so tedious it will sing you to sleep, so we'll conveniently
not bother documenting the steps), please upgrade from binary snapshots dated
July 8th or more recent.
Grunt work by kettenis@@ who suffered a machine failure; ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.108 2011/07/06 18:39:30 miod Exp $
d35 2
a36 2
#GCC3_ARCH=alpha arm sh
GCC4_ARCH=amd64 hppa hppa64 i386 ia64 mips64 mips64el powerpc sparc sparc64
@


1.108
log
@Do not use wildcards in GCC4_ARCH, they do not play well with make's :M
modifier. Found the hard way...
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.107 2011/07/05 00:15:03 drahn Exp $
d34 3
a36 2
GCC2_ARCH=m68k m88k sparc vax
GCC4_ARCH=amd64 hppa i386 mips64 mips64el powerpc sparc64
@


1.107
log
@Allow switching between binutils and binutils 2.17.
NOTE: binutils-2.17 has not been tested on any archs. ok pirofti@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.106 2011/07/04 23:37:32 drahn Exp $
d35 1
a35 1
GCC4_ARCH=amd64 hppa i386 mips64* powerpc sparc64
@


1.106
log
@Simplfy GCC decision by making the list of archs instead a huge
list if ${MACHINE_ARCH} == "xx" tests
ok deraadt@@ pirofti@@ (with fixes mentioned from kettenis)
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.105 2011/06/23 22:46:12 schwarze Exp $
d36 1
d47 6
@


1.105
log
@switch to installing source manuals (base part)
discussed with lots of people, tested by naddy@@,
"move fast" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.104 2010/09/24 14:04:06 miod Exp $
d34 5
a38 3
# gcc3
.if ${MACHINE_ARCH} == "m68k" || ${MACHINE_ARCH} == "m88k" || \
    ${MACHINE_ARCH} == "sparc" || ${MACHINE_ARCH} == "vax"
d41 1
a41 3
.elif ${MACHINE_ARCH} == "amd64" || ${MACHINE_ARCH} == "hppa" || \
    ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH:Mmips64*} || \
    ${MACHINE_ARCH} == "powerpc" || ${MACHINE_ARCH} == "sparc64"
d47 1
@


1.104
log
@Switch mips-based ports to gcc4. Most of the work has been done by kettenis@@.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.103 2010/07/08 20:25:40 kettenis Exp $
a58 6
# Define MANZ to have the man pages compressed (gzip)
#MANZ=		1

# Define MANPS to have PostScript manual pages generated
#MANPS=		1

d64 1
a64 1
MANDIR?=	/usr/share/man/cat
@


1.103
log
@Switch hppa, i386 and powerpc to gcc4.  Bump libc major to handle ABI corner
cases fixed in gcc4.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.102 2010/05/26 14:39:38 kettenis Exp $
d40 2
a41 2
    ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "powerpc" || \
    ${MACHINE_ARCH} == "sparc64"
@


1.102
log
@Switch amd64 and sparc64 over to gcc4; bump libc major to deal with the ABI
corner cases that were fixed in gcc4, and changes in libgcc that we may have
missed.

ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.101 2010/05/09 12:31:41 espie Exp $
d39 3
a41 1
.elif ${MACHINE_ARCH} == "amd64" || ${MACHINE_ARCH} == "sparc64"
@


1.101
log
@define COMPILER_VERSION to be used later.
Based on dale's idea.

(please install this file now, so you won't get errors when we commit the
rest).
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.100 2008/09/07 19:22:03 deraadt Exp $
d39 1
a39 1
.elif ${MACHINE_ARCH} == "GCC4_ARCH_GOES_HERE_eg_powerpc"
@


1.100
log
@allow PICFLAG to be overridden; ok kettenis drahn
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.99 2008/03/28 17:10:57 drahn Exp $
d38 3
d43 1
@


1.99
log
@Enable shared libraries on landisk.
The sh architecture required some different linkage than most platforms,
This fixes those other requirements.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.99 2008/03/28 16:56:30 drahn Exp $
d125 1
a125 1
PICFLAG=-fPIC
d127 1
a127 1
PICFLAG=-fpic
@


1.98
log
@unmess make depend: make sure stuff is built in the correct order.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.97 2006/10/06 20:58:17 miod Exp $
d119 1
a119 2
.if ${MACHINE_ARCH} == "m88k" || ${MACHINE_ARCH} == "vax" || \
    ${MACHINE_ARCH} == "sh"
@


1.97
log
@Early bits for a 32-bit SuperH toolchain, currently for little-endian
systems only; more work is necessary in ld land.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.96 2006/09/26 23:14:52 martin Exp $
d153 1
a153 1
	depend beforedepend afterdepend cleandepend \
@


1.96
log
@switch alpha to gcc3; joint work with drahn@@ and brad@@

ok drahn@@ brad@@ mickey@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.95 2006/06/26 03:12:37 brad Exp $
d119 2
a120 1
.if ${MACHINE_ARCH} == "m88k" || ${MACHINE_ARCH} == "vax"
@


1.95
log
@remove extraneous brackets and list the architecures in alphabetic order.

no objection from miod@@ and krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.94 2005/11/23 18:34:33 deraadt Exp $
d35 1
a35 2
.if ${MACHINE_ARCH} == "alpha" || \
    ${MACHINE_ARCH} == "m68k" || ${MACHINE_ARCH} == "m88k" || \
d124 1
a124 1
.if ${MACHINE_ARCH} == "sparc64"
@


1.94
log
@change NOLINT into opposite sense; WANTLINT, since it lets us built
lint libraries for those libraries which want them (and can have them)
ok millert
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.93 2005/08/08 05:53:01 espie Exp $
d120 1
a120 1
.if (${MACHINE_ARCH} == "vax") || (${MACHINE_ARCH} == "m88k")
d125 1
a125 1
.if (${MACHINE_ARCH} == "sparc64")
d138 1
a138 1
.if (${MACHINE_ARCH} == "sparc64") || (${MACHINE_ARCH} == "sparc")
d140 1
a140 1
.elif (${ELF_TOOLCHAIN:L} == "no")
@


1.93
log
@activate LC_CTYPE for 8 bits locale.
Make sure tolower/toupper use the whole 8 bits.

okay deraadt@@
thanks to everyone who tested
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.92 2005/01/18 00:28:42 mickey Exp $
a148 3

# No lint, for now.
NOLINT=
@


1.92
log
@reverse logic for gcc3 decision making; brad@@ deraadt@@ drahn@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.91 2004/12/30 21:51:05 pvalchev Exp $
d95 5
@


1.91
log
@switch i386 to gcc3; ok deraadt espie miod
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.90 2004/11/07 00:39:15 brad Exp $
d35 5
a39 4
.if ${MACHINE_ARCH} == "amd64" || ${MACHINE_ARCH} == "arm" || \
    ${MACHINE_ARCH} == "hppa" || ${MACHINE_ARCH} == "hppa64" || \
    ${MACHINE_ARCH} == "mips64" || ${MACHINE_ARCH} == "powerpc" || \
    ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "sparc64"
a40 2
.else
USE_GCC3?=no
@


1.90
log
@- MACHINE -> MACHINE_ARCH for amd64
- remove x86_64
- alphabetic order

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.89 2004/10/29 20:29:34 pvalchev Exp $
d38 1
a38 1
    ${MACHINE_ARCH} == "sparc64"
@


1.89
log
@switch powerpc to gcc3
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.88 2004/09/06 06:38:02 deraadt Exp $
d34 2
a35 2
# do the dew
.if ${MACHINE} == "amd64" || ${MACHINE_ARCH} == "arm" || \
d37 2
a38 2
    ${MACHINE_ARCH} == "sparc64" || ${MACHINE_ARCH} == "x86_64" || \
    ${MACHINE_ARCH} == "mips64" || ${MACHINE_ARCH} == "powerpc"
@


1.88
log
@i *SAID* this could go in, now it is days later, I will do it myself
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.87 2004/07/24 19:14:08 miod Exp $
d38 1
a38 1
    ${MACHINE_ARCH} == "mips64"
@


1.87
log
@Enable profiling libraries construction on m88k.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.86 2004/07/08 01:29:23 pvalchev Exp $
d35 1
a35 1
.if ${MACHINE} == "amd64" || (${MACHINE_ARCH} == "arm" || \
d37 2
a38 1
    ${MACHINE_ARCH} == "sparc64" || ${MACHINE_ARCH} == "x86_64")
@


1.86
log
@again: move PICFLAG into bsd.own.mk with the rest of the shlib handling,
and thus simplify logic.  now including bsd.own.mk will override
any current setting in PICFLAG, which is desired.  ok deraadt drahn
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.84 2004/06/22 19:50:01 pvalchev Exp $
d141 1
a141 3
# to add this back use the following line
.if (${MACHINE_ARCH} == "m88k")
#.if 0
@


1.85
log
@undo tree breakage, sorry
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.83 2004/06/01 20:43:44 mickey Exp $
d119 1
a119 1
#pic relocation flags.
d122 9
d132 1
@


1.84
log
@move PICFLAG into bsd.own.mk where the rest of the lib stuff is
(don't ask why) and simplify logic; needed soon
@
text
@d119 1
a119 1
# pic relocation flags.
a121 9
.else
PICFLAG=-fpic
. if ${MACHINE_ARCH} == "m68k"
# Function CSE makes gas -k not recognize external function calls as lazily
# resolvable symbols, thus sometimes making ld.so report undefined symbol
# errors on symbols found in shared library members that would never be
# called.  Ask niklas@@openbsd.org for details.
PICFLAG+=-fno-function-cse
. endif
a122 1

@


1.83
log
@hppa is gcc3 and has shlibs now
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.82 2004/05/18 19:07:32 mickey Exp $
d119 1
a119 1
#pic relocation flags.
d122 9
d132 1
@


1.82
log
@use less mana devising ELF_TOOLCHAIN
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.81 2004/03/02 18:18:27 miod Exp $
d35 3
a37 3
.if (${MACHINE_ARCH} == "arm" || ${MACHINE_ARCH} == "hppa64" || \
    ${MACHINE_ARCH} == "x86_64" || ${MACHINE_ARCH} == "sparc64") || \
    ${MACHINE} == "amd64"
d115 1
a115 2
.if (${MACHINE_ARCH} == "vax") || (${MACHINE_ARCH} == "hppa") || \
    (${MACHINE_ARCH} == "m88k")
@


1.81
log
@Enable AFS on mvme88k now.

Remember to update /usr/share/mk before you make obj.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.80 2004/02/27 17:36:16 deraadt Exp $
d27 4
a30 5
.if ( ${MACHINE_ARCH} == "alpha" || ${MACHINE_ARCH} == "arm" || \
     ${MACHINE_ARCH} == "hppa" || ${MACHINE_ARCH} == "i386" || \
     ${MACHINE_ARCH} == "powerpc" || ${MACHINE_ARCH} == "sparc" || \
     ${MACHINE_ARCH} == "sparc64" || ${MACHINE_ARCH} == "x86_64") || \
     ${MACHINE} == "amd64"
a31 2
.else
ELF_TOOLCHAIN?=	no
@


1.80
log
@change amd64's MACHINE_ARCH from x86_64 to amd64.  There are many many
reasons for this, quite a few of them technical, and not all of them
in response to Intel's broken ia32e crud.  The gcc toolchain stays at
x86_64 for now.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.79 2004/02/21 03:04:18 deraadt Exp $
a22 3
.if (${MACHINE_ARCH} == "m88k")
AFS?=		no
.else
a23 1
.endif
@


1.79
log
@move sparc64 to gcc3. to move up please install a snapshot (or, install
this, build the right gcc, do a make build and pray)
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.78 2004/02/12 05:28:02 drahn Exp $
d34 2
a35 1
     ${MACHINE_ARCH} == "sparc64" || ${MACHINE_ARCH} == "x86_64")
d43 2
a44 1
    ${MACHINE_ARCH} == "x86_64" || ${MACHINE_ARCH} == "sparc64")
@


1.78
log
@AFS works fine with process.arm.S, enable.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.77 2004/02/11 23:15:50 deraadt Exp $
d42 1
a42 1
    ${MACHINE_ARCH} == "x86_64")
@


1.77
log
@enable shared libs on amd64; from drahn
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.76 2004/02/09 17:45:34 deraadt Exp $
d23 1
a23 1
.if (${MACHINE_ARCH} == "arm") || (${MACHINE_ARCH} == "m88k")
@


1.76
log
@amd64 can build afs it looks like
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.75 2004/02/09 02:33:20 drahn Exp $
d120 2
a121 2
.if (${MACHINE_ARCH} == "vax") || (${MACHINE_ARCH} == "x86_64") || \
    (${MACHINE_ARCH} == "hppa") || (${MACHINE_ARCH} == "m88k")
@


1.75
log
@do not build AFS on arm, no process.arm.S file (yet)
arm now has shared library support.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.74 2004/02/07 23:49:05 deraadt Exp $
d23 1
a23 2
.if (${MACHINE_ARCH} == "arm") || (${MACHINE_ARCH} == "m88k") || \
   (${MACHINE_ARCH} == "x86_64")
@


1.74
log
@do not build AFS on amd64 yet
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.73 2004/02/01 06:02:13 drahn Exp $
d23 2
a24 1
.if (${MACHINE_ARCH} == "m88k") || (${MACHINE_ARCH} == "x86_64")
d122 1
a122 2
    (${MACHINE_ARCH} == "hppa") || (${MACHINE_ARCH} == "m88k") \
    || (${MACHINE_ARCH} == "arm")
@


1.73
log
@arm support. ok espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.72 2004/01/28 02:28:14 mickey Exp $
d23 1
a23 1
.if (${MACHINE_ARCH} == "m88k")
@


1.72
log
@magic switches for hammers
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.71 2003/12/27 23:23:21 espie Exp $
d31 4
a34 4
.if (${MACHINE_ARCH} == "alpha" || ${MACHINE_ARCH} == "powerpc" || \
     ${MACHINE_ARCH} == "hppa" || ${MACHINE_ARCH} == "sparc64" || \
     ${MACHINE_ARCH} == "sparc" || ${MACHINE_ARCH} == "i386" || \
     ${MACHINE_ARCH} == "x86_64")
d41 2
a42 1
.if (${MACHINE_ARCH} == "x86_64" || ${MACHINE_ARCH} == "hppa64")
d121 2
a122 1
    (${MACHINE_ARCH} == "hppa") || (${MACHINE_ARCH} == "m88k")
@


1.71
log
@define USE_GCC3, for later.
okay drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.70 2003/09/06 18:20:23 miod Exp $
d33 2
a34 1
     ${MACHINE_ARCH} == "sparc" || ${MACHINE_ARCH} == "i386")
d40 4
a43 1
# don't use yet.
d45 1
d119 1
a119 1
.if (${MACHINE_ARCH} == "vax") || \
@


1.70
log
@Disable AFS for m88k again - it's unlikely that libpthread/arla-lwp support
gets debugged in time for the release.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.69 2003/08/21 07:04:09 deraadt Exp $
d38 3
@


1.69
log
@AFS on
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.68 2003/07/22 17:26:06 brad Exp $
d23 3
d27 1
@


1.68
log
@change an instance of the check from != "yes" to == "no"

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.67 2003/07/08 13:59:13 espie Exp $
d23 1
a23 6
.if (${MACHINE_ARCH} == "m88k")
AFS?=		no
.else
# AFS needs updating to work w/o krb4 - disable for now.
AFS?=		no
.endif
@


1.67
log
@ELF_TOOLCHAIN:L, for consistency with other yes/no variables.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.66 2003/05/14 08:01:02 mho Exp $
d123 1
a123 1
.elif (${ELF_TOOLCHAIN:L} != "yes")
@


1.66
log
@Remove krb4 support.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.65 2003/05/13 20:36:08 mho Exp $
d123 1
a123 1
.elif (${ELF_TOOLCHAIN} != "yes")
@


1.65
log
@Disable afs for now - needs updating to work w/o krb4.

ok hin@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.64 2003/04/17 03:50:24 drahn Exp $
a14 2
# Set `KERBEROS' to `yes' to build with support for Kerberos authentication.
KERBEROS?=	yes
@


1.64
log
@Inform the compilation environment that i386 is now ELF.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.63 2002/12/07 22:31:00 millert Exp $
d28 2
a29 1
AFS?=		yes
@


1.63
log
@Only use "ASPICFLAG=-k" a.out assembler, not binutils.
With the binutils as, -k is expanded to -keep-locals which
is not what we want.  OK fgsch@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.62 2002/08/11 23:13:10 art Exp $
d35 1
a35 1
     ${MACHINE_ARCH} == "sparc")
@


1.62
log
@ELF_TOOLCHAIN on sparc.
Also, sparc/ELF needs -KPIC for ASPICFLAG just like sparc64.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.61 2002/08/03 08:10:42 pvalchev Exp $
d124 1
a124 1
.else
@


1.61
log
@fix a comment: libdl no longer exists; explain ELF_TOOLCHAIN
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.60 2002/06/12 04:07:17 art Exp $
d34 2
a35 1
     ${MACHINE_ARCH} == "hppa" || ${MACHINE_ARCH} == "sparc64")
d121 2
@


1.60
log
@add hppa to ELF_TOOLCHAIN.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.59 2001/09/27 07:27:52 art Exp $
d32 1
a32 1
# Set toolchain for libdl and other "differences"
@


1.59
log
@Enable shared libs on sparc64.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.58 2001/09/25 13:04:30 drahn Exp $
d33 2
a34 1
.if (${MACHINE_ARCH} == "alpha" || ${MACHINE_ARCH} == "powerpc" || ${MACHINE_ARCH} == "sparc64")
@


1.58
log
@Add an ASPICFLAG variable to bsd.own.mk which a platform use to pass flags
to 'as' to make it compile pic. add defaults for sparc64 which needs picflags
set to -fPIC and ASPICFLAGS to -KPIC.
Also simplifies the systemcall generation for sparc64 PIC mode.
ok epsie@@.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.57 2001/09/25 10:26:40 espie Exp $
d111 1
a111 1
.if (${MACHINE_ARCH} == "vax") || (${MACHINE_ARCH} == "sparc64") || \
@


1.57
log
@a bit too soon.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.56 2001/09/25 09:39:15 espie Exp $
d114 8
@


1.56
log
@Add /usr/share/gnu, for sharing config.guess, config.sub and other files
in $ac_aux_dir.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.55 2001/09/24 20:12:10 jason Exp $
d92 2
a93 2
# Shared files for system gnu configure
GNUSYSTEM_AUX_DIR?=/usr/share/gnu
@


1.55
log
@NOPIC on sparc64
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.54 2001/09/24 15:29:11 art Exp $
d91 3
@


1.54
log
@profiling now works
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.53 2001/09/02 14:34:14 art Exp $
d108 1
a108 1
.if (${MACHINE_ARCH} == "vax") || \
@


1.53
log
@sparc64 doesn't support profiling for now.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.52 2001/08/23 16:37:46 art Exp $
d116 1
a116 1
.if (${MACHINE_ARCH} == "m88k") || (${MACHINE_ARCH} == "sparc64")
@


1.52
log
@sparc64 is ELF.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.51 2001/07/18 13:23:03 espie Exp $
d116 1
a116 1
.if (${MACHINE_ARCH} == "m88k")
@


1.51
log
@CDIAGFLAGS, added to CFLAGS if WARNINGS=Yes
Symetrize C++ situation: add CXXOPTS, CXXDIAGFLAGS.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.50 2001/06/27 18:09:26 drahn Exp $
d33 1
a33 1
.if (${MACHINE_ARCH} == "alpha" || ${MACHINE_ARCH} == "powerpc")
@


1.50
log
@Add ELF_TOOLCHAIN makefile variable to be used to deal
with build differences between ELF and a.out.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.49 2001/06/27 06:16:48 art Exp $
d11 2
@


1.49
log
@UVM is no longer an option
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.48 2001/06/26 21:37:48 miod Exp $
d30 6
@


1.48
log
@Only one non-UVM arch left, not for long.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.47 2001/06/26 19:02:55 hin Exp $
a8 7
.endif

# XXX - This is temporary until everyone uses UVM
.if (${MACHINE} == "sun3")
UVM?=		no
.else
UVM?=		yes
@


1.47
log
@Enable Kerberos 5
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.46 2001/06/13 19:02:14 art Exp $
d12 1
a12 1
.if (${MACHINE} == "sun3") || (${MACHINE} == "pmax") || (${MACHINE} == "mvme68k")
@


1.46
log
@Reverse the logic of setting UVM. Instead of listing all archs that have it,
just list the three that don't.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.45 2001/06/13 12:47:00 art Exp $
d23 1
a23 1
KERBEROS5?=	no
@


1.45
log
@alpha is no longer NOPIC.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.44 2001/05/08 17:30:42 aaron Exp $
d12 3
a14 1
.if (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "i386") || (${MACHINE_ARCH} == "vax") || (${MACHINE} == "amiga") || (${MACHINE} == "hp300") || (${MACHINE} == "mac68k") || (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "powerpc") || (${MACHINE_ARCH} == "m88k")
a15 2
.else
UVM?=		no
@


1.44
log
@Substantial update from NetBSD, most notably gives us UVM support; deraadt@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.43 2001/05/05 15:20:28 millert Exp $
d107 1
a107 1
.if (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "vax") || \
@


1.43
log
@Check MACHINE for hp300, not MACHINE_ARCH (which will be m68k)
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.42 2001/05/04 22:49:00 aaron Exp $
d12 1
a12 1
.if (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "i386") || (${MACHINE_ARCH} == "vax") || (${MACHINE} == "amiga") || (${MACHINE} == "hp300") || (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "powerpc") || (${MACHINE_ARCH} == "m88k")
@


1.42
log
@Substantial update from NetBSD, most notably gives us UVM support; millert@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.41 2001/04/03 23:00:09 espie Exp $
d12 1
a12 1
.if (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "i386") || (${MACHINE_ARCH} == "vax") || (${MACHINE} == "amiga") || (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "powerpc") || (${MACHINE_ARCH} == "m88k") || (${MACHINE_ARCH} == "hp300")
@


1.41
log
@Minor clean-ups:
- document some more things (MANPS, make oddities)
- put all PHONY targets in bsd.own.mk, since it's included by everything
that uses it.
- remove them from bsd.lib.mk, since it includes bsd.own.mk.
- ... except for load/unload, which are only in bsd.lkm.mk.
- fix spell target, so that it actually depends on the generated file.

okay niklas@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.40 2001/02/17 00:04:55 miod Exp $
d12 1
a12 1
.if (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "i386") || (${MACHINE_ARCH} == "vax") || (${MACHINE} == "amiga") || (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "powerpc") || (${MACHINE_ARCH} == "m88k")
@


1.40
log
@define UVM for mvme88k
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.39 2001/02/16 05:26:27 drahn Exp $
d124 5
@


1.39
log
@Engage UVM for powerpc. It is now running fairly well (better than non UVM)
on my machines as well as on brad's.
This change also eliminates the need for the ld.so hack for powerpc.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.38 2000/11/10 00:24:31 deraadt Exp $
d12 1
a12 1
.if (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "i386") || (${MACHINE_ARCH} == "vax") || (${MACHINE} == "amiga") || (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "powerpc")
@


1.38
log
@the new MANPS variable specifies that .ps versions of manual pages should
also be installed in /usr/share/man/ps[0-9]/ as *.ps files.  No MLINKS are
made for them.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.37 2000/11/08 19:42:14 art Exp $
d12 1
a12 1
.if (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "i386") || (${MACHINE_ARCH} == "vax") || (${MACHINE} == "amiga") || (${MACHINE_ARCH} == "alpha")
@


1.37
log
@UVM default on alpha
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.36 2000/11/08 11:59:06 art Exp $
d52 3
d64 5
@


1.36
log
@Enable UVM for amiga.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.35 2000/10/29 07:33:45 hugh Exp $
d12 1
a12 1
.if (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "i386") || (${MACHINE_ARCH} == "vax") || (${MACHINE} == "amiga")
@


1.35
log
@vax uses uvm.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.34 2000/09/07 03:59:33 rahnds Exp $
d12 1
a12 1
.if (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "i386") || (${MACHINE_ARCH} == "vax")
@


1.34
log
@Make it official, powerpc does have shared libraries.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.33 2000/07/03 16:59:58 marc Exp $
d12 1
a12 1
.if (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "i386")
@


1.33
log
@
Set DEBUGLIBS only if not previously set.  Allows overrides from
command line or mk.conf
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.32 2000/05/15 06:10:21 niklas Exp $
d99 2
a100 3
.if (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "powerpc") || \
    (${MACHINE_ARCH} == "vax") || (${MACHINE_ARCH} == "hppa") || \
    (${MACHINE_ARCH} == "m88k")
@


1.32
log
@Add support for building libraries with debugging information in them.
Enable by setting DEBUGLIBS=yes in /etc/mk.conf, then -g libraries will get
installed in /usr/lib/debug.  This directory will be searched first if
gcc is given the -g flag during the link stage.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.31 2000/03/31 18:03:54 espie Exp $
d36 1
a36 1
DEBUGLIBS=	no
@


1.31
log
@Define BSD_OWN_MK, to play `don't include the same file twice' game.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.30 2000/02/25 16:55:06 hin Exp $
d35 3
@


1.30
log
@KerberosIV is now reenabled.
If i've done my homework right, KerberosIV should work fine now...
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.29 2000/02/25 15:11:39 hin Exp $
d112 2
@


1.29
log
@Disable KerberosIV while commiting new Kerberos stuff.

If you depend on Kerberos, DON'T update your tree until Kerberos
has been enabled again.
(art@@ ok)
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.28 2000/02/08 20:26:29 espie Exp $
d21 1
a21 1
KERBEROS?=	no
@


1.28
log
@Add DIRMODE
Suggested by Matthew Patton.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.27 1999/12/01 15:29:56 deraadt Exp $
d21 1
a21 1
KERBEROS?=	yes
@


1.27
log
@uvm on the i386
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.26 1999/10/29 14:15:19 art Exp $
d44 1
@


1.26
log
@UVM is now default on sparc.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.25 1999/06/22 12:54:05 art Exp $
d12 1
a12 1
.if (${MACHINE_ARCH} == "sparc")
@


1.25
log
@Add a temporary UVM define
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.24 1999/03/03 05:50:19 smurph Exp $
d12 3
d16 1
@


1.24
log
@Temporary disable AFS and Optimizations for m88k.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.23 1998/09/15 17:24:46 art Exp $
d10 3
@


1.23
log
@enable AFS
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.22 1998/08/28 21:44:24 mickey Exp $
d23 3
d27 1
a27 1

d89 2
a90 1
    (${MACHINE_ARCH} == "vax") || (${MACHINE_ARCH} == "hppa")
d97 2
a98 2
#.if (${MACHINE_ARCH} == "UNSUPPORTED_ARCH")
.if 0
@


1.22
log
@NOPIC for hppa (yet)
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.21 1998/07/05 04:38:58 rahnds Exp $
d22 2
a23 2
# Set `AFS` to `yes' to build certain utilities and libraries with AFS-support
AFS?=		no
@


1.21
log
@Powerpc port now support profiled libraries, thus NOPROFILE= is
not set anymore. The code is left for future architecures, If it
is needed again.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.20 1998/03/12 16:54:21 art Exp $
d86 1
a86 1
    (${MACHINE_ARCH} == "vax")
@


1.20
log
@Variable to allow AFS support for certain utils and libs.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.19 1997/06/01 05:25:28 downsj Exp $
d92 3
a94 1
.if (${MACHINE_ARCH} == "powerpc")
@


1.19
log
@Add TCP_WRAPPERS.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.18 1997/04/29 22:04:20 tholo Exp $
d22 2
@


1.18
log
@Add ${SHAREDIR}, ${SHAREGRP}, ${SHAREOWN} and ${SHAREMODE}, they are used
by ports
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.17 1997/04/27 21:38:32 millert Exp $
d17 1
a17 1
# Set 'YP' to `yes' to build with support for NIS/YP.
d19 3
@


1.17
log
@COPY -> INSTALL_COPY and STRIP -> INSTALL_STRIP changes.
For some reason the previous commit did not grab these.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.16 1997/04/20 11:43:47 niklas Exp $
d32 5
@


1.16
log
@typo
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.15 1997/04/19 21:26:08 millert Exp $
d59 1
a59 1
COPY?=		-c
d61 1
a61 1
STRIP?=		-s
@


1.15
log
@Changed ``defined(KERBEROS)'' to ``(${KERBEROS} == "yes")''
Same change doen for SKEY, YP, and KERBEROS5.  This allows
people to override those setting in /etc/mk.conf.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.14 1997/02/18 15:52:36 rahnds Exp $
d17 1
a17 1
# Set 'YP' to `yes' to build with causes support for NIS/YP.
@


1.14
log
@Powerpc does not support pic, and for now because of a compiler bug,
does not support profiling.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.13 1996/11/24 02:47:41 niklas Exp $
d4 1
d11 8
a18 10
# Defining `SKEY' causes support for S/key authentication to be compiled in.
SKEY=		yes
# Defining `KERBEROS' causes support for Kerberos authentication to be
# compiled in.
KERBEROS=	yes
# Defining 'KERBEROS5' causes support for Kerberos5 authentication to be
# compiled in.
#KERBEROS5=	yes
# Defining 'YP' causes support for NIS/YP to be compiled in
YP=		yes
@


1.13
log
@Add a new knob called DEBUG.  Define to -g to have it turn off STRIP=-s
 and add itself to CFLAGS and ASFLAGS
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.12 1996/09/16 10:23:58 downsj Exp $
d76 1
a76 1
.if (${MACHINE_ARCH} == "alpha") || \
d79 6
@


1.12
log
@Document this better.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.11 1996/09/16 10:16:04 downsj Exp $
d61 1
d63 1
@


1.11
log
@Add $STATIC.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.10 1996/09/04 22:52:04 deraadt Exp $
d62 3
@


1.10
log
@permit YP to be compiled out using flag in bsd.own.mk; pr#15, peter@@demon.net
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.9 1996/07/27 10:05:52 deraadt Exp $
d62 1
@


1.9
log
@default file owner should be root for NFS diskless security
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.8 1996/05/25 09:03:44 pefo Exp $
d18 2
@


1.8
log
@Added support for Mips ELF shlib build. Snapshot status.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.6 1996/03/05 11:12:56 mickey Exp $
d25 1
a25 1
BINOWN?=	bin
d34 1
a34 1
MANOWN?=	bin
d45 1
a45 1
DOCOWN?=	bin
d55 1
a55 1
NLSOWN?=	bin
@


1.7
log
@sync with netbsd 960418
@
text
@d68 1
a68 1
.if (${MACHINE_ARCH} == "mips") || (${MACHINE_ARCH} == "alpha") || \
@


1.6
log
@Labeling style changed ($OpenBSD$).
POSTINSTALL added to the <bsd.lkm.mk> (see bsd.README for details).
@
text
@d1 8
a8 2
#	$OpenBSD: bsd.own.mk,v 1.5 1996/03/02 21:01:24 tholo Exp $
#	$NetBSD: bsd.own.mk,v 1.23 1995/11/03 23:33:33 cgd Exp $
@


1.5
log
@Define directory and modes for LKM installs
Correct installation rule for LKM installs
@
text
@d1 2
a2 1
#	$OpenBSD: bsd.own.mk,v 1.4 1996/02/25 19:02:35 mickey Exp $
@


1.4
log
@Added <bsd.lkm.mk> file. Correspondent changes made to the bsd.README.
All the rest changed to be $OpenBSD$.
Dedicated to Suzi Quatro (she must be alive still, so best wishes to here).
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.23 1995/11/03 23:33:33 cgd Exp $
d40 5
@


1.3
log
@Enable kerberosIV by default
@
text
@d1 1
a1 1
#	$NetBSD: bsd.own.mk,v 1.23 1995/11/03 23:33:33 cgd Exp $
@


1.2
log
@update from netbsd
@
text
@d7 1
a7 1
#KERBEROS=	yes
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: bsd.own.mk,v 1.21.2.1 1995/10/12 06:27:48 cgd Exp $
a58 5
.endif

# Alpha doesn't have a working profiling support
.if (${MACHINE_ARCH} == "alpha")
NOPROFILE=
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

