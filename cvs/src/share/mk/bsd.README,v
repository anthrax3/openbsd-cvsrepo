head	1.72;
access;
symbols
	OPENBSD_6_1:1.65.0.6
	OPENBSD_6_1_BASE:1.65
	OPENBSD_6_0:1.65.0.2
	OPENBSD_6_0_BASE:1.65
	OPENBSD_5_9:1.63.0.2
	OPENBSD_5_9_BASE:1.63
	OPENBSD_5_8:1.60.0.4
	OPENBSD_5_8_BASE:1.60
	OPENBSD_5_7:1.59.0.2
	OPENBSD_5_7_BASE:1.59
	OPENBSD_5_6:1.55.0.4
	OPENBSD_5_6_BASE:1.55
	OPENBSD_5_5:1.53.0.4
	OPENBSD_5_5_BASE:1.53
	OPENBSD_5_4:1.50.0.2
	OPENBSD_5_4_BASE:1.50
	OPENBSD_5_3:1.49.0.2
	OPENBSD_5_3_BASE:1.49
	OPENBSD_5_2:1.47.0.2
	OPENBSD_5_2_BASE:1.47
	OPENBSD_5_1_BASE:1.46
	OPENBSD_5_1:1.46.0.2
	OPENBSD_5_0:1.45.0.2
	OPENBSD_5_0_BASE:1.45
	OPENBSD_4_9:1.42.0.2
	OPENBSD_4_9_BASE:1.42
	OPENBSD_4_8:1.41.0.4
	OPENBSD_4_8_BASE:1.41
	OPENBSD_4_7:1.41.0.2
	OPENBSD_4_7_BASE:1.41
	OPENBSD_4_6:1.40.0.10
	OPENBSD_4_6_BASE:1.40
	OPENBSD_4_5:1.40.0.6
	OPENBSD_4_5_BASE:1.40
	OPENBSD_4_4:1.40.0.4
	OPENBSD_4_4_BASE:1.40
	OPENBSD_4_3:1.40.0.2
	OPENBSD_4_3_BASE:1.40
	OPENBSD_4_2:1.39.0.8
	OPENBSD_4_2_BASE:1.39
	OPENBSD_4_1:1.39.0.6
	OPENBSD_4_1_BASE:1.39
	OPENBSD_4_0:1.39.0.4
	OPENBSD_4_0_BASE:1.39
	OPENBSD_3_9:1.39.0.2
	OPENBSD_3_9_BASE:1.39
	OPENBSD_3_8:1.37.0.2
	OPENBSD_3_8_BASE:1.37
	OPENBSD_3_7:1.36.0.8
	OPENBSD_3_7_BASE:1.36
	OPENBSD_3_6:1.36.0.6
	OPENBSD_3_6_BASE:1.36
	OPENBSD_3_5:1.36.0.4
	OPENBSD_3_5_BASE:1.36
	OPENBSD_3_4:1.36.0.2
	OPENBSD_3_4_BASE:1.36
	OPENBSD_3_3:1.32.0.4
	OPENBSD_3_3_BASE:1.32
	OPENBSD_3_2:1.32.0.2
	OPENBSD_3_2_BASE:1.32
	OPENBSD_3_1:1.30.0.2
	OPENBSD_3_1_BASE:1.30
	OPENBSD_3_0:1.29.0.2
	OPENBSD_3_0_BASE:1.29
	OPENBSD_2_9:1.23.0.2
	OPENBSD_2_9_BASE:1.23
	OPENBSD_2_8:1.22.0.2
	OPENBSD_2_8_BASE:1.22
	OPENBSD_2_7:1.21.0.2
	OPENBSD_2_7_BASE:1.21
	OPENBSD_2_6:1.20.0.2
	OPENBSD_2_6_BASE:1.20
	OPENBSD_2_5:1.19.0.2
	OPENBSD_2_5_BASE:1.19
	OPENBSD_2_4:1.16.0.2
	OPENBSD_2_4_BASE:1.16
	OPENBSD_2_3:1.15.0.6
	OPENBSD_2_3_BASE:1.15
	OPENBSD_2_2:1.15.0.4
	OPENBSD_2_2_BASE:1.15
	OPENBSD_2_1:1.15.0.2
	OPENBSD_2_1_BASE:1.15
	OPENBSD_2_0:1.10.0.2
	OPENBSD_2_0_BASE:1.10
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.72
date	2017.07.11.22.17.28;	author schwarze;	state Exp;
branches;
next	1.71;
commitid	0BRWuLFwU9bO0KVs;

1.71
date	2017.07.10.11.25.44;	author schwarze;	state Exp;
branches;
next	1.70;
commitid	ZJBTDck3AXEIIryI;

1.70
date	2017.07.10.07.51.37;	author espie;	state Exp;
branches;
next	1.69;
commitid	S9N88OXkM5G1znFt;

1.69
date	2017.07.09.18.28.44;	author espie;	state Exp;
branches;
next	1.68;
commitid	7eSuWcegfMHlgZb4;

1.68
date	2017.07.09.17.17.46;	author espie;	state Exp;
branches;
next	1.67;
commitid	2YrJbNOdaG7sGjrZ;

1.67
date	2017.07.05.10.41.01;	author espie;	state Exp;
branches;
next	1.66;
commitid	TDoNJW17iHXDUJtR;

1.66
date	2017.07.02.17.03.45;	author espie;	state Exp;
branches;
next	1.65;
commitid	jdKG2FijiV6Tz6pU;

1.65
date	2016.07.04.18.01.44;	author guenther;	state Exp;
branches;
next	1.64;
commitid	MDAws5Y7do6cFWlq;

1.64
date	2016.03.09.16.28.47;	author deraadt;	state Exp;
branches;
next	1.63;
commitid	OSDG2O3Cgeifnf1W;

1.63
date	2016.01.13.13.06.51;	author gsoares;	state Exp;
branches;
next	1.62;
commitid	fi3Iu8D7yoHNUaYc;

1.62
date	2015.11.14.23.56.50;	author deraadt;	state Exp;
branches;
next	1.61;
commitid	BrKaQHWTbuUdYB4P;

1.61
date	2015.10.26.10.43.42;	author bluhm;	state Exp;
branches;
next	1.60;
commitid	TxqyjUVPfw3iA85U;

1.60
date	2015.07.20.23.52.29;	author yasuoka;	state Exp;
branches;
next	1.59;
commitid	q7mg0LgasdXqIt1u;

1.59
date	2014.10.31.13.46.17;	author jsing;	state Exp;
branches;
next	1.58;
commitid	y63FmUITd26yVanM;

1.58
date	2014.10.13.14.31.01;	author schwarze;	state Exp;
branches;
next	1.57;
commitid	6hBqmF2nKkUTNKEI;

1.57
date	2014.10.09.04.44.09;	author tedu;	state Exp;
branches;
next	1.56;
commitid	fIvQzqJlAnvj9ktq;

1.56
date	2014.09.29.19.37.51;	author gsoares;	state Exp;
branches;
next	1.55;
commitid	HyPEuvt6lUPuZRWv;

1.55
date	2014.04.23.18.24.23;	author ajacoutot;	state Exp;
branches;
next	1.54;

1.54
date	2014.04.22.11.05.22;	author henning;	state Exp;
branches;
next	1.53;

1.53
date	2013.12.04.22.58.24;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2013.10.13.23.30.12;	author guenther;	state Exp;
branches;
next	1.51;

1.51
date	2013.08.10.10.19.35;	author ajacoutot;	state Exp;
branches;
next	1.50;

1.50
date	2013.07.11.07.03.46;	author ajacoutot;	state Exp;
branches;
next	1.49;

1.49
date	2012.08.23.06.14.41;	author deraadt;	state Exp;
branches;
next	1.48;

1.48
date	2012.08.22.19.41.56;	author pascal;	state Exp;
branches;
next	1.47;

1.47
date	2012.04.08.15.56.28;	author jsg;	state Exp;
branches;
next	1.46;

1.46
date	2011.09.24.07.26.01;	author espie;	state Exp;
branches;
next	1.45;

1.45
date	2011.06.23.22.46.12;	author schwarze;	state Exp;
branches;
next	1.44;

1.44
date	2011.04.22.21.11.50;	author jmc;	state Exp;
branches;
next	1.43;

1.43
date	2011.03.12.05.12.14;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2010.11.18.21.16.57;	author miod;	state Exp;
branches;
next	1.41;

1.41
date	2010.03.02.20.33.55;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2007.11.03.10.30.40;	author espie;	state Exp;
branches;
next	1.39;

1.39
date	2005.11.23.22.11.48;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2005.11.23.18.34.33;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2005.04.15.17.18.57;	author espie;	state Exp;
branches;
next	1.36;

1.36
date	2003.08.29.00.04.41;	author jolan;	state Exp;
branches;
next	1.35;

1.35
date	2003.08.11.17.31.51;	author jakob;	state Exp;
branches;
next	1.34;

1.34
date	2003.08.07.11.08.56;	author hin;	state Exp;
branches;
next	1.33;

1.33
date	2003.07.16.01.29.34;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2002.06.25.15.33.18;	author millert;	state Exp;
branches;
next	1.31;

1.31
date	2002.05.11.00.20.21;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	2002.01.01.23.52.32;	author provos;	state Exp;
branches;
next	1.29;

1.29
date	2001.08.18.10.46.25;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2001.08.16.15.12.48;	author brad;	state Exp;
branches;
next	1.27;

1.27
date	2001.07.18.13.25.17;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	2001.07.02.14.01.35;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2001.06.27.06.16.48;	author art;	state Exp;
branches;
next	1.24;

1.24
date	2001.06.20.11.49.24;	author mpech;	state Exp;
branches;
next	1.23;

1.23
date	2001.04.03.23.00.08;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2000.05.15.06.10.21;	author niklas;	state Exp;
branches;
next	1.21;

1.21
date	99.11.26.21.47.09;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	99.05.15.15.45.08;	author kstailey;	state Exp;
branches;
next	1.19;

1.19
date	98.12.19.19.07.32;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	98.12.19.05.13.02;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	98.11.22.17.45.09;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	98.07.15.22.18.05;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	97.04.27.21.38.25;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	97.04.18.03.49.48;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	97.02.09.16.41.50;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	96.11.24.03.05.02;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	96.11.24.02.47.40;	author niklas;	state Exp;
branches;
next	1.10;

1.10
date	96.07.27.10.05.48;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.06.02.05.58.20;	author tholo;	state Exp;
branches;
next	1.8;

1.8
date	96.04.22.01.28.33;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.03.05.11.12.34;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	96.02.25.19.02.31;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.02.02.20.18.07;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.02.02.19.53.33;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	95.12.15.01.48.07;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.47.20;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.46;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.46;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.72
log
@Move the section about <bsd.sys.mk> up just below <sys.mk> which it is
closely related to.  Delete the example involving PARALLEL, which no
longer exists.  Instead, add a different example involving yacc(1).
OK espie@@
@
text
@#	$OpenBSD: bsd.README,v 1.71 2017/07/10 11:25:44 schwarze Exp $
#	$NetBSD: bsd.README,v 1.17 1996/04/13 02:08:08 thorpej Exp $
#	@@(#)bsd.README	5.1 (Berkeley) 5/11/90

This is the README file for the make "include" files for the BSD
source tree.  The files are installed in /usr/share/mk, and are, by
convention, named with the suffix ".mk".

bsd.dep.mk		- handle Makefile dependencies
bsd.lib.mk		- support for building libraries
bsd.man.mk		- installing manual pages and their links
bsd.obj.mk		- creating 'obj' directories and cleaning up
bsd.own.mk		- define common variables
bsd.port.mk		- building ports
bsd.port.arch.mk	- glue for building ports with MD stuff
bsd.port.subdir.mk	- targets for building subdirectories for ports
bsd.prog.mk		- building programs from source files
bsd.regress.mk		- regression tests
bsd.subdir.mk		- targets for building subdirectories
bsd.sys.mk		- building bsd from the source tree

Note, this file is not intended to replace reading through the .mk
files for anything tricky.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

RANDOM THINGS WORTH KNOWING:

The files are simply C-style #include files, and pretty much behave like
you'd expect.  The syntax is slightly different in that a single '.' is
used instead of the hash mark, i.e. ".include <bsd.prog.mk>".

One difference that will save you lots of debugging time is that inclusion
of the file is normally done at the *end* of the Makefile.  The reason for
this is because .mk files often modify variables and behavior based on the
values of variables set in the Makefile.  To make this work, remember that
the FIRST target found is the target that is used, i.e. if the Makefile has:

	a:
		echo a
	a:
		echo a number two

the command "make a" will echo "a".  To make things confusing, the SECOND
variable assignment is the overriding one, i.e. if the Makefile has:

	a=	foo
	a=	bar

	b:
		echo ${a}

the command "make b" will echo "bar".  This is for compatibility with the
way the V7 make behaved.

To make things even more confusing, make uses lazy evaluation. All
variables are expanded only when needed. Which means that, in

	a=	foo

	b: $(a)
		echo $(.ALLSRC)
		echo $(a)

	foo:
		touch foo

   	a=	bar

the command "make b" will echo "foo"; echo "bar".  The first $(a) means
"foo", because it's needed to generate the dependency rule when it's read,
but the second $(a) is only expanded when needed, at which point a contains
bar.

It's fairly difficult to make the BSD .mk files work when you're building
multiple programs in a single directory.  It's a lot easier to split up the
programs than to deal with the problem.  Most of the agony comes from making
the "obj" directory stuff work right, not because we switched to a new version
of make.  So, don't get mad at us, figure out a better way to handle multiple
architectures so we can quit using the symbolic link stuff.  (Imake doesn't
count.)

Dependencies are handled using the compiler's -M* options, resulting in
lots of .d files. These are manually included through <bsd.dep.mk>.

<bsd.dep.mk> also provides an empty depend target to <bsd.prog.mk> and
<bsd.lib.mk>, for backward compatibility.

The variable DESTDIR works as before.  It's not set anywhere but will change
the tree where the file gets installed.

The profiled libraries are no longer built in a different directory than
the regular libraries.  A new suffix, ".po", is used to denote a profiled
object.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The include file <sys.mk> has the default rules for all makes, in the BSD
environment or otherwise.  You probably don't want to touch this file.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The include file <bsd.sys.mk> is used by <bsd.prog.mk> and
<bsd.lib.mk>.  It overrides parts of <sys.mk> for building the
OpenBSD source tree.  For example, it contains a better yacc(1)
rule assigning the proper names to all output files.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The include file <bsd.man.mk> handles installing manual pages and their
links.

It has a single target:

	maninstall:
		Install the manual pages and their links.

It sets/uses the following variables:

MANDIR		Base path for manual installation.

MANGRP		Manual group.

MANOWN		Manual owner.

MANMODE		Manual mode.

MANSUBDIR	Subdirectory under the manual page section, i.e. "amd64"
		or "sparc64" for machine specific manual pages.

MAN		The manual pages to be installed (use a .1 - .9 suffix).

MLINKS		List of manual page links (using a .1 - .9 suffix).  The
		linked-to file must come first, the linked file second,
		and there may be multiple pairs.  The files are soft-linked.

BEFOREMAN	List of extra targets that must be already built before the
		man target can be run. Those targets must be real files (and
		not .PHONY targets).

The include file <bsd.man.mk> includes a file named "../Makefile.inc" if
it exists.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The include file <bsd.own.mk> contains source tree configuration parameters,
such as the owners, groups, etc. for both manual pages and binaries, and
a few global "feature configuration" parameters.

It has no targets.

To get system-specific configuration parameters, bsd.own.mk will try to
include the file specified by the "MAKECONF" variable.  If MAKECONF is not
set, or no such file exists, the system make configuration file, /etc/mk.conf
is included.  These files may define any of the variables described below.

bsd.own.mk sets the following variables, if they are not already defined
(defaults are in brackets):

BSDSRCDIR	The real path to the system sources, so that 'make obj'
		will work correctly. [/usr/src]

BSDOBJDIR	The real path to the system 'obj' tree, so that 'make obj'
		will work correctly. [/usr/obj]

BINGRP		Binary group. [bin]

BINOWN		Binary owner. [root]

BINMODE		Binary mode. [555]

NONBINMODE	Mode for non-executable files. [444]

DIRMODE		Mode for new directories. [755]

MANDIR		Base path for manual installation. [/usr/share/man/man]

MANGRP		Manual group. [bin]

MANOWN		Manual owner. [root]

MANMODE		Manual mode. [${NONBINMODE}]

LIBDIR		Base path for library installation. [/usr/lib]

LIBGRP		Library group. [${BINGRP}]

LIBOWN		Library owner. [${BINOWN}]

LIBMODE		Library mode. [${NONBINMODE}]

DOCDIR		Base path for system documentation
	        installation. [/usr/share/doc]

DOCGRP		Documentation group. [bin]

DOCOWN		Documentation owner. [root]

DOCMODE		Documentation mode. [${NONBINMODE}]

INSTALL_STRIP	The flag passed to the install program to cause the binary
		to be stripped.  This is to be used when building your
		own install script so that the entire system can be made
		stripped/not-stripped using a single knob.  Note that
		INSTALL_STRIP is not set if ${DEBUG} is defined. [-s]

INSTALL_COPY	The old usage of this flag is obsolescent since install(1)
		now copies by default.  However, it can also be used to
		specify that a file not be copied unless it is different
		(via the -p option).  See install(1) for details.  This
		is to be used when building our own install script so
		that the entire system can either be installed with copies,
		or copy-if-different using a single knob. [-c]

Additionally, the following variables may be set by bsd.own.mk or in a
make configuration file to modify the behaviour of the system build
process (default values are in brackets along with comments, if set by
bsd.own.mk):

SKEY		Compile in support for S/key authentication. [yes, set
		unconditionally]

SYS_INCLUDE	Copy or symlink kernel include files into /usr/include.
		Possible values are "symlinks" or "copies" (which is
		the same as the variable being unset).

NOPROFILE	Do not build profiled versions of system libraries.

NOPIC		Do not build PIC versions of system libraries, and
		do not build shared libraries.

NOPIE		Do not build PIE objects or executables.

DEBUG		Add -g to assembly, C compiler and linking passes.  Also
		doesn't	set STRIP to -s per default if defined.

WARNINGS	Adds appropriate warning flags (defined in CDIAGFLAGS,
		e.g., -Wall...) to compiles. [no]

SUDO		Command to run when doing "make install" portion of
		"make build".  If set to /usr/bin/doas, this allows one
		to run "make build" as a user other than root (assuming
		doas is setup for that user).

PIPE		If set to "-pipe" gcc will be given the -pipe option
		which can speed up compiles on machines with memory
		to spare.  Instead of using temp files, gcc uses pipes
		for the temporary data.

GLOBAL_AUTOCONF_CACHE
		Set to the name of a file that all cached GNU autoconf
		test results will be saved in.	Reduces redundant tests.
		Be careful!  Redundant tests may not be redundant if you
		are installing substantially updated gnu programs.

bsd.own.mk is generally useful when building your own Makefiles so that
they use the same default owners etc. as the rest of the tree.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The include file <bsd.prog.mk> handles building programs from one or
more source files, along with their manual pages.  It has a limited number
of suffixes, consistent with the current needs of the BSD tree.

It has six targets:

	all:
		build the program and its manual page
	clean:
		remove the program, any object files and the files a.out,
		Errs, errs, mklog, and core.
	cleandir:
		remove all of the files removed by the target clean, as
		well as .depend, tags, and any manual pages.
	includes:
		install any header files.
	install:
		install the program and its manual pages; if the Makefile
		does not itself define the target install, the targets
		beforeinstall and afterinstall may also be used to cause
		actions immediately before and after the install target
		is executed.
	tags:
		create a tags file for the source files.

It uses the following variables:

BINGRP		Binary group.

BINOWN		Binary owner.

BINMODE		Binary mode.

BUILDFIRST	Stuff that needs to be built before anything else, in
		terms of dependencies.

BUILDAFTER	Stuff that comes later (usually don't touch, defined correctly
		by <bsd.prog.mk> and <bsd.lib.mk>)

CLEANFILES	Additional files to remove for the clean and cleandir targets.

COPTS		Additional flags to the compiler when creating C objects.

LDADD		Additional loader objects.  Usually used for libraries.
		For example, to load with the crypto and utility
		libraries, use:

			LDADD+=-lutil -lcrypto

LDFLAGS		Additional loader flags.

LINKS		The list of binary links; should be full pathnames, the
		linked-to file coming first, followed by the linked
		file.  The files are hard-linked.  For example, to link
		/bin/test and /bin/[, use:

			LINKS=	${DESTDIR}/bin/test ${DESTDIR}/bin/[

MAN		Manual pages (should end in .1 - .9).  If no MAN variable is
		defined, "MAN=${PROG}.1" is assumed.

PROG		The name of the program to build.  If not supplied, nothing
		is built.

SRCS		List of source files to build the program.  If it's not
		defined, it's assumed to be ${PROG}.c.

DPADD		Additional dependencies for the program.  Usually used for
		libraries.  For example, to depend on the crypto and
		utility libraries use:

			DPADD+=${LIBCRYPTO} ${LIBUTIL}

		The following libraries are predefined for DPADD:

			LIBC		/usr/lib/libc.a
			LIBCRYPTO	/usr/lib/libcrypto.a
			LIBCURSES	/usr/lib/libcurses.a
			LIBEDIT		/usr/lib/libedit.a
			LIBEVENT	/usr/lib/libevent.a
			LIBEXPAT	/usr/lib/libexpat.a
			LIBFORM		/usr/lib/libform.a
			LIBFORMW	/usr/lib/libformw.a
			LIBKEYNOTE	/usr/lib/libkeynote.a
			LIBKVM		/usr/lib/libkvm.a
			LIBL		/usr/lib/libl.a
			LIBM		/usr/lib/libm.a
			LIBMENU		/usr/lib/libmenu.a
			LIBMENUW	/usr/lib/libmenuw.a
			LIBRADIUS	/usr/lib/libradius.a
			LIBOSSAUDIO	/usr/lib/libossaudio.a
			LIBPANEL	/usr/lib/libpanel.a
			LIBPANELW	/usr/lib/libpanelw.a
			LIBPCAP		/usr/lib/libpcap.a
			LIBPERL		/usr/lib/libperl.a
			LIBPTHREAD	/usr/lib/libpthread.a
			LIBRPCSVC	/usr/lib/librpcsvc.a
			LIBSKEY		/usr/lib/libskey.a
			LIBSNDIO	/usr/lib/libsndio.a
			LIBSSL		/usr/lib/libssl.a
			LIBTERMCAP	/usr/lib/libtermcap.a
			LIBTERMLIB	/usr/lib/libtermlib.a
			LIBTLS		/usr/lib/libtls.a
			LIBUSB		/usr/lib/libusbhid.a
			LIBUTIL		/usr/lib/libutil.a
			LIBY		/usr/lib/liby.a
			LIBZ		/usr/lib/libz.a
			LIBARCH		arch-dependent stuff

STRIP		The flag passed to the install program to cause the binary
		to be stripped.

SUBDIR		A list of subdirectories that should be built as well.
		Each of the targets will execute the same target in the
		subdirectories.

The include file <bsd.prog.mk> includes the file named "../Makefile.inc"
if it exists, as well as the include file <bsd.man.mk>.

Some simple examples:

To build foo from foo.c with a manual page foo.1, use:

	PROG=	foo

	.include <bsd.prog.mk>

To build foo from foo.c with a manual page foo.2, add the line:

	MAN=	foo.2

If foo does not have a manual page at all, add the line:

	NOMAN=	noman

If foo has multiple source files, add the line:

	SRCS=	a.c b.c c.c d.c

SRCS may contain lex and yacc files, in which case the framework will
convert these files to C and header files first, before building anything
else.

SRCS may contain C++ files, in which case the C++ compiler will be used
for linking.

If YFLAGS contains -d, the header file will be named like the C file,
and a proper rule tying both together will be generated. For instance, if
SRCS contains grammar.y, then effectively you will have

grammar.c grammar.h: grammar.y
	${YACC.Y} -o grammar.c grammar.y


<bsd.prog.mk> may be used to build several programs in a single directory.
Just define the list of programs as PROGS instead of using PROG.
For instance PROGS = foo bar

Each program of the list, for instance foo, will use SRCS_foo instead
of SRCS to find its sources.  SRCS_foo still defaults to foo.c, and
MAN still defaults to section 1 manpages: MAN = foo.1 bar.1.

Each program can have its separate LDADD_foo and DPADD_foo definitions.
If not defined, these default to LDADD/DPADD.

Some simple examples:
To build foo from foo.c and bar from bar.c with manual pages foo.1 and bar.1:

	PROGS = foo bar

	.include <bsd.prog.mk>

If bar has manual page bar.8 instead, add the line:
	MAN = foo.1 bar.8

If bar has multiple source files, add the line:
	SRCS_bar = a.c b.c c.c d.c

Note that foo and bar may share some source files, like so:
	SRCS_foo = foo.c common.c
	SRCS_bar = bar.c common.c

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The include file <bsd.subdir.mk> contains the default targets for building
subdirectories.  It has the same six targets as <bsd.prog.mk>: all,
clean, cleandir, includes, install, and tags.  For all of
the directories listed in the variable SUBDIR, the specified directory
will be visited and the target made.  There is also a default target which
allows the command "make subdir" where subdir is any directory listed in
the variable SUBDIR.


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The include file <bsd.lib.mk> has support for building libraries.  It has
the same six targets as <bsd.prog.mk>: all, clean, cleandir,
includes, install, and tags.  It has a limited number of suffixes,
consistent with the current needs of the BSD tree.

It uses the following variables:

BUILDFIRST/BUILDAFTER
		See <bsd.prog.mk>.

LIB		The name of the library to build.

LIBDIR		Target directory for libraries.

LIBGRP		Library group.

LIBOWN		Library owner.

LIBMODE		Library mode.

LDADD		Additional loader objects.

MAN		The manual pages to be installed (use a .1 - .9 suffix).

SRCS		List of source files to build the library.  Suffix types
		.s, .c, and .f are supported.  Note, .s files are preferred
		to .c files of the same name.  (This is not the default for
		POSIX make without bsd.lib.mk).

		The same support for yacc and lex files as <bsd.prog.mk>
		is provided.

The include file <bsd.lib.mk> includes the file named "../Makefile.inc"
if it exists, as well as the include file <bsd.man.mk>.

It has rules for building profiled objects; profiled libraries are
built by default.

Libraries are ranlib'd when made.

In addition, a reduced version of a library, including just specific
objects that are compiled with additional options to reduce their
size may be built.  This is used by the distrib/ tree and crunchgen
when building ramdisks.  This sets/uses the following variables:

DIST_LIB	The path of the library to build. [lib${LIB}_d.a]

DIST_OBJS	The (sub)set of .o files to include in ${DIST_LIB}. [${OBJS}]

DIST_CFLAGS	Additional flags for the C compiler and assembler.
		[-Os]

@


1.71
log
@two minor tweaks and two minor fixes; OK espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.70 2017/07/10 07:51:37 espie Exp $
d103 7
a452 7
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The include file <bsd.sys.mk> is used by <bsd.prog.mk> and
<bsd.lib.mk>.  It contains overrides that are used when building
the OpenBSD source tree.  For instance, if "PARALLEL" is defined by
the program/library Makefile, it includes a set of rules for lex and
yacc that allow multiple lex and yacc targets to be built in parallel.
@


1.70
log
@Thinko. It's called BUILDAFTER
"noticed" by Ingo.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.69 2017/07/09 18:28:44 espie Exp $
d5 1
a5 1
This is the README file for the new make "include" files for the BSD
d279 1
a279 1
It sets/uses the following variables:
d457 1
a457 1
the same seven targets as <bsd.prog.mk>: all, clean, cleandir,
d461 1
a461 1
It sets/uses the following variables:
d463 2
a464 2
BUILDFIRST/BUILDLATER
		See <bsd.prog.mk>
@


1.69
log
@document PROGS, okay jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.68 2017/07/09 17:17:46 espie Exp $
d290 1
a290 1
BUILDLATER	Stuff that comes later (usually don't touch, defined correctly
@


1.68
log
@document more reality.
proper english usage and okay jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.67 2017/07/05 10:41:01 espie Exp $
d406 29
@


1.67
log
@document that we're no longer using 'make depend'
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.66 2017/07/02 17:03:45 espie Exp $
d70 2
a71 2
the command "make b" will echo "foo"; echo "bar".  The first $(a) means 
"foo", because it's needed to generate the dependency rule when it's read, 
d84 4
a87 1
lots of .d files. These are manually included through bsd.dep.mk.
d130 1
a130 1
BEFOREMAN	List of extra targets that must be already built before the 
d258 1
a258 1
It has seven targets:
a267 3
	depend:
		Misnomer as dependencies are built on-the-fly during make all.
		No longer used in normal builds.
d393 14
d410 3
a412 3
subdirectories.  It has the same seven targets as <bsd.prog.mk>: all, 
clean, cleandir, depend, includes, install, and tags.  For all of
the directories listed in the variable SUBDIR, the specified directory 
d428 1
a428 1
the same seven targets as <bsd.prog.mk>: all, clean, cleandir, depend,
d454 4
a457 1
		versions of make.)
@


1.66
log
@document new depends somewhat.
I asked jmc, told me to go ahead and he'd review it when he can.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.65 2016/07/04 18:01:44 guenther Exp $
d267 1
a267 2
		Still used by a few directories needing some configuration
		before make all.
@


1.65
log
@DEBUGLIBS has been broken since the gcc4 switch, so delete it.  CFLAGS
contains -g by default anyway

problem noted by Edgar Pettijohn (edgar (at) pettijohn-web.com)
ok millert@@ kettenis@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.64 2016/03/09 16:28:47 deraadt Exp $
d83 2
a84 3
The file .depend in the source directory is expected to contain dependencies
for the source files.  This file is read automatically by make after reading
the Makefile.
d266 3
a268 2
		make the dependencies for the source files, and store
		them in the file .depend.
d288 6
d420 3
@


1.64
log
@We are done providing support for the vax.
lots of agreement.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.63 2016/01/13 13:06:51 gsoares Exp $
a226 3

DEBUGLIBS	Create libraries with -g debug information, and install
		them in /usr/lib/debug.
@


1.63
log
@fix remaining sudo reference (s,sudo,doas,)
OK deraadt@@ millert@@ tb@@ sthen@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.62 2015/11/14 23:56:50 deraadt Exp $
d119 2
a120 2
MANSUBDIR	Subdirectory under the manual page section, i.e. "vax"
		or "tahoe" for machine specific manual pages.
@


1.62
log
@libocurses can go to the Attic.  last consumer of it was ramdisk more(1)
conceptual ok guenther millert nicm
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.61 2015/10/26 10:43:42 bluhm Exp $
d235 3
a237 3
		"make build".  If set to sudo, this allows one to run
		"make build" as a user other than root (assuming sudo
		is setup for that user).
@


1.61
log
@Nothing in base uses native language support anymore.  Remove NLS
support from the makefiles.
OK naddy@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.60 2015/07/20 23:52:29 yasuoka Exp $
a341 1
			LIBOLDCURSES	/usr/lib/libocurses.a
@


1.60
log
@Add radius(3) library.  This will be used by RADIUS server and client
programs to manipulate RADIUS packets.  Mainly written by UMEZAWA
Takeshi.

fix and suggestion deraadt
ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.59 2014/10/31 13:46:17 jsing Exp $
a11 1
bsd.nls.mk		- National Language Support
a190 9

NLSDIR		Base path for National Language Support files installation.
		[/usr/share/nls]

NLSGRP		National Language Support files group. [bin]

NLSOWN		National Language Support files owner. [root]

NLSMODE		National Language Support files mode. [${NONBINMODE}]
@


1.59
log
@Rename libressl to libtls to avoid confusion and to make it easier to
distinguish between LibreSSL (the project) and libressl (the library).

Discussed with many.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.58 2014/10/13 14:31:01 schwarze Exp $
d351 1
@


1.58
log
@Fix an internal inconsistency: Saying "these eight targets" and then only
listing seven is not cool.  This was broken in rev1.47 when removing lint.
Patch from Theo Buehler <theo at math dot ethz dot ch>.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.57 2014/10/09 04:44:09 tedu Exp $
a357 1
			LIBRESSL	/usr/lib/libressl.a
d364 1
@


1.57
log
@no more lkm
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.56 2014/09/29 19:37:51 gsoares Exp $
d269 1
a269 1
It has eight targets:
d404 1
a404 1
subdirectories.  It has the same eight targets as <bsd.prog.mk>: all, 
d422 1
a422 1
the same eight targets as <bsd.prog.mk>: all, clean, cleandir, depend,
@


1.56
log
@add LIBRESSL; OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.55 2014/04/23 18:24:23 ajacoutot Exp $
a10 1
bsd.lkm.mk		- building loadable kernel modules
a466 24
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The include file <bsd.lkm.mk> has support for building the LKM's. It has
the same seven targets as <bsd.prog.mk>: all, clean, cleandir, depend,
install, and tags. In addition two targets are made available
that is specific to the LKM's: load, unload.

It sets/uses the following variables (in addition to the <bsd.prog.mk>'s):

LKM		LKM name to build.

LKMGRP		Module group.

LKMOWN		Module owner.

LKMMODE		Module mode.

POSTINSTALL	Program to pass with '-p' flag to the modload.
		If not defined,
			POSTINSTALL=${LKM}install
		is assumed.

The include file <bsd.lkm.mk> includes the file named "../Makefile.inc"
if it exists, as well as the include file <bsd.man.mk>.
@


1.55
log
@Remove more Kerberos cruft.

ok jca@@ jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.54 2014/04/22 11:05:22 henning Exp $
d359 1
@


1.54
log
@-KERBEROS5
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.52 2013/10/13 23:30:12 guenther Exp $
a337 1
			LIBASN1		/usr/lib/libasn1.a
a338 1
			LIBCOM_ERR	/usr/lib/libcom_err.a
a345 5
			LIBGSSAPI	/usr/lib/libgssapi.a
			LIBHDB		/usr/lib/libhdb.a
			LIBKADM5CLNT	/usr/lib/libkadm5clnt.a
			LIBKADM5SRV	/usr/lib/libkadm5srv.a
			LIBKAFS		/usr/lib/libkafs.a
a346 1
			LIBKRB5		/usr/lib/libkrb5.a
a358 1
			LIBROKEN	/usr/lib/libroken.a
a366 2
			LIBWIND		/usr/lib/libwind.a
			LIBWRAP		/usr/lib/libwrap.a
@


1.53
log
@express final disapproval of the interfaces in libcompat, such as
them ftime(), gtty(), stty(), re_comp(), cuserid() and others.
Discussion and ongoing work to fix the ports tree from many, especially
naddy.
ok naddy
[There is a bit more cleanup possible after that, but this is considered
the current safe step]
@
text
@a224 2
KERBEROS5	Compile in support for Kerberos 5 authentication.

@


1.52
log
@Make it possible to build to reduced version of a library, including
just specific objects that are compiled with additional options to
reduce their size.  For use by distrib/ and crunchgen.

style and naming assistance from espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.51 2013/08/10 10:19:35 ajacoutot Exp $
d309 1
a309 1
		For example, to load with the compatibility and utility
d312 1
a312 1
			LDADD+=-lutil -lcompat
d333 1
a333 1
		libraries.  For example, to depend on the compatibility and
d336 1
a336 1
			DPADD+=${LIBCOMPAT} ${LIBUTIL}
a342 1
			LIBCOMPAT	/usr/lib/libcompat.a
@


1.51
log
@libkafs5 -> libkafs (unused in build, so no functional change)
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.50 2013/07/11 07:03:46 ajacoutot Exp $
d468 12
@


1.50
log
@Properly set LIBKAFS5, LIBROKEN and LIBWIND which were used without
being defined. Remove LIBKAFS (superseded by LIBKAFS5).

ok robert@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.49 2012/08/23 06:14:41 deraadt Exp $
d355 1
a355 1
			LIBKAFS5	/usr/lib/libkafs5.a
@


1.49
log
@turn off AFS
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.48 2012/08/22 19:41:56 pascal Exp $
d355 1
a355 1
			LIBKAFS		/usr/lib/libkafs.a
d370 1
d379 1
@


1.48
log
@share/mk bits for PIE, currently disabled.

ok matthew@@ deraadt@@ kettenis@@, manpage prodding and ok jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.47 2012/04/08 15:56:28 jsg Exp $
a220 2

AFS		Compile support for AFS.
@


1.47
log
@unhook lint from the tree.  The parser is incomplete and difficult
to fix and there are several alternatives that don't tell quite so many
dangerous lies.

enthusiastic agreement from a bunch of people
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.46 2011/09/24 07:26:01 espie Exp $
d237 2
@


1.46
log
@create a new "bounce" file for ports infrastructure.
clean up ancient comments in the existing ones, and use bsd.own.mk's guard
against multiple includes.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.45 2011/06/23 22:46:12 schwarze Exp $
a178 2
LINTLIBDIR	Base path for lint(1) library installation. [/usr/libdata/lint]

a237 2
WANTLINT	Build lint libraries.

a292 2
	lint:
		run lint on the source files
d417 1
a417 1
clean, cleandir, depend, includes, install, lint, and tags.  For all of
d435 1
a435 1
includes, install, lint, and tags.  It has a limited number of suffixes,
a443 2
LINTLIBDIR	Target directory for lint libraries.

d471 1
a471 1
install, lint, and tags. In addition two targets are made available
@


1.45
log
@switch to installing source manuals (base part)
discussed with lots of people, tested by naddy@@,
"move fast" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.44 2011/04/22 21:11:50 jmc Exp $
d17 1
@


1.44
log
@do not mention the now gone PSD/USD directories; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.43 2011/03/12 05:12:14 deraadt Exp $
d168 1
a168 1
MANDIR		Base path for manual installation. [/usr/share/man/cat]
a228 4

MANZ		Compress manual pages at installation time.

MANPS		Define to have PostScript manual pages generated.
@


1.43
log
@bsd.doc.mk is dead.  long live bsd.doc.mk
discussed with ingo
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.42 2010/11/18 21:16:57 miod Exp $
d186 1
a186 1
DOCDIR		Base path for system documentation (e.g. PSD, USD, etc.)
@


1.42
log
@Sync the LIBFOO defines with the current set of libraries we build and
install. Also define LIBARCH on arm platforms.
ok millert@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.41 2010/03/02 20:33:55 jmc Exp $
a9 1
bsd.doc.mk		- building troff system documents
@


1.41
log
@variable name is SUBDIR, not SUBDIRS; from Amarendra Godbole
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.40 2007/11/03 10:30:40 espie Exp $
a349 1
			LIB45		/usr/lib/lib45.a
d352 1
a355 1
			LIBDES		/usr/lib/libdes.a
d358 3
a360 1
			LIBGCC		/usr/lib/libgcc.a
a362 1
			LIBKADM		/usr/lib/libkadm.a
a365 1
			LIBKDB		/usr/lib/libkdb.a
a366 1
			LIBKRB		/usr/lib/libkrb.a
d371 2
d374 3
d379 1
a380 1
			LIBSECTOK	/usr/lib/libsectok.a
d382 1
a383 1
			LIBTELNET	/usr/lib/libtelnet.a
@


1.40
log
@add a BEFOREMAN hook variable, for those programs that need something to
be done before they can build their manpages.
`ah right' millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.39 2005/11/23 22:11:48 jmc Exp $
d425 1
a425 1
the directories listed in the variable SUBDIRS, the specified directory 
d428 1
a428 1
the variable SUBDIRS.
@


1.39
log
@NOLINT -> WANTLINT
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.38 2005/11/23 18:34:33 deraadt Exp $
d129 4
@


1.38
log
@change NOLINT into opposite sense; WANTLINT, since it lets us built
lint libraries for those libraries which want them (and can have them)
ok millert
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.37 2005/04/15 17:18:57 espie Exp $
d240 1
a240 1
NOLINT		Do not build lint libraries.
@


1.37
log
@Bye, bye SHAREDSTRINGS.
Okay deraadt@@, millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.36 2003/08/29 00:04:41 jolan Exp $
d240 1
a240 1
NOLINT		Do not build lint libraries. [set, set unconditionally]
@


1.36
log
@remove HIDEGAME, it only made sense when 'dm' was still around.

ok fgsch@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.35 2003/08/11 17:31:51 jakob Exp $
a384 4

SHAREDSTRINGS	If defined, a new .c.o rule is used that results in shared
		strings, using xstr(1). Note that this will not work with
		parallel makes.
@


1.35
log
@add GSSAPI. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.34 2003/08/07 11:08:56 hin Exp $
a312 4

HIDEGAME	If HIDEGAME is defined, the binary is installed in
		/usr/games/hide, and a symbolic link is created to
		/usr/games/dm.
@


1.34
log
@Kerberos 4 has been removed, so don't mention it.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.33 2003/07/16 01:29:34 deraadt Exp $
d360 1
@


1.33
log
@bye bye LIBCOM_ERR thingies
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.32 2002/06/25 15:33:18 millert Exp $
a223 2

KERBEROS	Compile in support for Kerberos 4 authentication.
@


1.32
log
@Add LIBEVENT; pointed out by Brian J. Kifiak
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.31 2002/05/11 00:20:21 espie Exp $
a354 1
			LIBCOM_ERR	/usr/lib/libcom_err.a
@


1.31
log
@Add missing libraries to bsd.prog.mk (mostly kerberosV)
Use them in DPADD throughout the tree.
Fix a few mispells (LIBMATH -> LIBM...)
Wipe obsolete lib (LIBRESOLV)
Sort added missing libraries, move obsolete stuff apart.
Synch documentation in bsd.README

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.30 2002/01/01 23:52:32 provos Exp $
d361 1
@


1.30
log
@sync; pointed out by openbsd@@davidkrause.com
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.28 2001/08/16 15:12:48 brad Exp $
d352 4
a355 1
			LIBC		/lib/libc.a
d357 1
a358 2
			LIBCRYPTO	/usr/lib/libcrypto.a
			LIBDBM		/usr/lib/libdbm.a
d362 5
a368 1
			LIBKDB		/usr/lib/libkdb.a
d370 1
a370 1
			LIBKAFS		/usr/lib/libkafs.a
a373 1
			LIBMP		/usr/lib/libmp.a
d375 1
a375 1
			LIBPC		/usr/lib/libpc.a
a376 2
			LIBPLOT		/usr/lib/libplot.a
			LIBRESOLV	/usr/lib/libresolv.a
d378 1
d384 1
d387 1
d389 1
a389 1
			LIBY		/usr/lib/liby.a
@


1.29
log
@Clean up after brad.
@
text
@d20 2
a22 1
bsd.subdir.mk		- targets for building subdirectories
@


1.28
log
@- remove libatalk
- remove mention of architecture names in the NOPIC variable description
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.27 2001/07/18 13:25:17 espie Exp $
a239 1
variable).
@


1.27
log
@Mention WARNINGS
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.26 2001/07/02 14:01:35 millert Exp $
d236 1
a236 1
NOPROFILE	Do not build profiled versions of system libraries
d239 2
a240 2
		do not build shared libraries.  [set if ${MACHINE_ARCH}
		is "mips", "vax", or "alpha", unset otherwise.]
a351 1
			LIBATALK	/usr/lib/libatalk.a
a498 1

@


1.26
log
@Sync library list with bsd.prog.mk
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.25 2001/06/27 06:16:48 art Exp $
d249 3
@


1.25
log
@UVM is no longer an option
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.24 2001/06/20 11:49:24 mpech Exp $
d349 1
d353 1
d356 4
a359 1
			LIBL		/usr/lib/libl.a
d362 1
d364 1
a364 1
			LIBOLDCURSES	/usr/lib/libocurses.a
d367 2
a369 1
			LIBPC		/usr/lib/libpc.a
d371 5
a375 1
			LIBRPC		/usr/lib/sunrpc.a
d379 1
d381 1
@


1.24
log
@we don't use "/" in the beginning of the name in MANSUBDIR
millert@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.23 2001/04/03 23:00:08 espie Exp $
a264 4

UVM
		Set to yes on machines that switched to the new unified
		vm. Temporary, until everything supports uvm.
@


1.23
log
@Minor clean-ups:
- document some more things (MANPS, make oddities)
- put all PHONY targets in bsd.own.mk, since it's included by everything
that uses it.
- remove them from bsd.lib.mk, since it includes bsd.own.mk.
- ... except for load/unload, which are only in bsd.lkm.mk.
- fix spell target, so that it actually depends on the generated file.

okay niklas@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.22 2000/05/15 06:10:21 niklas Exp $
d120 2
a121 2
MANSUBDIR	Subdirectory under the manual page section, i.e. "/vax"
		or "/tahoe" for machine specific manual pages.
@


1.22
log
@Add support for building libraries with debugging information in them.
Enable by setting DEBUGLIBS=yes in /etc/mk.conf, then -g libraries will get
installed in /usr/lib/debug.  This directory will be searched first if
gcc is given the -g flag during the link stage.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.21 1999/11/26 21:47:09 millert Exp $
d57 19
d162 2
d219 2
d230 2
d263 6
@


1.21
log
@Add ${LIBPERL}
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.20 1999/05/15 15:45:08 kstailey Exp $
d219 5
a223 2
DEBUG		Add -g to assembly and C compiler passes.  Also doesn't
		set STRIP to -s per default if defined.
@


1.20
log
@mention GLOBAL_AUTOCONF_CACHE
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.19 1998/12/19 19:07:32 millert Exp $
d331 1
@


1.19
log
@add PIPE variable, suitable for /etc/mk.conf, to enable gcc -pipe mode
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.18 1998/12/19 05:13:02 millert Exp $
d231 4
@


1.18
log
@MANOWN, DOCOWN, and  NLSOWNare root not bin
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.17 1998/11/22 17:45:09 espie Exp $
d221 10
@


1.17
log
@add roadmap, from FreeBSD mostly
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.16 1998/07/15 22:18:05 espie Exp $
d147 1
a147 1
MANOWN		Manual owner. [bin]
d166 1
a166 1
DOCOWN		Documentation owner. [bin]
d175 1
a175 1
NLSOWN		National Language Support files owner. [bin]
@


1.16
log
@
spelling
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.15 1997/04/27 21:38:25 millert Exp $
d8 14
@


1.15
log
@COPY -> INSTALL_COPY and STRIP -> INSTALL_STRIP changes.
For some reason the previous commit did not grab these.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.14 1997/04/18 03:49:48 millert Exp $
d44 1
a44 1
multiple programs in a single directory.  It's a lot easier split up the
d46 1
a46 1
the "obj" directory stuff work right, not because we switch to a new version
@


1.14
log
@We run OpenBSD
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.13 1997/02/09 16:41:50 deraadt Exp $
d165 1
a165 1
STRIP		The flag passed to the install program to cause the binary
d168 2
a169 1
		stripped/not-stripped using a single knob. [-s]
d171 7
a177 5
COPY		The flag passed to the install program to cause the binary
		to be copied rather than moved.  This is to be used when
		building our own install script so that the entire system
		can either be installed with copies, or with moves using
		a single knob. [-c]
@


1.13
log
@libcrypt went away a while back
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.12 1996/11/24 03:05:02 niklas Exp $
d356 1
a356 1
the NetBSD source tree.  For instance, if "PARALLEL" is defined by
@


1.12
log
@Fix typo in last change
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.10 1996/07/27 10:05:48 deraadt Exp $
a289 1
			LIBCRYPT	/usr/lib/libcrypt.a
d306 1
@


1.11
log
@Add a new knob called DEBUG.  Define to -g to have it turn off STRIP=-s
 and add itself to CFLAGS and ASFLAGS
@
text
@d203 1
a203 1
		set STRIP to -s per defalt if defined.
@


1.10
log
@default file owner should be root for NFS diskless security
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.9 1996/06/02 05:58:20 tholo Exp $
d201 3
@


1.9
log
@Add LIBOLDCURSES
Add LIBTERMLIB
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.README,v 1.7 1996/03/05 11:12:34 mickey Exp $
d123 1
a123 1
BINOWN		Binary owner. [bin]
@


1.8
log
@sync with netbsd 960418
@
text
@d295 1
d301 2
a302 1
			LIBTERM		/usr/lib/libterm.a
@


1.7
log
@Labeling style changed ($OpenBSD$).
POSTINSTALL added to the <bsd.lkm.mk> (see bsd.README for details).
@
text
@d1 2
a2 2
#	$OpenBSD$
#	$NetBSD: bsd.README,v 1.15 1996/01/22 22:46:06 cgd Exp $
d101 3
a103 2
The include file <bsd.own.mk> contains the owners, groups, etc. for both
manual pages and binaries.
d107 7
a113 2
It sets the following variables, if they are not already defined (defaults
are in brackets):
d176 4
a179 3
Additionally, the following variables may be set to modify the behaviour
of the system build process (default values are in brackets along with
comments, if set by bsd.own.mk):
d202 1
a202 1
This file is generally useful when building your own Makefiles so that
d211 1
a211 1
It has seven targets:
d224 2
d340 6
a345 6
subdirectories.  It has the same seven targets as <bsd.prog.mk>: all, clean,
cleandir, depend, install, lint, and tags.  For all of the directories
listed in the variable SUBDIRS, the specified directory will be visited
and the target made.  There is also a default target which allows the
command "make subdir" where subdir is any directory listed in the variable
SUBDIRS.
d358 3
a360 3
the same seven targets as <bsd.prog.mk>: all, clean, cleandir, depend,
install, lint, and tags.  It has a limited number of suffixes, consistent
with the current needs of the BSD tree.
@


1.6
log
@Added <bsd.lkm.mk> file. Correspondent changes made to the bsd.README.
All the rest changed to be $OpenBSD$.
Dedicated to Suzi Quatro (she must be alive still, so best wishes to here).
@
text
@d1 2
a2 1
#	$OpenBSD: bsd.README,v 1.15 1996/01/22 22:46:06 cgd Exp $
d400 5
@


1.5
log
@We don't have the EXPORTABLE_SYSTEM variable
@
text
@d1 1
a1 1
#	$NetBSD: bsd.README,v 1.15 1996/01/22 22:46:06 cgd Exp $
d264 1
a264 1
SRCS		List of source files to build the program.  If PROG is not
d382 21
@


1.4
log
@from netbsd: clean up bits that state which man page section numbers
are allowed (section 9 now exists).  Document that variables in
bsd.own.mk that were not previously documented.
@
text
@a172 3
EXPORTABLE_SYSTEM
		Do not build /usr/src/domestic, even if it is present.

@


1.3
log
@from netbsd; assert -Werror
@
text
@d1 1
a1 1
#	$NetBSD: bsd.README,v 1.14 1995/12/13 01:25:05 cgd Exp $
d89 1
a89 1
MAN		The manual pages to be installed (use a .1 - .8 suffix).
d91 1
a91 1
MLINKS		List of manual page links (using a .1 - .8 suffix).  The
d105 46
a150 1
It sets/uses the following variables:
d152 1
a152 1
BINGRP		Binary group.
d154 1
a154 1
BINOWN		Binary owner.
d156 1
a156 1
BINMODE		Binary mode.
d161 1
a161 1
		stripped/not-stripped using a single nob.
d167 8
a174 1
		a single nob.
d176 12
a187 1
MANDIR		Base path for manual installation.
d189 1
a189 1
MANGRP		Manual group.
d191 3
a193 1
MANOWN		Manual owner.
d195 1
a195 1
MANMODE		Manual mode.
d261 1
a261 1
MAN		Manual pages (should end in .1 - .8).  If no MAN variable is
d371 1
a371 1
MAN		The manual pages to be installed (use a .1 - .8 suffix).
@


1.2
log
@update from netbsd
@
text
@d1 1
a1 1
#	$NetBSD: bsd.README,v 1.13 1995/10/22 00:45:54 christos Exp $
d278 4
a281 6
<bsd.lib.mk>.  It contains a set of rules for lex and yacc that
can be used when multiple lex and yacc files are present in the
same directory, and their respective targets are made in parallel.
Since it renames the yacc output include files these rules are not
used by default. They can be enabled by setting the PARALLEL variable
in the Makefile.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: bsd.README,v 1.12 1995/09/24 23:49:06 christos Exp $
d274 10
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
