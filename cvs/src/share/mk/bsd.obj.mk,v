head	1.19;
access;
symbols
	OPENBSD_6_2:1.19.0.6
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.19.0.4
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.14.0.12
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.8
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.10
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.6
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.4
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.13.0.26
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.24
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.22
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.20
	OPENBSD_5_0:1.13.0.18
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.16
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.14
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.10
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.12
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.8
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.6
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.14
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.12
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.10
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.8
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.6
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.26
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.11.0.24
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.22
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.20
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.18
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.11.0.16
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.11.0.14
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.12
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.11.0.10
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.11.0.8
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.11.0.6
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.11.0.4
	OPENBSD_2_3_BASE:1.11
	OPENBSD_2_2:1.11.0.2
	OPENBSD_2_2_BASE:1.11
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.19
date	2017.01.24.03.22.13;	author tb;	state Exp;
branches;
next	1.18;
commitid	Crxr5nnYJ4lYBZeZ;

1.18
date	2017.01.24.02.56.50;	author tb;	state Exp;
branches;
next	1.17;
commitid	tVrBu1h0WqyJP1iQ;

1.17
date	2017.01.21.06.55.52;	author tb;	state Exp;
branches;
next	1.16;
commitid	pNvkoWRF8OalK3dT;

1.16
date	2016.11.19.14.20.58;	author tb;	state Exp;
branches;
next	1.15;
commitid	cJjw851oyvO56iNN;

1.15
date	2016.10.06.15.34.18;	author natano;	state Exp;
branches;
next	1.14;
commitid	pbPnAoHzWtxUSjG7;

1.14
date	2013.11.22.15.43.18;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.01.08.31.13;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2003.10.28.17.09.33;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	97.08.22.14.52.11;	author flipk;	state Exp;
branches;
next	1.10;

1.10
date	97.06.28.05.08.28;	author grr;	state Exp;
branches;
next	1.9;

1.9
date	97.06.12.15.22.38;	author kstailey;	state Exp;
branches;
next	1.8;

1.8
date	97.05.03.11.32.46;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	97.04.27.15.47.49;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	97.04.10.10.39.39;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.08.23.22.42.41;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.08.23.17.45.10;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.04.22.01.28.34;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.05.11.12.53;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.46;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.46;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Modernize and unify test idioms for the sake of readability and
consistency. Done jointly with rpe.

ok deraadt, phessler, rpe;
also looks good to guenther despite a slight change in semantics
@
text
@#	$OpenBSD: bsd.obj.mk,v 1.18 2017/01/24 02:56:50 tb Exp $
#	$NetBSD: bsd.obj.mk,v 1.9 1996/04/10 21:08:05 thorpej Exp $

.if !target(obj)
.  if defined(NOOBJ)
obj:
.  else

.  if defined(MAKEOBJDIR)
__objdir=	${MAKEOBJDIR}
.  else
__objdir=	obj
.  endif

_SUBDIRUSE:

obj! _SUBDIRUSE
	@@cd ${.CURDIR}; \
	umask ${WOBJUMASK}; \
	here=`/bin/pwd`; bsdsrcdir=`cd ${BSDSRCDIR}; /bin/pwd`; \
	subdir=$${here#$${bsdsrcdir}/}; \
	if [[ `id -u` -eq 0 && ${BUILDUSER} != root ]]; then \
		SETOWNER="chown -h ${BUILDUSER}:${WOBJGROUP}"; \
		if [[ $$here != $$subdir ]]; then \
			_mkdirs() { \
				su ${BUILDUSER} -c "mkdir -p $$1"; \
			}; \
			MKDIRS=_mkdirs; \
		fi; \
	elif [[ `id` == *'('${WOBJGROUP}')'* && $$here == $$subdir ]]; then \
		SETOWNER="chown :${WOBJGROUP}"; \
	else \
		SETOWNER=:; \
	fi; \
	[[ -z $$MKDIRS ]] && MKDIRS="mkdir -p"; \
	if [[ $$here != $$subdir ]]; then \
		dest=${BSDOBJDIR}/$$subdir ; \
		echo "$$here/${__objdir} -> $$dest"; \
		if [[ ! -L ${__objdir} || `readlink ${__objdir}` != $$dest ]]; \
		    then \
			[[ -e ${__objdir} ]] && rm -rf ${__objdir}; \
			ln -sf $$dest ${__objdir}; \
			$$SETOWNER ${__objdir}; \
		fi; \
		if [[ -d ${BSDOBJDIR} ]]; then \
			[[ -d $$dest ]] || $$MKDIRS $$dest; \
		else \
			if [[ -e ${BSDOBJDIR} ]]; then \
				echo "${BSDOBJDIR} is not a directory"; \
			else \
				echo "${BSDOBJDIR} does not exist"; \
			fi; \
		fi; \
	else \
		dest=$$here/${__objdir} ; \
		if [[ ! -d ${__objdir} ]]; then \
			echo "making $$dest" ; \
			$$MKDIRS $$dest; \
			$$SETOWNER $$dest; \
		fi ; \
	fi;
.  endif
.endif

.include <bsd.own.mk>
@


1.18
log
@Zap a "true ;" that is there for no good reason.

discussed with ajacoutot
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.17 2017/01/21 06:55:52 tb Exp $
d36 1
a36 1
	if test $$here != $$subdir ; then \
d39 1
a39 2
		if test ! -L ${__objdir} -o \
		    X`readlink ${__objdir}` != X$$dest; \
d41 1
a41 1
			if test -e ${__objdir}; then rm -rf ${__objdir}; fi; \
d45 2
a46 2
		if test -d ${BSDOBJDIR}; then \
			test -d $$dest || $$MKDIRS $$dest; \
d48 1
a48 1
			if test -e ${BSDOBJDIR}; then \
d56 1
a56 1
		if test ! -d ${__objdir} ; then \
@


1.17
log
@Only do chown :wobj when this command will succeed. Allows using
bsd.prog.mk outside /usr/src by users not belonging to group wobj.

Requested by many after a report by Sebastien Marie.
ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.16 2016/11/19 14:20:58 tb Exp $
a55 1
		true ; \
@


1.16
log
@Enable builds with a dedicated user that cannot elevate privileges or write
to /usr/src or /usr/xenocara.

Change /usr/{,x}obj to owner build:wobj with mode 770 and install the
systemwide makefiles before starting a build.  The root of the noperm fs
containing DESTDIR should also be owned by build:wobj.

Developers will need to add their users to group wobj to be able to write
to /usr/{,x}obj/.

"push forward" deraadt; testing, input & ok rpe
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.15 2016/10/06 15:34:18 natano Exp $
d30 1
a30 1
	elif [[ $$here == $$subdir ]]; then \
@


1.15
log
@Use BUILDUSER as the owner of new links/directories created in 'make obj'
when started as root.

diff by millert with tweaks by me
ok tb deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.14 2013/11/22 15:43:18 espie Exp $
d19 3
d23 9
a31 5
		SETOWNER="chown -h ${BUILDUSER}"; \
		_mkdirs() { \
			su ${BUILDUSER} -c "mkdir -p $$1"; \
		}; \
		MKDIRS=_mkdirs; \
a32 1
		MKDIRS="mkdir -p"; \
d35 1
a35 2
	here=`/bin/pwd`; bsdsrcdir=`cd ${BSDSRCDIR}; /bin/pwd`; \
	subdir=$${here#$${bsdsrcdir}/}; \
d61 1
@


1.14
log
@remove unused goo, okay guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.13 2007/05/01 08:31:13 espie Exp $
d19 10
d39 1
d42 1
a42 1
			test -d $$dest || mkdir -p $$dest; \
d55 1
a55 1
			mkdir $$dest; \
d60 2
@


1.13
log
@warn if base obj directory does not exist.
okay deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.12 2003/10/28 17:09:33 espie Exp $
d10 1
a10 1
__baseobjdir=	${MAKEOBJDIR}
d12 1
a12 19
__baseobjdir=	obj
.  endif

.  if defined(OBJMACHINE)
__objdir=	${__baseobjdir}.${MACHINE}
.  else
__objdir=	${__baseobjdir}
.  endif

.  if defined(USR_OBJMACHINE)
__usrobjdir=	${BSDOBJDIR}.${MACHINE}
__usrobjdirpf=	
.  else
__usrobjdir=	${BSDOBJDIR}
.    if defined(OBJMACHINE)
__usrobjdirpf=	.${MACHINE}
.    else
__usrobjdirpf=
.    endif
d22 1
a22 1
		dest=${__usrobjdir}/$$subdir${__usrobjdirpf} ; \
d30 1
a30 1
		if test -d ${__usrobjdir}; then \
d33 2
a34 2
			if test -e ${__usrobjdir}; then \
				echo "${__usrobjdir} is not a directory"; \
d36 1
a36 1
				echo "${__usrobjdir} does not exist"; \
@


1.12
log
@indent tests for readability.

actually declare a _SUBDIRUSE target.
(this allows one  to just include bsd.obj.mk if bsd.subdir.mk is not actually
needed, or to include bsd.obj.mk and bsd.subdir.mk in any order)

okay millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.11 1997/08/22 14:52:11 flipk Exp $
d48 2
a49 2
		if test -d ${__usrobjdir} -a ! -d $$dest; then \
			mkdir -p $$dest; \
d51 5
a55 1
			true; \
@


1.11
log
@"ln -s" becomes "ln -sf"
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.10 1997/06/28 05:08:28 grr Exp $
d5 1
a5 1
.if defined(NOOBJ)
d7 1
a7 1
.else
d9 1
a9 1
.if defined(MAKEOBJDIR)
d11 1
a11 1
.else
d13 1
a13 1
.endif
d15 1
a15 1
.if defined(OBJMACHINE)
d17 1
a17 1
.else
d19 1
a19 1
.endif
d21 1
a21 1
.if defined(USR_OBJMACHINE)
d24 1
a24 1
.else
d26 1
a26 1
.if defined(OBJMACHINE)
d28 1
a28 1
.else
d30 4
a33 2
.endif
.endif
d61 1
a61 1
.endif
@


1.10
log
@been discussed several times with no real objection, do it
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.9 1997/06/12 15:22:38 kstailey Exp $
d44 1
a44 1
			ln -s $$dest ${__objdir}; \
@


1.9
log
@goodbye perl
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.8 1997/05/03 11:32:46 niklas Exp $
d34 1
a34 1
	@@cd ${.CURDIR}; rm -f ${__objdir} > /dev/null 2>&1 || true; \
@


1.8
log
@Workaround bug in some shells, esp. the one shipped in 2.0.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.7 1997/04/27 15:47:49 niklas Exp $
d41 1
a41 1
		    X`perl -e "print readlink('${__objdir}')"` != X$$dest; \
@


1.7
log
@Allow BSDSRCDIR to point to a symlink.  This means /usr/src can be a symlink
without having to explicitly set BSDSRCDIR
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.6 1997/04/10 10:39:39 deraadt Exp $
d43 1
a43 1
			test -e ${__objdir} && rm -rf ${__objdir}; \
@


1.6
log
@if generating obj@@ links, check if the existing obj@@ link points to the
same path we want to make it point to later.  If it does, leave the link
as-is and do not attempt to recreate it.  read-only /usr/src with obj@@
links will work much better with this.  Fix from Niklas -- anyone who
figures out a way to do this without using perl gets a cookie.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.5 1996/08/23 22:42:41 niklas Exp $
d35 2
a36 1
	here=`/bin/pwd`; subdir=$${here#${BSDSRCDIR}/}; \
@


1.5
log
@OK this time for real: Support MAKEOBJDIR, and force the obj rule.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.4 1996/08/23 17:45:10 niklas Exp $
d39 6
a44 2
		rm -rf ${__objdir}; \
		ln -s $$dest ${__objdir}; \
@


1.4
log
@Support MAKEOBJDIR.  Change "obj" rule to be forced.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.obj.mk,v 1.2 1996/03/05 11:12:53 mickey Exp $
d9 6
d16 1
a16 1
__objdir=	obj.${MACHINE}
d18 1
a18 1
__objdir=	obj
d33 1
a33 1
obj: _SUBDIRUSE
@


1.3
log
@sync with netbsd 960418
@
text
@@


1.2
log
@Labeling style changed ($OpenBSD$).
POSTINSTALL added to the <bsd.lkm.mk> (see bsd.README for details).
@
text
@d1 2
a2 2
#	$OpenBSD$
#	$NetBSD: bsd.obj.mk,v 1.8 1996/02/21 10:02:00 pk Exp $
d29 1
a29 1
	here=`pwd`; subdir=$${here#${BSDSRCDIR}/}; \
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$NetBSD: bsd.obj.mk,v 1.7 1995/06/10 20:46:35 mycroft Exp $
d29 1
a29 1
	here=`pwd`; subdir=`echo $$here | sed 's,^${BSDSRCDIR}/,,'`; \
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
