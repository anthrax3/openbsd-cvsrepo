head	1.22;
access;
symbols
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.21.0.6
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.4
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.19.0.10
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.8
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.4
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.2
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.17.0.2
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.10
	OPENBSD_5_0:1.16.0.8
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.10
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.6
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.4
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.2
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.14.0.12
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.10
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.8
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.6
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.4
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.2
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.8
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.10.0.16
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.14
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.12
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.10
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.10.0.8
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.6
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.4
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.7.0.4
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.22
date	2016.10.08.09.43.46;	author schwarze;	state Exp;
branches;
next	1.21;
commitid	sXdvTlZwM6kNGug9;

1.21
date	2015.03.08.21.59.48;	author espie;	state Exp;
branches;
next	1.20;
commitid	Sxb76uf1tZAJdbYv;

1.20
date	2015.01.16.01.58.17;	author schwarze;	state Exp;
branches;
next	1.19;
commitid	yazSRxVqe91hmBGV;

1.19
date	2012.10.15.11.14.38;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2012.08.18.10.36.51;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2012.04.08.15.56.28;	author jsg;	state Exp;
branches;
next	1.16;

1.16
date	2009.09.23.20.30.20;	author matthieu;	state Exp;
branches;
next	1.15;

1.15
date	2007.11.03.15.14.32;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2005.02.05.10.39.50;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.19.18.01.51;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.18.23.44.51;	author marc;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.22.23.54.08;	author art;	state Exp;
branches;
next	1.10;

1.10
date	98.03.01.09.18.06;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	97.06.02.23.58.34;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	97.06.02.23.38.07;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	96.04.22.01.28.37;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.03.16.05.32.40;	author etheisen;	state Exp;
branches;
next	1.5;

1.5
date	96.03.05.11.13.01;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.02.25.19.02.36;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	95.12.19.12.14.29;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.18.23.45.23;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.47;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.47;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Do not let "make all" run the tests in the subdirectories twice
if a Makefile using <bsd.regress.mk> defines both SUBDIR and
REGRESS_TARGETS.
This helps for example src/regress/usr.bin/ssh/.
Same for "make cleandir", don't run "make clean" twice in SUBDIR.
OK bluhm@@, and no opposition when shown on tech@@.
@
text
@#	$OpenBSD: bsd.subdir.mk,v 1.21 2015/03/08 21:59:48 espie Exp $
#	$NetBSD: bsd.subdir.mk,v 1.11 1996/04/04 02:05:06 jtc Exp $
#	@@(#)bsd.subdir.mk	5.9 (Berkeley) 2/1/91

.if !target(.MAIN)
.MAIN: all
.endif

# Make sure this is defined
SKIPDIR?=

_SUBDIRUSE: .USE
.if defined(SUBDIR)
	@@for entry in ${SUBDIR}; do \
		set -e; if test -d ${.CURDIR}/$${entry}.${MACHINE}; then \
			_newdir_="$${entry}.${MACHINE}"; \
		else \
			_newdir_="$${entry}"; \
		fi; \
		if test X"${_THISDIR_}" = X""; then \
			_nextdir_="$${_newdir_}"; \
		else \
			_nextdir_="$${_THISDIR_}/$${_newdir_}"; \
		fi; \
		_makefile_spec_=""; \
		if [ -e ${.CURDIR}/$${_newdir_}/Makefile.bsd-wrapper ]; then \
			_makefile_spec_="-f Makefile.bsd-wrapper"; \
		fi; \
		subskipdir=''; \
		for skipdir in ${SKIPDIR}; do \
			subentry=$${skipdir#$${entry}}; \
			if [ X$${subentry} != X$${skipdir} ]; then \
				if [ X$${subentry} = X ]; then \
					echo "($${_nextdir_} skipped)"; \
					break; \
				fi; \
				subskipdir="$${subskipdir} $${subentry#/}"; \
			fi; \
		done; \
		if [ X$${skipdir} = X -o X$${subentry} != X ]; then \
			echo "===> $${_nextdir_}"; \
			${MAKE} -C ${.CURDIR}/$${_newdir_} \
			    SKIPDIR="$${subskipdir}" \
			    $${_makefile_spec_} _THISDIR_="$${_nextdir_}" \
			    ${MAKE_FLAGS} \
			    ${.TARGET:S/^real//}; \
		fi; \
	done

${SUBDIR}::
	@@set -e; if test -d ${.CURDIR}/${.TARGET}.${MACHINE}; then \
		_newdir_=${.TARGET}.${MACHINE}; \
	else \
		_newdir_=${.TARGET}; \
	fi; \
	_makefile_spec_=""; \
	if [ -f ${.CURDIR}/$${_newdir_}/Makefile.bsd-wrapper ]; then \
		_makefile_spec_="-f Makefile.bsd-wrapper"; \
	fi; \
	echo "===> $${_newdir_}"; \
	exec ${MAKE} -C ${.CURDIR}/$${_newdir_} ${MAKE_FLAGS} \
	    $${_makefile_spec_} _THISDIR_="$${_newdir_}" all
.endif

.if !target(install)
.  if !target(beforeinstall)
beforeinstall:
.  endif
.  if !target(afterinstall)
afterinstall:
.  endif
install: maninstall
maninstall: afterinstall
afterinstall: realinstall
realinstall: beforeinstall _SUBDIRUSE
.endif


.for t in all cleandir includes depend obj tags manlint
.  if !target($t)
$t: _SUBDIRUSE
.  endif
.endfor
.if !target(regress) && empty(.TARGETS:Mall)
regress: _SUBDIRUSE
.endif
.if !target(clean) && empty(.TARGETS:Mcleandir)
clean: _SUBDIRUSE
.endif

.if !defined(BSD_OWN_MK)
.  include <bsd.own.mk>
.endif
@


1.21
log
@use new "make -C" to avoid extra shells.
okay millert@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.20 2015/01/16 01:58:17 schwarze Exp $
d79 1
a79 1
.for t in all clean cleandir includes depend obj tags regress manlint
d84 6
@


1.20
log
@Delete the MANLINT variable and the related SUFFIXES rules because
since yesterday, "mandoc -Tlint -Wfatal" can no longer fail.
Instead, as suggested by deraadt@@, provide a manlint target
that is *not* run during make build, but can be run
whenever you want to check syntax of manuals.
"nice stuff" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.19 2012/10/15 11:14:38 espie Exp $
d15 1
a15 1
		(set -e; if test -d ${.CURDIR}/$${entry}.${MACHINE}; then \
d42 2
a43 2
			cd ${.CURDIR}/$${_newdir_}; \
			exec ${MAKE} SKIPDIR="$${subskipdir}" \
d47 1
a47 1
		fi); \
d61 2
a62 2
	cd ${.CURDIR}/$${_newdir_}; \
	exec ${MAKE} ${MAKE_FLAGS} $${_makefile_spec_} _THISDIR_="$${_newdir_}" all
@


1.19
log
@old stuff:
- moved to realdepend with success, finish the old subdirdepend.
- .LIBS: doesn't mean anything any more, and it had broken semantics
when it meant something anyways.

okay millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.18 2012/08/18 10:36:51 espie Exp $
d79 1
a79 1
.for t in all clean cleandir includes depend obj tags regress
@


1.18
log
@allow other targets to work like install -> realinstall
(to be used in xenocara for build)

okay matthieu@@
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.17 2012/04/08 15:56:28 jsg Exp $
d46 1
a46 1
			    ${.TARGET:S/^real//:S/subdirdepend/depend/}; \
@


1.17
log
@unhook lint from the tree.  The parser is incomplete and difficult
to fix and there are several alternatives that don't tell quite so many
dangerous lies.

enthusiastic agreement from a bunch of people
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.16 2009/09/23 20:30:20 matthieu Exp $
d46 1
a46 1
			    ${.TARGET:S/realinstall/install/:S/subdirdepend/depend/}; \
@


1.16
log
@use "exec ${MAKE} ..." instead of "${MAKE} ..." for recursion.
This saves a few processes. ok miod@@.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.15 2007/11/03 15:14:32 espie Exp $
d79 1
a79 1
.for t in all clean cleandir includes depend lint obj tags regress
@


1.15
log
@unmess make depend: make sure stuff is built in the correct order.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.14 2005/02/05 10:39:50 espie Exp $
d43 1
a43 1
			${MAKE} SKIPDIR="$${subskipdir}" \
d62 1
a62 1
	${MAKE} ${MAKE_FLAGS} $${_makefile_spec_} _THISDIR_="$${_newdir_}" all
@


1.14
log
@introduce explicit MAKE_FLAGS variable, which has no surprising behavior
dependent on make, and fixes the regress problem reported by David Krause.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.13 2005/01/19 18:01:51 espie Exp $
d46 1
a46 1
			    ${.TARGET:S/realinstall/install/:S/.depend/depend/}; \
@


1.13
log
@zap redundant MAKEFLAGS, put common code in a loop, indent.
okay hshoexer.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.12 2004/01/18 23:44:51 marc Exp $
d45 1
d62 1
a62 1
	${MAKE} $${_makefile_spec_} _THISDIR_="$${_newdir_}" all
@


1.12
log
@
don't include bsd.own.mk a second time
'I don't see the harm in that --millert@@'
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.11 2002/02/22 23:54:08 art Exp $
d43 1
a43 1
			${MAKE} ${.MAKEFLAGS} SKIPDIR="$${subskipdir}" \
d61 1
a61 1
	${MAKE} ${.MAKEFLAGS} $${_makefile_spec_} _THISDIR_="$${_newdir_}" all
d65 1
a65 1
.if !target(beforeinstall)
d67 2
a68 2
.endif
.if !target(afterinstall)
d70 1
a70 1
.endif
a76 19
.if !target(all)
all: _SUBDIRUSE
.endif

.if !target(clean)
clean: _SUBDIRUSE
.endif

.if !target(cleandir)
cleandir: _SUBDIRUSE
.endif

.if !target(includes)
includes: _SUBDIRUSE
.endif

.if !target(depend)
depend: _SUBDIRUSE
.endif
d78 5
a82 15
.if !target(lint)
lint: _SUBDIRUSE
.endif

.if !target(obj)
obj: _SUBDIRUSE
.endif

.if !target(tags)
tags: _SUBDIRUSE
.endif

.if !target(regress)
regress: _SUBDIRUSE
.endif
d85 1
a85 1
.include <bsd.own.mk>
@


1.11
log
@If there is no regress target provide one with _SUBDIRUSE.
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.10 1998/03/01 09:18:06 niklas Exp $
d113 1
d115 1
@


1.10
log
@Add Benedikt Stockebrand <benedikt@@devnull.ruhr.de>'s SKIPDIR handling
It actually has proven useful for developer work when in-transit changes
of tools breaks certain parts of the system.  We do not recommend it on a
regular basis though, as having customized setups make bug handling
more troublesome
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.9 1997/06/02 23:58:34 mickey Exp $
d107 4
@


1.9
log
@do MAKEFLAGS better
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.8 1997/06/02 23:38:07 mickey Exp $
d9 3
d29 18
a46 4
		echo "===> $${_nextdir_}"; \
		cd ${.CURDIR}/$${_newdir_}; \
		${MAKE} ${.MAKEFLAGS} $${_makefile_spec_} _THISDIR_="$${_nextdir_}" \
		    ${.TARGET:S/realinstall/install/:S/.depend/depend/}); \
@


1.8
log
@propagate MAKEFLAGS
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.6 1996/03/16 05:32:40 etheisen Exp $
d28 1
a28 1
		${MAKE} -${MAKEFLAGS} $${_makefile_spec_} _THISDIR_="$${_nextdir_}" \
d44 1
a44 1
	${MAKE} -${MAKEFLAGS} $${_makefile_spec_} _THISDIR_="$${_newdir_}" all
@


1.7
log
@sync with netbsd 960418
@
text
@d28 1
a28 1
		${MAKE} $${_makefile_spec_} _THISDIR_="$${_nextdir_}" \
d44 1
a44 1
	${MAKE} $${_makefile_spec_} _THISDIR_="$${_newdir_}" all
@


1.6
log
@Workaround for testing of Makefile.bsd-wrapper encountered while porting
libg++.
@
text
@d1 2
a2 2
#	$OpenBSD: bsd.subdir.mk,v 1.5 1996/03/05 11:13:01 mickey Exp $
#	$NetBSD: bsd.subdir.mk,v 1.10 1995/07/24 04:22:29 cgd Exp $
d70 4
@


1.5
log
@Labeling style changed ($OpenBSD$).
POSTINSTALL added to the <bsd.lkm.mk> (see bsd.README for details).
@
text
@d1 1
a1 1
#	$OpenBSD$
d23 1
a23 1
		if [ -e $${_newdir_}/Makefile.bsd-wrapper ]; then \
d39 1
a39 1
	if [ -f $${_newdir_}/Makefile.bsd-wrapper ]; then \
@


1.4
log
@Added <bsd.lkm.mk> file. Correspondent changes made to the bsd.README.
All the rest changed to be $OpenBSD$.
Dedicated to Suzi Quatro (she must be alive still, so best wishes to here).
@
text
@d1 2
a2 1
#	$OpenBSD: bsd.subdir.mk,v 1.10 1995/07/24 04:22:29 cgd Exp $
@


1.3
log
@check for Makefile.bsd-wrapper in the correct directory
@
text
@d1 1
a1 1
#	$NetBSD: bsd.subdir.mk,v 1.10 1995/07/24 04:22:29 cgd Exp $
@


1.2
log
@Added support for using a special makefile: Makefile.bsd-wrapper when
available.  This will help having imported software in the tree
without needing to munge the standard Makefile.
@
text
@d21 5
a25 4
                if [ -f $${_nextdir_}/Makefile.bsd-wrapper ]; then \
                        _makefile_spec_="-f Makefile.bsd-wrapper"; \
                fi; \
 		echo "===> $${_nextdir_}"; \
d37 4
a40 3
        if [ -f $${_newdir_}/Makefile.bsd-wrapper ]; then \
                _makefile_spec_="-f Makefile.bsd-wrapper"; \
        fi; \
@


1.1
log
@Initial revision
@
text
@d21 4
a24 1
		echo "===> $${_nextdir_}"; \
d26 1
a26 1
		${MAKE} _THISDIR_="$${_nextdir_}" \
d36 3
d41 1
a41 1
	${MAKE} _THISDIR_="$${_newdir_}" all
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

