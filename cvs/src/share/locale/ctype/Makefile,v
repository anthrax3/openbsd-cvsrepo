head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.6
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.12
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.18
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.20
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.16
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.14
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.12
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.10
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@# @;


1.12
date	2016.05.26.21.23.46;	author millert;	state Exp;
branches;
next	1.11;
commitid	nX1Edpl4yQLogOGl;

1.11
date	2016.03.20.15.45.40;	author jca;	state Exp;
branches;
next	1.10;
commitid	hW07m9n7h5XW9wma;

1.10
date	2013.07.01.00.36.12;	author fgsch;	state Exp;
branches;
next	1.9;

1.9
date	2013.07.01.00.35.22;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2013.06.03.14.14.27;	author stsp;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.01.20.02.53;	author stsp;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.16.21.33.30;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.03.22.15.55;	author pirofti;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.13.18.46.47;	author stsp;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.27.16.59.04;	author stsp;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.07.10.05.36;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.07.10.03.45;	author espie;	state Exp;
branches;
next	;


desc
@@


1.12
log
@mklocale(1) can handle C-style and shell-style comments natively,
no need for cpp here.  From natano@@
@
text
@# $OpenBSD: Makefile,v 1.11 2016/03/20 15:45:40 jca Exp $
# $NetBSD: Makefile,v 1.20 2005/02/10 18:03:02 tnozaki Exp $

NOMAN=	# defined

# pull LOCALEDIR and other declarations
.include <bsd.own.mk>

all: UTF-8.out

UTF-8.out: en_US.UTF-8.src
	mklocale -o ${.TARGET} ${.CURDIR}/en_US.UTF-8.src

CLEANFILES+=	UTF-8.out

install:
	install -o ${LOCALEOWN} -g ${LOCALEGRP} -m ${DIRMODE} -d \
	    ${DESTDIR}${LOCALEDIR}/UTF-8
	install -o ${LOCALEOWN} -g ${LOCALEGRP} -m ${LOCALEMODE} \
	    UTF-8.out ${DESTDIR}${LOCALEDIR}/UTF-8/LC_CTYPE

.include <bsd.prog.mk>
@


1.11
log
@Kill LOCALECHARSETS machinery, we only support ASCII and UTF-8 LC_CTYPE

Remove Makefile.inc and inline rules to produce LC_CTYPE for UTF-8.

ok guenther@@ stsp@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2013/07/01 00:36:12 fgsch Exp $
d12 1
a12 2
	${CPP} < ${.CURDIR}/en_US.UTF-8.src | \
	    sed -e '/^#/d' | mklocale -o ${.TARGET}
@


1.10
log
@missing id tag.
@
text
@d1 1
a1 1
# $OpenBSD$
d9 1
a9 2
# pull in LOCALECHARSETS
.include "${.CURDIR}/Makefile.inc"
d11 5
a15 25
LOCALESRC_ARMSCII-8 = hy_AM.ARMSCII-8
LOCALESRC_CP1251 = bg_BG.CP1251
LOCALESRC_CP866 = ru_RU.CP866
LOCALESRC_ISO8859-1 = en_US.ISO_8859-1
LOCALESRC_ISO8859-2 = en_US.ISO_8859-2
LOCALESRC_ISO8859-4 = en_US.ISO_8859-4
LOCALESRC_ISO8859-5 = ru_RU.ISO_8859-5
LOCALESRC_ISO8859-7 = el_GR.ISO8859-7
LOCALESRC_ISO8859-9 = tr_TR.ISO8859-9
LOCALESRC_ISO8859-13 = lt_LT.ISO8859-13
LOCALESRC_ISO8859-15 = en_US.DIS_8859-15
LOCALESRC_KOI8-R = ru_RU.KOI8-R
LOCALESRC_KOI8-U = uk_UA.KOI8-U
LOCALESRC_UTF-8 = en_US.UTF-8

all: ${LOCALECHARSETS:S/$/.out/g}
realall: ${LOCALECHARSETS:S/$/.out/g}

CLEANFILES+=	${LOCALECHARSETS:S/$/.out/g}

FILES=	${LOCALECHARSETS:S/$/.out/g}
.for locale in ${LOCALECHARSETS}
FILESDIR_${locale}.out=	${LOCALEDIR}/${locale}
FILESNAME_${locale}.out=	LC_CTYPE
.endfor
a17 1
.for locale in ${LOCALECHARSETS}
d19 1
a19 1
	    ${DESTDIR}${LOCALEDIR}/${locale}
d21 1
a21 14
	    ${locale}.out ${DESTDIR}${LOCALEDIR}/${locale}/LC_CTYPE
.endfor

.for locale in ${LOCALECHARSETS}
${locale}.out: ${LOCALESRC_${locale}}.src
	${CPP} -I${.CURDIR} < ${.CURDIR}/${LOCALESRC_${locale}}.src | \
	    sed -e '/^#/d' | mklocale -o ${.TARGET}
.endfor

.SUFFIXES: .src .out
.src.out:
	${CPP} -I${.CURDIR} < ${.IMPSRC} | sed -e '/^#/d' | \
            mklocale -o ${.TARGET}

@


1.9
log
@Add Turkish. From FreeBSD.
stsp@@ ok.
@
text
@d1 1
@


1.8
log
@Put list of character sets supported by LC_CTYPE into a separate
Makefile snippet so it can be included elsewhere in the tree.
ok bluhm espie
@
text
@d19 1
@


1.7
log
@Change the naming scheme used for directories in /usr/share/locale to
eliminate redundant copies of LC_CTYPE files.

Instead of names using "language_territory.codeset" permutations, use just
the codeset component to name directories storing LC_CTYPE files. Suggested
by bluhm@@ while discussing the idea of using symlinks in /usr/share/locale
like FreeBSD does.

Future locale features which store language and/or territory specific data
can name directories after language or territory names.
@
text
@d8 2
a9 2
LOCALES += UTF-8
 LOCALESRC_UTF-8 = en_US.UTF-8
d11 13
a23 2
LOCALES += CP1251
 LOCALESRC_CP1251 = bg_BG.CP1251
d25 2
a26 2
LOCALES += ISO8859-1
 LOCALESRC_ISO8859-1 = en_US.ISO_8859-1
d28 1
a28 2
LOCALES += ISO8859-15
 LOCALESRC_ISO8859-15 = en_US.DIS_8859-15
d30 2
a31 34
LOCALES += ISO8859-2
 LOCALESRC_ISO8859-2 = en_US.ISO_8859-2

LOCALES += ISO8859-7
 LOCALESRC_ISO8859-7 = el_GR.ISO8859-7

LOCALES += ARMSCII-8
 LOCALESRC_ARMSCII-8 = hy_AM.ARMSCII-8

LOCALES += ISO8859-4
 LOCALESRC_ISO8859-4 = en_US.ISO_8859-4

LOCALES += ISO8859-13
 LOCALESRC_ISO8859-13 = lt_LT.ISO8859-13

LOCALES += CP866
 LOCALESRC_CP866 = ru_RU.CP866

LOCALES += KOI8-R
 LOCALESRC_KOI8-R = ru_RU.KOI8-R

LOCALES += ISO8859-5
 LOCALESRC_ISO8859-5 = ru_RU.ISO_8859-5

LOCALES += KOI8-U
 LOCALESRC_KOI8-U = uk_UA.KOI8-U

all: ${LOCALES:S/$/.out/g}
realall: ${LOCALES:S/$/.out/g}

CLEANFILES+=	${LOCALES:S/$/.out/g}

FILES=	${LOCALES:S/$/.out/g}
.for locale in ${LOCALES}
d37 1
a37 1
.for locale in ${LOCALES}
d44 1
a44 1
.for locale in ${LOCALES}
@


1.6
log
@Add support for Farsi and Arabic (SY+SD).

ok stsp@@ deraadt@@
@
text
@d8 2
a9 2
LOCALES += ar_SD.UTF-8
 LOCALESRC_ar_SD.UTF-8 = en_US.UTF-8
d11 2
a12 2
LOCALES += ar_SY.UTF-8
 LOCALESRC_ar_SY.UTF-8 = en_US.UTF-8
d14 2
a15 2
LOCALES += bg_BG.CP1251
 LOCALESRC_bg_BG.CP1251 = bg_BG.CP1251
d17 2
a18 2
LOCALES += ca_ES.ISO8859-1
 LOCALESRC_ca_ES.ISO8859-1 = en_US.ISO_8859-1
d20 2
a21 2
LOCALES += ca_ES.ISO8859-15
 LOCALESRC_ca_ES.ISO8859-15 = en_US.DIS_8859-15
d23 2
a24 2
LOCALES += cs_CZ.ISO8859-2
 LOCALESRC_cs_CZ.ISO8859-2 = en_US.ISO_8859-2
d26 2
a27 2
LOCALES += da_DK.ISO8859-1
 LOCALESRC_da_DK.ISO8859-1 = en_US.ISO_8859-1
d29 2
a30 2
LOCALES += da_DK.ISO8859-15
 LOCALESRC_da_DK.ISO8859-15 = en_US.DIS_8859-15
d32 2
a33 2
LOCALES += de_AT.ISO8859-1
 LOCALESRC_de_AT.ISO8859-1 = en_US.ISO_8859-1
d35 2
a36 2
LOCALES += de_AT.ISO8859-15
 LOCALESRC_de_AT.ISO8859-15 = en_US.DIS_8859-15
d38 2
a39 2
LOCALES += de_CH.ISO8859-1
 LOCALESRC_de_CH.ISO8859-1 = en_US.ISO_8859-1
d41 2
a42 2
LOCALES += de_CH.ISO8859-15
 LOCALESRC_de_CH.ISO8859-15 = en_US.DIS_8859-15
d44 2
a45 243
LOCALES += de_DE.ISO8859-1
 LOCALESRC_de_DE.ISO8859-1 = en_US.ISO_8859-1

LOCALES += de_DE.ISO8859-15
 LOCALESRC_de_DE.ISO8859-15 = en_US.DIS_8859-15

LOCALES += de_DE.UTF-8
 LOCALESRC_de_DE.UTF-8 = en_US.UTF-8

LOCALES += el_GR.ISO8859-7
 LOCALESRC_el_GR.ISO8859-7 = el_GR.ISO8859-7

LOCALES += en_AU.ISO8859-1
 LOCALESRC_en_AU.ISO8859-1 = en_US.ISO_8859-1

LOCALES += en_AU.ISO8859-15
 LOCALESRC_en_AU.ISO8859-15 = en_US.DIS_8859-15

LOCALES += en_CA.ISO8859-1
 LOCALESRC_en_CA.ISO8859-1 = en_US.ISO_8859-1

LOCALES += en_CA.ISO8859-15
 LOCALESRC_en_CA.ISO8859-15 = en_US.DIS_8859-15

LOCALES += en_GB.ISO8859-1
 LOCALESRC_en_GB.ISO8859-1 = en_US.ISO_8859-1

LOCALES += en_GB.ISO8859-15
 LOCALESRC_en_GB.ISO8859-15 = en_US.DIS_8859-15

LOCALES += en_US.ISO8859-1
 LOCALESRC_en_US.ISO8859-1 = en_US.ISO_8859-1

LOCALES += en_US.ISO8859-15
 LOCALESRC_en_US.ISO8859-15 = en_US.DIS_8859-15

LOCALES += en_US.UTF-8
 LOCALESRC_en_US.UTF-8 = en_US.UTF-8

LOCALES += es_ES.ISO8859-1
 LOCALESRC_es_ES.ISO8859-1 = en_US.ISO_8859-1

LOCALES += es_ES.ISO8859-15
 LOCALESRC_es_ES.ISO8859-15 = en_US.DIS_8859-15

LOCALES += es_ES.UTF-8
 LOCALESRC_es_ES.UTF-8 = en_US.UTF-8

LOCALES += fa_IR.UTF-8
 LOCALESRC_fa_IR.UTF-8 = en_US.UTF-8

LOCALES += fi_FI.ISO8859-1
 LOCALESRC_fi_FI.ISO8859-1 = en_US.ISO_8859-1

LOCALES += fi_FI.ISO8859-15
 LOCALESRC_fi_FI.ISO8859-15 = en_US.DIS_8859-15

LOCALES += fr_BE.ISO8859-1
 LOCALESRC_fr_BE.ISO8859-1 = en_US.ISO_8859-1

LOCALES += fr_BE.ISO8859-15
 LOCALESRC_fr_BE.ISO8859-15 = en_US.DIS_8859-15

LOCALES += fr_BE.UTF-8
 LOCALESRC_fr_BE.UTF-8 = en_US.UTF-8

LOCALES += fr_CA.ISO8859-1
 LOCALESRC_fr_CA.ISO8859-1 = en_US.ISO_8859-1

LOCALES += fr_CA.ISO8859-15
 LOCALESRC_fr_CA.ISO8859-15 = en_US.DIS_8859-15

LOCALES += fr_CA.UTF-8
 LOCALESRC_fr_CA.UTF-8 = en_US.UTF-8

LOCALES += fr_CH.ISO8859-1
 LOCALESRC_fr_CH.ISO8859-1 = en_US.ISO_8859-1

LOCALES += fr_CH.ISO8859-15
 LOCALESRC_fr_CH.ISO8859-15 = en_US.DIS_8859-15

LOCALES += fr_CH.UTF-8
 LOCALESRC_fr_CH.UTF-8 = en_US.UTF-8

LOCALES += fr_FR.ISO8859-1
 LOCALESRC_fr_FR.ISO8859-1 = en_US.ISO_8859-1

LOCALES += fr_FR.ISO8859-15
 LOCALESRC_fr_FR.ISO8859-15 = en_US.DIS_8859-15

LOCALES += fr_FR.UTF-8
 LOCALESRC_fr_FR.UTF-8 = en_US.UTF-8

LOCALES += hr_HR.ISO8859-2
 LOCALESRC_hr_HR.ISO8859-2 = en_US.ISO_8859-2

LOCALES += hu_HU.ISO8859-2
 LOCALESRC_hu_HU.ISO8859-2 = en_US.ISO_8859-2

LOCALES += hu_HU.UTF-8
 LOCALESRC_hu_HU.UTF-8 = en_US.UTF-8

LOCALES += hy_AM.ARMSCII-8
 LOCALESRC_hy_AM.ARMSCII-8 = hy_AM.ARMSCII-8

LOCALES += is_IS.ISO8859-1
 LOCALESRC_is_IS.ISO8859-1 = en_US.ISO_8859-1

LOCALES += is_IS.ISO8859-15
 LOCALESRC_is_IS.ISO8859-15 = en_US.DIS_8859-15

LOCALES += it_CH.ISO8859-1
 LOCALESRC_it_CH.ISO8859-1 = en_US.ISO_8859-1

LOCALES += it_CH.ISO8859-15
 LOCALESRC_it_CH.ISO8859-15 = en_US.DIS_8859-15

LOCALES += it_CH.UTF-8
 LOCALESRC_it_CH.UTF-8 = en_US.UTF-8

LOCALES += it_IT.ISO8859-1
 LOCALESRC_it_IT.ISO8859-1 = en_US.ISO_8859-1

LOCALES += it_IT.ISO8859-15
 LOCALESRC_it_IT.ISO8859-15 = en_US.DIS_8859-15

LOCALES += it_IT.UTF-8
 LOCALESRC_it_IT.UTF-8 = en_US.UTF-8

#LOCALES += ja_JP.ct
# LOCALESRC_ja_JP.ct = ja_JP.CTEXT

#LOCALES += ja_JP.eucJP
# LOCALESRC_ja_JP.eucJP = ja_JP.eucJP

#LOCALES += ja_JP.ISO2022-JP
# LOCALESRC_ja_JP.ISO2022-JP = ja_JP.ISO-2022-JP

#LOCALES += ja_JP.ISO2022-JP2
# LOCALESRC_ja_JP.ISO2022-JP2 = ja_JP.ISO-2022-JP-2

#LOCALES += ja_JP.SJIS
# LOCALESRC_ja_JP.SJIS = ja_JP.SJIS

LOCALES += ja_JP.UTF-8
 LOCALESRC_ja_JP.UTF-8 = en_US.UTF-8

#LOCALES += ko_KR.eucKR
# LOCALESRC_ko_KR.eucKR = ko_KR.eucKR

LOCALES += ko_KR.UTF-8
 LOCALESRC_ko_KR.UTF-8 = en_US.UTF-8

LOCALES += lt_LT.ISO8859-4
 LOCALESRC_lt_LT.ISO8859-4 = en_US.ISO_8859-4

LOCALES += lt_LT.ISO8859-13
 LOCALESRC_lt_LT.ISO8859-13 = lt_LT.ISO8859-13

LOCALES += nl_BE.ISO8859-1
 LOCALESRC_nl_BE.ISO8859-1 = en_US.ISO_8859-1

LOCALES += nl_BE.ISO8859-15
 LOCALESRC_nl_BE.ISO8859-15 = en_US.DIS_8859-15

LOCALES += nl_NL.ISO8859-1
 LOCALESRC_nl_NL.ISO8859-1 = en_US.ISO_8859-1

LOCALES += nl_NL.ISO8859-15
 LOCALESRC_nl_NL.ISO8859-15 = en_US.DIS_8859-15

LOCALES += no_NO.ISO8859-1
 LOCALESRC_no_NO.ISO8859-1 = en_US.ISO_8859-1

LOCALES += no_NO.ISO8859-15
 LOCALESRC_no_NO.ISO8859-15 = en_US.DIS_8859-15

LOCALES += pl_PL.ISO8859-2
 LOCALESRC_pl_PL.ISO8859-2 = en_US.ISO_8859-2

LOCALES += pl_PL.UTF-8
 LOCALESRC_pl_PL.UTF-8 = en_US.UTF-8

LOCALES += pt_PT.ISO8859-1
 LOCALESRC_pt_PT.ISO8859-1 = en_US.ISO_8859-1

LOCALES += pt_PT.UTF-8
 LOCALESRC_pt_PT.UTF-8 = en_US.UTF-8

LOCALES += pt_PT.ISO8859-15
 LOCALESRC_pt_PT.ISO8859-15 = en_US.DIS_8859-15

LOCALES += ro_RO.UTF-8
 LOCALESRC_ro_RO.UTF-8 = en_US.UTF-8

LOCALES += ru_RU.CP866
 LOCALESRC_ru_RU.CP866 = ru_RU.CP866

LOCALES += ru_RU.KOI8-R
 LOCALESRC_ru_RU.KOI8-R = ru_RU.KOI8-R

LOCALES += ru_RU.ISO8859-5
 LOCALESRC_ru_RU.ISO8859-5 = ru_RU.ISO_8859-5

LOCALES += ru_RU.UTF-8
 LOCALESRC_ru_RU.UTF-8 = en_US.UTF-8

LOCALES += sk_SK.ISO8859-2
 LOCALESRC_sk_SK.ISO8859-2 = en_US.ISO_8859-2

LOCALES += sl_SI.ISO8859-2
 LOCALESRC_sl_SI.ISO8859-2 = en_US.ISO_8859-2

LOCALES += sv_SE.ISO8859-1
 LOCALESRC_sv_SE.ISO8859-1 = en_US.ISO_8859-1

LOCALES += sv_SE.ISO8859-15
 LOCALESRC_sv_SE.ISO8859-15 = en_US.DIS_8859-15

LOCALES += sv_SE.UTF-8
 LOCALESRC_sv_SE.UTF-8 = en_US.UTF-8

LOCALES += uk_UA.KOI8-U
 LOCALESRC_uk_UA.KOI8-U = uk_UA.KOI8-U

#LOCALES += zh_CN.eucCN
# LOCALESRC_zh_CN.eucCN = zh_CN.eucCN

#LOCALES += zh_CN.GB18030
# LOCALESRC_zh_CN.GB18030 = zh_CN.GB18030

LOCALES += zh_CN.UTF-8
 LOCALESRC_zh_CN.UTF-8 = en_US.UTF-8

#LOCALES += zh_TW.Big5
# LOCALESRC_zh_TW.Big5 = zh_TW.BIG5

# XXX: EUC-TW is not EUC!
#LOCALES += zh_TW.eucTW
# LOCALESRC_zh_TW.eucTW = zh_TW.eucTW

LOCALES += zh_TW.UTF-8
 LOCALESRC_zh_TW.UTF-8 = en_US.UTF-8
a49 3
.for locale in ${LOCALES}
LOCALESRCS+=	${LOCALESRC_${locale}}
.endfor
a51 1
# TODO: more use of symlinks?
@


1.5
log
@Add Romanian UTF-8 support.

Thanks to robert@@ for taking me through the hoops! Okay robert@@.
@
text
@d8 6
d91 3
@


1.4
log
@Enable a couple UTF-8 locales for non-English languages.
ok kevlo, deraadt, espie
@
text
@d227 3
@


1.3
log
@Replace the single-byte placeholders for the multi-byte/wide-character
conversion interfaces of libc (mbrtowc(3) and friends) with new
implementations that internally call an API based on NetBSD's citrus.
This allows us to support locales with multi-byte character encodings.

Provide two implementations of the citrus-based API: one based on the old
single-byte placeholders for use with our existing single-byte character
locales (C, ISO8859-*, KOI8, CP1251, etc.), and one that provides support
for UTF-8 encoded characters (code based on FreeBSD's implementation).

Install the en_US.UTF-8 ctype locale support file, and allow the UTF-8
ctype locale to be enabled via setlocale(3) (export LC_CTYPE='en_US.UTF-8').

A lot of programs, especially from ports, will now start using UTF-8 if the
UTF-8 locale is enabled. Use at your own risk, and please report any breakage.
Note that ncurses-based programs cannot display UTF-8 right now, this is being
worked on.

To prevent install media growth, add vfprintf(3) and mbrtowc(3) to libstubs.
The mbrtowc stub was copied unchanged from its old single-byte placeholder.
vfprintf.c doesn't need to be copied, just put in .PATH (hint by fgsch@@).

Testing by myself, naddy, sthen, nicm, espie, armani, Dmitrij D. Czarkoff.

ok matthieu espie millert sthen nicm deraadt
@
text
@d44 3
d83 3
d98 3
d107 3
d116 3
d125 3
d134 3
d152 3
d161 3
d179 3
d185 3
d215 3
d221 3
d236 3
d251 3
d263 3
d272 3
@


1.2
log
@grr. wrong Makefile.
do not bother building locale with encoding != none for now.
@
text
@d71 2
a72 2
#LOCALES += en_US.UTF-8
# LOCALESRC_en_US.UTF-8 = en_US.UTF-8
@


1.1
log
@Add LC_CTYPE locale sources, not yet linked in.
(from citrus).
okay deraadt@@
@
text
@d71 2
a72 2
LOCALES += en_US.UTF-8
 LOCALESRC_en_US.UTF-8 = en_US.UTF-8
d137 2
a138 2
LOCALES += ja_JP.ct
 LOCALESRC_ja_JP.ct = ja_JP.CTEXT
d140 2
a141 2
LOCALES += ja_JP.eucJP
 LOCALESRC_ja_JP.eucJP = ja_JP.eucJP
d143 2
a144 2
LOCALES += ja_JP.ISO2022-JP
 LOCALESRC_ja_JP.ISO2022-JP = ja_JP.ISO-2022-JP
d146 2
a147 2
LOCALES += ja_JP.ISO2022-JP2
 LOCALESRC_ja_JP.ISO2022-JP2 = ja_JP.ISO-2022-JP-2
d149 2
a150 2
LOCALES += ja_JP.SJIS
 LOCALESRC_ja_JP.SJIS = ja_JP.SJIS
d152 2
a153 2
LOCALES += ko_KR.eucKR
 LOCALESRC_ko_KR.eucKR = ko_KR.eucKR
d212 2
a213 2
LOCALES += zh_CN.eucCN
 LOCALESRC_zh_CN.eucCN = zh_CN.eucCN
d215 2
a216 2
LOCALES += zh_CN.GB18030
 LOCALESRC_zh_CN.GB18030 = zh_CN.GB18030
d218 2
a219 2
LOCALES += zh_TW.Big5
 LOCALESRC_zh_TW.Big5 = zh_TW.BIG5
d222 2
a223 2
LOCALES += zh_TW.eucTW
 LOCALESRC_zh_TW.eucTW = zh_TW.eucTW
@

