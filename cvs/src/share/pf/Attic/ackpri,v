head	1.4;
access;
symbols
	OPENBSD_4_2:1.3.0.4
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.2.0.16
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.14
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2008.01.31.22.43.34;	author henning;	state dead;
branches;
next	1.3;

1.3
date	2006.10.07.04.48.01;	author mcbride;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.10.14.24.33;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.02.12.19.58;	author dhartmei;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove obsolete /usr/share/pf, agreed by many
@
text
@# $OpenBSD: ackpri,v 1.3 2006/10/07 04:48:01 mcbride Exp $

# Use a simple priority queue to prioritize empty (no payload) TCP ACKs,
# which dramatically improves throughput on (asymmetric) links when the
# reverse direction is saturated. The empty ACKs use an insignificant
# part of the bandwidth, but if they get delayed, downloads suffer
# badly, so prioritize them.

# Example: 512/128 kbps ADSL. Download is 50 kB/s. When a concurrent
# upload saturates the uplink, download drops to 7 kB/s. With the
# priority queue below, download drops only to 48 kB/s.

# Replace lo0 with your real external interface

ext_if="lo0"

# For a 512/128 kbps ADSL with PPPoE link, using "bandwidth 100Kb"
# is optimal. Some experimentation might be needed to find the best
# value. If it's set too high, the priority queue is not effective, and
# if it's set too low, the available bandwidth is not fully used.
# A good starting point would be real_uplink_bandwidth * 90 / 100.

altq on $ext_if priq bandwidth 100Kb queue { q_pri, q_def }
queue q_pri priority 7
queue q_def priority 1 priq(default)

pass out on $ext_if proto tcp from $ext_if to any queue (q_def, q_pri)

pass in  on $ext_if proto tcp from any to $ext_if queue (q_def, q_pri)

@


1.3
log
@remove 'flags S/SA' and 'keep state'

ok nick@@
@
text
@d1 1
a1 1
# $OpenBSD: ackpri,v 1.2 2003/03/10 14:24:33 henning Exp $
@


1.2
log
@english(4) police, Officer Jolan Luff
@
text
@d1 1
a1 1
# $OpenBSD: ackpri,v 1.1 2003/03/02 12:19:58 dhartmei Exp $
d27 1
a27 2
pass out on $ext_if proto tcp from $ext_if to any flags S/SA \
	keep state queue (q_def, q_pri)
d29 1
a29 2
pass in  on $ext_if proto tcp from any to $ext_if flags S/SA \
	keep state queue (q_def, q_pri)
@


1.1
log
@Add example ruleset which priorizes empty TCP ACKs, with some comments.
@
text
@d1 1
a1 1
# $OpenBSD$
d3 1
a3 1
# Use a simple priority queue to priorize empty (no payload) TCP ACKs,
d7 1
a7 1
# badly, so priorize them.
@

