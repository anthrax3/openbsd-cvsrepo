head	1.16;
access;
symbols
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.14.0.12
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.8
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.4
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3;
locks; strict;
comment	@.\" @;


1.16
date	2017.06.28.00.59.30;	author schwarze;	state Exp;
branches;
next	1.15;
commitid	VqkxfcOEff5EXotY;

1.15
date	2017.06.08.18.11.15;	author schwarze;	state Exp;
branches;
next	1.14;
commitid	iJqHiCg2x8ufqICJ;

1.14
date	2015.01.29.00.33.14;	author schwarze;	state Exp;
branches;
next	1.13;
commitid	9zTrpiF37UnMIPmt;

1.13
date	2015.01.28.04.18.31;	author schwarze;	state Exp;
branches;
next	1.12;
commitid	ocR6zTNiM1va6QkO;

1.12
date	2015.01.26.18.41.45;	author schwarze;	state Exp;
branches;
next	1.11;
commitid	mmVgjPEivVGaZY4u;

1.11
date	2015.01.26.13.02.53;	author schwarze;	state Exp;
branches;
next	1.10;
commitid	TckXsclN2hfFrBFF;

1.10
date	2015.01.20.19.23.32;	author jmc;	state Exp;
branches;
next	1.9;
commitid	zKEcv46ySAZi0AAt;

1.9
date	2015.01.20.18.54.33;	author tedu;	state Exp;
branches;
next	1.8;
commitid	s3Le5lNxQdP1lfC1;

1.8
date	2014.11.25.06.39.20;	author bentley;	state Exp;
branches;
next	1.7;
commitid	CNNKMNAx6VpnMTwU;

1.7
date	2014.10.14.02.16.02;	author schwarze;	state Exp;
branches;
next	1.6;
commitid	CvxMGBcRTJn11Q3v;

1.6
date	2014.10.13.23.31.26;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	8tCCJ2tENQLjxSIK;

1.5
date	2013.07.13.19.27.47;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.18.10.38.57;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2011.02.07.00.02.50;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.22.19.38.51;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.09.15.24.57;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Rewrite half of this, i was completely unaware how bad it was.
Remove several lies, lots of duplicate information,
and a lengthy discussion of features we don't support.
Clarify the wording in some places and make it more concise in others.
Delete examples from where they don't belong
and write a new EXAMPLES section from scratch.
@
text
@.\"	$OpenBSD: tbl.7,v 1.15 2017/06/08 18:11:15 schwarze Exp $
.\"
.\" Copyright (c) 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
.\" Copyright (c) 2014, 2015, 2017 Ingo Schwarze <schwarze@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: June 8 2017 $
.Dt TBL 7
.Os
.Sh NAME
.Nm tbl
.Nd tbl language reference for mandoc
.Sh DESCRIPTION
The
.Nm tbl
language formats tables.
It is used within
.Xr mdoc 7
and
.Xr man 7
pages.
This manual describes the subset of the
.Nm
language accepted by the
.Xr mandoc 1
utility.
.Pp
Each table is started with a
.Xr roff 7
.Ic \&TS
macro, consist of at most one line of
.Sx Options ,
one or more
.Sx Layout
lines, one or more
.Sx Data
lines, and ends with a
.Ic \&TE
macro.
All input must be 7-bit ASCII.
.Ss Options
If the first input line of a table ends with a semicolon, it contains
case-insensitive options separated by spaces, tabs, or commas.
Otherwise, it is interpreted as the first
.Sx Layout
line.
.Pp
The following options are available.
Some of them require arguments enclosed in parentheses:
.Bl -tag -width Ds
.It Cm allbox
Draw a single-line box around each table cell.
.It Cm box
Draw a single-line box around the table.
For GNU compatibility, this may also be invoked with
.Cm frame .
.It Cm center
Center the table instead of left-adjusting it.
For GNU compatibility, this may also be invoked with
.Cm centre .
.It Cm decimalpoint
Use the single-character argument as the decimal point with the
.Cm n
layout key.
This is a GNU extension.
.It Cm delim
Use the two characters of the argument as
.Xr eqn 7
delimiters.
Currently unsupported.
.It Cm doublebox
Draw a double-line box around the table.
For GNU compatibility, this may also be invoked with
.Cm doubleframe .
.It Cm expand
Increase the width of the table to the current line length.
Currently ignored.
.It Cm linesize
Draw lines with the point size given by the unsigned integer argument.
Currently ignored.
.It Cm nokeep
Allow page breaks within the table.
This is a GNU extension and currently ignored.
.It Cm nospaces
Ignore leading and trailing spaces in data cells.
This is a GNU extension and currently ignored.
.It Cm nowarn
Suppress warnings about tables exceeding the current line length.
This is a GNU extension and currently ignored.
.It Cm tab
Use the single-character argument as a delimiter between data cells.
By default, the horizontal tabulator character is used.
.El
.Ss Layout
The table layout follows an
.Sx Options
line or a
.Xr roff 7
.Ic \&TS
or
.Ic \&T&
macro.
Each layout line specifies how one line of
.Sx Data
is formatted.
The last layout line ends with a full stop.
It also applies to all remaining data lines.
Multiple layout lines can be joined by commas on a single physical
input line.
.Pp
Each layout line consists of one or more layout cell specifications,
optionally separated by whitespace.
The following case-insensitive key characters start a new cell
specification:
.Bl -tag -width 2n
.It Cm c
Center the string in this cell.
.It Cm r
Right-justify the string in this cell.
.It Cm l
Left-justify the string in this cell.
.It Cm n
Justify a number around its last decimal point.
If no decimal point is found in the number,
it is assumed to trail the number.
.It Cm s
Horizontally span columns from the last
.Pf non- Cm s
layout cell.
It is an error if a column span follows a
.Cm _
or
.Cm =
cell, or comes first on a layout line.
The combined cell as a whole consumes only one cell
of the corresponding data line.
.It Cm a
Left-justify a string and pad with one space.
.It Cm ^
Vertically span rows from the last
.Pf non- Cm ^
layout cell.
It is an error to invoke a vertical span on the first layout line.
Unlike a horizontal span, a vertical span consumes a data cell
and discards the content.
.It Cm _
Draw a single horizontal line in this cell.
This consumes a data cell and discards the content.
It may also be invoked with
.Cm \- .
.It Cm =
Draw a double horizontal line in this cell.
This consumes a data cell and discards the content.
.El
.Pp
Each cell key may be followed by zero or more of the following
case-insensitive modifiers:
.Bl -tag -width 2n
.It Cm b
Use a bold font for the contents of this cell.
.It Cm d
Move content down to the last row of this vertical span.
Currently ignored.
.It Cm e
Make this column wider to match the maximum width
of any other column also having the
.Cm e
modifier.
.It Cm f
The next character selects the font to use for this cell.
See the
.Xr roff 7
manual for supported one-character font names.
.It Cm i
Use an italic font for the contents of this cell.
.It Cm m
Specify a cell start macro.
This is a GNU extension and currently unsupported.
.It Cm p
Set the point size to the following unsigned argument,
or change it by the following signed argument.
Currently ignored.
.It Cm v
Set the vertical line spacing to the following unsigned argument,
or change it by the following signed argument.
Currently ignored.
.It Cm t
Do not vertically center content in this vertical span,
leave it in the top row.
Currently ignored.
.It Cm u
Move cell content up by half a table row.
Currently ignored.
.It Cm w
Specify a minimum column width.
.It Cm x
After determining the width of all other columns, distribute the
rest of the line length among all columns having the
.Cm x
modifier.
.It Cm z
Do not use this cell for determining the width of this column.
.It Cm \&|
Draw a single vertical line to the right of this cell.
.It Cm ||
Draw a double vertical line to the right of this cell.
.El
.Pp
If a modifier consists of decimal digits,
it specifies a minimum spacing in units of
.Cm n
between this column and the next column to the right.
The default is 3.
If there is a vertical line, it is drawn inside the spacing.
.Ss Data
The data section follows the last
.Sx Layout
line.
Each data line consists of one or more data cells, delimited by
.Cm tab
characters.
.Pp
If a data cells contains only the single character
.Ql _
or
.Ql = ,
a single or double horizontal line is drawn across the cell,
joining its neighbours.
If a data cells contains only the two character sequence
.Ql \e_
or
.Ql \e= ,
a single or double horizontal line is drawn inside the cell,
not joining its neighbours.
If a data line contains nothing but the single character
.Ql _
or
.Ql = ,
a horizontal line across the whole table is inserted
without consuming a layout row.
.Pp
In place of any data cell, a text block can be used.
It starts with
.Ic \&T{
at the end of a physical input line.
Input line breaks inside the text block
neither end the text block nor its data cell.
It only ends if
.Ic \&T}
occurs at the beginning of a physical input line and is followed
by an end-of-cell indicator.
If the
.Ic \&T}
is followed by the end of the physical input line, the text block,
the data cell, and the data line ends at this point.
If the
.Ic \&T}
is followed by the
.Cm tab
character, only the text block and the data cell end,
but the data line continues with the data cell following the
.Cm tab
character.
If
.Ic \&T}
is followed by any other character, it does not end the text block,
which instead continues to the following physical input line.
.Sh EXAMPLES
String justification and font selection:
.Bd -literal -offset indent
\&.TS
rb c  lb
r  ci l.
r	center	l
ri	ce	le
right	c	left
\&.TE
.Ed
.Bd -filled -offset indent
.TS
rb c  lb
r  ci l.
r	center	l
ri	ce	le
right	c	left
.TE
.Ed
.Pp
Some ports in
.Ox 6.1
to show number alignment and line drawing:
.Bd -literal -offset indent
\&.TS
box tab(:);
r| l
r  n.
software:version
_
AFL:2.39b
Mutt:1.8.0
Ruby:1.8.7.374
TeX Live:2015
\&.TE
.Ed
.Bd -filled -offset indent
.TS
box tab(:);
r| l
r  n.
software:version
_
AFL:2.39b
Mutt:1.8.0
Ruby:1.8.7.374
TeX Live:2015 
.TE
.Ed
.sp 2v
Spans and skipping width calculations:
.Bd -literal -offset indent
\&.TS
box tab(:);
lz  s | rt
lt| cb| ^
^ | rz  s.
left:r
l:center:
:right
\&.TE
.Ed
.Bd -filled -offset indent
.TS
box tab(:);
lz  s | rt
lt| cb| ^
^ | rz  s.
left:r
l:center:
:right
.TE
.Ed
.sp 2v
Text blocks, specifying spacings and specifying and equalizing
column widths, putting lines into individual cells, and overriding
.Cm allbox :
.Bd -literal -offset indent
\&.TS
allbox tab(:);
le le||7 lw10.
The fourth line:_:line 1
of this column:=:line 2
determines:\_:line 3
the column width.:T{
This text is too wide to fit into a column of width 17.
T}:line 4
T{
No break here.
T}::line 5
\&.TE
.Ed
.Bd -filled -offset indent
.TS
allbox tab(:);
le le||7 lw10.
The fourth line:_:line 1
of this column:=:line 2
determines:\_:line 3
the column width.:T{
This text is too wide to fit into a column of width 17.
T}:line 4
T{
No break here.
T}::line 5
.TE
.Ed
.sp 2v
These examples were constructed to demonstrate many
.Nm
features in a compact way.
In real manual pages, keep tables as simple as possible:
Like that, they usually look better, are less fragile, and more portable.
.Sh COMPATIBILITY
The
.Xr mandoc 1
implementation of
.Nm
doesn't support
.Xr mdoc 7
and
.Xr man 7
macros and
.Xr eqn 7
equations inside tables.
.Sh SEE ALSO
.Xr mandoc 1 ,
.Xr man 7 ,
.Xr mandoc_char 7 ,
.Xr mdoc 7 ,
.Xr roff 7
.Rs
.%A M. E. Lesk
.%T Tbl\(emA Program to Format Tables
.%D June 11, 1976
.Re
.Sh HISTORY
The tbl utility, a preprocessor for troff, was originally written by M.
E. Lesk at Bell Labs in 1975.
The GNU reimplementation of tbl, part of the groff package, was released
in 1990 by James Clark.
A standalone tbl implementation was written by Kristaps Dzonsons in
2010.
This formed the basis of the implementation that is part of the
.Xr mandoc 1
utility.
.Sh AUTHORS
This
.Nm
reference was written by
.An Kristaps Dzonsons Aq Mt kristaps@@bsd.lv
and
.An Ingo Schwarze Aq Mt schwarze@@openbsd.org .
@


1.15
log
@Implement w layout specifier (minimum column width).
Improve width calculation of text blocks.
Reduces the groff/mandoc diff in Base+Xenocara by about 800 lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.14 2015/01/29 00:33:14 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 29 2015 $
d27 1
a27 1
language is a table-formatting language.
d32 1
a32 2
.Ux
manual pages.
d39 1
a39 38
Tables within
.Xr mdoc 7
or
.Xr man 7
are enclosed by the
.Sq TS
and
.Sq TE
macro tags, whose precise syntax is documented in
.Xr roff 7 .
Tables consist of a series of options on a single line, followed by the
table layout, followed by data.
.Pp
For example, the following creates a boxed table with digits centered in
the cells.
.Bd -literal -offset indent
\&.TS
tab(:) box;
c5 c5 c5.
1:2:3
4:5:6
\&.TE
.Ed
.Pp
When formatted, the following output is produced:
.Bd -filled -offset indent -compact
.TS
tab(:) box;
c5 c5 c5.
1:2:3
4:5:6
.TE
.Ed
.Sh TABLE STRUCTURE
Tables are enclosed by the
.Sq TS
and
.Sq TE
d41 4
a44 4
macros.
A table consists of an optional single line of table
.Sx Options
terminated by a semicolon, followed by one or more lines of
d46 5
a50 2
specifications terminated by a period, then
.Sx Data .
a51 48
Example:
.Bd -literal -offset indent
\&.TS
box tab(:);
c | c
| c | c.
1:2
3:4
\&.TE
.Ed
.Pp
Table data is
.Em pre-processed ,
that is, data rows are parsed then inserted into the underlying stream
of input data.
This allows data rows to be interspersed by arbitrary
.Xr roff 7 ,
.Xr mdoc 7 ,
and
.Xr man 7
macros such as
.Bd -literal -offset indent
\&.TS
tab(:);
c c c.
1:2:3
\&.Ao
3:2:1
\&.Ac
\&.TE
.Ed
.Pp
in the case of
.Xr mdoc 7
or
.Bd -literal -offset indent
\&.TS
tab(:);
c c c.
\&.ds ab 2
1:\e*(ab:3
\&.I
3:2:1
\&.TE
.Ed
.Pp
in the case of
.Xr man 7 .
d53 3
a55 4
The first line of a table may contain options separated by spaces, tabs,
or commas and terminated by a semicolon.
If the first line does not have a terminating semicolon, it is assumed
that no options are specified and instead a
d57 4
a60 3
is processed.
Some options require arguments enclosed by parentheses.
The following case-insensitive options are available:
a63 2
Currently treated as a synonym for
.Cm box .
d103 1
a103 1
By default, the tab character is used.
d106 1
a106 1
The table layout follows
d108 18
a125 8
or a
.Sq \&T&
macro invocation.
Layout specifies how data rows are displayed on output.
Each layout line corresponds to a line of data; the last layout line
applies to all remaining data lines.
Layout lines may also be separated by a comma.
Each layout cell consists of one of the following case-insensitive keys:
d128 1
a128 1
Center a literal string within its column.
d130 1
a130 1
Right-justify a literal string within its column.
d132 1
a132 1
Left-justify a literal string within its column.
d135 2
a136 2
If the decimal point is not found on the number, it's assumed to trail
the number.
d139 4
a142 4
.No non- Ns Cm s
data cell.
It is an error if spanning columns follow a
.Cm \-
d144 4
a147 4
.Cm \(ba
cell, or come first.
This option is not supported by
.Xr mandoc 1 .
d149 1
a149 1
Left-justify a literal string and pad with one space.
d152 10
a161 10
.No non- Ns Cm ^
data cell.
It is an error to invoke a vertical span on the first layout row.
Unlike a horizontal spanner, you must specify an empty cell (if it not
empty, the data is discarded) in the corresponding data cell.
.It Cm \-
Replace the data cell (its contents will be lost) with a single
horizontal line.
This may also be invoked with
.Cm _ .
d163 2
a164 6
Replace the data cell (its contents will be lost) with a double
horizontal line.
.It Cm \(ba
Emit a vertical bar instead of data.
.It Cm \(ba\(ba
Emit a double-vertical bar instead of data.
d167 2
a168 4
Keys may be followed by a set of modifiers.
A modifier is either a modifier key or a natural number for specifying
the spacing to the right of the column.
The following case-insensitive modifier keys are available:
d171 1
a171 1
Use a bold font for the contents of this column.
d173 1
a173 1
Move cell content down to the last cell of a vertical span.
d181 1
a181 1
The next character selects the font to use for this column.
d186 1
a186 1
Use an italic font for the contents of this column.
d199 2
a200 2
Do not vertically center cell content in the vertical span,
leave it at the top.
d203 1
a203 1
Move cell content up by half a table line.
d206 1
a206 1
Specify the minimum column width.
d214 4
d220 6
a225 6
For example, the following layout specifies a center-justified column of
minimum width 10, followed by vertical bar, followed by a left-justified
column of minimum width 10, another vertical bar, then a column using
bold font justified about the decimal point in numbers:
.Pp
.Dl cw10 | lw10 | nfB
d227 4
a230 3
The data section follows the last layout row.
By default, cells in a data section are delimited by a tab.
This behaviour may be changed with the
d232 16
a247 3
option.
If
.Cm _
d249 26
a274 3
.Cm =
is specified, a single or double line, respectively, is drawn across the
data field.
d276 117
a392 13
.Cm \e-
or
.Cm \e=
is specified, a line is drawn within the data field (i.e. terminating
within the cell and not draw to the border).
If the last cell of a line is
.Cm T{ ,
all subsequent lines are included as part of the cell until
.Cm T}
is specified as its own data cell.
It may then be followed by a tab
.Pq or as designated by Cm tab
or an end-of-line to terminate the row.
d430 3
a432 1
.An Kristaps Dzonsons Aq Mt kristaps@@bsd.lv .
@


1.14
log
@Radical cleanup of COMPATIBILITY sections:
Remove lots of lies, dozens of irrelevant implementation details,
and all references to groff versions older than 1.17.  Move relevant
information to the pages where it belongs, and out of mandoc(1) in
particular.  Add some missing general remarks to roff(7), where it
fits the character and purpose of the page much better.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.13 2015/01/28 04:18:31 schwarze Exp $
d4 1
a4 1
.\" Copyright (c) 2014, 2015 Ingo Schwarze <schwarze@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: January 28 2015 $
d248 1
a248 1
the minimum width of a column.
d287 1
a287 2
Specify minimum column width.
Currently ignored.
d302 1
a302 1
.Dl c10 | l10 | nfB
@


1.13
log
@implement the tbl(7) "center" layout option
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.12 2015/01/26 18:41:45 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 26 2015 $
a330 8
This section documents compatibility between mandoc and other
.Nm
implementations, at this time limited to GNU tbl.
.Pp
.Bl -dash -compact
.It
In GNU tbl, comments and macros are disallowed prior to the data block
of a table.
d333 9
a341 2
implementation allows them.
.El
@


1.12
log
@Rework tbl(7) layout parsing:
* Continue parsing even if part of the input is invalid.
* Do not require whitespace between cell specifications.
* Allow tabs as well as blanks between modifiers.
* Mark the 'm' modifier as unsupported.
* Parse and ignore the 'p' and 'v' modifiers.
* Better warning and error messages.
* Get rid of a static buffer.
Improved functionality but minus 50 lines of code.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.11 2015/01/26 13:02:53 schwarze Exp $
a154 1
Currently ignored.
@


1.11
log
@More improvements regarding tbl(7) options.
* Treat "allbox" as an alias for "box" for now.
* Parse and ignore the GNU tbl "nowarn" option.
* For separation, allow spaces, tabs, and commas only.
* Mark eqn(7) within tbl(7) as unsupported.
* Simplify the option table.
* Improve and sort documentation.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.10 2015/01/20 19:23:32 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: January 20 2015 $
d254 3
d269 21
a297 9
.Pp
The modifiers
.Cm d ,
.Cm t ,
.Cm u ,
and
.Cm w
are ignored by
.Xr mandoc 1 .
@


1.10
log
@one more "center"; tedu forgot to use -i, i think...
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.9 2015/01/20 18:54:33 tedu Exp $
d4 1
a4 1
.\" Copyright (c) 2014 Ingo Schwarze <schwarze@@openbsd.org>
d136 2
a137 3
The first line of a table consists of space-separated option keys and
modifiers terminated by a semicolon.
For GNU compatibility, option keys can also be separated by commas.
d142 1
a142 1
Some options accept arguments enclosed by parenthesis.
d145 8
d154 3
a156 3
This option is not supported by
.Xr mandoc 1 .
This may also be invoked with
d158 5
d164 4
a167 10
Accepts a two-character argument.
This option is not supported by
.Xr mandoc 1 .
.It Cm expand
This option is not supported by
.Xr mandoc 1 .
.It Cm box
Draw a single-line box around the table.
This may also be invoked with
.Cm frame .
d170 1
a170 1
This may also be invoked with
d172 3
a174 7
.It Cm allbox
This option is not supported by
.Xr mandoc 1 .
.It Cm tab
Accepts a single-character argument.
This character is used as a delimiter between data cells, which otherwise
defaults to the tab character.
d176 2
a177 3
Accepts a natural number (all digits).
This option is not supported by
.Xr mandoc 1 .
d179 2
a180 7
This option is not supported by
.Xr mandoc 1 .
.It Cm decimalpoint
Accepts a single-character argument.
This character will be used as the decimal point with the
.Cm n
layout key.
d182 8
a189 2
This option is not supported by
.Xr mandoc 1 .
@


1.9
log
@change spelling of centre to center. consistent with other man pages,
the name of the macro being described, and look(1).
ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.8 2014/11/25 06:39:20 bentley Exp $
d18 1
a18 1
.Dd $Mdocdate: November 25 2014 $
d202 1
a202 1
Centre a literal string within its column.
@


1.8
log
@Allow comma-separated options in tbl(7) tables.

Provides better groff compatibility.

ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.7 2014/10/14 02:16:02 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: October 14 2014 $
d53 1
a53 1
For example, the following creates a boxed table with digits centred in
d282 1
a282 1
For example, the following layout specifies a centre-justified column of
@


1.7
log
@Rudimentary implementation of the e, x, and z table layout modifiers
to equalize, maximize, and ignore the width of columns.
Does not yet take vertical rulers into account,
and does not do line breaks within table cells.
Considerably improves the lftp(1) manual; issue noticed by sthen@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.6 2014/10/13 23:31:26 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: October 13 2014 $
d138 1
@


1.6
log
@implement font modifiers in table layouts
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.5 2013/07/13 19:27:47 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 13 2013 $
d251 5
d263 7
a273 2
.Cm e ,
.Cm r ,
d277 1
a277 1
.Cm z
@


1.5
log
@For citing the names and email addresses of authors,
consistently use the style ".An name Aq Mt email".

Triggered by a question from Jan Stary <hans at stare dot cz>,
ok jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.4 2011/09/18 10:38:57 schwarze Exp $
d4 1
d18 1
a18 1
.Dd $Mdocdate: September 18 2011 $
d199 1
a199 1
.Bl -tag -width Ds
d248 14
a261 2
.Cm z ,
.Cm u ,
d263 1
d265 1
a265 4
.Cm d ,
.Cm b ,
.Cm i ,
.Cm r ,
d267 2
a268 12
.Cm f
.Po
followed by
.Cm b ,
.Cm i ,
.Cm r ,
.Cm 3 ,
.Cm 2 ,
or
.Cm 1
.Pc .
All of these are ignored by
d273 2
a274 2
column of minimum width 10, another vertical bar, then a column
justified about the decimal point in numbers:
d276 1
a276 1
.Dl c10 | l10 | n
@


1.4
log
@sync to mandoc 1.11.5:
document eqn(7) and many other improvements
from kristaps@@

no objection from deraadt@@ against adding an eqn.7 page
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.3 2011/02/07 00:02:50 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: February 7 2011 $
d340 1
a340 2
.An Kristaps Dzonsons ,
.Mt kristaps@@bsd.lv .
@


1.3
log
@Between groff-1.15 and groff-1.20.1, the .Ns macro was changed to no
longer suppress spacing when used at the beginning of an input line,
and mandoc now follows the same behaviour as new groff.
Thus, sweep the tree and remove useless .Ns.
Most places found by jmc@@; ok jmc@@ kristaps@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.2 2011/01/22 19:38:51 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 22 2011 $
d52 1
a52 1
For example, the following creates a boxed table with digits centered in
a251 1
.Cm f ,
d254 5
d260 7
a266 2
and
.Cm i .
d337 1
a337 1
This partial
d340 2
a341 1
.An Kristaps Dzonsons Aq kristaps@@bsd.lv .
@


1.2
log
@sync to bsd.lv: document spans, and decimalpoint() is implemented
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.1 2011/01/09 15:24:57 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 9 2011 $
d210 2
a211 2
Horizontally span columns from the last non-
.Ns Cm s
d223 2
a224 2
Vertically span rows from the last non-
.Ns Cm ^
@


1.1
log
@Add and install tbl(7);
written by kristaps@@, looked over by jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tbl.7,v 1.7 2011/01/08 17:30:03 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: January 8 2011 $
a182 2
This option is not supported by
.Xr mandoc 1 .
d210 8
d223 6
a228 2
This option is not supported by
.Xr mandoc 1 .
@

