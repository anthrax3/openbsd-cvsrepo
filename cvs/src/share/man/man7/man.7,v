head	1.44;
access;
symbols
	OPENBSD_6_1:1.44.0.12
	OPENBSD_6_1_BASE:1.44
	OPENBSD_6_0:1.44.0.8
	OPENBSD_6_0_BASE:1.44
	OPENBSD_5_9:1.44.0.4
	OPENBSD_5_9_BASE:1.44
	OPENBSD_5_8:1.44.0.6
	OPENBSD_5_8_BASE:1.44
	OPENBSD_5_7:1.44.0.2
	OPENBSD_5_7_BASE:1.44
	OPENBSD_5_6:1.39.0.4
	OPENBSD_5_6_BASE:1.39
	OPENBSD_5_5:1.37.0.4
	OPENBSD_5_5_BASE:1.37
	OPENBSD_5_4:1.31.0.2
	OPENBSD_5_4_BASE:1.31
	OPENBSD_5_3:1.30.0.2
	OPENBSD_5_3_BASE:1.30
	OPENBSD_5_2:1.29.0.2
	OPENBSD_5_2_BASE:1.29
	OPENBSD_5_1_BASE:1.26
	OPENBSD_5_1:1.26.0.2
	OPENBSD_5_0:1.19.0.2
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6;
locks; strict;
comment	@.\" @;


1.44
date	2015.01.29.00.33.14;	author schwarze;	state Exp;
branches;
next	1.43;
commitid	9zTrpiF37UnMIPmt;

1.43
date	2015.01.24.02.41.32;	author schwarze;	state Exp;
branches;
next	1.42;
commitid	TIJT04XdY4be3Or5;

1.42
date	2015.01.24.02.14.33;	author schwarze;	state Exp;
branches;
next	1.41;
commitid	pM91TaJXPGpL9tbi;

1.41
date	2015.01.24.01.59.40;	author schwarze;	state Exp;
branches;
next	1.40;
commitid	pxeX1HXdNjYPBYKE;

1.40
date	2014.12.28.15.22.42;	author schwarze;	state Exp;
branches;
next	1.39;
commitid	ItxGB8SZL5ArBhAm;

1.39
date	2014.06.22.16.39.07;	author schwarze;	state Exp;
branches;
next	1.38;
commitid	dG4ekKBRDlLSFj43;

1.38
date	2014.03.30.23.57.43;	author dlg;	state Exp;
branches;
next	1.37;

1.37
date	2014.02.16.14.26.51;	author schwarze;	state Exp;
branches;
next	1.36;

1.36
date	2014.02.14.17.27.58;	author schwarze;	state Exp;
branches;
next	1.35;

1.35
date	2014.01.06.00.53.14;	author schwarze;	state Exp;
branches;
next	1.34;

1.34
date	2013.12.31.15.15.47;	author schwarze;	state Exp;
branches;
next	1.33;

1.33
date	2013.12.31.15.13.25;	author schwarze;	state Exp;
branches;
next	1.32;

1.32
date	2013.08.14.08.39.29;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2013.07.13.19.44.14;	author schwarze;	state Exp;
branches;
next	1.30;

1.30
date	2012.07.29.13.35.41;	author schwarze;	state Exp;
branches;
next	1.29;

1.29
date	2012.06.20.21.37.32;	author schwarze;	state Exp;
branches;
next	1.28;

1.28
date	2012.06.02.20.07.09;	author schwarze;	state Exp;
branches;
next	1.27;

1.27
date	2012.02.26.19.41.27;	author schwarze;	state Exp;
branches;
next	1.26;

1.26
date	2011.12.02.01.45.43;	author schwarze;	state Exp;
branches;
next	1.25;

1.25
date	2011.09.26.23.07.20;	author schwarze;	state Exp;
branches;
next	1.24;

1.24
date	2011.09.26.21.30.03;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2011.09.20.22.46.45;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2011.09.18.10.38.57;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2011.08.30.12.25.09;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2011.08.30.11.38.59;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2011.07.15.10.14.17;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2011.06.07.23.40.10;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2011.03.07.01.35.33;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2011.01.25.00.37.39;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2011.01.24.23.13.56;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2011.01.16.02.56.47;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2011.01.09.15.24.57;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2011.01.09.12.49.22;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2010.12.19.08.07.38;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2010.09.26.19.40.27;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2010.09.04.08.00.15;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2010.08.31.17.51.31;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2010.08.22.11.39.18;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2010.08.01.20.47.52;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.31.21.51.33;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.26.20.49.12;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.19.23.06.29;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.19.22.34.29;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.19.21.29.36;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.44
log
@Radical cleanup of COMPATIBILITY sections:
Remove lots of lies, dozens of irrelevant implementation details,
and all references to groff versions older than 1.17.  Move relevant
information to the pages where it belongs, and out of mandoc(1) in
particular.  Add some missing general remarks to roff(7), where it
fits the character and purpose of the page much better.
@
text
@.\"	$OpenBSD: man.7,v 1.43 2015/01/24 02:41:32 schwarze Exp $
.\"
.\" Copyright (c) 2009, 2010, 2011, 2012 Kristaps Dzonsons <kristaps@@bsd.lv>
.\" Copyright (c) 2011-2015 Ingo Schwarze <schwarze@@openbsd.org>
.\" Copyright (c) 2010 Joerg Sonnenberger <joerg@@netbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 24 2015 $
.Dt MAN 7
.Os
.Sh NAME
.Nm man
.Nd legacy formatting language for manual pages
.Sh DESCRIPTION
Traditionally, the
.Nm man
language has been used to write
.Ux
manuals for the
.Xr man 1
utility.
It supports limited control of presentational details like fonts,
indentation and spacing.
This reference document describes the structure of manual pages
and the syntax and usage of the man language.
.Pp
.Bf -emphasis
Do not use
.Nm
to write your manuals:
.Ef
It lacks support for semantic markup.
Use the
.Xr mdoc 7
language, instead.
.Pp
In a
.Nm
document, lines beginning with the control character
.Sq \&.
are called
.Dq macro lines .
The first word is the macro name.
It usually consists of two capital letters.
For a list of available macros, see
.Sx MACRO OVERVIEW .
The words following the macro name are arguments to the macro.
.Pp
Lines not beginning with the control character are called
.Dq text lines .
They provide free-form text to be printed; the formatting of the text
depends on the respective processing context:
.Bd -literal -offset indent
\&.SH Macro lines change control state.
Text lines are interpreted within the current state.
.Ed
.Pp
Many aspects of the basic syntax of the
.Nm
language are based on the
.Xr roff 7
language; see the
.Em LANGUAGE SYNTAX
and
.Em MACRO SYNTAX
sections in the
.Xr roff 7
manual for details, in particular regarding
comments, escape sequences, whitespace, and quoting.
.Sh MANUAL STRUCTURE
Each
.Nm
document must contain the
.Sx \&TH
macro describing the document's section and title.
It may occur anywhere in the document, although conventionally it
appears as the first macro.
.Pp
Beyond
.Sx \&TH ,
at least one macro or text line must appear in the document.
.Pp
The following is a well-formed skeleton
.Nm
file for a utility
.Qq progname :
.Bd -literal -offset indent
\&.TH PROGNAME 1 2009-10-10
\&.SH NAME
\efBprogname\efR \e(en one line about what it does
\&.\e\(dq .SH LIBRARY
\&.\e\(dq For sections 2, 3, and 9 only.
\&.\e\(dq Not used in OpenBSD.
\&.SH SYNOPSIS
\efBprogname\efR [\efB\e-options\efR] \efIfile ...\efR
\&.SH DESCRIPTION
The \efBfoo\efR utility processes files ...
\&.\e\(dq .Sh CONTEXT
\&.\e\(dq For section 9 functions only.
\&.\e\(dq .SH IMPLEMENTATION NOTES
\&.\e\(dq Not used in OpenBSD.
\&.\e\(dq .SH RETURN VALUES
\&.\e\(dq For sections 2, 3, and 9 function return values only.
\&.\e\(dq .SH ENVIRONMENT
\&.\e\(dq For sections 1, 6, 7, and 8 only.
\&.\e\(dq .SH FILES
\&.\e\(dq .SH EXIT STATUS
\&.\e\(dq For sections 1, 6, and 8 only.
\&.\e\(dq .SH EXAMPLES
\&.\e\(dq .SH DIAGNOSTICS
\&.\e\(dq For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
\&.\e\(dq .SH ERRORS
\&.\e\(dq For sections 2, 3, 4, and 9 errno settings only.
\&.\e\(dq .SH SEE ALSO
\&.\e\(dq .BR foobar ( 1 )
\&.\e\(dq .SH STANDARDS
\&.\e\(dq .SH HISTORY
\&.\e\(dq .SH AUTHORS
\&.\e\(dq .SH CAVEATS
\&.\e\(dq .SH BUGS
\&.\e\(dq .SH SECURITY CONSIDERATIONS
\&.\e\(dq Not used in OpenBSD.
.Ed
.Pp
The sections in a
.Nm
document are conventionally ordered as they appear above.
Sections should be composed as follows:
.Bl -ohang -offset indent
.It Em NAME
The name(s) and a short description of the documented material.
The syntax for this is generally as follows:
.Pp
.D1 \efBname\efR \e(en description
.It Em LIBRARY
The name of the library containing the documented material, which is
assumed to be a function in a section 2 or 3 manual.
For functions in the C library, this may be as follows:
.Pp
.D1 Standard C Library (libc, -lc)
.It Em SYNOPSIS
Documents the utility invocation syntax, function call syntax, or device
configuration.
.Pp
For the first, utilities (sections 1, 6, and 8), this is
generally structured as follows:
.Pp
.D1 \efBname\efR [-\efBab\efR] [-\efBc\efR\efIarg\efR] \efBpath\efR...
.Pp
For the second, function calls (sections 2, 3, 9):
.Pp
.D1 \&.B char *name(char *\efIarg\efR);
.Pp
And for the third, configurations (section 4):
.Pp
.D1 \&.B name* at cardbus ? function ?
.Pp
Manuals not in these sections generally don't need a
.Em SYNOPSIS .
.It Em DESCRIPTION
This expands upon the brief, one-line description in
.Em NAME .
It usually contains a break-down of the options (if documenting a
command).
.It Em CONTEXT
This section lists the contexts in which functions can be called in section 9.
The contexts are autoconf, process, or interrupt.
.It Em IMPLEMENTATION NOTES
Implementation-specific notes should be kept here.
This is useful when implementing standard functions that may have side
effects or notable algorithmic implications.
.It Em RETURN VALUES
This section documents the return values of functions in sections 2, 3, and 9.
.It Em ENVIRONMENT
Documents any usages of environment variables, e.g.,
.Xr environ 7 .
.It Em FILES
Documents files used.
It's helpful to document both the file name and a short description of how
the file is used (created, modified, etc.).
.It Em EXIT STATUS
This section documents the command exit status for
section 1, 6, and 8 utilities.
Historically, this information was described in
.Em DIAGNOSTICS ,
a practise that is now discouraged.
.It Em EXAMPLES
Example usages.
This often contains snippets of well-formed,
well-tested invocations.
Make sure that examples work properly!
.It Em DIAGNOSTICS
Documents error conditions.
In section 4 and 9 manuals, these are usually messages
printed by the kernel to the console and to the kernel log.
In section 1, 6, 7, and 8, these are usually messages
printed by userland programs to the standard error output.
.Pp
Historically, this section was used in place of
.Em EXIT STATUS
for manuals in sections 1, 6, and 8; however, this practise is
discouraged.
.It Em ERRORS
Documents
.Xr errno 2
settings in sections 2, 3, 4, and 9.
.It Em SEE ALSO
References other manuals with related topics.
This section should exist for most manuals.
.Pp
.D1 \&.BR bar \&( 1 \&),
.Pp
Cross-references should conventionally be ordered
first by section, then alphabetically.
.It Em STANDARDS
References any standards implemented or used, such as
.Pp
.D1 IEEE Std 1003.2 (\e(lqPOSIX.2\e(rq)
.Pp
If not adhering to any standards, the
.Em HISTORY
section should be used.
.It Em HISTORY
A brief history of the subject, including where support first appeared.
.It Em AUTHORS
Credits to the person or persons who wrote the code and/or documentation.
Authors should generally be noted by both name and email address.
.It Em CAVEATS
Common misuses and misunderstandings should be explained
in this section.
.It Em BUGS
Known bugs, limitations, and work-arounds should be described
in this section.
.It Em SECURITY CONSIDERATIONS
Documents any security precautions that operators should consider.
.El
.Sh MACRO OVERVIEW
This overview is sorted such that macros of similar purpose are listed
together, to help find the best macro for any given purpose.
Deprecated macros are not included in the overview, but can be found
in the alphabetical reference below.
.Ss Page header and footer meta-data
.Bl -column "PP, LP, P" description
.It Sx TH Ta set the title: Ar title section date Op Ar source Op Ar volume
.It Sx AT Ta display AT&T UNIX version in the page footer (<= 1 argument)
.It Sx UC Ta display BSD version in the page footer (<= 1 argument)
.El
.Ss Sections and paragraphs
.Bl -column "PP, LP, P" description
.It Sx SH Ta section header (one line)
.It Sx SS Ta subsection header (one line)
.It Sx PP , LP , P Ta start an undecorated paragraph (no arguments)
.It Sx RS , RE Ta reset the left margin: Op Ar width
.It Sx IP Ta indented paragraph: Op Ar head Op Ar width
.It Sx TP Ta tagged paragraph: Op Ar width
.It Sx HP Ta hanged paragraph: Op Ar width
.It Sx PD Ta set vertical paragraph distance: Op Ar height
.It Sx \&br Ta force output line break in text mode (no arguments)
.It Sx \&sp Ta force vertical space: Op Ar height
.It Sx fi , nf Ta fill mode and no-fill mode (no arguments)
.It Sx in Ta additional indent: Op Ar width
.El
.Ss Physical markup
.Bl -column "PP, LP, P" description
.It Sx B Ta boldface font
.It Sx I Ta italic font
.It Sx R Ta roman (default) font
.It Sx SB Ta small boldface font
.It Sx SM Ta small roman font
.It Sx BI Ta alternate between boldface and italic fonts
.It Sx BR Ta alternate between boldface and roman fonts
.It Sx IB Ta alternate between italic and boldface fonts
.It Sx IR Ta alternate between italic and roman fonts
.It Sx RB Ta alternate between roman and boldface fonts
.It Sx RI Ta alternate between roman and italic fonts
.El
.Sh MACRO REFERENCE
This section is a canonical reference to all macros, arranged
alphabetically.
For the scoping of individual macros, see
.Sx MACRO SYNTAX .
.Ss \&AT
Sets the volume for the footer for compatibility with man pages from
.At
releases.
The optional arguments specify which release it is from.
.Ss \&B
Text is rendered in bold face.
.Pp
See also
.Sx \&I
and
.Sx \&R .
.Ss \&BI
Text is rendered alternately in bold face and italic.
Thus,
.Sq .BI this word and that
causes
.Sq this
and
.Sq and
to render in bold face, while
.Sq word
and
.Sq that
render in italics.
Whitespace between arguments is omitted in output.
.Pp
Examples:
.Pp
.Dl \&.BI bold italic bold italic
.Pp
The output of this example will be emboldened
.Dq bold
and italicised
.Dq italic ,
with spaces stripped between arguments.
.Pp
See also
.Sx \&IB ,
.Sx \&BR ,
.Sx \&RB ,
.Sx \&RI ,
and
.Sx \&IR .
.Ss \&BR
Text is rendered alternately in bold face and roman (the default font).
Whitespace between arguments is omitted in output.
.Pp
See
.Sx \&BI
for an equivalent example.
.Pp
See also
.Sx \&BI ,
.Sx \&IB ,
.Sx \&RB ,
.Sx \&RI ,
and
.Sx \&IR .
.Ss \&DT
Has no effect.
Included for compatibility.
.Ss \&EE
This is a non-standard GNU extension, included only for compatibility.
In
.Xr mandoc 1 ,
it does the same as
.Sx \&fi .
.Ss \&EX
This is a non-standard GNU extension, included only for compatibility.
In
.Xr mandoc 1 ,
it does the same as
.Sx \&nf .
.Ss \&HP
Begin a paragraph whose initial output line is left-justified, but
subsequent output lines are indented, with the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&HP
.Op Ar width
.Ed
.Pp
The
.Ar width
argument is a
.Xr roff 7
scaling width.
If specified, it's saved for later paragraph left-margins; if unspecified, the
saved or default width is used.
.Pp
See also
.Sx \&IP ,
.Sx \&LP ,
.Sx \&P ,
.Sx \&PP ,
and
.Sx \&TP .
.Ss \&I
Text is rendered in italics.
.Pp
See also
.Sx \&B
and
.Sx \&R .
.Ss \&IB
Text is rendered alternately in italics and bold face.
Whitespace between arguments is omitted in output.
.Pp
See
.Sx \&BI
for an equivalent example.
.Pp
See also
.Sx \&BI ,
.Sx \&BR ,
.Sx \&RB ,
.Sx \&RI ,
and
.Sx \&IR .
.Ss \&IP
Begin an indented paragraph with the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&IP
.Op Ar head Op Ar width
.Ed
.Pp
The
.Ar width
argument is a
.Xr roff 7
scaling width defining the left margin.
It's saved for later paragraph left-margins; if unspecified, the saved or
default width is used.
.Pp
The
.Ar head
argument is used as a leading term, flushed to the left margin.
This is useful for bulleted paragraphs and so on.
.Pp
See also
.Sx \&HP ,
.Sx \&LP ,
.Sx \&P ,
.Sx \&PP ,
and
.Sx \&TP .
.Ss \&IR
Text is rendered alternately in italics and roman (the default font).
Whitespace between arguments is omitted in output.
.Pp
See
.Sx \&BI
for an equivalent example.
.Pp
See also
.Sx \&BI ,
.Sx \&IB ,
.Sx \&BR ,
.Sx \&RB ,
and
.Sx \&RI .
.Ss \&LP
Begin an undecorated paragraph.
The scope of a paragraph is closed by a subsequent paragraph,
sub-section, section, or end of file.
The saved paragraph left-margin width is reset to the default.
.Pp
See also
.Sx \&HP ,
.Sx \&IP ,
.Sx \&P ,
.Sx \&PP ,
and
.Sx \&TP .
.Ss \&OP
Optional command-line argument.
This is a non-standard GNU extension, included only for compatibility.
It has the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&OP
.Ar key Op Ar value
.Ed
.Pp
The
.Ar key
is usually a command-line flag and
.Ar value
its argument.
.Ss \&P
Synonym for
.Sx \&LP .
.Pp
See also
.Sx \&HP ,
.Sx \&IP ,
.Sx \&LP ,
.Sx \&PP ,
and
.Sx \&TP .
.Ss \&PD
Specify the vertical space to be inserted before each new paragraph.
.br
The syntax is as follows:
.Bd -filled -offset indent
.Pf \. Sx \&PD
.Op Ar height
.Ed
.Pp
The
.Ar height
argument is a
.Xr roff 7
scaling width.
It defaults to
.Cm 1v .
If the unit is omitted,
.Cm v
is assumed.
.Pp
This macro affects the spacing before any subsequent instances of
.Sx \&HP ,
.Sx \&IP ,
.Sx \&LP ,
.Sx \&P ,
.Sx \&PP ,
.Sx \&SH ,
.Sx \&SS ,
and
.Sx \&TP .
.Ss \&PP
Synonym for
.Sx \&LP .
.Pp
See also
.Sx \&HP ,
.Sx \&IP ,
.Sx \&LP ,
.Sx \&P ,
and
.Sx \&TP .
.Ss \&R
Text is rendered in roman (the default font).
.Pp
See also
.Sx \&I
and
.Sx \&B .
.Ss \&RB
Text is rendered alternately in roman (the default font) and bold face.
Whitespace between arguments is omitted in output.
.Pp
See
.Sx \&BI
for an equivalent example.
.Pp
See also
.Sx \&BI ,
.Sx \&IB ,
.Sx \&BR ,
.Sx \&RI ,
and
.Sx \&IR .
.Ss \&RE
Explicitly close out the scope of a prior
.Sx \&RS .
The default left margin is restored to the state before that
.Sx \&RS
invocation.
.Pp
The syntax is as follows:
.Bd -filled -offset indent
.Pf \. Sx \&RE
.Op Ar level
.Ed
.Pp
Without an argument, the most recent
.Sx \&RS
block is closed out.
If
.Ar level
is 1, all open
.Sx \&RS
blocks are closed out.
Otherwise,
.Ar level No \(mi 1
nested
.Sx \&RS
blocks remain open.
.Ss \&RI
Text is rendered alternately in roman (the default font) and italics.
Whitespace between arguments is omitted in output.
.Pp
See
.Sx \&BI
for an equivalent example.
.Pp
See also
.Sx \&BI ,
.Sx \&IB ,
.Sx \&BR ,
.Sx \&RB ,
and
.Sx \&IR .
.Ss \&RS
Temporarily reset the default left margin.
This has the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&RS
.Op Ar width
.Ed
.Pp
The
.Ar width
argument is a
.Xr roff 7
scaling width.
If not specified, the saved or default width is used.
.Pp
See also
.Sx \&RE .
.Ss \&SB
Text is rendered in small size (one point smaller than the default font)
bold face.
.Ss \&SH
Begin a section.
The scope of a section is only closed by another section or the end of
file.
The paragraph left-margin width is reset to the default.
.Ss \&SM
Text is rendered in small size (one point smaller than the default
font).
.Ss \&SS
Begin a sub-section.
The scope of a sub-section is closed by a subsequent sub-section,
section, or end of file.
The paragraph left-margin width is reset to the default.
.Ss \&TH
Sets the title of the manual page for use in the page header
and footer with the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&TH
.Ar title section date
.Op Ar source Op Ar volume
.Ed
.Pp
Conventionally, the document
.Ar title
is given in all caps.
The recommended
.Ar date
format is
.Sy YYYY-MM-DD
as specified in the ISO-8601 standard;
if the argument does not conform, it is printed verbatim.
If the
.Ar date
is empty or not specified, the current date is used.
The optional
.Ar source
string specifies the organisation providing the utility.
When unspecified,
.Xr mandoc 1
uses its
.Fl Ios
argument.
The
.Ar volume
string replaces the default rendered volume, which is dictated by the
manual section.
.Pp
Examples:
.Pp
.Dl \&.TH CVS 5 "1992-02-12" GNU
.Ss \&TP
Begin a paragraph where the head, if exceeding the indentation width, is
followed by a newline; if not, the body follows on the same line after a
buffer to the indentation width.
Subsequent output lines are indented.
The syntax is as follows:
.Bd -filled -offset indent
.Pf \. Sx \&TP
.Op Ar width
.Ed
.Pp
The
.Ar width
argument is a
.Xr roff 7
scaling width.
If specified, it's saved for later paragraph left-margins; if
unspecified, the saved or default width is used.
.Pp
See also
.Sx \&HP ,
.Sx \&IP ,
.Sx \&LP ,
.Sx \&P ,
and
.Sx \&PP .
.Ss \&UC
Sets the volume for the footer for compatibility with man pages from
.Bx
releases.
The optional first argument specifies which release it is from.
.Ss \&UE
End a uniform resource identifier block.
This is a non-standard GNU extension, included only for compatibility.
See
.Sx \&UE .
.Ss \&UR
Begin a uniform resource identifier block.
This is a non-standard GNU extension, included only for compatibility.
It has the following syntax:
.Bd -literal -offset indent
.Pf \. Sx \&UR Ar uri
link description to be shown
.Pf \. Sx UE
.Ed
.Ss \&br
Breaks the current line.
Consecutive invocations have no further effect.
.Pp
See also
.Sx \&sp .
.Ss \&fi
End literal mode begun by
.Sx \&nf .
.Ss \&in
Indent relative to the current indentation:
.Pp
.D1 Pf \. Sx \&in Op Ar width
.Pp
If
.Ar width
is signed, the new offset is relative.
Otherwise, it is absolute.
This value is reset upon the next paragraph, section, or sub-section.
.Ss \&nf
Begin literal mode: all subsequent free-form lines have their end of
line boundaries preserved.
May be ended by
.Sx \&fi .
Literal mode is implicitly ended by
.Sx \&SH
or
.Sx \&SS .
.Ss \&sp
Insert vertical spaces into output with the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&sp
.Op Ar height
.Ed
.Pp
The
.Ar height
argument is a scaling width as described in
.Xr roff 7 .
If 0, this is equivalent to the
.Sx \&br
macro.
Defaults to 1, if unspecified.
.Pp
See also
.Sx \&br .
.Sh MACRO SYNTAX
The
.Nm
macros are classified by scope: line scope or block scope.
Line macros are only scoped to the current line (and, in some
situations, the subsequent line).
Block macros are scoped to the current line and subsequent lines until
closed by another block macro.
.Ss Line Macros
Line macros are generally scoped to the current line, with the body
consisting of zero or more arguments.
If a macro is scoped to the next line and the line arguments are empty,
the next line, which must be text, is used instead.
Thus:
.Bd -literal -offset indent
\&.I
foo
.Ed
.Pp
is equivalent to
.Sq \&.I foo .
If next-line macros are invoked consecutively, only the last is used.
If a next-line macro is followed by a non-next-line macro, an error is
raised, except for
.Sx \&br
and
.Sx \&sp .
.Pp
The syntax is as follows:
.Bd -literal -offset indent
\&.YO \(lBbody...\(rB
\(lBbody...\(rB
.Ed
.Bl -column "MacroX" "ArgumentsX" "ScopeXXXXX" "CompatX" -offset indent
.It Em Macro Ta Em Arguments Ta Em Scope     Ta Em Notes
.It Sx \&AT  Ta    <=1       Ta    current   Ta    \&
.It Sx \&B   Ta    n         Ta    next-line Ta    \&
.It Sx \&BI  Ta    n         Ta    current   Ta    \&
.It Sx \&BR  Ta    n         Ta    current   Ta    \&
.It Sx \&DT  Ta    0         Ta    current   Ta    \&
.It Sx \&EE  Ta    0         Ta    current   Ta    compat
.It Sx \&EX  Ta    0         Ta    current   Ta    compat
.It Sx \&I   Ta    n         Ta    next-line Ta    \&
.It Sx \&IB  Ta    n         Ta    current   Ta    \&
.It Sx \&IR  Ta    n         Ta    current   Ta    \&
.It Sx \&OP  Ta    0, 1      Ta    current   Ta    compat
.It Sx \&PD  Ta    1         Ta    current   Ta    \&
.It Sx \&R   Ta    n         Ta    next-line Ta    \&
.It Sx \&RB  Ta    n         Ta    current   Ta    \&
.It Sx \&RI  Ta    n         Ta    current   Ta    \&
.It Sx \&SB  Ta    n         Ta    next-line Ta    \&
.It Sx \&SM  Ta    n         Ta    next-line Ta    \&
.It Sx \&TH  Ta    >1, <6    Ta    current   Ta    \&
.It Sx \&UC  Ta    <=1       Ta    current   Ta    \&
.It Sx \&br  Ta    0         Ta    current   Ta    compat
.It Sx \&fi  Ta    0         Ta    current   Ta    compat
.It Sx \&in  Ta    1         Ta    current   Ta    compat
.It Sx \&nf  Ta    0         Ta    current   Ta    compat
.It Sx \&sp  Ta    1         Ta    current   Ta    compat
.El
.Pp
Macros marked as
.Qq compat
are included for compatibility with the significant corpus of existing
manuals that mix dialects of roff.
These macros should not be used for portable
.Nm
manuals.
.Ss Block Macros
Block macros comprise a head and body.
As with in-line macros, the head is scoped to the current line and, in
one circumstance, the next line (the next-line stipulations as in
.Sx Line Macros
apply here as well).
.Pp
The syntax is as follows:
.Bd -literal -offset indent
\&.YO \(lBhead...\(rB
\(lBhead...\(rB
\(lBbody...\(rB
.Ed
.Pp
The closure of body scope may be to the section, where a macro is closed
by
.Sx \&SH ;
sub-section, closed by a section or
.Sx \&SS ;
part, closed by a section, sub-section, or
.Sx \&RE ;
or paragraph, closed by a section, sub-section, part,
.Sx \&HP ,
.Sx \&IP ,
.Sx \&LP ,
.Sx \&P ,
.Sx \&PP ,
or
.Sx \&TP .
No closure refers to an explicit block closing macro.
.Pp
As a rule, block macros may not be nested; thus, calling a block macro
while another block macro scope is open, and the open scope is not
implicitly closed, is syntactically incorrect.
.Bl -column "MacroX" "ArgumentsX" "Head ScopeX" "sub-sectionX" "compatX" -offset indent
.It Em Macro Ta Em Arguments Ta Em Head Scope Ta Em Body Scope  Ta Em Notes
.It Sx \&HP  Ta    <2        Ta    current    Ta    paragraph   Ta    \&
.It Sx \&IP  Ta    <3        Ta    current    Ta    paragraph   Ta    \&
.It Sx \&LP  Ta    0         Ta    current    Ta    paragraph   Ta    \&
.It Sx \&P   Ta    0         Ta    current    Ta    paragraph   Ta    \&
.It Sx \&PP  Ta    0         Ta    current    Ta    paragraph   Ta    \&
.It Sx \&RE  Ta    0         Ta    current    Ta    none        Ta    compat
.It Sx \&RS  Ta    1         Ta    current    Ta    part        Ta    compat
.It Sx \&SH  Ta    >0        Ta    next-line  Ta    section     Ta    \&
.It Sx \&SS  Ta    >0        Ta    next-line  Ta    sub-section Ta    \&
.It Sx \&TP  Ta    n         Ta    next-line  Ta    paragraph   Ta    \&
.It Sx \&UE  Ta    0         Ta    current    Ta    none        Ta    compat
.It Sx \&UR  Ta    1         Ta    current    Ta    part        Ta    compat
.El
.Pp
Macros marked
.Qq compat
are as mentioned in
.Sx Line Macros .
.Pp
If a block macro is next-line scoped, it may only be followed by in-line
macros for decorating text.
.Ss Font handling
In
.Nm
documents, both
.Sx Physical markup
macros and
.Xr roff 7
.Ql \ef
font escape sequences can be used to choose fonts.
In text lines, the effect of manual font selection by escape sequences
only lasts until the next macro invocation; in macro lines, it only lasts
until the end of the macro scope.
Note that macros like
.Sx \&BR
open and close a font scope for each argument.
.Sh SEE ALSO
.Xr man 1 ,
.Xr mandoc 1 ,
.Xr eqn 7 ,
.Xr mandoc_char 7 ,
.Xr mdoc 7 ,
.Xr roff 7 ,
.Xr tbl 7
.Sh HISTORY
The
.Nm
language first appeared as a macro package for the roff typesetting
system in
.At v7 .
It was later rewritten by James Clark as a macro package for groff.
Eric S. Raymond wrote the extended
.Nm
macros for groff in 2007.
The stand-alone implementation that is part of the
.Xr mandoc 1
utility written by Kristaps Dzonsons appeared in
.Ox 4.6 .
.Sh AUTHORS
This
.Nm
reference was written by
.An Kristaps Dzonsons Aq Mt kristaps@@bsd.lv .
.Sh CAVEATS
Do not use this language.
Use
.Xr mdoc 7 ,
instead.
@


1.43
log
@Strangely, ignoring the roff(7) .na request was implemented in the man(7)
parser.  Simplify the code by moving it into the roff(7) parser, also
making it work for mdoc(7).
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.42 2015/01/24 02:14:33 schwarze Exp $
a896 47
.Sh COMPATIBILITY
This section mentions some areas of questionable portability between
implementations of the
.Nm
language.
More incompatibilities exist.
.Pp
.Bl -dash -compact
.It
Do not depend on
.Sx \&SH
or
.Sx \&SS
to close out a literal context opened with
.Sx \&nf .
This behaviour may not be portable.
.It
troff suppresses a newline before
.Sq \(aq
macro output; in mandoc, it is an alias for the standard
.Sq \&.
control character.
.It
In page header lines, GNU troff versions up to and including 1.21
only print
.Ar volume
names explicitly specified in the
.Sx \&TH
macro; mandoc and newer groff print the default volume name
corresponding to the
.Ar section
number when no
.Ar volume
is given, like in
.Xr mdoc 7 .
.El
.Pp
The
.Sx EE ,
.Sx EX ,
.Sx OP ,
.Sx UE ,
and
.Sx UR
macros are part of the GNU extended
.Nm
macro set, and may not be portable to non-GNU troff implementations.
@


1.42
log
@change .Cm to .Ar for macro arguments
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.41 2015/01/24 01:59:40 schwarze Exp $
a729 2
.Ss \&na
Don't align to the right margin.
d781 1
a781 2
.Sx \&br ,
.Sx \&sp ,
d783 1
a783 1
.Sx \&na .
a813 1
.It Sx \&na  Ta    0         Ta    current   Ta    compat
@


1.41
log
@Support .RE with an argument; needed for audio/pms(1).
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.40 2014/12/28 15:22:42 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: December 28 2014 $
d372 1
a372 1
.Op Cm width
d376 1
a376 1
.Cm width
d416 1
a416 1
.Op Cm head Op Cm width
d420 1
a420 1
.Cm width
d428 1
a428 1
.Cm head
d473 1
a473 1
.Cm key Op Cm value
d477 1
a477 1
.Cm key
d479 1
a479 1
.Cm value
d498 1
a498 1
.Op Cm height
d502 1
a502 1
.Cm height
d601 1
a601 1
.Op Cm width
d605 1
a605 1
.Cm width
d674 1
a674 1
.Op Cm width
d678 1
a678 1
.Cm width
d723 1
a723 1
.D1 Pf \. Sx \&in Op Cm width
d726 1
a726 1
.Cm width
d745 1
a745 1
.Op Cm height
d749 1
a749 1
.Cm height
@


1.40
log
@Improve documentation of the header/footer macros .Dt, .Os, .TH:
* State the defaults for .Os and the fourth .TH argument.
* Sync the section titles, and stop advertising obscure sections that
aren't actually fully supported and certainly not recommended for use.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.39 2014/06/22 16:39:07 schwarze Exp $
d4 1
a4 1
.\" Copyright (c) 2011, 2012, 2013 Ingo Schwarze <schwarze@@openbsd.org>
d19 1
a19 1
.Dd $Mdocdate: June 22 2014 $
d558 1
a558 1
The default left margin is restored to the state of the original
d561 20
@


1.39
log
@Minimal cleanup of the COMPATIBILITY section:
* Mention that the list is incomplete.
* Quoting quotes by doubling them is documented in the
Ossanna/Kernighan/Ritter Nroff/Troff User's Manual, Section 7.3.
* Our roff(7) manual documents handling of escape sequences;
besides, we partially support \w and \z now.
* Scaling widths are documented in roff(7) as well, and f is not \f.
* Negative arguments to .sp are handled now.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.38 2014/03/30 23:57:43 dlg Exp $
d19 1
a19 1
.Dd $Mdocdate: March 30 2014 $
d610 2
a611 1
Sets the title of the manual page with the following syntax:
d633 5
@


1.38
log
@i suggested a CONTEXT section for kernel manpages that describes
which contexts you can call functions in. deraadt@@ encouraged me
to pursue it. ive applied it to a few pages and i think it is worth
moving forward with.

this specific diff was requested by schwartz@@ while we were discussing
it before 5.5.
tweaks from jmc@@ schwartz@@
ok schwartz@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.37 2014/02/16 14:26:51 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: February 16 2014 $
d876 1
a876 1
This section documents areas of questionable portability between
d880 1
a891 4
In quoted literals, GNU troff allowed pair-wise double-quotes to produce
a standalone double-quote in formatted output.
It is not known whether this behaviour is exhibited by other formatters.
.It
a897 31
The
.Sq \eh
.Pq horizontal position ,
.Sq \ev
.Pq vertical position ,
.Sq \em
.Pq text colour ,
.Sq \eM
.Pq text filling colour ,
.Sq \ez
.Pq zero-length character ,
.Sq \ew
.Pq string length ,
.Sq \ek
.Pq horizontal position marker ,
.Sq \eo
.Pq text overstrike ,
and
.Sq \es
.Pq text size
escape sequences are all discarded in mandoc.
.It
The
.Sq \ef
scaling unit is accepted by mandoc, but rendered as the default unit.
.It
The
.Sx \&sp
macro does not accept negative values in mandoc.
In GNU troff, this would result in strange behaviour.
.It
d913 7
a919 2
.Sx OP
macro is part of the extended
@


1.37
log
@After Werner Lemberg accepted and committed some updates to the manual
page template contained in groff_mdoc(7), catch up with our own stuff.
In particular, allow ERRORS in section 4 and DIAGNOSTICS in section 9.
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.36 2014/02/14 17:27:58 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: February 14 2014 $
d109 2
d176 3
@


1.36
log
@use .At where appropriate; from Jan Stary <hans at stare dot cz>
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.35 2014/01/06 00:53:14 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: January 6 2014 $
d101 1
a101 1
\efBprogname\efR \e(en a description goes here
d103 1
a103 1
\&.\e\(dq For sections 2 & 3 only.
d106 1
a106 1
\efBprogname\efR [\efB\e-options\efR] arguments...
d108 1
a108 1
The \efBfoo\efR utility processes files...
d112 1
a112 1
\&.\e\(dq For sections 2, 3, & 9 only.
d114 1
a114 1
\&.\e\(dq For sections 1, 6, 7, & 8 only.
d117 1
a117 1
\&.\e\(dq For sections 1, 6, & 8 only.
d120 1
a120 1
\&.\e\(dq For sections 1, 4, 6, 7, & 8 only.
d122 1
a122 1
\&.\e\(dq For sections 2, 3, & 9 only.
d124 1
a124 1
\&.\e\(dq .BR foo ( 1 )
d200 5
a204 1
This is most useful in section 4 manuals.
d210 3
a212 1
Documents error handling in sections 2, 3, and 9.
@


1.35
log
@Joerg Sonnenberger contributed copyrightable amounts of text to
some files.  To make it clear that he also put his contributions
under the ISC license, with his explicit permission, add his
Copyright notice to the relevant files.  No code change.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.34 2013/12/31 15:15:47 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: December 31 2013 $
d284 1
a284 1
.Tn AT&T UNIX
@


1.34
log
@Oops, add missing end of block.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.33 2013/12/31 15:13:25 schwarze Exp $
d5 1
@


1.33
log
@Add missing description of .UR/.UE.
While here, also add .EX/.EE and .PD to the MACRO SYNTAX table.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.32 2013/08/14 08:39:29 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: August 14 2013 $
d672 1
@


1.32
log
@some Bx/Ox conversion;
From: Jan Stary
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.31 2013/07/13 19:44:14 schwarze Exp $
d4 1
a4 1
.\" Copyright (c) 2011, 2012 Ingo Schwarze <schwarze@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: July 13 2013 $
d659 13
d761 2
d767 1
d836 2
@


1.31
log
@For citing the names and email addresses of authors,
consistently use the style ".An name Aq Mt email".

Triggered by a question from Jan Stary <hans at stare dot cz>.
Somehow, i missed these two files, jmc@@ agrees with the principle.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.30 2012/07/29 13:35:41 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 29 2012 $
d656 2
a657 1
BSD releases.
@


1.30
log
@document .PD; related to man_term.c rev. 1.88
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.29 2012/06/20 21:37:32 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: June 20 2012 $
d945 1
a945 2
.An Kristaps Dzonsons ,
.Mt kristaps@@bsd.lv .
@


1.29
log
@When i moved some low-level stuff from mdoc(7) and man(7)
to roff(7) some time ago, i forgot to adjust the cross-references.
Reported by Tim van der Molen <tbvdm at xs4all dot nl>, thanks.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.28 2012/06/02 20:07:09 schwarze Exp $
d3 2
a4 2
.\" Copyright (c) 2009, 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
.\" Copyright (c) 2011 Ingo Schwarze <schwarze@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: June 2 2012 $
d256 1
d478 30
@


1.28
log
@Minimal implementation of .EX and .EE for GNU compatibility.
Do not use this, it is not portable and only defined in esr's man-ext.
For example, sox(1) wants these macros.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.27 2012/02/26 19:41:27 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: February 26 2012 $
d364 3
a366 2
argument must conform to
.Sx Scaling Widths .
d408 3
a410 2
argument defines the width of the left margin and is defined by
.Sx Scaling Widths .
d543 3
a545 2
argument must conform to
.Sx Scaling Widths .
d610 3
a612 2
argument must conform to
.Sx Scaling Widths .
d664 1
a664 1
Insert
d666 2
a667 2
spaces, which must conform to
.Sx Scaling Widths .
@


1.27
log
@Support .OP, one of the extended man macros; from kristaps@@.
Do not use this GNU extension, we take it for compatibility only.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.26 2011/12/02 01:45:43 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 2 2011 $
d342 12
@


1.26
log
@In man(7), when no explicit volume name is given, use the default
volume name for the respective manual section, just like in mdoc(7).
This gives us nicer page headers for cvs(1), lynx(1), tic(1),
mkhybrid(8), and many curses(3) manuals.

ok kristaps@@

To not break compatibility, i wrote a corresponding patch for GNU troff
which Werner Lemberg accepted upstream at rev. 1.65 of:
http://cvs.savannah.gnu.org/viewvc/groff/tmac/an-old.tmac?root=groff
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.25 2011/09/26 23:07:20 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: September 26 2011 $
d440 14
d703 1
d866 6
d887 3
@


1.25
log
@Reorganize part of the content:

1) Move the LANGUAGE SYNTAX from mdoc(7) and man(7) to roff(7),
it's common to both and it's actually roff syntax.
2) Move the MACRO SYNTAX down to the bottom, such that the less
technical parts MANUAL STRUCTURE and MACRO OVERVIEW get to the top.

Getting everything to again fit together after the reshuffling
required various adjustments; also adjust and improve
the DESCRIPTIONS while there.

feedback and "go ahead"  jmc@@ kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.24 2011/09/26 21:30:03 schwarze Exp $
d837 13
@


1.24
log
@note that section macro end literal mode;
from kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.23 2011/09/20 22:46:45 schwarze Exp $
d3 2
a4 1
.\" Copyright (c) 2009, 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
d18 1
a18 1
.Dd $Mdocdate: September 20 2011 $
d23 1
a23 1
.Nd man language reference
d25 1
a25 1
The
d27 1
a27 1
language was historically used to format
d29 7
a35 2
manuals.
This reference document describes its syntax, structure, and usage.
d40 1
a40 1
to write your manuals.
d42 1
d47 1
a47 1
A
d49 1
a49 2
document follows simple rules: lines beginning with the control
character
d51 12
a62 3
are parsed for macros.
Lines not beginning with the control character are
interpreted within the scope of prior macros:
a66 101
.Sh LANGUAGE SYNTAX
.Nm
documents may contain only graphable 7-bit ASCII characters, the
space character, and the tab character.
The back-space character
.Sq \e
indicates the start of an escape sequence for
.Sx Comments ,
.Sx Predefined Strings ,
and
.Sx Special Characters .
.Ss Comments
Text following an escaped double-quote
.Sq \e\(dq ,
whether in a macro or text line, is ignored to the end of
line.
A macro line beginning with a control character and comment escape
.Sq \&.\e\(dq
is also ignored.
Furthermore,
macro lines with only a control character and optional trailing
whitespace are
stripped from input.
.Pp
Examples:
.Bd -literal -offset indent -compact
\&.\e\(dq This is a comment line.
\&.\e\(dq The next line is ignored:
\&.
\&.Em Emphasis \e\(dq This is also a comment.
.Ed
.Ss Special Characters
Special characters are used to encode special glyphs and are rendered
differently across output media.
They may occur in both macro and text lines.
Sequences begin with the escape character
.Sq \e
followed by either an open-parenthesis
.Sq \&(
for two-character sequences; an open-bracket
.Sq \&[
for n-character sequences (terminated at a close-bracket
.Sq \&] ) ;
or a single one character sequence.
.Pp
Examples:
.Bl -tag -width Ds -offset indent -compact
.It Li \e(em
Two-letter em dash escape.
.It Li \ee
One-letter backslash escape.
.El
.Pp
See
.Xr mandoc_char 7
for a complete list.
.Ss Text Decoration
Terms may be text-decorated using the
.Sq \ef
escape followed by an indicator: B (bold), I (italic), R (regular), or P
(revert to previous mode).
A numerical representation 3, 2, or 1 (bold, italic, and regular,
respectively) may be used instead.
A text decoration is only valid, if specified in free-form text, until
the next macro invocation; if specified within a macro, it's only valid
until the macro closes scope.
Note that macros like
.Sx \&BR
open and close a font scope with each argument.
.Pp
The
.Sq \ef
attribute is forgotten when entering or exiting a macro block.
.Pp
Examples:
.Bl -tag -width Ds -offset indent -compact
.It Li \efBbold\efR
Write in bold, then switch to regular font mode.
.It Li \efIitalic\efP
Write in italic, then return to previous font mode.
.El
.Ss Predefined Strings
Predefined strings, like
.Sx Special Characters ,
mark special output glyphs.
Predefined strings are escaped with the slash-asterisk,
.Sq \e* :
single-character
.Sq \e*X ,
two-character
.Sq \e*(XX ,
and N-character
.Sq \e*[N] .
.Pp
Examples:
.Bl -tag -width Ds -offset indent -compact
.It Li \e*(Am
Two-letter ampersand predefined string.
.It Li \e*q
One-letter double-quote predefined string.
.El
d68 1
a68 3
These strings are set using
.Xr roff 7 ,
although
d70 4
a73 47
consists of several pre-set escapes listed in
.Xr mandoc_char 7 .
.Ss Whitespace
Whitespace consists of the space character.
In text lines, whitespace is preserved within a line.
In macro lines, whitespace delimits arguments and is discarded.
.Pp
Unescaped trailing spaces are stripped from text line input unless in a
literal context.
In general, trailing whitespace on any input line is discouraged for
reasons of portability.
In the rare case that a blank character is needed at the end of an
input line, it may be forced by
.Sq \e\ \e& .
.Pp
In general, space characters can be rendered as literal
characters by using non-breaking space escapes or
.Sx Quotation .
If the first character of a text line is a space, that line is printed
with a leading newline.
.Ss Quotation
Macro arguments may be quoted with double-quotes to so that the
enclosed text is one literal term.
Quoted text, even if whitespace or if it would cause a macro invocation
when unquoted, is considered literal text.
.Pp
A quoted argument begins with a double-quote preceded by whitespace.
The next double-quote not pairwise adjacent to another double-quote
terminates the literal, regardless of surrounding whitespace.
.Pp
Examples:
.Bl -tag -width Ds -offset indent -compact
.It Li .BR a \(dqb c\(dq d
Group arguments
.Qq b c
into one un-bolded argument.
If unspecified,
.Qq a
and
.Qq c
will be in bold,
.Qq b
and
.Qq d
in regular font mode.
Furthermore, will be preserved between
.Qq b
d75 5
a79 86
.Qq c .
.El
.Ss Scaling Widths
Many macros support scaled widths for their arguments.
The syntax for a scaled width is
.Sq Li [+-]?[0-9]*.[0-9]*[:unit:] ,
where a decimal must be preceded or proceeded by at least one digit.
Negative numbers, while accepted, are truncated to zero.
.Pp
The following scaling units are accepted:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It c
centimetre
.It i
inch
.It P
pica (~1/6 inch)
.It p
point (~1/72 inch)
.It f
synonym for
.Sq u
.It v
default vertical span
.It m
width of rendered
.Sq m
.Pq em
character
.It n
width of rendered
.Sq n
.Pq en
character
.It u
default horizontal span
.It M
mini-em (~1/100 em)
.El
.Pp
Using anything other than
.Sq m ,
.Sq n ,
.Sq u ,
or
.Sq v
is necessarily non-portable across output media.
See
.Sx COMPATIBILITY .
.Pp
If a scaling unit is not provided, the numerical value is interpreted
under the default rules of
.Sq v
for vertical spaces and
.Sq u
for horizontal ones.
.Pp
Examples:
.Bl -tag -width Ds -offset indent -compact
.It \&.HP 2i
two-inch tagged list indentation
.Pq see Sx \&HP
.It \&.sp 2v
two vertical spaces
.Pq see Sx \&sp
.El
.Ss Sentence Spacing
Sentences should terminate at the end of an input line.
By doing this, a formatter will be able to apply the proper amount of
spacing after the end of sentence (unescaped) period, exclamation mark,
or question mark followed by zero or more non-sentence closing
delimiters
.Po
.Sq \&) ,
.Sq \&] ,
.Sq \&' ,
.Sq \&"
.Pc .
.Pp
Examples:
.Bd -literal -offset indent -compact
Do not end sentences mid-line like this.  Instead,
end a sentence like this.
A new sentence gets a new line.
.Ed
d91 1
a91 1
at least one macro or text node must appear in the document.
a235 143
.Sh MACRO SYNTAX
Macros are one to three characters in length and begin with a
control character,
.Sq \&. ,
at the beginning of the line.
The
.Sq \(aq
macro control character is also accepted.
An arbitrary amount of whitespace (spaces or tabs) may sit between the
control character and the macro name.
Thus, the following are equivalent:
.Bd -literal -offset indent
\&.PP
\&.\ \ \ PP
.Ed
.Pp
To include space characters in macro arguments, arguments may be quoted;
see the
.Sq MACRO SYNTAX
section in the
.Xr roff 7
manual for details.
.Pp
The
.Nm
macros are classified by scope: line scope or block scope.
Line macros are only scoped to the current line (and, in some
situations, the subsequent line).
Block macros are scoped to the current line and subsequent lines until
closed by another block macro.
.Ss Line Macros
Line macros are generally scoped to the current line, with the body
consisting of zero or more arguments.
If a macro is scoped to the next line and the line arguments are empty,
the next line, which must be text, is used instead.
Thus:
.Bd -literal -offset indent
\&.I
foo
.Ed
.Pp
is equivalent to
.Sq \&.I foo .
If next-line macros are invoked consecutively, only the last is used.
If a next-line macro is followed by a non-next-line macro, an error is
raised, except for
.Sx \&br ,
.Sx \&sp ,
and
.Sx \&na .
.Pp
The syntax is as follows:
.Bd -literal -offset indent
\&.YO \(lBbody...\(rB
\(lBbody...\(rB
.Ed
.Bl -column "MacroX" "ArgumentsX" "ScopeXXXXX" "CompatX" -offset indent
.It Em Macro Ta Em Arguments Ta Em Scope     Ta Em Notes
.It Sx \&AT  Ta    <=1       Ta    current   Ta    \&
.It Sx \&B   Ta    n         Ta    next-line Ta    \&
.It Sx \&BI  Ta    n         Ta    current   Ta    \&
.It Sx \&BR  Ta    n         Ta    current   Ta    \&
.It Sx \&DT  Ta    0         Ta    current   Ta    \&
.It Sx \&I   Ta    n         Ta    next-line Ta    \&
.It Sx \&IB  Ta    n         Ta    current   Ta    \&
.It Sx \&IR  Ta    n         Ta    current   Ta    \&
.It Sx \&R   Ta    n         Ta    next-line Ta    \&
.It Sx \&RB  Ta    n         Ta    current   Ta    \&
.It Sx \&RI  Ta    n         Ta    current   Ta    \&
.It Sx \&SB  Ta    n         Ta    next-line Ta    \&
.It Sx \&SM  Ta    n         Ta    next-line Ta    \&
.It Sx \&TH  Ta    >1, <6    Ta    current   Ta    \&
.It Sx \&UC  Ta    <=1       Ta    current   Ta    \&
.It Sx \&br  Ta    0         Ta    current   Ta    compat
.It Sx \&fi  Ta    0         Ta    current   Ta    compat
.It Sx \&in  Ta    1         Ta    current   Ta    compat
.It Sx \&na  Ta    0         Ta    current   Ta    compat
.It Sx \&nf  Ta    0         Ta    current   Ta    compat
.It Sx \&sp  Ta    1         Ta    current   Ta    compat
.El
.Pp
Macros marked as
.Qq compat
are included for compatibility with the significant corpus of existing
manuals that mix dialects of roff.
These macros should not be used for portable
.Nm
manuals.
.Ss Block Macros
Block macros comprise a head and body.
As with in-line macros, the head is scoped to the current line and, in
one circumstance, the next line (the next-line stipulations as in
.Sx Line Macros
apply here as well).
.Pp
The syntax is as follows:
.Bd -literal -offset indent
\&.YO \(lBhead...\(rB
\(lBhead...\(rB
\(lBbody...\(rB
.Ed
.Pp
The closure of body scope may be to the section, where a macro is closed
by
.Sx \&SH ;
sub-section, closed by a section or
.Sx \&SS ;
part, closed by a section, sub-section, or
.Sx \&RE ;
or paragraph, closed by a section, sub-section, part,
.Sx \&HP ,
.Sx \&IP ,
.Sx \&LP ,
.Sx \&P ,
.Sx \&PP ,
or
.Sx \&TP .
No closure refers to an explicit block closing macro.
.Pp
As a rule, block macros may not be nested; thus, calling a block macro
while another block macro scope is open, and the open scope is not
implicitly closed, is syntactically incorrect.
.Bl -column "MacroX" "ArgumentsX" "Head ScopeX" "sub-sectionX" "compatX" -offset indent
.It Em Macro Ta Em Arguments Ta Em Head Scope Ta Em Body Scope  Ta Em Notes
.It Sx \&HP  Ta    <2        Ta    current    Ta    paragraph   Ta    \&
.It Sx \&IP  Ta    <3        Ta    current    Ta    paragraph   Ta    \&
.It Sx \&LP  Ta    0         Ta    current    Ta    paragraph   Ta    \&
.It Sx \&P   Ta    0         Ta    current    Ta    paragraph   Ta    \&
.It Sx \&PP  Ta    0         Ta    current    Ta    paragraph   Ta    \&
.It Sx \&RE  Ta    0         Ta    current    Ta    none        Ta    compat
.It Sx \&RS  Ta    1         Ta    current    Ta    part        Ta    compat
.It Sx \&SH  Ta    >0        Ta    next-line  Ta    section     Ta    \&
.It Sx \&SS  Ta    >0        Ta    next-line  Ta    sub-section Ta    \&
.It Sx \&TP  Ta    n         Ta    next-line  Ta    paragraph   Ta    \&
.El
.Pp
Macros marked
.Qq compat
are as mentioned in
.Sx Line Macros .
.Pp
If a block macro is next-line scoped, it may only be followed by in-line
macros for decorating text.
d275 1
a275 1
.Sh REFERENCE
d645 136
@


1.23
log
@add a MACRO OVERVIEW section, similar to the one in mdoc(7);
writing this for man(7), too, was suggested by kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.22 2011/09/18 10:38:57 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: September 18 2011 $
d978 4
@


1.22
log
@sync to mandoc 1.11.5:
document eqn(7) and many other improvements
from kristaps@@

no objection from deraadt@@ against adding an eqn.7 page
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.21 2011/08/30 12:25:09 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: August 30 2011 $
d591 39
@


1.21
log
@in column lists, enforce the following ordering:

	.Bl -column header1 header2 ... <Bl flags>

mixing things up confuses mandoc, and adding flags in can screw up the list.
this hopefully just makes things a bit safer (and more consistent).

(one more bit of work left and all column lists should format how we want)
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.20 2011/08/30 11:38:59 jmc Exp $
d42 1
a42 1
document follows simple rules:  lines beginning with the control
d46 2
a47 2
Other lines are interpreted within the scope of
prior macros:
d50 1
a50 1
Other lines are interpreted within the current state.
d52 1
a52 1
.Sh INPUT ENCODING
d56 7
a62 6
.Pp
Blank lines are acceptable; where found, the output will assert a
vertical space.
.Pp
If the first character of a line is a space, that line is printed
with a leading newline.
d64 3
a66 3
Text following a
.Sq \e\*q ,
whether in a macro or free-form text line, is ignored to the end of
d68 2
a69 2
A macro line with only a control character and comment escape,
.Sq \&.\e\*q ,
d71 3
a73 1
Macro lines with only a control character and optionally whitespace are
d75 8
d84 3
a86 1
Special characters may occur in both macro and free-form lines.
d95 10
a104 1
or a single one-character sequence.
a107 6
Examples include
.Sq \e(em
.Pq em-dash
and
.Sq \ee
.Pq back-slash .
d111 3
a113 6
escape followed by an indicator: B (bold), I (italic), R (Roman), or P
(revert to previous mode):
.Pp
.D1 \efBbold\efR \efIitalic\efP
.Pp
A numerical representation 3, 2, or 1 (bold, italic, and Roman,
d125 35
d162 25
a186 4
In free-form lines, whitespace is preserved within a line; unescaped
trailing spaces are stripped from input (unless in a literal context).
Blank free-form lines, which may include spaces, are permitted and
rendered as an empty line.
d188 20
a207 2
In macro lines, whitespace delimits arguments and is discarded.
If arguments are quoted, whitespace within the quotes is retained.
d209 3
a211 8
Many macros support scaled widths for their arguments, such as
stipulating a two-inch paragraph indentation with the following:
.Bd -literal -offset indent
\&.HP 2i
.Ed
.Pp
The syntax for scaled widths is
.Sq Li [+-]?[0-9]*.[0-9]*[:unit:]? ,
d214 1
d254 2
d263 10
a272 5
.Em Note :
this differs from
.Xr mdoc 7 ,
which, if a unit is not provided, will instead interpret the string as
literal text.
d274 2
a275 3
When composing a manual, make sure that sentences end at the end of
a line.
By doing so, front-ends will be able to apply the proper amount of
d285 7
d313 3
a315 3
\&.\e\*q .SH LIBRARY
\&.\e\*q For sections 2 & 3 only.
\&.\e\*q Not used in OpenBSD.
d320 23
a342 23
\&.\e\*q .SH IMPLEMENTATION NOTES
\&.\e\*q Not used in OpenBSD.
\&.\e\*q .SH RETURN VALUES
\&.\e\*q For sections 2, 3, & 9 only.
\&.\e\*q .SH ENVIRONMENT
\&.\e\*q For sections 1, 6, 7, & 8 only.
\&.\e\*q .SH FILES
\&.\e\*q .SH EXIT STATUS
\&.\e\*q For sections 1, 6, & 8 only.
\&.\e\*q .SH EXAMPLES
\&.\e\*q .SH DIAGNOSTICS
\&.\e\*q For sections 1, 4, 6, 7, & 8 only.
\&.\e\*q .SH ERRORS
\&.\e\*q For sections 2, 3, & 9 only.
\&.\e\*q .SH SEE ALSO
\&.\e\*q .BR foo ( 1 )
\&.\e\*q .SH STANDARDS
\&.\e\*q .SH HISTORY
\&.\e\*q .SH AUTHORS
\&.\e\*q .SH CAVEATS
\&.\e\*q .SH BUGS
\&.\e\*q .SH SECURITY CONSIDERATIONS
\&.\e\*q Not used in OpenBSD.
d965 8
d1017 1
d1037 2
a1038 1
.An Kristaps Dzonsons Aq kristaps@@bsd.lv .
@


1.20
log
@remove some pointless Pp/-compact combinations; either ingo or kristaps
will update mandoc repo
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.19 2011/07/15 10:14:17 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 15 2011 $
d408 1
a408 1
.Bl -column -offset indent "MacroX" "ArgumentsX" "ScopeXXXXX" "CompatX"
d474 1
a474 1
.Bl -column -offset indent "MacroX" "ArgumentsX" "Head ScopeX" "sub-sectionX" "compatX"
@


1.19
log
@Clarify the role of .RS and fix a bogus cross-reference;
from kristaps@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.18 2011/06/07 23:40:10 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 7 2011 $
d408 1
a408 2
.Pp
.Bl -column -compact -offset indent "MacroX" "ArgumentsX" "ScopeXXXXX" "CompatX"
d474 1
a474 2
.Pp
.Bl -column -compact -offset indent "MacroX" "ArgumentsX" "Head ScopeX" "sub-sectionX" "compatX"
@


1.18
log
@bring in lots of improvements from kristaps@@;
jmc@@ agrees that it's easiest to first commit it,
then tweak it in the tree
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.17 2011/03/07 01:35:33 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: March 7 2011 $
d709 3
d728 1
a728 4
Begin a part setting the left margin.
The left margin controls the offset, following an initial indentation,
to un-indented text such as that of
.Sx \&PP .
d731 1
a731 1
.Pf \. Sx \&Rs
d740 3
@


1.17
log
@Clean up date handling,
as a first step to get rid of the frequent petty warnings in this area:
 - always store dates as strings, not as seconds since the Epoch
 - for input, try the three most common formats everywhere
 - for unrecognized format, just pass the date though verbatim
 - when there is no date at all, still use the current date
Originally triggered by a one-line patch from Tim van der Molen,
<tbvdm at xs4all dot nl>, which is included here.
Feedback and OK on manual parts from jmc@@.
"please check this in" kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.16 2011/01/25 00:37:39 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 25 2011 $
d208 5
a212 1
Documents are generally structured as follows:
d214 1
a214 1
\&.TH FOO 1 2009-10-10
d216 1
a216 1
\efBfoo\efR \e(en a description goes here
d221 1
a221 1
\efBfoo\efR [\efB\e-options\efR] arguments...
@


1.16
log
@As noticed by deraadt@@, it goes without saying that text files
on a UNIX system use UNIX conventions, and UNIX tools working
on them expect that.
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.15 2011/01/24 23:13:56 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 24 2011 $
a120 9
.Ss Dates
The
.Sx \&TH
macro is the only
.Nm
macro that requires a date.
The form for this date is the ISO-8601
standard
.Cm YYYY-MM-DD .
d756 2
a757 2
.Cm title section
.Op Cm date Op Cm source Op Cm volume
d760 14
a773 13
At least the upper-case document
.Cm title
and the manual
.Cm section
arguments must be provided.
The
.Cm date
argument should be formatted as described in
.Sx Dates ,
but will be printed verbatim if it is not.
If the date is not specified, the current date is used.
The
.Cm source
d776 1
a776 1
.Cm volume
@


1.15
log
@Better explain roff(7) macro argument quoting;
ok jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.14 2011/01/16 02:56:47 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 16 2011 $
a55 3
All manuals must have
.Ux
line termination.
@


1.14
log
@If the first character of a free-form text input line is whitespace,
then it will start a new output line;
from kristaps@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.13 2011/01/09 15:24:57 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 9 2011 $
d375 7
@


1.13
log
@Add and install tbl(7);
written by kristaps@@, looked over by jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.12 2011/01/09 12:49:22 schwarze Exp $
d62 3
@


1.12
log
@Sync to bsd.lv:
* one additional pair of .Sx cross references
* prefer .Dl over .D1 for code examples
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.11 2010/12/19 08:07:38 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: December 19 2010 $
d910 3
a912 1
.Xr mdoc 7
@


1.11
log
@Sync to bsd.lv (except that i'm not adding .ft documentation,
which we have in roff.7):
Remove documentation of the bogus macros .i and .r (which we just
removed from mandoc and which never worked in groff), of .b (which
never existed at all), and of the commented-out chunks for .PD, .Sp,
.Vb, and .Ve (the latter three occur in the pod2man preamble and are
now handled by roff.7 .de).
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.10 2010/09/26 19:40:27 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: September 26 2010 $
d529 1
a529 1
.D1 \&.BI bold italic bold italic
d783 1
a783 1
.D1 \&.TH CVS 5 "1992-02-12" GNU
@


1.10
log
@sync to bsd.lv:
note that \k, \o, \w, \z roff escapes are ignored by mandoc(1)
add a short HISTORY to mdoc(7)
move the sentence telling which sections use LIBRARY in man(7)
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.9 2010/09/04 08:00:15 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: September 4 2010 $
a416 1
.\" .It Sx \&PD  Ta    n         Ta    current   Ta    compat
a425 1
.It Sx \&i   Ta    n         Ta    current   Ta    compat
a428 1
.It Sx \&r   Ta    0         Ta    current   Ta    compat
a429 3
.\" .It Sx \&Sp  Ta    <1        Ta    current   Ta    compat
.\" .It Sx \&Vb  Ta    <1        Ta    current   Ta    compat
.\" .It Sx \&Ve  Ta    0         Ta    current   Ta    compat
d509 1
a509 4
.Sx \&I ,
.Sx \&R ,
.Sx \&b ,
.Sx \&i ,
d511 1
a511 1
.Sx \&r .
d588 1
a588 4
.Sx \&B ,
.Sx \&R ,
.Sx \&b ,
.Sx \&i ,
d590 1
a590 1
.Sx \&r .
d686 1
a686 4
.Sx \&I ,
.Sx \&B ,
.Sx \&b ,
.Sx \&i ,
d688 1
a688 1
.Sx \&r .
a808 6
.\" .
.\" .
.\" .Ss \&PD
.\" Has no effect.  Included for compatibility.
.\" .
.\" .
a821 12
.Ss \&i
Italicise arguments.
Synonym for
.Sx \&I .
.Pp
See also
.Sx \&B ,
.Sx \&I ,
.Sx \&R .
.Sx \&b ,
and
.Sx \&r .
a838 10
.Ss \&r
Fonts and styles (bold face, italics) reset to roman (default font).
.Pp
See also
.Sx \&B ,
.Sx \&I ,
.Sx \&R ,
.Sx \&b ,
and
.Sx \&i .
a856 15
.\" .Ss \&Sp
.\" A synonym for
.\" .Sx \&sp
.\" .Cm 0.5v .
.\" .
.\" .Ss \&Vb
.\" A synonym for
.\" .Sx \&nf .
.\" Accepts an argument (the height of the formatted space) which is
.\" disregarded.
.\" .
.\" .Ss \&Ve
.\" A synonym for
.\" .Sx \&fi .
.\" .
@


1.9
log
@EXIT STATUS is allowed for section 6 pages too (even though none of our
section 6 pages currently contain this information);
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.8 2010/08/31 17:51:31 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: August 31 2010 $
a221 1
\&.\e\*q The next is for sections 2 & 3 only.
d223 1
d942 8
d953 1
a953 2
.Sx Text Decoration
escapes are all discarded in mandoc.
@


1.8
log
@this diff does two things (usually a bad sign):
- note which section headings (.Sh) are not used by openbsd
- move the description of the section heading to under the heading, rather
than before it: a much more logical way to read

diffs mailed upstream...
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.7 2010/08/22 11:39:18 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 22 2010 $
d237 1
a237 1
\&.\e\*q For sections 1 & 8 only.
@


1.7
log
@* sort COMPATIBILITY in mdoc(7); ok kristaps@@
* update escape COMPATIBILITY in mdoc(7) and man(7); from kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.6 2010/08/01 20:47:52 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 1 2010 $
d224 1
d230 1
a230 1
\&.\e\*q The next is for sections 2, 3, & 9 only.
d232 1
a232 1
\&.\e\*q The next is for sections 1, 6, 7, & 8 only.
d234 1
a235 1
\&.\e\*q The next is for sections 1 & 8 only.
d237 1
a238 1
\&.\e\*q The next is for sections 1, 4, 6, 7, & 8 only.
d240 1
a240 1
\&.\e\*q The next is for sections 2, 3, & 9 only.
d242 1
d251 1
@


1.6
log
@The explanations of the HISTORY and AUTHORS sections were nicer
in the old mdoc(7) manual than in the new one, so put them back.
While here, fix the .Os synopsis and add two more .Xrs.
Do the same in man(7), as far as it is applicable.
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.5 2010/07/31 21:51:33 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 31 2010 $
a919 3
The \es (font size), \em (font colour), and \eM (font filling colour)
font decoration escapes are all discarded in mandoc.
.It
d924 25
a952 7
.It
The
.Sq \(aq
macro control character, in GNU troff (and prior troffs) suppresses a
newline before macro output; in mandoc, it is an alias for the standard
.Sq \&.
control character.
@


1.5
log
@document .in; from kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.4 2010/07/26 20:49:12 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: July 26 2010 $
d341 1
a341 3
The history of any manual without a
.Em STANDARDS
section should be described in this section.
d343 1
a343 1
Credits to authors, if applicable, should appear in this section.
d940 1
d942 2
a943 1
.Xr mandoc_char 7
@


1.4
log
@various small fixes; kristaps has committed this upstream already
ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.3 2010/07/19 23:06:29 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 19 2010 $
d427 1
d854 10
@


1.3
log
@merge from bsd.lv (minor improvements by kristaps@@)
* remove \s documentation, we do not support it and don't plan to
* note that we parse and ignore \m, \M, and \s escapes
* fix two broken instances of \*q
* we do not use empty macro lines before .SH headers
@
text
@d1 1
a1 1
.\"	$OpenBSD: man.7,v 1.2 2010/07/19 22:34:29 schwarze Exp $
d114 1
a114 1
In free-form lines, whitespace is preserved within a line; un-escaped
d193 1
a193 1
When composing a manual, make sure that your sentences end at the end of
d198 3
a200 2
delimiters (
.Ns Sq \&) ,
d203 2
a204 1
.Sq \&" ) .
d208 1
a208 1
document must contain contains at least the
d211 1
a211 1
It may occur anywhere in the document, although conventionally, it
d296 1
a296 4
This section is the dual of
.Em EXIT STATUS ,
which is used for commands.
It documents the return values of functions in sections 2, 3, and 9.
d305 2
a306 4
Command exit status for section 1, 6, and 8 manuals.
This section is the dual of
.Em RETURN VALUES ,
which is used for functions.
d314 1
a314 1
Make doubly sure that your examples work properly!
d351 1
a351 1
Known bugs, limitations and work-arounds should be described
d357 1
a357 1
Macros are one to three three characters in length and begin with a
d444 2
a445 2
Block macros are comprised of a head and body.
Like for in-line macros, the head is scoped to the current line and, in
d602 2
a603 2
Text is rendered alternately in italics and bold face.  Whitespace
between arguments is omitted in output.
d626 1
a626 1
.Sx Scaling Widths ,
d943 1
a943 1
.Ox 4.6.
@


1.2
log
@* briefly mention the HISTORY of the man(7) language
* update the copyright notice
* improve the wording in a few places
* fix a couple of typos
including two suggestions from J.C. Roberts
feedback and ok jmc@@, ok sobrado@@ and kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d17 1
a17 1
.Dd $Mdocdate: June 6 2010 $
d64 1
a64 1
.Sq \e\*" ,
d68 1
a68 1
.Sq \&.\e" ,
d109 1
a109 24
Text may also be sized with the
.Sq \es
escape, whose syntax is one of
.Sq \es+-n
for one-digit numerals;
.Sq \es(+-nn
or
.Sq \es+-(nn
for two-digit numerals; and
.Sq \es[+-N] ,
.Sq \es+-[N] ,
.Sq \es'+-N' ,
or
.Sq \es+-'N'
for arbitrary-digit numerals:
.Pp
.D1 \es+1bigger\es-1
.D1 \es[+10]much bigger\es[-10]
.D1 \es+(10much bigger\es-(10
.D1 \es+'100'much much bigger\es-'100'
.Pp
Both
.Sq \es
and
d111 1
a111 1
attributes are forgotten when entering or exiting a macro block.
a217 1
\&.
a221 1
\&.
a223 1
\&.
a225 1
\&.
d913 3
@


1.1
log
@J. C. Roberts noted that Kristaps' man.7 is already better than the
old groff_man.7 we currently install.  As a first step, move the new
manual where it belongs, not changing any content except the OpenBSD
marker.  The plan is, after some polishing, to install man.7 and not
install groff_man.7 any longer.

jmc@@, sobrado@@ and kristaps@@ agree
@
text
@d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@bsd.lv>
d40 1
a40 1
An
d55 1
a55 1
space character, and the tabs character.
d95 1
a95 1
escape followed by an indicator: B (bold), I, (italic), R (Roman), or P
d330 1
a330 1
It's helpful to document both the file and a short description of how
d376 1
a376 1
Authors should generally be noted by both name and an e-mail address.
d378 1
a378 1
Explanations of common misuses and misunderstandings should be explained
d381 2
a382 1
Extant bugs should be described in this section.
d388 1
a388 1
control character ,
d424 1
a424 1
raised (unless in the case of
d427 2
a428 2
or
.Sx \&na ) .
d691 1
a691 1
The saved paragraph left-margin width is re-set to the default.
d788 1
a788 1
The paragraph left-margin width is re-set to the default.
d796 1
a796 1
The paragraph left-margin width is re-set to the default.
d805 1
a805 1
At least the upper-case document title
d807 1
a807 1
and numeric manual section
d960 11
d972 1
a972 1
The
@

