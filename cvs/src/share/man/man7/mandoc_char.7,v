head	1.31;
access;
symbols
	OPENBSD_6_1:1.28.0.4
	OPENBSD_6_1_BASE:1.28
	OPENBSD_6_0:1.27.0.4
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.26.0.4
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.23.0.2
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.20.0.6
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.4
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.14.0.6
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.4
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.2
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2;
locks; strict;
comment	@.\" @;


1.31
date	2017.06.02.12.41.28;	author schwarze;	state Exp;
branches;
next	1.30;
commitid	yquNWge1dwMN4Llf;

1.30
date	2017.05.17.23.39.15;	author schwarze;	state Exp;
branches;
next	1.29;
commitid	NS31TjVzE5bXHybH;

1.29
date	2017.04.30.15.05.27;	author schwarze;	state Exp;
branches;
next	1.28;
commitid	rLYwHw125ZLeqpuR;

1.28
date	2017.02.05.21.39.54;	author schwarze;	state Exp;
branches;
next	1.27;
commitid	TxA40cFQx2xfxfK2;

1.27
date	2015.09.01.01.19.46;	author bentley;	state Exp;
branches;
next	1.26;
commitid	IvLkOctE8arHmXBy;

1.26
date	2015.06.12.04.51.08;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	sg01lPYywB6b2psY;

1.25
date	2015.03.29.21.12.00;	author bentley;	state Exp;
branches;
next	1.24;
commitid	kvreILdjfOFt57KH;

1.24
date	2015.03.27.00.57.00;	author schwarze;	state Exp;
branches;
next	1.23;
commitid	4C5js2e6GFyR7o1I;

1.23
date	2015.01.20.18.54.33;	author tedu;	state Exp;
branches;
next	1.22;
commitid	s3Le5lNxQdP1lfC1;

1.22
date	2014.12.16.19.48.49;	author schwarze;	state Exp;
branches;
next	1.21;
commitid	bQiy5pJ5dFqQ1Nwf;

1.21
date	2014.12.15.19.41.24;	author schwarze;	state Exp;
branches;
next	1.20;
commitid	JUHaajrzjj0XKk1c;

1.20
date	2013.12.26.17.23.31;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2013.11.10.20.17.14;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2013.11.10.17.47.42;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2013.11.10.14.32.11;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2013.07.13.19.27.47;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2013.04.27.17.15.01;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2011.11.14.19.32.22;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2011.11.14.15.10.17;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2011.09.18.10.38.57;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2011.08.30.12.25.09;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2011.08.30.11.38.59;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2011.06.07.23.40.10;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2011.02.09.22.53.18;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2011.01.30.16.05.29;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.28.18.13.52;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.14.15.03.01;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2010.04.04.13.41.23;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2010.03.26.15.16.06;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2010.01.06.23.28.13;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.03.23.29.03;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.31
log
@add about 15 missing character escape sequences found in groff_char(7);
triggered by multimedia/mkvtoolnix mkvmerge(1) using \(S2
@
text
@.\"	$OpenBSD: mandoc_char.7,v 1.30 2017/05/17 23:39:15 schwarze Exp $
.\"
.\" Copyright (c) 2003 Jason McIntyre <jmc@@openbsd.org>
.\" Copyright (c) 2009, 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
.\" Copyright (c) 2011, 2013, 2015, 2017 Ingo Schwarze <schwarze@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: May 17 2017 $
.Dt MANDOC_CHAR 7
.Os
.Sh NAME
.Nm mandoc_char
.Nd mandoc special characters
.Sh DESCRIPTION
This page documents the
.Xr roff 7
escape sequences accepted by
.Xr mandoc 1
to represent special characters in
.Xr mdoc 7
and
.Xr man 7
documents.
.Pp
The rendering depends on the
.Xr mandoc 1
output mode; in ASCII output, most characters are completely
unintelligible.
For that reason, using any of the special characters documented here,
except those discussed in the
.Sx DESCRIPTION ,
is strongly discouraged; they are supported merely for backwards
compatibility with existing documents.
.Pp
In particular, in English manual pages, do not use special-character
escape sequences to represent national language characters in author
names; instead, provide ASCII transcriptions of the names.
.Ss Dashes and Hyphens
In typography there are different types of dashes of various width:
the hyphen (-),
the minus sign (\(mi),
the en-dash (\(en),
and the em-dash (\(em).
.Pp
Hyphens are used for adjectives;
to separate the two parts of a compound word;
or to separate a word across two successive lines of text.
The hyphen does not need to be escaped:
.Bd -unfilled -offset indent
blue-eyed
lorry-driver
.Ed
.Pp
If a word on a text input line contains a hyphen, a formatter may decide
to insert an output line break after the hyphen if that helps filling
the current output line, but the whole word would overflow the line.
If it is important that the word is not broken across lines in this
way, a zero-width space
.Pq Sq \e&
can be inserted before or after the hyphen.
While
.Xr mandoc 1
never breaks the output line after hyphens adjacent to a zero-width
space, after any of the other dash- or hyphen-like characters
represented by escape sequences, or after hyphens inside words in
macro arguments, other software may not respect these rules and may
break the line even in such cases.
.Pp
Some
.Xr roff 7
implementations contains dictionaries allowing to break the line
at syllable boundaries even inside words that contain no hyphens.
Such automatic hyphenation is not supported by
.Xr mandoc 1 ,
which only breaks the line at whitespace, and inside words only
after existing hyphens.
.Pp
The mathematical minus sign is used for negative numbers or subtraction.
It should be written as
.Sq \e(mi :
.Bd -unfilled -offset indent
a = 3 \e(mi 1;
b = \e(mi2;
.Ed
.Pp
The en-dash is used to separate the two elements of a range,
or can be used the same way as an em-dash.
It should be written as
.Sq \e(en :
.Bd -unfilled -offset indent
pp. 95\e(en97.
Go away \e(en or else!
.Ed
.Pp
The em-dash can be used to show an interruption
or can be used the same way as colons, semi-colons, or parentheses.
It should be written as
.Sq \e(em :
.Bd -unfilled -offset indent
Three things \e(em apples, oranges, and bananas.
This is not that \e(em rather, this is that.
.Ed
.Pp
Note:
hyphens, minus signs, and en-dashes look identical under normal ASCII output.
Other formats, such as PostScript, render them correctly,
with differing widths.
.Ss Spaces
To separate words in normal text, for indenting and alignment
in literal context, and when none of the following special cases apply,
just use the normal space character
.Pq Sq \  .
.Pp
When filling text, output lines may be broken between words, i.e. at space
characters.
To prevent a line break between two particular words,
use the unpaddable non-breaking space escape sequence
.Pq Sq \e\ \&
instead of the normal space character.
For example, the input string
.Dq number\e\ 1
will be kept together as
.Dq number\ 1
on the same output line.
.Pp
On request and macro lines, the normal space character serves as an
argument delimiter.
To include whitespace into arguments, quoting is usually the best choice;
see the MACRO SYNTAX section in
.Xr roff 7 .
In some cases, using the non-breaking space escape sequence
.Pq Sq \e\ \&
may be preferable.
.Pp
To escape macro names and to protect whitespace at the end
of input lines, the zero-width space
.Pq Sq \e&
is often useful.
For example, in
.Xr mdoc 7 ,
a normal space character can be displayed in single quotes in either
of the following ways:
.Pp
.Dl .Sq \(dq \(dq
.Dl .Sq \e \e&
.Ss Quotes
On request and macro lines, the double-quote character
.Pq Sq \(dq
is handled specially to allow quoting.
One way to prevent this special handling is by using the
.Sq \e(dq
escape sequence.
.Pp
Note that on text lines, literal double-quote characters can be used
verbatim.
All other quote-like characters can be used verbatim as well,
even on request and macro lines.
.Ss Accents
In output modes supporting such special output characters, for example
.Fl T Cm pdf ,
and sometimes less consistently in
.Fl T Cm utf8 ,
some
.Xr roff 7
formatters convert the following ASCII input characters to the
following Unicode special output characters:
.Bl -column x(ga U+2018 -offset indent
.It \(ga Ta U+2018 Ta left single quotation mark
.It \(aq Ta U+2019 Ta right single quotation mark
.It \(ti Ta U+02DC Ta small tilde
.It \(ha Ta U+02C6 Ta modifier letter circumflex
.El
.Pp
In prose, this automatic substitution is often desirable;
but when these characters have to be displayed as plain ASCII
characters, for example in source code samples, they require
escaping to render as follows:
.Bl -column x(ga U+2018 -offset indent
.It \e(ga Ta U+0060 Ta grave accent
.It \e(aq Ta U+0027 Ta apostrophe
.It \e(ti Ta U+007E Ta tilde
.It \e(ha Ta U+005E Ta circumflex accent
.El
.Ss Periods
The period
.Pq Sq \&.
is handled specially at the beginning of an input line,
where it introduces a
.Xr roff 7
request or a macro, and when appearing alone as a macro argument in
.Xr mdoc 7 .
In such situations, prepend a zero-width space
.Pq Sq \e&.
to make it behave like normal text.
.Pp
Do not use the
.Sq \e.
escape sequence.
It does not prevent special handling of the period.
.Ss Backslashes
To include a literal backslash
.Pq Sq \e
into the output, use the
.Pq Sq \ee
escape sequence.
.Pp
Note that doubling it
.Pq Sq \e\e
is not the right way to output a backslash.
Because
.Xr mandoc 1
does not implement full
.Xr roff 7
functionality, it may work with
.Xr mandoc 1 ,
but it may have weird effects on complete
.Xr roff 7
implementations.
.Sh SPECIAL CHARACTERS
Special characters are encoded as
.Sq \eX
.Pq for a one-character escape ,
.Sq \e(XX
.Pq two-character ,
and
.Sq \e[N]
.Pq N-character .
For details, see the
.Em Special Characters
subsection of the
.Xr roff 7
manual.
.Pp
Spacing:
.Bl -column "Input" "Description" -offset indent -compact
.It Em Input Ta Em Description
.It Sq \e\ \& Ta unpaddable non-breaking space
.It \e\(ti   Ta paddable non-breaking space
.It \e0      Ta unpaddable, breaking digit-width space
.It \e|      Ta one-sixth \e(em narrow space, zero width in nroff mode
.It \e^      Ta one-twelfth \e(em half-narrow space, zero width in nroff
.It \e&      Ta zero-width space
.It \e%      Ta zero-width space allowing hyphenation
.El
.Pp
Lines:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(ba    Ta \(ba        Ta bar
.It \e(br    Ta \(br        Ta box rule
.It \e(ul    Ta \(ul        Ta underscore
.It \e(rn    Ta \(rn        Ta overline
.It \e(bb    Ta \(bb        Ta broken bar
.It \e(sl    Ta \(sl        Ta forward slash
.It \e(rs    Ta \(rs        Ta backward slash
.El
.Pp
Text markers:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(ci    Ta \(ci        Ta circle
.It \e(bu    Ta \(bu        Ta bullet
.It \e(dd    Ta \(dd        Ta double dagger
.It \e(dg    Ta \(dg        Ta dagger
.It \e(lz    Ta \(lz        Ta lozenge
.It \e(sq    Ta \(sq        Ta white square
.It \e(ps    Ta \(ps        Ta paragraph
.It \e(sc    Ta \(sc        Ta section
.It \e(lh    Ta \(lh        Ta left hand
.It \e(rh    Ta \(rh        Ta right hand
.It \e(at    Ta \(at        Ta at
.It \e(sh    Ta \(sh        Ta hash (pound)
.It \e(CR    Ta \(CR        Ta carriage return
.It \e(OK    Ta \(OK        Ta check mark
.It \e(CL    Ta \(CL        Ta club suit
.It \e(SP    Ta \(SP        Ta spade suit
.It \e(HE    Ta \(HE        Ta heart suit
.It \e(DI    Ta \(DI        Ta diamond suit
.El
.Pp
Legal symbols:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(co    Ta \(co        Ta copyright
.It \e(rg    Ta \(rg        Ta registered
.It \e(tm    Ta \(tm        Ta trademarked
.El
.Pp
Punctuation:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(em    Ta \(em        Ta em-dash
.It \e(en    Ta \(en        Ta en-dash
.It \e(hy    Ta \(hy        Ta hyphen
.It \ee      Ta \e          Ta back-slash
.It \e.      Ta \.          Ta period
.It \e(r!    Ta \(r!        Ta upside-down exclamation
.It \e(r?    Ta \(r?        Ta upside-down question
.El
.Pp
Quotes:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(Bq    Ta \(Bq        Ta right low double-quote
.It \e(bq    Ta \(bq        Ta right low single-quote
.It \e(lq    Ta \(lq        Ta left double-quote
.It \e(rq    Ta \(rq        Ta right double-quote
.It \e(oq    Ta \(oq        Ta left single-quote
.It \e(cq    Ta \(cq        Ta right single-quote
.It \e(aq    Ta \(aq        Ta apostrophe quote (text)
.It \e(dq    Ta \(dq        Ta double quote (text)
.It \e(Fo    Ta \(Fo        Ta left guillemet
.It \e(Fc    Ta \(Fc        Ta right guillemet
.It \e(fo    Ta \(fo        Ta left single guillemet
.It \e(fc    Ta \(fc        Ta right single guillemet
.El
.Pp
Brackets:
.Bl -column "xxbracketrightbtx" Rendered Description -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(lB    Ta \(lB        Ta left bracket
.It \e(rB    Ta \(rB        Ta right bracket
.It \e(lC    Ta \(lC        Ta left brace
.It \e(rC    Ta \(rC        Ta right brace
.It \e(la    Ta \(la        Ta left angle
.It \e(ra    Ta \(ra        Ta right angle
.It \e(bv    Ta \(bv        Ta brace extension
.It \e[braceex] Ta \[braceex] Ta brace extension
.It \e[bracketlefttp] Ta \[bracketlefttp] Ta top-left hooked bracket
.It \e[bracketleftbt] Ta \[bracketleftbt] Ta bottom-left hooked bracket
.It \e[bracketleftex] Ta \[bracketleftex] Ta left hooked bracket extension
.It \e[bracketrighttp] Ta \[bracketrighttp] Ta top-right hooked bracket
.It \e[bracketrightbt] Ta \[bracketrightbt] Ta bottom-right hooked bracket
.It \e[bracketrightex] Ta \[bracketrightex] Ta right hooked bracket extension
.It \e(lt    Ta \(lt        Ta top-left hooked brace
.It \e[bracelefttp] Ta \[bracelefttp] Ta top-left hooked brace
.It \e(lk    Ta \(lk        Ta mid-left hooked brace
.It \e[braceleftmid] Ta \[braceleftmid] Ta mid-left hooked brace
.It \e(lb    Ta \(lb        Ta bottom-left hooked brace
.It \e[braceleftbt] Ta \[braceleftbt] Ta bottom-left hooked brace
.It \e[braceleftex] Ta \[braceleftex] Ta left hooked brace extension
.It \e(rt    Ta \(rt        Ta top-left hooked brace
.It \e[bracerighttp] Ta \[bracerighttp] Ta top-right hooked brace
.It \e(rk    Ta \(rk        Ta mid-right hooked brace
.It \e[bracerightmid] Ta \[bracerightmid] Ta mid-right hooked brace
.It \e(rb    Ta \(rb        Ta bottom-right hooked brace
.It \e[bracerightbt] Ta \[bracerightbt] Ta bottom-right hooked brace
.It \e[bracerightex] Ta \[bracerightex] Ta right hooked brace extension
.It \e[parenlefttp] Ta \[parenlefttp] Ta top-left hooked parenthesis
.It \e[parenleftbt] Ta \[parenleftbt] Ta bottom-left hooked parenthesis
.It \e[parenleftex] Ta \[parenleftex] Ta left hooked parenthesis extension
.It \e[parenrighttp] Ta \[parenrighttp] Ta top-right hooked parenthesis
.It \e[parenrightbt] Ta \[parenrightbt] Ta bottom-right hooked parenthesis
.It \e[parenrightex] Ta \[parenrightex] Ta right hooked parenthesis extension
.El
.Pp
Arrows:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(<-    Ta \(<-        Ta left arrow
.It \e(->    Ta \(->        Ta right arrow
.It \e(<>    Ta \(<>        Ta left-right arrow
.It \e(da    Ta \(da        Ta down arrow
.It \e(ua    Ta \(ua        Ta up arrow
.It \e(va    Ta \(va        Ta up-down arrow
.It \e(lA    Ta \(lA        Ta left double-arrow
.It \e(rA    Ta \(rA        Ta right double-arrow
.It \e(hA    Ta \(hA        Ta left-right double-arrow
.It \e(uA    Ta \(uA        Ta up double-arrow
.It \e(dA    Ta \(dA        Ta down double-arrow
.It \e(vA    Ta \(vA        Ta up-down double-arrow
.It \e(an    Ta \(an        Ta horizontal arrow extension
.El
.Pp
Logical:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(AN    Ta \(AN        Ta logical and
.It \e(OR    Ta \(OR        Ta logical or
.It \e(no    Ta \(no        Ta logical not
.It \e[tno]  Ta \[tno]      Ta logical not (text)
.It \e(te    Ta \(te        Ta existential quantifier
.It \e(fa    Ta \(fa        Ta universal quantifier
.It \e(st    Ta \(st        Ta such that
.It \e(tf    Ta \(tf        Ta therefore
.It \e(3d    Ta \(3d        Ta therefore
.It \e(or    Ta \(or        Ta bitwise or
.El
.Pp
Mathematical:
.Bl -column "xxcoproductxx" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(pl    Ta \(pl        Ta plus
.It \e(mi    Ta \(mi        Ta minus
.It \e-      Ta \-          Ta minus (text)
.It \e(-+    Ta \(-+        Ta minus-plus
.It \e(+-    Ta \(+-        Ta plus-minus
.It \e[t+-]  Ta \[t+-]      Ta plus-minus (text)
.It \e(pc    Ta \(pc        Ta center-dot
.It \e(mu    Ta \(mu        Ta multiply
.It \e[tmu]  Ta \[tmu]      Ta multiply (text)
.It \e(c*    Ta \(c*        Ta circle-multiply
.It \e(c+    Ta \(c+        Ta circle-plus
.It \e(di    Ta \(di        Ta divide
.It \e[tdi]  Ta \[tdi]      Ta divide (text)
.It \e(f/    Ta \(f/        Ta fraction
.It \e(**    Ta \(**        Ta asterisk
.It \e(<=    Ta \(<=        Ta less-than-equal
.It \e(>=    Ta \(>=        Ta greater-than-equal
.It \e(<<    Ta \(<<        Ta much less
.It \e(>>    Ta \(>>        Ta much greater
.It \e(eq    Ta \(eq        Ta equal
.It \e(!=    Ta \(!=        Ta not equal
.It \e(==    Ta \(==        Ta equivalent
.It \e(ne    Ta \(ne        Ta not equivalent
.It \e(ap    Ta \(ap        Ta tilde operator
.It \e(|=    Ta \(|=        Ta asymptotically equal
.It \e(=\(ti Ta \(=~        Ta approximately equal
.It \e(\(ti\(ti Ta \(~~        Ta almost equal
.It \e(\(ti= Ta \(~=        Ta almost equal
.It \e(pt    Ta \(pt        Ta proportionate
.It \e(es    Ta \(es        Ta empty set
.It \e(mo    Ta \(mo        Ta element
.It \e(nm    Ta \(nm        Ta not element
.It \e(sb    Ta \(sb        Ta proper subset
.It \e(nb    Ta \(nb        Ta not subset
.It \e(sp    Ta \(sp        Ta proper superset
.It \e(nc    Ta \(nc        Ta not superset
.It \e(ib    Ta \(ib        Ta reflexive subset
.It \e(ip    Ta \(ip        Ta reflexive superset
.It \e(ca    Ta \(ca        Ta intersection
.It \e(cu    Ta \(cu        Ta union
.It \e(/_    Ta \(/_        Ta angle
.It \e(pp    Ta \(pp        Ta perpendicular
.It \e(is    Ta \(is        Ta integral
.It \e[integral] Ta \[integral] Ta integral
.It \e[sum]    Ta \[sum]   Ta summation
.It \e[product] Ta \[product] Ta product
.It \e[coproduct] Ta \[coproduct] Ta coproduct
.It \e(gr    Ta \(gr        Ta gradient
.It \e(sr    Ta \(sr        Ta square root
.It \e[sqrt] Ta \[sqrt]     Ta square root
.It \e(lc    Ta \(lc        Ta left-ceiling
.It \e(rc    Ta \(rc        Ta right-ceiling
.It \e(lf    Ta \(lf        Ta left-floor
.It \e(rf    Ta \(rf        Ta right-floor
.It \e(if    Ta \(if        Ta infinity
.It \e(Ah    Ta \(Ah        Ta aleph
.It \e(Im    Ta \(Im        Ta imaginary
.It \e(Re    Ta \(Re        Ta real
.It \e(wp    Ta \(wp        Ta Weierstrass p
.It \e(pd    Ta \(pd        Ta partial differential
.It \e(-h    Ta \(-h        Ta Planck constant over 2\(*p
.It \e[hbar] Ta \[hbar]     Ta Planck constant over 2\(*p
.It \e(12    Ta \(12        Ta one-half
.It \e(14    Ta \(14        Ta one-fourth
.It \e(34    Ta \(34        Ta three-fourths
.It \e(18    Ta \(18        Ta one-eighth
.It \e(38    Ta \(38        Ta three-eighths
.It \e(58    Ta \(58        Ta five-eighths
.It \e(78    Ta \(78        Ta seven-eighths
.It \e(S1    Ta \(S1        Ta superscript 1
.It \e(S2    Ta \(S2        Ta superscript 2
.It \e(S3    Ta \(S3        Ta superscript 3
.El
.Pp
Ligatures:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(ff    Ta \(ff        Ta ff ligature
.It \e(fi    Ta \(fi        Ta fi ligature
.It \e(fl    Ta \(fl        Ta fl ligature
.It \e(Fi    Ta \(Fi        Ta ffi ligature
.It \e(Fl    Ta \(Fl        Ta ffl ligature
.It \e(AE    Ta \(AE        Ta AE
.It \e(ae    Ta \(ae        Ta ae
.It \e(OE    Ta \(OE        Ta OE
.It \e(oe    Ta \(oe        Ta oe
.It \e(ss    Ta \(ss        Ta German eszett
.It \e(IJ    Ta \(IJ        Ta IJ ligature
.It \e(ij    Ta \(ij        Ta ij ligature
.El
.Pp
Accents:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(a"    Ta \(a"        Ta Hungarian umlaut
.It \e(a-    Ta \(a-        Ta macron
.It \e(a.    Ta \(a.        Ta dotted
.It \e(a^    Ta \(a^        Ta circumflex
.It \e(aa    Ta \(aa        Ta acute
.It \e\(aq   Ta \'          Ta acute
.It \e(ga    Ta \(ga        Ta grave
.It \e\(ga   Ta \`          Ta grave
.It \e(ab    Ta \(ab        Ta breve
.It \e(ac    Ta \(ac        Ta cedilla
.It \e(ad    Ta \(ad        Ta dieresis
.It \e(ah    Ta \(ah        Ta caron
.It \e(ao    Ta \(ao        Ta ring
.It \e(a\(ti Ta \(a~        Ta tilde
.It \e(ho    Ta \(ho        Ta ogonek
.It \e(ha    Ta \(ha        Ta hat (text)
.It \e(ti    Ta \(ti        Ta tilde (text)
.El
.Pp
Accented letters:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(\(aqA Ta \('A        Ta acute A
.It \e(\(aqE Ta \('E        Ta acute E
.It \e(\(aqI Ta \('I        Ta acute I
.It \e(\(aqO Ta \('O        Ta acute O
.It \e(\(aqU Ta \('U        Ta acute U
.It \e(\(aqa Ta \('a        Ta acute a
.It \e(\(aqe Ta \('e        Ta acute e
.It \e(\(aqi Ta \('i        Ta acute i
.It \e(\(aqo Ta \('o        Ta acute o
.It \e(\(aqu Ta \('u        Ta acute u
.It \e(\(gaA Ta \(`A        Ta grave A
.It \e(\(gaE Ta \(`E        Ta grave E
.It \e(\(gaI Ta \(`I        Ta grave I
.It \e(\(gaO Ta \(`O        Ta grave O
.It \e(\(gaU Ta \(`U        Ta grave U
.It \e(\(gaa Ta \(`a        Ta grave a
.It \e(\(gae Ta \(`e        Ta grave e
.It \e(\(gai Ta \(`i        Ta grave i
.It \e(\(gao Ta \(`i        Ta grave o
.It \e(\(gau Ta \(`u        Ta grave u
.It \e(\(tiA Ta \(~A        Ta tilde A
.It \e(\(tiN Ta \(~N        Ta tilde N
.It \e(\(tiO Ta \(~O        Ta tilde O
.It \e(\(tia Ta \(~a        Ta tilde a
.It \e(\(tin Ta \(~n        Ta tilde n
.It \e(\(tio Ta \(~o        Ta tilde o
.It \e(:A    Ta \(:A        Ta dieresis A
.It \e(:E    Ta \(:E        Ta dieresis E
.It \e(:I    Ta \(:I        Ta dieresis I
.It \e(:O    Ta \(:O        Ta dieresis O
.It \e(:U    Ta \(:U        Ta dieresis U
.It \e(:a    Ta \(:a        Ta dieresis a
.It \e(:e    Ta \(:e        Ta dieresis e
.It \e(:i    Ta \(:i        Ta dieresis i
.It \e(:o    Ta \(:o        Ta dieresis o
.It \e(:u    Ta \(:u        Ta dieresis u
.It \e(:y    Ta \(:y        Ta dieresis y
.It \e(^A    Ta \(^A        Ta circumflex A
.It \e(^E    Ta \(^E        Ta circumflex E
.It \e(^I    Ta \(^I        Ta circumflex I
.It \e(^O    Ta \(^O        Ta circumflex O
.It \e(^U    Ta \(^U        Ta circumflex U
.It \e(^a    Ta \(^a        Ta circumflex a
.It \e(^e    Ta \(^e        Ta circumflex e
.It \e(^i    Ta \(^i        Ta circumflex i
.It \e(^o    Ta \(^o        Ta circumflex o
.It \e(^u    Ta \(^u        Ta circumflex u
.It \e(,C    Ta \(,C        Ta cedilla C
.It \e(,c    Ta \(,c        Ta cedilla c
.It \e(/L    Ta \(/L        Ta stroke L
.It \e(/l    Ta \(/l        Ta stroke l
.It \e(/O    Ta \(/O        Ta stroke O
.It \e(/o    Ta \(/o        Ta stroke o
.It \e(oA    Ta \(oA        Ta ring A
.It \e(oa    Ta \(oa        Ta ring a
.El
.Pp
Special letters:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(-D    Ta \(-D        Ta Eth
.It \e(Sd    Ta \(Sd        Ta eth
.It \e(TP    Ta \(TP        Ta Thorn
.It \e(Tp    Ta \(Tp        Ta thorn
.It \e(.i    Ta \(.i        Ta dotless i
.It \e(.j    Ta \(.j        Ta dotless j
.El
.Pp
Currency:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(Do    Ta \(Do        Ta dollar
.It \e(ct    Ta \(ct        Ta cent
.It \e(Eu    Ta \(Eu        Ta Euro symbol
.It \e(eu    Ta \(eu        Ta Euro symbol
.It \e(Ye    Ta \(Ye        Ta yen
.It \e(Po    Ta \(Po        Ta pound
.It \e(Cs    Ta \(Cs        Ta Scandinavian
.It \e(Fn    Ta \(Fn        Ta florin
.El
.Pp
Units:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(de    Ta \(de        Ta degree
.It \e(%0    Ta \(%0        Ta per-thousand
.It \e(fm    Ta \(fm        Ta minute
.It \e(sd    Ta \(sd        Ta second
.It \e(mc    Ta \(mc        Ta micro
.It \e(Of    Ta \(Of        Ta Spanish female ordinal
.It \e(Om    Ta \(Om        Ta Spanish masculine ordinal
.El
.Pp
Greek letters:
.Bl -column "Input" "Rendered" "Description" -offset indent -compact
.It Em Input Ta Em Rendered Ta Em Description
.It \e(*A    Ta \(*A        Ta Alpha
.It \e(*B    Ta \(*B        Ta Beta
.It \e(*G    Ta \(*G        Ta Gamma
.It \e(*D    Ta \(*D        Ta Delta
.It \e(*E    Ta \(*E        Ta Epsilon
.It \e(*Z    Ta \(*Z        Ta Zeta
.It \e(*Y    Ta \(*Y        Ta Eta
.It \e(*H    Ta \(*H        Ta Theta
.It \e(*I    Ta \(*I        Ta Iota
.It \e(*K    Ta \(*K        Ta Kappa
.It \e(*L    Ta \(*L        Ta Lambda
.It \e(*M    Ta \(*M        Ta Mu
.It \e(*N    Ta \(*N        Ta Nu
.It \e(*C    Ta \(*C        Ta Xi
.It \e(*O    Ta \(*O        Ta Omicron
.It \e(*P    Ta \(*P        Ta Pi
.It \e(*R    Ta \(*R        Ta Rho
.It \e(*S    Ta \(*S        Ta Sigma
.It \e(*T    Ta \(*T        Ta Tau
.It \e(*U    Ta \(*U        Ta Upsilon
.It \e(*F    Ta \(*F        Ta Phi
.It \e(*X    Ta \(*X        Ta Chi
.It \e(*Q    Ta \(*Q        Ta Psi
.It \e(*W    Ta \(*W        Ta Omega
.It \e(*a    Ta \(*a        Ta alpha
.It \e(*b    Ta \(*b        Ta beta
.It \e(*g    Ta \(*g        Ta gamma
.It \e(*d    Ta \(*d        Ta delta
.It \e(*e    Ta \(*e        Ta epsilon
.It \e(*z    Ta \(*z        Ta zeta
.It \e(*y    Ta \(*y        Ta eta
.It \e(*h    Ta \(*h        Ta theta
.It \e(*i    Ta \(*i        Ta iota
.It \e(*k    Ta \(*k        Ta kappa
.It \e(*l    Ta \(*l        Ta lambda
.It \e(*m    Ta \(*m        Ta mu
.It \e(*n    Ta \(*n        Ta nu
.It \e(*c    Ta \(*c        Ta xi
.It \e(*o    Ta \(*o        Ta omicron
.It \e(*p    Ta \(*p        Ta pi
.It \e(*r    Ta \(*r        Ta rho
.It \e(*s    Ta \(*s        Ta sigma
.It \e(*t    Ta \(*t        Ta tau
.It \e(*u    Ta \(*u        Ta upsilon
.It \e(*f    Ta \(*f        Ta phi
.It \e(*x    Ta \(*x        Ta chi
.It \e(*q    Ta \(*q        Ta psi
.It \e(*w    Ta \(*w        Ta omega
.It \e(+h    Ta \(+h        Ta theta variant
.It \e(+f    Ta \(+f        Ta phi variant
.It \e(+p    Ta \(+p        Ta pi variant
.It \e(+e    Ta \(+e        Ta epsilon variant
.It \e(ts    Ta \(ts        Ta sigma terminal
.El
.Sh PREDEFINED STRINGS
Predefined strings are inherited from the macro packages of historical
troff implementations.
They are
.Em not recommended
for use, as they differ across implementations.
Manuals using these predefined strings are almost certainly not
portable.
.Pp
Their syntax is similar to special characters, using
.Sq \e*X
.Pq for a one-character escape ,
.Sq \e*(XX
.Pq two-character ,
and
.Sq \e*[N]
.Pq N-character .
For details, see the
.Em Predefined Strings
subsection of the
.Xr roff 7
manual.
.Bl -column "Input" "Rendered" "Description" -offset indent
.It Em Input Ta Em Rendered Ta Em Description
.It \e*(Ba   Ta \*(Ba       Ta vertical bar
.It \e*(Ne   Ta \*(Ne       Ta not equal
.It \e*(Ge   Ta \*(Ge       Ta greater-than-equal
.It \e*(Le   Ta \*(Le       Ta less-than-equal
.It \e*(Gt   Ta \*(Gt       Ta greater-than
.It \e*(Lt   Ta \*(Lt       Ta less-than
.It \e*(Pm   Ta \*(Pm       Ta plus-minus
.It \e*(If   Ta \*(If       Ta infinity
.It \e*(Pi   Ta \*(Pi       Ta pi
.It \e*(Na   Ta \*(Na       Ta NaN
.It \e*(Am   Ta \*(Am       Ta ampersand
.It \e*R     Ta \*R         Ta restricted mark
.It \e*(Tm   Ta \*(Tm       Ta trade mark
.It \e*q     Ta \*q         Ta double-quote
.It \e*(Rq   Ta \*(Rq       Ta right-double-quote
.It \e*(Lq   Ta \*(Lq       Ta left-double-quote
.It \e*(lp   Ta \*(lp       Ta right-parenthesis
.It \e*(rp   Ta \*(rp       Ta left-parenthesis
.It \e*(lq   Ta \*(lq       Ta left double-quote
.It \e*(rq   Ta \*(rq       Ta right double-quote
.It \e*(ua   Ta \*(ua       Ta up arrow
.It \e*(va   Ta \*(va       Ta up-down arrow
.It \e*(<=   Ta \*(<=       Ta less-than-equal
.It \e*(>=   Ta \*(>=       Ta greater-than-equal
.It \e*(aa   Ta \*(aa       Ta acute
.It \e*(ga   Ta \*(ga       Ta grave
.It \e*(Px   Ta \*(Px       Ta POSIX standard name
.It \e*(Ai   Ta \*(Ai       Ta ANSI standard name
.El
.Sh UNICODE CHARACTERS
The escape sequences
.Pp
.Dl \e[uXXXX] and \eC\(aquXXXX\(aq
.Pp
are interpreted as Unicode codepoints.
The codepoint must be in the range above U+0080 and less than U+10FFFF.
For compatibility, the hexadecimal digits
.Sq A
to
.Sq F
must be given as uppercase characters,
and points must be zero-padded to four characters; if
greater than four characters, no zero padding is allowed.
Unicode surrogates are not allowed.
.Sh NUMBERED CHARACTERS
For backward compatibility with existing manuals,
.Xr mandoc 1
also supports the
.Pp
.Dl \eN\(aq Ns Ar number Ns \(aq
.Pp
escape sequence, inserting the character
.Ar number
from the current character set into the output.
Of course, this is inherently non-portable and is already marked
as deprecated in the Heirloom roff manual.
For example, do not use \eN\(aq34\(aq, use \e(dq, or even the plain
.Sq \(dq
character where possible.
.Sh COMPATIBILITY
This section documents compatibility between mandoc and other
troff implementations, at this time limited to GNU troff
.Pq Qq groff .
.Pp
.Bl -dash -compact
.It
The \eN\(aq\(aq escape sequence is limited to printable characters; in
groff, it accepts arbitrary character numbers.
.It
In
.Fl T Ns Cm ascii ,
the
\e(ss, \e(nm, \e(nb, \e(nc, \e(ib, \e(ip, \e(pp, \e[sum], \e[product],
\e[coproduct], \e(gr, \e(-h, and \e(a. special characters render
differently between mandoc and groff.
.It
In
.Fl T Ns Cm html ,
the \e(\(ti=, \e(nb, and \e(nc special characters render differently
between mandoc and groff.
.It
The
.Fl T Ns Cm ps
and
.Fl T Ns Cm pdf
modes format like
.Fl T Ns Cm ascii
instead of rendering glyphs as in groff.
.It
The \e[radicalex], \e[sqrtex], and \e(ru special characters have been omitted
from mandoc either because they are poorly documented or they have no
known representation.
.El
.Sh SEE ALSO
.Xr mandoc 1 ,
.Xr man 7 ,
.Xr mdoc 7 ,
.Xr roff 7
.Sh AUTHORS
The
.Nm
manual page was written by
.An Kristaps Dzonsons Aq Mt kristaps@@bsd.lv .
.Sh CAVEATS
The predefined string
.Sq \e*(Ba
mimics the behaviour of the
.Sq \&|
character in
.Xr mdoc 7 ;
thus, if you wish to render a vertical bar with no side effects, use
the
.Sq \e(ba
escape.
@


1.30
log
@Delete the -T xhtml command line option.
It has been obsolete for more than two years.
Use -T html.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.29 2017/04/30 15:05:27 schwarze Exp $
d5 1
a5 1
.\" Copyright (c) 2011, 2013, 2015 Ingo Schwarze <schwarze@@openbsd.org>
d19 1
a19 1
.Dd $Mdocdate: April 30 2017 $
d286 4
d383 1
d462 1
d465 11
a475 3
.It \e[12]   Ta \[12]       Ta one-half
.It \e[14]   Ta \[14]       Ta one-fourth
.It \e[34]   Ta \[34]       Ta three-fourths
d609 2
@


1.29
log
@Mention that escaping "^" as "\(ha" in source code samples improves
portability, in particular when rendering to formats such as PDF
with real typesetters such as groff.

While here, make it even more explicit that the rendering of raw
ASCII accents ( ` ' ~ ^ ) found in the input is kind of a mess and
varies among implementations, software versions, macro sets, and
output devices.

Issue noticed when reading the groff_char(7) manual, and confirmed
by testing with current groff.

OK bentley@@, "certainly no objection" jmc@@

N.B.: Nobody will get scolded for ignoring this subtlety.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.28 2017/02/05 21:39:54 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: February 5 2017 $
d755 1
a755 3
.Fl T Ns Cm html
and
.Fl T Ns Cm xhtml ,
@


1.28
log
@document hyphenation
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.27 2015/09/01 01:19:46 bentley Exp $
d19 1
a19 1
.Dd $Mdocdate: September 1 2015 $
d172 2
d182 1
d193 1
@


1.27
log
@Recommend an unambiguous escape for minus signs instead of \-.

Historically, \- was used in troff for three cases: flags/pathnames,
en dashes, and minus signs. mandoc_char(7) currently recommends it
for minus signs, recommends \(en for en dashes, and doesn't mention
flags/pathnames.

In the old days, nroff rendered \- as ASCII '-', and troff rendered
it as en dash/minus (which were visually indistinguishable).

In Unicode, en dashes and minus signs are semantically distinct and
encoded differently (U+2013 for en dash, U+2212 for minus), and
often rendered differently too. Meanwhile ASCII '-' has been renamed
"hyphen-minus" and fonts typically render it closest to a hyphen, not
a minus.

There is very little consistency across roff implementations and output
formats for what Unicode character \- corresponds to. So at least for
minus signs, change the recommendation to the unambiguous \(mi escape.

ok jmc@@ (after reams of discussion)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.26 2015/06/12 04:51:08 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: June 12 2015 $
d64 24
@


1.26
log
@Kill trailing blank; no text change.
Issue found by Tony Sim <y2s1982 at gmail dot com>
during today's BSDCan Doc Sprint.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.25 2015/03/29 21:12:00 bentley Exp $
d19 1
a19 1
.Dd $Mdocdate: March 29 2015 $
d52 1
a52 1
the minus sign (\-),
d67 1
a67 1
.Sq \e- :
d69 2
a70 2
a = 3 \e- 1;
b = \e-2;
d723 1
a723 1
\e[coproduct], \e(gr, \e(\-h, and \e(a. special characters render
@


1.25
log
@Escape punctuation characters that have a different meaning in -Tpdf.

~, `, and ' get translated to non-ASCII characters by most troff
implementations when generating PostScript/PDF output. When the original
ASCII character is meant, it needs to be manually escaped.

discussed with jmc@@ schwarze@@; ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.24 2015/03/27 00:57:00 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: March 27 2015 $
d146 1
a146 1
In output modes supporting such special output characters, for example 
@


1.24
log
@Document that certain stand-alone accents need escaping in rare cases to
prevent them from being converted to Unicode replacements in PDF output.
Issue found by bentley@@, OK jmc@@ bentley@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.23 2015/01/20 18:54:33 tedu Exp $
d19 1
a19 1
.Dd $Mdocdate: January 20 2015 $
d221 1
a221 1
.It \e~      Ta paddable non-breaking space
d396 3
a398 3
.It \e(=~    Ta \(=~        Ta approximately equal
.It \e(~~    Ta \(~~        Ta almost equal
.It \e(~=    Ta \(~=        Ta almost equal
d461 1
a461 1
.It \e'      Ta \'          Ta acute
d463 1
a463 1
.It \e`      Ta \`          Ta grave
d469 1
a469 1
.It \e(a~    Ta \(a~        Ta tilde
d478 26
a503 26
.It \e('A    Ta \('A        Ta acute A
.It \e('E    Ta \('E        Ta acute E
.It \e('I    Ta \('I        Ta acute I
.It \e('O    Ta \('O        Ta acute O
.It \e('U    Ta \('U        Ta acute U
.It \e('a    Ta \('a        Ta acute a
.It \e('e    Ta \('e        Ta acute e
.It \e('i    Ta \('i        Ta acute i
.It \e('o    Ta \('o        Ta acute o
.It \e('u    Ta \('u        Ta acute u
.It \e(`A    Ta \(`A        Ta grave A
.It \e(`E    Ta \(`E        Ta grave E
.It \e(`I    Ta \(`I        Ta grave I
.It \e(`O    Ta \(`O        Ta grave O
.It \e(`U    Ta \(`U        Ta grave U
.It \e(`a    Ta \(`a        Ta grave a
.It \e(`e    Ta \(`e        Ta grave e
.It \e(`i    Ta \(`i        Ta grave i
.It \e(`o    Ta \(`i        Ta grave o
.It \e(`u    Ta \(`u        Ta grave u
.It \e(~A    Ta \(~A        Ta tilde A
.It \e(~N    Ta \(~N        Ta tilde N
.It \e(~O    Ta \(~O        Ta tilde O
.It \e(~a    Ta \(~a        Ta tilde a
.It \e(~n    Ta \(~n        Ta tilde n
.It \e(~o    Ta \(~o        Ta tilde o
d682 1
a682 1
.Dl \e[uXXXX] and \eC'uXXXX'
d706 1
a706 1
For example, do not use \eN'34', use \e(dq, or even the plain
d730 1
a730 1
the \e(~=, \e(nb, and \e(nc special characters render differently
@


1.23
log
@change spelling of centre to center. consistent with other man pages,
the name of the macro being described, and look(1).
ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.22 2014/12/16 19:48:49 schwarze Exp $
d5 1
a5 1
.\" Copyright (c) 2011 Ingo Schwarze <schwarze@@openbsd.org>
d19 1
a19 1
.Dd $Mdocdate: December 16 2014 $
d145 22
@


1.22
log
@correct -Tutf8 and -Thtml rendering of \(~=
and change the name of \(-~ to \(|= to agree with groff;
difference found by Carsten dot Kunze at arcor dot de
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.21 2014/12/15 19:41:24 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: December 15 2014 $
d355 1
a355 1
.It \e(pc    Ta \(pc        Ta centre-dot
@


1.21
log
@correct some character names to match groff;
reported by Carsten dot Kunze at arcor dot de
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.20 2013/12/26 17:23:31 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: December 26 2013 $
d372 5
a376 5
.It \e(=~    Ta \(=~        Ta congruent
.It \e(-~    Ta \(-~        Ta asymptotically congruent
.It \e(ap    Ta \(ap        Ta asymptotically similar
.It \e(~~    Ta \(~~        Ta approximately similar
.It \e(~=    Ta \(~=        Ta approximately equal
@


1.20
log
@Rework the documentation of Spaces, using the Ossanna/Kernighan/Ritter
Heirloom Nroff/Troff User's Manual at the authoritative reference.
Part of our text was outright wrong.

Also, refrain from advertising the paddable non-breaking space `\~'
in the DESCRIPTION, for three reasons:  For nroff mode, -Tascii, and
fixed width fonts in general, it makes no difference, so keep the
discussion simple.  Compared to `\ ', '\~' is of questionable portability.
And if you want to keep words together, it is also more usual that you
don't want padding to intervene either.

Finally, drop the `\c' escape sequence (interrupt text processing)
which is not a special character but an input processing instruction
akin to the \<newline> escape sequence.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.19 2013/11/10 20:17:14 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: November 10 2013 $
d213 1
a213 1
.It \e(rl    Ta \(rl        Ta overline
d276 1
a276 1
.Bl -column "xxbracketrightbpx" Rendered Description -offset indent -compact
d287 1
a287 1
.It \e[bracketleftbp] Ta \[bracketleftbp] Ta bottom-left hooked bracket
d290 1
a290 1
.It \e[bracketrightbp] Ta \[bracketrightbp] Ta bottom-right hooked bracket
d297 1
a297 1
.It \e[braceleftbp] Ta \[braceleftbp] Ta bottom-left hooked brace
d304 1
a304 1
.It \e[bracerightbp] Ta \[bracerightbp] Ta bottom-right hooked brace
d307 1
a307 1
.It \e[parenleftbp] Ta \[parenleftbp] Ta bottom-left hooked parenthesis
d310 1
a310 1
.It \e[parenrightbp] Ta \[parenrightbp] Ta bottom-right hooked parenthesis
@


1.19
log
@Support the alternative syntax \C'uXXXX' for Unicode characters.
It is already documented in the Heirloom troff manual,
and groff handles it as well.

Bug reported by Bjarni Ingi Gislason <bjarniig at rhi dot hi dot is>
on <bug-groff at gnu dot org>.  Well, admittedly, that bug was reported
against groff, but mandoc was even more broken than groff with respect
to this syntax...
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.18 2013/11/10 17:47:42 jmc Exp $
d101 1
a101 1
When filling text, lines may be broken between words, i.e. at space
d104 2
a105 2
use the non-breaking space escape sequence
.Pq Sq \e~
d108 1
a108 1
.Dq number\e~1
d110 1
a110 1
.Dq number\~1
d115 4
a118 4
To include whitespace into arguments, quoting is usually the best choice.
In some cases, using either the non-breaking
.Pq Sq \e~
or the breaking
d120 2
a121 1
space escape sequence may be preferable.
d198 5
a202 4
.It \e~      Ta non-breaking, non-collapsing space
.It \e       Ta breaking, non-collapsing n-width space
.It \e^      Ta zero-width space
.It \e%      Ta zero-width space
d204 1
a204 3
.It \e|      Ta zero-width space
.It \e0      Ta breaking, non-collapsing digit-width space
.It \ec      Ta removes any trailing space (if applicable)
d734 1
a734 1
The
d736 1
a736 1
escape mimics the behaviour of the
@


1.18
log
@zap trailing whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.17 2013/11/10 14:32:11 schwarze Exp $
d658 1
a658 1
The escape sequence
d660 1
a660 1
.Dl \e[uXXXX]
d662 1
a662 1
is interpreted as a Unicode codepoint.
@


1.17
log
@clarify that \[uXXXX] wants uppercase hex digits
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.16 2013/07/13 19:27:47 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: July 13 2013 $
d664 1
a664 1
For compatibility, the hexadecimal digits 
@


1.16
log
@For citing the names and email addresses of authors,
consistently use the style ".An name Aq Mt email".

Triggered by a question from Jan Stary <hans at stare dot cz>,
ok jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.15 2013/04/27 17:15:01 jmc Exp $
d19 1
a19 1
.Dd $Mdocdate: April 27 2013 $
d664 6
a669 1
For compatibility, points must be zero-padded to four characters; if
@


1.15
log
@- (mdoc.7) fix Xr to self
- double word fix
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.14 2011/11/14 19:32:22 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: November 14 2011 $
d727 1
a727 2
.An Kristaps Dzonsons ,
.Mt kristaps@@bsd.lv .
@


1.14
log
@zap end of line whitespace; noticed by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.13 2011/11/14 15:10:17 schwarze Exp $
d683 1
a683 1
This section documents compatibility between mandoc and other other
@


1.13
log
@Add lots of information about special characters that's actually needed
in practice, and discourage using fancy characters in manuals.
Text about "Dashes and Hyphens" by jmc@@.
Feedback and ok jmc@@, grudgingly ok kristaps@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.12 2011/09/18 10:38:57 schwarze Exp $
d19 1
a19 1
.Dd $Mdocdate: September 18 2011 $
d115 1
a115 1
To include whitespace into arguments, quoting is usually the best choice.  
@


1.12
log
@sync to mandoc 1.11.5:
document eqn(7) and many other improvements
from kristaps@@

no objection from deraadt@@ against adding an eqn.7 page
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.11 2011/08/30 12:25:09 jmc Exp $
d3 3
a5 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@bsd.lv>
d19 1
a19 1
.Dd $Mdocdate: August 30 2011 $
d26 3
a28 1
This page documents the special characters and predefined strings accepted by
d30 1
a30 1
to format
d36 145
a180 5
Both
.Xr mdoc 7
and
.Xr man 7
encode special characters with
d188 5
a192 31
One may generalise
.Sq \e(XX
as
.Sq \e[XX]
and
.Sq \eX
as
.Sq \e[X] .
Predefined strings are functionally similar to special characters, using
.Sq \e*X
.Pq for a one-character escape ,
.Sq \e*(XX
.Pq two-character ,
and
.Sq \e*[N]
.Pq N-character .
One may generalise
.Sq \e*(XX
as
.Sq \e*[XX]
and
.Sq \e*X
as
.Sq \e*[X] .
.Pp
Note that each output mode will have a different rendering of the
characters.
It's guaranteed that each input symbol will correspond to a
(more or less) meaningful output rendering, regardless the mode.
.Sh SPECIAL CHARACTERS
These are the preferred input symbols for producing special characters.
d612 14
d719 4
a722 1
.Xr mandoc 1
@


1.11
log
@in column lists, enforce the following ordering:

	.Bl -column header1 header2 ... <Bl flags>

mixing things up confuses mandoc, and adding flags in can screw up the list.
this hopefully just makes things a bit safer (and more consistent).

(one more bit of work left and all column lists should format how we want)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.10 2011/08/30 11:38:59 jmc Exp $
d291 3
d592 2
a593 1
.An Kristaps Dzonsons Aq kristaps@@bsd.lv .
@


1.10
log
@remove some pointless Pp/-compact combinations; either ingo or kristaps
will update mandoc repo
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.9 2011/06/07 23:40:10 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 7 2011 $
d77 1
a77 1
.Bl -column -compact -offset indent "Input" "Description"
d90 1
a90 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d102 1
a102 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d121 1
a121 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d129 1
a129 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d141 1
a141 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d158 1
a158 1
.Bl -column -compact -offset indent "xxbracketrightbpx" Rendered Description
d197 1
a197 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d214 1
a214 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d229 1
a229 1
.Bl -column -compact -offset indent "xxcoproductxx" "Rendered" "Description"
d294 1
a294 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d311 1
a311 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d333 1
a333 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d393 1
a393 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d404 1
a404 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d417 1
a417 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d427 1
a427 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
d491 1
a491 1
.Bl -column -offset indent "Input" "Rendered" "Description"
@


1.9
log
@bring in lots of improvements from kristaps@@;
jmc@@ agrees that it's easiest to first commit it,
then tweak it in the tree
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.8 2011/02/09 22:53:18 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: February 9 2011 $
d491 1
a491 2
.Pp
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
@


1.8
log
@Clean up the COMPATIBILITY section;
heavily based on a patch from kristaps@@ with some tweaks by me.
- Also talk about -Tps and -Tpdf.
- Use the same list style as in the other mandoc manuals.
- Replace a few macros by ones better suited.
- Some improvements of wording.
ok jmc@@ kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.7 2011/01/30 16:05:29 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 30 2011 $
d484 7
a490 2
These are not recommended for use, as they differ across
implementations:
d520 2
d523 10
d554 3
@


1.7
log
@Implement the \N'number' (numbered character) roff escape sequence.
Don't use it in new manuals, it is inherently non-portable, but we
need it for backward-compatibility with existing manuals, for example
in Xenocara driver pages.
ok kristaps@@ matthieu@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.6 2010/10/28 18:13:52 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: October 28 2010 $
d532 9
a540 8
This section documents compatibility of
.Nm
with older or existing versions of groff.
.Pp
The following render differently in
.Fl T Ns Ar ascii
output mode:
.Bd -ragged -offset indent
d542 22
a563 15
\e[coproduct], \e(gr, \e(-h, \e(a.
.Ed
.Pp
The following render differently in
.Fl T Ns Ar html
output mode:
.Bd -ragged -offset indent
\e(~=, \e(nb, \e(nc
.Ed
.Pp
Finally, the following have been omitted by being poorly documented or
having no known representation:
.Bd -ragged -offset indent
\e[radicalex], \e[sqrtex], \e(ru
.Ed
@


1.6
log
@no more groff;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.5 2010/05/14 15:03:01 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 14 2010 $
d516 15
@


1.5
log
@sync to mandoc 1.9.25:
* remove empty macro lines
* document Ba escape quirk
* update kristaps' mail address
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.4 2010/04/04 13:41:23 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: April 4 2010 $
d519 1
a519 2
with older or existing versions of
.Xr groff 1 .
@


1.4
log
@Adding the pod2man(1) special characters to mandoc_char(7) was a bad idea.
The mandoc_char(7) manual is supposed to document standard characters
for man(7) and mdoc(7), and these are not standard in any sense.
So move the documentation to an implementation-specific manual.

noticed by kristaps@@  and merged in 1.9.22
ok jmc@@  who also noticed that \*(TH broke the nroff -Tps build
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.3 2010/03/26 15:16:06 schwarze Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@kth.se>
d17 1
a17 1
.Dd $Mdocdate: March 26 2010 $
a19 2
.
.
a22 2
.
.
a30 1
.
a67 1
.
a72 2
.
.
a74 1
.
a87 1
.
a99 1
.
a118 1
.
a126 1
.
a138 1
.
a155 1
.
d158 1
a158 1
.Bl -column -compact -offset indent "x[bracketrightbp]" Rendered Description
a194 1
.
a211 1
.
a226 1
.
d229 1
a229 1
.Bl -column -compact -offset indent "Input" "Rendered" "Description"
a291 1
.
a308 1
.
a330 1
.
a390 1
.
a401 1
.
a414 1
.
a424 1
.
a482 2
.
.
a485 1
.
a515 2
.
.
a520 1
.
a528 1
.
a535 1
.
a541 2
.
.
a543 2
.
.
d548 12
a559 1
.An Kristaps Dzonsons Aq kristaps@@kth.se .
@


1.3
log
@sync with kristaps@@ version of mandoc_char(7) in mdocml-1.9.17

* additional predefined strings needed for Perl manuals,
  now also supported by mandoc(1) - but not recommended for
  general use because they are non-portable
* remove irrelevant STANDARDS

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc_char.7,v 1.2 2010/01/06 23:28:13 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 6 2010 $
a542 19
.It \e*(--   Ta \*(--       Ta dash
.It \e*(PI   Ta \*(PI       Ta pi
.It \e*(L"   Ta \*(L"       Ta left double-quote
.It \e*(R"   Ta \*(R"       Ta right double-quote
.It \e*(C+   Ta \*(C+       Ta C++
.It \e*(C`   Ta \*(C`       Ta left single-quote
.It \e*(C'   Ta \*(C'       Ta right single-quote
.It \e*(Aq   Ta \*(Aq       Ta apostrophe quote
.It \e*^     Ta \*^         Ta up-arrow
.It \e*,     Ta \*,         Ta comma
.It \e*~     Ta \*~         Ta tilde
.It \e*/     Ta \*/         Ta forward slash
.It \e*:     Ta \*:         Ta umlaut
.It \e*8     Ta \*8         Ta beta
.It \e*o     Ta \*o         Ta degree symbol
.It \e*(D-   Ta \*(D-       Ta Eth
.It \e*(d-   Ta \*(d-       Ta eth
.It \e*(TH   Ta \*(TH       Ta Thorn
.It \e*(th   Ta \*(th       Ta thorn
@


1.2
log
@miscellaneous cleanup:
* remove bogus '\\' entry, it is not a correct way to render a backslash
* fix column width specifications (problem noted by jmc@@
  and cause found by kristaps@@)
* mandoc_char(7) is not a utility (noticed by deraadt@@)
* improve wording of first sentence (from jmc@@)
* add OpenBSD RCS-Id (from jmc@@)
* kill whitespace at EOLs (from jmc@@)
ok kristaps@@,  "formatting looks good now" jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d17 1
a17 1
.Dd $Mdocdate: January 3 2010 $
d543 19
a597 13
.
.
.Sh STANDARDS
.Rs
.%A The Unicode Consortium
.%T The Unicode Standard: Worldwide Character Encoding, Version 5.2
.%D 1991
.Re
.Rs
.%A W3C
.%T HTML 4.01 Specification
.%D December, 1999
.Re
@


1.1
log
@This is not intended to document just the mandoc(1) program, but rather
man(7) and mdoc(7) special characters and predefined strings in general;
just as mandoc(1) is not intending to implement new languages,
but provide standard formatting for man(7) and mdoc(7) files,
whatever "standard" may mean in this context (sigh).
So move this to the right place.

noticed by deraadt@@
@
text
@d1 1
a1 1
.\"	$Id: mandoc_char.7,v 1.8 2009/12/24 02:08:14 schwarze Exp $
d16 2
a17 2
.\" 
.Dd $Mdocdate: December 24 2009 $
d28 1
a28 1
This documents the special characters and predefined strings accepted by 
d41 1
a41 1
encode special characters with 
d57 1
a57 1
Predefined strings are functionally similar to special characters, using 
d76 2
a77 1
characters.  It's guaranteed that each input symbol will correspond to a
d86 1
a86 1
.Bl -column -compact -offset indent 10m 20m
d100 1
a100 1
.Bl -column -compact -offset indent 10m 10m 10m
d113 1
a113 1
.Bl -column -compact -offset indent 10m 10m 10m
d133 1
a133 1
.Bl -column -compact -offset indent 10m 10m 10m
d142 1
a142 1
.Bl -column -compact -offset indent 10m 10m 10m
a146 1
.It \e\e     Ta \\          Ta back-slash
d155 1
a155 1
.Bl -column -compact -offset indent 10m 10m 10m
d173 1
a173 1
.Bl -column -compact -offset indent 10m 10m 10m
d213 1
a213 1
.Bl -column -compact -offset indent 10m 10m 10m
d231 1
a231 1
.Bl -column -compact -offset indent 10m 10m 10m
d247 1
a247 1
.Bl -column -compact -offset indent 10m 10m 10m
d313 1
a313 1
.Bl -column -compact -offset indent 10m 10m 10m
d331 1
a331 1
.Bl -column -compact -offset indent 10m 10m 10m
d354 1
a354 1
.Bl -column -compact -offset indent 10m 10m 10m
d415 1
a415 1
.Bl -column -compact -offset indent 10m 10m 10m
d427 1
a427 1
.Bl -column -compact -offset indent 10m 10m 10m
d441 1
a441 1
.Bl -column -compact -offset indent 10m 10m 10m
d452 1
a452 1
.Bl -column -compact -offset indent 10m 10m 10m
d515 1
a515 1
.Bl -column -compact -offset indent 10m 10m 10m
d597 1
a597 1
utility was written by 
@

