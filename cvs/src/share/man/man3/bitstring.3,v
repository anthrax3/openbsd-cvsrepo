head	1.15;
access;
symbols
	OPENBSD_6_1:1.15.0.8
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.12
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.24
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.22
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.20
	OPENBSD_5_0:1.13.0.18
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.16
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.14
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.10
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.12
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.8
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.6
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.10
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.8
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.6
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.4
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.9.0.10
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.8
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.6
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.4
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.15
date	2015.11.10.23.48.17;	author jmc;	state Exp;
branches;
next	1.14;
commitid	QU70QaxjyBAtj4Rv;

1.14
date	2013.06.05.03.42.03;	author tedu;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.31.19.19.48;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2005.03.07.22.10.28;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.23.30.12;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.20.09.13.38;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.15.14.31.19;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.10.26.00.37.03;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.19.19.25.23;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.06.05.13.18.31;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	98.11.26.04.32.10;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	98.11.25.04.33.45;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	98.10.08.03.38.20;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	98.06.15.17.55.59;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.23;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@.\"	$OpenBSD: bitstring.3,v 1.14 2013/06/05 03:42:03 tedu Exp $
.\"	$NetBSD: bitstring.3,v 1.4 1994/11/30 15:24:31 jtc Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Paul Vixie.
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)bitstring.3	8.1 (Berkeley) 7/19/93
.\"
.Dd $Mdocdate: June 5 2013 $
.Dt BIT_ALLOC 3
.Os
.Sh NAME
.Nm bit_alloc ,
.Nm bit_clear ,
.Nm bit_decl ,
.Nm bit_ffc ,
.Nm bit_ffs ,
.Nm bit_nclear ,
.Nm bit_nset ,
.Nm bit_set ,
.Nm bitstr_size ,
.Nm bit_test
.Nd bit-string manipulation macros
.Sh SYNOPSIS
.In bitstring.h
.Ft bitstr_t *
.Fn bit_alloc "int nbits"
.Fn bit_clear "bit_str name" "int bit"
.Fn bit_decl "bit_str name" "int nbits"
.Fn bit_ffc "bit_str name" "int nbits" "int *value"
.Fn bit_ffs "bit_str name" "int nbits" "int *value"
.Fn bit_nclear "bit_str name" "int start" "int stop"
.Fn bit_nset "bit_str name" "int start" "int stop"
.Fn bit_set "bit_str name" "int bit"
.Fn bitstr_size "int nbits"
.Fn bit_test "bit_str name" "int bit"
.Sh DESCRIPTION
These macros operate on strings of bits.
.Pp
The
.Fn bit_alloc
macro returns a pointer of type
.Li "bitstr_t *"
to sufficient space to store
.Fa nbits
bits, or
.Dv NULL
if no space is available.
.Pp
The
.Fn bit_decl
macro allocates sufficient space to store
.Fa nbits
bits on the stack.
.Pp
The
.Fn bitstr_size
macro returns the number of elements of type
.Li bitstr_t
necessary to store
.Fa nbits
bits.
This is useful for copying bit strings.
.Pp
The
.Fn bit_clear
and
.Fn bit_set
macros clear or set the zero-based numbered bit
.Fa bit ,
in the bit string
.Ar name .
.Pp
The
.Fn bit_nclear
and
.Fn bit_nset
macros clear or set the zero-based numbered bits from
.Fa start
to
.Fa stop
in the bit string
.Ar name .
.Pp
The
.Fn bit_test
macro evaluates to non-zero if the zero-based numbered bit
.Fa bit
of bit string
.Fa name
is set, and zero otherwise.
.Pp
The
.Fn bit_ffs
macro stores in the location referenced by
.Fa value
the zero-based number of the first bit set in the array of
.Fa nbits
bits referenced by
.Fa name .
If no bits are set, the location referenced by
.Fa value
is set to \-1.
.Pp
The
.Fn bit_ffc
macro stores in the location referenced by
.Fa value
the zero-based number of the first bit not set in the array of
.Fa nbits
bits referenced by
.Fa name .
If all bits are set, the location referenced by
.Fa value
is set to \-1.
.Pp
The arguments to these macros are evaluated only once and may safely
have side effects.
.Sh EXAMPLES
.Bd -literal -offset indent
#include <limits.h>
#include <bitstring.h>

\&...
#define	LPR_BUSY_BIT		0
#define	LPR_FORMAT_BIT		1
#define	LPR_DOWNLOAD_BIT	2
\&...
#define	LPR_AVAILABLE_BIT	9
#define	LPR_MAX_BITS		10

make_lpr_available()
{
	bitstr_t bit_decl(bitlist, LPR_MAX_BITS);
	...
	bit_nclear(bitlist, 0, LPR_MAX_BITS - 1);
	...
	if (!bit_test(bitlist, LPR_BUSY_BIT)) {
		bit_clear(bitlist, LPR_FORMAT_BIT);
		bit_clear(bitlist, LPR_DOWNLOAD_BIT);
		bit_set(bitlist, LPR_AVAILABLE_BIT);
	}
}
.Ed
.Sh SEE ALSO
.Xr malloc 3
.Sh HISTORY
The
.Nm bitstring
functions first appeared in
.Bx 4.4 .
@


1.14
log
@use fancy .In macros for includes. from Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: bitstring.3,v 1.13 2007/05/31 19:19:48 jmc Exp $
d35 2
a36 2
.Dd $Mdocdate: May 31 2007 $
.Dt BITSTRING 3
@


1.13
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: bitstring.3,v 1.12 2005/03/07 22:10:28 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate$
d51 1
a51 1
.Fd #include <bitstring.h>
@


1.12
log
@not a good idea to begin a sentence `...' in an nroff page;
@
text
@d1 1
a1 1
.\"	$OpenBSD: bitstring.3,v 1.11 2003/06/02 23:30:12 millert Exp $
d35 1
a35 1
.Dd July 19, 1993
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: bitstring.3,v 1.10 2003/05/20 09:13:38 jmc Exp $
d150 1
a150 1
...
d154 1
a154 1
...
@


1.10
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: bitstring.3,v 1.9 2000/12/15 14:31:19 aaron Exp $
d17 1
a17 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@.Sh EXAMPLE -> .Sh EXAMPLES. Even if there's only one example, at least
this is consistent.
@
text
@d1 1
a1 1
.\"	$OpenBSD: bitstring.3,v 1.8 2000/10/26 00:37:03 aaron Exp $
d49 1
a49 1
.Nm bit_nset,
@


1.8
log
@Some share/man fleshing.
@
text
@d1 1
a1 1
.\"	$OpenBSD: bitstring.3,v 1.7 2000/03/19 19:25:23 aaron Exp $
d149 1
a149 1
.Sh EXAMPLE
@


1.7
log
@Various cleanups.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d108 1
a108 2
macros
clear or set the zero-based numbered bits from
d117 1
a117 2
macro
evaluates to non-zero if the zero-based numbered bit
d125 1
a125 2
macro
stores in the location referenced by
@


1.6
log
@more .Os cleanup, remove some trailing whitespace, cleanse some .Nm
@
text
@d1 1
@


1.5
log
@whoops
@
text
@d40 1
a40 1
.Os BSD 4
d72 1
a72 1
.Fa "bitstr_t *"
d88 1
a88 1
.Fa bitstr_t
@


1.4
log
@share/man/man3 man page repairs
@
text
@d180 3
a182 1
The bit-string functions first appeared in
@


1.3
log
@insert bit_ffc into title, symlink bit_* to bitstring.3
@
text
@d57 1
a58 1
.Fn bit_clear "bit_str name" "int bit"
d69 1
a69 1
The macro
d71 2
a72 2
returns a pointer of type
.Dq Fa "bitstr_t *"
d79 1
a79 1
The macro
d81 1
a81 1
allocates sufficient space to store
d85 1
a85 1
The macro
d87 1
a87 1
returns the number of elements of type
d94 1
a94 1
The macros
d98 1
a98 1
clear or set the zero-based numbered bit
d104 2
a106 2
and
.Fn bit_nclear
d108 1
a108 1
set or clear the zero-based numbered bits from
d137 1
a137 1
The macro
d139 1
a139 1
stores in the location referenced by
d180 1
a180 3
The
.Nm bitstring
functions first appeared in
@


1.2
log
@use Bx macro for BSD versions
@
text
@d45 1
@


1.1
log
@Initial revision
@
text
@d181 2
a182 1
functions first appeared in 4.4BSD.
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
