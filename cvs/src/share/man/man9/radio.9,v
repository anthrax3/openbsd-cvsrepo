head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.2
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.10.0.14
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.12
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.9.0.24
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.22
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.20
	OPENBSD_5_0:1.9.0.18
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.16
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.14
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.10
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.12
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.8
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.6
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@.\" @;


1.11
date	2016.08.31.16.54.33;	author jmc;	state Exp;
branches;
next	1.10;
commitid	NjqzryPJCJkuxuXe;

1.10
date	2013.07.17.20.21.54;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.31.19.20.00;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2005.09.30.20.34.25;	author jaredy;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.06.20.56.32;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2003.03.08.23.17.18;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.29.07.26.18;	author wcobb;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.28.09.07.07;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.04.16.02.38;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.08.08.52.50;	author mpech;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.04.22.33.49;	author gluk;	state Exp;
branches;
next	;


desc
@@


1.11
log
@remove trailing Xr to radio devices;
@
text
@.\"	$OpenBSD: radio.9,v 1.10 2013/07/17 20:21:54 schwarze Exp $
.\"	$RuOBSD: radio.9,v 1.3 2001/10/26 05:38:44 form Exp $
.\"
.\" Copyright (c) Maxim Tsyplakov <tm@@oganer.net>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
.\" USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
.\" ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: July 17 2013 $
.Dt RADIO 9
.Os
.Sh NAME
.Nm radio
.Nd interface between low and high level radio drivers
.Sh DESCRIPTION
The radio device driver is divided into a high level,
hardware independent layer, and a low level hardware
dependent layer.
The interface between these is the
.Va radio_hw_if
structure.
.Bd -literal
struct radio_hw_if {
	int	(*open)(void *, int, int, struct proc *);
	int	(*close)(void *, int, int, struct proc *);
	int     (*get_info)(void *, struct radio_info *);
	int     (*set_info)(void *, struct radio_info *);
	int     (*search)(void *, int);
};
.Ed
.Pp
The high level radio driver attaches to the low level driver
when the latter calls
.Va radio_attach_mi .
This call should be
.Bd -literal
.Ft void
.Fn radio_attach_mi "struct radio_hw_if *rhwp" "void *hdlp" \
                    "struct device * dev"
.Ed
.Pp
The
.Va radio_hw_if
struct is as shown above.
The
.Va hdlp
argument is a handle to some low level data structure.
It is sent as the first argument to all the functions in
.Va radio_hw_if
when the high level driver calls them.
.Va dev
is the device struct for the hardware device.
.Pp
The fields of
.Va radio_hw_if
are described in some more detail below.
.Bd -literal
.Ft int
.Fn open "void *" "int flags" "int fmt" "struct proc *p"
  Optional.
  Is called when the radio device is opened.
  Returns 0 on success, otherwise an error code.

.Ft int
.Fn close "void *" "int flags" "int fmt" "struct proc *p"
  Optional.
  Is called when the radio device is closed.
  Returns 0 on success, otherwise an error code.

.Ft int
.Fn get_info "void *" "struct radio_info *"
  Fill the radio_info struct.
  Returns 0 on success, otherwise an error code.

.Ft int
.Fn set_info "void *" "struct radio_info *"
  Set values from the radio_info struct.
  Returns 0 on success, otherwise an error code.

.Ft int
.Fn search "void *" "int"
  Returns 0 on success, otherwise an error code.
.Ed
.Sh SEE ALSO
.Xr radio 4
.Sh HISTORY
The
.Nm
device driver appeared in
.Ox 3.0 .
.Sh AUTHORS
.An -nosplit
The
.Nm
driver was written by
.An Vladimir Popov Aq Mt jumbo@@narod.ru
and
.An Maxim Tsyplakov Aq Mt tm@@oganer.net .
The man page was written by
.An Maxim Tsyplakov Aq Mt tm@@oganer.net .
@


1.10
log
@use .Mt for AUTHORS email; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: radio.9,v 1.9 2007/05/31 19:20:00 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate: May 31 2007 $
d103 1
a103 7
.Xr az 4 ,
.Xr gtp 4 ,
.Xr radio 4 ,
.Xr rt 4 ,
.Xr rtii 4 ,
.Xr sf2r 4 ,
.Xr sfr 4
@


1.9
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: radio.9,v 1.8 2005/09/30 20:34:25 jaredy Exp $
d27 1
a27 1
.Dd $Mdocdate$
d120 1
a120 1
.An Vladimir Popov Aq jumbo@@narod.ru
d122 1
a122 1
.An Maxim Tsyplakov Aq tm@@oganer.net .
d124 1
a124 1
.An Maxim Tsyplakov Aq tm@@oganer.net .
@


1.8
log
@deploy .An -nosplit; ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: radio.9,v 1.7 2003/06/06 20:56:32 jmc Exp $
d27 1
a27 1
.Dd September 29, 2001
@


1.7
log
@- section reorder
- macro fixes
- kill whitespace at EOL
- use .Ox for OpenBSD, .Fx for FreeBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD: radio.9,v 1.6 2003/03/08 23:17:18 jmc Exp $
d116 1
@


1.6
log
@.Xr's for section9:

- MLINKS for uvm stuff
- MLINK vgone.9 vgonel.9
- typos
- fixed SYNOPSIS of extattr(9)

lots of help from miod and art
ok miod@@ art@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: radio.9,v 1.5 2002/08/29 07:26:18 wcobb Exp $
d110 5
a123 5
.Sh HISTORY
The
.Nm
device driver appeared in
.Ox 3.0 .
@


1.5
log
@- use .Ft and .Fn for function prototypes.
- remove empty lines.
ok mpech@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: radio.9,v 1.4 2002/05/28 09:07:07 mpech Exp $
d103 7
a109 7
.Xr az 4
.Xr mr 4
.Xr radio 4
.Xr rt 4
.Xr rtii 4
.Xr sf2r 4
.Xr sf4r 4
@


1.4
log
@	man9/:
o) Start new sentence on a new line;
o) FreeBSD -> .Fx;
o) OpenBSD -> .Ox;
o) Close .Bl/Bd lists;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: radio.9,v 1.3 2002/01/04 16:02:38 mickey Exp $
a47 1

a49 1

d55 3
a57 5
    void
    radio_attach_mi(rhwp, hdlp, dev)
	struct radio_hw_if *rhwp;
	void *hdlp;
	struct device *dev;
a71 1

a74 1

d76 2
a77 1
int open (void *, int flags, int fmt, struct proc *p);
d82 2
a83 1
int close (void *, int flags, int fmt, struct proc *p);
d88 2
a89 1
int get_info (void *, struct radio_info *);
d93 2
a94 1
int set_info (void *, struct radio_info *);
d98 2
a99 1
int search (void *, int);
@


1.3
log
@update from Vladimir Popov <jumbo@@narod.ru> and some from me
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d102 1
a102 1

@


1.2
log
@o) better -mdoc syntax;
o) start new sentence on a new line;
o) sort SEE ALSO;
o) close .Bd;

millert@@ ok
@
text
@d1 3
a3 2
.\"	$OpenBSD: radio.9,v 1.1 2001/10/04 22:33:49 gluk Exp $
.\"	
d17 2
a18 2
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  
d20 1
a20 1
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
d23 1
a23 1
.\" ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
d42 5
a46 3
	int	*open(dev_t, int, int, struct proc *);
	void	*close(dev_t, int, int, struct proc *);
	int	*ioctl(dev_t, u_long, caddr_t, int, struct proc *);
d48 1
d51 1
d70 1
a70 2
It is reserved field for future usage, and actually not used in any 
low-level driver functions. 
d76 1
d80 1
d82 2
a83 1
int open (dev_t dev, int flags, int fmt, struct proc *p);
d87 2
a88 1
int close (dev_t dev, int flags, int fmt, struct proc *p);
d92 6
a97 2
int ioctl (dev_t dev, u_long cmd, caddr_t data, int flags, struct proc *p);
  Is ioctl requests handler function.
d99 4
a102 1
.Ed
d104 2
d107 18
@


1.1
log
@Radio drivers and interfaces manuals.

From Vladimir Popov <jumbo@@narod.ru> and Maxim Tsyplakov <tm@@oganer.net>
@
text
@d1 1
a1 1
.\"	$OpenBSD$
a44 1

a46 1

a71 1

a74 1

d87 1
a87 1

@

