head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.18
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.14
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.12
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.9.0.10
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.8
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.6
	OPENBSD_5_0:1.9.0.4
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.8.0.6
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.12
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@.\" @;


1.10
date	2013.06.04.19.27.15;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2010.09.19.13.17.25;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2009.03.18.18.26.34;	author blambert;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.31.19.20.01;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.17.20.30.41;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.06.20.56.32;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.20.20.46.14;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.10.19.56.29;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.28.09.07.07;	author mpech;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.28.19.22.05;	author csapuntz;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Replace old-fashioned .Fd by new-fangled .In for #include lines.
Diff from Jan Klemkow <j dot klemkow at wemelug dot de> on tech@@.
No objection from jmc@@ against this type of change.
@
text
@.\"     $OpenBSD: vclean.9,v 1.9 2010/09/19 13:17:25 jmc Exp $
.\"-
.\" Copyright (c) 2002 Peter Werner
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"
.Dd $Mdocdate: September 19 2010 $
.Dt VCLEAN 9
.Os
.Sh NAME
.Nm vclean
.Nd disassociate the underlying file system from a vnode
.Sh SYNOPSIS
.In sys/param.h
.In sys/vnode.h
.Ft void
.Fo vclean
.Fa "struct vnode *vp"
.Fa "int flags"
.Fa "struct proc *p"
.Fc
.Sh DESCRIPTION
The
.Fn vclean
function clears any VM and buffer data associated with the vnode
.Fa vp
and reclaims it from the underlying file system.
.Pp
Its arguments are:
.Bl -tag -width ".Fa flags"
.It Fa vp
The vnode to be cleaned.
.It Fa flags
The flags indicating how the vnode should be handled.
.Bl -tag -width ".Dv DOCLOSE"
.It Dv DOCLOSE
If this flag is set,
.Fn vclean
will call
.Xr vinvalbuf 9
on the vnode.
If the vnode is active, it will be closed and inactivated in the
underlying file system.
.El
.It Fa p
The process responsible for this call.
.El
.Pp
On exit, the
.Va v_tag
field of the vnode will be set to
.Dv VT_NON ,
and if the vnode was active, it will be placed on the vnode free list.
.Sh SEE ALSO
.Xr vinvalbuf 9 ,
.Xr vnode 9
.Sh HISTORY
This man page was originally written for
.Ox .
@


1.9
log
@- put the Os macro in the correct place
- in one instance, .Dr -> .Dq
@
text
@d1 1
a1 1
.\"     $OpenBSD: vclean.9,v 1.8 2009/03/18 18:26:34 blambert Exp $
d28 1
a28 1
.Dd $Mdocdate: March 18 2009 $
d35 2
a36 2
.Fd #include <sys/param.h>
.Fd #include <sys/vnode.h>
@


1.8
log
@Remove man page mentions of the vnode interlock, which is long dead.

ok jmc@@ thib@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: vclean.9,v 1.7 2007/05/31 19:20:01 jmc Exp $
d28 2
a29 1
.Dd $Mdocdate: May 31 2007 $
a30 1
.Dt VCLEAN 9
@


1.7
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"     $OpenBSD: vclean.9,v 1.6 2004/04/17 20:30:41 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate$
a69 1
The vnode interlock is held on entry.
@


1.6
log
@lots of fixes from jared yanovich;
@
text
@d1 1
a1 1
.\"     $OpenBSD: vclean.9,v 1.5 2003/06/06 20:56:32 jmc Exp $
d28 1
a28 1
.Dd February 18, 2002
@


1.5
log
@- section reorder
- macro fixes
- kill whitespace at EOL
- use .Ox for OpenBSD, .Fx for FreeBSD
@
text
@d1 1
a1 1
.\"     $OpenBSD: vclean.9,v 1.4 2003/04/20 20:46:14 jmc Exp $
d46 1
a46 1
function clears any VM and buffer data associated with a vnode
d49 2
a50 1
The arguments are:
d67 1
a67 1
The process associated with this operation.
d71 4
a74 2
On exit the v_tag field of the vnode will be set to
.Dv VT_NON
@


1.4
log
@typos, and 1 from tedu;

ok tedu@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: vclean.9,v 1.3 2003/03/10 19:56:29 tedu Exp $
d77 2
a78 1
This man page was originally written for OpenBSD.
@


1.3
log
@filesystem -> file system for section 9

ok jmc@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: vclean.9,v 1.2 2002/05/28 09:07:07 mpech Exp $
d3 1
a3 1
.\" Copyright (c) 2002 Peter Werner 
d33 1
a33 1
.Nd dissassociate the underlying file system from a vnode
d52 1
a52 1
The vnode to be clean
d66 1
a66 1
The process associated with this operation
d74 2
a75 2
.Xr vnode 9 ,
.Xr vinvalbuf 9
@


1.2
log
@	man9/:
o) Start new sentence on a new line;
o) FreeBSD -> .Fx;
o) OpenBSD -> .Ox;
o) Close .Bl/Bd lists;

millert@@ ok
@
text
@d1 1
a1 1
.\"     $OpenBSD: vclean.9,v 1.1 2002/02/28 19:22:05 csapuntz Exp $
d48 1
a48 1
and reclaims it from the underlying filesystem.
d63 1
a63 1
underlying filesystem.
@


1.1
log
@Check in some new vnode man page from FreeBSD. Thanks to Peter Werner
@
text
@d1 1
a1 1
.\"     $OpenBSD: $
d61 2
a62 1
on the vnode. If the vnode is active, it will be closed and inactivated in the
d69 2
a70 2
The vnode interlock is held on entry. On exit the v_tag field of the vnode
will be set to
@

