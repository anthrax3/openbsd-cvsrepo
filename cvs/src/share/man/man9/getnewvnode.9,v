head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.14
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.12
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.8
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.10
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.20
	OPENBSD_5_0:1.5.0.18
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.16
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.14
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.10
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.12
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.8
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.6
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.4.0.10
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.8
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@.\" @;


1.9
date	2013.08.14.06.32.32;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2013.07.17.20.21.52;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.04.19.27.06;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.18.05.56.00;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2007.05.31.19.20.00;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2004.12.06.01.53.25;	author jaredy;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.10.19.56.29;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.28.09.07.07;	author mpech;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.28.19.22.05;	author csapuntz;	state Exp;
branches;
next	;


desc
@@


1.9
log
@no longer any need to quote macro lines with >9 args;
From: Jan Stary
@
text
@.\"     $OpenBSD: getnewvnode.9,v 1.8 2013/07/17 20:21:52 schwarze Exp $
.\"
.\" Copyright (C) 2001 Chad David <davidc@@acns.ab.ca>. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice(s), this list of conditions and the following disclaimer as
.\"    the first lines of this file unmodified other than the possible
.\"    addition of one or more copyright notices.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice(s), this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S) ``AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
.\" DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
.\" CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
.\" DAMAGE.
.\"
.\" $FreeBSD: src/share/man/man9/getnewvnode.9,v 1.1 2001/12/02 02:13:35 alfred Exp $
.\"
.Dd $Mdocdate: July 17 2013 $
.Dt GETNEWVNODE 9
.Os
.Sh NAME
.Nm getnewvnode
.Nd get a new vnode
.Sh SYNOPSIS
.In sys/param.h
.In sys/vnode.h
.In sys/mount.h
.Ft int
.Fo getnewvnode
.Fa "enum vtagtype tag"
.Fa "struct mount *mp"
.Fa "struct vops *vops"
.Fa "struct vnode **vpp"
.Fc
.Sh DESCRIPTION
The
.Fn getnewvnode
function initializes a new vnode, assigning it the vnode operations passed in
.Fa vops .
It will have its v_tag field set to
.Fa tag
and be placed in the mount queue for the mount point represented by
.Fa mp .
.Pp
The vnode is either freshly allocated, taken from the free list or taken from
the hold list.
If there are no vnodes on the free list, half the time a vnode
referencing buffers will be taken from the hold list, otherwise it will be
freshly allocated.
.Pp
The arguments to
.Fn getnewvnode
are:
.Bl -tag -width ".Fa vops"
.It Fa tag
The file system type.
.It Fa mp
The mount point to add the new vnode to.
.It Fa vops
The vnode operations to assign to the new vnode.
.It Fa vpp
Points to the new vnode upon successful completion.
.El
.Sh RETURN VALUES
.Fn getnewvnode
returns 0 on success, or ENFILE if the vnode table is full.
.Sh AUTHORS
This man page was originally written by
.An Chad David Aq Mt davidc@@acns.ab.ca
for
.Fx .
@


1.8
log
@use .Mt for AUTHORS email; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: getnewvnode.9,v 1.7 2013/06/04 19:27:06 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: June 4 2013 $
d35 1
a35 1
.Nd "get a new vnode"
@


1.7
log
@Replace old-fashioned .Fd by new-fangled .In for #include lines.
Diff from Jan Klemkow <j dot klemkow at wemelug dot de> on tech@@.
No objection from jmc@@ against this type of change.
@
text
@d1 1
a1 1
.\"     $OpenBSD: getnewvnode.9,v 1.6 2012/05/18 05:56:00 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 18 2012 $
d81 1
a81 1
.An Chad David Aq davidc@@acns.ab.ca
@


1.6
log
@"int (**vops)((void *)" is now "struct vops *vops"; from David Matthew Mattli
ok tedu
@
text
@d1 1
a1 1
.\"     $OpenBSD: getnewvnode.9,v 1.5 2007/05/31 19:20:00 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d37 3
a39 3
.Fd #include <sys/param.h>
.Fd #include <sys/vnode.h>
.Fd #include <sys/mount.h>
@


1.5
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"     $OpenBSD: getnewvnode.9,v 1.4 2004/12/06 01:53:25 jaredy Exp $
d30 1
a30 1
.Dd $Mdocdate$
d44 1
a44 1
.Fa "int (**vops)((void *))"
@


1.4
log
@kill __P in proto; ok deraadt pvalchev
@
text
@d1 1
a1 1
.\"     $OpenBSD: getnewvnode.9,v 1.3 2003/03/10 19:56:29 tedu Exp $
d30 1
a30 1
.Dd November 21, 2001
@


1.3
log
@filesystem -> file system for section 9

ok jmc@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: getnewvnode.9,v 1.2 2002/05/28 09:07:07 mpech Exp $
d44 1
a44 1
.Fa "int (**vops) __P((void *))"
@


1.2
log
@	man9/:
o) Start new sentence on a new line;
o) FreeBSD -> .Fx;
o) OpenBSD -> .Ox;
o) Close .Bl/Bd lists;

millert@@ ok
@
text
@d1 1
a1 1
.\"     $OpenBSD: getnewvnode.9,v 1.1 2002/02/28 19:22:05 csapuntz Exp $
d68 1
a68 1
The filesystem type.
@


1.1
log
@Check in some new vnode man page from FreeBSD. Thanks to Peter Werner
@
text
@d1 1
a1 1
.\"     $OpenBSD: $
d58 2
a59 1
the hold list. If there are no vnodes on the free list, half the time a vnode
d82 2
a83 1
for FreeBSD.
@

