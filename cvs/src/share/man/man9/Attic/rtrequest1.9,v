head	1.6;
access;
symbols
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2;
locks; strict;
comment	@.\" @;


1.6
date	2015.10.30.09.48.03;	author bluhm;	state dead;
branches;
next	1.5;
commitid	pj0TvBlzgblOD3qP;

1.5
date	2015.10.21.08.48.12;	author mpi;	state Exp;
branches;
next	1.4;
commitid	eHMnt02pwJm3R8Yu;

1.4
date	2015.08.19.13.27.38;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	t09qBDKQRv4jxgp3;

1.3
date	2014.10.15.11.58.13;	author mpi;	state Exp;
branches;
next	1.2;
commitid	ASXxfZ5HlKVvntHD;

1.2
date	2014.04.25.11.49.47;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2014.04.02.13.10.48;	author mpi;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Rename rtrequest1() to rtrequest().
"make sure to update the manpage too" mpi@@
@
text
@.\"     $OpenBSD: rtrequest1.9,v 1.5 2015/10/21 08:48:12 mpi Exp $
.\"
.\" Copyright (c) 2011 Bret S. Lambert <blambert@@openbsd.org>
.\" All rights reserved.
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: October 21 2015 $
.Dt RTREQUEST1 9
.Os
.Sh NAME
.Nm rtrequest1
.Nd add or remove entries from a routing table
.Sh SYNOPSIS
.In sys/types.h
.In net/route.h
.Ft int
.Fn rtrequest1 "int req" "struct rt_addrinfo *info" "u_int8_t prio" \
"struct rtentry **rtp" "u_int rtableid"
.Bd -literal
struct rt_addrinfo {
	int	rti_addrs;
	struct	sockaddr *rti_info[RTAX_MAX];
	int	rti_flags;
	struct	ifaddr *rti_ifa;
	struct	rt_msghdr *rti_rtm;
	u_char	rti_mpls;
};

#define RTAX_DST	0	/* destination sockaddr present */
#define RTAX_GATEWAY	1	/* gateway sockaddr present */
#define RTAX_NETMASK	2	/* netmask sockaddr present */
#define RTAX_IFP	4	/* interface name sockaddr present */
#define RTAX_IFA	5	/* interface addr sockaddr present */
#define RTAX_AUTHOR	6	/* sockaddr for author of redirect */
#define RTAX_BRD	7	/* for NEWADDR, broadcast or p-p dest */
#define RTAX_SRC	8	/* source sockaddr present */
#define RTAX_SRCMASK	9	/* source netmask present */
#define RTAX_LABEL	10	/* route label present */
#define RTAX_MAX	11	/* size of array to allocate */
.Ed
.Sh DESCRIPTION
The
.Fn rtrequest1
function is used to add or remove entries from a specific routing table.
It takes the following arguments:
.Bl -tag -width rtableid
.It Fa req
One of the following actions to perform:
.Bl -tag -width RTM_RESOLVE -offset indent
.It Dv RTM_ADD
Add an entry to a given routing table.
.It Dv RTM_DELETE
Remove an entry from a given routing table.
In case of a cloning entry, all its children are deleted.
.It Dv RTM_RESOLVE
Add a cloned entry, based on the parent cloning entry pointed by
.Fa rtp ,
to a given routing table.
.El
.It Fa info
Describes the routing entry to add or remove.
.It Fa prio
Specifies the priority of the routing entry described by
.Fa info .
If it is
.Dv 0
and the requested action is
.Dv RTM_ADD
then a default priority based on the priority of the associated
interface is chosen.
.It Fa rtp
Must be non-NULL and point to the cloning entry if the action is
.Dv RTM_RESOLVE .
In all cases when no error is returned and it is non-NULL, a pointer
to the deleted or added entry is placed there.
The caller must take care of releasing the returned reference by
calling
.Xr rtfree 9 .
.It Fa rtableid
The ID of the routing table to modify.
.El
.Sh CONTEXT
.Fn rtrequest1
can be called during autoconf, from process context, or from interrupt context.
.Sh RETURN VALUES
.Fn rtrequest1
may fail with:
.Pp
.Bl -tag -width Er -compact
.It Bq Er EAFNOSUPPORT
The routing table with ID of
.Fa rtableid
does not exist or it does not support the protocol specified in
.Fa info .
.It Bq Er ESRCH
No routing entry corresponding to
.Fa info
could be found.
.It Bq Er ESRCH
Multipath routing entry with no gateway provided in
.Fa info .
.It Bq Er ESRCH
The entry could not be found in the routing table of ID
.Fa rtableid .
specified
.It Bq Er EINVAL
The entry pointed by
.Fa rtp
is not valid or does not point to a cloning entry in the
.Dv RTM_RESOLVE
case.
.It Bq Er EEXIST
Multipath routing entry conflicts with an existing one.
.It Bq Er EEXIST
The entry could not be entered into the routing table.
.It Bq Er ENOMEM
Space for MPLS protocol data could not be allocated.
.It Bq Er ENOBUFS
Space for a new routing entry could not be allocated.
.It Bq Er ENETUNREACH
An interface address corresponding to the routing entry described by
.Fa info
could not be found.
.El
.Sh SEE ALSO
.Xr rtfree 9
@


1.5
log
@No longer mention rtable_get(), it's a private function now.

While here use C99 types in function definitions.
@
text
@d1 1
a1 1
.\"     $OpenBSD: rtrequest1.9,v 1.4 2015/08/19 13:27:38 bluhm Exp $
d18 1
a18 1
.Dd $Mdocdate: August 19 2015 $
@


1.4
log
@Convert all calls to rtrequest1() and the following error check
into a common pattern.  In the man page clarify the usage of the
returned route.
OK mpi@@ mikeb@@ jmc@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: rtrequest1.9,v 1.3 2014/10/15 11:58:13 mpi Exp $
d18 1
a18 1
.Dd $Mdocdate: October 15 2014 $
a136 1
.Xr rtable_get 9 ,
@


1.3
log
@Use the terms "routing entry" or simply "entry" when talking about the
kernel representation of a network route.

While here add some missing headers in the SYNOPSIS.
@
text
@d1 1
a1 1
.\"     $OpenBSD: rtrequest1.9,v 1.2 2014/04/25 11:49:47 mpi Exp $
d18 1
a18 1
.Dd $Mdocdate: April 25 2014 $
d83 5
a87 6
Points to the cloning entry if the action is
.Dv RTM_RESOLVE
or, if the action is
.Dv RTM_DELETE
and it is non-NULL, a pointer to the removed entry is placed there.
In this case, the caller must take care of releasing the returned entry by
@


1.2
log
@Sync "struct rt_addrinfo" definition after removal of rti_ifp and kill
a trailing whitespace pointed by jmc@@.
@
text
@d1 1
a1 1
.\"     $OpenBSD: rtrequest1.9,v 1.1 2014/04/02 13:10:48 mpi Exp $
d18 1
a18 1
.Dd $Mdocdate: April 2 2014 $
d23 1
a23 1
.Nd add or remove routes from a routing table
d25 1
d55 1
a55 1
function is used to add or remove routes from a specific routing table.
d62 1
a62 1
Add a route to a given routing table.
d64 2
a65 2
Remove a route from a given routing table.
In case of a cloning route, all its children are deleted.
d67 1
a67 1
Add a cloned route, based on the parent cloning route pointed by
d72 1
a72 1
Describes the route to add or remove.
d74 1
a74 1
Specifies the priority of the route described by
d83 1
a83 1
Points to the cloning route if the action is
d87 2
a88 2
and it is non-NULL, a pointer to the removed route is placed there.
In this case, the caller must take care of releasing the returned route by
d108 1
a108 1
No route corresponding to
d112 1
a112 1
Multipath route with no gateway provided in
d115 1
a115 1
The route could not be found in the routing table of ID
d119 1
a119 1
The route pointed by
d121 1
a121 1
is not valid or does not point to a cloning route in the
d125 1
a125 1
Multipath route conflicts with existing multipath route.
d127 1
a127 1
The route could not be entered into the routing table.
d131 1
a131 1
Space for a new route could not be allocated.
d133 1
a133 1
An interface address corresponding to the route described by
@


1.1
log
@Add a man page for rtrequest1(9) splitted from route(9) with some
improvements.

ok sthen@@
@
text
@d1 1
a1 1
.\"     $OpenBSD$
d18 1
a18 1
.Dd $Mdocdate$
a34 1
	struct	ifnet *rti_ifp;
@

