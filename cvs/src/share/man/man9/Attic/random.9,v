head	1.27;
access;
symbols
	OPENBSD_4_8:1.25.0.10
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.25.0.6
	OPENBSD_4_7_BASE:1.25
	OPENBSD_4_6:1.25.0.8
	OPENBSD_4_6_BASE:1.25
	OPENBSD_4_5:1.25.0.4
	OPENBSD_4_5_BASE:1.25
	OPENBSD_4_4:1.25.0.2
	OPENBSD_4_4_BASE:1.25
	OPENBSD_4_3:1.24.0.2
	OPENBSD_4_3_BASE:1.24
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.21.0.4
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.2
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.20.0.4
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.20.0.2
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.19.0.4
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.2
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.18.0.2
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.12.0.4
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.11.0.4
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@# @;


1.27
date	2011.01.09.00.06.50;	author deraadt;	state dead;
branches;
next	1.26;

1.26
date	2010.10.02.15.58.30;	author tedu;	state Exp;
branches;
next	1.25;

1.25
date	2008.06.09.16.00.53;	author djm;	state Exp;
branches;
next	1.24;

1.24
date	2008.03.02.22.30.05;	author djm;	state Exp;
branches;
next	1.23;

1.23
date	2008.03.02.21.29.07;	author djm;	state Exp;
branches;
next	1.22;

1.22
date	2007.05.31.19.20.01;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2006.06.12.09.45.36;	author mbalmer;	state Exp;
branches;
next	1.20;

1.20
date	2005.08.01.05.31.49;	author djm;	state Exp;
branches;
next	1.19;

1.19
date	2004.04.04.13.19.36;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2004.03.14.11.34.53;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	2004.03.14.09.11.10;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.04.04.43.56;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2003.04.22.04.04.25;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.04.17.13.41.30;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2003.04.17.10.44.48;	author jmc;	state dead;
branches;
next	1.12;

1.12
date	2002.05.27.01.59.58;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2001.09.28.16.02.52;	author heko;	state Exp;
branches;
next	1.10;

1.10
date	2000.12.22.00.13.34;	author avsm;	state Exp;
branches;
next	1.9;

1.9
date	2000.10.12.18.06.02;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.26.19.15.13;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.11.21.00.47;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	99.12.15.16.13.20;	author ericj;	state Exp;
branches;
next	1.5;

1.5
date	99.05.23.14.11.40;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.05.16.19.57.47;	author alex;	state Exp;
branches;
next	1.3;

1.3
date	98.05.19.22.54.59;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	97.06.15.06.48.14;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.12.17.22.56.04;	author millert;	state Exp;
branches;
next	;


desc
@@


1.27
log
@update random(4) and arc4random(9) manual pages
@
text
@.\"	$OpenBSD: random.9,v 1.26 2010/10/02 15:58:30 tedu Exp $
.\"
.\" Copyright (c) 1996,2000 Michael Shalayeff
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: October 2 2010 $
.Dt RND 9
.Os
.Sh NAME
.Nm random
.Nd device kernel interface
.Sh SYNOPSIS
.Fd #include <dev/rndvar.h>
.Ft void
.Fn add_true_randomness "int"
.Ft void
.Fn add_timer_randomness "int"
.Ft void
.Fn add_mouse_randomness "int"
.Ft void
.Fn add_tty_randomness "int"
.Ft void
.Fn add_net_randomness "int"
.Ft void
.Fn add_disk_randomness "int"
.Ft void
.Fn add_audio_randomness "int"
.Ft void
.Fn get_random_bytes "void *buf" "size_t nbytes"
.Ft u_int32_t
.Fn arc4random "void"
.Ft void
.Fn arc4random_buf "void *buf" "size_t nbytes"
.Ft u_int32_t
.Fn arc4random_uniform "u_int32_t upper_bound"
.Sh DESCRIPTION
The
.Fn add_mouse_randomness ,
.Fn add_tty_randomness ,
.Fn add_net_randomness ,
.Fn add_disk_randomness
and
.Fn add_audio_randomness
routines are used to
supply data for the random data source device for further processing.
The processing involves calculating inter-event timedelta and measuring
entropy contained in the resulting delta-T; the argument data supplied
is just mixed into the pool and does not increase the entropy counter.
.Pp
.Fn add_true_randomness
does not involve the usual timing calculations,
and causes the supplied data argument to be added to the entropy pool,
increasing the entropy counter by 32 bits.
.Pp
.Fn add_timer_randomness
will not cause the entropy counter to rise.
It is used to change the state of the pool periodically,
mostly by means of timing the random driver's operations.
.Pp
.Fn get_random_bytes
may be used to retrieve strong random data.
.Pp
.Fn arc4random
and
.Fn arc4random_buf
will give random 32 bit numbers hashed with
the ARC4 algorithm, which appears to be faster and less abusive
to the entropy pool.
.Pp
.Fn arc4random_uniform
will return a uniformly distributed random number less than
.Fa upper_bound ,
avoiding "modulo bias" when the upper bound is not a power of two.
.Sh SEE ALSO
.Xr arc4random 3 ,
.Xr pchb 4 ,
.Xr random 4
.Sh CAVEATS
None of these functions should really be called during the
.Xr autoconf 4
process.
@


1.26
log
@srandom device no longer provides "strong" random data
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.25 2008/06/09 16:00:53 djm Exp $
d26 1
a26 1
.Dd $Mdocdate: June 9 2008 $
@


1.25
log
@man bits for arc4random_bytes => arc4random_buf rename; ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.24 2008/03/02 22:30:05 djm Exp $
d26 1
a26 1
.Dd $Mdocdate: March 2 2008 $
d81 1
a81 4
may be used to retrieve strong random data, just
as it would by the
.Xr srandom 4
device.
@


1.24
log
@improve wording - from deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.23 2008/03/02 21:29:07 djm Exp $
d53 1
a53 1
.Fn arc4random_bytes "void *buf" "size_t nbytes"
d88 1
a88 1
.Fn arc4random_bytes
@


1.23
log
@Add a arc4random_uniform() that returns a uniformly distributed number
in the range 0 <= x < upper_bound

Please use this new API instead of "arc4random() % upper_bound", as it
avoids the "modulo bias" that favours small results when upper_bound is
not a power of two.

feedback deraadt@@ mcbride@@; ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.22 2007/05/31 19:20:01 jmc Exp $
d26 1
a26 1
.Dd $Mdocdate: May 31 2007 $
d96 1
a96 1
avoiding "modulo bias" when the upper bound is not a divisor of 2**32.
@


1.22
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.21 2006/06/12 09:45:36 mbalmer Exp $
d26 1
a26 1
.Dd $Mdocdate$
d54 2
d92 5
@


1.21
log
@time delta -> timedelta

disc'ed & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.20 2005/08/01 05:31:49 djm Exp $
d26 1
a26 1
.Dd March 26, 1996
@


1.20
log
@expose arc4random_bytes() API; ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.19 2004/04/04 13:19:36 jmc Exp $
d64 1
a64 1
The processing involves calculating inter-event time delta and measuring
@


1.19
log
@.br workaround no longer necessary;
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.18 2004/03/14 11:34:53 mickey Exp $
d52 2
d85 2
@


1.18
log
@grammer; from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.17 2004/03/14 09:11:10 mickey Exp $
a51 1
.br
@


1.17
log
@add the caveats section
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.16 2003/06/04 04:43:56 deraadt Exp $
d92 1
a92 1
Neither of these functions should really be called during the
@


1.16
log
@more 3/4 cleanups for lazy developers
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.15 2003/04/22 04:04:25 jmc Exp $
d91 4
@


1.15
log
@.Fn for functions, better spacing;

ok mickey@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.14 2003/04/17 13:41:30 mickey Exp $
a13 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Michael Shalayeff
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
@


1.14
log
@his is wrong
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.12 2002/05/27 01:59:58 deraadt Exp $
d59 7
a65 5
.Nm add_mouse_randomness ,
.Nm add_tty_randomness ,
.Nm add_net_randomness ,
.Nm add_disk_randomness ,
.Nm add_audio_randomness
d69 6
a74 6
entropy contained in the resulting delta-T, supplied in argument data
is just mixed into the pool and does not increase entropy counter.
.br
.Nm add_true_randomness
does not involve usual timing calculations
and causes supplied data argument added to the entropy pool
a75 5
.br
.Nm add_timer_randomness
will not cause entropy counter to rise, it
is used to change the state of the pool periodically mostly
by meaning of timing random driver's operations.
d77 6
a82 1
.Nm get_random_bytes
d84 1
a84 1
as it would by
d87 2
a88 2
.br
.Nm arc4random
@


1.13
log
@- random.9 changed to arc4random.9
- MLINKS updated to point to arc4random.9
- random.9 remains as link to kern.9

ok miod@@
@
text
@d17 1
a17 1
.\" 3. The name of the author may not be used to endorse or promote products
@


1.12
log
@kill unused arc4random_8() API
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.11 2001/09/28 16:02:52 heko Exp $
@


1.11
log
@Typo; spotted by Jussi Laako <jussi@@jlaako.pp.fi>
ok mickey@@, dm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.9 2000/10/12 18:06:02 aaron Exp $
a54 2
.Ft u_int8_t
.Fn arc4random_8 "void"
d86 2
a87 3
.Nm arc4random ,
.Nm arc4random_8
will give random 32 and 8 respectively bit numbers hashed with
@


1.10
log
@more typo fixes; aaron@@ ok
@
text
@d91 1
a91 1
the aRC4 algorithm, which appears to be faster and less abusive
@


1.9
log
@General man page cleanups, mostly to remove trailing whitespace, hard
sentence breaks, and other such things.
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.8 2000/04/26 19:15:13 mickey Exp $
d67 2
a68 2
supply data for the random data source device for futher processing.
The processing involves calculating inter-event time delta and measurirg
d73 1
a73 1
does not involve usuall timing calculations
@


1.8
log
@some grammar, and xr pchb(4)
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.7 2000/04/11 21:00:47 mickey Exp $
d39 1
a39 1
.Ft void 
d41 1
a41 1
.Ft void 
d43 1
a43 1
.Ft void 
d47 1
a47 1
.Ft void 
d49 1
a49 1
.Ft void 
d51 1
a51 1
.Ft void 
d55 1
a55 1
.Ft u_int8_t 
d57 1
a57 1
.Ft u_int32_t 
@


1.7
log
@current
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.6 1999/12/15 16:13:20 ericj Exp $
d74 1
a74 1
and cause passed data argument to added to the entropy pool
d95 1
@


1.6
log
@fix declarations
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.5 1999/05/23 14:11:40 aaron Exp $
d3 1
a3 1
.\" Copyright (c) 1996	Michael Shalayeff
d40 5
a44 1
.Fn add_mouse_randomness "u_int32_t"
d48 3
a50 1
.Fn add_net_randomness "int isr"
d52 1
a52 1
.Fn add_blkdev_randomness "u_int32_t"
d55 2
d61 20
a80 2
add_{mouse,tty,net,blkdev}_randomness routines used to supply data
for the random data source device for future processing.
d88 5
a92 3
.Nm arc4random
will give random 32 bit numbers hashed with the aRC4 algorithm,
which appears to be faster.
@


1.5
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.4 1999/05/16 19:57:47 alex Exp $
d39 12
a50 11
.Va void add_mouse_randomness(u_int32_t);
.br
.Va void add_tty_randomness(int);
.br
.Va void add_net_randomness(int isr);
.br
.Va void add_blkdev_randomness(u_int32_t);
.br
.Va void get_random_bytes(void *buf, size_t nbytes);
.br
.Va u_int32_t arc4random(void);
@


1.4
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.3 1998/05/19 22:54:59 jason Exp $
d33 1
a33 1
.Os OpenBSD
@


1.3
log
@spelling & Xr's
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.2 1997/06/15 06:48:14 mickey Exp $
d65 2
a66 2
.Xr random 4 ,
.Xr arc4random 3
@


1.2
log
@update
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.1 1996/12/17 22:56:04 millert Exp $
d56 1
a56 1
maybe used to retrive strong random data, just
d62 2
a63 2
will give you random 32 bit number hashed with aRC4 algorythm,
wich appeared to be faster.
@


1.1
log
@rnd -> random doncha know
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.2 1996/04/24 17:54:23 mickey Exp $
d39 3
a41 1
.Va void add_tty_randomness(dev_t dev);
d45 1
a45 1
.Va void add_blkdev_randomness(dev_t dev);
d49 2
d52 1
a52 1
add_{tty,net,blkdev}_randomness routines used to supply data
d55 2
a56 1
get_random_bytes maybe used to retrive strong random data, just
d60 4
d65 2
a66 1
.Xr random 4
@
