head	1.10;
access;
symbols
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.6
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.2
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.9.0.10
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.12
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.8
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.6
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.7.0.24
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.22
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.20
	OPENBSD_5_0:1.7.0.18
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.16
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.14
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.10
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.12
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.12
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@.\" @;


1.10
date	2016.03.19.12.04.15;	author natano;	state Exp;
branches;
next	1.9;
commitid	gAjwyca5TfuoJAhn;

1.9
date	2013.07.17.20.21.56;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2013.06.04.19.27.16;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.31.19.20.01;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.17.20.30.41;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.06.20.56.32;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.20.20.38.28;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.10.19.56.29;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.28.09.07.07;	author mpech;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.28.19.22.05;	author csapuntz;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove the unused flags argument from VOP_UNLOCK().

torture tested on amd64, i386 and macppc
ok beck mpi stefan
"the change looks right" deraadt
@
text
@.\"     $OpenBSD: vinvalbuf.9,v 1.9 2013/07/17 20:21:56 schwarze Exp $
.\"
.\" Copyright (C) 2001 Chad David <davidc@@acns.ab.ca>. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice(s), this list of conditions and the following disclaimer as
.\"    the first lines of this file unmodified other than the possible
.\"    addition of one or more copyright notices.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice(s), this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S) ``AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
.\" DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
.\" CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
.\" DAMAGE.
.\"
.\" $FreeBSD: src/share/man/man9/vinvalbuf.9,v 1.6 2001/10/06 11:19:41 sheldonh Exp $
.\"
.Dd $Mdocdate: July 17 2013 $
.Dt VINVALBUF 9
.Os
.Sh NAME
.Nm vinvalbuf
.Nd flush and invalidate all buffers associated with a vnode
.Sh SYNOPSIS
.In sys/param.h
.In sys/vnode.h
.Ft int
.Fn vinvalbuf "struct vnode *vp" "int flags" "struct ucred *cred" \
    "struct proc *p" "int slpflag" "int slptimeo"
.Sh DESCRIPTION
The
.Fn vinvalbuf
function invalidates all of the buffers associated with the given vnode.
This includes buffers on the clean list and the dirty list.
If the
.Dv V_SAVE
flag is specified then the buffers on the dirty list are synced prior to being
released.
If the
.Dv V_SAVEMETA
flag is set, indirect blocks will not be flushed.
.Pp
Its arguments are:
.Bl -tag -width ".Fa slptimeo"
.It Fa vp
A pointer to the vnode whose buffers will be invalidated.
.It Fa flags
The supported flags are
.Dv V_SAVE
and
.Dv V_SAVEMETA .
.Dv V_SAVE
indicates that dirty buffers should be synced with the disk.
.Dv V_SAVEMETA
indicates that indirect blocks should not be flushed.
.It Fa cred
The user credentials that are used to
.Xr VOP_FSYNC 9
buffers if
.Dv V_SAVE
is set.
.It Fa p
The process responsible for this call.
.It Fa slpflag
The slp flag that will be used in the priority of any sleeps in the function.
.It Fa slptimeo
The timeout for any sleeps in the function.
.El
.Sh LOCKS
The vnode is assumed to be locked prior to the call and remains locked upon
return.
.Sh RETURN VALUES
A value of 0 is returned on success.
.Sh PSEUDOCODE
.Bd -literal -offset indent
vn_lock(devvp, LK_EXCLUSIVE | LK_RETRY, p);
error = vinvalbuf(devvp, V_SAVE, cred, p, 0, 0);
VOP_UNLOCK(devvp, p);
if (error)
	return (error);
.Ed
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er ENOSPC
The file system is full.
(With
.Dv V_SAVE )
.It Bq Er EDQUOT
Disc quota exceeded.
(With
.Dv V_SAVE )
.It Bq Er EWOULDBLOCK
Sleep operation timed out.
(See
.Fa slptimeo )
.It Bq Er ERESTART
A signal needs to be delivered and the system call should be restarted.
(With
.Dv PCATCH
set in
.Fa slpflag )
.It Bq Er EINTR
The system has been interrupted by a signal.
(With
.Dv PCATCH
set in
.Fa slpflag )
.El
.Sh SEE ALSO
.Xr tsleep 9 ,
.Xr vnode 9
.Sh AUTHORS
This man page was originally written by
.An Chad David Aq Mt davidc@@acns.ab.ca
for
.Fx .
@


1.9
log
@use .Mt for AUTHORS email; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: vinvalbuf.9,v 1.8 2013/06/04 19:27:16 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: June 4 2013 $
d90 1
a90 1
VOP_UNLOCK(devvp, 0, p);
@


1.8
log
@Replace old-fashioned .Fd by new-fangled .In for #include lines.
Diff from Jan Klemkow <j dot klemkow at wemelug dot de> on tech@@.
No objection from jmc@@ against this type of change.
@
text
@d1 1
a1 1
.\"     $OpenBSD: vinvalbuf.9,v 1.7 2007/05/31 19:20:01 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d126 1
a126 1
.An Chad David Aq davidc@@acns.ab.ca
@


1.7
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"     $OpenBSD: vinvalbuf.9,v 1.6 2004/04/17 20:30:41 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate$
d37 2
a38 2
.Fd #include <sys/param.h>
.Fd #include <sys/vnode.h>
@


1.6
log
@lots of fixes from jared yanovich;
@
text
@d1 1
a1 1
.\"     $OpenBSD: vinvalbuf.9,v 1.5 2003/06/06 20:56:32 jmc Exp $
d30 1
a30 1
.Dd July 7, 2001
@


1.5
log
@- section reorder
- macro fixes
- kill whitespace at EOL
- use .Ox for OpenBSD, .Fx for FreeBSD
@
text
@d1 1
a1 1
.\"     $OpenBSD: vinvalbuf.9,v 1.4 2003/04/20 20:38:28 jmc Exp $
d35 1
a35 1
.Nd "flushes and invalidates all buffers associated with a vnode"
d40 2
a41 1
.Fn vinvalbuf "struct vnode *vp" "int flags" "struct ucred *cred" "struct proc *p" "int slpflag" "int slptimeo"
d56 1
a56 1
.Bl -tag -width ".Fa spltimeo"
d67 1
a67 1
indicates the indirect blocks should not be flushed.
d85 1
a85 1
A 0 value is returned on success.
d122 2
a123 1
.Xr tsleep 9
@


1.4
log
@typos, a little grammar, and lots of space at EOL deleted;
@
text
@d1 1
a1 1
.\"     $OpenBSD: vinvalbuf.9,v 1.3 2003/03/10 19:56:29 tedu Exp $
d125 2
a126 1
for FreeBSD.
@


1.3
log
@filesystem -> file system for section 9

ok jmc@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: vinvalbuf.9,v 1.2 2002/05/28 09:07:07 mpech Exp $
d52 1
a52 1
flag is set indirect blocks will not be flushed.
d66 1
a66 1
indicates the indirect blocks should not be flushed
@


1.2
log
@	man9/:
o) Start new sentence on a new line;
o) FreeBSD -> .Fx;
o) OpenBSD -> .Ox;
o) Close .Bl/Bd lists;

millert@@ ok
@
text
@d1 1
a1 1
.\"     $OpenBSD: vinvalbuf.9,v 1.1 2002/02/28 19:22:05 csapuntz Exp $
d96 1
a96 1
The filesystem is full.
@


1.1
log
@Check in some new vnode man page from FreeBSD. Thanks to Peter Werner
@
text
@d1 1
a1 1
.\"     $OpenBSD: $
d49 2
a50 1
released. If the
d81 2
a82 1
The vnode is assumed to be locked prior to the call and remains locked upon return.
@

