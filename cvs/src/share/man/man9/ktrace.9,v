head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.24
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.22
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.20
	OPENBSD_5_0:1.6.0.18
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.16
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.14
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.10
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.12
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.8
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.6
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.14
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.12
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3;
locks; strict;
comment	@.\" @;


1.12
date	2016.06.19.21.41.51;	author guenther;	state Exp;
branches;
next	1.11;
commitid	JStrarr5DOvXbTy0;

1.11
date	2016.06.15.15.31.27;	author jmc;	state Exp;
branches;
next	1.10;
commitid	BZZ7ms4mk5YHhJiH;

1.10
date	2015.09.12.15.02.28;	author lteo;	state Exp;
branches;
next	1.9;
commitid	RP3j6erDYWM5MBGJ;

1.9
date	2015.02.15.22.26.45;	author bentley;	state Exp;
branches;
next	1.8;
commitid	szmpRDHaqpG6RctM;

1.8
date	2013.08.14.06.32.32;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.04.19.27.08;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2007.05.31.19.20.00;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.26.15.07.25;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2003.10.23.18.31.34;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.29.19.46.29;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.24.22.08.56;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.24.20.15.45;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.12
log
@KTRPOINT() takes a KTR_* value, not a KTRFAC_* value.

problem noted and based on diff by Michal Mazurek (akfaew (at) jasminek.net)
ok jmc@@
@
text
@.\"	$OpenBSD: ktrace.9,v 1.11 2016/06/15 15:31:27 jmc Exp $
.\"
.\" Copyright (c) 2003 Michael Shalayeff
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: June 15 2016 $
.Dt KTRACE 9
.Os
.Sh NAME
.Nm ktrgenio ,
.Nm ktrnamei ,
.Nm ktrpsig ,
.Nm ktrsyscall ,
.Nm ktrsysret ,
.Nm KTRPOINT
.Nd process tracing kernel interface
.Sh SYNOPSIS
.In sys/param.h
.In sys/proc.h
.In sys/ktrace.h
.Fn KTRPOINT "struct proc *p" "int type"
.Ft void
.Fn ktrgenio "struct proc *p" "int fd" "enum uio_rw rw" "struct iovec *iov" "int len" "int error"
.Ft void
.Fn ktrnamei "struct proc *p" "char *path"
.Ft void
.Fn ktrpsig "struct proc *p" "int sig" "sig_t action" "int mask" "int code" "siginfo_t *si"
.Ft void
.Fn ktrsyscall "struct proc *p" "register_t code" "size_t argsize" "register_t args[]"
.Ft void
.Fn ktrsysret "struct proc *p" "register_t code" "int error" "register_t retval"
.Sh DESCRIPTION
This interface is meant for kernel subsystems and machine dependent code
to inform the user about the events occurring to the process should
tracing of such be enabled using the
.Xr ktrace 2
system call.
Each of the functions (except for
.Nm KTRPOINT )
is meant for a particular type of event and is described below.
.Pp
The
.Fn KTRPOINT
macro should be used before calling any of the other tracing functions
to verify that tracing for that particular type of events has been enabled.
.Fa type
must be a KTR_ value corresponding to a KTRFAC_ value described in
.Xr ktrace 2 .
.Pp
.Fn ktrgenio
should be called for each generic input/output transaction that is
described by the
.Fa fd
file descriptor,
.Fa rw
transaction type (consult
.Pa sys/sys/uio.h
for the
.Nm enum uio_rw
definition),
.Fa iov
input/output data vector,
.Fa len
size of the
.Fa iov
vector,
and, lastly,
.Fa error
status of the transaction.
.Pp
.Fn ktrnamei
should be called every time a
.Xr namei 9
operation is performed over the
.Fa path
name.
.Pp
.Fn ktrpsig
should be called for each signal
.Fa sig
posted for the traced process.
The
.Fa action
taken is one of
.Nm SIG_DFL ,
.Nm SIG_IGN ,
or
.Nm SIG_ERR
as described in the
.Xr sigaction 2
document.
.Fa mask
is the current traced process' signal mask.
Signal-specific code and
.Em siginfo_t
structure as described in
.In sys/siginfo.h
are given in the
.Fa code
and
.Fa si
arguments respectively.
.Pp
.Fn ktrsyscall
should be called for each system call number
.Fa code
executed with arguments in
.Fa args
of total count of
.Fa argsize .
.Pp
.Fn ktrsysret
should be called for a return from each system call number
.Fa code
and error number of
.Fa error
as described in
.Xr errno 2
and a return value in
.Fa retval
that is syscall dependent.
.Sh CODE REFERENCES
The process tracing facility is implemented in
.Pa sys/kern/kern_ktrace.c .
.Sh SEE ALSO
.Xr errno 2 ,
.Xr ktrace 2 ,
.Xr syscall 2 ,
.Xr namei 9 ,
.Xr syscall 9
.Sh HISTORY
The process tracing facility first appeared in
.Bx 4.4 .
.Pp
The
.Nm ktrace
section manual page appeared in
.Ox 3.4 .
@


1.11
log
@no more ktremul; from michal mazurek
@
text
@d1 1
a1 1
.\"	$OpenBSD: ktrace.9,v 1.10 2015/09/12 15:02:28 lteo Exp $
d26 1
a26 1
.Dd $Mdocdate: September 12 2015 $
a65 1
Possible values for the
d67 1
a67 1
argument are a mask of the KTRFAC_ values described in
@


1.10
log
@ktrcsw(9) has been removed, so remove its man page too.

ok guenther@@ miod@@ sthen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ktrace.9,v 1.9 2015/02/15 22:26:45 bentley Exp $
d26 1
a26 1
.Dd $Mdocdate: February 15 2015 $
a29 1
.Nm ktremul ,
a42 2
.Fn ktremul "struct proc *p" "char *emul"
.Ft void
a69 6
.Pp
.Fn ktremul
should be called every time emulation for the execution environment
is changed and thus the name of which is given in the
.Fa name
argument.
@


1.9
log
@Use "In" to mark up include files, instead of wrongly wrapping with Aq.

Aq is not the same as <> in non-ASCII situations, so this caused
incorrect output in some places. And it provided no semantics besides.

ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ktrace.9,v 1.8 2013/08/14 06:32:32 jmc Exp $
d26 1
a26 1
.Dd $Mdocdate: August 14 2013 $
a29 1
.Nm ktrcsw ,
a43 2
.Fn ktrcsw "struct proc *p" "int out" "int user"
.Ft void
a72 11
.Pp
.Fn ktrcsw
is called during the context switching.
The
.Fa user
argument is a boolean value specifying whether the process has
been put into a waiting state (true) or placed onto a running queue (false).
Furthermore the
.Fa user
argument indicates whether a voluntary (false) or an involuntary (true)
switching has happened.
@


1.8
log
@no longer any need to quote macro lines with >9 args;
From: Jan Stary
@
text
@d1 1
a1 1
.\"	$OpenBSD: ktrace.9,v 1.7 2013/06/04 19:27:08 schwarze Exp $
d26 1
a26 1
.Dd $Mdocdate: June 4 2013 $
d141 1
a141 1
.Aq Pa sys/siginfo.h
@


1.7
log
@Replace old-fashioned .Fd by new-fangled .In for #include lines.
Diff from Jan Klemkow <j dot klemkow at wemelug dot de> on tech@@.
No objection from jmc@@ against this type of change.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ktrace.9,v 1.6 2007/05/31 19:20:00 jmc Exp $
d26 1
a26 1
.Dd $Mdocdate: May 31 2007 $
d38 1
a38 1
.Nd "process tracing kernel interface"
@


1.6
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ktrace.9,v 1.5 2003/10/26 15:07:25 jmc Exp $
d26 1
a26 1
.Dd $Mdocdate$
d40 3
a42 3
.Fd #include <sys/param.h>
.Fd #include <sys/proc.h>
.Fd #include <sys/ktrace.h>
@


1.5
log
@typos from Jared Yanovich;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ktrace.9,v 1.4 2003/10/23 18:31:34 jmc Exp $
d26 1
a26 1
.Dd July 21, 2003
@


1.4
log
@typos from Jared Yanovich;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ktrace.9,v 1.3 2003/08/29 19:46:29 tedu Exp $
d60 1
a60 1
to inform the user about the events occuring to the process should
@


1.3
log
@add some includes, from Patrick Latifi via jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ktrace.9,v 1.2 2003/07/24 22:08:56 jmc Exp $
d83 1
a83 1
Furthemore the
@


1.2
log
@various tweaks;
ok mickey@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ktrace.9,v 1.1 2003/07/24 20:15:45 mickey Exp $
d40 3
a42 1
.In sys/ktrace.h
@


1.1
log
@rename VOP_LOOKUP.9 into vnodeops.9 for nicer xreffing.
a few pages i wrote being high on acetyl salicylic acid.
vfs(9) from netbsd.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d57 1
a57 1
This interface is ment for kernel subsystems and machine dependent code
d64 1
a64 1
is ment for a particular type of events and is described below.
d66 1
d79 1
a79 1
argument is a boolean value specifing whether process has
d93 1
a93 1
should be called for each generic input/output transactions that is
d109 1
a109 1
and, at last,
d126 1
a126 1
taken is one of the
d129 1
d138 1
a138 1
structure as descibed in the
d159 1
a159 1
as described in the
d162 2
a163 1
.Fa retval that is syscall dependent.
d165 1
a165 1
These process tracing facility is implemented in
@

