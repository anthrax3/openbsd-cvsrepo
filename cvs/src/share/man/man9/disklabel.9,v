head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.16
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.18
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.14
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.10
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.12
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.4
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.8
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.6
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.16.0.8
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.6
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.4
	OPENBSD_5_0:1.16.0.2
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.13.0.12
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.10
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.6
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.8
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.4
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.2
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.9.0.6
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.8
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.6
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4;
locks; strict;
comment	@.\" @;


1.17
date	2013.06.04.19.27.04;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2011.07.06.04.55.00;	author matthew;	state Exp;
branches;
next	1.15;

1.15
date	2011.06.04.08.26.55;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2011.06.04.02.25.23;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2008.06.26.05.42.08;	author ray;	state Exp;
branches;
next	1.12;

1.12
date	2007.06.20.18.15.47;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.06.16.42.22;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2007.05.31.19.20.00;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.22.08.48.37;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.15.04.14.29;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.03.15.21.17;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.22.00.13.34;	author avsm;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.12.18.05.58;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.26.21.28.00;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.26.20.44.51;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	99.09.22.09.54.38;	author espie;	state dead;
branches;
next	1.1;

1.1
date	99.09.22.03.16.47;	author csapuntz;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Replace old-fashioned .Fd by new-fangled .In for #include lines.
Diff from Jan Klemkow <j dot klemkow at wemelug dot de> on tech@@.
No objection from jmc@@ against this type of change.
@
text
@.\"	$OpenBSD: disklabel.9,v 1.16 2011/07/06 04:55:00 matthew Exp $
.\"	$NetBSD: disklabel.9,v 1.7 1999/03/06 22:09:29 mycroft Exp $
.\"
.\" Copyright (c) 1996 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Paul Kranenburg.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: July 6 2011 $
.Dt DISKLABEL 9
.Os
.Sh NAME
.Nm disklabel ,
.Nm readdisklabel ,
.Nm writedisklabel ,
.Nm setdisklabel ,
.Nm bounds_check_with_label
.Nd disk label management routines
.Sh SYNOPSIS
.In sys/param.h
.In sys/disklabel.h
.Ft int
.Fn readdisklabel "dev_t dev" "void (*strat)(struct buf *)" "struct disklabel *lp" "int spoofonly"
.Ft int
.Fn writedisklabel "dev_t dev" "void (*strat)(struct buf *)" "struct disklabel *lp"
.Ft int
.Fn setdisklabel "struct disklabel *olp" "struct disklabel *nlp" "u_int openmask"
.Ft int
.Fn bounds_check_with_label "struct buf *bp" "struct disklabel *lp"
.Sh DESCRIPTION
This collection of routines provides a disklabel management interface to
kernel device drivers.
These routines are classified as machine- or architecture-dependent because
of restrictions imposed by the machine architecture and boot-strapping code
on the location of the label, or because cooperation with other operating
systems requires specialized conversion code.
.Pp
.Fn readdisklabel
attempts to read a disklabel from the device identified by
.Fa dev ,
using the device strategy routine passed in
.Fa strat .
Note that a buffer structure is required to pass to the strategy routine;
it needs to be acquired and parametrized for the intended I/O operation,
and disposed of when the operation has completed.
Some fields in the disklabel passed in
.Fa lp
may be pre-initialized by the caller in order to meet device driver
requirements for the I/O operation initiated to get to the disklabel data
on the medium.
In particular, the field
.Dq d_secsize ,
if non-zero, is used by
.Fn readdisklabel
to get an appropriately sized buffer to pass to the device strategy routine.
Unspecified fields in
.Fa lp
should be set to zero.
If the medium does not contain a native disklabel that can be read in directly
or
.Fa spoofonly
argument is a true value,
If a disk label is found or can be constructed a value of 0 is returned.
Otherwise the value of the I/O errno encountered is returned.
.Pp
.Fn writedisklabel
stores disk label information contained in the disk label structure given by
.Fa lp
on the device identified by
.Fa dev .
Like
.Fn readdisklabel ,
it acquires and sets up an I/O buffer to pass to the strategy routine
.Fa strat .
.Fn writedisklabel
returns 0 on success and
.Dv EINVAL
if the disk label specifies invalid or unconvertible values.
Otherwise, any error condition reported by the device strategy routine
in the buffer's
.Dq Va b_error
field is returned.
.Pp
.Fn setdisklabel
checks a proposed new disk label passed in
.Fa nlp
for some amount of basic sanity.
This includes a check on attempts to
change the location, or reduce the size, of an existing disk partition
that is currently in use by the system.
The current disposition of the disk partitions is made available through
.Fa olp
and
.Fa openmask ,
which provide, respectively, the existing disk label and a bit mask
identifying the partitions that are currently in use.
Failure to pass on
.Dq basic sanity ,
results in a
.Dv EINVAL
return value, while a vetoed update of the partition layout is signalled by a
.Dv EBUSY
return value.
Otherwise, 0 is returned.
.Pp
.Fn bounds_check_with_label
is used to check whether a device transfer described by
.Fa bp
to the device identified by
.Fa dev ,
is properly contained within a disk partition of the disk with label
.Fa lp .
If this check fails,
.Fn bounds_check_with_label
sets the buffer's
.Dq Va b_error
field to
.Dv EINVAL
and sets the
.Dv B_ERROR
flag in
.Dq Va b_flags .
A value of \-1 is returned if any of the bound checks failed,
a null transfer was attempted,
or transfer was attempted exactly at the end of the disk partition.
Otherwise the value of 0 is returned.
.Sh SEE ALSO
.Xr disklabel 5 ,
.Xr disklabel 8 ,
.Xr fdisk 8
@


1.16
log
@Update to reflect new bounds_check_with_label() semantics.
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.15 2011/06/04 08:26:55 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: June 4 2011 $
d42 2
a43 2
.Fd #include <sys/param.h>
.Fd #include <sys/disklabel.h>
@


1.15
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.14 2011/06/04 02:25:23 krw Exp $
d145 4
a148 3
A value of \-1 is returned if any of the bound checks failed or
transfer was attempted exactly at the end of disk partition.
Otherwise the value of 1 is returned.
@


1.14
log
@Bring man page closer to current reality.
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.13 2008/06/26 05:42:08 ray Exp $
d31 1
a31 1
.Dd $Mdocdate: June 26 2008 $
d145 1
a145 1
A value of -1 is returned if any of the bound checks failed or
@


1.13
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.12 2007/06/20 18:15:47 deraadt Exp $
d31 1
a31 1
.Dd $Mdocdate: June 20 2007 $
d44 1
a44 1
.Ft char *
d51 1
a51 1
.Fn bounds_check_with_label "struct buf *bp" "struct disklabel *lp" "int wlabel"
d85 2
a86 5
If a disk label can not be found or constructed, a string containing
an approximated description of the failure mode is returned.
Otherwise the
.Dv NULL
string is returned.
d145 1
a145 23
If the argument
.Fa wlabel
is zero, and the transfer is a write operation, a check is done if the transfer
would overwrite
.Pq a portion of
the disklabel area on the medium.
If that is the case,
.Dv EROFS
is set in
.Dq Va b_error
and the
.Dv B_ERROR
flag is set in
.Dq Va b_flags .
Note that
.Fa wlabel
should be set to a non-zero value if the intended operation is expected to
install or update the disk label.
Programs that intend to do so using the raw device interface should notify
the driver by using a
.Dv DIOCWLABEL
ioctl function.
A zero value is returned if any of the bound checks failed or
@


1.12
log
@b_cylinder does not need to be set on the callpath down into drivers.
cpu_disklabel can go away, since nothing anymore needs to use it; ok miod
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.11 2007/06/06 16:42:22 deraadt Exp $
a17 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d31 1
a31 1
.Dd $Mdocdate: June 6 2007 $
@


1.11
log
@setdisklabel() openmask is now a u_int
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.10 2007/05/31 19:20:00 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: May 31 2007 $
d52 1
a52 1
.Fn readdisklabel "dev_t dev" "void (*strat)(struct buf *)" "struct disklabel *lp" "struct cpu_disklabel *osdep" "int spoofonly"
d54 1
a54 1
.Fn writedisklabel "dev_t dev" "void (*strat)(struct buf *)" "struct disklabel *lp" "struct cpu_disklabel *osdep"
d56 1
a56 1
.Fn setdisklabel "struct disklabel *olp" "struct disklabel *nlp" "u_int openmask" "struct cpu_disklabel *osdep"
d58 1
a58 1
.Fn bounds_check_with_label "struct buf *bp" "struct disklabel *lp" "struct cpu_disklabel *osdep" "int wlabel"
a91 5
.Fn readdisklabel
may resort to constructing a label from other machine-dependent information
using the provided buffer passed in the
.Fa osdep
argument.
a106 9
.Fn writedisklabel
may elect to do a machine-dependent conversion of the native disk label
structure
.Po
using the buffer pointed at by
.Fa osdep
.Pc ,
to store the disk label onto the medium in a format complying with
architectural constraints.
@


1.10
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.9 2006/02/22 08:48:37 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate$
d56 1
a56 1
.Fn setdisklabel "struct disklabel *olp" "struct disklabel *nlp" "u_long openmask" "struct cpu_disklabel *osdep"
@


1.9
log
@missing includes; from iruata souza
ok tedu
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.8 2003/04/15 04:14:29 jmc Exp $
d38 1
a38 1
.Dd December 26, 1996
@


1.8
log
@typos;

VOP, crypto and disklabel ok tedu@@
audio(9) ok naddy@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.7 2001/08/03 15:21:17 mpech Exp $
d49 2
@


1.7
log
@o) We don't like .Pp before/after .Sh;
o) .Nm always has argument in .Sh SYNOPSIS;
o) We always closes .Bl and .Bd tags;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.6 2000/12/22 00:13:34 avsm Exp $
d73 1
a73 1
Some fields in the in the disklabel passed in
d189 1
a189 1
Zero value is returned if any of the bound checks failed or
@


1.6
log
@more typo fixes; aaron@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.5 2000/10/12 18:05:58 aaron Exp $
a191 1
.Pp
@


1.5
log
@General man page cleanups, mostly to remove trailing whitespace, hard
sentence breaks, and other such things.
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.4 2000/04/26 21:28:00 mickey Exp $
d118 1
a118 1
architectural contraints.
d122 1
a122 1
if the disk label specifies invalid or unconvertable values.
d145 1
a145 1
return value, while a vetoed update of the partition layout is signaled by a
@


1.4
log
@rcsids where missing
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d29 1
a29 1
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS 
@


1.3
log
@disklabel manipulation routines page from netbsd w/ some adjustments; no history section
@
text
@d1 1
@


1.2
log
@REVERT TO PREVIOUS STATE OF AFFAIR.

If those pages are different from the NetBSD version, maybe there's a
reason ?

Like, possibly, I just read our source code, which just happens to do
things in DIFFERENT ways than NetBSD does ?

As far as the added pages go, they obviously haven't been checked against
actual code as well, hence they're worse than useless, since a large part
of the information is definitely misleading.
@
text
@d1 1
a1 2
.\"	$OpenBSD: disklabel.9,v 1.1 1999/09/22 03:16:47 csapuntz Exp $
.\"	$NetBSD: disklabel.9,v 1.8 1999/03/16 00:40:47 garbled Exp $
d49 1
a49 1
.Fn readdisklabel "dev_t dev" "void (*strat)(struct buf *)" "struct disklabel *lp" "struct cpu_disklabel *clp"
d51 1
a51 1
.Fn writedisklabel "dev_t dev" "void (*strat)(struct buf *)" "struct disklabel *lp" "struct cpu_disklabel *clp"
d53 1
a53 1
.Fn setdisklabel "struct disklabel *olp" "struct disklabel *nlp" "u_long openmask" "struct cpu_disklabel *clp"
d55 1
a55 1
.Fn bounds_check_with_label "struct buf *bp" "struct disklabel *lp" "int wlabel"
d85 4
a88 1
If the medium does not contain a native disklabel that can be read in directly,
d92 1
a92 1
.Fa clp
d114 1
a114 1
.Fa clp
d161 2
a162 2
.Dv EINVAL ,
sets the
d165 1
a165 2
.Dq Va b_flags ,
and returns -1.
d175 2
a176 2
.Dq Va b_error ,
the
d179 1
a179 2
.Dq Va b_flags ,
and -1 is returned.
d188 3
d194 2
a195 1
.Xr disklabel 8
@


1.1
log
@

Add/update some man9 pages from NetBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD: disklabel.9,v 1.8 1999/03/16 00:40:47 garbled Exp $
@

