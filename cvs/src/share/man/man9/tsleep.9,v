head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.6
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.4
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.10
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.12
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.10
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.8
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.6
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3;
locks; strict;
comment	@.\" @;


1.11
date	2016.09.13.08.32.44;	author mpi;	state Exp;
branches;
next	1.10;
commitid	JUinkWUa5er75UzF;

1.10
date	2015.09.14.15.14.55;	author schwarze;	state Exp;
branches;
next	1.9;
commitid	TPchOLbdlEugnrt2;

1.9
date	2014.01.22.07.32.47;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2014.01.22.00.09.02;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.04.19.27.14;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2010.04.08.00.16.28;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.26.05.42.08;	author ray;	state Exp;
branches;
next	1.4;

1.4
date	2008.04.17.00.11.02;	author oga;	state Exp;
branches;
next	1.3;

1.3
date	2007.11.29.11.33.05;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2007.11.28.23.24.07;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.14.16.16.08;	author mk;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Introduce rwsleep(9), an equivalent to msleep(9) but for code protected
by a write lock.

ok guenther@@, vgross@@
@
text
@.\"	$OpenBSD: tsleep.9,v 1.10 2015/09/14 15:14:55 schwarze Exp $
.\"	$NetBSD: sleep.9,v 1.11 1999/03/24 06:15:12 mycroft Exp $
.\"
.\" Copyright (c) 1996 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Paul Kranenburg.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: September 14 2015 $
.Dt TSLEEP 9
.Os
.Sh NAME
.Nm tsleep ,
.Nm msleep ,
.Nm rwsleep ,
.Nm wakeup ,
.Nm wakeup_n ,
.Nm wakeup_one
.Nd process context sleep and wakeup
.Sh SYNOPSIS
.In sys/param.h
.In sys/systm.h
.Ft int
.Fn tsleep "void *ident" "int priority" "const char *wmesg" "int timo"
.Ft int
.Fn msleep "void *ident" "struct mutex *mtx" "int priority" "const char *wmesg" "int timo"
.Ft int
.Fn rwsleep "void *ident" "struct rwlock *wl" "int priority" "const char *wmesg" "int timo"
.Ft void
.Fn wakeup "void *ident"
.Ft void
.Fn wakeup_n "void *ident" "int count"
.Ft void
.Fn wakeup_one "void *ident"
.Sh DESCRIPTION
These functions implement voluntary context switching.
.Fn tsleep ,
.Fn msleep
and
.Fn rwsleep
are used throughout the kernel whenever processing in the current context
cannot continue for any of the following reasons:
.Bl -bullet -offset indent
.It
The current process needs to await the results of a pending I/O operation.
.It
The current process needs resources
.Pq e.g. memory
which are temporarily unavailable.
.It
The current process wants access to data structures which are locked by
other processes.
.El
.Pp
The
.Fn wakeup ,
.Fn wakeup_n ,
and
.Fn wakeup_one
functions are used to notify sleeping processes of possible changes to the
condition that caused them to go to sleep.
Typically, an awakened process will -- after it has acquired a context
again -- retry the action that blocked its operation to see if the
.Dq blocking
condition has cleared.
.Pp
The
.Fn tsleep
function takes the following arguments:
.Bl -tag -width priority
.It Fa ident
An identifier of the
.Dq wait channel
representing the resource for which the current process needs to wait.
This typically is the virtual address of some kernel data structure related
to the resource for which the process is contending.
The same identifier must be used in a call to
.Fn wakeup
to get the process going again.
.Fa ident
should not be
.Dv NULL .
.It Fa priority
The process priority to be used when the process is awakened and put on
the queue of runnable processes.
This mechanism is used to optimize
.Dq throughput
of processes executing in kernel mode.
If the flag
.Dv PCATCH
is OR'ed into
.Fa priority
the process checks for posted signals before and after sleeping.
.It Fa wmesg
A pointer to a character string indicating the reason a process is sleeping.
The kernel does not use the string, but makes it available
.Pq through the process structure field Li p_wmesg
for user level utilities such as
.Xr ps 1 .
.It Fa timo
If non-zero, the process will sleep for at most
.Li timo/hz
seconds.
If this amount of time elapses and no
.Fn wakeup "ident"
has occurred, and no signal
.Pq if Dv PCATCH No was set
was posted,
.Fn tsleep
will return
.Er EWOULDBLOCK .
.El
.Pp
The
.Fn msleep
function behaves just like
.Fn tsleep ,
but takes an additional argument:
.Bl -tag -width priority
.It Fa mtx
A mutex that will be unlocked when the process is safely
on the sleep queue.
The mutex will be relocked at the end of msleep unless the
.Dv PNORELOCK
flag is set in the
.Fa priority
argument.
.El
.Pp
The
.Fn rwsleep
function behaves just like
.Fn tsleep ,
but takes an additional argument:
.Bl -tag -width priority
.It Fa wl
A write lock that will be unlocked when the process is safely
on the sleep queue.
The write lock will be relocked at the end of rwsleep unless the
.Dv PNORELOCK
flag is set in the
.Fa priority
argument.
.El
.Pp
The
.Fn wakeup
function will mark all processes which are currently sleeping on the identifier
.Fa ident
as runnable.
Eventually, each of the processes will resume execution in the kernel
context, causing a return from
.Fn tsleep .
Note that processes returning from sleep should always re-evaluate the
conditions that blocked them, since a call to
.Fn wakeup
merely signals a
.Em possible
change to the blocking conditions.
For example, when two or more processes are waiting for an exclusive lock,
only one of them will succeed in acquiring the lock when it is released.
All others will have to go back to sleep and wait for the next opportunity.
.Pp
The
.Fn wakeup_n
and
.Fn wakeup_one
functions behave similarly to
.Fn wakeup
except that only
.Fa count
or one process, respectively, is marked runnable.
.Sh RETURN VALUES
.Fn tsleep ,
.Fn msleep
and
.Fn rwsleep
return 0 if they return as a result of a
.Fn wakeup .
If they return as a result of a signal, the return value is
.Er ERESTART
if the signal has the
.Dv SA_RESTART
property
.Pq see Xr sigaction 2 ,
and
.Er EINTR
otherwise.
If they return as a result of a timeout, the return value is
.Er EWOULDBLOCK .
.Sh CODE REFERENCES
These functions are implemented in the file
.Pa sys/kern/kern_synch.c .
.Sh SEE ALSO
.Xr hz 9 ,
.Xr mi_switch 9 ,
.Xr timeout 9
@


1.10
log
@Remove useless quoting from .Fo and .Fn function names, to prevent
development of a cargo cult in case people look at existing files
for examples.  This achieves a consistent .Fo and .Fn quoting style
across the whole tree.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsleep.9,v 1.9 2014/01/22 07:32:47 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: January 22 2014 $
d37 1
d49 2
d59 2
a60 1
.Fn tsleep
d62 1
a62 1
.Fn msleep
d153 16
d196 2
a197 1
.Fn tsleep
d199 1
a199 1
.Fn msleep
@


1.9
log
@- add wakep_{n,one} to NAME and more fully into DESCRIPTION
- zap eol whitespace
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsleep.9,v 1.8 2014/01/22 00:09:02 tedu Exp $
d45 1
a45 1
.Fn "tsleep" "void *ident" "int priority" "const char *wmesg" "int timo"
d47 1
a47 1
.Fn "msleep" "void *ident" "struct mutex *mtx" "int priority" "const char *wmesg" "int timo"
d49 1
a49 1
.Fn "wakeup" "void *ident"
d51 1
a51 1
.Fn "wakeup_n" "void *ident" "int count"
d53 1
a53 1
.Fn "wakeup_one" "void *ident"
@


1.8
log
@wakeup_n and wakeup_one blurbs
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsleep.9,v 1.7 2013/06/04 19:27:14 schwarze Exp $
d31 1
a31 1
.Dd $Mdocdate: June 4 2013 $
d37 3
a39 1
.Nm wakeup
d73 7
a79 4
The function
.Fn wakeup
is used to notify sleeping processes of possible changes to the condition
that caused them to go to sleep.
d172 1
a172 1
except that only 
@


1.7
log
@Replace old-fashioned .Fd by new-fangled .In for #include lines.
Diff from Jan Klemkow <j dot klemkow at wemelug dot de> on tech@@.
No objection from jmc@@ against this type of change.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsleep.9,v 1.6 2010/04/08 00:16:28 tedu Exp $
d31 1
a31 1
.Dd $Mdocdate: April 8 2010 $
d48 4
d160 10
@


1.6
log
@these functions are in systm.h now, reminded by kettenis
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsleep.9,v 1.5 2008/06/26 05:42:08 ray Exp $
d31 1
a31 1
.Dd $Mdocdate: June 26 2008 $
d40 2
a41 2
.Fd #include <sys/param.h>
.Fd #include <sys/systm.h>
@


1.5
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsleep.9,v 1.4 2008/04/17 00:11:02 oga Exp $
d31 1
a31 1
.Dd $Mdocdate: April 17 2008 $
d41 1
a41 1
.Fd #include <sys/proc.h>
@


1.4
log
@Correct a typo:
tsleep -> msleep

from Paul de Weerd, Thanks!
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsleep.9,v 1.3 2007/11/29 11:33:05 jmc Exp $
a17 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d31 1
a31 1
.Dd $Mdocdate: November 29 2007 $
@


1.3
log
@- better integrate msleep() into this page
- art says bpendsleep has been removed, so kill it

ok art
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsleep.9,v 1.2 2007/11/28 23:24:07 art Exp $
d38 1
a38 1
.Dd $Mdocdate: November 28 2007 $
d139 1
a139 1
The mutex will be relocked at the end of tsleep unless the
@


1.2
log
@<oga> art write me a manpage
<art> What? Write it yourself.
<oga> sudo art write me a manpage.
<art> ok

Document msleep(9).
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsleep.9,v 1.1 2007/09/14 16:16:08 mk Exp $
d38 1
a38 1
.Dd $Mdocdate: September 14 2007 $
d58 4
a61 2
is used throughout the kernel whenever processing in the current context
can not continue for any of the following reasons:
d67 1
a67 1
.Pq e.g., memory
a83 5
.Va bpendsleep
label can be used as a break-point to debug a process coming back from
.Fn tsleep .
.Pp
The
d134 4
a137 3
but takes an additional
.Fa mtx
argument which is a mutex that will be unlocked when the process is safely
d144 1
d165 3
a167 1
returns 0 if it returns as a result of a
d169 1
a169 3
If a
.Fn tsleep
returns as a result of a signal, the return value is
d178 1
a178 3
If
.Fn tsleep
returns as a result of a timeout, the return value is
@


1.1
log
@sleep(9) was removed aeons ago according to miod, so remove references
to it.  Because man pages are named after functions (at least they
should be) and sleep(9) doesn't exist anymore, sleep.9 is renamed to
tsleep.9.

Input and reminders from jmc and ratchov.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sleep.9,v 1.6 2007/05/31 19:20:01 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: May 31 2007 $
d43 1
d51 2
d132 14
@

