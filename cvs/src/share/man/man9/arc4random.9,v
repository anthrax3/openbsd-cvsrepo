head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.10
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.8
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.10
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.8
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.6
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5;
locks; strict;
comment	@.\" @;


1.12
date	2015.11.23.17.53.57;	author jmc;	state Exp;
branches;
next	1.11;
commitid	GVTTSAMZ93Lz4hmE;

1.11
date	2014.11.18.02.35.17;	author tedu;	state Exp;
branches;
next	1.10;
commitid	golu0Wqh76ehrZN6;

1.10
date	2014.01.23.08.15.04;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2014.01.23.05.21.49;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2014.01.19.08.05.02;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2013.10.21.20.35.09;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2013.06.04.19.27.03;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2011.01.09.02.20.53;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2011.01.09.00.06.50;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.20.12.01.59;	author mickey;	state dead;
branches;
next	1.2;

1.2
date	2003.04.17.13.41.30;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.17.10.44.48;	author jmc;	state Exp;
branches;
next	;


desc
@@


1.12
log
@add missing NAME entries;
feedback/ok schwarze
@
text
@.\"	$OpenBSD: arc4random.9,v 1.11 2014/11/18 02:35:17 tedu Exp $
.\"
.\" Copyright (c) 1996,2000 Michael Shalayeff
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: November 18 2014 $
.Dt ARC4RANDOM 9
.Os
.Sh NAME
.Nm arc4random ,
.Nm arc4random_buf ,
.Nm arc4random_uniform ,
.Nm add_true_randomness ,
.Nm add_timer_randomness ,
.Nm add_mouse_randomness ,
.Nm add_tty_randomness ,
.Nm add_net_randomness ,
.Nm add_disk_randomness ,
.Nm add_audio_randomness
.Nd kernel random subsystem
.Sh SYNOPSIS
.In sys/systm.h
.Ft u_int32_t
.Fn arc4random "void"
.Ft void
.Fn arc4random_buf "void *buf" "size_t nbytes"
.Ft u_int32_t
.Fn arc4random_uniform "u_int32_t upper_bound"
.In dev/rndvar.h
.Ft void
.Fn add_true_randomness "int"
.Ft void
.Fn add_timer_randomness "int"
.Ft void
.Fn add_mouse_randomness "int"
.Ft void
.Fn add_tty_randomness "int"
.Ft void
.Fn add_net_randomness "int"
.Ft void
.Fn add_disk_randomness "int"
.Ft void
.Fn add_audio_randomness "int"
.Sh DESCRIPTION
The
.Fn add_random
functions below mix input into the system entropy pool, which is then used
to create a key for the ChaCha stream cipher used in the
.Fn arc4random
series of functions.
.Pp
The
.Fn add_mouse_randomness ,
.Fn add_tty_randomness ,
.Fn add_net_randomness ,
.Fn add_disk_randomness
and
.Fn add_audio_randomness
routines are used to
supply data for the random data source device for further processing.
The processing involves calculating inter-event timedelta and inserting
it into a pool which is cryptographically mixed multiple times.
.Pp
.Fn add_true_randomness
does not involve the usual timing calculations,
and causes the supplied data argument to be added to the entropy pool,
increasing the entropy counter by 32 bits.
.Pp
.Fn add_timer_randomness
will not cause the entropy counter to rise.
It is used to change the state of the pool periodically,
mostly by means of timing the random driver's operations.
.Pp
.Fn arc4random
and
.Fn arc4random_buf
provide random numbers and are intended to be called in any
circumstance where random numbers are required.
.Pp
.Fn arc4random_uniform
will return a uniformly distributed random number less than
.Fa upper_bound ,
avoiding "modulo bias" when the upper bound is not a power of two.
In the worst case, this function may consume multiple iterations
to ensure uniformity; see the source code to understand the problem
and solution.
.Pp
.Fn arc4random ,
.Fn arc4random_buf ,
and
.Fn arc4random_uniform
may be called in nearly any kernel context.
.Sh SEE ALSO
.Xr arc4random 3 ,
.Xr pchb 4 ,
.Xr random 4
@


1.11
log
@include systm.h for arc4random now
@
text
@d1 1
a1 1
.\"	$OpenBSD: arc4random.9,v 1.10 2014/01/23 08:15:04 jmc Exp $
d26 1
a26 1
.Dd $Mdocdate: January 23 2014 $
d30 10
a39 1
.Nm arc4random
@


1.10
log
@missing word;
@
text
@d1 1
a1 1
.\"	$OpenBSD: arc4random.9,v 1.9 2014/01/23 05:21:49 tedu Exp $
d33 7
a54 6
.Ft u_int32_t
.Fn arc4random "void"
.Ft void
.Fn arc4random_buf "void *buf" "size_t nbytes"
.Ft u_int32_t
.Fn arc4random_uniform "u_int32_t upper_bound"
@


1.9
log
@improve wording ("confusing mesh of hash functions" really?).
note use of chacha cipher.
@
text
@d1 1
a1 1
.\"	$OpenBSD: arc4random.9,v 1.8 2014/01/19 08:05:02 schwarze Exp $
d26 1
a26 1
.Dd $Mdocdate: January 19 2014 $
d58 1
a58 1
create a key for the ChaCha stream cipher used in the
@


1.8
log
@Fix obvious macro typo, arc4random() is .Fn, not .Pa.
Found with mandocdb(8).
@
text
@d1 1
a1 1
.\"	$OpenBSD: arc4random.9,v 1.7 2013/10/21 20:35:09 deraadt Exp $
d26 1
a26 1
.Dd $Mdocdate: October 21 2013 $
d57 2
a58 2
functions below insert random input into a confusing mesh of
hash functions to create a pool to be used by the
@


1.7
log
@update documentation for these functions.  They now state the case regarding
pthreads and chroot, and safe initialization without /dev/random and such
junk.  If you are in control of an arc4random in another library, please look
at these pages and get caught up.
ok various
@
text
@d1 1
a1 1
.\"	$OpenBSD: arc4random.9,v 1.6 2013/06/04 19:27:03 schwarze Exp $
d26 1
a26 1
.Dd $Mdocdate: June 4 2013 $
d59 1
a59 1
.Pa arc4random
@


1.6
log
@Replace old-fashioned .Fd by new-fangled .In for #include lines.
Diff from Jan Klemkow <j dot klemkow at wemelug dot de> on tech@@.
No objection from jmc@@ against this type of change.
@
text
@d1 1
a1 1
.\"	$OpenBSD: arc4random.9,v 1.5 2011/01/09 02:20:53 jmc Exp $
d26 1
a26 1
.Dd $Mdocdate: January 9 2011 $
d56 7
d71 2
a72 3
The processing involves calculating inter-event timedelta and measuring
entropy contained in the resulting delta-T; the argument data supplied
is just mixed into the pool and does not increase the entropy counter.
d87 2
a88 2
provide random numbers.
They may be called safely in any kernel context.
d94 9
@


1.5
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: arc4random.9,v 1.4 2011/01/09 00:06:50 deraadt Exp $
d33 1
a33 1
.Fd #include <dev/rndvar.h>
@


1.4
log
@update random(4) and arc4random(9) manual pages
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.26 2010/10/02 15:58:30 tedu Exp $
d26 1
a26 1
.Dd $Mdocdate: October 2 2010 $
d81 2
a82 1
provide random numbers.  They may be called safely in any kernel context.
@


1.3
log
@this ought to die but didn't
@
text
@d1 1
a1 1
.\"	$OpenBSD: arc4random.9,v 1.2 2003/04/17 13:41:30 mickey Exp $
a13 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Michael Shalayeff
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
d26 2
a27 2
.Dd March 26, 1996
.Dt RANDOM 9
d30 2
a31 2
.Nm random
.Nd device kernel interface
d48 2
d51 1
a51 1
.Fn get_random_bytes "void *buf" "size_t nbytes"
d53 1
a53 2
.Fn arc4random "void"
.br
d55 7
a61 5
.Nm add_mouse_randomness ,
.Nm add_tty_randomness ,
.Nm add_net_randomness ,
.Nm add_disk_randomness ,
.Nm add_audio_randomness
d64 7
a70 7
The processing involves calculating inter-event time delta and measuring
entropy contained in the resulting delta-T, supplied in argument data
is just mixed into the pool and does not increase entropy counter.
.br
.Nm add_true_randomness
does not involve usual timing calculations
and causes supplied data argument added to the entropy pool
a71 5
.br
.Nm add_timer_randomness
will not cause entropy counter to rise, it
is used to change the state of the pool periodically mostly
by meaning of timing random driver's operations.
d73 14
a86 10
.Nm get_random_bytes
may be used to retrieve strong random data, just
as it would by
.Xr srandom 4
device.
.br
.Nm arc4random
will give random 32 bit numbers hashed with
the ARC4 algorithm, which appears to be faster and less abusive
to the entropy pool.
@


1.2
log
@his is wrong
@
text
@d1 1
a1 1
.\"	$OpenBSD: arc4random.9,v 1.1 2003/04/17 10:44:48 jmc Exp $
@


1.1
log
@- random.9 changed to arc4random.9
- MLINKS updated to point to arc4random.9
- random.9 remains as link to kern.9

ok miod@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: random.9,v 1.12 2002/05/27 01:59:58 deraadt Exp $
d32 1
a32 1
.Dt ARC4RANDOM 9
d35 1
a35 1
.Nm arc4random
@

