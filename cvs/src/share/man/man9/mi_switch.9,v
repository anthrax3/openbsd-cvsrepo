head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.16
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.10
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.12
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.20
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.18
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.16
	OPENBSD_5_0:1.4.0.14
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.12
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.10
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.8
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3;
locks; strict;
comment	@.\" @;


1.5
date	2013.06.04.19.27.09;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.26.05.42.08;	author ray;	state Exp;
branches;
next	1.3;

1.3
date	2007.10.10.16.26.23;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.09.22.03.16.47;	author csapuntz;	state dead;
branches;
next	1.1;

1.1
date	99.09.05.16.23.11;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Replace old-fashioned .Fd by new-fangled .In for #include lines.
Diff from Jan Klemkow <j dot klemkow at wemelug dot de> on tech@@.
No objection from jmc@@ against this type of change.
@
text
@.\"	$OpenBSD: mi_switch.9,v 1.4 2008/06/26 05:42:08 ray Exp $
.\"	$NetBSD: ctxsw.9,v 1.9 1999/03/06 22:09:29 mycroft Exp $
.\"
.\" Copyright (c) 1996 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Paul Kranenburg.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: June 26 2008 $
.Dt MI_SWITCH 9
.Os
.Sh NAME
.Nm mi_switch ,
.Nm cpu_switchto
.Nd switch to another process context
.Sh SYNOPSIS
.In sys/param.h
.In sys/proc.h
.Ft void
.Fn mi_switch "void"
.Ft void
.Fn cpu_switchto "struct proc *old" "struct proc *new"
.Sh DESCRIPTION
The
.Fn mi_switch
function implements the machine-independent prelude to a process context
switch.
It is called from only a few distinguished places in the kernel code as a
result of the principle of non-preemptable kernel mode execution.
The three major uses of
.Fn mi_switch
can be enumerated as follows:
.Bl -enum -offset indent
.It
From within
.Xr tsleep 9
when the current process
voluntarily relinquishes the CPU to wait for some resource to become
available.
.It
After handling a trap
.Pq e.g., a system call or device interrupt
when the kernel prepares a return to user-mode execution.
This case is typically handled by machine-dependent trap-handling code after
detection of a change in the signal disposition of the current process, or
when a higher priority process might be available to run.
The latter event is communicated by the machine-independent scheduling
routines by calling the machine-dependent
.Fn need_resched "void" .
.It
In the signal handling code
.Pq see Xr issignal 9
if a signal is delivered that causes a process to stop.
.El
.Pp
.Fn mi_switch
records the amount of time the current process has been running in the
process structure and checks this value against the CPU time limits
allocated to the process
.Pq see Xr getrlimit 2 .
Exceeding the soft limit results in a
.Dv SIGXCPU
signal to be posted to the process, while exceeding the hard limit will
cause a
.Dv SIGKILL .
For a process which accumulated longer than 10 minutes of
CPU time, its nice level is raised to 4.
After these administrative tasks are done,
.Fn mi_switch
chooses the next process to run and hands over control to the machine
dependent routine
.Fn cpu_switchto ,
which will perform the actual process context switch.
.Pp
.Fn cpu_switchto
will save the context of the old process and switch to the new one.
A special case is when the old process is
.Dv NULL
which means that the old process has exited and doesn't need to be
saved.
.Pp
Note that
.Fn mi_switch
and thus
.Fn cpu_switchto
should be called at
.Xr splhigh 9 .
.Sh SEE ALSO
.Xr spl 9 ,
.Xr tsleep 9 ,
.Xr wakeup 9
@


1.4
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mi_switch.9,v 1.3 2007/10/10 16:26:23 deraadt Exp $
d31 1
a31 1
.Dd $Mdocdate: October 10 2007 $
d39 2
a40 2
.Fd #include <sys/param.h>
.Fd #include <sys/proc.h>
@


1.3
log
@rename man page to a real function name
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctxsw.9,v 1.13 2007/10/10 16:21:29 art Exp $
a17 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
@


1.2
log
@

Add/update some man9 pages from NetBSD
@
text
@d1 2
a2 2
.\"	$OpenBSD: mi_switch.9,v 1.1 1999/09/05 16:23:11 espie Exp $
.\"	$NetBSD: ctxsw.9,v 1.10 1999/03/16 00:40:47 garbled Exp $
d29 1
a29 1
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS 
d38 2
a39 2
.Dd November 24, 1996
.Dt CONTEXT SWITCH 9
d43 1
a43 1
.Nm cpu_switch
d46 2
d51 1
a51 1
.Fn cpu_switch "void"
a64 2
.Xr sleep 9
and
d71 1
a71 1
.Pq e.g. a system call or device interrupt
d78 1
a78 1
.Fn need_resched .
d95 2
d99 3
a101 2
hands over control to the machine dependent routine
.Fn cpu_switch ,
d104 3
a106 30
.Fn cpu_switch
will make a choice amongst the processes which are ready to run from a
priority queue data-structure.
The priority queue consists of an array
.Va qs[NQS]
of queue header structures, each of which identifies a list of runnable
processes of equal priority
.Pq see Aq Pa sys/proc.h .
A single word
.Va whichqs
containing a bit mask identifying non-empty queues assists in selecting
a process quickly.
.Fn cpu_switch
must remove the first process from the list on the queue
with the highest priority
(lower indices in 
.Va qs
indicate higher priority),
and assign the address of its process structure to the global variable
.Va curproc .
If no processes are available on the run queues,
.Fn cpu_switch
shall go into an
.Dq idle
loop.
The idle loop must allow interrupts to be taken that will eventually cause
processes to appear again on the run queues.
The variable
.Va curproc
should be
d108 2
a109 3
while
.Fn cpu_switch
waits for this to happen.
d114 1
a114 1
.Fn cpu_switch
a116 5
.Sh CODE_REFERENCES
The
.Fn mi_switch
function is implemented in the file
.Pa sys/kern/kern_synch.c .
d118 3
a120 1
.Xr sleep 9 .
@


1.1
log
@New man pages, adapted from NetBSD.
Add corresponding cross-references.
Missed some uses of .Dv.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
@

