head	1.26;
access;
symbols
	OPENBSD_6_1:1.26.0.2
	OPENBSD_6_1_BASE:1.26
	OPENBSD_6_0:1.25.0.4
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.2
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.24.0.12
	OPENBSD_5_8_BASE:1.24
	OPENBSD_5_7:1.24.0.4
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.24.0.8
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.24.0.6
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.24.0.2
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.23.0.22
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.23.0.20
	OPENBSD_5_2_BASE:1.23
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.18
	OPENBSD_5_0:1.23.0.16
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.23.0.14
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.23.0.12
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.23.0.8
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.23.0.10
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.23.0.6
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.23.0.4
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.23.0.2
	OPENBSD_4_3_BASE:1.23
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.21.0.8
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.6
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.4
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.21.0.2
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.19.0.2
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.18.0.2
	OPENBSD_3_6_BASE:1.18
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.14.0.4
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.8.0.4
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@# @;


1.26
date	2016.08.16.23.49.35;	author dlg;	state Exp;
branches;
next	1.25;
commitid	jYROnSNBAB9tFaQt;

1.25
date	2015.11.23.17.53.57;	author jmc;	state Exp;
branches;
next	1.24;
commitid	GVTTSAMZ93Lz4hmE;

1.24
date	2013.06.04.19.27.12;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2007.09.14.16.16.08;	author mk;	state Exp;
branches;
next	1.22;

1.22
date	2007.05.31.19.20.01;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2005.05.31.21.38.13;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2005.05.25.23.17.47;	author niklas;	state Exp;
branches;
next	1.19;

1.19
date	2004.12.01.02.39.04;	author jsg;	state Exp;
branches;
next	1.18;

1.18
date	2004.09.02.18.48.46;	author grange;	state Exp;
branches;
next	1.17;

1.17
date	2004.04.27.12.05.57;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2003.05.29.14.39.06;	author ho;	state Exp;
branches;
next	1.15;

1.15
date	2003.04.20.20.04.17;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2002.07.28.20.55.00;	author nordin;	state Exp;
branches;
next	1.13;

1.13
date	2002.07.23.14.03.07;	author art;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.11.05.02.43;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.20.22.21.13;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.15.23.18.06;	author art;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.15.11.51.45;	author art;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.05.09.45.55;	author angelos;	state Exp;
branches;
next	1.7;

1.7
date	2000.11.09.01.23.10;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.25.16.23.26;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.12.18.06.03;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.07.09.08.25;	author ho;	state Exp;
branches;
next	1.3;

1.3
date	99.07.09.13.35.35;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.05.23.14.11.40;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	97.05.29.15.20.49;	author kstailey;	state Exp;
branches;
next	;


desc
@@


1.26
log
@splraise() is an MI API now.

ok deraadt@@ jmc@@ mpi@@
@
text
@.\"	$OpenBSD: spl.9,v 1.25 2015/11/23 17:53:57 jmc Exp $
.\"	$NetBSD: spl.9,v 1.1 1997/03/11 06:15:05 mikel Exp $
.\"
.\" Copyright (c) 1997 Michael Long.
.\" Copyright (c) 1997 Jonathan Stone.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: November 23 2015 $
.Dt SPLX 9
.Os
.Sh NAME
.Nm splraise ,
.Nm splhigh ,
.Nm splserial ,
.Nm splsched ,
.Nm splclock ,
.Nm splstatclock ,
.Nm splvm ,
.Nm spltty ,
.Nm splsofttty ,
.Nm splnet ,
.Nm splbio ,
.Nm splsoftnet ,
.Nm splsoftclock ,
.Nm spllowersoftclock ,
.Nm spl0 ,
.Nm splx ,
.Nm splassert
.Nd modify system interrupt priority level
.Sh SYNOPSIS
.In machine/intr.h
.Ft int
.Fn splraise "int ipl"
.Ft int
.Fn splhigh void
.Ft int
.Fn splserial void
.Ft int
.Fn splsched void
.Ft int
.Fn splclock void
.Ft int
.Fn splstatclock void
.Ft int
.Fn splvm void
.Ft int
.Fn spltty void
.Ft int
.Fn splsofttty void
.Ft int
.Fn splnet void
.Ft int
.Fn splbio void
.Ft int
.Fn splsoftnet void
.Ft int
.Fn splsoftclock void
.Ft int
.Fn spllowersoftclock void
.Ft int
.Fn spl0 void
.Ft void
.Fn splx "int s"
.Ft void
.Fn splassert "int s"
.Sh DESCRIPTION
These functions raise and lower the system priority level.
They are used by kernel code to block interrupts with priority less
than or equal to the named level (i.e.,
.Fn spltty
blocks interrupts of priority less than or equal to
.Dv IPL_TTY ) .
The code may then safely access variables and data structures which
are used by kernel code that runs at an equal or lower priority level.
.Pp
An
.Nm spl
function exists for each distinct priority level which can exist in
the system.
These macros and the corresponding priority levels are
used for various defined purposes, and may be divided into two main
types: hard and soft.
Hard interrupts are generated by hardware
devices, while soft interrupts are generated by callouts and called
from the kernel's periodic timer interrupt service routine.
.Pp
In order of highest to lowest priority, the priority-raising macros
are:
.Bl -tag -width splsoftclockXX
.It Fn splhigh
blocks all hard and soft interrupts.
It is used for code that cannot
tolerate any interrupts, like hardware context switching code and the
.Xr ddb 4
in-kernel debugger.
.It Fn splserial
blocks hard interrupts from serial interfaces.
Code running at this level may not access the tty subsystem.
.It Fn splsched
blocks interrupts that may access scheduler data structures.
Specifically the clock interrupt that invokes the
.Fn schedclock
function needs to be blocked.
On some systems this is a separate clock;
on others it is the same as the statistics clock and, on these,
.Fn splsched
must block everything that
.Fn splstatclock
does.
Code running at or above this level may not call
.Xr tsleep 9
or
.Xr wakeup 9 ,
nor may it post signals.
Note that "running" means invoked by an interrupt handler that
operates at this level or higher.
Kernel code that operates in the context of a process and has called
.Fn splhigh
for blocking purposes can use
.Xr tsleep 9
or
.Xr wakeup 9 .
.It Fn splclock
blocks the hardware clock interrupt.
It is used by
.Fn hardclock
to update kernel and process times, and must be used by any other code
that accesses time-related data.
.It Fn splstatclock
blocks the hardware statistics clock interrupt.
It is used by
.Fn statclock
to update kernel profiling and other statistics, and must be used by
any code that accesses that data.
This level is identical to
.Fn splclock
if there is no separate statistics clock.
.It Fn splvm
blocks hard interrupts from all devices that are allowed to use the
kernel
.Xr malloc 9 .
That includes all disk, network, and tty device interrupts.
.It Fn spltty
blocks hard interrupts from TTY devices.
.It Fn splsofttty
blocks soft interrupts generated by serial devices.
.It Fn splnet
blocks hard interrupts from network interfaces.
.It Fn splbio
blocks hard interrupts from disks and other mass-storage devices.
.It Fn splsoftnet
blocks soft network interrupts.
.It Fn splsoftclock
blocks soft clock interrupts.
.El
.Pp
Two macros lower the system priority level.
They are:
.Bl -tag -width spllowersoftclockXX
.It Fn spllowersoftclock
unblocks all interrupts but the soft clock interrupt.
.It Fn spl0
unblocks all interrupts.
.El
.Pp
The
.Fn splraise
macro blocks interrupts at the interrupt priority level specified by
.Fa ipl .
.Pp
The
.Fn splx
macro restores the system priority level to the one encoded in
.Fa s ,
which must be a value previously returned by one of the other
.Nm spl
macros.
.Pp
The
.Fn splassert
function checks that the system is running at a certain priority level.
The argument
.Fa s
should be one of these constants:
.Pp
.Bl -tag -width IPL_SOFTCLOCKXX -compact -offset indent
.It Dv IPL_STATCLOCK
.It Dv IPL_SCHED
.It Dv IPL_CLOCK
.It Dv IPL_VM
.It Dv IPL_BIO
.It Dv IPL_TTY
.It Dv IPL_NET
.It Dv IPL_SOFTNET
.It Dv IPL_SOFTCLOCK
.It Dv IPL_NONE
.El
.Pp
The
.Fn splassert
function is optional and is not necessarily implemented on
all architectures nor enabled in all kernel configurations.
It checks the current system priority level to see if it's
at least at the level specified in the argument
.Fa s .
If possible, it also checks if it hasn't been called from an
interrupt handler with a level higher than the one requested, which
must be an error (if some code is protected from
.Dv IPL_SOFTNET
interrupts, but accessed from an
.Dv IPL_NET
interrupt, it must be a design error in the code).
.Pp
The behavior of the
.Fn splassert
function is controlled by the kern.splassert
.Xr sysctl 8 .
Valid values for it are:
.Pp
.Bl -tag -width 1nr -compact -offset indent
.It 0
disable error checking
.It 1
print a message if an error is detected
.It 2
print a message and a stack trace if possible
.It 3
like 2 but also drop into the kernel debugger
.El
.Pp
Any other value causes a system panic on errors.
@


1.25
log
@add missing NAME entries;
feedback/ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.24 2013/06/04 19:27:12 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: June 4 2013 $
d34 1
d55 2
d99 1
a99 1
.Nm
d189 5
d198 1
a198 1
.Nm
@


1.24
log
@Replace old-fashioned .Fd by new-fangled .In for #include lines.
Diff from Jan Klemkow <j dot klemkow at wemelug dot de> on tech@@.
No objection from jmc@@ against this type of change.
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.23 2007/09/14 16:16:08 mk Exp $
d30 2
a31 2
.Dd $Mdocdate: September 14 2007 $
.Dt SPL 9
d34 16
a49 1
.Nm spl
@


1.23
log
@sleep(9) was removed aeons ago according to miod, so remove references
to it.  Because man pages are named after functions (at least they
should be) and sleep(9) doesn't exist anymore, sleep.9 is renamed to
tsleep.9.

Input and reminders from jmc and ratchov.
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.22 2007/05/31 19:20:01 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d37 1
a37 1
.Fd #include <machine/intr.h>
@


1.22
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.21 2005/05/31 21:38:13 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate$
d115 1
a115 2
.Fn sleep ,
.Fn tsleep ,
d117 1
a117 1
.Fn wakeup ,
d124 1
a124 2
.Fn sleep ,
.Fn tsleep ,
d126 1
a126 1
.Fn wakeup .
@


1.21
log
@grammar;
new sentence, new line;
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.20 2005/05/25 23:17:47 niklas Exp $
d30 1
a30 1
.Dd March 11, 1997
@


1.20
log
@This patch is mortly art's work and was done *a year* ago.  Art wants to thank
everyone for the prompt review and ok of this work ;-)  Yeah, that includes me
too, or maybe especially me.  I am sorry.

Change the sched_lock to a mutex. This fixes, among other things, the infamous
"telnet localhost &" problem.  The real bug in that case was that the sched_lock
which is by design a non-recursive lock, was recursively acquired, and not
enough releases made us hold the lock in the idle loop, blocking scheduling
on the other processors.  Some of the other processors would hold the biglock though,
which made it impossible for cpu 0 to enter the kernel...  A nice deadlock.
Let me just say debugging this for days just to realize that it was all fixed
in an old diff noone ever ok'd was somewhat of an anti-climax.

This diff also changes splsched to be correct for all our architectures.
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.19 2004/12/01 02:39:04 jsg Exp $
d107 3
a109 3
function, needs to be blocked.  On some systems this is a
separate clock, on others it is the same as the statistics
clock, and on these,
@


1.19
log
@Drop advertising clause as per NetBSD some time ago.
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.18 2004/09/02 18:48:46 grange Exp $
d105 9
@


1.18
log
@Document IPL_SCHED.

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.17 2004/04/27 12:05:57 jmc Exp $
d16 1
a16 4
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by Michael Long.
.\" 4. The name of the author may not be used to endorse or promote products
@


1.17
log
@typo from Michael Knudsen;
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.16 2003/05/29 14:39:06 ho Exp $
d183 1
@


1.16
log
@Document kern.splassert=3. Some cleanup for readability.
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.15 2003/04/20 20:04:17 jmc Exp $
d83 1
a83 1
A
@


1.15
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.14 2002/07/28 20:55:00 nordin Exp $
d180 2
a181 1
.Bl -tag -width IPL_SOFTCLOCKXX
d207 1
d212 14
a225 3
Set to 0 it disables error checking, set to 1 it prints an error message
if error is detected, 2 prints a message and stack traceback if possible,
any other value causes a system panic on errors.
@


1.14
log
@Grammar.
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.13 2002/07/23 14:03:07 art Exp $
d196 1
a196 1
It checks the current system priority level too see if it's 
@


1.13
log
@IPL_NONE, not IPL_0
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.12 2002/06/11 05:02:43 art Exp $
d176 1
a176 1
function makes that the system is running at a certain priority level.
@


1.12
log
@document the need for IPL_STATCLOCK
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.11 2002/05/20 22:21:13 art Exp $
d189 1
a189 1
.It Dv IPL_0
@


1.11
log
@doc new splassert sysctl behavior.
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.10 2002/05/15 23:18:06 art Exp $
d181 1
@


1.10
log
@Document splassert.
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.9 2002/05/15 11:51:45 art Exp $
d210 2
a211 1
if error is detected, any other value causes a system panic on errors.
@


1.9
log
@splvm, not splimp
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.8 2001/06/05 09:45:55 angelos Exp $
d71 2
d173 38
@


1.8
log
@Clarify (from art@@)
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.7 2000/11/09 01:23:10 aaron Exp $
d52 1
a52 1
.Fn splimp void
d136 1
a136 1
.It Fn splimp
@


1.7
log
@The spl() functions block interrupts of equal or lesser priority, not of
higher priority. This man page could use some more improvement, but this
paragraph was too misleading to be ignored.
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.6 2000/10/25 16:23:26 aaron Exp $
d112 9
@


1.6
log
@Don't incorrectly document splserial() as spltty().
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.5 2000/10/12 18:06:03 aaron Exp $
d73 7
a79 4
They are used by kernel code running at any given priority level to
block higher-priority interrupts, so that it can safely access
variables or data structures which are used by kernel code that runs
at a higher priority level.
@


1.5
log
@General man page cleanups, mostly to remove trailing whitespace, hard
sentence breaks, and other such things.
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.4 2000/07/07 09:08:25 ho Exp $
d44 1
a44 1
.Fn spltty void
d98 1
a98 1
.It Fn spltty
@


1.4
log
@Update to match changes to splsoftclock()/spllowersoftclock().
Plus splserial() -> spltty(), splsoftserial() -> splsofttty().
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.3 1999/07/09 13:35:35 aaron Exp $
d81 2
a82 1
the system.  These macros and the corresponding priority levels are
d84 2
a85 1
types: hard and soft.  Hard interrupts are generated by hardware
d93 3
a95 3
blocks all hard and soft interrupts.  It is used for code that cannot
tolerate any interrupts, like hardware context switching code and
the
d99 2
a100 2
blocks hard interrupts from serial interfaces.  Code running at this
level may not access the tty subsystem.
d102 2
a103 2
blocks interrupts that may access scheduler data structures.  Code
running at or above this level may not call
d110 2
a111 1
blocks the hardware clock interrupt.  It is used by
d116 2
a117 1
blocks the hardware statistics clock interrupt.  It is used by
d143 2
a144 1
Two macros lower the system priority level.  They are:
@


1.3
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.2 1999/05/23 14:11:40 aaron Exp $
d44 2
a47 2
.Fn splserial void
.Ft int
d56 1
a56 1
.Fn splsoftserial void
d66 2
d89 1
a89 1
.Bl -tag -width splsoftserialXX
d96 1
a96 1
.It Fn splserial
d127 1
a127 1
.It Fn splsoftserial
d135 2
d140 2
a141 2
.Bl -tag -width splsoftclockXX
.It Fn splsoftclock
@


1.2
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: spl.9,v 1.1 1997/05/29 15:20:49 kstailey Exp $
d90 1
a90 1
tolerate any interrupts, like hardware context switching code and 
@


1.1
log
@from NetBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d35 1
a35 1
.Os OpenBSD
@

