head	1.15;
access;
symbols
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.16
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.4
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.12
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.10
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.8
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.6
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.14.0.24
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.22
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.20
	OPENBSD_5_0:1.14.0.18
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.16
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.14
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.10
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.12
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.8
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.6
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.4
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.11.0.2
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.8.0.8
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.6
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.4
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8;
locks; strict;
comment	@.\" @;


1.15
date	2013.07.16.16.05.49;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.31.19.19.50;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2006.05.26.04.02.59;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2005.04.08.18.44.03;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.04.19.55.14;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.13.22.04.32;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.06.10.29.41;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2001.10.04.10.28.20;	author wilfried;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.20.05.57.55;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.03.15.21.16;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.02.18.37.33;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.06.19.37.51;	author jjbg;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.06.06.01.08;	author jasoni;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.05.09.04.03;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.05.08.57.16;	author jjbg;	state Exp;
branches;
next	;


desc
@@


1.15
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@.\" $OpenBSD: ipcomp.4,v 1.14 2007/05/31 19:19:50 jmc Exp $
.\"
.\" Copyright (c) 2001 Jean-Jacques Bernard-Gundol <jj@@wabbitt.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt IPCOMP 4
.Os
.Sh NAME
.Nm ipcomp
.Nd IP Payload Compression Protocol
.Sh DESCRIPTION
IPComp is enabled with the following
.Xr sysctl 3
variable in
.Pa /etc/sysctl.conf :
.Bl -tag -width xxxxxxxxxxxxxxxxxxxxx -offset indent
.It net.inet.ipcomp.enable
.El
.Pp
IPComp is a protocol used to reduce the size of IP datagrams.
It can be used to enhance the communication performance between a pair
of hosts/gateways, especially on slow links, by compressing the
datagrams, provided the communicating entities have enough computational
power.
.Pp
This protocol is especially useful when encryption or authentication
is applied to IP datagrams using the IPsec protocol (see
.Xr ipsec 4
for more information about IPsec).
Encrypting information is increasing its entropy to a point where
compression to a lower layer becomes completely useless (e.g., the
PPP Compression Control Protocol).
IPcomp is applied at the network layer before other encryption
operations are applied (except encryption protocols applied at a
higher layer such as
.Xr ssh 1
or
.Xr ssl 8 ) .
.Pp
Just like for the other IPsec protocols, IPComp needs some parameters
for each connection, specifying how the compression should be done
between the entities.
The parameters are collected in a structure called an
IPComp Association (IPCA).
The parameters stored in an IPCA are the destination address and the
Compression Parameter Index (CPI).
An IPCA is the pendant of the SA (Security Association) for IPsec.
.Pp
Currently, IPCA can be created using the
.Xr ipsecctl 8
tool.
Using
.Xr ipsecctl 8
it is also possible to create IPComp flows and SA/IPCA
bundles.
Such a bundle is used to create a combination of IPsec and IPComp
flows (thus enabling compression in an IPsec protocol).
.Pp
The compression is done on the data following the IP header and an
IPComp header is inserted between the compressed data and the IP
header.
In the case of IPv6, there are extension headers which cannot be
compressed since they are modified by the router along the way to the
destination.
These extension headers are hop-by-hop, routing, and fragmentation.
.Pp
When doing compression, it is possible that the uncompressed data is
smaller in size than the compressed data.
To avoid this behaviour, a non expansion policy is used in IPComp.
If the data payload is smaller than a given threshold, it will not be
compressed.
No IPComp header will be inserted.
.Pp
IPComp uses the same policy framework as IPsec.
However unlike IPsec, only one policy is available for IPComp:
.Bl -tag -width IPSEC_LEVEL_USE
.It IPSEC_LEVEL_USE
Use IPComp for sending packets but still accept packets which are not
compressed.
.El
.Sh DIAGNOSTICS
.Xr netstat 1
can be used to obtain some statistics about IPComp usage, using the
.Fl p
flag.
Just like for IPsec, using the
.Fl r
flag,
.Xr netstat 1
displays information about IPComp flows.
.Sh SEE ALSO
.Xr enc 4 ,
.Xr inet 4 ,
.Xr ip 4 ,
.Xr ipsec 4 ,
.Xr netintro 4 ,
.Xr ipsecctl 8 ,
.Xr sysctl 8
.Sh HISTORY
The
.Nm
protocol first appeared in
.Ox 3.0 .
.Sh AUTHORS
Support for the
.Nm
protocol was written by
.An Jean-Jacques Bernard-Gundol Aq Mt jj@@wabbitt.org .
@


1.14
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.13 2006/05/26 04:02:59 deraadt Exp $
d26 1
a26 1
.Dd $Mdocdate$
d129 1
a129 1
.An Jean-Jacques Bernard-Gundol Aq jj@@wabbitt.org .
@


1.13
log
@let us not talk about ipsecadm and vpn anymore; ok reyk
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.12 2005/04/08 18:44:03 jmc Exp $
d26 1
a26 1
.Dd June 27, 2001
@


1.12
log
@minor tweaks;
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.11 2005/01/04 19:55:14 jmc Exp $
d71 1
a71 1
.Xr ipsecadm 8
d74 1
a74 1
.Xr ipsecadm 8
d118 1
a118 1
.Xr ipsecadm 8 ,
@


1.11
log
@lower case the .Nm to make `man -k ipcomp' less confusing;
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.10 2003/06/13 22:04:32 deraadt Exp $
d32 2
a33 3
.Sh NOTE
.Tn IPComp
is enabled with the following
d37 1
a37 1
.Bl -tag -width xxxxxxxxxxxxxxxxxxxxx
d40 2
a41 3
.Sh DESCRIPTION
.Tn IPComp
is a protocol used to reduce the size of IP datagrams.
d44 1
a44 1
datagrams, provided the communicating entities have enough computation
d48 1
a48 3
is applied to IP datagrams using the
.Tn IPsec
protocol (see
d65 1
a65 1
IPComp Association or IPCA.
d118 2
a119 1
.Xr ipsecadm 8
@


1.10
log
@jjbg permits 3/4 removal
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.9 2003/06/06 10:29:41 jmc Exp $
d30 1
a30 1
.Nm IPComp
@


1.9
log
@- section reorder
- some macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.8 2001/10/04 10:28:20 wilfried Exp $
a13 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"    This product includes software developed by Jean-Jacques Bernard-Gundol
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
@


1.8
log
@e.g. and i.e. cleanup
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.7 2001/08/20 05:57:55 mpech Exp $
d39 1
a39 1
is enabled with the following 
d55 1
a55 1
is applied to IP datagrams using the 
d58 1
a58 1
.Xr ipsec 4  
d72 1
a72 1
between the entities. 
d79 1
a79 1
Currently, IPCA can be created using the 
d82 1
a82 1
Using 
d97 1
a97 1
When doing compression, it is possible that the uncompressed data is 
d106 1
a106 1
.Bl -tag -width IPSEC_LEVEL_USE 
d114 1
a114 1
.Fl p 
d134 4
a137 4
Support for the 
.Nm 
protocol was written by Jean-Jacques
Bernard-Gundol <jj@@wabbitt.org>.
@


1.7
log
@Powered by @@mantoya.
o) fix bogus .Xr usage;

millert@@ ok.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.6 2001/08/03 15:21:16 mpech Exp $
d61 2
a62 2
compression to a lower layer becomes completely useless (i.e PPP
Compression Control Protocol).
@


1.6
log
@o) We don't like .Pp before/after .Sh;
o) .Nm always has argument in .Sh SYNOPSIS;
o) We always closes .Bl and .Bd tags;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.5 2001/08/02 18:37:33 mpech Exp $
d68 1
a68 1
.Xr ssl 8 ).
@


1.5
log
@o) .Sh AUTHOR -> .Sh AUTHORS;
o) .Sh EXAMPLE -> .Sh EXAMPLES;
o) Delete .Sh OPTIONS. Text moved to .Sh DESCRIPTION;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.4 2001/07/06 19:37:51 jjbg Exp $
a45 1
.Pp
@


1.4
log
@enc0 interface not used anymore.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.3 2001/07/06 06:01:08 jasoni Exp $
d134 1
a134 1
.Sh AUTHOR
@


1.3
log
@some improvement (spelling, grammar); ok angelos@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.2 2001/07/05 09:04:03 angelos Exp $
a103 7
.Pp
Just like for IPsec, this implementation uses the virtual interface
.Nm enc0 ,
which can be used in packet filters to specify packets that are
allowed to be processed by IPComp.
Since IPsec and IPComp are both using this interface, special care
must be taken when using a SA/IPCA bundle.
@


1.2
log
@Syntax, style, wording.
@
text
@d1 1
a1 1
.\" $OpenBSD: ipcomp.4,v 1.1 2001/07/05 08:57:16 jjbg Exp $
d62 1
a62 1
compression to a lower layer become completely useless (i.e PPP
d71 1
a71 1
Just like for the othre IPsec protocols, IPComp needs some parameters
d74 1
a74 1
The parameters are collected are collected in a structure called an
d85 2
a86 2
it is also possible to create IPComp flows and bundled
SA/IPCA.
d98 2
a99 2
When doing compression, it is possible that compressed data is smaller
in size than non compressed one.
d105 2
a106 2
Just like for IPsec, the implementation is using the virtual interface
.Nm enc0
d109 2
a110 2
But since IPsec and IPComp are both using this interface, special care
must be taken when using a bundle SA/IPCA.
d112 1
a112 1
IPComp is using the same policy framework as IPsec.
d142 1
a142 1
The support for the 
@


1.1
log
@Man page for IPComp. angelos@@ ok.
@
text
@d1 1
a1 1
.\" $OpenBSD$
d49 5
a53 4
is a protocol used to reduce the size of IP datagrams. It can be used 
to enhance the communication performance between a pair of
hosts/gateways, especially on slow links, by compressing the datagrams,
provided the communicating entities have enough computation power.
d60 19
a78 14
for more information about IPsec). Encrypting information is
increasing its entropy to a point where compression to a lower layer
become completely useless (i.e PPP Compression Control
Protocol). IPcomp is applied at the network layer before other
encryption operations are applied (except encryption protocols applied
at a higher layer such as ssh or ssl).
.Pp
Just like for the IPsec protocols, IPComp needs some parameters for
each connection, telling how the compression should be done between
the entities. The parameters are collected are collected in a
structure called an IPComp Association or IPCA. The parameters stored
in an IPCA are: the destination address and the Compression Parameter
Index (CPI). An IPCA is the pendant of the SA (Security Association)
for IPsec. 
d82 2
a83 1
tool. Using 
d86 3
a88 2
SA/IPCA. Such a bundle is used to create a combination of IPsec and
IPComp flows (thus enabling compression in an IPsec protocol). 
d92 2
a93 1
header. In the case of IPv6, there are extension headers which cannot be
d95 2
a96 2
destination. These extension headers are hop-by-hop, routing, and
fragmentation. 
d99 5
a103 4
in size than non compressed one. To avoid this behaviour, a non
expansion policy is used in IPComp. If the data payload is smaller
than a given threshold, it will not be compressed. No IPComp header
will be inserted.
d108 3
a110 3
allowed to be processed by IPComp. But since IPsec and IPComp are both
using this interface, special care must be taken when using a bundle
SA/IPCA.
d112 2
a113 2
IPComp is using the same policy framework than IPsec. However unlike
IPsec, only one policy is available for IPComp:
d123 2
a124 1
flag. Just like for IPsec, using the
d140 1
a140 1
.Ox 2.9 .
@

