head	1.26;
access;
symbols
	OPENBSD_6_2_BASE:1.26
	OPENBSD_6_1:1.25.0.4
	OPENBSD_6_1_BASE:1.25
	OPENBSD_6_0:1.24.0.6
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.23.0.6
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.4
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.22.0.6
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.4
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.18.0.4
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.2
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.10
	OPENBSD_5_0:1.17.0.8
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.6
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.4
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.15.0.6
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.2
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.11.0.4
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.2
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3;
locks; strict;
comment	@.\" @;


1.26
date	2017.09.12.14.57.15;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	iPHO5ZUMfHwuoMfA;

1.25
date	2017.01.23.03.01.41;	author jsg;	state Exp;
branches;
next	1.24;
commitid	lxPXZ2i1PNBfRSH7;

1.24
date	2015.09.14.17.09.26;	author schwarze;	state Exp;
branches;
next	1.23;
commitid	S61RkPHYGNo5TpDc;

1.23
date	2014.12.10.05.42.25;	author jsg;	state Exp;
branches;
next	1.22;
commitid	DAvGPdAi4mqBu73l;

1.22
date	2014.01.21.11.02.00;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2014.01.21.03.15.46;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2013.11.20.21.50.35;	author rapha;	state Exp;
branches;
next	1.19;

1.19
date	2013.07.16.16.05.48;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2012.04.04.21.11.09;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2010.02.18.23.05.04;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2009.12.12.03.19.29;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2008.11.27.14.15.02;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2008.11.26.14.57.40;	author mbalmer;	state Exp;
branches;
next	1.13;

1.13
date	2008.11.24.15.13.01;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2008.11.24.13.50.24;	author mbalmer;	state Exp;
branches;
next	1.11;

1.11
date	2007.11.17.16.55.05;	author mbalmer;	state Exp;
branches;
next	1.10;

1.10
date	2007.11.17.10.10.26;	author mbalmer;	state Exp;
branches;
next	1.9;

1.9
date	2007.11.16.23.21.08;	author mbalmer;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.31.19.19.50;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.26.22.16.24;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.26.20.19.54;	author grange;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.23.09.39.29;	author reyk;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.21.09.15.43;	author grange;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.04.18.11.58;	author grange;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.03.23.53.57;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.03.18.41.29;	author grange;	state Exp;
branches;
next	;


desc
@@


1.26
log
@use the standard .Fa idiom for ioctl(2) args
@
text
@.\"	$OpenBSD: gpio.4,v 1.25 2017/01/23 03:01:41 jsg Exp $
.\"
.\" Copyright (c) 2004 Alexander Yurchenko <grange@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 23 2017 $
.Dt GPIO 4
.Os
.Sh NAME
.Nm gpio
.Nd General Purpose Input/Output
.Sh SYNOPSIS
.Cd "gpio* at ath?"
.Cd "gpio* at elansc?" Pq i386
.Cd "gpio* at glxpcib?" Pq i386
.Cd "gpio* at gscpcib?" Pq i386
.Cd "gpio* at isagpio?"
.Cd "gpio* at nsclpcsio?"
.Cd "gpio* at omgpio?" Pq armv7
.Cd "gpio* at pcagpio?"
.Cd "gpio* at pcaled?"
.Cd "gpio* at skgpio?" Pq amd64, i386
.Cd "gpio* at sxipio?" Pq arm64, armv7
.Cd "gpio0 at voyager?" Pq loongson
.Pp
.In sys/types.h
.In sys/gpio.h
.In sys/ioctl.h
.Sh DESCRIPTION
The
.Nm
device attaches to the GPIO
controller and provides a uniform programming interface to its pins.
.Pp
Each GPIO controller with an attached
.Nm
device has an associated device file under the
.Pa /dev
directory, e.g.\&
.Pa /dev/gpio0 .
Access from userland is performed through
.Xr ioctl 2
calls on these devices.
.Pp
The layout of the GPIO device is defined at securelevel 0, i.e. typically
during system boot, and cannot be changed later.
GPIO pins can be configured and given a symbolic name and device drivers
that use GPIO pins can be attached to the
.Nm
device at securelevel 0.
All other pins will not be accessible once the runlevel has been raised.
.Sh IOCTL INTERFACE
The following structures and constants are defined in the
.In sys/gpio.h
header file:
.Bl -tag -width XXXX
.It Dv GPIOINFO Fa "struct gpio_info"
Returns information about the GPIO
controller in the
.Fa gpio_info
structure:
.Bd -literal
struct gpio_info {
	int gpio_npins;		/* total number of pins available */
};
.Ed
.It Dv GPIOPINREAD Fa "struct gpio_pin_op"
Returns the input pin value in the
.Fa gpio_pin_op
structure:
.Bd -literal
#define GPIOPINMAXNAME		64

struct gpio_pin_op {
	char gp_name[GPIOPINMAXNAME];	/* pin name */
	int gp_pin;			/* pin number */
	int gp_value;			/* value */
};
.Ed
.Pp
The
.Fa gp_name
or
.Fa gp_pin
field must be set before calling.
.It Dv GPIOPINWRITE Fa "struct gpio_pin_op"
Writes the output value to the pin.
The value set in the
.Fa gp_value
field must be either
.Dv GPIO_PIN_LOW
(logical 0) or
.Dv GPIO_PIN_HIGH
(logical 1).
On return, the
.Fa gp_value
field contains the old pin state.
.It Dv GPIOPINTOGGLE Fa "struct gpio_pin_op"
Toggles the pin output value, i.e. changes it to the opposite.
.Fa gp_value
field is ignored and on return contains the old pin state.
.It Dv GPIOPINSET Fa "struct gpio_pin_set"
Changes pin configuration flags with the new ones provided in the
.Fa gpio_pin_set
structure:
.Bd -literal
#define GPIOPINMAXNAME		64

struct gpio_pin_set {
	char gp_name[GPIOPINMAXNAME];	/* pin name */
	int gp_pin;			/* pin number */
	int gp_caps;			/* pin capabilities (ro) */
	int gp_flags;			/* pin configuration flags */
	char gp_name2[GPIOPINMAXNAME];	/* new name */
};
.Ed
.Pp
The
.Fa gp_flags
field is a combination of the following flags:
.Pp
.Bl -tag -width GPIO_PIN_OPENDRAIN -compact
.It Dv GPIO_PIN_INPUT
input direction
.It Dv GPIO_PIN_OUTPUT
output direction
.It Dv GPIO_PIN_INOUT
bi-directional
.It Dv GPIO_PIN_OPENDRAIN
open-drain output
.It Dv GPIO_PIN_PUSHPULL
push-pull output
.It Dv GPIO_PIN_TRISTATE
output disabled
.It Dv GPIO_PIN_PULLUP
internal pull-up enabled
.It Dv GPIO_PIN_PULLDOWN
internal pull-down enabled
.It Dv GPIO_PIN_INVIN
invert input
.It Dv GPIO_PIN_INVOUT
invert output
.El
.Pp
Note that the GPIO controller
may not support all of these flags.
On return the
.Fa gp_caps
field contains flags that are supported.
If no flags are specified, the pin configuration stays unchanged.
.Pp
Only GPIO pins that have been set using
.Ar GPIOPINSET
will be accessible at securelevels greater than 0.
.It Dv GPIOPINUNSET Fa "struct gpio_pin_set"
Unset the specified pin, i.e. clear its name and make it inaccessible
at securelevels greater than 0.
.It Dv GPIOATTACH Fa "struct gpio_attach"
Attach the device described in the
.Fa gpio_attach
structure on this gpio device.
.Bd -literal
struct gpio_attach {
	char ga_dvname[16];     /* device name */
	int ga_offset;		/* pin number */
	u_int32_t ga_mask;	/* binary mask */
};
.Ed
.It Dv GPIODETACH Fa "struct gpio_attach"
Detach a device from this gpio device that was previously attached using the
.Dv GPIOATTACH
.Xr ioctl 2 .
The
.Fa ga_offset
and
.Fa ga_mask
fields of the
.Fa gpio_attach
structure are ignored.
.El
.Sh FILES
.Bl -tag -width "/dev/gpiou" -compact
.It /dev/gpio Ns Ar u
GPIO device unit
.Ar u
file.
.El
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr gpioctl 8
.Sh HISTORY
The
.Nm
device first appeared in
.Ox 3.6 .
.Sh AUTHORS
.An -nosplit
The
.Nm
driver was written by
.An Alexander Yurchenko Aq Mt grange@@openbsd.org .
Runtime device attachment was added by
.An Marc Balmer Aq Mt mbalmer@@openbsd.org .
.Sh BUGS
Event capabilities are not supported.
@


1.25
log
@add sxipio(4)
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.24 2015/09/14 17:09:26 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: September 14 2015 $
d68 1
a68 1
.It Dv GPIOINFO (struct gpio_info)
d78 1
a78 1
.It Dv GPIOPINREAD (struct gpio_pin_op)
d97 1
a97 1
.It Dv GPIOPINWRITE (struct gpio_pin_op)
d109 1
a109 1
.It Dv GPIOPINTOGGLE (struct gpio_pin_op)
d113 1
a113 1
.It Dv GPIOPINSET (struct gpio_pin_set)
d166 1
a166 1
.It Dv GPIOPINUNSET (struct gpio_pin_set)
d169 1
a169 1
.It Dv GPIOATTACH (struct gpio_attach)
d180 1
a180 1
.It Dv GPIODETACH (struct gpio_attach)
@


1.24
log
@convert .Fd #include to .In
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.23 2014/12/10 05:42:25 jsg Exp $
d17 1
a17 1
.Dd $Mdocdate: December 10 2014 $
d34 1
@


1.23
log
@Add skgpio(4) a driver for the Soekris net6501 GPIO and LEDs
from Matt Dainty.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.22 2014/01/21 11:02:00 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 21 2014 $
d36 3
a38 3
.Fd #include <sys/types.h>
.Fd #include <sys/gpio.h>
.Fd #include <sys/ioctl.h>
@


1.22
log
@fix typo: s/ ar / at /
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.21 2014/01/21 03:15:46 schwarze Exp $
d33 1
@


1.21
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.20 2013/11/20 21:50:35 rapha Exp $
d17 1
a17 1
.Dd $Mdocdate: November 20 2013 $
d26 1
a26 1
.Cd "gpio* ar glxpcib?" Pq i386
@


1.20
log
@Add omgpio(4) manpage.
Help and ok jmc@@, syl@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.19 2013/07/16 16:05:48 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 16 2013 $
d63 1
a63 1
.Aq Pa sys/gpio.h
@


1.19
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.18 2012/04/04 21:11:09 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: April 4 2012 $
d30 1
@


1.18
log
@use -nosplit for AUTHORS;
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.17 2010/02/18 23:05:04 miod Exp $
d17 1
a17 1
.Dd $Mdocdate: February 18 2010 $
d209 1
a209 1
.An Alexander Yurchenko Aq grange@@openbsd.org .
d211 1
a211 1
.An Marc Balmer Aq mbalmer@@openbsd.org .
@


1.17
log
@Mention new developments.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.16 2009/12/12 03:19:29 krw Exp $
d17 1
a17 1
.Dd $Mdocdate: December 12 2009 $
d205 1
@


1.16
log
@Some spelling corrections from Brad Tilley via tech@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.15 2008/11/27 14:15:02 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: November 27 2008 $
d32 1
@


1.15
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.14 2008/11/26 14:57:40 mbalmer Exp $
d17 1
a17 1
.Dd $Mdocdate: November 26 2008 $
d163 1
a163 1
Unset the specified pin, i.e. clear its name and make it unaccessible
@


1.14
log
@Document the new semnatics and ioctl(2)s of gpio(4).
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.13 2008/11/24 15:13:01 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: November 24 2008 $
d53 1
a53 1
during system boot, and can not be changed later.
a62 1
.Pp
d161 1
a161 1
will be accessible at securelevels > 0.
d164 1
a164 1
at securelevels > 0.
@


1.13
log
@- tweak previous
- make the ioctl list non-compact, and kill .Pp
- kill .Tn
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.12 2008/11/24 13:50:24 mbalmer Exp $
d51 8
d80 2
d83 3
a85 2
	int gp_pin;		/* pin number */
	int gp_value;		/* value */
d90 2
d110 1
a110 1
.It Dv GPIOPINCTL (struct gpio_pin_ctl)
d112 1
a112 1
.Fa gpio_pin_ctl
d115 8
a122 4
struct gpio_pin_ctl {
	int gp_pin;		/* pin number */
	int gp_caps;		/* pin capabilities (read-only) */
	int gp_flags;		/* pin configuration flags */
d159 7
@


1.12
log
@Document recent changes (two new ioctls).
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.11 2007/11/17 16:55:05 mbalmer Exp $
d17 1
a17 1
.Dd $Mdocdate: November 17 2007 $
d39 1
a39 2
device attaches to the
.Tn GPIO
d42 1
a42 3
Each
.Tn GPIO
controller with an attached
d56 1
a56 1
.Bl -tag -width XXXX -compact
d58 1
a58 2
Returns information about the
.Tn GPIO
a66 1
.Pp
a80 1
.Pp
a92 1
.Pp
a96 1
.Pp
d136 1
a136 3
Note that the
.Tn GPIO
controller
a141 1
.Pp
a152 1
.Pp
d155 1
a155 1
.Ar GPIOATTACH
@


1.11
log
@GPIO pins can be programmed to invert input or output on some devices.
Introduce new flags, GPIO_PIN_INVIN and GPIO_PIN_INVOUT, for this.

ok grange
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.10 2007/11/17 10:10:26 mbalmer Exp $
d152 24
d197 2
@


1.10
log
@List all gpio(4) devices in the SYNOPSIS but not in the SEE ALSO section.
Mention GPIO_PIN_PULLDOWN.

requested by and discussed with jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.9 2007/11/16 23:21:08 mbalmer Exp $
d17 1
a17 1
.Dd $Mdocdate: November 16 2007 $
d138 4
@


1.9
log
@.Xr glxpcib 4
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.8 2007/05/31 19:19:50 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate$
d24 5
d30 2
a31 1
.Cd "gpio* at gscpcib?"
d136 2
a157 6
.Xr ath 4 ,
.Xr elansc 4 ,
.Xr glxpcib 4,
.Xr gscpcib 4 ,
.Xr isagpio 4 ,
.Xr nsclpcsio 4 ,
@


1.8
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.7 2006/03/26 22:16:24 jmc Exp $
d152 1
@


1.7
log
@fix SEE ALSO;
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.6 2006/03/26 20:19:54 grange Exp $
d17 1
a17 1
.Dd May 3, 2004
@


1.6
log
@Support for accesing 8-bit ISA I/O throught the gpio(4)
framework. Allows to use stupid GPIO device on the
Acrosser AR-B1662 board.

Work by form@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.5 2004/11/23 09:39:29 reyk Exp $
d153 1
a153 1
.Xr isagpio.4 ,
@


1.5
log
@support the gpio found on ath(4) devices.
ok grange@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.4 2004/09/21 09:15:43 grange Exp $
d153 1
@


1.4
log
@.Xr elansc(4)
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.3 2004/06/04 18:11:58 grange Exp $
d150 1
@


1.3
log
@Bugs section, of course: we don't support event capabilities yet.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.2 2004/06/03 23:53:57 jmc Exp $
d150 1
@


1.2
log
@- add articles
- escape punctuation
- kill whitespace
- missing .El
- sort SEE ALSO
@
text
@d1 1
a1 1
.\"	$OpenBSD: gpio.4,v 1.1 2004/06/03 18:41:29 grange Exp $
d163 2
@


1.1
log
@gpio(4) framework man page.

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d39 1
a39 1
controller with attached
d41 1
a41 1
device has associated device file under the
d43 1
a43 1
directory, e.g.
d49 3
a51 3
The following structures and constants are defined in
.Aq Pa sys/gpio.h 
header file.
d67 1
a67 1
Returns input pin value in the
d82 2
a83 2
Writes output value to the pin.
Value set in the
d90 1
a90 1
On return
d92 1
a92 1
field contains old pin state.
d95 1
a95 1
Toggles pin output value, i.e. changes it to the opposite.
d97 1
a97 1
field is ignored and on return contains old pin state.
d111 1
d135 1
a135 1
may not support all these flags.
d139 1
a139 1
If no flags specified pin configuration stays unchanged.
d147 1
d151 2
a152 2
.Xr nsclpcsio 4
.Xr gpioctl 8 ,
@

