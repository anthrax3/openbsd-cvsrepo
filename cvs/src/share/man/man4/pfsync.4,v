head	1.36;
access;
symbols
	OPENBSD_6_2_BASE:1.36
	OPENBSD_6_1:1.36.0.4
	OPENBSD_6_1_BASE:1.36
	OPENBSD_6_0:1.33.0.8
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.33.0.2
	OPENBSD_5_9_BASE:1.33
	OPENBSD_5_8:1.33.0.4
	OPENBSD_5_8_BASE:1.33
	OPENBSD_5_7:1.32.0.4
	OPENBSD_5_7_BASE:1.32
	OPENBSD_5_6:1.31.0.20
	OPENBSD_5_6_BASE:1.31
	OPENBSD_5_5:1.31.0.18
	OPENBSD_5_5_BASE:1.31
	OPENBSD_5_4:1.31.0.14
	OPENBSD_5_4_BASE:1.31
	OPENBSD_5_3:1.31.0.12
	OPENBSD_5_3_BASE:1.31
	OPENBSD_5_2:1.31.0.10
	OPENBSD_5_2_BASE:1.31
	OPENBSD_5_1_BASE:1.31
	OPENBSD_5_1:1.31.0.8
	OPENBSD_5_0:1.31.0.6
	OPENBSD_5_0_BASE:1.31
	OPENBSD_4_9:1.31.0.4
	OPENBSD_4_9_BASE:1.31
	OPENBSD_4_8:1.31.0.2
	OPENBSD_4_8_BASE:1.31
	OPENBSD_4_7:1.30.0.2
	OPENBSD_4_7_BASE:1.30
	OPENBSD_4_6:1.29.0.4
	OPENBSD_4_6_BASE:1.29
	OPENBSD_4_5:1.28.0.2
	OPENBSD_4_5_BASE:1.28
	OPENBSD_4_4:1.27.0.2
	OPENBSD_4_4_BASE:1.27
	OPENBSD_4_3:1.26.0.2
	OPENBSD_4_3_BASE:1.26
	OPENBSD_4_2:1.25.0.2
	OPENBSD_4_2_BASE:1.25
	OPENBSD_4_1:1.24.0.2
	OPENBSD_4_1_BASE:1.24
	OPENBSD_4_0:1.23.0.6
	OPENBSD_4_0_BASE:1.23
	OPENBSD_3_9:1.23.0.4
	OPENBSD_3_9_BASE:1.23
	OPENBSD_3_8:1.23.0.2
	OPENBSD_3_8_BASE:1.23
	OPENBSD_3_7:1.22.0.2
	OPENBSD_3_7_BASE:1.22
	OPENBSD_3_6:1.19.0.2
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.16.0.2
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3;
locks; strict;
comment	@.\" @;


1.36
date	2016.08.30.13.56.14;	author jmc;	state Exp;
branches;
next	1.35;
commitid	G3pUQyN5me9l5mZ6;

1.35
date	2016.08.29.10.39.59;	author mpi;	state Exp;
branches;
next	1.34;
commitid	lv1oBz9ULszLwxsf;

1.34
date	2016.08.25.10.51.37;	author sthen;	state Exp;
branches;
next	1.33;
commitid	a9TtLLaMdp7vd7CZ;

1.33
date	2015.06.25.10.18.56;	author jmc;	state Exp;
branches;
next	1.32;
commitid	UqtvGd8E3Nzuxphd;

1.32
date	2015.02.01.08.33.48;	author jsg;	state Exp;
branches;
next	1.31;
commitid	x3tGveEpwscl8e9n;

1.31
date	2010.04.29.08.45.44;	author henning;	state Exp;
branches;
next	1.30;

1.30
date	2009.11.27.07.09.34;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2009.06.17.08.56.43;	author sthen;	state Exp;
branches;
next	1.28;

1.28
date	2009.02.17.10.05.18;	author dlg;	state Exp;
branches;
next	1.27;

1.27
date	2008.06.03.19.51.02;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2007.09.20.20.50.07;	author mpf;	state Exp;
branches;
next	1.25;

1.25
date	2007.05.31.19.19.51;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2006.10.23.07.05.49;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2005.08.09.09.55.41;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2005.02.24.15.53.17;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2005.02.06.08.17.26;	author mcbride;	state Exp;
branches;
next	1.20;

1.20
date	2005.01.20.17.52.53;	author mcbride;	state Exp;
branches;
next	1.19;

1.19
date	2004.08.03.09.15.33;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2004.08.03.06.02.44;	author mcbride;	state Exp;
branches;
next	1.17;

1.17
date	2004.03.31.08.28.36;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2004.03.22.21.04.36;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2004.03.22.07.44.39;	author mcbride;	state Exp;
branches;
next	1.14;

1.14
date	2004.03.21.19.47.59;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2004.03.13.09.16.45;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.12.24.19.49.00;	author mcbride;	state Exp;
branches;
next	1.11;

1.11
date	2003.12.16.11.12.58;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2003.12.16.04.33.30;	author mcbride;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.16.03.27.36;	author mcbride;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.08.07.58.19;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.08.00.45.33;	author mcbride;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.06.10.29.41;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.01.18.07.28;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.31.15.11.17;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.30.15.29.41;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.29.18.50.22;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.29.18.37.12;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.36
log
@use a mixture of .Dl and .Bd -compact to reduce the amount of
vertical whitespace, making it easier to see which hostname.if file
relates to which example;
@
text
@.\"	$OpenBSD: pfsync.4,v 1.35 2016/08/29 10:39:59 mpi Exp $
.\"
.\" Copyright (c) 2002 Michael Shalayeff
.\" Copyright (c) 2003-2004 Ryan McBride
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF MIND,
.\" USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: August 29 2016 $
.Dt PFSYNC 4
.Os
.Sh NAME
.Nm pfsync
.Nd packet filter state table synchronisation interface
.Sh SYNOPSIS
.Cd "pseudo-device pfsync"
.Sh DESCRIPTION
The
.Nm
interface is a pseudo-device which exposes certain changes to the state
table used by
.Xr pf 4 .
State changes can be viewed by invoking
.Xr tcpdump 8
on the
.Nm
interface.
If configured with a physical synchronisation interface,
.Nm
will also send state changes out on that interface,
and insert state changes received on that interface from other systems
into the state table.
.Pp
By default, all local changes to the state table are exposed via
.Nm .
State changes from packets received by
.Nm
over the network are not rebroadcast.
Updates to states created by a rule marked with the
.Ar no-sync
keyword are ignored by the
.Nm
interface (see
.Xr pf.conf 5
for details).
.Pp
The
.Nm
interface will attempt to collapse multiple state updates into a single
packet where possible.
The maximum number of times a single state can be updated before a
.Nm
packet will be sent out is controlled by the
.Ar maxupd
parameter to ifconfig
(see
.Xr ifconfig 8
and the example below for more details).
The sending out of a
.Nm
packet will be delayed by a maximum of one second.
.Pp
Where more than one firewall might actively handle packets, e.g. with certain
.Xr ospfd 8 ,
.Xr bgpd 8
or
.Xr carp 4
configurations, it is beneficial to defer transmission of the initial
packet of a connection.
The
.Nm
state insert message is sent immediately; the packet is queued until
either this message is acknowledged by another system, or a timeout has
expired.
This behaviour is enabled with the
.Ar defer
parameter to
.Xr ifconfig 8 .
.Sh NETWORK SYNCHRONISATION
States can be synchronised between two or more firewalls using this
interface, by specifying a synchronisation interface using
.Xr ifconfig 8 .
For example, the following command configures an address on fxp0 and
sets it as the synchronisation interface:
.Bd -literal -offset indent
# ifconfig fxp0 inet 172.19.13.1/28
# ifconfig pfsync0 syncdev fxp0
.Ed
.Pp
By default, state change messages are sent out on the synchronisation
interface using IP multicast packets to the 224.0.0.240 group address.
An alternative destination address for
.Nm
packets can be specified using the
.Ic syncpeer
keyword.
.\" This can be used in combination with
.\" .Xr ipsec 4
.\" to protect the synchronisation traffic.
.\" In such a configuration, the syncdev should be set to the
.\" .Xr enc 4
.\" interface, as this is where the traffic arrives when it is decapsulated,
.\" e.g.:
.\" .Bd -literal -offset indent
.\" # ifconfig pfsync0 syncpeer 10.0.0.2 syncdev enc0
.\" .Ed
.Pp
It is important that the pfsync traffic be well secured
as there is no authentication on the protocol and it would
be trivial to spoof packets which create states, bypassing the pf ruleset.
Only run the pfsync protocol on a trusted network \- ideally a network
dedicated to pfsync messages such as a crossover cable between two firewalls.
.\" or specify a peer address and protect the traffic with
.\" .Xr ipsec 4 .
.Sh EXAMPLES
.Nm
and
.Xr carp 4
can be used together to provide automatic failover of a pair of firewalls
configured in parallel.
One firewall will handle all traffic until it dies, is shut down, or is
manually demoted, at which point the second firewall will take over
automatically.
.Pp
Both firewalls in this example have three
.Xr sis 4
interfaces.
sis0 is the external interface, on the 10.0.0.0/24 subnet; sis1 is the
internal interface, on the 192.168.0.0/24 subnet; and sis2 is the
.Nm
interface, using the 192.168.254.0/24 subnet.
A crossover cable connects the two firewalls via their sis2 interfaces.
On all three interfaces, firewall A uses the .254 address, while firewall B
uses .253.
The interfaces are configured as follows (firewall A unless otherwise
indicated):
.Pp
.Pa /etc/hostname.sis0 :
.Dl inet 10.0.0.254 255.255.255.0 NONE
.Pp
.Pa /etc/hostname.sis1 :
.Dl inet 192.168.0.254 255.255.255.0 NONE
.Pp
.Pa /etc/hostname.sis2 :
.Dl inet 192.168.254.254 255.255.255.0 NONE
.Pp
.Pa /etc/hostname.carp0 :
.Bd -literal -offset indent -compact
inet 10.0.0.1 255.255.255.0 10.0.0.255 \e
	vhid 1 carpdev sis0 pass foo
.Ed
.Pp
.Pa /etc/hostname.carp1 :
.Bd -literal -offset indent -compact
inet 192.168.0.1 255.255.255.0 192.168.0.255 \e
	vhid 2 carpdev sis1 pass bar
.Ed
.Pp
.Pa /etc/hostname.pfsync0 :
.Dl up syncdev sis2
.Pp
.Xr pf 4
must also be configured to allow
.Nm
and
.Xr carp 4
traffic through.
The following should be added to the top of
.Pa /etc/pf.conf :
.Bd -literal -offset indent
pass quick on { sis2 } proto pfsync keep state (no-sync)
pass on { sis0 sis1 } proto carp keep state (no-sync)
.Ed
.Pp
It is preferable that one firewall handle the forwarding of all the traffic,
therefore the
.Ar advskew
on the backup firewall's
.Xr carp 4
interfaces should be set to something higher than
the primary's.
For example, if firewall B is the backup, its
.Pa /etc/hostname.carp1
would look like this:
.Bd -literal -offset indent
inet 192.168.0.1 255.255.255.0 192.168.0.255 \e
	vhid 2 pass bar advskew 100
.Ed
.Pp
The following must also be added to
.Pa /etc/sysctl.conf :
.Bd -literal -offset indent
net.inet.carp.preempt=1
.Ed
.Sh SEE ALSO
.Xr bpf 4 ,
.Xr carp 4 ,
.\" .Xr enc 4 ,
.Xr inet 4 ,
.Xr inet6 4 ,
.\" .Xr ipsec 4 ,
.Xr netintro 4 ,
.Xr pf 4 ,
.Xr hostname.if 5 ,
.Xr pf.conf 5 ,
.Xr protocols 5 ,
.Xr ifconfig 8 ,
.Xr ifstated 8 ,
.Xr tcpdump 8
.Sh HISTORY
The
.Nm
device first appeared in
.Ox 3.3 .
.Pp
The
.Nm
protocol and kernel implementation were significantly modified between
.Ox 4.4
and
.Ox 4.5 .
The two protocols are incompatible and will not interoperate.
.Sh BUGS
.Nm
does not currently work with
.Xr ipsec 4 .
@


1.35
log
@Make examples fit in 80 columns, reminded by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.34 2016/08/25 10:51:37 sthen Exp $
d27 1
a27 1
.Dd $Mdocdate: August 25 2016 $
d157 1
a157 3
.Bd -literal -offset indent
inet 10.0.0.254 255.255.255.0 NONE
.Ed
d160 1
a160 3
.Bd -literal -offset indent
inet 192.168.0.254 255.255.255.0 NONE
.Ed
d163 1
a163 3
.Bd -literal -offset indent
inet 192.168.254.254 255.255.255.0 NONE
.Ed
d166 1
a166 1
.Bd -literal -offset indent
d172 1
a172 1
.Bd -literal -offset indent
d178 1
a178 3
.Bd -literal -offset indent
up syncdev sis2
.Ed
@


1.34
log
@Fix pfsync(4)'s carp examples: as of ip_carp.c r1.245, carpdev must be
specified.  From Bryan Stenson.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.33 2015/06/25 10:18:56 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate: June 25 2015 $
d173 2
a174 1
inet 10.0.0.1 255.255.255.0 10.0.0.255 vhid 1 carpdev sis0 pass foo
d179 2
a180 1
inet 192.168.0.1 255.255.255.0 192.168.0.255 vhid 2 carpdev sis1 pass bar
d212 2
a213 2
inet 192.168.0.1 255.255.255.0 192.168.0.255 vhid 2 pass bar \e
	advskew 100
@


1.33
log
@pfsync and ipsec do not currently work; from lukasz czarniecki
i've chosen to comment out the pertinent text rather than remove it...

confirmation/ok dlg
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.32 2015/02/01 08:33:48 jsg Exp $
d27 1
a27 1
.Dd $Mdocdate: February 1 2015 $
d173 1
a173 1
inet 10.0.0.1 255.255.255.0 10.0.0.255 vhid 1 pass foo
d178 1
a178 1
inet 192.168.0.1 255.255.255.0 192.168.0.255 vhid 2 pass bar
@


1.32
log
@Fix a typo in the Nd line.  From Steven McDonald.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.31 2010/04/29 08:45:44 henning Exp $
d27 1
a27 1
.Dd $Mdocdate: April 29 2010 $
d115 10
a124 10
This can be used in combination with
.Xr ipsec 4
to protect the synchronisation traffic.
In such a configuration, the syncdev should be set to the
.Xr enc 4
interface, as this is where the traffic arrives when it is decapsulated,
e.g.:
.Bd -literal -offset indent
# ifconfig pfsync0 syncpeer 10.0.0.2 syncdev enc0
.Ed
d129 4
a132 4
Either run the pfsync protocol on a trusted network \- ideally a network
dedicated to pfsync messages such as a crossover cable between two firewalls,
or specify a peer address and protect the traffic with
.Xr ipsec 4 .
d222 1
a222 1
.Xr enc 4 ,
d225 1
a225 1
.Xr ipsec 4 ,
d247 4
@


1.31
log
@fix multicast address, Sebastian Benoit <benoit-lists at fb12.de>
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.30 2009/11/27 07:09:34 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate: November 27 2009 $
d32 1
a32 1
.Nd packet filter state table sychronisation interface
@


1.30
log
@benefical -> beneficial; from Brad Tilley
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.29 2009/06/17 08:56:43 sthen Exp $
d27 1
a27 1
.Dd $Mdocdate: June 17 2009 $
d109 1
a109 1
interface using IP multicast packets to the 244.0.0.240 group address.
@


1.29
log
@Document the 'defer' ifconfig flag. From me with a few tweaks by dlg@@.
reads ok to jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.28 2009/02/17 10:05:18 dlg Exp $
d27 1
a27 1
.Dd $Mdocdate: February 17 2009 $
d86 1
a86 1
configurations, it is benefical to defer transmission of the initial
@


1.28
log
@massage a bit. note that pfsync in openbsd 4.4 and 4.5 are incompatible.

requested by deraadt@@ tweaks by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.26 2007/09/20 20:50:07 mpf Exp $
d27 1
a27 1
.Dd $Mdocdate: September 20 2007 $
d80 17
d101 2
a102 2
For example, the following command sets fxp0 as the synchronisation
interface:
d104 1
@


1.27
log
@fix some spacing issues;
@
text
@d32 1
a32 1
.Nd packet filter state table logging interface
d48 1
a48 1
will also send state changes out on that interface using IP multicast,
d54 1
a54 1
However, state changes from packets received by
d57 1
a57 1
States created by a rule marked with the
d59 1
a59 1
keyword are omitted from the
d67 5
a71 4
interface will attempt to collapse multiple updates of the same
state into one message where possible.
The maximum number of times this can be done before the update is sent out
is controlled by the
d77 3
a79 18
.Pp
Each packet retrieved on this interface has a header associated
with it of length
.Dv PFSYNC_HDRLEN .
The header indicates the version of the protocol, address family,
action taken on the following states, and the number of state
table entries attached in this packet.
This structure is defined in
.Aq Pa net/if_pfsync.h
as:
.Bd -literal -offset indent
struct pfsync_header {
	u_int8_t version;
	u_int8_t af;
	u_int8_t action;
	u_int8_t count;
};
.Ed
d91 4
a94 4
interface using IP multicast packets.
The protocol is IP protocol 240, PFSYNC, and the multicast group
used is 224.0.0.240.
When a peer address is specified using the
d96 4
a99 3
keyword, the peer address is used as a destination for the pfsync traffic,
and the traffic can then be protected using
.Xr ipsec 4 .
a114 13
.Pp
There is a one-to-one correspondence between packets seen by
.Xr bpf 4
on the
.Nm
interface, and packets sent out on the synchronisation interface, i.e.\&
a packet with 4 state deletion messages on
.Nm
means that the same 4 deletions were sent out on the synchronisation
interface.
However, the actual packet contents may differ as the messages
sent over the network are "compressed" where possible, containing
only the necessary information.
d121 3
a123 2
One firewall handles all traffic \- if it dies or
is shut down, the second firewall takes over automatically.
d181 2
a182 2
If it is preferable that one firewall handle the traffic,
the
d221 8
@


1.26
log
@Since keep state is the default now, change pf.conf
example to use (no-sync) for pfsync and carp traffic.
OK mcbride@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.25 2007/05/31 19:19:51 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate: May 31 2007 $
d124 1
a124 1
Either run the pfsync protocol on a trusted network \- ideally  a network
@


1.25
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.24 2006/10/23 07:05:49 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate$
d202 2
a203 2
pass quick on { sis2 } proto pfsync
pass on { sis0 sis1 } proto carp
@


1.24
log
@no need to use "keep state" and "flags S/SA" in pf rules,
now that it is the default;

ok henning mcbride camield (ftp-proxy bits) deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.23 2005/08/09 09:55:41 jmc Exp $
d27 1
a27 1
.Dd November 29, 2002
@


1.23
log
@add Xr to ifstated(8);
ok mpf@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.22 2005/02/24 15:53:17 jmc Exp $
d203 1
a203 1
pass on { sis0 sis1 } proto carp keep state
@


1.22
log
@add carp(4) to SEE ALSO;
from freebsd -r1.4;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.21 2005/02/06 08:17:26 mcbride Exp $
d239 1
@


1.21
log
@missing words
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.20 2005/01/20 17:52:53 mcbride Exp $
d228 1
@


1.20
log
@Document syncif->syncdev change. Also fix order of syncdev option
in ifconfig manpage.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.19 2004/08/03 09:15:33 jmc Exp $
d72 1
a72 1
to ifconfig
@


1.19
log
@tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.18 2004/08/03 06:02:44 mcbride Exp $
d101 1
a101 1
# ifconfig pfsync0 syncif fxp0
d113 1
a113 1
In such a configuration, the syncif should be set to the
d118 1
a118 1
# ifconfig pfsync0 syncpeer 10.0.0.2 syncif enc0
d190 1
a190 1
up syncif sis2
@


1.18
log
@Document 'syncpeer'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.17 2004/03/31 08:28:36 jmc Exp $
d109 1
a109 1
.Em syncpeer
d114 1
a114 1
.Xr enc
d124 1
a124 1
Either run the pfsync protocol on a trusted network - ideally  a network
d228 1
a228 1
.Xr enc 4,
@


1.17
log
@a little cleanup;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.16 2004/03/22 21:04:36 jmc Exp $
d4 1
d104 1
a104 1
State change messages are sent out on the synchronisation
d108 12
d121 2
a122 2
It is important that the synchronisation interface be on a trusted
network as there is no authentication on the protocol and it would
d124 4
a127 2
Ideally, this is a network dedicated to pfsync messages,
i.e. a crossover cable between two firewalls.
d228 1
d231 1
@


1.16
log
@some spacing, and a little cleanup;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.15 2004/03/22 07:44:39 mcbride Exp $
d31 1
a31 1
.Nd packet filter states table logging interface
d71 1
a71 1
to ifconfig.
d74 1
a74 1
and the example below for more details)
d80 1
a80 1
action taken on the following states and the number of state
d82 1
a82 1
This structure, defined in
d84 1
a84 1
looks like:
d98 1
a98 1
interface.
d138 2
a139 2
sis0 is the external interface, on the 10.0.0.0/24 subnet, sis1 is the
internal interface, on the 192.168.0.0/24 subnet, and sis2 is the
@


1.15
log
@Add a complete pfsync+carp firewall failover example.

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.14 2004/03/21 19:47:59 miod Exp $
d131 3
a133 2
configured in parallel. One firewall handles all traffic - if it dies or 
is shut down, the second firewall takes over automatically. 
d144 1
a144 1
uses .253. 
d191 1
a191 1
If it is preferable that one firewall be handling the traffic, 
d197 2
a198 1
the primary's. For example if firewall B is the backup, it's
d217 1
a217 1
.Xr hostname.if 5,
@


1.14
log
@Homogeneize config lines for pseudo-devices, and do not put fixed values.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.13 2004/03/13 09:16:45 jmc Exp $
d127 79
d207 1
a207 2
# ifconfig pfsync0 up syncif fxp0 maxupd 64
# tcpdump -s1500 -evtni pfsync0
d215 1
@


1.13
log
@typos from Lawrence Teo;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.12 2003/12/24 19:49:00 mcbride Exp $
d33 1
a33 1
.Sy pseudo-device Nm pfsync 1
@


1.12
log
@Update protocol number and multicast group to match reality.

Pointed out by Jorge Severino (jorge at netsecure dot cl)
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.11 2003/12/16 11:12:58 jmc Exp $
d48 1
a48 1
and insert state changes recieved on that interface from other systems
d53 1
a53 1
However, state changes from packets recieved by
@


1.11
log
@pfsync.4:
- new sentence, new line
- kill whitespace at EOL
- escape a dot at EOL

pflog.4:
- subject verb agreement
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.10 2003/12/16 04:33:30 mcbride Exp $
d105 2
a106 2
The protocol is IP protocol 136, PFSYNC, and the multicast group
used is 224.0.0.136.
@


1.10
log
@Reorg and better english. Split network synchronisation specifics
into it's own section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.9 2003/12/16 03:27:36 mcbride Exp $
d44 1
a44 1
interface. 
d67 3
a69 2
state into one message where possible. The maximum number of times 
this can be done before the update is sent out is controlled by the
a93 1
.Pp
d100 1
a100 1
# ifconfig pfsync0 syncif fxp0 
d110 3
a112 3
be trivial to spoof packets which create states, bypassing the pf
ruleset. Ideally, this is a network dedicated to pfsync messages,
ie. a crossover cable between two firewalls.
d118 1
a118 1
interface, and packets sent out on the synchronisation interface, i.e.
@


1.9
log
@1st pass at documenting the new pfsync network synchronisation
functionality.

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.8 2003/11/08 07:58:19 jmc Exp $
d33 1
a33 1
.Sy pseudo-device Nm pfsync
d37 4
a40 5
interface is the interface to the packet filter,
.Xr pf 4 ,
exposing all the changes to the state table.
This allows for both debugging of rulesets and monitoring
for changes in the table by invoking
d44 12
a55 1
interface.
d64 30
a125 29
.Pp
The
.Nm
interface will also attempt to collapse multiple updates of the same
state into one message where possible. The maximum number of times 
this can be done before the update is sent out is controlled by the
.Ar maxupd
to ifconfig.
(see
.Xr ifconfig 8
and the example below for more details)
.Pp
Each packet retrieved on this interface has a header associated
with it of length
.Dv PFSYNC_HDRLEN .
The header indicates the version of the protocol, address family,
action taken on the following states and the number of state
table entries attached in this packet.
This structure, defined in
.Aq Pa net/if_pfsync.h
looks like:
.Bd -literal -offset indent
struct pfsync_header {
	u_int8_t version;
	u_int8_t af;
	u_int8_t action;
	u_int8_t count;
};
.Ed
@


1.8
log
@- ommited -> omitted
- kill some whitespace at EOL
- remove unnecessary args to .Nm
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.7 2003/11/08 00:45:33 mcbride Exp $
d54 44
d117 1
a117 1
# ifconfig pfsync0 up
d121 1
d127 1
@


1.7
log
@Add 'no-sync' state option to prevent state transition messages for states
created by this rule from appearing on the pfsync(4) interface. e.g.

pass in proto tcp to self flags S/SA keep state (no-sync)

ok cedric@@ henning@@ dhartmei@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.6 2003/06/06 10:29:41 jmc Exp $
d36 1
a36 1
.Nm pfsync
d46 1
a46 1
States created by a rule marked with the 
d48 2
a49 2
keyword are ommited from the 
.Nm pfsync
@


1.6
log
@- section reorder
- some macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.5 2003/04/01 18:07:28 mickey Exp $
d46 7
d81 1
@


1.5
log
@there could be only one
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.4 2003/03/31 15:11:17 mpech Exp $
d54 1
a54 1
.Pa <net/if_pfsync.h>
@


1.4
log
@pfsync interface may need an argument in kernel config like pflog(4).

henning@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.3 2002/11/30 15:29:41 mickey Exp $
d33 1
a33 1
.Sy pseudo-device Nm pfsync Em <number>
@


1.3
log
@dead e
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.2 2002/11/29 18:50:22 henning Exp $
d33 1
a33 1
.Sy pseudo-device Nm pfsync
@


1.2
log
@wording
@
text
@d1 1
a1 1
.\"	$OpenBSD: pfsync.4,v 1.1 2002/11/29 18:37:12 mickey Exp $
d39 1
a39 1
exposeing all the changes to the state table.
@


1.1
log
@das ist pfsync.4
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d39 1
a39 1
exposes all the changes to the states table.
@

