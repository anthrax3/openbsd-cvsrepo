head	1.12;
access;
symbols
	OPENBSD_6_0:1.11.0.16
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.4
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.12
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.10
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.8
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.24
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.22
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.20
	OPENBSD_5_0:1.10.0.18
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.16
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.14
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.10
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.12
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.8
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.6
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.8.0.2
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4;
locks; strict;
comment	@.\" @;


1.12
date	2016.09.03.13.37.41;	author guenther;	state dead;
branches;
next	1.11;
commitid	6T3r4QcMFKe3Fo5T;

1.11
date	2013.07.16.16.05.50;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2007.05.31.19.19.57;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2007.03.19.20.55.36;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2007.02.25.04.42.51;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2007.02.25.00.43.19;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2007.02.25.00.16.14;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.16.11.57.30;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.09.12.35.34;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.09.10.59.18;	author dlg;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.21.10.15.58;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.18.16.34.17;	author dlg;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Retire zaurus, as it hasn't made the EABI jump and will be permanently broken
shortly when we use the hardware thread register in userland
@
text
@.\" 	$OpenBSD: pxaudc.4,v 1.11 2013/07/16 16:05:50 schwarze Exp $
.\"
.\" Copyright (c) 2005 David Gwynne <dlg@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: July 16 2013 $
.Dt PXAUDC 4 zaurus
.Os
.Sh NAME
.Nm pxaudc
.Nd PXA27x USB device controller
.Sh SYNOPSIS
.Cd "pxaudc0 at pxaip?"
.Cd "usbf* at pxaudc?"
.Sh DESCRIPTION
The PXA27x USB Device Controller supplies bus interface functions
so that
the USB Function support driver,
.Xr usbf 4 ,
can support client-cable USB functions.
.Pp
The
.Nm
driver is able to detect the presence of either host or client cables.
If a host cable is detected, the USB pins are routed to
the USB host controller,
.Xr ohci 4 ,
which supplies USB device support for many devices as described in
.Xr usb 4 .
If a client cable is detected, the USB pins are directly used by
.Nm
to support USB client functionality, as described in
.Xr usbf 4 .
.Sh SEE ALSO
.Xr ohci 4 ,
.Xr usb 4 ,
.Xr usbf 4
.Sh AUTHORS
.An -nosplit
The initial
.Nm
driver was written by
.An David Gwynne Aq Mt dlg@@openbsd.org .
USB Client support was later developed by
.An Uwe Stuehler Aq Mt uwe@@openbsd.org
and completed by
.An Dale Rahn Aq Mt drahn@@openbsd.org .
@


1.11
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: pxaudc.4,v 1.10 2007/05/31 19:19:57 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: May 31 2007 $
@


1.10
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" 	$OpenBSD: pxaudc.4,v 1.9 2007/03/19 20:55:36 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate$
d54 1
a54 1
.An David Gwynne Aq dlg@@openbsd.org .
d56 1
a56 1
.An Uwe Stuehler Aq uwe@@openbsd.org
d58 1
a58 1
.An Dale Rahn Aq drahn@@openbsd.org .
@


1.9
log
@english does not require that nouns be capitalised;
@
text
@d1 1
a1 1
.\" 	$OpenBSD: pxaudc.4,v 1.8 2007/02/25 04:42:51 deraadt Exp $
d17 1
a17 1
.Dd February 18, 2005
@


1.8
log
@tweaks by me and dlg; drahn ok
@
text
@d1 1
a1 1
.\" 	$OpenBSD: pxaudc.4,v 1.7 2007/02/25 00:43:19 drahn Exp $
d22 1
a22 1
.Nd PXA27x USB Device Controller
@


1.7
log
@More complete info about usb client mode, remove broken url as intel sold pxa.
@
text
@d1 1
a1 1
.\" 	$OpenBSD: pxaudc.4,v 1.6 2007/02/25 00:16:14 drahn Exp $
d25 1
d27 5
a31 4
The PXA27x USB Device Controller is a programmable USB client device.
It is also responsible for dynamically switching the physical ports between
the USB host controller and itself by detecting whether a host or client
cable is plugged into the connector.
d33 9
a41 7
An appropriate driver can configure the device controller to operate as a
variety of devices, e.g. an Ethernet or mass storage device, when plugged
into a USB host. Currently only ethernet 
.Xr cdcef 4
is supported .
.Pp
Currently, the
d43 2
a44 7
driver configures
.Xr usbf 4
and 
.Xr cdcef
usb client drivers on boot and enables host mode
.Xr ohci 4
and probes the usb bus when a host cable is connected.
a45 1
.Xr autoconf 4 ,
d47 12
a58 2
.Xr usbf 4 ,
.Xr config 8
@


1.6
log
@USB client is starting to work.
@
text
@d1 1
a1 1
.\" 	$OpenBSD: pxaudc.4,v 1.5 2006/02/16 11:57:30 jmc Exp $
d33 3
a35 1
into a USB host.
d39 5
a43 2
driver disables the functionality of the USB Device Controller and configures
the physical port to be always routed to the
d45 1
a45 3
controller.
In this mode the hardware only supports attachment of USB devices;
it will not operate as a USB device itself.
d49 1
a49 1
.Xr pxaip 4 ,
a50 3
.Pp
Intel(R) PXA27x Processor Family Developer's Manual,
.Pa http://www.intel.com/design/pca/applicationsprocessors/manuals/280000.htm
@


1.5
log
@remove extraneous .Re;
@
text
@d1 1
a1 1
.\" 	$OpenBSD: pxaudc.4,v 1.4 2005/03/09 12:35:34 jmc Exp $
a50 3
.Sh BUGS
There is currently no support for using the Zaurus as a USB Device, however,
it is planned for the future.
@


1.4
log
@- spelling and grammar
- unneeded .Pp
@
text
@d1 1
a1 1
.\" 	$OpenBSD: pxaudc.4,v 1.3 2005/03/09 10:59:18 dlg Exp $
a50 1
.Re
@


1.3
log
@better description of what the hardware and driver do.
@
text
@d1 1
a1 1
.\" 	$OpenBSD: pxaudc.4,v 1.2 2005/02/21 10:15:58 jmc Exp $
d41 1
a41 1
In this mode the hardware only supports attachement of USB devices,
a42 1
.Pp
@


1.2
log
@remove Rs/Re macros to avoid punctuation we don't want;
better url from dlg which avoids nastly line split;
a few other minor tweaks;

ok dlg@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: pxaudc.4,v 1.1 2005/02/18 16:34:17 dlg Exp $
d26 10
a35 1
The
d38 1
a38 1
the physical port to be always connected to the
d41 2
a43 3
The PXA27x USB Device Controller is a programmable USB client device.
An appropriate driver can configure the device to appear as a variety of USB
devices, e.g. an Ethernet or mass storage device.
d54 2
a55 1
There is currently no support for using the Zaurus as a USB Device.
@


1.1
log
@manpage for the PXA27x USB Device Controller

requested by miod@@, ok drahn@@
@
text
@d1 2
a2 2
.\" 	$OpenBSD$
.\" 
d4 1
a4 1
.\" 
d8 1
a8 1
.\" 
d35 1
a35 1
devices, eg, an ethernet or mass storage device.
d41 3
a43 3
.Rs
.%T "Intel(R) PXA27x Processor Family Developer's Manual"
.%O ftp://download.intel.com/design/pca/applicationsprocessors/manuals/2800002.pdf
@

