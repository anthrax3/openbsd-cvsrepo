head	1.64;
access;
symbols
	OPENBSD_6_1:1.64.0.6
	OPENBSD_6_1_BASE:1.64
	OPENBSD_6_0:1.64.0.4
	OPENBSD_6_0_BASE:1.64
	OPENBSD_5_9:1.60.0.2
	OPENBSD_5_9_BASE:1.60
	OPENBSD_5_8:1.60.0.10
	OPENBSD_5_8_BASE:1.60
	OPENBSD_5_7:1.60.0.8
	OPENBSD_5_7_BASE:1.60
	OPENBSD_5_6:1.60.0.6
	OPENBSD_5_6_BASE:1.60
	OPENBSD_5_5:1.60.0.4
	OPENBSD_5_5_BASE:1.60
	OPENBSD_5_4:1.58.0.2
	OPENBSD_5_4_BASE:1.58
	OPENBSD_5_3:1.55.0.2
	OPENBSD_5_3_BASE:1.55
	OPENBSD_5_2:1.54.0.4
	OPENBSD_5_2_BASE:1.54
	OPENBSD_5_1_BASE:1.54
	OPENBSD_5_1:1.54.0.2
	OPENBSD_5_0:1.52.0.2
	OPENBSD_5_0_BASE:1.52
	OPENBSD_4_9:1.51.0.2
	OPENBSD_4_9_BASE:1.51
	OPENBSD_4_8:1.50.0.4
	OPENBSD_4_8_BASE:1.50
	OPENBSD_4_7:1.50.0.2
	OPENBSD_4_7_BASE:1.50
	OPENBSD_4_6:1.46.0.6
	OPENBSD_4_6_BASE:1.46
	OPENBSD_4_5:1.46.0.2
	OPENBSD_4_5_BASE:1.46
	OPENBSD_4_4:1.41.0.2
	OPENBSD_4_4_BASE:1.41
	OPENBSD_4_3:1.39.0.2
	OPENBSD_4_3_BASE:1.39
	OPENBSD_4_2:1.37.0.2
	OPENBSD_4_2_BASE:1.37
	OPENBSD_4_1:1.36.0.2
	OPENBSD_4_1_BASE:1.36
	OPENBSD_4_0:1.32.0.2
	OPENBSD_4_0_BASE:1.32
	OPENBSD_3_9:1.31.0.2
	OPENBSD_3_9_BASE:1.31
	OPENBSD_3_8:1.26.0.2
	OPENBSD_3_8_BASE:1.26
	OPENBSD_3_7:1.17.0.2
	OPENBSD_3_7_BASE:1.17;
locks; strict;
comment	@.\" @;


1.64
date	2016.04.05.15.12.11;	author mestre;	state Exp;
branches;
next	1.63;
commitid	tzln6tSg4yhPrijW;

1.63
date	2016.04.03.07.00.20;	author jmc;	state Exp;
branches;
next	1.62;
commitid	46lV5PW9E0klwu3y;

1.62
date	2016.04.03.05.36.28;	author stsp;	state Exp;
branches;
next	1.61;
commitid	wHbklZdptL7sJuHo;

1.61
date	2016.03.07.13.47.53;	author stsp;	state Exp;
branches;
next	1.60;
commitid	A6PwvvX57lgozJhN;

1.60
date	2014.02.15.20.28.19;	author tedu;	state Exp;
branches;
next	1.59;

1.59
date	2014.02.15.01.41.16;	author tedu;	state Exp;
branches;
next	1.58;

1.58
date	2013.07.16.16.05.48;	author schwarze;	state Exp;
branches;
next	1.57;

1.57
date	2013.06.02.21.52.51;	author schwarze;	state Exp;
branches;
next	1.56;

1.56
date	2013.06.02.20.23.33;	author tedu;	state Exp;
branches;
next	1.55;

1.55
date	2013.02.14.07.40.42;	author jmc;	state Exp;
branches;
next	1.54;

1.54
date	2011.09.03.22.59.07;	author jmc;	state Exp;
branches;
next	1.53;

1.53
date	2011.08.19.19.59.51;	author jmc;	state Exp;
branches;
next	1.52;

1.52
date	2011.07.30.18.03.46;	author jmc;	state Exp;
branches;
next	1.51;

1.51
date	2010.11.01.17.59.09;	author jmc;	state Exp;
branches;
next	1.50;

1.50
date	2010.03.13.06.35.40;	author jmc;	state Exp;
branches;
next	1.49;

1.49
date	2010.01.03.14.31.01;	author schwarze;	state Exp;
branches;
next	1.48;

1.48
date	2009.10.31.13.29.07;	author sobrado;	state Exp;
branches;
next	1.47;

1.47
date	2009.09.02.07.00.24;	author jmc;	state Exp;
branches;
next	1.46;

1.46
date	2009.02.16.08.15.22;	author jmc;	state Exp;
branches;
next	1.45;

1.45
date	2008.11.17.15.17.58;	author jmc;	state Exp;
branches;
next	1.44;

1.44
date	2008.11.17.11.59.44;	author otto;	state Exp;
branches;
next	1.43;

1.43
date	2008.08.29.09.44.16;	author damien;	state Exp;
branches;
next	1.42;

1.42
date	2008.08.29.09.03.48;	author damien;	state Exp;
branches;
next	1.41;

1.41
date	2008.07.29.17.03.35;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2008.04.17.14.01.22;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2007.12.10.10.32.54;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2007.11.17.10.19.20;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2007.05.31.19.19.49;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2006.12.05.22.03.47;	author damien;	state Exp;
branches;
next	1.35;

1.35
date	2006.12.05.21.55.55;	author damien;	state Exp;
branches;
next	1.34;

1.34
date	2006.11.10.20.06.58;	author mk;	state Exp;
branches;
next	1.33;

1.33
date	2006.09.28.03.43.21;	author brad;	state Exp;
branches;
next	1.32;

1.32
date	2006.08.30.23.14.30;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2006.02.22.12.43.25;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2005.11.11.09.27.17;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2005.11.07.19.25.50;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2005.10.05.17.29.04;	author reyk;	state Exp;
branches;
next	1.27;

1.27
date	2005.09.30.20.34.24;	author jaredy;	state Exp;
branches;
next	1.26;

1.26
date	2005.08.18.11.59.58;	author jsg;	state Exp;
branches;
next	1.25;

1.25
date	2005.06.09.09.03.38;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2005.06.07.11.52.34;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2005.05.28.10.03.00;	author reyk;	state Exp;
branches;
next	1.22;

1.22
date	2005.04.20.12.29.22;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2005.04.17.12.29.07;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2005.04.13.16.46.53;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2005.04.08.18.39.16;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2005.04.06.09.14.53;	author reyk;	state Exp;
branches;
next	1.17;

1.17
date	2005.03.12.10.32.40;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2005.03.09.09.45.02;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2005.03.06.21.49.00;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2005.02.25.22.31.31;	author reyk;	state Exp;
branches;
next	1.13;

1.13
date	2005.02.21.10.18.25;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2005.02.19.17.23.48;	author reyk;	state Exp;
branches;
next	1.11;

1.11
date	2005.02.08.18.48.51;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2004.12.05.03.34.37;	author jolan;	state Exp;
branches;
next	1.9;

1.9
date	2004.11.23.09.39.29;	author reyk;	state Exp;
branches;
next	1.8;

1.8
date	2004.11.08.23.05.42;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.07.18.46.04;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.07.18.26.54;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.07.18.12.58;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.07.17.42.10;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.07.02.48.49;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.11.07.02.48.07;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.07.02.44.24;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.64
log
@Remove mention of Turbo Mode from ath(4) since the driver doesn't support it

Discussed with and OK from sthen@@ stsp@@ kettenis@@ jsg@@
@
text
@.\"	$OpenBSD: ath.4,v 1.63 2016/04/03 07:00:20 jmc Exp $
.\"     $NetBSD: ath.4,v 1.5 2004/07/03 16:58:18 mycroft Exp $
.\"
.\" Copyright (c) 2002, 2003 Sam Leffler, Errno Consulting
.\" All rights reserved.
.\""
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer,
.\"    without modification.
.\" 2. Redistributions in binary form must reproduce at minimum a disclaimer
.\"    similar to the "NO WARRANTY" disclaimer below ("Disclaimer") and any
.\"    redistribution must be conditioned upon including a substantially
.\"    similar Disclaimer requirement for further binary redistribution.
.\" 3. Neither the names of the above-listed copyright holders nor the names
.\"    of any contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
.\"
.\" NO WARRANTY
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF NONINFRINGEMENT, MERCHANTIBILITY
.\" AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
.\" THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY,
.\" OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
.\" IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" THE POSSIBILITY OF SUCH DAMAGES.
.\"
.\"
.\" Note: This man page was taken by Perry Metzger almost entirely
.\" from the "ath" and "ath_hal" man pages in FreeBSD. I claim no
.\" copyright because there was nearly no original work performed in
.\" doing so. Maintainers should check the FreeBSD originals for
.\" updates against the following two revisions and incorporate them
.\" if needed:
.\"
.\" $FreeBSD: /repoman/r/ncvs/src/share/man/man4/ath.4,v 1.16 2004/02/18 08:30:08 maxim Exp $
.\" parts from $FreeBSD: /repoman/r/ncvs/src/share/man/man4/ath_hal.4,v 1.7 2004/01/07 20:49:51 blackend Exp $
.\"
.Dd $Mdocdate: April 3 2016 $
.Dt ATH 4
.Os
.Sh NAME
.Nm ath
.Nd Atheros IEEE 802.11a/b/g wireless network device with GPIO
.Sh SYNOPSIS
.Cd "ath* at pci? dev ? function ?"
.Cd "ath* at cardbus? dev ? function ?"
.Cd "gpio* at ath?"
.Sh DESCRIPTION
The
.Nm
driver provides support for wireless network devices based on
the Atheros AR5210, AR5211, and AR5212 chips.
.Pp
All host/device interaction is via DMA.
The
.Nm
driver encapsulates all IP and ARP traffic as 802.11 frames, though
it can receive either 802.11 or 802.3 frames.
Transmit speed and operating mode is selectable and
depends on the specific chipset.
.Pp
Support for the various devices is as follows:
.Bl -tag -width "ARxxxx"
.It AR5210
These devices support 802.11a operation with transmit speeds
of 6 Mbps, 9 Mbps, 12 Mbps, 18 Mbps, 24 Mbps, 36 Mbps, 48 Mbps, and 54 Mbps.
.It AR5211
These devices support 802.11a and 802.11b operation with
transmit speeds as above for 802.11a and
1Mbps, 2Mbps, 5.5 Mbps, and 11Mbps for 802.11b operation.
.It AR5212
These devices support 802.11a, 802.11b, and 802.11g operation with
transmit speeds as above for 802.11a, 802.11b, and 802.11g operation
(802.11g speeds are the same as for 802.11a speeds).
.El
.Pp
The actual transmit speed used is dependent on signal quality and the
.Dq rate control
algorithm employed by the driver.
.Pp
These are the modes the
.Nm
driver can operate in:
.Bl -tag -width "IBSS-masterXX"
.It BSS mode
Also known as
.Em infrastructure
mode, this is used when associating with an access point, through
which all traffic passes.
This mode is the default.
.It IBSS mode
Also known as
.Em IEEE ad-hoc
mode or
.Em peer-to-peer
mode.
This is the standardized method of operating without an access point.
Stations associate with a service set.
However, actual connections between stations are peer-to-peer.
.It Host AP
In this mode the adapter acts as an access point (base station)
for other cards.
.It monitor mode
In this mode the driver is able to receive packets without
associating with an access point.
This disables the internal receive filter and enables the card to
capture packets from networks which it wouldn't normally have access to,
or to scan for access points.
.El
.Pp
The
.Nm
driver can be configured to use
Wired Equivalent Privacy (WEP) or
Wi-Fi Protected Access (WPA-PSK and WPA2-PSK).
WPA is the current encryption standard for wireless networks.
It is strongly recommended that WEP
not be used as the sole mechanism
to secure wireless communication,
due to serious weaknesses in it.
.Pp
AR5211 and AR5212 support the AES, TKIP, and Michael cryptographic
operations required for WPA in hardware but at this time the driver
does not support them.
.Pp
The
.Nm
driver can be configured at runtime with
.Xr ifconfig 8
or on boot with
.Xr hostname.if 5 .
.Sh HARDWARE
Devices supported by the
.Nm
driver come in either CardBus or Mini PCI packages.
Wireless cards in CardBus slots may be inserted and ejected on the fly.
.Pp
The following cards are among those supported by the
.Nm
driver:
.Bl -column "Proxim Skyline 4030" "AR5212" "Mini PCI" "Standard" -offset 6n
.It Em Card Ta Em Chip Ta Em Bus Ta Em Standard
.It "3Com 3CRPAG175" Ta AR5212 Ta CardBus Ta a/b/g
.\"It "Aztech WL830PC" Ta AR5212 Ta CardBus Ta b/g
.It "Cisco AIR-CB21AG" Ta AR5212 Ta CardBus Ta a/b/g
.It "D-Link DWL-A650" Ta AR5210 Ta CardBus Ta a
.It "D-Link DWL-AB650" Ta AR5211 Ta CardBus Ta a/b
.It "D-Link DWL-A520" Ta AR5210 Ta PCI Ta a
.\"It "D-Link DWL-AG520" Ta AR5212 Ta PCI Ta a/b/g
.\"It "D-Link DWL-AG650" Ta AR5212 Ta CardBus Ta a/b/g
.\"It "D-Link DWL-G520" Ta AR5212 Ta PCI Ta b/g
.\"It "D-Link DWL-G650B" Ta AR5212 Ta CardBus Ta b/g
.\"It "Elecom LD-WL54AG" Ta AR5212 Ta CardBus Ta a/b/g
.It "Elecom LD-WL54" Ta AR5211 Ta CardBus Ta a
.\"It "Fujitsu E5454" Ta AR5212 Ta CardBus Ta a/b/g
.\"It "Fujitsu FMV-JW481" Ta AR5212 Ta CardBus Ta a/b/g
.\"It "Fujitsu E5454" Ta AR5212 Ta CardBus Ta a/b/g
.\"It "HP NC4000" Ta AR5212 Ta PCI Ta a/b/g
.It "IBM 11ABG WL LAN" Ta AR5212 Ta Mini PCI Ta a/b/g
.\"It "I/O Data WN-AB" Ta AR5212 Ta CardBus Ta a/b
.\"It "I/O Data WN-AG" Ta AR5212 Ta CardBus Ta a/b/g
.\"It "I/O Data WN-A54" Ta AR5212 Ta CardBus Ta a
.\"It "Linksys WMP55AG" Ta AR5212 Ta PCI Ta a/b/g
.It "Linksys WPC51AB" Ta AR5211 Ta CardBus Ta a/b
.\"It "Linksys WPC55AG" Ta AR5212 Ta CardBus Ta a/b/g
.\"It "NEC PA-WL/54AG" Ta AR5212 Ta CardBus Ta a/b/g
.\"It "Netgear WAG311" Ta AR5212 Ta PCI Ta a/b/g
.It "Netgear WAB501" Ta AR5211 Ta CardBus Ta a/b
.\"It "Netgear WAG511" Ta AR5212 Ta CardBus Ta a/b/g
.\"It "Netgear WG311 rev1" Ta AR5212 Ta PCI Ta b/g
.\"It "Netgear WG511T" Ta AR5212 Ta CardBus Ta b/g
.\"It "Orinoco 8480" Ta AR5212 Ta CardBus Ta a/b/g
.\"It "Orinoco 8470WD" Ta AR5212 Ta CardBus Ta a/b/g
.It "Planet WL-3560" Ta AR5211 Ta CardBus Ta a/b/g
.It "Proxim Skyline 4030" Ta AR5210 Ta CardBus Ta a
.It "Proxim Skyline 4032" Ta AR5210 Ta PCI Ta a
.\"It "Samsung SWL-5200N" Ta AR5212 Ta CardBus Ta a/b/g
.It "Senao NL-5354MP" Ta AR5212 Ta Mini PCI Ta a/b/g
.It "SMC SMC2735W" Ta AR5210 Ta CardBus Ta a
.\"It "Sony PCWA-C700" Ta AR5212 Ta CardBus Ta a/b
.\"It "Sony PCWA-C300S" Ta AR5212 Ta CardBus Ta b/g
.It "Sony PCWA-C500" Ta AR5210 Ta CardBus Ta a
.It "Wistron CM9" Ta AR5212 Ta Mini PCI Ta a/b/g
.El
.Sh EXAMPLES
The following example scans for available networks:
.Pp
.Dl # ifconfig ath0 scan
.Pp
The following
.Xr hostname.if 5
example configures ath0 to join network
.Dq mynwid ,
using WPA key
.Dq mywpakey ,
obtaining an IP address using DHCP:
.Bd -literal -offset indent
nwid mynwid
wpakey mywpakey
dhcp
.Ed
.Pp
The following
.Xr hostname.if 5
example creates a host-based access point on boot:
.Bd -literal -offset indent
mediaopt hostap
nwid mynwid
wpakey mywpakey
inet 192.168.1.1 255.255.255.0
.Ed
.Sh DIAGNOSTICS
.Bl -diag
.It "ath0: unable to attach hardware; HAL status N"
The Hardware Access Layer was unable to configure the hardware
as requested.
The status code is explained in the HAL include file
.Pa sys/dev/ic/ar5xxx.h .
.It "ath0: failed to allocate descriptors: N"
The driver was unable to allocate contiguous memory for the transmit
and receive descriptors.
This usually indicates system memory is scarce and/or fragmented.
.It "ath0: unable to setup a data xmit queue!"
The request to the HAL to set up the transmit queue for normal
data frames failed.
This should not happen.
.It "ath0: unable to setup a beacon xmit queue!"
The request to the HAL to set up the transmit queue for 802.11 beacon frames
failed.
This should not happen.
.It "ath0: hardware error; resetting"
An unrecoverable error in the hardware occurred.
Errors of this sort include unrecoverable DMA errors.
The driver will reset the hardware and continue.
.It "ath0: rx FIFO overrun; resetting"
The receive FIFO in the hardware overflowed before the data could be
transferred to the host.
This typically occurs because the hardware ran short of receive
descriptors and had no place to transfer received data.
The driver will reset the hardware and continue.
.It "ath0: unable to reset hardware; hal status N"
The Hardware Access Layer was unable to reset the hardware
as requested.
The status code is explained in the HAL include file
.Pa /sys/dev/ic/ar5xxx.h .
This should not happen.
.It "ath0: unable to initialize the key cache"
The driver was unable to initialize the hardware key cache.
This should not happen.
.It "ath0: unable to start recv logic"
The driver was unable to restart frame reception.
This should not happen.
.It "ath0: device timeout"
A frame dispatched to the hardware for transmission did not complete in time.
The driver will reset the hardware and continue.
This should not happen.
.It "ath0: bogus xmit rate 0xNNNN"
An invalid transmit rate was specified for an outgoing frame.
The frame is discarded.
This should not happen.
.It "ath0: ath_chan_set: unable to reset channel N (X MHz)"
The Hardware Access Layer was unable to reset the hardware
when switching channels during scanning.
This should not happen.
.It "ath0: unable to allocate channel table"
The driver was unable to allocate memory for the table used to hold
the set of available channels.
.It "ath0: unable to collect channel list from hal"
A problem occurred while querying the HAL to find the set of available
channels for the device.
This should not happen.
.It "ath0: failed to enable memory mapping"
The driver was unable to enable memory-mapped I/O to the PCI device registers.
This should not happen.
.It "ath0: failed to enable bus mastering"
The driver was unable to enable the device as a PCI bus master for doing DMA.
This should not happen.
.It "ath0: cannot map register space"
The driver was unable to map the device registers into the host address space.
This should not happen.
.It "ath0: could not map interrupt"
The driver was unable to allocate an IRQ for the device interrupt.
This should not happen.
.It "ath0: could not establish interrupt"
The driver was unable to install the device interrupt handler.
This should not happen.
.El
.Sh SEE ALSO
.Xr arp 4 ,
.Xr cardbus 4 ,
.Xr gpio 4 ,
.Xr ifmedia 4 ,
.Xr intro 4 ,
.Xr netintro 4 ,
.Xr pci 4 ,
.Xr hostname.if 5 ,
.Xr gpioctl 8 ,
.Xr hostapd 8 ,
.Xr ifconfig 8
.Sh HISTORY
The
.Nm
device driver first appeared in
.Fx 5.2
using a binary-only HAL module which was ported to
.Nx 2.0 .
The driver using a free HAL-replacement first appeared in
.Ox 3.7 .
.Sh AUTHORS
.An -nosplit
The
.Nm
driver was written by
.An Sam Leffler ,
and was ported to
.Ox
by
.An Reyk Floeter Aq Mt reyk@@openbsd.org
who also wrote a free replacement of the binary-only HAL.
.Sh CAVEATS
Different regulatory domains may not be able to communicate with each
other with 802.11a as different regulatory domains do not necessarily
have overlapping channels.
.Pp
Host AP mode doesn't support power saving.
Clients attempting to use power saving mode may experience significant
packet loss (disabling power saving on the client will fix this).
.Sh BUGS
Performance in lossy environments is suboptimal.
The algorithm used to select the rate for transmitted packets is
very simplistic.
There is no software retransmit; only hardware retransmit is used.
Contributors are encouraged to replace the existing rate control algorithm
with a better one.
.Pp
The driver does not fully enable power-save operation of the chip;
consequently power use is suboptimal.
.Pp
Operation in the 2GHz band is restricted to 11b mode because the driver
does not support running the hardware in 11g mode.
@


1.63
log
@double word;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.62 2016/04/03 05:36:28 stsp Exp $
a82 4
.Pp
All chips also support an Atheros Turbo Mode (TM) that operates in the
802.11a frequency range with 2x the transmit speeds.
(This mode is, however, only interoperable with other Atheros-based devices.)
@


1.62
log
@ath(4) 11g support code is broken and not enabled. Document this limitation.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.61 2016/03/07 13:47:53 stsp Exp $
d45 1
a45 1
.Dd $Mdocdate: March 7 2016 $
d351 1
a351 1
driver does not support running the hardware in 11g mode.
@


1.61
log
@In man page hostname.if examples showing how to configure hostap, put lines
configuring addresses last. Avoids problems where the interface is put up
before wireless settings are properly configured.
Prompted by questions from Matthew ("chohag") on bugs@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.60 2014/02/15 20:28:19 tedu Exp $
d45 1
a45 1
.Dd $Mdocdate: February 15 2014 $
d349 3
@


1.60
log
@jmc notes that the previous commit made for some funny wording.
WPA is the current standard, but not the only one. ok krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.59 2014/02/15 01:41:16 tedu Exp $
a217 1
inet 192.168.1.1 255.255.255.0
d221 1
@


1.59
log
@WPA is a real standard, not only a de facto one.
(these man pages do like their copy and paste.)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.58 2013/07/16 16:05:48 schwarze Exp $
d45 1
a45 1
.Dd $Mdocdate: July 16 2013 $
d127 1
a127 1
WPA is the encryption standard for wireless networks.
@


1.58
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.57 2013/06/02 21:52:51 schwarze Exp $
d45 1
a45 1
.Dd $Mdocdate: June 2 2013 $
d127 1
a127 1
WPA is the de facto encryption standard for wireless networks.
@


1.57
log
@Ted missed a few percent signs in diagnostic messages;
"just fix them" tedu@@
Two of the affected messages are actually a bit different
in the source code, so fix that too.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.56 2013/06/02 20:23:33 tedu Exp $
d329 1
a329 1
.An Reyk Floeter Aq reyk@@openbsd.org
@


1.56
log
@change format strings in error messages to reasonable values more likely
to be understood by people who don't program in C.
ok everyone
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.55 2013/02/14 07:40:42 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: February 14 2013 $
d225 1
a225 1
.It "ath0: unable to attach hardware; HAL status %u"
@


1.55
log
@rework EXAMPLES somewhat, and remove the obsolete NONE NONE NONE dhcp
stuff; ok krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.54 2011/09/03 22:59:07 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: September 3 2011 $
d225 1
a225 1
.It "ath%d: unable to attach hardware; HAL status %u"
d230 1
a230 1
.It "ath%d: failed to allocate descriptors: %d"
d234 1
a234 1
.It "ath%d: unable to setup a data xmit queue!"
d238 1
a238 1
.It "ath%d: unable to setup a beacon xmit queue!"
d242 1
a242 1
.It "ath%d: hardware error; resetting"
d246 1
a246 1
.It "ath%d: rx FIFO overrun; resetting"
d252 1
a252 1
.It "ath%d: unable to reset hardware; hal status %u"
d258 1
a258 1
.It "ath%d: unable to initialize the key cache"
d261 1
a261 1
.It "ath%d: unable to start recv logic"
d264 1
a264 1
.It "ath%d: device timeout"
d268 1
a268 1
.It "ath%d: bogus xmit rate 0x%x"
d272 1
a272 1
.It "ath%d: ath_chan_set: unable to reset channel %u (%u MHz)"
d276 1
a276 1
.It "ath%d: unable to allocate channel table"
d279 1
a279 1
.It "ath%d: unable to collect channel list from hal"
d283 1
a283 1
.It "ath%d: failed to enable memory mapping"
d286 1
a286 1
.It "ath%d: failed to enable bus mastering"
d289 1
a289 1
.It "ath%d: cannot map register space"
d292 1
a292 1
.It "ath%d: could not map interrupt"
d295 1
a295 1
.It "ath%d: could not establish interrupt"
@


1.54
log
@make -column lists pretty again;

specifically, rewrite them to permit some markup in the column headers,
and use "Ta" instead of literal tabs; mandoc does not currently match groff
100%, but a mandoc fix may be some time off, and we've gone enough releases
with poorly formatting column lists.

in some cases i have rewritten the lists as -tag, where -column made
little sense.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.53 2011/08/19 19:59:51 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: August 19 2011 $
a73 1
.Pp
a77 1
.Pp
d197 4
d203 5
a207 4
example configures ath0 to join whatever network is available on boot,
using WEP key
.Dq 0x1deadbeef1 ,
channel 11, obtaining an IP address using DHCP:
d209 3
a211 1
dhcp NONE NONE NONE nwkey 0x1deadbeef1 chan 11
d218 4
a221 16
inet 192.168.1.1 255.255.255.0 NONE media autoselect \e
	mediaopt hostap nwid my_net chan 11
.Ed
.Pp
Configure ath0 to join network
.Dq my_net
using WPA with passphrase
.Dq my_passphrase :
.Bd -literal -offset indent
# ifconfig ath0 nwid my_net wpakey my_passphrase
.Ed
.Pp
Join an existing BSS network,
.Dq my_net :
.Bd -literal -offset indent
# ifconfig ath0 192.168.1.1 netmask 0xffffff00 nwid my_net
@


1.53
log
@as with other list types, column lists generally do not need a Pp/-compact
construct;

this also sidesteps what seems to be a problem with mandoc, in that
"-column -compact" seems to mess up the formatting. thus these pages should
now have their lists formatted nicely (i.e. correctly aligned and with indent
applied);

as a side note, the fact that headers are not properly marked up is another
issue which will be addressed separately (a mandoc fix is needed, i think).
i have fudged a few of these to mark up properly, since the workaround does
make sense for some pages.

as another side note, i haven;t fixed man7, as i need to prepare a separate
diff for kristaps and ingo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.52 2011/07/30 18:03:46 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: July 30 2011 $
d154 43
a196 43
.Bl -column "Samsung SWL-5200N" "AR5212" "CardBus" "a/b/g" -offset 6n
.It Em "Card	Chip	Bus	Standard"
.It 3Com 3CRPAG175	AR5212	CardBus	a/b/g
.\"It Aztech WL830PC	AR5212	CardBus	b/g
.It Cisco AIR-CB21AG	AR5212	CardBus	a/b/g
.It D-Link DWL-A650	AR5210	CardBus	a
.It D-Link DWL-AB650	AR5211	CardBus	a/b
.It D-Link DWL-A520	AR5210	PCI	a
.\"It D-Link DWL-AG520	AR5212	PCI	a/b/g
.\"It D-Link DWL-AG650	AR5212	CardBus	a/b/g
.\"It D-Link DWL-G520	AR5212	PCI	b/g
.\"It D-Link DWL-G650B	AR5212	CardBus	b/g
.\"It Elecom LD-WL54AG	AR5212	CardBus	a/b/g
.It Elecom LD-WL54	AR5211	CardBus	a
.\"It Fujitsu E5454	AR5212	CardBus	a/b/g
.\"It Fujitsu FMV-JW481	AR5212	CardBus	a/b/g
.\"It Fujitsu E5454	AR5212	CardBus	a/b/g
.\"It HP NC4000	AR5212	PCI	a/b/g
.It IBM 11ABG WL LAN	AR5212	Mini PCI	a/b/g
.\"It I/O Data WN-AB	AR5212	CardBus	a/b
.\"It I/O Data WN-AG	AR5212	CardBus	a/b/g
.\"It I/O Data WN-A54	AR5212	CardBus	a
.\"It Linksys WMP55AG	AR5212	PCI	a/b/g
.It Linksys WPC51AB	AR5211	CardBus	a/b
.\"It Linksys WPC55AG	AR5212	CardBus	a/b/g
.\"It NEC PA-WL/54AG	AR5212	CardBus	a/b/g
.\"It Netgear WAG311	AR5212	PCI	a/b/g
.It Netgear WAB501	AR5211	CardBus	a/b
.\"It Netgear WAG511	AR5212	CardBus	a/b/g
.\"It Netgear WG311 rev1	AR5212	PCI	b/g
.\"It Netgear WG511T	AR5212	CardBus	b/g
.\"It Orinoco 8480	AR5212	CardBus	a/b/g
.\"It Orinoco 8470WD	AR5212	CardBus	a/b/g
.It Planet WL-3560	AR5211	CardBus	a/b/g
.It Proxim Skyline 4030	AR5210	CardBus	a
.It Proxim Skyline 4032	AR5210	PCI	a
.\"It Samsung SWL-5200N	AR5212	CardBus	a/b/g
.It Senao NL-5354MP	AR5212	Mini PCI	a/b/g
.It SMC SMC2735W	AR5210	CardBus	a
.\"It Sony PCWA-C700	AR5212	CardBus	a/b
.\"It Sony PCWA-C300S	AR5212	CardBus	b/g
.It Sony PCWA-C500	AR5210	CardBus	a
.It Wistron CM9	AR5212	Mini PCI	a/b/g
@


1.52
log
@remove dead link; from James Hartley
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.51 2010/11/01 17:59:09 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: November 1 2010 $
d154 1
a154 2
.Pp
.Bl -column -compact "Samsung SWL-5200N" "AR5212" "CardBus" "a/b/g" -offset 6n
@


1.51
log
@- switch from wpapsk to wpakey
- remove the "return device to default settings" example, which theo says
is rubbish

ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.50 2010/03/13 06:35:40 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: March 13 2010 $
a198 3
.Pp
An up to date list can be found at
.Pa http://customerproducts.atheros.com/customerproducts/default.asp .
@


1.50
log
@.Xt -> .Xr
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.49 2010/01/03 14:31:01 schwarze Exp $
d45 1
a45 1
.Dd $Mdocdate: January 3 2010 $
d223 1
a223 1
using WPA-PSK with passphrase
d226 1
a226 8
# ifconfig ath0 nwid my_net wpa wpapsk \e
	`wpa-psk my_net my_passphrase`
.Ed
.Pp
Return ath0 to its default settings:
.Bd -literal -offset indent
# ifconfig ath0 -bssid -chan media autoselect \e
	nwid "" -nwkey -wpa -wpapsk
d321 1
a321 2
.Xr ifconfig 8 ,
.Xr wpa-psk 8
@


1.49
log
@.Bl always requires .It, even in .Bl -column;
syntax errors found by mandoc(1), also required to fix the mandoc build;
feedback and ok jmc@@ and sobrado@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.48 2009/10/31 13:29:07 sobrado Exp $
d45 1
a45 1
.Dd $Mdocdate: October 31 2009 $
d322 1
a322 1
.Xt intro 4 ,
@


1.48
log
@s/Mhz/MHz/, MHz is a multiple of the SI unit hertz (whose symbol is Hz).
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.47 2009/09/02 07:00:24 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: September 2 2009 $
d156 42
a197 42
.Em "Card	Chip	Bus	Standard"
3Com 3CRPAG175	AR5212	CardBus	a/b/g
.\"Aztech WL830PC	AR5212	CardBus	b/g
Cisco AIR-CB21AG	AR5212	CardBus	a/b/g
D-Link DWL-A650	AR5210	CardBus	a
D-Link DWL-AB650	AR5211	CardBus	a/b
D-Link DWL-A520	AR5210	PCI	a
.\"D-Link DWL-AG520	AR5212	PCI	a/b/g
.\"D-Link DWL-AG650	AR5212	CardBus	a/b/g
.\"D-Link DWL-G520	AR5212	PCI	b/g
.\"D-Link DWL-G650B	AR5212	CardBus	b/g
.\"Elecom LD-WL54AG	AR5212	CardBus	a/b/g
Elecom LD-WL54	AR5211	CardBus	a
.\"Fujitsu E5454	AR5212	CardBus	a/b/g
.\"Fujitsu FMV-JW481	AR5212	CardBus	a/b/g
.\"Fujitsu E5454	AR5212	CardBus	a/b/g
.\"HP NC4000	AR5212	PCI	a/b/g
IBM 11ABG WL LAN	AR5212	Mini PCI	a/b/g
.\"I/O Data WN-AB	AR5212	CardBus	a/b
.\"I/O Data WN-AG	AR5212	CardBus	a/b/g
.\"I/O Data WN-A54	AR5212	CardBus	a
.\"Linksys WMP55AG	AR5212	PCI	a/b/g
Linksys WPC51AB	AR5211	CardBus	a/b
.\"Linksys WPC55AG	AR5212	CardBus	a/b/g
.\"NEC PA-WL/54AG	AR5212	CardBus	a/b/g
.\"Netgear WAG311	AR5212	PCI	a/b/g
Netgear WAB501	AR5211	CardBus	a/b
.\"Netgear WAG511	AR5212	CardBus	a/b/g
.\"Netgear WG311 rev1	AR5212	PCI	b/g
.\"Netgear WG511T	AR5212	CardBus	b/g
.\"Orinoco 8480	AR5212	CardBus	a/b/g
.\"Orinoco 8470WD	AR5212	CardBus	a/b/g
Planet WL-3560	AR5211	CardBus	a/b/g
Proxim Skyline 4030	AR5210	CardBus	a
Proxim Skyline 4032	AR5210	PCI	a
.\"Samsung SWL-5200N	AR5212	CardBus	a/b/g
Senao NL-5354MP	AR5212	Mini PCI	a/b/g
SMC SMC2735W	AR5210	CardBus	a
.\"Sony PCWA-C700	AR5212	CardBus	a/b
.\"Sony PCWA-C300S	AR5212	CardBus	b/g
Sony PCWA-C500	AR5210	CardBus	a
Wistron CM9	AR5212	Mini PCI	a/b/g
@


1.47
log
@the `W' in WEP apparently stands for wired, not wireless;
from Scott Radvan
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.46 2009/02/16 08:15:22 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: February 16 2009 $
d290 1
a290 1
.It "ath%d: ath_chan_set: unable to reset channel %u (%u Mhz)"
@


1.46
log
@use `` instead of $(), since the former works for both csh and ksh; as
pointed out by claudio
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.45 2008/11/17 15:17:58 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: November 17 2008 $
d127 1
a127 1
Wireless Equivalent Privacy (WEP) or
@


1.45
log
@punctuation in macros needs to be space separated;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.44 2008/11/17 11:59:44 otto Exp $
d227 1
a227 1
	$(wpa-psk my_net my_passphrase)
@


1.44
log
@update wpa related info; om damien@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.43 2008/08/29 09:44:16 damien Exp $
d45 1
a45 1
.Dd $Mdocdate: August 29 2008 $
d328 1
a328 1
.Xr ifconfig 8,
@


1.43
log
@new sentence, new line.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.42 2008/08/29 09:03:48 damien Exp $
d126 4
a129 2
driver can be configured to use hardware
Wireless Equivalent Privacy (WEP).
d136 2
a137 1
operations required for WPA but at this time the driver does not support them.
d221 4
a224 2
Configure ath0 for WEP, using hex key
.Dq 0x1deadbeef1 :
d226 2
a227 1
# ifconfig ath0 nwkey 0x1deadbeef1
d233 1
a233 1
	nwid "" -nwkey -powersave
d328 2
a329 1
.Xr ifconfig 8
@


1.42
log
@add the following paragraph from the wi(4) manual page to the
CAVEATS section of all drivers claiming HostAP support:

"Host AP mode doesn't support power saving.  Clients attempting to
 use power saving mode may experience significant packet loss
 (disabling power saving on the client will fix this)."

unfortunately (or not?), more and more clients are using PS mode by
default and will not work properly with an AP running OpenBSD.

proper handling of STAs in PS mode will come in net80211 but is is
very unlikely that all drivers will be ported.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.41 2008/07/29 17:03:35 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: July 29 2008 $
d348 3
a350 3
Host AP mode doesn't support power saving.  Clients attempting to
use power saving mode may experience significant packet loss (disabling
power saving on the client will fix this).
@


1.41
log
@tweak the wep section somewhat, to bring it into line with what
we say for those devices which support wpa;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.40 2008/04/17 14:01:22 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: April 17 2008 $
d347 4
@


1.40
log
@remove the CONFIGURATION section from the wireless pages:
the addition of the wpa options have shown just how unwieldy it had
become, it's already in ifconfig(8) anyway, and "ifconfig -m" will
get the relevant ones.

ok dlg jsg
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.39 2007/12/10 10:32:54 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: December 10 2007 $
d124 1
d126 6
a131 9
supports hardware WEP.
Wired Equivalent Privacy (WEP) is the de facto encryption standard
for wireless networks.
It can be typically configured in one of three modes:
no encryption; 40-bit encryption; or 104-bit encryption.
Unfortunately, due to serious weaknesses in WEP protocol
it is strongly recommended that it not be used as the
sole mechanism to secure wireless communication.
WEP is not enabled by default.
@


1.39
log
@document "nwflag" for wireless devices which can operate in
hostap mode;

ok damien
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.38 2007/11/17 10:19:20 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: November 17 2007 $
d137 1
a137 1
.Sh CONFIGURATION
d143 1
a143 173
.Xr hostname.if 5
using the following parameters:
.Bl -tag -width Ds
.It Cm bssid Ar bssid
Set the desired BSSID.
.It Fl bssid
Unset the desired BSSID.
The interface will automatically select a BSSID in this mode, which is
the default.
.It Cm chan Ar n
Set the channel (radio frequency) to be used by the driver based on
the given channel ID
.Ar n .
.It Fl chan
Unset the desired channel to be used by the driver.
The driver will automatically select a channel in this mode, which is
the default.
.It Cm media Ar media
The
.Nm
driver supports the following
.Ar media
types:
.Pp
.Bl -tag -width autoselect -compact
.It Cm autoselect
Enable autoselection of the media type and options.
.It Cm DS1
Set 802.11b DS 1Mbps operation.
.It Cm DS2
Set 802.11b DS 2Mbps operation.
.It Cm DS5
Set 802.11b DS 5.5Mbps operation.
.It Cm DS11
Set 802.11b DS 11Mbps operation.
.It Cm OFDM6
Set 802.11a/g OFDM 6Mbps operation.
.It Cm OFDM9
Set 802.11a/g OFDM 9Mbps operation.
.It Cm OFDM12
Set 802.11a/g OFDM 12Mbps operation.
.It Cm OFDM18
Set 802.11a/g OFDM 18Mbps operation.
.It Cm OFDM24
Set 802.11a/g OFDM 24Mbps operation.
.It Cm OFDM36
Set 802.11a/g OFDM 36Mbps operation.
.It Cm OFDM48
Set 802.11a/g OFDM 48Mbps operation.
.It Cm OFDM54
Set 802.11a/g OFDM 54Mbps operation.
.El
.It Cm mediaopt Ar opts
The
.Nm
driver supports the following media options:
.Pp
.Bl -tag -width monitor -compact
.It Cm hostap
Select Host AP operation.
.It Cm ibss
Select IBSS operation.
.It Cm monitor
Select monitor mode.
.It Cm turbo
Select turbo mode.
.El
.It Fl mediaopt Ar opts
Disable the specified media options on the driver and return it to the
default mode of operation (BSS).
.It Cm mode Ar mode
The
.Nm
driver supports the following modes:
.Pp
.Bl -tag -width 11b -compact
.It Cm 11a
Force 802.11a operation.
.It Cm 11b
Force 802.11b operation.
.It Cm 11g
Force 802.11g operation.
.El
.It Cm nwflag Ar flag
Set a specified flag for the wireless network interface.
The flag name can be either
.Ql hidenwid
or
.Ql nobridge .
The
.Ql hidenwid
flag will hide the network ID (ESSID) in beacon frames when operating
in Host AP mode.
It will also prevent responses to probe requests with an unspecified
network ID.
The
.Ql nobridge
flag will disable the direct bridging of frames between associated
nodes when operating in Host AP mode.
Setting this flag will block and filter direct inter-station
communications.
.Pp
Note that the
.Ql hidenwid
and
.Ql nobridge
options do not provide any security.
The hidden network ID will be sent in clear text by associating
stations and can be easily discovered with tools like
.Xr tcpdump 8
and
.Xr hostapd 8 .
.It Fl nwflag Ar flag
Remove a specified flag for the wireless network interface.
.It Cm nwid Ar id
Set the network ID.
The
.Ar id
can either be any text string up to 32 characters in length,
or a series of hexadecimal digits up to 64 digits.
An empty
.Ar id
string allows the interface to connect to any available access points.
By default the
.Nm
driver uses an empty string.
Note that network ID is synonymous with Extended Service Set ID (ESSID).
.It Fl nwid
Set the network ID to the empty string to allow the interface to connect
to any available access point.
.It Cm nwkey Ar key
Enable WEP encryption using the specified
.Ar key .
The
.Ar key
can either be a string, a series of hexadecimal digits (preceded by
.Sq 0x ) ,
or a set of keys of the form
.Dq n:k1,k2,k3,k4 ,
where
.Sq n
specifies which of the keys will be used for transmitted packets,
and the four keys,
.Dq k1
through
.Dq k4 ,
are configured as WEP keys.
If a set of keys is specified, a comma
.Pq Sq \&,
within the key must be escaped with a backslash.
Note that if multiple keys are used, their order must be the same within
the network.
.Nm
is capable of using both 40-bit (5 characters or 10 hexadecimal digits)
or 104-bit (13 characters or 26 hexadecimal digits) keys.
.It Fl nwkey
Disable WEP encryption.
This is the default mode of operation.
.It Cm nwkey persist
Enable WEP encryption with the persistent key stored in the network card.
.It Cm nwkey persist : Ns Ar key
Write
.Ar key
to the persistent memory of the network card,
and enable WEP encryption using that key.
.It Cm powersave
Enable power saving mode.
.It Fl powersave
Disable power saving mode.
This is the default mode of operation.
.It Cm powersavesleep Ar duration
Set the receiver sleep duration (in milliseconds) for power saving mode.
.El
@


1.38
log
@GPIO improvements:

- make "man -k gpio" work
- gpioctl(8) should not try to list all gpio devices (it's why we have man -k)
- gpio devices should have "GPIO" in their .Nd, and cross-reference gpio(4)
and gpioctl(8)

second set of fixes for gpio(4) itself coming from mbalmer...
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.37 2007/05/31 19:19:49 jmc Exp $
d45 1
a45 1
.Dd $Mdocdate: May 31 2007 $
d226 31
@


1.37
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.36 2006/12/05 22:03:47 damien Exp $
d45 1
a45 1
.Dd $Mdocdate$
d50 1
a50 1
.Nd Atheros IEEE 802.11a/b/g wireless network device
d463 1
@


1.36
log
@shorter url.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.35 2006/12/05 21:55:55 damien Exp $
d45 1
a45 1
.Dd February 27, 2004
@


1.35
log
@update url to atheros customer products database.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.34 2006/11/10 20:06:58 mk Exp $
d341 1
a341 1
.Pa http://customerproducts.atheros.com/customerproducts/ResultsPageBasic.asp .
@


1.34
log
@Mention -nwid here too, reminded by reyk.

Having to edit all these files makes me realise how many wireless
drivers we actually have.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.33 2006/09/28 03:43:21 brad Exp $
d341 1
a341 1
.Pa http://customerproducts.atheros.com/customerproducts .
@


1.33
log
@remove the sentence mentioning the Prism GT chipset. in general man pages
should only mention what hardware is supported.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.32 2006/08/30 23:14:30 jmc Exp $
d239 3
@


1.32
log
@concentrate on `device', not `driver'; from deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.31 2006/02/22 12:43:25 jmc Exp $
a485 3
.Pp
Revision A1 of the D-LINK DWL-G520 and DWL-G650 are based on an
Intersil PrismGT chip and are not supported by this driver.
@


1.31
log
@+Planet WL-3560	AR5211	CardBus	a/b/g
from alexey e. suslikov
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.30 2005/11/11 09:27:17 jmc Exp $
d50 1
a50 1
.Nd Atheros IEEE 802.11a/b/g wireless network driver
@


1.30
log
@IBM 11ABG WL LAN is supported by ath;
from chris kuethe;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.29 2005/11/07 19:25:50 jmc Exp $
d325 1
@


1.29
log
@3CRPAG175 works: from chris kuethe;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.28 2005/10/05 17:29:04 reyk Exp $
d310 1
@


1.28
log
@the Wistron CM9 Mini PCI is supported (Chris Cappuccio: "works fine as
802.11b, in fact, very, very well" [thanks]). also re-add the senao
NL-5354MP Mini PCI and distinguish between PCI and Mini PCI.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.27 2005/09/30 20:34:24 jaredy Exp $
d294 1
a294 1
.\"3Com 3CRPAG175	AR5212	CardBus	a/b/g
@


1.27
log
@deploy .An -nosplit; ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.26 2005/08/18 11:59:58 jsg Exp $
d327 1
a327 1
.\"Senao NL-5354MP	AR5212	PCI	a/b/g
d332 1
@


1.26
log
@Comment out AR5212 entries where it is unknown if they work.
ok reyk@@, jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.25 2005/06/09 09:03:38 jmc Exp $
d469 1
@


1.25
log
@note that nwid and essid are the same;
from walter goulet and clarified by reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.24 2005/06/07 11:52:34 jmc Exp $
d294 2
a295 2
3Com 3CRPAG175	AR5212	CardBus	a/b/g
Aztech WL830PC	AR5212	CardBus	b/g
d300 5
a304 5
D-Link DWL-AG520	AR5212	PCI	a/b/g
D-Link DWL-AG650	AR5212	CardBus	a/b/g
D-Link DWL-G520	AR5212	PCI	b/g
D-Link DWL-G650B	AR5212	CardBus	b/g
Elecom LD-WL54AG	AR5212	CardBus	a/b/g
d306 8
a313 8
Fujitsu E5454	AR5212	CardBus	a/b/g
Fujitsu FMV-JW481	AR5212	CardBus	a/b/g
Fujitsu E5454	AR5212	CardBus	a/b/g
HP NC4000	AR5212	PCI	a/b/g
I/O Data WN-AB	AR5212	CardBus	a/b
I/O Data WN-AG	AR5212	CardBus	a/b/g
I/O Data WN-A54	AR5212	CardBus	a
Linksys WMP55AG	AR5212	PCI	a/b/g
d315 3
a317 3
Linksys WPC55AG	AR5212	CardBus	a/b/g
NEC PA-WL/54AG	AR5212	CardBus	a/b/g
Netgear WAG311	AR5212	PCI	a/b/g
d319 5
a323 5
Netgear WAG511	AR5212	CardBus	a/b/g
Netgear WG311 rev1	AR5212	PCI	b/g
Netgear WG511T	AR5212	CardBus	b/g
Orinoco 8480	AR5212	CardBus	a/b/g
Orinoco 8470WD	AR5212	CardBus	a/b/g
d326 2
a327 2
Samsung SWL-5200N	AR5212	CardBus	a/b/g
Senao NL-5354MP	AR5212	PCI	a/b/g
d329 2
a330 2
Sony PCWA-C700	AR5212	CardBus	a/b
Sony PCWA-C300S	AR5212	CardBus	b/g
@


1.24
log
@some chips support 802.11a too...
ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.23 2005/05/28 10:03:00 reyk Exp $
d238 1
@


1.23
log
@Cisco Aironet AIR-CB21AG is based on AR5212 + AR5112 and supported
by ath(4). Thanks to Johan M:son Lindman for the donation!
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.22 2005/04/20 12:29:22 deraadt Exp $
d179 1
a179 1
Set 802.11g OFDM 6Mbps operation.
d181 1
a181 1
Set 802.11g OFDM 9Mbps operation.
d183 1
a183 1
Set 802.11g OFDM 12Mbps operation.
d185 1
a185 1
Set 802.11g OFDM 18Mbps operation.
d187 1
a187 1
Set 802.11g OFDM 24Mbps operation.
d189 1
a189 1
Set 802.11g OFDM 36Mbps operation.
d191 1
a191 1
Set 802.11g OFDM 48Mbps operation.
d193 1
a193 1
Set 802.11g OFDM 54Mbps operation.
@


1.22
log
@easier to read; ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.21 2005/04/17 12:29:07 jmc Exp $
d295 1
@


1.21
log
@add hostapd(8) to SEE ALSO;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.20 2005/04/13 16:46:53 jmc Exp $
d69 4
a72 1
AR5210-based devices support 802.11a operation with transmit speeds
d75 2
a76 1
AR5211-based devices support 802.11a and 802.11b operation with
d80 2
a81 1
AR5212-based devices support 802.11a, 802.11b, and 802.11g operation with
d84 1
@


1.20
log
@it is not possible to specify `media' and `-mediaopt' to ifconfig at
the same time; just use `media autoselect' in our example how to
return nic to default state;

found by johan torin;
usage confirmed by reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.19 2005/04/08 18:39:16 jmc Exp $
d449 1
@


1.19
log
@grammar; from jaredy@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.18 2005/04/06 09:14:53 reyk Exp $
d355 1
a355 1
# ifconfig ath0 -bssid -chan media autoselect -mediaopt \e
@


1.18
log
@pad keys with zeros to a supported key length. this is bad but seems
to be the default WEP behaviour for string-based keys and allows
commands like "ifconfig ath0 nwkey yuck" to work...
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.17 2005/03/12 10:32:40 jmc Exp $
d205 1
a205 1
Disable the specified media options on the driver and returns it to the
@


1.17
log
@mini-PCI/MiniPCI -> Mini PCI
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.16 2005/03/09 09:45:02 jmc Exp $
d398 3
@


1.16
log
@use `CardBus' rather than `Cardbus' for consistency;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.15 2005/03/06 21:49:00 jmc Exp $
d278 1
a278 1
driver come in either CardBus or mini-PCI packages.
@


1.15
log
@wireless makeover:

- standardise 802.11 pages
- document modes supported by the card
- document wep
- document relevant ifconfig(8) options
- standard EXAMPLES section
- standard SEE ALSO section
- standard HARDWARE section

includes feedback/diffs from reyk@@, jsg@@, and damien@@;
joint work from dlg@@ and myself;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.14 2005/02/25 22:31:31 reyk Exp $
d287 1
a287 1
3Com 3CRPAG175	AR5212	Cardbus	a/b/g
@


1.14
log
@add ar5211
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.13 2005/02/21 10:18:25 jmc Exp $
d50 1
a50 1
.Nd Atheros IEEE 802.11A/B/G wireless network adapter
d58 2
a59 2
driver provides support for wireless network adapters based on
the Atheros AR5210, AR5211 and AR5212 chips.
a60 2
Supported features include 802.11 and 802.3 frames, power management, BSS,
IBSS, and host-based access point operation modes.
a61 1
.Pp
d64 1
a64 1
driver encapsulates all IP and ARP traffic as 802.11 frames, however
d72 7
a78 6
AR5211-based devices support 802.11a and 802.11b operation
with transmit speeds appropriate to each.
.Pp
AR5212-based devices support 802.11a, 802.11b and 802.11g operation with
transmit speeds as above for 802.11a and 802.11g operation and
1Mbps, 2Mbps, 5.5 Mbps and 11Mbps for 802.11b operation.
d87 42
a128 1
All chips support WEP encryption.
d131 62
a192 2
To enable encryption, use
.Xr ifconfig 8 .
d194 15
a208 1
By default, the
d210 1
a210 3
driver configures the card for BSS operation (aka infrastructure
mode).
This mode requires the use of an access point (base station).
d212 23
d236 18
d255 21
a275 14
driver also supports the standard IBSS point-to-point mode
where stations can communicate amongst themselves without the
aid of an access point.
.Pp
The driver may also be configured to operate in hostap mode.
In this mode a host may function as an access point (base station).
In hostap mode access points operate in BSS mode.
They allow for easier roaming and bridge all Ethernet traffic such
that machines connected via an access point appear to be on the local
Ethernet segment.
.Pp
For more information on configuring this device, see
.Xr ifconfig 8 .
.Pp
d285 1
a285 1
.Bl -column -compact "Samsung SWL-5200N" "AR5212" "CardBus" "a/b/g"
d287 1
d312 1
a312 1
Netgear WG311	AR5212	PCI	b/g
d319 1
a323 1
3Com 3CRPAG175	AR5212	CardBus	a/b/g
d328 36
a382 2
.It "ath%d: 802.11 address: %s"
The MAC address programmed in the EEPROM is displayed.
a420 7
.It "ath%d: %s: %dM -\*[Gt] %dM (%d ok, %d err, %d retr)"
The driver's rate control algorithm changed the current rate for transmitting
frames.
This message is temporarily enabled for normal use to help in diagnosing
and improving the rate control algorithm.
The message indicates the new and old transmit rates and the statistics
it used to decide on this change.
d442 1
d445 1
d447 9
d464 2
a465 1
.An Reyk Floeter .
a466 5
Different regulatory domains have different default channels for adhoc
mode.
See
.Xr ifconfig 8
for information on how to change the channel.
d479 1
a479 1
with a better one (hint: all the information needed is available to the driver).
@


1.13
log
@reinstate original .Nd;
ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.12 2005/02/19 17:23:48 reyk Exp $
d59 1
a59 3
the Atheros AR5210 and AR5212
.\", AR5211
chips.
d75 3
a80 3
.\".Pp
.\"AR5211-based devices support 802.11a and 802.11b operation
.\"with transmit speeds appropriate to each.
d90 1
a90 2
.\"AR5211 and
AR5212 support the AES, TKIP, and Michael cryptographic
d130 1
a130 1
.\"D-Link DWL-AB650	AR5211	CardBus	a/b
d137 1
a137 1
.\"Elecom LD-WL54	AR5211	CardBus	a
d146 1
a146 1
.\"Linksys WPC51AB	AR5211	CardBus	a/b
d150 1
a150 1
.\"Netgear WAB501	AR5211	CardBus	a/b
@


1.12
log
@comment in ar5212
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.11 2005/02/08 18:48:51 jmc Exp $
d50 1
a50 2
.\" XXX Add /B/G once supported
.Nd Atheros IEEE 802.11A wireless network adapter
@


1.11
log
@comment out AR5211/AR5212 stuff until we support it;
ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.10 2004/12/05 03:34:37 jolan Exp $
d60 2
a61 2
the Atheros AR5210
.\", AR5211, and AR5212
d77 4
d82 1
a82 5
.\"AR5211-based devices support 802.11a and 802.11b operation with transmit
.\"speeds as above for 802.11a operation and
.\"1Mbps, 2Mbps, 5.5 Mbps and 11Mbps for 802.11b operation.
.\".Pp
.\"AR5212-based devices support 802.11a, 802.11b, and 802.11g operation
d93 3
a95 2
.\"AR5211 and AR5212 support the AES, TKIP, and Michael cryptographic
.\"operations required for WPA but at this time the driver does not support them.
d132 1
a132 1
.\"Aztech WL830PC	AR5212	CardBus	b/g
d136 5
a140 5
.\"D-Link DWL-AG520	AR5212	PCI	a/b/g
.\"D-Link DWL-AG650	AR5212	CardBus	a/b/g
.\"D-Link DWL-G520	AR5212	PCI	b/g
.\"D-Link DWL-G650B	AR5212	CardBus	b/g
.\"Elecom LD-WL54AG	AR5212	CardBus	a/b/g
d142 8
a149 8
.\"Fujitsu E5454	AR5212	CardBus	a/b/g
.\"Fujitsu FMV-JW481	AR5212	CardBus	a/b/g
.\"Fujitsu E5454	AR5212	CardBus	a/b/g
.\"HP NC4000	AR5212	PCI	a/b/g
.\"I/O Data WN-AB	AR5212	CardBus	a/b
.\"I/O Data WN-AG	AR5212	CardBus	a/b/g
.\"I/O Data WN-A54	AR5212	CardBus	a
.\"Linksys WMP55AG	AR5212	PCI	a/b/g
d151 3
a153 3
.\"Linksys WPC55AG	AR5212	CardBus	a/b/g
.\"NEC PA-WL/54AG	AR5212	CardBus	a/b/g
.\"Netgear WAG311	AR5212	PCI	a/b/g
d155 5
a159 5
.\"Netgear WAG511	AR5212	CardBus	a/b/g
.\"Netgear WG311	AR5212	PCI	b/g
.\"Netgear WG511T	AR5212	CardBus	b/g
.\"Orinoco 8480	AR5212	CardBus	a/b/g
.\"Orinoco 8470WD	AR5212	CardBus	a/b/g
d162 1
a162 1
.\"Samsung SWL-5200N	AR5212	CardBus	a/b/g
d164 2
a165 2
.\"Sony PCWA-C700	AR5212	CardBus	a/b
.\"Sony PCWA-C300S	AR5212	CardBus	b/g
d167 1
a167 1
.\"3Com 3CRPAG175	AR5212	CardBus	a/b/g
@


1.10
log
@add 'wireless network' so this shows up w/apropos wireless
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.9 2004/11/23 09:39:29 reyk Exp $
d50 2
a51 1
.Nd Atheros IEEE 802.11A/B/G wireless network adapter
d60 3
a62 1
the Atheros AR5210, AR5211, and AR5212 chips.
d77 7
a83 7
.Pp
AR5211-based devices support 802.11a and 802.11b operation with transmit
speeds as above for 802.11a operation and
1Mbps, 2Mbps, 5.5 Mbps and 11Mbps for 802.11b operation.
.Pp
AR5212-based devices support 802.11a, 802.11b, and 802.11g operation
with transmit speeds appropriate to each.
d93 2
a94 2
AR5211 and AR5212 support the AES, TKIP, and Michael cryptographic
operations required for WPA but at this time the driver does not support them.
d131 1
a131 1
Aztech WL830PC	AR5212	CardBus	b/g
d133 1
a133 1
D-Link DWL-AB650	AR5211	CardBus	a/b
d135 24
a158 24
D-Link DWL-AG520	AR5212	PCI	a/b/g
D-Link DWL-AG650	AR5212	CardBus	a/b/g
D-Link DWL-G520	AR5212	PCI	b/g
D-Link DWL-G650B	AR5212	CardBus	b/g
Elecom LD-WL54AG	AR5212	CardBus	a/b/g
Elecom LD-WL54	AR5211	CardBus	a
Fujitsu E5454	AR5212	CardBus	a/b/g
Fujitsu FMV-JW481	AR5212	CardBus	a/b/g
Fujitsu E5454	AR5212	CardBus	a/b/g
HP NC4000	AR5212	PCI	a/b/g
I/O Data WN-AB	AR5212	CardBus	a/b
I/O Data WN-AG	AR5212	CardBus	a/b/g
I/O Data WN-A54	AR5212	CardBus	a
Linksys WMP55AG	AR5212	PCI	a/b/g
Linksys WPC51AB	AR5211	CardBus	a/b
Linksys WPC55AG	AR5212	CardBus	a/b/g
NEC PA-WL/54AG	AR5212	CardBus	a/b/g
Netgear WAG311	AR5212	PCI	a/b/g
Netgear WAB501	AR5211	CardBus	a/b
Netgear WAG511	AR5212	CardBus	a/b/g
Netgear WG311	AR5212	PCI	b/g
Netgear WG511T	AR5212	CardBus	b/g
Orinoco 8480	AR5212	CardBus	a/b/g
Orinoco 8470WD	AR5212	CardBus	a/b/g
d161 1
a161 1
Samsung SWL-5200N	AR5212	CardBus	a/b/g
d163 2
a164 2
Sony PCWA-C700	AR5212	CardBus	a/b
Sony PCWA-C300S	AR5212	CardBus	b/g
d166 1
a166 1
3Com 3CRPAG175	AR5212	CardBus	a/b/g
@


1.9
log
@support the gpio found on ath(4) devices.
ok grange@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.8 2004/11/08 23:05:42 deraadt Exp $
d50 1
a50 1
.Nd Atheros IEEE 802.11A/B/G adapter
@


1.8
log
@clarify Nd lines, jmc ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.7 2004/11/07 18:46:04 jmc Exp $
d54 1
d253 1
@


1.7
log
@simplify hostap description;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.6 2004/11/07 18:26:54 deraadt Exp $
d50 1
a50 1
.Nd Atheros IEEE 802.11 adapter
@


1.6
log
@correct paths, pointed out by reyk
@
text
@d1 1
a1 1
.\"	$OpenBSD: ath.4,v 1.5 2004/11/07 18:12:58 jmc Exp $
d108 1
a108 2
Access points are different than operating in IBSS mode.
They operate in BSS mode.
@


1.5
log
@tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD$
a58 3
Chip-specific support is provided by the Atheros Hardware Access Layer
(HAL), which is currently available only in binary form for selected
architectures.
d171 1
a171 1
The Atheros Hardware Access Layer was unable to configure the hardware
d174 1
a174 1
.Pa contrib/sys/dev/ic/athhal.h .
d200 1
a200 1
The Atheros Hardware Access Layer was unable to reset the hardware
d203 1
a203 1
.Pa contrib/sys/dev/ic/athhal.h .
d217 1
a217 1
The Atheros Hardware Access Layer was unable to reset the hardware
@


1.4
log
@oops
@
text
@d1 1
d113 1
a113 1
They allow for easier roaming and bridge all ethernet traffic such
d115 1
a115 1
ethernet segment.
d183 1
a183 1
The request to the HAL to setup the transmit queue for normal
d187 1
a187 1
The request to the HAL to setup the transmit queue for 802.11 beacon frames
a280 1
.Pp
@


1.3
log
@avoid first person
@
text
@d70 1
a70 1
Transmit speed and operating mode is selectable
@


1.2
log
@Xr all around
@
text
@d71 1
a71 1
depending on your hardware.
@


1.1
log
@add man page reyk did not commit, he will learn
@
text
@d49 1
a49 1
.Nd Atheros IEEE 802.11 driver
@

