head	1.7;
access;
symbols
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2001.07.31.18.36.43;	author millert;	state dead;
branches;
next	1.6;

1.6
date	2001.06.23.07.04.12;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.29.02.11.11;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	99.10.05.20.53.11;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.07.03.02.11.13;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	96.05.02.01.24.27;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.17.16.18.29;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Remove unsupported drek
@
text
@.\"	$OpenBSD: ms.4,v 1.6 2001/06/23 07:04:12 pjanzen Exp $
.\"	$NetBSD: ms.4,v 1.2 1996/04/25 06:03:47 leo Exp $
.\"
.\" Copyright (c) 1995 Leo Weppelman
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Leo Weppelman.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\"
.Dd October 16, 1995
.Dt MS 4 Atari
.Os
.Sh NAME
.Nm ms
.Nd
.Tn Atari
mouse interface
.Sh SYNOPSIS
.Cd "pseudo-device mouse 1"
.Sh DESCRIPTION
The Atari mouse driver supports both the original Atari mouse and the third
party 3-button mouse that has its middle button connected to the up-switch
of the second joystick port. To accommodate X11 users with a standard mouse,
the driver is able to emulate the middle button. See the section on ioctls
for more info.
.Pp
.Bl -tag -width xx
.It Sy Supported ioctls
.Bl -tag -width MIOCG3B_EMUL -compact
.It MIOCS3B_EMUL
This ioctl turns the middle button emulation on or off depending on its
argument. The middle button event is triggered by simultaneously pressing
the left and right buttons. The default emulation mode is on.
.Pp
Note that the emulation status is retained across multiple open/close calls.
.It MIOCG3B_EMUL
This ioctl allows you to get the actual status of the emulation mode.
.El
.El
.Bl -tag -width xx
.It Sy Interface description
The Atari mouse interface works on a minimal emulation of Sun's Firm_event
structures. The primary reason for this is easy interfacing with X11.
.Pp
The movement and button events are read as structures of the form:
.Bd -literal
typedef struct Firm_event {
	u_int_16_t      id;       /* key or MS_* or LOC_[XY]_DELTA   */
	u_int_16_t      pad;      /* unused                          */
	int_16_t        value;    /* VKEY_{UP,DOWN} or locator delta */
	struct timeval  time;     /* time stamp of the event         */
}
.Pp
The values of 'id' concerning the mouse:
.Bd -literal
#define MS_LEFT         0x7f20    /* left mouse button   */
#define MS_MIDDLE       0x7f21    /* middle mouse button */
#define MS_RIGHT        0x7f22    /* right mouse button  */
#define LOC_X_DELTA     0x7f80    /* mouse delta-X       */
#define LOC_Y_DELTA     0x7f81    /* mouse delta-Y       */
.Ed
.Pp
The values of 'value' concerning a button event:
.Bd -literal
#define VKEY_UP         0         /* a button went up   */
#define VKEY_DOWN       1         /* a button went down */
.Ed
.Sh FILES
.Bl -tag -width /dev/mouse0 -compact
.It Pa /dev/mouse0
real mouse device
.It Pa /dev/mouse
currently active mouse device
.El
.El
.Sh BUGS
The time interval that defines 'simultaneous' cannot be set.
@


1.6
log
@spelling fixes and minor repairs almost entirely from jsyn@@nthought.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: ms.4,v 1.5 2001/01/29 02:11:11 niklas Exp $
@


1.5
log
@$OpenBSD$
@
text
@d1 1
a1 1
.\"	$OpenBSD: ms.4,v 1.2 1996/04/25 06:03:47 leo Exp $
d47 1
a47 1
of the second joystick port. To accomodate X11 users with a standard mouse,
@


1.4
log
@The .Bl -tag flag expects a -width argument.
@
text
@d1 1
@


1.3
log
@remove redundant .Pp macros
@
text
@d50 1
a50 1
.Bl -tag
d63 1
a63 1
.Bl -tag
@


1.2
log
@sync with netbsd
@
text
@a43 1

a66 1

a75 1

a84 1

a90 2

.Pp
d94 1
a94 1
The real mouse device
d96 1
a96 1
The currently active mouse device
@


1.1
log
@from netbsd
@
text
@d1 1
a1 1
.\"	$NetBSD: ms.4,v 1.1 1995/10/19 06:50:44 leo Exp $
d44 22
d82 1
a82 1
#define MS_LEFT         0x7f20    /* left mouse button */
d84 3
a86 3
#define MS_RIGHT        0x7f22    /* right mouse button */
#define LOC_X_DELTA     0x7f80    /* mouse delta-X */
#define LOC_Y_DELTA     0x7f81    /* mouse delta-Y */
d92 1
a92 1
#define VKEY_UP         0         /* a button went up */
a95 3
The middle button event is generated by the driver on the Atari. It can
be triggered by simultaneously pressing the left and right buttons.

d103 1
@
