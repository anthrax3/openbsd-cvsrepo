head	1.42;
access;
symbols
	OPENBSD_6_2_BASE:1.42
	OPENBSD_6_1:1.41.0.10
	OPENBSD_6_1_BASE:1.41
	OPENBSD_6_0:1.41.0.8
	OPENBSD_6_0_BASE:1.41
	OPENBSD_5_9:1.41.0.2
	OPENBSD_5_9_BASE:1.41
	OPENBSD_5_8:1.41.0.4
	OPENBSD_5_8_BASE:1.41
	OPENBSD_5_7:1.39.0.4
	OPENBSD_5_7_BASE:1.39
	OPENBSD_5_6:1.36.0.6
	OPENBSD_5_6_BASE:1.36
	OPENBSD_5_5:1.36.0.4
	OPENBSD_5_5_BASE:1.36
	OPENBSD_5_4:1.31.0.2
	OPENBSD_5_4_BASE:1.31
	OPENBSD_5_3:1.30.0.2
	OPENBSD_5_3_BASE:1.30
	OPENBSD_5_2:1.29.0.4
	OPENBSD_5_2_BASE:1.29
	OPENBSD_5_1_BASE:1.29
	OPENBSD_5_1:1.29.0.2
	OPENBSD_5_0:1.27.0.8
	OPENBSD_5_0_BASE:1.27
	OPENBSD_4_9:1.27.0.6
	OPENBSD_4_9_BASE:1.27
	OPENBSD_4_8:1.27.0.4
	OPENBSD_4_8_BASE:1.27
	OPENBSD_4_7:1.27.0.2
	OPENBSD_4_7_BASE:1.27
	OPENBSD_4_6:1.23.0.4
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.19.0.2
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.18.0.2
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11;
locks; strict;
comment	@.\" @;


1.42
date	2017.06.27.16.02.05;	author tb;	state Exp;
branches;
next	1.41;
commitid	Qr7Kv0EUvMilMTHl;

1.41
date	2015.04.14.19.10.13;	author miod;	state Exp;
branches;
next	1.40;
commitid	Vm1bBYcUgE6LsEfX;

1.40
date	2015.04.11.16.37.34;	author jsing;	state Exp;
branches;
next	1.39;
commitid	TtCayghEi4w23TkX;

1.39
date	2015.02.16.16.38.54;	author naddy;	state Exp;
branches;
next	1.38;
commitid	ne9aoqc3owhFBWUD;

1.38
date	2014.11.27.13.15.54;	author stsp;	state Exp;
branches;
next	1.37;
commitid	DcLjTJ0rvoRoSeRa;

1.37
date	2014.11.26.22.30.47;	author stsp;	state Exp;
branches;
next	1.36;
commitid	4iRnT56MBYy7DPmi;

1.36
date	2014.02.08.17.05.15;	author chris;	state Exp;
branches;
next	1.35;

1.35
date	2014.01.18.09.11.12;	author jsing;	state Exp;
branches;
next	1.34;

1.34
date	2014.01.18.09.01.01;	author jsing;	state Exp;
branches;
next	1.33;

1.33
date	2013.10.31.17.54.57;	author stsp;	state Exp;
branches;
next	1.32;

1.32
date	2013.10.28.15.15.08;	author stsp;	state Exp;
branches;
next	1.31;

1.31
date	2013.03.12.14.00.57;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2012.08.14.01.08.19;	author dlg;	state Exp;
branches;
next	1.29;

1.29
date	2012.01.02.08.24.44;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2011.12.31.17.06.10;	author jsing;	state Exp;
branches;
next	1.27;

1.27
date	2009.12.08.14.12.05;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2009.10.26.04.00.22;	author marco;	state Exp;
branches;
next	1.25;

1.25
date	2009.10.11.14.29.49;	author sobrado;	state Exp;
branches;
next	1.24;

1.24
date	2009.07.20.04.12.25;	author cnst;	state Exp;
branches;
next	1.23;

1.23
date	2009.06.23.18.49.10;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2009.06.17.23.11.38;	author marco;	state Exp;
branches;
next	1.21;

1.21
date	2009.05.01.19.00.40;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2009.04.29.07.02.02;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2008.09.05.06.58.42;	author fkr;	state Exp;
branches;
next	1.18;

1.18
date	2008.06.14.00.16.38;	author hshoexer;	state Exp;
branches;
next	1.17;

1.17
date	2008.01.29.10.26.56;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2008.01.27.00.38.16;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2008.01.26.22.55.40;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2008.01.26.16.39.27;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2008.01.26.08.58.54;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2008.01.24.19.33.16;	author marco;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.02.15.33.21;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2007.05.31.19.19.52;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.31.04.26.29;	author grunk;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.31.02.49.05;	author grunk;	state Exp;
branches;
next	1.7;

1.7
date	2007.04.18.13.38.33;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2007.04.18.06.44.08;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2007.04.17.22.50.59;	author marco;	state Exp;
branches;
next	1.4;

1.4
date	2007.04.17.22.47.53;	author marco;	state Exp;
branches;
next	1.3;

1.3
date	2007.03.26.00.31.50;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2007.03.20.06.08.03;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.20.03.40.38;	author todd;	state Exp;
branches;
next	;


desc
@@


1.42
log
@Remove an extra '\n' from the printf strings fed into disklabel -E

from corsah () mail ! ru
@
text
@.\"	$OpenBSD: softraid.4,v 1.41 2015/04/14 19:10:13 miod Exp $
.\"
.\" Copyright (c) 2007 Todd T. Fries   <todd@@OpenBSD.org>
.\" Copyright (c) 2007 Marco Peereboom <marco@@OpenBSD.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: April 14 2015 $
.Dt SOFTRAID 4
.Os
.Sh NAME
.Nm softraid
.Nd software RAID
.Sh SYNOPSIS
.Cd "softraid0 at root"
.Sh DESCRIPTION
The
.Nm
device emulates a Host Bus Adapter (HBA) that provides RAID and other I/O
related services.
The
.Nm
device provides a scaffold to implement more complex I/O transformation
disciplines.
For example, one can tie chunks together into a mirroring discipline.
There really is no limit on what type of discipline one can write as long
as it fits the SCSI model.
.Pp
.Nm
supports a number of
.Em disciplines .
A discipline is a collection of functions
that provides specific I/O functionality.
This includes I/O path, bring-up, failure recovery, and statistical
information gathering.
Essentially a discipline is a lower
level driver that provides the I/O transformation for the softraid
device.
.Pp
A
.Em volume
is a virtual disk device that is made up of a collection of chunks.
.Pp
A
.Em chunk
is a partition or storage area of fstype
.Dq RAID .
.Xr disklabel 8
is used to alter the fstype.
.Pp
Currently
.Nm
supports the following disciplines:
.Bl -ohang -offset indent
.It RAID 0
A
.Em striping
discipline.
It segments data over a number of chunks to increase performance.
RAID 0 does not provide for data loss (redundancy).
.It RAID 1
A
.Em mirroring
discipline.
It copies data across more than one chunk to provide for data loss.
Read performance is increased,
though at the cost of write speed.
Unlike traditional RAID 1,
.Nm
supports the use of more than two chunks in a RAID 1 setup.
.It RAID 5
A striping discipline with
.Em floating parity
across all chunks.
It stripes data across chunks and provides parity to prevent data loss of
a single chunk failure.
Read performance is increased;
write performance does incur additional overhead.
.It CRYPTO
An
.Em encrypting
discipline.
It encrypts data on a single chunk to provide for data confidentiality.
CRYPTO does not provide redundancy.
.It CONCAT
A
.Em concatenating
discipline.
It writes data to each chunk in sequence to provide increased capacity.
CONCAT does not provide redundancy.
.El
.Pp
.Xr installboot 8
may be used to install
.Xr boot 8
in the boot storage area of the
.Nm
volume.
Boot support is currently limited to the CRYPTO and RAID 1 disciplines
on amd64, i386, and sparc64 platforms.
On sparc64, bootable chunks must be RAID partitions using the letter
.Sq a .
At the
.Xr boot 8
prompt, softraid volumes have names beginning with
.Sq sr
and can be booted from like a normal disk device.
CRYPTO volumes will require a decryption passphrase or keydisk at boot time.
.Sh EXAMPLES
An example to create a 3 chunk RAID 1 from scratch is as follows:
.Pp
Initialize the partition tables of all disks:
.Bd -literal -offset indent
# fdisk -iy wd1
# fdisk -iy wd2
# fdisk -iy wd3
.Ed
.Pp
Now create RAID partitions on all disks:
.Bd -literal -offset indent
# printf "a\en\en\en\enRAID\enw\enq\en" | disklabel -E wd1
# printf "a\en\en\en\enRAID\enw\enq\en" | disklabel -E wd2
# printf "a\en\en\en\enRAID\enw\enq\en" | disklabel -E wd3
.Ed
.Pp
Assemble the RAID volume:
.Bd -literal -offset indent
# bioctl -c 1 -l /dev/wd1a,/dev/wd2a,/dev/wd3a softraid0
.Ed
.Pp
The console will show what device was added to the system:
.Bd -literal -offset indent
scsibus0 at softraid0: 1 targets
sd0 at scsibus0 targ 0 lun 0: <OPENBSD, SR RAID 1, 001> SCSI2
sd0: 1MB, 0 cyl, 255 head, 63 sec, 512 bytes/sec, 3714 sec total
.Ed
.Pp
It is good practice to wipe the front of the disk before using it:
.Bd -literal -offset indent
# dd if=/dev/zero of=/dev/rsd0c bs=1m count=1
.Ed
.Pp
Initialize the partition table and create a filesystem on the
new RAID volume:
.Bd -literal -offset indent
# fdisk -iy sd0
# printf "a\en\en\en\en4.2BSD\enw\enq\en" | disklabel -E sd0
# newfs /dev/rsd0a
.Ed
.Pp
The RAID volume is now ready to be used as a normal disk device.
See
.Xr bioctl 8
for more information on configuration of RAID sets.
.Pp
Install
.Xr boot 8
on the RAID volume:
.Bd -literal -offset indent
# installboot sd0
.Ed
.Pp
At the
.Xr boot 8
prompt, load the /bsd kernel from the RAID volume:
.Bd -literal -offset indent
boot> boot sr0a:/bsd
.Ed
.Sh SEE ALSO
.Xr bio 4 ,
.Xr bioctl 8 ,
.Xr boot_sparc64 8 ,
.Xr disklabel 8 ,
.Xr fdisk 8 ,
.Xr installboot 8 ,
.Xr newfs 8
.Sh HISTORY
The
.Nm
driver first appeared in
.Ox 4.2 .
.Sh AUTHORS
.An Marco Peereboom .
.Sh CAVEATS
The driver relies on underlying hardware to properly fail chunks.
.Pp
The RAID 1 discipline does not initialize the mirror upon creation.
This is by design because all sectors that are read are written first.
There is no point in wasting a lot of time syncing random data.
.Pp
The RAID 5 discipline does not initialize parity upon creation, instead parity
is only updated upon write.
.Pp
Currently there is no automated mechanism to recover from failed disks.
.Pp
Certain RAID levels can protect against some data loss
due to component failure.
RAID is
.Em not
a substitute for good backup practices.
@


1.41
log
@sparc{,64} do not need softraid partitions to be defined as 4.2BSD, probably
since only one month after this was mentioned in CAVEATS.
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.40 2015/04/11 16:37:34 jsing Exp $
d18 1
a18 1
.Dd $Mdocdate: April 11 2015 $
d131 3
a133 3
# printf "a\en\en\en\enRAID\enw\enq\en\en" | disklabel -E wd1
# printf "a\en\en\en\enRAID\enw\enq\en\en" | disklabel -E wd2
# printf "a\en\en\en\enRAID\enw\enq\en\en" | disklabel -E wd3
d157 1
a157 1
# printf "a\en\en\en\en4.2BSD\enw\enq\en\en" | disklabel -E sd0
@


1.40
log
@Re-enable the RAID 5 discipline for softraid(4).

The RAID 5 implementation has been largely rewritten during the last two
hackathons in Dunedin - it now needs further testing and usage.
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.39 2015/02/16 16:38:54 naddy Exp $
d18 1
a18 1
.Dd $Mdocdate: February 16 2015 $
a204 5
.Pp
Sparc hardware needs to use fstype
.Dq 4.2BSD
instead of
.Dq RAID .
@


1.39
log
@Replace \*(Lt \*(Le \*(Gt \*(Ge with literal < <= > >= respectively,
except for instances where \*(Le and \*(Ge are clearly understood as
mathematical symbols.  Discussed with schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.38 2014/11/27 13:15:54 stsp Exp $
d18 1
a18 1
.Dd $Mdocdate: November 27 2014 $
d81 8
a88 8
.\" .It RAID 5
.\" A striping discipline with
.\" .Em floating parity
.\" across all chunks.
.\" It stripes data across chunks and provides parity to prevent data loss of
.\" a single chunk failure.
.\" Read performance is increased;
.\" write performance does incur additional overhead.
d201 3
a203 3
.\" The RAID 5 discipline do not initialize the parity upon creation.
.\" This is due to the scrub functionality not being currently implemented.
.\" .Pp
@


1.38
log
@Document that sparc64 softraid boot only works with 'a' partitions.
Add an Xr to boot_sparc64(8) which has additional important details.
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.37 2014/11/26 22:30:47 stsp Exp $
d18 1
a18 1
.Dd $Mdocdate: November 26 2014 $
d144 1
a144 1
sd0 at scsibus0 targ 0 lun 0: \*(LtOPENBSD, SR RAID 1, 001\*(Gt SCSI2
@


1.37
log
@Manual page updates for sparc64 softraid boot support.
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.36 2014/02/08 17:05:15 chris Exp $
d18 1
a18 1
.Dd $Mdocdate: February 8 2014 $
d111 2
d182 1
@


1.36
log
@installboot has grown up, reflect new simplified usage in softraid example
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.35 2014/01/18 09:11:12 jsing Exp $
d18 1
a18 1
.Dd $Mdocdate: January 18 2014 $
d110 1
a110 1
on amd64 and i386 platforms.
@


1.35
log
@Disable the RAID 5 discipline in bioctl, as the current softraid RAID 5
discipline will more than likely eat data if a drive is lost.

Discussed with krw@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.34 2014/01/18 09:01:01 jsing Exp $
d168 1
a168 1
# /usr/mdec/installboot /usr/mdec/boot /usr/mdec/biosboot sd0
@


1.34
log
@Remove the RAID 4 discipline from softraid. Anyone sensible would use RAID
5 instead of RAID 4, assuming both were functional.

Discussed with krw@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.33 2013/10/31 17:54:57 stsp Exp $
d18 1
a18 1
.Dd $Mdocdate: October 31 2013 $
d81 8
a88 8
.It RAID 5
A striping discipline with
.Em floating parity
across all chunks.
It stripes data across chunks and provides parity to prevent data loss of
a single chunk failure.
Read performance is increased;
write performance does incur additional overhead.
d198 3
a200 3
The RAID 5 discipline do not initialize the parity upon creation.
This is due to the scrub functionality not being currently implemented.
.Pp
@


1.33
log
@softraid(4) boot documentation tweaks from jsing@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.32 2013/10/28 15:15:08 stsp Exp $
d18 1
a18 1
.Dd $Mdocdate: October 28 2013 $
a80 8
.It RAID 4
A striping discipline with a
.Em fixed parity
chunk.
It stripes data across chunks and provides parity to prevent data loss of
a single chunk failure.
Read performance is increased,
though write performance is limited by the parity chunk.
d88 1
a88 1
write performance should be faster than RAID 4.
d198 1
a198 1
The RAID 4 and 5 disciplines do not initialize the parity upon creation.
@


1.32
log
@Document softraid boot process for i386/amd64.

Requested by Adam Thompson.
suggestions and ok deraadt, earlier version ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.31 2013/03/12 14:00:57 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: March 12 2013 $
d114 1
a114 1
in
d116 1
a116 1
volume meta data to allow booting from the volume.
d176 1
a176 1
# /usr/mdec/installboot /boot /usr/mdec/biosboot sd0
@


1.31
log
@document limited boot support; help/ok jsing
as reported by Lars Engblom
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.30 2012/08/14 01:08:19 dlg Exp $
d18 1
a18 1
.Dd $Mdocdate: August 14 2012 $
d110 15
d171 14
d190 1
a209 4
.Pp
.Nm
has boot support only for the CRYPTO and RAID 1 disciplines,
and only on amd64 and i386 platforms.
@


1.30
log
@kernel configs dont need "scsibus* at foo?" anymore.

"guess you get more commits" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.29 2012/01/02 08:24:44 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: January 2 2012 $
d181 3
a183 1
There is no boot support at this time for any disciplines.
@


1.29
log
@tweak previous; ok jsing
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.28 2011/12/31 17:06:10 jsing Exp $
d18 1
a18 1
.Dd $Mdocdate: December 31 2011 $
a25 1
.Cd "scsibus*  at softraid?"
@


1.28
log
@Implement a concatenating discipline for softraid.

Many thanks to Marco Peereboom for his assistance with testing and
debugging. Thanks also to Josh Grosse and Chris Jackman for testing.
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.26 2009/10/26 04:00:22 marco Exp $
d18 1
a18 1
.Dd $Mdocdate: October 26 2009 $
d108 1
a108 1
It writes data to each chunk in serial to provide increased capacity.
@


1.27
log
@yes "initial letters in Nd should not be uppercased unneccessarily"
@
text
@d104 6
@


1.26
log
@Remove we cant rebuild in raid 1 from caveats.
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.25 2009/10/11 14:29:49 sobrado Exp $
d18 1
a18 1
.Dd $Mdocdate: October 11 2009 $
d23 1
a23 1
.Nd Software RAID
@


1.25
log
@emphasize the parity classes supported by current softraid disciplines.

tweaked by jmc@@

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.24 2009/07/20 04:12:25 cnst Exp $
d18 1
a18 1
.Dd $Mdocdate: July 20 2009 $
a165 2
Currently RAID 1 support does not have the ability to recover a
failed chunk.
@


1.24
log
@enlist mpi(4) and softraid(4) in bio(4) && Xr bio(4);  ok marco
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.23 2009/06/23 18:49:10 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: June 23 2009 $
d83 3
a85 1
A striping discipline with a fixed parity chunk.
d91 3
a93 1
A striping discipline with floating parity across all chunks.
@


1.23
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.22 2009/06/17 23:11:38 marco Exp $
d18 1
a18 1
.Dd $Mdocdate: June 17 2009 $
d148 1
@


1.22
log
@Document raid 4 & 5
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.21 2009/05/01 19:00:40 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: May 1 2009 $
d83 2
a84 4
A
.Em striping
discipline with a fixed parity chunk.
It stripes data accross chunks and provides parity to prevent data loss of
d86 2
a87 2
Read performance is increased however write performance is limited by the
parity chunk.
d89 2
a90 4
A
.Em striping
discipline with floating parity accross all chunks.
It stripes data accross chunks and provides parity to prevent data loss of
d92 2
a93 2
Read performance is increased however write performance should be faster than
RAID 4.
d168 1
a168 1
The RAID 4 & 5 disciplines do not initialize the parity upon creation.
@


1.21
log
@be precise about which archs need to use 4.2bsd (sparc), and move that
note to caveats;

requested by bsd
confirmed by marco; ok todd
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.20 2009/04/29 07:02:02 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: April 29 2009 $
d82 16
d171 3
@


1.20
log
@clarify fstype `raid' and some other small bits whilst here;
prodded by a "conversation" on misc from Sebastian Rother

ok marco
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.19 2008/09/05 06:58:42 fkr Exp $
d18 1
a18 1
.Dd $Mdocdate: September 5 2008 $
d60 1
a60 7
can be used to alter the fstype,
though some platforms,
such as SUN,
are not capable of using this
and should use fstype
.Dq 4.2BSD
instead.
d159 5
@


1.19
log
@get rid of the unneeded 'etc.' at the end of the list.
also remove bogus '\&' escape.
help and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.18 2008/06/14 00:16:38 hshoexer Exp $
d18 1
a18 1
.Dd $Mdocdate: June 14 2008 $
d51 17
d76 1
a76 1
It segments data over a number of disks to increase performance.
d82 1
a82 1
It copies data across more than one disk to provide for data loss.
d87 1
a87 1
supports the use of more than two disks in a RAID 1 setup.
d92 1
a92 1
It encrypts data on a single disk to provide for data confidentiality.
a94 8
.Pp
A
.Em volume
is a virtual disk device that is made up of a collection of chunks.
.Pp
A
.Em chunk
is a partition or storage area of the type RAID.
d120 1
a120 1
sd0 at scsibus0 targ 0 lun 0: <OPENBSD, SR RAID 1, 001> SCSI2
a137 1
.Pp
a140 9
.Pp
All component partitions must be of type
.Dv RAID .
Some platforms, such as SUN, are not capable of using the
.Dv RAID
partition type.
The
.Dv 4.2BSD
partition type should be used on such platforms.
a141 2
.Xr sd 4 ,
.Xr wd 4 ,
d143 2
a144 4
.Xr config 8 ,
.Xr fsck 8 ,
.Xr MAKEDEV 8 ,
.Xr mount 8 ,
@


1.18
log
@Update bioctl(8) and softraid(4) to recent changes and enable softraid
crypto.  It's still considered experimental!

ok djm marco
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.17 2008/01/29 10:26:56 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: January 27 2008 $
d45 2
a46 2
This includes I/O path, bring-up, failure recovery, statistical
information gathering etc.\&
@


1.17
log
@use printf instead of echo, which is more portable;
issue noted by Matthew Szudzik

ok marco
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.16 2008/01/27 00:38:16 jmc Exp $
d71 6
@


1.16
log
@minor tweak to CAVEATS;
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.15 2008/01/26 22:55:40 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: January 26 2008 $
d92 3
a94 3
# echo "a\en\en\en\enRAID\enw\enq\en" | disklabel -E wd1
# echo "a\en\en\en\enRAID\enw\enq\en" | disklabel -E wd2
# echo "a\en\en\en\enRAID\enw\enq\en" | disklabel -E wd3
d118 1
a118 1
# echo "a\en\en\en\en4.2BSD\enw\enq\en" | disklabel -E sd0
@


1.15
log
@- shuffle the page a little, to make it read better
- prefer I/O to IO
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.14 2008/01/26 16:39:27 jmc Exp $
d154 1
a154 1
Currently the RAID 1 support does not have the ability to recover a
@


1.14
log
@document the supported disciplines in a little more detail;
from marco and myself
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.13 2008/01/26 08:58:54 jmc Exp $
d30 1
a30 1
device emulates an HBA (Host Bus Adapter) that provides RAID and other IO
d34 1
a34 1
device provides a scaffold to implement more complex IO transformation
d40 11
a71 10
.Pp
A
.Em discipline
is a collection of functions that provides specific IO
functionality.
This includes IO path, bring-up, failure recovery, statistical
information gathering etc.\&
Essentially a discipline is a lower
level driver that provides the IO transformation for the softraid
device.
@


1.13
log
@- use command prompts for commands
- a few other minor fixes

ok marco
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.12 2008/01/24 19:33:16 marco Exp $
d18 1
a18 1
.Dd $Mdocdate: January 24 2008 $
d42 19
a60 1
supports a striping (RAID 0) and mirroring (RAID 1) discipline.
@


1.12
log
@Add RAID 0 and clean up some of the text.
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.11 2007/06/02 15:33:21 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: June 2 2007 $
d42 1
a42 1
supports a mirroring (RAID 1) and a striping (RAID 0) discipline.
d66 3
a68 3
fdisk -iy wd1
fdisk -iy wd2
fdisk -iy wd3
d73 3
a75 3
echo "a\en\en\en\enRAID\enw\enq\en" | disklabel -E wd1
echo "a\en\en\en\enRAID\enw\enq\en" | disklabel -E wd2
echo "a\en\en\en\enRAID\enw\enq\en" | disklabel -E wd3
d80 1
a80 1
bioctl -c 1 -l /dev/wd1a,/dev/wd2a,/dev/wd3a softraid0
d83 1
a83 1
The console will give away what device was added to the system:
d92 1
a92 1
dd if=/dev/zero of=/dev/rsd0c bs=1m count=1
d98 3
a100 3
fdisk -iy sd0
echo "a\en\en\en\en4.2BSD\enw\enq\en" | disklabel -E sd0
newfs /dev/rsd0a
@


1.11
log
@softraid already enabled in GENERIC; ok marco
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.10 2007/05/31 19:19:52 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: May 31 2007 $
d30 1
a30 1
device emulates an HBA (host bus adapter) that provides RAID and other IO
d32 7
a38 2
The idea is to tie chunks together into an IO discipline.
A discipline can for example provide a volume that mirrors chunks (RAID 1).
d42 1
a42 1
only supports a mirroring discipline.
d66 3
a68 3
echo y | fdisk -i wd1
echo y | fdisk -i wd2
echo y | fdisk -i wd3
d73 3
a75 3
echo "d a\ena\en\en\en\enRAID\enw\enq\en" | disklabel -E wd1
echo "d a\ena\en\en\en\enRAID\enw\enq\en" | disklabel -E wd2
echo "d a\ena\en\en\en\enRAID\enw\enq\en" | disklabel -E wd3
d98 2
a99 2
echo y | fdisk -i sd0
echo "d a\ena\en\en\en\en4.2BSD\enw\enq\en" | disklabel -E sd0
d139 6
@


1.10
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.9 2007/05/31 04:26:29 grunk Exp $
d18 1
a18 1
.Dd $Mdocdate$
a56 12
The first step to using the
.Nm
driver is to ensure that it is suitably configured in the kernel.
This is done by uncommenting the softraid device in
.Pa sys/conf/GENERIC
and recompiling it.
Uncomment the following lines:
.Bd -literal -offset indent
#softraid0       at root         # Software RAID
#scsibus*        at softraid?
.Ed
.Pp
@


1.9
log
@explain what ``HBA'' means, ok jmc@@ tedu@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.8 2007/05/31 02:49:05 grunk Exp $
d18 1
a18 1
.Dd March 19, 2007
@


1.8
log
@- typo
- apply correct tags where necessary
- AUTHOR is a separate section

ok jmc@@ marco@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.7 2007/04/18 13:38:33 jmc Exp $
d30 2
a31 1
device emulates an HBA that provides RAID and other IO related services.
@


1.7
log
@make .Sh TERMINOLOGY part of the main text body; ok marco
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.6 2007/04/18 06:44:08 jmc Exp $
d59 4
a62 3
This is done by uncommenting the softraid device in sys/conf/GENERIC and
recompiling it.
Uncomment the folowing lines:
d135 1
a135 3
driver
is an original work by Marco Peereboom.
It first appeared in
d137 2
@


1.6
log
@various tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.5 2007/04/17 22:50:59 marco Exp $
d37 4
a40 4
.Sh TERMINOLOGY
Discipline:
.Bd -literal -offset indent
A discipline is a collection of functions that provides specific IO
a46 1
.Ed
d48 3
a50 4
Volume:
.Bd -literal -offset indent
A virtual disk device that is made up of a collection of chunks.
.Ed
d52 3
a54 4
Chunk:
.Bd -literal -offset indent
A partition or storage area of the type RAID.
.Ed
@


1.5
log
@2 typos
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.4 2007/04/17 22:47:53 marco Exp $
d43 2
a44 1
information gathering etc.  Essentially a discipline is a lower
a58 1
.Pp
d81 3
a83 3
echo "d a\\na\\n\\n\\n\\nRAID\\nw\\nq\\n" | disklabel -E wd1
echo "d a\\na\\n\\n\\n\\nRAID\\nw\\nq\\n" | disklabel -E wd2
echo "d a\\na\\n\\n\\n\\nRAID\\nw\\nq\\n" | disklabel -E wd3
d107 1
a107 1
echo "d a\\na\\n\\n\\n\\n4.2BSD\\nw\\nq\\n" | disklabel -E sd0
d137 1
a137 1
driver in
a141 1
.Pp
d148 2
a149 1
Certain RAID levels can protect against some data loss due to component failure.
@


1.4
log
@Add much more language and provide a real life example on how to use this.
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.3 2007/03/26 00:31:50 tedu Exp $
d70 1
a70 1
An example to create a 3 disk RAID 1 from scratch is as follows:
d79 1
a79 1
Now create RAID partitons on all disks:
@


1.3
log
@loss of any raid 0 component is bad. ok dlg
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.2 2007/03/20 06:08:03 jmc Exp $
d3 2
a4 1
.\" Copyright (c) 2007 Todd T. Fries <todd@@OpenBSD.org>
d30 3
a32 2
driver provides RAID 1 capabilities to
.Ox .
d34 18
a51 10
It provides a single RAID level:
.Bl -tag -width indent -offset indent
.\" .It RAID 0
.\" provides simple data striping across the components.
.It RAID 1
provides mirroring.
.\" .It RAID 5
.\" provides data striping across the components, with parity
.\" distributed across all the components.
.El
d53 5
a57 3
See
.Xr bioctl 8
for more information on configuration of RAID sets.
d62 30
a91 2
This is done by adding the following lines
to the kernel configuration file:
d93 3
a95 2
softraid0       at root         # Software RAID
scsibus*        at softraid?
d98 19
a137 1
.Ox
d142 8
a149 5
RAID level 1 can protect against some
data loss due to component failure.
However the loss of any component of a RAID 0 system
will result in the entire filesystems on that RAID device
being lost.
a152 2
.Sh BUGS
The driver is currently unable to handle drive failures.
@


1.2
log
@new sentence, new line;
@
text
@d1 1
a1 1
.\"	$OpenBSD: softraid.4,v 1.1 2007/03/20 03:40:38 todd Exp $
d85 1
a85 1
However the loss of all components of a RAID 0 system
@


1.1
log
@document softraid and bioctl creation of softraid
ok marco@@, help from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d61 2
a62 1
partition type.  The
@

