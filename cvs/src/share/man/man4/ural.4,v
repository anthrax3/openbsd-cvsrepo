head	1.22;
access;
symbols
	OPENBSD_6_0:1.22.0.4
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.10
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.8
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.6
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.4
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.15.0.2
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.13.0.8
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.6
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.2
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.6
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.2
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4;
locks; strict;
comment	@.\" @;


1.22
date	2016.06.16.17.25.32;	author martijn;	state Exp;
branches;
next	1.21;
commitid	Qkp7t5FCC2JdDGgX;

1.21
date	2016.03.07.13.47.53;	author stsp;	state Exp;
branches;
next	1.20;
commitid	A6PwvvX57lgozJhN;

1.20
date	2014.02.15.20.28.19;	author tedu;	state Exp;
branches;
next	1.19;

1.19
date	2014.02.15.01.41.17;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2013.08.20.13.46.54;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2013.07.16.16.05.49;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2013.06.02.20.23.34;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2013.02.14.07.40.42;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2012.08.12.17.01.35;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2010.11.01.17.59.09;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2010.04.29.09.20.17;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2009.09.02.07.00.24;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2009.02.16.08.15.22;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2008.08.29.09.44.16;	author damien;	state Exp;
branches;
next	1.8;

1.8
date	2008.08.29.09.03.48;	author damien;	state Exp;
branches;
next	1.7;

1.7
date	2008.07.29.16.44.19;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2008.07.28.20.10.28;	author damien;	state Exp;
branches;
next	1.5;

1.5
date	2008.04.17.14.01.22;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2007.12.10.10.32.54;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2007.11.27.20.35.21;	author damien;	state Exp;
branches;
next	1.2;

1.2
date	2007.11.17.12.25.49;	author damien;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.17.12.20.50;	author damien;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Remove links to www.ralinktech.com, which isn't in use anymore.
Add an extra reference to MediaTek who now owns Ralink as suggested by sthen@@.

OK jmc@@ and stsp@@
@
text
@.\" $OpenBSD: ural.4,v 1.21 2016/03/07 13:47:53 stsp Exp $
.\"
.\" Copyright (c) 2005-2007
.\"	Damien Bergamini <damien.bergamini@@free.fr>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: March 7 2016 $
.Dt URAL 4
.Os
.Sh NAME
.Nm ural
.Nd Ralink Technology/MediaTek USB IEEE 802.11b/g wireless network device
.Sh SYNOPSIS
.Cd "ural* at uhub? port ?"
.Sh DESCRIPTION
The
.Nm
driver supports USB 2.0 wireless adapters based on the Ralink RT2500USB
chipset.
.Pp
The RT2500USB chipset is the first generation of 802.11b/g adapters from Ralink.
It consists of two integrated chips, an RT2570 MAC/BBP and an RT2526 radio
transceiver.
.Pp
These are the modes the
.Nm
driver can operate in:
.Bl -tag -width "IBSS-masterXX"
.It BSS mode
Also known as
.Em infrastructure
mode, this is used when associating with an access point, through
which all traffic passes.
This mode is the default.
.It IBSS mode
Also known as
.Em IEEE ad-hoc
mode or
.Em peer-to-peer
mode.
This is the standardized method of operating without an access point.
Stations associate with a service set.
However, actual connections between stations are peer-to-peer.
.It Host AP
In this mode the driver acts as an access point (base station)
for other cards.
.It monitor mode
In this mode the driver is able to receive packets without
associating with an access point.
This disables the internal receive filter and enables the card to
capture packets from networks which it wouldn't normally have access to,
or to scan for access points.
.El
.Pp
The
.Nm
driver can be configured to use
Wired Equivalent Privacy (WEP) or
Wi-Fi Protected Access (WPA-PSK and WPA2-PSK).
WPA is the current encryption standard for wireless networks.
It is strongly recommended that WEP
not be used as the sole mechanism
to secure wireless communication,
due to serious weaknesses in it.
The
.Nm
driver relies on the software 802.11 stack for both encryption and decryption
of data frames.
.Pp
The transmit speed is user-selectable or can be adapted automatically by the
driver depending on the number of hardware transmission retries.
.Pp
The
.Nm
driver can be configured at runtime with
.Xr ifconfig 8
or on boot with
.Xr hostname.if 5 .
.Sh HARDWARE
The following adapters should work:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It AMIT WL532U
.It ASUS WL-167g v1
.It Belkin F5D7050 v2000
.It Buffalo WLI-U2-KG54
.It Buffalo WLI-U2-KG54-AI
.It Buffalo WLI-U2-KG54-YB
.It CNet CWD-854
.It Compex WLU54G 2A1100
.It Conceptronic C54RU
.It D-Link DWL-G122 (b1)
.It Dynalink WLG25USB
.It E-Tech WGUS02
.It Eminent EM3035
.It Gigabyte GN-WBKG
.It Hercules HWGUSB2-54
.It KCORP LifeStyle KLS-685
.It Linksys HU200-TS
.It Linksys WUSB54G v4
.It Linksys WUSB54GP v4
.It MSI MS-6861
.It MSI MS-6865
.It MSI MS-6869
.It Nintendo Wi-Fi USB Connector
.It Nova Tech NV-902W
.It OvisLink Evo-W54USB
.It SerComm UB801R
.It SparkLAN WL-685R
.It Sphairon UB801R
.It Surecom EP-9001-g rev 3A
.It Sweex LC100060
.It Tonze UW-6200C
.It Zaapa ZNWUSB-54
.It Zinwell ZPlus-G250
.It Zinwell ZWX-G261
.It Zonet ZEW2500P
.El
.Sh EXAMPLES
The following example scans for available networks:
.Pp
.Dl # ifconfig ural0 scan
.Pp
The following
.Xr hostname.if 5
example configures ural0 to join network
.Dq mynwid ,
using WPA key
.Dq mywpakey ,
obtaining an IP address using DHCP:
.Bd -literal -offset indent
nwid mynwid
wpakey mywpakey
dhcp
.Ed
.Pp
The following
.Xr hostname.if 5
example creates a host-based access point on boot:
.Bd -literal -offset indent
mediaopt hostap
nwid mynwid
wpakey mywpakey
inet 192.168.1.1 255.255.255.0
.Ed
.Sh DIAGNOSTICS
.Bl -diag
.It "ural0: device timeout"
A frame dispatched to the hardware for transmission did not complete in time.
The driver will reset the hardware.
This should not happen.
.El
.Sh SEE ALSO
.Xr arp 4 ,
.Xr ifmedia 4 ,
.Xr intro 4 ,
.Xr netintro 4 ,
.Xr usb 4 ,
.Xr hostname.if 5 ,
.Xr hostapd 8 ,
.Xr ifconfig 8
.Sh HISTORY
The
.Nm
driver first appeared in
.Ox 3.7 .
.Sh AUTHORS
The
.Nm
driver was written by
.An Damien Bergamini Aq Mt damien.bergamini@@free.fr .
.Sh CAVEATS
The
.Nm
driver supports automatic control of the transmit speed in BSS mode only.
Therefore the use of an
.Nm
adapter in Host AP mode is discouraged.
.Pp
Host AP mode doesn't support power saving.
Clients attempting to use power saving mode may experience significant
packet loss (disabling power saving on the client will fix this).
@


1.21
log
@In man page hostname.if examples showing how to configure hostap, put lines
configuring addresses last. Avoids problems where the interface is put up
before wireless settings are properly configured.
Prompted by questions from Matthew ("chohag") on bugs@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.20 2014/02/15 20:28:19 tedu Exp $
d18 1
a18 1
.Dd $Mdocdate: February 15 2014 $
d23 1
a23 1
.Nd Ralink Technology USB IEEE 802.11b/g wireless network device
a172 3
.Pp
Ralink Technology:
.Lk http://www.ralinktech.com/
@


1.20
log
@jmc notes that the previous commit made for some funny wording.
WPA is the current standard, but not the only one. ok krw
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.19 2014/02/15 01:41:17 tedu Exp $
a151 1
inet 192.168.1.1 255.255.255.0
d155 1
@


1.19
log
@WPA is a real standard, not only a de facto one.
(these man pages do like their copy and paste.)
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.18 2013/08/20 13:46:54 millert Exp $
d18 1
a18 1
.Dd $Mdocdate: August 20 2013 $
d71 1
a71 1
WPA is the encryption standard for wireless networks.
@


1.18
log
@Update Damien Bergamini's email address, as requested.
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.17 2013/07/16 16:05:49 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 16 2013 $
d71 1
a71 1
WPA is the de facto encryption standard for wireless networks.
@


1.17
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.16 2013/06/02 20:23:34 tedu Exp $
d18 1
a18 1
.Dd $Mdocdate: June 2 2013 $
d185 1
a185 1
.An Damien Bergamini Aq Mt damien@@openbsd.org .
@


1.16
log
@change format strings in error messages to reasonable values more likely
to be understood by people who don't program in C.
ok everyone
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.15 2013/02/14 07:40:42 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: February 14 2013 $
d185 1
a185 1
.An Damien Bergamini Aq damien@@openbsd.org .
@


1.15
log
@rework EXAMPLES somewhat, and remove the obsolete NONE NONE NONE dhcp
stuff; ok krw
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.14 2012/08/12 17:01:35 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 12 2012 $
d159 1
a159 1
.It "ural%d: device timeout"
@


1.14
log
@Use .Lk for HTTP hyperlinks, not .Pa.
Most of the patch from Arto Jonsson <ajonsson at kapsi dot fi>.
jmc@@ agrees in principle that .Lk is the right macro to use.

While here, update a few broken links,
and add missing markup at a few places.
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.13 2010/11/01 17:59:09 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: November 1 2010 $
d131 4
d137 5
a141 4
example configures ural0 to join whatever network is available on boot,
using WEP key
.Dq 0x1deadbeef1 ,
channel 11, obtaining an IP address using DHCP:
d143 3
a145 1
dhcp NONE NONE NONE nwkey 0x1deadbeef1 chan 11
d152 4
a155 16
inet 192.168.1.1 255.255.255.0 NONE media autoselect \e
	mediaopt hostap nwid my_net chan 11
.Ed
.Pp
Configure ural0 to join network
.Dq my_net
using WPA with passphrase
.Dq my_passphrase :
.Bd -literal -offset indent
# ifconfig ural0 nwid my_net wpakey my_passphrase
.Ed
.Pp
Join an existing BSS network,
.Dq my_net :
.Bd -literal -offset indent
# ifconfig ural0 192.168.1.1 netmask 0xffffff00 nwid my_net
@


1.13
log
@- switch from wpapsk to wpakey
- remove the "return device to default settings" example, which theo says
is rubbish

ok deraadt
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.12 2010/04/29 09:20:17 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: April 29 2010 $
d180 1
a180 1
.Pa http://www.ralinktech.com/
@


1.12
log
@crikey! all our wireless pages had the Os macro out of place;
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.11 2009/09/02 07:00:24 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: September 2 2009 $
d151 1
a151 1
using WPA-PSK with passphrase
d154 1
a154 8
# ifconfig ural0 nwid my_net wpa wpapsk \e
	`wpa-psk my_net my_passphrase`
.Ed
.Pp
Return ural0 to its default settings:
.Bd -literal -offset indent
# ifconfig ural0 -bssid -chan media autoselect \e
	nwid "" -nwkey -wpa -wpapsk
d177 1
a177 2
.Xr ifconfig 8 ,
.Xr wpa-psk 8
@


1.11
log
@the `W' in WEP apparently stands for wired, not wireless;
from Scott Radvan
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.10 2009/02/16 08:15:22 jmc Exp $
d18 2
a19 1
.Dd $Mdocdate: February 16 2009 $
a20 1
.Dt URAL 4
@


1.10
log
@use `` instead of $(), since the former works for both csh and ksh; as
pointed out by claudio
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.9 2008/08/29 09:44:16 damien Exp $
d18 1
a18 1
.Dd $Mdocdate: August 29 2008 $
d69 1
a69 1
Wireless Equivalent Privacy (WEP) or
@


1.9
log
@new sentence, new line.
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.8 2008/08/29 09:03:48 damien Exp $
d155 1
a155 1
	$(wpa-psk my_net my_passphrase)
@


1.8
log
@add the following paragraph from the wi(4) manual page to the
CAVEATS section of all drivers claiming HostAP support:

"Host AP mode doesn't support power saving.  Clients attempting to
 use power saving mode may experience significant packet loss
 (disabling power saving on the client will fix this)."

unfortunately (or not?), more and more clients are using PS mode by
default and will not work properly with an AP running OpenBSD.

proper handling of STAs in PS mode will come in net80211 but is is
very unlikely that all drivers will be ported.
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.7 2008/07/29 16:44:19 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: July 29 2008 $
d207 3
a209 3
Host AP mode doesn't support power saving.  Clients attempting to
use power saving mode may experience significant packet loss (disabling
power saving on the client will fix this).
@


1.7
log
@- beef up the text on wep/wpa
- simplify wpa example

help/ok damien
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.6 2008/07/28 20:10:28 damien Exp $
d18 1
a18 1
.Dd $Mdocdate: July 28 2008 $
d206 4
@


1.6
log
@document WPA-PSK support.

"i would really appreciate just something going in" jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.5 2008/04/17 14:01:22 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: April 17 2008 $
d68 8
a75 1
driver can be configured to use the WEP, WPA-PSK and WPA2-PSK protocols.
d154 2
a155 2
# _psk=$(wpa-psk my_net my_passphrase)
# ifconfig ural0 nwid my_net wpa wpapsk ${_psk}
@


1.5
log
@remove the CONFIGURATION section from the wireless pages:
the addition of the wpa options have shown just how unwieldy it had
become, it's already in ifconfig(8) anyway, and "ifconfig -m" will
get the relevant ones.

ok dlg jsg
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.4 2007/12/10 10:32:54 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: December 10 2007 $
d66 4
d71 2
a72 9
supports software WEP.
Wired Equivalent Privacy (WEP) is the de facto encryption standard
for wireless networks.
It can be typically configured in one of three modes:
no encryption; 40-bit encryption; or 104-bit encryption.
Unfortunately, due to serious weaknesses in WEP protocol
it is strongly recommended that it not be used as the
sole mechanism to secure wireless communication.
WEP is not enabled by default.
d142 4
a145 2
Configure ural0 for WEP, using hex key
.Dq 0x1deadbeef1 :
d147 2
a148 1
# ifconfig ural0 nwkey 0x1deadbeef1
d154 1
a154 1
	nwid "" -nwkey
d177 2
a178 1
.Xr ifconfig 8
@


1.4
log
@document "nwflag" for wireless devices which can operate in
hostap mode;

ok damien
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.3 2007/11/27 20:35:21 damien Exp $
d18 1
a18 1
.Dd $Mdocdate: November 27 2007 $
d79 1
a79 1
.Sh CONFIGURATION
d85 1
a85 155
.Xr hostname.if 5
using the following parameters:
.Bl -tag -width Ds
.It Cm bssid Ar bssid
Set the desired BSSID.
.It Fl bssid
Unset the desired BSSID.
The interface will automatically select a BSSID in this mode, which is
the default.
.It Cm chan Ar n
Set the channel (radio frequency) to be used by the driver based on
the given channel ID
.Ar n .
.It Fl chan
Unset the desired channel to be used by the driver.
The driver will automatically select a channel in this mode, which is
the default.
.It Cm media Ar media
The
.Nm
driver supports the following
.Ar media
types:
.Pp
.Bl -tag -width autoselect -compact
.It Cm autoselect
Enable autoselection of the media type and options.
.It Cm DS1
Set 802.11b DS 1Mbps operation.
.It Cm DS2
Set 802.11b DS 2Mbps operation.
.It Cm DS5
Set 802.11b DS 5.5Mbps operation.
.It Cm DS11
Set 802.11b DS 11Mbps operation.
.It Cm OFDM6
Set 802.11g OFDM 6Mbps operation.
.It Cm OFDM9
Set 802.11g OFDM 9Mbps operation.
.It Cm OFDM12
Set 802.11g OFDM 12Mbps operation.
.It Cm OFDM18
Set 802.11g OFDM 18Mbps operation.
.It Cm OFDM24
Set 802.11g OFDM 24Mbps operation.
.It Cm OFDM36
Set 802.11g OFDM 36Mbps operation.
.It Cm OFDM48
Set 802.11g OFDM 48Mbps operation.
.It Cm OFDM54
Set 802.11g OFDM 54Mbps operation.
.El
.It Cm mediaopt Ar opts
The
.Nm
driver supports the following media options:
.Pp
.Bl -tag -width monitor -compact
.It Cm hostap
Select Host AP operation.
.It Cm ibss
Select IBSS operation.
.It Cm monitor
Select monitor mode.
.El
.It Fl mediaopt Ar opts
Disable the specified media options on the driver and return it to the
default mode of operation (BSS).
.It Cm mode Ar mode
The
.Nm
driver supports the following modes:
.Pp
.Bl -tag -width 11b -compact
.It Cm 11b
Force 802.11b operation.
.It Cm 11g
Force 802.11g operation.
.El
.It Cm nwflag Ar flag
Set a specified flag for the wireless network interface.
The flag name can be either
.Ql hidenwid
or
.Ql nobridge .
The
.Ql hidenwid
flag will hide the network ID (ESSID) in beacon frames when operating
in Host AP mode.
It will also prevent responses to probe requests with an unspecified
network ID.
The
.Ql nobridge
flag will disable the direct bridging of frames between associated
nodes when operating in Host AP mode.
Setting this flag will block and filter direct inter-station
communications.
.Pp
Note that the
.Ql hidenwid
and
.Ql nobridge
options do not provide any security.
The hidden network ID will be sent in clear text by associating
stations and can be easily discovered with tools like
.Xr tcpdump 8
and
.Xr hostapd 8 .
.It Fl nwflag Ar flag
Remove a specified flag for the wireless network interface.
.It Cm nwid Ar id
Set the network ID.
The
.Ar id
can either be any text string up to 32 characters in length,
or a series of hexadecimal digits up to 64 digits.
An empty
.Ar id
string allows the interface to connect to any available access points.
By default the
.Nm
driver uses an empty string.
Note that network ID is synonymous with Extended Service Set ID (ESSID).
.It Fl nwid
Set the network ID to the empty string to allow the interface to connect
to any available access point.
.It Cm nwkey Ar key
Enable WEP encryption using the specified
.Ar key .
The
.Ar key
can either be a string, a series of hexadecimal digits (preceded by
.Sq 0x ) ,
or a set of keys of the form
.Dq n:k1,k2,k3,k4 ,
where
.Sq n
specifies which of the keys will be used for transmitted packets,
and the four keys,
.Dq k1
through
.Dq k4 ,
are configured as WEP keys.
If a set of keys is specified, a comma
.Pq Sq \&,
within the key must be escaped with a backslash.
Note that if multiple keys are used, their order must be the same within
the network.
.Nm
is capable of using both 40-bit (5 characters or 10 hexadecimal digits)
or 104-bit (13 characters or 26 hexadecimal digits) keys.
.It Fl nwkey
Disable WEP encryption.
This is the default mode of operation.
.El
@


1.3
log
@there are no 802.11a ural devices.
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.2 2007/11/17 12:25:49 damien Exp $
d18 1
a18 1
.Dd $Mdocdate: November 17 2007 $
d164 31
@


1.2
log
@sync device list formatting with rum(4) (one device per line).
@
text
@d1 1
a1 1
.\" $OpenBSD: ural.4,v 1.1 2007/11/17 12:20:50 damien Exp $
d23 1
a23 1
.Nd Ralink Technology USB IEEE 802.11a/b/g wireless network device
d121 1
a121 1
Set 802.11a/g OFDM 6Mbps operation.
d123 1
a123 1
Set 802.11a/g OFDM 9Mbps operation.
d125 1
a125 1
Set 802.11a/g OFDM 12Mbps operation.
d127 1
a127 1
Set 802.11a/g OFDM 18Mbps operation.
d129 1
a129 1
Set 802.11a/g OFDM 24Mbps operation.
d131 1
a131 1
Set 802.11a/g OFDM 36Mbps operation.
d133 1
a133 1
Set 802.11a/g OFDM 48Mbps operation.
d135 1
a135 1
Set 802.11a/g OFDM 54Mbps operation.
a158 2
.It Cm 11a
Force 802.11a operation.
@


1.1
log
@separate ural(4) man page from ral(4) man page.
@
text
@d1 1
a1 1
.\" $OpenBSD: ral.4,v 1.73 2007/11/17 12:01:46 damien Exp $
d18 1
a18 1
.Dd $Mdocdate$
d213 38
a250 37
.Bd -filled
AMIT WL532U.
ASUS WL-167g v1.
Belkin F5D7050 v2000.
Buffalo WLI-U2-KG54.
Buffalo WLI-U2-KG54-AI.
Buffalo WLI-U2-KG54-YB.
CNet CWD-854.
Compex WLU54G 2A1100.
Conceptronic C54RU.
D-Link DWL-G122 (b1).
Dynalink WLG25USB.
E-Tech WGUS02.
Eminent EM3035.
Gigabyte GN-WBKG.
Hercules HWGUSB2-54.
KCORP LifeStyle KLS-685.
Linksys HU200-TS.
Linksys WUSB54G v4.
Linksys WUSB54GP v4.
MSI MS-6861.
MSI MS-6865.
MSI MS-6869.
Nintendo Wi-Fi USB Connector.
Nova Tech NV-902W.
OvisLink Evo-W54USB.
SerComm UB801R.
SparkLAN WL-685R.
Sphairon UB801R.
Surecom EP-9001-g rev 3A.
Sweex LC100060.
Tonze UW-6200C.
Zaapa ZNWUSB-54.
Zinwell ZPlus-G250.
Zinwell ZWX-G261.
Zonet ZEW2500P.
.Ed
@

