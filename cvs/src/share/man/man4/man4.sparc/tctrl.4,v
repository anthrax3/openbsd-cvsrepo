head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.10
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.8
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.26
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.24
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.22
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.20
	OPENBSD_5_0:1.9.0.18
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.16
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.14
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.10
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.12
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.8
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.6
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.1.0.16
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.14
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.12
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.10
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.8
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.6
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@.\" @;


1.12
date	2016.02.27.20.57.32;	author natano;	state Exp;
branches;
next	1.11;
commitid	X5P6kChkxtz0ZRyu;

1.11
date	2015.11.01.21.26.48;	author jmc;	state Exp;
branches;
next	1.10;
commitid	WWHUg7NSwgnfw8Dy;

1.10
date	2014.01.21.03.15.46;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.31.19.19.56;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2005.07.22.19.36.42;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.29.16.26.43;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.23.09.34.53;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.18.17.40.31;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.17.21.21.31;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.02.18.51.34;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.05.13.51.58;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	99.09.09.03.03.22;	author jason;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Add documentation for the APM_IOC_HIBERNATE ioctl.

tweaks and ok jmc@@
@
text
@.\"     $OpenBSD: tctrl.4,v 1.11 2015/11/01 21:26:48 jmc Exp $
.\"
.\" Copyright (c) 1999 Jason L. Wright (jason@@thought.net)
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
.\" ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\" APM description:
.\"
.\"	Copyright (c) 1998 Marco S. Hyman
.\"
.\"	Permission to copy all or part of this material for any purpose is
.\"	granted provided that the above copyright notice and this paragraph
.\"	are duplicated in all copies.  THIS SOFTWARE IS PROVIDED ``AS IS''
.\"	AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, WITHOUT
.\"	LIMITATION, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
.\"	FOR A PARTICULAR PURPOSE.
.Dd $Mdocdate: November 1 2015 $
.Dt TCTRL 4 sparc
.Os
.Sh NAME
.Nm tctrl
.Nd Tadpole Microcontroller Interface
.Sh SYNOPSIS
.Cd "tctrl0 at obio0"
.Sh DESCRIPTION
The
.Nm
driver provides control over many functions on the
.Tn Tadpole SPARCbook
3 series laptops, via their TS102 chip.
.Pp
The microcontroller is used to power the TFT display down when the
laptop lid is closed and when the screen is blanked by the
.Xr pninek 4
or
.Xr pnozz 4
driver.
The
.Nm tctrl
is also used to power the laptop off when the
.Xr reboot 2
system call is used with the
.Ar RB_POWERDOWN
flag is set.
.Pp
The PCMCIA part of the controller is managed by the
.Xr tslot 4
driver.
.Sh POWER MANAGEMENT INTERFACE
The
.Nm
driver provides an interface which simulates the Advanced Power Management
.Pq Tn APM
BIOS functions encountered on some x86 hardware.
The BIOS functions are translated into the appropriate microcontroller requests.
Currently only battery level, AC connection, and charging status are available
from the
.Nm
device.
Suspend/resume and other power events are not yet supported.
.Pp
The
.Nm
driver implements the following
.Xr ioctl 2
calls.
They are defined in
.In machine/apmvar.h .
.Bl -tag -width Ds
.\" .It Dv APM_IOC_STANDBY
.\" .Em NOT YET SUPPORTED on sparc
.\" .Pq Li "no parameters"
.\" Request
.\" .Dq standby
.\" mode.
.\" .It Dv APM_IOC_SUSPEND
.\" .Em NOT YET SUPPORTED on sparc
.\" .Pq Li "no parameters"
.\" Request
.\" .Dq suspend
.\" mode.
.\" .It Dv APM_IOC_HIBERNATE
.\" .Em NOT YET SUPPORTED on sparc
.\" .Pq Li "no parameters"
.\" Request
.\" .Dq hibernate
.\" mode.
.It Dv APM_IOC_GETPOWER
.Pq Li "struct apm_power_info"
Request the current power state.
The argument structure is as follows:
.Bd -literal -offset indent
struct apm_power_info {
	u_char battery_state;
	u_char ac_state;
	u_char battery_life;
	u_char spare1;
	u_int minutes_left;
	u_int spare2[6];
};
.Ed
.Pp
The following values are defined for
.Va battery_state :
.Bl -tag -width Ds
.It Dv APM_BATT_HIGH
Battery has a high state of charge.
.It Dv APM_BATT_LOW
Battery has a low state of charge.
.It Dv APM_BATT_CRITICAL
Battery has a critical state of charge.
.It Dv APM_BATT_CHARGING
Battery is not high, low, or critical and is currently charging.
.It Dv APM_BATT_UNKNOWN
Cannot read the current battery state.
.It Dv APM_BATTERY_ABSENT
No battery installed.
.El
.Pp
The following values are defined for
.Va ac_state :
.Bl -tag -width Ds
.It Dv APM_AC_OFF
External power not detected.
.It Dv APM_AC_ON
External power detected.
.\" .It Dv APM_AC_BACKUP
.\" Backup power in use.
.\" .It Dv APM_AC_UNKNOWN
.\" External power state unknown.
.El
.Pp
The
.Va battery_life
value contains the estimated percentage of battery life available.
100% indicates a full charge.
.Pp
The
.Va minutes_left
value is always -1,
as the hardware does not provide an estimated number of minutes of
battery life remaining.
.\" .It Dv APM_IOC_NEXTEVENT
.\" .Em NOT YET SUPPORTED on sparc
.\" .Pq Li "struct apm_event_info"
.\" The
.\" .Tn APM
.\" driver stores up to
.\" .Dv APM_NEVENTS
.\" events.
.\" This was defined as 16 at the time this documentation was written.
.\" If the event list is full when a new event is detected the new event is lost.
.\" .Dv APM_IOC_NEXTEVENT
.\" ioctl returns the next event on the list or
.\" .Er EAGAIN
.\" if the event list is empty.
.\" The format of the returned event is:
.\" .Bd -literal -offset indent
.\" struct apm_event_info {
.\"	u_int type;
.\"	u_int index;
.\"	u_int spare[8];
.\" };
.\" .Ed
.\" where
.\" .Va index
.\" is a sequential count of events that can be used to check if any
.\" events were lost and
.\" .Va type
.\" is one of:
.\" .Pp
.\" .Bl -tag -width Ds -offset indent -compact
.\" .It Dv APM_STANDBY_REQ
.\" .It Dv APM_SUSPEND_REQ
.\" .It Dv APM_NORMAL_RESUME
.\" .It Dv APM_CRIT_RESUME
.\" .It Dv APM_BATTERY_LOW
.\" .It Dv APM_POWER_CHANGE
.\" .It Dv APM_UPDATE_TIME
.\" .It Dv APM_CRIT_SUSPEND_REQ
.\" .It Dv APM_USER_STANDBY_REQ
.\" .It Dv APM_USER_SUSPEND_REQ
.\" .It Dv APM_SYS_STANDBY_RESUME
.\" .El
.\" .It Dv APM_IOC_DEV_CTL
.\" .Em NOT YET SUPPORTED on sparc
.\" .Pq Li "struct apm_ctl"
.\" Allows an application to directly set the
.\" .Tm APM
.\" operating mode.
.\" The argument structure is as follows:
.\" .Bd -literal -offset indent
.\" struct apm_ctl {
.\"	u_int dev;
.\"	u_int mode;
.\" };
.\" .Ed
.\" .Pp
.\" .Va dev
.\" indicates the device, typically
.\" .Dv APM_DEV_ALLDEVS .
.\" .Pp
.\" .Va mode
.\" indicates the desired operating mode.
.\" Possible values are
.\" .Bl -tag -compact -offset indent
.\" .It Dv APM_SYS_READY
.\" .It Dv APM_SYS_STANDBY
.\" .It Dv APM_SYS_SUSPEND
.\" .It Dv APM_SYS_OFF
.\" .It Dv APM_LASTREQ_INPROG
.\" .It Dv APM_LASTREQ_REJECTED
.\" .El
.It Dv APM_IOC_PRN_CTL
.Pq Li "int"
This
.Xr ioctl 2
controls message output by the
.Nm
driver when a power change event is detected.
The integer parameter is one of:
.Bl -tag -width Ds
.It Dv APM_PRINT_ON
All power change events result in a message.
This is the normal operating mode for the driver.
.It Dv APM_PRINT_OFF
Power change event messages are suppressed.
.It Dv APM_PRINT_PCT
Power change event messages are suppressed unless the estimated
battery life percentage changes.
.El
.\" .Pp
.\" However, in no case will power status messages be displayed until the
.\" battery life goes below the percentage in the
.\" .Xr sysctl 8
.\" state variable
.\" .Dv machdep.apmwarn .
.\" Setting
.\" .Dv machdep.apmwarn
.\" to zero disables all warnings regardless of the
.\" .Dv APM_IOC_PRN_CTL
.\" setting.
.El
.Sh FILES
.Bl -tag -width /dev/apmctl
.It Pa /dev/apm
APM data device.
May only be opened read-only.
May be opened by multiple concurrent users.
.It Pa /dev/apmctl
APM control device.
May be opened read-write or write-only.
May only be opened by one user at a time.
An attempt to open the file when in use will fail, returning
.Er EBUSY .
.El
.Sh SEE ALSO
.Xr reboot 2 ,
.Xr intro 4 ,
.Xr pninek 4 ,
.Xr pnozz 4 ,
.Xr tslot 4 ,
.Xr apm 8 ,
.Xr apmd 8
.Sh BUGS
Not all power management functions of the microcontroller are supported.
@


1.11
log
@replace "can not" with "cannot";
@
text
@d1 1
a1 1
.\"     $OpenBSD: tctrl.4,v 1.10 2014/01/21 03:15:46 schwarze Exp $
d37 1
a37 1
.Dd $Mdocdate: January 21 2014 $
d101 6
@


1.10
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"     $OpenBSD: tctrl.4,v 1.9 2007/05/31 19:19:56 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: May 31 2007 $
d129 1
a129 1
Can not read the current battery state.
@


1.9
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"     $OpenBSD: tctrl.4,v 1.8 2005/07/22 19:36:42 miod Exp $
d37 1
a37 1
.Dd $Mdocdate$
d88 1
a88 1
.Aq Pa machine/apmvar.h .
@


1.8
log
@We can now get the ``battery absent'' status accurately.
@
text
@d1 1
a1 1
.\"     $OpenBSD: tctrl.4,v 1.7 2005/03/29 16:26:43 miod Exp $
d37 1
a37 1
.Dd July 22, 2005
@


1.7
log
@Add an apm interface to the tctrl(4) device found on SPARCbooks; currently
limited to power change events and battery status retrieval.

ok deraadt@@ mickey@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: tctrl.4,v 1.6 2003/06/23 09:34:53 miod Exp $
d37 1
a37 1
.Dd March 29, 2005
d130 2
a131 2
.\" .It Dv APM_BATTERY_ABSENT
.\" No battery installed.
@


1.6
log
@Document tslot(4), and the availability of stp(4) on sparc now.
@
text
@d1 1
a1 1
.\"     $OpenBSD: tctrl.4,v 1.5 2003/06/18 17:40:31 miod Exp $
d27 11
a37 1
.Dd June 22, 2003
d51 1
d65 1
d69 202
d276 5
a280 1
.Xr tslot 4
@


1.5
log
@Rename p9k to pninek, since device base names with digits are confusing;
per deraadt@@'s request.
@
text
@d1 1
a1 1
.\"     $OpenBSD: tctrl.4,v 1.4 2003/06/17 21:21:31 miod Exp $
d27 1
a27 1
.Dd September 8, 1999
d37 4
a40 2
.Nm tctrl
provides control over many functions on the Tadpole SPARCbook 3 series laptops.
d54 3
d61 2
a62 1
.Xr pnozz 4
@


1.4
log
@New driver and wsdisplay type for the Weitek Power9000 and Brooktree Bt445
combination, found on the Tadpole SPARCbook 3 only (later model use the
Power9100 and are already supported).

Untested for lack of hardware and volunteers, but carefully crafted; if it
does not work out of the box, this should be a good starting point.

"worth having in the tree" millert@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: tctrl.4,v 1.3 2003/06/02 18:51:34 jason Exp $
d41 1
a41 1
.Xr p9k 4
d55 1
a55 1
.Xr p9k 4 ,
@


1.3
log
@Nuke clause 3 & 4.
@
text
@d1 1
a1 1
.\"     $OpenBSD: tctrl.4,v 1.2 2003/05/05 13:51:58 jmc Exp $
d38 1
a38 1
provides control over many functions on the Tadpole 3GS and 3GX laptops.
d41 2
d55 1
@


1.2
log
@corrections from Leandro Costa.

- corrections to tradenames
- updated URLs
- general typos

thanks Leandro!
@
text
@d1 1
a1 1
.\"     $OpenBSD: tctrl.4,v 1.1 1999/09/09 03:03:22 jason Exp $
a13 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Jason L. Wright.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
@


1.1
log
@tadpole microcontroller man page
@
text
@d1 1
a1 1
.\"     $OpenBSD$
d44 1
a44 1
The microcontroller is used to power the tft display down when the
@

