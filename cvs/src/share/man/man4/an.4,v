head	1.42;
access;
symbols
	OPENBSD_6_1:1.42.0.8
	OPENBSD_6_1_BASE:1.42
	OPENBSD_6_0:1.42.0.10
	OPENBSD_6_0_BASE:1.42
	OPENBSD_5_9:1.42.0.2
	OPENBSD_5_9_BASE:1.42
	OPENBSD_5_8:1.42.0.6
	OPENBSD_5_8_BASE:1.42
	OPENBSD_5_7:1.42.0.4
	OPENBSD_5_7_BASE:1.42
	OPENBSD_5_6:1.40.0.8
	OPENBSD_5_6_BASE:1.40
	OPENBSD_5_5:1.40.0.6
	OPENBSD_5_5_BASE:1.40
	OPENBSD_5_4:1.40.0.2
	OPENBSD_5_4_BASE:1.40
	OPENBSD_5_3:1.38.0.2
	OPENBSD_5_3_BASE:1.38
	OPENBSD_5_2:1.37.0.12
	OPENBSD_5_2_BASE:1.37
	OPENBSD_5_1_BASE:1.37
	OPENBSD_5_1:1.37.0.10
	OPENBSD_5_0:1.37.0.8
	OPENBSD_5_0_BASE:1.37
	OPENBSD_4_9:1.37.0.6
	OPENBSD_4_9_BASE:1.37
	OPENBSD_4_8:1.37.0.4
	OPENBSD_4_8_BASE:1.37
	OPENBSD_4_7:1.37.0.2
	OPENBSD_4_7_BASE:1.37
	OPENBSD_4_6:1.36.0.8
	OPENBSD_4_6_BASE:1.36
	OPENBSD_4_5:1.36.0.4
	OPENBSD_4_5_BASE:1.36
	OPENBSD_4_4:1.36.0.2
	OPENBSD_4_4_BASE:1.36
	OPENBSD_4_3:1.34.0.4
	OPENBSD_4_3_BASE:1.34
	OPENBSD_4_2:1.34.0.2
	OPENBSD_4_2_BASE:1.34
	OPENBSD_4_1:1.33.0.2
	OPENBSD_4_1_BASE:1.33
	OPENBSD_4_0:1.32.0.2
	OPENBSD_4_0_BASE:1.32
	OPENBSD_3_9:1.31.0.2
	OPENBSD_3_9_BASE:1.31
	OPENBSD_3_8:1.28.0.4
	OPENBSD_3_8_BASE:1.28
	OPENBSD_3_7:1.28.0.2
	OPENBSD_3_7_BASE:1.28
	OPENBSD_3_6:1.21.0.2
	OPENBSD_3_6_BASE:1.21
	OPENBSD_3_5:1.20.0.4
	OPENBSD_3_5_BASE:1.20
	OPENBSD_3_4:1.20.0.2
	OPENBSD_3_4_BASE:1.20
	OPENBSD_3_3:1.18.0.4
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.18.0.2
	OPENBSD_3_2_BASE:1.18
	OPENBSD_3_1:1.16.0.4
	OPENBSD_3_1_BASE:1.16
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9:1.14.0.2
	OPENBSD_2_9_BASE:1.14
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8;
locks; strict;
comment	@.\" @;


1.42
date	2015.02.28.05.47.36;	author mlarkin;	state Exp;
branches;
next	1.41;
commitid	Z0Ik5TcWA6blSIhV;

1.41
date	2015.01.13.03.43.57;	author lteo;	state Exp;
branches;
next	1.40;
commitid	h6ynYz2dcan2U2gL;

1.40
date	2013.07.16.16.05.48;	author schwarze;	state Exp;
branches;
next	1.39;

1.39
date	2013.06.02.20.23.33;	author tedu;	state Exp;
branches;
next	1.38;

1.38
date	2013.02.14.07.40.42;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2009.09.02.07.00.24;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2008.07.29.17.03.35;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2008.04.17.14.01.22;	author jmc;	state Exp;
branches;
next	1.34;

1.34
date	2007.05.31.19.19.49;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2006.11.10.20.06.58;	author mk;	state Exp;
branches;
next	1.32;

1.32
date	2006.08.30.23.14.30;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2006.01.11.09.57.39;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2006.01.09.21.19.48;	author jsg;	state Exp;
branches;
next	1.29;

1.29
date	2005.09.30.20.34.24;	author jaredy;	state Exp;
branches;
next	1.28;

1.28
date	2005.03.06.21.49.00;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2005.02.24.15.14.55;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2005.02.21.10.22.43;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2004.11.08.23.05.42;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2004.11.08.20.16.02;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2004.10.20.15.36.20;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2004.09.30.19.59.24;	author mickey;	state Exp;
branches;
next	1.21;

1.21
date	2004.09.06.20.16.01;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2003.05.20.04.25.59;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	2003.04.02.20.56.19;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2002.09.26.22.09.53;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2002.09.26.07.55.39;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2001.07.03.22.19.28;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2001.06.22.12.15.43;	author mpech;	state Exp;
branches;
next	1.14;

1.14
date	2001.04.06.19.15.04;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2001.04.06.19.11.15;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2001.01.11.19.41.55;	author angelos;	state Exp;
branches;
next	1.11;

1.11
date	2000.10.18.02.38.21;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.09.09.17.15.55;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2000.07.06.17.59.56;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.11.20.39.02;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.11.16.26.22;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.03.21.19.35;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.03.19.34.19;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.03.02.38.12;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.03.02.30.59;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.03.02.28.35;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.03.01.03.19;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.42
log
@
an(4) does not allow 'scan' as per the CAVEATS section of the man page.

discussed with jsg@@
@
text
@.\"	$OpenBSD: an.4,v 1.41 2015/01/13 03:43:57 lteo Exp $
.\"
.\" Copyright (c) 1997, 1998, 1999
.\"	Bill Paul <wpaul@@ee.columbia.edu>. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Bill Paul.
.\" 4. Neither the name of the author nor the names of any co-contributors
.\"    may be used to endorse or promote products derived from this software
.\"   without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY Bill Paul AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL Bill Paul OR THE VOICES IN HIS HEAD
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $FreeBSD: src/share/man/man4/an.4,v 1.5 2000/03/02 14:53:45 sheldonh Exp $
.\"
.Dd $Mdocdate: January 13 2015 $
.Dt AN 4
.Os
.Sh NAME
.Nm an
.Nd Aironet Communications 4500/4800 IEEE 802.11FH/b wireless network device
.Sh SYNOPSIS
.Cd "an* at pcmcia?"
.Cd "an* at pci?"
.Cd "an* at isapnp?"
.Sh DESCRIPTION
The
.Nm
driver provides support for the Aironet Communications 4500, 4800
(aka Cisco 340), and Cisco 350
IEEE 802.11 wireless network adapters.
This includes the ISA, PCI, and PCMCIA varieties.
The 4500 series adapters operate at 1 and 2Mbps (FH) while
the 4800 and 350 series can operate at 1, 2, 5.5, and 11Mbps (DS).
The ISA, PCI,
and PCMCIA devices are all based on the same core PCMCIA modules
and all have the same programming interface.
However, unlike the
Lucent WaveLAN/IEEE cards, the ISA and PCI cards appear to the
host as normal ISA and PCI devices and do not require any PCMCIA
support.
.Pp
ISA cards can either be configured to use ISA Plug and Play
or to use a particular I/O address and IRQ
by properly setting the DIP switches on the board.
(The default switch setting is for plug and play.)
The
.Nm
driver has Plug and Play support and will work in either configuration,
however when using a hard-wired I/O address and IRQ, the driver
configuration and the NIC's switch settings must agree.
PCI cards
require no switch settings of any kind and will be automatically
probed and attached.
.Pp
All host/device interaction with the Aironet cards is via programmed I/O.
The
.Nm
driver encapsulates all IP and ARP traffic as 802.11 frames, though
it can receive either 802.11 or 802.3 frames.
.Pp
These are the modes the
.Nm
driver can operate in:
.Bl -tag -width "IBSS-masterXX"
.It BSS mode
Also known as
.Em infrastructure
mode, this is used when associating with an access point, through
which all traffic passes.
This mode is the default.
.It IBSS mode
Also known as
.Em IEEE ad-hoc
mode or
.Em peer-to-peer
mode.
This is the standardized method of operating without an access point.
Stations associate with a service set.
However, actual connections between stations are peer-to-peer.
.It monitor mode
In this mode the driver is able to receive packets without
associating with an access point.
This disables the internal receive filter and enables the card to
capture packets from networks which it wouldn't normally have access to,
or to scan for access points.
.El
.Pp
The
.Nm
driver can be configured to use hardware
Wired Equivalent Privacy (WEP).
It is strongly recommended that WEP
not be used as the sole mechanism
to secure wireless communication,
due to serious weaknesses in it.
.Pp
The
.Nm
driver can be configured at runtime with
.Xr ifconfig 8
or on boot with
.Xr hostname.if 5 .
.Sh EXAMPLES
The following
.Xr hostname.if 5
example configures an0 to join network
.Dq mynwid ,
using WEP key
.Dq mywepkey ,
obtaining an IP address using DHCP:
.Bd -literal -offset indent
nwid mynwid
nwkey mywepkey
dhcp
.Ed
.Sh DIAGNOSTICS
.Bl -diag
.It "an0: failed to allocate N bytes on NIC"
The driver was unable to allocate memory for transmit frames in the
NIC's on-board RAM.
.It "an0: device timeout"
The Aironet card failed to generate an interrupt to acknowledge a transmit
command.
.El
.Sh SEE ALSO
.Xr arp 4 ,
.Xr ifmedia 4 ,
.Xr intro 4 ,
.Xr isapnp 4 ,
.Xr netintro 4 ,
.Xr pci 4 ,
.Xr pcmcia 4 ,
.Xr hostname.if 5 ,
.Xr ifconfig 8
.Sh HISTORY
The
.Nm
device driver first appeared in
.Fx 4.0 .
.Ox
support was added in
.Ox 2.7 .
A version of the driver based on the one in
.Nx
was added in
.Ox 3.9 .
.Sh AUTHORS
.An -nosplit
The
.Nm
driver was written by
.An Bill Paul Aq Mt wpaul@@ee.columbia.edu
and ported to
.Ox
by
.An Michael Shalayeff Aq Mt mickey@@openbsd.org .
Later the
.Nx
version of the driver by
.An Atsushi Onoe
was subsequently ported to
.Ox
by
.An Jonathan Gray Aq Mt jsg@@openbsd.org .
.Sh CAVEATS
Scanning for access points is not currently supported.
@


1.41
log
@"wi0" should be "an0" in the EXAMPLES section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.40 2013/07/16 16:05:48 schwarze Exp $
d35 1
a35 1
.Dd $Mdocdate: July 16 2013 $
a123 4
The following example scans for available networks:
.Pp
.Dl # ifconfig an0 scan
.Pp
@


1.40
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.39 2013/06/02 20:23:33 tedu Exp $
d35 1
a35 1
.Dd $Mdocdate: June 2 2013 $
d126 1
a126 1
.Dl # ifconfig wi0 scan
d130 1
a130 1
example configures wi0 to join network
@


1.39
log
@change format strings in error messages to reasonable values more likely
to be understood by people who don't program in C.
ok everyone
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.38 2013/02/14 07:40:42 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: February 14 2013 $
d176 1
a176 1
.An Bill Paul Aq wpaul@@ee.columbia.edu
d180 1
a180 1
.An Michael Shalayeff Aq mickey@@openbsd.org .
d188 1
a188 1
.An Jonathan Gray Aq jsg@@openbsd.org .
@


1.38
log
@rework EXAMPLES somewhat, and remove the obsolete NONE NONE NONE dhcp
stuff; ok krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.37 2009/09/02 07:00:24 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: September 2 2009 $
d142 1
a142 1
.It "an%d: failed to allocate %d bytes on NIC"
d145 1
a145 1
.It "an%d: device timeout"
@


1.37
log
@the `W' in WEP apparently stands for wired, not wireless;
from Scott Radvan
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.36 2008/07/29 17:03:35 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: July 29 2008 $
d124 4
d130 2
a131 1
example configures an0 to join whatever network is available on boot,
d133 2
a134 20
.Dq 0x1deadbeef1 ,
channel 11, obtaining an IP address using DHCP:
.Bd -literal -offset indent
dhcp NONE NONE NONE nwkey 0x1deadbeef1 chan 11
.Ed
.Pp
Configure an0 for WEP, using hex key
.Dq 0x1deadbeef1 :
.Bd -literal -offset indent
# ifconfig an0 nwkey 0x1deadbeef1
.Ed
.Pp
Return an0 to its default settings:
.Bd -literal -offset indent
# ifconfig an0 -bssid -chan media autoselect \e
	nwid "" -nwkey
.Ed
.Pp
Join an existing BSS network,
.Dq my_net :
d136 3
a138 1
# ifconfig an0 192.168.1.1 netmask 0xffffff00 nwid my_net
@


1.36
log
@tweak the wep section somewhat, to bring it into line with what
we say for those devices which support wpa;
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.35 2008/04/17 14:01:22 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: April 17 2008 $
d111 1
a111 1
Wireless Equivalent Privacy (WEP).
@


1.35
log
@remove the CONFIGURATION section from the wireless pages:
the addition of the wpa options have shown just how unwieldy it had
become, it's already in ifconfig(8) anyway, and "ifconfig -m" will
get the relevant ones.

ok dlg jsg
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.34 2007/05/31 19:19:49 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: May 31 2007 $
d108 1
d110 6
a115 9
supports hardware WEP.
Wired Equivalent Privacy (WEP) is the de facto encryption standard
for wireless networks.
It can be typically configured in one of three modes:
no encryption; 40-bit encryption; or 104-bit encryption.
Unfortunately, due to serious weaknesses in WEP protocol
it is strongly recommended that it not be used as the
sole mechanism to secure wireless communication.
WEP is not enabled by default.
@


1.34
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.33 2006/11/10 20:06:58 mk Exp $
d35 1
a35 1
.Dd $Mdocdate$
d118 1
a118 1
.Sh CONFIGURATION
d124 1
a124 97
.Xr hostname.if 5
using the following parameters:
.Bl -tag -width Ds
.It Cm bssid Ar bssid
Set the desired BSSID.
.It Fl bssid
Unset the desired BSSID.
The interface will automatically select a BSSID in this mode, which is
the default.
.It Cm chan Ar n
Set the channel (radio frequency) to be used by the driver based on
the given channel ID
.Ar n .
.It Fl chan
Unset the desired channel to be used by the driver.
The driver will automatically select a channel in this mode, which is
the default.
.It Cm media Ar media
The
.Nm
driver supports the following
.Ar media
types:
.Pp
.Bl -tag -width autoselect -compact
.It Cm autoselect
Enable autoselection of the media type and options.
.It Cm DS1
Set 802.11b DS 1Mbps operation.
.It Cm DS2
Set 802.11b DS 2Mbps operation.
.It Cm DS5
Set 802.11b DS 5.5Mbps operation.
.It Cm DS11
Set 802.11b DS 11Mbps operation.
.El
.It Cm mediaopt Ar opts
The
.Nm
driver supports the following media options:
.Pp
.Bl -tag -width monitor -compact
.It Cm ibss
Select IBSS operation.
.It Cm monitor
Select monitor mode.
.El
.It Fl mediaopt Ar opts
Disable the specified media options on the driver and return it to the
default mode of operation (BSS).
.It Cm nwid Ar id
Set the network ID.
The
.Ar id
can either be any text string up to 32 characters in length,
or a series of hexadecimal digits up to 64 digits.
An empty
.Ar id
string allows the interface to connect to any available access points.
By default the
.Nm
driver uses an empty string.
Note that network ID is synonymous with Extended Service Set ID (ESSID).
.It Fl nwid
Set the network ID to the empty string to allow the interface to connect
to any available access point.
.It Cm nwkey Ar key
Enable WEP encryption using the specified
.Ar key .
The
.Ar key
can either be a string, a series of hexadecimal digits (preceded by
.Sq 0x ) ,
or a set of keys of the form
.Dq n:k1,k2,k3,k4 ,
where
.Sq n
specifies which of the keys will be used for transmitted packets,
and the four keys,
.Dq k1
through
.Dq k4 ,
are configured as WEP keys.
If a set of keys is specified, a comma
.Pq Sq \&,
within the key must be escaped with a backslash.
Note that if multiple keys are used, their order must be the same within
the network.
.Nm
is capable of using both 40-bit (5 characters or 10 hexadecimal digits)
or 104-bit (13 characters or 26 hexadecimal digits) keys.
.It Fl nwkey
Disable WEP encryption.
This is the default mode of operation.
.It Cm nwkey persist
Enable WEP encryption with the persistent key stored in the network card.
.El
@


1.33
log
@Mention -nwid here too, reminded by reyk.

Having to edit all these files makes me realise how many wireless
drivers we actually have.
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.32 2006/08/30 23:14:30 jmc Exp $
d35 1
a35 1
.Dd September 10, 1999
@


1.32
log
@concentrate on `device', not `driver'; from deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.31 2006/01/11 09:57:39 jmc Exp $
d187 3
@


1.31
log
@device does not support hostap mode; ok jsg
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.30 2006/01/09 21:19:48 jsg Exp $
d40 1
a40 1
.Nd Aironet Communications 4500/4800 IEEE 802.11FH/b wireless network driver
@


1.30
log
@Move an(4) to a driver based on the NetBSD one.
This brings net80211 support and support for newer hardware.
In addition ancontrol is no longer needed.

This driver does not yet work on big endian archs like the previous
one did.

"do it" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.29 2005/09/30 20:34:24 jaredy Exp $
a165 2
.It Cm hostap
Select Host AP operation.
@


1.29
log
@deploy .An -nosplit; ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.28 2005/03/06 21:49:00 jmc Exp $
d100 6
d118 1
a118 1
.Pp
d121 2
a122 2
driver can be configured using
.Xr ancontrol 8
a123 5
.Xr hostname.if 5 .
.Sh EXAMPLES
Note that when setting options via
.Xr ancontrol 8
in a
d125 22
a146 5
file (e.g.\&
.Pa /etc/hostname.an0 ) ,
the
.Xr ancontrol 8
commands should be specified first.
d148 73
d223 4
a226 2
example will set the channel to 11 and enable WEP before configuring
the interface as an IBSS peer:
d228 1
a228 2
!/sbin/ancontrol \e$if -c 11 -W 1 -k 0x1deadbeef1 -n my_net -o 0
inet 192.168.1.1 255.255.255.0 NONE
d231 5
a235 1
Enable WEP:
d237 11
a247 1
.Dl # ancontrol an0 -W 1
a249 3
.It "an%d: init failed"
The Aironet card failed to come ready after an initialization command was
issued.
a265 1
.Xr ancontrol 8 ,
d275 4
d289 8
d298 1
a298 3
.Nm
is not configurable with
.Xr ifconfig 8 .
@


1.28
log
@wireless makeover:

- standardise 802.11 pages
- document modes supported by the card
- document wep
- document relevant ifconfig(8) options
- standard EXAMPLES section
- standard SEE ALSO section
- standard HARDWARE section

includes feedback/diffs from reyk@@, jsg@@, and damien@@;
joint work from dlg@@ and myself;
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.27 2005/02/24 15:14:55 jmc Exp $
d174 1
@


1.27
log
@ok, last commit was partly wrong: an(4) uses BSS by default,
so adjust the surrounding text accordingly;

verified by and ok dlg@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.26 2005/02/21 10:22:43 jmc Exp $
d40 1
a40 1
.Nd Aironet Communications 4500/4800 IEEE 802.11B wireless network adapter
d50 1
a50 1
IEEE 802.11 Direct Sequence wireless network adapters.
d52 2
a53 2
The 4500 series adapters operate at 1 and 2Mbps while
the 4800 and 350 series can operate at 1, 2, 5.5, and 11Mbps.
a75 2
The Aironet devices support 802.11 and 802.3 frames, power management,
BSS (infrastructure), and IBSS (ad-hoc) operation modes.
d78 1
a78 1
driver encapsulates all IP and ARP traffic as 802.11 frames, however,
a79 3
Transmit speed is
selectable between 1Mbps, 2Mbps, 5.5Mbps, 11Mbps or
"auto" (the NIC automatically chooses the best speed).
d81 1
a81 1
By default, the
d83 29
a111 2
driver configures the card for BSS operation (aka infrastructure mode).
This mode requires the use of an access point (base station).
d115 14
a128 3
driver also supports the standard IBSS point-to-point mode,
where stations can communicate amongst themselves
without the aid of an access point.
d130 12
a141 4
For more information on configuring this device, see
.Xr ancontrol 8
and
.Xr ifconfig 8 .
d156 1
d182 4
@


1.26
log
@correction from jan minar (pr #4110);
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.25 2004/11/08 23:05:42 deraadt Exp $
d88 8
a95 9
driver configures the Aironet card for IBSS operation with an SSID
of "".
In this mode,
stations can communicate among each other without the aid of an access
point.
To join a service set, the driver must be set for BSS mode using
the
.Xr ancontrol 8
utility.
d98 2
@


1.25
log
@clarify Nd lines, jmc ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.24 2004/11/08 20:16:02 jmc Exp $
d88 1
a88 1
driver configures the Aironet card for BSS operation with an SSID
@


1.24
log
@remove references to other wireless chips: not really useful.
they are already documented in more appropriate places, such
as pci(4);

prompted by a mail from sam chill on tech@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.23 2004/10/20 15:36:20 miod Exp $
d40 1
a40 1
.Nd Aironet Communications 4500/4800 IEEE 802.11DS wireless network adapter
@


1.23
log
@.Xr ipw and iwi.
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.22 2004/09/30 19:59:24 mickey Exp $
a113 1
.Xr atw 4 ,
a114 1
.Xr ipw 4 ,
a115 1
.Xr iwi 4 ,
a118 1
.Xr wi 4 ,
@


1.22
log
@kill default locators
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.21 2004/09/06 20:16:01 millert Exp $
d116 1
d118 1
@


1.21
log
@an(4), atw(4) and wi(4) now X-ref each other.  Requested by deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.20 2003/05/20 04:25:59 mickey Exp $
d42 2
a43 2
.Cd "an* at pcmcia? function ?"
.Cd "an* at pci? dev ? function ?"
@


1.20
log
@an@@isapnp works now
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.19 2003/04/02 20:56:19 jmc Exp $
d114 1
@


1.19
log
@pcmcia -> PCMCIA
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.18 2002/09/26 22:09:53 miod Exp $
d44 1
d115 1
@


1.18
log
@Second part of the man4 mi cleanup.
- more/better xrefs
- sync .Cd lines with actual configuration files
- intro(4) reference police
- huge usb(4) update
- follow mdoc.samples suggested man page section ordering when necessary
- add netintro(4) and hostname.if(5) xrefs to all ethernet drivers

ok deraadt@@ mickey@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.17 2002/09/26 07:55:39 miod Exp $
d58 1
a58 1
host as normal ISA and PCI devices and do not require any pcmcia
@


1.17
log
@Incomplete section 4 mi manual page cleanup.
- make configuration lines match GENERIC files
- more Xr (hopefully usefule Xr)
- never mention intro(4) on non-physical devices (i.e. protocols), always
mention it for physical devices
- random text style and quoting fixes
- drivers ported from FreeBSD did mention rc.conf instead of hostname.if as
the place to put mediaopt
- some .Tn UNIX -> .Ox replacements
- etc, etc...

reviewd in part by deraadt@@ (until he got bored of this)
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.16 2001/07/03 22:19:28 millert Exp $
d118 1
@


1.16
log
@make "man -k wireless" produce useful results; idea from bk@@rt.fm
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.15 2001/06/22 12:15:43 mpech Exp $
d113 1
d115 2
d131 3
a133 1
driver was written by Bill Paul <wpaul@@ee.columbia.edu> and ported to
d135 2
a136 1
by Michael Shalayeff <mickey@@openbsd.org>.
@


1.15
log
@o) remove unnecessary .Pp;
o) remove unnecessary .Nm args;
o) closes .Bl;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) sort SEE ALSO;
o) better -mdoc style;
o) typos;

aaron@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.14 2001/04/06 19:15:04 deraadt Exp $
d40 1
a40 1
.Nd Aironet Communications 4500/4800 IEEE 802.11DS network adapter
@


1.14
log
@SSID has been "" for quite some time
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.13 2001/04/06 19:11:15 deraadt Exp $
a111 1
.Xr wi 4
d114 3
a116 2
.Xr ifconfig 8 ,
.Xr ancontrol 8
@


1.13
log
@list models
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.12 2001/01/11 19:41:55 angelos Exp $
d88 1
a88 1
of "ANY."
@


1.12
log
@Default mode is BSS, not ad-hoc
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.11 2000/10/18 02:38:21 aaron Exp $
d47 3
a49 2
driver provides support for Aironet Communications 4500 and 4800
(aka Cisco 340) IEEE 802.11 Direct Sequence wireless network adapters.
d52 1
a52 1
the 4800 series can operate at 1, 2, 5.5, and 11Mbps.
@


1.11
log
@- Arguments to .Nd should go on the same line as .Nd.
- Standardize Nd format for all Ethernet man pages for easy man -k'ing.
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.10 2000/09/09 17:15:55 deraadt Exp $
d86 1
a86 1
driver configures the Aironet card for ad-hoc operation with an SSID
@


1.10
log
@these are MI
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.9 2000/07/06 17:59:56 millert Exp $
d40 1
a40 2
.Nd
Aironet Communications 4500/4800 IEEE 802.11DS network adapter
@


1.9
log
@The Cisco 340 is the same as the Aironet 4800 (Cisco bought Aironet).
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.8 2000/04/11 20:39:02 deraadt Exp $
d36 1
a36 1
.Dt AN 4 i386
@


1.8
log
@more Xr flesh
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.7 2000/04/11 16:26:22 millert Exp $
d49 1
a49 1
IEEE 802.11 Direct Sequence wireless network adapters.
@


1.7
log
@Add pci config
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.6 2000/04/03 21:19:35 aaron Exp $
d41 1
a41 1
Aironet Communications 4500/4800 IEEE 802.11DS network adapter driver
@


1.6
log
@Remove trailing whitespace.
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.5 2000/04/03 19:34:19 deraadt Exp $
d44 1
a44 1
.Cd
@


1.5
log
@make DS pages point to DS, and same for FH
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.4 2000/04/03 02:38:12 deraadt Exp $
d44 1
a44 1
.Cd 
d114 1
a114 1
.Xr netintro 4 , 
@


1.4
log
@clarify better that this is a DS driver
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.3 2000/04/03 02:30:59 aaron Exp $
d112 1
@


1.3
log
@Do not give the .Os macro an argument. It will be replaced by the current
version of OpenBSD.
@
text
@d1 1
a1 1
.\"	$OpenBSD: an.4,v 1.2 2000/04/03 02:28:35 aaron Exp $
d41 1
a41 1
Aironet Communications 4500/4800 wireless network adapter driver
d43 2
a44 2
.Cd "device an"
.Cd "device an0 at isa? port 0x140 irq 5"
d49 1
a49 1
wireless network adapters.
d58 1
a58 1
host as normal ISA and PCI devices and do not require any PC Card
@


1.2
log
@OpenBSD'ify the Aironet man pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d37 1
a37 1
.Os FreeBSD
@


1.1
log
@an(4), it figures
@
text
@d1 2
d50 1
a50 2
This includes the ISA, PCI and PCMCIA
varieties.
d52 2
a53 2
the 4800 series can operate at 1, 2, 5.5 and 11Mbps.
The ISA, PCI
d55 2
a56 1
and all have the same programming interface, however unlike the
d58 1
a58 1
host as normal ISA and PCI devices and no not require any PCCARD
a60 4
The PCMCIA Aironet cards require pccard support, including the
kernel pccard driver support and the
.Xr pccardd 8
daemon.
d64 1
a64 2
(The default
switch setting is for plug and play.)
d76 1
a76 1
BSS (infrastructure) and IBSS (ad-hoc) operation modes.
d79 1
a79 1
driver encapsulates all IP and ARP traffic as 802.11 frames, however
d98 1
a98 1
.Xr ifconfig 8
d121 4
a124 1
.Sh AUTHOR
d127 3
a129 2
driver was written by
.An Bill Paul Aq wpaul@@ee.columbia.edu .
@

