head	1.17;
access;
symbols
	OPENBSD_6_0:1.17.0.14
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.10
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.8
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.6
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.4
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.14.0.22
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.20
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.18
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.16
	OPENBSD_5_0:1.14.0.14
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.12
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.10
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.6
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.8
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.4
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.2
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.16
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.12
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.10
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4;
locks; strict;
comment	@.\" @;


1.17
date	2014.02.15.23.41.19;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2014.01.21.03.15.46;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2013.08.24.04.38.52;	author mlarkin;	state Exp;
branches;
next	1.14;

1.14
date	2008.06.16.15.21.10;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.31.19.19.55;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.09.13.26.20;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2002.10.01.07.14.14;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.04.16.56.51;	author mpech;	state Exp;
branches;
next	1.9;

1.9
date	2001.08.03.15.21.16;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.23.07.04.15;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.11.01.28.07;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.06.19.56.51;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.05.13.46.53;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.03.21.19.38;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.12.23.15.34.35;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.11.24.02.21.34;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.11.20.11.11.28;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.17
log
@say more explicitly where the .Er values show up, and fix the .Sh title;
triggered because Jan Stary noticed that .Sh RETURN VALUES is strange
to have in section 4 manuals;
ok matthieu@@
@
text
@.\"	$OpenBSD: mtrr.4,v 1.16 2014/01/21 03:15:46 schwarze Exp $
.\"
.\" Pentium MTRR driver for OpenBSD.
.\" Copyright 1999 Matthieu Herrb <matthieu@@openbsd.org>
.\"
.\" Modification and redistribution in source and binary forms is
.\" permitted provided that due credit is given to the author and the
.\" OpenBSD project (for instance by leaving this copyright notice
.\" intact).
.\"
.Dd $Mdocdate: January 21 2014 $
.Dt MTRR 4 i386
.Os
.Sh NAME
.Nm mtrr
.Nd driver for CPU memory range attributes
.Sh SYNOPSIS
.Cd "pseudo-device mtrr 1"
.Sh DESCRIPTION
The
.Nm
device provides access to the memory range attributes supported by the
MTRRs on Pentiums.
.Ss IOCTL INTERFACE
Several architectures allow attributes to be associated with ranges of physical
memory.
These attributes can be manipulated via
.Fn ioctl
calls performed on
.Pa /dev/mem
or
.Pa /dev/xf86 .
Declarations and data types are to be found in
.In sys/memrange.h .
.Pp
The specific attributes, and number of programmable ranges may vary between
architectures.
The full set of supported attributes is:
.Bl -tag -width MDF_WRITECOMBINE
.It Dv MDF_UNCACHEABLE
The region is not cached.
.It Dv MDF_WRITECOMBINE
Writes to the region may be combined or performed out of order.
.It Dv MDF_WRITETHROUGH
Writes to the region are committed synchronously.
.It Dv MDF_WRITEBACK
Writes to the region are committed asynchronously.
.It Dv MDF_WRITEPROTECT
The region cannot be written to.
.El
.Pp
Memory ranges are described by
.Bd -literal -offset xxxx
struct mem_range_desc {
	u_int64_t	mr_base;	/\(** physical base address \(**/
	u_int64_t	mr_len;		/\(** physical length of region \(**/
	int		mr_flags;	/\(** attributes of region \(**/
	char		mr_owner[8];
};
.Ed
.Pp
In addition to the region attributes listed above, the following flags
may also be set in the
.Fa mr_flags
field:
.Bl -tag -width MDF_FIXACTIVE
.It Dv MDF_FIXBASE
The region's base address cannot be changed.
.It Dv MDF_FIXLEN
The region's length cannot be changed.
.It Dv MDF_FIRMWARE
The region is believed to have been established by the system firmware.
.It Dv MDF_ACTIVE
The region is currently active.
.It Dv MDF_BOGUS
We believe the region to be invalid or otherwise erroneous.
.It Dv MDF_FIXACTIVE
The region cannot be disabled.
.El
.Pp
Operations are performed using
.Bd -literal -offset xxxx
struct mem_range_op {
	struct mem_range_desc	*mo_desc;
	int			mo_arg[2];
};
.Ed
.Pp
The
.Fa MEMRANGE_GET
ioctl is used to retrieve current memory range attributes.
If
.Fa mo_arg[0]
is set to 0, it will be updated with the total number of memory range
descriptors.
If greater than 0, the array at
.Fa mo_desc
will be filled with a corresponding number of descriptor structures,
or the maximum, whichever is less.
.Pp
The
.Fa MEMRANGE_SET
ioctl is used to add, alter and remove memory range attributes.
A range with the
.Dv MDF_FIXACTIVE
flag may not be removed.
.Pp
.Fa mo_arg[0]
should be set to MEMRANGE_SET_UPDATE to update an existing
or establish a new range, or to MEMRANGE_SET_REMOVE to remove a range.
.Sh ERRORS
On
.Xr ioctl 2
failure,
.Xr errno 2
will be set as follows:
.Bl -tag -width Er
.It Bq Er EOPNOTSUPP
Memory range operations are not supported on this architecture.
.It Bq Er ENXIO
No memory range descriptors are available (e.g., firmware has not enabled
any).
.It Bq Er EINVAL
The memory range supplied as an argument is invalid or overlaps another
range in a fashion not supported by this architecture.
.It Bq Er EBUSY
An attempt to remove or update a range failed because the range is busy.
.It Bq Er ENOSPC
An attempt to create a new range failed due to a shortage of hardware
resources (e.g., descriptor slots).
.It Bq Er ENOENT
An attempt to remove a range failed because no range matches the descriptor
base/length supplied.
.It Bq Er EPERM
An attempt to remove a range failed because the range is permanently
enabled.
.El
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr mem 4 ,
.Xr pctr 4 ,
.Xr xf86 4 ,
.Xr memconfig 8
.Sh HISTORY
.Nm
support was originally included in
.Fx 3.3 .
@


1.16
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.15 2013/08/24 04:38:52 mlarkin Exp $
d11 1
a11 1
.Dd $Mdocdate: August 24 2013 $
d111 6
a116 1
.Sh RETURN VALUES
@


1.15
log
@

Remove reference to "busy ranges" which were never implemented (and now
removed)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.14 2008/06/16 15:21:10 jmc Exp $
d11 1
a11 1
.Dd $Mdocdate: June 16 2008 $
d34 1
a34 1
.Aq Pa sys/memrange.h .
@


1.14
log
@missing full stops;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.13 2007/05/31 19:19:55 jmc Exp $
d11 1
a11 1
.Dd $Mdocdate: May 31 2007 $
a78 3
.It Dv MDF_BUSY
The region is currently owned by another process and may not be
altered.
d106 1
a106 3
flag may not be removed; a range with the
.Dv MDF_BUSY
flag may not be removed or updated.
@


1.13
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.12 2003/07/09 13:26:20 jmc Exp $
d11 1
a11 1
.Dd $Mdocdate$
d34 1
a34 1
.Aq Pa sys/memrange.h
@


1.12
log
@- fix lists/displays
- quote .Cd's
- add/remove .Pp's as necessary
- fix some .Re/.Rs's
- simplify macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.11 2002/10/01 07:14:14 miod Exp $
d11 1
a11 1
.Dd November 15, 1999
@


1.11
log
@Manpage cleaning police:
- more and better .Xr
- prefer "option FOO" rather than "options FOO", and put the option
  lines after the device definition lines in SYNOPSIS
- identify these manpages as section 4/i386, not section 4.
- long awaited update to intro(4/i386)
- npx(4/i386) was too NetBSD-ish - we only provide one math emulator
- random touches

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.10 2001/10/04 16:56:51 mpech Exp $
d18 1
a18 1
.Cd pseudo-device mtrr 1
@


1.10
log
@we don't like .Pp and blank lines before/after .Ss;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.9 2001/08/03 15:21:16 mpech Exp $
d3 1
a3 1
.\" Pentium MTRR  driver for OpenBSD.
d18 1
a18 1
.Cd pseudo-device mtrr
@


1.9
log
@o) We don't like .Pp before/after .Sh;
o) .Nm always has argument in .Sh SYNOPSIS;
o) We always closes .Bl and .Bd tags;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.8 2001/06/23 07:04:15 pjanzen Exp $
a23 1
.Pp
@


1.8
log
@spelling fixes and minor repairs almost entirely from jsyn@@nthought.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.7 2001/06/11 01:28:07 millert Exp $
a116 1
.Pp
@


1.7
log
@<sys/memrange.h> not <memrange.h>; gphilip2@@qwest.net
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.6 2001/03/06 19:56:51 brad Exp $
d135 1
a135 1
base/length supplued.
@


1.6
log
@first sweep ...
OpenBSD -> .Ox
NetBSD -> .Nx
FreeBSD -> .Fx
--
Ok'd by aaron@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.5 2000/07/05 13:46:53 aaron Exp $
d35 1
a35 1
.Aq Pa memrange.h
@


1.5
log
@man4.i386 repairs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.4 2000/04/03 21:19:38 aaron Exp $
d148 2
a149 1
support was originally included in FreeBSD 3.3.
@


1.4
log
@Remove trailing whitespace.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.3 1999/12/23 15:34:35 aaron Exp $
d27 2
a28 1
memory.  These attributes can be manipulated via
d38 2
a39 1
architectures.  The full set of supported attributes is:
d41 1
a41 1
.It MDF_UNCACHEABLE
d43 1
a43 1
.It MDF_WRITECOMBINE
d45 1
a45 1
.It MDF_WRITETHROUGH
d47 1
a47 1
.It MDF_WRITEBACK
d49 1
a49 1
.It MDF_WRITEPROTECT
d68 1
a68 1
.It MDF_FIXBASE
d70 1
a70 1
.It MDF_FIXLEN
d72 3
a74 3
.It MDF_FIRMWARE
The region is believed to have been established by the system firmare.
.It MDF_ACTIVE
d76 1
a76 1
.It MDF_BOGUS
d78 1
a78 1
.It MDF_FIXACTIVE
d80 1
a80 1
.It MDF_BUSY
d95 2
a96 1
ioctl is used to retrieve current memory range attributes. If
d99 2
a100 1
descriptors.  If greater than 0, the array at
d107 5
a111 2
ioctl is used to add, alter and remove memory range attributes.  A range
with the MDF_FIXACTIVE flag may not be removed; a range with the MDF_BUSY
d123 1
a123 1
No memory range descriptors are available (eg. firmware has not enabled
d132 1
a132 1
resources (eg. descriptor slots).
@


1.3
log
@Repair .Nd descriptor; wilfried@@commentor.se
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.2 1999/11/24 02:21:34 deraadt Exp $
d22 2
a23 2
device provides access to the memory range attributes supported by the 
MTRRs on Pentiums. 
d30 2
a31 2
.Pa /dev/mem 
or 
d79 1
a79 1
The region is currently owned by another process and may not be 
d101 1
a101 1
The 
d107 1
a107 1
.Fa mo_arg[0] 
@


1.2
log
@clean
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrr.4,v 1.1 1999/11/20 11:11:28 matthieu Exp $
d16 1
a16 1
.Nd driver for cpu performance counters
d23 1
a23 1
MTRRs on pentiums. 
d30 1
a30 1
.Nm /dev/mem 
d32 1
a32 1
.Nm /dev/xf86 .
d34 1
a34 1
.Pa <memrange.h>
d136 1
@


1.1
log
@add MTRR support from FreeBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d38 1
a38 1
.Bl -tag -width 10
d52 7
a58 6
.Fa struct mem_range_desc :
.Bd -literal -offset indent
u_int64_t	mr_base;	/\(** physical base address \(**/
u_int64_t	mr_len;		/\(** physical length of region \(**/
int		mr_flags;	/\(** attributes of region \(**/
char		mr_owner[8];
d65 1
a65 1
.Bl -tag -width 10
d84 5
a88 4
.Fa struct mem_range_op :
.Bd -literal -offset indent
struct mem_range_desc	*mo_desc;
int			mo_arg[2];
d112 2
a113 2
.Bl -tag -width 10
.It EOPNOTSUPP
d115 1
a115 1
.It ENXIO
d118 1
a118 1
.It EINVAL
d121 1
a121 1
.It EBUSY
d123 1
a123 1
.It ENOSPC
d126 1
a126 1
.It ENOENT
d129 1
a129 1
.It EPERM
@

