head	1.23;
access;
symbols
	OPENBSD_6_2_BASE:1.23
	OPENBSD_6_1:1.23.0.38
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.23.0.36
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.23.0.24
	OPENBSD_5_9_BASE:1.23
	OPENBSD_5_8:1.23.0.32
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.30
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.23.0.28
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.23.0.26
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.23.0.22
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.23.0.20
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.23.0.18
	OPENBSD_5_2_BASE:1.23
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.16
	OPENBSD_5_0:1.23.0.14
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.23.0.12
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.23.0.10
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.23.0.6
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.23.0.8
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.23.0.4
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.23.0.2
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.22.0.4
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.21.0.6
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.4
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.2
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.19.0.4
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.2
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.18.0.4
	OPENBSD_3_6_BASE:1.18
	OPENBSD_3_5:1.18.0.2
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	OPENBSD_3_3:1.16.0.2
	OPENBSD_3_3_BASE:1.16
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.12.0.4
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3;
locks; strict;
comment	@.\" @;


1.23
date	2008.07.01.04.14.57;	author ray;	state Exp;
branches;
next	1.22;

1.22
date	2007.05.31.19.19.55;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2005.12.06.12.43.59;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2005.12.05.15.20.21;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	2004.09.26.20.22.37;	author mickey;	state Exp;
branches;
next	1.18;

1.18
date	2003.11.09.16.06.07;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.06.10.29.42;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2003.03.17.10.06.07;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.07.09.39.07;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2002.10.01.07.14.14;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2002.08.29.07.34.31;	author wcobb;	state Exp;
branches;
next	1.12;

1.12
date	2001.10.05.14.45.54;	author mpech;	state Exp;
branches;
next	1.11;

1.11
date	2001.08.03.15.21.16;	author mpech;	state Exp;
branches;
next	1.10;

1.10
date	2001.08.03.14.30.26;	author mpech;	state Exp;
branches;
next	1.9;

1.9
date	2001.04.04.21.38.11;	author rohee;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.28.19.29.23;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.28.23.04.36;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.28.22.28.49;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.28.20.55.29;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.09.18.41.34;	author krw;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.13.04.09.20;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.17.21.50.03;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2000.08.17.20.20.46;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Remove clauses 3 and 4 from BSD license owned by mickey and NetBSD.

OK mickey, deraadt.
@
text
@.\" $OpenBSD: pcibios.4,v 1.22 2007/05/31 19:19:55 jmc Exp $
.\" $NetBSD: pcibios.4,v 1.7 2000/08/03 13:32:39 soda Exp $
.\"
.\" Copyright (c) 2000 Michael Shalayeff, All rights reserved.
.\" Copyright (c) 1999, 2000 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Lennart Augustsson.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt PCIBIOS 4 i386
.Os
.Sh NAME
.Nm pcibios
.Nd introduction to PCI BIOS support
.Sh SYNOPSIS
.Cd "pcibios0 at bios0 flags 0x0000"
.\" .Cd "#option  PCIBIOS_IRQS_HINT=0x0a00 #IRQ 9,11"
.\" .Cd "#option  PCIBIOS_INTR_FIXUP_FORCE"
.Sh DESCRIPTION
.Ox
provides support for setting up PCI controllers, bridges, and devices
using information extracted from the BIOS.
.Pp
Ideally, the boot firmware of a machine (a.k.a. BIOS) should set
up all PCI devices; assigning them I/O and memory addresses and
interrupts.
Alas, this does not always happen, so there is some
PC specific code that can do the initialization when
.Ox
boots.
.Pp
Flags is a bit mask each bit of which specifies a fixup procedure to
omit.
The following list specifies these procedures and gives
flags bit values to disable them in case they cause problems.
.Bl -tag -width 0x0000
.It 0x0001
Fixup PCI I/O and memory addresses.
.Pp
Some BIOS implementations don't allocate I/O space and
memory space for all PCI devices.
Especially, a BIOS which has
.Qq PnP OS mode
enabled shows this behavior.
Since necessary space isn't allocated, those devices
will not work without special handling.
.Pp
Without this flag force allocation of I/O space and memory space
instead of relying upon the BIOS to do so.
.Pp
If necessary space is already correctly assigned to the devices,
this option leaves the space as is.
.Pp
Although many BIOS implementations leave CardBus bridges'
space unallocated, the CardBus bridge device driver doesn't
require this option, since the driver allocates necessary space
by itself.
.It 0x0002
Fixup PCI bus numbering; needed for many
.Xr cardbus 4
bridges.
.Pp
Each PCI bus and CardBus should have a unique bus number.
But some BIOS implementations don't assign a bus number
for subordinate PCI buses.
And many BIOS implementations don't assign a bus number for CardBuses.
.Pp
A typical symptom of this is the following boot message:
.D1 Sy cardbus0 at cardslot0: bus 0 device 0...
Please note that this cardbus0 has a bus number
.Sq 0 ,
but normally the bus number 0 is used by the machine's
primary PCI bus.
Thus, this bus number for cardbus is incorrect
.Pq not assigned .
In this situation, a device located in cardbus0 doesn't
show correct device ID,
because its bus number 0 incorrectly refers to the primary
PCI bus, and a device ID in the primary PCI bus is shown
in the boot message instead of the device's ID in the cardbus0.
.Pp
Without this flag force assignment of bus numbers for all subordinate
PCI buses and CardBuses.
.Pp
Since this procedure renumbers all PCI buses and CardBuses,
all bus numbers of subordinate buses become different
when this option is enabled.
.It 0x0004
Fixup PCI interrupt routing.
.Pp
Some BIOS implementations don't assign an interrupt for
some devices.
.Pp
This procedure assigns an interrupt for such devices instead
of relying upon the BIOS to do so.
.Pp
If the BIOS has already assigned an interrupt to a device, this
procedure leaves the interrupt as is.
.It 0x0008
Make PCI interrupt routing fixup work with unknown interrupt routers.
If this flag is specified and a PCI interrupt routing table entry
indicates that only one IRQ is available for the entry, the IRQ is
assumed to be already connected to the device, and the corresponding PCI
Interrupt Configuration Register will be configured accordingly.
.Pp
Without this flag, if a PCI interrupt router is not known, interrupt
configuration will not be modified.
.It 0x0010
Be verbose when performing
.Nm
tasks.
Included in these diagnostics are: PCI device address fixup tables,
interrupt fixup reports, and other diagnostic and non-fatal messages.
.It 0x0020
Make the PCI interrupt routing fixup procedure verbose.
.It 0x0040
Some buggy BIOS implementations provide inconsistent information between
the PCI Interrupt Configuration Register and the PCI Interrupt Routing table.
In such cases, the PCI Interrupt Configuration Register takes precedence
by default.
If this flag is specified the PCI Interrupt Routing table takes precedence.
.El
.\" .It Nm PCIBIOS_IRQS_HINT
.\" hint for IRQ use.
.\" When the
.\" .Em PCIBIOS_INTR_FIXUP
.\" cannot guess an adequate IRQ for a device, the hint is used.
.\" .Pp
.\" The value is a logical or of power-of-2s of allowable interrupts:
.\" .Bl -column "XX-0xffff" "XX-0xffff" "XX-0xffff" "XX-0xffff" -compact -offset 2n
.\" .It Em   "IRQ Value" Em "\tIRQ Value" Em "\tIRQ Value" Em "\tIRQ Value"
.\" .It    "\& 0 0x0001"    "\t 4 0x0010"    "\t 8 0x0100"    "\t12 0x1000"
.\" .It    "\& 1 0x0002"    "\t 5 0x0020"    "\t 9 0x0200"    "\t13 0x2000"
.\" .It    "\& 2 0x0004"    "\t 6 0x0040"    "\t10 0x0400"    "\t14 0x4000"
.\" .It    "\& 3 0x0008"    "\t 7 0x0080"    "\t11 0x0800"    "\t15 0x8000"
.\" .El
.\" For example,
.\" .Qq Sy option PCIBIOS_IRQS_HINT=0x0a00
.\" allows IRQ 9 and IRQ 11.
.\"
.\" The kernel global variable
.\" .Va pcibios_irqs_hint
.\" holds this value,
.\" so a user can override this value without kernel recompilation.
.\" For example:
.\" .Bl -bullet -compact
.\" .It
.\" To specify this value on the fly, type the following command
.\" at the boot prompt to drop into DDB (the in-kernel debugger;
.\" you have to specify
.\" .Qq Sy option DDB
.\" to make kernel with DDB):
.\" .Dl Ic boot -d
.\" And type the following command on
.\" .Qq Sy db>
.\" prompt:
.\" .Dl Ic write pcibios_irqs_hint 0x0a00
.\" Then type the following to continue to boot:
.\" .Dl Ic c
.\" .It
.\" To modify kernel image without kernel recompilation,
.\" run the following command on shell:
.\" .Dl Ic gdb --write /netbsd
.\" And type the following commands at the
.\" .Qq Sy (gdb)
.\" prompt:
.\" .Dl Ic set pcibios_irqs_hint=0xa00
.\" .Dl Ic quit
.\" .El
.\"
.Sh SEE ALSO
.Xr bios 4 ,
.Xr intro 4 ,
.Xr pci 4 ,
.Xr pci_conf_read 9 ,
.Xr pci_intr_map 9
.Sh HISTORY
The
.Nm
code appeared in
.Nx 1.5 .
.Ox
support was added in
.Ox 2.8 .
In contrast to
.Nx
implementation
.Nm
in
.Ox
is a real device, where options control is done through the
.Nm flags
which are modifiable through the
.Xr boot_config 8
interface.
For
.Ox 2.9
the PCI interrupt routing establishment sequence was redone to only
fixup and route interrupts when attaching interrupts for a particular PCI
device.
.Sh BUGS
The
.Em PCIBIOS Address Fixup
option may conflict with the PCI CardBus driver's own
address fixup.
@


1.22
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.21 2005/12/06 12:43:59 jmc Exp $
a18 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d32 1
a32 1
.Dd $Mdocdate$
@


1.21
log
@no need for `.' at end of SEE ALSO
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.20 2005/12/05 15:20:21 mickey Exp $
d39 1
a39 1
.Dd July 22, 2000
@


1.20
log
@xr more pci pages from .9
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.19 2004/09/26 20:22:37 mickey Exp $
d206 1
a206 1
.Xr pci_intr_map 9 .
@


1.19
log
@document new flag instead of the old PCIBIOS_INTR_FIXUP_FORCE option
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.18 2003/11/09 16:06:07 jmc Exp $
d204 3
a206 1
.Xr pci 4
@


1.18
log
@remove .Pp's before lists and displays;
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.17 2003/06/06 10:29:42 jmc Exp $
d146 6
a199 27
.\"
.\" .It Nm PCIBIOS_INTR_FIXUP_FORCE
.\" .Pp
.\" Some buggy BIOS implementations provide inconsistent
.\" information between the PCI Interrupt Configuration Register
.\" and the PCI Interrupt Routing table. In such case,
.\" the PCI Interrupt Configuration Register takes precedence
.\" by default. If this happens, a kernel with
.\" .Em PCIBIOSVERBOSE
.\" shows
.\" .Qq Sy WARNING: preserving irq XX
.\" in the PCI routing table.
.\"
.\" If
.\" .Em PCIBIOS_INTR_FIXUP_FORCE
.\" is specified in addition to the
.\" .Em PCIBIOS_INTR_FIXUP ,
.\" the PCI Interrupt Routing table takes precedence.
.\" In this case, a kernel with
.\" .Em PCIBIOSVERBOSE
.\" shows
.\" .Qq Sy WARNING: overriding irq XX
.\" in the PCI routing table.
.\"
.\" The necessity of this option is doubtful, and we may
.\" remove this option in the future. If you find that this
.\" option is worth preserving, please report it with send-pr.
@


1.17
log
@- section reorder
- some macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.16 2003/03/17 10:06:07 jmc Exp $
a65 1
.Pp
@


1.16
log
@more small typos;
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.15 2003/03/07 09:39:07 jmc Exp $
d49 1
a49 1
.Sh INTRODUCTION
@


1.15
log
@typos;
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.14 2002/10/01 07:14:14 miod Exp $
d243 1
a243 1
wich are modifiable through the
@


1.14
log
@Manpage cleaning police:
- more and better .Xr
- prefer "option FOO" rather than "options FOO", and put the option
  lines after the device definition lines in SYNOPSIS
- identify these manpages as section 4/i386, not section 4.
- long awaited update to intro(4/i386)
- npx(4/i386) was too NetBSD-ish - we only provide one math emulator
- random touches

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.13 2002/08/29 07:34:31 wcobb Exp $
d40 1
a40 1
.Dt PCIBIOS 4
@


1.13
log
@- replace empty lines by .Pp where appropriate.
- no empty lines at end of file.
ok mpech@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.12 2001/10/05 14:45:54 mpech Exp $
d4 1
a4 1
.\" Copyright (c) 2000 Michale Shalayeff, All rights reserved.
d47 2
a48 2
.\" .Cd "#options  PCIBIOS_IRQS_HINT=0x0a00 #IRQ 9,11"
.\" .Cd "#options  PCIBIOS_INTR_FIXUP_FORCE"
d163 1
a163 1
.\" .Qq Sy options PCIBIOS_IRQS_HINT=0x0a00
d176 1
a176 1
.\" .Qq Sy options DDB
d224 2
a225 2
.Xr autoconf 4 ,
.Xr cardbus 4 ,
@


1.12
log
@Powered by @@mantoya:
o) start new sentence on a new line;
o) minor mdoc fixes;
millert@@ ok

Tip of the day:   www.mpechismazohist.com
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.11 2001/08/03 15:21:16 mpech Exp $
a147 1

@


1.11
log
@o) We don't like .Pp before/after .Sh;
o) .Nm always has argument in .Sh SYNOPSIS;
o) We always closes .Bl and .Bd tags;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.10 2001/08/03 14:30:26 mpech Exp $
d56 2
a57 1
interrupts.  Alas, this does not always happen, so there is some
d63 2
a64 1
omit. The following list specifies these procedures and gives
d72 2
a73 2
memory space for all PCI devices. Especially, a BIOS
which has
d96 2
a97 2
for subordinate PCI buses. And many BIOS implementations
don't assign a bus number for CardBuses.
d104 2
a105 2
primary PCI bus. Thus, this bus number for cardbus is
incorrect
@


1.10
log
@o) Remove unneeded .Nm arguments;
o) Sort SEE ALSO;
o) Minor .Nm and .Nd fixes;
o) Typo;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.9 2001/04/04 21:38:11 rohee Exp $
a48 1
.Pp
@


1.9
log
@there is no such thing as autoconf(3), but there is autoconf(4)
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.8 2001/02/28 19:29:23 mickey Exp $
d140 1
a140 1
.Nm pcibios
@


1.8
log
@spelling, found by aaron@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.7 2001/01/28 23:04:36 mickey Exp $
d224 1
a224 1
.Xr autoconf 3 ,
@


1.7
log
@replace canadish w/ english
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.6 2001/01/28 22:28:49 deraadt Exp $
d253 1
a253 1
.Em PCIBIOS Adress Fixup
@


1.6
log
@replace russlish with english; btw, are some of the descriptions of the bits backwards?
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.5 2001/01/28 20:55:29 mickey Exp $
d248 1
a248 1
the PIC interrupt routing establishment sequence was redone to only
@


1.5
log
@more new shiny flags for your pleasure, Xr autoconf
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.4 2001/01/09 18:41:34 krw Exp $
d130 5
a134 5
Make PCI interrupt routing fixup work with unknown interrupt router.
If specified and a PCI interrupt routing table entry indicates that only
one IRQ is available for the entry, the IRQ is assumed to be already
connected to the device, and corresponding PCI Interrupt
Configuration Register will be configured accordingly.
d136 2
a137 2
If a PCI interrupt router is not known, normally interrupt
configuraion will not be touched.
d139 1
a139 1
Be verbose when perfoming
d141 3
a143 3
tasks, such as print out pci devices address fixup tables,
print more information durign interrupt fixup and
other diagnostic and non-fatal messages.
d248 3
a250 6
PIC interrupt routing procedure was redone to only fixup and route
interrupts for attaching pci devices, this fixed several
cases of system hangs due to absent interrupt handlers
during
.Xr autoconf 4
procedures.
@


1.4
log
@Typo: ommit -> omit. Small grammatical adjustment: 'specifies which fixup procedures' -> specifies a fixup procedure'
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.3 2000/10/13 04:09:20 aaron Exp $
a46 1
.Cd "option	PCIBIOSVERBOSE"
a48 2
.\" .Cd "options   PCIBIOS_INTR_GUESS"
.\" .Cd "#options  PCIINTR_DEBUG"
d129 19
a222 23
.\" .It Nm PCIBIOS_INTR_GUESS
.\" make
.\" .Em PCIBIOS_INTR_FIXUP
.\" work with unknown interrupt router.
.\" .Pp
.\" If a PCI interrupt router is not known, normally interrupt
.\" configuraion will not be touched.
.\"
.\" But if
.\" .Em PCIBIOS_INTR_GUESS
.\" is specified in addition to the
.\" .Em PCIBIOS_INTR_FIXUP ,
.\" and if a PCI interrupt routing table entry indicates that only
.\" one IRQ is available for the entry, the IRQ is assumed to be already
.\" connected to the device, and corresponding PCI Interrupt
.\" Configuration Register will be configured accordingly.
.\"
.\" .It Nm PCIINTR_DEBUG
.\" make the
.\" .Em PCIBIOS_INTR_FIXUP
.\" procedure verbose.
.\"
.\" .El
d224 1
d246 8
@


1.3
log
@Remove unwanted trailing whitespace.
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.2 2000/08/17 21:50:03 deraadt Exp $
d65 2
a66 2
Flags is a bit mask each bit of which specifies which fixup procedures to
ommit. The following list specifies these procedures and gives
@


1.2
log
@clean
@
text
@d1 1
a1 1
.\" $OpenBSD: pcibios.4,v 1.1 2000/08/17 20:20:46 mickey Exp $
d92 1
a92 1
Fixup PCI bus numbering; needed for many 
d96 1
a96 1
Each PCI bus and CardBus should have a unique bus number. 
d109 1
a109 1
In this situation, a device located in cardbus0 doesn't 
d111 1
a111 1
because its bus number 0 incorrectly refers to the primary 
d149 1
a149 1
.\" 
d173 1
a173 1
.\" And type the following commands at the 
d179 1
a179 1
.\" 
d191 1
a191 1
.\" 
d198 1
a198 1
.\" .Em PCIBIOSVERBOSE 
d202 1
a202 1
.\" 
d206 1
a206 1
.\" 
d214 1
a214 1
.\" 
d223 1
a223 1
.\" 
d228 1
a228 1
.\" 
@


1.1
log
@pcibios manual
@
text
@d1 1
a1 1
.\" $OpenBSD$
d68 2
a69 3

.Bl -tag -width 0x0000 -offset 3n

d71 1
a71 1
fixup PCI I/O and memory addresses.
d74 4
a77 4
memory space for some PCI devices. Especially, a BIOS
which is
.Qq PnP OS mode enabled
shows this behavior.
d80 1
a80 1

d83 1
a83 1

d86 1
a86 1

a90 1

d92 1
a92 1
fixup PCI bus numbering; needed for many 
d100 1
a100 1

d114 1
a114 1

d117 1
a117 1

a120 1

d122 1
a122 1
fixup PCI interrupt routing.
d126 1
a126 1

d129 1
a129 1

a131 1

@

