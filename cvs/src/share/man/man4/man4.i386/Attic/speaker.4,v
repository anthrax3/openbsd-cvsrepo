head	1.16;
access;
symbols
	OPENBSD_3_7:1.15.0.6
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.4
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.4
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.4
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.16
date	2005.05.13.22.47.04;	author miod;	state dead;
branches;
next	1.15;

1.15
date	2003.11.09.16.06.07;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.06.10.29.42;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2002.10.01.07.14.14;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.08.03.14.30.26;	author mpech;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.20.18.01.36;	author angelos;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.10.20.02.18;	author todd;	state Exp;
branches;
next	1.9;

1.9
date	2000.07.05.13.46.53;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.09.23.04.12.06;	author alex;	state Exp;
branches;
next	1.7;

1.7
date	99.07.09.13.35.44;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.01.07.22.32.58;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	98.09.01.16.38.22;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.08.08.17.11.31;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.10.04.41.46;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.22.01.28.08;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.30;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Move speaker(4) to MI land.
@
text
@.\"	$OpenBSD: speaker.4,v 1.15 2003/11/09 16:06:07 jmc Exp $
.\"	$NetBSD: speaker.4,v 1.9 1998/08/18 08:16:56 augustss Exp $
.\"
.\" Copyright (c) 1993 Christopher G. Demetriou
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Christopher G. Demetriou.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd August 6, 1993
.Dt SPEAKER 4 i386
.Os
.Sh NAME
.Nm speaker
.Nd console speaker device driver
.Sh SYNOPSIS
.Cd "spkr0	at pcppi?"
.Sh DESCRIPTION
The
.Nm
device driver allows applications to control the PC console
speaker on an IBM-PC-compatible machine running UNIX.
.Pp
Only one process may have this device open at any given time;
.Xr open 2
and
.Xr close 2
are used to lock and relinquish it.
An attempt to
.Fn open
when another process has the device locked will return \-1 with an
.Er EBUSY
error indication.
Writes to the device are interpreted as
.Dq play strings
in a simple ASCII melody notation.
An
.Fn ioctl
for tone generation at arbitrary frequencies is also supported.
.Pp
Sound-generation does
.Em not
monopolize the processor; in fact, the driver
spends most of its time sleeping while the PC hardware is emitting tones.
Other processes may emit beeps while the driver is running.
.Pp
Applications may call
.Fn ioctl
on a speaker file descriptor to control the speaker driver directly;
definitions for the
.Fn ioctl
interface are in
.Aq Pa machine/spkr.h .
The
.Li tone_t
structure used in these calls has two fields,
specifying a frequency (in hz) and a duration (in 1/100ths of a second).
A frequency of zero is interpreted as a rest.
.Pp
At present there are two such ioctls.
The
.Dv SPKRTONE
ioctl accepts a pointer to a single tone structure as a third argument and
plays it.
The
.Dv SPKRTUNE
ioctl accepts a pointer to the first of an array of tone structures and plays
them in continuous sequence; this array must be terminated by a final member
with a zero duration.
.Pp
The play-string language is modelled on the PLAY statement conventions of
IBM BASIC 2.0.
The MB, MF and X primitives of PLAY are not useful in a UNIX environment and
are omitted.
The
.Dq octave-tracking
feature is also new.
.Pp
There are 84 accessible notes numbered 1-83 in 7 octaves, each running from
C to B, numbered 0-6; the scale is equal-tempered A440 and octave 3 starts
with middle C.
By default, the play function emits half-second notes with the last 1/16th
second being
.Dq rest time .
.Pp
Play strings are interpreted left to right as a series of play command groups;
letter case is ignored.
Play command groups are as follows:
.Bl -tag -width xxx
.It CDEFGAB
Letters A through G cause the corresponding note to be played in the current
octave.
A note letter may optionally be followed by an
.Dq accidental sign ,
one of
.Ql # ,
.Ql + ,
or
.Ql - ;
the first two of these cause it to be sharped one half-tone, the last causes
it to be flatted one half-tone.
It may also be followed by a time value number and by sustain dots (see below).
Time values are interpreted as for the L command below;.
.It O Aq Ar n
If
.Ar n
is numeric, this sets the current octave.
.Ar n
may also be one of
.Sq L
or
.Sq N
to enable or disable octave-tracking (it is disabled by default).
When octave-tracking is on, interpretation of a pair of letter notes will
change octaves if necessary in order to make the smallest possible jump between
notes.
Thus
.Qq olbc
will be played as
.Qq olb>c ,
and
.Qq olcb
as
.Qq olc<b .
Octave locking is disabled for one letter note following by
.Ql > ,
.Ql < ,
and
.Ql O[0123456] .
.Bd -literal -offset indent
> -- bump the current octave up one.
< -- drop the current octave down one.
.Ed
.It N Aq Ar n
Play note
.Ar n ,
.Ar n
being 1 to 84 or 0 for a rest of current time value.
May be followed by sustain dots.
.It L Aq Ar n
Sets the current time value for notes.
The default is L4, quarter notes.
The lowest possible value is 1; values up to 64 are accepted.
L1 sets whole notes, L2 sets half notes, L4 sets quarter notes, etc.
.It P Aq Ar n
Pause (rest), with
.Ar n
interpreted as for L.
May be followed by sustain dots.
May also be written
.Ql ~ .
.It T Aq Ar n
Sets the number of quarter notes per minute; default is 120.
Musical names for common tempi are:
.Bl -column Description Tempo BPM -offset indent
.Em 	Tempo		Beats per Minute
very slow	Larghissimo
        	Largo	 	40-60
         	Larghetto	60-66
        	Grave
        	Lento
        	Adagio	 	66-76
slow    	Adagietto
        	Andante	 	76-108
medium   	Andantino
        	Moderato 	108-120
fast    	Allegretto
        	Allegro	 	120-168
        	Vivace
        	Veloce
        	Presto	 	168-208
very fast	Prestissimo
.El
.It M[LNS]
Set articulation.
MN (N for normal) is the default; the last 1/8th of the note's value is rest
time.
You can set ML for legato (no rest space) or MS (staccato) 1/4 rest space.
.El
.Pp
Notes (that is, CDEFGAB or N command character groups) may be followed by
sustain dots.
Each dot causes the note's value to be lengthened by one-half for each one.
Thus, a note dotted once is held for 3/2 of its undotted value;
dotted twice, it is held 9/4, and three times would give 27/8.
.Pp
Whitespace in play strings is simply skipped and may be used to separate
melody sections.
.Sh FILES
.Bl -tag -width Pa -compact
.It Pa /dev/speaker
.El
.Sh SEE ALSO
.Xr intro 4 ,
.Xr pcppi 4
.Sh AUTHORS
.An Eric S. Raymond Aq esr@@snark.thyrsus.com ,
Feb 1990
.Sh BUGS
Due to roundoff in the pitch tables and slop in the tone-generation and timer
hardware (neither of which was designed for precision), neither pitch accuracy
nor timings will be mathematically exact.
.Pp
There is no volume control.
.Pp
In play strings which are very long (longer than your system's physical I/O
blocks) note suffixes or numbers may occasionally be parsed incorrectly due
to crossing a block boundary.
@


1.15
log
@remove .Pp's before lists and displays;
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.14 2003/06/06 10:29:42 jmc Exp $
@


1.14
log
@- section reorder
- some macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.13 2002/10/01 07:14:14 miod Exp $
a151 1
.Pp
@


1.13
log
@Manpage cleaning police:
- more and better .Xr
- prefer "option FOO" rather than "options FOO", and put the option
  lines after the device definition lines in SYNOPSIS
- identify these manpages as section 4/i386, not section 4.
- long awaited update to intro(4/i386)
- npx(4/i386) was too NetBSD-ish - we only provide one math emulator
- random touches

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.12 2001/08/03 14:30:26 mpech Exp $
d36 1
a36 1
.Nm speaker 
d42 1
a42 1
.Nm 
d218 1
a218 1
.Xr pcppi 4 .
@


1.12
log
@o) Remove unneeded .Nm arguments;
o) Sort SEE ALSO;
o) Minor .Nm and .Nd fixes;
o) Typo;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.11 2001/06/20 18:01:36 angelos Exp $
d216 3
a218 2
.\" .Sh SEE ALSO
.\" .Xr pcppi 4 .
d220 2
a221 1
Eric S. Raymond (esr@@snark.thyrsus.com) Feb 1990
@


1.11
log
@Typo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.10 2000/11/10 20:02:18 todd Exp $
d36 2
a37 1
speaker \- console speaker device driver
d41 3
a43 1
The speaker device driver allows applications to control the PC console
@


1.10
log
@.Sh AUTHOR -> AUTHORS, ok aaron@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.9 2000/07/05 13:46:53 aaron Exp $
d50 1
a50 1
whenanother process has the device locked will return \-1 with an
@


1.9
log
@man4.i386 repairs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.8 1999/09/23 04:12:06 alex Exp $
d215 1
a215 1
.Sh AUTHOR
@


1.8
log
@Typo fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.7 1999/07/09 13:35:44 aaron Exp $
a38 2
.Fd #include <machine/spkr.h>
.Pa /dev/speaker
d43 33
a75 14
Only one process may have this device open at any given time; open() and
close() are used to lock and relinquish it. An attempt to open() when
another process has the device locked will return -1 with an EBUSY error
indication. Writes to the device are interpreted as 'play strings' in a
simple ASCII melody notation. An ioctl() for tone generation at arbitrary
frequencies is also supported.
.Pp
Sound-generation does \fInot\fR monopolize the processor; in fact, the driver
spends most of its time sleeping while the PC hardware is emitting
tones. Other processes may emit beeps while the driver is running.
.Pp
Applications may call ioctl() on a speaker file descriptor to control the
speaker driver directly; definitions for the ioctl() interface are in
<machine/spkr.h>. The tone_t structure used in these calls has two fields,
d79 10
a88 5
At present there are two such ioctls. SPKRTONE accepts a pointer to a
single tone structure as third argument and plays it. SPKRTUNE accepts a
pointer to the first of an array of tone structures and plays them in
continuous sequence; this array must be terminated by a final member with
a zero duration.
d91 6
a96 2
IBM BASIC 2.0. The MB, MF and X primitives of PLAY are not useful in a UNIX
environment and are omitted. The `octave-tracking' feature is also new.
d100 4
a103 2
with middle C. By default, the play function emits half-second notes with the
last 1/16th second being `rest time'.
d106 27
a132 11
letter case is ignored. Play command groups are as follows:
.Pp
CDEFGAB -- letters A through G cause the corresponding note to be played in the
current octave. A note letter may optionally be followed by an \fIaccidental
sign\fR, one of # + or -; the first two of these cause it to be sharped one
half-tone, the last causes it to be flatted one half-tone. It may also be
followed by a time value number and by sustain dots (see below). Time values
are interpreted as for the L command below;.
.Pp
O <n> -- if <n> is numeric, this sets the current octave. <n> may also be one
of 'L' or 'N' to enable or disable octave-tracking (it is disabled by default).
d135 14
a148 2
notes. Thus "olbc" will be played as "olb>c", and "olcb" as "olc<b". Octave
locking is disabled for one letter note following by >, < and O[0123456].
d150 1
a151 1
.Pp
d153 16
a168 2
.Pp
N <n> -- play note n, n being 1 to 84 or 0 for a rest of current time value.
d170 5
a174 10
.Pp
L <n> -- sets the current time value for notes. The default is L4, quarter
notes. The lowest possible value is 1; values up to 64 are accepted. L1 sets
whole notes, L2 sets half notes, L4 sets quarter notes, etc..
.Pp
P <n> -- pause (rest), with <n> interpreted as for L. May be followed by
sustain dots. May also be written '~'.
.Pp
T <n> -- Sets the number of quarter notes per minute; default is 120. Musical
names for common tempi are:
d194 6
a199 4
.Pp
M[LNS] -- set articulation. MN (N for normal) is the default; the last 1/8th of
the note's value is rest time. You can set ML for legato (no rest space) or
MS (staccato) 1/4 rest space.
d202 3
a204 2
sustain dots. Each dot causes the note's value to be lengthened by one-half
for each one. Thus, a note dotted once is held for 3/2 of its undotted value;
d209 8
a226 8
.Sh FILES
.Bl -tag -width Pa -compact
.It Pa /dev/speaker
.El
.\" .Sh SEE ALSO
.\" .Xr pcppi 4 .
.Sh AUTHOR
Eric S. Raymond (esr@@snark.thyrsus.com) Feb 1990
@


1.7
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.6 1999/01/07 22:32:58 niklas Exp $
d99 1
a99 1
May be followedv by sustain dots.
@


1.6
log
@Man page changes for the midi integration
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.9 1998/08/18 08:16:56 augustss Exp $
d69 1
a69 1
IBM BASIC 2.0. The MB, MF and X primitives of PLAY are not useful in a UNIX 
d112 1
a112 1
very slow	Larghissimo	
d115 2
a116 2
        	Grave       	
        	Lento       	
d118 1
a118 1
slow    	Adagietto    	
d120 1
a120 1
medium   	Andantino	
d122 1
a122 1
fast    	Allegretto	
d124 2
a125 2
        	Vivace    	
        	Veloce    	
d127 1
a127 1
very fast	Prestissimo	
d137 1
a137 1
dotted twice, it is held 9/4, and three times would give 27/8. 
@


1.5
log
@more man page fixes; aaron@@ug.cs.dal.ca
@
text
@d1 2
a2 1
.\"	$OpenBSD: speaker.4,v 1.4 1996/08/08 17:11:31 deraadt Exp $
d38 1
a38 1
.Cd "spkr0	at pckbd? port 0x61"
d99 1
a99 1
May be followed by sustain dots.
d155 2
@


1.4
log
@slight update
@
text
@d1 1
a1 1
.\"	$OpenBSD: speaker.4,v 1.3 1996/06/10 04:41:46 deraadt Exp $
d98 1
a98 1
May be followedv by sustain dots.
@


1.3
log
@add iy(4)
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d33 1
a33 1
.Os NetBSD 0.8a
@


1.2
log
@sync with netbsd 960418
@
text
@@


1.1
log
@Initial revision
@
text
@d1 1
a30 2
.\"	$Id: speaker.4,v 1.4 1994/01/29 01:43:26 jtc Exp $
.\"
d37 3
a39 1
.Cd "pseudo-device speaker"
d57 1
a57 1
machine/spkr.h. The tone_t structure used in these calls has two fields,
d143 3
a145 1
nor timings will be mathematically exact. There is no volume control.
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
