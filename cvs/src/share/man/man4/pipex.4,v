head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.6
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.6.0.8
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5;
locks; strict;
comment	@.\" @;


1.10
date	2015.09.22.11.27.13;	author sobrado;	state Exp;
branches;
next	1.9;
commitid	jNDUbGiCRtRZHFGD;

1.9
date	2015.09.14.17.09.26;	author schwarze;	state Exp;
branches;
next	1.8;
commitid	S61RkPHYGNo5TpDc;

1.8
date	2015.06.23.06.21.53;	author yasuoka;	state Exp;
branches;
next	1.7;
commitid	wSvhECeUhFfvzGN3;

1.7
date	2015.06.12.20.33.06;	author schwarze;	state Exp;
branches;
next	1.6;
commitid	a9OEbG8pTUXfMlZE;

1.6
date	2014.01.25.20.16.32;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2013.01.29.15.42.20;	author yasuoka;	state Exp;
branches;
next	1.4;

1.4
date	2013.01.24.09.18.04;	author giovanni;	state Exp;
branches;
next	1.3;

1.3
date	2012.09.20.16.29.01;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2012.09.20.12.05.21;	author yasuoka;	state Exp;
branches;
next	1.1;

1.1
date	2012.09.19.18.30.03;	author yasuoka;	state Exp;
branches;
next	;


desc
@@


1.10
log
@typos: mastter -> master, mandoatory -> mandatory.
@
text
@.\"	$OpenBSD: pipex.4,v 1.9 2015/09/14 17:09:26 schwarze Exp $
.\"
.\" Copyright (c) 2012 YASUOKA Masahiko <yasuoka@@openbsd.org>
.\" Copyright (c) 2010 SUENAGA Hiroki <hsuenaga@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: September 14 2015 $
.Dt PIPEX 4
.Os
.Sh NAME
.Nm pipex
.Nd PPP IP EXtension to handle IP/PPP frames in-kernel
.Sh SYNOPSIS
.Cd "option PIPEX"
.Pp
.In sys/socket.h
.In sys/ioctl.h
.In net/pipex.h
.Sh DESCRIPTION
.Nm
is used with
.Xr tun 4
and
.Xr pppx 4 ,
and handles PPP frames and forwards IP packets in-kernel.
It accelerates the performance of packet forwarding, because it reduces
copying of packets between kernel and userland.
.Nm
is disabled by default.
To enable it, set
.Va net.pipex.enable
to
.Sq 1
using
.Xr sysctl 8 .
.Pp
.Nm
adds some extensions to the
.Xr ioctl 2
requests to
.Xr tun 4
or
.Xr pppx 4
devices.
The added requests are as follows:
.Bl -tag -width Ds
.It Dv PIPEXGMODE    Fa "int *"
Get the devices's
.Nm
operation mode.
1 to enable
.Nm
on this device; 0 to disable.
.It Dv PIPEXSMODE    Fa "int *"
Set the device's
.Nm
operation mode.
1 to enable
.Nm
on this device; 0 to disable.
.It Dv PIPEXASESSION Fa "struct pipex_session_req *"
Add a new PPP session to be handled by
.Nm .
The status of the session is passed as a
.Vt pipex_session_req
structure.
The
.Vt pipex_session_req
structure has the following definition:
.Bd -literal
struct pipex_session_req {
    int         pr_protocol;         /* tunnel protocol  */
#define PIPEX_PROTO_L2TP   1         /* protocol L2TP */
#define PIPEX_PROTO_PPTP   2         /* protocol PPTP */
#define PIPEX_PROTO_PPPOE  3         /* protocol PPPoE */
    uint16_t    pr_session_id;       /* session-id */
    uint16_t    pr_peer_session_id;  /* peer's session-id */
    uint32_t    pr_ppp_flags;        /* ppp configuration flags */
#define PIPEX_PPP_ACFC_ACCEPTED  0x0001 /* ACFC accepted */
#define PIPEX_PPP_PFC_ACCEPTED   0x0002 /* PFC accepted */
#define PIPEX_PPP_ACFC_ENABLED   0x0004 /* ACFC enabled */
#define PIPEX_PPP_PFC_ENABLED    0x0008 /* PFC enabled */
#define PIPEX_PPP_MPPE_ACCEPTED  0x0010 /* MPPE accepted */
#define PIPEX_PPP_MPPE_ENABLED   0x0020 /* MPPE enabled */
#define PIPEX_PPP_MPPE_REQUIRED  0x0040 /* MPPE is required */
#define PIPEX_PPP_HAS_ACF        0x0080 /* has ACF */
#define PIPEX_PPP_ADJUST_TCPMSS  0x0100 /* do tcpmss adjustment */
#define PIPEX_PPP_INGRESS_FILTER 0x0200 /* do ingress filter */
    int8_t      pr_ccp_id;           /* ccp current packet id */
    int         pr_ppp_id;           /* ppp id. */
    uint16_t    pr_peer_mru;         /* peer's mru */
    uint16_t    pr_timeout_sec;      /* idle timer */

    struct in_addr      pr_ip_srcaddr;    /* local IP address.
					     not used by tun(4) */
    struct in_addr      pr_ip_address;    /* framed IP address */
    struct in_addr      pr_ip_netmask;    /* framed IP netmask */
    struct sockaddr_in6 pr_ip6_address;   /* framed IPv6 address */
    int                 pr_ip6_prefixlen; /* framed IPv6 prefix
                                             length */
    union {
        struct {
            uint32_t snd_nxt;         /* send next */
            uint32_t rcv_nxt;         /* receive next */
            uint32_t snd_una;         /* unacked */
            uint32_t rcv_acked;       /* recv acked */
            int winsz;                /* window size */
            int maxwinsz;             /* max window size */
            int peer_maxwinsz;        /* peer's max window size */
        } pptp;
        struct {
            /* select protocol options: 1 for enable */
            uint32_t option_flags;
    #define PIPEX_L2TP_USE_SEQUENCING  0x00000001
                                      /* use sequence number
					 on L2TP data messages */

            uint16_t tunnel_id;       /* our tunnel-id */
            uint16_t peer_tunnel_id;  /* peer's tunnel-id */
            uint32_t ns_nxt;          /* send next */
            uint32_t nr_nxt;          /* receive next */
            uint32_t ns_una;          /* unacked */
            uint32_t nr_acked;        /* recv acked */
            uint32_t ipsecflowinfo;   /* IPsec flow id for NAT-T */
        } l2tp;
        struct {
            char over_ifname[IF_NAMESIZE];
                                      /* ethernet ifname */
        } pppoe;
    } pr_proto;
    struct sockaddr_storage  pr_peer_address;
                                      /* peer address of tunnel */
    struct sockaddr_storage  pr_local_address;
				      /* our address of tunnel */
    struct pipex_mppe_req    pr_mppe_recv;
				      /* mppe key for receive */
    struct pipex_mppe_req    pr_mppe_send;
				      /* mppe key for send */
};
.Ed
.Pp
The
.Vt pipex_mppe_req
structure that was used by
.Va pr_mppe_recv
and
.Va pr_mppe_send
has the following definition:
.Bd -literal
struct pipex_mppe_req {
    int16_t  stateless;            /* mppe key mode.
                                      1 for stateless */
    int16_t  keylenbits;           /* mppe key length(in bits)*/
    u_char   master_key[PIPEX_MPPE_KEYLEN];
                                   /* mppe master key */
};
.Ed
.It Dv PIPEXDSESSION Fa "struct pipex_session_close_req *"
Delete the specified session from the kernel.
Specify the session using a
.Vt pipex_session_stat_req
structure, which has the following definition:
.Bd -literal
struct pipex_session_stat_req {
    int                      psr_protocol;   /* tunnel protocol */
    uint16_t                 psr_session_id; /* session-id */
    struct pipex_statistics  psr_stat;       /* statistics */
};
.Ed
.Pp
The
.Va psr_protocol
and
.Va psr_session_id
fields used to specify the session are mandatory.
On successful return, the
.Va psr_stat
field is filled by the kernel.
See
.Dv PIPEXGSTAT
section for a description of the
.Vt pipex_statistics
structure.
.It Dv PIPEXCSESSION Fa "struct pipex_session_config_req *"
Change the configuration of the specified session.
The session and configuration are specified by a
.Vt pipex_session_config_req
structure, which has the following definition:
.Bd -literal
struct pipex_session_config_req {
    int       pcr_protocol;           /* tunnel protocol  */
    uint16_t  pcr_session_id;         /* session-id */
    int       pcr_ip_forward;         /* ip_forwarding on/off */
};
.Ed
.It Dv PIPEXGSTAT    Fa "struct pipex_session_stat_req *"
Get statistics for the specified session.
Specify the session using a
.Vt pipex_session_stat_req
structure, which has the following definition:
.Bd -literal
struct pipex_session_stat_req {
    int                      psr_protocol;   /* tunnel protocol */
    uint16_t                 psr_session_id; /* session-id */
    struct pipex_statistics  psr_stat;       /* statistics */
};
.Ed
.Pp
The
.Va psr_protocol
and
.Va psr_session_id
fields used to specify the session are mandatory.
On successful return, the
.Va psr_stat
field is filled by the kernel.
The
.Vt pipex_statistics
structure has the following definition:
.Bd -literal
struct pipex_statistics {
    uint32_t ipackets;   /* packets received from tunnel */
    uint32_t ierrors;    /* error packets received from tunnel */
    uint64_t ibytes;     /* number of received bytes from tunnel */
    uint32_t opackets;   /* packets sent to tunnel */
    uint32_t oerrors;    /* error packets on sending to tunnel */
    uint64_t obytes;     /* number of sent bytes to tunnel */

    uint32_t idle_time;  /* idle time in seconds */
};
.Ed
.It Dv PIPEXGCLOSED  Fa "struct pipex_session_list_req *"
Get a list of closed sessions.
.Nm
reserves closed sessions for 30 seconds
for userland programs to get statistical information.
On successful return,
the
.Vt pipex_session_list_req
structure is filled by the kernel.
The structure has the following definition.
.Bd -literal
struct pipex_session_list_req {
    uint8_t  plr_flags;
#define PIPEX_LISTREQ_MORE         0x01      /* has more session */
    int      plr_ppp_id_count;               /* count of PPP id */
    int      plr_ppp_id[PIPEX_MAX_LISTREQ];  /* PPP id */
};
.Ed
.It Dv PIPEXSIFDESCR Fa "struct pipex_session_descr_req *"
Set the
.Xr pppx 4
interface's description of the session.
This command doesn't work on
.Xr tun 4
devices.
Specify the session and its description using a
.Vt pipex_session_descr_req
structure, which has the following definition:
.Bd -literal
struct pipex_session_descr_req {
    int       pdr_protocol;           /* tunnel protocol */
    uint16_t  pdr_session_id;         /* session-id */
    char      pdr_descr[IFDESCRSIZE]; /* description */
};
.Ed
.El
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr pppx 4 ,
.Xr tun 4 ,
.Xr npppd 8 ,
.Xr sysctl 8
.Sh AUTHORS
The
.Nm
was written by
.An Internet Initiative Japan Inc.
@


1.9
log
@convert .Fd #include to .In
@
text
@d1 1
a1 1
.\"	$OpenBSD: pipex.4,v 1.8 2015/06/23 06:21:53 yasuoka Exp $
d18 1
a18 1
.Dd $Mdocdate: June 23 2015 $
d166 1
a166 1
                                   /* mppe mastter key */
d224 1
a224 1
fields used to specify the session are mandoatory.
@


1.8
log
@Fix the links to pppx(4).

diff from Fabian Raetz.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pipex.4,v 1.7 2015/06/12 20:33:06 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: June 12 2015 $
d27 3
a29 3
.Fd #include <sys/socket.h>
.Fd #include <sys/ioctl.h>
.Fd #include <net/pipex.h>
@


1.7
log
@Add a missing .An macro.
Found by Enrico <Camarda at amnz dot org>
during the BSDCan Doc Sprint.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pipex.4,v 1.6 2014/01/25 20:16:32 deraadt Exp $
d18 1
a18 1
.Dd $Mdocdate: January 25 2014 $
d35 1
a35 2
.\" .Xr pppx 4 ,
pppx,
d54 1
a54 2
.\" .Xr pppx 4
pppx
d263 1
a263 2
.\" .Xr pppx 4
pppx
@


1.6
log
@PPP not Ppp
@
text
@d1 1
a1 1
.\"	$OpenBSD: pipex.4,v 1.5 2013/01/29 15:42:20 yasuoka Exp $
d18 1
a18 1
.Dd $Mdocdate: January 29 2013 $
d291 2
a292 1
was written by Internet Initiative Japan Inc.
@


1.5
log
@Add pppx.4 and enable links to it.

ok dlg@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pipex.4,v 1.4 2013/01/24 09:18:04 giovanni Exp $
d18 1
a18 1
.Dd $Mdocdate: January 24 2013 $
d23 1
a23 1
.Nd Ppp IP EXtension to handle IP/PPP frames in-kernel
@


1.4
log
@
typo in #include
@
text
@d1 1
a1 1
.\"	$OpenBSD: pipex.4,v 1.3 2012/09/20 16:29:01 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: September 20 2012 $
d284 1
a284 1
.\" .Xr pppx 4 ,
@


1.3
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pipex.4,v 1.2 2012/09/20 12:05:21 yasuoka Exp $
d29 1
a29 1
.Fd #include <net/piepx.h>
@


1.2
log
@don't use link to npppd(8) and pppx(4) until they are ready.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pipex.4,v 1.1 2012/09/19 18:30:03 yasuoka Exp $
d18 1
a18 1
.Dd $Mdocdate: September 19 2012 $
d23 1
a23 1
.Nd "Ppp IP EXtension to handle IP/PPP frames in-kernel"
a24 1
.Cd 
a30 1
The
d32 1
a32 1
used with
d35 1
a35 1
\." .Xr pppx 4 ,
d37 3
a39 5
and it handles PPP frames and forwards IP packets in-kernel.
This accelerates the performance of packet forwarding, because it reduces
copy of packets between kernel and userland.
.Pp
The
d42 1
a42 1
To enable it, set the
d44 4
a47 4
to `1' by
.Xr sysctl 8
or
.Xr sysctl.conf 5 .
a48 1
The
d50 3
a52 1
add extensional ioctl request to
d55 1
a55 1
\." .Xr pppx 4
d57 2
a58 4
device.
Added
.Xr ioctl 2
requests are following:
d60 1
a60 1
.It Dv PIPEXSMODE    Fa "int *"
d62 1
a62 1
.Nm 
d64 1
a64 1
1 for enable
d66 2
a67 2
on this device, 0 for disable.
.It Dv PIPEXGMODE    Fa "int *"
d69 1
a69 1
.Nm 
d71 1
a71 1
1 for enable
d73 1
a73 1
on this device, 0 for disable.
d75 1
a75 1
Add a new PPP sesssion to be handled by the
d77 1
a77 1
The status of the session pass by
d82 1
a82 2
has following definition.
.Pp
d144 1
a144 1
    struct sockaddr_storage  pr_peer_address; 
d156 1
a156 1
.Vt pipex_mppe_req 
d161 1
a161 1
has following definition:
d167 1
a167 1
    u_char   master_key[PIPEX_MPPE_KEYLEN]; 
d173 3
a175 3
Specify the session by
.Vt pipex_session_stat_req 
structure that has following definition:
d184 1
a184 1
It's required to fill
d186 1
a186 1
field and 
d188 2
a189 2
field to specify the session.
On successfully returned, the
d194 2
a195 2
section for
.Vt pipex_statistics  
d198 4
a201 4
Change configuration of the specified session.
The session and configuration are specified by
.Vt pipex_session_config_req 
structure that has following definition:
d210 2
a211 2
Get a statistics information of the specified session.
Specify the session by
d213 1
a213 1
structure that has following definition:
d222 1
a222 1
It's required to fill
d224 1
a224 1
field and 
d226 2
a227 2
field to specify the session.
On successfully returned, the
d232 1
a232 1
structure has following definition:
d238 1
a238 1
    uint32_t opackets;   /* packets sent to tunnel */  
d246 1
a246 2
Get list of closed sessions.
The
d248 5
a252 5
reserves closed sessions for 30 seconds for userland program to get statistics
information.
On successfully returned,
The
.Vt pipex_session_list_req 
d254 1
a254 1
The structure has following definition.
d265 1
a265 1
\." .Xr pppx 4
d270 4
a273 4
device.
Specify the session and the description by
.Vt pipex_session_descr_req 
structure that has following definition:
d283 4
a286 5
.Xr ioctl 2
.Xr tun 4
.\" .Xr pppx 4
.Xr sysctl.conf 5
.\" .Xr npppd 8
@


1.1
log
@add pipex(4) man page.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d18 1
a18 1
.Dd $Mdocdate$
d37 2
a38 1
.Xr pppx 4 ,
d58 2
a59 1
.Xr pppx 4
d272 2
a273 1
.Xr pppx 4
d294 1
a294 1
.Xr npppd 8
@

