head	1.5;
access;
symbols
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.10
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.8
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.6
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2002.12.31.16.35.36;	author miod;	state dead;
branches;
next	1.4;

1.4
date	2001.10.05.14.45.54;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.22.02.17.55;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.06.05.13.18.36;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	97.01.13.00.29.27;	author kstailey;	state Exp;
branches;
next	;


desc
@@


1.5
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@.\"	$OpenBSD: leds.4,v 1.4 2001/10/05 14:45:54 mpech Exp $
.\"
.Dd March 2, 1996
.Dt LEDS 4 sun3
.Os
.Sh NAME
.Nm leds
.Nd back-panel LEDs
.Sh DESCRIPTION
The file
.Pa /dev/leds
is an interface to the diagnostic array of 8 light-emitting diodes on
the back of the computer.
.Pp
This file contains two
.Li unsigned int Ns s
(in native byte order, as would be written by passing the address of an
.Sy unsigned int
to
.Xr write 2 ,
which on a Sun-3 means big-endian), followed by a string of bytes.
The string of bytes gives the successive patterns to be displayed on the
LEDs; each byte's bits are taken and used to drive the LEDs.
A 0 bit illuminates the corresponding LED; a 1 bit leaves the corresponding
LED dark.
The first
.Li unsigned int
gives the number of clock ticks that are skipped after each pattern is
loaded before the next is loaded.
For example, if this value is 0, a new pattern is loaded each clock tick;
if it is 3, a new pattern will be loaded every fourth clock tick (i.e., three
ticks will be skipped between loads).
The second
.Li unsigned int
gives the number of patterns in the list, that is, the number of bytes
following the two
.Li unsigned int Ns s.
.Pp
There are limits on the two integer values; attempting a write that
would cause either of them to take on too large a value causes the
write to return EIO without affecting anything.
The limits are compiled into the kernel; as of this writing, the first one
can be at most 128, the second at most 10240.
.Sh EXAMPLES
This example displays a single lit LED scrolling from one end of the
display to the other, over and over, moving every six clock ticks.
The first eight bytes supply the two
.Li unsigned int Ns s
mentioned above; the other eight specify the patterns.
(Convert them to binary, and remember that 0 bits mean lit LEDs.)
.Bd -ragged -offset -ident
# echo 0 0 0 5 0 0 0 8 254 253 250 247 239 223 175 127 |
  awk '{ for (i=1;i<=NF;i++) printf("%c",$i+0); }' > /dev/leds
.Ed
.Sh FILES
.Bl -tag -width /dev/leds -compact
.It Pa /dev/leds
.El
.Sh HISTORY
.Pa /dev/leds
appeared in post-2.0 OpenBSD.
@


1.4
log
@Powered by @@mantoya:
o) start new sentence on a new line;
o) minor mdoc fixes;
millert@@ ok

Tip of the day:   www.mpechismazohist.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: leds.4,v 1.3 2000/01/22 02:17:55 aaron Exp $
@


1.3
log
@ie. -> i.e.,
@
text
@d1 1
a1 1
.\"	$OpenBSD: leds.4,v 1.2 1999/06/05 13:18:36 aaron Exp $
d21 6
a26 5
which on a Sun-3 means big-endian), followed by a string of bytes.  The
string of bytes gives the successive patterns to be displayed on the
LEDs; each byte's bits are taken and used to drive the LEDs.  A 0 bit
illuminates the corresponding LED; a 1 bit leaves the corresponding LED
dark.  The first
d29 5
a33 4
loaded before the next is loaded.  For example, if this value is 0, a
new pattern is loaded each clock tick; if it is 3, a new pattern will
be loaded every fourth clock tick (i.e., three ticks will be skipped
between loads).  The second
d41 3
a43 3
write to return EIO without affecting anything.  The limits are
compiled into the kernel; as of this writing, the first one can be at
most 128, the second at most 10240.
d46 2
a47 2
display to the other, over and over, moving every six clock ticks.  The
first eight bytes supply the two
d49 2
a50 2
mentioned above; the other eight specify the patterns.  (Convert them
to binary, and remember that 0 bits mean lit LEDs.)
@


1.2
log
@more .Os cleanup, remove some trailing whitespace, cleanse some .Nm
@
text
@d1 1
a1 1
.\"	$OpenBSD: leds.4,v 1.1 1997/01/13 00:29:27 kstailey Exp $
d30 1
a30 1
be loaded every fourth clock tick (ie, three ticks will be skipped
@


1.1
log
@back-panel LED control device derived from code by der Mouse
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d5 1
a5 1
.Os OpenBSD 2.0
d11 1
a11 1
.Nm /dev/leds
d16 1
a16 1
.Sy unsigned int Ns s
d26 1
a26 1
.Sy unsigned int
d32 1
a32 1
.Sy unsigned int
d35 1
a35 1
.Sy unsigned int Ns s.
d46 1
a46 1
.Sy unsigned int Ns s
d58 1
a58 1
.Nm /dev/leds
@

