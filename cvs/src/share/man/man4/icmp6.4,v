head	1.31;
access;
symbols
	OPENBSD_6_2_BASE:1.31
	OPENBSD_6_1:1.30.0.6
	OPENBSD_6_1_BASE:1.30
	OPENBSD_6_0:1.30.0.4
	OPENBSD_6_0_BASE:1.30
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.29.0.10
	OPENBSD_5_8_BASE:1.29
	OPENBSD_5_7:1.29.0.8
	OPENBSD_5_7_BASE:1.29
	OPENBSD_5_6:1.29.0.6
	OPENBSD_5_6_BASE:1.29
	OPENBSD_5_5:1.29.0.4
	OPENBSD_5_5_BASE:1.29
	OPENBSD_5_4:1.28.0.4
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.28.0.2
	OPENBSD_5_3_BASE:1.28
	OPENBSD_5_2:1.26.0.2
	OPENBSD_5_2_BASE:1.26
	OPENBSD_5_1_BASE:1.25
	OPENBSD_5_1:1.25.0.2
	OPENBSD_5_0:1.24.0.2
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.23.0.6
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.23.0.4
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.23.0.2
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.22.0.12
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.8
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.6
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.4
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.21.0.2
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.20.0.8
	OPENBSD_4_0_BASE:1.20
	OPENBSD_3_9:1.20.0.6
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.20.0.4
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.20.0.2
	OPENBSD_3_7_BASE:1.20
	OPENBSD_3_6:1.16.0.4
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.2
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.11.0.2
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.8.0.4
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2;
locks; strict;
comment	@.\" @;


1.31
date	2017.08.03.17.36.06;	author florian;	state Exp;
branches;
next	1.30;
commitid	MoP2xHBFrsqGwwVP;

1.30
date	2016.07.16.18.55.55;	author jca;	state Exp;
branches;
next	1.29;
commitid	Ubav7MlewdSZBGC3;

1.29
date	2014.01.21.03.15.46;	author schwarze;	state Exp;
branches;
next	1.28;

1.28
date	2012.09.26.17.34.38;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2012.08.23.21.01.30;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2012.06.21.19.57.14;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2011.09.03.22.59.07;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2011.05.17.13.52.14;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2009.12.08.07.57.57;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2007.05.31.19.19.50;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2007.02.28.01.46.17;	author david;	state Exp;
branches;
next	1.20;

1.20
date	2005.01.06.03.50.46;	author itojun;	state Exp;
branches;
next	1.19;

1.19
date	2004.12.23.20.33.03;	author jaredy;	state Exp;
branches;
next	1.18;

1.18
date	2004.12.20.19.17.04;	author jaredy;	state Exp;
branches;
next	1.17;

1.17
date	2004.12.20.03.26.43;	author itojun;	state dead;
branches;
next	1.16;

1.16
date	2003.10.22.20.12.25;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.08.09.51.53;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.26.19.54.35;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.06.10.29.41;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.02.23.30.12;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.01.18.23.53.49;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.09.26.07.55.40;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.23.09.30.34;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2001.10.04.16.56.51;	author mpech;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.23.05.57.04;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.23.02.33.12;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.22.12.15.45;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.01.16.11.17;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.24.10.25.12;	author itojun;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.03.21.19.36;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.12.19.03.14.27;	author itojun;	state Exp;
branches;
next	;


desc
@@


1.31
log
@Since nearly 20 years the correct spelling of
ICMP6_DST_UNREACH_NOTNEIGHBOR is ICMP6_DST_UNREACH_BEYONDSCOPE (RFC
1885 was obsoleted).
sthen grepped the ports sources to make sure nothing uses it.
OK millert, jca
@
text
@.\"	$OpenBSD: icmp6.4,v 1.30 2016/07/16 18:55:55 jca Exp $
.\"	$KAME: icmp6.4,v 1.6 2004/12/27 05:30:56 itojun Exp $
.\"
.\" Copyright (c) 1986, 1991, 1993
.\"     The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.Dd $Mdocdate: July 16 2016 $
.Dt ICMP6 4
.Os
.Sh NAME
.Nm icmp6
.Nd Internet Control Message Protocol for IPv6
.Sh SYNOPSIS
.In sys/socket.h
.In netinet/in.h
.In netinet/icmp6.h
.Ft int
.Fn socket AF_INET6 SOCK_RAW IPPROTO_ICMPV6
.Sh DESCRIPTION
ICMPv6 is the error and control message protocol used by IPv6 and the
IPv6 protocol family (see
.Xr ip6 4
and
.Xr inet6 4 ) .
It may be accessed through a
.Dq raw socket
for network monitoring and diagnostic functions.
.Pp
The
.Fa proto
parameter to the
.Xr socket 2
call to create an ICMPv6 socket may be obtained from
.Xr getprotobyname 3 .
ICMPv6 sockets are connectionless, and are normally used with the
.Xr sendto 2
and
.Xr recvfrom 2
calls, though the
.Xr connect 2
call may also be used to fix the destination for future packets
(in which case
.Xr read 2
or
.Xr recv 2
and
.Xr write 2
or
.Xr send 2
system calls may be used).
.Pp
Outgoing packets automatically have an IPv6 header prepended to them
(based on the destination address).
Incoming packets on the socket are received with the IPv6 header and any
extension headers removed.
.Ss Types
ICMPv6 messages are classified according to the type and code fields
present in the ICMPv6 header.
The abbreviations for the types and codes may be used in rules in
.Xr pf.conf 5 .
The following types are defined:
.Bl -column "Num" "listendone" "Description" -offset indent
.It Sy Num Ta Sy "Abbrev." Ta Sy Description
.It 1 Ta unreach Ta "Destination unreachable"
.It 2 Ta toobig Ta "Packet too big"
.It 3 Ta timex Ta "Time exceeded"
.It 4 Ta paramprob Ta "Invalid IPv6 header"
.It 128 Ta echoreq Ta "Echo service request"
.It 129 Ta echorep Ta "Echo service reply"
.It 130 Ta groupqry Ta "Group membership query"
.It 130 Ta listqry Ta "Multicast listener query"
.It 131 Ta grouprep Ta "Group membership report"
.It 131 Ta listenrep Ta "Multicast listener report"
.It 132 Ta groupterm Ta "Group membership termination"
.It 132 Ta listendone Ta "Multicast listener done"
.It 133 Ta routersol Ta "Router solicitation"
.It 134 Ta routeradv Ta "Router advertisement"
.It 135 Ta neighbrsol Ta "Neighbor solicitation"
.It 136 Ta neighbradv Ta "Neighbor advertisement"
.It 137 Ta redir Ta "Shorter route exists"
.It 138 Ta routrrenum Ta "Route renumbering"
.It 139 Ta fqdnreq Ta "FQDN query"
.It 139 Ta niqry Ta "Node information query"
.It 139 Ta wrureq Ta "Who-are-you request"
.It 140 Ta fqdnrep Ta "FQDN reply"
.It 140 Ta nirep Ta "Node information reply"
.It 140 Ta wrurep Ta "Who-are-you reply"
.It 200 Ta mtraceresp Ta "mtrace response"
.It 201 Ta mtrace Ta "mtrace messages"
.El
.Pp
The following codes are defined:
.Bl -column "Num" "redironlink" "paramprob" "Description" -offset indent
.It Sy Num Ta Sy "Abbrev." Ta Sy Type Ta Sy Description
.It 0 Ta noroute-unr Ta unreach Ta "No route to destination"
.It 1 Ta admin-unr Ta unreach Ta "Administratively prohibited"
.It 2 Ta beyond-unr Ta unreach Ta "Beyond scope of source address"
.It 3 Ta addr-unr Ta unreach Ta "Address unreachable"
.It 4 Ta port-unr Ta unreach Ta "Port unreachable"
.It 0 Ta transit Ta timex Ta "Time exceeded in transit"
.It 1 Ta reassemb Ta timex Ta "Time exceeded in reassembly"
.It 0 Ta badhead Ta paramprob Ta "Erroneous header field"
.It 1 Ta nxthdr Ta paramprob Ta "Unrecognized next header"
.It 2 Ta "" Ta paramprob Ta "Unrecognized option"
.It 0 Ta redironlink Ta redir Ta "Redirection to on-link node"
.It 1 Ta redirrouter Ta redir Ta "Redirection to better router"
.El
.Ss Headers
All ICMPv6 messages are prefixed with an ICMPv6 header.
This header corresponds to the
.Vt icmp6_hdr
structure and has the following definition:
.Bd -literal -offset indent
struct icmp6_hdr {
	u_int8_t	icmp6_type;	/* type field */
	u_int8_t	icmp6_code;	/* code field */
	u_int16_t	icmp6_cksum;	/* checksum field */
	union {
		u_int32_t icmp6_un_data32[1]; /* type-specific */
		u_int16_t icmp6_un_data16[2]; /* type-specific */
		u_int8_t  icmp6_un_data8[4];  /* type-specific */
	} icmp6_dataun;
} __packed;

#define icmp6_data32	icmp6_dataun.icmp6_un_data32
#define icmp6_data16	icmp6_dataun.icmp6_un_data16
#define icmp6_data8	icmp6_dataun.icmp6_un_data8
#define icmp6_pptr	icmp6_data32[0]	/* parameter prob */
#define icmp6_mtu	icmp6_data32[0]	/* packet too big */
#define icmp6_id	icmp6_data16[0]	/* echo request/reply */
#define icmp6_seq	icmp6_data16[1]	/* echo request/reply */
#define icmp6_maxdelay	icmp6_data16[0]	/* mcast group membership*/
.Ed
.Pp
.Va icmp6_type
describes the type of the message.
Suitable values are defined in
.In netinet/icmp6.h .
.Va icmp6_code
describes the sub-type of the message and depends on
.Va icmp6_type .
.Va icmp6_cksum
contains the checksum for the message and is filled in by the
kernel on outgoing messages.
The other fields are used for type-specific purposes.
.Ss Filters
Because of the extra functionality of ICMPv6 in comparison to ICMPv4,
a larger number of messages may be potentially received on an ICMPv6
socket.
Input filters may therefore be used to restrict input to a subset of the
incoming ICMPv6 messages so only interesting messages are returned by the
.Xr recv 2
family of calls to an application.
.Pp
The
.Vt icmp6_filter
structure may be used to refine the input message set according to the
ICMPv6 type.
By default, all messages types are allowed on newly created raw ICMPv6
sockets.
The following macros may be used to refine the input set:
.Bl -tag -width Ds
.It Fn "void ICMP6_FILTER_SETPASSALL" "struct icmp6_filter *filterp"
Allow all incoming messages.
.Va filterp
is modified to allow all message types.
.It Fn "void ICMP6_FILTER_SETBLOCKALL" "struct icmp6_filter *filterp"
Ignore all incoming messages.
.Va filterp
is modified to ignore all message types.
.It Fn "void ICMP6_FILTER_SETPASS" "int type" \
    "struct icmp6_filter *filterp"
Allow ICMPv6 messages with the given
.Fa type .
.Va filterp
is modified to allow such messages.
.It Fn "void ICMP6_FILTER_SETBLOCK" "int type" \
    "struct icmp6_filter *filterp"
Ignore ICMPv6 messages with the given
.Fa type .
.Va filterp
is modified to ignore such messages.
.It Fn "int ICMP6_FILTER_WILLPASS" "int type" \
    "const struct icmp6_filter *filterp"
Determine if the given filter will allow an ICMPv6 message of the given
type.
.It Fn "int ICMP6_FILTER_WILLBLOCK" "int type" \
    "const struct icmp6_filter *filterp"
Determine if the given filter will ignore an ICMPv6 message of the given
type.
.El
.Pp
The
.Xr getsockopt 2
and
.Xr setsockopt 2
calls may be used to obtain and install the filter on ICMPv6 sockets at
option level
.Dv IPPROTO_ICMPV6
and name
.Dv ICMP6_FILTER
with a pointer to the
.Vt icmp6_filter
structure as the option value.
.Sh SEE ALSO
.Xr getsockopt 2 ,
.Xr recv 2 ,
.Xr send 2 ,
.Xr setsockopt 2 ,
.Xr socket 2 ,
.Xr getprotobyname 3 ,
.Xr inet6 4 ,
.Xr ip6 4 ,
.Xr netintro 4
.Sh STANDARDS
.Rs
.%A W. Stevens
.%A M. Thomas
.%A E. Nordmark
.%A T. Jinmei
.%D May 2003
.%R RFC 3542
.%T Advanced Sockets Application Program Interface (API) for IPv6
.Re
.Pp
.Rs
.%A A. Conta
.%A S. Deering
.%A M. Gupta
.%D March 2006
.%R RFC 4443
.%T "Internet Control Message Protocol (ICMPv6) for the Internet" \
    "Protocol Version 6 (IPv6) Specification"
.Re
@


1.30
log
@Fix sockopt name: ICMPV6_FILTER -> ICMP6_FILTER
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.29 2014/01/21 03:15:46 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: January 21 2014 $
a120 1
.It 2 Ta notnbr-unr Ta unreach Ta "Not a neighbor (obsolete)"
@


1.29
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.28 2012/09/26 17:34:38 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: September 26 2012 $
d225 1
a225 1
.Dv ICMPV6_FILTER
@


1.28
log
@last stage of rfc changes, using consistent Rs/Re blocks, and moving the
references into a STANDARDS section;
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.27 2012/08/23 21:01:30 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: August 23 2012 $
d162 1
a162 1
.Aq Pa netinet/icmp6.h .
@


1.27
log
@- rfc 4443 replaces rfc 2463
- "ipv6 node information queries" has gone from draft to rfc 4620
- while here, a readability tweak for ping6(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.26 2012/06/21 19:57:14 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: June 21 2012 $
d239 1
d249 1
@


1.26
log
@rfc 3542 obsoletes rfc 2292; ok guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.25 2011/09/03 22:59:07 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: September 3 2011 $
a239 8
.%A A. Conta
.%A S. Deering
.%T "Internet Control Message Protocol (ICMPv6) for the Internet" \
    "Protocol Version 6 (IPv6) Specification"
.%N RFC 2463
.%D December 1998
.Re
.Rs
d244 2
d247 9
a255 2
.%R RFC 3542
.%D May 2003
@


1.25
log
@make -column lists pretty again;

specifically, rewrite them to permit some markup in the column headers,
and use "Ta" instead of literal tabs; mandoc does not currently match groff
100%, but a mandoc fix may be some time off, and we've gone enough releases
with poorly formatting column lists.

in some cases i have rewritten the lists as -tag, where -column made
little sense.
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.24 2011/05/17 13:52:14 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 17 2011 $
a239 7
.%A W. Stevens
.%A M. Thomas
.%T Advanced Sockets API for IPv6
.%N RFC 2292
.%D February 1998
.Re
.Rs
d246 9
@


1.24
log
@typo fix from Andreas Bartelt;
ok mikeb
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.23 2009/12/08 07:57:57 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: December 8 2009 $
d85 2
a86 2
.Bl -column x xxxxxxxxxxxx -offset indent
.It Sy Num Ta Sy Abbrev. Ta Sy Description
d116 2
a117 3
.Bl -column x xxxxxxxxxxxx xxxxxxxx -offset indent
.It Sy Num Ta Sy Abbrev. Ta Sy Type Ta
.Sy Description
@


1.23
log
@listerner -> listener; from Brad Tilley
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.22 2007/05/31 19:19:50 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d129 1
a129 1
.It 2 Ta "" Ta redir Ta "Unrecognized option"
@


1.22
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.21 2007/02/28 01:46:17 david Exp $
d30 1
a30 1
.Dd $Mdocdate$
d98 1
a98 1
.It 132 Ta listendone Ta "Multicast listerner done"
@


1.21
log
@various spelling corrections
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.20 2005/01/06 03:50:46 itojun Exp $
d30 1
a30 1
.Dd December 20, 2004
@


1.20
log
@IPv6 manpage, wrote from scratch.  deraadt ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.19 2004/12/23 20:33:03 jaredy Exp $
d122 1
a122 1
.It 2 Ta notnbr-unr Ta unreach Ta "Not a neighbor (obselete)"
@


1.19
log
@document icmp type/code text abbreviations recognized by pfctl

prodded by John Ladwig <jladwig@@mango.lioness.net>

ok deraadt jmc
@
text
@d1 3
a3 1
.\"	$OpenBSD: icmp6.4,v 1.18 2004/12/20 19:17:04 jaredy Exp $
@


1.18
log
@add a new icmp6(4) manpage, rewritten from scratch
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d77 35
d113 19
d169 1
a169 1
.Pp
@


1.17
log
@remove manpages based on RFC.  requested by deraadt
@
text
@d1 1
a1 30
.\"	$OpenBSD: icmp6.4,v 1.16 2003/10/22 20:12:25 jmc Exp $
.\"	$KAME: icmp6.4,v 1.3 2000/11/24 08:44:40 itojun Exp $
.\"
.\" Copyright (C) 1999 WIDE Project.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the project nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
d3 1
a3 1
.\"	The Regents of the University of California.  All rights reserved.
d28 1
a28 2
.\"
.Dd December 17, 1999
d35 3
a37 3
.Fd #include <sys/socket.h>
.Fd #include <netinet/in.h>
.Fd #include <netinet/icmp6.h>
d39 1
a39 1
.Fn socket AF_INET6 SOCK_RAW proto
d41 5
a45 5
.Tn ICMPv6
is the error and control message protocol used
by
.Tn IPv6
and the Internet protocol family.
d49 1
d52 5
a56 8
parameter to the socket call to create an
.Tn ICMPv6
socket is obtained from
.Xr getprotobyname 3 ,
or you can use
.Dv IPPROTO_ICMPV6 .
.Tn ICMPv6
sockets are connectionless, and are normally used with the
d63 1
a63 1
(in which case the
d73 51
a123 4
Outgoing packets automatically have an
.Tn IPv6
header prepended to them
.Pq based on the destination address .
d125 4
a128 11
.Tn ICMPv6
pseudo-header checksum field
.Pq Li icmp6_cksum
is filled automatically by the kernel.
Incoming packets are received without the
.Tn IPv6
header or IPv6 extension headers.
Notice that this behavior is opposite to that of
.Tn IPv4
raw sockets and
.Tn ICMPv4
d130 31
a160 10
.Ss ICMPv6 type/code filter
Each
.Tn ICMPv6
raw socket has an associated filter whose datatype is defined as
.Li struct icmp6_filter ;
.Pp
This structure, along with the macros and constants defined later in
this section, are defined as a result of including the
.Aq Li netinet/icmp6.h
header.
d162 1
a162 1
The current filter is fetched and stored using
d166 2
a167 1
with a level of
d169 5
a173 90
and an option name of
.Dv ICMP6_FILTER .
.Pp
Six macros operate on an icmp6_filter structure:
.\" is "Fn" legal for macros?
.Pp
.Bl -item -compact -offset indent
.It
.Ft void
.Fn ICMP6_FILTER_SETPASSALL "struct icmp6_filter *"
.It
.Ft void
.Fn ICMP6_FILTER_SETBLOCKALL "struct icmp6_filter *"
.It
.Ft void
.Fn ICMP6_FILTER_SETPASS "int" "struct icmp6_filter *"
.It
.Ft void
.Fn ICMP6_FILTER_SETBLOCK "int" "struct icmp6_filter *"
.It
.Ft int
.Fn ICMP6_FILTER_WILLPASS "int" "const struct icmp6_filter *"
.It
.Ft int
.Fn ICMP6_FILTER_WILLBLOCK "int" "const struct icmp6_filter *"
.El
.Pp
The first argument to the last four macros
.Pq an integer
is an
.Tn ICMPv6
message type, between 0 and 255.
The pointer argument to all six
macros is a pointer to a filter that is modified by the first four
macros examined by the last two macros.
.Pp
The first two macros,
.Dv SETPASSALL
and
.Dv SETBLOCKALL ,
specify that all
.Tn ICMPv6
messages are passed to the application or that all
.Tn ICMPv6
messages are blocked from being passed to the application.
.Pp
The next two macros,
.Dv SETPASS
and
.Dv SETBLOCK ,
specify that messages of a given
.Tn ICMPv6
type should be passed to the application
or not passed to the application
.Pq blocked .
.Pp
The final two macros,
.Dv WILLPASS
and
.Dv WILLBLOCK ,
return true or false
depending on whether the specified message type is passed to the
application or blocked from being passed to the application by the
filter pointed to by the second argument.
.Pp
When an
.Tn ICMPv6
raw socket is created, it will by default pass all
.Tn ICMPv6
message types to the application.
.Pp
For further discussions see RFC 2292.
.Sh DIAGNOSTICS
A socket operation may fail with one of the following errors returned:
.Bl -tag -width [EADDRNOTAVAIL]
.It Bq Er EISCONN
when trying to establish a connection on a socket which
already has one, or when trying to send a datagram with the destination
address specified and the socket is already connected.
.It Bq Er ENOTCONN
when trying to send a datagram, but
no destination address is specified, and the socket hasn't been
connected.
.It Bq Er ENOBUFS
when the system runs out of memory for
an internal data structure.
.It Bq Er EADDRNOTAVAIL
when an attempt is made to create a
socket with a network address for which no network interface exists.
.El
d175 1
d178 3
d187 2
a188 1
.%R RFC 2292
a189 1
.%T "Advanced Sockets API for IPv6"
d194 3
a196 1
.%R RFC 2463
a197 1
.%T "Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification"
a198 7
.Sh HISTORY
The implementation is based on KAME stack
.Po
which is a descendant of WIDE hydrangea IPv6 stack kit
.Pc .
.Pp
Part of the document was shamelessly copied from RFC 2292.
@


1.16
log
@bad .Tn;
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.15 2003/08/08 09:51:53 jmc Exp $
@


1.15
log
@refer to RFCs consistently (RFC XXXX);
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.14 2003/06/26 19:54:35 jmc Exp $
d180 2
a181 1
.Tn ICMPv6 messages are passed to the application or that all
@


1.14
log
@.It macros in item lists do not take arguments ->
.It Ft void
becomes
.It
.Ft void

from wiz@@netbsd
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.13 2003/06/06 10:29:41 jmc Exp $
d144 1
d209 1
a209 1
For further discussions see RFC2292.
d237 1
a237 2
.%R RFC
.%N 2292
d244 1
a244 2
.%R RFC
.%N 2463
d254 1
a254 1
Part of the document was shamelessly copied from RFC2292.
@


1.13
log
@- section reorder
- some macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.12 2003/06/02 23:30:12 millert Exp $
d145 2
a146 1
.It Ft void
d148 2
a149 1
.It Ft void
d151 2
a152 1
.It Ft void
d154 2
a155 1
.It Ft void
d157 2
a158 1
.It Ft int
d160 2
a161 1
.It Ft int
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.11 2003/01/18 23:53:49 deraadt Exp $
d222 1
a223 1
.Xr recv 2 ,
@


1.11
log
@inet6 fixes from jmc@@prioris.mini.pw.edu.pl
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.10 2002/09/26 07:55:40 miod Exp $
d42 1
a42 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.10
log
@Incomplete section 4 mi manual page cleanup.
- make configuration lines match GENERIC files
- more Xr (hopefully usefule Xr)
- never mention intro(4) on non-physical devices (i.e. protocols), always
mention it for physical devices
- random text style and quoting fixes
- drivers ported from FreeBSD did mention rc.conf instead of hostname.if as
the place to put mediaopt
- some .Tn UNIX -> .Ox replacements
- etc, etc...

reviewd in part by deraadt@@ (until he got bored of this)
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.9 2002/05/23 09:30:34 mpech Exp $
d113 1
d115 1
a115 1
pseudo header checksum field
d117 1
a117 1
will be filled automatically by the kernel.
d120 2
a121 2
header nor IPv6 extension headers.
Notice that this behavior is opposite from
d123 1
a123 1
raw sockets and.
d176 1
a176 2
let us specify that
all
d185 1
a185 2
let us specify that
messages of a given
d196 1
a196 1
depending whether the specified message type is passed to the
d213 1
a213 1
address specified and the socket is already connected;
d217 1
a217 1
connected;
d220 1
a220 1
an internal data structure;
d250 1
a250 1
which is descendant of WIDE hydrangea IPv6 stack kit
@


1.9
log
@'SEE ALSO' audit in 'share/man/':
o) sort;
o) "," is separator of entries;
o) don't use "." or "," in the last entry;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.8 2001/10/04 16:56:51 mpech Exp $
d230 2
a231 2
.Xr intro 4 ,
.Xr ip6 4
@


1.8
log
@we don't like .Pp and blank lines before/after .Ss;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.7 2001/06/23 05:57:04 deraadt Exp $
d229 1
a230 1
.Xr inet6 4 ,
@


1.7
log
@ok, tmac is now fixed
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.6 2001/06/23 02:33:12 deraadt Exp $
a124 1
.Pp
@


1.6
log
@join .%A entries; most by bk@@rt.fm
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.5 2001/06/22 12:15:45 mpech Exp $
d234 2
a235 1
.%A W. Stevens and M. Thomas
d242 2
a243 1
.%A A. Conta and S. Deering
@


1.5
log
@o) remove unnecessary .Pp;
o) remove unnecessary .Nm args;
o) closes .Bl;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) sort SEE ALSO;
o) better -mdoc style;
o) typos;

aaron@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.4 2001/03/01 16:11:17 aaron Exp $
d234 1
a234 2
.%A W. Stevens
.%A M. Thomas
d241 1
a241 2
.%A A. Conta
.%A S. Deering
@


1.4
log
@A slew of share/ man page fixes; nordin@@cse.ogi.edu. These have been sitting
in my INBOX since Nov 6, 2000, probably forgot about them since the tree was
frozen at that time.
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.3 2000/11/24 10:25:12 itojun Exp $
a64 1
."
a67 1
."
a73 1
."
a208 1
.\"
a226 1
."
a248 1
."
@


1.3
log
@sync with recent kame document.
- on AF_INET6, :: does not mean local node.
@
text
@d1 1
a1 1
.\"	$OpenBSD: icmp6.4,v 1.2 2000/04/03 21:19:36 aaron Exp $
d258 1
a258 1
which is decendant of WIDE hydrangea IPv6 stack kit
@


1.2
log
@Remove trailing whitespace.
@
text
@d1 2
a2 1
.\"	$OpenBSD: icmp6.4,v 1.1 1999/12/19 03:14:27 itojun Exp $
a60 2
.\"
.\"	KAME Id: icmp6.4,v 1.1 1999/12/17 09:47:01 itojun Exp
@


1.1
log
@add icmp6(4) and ip6(4).  may need some update to sync with reality.

in inet6(4), state that we do not support RFC1933 due to security reasons.
@
text
@d1 2
a2 2
.\"	$OpenBSD$
.\" 
d5 1
a5 1
.\" 
d17 1
a17 1
.\" 
@

