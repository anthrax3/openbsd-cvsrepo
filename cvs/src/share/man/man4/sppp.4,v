head	1.24;
access;
symbols
	OPENBSD_6_2:1.24.0.10
	OPENBSD_6_2_BASE:1.24
	OPENBSD_6_1:1.24.0.14
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.24.0.12
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.24.0.8
	OPENBSD_5_8_BASE:1.24
	OPENBSD_5_7:1.24.0.6
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.24.0.4
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.23.0.6
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.23.0.2
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.22.0.2
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.20.0.10
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.8
	OPENBSD_5_0:1.20.0.6
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.4
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.2
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.17.0.4
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.6
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.2
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.4
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.2
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.9.0.12
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.4
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3;
locks; strict;
comment	@.\" @;


1.24
date	2014.03.17.17.07.45;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2013.07.16.16.05.49;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2012.09.26.17.34.38;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2012.08.24.14.41.43;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2010.04.05.06.20.43;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2010.04.04.20.47.34;	author sthen;	state Exp;
branches;
next	1.18;

1.18
date	2010.04.04.10.52.01;	author sthen;	state Exp;
branches;
next	1.17;

1.17
date	2009.01.31.19.37.12;	author sobrado;	state Exp;
branches;
next	1.16;

1.16
date	2008.11.17.05.12.08;	author brad;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.31.19.19.52;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2006.06.12.12.57.29;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2006.06.12.12.33.19;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2006.05.18.15.38.57;	author reyk;	state Exp;
branches;
next	1.11;

1.11
date	2006.05.17.11.57.48;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.17.03.29.55;	author reyk;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.05.13.51.58;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.07.16.03.32;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.26.07.55.40;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.05.14.45.53;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.01.16.11.19;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.02.14.46.42;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	99.09.23.04.12.05;	author alex;	state Exp;
branches;
next	1.2;

1.2
date	99.07.09.13.35.49;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.07.02.18.09.47;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.24
log
@the userland ppp(9) code goes awa.  Having too much ppp choice in the
tree results in one-true-ppp not coming into existance.  This code is
essentially un-audited and quite dangerous.
ok claudio sthen
@
text
@.\" $OpenBSD: sppp.4,v 1.23 2013/07/16 16:05:49 schwarze Exp $
.\"
.\" Copyright (c) 1997 Joerg Wunsch
.\"
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE DEVELOPERS ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE DEVELOPERS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\"
.Dd $Mdocdate: July 16 2013 $
.Dt SPPP 4
.Os
.Sh NAME
.Nm sppp
.Nd PPP and Link Control Protocol
.Sh SYNOPSIS
.Cd "pseudo-device sppp" Op Ar count
.Sh DESCRIPTION
The
.Nm
network layer implements the state machine and Link Control
Protocol (LCP) of the
Point-to-Point Protocol (PPP)
as described in RFC 1661.
Note that this layer does not provide network interfaces of its own, it is
rather intended to be layered on
top of drivers providing a point-to-point connection that
wish to run a PPP stack over it.
The corresponding network interfaces have to be provided by these hardware
drivers.
.Pp
The
.Nm
layer provides three basic modes of operation.
The default mode, with no special flags set, is to create the
PPP connection (administrative
.Em Open
event to the LCP layer) as soon as the interface is taken up with the
.Xr ifconfig 8
command.
Taking the interface down again will terminate the LCP layer
and thus all other layers on top.
The link will also terminate itself as soon as no Network Control Protocol
(NCP) is open anymore, indicating that the lower layers are no longer needed.
.Pp
Setting the link-level flag
.Cm link0
with
.Xr ifconfig 8
will cause the respective network interface to go into
.Em passive
mode.
This means the administrative
.Em Open
event to the LCP layer will be delayed until after the lower layers
signal an
.Em Up
event (rise of
.Dq carrier ) .
This can be used by the lower layers to support
a dial-in connection where the physical layer isn't available
immediately at startup, but only after some external event arrives.
Receipt of a
.Em Down
event from the lower layer will not take the interface completely down
in this case.
.Pp
Finally, setting the flag
.Cm link1
will cause the interface to operate in
.Em dial-on-demand
mode.
This is also only useful if the lower layers support the notion
of a carrier (like with an ISDN line).
Upon configuring the respective interface, it will delay the administrative
.Em Open
event to the LCP layer until either an outbound network packet
arrives, or until the lower layers signal an
.Em Up
event, indicating an inbound connection.
As with passive mode, receipt of a
.Em Down
event (loss of carrier) will not automatically take the interface down,
thus it remains available for further connections.
.Pp
The
.Nm
layer supports the
.Em debug
interface flag, which can be set with
.Xr ifconfig 8 .
If this flag is set, the various control protocol packets being
exchanged as well as the option negotiation between both ends of the
link will be logged at level
.Dv LOG_DEBUG .
This can be helpful to examine configuration problems during the first
attempts to set up a new configuration.
Without this flag being set, only the major phase transitions will be
logged at level
.Dv LOG_INFO .
.Pp
It is possible to leave the local interface IP address open for
negotiation by setting it to 0.0.0.0.
This requires that the remote peer can correctly supply a value for it
based on the identity of the caller, or on the remote address supplied
by this side.
Due to the way the IPCP option negotiation works, this address is
supplied late during the negotiation, which could cause the remote peer
to make false assumptions.
.Pp
In a similar spirit the remote address can be set to the magical
value 0.0.0.1, which means that we don't care what address the remote
side will use, as long as it is not 0.0.0.0.
This is useful if your ISP has several dial-in servers.
You can of course
.Ic route add something or other 0.0.0.1
and it will do exactly what you would want it to.
.Pp
The PAP and CHAP authentication protocols, as described in RFCs 1334
and 1994, respectively, are also implemented.
Their parameters are controlled by the
.Xr ifconfig 8
utility.
.Sh EXAMPLES
Display the settings for pppoe0.
The interface is currently in the
.Em establish
phase and tries to connect to the remote peer;
other possible PPP phases are
.Em dead ,
.Em authenticate ,
.Em network ,
or
.Em terminate .
Both ends of the connection use the CHAP protocol, the local client
tells the remote peer the system name
.Ql uriah ,
and the peer is expected to authenticate by the name
.Ql ifb-gw .
Once the initial CHAP handshake has been successful, no further CHAP
challenges will be transmitted.
There are supposedly some known CHAP secrets for both ends of the link
which are not displayed.
.Bd -literal -offset indent
$ ifconfig pppoe0
pppoe0: flags=8851<UP,POINTOPOINT,RUNNING,SIMPLEX,MULTICAST> mtu 1492
        dev: em0 state: PADI sent
        sid: 0x0 PADI retries: 0 PADR retries: 0
        sppp: phase establish authproto chap authname "uriah" \e
		peerproto chap peername "ifb-gw" norechallenge
        groups: pppoe
        inet 0.0.0.0 --> 0.0.0.1 netmask 0xffffffff
.Ed
.Pp
A possible call to
.Xr ifconfig 8
that could have been used to bring the interface into the state shown
by the previous example:
.Bd -literal -offset indent
# ifconfig em0 up
# ifconfig pppoe0 0.0.0.0 0.0.0.1 netmask 0xffffffff \e
	pppoedev em0 \e
	authproto chap authname uriah authkey "some secret" \e
	peerproto chap peername "ifb-gw" peerkey "another" \e
	peerflag norechallenge \e
	up
.Ed
.Sh DIAGNOSTICS
.Bl -diag
.It <ifname><ifnum>: <proto> illegal <event> in state <statename>
An event happened that should not happen for the current state
the respective control protocol is in.
See RFC 1661 for a description of the state automaton.
.It <ifname><ifnum>: loopback
The state automaton detected a line loopback (that is, it was talking
with itself).
The interface will be temporarily disabled.
.It <ifname><ifnum>: up
The LCP layer is running again, after a line loopback had previously
been detected.
.It <ifname><ifnum>: down
The keepalive facility detected the line being unresponsive.
Keepalive must be explicitly requested by the lower layers in order to
take place.
.El
.Sh SEE ALSO
.Xr inet 4 ,
.Xr pppoe 4 ,
.Xr ifconfig 8
.Sh STANDARDS
.Rs
.%A G. McGregor
.%D May 1992
.%R RFC 1332
.%T The PPP Internet Protocol Control Protocol (IPCP)
.Re
.Pp
.Rs
.%A B. Lloyd
.%A W. Simpson
.%D October 1992
.%R RFC 1334
.%T PPP Authentication Protocols
.Re
.Pp
.Rs
.%A W. Simpson
.%D July 1994
.%R RFC 1661
.%T The Point-to-Point Protocol (PPP)
.Re
.Pp
.Rs
.%A W. Simpson
.%D August 1996
.%R RFC 1994
.%T PPP Challenge Handshake Authentication Protocol (CHAP)
.Re
.Pp
.Rs
.%A S. Varada
.%A D. Haskins
.%A E. Allen
.%D September 2007
.%R RFC 5072
.%T IP Version 6 over PPP
.Re
.Sh AUTHORS
.An -nosplit
The original implementation of
.Nm
was written in 1994 at Cronyx Ltd., Moscow, by
.An Serge Vakulenko Aq Mt vak@@cronyx.ru .
.An Joerg Wunsch Aq Mt joerg_wunsch@@uriah.heep.sax.de
rewrote a large part in 1997 in order
to fully implement the state machine as described in RFC 1661, so it
could also be used for dialup lines.
He also wrote the initial version of this man page.
Serge later on wrote a basic implementation for PAP and CHAP, which
served as the base for the current implementation, done again by
Joerg Wunsch.
.Pp
.An Reyk Floeter
implemented
.Nm
support for
.Xr ifconfig 8
in
.Ox 4.0
in order to remove the original
.Ql spppcontrol
utility, which was previously used to configure and display the
.Nm
settings.
.Sh BUGS
Many.
.Pp
Negotiation loop avoidance is not fully implemented.
If the negotiation doesn't converge, this can cause an endless loop.
.Pp
The various parameters that should be adjustable per RFC 1661 are
currently hard-coded into the kernel, and should be made accessible
through
.Xr ifconfig 8 .
.Pp
.Em Passive
mode has not been tested extensively.
.Pp
More NCPs should be implemented, as well as other control protocols
for authentication and link quality reporting.
.Pp
IPCP should support VJ header compression.
.Pp
Link-level compression protocols should be supported.
@


1.23
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.22 2012/09/26 17:34:38 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: September 26 2012 $
d207 1
a207 2
.Xr ifconfig 8 ,
.Xr ppp 8
@


1.22
log
@last stage of rfc changes, using consistent Rs/Re blocks, and moving the
references into a STANDARDS section;
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.21 2012/08/24 14:41:43 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: August 24 2012 $
d252 2
a253 2
.An Serge Vakulenko Aq vak@@cronyx.ru .
.An Joerg Wunsch Aq joerg_wunsch@@uriah.heep.sax.de
@


1.21
log
@update SEE ALSO;
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.20 2010/04/05 06:20:43 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: April 5 2010 $
d209 1
d216 1
d224 1
d231 1
d238 1
@


1.20
log
@fix up AUTHORS; ok schwarze
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.19 2010/04/04 20:47:34 sthen Exp $
d28 1
a28 1
.Dd $Mdocdate: April 4 2010 $
d211 3
a213 2
.%T "The PPP Internet Protocol Control Protocol (IPCP)"
.%O RFC 1332
d216 5
a220 3
.%A B. Lloyd, W. Simpson
.%T "PPP Authentication Protocols"
.%O RFC 1334
d223 4
a226 3
.%A W. Simpson, Editor
.%T "The Point-to-Point Protocol (PPP)"
.%O RFC 1661
d230 3
a232 2
.%T "PPP Challenge Handshake Authentication Protocol (CHAP)"
.%O RFC 1994
d235 6
a240 3
.%A D. Haskin, E. Allen
.%T "IP Version 6 over PPP"
.%O RFC 2472
@


1.19
log
@sort RFCs, suggested by jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.18 2010/04/04 10:52:01 sthen Exp $
d235 1
d238 1
a238 1
was written in 1994 at Cronyx Ltd., Moscow by
d240 1
a240 3
.ie t J\(:org Wunsch
.el Joerg Wunsch
.Aq joerg_wunsch@@uriah.heep.sax.de
d247 1
a247 2
.ie t J\(:org Wunsch.
.el Joerg Wunsch.
d249 1
a249 2
.ie t Reyk Fl\(:oter
.el Reyk Floeter
@


1.18
log
@Add a reference to the IPv6CP RFC. From Brad.
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.17 2009/01/31 19:37:12 sobrado Exp $
d28 1
a28 1
.Dd $Mdocdate: January 31 2009 $
a209 5
.%A W. Simpson, Editor
.%T "The Point-to-Point Protocol (PPP)"
.%O RFC 1661
.Re
.Rs
a214 5
.%A D. Haskin, E. Allen
.%T "IP Version 6 over PPP"
.%O RFC 2472
.Re
.Rs
d220 5
d228 5
@


1.17
log
@write point-to-point in a consistent way.

jmc@@ has provided a complete list of manual pages to be fixed,
and suggested using uppercase (i.e., Point-to-Point) when discussing
the protocol, and lowercase (point-to-point) otherwise.

ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.16 2008/11/17 05:12:08 brad Exp $
d28 1
a28 1
.Dd $Mdocdate: November 17 2008 $
d218 5
@


1.16
log
@IPv6 has been supported for awhile now.
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.15 2007/05/31 19:19:52 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: May 31 2007 $
d41 1
a41 1
Point To Point Protocol (PPP)
@


1.15
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.14 2006/06/12 12:57:29 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate$
a260 6
.Pp
Currently, only the
.Em IPCP
control protocol and
.Xr ip 4
network protocol are supported.
@


1.14
log
@various tweaks;
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.13 2006/06/12 12:33:19 jmc Exp $
d28 1
a28 1
.Dd May 19, 1997
@


1.13
log
@sppp does not just work with synchronous lines; help from reyk
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.12 2006/05/18 15:38:57 reyk Exp $
d53 1
a53 1
The default mode, with no special flags to be set, is to create the
d65 1
a65 1
.Em link0
d74 1
a74 1
signals an
d78 1
a78 1
This can be used by lower layers to support
d87 1
a87 1
.Em link1
d91 1
a91 1
This is also only useful if the lower layer supports the notion
d96 1
a96 1
arrives, or until the lower layer signals an
d108 1
a108 1
interface flag that can be set with
d125 3
a127 3
Due to the way the IPCP option negotiation works, this address is being
supplied late during the negotiation, which might cause the remote peer
to make wrong assumptions.
d130 1
a130 1
value 0.0.0.1 which means that we don't care what address the remote
d137 3
a139 3
The PAP and CHAP authentication protocols as described in RFC 1334,
and RFC 1994 resp., are also implemented.
Their parameters are being controlled by the
d256 1
a256 1
utility, which has been previously used to configure and display the
@


1.12
log
@the physical interface must be marked UP

ok naddy@@
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.11 2006/05/17 11:57:48 jmc Exp $
d33 1
a33 1
.Nd point to point protocol network layer for synchronous lines
d39 1
a39 1
network layer implements the state machine and the Link Control
d41 1
a41 1
.Em point to point protocol (PPP)
d45 1
a45 1
top of drivers providing a synchronous point-to-point connection that
@


1.11
log
@various fixes;
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.10 2006/05/17 03:29:55 reyk Exp $
d178 1
@


1.10
log
@implement support for sppp(4) in ifconfig. have a look at the updated
manual pages pppoe(4) and sppp(4) for examples.

the spppcontrol(8) utility is not required anymore and will probably
be removed in the near future.

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.9 2003/05/05 13:51:58 jmc Exp $
a141 18
.Sh DIAGNOSTICS
.Bl -diag
.It <ifname><ifnum>: <proto> illegal <event> in state <statename>
An event happened that should not happen for the current state
the respective control protocol is in.
See RFC 1661 for a description of the state automaton.
.It <ifname><ifnum>: loopback
The state automaton detected a line loopback (that is, it was talking
with itself).
The interface will be temporarily disabled.
.It <ifname><ifnum>: up
The LCP layer is running again, after a line loopback had previously
been detected.
.It <ifname><ifnum>: down
The keepalive facility detected the line being unresponsive.
Keepalive must be explicitly requested by the lower layers in order to
take place.
.El
d146 1
a146 1
phase and tries to connect to the remote peer,
d158 1
a158 1
Once the initial CHAP handshake was successful, no further CHAP
d163 1
a163 1
$ ifconfig pppoe0                                                              
d168 1
a168 1
		peerproto chap peername "ifb-gw" norechallenge 
d170 1
a170 1
        inet 0.0.0.0 --> 0.0.0.1 netmask 0xffffffff 
d185 18
d205 1
d207 1
a207 2
.Xr ppp 8 ,
.Xr pppoe 4
d251 1
a251 1
in 
@


1.9
log
@corrections from Leandro Costa.

- corrections to tradenames
- updated URLs
- general typos

thanks Leandro!
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.8 2003/04/07 16:03:32 jmc Exp $
d140 1
a140 1
.Xr spppcontrol 8
d160 43
d207 1
a207 1
.Xr spppcontrol 8
d239 1
a239 1
He also wrote this man page.
d244 14
d273 1
a273 1
.Xr spppcontrol 8 .
@


1.8
log
@typos;
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.7 2002/09/26 07:55:40 miod Exp $
d79 1
a79 1
a dialin connection where the physical layer isn't available
@


1.7
log
@Incomplete section 4 mi manual page cleanup.
- make configuration lines match GENERIC files
- more Xr (hopefully usefule Xr)
- never mention intro(4) on non-physical devices (i.e. protocols), always
mention it for physical devices
- random text style and quoting fixes
- drivers ported from FreeBSD did mention rc.conf instead of hostname.if as
the place to put mediaopt
- some .Tn UNIX -> .Ox replacements
- etc, etc...

reviewd in part by deraadt@@ (until he got bored of this)
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.6 2001/10/05 14:45:53 mpech Exp $
d71 1
a71 1
This means, the administrative
d176 1
a176 1
.%A B. Lloyd,  W. Simpson
d208 1
a208 1
network protocol is supported.
@


1.6
log
@Powered by @@mantoya:
o) start new sentence on a new line;
o) minor mdoc fixes;
millert@@ ok

Tip of the day:   www.mpechismazohist.com
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.5 2001/03/01 16:11:19 aaron Exp $
a161 1
.Xr intro 4 ,
@


1.5
log
@A slew of share/ man page fixes; nordin@@cse.ogi.edu. These have been sitting
in my INBOX since Nov 6, 2000, probably forgot about them since the tree was
frozen at that time.
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.4 2000/03/02 14:46:42 todd Exp $
d42 3
a44 2
as described in RFC 1661.  Note that this layer does not provide
network interfaces of its own, it is rather intended to be layered on
d46 3
a48 2
wish to run a PPP stack over it.  The corresponding network interfaces
have to be provided by these hardware drivers.
d52 3
a54 3
layer provides three basic modes of operation.  The default mode,
with no special flags to be set, is to create the PPP connection
(administrative
d58 5
a62 4
command.  Taking the interface down again will terminate the LCP layer
and thus all other layers on top.  The link will also terminate itself as
soon as no Network Control Protocol (NCP) is open anymore, indicating
that the lower layers are no longer needed.
d70 2
a71 1
mode.  This means, the administrative
d90 4
a93 3
mode.  This is also only useful if the lower layer supports the notion
of a carrier (like with an ISDN line).  Upon configuring the
respective interface, it will delay the administrative
d98 2
a99 2
event, indicating an inbound connection.  As with passive mode, receipt
of a
d115 3
a117 2
attempts to set up a new configuration.  Without this flag being set,
only the major phase transitions will be logged at level
d121 7
a127 6
negotiation by setting it to 0.0.0.0.  This requires that the remote
peer can correctly supply a value for it based on the identity of the
caller, or on the remote address supplied by this side.  Due to the
way the IPCP option negotiation works, this address is being supplied
late during the negotiation, which might cause the remote peer to make
wrong assumptions.
d132 2
a133 2
This is useful if your ISP has several dial-in
servers.  You can of course
d138 2
a139 2
and RFC 1994 resp., are also implemented.  Their parameters are being
controlled by the
d146 2
a147 2
the respective control protocol is in.  See RFC 1661 for a description
of the state automaton.
d150 2
a151 1
with itself).  The interface will be temporarily disabled.
d196 2
a197 1
could also be used for dialup lines.  He also wrote this man page.
d211 2
a212 2
Negotiation loop avoidance is not fully implemented.  If the negotiation
doesn't converge, this can cause an endless loop.
@


1.4
log
@$OpenBSD$
@
text
@d1 1
a1 1
.\" $OpenBSD: sppp.4,v 1.3 1999/09/23 04:12:05 alex Exp $
a154 1
.Xr ppp 4 ,
d156 1
@


1.3
log
@Typo fixes.
@
text
@d1 1
a26 1
.\" $Id: sppp.4,v 1.2 1999/07/09 13:35:49 aaron Exp $
@


1.2
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d26 1
a26 1
.\" $Id: sppp.4,v 1.1 1999/07/02 18:09:47 deraadt Exp $
d44 1
a44 1
top of drivers providing a synchronuous point-to-point connection that
@


1.1
log
@lmc man pages
@
text
@d26 1
a26 1
.\" $Id: sppp.4,v 1.6 1998/06/08 06:12:01 jkoshy Exp $
d72 1
a72 1
event (rise of 
@

