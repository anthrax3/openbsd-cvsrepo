head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.8
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.12
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.10
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.4
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.8
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.6
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.15.0.6
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.4
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.2
	OPENBSD_5_0:1.14.0.18
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.16
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.14
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.10
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.12
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.8
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.6
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.4
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.12.0.10
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.8
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.6
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.4
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.11.0.4
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4;
locks; strict;
comment	@.\" @;


1.17
date	2015.02.15.22.26.45;	author bentley;	state Exp;
branches;
next	1.16;
commitid	szmpRDHaqpG6RctM;

1.16
date	2013.07.16.16.05.50;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2011.09.03.22.59.07;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.31.19.19.57;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.29.16.44.45;	author sobrado;	state Exp;
branches;
next	1.12;

1.12
date	2004.09.30.19.59.28;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2003.11.09.16.06.07;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.06.10.29.42;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.18.51.34;	author jason;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.12.07.30.27;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.08.08.08.47;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.01.21.03.28;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.23.17.53.36;	author ian;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.04.23.17.56;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.04.20.23.13;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.19.06.59.13;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.31.03.04.28;	author jason;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Use "In" to mark up include files, instead of wrongly wrapping with Aq.

Aq is not the same as <> in non-ASCII situations, so this caused
incorrect output in some places. And it provided no semantics besides.

ok schwarze@@
@
text
@.\"     $OpenBSD: uperf.4,v 1.16 2013/07/16 16:05:50 schwarze Exp $
.\"
.\" Copyright (c) 2002 Jason L. Wright (jason@@thought.net)
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
.\" ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: July 16 2013 $
.Dt UPERF 4 sparc64
.Os
.Sh NAME
.Nm uperf
.Nd performance counters driver
.Sh SYNOPSIS
.Cd "uperf* at ebus?"
.Cd "uperf* at sbus?"
.Sh DESCRIPTION
Some UltraSPARC host bridges provide performance counters on their host
bridges.
The counters are a part of the system controller chip (usc, dsc, or qsc).
On PCI machines the system controller shows up as a device on the EBus, but
on SBus machines the system controller exists in SBus space.
The
.Nm
driver provides access to these counters via
.Xr ioctl 2 .
.Sh IOCTLS
All of the ioctl calls supported by the
.Nm
driver take the following structure as an argument:
.Bd -literal -offset indent
struct uperf_io {
	int cnt_flags;
	int cnt_src0;
	int cnt_src1;
	u_int32_t cnt_val0;
	u_int32_t cnt_val1;
};
.Ed
.Pp
The
.Fa cnt_flags
field specifies which counters are being operated on and is a bit mask
of
.Fa UPERF_CNT0
and/or
.Fa UPERF_CNT1 .
.Pp
The
.Fa cnt_src0
and
.Fa cnt_src1
fields specify the source for the counter.
Not all counters support monitoring all sources and specifying an invalid
source for a counter to monitor will result in an error.
The sources are specified below:
.Pp
.Bl -tag -width "UPERFSRC_TLBMISS" -offset indent -compact
.It Em UPERFSRC_SYSCK
system clock ticks
.It Em UPERFSRC_PRALL
all p-requests
.It Em UPERFSRC_PRP0
p-requests from processor 0
.It Em UPERFSRC_PRU2S
p-requests from the U2S
.It Em UPERFSRC_UPA128
cycles UPA 128 bit data is busy
.It Em UPERFSRC_UPA64
cycles UPA 64 bit data is busy
.It Em UPERFSRC_PIOS
cycles stalled during PIO
.It Em UPERFSRC_MEMRI
memory requests issued
.It Em UPERFSRC_MCBUSY
cycles memory controller is busy
.It Em UPERFSRC_PXSH
stall cycles due to pending transaction scoreboard hit
.It Em UPERFSRC_P0CWMR
coherent write miss requests, processor 0
.It Em UPERFSRC_P1CWMR
coherent write miss requests, processor 1
.It Em UPERFSRC_CIT
coherent intervention transactions
.It Em UPERFSRC_U2SDAT
data transactions on U2S
.It Em UPERFSRC_CRXI
coherent read transactions issued
.It Em UPERFSRC_RDP0
read requests, processor 0
.It Em UPERFSRC_P0CRMR
coherent read misses, processor 0
.It Em UPERFSRC_P0PIO
PIO accesses, processor 0
.It Em UPERFSRC_MEMRC
memory requests completed
.It Em UPERFSRC_P1RR
read requests, processor 1
.It Em UPERFSRC_CRMP1
coherent read misses, processor 1
.It Em UPERFSRC_PIOP1
PIO accesses, processor 1
.It Em UPERFSRC_CWXI
coherent write transactions issued
.It Em UPERFSRC_RP0
read requests, processor 0
.It Em UPERFSRC_SDVRA
streaming DVMA read transfers, PCI bus A
.It Em UPERFSRC_SDVWA
streaming DVMA write transfers, PCI bus A
.It Em UPERFSRC_CDVRA
consistent DVMA read transfers, PCI bus A
.It Em UPERFSRC_CDVWA
consistent DVMA write transfers, PCI bus A
.It Em UPERFSRC_SBMA
streaming buffer misses, PCI bus A
.It Em UPERFSRC_DVA
DVMA cycles, PCI bus A
.It Em UPERFSRC_DVWA
words transferred via DVMA, PCI bus A
.It Em UPERFSRC_PIOA
cycles consumed by PIO, bus A
.It Em UPERFSRC_SDVRB
streaming DVMA read transfers, PCI bus B
.It Em UPERFSRC_SDVWB
streaming DVMA write transfers, PCI bus B
.It Em UPERFSRC_CDVRB
consistent DVMA read transfers, PCI bus B
.It Em UPERFSRC_CDVWB
consistent DVMA write transfers, PCI bus B
.It Em UPERFSRC_SBMB
streaming buffer misses, PCI bus B
.It Em UPERFSRC_DVB
DVMA cycles, PCI bus B
.It Em UPERFSRC_DVWB
words transferred via DVMA, PCI bus B
.It Em UPERFSRC_PIOB
cycles consumed by PIO, bus B
.It Em UPERFSRC_TLBMISS
TLB misses
.It Em UPERFSRC_NINTRS
interrupts
.It Em UPERFSRC_INACK
interrupt NACKS on UPA
.It Em UPERFSRC_PIOR
PIO read transfers
.It Em UPERFSRC_PIOW
PIO write transfers
.It Em UPERFSRC_MERGE
merge buffer transactions
.It Em UPERFSRC_TBLA
DMA requests retried due to tablewalks, PCI bus A
.It Em UPERFSRC_STCA
DMA requests retries due to STC, PCI bus A
.It Em UPERFSRC_TBLB
DMA requests retries due to tablewalks, PCI bus B
.It Em UPERFSRC_STCB
DMA requests retries due to STC, PCI bus B
.El
.Pp
The
.Fa cnt_val0
and
.Fa cnt_val1
contain the values fetched for the counters.
Software using this interface should be prepared to handle the counters
rolling over.
.Pp
The
.Nm
device responds to the following
.Xr ioctl 2
calls, which are defined in
.In dev/sun/uperfio.h .
.Bl -tag -width UPIO_GCNTSRC
.It Dv UPIO_GCNTSRC
.Pq Li "struct uperf_io"
Retrieve the source the counters are monitoring.
The
.Fa cnt_flags
is a bit mask for which of the counters is to be fetched.
The result is returned in
.Fa cnt_src0
and/or
.Fa cnt_src1 .
.It Dv UPIO_SCNTSRC
.Pq Li "struct uperf_io"
Set the source the counters should monitor.
This call also clears the current value of the counters that are set.
The
.Fa cnt_flags
is a bit mask for which of the counters is to be set.
The
.Fa cnt_src0
and/or
.Fa cnt_src1
fields specify the source to be set for the respective counter.
.It Dv UPIO_CLRCNT
.Pq Li "struct uperf_io"
Clear the counters specified in
.Fa cnt_flags .
.It Dv UPIO_GETCNT
.Pq Li "struct uperf_io"
Retrieve the value for the counters specified in
.Fa cnt_flags .
The values are returned in
.Fa cnt_val0
and/or
.Fa cnt_val1 .
.El
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr ebus 4 ,
.Xr intro 4 ,
.Xr sbus 4
.Sh HISTORY
The
.Nm
driver was first supported in
.Ox 3.1 .
.Sh AUTHORS
The driver was written by
.An Jason Wright Aq Mt jason@@thought.net .
@


1.16
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.15 2011/09/03 22:59:07 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate: September 3 2011 $
d193 1
a193 1
.Aq Pa dev/sun/uperfio.h .
@


1.15
log
@make -column lists pretty again;

specifically, rewrite them to permit some markup in the column headers,
and use "Ta" instead of literal tabs; mandoc does not currently match groff
100%, but a mandoc fix may be some time off, and we've gone enough releases
with poorly formatting column lists.

in some cases i have rewritten the lists as -tag, where -column made
little sense.
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.14 2007/05/31 19:19:57 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate: May 31 2007 $
d242 1
a242 1
.An Jason Wright Aq jason@@thought.net .
@


1.14
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.13 2007/05/29 16:44:45 sobrado Exp $
d27 1
a27 1
.Dd $Mdocdate$
d76 102
a177 51
.Bl -column "XXXXXXXXXXXXXX" "description" -offset indent
.It Em UPERFSRC_SYSCK Ta "system clock ticks"
.It Em UPERFSRC_PRALL Ta "all p-requests"
.It Em UPERFSRC_PRP0 Ta "p-requests from processor 0"
.It Em UPERFSRC_PRU2S Ta "p-requests from the U2S"
.It Em UPERFSRC_UPA128 Ta "cycles UPA 128 bit data is busy"
.It Em UPERFSRC_UPA64 Ta "cycles UPA 64 bit data is busy"
.It Em UPERFSRC_PIOS Ta "cycles stalled during PIO"
.It Em UPERFSRC_MEMRI Ta "memory requests issued"
.It Em UPERFSRC_MCBUSY Ta "cycles memory controller is busy"
.It Em UPERFSRC_PXSH Ta "stall cycles due to pending transaction scoreboard hit"
.It Em UPERFSRC_P0CWMR Ta "coherent write miss requests, processor 0"
.It Em UPERFSRC_P1CWMR Ta "coherent write miss requests, processor 1"
.It Em UPERFSRC_CIT Ta "coherent intervention transactions"
.It Em UPERFSRC_U2SDAT Ta "data transactions on U2S"
.It Em UPERFSRC_CRXI Ta "coherent read transactions issued"
.It Em UPERFSRC_RDP0 Ta "read requests, processor 0"
.It Em UPERFSRC_P0CRMR Ta "coherent read misses, processor 0"
.It Em UPERFSRC_P0PIO Ta "PIO accesses, processor 0"
.It Em UPERFSRC_MEMRC Ta "memory requests completed"
.It Em UPERFSRC_P1RR Ta "read requests, processor 1"
.It Em UPERFSRC_CRMP1 Ta "coherent read misses, processor 1"
.It Em UPERFSRC_PIOP1 Ta "PIO accesses, processor 1"
.It Em UPERFSRC_CWXI Ta "coherent write transactions issued"
.It Em UPERFSRC_RP0 Ta "read requests, processor 0"
.It Em UPERFSRC_SDVRA Ta "streaming DVMA read transfers, PCI bus A"
.It Em UPERFSRC_SDVWA Ta "streaming DVMA write transfers, PCI bus A"
.It Em UPERFSRC_CDVRA Ta "consistent DVMA read transfers, PCI bus A"
.It Em UPERFSRC_CDVWA Ta "consistent DVMA write transfers, PCI bus A"
.It Em UPERFSRC_SBMA Ta "streaming buffer misses, PCI bus A"
.It Em UPERFSRC_DVA Ta "DVMA cycles, PCI bus A"
.It Em UPERFSRC_DVWA Ta "words transferred via DVMA, PCI bus A"
.It Em UPERFSRC_PIOA Ta "cycles consumed by PIO, bus A"
.It Em UPERFSRC_SDVRB Ta "streaming DVMA read transfers, PCI bus B"
.It Em UPERFSRC_SDVWB Ta "streaming DVMA write transfers, PCI bus B"
.It Em UPERFSRC_CDVRB Ta "consistent DVMA read transfers, PCI bus B"
.It Em UPERFSRC_CDVWB Ta "consistent DVMA write transfers, PCI bus B"
.It Em UPERFSRC_SBMB Ta "streaming buffer misses, PCI bus B"
.It Em UPERFSRC_DVB Ta "DVMA cycles, PCI bus B"
.It Em UPERFSRC_DVWB Ta "words transferred via DVMA, PCI bus B"
.It Em UPERFSRC_PIOB Ta "cycles consumed by PIO, bus B"
.It Em UPERFSRC_TLBMISS Ta "TLB misses"
.It Em UPERFSRC_NINTRS Ta "interrupts"
.It Em UPERFSRC_INACK Ta "interrupt NACKS on UPA"
.It Em UPERFSRC_PIOR Ta "PIO read transfers"
.It Em UPERFSRC_PIOW Ta "PIO write transfers"
.It Em UPERFSRC_MERGE Ta "merge buffer transactions"
.It Em UPERFSRC_TBLA Ta "DMA requests retried due to tablewalks, PCI bus A"
.It Em UPERFSRC_STCA Ta "DMA requests retries due to STC, PCI bus A"
.It Em UPERFSRC_TBLB Ta "DMA requests retries due to tablewalks, PCI bus B"
.It Em UPERFSRC_STCB Ta "DMA requests retries due to STC, PCI bus B"
@


1.13
log
@use the right capitalization for `EBus' and `SBus'

ok jmc@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.12 2004/09/30 19:59:28 mickey Exp $
d27 1
a27 1
.Dd January 30, 2002
@


1.12
log
@kill default locators
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.11 2003/11/09 16:06:07 jmc Exp $
d40 2
a41 2
On PCI machines the system controller shows up as a device on the EBUS, but
on SBUS machines the system controller exists in SBUS space.
@


1.11
log
@remove .Pp's before lists and displays;
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.10 2003/06/06 10:29:42 jmc Exp $
d35 1
a35 1
.Cd "uperf* at sbus? slot ? offset ?"
@


1.10
log
@- section reorder
- some macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.9 2003/06/02 18:51:34 jason Exp $
a75 1
.Pp
a142 1
.Pp
@


1.9
log
@Nuke clause 3 & 4.
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.8 2003/03/12 07:30:27 jmc Exp $
d138 1
a138 1
The 
a185 3
.Sh AUTHORS
The driver was written by
.An Jason Wright Aq jason@@thought.net .
d191 3
@


1.8
log
@typos;
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.7 2002/11/08 08:08:47 mpech Exp $
a13 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Jason L. Wright
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
@


1.7
log
@Time to cleanup:
o) start new sentence on a new line;
o) wrap long lines;
o) don't use .Pp before/after .Sh, .Ss;
o) OpenBSD -> .Ox;
o) typos;
o) close .Rs;
o) use space between arguments in tag, for example:
   .Xr blabla ) .

miod@@ ok
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.6 2002/10/01 21:03:28 miod Exp $
d77 1
a77 1
fields specify the source for the counter
d101 2
a102 2
.It Em UPERFSRC_MEMRC Ta "memory reqeusts completed"
.It Em UPERFSRC_P1RR Ta "read reqeusts, processor 1"
@


1.6
log
@Last minute cleaning:
- .Xr .Cd police
- esp(4) layout glitch
- intro(4) sorted and augmented
- in pcons(4), mention that this is a last-chance driver that should
generally not be used. even if the earth stops spinning.

ok deraadt@@
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.5 2002/07/23 17:53:36 ian Exp $
d140 2
a141 1
Software using this interface should be prepared to handle the counters rolling over.
@


1.5
log
@Typos (ok jason@@)
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.4 2002/04/04 23:17:56 jason Exp $
d187 2
@


1.4
log
@uperf attaches to ebus not psycho these days
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.3 2002/04/04 20:23:13 jason Exp $
d45 1
a45 1
On PCI machines the system controller shows up a device on the EBUS, but
a142 1
A
@


1.3
log
@typo
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.2 2002/02/19 06:59:13 jason Exp $
d39 1
a39 1
.Cd "uperf* at psycho?"
d42 5
a46 4
Some UltraSPARC host bridges provide performance counters.
On PCI machines, the performance counters are a part of the
PCI host bridge, and on SBUS machines, the counters are
a part of the system controller chip (usc or dsc).
@


1.2
log
@Xr sbus 4
@
text
@d1 1
a1 1
.\"     $OpenBSD: uperf.4,v 1.1 2002/01/31 03:04:28 jason Exp $
d176 1
a176 1
.It Dv UPIO_CLRCNT
@


1.1
log
@uperf docs
@
text
@d1 1
a1 1
.\"     $OpenBSD$
d186 2
a187 1
.Xr ioctl 2
@

