head	1.25;
access;
symbols
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.23.0.6
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.4
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.21.0.8
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.6
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.21.0.2
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.19.0.14
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.12
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.10
	OPENBSD_5_0:1.19.0.8
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.6
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.4
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.2
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.18.0.12
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.8
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.6
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.4
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.17.0.16
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.14
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.12
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.10
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.17.0.8
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.17.0.6
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.17.0.4
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	OPENBSD_3_3:1.15.0.2
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.5.0.8
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.6
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.25
date	2016.03.09.16.28.47;	author deraadt;	state dead;
branches;
next	1.24;
commitid	OSDG2O3Cgeifnf1W;

1.24
date	2015.09.10.15.16.43;	author schwarze;	state Exp;
branches;
next	1.23;
commitid	yPhLfPulVSum2r0H;

1.23
date	2015.02.15.22.26.45;	author bentley;	state Exp;
branches;
next	1.22;
commitid	szmpRDHaqpG6RctM;

1.22
date	2014.11.15.14.41.02;	author bentley;	state Exp;
branches;
next	1.21;
commitid	HuCemPIiOkto0SJD;

1.21
date	2013.06.02.20.51.58;	author tedu;	state Exp;
branches;
next	1.20;

1.20
date	2013.06.02.20.42.27;	author tedu;	state Exp;
branches;
next	1.19;

1.19
date	2010.02.18.13.23.38;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.31.19.19.57;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2003.07.21.09.24.33;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.23.30.14;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.12.07.36.44;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.03.07.11.28.10;	author hugh;	state Exp;
branches;
next	1.13;

1.13
date	2003.03.06.22.57.29;	author jason;	state Exp;
branches;
next	1.12;

1.12
date	2003.03.06.19.29.14;	author jason;	state Exp;
branches;
next	1.11;

1.11
date	2003.03.06.17.52.07;	author jason;	state Exp;
branches;
next	1.10;

1.10
date	2002.10.01.21.05.31;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.13.13.54.26;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2001.10.05.14.45.54;	author mpech;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.23.08.02.03;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.20.16.49.44;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.09.23.04.12.06;	author alex;	state Exp;
branches;
next	1.4;

1.4
date	99.06.05.13.18.39;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.05.12.13.26.50;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	96.03.29.10.17.33;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.36;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.36;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.25
log
@We are done providing support for the vax.
lots of agreement.
@
text
@.\"	$OpenBSD: uda.4,v 1.24 2015/09/10 15:16:43 schwarze Exp $
.\"	$NetBSD: uda.4,v 1.3 1996/03/03 17:14:10 thorpej Exp $
.\"
.\" Copyright (c) 1980, 1987, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @@(#)uda.4	6.6 (Berkeley) 3/27/91
.\"
.Dd $Mdocdate: September 10 2015 $
.Dt UDA 4 vax
.Os
.Sh NAME
.Nm uda
.Nd UDA50 disk controller interface
.Sh SYNOPSIS
.Cd "uda0 at uba? csr 0172150"
.Cd "uda1 at uba? csr 0160334"
.Cd "mscpbus* at uda?"
.Sh DESCRIPTION
This is a driver for the DEC UDA50 disk controller and other
compatible controllers.
The UDA50 communicates with the host through
a packet protocol known as the Mass Storage Control Protocol (MSCP).
Consult the file
.In vax/mscp.h
for a detailed description of this protocol.
.Pp
The
.Nm uda
driver
is a typical block-device disk driver; see
.Xr physio 9
for a description of block I/O.
The script
.Xr MAKEDEV 8
should be used to create the
.Nm uda
special files; should a special
file need to be created by hand, consult
.Xr mknod 8 .
.Pp
The
.Dv MSCP_PARANOIA
option enables runtime checking on all transfer completion responses
from the controller.
This increases disk I/O
overhead and may
be undesirable on slow machines, but is otherwise recommended.
.Pp
The first sector of each disk contains both a first-stage bootstrap program
and a disk label containing geometry information and partition layouts (see
.Xr disklabel 5 ) .
This sector is normally write-protected, and disk-to-disk copies should
avoid copying this sector.
The label may be updated with
.Xr disklabel 8 ,
which can also be used to write-enable and write-disable the sector.
The next 15 sectors contain a second-stage bootstrap program.
.Sh DISK SUPPORT
During autoconfiguration,
as well as when a drive is opened after all partitions are closed,
the first sector of the drive is examined for a disk label.
If a label is found, the geometry of the drive and the partition tables
are taken from it.
If no label is found,
the driver configures the type of each drive when it is first
encountered.
A default partition table in the driver is used for each type
of disk when a pack is not labelled.
The origin and size (in sectors) of the default pseudo-disks on each
drive are shown below.
Not all partitions begin on cylinder boundaries, as on other drives,
because previous drivers used one partition table for all drive types.
Variants of the partition tables are common; check the driver and the file
.Pa /etc/disktab
.Pq Xr disktab 5
for other possibilities.
.Pp
Special file names begin with
.Ql ra
and
.Ql rra
for the block and character files respectively.
The second component of the name, a drive unit number in the range of zero to
seven, is represented by a
.Ql \&?
in the disk layouts below.
The last component of the name is the file system partition designated
by a letter from
.Ql a
to
.Ql h
and which corresponds to a minor device number set: zero to seven,
eight to 15, 16 to 23 and so forth for drive zero, drive two and drive
three respectively (see
.Xr physio 9 ) .
The location and size (in sectors) of the partitions:
.Pp
RA60 partitions
.Bl -column "disk" "start" "length" -offset indent -compact
.It Sy "disk" Ta Sy "start" Ta Sy "length"
.It ra?a Ta 0 Ta 15884
.It ra?b Ta 15884 Ta 33440
.It ra?c Ta 0 Ta 400176
.It ra?d Ta 49324 Ta 82080 Ta "same as 4.2BSD ra?g"
.It ra?e Ta 131404 Ta 268772 Ta "same as 4.2BSD ra?h"
.It ra?f Ta 49324 Ta 350852
.It ra?g Ta 242606 Ta 157570
.It ra?h Ta 49324 Ta 193282
.El
.Pp
RA70 partitions
.Bl -column "disk" "start" "length" -offset indent -compact
.It Sy "disk" Ta Sy "start" Ta Sy "length"
.It ra?a Ta 0 Ta 15884
.It ra?b Ta 15972 Ta 33440
.It ra?c Ta 0 Ta 547041
.It ra?d Ta 34122 Ta 15884
.It ra?e Ta 357192 Ta 55936
.It ra?f Ta 413457 Ta 133584
.It ra?g Ta 341220 Ta 205821
.It ra?h Ta 49731 Ta 29136
.El
.Pp
RA80 partitions
.Bl -column "disk" "start" "length" -offset indent -compact
.It Sy "disk" Ta Sy "start" Ta Sy "length"
.It ra?a Ta 0 Ta 15884
.It ra?b Ta 15884 Ta 33440
.It ra?c Ta 0 Ta 242606
.It ra?e Ta 49324 Ta 193282 Ta "same as old Berkeley ra?g"
.It ra?f Ta 49324 Ta 82080 Ta "same as 4.2BSD ra?g"
.It ra?g Ta 49910 Ta 192696
.It ra?h Ta 131404 Ta 111202 Ta "same as 4.2BSD"
.El
.Pp
RA81 partitions
.Bl -column "disk" "start" "length" -offset indent -compact
.It Sy "disk" Ta Sy "start" Ta Sy "length"
.It ra?a Ta 0 Ta 15884
.It ra?b Ta 16422 Ta 66880
.It ra?c Ta 0 Ta 891072
.It ra?d Ta 375564 Ta 15884
.It ra?e Ta 391986 Ta 307200
.It ra?f Ta 699720 Ta 191352
.It ra?g Ta 375564 Ta 515508
.It ra?h Ta 83538 Ta 291346
.El
.Pp
RA81 partitions with 4.2BSD-compatible partitions
.Bl -column "disk" "start" "length" -offset indent -compact
.It Sy "disk" Ta Sy "start" Ta Sy "length"
.It ra?a Ta 0 Ta 15884
.It ra?b Ta 16422 Ta 66880
.It ra?c Ta 0 Ta 891072
.It ra?d Ta 49324 Ta 82080 Ta "same as 4.2BSD ra?g"
.It ra?e Ta 131404 Ta 759668 Ta "same as 4.2BSD ra?h"
.It ra?f Ta 412490 Ta 478582 Ta "same as 4.2BSD ra?f"
.It ra?g Ta 375564 Ta 515508
.It ra?h Ta 83538 Ta 291346
.El
.Pp
RA82 partitions
.Bl -column "disk" "start" "length" -offset indent -compact
.It Sy "disk" Ta Sy "start" Ta Sy "length"
.It ra?a Ta 0 Ta 15884
.It ra?b Ta 16245 Ta 66880
.It ra?c Ta 0 Ta 1135554
.It ra?d Ta 375345 Ta 15884
.It ra?e Ta 391590 Ta 307200
.It ra?f Ta 669390 Ta 466164
.It ra?g Ta 375345 Ta 760209
.It ra?h Ta 83790 Ta 291346
.El
.Pp
The ra?a partition is normally used for the root file system, the ra?b
partition as a paging area, and the ra?c partition for pack-pack
copying (it maps the entire disk).
.Sh FILES
.Bl -tag -width /dev/rra[0-9][a-p] -compact
.It Pa /dev/ra[0-9][a-p]
.It Pa /dev/rra[0-9][a-p]
.El
.Sh DIAGNOSTICS
.Bl -diag
.It "panic: udaslave"
No command packets were available while the driver was looking
for disk drives.
The controller is not extending enough credits to use the drives.
.It "uda0: no response to Get Unit Status request"
A disk drive was found, but did not respond to a status request.
This is either a hardware problem or someone pulling unit number
plugs very fast.
.It "uda0: unit N off line"
While searching for drives, the controller found one that
seems to be manually disabled.
It is ignored.
.It "uda0: unable to get unit status"
Something went wrong while trying to determine the status of
a disk drive.
This is followed by an error detail.
.It "uda0: unit N, next X"
This probably never happens, but I wanted to know if it did.
I have no idea what one should do about it.
.It "uda0: cannot handle unit number N (max is X)"
The controller found a drive whose unit number is too large.
Valid unit numbers are those in the range [0..7].
.It "uda0: uballoc map failed"
UNIBUS resource map allocation failed during initialization.
This can only happen if you have 496 devices on a UNIBUS.
.It "uda0: timeout during init"
The controller did not initialize within ten seconds.
A hardware problem, but it sometimes goes away if you try again.
.It "uda0: init failed, sa=..."
The controller refused to initialize.
.It "uda0: controller hung"
The controller never finished initialization.
Retrying may sometimes fix it.
.It "uda0: still hung"
When the controller hangs, the driver occasionally tries to reinitialize
it.
This means it just tried, without success.
.It "uda0: command ring too small"
If you increase
.Dv NCMDL2 ,
you may see a performance improvement.
(See
.Pa /sys/arch/vax/mscp/mscpreg.h . )
.It "uda0: controller error, sa=0%o (...)"
The controller reported an error.
The error code is printed in
octal, along with a short description if the code is known (see the
.%T UDA50 Maintenance Guide ,
DEC part number AA-M185B-TC, pp. 18-22).
If this occurs during normal
operation, the driver will reset it and retry pending I/O.
If
it occurs during configuration, the controller may be ignored.
.It "uda0: stray intr"
The controller interrupted when it should have stayed quiet.
The interrupt has been ignored.
.It "uda0: init step N failed, sa=..."
The controller reported an error during the named initialization step.
The driver will retry initialization later.
.It "uda0: version X model Y"
An informational message giving the revision level of the controller.
.It "uda0: DMA burst size set to N"
An informational message showing the DMA burst size, in words.
.It "uda0: SETCTLRC failed:  `detail'"
The Set Controller Characteristics command (the last part of the
controller initialization sequence) failed.
The
.Em detail
message tells why.
.It "uda0: attempt to bring ra0 on line failed:  `detail'"
The drive could not be brought on line.
The
.Em detail
message tells why.
.It "uda0: ra0: unknown type N"
The type index of the named drive is not known to the driver, so the
drive will be ignored.
.It "uda0: attempt to get status for ra0 failed:  `detail'"
A status request failed.
The
.Em detail
message should tell why.
.It "panic: udareplace"
The controller reported completion of a REPLACE operation.
The driver never issues any REPLACE operations, so something is wrong.
.It "panic: udabb"
The controller reported completion of bad block related I/O.
The
driver never issues any such, so something is wrong.
.It "uda0: lost interrupt"
The controller has gone out to lunch, and is being reset to try to bring
it back.
.It "panic: mscp_go: AEB_MAX_BP too small"
You defined
.Dv AVOID_EMULEX_BUG
and increased
.Dv NCMDL2
and Emulex has
new firmware.
Raise
.Dv AEB_MAX_BP
or turn off
.Dv AVOID_EMULEX_BUG .
.It "uda0: unit N: unknown message type 0xXXX ignored"
The controller responded with a mysterious message type.
See
.Pa /sys/vax/mscp.h
for a list of known message types.
This is probably a controller hardware problem.
.It "uda0: unit N out of range"
The disk drive unit number (the unit plug) is higher than the
maximum number the driver allows (currently 7).
.It "uda0: unit N not configured, message ignored"
The named disk drive has announced its presence to the controller,
but was not, or cannot now be, configured into the running system.
.Em Message
is one of `available attention' (an `I am here' message) or
`stray response op 0xXXXX status 0xXXXX' (anything else).
.It "Emulex SC41/MS screwup: uda0, got N correct, then changed 0xXXXX to 0xYYYY"
You turned on
.Dv AVOID_EMULEX_BUG ,
and the driver successfully
avoided the bug.
The number of correctly handled requests is
reported, along with the expected and actual values relating to
the bug being avoided.
.It "panic: unrecoverable Emulex screwup"
You turned on
.Dv AVOID_EMULEX_BUG ,
but Emulex was too clever and
avoided the avoidance.
Try turning on
.Dv MSCP_PARANOIA
instead.
.It "uda0: bad response packet ignored"
You turned on
.Dv MSCP_PARANOIA ,
and the driver caught the controller in
a lie.
The lie has been ignored, and the controller will soon be
reset (after a `lost' interrupt).
This is followed by a hex dump of the offending packet.
.It "uda0: ... error datagram"
The controller has reported some kind of error, either `hard'
(unrecoverable) or `soft' (recoverable).
If the controller is going on
(attempting to fix the problem), this message includes the remark
`(continuing)'.
Emulex controllers wrongly claim that all soft errors
are hard errors.
This message may be followed by
one of the following 5 messages, depending on its type, and will always
be followed by a failure detail message (also listed below).
.Bd -filled -offset indent
.Bl -diag
.It memory addr 0x%x
A host memory access error; this is the address that could not be
read.
.It "unit N: level N retry N, ... N"
A typical disk error; the retry count and error recovery levels are
printed, along with the block type (`lbn', or logical block; or `rbn',
or replacement block) and number.
If the string is something else, DEC
has been clever, or your hardware has gone to Australia for vacation
(unless you live there; then it might be in New Zealand, or Brazil).
.It unit N: ... N
Also a disk error, but an `SDI' error, whatever that is.
.Po
I doubt it has anything to do with Ronald Reagan.
.Pc
This lists the block type (`lbn' or `rbn') and number.
This is followed by a second
message indicating a microprocessor error code and a front panel code.
These latter codes are drive-specific, and are intended to
be used by field service as an aid in locating failing hardware.
The codes for RA81s can be found in the
.%T RA81 Maintenance Guide ,
DEC order number AA-M879A-TC, in appendices E and F.
.It "unit N: small disk error, cyl N"
Yet another kind of disk error, but for small disks.
.Po
.Do
That's what it says, guv'nor.
Dunnask me what it means.
.Dc
.Pc
.It "unit N: unknown error, format 0x%x"
A mysterious error: the given format code is not known.
.El
.Ed
.Pp
The detail messages are as follows:
.Bd -filled -offset indent
.Bl -diag
.It success (...) (code 0, subcode N)
Everything worked, but the controller thought it would let you know
that something went wrong.
No matter what subcode, this can probably
be ignored.
.It "invalid command (...) (code 1, subcode N)"
This probably cannot occur unless the hardware is out; ... should be
`invalid msg length', meaning some command was too short or too long.
.It "command aborted (unknown subcode) (code 2, subcode N)"
This should never occur, as the driver never aborts commands.
.It "unit offline (...) (code 3, subcode N)"
The drive is offline, either because it is not around (`unknown
drive'), stopped (`not mounted'), out of order (`inoperative'), has the
same unit number as some other drive (`duplicate'), or has been
disabled for diagnostics (`in diagnosis').
.It "unit available (unknown subcode) (code 4, subcode N)"
The controller has decided to report a perfectly normal event as
an error.
(Why?)
.It "media format error (...) (code 5, subcode N)"
The drive cannot be used without reformatting.
The Format Control
Table cannot be read (`fct unread - edc'), there is a bad sector
header (`invalid sector header'), the drive is not set for 512-byte
sectors (`not 512 sectors'), the drive is not formatted (`not formatted'),
or the FCT has an uncorrectable ECC error (`fct ecc').
.It "write protected (...) (code 6, subcode N)"
The drive is write protected, either by the front panel switch
(`hardware') or via the driver (`software').
The driver never sets software write protect.
.It "compare error (unknown subcode) (code 7, subcode N)"
A compare operation showed some sort of difference.
The driver never uses compare operations.
.It "data error (...) (code 7, subcode N)"
Something went wrong reading or writing a data sector.
A `forced
error' is a software-asserted error used to mark a sector that contains
suspect data.
Rewriting the sector will clear the forced error.
This is normally set only during bad block replacement, and the driver does
no bad block replacement, so these should not occur.
A `header compare' error probably means the block is shot.
A `sync timeout' presumably has something to do with sector synchronisation.
An `uncorrectable ecc' error is an ordinary data error that cannot
be fixed via ECC logic.
A `N symbol ecc' error is a data error
that can be (and presumably has been) corrected by the ECC logic.
It might indicate a sector that is imperfect but usable, or that
is starting to go bad.
If any of these errors recur, the sector
may need to be replaced.
.It "host buffer access error (...) (code N, subcode N)"
Something went wrong while trying to copy data to or from the host
(Vax).
The subcode is one of `odd xfer addr', `odd xfer count',
`non-exist. memory', or `memory parity'.
The first two could be a
software glitch; the last two indicate hardware problems.
.It controller error (...) (code N, subcode N)
The controller has detected a hardware error in itself.
A `serdes overrun' is a serialiser / deserialiser overrun; `edc'
probably stands for `error detection code'; and `inconsistent
internal data struct' is obvious.
.It "drive error (...) (code N, subcode N)"
Either the controller or the drive has detected a hardware error
in the drive.
I am not sure what an `sdi command timeout' is, but
these seem to occur benignly on occasion.
A `ctlr detected protocol'
error means that the controller and drive do not agree on a protocol;
this could be a cabling problem, or a version mismatch.
A `positioner'
error means the drive seek hardware is ailing; `lost rd/wr ready'
means the drive read/write logic is sick; and `drive clock dropout'
means that the drive clock logic is bad, or the media is hopelessly
scrambled.
I have no idea what `lost recvr ready' means.
A `drive detected error' is a catch-all for drive hardware trouble; `ctlr
detected pulse or parity' errors are often caused by cabling problems.
.El
.Ed
.El
.Sh SEE ALSO
.Xr intro 4 ,
.Xr mscpbus 4 ,
.Xr uba 4 ,
.Xr disklabel 5 ,
.Xr disklabel 8
.Sh HISTORY
The
.Nm
driver appeared in
.Bx 4.2 .
@


1.24
log
@reduce .Nd to one line and kill .Tn while here
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.23 2015/02/15 22:26:45 bentley Exp $
d33 1
a33 1
.Dd $Mdocdate: February 15 2015 $
@


1.23
log
@Use "In" to mark up include files, instead of wrongly wrapping with Aq.

Aq is not the same as <> in non-ASCII situations, so this caused
incorrect output in some places. And it provided no semantics besides.

ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.22 2014/11/15 14:41:02 bentley Exp $
d33 1
a33 1
.Dd $Mdocdate: November 15 2014 $
d38 1
a38 3
.Nd
.Tn UDA50
disk controller interface
d44 1
a44 3
This is a driver for the
.Tn DEC UDA50
disk controller and other
d46 2
a47 5
The
.Tn UDA50
communicates with the host through
a packet protocol known as the Mass Storage Control Protocol
.Pq Tn MSCP .
d258 1
a258 4
.Tn DEC
part number
.Tn AA-M185B-TC ,
pp. 18-22).
d272 1
a272 3
An informational message showing the
.Tn DMA
burst size, in words.
d293 2
a294 6
The controller reported completion of a
.Tn REPLACE
operation.
The driver never issues any
.Tn REPLACE Ns s ,
so something is wrong.
d372 1
a372 2
If the string is something else,
.Tn DEC
d429 1
a429 5
or the
.Tn FCT
has an uncorrectable
.Tn ECC
error (`fct ecc').
d448 1
a448 3
be fixed via
.Tn ECC
logic.
d450 1
a450 3
that can be (and presumably has been) corrected by the
.Tn ECC
logic.
@


1.22
log
@Reduce instances of `` '' in manuals.

troff displays these as typographic quotes, but nroff implementations
almost always print them literally, which rarely has the intended effect
with modern fonts, even in stock xterm.

These uses of `` '' can be replaced either with more semantic alternatives
or with Dq, which prints typographic quotes in a UTF-8 locale (but will
automatically fall back to `` '' in an ASCII locale).

improvements and ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.21 2013/06/02 20:51:58 tedu Exp $
d33 1
a33 1
.Dd $Mdocdate: June 2 2013 $
d56 1
a56 1
.Aq Pa vax/mscp.h
@


1.21
log
@remove some of the obvious lies. this man page is a real piece of work.
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.20 2013/06/02 20:42:27 tedu Exp $
d408 4
a411 1
``That's what it says, guv'nor. Dunnask me what it means.''
@


1.20
log
@first stab are replacing format strings in MD pages
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.19 2010/02/18 13:23:38 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: February 18 2010 $
a253 2
.It "panic: udastart: bp==NULL"
A bug in the driver has put an empty drive queue on a controller queue.
d259 1
a259 5
.Pa /sys/arch/vax/uba/uda.c . )
.It "panic: udastart"
A drive was found marked for status or on-line functions while performing
status or on-line functions.
This indicates a bug in the driver.
a284 15
.It "panic: udaintr"
Indicates a bug in the generic
.Tn MSCP
code.
.It "uda0: driver bug, state N"
The driver has a bogus value for the controller state.
Something is quite wrong.
This is immediately followed by a
.Sq panic: udastate .
.It "uda0: purge bdp N"
A benign message tracing BDP purges.
I have been trying to figure out what BDP purges are for.
You might want to comment out this
call to log() in
.Pa /sys/arch/vax/uba/uda.c .
@


1.19
log
@The nesting .Bl .Bd .It is incorrect, .It much be a direct child of .Bl,
not a grandchild.  Thus, insert another level of .Bl.
Found by and unbreaking the build with mandoc(1).
OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.18 2007/05/31 19:19:57 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d221 1
a221 1
.It "uda%d: no response to Get Unit Status request"
d225 1
a225 1
.It "uda%d: unit %d off line"
d229 1
a229 1
.It "uda%d: unable to get unit status"
d233 1
a233 1
.It "uda%d: unit %d, next %d"
d236 1
a236 1
.It "uda%d: cannot handle unit number %d (max is %d)"
d239 1
a239 1
.It "uda%d: uballoc map failed"
d242 1
a242 1
.It "uda%d: timeout during init"
d245 1
a245 1
.It "uda%d: init failed, sa=%b"
d247 1
a247 1
.It "uda%d: controller hung"
d250 1
a250 1
.It "uda%d: still hung"
d256 1
a256 1
.It "uda%d: command ring too small"
d266 1
a266 1
.It "uda%d: controller error, sa=0%o (%s)"
d279 1
a279 1
.It "uda%d: stray intr"
d282 1
a282 1
.It "uda%d: init step %d failed, sa=%b"
d285 1
a285 1
.It "uda%d: version %d model %d"
d287 1
a287 1
.It "uda%d: DMA burst size set to %d"
d295 1
a295 1
.It "uda%d: driver bug, state %d"
d300 1
a300 1
.It "uda%d: purge bdp %d"
d306 1
a306 1
.It "uda%d: SETCTLRC failed:  `detail'"
d312 1
a312 1
.It "uda%d: attempt to bring ra%d on line failed:  `detail'"
d317 1
a317 1
.It "uda%d: ra%d: unknown type %d"
d320 1
a320 1
.It "uda%d: attempt to get status for ra%d failed:  `detail'"
d336 1
a336 1
.It "uda%d: lost interrupt"
d350 1
a350 1
.It "uda%d: unit %d: unknown message type 0x%x ignored"
d356 1
a356 1
.It "uda%d: unit %d out of range"
d359 1
a359 1
.It "uda%d: unit %d not configured, message ignored"
d364 2
a365 2
`stray response op 0x%x status 0x%x' (anything else).
.It "Emulex SC41/MS screwup: uda%d, got %d correct, then changed 0x%x to 0x%x"
d381 1
a381 1
.It "uda%d: bad response packet ignored"
d389 1
a389 1
.It "uda%d: %s error datagram"
d405 1
a405 1
.It "unit %d: level %d retry %d, %s %d"
d413 1
a413 1
.It unit %d: %s %d
d426 1
a426 1
.It "unit %d: small disk error, cyl %d"
d431 1
a431 1
.It "unit %d: unknown error, format 0x%x"
d439 1
a439 1
.It success (%s) (code 0, subcode %d)
d444 2
a445 2
.It "invalid command (%s) (code 1, subcode %d)"
This probably cannot occur unless the hardware is out; %s should be
d447 1
a447 1
.It "command aborted (unknown subcode) (code 2, subcode %d)"
d449 1
a449 1
.It "unit offline (%s) (code 3, subcode %d)"
d454 1
a454 1
.It "unit available (unknown subcode) (code 4, subcode %d)"
d458 1
a458 1
.It "media format error (%s) (code 5, subcode %d)"
d469 1
a469 1
.It "write protected (%s) (code 6, subcode %d)"
d473 1
a473 1
.It "compare error (unknown subcode) (code 7, subcode %d)"
d476 1
a476 1
.It "data error (%s) (code 7, subcode %d)"
d490 1
a490 1
A `%d symbol ecc' error is a data error
d498 1
a498 1
.It "host buffer access error (%s) (code %d, subcode %d)"
d505 1
a505 1
.It controller error (%s) (code %d, subcode %d)
d510 1
a510 1
.It "drive error (%s) (code %d, subcode %d)"
@


1.18
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.17 2003/07/21 09:24:33 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d401 1
d433 1
d438 1
d526 1
@


1.17
log
@better format for tables;
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.16 2003/06/02 23:30:14 millert Exp $
d33 1
a33 1
.Dd March 27, 1991
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.15 2003/03/12 07:36:44 jmc Exp $
d111 1
a111 1
.Sq Li ra
d113 1
a113 1
.Sq Li rra
d117 1
a117 1
.Sq Li ?
d121 1
a121 1
.Sq Li a
d123 1
a123 1
.Sq Li h
d129 76
a204 65
.Bl -column header diskx undefined length
.Tn RA60 No partitions
.Sy	disk	start	length
	ra?a	0	15884
	ra?b	15884	33440
	ra?c	0	400176
	ra?d	49324	82080	same as 4.2BSD ra?g
	ra?e	131404	268772	same as 4.2BSD ra?h
	ra?f	49324	350852
	ra?g	242606	157570
	ra?h	49324	193282

.Tn RA70 No partitions
.Sy	disk	start	length
	ra?a	0	15884
	ra?b	15972	33440
	ra?c	0	547041
	ra?d	34122	15884
	ra?e	357192	55936
	ra?f	413457	133584
	ra?g	341220	205821
	ra?h	49731	29136

.Tn RA80 No partitions
.Sy	disk	start	length
	ra?a	0	15884
	ra?b	15884	33440
	ra?c	0	242606
	ra?e	49324	193282	same as old Berkeley ra?g
	ra?f	49324	82080	same as 4.2BSD ra?g
	ra?g	49910	192696
	ra?h	131404	111202	same as 4.2BSD

.Tn RA81 No partitions
.Sy	disk	start	length
	ra?a	0	15884
	ra?b	16422	66880
	ra?c	0	891072
	ra?d	375564	15884
	ra?e	391986	307200
	ra?f	699720	191352
	ra?g	375564	515508
	ra?h	83538	291346

.Tn RA81 No partitions with 4.2BSD-compatible partitions
.Sy	disk	start	length
	ra?a	0	15884
	ra?b	16422	66880
	ra?c	0	891072
	ra?d	49324	82080	same as 4.2BSD ra?g
	ra?e	131404	759668	same as 4.2BSD ra?h
	ra?f	412490	478582	same as 4.2BSD ra?f
	ra?g	375564	515508
	ra?h	83538	291346

.Tn RA82 No partitions
.Sy	disk	start	length
	ra?a	0	15884
	ra?b	16245	66880
	ra?c	0	1135554
	ra?d	375345	15884
	ra?e	391590	307200
	ra?f	669390	466164
	ra?g	375345	760209
	ra?h	83790	291346
a220 1
.Pp
a224 1
.Pp
a228 1
.Pp
a232 1
.Pp
a235 1
.Pp
a238 1
.Pp
a241 1
.Pp
a244 1
.Pp
a246 1
.Pp
a249 1
.Pp
a253 1
.Pp
a255 1
.Pp
a261 1
.Pp
a265 1
.Pp
a278 1
.Pp
a281 1
.Pp
a284 1
.Pp
a286 1
.Pp
a290 1
.Pp
a294 1
.Pp
a299 1
.Pp
a305 1
.Pp
a311 1
.Pp
a316 1
.Pp
a319 1
.Pp
a324 1
.Pp
a331 1
.Pp
a335 1
.Pp
a338 1
.Pp
a349 1
.Pp
a355 1
.Pp
a358 1
.Pp
a364 1
.Pp
a372 1
.Pp
a380 1
.Pp
a388 1
.Pp
a403 1
.Pp
a411 1
.Pp
a424 1
.Pp
a429 1
.Pp
a440 1
.Pp
a443 1
.Pp
a445 1
.Pp
a450 1
.Pp
a454 1
.Pp
a465 1
.Pp
a469 1
.Pp
a472 1
.Pp
a494 1
.Pp
a506 1
.Pp
@


1.15
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.14 2003/03/07 11:28:10 hugh Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.14
log
@Standardize on "UNIBUS" and "Q-bus" in section 4.
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.13 2003/03/06 22:57:29 jason Exp $
d68 1
a68 1
for a description of block I/O .
d283 1
a283 1
operation, the driver will reset it and retry pending I/O .
d318 2
a319 1
call to log() in /sys/arch/vax/uba/uda.c.
d353 1
a353 1
The controller reported completion of bad block related I/O .
@


1.13
log
@uba man page and xrs
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.12 2003/03/06 19:29:14 jason Exp $
d239 2
a240 2
Unibus resource map allocation failed during initialization.
This can only happen if you have 496 devices on a Unibus.
@


1.12
log
@add ra device man page:
- move many of the ra specific DIAGNOSTICS from uda.4 -> ra.4
- Xr appropriately
(ra.4 needs more work, volunteers?)
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.11 2003/03/06 17:52:07 jason Exp $
d570 1
@


1.11
log
@Very brief mscpbus man page
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.10 2002/10/01 21:05:31 miod Exp $
d230 1
a230 1
.It uda%d: unit %d, next %d
a237 11
.It "ra%d: don't have a partition table for %s; using (s,t,c)=(%d,%d,%d)"
The controller found a drive whose media identifier (e.g. `RA 25')
does not have a default partition table.
A temporary partition
table containing only an `a' partition has been created covering
the entire disk, which has the indicated numbers of sectors per
track (s), tracks per cylinder (t), and total cylinders (c).
Give the pack a label with the
.Xr disklabel 8
utility.
.Pp
d242 1
a242 1
.It uda%d: timeout during init
d246 1
a246 1
.It uda%d: init failed, sa=%b
d249 1
a249 1
.It uda%d: controller hung
d253 1
a253 6
.It ra%d: drive will not come on line
The drive will not come on line, probably because it is spun down.
This should be preceded by a message giving details as to why the
drive stayed off line.
.Pp
.It uda%d: still hung
d258 1
a258 1
.It panic: udastart: bp==NULL
d261 1
a261 1
.It uda%d: command ring too small
d268 1
a268 1
.It panic: udastart
d287 1
a287 1
.It uda%d: stray intr
d295 1
a295 1
.It uda%d: version %d model %d
d298 1
a298 1
.It uda%d: DMA burst size set to %d
d303 1
a303 1
.It panic: udaintr
d308 1
a308 1
.It uda%d: driver bug, state %d
d314 1
a314 1
.It uda%d: purge bdp %d
d333 1
a333 1
.It uda%d: ra%d: unknown type %d
a336 15
.It "ra%d: changed types! was %d now %d"
A drive somehow changed from one kind to another, e.g., from an
.Tn RA80
to an
.Tn RA60 .
The numbers printed are the encoded media identifiers (see
.Ao Pa vax/mscp.h Ac
for the encoding).
The driver believes the new type.
.Pp
.It "ra%d: uda%d, unit %d, size = %d sectors"
The named drive is on the indicated controller as the given unit,
and has that many sectors of user-file area.
This is printed during configuration.
.Pp
d343 1
a343 14
.It ra%d: bad block report: %d
The drive has reported the given block as bad.
If there are multiple bad blocks, the drive will report only the first;
in this case this message will be followed by `+ others'.
Get
.Tn DEC
to forward the
block with
.Tn EVRLK .
.Pp
.It ra%d: serious exception reported
I have no idea what this really means.
.Pp
.It panic: udareplace
d351 1
a351 1
.It panic: udabb
d356 1
a356 1
.It uda%d: lost interrupt
d360 1
a360 1
.It panic: mscp_go: AEB_MAX_BP too small
a389 17
.It ra%d: bad lbn (%d)?
The drive has reported an invalid command error, probably due to an
invalid block number.
If the lbn value is very much greater than the
size reported by the drive, this is the problem.
It is probably due to an improperly configured partition table.
Other invalid commands indicate a bug in the driver, or hardware trouble.
.Pp
.It ra%d: duplicate ONLINE ignored
The drive has come on-line while already on-line.
This condition can probably be ignored (and has been).
.Pp
.It ra%d: io done, but no buffer?
Hardware trouble, or a bug; the drive has finished an I/O
request,
but the response has an invalid (zero) command reference number.
.Pp
d399 1
a399 1
.It panic: unrecoverable Emulex screwup
d408 1
a408 1
.It uda%d: bad response packet ignored
d417 1
a417 23
.It ra%d: bogus REPLACE end
The drive has reported finishing a bad sector replacement, but the
driver never issues bad sector replacement commands.
The report is ignored.
This is likely a hardware problem.
.Pp
.It "ra%d: unknown opcode 0x%x status 0x%x ignored"
The drive has reported something that the driver cannot understand.
Perhaps
.Tn DEC
has been inventive, or perhaps your hardware is ill.
This is followed by a hex dump of the offending packet.
.Pp
.It "ra%d%c: hard error %sing fsbn %d [of %d-%d] (ra%d bn %d cn %d tn %d sn %d)."
An unrecoverable error occurred during transfer of the specified
filesystem block number(s),
which are logical block numbers on the indicated partition.
If the transfer involved multiple blocks, the block range is printed as well.
The parenthesized fields list the actual disk sector number
relative to the beginning of the drive,
as well as the cylinder, track and sector number of the block.
.Pp
.It uda%d: %s error datagram
@


1.10
log
@Last minute cleanings (yes, close to release, last minutes spend longer
than regular minutes):
- do not install manual pages covering hardware we do not currently support
- link autoconf(4)
- remove mtio(4), this is an mi page now
- do not link kUmem(4) -> mem(4) since there is no corresponding code. What
a joke.
- .Xr .Cd police
- intro(4) update, closer to reality

ok hugh@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.9 2001/11/13 13:54:26 mpech Exp $
d652 1
@


1.9
log
@o) Fix bogus .Xr usage;
o) CAVEAT -> CAVEATS;
o) AUTHOR -> AUTHORS;
o) Start new sentence on a new line;
o) For URL and path names use .Pa;
o) We don't like .Pp before .Rs;
o) Don't use .Pp before/after .Sh;
o) OpenBSD -> .Ox;

millert@@ ok and help;
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.8 2001/10/05 14:45:54 mpech Exp $
d46 3
a48 3
.Cd "controller uda0 at uba0 csr 0172150 vector udaintr"
.Cd "disk ra0 at uda0 drive 0"
.Cd "options MSCP_PARANOIA"
d204 3
a206 3
.Bl -tag -width /dev/rra[0-9][a-f] -compact
.It Pa /dev/ra[0-9][a-f]
.It Pa /dev/rra[0-9][a-f]
d282 1
a282 1
.Pa /sys/vaxuba/uda.c . )
d334 1
a334 1
call to log() in /sys/vaxuba/uda.c.
d336 1
a336 1
.It uda%d: SETCTLRC failed:  `detail'
d651 1
@


1.8
log
@Powered by @@mantoya:
o) start new sentence on a new line;
o) minor mdoc fixes;
millert@@ ok

Tip of the day:   www.mpechismazohist.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.7 2001/06/23 08:02:03 pjanzen Exp $
d246 1
a246 1
.Xr disklabel
@


1.7
log
@More spelling fixes from jsyn@@nthought.com, and some formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.6 2001/06/20 16:49:44 millert Exp $
d53 2
a54 1
compatible controllers.  The
d106 3
a108 3
drive are shown below.  Not all partitions begin on cylinder
boundaries, as on other drives, because previous drivers used one
partition table for all drive types.
d542 1
a542 1
``That's what it says, guv'nor.  Dunnask me what it means.''
d572 2
a573 1
an error.  (Why?)
@


1.6
log
@physio(9) not physio(4)
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.5 1999/09/23 04:12:06 alex Exp $
d67 1
a67 2
for a description of block
.Tn I/O .
d79 2
a80 2
from the controller.  This increases disk
.Tn I/O
d101 4
a104 3
encountered.  A default partition table in the driver is used for each type
of disk when a pack is not labelled.  The origin and size
(in sectors) of the default pseudo-disks on each
d107 2
a108 2
partition table for all drive types.  Variants of the partition tables
are common; check the driver and the file
d117 2
a118 2
for the block and character files respectively. The second
component of the name, a drive unit number in the range of zero to
d121 2
a122 3
in the disk layouts below. The last component of the name is the
file system partition
designated
d129 2
a130 2
three respectively, (see
.Xr physio 9) .
d211 2
a212 2
for disk drives.  The controller is not extending enough credits
to use the drives.
d221 2
a222 1
seems to be manually disabled.  It is ignored.
d226 2
a227 1
a disk drive.  This is followed by an error detail.
d230 2
a231 2
This probably never happens, but I wanted to know if it did.  I
have no idea what one should do about it.
d239 2
a240 1
does not have a default partition table.  A temporary partition
d249 2
a250 2
Unibus resource map allocation failed during initialisation.  This
can only happen if you have 496 devices on a Unibus.
d253 2
a254 2
The controller did not initialise within ten seconds.  A hardware
problem, but it sometimes goes away if you try again.
d257 1
a257 1
The controller refused to initialise.
d260 2
a261 2
The controller never finished initialisation.  Retrying may sometimes
fix it.
d269 3
a271 2
When the controller hangs, the driver occasionally tries to reinitialise
it.  This means it just tried, without success.
d285 2
a286 1
status or on-line functions.  This indicates a bug in the driver.
d289 2
a290 1
The controller reported an error.  The error code is printed in
d298 1
a298 2
operation, the driver will reset it and retry pending
.Tn I/O .
d303 2
a304 2
The controller interrupted when it should have stayed quiet.  The
interrupt has been ignored.
d307 2
a308 2
The controller reported an error during the named initialisation step.
The driver will retry initialisation later.
d324 4
a327 2
The driver has a bogus value for the controller state.  Something
is quite wrong.  This is immediately followed by a `panic: udastate'.
d330 3
a332 2
A benign message tracing BDP purges.  I have been trying to figure
out what BDP purges are for.  You might want to comment out this
d337 2
a338 1
controller initialisation sequence) failed.  The
d343 2
a344 1
The drive could not be brought on line.  The
d364 2
a365 2
and has that many sectors of user-file area.  This is printed
during configuration.
d368 2
a369 1
A status request failed.  The
d374 4
a377 3
The drive has reported the given block as bad.  If there are multiple
bad blocks, the drive will report only the first; in this case this
message will be followed by `+ others'.  Get
d389 2
a390 2
operation.  The
driver never issues any
d395 1
a395 2
The controller reported completion of bad block related
.Tn I/O .
d409 2
a410 1
new firmware.  Raise
d416 2
a417 1
The controller responded with a mysterious message type. See
d419 2
a420 2
for a list of known message types.  This is probably
a controller hardware problem.
d435 5
a439 4
invalid block number.  If the lbn value is very much greater than the
size reported by the drive, this is the problem.  It is probably due to
an improperly configured partition table.  Other invalid commands
indicate a bug in the driver, or hardware trouble.
d442 2
a443 2
The drive has come on-line while already on-line.  This condition
can probably be ignored (and has been).
d446 1
a446 2
Hardware trouble, or a bug; the drive has finished an
.Tn I/O
d454 2
a455 1
avoided the bug.  The number of correctly handled requests is
d463 2
a464 1
avoided the avoidance.  Try turning on
d472 4
a475 3
a lie.  The lie has been ignored, and the controller will soon be
reset (after a `lost' interrupt).  This is followed by a hex dump of
the offending packet.
d479 3
a481 2
driver never issues bad sector replacement commands.  The report
is ignored.  This is likely a hardware problem.
d501 2
a502 1
(unrecoverable) or `soft' (recoverable).  If the controller is going on
d504 4
a507 2
`(continuing)'.  Emulex controllers wrongly claim that all soft errors
are hard errors.  This message may be followed by
d518 2
a519 1
or replacement block) and number.  If the string is something else,
d525 8
a532 5
Also a disk error, but an `SDI' error, whatever that is.  (I doubt
it has anything to do with Ronald Reagan.)  This lists the block
type (`lbn' or `rbn') and number.  This is followed by a second
message indicating a microprocessor error code and a front panel
code.  These latter codes are drive-specific, and are intended to
d539 4
a542 2
Yet another kind of disk error, but for small disks.  (`That's what
it says, guv'nor.  Dunnask me what it means.')
d552 2
a553 1
that something went wrong.  No matter what subcode, this can probably
d574 2
a575 1
The drive cannot be used without reformatting.  The Format Control
d587 2
a588 2
(`hardware') or via the driver (`software').  The driver never
sets software write protect.
d591 2
a592 2
A compare operation showed some sort of difference.  The driver
never uses compare operations.
d595 2
a596 1
Something went wrong reading or writing a data sector.  A `forced
d598 6
a603 5
suspect data.  Rewriting the sector will clear the forced error.  This
is normally set only during bad block replacement, and the driver does
no bad block replacement, so these should not occur.  A `header
compare' error probably means the block is shot.  A `sync timeout'
presumably has something to do with sector synchronisation.
d607 2
a608 1
logic.  A `%d symbol ecc' error is a data error
d613 2
a614 1
is starting to go bad.  If any of these errors recur, the sector
d619 4
a622 2
(Vax).  The subcode is one of `odd xfer addr', `odd xfer count',
`non-exist. memory', or `memory parity'.  The first two could be a
d625 2
a626 2
The controller has detected a hardware error in itself.  A
`serdes overrun' is a serialiser / deserialiser overrun; `edc'
d632 4
a635 2
in the drive.  I am not sure what an `sdi command timeout' is, but
these seem to occur benignly on occasion.  A `ctlr detected protocol'
d637 2
a638 1
this could be a cabling problem, or a version mismatch.  A `positioner'
d642 3
a644 2
scrambled.  I have no idea what `lost recvr ready' means.  A `drive
detected error' is a catch-all for drive hardware trouble; `ctlr
@


1.5
log
@Typo fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.4 1999/06/05 13:18:39 aaron Exp $
d66 1
a66 1
.Xr physio 4
d131 1
a131 1
.Xr physio 4) .
@


1.4
log
@more .Os cleanup, remove some trailing whitespace, cleanse some .Nm
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.3 1999/05/12 13:26:50 aaron Exp $
d255 1
a255 1
The controller refused to initalise.
d571 1
a571 1
is normally set only during bad block replacment, and the driver does
@


1.3
log
@grammar police: do not hyphenate compound words that act as adjectives if the
first word ends in -ly

i.e., fully-qualified, newly-created, globally-visible, etc. are wrong
@
text
@d1 1
a1 1
.\"	$OpenBSD: uda.4,v 1.2 1996/03/29 10:17:33 niklas Exp $
d39 1
a39 1
.Os BSD 4
d606 1
a606 1
scrambled.  I have no idea what `lost recvr ready' means.  A `drive 
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d442 1
a442 1
avoided the bug.  The number of correctly-handled requests is
@


1.1
log
@Initial revision
@
text
@d1 3
a35 1
.\"	$Id: uda.4,v 1.2 1993/08/01 07:35:56 mycroft Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
