head	1.29;
access;
symbols
	OPENBSD_6_1_BASE:1.29
	OPENBSD_6_0:1.28.0.16
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.4
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.28.0.12
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.10
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.28.0.8
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.28.0.6
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.28.0.2
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.27.0.2
	OPENBSD_5_3_BASE:1.27
	OPENBSD_5_2:1.26.0.8
	OPENBSD_5_2_BASE:1.26
	OPENBSD_5_1_BASE:1.26
	OPENBSD_5_1:1.26.0.6
	OPENBSD_5_0:1.26.0.4
	OPENBSD_5_0_BASE:1.26
	OPENBSD_4_9:1.26.0.2
	OPENBSD_4_9_BASE:1.26
	OPENBSD_4_8:1.25.0.2
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.24.0.2
	OPENBSD_4_7_BASE:1.24
	OPENBSD_4_6:1.23.0.12
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.23.0.8
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.23.0.6
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.23.0.4
	OPENBSD_4_3_BASE:1.23
	OPENBSD_4_2:1.23.0.2
	OPENBSD_4_2_BASE:1.23
	OPENBSD_4_1:1.22.0.4
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.22.0.2
	OPENBSD_4_0_BASE:1.22
	OPENBSD_3_9:1.19.0.6
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.4
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.2
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.17.0.4
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.17.0.2
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@.\" @;


1.29
date	2016.08.31.13.54.58;	author jmc;	state Exp;
branches;
next	1.28;
commitid	9uZxn8BH0fazw7wt;

1.28
date	2013.03.15.11.12.25;	author ratchov;	state Exp;
branches;
next	1.27;

1.27
date	2013.01.08.13.51.20;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2010.10.04.09.32.43;	author ratchov;	state Exp;
branches;
next	1.25;

1.25
date	2010.07.31.08.33.20;	author ratchov;	state Exp;
branches;
next	1.24;

1.24
date	2009.07.09.10.14.41;	author eric;	state Exp;
branches;
next	1.23;

1.23
date	2007.05.31.19.19.51;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2006.04.08.13.15.48;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2006.04.08.08.35.16;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2006.04.07.22.53.21;	author jsg;	state Exp;
branches;
next	1.19;

1.19
date	2004.12.24.10.10.47;	author jsg;	state Exp;
branches;
next	1.18;

1.18
date	2004.12.17.08.04.45;	author jsg;	state Exp;
branches;
next	1.17;

1.17
date	2004.03.21.19.47.59;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2003.11.08.19.19.58;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.11.08.16.54.01;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2003.08.31.19.39.27;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.06.10.29.41;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2002.11.28.23.27.40;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2002.09.26.07.55.40;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.27.18.10.38;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.26.16.51.48;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.13.18.26.53;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.05.14.45.53;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.06.15.04.34;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.21.21.01.17;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.07.21.11.20.33;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.07.09.13.35.48;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.05.16.19.56.30;	author alex;	state Exp;
branches;
next	1.1;

1.1
date	99.01.07.22.32.57;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.29
log
@remove Xrs to ym, sea, and wss;
@
text
@.\" $OpenBSD: midi.4,v 1.28 2013/03/15 11:12:25 ratchov Exp $
.\"
.\" Copyright (c) 2006 Alexandre Ratchov <alex@@caoua.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: March 15 2013 $
.Dt MIDI 4
.Os
.Sh NAME
.Nm midi
.Nd raw device independent interface to MIDI ports
.Sh SYNOPSIS
.Cd "midi* at autri?"
.Cd "midi* at eap?"
.Cd "midi* at envy?"
.Cd "midi* at mpu?"
.Cd "midi* at sb?"
.Cd "midi* at umidi?"
.Cd "midi* at ym?"
.Sh DESCRIPTION
The
.Nm
driver makes MIDI ports available to user applications.
A
.Nm
device corresponds to 2 MIDI ports: one input port and one
output port.
Data received on the input port is not interpreted and is passed
to the user program as-is.
Similarly, data issued by the user program is sent as-is to the
output port.
.Pp
Only one process may hold open a
.Nm
device at a given time, although file descriptors may be shared
between processes once the first open completes.
If it is opened read-only (write-only) only the input (output)
MIDI port is available.
.Ss Writing to the device
A process can send raw MIDI data to the output port by using the
.Xr write 2
system call.
Data is queued and the system call returns immediately; the data
is sent as fast as possible to the output MIDI port.
However, if the in-kernel buffer is full or the requested amount
is too large, then
.Xr write 2
may block.
The current size of the in-kernel buffer is 1024 bytes, which
ensures that
.Xr write 2
isn't blocking in most situations.
.Ss Reading from the device
Data received from the input MIDI port is stored into the
in-kernel buffer.
A process can retrieve its contents by using
the
.Xr read 2
system call.
If there is less data than the amount requested for reading, then
a shorter amount is returned.
If no data is available, then the
.Xr read 2
system call will block until data is received,
and then return immediately.
.Pp
The MIDI protocol has been designed for real-time performance and
doesn't support flow control.
An application must be able to read the incoming data fast enough
(the MIDI standard's maximum rate is 3125 bytes per second).
The kernel can buffer up to 1024 bytes; once the buffer is full
input will be silently discarded.
.Ss Polling the device
A process can use the
.Xr poll 2
system call to poll for the following events:
.Bl -tag -width POLLOUT
.It Dv POLLIN
The in-kernel input buffer isn't empty, i.e. at least one byte is
available for reading.
A subsequent call to
.Xr read 2
will not be blocking.
.It Dv POLLOUT
The in-kernel output buffer is empty, thus a subsequent call to
.Xr write 2
will not be blocking if a reasonable amount of data is written
(currently less that 1024 bytes).
.El
.Pp
Using the
.Xr poll 2
system call is the recommended way to handle multiple
.Nm
devices in a real-time MIDI application.
.Ss Non-blocking I/O
If the
.Nm
device is opened with the O_NONBLOCK flag (see
.Xr open 2 ) ,
then subsequent calls to
.Xr read 2
or
.Xr write 2
will never block.
The
.Xr write 2
system call may write less bytes than requested, or may return
EAGAIN if no data could be sent or queued.
Similarly, the
.Xr read 2
system call may return EAGAIN if no input is available.
.Pp
Note that even if non-blocking I/O is not selected,
.Xr read 2
and
.Xr write 2
system calls are non-blocking when the kernel buffers permit it.
.Sh FILES
.Bl -tag -width /dev/rmidim -compact
.It Pa /dev/rmidi*
.Nm
devices
.El
.Sh EXAMPLES
The following command could record the memory dump of a
synthesizer in a file:
.Pp
.Dl $ cat -u /dev/rmidi2 >dumpfile
.Pp
A MIDI keyboard could be connected to a synthesizer by the
command:
.Pp
.Dl $ cat -u /dev/rmidi1 >/dev/rmidi2
.Pp
The input port could be connected to the output port by the
command:
.Pp
.Dl $ cat -u <>/dev/rmidi1 >&0
.Pp
The following example reads MIDI timing events from an input
device, MIDI common and voice events from another input device, and
sends the result to a third (output) device.
.Bd -literal -offset indent
#define BUFSIZE		0x100
#define ISTIMING(c)	((c) == 0xf8 || (c) == 0xfa || (c) == 0xfc)
#define ISCOMMON(c)	((c) < 0xf8)

int ofd;
struct pollfd ifd[2];
unsigned char ibuf[BUFSIZE], obuf[2 * BUFSIZE];
ssize_t iused, oused, i;

ifd[0].events = ifd[1].events = POLLIN;
for (;;) {
	oused = 0;
	if (poll(ifd, 2, -1) == -1)
		errx(1, "poll");
	if (ifd[0].revents & POLLIN) {
		if ((iused = read(ifd[0].fd, ibuf, BUFSIZE)) == -1)
			errx(1, "read");
		for (i = 0; i < iused; i++)
			if (ISTIMING(ibuf[i]))
				obuf[oused++] = ibuf[i];
	}
	if (ifd[1].revents & POLLIN) {
		if ((iused = read(ifd[1].fd, ibuf, BUFSIZE)) == -1)
			errx(1, "read");
		for (i = 0; i < iused; i++)
			if (ISCOMMON(ibuf[i]))
				obuf[oused++] = ibuf[i];
	}
	if (write(ofd, obuf, oused) == -1)
		errx(1, "write");
}
.Ed
.Pp
In the above example, unless kernel buffers are full, processing
is done in real-time without any noticeable latency; as expected,
the only blocking system call is
.Xr poll 2 .
.Sh ERRORS
If
.Xr open 2 ,
.Xr read 2 ,
.Xr write 2 ,
or
.Xr poll 2
fail then
.Xr errno 2
may be set to one of:
.Bl -tag -width Er
.It Bq Er ENXIO
The device is opened read-only (write-only) but
.Xr write 2
.Pf ( Xr read 2 )
was called.
.It Bq Er EIO
The device is being detached while a process has been trying to
read or write (for instance an
.Xr umidi 4
device has been unplugged).
.It Bq Er EAGAIN
Non-blocking I/O was selected and the output buffer is full (on
writing) or the input buffer is empty (on reading).
.It Bq Er EBUSY
The device is already open by another process.
.El
.Sh SEE ALSO
.Xr autri 4 ,
.Xr eap 4 ,
.Xr envy 4 ,
.Xr mpu 4 ,
.Xr sb 4 ,
.Xr umidi 4
.Sh HISTORY
The
.Nm
driver first appeared in
.Ox 2.5 .
.Sh AUTHORS
.An -nosplit
The
.Nm
driver was originally written by
.An Lennart Augustsson
and later largely rewritten by
.An Alexandre Ratchov .
.Sh CAVEATS
MIDI hardware was designed for real time performance and software
using such hardware must be able to process MIDI events without
any noticeable latency (typically no more than 5ms, which
is the time it takes for sound to propagate 1.75 meters).
.Pp
The
.Ox
.Nm
driver processes data fast enough, however if a MIDI application
tries to write data faster than the hardware is able to process it
(typically 3125 bytes per second), then kernel buffers may become
full and the application may be blocked.
.Pp
The other common reason for MIDI data being delayed is the system
load.
Processes cannot be preempted while running in kernel mode.
If there are too much processes running concurrently (especially
if they are running a lot of expensive system calls) then the
scheduling of a real-time MIDI application may be delayed.
Even on low-end machines this delay hardly reaches a few
milliseconds provided that the system load is reasonable.
.Pp
A real-time MIDI application can avoid being swapped by locking
its memory (see
.Xr mlock 2
and
.Xr mlockall 2 ) .
.Sh BUGS
For a given device, even if the physical MIDI input and output
ports are independent, there is no way for one process to use the
input MIDI port and for another process to use the output MIDI
port at the same time.
@


1.28
log
@remove reference to the sequencer device, from jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.27 2013/01/08 13:51:20 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: January 8 2013 $
d226 1
a226 2
.Xr umidi 4 ,
.Xr ym 4
@


1.27
log
@simpler text; from Jan Stary
ok ratchov
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.26 2010/10/04 09:32:43 ratchov Exp $
d17 1
a17 1
.Dd $Mdocdate: October 4 2010 $
a225 1
.Xr sequencer 4 ,
@


1.26
log
@add support for midi(4) ports to envy(4)
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.25 2010/07/31 08:33:20 ratchov Exp $
d17 1
a17 1
.Dd $Mdocdate: July 31 2010 $
d246 1
a246 2
corresponds to the time it takes to the sound to propagate 1.75
meters).
@


1.25
log
@remove the ``midisyn'' framework and anything using it, i.e., the opl
device and the midi interface to pcppi.
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.24 2009/07/09 10:14:41 eric Exp $
d17 1
a17 1
.Dd $Mdocdate: July 9 2009 $
d26 1
d223 1
@


1.24
log
@promote correct style for error checking

ok tedu@@ deraadt@@ krw@@
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.23 2007/05/31 19:19:51 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: May 31 2007 $
a26 2
.Cd "midi* at opl?"
.Cd "midi* at pcppi?"
a222 2
.Xr opl 4 ,
.Xr pcppi 4 ,
@


1.23
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.22 2006/04/08 13:15:48 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate$
d169 1
a169 1
	if (poll(ifd, 2, -1) < 0)
d172 1
a172 1
		if ((iused = read(ifd[0].fd, ibuf, BUFSIZE)) < 0)
d179 1
a179 1
		if ((iused = read(ifd[1].fd, ibuf, BUFSIZE)) < 0)
d185 1
a185 1
	if (write(ofd, obuf, oused) < 0)
@


1.22
log
@add an AUTHORS section, and make HISTORY more obsd-specific;
much help and ok jsg
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.21 2006/04/08 08:35:16 jmc Exp $
d17 1
a17 1
.Dd April 6, 2006
@


1.21
log
@various tweaks;
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.20 2006/04/07 22:53:21 jsg Exp $
d231 13
@


1.20
log
@Improved MIDI manpages from Alexandre Ratchov.
@
text
@d1 1
a1 1
.\" $OpenBSD$
d33 1
a33 1
The 
d36 1
a36 1
A 
d45 1
a45 1
Only one process may hold open a 
d59 1
a59 1
.Xr write 2 
d62 1
a62 1
ensures that 
d69 1
a69 1
the 
d76 2
a77 2
system call will block until data is received, then it will
returned immediately.
d86 1
a86 1
A process can use the 
d95 1
a95 1
will not be blocking
d97 1
a97 1
The in-kernel output buffer is empty, thus a subsequent call to 
d100 1
a100 1
(currently less that 1024 bytes)
d103 1
a103 1
Using the 
d105 1
a105 1
system call is the recommended way to handle multiple 
d109 1
a109 1
If the 
d112 2
a113 2
.Xr open 2 
manual page), then subsequent calls to 
d115 1
a115 1
or 
d122 1
a122 1
Similarly, the 
d128 1
a128 1
and 
d131 6
d154 1
a154 1
device, MIDI common and voice events from another input device and
d175 1
a175 1
			if (ISTIMING(ibuf[i])) 
d192 1
a192 1
the only blocking system call is 
a193 6
.Sh FILES
.Bl -tag -width /dev/rmidim -compact
.It Pa /dev/rmidi*
.Nm
devices
.El
d195 1
a195 1
If 
d198 1
a198 1
.Xr write 2 
d201 1
a201 1
fail then 
d203 1
a203 1
may be set to on of:
d206 1
a206 1
the device is opened read-only (write-only) but
d209 1
a209 1
was called
d211 2
a212 2
the device is being detached while a process has been trying to
read or write (for instance an 
d214 1
a214 1
device has been unplugged)
d219 1
a219 1
Device is already open by another process
d252 1
a252 1
Even on low-end machines this delay hardly reaches few
d256 4
a259 4
its memory (see 
.Xr mlock 2 ,
.Xr mlockall 2
manual pages).
@


1.19
log
@List ym(4) in synopsis as well as see also.
@
text
@d1 1
a1 2
.\" $OpenBSD: midi.4,v 1.18 2004/12/17 08:04:45 jsg Exp $
.\" $NetBSD: midi.4,v 1.4 1998/08/22 14:45:35 augustss Exp $
d3 1
a3 2
.\" Copyright (c) 1997 The NetBSD Foundation, Inc.
.\" All rights reserved.
d5 3
a7 15
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d9 7
a15 11
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
d17 1
a17 1
.Dd August 6, 1998
d22 1
a22 1
.Nd device-independent MIDI driver layer
d30 1
a30 1
.Cd "midi* at wss?"
d32 46
d79 23
a101 1
.Cd "pseudo-device sequencer" Op Ar count
d103 7
a109 4
.Fd #include <sys/types.h>
.Fd #include <sys/midiio.h>
.Sh DESCRIPTION
The
d111 7
a117 11
driver provides support for various MIDI peripherals.
It provides a uniform programming interface layer above different
underlying MIDI hardware drivers.
The MIDI hardware can be of many different kinds, e.g., an external
synthesizer on a MIDI port (or a serial port), the PC speaker, an
internal FM synth, or a wavetable synth.
.Pp
There are two device file types available for MIDI operation:
.Pa /dev/rmidiN ,
and
.Pa /dev/music .
d119 20
a138 12
.Pa /dev/rmidiN
devices provides raw access to a MIDI device.
Data written is sent to the physical device as fast as possible and
is uninterpreted.
Reading from the device returns data as soon as it becomes available.
A moderate amount of buffering is available both for reading and writing.
The raw MIDI devices are mostly useful for non realtime operations, such as
downloading patches to a device, since it is hard to get the accurate timing
needed for quality music from a user program.
But the devices can act as a simple patchboard for MIDI devices.
For example, a MIDI keyboard could be connected to a synthesizer by
the command
d142 41
a182 10
The
.Pa /dev/music
device is a MIDI sequencer device.
Data sent to and from this device not only contains the information sent to the
MIDI device, but also timing information.
The kernel will make sure that data is sent to the physical device at the
indicated time.
The sequencer device uses the
.Pa /dev/midiN
devices internally and they are unavailable when used by the sequencer.
d184 4
a187 2
The API for the sequencer device is binary compatible with the OSS sequencer
interface.
d189 31
a219 4
.Bl -tag -width /dev/sequencer -compact
.It Pa /dev/rmidiN
.It Pa /dev/music
.It Pa /dev/sequencer
a221 4
.Xr midiplay 1 ,
.Xr ioctl 2 ,
.Xr ossaudio 3 ,
.Xr audio 4 ,
d228 2
a229 1
.Xr wss 4 ,
d231 7
a237 1
.Sh HISTORY
d239 1
d241 24
a264 2
driver first appeared in
.Nx 1.4 .
@


1.18
log
@Support for the eap MIDI UART from NetBSD.
Tested by serveral people. ok millert@@, mickey@@
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.17 2004/03/21 19:47:59 miod Exp $
d49 1
@


1.17
log
@Homogeneize config lines for pseudo-devices, and do not put fixed values.
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.16 2003/11/08 19:19:58 jmc Exp $
d43 1
d109 1
@


1.16
log
@remove entries for FreeBSD drivers;
ok miod@@
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.15 2003/11/08 16:54:01 miod Exp $
d49 1
a49 1
.Cd "pseudo-device sequencer"
@


1.15
log
@Do not keep a list of midi attachments per architecture - this only
makes the page more confusing, and conforms to the existing practice for
MI interfaces.
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.14 2003/08/31 19:39:27 jmc Exp $
a47 2
.Ct "midi* at ym?"
.Ct "midi* at ympu?"
@


1.14
log
@indent example;
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.13 2003/06/06 10:29:41 jmc Exp $
d42 2
a43 1
.Cd "# alpha"
a45 4
.Pp
.Cd "# i386"
.Cd "midi* at autri?"
.Cd "midi* at opl?"
a48 1
.Cd "midi* at mpu?"
a49 3
.Pp
.Cd "# sparc64"
.Cd "midi* at autri?"
@


1.13
log
@- section reorder
- some macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.12 2002/11/28 23:27:40 mickey Exp $
d90 1
a90 1
.Cd "cat -u /dev/rmidi1 >/dev/rmidi2"
@


1.12
log
@mpu man and on isa
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.11 2002/09/26 07:55:40 miod Exp $
d80 1
a80 1
is uninterpreted. 
@


1.11
log
@Incomplete section 4 mi manual page cleanup.
- make configuration lines match GENERIC files
- more Xr (hopefully usefule Xr)
- never mention intro(4) on non-physical devices (i.e. protocols), always
mention it for physical devices
- random text style and quoting fixes
- drivers ported from FreeBSD did mention rc.conf instead of hostname.if as
the place to put mediaopt
- some .Tn UNIX -> .Ox replacements
- etc, etc...

reviewd in part by deraadt@@ (until he got bored of this)
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.10 2002/03/27 18:10:38 millert Exp $
a6 1

a47 1
.Cd "midi* at mpu?"
d52 2
@


1.10
log
@From David Krause:
o ftpd.8: alphabetically sort FILES and add login.conf & motd
o midi.4 and pckbd.4: there is no pcppi(4) man page
o passwd.5: s/passwd.conf/login.conf
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.9 2001/11/26 16:51:48 mickey Exp $
d43 1
d46 5
d54 4
a57 1
.Ct "midi* at mpu?"
d117 1
d119 1
d121 2
a122 1
.Xr wss 4
@


1.9
log
@add autri.4, from netbsd
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.8 2001/11/13 18:26:53 deraadt Exp $
a108 1
.Xr pcppi 4 ,
@


1.8
log
@kill BUGS sections that basically say "there might be bugs".  Like, WTF?
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.7 2001/10/05 14:45:53 mpech Exp $
d107 1
@


1.7
log
@Powered by @@mantoya:
o) start new sentence on a new line;
o) minor mdoc fixes;
millert@@ ok

Tip of the day:   www.mpechismazohist.com
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.6 2001/09/06 15:04:34 mpech Exp $
a115 3
.Sh BUGS
This man page is very incomplete.
.Pp
@


1.6
log
@Initial idea from aaron@@: Last char of .Xr group in SEE ALSO section should
be a single digit. Powered by mantoya@@.

millert@@ ok.
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.5 2000/12/21 21:01:17 aaron Exp $
d58 4
a61 3
underlying MIDI hardware drivers.  The MIDI hardware can be of many
different kinds, e.g., an external synthesizer on a MIDI port (or a serial port),
the PC speaker, an internal FM synth, or a wavetable synth.
d69 3
a71 2
devices provides raw access to a MIDI device.  Data written is sent
to the physical device as fast as possible and is uninterpreted.
d76 4
a79 3
needed for quality music from a user program.  But the devices can act as
a simple patchboard for MIDI devices.  For example, a MIDI keyboard could
be connected to a synthesizer by the command
d85 6
a90 5
device is a MIDI sequencer device.  Data sent to and from this device
not only contains the information sent to the MIDI device, but also
timing information.  The kernel will make sure that data is sent
to the physical device at the indicated time.  The sequencer device
uses the
@


1.5
log
@Various repairs, $Id$ tags added, etc.
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.4 1999/07/21 11:20:33 deraadt Exp $
d106 1
a106 1
.Xr wss 4 .
@


1.4
log
@cleanup
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.3 1999/07/09 13:35:48 aaron Exp $
d3 1
@


1.3
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.2 1999/05/16 19:56:30 alex Exp $
d46 2
d76 1
d102 2
a103 4
.Xr opl 4
.br
For ports using the ISA bus:
.\" .Xr pcppi 4 ,
@


1.2
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.1 1999/01/07 22:32:57 niklas Exp $
d26 1
a26 1
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS 
d76 1
a76 1
The 
d82 1
a82 1
uses the 
@


1.1
log
@Man page changes for the midi integration
@
text
@d1 1
a1 1
.\" $OpenBSD: midi.4,v 1.4 1998/08/22 14:45:35 augustss Exp $
d95 3
d99 1
a99 4
.Xr ioctl 2 ,
.Xr midiplay 1 ,
.Xr opl 4 ,
.Xr ossaudio 3 .
@

