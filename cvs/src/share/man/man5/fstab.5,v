head	1.53;
access;
symbols
	OPENBSD_6_1_BASE:1.53
	OPENBSD_6_0:1.53.0.4
	OPENBSD_6_0_BASE:1.53
	OPENBSD_5_9:1.53.0.2
	OPENBSD_5_9_BASE:1.53
	OPENBSD_5_8:1.52.0.6
	OPENBSD_5_8_BASE:1.52
	OPENBSD_5_7:1.52.0.2
	OPENBSD_5_7_BASE:1.52
	OPENBSD_5_6:1.51.0.4
	OPENBSD_5_6_BASE:1.51
	OPENBSD_5_5:1.48.0.4
	OPENBSD_5_5_BASE:1.48
	OPENBSD_5_4:1.45.0.10
	OPENBSD_5_4_BASE:1.45
	OPENBSD_5_3:1.45.0.8
	OPENBSD_5_3_BASE:1.45
	OPENBSD_5_2:1.45.0.6
	OPENBSD_5_2_BASE:1.45
	OPENBSD_5_1_BASE:1.45
	OPENBSD_5_1:1.45.0.4
	OPENBSD_5_0:1.45.0.2
	OPENBSD_5_0_BASE:1.45
	OPENBSD_4_9:1.44.0.2
	OPENBSD_4_9_BASE:1.44
	OPENBSD_4_8:1.42.0.6
	OPENBSD_4_8_BASE:1.42
	OPENBSD_4_7:1.42.0.2
	OPENBSD_4_7_BASE:1.42
	OPENBSD_4_6:1.42.0.4
	OPENBSD_4_6_BASE:1.42
	OPENBSD_4_5:1.41.0.6
	OPENBSD_4_5_BASE:1.41
	OPENBSD_4_4:1.41.0.4
	OPENBSD_4_4_BASE:1.41
	OPENBSD_4_3:1.41.0.2
	OPENBSD_4_3_BASE:1.41
	OPENBSD_4_2:1.40.0.2
	OPENBSD_4_2_BASE:1.40
	OPENBSD_4_1:1.37.0.2
	OPENBSD_4_1_BASE:1.37
	OPENBSD_4_0:1.35.0.4
	OPENBSD_4_0_BASE:1.35
	OPENBSD_3_9:1.35.0.2
	OPENBSD_3_9_BASE:1.35
	OPENBSD_3_8:1.30.0.2
	OPENBSD_3_8_BASE:1.30
	OPENBSD_3_7:1.29.0.2
	OPENBSD_3_7_BASE:1.29
	OPENBSD_3_6:1.27.0.6
	OPENBSD_3_6_BASE:1.27
	OPENBSD_3_5:1.27.0.4
	OPENBSD_3_5_BASE:1.27
	OPENBSD_3_4:1.27.0.2
	OPENBSD_3_4_BASE:1.27
	OPENBSD_3_3:1.23.0.4
	OPENBSD_3_3_BASE:1.23
	OPENBSD_3_2:1.23.0.2
	OPENBSD_3_2_BASE:1.23
	OPENBSD_3_1:1.19.0.2
	OPENBSD_3_1_BASE:1.19
	OPENBSD_3_0:1.17.0.2
	OPENBSD_3_0_BASE:1.17
	OPENBSD_2_9:1.15.0.2
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_8:1.14.0.2
	OPENBSD_2_8_BASE:1.14
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.53
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.52;
commitid	PeV7Ql0T6htfMjhP;

1.52
date	2014.09.08.04.40.30;	author doug;	state Exp;
branches;
next	1.51;
commitid	eZUjxECXTMZqzs5z;

1.51
date	2014.07.13.17.39.57;	author jmc;	state Exp;
branches;
next	1.50;
commitid	oTFl6ieA2ZomQHLk;

1.50
date	2014.07.13.12.04.25;	author claudio;	state Exp;
branches;
next	1.49;
commitid	xWhyo3KJu7nVsn2T;

1.49
date	2014.06.27.06.01.40;	author jmc;	state Exp;
branches;
next	1.48;
commitid	12WvlhAiAM26MI23;

1.48
date	2014.01.06.00.52.21;	author brad;	state Exp;
branches;
next	1.47;

1.47
date	2013.09.23.12.14.19;	author ajacoutot;	state Exp;
branches;
next	1.46;

1.46
date	2013.09.23.06.19.39;	author ajacoutot;	state Exp;
branches;
next	1.45;

1.45
date	2011.04.17.20.17.12;	author krw;	state Exp;
branches;
next	1.44;

1.44
date	2010.09.28.17.37.20;	author jmc;	state Exp;
branches;
next	1.43;

1.43
date	2010.09.23.18.29.16;	author jmc;	state Exp;
branches;
next	1.42;

1.42
date	2009.06.08.17.03.15;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2007.09.08.09.03.43;	author henning;	state Exp;
branches;
next	1.40;

1.40
date	2007.06.01.05.37.14;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	2007.05.31.19.19.58;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2007.04.14.13.49.53;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2007.02.02.18.30.44;	author henning;	state Exp;
branches;
next	1.36;

1.36
date	2007.01.28.16.26.39;	author bluhm;	state Exp;
branches;
next	1.35;

1.35
date	2006.01.13.22.31.19;	author jmc;	state Exp;
branches;
next	1.34;

1.34
date	2005.12.06.20.18.57;	author pedro;	state Exp;
branches;
next	1.33;

1.33
date	2005.11.27.13.11.59;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2005.11.24.12.08.16;	author pedro;	state Exp;
branches;
next	1.31;

1.31
date	2005.10.03.10.57.16;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2005.06.27.08.57.19;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2005.03.09.01.50.28;	author pvalchev;	state Exp;
branches;
next	1.28;

1.28
date	2005.01.13.10.23.35;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2003.06.06.13.28.13;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2003.06.02.23.30.14;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2003.05.10.06.33.38;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2003.05.07.17.41.48;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2002.09.23.23.49.54;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2002.09.23.23.46.05;	author beck;	state Exp;
branches;
next	1.21;

1.21
date	2002.07.03.23.28.49;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2002.05.16.12.31.29;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2002.02.10.02.35.57;	author jcs;	state Exp;
branches;
next	1.18;

1.18
date	2001.11.13.13.54.26;	author mpech;	state Exp;
branches;
next	1.17;

1.17
date	2001.10.02.21.26.34;	author jakob;	state Exp;
branches;
next	1.16;

1.16
date	2001.08.03.15.21.16;	author mpech;	state Exp;
branches;
next	1.15;

1.15
date	2000.12.29.14.59.12;	author angelos;	state Exp;
branches;
next	1.14;

1.14
date	2000.10.26.00.37.04;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.10.13.04.09.21;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.07.31.22.15.11;	author pjanzen;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.13.13.28.49;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	99.09.03.09.07.03;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	99.07.09.13.35.38;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.23.14.11.05;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	98.11.26.04.25.58;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.06.29.13.06.25;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.06.10.15.21.21;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	97.01.23.18.59.32;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.10.04.43.23;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.11.19.13.47.25;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.37;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.37;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.53
log
@use .In rather than .Fd #include
@
text
@.\"	$OpenBSD: fstab.5,v 1.52 2014/09/08 04:40:30 doug Exp $
.\"	$NetBSD: fstab.5,v 1.5.2.1 1995/11/16 20:11:11 pk Exp $
.\"
.\" Copyright (c) 1980, 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)fstab.5	8.1 (Berkeley) 6/5/93
.\"
.Dd $Mdocdate: September 8 2014 $
.Dt FSTAB 5
.Os
.Sh NAME
.Nm fstab
.Nd static information about the filesystems
.Sh SYNOPSIS
.In fstab.h
.Sh DESCRIPTION
The
.Nm
file contains descriptive information about the various file systems.
.Nm
is only read by programs, and not written;
it is the duty of the system administrator to properly create
and maintain this file.
Each filesystem is described on a separate line;
fields on each line are separated by tabs or spaces.
Lines beginning with the
.Sq #
character are comments and are ignored.
The order of records in
.Nm
is important because
.Xr fsck 8
and
.Xr mount 8
sequentially iterate through
.Nm
doing their thing.
.Pp
A line has the following format:
.Bd -literal -offset indent
fs_spec fs_file fs_vfstype fs_mntops fs_freq fs_passno
.Ed
.Pp
The first field,
.Fa fs_spec ,
describes the block special device or remote filesystem to be mounted.
A block special device may be specified by pathname
or by
.Xr disklabel 8
UID (DUID).
For filesystems of type MFS
the special file name is typically that of the primary swap area;
if the keyword
.Dq swap
is used instead of a special file name,
default configuration parameters are used.
If a program needs the character special file name,
the program must create it by appending an
.Sq r
after the last
.Sq /
in the special file name.
.Pp
The second field,
.Fa fs_file ,
describes the mount point for the filesystem.
For swap partitions, this field should be specified as
.Dq none .
.Pp
The third field,
.Fa fs_vfstype ,
describes the type of the filesystem.
The system currently supports the following types of filesystems:
.Pp
.Bl -tag -width indent -offset indent -compact
.It cd9660
An ISO 9660 CD-ROM filesystem.
.It ext2fs
A local Linux compatible ext2fs
filesystem.
.It ffs
A local
.Ux
filesystem.
.It mfs
A local memory-based
.Ux
filesystem.
.It msdos
An
.Tn MS-DOS
FAT filesystem.
.It nfs
A Sun Microsystems compatible Network File System.
.It ntfs
An NTFS filesystem.
.It swap
A disk partition to be used for swapping.
.It tmpfs
A local memory-based
.Ux
filesystem.
.It udf
A UDF filesystem.
.It vnd
A VND image file.
.El
.Pp
The fourth field,
.Fa fs_mntops ,
describes the mount options associated with the filesystem.
It is formatted as a comma separated list of options.
It contains at least the type of mount (see
.Fa fs_type
below) plus any additional options appropriate to the filesystem type.
.Pp
The option
.Dq auto
can be used in the
.Dq noauto
form to cause
a file system not to be mounted automatically (with
.Ic mount -A
or
.Ic mount -a ,
or at system boot time).
Similarly, the option
.Dq net
can be used to cause a file system to be considered only if the
.Fl N
flag is passed to
.Xr mount 8
or
.Xr fsck 8 .
.Pp
If the options
.Dq userquota
and/or
.Dq groupquota
are specified, the filesystem is automatically processed by the
.Xr quotacheck 8
command, and user and/or group disk quotas are enabled with
.Xr quotaon 8 .
By default, filesystem quotas are maintained in files named
.Pa quota.user
and
.Pa quota.group
which are located at the root of the associated filesystem.
These defaults may be overridden by putting an equal sign
and an alternative absolute pathname following the quota option.
Thus, if the user quota file for
.Pa /tmp
is stored in
.Pa /var/quotas/tmp.user ,
this location can be specified as:
.Bd -literal -offset indent
userquota=/var/quotas/tmp.user
.Ed
.Pp
The type of the mount is extracted from the first parameter of the
.Fa fs_mntops
field and stored separately in the
.Fa fs_type
field (it is not deleted from the
.Fa fs_mntops
field).
If
.Fa fs_type
is
.Dq rw ,
.Dq rq ,
or
.Dq ro
then the filesystem whose name is given in the
.Fa fs_file
field is normally mounted read-write or read-only on the
specified special file.
If
.Fa fs_type
is
.Dq sw
then the special file is made available as a piece of swap space by the
.Xr swapon 8
command at the end of the system reboot procedure.
The fields other than
.Fa fs_spec
and
.Fa fs_type
are unused.
If
.Fa fs_type
is specified as
.Dq xx
the entry is ignored.
This is useful to show disk partitions which are currently unused.
.Pp
The fifth field,
.Fa fs_freq ,
is used by the
.Fl W
and
.Fl w
options of
.Xr dump 8
to recommend which filesystems should be backed up.
The value specifies the number of days
after which a dump is regarded as being old;
if it is not present, a value of zero is returned and
.Xr dump 8
will assume that the filesystem does not need to be dumped.
.Pp
The sixth field,
.Fa fs_passno ,
is used by the
.Xr fsck 8
program to determine the order in which filesystem checks are done
at reboot time.
The root filesystem should be specified with a
.Fa fs_passno
of 1, and other filesystems should have a
.Fa fs_passno
of 2.
Filesystems within a drive will be checked sequentially,
but filesystems on different drives will be checked at the
same time to utilize parallelism available in the hardware.
If the sixth field is not present or is zero,
a value of zero is returned and
.Xr fsck 8
will assume that the filesystem does not need to be checked.
.Bd -literal
#define	FSTAB_RW	"rw"	/* read/write device */
#define	FSTAB_RQ	"rq"	/* read/write with quotas */
#define	FSTAB_RO	"ro"	/* read-only device */
#define	FSTAB_SW	"sw"	/* swap device */
#define	FSTAB_XX	"xx"	/* ignore totally */

struct fstab {
	char	*fs_spec;	/* block special device name */
	char	*fs_file;	/* filesystem path prefix */
	char	*fs_vfstype;	/* type of filesystem */
	char	*fs_mntops;	/* comma separated mount options */
	char	*fs_type;	/* rw, rq, ro, sw, or xx */
	int	fs_freq;	/* dump frequency, in days */
	int	fs_passno;	/* pass number on parallel fsck */
};
.Ed
.Pp
The proper way to read records from
.Pa fstab
is to use the routines
.Xr getfsent 3 ,
.Xr getfsspec 3 ,
and
.Xr getfsfile 3 .
.Sh FILES
.Bl -tag -width /etc/fstab -compact
.It Pa /etc/fstab
.El
.Sh EXAMPLES
Here is a sample
.Pa /etc/fstab
file:
.Bd -literal -offset indent
/dev/sd0b none swap sw
/dev/sd1b none swap sw
/dev/sd0a / ffs rw 1 1
/dev/sd0e /var ffs rw,nodev,nosuid 1 2
#/dev/sd0f /tmp ffs rw,nodev,nosuid 1 2
swap /tmp mfs rw,nodev,nosuid,-s=153600 0 0
/dev/sd0g /usr ffs rw,nodev 1 2
/dev/sd0h /usr/local ffs rw,nodev 1 2
/dev/sd0i /home ffs rw,nodev,nosuid 1 2
/dev/sd0j /usr/src ffs rw,nodev,nosuid,softdep 1 2
/dev/cd0a /cdrom cd9660 ro,noauto 0 0
5b27c2761a9b0b06.i /mnt/key msdos rw,noauto 0 0
server:/export/ports /usr/ports nfs rw,nodev,nosuid,soft,intr 0 0
.Ed
.Sh SEE ALSO
.Xr quota 1 ,
.Xr getfsent 3 ,
.Xr fsck 8 ,
.Xr mount 8 ,
.Xr quotacheck 8 ,
.Xr quotaon 8
.Sh HISTORY
The
.Nm
file format appeared in
.Bx 4.0 .
@


1.52
log
@Additional cleanup for procfs removal

ok guenther@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.51 2014/07/13 17:39:57 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: July 13 2014 $
d40 1
a40 1
.Fd #include <fstab.h>
@


1.51
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.50 2014/07/13 12:04:25 claudio Exp $
a121 2
.It procfs
A local filesystem containing process information.
@


1.50
log
@Try to document new 'net' option that is a bit like 'noauto'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.49 2014/06/27 06:01:40 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: June 27 2014 $
d154 1
a154 1
Similar the option
d157 1
a157 1
.Ar -N
@


1.49
log
@fix a comment;
From: patrick keshishian
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.48 2014/01/06 00:52:21 brad Exp $
d33 1
a33 1
.Dd $Mdocdate: January 6 2014 $
d154 8
@


1.48
log
@Mention tmpfs
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.47 2013/09/23 12:14:19 ajacoutot Exp $
d33 1
a33 1
.Dd $Mdocdate: September 23 2013 $
d251 1
a251 1
#define	FSTAB_RQ	"rq"	/* read/write with quotas *
@


1.47
log
@Revert. It seems people don't agree about which device should be used.
req. by krw@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.46 2013/09/23 06:19:39 ajacoutot Exp $
d126 4
@


1.46
log
@cd0a -> cd0c for consistency with the FAQ.

discussed with and ok miod@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.45 2011/04/17 20:17:12 krw Exp $
d33 1
a33 1
.Dd $Mdocdate: April 17 2011 $
d289 1
a289 1
/dev/cd0c /cdrom cd9660 ro,noauto 0 0
@


1.45
log
@Tweak verbiage, bring examples up to date.

Suggestions from deraadt@@ and jmc@@.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.44 2010/09/28 17:37:20 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: September 28 2010 $
d289 1
a289 1
/dev/cd0a /cdrom cd9660 ro,noauto 0 0
@


1.44
log
@tweak the fs_spec paragraph, chiefly in order to document that disklabel
uids can be used, and add an example;

...after much discussion with jsing and krw
ok krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.43 2010/09/23 18:29:16 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: September 23 2010 $
d279 2
a288 1
/dev/sd1b none swap sw 0 0
@


1.43
log
@document FSTAB_RQ; ok deraadt thib
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.42 2009/06/08 17:03:15 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: June 8 2009 $
d72 5
a76 6
For filesystems of type ffs
.Pq Xr mount_ffs 8 ,
the special file name is the block special file name,
and not the character special file name.
For filesystems of type mfs
.Pq Xr mount_mfs 8 ,
d84 1
a84 1
.Dq r
d86 1
a86 1
.Dq /
d289 1
@


1.42
log
@improve the description of fs_freq;
prompted by a fix from Warner Losh, freebsd -r193625,
but i chose a different fix;

help/ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.41 2007/09/08 09:03:43 henning Exp $
d33 1
a33 1
.Dd $Mdocdate: September 8 2007 $
d186 2
a187 1
.Dq rw
d247 2
a248 1
#define	FSTAB_RW	"rw"	/* read-write device */
d258 1
a258 1
	char	*fs_type;	/* rw, ro, sw, or xx */
@


1.41
log
@do not show tcp nfs mounts... somebody might think that would be a good
thing. From: Maurice Janssen <maurice@@z74.net>
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.40 2007/06/01 05:37:14 deraadt Exp $
d33 1
a33 1
.Dd $Mdocdate: June 1 2007 $
d214 5
a218 1
is used for these filesystems by the
d220 4
a223 2
command to determine which filesystems need to be dumped.
If the fifth field is not present, a value of zero is returned and
@


1.40
log
@remove crufty adosfs.  everytime we try to change a vfs layer interface,
adosfs has the issue and in an entirely different way.  noone uses this
code so this is hte best way to handle the problem
diff from pedro who went to sleep but we need to move ahead; ok thib
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.39 2007/05/31 19:19:58 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d282 1
a282 1
server:/export/ports /usr/ports nfs rw,nodev,nosuid,tcp,soft,intr 0 0
@


1.39
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.38 2007/04/14 13:49:53 jmc Exp $
a101 4
.It adosfs
An
.Tn AmigaDOS
filesystem.
@


1.38
log
@fs_vfstype may be "vnd" now; ok grunk
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.37 2007/02/02 18:30:44 henning Exp $
d33 1
a33 1
.Dd June 5, 1993
@


1.37
log
@better example & description for mfs, parts from jmc, ok jmc simon
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.36 2007/01/28 16:26:39 bluhm Exp $
d133 2
@


1.36
log
@Remove cross references between fstab(5) and umount(8).
ok millert jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.35 2006/01/13 22:31:19 jmc Exp $
d72 2
a73 2
For filesystems of type
.Tn ffs ,
d76 7
d277 1
a277 1
/dev/sd0b /tmp mfs rw,nodev,nosuid,-s=153600 0 0
@


1.35
log
@update the list of supported filesystems;
diff mostly from mbalmer, and ok him too/
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.34 2005/12/06 20:18:57 pedro Exp $
d57 1
a57 2
.Xr fsck 8 ,
.Xr mount 8 ,
d59 1
a59 1
.Xr umount 8
d285 1
a285 2
.Xr quotaon 8 ,
.Xr umount 8
@


1.34
log
@Remove fdescfs
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.33 2005/11/27 13:11:59 jmc Exp $
d93 1
a93 1
The system currently supports twelve types of filesystems:
d102 3
a108 3
.It ext2fs
A local Linux compatible ext2fs
filesystem.
d119 2
d125 2
a126 2
.It union
A translucent filesystem.
@


1.33
log
@ISOXXX/ISO-XXX -> ISO XXX
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.32 2005/11/24 12:08:16 pedro Exp $
a101 3
.It fdesc
An implementation of
.Pa /dev/fd .
@


1.32
log
@Remove kernfs, okay deraadt@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.31 2005/10/03 10:57:16 jmc Exp $
d101 1
a101 1
An ISO9660 CD-ROM filesystem.
@


1.31
log
@remove traces of non-existent getfstype() function;
ok krw@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.30 2005/06/27 08:57:19 jmc Exp $
a111 2
.It kernfs
Various and sundry kernel statistics.
@


1.30
log
@`noauto' affects mount -A too...
ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.29 2005/03/09 01:50:28 pvalchev Exp $
a259 1
.Xr getfstype 3 ,
@


1.29
log
@tweak examples; ok and input deraadt
- add /usr/src w/ softdep
- remove procfs/kernfs
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.28 2005/01/13 10:23:35 jmc Exp $
d146 2
@


1.28
log
@document comments, and provide a 1-line summary of what a line in
fstab looks like;

from michael knudsen;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.27 2003/06/06 13:28:13 jmc Exp $
d277 1
a279 2
/kern /kern kernfs ro 0 0
/proc /proc procfs rw 0 0
@


1.27
log
@- section reorder
- macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.26 2003/06/02 23:30:14 millert Exp $
d51 3
d64 5
@


1.26
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.25 2003/05/10 06:33:38 jmc Exp $
d253 4
a274 4
.Sh FILES
.Bl -tag -width /etc/fstab -compact
.It Pa /etc/fstab
.El
@


1.25
log
@document that kernel automatically handles first swap partition
("swap_device" in swapctl -l) and does not need to be added to /etc/fstab.

krw@@, fries@@, rohee@@, millert@@, henning@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.24 2003/05/07 17:41:48 jmc Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.24
log
@changed example fstab file; fs_passno should be 2 for non-root filesystems.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.23 2002/09/23 23:49:54 deraadt Exp $
a262 1
/dev/sd0b none swap sw 0 0
@


1.23
log
@never send a beck to do a man's job
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.22 2002/09/23 23:46:05 beck Exp $
d265 1
a265 1
#/dev/sd0f /tmp ffs rw,nodev,nosuid 1 3
d267 3
a269 3
/dev/sd0g /usr ffs rw,nodev 1 4
/dev/sd0h /usr/local ffs rw,nodev 1 5
/dev/sd0i /home ffs rw,nodev,nosuid 1 6
@


1.22
log
@<deraadt> someone please fix the fstab(5) example
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.21 2002/07/03 23:28:49 miod Exp $
d264 2
a265 2
/dev/sd0e /var ffs rw 1 2
#/dev/sd0f /tmp ffs rw 1 3
d267 3
a269 4
/dev/sd0g /usr ffs rw 1 4
/dev/sd0h /usr/local ffs rw 1 5
/dev/sd0i /home ffs rw 1 6

a271 1

d274 1
a274 2

server:/export/ports /usr/ports nfs rw,tcp,soft,intr 0 0
@


1.21
log
@Xr fixups, mostly from PR 2793
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.20 2002/05/16 12:31:29 miod Exp $
d266 1
a266 1
/dev/sd0b /tmp mfs rw,-s=153600 0 0
@


1.20
log
@Add a few useful xrefs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.19 2002/02/10 02:35:57 jcs Exp $
d284 1
d288 2
a289 1
.Xr quota 8 ,
@


1.19
log
@add some nfs and mfs examples
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.18 2001/11/13 13:54:26 mpech Exp $
d284 5
a288 1
.Xr getfsent 3
@


1.18
log
@o) Fix bogus .Xr usage;
o) CAVEAT -> CAVEATS;
o) AUTHOR -> AUTHORS;
o) Start new sentence on a new line;
o) For URL and path names use .Pa;
o) We don't like .Pp before .Rs;
o) Don't use .Pp before/after .Sh;
o) OpenBSD -> .Ox;

millert@@ ok and help;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.17 2001/10/02 21:26:34 jakob Exp $
d266 1
d276 2
@


1.17
log
@correct number of supported filesystems; PR#2097
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.16 2001/08/03 15:21:16 mpech Exp $
d211 1
a211 1
.Xr dump
@


1.16
log
@o) We don't like .Pp before/after .Sh;
o) .Nm always has argument in .Sh SYNOPSIS;
o) We always closes .Bl and .Bd tags;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.15 2000/12/29 14:59:12 angelos Exp $
d89 1
a89 1
The system currently supports eleven types of filesystems:
@


1.15
log
@kernfs/procfs lines in sample fstab
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.14 2000/10/26 00:37:04 aaron Exp $
a275 1
.Pp
@


1.14
log
@Some share/man fleshing.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.13 2000/10/13 04:09:21 aaron Exp $
d272 3
@


1.13
log
@Remove unwanted trailing whitespace.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.12 2000/07/31 22:15:11 pjanzen Exp $
d46 4
a49 5
The file
.Nm fstab
contains descriptive information about the various file
systems.
.Nm fstab
d56 1
a56 1
.Nm fstab
d63 1
a63 1
.Nm fstab
d68 1
a68 2
describes the block special device or
remote filesystem to be mounted.
d76 1
a76 2
after the
last
d134 1
a134 2
below) plus any additional options
appropriate to the filesystem type.
d149 1
a149 2
are specified,
the filesystem is automatically processed by the
d153 1
a153 2
By default,
filesystem quotas are maintained in files named
d190 1
a190 2
then the special file is made available as a piece of swap
space by the
@


1.12
log
@use noauto on /cdrom in the example
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.11 2000/04/13 13:28:49 deraadt Exp $
d278 1
a278 1
/dev/cd0a /cdrom cd9660 ro,noauto 0 0 
@


1.11
log
@example
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.10 1999/09/03 09:07:03 millert Exp $
d278 1
a278 1
/dev/cd0a /cdrom cd9660 ro 0 0 
a280 1

@


1.10
log
@Mention ext2fs, use the .Ux macro instead of saying UNIX.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.9 1999/07/09 13:35:38 aaron Exp $
d264 18
@


1.9
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.8 1999/05/23 14:11:05 aaron Exp $
d106 4
a109 1
.Tn UNIX
d115 1
a115 1
.Tn UNIX
d118 3
a120 1
An MS-DOS FAT filesystem.
@


1.8
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: fstab.5,v 1.7 1998/11/26 04:25:58 aaron Exp $
d52 1
a52 1
it is the duty of the system administrator to properly create 
d73 1
a73 1
the special file name is the block special file name, 
d104 1
a104 1
.It ffs 
d110 1
a110 1
.It mfs 
d116 1
a116 1
.It nfs 
d120 1
a120 1
.It swap 
d224 1
a224 1
of 1, and other filesystems should have a 
@


1.7
log
@share/man/man5/ man page repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d39 1
a39 1
.Os BSD 4
@


1.6
log
@various cleanups; hoek
@
text
@d1 1
d68 1
a68 1
.Pq Fa fs_spec ,
d72 1
a72 1
.Em ffs ,
d76 6
a81 2
the program must create it by appending a ``r'' after the
last ``/'' in the special file name.
d84 1
a84 1
.Pq Fa fs_file ,
d86 2
a87 1
For swap partitions, this field should be specified as ``none''.
d90 1
a90 1
.Pq Fa fs_vfstype ,
d93 3
a95 2
.Bl -tag -width indent -offset indent
.It Em adosfs
d98 8
a105 7
filesystem
.It Em cd9660
an ISO 9660 CD-ROM filesystem
.It Em fdesc
an implementation of /dev/fd
.It Em ffs 
a local
d107 5
a111 5
filesystem
.It Em kernfs
various and sundry kernel statistics
.It Em mfs 
a local memory-based
d113 11
a123 11
filesystem
.It Em msdos
a MSDOS ``FAT'' filesystem
.It Em nfs 
a Sun Microsystems compatible ``Network File System''
.It Em procfs
a local filesystem of process information
.It Em swap 
a disk partition to be used for swapping
.It Em union
a translucent filesystem
d127 1
a127 1
.Pq Fa fs_mntops ,
d135 8
a142 3
The option ``auto'' can be used in the ``noauto'' form to cause
a file system not to be mounted automatically (with ``mount -a'',
or system boot time).
d144 5
a148 1
If the options ``userquota'' and/or ``groupquota'' are specified,
d179 5
a183 1
is ``rw'' or ``ro'' then the filesystem whose name is given in the
d189 3
a191 1
is ``sw'' then the special file is made available as a piece of swap
d202 3
a204 1
is specified as ``xx'' the entry is ignored.
d208 1
a208 1
.Pq Fa fs_freq ,
d217 1
a217 1
.Pq Fa fs_passno ,
d232 1
a232 1
.Xr fsck
a261 4
The file
.Nm fstab
resides in
.Pa /etc .
@


1.5
log
@be more explicit about fs_type
@
text
@d205 1
a205 1
If the sixth field is not present or zero,
@


1.4
log
@correct fs_passno comment; drochner@@zelux6.zel.kfa-juelich.de
@
text
@d153 1
a153 1
The type of the mount is extracted from the
@


1.3
log
@doc auto/noauto option
@
text
@d222 1
a222 1
	int	fs_passno;	/* pass number on parallel dump */
@


1.2
log
@from netbsd; ufs -> ffs & two more filesystem types (from Mike Long; PR#1766)
@
text
@d127 4
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: fstab.5,v 1.5 1995/02/03 18:17:32 jtc Exp $
d71 1
a71 1
.Em ufs ,
d86 1
a86 1
The system currently supports nine types of filesystems:
d88 6
d96 4
a99 2
.It Em cd9660
an ISO 9660 CD-ROM filesystem
d114 2
a115 4
.It Em ufs 
a local
.Tn UNIX
filesystem
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
