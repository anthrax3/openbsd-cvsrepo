head	1.15;
access;
symbols
	OPENBSD_5_4:1.14.0.26
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.24
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.22
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.20
	OPENBSD_5_0:1.14.0.18
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.16
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.14
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.10
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.12
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.8
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.6
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.4
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.14
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.12
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.10
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.8
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.6
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.4
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.2
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.8
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.6
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.9.0.4
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.15
date	2013.10.19.09.00.19;	author deraadt;	state dead;
branches;
next	1.14;

1.14
date	2007.05.31.19.19.58;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2004.02.19.22.20.05;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.06.13.28.13;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.23.30.14;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.03.23.28.49;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2000.10.26.00.37.05;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.29.04.48.39;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.07.09.13.35.39;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.23.14.11.05;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.04.02.16.21.38;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	98.11.29.15.47.25;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	98.11.26.04.25.59;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	97.07.17.07.39.51;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.38;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.38;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Remove more knowledge of a.out and stab information from the tree.
ok miod
@
text
@.\"	$OpenBSD: stab.5,v 1.14 2007/05/31 19:19:58 jmc Exp $
.\"	$NetBSD: stab.5,v 1.3 1994/11/30 19:31:33 jtc Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)stab.5	8.1 (Berkeley) 6/5/93
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt STAB 5
.Os
.Sh NAME
.Nm stab
.Nd symbol table types
.Sh SYNOPSIS
.Fd #include <stab.h>
.Sh DESCRIPTION
The
.Aq Pa stab.h
file defines some of the symbol table
.Fa n_type
field values for
.Xr a.out 5
files.
These are the types for permanent symbols (i.e., not local labels, etc.\&)
used by the old debugger
.Em sdb
and the Berkeley Pascal compiler pc.
.Pp
Symbol table entries can be produced by the
.Dq .stabs
assembler directive.
This allows one to specify a double-quote delimited name, a symbol type, one
.Li char
and one
.Li short
of information about the symbol, as well as an
.Li unsigned long
(usually an address).
.Pp
To avoid having to produce an explicit label for the address field,
the
.Dq .stabd
directive can be used to implicitly address the current location.
If no name is needed, symbol table entries can be generated using the
.Dq .stabn
directive.
The loader promises to preserve the order of symbol table entries produced by
.Dq .stab
directives.
As described in
.Xr a.out 5 ,
an element of the symbol table consists of the following structure:
.Bd -literal
/*
* Format of a symbol table entry.
*/

struct nlist {
	union {
		char	*n_name;	/* for use when in-core */
		long	n_strx;		/* index into file string table */
	} n_un;
	unsigned char	n_type;		/* type flag */
	char		n_other;	/* unused */
	short		n_desc;		/* see struct desc, below */
	unsigned	n_value;	/* address or offset or line */
};
.Ed
.Pp
The low bits of the
.Fa n_type
field are used to place a symbol into
at most one segment, according to
the following masks, defined in
.Aq Pa a.out.h .
A symbol can be in none of these segments by having none of these segment
bits set.
.Bd -literal
/*
* Simple values for n_type.
*/

#define	N_UNDF	0x0	/* undefined */
#define	N_ABS	0x2	/* absolute */
#define	N_TEXT	0x4	/* text */
#define	N_DATA	0x6	/* data */
#define	N_BSS	0x8	/* bss */

#define	N_EXT	01	/* external bit, or'ed in */
.Ed
.Pp
The
.Fa n_value
field of a symbol is relocated by the linker,
.Xr ld 1 ,
as an address within the appropriate segment.
.Fa n_value
fields of symbols not in any segment are unchanged by the linker.
In addition, the linker will discard certain symbols, according to rules
of its own, unless the
.Fa n_type
field has one of the following bits set:
.Bd -literal
/*
* Other permanent symbol table entries have some of the N_STAB bits set.
* These are given in <stab.h>
*/

#define	N_STAB	0xe0	/* if any of these bits set, don't discard */
.Ed
.Pp
This allows up to 112 (7 \(** 16) symbol types, split between the various
segments.
Some of these have already been claimed.
The old symbolic debugger,
.Em sdb ,
uses the following
.Fa n_type
values:
.Bd -literal
#define	N_GSYM	0x20	/* global symbol: name,,0,type,0 */
#define	N_FNAME	0x22	/* procedure name (f77 kludge): name,,0 */
#define	N_FUN	0x24	/* procedure: name,,0,linenumber,address */
#define	N_STSYM	0x26	/* static symbol: name,,0,type,address */
#define	N_LCSYM	0x28	/* .lcomm symbol: name,,0,type,address */
#define	N_RSYM	0x40	/* register sym: name,,0,type,register */
#define	N_SLINE	0x44	/* src line: 0,,0,linenumber,address */
#define	N_SSYM	0x60	/* structure elt: name,,0,type,struct_offset */
#define	N_SO	0x64	/* source file name: name,,0,0,address */
#define	N_LSYM	0x80	/* local sym: name,,0,type,offset */
#define	N_SOL	0x84	/* #included file name: name,,0,0,address */
#define	N_PSYM	0xa0	/* parameter: name,,0,type,offset */
#define	N_ENTRY	0xa4	/* alternate entry: name,linenumber,address */
#define	N_LBRAC	0xc0	/* left bracket: 0,,0,nesting level,address */
#define	N_RBRAC	0xe0	/* right bracket: 0,,0,nesting level,address */
#define	N_BCOMM	0xe2	/* begin common: name,, */
#define	N_ECOMM	0xe4	/* end common: name,, */
#define	N_ECOML	0xe8	/* end common (local name): ,,address */
#define	N_LENG	0xfe	/* second stab entry with length information */
.Ed
.Pp
where the comments give
.Em sdb
conventional use for
.Dq .stab s
and the
.Fa n_name ,
.Fa n_other ,
.Fa n_desc ,
and
.Fa n_value
fields
of the given
.Fa n_type .
.Em sdb
uses the
.Fa n_desc
field to hold a type specifier in the form used
by the Portable C Compiler,
.Xr cc 1 ;
see the header file
.Pa pcc.h
for details on the format of these type values.
.Pp
The Berkeley Pascal compiler, pc, uses the following
.Fa n_type
value:
.Bd -literal
#define	N_PC	0x30	/* global pascal symbol: name,,0,subtype,line */
.Ed
.Pp
and uses the following subtypes to do type checking across separately
compiled files:
.Bd -unfilled -offset indent
1	source file name
2	included file name
3	global label
4	global constant
5	global type
6	global variable
7	global function
8	global procedure
9	external function
10	external procedure
11	library variable
12	library routine
.Ed
.Sh SEE ALSO
.Xr as 1 ,
.Xr gdb 1 ,
.Xr ld 1 ,
.Xr a.out 5
.Sh HISTORY
The
.Nm
file appeared in
.Bx 4.0 .
.Sh BUGS
More basic types are needed.
@


1.14
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.13 2004/02/19 22:20:05 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
@


1.13
log
@escape full stops where necessary to kill erroneous double spaces;
softly, softly, catchy monkey...
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.12 2003/06/06 13:28:13 jmc Exp $
d33 1
a33 1
.Dd June 5, 1993
@


1.12
log
@- section reorder
- macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.11 2003/06/02 23:30:14 millert Exp $
d49 1
a49 1
These are the types for permanent symbols (i.e., not local labels, etc.)
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.10 2002/07/03 23:28:49 miod Exp $
a217 2
.Sh BUGS
More basic types are needed.
d223 2
@


1.10
log
@Xr fixups, mostly from PR 2793
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.9 2000/10/26 00:37:05 aaron Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@Some share/man fleshing.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.8 2000/02/29 04:48:39 aaron Exp $
d56 1
a56 2
and the Berkeley Pascal compiler
.Xr pc 1 .
d194 1
a194 3
The Berkeley Pascal compiler,
.Xr pc 1 ,
uses the following
@


1.8
log
@Various cleanup.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.7 1999/07/09 13:35:39 aaron Exp $
d62 1
a62 2
This allows one to specify a double-quote delimited name, a symbol type,
one
d77 1
a77 2
The loader promises to preserve the order of symbol table entries produced
by
@


1.7
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.6 1999/05/23 14:11:05 aaron Exp $
d46 1
a46 1
The file
d48 1
a48 1
defines some of the symbol table
d58 1
d63 8
a70 2
one char and one short of information about the symbol, and an unsigned
long (usually an address).
d84 1
a84 2
an element of the symbol table
consists of the following structure:
d127 1
a127 1
.Xr ld 1
@


1.6
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.5 1999/04/02 16:21:38 aaron Exp $
d99 1
a99 1
at most one segment, according to 
d180 1
a180 1
.Fa n_type . 
@


1.5
log
@.Pp macros do not belong immiedately after .Sh section header lines
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.4 1998/11/29 15:47:25 aaron Exp $
d39 1
a39 1
.Os BSD 4
@


1.4
log
@kill superfluous .Nm macro arguments
@
text
@d1 1
a1 1
.\"	$OpenBSD: stab.5,v 1.3 1998/11/26 04:25:59 aaron Exp $
a221 1
.Pp
@


1.3
log
@share/man/man5/ man page repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d226 1
a226 1
.Nm stab
@


1.2
log
@fix Xr
@
text
@d1 1
d50 4
a53 2
field values for a.out files.
These are the types for permanent symbols (i.e. not local labels, etc.)
d59 1
a59 1
.Pa .stabs
d66 1
a66 1
.Pa .stabd
d69 1
a69 1
.Pa .stabn
d73 1
a73 1
.Pa .stab
d123 1
a123 1
.Fa N_value
d143 3
a145 1
uses the following n_type values:
d171 1
a171 2
.Pa .stab
.Fa s
d181 1
a181 1
.Em Sdb
d218 1
a219 1
.Xr gdb 1 ,
@


1.1
log
@Initial revision
@
text
@d215 1
a215 1
.Xr dbx 1 ,
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
