head	1.28;
access;
symbols
	OPENBSD_3_1:1.23.0.2
	OPENBSD_3_1_BASE:1.23
	OPENBSD_3_0:1.18.0.2
	OPENBSD_3_0_BASE:1.18;
locks; strict;
comment	@.\" @;


1.28
date	2002.06.16.17.55.03;	author henning;	state dead;
branches;
next	1.27;

1.27
date	2002.06.11.02.12.37;	author dhartmei;	state Exp;
branches;
next	1.26;

1.26
date	2002.06.10.19.31.44;	author dhartmei;	state Exp;
branches;
next	1.25;

1.25
date	2002.06.03.16.18.53;	author kjell;	state Exp;
branches;
next	1.24;

1.24
date	2002.04.24.18.10.25;	author dhartmei;	state Exp;
branches;
next	1.23;

1.23
date	2002.02.27.15.15.29;	author dhartmei;	state Exp;
branches;
next	1.22;

1.22
date	2002.02.23.01.08.18;	author dhartmei;	state Exp;
branches;
next	1.21;

1.21
date	2002.01.08.16.28.12;	author dhartmei;	state Exp;
branches;
next	1.20;

1.20
date	2002.01.08.09.31.55;	author dhartmei;	state Exp;
branches;
next	1.19;

1.19
date	2001.12.03.23.02.13;	author dhartmei;	state Exp;
branches;
next	1.18;

1.18
date	2001.10.10.22.08.25;	author dhartmei;	state Exp;
branches;
next	1.17;

1.17
date	2001.10.09.13.49.18;	author dhartmei;	state Exp;
branches;
next	1.16;

1.16
date	2001.10.07.11.56.57;	author dhartmei;	state Exp;
branches;
next	1.15;

1.15
date	2001.10.05.14.45.54;	author mpech;	state Exp;
branches;
next	1.14;

1.14
date	2001.10.04.10.28.20;	author wilfried;	state Exp;
branches;
next	1.13;

1.13
date	2001.10.02.17.46.28;	author brad;	state Exp;
branches;
next	1.12;

1.12
date	2001.09.22.20.19.46;	author pvalchev;	state Exp;
branches;
next	1.11;

1.11
date	2001.09.06.22.37.08;	author jasoni;	state Exp;
branches;
next	1.10;

1.10
date	2001.09.06.18.05.46;	author jasoni;	state Exp;
branches;
next	1.9;

1.9
date	2001.08.22.17.42.24;	author beck;	state Exp;
branches;
next	1.8;

1.8
date	2001.07.26.17.37.38;	author chris;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.18.10.52.34;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.10.11.05.40;	author dhartmei;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.10.00.49.24;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.06.21.19.53;	author chris;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.02.17.02.22;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.01.22.09.09;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.26.17.37.27;	author kjell;	state Exp;
branches;
next	;


desc
@@


1.28
log
@bye bye
@
text
@.\"	$OpenBSD: nat.conf.5,v 1.27 2002/06/11 02:12:37 dhartmei Exp $
.\"
.\" Copyright (c) 2001 Ian Darwin.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd June 26, 2001
.Dt NAT.CONF 5
.Os
.Sh NAME
.Nm nat.conf
.Nd network address translation (NAT) configuration file for packet filtering
.Sh DESCRIPTION
The rules file for network address translation specify which addresses
are to be mapped and which are to be redirected.
.Pp
A
.Em nat
rule specifies that IP addresses are to be changed as the packet
traverses the given interface.
This technique of network address translation (NAT) allows a single
IP address on the translating host to support network traffic for a
larger range of machines on an inside network.
Although in theory any IP address can be used on the inside, it is strongly
recommended that one of the address ranges defined by RFC 1918 be used.
These netblocks are:
.Bd -literal
10.0.0.0    - 10.255.255.255 (all of net 10, i.e., 10/8)
172.16.0.0  - 172.31.255.255 (i.e., 172.16/12)
192.168.0.0 - 192.168.255.255 (i.e., 192.168/16)
.Ed
.Pp
A
.Em binat
rule specifies a bidirectional map between an external IP address and an
an internal IP address.
.Pp
An
.Em rdr 
rule specifies an incoming connection to be redirected
to another host and optionally a different port.
.Pp
Note that all translation rules apply only to packets that pass through
the specified interface.
For instance, redirecting port 80 on an external interface to an
internal web server will only work for connections originating from
the outside.
Connections to the address of the external interface from local hosts
will not be redirected, since such packets do not actually pass through
the external interface.
Redirections can't reflect packets back through the interface they
arrive on, they can only be redirected to hosts connected to different
interfaces or to the firewall itself.
.Pp
Also note that all translations of packets occur before the filter
rules in
.Xr pf.conf 5
are evaluated.
Hence, 'pass in' rules for redirected packets should specify the
address/port after translation.
.Sh GRAMMAR
Syntax for filter rules in BNF:
.Bd -literal
rule      = [ "no" ] ( nat_rule | binat_rule | rdr_rule ) .

nat_rule  = "nat" "on" [ "!" ] ifname [ protospec ] hosts
            [ "->" address [ portspec ] ] .

binat_rule = "binat" "on" ifname [ protospec ] "from" address
             "to" ipspec [ "->" address ] .

rdr_rule  = "rdr" "on" [ "!" ] ifname [ protospec ] "from" ipspec
            "to" ipspec [ portspec ] [ "->" address [ portspec ] ] .

protospec = "proto" ( number | "tcp" | "udp" | "icmp" ) .

ipspec    = "any" | host | "{" host-list "}" .

portspec  = "port" ( number | name ) [ ":" ( "*" | number | name ) ] .

hosts     = "all" |
            "from" ( "any" | host | "{" host-list "}" ) [ port ]
            "to"   ( "any" | host | "{" host-list "}" ) [ port ] .

host      = [ "!" ] address [ "/" mask-bits ] .
address   = ( interface-name | "(" interface-name ")" | host-name |
              ipv4-dotted-quad | ipv6-coloned-hex ) .
host-list = host [ "," host-list ] .

port      = "port" ( unary-op | binary-op | "{" op-list "}" ) .
unary-op  = [ "=" | "!=" | "<" | "<=" | ">" | ">=" ]
            ( name | number ) .
binary-op = number ( "<>" | "><" ) number .
op-list   = ( unary-op | binary-op ) [ "," op-list ] .
.Ed
.Pp
Comments begin with the character `#'; empty lines are ignored.
Rules are processed in the order read, one rule per line.
The first matching rule is applied.
Rules prefixed with "no" lead to no translation.
Such rules can be used to exclude certain connections from being
translated.
.Pp
An
.Em ifname
is a network interface such as fxp4, ne0, or ep1.
.Em address
can be specified in CIDR notation (matching a netblock), as
symbolic host name or interface name.
Host name resolution and interface to address translation are done at rule
set load-time.
When the address of an interface (or host name) changes (by DHCP or PPP,
for instance), the rule set must be reloaded for the change to be reflected
in the kernel.
Interface names surrounded by parentheses cause an automatic update of
the rule whenever the referenced interface changes its address.
Reloading the rule set is not required in this case.
If specified,
.Em mask-bits
refers to the number of bits in the netmask.
The negation character,
.Sq ! ,
may be used before an
.Em ifname
or an
.Em address .
The protocol specification is optional.
If it is omitted, the rule applies to packets of all protocols.
.Pp
.Em rdr
rules can optionally specify port ranges instead of single ports.
\'rdr ... port 2000:2999 -> ... port 4000\' redirects ports 2000 to 2999
(including port 2000 and 2999) to the same port 4000.
\'rdr ... port 2000:2999 -> ... port 4000:*\' redirects port 2000 to 4000,
2001 to 4001, ..., 2999 to 4999.
.Sh EXAMPLES
This example maps incoming requests on port 80 to port 8080, on
which Apache Tomcat is running (say Tomcat is not run as root,
therefore lacks permission to bind to port 80).
.Bd -literal
# map tomcat on 8080 to appear to be on 80
rdr on ne3 proto tcp from any to any port 80 -> 127.0.0.1 port 8080
.Ed
.Pp
In the example below, vlan12 is configured for the 192.168.168.1;
the machine translates all packets coming from 192.168.168.0/24 to 204.92.77.111
when they are going out any interface except vlan12.
This has the net effect of making traffic from the 192.168.168.0/24
network appear as though it is the Internet routeable address
204.92.77.111 to nodes behind any interface on the router except 
for the nodes on vlan12.
(Thus, 192.168.168.1 can talk to the 192.168.168.0/24 nodes.)
.Bd -literal
nat on ! vlan12 from 192.168.168.0/24 to any -> 204.92.77.111
.Ed
.Pp
In the example below, fxp1 is the outside interface; the machine sits between a
fake internal 144.19.74.* network, and a routable external IP of 204.92.77.100.
The "no nat" rule excludes protocol AH from being translated.
.Bd -literal
no nat on fxp1 proto ah from 144.19.74.0/24 to any
nat on fxp1 from 144.19.74.0/24 to any -> 204.92.77.100
.Ed
.Pp
In the example below, fxp0 is the outside interface; a 1:1
bidirectional map is created between the private address 192.168.1.5
and the routable external address 204.92.77.113.
(Thus, incoming traffic to 204.92.77.113 is mapped to the internal
address 192.168.1.5.)
.Bd -literal
binat on fxp0 from 192.168.1.5 to any -> 204.92.77.113
.Ed
.Pp
This longer example uses both a NAT and a redirection.
Interface kue0 is the outside interface, and its external address is
157.161.48.183.
Interface fxp0 is the inside interface, and we are running
.Xr ftp-proxy 8
listening for outbound ftp sessions captured to port 8081.
.Bd -literal
# NAT
# translate outgoing packets' source addresses (any protocol)
# in my case, any address but the gateway's external address is mapped
#
nat on kue0 from ! (kue0) to any -> (kue0)

# BINAT
# translate outgoing packets' source address (any protocol)
# translate incoming packets' destination address to an internal machine
# (bidirectional)
binat on kue0 from 10.1.2.150 to any -> (kue0)

# RDR
# translate incoming packets' destination addresses
# as an example, redirect a TCP and UDP port to an internal machine
# NOTE: the lines below are split for readability
#
rdr on kue0 proto tcp from any to (kue0) port 8080 -> 10.1.2.151 port 22
rdr on kue0 proto udp from any to (kue0) port 8080 -> 10.1.2.151 port 53

# RDR 
# translate outgoing ftp control connections to send them to localhost
# for proxying with ftp-proxy(8) running on port 8081
rdr on fxp0 proto tcp from any to any port 21 -> 127.0.0.1 port 8081

.Ed
.Sh FILES
.Bl -tag -width "/etc/nat.conf" -compact
.It Pa /etc/hosts
.It Pa /etc/nat.conf
.It Pa /etc/protocols
.It Pa /etc/services
.El
.Sh SEE ALSO
.Xr pf 4 ,
.Xr hosts 5 ,
.Xr pf.conf 5 ,
.Xr protocols 5 ,
.Xr services 5 ,
.Xr ftp-proxy 8 ,
.Xr pfctl 8
.Sh HISTORY
The
.Nm
file format appeared in
.Ox 3.0 .
@


1.27
log
@Make NAT proxy port range configurable per rule, for instance privileged
source ports can mapped to privileged proxy ports, or source port 500
to proxy port 500. ok frantzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.26 2002/06/10 19:31:44 dhartmei Exp $
@


1.26
log
@Allow ports to be specified in nat rules, useful later on for individual
proxy port ranges.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.25 2002/06/03 16:18:53 kjell Exp $
d86 2
a87 1
nat_rule  = "nat" "on" [ "!" ] ifname [ protospec ] hosts [ "->" address ] .
@


1.25
log
@Add NAT keyword so it is picked up by apropos (man -k NAT). ok dhartmei@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.24 2002/04/24 18:10:25 dhartmei Exp $
d86 1
a86 2
nat_rule  = "nat" "on" [ "!" ] ifname [ protospec ] "from" ipspec
            "to" ipspec [ "->" address ] .
d96 7
a102 1
ipspec    = "any" | host .
d105 9
a113 2

portspec  = "port" ( number | name ) [ ":" ( "*" | number | name ) ] .
@


1.24
log
@Add dynamic (in-kernel) interface name -> address translation. Instead of
using just the interface name instead of an address and reloading the rule
set whenever the interface changes its address, the interface name can be
put in parentheses, and the kernel will keep track of changes and update
rules. There is no additional cost for evaluating rules (per packet),
the cost occurs when an interface changes address (and the rules are
traversed and updated where necessary).
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.23 2002/02/27 15:15:29 dhartmei Exp $
d32 1
a32 1
.Nd network address translation configuration file for packet filtering
@


1.23
log
@Correct plural/singular in one sentence, omitting protocol specification
causes the rule to apply to packets of any protocol.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.22 2002/02/23 01:08:18 dhartmei Exp $
d122 3
a124 5
See
.Xr dhclient-script 8
or
.Xr ppp 8
for information on how to automate this task.
d192 1
a192 1
nat on kue0 from ! 157.161.48.183 to any -> 157.161.48.183
d198 1
a198 1
binat on kue0 from 10.1.2.150 to any -> 157.161.48.184
d205 2
a206 4
rdr on kue0 proto tcp from any to 157.161.48.183/32 port 8080 \e
	-> 10.1.2.151 port 22
rdr on kue0 proto udp from any to 157.161.48.183/32 port 8080 \e
	-> 10.1.2.151 port 53
@


1.22
log
@Mention the two most FAQs near the top, I've explained these too many
times already.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.21 2002/01/08 16:28:12 dhartmei Exp $
d115 2
a116 2
can be specified in CIDR notation (matching netblocks), as
symbolic host names or interface names.
d137 1
a137 6
If it is omitted from a
.Em nat
rule, "tcp", "udp", and "icmp" connections will be translated.
If the protocol specification is omitted from an
.Em rdr
rule, only "tcp" connections will be redirected.
@


1.21
log
@"no" is optional, of course, fix BNF.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.20 2002/01/08 09:31:55 dhartmei Exp $
d62 19
@


1.20
log
@Add "no nat/rdr/binat" to nat.conf. The first matching rule applies.
If it is a "no" rule, no translation occurs. Useful to exclude certain
packets from translation. Suggested by Henning Brauer.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.19 2001/12/03 23:02:13 dhartmei Exp $
d65 1
a65 1
rule      = "no" ( nat_rule | binat_rule | rdr_rule ) .
@


1.19
log
@Document rdr rules with port ranges.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.18 2001/10/10 22:08:25 dhartmei Exp $
d65 1
a65 1
rule      = nat_rule | binat_rule | rdr_rule .
d68 1
a68 1
            "to" ipspec "->" address .
d71 1
a71 1
             "to" ipspec "->" address .
d74 1
a74 1
            "to" ipspec portspec "->" address portspec .
d82 1
a82 1
portspec  = "port" ( number | name ) .
d85 1
d87 4
a90 1
Comments begin with the character `#'; empty lines are ignored.
d153 2
a154 1
fake internal 144.19.74.* network, and a routable external IP of 204.92.77.100:
d156 1
@


1.18
log
@144.19.74/24 -> 144.19.74.0/24, found by Todd Fries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.17 2001/10/09 13:49:18 dhartmei Exp $
d120 7
@


1.17
log
@man page corrections, from Brian J. Kifiak
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.16 2001/10/07 11:56:57 dhartmei Exp $
d144 1
a144 1
nat on fxp1 from 144.19.74/24 to any -> 204.92.77.100
@


1.16
log
@Add interface name to address translation to pfctl, document it and add
a regress test. Translation is done on rule set load-time only, so the
rule sets must be reloaded when an interface address changes.
parse.y patch from Cedric Berger. Similar patch from Jonathon Fletcher.
Thanks to both.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.15 2001/10/05 14:45:54 mpech Exp $
d65 1
a65 1
rule      = nat_rule | binat_rule | rdr_rule
d68 1
a68 1
            "to" ipspec "->" address
d71 1
a71 1
             "to" ipspec "->" address
d74 1
a74 1
            "to" ipspec portspec "->" address portspec
d76 1
a76 1
protospec = "proto" ( number | "tcp" | "udp" | "icmp" )
d78 1
a78 1
ipspec    = "any" | host
d80 1
a80 1
host      = [ "!" ] address [ "/" mask-bits ]
d82 1
a82 1
portspec  = "port" ( number | name )
@


1.15
log
@Powered by @@mantoya:
o) start new sentence on a new line;
o) minor mdoc fixes;
millert@@ ok

Tip of the day:   www.mpechismazohist.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.14 2001/10/04 10:28:20 wilfried Exp $
a90 1
An
d92 12
a103 1
is an IP address.
@


1.14
log
@e.g. and i.e. cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.13 2001/10/02 17:46:28 brad Exp $
d125 2
a126 2
for the nodes on vlan12.  (Thus, 192.168.168.1 can talk to the
192.168.168.0/24 nodes.)
d139 3
a141 2
and the routable external address 204.92.77.113.  (Thus, incoming
traffic to 204.92.77.113 is mapped to the internal address 192.168.1.5.)
d146 3
a148 2
This longer example uses both a NAT and a redirection. Interface
kue0 is the outside interface, and its external address is 157.161.48.183.
@


1.13
log
@typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.12 2001/09/22 20:19:46 pvalchev Exp $
d49 1
a49 1
172.16.0.0  - 172.31.255.255 (i.e, 172.16/12)
@


1.12
log
@fix binat example; ok jasoni
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.11 2001/09/06 22:37:08 jasoni Exp $
d125 1
a125 1
the for the nodes on vlan12.  (Thus, 192.168.168.1 can talk to the
@


1.11
log
@- you can only binat between hosts
- add binat example and description
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.10 2001/09/06 18:05:46 jasoni Exp $
d142 1
a142 1
binat on fxp0 from 192.168.1.5/32 to any -> 204.92.77.113
@


1.10
log
@1:1 bidrectional NAT (binat); ok dhartmei@@ and frantzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.9 2001/08/22 17:42:24 beck Exp $
d53 5
d70 1
a70 1
binat_rule = "binat" "on" ifname [ protospec ] "from" ipspec
d156 6
@


1.9
log
@add mention of ftp-proxy, both in see also, and add an example of
capturing ftp sessions for it to the long example.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.8 2001/07/26 17:37:38 chris Exp $
d60 1
a60 1
rule      = nat_rule | rdr_rule
d65 3
d130 8
@


1.8
log
@Fix my ! iface example to be more useful
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.7 2001/07/18 10:52:34 deraadt Exp $
d131 3
d150 6
d170 1
@


1.7
log
@cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.6 2001/07/10 11:05:40 dhartmei Exp $
d111 3
a113 3
In the example below, lo0 is the system loopback; the machine translates
all packets coming from 192.168.168.0/24 to 204.92.77.111 going out any
interface except the loopback.
d115 4
a118 2
network appear as though it is part of the Internet routeable address
204.92.77.111 to nodes behind any interface on the router.
d120 1
a120 1
nat on ! lo0 from 192.168.168.0/24 to any -> 204.92.77.111
d136 1
a136 1
nat on kue0 ! 157.161.48.183 to any -> 157.161.48.183
@


1.6
log
@some .Pp removed, according to mpech@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.5 2001/07/10 00:49:24 millert Exp $
d37 7
a43 8
.A
.Li nat
rule specifies that IP addresses are to be changed as the 
packet traverses the given interface.
This technique of network address translation (NAT, also called
.Dq IP masquerading
on Linux) allows a single IP address to support a large range of machines on
an inside network.
d54 1
a54 1
.Li rdr 
d77 1
a77 2
Rules are processed in the order written.
Each rule must be on a line by itself.
d81 2
a82 2
.Li ifname
is a network name such as fxp4, ne0, or ep1.
d84 1
a84 1
.Li address
d87 1
a87 1
.Li mask-bits
d92 1
a92 1
.Li ifname
d94 1
a94 1
.Li address .
d97 1
a97 1
.Li nat
d99 2
a100 2
If the protocol specification omitted from an
.Li rdr
d104 2
a105 2
which Apache Tomcat is running (I don't run Tomcat as root, therefore it
doesn't have permission to bind to port 80).
a129 1
# --------------------------------------------------------------------
a130 2
# --------------------------------------------------------------------

a135 1
# --------------------------------------------------------------------
a136 2
# --------------------------------------------------------------------

@


1.5
log
@Update this to match the new nat.conf format and give the grammar
in the same dialect of BNF in pf.conf.5
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.4 2001/07/06 21:19:53 chris Exp $
a59 1
.Pp
d89 1
a89 2
.Li
mask-bits
@


1.4
log
@Allow negative match on interface name for nat and rdr
ok dhartmei@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.3 2001/07/02 17:02:22 millert Exp $
d34 1
a34 1
The rules file for network address translation specify what addresses
a35 4
The two rule types that can be specified are 
.Li rdr 
and
.Li nat .
d37 11
a47 5
Rules are processed in the order written.
Each rule must be on a line by itself.
Comments beginning with the character `#', and null lines, are
completely ignored.
The general syntax of rules is
d49 3
a51 1
rdr|nat ifname ipspec '->' ipspec
a53 15
.Li ifname
is a network name such as fxp4, ne0, ep1.
An
.Li ifname
can be preceded with the character `!' to negate it.
.Li ipspec
is a host number or a network number with netmask bits after a slash,
and optionally the word 'port' and a port number.
On the right hand side of a rule, an ipspec must refer to a single
IP address; it can also be specified as an
interface name, whose IP address will then be used.
An
.Li ipspec
can be preceded with the character `!' to negate it.
.Pp
d58 2
a60 10
.A
.Li nat
rule specifies that IP addresses are to be changed as the 
packet traverses the given interface. This technique of network
address translation (NAT, also called ``IP masquerading'' on Linux)
allows a single IP address to support a large range of machines on
an inside network.
Although in theory any IP address can be used on the inside,
it is recommended that one of the network numbers assigned
for this purpose in RFC 1918. These netblocks are:
d62 15
a76 3
10.0.0.0    - 10.255.255.255 (all of net 10, i.e., 10/8)
172.16.0.0  - 172.31.255.255 (i.e, 172.16/12)
192.168.0.0 - 192.168.255.255 (i.e., 192.168/16)
d78 28
d112 1
a112 1
rdr ne3 0.0.0.0/0 port 80 -> 127.0.0.1 port 8080
d117 4
a120 3
interface except the loopback.  This has the net effect of making traffic
traffic from the 192.168.168.0/24 network appear as though it is part of the
Internet routeable 204.92.77.111 to nodes behind any interface on the router.
d122 1
a122 1
nat ! lo0 192.168.168.0/24 -> 204.92.77.111
d128 1
a128 1
nat fxp1 144.19.74/24 -> 204.92.77.100
d141 1
a141 1
nat kue0 ! 157.161.48.183 -> 157.161.48.183
d149 1
d151 4
a154 2
rdr kue0 157.161.48.183/32 port 8080 -> 10.1.2.151 port 22 proto tcp
rdr kue0 157.161.48.183/32 port 8080 -> 10.1.2.151 port 53 proto udp
d160 1
d167 1
@


1.3
log
@typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.2 2001/07/01 22:09:09 angelos Exp $
d52 3
d92 9
@


1.2
log
@Add HISTORY and FILES section; openbsd@@davidkrause.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: nat.conf.5,v 1.1 2001/06/26 17:37:27 kjell Exp $
d78 1
a78 1
10.0.0.0    - 10.255.255.255.255 (all of net 10, i.e., 10/8)
@


1.1
log
@Default NAT configuration file is now nat.conf. ok theo
@
text
@d1 1
a1 1
.\"	$OpenBSD: pf.nat.5,v 1.4 2001/06/26 13:00:14 ian Exp $
d119 6
d126 4
d131 5
@

