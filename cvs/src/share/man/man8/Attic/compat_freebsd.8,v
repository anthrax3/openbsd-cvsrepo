head	1.21;
access;
symbols
	OPENBSD_4_9:1.20.0.6
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.19.0.12
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.8
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.6
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.18.0.10
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.8
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.6
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.4
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.2
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.17.0.4
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.17.0.2
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.11.0.2
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.9.0.6
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.4
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.6.0.8
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.6
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.21
date	2011.04.05.12.50.15;	author guenther;	state dead;
branches;
next	1.20;

1.20
date	2009.10.22.09.22.46;	author sobrado;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.31.19.19.58;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2005.03.12.12.21.08;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2003.10.25.07.50.51;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2003.08.23.19.26.25;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.06.12.06.55;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.06.19.28.06;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.05.10.21.40.54;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.05.06.08.56.12;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2003.03.18.13.01.36;	author david;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.19.09.10.36;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2001.10.05.14.45.54;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.17.11.13.58;	author mpech;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.09.05.35.44;	author jsyn;	state Exp;
branches;
next	1.6;

1.6
date	99.07.09.13.35.36;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	98.09.13.03.50.23;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	98.09.07.16.44.37;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	98.01.02.08.51.28;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.02.14.23.14.19;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.08.09.16.43.27;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Push COMPAT_FREEBSD in front of a whale.  Buggy, out of date, no
one has been weeding it, and it makes life harder.

Toasts of Brennivin for its passing from many; diff ok henning@@
@
text
@.\"	$OpenBSD: compat_freebsd.8,v 1.20 2009/10/22 09:22:46 sobrado Exp $
.\"	$NetBSD: compat_linux.8,v 1.1 1995/03/05 23:30:36 fvdl Exp $
.\"
.\" Copyright (c) 1995 Frank van der Linden
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed for the NetBSD Project
.\"      by Frank van der Linden
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: October 22 2009 $
.Dt COMPAT_FREEBSD 8
.Os
.Sh NAME
.Nm compat_freebsd
.Nd setup for running
.Fx
binaries under emulation
.Sh DESCRIPTION
.Ox
supports running
.Fx
binaries.
Most binaries should work, except for programs that use
FreeBSD-specific features.
These include i386-specific calls, such as syscons utilities and audio
devices.
.Pp
The
.Fx
compatibility feature is active for kernels compiled
with the
.Nm COMPAT_FREEBSD
option and the kern.emul.freebsd
.Xr sysctl 8
enabled.
.Pp
A lot of programs are dynamically linked.
This means that the
.Fx
shared libraries that the programs depend on and the runtime linker
are also needed.
Additionally, a "shadow root" directory for
.Fx
binaries on the
.Ox
system will have to be created.
This directory is named
.Pa /emul/freebsd .
Any file operations done by
.Fx
programs run under
.Ox
will look in this directory first.
So, if a
.Fx
program opens, for example,
.Pa /etc/passwd ,
.Ox
will first try to open
.Pa /emul/freebsd/etc/passwd ,
and if that does not exist
open the `real'
.Pa /etc/passwd file .
It is recommended that
.Fx
packages that include configuration files, etc., be installed under
.Pa /emul/freebsd ,
to avoid naming conflicts with possible
.Ox
counterparts.
Shared libraries should also be installed in the shadow tree.
.Pp
Generally, it will only be necessary to look for the shared libraries that
.Fx
binaries depend on the first few times that
.Fx
programs are installed on the
.Ox
system.
After a while, there will be a sufficient set of
.Fx
shared libraries on the system to be able to run newly imported
.Fx
binaries without any extra work.
.Ss Setting up shared libraries
How to get to know which shared libraries
.Fx
binaries need, and where to get them?
Basically, there are 3 possibilities.
(When following these instructions, root privileges are required on the
.Ox
system to perform the necessary installation steps).
.Bl -enum
.It
Access to the
.Ox
.Xr ports 7
system:
Install the port named
.Nm freebsd_lib
in the
.Nm emulators
category.
The
.Nm freebsd_lib
port contains the shared libraries, binaries, and other related files
necessary to run
.Fx
applications.
.It
Access to a
.Fx
system:
In this case temporarily install the binary there, see what shared
libraries it needs, and copy them to the
.Ox
system.
Example: ftp the
.Fx
binary of SimCity.
Put it on the
.Fx
system, and check which shared libraries it needs by running
`ldd sim':
.Pp
.Dl me@@freebsd% ldd /usr/local/lib/SimCity/res/sim
.Bd -unfilled -offset indent
/usr/local/lib/SimCity/res/sim:
	-lXext.6 => /usr/X11R6/lib/libXext.so.6.0 (0x100c1000)
	-lX11.6 => /usr/X11R6/lib/libX11.so.6.0 (0x100c9000)
	-lc.2 => /usr/lib/libc.so.2.1 (0x10144000)
	-lm.2 => /usr/lib/libm.so.2.0 (0x101a7000)
	-lgcc.261 => /usr/lib/libgcc.so.261.0 (0x101bf000)
.Ed
.Pp
All the files from the last column should be placed under
.Pa /emul/freebsd .
The following files would therefore be required on the
.Ox
system:
.Bd -unfilled -offset indent
/emul/freebsd/usr/X11R6/lib/libXext.so.6.0
/emul/freebsd/usr/X11R6/lib/libX11.so.6.0
/emul/freebsd/usr/lib/libc.so.2.1
/emul/freebsd/usr/lib/libm.so.2.0
/emul/freebsd/usr/lib/libgcc.so.261.0
.Ed
.Pp
Note that if a
.Fx
shared library with a matching major revision number to the first
column of the 'ldd' output is already present, it isn't necessary to copy
the file named in the last column to the
.Ox
system; the one already there should work.
It is advisable to copy the shared library anyway, if it is a newer version.
The old one can be removed.
So, if this library exists on the system:
.Pp
.D1 /emul/freebsd/usr/lib/libc.so.2.0
.Pp
and the ldd output for a new binary is:
.Pp
.D1 -lc.2 => /usr/lib/libc.so.2.1 (0x10144000)
.Pp
it isn't necessary to copy
.Pa /usr/lib/libc.so.2.1
too,
because the program should work fine with the slightly older version.
.Pa libc.so
can be replaced anyway, and that should leave:
.Pp
.D1 /emul/freebsd/usr/lib/libc.so.2.1
.Pp
Finally, the
.Fx
runtime linker and its config files must be present on the system.
These files should be copied from the
.Fx
system to their appropriate place on the
.Ox
system (in the
.Pa /emul/freebsd
tree):
.Bd -unfilled -offset indent
usr/libexec/ld-elf.so.1
usr/libexec/ld.so
var/run/ld-elf.so.hints
var/run/ld.so.hints
.Ed
.It
No access to a
.Fx
system:
In that case, get the extra files from various ftp sites.
Information on where to look for the various files is appended
below.
.Pp
Retrieve the following files (from _one_ ftp site to avoid
any version mismatches), and install them under
.Pa /emul/freebsd
(i.e.\&
.Pa foo/bar
is installed as
.Pa /emul/freebsd/foo/bar ) :
.Bd -unfilled -offset indent
sbin/ldconfig
usr/bin/ldd
usr/lib/libc.so.x.y.z
usr/libexec/ld-elf.so.1
usr/libexec/ld.so
.Ed
.Pp
ldconfig and ldd don't necessarily need to be under
.Pa /emul/freebsd ,
they can be installed elsewhere in the system too.
Just make sure they don't conflict with their
.Ox
counterparts.
A good idea would be to install them in
.Pa /usr/local/bin
as ldconfig-freebsd and ldd-freebsd.
.Pp
Run the
.Fx
ldconfig program with directory arguments in which the
.Fx
runtime linker should look for shared libs.
.Pa /usr/lib
is standard.
For example:
.Bd -literal -offset indent
me@@openbsd% mkdir -p /emul/freebsd/var/run
me@@openbsd% touch /emul/freebsd/var/run/ld-elf.so.hints
me@@openbsd% touch /emul/freebsd/var/run/ld.so.hints
me@@openbsd% ldconfig-freebsd /usr/X11R6/lib /usr/local/lib
.Ed
.Pp
Note that argument directories of ldconfig are
mapped to
.Pa /emul/freebsd/XXXX
by OpenBSD's compat code, and should exist as such on the
.Ox
system.
Make sure
.Pa /emul/freebsd/var/run/ld.so.hints
exists when running FreeBSD's ldconfig; if not, OpenBSD's
.Pa /var/run/ld.so.hints
could be lost.
.Pp
.Fx
ldconfig should be statically
linked, so it doesn't need any shared libraries by itself.
It will create the file
.Pa /emul/freebsd/var/run/ld.so.hints .
The
.Fx
version of the ldconfig program should be rerun each time a new shared
library is added.
.Pp
The
.Ox
system should now be set up for
.Fx
binaries which only need a shared libc.
Test this by running the
.Fx
ldd on itself.
Suppose that it is installed as ldd-freebsd, it should produce
something like:
.Pp
.Dl me@@openbsd% ldd-freebsd `which ldd-freebsd`
.Bd -unfilled -offset indent
/usr/local/bin/ldd-freebsd:
	-lc.2 => /usr/lib/libc.so.2.1 (0x1001a000)
.Ed
.Pp
This being done, new
.Fx
binaries can now be installed.
Whenever a new
.Fx
program is installed, it should be determined if it needs shared libraries,
and if so, whether they are installed in the
.Pa /emul/freebsd
tree.
To do this, run the
.Fx
version ldd on the new program, and watch its output.
ldd (see also the manual page for
.Xr ldd 1 )
will print a list of shared libraries that the program depends on, in the
form -l<majorname> => <fullname>.
.Pp
If it prints "not found" instead of <fullname> it means that
an extra library is needed.
Which library this is, is shown
in <majorname>, which will be of the form XXXX.<N>.
Find a libXXXX.so.<N>.<mm> on a
.Fx
ftp site, and install it on the
.Ox
system.
The XXXX (name) and <N> (major revision number) should match;
the minor number(s) <mm> are less important,
though it is advised to take the most recent version.
.El
.Ss Finding the necessary files
.Sy Note :
the information below is valid as of Feb 2003, but certain details
such as names of ftp sites, directories and distribution names
may have changed since then.
.Pp
.Fx
distribution is available on a lot of ftp sites.
Sometimes the files are unpacked,
and individual files can be retrieved, but mostly they
are stored in distribution sets, usually consisting of subdirectories
with gzipped tar files in them.
The primary ftp site for the distribution is:
.Pp
.D1 Pa ftp.freebsd.org:/pub/FreeBSD
.Pp
Mirror sites are described at:
.Pp
.D1 Pa www.freebsdmirrors.org
.Pp
This distribution consists of a number of tar-ed and gzipped files.
Normally, they're controlled by an install program, but the files can
be retrieved "by hand" too.
The way to look something up is to retrieve all
the files in the distribution, and ``tar ztvf'' through them for the files
needed.
Here is an example of a list of files that might be needed:
.Bd -unfilled -offset indent
Needed          Files

ld.so           5.0-RELEASE/base/base.??
ldconfig        5.0-RELEASE/base/base.??
ldd             5.0-RELEASE/base/base.??
libc.so.6       5.0-RELEASE/base/base.??
libX11.so.6     5.0-RELEASE/packages/x11/XFree86-libraries-??
libXt.so.6      5.0-RELEASE/packages/x11/XFree86-libraries-??
.Ed
.Pp
The files called ``base.??'' are tar-ed, gzipped and split,
so they can be extracted with ``cat base.?? | tar zpxf -''.
.Pp
The XFree86 libraries are compressed with bzip2 and can be
extracted with ``bzcat <file> | tar pxf -''.
Note: The bzip2 utilities are not part of a base
.Ox
system.
bzip2 can be added via
.Xr packages 7
or
.Xr ports 7 .
.Pp
Simply extract the files from these compressed tarfiles in the
.Pa /emul/freebsd
directory (possibly omitting or afterwards removing unnecessary files).
.Sh BUGS
The information about
.Fx
distributions may become outdated.
@


1.20
log
@replace cross references to other manual pages with the right macros.
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.19 2007/05/31 19:19:58 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
@


1.19
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.18 2005/03/12 12:21:08 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d313 3
a315 2
ldd (see also the manual page for ldd(1)) will print a list
of shared libraries that the program depends on, in the
@


1.18
log
@escape `.' at eol to avoid double spacing issue;
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.17 2003/10/25 07:50:51 jmc Exp $
d33 1
a33 1
.Dd June 4, 1995
@


1.17
log
@bzcat2 -> bzcat; from Jared Yanovich;
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.16 2003/08/23 19:26:25 tedu Exp $
d225 1
a225 1
(i.e.
@


1.16
log
@document necessity for sysctl to enable compat code. ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.15 2003/08/06 12:06:55 jmc Exp $
d372 1
a372 1
extracted with ``bzcat2 <file> | tar pxf -''.
@


1.15
log
@- remove old groff macros
- tidy up lists/displays
- indent for readability
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.14 2003/06/06 19:28:06 jmc Exp $
d56 3
a58 1
option enabled.
@


1.14
log
@- section reorder
- macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.13 2003/05/10 21:40:54 jmc Exp $
d114 2
a115 3
.Pp
.Bl -tag -width 123 -compact
.It 1.
d131 1
a131 2
.Pp
.It 2.
d147 2
a148 3
.Bl -tag -width 123 -compact -offset indent
.It me@@freebsd% ldd /usr/local/lib/SimCity/res/sim
.nf
d155 1
a155 2
.fi
.El
d162 7
a168 8
.Pp
.nf
.Pa /emul/freebsd/usr/X11R6/lib/libXext.so.6.0
.Pa /emul/freebsd/usr/X11R6/lib/libX11.so.6.0
.Pa /emul/freebsd/usr/lib/libc.so.2.1
.Pa /emul/freebsd/usr/lib/libm.so.2.0
.Pa /emul/freebsd/usr/lib/libgcc.so.261.0
.fi
d181 1
a181 3
.nf
.Pa /emul/freebsd/usr/lib/libc.so.2.0
.fi
a183 1
.nf
d185 1
a185 2
	-lc.2 => /usr/lib/libc.so.2.1 (0x10144000)
.fi
d194 1
a194 3
.nf
.Pa /emul/freebsd/usr/lib/libc.so.2.1
.fi
d206 7
a212 9
.Pp
.nf
.Pa usr/libexec/ld-elf.so.1
.Pa usr/libexec/ld.so
.Pa var/run/ld-elf.so.hints
.Pa var/run/ld.so.hints
.fi
.Pp
.It 3.
d227 7
a233 8
.Pp
.nf
.Pa sbin/ldconfig
.Pa usr/bin/ldd
.Pa usr/lib/libc.so.x.y.z
.Pa usr/libexec/ld-elf.so.1
.Pa usr/libexec/ld.so
.fi
d253 6
a258 7
.Pp
.Bl -tag -width 123 -compact -offset indent
.It me@@openbsd% mkdir -p /emul/freebsd/var/run
.It me@@openbsd% touch /emul/freebsd/var/run/ld-elf.so.hints
.It me@@openbsd% touch /emul/freebsd/var/run/ld.so.hints
.It me@@openbsd% ldconfig-freebsd /usr/X11R6/lib /usr/local/lib
.El
d293 2
a294 3
.Bl -tag -width 123 -compact -offset indent
.It me@@openbsd% ldd-freebsd `which ldd-freebsd`
.nf
d297 1
a297 2
.fi
.El
d329 1
a329 1
.Sy Note:
d342 1
a342 3
.nf
ftp.freebsd.org:/pub/FreeBSD
.fi
d346 1
a346 3
.nf
www.freebsdmirrors.org
.fi
a354 1
.Pp
d356 1
a356 1
Needed                 Files
d358 6
a363 6
ld.so                  5.0-RELEASE/base/base.??
ldconfig               5.0-RELEASE/base/base.??
ldd                    5.0-RELEASE/base/base.??
libc.so.6              5.0-RELEASE/base/base.??
libX11.so.6            5.0-RELEASE/packages/x11/XFree86-libraries-??
libXt.so.6             5.0-RELEASE/packages/x11/XFree86-libraries-??
d370 2
a371 2
extracted with ``bzcat2 <file> | tar pxf -''. Note: The bzip2
utilities are not part of a base
@


1.13
log
@uppercased .Dt sections.
setup -> set up in compat_svr4(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.12 2003/05/06 08:56:12 jmc Exp $
d345 2
a346 2
.Ss Finding the necessary files.
.Nm Note:
@


1.12
log
@some typos from Leandro Costa, and a couple from myself.
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.11 2003/03/18 13:01:36 david Exp $
d34 1
a34 1
.Dt compat_freebsd 8
@


1.11
log
@newsentence, newline
ok miod@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.10 2003/02/19 09:10:36 jmc Exp $
d89 1
a89 1
to avoid naming conflicts with possible 
d131 1
a131 1
applications. 
d212 1
a212 1
system to their appropriate place on the 
d263 1
a263 1
runtime linker should look for shared libs. 
d302 1
a302 1
Test this by running the 
d395 1
a395 1
sytem.
@


1.10
log
@changes to compat:

* extensive use of .Pa for paths
* .Nm for kernel options
* `procedure' chopped from .Nd
* 2nd person -> passive
* updated instructions on getting freebsd/linux binaries
* various typos

thanks millert@@ and Grzegorz Czaplinski for help with FreeBSD stuff
prompts and ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.9 2001/10/05 14:45:54 mpech Exp $
d110 2
a111 2
Basically, there are 3 possibilities. (When following these instructions,
root privileges are required on the
d265 2
a266 1
is standard. For example:
@


1.9
log
@Powered by @@mantoya:
o) start new sentence on a new line;
o) minor mdoc fixes;
millert@@ ok

Tip of the day:   www.mpechismazohist.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.8 2001/08/17 11:13:58 mpech Exp $
d38 1
a38 1
.Nd setup procedure for running
d46 3
a48 3
Most binaries should work, except programs that use FreeBSD-specific
features.
These include i386-specific calls, such as syscons utilities, and audio
d59 1
a59 1
This means, that you will also need the
d61 3
a63 2
shared libraries that the program depends on, and the runtime linker.
Also, you will need to create a "shadow root" directory for
d65 1
a65 1
binaries on your
d67 3
a69 2
system.
This directory is named /emul/freebsd.
d77 2
a78 1
program opens, for example, /etc/passwd,
d80 6
a85 3
will first try to open /emul/freebsd/etc/passwd, and if that does not exist
open the 'real' /etc/passwd file.
It is recommended that you install
d87 2
a88 1
packages that include configuration files, etc under /emul/freebsd,
d94 1
a94 1
Generally, you will need to look for the shared libraries that
d96 1
a96 1
binaries depend on only the first few times that you install a
d98 1
a98 1
program on your
d101 1
a101 1
After a while, you will have a sufficient set of
d103 1
a103 1
shared libraries on your system to be able to run newly imported
d110 2
a111 2
Basically, there are 3 possibilities (when following these instructions:
you will need to be root on your
d113 1
a113 1
system to do the necessary installation steps).
d117 1
a117 1
You have access to the
d120 1
a120 1
system.
d134 1
a134 1
You have access to a
d136 3
a138 3
system.
In this case you can temporarily install the binary there, see what shared
libraries it needs, and copy them to your
d141 1
a141 1
Example: you have just ftp-ed the
d146 1
a146 1
system you have access to, and check which shared libraries it needs by running
d161 3
a163 3
You would need go get all the files from the last column, and
put them under /emul/freebsd.
This means you eventually have these files on your
d168 5
a172 5
/emul/freebsd/usr/X11R6/lib/libXext.so.6.0
/emul/freebsd/usr/X11R6/lib/libX11.so.6.0
/emul/freebsd/usr/lib/libc.so.2.1
/emul/freebsd/usr/lib/libm.so.2.0
/emul/freebsd/usr/lib/libgcc.so.261.0
d175 1
a175 1
Note that if you already have a
d178 7
a184 6
column of the 'ldd' output, you won't need to copy the file named in the
last column to your system, the one you already have should work.
It is advisable to copy the shared library anyway if it is a newer version,
though.
You can remove the old one.
So, if you have these libraries on your system:
d187 1
a187 1
/emul/freebsd/usr/lib/libc.so.2.0
d190 1
a190 2
and you find that the ldd output for a new binary you want to
install is:
d196 3
a198 1
you won't need to worry about copying /usr/lib/libc.so.2.1 too,
d200 2
a201 2
You can decide to replace the libc.so anyway, and that should leave
you with:
d204 1
a204 1
/emul/freebsd/usr/lib/libc.so.2.1
d207 1
a207 1
Finally, you must make sure that you have the
d209 2
a210 2
runtime linker and its config files on your system.
You should copy these files from the
d212 1
a212 1
system to their appropriate place on your 
d214 3
a216 1
system (in the /emul/freebsd tree):
d219 4
a222 4
usr/libexec/ld-elf.so.1
usr/libexec/ld.so
var/run/ld-elf.so.hints
var/run/ld.so.hints
d226 1
a226 1
You don't have access to a
d228 2
a229 2
system.
In that case, you should get the extra files you need from various ftp sites.
a231 1
For now, let's assume you know where to get the files.
d234 6
a239 2
any version mismatches), and install them under /emul/freebsd
(i.e. foo/bar is installed as /emul/freebsd/foo/bar):
d242 5
a246 5
sbin/ldconfig
usr/bin/ldd
usr/lib/libc.so.x.y.z
usr/libexec/ld-elf.so.1
usr/libexec/ld.so
d249 3
a251 2
ldconfig and ldd don't necessarily need to be under /emul/freebsd,
you can install them elsewhere in the system too.
d255 3
a257 2
A good idea would be to install them in /usr/local/bin as ldconfig-freebsd
and ldd-freebsd.
d264 2
a265 1
/usr/lib are standard, you could run like the following:
d275 10
a284 4
mapped to /emul/freebsd/XXXX by
OpenBSD's compat code, and should exist as such on your system.
Make sure /emul/freebsd/var/run/ld.so.hints exists when you run
FreeBSD's ldconfig, if not, you may lose OpenBSD's /var/run/ld.so.hints.
d289 3
a291 2
It will create the file /emul/freebsd/var/run/ld.so.hints.
You should rerun the
d293 2
a294 1
version of the ldconfig program each time you add a new shared library.
d296 3
a298 1
You should now be set up for
d301 1
a301 1
You can test this by running the 
d304 1
a304 1
Suppose that you have it installed as ldd-freebsd, it should produce
d315 1
a315 1
This being done, you are ready to install new
d317 2
a318 2
binaries. 
Whenever you install a new
d320 5
a324 3
program, you should check if it needs shared libraries, and if so,
whether you have them installed in the /emul/freebsd tree.
To do this, you run the
d332 1
a332 1
you need an extra library.
d334 2
a335 2
in <majorname>, which will be of the form XXXX.<N>
You will need to find a libXXXX.so.<N>.<mm> on a
d337 6
a342 5
ftp site, and install it on your system.
The XXXX (name) and <N> (major
revision number) should match; the minor number(s) <mm> are
less important, though it is advised to take the most
recent version.
d346 1
a346 2
the information below is valid as of the time this
document was written (Jun, 1995), but certain details
d348 1
a348 1
may have changed by the time you read this.
d353 1
a353 1
and you can get the individual files you need, but mostly they
d356 1
a356 1
The primary ftp sites for the distributions are:
d362 1
a362 1
Mirror sites are described on:
d365 1
a365 1
ftp.freebsd.org:/pub/FreeBSD/MIRROR.SITES
d368 3
a370 3
This distribution consists of a number of tar-ed and gzipped files,
Normally, they're controlled by an install program, but you can
retrieve files "by hand" too.
d372 3
a374 3
the files in the distribution, and ``tar ztvf'' through them for the file
you need.
Here is an example of a list of files that you might need.
d379 6
a384 10
ld.so                  2.0-RELEASE/bindist/bindist.??
ldconfig               2.0-RELEASE/bindist/bindist.??
ldd                    2.0-RELEASE/bindist/bindist.??
libc.so.2              2.0-RELEASE/bindist/bindist.??
libX11.so.6.0          2.0-RELEASE/XFree86-3.1/XFree86-3.1-bin.tar.gz
libX11.so.6.0          XFree86-3.1.1/X311bin.tgz
libXt.so.6.0           2.0-RELEASE/XFree86-3.1/XFree86-3.1-bin.tar.gz
libXt.so.6.0           XFree86-3.1.1/X311bin.tgz
.\" libX11.so.3            oldlibs
.\" libXt.so.3             oldlibs
d387 2
a388 2
The Files called ``bindist.??'' are tar-ed, gzipped and split,
so you can extract contents by ``cat bindist.?? | tar zpxf -''.
d390 13
a402 3
Extract the files from these gzipped tarfiles in your /emul/freebsd directory
(possibly omitting or afterwards removing files you don't need), and you
are done.
@


1.8
log
@o) {Open,Net,Free}BSD -> .{O,N,F}x;
o) "start sentence on new line" issues;
o) minimal -mdoc improvements;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.7 2001/08/09 05:35:44 jsyn Exp $
d58 2
a59 2
A lot of programs are dynamically linked. This means, that you will
also need the
d118 2
a119 1
category.  The
d155 2
a156 2
put them under /emul/freebsd. This means you eventually have
these files on your
d175 2
a176 1
You can remove the old one. So, if you have these libraries on your system:
d303 2
a304 1
you need an extra library. Which library this is, is shown
d326 2
a327 2
with gzipped tar files in them. The primary ftp sites for the
distributions are:
d341 2
a342 1
retrieve files "by hand" too. The way to look something up is to retrieve all
d344 2
a345 1
you need. Here is an example of a list of files that you might need.
@


1.7
log
@mention ELF runtime linker; closes PR 1855
fix from <dim@@xs4all.nl>, with mods from brad@@; ok brad@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.6 1999/07/09 13:35:36 aaron Exp $
d38 3
a40 1
.Nd setup procedure for running FreeBSD binaries under emulation
d42 12
a53 5
OpenBSD supports running FreeBSD binaries. Most binaries should work,
except programs that use FreeBSD-specific features. These include
i386-specific calls, such as syscons utilities, and audio devices.
.Pp
The FreeBSD compatibility feature is active for kernels compiled
d59 40
a98 18
also need the FreeBSD shared libraries that the program depends on, and
the runtime linker. Also, you will need to create a "shadow root"
directory for FreeBSD binaries on your OpenBSD system. This directory
is named /emul/freebsd. Any file operations done by FreeBSD programs
run under OpenBSD will look in this directory first. So, if a FreeBSD
program opens, for example, /etc/passwd, OpenBSD will
first try to open /emul/freebsd/etc/passwd, and if that does not exist
open the 'real' /etc/passwd file. It is recommended that you install
FreeBSD packages that include configuration files, etc under /emul/freebsd,
to avoid naming conflicts with possible OpenBSD counterparts. Shared
libraries should also be installed in the shadow tree.
.Pp
Generally, you will need to look for the shared libraries that FreeBSD
binaries depend on only the first few times that you install a FreeBSD
program on your OpenBSD system. After a while, you will have a sufficient
set of FreeBSD shared libraries on your system to be able to run newly
imported FreeBSD binaries without any extra work.

d100 8
a107 5
How to get to know which shared libraries FreeBSD binaries need, and where
to get them? Basically, there are 3 possibilities (when following
these instructions: you will need to be root on your OpenBSD system to
do the necessary installation steps).

d110 2
a111 1
You have access to the OpenBSD
d113 2
a114 1
system.  Install the port named
d121 3
a123 1
necessary to run FreeBSD applications. 
d126 14
a139 6
You have access to a FreeBSD system. In this case you can
temporarily install the binary there, see what shared libraries
it needs, and copy them to your OpenBSD system. Example: you have
just ftp-ed the FreeBSD binary of SimCity. Put it on the FreeBSD
system you have access to, and check which shared libraries it
needs by running `ldd sim':
d155 3
a157 1
these files on your OpenBSD system:
d167 8
a174 7
Note that if you already have a FreeBSD shared library with a
matching major revision number to the first column of the 'ldd'
output, you won't need to copy the file named in the last column
to your system, the one you already have should work. It is
advisable to copy the shared library anyway if it is a newer version,
though. You can remove the old one. So, if you have these libraries
on your system:
d196 8
a203 4
Finally, you must make sure that you have the FreeBSD runtime linker
and its config files on your system. You should copy these
files from the FreeBSD system to their appropriate place on your
OpenBSD system (in the /emul/freebsd tree):
d213 4
a216 2
You don't have access to a FreeBSD system. In that case, you
should get the extra files you need from various ftp sites.
d218 2
a219 1
below. For now, let's assume you know where to get the files.
d234 12
a245 7
you can install them elsewhere in the system too. Just make sure
they don't conflict with their OpenBSD counterparts. A good idea
would be to install them in /usr/local/bin as ldconfig-freebsd and
ldd-freebsd.
.Pp
Run the FreeBSD ldconfig program with directory arguments in
which the FreeBSD runtime linker should look for shared libs.
d260 3
a262 2

FreeBSD ldconfig should be statically
d265 12
a276 7
You should rerun the FreeBSD version of the ldconfig program
each time you add a new shared library.
.Pp
You should now be set up for FreeBSD binaries which only need
a shared libc. You can test this by running the FreeBSD ldd
on itself. Suppose that you have it installed as ldd-freebsd, it
should produce something like:
d286 10
a295 5
This being done, you are ready to install new FreeBSD binaries.
Whenever you install a new FreeBSD program, you should check
if it needs shared libraries, and if so, whether you have
them installed in the /emul/freebsd tree. To do this, you run
the FreeBSD version ldd on the new program, and watch its output.
d303 4
a306 2
You will need to find a libXXXX.so.<N>.<mm> on a FreeBSD ftp site,
and install it on your system. The XXXX (name) and <N> (major
a310 1

d318 3
a320 2
FreeBSD distribution is
available on a lot of ftp sites. Sometimes the files are unpacked,
d364 3
a366 1
The information about FreeBSD distributions may become outdated.
@


1.6
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.5 1998/09/13 03:50:23 aaron Exp $
d70 1
a70 1
to get them? Basically, there are 2 possibilities (when following
d76 12
d153 1
d155 1
d159 1
a159 1
.It 2.
d173 1
d189 1
@


1.5
log
@typos
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.4 1998/09/07 16:44:37 aaron Exp $
d42 1
a42 1
i386-specific calls, such as syscons utilities, and audio devices. 
d44 1
a44 1
The FreeBSD compatibility feature is active for kernels compiled 
d168 2
a169 2
Run the FreeBSD ldconfig program with directory arguments in 
which the FreeBSD runtime linker should look for shared libs. 
d178 1
a178 1
Note that argument directories of ldconfig are 
d181 1
a181 1
Make sure /emul/freebsd/var/run/ld.so.hints exists when you run 
d267 1
a267 1
The Files called ``bindist.??'' are tar-ed, gzipped and split, 
@


1.4
log
@More man page fixes. Particularly fix uses of it's/its, affect/effect,
then/than and such. Other miscellaneous problems fixed across these source
files.
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.3 1998/01/02 08:51:28 deraadt Exp $
d203 1
a203 1
This been done, you are ready to install new FreeBSD binaries.
@


1.3
log
@change .Nd to include the word "emulation"
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.2 1997/02/14 23:14:19 deraadt Exp $
d181 1
a181 1
Make sure /emul/freebsd/var/run/ld.so.hints is exist when you run 
d203 1
a203 1
This being done, you are ready to install new FreeBSD binaries.
d212 1
a212 1
If it prints "not found" in stead of <fullname> it means that
@


1.2
log
@lowercase names
@
text
@d1 1
a1 1
.\"	$OpenBSD: compat_freebsd.8,v 1.1 1996/08/09 16:43:27 deraadt Exp $
d38 1
a38 1
.Nd setup procedure for running FreeBSD binaries
@


1.1
log
@from compat_linux; apparently hacked by soda@@sra.co.jp
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d34 1
a34 1
.Dt COMPAT_FREEBSD 8
d37 1
a37 1
.Nm COMPAT_FREEBSD
d43 1
d48 1
a48 1

@
