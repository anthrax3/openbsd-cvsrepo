head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.6
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.8
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.13.0.22
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.20
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.16
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.14
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.12
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.10
	OPENBSD_5_0:1.13.0.8
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.6
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.4
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.12
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.8
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.6
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.11.0.8
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.6
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.4
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@.\" @;


1.16
date	2015.10.03.13.22.06;	author stsp;	state Exp;
branches;
next	1.15;
commitid	gPX2rY2QC5nsP8C6;

1.15
date	2014.11.27.14.57.36;	author schwarze;	state Exp;
branches;
next	1.14;
commitid	7f7d267UDmKYxnH6;

1.14
date	2014.11.26.22.30.47;	author stsp;	state Exp;
branches;
next	1.13;
commitid	4iRnT56MBYy7DPmi;

1.13
date	2010.01.03.16.43.46;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2007.05.31.19.20.00;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2005.08.23.20.56.06;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.11.23.03.59;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2004.12.27.16.41.15;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2004.02.09.19.21.52;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.04.22.14.42;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2003.07.10.08.30.36;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.23.30.15;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.01.16.38.39;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.17.23.18.51;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.14.21.02.25;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.05.07.52.20;	author miod;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Restore description of the sparc64 boot process which was lost when
MD installboot was moved to the attic. Put it into boot_sparc64(8),
which still pointed readers at installboot(8) for this information.
With some markup tweaks from schwarze@@
@
text
@.\"	$OpenBSD: boot_sparc64.8,v 1.15 2014/11/27 14:57:36 schwarze Exp $
.\"
.\" Copyright (c) 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)boot_sparc.8	8.2 (Berkeley) 4/19/94
.\"
.Dd $Mdocdate: November 27 2014 $
.Dt BOOT_SPARC64 8 sparc64
.Os
.Sh NAME
.Nm boot_sparc64
.Nd sparc64 system bootstrapping procedures
.Sh DESCRIPTION
.Ss System starts
When powered on, after a panic, or if the system is rebooted via
.Xr reboot 8
or
.Xr shutdown 8 ,
the PROM will proceed to its initialization, and will boot an operating
system if autoboot is enabled.
.Ss Boot process description
The sparc64 boot process is split into two parts: a small first-stage bootblock
that is written into the superblock area of a partition
.Po
and hence is limited in size to SBSIZE - DEV_BSIZE bytes
.Pc ,
and a second-stage boot program that resides in the filesystem proper.
The first-stage bootblock is loaded into memory by the PROM.
After it receives control, it loads the second-stage boot program
.Sy ofwboot
from the filesystem.
The second-stage boot program uses the device driver interface to
the PROM and the stand-alone filesystem code in
.Pa libsa.a
to locate and load the kernel.
The first-stage bootblock and second-stage boot program can be found in
.Pa /usr/mdec/bootblk
and
.Pa /usr/mdec/ofwboot
respectively.
The second-stage boot program commonly resides in the root directory as
.Pa /ofwboot .
.Pp
System boot blocks are installed using
.Xr installboot 8 ,
which prepares an FFS filesystem partition for boot-strapping from the PROM.
.Pp
The boot program attempts to load the kernel from the selected
boot device, which must currently be an SCSI
.Pq Pa sd
or IDE
.Pq Pa wd
disk drive, or a CD-ROM
.Pq Pa cd ,
or an SCSI tape drive
.Pq Pa st .
.Pp
The UltraSPARC Open Firmware
will normally look for a bootloader on the device specified by the
.Va boot-device
variable.
The
.Ox
bootloader will then look for a kernel named
.Pa bsd
by default, unless the
.Va boot-file
variable is set, or a different filename has been specified
in the boot command.
To reset this variable to its default, empty, value, type the following:
.Pp
.D1 Sy ok Li set-default boot-file
.Pp
To boot from a
.Xr softraid 4
volume by default,
.Va boot-device
must be set to a disk device hosting a chunk of the softraid volume:
.Pp
.D1 Sy ok Li setenv boot-device disk0
.Pp
and
.Va boot-file
must contain the
.Pq Pa sr
device name of the softraid volume and optionally a partition letter
and/or kernel:
.Pp
.D1 Sy ok Li setenv boot-file sr0a:/bsd
.Pp
Autoboot is enabled by setting the
.Va auto-boot?\&
variable to
.Dq true ,
and is the factory default.
.Ss Boot process options
The following options are recognized:
.Pp
.Bl -tag -width "-XXX" -offset indent -compact
.It Fl a
Prompt for the root filesystem and swap devices after the devices have
been configured.
.It Fl c
Enter the
.Dq User Kernel Configuration
mode upon startup
.Pq see Xr boot_config 8 .
.It Fl d
Enter the debugger,
.Xr ddb 4 ,
as soon as the kernel console has been initialized.
.It Fl s
Boot the system single-user.
The system will be booted multi-user unless this option is specified.
.El
.Ss Accessing the PROM during runtime
If the
.Xr sysctl 8
variable
.Va ddb.console
is enabled, at any time you can break back to the ROM by pressing the
.Sq L1
.Pq also known as the Dq stop key
and
.Sq a
keys at the same time (if the console is a serial port the same is
achieved by sending a
.Dq break ) ,
and entering
.Ic machine prom
at the prompt.
If you do this accidentally you can continue whatever was in progress
by typing
.Ic go
at the PROM prompt, and then
.Ic cont
to return to the system.
.Sh FILES
.Bl -tag -width /usr/mdec/ofwboot.net -compact
.It Pa /bsd
default system kernel
.It Pa /bsd.rd
standalone installation kernel, suitable for disaster recovery
.It Pa /usr/mdec/bootblk
primary bootstrap for
.Dq ffs
file system
.It Pa /usr/mdec/ofwboot
secondary bootstrap (usually also installed as
.Pa /ofwboot )
.It Pa /usr/mdec/ofwboot.net
network bootstrap
.It Pa /usr/mdec/ofwbootfd
floppy disk bootstrap
.El
.Sh SEE ALSO
.Xr ddb 4 ,
.Xr softraid 4 ,
.Xr boot_config 8 ,
.Xr halt 8 ,
.Xr init 8 ,
.Xr installboot 8 ,
.Xr reboot 8 ,
.Xr savecore 8 ,
.Xr shutdown 8
@


1.15
log
@macro cleanup; ok jmc@@ stsp@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.14 2014/11/26 22:30:47 stsp Exp $
d32 1
a32 1
.Dd $Mdocdate: November 26 2014 $
d47 26
a72 3
System boot blocks are installed near the start of the boot disk
using the procedure described in
.Xr installboot 8 .
@


1.14
log
@Manual page updates for sparc64 softraid boot support.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.13 2010/01/03 16:43:46 schwarze Exp $
d32 1
a32 1
.Dd $Mdocdate: January 3 2010 $
d51 2
a52 4
boot device,
which must currently be an
.Tn SCSI
.Pq Dq sd
d54 1
a54 1
.Pq Dq wd
d56 3
a58 5
.Pq Dq cd ,
or an
.Tn SCSI
tape drive
.Pq Dq st .
d60 1
a60 2
The UltraSPARC
.Tn Open Firmware
d62 1
a62 1
.Em boot-device
d69 1
a69 1
.Em boot-file
d74 1
a74 3
.Em \	ok
set-default
.Em boot-file
d79 1
a79 1
.Em boot-device
d82 1
a82 4
.Em \	ok
setenv
.Em boot-device
disk0
d85 1
a85 1
.Em boot-file
d87 1
a87 1
.Pq Dq sr
d91 1
a91 4
.Em \	ok
setenv
.Em boot-file
sr0a:/bsd
d94 1
a94 1
.Em auto-boot?\&
d122 1
a122 1
.Em ddb.console
d124 1
a124 1
.Dq L1
d127 1
a127 1
.Dq a
@


1.13
log
@Neither .Pp nor unqualified text are allowed at the top level of .Bl;
instead, .It is required.  Thus, move .Pp and text before the .Bl,
and remove the .Pp altogether where it is not needed.

Syntax errors found by mandoc(1), also required to fix the mandoc build;
feedback and ok jmc@@, and sobrado@@ also supports the direction.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.12 2007/05/31 19:20:00 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: May 31 2007 $
d83 23
d168 2
d173 1
@


1.12
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.11 2005/08/23 20:56:06 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate$
d90 1
a91 1
.Pp
@


1.11
log
@steal a line from boot_sparc(8): note that L1 is also known as the stop
key;

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.10 2005/03/11 23:03:59 jmc Exp $
d32 1
a32 1
.Dd April 19, 1994
@


1.10
log
@cdrom/CDROM -> CD-ROM;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.9 2004/12/27 16:41:15 miod Exp $
d115 1
@


1.9
log
@Mention bsd.rd in the FILES section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.8 2004/02/09 19:21:52 espie Exp $
d57 1
a57 1
disk drive, or a cdrom
@


1.8
log
@help makewhatis produce correct entries.
okay deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.7 2003/09/04 22:14:42 jmc Exp $
d133 2
@


1.7
log
@put escapes in the right place;
(i.e. stuff I got wrong the first time, or missed)

this includes some .Cd's with missing quotes and .Nm abuse in man4;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.6 2003/07/10 08:30:36 jmc Exp $
d36 1
a36 1
.Nm boot
@


1.6
log
@fix some lists and macros;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.5 2003/06/02 23:30:15 millert Exp $
d84 1
a84 1
.Em auto-boot?
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.4 2003/02/01 16:38:39 jmc Exp $
d67 1
a67 1
.Ev Em boot-device
d74 1
a74 1
.Ev Em boot-file
d81 1
a81 1
.Ev Em boot-file
d84 1
a84 1
.Ev Em auto-boot?
d112 1
a112 1
.Ev Em ddb.console
@


1.4
log
@typos;
added .Fl to flags for boot_*

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.3 2002/10/17 23:18:51 miod Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.3
log
@Overhaul of boot_`arch`(8) manual pages (unfinished).

Attempt to factorize some texts, remove old or false stuff, try to be
more {help,use}ful, etc.

boot_alpha and boot_hp300 rewritten on the occasion, and boot_hppa is new.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.2 2001/10/14 21:02:25 miod Exp $
d70 1
a70 1
will normally look for a bootloader on the device specified by hde
d95 2
a96 1
.It -a
d99 1
a99 1
.It -c
d104 2
a105 2
.It -d
Enter the debugger ,
d108 1
a108 1
.It -s
d116 1
a116 1
.Ev ddb.console
@


1.2
log
@Mention that sparc and sparc64 have UKC.
Also, try to do a better job at describing how the different prom
versions find the bootloader and the kernel filename.
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot_sparc64.8,v 1.1 2001/10/05 07:52:20 miod Exp $
d37 1
a37 1
.Dt BOOT_SPARC 8 sparc64
d41 1
a41 3
.Nd
.Tn sparc64-specific
system bootstrapping procedures
d43 8
a50 7
.Ss Power fail and crash recovery
Normally, the system will reboot itself at power-up or after crashes.
An automatic consistency check of the file systems will be performed
(as described in
.Xr fsck 8 ) ,
and unless this fails, the system will resume multi-user operations.
.Ss Cold starts
d54 2
a55 3
The boot program attempts to load the kernel from partition
.Dq a
of the boot device,
d57 10
a66 4
.Dq sd
or
.Dq wd
disk.
d68 5
a73 23
.Fl s
flag to the bootloader will bring the system up in single-user mode.
The
.Fl a
flag instructs the system to prompt for the location of the root filesystem
and the primary swap partition.
The
.Fl c
flag instructs the system to enter the
.Dq User Kernel Config
mode upon startup (see
.Xr boot_config 8 ).
Other flags are currently ignored.
.Pp
The UltraSPARC OpenFirmware will normally load the kernel from the device and
filename as instructed by the
.Dq boot-device
and
.Dq boot-file
variables.
If the
.Dq boot-file
variable is empty, the
d75 6
a80 3
bootloader will look for a kernel named
.Dq bsd ,
unless a different filename has been specified in the boot command.
d84 27
a110 1
set-default boot-file
d122 4
a125 1
.Dq break ) .
d128 4
a131 1
.Dq go .
d133 1
a133 1
.Bl -tag -width /ofwboot -compact
d135 10
a144 3
system code
.It Pa /ofwboot
system bootstrap
d147 1
a148 3
.Xr crash 8 ,
.Xr disklabel 8 ,
.Xr fsck 8 ,
d152 3
a154 3
.Xr rc 8 ,
.Xr shutdown 8 ,
.Xr syslogd 8
@


1.1
log
@boot_sparc64(8) for, well, sparc64.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d55 1
a55 3
The boot program attempts to load
.Pa bsd
from partition
d71 6
d79 1
a79 1
The ULTRAsparc OpenFirmware will normally load the kernel from the device and
d90 2
a91 1
.Dq bsd .
d96 1
a96 1
.Pp
d119 1
@

