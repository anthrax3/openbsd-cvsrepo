head	1.18;
access;
symbols
	OPENBSD_4_9:1.17.0.16
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.14
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.10
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.12
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.8
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.6
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.4
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.2
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.16.0.2
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.15.0.14
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.12
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.10
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.8
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.6
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.18
date	2011.07.07.19.27.44;	author miod;	state dead;
branches;
next	1.17;

1.17
date	2007.05.31.19.20.00;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2006.09.20.20.48.27;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.06.19.28.06;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.02.23.30.16;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2003.04.14.06.51.48;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.01.31.21.54.40;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2002.08.29.07.34.31;	author wcobb;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.05.14.45.54;	author mpech;	state Exp;
branches;
next	1.9;

1.9
date	2001.10.04.16.56.52;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.03.15.21.17;	author mpech;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.02.18.37.34;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.27.21.19.24;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2001.04.18.11.14.23;	author bjc;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.13.04.09.23;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.02.14.46.51;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	98.09.06.22.23.21;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.41;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.41;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Remove no longer relevant manpages; attempt to modernize boot_vax(8) a bit
as well. Prodded by jmc@@
@
text
@.\"	$OpenBSD: format.8,v 1.17 2007/05/31 19:20:00 jmc Exp $
.\" Copyright (c) 1980, 1983 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	from: @@(#)format.8	6.6 (Berkeley) 4/20/91
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt FORMAT 8 vax
.Os
.Sh NAME
.Nm format
.Nd how to format disk packs
.Sh DESCRIPTION
There are two ways to format disk packs.
The simplest is to use the
.Nm
program.
The alternative is to use the DEC standard formatting
software which operates under the DEC diagnostic supervisor.
This manual page describes the operation of
.Nm format ,
then concludes with some remarks about using the DEC formatter.
.Pp
.Nm
is a stand-alone program used to
format and check disks prior to constructing
file systems.
In addition to the formatting
operation,
.Nm
records any bad sectors encountered
according to DEC standard 144.
Formatting is performed one track at a
time by writing the appropriate
headers and a test pattern and then checking
the sector by reading and verifying the pattern, using
the controller's ECC for error detection.
A sector is marked bad if an unrecoverable media
error is detected, or if a correctable
ECC error too many bits in length
is detected (such errors are indicated as
.Dq ECC
in the summary printed upon
completing the format operation).
.Pp
After the entire disk
has been formatted and checked,
the total number of errors are reported,
any bad sectors and skip sectors are marked,
and a bad sector forwarding table
is written to the disk in the first five
even numbered sectors of the last track.
It is also possible to reformat sections of the disk
in units of tracks.
.Nm
may be used on any UNIBUS or MASSBUS drive
supported by the
.Xr up 4
and
.Xr hp 4
device
drivers which uses 4-byte headers (everything except RPs).
.Pp
The test pattern used during the media check
may be selected from one of: 0xf00f (RH750 worst case),
0xec6d (media worst case), and 0xa5a5 (alternating
1's and 0's).
Normally the media worst case pattern is used.
.Pp
.Nm
also has an option to perform an extended
.Dq severe burn-in ,
which makes a number of passes using different patterns.
The number of passes can be selected at run time,
up to a maximum of 48,
with provision for additional passes or termination
after the preselected number of passes.
This test runs for many hours, depending on the disk and processor.
.Pp
Each time
.Nm
is run to format an entire disk,
a completely new bad sector table is generated
based on errors encountered while formatting.
The device driver, however, will always attempt to
read any existing bad sector table when the device is
first opened.
Thus, if a disk pack has never previously been formatted,
or has been formatted with different sectoring,
five error messages will be printed when the driver attempts
to read the bad sector table; these diagnostics should be ignored.
.Pp
Formatting a 400 megabyte disk on a MASSBUS disk controller
usually takes about 20 minutes.
Formatting on a UNIBUS disk controller takes significantly
longer.
For every hundredth cylinder formatted,
.Nm format
prints a message indicating the current cylinder being formatted.
(This message is just to reassure people that nothing is
amiss.)
.Pp
.Nm
uses the standard notation of the stand-alone I/O library
in identifying a drive to be formatted.
A drive is specified as
.Dq Ar zz Ns (x,y) ,
where
.Ar zz
refers to the controller type (either
.Ar hp
or
.Ar up ) ,
.Ar x
is the unit number of the drive;
8 times the UNIBUS or MASSBUS
adaptor number plus the MASSBUS drive number or UNIBUS
drive unit number; and
.Ar y
is the file system partition
on drive
.Ar x
(this should always be 0).
For example,
.Dq hp(1,0)
indicates that drive
1 on MASSBUS adaptor 0 should be formatted; while
.Dq up(10,0)
indicates that UNIBUS drive 2 on UNIBUS adaptor 1
should be formatted.
.Pp
Before each formatting attempt,
.Nm
prompts the user in case debugging should be enabled
in the appropriate device driver.
A carriage return disables debugging information.
.Pp
.Nm
should be used prior to building file systems (with
.Xr newfs 8
to ensure that all sectors with uncorrectable media errors
are remapped).
If a drive develops uncorrectable defects after formatting,
.Xr badsect 8
should be able to avoid the bad sectors.
.Sh EXAMPLES
A sample run of
.Nm
is shown below.
In this example (using a VAX-11/780),
.Nm
is loaded from the console floppy;
on an 11/750,
.Nm
will be loaded from the root file system with
.Xr boot 8
following a B/3 command.
Boldface means user input.
As usual, ``#'' and ``@@'' may be used to edit input.
.Bd -literal -offset indent
>>>\fBL FORMAT\fP
	LOAD DONE, 00004400 BYTES LOADED
>>>\fBS 2\fP
Disk format/check utility

Enable debugging (0=none, 1=bse, 2=ecc, 3=bse+ecc)? \fB0\fP
Device to format? \fBhp(8,0)\fP
(\fIerror messages may occur as old bad sector table is read\fP)
Formatting drive hp0 on adaptor 1: verify (yes/no)? \fByes\fP
Device data: #cylinders=842, #tracks=20, #sectors=48
Starting cylinder (0):
Starting track (0):
Ending cylinder (841):
Ending track (19):
Available test patterns are:
.Ed
.Bd -literal -offset indent-two
1 - (f00f) RH750 worst case
2 - (ec6d) media worst case
3 - (a5a5) alternating 1's and 0's
4 - (ffff) Severe burnin (up to 48 passes)
.Ed
.Bd -literal -offset indent
Pattern (one of the above, other to restart)? \fB2\fP
Maximum number of bit errors to allow for soft ECC (3):
Start formatting...make sure the drive is online
 ...
(\fIsoft ecc's and other errors are reported as they occur\fP)
 ...
(\fIif 4 write check errors were found, the program terminates like this...\fP)
 ...
Errors:
Bad sector: 0
Write check: 4
Hard ECC: 0
Other hard: 0
Marked bad: 0
Skipped: 0
Total of 4 hard errors revectored.
Writing bad sector table at block 808272
(\fI808272 is the block # of the first block in the bad sector table\fP)
Done
(\fI...program restarts to allow formatting other disks\fP)
(\fI...to abort halt machine with ^P\fP)
.Ed
.Sh DIAGNOSTICS
The diagnostics are intended to be self explanatory.
.Sh USING DEC SOFTWARE TO FORMAT
.Sy Warning:  These instructions are for people with 11/780 CPUs.
The steps needed for 11/750 or 11/730 CPUs are similar, but not
covered in detail here.
.Pp
The formatting procedures are different for each type of disk.
Listed here are the formatting procedures for RK07's, RP0X, and RM0X disks.
.Pp
You should shut down UNIX and halt the machine to do any disk formatting.
Make certain you put in the pack you want formatted.
It is also a good idea to spin down or write protect the disks you don't
want to format, just in case.
.Ss Formatting an RK07
Load the console floppy labeled, "RX11 VAX DSK LD DEV #1" in
the console disk drive, and type the following commands:
.RS
.Bd -literal
>>>BOOT
DIAGNOSTIC SUPERVISOR.  ZZ-ESSAA-X5.0-119  23-JAN-1980 12:44:40.03
DS>ATTACH DW780 SBI DW0 3 5
DS>ATTACH RK611 DMA
DS>ATTACH RK07 DW0 DMA0
DS>SELECT DMA0
DS>LOAD EVRAC
DS>START/SEC:PACKINIT
.Ed
.Ss Formatting an RP0X
Follow the above procedures except that the
ATTACH and SELECT lines should read:
.nf
.Bd -literal
DS>ATTACH RH780 SBI RH0 8 5
DS>ATTACH RP0X RH0 DBA0		(RP0X is, e.g. RP06)
DS>SELECT DBA0
.Ed
.Pp
This is for drive 0 on mba0; use 9 instead of 8 for mba1, etc.
.Ss Formatting an RM0X
Follow the above procedures except that the
ATTACH and SELECT lines should read:
.Bd -literal
DS>ATTACH RH780 SBI RH0 8 5
DS>ATTACH RM0X RH0 DRA0
DS>SELECT DRA0
.Ed
.Pp
Don't forget to put your UNIX console floppy back
in the floppy disk drive.
.Sh SEE ALSO
.Xr badsect 8 ,
.Xr newfs 8
.Sh BUGS
An equivalent facility should be available which operates under
a running UNIX system.
.Pp
It should be possible to reformat or verify part or all of a disk,
then update the existing bad sector table.
@


1.17
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.16 2006/09/20 20:48:27 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate$
@


1.16
log
@remove references to bad144(8) man page;
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.15 2003/06/06 19:28:06 jmc Exp $
d31 1
a31 1
.Dd April 20, 1991
@


1.15
log
@- section reorder
- macro fixes
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.14 2003/06/02 23:30:16 millert Exp $
d167 1
a167 3
If a drive develops uncorrectable defects after formatting, either
.Xr bad144 8
or
a280 1
.Xr bad144 8 ,
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.13 2003/04/14 06:51:48 jmc Exp $
d69 1
a69 1
.Pp 
d96 1
a96 1
.Dq severe burn-in,
d131 1
a131 3
.Do 
.Ar zz Ns (x,y),
.Dc
d186 1
a186 1
.Bd -literal -offset indent 
d209 1
a209 1
.Bd -literal -offset indent 
d226 1
a226 1
Writing bad sector table at block 808272	
@


1.13
log
@standalone/stand alone -> stand-alone;

from NetBSD (Igor Sobrado);
httpd stuff passed to apache people;

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.12 2003/01/31 21:54:40 jmc Exp $
d13 1
a13 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.12
log
@typos;
eeprom(8): added .Ar to fields, removed references to sun3
sshd(8): help and ok markus@@

help and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.11 2002/08/29 07:34:31 wcobb Exp $
d53 1
a53 1
is a standalone program used to
d132 1
a132 1
uses the standard notation of the standalone I/O library
@


1.11
log
@- replace empty lines by .Pp where appropriate.
- no empty lines at end of file.
ok mpech@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.10 2001/10/05 14:45:54 mpech Exp $
d172 1
a172 1
are remapped.
@


1.10
log
@Powered by @@mantoya:
o) start new sentence on a new line;
o) minor mdoc fixes;
millert@@ ok

Tip of the day:   www.mpechismazohist.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.9 2001/10/04 16:56:52 mpech Exp $
a237 1

@


1.9
log
@we don't like .Pp and blank lines before/after .Ss;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.8 2001/08/03 15:21:17 mpech Exp $
d42 2
a43 2
There are two ways to format disk packs.  The simplest is to
use the
d45 2
a46 1
program.  The alternative is to use the DEC standard formatting
d133 2
a134 2
in identifying a drive to be formatted.  A drive is
specified as
d165 2
a166 2
in the appropriate device driver.  A carriage return
disables debugging information.
d172 2
a173 2
are remapped.  If a drive develops uncorrectable
defects after formatting, either
d246 2
a247 3
The formatting procedures are different for each type of disk.  Listed
here are the formatting procedures for RK07's, RP0X, and RM0X
disks.
d250 3
a252 2
Make certain you put in the pack you want formatted.  It is also a good idea
to spin down or write protect the disks you don't want to format, just in case.
@


1.8
log
@o) We don't like .Pp before/after .Sh;
o) .Nm always has argument in .Sh SYNOPSIS;
o) We always closes .Bl and .Bd tags;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.7 2001/08/02 18:37:34 mpech Exp $
a251 1
.Pp
a265 1
.Pp
a276 1
.Pp
@


1.7
log
@o) .Sh AUTHOR -> .Sh AUTHORS;
o) .Sh EXAMPLE -> .Sh EXAMPLES;
o) Delete .Sh OPTIONS. Text moved to .Sh DESCRIPTION;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.6 2001/06/27 21:19:24 pvalchev Exp $
a240 1
.Pp
@


1.6
log
@spelling/grammer fixes; jsyn@@nthought.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.5 2001/04/18 11:14:23 bjc Exp $
d177 1
a177 1
.Sh EXAMPLE
@


1.5
log
@- .Dt FOO 8 -> .Dt FOO 8 vax (where needed)
- convert format.8 to mdoc
- rearrange sections in installboot.8
- spelling/other misc. errors
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.4 2000/10/13 04:09:23 aaron Exp $
d89 1
a89 1
drivers which uses 4-byte headers (everything except RP's).
d242 2
a243 2
.Sy Warning:  These instructions are for people with 11/780 CPU's.
The steps needed for 11/750 or 11/730 cpu's are similar, but not
@


1.4
log
@Remove unwanted trailing whitespace.
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.3 2000/03/02 14:46:51 todd Exp $
d35 7
a41 6
.TH FORMAT 8 "April 20, 1991"
.UC 4
.SH NAME
format \- how to format disk packs
.SH DESCRIPTION
.PP
d44 1
a44 1
.I format
d48 1
a48 1
.IR format ,
d50 2
a51 2
.PP
.I Format
d57 1
a57 1
.I format
d69 2
a70 1
``ECC'' in the summary printed upon
d72 1
d82 1
a82 1
.I Format
d84 5
a88 1
supported by the \fIup\fP and \fIhp\fP device
d90 1
a90 1
.PP
d96 4
a99 3
.PP
.I Format
also has an option to perform an extended \*(lqsevere burn-in,\*(rq
d106 1
a106 1
.PP
d108 1
a108 1
.I format
d119 1
a119 1
.PP
d124 2
a125 2
For every hundredth cylinder formatted
.I format
d129 2
a130 2
.PP
.I Format
d134 3
a136 1
.IR zz ( x , y ),
d138 1
a138 1
.I zz
d140 1
a140 1
.I hp
d142 2
a143 2
.IR up ),
.I x
d148 1
a148 1
.I y
d151 1
a151 1
.I x
d153 3
a155 1
For example, ``hp(1,0)'' indicates that drive
d157 2
a158 1
``up(10,0)'' indicates that UNIBUS drive 2 on UNIBUS adaptor 1
d160 1
a160 1
.PP
d162 1
a162 1
.I format
d166 2
a167 2
.PP
.I Format
d169 2
a170 2
.IR newfs (8))
to insure that all sectors with uncorrectable media errors
d173 1
a173 1
.IR bad144 (8)
d175 1
a175 1
.IR badsect (8)
d177 1
a177 1
.SH EXAMPLE
d179 1
a179 1
.I format
d182 1
a182 1
.I format
d184 2
a185 2
on an 11/750
.I format
d187 2
a188 2
.IR boot (8)
following a \*(lqB/3\*(rq command.
d191 1
a191 4
.nf
.in +0.5i
.ta  1i
.sp 1
d196 1
a196 1
.sp
d207 2
a208 1
.in +1.0i
d213 2
a214 1
.in -1.0i
d236 3
a238 3
.fi
.sp 1
.SH DIAGNOSTICS
d240 3
a242 3
.SH "USING DEC SOFTWARE TO FORMAT"
.PP
.B "Warning:  These instructions are for people with 11/780 CPU's."
d245 1
a245 2
.I
.PP
d249 1
a249 1
.PP
d253 2
a254 2
.PP
.B "Formatting an RK07."
d258 1
a258 1
.nf
d267 3
a269 4
.fi
.RE
.PP
.B "Formatting an RP0X."
a271 1
.RS
d273 1
d277 2
a278 3
.fi
.RE
.PP
d280 2
a281 2
.PP
.B "Formatting an RM0X."
d284 1
a284 2
.RS
.nf
d288 2
a289 3
.fi
.RE
.PP
d292 5
a296 5
.SH SEE ALSO
bad144(8),
badsect(8),
newfs(8)
.SH BUGS
d299 1
a299 1
.PP
@


1.3
log
@$OpenBSD$
@
text
@d1 1
a1 1
.\"	$OpenBSD: format.8,v 1.2 1998/09/06 22:23:21 aaron Exp $
d45 1
a45 1
software which operates under the DEC diagnostic supervisor. 
d58 1
a58 1
according to DEC standard 144. 
d79 1
a79 1
.I Format 
d127 1
a127 1
where 
d142 1
a142 1
(this should always be 0). 
d148 1
a148 1
Before each formatting attempt, 
d155 1
a155 1
should be used prior to building file systems (with 
d165 1
a165 1
A sample run of 
d167 2
a168 2
is shown below.  
In this example (using a VAX-11/780), 
d236 1
a236 1
here are the formatting procedures for RK07's, RP0X, and RM0X 
d291 1
a291 1
a running UNIX system. 
@


1.2
log
@More man page fixes. Spelling, grammar, some typos. Lots of double-word
occurrences squashed as well.
@
text
@d1 1
a33 1
.\"	$Id: format.8,v 1.1.1.1 1995/10/18 08:44:41 deraadt Exp $
@


1.1
log
@Initial revision
@
text
@d33 1
a33 1
.\"	$Id: format.8,v 1.2 1993/08/01 07:34:43 mycroft Exp $
d120 1
a120 1
is amiss.)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
