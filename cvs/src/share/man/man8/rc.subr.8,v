head	1.34;
access;
symbols
	OPENBSD_6_2:1.34.0.4
	OPENBSD_6_2_BASE:1.34
	OPENBSD_6_1:1.32.0.4
	OPENBSD_6_1_BASE:1.32
	OPENBSD_6_0:1.31.0.2
	OPENBSD_6_0_BASE:1.31
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.28.0.6
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.2
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.25.0.4
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.23.0.6
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.23.0.2
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.22.0.2
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.18.0.4
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.2
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8;
locks; strict;
comment	@.\" @;


1.34
date	2017.05.27.19.55.48;	author ajacoutot;	state Exp;
branches;
next	1.33;
commitid	WxILdqU0pr1p18v5;

1.33
date	2017.05.27.13.51.52;	author ajacoutot;	state Exp;
branches;
next	1.32;
commitid	6HzyJoXIH34lggdk;

1.32
date	2016.09.07.13.12.42;	author ajacoutot;	state Exp;
branches;
next	1.31;
commitid	6hiFrnX4ZcAmLO84;

1.31
date	2016.04.26.18.30.22;	author jmc;	state Exp;
branches;
next	1.30;
commitid	CmRvPfvXqAHaujqv;

1.30
date	2016.04.26.17.43.12;	author ajacoutot;	state Exp;
branches;
next	1.29;
commitid	84F9HhfKn82n0pNP;

1.29
date	2015.09.25.08.24.52;	author sobrado;	state Exp;
branches;
next	1.28;
commitid	VlLG0rqML4UNP1yj;

1.28
date	2015.01.15.09.20.37;	author ajacoutot;	state Exp;
branches;
next	1.27;
commitid	DkaMvTTPk0odkX34;

1.27
date	2014.09.22.16.27.03;	author schwarze;	state Exp;
branches;
next	1.26;
commitid	zJwQjrBdG4IfBCDw;

1.26
date	2014.09.22.16.17.32;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	XPpV7gS2U2oRib6n;

1.25
date	2014.07.09.14.19.22;	author ajacoutot;	state Exp;
branches;
next	1.24;
commitid	y0ghT5LJiLgElOXd;

1.24
date	2014.03.26.00.15.47;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2013.07.15.22.59.12;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2012.11.17.00.55.58;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2012.08.15.18.23.10;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2012.08.06.06.44.15;	author ajacoutot;	state Exp;
branches;
next	1.19;

1.19
date	2012.08.04.15.30.48;	author ajacoutot;	state Exp;
branches;
next	1.18;

1.18
date	2011.12.13.00.09.52;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2011.03.25.10.03.26;	author ajacoutot;	state Exp;
branches;
next	1.16;

1.16
date	2011.03.23.20.43.43;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2011.03.15.12.58.31;	author ajacoutot;	state Exp;
branches;
next	1.14;

1.14
date	2011.03.15.10.31.47;	author ajacoutot;	state Exp;
branches;
next	1.13;

1.13
date	2011.03.10.15.09.38;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2011.03.10.10.24.33;	author ajacoutot;	state Exp;
branches;
next	1.11;

1.11
date	2011.03.08.13.49.13;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2011.03.06.16.49.47;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2011.03.05.12.56.33;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2011.02.24.07.06.35;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2011.02.17.18.22.44;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2011.02.12.11.22.31;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2011.01.16.23.31.12;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2011.01.16.14.59.19;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.16.13.19.47;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.16.13.08.50;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.16.13.05.17;	author robert;	state Exp;
branches;
next	;


desc
@@


1.34
log
@Ok turns out we still want to keep the rc_bg variable around but we need
to know which daemon cannot background themselves (actually we want to
know the opposite, but there are much more). However, it's only needed in
_rc_wait and rc.subr still does its magic without the need to add `&'.
@
text
@.\" 	$OpenBSD: rc.subr.8,v 1.33 2017/05/27 13:51:52 ajacoutot Exp $
.\"
.\" Copyright (c) 2011 Robert Nagy, Antoine Jacoutot, Ingo Schwarze
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: May 27 2017 $
.Dt RC.SUBR 8
.Os
.Sh NAME
.Nm rc.subr
.Nd daemon control scripts routines
.Sh SYNOPSIS
.Nm daemon Ns = Ns Ar path_to_executable
.Nm .\&
.Pa /etc/rc.d/rc.subr
.Nm rc_cmd
.Ar action
.Sh DESCRIPTION
Apart from a few notable exceptions, rc scripts must follow this
naming policy:
.Pp
.Bl -enum -compact
.It
When possible, use the same name as the
.Nm daemon
it is referring to.
.It
It must follow
.Xr ksh 1
variable naming: begin with an alphabetic or underscore character, followed by
one or more alphanumeric or underscore characters.
Dashes
.Pq Sq -
have to be converted to
underscores
.Pq Sq _ .
.El
.Pp
Every script under
.Pa /etc/rc.d
follows this pattern:
.Pp
.Bl -enum -compact
.It
Define the
.Va daemon
variable.
.It
Define service-specific defaults for one or more
.Va daemon_*
variables (optional).
.It
Source
.Nm ,
which defines default shell functions and variable values.
.It
Override the
.Va pexp
variable or any of the
.Ic rc_*
functions and set the
.Va rc_bg
or
.Va rc_reload
variables, if needed.
.It
Define an
.Ic rc_pre
and/or
.Ic rc_post
function, if needed.
.It
Call the
.Ic rc_cmd
function as
.Dq "rc_cmd $1" .
.El
.Pp
The following shell functions are defined by
.Nm :
.Bl -tag -width rc_reload
.It Ic rc_cmd Ar action
Run the
.Ar action
for the current
.Nm rc.d
script, based on the settings of various shell variables.
.Ic rc_cmd
is extremely flexible, and allows fully functional
.Nm rc.d
scripts to be implemented in a small amount of shell code.
For a given
.Ar action ,
if the
.Ic rc_${action}
function is not defined, then a default function is provided by
.Nm rc.subr .
In addition actions can be disabled by setting the
.Va rc_${action}
variable to
.Dq NO .
For example, if
.Dq rc_reload=NO
is set in the
.Nm rc.d
script, and
.Ic rc_cmd
is called for the reload action, an error will be raised.
Similarly, the special variable
.Va rc_usercheck
must be set to
.Dq NO
if the
.Cm check
.Ar action
requires root privileges.
.Pp
The
.Ar action
argument can be
.Cm start ,
.Cm stop ,
.Cm reload ,
.Cm restart ,
or
.Cm check :
.Bl -tag -width restart
.It Ic check
Call
.Ic rc_check .
Return 0 if the daemon is running or 1 if it is not.
.It Ic start
Check that the service is running by calling
.Ic rc_check .
If it's not running, call
.Ic rc_pre
if it exists, then
.Ic rc_start .
.It Ic stop
Check that the service is running by calling
.Ic rc_check .
If it is running,
call
.Ic rc_stop
and wait up to 30 seconds for the daemon to properly shutdown.
If successful, run
.Ic rc_post
if it exists.
.It Ic restart
Run the
.Ar action
argument
.Cm stop ,
then if successful run
.Cm start .
.It Ic reload
Check that the service is running by calling
.Ic rc_check .
If it is running,
call
.Ic rc_reload .
.El
.It Ic rc_check
Search for processes of the service with
.Xr pgrep 1
using the regular expression given in the
.Va pexp
variable.
.It Ic rc_start
Start the daemon.
Defaults to:
.Bd -literal -offset indent
${rcexec} "${daemon} ${daemon_flags}"
.Ed
.It Ic rc_stop
Stop the daemon.
Send a
.Dv SIGTERM
signal using
.Xr pkill 1
on the regular expression given in the
.Va pexp
variable.
.It Ic rc_reload
Send a
.Dv SIGHUP
signal using
.Xr pkill 1
on the regular expression given in the
.Va pexp
variable.
One has to make sure that sending
.Dv SIGHUP
to a daemon will have the desired effect,
i.e. that it will reload its configuration.
.El
.Sh ENVIRONMENT
.Ic rc_cmd
uses the following shell variables to control its behaviour.
.Bl -tag -width "daemon_timeout"
.It Va daemon
The path to the daemon, optionally followed by one or more
whitespace separated arguments.
Arguments included here are always used, even if
.Va daemon_flags
is empty.
This variable is required.
It is an error to source
.Nm
without defining
.Va daemon
first.
.It Va daemon_class
Login class to run the daemon with, using
.Xr su 1 .
This is a read only variable that gets set by
.Nm rc.subr
itself.
It searches
.Xr login.conf 5
for a login class that has the same name as the
.Nm rc.d
script itself and uses that.
If no such login class exists then
.Dq daemon
will be used.
.It Va daemon_flags
Arguments to call the daemon with.
.It Va daemon_rtable
Routing table to run the daemon under, using
.Xr route 8 .
.It Va daemon_timeout
Maximum time in seconds to wait for the
.Cm start ,
.Cm stop
and
.Cm reload
actions to return.
This is only guaranteed with the default
.Ic rc_start ,
.Ic rc_stop
and
.Ic rc_reload
functions.
.It Va daemon_user
User to run the daemon as, using
.Xr su 1 .
.It Va pexp
A regular expression to be passed to
.Xr pgrep 1
in order to find the desired process or to be passed to
.Xr pkill 1
to stop it.
By default this variable contains the
.Va daemon
and
.Va daemon_flags
variables.
To override the default value, an
.Nm rc.d
script has to redefine this variable
.Em after
sourcing
.Nm .
.It Va rc_bg
Can be set to
.Cm YES
in an
.Nm rc.d
script to force starting the daemon in background when using the default
.Ic rc_start .
.It Va rc_reload
Can be set to
.Dq NO
in an
.Nm rc.d
script to disable the reload action if the respective daemon
does not support reloading its configuration.
The same is possible, but almost never useful, for other actions.
.It Va rc_usercheck
Can be set to
.Dq NO
in an
.Nm rc.d
script, if the
.Cm check
action needs root privileges.
.It Va rcexec
Holds the full
.Xr su 1
command used to run the daemon.
Defaults to:
.Pp
.Dl "su -l -c ${daemon_class} -s /bin/sh ${daemon_user} -c"
.El
If
.Va daemon_rtable
is set, the following
.Xr route 8
command is prepended to
.Va rcexec :
.Pp
.Dl "route -T ${daemon_rtable}"
.Pp
All
.Va daemon_*
variables are set in the following ways:
.Bl -enum
.It
Global defaults are provided by
.Nm :
.Bd -literal -offset indent
daemon_class=daemon
daemon_flags=
daemon_rtable=0
daemon_timeout=30
daemon_user=root
.Ed
.It
Service-specific defaults may be provided in the respective
.Nm rc.d
script
.Em before
sourcing
.Nm ,
thus overriding the global defaults.
.It
As noted in
.Xr rc.d 8 ,
site-specific values provided in
.Xr rc.conf.local 8
for
.Va daemon_flags ,
.Va daemon_rtable ,
.Va daemon_timeout ,
and
.Va daemon_user
will override those defaults.
.El
.Sh FILES
.Bl -tag -width Ds
.It Pa /etc/rc.d/
Directory containing daemon control scripts.
.It Pa /etc/rc.d/rc.subr
Functions and variables used by
.Nm rc.d
scripts.
.It Pa /usr/ports/infrastructure/templates/rc.template
A sample
.Nm rc.d
script.
.El
.Sh SEE ALSO
.Xr rc 8 ,
.Xr rc.conf 8 ,
.Xr rc.d 8
.Sh HISTORY
The
.Nm
framework
first appeared in
.Ox 4.9 .
.Sh AUTHORS
.An -nosplit
The
.Nm
framework was written by
.An Robert Nagy Aq Mt robert@@openbsd.org ,
.An Antoine Jacoutot Aq Mt ajacoutot@@openbsd.org ,
and
.An Ingo Schwarze Aq Mt schwarze@@openbsd.org .
@


1.33
log
@Add an ALRM timer to cope with 2 annoying issues in rc.d(8):
- prevent a daemon from hanging the boot
(typo in your flagsm e.g. httpd_flags=-d)
- make sure we can get the status of a backgrounded daemon instead of always
returning success

Side effect of this is that we can kill a knob! rip rc_bg :-)
Ports will need love, and a second commit is coming for that.

The diff is small yet not trivial so I am committing early in the release
process in one shot so it can easily be reverted if needed. I started working on
this during g2k16 in Cambridge then finished it in Brisbane for a2k17 where
robert@@, beck@@ and sthen@@ agreed it was the correct way to go and I should move
ahead with it post 6.1.

If you see any regression, please talk to me!
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.32 2016/09/07 13:12:42 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: September 7 2016 $
d82 5
a86 1
functions and variables, if needed.
d194 1
a194 1
${rcexec} "${daemon} ${daemon_flags} ${_bg}"
d286 7
@


1.32
log
@Introduce an _rc_check_name() function to check the input script name so that
we don't end up with cryptic error messages.
Regex help from rpe@@
Issue reported by Anthony Coulter in rcctl(8), but better fix the root cause.

Also clarify the mage page that rc.d script name must follow ksh(1) variable
naming.

ok robert@@ sthen@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.31 2016/04/26 18:30:22 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate: April 26 2016 $
d82 1
a82 5
functions and set the
.Va rc_bg
or
.Va rc_reload
variables, if needed.
d251 1
a251 4
.Cm start
(only if
.Va rc_bg
is set),
a281 7
.It Va rc_bg
Can be set to
.Cm YES
in an
.Nm rc.d
script to force starting the daemon in background when using the default
.Ic rc_start .
@


1.31
log
@unwanted .El;
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.30 2016/04/26 17:43:12 ajacoutot Exp $
d45 1
a45 1
Use the same name as the
d49 4
@


1.30
log
@Document recent rc.subr/rc.d changes.

ok sthen@@ robert@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.29 2015/09/25 08:24:52 sobrado Exp $
d27 1
a27 1
.Dd $Mdocdate: September 25 2015 $
a323 1
.El
@


1.29
log
@typo.
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.28 2015/01/15 09:20:37 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: January 15 2015 $
d230 14
d246 3
a248 3
.It Va daemon_user
User to run the daemon as, using
.Xr su 1 .
d265 2
a266 2
.It Va daemon_class
Login class to run the daemon with, using
a267 11
This is a read only variable that gets set by
.Nm rc.subr
itself.
It searches
.Xr login.conf 5
for a login class that has the same name as the
.Nm rc.d
script itself and uses that.
If no such login class exists then
.Dq daemon
will be used.
d316 9
d335 2
a336 1
daemon_flags=""
d355 1
@


1.28
log
@Extend the description of _timeout.
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.27 2014/09/22 16:27:03 schwarze Exp $
d27 1
a27 1
.Dd $Mdocdate: September 22 2014 $
d169 1
a169 1
agument
@


1.27
log
@add obviously forgotten daemon_timeout default
and mention that it can be overridden
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.26 2014/09/22 16:17:32 schwarze Exp $
d237 4
a240 1
.Cm start ,
d245 6
@


1.26
log
@obvious markup typo; frantisek holop <minusf at obiit dot org>
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.25 2014/07/09 14:19:22 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: July 9 2014 $
d315 1
d332 2
a333 1
.Va daemon_flags
@


1.25
log
@Add a daemon_timeout variable for rc_wait().
It represents the maximum time in seconds to wait for the start, stop
and reload actions to return. Defaults to "30".
No default behavior is changed.

ok beck@@ sthen@@ jasper@@ giovanni@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.24 2014/03/26 00:15:47 schwarze Exp $
d27 1
a27 1
.Dd $Mdocdate: March 26 2014 $
d235 1
a235 1
.It Ar daemon Ns _timeout
@


1.24
log
@rc_stop() sends SIGTERM, not SIGKILL; reported by <yon dot fernandez dot
de dot retana at bardinflor dot perso dot aquilenet dot fr on bugs@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.23 2013/07/15 22:59:12 schwarze Exp $
d27 1
a27 1
.Dd $Mdocdate: July 15 2013 $
d217 1
a217 1
.Bl -tag -width "daemon_flags"
d235 7
@


1.23
log
@Mark up email adresses with the .Mt macro;
patch from Franco Fichtner <franco at lastsummer dot de>;
ok jmc@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.22 2012/11/17 00:55:58 schwarze Exp $
d27 1
a27 1
.Dd $Mdocdate: November 17 2012 $
d195 1
a195 1
.Dv SIGKILL
@


1.22
log
@Fix some abuse of the .Ar and .Fn macros;
ok ajacoutot@@ and sthen@@ on a previous version some time ago,
using the additional suggestion ".Dq NO" from jmc@@.
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.21 2012/08/15 18:23:10 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate: August 15 2012 $
d357 2
a358 2
.An Robert Nagy Aq robert@@openbsd.org ,
.An Antoine Jacoutot Aq ajacoutot@@openbsd.org ,
d360 1
a360 1
.An Ingo Schwarze Aq schwarze@@openbsd.org .
@


1.21
log
@remove trailing whitespace;
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.20 2012/08/06 06:44:15 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: August 6 2012 $
d112 1
a112 1
.Ar rc_${action}()
d116 1
a116 1
.Ar rc_${name}
d118 4
a121 2
.Ar NO .
For example, if rc_reload=NO is set in the
d127 1
a127 1
.Ar rc_usercheck
d129 1
a129 1
.Ar NO
d147 1
a147 1
.Fn rc_check .
d151 1
a151 1
.Fn rc_check .
d153 1
a153 1
.Fn rc_pre
d155 1
a155 1
.Fn rc_start .
d158 1
a158 1
.Fn rc_check .
d161 1
a161 1
.Fn rc_stop
d164 1
a164 1
.Fn rc_post
d175 1
a175 1
.Fn rc_check .
d178 1
a178 1
.Fn rc_reload .
d184 1
a184 1
.Ar pexp
d199 1
a199 1
.Ar pexp
d207 1
a207 1
.Ar pexp
d272 1
a272 1
.Fn rc_start .
d275 1
a275 1
.Cm NO
d283 1
a283 1
.Cm NO
d286 3
a288 1
script, if the rc_check function needs root privileges.
@


1.20
log
@Adapt after recent move from pkill(1) to pgrep(1) in rc_check.

from robert at peichaer dot org
ok jmc@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.19 2012/08/04 15:30:48 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: August 4 2012 $
d180 1
a180 1
.Xr pgrep 1 
@


1.19
log
@Document rc_usercheck.

ok todd@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.18 2011/12/13 00:09:52 schwarze Exp $
d27 1
a27 1
.Dd $Mdocdate: December 13 2011 $
d179 3
a181 5
Send a
.Dv NULL
signal using
.Xr pkill 1
on the regular expression given in the
d249 2
d252 1
a252 1
in order to find the desired process.
d279 6
@


1.18
log
@If a daemon always requires one or more fixed flags or arguments,
put these into $daemon, not into $daemon_flags;
feedback and ok jmc@@, ok ajacoutot@@, issue brought up by sthen@@,
and sthen@@ also likes the general idea.
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.17 2011/03/25 10:03:26 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: March 25 2011 $
d124 8
@


1.17
log
@Bump timeout to 30s.

ok robert@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.16 2011/03/23 20:43:43 schwarze Exp $
d27 1
a27 1
.Dd $Mdocdate: March 23 2011 $
d211 5
a215 1
The path to the daemon.
@


1.16
log
@Cleanup .Va macros, triggered by a smaller diff from ajacoutot@@.
* Do not use .Va for mere emphasis, it's for variable names.
* Use .Dl to display complete single command lines.
* And .Bd -literal is nicer when they contain double quotes.
ok ajacoutot@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.15 2011/03/15 12:58:31 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: March 15 2011 $
d152 1
a152 1
and wait up to 5 seconds for the daemon to properly shutdown.
@


1.15
log
@Put daemon between double quotes to make it clear we are talking about
the daemon class, not the daemon script.

ok schwarze@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.14 2011/03/15 10:31:47 ajacoutot Exp $
d49 2
a50 1
.Va dashes
d52 2
a53 1
.Va underscores .
d180 4
a183 2
Defaults to
.Va ${rcexec} "${daemon} ${daemon_flags} ${_bg}" .
d270 1
a270 1
arguments used to run the daemon.
d272 2
a273 1
.Va su -l -c ${daemon_class} -s /bin/sh ${daemon_user} -c .
@


1.14
log
@Make it clear that rc_reload=NO is not about a daemon not supporting
SIGHUP but having no way to reload the configuration (other than restart).
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.13 2011/03/10 15:09:38 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate: March 10 2011 $
d230 3
a232 1
If no such login class exists then daemon will be used.
@


1.13
log
@tweak previous;
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.12 2011/03/10 10:24:33 ajacoutot Exp $
d259 1
a259 3
does not support the
.Dv SIGHUP
signal to reload its configuration.
@


1.12
log
@Extend the documentation of the actions argument and bring this up to date
after the recent changes.

ok sthen@@ robert@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.11 2011/03/08 13:49:13 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: March 8 2011 $
d139 1
a139 1
.Fn rc_check ,
d177 2
a178 1
Start the daemon. Defaults to
@


1.11
log
@There is no such thing as rc_restart().
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.10 2011/03/06 16:49:47 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: March 6 2011 $
d131 9
a139 5
.Cm check ,
each running one of the functions described below.
.It Ic rc_start
Check whether the service is already running by calling
.Ar rc_check ,
d142 3
a144 2
if it exists, then start the daemon.
.It Ic rc_stop
d146 6
a151 3
.Ar rc_check .
If it is running, stop the daemon,
then call
d154 34
d199 1
a199 3
that is, that it will reload its configuration.
.It Ic rc_check
Return 0 if the daemon is running or 1 if it is not.
a231 2
.Xr pgrep 1
or
@


1.10
log
@Add an "rc_bg" variable that is undefined by default and allows to start
a daemon in the background.

man page tweaks from schwarze@@
discussed with an ok schwarze@@ robert@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.9 2011/03/05 12:56:33 schwarze Exp $
d27 1
a27 1
.Dd $Mdocdate: March 5 2011 $
d96 1
a96 1
.Bl -tag -width rc_restart
a157 5
.It Ic rc_restart
Perform a
.Cm stop
then a
.Cm start .
@


1.9
log
@Minor polishing that was missed during the recent rc.subr(8) split:
* Avoid markup of "daemon" when not explicitly referring to the variable.
* Improve some wording, remove one typo and one useless .Pp.
Reminded by jmc@@, ok jmc@@ ajacoutot@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.8 2011/02/24 07:06:35 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: February 24 2011 $
d74 4
d80 1
a80 4
variables
or any of the
.Ic rc_*
functions, if needed.
d212 7
@


1.8
log
@Fix several documentation bugs (including a typo fix from schwarze@@).
Missing documentation about the naming policy for rc scripts.
Document rcexec.
Remove daemon_shell, it's proved useless at best and can introduce
issues we don't want to deal with.

prodded by, discussed with and ok espie@@
ok robert@@ miod@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.7 2011/02/17 18:22:44 espie Exp $
d27 1
a27 1
.Dd $Mdocdate: February 17 2011 $
d40 1
a40 2
.Pp
Apart from a few notable exceptions, rc scripts must follow the following
d56 1
a56 1
follows the following pattern:
d178 1
a178 3
Arguments to call
.Va daemon
with.
d180 1
a180 3
User to run
.Va daemon
as, using
d183 1
a183 3
Login class to run the
.Va daemon
with, using
d216 1
a216 2
script to disable the reload action if the respective
.Va daemon
d224 1
a224 2
arguments used to run
.Va daemon .
@


1.7
log
@split along user/implementation lines.
After lots of back and forth with jmc@@ and schwarze.

okay miod@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.6 2011/02/12 11:22:31 ajacoutot Exp $
d27 1
a27 1
.Dd $Mdocdate: February 12 2011 $
d40 15
d91 1
a91 1
.Dq "rc_cmd $0" .
a200 5
.It Va daemon_shell
Shell to run the
.Va daemon
in, using
.Xr su 1 .
d229 7
a247 1
daemon_shell=/bin/sh
@


1.6
log
@Extend rc_scripts documentation.

prodded by espie@@
ok jmc@@ (with tweaks), ok miod@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.5 2011/01/16 23:31:12 schwarze Exp $
d27 1
a27 1
.Dd $Mdocdate: January 16 2011 $
d31 2
a32 3
.Nm rc.subr ,
.Nm rc.d
.Nd daemon control scripts
d40 3
a42 24
The
.Nm rc.d
directory contains shell scripts to start, stop, and reconfigure daemon
programs.
It is currently used for daemons installed from
.Xr packages 7
only, not for daemons contained in the
.Ox
base system.
The order in which scripts are started and stopped at boot time and
shutdown is defined by the
.Va rc_scripts
variable in
.Xr rc.conf 8 .
.Pp
The
.Nm
script defines shell functions and variables used by
.Nm rc.d
scripts.
.Pp
Each
.Nm rc.d
script consists of the following parts, always given in the following order:
d50 1
a50 1
Optionally define service-specific defaults for one or more
d52 1
a52 1
variables.
d54 3
a56 3
Source the
.Nm
script.
d58 1
a58 1
Optionally override the
d62 2
a63 1
variables or any of the
d65 3
a67 2
functions.
Optionally define an
d71 1
a71 1
function.
d75 2
a76 3
function, passing through the
.Ar action
argument.
d119 3
a121 5
Start the service.
It checks if the service is already running by calling
.Ar rc_check
and refuses to start if it is.
In addition if the
d123 1
a123 2
function exists, it is called before
starting the daemon.
d125 4
a128 4
It checks that the service is running by calling
.Ar rc_check
and if it's not, no action is taken.
In addition if the
d130 1
a130 2
function exists, it is called right
after the daemon has been stopped.
d132 3
a134 1
Find the process using
d136 1
a136 1
with the regular expression as specified in the
d138 1
a138 3
variable and send a
.Dv SIGHUP
signal.
d142 1
a142 1
which is reloading the configuration files.
a185 2
This variable cannot be overridden from
.Xr rc.conf.local 8 .
a207 2
This variable cannot be overridden from
.Xr rc.conf.local 8 .
d223 1
a223 1
variables can be set in three ways:
d226 1
a226 1
The global defaults are provided by
d241 1
a241 1
overriding the global defaults.
d243 3
a245 1
Site-specific values provided in
d247 5
a251 12
override all defaults.
These are defined by replacing the string "daemon" in the variable name
by the name of the respective
.Nm rc.d
script.
For example, to run the postgres database daemon using a site-specific
user account, define
.Pp
.Dl postgresql_user=mypgsqluser
.Pp
in
.Xr rc.conf.local 8 .
d268 2
a269 1
.Xr rc.conf 8
d273 1
a273 1
script
d279 1
a279 1
.Nm rc.subr
@


1.5
log
@explain various points in more detail, and some in easier or
more standard ways; ok jmc@@ ajacoutot@@ robert@@
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.4 2011/01/16 14:59:19 jmc Exp $
d50 5
@


1.4
log
@tweak previous;
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.3 2011/01/16 13:19:47 jasper Exp $
d3 1
a3 1
.\" Copyright (c) 2010 Robert Nagy and Antoine Jacoutot
d16 1
a16 1
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
d19 1
a19 1
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
d33 1
a33 1
.Nd functions used by rc.d scripts
d35 1
d39 1
a39 1
.Ar argument
d42 10
d53 1
a53 2
script contains commonly used shell script functions and variable
definitions which are used by various
d57 15
a71 1
The
d73 21
a93 3
functions are accessed by sourcing
.Pa /etc/rc.d/rc.subr
into the current shell.
d95 4
a98 3
The following shell functions are available:
.Bl -tag -width 4n
.It Ic rc_cmd Ar argument
d100 2
a101 2
.Ar argument
method for the current
d108 2
a109 2
For a given method
.Ar argument ,
d111 2
a112 2
.Ar rc_${argument}()
function is not defined, then a default method is provided by
d114 1
a114 1
In addition methods can be disabled by setting the
d122 1
a122 1
is called with the reload argument, an error will be raised.
d124 11
a134 5
.Ar argument
is searched for in the list of supported commands, which may be one
of:
.Bl -tag -width ".Cm restart" -offset indent
.It Cm start
d143 1
a143 1
.It Cm stop
d151 1
a151 1
.It Cm reload
d163 1
a163 1
.It Cm restart
d168 1
a168 1
.It Cm check
d171 1
a171 2
.El
.Pp
d174 1
a174 1
.Bl -tag -width ".Va procname" -offset indent
d177 6
a186 9
This is usually set in
.Xr rc.conf 8 ,
and not in the
.Nm rc.d
script except when there is a sane default value specified.
.Ar ${name}_flags
can be used in
.Xr rc.conf 8
to override this.
a191 8
This defaults to root unless specified by the
.Ar daemon_user
variable in the
.Nm rc.d
script or the
.Ar ${name}_user
variable in
.Xr rc.conf 8 .
d206 2
a212 10
This defaults to
.Pa /bin/sh
unless specified by the
.Ar daemon_shell
variable in the
.Nm rc.d
script or the
.Ar ${name}_shell
variable in
.Xr rc.conf 8 .
d224 57
d283 3
a285 1
.Bl -tag -width ".Pa /etc/rc.d/rc.subr" -compact
d287 3
a289 4
The
.Nm
file resides in
.Pa /etc/rc.d .
@


1.3
log
@- new sentence, new line
- remove double word
- slight rewording tweaks
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.2 2011/01/16 13:08:50 jasper Exp $
d31 3
a33 4
.Nm rc.subr
.Nd functions used by
.Xr rc.d 8
scripts
d35 4
a38 7
.Bl -item -compact
.It
.Ic .\& Pa /etc/rc.d/rc.subr
.Pp
.It
.Ic rc_cmd Ar argument
.El
d44 1
a44 1
.Xr rc.d 8
d59 1
a59 1
.Xr rc.d 8
d63 1
a63 1
.Xr rc.d 8
d70 1
a70 1
.Xr rc.subr 8 .
d76 1
a76 1
.Ar rc.d 8
d91 2
a92 2
.Ar rc_pre()
function exists, it is going to be called before
d97 1
a97 1
and if it's not, no action is going to be taken.
d99 2
a100 2
.Ar rc_post()
function exists, it is going to be called right
d107 7
a113 4
variable and send a SIGHUP signal.
One has to make sure that sending SIGHUP to a daemon will
have the desired effect, which is reloading the configuration
files.
d122 1
d134 1
a134 1
.Xr rc.conf 5 ,
d136 1
a136 1
.Xr rc.d 8
d140 1
a140 1
.Xr rc.conf 5
d150 1
a150 1
.Xr rc.d 8
d154 1
a154 1
.Xr rc.conf 5 .
d161 1
a161 1
.Xr rc.subr 8
d166 1
a166 1
.Xr rc.d 8
d179 1
a179 1
.Xr rc.d 8
d183 1
a183 1
.Xr rc.conf 5 .
d205 1
a205 1
.Xr rc.d 8
d209 2
a210 2
.Xr rc.conf 5 ,
.Xr rc 8
d220 1
a220 1
.Xr rc.subr 8
d222 2
a223 3
.An Robert Nagy Aq robert@@openbsd.org
,
.An Antoine Jacoutot Aq ajacoutot@@openbsd.org
@


1.2
log
@- missing .Pa
@
text
@d1 1
a1 1
.\" 	$OpenBSD: rc.subr.8,v 1.1 2011/01/16 13:05:17 robert Exp $
d46 1
a46 2
script
contains commonly used shell script functions and variable
d109 1
a109 1
with the regexp specified in the
d160 1
a160 1
This is a read only variable that gets populated by
d162 2
a163 1
itself. It searches
d167 2
a168 2
script itself and uses that. If no such login class
exists then daemon will be used.
d185 1
a185 1
A pattern to be passed to to
@


1.1
log
@Start documenting rc.subr(8).
There is still space for fixes so we are not linking it to the build yet.
@
text
@d1 1
a1 1
.\" 	$OpenBSD$
d27 1
a27 1
.Dd $Mdocdate: Jan 15 2010 $
d174 3
a176 1
This defaults to /bin/sh unless specified by the
@

