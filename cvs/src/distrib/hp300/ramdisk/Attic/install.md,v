head	1.59;
access;
symbols
	OPENBSD_5_5:1.58.0.2
	OPENBSD_5_5_BASE:1.58
	OPENBSD_5_4:1.57.0.6
	OPENBSD_5_4_BASE:1.57
	OPENBSD_5_3:1.57.0.4
	OPENBSD_5_3_BASE:1.57
	OPENBSD_5_2:1.57.0.2
	OPENBSD_5_2_BASE:1.57
	OPENBSD_5_1_BASE:1.56
	OPENBSD_5_1:1.56.0.4
	OPENBSD_5_0:1.56.0.2
	OPENBSD_5_0_BASE:1.56
	OPENBSD_4_9:1.55.0.8
	OPENBSD_4_9_BASE:1.55
	OPENBSD_4_8:1.55.0.6
	OPENBSD_4_8_BASE:1.55
	OPENBSD_4_7:1.55.0.2
	OPENBSD_4_7_BASE:1.55
	OPENBSD_4_6:1.55.0.4
	OPENBSD_4_6_BASE:1.55
	OPENBSD_4_5:1.46.0.4
	OPENBSD_4_5_BASE:1.46
	OPENBSD_4_4:1.46.0.2
	OPENBSD_4_4_BASE:1.46
	OPENBSD_4_3:1.44.0.2
	OPENBSD_4_3_BASE:1.44
	OPENBSD_4_2:1.42.0.8
	OPENBSD_4_2_BASE:1.42
	OPENBSD_4_1:1.42.0.6
	OPENBSD_4_1_BASE:1.42
	OPENBSD_4_0:1.42.0.4
	OPENBSD_4_0_BASE:1.42
	OPENBSD_3_9:1.42.0.2
	OPENBSD_3_9_BASE:1.42
	OPENBSD_3_8:1.41.0.2
	OPENBSD_3_8_BASE:1.41
	OPENBSD_3_7:1.38.0.4
	OPENBSD_3_7_BASE:1.38
	OPENBSD_3_6:1.38.0.2
	OPENBSD_3_6_BASE:1.38
	OPENBSD_3_5:1.37.0.2
	OPENBSD_3_5_BASE:1.37
	OPENBSD_3_4:1.35.0.4
	OPENBSD_3_4_BASE:1.35
	OPENBSD_3_3:1.35.0.2
	OPENBSD_3_3_BASE:1.35
	OPENBSD_3_2:1.34.0.2
	OPENBSD_3_2_BASE:1.34
	OPENBSD_3_1:1.24.0.2
	OPENBSD_3_1_BASE:1.24
	OPENBSD_3_0:1.22.0.2
	OPENBSD_3_0_BASE:1.22
	OPENBSD_2_9:1.21.0.2
	OPENBSD_2_9_BASE:1.21
	OPENBSD_2_8:1.20.0.2
	OPENBSD_2_8_BASE:1.20
	OPENBSD_2_7:1.19.0.4
	OPENBSD_2_7_BASE:1.19
	OPENBSD_2_6:1.19.0.2
	OPENBSD_2_6_BASE:1.19
	OPENBSD_2_5:1.17.0.2
	OPENBSD_2_5_BASE:1.17
	OPENBSD_2_4:1.12.0.2
	OPENBSD_2_4_BASE:1.12
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5;
locks; strict;
comment	@# @;


1.59
date	2014.03.18.22.36.28;	author miod;	state dead;
branches;
next	1.58;

1.58
date	2013.11.16.18.37.27;	author rpe;	state Exp;
branches;
next	1.57;

1.57
date	2012.07.10.14.25.00;	author halex;	state Exp;
branches;
next	1.56;

1.56
date	2011.04.17.20.57.10;	author krw;	state Exp;
branches;
next	1.55;

1.55
date	2009.06.14.00.12.20;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	2009.06.04.00.44.46;	author krw;	state Exp;
branches;
next	1.53;

1.53
date	2009.06.02.16.23.45;	author krw;	state Exp;
branches;
next	1.52;

1.52
date	2009.05.31.17.49.53;	author deraadt;	state Exp;
branches;
next	1.51;

1.51
date	2009.05.11.17.13.07;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2009.05.09.21.37.26;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	2009.04.12.12.56.01;	author krw;	state Exp;
branches;
next	1.48;

1.48
date	2009.04.12.01.35.01;	author krw;	state Exp;
branches;
next	1.47;

1.47
date	2009.04.10.23.11.17;	author krw;	state Exp;
branches;
next	1.46;

1.46
date	2008.06.26.05.42.03;	author ray;	state Exp;
branches;
next	1.45;

1.45
date	2008.03.23.14.03.55;	author krw;	state Exp;
branches;
next	1.44;

1.44
date	2008.03.04.00.36.38;	author krw;	state Exp;
branches;
next	1.43;

1.43
date	2008.01.10.18.00.45;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2005.11.22.20.23.36;	author miod;	state Exp;
branches;
next	1.41;

1.41
date	2005.07.08.19.40.31;	author krw;	state Exp;
branches;
next	1.40;

1.40
date	2005.07.08.16.20.17;	author millert;	state Exp;
branches;
next	1.39;

1.39
date	2005.03.27.15.13.49;	author krw;	state Exp;
branches;
next	1.38;

1.38
date	2004.08.06.19.28.41;	author miod;	state Exp;
branches;
next	1.37;

1.37
date	2003.10.12.13.18.37;	author krw;	state Exp;
branches;
next	1.36;

1.36
date	2003.09.21.02.11.42;	author krw;	state Exp;
branches;
next	1.35;

1.35
date	2002.11.07.01.28.52;	author krw;	state Exp;
branches;
next	1.34;

1.34
date	2002.08.27.02.18.34;	author krw;	state Exp;
branches;
next	1.33;

1.33
date	2002.05.22.01.48.38;	author krw;	state Exp;
branches;
next	1.32;

1.32
date	2002.05.20.16.53.57;	author krw;	state Exp;
branches;
next	1.31;

1.31
date	2002.05.18.17.56.03;	author krw;	state Exp;
branches;
next	1.30;

1.30
date	2002.05.14.01.49.25;	author krw;	state Exp;
branches;
next	1.29;

1.29
date	2002.05.09.21.54.46;	author krw;	state Exp;
branches;
next	1.28;

1.28
date	2002.05.08.23.01.46;	author krw;	state Exp;
branches;
next	1.27;

1.27
date	2002.04.28.14.44.01;	author krw;	state Exp;
branches;
next	1.26;

1.26
date	2002.04.25.21.28.13;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2002.04.21.17.09.18;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2002.03.31.17.30.30;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2001.12.23.01.51.52;	author krw;	state Exp;
branches;
next	1.22;

1.22
date	2001.06.23.19.44.40;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2001.01.25.19.18.37;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2000.10.31.16.32.45;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	99.09.03.18.55.26;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	99.08.15.10.05.04;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	99.04.01.04.39.50;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	99.04.01.04.15.33;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	98.11.09.04.00.10;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	98.11.03.04.10.14;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	98.10.28.17.53.29;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	98.09.11.22.55.45;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	98.08.23.17.48.52;	author kstailey;	state Exp;
branches;
next	1.10;

1.10
date	98.03.29.19.58.14;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	98.03.27.18.20.35;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	98.03.27.08.35.27;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.10.31.05.41.28;	author downsj;	state Exp;
branches;
next	1.6;

1.6
date	97.09.30.17.52.41;	author deraadt;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	97.05.14.21.39.12;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.04.21.07.32.11;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.02.23.19.10.52;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.02.16.19.32.35;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	97.02.16.18.20.03;	author downsj;	state Exp;
branches;
next	;

1.6.2.1
date	97.10.31.05.49.33;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.59
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#	$OpenBSD: install.md,v 1.58 2013/11/16 18:37:27 rpe Exp $
#	$NetBSD: install.md,v 1.1.2.4 1996/08/26 15:45:14 gwr Exp $
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# machine dependent section of installation/upgrade script
#

MDDKDEVS="/^[hs]d[0-9][0-9]* /s/ .*//p"

md_installboot() {
	disklabel -B ${1}
}

md_prep_disklabel() {
	local _disk=$1 _f _op

	md_installboot $_disk

	_f=/tmp/fstab.$_disk
	if [[ $_disk == $ROOTDISK ]]; then
		while :; do
			echo "The auto-allocated layout for $_disk is:"
			disklabel -h -A $_disk | egrep "^#  |^  [a-p]:"
			ask "Use (A)uto layout, (E)dit auto layout, or create (C)ustom layout?" a
			case $resp in
			a*|A*)	_op=-w ;;
			e*|E*)	_op=-E ;;
			c*|C*)	break ;;
			*)	continue ;;
			esac
			disklabel $FSTABFLAG $_f $_op -A $_disk
			return
		done
	fi
	cat <<__EOT
You will now create a OpenBSD disklabel on the disk.  The disklabel defines
how OpenBSD splits up the disk into OpenBSD partitions in which filesystems
and swap space are created.  You must provide each filesystem's mountpoint
in this program.

__EOT

	disklabel $FSTABFLAG $_f -E $_disk
}

md_congrats() {
}

md_consoleinfo() {
}
@


1.58
log
@Remove AUTOROOT variable which is a leftover of r1.183 of install.sub

diff from Philipp e1c1bac6253dc54a1e89ddc046585792 at osteo dot net

ok krw@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.57 2012/07/10 14:25:00 halex Exp $
@


1.57
log
@since disklabel -W is no more, zap it from all the install.md's

ok krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.56 2011/04/17 20:57:10 krw Exp $
d53 1
a53 1
			a*|A*)	_op=-w ; AUTOROOT=y ;;
@


1.56
log
@First crack at enabling the installation of a DUID version of
/etc/fstab, after asking user. Current default is existing behaviour.

Feedback & suggestions deraadt@@, halex@@, jsing@@, todd@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.55 2009/06/14 00:12:20 deraadt Exp $
a45 1
	disklabel -W $_disk >/dev/null 2>&1
@


1.55
log
@We want to install a LIF label on the disk before we run disklabel -A
or disklabel -E.  Otherwise that disk will indicate the wrong bounds.
(nothing at all -> 0;  MBR -> probably 63; LIF -> 256).
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.54 2009/06/04 00:44:46 krw Exp $
d59 1
a59 1
			disklabel -f $_f $_op -A $_disk
d71 1
a71 1
	disklabel -f $_f -E $_disk
@


1.54
log
@Nuke now superfluous ARCH=ARCH lines in install.md and the sed processing of
those lines in list2sh.awk.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.53 2009/06/02 16:23:45 krw Exp $
d43 2
@


1.53
log
@Add '-h' flag, and '*' as a unit specifier for 'p' Editor command.
Both cause partition sizes to be displayed using a human readable
format with the units automatically chosen by looking at the smallest
partition in the disk label. Remove forceable humanization in 'A'
code and use '-h' in install scripts.

Prodded & ok deraadt@@, verbiage tweaks from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.52 2009/05/31 17:49:53 deraadt Exp $
a34 1
ARCH=ARCH
@


1.52
log
@Make bootblock installation as silent as possible by default.  While
there, remove a lot of cruft from the various md_installboot functions
ok halex
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.51 2009/05/11 17:13:07 deraadt Exp $
d50 1
a50 1
			disklabel -A $_disk | egrep "^#  |^  [a-p]:"
@


1.51
log
@Remind people that mountpoints must now be entered using the disklabel
command; the script does not ask afterwards.  Note I am not adjusting
the macppc or sgi install.md scripts.  I ask their maintainers to clean
them before I will maintain them further.  Please
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.50 2009/05/09 21:37:26 deraadt Exp $
a38 2
	# $1 is the root disk

@


1.50
log
@remove some chatty disklabel stuff
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.49 2009/04/12 12:56:01 krw Exp $
d64 8
@


1.49
log
@Tweak pattern used to select partition lines for display so the
'# /dev/r...' line is not selected.

Noticed by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.48 2009/04/12 01:35:01 krw Exp $
a40 1
	echo -n "Installing boot block..."
a41 1
	echo "done."
@


1.48
log
@No longer need '-f' or '-p' when displaying layout. A few patterns
missed the '# size offset ...' line at the top of the partition
list.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.47 2009/04/10 23:11:17 krw Exp $
d54 1
a54 1
			disklabel -A $_disk | egrep "^#|^  [a-p]:"
@


1.47
log
@Where appropriate display the auto-allocation layout of the root
disk and ask if the installee wants to use it, edit it, or create
their own custom disklabel. Most one-disk installs will not need
to see fdisk or disklabel.

i386 and macppc by me, adapted for others by deraadt@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.46 2008/06/26 05:42:03 ray Exp $
d54 1
a54 1
			disklabel -f $_f -p g -A $_disk | egrep "^#|^  [a-p]:"
@


1.46
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.45 2008/03/23 14:03:55 krw Exp $
d47 1
a47 1
	local _disk=$1
d50 17
a66 1
	disklabel -f /tmp/fstab.$_disk -E $_disk
@


1.45
log
@No point in warning users during install that the disklabel has a
weird number of partitions, doesn't checksum, doesn't exist or was
found at a particular sector. Brings all archs together in omerta by
eliminating use of '-r' and examination of disklabel messages.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.44 2008/03/04 00:36:38 krw Exp $
a17 7
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
@


1.44
log
@Redo serial console configuration logic. Smaller, easier to
understand.

Add serial console handling for alpha, macppc, zaurus.  No functional
change for i386/amd64.

All archs should now have automatic serial console configuration.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.43 2008/01/10 18:00:45 miod Exp $
a52 14
# $1 is the disk to check
md_checkfordisklabel() {
	local rval=0

	disklabel -r $1 >/dev/null 2>/tmp/checkfordisklabel

	if grep "disk label corrupted" /tmp/checkfordisklabel; then
		rval=2
	fi >/dev/null 2>&1

	rm -f /tmp/checkfordisklabel
	return $rval
}

a54 6

	md_checkfordisklabel $_disk
	case $? in
	2)	echo "WARNING: Label on disk $_disk is corrupted. You will be repairing it.\n"
		;;
	esac
@


1.43
log
@No need to disklabel -W before disklabel -B, -W will do it for us.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.42 2005/11/22 20:23:36 miod Exp $
d81 3
@


1.42
log
@Recognize hd as disk drives.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.41 2005/07/08 19:40:31 krw Exp $
a48 1
	disklabel -W ${1}
@


1.41
log
@Don't need to specify MDTERM=vt220. vt220 is the default value.

ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.40 2005/07/08 16:20:17 millert Exp $
d43 1
@


1.40
log
@hp300 console is now vt220 so make that the default term type.  OK miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.39 2005/03/27 15:13:49 krw Exp $
a41 1
MDTERM=vt220
@


1.39
log
@Use new skeleton kbd(8) '-l' to generalize kbd(8) use.  Eliminate
fixed list of available maps and machine dependant md_set_term()
functions.

Any ramdisk with /sbin/kbd present (amd64, cats, i386 at the moment)
will now present list of available keyboard encodings.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.38 2004/08/06 19:28:41 miod Exp $
d42 1
a42 1
MDTERM=hp300h
@


1.38
log
@No need to look for disk drives and cd-rom drives in a specific way now
that we use MI scsi; found out the hard way by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.37 2003/10/12 13:18:37 krw Exp $
a43 3

md_set_term() {
}
@


1.37
log
@Cleanup and shrinkage:

1) Eliminate 'WARNING: Disk xxx has no label.' message. When installing OpenBSD
this is a normal condition not worth commenting on. From some discussion on
hackers/icb.

2) Use consistant verbiage and case statement when checking the disklabel.

3) Consistantly suppress output of 'disklabel -W', reducing duplicate messages
like '# using MBR partition ...' which are issued again when the 'disklabel -f
...' command is executed.

4) Usual code rectifications - eliminate extra {}'s, multiple echos
elimination, etc.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.36 2003/09/21 02:11:42 krw Exp $
a42 2
MDDISKDEVS='/^hd[0-9][0-9]*:./s/:.*//p;/^sd[0-9][0-9]*:.*cylinders/s/:.*//p'
MDCDDEVS='/^sd[0-9][0-9]*:.*CD-ROM/s/:.*//p'
@


1.36
log
@Fix extraneous display of grep output when searching disklabel output for
error information. Previously things like:

disklabel: no disk label
WARNING: Disk wd0 has no disk label. You will be creating a new one.

would be printed. Now the 'disklabel: no disk label' message is correctly
sent to /dev/null.

Take the opportunity to clean up a bit of code and formatting, making all
the md_checkfordisklabel() functions as identical as possible.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.35 2002/11/07 01:28:52 krw Exp $
d65 1
a65 3
	if grep "no disk label" /tmp/checkfordisklabel; then
		rval=1
	elif grep "disk label corrupted" /tmp/checkfordisklabel; then
d73 2
a74 3
md_prep_disklabel()
{
	local _disk
a75 1
	_disk=$1
d78 1
a78 6
	0)	;;
	1)	echo "WARNING: Disk $_disk has no label. You will be creating a new one."
		echo
		;;
	2)	echo "WARNING: Label on disk $_disk is corrupted. You will be repairing."
		echo
d82 2
a83 2
	disklabel -W ${_disk}
	disklabel -f /tmp/fstab.${_disk} -E ${_disk}
@


1.35
log
@Treat 'bsd' like just another filename in THESETS, no more 'kernel'
logic.  As result, MDSETS gone from everything but mac68k.

MDSETS now treated as a list of complete file names to add to THESETS,
allowing more MD flexibility, i.e. may or may not be .tgz files.

All traces of tar.gz removed. Not used for sets since 2.7 or so. As a
result of code simplification from not having to consider tar.gz, the
functions get_sets(), make_lastset(), and set_not_done() are
eliminated, along with the global SETS.

Build THESETS and DEFAULTSETS to contain full file names.

Always install sets in the order they appear in THESETS, keeping
siteXX last but without needing special logic. More predictable for
user if a lot of set additions and removals done before being
satisfied, as the sets are now installed in the same order they appear
in the selection list.

Remove ability to look for non-set .tgz/.tar.gz files. The job of the
install scripts is to install the standard sets in a simple and
rational way. Not to install general tar balls. The user can do that
post-install or simply '!' out to do it during install. On their head
be it.

If no sets are found in a specified source, list the filenames in
THESETS to show what is being looked for.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.34 2002/08/27 02:18:34 krw Exp $
d59 1
d61 3
a63 2
	# $1 is the disk to check
	local rval
a64 1
	disklabel -r $1 > /dev/null 2> /tmp/checkfordisklabel
d69 1
a69 3
	else
		rval=0
	fi
@


1.34
log
@Move general partitioning advice from machine dependant per disk
routine to install.sh so it is displayed only once.

Strongly advise /, /tmp, /var, /usr and /home have their own
disk partitions as requested by deraadt@@.

Rather than rely on users not re-selecting an already initialized
disk, just allow them to choose from un-initialized disks.

Move get_root invocation into install.sub as both install.sh and
upgrade.sh did it first thing.

Remove the 'workaround' to a 'vnode aliasing bug' that came in
with the initial import of upgrade.sh from NetBSD. ok millert@@.

Rework verbiage in a few places. Clean up logic around looping
through disk units by handling root disk better.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.33 2002/05/22 01:48:38 krw Exp $
a41 2
# Machine-dependent install sets
MDSETS=kernel
@


1.33
log
@Fix quoting botch in earlier commit. Make sure MDDISKDEVS and
MDCDDEVS actually work with non-empty values as well as the
supplied default this time.

Problem first detected by jsyn@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.32 2002/05/20 16:53:57 krw Exp $
a92 8

	# display example
	cat << __EOT

If you are unsure of how to use multiple partitions properly
(ie. separating /, /usr, /tmp, /var, /usr/local, and other things)
just split the space into a root and swap partition for now.
__EOT
@


1.32
log
@Eliminate md_questions(). It was used only to control the setting of
machdep.allowaperture. Remove the setting of machdep.allowaperture
from md_installboot().

Add MDXAPERTURE variable to relevant architectures.

Add a new function set_machdep_allowaperture(). It is called *after*
install_sets() (which changes when the X Window question is asked), and
if MDXAPERTURE is present modifies sysctl.conf.

Shrinks overall size for i386, macppc, sparc64 (which used md_questions
for machdep.allowaperture) but increases size a bit for other
architectures since set_machep_allowaperture is in install.sub.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.31 2002/05/18 17:56:03 krw Exp $
d45 2
a46 2
MDDISKDEVS="'/^hd[0-9][0-9]*:./s/:.*//p;/^sd[0-9][0-9]*:.*cylinders/s/:.*//p'"
MDCDDEVS="'/^sd[0-9][0-9]*:.*CD-ROM/s/:.*//p'"
@


1.31
log
@Eliminate md_get_diskdevs() and md_get_cddevs() by

1) Saving one boot's worth of dmesg in /tmp/dmesg.boot
2) Using sed to scan for devices and pull out names in
   new get_diskdevs() and get_cddevs() in install.sub
3) Saving any md disk/cd sed patterns in MDDISKDEVS and
   MDCDDEVS variables.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.30 2002/05/14 01:49:25 krw Exp $
a49 4
}

md_questions() {
	:
@


1.30
log
@Eliminate md_native_fstype() and md_native_fsopts(). Both functions
simply echo'd a single word if present at all.

Replace with variables MDFSTYPE and MDFSOPTS if required. Rework logic
in install.sub's mount_a_disk() to always include 'ro' as an option to
the mount command. This allows even those arch's with MDFSTYPE to
usually get by without MDFSOPTS.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.29 2002/05/09 21:54:46 krw Exp $
d45 2
a49 11
}

md_get_diskdevs() {
	# return available disk devices
	dmesg | egrep -a "^hd[0-9]*:." | cutword -t: 1 | sort -u
	dmesg | egrep -a "^sd[0-9]*:.*cylinders" | cutword -t: 1 | sort -u
}

md_get_cddevs() {
	# return available CD-ROM devices
	dmesg | egrep -a "sd[0-9]*:.*CD-ROM" | cutword -t: 1 | sort -u
@


1.29
log
@Elminate md_welcome_banner() and md_not_going_to_install() as the
output of both was essentially identical on all architectures. Replace
with welcome_banner() and not_going_to_install() in install.sub.

Abstract common verbiage from md_congrats() into congrats() which
calls md_congrats() for any architecture specific additional verbiage.

Reword things so ${MODE} can be plausibly used in more places.

Remove extraneous #!/bin/sh in hp300 install.md.

ok deraadt@@ espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.28 2002/05/08 23:01:46 krw Exp $
a119 8
}

md_native_fstype() {
	# Nothing to do.
}

md_native_fsopts() {
	# Nothing to do.
@


1.28
log
@Abstract out common md_set_term() code into set_term() in install.sub,
calling md_set_term() from set_term() to do machine dependent stuff.
Currently only i386 does anything - keyboard mappings.

Add MDTERM variable to allow install.md to set proper default terminal
type. Default to vt220.

Eliminate md_get_partition_range() as useless since every architecture
returned '[a-p]'.

Make default term for all mvme* architectures vt100 as requested by miod@@.

ok deraadt@@ millert@@ miod@@
@
text
@d1 1
a1 3
#!/bin/sh
#
#	$OpenBSD: install.md,v 1.27 2002/04/28 14:44:01 krw Exp $
a118 52
# Note, while they might not seem machine-dependent, the
# welcome banner and the punt message may contain information
# and/or instructions specific to the type of machine.

md_welcome_banner() {
(
	if [ "$MODE" = "install" ]; then
		echo "Welcome to the OpenBSD/hp300 ${VERSION_MAJOR}.${VERSION_MINOR} installation program."
		cat << __EOT

This program is designed to help you put OpenBSD on your system in a
simple and rational way.
__EOT

	else
		echo "Welcome to the OpenBSD/hp300 ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program."
		cat << __EOT

This program is designed to help you upgrade your OpenBSD system in a
simple and rational way.

As a reminder, installing the `etc' binary set is NOT recommended.
Once the rest of your system has been upgraded, you should manually
merge any changes to files in the `etc' set into those files which
already exist on your system.
__EOT
	fi

cat << __EOT

As with anything which modifies your disk's contents, this program can
cause SIGNIFICANT data loss, and you are advised to make sure your
data is backed up before beginning the installation process.

Default answers are displayed in brackets after the questions.  You
can hit Control-C at any time to quit, but if you do so at a prompt,
you may have to hit return.  Also, quitting in the middle of
installation may leave your system in an inconsistent state.

__EOT
) | less -E
}

md_not_going_to_install() {
		cat << __EOT

OK, then.  Enter 'halt' at the prompt to halt the machine.  Once the
machine has halted, power-cycle the system to load new boot code.

__EOT
}

a119 8
	cat << __EOT

CONGRATULATIONS!  You have successfully installed OpenBSD!  To boot the
installed system, enter halt at the command prompt.  Once the system has
halted, power-cycle the machine in order to load new boot code.  Make sure
you boot from the root disk.

__EOT
@


1.27
log
@Change getresp() into ask().

ask() takes 2 parameters. The first one is the question to
ask the user, and the 2nd is the default answer.

Shrinks and makes the code clearer.

From espie@@ with some tweaking, ok deraadt@@.
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.26 2002/04/25 21:28:13 miod Exp $
d46 1
a49 3
	ask "Specify terminal type:" hp300h
	TERM="$resp"
	export TERM
a60 5
}

md_get_partition_range() {
	# return range of valid partition letters
	echo [a-p]
@


1.26
log
@- fix a few texts
- remove dead hp300 stuff
ok millert@@, espie@@
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.25 2002/04/21 17:09:18 deraadt Exp $
d49 1
a49 2
	echo -n "Specify terminal type [hp300h]: "
	getresp "hp300h"
@


1.25
log
@shorten
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.24 2002/03/31 17:30:30 deraadt Exp $
a52 14
	# set screensize (i.e., for an xterm)
	rows=`stty -a | grep rows | cutword 4`
	columns=`stty -a | grep columns | cutword 6`
	if [ "$rows" -eq 0 -o "$columns" -eq 0 ]; then
		echo -n "Specify terminal rows [25]: "
		getresp "25"
		rows="$resp"

		echo -n "Specify terminal columns [80]: "
		getresp "80"
		columns="$resp"

		stty rows "$rows" columns "$columns"
	fi
a100 202
hp300_init_label_scsi_disk() {
	# $1 is the disk to label

	# Name the disks we install in the temporary fstab.
	if [ "X${_disk_instance}" = "X" ]; then
		_disk_instance="0"
	else
		_disk_instance=`expr $_disk_instance + 1`
	fi
	_cur_disk_name="install-disk-${_disk_instance}"

	# Get geometry information from the user.
	less << \__scsi_label_1

You will need to provide some information about your disk's geometry.
Geometry info for SCSI disks was printed at boot time.  If that information
is not available, use the information provided in your disk's manual.
Please note that the geometry printed at boot time is preferred.

IMPORTANT NOTE: due to a limitation in the disklabel(8) program, the
number of cylinders on the disk will be increased by 1 so that the initial
label can be placed on disk for editing.  When the disklabel editor appears,
make absolutely certain you subtract 1 from the total number of cylinders,
and adjust the size of partition 'c' such that:

	size = (sectors per track) * (tracks per cyl) * (total cylinders)

Note that the disklabel editor will be run twice; once to set the size of
partition 'c' and correct the geometry, and again so that you may correctly
edit the partition map.  This is to work around the afore mentioned
limitation in disklabel(8).  Apologies offered in advance.

__scsi_label_1

	# Give the opportunity to review the boot messages.
	echo -n	"Review boot messages now? [y] "
	getresp "y"
	case "$resp" in
	y*|Y*)	dmesg | less -rsS
		;;
	esac

	echo	""
	echo -n	"Number of bytes per disk sector? [512] "
	getresp "512"
	_secsize="$resp"

	resp=""		# force one iteration
	while [ "X${resp}" = "X" ]; do
		echo -n	"Number of cylinders? "
		getresp ""
	done
	_cylinders="$resp"
	_fudge_cyl=`expr $_cylinders + 1`

	resp=""		# force one iteration
	while [ "X${resp}" = "X" ]; do
		echo -n	"Number of tracks (heads)? "
		getresp ""
	done
	_tracks_per_cyl="$resp"

	resp=""		# force one iteration
	while [ "X${resp}" = "X" ]; do
		echo -n	"Number of disk sectors (blocks)? "
		getresp ""
	done
	_nsectors="$resp"

	# Calculate some values we need.
	_sec_per_cyl=`expr $_nsectors / $_cylinders`
	_sec_per_track=`expr $_sec_per_cyl / $_tracks_per_cyl`
	_new_c_size=`expr $_sec_per_track \* $_tracks_per_cyl \* $_cylinders`

	# Emit a disktab entry, suitable for getting started.
	# What we have is a `c' partition with the total number of
	# blocks, and an `a' partition with 1 sector; just large enough
	# to open.  Don't ask.
	echo	"" >> /etc/disktab
	echo	"# Created by install" >> /etc/disktab
	echo	"${_cur_disk_name}:\\" >> /etc/disktab
	echo -n	"	:ty=winchester:ns#${_sec_per_track}:" >> /etc/disktab
	echo	"nt#${_tracks_per_cyl}:nc#${_fudge_cyl}:\\" >> /etc/disktab
	echo	"	:pa#1:\\" >> /etc/disktab
	echo	"	:pc#${_nsectors}:" >> /etc/disktab

	# Ok, here's what we need to do.  First of all, we install
	# this initial label by opening the `c' partition of the disk
	# and using the `-r' flag for disklabel(8).  However, because
	# of limitations in disklabel(8), we've had to fudge the number
	# of cylinders up 1 so that disklabel(8) doesn't complain about
	# `c' running past the end of the disk, which can be quite
	# common even with OEM HP drives!  So, we've given ourselves
	# an `a' partition, which is the minimum needed to open the disk
	# so that we can perform the DIOCWDLABEL ioctl.  So, once the
	# initial label is installed, we open the `a' partition so that
	# we can fix up the number of cylinders and make the size of
	# `c' come out to (ncyl * ntracks_per_cyl * nsec_per_track).
	# After that's done, we re-open `c' and let the user actually
	# edit the partition table.  It's horrible, I know.  Bleh.

	disklabel -W ${1}
	if ! disklabel -r -w ${1} ${_cur_disk_name}; then
		echo ""
		echo "ERROR: can't bootstrap disklabel!"
		rval="1"
		return
	fi

	echo ""
	echo "The disklabel editor will now start.  During this phase, you"
	echo "must reset the 'cylinders' value to ${_cylinders}, and adjust"
	echo "the size of partition 'c' to ${_new_c_size}.  Do not modify"
	echo "the partition map at this time.  You will have the opportunity"
	echo "to do so in a moment."
	echo ""
	echo -n	"Press <return> to continue. "
	getresp ""

	disklabel -W ${1}
	if ! disklabel -r -e /dev/r${1}a; then
		echo ""
		echo "ERROR: can't fixup geometry!"
		rval="1"
		return
	fi

	cat << \__explain_motives_2

Now that you have corrected the geometry of your disk, you may edit the
partition map.  Don't forget to fill in the fsize (frag size), bsize
(filesystem block size), and cpg (cylinders per group) values.  If you
are unsure what these should be, use:

	fsize: 1024
	bsize: 4096
	cpg: 16

__explain_motives_2
	echo -n	"Press <return> to continue. "
	getresp ""

	rval="0"
	return
}

hp300_init_label_hpib_disk() {
	# $1 is the disk to label

	# We look though the boot messages attempting to find
	# the model number for the provided disk.
	_hpib_disktype=""
	if dmesg | egrep "${1}: " > /dev/null 2>&1; then
		_hpib_disktype=HP`dmesg | egrep "${1}: " | sort -u | \
		    cutword 2 `
	fi
	if [ "X${_hpib_disktype}" = "X" ]; then
		echo ""
		echo "ERROR: $1 doesn't appear to exist?!"
		rval="1"
		return
	fi

	# Peer through /etc/disktab to see if the disk has a "default"
	# layout.  If it doesn't, we have to treat it like a SCSI disk;
	# i.e. prompt for geometry, and create a default to place
	# on the disk.
	if ! egrep "${_hpib_disktype}[:|]" /etc/disktab > /dev/null \
	    2>&1; then
		echo ""
		echo "WARNING: can't find defaults for $1 ($_hpib_disktype)"
		echo ""
		hp300_init_label_scsi_disk $1
		return
	fi

	# We've found the defaults.  Now use them to place an initial
	# disklabel on the disk.
	# XXX What kind of ugliness to we have to deal with to get around
	# XXX stupidity on the part of disklabel semantics?
	disklabel -W ${1}
	if ! disklabel -r -w ${1} $_hpib_disktype; then
		# Error message displayed by disklabel(8)
		echo ""
		echo "ERROR: can't install default label!"
		echo ""
		echo -n	"Try a different method? [y] "
		getresp "y"
		case "$resp" in
		y*|Y*)	hp300_init_label_scsi_disk $1
			return
			;;
		*)	rval="1"
			return
			;;
		esac
	fi

	rval="0"
	return
}

d118 1
a118 1
	cat << \__md_prep_disklabel_1
d123 1
a123 1
__md_prep_disklabel_1
d137 1
a137 1
		cat << \__welcome_banner_1
d141 1
a141 1
__welcome_banner_1
d145 1
a145 1
		cat << \__welcome_banner_2
d154 1
a154 1
__welcome_banner_2
d157 1
a157 1
cat << \__welcome_banner_3
d168 1
a168 1
__welcome_banner_3
d173 1
a173 1
		cat << \__not_going_to_install_1
d178 1
a178 1
__not_going_to_install_1
d182 1
a182 1
	cat << \__congratulations_1
d189 1
a189 1
__congratulations_1
@


1.24
log
@bit of shrinkage, krw ok
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.23 2001/12/23 01:51:52 krw Exp $
d82 1
a82 1
	echo "[a-p]"
@


1.23
log
@Remove extra blank line displayed before the paragraph 'As with
anything ...' during install and/or upgrade on some archs.

On sparc, sparc64, sun3 and vax fix a typo ('echo Welcome' ->
'Welcome') in here-document displayed in md_welcome_banner().
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.22 2001/06/23 19:44:40 deraadt Exp $
a39 1

d45 1
a45 1
MDSETS="kernel"
d153 2
a154 6
		y*|Y*)
			dmesg | less -rsS
			;;

		*)
			;;
d304 6
a309 9
			y*|Y*)
				hp300_init_label_scsi_disk $1
				return
				;;

			*)
				rval="1"
				return
				;;
d324 2
a325 4
	0)
		;;
	1)
		echo "WARNING: Disk $_disk has no label. You will be creating a new one."
d328 1
a328 2
	2)
		echo "WARNING: Label on disk $_disk is corrupted. You will be repairing."
@


1.22
log
@argh.  stop using kernfs, using dmesg using sysctl.  encode ARCH into
install.md at build time.  remove some crud.  and the icing on the cake:
skip testing all this until next week
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.21 2001/01/25 19:18:37 deraadt Exp $
a380 1

@


1.21
log
@egrep -a to permit working with binary data in dmesg
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.20 2000/10/31 16:32:45 millert Exp $
d47 1
a47 3

TMPWRITEABLE=/tmp/writeable
KERNFSMOUNTED=/tmp/kernfsmounted
a69 42
md_makerootwritable() {

	if [ -e ${TMPWRITEABLE} ]
	then
		md_mountkernfs
		return
	fi
	if ! mount -t ffs  -u /dev/rd0a / ; then
		cat << \__rd0_failed_1

FATAL ERROR: Can't mount the ram filesystem.

__rd0_failed_1
		exit
	fi

	# Bleh.  Give mount_mfs a chance to DTRT.
	sleep 2
	> ${TMPWRITEABLE}

	md_mountkernfs
}

md_mountkernfs() {
	if [ -e ${KERNFSMOUNTED} ]
	then
		return
	fi
	if ! mount -t kernfs /kern /kern
	then
		cat << \__kernfs_failed_1
FATAL ERROR: Can't mount kernfs filesystem
__kernfs_failed_1
		exit
	fi
	> ${KERNFSMOUNTED} 
}

md_machine_arch() {
	cat /kern/machine
}

d72 2
a73 2
	egrep -a "^hd[0-9]*:." < /kern/msgbuf | cutword -t: 1 | sort -u
	egrep -a "^sd[0-9]*:.*cylinders" < /kern/msgbuf | cutword -t: 1 | sort -u
d78 1
a78 1
	egrep -a "sd[0-9]*:.*CD-ROM" < /kern/msgbuf | cutword -t: 1 | sort -u
d155 1
a155 1
			less -rsS /kern/msgbuf
d272 2
a273 2
	if egrep "${1}: " < /kern/msgbuf > /dev/null 2>&1; then
		_hpib_disktype=HP`egrep "${1}: " < /kern/msgbuf | sort -u | \
a425 8
}

hostname() {
	case $# in
		0)      cat /kern/hostname ;;
		1)      echo "$1" > /kern/hostname ;;
		*)      echo usage: hostname [name-of-host]
	esac
@


1.20
log
@Make space by removing hostname (just use /kern), slip, and ppp.
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.19 1999/09/03 18:55:26 deraadt Exp $
d116 2
a117 2
	egrep "^hd[0-9]*:." < /kern/msgbuf | cutword -t: 1 | sort -u
	egrep "^sd[0-9]*:.*cylinders" < /kern/msgbuf | cutword -t: 1 | sort -u
d122 1
a122 1
	egrep "sd[0-9]*:.*CD-ROM" < /kern/msgbuf | cutword -t: 1 | sort -u
@


1.19
log
@md_questions() interface allows asking questions before sets
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.18 1999/08/15 10:05:04 millert Exp $
d470 8
@


1.18
log
@Kill md_copy_kernel()
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.17 1999/04/01 04:39:50 millert Exp $
d128 4
@


1.17
log
@Remove awk and cut due to space limitations, use cutword function instead
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.16 1999/04/01 04:15:33 millert Exp $
a393 4
}

md_copy_kernel() {
	check_kernel
@


1.16
log
@Write a /tmp/fstab.DISK file with mountpoint info if the user enters it.  Other ports should do the same.
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.15 1998/11/09 04:00:10 millert Exp $
d57 2
a58 2
	rows=`stty -a | grep rows | awk '{print $4}'`
	columns=`stty -a | grep columns | awk '{print $6}'`
d116 2
a117 2
	egrep "^hd[0-9]*:." < /kern/msgbuf | cut -d":" -f1 | sort -u
	egrep "^sd[0-9]*:.*cylinders" < /kern/msgbuf | cut -d":" -f1 | sort -u
d122 1
a122 1
	egrep "sd[0-9]*:.*CD-ROM" < /kern/msgbuf | cut -d":" -f1 | sort -u
d314 1
a314 1
		    awk '{print $2}'`
@


1.15
log
@md_labeldisk is not used any more
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.14 1998/11/03 04:10:14 aaron Exp $
d393 1
a393 1
	disklabel -E ${_disk}
@


1.14
log
@seperating -> separating
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.13 1998/10/28 17:53:29 millert Exp $
a362 54
}

md_labeldisk() {
	# $1 is the disk to label

	# Check to see if there is a disklabel present on the device.
	# If so, we can just edit it.  If not, we must first install
	# a default label.
	md_checkfordisklabel $1
	case $? in
		0)
			# Go ahead and just edit the disklabel.
			disklabel -W $1
			disklabel -E $1
			;;

		*)
		echo -n "No disklabel present, installing a default for type: "
			case "$1" in
				hd*)
					echo "HP-IB"
					hp300_init_label_hpib_disk $1
					;;

				sd*)
					echo "SCSI"
					hp300_init_label_scsi_disk $1
					;;

				*)
					# Shouldn't happen, but...
					echo "unknown?!  Giving up."
					return;
					;;
			esac

			# Check to see if installing the default was
			# successful.  If so, go ahead and pop into the
			# disklabel editor.
			if [ "X${rval}" != X"0" ]; then
				echo "Sorry, can't label this disk."
				echo ""
				return;
			fi

			# We have some defaults installed.  Pop into
			# the disklabel editor.
			disklabel -W $1
			if ! disklabel -E $1; then
				echo ""
				echo "ERROR: couldn't set partition map for $1"
				echo ""
			fi
	esac
@


1.13
log
@call check_kernel instead of having the same code in all the .md files
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.12 1998/09/11 22:55:45 millert Exp $
d442 1
a442 1
(ie. seperating /, /usr, /tmp, /var, /usr/local, and other things)
@


1.12
log
@kill md_get_ifdevs, miniroot/install.sub uses mi version now
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.11 1998/08/23 17:48:52 kstailey Exp $
d451 1
a451 17
	if [ ! -s /mnt/bsd ]; then
		echo    ""
		echo    "Warning, no kernel installed!"
		echo    "You did not unpack a file set containing a kernel."
		echo    "This is needed to boot.  Please note that the install"
		echo    "install kernel is not suitable for general use."
		echo -n "Escape to shell add /mnt/bsd by hand? [y] "
		getresp "y"
		case "$resp" in
			y*|Y*)
				echo "Type 'exit' to return to install."
				sh
				;;
			*)
				;;
		esac
	fi
@


1.11
log
@s/alpha/hp300/
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.10 1998/03/29 19:58:14 millert Exp $
a122 5
}

md_get_ifdevs() {
	# return available network interfaces
	egrep "^le[0-9]*:" < /kern/msgbuf | cut -d":" -f1 | sort -u
@


1.10
log
@Support $MODE in welcome message.
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.9 1998/03/27 18:20:35 millert Exp $
d490 1
a490 1
		echo "Welcome to the OpenBSD/alpha ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program."
@


1.9
log
@Make more like other install.md's
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.8 1998/03/27 08:35:27 millert Exp $
d481 24
a504 3
	echo	""
	echo	"Welcome to the OpenBSD/hp300 ${VERSION_MAJOR}.${VERSION_MINOR} installation program."
	cat << \__welcome_banner_1
d506 3
a508 8
This program is designed to help you install OpenBSD on your system in a
simple and rational way.  You'll be asked several questions, and it would
probably be useful to have your disk's hardware manual, the installation
notes, and a calculator handy.

As with anything which modifies your hard disk's contents, this program
can cause SIGNIFICANT data loss, and you are advised to make sure your
hard drive is backed up before beginning the installation process.
d510 1
a510 1
Default answers are displyed in brackets after the questions.  You
d515 1
a515 1
__welcome_banner_1
@


1.8
log
@now that we have fictious disklabels, this becomes more like the
other ports.
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.7 1997/10/31 05:41:28 downsj Exp $
d88 1
d146 1
d150 1
a150 1
		rval="1"
d152 1
a152 1
		rval="2"
d154 1
a154 1
		rval="0"
d158 1
d377 1
a377 1
	case "$rval" in
d430 1
a430 1
	case "$rval" in
a452 7

	# We need to edit the disklabel, again, due to problems with using
	# disklabel -E (currently) on this arch.  XXX
	disklabel ${_disk} | sed -e 's/interleave: 0/interleave: 1/' \
	    -e 's/rpm: 0/rpm: 3600/' > /tmp/disklabelfixup
	disklabel -R ${_disk} /tmp/disklabelfixup
	rm /tmp/disklabelfixup
d456 17
d475 3
a477 3
	# Note, while they might not seem machine-dependent, the
	# welcome banner and the punt message may contain information
	# and/or instructions specific to the type of machine.
@


1.7
log
@Final pass through the ramdisk installer.  Seems to work correctly.
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.6 1997/09/30 17:52:41 deraadt Exp $
d46 1
a46 1
MDSETS=""
a428 1
		echo -n "Do you wish to edit the disklabel on $_disk? [y] "
d431 2
a432 2
		echo "WARNING: Disk $_disk has no label"
		echo -n "Do you want to create one with the disklabel editor? [y] "
d435 2
a436 2
		echo "WARNING: Label on disk $_disk is corrupted"
		echo -n "Do you want to try and repair the damage using the disklabel editor? [y] "
a439 6
	getresp "y"
	case "$resp" in
	y*|Y*) ;;
	*)	return ;;
	esac

d443 4
a446 26
Here is an example of what the partition information will look like once
you have entered the disklabel editor. Disk partition sizes and offsets
are in sector (most likely 512 bytes) units. Make sure these size/offset
pairs are on cylinder boundaries (the number of sector per cylinder is
given in the `sectors/cylinder' entry, which is not shown here).

For the boot disk, partition `a' must be offset one cylinder (the number
of sectors per cylinder should be given as the offset) and partition
`c' must have an fstype of `unused'.  Non-boot disks may start filesystems
at offset 0.

If there is no existing label on the disk, you MUST EDIT THE DISK GEOMETRY.
Please have information on your disk at hand in order to do so.  Failure
to correct the disk geometry will result in your system being unable to
boot from the disk you are installing on to.  Be sure `cylinders',
`total sectors' and `rpm' are set to something reasonable; this may be
accomplished with the `e' command from within the disklabel editor.

[Example]
16 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  a:    50176     1574    4.2BSD     1024  8192    16   # (Cyl.    1 - 111)
  b:    64512    50176      swap                        # (Cyl.  112 - 255)
  c:   640192        0      boot                        # (Cyl.    0 - 1428)
  d:   525504   114688    4.2BSD     1024  8192    16   # (Cyl.  256 - 1428)
[End of example]
a447 3
__md_prep_disklabel_1
	echo -n "Press [Enter] to continue "
	getresp ""
d477 7
a483 17
In particular, you will need to know some reasonably detailed
information about your disk's geometry.  This program can determine
some limited information about certain specific types of HP-IB disks.
If you have SCSI disks, however, prior knowledge of disk geometry
is absolutely essential.  The kernel will attempt to display geometry
information for SCSI disks during boot, if possible.  If you did not
make it note of it before, you may wish to reboot and jot down your
disk's geometry before proceeding.

As with anything which modifies your hard disk's contents, this
program can cause SIGNIFICANT data loss, and you are advised
to make sure your hard drive is backed up before beginning the
installation process.

Default answers are displyed in brackets after the questions.
You can hit Control-C at any time to quit, but if you do so at a
prompt, you may have to hit return.  Also, quitting in the middle of
@


1.6
log
@use new fdisk & disklabel
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.5 1997/05/14 21:39:12 millert Exp $
d264 1
a264 1
	if ! disklabel -w -r ${1} ${_cur_disk_name}; then
d282 1
a282 1
	if ! disklabel -r -E /dev/r${1}a; then
d378 1
a378 1
			disklabel -r -E $1
d413 1
a413 1
			if ! disklabel -r -E $1; then
d461 7
d481 8
a488 1
	disklabel -r -E ${_disk}
d501 1
a501 1
	echo	"Welcome to the OpenBSD/hp300 ${VERSION} installation program."
d529 1
a529 1
) | less
@


1.6.2.1
log
@Pull from trunk, rev 1.7
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.7 1997/10/31 05:41:28 downsj Exp $
d264 1
a264 1
	if ! disklabel -r -w ${1} ${_cur_disk_name}; then
d282 1
a282 1
	if ! disklabel -r -e /dev/r${1}a; then
d378 1
a378 1
			disklabel -E $1
d413 1
a413 1
			if ! disklabel -E $1; then
a460 7
If there is no existing label on the disk, you MUST EDIT THE DISK GEOMETRY.
Please have information on your disk at hand in order to do so.  Failure
to correct the disk geometry will result in your system being unable to
boot from the disk you are installing on to.  Be sure `cylinders',
`total sectors' and `rpm' are set to something reasonable; this may be
accomplished with the `e' command from within the disklabel editor.

d474 1
a474 8
	disklabel -E ${_disk}

	# We need to edit the disklabel, again, due to problems with using
	# disklabel -E (currently) on this arch.  XXX
	disklabel ${_disk} | sed -e 's/interleave: 0/interleave: 1/' \
	    -e 's/rpm: 0/rpm: 3600/' > /tmp/disklabelfixup
	disklabel -R ${_disk} /tmp/disklabelfixup
	rm /tmp/disklabelfixup
d487 1
a487 1
	echo	"Welcome to the OpenBSD/hp300 ${VERSION_MAJOR}.${VERSION_MINOR} installation program."
d515 1
a515 1
) | less -E
@


1.5
log
@Add md_machine_arch()
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.4 1997/04/21 07:32:11 downsj Exp $
d282 1
a282 1
	if ! disklabel -r -e /dev/r${1}a; then
d378 1
a378 1
			disklabel -r -e $1
d413 1
a413 1
			if ! disklabel -r -e $1; then
d474 1
a474 1
	disklabel -r -e ${_disk}
@


1.4
log
@Lots of changes...

* Build via a vnd, ala i386.
* Remove most of the sleep calls and all of the background processing.
* Add the notion of `kernel sets'.
* Add a couple more binaries to the ramdisk.
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.3 1997/02/23 19:10:52 downsj Exp $
d107 4
@


1.3
log
@Checkpoint.  This should be pretty close now, just gotta fix kernel
bugs.
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.2 1997/02/16 19:32:35 downsj Exp $
d278 1
a278 1
	if ! disklabel -e /dev/r${1}a; then
d374 1
a374 1
			disklabel -e $1
d409 1
a409 1
			if ! disklabel -e $1; then
d470 1
a470 1
	disklabel -e ${_disk}
a473 33
	if [ -d "$SETSDIR" ]; then
		# `bsd' is prefered over `bsd.gz'
		if [ -f "$SETSDIR/bsd" ]; then
			kernfile="$SETSDIR/bsd"
			dogzip=""
		elif [ -f "$SETSDIR/bsd.gz" ]; then
			kernfile="$SETSDIR/bsd.gz"
			dogzip="yes"
		elif [ -f "$SETSDIR/bsd-gen" ]; then
			kernfile="$SETSDIR/bsd-gen"
			dogzip=""
		elif [ -f "$SETSDIR/bsd-gen.gz" ]; then
			kernfile="$SETSDIR/bsd-gen.gz"
			dogzip="yes"
		else
			echo "Couldn't find a kernel file in $SETSDIR."
			echo "You will have to copy a kernel by hand."
			return
		fi

		# Copy in the kernel.
		echo -n "Copying kernel $kernfile..."
		if [ "$dogzip" ]; then
			gzip -d < $kernfile > /mnt/bsd
		else
			cp $kernfile /mnt/bsd
		fi
		chmod 755 /mnt/bsd
		echo " done."
	else
		echo "Couldn't find $SETSDIR."
		echo "You will have to copy a kernel by hand."
	fi
@


1.2
log
@Getting there...
@
text
@d3 1
a3 1
#	$OpenBSD$
d48 3
a51 3
	if [ ! -z "$TERM" ]; then
		return
	fi
d56 14
a69 1
	# XXX call tset?
a72 3
	# Was: do_mfs_mount "/tmp" "2048"
	# /tmp is the mount point
	# 2048 is the size in DEV_BIZE blocks
d74 7
a80 3
	umount /tmp > /dev/null 2>&1
	if ! mount_mfs -s 2048 swap /tmp ; then
		cat << \__mfs_failed_1
d82 1
a82 1
FATAL ERROR: Can't mount the memory filesystem.
d84 1
a84 1
__mfs_failed_1
a87 1
	# Bleh.  Give mount_mfs a chance to DTRT.
d89 18
d111 2
a112 2
	dmesg | grep "^rd[0-9]*:." | cut -d":" -f1 | sort -u
	dmesg | grep "^sd[0-9]*:.*cylinders" | cut -d":" -f1 | sort -u
d117 1
a117 1
	dmesg | grep "sd[0-9]*:.*CD-ROM" | cut -d":" -f1 | sort -u
d122 6
a127 1
	dmesg | grep "^le[0-9]*:" | cut -d":" -f1 | sort -u
d166 1
a166 1
	more << \__scsi_label_1
d193 1
a193 1
			(echo ""; dmesg; echo "") | more
d310 2
a311 2
	if dmesg | grep "${1}: " > /dev/null 2>&1; then
		_hpib_disktype=HP`dmesg | grep "${1}: " | sort -u | \
d325 1
a325 1
	if ! grep "${_hpib_disktype}[:|]" /etc/disktab > /dev/null \
d380 1
a380 1
				rd*)
d417 3
a419 2
md_prep_disklabel() {
	# $1 is the root disk
d421 14
a434 26
	# Make sure there's a disklabel there.  If there isn't, puke after
	# disklabel prints the error message.
	md_checkfordisklabel $1
	case "$resp" in
		1)
			cat << \__md_prep_disklabel_1

FATAL ERROR: There is no disklabel present on the root disk!  You must
label the disk with SYS_INST before continuing.

__md_prep_disklabel_1
			exit
			;;

		2)
			cat << \__md_prep_disklabel_2

FATAL ERROR: The disklabel on the root disk is corrupted!  You must
re-label the disk with SYS_INST before continuing.

__md_prep_disklabel_2
			exit
			;;

		*)
			;;
a436 11
	# Give the user the opportinuty to edit the root disklabel.
	cat << \__md_prep_disklabel_3

You have already placed a disklabel onto the target root disk.
However, due to the limitations of the standalone program used
you may want to edit that label to change partition type information.
You will be given the opporunity to do that now.  Note that you may
not change the size or location of any presently open partition.

__md_prep_disklabel_3
	echo -n "Do you wish to edit the root disklabel? [y] "
d439 3
a441 4
		y*|Y*)
			disklabel -W $1
			disklabel -e $1
			;;
d443 2
a444 3
		*)
			;;
	esac
d446 19
a464 1
	cat << \__md_prep_disklabel_4
d466 5
a470 9
You will now be given the opportunity to place disklabels on any additional
disks on your system.
__md_prep_disklabel_4

	_DKDEVS=`rmel ${ROOTDISK} ${_DKDEVS}`
	resp="X"	# force at least one iteration
	while [ "X$resp" != X"done" ]; do
		labelmoredisks
	done
d474 33
a506 3
	echo -n "Copying kernel..."
	cp -p /netbsd /mnt/netbsd
	echo "done."
d544 1
a544 1
) | more
@


1.1
log
@Prelimary addition of the ramdisk-based miniroot.  Still needs work.
(Stolen wholesale from mvme68k.)

The miniroot subdir is obsolete, and subject to removal.
@
text
@d1 4
a4 1
#       $OpenBSD: install.md,v 1.1 1997/02/15 04:27:15 rahnds Exp $
d42 1
a42 2
# machine dependent section of installation/upgrade script.
#
d45 2
a46 6
TMPWRITEABLE=/tmp/writeable
KERNFSMOUNTED=/tmp/kernfsmounted

md_copy_kernel() {
	echo "This must be done later by hand"
}
d52 2
a53 2
	echo -n "Specify terminal type [xterm]: "
	getresp "xterm"
d56 20
d79 3
a81 1
	egrep "^sd[0-9] " < /kern/msgbuf
d85 2
a86 1
	egrep "^cd[0-9] " < /kern/msgbuf
d89 3
a91 3
md_get_ifdevs() {                                                         
        # return available network devices                               
	egrep "(^ie[0-9] )|(^le[0-9] )"< /kern/msgbuf  | cut -d" " -f1 | sort -u
d94 2
a95 4
md_get_partition_range() {
	# return range of valid partition letters
	echo "[a-p]"
}
d97 4
a100 5
md_installboot() {
	echo "Nothing to do."
}
md_labeldisk() {
	echo "huh"
a102 1

a104 1
	local rval
d106 1
a106 1
	disklabel $1 >> /dev/null 2> /tmp/checkfordisklabel
d108 1
a108 1
		rval=1
d110 1
a110 1
		rval=2
d112 1
a112 1
		rval=0
a115 1
	return $rval
d118 33
a150 19
md_prep_disklabel()
{
	local _disk

	_disk=$1
	md_checkfordisklabel $_disk
	case $? in
	0)
		echo -n "Do you wish to edit the disklabel on $_disk? [y] "
		;;
	1)
		echo "WARNING: Disk $_disk has no label"
		echo -n "Do you want to create one with the disklabel editor? [y] "
		;;
	2)
		echo "WARNING: Label on disk $_disk is corrupted"
		echo -n "Do you want to try and repair the damage using the disklabel editor? [y] "
		;;
	esac
d152 2
d156 6
a161 2
	y*|Y*) ;;
	*)	return ;;
d164 86
a249 2
	# display example
	cat << \__md_prep_disklabel_1
d251 8
a258 18
Here is an example of what the partition information will look like once
you have entered the disklabel editor. Disk partition sizes and offsets
are in sector (most likely 512 bytes) units. Make sure these size/offset
pairs are on cylinder boundaries (the number of sector per cylinder is
given in the `sectors/cylinder' entry, which is not shown here).

Do not change any parameters except the partition layout and the label name.
It's probably also wisest not to touch the `8 partitions:' line, even
in case you have defined less than eight partitions.

[Example]
8 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  a:    50176        0    4.2BSD     1024  8192    16   # (Cyl.    0 - 111)
  b:    64512    50176      swap                        # (Cyl.  112 - 255)
  c:   640192        0   unknown                        # (Cyl.    0 - 1428)
  d:   525504   114688    4.2BSD     1024  8192    16   # (Cyl.  256 - 1428)
[End of example]
d260 2
a261 2
__md_prep_disklabel_1
	echo -n "Press [Enter] to continue "
d263 3
a265 2
	disklabel -W ${_disk}
	disklabel -e ${_disk}
d268 11
a278 3
md_welcome_banner() {
{
	if [ "$MODE" = "install" ]; then
d280 4
a283 2
		echo "Welcome to the OpenBSD/hp300 ${VERSION} installation program."
		cat << \__welcome_banner_1
d285 12
a296 5
This program is designed to help you put OpenBSD on your disk,
in a simple and rational way.  You'll be asked several questions,
and it would probably be useful to have your disk's hardware
manual, the installation notes, and a calculator handy.
__welcome_banner_1
d298 9
a306 1
	else
d308 125
a432 2
		echo "Welcome to the OpenBSD/hp300 ${VERSION} upgrade program."
		cat << \__welcome_banner_2
d434 1
a434 2
This program is designed to help you upgrade your OpenBSD system in a
simple and rational way.
d436 20
a455 6
As a reminder, installing the `etc' binary set is NOT recommended.
Once the rest of your system has been upgraded, you should manually
merge any changes to files in the `etc' set into those files which
already exist on your system.
__welcome_banner_2
	fi
d457 19
a475 1
cat << \__welcome_banner_3
d477 1
a477 1
As with anything which modifies your disk's contents, this
d479 1
a479 1
to make sure your data is backed up before beginning the
d482 1
a482 1
Default answers are displayed in brackets after the questions.
d487 2
a488 2
__welcome_banner_3
} | more
d492 1
a492 1
	cat << \__not_going_to_install_1
d494 1
a494 1
OK, then.  Enter `halt' at the prompt to halt the machine.  Once the
d501 1
a501 7
	local what;
	if [ "$MODE" = "install" ]; then
		what="installed";
	else
		what="upgraded";
	fi
	cat << __congratulations_1
d503 4
a506 3
CONGRATULATIONS!  You have successfully $what OpenBSD!
To boot the installed system, enter halt at the command prompt. Once the
system has halted, reset the machine and boot from the disk.
d512 1
d515 2
a516 36
md_makerootwritable() {

	if [ -e ${TMPWRITEABLE} ]
	then
		md_mountkernfs
		return
	fi
	umount /tmp >> /dev/null 2>&1
	if ! mount -t ffs  -u /dev/rd0a / ; then
		cat << \__rd0_failed_1

FATAL ERROR: Can't mount the ram filesystem.

__rd0_failed_1
		exit
	fi

	# Bleh.  Give mount_mfs a chance to DTRT.
	sleep 2
	> ${TMPWRITEABLE}

	md_mountkernfs
}
md_mountkernfs() {
	if [ -e ${KERNFSMOUNTED} ]
	then
		return
	fi
	if ! mount -t kernfs /kern /kern
	then
		cat << \__kernfs_failed_1
FATAL ERROR: Can't mount kernfs filesystem
__kernfs_failed_1
		exit
	fi
	> ${KERNFSMOUNTED} 
@
