head	1.2;
access;
symbols
	OPENBSD_3_1:1.1.0.22
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.20
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.18
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.16
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.12
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.10
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.8
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.6
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2002.04.22.02.43.00;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	97.02.16.18.20.02;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove them for real
@
text
@#
#	$OpenBSD: dot.instutils,v 1.1 1997/02/16 18:20:02 downsj Exp $
#	$NetBSD: dot.instutils,v 1.1 1995/07/18 04:13:08 briggs Exp $
#
# Copyright (c) 1994 Christopher G. Demetriou
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by Christopher G. Demetriou.
# 4. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# Installation configuration utilites (functions), to get NetBSD configured
# reasonably once it is installed on the hard disk.  These are meant to be
# invoked from the shell prompt, by people installing NetBSD.

Configure()
{
	DEV=/mnt/dev
	ETC=/mnt/etc

	echo	"You will now be prompted for information about this"
	echo	"machine.  If you hit return, the default answer (in"
	echo	"brackets) will be used."

	echo	""
	echo -n	"What is this machine's hostname? [unknown.host.domain] "
	read hname
	if [ "$hname" = "" ]; then
		hname=unknown.host.domain
	fi
	echo $hname > ${ETC}/myname
	proto_domain=`echo $hname | sed -e 's/[^.]*\.//'`

	echo	""
	echo	"What domain is this machine in (this is NOT its YP"
	echo -n	"domain name)? [$proto_domain] "
	read dname
	if [ "$dname" = "" ]; then
		dname=$proto_domain
	fi

	echo	""
	if [ -e ${ETC}/sendmail.cf ]; then
		echo	"WARNING: A default sendmail.cf exists, and probably"
		echo	"needs to be tuned and/or replaced, to work properly at"
		echo	"your site!"
	else
		echo	"WARNING: No default sendmail.cf installed.  Did you"
		echo	"forget to install the 'etc' distribution?"
	fi

	echo	"127.0.0.1	localhost localhost.$dname" > ${ETC}/hosts

	echo	""
	echo -n	"Does this machine have an ethernet interface? [y] "
        read resp
        case "$resp" in
	n*)
		;;
	*)
		intf=
		while [ "$intf" = "" ]; do
			echo -n "What is the primary interface name "
			echo -n "(e.g. ae0, etc)? "
			read intf
		done
		echo -n "What is the hostname for this interface? [$hname] "
		read ifname
		if [ "$ifname" = "" ]; then
			ifname=$hname
		fi
		ifaddr=
		while [ "$ifaddr" = "" ]; do
			echo -n "What is the IP address associated with "
			echo -n "interface ${intf}? "
			read ifaddr
		done
		echo "$ifaddr	$ifname `echo $ifname | sed -e s/\.$dname//`" \
		    >> ${ETC}/hosts

		echo -n "Does this interface have a special netmask? [n] "
		read resp
		case "$resp" in
			y*)
				echo -n "What is the netmask? [0xffffff00] "
				read ifnetmask
				if [ "$ifnetmask" = "" ]; then
					ifnetmask=0xffffff00
				fi
				;;
			*)
				ifnetmask=
				;;
		esac

		echo -n "Does this interface need additional flags? [n] "
		read resp
		case "$resp" in
			y*)
				echo -n "What flags? [link0] "
				read ifflags
				if [ "$ifflags" = "" ]; then
					ifflags=link0
				fi
				;;
			*)
				ifflags=
				;;
		esac
		echo "inet $ifname $ifnetmask $ifflags" > ${ETC}/hostname.$intf

		echo    ""
		echo -n	"WARNING: if you have any more ethernet interfaces, "
		echo	"you will have to configure"
		echo -n "them by hand.  Read the comments in /etc/netstart to"
		echo	"learn how to do this."
		;;
	esac
	
	echo	""
	echo -n	"Making device nodes..."
	cd ${DEV}
	sh MAKEDEV all
	echo	" done."

	sync

	echo	"You may now reboot your machine with the shutdown command."
	echo	"	shutdown -r now"
	echo	"to reboot or"
	echo	"	shutdown -h now"
	echo	"to halt."
	echo	"Remember to erase the miniroot name from the booter's"
	echo	"booting preferences dialog box before booting again."
}
@


1.1
log
@Prelimary addition of the ramdisk-based miniroot.  Still needs work.
(Stolen wholesale from mvme68k.)

The miniroot subdir is obsolete, and subject to removal.
@
text
@d2 1
a2 1
#	$OpenBSD$
@

