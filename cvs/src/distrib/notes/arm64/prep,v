head	1.7;
access;
symbols
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4;
locks; strict;
comment	@# @;


1.7
date	2017.09.29.05.44.33;	author jsg;	state Exp;
branches;
next	1.6;
commitid	sfIc0ysVm4hEEHVA;

1.6
date	2017.09.29.05.37.55;	author jsg;	state Exp;
branches;
next	1.5;
commitid	jHH8Hx5VHGEBIRYU;

1.5
date	2017.08.13.11.20.53;	author jsg;	state Exp;
branches;
next	1.4;
commitid	DRiL45ZDOOghDsTa;

1.4
date	2017.02.27.10.15.11;	author sthen;	state Exp;
branches;
next	1.3;
commitid	Yy3W3njYGeMtGy9I;

1.3
date	2017.02.11.07.07.10;	author jsg;	state Exp;
branches;
next	1.2;
commitid	YBJnvKeaxsBF2MFv;

1.2
date	2017.01.25.03.10.06;	author patrick;	state Exp;
branches;
next	1.1;
commitid	hWRG1wW6jJQEMgkD;

1.1
date	2017.01.25.02.29.25;	author patrick;	state Exp;
branches;
next	;
commitid	sOIUb1PtWmhbNOm7;


desc
@@


1.7
log
@Mention that U-Boot images for Allwinner and Rockchip targets contain a
default DTB.
@
text
@dnl	$OpenBSD: prep,v 1.6 2017/09/29 05:37:55 jsg Exp $
Please be aware that OpenBSD support for this platform is far from
complete.

To perform an installation you must be able to interact with the serial
console of the machine.  USB OTG ports such as the one found on the
BeagleBone will not function as a console.  You need to be able to
interact with the firmware on the console.  Often this requires a 3.3V
TTL level adapter connected to pins or a header on the board.

Firmware which provides an EFI interface with a Device Tree Blob (DTB)
file is required to boot.  In most cases this is provided by images of
U-Boot 2016.07 or newer on SD/MMC devices or in SPI flash.  If the
miniroot images are used, U-Boot and DTB files are distributed as part
of the miniroot disk images.

OpenBSD can be installed onto a disk by copying the miniroot for your
board "miniroot{:--:}OSrev.fs" image to an SD card.

Booting from an SD card:

  To use the miniroot image you will need another machine to plug the
  SD card in to. Any machine type will do, as long as it supports SD card
  storage devices.  Under OpenBSD, it will appear as a ``sd'' device, for
  example sd1.
  
  Use the dd(1) utility to copy the miniroot to the hard drive.
  The command would likely be, under OpenBSD:
  	dd if=miniroot{:--:}OSrev.fs of=/dev/rsd1c bs=1m
  
  When you have connected the serial to you computer, a command such
  as "cu -l cuaU0 -s 115200" (assuming cuaU0 is your serial port device)
  should connect you to the board's console.

Running EFI payloads with U-Boot:

If the U-Boot target supports "distro_bootcmd" efiboot will automatically
be loaded by placing bootaa64.efi into /efi/boot/bootaa64.efi on a FAT
filesystem.  With dtb files placed in in /vendor/, /dtbs/vendor/, or
/dtb/current/vendor/.

If the U-Boot target supports bootefi but not automatically finding it with
"distro_bootcmd" then it must be loaded manually or by U-Boot commands or
script.
	=> run findfdt
	=> load mmc 0:1 ${fdt_addr_r} ${fdtfile}
	=> load mmc 0:1 ${kernel_addr_r} efi/boot/bootaa64.efi
	=> bootefi ${kernel_addr_r} ${fdt_addr_r}
The bootloader will then run and try to load sd0a:/bsd off an FFS
filesystem after a timeout.

Install on systems without a supported miniroot:

  If a miniroot is not available for your system you will have to modify
  an existing image before booting it.

  To do so first install the u-boot-aarch64 and dtb packages.  Write the
  provided miniroot image to an SD card:

 	dd if=miniroot{:--:}OSrev.fs of=/dev/rsdXc bs=1m

  Add a board specific DTB file (Allwinner and Rockchip U-Boot images
  come with a default DTB):

 	mount /dev/sdXi /mnt
	mkdir /mnt/vendor
 	cp /usr/local/share/dtb/arm64/vendor/board.dtb /mnt/vendor/
 	umount /mnt

  For systems based on Allwinner Axx Socs:

 	dd if=/usr/local/share/u-boot/board/u-boot-sunxi-with-spl.bin \
 	    of=/dev/sdXc bs=1024 seek=8
@


1.6
log
@With arm64 targets U-Boot looks for dtbs in a directory named after the
vendor of the SoC.
@
text
@d1 1
a1 1
dnl	$OpenBSD: prep,v 1.5 2017/08/13 11:20:53 jsg Exp $
d62 2
a63 1
  Add a board specific DTB file:
@


1.5
log
@Avoid raw devices when dd'ing U-Boot.  Avoids cases that might require
conv=sync.  Discussed with kettenis some time ago.
@
text
@d1 1
a1 1
dnl	$OpenBSD: prep,v 1.4 2017/02/27 10:15:11 sthen Exp $
d39 2
a40 1
filesystem.  With dtb files placed in in /, /dtbs/, or /dtb/current/.
d65 2
a66 1
 	cp /usr/local/share/dtb/arm64/vendor/board.dtb /mnt/
@


1.4
log
@bump block size for dd; 39x faster on my system.
ok tom@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: prep,v 1.3 2017/02/11 07:07:10 jsg Exp $
d70 1
a70 1
 	    of=/dev/rsdXc bs=1024 seek=8
@


1.3
log
@update miniroot notes
@
text
@d1 1
a1 1
dnl	$OpenBSD: prep,v 1.2 2017/01/25 03:10:06 patrick Exp $
d29 1
a29 1
  	dd if=miniroot{:--:}OSrev.fs of=/dev/rsd1c
d59 1
a59 1
 	dd if=miniroot{:--:}OSrev.fs of=/dev/rsdXc
@


1.2
log
@Updates to OpenBSD/arm64 install notes.

with jsg@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: prep,v 1.1 2017/01/25 02:29:25 patrick Exp $
d18 1
a18 1
board "miniroot-board-{:--:}OSrev.fs" image to an SD card.
d29 1
a29 1
  	dd if=miniroot-beagle-{:--:}OSrev.fs of=/dev/rsd1c
d31 1
a31 1
  When you have connected the BeagleBoard to you computer, a command such
d38 1
a38 1
be loaded by placing bootarm.efi into /efi/boot/bootarm.efi on a FAT
d46 1
a46 1
	=> load mmc 0:1 ${kernel_addr_r} efi/boot/bootarm.efi
d56 2
a57 2
  To do so first install the u-boot-aarch64 and dtb packages.  Write one of the
  provided miniroot images to an SD card:
d59 1
a59 1
 	dd if=miniroot-beagle-{:--:}OSrev.fs of=/dev/rsdXc
d64 1
a64 1
 	cp /usr/local/share/dtb/arm64/board.dtb /mnt/
@


1.1
log
@Copy install notes for arm64 from armv7.  These still need to be
modified to make sense for arm64.
@
text
@d1 1
a1 1
dnl	$OpenBSD: prep,v 1.12 2017/01/19 06:22:56 jsg Exp $
a33 5
  
  Note: By default the BeagleBone Black will boot from the internal emmc.
  In order to make it boot from the micro SD card, you will need to hold down
  the small button located by the SD card slot while powering on the board.
  Once you have done this the board will boot from the SD card as the default.
d56 1
a56 1
  To do so first install the u-boot-arm and dtb packages.  Write one of the
d64 1
a64 1
 	cp /usr/local/share/dtb/arm/board.dtb /mnt/
a65 12

  For systems based on Texas Instruments OMAP and AMxxxx SoCs:

 	mount /dev/sdXi /mnt
 	cp /usr/local/share/u-boot/board/{MLO,u-boot.img} /mnt/
 	umount /mnt

  For systems based on Freescale/NXP i.MX SoCs:

 	dd if=/usr/local/share/u-boot/board/SPL of=/dev/rsdXc bs=1024 seek=1
 	dd if=/usr/local/share/u-boot/board/u-boot.img \
 	    of=/dev/rsdXc bs=1024 seek=69
@

