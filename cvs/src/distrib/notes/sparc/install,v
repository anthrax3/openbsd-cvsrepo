head	1.79;
access;
symbols
	OPENBSD_6_0:1.79.0.6
	OPENBSD_6_0_BASE:1.79
	OPENBSD_5_9:1.79.0.2
	OPENBSD_5_9_BASE:1.79
	OPENBSD_5_8:1.79.0.4
	OPENBSD_5_8_BASE:1.79
	OPENBSD_5_7:1.76.0.2
	OPENBSD_5_7_BASE:1.76
	OPENBSD_5_6:1.75.0.4
	OPENBSD_5_6_BASE:1.75
	OPENBSD_5_5:1.74.0.12
	OPENBSD_5_5_BASE:1.74
	OPENBSD_5_4:1.74.0.10
	OPENBSD_5_4_BASE:1.74
	OPENBSD_5_3:1.74.0.8
	OPENBSD_5_3_BASE:1.74
	OPENBSD_5_2:1.74.0.6
	OPENBSD_5_2_BASE:1.74
	OPENBSD_5_1_BASE:1.74
	OPENBSD_5_1:1.74.0.2
	OPENBSD_5_0:1.74.0.4
	OPENBSD_5_0_BASE:1.74
	OPENBSD_4_9:1.72.0.2
	OPENBSD_4_9_BASE:1.72
	OPENBSD_4_8:1.71.0.2
	OPENBSD_4_8_BASE:1.71
	OPENBSD_4_7:1.70.0.2
	OPENBSD_4_7_BASE:1.70
	OPENBSD_4_6:1.69.0.4
	OPENBSD_4_6_BASE:1.69
	OPENBSD_4_5:1.67.0.4
	OPENBSD_4_5_BASE:1.67
	OPENBSD_4_4:1.67.0.2
	OPENBSD_4_4_BASE:1.67
	OPENBSD_4_3:1.66.0.2
	OPENBSD_4_3_BASE:1.66
	OPENBSD_4_2:1.65.0.4
	OPENBSD_4_2_BASE:1.65
	OPENBSD_4_1:1.65.0.2
	OPENBSD_4_1_BASE:1.65
	OPENBSD_4_0:1.64.0.6
	OPENBSD_4_0_BASE:1.64
	OPENBSD_3_9:1.64.0.4
	OPENBSD_3_9_BASE:1.64
	OPENBSD_3_8:1.64.0.2
	OPENBSD_3_8_BASE:1.64
	OPENBSD_3_7:1.62.0.6
	OPENBSD_3_7_BASE:1.62
	OPENBSD_3_6:1.62.0.4
	OPENBSD_3_6_BASE:1.62
	OPENBSD_3_5:1.62.0.2
	OPENBSD_3_5_BASE:1.62
	OPENBSD_3_4:1.58.0.4
	OPENBSD_3_4_BASE:1.58
	OPENBSD_3_3:1.58.0.2
	OPENBSD_3_3_BASE:1.58
	OPENBSD_3_2:1.54.0.2
	OPENBSD_3_2_BASE:1.54
	OPENBSD_3_1:1.51.0.2
	OPENBSD_3_1_BASE:1.51
	OPENBSD_3_0:1.48.0.2
	OPENBSD_3_0_BASE:1.48
	OPENBSD_2_9:1.43.0.2
	OPENBSD_2_9_BASE:1.43
	OPENBSD_2_8:1.38.0.4
	OPENBSD_2_8_BASE:1.38
	OPENBSD_2_7:1.38.0.2
	OPENBSD_2_7_BASE:1.38
	OPENBSD_2_6:1.36.0.4
	OPENBSD_2_6_BASE:1.36
	OPENBSD_2_5:1.36.0.2
	OPENBSD_2_5_BASE:1.36
	OPENBSD_2_4:1.34.0.2
	OPENBSD_2_4_BASE:1.34
	OPENBSD_2_3:1.28.0.2
	OPENBSD_2_3_BASE:1.28
	OPENBSD_2_2:1.24.0.2
	OPENBSD_2_2_BASE:1.24
	OPENBSD_2_1:1.21.0.2
	OPENBSD_2_1_BASE:1.21
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.79
date	2015.03.27.20.55.56;	author miod;	state Exp;
branches;
next	1.78;
commitid	HGH0KLkyHs0AwLWu;

1.78
date	2015.03.27.20.50.40;	author miod;	state Exp;
branches;
next	1.77;
commitid	Su4qESnMQy3wms7I;

1.77
date	2015.03.27.20.40.36;	author miod;	state Exp;
branches;
next	1.76;
commitid	p3QLPTyTeRmKeBF6;

1.76
date	2015.01.11.21.02.55;	author miod;	state Exp;
branches;
next	1.75;
commitid	Wi3D5hpLLtf8TCUT;

1.75
date	2014.03.19.01.59.49;	author tedu;	state Exp;
branches;
next	1.74;

1.74
date	2011.06.15.21.36.48;	author miod;	state Exp;
branches;
next	1.73;

1.73
date	2011.03.09.17.11.40;	author ian;	state Exp;
branches;
next	1.72;

1.72
date	2010.10.18.04.24.07;	author deraadt;	state Exp;
branches;
next	1.71;

1.71
date	2010.07.10.19.38.37;	author miod;	state Exp;
branches;
next	1.70;

1.70
date	2010.03.16.17.23.09;	author miod;	state Exp;
branches;
next	1.69;

1.69
date	2009.05.13.18.38.29;	author miod;	state Exp;
branches;
next	1.68;

1.68
date	2009.05.12.21.06.51;	author miod;	state Exp;
branches;
next	1.67;

1.67
date	2008.08.05.22.58.01;	author miod;	state Exp;
branches;
next	1.66;

1.66
date	2008.03.10.21.38.28;	author miod;	state Exp;
branches;
next	1.65;

1.65
date	2007.03.01.19.24.45;	author miod;	state Exp;
branches;
next	1.64;

1.64
date	2005.04.27.03.07.16;	author jsg;	state Exp;
branches;
next	1.63;

1.63
date	2005.03.21.22.32.07;	author miod;	state Exp;
branches;
next	1.62;

1.62
date	2004.03.25.08.38.52;	author tom;	state Exp;
branches;
next	1.61;

1.61
date	2004.03.17.09.25.10;	author jmc;	state Exp;
branches;
next	1.60;

1.60
date	2004.03.16.08.25.00;	author jmc;	state Exp;
branches;
next	1.59;

1.59
date	2004.02.09.13.32.51;	author todd;	state Exp;
branches;
next	1.58;

1.58
date	2003.03.24.11.33.57;	author miod;	state Exp;
branches;
next	1.57;

1.57
date	2003.02.15.21.22.08;	author miod;	state Exp;
branches;
next	1.56;

1.56
date	2003.01.04.00.18.09;	author miod;	state Exp;
branches;
next	1.55;

1.55
date	2002.12.30.11.13.01;	author miod;	state Exp;
branches;
next	1.54;

1.54
date	2002.07.25.19.29.32;	author miod;	state Exp;
branches;
next	1.53;

1.53
date	2002.06.09.05.53.54;	author todd;	state Exp;
branches;
next	1.52;

1.52
date	2002.04.17.23.32.12;	author miod;	state Exp;
branches;
next	1.51;

1.51
date	2002.04.09.01.22.23;	author miod;	state Exp;
branches;
next	1.50;

1.50
date	2002.04.07.23.31.02;	author miod;	state Exp;
branches;
next	1.49;

1.49
date	2002.03.30.22.52.58;	author miod;	state Exp;
branches;
next	1.48;

1.48
date	2001.10.14.18.28.01;	author miod;	state Exp;
branches;
next	1.47;

1.47
date	2001.10.06.19.29.00;	author miod;	state Exp;
branches;
next	1.46;

1.46
date	2001.10.02.20.03.18;	author miod;	state Exp;
branches;
next	1.45;

1.45
date	2001.10.01.22.45.51;	author miod;	state Exp;
branches;
next	1.44;

1.44
date	2001.10.01.01.08.12;	author miod;	state Exp;
branches;
next	1.43;

1.43
date	2001.04.24.23.07.41;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2001.01.10.01.30.44;	author krw;	state Exp;
branches;
next	1.41;

1.41
date	2000.11.02.05.11.07;	author jason;	state Exp;
branches;
next	1.40;

1.40
date	2000.11.02.03.42.22;	author jason;	state Exp;
branches;
next	1.39;

1.39
date	2000.11.02.03.37.40;	author jason;	state Exp;
branches;
next	1.38;

1.38
date	2000.05.06.20.33.39;	author miod;	state Exp;
branches;
next	1.37;

1.37
date	2000.04.28.15.00.47;	author todd;	state Exp;
branches;
next	1.36;

1.36
date	99.01.22.13.50.55;	author jason;	state Exp;
branches;
next	1.35;

1.35
date	98.12.19.18.32.22;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	98.09.21.08.49.15;	author todd;	state Exp;
branches;
next	1.33;

1.33
date	98.09.21.06.32.08;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	98.08.02.05.23.29;	author todd;	state Exp;
branches;
next	1.31;

1.31
date	98.07.21.06.20.41;	author todd;	state Exp;
branches;
next	1.30;

1.30
date	98.05.18.00.34.24;	author todd;	state Exp;
branches;
next	1.29;

1.29
date	98.04.25.07.25.01;	author todd;	state Exp;
branches;
next	1.28;

1.28
date	98.04.05.02.11.43;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	98.03.08.00.12.48;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	98.03.04.12.01.42;	author johns;	state Exp;
branches;
next	1.25;

1.25
date	98.02.24.13.46.08;	author johns;	state Exp;
branches;
next	1.24;

1.24
date	97.10.24.07.11.23;	author todd;	state Exp;
branches;
next	1.23;

1.23
date	97.10.01.23.14.43;	author todd;	state Exp;
branches;
next	1.22;

1.22
date	97.06.03.04.32.00;	author grr;	state Exp;
branches;
next	1.21;

1.21
date	97.05.28.07.12.17;	author johns;	state Exp;
branches;
next	1.20;

1.20
date	97.05.27.10.35.16;	author grr;	state Exp;
branches;
next	1.19;

1.19
date	97.05.27.00.24.19;	author grr;	state Exp;
branches;
next	1.18;

1.18
date	97.05.26.12.54.56;	author johns;	state Exp;
branches;
next	1.17;

1.17
date	97.05.26.07.13.05;	author johns;	state Exp;
branches;
next	1.16;

1.16
date	97.05.26.06.17.48;	author johns;	state Exp;
branches;
next	1.15;

1.15
date	97.05.26.05.28.32;	author johns;	state Exp;
branches;
next	1.14;

1.14
date	97.05.26.05.13.30;	author johns;	state Exp;
branches;
next	1.13;

1.13
date	97.05.21.01.25.14;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	97.05.05.12.16.26;	author graichen;	state Exp;
branches;
next	1.11;

1.11
date	97.05.05.12.15.12;	author graichen;	state Exp;
branches;
next	1.10;

1.10
date	97.05.05.12.08.03;	author graichen;	state Exp;
branches;
next	1.9;

1.9
date	97.05.05.11.46.49;	author graichen;	state Exp;
branches;
next	1.8;

1.8
date	96.10.10.03.09.39;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.04.25.21.30.04;	author niklas;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	95.12.14.07.00.27;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	95.11.19.13.35.09;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	95.11.16.14.20.01;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.11.13.04.03.09;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.11.06.21.28.05;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.41;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.41;	author deraadt;	state Exp;
branches;
next	;

1.7.2.1
date	96.10.11.22.27.28;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.79
log
@Missing `unattended installation' chunk.
@
text
@dnl	$OpenBSD: install,v 1.78 2015/03/27 20:50:40 miod Exp $
OpenBSDInstallPrelude({:-SMD disks-:})

There are several ways to install OpenBSD onto a disk.  The normal way
is to use the OpenBSD CD-ROM, or the bootable CD-ROM mini image, or an
installation floppy, depending on your hardware.
Alternatively, if you already have an operating system installed and
do not wish to change the existing partition layout, it is simpler to
use the OpenBSD miniroot that can be booted off your local disk's swap
partition.

If your SPARC is hooked up to a network, try and find a server to
arrange for a diskless setup. This is a convenient way to install on a
machine whose disk does not currently hold a usable operating system.
This is difficult to get set up correctly the first time, but easy to
use afterwards.  (See ``Installing using a diskless setup'' below.)


Booting from the Installation Media:

Prior to attempting an installation, you should make sure that everything
of value on the target system has been backed up.  While installing OpenBSD
does not necessarily wipe out all the partitions on the hard disk, errors
during the install process can have unforeseen consequences and you will
probably render the system unbootable if you start, but do not complete
the installation.  Having the installation media for the prior installation,
be it a SunOS or OpenBSD CD-ROM or OpenBSD install diskettes, is good
insurance if you want to be able to "go back" for some reason.

After taking care of all that, bring your system down gracefully using
the shutdown(8) and/or halt(8) commands.  This will get you to the monitor
prompt.  Sun PROM monitor commands and setup differ considerably depending
on the system architecture and age; you may needed to reference the PROM
monitor manual for your system for details.

There are four main cases:

	sun4 (older servers, deskside workstations):
		prompt is a ">", boot command is "b", uses sd(c,s,p) syntax
		with s defined as scsi-unit*8+lun in hex
	OpenBoot Version 1 (newer servers, desktop workstations):
		prompt is "ok", boot command is "boot" uses sd(c,s,p) syntax
		with s defined as scsi-unit.
	OpenBoot Version 2 (newer servers, desktop workstations):
		prompt is "ok", boot command is "boot" uses diskn:p syntax.
        OpenBoot Version 2 (certain newer desktop workstations):
		prompt is "ok", boot command is "boot" uses diskn syntax
		unless booting from a non-standard partition, in which case:
		boot /sbus/esp/sd@@t,0:p bsd  (where "t" is the scsi target,
		and "p" is the partition.  examples would be t="3" and p="b")

	
If you expect your workstation to have an OpenBoot Prom but get a ">",
enter the "n" command to enter the "new command mode".  You can set this
as the default by doing a "setenv sunmon-compat? false" command, followed
by a "reset" command.

Note that OpenBoot Proms also do the Sun SCSI-ID shuffle for disks; this
is described elsewhere in some detail.  For the purposes of this section,
drive 0 refers to the internal or first SCSI drive, which usually has a
SCSI-ID of 3.


Booting from Floppy Disk installation media:

        ok boot fd()bsd         # for version 1 OpenBOOT ROMs
        ok boot floppy bsd      # for version 2 OpenBOOT ROMs

This will cause the kernel contained in the floppy to be booted.


Booting from CD-ROM installation media:

	> b sd(,30,0)OSREV/MACHINE/bsd.rd		# for Sun4 monitors*
						# (not working currently)
	ok boot sd(,6,0)OSREV/MACHINE/bsd.rd	# for version 1 OpenBOOT ROMs
	ok boot cdrom OSREV/MACHINE/bsd.rd	# for version 2 OpenBOOT ROMs

If the boot is successful, you will get a loader version message,
executable sizes, and then the kernel copyright and device probe
messages.  Boot failure modes are typically a lot of CD-ROM drive
activity, but no messages or complaints about magic numbers,
checksums or formats.

Not all MACHINE systems support bootable CD-ROM and the current
boot image is only known to work on sun4c and sun4m architectures.
If it does not work, you'll have to create a boot floppy or bootable
hard disk using the instructions under preparing boot media.

Note that older SPARC machines will not boot from CD-ROM drives
unless the drive is set to use 512-byte blocks instead of the usual
2048-byte blocks. Sun-provided CD-ROM drives from that era are OK;
some third-party drives have a dip-switch or jumper setting.

Booting from SCSI disk (miniroot or floppy image):

Boot the miniroot by typing the appropriate command at the PROM:

	> b sd(,,1)bsd 			# for sun4 monitors*
	ok boot sd(,,1)bsd 		# for version 1 OpenBOOT ROMs
	ok boot disk:b bsd 		# for version 2 OpenBOOT ROMs
	ok boot /sbus/esp/sd@@3,0:b bsd  # for version 2 OpenBOOT ROMs
					# that won't take disk:p syntax.

If you've loaded the miniroot onto some other disk than the default
drive 0, modify the boot specifier accordingly, keeping in mind the
drive vs. SCSI-ID shuffling and partition a=0, b=1...

        > b sd(0,10,1)bsd       # example - scsi target 2 on sun4 monitors*
	ok boot sd(0,3,1)bsd	# example - scsi target 0 on v1 OpenBOOT ROM
	ok boot disk3:b bsd     # example - scsi target 0 on v2 OpenBOOT ROM
	ok boot /sbus/esp/sd@@0,0:b bsd  # example - scsi target 0 on v2
					# OpenBOOT ROM that won't take
					# disk:p syntax.

(*) for sun4 this is scsi-target*8+scsi-lun (usually 0) expressed in hex...


Installing using a diskless setup:

First, you must set up a diskless client configuration on a server. If
you are using an OpenBSD system as the boot-server, have a look at the
diskless(8) manual page for guidelines on how to proceed with this.
If the server runs another operating system, you'll have to consult
documentation that came with it (on SunOS systems, add_client(8) and
the Sun System/Networks administrators guide constitute a good start;
on Solaris systems, share(1M) is a good starting point as well).


Boot your workstation from the server by entering the appropriate `boot'
command at the monitor prompt. Depending on the PROM version in your machine,
this command takes one of the following forms:

	> b le()bsd.rd		# for sun4 monitors
	ok boot le()bsd.rd	# for version 1 OpenBOOT ROMs
	ok boot net bsd.rd	# for version 2 OpenBOOT ROMs


Installing using the Floppy, CD-ROM, miniroot or netboot procedure:

OpenBSDInstallPart2

	Boot your machine from the installation media as described above.

	It will take a while to load the kernel especially from a floppy
	or slow network connection, most likely more than a minute.  If
	some action doesn't eventually happen, or the spinning cursor has
	stopped and nothing further has happened, either your boot media
	is bad, your diskless setup isn't correct, or you may have
	a hardware or configuration problem.

OpenBSDInstallPart3(SMD drives are noisy and weight a ton per kilobyte and scare
		cats,"sd0" for SCSI drives,{:-and "xd0" or "xy0"
	for SMD drives-:})

OpenBSDInstallPart4

OpenBSDInstallPart5

OpenBSDInstallPart6({:-CD-ROM, -:})

OpenBSDURLInstall

OpenBSDCDROMInstall
		
OpenBSDDISKInstall({:-"xdN", "xyN" or -:},{:-only -:})

OpenBSDCommonInstall

OpenBSDInstallWrapup

After completing an installation:

Now try a reboot.  (If needed, swap your SCSI IDs first.)
The Sun monitor normally tries to load a file called "vmunix".
On OpenBOOT ROM systems you can change it to load OpenBSD instead using
the following commands:

On version 1 OpenBOOT ROMs:
    >n
    ok setenv boot-from sd(0,0,0)bsd
    ok

On version 2 OpenBOOT ROMs:
    ok setenv boot-file bsd
    ok setenv boot-device /sbus/esp/sd@@0,0

On sun4 systems, you may not need to specify the boot file, as
the OpenBSD boot blocks will look for "bsd" on the boot device by default.

OpenBSDCongratulations


Net Boot or Diskless Setup Information:

The set up is similar to SunOS diskless setup, but not identical, because
the Sun setup assumes that the bootblocks load a kernel image, which then
uses NFS to access the exported root partition, while the OpenBSD bootblocks
use internal NFS routines to load the kernel image directly from the
exported root partition.

Please understand that no one gets this right the first try, since
there is a lot of setup and all the host daemons must be running and
configured correctly.  If you have problems, extract the diskless(8)
manpage, find someone who's been through it before and use the host
syslog and tcpdump(8) to get visibility of what's happening (or not).

Your SPARCstation expects to be able to download a second stage bootstrap
program via TFTP after having acquired its IP address through RevARP when
instructed to boot "over the net". It will look for a filename composed of
the machine's IP address followed by the machine's architecture, separated
by a period. For example, a sun4c machine which has been assigned IP
address 130.115.144.11, will make a TFTP request for `8273900B.SUN4C'.
Normally, this file is a symbolic link to an appropriate second-stage
boot program, which should be located in a place where the TFTP daemon
can find it (remember, many TFTP daemons run in a chroot'ed environment).

As an exception to the above rule, sun4e systems make a request for
`/tftpboot/IP_IN_HEX.SUN4E', i.e. the TFTP filename is in a subdirectory.

You can find the boot program as `boot.net' in the OpenBSD/MACHINE
distribution. Unfortunately, many, if not all, sun4e PROM have a bug and
fail to load a file which size is a multiple of 512 bytes. If you are
trying to netboot a sun4e system, simply append some bytes to the
file, like this:
	dd if=/dev/zero bs=32 count=1 >> boot.net

After the boot program has been loaded into memory and given control by
the PROM, it starts locating the machine's remote root directory through
the BOOTPARAM protocol. First a BOOTPARAM WHOAMI request is broadcast
on the local net. The answer to this request (if it comes in) contains
the client's name. This name is used in the next step, a BOOTPARAM GETFILE
request -- sent to the server that responded to the WHOAMI request --
requesting the name and address of the machine that will serve the client's
root directory, as well as the path of the client's root on that server.

Finally, this information (if it comes in) is used to issue a REMOTE MOUNT
request to the client's root filesystem server, asking for an NFS file
handle corresponding to the root filesystem. If successful, the boot
program starts reading from the remote root filesystem in search of the
kernel which is then read into memory.

You will want export the miniroot{:--:}OSrev.fs filesystem to the client.  You
can dd this filesystem image to some spare partition, mount and export
that partition, or use tar to copy the contents to a more convenient spot.

Alternatively you can build a bootable partition from the distribution sets
as follows:

Unpack `base{:--:}OSrev.tgz' on the server in the root directory for your
target machine. If you elect to use a separately NFS-mounted filesystem for
`/usr' with your diskless setup, make sure the "./usr" base files in
base{:--:}OSrev.tgz end up in the correct location. One way to do this is
to temporarily use a loopback mount on the server, re-routing <root>/usr to
your server's exported OpenBSD "/usr" directory. Also put the kernel and
the install/upgrade scripts into the root directory.

A few configuration files need to be edited:

	<root>/etc/hosts
		Add the IP addresses of both server and client.

	<root>/etc/myname
		This files contains the client's hostname; use the same
		name as in <root>/etc/hosts.

	<root>/etc/fstab
		Enter the entries for the remotely mounted filesystems.
		For example:
			server:/export/root/client       /     nfs  rw 0 0
			server:/export/exec/sun4.OpenBSD /usr  nfs  rw 0 0

OpenBSDInstNFS



OpenBSDUnattendedInstallation
@


1.78
log
@Remove `installing from SunOS' and `installing from Solaris' instructions.
They are much more troublesome than using the miniroot, and if you're actually
still running a SunOS setup in 2015, then you're me, and you don't need to be
told this information anyway.

Do not suggest disks might be shared between OpenBSD and SunOS or Solaris
anymore. This is just asking for trouble.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.77 2015/03/27 20:40:36 miod Exp $
d274 4
@


1.77
log
@Fix horrible typo in the sun4e netboot instructions causing them to be
ineffective.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.76 2015/01/11 21:02:55 miod Exp $
a17 5
It is also possible to install OpenBSD "manually" from a running SunOS
or Solaris system, using the system tools, as well as gunzip (and gnu tar
on SunOS); see ``Installing from SunOS'' or ``Installing from Solaris''
below.

a191 181


Installing from SunOS:

You need a SunOS machine to install OpenBSD.  You also need at
least the following pieces:

  - the *.tgz files you want to install (as a minimum, base{:--:}OSrev.tgz and
    etc{:--:}OSrev.tgz)
  - gunzip (GNU gzip) SunOS binary
  - gtar (GNU tar) SunOS binary
  - a "/boot" file from a SunOS machine that matches your machine type
    (e.g. sun4m or sun4c)
  - an OpenBSD kernel, most likely "/bsd"

All these pieces, except "/boot" and the GNU utilities, are supplied in
the OpenBSD/MACHINE distribution.

You need to format and partition the disk using SunOS (since
OpenBSD/MACHINE uses SunOS disk labels.)  Give yourself adequate
partition sizes.  Here is an example layout:

    partition    size   offset	  will be..
    sd0a        80000        0	  /
    sd0b       256000    80000	  swap
    sd0c      4165271        0	  `whole disk'
    sd0d       100000   436000    /var
    sd0f       100000   336000    /tmp
    sd0g      3229271   936000    /usr
    sd0h       400000   536000    /var/tmp

Use SunOS to newfs the partitions which will have filesystems on them.
(OpenBSD's filesystem format is almost identical to SunOS.)

    sunos# newfs /dev/rsd0a
    [... lots of output]

Repeat for any other partition (in this example, /dev/rsd0d, /dev/rsd0f,
/dev/rsd0g, /dev/rsd0h).

NOTE: If you are able to, there is a performance benefit from
newfs'ing using OpenBSD.  If you newfs using the OpenBSD newfs command,
be sure to use the -O flag for your / partition, so that newfs will
use the 4.3BSD filesystem format, rather than the new 4.4BSD filesystem
format.  If you forget, you will not be able to boot -- the SunOS boot
blocks do not understand the extended 4.4BSD filesystem format.

Mount those partitions in a tree formation, under /mnt; ie:

    sunos# df
    Filesystem            kbytes    used   avail capacity  Mounted on
    [...]
    /dev/sd0a              38427       0   38427     0%    /mnt
    /dev/sd0d              48249       0   48249     0%    /mnt/var
    /dev/sd0f              48249       0   48249     0%    /mnt/tmp
    /dev/sd0g            1564024       0 1564024     0%    /mnt/usr
    /dev/sd0h             193536       0  193536     0%    /mnt/var/tmp

Place a standard SunOS "boot" program in /mnt (your new root
partition), and use the SunOS command "installboot" to make it work.
The installboot man page says to do something like this:

    sunos# cp /usr/mdec/sdboot /mnt/boot
    sunos# sync; sync
    sunos# /usr/mdec/installboot -vlt /mnt/boot /usr/mdec/bootsd /dev/rsd2a

You can now extract the provided "*.tgz" files onto your disk.

    sunos# ls -FC
    base{:--:}OSrev.tgz      comp{:--:}OSrev.tgz      man{:--:}OSrev.tgz       xfont{:--:}OSrev.tgz
    bsd             etc{:--:}OSrev.tgz       xbase{:--:}OSrev.tgz     xserv{:--:}OSrev.tgz
    bsd.rd          game{:--:}OSrev.tgz      xetc{:--:}OSrev.tgz      xshare{:--:}OSrev.tgz
    sunos{:-#-:} gunzip < base{:--:}OSrev.tgz | (cd /mnt; gtar xvpf -)
    [...] for each set

And finally copy the OpenBSD kernel onto your disk.

    sunos# cp bsd /mnt/bsd

The GNU gunzip and gtar programs are not distributed as part of SunOS,
but may be present in your /usr/local/bin.  If not, you will need to
obtain them from a GNU archive and install before proceeding.  The
OpenBSD tar files are in the "new format" that includes directory
information, and the standard SunOS tar will not extract from them
successfully.

After the files have been extracted, set up /mnt/etc/fstab to match
your actual disk layout.  (Minus the "/mnt" component of each path, of
course :-)

Now proceed to reboot the machine and then customize your installation.


Installing from Solaris:

You need a machine running under Solaris to install OpenBSD.  You will
also need at least the following pieces:

- the *.tgz files you want to install (as a minimum, base{:--:}OSrev.tgz and
  etc{:--:}OSrev.tgz)
- gunzip (GNU gzip) Solaris binary
- a boot block file from a Solaris machine that matches your machine type,
  for ufs filesystem, such as /usr/platform/`uname -i`/lib/fs/ufs/bootblk
- an OpenBSD kernel, most likely "/bsd"

All these pieces, except the boot block and the GNU utilities, are supplied
in the OpenBSD/MACHINE distribution.

You need to format and partition the disk using Solaris (since
OpenBSD/MACHINE uses Sun compatible disk labels).  Give yourself adequate
partition sizes.  Here is an example layout:

    solaris# prtvtoc -s /dev/rdsk/c0t1d0s2
    *                          First     Sector    Last
    * Partition  Tag  Flags    Sector     Count    Sector  Mount Directory
           0      2    00          0     80000     79999   /
           1      3    01      80000    256000    335999
           2      5    00          0   4165271   4165270
           3      7    00     336000    100000    435999   /tmp
           4      7    00     436000    100000    535999   /var
           5      7    00     536000    400000    935999   /var/tmp
           6      4    00     936000   3229271   4165270   /usr

Use Solaris to newfs the partitions which will have filesystems on them.
(OpenBSD's filesystem format is almost identical to Solaris.)

    solaris# newfs /dev/rdsk/c0t1d0s0
    [... lots of output]

Repeat for any other partition (in this example, /dev/rdsk/c0t1d0s3,
/dev/rdsk/c0t1d0s4, /dev/rdsk/c0t1d0s5 and /dev/rdsk/c0t1d0s6).

dnl XXX I had no time to check the -O restriction is still necessary.
NOTE: If you are able to, there is a performance benefit from
newfs'ing using OpenBSD.  If you newfs using the OpenBSD newfs command,
be sure to use the -O flag for your / partition, so that newfs will
use the 4.3BSD filesystem format, rather than the new 4.4BSD filesystem
format.  If you forget, you will not be able to boot -- the Solaris boot
blocks do not understand the extended 4.4BSD filesystem format.

Mount those partitions in a tree formation, under /mnt; ie:

    solaris# df -k
    Filesystem            kbytes    used   avail capacity  Mounted on
    [...]
    /dev/dsk/c0t1d0s0      38427       0   38427     0%    /mnt
    /dev/dsk/c0t1d0s3      48249       0   48249     0%    /mnt/tmp
    /dev/dsk/c0t1d0s4      48249       0   48249     0%    /mnt/var
    /dev/dsk/c0t1d0s5     193536       0  193536     0%    /mnt/var/tmp
    /dev/dsk/c0t1d0s6    1564024       0 1564024     0%    /mnt/usr

Place the boot block in /mnt (your new root partition), and use the Solaris
command "installboot" to make it work.
The installboot man page says to do something like this:

    solaris# cp /usr/platform/`uname -i`/lib/fs/ufs/bootblk /mnt/bootblk
    solaris# sync; sync
    solaris# /usr/sbin/installboot /mnt/bootblk /dev/rdsk/c0t1d0s0

You can now extract the provided "*.tgz" files onto your disk.

    solaris# ls -FC
    base{:--:}OSrev.tgz      comp{:--:}OSrev.tgz      man{:--:}OSrev.tgz       xfont{:--:}OSrev.tgz
    bsd             etc{:--:}OSrev.tgz       xbase{:--:}OSrev.tgz     xserv{:--:}OSrev.tgz
    bsd.rd          game{:--:}OSrev.tgz      xetc{:--:}OSrev.tgz      xshare{:--:}OSrev.tgz
    solaris{:-#-:} gunzip < base{:--:}OSrev.tgz | (cd /mnt; tar xvpf -)
    [...] for each set

And finally copy the OpenBSD kernel onto your disk.

    solaris# cp bsd /mnt/bsd

The GNU gunzip program is not distributed as part of Solaris, but may be
present in your /usr/local/bin.  If not, you will need to obtain it from a
GNU archive and install before proceeding.

After the files have been extracted, set up /mnt/etc/fstab to match
your actual disk layout.  (Minus the "/mnt" component of each path, of
course :-)

Now proceed to reboot the machine and then customize your installation.
@


1.76
log
@No more etc set, also sparc nowadays needs more than 16MB to boot multiuser.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.75 2014/03/19 01:59:49 tedu Exp $
d412 1
a412 1
	dd if=/dev/zero bs=32b count=1 >> boot.net
@


1.75
log
@you are still welcome to install from tape, but as befits an elite master
of unix arcana, we will not condescend to tell you how. why spoil the fun?
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.74 2011/06/15 21:36:48 miod Exp $
d436 4
a439 4
Unpack `base{:--:}OSrev.tgz' and `etc{:--:}OSrev.tgz' on the server in the root directory
for your target machine. If you elect to use a separately NFS-mounted
filesystem for `/usr' with your diskless setup, make sure the "./usr" base
files in base{:--:}OSrev.tgz end up in the correct location. One way to do this is
@


1.74
log
@Stop providing a bsd.scsi3 kernel on sparc. If you have a system with multiple
disks and scsi id#3 as the boot device, by all means, use DUIDs to mount your
filesystems and it won't matter what sd unit number the boot disk attaches with.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.73 2011/03/09 17:11:40 ian Exp $
d6 1
a6 1
installation floppy, or an installation tape, depending on your hardware.
a123 24
Booting from SCSI tape:

Boot the miniroot by typing the appropriate command at the PROM:

	> b st(,,1)			# for sun4 monitors
					# (not working currently)
	ok boot st(,,1)			# for version 1 OpenBOOT ROMs
	ok boot tape:1			# for version 2 OpenBOOT ROMs
	ok boot /sbus/esp/st@@4,0:1	# for version 2 OpenBOOT ROMs
					# that won't take tape:n syntax.
	
The above instructions assume your tape drive is the default tape drive
using SCSI ID 4. If your drive uses ID 5, modify the boot command
accordingly:

	> b st(,28,1)		# example - 2nd tape drive on sun4 monitors
	ok boot st(,5,1)	# example - 2nd tape drive on v1 OpenBOOT ROM
	ok boot tape1:1		# example - 2nd tape drive on v2 OpenBOOT ROM
	ok boot /sbus/esp/st@@5,0:1	# example - 2nd tape drive on v2
					# OpenBOOT ROM that won't take
					# tape:n syntax
	


d144 1
a144 1
Installing using the Floppy, CD-ROM, tape, miniroot or netboot procedure:
d165 1
a165 1
OpenBSDInstallPart6({:-CD-ROM, tape, -:})
a173 2

OpenBSDTAPEInstall(2)
@


1.73
log
@Mention need for 512-byte CDROM drive on older SPARCs, discussed w/ miod@@ ok krw@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.71 2010/07/10 19:38:37 miod Exp $
d292 3
a294 3
    base{:--:}OSrev.tgz      comp{:--:}OSrev.tgz   man{:--:}OSrev.tgz       xserv{:--:}OSrev.tgz
    bsd             etc{:--:}OSrev.tgz    xbase{:--:}OSrev.tgz
    bsd.scsi3       game{:--:}OSrev.tgz   xfont{:--:}OSrev.tgz
d298 1
a298 1
And finally copy an OpenBSD kernel (either bsd or bsd.scsi3) onto your disk.
d300 1
a300 1
    sunos# cp bsd.scsi3 /mnt/bsd
d385 3
a387 3
    base{:--:}OSrev.tgz      comp{:--:}OSrev.tgz   man{:--:}OSrev.tgz       xserv{:--:}OSrev.tgz
    bsd             etc{:--:}OSrev.tgz    xbase{:--:}OSrev.tgz
    bsd.scsi3       game{:--:}OSrev.tgz   xfont{:--:}OSrev.tgz
d391 1
a391 1
And finally copy an OpenBSD kernel (either bsd or bsd.scsi3) onto your disk.
d393 1
a393 1
    solaris# cp bsd.scsi3 /mnt/bsd
@


1.72
log
@the misc set went away
@
text
@d95 4
@


1.71
log
@sun4e bits
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.70 2010/03/16 17:23:09 miod Exp $
d288 3
a290 3
    base{:--:}OSrev.tgz      comp{:--:}OSrev.tgz   man{:--:}OSrev.tgz       xfont{:--:}OSrev.tgz
    bsd             etc{:--:}OSrev.tgz    misc{:--:}OSrev.tgz      xserv{:--:}OSrev.tgz
    bsd.scsi3       game{:--:}OSrev.tgz   xbase{:--:}OSrev.tgz
d381 3
a383 3
    base{:--:}OSrev.tgz      comp{:--:}OSrev.tgz   man{:--:}OSrev.tgz       xfont{:--:}OSrev.tgz
    bsd             etc{:--:}OSrev.tgz    misc{:--:}OSrev.tgz      xserv{:--:}OSrev.tgz
    bsd.scsi3       game{:--:}OSrev.tgz   xbase{:--:}OSrev.tgz
@


1.70
log
@Jumbo commit for 4.7 installation instructions:
- do not mention tape as an installation media on systems where it is very
  unlikely that a tape drive can be connected to (i.e. anything with only
  USB as expansion capabilities)
- do not mention that fetching the installation sets from a partition is
  ``for upgrades only''. You may do this for installation, but of course
  you can not use a partition which will be newfs'ed for that purpose.
- mention ext2fs partitions as possible installation sets source only on
  platforms where the installation media actually can mount an ext2fs
  filesystem.
- stress the fact that the sparc miniroot image is a GENERIC kernel with
  a little on-disk filesystem, and not a RAMDISK kernel with a little
  in-memory filesystem, and thus must not be overwritten during installation
  (i.e. be careful if you repartition the disk the miniroot has been put on).
- more conv=sync -> conv=osync for tape setup instructions.
- model-specific layout changes on armish, loongson and socppc instructions.
- fix various typos and grammar mistaeks.

"sure" deraadt@@ (without eyeballing)
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.69 2009/05/13 18:38:29 miod Exp $
d426 2
a427 18
You can find the boot program in `/usr/mdec/boot' in the OpenBSD/MACHINE
distribution. Unfortunately, it is necessary to install this file
differently for sun4 and sun4c clients: the sun4 version needs to have its
`a.out' header stripped off (otherwise the machine will crash), while the
sun4c version must retain it (otherwise the PROM will complain).

Here's an example to illustrate this whole mess:

    server# cd /<client-root-dir>/usr/mdec
    if client is a sun4:
	server# set SKIP=1
	server# set KARCH=SUN4
    else
	server# set SKIP=0
	server# set KARCH=SUN4C
    server{:-#-:} dd if=boot of=/tftpboot/boot.MACHINE.OpenBSD.$KARCH skip=$SKIP bs=32
    server# cd /tftpboot
    server{:-#-:} ln -s boot.MACHINE.OpenBSD.$KARCH 8273900B.$KARCH
d429 6
@


1.69
log
@Better disk partitioning details, especially for MBR + disklabel or
HFS + disklabel setups.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.68 2009/05/12 21:06:51 miod Exp $
d4 2
a5 4
There are several ways to install OpenBSD onto a disk. The easiest way
in terms of preliminary setup is to use the OpenBSD miniroot that can
be booted off your local disk's swap partition. The normal way is to
use the OpenBSD CD-ROM, or the bootable CD-ROM mini image, or an
d7 4
d185 1
a185 1
OpenBSDInstallPart6({:-CD-ROM, -:})
d191 1
a191 1
OpenBSDDISKInstall(,{:-only -:})
d441 1
a441 1
    server# dd if=boot of=/tftpboot/boot.MACHINE.OpenBSD.$KARCH skip=$SKIP bs=32
d443 1
a443 1
    server# ln -s boot.MACHINE.OpenBSD.$KARCH 8273900B.$KARCH
@


1.68
log
@Try to catch up with installer changes in the installation notes.
Also, the per-platform features are moved to a common place, which makes
the MD layout easier to work on. m4.common is still a tangled mess of subtly
placed dnl, though...
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.67 2008/08/05 22:58:01 miod Exp $
d185 1
a185 3
OpenBSDFTPInstall

OpenBSDHTTPInstall
@


1.67
log
@Better description of the installation steps:
- document questions in proper order: hostname before network configuration,
  DNS only if network is configured, sshd and ntpd, aperture only on
  machines which need it, serial console only on machines which need it.
  This is done by splitting the end of OpenBSDCommonURL in various
  macros, OpenBSDInstallWrapup, OpenBSDInstallAperture, OpenBSDInstallConsole
  and OpenBSDInstallWrapupPart2.
- use the above macros when appropriate, OpenBSDInstallWrapup* being
  mandatory on all arches.
- remove serial console configuration blurb on sparc and sparc64, it is
  handled by OpenBSDInstallConsole now.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.66 2008/03/10 21:38:28 miod Exp $
d175 1
a175 1
OpenBSDBootMsgs(SMD drives are noisy and weight a ton per kilobyte and scare
a178 8
	You will next be asked for your terminal type.  If you are
	installing from a non-serial console, the default of "vt220"
	is correct.  If you are installing from a serial console
	you should choose the terminal type from amongst those listed.
	(If your terminal type is xterm, just use vt220.)

OpenBSDInstallPart3

d181 1
a181 1
OpenBSDInstallPart5(sd0)
d183 1
a183 1
OpenBSDInstallNet({:-CD-ROM, -:},nofloppy)
a188 2
OpenBSDTAPEInstall(2)

d193 3
a195 3
OpenBSDCommonFS
		
OpenBSDCommonURL
a197 2

OpenBSDInstallWrapupPart2
@


1.66
log
@Suggest vt220 as a TERM value for serial-console-in-an-xterm setup everywhere
instead of a mix of vt100 and vt220.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.65 2007/03/01 19:24:45 miod Exp $
d207 4
a230 12

If you will be running your OpenBSD system from a serial console, you may
need to edit /etc/ttys and change the terminal type, and getty method from
"sun" and "suncons" to "vt100" and "std.9600" or something similar.  Also
when running from a serial console, you may wish to adjust the eeprom
settings for input-device, output-device, screen-#columns, and screen-#rows
as appropriate.

In order to use 'tip' on OpenBSD/MACHINE, you'll need to edit /etc/ttys
and add "local" to the end of the tty configuration line, and run
'ttyflags -a' to put your changes into effect.

@


1.65
log
@Your spring jumbo m4-fu. This time:
- mention comp contains an objective-C compiler too.
- rewrite InstallPrelude so that it will only output the ``know your drive
  geometry'' blurb if asked to, and for a specified disk type. Use it for
  non-IDE and non-SCSI disks only, otherwise the kernel is good enough to
  do the job without the users' help.
- similarily, adapt BootMsgs to make the second part of the geometry blurb
  optional, and to accept up to three disk types. Use this to report better
  disk names (i.e. no point saying an scsi disk would show up as sd0 on
  platforms which can't have scsi disks, or won't be able to boot from them).
- in InstallPart4, drop the part about block and fragment sizes in
  disklabel. The defaults are good, and you won't get to change them unless
  you switched to expert mode.
- the default answer to ``wanna get the ftp mirror list, unzel?'' is ``no'',
  so pressing enter to get it is not enough anymore (-:
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.64 2005/04/27 03:07:16 jsg Exp $
d180 2
a181 2
	installing from a keyboard/monitor console, the default of
	"sun" is correct.  If you are installing from a serial console
d183 1
a183 1
	(If your terminal type is xterm, just use vt100.)
@


1.64
log
@[sS]parc -> SPARC when not talking about a port.
ok brad@@ miod@@
@
text
@d1 2
a2 2
dnl	$OpenBSD: install,v 1.63 2005/03/21 22:32:07 miod Exp $
OpenBSDInstallPrelude
d175 3
a177 8
OpenBSDBootMsgs

	While booting, you will probably see several warnings.  You
	may be warned that the kernel can't figure out what device
	it booted from.  Do not be alarmed, this is completely normal.
	This warning occurs because while OpenBSD/MACHINE can boot from
	the floppy drive, the kernel itself lacks a floppy driver for some
	MACHINE models.
@


1.63
log
@Sync tape install details with the install script, mostly a numbering
change for files on the tape.

Prompted by and discussed with claudio@@.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.62 2004/03/25 08:38:52 tom Exp $
d10 1
a10 1
If your Sparc is hooked up to a network, try and find a server to
d441 1
a441 1
Your Sparcstation expects to be able to download a second stage bootstrap
@


1.62
log
@Various typos

ok miod@@ deraadt@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.61 2004/03/17 09:25:10 jmc Exp $
d202 1
a202 1
OpenBSDTAPEInstall(3)
@


1.61
log
@grammar, consistency fixes, and typos;
ok miod@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.60 2004/03/16 08:25:00 jmc Exp $
d251 1
a251 1
  - the *.tgz files you want to install (as a minimum, base{:--:}OSrev.tgzand
@


1.60
log
@typos and consistency fixes;
ok miod@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.59 2004/02/09 13:32:51 todd Exp $
d10 2
a11 2
If your Sparc is hooked up to a network and you can find a server to
arrange for a diskless setup, which is a convenient way to install on a
d30 1
a30 1
be it a SunOS or OpenBSD CD-ROM or OpenBSD install diskettes is good
d36 1
a36 1
on the system architecture and age, you may needed to reference the PROM
d61 1
a61 1
Note that OpenBoot Proms also do the Sun SCSI-ID shuffle for disks, this
d83 1
a83 1
executable sizes and then the kernel copyright and device probe
d106 1
a106 1
drive vs. scsi-id shuffling and partition a=0, b=1...
d130 1
a130 1
using SCSI id 4. If your drive uses id 5, modify the boot command
d145 1
a145 1
you are using a OpenBSD system as the boot-server, have a look at the
d188 1
a188 1
	(If your terminal type is xterm, just use vt100).
d214 1
a214 1
Now try a reboot.  (If needed, swap your scsi id's first).
d259 1
a259 1
All these pieces, except "/boot" and the GNU utilities are supplied in
d310 1
a310 1
You can now extract the provided "*.tgz files onto your disk.
d349 1
a349 1
All these pieces, except the boot block and the GNU utilities are supplied
d353 1
a353 1
OpenBSD/MACHINE uses Sun compatible disk labels.)  Give yourself adequate
d368 1
a368 1
(OpenBSD's filesystem format is almost identical to Solaris).
d403 1
a403 1
You can now extract the provided "*.tgz files onto your disk.
d446 1
a446 1
address 130.115.144.11, will make an TFTP request for `8273900B.SUN4C'.
d488 1
a488 1
that partition or use tar to copy the contents to a more convenient spot.
@


1.59
log
@be accurate now that SunOS compat output does not exist in MAKEDEV; ok miod@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.58 2003/03/24 11:33:57 miod Exp $
d10 1
a10 1
If your Sparc is hooked up in a network and you can find a server to
d14 1
a14 1
use afterwards.  (see ``Installing using a diskless setup'' below).
d57 1
a57 1
enter then "n" command to enter the "new command mode".  You can set this
d144 1
a144 1
First, you must setup a diskless client configuration on a server. If
d186 1
a186 1
	"sun" if correct.  If you are installing from a serial console
d276 1
a276 1
(OpenBSD's filesystem format is almost identical to SunOS).
d330 1
a330 1
After the files have been extracted, setup /mnt/etc/fstab to match
d334 1
a334 1
Now proceed to reboot the machine and the customize your installation.
d420 1
a420 1
After the files have been extracted, setup /mnt/etc/fstab to match
d424 1
a424 1
Now proceed to reboot the machine and the customize your installation.
d475 1
a475 1
the client's name. This name is used in next step, a BOOTPARAM GETFILE
@


1.58
log
@Tweak a few texts to cope with the fact that we ship official OpenBSD CD-ROM
and bootable CD-ROM mini images on some platforms, too. Mention such a mini
image for alpha, consistent spelling of CD-ROM, and a few minor updates not
worth mentioning I had lying in my tree.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.57 2003/02/15 21:22:08 miod Exp $
d516 1
a516 11
Now you must populate the `/dev' directory for your client. If the server
runs SunOS 4.x, you can simply change your working directory to `<root>/dev'
and run the MAKEDEV script: `sh MAKEDEV all' (this might require the edition
of MAKEDEV to change the PATH for it to work properly).

On SunOS 5.x systems, MAKEDEV can also be used, but there'll be error
messages about unknown user and groups. These errors are inconsequential
for the purpose of installing OpenBSD. However, you may want to correct them
if you plan to the diskless setup regularly. In that case, you may re-run
MAKEDEV on your OpenBSD machine once it has booted.

@


1.57
log
@Put back upgrade texts.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.56 2003/01/04 00:18:09 miod Exp $
d6 3
a8 2
be booted off your local disk's swap partition.   The normal way is to
use the OpenBSD installation floppy, or an installation tape.
d88 1
a88 1
Not all MACHINE systems support bootable CDROMS and the current
@


1.56
log
@Various typos and inaccuracies; David Krause
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.55 2002/12/30 11:13:01 miod Exp $
d189 1
a189 14
dnl put this back for 3.3
dnl OpenBSDInstallPart3
	After entering the terminal type you will be asked whether you
	wish to do an "(I)nstall".  Enter 'I' for a fresh installation.
	Note that you cannot upgrade a previous OpenBSD installation
	to 3.2.

	You will be presented with a welcome message and asked if
	you really want to continue. Assuming you answered yes, the
	install program will then tell you which disks of that type
	it can install on, and ask you which it should use.  The name
	of the disk is typically "sd0" for SCSI drives.
	Reply with the name of your disk.
dnl end put this back
d498 1
a498 3
dnl put back after 3.2
dnl the install/upgrade scripts into the root directory.
the install script into the root directory.
@


1.55
log
@Do not mention NFS as a possible tarballs source when the installation media
does not support NFS mounts.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.54 2002/07/25 19:29:32 miod Exp $
d530 1
a530 1
Now you must populate the the `/dev' directory for your client. If you server
@


1.54
log
@Due to changes having already occured, and more being cooked at this
very moment, OpenBSD/sparc installation media will not allow upgrades
to 3.2.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.53 2002/06/09 05:53:54 todd Exp $
d208 1
a208 1
OpenBSDInstallNet({:-CD-ROM, NFS, -:},nofloppy)
a217 2
OpenBSDNFSInstall

@


1.53
log
@knf
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.52 2002/04/17 23:32:12 miod Exp $
d189 14
a202 1
OpenBSDInstallPart3
d513 3
a515 1
the install/upgrade scripts into the root directory.
@


1.52
log
@Our m4 generated MAKEDEV will eventually be less SunOS-friendly than they
used to are, if at all; so warn people setting up diskless systems under
SunOS or other operating systems that they might need to edit MAKEDEV for
it to run properly on the host system.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.51 2002/04/09 01:22:23 miod Exp $
d49 1
a49 1
		prompt is "ok", boot command is "boot" uses diskn syntax 
d51 1
a51 1
		boot /sbus/esp/sd@@t,0:p bsd  (where "t" is the scsi target, 
d55 1
a55 1
If you expect your workstation to have an OpenBoot Prom but get a ">", 
d65 1
a65 1
 
d67 1
a67 1
 
d100 1
a100 1
	ok boot /sbus/esp/sd@@3,0:b bsd  # for version 2 OpenBOOT ROMs 
d105 1
a105 1
drive vs. scsi-id shuffling and partition a=0, b=1... 
d110 2
a111 2
	ok boot /sbus/esp/sd@@0,0:b bsd  # example - scsi target 0 on v2  
					# OpenBOOT ROM that won't take 
d216 1
a216 1
The Sun monitor normally tries to load a file called "vmunix".   
d229 1
a229 1
On sun4 systems, you may not need to specify the boot file, as 
d239 1
a239 1
as appropriate.  
d242 1
a242 1
and add "local" to the end of the tty configuration line, and run 
d281 1
a281 1
 
d373 1
a373 1
 
@


1.51
log
@Since the installation procedure will list all the supported media flags
via ifconfig -m, there is no need to suggest canonical media flags on
some arches, especially since the end user might have a different
interface with different flags; instead, be more cosy and mention that
looking at the manual page for the interface might be helpful for
desperate cases.

Thus, merge the OpenBSDInstallNet and OpenBSDInstallNet2 macros, and
remove thde in-between text for the arches that had such a paragraph.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.50 2002/04/07 23:31:02 miod Exp $
d519 2
a520 1
and run the MAKEDEV script: `sh MAKEDEV all'.
@


1.50
log
@- remove a few obsolete texts
- fix a few typo and layout issues
- sync hardware lists
- for sparc64, document the patch# for E220R eeprom
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.49 2002/03/30 22:52:58 miod Exp $
d195 1
a195 10
OpenBSDInstallNet(linkflags)dnl
 This is driver dependent, but for
	the MACHINE le(4) driver, the flags usually carry the following
	meaning:

		autoselect	Use existing setting (default)
		10baseT		Use UTP (twisted pair) port
		10base5 	Use AUI port

OpenBSDInstallNet2({:-CD-ROM, NFS, -:},nofloppy)
@


1.49
log
@Factorize more common texts from the ramdisk operation.
No text changes except for harmonization, and the blurb about network
interface flags has bene slightly changed for some arches.
@
text
@d1 1
a1 1
dnl	$OpenBSD$
d82 1
a82 1
executable sizes and then the Kernel copyright and device probe
d224 1
a224 7
Now try a reboot.  (If needed, swap your scsi id's first).  Initially
I'd suggest you "boot sd()bsd -bs", then try multiuser after that.
if you boot single-user the OpenBSD incantation to make the root
filesystem writable is

    OpenBSD# mount -u /dev/sd0a /

@


1.48
log
@Solaris friendly update!
- Provide typical Solaris command lines for creating floppies, dumping
miniroots to disks, and filling tapes.
- Make the tape generation script more versatile.
- When SunOS add_client(8) is mentioned, mention Solaris share(1M) as well.
- Add ``Installing from Solaris'' instructions for sparc and sparc64 ports
- While there, slight fixes to the ``Installing from SunOS'' sections on
  sparc and sun3.
@
text
@d1 1
d189 9
a197 54
	After entering the terminal type you will be greeted by a
	welcome message and asked if you really want to continue.
	Assuming you answered yes, the install program will then tell
	you which disks of that type it can install on, and ask you
	which it should use.  The name of the disk is typically "sd0".
	Reply with the name of your disk.

	Next you will have to edit or create a disklabel for the disk
	OpenBSD is being installed on.  The installation script will
	invoke the text editor allowing you to do this.  Note that
	partition 'c' inside this disk label should ALWAYS reflect the
	entire disk, including any non-OpenBSD portions.  The root file
	system should be in partition 'a', and swap is usually in partition
	'b'.  It is recommended that you create separate partitions for
	root and /usr, you may also want to specify /var and /home
	partitions.

	The swap partition (usually 'b') should have a type of "swap", all
	other native OpenBSD partitions should have a type of "4.2BSD".
	Block and fragment sizes are usually 8192 and 1024 bytes, but can
	also be 16384 and 2048 bytes.

	The install program will now label your disk and ask which file
	systems should be created on which partitions.  It will auto-
	matically select the 'a' partition to be the root file system.
	Next it will ask for which disk and partition you want a file
	system created on.  This will be the same as the disk name (e.g.
	"sd0") with the letter identifying the partition (e.g. "d")
	appended (e.g. "sd0d").  Then it will ask where this partition is
	to be mounted, e.g. /usr.  This process will be repeated until
	you type "done".

	At this point you will be asked to confirm that the file system
	information you have entered is correct, and given an opportunity
	to change the file system table.  Next it will create the new file
	systems as specified, OVERWRITING ANY EXISTING DATA.  This is the
	point of no return.

	After all your file systems have been created, the install program
	will give you an opportunity to configure the network.  The network
	configuration you enter (if any) can then be used to do the install
	from another system using NFS, HTTP or FTP, and will also be the
	configuration used by the system after the installation is complete.

	If you select to configure the network, the install program will
	ask you for a name of your system and the DNS domain name to use.
	Note that the host name should be without the domain part, and that
	the domain name should NOT {:-include-:} the host name part.

	Next the system will give you a list of network interfaces you can
	configure.  For each network interface you select to configure, it
	will ask for the IP address to use, the symbolic host name to use,
	the netmask to use and any media flags to set.  This is driver
	dependent, but for the MACHINE le(4) driver, the flags usually carry
d204 1
a204 19
*** IMPORTANT - these are the correct setting for Sparc ethernet cards,
		the suggestions shown by the install script are generic
		and may or may not be correct...

	After all network interfaces have been configured the install pro-
	gram will ask for a default route and IP address of the primary
	name server to use.  You will also be presented with an opportunity
	to edit the host table.

	At this point you will be allowed to edit the file system table
	that will be used for the remainder of the installation and that
	will be used by the finished system, following which the new file
	systems will be mounted to complete the installation.

	After these preparatory steps have been completed, you will be
	able to extract the distribution sets onto your system.  There
	are several install methods supported; FTP, HTTP, tape, CD-ROM, NFS
	or a local disk partition.  Note that installation from floppies
	is not currently supported.
@


1.47
log
@Fix a few common typos and stuff related to tape installation.
@
text
@d15 3
a17 2
system, using SunOS tools and gnu tar and gunzip (see ``Installing from
SunOS'' below).
d147 2
a148 1
the Sun System/Networks administrators guide constitute a good start).
d323 1
d329 7
a335 7
    the *.tgz files you want to install (as a minimum, base{:--:}OSrev.tgz and
       etc{:--:}OSrev.tgz)
    gunzip (GNU gzip) SunOS binary
    gtar (GNU tar) SunOS binary
    a "/boot" file from a SunOS machine that matches your machine type
	(e.g. sun or sun4c)
    a kernel, most likely "/bsd"
d354 1
a354 1
(OpenBSD's filesystem format is identical to SunOS).
d391 1
a391 1
    base{:--:}OSrev.tgz   comp{:--:}OSrev.tgz   man{:--:}OSrev.tgz       xfont{:--:}OSrev.tgz
d407 90
@


1.46
log
@Remove dangling references (see section foo with no section foo).
@
text
@a156 5
This will cause the kernel provided by the diskless setup to be booted.
After the initial probe messages you'll asked to start the install
or upgrade procedure. Proceed to the section ``Running the installation
scripts'' below.

d260 1
a260 1
	After these preparatory steps has been completed, you will be
d263 2
a264 5
	or a local disk partition.  To install from a tape, the distrib-
	ution sets must have been written to tape prior to running the
	installation program, either as tar images or as gzipped tar
	images.  Note that installation sets on multiple floppies is not
	currently supported.
d270 1
a270 1
OpenBSDTAPEInstall
@


1.45
log
@Update supported hardware list (sync with www page).
Add a list of known to work MBus modules.
Remove mention of manual creation of ttyc and ttyd for 4/300.
Correct the description of le(4) flags.
Mention sun4u are supported by the OpenBSD/sparc64 port.
@
text
@a70 4
After the initial device probe messages you'll asked to start the
install or upgrade procedure. Proceed to the section ``Running the
installation scripts'' below.

a89 4
After the initial device probe messages you'll asked to start the
install or upgrade procedure. Proceed to the section ``Running the
installation scripts'' below.

a113 5
This will cause the kernel contained in the miniroot to be booted.
After the initial device probe messages you'll asked to start the
install or upgrade procedure. Proceed to the section ``Running the
installation scripts'' below.

a136 4
This will cause the kernel contained in the miniroot to be booted.
After the initial device probe messages you'll be asked to start the
install or upgrade procedure. Proceed to the section ``Running the
installation scripts'' below.
d284 1
a284 1
OpenBSDDISKInstall({:-"wdN" or -:},{:-only -:})
a327 4
If you are unfamiliar with UN*X-like system administration, 
it's recommended that you buy a book that discusses it.


d329 1
a329 1
Installing from SunOS.
@


1.44
log
@Update the description of the bsd.rd miniroot behaviour (it will ask
for a terminal first, then I/U/S).
While there, remove a duplicated sentence on hp300 and add the complete
bsd.rd installation description to the vax notes.
@
text
@d78 1
a78 1
	> b sd(,30,0)OSREV/sparc/bsd.rd		# for Sun4 monitors*
d80 2
a81 2
	ok boot sd(,6,0)OSREV/sparc/bsd.rd	# for version 1 OpenBOOT ROMs
	ok boot cdrom OSREV/sparc/bsd.rd	# for version 2 OpenBOOT ROMs
d89 1
a89 1
Not all sparc systems support bootable CDROMS and the current
d261 1
a261 1
	dependent, but for the sparc le(4) driver, the flags usually carry
d264 1
a264 1
		auto		Use existing setting (only setup by netboot)
d341 1
a341 8
If you plan on using the extra serial ports on 4/300 systems, 
you'll need to make sure you have device nodes for them e.g.:
  mknod /dev/ttyc c 12 4
  mknod /dev/ttyd c 12 5
To use these ports for terminals etc, you will want to add them to
/etc/ttys.

In order to use 'tip' on OpenBSD/sparc, you'll need to edit /etc/ttys
d364 1
a364 1
the OpenBSD/sparc distribution.
d367 1
a367 1
OpenBSD/sparc uses SunOS disk labels.)  Give yourself adequate
d465 1
a465 1
You can find the boot program in `/usr/mdec/boot' in the OpenBSD/sparc
d480 1
a480 1
    server# dd if=boot of=/tftpboot/boot.sparc.OpenBSD.$KARCH skip=$SKIP bs=32
d482 1
a482 1
    server# ln -s boot.sparc.OpenBSD.$KARCH 8273900B.$KARCH
@


1.43
log
@Update supported hardware list, fix typos, use m4.common macros
whenever possible, remove obsolete information, etc.

ok fries@@
@
text
@d76 1
a76 1
Booting From CD-ROM installation media:
d197 4
a200 8
	it booted from and that no swap space is present.  Do not be
	alarmed, these are completely normal.  The first warning
	occurs because while OpenBSD/sparc can boot from the floppy
	drive, the kernel itself lacks a floppy driver for some
        architectures.

	Next there will be a prompt asking you for a shell name, just
	hit return to start executing the installation setup script.
@


1.42
log
@Typo: 'eg.' -> 'e.g.'
@
text
@d1 1
a1 2
Installing OpenBSD is a relatively complex process, but if you have
this document in hand it shouldn't be too much trouble.
d6 1
a6 1
use the OpenBSD installation floppy.
d15 2
a16 18
system, using SunOS tools and gnu tar and gunzip (see ``Installing from SunOS''
below).


This section of the install document is really broken into several parts:

	- booting from the installation media
	- the floppy or miniroot install script
	- after completing an installation
	- installing from Sun OS
	- net boot or diskless setup information

The first section gets you up to the point where you've booted the kernel
from whatever media, to where you have to respond to prompts from the
install script(s).  The next two sections describe the path through the
install scripts, and the remainder are notes which might be useful, but
outside the bounds of simple "how to" instructions.

d27 2
a28 2
be it a SunOS or OpenBSD CD-ROM or OpenBSD install diskettes is good insurance 
if you want to be able to "go back" for some reason.
a69 4
After the kernel loads, it will eject the bootable floppy and prompt
for a filesystem floppy - for the two floppy installation insert
the appropriate filesystem floppy, for the ramdisk installation,
just hit return, the filesystem image is internal to the kernel.
d90 2
a91 2
boot image is only known to work on sun4c architectures.  If it
does not work, you'll have to create a boot floppy or bootable
d99 1
a99 1
Booting from SCSI disk (miniroot or floppy image)
d128 1
a128 1
Booting from SCSI tape
d156 1
a156 1
Installing using a diskless setup.
d182 1
a182 7
The following is a walk-through of the steps you will take while
getting OpenBSD installed on your hard disk.  If any question has a
default answer, it will be displayed in brackets ("[]") after the
question.  If you wish to stop the installation, you may hit Control-C
at any time, but if you do, you may have to begin the installation
process again from scratch.  Using Control-Z to suspend the process
may be a better option. 
d193 1
a193 8
	You will then be presented with the OpenBSD kernel boot
	messages.  You will want to read them to determine your
	disk's name and geometry.  Its name will be something like
	"sd0" or "wd0" and the geometry will be printed on a line that
	begins with its name.  As mentioned above, you will need your
	disk's geometry when creating OpenBSD partitions.  You will
	also need to know the device name to tell the install tools
	what disk to install on.
d210 1
a210 4
	(If your terminal type is xterm, just use vt100).  Next you
	will be prompted for a choice of which text editor to use at
	several places in the install script.  You will probably want
	to use "vi" if your terminal supports this.
a355 4
On installing X11 for OpenBSD/sparc, you may wish to add a line similar to
'ldconfig /usr/X11R6/lib' to the end of your /etc/rc.local file.  This will
add the X libraries to your dynamic linking search path at boot time.

d366 2
a367 1
    the *.tgz files you want to install (as a minimum, base{:--:}OSrev.tgz)
d382 7
a388 7
    sd2a        28140        0	  /
    sd2b        16170    28140	  swap
    sd2c       204540        0	  `whole disk'
    sd2g       160230    44310	  /usr

BTW, These are not recommended sizes.  They simply match the first
(tiny) disk that OpenBSD/sparc ran on.
d393 1
a393 3
    sunos# newfs /dev/rsd2a
    [... lots of output]
    sunos# newfs /dev/rsd2g
d395 3
d411 5
a415 2
    /dev/sd2a              11501       0   11501     0%    /mnt
    /dev/sd2g             179529       0  179529     0%    /mnt/usr
d439 5
a443 4
but may be present in your local/bin.  If not, you will need to obtain
them from a GNU archive and install before proceeding.  The OpenBSD
tar files are in the "new format" that includes directory information,
and the standard SunOS tar will not extract from them successfully.
@


1.41
log
@more cleanup before bed time
@
text
@d275 4
a278 4
	system created on.  This will be the same as the disk name (eg.
	"sd0") with the letter identifying the partition (eg. "d")
	appended (eg. "sd0d").  Then it will ask where this partition is
	to be mounted, eg. /usr.  This process will be repeated until
@


1.40
log
@more killing of two floppy install references
@
text
@d7 1
a7 1
use the OpenBSD installation floppies.
d43 1
a43 1
the installation.  Have the installation media for the prior installation,
d201 1
a201 2
Installing using the Single Floppy, CD-ROM, tape, miniroot or
netboot procedure:
d216 2
a217 2
	stopped and nothing further has happened, either your boot medias
	is probably bad, your diskless setup isn't correct or you may have
d237 2
a238 6
	When the loading process is complete, the boot floppy will be
	ejected and you will be prompted to insert a filesystem floppy,
	just hit return since the filesystem is contained in the kernel
	image just loaded.  Next there will be a prompt asking you for
	a shell name, just hit return to start executing the installation
	setup script.
d301 7
a307 8
	the netmask to use and any interface-specific flags to set.  The
	interface-specific flags are usually used to determine which media
	the network card is to use.  This is driver dependent, but for the
	sparc le(4) driver, the flags usually carry meaning:

		-link0 -link1	Use existing setting (only setup by netboot)
		link0 -link1	Use UTP (twisted pair) port
		-link0 link1 	Use AUI port
@


1.39
log
@two floppy install died awhile ago
@
text
@d23 1
a23 1
	- the single floppy or miniroot install script
@


1.38
log
@Document (and fix) bootable tape creation and use
@
text
@a21 1
	- About the "new" and "old" Install Scripts
d23 1
a23 2
	- the "new" single floppy or miniroot install script
	- the "old" multiple floppy install script
d28 5
a32 7
The first section explains why we have two different install scripts.
The second section gets you up to the point where you've booted the kernel
from whatever media or setup described in the previous section, to where
you have to respond to prompts from the install script(s).  The next two
sections describe the path through the "new" and "old" install scripts, 
which are quite different, and the remainder are notes which might be
useful, but outside the bounds of simple "how two" instructions.
a35 16
About the "new" and "old" Install Scripts:

The OpenBSD/sparc floppies come in two varieties, a newer single floppy
"ramdisk" version and the older multi-floppy set.  Both accomplish the 
same thing, but the install/upgrade scripts and procedures are quite 
different between the old and new version.

The other difference between the the two forms are in their bootblocks,
and filesystems.  The "floppy{:--:}OSrev.fs" image is the compressed ramdisk form,
the "kc{:--:}OSrev.fs" paired with either "inst{:--:}OSrev.fs" or "upgr{:--:}OSrev.fs" comprise a
bootable kernel floppy and associated install/upgrade filesystem floppy.

The CD-ROM, miniroot and netboot install scripts are essentially the
same as the new single floppy install script.


d201 1
a201 1
Installing using the "new" Single Floppy, CD-ROM, tape, miniroot or
a352 31

Installing using the old Multi-Floppy procedure.


If you are upgrading a OpenBSD installation, start the upgrade script:

OpenBSD# sh upgrade.sh

else, start the installation script:

OpenBSD# sh install.sh


These scripts will do most of the work of transferring the system from the
tar files onto your disk. You will frequently be asked for confirmation
before the script proceeds with each phase of the installation process.
Occasionally, you'll have to provide a piece of information such as the
name of the disk you want to install on or IP addresses and domain names
you want to assign. If your system has more than one disk, you may want
to look at the output of the dmesg(8) command to see how your disks
have been identified by the kernel.

The installation script goes through the following phases:

	- determination of the disk to install OpenBSD on
	- checking of the partition information on the disk
	- creating and mounting the OpenBSD filesystems
	- setup of IP configuration
	- extraction of the distribution tar files
	- installation of boot programs

@


1.37
log
@tweaks/OSrev/cleaning/'.tar.gz -> .tgz' .. etc ..
@
text
@d119 2
a120 1
	> b sd(,30,0)OSREV/sparc/bsd.rd		# for Sun4 monitors* (not working currently)
d122 1
a122 1
	ok boot cdrom OSREV/sparc/bsd.rd		# for version 2 OpenBOOT ROMs
d155 1
a155 1
	ok boot sd(0,3,1)bsd	# example - scsi target 0 on V1 OpenBOOT ROM
d164 31
a194 3
After the initial probe messages you'll asked to start the install
or upgrade procedure. Proceed to the section ``Running the installation
scripts'' below.
d221 2
a222 2
Installing using the "new" Single Floppy, CD-ROM, miniroot or netboot
procedure:
@


1.36
log
@OSREV & OSrev fixups
@
text
@d435 1
a435 1
    the *.tar.gz files you want to install (as a minimum, base{:--:}OSrev.tar.gz)
d489 1
a489 1
You can now extract the provided "*.tar.gz files onto your disk.
d492 4
a495 4
    base{:--:}OSrev.tar.gz   comp{:--:}OSrev.tar.gz   man{:--:}OSrev.tar.gz       xfont{:--:}OSrev.tar.gz
    bsd             etc{:--:}OSrev.tar.gz    misc{:--:}OSrev.tar.gz      xserv{:--:}OSrev.tar.gz
    bsd.scsi3       game{:--:}OSrev.tar.gz   xbase{:--:}OSrev.tar.gz
    sunos{:-#-:} gunzip < base{:--:}OSrev.tar.gz | (cd /mnt; gtar xvpf -)
d581 1
a581 1
Unpack `base{:--:}OSrev.tar.gz' and `etc{:--:}OSrev.tar.gz' on the server in the root directory
d584 1
a584 1
files in base{:--:}OSrev.tar.gz end up in the correct location. One way to do this is
@


1.35
log
@merge text into base
@
text
@d492 3
a494 4
    base{:--:}OSrev.tar.gz      etc{:--:}OSrev.tar.gz       man{:--:}OSrev.tar.gz       secr23.tar.gz
    comp{:--:}OSrev.tar.gz      game{:--:}OSrev.tar.gz      misc{:--:}OSrev.tar.gz
    xbase{:--:}OSrev.tar.gz     xfont{:--:}OSrev.tar.gz     xserv{:--:}OSrev.tar.gz     bsd
    bsd.scsi3
@


1.34
log
@fix better.
@
text
@d493 1
a493 1
    comp{:--:}OSrev.tar.gz      game{:--:}OSrev.tar.gz      misc{:--:}OSrev.tar.gz      text{:--:}OSrev.tar.gz
@


1.33
log
@fix a lie
@
text
@d119 3
a121 3
    > b sd(,30,0){:--:}OSrev/sparc/bsd.rd	# for Sun4 monitors*
    ok boot sd(,6,0){:--:}OSrev/sparc/bsd.rd	# for version 1 OpenBOOT ROMs
    ok boot cdrom {:--:}OSrev/sparc/bsd.rd	# for version 2 OpenBOOT ROMs
d182 3
a184 3
	> b le()bsd		# for sun4 monitors
	ok boot le()bsd		# for version 1 OpenBOOT ROMs
	ok boot net bsd		# for version 2 OpenBOOT ROMs
@


1.32
log
@comment a comment 4 m4
@
text
@d119 3
a121 3
	> b sd(,30,0)bsd	# for Sun4 monitors* (not working currently)
        ok boot sd(,6,0)bsd	# for version 1 OpenBOOT ROMs
        ok boot cdrom bsd	# for version 2 OpenBOOT ROMs
@


1.31
log
@o reference useful footnote throughout
o cdroms not bootable presently for sun4's
@
text
@d496 1
a496 1
    sunos# gunzip < base{:--:}OSrev.tar.gz | (cd /mnt; gtar xvpf -)
@


1.30
log
@s/cpp/m4/g
@
text
@d119 1
a119 1
	> b sd(,30,0)bsd	# for Sun4 monitors (may not work)
d143 1
a143 1
	> b sd(,,1)bsd 			# for sun4 monitors
@


1.29
log
@corrections; david.michael.scott@@gecm.com
@
text
@d13 1
a13 1
use afterwards.  (see `Installing using a diskless setup' below).
d16 1
a16 1
system, using SunOS tools and gnu tar and gunzip (see `Installing from SunOS' 
d48 2
a49 2
and filesystems.  The "floppy23.fs" image is the compressed ramdisk form,
the "kc23.fs" paired with either "inst23.fs" or "upgr23.fs" comprise a
d113 2
a114 2
install or upgrade procedure. Proceed to the section `Running the
installation scripts' below.
d135 2
a136 2
install or upgrade procedure. Proceed to the section `Running the
installation scripts' below.
d164 2
a165 2
or upgrade procedure. Proceed to the section `Running the installation
scripts' below.
d188 2
a189 2
or upgrade procedure. Proceed to the section `Running the installation
scripts' below.
d292 1
a292 1
	the domain name should NOT include the host name part.
d329 5
a333 132
	To install via FTP:
		To begin an FTP install you will need the following
		pieces of information.  Don't be daunted by this list;
		the defaults are sufficient for most people.
		    1) Proxy server URL if you are using a URL-based
		       ftp proxy (squid, CERN ftp, Apache 1.2 or higher).
		       You need to define a proxy if you are behind a
		       firewall that blocks outgoing ftp (assuming you
		       have a proxy available to use).
		    2) Do you need to use passive mode ftp?  Most modern
		       ftp servers are capable of dealing with passive
		       ftp connections.  You only need to enable this
		       option if you are behind a firewall that allows
		       outgoing ftp but blocks incoming tcp ports > 1023.
		       If in doubt say yes to this option.
		       Note that you will not be asked about passive
		       ftp if you are using a proxy.
		    3) The IP address (or hostname if you enabled
		       DNS earlier in the install) of an ftp server
		       carrying the OpenBSD 2.3 distribution.
		       If you don't know, just hit return when
		       asked if you want to see a list of such hosts.
		    4) The ftp directory holding the distribution sets.
		       The default value of pub/OpenBSD/2.3/sparc
		       is almost always correct.
		    5) The login and password for the ftp account.
		       The default will be correct unless you are
		       doing non-anonymous ftp.

		For instructions on how to complete the installation via
		ftp, see the section named "Common URL installations" below.

	To install via HTTP:
		To begin an HTTP install you will need the following
		pieces of information:
		    1) Proxy server URL if you are using a URL-based
		       http proxy (squid, CERN ftp, Apache 1.2 or higher).
		       You need to define a proxy if you are behind a
		       firewall that blocks outgoing http connections
		       (assuming you have a proxy available to use).
		    3) The IP address (or hostname if you enabled
		       DNS earlier in the install) of an http server
		       carrying the OpenBSD 2.3 distribution.
		       If you don't know, just hit return when
		       asked if you want to see a list of such hosts.
		    4) The directory holding the distribution sets.
		       There is no standard location for this;
		       You should use the directory specified
		       along with the server in the list of official
		       http mirror sites that you received in step 3.

		For instructions on how to complete the installation via
		http, see the section named "Common URL installations" below.

	To install from tape:
		In order to install from tape, the distribution sets to be
		installed must have been written to tape previously, either
		in tar format or gzip-compressed tar format.

		You will also have to identify the tape device where the
		distribution sets are to be extracted from.  This will
		typically be "nrst0" (no-rewind, raw interface).

		Next you will have to provide the file number of the set
		that is to be extracted.  Note that the file number starts
		at 1, which is the first file written to the tape.

		The install program will not automatically detect whether
		an image has been compressed, so it will ask for that
		information before starting the extraction.


	To install from CD-ROM:
		When installing from a CD-ROM, you will be asked which
		device holds the distribution sets.  This will typically
		be "cd0".  Next you will be asked which partition 
                on the CD-ROM the distribution is to be loaded from.  
                This is normally partition "a".

		Next you will have to identify the file system type that
		has been used to create the distribution on the CD-ROM,
		this can be either FFS or ISO CD9660.  The OpenBSD CD
		distribution uses the CD9660 format.

		You will also have to provide the relative path to the
		directory on the CD which holds the distribution, for the
		sparc this is "2.3/sparc".

		For instructions on how to complete the installation from
		the CD-ROM distribution, see the section named "Common
		file system installations" below.
		
	To install from a NFS mounted directory:
		When installing from a NFS-mounted directory, you must
		have completed network configuration above, and also
		set up the exported file system on the NFS server in
		advance.

		First you must identify the IP address of the NFS server
		to load the distribution from, and the file system the
		server expects you to mount.

		The install program will also ask whether or not TCP
		should be used for transport (the default is UDP).  Note
		that TCP only works with newer NFS servers.

		You will also have to provide the relative path to the
		directory on the file system where the distribution sets
		are located.  Note that this path should not be prefixed
		with a '/'.

		For instructions on how to complete the installation from
		the CD-ROM distribution, see the section named "Common
		file system installations" below.

	To install from a local disk partition:
		When installing from a local disk partition, you will
		first have to identify which disk holds the distribution
		sets.  This is normally "sdN" or "wdN" where N is a
		number 0 through 9.  Next you will have to identify the
		partition within that disk that holds the distribution,
		this is a single letter between 'a' and 'p'.

		You will also have to identify the type of file system
		residing in the partition identified.  Currently, you can
		only install from partitions that use the fast file system
		(ffs).

		You will also have to provide the relative path to the
		directory on the file system where the distribution sets
		are located.  Note that this path should not be prefixed
		with a '/'.
d335 1
a335 2
		For instructions on how to complete the installation from
		the a local disk partition, see the next section.
d337 1
a337 43
	Common file system installations:
		The following instructions are common to installations
		from local disk partitions, NFS mounted directories and
		CD-ROMs.

		A list of available distribution sets will be listed.  If
		any sets has already been extracted, those will be marked
		with an X.  Enter the name of one distribution set at a
		time, until all desired distribution sets has been
		installed on your system.

	Common URL installations:
		Once you have entered the required information, the
		install program will fetch a file list and present
		a list of all the distribution sets that were found
		in the specified directory.  (If no valid sets were found,
		you will be notified and given the option of unpacking
		any gzipped tar files found or getting a file list if
		none were found.)  If any sets have already been extracted,
		those sets will be marked with an X.

		At this point you may individually select distribution
		sets to install or enter "all" to install all of
		the sets (which is what most users will want to do).
		You may also enter "list" to get a file list or
		"done" when you are done selecting distribution sets.
		(It is also possible to enter an arbitrary filename
		and have it treated as a file set).

		Once you have selected the file sets you want to install
		and entered "done" you will be prompted to verify that
		you really do want to download and install the files.
		Assuming you acquiesce, the files will begin to download
		and unpack.  If not, you will be given the option of
		installing sets via one of the other install methods.


	When all the selected distribution sets has been extracted, you
	will be allowed to select which time zone your system will be
	using, all the device nodes needed by the installed system will
	be created for you and the file systems will be unmounted.  For
	this to work properly, it is expected that you have installed
	at least the "base23" and "etc23" distribution sets.
d339 1
d341 3
d401 7
a407 15
Congratulations, you have successfully installed OpenBSD 2.3.  When you
reboot into OpenBSD, you should log in as "root" at the login prompt.
There is no initial password, but if you're using the machine in a
networked environment, you should create yourself an account and
protect it and the "root" account with good passwords.

Some of the files in the OpenBSD 2.3 distribution might need to be
tailored for your site.  In particular, the /etc/sendmail.cf file will
almost definitely need to be adjusted, and other files in /etc will
probably need to be modified.  If you will be running your OpenBSD 
system from a serial console, you may need to edit /etc/ttys and
change the terminal type, and getty method from "sun" and "suncons"
to "vt100" and "std.9600" or something similar.  Also when running
from a serial console, you may wish to adjust the eeprom settings
for input-device, output-device, screen-#columns, and screen-#rows
d435 1
a435 1
    the *.tar.gz files you want to install (as a minimum, base23.tar.gz)
d492 3
a494 3
    base23.tar.gz      etc23.tar.gz       man23.tar.gz       secr23.tar.gz
    comp23.tar.gz      games23.tar.gz     misc23.tar.gz      text23.tar.gz
    xbase23.tar.gz     xfont23.tar.gz     xserv23.tar.gz     bsd
d496 1
a496 1
    sunos# gunzip < base23.tar.gz | (cd /mnt; gtar xvpf -)
d575 1
a575 1
You will want export the miniroot23.fs filesystem to the client.  You
d582 1
a582 1
Unpack `base23.tar.gz' and `etc23.tar.gz' on the server in the root directory
d585 1
a585 1
files in base23.tar.gz end up in the correct location. One way to do this is
@


1.28
log
@23
@
text
@d275 1
a275 1
	you just hit return.
d609 1
a609 1
    the *.tar.gz files you want to install (as a minimum, base.tar.gz)
d668 2
a669 1
    bsd                bsd.scsi3
d751 1
a751 1
tat partition or use tar to copy the contents to a more convenient spot.
d753 1
a753 1
Alternatively you an build bootable partition from the distribution sets
d756 1
a756 1
Unpack `base.tar.gz' and `etc.tar.gz' on the server in the root directory
d759 1
a759 1
files in base.tar.gz end up in the correct location. One way to do this is
@


1.27
log
@moving to 2.3
@
text
@d48 2
a49 2
and filesystems.  The "floppy22.fs" image is the compressed ramdisk form,
the "kc22.fs" paired with either "inst22.fs" or "upgr22.fs" comprise a
d507 1
a507 1
	at least the "base22" and "etc22" distribution sets.
d666 2
a667 2
    base22.tar.gz      etc22.tar.gz       man22.tar.gz       secr22.tar.gz
    comp22.tar.gz      games22.tar.gz     misc22.tar.gz      text22.tar.gz
d669 1
a669 1
    sunos# gunzip < base22.tar.gz | (cd /mnt; gtar xvpf -)
d748 1
a748 1
You will want export the miniroot22.fs filesystem to the client.  You
@


1.26
log
@update
@
text
@d348 1
a348 1
		       carrying the OpenBSD 2.2 distribution.
d352 1
a352 1
		       The default value of pub/OpenBSD/2.2/sparc
d371 1
a371 1
		       carrying the OpenBSD 2.2 distribution.
d415 1
a415 1
		sparc this is "2.2/sparc".
d567 1
a567 1
Congratulations, you have successfully installed OpenBSD 2.2.  When you
d573 1
a573 1
Some of the files in the OpenBSD 2.2 distribution might need to be
@


1.25
log
@Some Sparc 2's will take boot diskn syntax, but will not take the
disn:p syntax for booting off of the swap partitions.  They will also
refuse the sd(,,1) syntax, so the only option remaining is to use the
boot /sbus.... style syntax.  This is for use with miniroot22.fs type
installs when booting from the swap partition..
@
text
@d16 2
a17 2
system, using SunOS tools and gnu tar and gunzip (see `Installing from
SunOS' below).
d43 3
a45 3
version that is not well tested and the older multi-floppy set.  Both
accomplish the same thing, but the install/upgrade scripts and procedures
are quite different between the old and new version.
d64 2
a65 2
be it a SunOS CD-ROM or *BSD install diskettes is good insurance if you
want to be able to "go back" for some reason.
d126 1
a126 1
action, but no messages or complaints about magic numbers,
@


1.24
log
@typos.
@
text
@d73 1
a73 1
There are three main cases:
d83 6
d143 5
a147 3
	> b sd(,,1)bsd 		# for sun4 monitors
	ok boot sd(,,1)bsd 	# for version 1 OpenBOOT ROMs
	ok boot disk:b bsd 	# for version 2 OpenBOOT ROMs
d156 3
@


1.23
log
@21 -> 22
@
text
@d30 1
a30 1
The first section explains why we have two differnt install scripts.
d47 1
a47 1
The other difference bewtween the the two forms are in their bootblocks,
d60 2
a61 2
does not neccessarily wipe out all the partitions on the hard disk, errors
during the install process can have unforseen consequences and you will
d70 1
a70 1
on the system architecure and age, you may needed to reference the PROM
d76 1
a76 1
		promt is a ">", boot command is "b", uses sd(c,s,p) syntax
d90 1
a90 1
is described elsewere in some detail.  For the purposes of this section,
d103 1
a103 1
the appropriate filesystem flopppy, for the ramdisk installion,
d117 1
a117 1
If the boot is successul, you will get a loader version message,
d124 1
a124 1
boot image is only known to work on sun4c architctures.  If it
d133 1
a133 1
Booting from SCSI disk (miniroot or flopy image)
d198 1
a198 1
	is proably bad, your diskless setup isn't correct or you may have
d216 1
a216 1
        architctures.
d222 1
a222 1
	a shell name, just hit return to start executing the installion
d295 1
a295 1
*** IMPORTANT - these are the correct setting for Sparc ehternet cards,
d687 1
a687 1
there is a lot of setup and all the host deamons must be running and
d734 1
a734 1
rogram starts reading from the remote root filesystem in search of the
d741 1
a741 1
Alternatively you an build bootable partition from the ditribution sets
@


1.22
log
@seriously clean up a mess and try to simplify and update the 'install' section of the install document
@
text
@d48 2
a49 2
and filesystems.  The "floppy21.fs" image is the compressed ramdisk form,
the "kc21.fs" paired with either "inst21.fs" or "upgr21.fs" comprise a
d337 1
a337 1
		       carrying the OpenBSD 2.1 distribution.
d341 1
a341 1
		       The default value of pub/OpenBSD/2.1/sparc
d360 1
a360 1
		       carrying the OpenBSD 2.1 distribution.
d404 1
a404 1
		sparc this is "2.1/sparc".
d496 1
a496 1
	at least the "base21" and "etc21" distribution sets.
d556 1
a556 1
Congratulations, you have successfully installed OpenBSD 2.1.  When you
d562 1
a562 1
Some of the files in the OpenBSD 2.1 distribution might need to be
d655 2
a656 2
    base21.tar.gz      etc21.tar.gz       man21.tar.gz       secr21.tar.gz
    comp21.tar.gz      games21.tar.gz     misc21.tar.gz      text21.tar.gz
d658 1
a658 1
    sunos# gunzip < base21.tar.gz | (cd /mnt; gtar xvpf -)
d737 1
a737 1
You will want export the miniroot21.fs filesystem to the client.  You
@


1.21
log
@Added a quick paragraph about CD-ROM booting, short, simple, and warns
that it is only known to work on sun4c, and has only been truly tested
with SS2's..
@
text
@d20 21
a40 1
Installing using the OpenBSD floppies.
d52 41
a92 3
To put the floppy image(s) on a floppy, you use a dd command like:
  
	# dd if=kc21.fs of=/dev/rfd0a bs=36b
a93 1
After transferring the floppy image(s) to disk, bring the system down by:
d95 1
a95 3
        # halt
 
Then boot the floppy by typing the appropriate command at the PROM:
d111 16
a126 1
Installing using the OpenBSD miniroot.
d128 3
a130 20
The miniroot is a self-contained OpenBSD filesystem holding all utilities
necessary to install OpenBSD on a local disk. It is distributed as a plain
file designed to be transferred to a raw disk partition from which it can
be booted using the appropriate PROM command. Usually, the miniroot will
be loaded into the swap partition of a disk. If needed, you can use another
unused partition, but remember that the partition will then not available
during the installation process and avoid using an "a" or "c" parition
since installing the miniroot at the beginning of a disk will overwrite
the existing disklabels/parition information for the whole disk.

Loading the miniroot onto your raw partition is simple. On OpenBSD as well
as SunOS you use a command like:

	# dd if=miniroot21.fs of=/dev/rsd0b bs=20b

(here `/dev/rsd0b' is assumed to be your swap partition). There's a
potential problem here if /dev/rsd0b is actually in use as a swap
partition by your currently running system. If you don't have another
disk or partition to spare, you can usually get away with running this
command in "single user" mode to avoid active swap parition activity.
a131 1
After transferring the miniroot to disk, bring the system down by:
d133 1
a133 1
	# halt
d135 1
a135 1
Then boot the miniroot by typing the appropriate command at the PROM:
d141 7
a147 6
If you've loaded the miniroot onto some other disk than `sd0' adapt
the boot specifier accordingly, e.g.:

        > b sd(0,20,1)bsd       # example - scsi target 4 on sun4 monitors*
	ok boot sd(0,4,1)bsd	# example - scsi target 4 on V1 OpenBOOT ROM
	ok boot disk1:b bsd     # example - scsi target 1 on v2 OpenBOOT ROM
a165 94
The set up is similar to SunOS diskless setup, but not identical, because
the Sun setup assumes that the bootblocks load a kernel image, which then
uses NFS to access the exported root partition, while the OpenBSD bootblocks
use internal NFS routines to load the kernel image directly from the
exported root partition.

Please understand that no one gets this right the first try, since
there is a lot of setup and all the host deamons must be running and
configured correctly.  If you have problems, extract the diskless(8)
manpage, find someone who's been through it before and use the host
syslog and tcpdump(8) to get visibility of what's happening (or not).

Your Sparcstation expects to be able to download a second stage bootstrap
program via TFTP after having acquired its IP address through RevARP when
instructed to boot "over the net". It will look for a filename composed of
the machine's IP address followed by the machine's architecture, separated
by a period. For example, a sun4c machine which has been assigned IP
address 130.115.144.11, will make an TFTP request for `8273900B.SUN4C'.
Normally, this file is a symbolic link to an appropriate second-stage
boot program, which should be located in a place where the TFTP daemon
can find it (remember, many TFTP daemons run in a chroot'ed environment).

You can find the boot program in `/usr/mdec/boot' in the OpenBSD/sparc
distribution. Unfortunately, it is necessary to install this file
differently for sun4 and sun4c clients: the sun4 version needs to have its
`a.out' header stripped off (otherwise the machine will crash), while the
sun4c version must retain it (otherwise the PROM will complain).

Here's an example to illustrate this whole mess:

    server# cd /<client-root-dir>/usr/mdec
    if client is a sun4:
	server# set SKIP=1
	server# set KARCH=SUN4
    else
	server# set SKIP=0
	server# set KARCH=SUN4C
    server# dd if=boot of=/tftpboot/boot.sparc.OpenBSD.$KARCH skip=$SKIP bs=32
    server# cd /tftpboot
    server# ln -s boot.sparc.OpenBSD.$KARCH 8273900B.$KARCH


After the boot program has been loaded into memory and given control by
the PROM, it starts locating the machine's remote root directory through
the BOOTPARAM protocol. First a BOOTPARAM WHOAMI request is broadcast
on the local net. The answer to this request (if it comes in) contains
the client's name. This name is used in next step, a BOOTPARAM GETFILE
request -- sent to the server that responded to the WHOAMI request --
requesting the name and address of the machine that will serve the client's
root directory, as well as the path of the client's root on that server.

Finally, this information (if it comes in) is used to issue a REMOTE MOUNT
request to the client's root filesystem server, asking for an NFS file
handle corresponding to the root filesystem. If successful, the boot
rogram starts reading from the remote root filesystem in search of the
kernel which is then read into memory.

As noted above in the section `Preparing your System for OpenBSD Installation',
you have several options when choosing a location to store the installation
filesets. However, the easiest way is to put the *.tar.gz files you want
to install into the root directory for your client on the server.

Next, unpack `base.tar.gz' and `etc.tar.gz' on the server in the root 
directory for your machine. If you elect to use a separately NFS-mounted
filesystem for `/usr' with your diskless setup, make sure the "./usr" base
files in base.tar.gz end up in the correct location. One way to do this is
to temporarily use a loopback mount on the server, re-routing <root>/usr to
your server's exported OpenBSD "/usr" directory. Also put the kernel and the
install/upgrade scripts into the root directory.

A few configuration files need to be edited:

	<root>/etc/hosts
		Add the IP addresses of both server and client.

	<root>/etc/myname
		This files contains the client's hostname; use the same
		name as in <root>/etc/hosts.

	<root>/etc/fstab
		Enter the entries for the remotely mounted filesystems.
		For example:
			server:/export/root/client       /     nfs  rw 0 0
			server:/export/exec/sun4.OpenBSD /usr  nfs  rw 0 0

Now you must populate the the `/dev' directory for your client. If you server
runs SunOS 4.x, you can simply change your working directory to `<root>/dev'
and run the MAKEDEV script: `sh MAKEDEV all'.

On SunOS 5.x systems, MAKEDEV can also be used, but there'll be error
messages about unknown user and groups. These errors are inconsequential
for the purpose of installing OpenBSD. However, you may want to correct them
if you plan to the diskless setup regularly. In that case, you may re-run
MAKEDEV on your OpenBSD machine once it has booted.
d171 3
a173 10
	> b le()bsd -s			# for sun4 monitors
	ok boot le()bsd -s		# for version 1 OpenBOOT ROMs
	ok boot net bsd -s		# for version 2 OpenBOOT ROMs

This will boot the OpenBSD kernel in single-user mode.

[[
NOTE: the latter two examples assume you operate the OpenBOOT ROM in
"new command mode". If your machine comes up and gives you a `>' prompt
instead of `ok', type:
d175 4
a178 7
    >n					# enter native OpenBOOT mode
    ok setenv sunmon-compat? false	# make it permanent
    ok
]]

If you use a diskless setup with a separately NFS-mounted /usr filesystem,
mount /usr by hand now:
a179 1
OpenBSD# mount /usr
d181 2
a182 69
At this point, it's worth checking the disk label and partition sizes on
the disk you want to install OpenBSD onto. OpenBSD understands SunOS-style
disklabels, so if your disk was previously used by SunOS there will be
a usable label on it. Use `disklabel -e <disk>' (where <disk> is the
device name assigned by the OpenBSD kernel, e.g. `sd0') to view and
modify the partition sizes. See the section `Preparing your System for
OpenBSD Installation' above for suggestions about disk partition sizes.
Make sure all your partitions start and end on cylinder boundaries.

NOTE: if you are installing on a SCSI disk that does *not* have a SunOS
or OpenBSD label on it, you may still be able to use disklabel(8) but you'll
have to create all partitions from scratch. If your disk is listed in
`/etc/disktab', you may use the entry (which in most cases only defines
a `c' partition to describe the whole disk) to put an initial label on
the disk.  DO NOT USE `disklabel -r ...' TO INITIALIZE YOUR DISK LABEL;
THIS WILL LEAD TO UNPREDICTABLE RESULTS. This deficiency will be fixed
in a next release.

Here follows an example of what you'll see while in the disklabel editor.
Do not touch any of the parameters except for the `label: ' entry and
the actual partition size information at the bottom (the lines starting
with `a:', `b:', ...).

The size and offset fields are given in sector units. Be sure to make
these numbers multiples of the of the number of sectors per cylinder:
the kernel might be picky about these things, but aside from this you'll
have the least chance of wasting disk space.
Partitions on which you intend to have a mountable filesystem, should
be given fstype `4.2BSD'. Remember, the `c' partition should describe
the whole disk.
The `(Cyl. x - y)' info that appears after the hash (`#') character is
treated as a comment and need not be filled in when altering partitions.

Special note: the line containing `16 partitions:' is best left alone,
even if you define less then eight partitions. If this line displays
a different number and the program complains about it (after you leave
the editor), then try setting it to `16 partitions:'.


<BEGIN SAMPLE DISKLABEL SCREEN>
OpenBSD# disklabel sd2
 # /dev/rsd2c:
type: SCSI 
disk: SCSI disk
label: Hold Your Breath
flags:
bytes/sector: 512
sectors/track: 64
tracks/cylinder: 7  
sectors/cylinder: 448
cylinders: 1429
rpm: 3600
interleave: 1
trackskew: 0
cylinderskew: 0
headswitch: 0           # milliseconds
track-to-track seek: 0  # milliseconds
drivedata: 0

16 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  a:    50176        0    4.2BSD        0     0     0   # (Cyl.    0 - 111)
  b:    64512    50176      swap                        # (Cyl.  112 - 255)
  c:   640192        0   unknown                        # (Cyl.    0 - 1428)
  d:   525504   114688    4.2BSD        0     0     0   # (Cyl.  256 - 1428)
<END SAMPLE DISKLABEL SCREEN>


Installing using the new Single Floppy procedure.
d192 8
a199 13
	Boot your machine using the floppy21.fs floppy.  When
	presented with the PROM monitor prompt, type(*):
		"boot floppy bsd" or "boot fd()bsd"
        and then hit return.  You should see about the primary and
	secondary boot and then the kernel should start to load.

	(*) See the PROM monitor information for your system.

	It will take a while to load the kernel from the floppy,
	most likely more than a minute.  If some action doesn't
	eventually happen, or the spinning cursor has stopped and
	nothing further has happened, either your boot floppy is
	bad or you are having hardware problems.
d295 4
a388 14
        To boot from CD-ROM:
		The OpenBSD 2.1 distribution CD-ROM is capable of booting
		sun4c architecture machines.  The CD-ROM boot method has 
		been tested on SS2 machines, but may work on the other
		sun4c machines.  The bootable CD-ROM is know *not* to
		work on sun4, and sun4m systems at this time.
		To boot from CD-ROM use a command similar to:

			ok b sd(0,6,0) # OpenBOOT v1  
			ok boot cdrom  # OpenBOOT v2
               
		If CD-ROM booting does not work with your machine, you
		may proceed to use one of the several other boot methods
		to install of upgrade your system. 
a501 1
<floppy boot instructions go here >
d531 2
d675 102
a776 2
Now proceed to reboot the machine as described above in "Installing
using a diskless setup".
@


1.20
log
@yet another pass at sparc install docs
@
text
@d509 15
d527 3
a529 3
		be either "cd0" or "acd0".  Next you will be asked which
		partition on the CD-ROM the distribution is to be loaded
		from.  This is normally partition "a".
@


1.19
log
@update sparc install notes
@
text
@d93 1
a93 1
	ok b sd(0,4,1)bsd	# example - scsi target 4 on V1 OpenBOOT ROM
d110 2
a111 2
documentation that came with it (on SunOS systems, add_client(8) is a
good start).
d301 323
a623 2
If you are upgrading a OpenBSD installation, start the upgrade script, or
select "U" from the floppy or miniroot installation script:
d627 1
a627 2
else, start the installation script, or select "I" from the floppy or
miniroot installation script:
d688 1
a688 1
for input-device, output-device, screen-#columns, and scree-#rows
d717 1
a717 1
    gzip (GNU gzip) SunOS binary
a718 1
    the "install.sh" script
d723 2
a724 2
All these pieces, except "/boot", are supplied in the OpenBSD/sparc
distribution.
d786 2
a787 2
tar files are in a "new format" that includes directory information,
and the standard SunOS tar will not read them.
@


1.18
log
@Added revised floppy install procedure, needs a little more cleanup
before the text is ready for the final CD..
@
text
@d6 13
a18 5
be booted off your local disk's swap partition. Alternatively, if your
Sparcstation is hooked up in a network you can find a server and arrange
for a diskless setup which is a convenient way to install on a machine
whose disk does not currently hold a usable operating system (see the
section `Installing using a diskless setup' below).
d22 10
a31 5
The OpenBSD/sparc floppies come in two varieties, a compressed ramdisk
form, and a two floppy uncompressed form.  The differences between
the two forms are in their bootblocks, and filesystems.  The "floppy21.fs"
image, is the compressed ramdisk form, the "kc21.fs" paired with either
"inst21.fs" or "upgr21.fs" comprise the uncompressed form.  
d34 1
a34 1
	# dd if=kc21.fs of=/dev/rfd0a bs=20b conv=sync
d46 8
a53 6
The two-floppy install disks will require you to insert the second
floppy once the kernel loads.  (The disk will auto-eject)

After the initial probe messages you'll asked to start the install
or upgrade procedure. Proceed to the section `Running the installation
scripts' below.
d62 5
a66 3
be loaded into the swap partition of a disk. If needed, you can use any
other unused partition, but remember that the partition will then not
available during the installation process.
d71 1
a71 1
	# dd if=miniroot21.fs of=/dev/rsd0b bs=20b conv=sync
d77 1
a77 2
command anyway after first booting into single-user mode to ensure a
quiet system.
d92 2
a93 1
        > b sd(0,20,1)bsd       # example - scsi target 4 on sun4 monitors
d96 2
d113 12
d134 1
a153 3
Note: some versions of Openboot ROMs (sun4c/sun4m) seem to require that the
boot program size is nicely rounded. Therefore it may be necessary to
strip(8) off the symbol table.
a169 1

d251 1
a251 1
Here follows an example of what you'll see while in the dislabel editor.
d443 1
a443 1
Place a standard SunOS "/boot" program in /mnt (your new root
d447 2
a448 1
    sunos# cp /boot /mnt/boot
d451 1
a451 2
You can now extract the provided "*.tar.gz files onto your disk.  The
provided script, "install_from_sunos.sh" will help you:
d454 15
a468 11
    base.tar.gz      etc.tar.gz       man.tar.gz       secr.tar.gz
    comp.tar.gz      games.tar.gz     misc.tar.gz      text.tar.gz
    install.sh       bsd.id3_scsi
    sunos# ./install_from_sunos.sh
    [...]

This script NEEDS gzip and gtar (GNU gzip and GNU tar) on your
execution path!  The tar files are in a "new format" that includes
directory information, and SunOS tar will not read them.  Statically
linked versions of these programs for SunOS are supplied in the
distribution.
d470 1
a470 1
After the files have been extracted, repair /mnt/etc/fstab to match
@


1.17
log
@fixed typo in 'mknod ...' for 4/300 ttyc/ttyd..
@
text
@d12 28
d273 2
a274 1
If you are upgrading a OpenBSD installation, start the upgrade script:
d278 2
a279 1
else, start the installation script:
@


1.16
log
@Added info on setting up 4/300 serial ports, serial console setup details
(which seem to be absolutely required on 4/300 based on tests done today..)
@
text
@d316 1
a316 1
  mknod /dev/ttyc d 12 5
@


1.15
log
@minor changes to miniroot doc, no -s needed, miniroot works regardless..
@
text
@d305 25
a329 3
probably need to be modified.  If you are unfamiliar with UN*X-like
system administration, it's recommended that you buy a book that
discusses it.
@


1.14
log
@Updated compatibility info, especially on sun4 related items.
Still need to document a few items that would be FAQ sorts of things for
people running sun4 machines..
@
text
@d41 3
a43 3
	> b sd(,,1)bsd -s		# for sun4 monitors
	ok boot sd(,,1)bsd -s		# for version 1 OpenBOOT ROMs
	ok boot disk:b bsd -s		# for version 2 OpenBOOT ROMs
d48 2
a49 2
        > b sd(0,20,1)bsd -s       # example - scsi target 4 on sun4 monitors
	ok boot disk1:b bsd -s     # example - scsi target 1 on v2 OpenBOOT ROM
@


1.13
log
@21
@
text
@d41 1
a41 1
	> b sd(,,1)bsd -s			# for sun4 monitors
d48 2
a49 3
	ok boot disk1:b bsd -s

to boot from SCSI disk target 1 from a version 2 OpenBOOT ROM.
d156 1
a156 1
	> b le()bsd -s		# for sun4 monitors
d280 2
a281 2
The Sun monitor normally tries to load a file called "vmunix". On
OpenBOOT ROM systems you can change it to load OpenBSD instead using
d293 2
@


1.12
log
@2.0 again -> 2.1
@
text
@d26 1
a26 1
	# dd if=miniroot20.fs of=/dev/rsd0b bs=20b conv=sync
@


1.11
log
@homework for everyone: 10 x reading the notes of an architecture of
choice :-)

this way we can avoid things like this in the 2.1 notes ...
"Congratulations, you have successfully installed OpenBSD 2.0."
@
text
@d301 1
a301 1
Some of the files in the OpenBSD 2.0 distribution might need to be
@


1.10
log
@sparc has 16 partitions now i think
@
text
@d295 1
a295 1
Congratulations, you have successfully installed OpenBSD 2.0.  When you
@


1.9
log
@fix typo
@
text
@d211 1
a211 1
Special note: the line containing `8 partitions:' is best left alone,
d214 1
a214 1
the editor), then try setting it to `8 partitions:'.
d237 1
a237 1
8 partitions:
@


1.8
log
@update slightly
@
text
@d5 1
a5 1
nin terms of preliminary setup is to use the OpenBSD miniroot that can
@


1.7
log
@Did some s/NetBSD/OpenBSD/, s/netbsd/bsd/ and $OpenBSD$ additions.
However this stuff is largely related to NetBSD and must be completely
redone, if we will make real relases sometime
@
text
@d4 52
a55 6
There are several ways to install OpenBSD onto a disk. If your Sparcstation
is hooked up in a network you can find find a server and arrange for a
diskless setup which is a convenient way to install on a machine with
a single disk attached. Alternatively, you could use SunOS (booted from
a local disk) and install OpenBSD onto a second disk. For the latter method,
skip to the section "Installing from SunOS" below.
d68 1
a68 1
program via TFTP after havinf acquired its IP address through RevARP when
d73 1
a73 1
Normally, this file is symbolic link to an appropriate second-stage
d91 1
a91 1
    server# dd if=boot of=/tftpboot/boot.sparc.bsd.$KARCH skip=$SKIP bs=32
d93 1
a93 1
    server# ln -s boot.sparc.bsd.$KARCH 8273900B.$KARCH
d95 1
a95 1
Note: some versions of Openboot ROMs (sun4c) seem to require that the
d99 15
d141 1
a141 1
			server:/export/exec/sun4.bsd     /usr  nfs  rw 0 0
d176 1
a176 1
openbsd# mount /usr
d183 3
a185 7
modify the partition sizes. A comfortable size for the root filesystem
partition is about 20MB; a good initial size for the swap partition is
twice the amount of physical memory in your machine (though, unlike
SunOS 4.x, there are no restrictions on the size of the swap partition
that would render part of your memory unusable). A full binary installation
takes about 60MB in `/usr'. Make all your partitions start and end on
cylinder boundaries.
d192 3
a194 1
the disk.
d205 1
a205 1
Partitions on which you intend to have a a mountable filesystem, should
d218 1
a218 1
openbsd# disklabel sd2
d248 1
a248 1
openbsd# sh upgrade.sh
d252 1
a252 1
openbsd# sh install.sh
d279 1
a279 1
    openbsd# mount -u /dev/sd0a /
d295 1
a295 1
Congratulations, you have successfully installed OpenBSD RELEASE.  When you
d301 1
a301 1
Some of the files in the OpenBSD RELEASE distribution might need to be
@


1.7.2.1
log
@Pullup from trunk
@
text
@d4 6
a9 52
There are several ways to install OpenBSD onto a disk. The easiest way
nin terms of preliminary setup is to use the OpenBSD miniroot that can
be booted off your local disk's swap partition. Alternatively, if your
Sparcstation is hooked up in a network you can find a server and arrange
for a diskless setup which is a convenient way to install on a machine
whose disk does not currently hold a usable operating system (see the
section `Installing using a diskless setup' below).


Installing using the OpenBSD miniroot.

The miniroot is a self-contained OpenBSD filesystem holding all utilities
necessary to install OpenBSD on a local disk. It is distributed as a plain
file designed to be transferred to a raw disk partition from which it can
be booted using the appropriate PROM command. Usually, the miniroot will
be loaded into the swap partition of a disk. If needed, you can use any
other unused partition, but remember that the partition will then not
available during the installation process.

Loading the miniroot onto your raw partition is simple. On OpenBSD as well
as SunOS you use a command like:

	# dd if=miniroot20.fs of=/dev/rsd0b bs=20b conv=sync

(here `/dev/rsd0b' is assumed to be your swap partition). There's a
potential problem here if /dev/rsd0b is actually in use as a swap
partition by your currently running system. If you don't have another
disk or partition to spare, you can usually get away with running this
command anyway after first booting into single-user mode to ensure a
quiet system.

After transferring the miniroot to disk, bring the system down by:

	# halt

Then boot the miniroot by typing the appropriate command at the PROM:

	> b sd(,,1)bsd -s			# for sun4 monitors
	ok boot sd(,,1)bsd -s		# for version 1 OpenBOOT ROMs
	ok boot disk:b bsd -s		# for version 2 OpenBOOT ROMs

If you've loaded the miniroot onto some other disk than `sd0' adapt
the boot specifier accordingly, e.g.:

	ok boot disk1:b bsd -s

to boot from SCSI disk target 1 from a version 2 OpenBOOT ROM.

This will cause the kernel contained in the miniroot to be booted.
After the initial probe messages you'll asked to start the install
or upgrade procedure. Proceed to the section `Running the installation
scripts' below.
d22 1
a22 1
program via TFTP after having acquired its IP address through RevARP when
d27 1
a27 1
Normally, this file is a symbolic link to an appropriate second-stage
d45 1
a45 1
    server# dd if=boot of=/tftpboot/boot.sparc.OpenBSD.$KARCH skip=$SKIP bs=32
d47 1
a47 1
    server# ln -s boot.sparc.OpenBSD.$KARCH 8273900B.$KARCH
d49 1
a49 1
Note: some versions of Openboot ROMs (sun4c/sun4m) seem to require that the
a52 15
After the boot program has been loaded into memory and given control by
the PROM, it starts locating the machine's remote root directory through
the BOOTPARAM protocol. First a BOOTPARAM WHOAMI request is broadcast
on the local net. The answer to this request (if it comes in) contains
the client's name. This name is used in next step, a BOOTPARAM GETFILE
request -- sent to the server that responded to the WHOAMI request --
requesting the name and address of the machine that will serve the client's
root directory, as well as the path of the client's root on that server.

Finally, this information (if it comes in) is used to issue a REMOTE MOUNT
request to the client's root filesystem server, asking for an NFS file
handle corresponding to the root filesystem. If successful, the boot
rogram starts reading from the remote root filesystem in search of the
kernel which is then read into memory.

d80 1
a80 1
			server:/export/exec/sun4.OpenBSD /usr  nfs  rw 0 0
d115 1
a115 1
OpenBSD# mount /usr
d122 7
a128 3
modify the partition sizes. See the section `Preparing your System for
OpenBSD Installation' above for suggestions about disk partition sizes.
Make sure all your partitions start and end on cylinder boundaries.
d135 1
a135 3
the disk.  DO NOT USE `disklabel -r ...' TO INITIALIZE YOUR DISK LABEL;
THIS WILL LEAD TO UNPREDICTABLE RESULTS. This deficiency will be fixed
in a next release.
d146 1
a146 1
Partitions on which you intend to have a mountable filesystem, should
d159 1
a159 1
OpenBSD# disklabel sd2
d189 1
a189 1
OpenBSD# sh upgrade.sh
d193 1
a193 1
OpenBSD# sh install.sh
d220 1
a220 1
    OpenBSD# mount -u /dev/sd0a /
d236 1
a236 1
Congratulations, you have successfully installed OpenBSD 2.0.  When you
d242 1
a242 1
Some of the files in the OpenBSD 2.0 distribution might need to be
@


1.6
log
@update from netbsd
@
text
@d1 1
a1 1
Installing NetBSD is a relatively complex process, but if you have
d4 1
a4 1
There are several ways to install NetBSD onto a disk. If your Sparcstation
d8 1
a8 1
a local disk) and install NetBSD onto a second disk. For the latter method,
d15 1
a15 1
you are using a NetBSD system as the boot-server, have a look at the
d30 1
a30 1
You can find the boot program in `/usr/mdec/boot' in the NetBSD/sparc
d45 1
a45 1
    server# dd if=boot of=/tftpboot/boot.sparc.netbsd.$KARCH skip=$SKIP bs=32
d47 1
a47 1
    server# ln -s boot.sparc.netbsd.$KARCH 8273900B.$KARCH
d54 1
a54 1
As noted above in the section `Preparing your System for NetBSD Installation',
d64 1
a64 1
your server's exported NetBSD "/usr" directory. Also put the kernel and the
d80 1
a80 1
			server:/export/exec/sun4.netbsd  /usr  nfs  rw 0 0
d88 1
a88 1
for the purpose of installing NetBSD. However, you may want to correct them
d90 1
a90 1
MAKEDEV on your NetBSD machine once it has booted.
d96 3
a98 3
	> b le()netbsd -s		# for sun4 monitors
	ok boot le()netbsd -s		# for version 1 OpenBOOT ROMs
	ok boot net netbsd -s		# for version 2 OpenBOOT ROMs
d100 1
a100 1
This will boot the NetBSD kernel in single-user mode.
d115 1
a115 1
netbsd# mount /usr
d118 1
a118 1
the disk you want to install NetBSD onto. NetBSD understands SunOS-style
d121 1
a121 1
device name assigned by the NetBSD kernel, e.g. `sd0') to view and
d131 1
a131 1
or NetBSD label on it, you may still be able to use disklabel(8) but you'll
d159 1
a159 1
netbsd# disklabel sd2
d187 1
a187 1
If you are upgrading a NetBSD installation, start the upgrade script:
d189 1
a189 1
netbsd# sh upgrade.sh
d193 1
a193 1
netbsd# sh install.sh
d207 1
a207 1
	- determination of the disk to install NetBSD on
d209 1
a209 1
	- creating and mounting the NetBSD filesystems
d216 2
a217 2
I'd suggest you "boot sd()netbsd -bs", then try multiuser after that.
if you boot single-user the NetBSD incantation to make the root
d220 1
a220 1
    netbsd# mount -u /dev/sd0a /
d223 1
a223 1
OpenBOOT ROM systems you can change it to load NetBSD instead using
d228 1
a228 1
    ok setenv boot-from sd(0,0,0)netbsd
d232 1
a232 1
    ok setenv boot-file netbsd
d236 2
a237 2
Congratulations, you have successfully installed NetBSD RELEASE.  When you
reboot into NetBSD, you should log in as "root" at the login prompt.
d242 1
a242 1
Some of the files in the NetBSD RELEASE distribution might need to be
d253 1
a253 1
You need a SunOS machine to install NetBSD.  You also need at
d262 1
a262 1
    a kernel, most likely "/netbsd"
d264 1
a264 1
All these pieces, except "/boot", are supplied in the NetBSD/sparc
d268 1
a268 1
NetBSD/sparc uses SunOS disk labels.)  Give yourself adequate
d278 1
a278 1
(tiny) disk that NetBSD/sparc ran on.
d281 1
a281 1
(NetBSD's filesystem format is identical to SunOS).
d289 1
a289 1
newfs'ing using NetBSD.  If you newfs using the NetBSD newfs command,
d316 1
a316 1
    install.sh       netbsd.id3_scsi
@


1.5
log
@from netbsd; will be customized to openbsd later of course...
@
text
@d236 1
a236 1
Congratulations, you have successfully installed NetBSD 1.1.  When you
d242 1
a242 1
Some of the files in the NetBSD 1.1 distribution might need to be
@


1.4
log
@update from netbsd
@
text
@d21 33
d236 1
a236 1
Congratulations, you have successfully installed NetBSD 1.0.  When you
d242 1
a242 1
Some of the files in the NetBSD 1.0 distribution might need to be
d260 2
a261 1
    a "/boot" file from a SunOS sun4c machine
d311 1
a311 1
provided script, "install.sh" will help you:
d317 1
a317 1
    sunos# ./install.sh
@


1.3
log
@from netbsd
@
text
@d14 11
a24 4
First, you must setup a diskless client configuration on a server. Consult
your server installation documents on how to proceed with this.
Put all the *.tar.gz files you want to install into the root directory
for your client on the server.
d104 49
d156 1
a156 1
#netbsd ./upgrade.sh
d158 1
a158 1
else, start the installation procedure:
d160 1
a160 1
netbsd# ./install.sh
d168 3
a170 1
you want to assign.
@


1.2
log
@from netbsd
@
text
@d19 7
a25 6
Next, unpack base.tar.gz on the server in the root directory for your machine.
If you elect to you a separately NFS-mounted filesystem for `/usr' on your
diskless setup, make sure the "./usr" base files in base.tar.gz end up
in the correct location. One way to do this is to temporarily use a loopback
mount on the server, re-routing <root>/usr to your server's exported
NetBSD "/usr" directory. Also put the kernel into the root directory.
@


1.1
log
@Initial revision
@
text
@d11 1
d20 6
d29 2
d32 3
d36 14
d71 31
a101 1
Start the installation procedure:
d106 1
a106 1
This script will do most of the work of transferring the system from the
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

