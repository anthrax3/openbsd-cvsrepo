head	1.22;
access;
symbols
	OPENBSD_6_0:1.21.0.6
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.4
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.20.0.14
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.16
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.12
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.10
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.8
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.6
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.2
	OPENBSD_5_0:1.20.0.4
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.19.0.4
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.2
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.18.0.12
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.18.0.14
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.10
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.6
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.8
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.4
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.18.0.2
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.17.0.2
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.16.0.4
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.2
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.15.0.2
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.14.0.4
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.2
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.12.0.6
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.4
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.11.0.4
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.7.0.8
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.6
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.22
date	2016.09.01.10.08.29;	author deraadt;	state dead;
branches;
next	1.21;
commitid	qVq42rwKOPg5Qxjs;

1.21
date	2015.03.27.20.50.40;	author miod;	state Exp;
branches;
next	1.20;
commitid	Su4qESnMQy3wms7I;

1.20
date	2011.06.15.21.36.48;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2010.07.10.19.38.37;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2007.03.08.05.21.29;	author david;	state Exp;
branches;
next	1.17;

1.17
date	2006.03.23.06.10.19;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2005.04.27.03.07.16;	author jsg;	state Exp;
branches;
next	1.15;

1.15
date	2005.03.18.19.37.06;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2004.03.17.09.25.10;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2004.03.16.08.25.00;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.09.05.53.55;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	2001.10.14.19.16.08;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.14.18.24.49;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.04.24.23.07.41;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2000.10.18.21.52.52;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	98.04.25.07.25.05;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	98.03.04.12.14.16;	author johns;	state Exp;
branches;
next	1.5;

1.5
date	97.10.24.07.11.24;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	97.05.27.10.35.17;	author grr;	state Exp;
branches;
next	1.3;

1.3
date	97.05.27.01.03.33;	author grr;	state Exp;
branches;
next	1.2;

1.2
date	96.04.25.21.30.05;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.41;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.41;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.22
log
@remove sparc media building goop
@
text
@Before you start you might need to consider your disk configuration
to sort out a quirk in SCSI-ID to SD-UNIT mapping that exists on
Sun SPARCstations.

Upon leaving the factory, SunOS and the OpenBOOT ROM map according to
this table:

    SCSI-ID ->	SunOS SD-UNIT
    0		sd3
    1		sd1
    2		sd2
    3		sd0
    4		sd4
    5		sd5
    6		sd6

Unlike SunOS and the OpenBOOT ROM, a generic OpenBSD kernel numbers
SCSI drives sequentially as it finds them.  The drive with the
lowest SCSI-ID will be called sd0, the next one sd1, etc.

This is mostly a non-issue if you have only one drive on your system,
but can get confusing if you have multiple drives (unless you choose
to use DUIDs to access partitions).  If you plan to eliminate SunOS
altogether it may be best to correct the SCSI-IDs of your drives,
while if you plan to leave SunOS installed, it may be better to
install OpenBSD on a drive with SCSI-ID 1 or 0.

Older OpenBoot proms (versions 1.x) provide an environment variable,
sd-targets, that controls the drive<->SCSI-ID mapping; you can change
this to reflect the natural ordering or just set the boot related
variables to boot from the correct drive, whatever the numbering. Its
default-value is ``31204567'', which means unit 0 and 3 are exchanged.
To revert to the ``normal'' behaviour, enter the following command:

    ok setenv sd-targets 01234567

Your OpenBOOT ROM may need some setup.  If you are running OpenBSD on
a sun4c, sun4e or sun4m system, the ROM must be set to "new" command
mode.  If your machine comes up and gives you a `>' prompt instead of
`ok', type:

    > n
    ok setenv sunmon-compat? false
    ok

This is needed because OpenBSD relies on the behaviour of the "new" command
mode.  OpenBSD will not boot correctly on sun4c, sun4e or sun4m systems that
are not running in "new" command mode.  The sun4 systems such as the 4/110,
4/200, and 4/300 system do not have a "new" command mode, and will work
fine as-is.


Also, you cannot use the security modes of the SPARC OpenBOOT ROM.
Make sure that the ROM security modes are disabled:

    ok setenv security-mode none

To disable automatic boot use the following command:

    ok setenv auto-boot? false

and then to enable it later use:

    ok setenv auto-boot? true

or on an installed system use the eeprom(8) command:

    # eeprom 'auto-boot?=true'

@


1.21
log
@Remove `installing from SunOS' and `installing from Solaris' instructions.
They are much more troublesome than using the miniroot, and if you're actually
still running a SunOS setup in 2015, then you're me, and you don't need to be
told this information anyway.

Do not suggest disks might be shared between OpenBSD and SunOS or Solaris
anymore. This is just asking for trouble.
@
text
@@


1.20
log
@Stop providing a bsd.scsi3 kernel on sparc. If you have a system with multiple
disks and scsi id#3 as the boot device, by all means, use DUIDs to mount your
filesystems and it won't matter what sd unit number the boot disk attaches with.
@
text
@a69 35
Please note that while OpenBSD and SunOS have a reasonable degree of
compatibility between disk labels and filesystems, there are some problems
to watch out for during initial installation or when trying to maintain
both OpenBSD and SunOS environments on the same system.

    If the OpenBSD fsck(8) utility is used on a SunOS filesystem, it will
    set OpenBSD "clean flags" and BSD4.4 summary fields in the superblock.
    SunOS does *not* like this and you will have to do a "fsck -b 32" under
    SunOS to access an alternate superblock to repair the filesystem.  You
    should always specify SunOS filesystem with a "pass number" of 0 in
    their /etc/fstab entry to prevent this, and preferably mount them "RO".

    If SunOS fsck is used on an OpenBSD filesystem in the default OpenBSD
    (4.4BSD) format, it will first complain about the superblock and then
    about missing . and .. entries.  Do *not* try to "correct" these
    problems, as attempting to do so will completely trash the filesystem.

    You should avoid using soft updates (option softdep in /etc/fstab)
    on your shared filesystems.
    Although untested, it is likely that SunOS would be confused by a
    filesystem with soft update flags enabled.

The OpenBSD "Sun Compatible" disklabel has been extended to support 16
partitions, which may be compatible with Solaris and SunOS, but they will
only see the first 8 partitions and you may "lose" information about the
extended partitions.


OpenBSD and Sun BSD bootblocks are similar in concept, though implemented
differently.  The OpenBSD bootblocks are architecture independent and also
understand the extended disk labels with 16 partitions.  You can use SunOS
bootblocks, but remember that OpenBSD bootblocks must be installed with
OpenBSD installboot and SunOS bootblocks with SunOS installboot.


@


1.19
log
@sun4e bits
@
text
@a20 7
To ease the installation process, two OpenBSD kernels are provided in
the installation sets.  The default OpenBSD kernel (bsd) is set up
to use the OpenBSD mapping, while a special kernel (bsd.scsi3) is
set up to match the Sun mapping above by hard-wiring SCSI-ID#3 to sd0
and SCSI-ID#0 to sd3. The remaining drives will be dynamically mapped
to other sd* numbers.

d22 5
a26 4
but can get confusing if you have multiple drives.  If you plan
to eliminate SunOS altogether it may be best to correct the SCSI-IDs
of your drives, while if you plan to leave SunOS installed, it may
be better to install OpenBSD on a drive with SCSI-ID 1 or 0.
a35 5

NOTE: if you elect to build a custom kernel you may want to "hardwire"
the SCSI-IDs to sd0->SCSI-ID 0 or your desired scheme, this helps
prevent accidents if you change the SCSI bus configuration or a drive
is down.
@


1.18
log
@spelling fixes; ok deraadt@@
@
text
@d49 3
a51 3
a sun4c, or sun4m system, the ROM must be set to "new" command mode.
If your sun4c or sun4m machine comes up and gives you a `>' prompt
instead of `ok', type:
d53 1
a53 1
    >n
d58 1
a58 1
mode.  OpenBSD will not boot correctly on sun4c or sun4m systems that
@


1.17
log
@avoid saying format() because of the new gnu m4 extensions.  this is crazy
@
text
@d77 1
a77 1
or on an installed system use the eeprom(8) commmand:
@


1.16
log
@[sS]parc -> SPARC when not talking about a port.
ok brad@@ miod@@
@
text
@d104 3
a106 6
partitions, which may be compatible with Solaris, but the old SunOS
format(8) utility only sees the first 8 partitions and may "lose"
information about the extended partitions.

Use SunOS format(8) only with *extreme* caution on drives that contain
OpenBSD partitions.
@


1.15
log
@mention auto-boot switch; deraadt@@ ok
@
text
@d3 1
a3 1
Sun Sparcstations.
d64 1
a64 1
Also, you cannot use the security modes of the sparc OpenBOOT ROM.
@


1.14
log
@grammar, consistency fixes, and typos;
ok miod@@
@
text
@d69 11
@


1.13
log
@typos and consistency fixes;
ok miod@@
@
text
@d18 2
a19 2
scsi drives sequentially as it finds them.  The drive with the
lowest scsi-id will be called sd0, the next one sd1, etc.
d24 2
a25 2
set up to match the Sun mapping above by hard-wiring scsi-id#3 to sd0
and scsi-id#0 to sd3. The remaining drives will be dynamically mapped
d30 1
a30 1
to eliminate SunOS altogether it may be best to correct the scsi-id's
d32 1
a32 1
be better to install OpenBSD on a drive with scsi-id 1 or 0.
d35 1
a35 1
sd-targets, that controls the drive<->scsi-id mapping, you can change
d44 1
a44 1
the scsi-id's to sd0->scsi-id 0 or your desired scheme, this helps
d71 1
a71 1
compatibility between disk labels and filesystems there are some problems
d103 1
a103 1
understand the extended disklabels with 16 partitions.  You can use SunOS
@


1.12
log
@knf
@
text
@d92 1
a92 1
The OpenBSD "Sun Compatible" disklabel have been extended to support 16
@


1.11
log
@Be more verbose about OpenBoot prom versions 1.x, give instructions to
change the scsi id/unit mapping.
@
text
@d58 2
a59 2
mode.  OpenBSD will not boot correctly on sun4c or sun4m systems that 
are not running in "new" command mode.  The sun4 systems such as the 4/110, 
d89 1
a89 1
    Although untested, it is likely that SunOS would be confused by a 
@


1.10
log
@Typo.
@
text
@d34 8
a41 4
Some OpenBoot proms provide an environment variable that controls
the drive<->scsi-id mapping, you can change this to reflect the natural
ordering or just set the boot related variables to boot from the
correct drive, whatever the numbering.
@


1.9
log
@Update supported hardware list, fix typos, use m4.common macros
whenever possible, remove obsolete information, etc.

ok fries@@
@
text
@d21 1
a21 1
To ease the installation process, two OpenBSD kernels are provide in
@


1.8
log
@disklabel has no -r flag anymore
@
text
@d83 2
a84 2
    You should avoid using the new OpenBSD "-s enable" option to the 
    "tunefs" command, which enable the soft update feature.  
d90 1
a90 1
format(8) utility only sees the first 8 partititions and may "lose"
@


1.7
log
@corrections; david.michael.scott@@gecm.com
@
text
@a87 9
OpenBSD supports both OpenBSD "native" disklabels and "Sun compatible"
disklabels.  Unless you have some really good reason, you should stick
with the Sun compatible labels.  The disklabel(8) "-r" switch says to
use OpenBSD labels, which is a bit counter-intuitive and contrary to
the reasons why might want to use "-r" on other OpenBSD ports.

Don't use "-r" with disklabel(8).


@


1.6
log
@Added more specific info about the "new" command mode of the OpenBOOT roms.
Previous documentst didn't mention that the old sun4 machines don't have
a "new" command mode.  Also updated various other items..
@
text
@d34 1
a34 1
Some OpenBoot proms provide and environment variable that controls
@


1.5
log
@typos.
@
text
@d29 1
a29 1
but can get really confusing if you have multiple drives.  If you plan
d32 1
a32 1
be better to install OpenBSD on an external drive with scsi-id 1 or 0.
d44 3
a46 2
Your OpenBOOT ROM may need some setup.  make sure you boot from `new
command mode'.  If your machine comes up and gives you a `>' prompt
d53 6
a58 2
This is needed because OpenBSD cannot handle the old-mode yet, and will
firework on you.
d61 1
d83 4
@


1.4
log
@yet another pass at sparc install docs
@
text
@d97 1
a97 1
differntly.  The OpenBSD bootblocks are architecture independent and also
@


1.3
log
@upate sparc install notes
@
text
@d61 3
a63 3
compatibility between filesystems and OpenBSD can even run SunOS
binaries (when built with COMPAT_SUNOS), there are some problems to
watch out for.
d66 5
a70 5
    set OpenBSD "clean flags" and BSD4.4 summary fields in the Superblock.
    SunOS will *not* like this, you will have to do a fsck -b 32 under
    SunOS to access an alternate superblock to fix the filesystem.  You
    should always specify SunOS filesystem with "0" in the "fsck passno"
    field in /etc/fstab to prevent this, and preferably mount them "RO".
d73 2
a74 2
    new format (4.4BSD) it will first complain about the superblock and
    then about missing . and .. entries.  Do *not* try to "correct" these
d80 3
a82 9
with the Sun compatible labels.  The disklabel(8) "-r" says to use
OpenBSD labels, which is a bit counter-intuitive and contrary to the
reasons why you'd use "-r" on other OpenBSD ports.  Don't use "-r"...

The OpenBSD "Sun Compatible" disklabel are extended to support 16 partitions,
which may be compatible with Solaris, but older SunOS format(8) programs
only see the first 8 parititions and may "lose" information on the extended
paritions.  Use SunOS format(8) only with *extreme* caution on drives that
contain OpenBSD partitions.
d84 1
d86 15
a100 4
OpenBSD and Sun BSD bootblocks are similar, though differnt.  You can use
Sun bootblocks, but the OpenBSD bootblock are architecture independent
and understand the extended disklabels.  To install OpenBSD bootblocks,
you must use the OpenBSD installboot and vice versa.
@


1.2
log
@Did some s/NetBSD/OpenBSD/, s/netbsd/bsd/ and $OpenBSD$ additions.
However this stuff is largely related to NetBSD and must be completely
redone, if we will make real relases sometime
@
text
@d21 22
a42 13
To ease the installation process, the default OpenBSD kernel in the
distribution is setup to match the Sun mapping above by hard-wiring
scsi-id#3 to sd0 and scsi-id#0 to sd3. The remaining drives will be
dynamically mapped to other sd* numbers.

A truely generic OpenBSD kernel is also provided as `/bsd.GENERIC',
which will do the standard OpenBSD probe ordering. If your configuration
differs from the default Sun setup, you can try to use this kernel to
complete the installation.

NOTE: this is also a concern when you start building your own customised
kernels.

d58 38
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
Unlike SunOS and the OpenBOOT ROM, a generic NetBSD kernel numbers
d21 1
a21 1
To ease the installation process, the default NetBSD kernel in the
d26 2
a27 2
A truely generic NetBSD kernel is also provided as `/netbsd.GENERIC',
which will do the standard NetBSD probe ordering. If your configuration
d43 1
a43 1
This is needed because netbsd cannot handle the old-mode yet, and will
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

