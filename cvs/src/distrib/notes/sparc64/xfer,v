head	1.33;
access;
symbols
	OPENBSD_6_0:1.32.0.4
	OPENBSD_6_0_BASE:1.32
	OPENBSD_5_9:1.32.0.2
	OPENBSD_5_9_BASE:1.32
	OPENBSD_5_8:1.31.0.4
	OPENBSD_5_8_BASE:1.31
	OPENBSD_5_7:1.30.0.2
	OPENBSD_5_7_BASE:1.30
	OPENBSD_5_6:1.30.0.4
	OPENBSD_5_6_BASE:1.30
	OPENBSD_5_5:1.29.0.2
	OPENBSD_5_5_BASE:1.29
	OPENBSD_5_4:1.28.0.16
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.28.0.14
	OPENBSD_5_3_BASE:1.28
	OPENBSD_5_2:1.28.0.12
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.8
	OPENBSD_5_0:1.28.0.10
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.28.0.6
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.4
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.28.0.2
	OPENBSD_4_7_BASE:1.28
	OPENBSD_4_6:1.26.0.14
	OPENBSD_4_6_BASE:1.26
	OPENBSD_4_5:1.26.0.10
	OPENBSD_4_5_BASE:1.26
	OPENBSD_4_4:1.26.0.6
	OPENBSD_4_4_BASE:1.26
	OPENBSD_4_3:1.26.0.8
	OPENBSD_4_3_BASE:1.26
	OPENBSD_4_2:1.26.0.4
	OPENBSD_4_2_BASE:1.26
	OPENBSD_4_1:1.26.0.2
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.25.0.2
	OPENBSD_4_0_BASE:1.25
	OPENBSD_3_9:1.24.0.6
	OPENBSD_3_9_BASE:1.24
	OPENBSD_3_8:1.24.0.4
	OPENBSD_3_8_BASE:1.24
	OPENBSD_3_7:1.24.0.2
	OPENBSD_3_7_BASE:1.24
	OPENBSD_3_6:1.23.0.2
	OPENBSD_3_6_BASE:1.23
	OPENBSD_3_5:1.21.0.2
	OPENBSD_3_5_BASE:1.21
	OPENBSD_3_4:1.19.0.4
	OPENBSD_3_4_BASE:1.19
	OPENBSD_3_3:1.19.0.2
	OPENBSD_3_3_BASE:1.19
	OPENBSD_3_2:1.17.0.2
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.15.0.2
	OPENBSD_3_1_BASE:1.15
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11;
locks; strict;
comment	@# @;


1.33
date	2017.03.04.22.46.20;	author tj;	state Exp;
branches;
next	1.32;
commitid	xnTPjpt7rqMAe9Je;

1.32
date	2016.01.01.15.58.28;	author rpe;	state Exp;
branches;
next	1.31;
commitid	XjeaG5hkc5BqY3TL;

1.31
date	2015.06.10.06.38.40;	author jasper;	state Exp;
branches;
next	1.30;
commitid	EJPElltTq1bDwGzR;

1.30
date	2014.03.19.01.59.49;	author tedu;	state Exp;
branches;
next	1.29;

1.29
date	2014.02.27.20.18.10;	author tedu;	state Exp;
branches;
next	1.28;

1.28
date	2010.03.16.17.23.09;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2010.03.06.13.20.40;	author eric;	state Exp;
branches;
next	1.26;

1.26
date	2007.03.01.19.17.29;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2006.03.23.06.10.20;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2005.03.18.13.30.53;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2004.06.22.00.42.12;	author matthieu;	state Exp;
branches;
next	1.22;

1.22
date	2004.05.04.23.04.30;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2004.03.17.09.25.10;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2004.03.16.08.25.00;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2003.03.24.11.33.57;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2002.12.30.11.13.01;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2002.10.03.00.19.49;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2002.06.30.15.32.14;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2002.04.04.21.13.32;	author jason;	state Exp;
branches;
next	1.14;

1.14
date	2002.03.23.23.58.50;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.07.08.57.28;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.11.02.01.54.02;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2001.10.15.18.36.20;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.14.18.28.02;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.10.10.21.05.29;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2001.10.06.19.27.20;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.03.12.57.13;	author heko;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.02.22.46.29;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.01.23.31.09;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.01.01.47.30;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.24.21.14.06;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.21.04.37.43;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.19.16.23.58;	author jason;	state Exp;
branches;
next	;


desc
@@


1.33
log
@remove/tweak some cd-related text.

ok deraadt
@
text
@dnl	$OpenBSD: xfer,v 1.32 2016/01/01 15:58:28 rpe Exp $
Installation is supported from several media types, including:

	CD-ROM (NOT supported if booting from floppy)
	FFS partitions
	HTTP

If you created an OpenBSD CD-ROM (and have a CD-ROM drive), you may be
able to boot from it, or from the supplied bootable CD-ROM mini image. If you
can boot from the CD-ROM, you are home free and can proceed to the
installation steps.  If not, you will need to do some setup work to prepare
a bootable image, either a floppy, hard drive, or compatible net boot
server.

In addition to the bootable image, you also need to consider how to
access the binary distribution sets to actually install the system.

Although you can access the distribution sets directly from one of the
OpenBSD mirrors over the internet, you may wish to transfer the sets to
a local HTTP server, or copy them to a partition on the target system's
disk.

OpenBSDXferCDROM

OpenBSDXferFloppyFromDOS

OpenBSDXferFloppyFromUNIX

Creating a bootable hard disk using SunOS, Solaris or other Un*x-like system:

	If you don't have a floppy drive you can copy the miniroot
	"miniroot{:--:}OSrev.fs" onto the hard disk you intend to boot on.
	Traditionally, the way to do this is to use dd(1) to place the
	bootable filesystem image in the "swap" partition of the disk
	(while running in single user mode), and then booting from that
	partition.

	Using the "b" partition allows you to boot without overwriting
	any useful parts of the disk; you can also use another partition,
	but don't use the "a" or "c" partition without understanding the
	disk label issues described below under "incompatible systems".

	This requires that you be running SunOS, Solaris, OpenBSD, or NetBSD,
	which have a compatible view of SunOS disk labels and partitions.

	Use the dd(1) utility to copy the file to the hard drive.
	The command would likely be, under SunOS:
 		dd if=miniroot{:--:}OSrev.fs of=/dev/rsd0b bs=64b
	and under Solaris:
 		dd if=miniroot{:--:}OSrev.fs of=/dev/rdsk/c0t0d0s1 bs=64b

	The blocksize is arbitrary as long as it's a multiple of 512-bytes
	and within the maximum supported by the driver, i.e. bs=126b may
	not work for all cases.  Again, device/partition names may vary,
	depending on the OS involved.

	If you are preparing the hard drive on an incompatible system or
	don't care about the hard disk contents, you can also install the
	bootable image starting at the beginning of the disk. This lets
	you prepare a bootable hard-drive even if don't have a working
	operating system on your machine, but it is important to understand
	that the bootable image installed this way includes a "disk label"
	which can wipe out any pre-existing disklabels or partitioning for
	the drive.

Creating a network bootable setup using SunOS or other Un*x-like system:

	The details of setting up a network bootable environment vary
	considerably, depending on the network's host.  Extract the
	OpenBSD diskless(8) man page from the man{:--:}OSrev.tgz distribution
	set or see the copy on the OpenBSD web page.  You will also
	need to reference the relevant man pages or administrators guide
	for the host system.
	
	Basically, you will need to set up reverse-arp (rarpd) and boot
	parameter (rpc.bootparamd) information and make the OpenBSD
	bootblock, kernel/miniroot partition, and a swap file available
	as required by the netboot setup.


OpenBSDXferPrelude

OpenBSDXferFFS
@


1.32
log
@Tweak the installation notes regarding references to FTP.

'Sure' deraadt@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.31 2015/06/10 06:38:40 jasper Exp $
d8 1
a8 1
If you have the OpenBSD CD-ROM distribution (and a CD-ROM drive), you may be
d18 4
a21 4
Although you can access the distribution sets directly from the CD-ROM or
from one of the OpenBSD mirrors over the internet, you may wish to transfer
the sets to a local HTTP server, or copy them to a partition on the target
system's disk.
@


1.31
log
@FTP as an install method kicked the bucket some time ago.

ok miod@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.30 2014/03/19 01:59:49 tedu Exp $
d19 2
a20 2
from one of the FTP mirrors over the internet, you may wish to transfer
the sets to a local FTP server, or copy them to a partition on the target
@


1.30
log
@you are still welcome to install from tape, but as befits an elite master
of unix arcana, we will not condescend to tell you how. why spoil the fun?
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.29 2014/02/27 20:18:10 tedu Exp $
a5 1
	FTP
@


1.29
log
@some other places it may help to know how to burn an iso
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.28 2010/03/16 17:23:09 miod Exp $
a5 1
	Tape
a82 2

OpenBSDXferBareTape(xbase xetc xfont xserv xshare)
@


1.28
log
@Jumbo commit for 4.7 installation instructions:
- do not mention tape as an installation media on systems where it is very
  unlikely that a tape drive can be connected to (i.e. anything with only
  USB as expansion capabilities)
- do not mention that fetching the installation sets from a partition is
  ``for upgrades only''. You may do this for installation, but of course
  you can not use a partition which will be newfs'ed for that purpose.
- mention ext2fs partitions as possible installation sets source only on
  platforms where the installation media actually can mount an ext2fs
  filesystem.
- stress the fact that the sparc miniroot image is a GENERIC kernel with
  a little on-disk filesystem, and not a RAMDISK kernel with a little
  in-memory filesystem, and thus must not be overwritten during installation
  (i.e. be careful if you repartition the disk the miniroot has been put on).
- more conv=sync -> conv=osync for tape setup instructions.
- model-specific layout changes on armish, loongson and socppc instructions.
- fix various typos and grammar mistaeks.

"sure" deraadt@@ (without eyeballing)
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.27 2010/03/06 13:20:40 eric Exp $
d24 2
@


1.27
log
@typo

ok jasper@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.26 2007/03/01 19:17:29 miod Exp $
d5 1
a5 1
	FFS partitions (for upgrades only)
a81 1

@


1.26
log
@Spell ``miniroot'' consistently.
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.25 2006/03/23 06:10:20 deraadt Exp $
d40 2
a41 2
	but don't used the "a" or "c" partition without understanding
	the disk label issues described below under "incompatible systems".
@


1.25
log
@avoid saying format() because of the new gnu m4 extensions.  this is crazy
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.24 2005/03/18 13:30:53 miod Exp $
d31 1
a31 1
	If you don't have a floppy drive you can copy the mini-root
@


1.24
log
@Mention local filesystems are only suitable for upgrades.
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.23 2004/06/22 00:42:12 matthieu Exp $
a64 7

	If you're starting with a virgin disk and trying to do this under
	SunOS, use format(8) and newfs(8) to set up the partitions and
	mark the intended partition as an normal partition type.  If you're
	using OpenBSD, perhaps on another architecture, OpenBSD will
	create a "fictitious label" that will let you access the whole
	disk.
@


1.23
log
@introduce the new xetc set. ok deraadt@@, miod@@, krw@@.
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.22 2004/05/04 23:04:30 deraadt Exp $
d5 1
a5 1
	FFS partitions
@


1.22
log
@s/bootpd/rpc.bootparamd/
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.21 2004/03/17 09:25:10 jmc Exp $
d91 1
a91 1
OpenBSDXferBareTape(xbase xfont xserv xshare)
@


1.21
log
@grammar, consistency fixes, and typos;
ok miod@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.20 2004/03/16 08:25:00 jmc Exp $
d83 3
a85 3
	parameter (bootpd) information and make the OpenBSD bootblock,
	kernel/miniroot partition, and a swap file available as required
	by the netboot setup.
@


1.20
log
@typos and consistency fixes;
ok miod@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.19 2003/03/24 11:33:57 miod Exp $
d39 1
a39 1
	any useful parts of the disk, you can also use another partition,
d41 1
a41 1
	the disklabel issues described below under "incompatible systems".
d43 1
a43 1
	This requires that you be running SunOS, Solaris, OpenBSD or NetBSD
d61 1
a61 1
	operating system on your machine, but it important to understand
@


1.19
log
@Tweak a few texts to cope with the fact that we ship official OpenBSD CD-ROM
and bootable CD-ROM mini images on some platforms, too. Mention such a mini
image for alpha, consistent spelling of CD-ROM, and a few minor updates not
worth mentioning I had lying in my tree.
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.18 2002/12/30 11:13:01 miod Exp $
d11 1
a11 1
able boot from it, or from the supplied bootable CD-ROM mini image. If you
@


1.18
log
@Do not mention NFS as a possible tarballs source when the installation media
does not support NFS mounts.
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.17 2002/10/03 00:19:49 miod Exp $
d10 6
a15 5
If you have the OpenBSD CD-ROM distribution (and a CD-ROM drive), you
may be able boot from it. If you can boot from the CD-ROM,
you are home free and can proceed to the installation steps.  If not,
you will need to do some setup work to prepare a bootable image, either
a floppy, hard drive, or compatible net boot server.
@


1.17
log
@Document upgrades on sparc64 again, and tweak a few things.
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.16 2002/06/30 15:32:14 miod Exp $
a6 1
	Remote NFS partition (NOT supported if booting from floppy)
a17 3
If you have the OpenBSD CD-ROM distribution you can either access the
CD-ROM directly from the bootable image or remotely mounted on another
system via NFS.
d21 2
a22 2
the sets to a local FTP or NFS server, or copy them to a partition on
the target system's disk.
a90 2

OpenBSDXferNFS
@


1.16
log
@Do not suggest the use of the floppy images as poor man's miniroot anymore.
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.15 2002/04/04 21:13:32 jason Exp $
d5 1
a5 2
dnl put back for 3.2
dnl	FFS partitions
d97 2
a98 3
dnl put back for 3.2
dnl
dnl OpenBSDXferFFS
@


1.15
log
@Correct solaris dev names; William Yodlowsky <bsd@@openbsd.rutgers.edu>
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.14 2002/03/23 23:58:50 miod Exp $
d35 6
a40 6
	If you don't have a floppy drive you can copy the floppy
 	installation image "floppy{:--:}OSrev.fs" or the mini-root "miniroot{:--:}OSrev.fs"
 	onto the hard disk you intend to boot on.  Traditionally, the
 	way to do this is to use dd(1) to place the bootable filesystem
 	image in the "swap" partition of the disk (while running in
 	single user mode), and then booting from that partition.
d52 1
a52 3
		dd if=floppy{:--:}OSrev.fs of=/dev/rsd0b bs=36b
 				- or -
 		dd if=miniroot{:--:}OSrev.fs of=/dev/rsd0b bs=36b
d54 1
a54 3
		dd if=floppy{:--:}OSrev.fs of=/dev/rdsk/c0t0d0s1 bs=36b
 				- or -
 		dd if=miniroot{:--:}OSrev.fs of=/dev/rdsk/c0t0d0s1 bs=36b
a75 26

	The floppy image is used only for booting, and can be placed in
	a partition that will be overwritten during the install process,
	since it actually runs off a ram-disk image in the kernel.  In
	contrast the miniroot is a normal unix root filesystem and you
	must place in a partition that will not be overwritten until you've
	completed the installation process.

	To copy the floppy image to the hard disk, preserving SunOS,
	Solaris, NetBSD or OpenBSD labels:
	Under SunOS:
		dd if=floppy{:--:}OSrev.fs of=/dev/rsdXc bs=1b skip=1 seek=1
	and Solaris:
		dd if=floppy{:--:}OSrev.fs of=/dev/rdsk/c0tXd0s2 \
		    bs=1b skip=1 seek=1

	You need to be sure that your version of dd(1) supports the
	skip and seek operands, otherwise you can try a technique like:

		dd if=/dev/rsdXc of=/tmp/label bs=1b count=1
		dd if=floppy{:--:}OSrev.fs of=/dev/rsdXc bs=36b
		dd if=/tmp/label of=/dev/rsdXc bs=1b count=1

	In either case, you've created a situation where the disklabel
	and the filesystem information don't agree about the partition
	size and geometry, however the results will be usable.
@


1.14
log
@Hide upgrade stuff from the installation notes until sparc64 systems can
be upgraded to 3.2.
@
text
@d1 1
a1 1
dnl	$OpenBSD: xfer,v 1.13 2002/02/07 08:57:28 miod Exp $
d56 1
a56 1
		dd if=floppy{:--:}OSrev.fs of=/dev/c0t0d0s1 bs=36b
d58 1
a58 1
 		dd if=miniroot{:--:}OSrev.fs of=/dev/c0t0d0s1 bs=36b
@


1.13
log
@X11 is available for sparc64 now, and add RCSID.
@
text
@d1 1
a1 1
dnl	$OpenBSD$
d5 2
a6 1
	FFS partitions
d128 3
a130 2

OpenBSDXferFFS
@


1.12
log
@- U2 has been tested
- floppies have neither NFS nor CDROM support
- add a section about firmware upgrades, and tell that they might be
necessary, especially for U1/1E/2 systems. Pointed out from brad@@, some of
the information provided here comes from Sun's firmware update documentation.
@
text
@d1 1
@


1.11
log
@The final round of sparc64 installation notes updates:
- add miniroot and bootable cd-rom information
- fix a few wordings
- fix incorrect Solaris manual pages section names
- replace a rip-off of boot_sparc(8) with a more adequate rip-off of
  boot_sparc64(8)

The whole ok deraadt@@
@
text
@d3 1
a3 1
	CD-ROM
d6 1
a6 1
	Remote NFS partition
@


1.10
log
@Solaris friendly update!
- Provide typical Solaris command lines for creating floppies, dumping
miniroots to disks, and filling tapes.
- Make the tape generation script more versatile.
- When SunOS add_client(8) is mentioned, mention Solaris share(1M) as well.
- Add ``Installing from Solaris'' instructions for sparc and sparc64 ports
- While there, slight fixes to the ``Installing from SunOS'' sections on
  sparc and sun3.
@
text
@d10 6
a15 7
dnl XXX uncomment when cd-rom distribution available
dnl If you have the OpenBSD CD-ROM distribution (and a CD-ROM drive), you
dnl may be able boot from it. If you can boot from the CD-ROM,
dnl you are home free and can proceed to the installation steps.  If not,
dnl you will need to do some setup work to prepare a bootable image, either
dnl a floppy, hard drive, or compatible net boot server.
dnl 
d18 8
a25 9
dnl XXX uncomment when cd-rom distribution available
dnl If you have the OpenBSD CD-ROM distribution you can either access the
dnl CD-ROM directly from the bootable image or remotely mounted on another
dnl system via NFS.
dnl
dnl Although you can access the distribution sets directly from the CD-ROM or
dnl from one of the FTP mirrors over the internet, you may wish to transfer
dnl the sets to a local FTP or NFS server, or copy them to a partition on
dnl the target system's disk.
a30 2
dnl XXX make sure to adapt text, especially examples, once miniroot
dnl is available as well.
a32 6
dnl	If you don't have a floppy drive you can copy the floppy
dnl 	installation image "floppy{:--:}OSrev.fs" or the mini-root "miniroot{:--:}OSrev.fs"
dnl 	onto the hard disk you intend to boot on.  Traditionally, the
dnl 	way to do this is to use dd(1) to place the bootable filesystem
dnl 	image in the "swap" partition of the disk (while running in
dnl 	single user mode), and then booting from that partition.
d34 5
a38 5
	installation image "floppy{:--:}OSrev.fs" onto the hard disk
	you intend to boot on.  Traditionally, the way to do this is
	to use dd(1) to place the bootable filesystem image in the
	"swap" partition of the disk (while running in single user
	mode), and then booting from that partition.
d51 2
a52 2
dnl 				- or -
dnl 		dd if=miniroot{:--:}OSrev.fs of=/dev/rsd0b bs=36b
d55 2
a56 2
dnl 				- or -
dnl 		dd if=miniroot{:--:}OSrev.fs of=/dev/c0t0d0s1 bs=36b
d81 4
a84 6
	since it actually runs off a ram-disk image in the kernel.
dnl XXX uncomment end of paragraph once miniroot available
dnl	since it actually runs off a ram-disk image in the kernel.  In
dnl	contrast the miniroot is a normal unix root filesystem and you
dnl	must place in a partition that will not be overwritten until you've
dnl	completed the installation process.
@


1.9
log
@Document the installation floppies, as well as the fact that floppy images
can be used as poor man's miniroot.
@
text
@d31 1
a31 1
OpenBSDXferFloppyFromUnix
d35 1
a35 1
Creating a bootable hard disk using SunOS or other Un*x-like system:
d59 1
a59 2
	Under SunOS, the command would be:

d63 4
d89 9
d100 1
a100 1

d102 3
a133 7
The floppy installation allows installing OpenBSD directly from FTP
mirror sites over the internet, however you must consider the speed and
reliability of your internet connection for this option.  It may save
much time and frustration to use ftp get/reget to transfer the
distribution sets to a local server or disk and perform the installation
from there, rather than directly from the internet.

d135 1
a135 1
OpenBSDXferBareTape
@


1.8
log
@- use the new m4.common shared instructions.
- try to have consistent order, across arches, in the list of possible
  installation media.
- alpha can't install over nfs, but macppc can.
@
text
@d29 9
a37 11
dnl XXX uncomment when floppy available
dnl OpenBSDXferFloppyFromDOS
dnl
dnl OpenBSDXferFloppyFromUnix
dnl
dnl XXX uncomment when floppy or miniroot available
dnl XXX make sure to adapt text, especially examples, if only floppy
dnl XXX or miniroot is available, but not both.
dnl Creating a bootable hard disk using SunOS or other Un*x-like system:
dnl 
dnl 	If you don't have a floppy drive you can copy the floppy
d43 19
a61 13
dnl 
dnl 	Using the "b" partition allows you to boot without overwriting
dnl 	any useful parts of the disk, you can also use another partition,
dnl 	but don't used the "a" or "c" partition without understanding
dnl 	the disklabel issues described below under "incompatible systems".
dnl 
dnl 	This requires that you be running SunOS, Solaris, OpenBSD or NetBSD
dnl 	which have a compatible view of SunOS disk labels and partitions.
dnl 
dnl 	Use the dd(1) utility to copy the file to the hard drive.
dnl 	Under SunOS, the command would be:
dnl 
dnl 		dd if=floppy{:--:}OSrev.fs of=/dev/rsd0b bs=36b
d64 38
a101 56
dnl 
dnl 	The blocksize is arbitrary as long as it's a multiple of 512-bytes
dnl 	and within the maximum supported by the driver, i.e. bs=126b may
dnl 	not work for all cases.  Again, device/partition names may vary,
dnl 	depending on the OS involved.
dnl 
dnl 	If you are preparing the hard drive on an incompatible system or
dnl 	don't care about the hard disk contents, you can also install the
dnl 	bootable image starting at the beginning of the disk. This lets
dnl 	you prepare a bootable hard-drive even if don't have a working
dnl 	operating system on your Sparc, but it important to understand
dnl 	that the bootable image installed this way includes a "disk label"
dnl 	which can wipe out any pre-existing disklabels or partitioning for
dnl 	the drive.
dnl 
dnl 	The floppy image is used only for booting, and can be placed in
dnl 	a partition that will be overwritten during the install process,
dnl 	since it actually runs off a ram-disk image in the kernel.  In
dnl 	contrast the miniroot is a normal unix root filesystem and you
dnl 	must place in a partition that will not be overwritten until you've
dnl 	completed the installation process.
dnl 
dnl 	To copy the floppy image to the whole disk, overwriting labels:
dnl 
dnl 		dd if=floppy{:--:}OSrev.fs of=/dev/rsdXc bs=36b
dnl 
dnl 	Two notes - X should be replaced by the unit number of the target
dnl 	disk, which is most likely *not* the disk/partition that's your
dnl 	current root partition.  Again names may vary depending on the
dnl 	OS involved.  Second, after doing this, the disklabel will be one
dnl 	that would be appropriate for a floppy, i.e. one partition of 2880
dnl 	block, and you'll probably want to change that later on.
dnl 
dnl 	If you're starting with a virgin disk and trying to do this under
dnl 	SunOS, use format(8) and newfs(8) to set up the partitions and
dnl 	mark the intended partition as an normal partition type.  If you're
dnl 	using OpenBSD, perhaps on another architecture, OpenBSD will
dnl 	create a "fictitious label" that will let you access the whole
dnl 	disk.
dnl 
dnl 	To copy the floppy image to the hard disk, preserving SunOS,
dnl 	Solaris, NetBSD or OpenBSD labels:
dnl 
dnl 		dd if=floppy{:--:}OSrev.fs of=/dev/rsdXc bs=1b skip=1 seek=1
dnl 
dnl 	You need to be sure that your version of dd(1) supports the
dnl 	skip and seek operands, otherwise you can try a technique like:
dnl 
dnl 		dd if=/dev/rsdXc of=/tmp/label bs=1b count=1
dnl 		dd if=floppy{:--:}OSrev.fs of=/dev/rsdXc bs=36b
dnl 		dd if=/tmp/label of=/dev/rsdXc bs=1b count=1
dnl 
dnl 	In either case, you've created a situation where the disklabel
dnl 	and the filesystem information don't agree about the partition
dnl 	size and geometry, however the results will be usable.
dnl 
d119 7
a125 8
dnl XXX uncomment when floppy available
dnl The floppy installation allows installing OpenBSD directly from FTP
dnl mirror sites over the internet, however you must consider the speed and
dnl reliability of your internet connection for this option.  It may save
dnl much time and frustration to use ftp get/reget to transfer the
dnl distribution sets to a local server or disk and perform the installation
dnl from there, rather than directly from the internet.
dnl 
@


1.7
log
@o English, typos
o Clarify that cksum(1) and md5(1) are actual commands. Some
  systems only have md5(3) functions and the corresponding
  command is something different.
ok miod@@
@
text
@d3 1
a6 1
	CD-ROM
a28 5
The variety of options listed may seem confusing, but situations vary
widely in terms of what peripherals and what sort of network arrangements
a user has, the intent is to provide some way that will be practical.

dnl
d30 1
a30 32
dnl Creating a bootable floppy disk using DOS/Windows:
dnl
dnl	First you need to get access to the OpenBSD bootable floppy
dnl	images. If you can access the distribution from the CD-ROM under 
dnl	DOS, you will find the bootable disks in the OSREV/MACHINE 
dnl	directory. Otherwise, you will have to download them from one of 
dnl	the OpenBSD ftp or http mirror sites, using an ftp client or a web 
dnl	browser. In either case, take care to do "binary" transfers, since 
dnl	these are images files and any DOS cr/lf translations or control/z 
dnl	EOF interpretations will result in corrupted transfers.
dnl	
dnl	You will also need to go to the "tools" directory and grab a
dnl	copy of the rawrite.exe utility and its documentation.  This
dnl	program is needed to correctly copy the bootable filesystem
dnl	image to the floppy, since it's an image of a unix partition
dnl	containing a ffs filesystem, not a MSDOS format diskette.
dnl
dnl	Once you have installed rawrite.exe, just run it and specify the
dnl	name of the bootable image, such as "floppy.fs" and the name of
dnl	the floppy drive, such as "a:".  Be sure to use good quality HD
dnl	(1.44MB) floppies, formatted on the system you're using.  The
dnl	image copy and boot process is not especially tolerant of read
dnl	errors. 
dnl
dnl	Note that if you are using NT to write the images to disk, you
dnl	will need to use ntrw.exe instead.  It is also available in the
dnl	"tools" directory.  Grab it and run in with the correct 
dnl	arguments like this "ntrw <image> <drive>:"
dnl
dnl	Note that, when installing, the boot floppy can be write-protected
dnl	(i.e.  read-only).
dnl
d32 1
a32 1
dnl Creating a bootable floppy disk using SunOS or other Un*x-like system:
a33 27
dnl	First, you will need obtain a local copy of the bootable filesystem
dnl	image as described above.  If possible use the cksum(1) or md5(1) 
dnl	commands to verify the checksums of the images vs. the values in 
dnl	the CKSUM or MD5 files on the mirror site.
dnl
dnl	Next, use the dd(1) utility to copy the file to the floppy drive.
dnl	Under SunOS, the command would be:
dnl
dnl		dd if=floppy{:--:}OSrev.fs of=/dev/rfd0c bs=36b
dnl
dnl	If you are using something other than SunOS, you may have to adapt
dnl	this to conform to local naming conventions for the floppy and
dnl	options suitable for copying to a "raw" floppy image.  The key
dnl	issue is that the device name used for the floppy *must* be one
dnl	that refers to the correct block device, not a partition or
dnl	compatibility mode, and the copy command needs to be compatible
dnl	with the requirement that writes to a raw device must be in
dnl	multiples of 512-byte blocks.  The variations are endless and
dnl	beyond the scope of this document.
dnl
dnl	If you're doing this on the system you intend to boot the floppy on,
dnl	copying the floppy back to a file and doing a compare or checksum
dnl	is a good way to verify that the floppy is readable and free of
dnl	read/write errors.
dnl
dnl

a115 1

d131 1
a131 4

The steps necessary to prepare the distribution sets for installation
depend on which method of installation you choose.  Some methods
require a bit of setup first that is explained below.
d142 1
a142 70
To install or upgrade OpenBSD using a tape, you need to do the following:

	To install OpenBSD from a tape, you need to make a tape that
	contains the distribution set files, each in "tar" format or
	in "gzipped tar format".  First you will need to transfer the
	distribution sets to your local system, using ftp or by mounting
	the CD-ROM containing the release.  Then you need to make a tape
	containing the files.

	If you're making the tape on a UN*X-like system, the easiest way
	to do so is make a shell script along the following lines, call it
	"/tmp/maketape".

	#! /bin/sh
	tape=/dev/nrst0
	mt -f ${tape} rewind
	for file in base etc comp game man misc
	do
		dd if=${file}OSrev.tgz of=${tape} obs=8k conv=sync
	done
	tar cf ${tape} bsd
	mt -f ${tape} offline
	# end of script


	And then:

	cd .../OSREV/sparc
	sh -x /tmp/maketape

	
	If you're using a system other than OpenBSD or SunOS, the tape
	name and other requirements may change.


To install OpenBSD using a remote partition, mounted via
NFS, you must do the following:

	NOTE:	This method of installation is recommended only for
		those already familiar with using BSD network
		configuration and management commands.  If you aren't,
		this documentation should help, but is not intended to
		be all-encompassing.

	Place the OpenBSD distribution sets you wish to install into a
	directory on an NFS server, and make that directory mountable
	by the machine on which you are installing or upgrading OpenBSD.
	This will probably require modifying the /etc/exports file
	of the NFS server and resetting its mount daemon (mountd).
	(Both of these actions will probably require superuser
	privileges on the server.)

	You need to know the numeric IP address of the NFS server,
	and, if the server is not on a network directly connected to
	the machine on which you're installing or upgrading OpenBSD,
	you need to know the numeric IP address of the router closest
	to the OpenBSD machine.  Finally, you need to know the numeric
	IP address of the OpenBSD machine itself.

	Once the NFS server is set up properly and you have the
	information mentioned above, you can proceed to the next step
	in the installation or upgrade process.  If you're installing
	OpenBSD from scratch, go to the section on preparing your hard
	disk, below.  If you're upgrading an existing installation, go
	directly to the section on upgrading.

If you are upgrading OpenBSD, you also have the option of installing
OpenBSD by putting the new distribution sets somewhere in your existing
file system, and using them from there.  To do that, you must do the
following:
d144 1
a144 7
	Place the distribution sets you wish to upgrade somewhere in
	your current file system tree.  At a bare minimum, you must
	upgrade the "base" binary distribution, and so must put the
	"base{:--:}OSrev" set somewhere in your file system.  If you wish,
	you can do the other sets, as well, but you should NOT upgrade
	the "etc" distribution; the "etc" distribution contains system
	configuration files that you should review and update by hand.
d146 1
a146 2
	Once you have done this, you can proceed to the next step in
	the upgrade process, actually upgrading your system.
@


1.6
log
@I'm so good I managed to cut'n'paste the same typo over all those files.
@
text
@d37 8
a44 8
dnl	First you need to get access to the OpenBSD Bootable floppy
dnl	images.  If you can access the CD-ROM distribution under DOS
dnl	the bootable disks are in the OSREV/MACHINE directory, otherwise
dnl	you you will have to download them from one of the OpenBSD
dnl	ftp or http mirror sites, using ftp or a web-viewer.  In either
dnl	case, take care to do "binary" transfers, since these are
dnl	images files and any DOS cr/lf translations or control/z EOF
dnl	interpretations will result in corrupted transfers.
d71 3
a73 3
dnl	image as described above.  If possible use cksum or md5 to verify
dnl	the checksums of the images vs. the values in the CKSUM or MD5
dnl	files on the mirror site.
d84 1
a84 1
dnl	that refers to the whole 2880 block image, not a partition or
d206 1
a206 1
dnl from there, rather than directly on the internet.
@


1.5
log
@- update supported hardware list
- remove more sparc'isms. The more you remove, the more there are...
- describe more fun installation methods
- fix a random typo
@
text
@d256 1
a256 1
	This will probably require modifying the /etc/exports file on
@


1.4
log
@Don't refer to the ``new single floppy'' installation method, just ``floppy''
will do since the two floppy installation is long dead.
And don't even mention it on sparc64 (yet).
@
text
@d4 1
a9 3
Not all methods are supported on all Sparc Systems and some of them
work only with the floppy or the miniroot installation.

d34 1
a34 1
dnl XXX no floppy available yet
d208 35
@


1.3
log
@Bring the sparc64 installation notes in better shape, and closer to
reality.
Thanks to jason@@ for hints and feedback.
@
text
@d99 3
a101 1
dnl XXX uncomment when miniroot available
d104 1
a104 1
dnl 	If you don't have a floppy drive you can copy the single floppy
d166 1
a166 1
dnl 	Solaris NetBSD or OpenBSD labels:
d202 8
a209 7
The new single floppy installation allows installing OpenBSD directly
from FTP mirror sites over the internet, however you must consider the
speed and reliability of your internet connection for this option.  It
may save much time and frustration to use ftp get/reget to transfer the
distribution sets to a local server or disk and perform the installation
from there, rather than directly on the internet.

@


1.2
log
@Ugh, there's SOO much left to do here
@
text
@d12 7
a18 8
If you have the OpenBSD CD-ROM distribution (and a CD-ROM drive), you
may be able boot from it.  Not all sparc systems support booting from
CD-ROM and the current boot images is only known to work on sun4c and
some sun4m architecture workstations.  If you can boot from the CD-ROM,
you are home free and can proceed to the installation steps.  If not,
you will need to do some setup work to prepare a bootable image, either
a floppy, hard drive, or compatible net boot server.

d20 10
a29 9
access the binary distribution sets to actually install the system.  If
you have the OpenBSD CD-ROM distribution you can either access the
CD-ROM directly from the bootable image or remotely mounted on another
system via NFS.

Although you can access the distribution sets directly from the CD-ROM or
from one of the FTP mirrors over the internet, you may wish to transfer
the sets to a local FTP or NFS server, or copy them to a partition on
the target system's disk or onto a SCSI tape.
d35 144
a178 142

Creating a bootable floppy disk using DOS/Windows:

	First you need to get access to the OpenBSD Bootable floppy
	images.  If you can access the CD-ROM distribution under DOS
	the bootable disks are in the OSREV/sparc directory, otherwise
	you you will have to download them from one of the OpenBSD
	ftp or http mirror sites, using ftp or a web-viewer.  In either
	case, take care to do "binary" transfers, since these are
	images files and any DOS cr/lf translations or control/z EOF
	interpretations will result in corrupted transfers.
	
	You will also need to go to the "tools" directory and grab a
	copy of the rawrite.exe utility and its documentation.  This
	program is needed to correctly copy the bootable filesystem
	image to the floppy, since it's an image of a unix partition
	containing a ffs filesystem, not a MSDOS format diskette.

	Once you have installed rawrite.exe, just run it and specify the
	name of the bootable image, such as "floppy.fs" and the name of
	the floppy drive, such as "a:".  Be sure to use good quality HD
	(1.44MB) floppies, formatted on the system you're using.  The
	image copy and boot process is not especially tolerant of read
	errors. 

	Note that if you are using NT to write the images to disk, you
	will need to use ntrw.exe instead.  It is also available in the
	"tools" directory.  Grab it and run in with the correct 
	arguments like this "ntrw <image> <drive>:"

	Note that, when installing, the boot floppy can be write-protected
	(i.e.  read-only).


Creating a bootable floppy disk using SunOS or other Un*x-like system:

	First, you will need obtain a local copy of the bootable filesystem
	image as described above.  If possible use cksum or md5 to verify
	the checksums of the images vs. the values in the CKSUM or MD5
	files on the mirror site.

	Next, use the dd(1) utility to copy the file to the floppy drive.
	Under SunOS, the command would be:

		dd if=floppy{:--:}OSrev.fs of=/dev/rfd0c bs=36b

	If you are using something other than SunOS, you may have to adapt
	this to conform to local naming conventions for the floppy and
	options suitable for copying to a "raw" floppy image.  The key
	issue is that the device name used for the floppy *must* be one
	that refers to the whole 2880 block image, not a partition or
	compatibility mode, and the copy command needs to be compatible
	with the requirement that writes to a raw device must be in
	multiples of 512-byte blocks.  The variations are endless and
	beyond the scope of this document.

	If you're doing this on the system you intend to boot the floppy on,
	copying the floppy back to a file and doing a compare or checksum
	is a good way to verify that the floppy is readable and free of
	read/write errors.



Creating a bootable hard disk using SunOS or other Un*x-like system:

	If you don't have a floppy drive you can copy the single floppy
	installation image "floppy{:--:}OSrev.fs" or the mini-root "miniroot{:--:}OSrev.fs"
	onto the hard disk you intend to boot on.  Traditionally, the
	way to do this is to use dd(1) to place the bootable filesystem
	image in the "swap" partition of the disk (while running in
	single user mode), and then booting from that partition.

	Using the "b" partition allows you to boot without overwriting
	any useful parts of the disk, you can also use another partition,
	but don't used the "a" or "c" partition without understanding
	the disklabel issues described below under "incompatible systems".

	This requires that you be running SunOS, Solaris, OpenBSD or NetBSD
	which have a compatible view of SunOS disk labels and partitions.

	Use the dd(1) utility to copy the file to the hard drive.
	Under SunOS, the command would be:

		dd if=floppy{:--:}OSrev.fs of=/dev/rsd0b bs=36b
				- or -
		dd if=miniroot{:--:}OSrev.fs of=/dev/rsd0b bs=36b

	The blocksize is arbitrary as long as it's a multiple of 512-bytes
	and within the maximum supported by the driver, i.e. bs=126b may
	not work for all cases.  Again, device/partition names may vary,
	depending on the OS involved.

	If you are preparing the hard drive on an incompatible system or
	don't care about the hard disk contents, you can also install the
	bootable image starting at the beginning of the disk. This lets
	you prepare a bootable hard-drive even if don't have a working
	operating system on your Sparc, but it important to understand
	that the bootable image installed this way includes a "disk label"
	which can wipe out any pre-existing disklabels or partitioning for
	the drive.

	The floppy image is used only for booting, and can be placed in
	a partition that will be overwritten during the install process,
	since it actually runs off a ram-disk image in the kernel.  In
	contrast the miniroot is a normal unix root filesystem and you
	must place in a partition that will not be overwritten until you've
	completed the installation process.

	To copy the floppy image to the whole disk, overwriting labels:

		dd if=floppy{:--:}OSrev.fs of=/dev/rsdXc bs=36b

	Two notes - X should be replaced by the unit number of the target
	disk, which is most likely *not* the disk/partition that's your
	current root partition.  Again names may vary depending on the
	OS involved.  Second, after doing this, the disklabel will be one
	that would be appropriate for a floppy, i.e. one partition of 2880
	block, and you'll probably want to change that later on.

	If you're starting with a virgin disk and trying to do this under
	SunOS, use format(8) and newfs(8) to set up the partitions and
	mark the intended partition as an normal partition type.  If you're
	using OpenBSD, perhaps on another architecture, OpenBSD will
	create a "fictitious label" that will let you access the whole
	disk.

	To copy the floppy image to the hard disk, preserving SunOS,
	Solaris NetBSD or OpenBSD labels:

		dd if=floppy{:--:}OSrev.fs of=/dev/rsdXc bs=1b skip=1 seek=1

	You need to be sure that your version of dd(1) supports the
	skip and seek operands, otherwise you can try a technique like:

		dd if=/dev/rsdXc of=/tmp/label bs=1b count=1
		dd if=floppy{:--:}OSrev.fs of=/dev/rsdXc bs=36b
		dd if=/tmp/label of=/dev/rsdXc bs=1b count=1

	In either case, you've created a situation where the disklabel
	and the filesystem information don't agree about the partition
	size and geometry, however the results will be usable.

a205 50


To install or upgrade OpenBSD using a tape, you need to do the following:

	To install OpenBSD from a tape, you need to make a tape that
	contains the distribution set files, each in "tar" format or
	in "gzipped tar format".  First you will need to transfer the
	distribution sets to your local system, using ftp or by mounting
	the CD-ROM containing the release.  Then you need to make a tape
	containing the files.

	If you're making the tape on a UN*X-like system, the easiest way
	to do so is make a shell script along the following lines, call it
	"/tmp/maketape".

	#! /bin/sh
	tape=/dev/nrst0
	mt -f ${tape} rewind
	if test $# -lt 1
	then
		for file in bsd.rd boot
		do
			dd if=${file} of=${tape} obs=8k conv=sync
		done
	fi
	for file in base etc comp game man misc xbase xfont xserv xshare
	do
		dd if=${file}OSrev.tgz of=${tape} obs=8k conv=sync
	done
	tar cf ${tape} bsd
	mt -f ${tape} offline
	# end of script


	And then:

	cd .../OSREV/sparc
	sh -x /tmp/maketape

	
	Note that this script creates a bootable tape. If you only want to
	fetch the OpenBSD files from tape, but want to boot from another
	device, you can save time and space creating the tape this way:

	cd .../OSREV/sparc
	sh -x /tmp/maketape noboot

	
	If you're using a system other than OpenBSD or SunOS, the tape
	name and other requirements may change.
@


1.1
log
@stolen verbatim from sparc and only slightly modified from there... this
is going to need a LOT of work (any volunteers?)
@
text
@a3 1
	Tape
@

