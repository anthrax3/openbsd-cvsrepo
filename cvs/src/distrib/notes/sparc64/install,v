head	1.51;
access;
symbols
	OPENBSD_6_1:1.51.0.2
	OPENBSD_6_1_BASE:1.51
	OPENBSD_6_0:1.50.0.6
	OPENBSD_6_0_BASE:1.50
	OPENBSD_5_9:1.50.0.2
	OPENBSD_5_9_BASE:1.50
	OPENBSD_5_8:1.50.0.4
	OPENBSD_5_8_BASE:1.50
	OPENBSD_5_7:1.49.0.2
	OPENBSD_5_7_BASE:1.49
	OPENBSD_5_6:1.48.0.4
	OPENBSD_5_6_BASE:1.48
	OPENBSD_5_5:1.47.0.2
	OPENBSD_5_5_BASE:1.47
	OPENBSD_5_4:1.45.0.12
	OPENBSD_5_4_BASE:1.45
	OPENBSD_5_3:1.45.0.10
	OPENBSD_5_3_BASE:1.45
	OPENBSD_5_2:1.45.0.8
	OPENBSD_5_2_BASE:1.45
	OPENBSD_5_1_BASE:1.45
	OPENBSD_5_1:1.45.0.4
	OPENBSD_5_0:1.45.0.6
	OPENBSD_5_0_BASE:1.45
	OPENBSD_4_9:1.45.0.2
	OPENBSD_4_9_BASE:1.45
	OPENBSD_4_8:1.44.0.4
	OPENBSD_4_8_BASE:1.44
	OPENBSD_4_7:1.44.0.2
	OPENBSD_4_7_BASE:1.44
	OPENBSD_4_6:1.43.0.4
	OPENBSD_4_6_BASE:1.43
	OPENBSD_4_5:1.41.0.4
	OPENBSD_4_5_BASE:1.41
	OPENBSD_4_4:1.41.0.2
	OPENBSD_4_4_BASE:1.41
	OPENBSD_4_3:1.40.0.2
	OPENBSD_4_3_BASE:1.40
	OPENBSD_4_2:1.39.0.4
	OPENBSD_4_2_BASE:1.39
	OPENBSD_4_1:1.39.0.2
	OPENBSD_4_1_BASE:1.39
	OPENBSD_4_0:1.38.0.6
	OPENBSD_4_0_BASE:1.38
	OPENBSD_3_9:1.38.0.4
	OPENBSD_3_9_BASE:1.38
	OPENBSD_3_8:1.38.0.2
	OPENBSD_3_8_BASE:1.38
	OPENBSD_3_7:1.36.0.2
	OPENBSD_3_7_BASE:1.36
	OPENBSD_3_6:1.34.0.4
	OPENBSD_3_6_BASE:1.34
	OPENBSD_3_5:1.34.0.2
	OPENBSD_3_5_BASE:1.34
	OPENBSD_3_4:1.30.0.2
	OPENBSD_3_4_BASE:1.30
	OPENBSD_3_3:1.29.0.2
	OPENBSD_3_3_BASE:1.29
	OPENBSD_3_2:1.27.0.2
	OPENBSD_3_2_BASE:1.27
	OPENBSD_3_1:1.23.0.2
	OPENBSD_3_1_BASE:1.23
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13;
locks; strict;
comment	@# @;


1.51
date	2017.03.04.22.46.20;	author tj;	state Exp;
branches;
next	1.50;
commitid	xnTPjpt7rqMAe9Je;

1.50
date	2015.03.27.20.50.40;	author miod;	state Exp;
branches;
next	1.49;
commitid	Su4qESnMQy3wms7I;

1.49
date	2015.01.11.21.02.55;	author miod;	state Exp;
branches;
next	1.48;
commitid	Wi3D5hpLLtf8TCUT;

1.48
date	2014.03.19.01.59.49;	author tedu;	state Exp;
branches;
next	1.47;

1.47
date	2013.12.04.23.20.19;	author jmc;	state Exp;
branches;
next	1.46;

1.46
date	2013.12.04.20.24.01;	author miod;	state Exp;
branches;
next	1.45;

1.45
date	2010.10.18.05.41.02;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2010.03.16.17.23.09;	author miod;	state Exp;
branches;
next	1.43;

1.43
date	2009.05.13.18.38.29;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2009.05.12.21.06.51;	author miod;	state Exp;
branches;
next	1.41;

1.41
date	2008.08.05.22.58.01;	author miod;	state Exp;
branches;
next	1.40;

1.40
date	2008.03.10.21.38.28;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2007.03.01.19.24.45;	author miod;	state Exp;
branches;
next	1.38;

1.38
date	2005.08.10.01.38.48;	author brad;	state Exp;
branches;
next	1.37;

1.37
date	2005.08.09.16.48.11;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	2005.03.09.18.41.46;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2005.01.15.21.25.30;	author krw;	state Exp;
branches;
next	1.34;

1.34
date	2004.03.17.09.25.10;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2004.03.16.08.25.00;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2004.02.09.13.32.52;	author todd;	state Exp;
branches;
next	1.31;

1.31
date	2003.10.01.09.58.14;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2003.09.07.12.01.56;	author krw;	state Exp;
branches;
next	1.29;

1.29
date	2003.01.04.00.18.09;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2002.12.30.11.13.01;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2002.10.03.00.19.49;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2002.06.30.15.32.14;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2002.06.09.05.53.55;	author todd;	state Exp;
branches;
next	1.24;

1.24
date	2002.04.17.23.32.12;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2002.04.09.01.22.23;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2002.04.07.23.31.04;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2002.03.30.22.52.58;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2002.03.28.19.54.40;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2002.03.23.23.58.50;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2002.03.23.23.29.16;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2002.02.07.08.57.28;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2001.12.08.17.10.00;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2001.11.07.08.21.00;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2001.11.02.01.54.02;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2001.10.16.22.31.14;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.10.15.18.36.20;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2001.10.14.18.28.02;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.11.22.56.54;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.10.10.21.05.29;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2001.10.06.19.29.01;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.02.20.03.25;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.02.00.37.44;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.01.23.31.09;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.01.01.08.12;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.27.00.36.43;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.24.21.14.06;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.19.16.23.58;	author jason;	state Exp;
branches;
next	;


desc
@@


1.51
log
@remove/tweak some cd-related text.

ok deraadt
@
text
@dnl	$OpenBSD: install,v 1.50 2015/03/27 20:50:40 miod Exp $
OpenBSDInstallPrelude

There are several ways to install OpenBSD onto a disk. The easiest way
in terms of preliminary setup is to use an OpenBSD installation CD-ROM
or an installation floppy (if your machine can boot from floppy).

If your machine is hooked up to a network, try and find a server to
arrange for a diskless setup. This is a convenient way to install on a
machine whose disk does not currently hold a usable operating system.
This is difficult to get set up correctly the first time, but easy to
use afterwards.  (See ``Installing using a diskless setup'' below.)

Booting from the Installation Media:

Prior to attempting an installation, you should make sure that everything
of value on the target system has been backed up.  While installing OpenBSD
does not necessarily wipe out all the partitions on the hard disk, errors
during the install process can have unforeseen consequences and you will
probably render the system unbootable if you start, but do not complete
the installation.  Having the installation media for the prior installation,
be it a Solaris or OpenBSD CD-ROM or OpenBSD install diskettes, is good
insurance if you want to be able to "go back" for some reason.

After taking care of all that, bring your system down gracefully using
the shutdown(8) and/or halt(8) commands.  This will get you to the monitor
prompt.


Booting from Floppy Disk installation media:

       ok boot floppy bsd

This will cause the kernel contained in the floppy to be booted.
Not all systems are able to boot from floppy; also, Ultra 1, 1E, and 2
systems might need a firmware update to be able to boot from floppy;
refer to the ``Updating your firmware'' section earlier in
this document for details.


Booting From CD-ROM installation media:

dnl No args! not a typo
	ok boot cdrom

If the boot is successful, you will get a loader version message,
executable sizes, and then the kernel copyright and device probe
messages.  Boot failure modes are typically a lot of CD-ROM drive
activity, but no messages or complaints about magic numbers,
checksums or formats.


Booting from disk:

Boot the miniroot by typing the appropriate command at the PROM:

	ok boot disk:b bsd

If you've loaded the miniroot onto some other disk than the default
drive 0, modify the boot specifier accordingly, keeping in mind the
partition naming a=0, b=1...

	ok boot disk1:b bsd     # example - scsi target 1 or
				# second ide drive


Installing using a diskless setup:

First, you must set up a diskless client configuration on a server. If
you are using an OpenBSD system as the boot-server, have a look at the
diskless(8) manual page for guidelines on how to proceed with this.
If the server runs another operating system, you'll have to consult
documentation that came with it (on SunOS systems, add_client(8) and
the Sun System/Networks administrators guide constitute a good start;
on Solaris systems, share(1M) is a good starting point as well).


Boot your workstation from the server by entering the appropriate `boot'
command at the monitor prompt:

	ok boot net bsd.rd


Installing using the Floppy, CD-ROM, miniroot or netboot procedure:

OpenBSDInstallPart2

	Boot your machine from the installation media as described above.

	It will take a while to load the kernel especially from a floppy
	or slow network connection, most likely more than a minute.  If
	some action doesn't eventually happen, or the spinning cursor has
	stopped and nothing further has happened, either your boot media
	is bad, your diskless setup isn't correct, or you may have
	a hardware or configuration problem.

OpenBSDInstallPart3

OpenBSDInstallPart4

OpenBSDInstallPart5

OpenBSDInstallPart6({:-CD-ROM, -:})

OpenBSDURLInstall

OpenBSDCDROMInstall
		
OpenBSDDISKInstall({:-"wdN" or -:},{:-only -:})

OpenBSDCommonInstall

OpenBSDInstallWrapup

After completing an installation:

Now try a reboot.  (If needed, swap your SCSI IDs first).

The UltraSPARC OpenFirmware will normally load the kernel from the device
and filename as instructed by the ``boot-device'' and ``boot-file''
variables.  If the ``boot-file'' variable is empty, the OpenBSD bootloader
will look for a kernel named ``bsd'', unless a different filename has been
specified in the boot command.  To reset this variable to its default,
empty, value, type the following:

    ok set-default boot-file


OpenBSDCongratulations


Net Boot or Diskless Setup Information:

The set up is similar to the diskless setup, but not identical, because
the Sun setup assumes that the bootblocks load a kernel image, which then
uses NFS to access the exported root partition, while the OpenBSD bootblocks
use internal NFS routines to load the kernel image directly from the
exported root partition.

Please understand that no one gets this right the first try, since
there is a lot of setup and all the host daemons must be running and
configured correctly.  If you have problems, extract the diskless(8)
manpage, find someone who's been through it before and use the host
syslog and tcpdump(8) to get visibility of what's happening (or not).

Your UltraSPARC expects to be able to download a second stage bootstrap
program via TFTP after having acquired its IP address through RevARP when
instructed to boot "over the net". It will look for a filename composed of
the machine's IP address. For example, a machine which has been assigned IP
address 130.115.144.11 will make a TFTP request for `8273900B'.
Normally, this file is a symbolic link to an appropriate second-stage
boot program, which should be located in a place where the TFTP daemon
can find it (remember, many TFTP daemons run in a chroot'ed environment).

You can find the boot program in `/usr/mdec/boot' in the OpenBSD/MACHINE
distribution.

After the boot program has been loaded into memory and given control by
the PROM, it starts locating the machine's remote root directory through
the BOOTPARAM protocol. First a BOOTPARAM WHOAMI request is broadcast
on the local net. The answer to this request (if it comes in) contains
the client's name. This name is used in the next step, a BOOTPARAM GETFILE
request -- sent to the server that responded to the WHOAMI request --
requesting the name and address of the machine that will serve the client's
root directory, as well as the path of the client's root on that server.

Finally, this information (if it comes in) is used to issue a REMOTE MOUNT
request to the client's root filesystem server, asking for an NFS file
handle corresponding to the root filesystem. If successful, the boot
program starts reading from the remote root filesystem in search of the
kernel which is then read into memory.

You will want export the miniroot{:--:}OSrev.fs filesystem to the client.  You
can dd this filesystem image to some spare partition, mount and export
that partition, or use tar to copy the contents to a more convenient spot.

Alternatively you can build a bootable partition from the distribution sets
as follows:

Unpack `base{:--:}OSrev.tgz' on the server in the root directory for your
target machine. If you elect to use a separately NFS-mounted filesystem for
`/usr' with your diskless setup, make sure the "./usr" base files in
base{:--:}OSrev.tgz end up in the correct location. One way to do this is
to temporarily use a loopback mount on the server, re-routing <root>/usr to
your server's exported OpenBSD "/usr" directory. Also put the kernel and
the install/upgrade scripts into the root directory.

A few configuration files need to be edited:

	<root>/etc/hosts
		Add the IP addresses of both server and client.

	<root>/etc/myname
		This files contains the client's hostname; use the same
		name as in <root>/etc/hosts.

	<root>/etc/fstab
		Enter the entries for the remotely mounted filesystems.
		For example:
			server:/export/root/client       /     nfs  rw 0 0
			server:/export/exec/MACHINE.OpenBSD /usr  nfs  rw 0 0

OpenBSDInstNFS



OpenBSDUnattendedInstallation
@


1.50
log
@Remove `installing from SunOS' and `installing from Solaris' instructions.
They are much more troublesome than using the miniroot, and if you're actually
still running a SunOS setup in 2015, then you're me, and you don't need to be
told this information anyway.

Do not suggest disks might be shared between OpenBSD and SunOS or Solaris
anymore. This is just asking for trouble.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.49 2015/01/11 21:02:55 miod Exp $
d5 2
a6 2
in terms of preliminary setup is to use the OpenBSD installation
CD-ROM, or an installation floppy (if your machine can boot from floppy).
@


1.49
log
@No more etc set, also sparc nowadays needs more than 16MB to boot multiuser.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.48 2014/03/19 01:59:49 tedu Exp $
a13 4
It is also possible to install OpenBSD "manually" from a running Solaris
system, using the system tools, as well as gunzip; see ``Installing from
Solaris'' below.

a129 89


Installing from Solaris:

You need a machine running under Solaris to install OpenBSD.  You will
also need at least the following pieces:

  - the *.tgz files you want to install (as a minimum, base{:--:}OSrev.tgz and
    etc{:--:}OSrev.tgz)
  - gunzip (GNU gzip) Solaris binary
  - the OpenBSD boot blocks (bootblk and ofwboot)
  - an OpenBSD kernel

All these pieces, except gunzip, are supplied in the OpenBSD/MACHINE
distribution.

You need to format and partition the disk using Solaris (since
OpenBSD/MACHINE uses Sun compatible disk labels).  Give yourself adequate
partition sizes.  Here is an example layout:

    solaris# prtvtoc -s /dev/rdsk/c0t1d0s2
    *                          First     Sector    Last
    * Partition  Tag  Flags    Sector     Count    Sector  Mount Directory
           0      2    00          0     80000     79999   /
           1      3    01      80000    256000    335999
           2      5    00          0   4165271   4165270
           3      7    00     336000    100000    435999   /tmp
           4      7    00     436000    100000    535999   /var
           5      7    00     536000    400000    935999   /var/tmp
           6      4    00     936000   3229271   4165270   /usr

Use Solaris to newfs the partitions which will have filesystems on them.
(OpenBSD's filesystem format is almost identical to Solaris.)

    solaris# newfs /dev/rdsk/c0t1d0s0
    [... lots of output]

Repeat for any other partition (in this example, /dev/rdsk/c0t1d0s3,
/dev/rdsk/c0t1d0s4, /dev/rdsk/c0t1d0s5 and /dev/rdsk/c0t1d0s6).

dnl XXX I had no time to check the -O restriction is still necessary.
NOTE: If you are able to, there is a performance benefit from
newfs'ing using OpenBSD.  If you newfs using the OpenBSD newfs command,
be sure to use the -O flag for your / partition, so that newfs will
use the 4.3BSD filesystem format, rather than the new 4.4BSD filesystem
format.  If you forget, you will not be able to boot -- the Solaris boot
blocks do not understand the extended 4.4BSD filesystem format.

Mount those partitions in a tree formation, under /mnt; ie:

    solaris# df -k
    Filesystem            kbytes    used   avail capacity  Mounted on
    [...]
    /dev/dsk/c0t1d0s0      38427       0   38427     0%    /mnt
    /dev/dsk/c0t1d0s3      48249       0   48249     0%    /mnt/tmp
    /dev/dsk/c0t1d0s4      48249       0   48249     0%    /mnt/var
    /dev/dsk/c0t1d0s5     193536       0  193536     0%    /mnt/var/tmp
    /dev/dsk/c0t1d0s6    1564024       0 1564024     0%    /mnt/usr

Place the boot blocks in /mnt (your new root partition), and use the Solaris
command "installboot" to make it work.
The installboot man page says to do something like this:

    solaris# cp bootblk ofwboot /mnt
    solaris# sync; sync
    solaris# /usr/sbin/installboot /mnt/bootblk /dev/rdsk/c0t1d0s0

You can now extract the provided "*.tgz" files onto your disk.

    solaris# ls -FC
    base{:--:}OSrev.tgz     etc{:--:}OSrev.tgz      xbase{:--:}OSrev.tgz     xshare{:--:}OSrev.tgz
    bsd            game{:--:}OSrev.tgz     xfont{:--:}OSrev.tgz
    comp{:--:}OSrev.tgz     man{:--:}OSrev.tgz      xserv{:--:}OSrev.tgz
    solaris{:-#-:} gunzip < base{:--:}OSrev.tgz | (cd /mnt; tar xvpf -)
    [...] for each set

And finally copy the OpenBSD kernel onto your disk.

    solaris# cp bsd /mnt/bsd

The GNU gunzip program is not distributed as part of Solaris, but may be
present in your /usr/local/bin.  If not, you will need to obtain it from a
GNU archive and install before proceeding.

After the files have been extracted, set up /mnt/etc/fstab to match
your actual disk layout.  (Minus the "/mnt" component of each path, of
course :-)

Now proceed to reboot the machine and the customize your installation.
@


1.48
log
@you are still welcome to install from tape, but as befits an elite master
of unix arcana, we will not condescend to tell you how. why spoil the fun?
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.47 2013/12/04 23:20:19 jmc Exp $
d273 4
a276 4
Unpack `base{:--:}OSrev.tgz' and `etc{:--:}OSrev.tgz' on the server in the root directory
for your target machine. If you elect to use a separately NFS-mounted
filesystem for `/usr' with your diskless setup, make sure the "./usr" base
files in base{:--:}OSrev.tgz end up in the correct location. One way to do this is
@


1.47
log
@committing uwe's autoinstall notes, as requested by deraadt;
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.46 2013/12/04 20:24:01 miod Exp $
d107 1
a107 1
OpenBSDInstallPart6({:-CD-ROM, tape, -:})
a115 2

OpenBSDTAPEInstall
@


1.46
log
@Do not suggest changing boot-file to boot the SMP kernel, since the installer
sets up /bsd as the SMP kernel on SMP systems; jkatz
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.45 2010/10/18 05:41:02 deraadt Exp $
d299 4
@


1.45
log
@no more misc set
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.44 2010/03/16 17:23:09 miod Exp $
a132 5

On multiprocessor systems, to boot the multiprocessor kernel automatically,
type the following:

    ok setenv boot-file bsd.mp
@


1.44
log
@Jumbo commit for 4.7 installation instructions:
- do not mention tape as an installation media on systems where it is very
  unlikely that a tape drive can be connected to (i.e. anything with only
  USB as expansion capabilities)
- do not mention that fetching the installation sets from a partition is
  ``for upgrades only''. You may do this for installation, but of course
  you can not use a partition which will be newfs'ed for that purpose.
- mention ext2fs partitions as possible installation sets source only on
  platforms where the installation media actually can mount an ext2fs
  filesystem.
- stress the fact that the sparc miniroot image is a GENERIC kernel with
  a little on-disk filesystem, and not a RAMDISK kernel with a little
  in-memory filesystem, and thus must not be overwritten during installation
  (i.e. be careful if you repartition the disk the miniroot has been put on).
- more conv=sync -> conv=osync for tape setup instructions.
- model-specific layout changes on armish, loongson and socppc instructions.
- fix various typos and grammar mistaeks.

"sure" deraadt@@ (without eyeballing)
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.43 2009/05/13 18:38:29 miod Exp $
d211 3
a213 3
    base{:--:}OSrev.tgz     etc{:--:}OSrev.tgz      misc{:--:}OSrev.tgz     xserv{:--:}OSrev.tgz
    bsd            game{:--:}OSrev.tgz     xbase{:--:}OSrev.tgz    xshare{:--:}OSrev.tgz
    comp{:--:}OSrev.tgz     man{:--:}OSrev.tgz      xfont{:--:}OSrev.tgz
@


1.43
log
@Better disk partitioning details, especially for MBR + disklabel or
HFS + disklabel setups.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.42 2009/05/12 21:06:51 miod Exp $
d107 1
a107 1
OpenBSDInstallPart6({:-CD-ROM, -:})
@


1.42
log
@Try to catch up with installer changes in the installation notes.
Also, the per-platform features are moved to a common place, which makes
the MD layout easier to work on. m4.common is still a tangled mess of subtly
placed dnl, though...
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.41 2008/08/05 22:58:01 miod Exp $
d109 1
a109 3
OpenBSDFTPInstall

OpenBSDHTTPInstall
@


1.41
log
@Better description of the installation steps:
- document questions in proper order: hostname before network configuration,
  DNS only if network is configured, sshd and ntpd, aperture only on
  machines which need it, serial console only on machines which need it.
  This is done by splitting the end of OpenBSDCommonURL in various
  macros, OpenBSDInstallWrapup, OpenBSDInstallAperture, OpenBSDInstallConsole
  and OpenBSDInstallWrapupPart2.
- use the above macros when appropriate, OpenBSDInstallWrapup* being
  mandatory on all arches.
- remove serial console configuration blurb on sparc and sparc64, it is
  handled by OpenBSDInstallConsole now.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.40 2008/03/10 21:38:28 miod Exp $
a100 8
OpenBSDBootMsgs

	You will next be asked for your terminal type.  If you are
	installing from a non-serial console, the default of "vt220"
	is correct.  If you are installing from a serial console
	you should choose the terminal type from amongst those listed.
	(If your terminal type is xterm, just use vt220.)

d105 1
a105 1
OpenBSDInstallPart5(wd0)
d107 1
a107 1
OpenBSDInstallNet({:-CD-ROM, -:},nofloppy)
a112 2
OpenBSDTAPEInstall

d117 3
a119 3
OpenBSDCommonFS
		
OpenBSDCommonURL
a121 4

OpenBSDInstallAperture

OpenBSDInstallWrapupPart2
@


1.40
log
@Suggest vt220 as a TERM value for serial-console-in-an-xterm setup everywhere
instead of a mix of vt100 and vt220.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.39 2007/03/01 19:24:45 miod Exp $
d6 1
a6 1
CD-ROM, or an installation floppy.
a69 9
During the boot, the kernel might not be able to determine by itself
which device it has been booted from.  In this case, it will ask you
for the root and swap devices.  Answer the device and partition you
booted from as the root partition (likely sd0b or wd0b); you might
want to rely on the boot messages to find the correct device name
(see below).  When the kernel asks you for the swap device, just
validate the suggested device name; since the installation procedure
does not use swap, it doesn't matter.

d131 6
d150 5
a156 11

If you will be running your OpenBSD system from a serial console, you may
need to edit /etc/ttys and change the terminal type, and getty method from
"sun" and "suncons" to "vt100" and "std.9600" or something similar.  Also
when running from a serial console, you may wish to adjust the eeprom
settings for input-device, output-device, screen-#columns, and screen-#rows
as appropriate.

In order to use 'tip' on OpenBSD/MACHINE, you'll need to edit /etc/ttys
and add "local" to the end of the tty configuration line, and run
'ttyflags -a' to put your changes into effect.
@


1.39
log
@Your spring jumbo m4-fu. This time:
- mention comp contains an objective-C compiler too.
- rewrite InstallPrelude so that it will only output the ``know your drive
  geometry'' blurb if asked to, and for a specified disk type. Use it for
  non-IDE and non-SCSI disks only, otherwise the kernel is good enough to
  do the job without the users' help.
- similarily, adapt BootMsgs to make the second part of the geometry blurb
  optional, and to accept up to three disk types. Use this to report better
  disk names (i.e. no point saying an scsi disk would show up as sd0 on
  platforms which can't have scsi disks, or won't be able to boot from them).
- in InstallPart4, drop the part about block and fragment sizes in
  disklabel. The defaults are good, and you won't get to change them unless
  you switched to expert mode.
- the default answer to ``wanna get the ftp mirror list, unzel?'' is ``no'',
  so pressing enter to get it is not enough anymore (-:
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.38 2005/08/10 01:38:48 brad Exp $
a111 5
	While booting, you might get this kind of warning:
	"No counter-timer -- using %tick at 179MHz as system clock."
	Unless the frequency displayed does not match your CPU speed,
	this is nothing to worry about.

d113 2
a114 2
	installing from a keyboard/monitor console, the default of
	"sun" is correct.  If you are installing from a serial console
d116 1
a116 1
	(If your terminal type is xterm, just use vt100.)
@


1.38
log
@typo, ablt -> able
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.37 2005/08/09 16:48:11 deraadt Exp $
d123 1
a123 1
OpenBSDInstallPart3({:- or "wd0" for IDE drives-:})
d127 1
a127 1
OpenBSDInstallPart5(sd0)
@


1.37
log
@apparently some ultra machines do need this, work by miod; testing my uwe
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.36 2005/03/09 18:41:46 miod Exp $
d39 1
a39 1
Not all systems are ablt to boot from floppy; also, Ultra 1, 1E, and 2
@


1.36
log
@Preliminary support for the floppy drive on Ultrasparcs. Only tested on
SBus machines so far, although EBus attachment glue is provided but not enabled
by default.

Also, fdformat(8) does not work correctly yet, although reading and writing
is safe; this will hopefully be fixed in the near future.

ok deraadt@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.35 2005/01/15 21:25:30 krw Exp $
d6 1
a6 3
dnl XXX change back if more than one floppy again.
dnl CD-ROM, or an installation floppy.
CD-ROM, or the installation floppy.
d39 3
a41 3
Please note that PCI systems are not able to boot from floppy; also,
Ultra 1, 1E, and 2 systems might need a firmware update to be able to boot
from floppy; refer to the ``Updating your firmware'' section earlier in
@


1.35
log
@Problems with Blade100 network installs/upgrades using
keyboard+monitor seem to have disappeared post-3.6.

ok miod@@.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.34 2004/03/17 09:25:10 jmc Exp $
d114 1
a114 6
	While booting, you will probably see several warnings.  You
	may be warned that the kernel can't figure out what device
	it booted from.  Do not be alarmed, this is completely normal.
	This warning occurs because while OpenBSD/MACHINE can boot from
	the floppy drive, the kernel itself lacks a floppy driver.
	On some machines, you might also get this kind of warning:
@


1.34
log
@grammar, consistency fixes, and typos;
ok miod@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.33 2004/03/16 08:25:00 jmc Exp $
a18 9

On Blade100 systems you must use a serial console if you want to install or
upgrade using the network. There is currently a problem that causes the
system to crash if you attempt an FTP or HTTP install while the keyboard
and monitor are attached. Simply unplug the keyboard, connect the serial
port to the system you will use as the console, and reboot. There is no
problem with normal operation over the network once the install or upgrade
is complete. 

@


1.33
log
@typos and consistency fixes;
ok miod@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.32 2004/02/09 13:32:52 todd Exp $
d7 2
a8 2
dnl cdrom, or an installation floppy.
cdrom, or the installation floppy.
d10 2
a11 2
If your machine is hooked up to a network and you can find a server to
arrange for a diskless setup, which is a convenient way to install on a
d22 3
a24 3
system to crash if you attempt an ftp or http install while the keyboard
and a monitor are attached. Simply unplug the keyboard, connect the serial
port to the system you will use as the console and reboot. There is no
d37 1
a37 1
be it a Solaris or OpenBSD CD-ROM or OpenBSD install diskettes is good
d51 1
a51 1
Ultra 1, 1E and 2 systems might need a firmware update to be able to boot
d62 1
a62 1
executable sizes and then the Kernel copyright and device probe
d94 1
a94 1
you are using a OpenBSD system as the boot-server, have a look at the
d137 1
a137 1
	(If your terminal type is xterm, just use vt100).
d163 1
a163 1
Now try a reboot.  (If needed, swap your scsi id's first).
d204 1
a204 1
OpenBSD/MACHINE uses Sun compatible disk labels.)  Give yourself adequate
d219 1
a219 1
(OpenBSD's filesystem format is almost identical to Solaris).
d254 1
a254 1
You can now extract the provided "*.tgz files onto your disk.
d296 1
a296 1
address 130.115.144.11, will make an TFTP request for `8273900B'.
d321 1
a321 1
that partition or use tar to copy the contents to a more convenient spot.
@


1.32
log
@be accurate now that SunOS compat output does not exist in MAKEDEV; ok miod@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.31 2003/10/01 09:58:14 miod Exp $
d10 1
a10 1
If your machine is hooked up in a network and you can find a server to
d14 1
a14 1
use afterwards.  (see ``Installing using a diskless setup'' below).
d86 1
a86 1
(see below).  When the kernel asks your for the swap device, just
d93 1
a93 1
First, you must setup a diskless client configuration on a server. If
d135 1
a135 1
	"sun" if correct.  If you are installing from a serial console
d271 1
a271 1
After the files have been extracted, setup /mnt/etc/fstab to match
d308 1
a308 1
the client's name. This name is used in next step, a BOOTPARAM GETFILE
@


1.31
log
@There were a couple of mistakes in the "installing from solaris" section
reported on sparc@@.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.30 2003/09/07 12:01:56 krw Exp $
d349 1
a349 11
Now you must populate the `/dev' directory for your client. If the server
runs SunOS 4.x, you can simply change your working directory to `<root>/dev'
and run the MAKEDEV script: `sh MAKEDEV all' (this might require the edition
of MAKEDEV to change the PATH for it to work properly).

On Solaris (SunOS 5.x) systems, MAKEDEV can also be used, but there'll be
error messages about unknown user and groups. These errors are
inconsequential for the purpose of installing OpenBSD. However, you may
want to correct them if you plan to the diskless setup regularly. In that
case, you may re-run MAKEDEV on your OpenBSD machine once it has booted.

@


1.30
log
@i386: Some more verbiage around i386 a.out -> ELF upgrades.

Sparc64: Mention Blade 100 problems with upgrading over the network vs
non-serial console.

ok miod@@.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.29 2003/01/04 00:18:09 miod Exp $
d197 1
a197 2
  - a boot block file from a Solaris machine that matches your machine type,
    for ufs filesystem, such as /usr/platform/`uname -i`/lib/fs/ufs/bootblk
d200 2
a201 2
All these pieces, except the boot block and the GNU utilities are supplied
in the OpenBSD/MACHINE distribution.
d246 1
a246 1
Place the boot block in /mnt (your new root partition), and use the Solaris
d250 1
a250 1
    solaris# cp /usr/platform/`uname -i`/lib/fs/ufs/bootblk /mnt/bootblk
@


1.29
log
@Various typos and inaccuracies; David Krause
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.28 2002/12/30 11:13:01 miod Exp $
d19 8
@


1.28
log
@Do not mention NFS as a possible tarballs source when the installation media
does not support NFS mounts.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.27 2002/10/03 00:19:49 miod Exp $
d342 1
a342 1
Now you must populate the the `/dev' directory for your client. If you server
@


1.27
log
@Document upgrades on sparc64 again, and tweak a few things.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.26 2002/06/30 15:32:14 miod Exp $
d137 1
a137 1
OpenBSDInstallNet({:-CD-ROM, NFS, -:},nofloppy)
a146 2
OpenBSDNFSInstall

@


1.26
log
@Do not suggest the use of the floppy images as poor man's miniroot anymore.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.25 2002/06/09 05:53:55 todd Exp $
d131 1
a131 14
dnl put this back for 3.2
dnl OpenBSDInstallpart3({:- or "wd0" for IDE drives-:})
	After entering the terminal type you will be asked whether you
	wish to do an "(I)nstall".  Enter 'I' for a fresh installation.
	Note that you cannot upgrade a previous OpenBSD installation
	to 3.1.

	You will be presented with a welcome message and asked if
	you really want to continue. Assuming you answered yes, the
	install program will then tell you which disks of that type
	it can install on, and ask you which it should use.  The name
	of the disk is typically "sd0" for SCSI drives and "wd0" for
	IDE drives. Reply with the name of your disk.
dnl end put this back
a145 4
dnl
dnl	On some pci-based systems, installing files from CD-ROM yields
dnl	a lot of ``pciide bogus intr'' warning messages.  While annoying,
dnl	these messages do not prevent the installation from suceeding.
d327 1
a327 3
dnl put back after 3.2
dnl the install/upgrade scripts into the root directory.
the install script into the root directory.
@


1.25
log
@knf
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.24 2002/04/17 23:32:12 miod Exp $
d60 1
a60 1
Booting from disk (miniroot or floppy image):
@


1.24
log
@Our m4 generated MAKEDEV will eventually be less SunOS-friendly than they
used to are, if at all; so warn people setting up diskless systems under
SunOS or other operating systems that they might need to edit MAKEDEV for
it to run properly on the host system.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.23 2002/04/09 01:22:23 miod Exp $
d68 1
a68 1
partition naming a=0, b=1... 
d193 1
a193 1
as appropriate.  
d196 1
a196 1
and add "local" to the end of the tty configuration line, and run 
d235 1
a235 1
 
@


1.23
log
@Since the installation procedure will list all the supported media flags
via ifconfig -m, there is no need to suggest canonical media flags on
some arches, especially since the end user might have a different
interface with different flags; instead, be more cosy and mention that
looking at the manual page for the interface might be helpful for
desperate cases.

Thus, merge the OpenBSDInstallNet and OpenBSDInstallNet2 macros, and
remove thde in-between text for the arches that had such a paragraph.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.22 2002/04/07 23:31:04 miod Exp $
d365 2
a366 1
and run the MAKEDEV script: `sh MAKEDEV all'.
@


1.22
log
@- remove a few obsolete texts
- fix a few typo and layout issues
- sync hardware lists
- for sparc64, document the patch# for E220R eeprom
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.21 2002/03/30 22:52:58 miod Exp $
d150 1
a150 3
OpenBSDInstallNet

OpenBSDInstallNet2({:-CD-ROM, NFS, -:},nofloppy)
@


1.21
log
@Factorize more common texts from the ramdisk operation.
No text changes except for harmonization, and the blurb about network
interface flags has bene slightly changed for some arches.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.20 2002/03/28 19:54:40 miod Exp $
d176 1
a176 6
Now try a reboot.  (If needed, swap your scsi id's first).  Initially
I'd suggest you "boot sd()bsd -bs", then try multiuser after that.
if you boot single-user the OpenBSD incantation to make the root
filesystem writable is

    OpenBSD# mount -u /dev/sd0a /
@


1.20
log
@One chunk of the ``you can't upgrade this'' sparc64 song which was forgotten
the other day.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.19 2002/03/23 23:58:50 miod Exp $
d132 1
a132 3
dnl	After entering the terminal type you will be asked whether you
dnl	wish to do an "(I)nstall" or an "(U)pgrade".  Enter 'I' for a
dnl	fresh install or 'U' to upgrade an existing installation.
d144 1
d146 7
a152 63
	Next you will have to edit or create a disklabel for the disk
	OpenBSD is being installed on.  The installation script will
	invoke the text editor allowing you to do this.  Note that
	partition 'c' inside this disk label should ALWAYS reflect the
	entire disk, including any non-OpenBSD portions.  The root file
	system should be in partition 'a', and swap is usually in partition
	'b'.  It is recommended that you create separate partitions for
	root and /usr, you may also want to specify /var and /home
	partitions.

	The swap partition (usually 'b') should have a type of "swap", all
	other native OpenBSD partitions should have a type of "4.2BSD".
	Block and fragment sizes are usually 8192 and 1024 bytes, but can
	also be 16384 and 2048 bytes.

	The install program will now label your disk and ask which file
	systems should be created on which partitions.  It will auto-
	matically select the 'a' partition to be the root file system.
	Next it will ask for which disk and partition you want a file
	system created on.  This will be the same as the disk name (e.g.
	"sd0") with the letter identifying the partition (e.g. "d")
	appended (e.g. "sd0d").  Then it will ask where this partition is
	to be mounted, e.g. /usr.  This process will be repeated until
	you type "done".

	At this point you will be asked to confirm that the file system
	information you have entered is correct, and given an opportunity
	to change the file system table.  Next it will create the new file
	systems as specified, OVERWRITING ANY EXISTING DATA.  This is the
	point of no return.

	After all your file systems have been created, the install program
	will give you an opportunity to configure the network.  The network
	configuration you enter (if any) can then be used to do the install
	from another system using NFS, HTTP or FTP, and will also be the
	configuration used by the system after the installation is complete.

	If you select to configure the network, the install program will
	ask you for a name of your system and the DNS domain name to use.
	Note that the host name should be without the domain part, and that
	the domain name should NOT {:-include-:} the host name part.

	Next the system will give you a list of network interfaces you can
	configure.  For each network interface you select to configure, it
	will ask for the IP address to use, the symbolic host name to use,
	the netmask to use and any media flags to set. It is usually safe
	to keep the default settings.

	After all network interfaces have been configured the install pro-
	gram will ask for a default route and IP address of the primary
	name server to use.  You will also be presented with an opportunity
	to edit the host table.

	At this point you will be allowed to edit the file system table
	that will be used for the remainder of the installation and that
	will be used by the finished system, following which the new file
	systems will be mounted to complete the installation.

	After these preparatory steps have been completed, you will be
	able to extract the distribution sets onto your system.  There
	are several install methods supported; FTP, HTTP, tape, CD-ROM, NFS
	or a local disk partition.  Note that installation from floppies
	is not currently supported.
@


1.19
log
@Hide upgrade stuff from the installation notes until sparc64 systems can
be upgraded to 3.2.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.18 2002/03/23 23:29:16 krw Exp $
d131 4
@


1.18
log
@Disable the ability to (U)pgrade a sparc64 installation.

Requested by deraadt@@ for the 3.1 release.

ok deraadt@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.17 2002/02/07 08:57:28 miod Exp $
d404 3
a406 1
the install/upgrade scripts into the root directory.
@


1.17
log
@X11 is available for sparc64 now, and add RCSID.
@
text
@d1 1
a1 1
dnl	$OpenBSD$
d132 3
a134 2
	wish to do an "(I)nstall" or an "(U)pgrade".  Enter 'I' for a
	fresh install or 'U' to upgrade an existing installation.
@


1.16
log
@Update hardware list, fix a few typos as well.
@
text
@d1 1
d50 1
@


1.15
log
@No more floppyB for the moment.
@
text
@d5 3
a7 1
cdrom, or an installation floppy.
d41 1
a41 1
Please note that PCI systems are not be able to boot from floppy; also,
d211 4
a214 4

	On some pci-based systems, installing files from CD-ROM yields
	a lot of ``pciide bogus intr'' warning messages.  While annoying,
	these messages do not prevent the installation from suceeding.
@


1.14
log
@- U2 has been tested
- floppies have neither NFS nor CDROM support
- add a section about firmware upgrades, and tell that they might be
necessary, especially for U1/1E/2 systems. Pointed out from brad@@, some of
the information provided here comes from Sun's firmware update documentation.
@
text
@d39 1
a39 1
Please note that PCI systems might not be able to boot from floppy; also,
@


1.13
log
@Our bootable cd-rom is so good you don't have to say anything but
``boot cdrom'', says jason@@.
ok deraadt@@
@
text
@d39 4
@


1.12
log
@The final round of sparc64 installation notes updates:
- add miniroot and bootable cd-rom information
- fix a few wordings
- fix incorrect Solaris manual pages section names
- replace a rip-off of boot_sparc(8) with a more adequate rip-off of
  boot_sparc64(8)

The whole ok deraadt@@
@
text
@d43 1
a43 1
	ok boot cdrom OSREV/MACHINE/bsd.rd
@


1.11
log
@Solaris friendly update!
- Provide typical Solaris command lines for creating floppies, dumping
miniroots to disks, and filling tapes.
- Make the tape generation script more versatile.
- When SunOS add_client(8) is mentioned, mention Solaris share(1M) as well.
- Add ``Installing from Solaris'' instructions for sparc and sparc64 ports
- While there, slight fixes to the ``Installing from SunOS'' sections on
  sparc and sun3.
@
text
@a2 6
dnl XXX uncomment and alter once there is cdrom or miniroot
dnl XXX available.
dnl There are several ways to install OpenBSD onto a disk. The easiest way
dnl in terms of preliminary setup is to use the OpenBSD miniroot that can
dnl be booted off your local disk's swap partition.   The normal way is to
dnl use the OpenBSD installation floppy.
d5 1
a5 1
floppy.
d41 1
a41 18
dnl XXX no cdrom release yet
dnl Booting From CD-ROM installation media:
dnl 
dnl	ok boot cdrom OSREV/MACHINE/bsd.rd
dnl
dnl If the boot is successful, you will get a loader version message,
dnl executable sizes and then the Kernel copyright and device probe
dnl messages.  Boot failure modes are typically a lot of CD-ROM drive
dnl activity, but no messages or complaints about magic numbers,
dnl checksums or formats.
dnl
dnl
dnl XXX no miniroot filesystem yet
dnl Booting from disk (miniroot or floppy image):
dnl When miniroot available replace occurences of ``floppy image''
dnl with ``miniroot'' since these instructions are primarily intended
dnl for miniroot installation.
Booting from disk (using the floppy image):
d43 12
a54 2
dnl Boot the miniroot by typing the appropriate command at the PROM:
Boot the floppy image by typing the appropriate command at the PROM:
d58 1
a58 2
dnl If you've loaded the miniroot onto some other disk than the default
If you've loaded the floppy image onto some other disk than the default
d92 1
a92 3
dnl XXX Update title when installation media becomes available.
dnl Installing using the Floppy, CD-ROM, miniroot or netboot procedure:
Installing using the Floppy or netboot procedure:
d205 4
d227 6
a232 3
The Sun monitor normally tries to load a file called "vmunix".   
On OpenBOOT ROM systems you can change it to load OpenBSD instead using
the following commands:
d234 1
a234 1
    ok setenv boot-file bsd
@


1.10
log
@More installation caveats:
- some models (PCI mostly?) print a warning about the lack of counter-timer
during boot, which can be safely ignored
- using the floppy image as a miniroot, you might have to tell the kernel
root and swap device information.

Based on feedback from Jack Woehr <jax@@purematrix.com>, thanks !

And now, a word from our sponsors:
Are you reading source-changes@@? Do you have full access to ultrasparc
hardware? Now is your chance to become famous! Just try installing OpenBSD
on your machine, by any method you can think of, and keep trying. Report
your results to me (or sparc@@), as well as errors or shortcomings in the
installation notes, and your feedback might make it into the next set of
installation notes, with appropriate credit!
@
text
@d19 3
a78 1
dnl Change wording if miniroot available
d96 2
a97 1
the Sun System/Networks administrators guide constitute a good start).
d259 89
@


1.9
log
@Document the installation floppies, as well as the fact that floppy images
can be used as poor man's miniroot.
@
text
@d76 10
d125 4
@


1.8
log
@Fix a few common typos and stuff related to tape installation.
@
text
@d3 1
a3 1
dnl XXX uncomment and alter once there is floppy, cdrom or miniroot
d9 7
a15 9
dnl
dnl If your Sparc is hooked up in a network and you can find a server to
dnl arrange for a diskless setup, which is a convenient way to install on a
dnl machine whose disk does not currently hold a usable operating system.
dnl This is difficult to get set up correctly the first time, but easy to
dnl use afterwards.  (see ``Installing using a diskless setup'' below).
Currently, the only way to install OpenBSD/MACHINE is to use a diskless
setup, which is a convenient way to install on a machine whose disk does
not currently hold a usable operating system.
d36 8
a43 8
dnl XXX no floppy available yet
dnl Booting from Floppy Disk installation media:
dnl
dnl        ok boot floppy bsd
dnl
dnl This will cause the kernel contained in the floppy to be booted.
dnl
dnl
d58 5
a62 1
dnl
d64 4
a67 3
dnl
dnl	ok boot disk:b bsd
dnl
d69 7
a75 6
dnl drive 0, modify the boot specifier accordingly, keeping in mind the
dnl drive vs. scsi-id shuffling and partition a=0, b=1... 
dnl
dnl	ok boot disk1:b bsd     # example - scsi target 1 or
dnl				# second ide drive
dnl
d95 1
a95 1
Installing using the netboot procedure:
d101 3
a103 10
dnl XXX restore paragraph when floppy available
dnl	It will take a while to load the kernel especially from a floppy
dnl	or slow network connection, most likely more than a minute.  If
dnl	some action doesn't eventually happen, or the spinning cursor has
dnl	stopped and nothing further has happened, either your boot media
dnl	is bad, your diskless setup isn't correct, or you may have
dnl	a hardware or configuration problem.
	It will take a while to load the kernel especially from a slow
	network connection, most likely more than a minute.  If some
	action doesn't eventually happen, or the spinning cursor has
d110 6
a115 8
dnl XXX Uncomment when floppy boot available
dnl	While booting, you will probably see several warnings.  You
dnl	may be warned that the kernel can't figure out what device
dnl	it booted from.  Do not be alarmed, this is completely normal.
dnl	This warning occurs because while OpenBSD/MACHINE can boot from
dnl	the floppy drive, the kernel itself lacks a floppy driver for some
dnl	MACHINE models.
dnl
@


1.7
log
@Remove dangling references (see section foo with no section foo).
@
text
@d196 1
a196 1
	After these preparatory steps has been completed, you will be
d198 3
a200 6
	are several install methods supported; FTP, HTTP, CD-ROM, NFS
	or a local disk partition.  To install from a tape, the distrib-
	ution sets must have been written to tape prior to running the
	installation program, either as tar images or as gzipped tar
	images.  Note that installation sets on multiple floppies is not
	currently supported.
@


1.6
log
@- prepare more commented out text to describe a future miniroot and a future
  floppy (sync with sparc layout)
- meanwhile, comment out one reference to floppy boot which escaped.
@
text
@a44 5
dnl After the initial device probe messages you'll asked to start the
dnl install or upgrade procedure. Proceed to the section ``Running the
dnl installation scripts'' below.
dnl 
dnl
a56 5
dnl After the initial device probe messages you'll asked to start the
dnl install or upgrade procedure. Proceed to the section ``Running the
dnl installation scripts'' below.
dnl
dnl
a71 5
dnl This will cause the kernel contained in the miniroot to be booted.
dnl After the initial device probe messages you'll asked to start the
dnl install or upgrade procedure. Proceed to the section ``Running the
dnl installation scripts'' below.
dnl
a87 5
This will cause the kernel provided by the diskless setup to be booted.
After the initial probe messages you'll asked to start the install
or upgrade procedure. Proceed to the section ``Running the installation
scripts'' below.

a248 3

If you are unfamiliar with UN*X-like system administration, 
it's recommended that you buy a book that discusses it.
@


1.5
log
@- update supported hardware list
- remove more sparc'isms. The more you remove, the more there are...
- describe more fun installation methods
- fix a random typo
@
text
@d117 10
a126 3
	It will take a while to load the kernel especially from a floppy
	or slow network connection, most likely more than a minute.  If
	some action doesn't eventually happen, or the spinning cursor has
d140 1
a140 1

@


1.4
log
@Update the description of the bsd.rd miniroot behaviour (it will ask
for a terminal first, then I/U/S).
While there, remove a duplicated sentence on hp300 and add the complete
bsd.rd installation description to the vax notes.
@
text
@d36 1
a36 3
prompt.  Sun PROM monitor commands and setup differ considerably depending
on the system architecture and age, you may needed to reference the PROM
monitor manual for your system for details.
d140 10
a149 6
	After entering the terminal type you will be greeted by a
	welcome message and asked if you really want to continue.
	Assuming you answered yes, the install program will then tell
	you which disks of that type it can install on, and ask you
	which it should use.  The name of the disk is typically "sd0".
	Reply with the name of your disk.
@


1.3
log
@More issues clarified, thanks Jason !
@
text
@d128 7
a134 6
	While booting, you will probably see several warnings.  You
	may be warned that no swap space is present. Do not be
	alarmed, these are completely normal.

	Next there will be a prompt asking you for a shell name, just
	hit return to start executing the installation setup script.
@


1.2
log
@Bring the sparc64 installation notes in better shape, and closer to
reality.
Thanks to jason@@ for hints and feedback.
@
text
@a39 7
dnl XXX to check
dnl Note that OpenBoot Proms also do the Sun SCSI-ID shuffle for disks, this
dnl is described elsewhere in some detail.  For the purposes of this section,
dnl drive 0 refers to the internal or first SCSI drive, which usually has a
dnl SCSI-ID of 3.
dnl
dnl 
@


1.1
log
@stolen verbatim from sparc and only slightly modified from there... this
is going to need a LOT of work (any volunteers?)
@
text
@d3 15
a17 8
There are several ways to install OpenBSD onto a disk. The easiest way
in terms of preliminary setup is to use the OpenBSD miniroot that can
be booted off your local disk's swap partition.   The normal way is to
use the OpenBSD installation floppy, or an installation tape.

If your Sparc is hooked up in a network and you can find a server to
arrange for a diskless setup, which is a convenient way to install on a
machine whose disk does not currently hold a usable operating system.
a20 3
It is also possible to install OpenBSD "manually" from a running SunOS
system, using SunOS tools and gnu tar and gunzip (see ``Installing from
SunOS'' below).
d31 1
a31 1
be it a SunOS or OpenBSD CD-ROM or OpenBSD install diskettes is good
d40 56
a95 119
There are four main cases:

	sun4 (older servers, deskside workstations):
		prompt is a ">", boot command is "b", uses sd(c,s,p) syntax
		with s defined as scsi-unit*8+lun in hex
	OpenBoot Version 1 (newer servers, desktop workstations):
		prompt is "ok", boot command is "boot" uses sd(c,s,p) syntax
		with s defined as scsi-unit.
	OpenBoot Version 2 (newer servers, desktop workstations):
		prompt is "ok", boot command is "boot" uses diskn:p syntax.
        OpenBoot Version 2 (certain newer desktop workstations):
		prompt is "ok", boot command is "boot" uses diskn syntax 
		unless booting from a non-standard partition, in which case:
		boot /sbus/esp/sd@@t,0:p bsd  (where "t" is the scsi target, 
		and "p" is the partition.  examples would be t="3" and p="b")

	
If you expect your workstation to have an OpenBoot Prom but get a ">", 
enter then "n" command to enter the "new command mode".  You can set this
as the default by doing a "setenv sunmon-compat? false" command, followed
by a "reset" command.

Note that OpenBoot Proms also do the Sun SCSI-ID shuffle for disks, this
is described elsewhere in some detail.  For the purposes of this section,
drive 0 refers to the internal or first SCSI drive, which usually has a
SCSI-ID of 3.

 
Booting from Floppy Disk installation media:
 
        ok boot fd()bsd         # for version 1 OpenBOOT ROMs
        ok boot floppy bsd      # for version 2 OpenBOOT ROMs

This will cause the kernel contained in the floppy to be booted.

After the initial device probe messages you'll asked to start the
install or upgrade procedure. Proceed to the section ``Running the
installation scripts'' below.


Booting From CD-ROM installation media:

	> b sd(,30,0)OSREV/sparc/bsd.rd		# for Sun4 monitors*
						# (not working currently)
	ok boot sd(,6,0)OSREV/sparc/bsd.rd	# for version 1 OpenBOOT ROMs
	ok boot cdrom OSREV/sparc/bsd.rd	# for version 2 OpenBOOT ROMs

If the boot is successful, you will get a loader version message,
executable sizes and then the Kernel copyright and device probe
messages.  Boot failure modes are typically a lot of CD-ROM drive
activity, but no messages or complaints about magic numbers,
checksums or formats.

Not all sparc systems support bootable CDROMS and the current
boot image is only known to work on sun4c and sun4m architectures.
If it does not work, you'll have to create a boot floppy or bootable
hard disk using the instructions under preparing boot media.

After the initial device probe messages you'll asked to start the
install or upgrade procedure. Proceed to the section ``Running the
installation scripts'' below.


Booting from SCSI disk (miniroot or floppy image):

Boot the miniroot by typing the appropriate command at the PROM:

	> b sd(,,1)bsd 			# for sun4 monitors*
	ok boot sd(,,1)bsd 		# for version 1 OpenBOOT ROMs
	ok boot disk:b bsd 		# for version 2 OpenBOOT ROMs
	ok boot /sbus/esp/sd@@3,0:b bsd  # for version 2 OpenBOOT ROMs 
					# that won't take disk:p syntax.

If you've loaded the miniroot onto some other disk than the default
drive 0, modify the boot specifier accordingly, keeping in mind the
drive vs. scsi-id shuffling and partition a=0, b=1... 

        > b sd(0,10,1)bsd       # example - scsi target 2 on sun4 monitors*
	ok boot sd(0,3,1)bsd	# example - scsi target 0 on v1 OpenBOOT ROM
	ok boot disk3:b bsd     # example - scsi target 0 on v2 OpenBOOT ROM
	ok boot /sbus/esp/sd@@0,0:b bsd  # example - scsi target 0 on v2  
					# OpenBOOT ROM that won't take 
					# disk:p syntax.

(*) for sun4 this is scsi-target*8+scsi-lun (usually 0) expressed in hex...

This will cause the kernel contained in the miniroot to be booted.
After the initial device probe messages you'll asked to start the
install or upgrade procedure. Proceed to the section ``Running the
installation scripts'' below.


Booting from SCSI tape:

Boot the miniroot by typing the appropriate command at the PROM:

	> b st(,,1)			# for sun4 monitors
					# (not working currently)
	ok boot st(,,1)			# for version 1 OpenBOOT ROMs
	ok boot tape:1			# for version 2 OpenBOOT ROMs
	ok boot /sbus/esp/st@@4,0:1	# for version 2 OpenBOOT ROMs
					# that won't take tape:n syntax.
	
The above instructions assume your tape drive is the default tape drive
using SCSI id 4. If your drive uses id 5, modify the boot command
accordingly:

	> b st(,28,1)		# example - 2nd tape drive on sun4 monitors
	ok boot st(,5,1)	# example - 2nd tape drive on v1 OpenBOOT ROM
	ok boot tape1:1		# example - 2nd tape drive on v2 OpenBOOT ROM
	ok boot /sbus/esp/st@@5,0:1	# example - 2nd tape drive on v2
					# OpenBOOT ROM that won't take
					# tape:n syntax
	
This will cause the kernel contained in the miniroot to be booted.
After the initial device probe messages you'll be asked to start the
install or upgrade procedure. Proceed to the section ``Running the
installation scripts'' below.

d108 1
a108 2
command at the monitor prompt. Depending on the PROM version in your machine,
this command takes one of the following forms:
d110 1
a110 3
	> b le()bsd.rd		# for sun4 monitors
	ok boot le()bsd.rd	# for version 1 OpenBOOT ROMs
	ok boot net bsd.rd	# for version 2 OpenBOOT ROMs
d118 3
a120 1
Installing using the Floppy, CD-ROM, tape, miniroot or netboot procedure:
d136 2
a137 6
	may be warned that the kernel can't figure out what device
	it booted from and that no swap space is present.  Do not be
	alarmed, these are completely normal.  The first warning
	occurs because while OpenBSD/sparc can boot from the floppy
	drive, the kernel itself lacks a floppy driver for some
        architectures.
d200 2
a201 11
	the netmask to use and any media flags to set.  This is driver
	dependent, but for the sparc le(4) driver, the flags usually carry
	meaning:

		auto		Use existing setting (only setup by netboot)
		10baseT		Use UTP (twisted pair) port
		10base5 	Use AUI port

*** IMPORTANT - these are the correct setting for Sparc ethernet cards,
		the suggestions shown by the install script are generic
		and may or may not be correct...
d215 1
a215 1
	are several install methods supported; FTP, HTTP, tape, CD-ROM, NFS
a250 6
On version 1 OpenBOOT ROMs:
    >n
    ok setenv boot-from sd(0,0,0)bsd
    ok

On version 2 OpenBOOT ROMs:
a251 1
    ok setenv boot-device /sbus/esp/sd@@0,0
a252 2
On sun4 systems, you may not need to specify the boot file, as 
the OpenBSD boot blocks will look for "bsd" on the boot device by default.
d263 1
a263 8
If you plan on using the extra serial ports on 4/300 systems, 
you'll need to make sure you have device nodes for them e.g.:
  mknod /dev/ttyc c 12 4
  mknod /dev/ttyd c 12 5
To use these ports for terminals etc, you will want to add them to
/etc/ttys.

In order to use 'tip' on OpenBSD/sparc, you'll need to edit /etc/ttys
a271 91
Installing from SunOS.

You need a SunOS machine to install OpenBSD.  You also need at
least the following pieces:

    the *.tgz files you want to install (as a minimum, base{:--:}OSrev.tgz and
       etc{:--:}OSrev.tgz)
    gunzip (GNU gzip) SunOS binary
    gtar (GNU tar) SunOS binary
    a "/boot" file from a SunOS machine that matches your machine type
	(e.g. sun or sun4c)
    a kernel, most likely "/bsd"

All these pieces, except "/boot" and the GNU utilities are supplied in
the OpenBSD/sparc distribution.

You need to format and partition the disk using SunOS (since
OpenBSD/sparc uses SunOS disk labels.)  Give yourself adequate
partition sizes.  Here is an example layout:

    partition    size   offset	  will be..
    sd0a        80000        0	  /
    sd0b       256000    80000	  swap
    sd0c      4165271        0	  `whole disk'
    sd0d       100000   436000    /var
    sd0f       100000   336000    /tmp
    sd0g      3229271   936000    /usr
    sd0h       400000   536000    /var/tmp

Use SunOS to newfs the partitions which will have filesystems on them.
(OpenBSD's filesystem format is identical to SunOS).

    sunos# newfs /dev/rsd0a
    [... lots of output]
 
Repeat for any other partition (in this example, /dev/rsd0d, /dev/rsd0f,
/dev/rsd0g, /dev/rsd0h).

NOTE: If you are able to, there is a performance benefit from
newfs'ing using OpenBSD.  If you newfs using the OpenBSD newfs command,
be sure to use the -O flag for your / partition, so that newfs will
use the 4.3BSD filesystem format, rather than the new 4.4BSD filesystem
format.  If you forget, you will not be able to boot -- the SunOS boot
blocks do not understand the extended 4.4BSD filesystem format.

Mount those partitions in a tree formation, under /mnt; ie:

    sunos# df
    Filesystem            kbytes    used   avail capacity  Mounted on
    [...]
    /dev/sd0a              38427       0   38427     0%    /mnt
    /dev/sd0d              48249       0   48249     0%    /mnt/var
    /dev/sd0f              48249       0   48249     0%    /mnt/tmp
    /dev/sd0g            1564024       0 1564024     0%    /mnt/usr
    /dev/sd0h             193536       0  193536     0%    /mnt/var/tmp

Place a standard SunOS "boot" program in /mnt (your new root
partition), and use the SunOS command "installboot" to make it work.
The installboot man page says to do something like this:

    sunos# cp /usr/mdec/sdboot /mnt/boot
    sunos# sync; sync
    sunos# /usr/mdec/installboot -vlt /mnt/boot /usr/mdec/bootsd /dev/rsd2a

You can now extract the provided "*.tgz files onto your disk.

    sunos# ls -FC
    base{:--:}OSrev.tgz   comp{:--:}OSrev.tgz   man{:--:}OSrev.tgz       xfont{:--:}OSrev.tgz
    bsd             etc{:--:}OSrev.tgz    misc{:--:}OSrev.tgz      xserv{:--:}OSrev.tgz
    bsd.scsi3       game{:--:}OSrev.tgz   xbase{:--:}OSrev.tgz
    sunos{:-#-:} gunzip < base{:--:}OSrev.tgz | (cd /mnt; gtar xvpf -)
    [...] for each set

And finally copy an OpenBSD kernel (either bsd or bsd.scsi3) onto your disk.

    sunos# cp bsd.scsi3 /mnt/bsd

The GNU gunzip and gtar programs are not distributed as part of SunOS,
but may be present in your /usr/local/bin.  If not, you will need to
obtain them from a GNU archive and install before proceeding.  The
OpenBSD tar files are in the "new format" that includes directory
information, and the standard SunOS tar will not extract from them
successfully.

After the files have been extracted, setup /mnt/etc/fstab to match
your actual disk layout.  (Minus the "/mnt" component of each path, of
course :-)

Now proceed to reboot the machine and the customize your installation.


d274 1
a274 1
The set up is similar to SunOS diskless setup, but not identical, because
d286 1
a286 1
Your Sparcstation expects to be able to download a second stage bootstrap
d289 2
a290 3
the machine's IP address followed by the machine's architecture, separated
by a period. For example, a sun4c machine which has been assigned IP
address 130.115.144.11, will make an TFTP request for `8273900B.SUN4C'.
d295 2
a296 19
You can find the boot program in `/usr/mdec/boot' in the OpenBSD/sparc
distribution. Unfortunately, it is necessary to install this file
differently for sun4 and sun4c clients: the sun4 version needs to have its
`a.out' header stripped off (otherwise the machine will crash), while the
sun4c version must retain it (otherwise the PROM will complain).

Here's an example to illustrate this whole mess:

    server# cd /<client-root-dir>/usr/mdec
    if client is a sun4:
	server# set SKIP=1
	server# set KARCH=SUN4
    else
	server# set SKIP=0
	server# set KARCH=SUN4C
    server# dd if=boot of=/tftpboot/boot.sparc.OpenBSD.$KARCH skip=$SKIP bs=32
    server# cd /tftpboot
    server# ln -s boot.sparc.OpenBSD.$KARCH 8273900B.$KARCH

d341 1
a341 1
			server:/export/exec/sun4.OpenBSD /usr  nfs  rw 0 0
d347 5
a351 5
On SunOS 5.x systems, MAKEDEV can also be used, but there'll be error
messages about unknown user and groups. These errors are inconsequential
for the purpose of installing OpenBSD. However, you may want to correct them
if you plan to the diskless setup regularly. In that case, you may re-run
MAKEDEV on your OpenBSD machine once it has booted.
@

