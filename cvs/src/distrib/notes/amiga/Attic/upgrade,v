head	1.17;
access;
symbols
	OPENBSD_3_2:1.16.0.4
	OPENBSD_3_2_BASE:1.16
	OPENBSD_3_1:1.16.0.2
	OPENBSD_3_1_BASE:1.16
	OPENBSD_3_0:1.15.0.2
	OPENBSD_3_0_BASE:1.15
	OPENBSD_2_9:1.14.0.2
	OPENBSD_2_9_BASE:1.14
	OPENBSD_2_8:1.13.0.4
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.13.0.2
	OPENBSD_2_7_BASE:1.13
	OPENBSD_2_6:1.12.0.6
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.12.0.4
	OPENBSD_2_5_BASE:1.12
	OPENBSD_2_4:1.12.0.2
	OPENBSD_2_4_BASE:1.12
	OPENBSD_2_3:1.11.0.2
	OPENBSD_2_3_BASE:1.11
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.17
date	2002.12.31.16.35.34;	author miod;	state dead;
branches;
next	1.16;

1.16
date	2002.03.30.19.33.20;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2001.10.02.07.40.10;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2001.04.24.23.06.44;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.28.15.00.44;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	98.05.18.00.33.31;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	98.04.08.23.49.35;	author niklas;	state Exp;
branches;
next	1.10;

1.10
date	98.04.05.01.51.44;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	98.03.08.00.11.55;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.10.24.07.10.51;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	97.10.01.23.14.25;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	97.05.19.23.58.54;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	97.04.28.11.23.43;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.10.03.00.39.54;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.25.21.28.53;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.11.28.17.32.16;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.38;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.38;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@dnl	$OpenBSD: upgrade,v 1.16 2002/03/30 19:33:20 miod Exp $
To do the upgrade, and if you are using the miniroot installation, you
must have the OpenBSD kernel on AmigaDOS and you must transfer the root
filesystem miniroot{:--:}OSrev.fs onto the swap partition of the OpenBSD hard disk.
If you are using the ramdisk installation, the bsd.rd kernel is enough.
You must also have at least the "base{:--:}OSrev" binary distribution set available,
so that you can upgrade with it, using one of the upgrade methods described
above.  Finally, you must have sufficient disk space available to install
the new binaries.  Since the old binaries are being overwritten in place,
you only need space for the new binaries, which weren't previously
on the system.  If you have a few megabytes free on each of your
root and /usr partitions, you should have enough space.

Since upgrading involves replacing the kernel, and most of the system
binaries, it has the potential to cause data loss.  You are strongly
advised to BACK UP ANY IMPORTANT DATA ON YOUR DISK, whether on the
OpenBSD partition or on another operating system's partition, before
beginning the upgrade process.

To upgrade your system, follow the following instructions:

	If you know you need an -I option to loadbsd, you should add it
	to the loadbsd invocation you'll use for the upgrade.

	Miniroot installation:

	Transfer the upgrade miniroot filesystem onto the hard disk
	partition used by OpenBSD for swapping, as described in the
	"Preparing your System for OpenBSD Installation" section above.

	Now boot up OpenBSD using the OSREV kernel using the loadbsd
	command:

		loadbsd -b bsd

	You should see the screen clear and some information about
	your system as the kernel configures the hardware.  Note which
	hard disk device is configured that contains your root and
	swap partition.  When prompted for the root device, type
	'sd0*' (replacing 0 with the disk number that OpenBSD used for
	your root/swap device).  The '*' character indicates that the
	root filesystem is contained on the swap partition.  Continue
	reading below the ramdisk installation description:

	Ramdisk installation:

	Now boot up OpenBSD using the OSREV kernel using the loadbsd
	command:

		loadbsd bsd.rd

	You should see the screen clear and some information about
	your system as the kernel configures the hardware.

	Common instructions for both miniroot/ramdisk installations:

	You will be asked which terminal type to use, you should just
	hit return to select the default (vt220).

	When prompted, select the (U)pgrade option rather than the
	(I)install option.

	The upgrade script will ask you for the existing root partition,
	and will use the existing filesystems defined in /etc/fstab to
	install the new system in, and also preserve files in `/etc'
	which you are likely to have customized since a previous
	installation.
@


1.16
log
@Typos du jour.
@
text
@d1 1
a1 1
dnl	$OpenBSD$
@


1.15
log
@- try to bo more explicit about disk naming conventions
- update the description of the ramdisk behaviour
- fix a few typos or style issues
- remove 1st-person "methinks" blabla from original author
- shortens the upgrade description, remove completely obsolete stuff
- don't tell the user thrice the differences between the ramdisk and
  the miniroot

niklas@@ and jj@@ had no objections.
@
text
@d1 1
d65 1
a65 1
	installe the new system in, and also preserve files en `/etc'
@


1.14
log
@Update supported hardware list, fix typos, use m4.common macros
whenever possible, remove obsolete information, etc.

ok fries@@
@
text
@a55 3
	When you reach the prompt asking you for a shell name, just
	hit return.

d59 2
a60 59
	At the question whether to (I)nstall or (U)pgrade choose "U".

	You will be presented with some information about the upgrade
	process and a warning message, and will be asked if you wish
	to proceed with the upgrade process.  If you answer
	negatively, the upgrade process will stop, and your disk will
	not be modified.  If you answer affirmatively, the upgrade
	process will begin, and your disk will be modified.  You may
	hit Control-C to stop the upgrade process at any time.
	However, if you hit it at an inopportune moment, your system
	may be left in an inconsistent (and possibly unusable) state.

	The upgrade program will then check & mount your root filesystem
	under /mnt and grab some configuration info from it for the
	continued upgrade process.  You'll be asked if the network
	should be enabled at this point.  After that is done the rest
	of the filesystems will be checked and mounted.

	If you don't already have the OpenBSD distribution sets on your
	disk, look in the installation section for information on how
	to transfer them to your disk.

	Once the distribution sets are transferred to your disk,
	continue here.  (Obviously, if the OpenBSD distribution sets
	are already on your disk, because you've transferred them
	before starting the upgrade process, you don't need to
	transfer them again now!)

	After the software has been transferred to the machine (or
	mounted, in the case of upgrading via NFS).

Your system has now been upgraded to OpenBSD OSREV.

	After all this, your machine is a complete OpenBSD OSREV system.
	However, that doesn't mean that you're finished with the upgrade
	process.  There are several things that you should do, or might
	have to do, to insure that the system works properly.

	First, you will probably want to get the etc{:--:}OSrev.tgz distribution,
	extract it, and compare its contents with those in your /etc/
	directory.  You will probably want to replace some of your
	system configuration files, or incorporate some of the changes
	in the new versions into yours.

	Second, you might want to check your /dev against the new MAKEDEV
	script found there, if you have changed the nodes locally.  The
	upgrade process runs "sh MAKEDEV all" but that may not be enough
	for your personal setup.

	Third, you must deal with certain changes in the formats of
	some of the configuration files.  The most notable change is
	that the "options" given to many of the file systems in
	/etc/fstab or by hand have changed, and some of the file
	systems have changed names.  To find out what the new options
	are, it's suggested that you read the manual page for the
	file systems' mount commands, for example mount_nfs(8) for
	NFS.  (Note that the information for mounts of type "ufs",
	i.e. Fast File Systems, are contained in the mount(8) man
	page.)
d62 5
a66 9
	Finally, you will want to delete old binaries that were part
	of the version of OpenBSD that you upgraded from and have since
	been removed from the OpenBSD distribution.  You might also
	want to recompile any locally-built binaries, to take
	advantage of the shared libraries.  (Note that any new
	binaries that you build will be dynamically linked, and
	therefore take advantage of the shared libraries, by default.
	For information on how to make statically linked binaries,
	see the cc(1) and ld(1) manual pages.)
@


1.13
log
@tweaks/OSrev/cleaning/'.tar.gz -> .tgz' .. etc ..
@
text
@a0 5
The upgrade to OpenBSD OSREV is a binary upgrade; it would be prohibitive
to make users upgrade by compiling and installing the OSREV sources, and
it would be very difficult to even compile a set of instructions that
allowed them to do so.

@


1.12
log
@s/cpp/m4/g
@
text
@d105 1
a105 1
	First, you will probably want to get the etc{:--:}OSrev.tar.gz distribution,
@


1.11
log
@spelling and grammer & clarfication; marc espie
@
text
@d1 2
a2 2
The upgrade to OpenBSD 2.3 is a binary upgrade; it would be prohibitive
to make users upgrade by compiling and installing the 2.3 sources, and
d8 1
a8 1
filesystem miniroot23.fs onto the swap partition of the OpenBSD hard disk.
d10 1
a10 1
You must also have at least the "base23" binary distribution set available,
d35 1
a35 1
	Now boot up OpenBSD using the 2.3 kernel using the loadbsd
d51 1
a51 1
	Now boot up OpenBSD using the 2.3 kernel using the loadbsd
d98 1
a98 1
Your system has now been upgraded to OpenBSD 2.3.
d100 1
a100 1
	After all this, your machine is a complete OpenBSD 2.3 system.
d105 1
a105 1
	First, you will probably want to get the etc23.tar.gz distribution,
@


1.10
log
@2.3 cleanup
@
text
@d79 1
a79 1
	The upgrade program will then chack & mount your root filesystem
@


1.9
log
@moving to 2.3
@
text
@d8 1
a8 1
filesystem miniroot22.fs onto the swap partition of the OpenBSD hard disk.
d10 1
a10 1
You must also have at least the "base22" binary distribution set available,
d105 1
a105 1
	First, you will probably want to get the etc22.tar.gz distribution,
@


1.8
log
@typos.
@
text
@d1 2
a2 2
The upgrade to OpenBSD 2.2 is a binary upgrade; it would be prohibitive
to make users upgrade by compiling and installing the 2.2 sources, and
d35 1
a35 1
	Now boot up OpenBSD using the 2.2 kernel using the loadbsd
d51 1
a51 1
	Now boot up OpenBSD using the 2.2 kernel using the loadbsd
d98 1
a98 1
Your system has now been upgraded to OpenBSD 2.2.
d100 1
a100 1
	After all this, your machine is a complete OpenBSD 2.2 system.
@


1.7
log
@21 -> 22
@
text
@d9 1
a9 1
If you are using the ramdsik installation, the bsd.rd kernel is enough.
@


1.6
log
@Reflect reality better
@
text
@d1 2
a2 2
The upgrade to OpenBSD 2.1 is a binary upgrade; it would be prohibitive
to make users upgrade by compiling and installing the 2.1 sources, and
d8 1
a8 1
filesystem miniroot21.fs onto the swap partition of the OpenBSD hard disk.
d10 1
a10 1
You must also have at least the "base21" binary distribution set available,
d35 1
a35 1
	Now boot up OpenBSD using the 2.1 kernel using the loadbsd
d51 1
a51 1
	Now boot up OpenBSD using the 2.1 kernel using the loadbsd
d98 1
a98 1
Your system has now been upgraded to OpenBSD 2.1.
d100 1
a100 1
	After all this, your machine is a complete OpenBSD 2.1 system.
d105 1
a105 1
	First, you will probably want to get the etc21.tar.gz distribution,
@


1.5
log
@2.1
@
text
@a4 1
installing.
d6 8
a13 7
To do the upgrade, you must have the OpenBSD kernel on AmigaDOS and
you must transfer the upgrade filesystem upgr-21.fs onto the swap
partition of the OpenBSD hard disk.  You must also have at least the
"base21" binary distribution set available, so that you can upgrade
with it, using one of the upgrade methods described above.  Finally,
you must have sufficient disk space available to install the new
binaries.  Since the old binaries are being overwritten in place,
d26 5
d46 15
a60 1
	root filesystem is contained on the swap partition.
d64 5
d79 5
a83 3
	The upgrade program will then mount all of your file systems
	under /mnt.  (In other words, your root partition will be
	mounted on /mnt, your /usr partition on /mnt/usr, etc.)
d96 2
a97 29
	mounted, in the case of upgrading via NFS), change into the
	directory containing the "base21" distribution set.  Once you
	are there, run the "Set_tmp_dir" command, and hit return at
	the prompt to select the default answer for the temporary
	directory's path name.  (It should be the path name of the
	directory that you're in.)

	Run the command "Extract base21" to upgrade the base
	distribution.

	Repeat the above two steps for all of the sets you wish to
	upgrade.  (For each, change into the directory containing the
	set, run "Set_tmp_dir" and accept the default path name, then
	run the "Extract <setname>" command.)

	If you were previously using the security distribution set,
	you MUST upgrade to the new version, or you will not be able
	to log in when the upgrade process is complete.  Similarly, if
	you were not previously using the security set, you must NOT
	upgrade to the new version.

	When you are done upgrading all of the distribution sets you
	wish to upgrade, issue the command "Cleanup".  It will clean
	up the installation, by remaking some system databases.  When
	it is complete, you should use "halt" to halt the system.

	You will probably also want to copy the release "bsd" kernel
	image to your root at some point.
	
d100 4
a103 5
	After a new kernel has been copied to your hard disk, your
	machine is a complete OpenBSD 2.1 system.  However, that
	doesn't mean that you're finished with the upgrade process.
	There are several things that you should do, or might have to
	do, to insure that the system works properly.
d105 1
a105 1
	First, you will probably want to get the etc20 distribution,
d111 4
a114 5
	Second, you will probably want to update the set of device
	nodes you have in /dev.  If you've changed the contents of
	/dev by hand, you will need to be careful about this, but if
	not, you can just cd into /dev, and run the command "sh
	MAKEDEV all".
@


1.4
log
@sync pass 2
@
text
@d1 2
a2 2
The upgrade to OpenBSD 2.0 is a binary upgrade; it would be prohibitive
to make users upgrade by compiling and installing the 2.0 sources, and
d4 1
a4 3
allowed them to do so.  Because of the various changes to the system,
the largest being the 64-bit file size support and shared libraries,
it is impractical to upgrade by recompiling from the sources and
d8 1
a8 1
you must transfer the upgrade filesystem upgr-20.fs onto the swap
d10 1
a10 1
"base20" binary distribution set available, so that you can upgrade
d30 1
a30 1
	Now boot up OpenBSD using the 2.0 kernel using the loadbsd
a54 15
	You will be asked if you wish to upgrade your file systems to
	the new file system format.  If you do, reply affirmatively.
	If you don't have your file systems upgraded now, you should
	probably do it manually after the install process is complete,
	by using "fsck -c 2". Read the fsck(8) manual page for more
	details.

	The upgrade program will then check your root file system,
	and, if you approved, will upgrade it to the new file system
	format.  It will then mount your root file system on /mnt.

	If your file systems are being upgraded, the upgrade script
	will copy the new fsck(8) program to your hard disk and
	upgrade your remaining file systems.

d71 1
a71 1
	directory containing the "base20" distribution set.  Once you
d77 1
a77 1
	Run the command "Extract base20" to upgrade the base
d99 1
a99 1
Your system has now been upgraded to OpenBSD 2.0.
d101 2
a102 2
After a new kernel has been copied to your hard disk, your
	machine is a complete OpenBSD 2.0 system.  However, that
d107 1
a107 6
	First, if you did not upgrade your file systems to the new
	file system format during the upgrade process, you may want to
	do so now, with "fsck -c 2".  If you are unsure about the
	process, it's suggested that you read the fsck(8) manual page.

	Second, you will probably want to get the etc20 distribution,
d113 1
a113 1
	Third, you will probably want to update the set of device
d119 1
a119 1
	Fourth, you must deal with certain changes in the formats of
@


1.3
log
@Did some s/NetBSD/OpenBSD/, s/netbsd/bsd/ and $OpenBSD$ additions.
However this stuff is largely related to NetBSD and must be completely
redone, if we will make real relases sometime
@
text
@d1 2
a2 2
The upgrade to OpenBSD 1.1 is a binary upgrade; it would be prohibitive
to make users upgrade by compiling and installing the 1.1 sources, and
d10 1
a10 1
you must transfer the upgrade filesystem upgr-11.fs onto the swap
d12 1
a12 1
"base11" binary distribution set available, so that you can upgrade
d32 1
a32 1
	Now boot up OpenBSD using the 1.1 kernel using the loadbsd
d88 1
a88 1
	directory containing the "base11" distribution set.  Once you
d94 1
a94 1
	Run the command "Extract base11" to upgrade the base
d116 1
a116 1
Your system has now been upgraded to OpenBSD 1.1.
d119 1
a119 1
	machine is a complete OpenBSD 1.1 system.  However, that
d129 1
a129 1
	Second, you will probably want to get the etc11 distribution,
@


1.2
log
@update from netbsd
@
text
@d1 1
a1 1
The upgrade to NetBSD 1.1 is a binary upgrade; it would be prohibitive
d9 1
a9 1
To do the upgrade, you must have the NetBSD kernel on AmigaDOS and
d11 1
a11 1
partition of the NetBSD hard disk.  You must also have at least the
d23 1
a23 1
NetBSD partition or on another operating system's partition, before
d29 2
a30 2
	partition used by NetBSD for swapping, as described in the
	"Preparing your System for NetBSD Installation" section above.
d32 1
a32 1
	Now boot up NetBSD using the 1.1 kernel using the loadbsd
d35 1
a35 1
		loadbsd -b netbsd
d41 1
a41 1
	'sd0*' (replacing 0 with the disk number that NetBSD used for
d76 1
a76 1
	If you don't already have the NetBSD distribution sets on your
d81 1
a81 1
	continue here.  (Obviously, if the NetBSD distribution sets
d113 1
a113 1
	You will probably also want to copy the release "netbsd" kernel
d116 1
a116 1
Your system has now been upgraded to NetBSD 1.1.
d119 1
a119 1
	machine is a complete NetBSD 1.1 system.  However, that
d153 2
a154 2
	of the version of NetBSD that you upgraded from and have since
	been removed from the NetBSD distribution.  You might also
@


1.1
log
@Initial revision
@
text
@a5 1
>>> just what are the major differences between 1.0 and 1.1??
d9 10
a18 12
>>>  no kernel-copy!
To do the upgrade, you must have the appropriate kernel-copy floppy
image on a disk, and the upgr-11.fs floppy image on another.  You must
>>>
also have at least the "base11" binary distribution set available,
so that you can upgrade with it, using one of the upgrade methods
described above.  Finally, you must have sufficient disk space
available to install the new binaries.  Since the old binaries are
being overwritten in place, you only need space for the new binaries,
which weren't previously on the system.  If you have a few megabytes
free on each of your root and /usr partitions, you should have enough
space.
d28 18
a45 14
>>>	transfer upgrade file system image to swap partition
>>>	should this be in the hard disk prep section?

	Boot your machine using of the appropriate kernel-copy floppy.
	When presented with the boot prompt (the prompt begins with
	"Boot" and ends with ":-"), hit return.

	While booting, you will probably see several warnings.  You
	should be warned that no swap space is present, and that
>>>                              ^^^^^^^^^^^^^^^^^^^^^
	init(8) cannot find /etc/rc.  Do not be alarmed, these are
>>>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	completely normal.  When you reach the prompt asking you for a
	shell name, just hit return.
a62 3
>>>  Is this needed for 1.0 to 1.1 upgrade?  Or mention that the upgrade
>>>  should be done if it wasn't previously done?  [It shouldn't hurt
>>>  to run through the upgrade steps.]
a78 1
>>> NetBSD or AmigaDOS partitions...
d113 3
a115 2
>>>	transfer new kernel to /

a150 1
>>> Is this needed for 1.0 -> 1.1 upgrade?
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

