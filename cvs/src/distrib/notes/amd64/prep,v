head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.14
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.12
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.8
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.10
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.5.0.22
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.20
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.18
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.14
	OPENBSD_5_0:1.5.0.16
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.12
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.10
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.6
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.16
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.12
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.10
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.8
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3;
locks; strict;
comment	@# @;


1.7
date	2014.02.27.19.04.41;	author tedu;	state Exp;
branches;
next	1.6;

1.6
date	2014.02.27.18.04.28;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2008.08.05.23.05.12;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.18.23.40.36;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.26.08.56.10;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.07.22.47.49;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.07.21.29.10;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@simpler dual boot instructions
@
text
@dnl	$OpenBSD: prep,v 1.6 2014/02/27 18:04:28 tedu Exp $
First and foremost, before beginning the installation process, MAKE
SURE YOU HAVE A RELIABLE BACKUP of any data on your hard disk that you
wish to keep.  Repartitioning your hard disk is an excellent way to
destroy important data.

If you plan to dual boot, use the other operating system's "fdisk" program
or partition editor to create at least one of the partitions to be used for
that operating system.  If that operating system is already set up to use the
entire disk, you will need to make space available.  Windows 7 can resize its
own system partition.  In the control panel, search for "partition": this
will lead you to the system administration tool.  You do not have to create an
OpenBSD partition at this time; the OpenBSD installation will give you an
opportunity to create the partition needed for OpenBSD.

Your hard disk is now prepared to have OpenBSD installed on it, and
you should proceed with the installation instructions.
@


1.6
log
@delete old notes and long sections about old problems to reflect what
a new user is likely to need to know today
@
text
@d1 1
a1 1
dnl	$OpenBSD: prep,v 1.5 2008/08/05 23:05:12 miod Exp $
d10 5
a14 4
entire disk, you will have to back it up, remove and recreate a smaller
partition for it, and then restore the data from that partition.  You do not
have to create an OpenBSD partition at this time, the OpenBSD installation
will give you an opportunity to create the partition needed for OpenBSD.
@


1.5
log
@Various tweaks and clarifications, and drop obsolete information regarding
last century's hard disks on this century's platforms.
@
text
@d1 1
a1 8
dnl	$OpenBSD: prep,v 1.4 2005/03/18 23:40:36 miod Exp $
NOTE: If you wish to install OpenBSD on your whole disk, i.e. you do not
want any other operating system to reside on your hard disk, you can skip
this section and go on to the section that describes installation, below.
If you're upgrading your system from a previous release of OpenBSD, you
should have proceeded directly to the section about upgrading; you need
none of the information presented here.

d7 3
a9 33
dnl
dnl All this text below is probably completely unapplicable to amd64,
dnl as they don't have BIOS that old and crappy...
dnl Second, if you are using a disk controller which supports disk geometry
dnl translation, be sure to use the same parameters for OpenBSD as for the
dnl other operating systems installed on your disk.  If you do not, it will
dnl be much harder to make OpenBSD properly coexist with them.
dnl
dnl Utilities exist which will print out the disk geometry which DOS sees;
dnl some versions of DOS "fdisk" also do this.  If you have an "EIDE" hard
dnl disk, DOS and OpenBSD probably won't see the same geometry, and you must
dnl be careful to find out the DOS geometry and tell OpenBSD about it during
dnl the installation.
dnl
dnl Third (but related to the second point above), if you are using a hard
dnl disk with more sectors than DOS or your controller's BIOS supports without
dnl some kind of software translation utility or other kludge, you MUST
dnl BE SURE that all partitions which you want to boot from must start and end
dnl below cylinder 1024 by the BIOS's idea of the disk, and that all DOS
dnl partitions MUST EXIST ENTIRELY BELOW cylinder 1024, or you will either not
dnl be able to boot OpenBSD, not be able to boot DOS, or you may experience
dnl data loss or filesystem corruption.  Be sure you aren't using geometry
dnl translation that you don't know about, but that the DOS "fdisk" program
dnl does!
dnl
dnl The OpenBSD root partition must also reside completely within the BIOS
dnl supported part of the hard disk -- this would typically be 504MB, 2GB or
dnl 8GB, depending upon the age of the machine and its BIOS.

dnl Fourth, use the other operating system's "fdisk" program or partition
Second, use the other operating system's "fdisk" program or partition
editor to create at least one of the partitions to be used for that
operating system.  If that operating system is already set up to use the
d11 3
a13 9
partition for it, and then restore the data from that partition.  You do
not have to create an OpenBSD partition at this time, the OpenBSD install-
ation will give you an opportunity to create the partition needed for
OpenBSD.

Finally, do whatever is necessary to restore order to the partition
you took space away from. Most operating systems will need to reformat
the partition, and if it was their "main" partition, will probably need
to be reinstalled.
a14 11
dnl
dnl Don't advertize fips on amd64.
dnl
dnl Once you've backed all your data up, there is a tool called fips 2.0
dnl that can shrink your FAT-based DOS/Windows partition to make room for
dnl OpenBSD.  It is included in the MACHINE tools area of this distribution as
dnl a convenience.  It is strongly advised that you read its documentation
dnl and understand the consequences of your actions before using it.  In some
dnl cases, defragmenting your disk and running fips may be much faster than
dnl reinstalling your DOS partition from the backup.
dnl
@


1.4
log
@Reenable upgrade texts
@
text
@d1 1
a1 1
dnl	$OpenBSD: prep,v 1.3 2004/03/26 08:56:10 tom Exp $
a13 4
Second, if you are using a disk controller which supports disk geometry
translation, be sure to use the same parameters for OpenBSD as for the
other operating systems installed on your disk.  If you do not, it will
be much harder to make OpenBSD properly coexist with them.
d17 4
d44 1
a44 1
Third, use the other operating system's "fdisk" program or partition
@


1.3
log
@Specify units: xxM -> xxMB, etc

ok miod@@ deraadt@@
@
text
@d1 1
a1 1
dnl	$OpenBSD: prep,v 1.2 2004/02/07 22:47:49 miod Exp $
d5 3
a7 3
dnl If you're upgrading your system from a previous release of OpenBSD, you
dnl should have proceeded directly to the section about upgrading; you need
dnl none of the information presented here.
@


1.2
log
@Round up more edges.
@
text
@d1 1
a1 1
dnl	$OpenBSD$
d40 2
a41 2
dnl supported part of the hard disk -- this would typically be 504M, 2G or 8G,
dnl depending upon the age of the machine and its BIOS.
@


1.1
log
@initial version.  3 minute edit away from i386..
@
text
@d1 7
a7 7
NOTE: If you wish to install OpenBSD on your whole disk, i.e. you do
not want DOS or any other operating system to reside on your hard
disk, you can skip this section and go on to the section that
describes installation, below.  If you're upgrading your system from a
previous release of OpenBSD, you should have proceeded directly to the
section about upgrading; you need none of the information presented
here.
d15 27
a41 8
translation, be sure to use the same parameters for OpenBSD as for DOS
or the other operating systems installed on your disk.  If you do not,
it will be much harder to make OpenBSD properly coexist with them.
Utilities exist which will print out the disk geometry which DOS sees;
some versions of DOS "fdisk" also do this.  If you have an "EIDE" hard
disk, DOS and OpenBSD probably won't see the same geometry, and you must
be careful to find out the DOS geometry and tell OpenBSD about it during
the installation.
d43 2
a44 19
Third (but related to the second point above), if you are using a hard
disk with more sectors than DOS or your controller's BIOS supports without
some kind of software translation utility or other kludge, you MUST
BE SURE that all partitions which you want to boot from must start and end
below cylinder 1024 by the BIOS's idea of the disk, and that all DOS
partitions MUST EXIST ENTIRELY BELOW cylinder 1024, or you will either not
be able to boot OpenBSD, not be able to boot DOS, or you may experience
data loss or filesystem corruption.  Be sure you aren't using geometry
translation that you don't know about, but that the DOS "fdisk" program
does!

The OpenBSD root partition must also reside completely within the BIOS
supported part of the hard disk -- this would typically be 504M, 2G or 8G,
depending upon the age of the machine and its BIOS.  Due to a limit of the
OpenBSD boot loader, the root partition must be within the first 8G even if
the BIOS supports more.  Note that only the root partition has this issue,
once OpenBSD is loaded, the entire disk is available for use.

Fourth, use the other operating system's "fdisk" program or partition
d54 2
a55 5
you took space away from.  If it was a DOS partition, you probably
will need to use "format" to create a new file system on it, and then
restore your important files from your backups.  Other operating
systems will have different needs; most will need to reformat the
partition, and if it was their "main" partition, will probably need
d58 11
a68 8
Once you've backed all your data up, there is a tool called fips 2.0
that can shrink your FAT-based DOS/Windows partition to make room for
OpenBSD.  It is included in the MACHINE tools area of this distribution as
a convenience.  It is strongly advised that you read its documentation
and understand the consequences of your actions before using it.  In some
cases, defragmenting your disk and running fips may be much faster than
reinstalling your DOS partition from the backup.

@

