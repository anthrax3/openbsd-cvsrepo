head	1.11;
access;
symbols
	OPENBSD_3_2:1.10.0.6
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.6.0.4
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.10
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.8
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.6
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5;
locks; strict;
comment	@# @;


1.11
date	2002.12.31.16.35.35;	author miod;	state dead;
branches;
next	1.10;

1.10
date	2001.10.02.23.04.27;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.04.24.23.07.46;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.19.02.29.05;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.28.15.00.48;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	99.01.23.08.24.17;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	96.10.03.00.47.29;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.10.03.00.40.07;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.29.05.54.19;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.04.25.21.30.20;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.17.09.34.56;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@OpenBSDUpgrade({:-the miniroot, or an installation tape-:})
@


1.10
log
@Sync with OpenBSDUpgrade macro change. Explicitely provide all the media
able to start an upgrade procedure.
@
text
@@


1.9
log
@Update supported hardware list, fix typos, use m4.common macros
whenever possible, remove obsolete information, etc.

ok fries@@
@
text
@d1 1
a1 1
OpenBSDUpgrade
@


1.8
log
@Match reality
@
text
@d1 1
a1 10
To upgrade to OpenBSD OSREV from a previous version start with the general
instructions in the section "Installing OpenBSD".

After booting with the miniroot, select the (U)pdate option rather than
the (I)nstall option at the prompt in the install process.

The upgrade script will use the existing disk partitions to install the
new system in, and also preserves files in `/etc' which you are likely
to have customized since a previous installation.

@


1.7
log
@tweaks/OSrev/cleaning/'.tar.gz -> .tgz' .. etc ..
@
text
@d1 2
d4 2
a5 3
There is no automated upgrade program in this release.
(This is the first official release for the Sun3 anyway.)
However, it is possible to upgrade your system manually.
d7 3
a9 1
Manual upgrade procedure:
a10 61
	* Place _at least_ the `base' binary set in a filesystem
	  accessible to the target machine.  A local filesystem
	  is preferred, since there may be incompatibilities
	  between the OpenBSD OSREV kernel and older route(8)
	  binaries.

	* Back up your pre-existing kernel and copy the OSREV
	  kernel into your root partition.

	* Reboot with the OSREV kernel into single-user mode.

	* Check all filesystems:

		/sbin/fsck -p

	* Mount all local filesystems:

		/sbin/mount -a -t nonfs

	* If you keep /usr or /usr/share on an NFS server, you
	  will want to mount those filesystems as well.  To do
	  this, you will need to enable the network:

		sh /etc/netstart

	  NOTE: the route(8) commands may fail due to potential
	  incompatibilities between route(8) and the OpenBSD OSREV
	  kernel.  Once you have enabled the network, mount the
	  NFS filesystems.  If you use amd(8), you may or may not
	  have to mount these filesystems manually.  Your mileage
	  may vary.

	* Make sure you are in the root filesystem and extract
	  the `base' binary set:

		cd /
		tar -xzvpf /path/to/base{:--:}OSrev.tgz

	* Install a new boot block:

		cd /usr/mdec
		cp -p ./ufsboot /mnt/ufsboot
		sync ; sleep 1 ; sync
		./installboot /mnt/ufsboot bootxx /dev/rsd0a
		# Substitute your root partition here -^

	* Sync the filesystems:

		sync

	* At this point you may extract any other binary sets
	  you may have placed on local filesystems, or you may
	  wish to extract additional sets at a later time.
	  To extract these sets, use the following commands:

		cd /
		tar -xzvpf <path to set>

NOTE: you SHOULD NOT extract the `etc' set if upgrading.  Instead,
you should extract that set into another area and carefully merge
the changes by hand.
@


1.6
log
@OSREV/OSrev
@
text
@d44 1
a44 1
		tar -xzvpf /path/to/base{:--:}OSrev.tar.gz
@


1.5
log
@another update...
@
text
@d11 1
a11 1
	  between the OpenBSD 2.0 kernel and older route(8)
d14 1
a14 1
	* Back up your pre-existing kernel and copy the 2.0
d17 1
a17 1
	* Reboot with the 2.0 kernel into single-user mode.
d34 1
a34 1
	  incompatibilities between route(8) and the OpenBSD 2.0
d44 1
a44 1
		tar -xzvpf /path/to/base20.tar.gz
@


1.4
log
@sync pass 2
@
text
@d14 1
a14 1
	* Back up your pre-existing kernel and copy the 1.1
d34 1
a34 1
	  incompatibilities between route(8) and the OpenBSD 1.1
d44 1
a44 1
		tar -xzvpf /path/to/base11.tar.gz
@


1.3
log
@Update for removal of GNU tar(1)
@
text
@d11 1
a11 1
	  between the OpenBSD 1.1 kernel and older route(8)
d17 1
a17 1
	* Reboot with the 1.1 kernel into single-user mode.
@


1.2
log
@Did some s/NetBSD/OpenBSD/, s/netbsd/bsd/ and $OpenBSD$ additions.
However this stuff is largely related to NetBSD and must be completely
redone, if we will make real relases sometime
@
text
@d44 1
a44 3
		tar --unlink -zxvpf /path/to/base11.tar.gz

	  NOTE: the `--unlink' option is _very_ important!
d64 1
a64 1
		tar --unlink -zxvpf <path to set>
@


1.1
log
@update from netbsd
@
text
@d11 1
a11 1
	  between the NetBSD 1.1 kernel and older route(8)
d34 1
a34 1
	  incompatibilities between route(8) and the NetBSD 1.1
@
