head	1.21;
access;
symbols
	OPENBSD_3_2:1.20.0.2
	OPENBSD_3_2_BASE:1.20
	OPENBSD_3_1:1.18.0.2
	OPENBSD_3_1_BASE:1.18
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.6.0.8
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.6
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@# @;


1.21
date	2002.12.31.16.35.35;	author miod;	state dead;
branches;
next	1.20;

1.20
date	2002.06.09.05.53.55;	author todd;	state Exp;
branches;
next	1.19;

1.19
date	2002.04.17.23.32.12;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2002.04.09.01.22.23;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2002.03.30.22.52.58;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2001.10.14.18.28.02;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2001.10.06.19.29.01;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2001.10.02.20.03.26;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2001.10.01.22.59.12;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.10.01.01.08.12;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2001.04.24.23.07.45;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2001.02.07.20.34.45;	author todd;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.10.01.30.44;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2000.10.18.21.54.43;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.19.02.29.05;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	98.05.18.00.34.26;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	98.03.08.00.12.55;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.10.24.07.11.29;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	96.10.03.00.40.06;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.25.21.30.17;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.17.09.34.52;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@dnl	$OpenBSD: install,v 1.20 2002/06/09 05:53:55 todd Exp $
OpenBSDInstallPrelude

There are several ways to install OpenBSD onto a disk. The easiest way
in terms of preliminary setup is to use the OpenBSD miniroot that can
be booted off a tape.

If your MACHINE is hooked up in a network and you can find a server to
arrange for a diskless setup, which is a convenient way to install on a
machine whose disk does not currently hold a usable operating system.
This is difficult to get set up correctly the first time, but easy to
use afterwards.  (see ``Installing using a diskless setup'' below).

It is also possible to install OpenBSD "manually" from a running SunOS
system, using the system tools, as well as gnu tar and gunzip (see
``Installing from SunOS'' below).


Booting from the Installation Media:

Prior to attempting an installation, you should make sure that everything
of value on the target system has been backed up.  While installing OpenBSD
does not necessarily wipe out all the partitions on the hard disk, errors
during the install process can have unforeseen consequences and you will
probably render the system unbootable if you start, but do not complete
the installation.  Have the installation media for the prior installation,
be it a SunOS or OpenBSD tape is good insurance if you want to be able to
"go back" for some reason.

After taking care of all that, bring your system down gracefully using
the shutdown(8) and/or halt(8) commands.  This will get you to the monitor
prompt.


Booting from SCSI tape:

Boot the miniroot by typing the appropriate command at the PROM:

	> b st()
	
The above instructions assume your tape drive is the default tape drive
using SCSI id 4. If your drive uses id 5, modify the boot command
accordingly:

	> b st(,28,)
	
This will cause the kernel contained in the miniroot to be booted.


Installing using a diskless setup:

First, you must setup a diskless client configuration on a server. If
you are using a OpenBSD system as the boot-server, have a look at the
diskless(8) manual page for guidelines on how to proceed with this.
If the server runs another operating system, you'll have to consult
documentation that came with it (on SunOS systems, add_client(8) and
the Sun System/Networks administrators guide constitute a good start;
on Solaris systems, share(1M) is a good starting point as well).

Boot your workstation from the server by entering the appropriate `boot'
command at the monitor prompt. Depending on the ethernet chip in your
machine, this command takes one of the following forms:

	> b le()bsd.rd		# for sun pizza boxes (3/50, 3/60)
	> b ie()bsd.rd		# for other MACHINE

In order to have a MACHINE machine boot diskless by default, you need to
do some nvram wizardry:

	> q 18
	12
then, if your machine is a model 3/50 or 3/60, continue with:
	6c
	65
	00
	00
	00
or, for other MACHINE machines:
	69
	65
	00
	00
	00
and return to the prom prompt with:
	q
	>

The above set of commands has changed the boot path strategy to the
network interface, thus a diskless boot.
To change the strategy in diagnostic mode (when the "Diag/Norm" switch
is set to "Diag"), enter the same set of data after a "q 22" command
instead of "q 18".
Remember that the prom having a limited number of write cycles, you
shouldn't abuse this feature.

Installing using the Tape or netboot procedure:

OpenBSDInstallPart2

	Boot your machine from the installation media as described above.

	It will take a while to load the kernel especially from a
	slow network connection, most likely more than a minute.  If
	some action doesn't eventually happen, or the spinning cursor has
	stopped and nothing further has happened, either your boot medias
	is probably bad, your diskless setup isn't correct or you may have
	a hardware or configuration problem.

OpenBSDBootMsgs

	You will next be asked for your terminal type.  If you are
	installing from a keyboard/monitor console, the default of
	"sun" if correct.  If you are installing from a serial console
	you should choose the terminal type from amongst those listed.
	(If your terminal type is xterm, just use vt100).

OpenBSDInstallPart3

OpenBSDInstallPart4

OpenBSDInstallPart5(sd0)

OpenBSDInstallNet({:-CD-ROM, NFS, -:})

OpenBSDFTPInstall

OpenBSDHTTPInstall

OpenBSDCDROMInstall

OpenBSDTAPEInstall(3)

OpenBSDNFSInstall

OpenBSDDISKInstall({:-"xdN" or -:},{:-only -:})

OpenBSDCommonFS
		
OpenBSDCommonURL

OpenBSDCongratulations

If you will be running your OpenBSD system from a serial console, you may
need to edit /etc/ttys and change the terminal type, and getty method from
"sun" and "console" to "vt100" and "std.9600" or something similar.

In order to use 'tip' on OpenBSD/MACHINE, you'll need to edit /etc/ttys
and add "local" to the end of the tty configuration line, and run
'ttyflags -a' to put your changes into effect.



Installing from SunOS:

You need a SunOS machine to install OpenBSD.  You also need at
least the following pieces:

  - the *.tgz files you want to install (as a minimum, base{:--:}OSrev.tgz and
    etc{:--:}OSrev.tgz)
  - gunzip (GNU gzip) SunOS binary
  - gtar (GNU tar) SunOS binary
  - a "/boot" file from a SunOS MACHINE machine (not sun3x!)
  - an OpenBSD kernel

All these pieces, except "/boot" and the GNU utilities are supplied in
the OpenBSD/MACHINE distribution.

You need to format and partition the disk using SunOS (since
OpenBSD/MACHINE uses SunOS disk labels.)  Give yourself adequate
partition sizes.  Here is an example layout:

    partition    size   offset	  will be..
    sd0a        80000        0	  /
    sd0b       256000    80000	  swap
    sd0c      4165271        0	  `whole disk'
    sd0d       100000   436000    /var
    sd0f       100000   336000    /tmp
    sd0g      3229271   936000    /usr
    sd0h       400000   536000    /var/tmp

Use SunOS to newfs the partitions which will have filesystems on them.
(OpenBSD's filesystem format is identical to SunOS).

    sunos# newfs /dev/rsd0a
    [... lots of output]

Repeat for any other partition (in this example, /dev/rsd0d, /dev/rsd0f,
/dev/rsd0g, /dev/rsd0h).

NOTE: If you are able to, there is a performance benefit from
newfs'ing using OpenBSD.  If you newfs using the OpenBSD newfs command,
be sure to use the -O flag for your / partition, so that newfs will
use the 4.3BSD filesystem format, rather than the new 4.4BSD filesystem
format.  If you forget, you will not be able to boot -- the SunOS boot
blocks do not understand the extended 4.4BSD filesystem format.

Mount those partitions in a tree formation, under /mnt; ie:

    sunos# df
    Filesystem            kbytes    used   avail capacity  Mounted on
    [...]
    /dev/sd0a              38427       0   38427     0%    /mnt
    /dev/sd0d              48249       0   48249     0%    /mnt/var
    /dev/sd0f              48249       0   48249     0%    /mnt/tmp
    /dev/sd0g            1564024       0 1564024     0%    /mnt/usr
    /dev/sd0h             193536       0  193536     0%    /mnt/var/tmp

Place a standard SunOS "boot" program in /mnt (your new root
partition), and use the SunOS command "installboot" to make it work.
The installboot man page says to do something like this:

    sunos# cp /usr/mdec/ufsboot /mnt/boot
    sunos# sync; sync
    sunos# /usr/mdec/installboot -vlt /mnt/boot /usr/mdec/bootxx /dev/rsd0a

You can now extract the provided "*.tgz files onto your disk.

    sunos# ls -FC
    base{:--:}OSrev.tgz   comp{:--:}OSrev.tgz   game{:--:}OSrev.tgz   misc{:--:}OSrev.tgz
    bsd          etc{:--:}OSrev.tgz    man{:--:}OSrev.tgz
    sunos{:-#-:} gunzip < base{:--:}OSrev.tgz | (cd /mnt; gtar xvpf -)
    [...] for each set

And finally copy the OpenBSD kernel onto your disk.

    sunos# cp bsd /mnt/bsd

The GNU gunzip and gtar programs are not distributed as part of SunOS,
but may be present in your /usr/local/bin.  If not, you will need to
obtain them from a GNU archive and install before proceeding.  The
OpenBSD tar files are in the "new format" that includes directory
information, and the standard SunOS tar will not extract from them
successfully.

After the files have been extracted, setup /mnt/etc/fstab to match
your actual disk layout.  (Minus the "/mnt" component of each path, of
course :-)

Now proceed to reboot the machine and the customize your installation.



Net Boot or Diskless Setup Information:

The setup is similar to SunOS diskless setup, but not identical, because
the Sun setup assumes that the bootblocks load a kernel image, which then
uses NFS to access the exported root partition, while the OpenBSD bootblocks
use internal NFS routines to load the kernel image directly from the
exported root partition.

Please understand that no one gets this right the first try, since
there is a lot of setup and all the host daemons must be running and
configured correctly.  If you have problems, extract the diskless(8)
manpage, find someone who's been through it before and use the host
syslog and tcpdump(8) to get visibility of what's happening (or not).

Your MACHINE expects to be able to download a second stage bootstrap
program via TFTP after having acquired its IP address through RevARP when
instructed to boot "over the net". It will look for a filename
corresponding to the machine's IP address. For example, a MACHINE machine
which has been assigned IP address 130.115.144.11, will make an TFTP
request for `8273900B'.
Normally, this file is a symbolic link to an appropriate second-stage
boot program, which should be located in a place where the TFTP daemon
can find it (remember, many TFTP daemons run in a chroot'ed environment).

You can find the boot program in `/usr/mdec/netboot' in the OpenBSD/MACHINE
distribution.

Here's an example to illustrate this whole mess:

    server# cd /<client-root-dir>/usr/mdec
    server# cp boot /tftpboot/boot.MACHINE.OpenBSD
    server# cd /tftpboot
    server# ln -s boot.MACHINE.OpenBSD 8273900B


After the boot program has been loaded into memory and given control by
the PROM, it starts locating the machine's remote root directory through
the BOOTPARAM protocol. First a BOOTPARAM WHOAMI request is broadcast
on the local net. The answer to this request (if it comes in) contains
the client's name. This name is used in next step, a BOOTPARAM GETFILE
request -- sent to the server that responded to the WHOAMI request --
requesting the name and address of the machine that will serve the client's
root directory, as well as the path of the client's root on that server.

Finally, this information (if it comes in) is used to issue a REMOTE MOUNT
request to the client's root filesystem server, asking for an NFS file
handle corresponding to the root filesystem. If successful, the boot
program starts reading from the remote root filesystem in search of the
kernel which is then read into memory.

You will want export the miniroot{:--:}OSrev.fs filesystem to the client.  You
can dd this filesystem image to some spare partition, mount and export
that partition or use tar to copy the contents to a more convenient spot.

Alternatively you can build a bootable partition from the distribution sets
as follows:

Unpack `base{:--:}OSrev.tgz' and `etc{:--:}OSrev.tgz' on the server in the root directory
for your target machine. If you elect to use a separately NFS-mounted
filesystem for `/usr' with your diskless setup, make sure the "./usr" base
files in base{:--:}OSrev.tgz end up in the correct location. One way to do this is
to temporarily use a loopback mount on the server, re-routing <root>/usr to
your server's exported OpenBSD "/usr" directory. Also put the kernel and
the install/upgrade scripts into the root directory.

A few configuration files need to be edited:

	<root>/etc/hosts
		Add the IP addresses of both server and client.

	<root>/etc/myname
		This files contains the client's hostname; use the same
		name as in <root>/etc/hosts.

	<root>/etc/fstab
		Enter the entries for the remotely mounted filesystems.
		For example:
			server:/export/root/client       /     nfs  rw 0 0
			server:/export/exec/MACHINE.OpenBSD /usr  nfs  rw 0 0

Now you must populate the the `/dev' directory for your client. For
this, you can simply change your working directory to `<root>/dev'
and run the MAKEDEV script: `sh MAKEDEV all' (this might require the edition
of MAKEDEV to change the PATH for it to work properly).
@


1.20
log
@knf
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.19 2002/04/17 23:32:12 miod Exp $
@


1.19
log
@Our m4 generated MAKEDEV will eventually be less SunOS-friendly than they
used to are, if at all; so warn people setting up diskless systems under
SunOS or other operating systems that they might need to edit MAKEDEV for
it to run properly on the host system.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.18 2002/04/09 01:22:23 miod Exp $
d148 1
a148 1
and add "local" to the end of the tty configuration line, and run 
d186 1
a186 1
 
@


1.18
log
@Since the installation procedure will list all the supported media flags
via ifconfig -m, there is no need to suggest canonical media flags on
some arches, especially since the end user might have a different
interface with different flags; instead, be more cosy and mention that
looking at the manual page for the interface might be helpful for
desperate cases.

Thus, merge the OpenBSDInstallNet and OpenBSDInstallNet2 macros, and
remove thde in-between text for the arches that had such a paragraph.
@
text
@d1 1
a1 1
dnl	$OpenBSD: install,v 1.17 2002/03/30 22:52:58 miod Exp $
d325 2
a326 1
and run the MAKEDEV script: `sh MAKEDEV all'.
@


1.17
log
@Factorize more common texts from the ramdisk operation.
No text changes except for harmonization, and the blurb about network
interface flags has bene slightly changed for some arches.
@
text
@d1 1
a1 1
dnl	$OpenBSD$
d123 1
a123 9
OpenBSDInstallNet(linkflags)dnl
 The flags usually carry the following
	meaning:

		-link0 -link1	Use existing setting (default)
		link0 -link1	Use UTP (twisted pair) port
		-link0 link1 	Use AUI port

OpenBSDInstallNet2({:-CD-ROM, NFS, -:})
@


1.16
log
@Solaris friendly update!
- Provide typical Solaris command lines for creating floppies, dumping
miniroots to disks, and filling tapes.
- Make the tape generation script more versatile.
- When SunOS add_client(8) is mentioned, mention Solaris share(1M) as well.
- Add ``Installing from Solaris'' instructions for sparc and sparc64 ports
- While there, slight fixes to the ``Installing from SunOS'' sections on
  sparc and sun3.
@
text
@d1 1
d117 9
a125 56
	After entering the terminal type you will be greeted by a
	welcome message and asked if you really want to continue.
	Assuming you answered yes, the install program will then tell
	you which disks of that type it can install on, and ask you
	which it should use.  The name of the disk is typically "sd0".
	Reply with the name of your disk.

	Next you will have to edit or create a disklabel for the disk
	OpenBSD is being installed on.  The installation script will
	invoke the text editor allowing you to do this.  Note that
	partition 'c' inside this disk label should ALWAYS reflect the
	entire disk, including any non-OpenBSD portions.  The root file
	system should be in partition 'a', and swap is usually in partition
	'b'.  It is recommended that you create separate partitions for
	root and /usr, you may also want to specify /var and /home
	partitions.

	The swap partition (usually 'b') should have a type of "swap", all
	other native OpenBSD partitions should have a type of "4.2BSD".
	Block and fragment sizes are usually 8192 and 1024 bytes, but can
	also be 16384 and 2048 bytes.

	The install program will now label your disk and ask which file
	systems should be created on which partitions.  It will auto-
	matically select the 'a' partition to be the root file system.
	Next it will ask for which disk and partition you want a file
	system created on.  This will be the same as the disk name (e.g.
	"sd0") with the letter identifying the partition (e.g. "d")
	appended (e.g. "sd0d").  Then it will ask where this partition is
	to be mounted, e.g. /usr.  This process will be repeated until
	you type "done".

	At this point you will be asked to confirm that the file system
	information you have entered is correct, and given an opportunity
	to change the file system table.  Next it will create the new file
	systems as specified, OVERWRITING ANY EXISTING DATA.  This is the
	point of no return.

	After all your file systems have been created, the install program
	will give you an opportunity to configure the network.  The network
	configuration you enter (if any) can then be used to do the install
	from another system using NFS, HTTP or FTP, and will also be the
	configuration used by the system after the installation is complete.

	If you select to configure the network, the install program will
	ask you for a name of your system and the DNS domain name to use.
	Note that the host name should be without the domain part, and that
	the domain name should NOT {:-include-:} the host name part.

	Next the system will give you a list of network interfaces you can
	configure.  For each network interface you select to configure, it
	will ask for the IP address to use, the symbolic host name to use,
	the netmask to use and any interface-specific flags to set.  The
	interface-specific flags are usually used to determine which media
	the network card is to use.  This is driver dependent, but for the
	MACHINE le(4) driver, the flags usually carry meaning:
d131 1
a131 18
*** IMPORTANT - these are the correct setting for MACHINE ethernet cards,
		the suggestions shown by the install script are generic
		and may or may not be correct...

	After all network interfaces have been configured the install pro-
	gram will ask for a default route and IP address of the primary
	name server to use.  You will also be presented with an opportunity
	to edit the host table.

	At this point you will be allowed to edit the file system table
	that will be used for the remainder of the installation and that
	will be used by the finished system, following which the new file
	systems will be mounted to complete the installation.

	After these preparatory steps have been completed, you will be
	able to extract the distribution sets onto your system.  There
	are several install methods supported; FTP, HTTP, tape, CD-ROM, NFS
	or a local disk partition.
@


1.15
log
@Fix a few common typos and stuff related to tape installation.
@
text
@d14 2
a15 2
system, using SunOS tools and gnu tar and gunzip (see ``Installing from
SunOS'' below).
d56 2
a57 1
the Sun System/Networks administrators guide constitute a good start).
d229 6
a234 6
    the *.tgz files you want to install (as a minimum, base{:--:}OSrev.tgz and
        etc{:--:}OSrev.tgz)
    gunzip (GNU gzip) SunOS binary
    gtar (GNU tar) SunOS binary
    a "/boot" file from a SunOS MACHINE machine (not sun3x!)
    a kernel, most likely "/bsd"
d290 2
a291 3
    base{:--:}OSrev.tgz   comp{:--:}OSrev.tgz   man{:--:}OSrev.tgz       xfont{:--:}OSrev.tgz
    bsd             etc{:--:}OSrev.tgz    misc{:--:}OSrev.tgz      xserv{:--:}OSrev.tgz
    game{:--:}OSrev.tgz   xbase{:--:}OSrev.tgz
d311 1
@


1.14
log
@Remove dangling references (see section foo with no section foo).
@
text
@d190 1
a190 1
	After these preparatory steps has been completed, you will be
d193 1
a193 4
	or a local disk partition.  To install from a tape, the distrib-
	ution sets must have been written to tape prior to running the
	installation program, either as tar images or as gzipped tar
	images.
d201 1
a201 1
OpenBSDTAPEInstall
@


1.13
log
@- consistent ``sun3'' capitalization.
@
text
@d32 3
a34 2
	
Booting from SCSI tape
a46 3
After the initial device probe messages you'll be asked to start the
install or upgrade procedure. Proceed to the section ``Running the
installation scripts'' below.
a57 1

a64 5
This will cause the kernel provided by the diskless setup to be booted.
After the initial probe messages you'll asked to start the install
or upgrade procedure. Proceed to the section ``Running the installation
scripts'' below.

d94 1
d172 1
a172 1
		-link0 -link1	Use existing setting (only setup by netboot)
d202 2
a223 3
If you are unfamiliar with UN*X-like system administration, 
it's recommended that you buy a book that discusses it.

d226 1
a226 1
Installing from SunOS.
@


1.12
log
@Update the description of the bsd.rd miniroot behaviour (it will ask
for a terminal first, then I/U/S).
While there, remove a duplicated sentence on hp300 and add the complete
bsd.rd installation description to the vax notes.
@
text
@d7 1
a7 1
If your Sun3 is hooked up in a network and you can find a server to
d66 1
a66 1
	> b ie()bsd.rd		# for other sun3s
d73 1
a73 1
In order to have a sun3 machine boot diskless by default, you need to
d84 1
a84 1
or, for other sun3 machines:
d177 1
a177 1
	sun3 le(4) driver, the flags usually carry meaning:
d183 1
a183 1
*** IMPORTANT - these are the correct setting for sun3 ethernet cards,
d225 1
a225 1
In order to use 'tip' on OpenBSD/sun3, you'll need to edit /etc/ttys
d243 1
a243 1
    a "/boot" file from a SunOS sun3 machine (not sun3x!)
d247 1
a247 1
the OpenBSD/sun3 distribution.
d250 1
a250 1
OpenBSD/sun3 uses SunOS disk labels.)  Give yourself adequate
d338 1
a338 1
Your sun3 expects to be able to download a second stage bootstrap
d341 1
a341 1
corresponding to the machine's IP address. For example, a sun3 machine
d348 1
a348 1
You can find the boot program in `/usr/mdec/netboot' in the OpenBSD/sun3
d354 1
a354 1
    server# cp boot /tftpboot/boot.sun3.OpenBSD
d356 1
a356 1
    server# ln -s boot.sun3.OpenBSD 8273900B
d402 1
a402 1
			server:/export/exec/sun3.OpenBSD /usr  nfs  rw 0 0
@


1.11
log
@Update supported hardware list, fix typos, use m4.common macros
whenever possible, remove obsolete information, etc.

ok fries@@
@
text
@a115 5
	While booting, you will probably see several warnings.  You
	may be warned that the kernel can't figure out what device
	it booted from and that no swap space is present.  Do not be
	alarmed, these are completely normal.

@


1.10
log
@the wizard has spoken
@
text
@d1 1
a1 2
Installing OpenBSD is a relatively complex process, but if you have
this document in hand it shouldn't be too much trouble.
a17 18
This section of the install document is really broken into several parts:

	- booting from the installation media
	- the miniroot install script
	- after completing an installation
	- installing from Sun OS
	- net boot or diskless setup information

The first section explains how to run tho install scripts. The second
section gets you up to the point where you've booted the kernel from
whatever media or setup described in the previous section, to where you
have to respond to prompts from the install script.  The next section
describes the path through the install script, and the remainder are
notes which might be useful, but outside the bounds of simple "how to"
instructions.



d51 1
a51 1
Installing using a diskless setup
d76 1
a76 2
	> q
	18
d78 1
d84 7
d94 7
a100 1
The miniroot install script:
d102 2
a103 7
The following is a walk-through of the steps you will take while
getting OpenBSD installed on your hard disk.  If any question has a
default answer, it will be displayed in brackets ("[]") after the
question.  If you wish to stop the installation, you may hit Control-C
at any time, but if you do, you may have to begin the installation
process again from scratch.  Using Control-Z to suspend the process
may be a better option. 
d107 2
a108 2
	It will take a while to load the kernel especially from a floppy
	or slow network connection, most likely more than a minute.  If
d114 1
a114 8
	You will then be presented with the OpenBSD kernel boot
	messages.  You will want to read them to determine your
	disk's name and geometry.  Its name will be something like
	"sd0" or "wd0" and the geometry will be printed on a line that
	begins with its name.  As mentioned above, you will need your
	disk's geometry when creating OpenBSD partitions.  You will
	also need to know the device name to tell the install tools
	what disk to install on.
d119 1
a119 11
	alarmed, these are completely normal.  The first warning
	occurs because while OpenBSD/sun3 can boot from the floppy
	drive, the kernel itself lacks a floppy driver for some
        architectures.

	When the loading process is complete, the boot floppy will be
	ejected and you will be prompted to insert a filesystem floppy,
	just hit return since the filesystem is contained in the kernel
	image just loaded.  Next there will be a prompt asking you for
	a shell name, just hit return to start executing the installation
	setup script.
d125 1
a125 4
	(If your terminal type is xterm, just use vt100).  Next you
	will be prompted for a choice of which text editor to use at
	several places in the install script.  You will probably want
	to use "vi" if your terminal supports this.
a223 9
After completing an installation:

Now try a reboot.  (If needed, swap your scsi id's first).  Initially
I'd suggest you "boot sd()bsd -bs", then try multiuser after that.
if you boot single-user the OpenBSD incantation to make the root
filesystem writable is

    OpenBSD# mount -u /dev/sd0a /

d228 1
a228 4
"sun" and "console" to "vt100" and "std.9600" or something similar.  Also
when running from a serial console, you may wish to adjust the eeprom
settings for input-device, output-device, screen-#columns, and screen-#rows
as appropriate.  
a233 4
On installing X11 for OpenBSD/sun3, you may wish to add a line similar to
'ldconfig /usr/X11R6/lib' to the end of your /etc/rc.local file.  This will
add the X libraries to your dynamic linking search path at boot time.

d244 2
a245 1
    the *.tgz files you want to install (as a minimum, base{:--:}OSrev.tgz)
d248 1
a248 1
    a "/boot" file from a SunOS machine
d259 7
a265 8
    sd0a        48825        0	  /
    sd0b        69825    48825	  swap
    sd0c       639450        0	  `whole disk'
    sd0d        65625   118650    /var
    sd0g       455175   184275	  /usr

FYI, this particular disk setup is used on a model 3/60 connected
to a shoebox with a Micropolis 1558 ESDI drive.
d272 3
a274 2
    sunos# newfs /dev/rsd0g
    [... lots of output]
d288 5
a292 2
    /dev/sd0a              11501       0   11501     0%    /mnt
    /dev/sd0g             179529       0  179529     0%    /mnt/usr
d298 1
a298 1
    sunos# cp /usr/mdec/sdboot /mnt/boot
d300 1
a300 1
    sunos# /usr/mdec/installboot -vlt /mnt/boot /usr/mdec/bootsd /dev/rsd0a
d316 5
a320 4
but may be present in your /usr/local/bin.  If not, you will need to obtain
them from a GNU archive and install before proceeding.  The OpenBSD
tar files are in the "new format" that includes directory information,
and the standard SunOS tar will not extract from them successfully.
a411 1

@


1.9
log
@Typo: 'eg.' -> 'e.g.'
@
text
@d92 13
@


1.8
log
@Various updates. Grammar/spelling proofread by ericj.
@
text
@d171 4
a174 4
	system created on.  This will be the same as the disk name (eg.
	"sd0") with the letter identifying the partition (eg. "d")
	appended (eg. "sd0d").  Then it will ask where this partition is
	to be mounted, eg. /usr.  This process will be repeated until
@


1.7
log
@Match reality
@
text
@d15 2
a16 2
system, using SunOS tools and gnu tar and gunzip (see ``Installing from SunOS''
below).
d32 1
a32 1
notes which might be useful, but outside the bounds of simple "how two"
d226 1
a226 2
	images.  Note that installation sets on multiple floppies is not
	currently supported.
d236 1
a236 1
OpenBSDDISKInstall({:-"wdN" or -:},{:-only -:})
d292 5
a296 4
    sd0a        28140        0	  /
    sd0b        16170    28140	  swap
    sd0c       204540        0	  `whole disk'
    sd0g       160230    44310	  /usr
d298 2
a299 1
BTW, These are not recommended sizes.
d360 1
a360 1
The set up is similar to SunOS diskless setup, but not identical, because
d382 1
a382 1
You can find the boot program in `/usr/mdec/boot' in the OpenBSD/sun3
@


1.6
log
@s/cpp/m4/g
@
text
@a0 1

d2 1
a2 1
this document in hand it should not be too difficult.
d4 245
a248 7
There are several ways to install OpenBSD onto your disk.  If your
machine has a tape drive the easiest way is "Installing from tape"
(details below).  If your machine is on a network with a suitable
NFS server, then "Installing from NFS" is the next best method.
Otherwise, if you have another Sun machine running SunOS you can
initialize the disk on that machine and then move the disk.
(Installing from SunOS is not recommended.)
d250 1
d252 1
a252 78
* Installing from tape:

Create the OpenBSD/sun3 OSREV boot tape as described in the section
entitled "Preparing a boot tape" and boot the tape.  At the PROM
monitor prompt, use one of the commands:
	>b st()
	>b st(0,8,0)
The first example will use the tape on SCSI target 4, where the
second will use SCSI target 5.  The '>' is the monitor prompt.

After the tape loads, you should see many lines of configuration
messages, and then the following "welcome" screen:

	Welcome to the OpenBSD/sun3 RAMDISK root!

This environment is designed to do only three things:
1:  Partition your disk (use the command:  edlabel /dev/rsd0c)
2:  Copy a miniroot image into the swap partition  (/dev/rsd0b)
3:  Reboot (using the swap partition, i.e. /dev/sd?b).

Copying the miniroot can be done several ways, allowing
the source of the miniroot image to be on any of these:
    boot tape,  NFS server, TFTP server, rsh server

The easiest is loading from tape, which is done as follows:
	mt -f /dev/nrst0 rewind
	mt -f /dev/nrst0 fsf 2
	dd bs=32k if=/dev/nrst0 of=/dev/rsd0b
(For help with other methods, please see the install notes.)

To reboot using the swap partition, first use "halt",
then at the PROM monitor prompt use a command like:
	b sd(,,1) -s

To view this message again, type:  cat /.welcome

[ End of "welcome" screen. ]

Copy the miniroot as described in the welcome message, and
reboot from that just installed miniroot.  See the section
entitled "Booting the miniroot" for details.


* Installing from NFS:

Before you can install from NFS, you must have already configured
your NFS server to support your machine as a diskless client.
Instructions for configuring the server are found in the section
entitled "Getting the OpenBSD System onto Useful Media" above.

First, at the Sun PROM monitor prompt, enter a boot command
using the network interface as the boot device.  On desktop
machines this is "le", and "ie" on the others.  Examples:

	>b le() -s
	>b ie() -s

After the boot program loads the RAMDISK kernel, you should
see the welcome screen as shown in the "tape boot" section
above.  You must configure the network interface before you
can use any network resources.  For example the command:

	ssh> ifconfig le0 inet 192.333.20.198 up

will bring up the network interface with that address.  The next
step is to copy the miniroot from your server.  This can be done
using either NFS or remote shell.  (In the examples that follow,
the server has IP address 192.333.20.195)

To load the miniroot from an NFS file:

	ssh> mount -r 192.333.20.195:/server/path /mnt
	ssh> dd if=/mnt/miniroot of=/dev/rsd0b bs=8k

To load the miniroot using rsh to the server:

	ssh> run -b dd if=/dev/pipe of=/dev/rsd0b bs=8k
	ssh> run -o /dev/pipe rsh 192.333.20.195 zcat miniroot.gz
d254 186
a439 6
Note that "ssh" does not use "sh" syntax.  It is a very small
shell designed for the ramdisk kernel.  The first command of the
above pair runs a "dd" in the background reading /dev/pipe.  The
second of the pair runs an "rsh" command with its standard output
redirected to /dev/pipe.  In ssh, the "help" command will show you
a list of commands and options (there are only a few).
a440 77

* Booting the miniroot:

If the miniroot was installed on partition 'b' of the disk with
SCSI target ID=0 then the PROM boot command would be:
	>b sd(0,0,1) -s
With SCSI target ID=2, the the PROM is:
	>b sd(0,10,1) -s

The numbers in parentheses above are:
	controller (usually zero)
	unit number (SCSI ID * 8, in hexadecimal)
	partition number

Miniroot install program:
------------------------

The miniroot's install program is very simple to use.  It will guide
you through the entire process, and is well automated.  Additional
improvements are planned for future releases.

The miniroot's install program will:

	* Allow you to place disklabels on additional disks.
	  The disk we are installing on should already have
	  been partitioned using the RAMDISK kernel.

	  Note that partition sizes and offsets are expressed
	  in sectors.  When you fill out the disklabel, you will
	  need to specify partition types and filesystem parameters.
	  If you're unsure what the these values should be, use the
	  following:

		fstype: 4.2BSD
		fsize: 1024
		bsize: 4096
		cpg: 16

	  If the partition will be a swap partition, use the following:

		fstype: swap
		fsize: 0 (or blank)
		bsize: 0 (or blank)
		cpg: 0 (or blank)

	  The number of partitions is fixed at 8 (by the Sun PROM).

	* Create filesystems on target partitions.

	* Allow you to set up your system's network configuration.
	  Remember to specify host names without the domain name
	  appended to the end.  For example use `foo' instead of
	  `foo.bar.org'.  If, during the process of configuring
	  the network interfaces, you make a mistake, you will
	  be able to re-configure that interface by simply selecting
	  it for configuration again.

	* Mount target filesystems.  You will be given the opportunity
	  to manually edit the resulting /etc/fstab.

	* Extract binary sets from the media of your choice.

	* Copy configuration information gathered during the
	  installation process to your root filesystem.

	* Make device nodes in your root filesystem.

	* Copy a new kernel onto your root partition.

	* Install a new boot block.

	* Check your filesystems for integrity.

First-time installation on a system through a method other than the
installation program is possible, but strongly discouraged.

OpenBSDCongratulations
@


1.5
log
@moving to 2.3
@
text
@d16 1
a16 1
Create the OpenBSD/sun3 2.0 boot tape as described in the section
d175 2
@


1.4
log
@typos.
@
text
@d76 1
a76 1
	ssh> ifconfig le0 inet 192.233.20.198 up
d81 1
a81 1
the server has IP address 192.233.20.195)
d85 1
a85 1
	ssh> mount -r 192.233.20.195:/server/path /mnt
d91 1
a91 1
	ssh> run -o /dev/pipe rsh 192.233.20.195 zcat miniroot.gz
@


1.3
log
@sync pass 2
@
text
@d30 1
a30 1
1:  Partititon your disk (use the command:  edlabel /dev/rsd0c)
@


1.2
log
@Did some s/NetBSD/OpenBSD/, s/netbsd/bsd/ and $OpenBSD$ additions.
However this stuff is largely related to NetBSD and must be completely
redone, if we will make real relases sometime
@
text
@d16 1
a16 1
Create the OpenBSD/sun3 1.1 boot tape as described in the section
@


1.1
log
@update from netbsd
@
text
@d2 1
a2 1
Installing NetBSD is a relatively complex process, but if you have
d5 1
a5 1
There are several ways to install NetBSD onto your disk.  If your
d16 1
a16 1
Create the NetBSD/sun3 1.1 boot tape as described in the section
d27 1
a27 1
	Welcome to the NetBSD/sun3 RAMDISK root!
d62 1
a62 1
entitled "Getting the NetBSD System onto Useful Media" above.
@

