head	1.5;
access;
symbols
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.1.0.8
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.09.04.20.00.28;	author patrick;	state dead;
branches;
next	1.4;

1.4
date	2013.08.02.17.11.54;	author florian;	state Exp;
branches;
next	1.3;

1.3
date	2013.07.26.20.07.29;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2013.07.16.18.15.10;	author florian;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.22.18.33.51;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Beagle has been replaced by armv7.
@
text
@dnl     $OpenBSD: install,v 1.4 2013/08/02 17:11:54 florian Exp $
OpenBSDInstallPrelude

OpenBSDInstallPart2

OpenBSDInstallPart3(,"sd0")

OpenBSDInstallPart4

OpenBSDInstallMBRPart1

dnl OpenBSDInstallMBRPart2(indeed)
	The fdisk(8) utility will be invoked to let you edit your MBR
	partitioning.  The current MBR partitions defined will be
	displayed and you will be allowed to modify them, and add new
	partitions.

	The setup will need two partitions, one 'OpenBSD' for the
	OpenBSD/MACHINE installation, and one 'MSDOS' for the
	U-Boot scripts/bootloader.

	If you use the whole disk option, the install script
	will create a small 'MSDOS' partition and use the rest of
	the disk for the OpenBSD installation.

	After your OpenBSD MBR partition has been setup, the real
	partition setup can follow.

OpenBSDInstallPart5

OpenBSDInstallPart6({:-CD-ROM, -:})

OpenBSDURLInstall

OpenBSDCDROMInstall

OpenBSDDISKInstall(,,{:-, Linux (ext2) or MS-DOS-:})

OpenBSDCommonInstall

OpenBSDInstallWrapup

OpenBSDCongratulations
@


1.4
log
@No longer needed since miod taught elf to mkuboot.
OK rapha@@
@
text
@d1 1
a1 1
dnl     $OpenBSD: install,v 1.3 2013/07/26 20:07:29 miod Exp $
@


1.3
log
@Minimalist update for 5.4. eyeballed deraadt@@
@
text
@d1 1
a1 1
dnl     $OpenBSD: install,v 1.2 2013/07/16 18:15:10 florian Exp $
d39 1
a39 22
dnl OpenBSDCommonInstall
	Installation set selection:
		A list of available distribution sets found on the
		given location will be listed.

		You may individually select distribution sets to install,
		by entering their name, or wildcards (e.g. `*.tgz' or
		`base*|comp*', or `all' to select all the sets (which
		is what most users will want to do).
		You may also enter `abort' to deselect everything and
		restart the selection from scratch, or unselect sets
		by entering their name prefixed with `-' (e.g. `-x*').

		It is also possible to enter an arbitrary filename and
		have it treated as a file set.

dnl md_installboot() currently needs objcopy...
		Currently the comp set must be installed for the installer to
		work correctly.

		When you are done selecting distribution sets, enter
		`done'.  The files will begin to extract.
@


1.2
log
@Document (not so) recent developments.

input/ok bmercer@@, rapha@@, patrick@@ (previous version)
@
text
@d1 1
a1 1
dnl     $OpenBSD: install,v 1.1 2011/03/22 18:33:51 jasper Exp $
d55 1
@


1.1
log
@add a first batch of notes for beagle, still rough and far from complete,
but one should be able to get an xM booting with these instructions.

"throw them in, then we can fix." drahn@@
@
text
@d1 1
a1 1
dnl     $OpenBSD: install,v 1.3 2010/03/16 17:23:09 miod Exp $
a3 57
Now you are ready to power up the board. It will print some hardware
information and if your SD card has been properly setup the autoboot
script will be loaded:

	Hit any key to stop autoboot:  0 
	mmc1 is available
	The user button is currently NOT pressed.
	reading boot.scr

	123 bytes read
	Running bootscript from mmc ...
	## Executing script at 80200000
	reading bsd.umg

	2634332 bytes read

	## Booting kernel from Legacy Image at 82800000 ...
	   Image Name:   boot
	   Image Type:   ARM Linux Kernel Image (uncompressed)
	   Data Size:    2634268 Bytes =  2.5 MB
	   Load Address: 80300000
	   Entry Point:  80300000
	   Verifying Checksum ... OK
	   Loading Kernel Image ... OK
	OK

	Starting kernel ...

	OpenBSD/beagle booting ...

Alternatively you can manually boot OpenBSD when you hit any key
during the time-out and you will be presented with the following
prompt:

	OMAP3 beagleboard.org #

Now type 'mmc init' to check that the SD card has been found:

	OMAP3 beagleboard.org # mmc init
	mmc1 is available
	OMAP3 beagleboard.org # 

When the card has been found you should load the U-Boot image into memory:

	OMAP3 beagleboard.org # fatload mmc 0 0x80800000 bsd.umg
	reading bsd.umg

	2634332 bytes read
	OMAP3 beagleboard.org # 

To load that image from memory and thus boot OpenBSD type:

	OMAP3 beagleboard.org # bootm 0x80800000

Note that no ramdisk kernels are provided at this moment, so you won't
be able to actually install OpenBSD/MACHINE yet..

d12 16
a27 1
OpenBSDInstallMBRPart2(indeed)
d39 21
a59 1
OpenBSDCommonInstall
@

