head	1.13;
access;
symbols
	OPENBSD_6_0:1.13.0.12
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.8
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.10
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.4
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.6
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.2
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.11.0.10
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.8
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.6
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.6.0.8
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.6
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.4
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.1.0.10
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.13
date	2013.10.15.22.46.54;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2013.10.14.00.00.14;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2011.07.09.00.42.49;	author drahn;	state Exp;
branches;
next	1.10;

1.10
date	2011.07.08.21.39.32;	author drahn;	state Exp;
branches;
next	1.9;

1.9
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.8;

1.8
date	2011.04.15.03.11.22;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2011.03.14.19.07.46;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2009.04.17.03.58.55;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2008.12.02.03.20.58;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2008.12.02.01.01.08;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.17.00.28.21;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.13.17.34.40;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.31.00.14.07;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.13
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@#	$OpenBSD: Makefile,v 1.12 2013/10/14 00:00:14 guenther Exp $

REV=	${OSrev}

TOP=		${.CURDIR}/..

BSD_RD=		bsd.rd
IMAGE=		mr.fs
CBIN?=		instbin
CRUNCHCONF?=	${CBIN}.conf
CRUNCHCONFS?=	${.CURDIR}/../common/crunch.conf
LISTS=		${.CURDIR}/list
UTILS?=		${.CURDIR}/../../miniroot

MOUNT_POINT=	/mnt
MTREE=		${UTILS}/mtree.conf

VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$


DISKTYPE=       rdroot2.5M
NBLKS=		5120
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -m 0 -o space -i 4096

.ifndef DESTDIR
all ${IMAGE}:
	@@echo setenv DESTDIR before making a ramdisk!
	@@false
.else

# mix config is not needed.
all:	${BSD_RD}

${BSD_RD}: ${CBIN} ${IMAGE} bsd rdsetroot
	cp bsd ${BSD_RD}
	${.OBJDIR}/rdsetroot ${BSD_RD} ${IMAGE}

${IMAGE}: rd_setup do_files rd_teardown

.endif

bsd:
	cd ${TOP}/../../sys/arch/zaurus/conf && config RAMDISK
	cd ${TOP}/../../sys/arch/zaurus/compile/RAMDISK && \
	    ${MAKE} clean && exec ${MAKE}
	cp ${TOP}/../../sys/arch/zaurus/compile/RAMDISK/bsd bsd

rd_setup:
	dd if=/dev/zero of=${IMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${IMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}

rdsetroot:	${TOP}/../common/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o rdsetroot \
	    ${TOP}/../common/elfrdsetroot.c ${TOP}/../common/elf32.c \
	    ${TOP}/../common/elf64.c

unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}

.PRECIOUS:	${IMAGE}

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -E -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${.ALLSRC}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all

${CRUNCHCONF}: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

do_files:
	cat ${MTREE} | mtree -de -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
	    lib*.a lib*.olist ${CBIN}.map \
	    *.o *.lo *.c bsd ${BSD_RD} rdsetroot
	rm -f instbin.conf
	rm -rf cd-dir

.ifdef RELEASEDIR
install:
	cp ${BSD_RD} ${RELEASEDIR}
.endif	# RELEASEDIR

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.12
log
@Turn on the distrib lib bits in crunchgen by setting SRCLIBDIR.
Add the new files to the clean target's rm list.

"why not get it tested?" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2011/07/09 00:42:49 drahn Exp $
d94 1
a94 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
@


1.11
log
@Unbreak most archs for the last commit. cut and paste changed rdsetroot
to elfrdsetroot. Does not yet fix sparc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2011/07/08 21:39:32 drahn Exp $
d81 1
a81 1
	${MAKE} -f ${CBIN}.mk all
d95 1
@


1.10
log
@Allow the elf rdsetroot operation to function on 32 bit and 64 bit binaries.
Enables developers to build arm ramdisk kernels on amd64 archs
OK deraadt@@ 'looked fine' miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2011/04/18 16:52:10 thib Exp $
d67 1
a67 1
	${HOSTCC} ${HOSTCFLAGS} -o elfrdsetroot \
@


1.9
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2011/04/15 03:11:22 deraadt Exp $
d67 3
a69 1
	${HOSTCC} -o rdsetroot ${TOP}/../common/elfrdsetroot.c
@


1.8
log
@No need to make depend kernels; ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2011/03/14 19:07:46 deraadt Exp $
d18 1
a18 1
VND?=		svnd0
@


1.7
log
@unify a chunk
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2009/04/17 03:58:55 deraadt Exp $
d50 1
a50 1
	    ${MAKE} clean && ${MAKE} depend && ${MAKE}
@


1.6
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2008/12/02 03:20:58 deraadt Exp $
d93 1
a93 2
	*.o *.lo *.c bsd ${BSD_RD} \
	rdsetroot
@


1.5
log
@commit with rdsetroot now accepting the filesystem as a 2nd arg
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2008/12/02 01:01:08 deraadt Exp $
a74 3
install:
	cp ${BSD_RD} ${DESTDIR}/snapshot/

d88 1
a88 1
	    sh ${TOP}/../miniroot/runlist.sh ${LISTS}
d98 4
a101 2
beforeinstall:
	cp ${BSD.RD} ${DESTDIR}/snapshot
@


1.4
log
@no longer need to compile rdsetroot with DEBUG
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2007/06/17 00:28:21 deraadt Exp $
d41 1
a41 1
	${.OBJDIR}/rdsetroot ${BSD_RD} < ${IMAGE}
@


1.3
log
@Stop using disklabel -r.  The disklabel code does not know all the semantics
for pushing disklabels onto the disk (and besides that, it is buggy and
unreadable crap); thanks for help from krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2007/04/13 17:34:40 millert Exp $
d67 1
a67 1
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/../common/elfrdsetroot.c
@


1.2
log
@Update install media generation to the new semantics of the -c flag.
Also replace "newfs -O" with "newfs -O 0" now that -O takes an option.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2004/12/31 00:14:07 drahn Exp $
a25 1
#NBLKS=		8192
d56 1
a56 1
	disklabel -w -r ${VND} ${DISKTYPE}
@


1.1
log
@Ramdisk bits for zaurus
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2004/02/09 02:27:25 drahn Exp $
d29 1
a29 1
NEWFSARGS= -m 0 -o space -c 16 -i 4096
@

