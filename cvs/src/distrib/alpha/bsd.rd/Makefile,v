head	1.23;
access;
symbols
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.21.0.12
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.8
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.10
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.4
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.2
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.19.0.10
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.8
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.6
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.4
	OPENBSD_5_0:1.19.0.2
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.15.0.6
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.4
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.13.0.2
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.12.0.2
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.8.0.2
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.7.0.18
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.16
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.14
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.12
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.10
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.8
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.6
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2;
locks; strict;
comment	@# @;


1.23
date	2017.01.27.17.59.09;	author natano;	state Exp;
branches;
next	1.22;
commitid	lZEWyMpUcwYh27Y5;

1.22
date	2016.10.14.18.44.19;	author deraadt;	state Exp;
branches;
next	1.21;
commitid	SCMr9f2ZDRZiobIN;

1.21
date	2013.10.20.08.27.17;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2013.10.18.14.04.03;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2011.07.08.21.39.32;	author drahn;	state Exp;
branches;
next	1.18;

1.18
date	2011.04.18.16.52.09;	author thib;	state Exp;
branches;
next	1.17;

1.17
date	2011.04.15.03.11.22;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2010.10.18.04.07.49;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2009.04.12.16.12.53;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2008.12.02.03.20.57;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2008.01.11.10.16.40;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.17.00.28.20;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2007.04.13.17.34.39;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2007.04.09.14.55.11;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2007.02.16.16.56.22;	author tsi;	state Exp;
branches;
next	1.7;

1.7
date	2002.06.09.05.53.53;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.30.03.47.03;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.25.22.10.27;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.25.22.00.07;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.18.17.35.00;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.04.21.06.14;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.29.21.25.46;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Switch alpha, luna88k and sparc64 ramdisks to makefs.
ok deraadt
@
text
@#	$OpenBSD: Makefile,v 1.22 2016/10/14 18:44:19 deraadt Exp $

TOP=		${.CURDIR}/..

.include "${TOP}/Makefile.inc"
IMAGE=		ramdisk${REV}.fs

STRIP?=		strip
GZIPCMD?=	gzip
GZIPFLAGS?=	-9fn

RAMDISK=	RAMDISKBIG

.include "${TOP}/inst-common/Makefile.inc"

LISTS+=		${.CURDIR}/list.local

all: bsd.rd

DISKTYPE=	rdroot
MAKEFSARGS_RD=	-o disklabel=${DISKTYPE},minfree=0,density=8192

bsd.rd:	bsd.rd_unz
	objcopy -Sg -R .comment bsd.rd_unz bsd.strip
	${STRIP} bsd.strip
	${GZIPCMD} -c ${GZIPFLAGS} bsd.strip > bsd.rd

bsd.rd_unz: bsd ${IMAGE} rdsetroot
	cp bsd bsd.rd_unz
	${.OBJDIR}/rdsetroot bsd.rd_unz ${IMAGE}

bsd:
	cd ${.CURDIR}/../../../sys/arch/alpha/compile/${RAMDISK} && \
	    su ${BUILDUSER} -c '${MAKE} config && ${MAKE} clean && env COPTS=-Os ${MAKE}'
	cp -p ${.CURDIR}/../../../sys/arch/alpha/compile/${RAMDISK}/obj/bsd bsd

${IMAGE}: ${CBIN}
	rm -rf $@@.d
	install -d -o root -g wheel $@@.d
	mtree -def ${MTREE} -p $@@.d -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} REV=${REV} \
	    TARGDIR=$@@.d UTILS=${UTILS} RELEASEDIR=${RELEASEDIR} \
	    sh ${UTILS}/runlist.sh ${LISTS}
	rm $@@.d/${CBIN}
	makefs ${MAKEFSARGS_RD} $@@ $@@.d

rdsetroot: ${TOP}/../common/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o rdsetroot \
	    ${TOP}/../common/elfrdsetroot.c ${TOP}/../common/elf32.c \
	    ${TOP}/../common/elf64.c

.ifdef RELEASEDIR
beforeinstall:
	cp bsd.rd ${RELEASEDIR}
.endif
@


1.22
log
@Use new kernel compile method for ramdisks, de-escalating to $BUILDUSER
as required.
much help from natano and tb.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2013/10/20 08:27:17 miod Exp $
a7 9
MOUNT_POINT=	/mnt

VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$
REALIMAGE!=	echo /var/tmp/image.${PID}

a10 1
INSTALLBOOT?=	/usr/mdec/installboot -v
a12 2
BOOT?=		/usr/mdec/boot
BOOTXX?=	/usr/mdec/bootxx
d18 1
a18 1
all: ${CBIN} bsd.rd
d20 2
a21 7
DISKTYPE=       rdroot
NBLKS=          5744

# old format, minfree, opt, b/i  trks, sects, cpg
NEWFSARGS=	-t ffs -m 0 -o space
NEWFSARGS_RD=	-i 8192
NEWFSARGS_FD=	-i 524288 -c ${FLOPPYBLKS}
d37 9
a45 2
${IMAGE}:	do_prep do_mount do_files do_umount
	mv -f ${REALIMAGE} ${IMAGE}
a50 20

do_prep:
	dd if=/dev/zero of=${REALIMAGE} count=${NBLKS}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	
do_mount:
	newfs ${NEWFSARGS} ${NEWFSARGS_RD} -s ${NBLKS} ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

do_umount:
	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	umount ${MOUNT_POINT}
	vnconfig -u ${VND}

unconfig:
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}
@


1.21
log
@Fix release after rdsetroot shuffle.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2013/10/18 14:04:03 deraadt Exp $
a49 1
	cd ${.CURDIR}/../../../sys/arch/alpha/conf && config ${RAMDISK}
d51 2
a52 2
	    ${MAKE} clean && COPTS=-Os exec ${MAKE}
	cp ${.CURDIR}/../../../sys/arch/alpha/compile/${RAMDISK}/bsd bsd
@


1.20
log
@cleanup elfrdsetroot references; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2011/07/08 21:39:32 drahn Exp $
d58 1
a58 1
elfrdsetroot: ${TOP}/../common/elfrdsetroot.c
@


1.19
log
@Allow the elf rdsetroot operation to function on 32 bit and 64 bit binaries.
Enables developers to build arm ramdisk kernels on amd64 archs
OK deraadt@@ 'looked fine' miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2011/04/18 16:52:09 thib Exp $
a25 2
RDSETROOT=	elfrdsetroot

d45 1
a45 1
bsd.rd_unz: bsd ${IMAGE} ${RDSETROOT}
d47 1
a47 1
	${.OBJDIR}/${RDSETROOT} bsd.rd_unz ${IMAGE}
d59 1
a59 1
	${HOSTCC} ${HOSTCFLAGS} -o elfrdsetroot \
@


1.18
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2011/04/15 03:11:22 deraadt Exp $
d61 3
a63 1
	${HOSTCC} ${HOSTCFLAGS} -o elfrdsetroot ${TOP}/../common/elfrdsetroot.c
@


1.17
log
@No need to make depend kernels; ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2010/10/18 04:07:49 deraadt Exp $
d10 1
a10 1
VND?=		svnd0
@


1.16
log
@Place a smaller spwd.db onto the install media.  Be consistant with the naming
of the "additional" list files (for architectures which split the list)
Then... cleanup some TZ which it is clear should not have been placed onto
certain media which don't have the space for them.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2009/04/17 03:58:54 deraadt Exp $
d54 1
a54 1
	    ${MAKE} clean && ${MAKE} depend && COPTS=-Os ${MAKE}
@


1.15
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2009/04/12 16:12:53 deraadt Exp $
d30 1
a30 1
LISTS+=		${.CURDIR}/list
@


1.14
log
@run make depend for kernel, too; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2008/12/02 03:20:57 deraadt Exp $
d83 1
d85 2
a86 1
	cp bsd.rd ${DESTDIR}/snapshot
@


1.13
log
@commit with rdsetroot now accepting the filesystem as a 2nd arg
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2008/01/11 10:16:40 espie Exp $
d54 1
a54 1
	    ${MAKE} depend && ${MAKE} clean && COPTS=-Os ${MAKE}
@


1.12
log
@cleanup: make -> ${MAKE} consistenly.
zap extra subshells.

okay miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2007/06/17 00:28:20 deraadt Exp $
d49 1
a49 1
	${.OBJDIR}/${RDSETROOT} bsd.rd_unz < ${IMAGE}
@


1.11
log
@Stop using disklabel -r.  The disklabel code does not know all the semantics
for pushing disklabels onto the disk (and besides that, it is buggy and
unreadable crap); thanks for help from krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2007/04/13 17:34:39 millert Exp $
d54 1
a54 1
	    make depend && make clean && COPTS=-Os make
@


1.10
log
@Update install media generation to the new semantics of the -c flag.
Also replace "newfs -O" with "newfs -O 0" now that -O takes an option.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2007/04/09 14:55:11 millert Exp $
d66 1
a66 1
	disklabel -w -r ${VND} ${DISKTYPE}
@


1.9
log
@Add -n to gzip flags.  Save a few bytes since we no longer save
the uncompressed filename in the gzip header.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2007/02/16 16:56:22 tsi Exp $
d39 2
a40 2
NEWFSARGS_RD=	-i 8192 -c 80
NEWFSARGS_FD=	-i 524288 -c 80
@


1.8
log
@s/GZIP/GZIPCMD/g in `make release` structure to avoid conflict with gzip's
use of a GZIP environment variable for extra command flags.

ok deraadt@@, millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2002/06/09 05:53:53 todd Exp $
d19 1
a19 1
GZIPFLAGS?=	-9f
@


1.7
log
@knf
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2002/04/30 03:47:03 deraadt Exp $
d18 1
a18 1
GZIP?=		gzip
d45 1
a45 1
	${GZIP} -c ${GZIPFLAGS} bsd.strip > bsd.rd
@


1.6
log
@use makeconf.awk, and also simplify list management
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2002/04/25 22:10:27 deraadt Exp $
d71 1
a71 1
 
@


1.5
log
@runlist.sh & list2sh.awk unification
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2002/04/25 22:00:07 deraadt Exp $
a6 1
CRUNCHCONF?=    ${TOP}/common/${CBIN}.conf
d29 2
@


1.4
log
@no longer needed
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2001/09/18 17:35:00 jason Exp $
a31 1
	@@echo "all done"
@


1.3
log
@remove elfrdsetroot from here and use the one in distrib/common
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2001/02/04 21:06:14 deraadt Exp $
a58 3

ecoffrdsetroot:	${TOP}/ecoffrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o ecoffrdsetroot ${TOP}/ecoffrdsetroot.c
@


1.2
log
@find ramdisk.conf in the right place
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2001/01/29 21:25:46 deraadt Exp $
d63 2
a64 2
elfrdsetroot: ${TOP}/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o elfrdsetroot ${TOP}/elfrdsetroot.c
@


1.1
log
@three floppies, and a bsd.rd for the CD
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2001/01/23 20:54:40 art Exp $
d7 1
a7 1
CRUNCHCONF?=    ${TOP}/ramdisk/${CBIN}.conf
@

