head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.4
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.11.0.10
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.4
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.6
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.2
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.18
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.16
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.14
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.12
	OPENBSD_5_0:1.9.0.10
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.8
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.6
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.8.0.6
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.4
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.7.0.12
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.10
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.8
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.6
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.6.0.10
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.2.0.16
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.14
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@# @;


1.13
date	2017.01.27.17.59.09;	author natano;	state Exp;
branches;
next	1.12;
commitid	lZEWyMpUcwYh27Y5;

1.12
date	2015.09.19.10.44.01;	author miod;	state Exp;
branches;
next	1.11;
commitid	oUI7WK7MWltPnzze;

1.11
date	2013.10.15.22.46.48;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2013.10.14.00.00.07;	author guenther;	state Exp;
branches;
next	1.9;

1.9
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2008.01.11.10.16.40;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.05.21.22.37;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.30.03.47.03;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.28.18.28.33;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.25.22.10.27;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.08.14.32.31;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.05.10.23.09.32;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.05.07.12.46.51;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Switch alpha, luna88k and sparc64 ramdisks to makefs.
ok deraadt
@
text
@#
#	$OpenBSD: Makefile.inc,v 1.12 2015/09/19 10:44:01 miod Exp $
#

# TOP is assumed to be defined by Makefile including this one.

CBIN?=		instbin
UTILS=		${TOP}/../miniroot

LISTS?=		${.CURDIR}/../common/list
CRUNCHCONF?=	${CBIN}.conf
MTREE=		${UTILS}/mtree.conf
STRIP=		strip

${CRUNCHCONF}: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -E -D ${BSDSRCDIR} -L ${DESTDIR}/usr/lib ${CRUNCHCONF}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all
	${STRIP} -R .eh_frame ${CBIN}

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
	    *.o *.lo *.c \
	    lib*.a lib*.olist ${CBIN}.map ${CLEANFILES}
	/bin/rm -rf ${IMAGE}.d

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.12
log
@Add the kernel in its various setup stages (bsd, bsd.gz, bsd.strip...) to
CLEANFILES and make sure the `clean' target actually removes CLEANFILES.
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.11 2013/10/15 22:46:48 deraadt Exp $
a7 1
COMMONDIR=	${TOP}/inst-common
a9 2
MOUNT_POINT?=	${TOP}/${BASE}/fs

a24 7
do_files:
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS}\
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

d29 1
@


1.11
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.10 2013/10/14 00:00:07 guenther Exp $
d38 1
a38 1
	    lib*.a lib*.olist ${CBIN}.map
@


1.10
log
@Turn on the distrib lib bits in crunchgen by setting SRCLIBDIR.
Add the new files to the clean target's rm list.

"why not get it tested?" deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.9 2009/04/17 03:58:54 deraadt Exp $
d36 1
a36 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
@


1.9
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.8 2008/01/11 10:16:40 espie Exp $
d25 1
a25 1
	${MAKE} -f ${CBIN}.mk all
d36 3
a38 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache *.o *.lo *.c
@


1.8
log
@cleanup: make -> ${MAKE} consistenly.
zap extra subshells.

okay miod@@
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.7 2004/11/05 21:22:37 miod Exp $
d32 1
a32 1
	    sh ${UTILS}/runlist.sh ${LISTS}
@


1.7
log
@Binutils 2.15 require more aggressive stripping for installation media binaries,
if we want to still fit on floppies (binaries carry one extra section now,
which we don't need on installation media).
ok deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.6 2002/04/30 03:47:03 deraadt Exp $
d25 1
a25 1
	make -f ${CBIN}.mk all
@


1.6
log
@use makeconf.awk, and also simplify list management
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.5 2002/04/28 18:28:33 deraadt Exp $
d16 1
d26 1
@


1.5
log
@use single shared mtree.conf
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.4 2002/04/25 22:10:27 deraadt Exp $
d7 1
a7 1
CBIN?=		raminst
d13 2
a14 2
LISTS=		${COMMONDIR}/list ${.CURDIR}/list ${.CURDIR}/../common/list
CRUNCHCONF?=	${COMMONDIR}/${CBIN}.conf
d17 3
d31 1
@


1.4
log
@runlist.sh & list2sh.awk unification
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.3 2001/02/08 14:32:31 deraadt Exp $
d15 1
a15 1
MTREE=		${COMMONDIR}/mtree.conf
@


1.3
log
@get the common list too
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.2 1997/05/10 23:09:32 millert Exp $
d9 1
d26 2
a27 1
	    REV=${REV} TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh ${LISTS}
@


1.2
log
@Set $REV when running runlist.sh
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.1 1997/05/07 12:46:51 niklas Exp $
d12 1
a12 1
LISTS=		${COMMONDIR}/list ${.CURDIR}/list
@


1.1
log
@*Very* rough cut at a ramdisk-kernel that fits onto a floppy.
The ecoffrdsetroot support is from millert@@openbsd.org.  Mostly copied from
the powerpc ports, thus a lot of powerpc specific stuff remains.
Needs a lot of work, hopefully done in the next few days.
@
text
@d2 1
a2 1
#	$OpenBSD: Makefile.inc,v 1.1 1995/07/18 04:13:14 briggs Exp $
d25 1
a25 1
	    TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh ${LISTS}
@
