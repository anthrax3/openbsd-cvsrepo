head	1.29;
access;
symbols
	OPENBSD_6_1:1.29.0.4
	OPENBSD_6_1_BASE:1.29
	OPENBSD_6_0:1.27.0.4
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.26.0.8
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.26.0.4
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.25.0.2
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.24.0.10
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.24.0.8
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.24.0.6
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.4
	OPENBSD_5_0:1.24.0.2
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.21.0.8
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.21.0.6
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.21.0.2
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.21.0.4
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.20.0.2
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.19.0.2
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.13.0.2
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.8.0.12
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.10
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.8
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3;
locks; strict;
comment	@# @;


1.29
date	2017.01.27.17.59.09;	author natano;	state Exp;
branches;
next	1.28;
commitid	lZEWyMpUcwYh27Y5;

1.28
date	2016.10.14.18.44.19;	author deraadt;	state Exp;
branches;
next	1.27;
commitid	SCMr9f2ZDRZiobIN;

1.27
date	2015.09.19.10.44.01;	author miod;	state Exp;
branches;
next	1.26;
commitid	oUI7WK7MWltPnzze;

1.26
date	2014.07.16.19.59.29;	author okan;	state Exp;
branches;
next	1.25;
commitid	suH8rMVwm4smgFkW;

1.25
date	2013.10.18.14.04.04;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2011.07.08.21.39.32;	author drahn;	state Exp;
branches;
next	1.23;

1.23
date	2011.04.18.16.52.09;	author thib;	state Exp;
branches;
next	1.22;

1.22
date	2011.04.15.03.11.22;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2008.12.02.03.20.57;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2008.01.11.10.16.40;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2007.06.17.00.28.21;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2007.04.16.03.04.05;	author drahn;	state Exp;
branches;
next	1.16;

1.16
date	2007.04.13.17.34.40;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2007.04.09.14.55.11;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2007.03.20.20.28.36;	author pedro;	state Exp;
branches;
next	1.13;

1.13
date	2007.02.16.16.56.22;	author tsi;	state Exp;
branches;
next	1.12;

1.12
date	2005.08.29.03.28.51;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2005.08.27.06.40.51;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2005.08.26.18.38.12;	author henning;	state Exp;
branches;
next	1.9;

1.9
date	2005.06.01.18.53.27;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.09.05.53.53;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	2002.04.30.03.47.03;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.25.22.10.27;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.25.22.00.07;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.18.17.35.00;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.08.14.07.02;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.04.21.06.14;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.29.21.25.46;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Switch alpha, luna88k and sparc64 ramdisks to makefs.
ok deraadt
@
text
@#	$OpenBSD: Makefile.inc,v 1.28 2016/10/14 18:44:19 deraadt Exp $

TOP=		${.CURDIR}/..

.include "${TOP}/Makefile.inc"
IMAGE=		ramdisk${REV}.fs

MOUNT_POINT=	/mnt

VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$
REALIMAGE!=	echo /var/tmp/image.${PID}

STRIP?=		strip
GZIPCMD?=	gzip
GZIPFLAGS?=	-9fn
INSTALLBOOT?=	/usr/mdec/installboot -v

XNAME?=		floppy
FLOPPY?=	${XNAME}${REV}.fs
FLOPPYBLKS?=	2880
FLOPPYTYPE?=	floppy
BOOT?=		/usr/mdec/boot
BOOTXX?=	/usr/mdec/bootxx

.include "${TOP}/inst-common/Makefile.inc"

all: ${FLOPPY}

DISKTYPE=	rdroot
MAKEFSARGS_RD=	-o disklabel=${DISKTYPE},minfree=0,density=8192

# old format, minfree, opt, b/i  trks, sects, cpg
NEWFSARGS=	-t ffs -m 0 -o space
NEWFSARGS_FD=	-i 524288 -c ${FLOPPYBLKS}

CLEANFILES+=	bsd bsd.rd bsd.gz ${FLOPPY}

${FLOPPY}:	bsd.gz
	dd if=/dev/zero of=${REALIMAGE} count=${FLOPPYBLKS}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${FLOPPYTYPE}
	newfs ${NEWFSARGS} ${NEWFSARGS_FD} -s ${FLOPPYBLKS} ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}
	dd if=${DESTDIR}/${BOOT} of=${MOUNT_POINT}/boot bs=512
	dd if=bsd.gz of=${MOUNT_POINT}/bsd bs=512
	${INSTALLBOOT} ${MOUNT_POINT}/boot ${BOOTXX} ${VND_CRDEV}
	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	@@cmp ${DESTDIR}/${BOOT} ${MOUNT_POINT}/boot || echo "Warning! /boot corrupted!!!"
	@@cmp bsd.gz ${MOUNT_POINT}/bsd || echo "Warning! /bsd corrupted!!!"
	umount ${MOUNT_POINT}
	vnconfig -u ${VND}
	if test `env BLOCKSIZE=512 du -s ${REALIMAGE} | cut -f1` -eq ${FLOPPYBLKS}; then \
	    mv ${REALIMAGE} ${FLOPPY} ; \
	else \
	    dd if=${REALIMAGE} of=${FLOPPY} count=${FLOPPYBLKS} ; \
	    rm -f ${REALIMAGE} ; \
	fi

bsd.gz:	bsd.rd
	objcopy -Sg -R .comment bsd.rd bsd.strip
	${STRIP} bsd.strip
	${GZIPCMD} -c ${GZIPFLAGS} bsd.strip > bsd.gz

bsd.rd: bsd ${IMAGE} rdsetroot
	cp bsd bsd.rd
	${.OBJDIR}/rdsetroot bsd.rd ${IMAGE}

bsd:
	cd ${.CURDIR}/../../../sys/arch/alpha/compile/${RAMDISK} && \
	    su ${BUILDUSER} -c '${MAKE} config && ${MAKE} clean && env COPTS=-Os ${MAKE}'
	cp -p ${.CURDIR}/../../../sys/arch/alpha/compile/${RAMDISK}/obj/bsd bsd

${IMAGE}: ${CBIN}
	rm -rf $@@.d
	install -d -o root -g wheel $@@.d
	mtree -def ${MTREE} -p $@@.d -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} REV=${REV} \
	    TARGDIR=$@@.d UTILS=${UTILS} RELEASEDIR=${RELEASEDIR} \
	    sh ${UTILS}/runlist.sh ${LISTS}
	rm $@@.d/${CBIN}
	makefs ${MAKEFSARGS_RD} $@@ $@@.d

rdsetroot: ${TOP}/../common/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o rdsetroot \
	    ${TOP}/../common/elfrdsetroot.c ${TOP}/../common/elf32.c \
	    ${TOP}/../common/elf64.c

unconfig:
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}

.ifdef RELEASEDIR
beforeinstall:
	cp ${FLOPPY} ${RELEASEDIR}
.endif
@


1.28
log
@Use new kernel compile method for ramdisks, de-escalating to $BUILDUSER
as required.
much help from natano and tb.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.27 2015/09/19 10:44:01 miod Exp $
d31 1
a31 1
all: ${CBIN} ${FLOPPY}
d33 2
a34 2
DISKTYPE=       rdroot
NBLKS=          5744
a37 1
NEWFSARGS_RD=	-i 8192
d79 9
a87 2
${IMAGE}:	do_prep do_mount do_files do_umount
	mv -f ${REALIMAGE} ${IMAGE}
a92 16

do_prep:
	dd if=/dev/zero of=${REALIMAGE} count=${NBLKS}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	
do_mount:
	newfs ${NEWFSARGS} ${NEWFSARGS_RD} -s ${NBLKS} ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

do_umount:
	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	umount ${MOUNT_POINT}
	vnconfig -u ${VND}
@


1.27
log
@Add the kernel in its various setup stages (bsd, bsd.gz, bsd.strip...) to
CLEANFILES and make sure the `clean' target actually removes CLEANFILES.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.26 2014/07/16 19:59:29 okan Exp $
a75 1
	cd ${.CURDIR}/../../../sys/arch/alpha/conf && config ${RAMDISK}
d77 2
a78 2
	    ${MAKE} clean && COPTS=-Os exec ${MAKE}
	cp ${.CURDIR}/../../../sys/arch/alpha/compile/${RAMDISK}/bsd bsd
@


1.26
log
@zap trailing newlines; "go for it" deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.25 2013/10/18 14:04:04 deraadt Exp $
d40 2
@


1.25
log
@cleanup elfrdsetroot references; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.24 2011/07/08 21:39:32 drahn Exp $
a110 1

@


1.24
log
@Allow the elf rdsetroot operation to function on 32 bit and 64 bit binaries.
Enables developers to build arm ramdisk kernels on amd64 archs
OK deraadt@@ 'looked fine' miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.23 2011/04/18 16:52:09 thib Exp $
a28 2
RDSETROOT=	elfrdsetroot

d69 1
a69 1
bsd.rd: bsd ${IMAGE} ${RDSETROOT}
d71 1
a71 1
	${.OBJDIR}/${RDSETROOT} bsd.rd ${IMAGE}
d82 2
a83 2
elfrdsetroot: ${TOP}/../common/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o elfrdsetroot \
@


1.23
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.22 2011/04/15 03:11:22 deraadt Exp $
d85 3
a87 1
	${HOSTCC} ${HOSTCFLAGS} -o elfrdsetroot ${TOP}/../common/elfrdsetroot.c
@


1.22
log
@No need to make depend kernels; ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.21 2009/04/17 03:58:54 deraadt Exp $
d10 1
a10 1
VND?=		svnd0
@


1.21
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.20 2008/12/02 03:20:57 deraadt Exp $
d78 1
a78 1
	    ${MAKE} depend && ${MAKE} clean && COPTS=-Os ${MAKE}
@


1.20
log
@commit with rdsetroot now accepting the filesystem as a 2nd arg
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.19 2008/01/11 10:16:40 espie Exp $
d107 1
d109 3
a111 1
	cp ${FLOPPY} ${DESTDIR}/snapshot
@


1.19
log
@cleanup: make -> ${MAKE} consistenly.
zap extra subshells.

okay miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.18 2007/06/17 00:28:21 deraadt Exp $
d73 1
a73 1
	${.OBJDIR}/${RDSETROOT} bsd.rd < ${IMAGE}
@


1.18
log
@Stop using disklabel -r.  The disklabel code does not know all the semantics
for pushing disklabels onto the disk (and besides that, it is buggy and
unreadable crap); thanks for help from krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.17 2007/04/16 03:04:05 drahn Exp $
d78 1
a78 1
	    make depend && make clean && COPTS=-Os make
@


1.17
log
@Without the -c 80, further adjustment is needed to build ramdisks, ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.16 2007/04/13 17:34:40 millert Exp $
d46 1
a46 1
	disklabel -w -r ${VND} ${FLOPPYTYPE}
d90 1
a90 1
	disklabel -w -r ${VND} ${DISKTYPE}
@


1.16
log
@Update install media generation to the new semantics of the -c flag.
Also replace "newfs -O" with "newfs -O 0" now that -O takes an option.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.15 2007/04/09 14:55:11 millert Exp $
d40 1
a40 1
NEWFSARGS_RD=	-i 16384
@


1.15
log
@Add -n to gzip flags.  Save a few bytes since we no longer save
the uncompressed filename in the gzip header.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 2007/03/20 20:28:36 pedro Exp $
d40 2
a41 2
NEWFSARGS_RD=	-i 16384 -c 80
NEWFSARGS_FD=	-i 524288 -e 2000 -g 100000 -h 2 -a 10000
@


1.14
log
@Don't use newfs -d 0, it has been the default for over a decade now.
Okay deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 2007/02/16 16:56:22 tsi Exp $
d19 1
a19 1
GZIPFLAGS?=	-9f
@


1.13
log
@s/GZIP/GZIPCMD/g in `make release` structure to avoid conflict with gzip's
use of a GZIP environment variable for extra command flags.

ok deraadt@@, millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 2005/08/29 03:28:51 deraadt Exp $
d41 1
a41 1
NEWFSARGS_FD=	-i 524288 -d 0 -e 2000 -g 100000 -h 2 -a 10000
@


1.12
log
@in 1.9 i accidentally moved to a test floppy size
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 2005/08/27 06:40:51 deraadt Exp $
d18 1
a18 1
GZIP?=		gzip
d69 1
a69 1
	${GZIP} -c ${GZIPFLAGS} bsd.strip > bsd.gz
@


1.11
log
@backout unapproved diff
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2005/06/01 18:53:27 deraadt Exp $
d25 1
a25 1
FLOPPYTYPE?=	floppyx
@


1.10
log
@fix obvious accident introduced with r1.9, there is no disktype floppyx
fixes alpha mkr
@
text
@d25 1
a25 1
FLOPPYTYPE?=	floppy3
@


1.9
log
@use DESTDIR for bootblock, and dd it instead
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2002/06/09 05:53:53 todd Exp $
d25 1
a25 1
FLOPPYTYPE?=	floppyx
@


1.8
log
@knf
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2002/04/30 03:47:03 deraadt Exp $
d25 1
a25 1
FLOPPYTYPE?=	floppy3
d41 1
a41 1
NEWFSARGS_FD=	-i 524288 -c 80
d49 1
a49 1
	cp ${BOOT} ${MOUNT_POINT}
d55 1
a55 1
	@@cmp ${BOOT} ${MOUNT_POINT}/boot || echo "Warning! /boot corrupted!!!"
@


1.7
log
@use makeconf.awk, and also simplify list management
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 2002/04/25 22:10:27 deraadt Exp $
d95 1
a95 1
 
@


1.6
log
@runlist.sh & list2sh.awk unification
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 2002/04/25 22:00:07 deraadt Exp $
a6 1
CRUNCHCONF?=    ${TOP}/common/${CBIN}.conf
@


1.5
log
@no longer needed
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 2001/09/18 17:35:00 jason Exp $
a34 1
	@@echo "all done"
@


1.4
log
@remove elfrdsetroot from here and use the one in distrib/common
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 2001/02/08 14:07:02 art Exp $
a84 3

ecoffrdsetroot:	${TOP}/ecoffrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o ecoffrdsetroot ${TOP}/ecoffrdsetroot.c
@


1.3
log
@Squeeze a bit more to make it fit.
 o Reduce the number of inodes on the ramdisk image.
 o Use dd instead of cp ro copy the kernel onto the floppy.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 2001/02/04 21:06:14 deraadt Exp $
d89 2
a90 2
elfrdsetroot: ${TOP}/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o elfrdsetroot ${TOP}/elfrdsetroot.c
@


1.2
log
@find ramdisk.conf in the right place
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2001/01/29 21:25:46 deraadt Exp $
d42 1
a42 1
NEWFSARGS_RD=	-i 8192 -c 80
d52 1
a52 1
	cp bsd.gz ${MOUNT_POINT}/bsd
@


1.1
log
@three floppies, and a bsd.rd for the CD
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2001/01/23 20:54:40 art Exp $
d7 1
a7 1
CRUNCHCONF?=    ${TOP}/ramdisk/${CBIN}.conf
@

