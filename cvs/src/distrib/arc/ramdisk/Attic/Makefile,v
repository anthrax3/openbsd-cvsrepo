head	1.11;
access;
symbols
	OPENBSD_2_9:1.8.0.16
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.14
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.12
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.10
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.8
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.6
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6;
locks; strict;
comment	@# @;


1.11
date	2004.08.06.22.33.27;	author deraadt;	state dead;
branches;
next	1.10;

1.10
date	2004.08.06.22.30.02;	author pefo;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.23.07.03.45;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	97.09.26.02.20.41;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.09.05.21.16.46;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.05.24.14.21.00;	author pefo;	state Exp;
branches;
next	1.5;

1.5
date	97.05.24.10.25.13;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.05.19.10.33.19;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	97.05.18.13.40.50;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	97.05.14.21.25.14;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	97.05.14.20.52.44;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.11
log
@put ramdisk in right place
@
text
@#	$OpenBSD: Makefile,v 1.10 2004/08/06 22:30:02 pefo Exp $

REV=		${OSrev}

TOP=		${.CURDIR}/..

BSD_RD=		bsd.rd
IMAGE=		mr.fs
CBIN?=		instbin
CRUNCHCONF?=	${CBIN}.conf
CRUNCHCONFS?=	${.CURDIR}/../common/crunch.conf
LISTS=		${.CURDIR}/list
UTILS?=		${.CURDIR}/../../miniroot

MOUNT_POINT=	/mnt
MTREE=		${UTILS}/mtree.conf

VND?=		svnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$


DISKTYPE=       rdroot
NBLKS=          8192
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -m 0 -o space -c 16 -i 4096

.ifndef DESTDIR
all ${IMAGE}:
	@@echo setenv DESTDIR before makeing a ramdisk!
	@@false
.else

all:	${BSD_RD}

${BSD_RD}: ${CBIN} ${IMAGE} bsd rdsetroot
	cp bsd bsd.rd
	${.OBJDIR}/rdsetroot ${BSD_RD} < ${IMAGE}

${IMAGE}: rd_setup do_files rd_teardown

.endif

bsd:
	cd ${.TOP}/../../sys/arch/sgi/conf && config RAMDISK
	cd ${.TOP}/../../sys/arch/sgi/compile/RAMDISK && \
	    make clean && make
	cp ${.TOP}/../../sys/arch/sgi/compile/RAMDISK/bsd bsd

rd_setup: 
	dd if=/dev/zero of=${IMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${IMAGE}
	disklabel -w -r ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}

rdsetroot:	${TOP}/../common/rdsetroot.c
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/../common/elfrdsetroot.c

unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}

.PRECIOUS:	${IMAGE}

install:
	cp ${BSD_RD} ${DESTDIR}/snapshot/

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -E -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${.ALLSRC}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	make -f ${CBIN}.mk all

${CRUNCHCONF}: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

do_files:
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    sh ${TOP}/../miniroot/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
	*.o *.lo *.c bsd ${BSD_RD} rdsetroot

beforeinstall:
	cp ${BSD.RD} ${DESTDIR}/snapshot

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.10
log
@sgi install ramdisk
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1997/09/26 02:20:41 millert Exp $
@


1.9
log
@bye bye
@
text
@d3 1
a3 1
# NOTE! We don't do crunched yet!
a6 1
.include "${TOP}/Makefile.inc"
d10 2
d16 1
a16 1
MTREE=		${.CURDIR}/mtree.conf
a22 1
REALIMAGE!=	echo /var/tmp/image.${PID}
d39 2
a40 4
	cp bsd ${BSD_RD}.elf
	${.OBJDIR}/rdsetroot ${BSD_RD}.elf < ${IMAGE}
	elf2ecoff ${BSD_RD}.elf ${BSD_RD}
	rm ${IMAGE}
d47 2
a48 2
	cd ${.TOP}/../../sys/arch/arc/conf && config RAMDISK
	cd ${.TOP}/../../sys/arch/arc/compile/RAMDISK && \
d50 1
a50 1
	cp ${.TOP}/../../sys/arch/arc/compile/RAMDISK/bsd bsd
d53 2
a54 2
	dd if=/dev/zero of=${REALIMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${REALIMAGE}
a63 2
	cp ${REALIMAGE} ${IMAGE}
	rm ${REALIMAGE}
d65 2
a66 2
rdsetroot:	${TOP}/common/rdsetroot.c
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/common/rdsetroot.c
a70 1
	-/bin/rm -f ${IMAGE}
d75 1
a75 1
	cp ${BSD_RD} ${DESTDIR}/snapshot/${BSD_RD}
d77 2
a78 5
${CBIN}.conf: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CBIN}.conf
	crunchgen -E -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${CBIN}.conf
d83 3
d89 3
a91 1
	    REV=${REV} TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh ${LISTS}
d94 2
a95 2
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.conf ${CBIN}.mk ${CBIN}.cache \
	*.o *.lo *.c bsd ${BSD_RD} ${BSD_RD}.elf rdsetroot
@


1.8
log
@Don't specify disktype to newfs when we already have a label.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1997/09/05 21:16:46 deraadt Exp $
@


1.7
log
@make depend (in this case) is a total waste of time
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1997/05/24 14:21:00 pefo Exp $
d58 1
a58 1
	newfs ${NEWFSARGS} ${VND_RDEV} ${DISKTYPE}
@


1.6
log
@Ramdisk make update
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1997/05/24 10:25:13 deraadt Exp $
d51 1
a51 1
	    make clean && make depend && make
@


1.5
log
@svnd; make obj support
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/05/19 10:33:19 pefo Exp $
a10 1
CRUNCHCONF?=    ${.CURDIR}/${CBIN}.conf
d12 1
d82 5
a86 2
${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -E -D ${BSDSRCDIR} -L ${DESTDIR}/usr/lib ${CRUNCHCONF}
d97 2
a98 2
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache *.o *.lo *.c \
	    bsd ${BSD_RD} ${BSD_RD}.elf rdsetroot
@


1.4
log
@Change to crunched ramdisk
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1997/05/18 13:40:50 pefo Exp $
d17 1
a17 1
VND?=		vnd0
d22 1
a22 1
REALIMAGE!=	echo /tmp/image.${PID}
a62 3
	sync
	cat /*bin/* > /dev/null
	sync
d101 1
@


1.3
log
@ARC ramdisk install
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1997/05/14 21:25:14 niklas Exp $
d26 1
a26 1
NBLKS=          20000
d38 1
a38 1
${BSD_RD}: ${IMAGE} bsd rdsetroot
d86 1
a86 1
	crunchgen -D ${BSDSRCDIR} -L ${DESTDIR}/usr/lib ${CRUNCHCONF}
d93 1
a93 1
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${DESTDIR} \
@


1.2
log
@Use svnd, no need for cache flushing
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 1997/05/14 20:52:44 pefo Exp $
d8 1
d17 1
a17 1
VND?=		svnd0
a23 2
all:	bsd.rd

d30 17
a46 3
bsd.rd:	${IMAGE} bsd rdsetroot
	cp bsd bsd.rd
	${.OBJDIR}/rdsetroot bsd.rd < ${IMAGE}
d49 2
a50 2
	cd ${.CURDIR}/../../../../sys/arch/arc/conf && config RAMDISK
	cd ${.CURDIR}/../../../../sys/arch/arc/compile/RAMDISK && \
d52 1
a52 3
	cp ${.CURDIR}/../../../../sys/arch/arc/compile/RAMDISK/bsd bsd

${IMAGE}: rd_setup do_files rd_teardown
d63 3
d83 1
a83 1
	cp ${FS} ${DESTDIR}/snapshot/${FS}
d98 4
a101 1
	    bsd bsd.rd bsd.gz floppy*.fs rdsetroot
@


1.1
log
@ARC ramdisk cruncher.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 1997/05/10 02:13:13 tholo Exp $
d16 1
a16 1
VND?=		vnd0
a52 3
	sync
	cat /*bin/* > /dev/null
	sync
@
