head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.4
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.16.0.4
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.14.0.2
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.4
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7;
locks; strict;
comment	@# @;


1.17
date	2017.09.01.04.40.40;	author jsg;	state Exp;
branches;
next	1.16;
commitid	JSdY5ndU7KiCVAp0;

1.16
date	2016.11.30.15.46.45;	author natano;	state Exp;
branches;
next	1.15;
commitid	LWJ8qwxBylyYGvab;

1.15
date	2016.10.14.18.44.19;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	SCMr9f2ZDRZiobIN;

1.14
date	2016.06.05.15.12.56;	author jsg;	state Exp;
branches;
next	1.13;
commitid	3YZ8NfL3NQNAiDwB;

1.13
date	2016.05.29.07.38.01;	author jsg;	state Exp;
branches;
next	1.12;
commitid	Mj7jvvVOUly1nRny;

1.12
date	2016.05.21.07.19.24;	author jsg;	state Exp;
branches;
next	1.11;
commitid	OWPFNuoqUE520FJ7;

1.11
date	2015.07.17.17.02.52;	author jsg;	state Exp;
branches;
next	1.10;
commitid	ukNk3r6GTKJ57Fd6;

1.10
date	2015.06.29.04.52.34;	author jsg;	state Exp;
branches;
next	1.9;
commitid	07H0kGMQZhgLy4Z6;

1.9
date	2015.05.20.01.44.20;	author jsg;	state Exp;
branches;
next	1.8;
commitid	AyYz7FgJK6jKwvRv;

1.8
date	2015.05.19.00.05.59;	author jsg;	state Exp;
branches;
next	1.7;
commitid	bo8vCG1OOftVcP5V;

1.7
date	2013.11.01.20.35.52;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2013.10.28.14.10.41;	author patrick;	state Exp;
branches;
next	1.5;

1.5
date	2013.10.15.22.46.49;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2013.10.14.00.00.08;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2013.09.08.11.23.54;	author patrick;	state Exp;
branches;
next	1.2;

1.2
date	2013.09.07.23.04.44;	author patrick;	state Exp;
branches;
next	1.1;

1.1
date	2013.09.04.20.00.22;	author patrick;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Remove the miniroot for the OMAP3 BeagleBoards.  Ethernet is on USB and
USB isn't supported.  The installer turns out to have been broken on
BeagleBoard for over a year and no one noticed.  The existing support
for OMAP3 in the kernel remains though it isn't clear if anyone has
tried it after the fdt changes went in.

ok patrick@@ tom@@ kettenis@@ matthieu@@
@
text
@#	$OpenBSD: Makefile,v 1.16 2016/11/30 15:46:45 natano Exp $

REV=	${OSrev}

TOP=		${.CURDIR}/..

BSD_RD=		bsd.rd
IMAGE=		mr.fs
CBIN?=		instbin
CRUNCHCONF?=	${CBIN}.conf
CRUNCHCONFS?=	${.CURDIR}/../common/crunch.conf
LISTS=		${.CURDIR}/list
UTILS?=		${.CURDIR}/../../miniroot

MTREE=		${UTILS}/mtree.conf

DISKTYPE=	rdroot
MAKEFSARGS_RD=	-o disklabel=${DISKTYPE},minfree=0,density=4096

DIRS=\
	am335x \
	cubie \
	cubox \
	nitrogen \
	panda \
	wandboard

.ifndef DESTDIR
all ${IMAGE}:
	@@echo setenv DESTDIR before making a ramdisk!
	@@false
.else

ALLBSD=		bsd
ALLBSDRD=	${BSD_RD}
all:	${ALLBSDRD}

bsd:
	cd ${TOP}/../../sys/arch/armv7/compile/RAMDISK && \
	    su ${BUILDUSER} -c '${MAKE} config && ${MAKE} clean && exec ${MAKE}'
	cp -p ${TOP}/../../sys/arch/armv7/compile/RAMDISK/obj/bsd bsd

${BSD_RD}: ${IMAGE} bsd rdsetroot
	cp bsd ${BSD_RD}
	${.OBJDIR}/rdsetroot ${BSD_RD} ${IMAGE}

${IMAGE}: ${CBIN}
	rm -rf $@@.d
	install -d -o root -g wheel $@@.d
.for DIR in ${DIRS}
	mkdir -p $@@.d/usr/mdec/${DIR}
.endfor
	mtree -def ${MTREE} -p $@@.d -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} REV=${REV} \
	    TARGDIR=$@@.d UTILS=${UTILS} RELEASEDIR=${RELEASEDIR} \
	    sh ${UTILS}/runlist.sh ${LISTS}
	rm $@@.d/${CBIN}
	makefs ${MAKEFSARGS_RD} $@@ $@@.d

.endif

rdsetroot:	${TOP}/../common/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o rdsetroot \
	    ${TOP}/../common/elfrdsetroot.c ${TOP}/../common/elf32.c \
	    ${TOP}/../common/elf64.c

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -E -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${.ALLSRC}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all

${CRUNCHCONF}: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
	    lib*.a lib*.olist ${CBIN}.map \
	    *.o *.lo *.c ${ALLBSD} ${ALLBSDRD} rdsetroot
	rm -f instbin.conf
	rm -rf cd-dir ${IMAGE}.d

.ifdef RELEASEDIR
install:
	cp ${ALLBSDRD} ${RELEASEDIR}
.endif	# RELEASEDIR

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.16
log
@Use makefs to build bsd.rd on armv7 and macppc.
ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2016/10/14 18:44:19 deraadt Exp $
a21 1
	beagle \
@


1.15
log
@Use new kernel compile method for ramdisks, de-escalating to $BUILDUSER
as required.
much help from natano and tb.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2016/06/05 15:12:56 jsg Exp $
a14 1
MOUNT_POINT=	/mnt
d17 2
a18 10
VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$

DISKTYPE=       rdroot
NBLKS=		15360
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -m 0 -o space -i 4096
d44 1
a44 1
${BSD_RD}: ${CBIN} ${IMAGE} bsd rdsetroot
d48 12
a59 1
${IMAGE}: rd_setup do_files rd_teardown
a62 13
rd_setup:
	dd if=/dev/zero of=${IMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${IMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}

a67 6
unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}

.PRECIOUS:	${IMAGE}

a76 10
do_files:
.for DIR in ${DIRS}
	mkdir -p ${MOUNT_POINT}/usr/mdec/${DIR}
.endfor
	cat ${MTREE} | mtree -de -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

d82 1
a82 1
	rm -rf cd-dir
@


1.14
log
@Previously armv7 ramdisk creation would tar up the mdec directory on the
build machine and extract it when installing.  Change to using the
u-boot and dtb packages when creating ramdisks and miniroots and don't
place these files in mdec on install.

Installing these packages is now required to run make release on armv7.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2016/05/29 07:38:01 jsg Exp $
a48 1
	cd ${TOP}/../../sys/arch/armv7/conf && config RAMDISK
d50 2
a51 2
	    ${MAKE} clean && exec ${MAKE}
	cp ${TOP}/../../sys/arch/armv7/compile/RAMDISK/bsd bsd
@


1.13
log
@Stop building u-boot kernel and ramdisk images.  The kernel make targets
are left for now but umg files are no longer built when building
releases.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2016/05/21 07:19:24 jsg Exp $
d29 9
d96 3
@


1.12
log
@Copy dtb files to miniroots and install disk.  Increase the ramdisk size
and force long filenames on the first mount of fat 16 filesystems so
this works.

U-boot scripts have not yet been changed to load these files.

ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2015/07/17 17:02:52 jsg Exp $
a23 7
KERNADDR_OMAP=0x80300000
KERNADDR_IMX=0x10300000
KERNADDR_SUNXI=0x40300000
KERNADDR_VEXPRESSA15=0x80300000
KERNADDR_VEXPRESSA9=0x60300000
KERNADDR_EXYNOS=0x40300000

a34 1
ALLSOC=		EXYNOS IMX OMAP SUNXI VEXPRESSA9 VEXPRESSA15
a36 3
.for SOC in ${ALLSOC}
ALLBSDRD+=	${BSD_RD}.${SOC}.umg
.endfor
a47 6

.for SOC in ${ALLSOC}
${BSD_RD}.${SOC}.umg: ${BSD_RD}
	mkuboot -a arm -o linux -e ${KERNADDR_${SOC}} -l ${KERNADDR_${SOC}} \
	    ${BSD_RD} ${BSD_RD}.${SOC}.umg
.endfor
@


1.11
log
@enable exynos
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2015/06/29 04:52:34 jsg Exp $
d32 1
a32 1
NBLKS=		10240
@


1.10
log
@enable vexpress
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2015/05/20 01:44:20 jsg Exp $
d29 1
d42 1
a42 1
ALLSOC=		IMX OMAP SUNXI VEXPRESSA9 VEXPRESSA15
@


1.9
log
@Now all the socs use the same va entry point and don't have any
conflicting symbols we can combine the configs.

Multiple umg files are still required however.  The bsd.umg target in
the kernel is replaced by targets for bsd.IMX.umg, bsd.OMAP.umg and
bsd.SUNXI.umg.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2015/05/19 00:05:59 jsg Exp $
d27 2
d41 1
a41 1
ALLSOC=		IMX OMAP SUNXI
@


1.8
log
@use the same va entry point on all armv7 socs
Similiar changes were made in bitrig by Patrick Wildt.

As part of this change the physical load address for imx and sunxi have
changed.  Any u-boot settings that include it will need to be modified.

imx: 0x10800000 -> 0x10300000
sunxi: 0x40800000 -> 0x40300000

Tested by bmercer, canacar and myself.
ok bmercer@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2013/11/01 20:35:52 jasper Exp $
d40 2
a41 2
ALLBSD=
ALLBSDRD=
d43 2
a44 2
ALLBSD+=	bsd.${SOC}
ALLBSDRD+=	${BSD_RD}.${SOC} ${BSD_RD}.${SOC}.umg
a45 1
.endfor
d47 3
a49 4
.for SOC in ${ALLSOC}
bsd.${SOC}:
	cd ${TOP}/../../sys/arch/armv7/conf && config RAMDISK-${SOC}
	cd ${TOP}/../../sys/arch/armv7/compile/RAMDISK-${SOC} && \
d51 1
a51 1
	cp ${TOP}/../../sys/arch/armv7/compile/RAMDISK-${SOC}/bsd bsd.${SOC}
d53 6
a58 3
${BSD_RD}.${SOC}: ${CBIN} ${IMAGE} bsd.${SOC} rdsetroot
	cp bsd.${SOC} ${BSD_RD}.${SOC}
	${.OBJDIR}/rdsetroot ${BSD_RD}.${SOC} ${IMAGE}
d60 1
a60 1
	    ${BSD_RD}.${SOC} ${BSD_RD}.${SOC}.umg
@


1.7
log
@hookup sunxi bits for miniroot and ramdisk, tested on pcduino.
note that on boards without ahci you will need to install to usb and still
boot of sd, at least until there's support for the sd slot.

ok patrick@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2013/10/28 14:10:41 patrick Exp $
d25 2
a26 2
KERNADDR_IMX=0x10800000
KERNADDR_SUNXI=0x40800000
@


1.6
log
@Revamp ARMv7 ramdisk and miniroot creation process.

Instead of running mkuboot during install, we call it on during
the release build, so that we can also ship bootable images
of the generic and the ramdisk kernel.

We can now build miniroots for imx, too.  The installer also
can recognize the SoC and makes decision based on it.

Use ext2fs for i.MX6 based devices.

Tar the bootloader files to save some space.

ok syl@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2013/10/15 22:46:49 deraadt Exp $
d26 1
d28 2
a29 2
DISKTYPE=       rdroot2.5M
NBLKS=		5120
d39 1
a39 1
ALLSOC=		IMX OMAP
@


1.5
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2013/10/14 00:00:08 guenther Exp $
d24 2
d43 1
a43 1
ALLBSDRD+=	${BSD_RD}.${SOC}
d57 2
@


1.4
log
@Turn on the distrib lib bits in crunchgen by setting SRCLIBDIR.
Add the new files to the clean target's rm list.

"why not get it tested?" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2013/09/08 11:23:54 patrick Exp $
d102 1
a102 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
@


1.3
log
@Oops, typo.  Found by Artturi Alm.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2013/09/07 23:04:44 patrick Exp $
d89 1
a89 1
	${MAKE} -f ${CBIN}.mk all
d103 1
@


1.2
log
@Update ARMv7's release build process to build kernels and ramdisks
per SoC.  It's heavily based on the SGI port.

ok florian@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2013/09/04 20:00:22 patrick Exp $
d37 1
a37 1
ALLBDS=
@


1.1
log
@Beagle has been replaced by armv7.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2011/07/27 20:44:53 drahn Exp $
d36 15
a50 2
# mix config is not needed.
all:	${BSD_RD}
d52 4
a55 3
${BSD_RD}: ${CBIN} ${IMAGE} bsd rdsetroot
	cp bsd ${BSD_RD}
	${.OBJDIR}/rdsetroot ${BSD_RD} ${IMAGE}
a60 6
bsd:
	cd ${TOP}/../../sys/arch/armv7/conf && config RAMDISK-OMAP
	cd ${TOP}/../../sys/arch/armv7/compile/RAMDISK-OMAP && \
	    ${MAKE} clean && exec ${MAKE}
	cp ${TOP}/../../sys/arch/armv7/compile/RAMDISK-OMAP/bsd bsd

d103 1
a103 1
	    *.o *.lo *.c bsd ${BSD_RD} rdsetroot
d109 1
a109 1
	cp ${BSD_RD} ${RELEASEDIR}
@

