head	1.16;
access;
symbols
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.8
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.14.0.2
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.12.0.6
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.4
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.10.0.4
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.2
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.5.0.6
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4;
locks; strict;
comment	@# @;


1.16
date	2015.09.27.19.11.36;	author miod;	state Exp;
branches;
next	1.15;
commitid	hBkenwgDZ5CyhWsg;

1.15
date	2014.03.15.04.07.39;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2013.12.08.17.21.59;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2013.12.03.23.10.17;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2012.05.25.17.32.38;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.10;

1.10
date	2010.03.31.19.44.33;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2009.05.30.04.01.27;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2009.05.16.16.06.55;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2009.05.14.18.58.16;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2008.02.18.16.08.26;	author jsing;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.01.19.58.13;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.28.21.56.11;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.28.14.56.08;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.27.03.15.54;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Add IP26 kernels and boot blocks to the installation media.
@
text
@#	$OpenBSD: Makefile,v 1.15 2014/03/15 04:07:39 miod Exp $

TOP=	${.CURDIR}/..

.include "${TOP}/Makefile.inc"

BSDRD=	bsd.rd
CDROM=	cd${REV}.iso
FFS=	ffs.img
# must match the size of `minicdroot' in disktab
CDFSMB=	15
all: ${CDROM}

ALLIP=		22 26 27 28 30 32

# Note regarding sgivol -h value:
# boot32 currently (2012/05/25) needs 87 512 byte sectors, boot64 needs 200,
# bootecoff needs 77, the XFS partition needs 32768, and we need to keep some
# room for growth.
SGIVOLSZ=	33500

${CDROM}:
	-rm -rf ${.OBJDIR}/cd-dir
	mkdir -p ${.OBJDIR}/cd-dir/
	dd if=/dev/zero of=${.OBJDIR}/${FFS} bs=1m count=${CDFSMB}
	vnconfig -v -c vnd0 ${.OBJDIR}/${FFS}
	disklabel -w vnd0 minicdroot "OpenBSD/sgi     "
	newfs /dev/rvnd0a
	mount /dev/vnd0a ${.OBJDIR}/cd-dir
	mkdir -p ${.OBJDIR}/cd-dir/${OSrev}/sgi
.for IP in ${ALLIP}
	gzip -9f < ${.OBJDIR}/../ramdisk/${BSDRD}.IP${IP} > \
	    ${.OBJDIR}/cd-dir/bsd.IP${IP}
	ln ${.OBJDIR}/cd-dir/bsd.IP${IP} ${.OBJDIR}/cd-dir/bsd.rd.IP${IP}
	ln ${.OBJDIR}/cd-dir/bsd.IP${IP} ${.OBJDIR}/cd-dir/${OSrev}/sgi/bsd.IP${IP}
	ln ${.OBJDIR}/cd-dir/bsd.IP${IP} ${.OBJDIR}/cd-dir/${OSrev}/sgi/bsd.rd.IP${IP}
.endfor
	cp ${DESTDIR}/usr/mdec/bootecoff ${.OBJDIR}/cd-dir/bootecoff
	cp ${DESTDIR}/usr/mdec/boot32 ${.OBJDIR}/cd-dir/boot32
	cp ${DESTDIR}/usr/mdec/boot64 ${.OBJDIR}/cd-dir/boot64
	umount ${.OBJDIR}/cd-dir
	@@df /dev/vnd0a
	vnconfig -u vnd0
	dd if=/dev/zero of=${.OBJDIR}/${CDROM} bs=1m count=`expr ${CDFSMB} + 1 + ${SGIVOLSZ} / 2048`
	vnconfig -v -c vnd0 ${.OBJDIR}/${CDROM}
	/usr/mdec/sgivol -i -h ${SGIVOLSZ} vnd0
	uudecode -o ${.OBJDIR}/xfs512.bin.gz ${.CURDIR}/xfs512.bin.gz.uue
	gzip -d ${.OBJDIR}/xfs512.bin.gz
	cat ${DESTDIR}/usr/mdec/boot64 >> ${.OBJDIR}/xfs512.bin
	dd if=${.OBJDIR}/xfs512.bin of=${.OBJDIR}/xfs obs=16m conv=osync
	/usr/mdec/sgivol -w xfsboot ${.OBJDIR}/xfs vnd0
	/usr/mdec/sgivol -w bootecoff ${DESTDIR}/usr/mdec/bootecoff vnd0
	/usr/mdec/sgivol -l bootecoff sash vnd0
	/usr/mdec/sgivol -w boot32 ${DESTDIR}/usr/mdec/boot32 vnd0
	/usr/mdec/sgivol -l boot32 sashARCS vnd0
	/usr/mdec/sgivol -w boot64 ${DESTDIR}/usr/mdec/boot64 vnd0
	/usr/mdec/sgivol -l boot64 sash64 vnd0
	vnconfig -u vnd0
	dd if=${.OBJDIR}/${FFS} of=${.OBJDIR}/${CDROM} bs=512 seek=${SGIVOLSZ}

.ifdef RELEASEDIR
install:
	cp ${CDROM} ${RELEASEDIR}
.endif

unconfig:
	-umount /mnt
	-umount ${.OBJDIR}/cd-dir
	-vnconfig -u vnd0

clean cleandir:
	/bin/rm -f ${CDROM} ${FFS} xfs512.bin xfs
	rm -rf cd-dir

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.15
log
@Bump the cdXX image from 12MB to 13MB.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2013/12/08 17:21:59 miod Exp $
d11 1
a11 1
CDFSMB=	13
d14 1
a14 1
ALLIP=		22 27 28 30 32
@


1.14
log
@Use the value of SGIVOLSZ everywhere needed instead of recomputing it at runtime
by parsing the output of sgivol.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2013/12/03 23:10:17 miod Exp $
d11 1
a11 1
CDFSMB=	12
@


1.13
log
@Create a minimalist XFS partition containing the 64-bit boot loader as its
only file, and put it in the volume header. This allows IP27 to be able to
boot off cdrom via the ``Install System Software'' menu.

Tested on Origin 200 (IP27) and Fuel (IP35), verified to still boot on IP32
using boot blocks from the volume header.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2012/05/25 17:32:38 miod Exp $
d46 1
a46 1
	/usr/mdec/sgivol -i -h ${SGIVOLSZ} vnd0 > ${.OBJDIR}/volhdr
d59 1
a59 2
	dd if=${.OBJDIR}/${FFS} of=${.OBJDIR}/${CDROM} bs=512 \
	    seek=`cat ${.OBJDIR}/volhdr | grep 'Volume Header' | awk '{print $$3}'`
d72 1
a72 1
	/bin/rm -f ${CDROM} ${FFS} volhdr xfs512.bin xfs
@


1.12
log
@Hook sgi IP28 kernels into the build. While there, update the iso images to
provide IP22 and IP28 kernels, as well as the ECOFF bootblock.

No objection from deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2011/04/18 16:52:10 thib Exp $
d18 4
a21 1
# bootecoff needs 77, and we need to keep some room for growth.
d44 1
a44 1
	dd if=/dev/zero of=${.OBJDIR}/${CDROM} bs=1m count=`expr ${CDFSMB} + 2`
d46 6
a51 1
	/usr/mdec/sgivol -i -h 400 vnd0 > ${.OBJDIR}/volhdr
d73 1
a73 1
	/bin/rm -f ${CDROM} ${FFS} volhdr
@


1.11
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2010/03/31 19:44:33 miod Exp $
d11 1
a11 1
CDFSMB=	10
d14 5
d28 8
a35 15
	gzip -9f < ${.OBJDIR}/../ramdisk/${BSDRD}.IP27 > \
	    ${.OBJDIR}/cd-dir/bsd.IP27
	ln ${.OBJDIR}/cd-dir/bsd.IP27 ${.OBJDIR}/cd-dir/bsd.rd.IP27
	ln ${.OBJDIR}/cd-dir/bsd.IP27 ${.OBJDIR}/cd-dir/${OSrev}/sgi/bsd.IP27
	ln ${.OBJDIR}/cd-dir/bsd.IP27 ${.OBJDIR}/cd-dir/${OSrev}/sgi/bsd.rd.IP27
	gzip -9f < ${.OBJDIR}/../ramdisk/${BSDRD}.IP30 > \
	    ${.OBJDIR}/cd-dir/bsd.IP30
	ln ${.OBJDIR}/cd-dir/bsd.IP30 ${.OBJDIR}/cd-dir/bsd.rd.IP30
	ln ${.OBJDIR}/cd-dir/bsd.IP30 ${.OBJDIR}/cd-dir/${OSrev}/sgi/bsd.IP30
	ln ${.OBJDIR}/cd-dir/bsd.IP30 ${.OBJDIR}/cd-dir/${OSrev}/sgi/bsd.rd.IP30
	gzip -9f < ${.OBJDIR}/../ramdisk/${BSDRD}.IP32 > \
	    ${.OBJDIR}/cd-dir/bsd.IP32
	ln ${.OBJDIR}/cd-dir/bsd.IP32 ${.OBJDIR}/cd-dir/bsd.rd.IP32
	ln ${.OBJDIR}/cd-dir/bsd.IP32 ${.OBJDIR}/cd-dir/${OSrev}/sgi/bsd.IP32
	ln ${.OBJDIR}/cd-dir/bsd.IP32 ${.OBJDIR}/cd-dir/${OSrev}/sgi/bsd.rd.IP32
d43 3
a45 2
	# boot32 needs 77, boot64 needs 173, and add some room for growth
	/usr/mdec/sgivol -i -h 320 vnd0 > ${.OBJDIR}/volhdr
@


1.10
log
@Add bnx firmware on installation media; this causes a media oflow, so
enlarge bsd.rd filesystem; this in turn causes a cd oflow, so enlarge
cd filesystem.
ok jsing@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2009/05/30 04:01:27 miod Exp $
d18 4
a21 4
	vnconfig -v -c svnd0 ${.OBJDIR}/${FFS}
	disklabel -w svnd0 minicdroot "OpenBSD/sgi     "
	newfs /dev/rsvnd0a
	mount /dev/svnd0a ${.OBJDIR}/cd-dir
d41 2
a42 2
	@@df /dev/svnd0a
	vnconfig -u svnd0
d44 1
a44 1
	vnconfig -v -c svnd0 ${.OBJDIR}/${CDROM}
d46 6
a51 6
	/usr/mdec/sgivol -i -h 320 svnd0 > ${.OBJDIR}/volhdr
	/usr/mdec/sgivol -w boot32 ${DESTDIR}/usr/mdec/boot32 svnd0
	/usr/mdec/sgivol -l boot32 sashARCS svnd0
	/usr/mdec/sgivol -w boot64 ${DESTDIR}/usr/mdec/boot64 svnd0
	/usr/mdec/sgivol -l boot64 sash64 svnd0
	vnconfig -u svnd0
d63 1
a63 1
	-vnconfig -u svnd0
@


1.9
log
@Build IP27 and IP30 kernels on sgi; put then on the cdrom images too
(although for now our cd images fail to boot on IP27 and IP30).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2009/05/16 16:06:55 deraadt Exp $
d10 2
d17 1
a17 1
	dd if=/dev/zero of=${.OBJDIR}/${FFS} bs=1m count=8
d43 1
a43 1
	dd if=/dev/zero of=${.OBJDIR}/${CDROM} bs=1m count=10
@


1.8
log
@grab the right boot files
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2009/05/14 18:58:16 miod Exp $
a8 1
CDROM2=	cd${REV}.tmp
a14 3
	cp ${DESTDIR}/usr/mdec/boot32 ${.OBJDIR}/boot32
	cp ${DESTDIR}/usr/mdec/boot64 ${.OBJDIR}/boot64
	gzip -9f < ${.OBJDIR}/../ramdisk/${BSDRD} > ${.OBJDIR}/bsd
d17 1
a17 1
	disklabel -w svnd0 rdroot "OpenBSD/sgi     "
d21 17
a37 6
	cp ${.OBJDIR}/bsd ${.OBJDIR}/cd-dir/bsd
	ln ${.OBJDIR}/cd-dir/bsd ${.OBJDIR}/cd-dir/bsd.rd
	ln ${.OBJDIR}/cd-dir/bsd ${.OBJDIR}/cd-dir/${OSrev}/sgi/bsd
	ln ${.OBJDIR}/cd-dir/bsd ${.OBJDIR}/cd-dir/${OSrev}/sgi/bsd.rd
	cp ${.OBJDIR}/boot32 ${.OBJDIR}/cd-dir/boot32
	cp ${.OBJDIR}/boot64 ${.OBJDIR}/cd-dir/boot64
d45 1
a45 1
	/usr/mdec/sgivol -w boot32 ${.OBJDIR}/boot32 svnd0
d47 1
a47 1
	/usr/mdec/sgivol -w boot64 ${.OBJDIR}/boot64 svnd0
d64 1
a64 1
	/bin/rm -f ${CDROM} ${CDROM2} ${FFS} volhdr bsd boot
@


1.7
log
@Update to match the new bootblocks filenames.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2009/04/17 03:58:54 deraadt Exp $
d16 2
a17 1
	cp ${DESTDIR}/usr/mdec/boot-IP32 ${.OBJDIR}/boot-IP32
@


1.6
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2008/02/18 16:08:26 jsing Exp $
d16 1
a16 3
	#cp ${DESTDIR}/usr/mdec/boot ${.OBJDIR}/boot
	objcopy -Sg -R .comment ${DESTDIR}/usr/mdec/boot ${.OBJDIR}/boot
	strip ${.OBJDIR}/boot
d28 2
a29 1
	cp ${.OBJDIR}/boot ${.OBJDIR}/cd-dir/boot
d35 6
a40 4
	# would love to use -h 64, but boot is slightly too big
	/usr/mdec/sgivol -i -h 88 svnd0 > ${.OBJDIR}/volhdr
	/usr/mdec/sgivol -w boot ${.OBJDIR}/boot svnd0
	/usr/mdec/sgivol -l boot sashARCS svnd0
@


1.5
log
@sgivol(8) no longer requires the '-f' option.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2005/08/01 19:58:13 kettenis Exp $
d44 1
d46 2
a47 1
	cp ${CDROM} ${DESTDIR}/snapshot
@


1.4
log
@Create installation media that is recognized as such by the PROM.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2005/04/28 21:56:11 deraadt Exp $
d37 3
a39 3
	/usr/mdec/sgivol -f -i -h 88 svnd0 > ${.OBJDIR}/volhdr
	/usr/mdec/sgivol -f -w boot ${.OBJDIR}/boot svnd0
	/usr/mdec/sgivol -f -l boot sashARCS svnd0
@


1.3
log
@strip bootblock, attempt to use a smaller sgivol size
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2005/04/28 14:56:08 deraadt Exp $
d39 1
@


1.2
log
@shrink volhdr to 128 bytes.  would *love* to go to 64 blocks, since that
is 32K, which is the isofs lead-in.... that would let us (for instance)
mix sgi boot media with other architectures.  that requires shrinking boot,
since right now it will not fit in 64 blocks
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2005/04/27 03:15:54 deraadt Exp $
d16 4
a19 2
	cp ${.OBJDIR}/../ramdisk/${BSDRD} ${.OBJDIR}/bsd
	gzip -9f bsd
d26 1
a26 1
	cp ${.OBJDIR}/bsd.gz ${.OBJDIR}/cd-dir/bsd
d30 1
a30 1
	cp ${DESTDIR}/usr/mdec/boot ${.OBJDIR}/cd-dir/boot
d36 3
a38 3
	# would love to use 64
	/usr/mdec/sgivol -f -i -h 128 svnd0 | tee ${.OBJDIR}/volhdr
	/usr/mdec/sgivol -f -w boot ${DESTDIR}/usr/mdec/boot svnd0
d52 1
a52 1
	/bin/rm -f ${CDROM} ${CDROM2} ${FFS} volhdr bsd bsd.gz
@


1.1
log
@boot cdrom for sgi.  boot using simply:
	boot -f pci(0)scsi(0)cdrom(4)rdisk(0)partition(8)/boot
this is 1.5MB sgi boot partition followed by a 4GB ffs partition
containing a gzip'd bsd.rd
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2005/03/11 15:40:58 deraadt Exp $
a31 1

d34 2
a35 1
	/usr/mdec/sgivol -f -i svnd0 | tee ${.OBJDIR}/volhdr
@

