head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.2
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.4
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.10.0.12
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.8
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.10
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.2
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.8.0.10
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.8
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.6
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.4
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3;
locks; strict;
comment	@# @;


1.12
date	2016.12.11.10.01.01;	author natano;	state Exp;
branches;
next	1.11;
commitid	TYYVM5AjQwD13y0t;

1.11
date	2016.10.14.18.44.19;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	SCMr9f2ZDRZiobIN;

1.10
date	2013.10.15.22.46.51;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2013.10.14.00.00.09;	author guenther;	state Exp;
branches;
next	1.8;

1.8
date	2011.07.09.00.42.49;	author drahn;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.08.21.39.32;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2011.04.18.16.52.09;	author thib;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.15.03.11.22;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.14.19.07.46;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2010.02.06.18.54.32;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2010.02.04.19.23.55;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.31.21.36.01;	author otto;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Use makefs to build bsd.rd; build & boot tested by visa
@
text
@#	$OpenBSD: Makefile,v 1.11 2016/10/14 18:44:19 deraadt Exp $

REV=	${OSrev}

TOP=		${.CURDIR}/..

BSD_RD=		bsd.rd
IMAGE=		mr.fs
CBIN?=		instbin
CRUNCHCONF?=	${CBIN}.conf
CRUNCHCONFS?=	${.CURDIR}/../common/crunch.conf
LISTS=		${.CURDIR}/list
UTILS?=		${.CURDIR}/../../miniroot

MTREE=		${UTILS}/mtree.conf

DISKTYPE=	rdroot
MAKEFSARGS_RD=	-o disklabel=${DISKTYPE},minfree=0,density=4096

.ifndef DESTDIR
all ${IMAGE}:
	@@echo setenv DESTDIR before making a ramdisk!
	@@false
.else

# mix config is not needed.
all:	${BSD_RD}

${BSD_RD}: ${IMAGE} bsd rdsetroot
	cp bsd ${BSD_RD}
	${.OBJDIR}/rdsetroot ${BSD_RD} ${IMAGE}

${IMAGE}: ${CBIN}
	rm -rf $@@.d
	install -d -o root -g wheel $@@.d
	mtree -def ${MTREE} -p $@@.d -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} REV=${REV} \
	    TARGDIR=$@@.d UTILS=${UTILS} RELEASEDIR=${RELEASEDIR} \
	    sh ${UTILS}/runlist.sh ${LISTS}
	rm $@@.d/${CBIN}
	makefs ${MAKEFSARGS_RD} $@@ $@@.d

.endif

bsd:
	cd ${TOP}/../../sys/arch/loongson/compile/RAMDISK && \
	    su ${BUILDUSER} -c '${MAKE} config && ${MAKE} clean && exec ${MAKE}'
	cp -p ${TOP}/../../sys/arch/loongson/compile/RAMDISK/obj/bsd bsd

rdsetroot:	${TOP}/../common/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o rdsetroot \
	    ${TOP}/../common/elfrdsetroot.c ${TOP}/../common/elf32.c \
	    ${TOP}/../common/elf64.c

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -EM -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${.ALLSRC}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all

${CRUNCHCONF}: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
	    lib*.a lib*.olist ${CBIN}.map \
	    *.o *.lo *.c bsd ${BSD_RD} cd${REV}.iso rdsetroot
	rm -rf cd-dir ${IMAGE}.d

.ifdef RELEASEDIR
install:
	cp ${BSD_RD} ${RELEASEDIR}
.endif

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.11
log
@Use new kernel compile method for ramdisks, de-escalating to $BUILDUSER
as required.
much help from natano and tb.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2013/10/15 22:46:51 deraadt Exp $
a14 1
MOUNT_POINT=	/mnt
d17 2
a18 10
VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c


DISKTYPE=       rdroot
NBLKS=          8192
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -m 0 -o space -i 4096
d29 1
a29 1
${BSD_RD}: ${CBIN} ${IMAGE} bsd rdsetroot
d33 9
a41 1
${IMAGE}: rd_setup do_files rd_teardown
a49 13
rd_setup:
	dd if=/dev/zero of=${IMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${IMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}

a54 6
unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}

.PRECIOUS:	${IMAGE}

a63 7
do_files:
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

d68 1
a68 1
	rm -rf cd-dir
@


1.10
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2013/10/14 00:00:09 guenther Exp $
a46 1
	cd ${TOP}/../../sys/arch/loongson/conf && config RAMDISK
d48 2
a49 2
	    ${MAKE} clean && exec ${MAKE}
	cp ${TOP}/../../sys/arch/loongson/compile/RAMDISK/bsd bsd
@


1.9
log
@Turn on the distrib lib bits in crunchgen by setting SRCLIBDIR.
Add the new files to the clean target's rm list.

"why not get it tested?" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2011/07/09 00:42:49 drahn Exp $
d93 1
a93 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
@


1.8
log
@Unbreak most archs for the last commit. cut and paste changed rdsetroot
to elfrdsetroot. Does not yet fix sparc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2011/07/08 21:39:32 drahn Exp $
d80 1
a80 1
	${MAKE} -f ${CBIN}.mk all
d94 1
@


1.7
log
@Allow the elf rdsetroot operation to function on 32 bit and 64 bit binaries.
Enables developers to build arm ramdisk kernels on amd64 archs
OK deraadt@@ 'looked fine' miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2011/04/18 16:52:09 thib Exp $
d66 1
a66 1
	${HOSTCC} ${HOSTCFLAGS} -o elfrdsetroot \
@


1.6
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2011/04/15 03:11:22 deraadt Exp $
d66 3
a68 1
	${HOSTCC} -o rdsetroot ${TOP}/../common/elfrdsetroot.c
@


1.5
log
@No need to make depend kernels; ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2011/03/14 19:07:46 deraadt Exp $
d18 1
a18 1
VND?=		svnd0
@


1.4
log
@unify a chunk
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2010/02/06 18:54:32 otto Exp $
d49 1
a49 1
	    ${MAKE} clean && ${MAKE} depend && ${MAKE}
@


1.3
log
@no bsd.bin here as well
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2010/02/04 19:23:55 otto Exp $
d92 1
a92 2
	*.o *.lo *.c bsd ${BSD_RD} cd${REV}.iso \
	rdsetroot
@


1.2
log
@no need for bsd.bin
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2010/01/31 21:36:01 otto Exp $
a7 1
BSD_BIN=	bsd.bin
d98 1
a98 1
	cp ${BSD_RD} ${BSD_BIN} ${RELEASEDIR}
@


1.1
log
@initial ramdisk stuff, produces a working bsd.rd
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2009/07/05 16:50:18 kettenis Exp $
d37 1
a37 1
all:	${BSD_RD} ${BSD_BIN}
a41 3

${BSD_BIN}: ${BSD_RD}
	objcopy -O binary ${BSD_RD} ${BSD_BIN}
@

