head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.12
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.8
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.4
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.6
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.14.0.6
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.4
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.11.0.10
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.8
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.6
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3;
locks; strict;
comment	@# @;


1.16
date	2014.09.21.13.44.45;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	oU9URDYHjCPgvf88;

1.15
date	2014.08.26.21.36.44;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	d7fVtFqlTBeFuAsD;

1.14
date	2014.03.02.05.46.26;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2014.01.24.00.34.22;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2014.01.12.21.58.00;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2011.06.08.19.16.19;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2011.04.10.20.00.43;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2010.10.18.05.40.47;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2010.02.26.23.16.19;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2009.04.17.03.58.55;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2008.08.25.17.18.55;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2008.03.04.05.37.51;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2007.10.17.21.32.38;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2007.08.10.12.29.55;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.10.03.02.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2007.08.10.02.28.53;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@xetc set does not go onto little iso
@
text
@#	$OpenBSD: Makefile,v 1.15 2014/08/26 21:36:44 deraadt Exp $

TOP=	${.CURDIR}/..

.include "${TOP}/Makefile.inc"

CDROM=		install${REV}.iso
RELXDIR?=	/home/relx-${MACHINE}
RELDIR?=	/home/rel-${MACHINE}

BASE=		${RELDIR}/base${OSrev}.tgz ${RELDIR}/comp${OSrev}.tgz \
		${RELDIR}/game${OSrev}.tgz ${RELDIR}/man${OSrev}.tgz \
		${RELDIR}/bsd ${RELDIR}/bsd.mp ${RELDIR}/bsd.rd \
		${RELDIR}/INSTALL.${MACHINE}
XBASE=		${RELXDIR}/xbase${OSrev}.tgz ${RELXDIR}/xfont${OSrev}.tgz \
		${RELXDIR}/xshare${OSrev}.tgz ${RELXDIR}/xserv${OSrev}.tgz

all: ${CDROM}

${CDROM}: ${BASE} ${XBASE}
	-rm -rf ${.OBJDIR}/cd-dir
	-mkdir -p ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}

	cp -p ${BASE} ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}
	cp -p ${XBASE} ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}

	cat ${RELDIR}/SHA256 ${RELXDIR}/SHA256 > \
	    ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256
	# XXX no SHA256.sig

	cp -p ${RELDIR}/ofwboot ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}

	echo 'm 1	sun4' > ${.OBJDIR}/cd-dir/.slicemapfile
	echo 'm 2	sun4c' >> ${.OBJDIR}/cd-dir/.slicemapfile
	echo 'm 3	sun4m' >> ${.OBJDIR}/cd-dir/.slicemapfile
	echo 'm 4	sun4d' >> ${.OBJDIR}/cd-dir/.slicemapfile
	echo 'm 5	sun4u' >> ${.OBJDIR}/cd-dir/.slicemapfile
	echo 'm 5	sun4us' >> ${.OBJDIR}/cd-dir/.slicemapfile
	echo 'm 6	sun4v' >> ${.OBJDIR}/cd-dir/.slicemapfile
	mkhybrid -a -R -T -L -d -D -N \
	    -A "OpenBSD ${OSREV} ${MACHINE} Install CD" \
	    -P "Copyright (c) `date +%Y` Theo de Raadt, The OpenBSD project" \
	    -p "Theo de Raadt <deraadt@@openbsd.org>" \
	    -V "OpenBSD/${MACHINE} ${OSREV} Install CD" \
	    -o ${.OBJDIR}/${CDROM} ${.OBJDIR}/cd-dir
	vnconfig -v -c vnd0 ${.OBJDIR}/${CDROM}
	disklabel -w vnd0 fakecdrom "OpenBSD${REV}${MACHINE}"
	vnconfig -u vnd0
	mksuncd f ${.OBJDIR}/${CDROM} ${.OBJDIR}/../miniroot/miniroot${REV}.fs

install:
	cp ${CDROM} ${RELDIR}/

clean cleandir:
	/bin/rm -rf ${CDROM} ${.OBJDIR}/cd-dir

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.15
log
@no more exposed etc set
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2014/03/02 05:46:26 deraadt Exp $
d15 2
a16 3
XBASE=		${RELXDIR}/xbase${OSrev}.tgz ${RELXDIR}/xetc${OSrev}.tgz \
		${RELXDIR}/xfont${OSrev}.tgz ${RELXDIR}/xshare${OSrev}.tgz \
		${RELXDIR}/xserv${OSrev}.tgz
@


1.14
log
@Unfortunately... the "full-size downloadable" ISOs will ship without
internal-signing, because the procedures ran into some snags we can't
fix in time for release...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2014/01/24 00:34:22 deraadt Exp $
d12 1
a12 2
		${RELDIR}/etc${OSrev}.tgz ${RELDIR}/game${OSrev}.tgz \
		${RELDIR}/man${OSrev}.tgz \
@


1.13
log
@Refactor the install*.iso creation in regards to signing.
ok todd
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2014/01/12 21:58:00 deraadt Exp $
d28 4
a31 2
	cp -p ${RELDIR}/.i-SHA256 ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256
	cp -p ${RELDIR}/.i-SHA256.sig ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256.sig
@


1.12
log
@Place a SHA256 (not SHA256.sig, sorry not yet) onto the install*.iso
media to give some upcoming changes a chance of working.

Long discussions with todd and rpe
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2011/06/08 19:16:19 krw Exp $
d28 2
a32 3
	cat ${RELDIR}/SHA256 ${RELXDIR}/SHA256 > \
		${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256

a52 5
	# update the SHA256 file
	grep -v ${CDROM} ${RELDIR}/SHA256 > ${RELDIR}/SHA256.new
	sum -a sha256 ${CDROM} >> ${RELDIR}/SHA256.new
	sort ${RELDIR}/SHA256.new > ${RELDIR}/SHA256
	rm ${RELDIR}/SHA256.new
@


1.11
log
@Revert fakecdrom elimination pending further testing. ariane@@ pointed
out that sparc64 iso at least does not boot. Retain the svnd -> vnd
changes that happened after the original commit.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2011/04/10 20:00:43 krw Exp $
d30 3
@


1.10
log
@'fakecdrom' disktab entry no longer needed, nor is mksuncd mangling of
the boot cd image.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2010/10/18 05:40:47 deraadt Exp $
d44 4
@


1.9
log
@no more misc set
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2010/02/26 23:16:19 deraadt Exp $
a43 4
	vnconfig -v -c svnd0 ${.OBJDIR}/${CDROM}
	disklabel -w svnd0 fakecdrom "OpenBSD${REV}${MACHINE}"
	vnconfig -u svnd0
	mksuncd f ${.OBJDIR}/${CDROM} ${.OBJDIR}/../miniroot/miniroot${REV}.fs
@


1.8
log
@use more mkhybrid flags like we do elsewhere; rockridge in the iso image is a good idea
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2009/04/17 03:58:55 deraadt Exp $
d13 1
a13 1
		${RELDIR}/man${OSrev}.tgz ${RELDIR}/misc${OSrev}.tgz \
@


1.7
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2008/08/25 17:18:55 deraadt Exp $
d38 1
a38 1
	mkhybrid -R -T -L -d -D -N \
@


1.6
log
@use ?= for adjusting RELXDIR for all sets
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2008/03/04 05:37:51 deraadt Exp $
d51 5
@


1.5
log
@create a .slicemapfile with all 7 entries in it
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2007/10/17 21:32:38 deraadt Exp $
d8 1
a8 1
RELXDIR=	/home/relx-${MACHINE}
@


1.4
log
@put bsd.rd onto install##.iso
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2007/08/10 12:29:55 deraadt Exp $
d31 7
@


1.3
log
@add missing xserv, and use ${MACHINE} throughout (still needs testing)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2007/08/10 03:02:38 deraadt Exp $
d14 1
a14 1
		${RELDIR}/bsd ${RELDIR}/bsd.rd \
@


1.2
log
@use more variables, because variables are good
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2007/08/10 02:28:53 deraadt Exp $
d8 2
a9 2
RELXDIR=	/home/relx-sparc64
RELDIR?=	/home/rel-sparc64
d15 1
a15 1
		${RELDIR}/INSTALL.sparc64
d17 2
a18 1
		${RELXDIR}/xfont${OSrev}.tgz ${RELXDIR}/xshare${OSrev}.tgz
d24 1
a24 1
	-mkdir -p ${.OBJDIR}/cd-dir/${OSREV}/sparc64
d26 2
a27 2
	cp -p ${BASE} ${.OBJDIR}/cd-dir/${OSREV}/sparc64
	cp -p ${XBASE} ${.OBJDIR}/cd-dir/${OSREV}/sparc64
d29 1
a29 1
	cp -p ${RELDIR}/ofwboot ${.OBJDIR}/cd-dir/${OSREV}/sparc64
d32 1
a32 1
	    -A "OpenBSD ${OSREV} sparc64 Install CD" \
d35 1
a35 1
	    -V "OpenBSD/sparc64 ${OSREV} Install CD" \
d38 1
a38 1
	disklabel -w svnd0 fakecdrom "OpenBSD${REV}sparc64"
@


1.1
log
@a somewhat crude way to generate installXX.iso files based on
intermediate snapshot components.  uses some knowledge from our internal
build scheme to link together base and X sets.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2005/03/11 15:40:59 deraadt Exp $
d10 9
d21 1
a21 1
${CDROM}:
d25 2
a26 8
	cp -p ${RELDIR}/{base,comp,etc,game,man,misc}${OSrev}.tgz \
	    ${.OBJDIR}/cd-dir/${OSREV}/sparc64
	cp -p ${RELDIR}/{bsd,bsd.rd} \
	    ${.OBJDIR}/cd-dir/${OSREV}/sparc64
	cp -p ${RELXDIR}/{xbase,xetc,xfont,xserv,xshare}${OSrev}.tgz \
	    ${.OBJDIR}/cd-dir/${OSREV}/sparc64
	cp -p ${RELDIR}/INSTALL.sparc64 \
	    ${.OBJDIR}/cd-dir/${OSREV}/sparc64
@

