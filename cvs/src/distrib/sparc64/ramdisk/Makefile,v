head	1.36;
access;
symbols
	OPENBSD_6_2:1.36.0.4
	OPENBSD_6_2_BASE:1.36
	OPENBSD_6_1:1.32.0.4
	OPENBSD_6_1_BASE:1.32
	OPENBSD_6_0:1.30.0.8
	OPENBSD_6_0_BASE:1.30
	OPENBSD_5_9:1.30.0.4
	OPENBSD_5_9_BASE:1.30
	OPENBSD_5_8:1.30.0.6
	OPENBSD_5_8_BASE:1.30
	OPENBSD_5_7:1.30.0.2
	OPENBSD_5_7_BASE:1.30
	OPENBSD_5_6:1.28.0.6
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.28.0.2
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.26.0.10
	OPENBSD_5_4_BASE:1.26
	OPENBSD_5_3:1.26.0.8
	OPENBSD_5_3_BASE:1.26
	OPENBSD_5_2:1.26.0.6
	OPENBSD_5_2_BASE:1.26
	OPENBSD_5_1_BASE:1.26
	OPENBSD_5_1:1.26.0.4
	OPENBSD_5_0:1.26.0.2
	OPENBSD_5_0_BASE:1.26
	OPENBSD_4_9:1.23.0.6
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.23.0.4
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.23.0.2
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.22.0.4
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.20.0.2
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.19.0.4
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.2
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.15.0.2
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.14.0.6
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.12
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.10
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.8
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.6
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7;
locks; strict;
comment	@# @;


1.36
date	2017.09.19.19.23.57;	author jasper;	state Exp;
branches;
next	1.35;
commitid	irqJmapcKJwDhqK7;

1.35
date	2017.09.18.20.13.53;	author jasper;	state Exp;
branches;
next	1.34;
commitid	H0a4p8IC4ldJfQvF;

1.34
date	2017.08.16.14.41.21;	author deraadt;	state Exp;
branches;
next	1.33;
commitid	klwxgKYXJ1lZjVaM;

1.33
date	2017.07.25.13.32.14;	author robert;	state Exp;
branches;
next	1.32;
commitid	4ug2LPpW6jX7EOsH;

1.32
date	2017.01.27.17.59.09;	author natano;	state Exp;
branches;
next	1.31;
commitid	lZEWyMpUcwYh27Y5;

1.31
date	2016.10.14.18.44.20;	author deraadt;	state Exp;
branches;
next	1.30;
commitid	SCMr9f2ZDRZiobIN;

1.30
date	2014.11.26.08.18.18;	author stsp;	state Exp;
branches;
next	1.29;
commitid	oINj6Rk08cmCKLAC;

1.29
date	2014.11.22.15.02.27;	author deraadt;	state Exp;
branches;
next	1.28;
commitid	rH4FDTIbh81WkVKX;

1.28
date	2013.10.15.22.46.54;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	2013.10.14.00.00.13;	author guenther;	state Exp;
branches;
next	1.26;

1.26
date	2011.07.08.21.39.32;	author drahn;	state Exp;
branches;
next	1.25;

1.25
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.24;

1.24
date	2011.04.15.03.11.22;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2009.10.12.17.49.14;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2009.04.17.15.59.48;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2009.04.17.03.58.55;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2008.12.02.01.01.08;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2008.01.11.10.16.40;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2007.06.17.00.28.21;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2007.04.13.17.34.40;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2007.04.09.14.55.11;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2007.02.16.16.56.22;	author tsi;	state Exp;
branches;
next	1.14;

1.14
date	2005.08.06.18.07.17;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.09.05.53.55;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.19.08.56.58;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.07.18.44.05;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.04.30.09.18.20;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.28.18.28.34;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.04.25.22.10.28;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.10.04.21.02;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.21.20.09.14;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.20.23.15.59;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.20.01.19.32;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.19.16.05.42;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.18.15.29.22;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.18.14.27.32;	author jason;	state Exp;
branches;
next	;


desc
@@


1.36
log
@remove unused GZIPEXT
@
text
@#	$OpenBSD: Makefile,v 1.35 2017/09/18 20:13:53 jasper Exp $

TOP=		${.CURDIR}/..

.include "${TOP}/Makefile.inc"
BSD_RD=		bsd.rd
IMAGE=		mr.fs
CBIN?=		instbin
LISTS=		${.CURDIR}/list
UTILS?=		${.CURDIR}/../../miniroot

MOUNT_POINT=	/mnt
MTREE=		${UTILS}/mtree.conf

FLOPPY=		floppy${REV}.fs
FLOPPYSIZE?=	2880
FLOPPYTYPE?=	floppy

VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a

GZIPFLAGS?=	-9nv

PID!=		echo $$$$
REALIMAGE!=	echo /var/tmp/image.${PID}
KERNEL?=	RAMDISKU1

DISKTYPE=	rdroot
MAKEFSARGS_RD=	-o disklabel=${DISKTYPE},minfree=0,density=4096

.ifndef DESTDIR
all ${IMAGE}:
	@@echo setenv DESTDIR before making a ramdisk!
	@@false
.else

# mix config is not needed.
all:	${FLOPPY} ${BSD_RD}

bsd.gz:	bsd.rd
	gzip ${GZIPFLAGS} < bsd.rd > bsd.gz

${FLOPPY}:	bsd.gz ${BOOT} /usr/
	dd if=/dev/zero of=${REALIMAGE} count=${FLOPPYSIZE}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${FLOPPYTYPE}
	newfs -m 0 -o space -i 524288 -c ${FLOPPYSIZE} ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}
	cp ${DESTDIR}/usr/mdec/ofwbootfd ${MOUNT_POINT}/ofwboot
	cp bsd.gz ${MOUNT_POINT}/bsd
	installboot -v ${VND} /usr/mdec/bootblk ${MOUNT_POINT}/ofwboot
	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	umount ${MOUNT_POINT}
	vnconfig -u ${VND}
	dd if=${REALIMAGE} of=${FLOPPY} count=${FLOPPYSIZE}
	rm -f ${REALIMAGE}

${BSD_RD}: ${CBIN} ${IMAGE} bsd elfrdsetroot
	cp bsd ${BSD_RD}
	${.OBJDIR}/elfrdsetroot ${BSD_RD} < ${IMAGE}
	strip -R .SUNW_ctf ${BSD_RD}

${IMAGE}: ${CBIN}
	rm -rf $@@.d
	install -d -o root -g wheel $@@.d
	mtree -def ${MTREE} -p $@@.d -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} REV=${REV} \
	    TARGDIR=$@@.d UTILS=${UTILS} RELEASEDIR=${RELEASEDIR} \
	    sh ${UTILS}/runlist.sh ${LISTS}
	rm $@@.d/${CBIN}
	makefs ${MAKEFSARGS_RD} $@@ $@@.d

.endif

bsd:
	cd ${TOP}/../../sys/arch/sparc64/compile/${KERNEL} && \
	    su ${BUILDUSER} -c '${MAKE} config && ${MAKE} clean && env COPTS=-Oz ${MAKE}'
	cp -p ${TOP}/../../sys/arch/sparc64/compile/${KERNEL}/obj/bsd bsd

elfrdsetroot:	${TOP}/../common/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o elfrdsetroot \
	    ${TOP}/../common/elfrdsetroot.c ${TOP}/../common/elf32.c \
	    ${TOP}/../common/elf64.c

unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}

${CBIN}.conf: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CBIN}.conf
	crunchgen -E -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${.ALLSRC}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
	    lib*.a lib*.olist ${CBIN}.map \
	    *.o *.lo *.c bsd ${BSD_RD} bsd.gz ${FLOPPY} elfrdsetroot
	/bin/rm -rf ${IMAGE}.d

.ifdef RELEASEDIR
install:
	cp ${FLOPPY} ${BSD.RD} ${RELEASEDIR}
.endif

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.35
log
@drop ${GZIPCMD} and just use 'gzip'
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.34 2017/08/16 14:41:21 deraadt Exp $
a23 1
GZIPEXT?=	.gz
@


1.34
log
@additional strip -R .SUNW_ctf needed
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 2017/07/25 13:32:14 robert Exp $
a22 1
GZIPCMD?=	gzip
d43 1
a43 1
	${GZIPCMD} ${GZIPFLAGS} < bsd.rd > bsd.gz
@


1.33
log
@change -Os to -Oz all around the tree

clang optimizes better for size with -Oz so use that as a default to avoid
overflowing the ramdisk floppies. gcc now accepts -Oz as an alias for -Os.

ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 2017/01/27 17:59:09 natano Exp $
d66 1
@


1.32
log
@Switch alpha, luna88k and sparc64 ramdisks to makefs.
ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2016/10/14 18:44:20 deraadt Exp $
d81 1
a81 1
	    su ${BUILDUSER} -c '${MAKE} config && ${MAKE} clean && env COPTS=-Os ${MAKE}'
@


1.31
log
@Use new kernel compile method for ramdisks, de-escalating to $BUILDUSER
as required.
much help from natano and tb.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2014/11/26 08:18:18 stsp Exp $
a21 2
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$
a26 2
MOUNT_POINT?=	/mnt
DISKTYPE=	rdroot
a28 4
IMAGE?=		ramdisk${REV}.fs
IMAGESIZE?=	8192 # 4MB in 512 byte blocks
NEWFS_WILL_FAIL?=false
CRUNCHGENOPTS?=
a29 2
UTILS?=		${.CURDIR}/../miniroot
STRIP?=		strip
d31 2
a32 4
DISKTYPE=       rdroot
NBLKS=          6144
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -m 0 -o space -i 4096
d67 9
a75 1
${IMAGE}: rd_setup do_files rd_teardown
a83 13
rd_setup:
	dd if=/dev/zero of=${IMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${IMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}

a92 2
.PRECIOUS:	${IMAGE}

a101 7
do_files:
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} REV=${REV} \
	    ARCHDIR=${.CURDIR}/.. TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

d106 1
@


1.30
log
@Use ofwbootfd on sparc64 floppies. Avoids problems when ofwboot grows.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2014/11/22 15:02:27 deraadt Exp $
a83 1
	cd ${TOP}/../../sys/arch/sparc64/conf && config ${KERNEL}
d85 2
a86 2
	    ${MAKE} clean && COPTS=-Os exec ${MAKE}
	cp ${TOP}/../../sys/arch/sparc64/compile/${KERNEL}/bsd bsd
@


1.29
log
@Switch to using MI installboot, after a conversation with stsp.  He will
need this soon.
install tested by jsg
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2013/10/15 22:46:54 deraadt Exp $
d64 1
a64 1
	cp ${DESTDIR}/usr/mdec/ofwboot ${MOUNT_POINT}/
d66 1
a66 1
	installboot -v ${VND}
@


1.28
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2013/10/14 00:00:13 guenther Exp $
a17 1
INSTALLBOOT?=	/usr/mdec/installboot
d66 1
a66 2
	${INSTALLBOOT} -v ${DESTDIR}/usr/mdec/bootblk \
		`echo ${VND_RDEV} | sed -e 's/a$$/c/'`
@


1.27
log
@Turn on the distrib lib bits in crunchgen by setting SRCLIBDIR.
Add the new files to the clean target's rm list.

"why not get it tested?" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2011/07/08 21:39:32 drahn Exp $
d132 1
a132 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
@


1.26
log
@Allow the elf rdsetroot operation to function on 32 bit and 64 bit binaries.
Enables developers to build arm ramdisk kernels on amd64 archs
OK deraadt@@ 'looked fine' miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2011/04/18 16:52:10 thib Exp $
d122 1
a122 1
	${MAKE} -f ${CBIN}.mk all
d133 1
@


1.25
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2011/04/15 03:11:22 deraadt Exp $
d105 3
a107 1
	${HOSTCC} -o elfrdsetroot ${TOP}/../common/elfrdsetroot.c
@


1.24
log
@No need to make depend kernels; ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2009/10/12 17:49:14 deraadt Exp $
d20 1
a20 1
VND?=		svnd0
@


1.23
log
@More inodes by default on the ramdisk, because otherwise a many-disk
system runs out of space; reported by William Yodlowsky
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2009/04/17 15:59:48 deraadt Exp $
d88 1
a88 1
	    ${MAKE} clean && ${MAKE} depend && COPTS=-Os ${MAKE}
@


1.22
log
@further minor unification
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2009/04/17 03:58:55 deraadt Exp $
d45 1
a45 1
NEWFSARGS= -m 0 -o space -i 8192
@


1.21
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2008/12/02 01:01:08 deraadt Exp $
d33 1
a33 1
REALIMAGE!=	echo /tmp/image.${PID}
@


1.20
log
@no longer need to compile rdsetroot with DEBUG
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2008/01/11 10:16:40 espie Exp $
a112 3
install:
	cp ${FLOPPY} ${DESTDIR}/snapshot/

d124 3
a126 3
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} ARCHDIR=${.CURDIR}/.. TARGDIR=${MOUNT_POINT} \
	    UTILS=${UTILS} sh ${UTILS}/runlist.sh ${LISTS}
d133 4
a136 2
beforeinstall:
	cp ${BSD.RD} ${DESTDIR}/snapshot
@


1.19
log
@cleanup: make -> ${MAKE} consistenly.
zap extra subshells.

okay miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2007/06/17 00:28:21 deraadt Exp $
d105 1
a105 1
	${HOSTCC} -DDEBUG -o elfrdsetroot ${TOP}/../common/elfrdsetroot.c
@


1.18
log
@Stop using disklabel -r.  The disklabel code does not know all the semantics
for pushing disklabels onto the disk (and besides that, it is buggy and
unreadable crap); thanks for help from krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2007/04/13 17:34:40 millert Exp $
d88 1
a88 1
	    make clean && make depend && COPTS=-Os make
d123 1
a123 1
	make -f ${CBIN}.mk all
@


1.17
log
@Update install media generation to the new semantics of the -c flag.
Also replace "newfs -O" with "newfs -O 0" now that -O takes an option.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2007/04/09 14:55:11 millert Exp $
d62 1
a62 1
	disklabel -w ${RAWLABEL} ${VND} ${FLOPPYTYPE}
d94 1
a94 1
	disklabel -w -r ${VND} ${DISKTYPE}
@


1.16
log
@Add -n to gzip flags.  Save a few bytes since we no longer save
the uncompressed filename in the gzip header.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2007/02/16 16:56:22 tsi Exp $
d45 1
a45 1
NEWFSARGS= -m 0 -o space -c 16 -i 8192
d63 1
a63 1
	newfs -m 0 -o space -i 524288 -c 80 ${VND_RDEV}
@


1.15
log
@s/GZIP/GZIPCMD/g in `make release` structure to avoid conflict with gzip's
use of a GZIP environment variable for extra command flags.

ok deraadt@@, millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2005/08/06 18:07:17 deraadt Exp $
d27 1
a27 1
GZIPFLAGS?=	-9v
@


1.14
log
@use perfect options for actual floppy newfs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2002/06/09 05:53:55 todd Exp $
d26 3
a28 3
GZIP?=			gzip
GZIPFLAGS?=		-9v
GZIPEXT?=		.gz
d57 1
a57 1
	${GZIP} ${GZIPFLAGS} < bsd.rd > bsd.gz
@


1.13
log
@knf
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2002/05/19 08:56:58 deraadt Exp $
d63 1
a63 1
	newfs ${NEWFSOPTS_FD} ${VND_RDEV}
@


1.12
log
@fix a copied typo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2002/05/07 18:44:05 deraadt Exp $
d91 1
a91 1
rd_setup: 
@


1.11
log
@fix conf file generation
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2002/04/30 09:18:20 deraadt Exp $
d65 1
a65 1
	cp ${DESTDIR}/usr/mdec/ofwboot ${MOUNT_POINT}$/
@


1.10
log
@use makeconf.awk throughout, delete instbin in Makefile
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2002/04/28 18:28:34 deraadt Exp $
d115 3
@


1.9
log
@use single shared mtree.conf
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2002/04/25 22:10:28 deraadt Exp $
d127 1
@


1.8
log
@runlist.sh & list2sh.awk unification
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2001/10/10 04:21:02 deraadt Exp $
d13 1
a13 1
MTREE=		${.CURDIR}/mtree.conf
@


1.7
log
@does this work?  I do not know yet
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2001/09/21 20:09:14 jason Exp $
d126 1
a126 1
	    sh ${TOP}/common/runlist.sh ${LISTS}
@


1.6
log
@More tweaks... this is mostly functional now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2001/09/20 23:15:59 jason Exp $
d15 5
d26 15
d54 22
a75 1
all:	${BSD_RD}
d86 4
a89 4
	cd ${TOP}/../../sys/arch/sparc64/conf && config RAMDISK
	cd ${TOP}/../../sys/arch/sparc64/compile/RAMDISK && \
	    make clean && make depend && make
	cp ${TOP}/../../sys/arch/sparc64/compile/RAMDISK/bsd bsd
d114 1
a114 1
	cp ${BSD_RD} ${DESTDIR}/snapshot/
d126 1
a126 1
	    sh ${TOP}/runlist.sh ${LISTS}
d130 1
a130 2
	*.o *.lo *.c bsd ${BSD_RD} \
	elfrdsetroot
@


1.5
log
@8k block size
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2001/09/20 01:19:32 jason Exp $
d23 1
a23 1
NBLKS=          8192
@


1.4
log
@Get this closer to working (mostly borrowed from macppc).
Still dies with:
warning: /dev/console error 20
panic: init died (signal 6, exit 0)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2001/09/19 16:05:42 jason Exp $
d25 1
a25 1
NEWFSARGS= -m 0 -o space -c 16 -i 4096
@


1.3
log
@no cd{REV}.fs here yet
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2001/09/18 15:29:22 jason Exp $
d84 2
a85 1
	    REV=${REV} TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh -d ${LISTS}
@


1.2
log
@use elfrdsetroot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2001/09/18 14:27:32 jason Exp $
d73 1
a73 1
	cp ${BSD_RD} cd${REV}.fs ${DESTDIR}/snapshot/
d92 1
a92 1
	cp ${BSD.RD} cd${REV}.fs ${DESTDIR}/snapshot
@


1.1
log
@initial cut at building ramdisk... will no doubt need tweaking
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2001/09/02 04:54:40 drahn Exp $
d36 1
a36 1
${BSD_RD}: ${CBIN} ${IMAGE} bsd rdsetroot
d38 1
a38 1
	${.OBJDIR}/rdsetroot ${BSD_RD} < ${IMAGE}
d63 2
a64 2
rdsetroot:	${TOP}/common/rdsetroot.c
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/common/rdsetroot.c
d89 1
a89 1
	rdsetroot
@

