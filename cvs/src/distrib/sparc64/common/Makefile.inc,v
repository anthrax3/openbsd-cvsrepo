head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.12
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.8
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.4
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.6
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.2
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.12.0.10
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.8
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.6
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.4
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.11.0.8
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.6
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.4
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.10.0.2
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.9.0.4
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.2
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.6.0.20
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.18
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.16
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.14
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.12
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.10
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@# @;


1.16
date	2014.11.22.15.02.27;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	rH4FDTIbh81WkVKX;

1.15
date	2013.10.18.14.04.05;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2013.10.15.22.46.53;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2013.10.14.00.00.13;	author guenther;	state Exp;
branches;
next	1.12;

1.12
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.17.03.58.55;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2008.12.02.01.01.07;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2008.01.11.10.16.40;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2007.06.17.00.28.21;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2007.04.13.17.34.40;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.30.09.18.20;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.28.18.28.34;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.25.22.10.28;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.21.07.30.58;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.30.02.33.23;	author krw;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.10.04.21.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Switch to using MI installboot, after a conversation with stsp.  He will
need this soon.
install tested by jsg
@
text
@#	$OpenBSD: Makefile.inc,v 1.15 2013/10/18 14:04:05 deraadt Exp $

TOP=		${.CURDIR}/..

.include "${TOP}/Makefile.inc"
IMAGE=		mr.fs
CBIN?=		instbin
CRUNCHCONF?=    ${.CURDIR}/../common/${CBIN}.conf
LISTS?=		${.CURDIR}/list
UTILS?=		${.CURDIR}/../../miniroot

MOUNT_POINT=	/mnt
MTREE=		${UTILS}/mtree.conf

XNAME?=		floppy
FS?=		${XNAME}${REV}.fs
VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$
REALIMAGE!=	echo /var/tmp/image.${PID}
LISTFLOPPY?=	${.CURDIR}/../common/list_floppy
FLOPPYSIZE?=	144
FLOPPYSECS?=	18
FLOPPYTYPE?=	floppy3

all:	${FS}

${FS}:	bsd.rd
	dd if=/dev/zero of=${REALIMAGE} bs=10k count=${FLOPPYSIZE}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${FLOPPYTYPE}
	newfs -m 0 -o space -i 524288 -c ${FLOPPYSIZE} ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTFLOPPY}
	installboot -v ${VND}
	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	umount ${MOUNT_POINT}
	vnconfig -u ${VND}
	cp ${REALIMAGE} ${FS}
	rm ${REALIMAGE}

DISKTYPE?=       rdroot
NBLKS?=          3510
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -m 0 -o space -i 4096

${IMAGE}: ${CBIN} rd_setup do_files rd_teardown

rd_setup: ${CBIN}
	dd if=/dev/zero of=${REALIMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}
	cp ${REALIMAGE} ${IMAGE}
	rm ${REALIMAGE}

rdsetroot:	${TOP}/../../common/elfrdsetroot.c
	${HOSTCC} -o rdsetroot ${TOP}/../../common/elfrdsetroot.c

unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}
	-/bin/rm -f ${IMAGE}

.PRECIOUS:	${IMAGE}

.ifdef RELEASEDIR
install:
.ifndef NOBSDRD
	cp bsd.rd ${RELEASEDIR}
.endif
	cp ${FS} ${RELEASEDIR}
.endif

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -E -D ${BSDSRCDIR} -L ${DESTDIR}/usr/lib \
	-c ${CBIN}.c -e ${CBIN} -m ${CBIN}.mk ${CRUNCHCONF}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all

do_files:
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}*.cache \
	    lib*.a lib*.olist ${CBIN}.map \
	    *.o *.lo *.c bsd bsd.rd bsd.gz bsd.strip floppy*.fs rdsetroot

.include <bsd.subdir.mk>
@


1.15
log
@cleanup elfrdsetroot references; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 2013/10/15 22:46:53 deraadt Exp $
d39 1
a39 1
	/usr/mdec/installboot -v ${DESTDIR}/usr/mdec/bootblk ${VND_CRDEV}
@


1.14
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 2013/10/14 00:00:13 guenther Exp $
d70 2
a71 2
rdsetroot:	${TOP}/../../common/rdsetroot.c
	${HOSTCC} -o rdsetroot ${TOP}/../../common/rdsetroot.c
@


1.13
log
@Turn on the distrib lib bits in crunchgen by setting SRCLIBDIR.
Add the new files to the clean target's rm list.

"why not get it tested?" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 2011/04/18 16:52:10 thib Exp $
d103 1
a103 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}*.cache \
@


1.12
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 2009/04/17 03:58:55 deraadt Exp $
d93 1
a93 1
	${MAKE} -f ${CBIN}.mk all
d104 1
@


1.11
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 2008/12/02 01:01:07 deraadt Exp $
d17 1
a17 1
VND?=		svnd0
@


1.10
log
@no longer need to compile rdsetroot with DEBUG
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2008/01/11 10:16:40 espie Exp $
d38 1
a38 1
	    sh ${UTILS}/runlist.sh ${LISTFLOPPY}
d80 1
d83 3
a85 1
	cp bsd.rd ${DESTDIR}/snapshot/bsd.rd
a86 1
	cp ${FS} ${DESTDIR}/snapshot/${FS}
d99 1
a99 1
	    sh ${UTILS}/runlist.sh ${LISTS}
@


1.9
log
@cleanup: make -> ${MAKE} consistenly.
zap extra subshells.

okay miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2007/06/17 00:28:21 deraadt Exp $
d71 1
a71 1
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/../../common/rdsetroot.c
@


1.8
log
@Stop using disklabel -r.  The disklabel code does not know all the semantics
for pushing disklabels onto the disk (and besides that, it is buggy and
unreadable crap); thanks for help from krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2007/04/13 17:34:40 millert Exp $
d91 1
a91 1
	make -f ${CBIN}.mk all
@


1.7
log
@Update install media generation to the new semantics of the -c flag.
Also replace "newfs -O" with "newfs -O 0" now that -O takes an option.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 2002/04/30 09:18:20 deraadt Exp $
d33 1
a33 1
	disklabel -w -r ${VND} ${FLOPPYTYPE}
d58 1
a58 1
	disklabel -w -r ${VND} ${DISKTYPE}
@


1.6
log
@use makeconf.awk throughout, delete instbin in Makefile
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 2002/04/28 18:28:34 deraadt Exp $
d34 1
a34 1
	newfs -m 0 -o space -i 524288 -c 80 ${VND_RDEV}
d51 1
a51 1
NEWFSARGS= -m 0 -o space -c 16 -i 4096
@


1.5
log
@use single shared mtree.conf
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 2002/04/25 22:10:28 deraadt Exp $
d98 1
@


1.4
log
@runlist.sh & list2sh.awk unification
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 2002/04/21 07:30:58 deraadt Exp $
d13 1
a13 1
MTREE=		${.CURDIR}/../common/mtree.conf
@


1.3
log
@bit by bit i will fix this madness
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 2002/03/30 02:33:23 krw Exp $
d10 1
d37 2
a38 1
	    TARGDIR=${MOUNT_POINT} sh ${TOP}/common/runlist.sh ${LISTFLOPPY}
d96 2
a97 1
	    REV=${REV} TARGDIR=${MOUNT_POINT} sh ${TOP}/common/runlist.sh ${LISTS}
@


1.2
log
@Make customizing floppy contents easier by accepting a
user supplied value for LISTFLOPPY.

Suggestion by peter.galbavy@@knowtion.net.

ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2001/10/10 04:21:02 deraadt Exp $
d9 1
a9 1
LISTS?=		${.CURDIR}/../common/list ${.CURDIR}/list
@


1.1
log
@does this work?  I do not know yet
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 2001/05/11 15:23:07 deraadt Exp $
d22 1
a22 1
LISTFLOPPY=	${.CURDIR}/../common/list_floppy
@

