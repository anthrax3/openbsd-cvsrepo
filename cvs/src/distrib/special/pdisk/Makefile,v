head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.10
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.8
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.10
date	2016.01.27.14.19.59;	author krw;	state Exp;
branches;
next	1.9;
commitid	EqZjPBGHnNBMYpZq;

1.9
date	2016.01.25.23.43.20;	author krw;	state Exp;
branches;
next	1.8;
commitid	Qe66eD6zrMyPrXqP;

1.8
date	2016.01.18.03.10.16;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	Arv1hfw8WATTXRaO;

1.7
date	2016.01.16.21.59.30;	author krw;	state Exp;
branches;
next	1.6;
commitid	z6io6NihZRamkhqi;

1.6
date	2016.01.16.14.49.28;	author krw;	state Exp;
branches;
next	1.5;
commitid	tickLY4AeBovASt0;

1.5
date	2016.01.15.16.39.20;	author krw;	state Exp;
branches;
next	1.4;
commitid	jCu7JX5yifR514Uo;

1.4
date	2016.01.14.04.17.40;	author krw;	state Exp;
branches;
next	1.3;
commitid	FFi8VPodP6ImE2jX;

1.3
date	2016.01.12.20.09.39;	author krw;	state Exp;
branches;
next	1.2;
commitid	WFEddFcNLm6A2VYQ;

1.2
date	2016.01.12.07.58.33;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	6McVmKUrNV893AWd;

1.1
date	2014.12.23.17.16.02;	author deraadt;	state Exp;
branches;
next	;
commitid	T61appZAd8QZxNl5;


desc
@@


1.10
log
@Check block 0 signature, physical block size and physical block count when
reading partition map.

Check for unmapped physical blocks and overlapping partitions when reading
partition map.

No need for duplicate checks in validate_map(), so remove validate.c from
build and 'v' command from code and docs.
@
text
@#	$Id: Makefile,v 1.9 2016/01/25 23:43:20 krw Exp $

.if ${MACHINE} == "macppc"
PROG=	pdisk
LDADD=  -lutil
DPADD=  ${LIBUTIL}
CFLAGS+=-Wall

SRCS=	dump.c file_media.c io.c partition_map.c pdisk.c

.else
NOPROG=yes
.endif

MAN=	pdisk.8
MANSUBDIR=macppc

.PATH:  ${.CURDIR}/../../../sbin/pdisk
.include <bsd.prog.mk>
@


1.9
log
@Use new read/write_block0 and read/write_dpme which handle any
endian or alignment issues forcefully. Removes need for convert_*
functions so unhook convert.c from build. read/write_block become
static functions inside file_media.c.

Tweak struct block0 to stop trying to handle alignment issues by clever
declaration. Rely on the new functions to accurately translate between
on-disk and in-memory layouts.

Enables pdisk to work on amd64 and likely other architectures if
it's ever desirable. Does bring back DEV_BSIZE to pdisk.c since the
in-memory structure will *not* be 512 bytes on other archs.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.8 2016/01/18 03:10:16 deraadt Exp $
d9 1
a9 3
SRCS=	dump.c \
	file_media.c io.c partition_map.c \
	pdisk.c validate.c
@


1.8
log
@sync to main
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.7 2016/01/16 21:59:30 krw Exp $
d9 1
a9 1
SRCS=	convert.c dump.c \
@


1.7
log
@No need to abstract malloc(), so replace new_file_media() with
malloc().

Removes last use of last used function in media.c, so unhook that
from the Makefile and remove forward declarations from media.h.

No functional change.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.6 2016/01/16 14:49:28 krw Exp $
d10 1
a10 1
	io.c partition_map.c \
@


1.6
log
@Nuke support for 1024- and 2048-byte sector devices. Error out if
anything other than 512-byte sectors are encountered. Unlink
deblock_media.c from the build.

ok jasper@@
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.5 2016/01/15 16:39:20 krw Exp $
d10 1
a10 1
	file_media.c io.c media.c partition_map.c \
@


1.5
log
@Replace bitfield_get() and bitfield_set() abstraction with simple masking
operations since all the uses but 1 are for 1 bit fields. No functional
change intended.

Unhook bitfield.c from build.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.4 2016/01/14 04:17:40 krw Exp $
d9 1
a9 1
SRCS=	convert.c deblock_media.c dump.c \
@


1.4
log
@Nuke 'HFS_name' field which was not referenced now other than setting
it and freeing it. Unhook hfs_misc.c from build since it now longer
contains anything being used.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.3 2016/01/12 20:09:39 krw Exp $
d9 1
a9 1
SRCS=	bitfield.c convert.c deblock_media.c dump.c \
@


1.3
log
@Use normal err/errx/warn/warnx rather than handrolling new ones. Move
usage() to pdisk.c and nuke do_help() and '-h'.

ok jasper@@ deraadt@@
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.2 2016/01/12 07:58:33 deraadt Exp $
d10 1
a10 1
	file_media.c hfs_misc.c io.c media.c partition_map.c \
@


1.2
log
@get caught up with files krw removed
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.1 2014/12/23 17:16:02 deraadt Exp $
d9 1
a9 1
SRCS=	bitfield.c convert.c deblock_media.c dump.c errors.c \
@


1.1
log
@/bin and /sbin are moving towards static PIE, so on many architectures
the PIC .o files are unsuitable for static "instbin".  This adds more
work at build time, but the result will be optimized for size.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.12 2014/07/16 20:05:03 okan Exp $
d10 2
a11 2
	file_media.c hfs_misc.c io.c media.c partition_map.c pathname.c \
	pdisk.c util.c validate.c
@

