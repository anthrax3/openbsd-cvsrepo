head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.10
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.14
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.12
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.10
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.8
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.6
	OPENBSD_5_0:1.7.0.4
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5;
locks; strict;
comment	@ * @;


1.9
date	2015.01.16.06.39.34;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	Uu5nFG3wCl0LACBb;

1.8
date	2014.05.03.00.27.19;	author chl;	state Exp;
branches;
next	1.7;

1.7
date	2010.11.23.12.37.25;	author halex;	state Exp;
branches;
next	1.6;

1.6
date	2010.04.03.21.32.53;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.03.23.44.53;	author krw;	state Exp;
branches;
next	1.4;

1.4
date	2009.04.20.16.10.39;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.19.17.56.03;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.19.00.59.39;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.19.00.57.44;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@/*	$OpenBSD: sysctl.c,v 1.8 2014/05/03 00:27:19 chl Exp $	*/

/*
 * Copyright (c) 2009 Theo de Raadt <deraadt@@openbsd.org>
 * Copyright (c) 2007 Kenneth R. Westerback <krw@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/sysctl.h>
#include <sys/uio.h>

#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct var {
	char *name;
	int (*print)(struct var *);
	int nmib;
	int mib[3];
};

int	pstring(struct var *);
int	pint(struct var *);

struct var vars[] = {
	{ "kern.osrelease", pstring, 2,
	    { CTL_KERN, KERN_OSRELEASE }},
	{ "hw.machine", pstring, 2,
	    { CTL_HW, HW_MACHINE }},
	{ "hw.model", pstring, 2,
	    { CTL_HW, HW_MODEL }},
	{ "hw.product", pstring, 2,
	    { CTL_HW, HW_PRODUCT }},
	{ "hw.disknames", pstring, 2,
	    { CTL_HW, HW_DISKNAMES }},
	{ "hw.ncpufound", pint, 2,
	    { CTL_HW, HW_NCPUFOUND }},
};

int	nflag;
char	*name;

int
pint(struct var *v)
{
	int n;
	size_t len = sizeof(n);

	if (sysctl(v->mib, v->nmib, &n, &len, NULL, 0) != -1) {
		if (nflag == 0)
			printf("%s=", v->name);
		printf("%d\n", n);
		return (0);
	}
	return (1);
}

int
pstring(struct var *v)
{
	char *p;
	size_t len;

	if (sysctl(v->mib, v->nmib, NULL, &len, NULL, 0) != -1)
		if ((p = malloc(len)) != NULL)
			if (sysctl(v->mib, v->nmib, p, &len, NULL, 0) != -1) {
				if (nflag == 0)
					printf("%s=", v->name);
				printf("%s\n", p);
				return (0);
			}
	return (1);
}

int
main(int argc, char *argv[])
{
	int ch, i;

	while ((ch = getopt(argc, argv, "n")) != -1) {
		switch (ch) {
		case 'n':
			nflag = 1;
			break;
		default:
			fprintf(stderr, "usage: sysctl [-n] name\n");
			exit(1);
		}
	}

	argc -= optind;
	argv += optind;

	if (argc == 0) {
		for (i = 0; i < sizeof(vars)/sizeof(vars[0]); i++)
			(vars[i].print)(&vars[i]);
		exit(0);
	}

	while (argc--) {
		name = *argv++;

		for (i = 0; i < sizeof(vars)/sizeof(vars[0]); i++) {
			if (strcmp(name, vars[i].name) == 0) {
				(vars[i].print)(&vars[i]);
				break;
			}
		}
	}

	exit(0);
}	
@


1.8
log
@remove unused variable

ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysctl.c,v 1.7 2010/11/23 12:37:25 halex Exp $	*/
d19 2
a20 1
#include <sys/param.h>
@


1.7
log
@do not print the terminating null character after strings

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysctl.c,v 1.6 2010/04/03 21:32:53 miod Exp $	*/
a73 1
	struct iovec iov[2];
@


1.6
log
@Add hw.product to the bsd.rd sysctl(8) binary. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysctl.c,v 1.5 2009/06/03 23:44:53 krw Exp $	*/
d83 1
a83 2
				fwrite(p, len, 1, stdout);
				printf("\n");
@


1.5
log
@Add hw.machine and kern.osrelease to install media sysctl. Using
these rather than hard coded variables allows the rationalization
of the greeting by moving it into dot.profile. Whack at dot.profile
a lot. Eliminate the 'Proceed with ...' question as unneeded.
Eliminate welcome().

ok deraadt@@ "I like" todd@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysctl.c,v 1.4 2009/04/20 16:10:39 jasper Exp $	*/
d45 2
@


1.4
log
@- add missing header for strcmp() .
- add hw.model which could help future sgi install scripts with deciding
  which kernel to pick

"commit" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysctl.c,v 1.3 2009/04/19 17:56:03 deraadt Exp $	*/
d39 4
@


1.3
log
@If hw.ncpufound > 1, have the install script automatically prefer to use
bsd.mp instead of bsd (using -- mv bsd bsd.sp; mv bsd.mp bsd). anyone
who brings up boot.conf is an i386 bigot.
tested on almost all platforms that can do this, ok various people
@
text
@d1 1
a1 1
/*	$OpenBSD: sysctl.c,v 1.2 2009/04/19 00:59:39 deraadt Exp $	*/
d26 1
d39 2
@


1.2
log
@Use sysctl -n hw.disknames instead of the custom disknames program
@
text
@d1 1
a1 1
/*	$OpenBSD: sysctl.c,v 1.1 2009/04/19 00:57:44 deraadt Exp $	*/
d40 2
@


1.1
log
@A mini sysctl(8) that only knows a few variables we need to know in
the install script.  For now, just hw.disknames
@
text
@d1 1
a1 1
/*	$OpenBSD: disknames.c,v 1.4 2007/02/14 23:05:59 krw Exp $	*/
d4 1
@

