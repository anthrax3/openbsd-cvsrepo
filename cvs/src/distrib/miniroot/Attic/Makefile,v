head	1.34;
access;
symbols
	OPENBSD_5_2:1.33.0.6
	OPENBSD_5_2_BASE:1.33
	OPENBSD_5_1_BASE:1.33
	OPENBSD_5_1:1.33.0.4
	OPENBSD_5_0:1.33.0.2
	OPENBSD_5_0_BASE:1.33
	OPENBSD_4_9:1.32.0.2
	OPENBSD_4_9_BASE:1.32
	OPENBSD_4_8:1.31.0.6
	OPENBSD_4_8_BASE:1.31
	OPENBSD_4_7:1.31.0.2
	OPENBSD_4_7_BASE:1.31
	OPENBSD_4_6:1.31.0.4
	OPENBSD_4_6_BASE:1.31
	OPENBSD_4_5:1.29.0.6
	OPENBSD_4_5_BASE:1.29
	OPENBSD_4_4:1.29.0.4
	OPENBSD_4_4_BASE:1.29
	OPENBSD_4_3:1.29.0.2
	OPENBSD_4_3_BASE:1.29
	OPENBSD_4_2:1.28.0.2
	OPENBSD_4_2_BASE:1.28
	OPENBSD_4_1:1.27.0.14
	OPENBSD_4_1_BASE:1.27
	OPENBSD_4_0:1.27.0.12
	OPENBSD_4_0_BASE:1.27
	OPENBSD_3_9:1.27.0.10
	OPENBSD_3_9_BASE:1.27
	OPENBSD_3_8:1.27.0.8
	OPENBSD_3_8_BASE:1.27
	OPENBSD_3_7:1.27.0.6
	OPENBSD_3_7_BASE:1.27
	OPENBSD_3_6:1.27.0.4
	OPENBSD_3_6_BASE:1.27
	OPENBSD_3_5:1.27.0.2
	OPENBSD_3_5_BASE:1.27
	OPENBSD_3_4:1.26.0.2
	OPENBSD_3_4_BASE:1.26
	OPENBSD_3_3:1.25.0.4
	OPENBSD_3_3_BASE:1.25
	OPENBSD_3_2:1.25.0.2
	OPENBSD_3_2_BASE:1.25
	OPENBSD_3_1:1.23.0.4
	OPENBSD_3_1_BASE:1.23
	OPENBSD_3_0:1.23.0.2
	OPENBSD_3_0_BASE:1.23
	OPENBSD_2_9:1.22.0.12
	OPENBSD_2_9_BASE:1.22
	OPENBSD_2_8:1.22.0.10
	OPENBSD_2_8_BASE:1.22
	OPENBSD_2_7:1.22.0.8
	OPENBSD_2_7_BASE:1.22
	OPENBSD_2_6:1.22.0.6
	OPENBSD_2_6_BASE:1.22
	OPENBSD_2_5:1.22.0.4
	OPENBSD_2_5_BASE:1.22
	OPENBSD_2_4:1.22.0.2
	OPENBSD_2_4_BASE:1.22
	OPENBSD_2_3:1.21.0.2
	OPENBSD_2_3_BASE:1.21
	OPENBSD_2_2:1.20.0.2
	OPENBSD_2_2_BASE:1.20
	OPENBSD_2_1:1.16.0.2
	OPENBSD_2_1_BASE:1.16
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4;
locks; strict;
comment	@# @;


1.34
date	2012.09.10.22.21.02;	author deraadt;	state dead;
branches;
next	1.33;

1.33
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.32;

1.32
date	2010.10.18.04.07.48;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2009.04.12.16.12.53;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2008.01.11.10.16.40;	author espie;	state Exp;
branches;
next	1.28;

1.28
date	2007.06.17.00.28.21;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	2004.02.28.04.53.30;	author jolan;	state Exp;
branches;
next	1.26;

1.26
date	2003.07.22.17.15.12;	author brad;	state Exp;
branches;
next	1.25;

1.25
date	2002.08.05.15.25.43;	author art;	state Exp;
branches;
next	1.24;

1.24
date	2002.04.30.07.24.22;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2001.09.04.22.25.02;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	98.06.27.20.52.08;	author todd;	state Exp;
branches;
next	1.21;

1.21
date	98.03.08.00.26.22;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	97.10.01.22.12.57;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	97.09.26.02.09.59;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	97.09.21.11.45.56;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	97.09.05.21.16.53;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	97.05.23.18.31.28;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	97.05.21.01.16.33;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	97.05.14.18.39.02;	author niklas;	state Exp;
branches;
next	1.13;

1.13
date	97.05.11.20.01.58;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	97.05.06.17.10.32;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	97.05.03.22.20.57;	author niklas;	state Exp;
branches;
next	1.10;

1.10
date	97.05.02.08.45.41;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	97.05.01.11.07.11;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	97.05.01.08.46.03;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.05.01.08.43.09;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.04.29.20.37.09;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.10.12.01.35.19;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.10.08.07.04.16;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.09.05.21.26.39;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.07.13.22.47;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.26.18.35.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.34
log
@turn sparc miniroot into a proper ramdisk (thereby removing the last
consumer of the ../miniroot build method)
ok miod, product of this tested by todd
@
text
@#	$OpenBSD: Makefile,v 1.33 2011/04/18 16:52:10 thib Exp $

REV=		${OSrev}

CBIN=		instbin
ARCHDIR=	${.CURDIR}/../${MACHINE}/miniroot

.include <bsd.own.mk>

.if exists(${ARCHDIR}/Makefile.inc)
.include "${ARCHDIR}/Makefile.inc"
.endif

UTILS=		${.CURDIR}

MOUNT_POINT?=	/mnt
VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
DISKTYPE=	miniroot
PID!=		echo $$$$
REALIMAGE!=	echo /var/tmp/image.${PID}
IMAGE?=		miniroot${REV}.fs
IMAGESIZE?=	10240 # 5MB in 512 byte blocks
NEWFSOPTS?=
NEWFS_WILL_FAIL?=false
.if ${ELF_TOOLCHAIN:L} == "yes"
CRUNCHGENOPTS?=-E
.else
CRUNCHGENOPTS?=
.endif

LISTS=		${.CURDIR}/list ${ARCHDIR}/list.local
CRUNCHCONF=	${CBIN}.conf
MTREE=		${.CURDIR}/mtree.conf

.ifndef DESTDIR
all:
	@@echo setenv DESTDIR before making a miniroot!
	@@false
.else

bsd:
	cd ${.CURDIR}/../../sys/arch/${MACHINE}/conf && config GENERIC
	cd ${.CURDIR}/../../sys/arch/${MACHINE}/compile/GENERIC && \
	    ${MAKE} clean && ${MAKE} depend && ${MAKE}
	cp ${.CURDIR}/../../sys/arch/${MACHINE}/compile/GENERIC/bsd bsd

all: ${CBIN} bsd
	dd if=/dev/zero of=${REALIMAGE} count=${IMAGESIZE}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs -m 0 -o space ${NEWFSOPTS} ${VND_RDEV} || ${NEWFS_WILL_FAIL}
	mount ${VND_DEV} ${MOUNT_POINT}
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	REV=${REV} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    UTILS=${UTILS} ARCHDIR=${ARCHDIR} TARGDIR=${MOUNT_POINT} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}
	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	umount ${MOUNT_POINT}
	vnconfig -u ${VND_DEV}
	cp ${REALIMAGE} ${IMAGE}
	rm ${REALIMAGE}

${CBIN}.conf: ${LISTS}
	awk -f ${.CURDIR}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen ${CRUNCHGENOPTS} -D ${.CURDIR}/../.. -L ${DESTDIR}/usr/lib \
	    ${CRUNCHCONF}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk all

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
	${CBIN}.conf *.o *.lo *.c

.endif	# DESTDIR check

.ifdef RELEASEDIR
beforeinstall:
	cp ${IMAGE} ${RELEASEDIR}
.endif

unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}
	-/bin/rm -f ${IMAGE}

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.33
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 2010/10/18 04:07:48 deraadt Exp $
@


1.32
log
@Place a smaller spwd.db onto the install media.  Be consistant with the naming
of the "additional" list files (for architectures which split the list)
Then... cleanup some TZ which it is clear should not have been placed onto
certain media which don't have the space for them.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2009/04/17 03:58:54 deraadt Exp $
d17 1
a17 1
VND?=		svnd0
@


1.31
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2009/04/12 16:12:53 deraadt Exp $
d33 1
a33 1
LISTS=		${.CURDIR}/list ${ARCHDIR}/list
@


1.30
log
@run make depend for kernel, too; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2008/01/11 10:16:40 espie Exp $
d14 2
d56 3
a58 2
	REV=${REV} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} ARCHDIR=${ARCHDIR} \
	    TARGDIR=${MOUNT_POINT} sh ${.CURDIR}/runlist.sh ${LISTS}
d82 3
d86 2
a87 3
	cp ${IMAGE} ${DESTDIR}/snapshot

.endif	# DESTDIR check
@


1.29
log
@cleanup: make -> ${MAKE} consistenly.
zap extra subshells.

okay miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2007/06/17 00:28:21 deraadt Exp $
d44 1
a44 1
	    ${MAKE} clean && ${MAKE}
@


1.28
log
@Stop using disklabel -r.  The disklabel code does not know all the semantics
for pushing disklabels onto the disk (and besides that, it is buggy and
unreadable crap); thanks for help from krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2004/02/28 04:53:30 jolan Exp $
d44 1
a44 1
	    make clean && make
d73 1
a73 1
	make -f ${CBIN}.mk all
@


1.27
log
@makeing->making
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2003/07/22 17:15:12 brad Exp $
a33 1
RAWLABEL?=	-r
d50 1
a50 1
	disklabel -w ${RAWLABEL} ${VND} ${DISKTYPE}
@


1.26
log
@- use :L variable modifier with ELF_TOOLCHAIN variable
- change 2 instances of the check from != "yes" to == "no"

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2002/08/05 15:25:43 art Exp $
d38 1
a38 1
	@@echo setenv DESTDIR before makeing a miniroot!
@


1.25
log
@If ELF_TOOLCHAIN, pass -E to crunchgen and build elfrdsetroot instead
of rdsetroot.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2002/04/30 07:24:22 deraadt Exp $
d25 1
a25 1
.if ${ELF_TOOLCHAIN} == "yes"
@


1.24
log
@first pass of instbin removal movement
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2001/09/04 22:25:02 deraadt Exp $
d8 2
d25 3
d29 1
@


1.23
log
@MB == megabytes, Mb == megabits
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 1998/06/27 20:52:08 todd Exp $
d51 1
@


1.22
log
@s/23/${OSrev}/
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 1998/03/08 00:26:22 deraadt Exp $
d20 1
a20 1
IMAGESIZE?=	10240 # 5Mb in 512 byte blocks
@


1.21
log
@moving to 2.3
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 1997/10/01 22:12:57 deraadt Exp $
d3 1
a3 1
REV=		23
@


1.20
log
@21 -> 22
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 1997/09/26 02:09:59 millert Exp $
d3 1
a3 1
REV=		22
@


1.19
log
@Fix some newfs usage.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 1997/09/21 11:45:56 deraadt Exp $
d3 1
a3 2
# Revision is 2.1
REV=		21
@


1.18
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 1997/09/05 21:16:53 deraadt Exp $
d47 1
a47 2
	newfs -m 0 -o space ${NEWFSOPTS} ${VND_RDEV} ${DISKTYPE} || \
	    ${NEWFS_WILL_FAIL}
@


1.17
log
@make depend (in this case) is a total waste of time
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.16 1997/05/23 18:31:28 deraadt Exp $
#	$NetBSD: Makefile,v 1.2.4.3 1996/07/04 07:05:32 leo Exp $
@


1.16
log
@${RAWLABEL}
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 1997/05/21 01:16:33 deraadt Exp $
d41 1
a41 1
	    make clean && make depend && make
@


1.15
log
@always expose unconfig target
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 1997/05/14 18:39:02 niklas Exp $
d30 1
d47 1
a47 1
	disklabel -w -r ${VND} ${DISKTYPE}
@


1.14
log
@Use svnds and remove ugly cache flushing
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 1997/05/11 20:01:58 millert Exp $
a60 5
unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}
	-/bin/rm -f ${IMAGE}

d79 6
@


1.13
log
@Build filesystems images in /var/tmp to avoid panic'ing if /tmp is MFS.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1997/05/06 17:10:32 niklas Exp $
d15 1
a15 1
VND?=		vnd0
a57 1
	cat /*bin/* > /dev/null
@


1.12
log
@Allow archs override the crunchgen options
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1997/05/03 22:20:57 niklas Exp $
d20 1
a20 1
REALIMAGE!=	echo /tmp/image.${PID}
@


1.11
log
@Allow certain ports to tell that newfs might fail
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1997/05/02 08:45:41 niklas Exp $
d25 1
d71 2
a72 1
	crunchgen -D ${.CURDIR}/../.. -L ${DESTDIR}/usr/lib ${CRUNCHCONF}
@


1.10
log
@Correct paths to the sys/ tree.  Former path happened to work
in the default case, but was really wrong nonetheless.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1997/05/01 11:07:11 niklas Exp $
d24 1
d46 2
a47 1
	newfs -m 0 -o space ${NEWFSOPTS} ${VND_RDEV} ${DISKTYPE}
@


1.9
log
@Our cores are of the form *.core
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1997/05/01 08:46:03 deraadt Exp $
d36 2
a37 2
	cd ${.CURDIR}/../../../../sys/arch/${MACHINE}/conf && config GENERIC
	cd ${.CURDIR}/../../../../sys/arch/${MACHINE}/compile/GENERIC && \
d39 1
a39 1
	cp ${.CURDIR}/../../../../sys/arch/${MACHINE}/compile/GENERIC/bsd bsd
@


1.8
log
@install target
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1997/05/01 08:43:09 deraadt Exp $
d74 1
a74 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
@


1.7
log
@unconfig right dev
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1997/04/29 20:37:09 niklas Exp $
d76 3
@


1.6
log
@Use the new style to build vnds.  General 2.1 cleanup.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2.4.3 1996/07/04 07:05:32 leo Exp $
d61 1
a61 1
	-vnconfig -u ${VND_DEV}
@


1.5
log
@build kernel nicely
@
text
@d1 1
d4 2
a5 2
# Revision is 1.2
REV=		20
d15 4
a18 3
VND?=		vnd0a
VND_DEV=	/dev/${VND}
VND_RDEV=	/dev/r${VND}
d43 3
a45 2
	vnconfig -v -c ${VND_DEV} ${REALIMAGE}
	newfs -m 0 -o space ${NEWFSOPTS} ${VND_RDEV} miniroot
d57 1
@


1.4
log
@2.0, deal with nfs, build kernel
@
text
@d35 2
a36 2
	cd ${.CURDIR}/../../../../sys/arch/${MACHINE}/compile/GENERIC &&
	    make clean && make depend && make &&
@


1.3
log
@sync to netbsd
@
text
@d4 1
a4 1
REV=		12
d17 3
a19 1
IMAGE?=		miniroot-${REV}.fs
d33 9
a41 3
all: ${CBIN}
	dd if=/dev/zero of=${IMAGE} count=${IMAGESIZE}
	vnconfig -v -c ${VND_DEV} ${IMAGE}
d53 1
@


1.2
log
@update from netbsd
@
text
@d1 1
a1 1
#	$NetBSD: Makefile,v 1.2 1996/01/06 22:40:58 pk Exp $
d3 2
a4 2
# Revision is 1.1A
REV=		11A
d9 4
d14 6
a19 5
VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
IMAGE?=		xxx-${REV}.fs
MDEC=		${DESTDIR}/usr/mdec
d21 1
a21 1
LISTS=		${ARCHDIR}/list ${.CURDIR}/list
d25 6
d32 1
a32 1
	dd if=/dev/zero of=${IMAGE} bs=512k count=10
d34 1
a34 1
	newfs -m 0 -o space ${VND_RDEV} miniroot
d37 1
a37 1
	CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} ARCHDIR=${ARCHDIR} \
d64 1
@


1.1
log
@update from netbsd
@
text
@d1 1
a1 1
#	$NetBSD: Makefile,v 1.1 1995/12/18 22:47:26 pk Exp $
d50 2
a51 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache *.o *.lo *.c
@

