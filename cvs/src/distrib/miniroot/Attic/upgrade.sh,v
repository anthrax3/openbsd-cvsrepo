head	1.91;
access;
symbols
	OPENBSD_5_9:1.89.0.2
	OPENBSD_5_9_BASE:1.89
	OPENBSD_5_8:1.87.0.2
	OPENBSD_5_8_BASE:1.87
	OPENBSD_5_7:1.82.0.4
	OPENBSD_5_7_BASE:1.82
	OPENBSD_5_6:1.78.0.2
	OPENBSD_5_6_BASE:1.78
	OPENBSD_5_5:1.76.0.4
	OPENBSD_5_5_BASE:1.76
	OPENBSD_5_4:1.72.0.6
	OPENBSD_5_4_BASE:1.72
	OPENBSD_5_3:1.72.0.4
	OPENBSD_5_3_BASE:1.72
	OPENBSD_5_2:1.72.0.2
	OPENBSD_5_2_BASE:1.72
	OPENBSD_5_1_BASE:1.71
	OPENBSD_5_1:1.71.0.4
	OPENBSD_5_0:1.71.0.2
	OPENBSD_5_0_BASE:1.71
	OPENBSD_4_9:1.70.0.6
	OPENBSD_4_9_BASE:1.70
	OPENBSD_4_8:1.70.0.4
	OPENBSD_4_8_BASE:1.70
	OPENBSD_4_7:1.70.0.2
	OPENBSD_4_7_BASE:1.70
	OPENBSD_4_6:1.69.0.4
	OPENBSD_4_6_BASE:1.69
	OPENBSD_4_5:1.65.0.4
	OPENBSD_4_5_BASE:1.65
	OPENBSD_4_4:1.65.0.2
	OPENBSD_4_4_BASE:1.65
	OPENBSD_4_3:1.64.0.8
	OPENBSD_4_3_BASE:1.64
	OPENBSD_4_2:1.64.0.6
	OPENBSD_4_2_BASE:1.64
	OPENBSD_4_1:1.64.0.4
	OPENBSD_4_1_BASE:1.64
	OPENBSD_4_0:1.64.0.2
	OPENBSD_4_0_BASE:1.64
	OPENBSD_3_9:1.62.0.2
	OPENBSD_3_9_BASE:1.62
	OPENBSD_3_8:1.61.0.2
	OPENBSD_3_8_BASE:1.61
	OPENBSD_3_7:1.59.0.2
	OPENBSD_3_7_BASE:1.59
	OPENBSD_3_6:1.58.0.2
	OPENBSD_3_6_BASE:1.58
	OPENBSD_3_5:1.56.0.2
	OPENBSD_3_5_BASE:1.56
	OPENBSD_3_4:1.54.0.2
	OPENBSD_3_4_BASE:1.54
	OPENBSD_3_3:1.48.0.2
	OPENBSD_3_3_BASE:1.48
	OPENBSD_3_2:1.43.0.2
	OPENBSD_3_2_BASE:1.43
	OPENBSD_3_1:1.31.0.2
	OPENBSD_3_1_BASE:1.31
	OPENBSD_3_0:1.18.0.2
	OPENBSD_3_0_BASE:1.18
	OPENBSD_2_9:1.16.0.2
	OPENBSD_2_9_BASE:1.16
	OPENBSD_2_8:1.15.0.4
	OPENBSD_2_8_BASE:1.15
	OPENBSD_2_7:1.15.0.2
	OPENBSD_2_7_BASE:1.15
	OPENBSD_2_6:1.11.0.2
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.9.0.4
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@# @;


1.91
date	2016.04.02.12.36.49;	author rpe;	state dead;
branches;
next	1.90;
commitid	b6IVJTvHTKJuKLJa;

1.90
date	2016.04.02.12.23.46;	author rpe;	state Exp;
branches;
next	1.89;
commitid	RiZ3BjQb9aPCOLdl;

1.89
date	2015.12.23.17.51.08;	author rpe;	state Exp;
branches;
next	1.88;
commitid	VM5Ma5xfldplhPDu;

1.88
date	2015.12.06.09.30.27;	author rpe;	state Exp;
branches;
next	1.87;
commitid	OPbJJ8HYzLqIzfKL;

1.87
date	2015.04.07.09.59.38;	author rpe;	state Exp;
branches;
next	1.86;
commitid	Dc2oH4EajYFZ0RUv;

1.86
date	2015.04.06.21.36.56;	author rpe;	state Exp;
branches;
next	1.85;
commitid	ooXaEpB8IOe5BXDh;

1.85
date	2015.04.04.14.21.01;	author rpe;	state Exp;
branches;
next	1.84;
commitid	PLsgWFhLbeuIMtBT;

1.84
date	2015.03.28.00.03.05;	author rpe;	state Exp;
branches;
next	1.83;
commitid	hxX5UqHok9DNQnHK;

1.83
date	2015.03.11.21.00.35;	author krw;	state Exp;
branches;
next	1.82;
commitid	1VeYYTWfKdJjaTAv;

1.82
date	2015.01.30.17.11.00;	author sthen;	state Exp;
branches;
next	1.81;
commitid	DRiOPPJNUp9nFI8N;

1.81
date	2015.01.29.17.47.08;	author deraadt;	state Exp;
branches;
next	1.80;
commitid	h4MpRlrhjECs6s3A;

1.80
date	2014.12.10.08.57.41;	author giovanni;	state Exp;
branches;
next	1.79;
commitid	HI0lBSq1FsNLfNdu;

1.79
date	2014.08.10.14.59.22;	author rpe;	state Exp;
branches;
next	1.78;
commitid	8cc3GNm52cNZPT6R;

1.78
date	2014.08.03.16.00.15;	author rpe;	state Exp;
branches;
next	1.77;
commitid	ZItqpo4ORgClsBVY;

1.77
date	2014.03.20.20.01.28;	author krw;	state Exp;
branches;
next	1.76;

1.76
date	2014.02.21.17.11.02;	author deraadt;	state Exp;
branches;
next	1.75;

1.75
date	2014.02.21.16.30.14;	author deraadt;	state Exp;
branches;
next	1.74;

1.74
date	2014.02.21.16.29.08;	author deraadt;	state Exp;
branches;
next	1.73;

1.73
date	2014.01.05.01.53.35;	author deraadt;	state Exp;
branches;
next	1.72;

1.72
date	2012.04.21.10.17.26;	author henning;	state Exp;
branches;
next	1.71;

1.71
date	2011.07.06.21.12.05;	author ajacoutot;	state Exp;
branches;
next	1.70;

1.70
date	2010.01.10.13.32.56;	author deraadt;	state Exp;
branches;
next	1.69;

1.69
date	2009.05.06.01.29.48;	author deraadt;	state Exp;
branches;
next	1.68;

1.68
date	2009.04.25.18.31.26;	author krw;	state Exp;
branches;
next	1.67;

1.67
date	2009.04.25.17.43.08;	author krw;	state Exp;
branches;
next	1.66;

1.66
date	2009.04.25.16.55.02;	author krw;	state Exp;
branches;
next	1.65;

1.65
date	2008.06.27.06.06.13;	author ray;	state Exp;
branches;
next	1.64;

1.64
date	2006.08.29.01.02.49;	author krw;	state Exp;
branches;
next	1.63;

1.63
date	2006.06.23.21.43.19;	author krw;	state Exp;
branches;
next	1.62;

1.62
date	2005.10.12.02.48.49;	author krw;	state Exp;
branches;
next	1.61;

1.61
date	2005.04.02.14.27.08;	author krw;	state Exp;
branches;
next	1.60;

1.60
date	2005.03.26.05.08.26;	author krw;	state Exp;
branches;
next	1.59;

1.59
date	2004.10.02.18.45.08;	author krw;	state Exp;
branches;
next	1.58;

1.58
date	2004.07.30.00.16.30;	author krw;	state Exp;
branches;
next	1.57;

1.57
date	2004.04.06.04.18.41;	author krw;	state Exp;
branches;
next	1.56;

1.56
date	2004.03.23.02.39.39;	author krw;	state Exp;
branches;
next	1.55;

1.55
date	2003.09.22.01.31.39;	author krw;	state Exp;
branches;
next	1.54;

1.54
date	2003.09.09.23.33.34;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2003.09.06.23.02.55;	author krw;	state Exp;
branches;
next	1.52;

1.52
date	2003.08.17.21.11.35;	author krw;	state Exp;
branches;
next	1.51;

1.51
date	2003.08.16.20.37.24;	author krw;	state Exp;
branches;
next	1.50;

1.50
date	2003.06.23.00.43.18;	author krw;	state Exp;
branches;
next	1.49;

1.49
date	2003.06.23.00.38.57;	author krw;	state Exp;
branches;
next	1.48;

1.48
date	2002.12.08.19.30.40;	author krw;	state Exp;
branches;
next	1.47;

1.47
date	2002.12.01.23.19.33;	author krw;	state Exp;
branches;
next	1.46;

1.46
date	2002.11.10.01.26.50;	author krw;	state Exp;
branches;
next	1.45;

1.45
date	2002.11.07.01.28.52;	author krw;	state Exp;
branches;
next	1.44;

1.44
date	2002.11.01.00.39.19;	author krw;	state Exp;
branches;
next	1.43;

1.43
date	2002.10.03.00.56.44;	author krw;	state Exp;
branches;
next	1.42;

1.42
date	2002.09.17.12.28.54;	author krw;	state Exp;
branches;
next	1.41;

1.41
date	2002.08.27.02.18.34;	author krw;	state Exp;
branches;
next	1.40;

1.40
date	2002.07.27.04.05.09;	author krw;	state Exp;
branches;
next	1.39;

1.39
date	2002.07.18.00.36.44;	author krw;	state Exp;
branches;
next	1.38;

1.38
date	2002.07.13.13.18.05;	author krw;	state Exp;
branches;
next	1.37;

1.37
date	2002.07.06.03.19.36;	author krw;	state Exp;
branches;
next	1.36;

1.36
date	2002.06.29.20.01.34;	author krw;	state Exp;
branches;
next	1.35;

1.35
date	2002.06.25.00.31.59;	author krw;	state Exp;
branches;
next	1.34;

1.34
date	2002.04.29.01.38.06;	author krw;	state Exp;
branches;
next	1.33;

1.33
date	2002.04.28.20.41.15;	author krw;	state Exp;
branches;
next	1.32;

1.32
date	2002.04.28.14.44.01;	author krw;	state Exp;
branches;
next	1.31;

1.31
date	2002.04.13.21.03.31;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2002.04.09.01.01.19;	author krw;	state Exp;
branches;
next	1.29;

1.29
date	2002.04.05.02.51.59;	author krw;	state Exp;
branches;
next	1.28;

1.28
date	2002.04.02.01.25.34;	author krw;	state Exp;
branches;
next	1.27;

1.27
date	2002.03.31.15.30.42;	author krw;	state Exp;
branches;
next	1.26;

1.26
date	2002.03.31.03.05.04;	author krw;	state Exp;
branches;
next	1.25;

1.25
date	2002.03.30.01.29.18;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2002.03.30.00.50.57;	author krw;	state Exp;
branches;
next	1.23;

1.23
date	2002.03.26.01.50.08;	author krw;	state Exp;
branches;
next	1.22;

1.22
date	2002.03.04.13.59.52;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2002.03.03.00.43.37;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2001.11.25.21.43.08;	author krw;	state Exp;
branches;
next	1.19;

1.19
date	2001.11.18.22.48.58;	author krw;	state Exp;
branches;
next	1.18;

1.18
date	2001.10.11.23.14.59;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2001.06.23.19.44.46;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2001.04.20.01.55.51;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2000.05.12.06.02.13;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2000.04.30.19.39.27;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.30.19.10.01;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.19.01.14.03;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	99.10.08.03.54.14;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	99.08.15.09.53.36;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	98.09.11.22.45.53;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.07.09.15.15.35;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.05.14.21.22.07;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.05.13.18.22.14;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.05.03.23.06.02;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	97.04.30.18.52.50;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.09.05.21.26.43;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.28.21.48.20;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.07.13.22.56;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.91
log
@forgot to cvs rm locally in previous commit
@
text
@@


1.90
log
@- merge install.sh into install.sub as do_install()
- merge upgrade.sh into install.sub as do_upgrade()
- delete install.sh and upgrade.sh
- make install.sub executable
- turn install and upgrade into symbolic links to install.sub
- add autoinstall symbolic link to install.sub
- change dot.profile to use these symlinks
- introduce a -m option to set MODE in install.sub
- alternativly set MODE and AUTO depending on PROGNAME
- execute the do_{install,upgrade) functions depending on $MODE

OK halex@@, krw@@
'go for it' deraadt@@
@
text
@@


1.89
log
@- spacing
- use brace expansion in for-loop

OK krw@@
@
text
@a0 95
#!/bin/ksh
#	$OpenBSD: upgrade.sh,v 1.88 2015/12/06 09:30:27 rpe Exp $
#	$NetBSD: upgrade.sh,v 1.2.4.5 1996/08/27 18:15:08 gwr Exp $
#
# Copyright (c) 1997-2015 Todd Miller, Theo de Raadt, Ken Westerback
# Copyright (c) 2015, Robert Peichaer <rpe@@openbsd.org>
#
# All rights reserved.
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

#	OpenBSD upgrade script.

# install.sub needs to know the MODE.
MODE=upgrade

# Include common subroutines and initialization code.
. install.sub

# Have the user confirm that $ROOTDEV is the root filesystem.
get_rootinfo
while :; do
	ask "Root filesystem?" $ROOTDEV
	resp=${resp##*/}
	[[ -b /dev/$resp ]] && break
	echo "$resp is not a block device."
done
ROOTDEV=$resp

echo -n "Checking root filesystem (fsck -fp /dev/$ROOTDEV)..."
fsck -fp /dev/$ROOTDEV >/dev/null 2>&1 || { echo "FAILED."; exit; }
echo "OK."

echo -n "Mounting root filesystem (mount -o ro /dev/$ROOTDEV /mnt)..."
mount -o ro /dev/$ROOTDEV /mnt || { echo "FAILED."; exit; }
echo "OK."

# The fstab, hosts and myname files are required.
for _f in /mnt/etc/{fstab,hosts,myname}; do
	[[ -f $_f ]] || { echo "No $_f!"; exit; }
	cp $_f /tmp/${_f##*/}
done
hostname $(stripcom /tmp/myname)
THESETS="$THESETS site$VERSION-$(hostname -s).tgz"

# Configure the network.
enable_network

# Fetch the list of mirror servers and installer choices from previous runs.
startcgiinfo

# Create a skeletal /etc/fstab which is usable for the upgrade process.
munge_fstab

# fsck -p non-root filesystems in /etc/fstab.
check_fs

# Mount filesystems in /etc/fstab.
umount /mnt || { echo "Can't umount $ROOTDEV!"; exit; }
mount_fs

# Feed the random pool some entropy before we read from it.
feed_random

# Ask the user for locations, and install whatever sets the user selected.
install_sets

# Perform final steps common to both an install and an upgrade.
finish_up
@


1.88
log
@5.8 is out for a quite a while now. Remove the deletion of binaries
during upgrade, that have been removed from base.

Positive feedback from tedu@@, benno@@
OK krw@@, deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.87 2015/04/07 09:59:38 rpe Exp $
a51 1

d58 1
a58 1
echo	"OK."
d62 1
a62 1
echo	"OK."
d65 3
a67 3
for _f in fstab hosts myname; do
	[[ -f /mnt/etc/$_f ]] || { echo "No /mnt/etc/$_f!"; exit; }
	cp /mnt/etc/$_f /tmp/$_f
@


1.87
log
@Tweak previous.

OK halex@@ krw@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.86 2015/04/06 21:36:56 rpe Exp $
a93 4

# XXX To be removed after 5.8 is released.
rm -rf /mnt/usr/libexec/sendmail
rm -f /mnt/usr/sbin/{named,rndc,nginx,openssl}
@


1.86
log
@Moar comments !! Explain what's going on during install / upgrade.

OK krw@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.85 2015/04/04 14:21:01 rpe Exp $
d40 1
a40 1
# Install.sub needs to know the MODE.
d79 1
a79 1
# Create fstab for use during upgrade.
@


1.85
log
@I contributed substantially to the installer, so add copyright.

prodded by deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.84 2015/03/28 00:03:05 rpe Exp $
d38 1
a38 1
#	OpenBSD installation script.
d40 1
a40 1
# install.sub needs to know the MODE.
d76 1
d89 1
d92 1
a92 1
# Install sets.
@


1.84
log
@- Start comments with capital letters.
- End comments with a full stop.

OK krw@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.83 2015/03/11 21:00:35 krw Exp $
d6 2
@


1.83
log
@Shuffle some code around to make it easier to read. Add get_rootinfo()
and shuffle some install specific code into install.sh. No intentional
functional change.

Update copyrights to 2015 while here.

Tested & ok rpe@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.82 2015/01/30 17:11:00 sthen Exp $
d38 1
a38 1
# install.sub needs to know the MODE
d41 1
a41 1
# include common subroutines and initialization code
@


1.82
log
@remove rndc (from bind) as well, ok deraadt
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.81 2015/01/29 17:47:08 deraadt Exp $
d5 1
a5 1
# Copyright (c) 1997-2009 Todd Miller, Theo de Raadt, Ken Westerback
d45 1
@


1.81
log
@At upgrade time delete sendmail,named,nginx,openssl binaries because
they may reside earlier in the path than a pkg.
prompted by tedu, with halex
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.80 2014/12/10 08:57:41 giovanni Exp $
d92 1
a92 1
rm -f /mnt/usr/sbin/{named,nginx,openssl}
@


1.80
log
@Time to murder some smtpd's related XXX
ok rpe@@ deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.79 2014/08/10 14:59:22 rpe Exp $
d89 4
@


1.79
log
@{ foo ; bar ; } -> { foo; bar; }

OK krw@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.78 2014/08/03 16:00:15 rpe Exp $
a88 7

# XXX To be removed after 5.6 is released.
# XXX smtpd got privsep'ed and the _smtpq user is now used to manage these
# XXX directories. Ensure proper ownership in case smtpd has been started
# XXX before this change.
(cd /mnt/var/spool/smtpd &&
	chown -R 103 corrupt incoming purge queue temporary) 2>/dev/null
@


1.78
log
@smtpd got privsep'ed and the _smtpq user is now used to manage these
directories. Ensure proper ownership in case smtpd has been started
before this change.

brought up by matthieu@@
OK deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.77 2014/03/20 20:01:28 krw Exp $
d55 1
a55 1
fsck -fp /dev/$ROOTDEV >/dev/null 2>&1 || { echo "FAILED." ; exit ; }
d59 1
a59 1
mount -o ro /dev/$ROOTDEV /mnt || { echo "FAILED." ; exit ; }
d64 1
a64 1
	[[ -f /mnt/etc/$_f ]] || { echo "No /mnt/etc/$_f!" ; exit ; }
d82 1
a82 1
umount /mnt || { echo "Can't umount $ROOTDEV!" ; exit ; }
@


1.77
log
@FTP is so 20th century. Remove 'ftp' as a method to obtain installation
sets. 'http' is the present.

A bunch of related or triggered cleanup/consistenizing.

Prodded by deraadt@@, much feedback and testing by rpe@@.

ok rpe@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.76 2014/02/21 17:11:02 deraadt Exp $
d89 7
@


1.76
log
@remove stupid comment from decades ago.  Proof is in the pudding, turns
out ksh is the perfect language to write this in.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.75 2014/02/21 16:30:14 deraadt Exp $
d73 1
a73 1
startftplist
@


1.75
log
@oops, seperate pieces coming...
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.73 2014/01/05 01:53:35 deraadt Exp $
a36 2
#	In a perfect world, this would be a nice C program, with a reasonable
#	user interface.
@


1.74
log
@services
@
text
@d3 1
d37 2
@


1.73
log
@We can feed_random right after mounting the filesystems, hoping we pick
up the previous kernel's /var/db/host.random
ok rpe
@
text
@d2 1
a2 2
#	$OpenBSD: upgrade.sh,v 1.72 2012/04/21 10:17:26 henning Exp $
#	$NetBSD: upgrade.sh,v 1.2.4.5 1996/08/27 18:15:08 gwr Exp $
a35 2
#	In a perfect world, this would be a nice C program, with a reasonable
#	user interface.
@


1.72
log
@remove the "Do you want to do any manual network configuration?" question.
there is barely ever a need to do so these days, I for one don't remember
ever using it, and we have a well documented way of escaping to a shell at
any point in the install process, which the installer conveniently points
out right at the beginning.
stumbled upon while reviewing the upcoming 2nd edition of Michael Lucas'
"Absolute OpenBSD"
ok sthen deraadt halex krw
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.71 2011/07/06 21:12:05 ajacoutot Exp $
d86 2
@


1.71
log
@Remove the verbiage about manually merging 'etc' on upgrade. You get
the sysmerge(8) question now which makes it pretty obvious.

ok krw@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.70 2010/01/10 13:32:56 deraadt Exp $
a73 1
manual_net_cfg
@


1.70
log
@remove and move some chatty byte during upgrade startup; ok krw, idea from mcbride
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.69 2009/05/06 01:29:48 deraadt Exp $
a44 8

cat <<__EOT

NOTE: Once your system has been upgraded, you must manually merge any
changes to files in the 'etc' set into the files already on your system.
sysmerge(8) can help.

__EOT
@


1.69
log
@Split the collection of many questions from the appplication of their
change.  Then ask them at the start.  The timezone stuff remains a bit
weird since we have to depend on when we get the TZ names, or when we
get network... so there are 3 possible places that question can be
asked.  But now basically once it starts ftp'ing the sets, you only
have the final done prompt.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.68 2009/04/25 18:31:26 krw Exp $
d45 8
@


1.68
log
@Cleanup. Some ksh'ing, shrinkage, verbiage tweaks and consistency.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.67 2009/04/25 17:43:08 krw Exp $
d75 2
@


1.67
log
@During upgrades don't bother displaying the fstab to be 'munged'
and a long explanation of what is about to happen. Unlikely this
was read by or helped many. Fewer distractions make better users.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.66 2009/04/25 16:55:02 krw Exp $
d48 1
a48 1
	ask "Root filesystem?" "$ROOTDEV"
d52 1
a52 1
	echo "Sorry, $resp is not a block device."
d56 2
a57 5
echo -n "Checking root filesystem (fsck -fp /dev/${ROOTDEV}) ... "
if ! fsck -fp /dev/$ROOTDEV >/dev/null 2>&1; then
	echo	"FAILED.\nYou must fsck ${ROOTDEV} manually."
	exit
fi
d60 3
a62 6
echo -n "Mounting root filesystem..."
if ! mount -o ro /dev/$ROOTDEV /mnt; then
	echo	"ERROR: can't mount root filesystem!"
	exit
fi
echo	"done."
d65 3
a67 6
for _file in fstab hosts myname; do
	if [ ! -f /mnt/etc/$_file ]; then
		echo "ERROR: no /mnt/etc/${_file}!"
		exit
	fi
	cp /mnt/etc/$_file /tmp/$_file
d72 1
a72 2

# Configure the network
d83 1
a83 4
if ! umount /mnt; then
	echo	"ERROR: can't unmount previously mounted root!"
	exit
fi
@


1.66
log
@Always configure the network (if any) during upgrades. Another question
bites the dust.

ok deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.65 2008/06/27 06:06:13 ray Exp $
d86 1
a86 16
cat <<__EOT

The fstab is configured as follows:

$(</tmp/fstab)

For the $MODE, filesystems in the fstab will be automatically mounted if the
'noauto' option is absent, and /sbin/mount_<fstype> is found, and the fstype is
not nfs. Non-ffs filesystems will be mounted read-only.

You can edit the fstab now, before it is used, but the edited fstab will only
be used during the upgrade. It will not be copied back to disk.
__EOT
edit_tmp_file fstab

# Create /etc/fstab.
@


1.65
log
@Remove clauses 3 and 4 from license copyrighted by millert, deraadt,
krw, and NetBSD.

OK millert, krw, and deraadt
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.64 2006/08/29 01:02:49 krw Exp $
d5 1
a5 1
# Copyright (c) 1997-2004 Todd Miller, Theo de Raadt, Ken Westerback
a80 2
ask_yn "Enable network using configuration stored on root filesystem?" yes
[[ $resp == y ]] && enable_network
d82 2
a83 2
# Offer the user the opportunity to tweak, repair, or create the network
# configuration by hand.
@


1.64
log
@Handle site${VERSION}-$(hostname -s).tgz files better so that they
don't get in the way of noticing that all default sets are installed.

Restores the desired behaviour where [done] becomes the default answer
to the "Location of sets?" question once all default sets are
successfully installed.

spotted by & ok deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.63 2006/06/23 21:43:19 krw Exp $
a21 7
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
@


1.63
log
@Add a set siteXY-<hostname>.tgz and make it selected by default. This
allows host specific files to be trivially installed and makes
creating/maintaining large numbers of host specific configurations
much simpler.

Suggested by work being done by Alex Holst, brought to my attention by
mk@@ during c2k6.

Name format suggested by henning@@, tweaked by deraadt@@.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.62 2005/10/12 02:48:49 krw Exp $
a86 1
DEFAULTSETS="$DEFAULTSETS site$VERSION-$(hostname -s).tgz"
@


1.62
log
@Comments are now allowed in myname and mygate. Steal stripcom() from
/etc/netstart and use in myname and mygate processing. Fixes problems
with (U)pgrade's. Discovered while preparing for Todd's new mygate
functionality.

ok todd@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.61 2005/04/02 14:27:08 krw Exp $
d86 2
@


1.61
log
@Scrounge a few characters of whitespace.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.60 2005/03/26 05:08:26 krw Exp $
d85 1
a85 1
hostname $(</tmp/myname)
@


1.60
log
@More cleanup. ${MODE} -> $MODE.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.59 2004/10/02 18:45:08 krw Exp $
d64 1
a64 1
if ! fsck -fp /dev/$ROOTDEV > /dev/null 2>&1; then
d85 1
a85 1
hostname $(< /tmp/myname)
d94 1
a94 1
cat << __EOT
d98 1
a98 1
$(< /tmp/fstab)
@


1.59
log
@Minor code cleanup and shrinkage. No functional change.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.58 2004/07/30 00:16:30 krw Exp $
d100 1
a100 1
For the ${MODE}, filesystems in the fstab will be automatically mounted if the
@


1.58
log
@Use '#!/bin/ksh' for install scripts, as we use so many ksh'isms. Some of
which will be disabled for /bin/sh invocations soon.

Requested by millert@@.

ok pval@@.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.57 2004/04/06 04:18:41 krw Exp $
d54 1
a54 2
resp=
while [ -z "$resp" ]; do
d57 3
a59 4
	if [ ! -b /dev/$resp ]; then
		echo "Sorry, ${resp} is not a block device."
		resp=
	fi
@


1.57
log
@Remove the 3.3 -> 3.4 upgrade openssl hack.
@
text
@d1 2
a2 2
#!/bin/sh
#	$OpenBSD: upgrade.sh,v 1.56 2004/03/23 02:39:39 krw Exp $
@


1.56
log
@Update copyrights to 2004.

ok deraadt@@.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.55 2003/09/22 01:31:39 krw Exp $
a122 16

# Prior to 3.4, ssl was a directory and openssl was a link to it, both in
# /usr/include and /usr/libdata/perl5/site_perl/${ARCH}-openbsd. With 3.4,
# openssl is the directory and ssl is the link. This change causes the upgrade
# of base34 and comp34 to fail, so adjust a normal pre-3.4 setup to the new
# setup.
for _dir in /mnt/usr/include /mnt/usr/libdata/perl5/site_perl/*-openbsd; do
	[[ -d $_dir ]] || continue
	( cd $_dir
	if [[ -d ssl && -L openssl ]]; then
		rm openssl
		mv ssl openssl
		ln -s openssl ssl
	fi
	)
done
@


1.55
log
@Introduce a function ask_yn() to use when asking 'yes or no'
questions.

ask_yn() always returns a 'y' or 'n' in $resp, vastly simplifying the
logic used to check the user response.

ask_yn() insists on the user responding with a 'y', 'n', 'yes', or
'no'. Case is ignored.

Previously almost any input was accepted as either a yes or a no
depending on the question. ask_yn() reduces the chance of user error,
e.g.  by answering the next question (default route) instead of the
posed one (Use DNS server now?).

All 'yes or no' questions now use ask_yn(). All questions show the
full default answer, i.e. 'yes' or 'no' rather than 'y' or 'n'.

Some minor logic cleanups of the usual sort, but no changes to logic
flow or questions bar minor verbiage adjustment.

Inspired by a Bob Beck install nit.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.54 2003/09/09 23:33:34 deraadt Exp $
d5 1
a5 1
# Copyright (c) 1997-2002 Todd Miller, Theo de Raadt, Ken Westerback
@


1.54
log
@do not defer * matching; from drahn, with some input from me
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.53 2003/09/06 23:02:55 krw Exp $
d89 2
a90 4
ask "Enable network using configuration stored on root filesystem?" y
case $resp in
y*|Y*) enable_network ;;
esac
@


1.53
log
@Do the ssl/openssl directory/link dance in both places it could occur,
/usr/include and /usr/libdata/perl5/site_perl/*-openbsd.

Allows both base34 and comp34 to be upgraded from a stock install.

ok deraadt@@.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.52 2003/08/17 21:11:35 krw Exp $
d131 3
a133 3
for _dir in /usr/include /usr/libdata/perl5/site_perl/*-openbsd; do
	[[ -d /mnt$_dir ]] || continue
	( cd /mnt$_dir
@


1.52
log
@With 3.4, /usr/include/ssl is a link and /usr/include/openssl is the
directory it points to. Previously ssl was the directory and openssl
the link.

That change causes the upgrade of the comp34 set to fail, so manually
adjust a pre-3.4 setup to the 3.4 setup before attempting to upgrade
any sets.

ok millert@@.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.51 2003/08/16 20:37:24 krw Exp $
d126 15
a140 11
# Prior to 3.4, /usr/include/ssl was a directory and /usr/include/openssl was a
# link to it. With 3.4, /usr/include/openssl is the directory and
# /usr/include/ssl is the link. This change causes the upgrade of comp34 to
# fail, so adjust a normal pre-3.4 setup to the new setup.
( cd /mnt/usr/include
if [[ -d ssl && -L openssl ]]; then
	rm openssl
	mv ssl openssl
	ln -s openssl ssl
fi
)
@


1.51
log
@Minor cosmetic cleanup.

Use '<msg>...done.' consistantly by replacing last five varient uses. Out with
'<msg> ... done.', '<msg>...Done.', etc.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.50 2003/06/23 00:43:18 krw Exp $
d125 12
@


1.50
log
@Fix comment typo in last commit.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.49 2003/06/23 00:38:57 krw Exp $
d72 1
a72 1
echo -n "Mounting root filesystem ... "
d77 1
a77 1
echo	"Done."
@


1.49
log
@Minor cleanups.

1) Don't check for the existance of /mnt/etc/hosts twice. Since we
bail out at the first check the 2nd one is superfluous.

2) Shorten and clarify the upgrade network configuration logic.

3) Always ask if manual network configuration is desired when
upgrading. Allows the upgrader to decline to use the existing network
configuration and still have an explicit opportunity to configure the
network.

4) Don't bail out if the existing network configuration fails. Instead
(see 3)) offer manual network configuration and let the user decide if
it is worthwhile to continue.

5) Refer to actual file that is missing when bailing out, rather than
forcing user to be alert enough to prepend '/mnt'.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.48 2002/12/08 19:30:40 krw Exp $
d94 1
a94 1
# Offer the user to opportunity to tweak, repair, or create the network
@


1.48
log
@Fix & cleanup logic, especially around interrupted installs.

Use value of 'hostname' to store all HOSTNAME and FQDN information.  Elminate
those global variables. For install accept user input as is, but if the short
form hostname is unchanged, save any domain info by not re-setting hostname.
For upgrade just set hostname from /tmp/myname.

Unconditionally create default hosts file in install.sh, rather than doing it
in separate places depending on whether or not the user configures the network.
Always ask if the user wants to edit the hosts file when the network is
configured, but without listing it out.

Don't put 'search' command in resolv.conf as we now set hostnames to include
fully qualified domain names, which will be used to yield local domain name.

Loop asking for the default route until the user enters one that 'route'
accepts or the user explicitly asks for no default route by entering 'none'.

Add FQDN info to hosts file just before saving configuration files to the
installed system. Preserve user added lines - those with aliases or with domain
information in the hostname.

Clean up donetconfig() logic. Delete network config files in install.sh so that
if the user restarts an interrupted install previous network configuration does
not leak into installed system.

Elminiate get_resolv_fqdn(), searching resolv.conf for domain info only when
dhcp was used. get_fqdn() is reduced to looking for domain info in current
hostname, and supplying 'my.domain' if none found.

Add save_comments() and use to preserve useful comments in the installed
/etc/hosts and /etc/dhclient.conf files. Previous logic for dhclient.conf could
cause repeated appending of configuration info rather than just preserving the
comments.

Cleanup logic copying files from /tmp to /mnt/etc, eliminating unneeded
cfgfiles variable. Use wildcards and subshells to shrink code size.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.47 2002/12/01 23:19:33 krw Exp $
d82 1
a82 1
		echo "ERROR: no /etc/${_file}!"
a88 2
# Start up the network in same/similar configuration as the installed system
# uses.
d91 2
a92 5
y*|Y*)
	if ! enable_network; then
		echo "ERROR: can't enable network!"
		exit
	fi
d94 3
a96 2
	manual_net_cfg
esac
@


1.47
log
@Code consolidation. Create edit_tmp_file(), manual_net_cfg(), inet_info()
to abstract repeated code blocks.

Current score: 3.2      install+upgrade+install.sub = 40,062 bytes
               -current    "        "         "     = 38,051
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.46 2002/11/10 01:26:50 krw Exp $
d87 1
a87 9

# Set the FQDN and system hostname (short form).
HOSTNAME=`cat /tmp/myname`
FQDN=$HOSTNAME
HOSTNAME=${HOSTNAME%%.*}
FQDN=${FQDN#${HOSTNAME}}
FQDN=${FQDN#.}
[[ -n $FQDN ]] || get_resolv_fqdn /mnt/etc/resolv.conf
hostname $HOSTNAME.$FQDN
d106 1
a106 1
$(</tmp/fstab)
@


1.46
log
@Polish wording on fstab verbiage, and swap paragraphs so the paragraph
descibing how the fstab will be used follows immediately after the
fstab listing, and the paragraph explaining about editing the fstab
comes immediately before the offer to edit the fstab.  Eliminate a
blank line before the question as it is now tightly related to the
paragraph that precedes it.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.45 2002/11/07 01:28:52 krw Exp $
d107 1
a107 7
	ask "Do you want to do more, manual, network configuration?" n
	case $resp in
	y*|Y*)	echo "Type 'exit' to return to upgrade."
		sh
		;;
	esac
	;;
d123 1
a123 5
ask "Edit the fstab with ${EDITOR}?" n
case $resp in
y*|Y*)	${EDITOR} /tmp/fstab
	;;
esac
@


1.45
log
@Treat 'bsd' like just another filename in THESETS, no more 'kernel'
logic.  As result, MDSETS gone from everything but mac68k.

MDSETS now treated as a list of complete file names to add to THESETS,
allowing more MD flexibility, i.e. may or may not be .tgz files.

All traces of tar.gz removed. Not used for sets since 2.7 or so. As a
result of code simplification from not having to consider tar.gz, the
functions get_sets(), make_lastset(), and set_not_done() are
eliminated, along with the global SETS.

Build THESETS and DEFAULTSETS to contain full file names.

Always install sets in the order they appear in THESETS, keeping
siteXX last but without needing special logic. More predictable for
user if a lot of set additions and removals done before being
satisfied, as the sets are now installed in the same order they appear
in the selection list.

Remove ability to look for non-set .tgz/.tar.gz files. The job of the
install scripts is to install the standard sets in a simple and
rational way. Not to install general tar balls. The user can do that
post-install or simply '!' out to do it during install. On their head
be it.

If no sets are found in a specified source, list the filenames in
THESETS to show what is being looked for.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.44 2002/11/01 00:39:19 krw Exp $
d122 3
a124 6
You can edit the fstab now, before it is used, but the edited fstab will
only be used during the upgrade. It will not be copied back to disk.

Filesystems in the fstab will be mounted only if the 'noauto' option is
absent, /sbin/mount_<fstype> is found, and the fstype is not nfs. Only
filesystems with a fstype of ffs will be mounted read-write.
d126 2
@


1.44
log
@Cleanup. install_sets() no longer takes a parameter.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.43 2002/10/03 00:56:44 krw Exp $
a51 6

# Remove 'etc' set from THESETS. It should be installed
# manually, after the upgrade. Note that etc should not
# be the first or last set in THESETS, or this won't
# work!
THESETS=`echo $THESETS | sed -e 's/ etc / /'`
@


1.43
log
@Divorce system hostname handling from network configuration.

Every system has a name, and thus generated keys with that
name, even if there is no currently configured network.

So, ask for a system hostname before configuring the network.

Eliminate /tmp/myname and just keep hostname set to the lastest name
and FQDN.

Construct /etc/myname from hostname as configuration data is being
saved. Construct /etc/hosts (preserving the informative leading comment
from the /etc/hosts file in etcXX.tgx) at the same time.

Construct an appropriate /etc/hosts file even if the network is not
configured.

During upgrade, if the user enables the network using the existing
configuration, don't ask about the domain name - just use the
configured one.

Take care to handle existing /etc/myname files which do not necessarily
have a FQDN.

Originally problem with hostname handling pointed out by beck@@.

ok deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.42 2002/09/17 12:28:54 krw Exp $
d156 1
a156 1
install_sets $THESETS
@


1.42
log
@Ruthlessly expunge unnecessary verbiage and whitespace to make sure
the install example will easily fit on the CD insert at some
reasonable font size. Reword many messages and questions for same
reason.

In addition:

1) Add '...done.' to match 'Installing boot block...'

2) During install, after asking which is the root disk, start
initializing it immediately rather than asking again which disk to
work on.

3) Move munged fstab filesystem mounting to *before* network
initialization so that if you bail out during network initialization
and restart you do not have to go through disk initialization again.
Also puts fsck and mount messages close to each other rather than
spitting out the latter just before root password questions.

4) Make 'usr/obj' nosuid,nodev by default, /home nodev by default.

5) For network interfaces only show the complete list of media options
if the user indicates they want to change the default.

6) Move the question about the ftp server supporting passive ftp to
*after* selecting the ftp server where it is more 'rational' and can
easily be made more concise.

7) Don't bother umount'ing filesystems or stopping the dhclient after
a successful install/upgrade. The next step is a reboot after all.

Some minor code tweaks and comment cleanup while in the area.

Tested in recent snapshots. Suggested by & ok deraadt@@.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.41 2002/08/27 02:18:34 krw Exp $
d85 2
a86 2
# fstab and hosts are required for upgrade
for _file in fstab hosts; do
d93 9
@


1.41
log
@Move general partitioning advice from machine dependant per disk
routine to install.sh so it is displayed only once.

Strongly advise /, /tmp, /var, /usr and /home have their own
disk partitions as requested by deraadt@@.

Rather than rely on users not re-selecting an already initialized
disk, just allow them to choose from un-initialized disks.

Move get_root invocation into install.sub as both install.sh and
upgrade.sh did it first thing.

Remove the 'workaround' to a 'vnode aliasing bug' that came in
with the initial import of upgrade.sh from NetBSD. ok millert@@.

Rework verbiage in a few places. Clean up logic around looping
through disk units by handling root disk better.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.40 2002/07/27 04:05:09 krw Exp $
d59 1
a59 2
# Assume $ROOTDEV is the root filesystem. Confirm
# this with the user. Check and mount the root filesystem.
d96 1
a96 8
cat << __EOT

The upgrade program would now like to enable the network. It will use the
configuration already stored on the root filesystem. This is required
if you wish to use the network installation capabilities of this program.

__EOT
ask "Enable network?" y
d104 1
a104 9
	cat << __EOT

You will now be given the opportunity to escape to the command shell to
do any additional network configuration you may need. This may include
adding additional routes, if needed. In addition, you might take this
opportunity to redo the default route in the event that it failed above.

__EOT
	ask "Escape to shell?" n
d114 1
d119 2
a120 5
You may wish to edit the fstab before the filesystems are mounted. e.g. to
change the order in which the filesystems are mounted.

NOTE:	1) the edited fstab will be used only during the upgrade. It will not
           be copied back into the root filesystem.
d122 3
a124 6
	2) A filesystem will not be mounted if
		a) the 'noauto' option is present,
		b) /sbin/mount_<fstype> is not found,
		c) the fstype is nfs.

	3) Non-ffs filesystems will be mounted read-only.
a131 2

echo
@


1.40
log
@Fix two problems.

1) Even if /sbin/mount_nfs is present, do *not* try to automatically
mount nfs file systems. Because not all name resolution mechanisms are
present during upgrade (e.g. yp) it is not safe to do so. The user
must manually mount nfs file systems if they are the source of any
sets.  Problem noted by miod@@, change seconded by deraadt@@.

2) Change initial verbiage so that a brief introduction is displayed,
along with the information about !foo or !, before the terminal type
is requested.  After the terminal type is known display the rest of
the introductory text using less -XE. This belts and suspender fix
makes both the install and upgrade text fit in 'page' size (<24 lines)
chunks and ensures that if the text ever grows beyond a page a more
informative prompt is displayed. Problem noted by millert@@.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.39 2002/07/18 00:36:44 krw Exp $
a57 6

# XXX Work around vnode aliasing bug (thanks for the tip, Chris...)
ls -l /dev > /dev/null 2>&1

# Get ROOTDISK and default ROOTDEV 
get_rootdisk
@


1.39
log
@Rework upgrade's fstab handling so

1) All filesystem with a corresponding /sbin/mount_<type> available
will be mounted. i.e. don't restrict automounting to ffs filesystems
when the user can later mount the others manually.

2) All non-ffs filesystems will be mounted ro, just as currently is
the case for user-mounted filesystems.

3) fsck all to-be-mounted filesystems that have a corresponding
/sbin/fsck_<type> program present.

Some verbiage adjustment and related code cleanup as well.

ok deraadt@@.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.38 2002/07/13 13:18:05 krw Exp $
d146 4
a149 2
	2) Filesystems with a 'noauto' option or for which no /sbin/mount_XXX
           can be found will not be mounted.
@


1.38
log
@More cleanup/simplification/shrinkage.

1) Factor out inquiring for a device. ask_fordev()
   now does this for root disk determination, other
   disk initialization, install sets disk or cd
   inquiry. Also ensures cd devices are created on
   the fly like disk devices already were, and
   shortens some verbiage.

2) Just ask for root disk if install is skipping
   disk initialization, rather than doing the
   'df /mnt ...' scan, since 1) we just end up asking
   anyway and 2) everything *should* have been
   umount'ed when previous install was finished or
   interrupted.

3) getrootdisk -> get_rootdisk to conform to
   get_<global> naming convention.

4) Add and use new global ROOTDEV rather than
   constantly adding 'a' to ROOTDISK. ROOTDEV
   default is set in get_rootdisk().

5) Put loop inside get_rootdisk rather than
   always putting one around it. If no rootdisk
   found/specified just exit install/update.

6) Eliminate getanotherdisk since ask_fordev()
   does most of the work.

7) Eliminate parameter to check_fs, just use
   ROOTDEV instead.

8) Some typographical and minor code tweaks.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.37 2002/07/06 03:19:36 krw Exp $
d135 4
a138 2
echo	"The fstab is configured as follows:\n"
cat /tmp/fstab
d140 2
a141 1
cat << __EOT
d143 2
a144 2
You may wish to edit the fstab. For example, you may need to resolve
dependencies in the order which the filesystems are mounted.
d146 2
a147 2
NOTE:	1) this fstab is used only during the upgrade. It will not be
	   copied into the root filesystem.
d149 1
a149 2
	2) all non-ffs filesystems, and filesystems with the 'noauto'
	   option, will be ignored during the upgrade.
@


1.37
log
@Remove obsolete upgrade hacks for XF3->XF4 and moving
sendmail.cf to /etc/mail.

ok deraadt@@, millert@@, todd@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.36 2002/06/29 20:01:34 krw Exp $
d62 2
a63 3
while [ -z "$ROOTDISK" ]; do
	getrootdisk
done
d65 1
a65 1
# Assume partition 'a' of $ROOTDISK is for the root filesystem. Confirm
d69 4
a72 4
	ask "Root filesystem?" "${ROOTDISK}a"
	_root_filesystem=/dev/${resp##*/}
	if [ ! -b ${_root_filesystem} ]; then
		echo "Sorry, ${_root_filesystem} is not a block device."
d76 1
d78 3
a80 3
echo -n "Checking root filesystem (fsck -fp ${_root_filesystem}) ... "
if ! fsck -fp ${_root_filesystem} > /dev/null 2>&1; then
	echo	"FAILED.\nYou must fsck ${_root_filesystem} manually."
d86 1
a86 1
if ! mount -o ro ${_root_filesystem} /mnt; then
d162 1
a162 1
check_fs $_root_filesystem
@


1.36
log
@Some cleanup/simplification:

1) Put knowledge of /tmp/fstab in munge_fstab rather
   than redirect input on calls. Check in munge_fstab
   whether /etc/fstab was successfully created, and exit
   install/upgrade with appropriate error if not. This
   error condition is therefore checked on install and upgrade.

2) Don't bother specifying value in exit statements - no one
   is checking whether it is 1, 2, or 0.

3) Put status messages inside check_fs rather than around
   invocation, and exit from check_fs if a fsck fails, rather
   than checking return value and exiting.

4) With above changes, simplify munge_fs/check_fs/mount_fs logic in
   upgrade.sh.

5) Various cosmetic cleanups.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.35 2002/06/25 00:31:59 krw Exp $
a170 16
# If Xfree86 v3 directories that would prevent upgrading to XFree86 v4
# are found, move them and replace them with links that the upgrade
# can replace with new values.
(
if [ -d /mnt/usr/X11R6/lib/X11 ]; then
	cd /mnt/usr/X11R6/lib/X11
	for xf3dir in twm xkb xsm xinit rstart; do
		if [ -e $xf3dir -a ! -L $xf3dir ]; then
			mkdir -p XF3
			mv $xf3dir XF3/.
			ln -s XF3/$xf3dir $xf3dir
		fi
	done
fi
)

a172 14

# Copy in configuration information and make devices in target root.
(
	if [ -f /mnt/etc/sendmail.cf -a ! -f /mnt/etc/mail/sendmail.cf ]; then
		echo "Moving /etc/sendmail.cf -> /etc/mail/sendmail.cf"
		[ -d /mnt/etc/mail ] || mkdir /mnt/etc/mail
		mv /mnt/etc/sendmail.cf /mnt/etc/mail/sendmail.cf
		ed - /mnt/etc/rc << __EOT
1,$s/etc\/sendmail.cf/etc\/mail\/sendmail.cf/g
w
q
__EOT
	fi
)
@


1.35
log
@Complete yet more of the c2k2 initiated changes. In this round:

1) Centralize selection of install/upgrade media rather than ask
   separately for mounted filesystem. Eliminate separate calls
   to get_localdir in install.sh and upgrade.sh. In install.sh
   this call occurred only if a diskless system was detected, which
   millert@@ agreed was a historical relic, i.e. what exactly would
   a diskless workstation be installing to?

2) Check for the presence of any mounted filesystems at the expected
   mount point (/mnt or /mnt2) and emit an error message if none found.

3) Add a '?' option to the pathname question so you can see what
   filesystems are mounted at/below the expected mount point.

4) Rework logic in get_localdir to make flow more logical. e.g. only
   do sane_install() check after the user says to install no more sets;
   if sane_install() fails ask a slightly different question and make
   the default 'y' to install more sets.

5) Rework install_sets() to simplify logic. Don't try to tailor
   list of install media to system, just warn that some may not be
   available and emit useful error messages if the user tries a
   non-available source.

Some verbiage still needs work (amoung other things).

fgsch@@ noticed problems with installing from mounted filesystems, forcing me
to finish these changes.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.34 2002/04/29 01:38:06 krw Exp $
d79 1
a79 3
if fsck -fp ${_root_filesystem} > /dev/null 2>&1; then
	echo	"OK."
else
d81 1
a81 1
	exit 1
d83 1
d86 1
a86 3
if mount -o ro ${_root_filesystem} /mnt; then
	echo	"Done."
else
d88 1
a88 1
	exit 1
d90 1
d96 1
a96 1
		exit 1
d115 1
a115 1
		exit 1
d158 2
a159 2
# Create a fstab containing only ffs filesystems w/o 'noauto'.
munge_fstab < /tmp/fstab
d161 4
d167 1
a167 17
	exit 1
fi

# Check filesystems.
echo "Checking non-root filesystems..."
if ! check_fs $_root_filesystem; then
	# Prevent check_fs() invocation in cleanup_on_exit from fsck'ing.
	# Remember /etc/fstab is a link, /tmp/fstab.shadow is the file!
	rm /tmp/fstab.shadow
fi
echo "...Done."

if [ ! -f /etc/fstab ]; then
	exit 2
else
	# Mount filesystems.
	mount_fs
d169 1
@


1.34
log
@Eliminate basename(). Just use parameter expansion syntax to remove
everything up to and including the last '/'.  Also removes a now
unnecessary variable from install_tape().

Which brings up the question 'Does anyone use tape installs?'.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.33 2002/04/28 20:41:15 krw Exp $
a198 6

ask "Are the upgrade sets on one of your normally mounted (local) filesystems?" y
case $resp in
y*|Y*)	get_localdir /mnt
	;;
esac
@


1.33
log
@Remove superfluous '{}' in variable references that are all alone in a
string. i.e. "${a}" -> "$a". Save the {} form for strings where
variables are mixed with text.

Remove superfluous X's. e.g. "X$resp" = "Xdone" -> "$resp" = "done".

Change last few '[ "$v" = "" ]' or equivalents to '[ -z "$v" ]'.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.32 2002/04/28 14:44:01 krw Exp $
d71 1
a71 1
	_root_filesystem=/dev/`basename $resp`
@


1.32
log
@Change getresp() into ask().

ask() takes 2 parameters. The first one is the question to
ask the user, and the 2nd is the default answer.

Shrinks and makes the code clearer.

From espie@@ with some tweaking, ok deraadt@@.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.31 2002/04/13 21:03:31 deraadt Exp $
d62 1
a62 1
while [ "X${ROOTDISK}" = "X" ]; do
d69 1
a69 1
while [ "X${resp}" = "X" ]; do
@


1.31
log
@only fsck root once in upgrade; from krw
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.30 2002/04/09 01:01:19 krw Exp $
d70 1
a70 2
	echo -n	"Root filesystem? [${ROOTDISK}a] "
	getresp "${ROOTDISK}a"
d112 1
a112 2
echo -n	"Enable network? [y] "
getresp y
d128 1
a128 2
	echo -n "Escape to shell? [n] "
	getresp n
d152 1
a152 2
echo -n	"Edit the fstab with ${EDITOR}? [n] "
getresp n
d200 1
a200 2
echo -n	"Are the upgrade sets on one of your normally mounted (local) filesystems? [y] "
getresp y
@


1.30
log
@More reorganizations, fixes and shrinkage.

a) Make [ -z "$var" ] standard idiom, replacing
   many variants on [ X"$var" = X"" ].

b) Factor out three large chunks of repeated code
   for finding sets, getting user to select sets
   and then installing the sets. This creates
   get_sets_list(), get_get_files_list() and
   install_get_files_list().

c) Eliminate unneeded dir_has_sets() function.

d) Indent last large functions that were not
   properly indented.

e) Replace most if not all 'test' invocations
   with [], replacing a few if statements along
   the way.

f) Use ${MODE} a lot more to make messages appear
   more relevant to process.

g) Fix erroneous display of $local_sets_dir so
   the error for a non-existant dir actually displays
   the user input, not an empty string.

h) Eliminate the 'list' option in selecting sets. It
   was not possible to actually select anything except
   what was already displayed, so bring verbiage and
   options into line with code.

i) Replace a number of '\"' and "\'" with just plain
   's or "s as appropriate.

j) Replace ".  " with ". ".

k) Use some more "OpenBSD {$VERSION_MAJOR}.${VERSION_MINOR}"
   to make more messages correct and current.

l) Various typos fixed.

Net shrinkage approximately 2K.

ok millert@@ deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.29 2002/04/05 02:51:59 krw Exp $
d173 2
a174 2
echo "Checking filesystem integrity..."
if ! check_fs; then
@


1.29
log
@Abstract out common startup and finishing code from install.sh
and upgrade.sh, putting it into install.sub.

Replace groups of echo's with here documents.

Eliminate bare echo's with embedded \n's.

Abstract repeated verbiage into display_* functions, also eliminating
a backslash orgy when showing the ftp/http server location. This
also makes the verbiage consistant across ftp, cd, etc. installs.

Try hard to make file selection screen fit on one screen.

Fix default in 'File name?' prompt so it contains the first
non-selected set.

Some minor wording adjustment, typos, etc.

Net shrinkage of about 1.5K.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.28 2002/04/02 01:25:34 krw Exp $
d54 3
a56 1
# manually, after the upgrade.
d66 2
a67 2
# Assume partition 'a' of $ROOTDISK is for the root filesystem.  Confirm
# this with the user.  Check and mount the root filesystem.
d108 2
a109 2
The upgrade program would now like to enable the network.  It will use the
configuration already stored on the root filesystem.  This is required
d125 2
a126 2
do any additional network configuration you may need.  This may include
adding additional routes, if needed.  In addition, you might take this
d145 1
a145 1
You may wish to edit the fstab.  For example, you may need to resolve
d218 1
a218 1
		test -d /mnt/etc/mail || mkdir /mnt/etc/mail
@


1.28
log
@Do not copy /etc/mygate to install'ed systems if dhcp is specified
for one or more network interfaces.

Rework timezone logic to shrink it and make it more clear. Don't
bother checking for /usr/share/zoneinfo as it is never there, just
look for /mnt/usr/share/zoneinfo.

Eliminate spurious early call to get_timezone() that
(accidentally?)  made GMT the default timezone during
installs. Instead rely on the /etc/localtime that is installed
from etcXX.gz. Currently this means the default timezone is the
historically resonant US/Pacific.

Ideas if not code details ok deraadt@@ and millert@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.27 2002/03/31 15:30:42 krw Exp $
d47 1
d50 1
a50 15
# include machine-dependent functions
# The following functions must be provided:
#	md_get_diskdevs()	- return available disk devices
#	md_get_cddevs()		- return available CD-ROM devices
#	md_get_partition_range() - return range of valid partition letters
#	md_installboot()	- install boot-blocks on disk
#	md_labeldisk()		- put label on a disk
#	md_welcome_banner()	- display friendly message
#	md_not_going_to_install() - display friendly message
#	md_congrats()		- display friendly message

# include machine dependent subroutines
. install.md

# include common subroutines
a52 4
# Make sure to cleanup when the script terminates:
trap 'cleanup_on_exit' EXIT
trap 'exit 2' HUP INT QUIT TERM

a56 15
# Good {morning,afternoon,evening,night}.
md_welcome_banner
echo -n "Proceed with upgrade? [n] "
getresp n
case $resp in
y*|Y*)	echo	"Cool!  Let's get to it..."
	;;
*)	md_not_going_to_install
	exit
	;;
esac

# Deal with terminal issues
md_set_term

d93 8
a100 13
# Grab the fstab so we can munge it for our own use.
if [ ! -f /mnt/etc/fstab ]; then
	echo	"ERROR: no /etc/fstab!"
	exit 1
fi
cp /mnt/etc/fstab /tmp/fstab

# Grab the hosts table so we can use it.
if [ ! -f /mnt/etc/hosts ]; then
	echo	"ERROR: no /etc/hosts!"
	exit 1
fi
cp /mnt/etc/hosts /tmp/hosts
a211 3
# Get timezone info
get_timezone

a223 7

	echo -n "Making devices..."
	cd /mnt/dev
	sh MAKEDEV all
	echo "done."

	md_installboot ${ROOTDISK}
a224 11
populateusrlocal
test -x /mnt/upgrade.site && /mnt/usr/sbin/chroot /mnt /upgrade.site

# Unmount filesystems, etc. and disable trap to do same on exit.
# Do this manually rather than through the trap so md_congrats is
# the last message printed.
trap - HUP INT QUIT TERM EXIT
cleanup_on_exit

# Pat on the back.
md_congrats
d226 2
a227 2
# ALL DONE!
exit 0
@


1.27
log
@naddy@@ pointed out that in the two situations

case WORD

and

var=WORD

Bourne and related/descendant shells such as our sh do *not* do
field splitting or globbing on WORD. Thus we can eliminate a large
number of unnecessary '"'s in case statements and variable
assignments.

This is a lightly adapted version of naddy's diff, to take account
of changes in the scripts since he generated it.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.26 2002/03/31 03:05:04 krw Exp $
a253 4
	echo "Installing timezone link."
	rm -f /mnt/etc/localtime
	ln -s /usr/share/zoneinfo/$TZ /mnt/etc/localtime

@


1.26
log
@This omnibus diff does a number of cleanups:

1) Move the 'executed' code at the top of install.sub
   to the end, so that it can successfully use .md
   functions.

2) Get _DKDEVS once only, and get _CDDEVS at the same
   time (see (1))

3) Clean up calls to getresp so that
      a) no '"'s used on constants
      b) '"'s always used for variables
      c) never use {} for variables
      d) ensure parameter passed matches default shown
         in any preceeding []

4) Try to put '"'s around directory names

5) Replace a couple of instances of using []s around
   a prompt comment instead of ()s

6) Reduce some code by putting $_DKDEVS inside
   here documents, rather than echo'ing it

7) eliminate an unused variable _directory

8) eliminate a couple of while RESP="" loops which
   never loop because a non-null default is provided
   to getresp

9) move some code into mount_a_disk to make logic
   clearer

10) eliminate a couple of extra blanks in prompts

11) eliminate ALLSETS and UPGRSETS by just removing
    'etc' from THESETS in upgrade.sh

12) Indent a couple of smaller functions

ok deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.25 2002/03/30 01:29:18 deraadt Exp $
d47 1
a47 1
MODE="upgrade"
d78 1
a78 1
case "$resp" in
d102 1
a102 1
	_root_filesystem="/dev/`basename $resp`"
d150 1
a150 1
case "$resp" in
d167 1
a167 1
	case "$resp" in
d192 1
a192 1
case "$resp" in
d241 1
a241 1
case "$resp" in
@


1.25
log
@shrink 599 more bytes:  cleanups to "case" and such; ok krw
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.24 2002/03/30 00:50:57 krw Exp $
d70 3
a72 2
# which sets?
THESETS="$UPGRSETS $MDSETS"
d77 1
a77 1
getresp "n"
d149 1
a149 1
getresp "y"
d166 1
a166 1
	getresp "n"
d191 1
a191 1
getresp "n"
d197 1
a197 1
echo	""
d240 1
a240 1
getresp "y"
@


1.24
log
@Squeeze a few bytes out of the installation scripts by using
standard __EOT as here document delimiter.

Remove unnecessary escaping of __EOT.

Could be/Should be extended to .md scripts and other non-miniroot
architectures.

Concept approved a *long* time ago by deraadt@@ and millert@@ but
never got out of my tree.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.23 2002/03/26 01:50:08 krw Exp $
d78 5
a82 7
	y*|Y*)
		echo	"Cool!  Let's get to it..."
		;;
	*)
		md_not_going_to_install
		exit
		;;
d150 5
a154 5
	y*|Y*)
		if ! enable_network; then
			echo "ERROR: can't enable network!"
			exit 1
		fi
d156 1
a156 1
		cat << __EOT
d164 5
a168 13
		echo -n "Escape to shell? [n] "
		getresp "n"
		case "$resp" in
			y*|Y*)
				echo "Type 'exit' to return to upgrade."
				sh
				;;

			*)
				;;
		esac
		;;
	*)
d170 2
d192 2
a193 6
	y*|Y*)
		${EDITOR} /tmp/fstab
		;;

	*)
		;;
d241 2
a242 5
	y*|Y*)
		get_localdir /mnt
		;;
	*)
		;;
@


1.23
log
@Cleanup (and shrink) ftp_list_files() in install.sub by removing
some unneeded intermediate local variables and just using the
parameters.

Make upgrade fsck output for root partition consistant with later
fsck output for other partitions.

ok deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.22 2002/03/04 13:59:52 krw Exp $
d142 1
a142 1
cat << \__network_config_1
d148 1
a148 1
__network_config_1
d158 1
a158 1
		cat << \__network_config_2
d165 1
a165 1
__network_config_2
d185 1
a185 1
cat << \__fstab_config_1
d196 1
a196 1
__fstab_config_1
d276 1
a276 1
		ed - /mnt/etc/rc << \__rc_edit
d280 1
a280 1
__rc_edit
@


1.22
log
@Update Copyright(c)'s to 2002
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.21 2002/03/03 00:43:37 krw Exp $
d105 1
a105 1
		echo "Sorry, ${resp} is not a block device."
d110 5
a114 3
echo	"Checking root filesystem..."
if ! fsck -pf ${_root_filesystem}; then
	echo	"ERROR: can't check root filesystem!"
d118 4
a121 2
echo	"Mounting root filesystem..."
if ! mount -o ro ${_root_filesystem} /mnt; then
@


1.21
log
@Cleanup/Improve trap handling.

a) Add /var/run to the filesystem created when the installation media
   boots. This allows the creation and use of the dhclient.pid file.
   Synchronize all mtree.conf files in architectures using miniroot.

b) Rework the traps used in upgrade.sh and install.sh so that HUP,
   INT, QUIT, TERM and EXIT all invoke a cleanup function that kills an
   active dhclient, unmounts all filesystems and fsck's -p all devices
   in /etc/fstab, or just /mnt if /etc/fstab is not present.

c) Make sure the actions of the cleanup function are visible, thus
   eliminating the long delay with no feedback at the end of the
   upgrade/install script, after the congratulatory message.

d) Reduce manual parsing of fstab files by using umount -a to
   unmount all mounted filesystems.

e) Since the new cleanup function tries to unmount all filesystems,
   use the presence of /etc/fstab, rather than a difference between
   `df /` and `df /mnt`, to determine if an install is being restarted
   in a state where disk initialization can be skipped.

f) Change munge_fs, check_fs, mount_fs, remount_fs so that they
   all 'know' about /etc/fstab rather than passing the same
   parameter in all the time.

g) Use input redirection on munge_fs to read correct file, rather
   than passing a file name as a parameter.

h) Indent code for various smaller functions.

i) Eliminate some subshell usage to simplify code further.

j) Display pretty messages during fsck -p to clearly indicate success
   or failure of fsck, rather than just dumping fsck output.

k) Always run mount_fs in install.sh, even if disk initialization is
   being skipped, because the trap should have unmounted all filesystems
   when the last run terminated.

ok weingart@@ millert@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.20 2001/11/25 21:43:08 krw Exp $
d5 1
a5 1
# Copyright (c) 1997-2001 Todd Miller, Theo de Raadt, Ken Westerback
@


1.20
log
@Squeeze all obvious <blank>+<tab> and <tab><blank>+ combinations
out. Save about 287 bytes. Based on diff from deraadt@@.

Update Copyright (ok deraadt@@).
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.19 2001/11/18 22:48:58 krw Exp $
a46 2
trap "unmount_fs -check /tmp/fstab.shadow > /dev/null 2>&1; rm -f /tmp/fstab.shadow" 0

d66 4
d207 1
a207 1
munge_fstab /tmp/fstab /tmp/fstab.shadow
d215 7
a221 1
check_fs /tmp/fstab.shadow
d223 6
a228 2
# Mount filesystems.
mount_fs /tmp/fstab.shadow
d289 5
a293 1
unmount_fs /tmp/fstab.shadow
@


1.19
log
@Purge more (last?) comments from install scripts by removing all
comments that, being on the end of code lines, cannot be stripped
automatically.

Just delete unhelpful ones, and move the rest onto separate lines
where they can be stripped.

Also remove a duplicated initialization of ROOTDISK.

In total, reduces script size on floppy by 1117 bytes, making room
for coming improvements.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.18 2001/10/11 23:14:59 krw Exp $
d5 3
d184 2
a185 2
NOTE: 1) this fstab is used only during the upgrade. It will not be
         copied into the root filesystem.
d187 2
a188 2
      2) all non-ffs filesystems, and filesystems with the 'noauto'
         option, will be ignored during the upgrade.
@


1.18
log
@Do *not* copy the possibly edited fstab back to disk after
promising this would not happen.

Historically this was being done to preserve any ufs -> ffs
changes the upgrade script had done, but the script has not done
such changes for some time.

ok millert@@ deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.17 2001/06/23 19:44:46 deraadt Exp $
a43 2
ROOTDISK=				# filled in below

d94 1
a94 1
resp=			# force one iteration
d101 1
a101 1
		resp=	# force loop to repeat
@


1.17
log
@argh.  stop using kernfs, using dmesg using sysctl.  encode ARCH into
install.md at build time.  remove some crud.  and the icing on the cake:
skip testing all this until next week
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.16 2001/04/20 01:55:51 krw Exp $
a250 9
	cd /tmp
	for file in fstab; do
		if [ -f $file ]; then
			echo -n "Copying $file..."
			cp $file /mnt/etc/$file
			echo "done."
		fi
	done

@


1.16
log
@Cleanup, new features, shrinkage.

Remove chunk of commented out, unused code.

Add _didnet=1 to enable_network() so that ftp upgrade
does not ask for network information it already has.

Tell a user that selects the http installation method
that the files will be downloaded via http.

Suppress all 'softdep' options in fstab_shadow so
there are no warnings when the filesystems are
mounted.

Suppress all non-ffs (including nfs, ufs) filesystems
from fstab_shadow. Ufs was never used to install
OpenBSD.

Suppress all 'noauto' filesystems from fstab_shadow.

Reword some comments and messages, esp. the one
just before the offer to edit fstab. Punch up the
fact that the fstab will not be saved, mention
that non-ffs and noauto filesystems will be
ignored.

Move

   /usr/X11R6/lib/X11/{rstart,twm,xkb,xsm,xinit}

directories to

   /usr/X11R6/lib/X11/XF3{rstart,twm,xkb,xsm,xinit}

and replace with links. Links can be overwritten
during upgrade. Directories can't. This enables the
upgrade from XFree86 3.x to XFree86 4.x.

ok deraadt@@ millert@@
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.15 2000/05/12 06:02:13 deraadt Exp $
a59 1
#	md_machine_arch()	- get machine architecture
a88 8

# Make sure we can write files (at least in /tmp)
# This might make an MFS mount on /tmp, or it may
# just re-mount the root with read-write enabled.
md_makerootwritable

# Get the machine architecture (must be done after md_makerootwritable)
ARCH=`md_machine_arch`
@


1.15
log
@fix an oopsie; millert
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.14 2000/04/30 19:39:27 millert Exp $
d133 1
d184 2
a185 15
# Now that the network has been configured, it is safe to configure the
# fstab.  We remove all but ufs/ffs.
(
	> /tmp/fstab
	while read _dev _mp _fstype _rest ; do
		if [ "X${_fstype}" = X"ufs" -o \
		     "X${_fstype}" = X"ffs" ]; then
			if [ "X${_fstype}" = X"ufs" ]; then
				# Convert ufs to ffs.
				_fstype=ffs
			fi
			echo "$_dev $_mp $_fstype $_rest" >> /tmp/fstab
		fi
	done
) < /mnt/etc/fstab
a186 3
echo	"The fstab is configured as follows:"
echo	""
cat /tmp/fstab
d190 7
a196 3
dependencies in the order which the filesystems are mounted.  Note that
this fstab is only for installation purposes, and will not be copied into
the root filesystem.
d211 2
d220 1
a220 1
# Check all of the filesystems.
d226 16
a256 24

# Fix up the fstab.
echo -n	"Converting ufs to ffs in /etc/fstab..."
(
	> /tmp/fstab
	while read _dev _mp _fstype _rest ; do
		if [ "X${_fstype}" = X"ufs" ]; then
			# Convert ufs to ffs.
			_fstype=ffs
		fi
		echo "$_dev $_mp $_fstype $_rest" >> /tmp/fstab
	done
) < /mnt/etc/fstab
echo	"done."
echo -n	"Would you like to edit the resulting fstab with ${EDITOR}? [y] "
getresp "y"
case "$resp" in
	y*|Y*)
		${EDITOR} /tmp/fstab
		;;

	*)
		;;
esac
@


1.14
log
@When doing an upgrade, if there is an /etc/sendmail.cf and no
/etc/mail/sendmail.cf, move /etc/sendmail.cf -> /etc/mail/sendmail.cf
and edit /etc/rc if needed.  That way the sendmail binary will be
able to find its .cf file on reboot.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.13 2000/04/30 19:10:01 millert Exp $
d294 1
a294 1
		ed - /home/millert/foo << \__rc_edit
@


1.13
log
@If the site tarball included a file /install.site (upgrade.site if we
are upgrading not installing) then execute it chroot'd to /mnt.
This allows people to customize the install procedure in a simple
yet flexible manner.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.12 2000/03/19 01:14:03 espie Exp $
d290 11
a301 1
	#_pid=`twiddle`
a303 1
	#kill $_pid
@


1.12
log
@populateusrlocal: create the right hierarchy under /usr/local
right before unmounting the new system.
Beats having mtree files around every package...
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.11 1999/10/08 03:54:14 millert Exp $
d300 1
@


1.11
log
@When making timezone link just say what it is doing, don't say
"doing...done" since it takes no noticable time...
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.10 1999/08/15 09:53:36 millert Exp $
d299 1
@


1.10
log
@o When clearing a variable, do ``foo='', not ``foo=""'' to save 2 bytes.
  There are other places where double quotes are used unnecessarily as well
o Kill md_copy_kernel() and check_kernel() since the kernel is now a 'set'
o Add support for shell escapes from any prompt
o Consolidate post-install_sets sanity checks and put them in sane_install().
o install_sets() now calls sane_install() to do the sanity checks and won't
  let you continue until things are sane (as far as it can determine).
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.9 1998/09/11 22:45:53 millert Exp $
d286 1
a286 1
	echo -n "Installing timezone link..."
a288 1
	echo "done."
@


1.9
log
@mi get_ifdevs()
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.8 1997/07/09 15:15:35 millert Exp $
d44 1
a44 1
ROOTDISK=""				# filled in below
a51 1
#	md_copy_kernel()	- copy a kernel to the installed disk
d105 1
a105 1
resp=""			# force one iteration
d112 1
a112 1
		resp=""	# force loop to repeat
a296 2

	md_copy_kernel
@


1.8
log
@Don't do needless sync and change -fast to -check in unmount_fs()
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.7 1997/05/14 21:22:07 millert Exp $
a54 1
#	md_get_ifdevs()		- return available network interfaces
@


1.7
log
@md_machine_arch must be done after md_makerootwritable (for /kern)
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.6 1997/05/13 18:22:14 millert Exp $
d46 1
a46 1
trap "unmount_fs -fast /tmp/fstab.shadow > /dev/null 2>&1; rm -f /tmp/fstab.shadow" 0
@


1.6
log
@Explicately mention what editor is being used.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.5 1997/05/03 23:06:02 tholo Exp $
d62 1
d97 3
@


1.5
log
@Disable twiddle() as it causes problems on some architectures
Actually install machine dependant sets if there are any specified
Special-case a set named "kernel" so that it will copy "bsd" to the root
disk
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.4 1997/04/30 18:52:50 niklas Exp $
d208 1
a208 1
echo -n	"Edit the fstab? [n] "
d262 1
a262 1
echo -n	"Would you like to edit the resulting fstab? [y] "
@


1.4
log
@We run OpenBSD. we also want vim acting as vi.
@
text
@d2 1
a2 1
#	$OpenBSD: upgrade.sh,v 1.2.4.5 1996/08/27 18:15:08 gwr Exp $
d70 1
a70 1
THESETS="$UPGRSETS"
d244 1
a244 1
install_sets
d290 1
a290 1
	_pid=`twiddle`
d293 1
a293 1
	kill $_pid
@


1.3
log
@sync to netbsd
@
text
@d2 1
d40 1
a40 1
#	NetBSD installation script.
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d2 1
a2 2
#	$OpenBSD$
#	$NetBSD: upgrade.sh,v 1.2 1996/02/28 00:47:45 thorpej Exp $
d39 1
a39 1
#	OpenBSD installation script.
a42 2
VERSION=1.1
export VERSION				# XXX needed in subshell
d45 1
a45 1
trap "umount /tmp > /dev/null 2>&1" 0
d51 1
d55 1
a56 1
#	md_checkfordisklabel()	- check for valid disklabel
d61 2
d68 3
d91 4
a94 2
# We don't like it, but it sure makes a few things a lot easier.
do_mfs_mount "/tmp" "2048"
a99 28
# Make sure there's a disklabel there.  If there isn't, puke after
# disklabel prints the error message.
md_checkfordisklabel ${ROOTDISK}
case $rval in
	1)
		cat << \__disklabel_not_present_1

FATAL ERROR: There is no disklabel present on the root disk!  You must
label the disk with SYS_INST before continuing.

__disklabel_not_present_1
		exit
		;;

	2)
		cat << \__disklabel_corrupted_1

FATAL ERROR: The disklabel on the root disk is corrupted!  You must
re-label the disk with SYS_INST before continuing.

__disklabel_corrupted_1
		exit
		;;

	*)
		;;
esac

a129 1
cp /mnt/etc/fstab /tmp/fstab
d181 1
a181 1
# fstab.  We remove all but ufs/ffs/nfs.
d183 2
a184 3
	rm -f /tmp/fstab.new
	while read line; do
		_fstype=`echo $line | awk '{print $3}'`
d186 6
a191 3
		    "X${_fstype}" = X"ffs" -o \
		    "X${_fstype}" = X"nfs" ]; then
			echo $line >> /tmp/fstab.new
d194 1
a194 10
) < /tmp/fstab

if [ ! -f /tmp/fstab.new ]; then
	echo	"ERROR: strange fstab!"
	exit 1
fi

# Convert ufs to ffs.
sed -e 's/ufs/ffs/' < /tmp/fstab.new > /tmp/fstab
rm -f /tmp/fstab.new
d211 1
a211 1
		vi /tmp/fstab
d232 10
d243 1
a243 1
install_sets $UPGRSETS
d250 10
a259 1
sed -e 's/ufs/ffs/' < /mnt/etc/fstab > /tmp/fstab
d265 1
a265 1
		vi /tmp/fstab
d289 1
a289 1
	pid=`twiddle`
d292 1
a292 1
	kill $pid
d295 1
a295 3
	echo -n "Copying kernel..."
	cp -p /bsd /mnt/bsd
	echo "done."
@


1.1
log
@update from netbsd
@
text
@d2 2
a3 1
#	$NetBSD: upgrade.sh,v 1.1 1996/01/06 22:45:15 pk Exp $
d5 1
a5 1
# Copyright (c) 1995 Jason R. Thorpe.
d8 3
d21 5
a25 4
#	This product includes software developed for the NetBSD Project
#	by Jason R. Thorpe.
# 4. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission
d27 11
a37 10
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d40 1
a40 1
#	NetBSD installation script.
d308 1
a308 1
	cp -p /netbsd /mnt/netbsd
@
