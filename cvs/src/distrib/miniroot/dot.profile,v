head	1.37;
access;
symbols
	OPENBSD_6_1:1.37.0.2
	OPENBSD_6_1_BASE:1.37
	OPENBSD_6_0:1.32.0.4
	OPENBSD_6_0_BASE:1.32
	OPENBSD_5_9:1.30.0.2
	OPENBSD_5_9_BASE:1.30
	OPENBSD_5_8:1.29.0.2
	OPENBSD_5_8_BASE:1.29
	OPENBSD_5_7:1.26.0.4
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.25.0.4
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.24.0.4
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.17.0.10
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.8
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.6
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.16.0.4
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.2
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.13.0.4
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.8.0.4
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.2
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.6.0.4
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.16
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.14
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.12
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.10
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4;
locks; strict;
comment	@# @;


1.37
date	2017.02.20.21.27.36;	author rpe;	state Exp;
branches;
next	1.36;
commitid	SF0rQku5616hbR23;

1.36
date	2016.09.09.14.52.28;	author rpe;	state Exp;
branches;
next	1.35;
commitid	LagusgSYK9alBDy7;

1.35
date	2016.09.05.10.19.46;	author rpe;	state Exp;
branches;
next	1.34;
commitid	VtsryqO8KJC4TuAH;

1.34
date	2016.09.05.09.15.05;	author rpe;	state Exp;
branches;
next	1.33;
commitid	fTrAyQxFOsmmtm8E;

1.33
date	2016.09.04.09.56.46;	author rpe;	state Exp;
branches;
next	1.32;
commitid	EXeiXjuJ69mSwSKw;

1.32
date	2016.04.08.17.09.18;	author rpe;	state Exp;
branches;
next	1.31;
commitid	XXYxorFWk6TL5NpX;

1.31
date	2016.04.02.12.23.46;	author rpe;	state Exp;
branches;
next	1.30;
commitid	RiZ3BjQb9aPCOLdl;

1.30
date	2016.01.26.22.26.54;	author rpe;	state Exp;
branches;
next	1.29;
commitid	dxYrxpftQCWNUnUN;

1.29
date	2015.07.03.18.29.08;	author rpe;	state Exp;
branches;
next	1.28;
commitid	fEgyl3TxLrCchTnJ;

1.28
date	2015.07.01.21.12.49;	author rpe;	state Exp;
branches;
next	1.27;
commitid	3DjknVkHk1wHsvsz;

1.27
date	2015.03.28.00.03.05;	author rpe;	state Exp;
branches;
next	1.26;
commitid	hxX5UqHok9DNQnHK;

1.26
date	2014.10.23.21.33.21;	author rpe;	state Exp;
branches;
next	1.25;
commitid	ckuAGTb8ys2YbbuO;

1.25
date	2014.07.16.14.19.05;	author deraadt;	state Exp;
branches;
next	1.24;
commitid	AlvsSOp22Swic7VO;

1.24
date	2014.02.21.16.30.14;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2014.02.21.16.29.08;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2013.12.16.16.58.22;	author halex;	state Exp;
branches;
next	1.21;

1.21
date	2013.12.02.20.55.11;	author halex;	state Exp;
branches;
next	1.20;

1.20
date	2013.11.28.00.09.21;	author rpe;	state Exp;
branches;
next	1.19;

1.19
date	2013.11.14.15.20.54;	author halex;	state Exp;
branches;
next	1.18;

1.18
date	2013.10.27.22.36.06;	author uwe;	state Exp;
branches;
next	1.17;

1.17
date	2011.07.08.23.53.53;	author halex;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.30.20.22.01;	author halex;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.30.19.31.19;	author halex;	state Exp;
branches;
next	1.14;

1.14
date	2010.01.10.13.32.56;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2009.06.12.03.30.00;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2009.06.07.03.52.29;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2009.06.04.06.41.53;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2009.06.04.06.23.53;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2009.06.03.23.44.53;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2008.08.03.14.18.00;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2007.11.16.21.18.35;	author krw;	state Exp;
branches;
next	1.6;

1.6
date	2007.02.16.04.48.48;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.04.20.11.12;	author krw;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.13.21.38.47;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.29.01.53.37;	author krw;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.09.05.53.54;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.22.02.43.16;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.37
log
@Zap the extra echo and show the prompt using the var?'prompt' feature
of read.
@
text
@#	$OpenBSD: dot.profile,v 1.36 2016/09/09 14:52:28 rpe Exp $
#	$NetBSD: dot.profile,v 1.1 1995/12/18 22:54:43 pk Exp $
#
# Copyright (c) 2009 Kenneth R. Westerback
# Copyright (c) 1995 Jason R. Thorpe
# Copyright (c) 1994 Christopher G. Demetriou
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by Christopher G. Demetriou.
# 4. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

export VNAME=$(sysctl -n kern.osrelease)
export VERSION="${VNAME%.*}${VNAME#*.}"
export ARCH=$(sysctl -n hw.machine)
export OBSD="OpenBSD/$ARCH $VNAME"
export PATH=/sbin:/bin:/usr/bin:/usr/sbin:/

umask 022

# emacs-style command line editing.
set -o emacs

# Extract rootdisk from last 'root on ...' dmesg line.
rootdisk=$(dmesg | sed -E '/^root on ([^ ]+) .*$/h;$!d;g;s//\1/')

if [[ -z $DONEPROFILE ]]; then
	DONEPROFILE=YES

	mount -u /dev/${rootdisk:-rd0a} /

	# Create a fake rc that just returns 1 and throws us back.
	echo ! : >/etc/rc

	# Set up some sane defaults.
	echo 'erase ^?, werase ^W, kill ^U, intr ^C, status ^T'
	stty newcrt werase ^W intr ^C kill ^U erase ^? status ^T

	cat <<__EOT

Welcome to the $OBSD installation program.
__EOT

	# Create working directories with proper permissions in /tmp.
	mkdir -m u=rwx,go=rx -p /tmp/{ai,i}

	# Start the automatic installation if netbooted or if a response file
	# is found in / after a timeout, but only the very first time around.
	timeout=false
	timer_pid=
	if [[ ! -f /tmp/ai/noai ]] && { ifconfig netboot >/dev/null 2>&1 ||
		[[ -f /auto_install.conf ]] ||
		[[ -f /auto_upgrade.conf ]]; }; then

		echo "Starting non-interactive mode in 5 seconds..."
		>/tmp/ai/noai

		trap 'kill $timeout_pid 2>/dev/null' EXIT
		trap 'exit 1' INT
		trap 'timeout=true' TERM

		# Stop monitoring background processes to avoid printing
		# job completion notices in interactive shell mode.  This
		# doesn't stop the "[1] <pid>" on starting a job though;
		# that's why re redirect stdout and stderr temporarily.
		set +m
		exec 3<&1 4<&2 >/dev/null 2>&1
		(sleep 5; kill $$) &
		timer_pid=$!
		exec 1<&3 2<&4 3<&- 4<&-
		set +m
	fi

	while :; do
		read REPLY?'(I)nstall, (U)pgrade, (A)utoinstall or (S)hell? '

		# Begin the automatic installation if the timeout has expired.
		if $timeout; then
			timeout=false
			echo
			REPLY=a
		else
			# User has made a choice; stop the read timeout.
			[[ -n $timer_pid ]] && kill $timer_pid 2>/dev/null
			timer_pid=
		fi

		case $REPLY in
		[aA]*)	/autoinstall && break;;
		[iI]*)	/install && break;;
		[uU]*)	/upgrade && break;;
		[sS]*)	break;;
		esac
	done
fi
@


1.36
log
@There were 3 ways of using shell at the initial prompt of the installer.
One is enough.

OK halex
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.35 2016/09/05 10:19:46 rpe Exp $
d97 1
a97 2
		echo -n '(I)nstall, (U)pgrade, (A)utoinstall or (S)hell? '
		read REPLY
@


1.35
log
@Tweak comments and spacing.

OK krw, halex
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.34 2016/09/05 09:15:05 rpe Exp $
d112 4
a115 13
		[aA]*)	/autoinstall && break
			;;
		[iI]*)	/install && break
			;;
		[uU]*)	/upgrade && break
			;;
		[sS]*)	break
			;;
		!)	echo "Type 'exit' to return to install."
			ksh
			;;
		!*)	eval "${REPLY#?}"
			;;
@


1.34
log
@Relax permissions to make files readable by unpriv users again.

Found out by naddy
OK deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.33 2016/09/04 09:56:46 rpe Exp $
d39 1
a40 1
export PATH=/sbin:/bin:/usr/bin:/usr/sbin:/
d42 1
d46 1
a46 2
# Extract rootdisk from last 'root on ...' line. e.g.
#	root on wd0a swap on wd0b dump on wd0b
a60 1
	# Installing or upgrading?
d69 2
a70 2
	# Did we netboot?  If so, then start the automatic installation
	# after a timeout, but only the very first time around.
d76 1
d100 1
a100 1
		# If the timeout has expired, begin the installation.
@


1.33
log
@Move files created by root during install/upgrade in a subdir of
/tmp with proper permissions so that unprivileged programs can not
tamper with them.

positive feedback from deraadt
OK halex
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.32 2016/04/08 17:09:18 rpe Exp $
d68 1
a68 1
	mkdir -m u=rwx,go= -p /tmp/{ai,i}
@


1.32
log
@Directly assign device name to rootdisk with modified sed pattern.

With help from and OK halex@@
OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.31 2016/04/02 12:23:46 rpe Exp $
d67 3
d74 1
a74 1
	if [[ ! -f /tmp/noai ]] && { ifconfig netboot >/dev/null 2>&1 ||
d78 1
a78 1
		>/tmp/noai
@


1.31
log
@- merge install.sh into install.sub as do_install()
- merge upgrade.sh into install.sub as do_upgrade()
- delete install.sh and upgrade.sh
- make install.sub executable
- turn install and upgrade into symbolic links to install.sub
- add autoinstall symbolic link to install.sub
- change dot.profile to use these symlinks
- introduce a -m option to set MODE in install.sub
- alternativly set MODE and AUTO depending on PROGNAME
- execute the do_{install,upgrade) functions depending on $MODE

OK halex@@, krw@@
'go for it' deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.30 2016/01/26 22:26:54 rpe Exp $
d47 1
a47 2
set -- $(dmesg | sed -n '/^root on /h;${g;p;}')
rootdisk=$3
@


1.30
log
@spacing

OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.29 2015/07/03 18:29:08 rpe Exp $
d110 1
a110 1
		[aA]*)	/install -a && break
@


1.29
log
@Use [aA]* instead of a*|A* in case-blocks.

OK krw@@
@@halex agreed on this in a similar diff
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.28 2015/07/01 21:12:49 rpe Exp $
d56 1
a56 1
	echo ! : > /etc/rc
@


1.28
log
@Use ksh style tests like in the rest of the installer scripts.

OK krw@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.27 2015/03/28 00:03:05 rpe Exp $
d110 1
a110 1
		a*|A*)	/install -a && break
d112 1
a112 1
		i*|I*)	/install && break
d114 1
a114 1
		u*|U*)	/upgrade && break
d116 1
a116 1
		s*|S*)	break
@


1.27
log
@- Start comments with capital letters.
- End comments with a full stop.

OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.26 2014/10/23 21:33:21 rpe Exp $
d50 1
a50 1
if [ "X${DONEPROFILE}" = "X" ]; then
d72 3
a74 3
	if [ ! -f /tmp/noai ] && { ifconfig netboot >/dev/null 2>&1 ||
		[ -f /auto_install.conf ] ||
		[ -f /auto_upgrade.conf ]; }; then
d105 1
a105 1
			[ -n "$timer_pid" ] && kill $timer_pid 2>/dev/null
@


1.26
log
@Extend autoinstall(8) feature:

- Ask for responsefile location (url or local path) if dhcp discovery
  fails for location or mode.  If 'next-server' is found in dhcp lease
  file, provide a default url http://next-server/install.conf.

- Ask for installer mode if the specified response file name does not
  match *install.conf or *upgrade.conf.

- If present, use /auto_install.conf or /auto_upgrade.conf as response
  file for unattended installation or upgrade.

- Automatically start installer in unattended mode if either one of
  these files is present when the system boots.

- Document changes in manpage and installation notes.

OK krw@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.25 2014/07/16 14:19:05 deraadt Exp $
d42 1
a42 1
# emacs-style command line editing
d55 1
a55 1
	# Create a fake rc that just returns 1 and throws us back
d58 1
a58 1
	# set up some sane defaults
@


1.25
log
@spaces
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.24 2014/02/21 16:30:14 deraadt Exp $
d72 3
a74 1
	if [ ! -f /tmp/noai ] && ifconfig netboot >/dev/null 2>&1; then
@


1.24
log
@oops, seperate pieces coming...
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.22 2013/12/16 16:58:22 halex Exp $
d46 1
a46 1
# 	root on wd0a swap on wd0b dump on wd0b
@


1.23
log
@services
@
text
@d2 1
d56 1
a56 1
	echo ! : >/etc/rc
@


1.22
log
@Replace `[RESPONSEFILE=...] install auto` voodoo with plain'ol getopts,
as discussed with uwe@@ at some point.

ok krw@@, rpe@@, "Cool" uwe@@
@
text
@d1 1
a1 2
#	$OpenBSD: dot.profile,v 1.21 2013/12/02 20:55:11 halex Exp $
#	$NetBSD: dot.profile,v 1.1 1995/12/18 22:54:43 pk Exp $
d55 1
a55 1
	echo ! : > /etc/rc
@


1.21
log
@As the number of interactively triggered (A)utoinstall's should be quite
outnumbered by (I)nstall's and (U)pgrade's, reorder the alternatives.

"sure" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.20 2013/11/28 00:09:21 rpe Exp $
d108 1
a108 1
		a*|A*)	/install auto && break
@


1.20
log
@Now, that the auto installer supports both, install and upgrade,
use "non-interactive mode" instead of installation.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.19 2013/11/14 15:20:54 halex Exp $
d93 1
a93 1
		echo -n '(A)utoinstall, (I)nstall, (U)pgrade or (S)hell? '
@


1.19
log
@fix ^C handling which was accidentally trapped a bit to much

ok rpe@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.18 2013/10/27 22:36:06 uwe Exp $
d73 1
a73 1
		echo "Starting non-interactive installation in 5 seconds..."
@


1.18
log
@Unattended installation using DHCP and a response file

For a completely unattended installation bsd.rd has to be netbooted,
a DHCP server must be running and provide "next-server", which will be
used to fetch "http://<next-server>/install.conf".  The format of the
response file is a list of "<key> = <value>" pairs where <key> is a
substring of the interactive question (case-insensitive) and <value> is
what would be entered interactively.

Minimal response file example:

  system hostname = openbsd
  password for root account = <...>
  network interfaces = re0
  IPv4 address for re0 = dhcp
  server? = <...>

This is a starting point, it still a bit rough.

ok krw@@, many improvements by halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.17 2011/07/08 23:53:53 halex Exp $
d76 2
a77 1
		trap 'kill $timeout_pid 2>/dev/null' INT EXIT
@


1.17
log
@make exiting the shell take you back to the inital prompt

"i like" henning@@, "Fine with me" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.16 2010/06/30 20:22:01 halex Exp $
d67 24
d92 14
a105 1
		read REPLY?'(I)nstall, (U)pgrade or (S)hell? '
d107 2
@


1.16
log
@revert last ^D behaviour change

requested and well explained by krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.14 2010/01/10 13:32:56 deraadt Exp $
d54 3
@


1.15
log
@make the installer quit when ^D is pressed at any prompt

ok deraadt@@
@
text
@d64 2
a65 1
	while read REPLY?'(I)nstall, (U)pgrade or (S)hell? '; do
@


1.14
log
@remove and move some chatty byte during upgrade startup; ok krw, idea from mcbride
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.13 2009/06/12 03:30:00 deraadt Exp $
d64 1
a64 2
	while :; do
		read REPLY?'(I)nstall, (U)pgrade or (S)hell? '
@


1.13
log
@Put back the once-only code that krw removed earlier, because we want ^C
from the install script to go to the # prompt, not back to the question.
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.12 2009/06/07 03:52:29 krw Exp $
d67 1
a67 2
		i*|I*)	echo "\nCool! Let's get to it.\n"
			/install && break
d69 1
a69 8
		u*|U*)	cat <<__EOT

NOTE: Once your system has been upgraded, you must manually merge any
changes to files in the 'etc' set into the files already on your system.
sysmerge(8) can help.

__EOT
			/upgrade && break
@


1.12
log
@More tersification. Fixes verbiage issue reported by jdixon@@ on
icb.
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.11 2009/06/04 06:41:53 krw Exp $
d50 2
a51 1
mount -u /dev/${rootdisk:-rd0a} /
d53 1
a53 3
# set up some sane defaults
echo 'erase ^?, werase ^W, kill ^U, intr ^C, status ^T'
stty newcrt werase ^W intr ^C kill ^U erase ^? status ^T
d55 6
a60 2
# Installing or upgrading?
cat <<__EOT
d64 7
a70 7
while :; do
	read REPLY?'(I)nstall, (U)pgrade or (S)hell? '
	case $REPLY in
	i*|I*)	echo "\nCool! Let's get to it.\n"
		/install && break
		;;
	u*|U*)	cat <<__EOT
d77 12
a88 11
		/upgrade && break
		;;
	s*|S*)	break
		;;
	!)	echo "Type 'exit' to return to install."
		ksh
		;;
	!*)	eval "${REPLY#?}"
		;;
	esac
done
@


1.11
log
@Implement '!' and '!<cmd>' at the "(I)nstall ..." prompt so we
aren't lying about being able to do that at any prompt.

Suggested by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.10 2009/06/04 06:23:53 krw Exp $
a59 10

This program can install $OBSD, or upgrade an existing
OpenBSD installation.

At any prompt except password prompts you can escape to a shell by
typing '!'. Default answers are shown in []'s and are selected by
pressing RETURN.  At any time you can exit this program by pressing
Control-C, but exiting during an $MODE can leave your system in an
inconsistent state.

d64 1
a64 1
	i*|I*)	echo "\nCool! Let's get to it."
@


1.10
log
@Only print the intro verbiage once, instead of every pass through the "(I)nstall, ..."
loop.

Noticed by & ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.9 2009/06/03 23:44:53 krw Exp $
d87 5
@


1.9
log
@Add hw.machine and kern.osrelease to install media sysctl. Using
these rather than hard coded variables allows the rationalization
of the greeting by moving it into dot.profile. Whack at dot.profile
a lot. Eliminate the 'Proceed with ...' question as unneeded.
Eliminate welcome().

ok deraadt@@ "I like" todd@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.8 2008/08/03 14:18:00 krw Exp $
d57 1
a57 2
while :; do
	cat <<__EOT
d71 1
d77 1
a77 2
	u*|U*)	
		cat <<__EOT
@


1.8
log
@Sparc miniroot hasn't worked for a while, since the sed code to find
the root disk was broken. Simplify and fix said sed code. Problem
noted by okan@@ and others, diagnosed by deraadt@@, sed suggestions from
nordin@@, jmc@@, fgsch@@, guenther@@.

'get something in before sparc gets done' deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.7 2007/11/16 21:18:35 krw Exp $
d4 1
d35 5
d45 3
a47 2
# Extract rootdisk from last 'root on wd0a swap on wd0b dump on wd0b' line.
set -- `dmesg | sed -n '/^root on /h;${g;p;}'`
d50 1
a50 4
if [ "X${DONEPROFILE}" = "X" ]; then
	DONEPROFILE=YES

	mount -u /dev/${rootdisk:-rd0a} /
d52 39
a90 22
	# set up some sane defaults
	echo 'erase ^?, werase ^W, kill ^U, intr ^C, status ^T'
	stty newcrt werase ^W intr ^C kill ^U erase ^? status ^T

	# Installing or upgrading?
	_forceloop=""
	while [ "X$_forceloop" = "X" ]; do
		echo -n '(I)nstall'
		[ -f upgrade ] && echo -n ', (U)pgrade'
		echo -n ' or (S)hell? '
		read _forceloop
		case "$_forceloop" in
		i*|I*)	/install
			;;
		u*|U*)	/upgrade
			;;
		s*|S*)	;;
		*)	_forceloop=""
			;;
		esac
	done
fi
@


1.7
log
@Simplify the sed expression used to set 'rootdisk'. Shaves bytes from the
install media. From Tamas Tevesz.
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.6 2007/02/16 04:48:48 deraadt Exp $
d39 3
a41 1
rootdisk=`dmesg|sed -n '/^root on /!d;${s#^root on \([^ ]*\).*#/dev/\1#;p;}'`
d46 1
a46 1
	mount -u ${rootdisk:-/dev/rd0a} /
@


1.6
log
@better X"" idiom in while loop; didickman@@yahoo.com
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.5 2006/03/04 20:11:12 krw Exp $
d39 1
a39 7
rootdisk=`dmesg|sed -n -e '/OpenBSD /h' -e '//!H' -e '${
	g
	p
}'|sed -n -e '/^root on \([0-9a-z]*\).*/{
	s//\/dev\/\1/
	p
}'`
@


1.5
log
@Put comment on separate line so it is stripped from install media.
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.4 2002/09/13 21:38:47 deraadt Exp $
d58 1
a58 1
	while [ "X$_forceloop" = X"" ]; do
@


1.4
log
@do not stty 9600
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.3 2002/08/29 01:53:37 krw Exp $
d36 2
a37 1
set -o emacs # emacs-style command line editing
@


1.3
log
@Add a new verb to list2sh.awk, 'REMOVE'. This allows the easy
disabling of '(U)pgrade' in architectures by adding

REMOVE upgrade

to the end of the 'list' file for that architecture.

Add code to dot.profile to check for the presence of the upgrade
script before offering to (U)pgrade.

Use the new verb to disable upgrades for sparc.

ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.2 2002/06/09 05:53:54 todd Exp $
d53 1
a53 1
	stty newcrt werase ^W intr ^C kill ^U erase ^? status ^T 9600
@


1.2
log
@knf
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.1 2002/04/22 02:43:16 deraadt Exp $
d58 3
a60 1
		echo -n '(I)nstall, (U)pgrade or (S)hell? '
@


1.1
log
@use one common dot.profile for all
@
text
@d1 1
a1 1
#	$OpenBSD: dot.profile,v 1.11 2002/04/13 17:36:56 deraadt Exp $
d7 1
a7 1
# 
@

