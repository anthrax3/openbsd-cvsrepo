head	1.21;
access;
symbols
	OPENBSD_6_1:1.21.0.16
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.14
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.10
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.2
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.8
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.17.0.6
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.4
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.2
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.12
	OPENBSD_5_0:1.16.0.10
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.8
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.6
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.4
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.12.0.26
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.24
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.22
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.20
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.18
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.16
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.14
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.12
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.10
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.8
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.6
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.4
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.5.0.22
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.20
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.18
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.16
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.14
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@# @;


1.21
date	2014.02.21.19.14.23;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2014.02.21.16.30.14;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2014.02.21.16.29.08;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2014.01.19.00.33.40;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2012.03.19.08.30.08;	author nicm;	state Exp;
branches;
next	1.16;

1.16
date	2009.06.04.00.44.47;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2009.05.30.03.58.03;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2009.05.05.05.46.31;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2009.04.17.03.50.53;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2002.11.28.03.06.30;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2002.08.29.01.53.37;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.24.13.19.48;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.10.23.43.22;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.04.30.01.30.41;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.04.29.17.13.38;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.25.21.57.43;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.05.05.16.31.36;	author grr;	state Exp;
branches;
next	1.4;

1.4
date	97.05.05.11.56.33;	author grr;	state Exp;
branches;
next	1.3;

1.3
date	97.04.30.18.52.47;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.09.05.21.26.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.26.18.35.42;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@remove irksome useless comments
@
text
@#	$OpenBSD: list2sh.awk,v 1.19 2014/02/21 16:29:08 deraadt Exp $

BEGIN {
	printf("cd ${OBJDIR}\n");
	printf("\n");
}
/^$/ || /^#/ {
	print $0;
	next;
}
$1 == "COPY" {
	printf("echo '%s'\n", $0);
	printf("test -f ${TARGDIR}/%s && rm -fr ${TARGDIR}/%s\n", $3, $3);
	printf("cp %s ${TARGDIR}/%s\n", $2, $3);
	next;
}
$1 == "REMOVE" {
	printf("echo '%s'\n", $0);
	printf("rm -f ${TARGDIR}/%s\n", $2);
	next;
}
$1 == "STRIP" {
	printf("echo '%s'\n", $0);
	printf("test -f ${TARGDIR}/%s && rm -fr ${TARGDIR}/%s\n", $3, $3);
	printf("cp %s ${TARGDIR}/%s\n", $2, $3);
	printf("strip ${TARGDIR}/%s\n", $3);
	next;
}
$1 == "LINK" {
	printf("echo '%s'\n", $0);
	for (i = 3; i <= NF; i++) {
		printf("test -f ${TARGDIR}/%s && rm -f ${TARGDIR}/%s\n", $i, $i);
		printf("(cd ${TARGDIR}; ln %s %s)\n", $2, $i);
	}
	next;
}
$1 == "SYMLINK" {
	printf("echo '%s'\n", $0);
	for (i = 3; i <= NF; i++) {
		printf("test -f ${TARGDIR}/%s && rm -f ${TARGDIR}/%s\n", $i, $i);
		printf("(cd ${TARGDIR}; ln -s %s %s)\n", $2, $i);
	}
	next;
}
$1 == "ARGVLINK" {
	# crunchgen directive; ignored here
	next;
}
$1 == "SRCDIRS" {
	# crunchgen directive; ignored here
	next;
}
$1 == "LIBS" {
	# crunchgen directive; ignored here
	next;
}
$1 == "CRUNCHSPECIAL" {
	# crunchgen directive; ignored here
	next;
}
$1 == "TZ" {
	printf("echo '%s'\n", $0);
	printf("(cd ${TARGDIR}; sh $UTILS/maketz.sh $DESTDIR)\n");
	next;
}
$1 == "COPYDIR" {
	printf("echo '%s'\n", $0);
	printf("(cd ${TARGDIR}/%s && find . ! -name . | xargs /bin/rm -rf)\n",
	    $3);
	printf("(cd %s && pax -pe -rw . ${TARGDIR}/%s)\n", $2, $3);
	next;
}
$1 == "SPECIAL" {
# escaping shell quotation is ugly whether you use " or ', use cat <<'!' ...
	work=$0;
	gsub("[\\\\]", "\\\\", work);
	gsub("[\"]", "\\\"", work);
	gsub("[$]", "\\$", work);
	gsub("[`]", "\\`", work);
	printf("echo \"%s\"\n", work);
	work=$0;
	sub("^[ 	]*" $1 "[ 	]*", "", work);
	printf("(cd ${TARGDIR}; %s)\n", work);
	next;
}
$1 == "TERMCAP" {
# tic -r flag may generate harmless warning about pccon+base:
#     "terminal 'pccon+base': enter_reverse_mode but no exit_attribute_mode"
	printf("echo '%s'\n", $0);
	printf("(cd ${TARGDIR}; tic -C -x -r -e %s ${UTILS}/../../share/termtypes/termtypes.master | sed -e '/^#.*/d' -e '/^$$/d' > %s)\n",
	    $2, $3);
	next;
}
$1 == "SCRIPT" {
	printf("echo '%s'\n", $0);
	printf("sed -e '/^[ 	]*#[ 	].*$/d' -e '/^[ 	]*#$/d' < %s > ${TARGDIR}/%s\n",
	    $2, $3);
	next;
}
{
	printf("echo '%s'\n", $0);
	printf("echo 'Unknown keyword \"%s\" at line %d of input.'\n", $1, NR);
	printf("exit 1\n");
	exit 1;
}
END {
	printf("\n");
	printf("exit 0\n");
	exit 0;
}
@


1.20
log
@oops, seperate pieces coming...
@
text
@d1 1
a1 2
#	$OpenBSD: list2sh.awk,v 1.18 2014/01/19 00:33:40 deraadt Exp $
#	$NetBSD: list2sh.awk,v 1.2 1996/05/04 15:45:31 pk Exp $
@


1.19
log
@services
@
text
@d2 1
@


1.18
log
@we no long use the /var/hash files, but rely on the SHA256.sig file.
We can remove the hashing support.
@
text
@d1 1
a1 2
#	$OpenBSD: list2sh.awk,v 1.17 2012/03/19 08:30:08 nicm Exp $
#	$NetBSD: list2sh.awk,v 1.2 1996/05/04 15:45:31 pk Exp $
@


1.17
log
@Add a comment about harmless warning emitted by tic with -r to the
TERMCAP stanza, no longer replace tabset (not needed anymore) and remove
blank lines from output termcap file.

ok deraadt millert
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.16 2009/06/04 00:44:47 krw Exp $
a59 8
	next;
}
$1 == "HASH" {
	printf("echo '%s' from RELEASEDIR=$RELEASEDIR for REV=$REV\n", $0);
	printf("(cd ${TARGDIR}; sh $UTILS/makehash.sh %s $REV $RELEASEDIR", $2);
	for (i = 3; i <= NF; i++)
		printf(" %s", $i);
	printf(")\n");
@


1.16
log
@Nuke now superfluous ARCH=ARCH lines in install.md and the sed processing of
those lines in list2sh.awk.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.15 2009/05/30 03:58:03 miod Exp $
d96 2
d99 1
a99 1
	printf("(cd ${TARGDIR}; tic -C -x -r -e %s ${UTILS}/../../share/termtypes/termtypes.master | sed -e '/^#.*/d' -e 's,/usr/share/lib/tabset,/usr/share/tabset,g' -e 's,/usr/lib/tabset,/usr/share/tabset,g' > %s)\n",
@


1.15
log
@Allow the HASH command in ramdisk list files to specify additional files
to be checksummed. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.14 2009/05/05 05:46:31 deraadt Exp $
d103 1
a103 1
	printf("sed -e '/^[ 	]*#[ 	].*$/d' -e '/^[ 	]*#$/d' -e \"s/^ARCH=ARCH$/ARCH=`arch -ks`/\" < %s > ${TARGDIR}/%s\n",
@


1.14
log
@Add a mechanism to build a false hierarchy of the zoneinfo on
the ramdisk
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.13 2009/04/17 03:50:53 deraadt Exp $
d64 4
a67 1
	printf("(cd ${TARGDIR}; sh $UTILS/makehash.sh var/hash $REV $RELEASEDIR)\n");
@


1.13
log
@A new directive HASH, which fills a a hash directory (on the media)
with the SHA256 hashes of the various install sets
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.12 2002/11/28 03:06:30 deraadt Exp $
d65 5
@


1.12
log
@spaces
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.11 2002/08/29 01:53:37 krw Exp $
d60 5
@


1.11
log
@Add a new verb to list2sh.awk, 'REMOVE'. This allows the easy
disabling of '(U)pgrade' in architectures by adding

REMOVE upgrade

to the end of the 'list' file for that architecture.

Add code to dot.profile to check for the presence of the upgrade
script before offering to (U)pgrade.

Use the new verb to disable upgrades for sparc.

ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.10 2002/05/24 13:19:48 markus Exp $
d22 1
a22 1
}	
@


1.10
log
@add LIBS option the crunchgen config, allows adding custom libraries
in list.local (e.g. for adding ssh to the ramdisk); ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.9 2002/05/10 23:43:22 deraadt Exp $
d18 5
@


1.9
log
@STRIP is a binary install target
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.8 2002/04/30 01:30:41 deraadt Exp $
d46 4
@


1.8
log
@add a SCRIPT command which does sed-based comment stripping, and also the ARCH=ARCH replacement
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.7 2002/04/29 17:13:38 deraadt Exp $
d16 7
@


1.7
log
@generate termcap file using a list2sh.awk directrive; distrib becomes a lot smaller again
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.6 2002/04/25 21:57:43 deraadt Exp $
d69 6
@


1.6
log
@merge in changes from other list2sh.awk files
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.5 1997/05/05 16:31:36 grr Exp $
d64 6
@


1.5
log
@last pass for now up correcting/upgrade sparc miniroot and install/upgrade stuff
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.4 1997/05/05 11:56:33 grr Exp $
d14 1
a14 1
	printf("rm -f ${TARGDIR}/%s\n", $3);
d21 1
a21 1
		printf("rm -f ${TARGDIR}/%s\n", $i);
d29 1
a29 1
		printf("rm -f ${TARGDIR}/%s\n", $i);
@


1.4
log
@make list2sh.awk safe for meta-characters in SPECIAL
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.3 1997/04/30 18:52:47 niklas Exp $
d59 1
a59 1
	gsub("[`]", "\\&", work);
@


1.3
log
@We run OpenBSD. we also want vim acting as vi.
@
text
@d1 1
a1 1
#	$OpenBSD: list2sh.awk,v 1.2 1996/05/04 15:45:31 pk Exp $
d54 10
a63 5
	printf("echo '%s'\n", $0);
	printf("(cd ${TARGDIR};");
	for (i = 2; i <= NF; i++)
		printf(" %s", $i);
	printf(")\n");
@


1.2
log
@sync to netbsd
@
text
@d1 1
@


1.1
log
@update from netbsd
@
text
@d1 1
a1 1
#	$NetBSD: list2sh.awk,v 1.1 1995/12/18 22:47:30 pk Exp $
d19 4
a22 2
	printf("rm -f ${TARGDIR}/%s\n", $3);
	printf("(cd ${TARGDIR}; ln %s %s)\n", $2, $3);
d27 16
a42 2
	printf("rm -f ${TARGDIR}/%s\n", $3);
	printf("(cd ${TARGDIR}; ln -s %s %s)\n", $2, $3);
@
