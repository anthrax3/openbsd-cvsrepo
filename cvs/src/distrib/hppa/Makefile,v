head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.32
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.34
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.30
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.26
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.28
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.22
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.24
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.20
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.18
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.16
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.14
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.12
	OPENBSD_5_0:1.4.0.10
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.8
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.6
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.6
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.18
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.16
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.14
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.12
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.10
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.8
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.6
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2007.10.18.18.16.20;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.14.18.57.32;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.30.21.05.00;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@#	$OpenBSD: Makefile,v 1.3 2007/10/18 18:16:20 deraadt Exp $

SUBDIR=ramdisk

.if	make(obj) || make(cleandir) || make(clean)
SUBDIR+= iso
.endif

unconfig:
	cd ramdisk; ${MAKE} unconfig

.include <bsd.subdir.mk>
@


1.3
log
@enter iso dir for clean/cleandir, too, to delete dribbles
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2007/08/14 18:57:32 deraadt Exp $
d10 1
a10 2
	cd ramdisk_cd; ${MAKE} unconfig
	cd ramdiskA; ${MAKE} unconfig
@


1.2
log
@make obj dirs in iso; talked with miod about it
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2003/01/30 21:05:00 mickey Exp $
d5 1
a5 1
.if	make(obj)
@


1.1
log
@this allows to build a ramdiskNN.lif
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 8
@

