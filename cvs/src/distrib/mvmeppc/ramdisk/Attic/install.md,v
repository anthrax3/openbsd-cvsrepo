head	1.26;
access;
symbols
	OPENBSD_4_9:1.25.0.8
	OPENBSD_4_9_BASE:1.25
	OPENBSD_4_8:1.25.0.6
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.25.0.2
	OPENBSD_4_7_BASE:1.25
	OPENBSD_4_6:1.25.0.4
	OPENBSD_4_6_BASE:1.25
	OPENBSD_4_5:1.24.0.4
	OPENBSD_4_5_BASE:1.24
	OPENBSD_4_4:1.24.0.2
	OPENBSD_4_4_BASE:1.24
	OPENBSD_4_3:1.23.0.2
	OPENBSD_4_3_BASE:1.23
	OPENBSD_4_2:1.22.0.10
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.22.0.8
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.22.0.6
	OPENBSD_4_0_BASE:1.22
	OPENBSD_3_9:1.22.0.4
	OPENBSD_3_9_BASE:1.22
	OPENBSD_3_8:1.22.0.2
	OPENBSD_3_8_BASE:1.22
	OPENBSD_3_7:1.21.0.6
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.21.0.4
	OPENBSD_3_6_BASE:1.21
	OPENBSD_3_5:1.21.0.2
	OPENBSD_3_5_BASE:1.21
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	OPENBSD_3_3:1.16.0.2
	OPENBSD_3_3_BASE:1.16
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@# @;


1.26
date	2011.07.07.19.16.44;	author deraadt;	state dead;
branches;
next	1.25;

1.25
date	2009.06.04.00.44.47;	author krw;	state Exp;
branches;
next	1.24;

1.24
date	2008.06.26.05.42.04;	author ray;	state Exp;
branches;
next	1.23;

1.23
date	2008.03.04.00.36.38;	author krw;	state Exp;
branches;
next	1.22;

1.22
date	2005.03.27.15.26.59;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2003.09.28.23.19.43;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.22.01.31.39;	author krw;	state Exp;
branches;
next	1.19;

1.19
date	2003.09.21.02.11.42;	author krw;	state Exp;
branches;
next	1.18;

1.18
date	2003.09.19.02.40.11;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2003.08.16.20.37.24;	author krw;	state Exp;
branches;
next	1.16;

1.16
date	2002.12.04.13.11.23;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2002.11.07.01.28.52;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2002.05.20.16.53.57;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.19.16.16.05;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.18.17.56.03;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.14.01.49.25;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.09.21.54.46;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.08.23.01.47;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2002.04.28.14.44.01;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2002.04.28.02.13.20;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.25.21.28.13;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.31.17.30.31;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.14.03.26.05;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.23.01.51.52;	author krw;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.04.22.25.02;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.26.22.23.25;	author smurph;	state Exp;
branches;
next	;


desc
@@


1.26
log
@remove mvmeppc; it is really rough shape.  ok drahn miod
@
text
@#	$OpenBSD: install.md,v 1.25 2009/06/04 00:44:47 krw Exp $
#
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# machine dependent section of installation/upgrade script.
#

md_installboot() {
}

md_prep_disklabel() {
}

md_congrats() {
}

md_consoleinfo() {
}
@


1.25
log
@Nuke now superfluous ARCH=ARCH lines in install.md and the sed processing of
those lines in list2sh.awk.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.24 2008/06/26 05:42:04 ray Exp $
@


1.24
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.23 2008/03/04 00:36:38 krw Exp $
a33 2

ARCH=ARCH
@


1.23
log
@Redo serial console configuration logic. Smaller, easier to
understand.

Add serial console handling for alpha, macppc, zaurus.  No functional
change for i386/amd64.

All archs should now have automatic serial console configuration.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.22 2005/03/27 15:26:59 krw Exp $
a17 7
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
@


1.22
log
@Oops. Missed one md_set_term().
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.21 2003/09/28 23:19:43 krw Exp $
d51 3
@


1.21
log
@Stub out mvmeppc install.md as it currently is

a) Completely wrong since mvmeppc never did support MacOS/HFS.

b) Unused, as the mvmeppc port is in 'limbo'.

c) In need of a complete re-write when mvmeppc comes out of limbo.

d) An exact duplicate of macppc/ramdisk/install.md, i.e. without
any independant imbedded knowledge.

ok miod@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.20 2003/09/22 01:31:39 krw Exp $
a42 3

md_set_term() {
}
@


1.20
log
@Introduce a function ask_yn() to use when asking 'yes or no'
questions.

ask_yn() always returns a 'y' or 'n' in $resp, vastly simplifying the
logic used to check the user response.

ask_yn() insists on the user responding with a 'y', 'n', 'yes', or
'no'. Case is ignored.

Previously almost any input was accepted as either a yes or a no
depending on the question. ask_yn() reduces the chance of user error,
e.g.  by answering the next question (default route) instead of the
posed one (Use DNS server now?).

All 'yes or no' questions now use ask_yn(). All questions show the
full default answer, i.e. 'yes' or 'no' rather than 'y' or 'n'.

Some minor logic cleanups of the usual sort, but no changes to logic
flow or questions bar minor verbiage adjustment.

Inspired by a Bob Beck install nit.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.19 2003/09/21 02:11:42 krw Exp $
a41 2
MDTERM=vt100
MDFSTYPE=msdos
a47 194
	local _disk=$1

	case $disklabeltype in
	HFS)	cat << __EOT
The 'ofwboot' program needs to be copied to the first HFS partition of $_disk
to allow booting of OpenBSD.
__EOT
		;;

	MBR)	echo "Installing boot in the msdos partition ${_disk}i"
		if mount -t msdos /dev/${_disk}i /mnt2 ; then
			cp /usr/mdec/ofwboot /mnt2
			umount /mnt2
		else
			echo "Failed, you will not be able to boot from $_disk."
		fi
		;;
	esac
}

md_init_mbr() {
	local _disk=$1

	cat << __EOT

You will now be asked if you want to initialize $_disk with a 1MB MSDOS
partition. This is the recommended setup and will allow you to store the boot
and other interesting things here.

If you want to have a different setup, exit 'install' now and do the MBR
initialization by hand using the 'fdisk' program.

If you choose to manually setup the MSDOS partition, consult your PowerPC
OpenFirmware manual -and- the PowerPC OpenBSD Installation Guide for doing
setup this way.

__EOT
	ask_yn "Do you want to initialize the MBR and the MSDOS partition?" yes
	[[ $resp == n ]] && exit

	cat << __EOT
An MBR record with an OpenBSD usable partition table will now be copied to your
disk. Unless you have special requirements, you will not need to edit this MBR.
After the MBR is copied an empty 1MB MSDOS partition will be created on the
disk. You *MUST* setup the OpenBSD disklabel to have a partition include this
MSDOS partition. You will have an opportunity to do this shortly.

You will probably see a few '...: no disk label' messages. It's completely
normal. The disk has no label yet. This may take a minute or two...
__EOT
	sleep 2

	echo -n "Creating Master Boot Record (MBR)..."
	fdisk -i -f /usr/mdec/mbr $_disk
	echo "done."

	echo -n "Copying 1MB MSDOS partition to disk..."
	gunzip < /usr/mdec/msdos1mb.gz | dd of=/dev/r${_disk}c bs=512 seek=1 >/dev/null 2>&1
	echo "done."
}

md_checkfordisklabel() {
	local rval _disk=$1

	cat << __EOT

Apple systems have two methods to label/partition a boot disk.

Either the disk can be partitioned with Apple HFS partition tools to contain an
"Unused" partition, or without any MacOS tools, the disk can be labeled using
an MBR partition table.

If the HFS (DPME) partition table is used, after the disk is partitioned with
the Apple software, the "Unused" section must be changed to type "OpenBSD" name
"OpenBSD" using the pdisk tool contained on this ramdisk. The disklabel can
then be edited normally.

WARNING: the MBR partitioning code will HAPPILY overwrite/destroy any HFS
         partitions on the disk, including the partition table. Choose the
         MBR option carefully, knowing this fact.
__EOT

	ask "Do you want to use (H)FS labeling or (M)BR labeling" H
	case $resp in
	m*|M*)	export disklabeltype=MBR
		md_checkforMBRdisklabel $_disk
		rval=$?
		;;
	*)	export disklabeltype=HFS
		pdisk /dev/${_disk}c
		rval=$?
		;;
	esac
	return $rval
}

md_checkforMBRdisklabel() {
	local _disk=$1 rval=0

	ask_yn "Are you *sure* you want to put a MBR disklabel on the disk?"
	[[ $resp == n ]] && exit

	ask_yn "Have you initialized an MSDOS partition using OpenFirmware?"
	case $resp in
	n)	md_init_mbr $_disk;;
	y)	cat << __EOT
You may keep your current setup if you want to be able to use any already
loaded OS. However you will be asked to prepare an empty partition for OpenBSD
later. There must also be at least ~0.5MB free space in the boot partition to
hold the OpenBSD bootloader.

Also note that the boot partition must be included as partition 'i' in the
OpenBSD disklabel.

__EOT
		ask_yn "Keep the current MSDOS partition setup?" yes
		[[ $resp == n ]] && md_init_mbr $_disk
		;;
	esac

	disklabel -r $_disk >/dev/null 2>/tmp/checkfordisklabel

	if grep "no disk label" /tmp/checkfordisklabel; then
		rval=1
	elif grep "disk label corrupted" /tmp/checkfordisklabel; then
		rval=2
	fi >/dev/null 2>&1

	rm -f /tmp/checkfordisklabel
	return $rval
}

md_prep_fdisk() {
	local _disk=$1

	cat << __EOT

This disk has not previously been used with OpenBSD. You may share this disk
with other operating systems. However, to be able to boot the system you will
need a small DOS partition in the beginning of the disk to hold the kernel
boot. OpenFirmware understands how to read an MSDOS style format from the disk.

This DOS style partitioning has been taken care of if you chose to do that
initialization earlier in the install.

WARNING: Wrong information in the BIOS partition table might render the disk
         unusable.
__EOT

	ask "Press [Enter] to continue"

	echo "\nCurrent partition information is:"
	fdisk $_disk
	ask "Press [Enter] to continue"

	while : ; do
		cat << __EOT

An OpenBSD partition should have a type (id) of 166 (A6), and should be the
only partition marked as active. Also make sure that the size of the partition
to be used by OpenBSD is correct, otherwise OpenBSD disklabel installation will
fail. Furthermore, the partitions must NOT overlap each others.

The fdisk utility will be started update mode (interactive.) You will be able
to add / modify this information as needed. If you make a mistake, simply exit
fdisk without storing the new information, and you will be allowed to start
over.

__EOT
		ask "Press [Enter] to continue"

		fdisk -e $_disk
		cat << __EOT

The new partition information is:

$(fdisk $_disk)

(You will be permitted to edit this information again.)
-------------------------------------------------------
__EOT
		ask_yn "Is the above information correct?"
		[[ $resp == y ]] && break
	done

	cat << __EOT

Please take note of the offset and size of the OpenBSD partition *AND* the
MSDOS partitions you may want to access from OpenBSD. At least the MSDOS
partition used for booting must be accessible by OpenBSD as partition 'i'. You
may need this information to fill in the OpenBSD disklabel later.

__EOT
	ask "Press [Enter] to continue"
a50 60
	local _disk=$1 _q

	md_checkfordisklabel $_disk
	case $? in
	0)	_q="Do you wish to edit the existing disklabel on $_disk?"
		;;
	1)	md_prep_fdisk $_disk
		echo "WARNING: $_disk has no label"
		_q="Do you want to create one with the disklabel editor?"
		;;
	2)	echo "WARNING: The disklabel on $_disk is invalid."
		_q="Do you want to try and repair the damage using the disklabel editor?"
		;;
	esac

	if [[ -n $_q ]]; then
		ask_yn "$_q" yes
		[[ $resp == n ]] && return
	fi

	# display example
	cat << __EOT

Disk partition sizes and offsets are in sector (most likely 512 bytes) units.
You may set these size/offset pairs on cylinder boundaries
     (the number of sector per cylinder is given in )
     (the 'sectors/cylinder' entry, which is not shown here)
Also, you *must* make sure that the 'i' partition points at the MSDOS partition
that will be used for booting. The 'c' partition shall start at offset 0 and
include the entire disk. This is most likely correct when you see the default
label in the editor.

Do not change any parameters except the partition layout and the label name.

   [Here is an example of what the partition information may look like.]
10 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  a:   120832    10240    4.2BSD     1024  8192    16   # (Cyl.   11*- 142*)
  b:   131072   131072      swap                        # (Cyl.  142*- 284*)
  c:  6265200        0    unused     1024  8192         # (Cyl.    0 - 6809)
  e:   781250   262144    4.2BSD     1024  8192    16   # (Cyl.  284*- 1134*)
  f:  1205000  1043394    4.2BSD     1024  8192    16   # (Cyl. 1134*- 2443*)
  g:  2008403  2248394    4.2BSD     1024  8192    16   # (Cyl. 2443*- 4626*)
  h:  2008403  4256797    4.2BSD     1024  8192    16   # (Cyl. 4626*- 6809*)
  i:    10208       32     MSDOS                        # (Cyl.    0*- 11*)
[End of example]
__EOT
	ask "Press [Enter] to continue"

	if [[ $disklabeltype == HFS ]]; then
		disklabel -c -f /tmp/fstab.$_disk -E $_disk
	elif [[ $disklabeltype == MBR ]]; then
		disklabel -W $_disk
		disklabel $_disk >/tmp/label.$$
		disklabel -r -R $_disk /tmp/label.$$
		rm -f /tmp/label.$$
		disklabel -f /tmp/fstab.$_disk -E $_disk
	else
		echo "unknown disk label type"
	fi
a53 5
	cat << __EOT

Once the machine has rebooted use Open Firmware to boot into OpenBSD, as
described in the install document.
__EOT
@


1.19
log
@Fix extraneous display of grep output when searching disklabel output for
error information. Previously things like:

disklabel: no disk label
WARNING: Disk wd0 has no disk label. You will be creating a new one.

would be printed. Now the 'disklabel: no disk label' message is correctly
sent to /dev/null.

Take the opportunity to clean up a bit of code and formatting, making all
the md_checkfordisklabel() functions as identical as possible.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.18 2003/09/19 02:40:11 krw Exp $
d87 2
a88 5
	ask "Do you want to initialize the MBR and the MSDOS partition?" y
	case $resp in
	n*|N*)	exit 0	;;
	*)		;;
	esac
d149 2
a150 5
	ask "Are you *sure* you want to put a MBR disklabel on the disk?" n
	case $resp in
	n*|N*)	echo "aborting install"
		exit 0;;
	esac
d152 1
a152 1
	ask "Have you initialized an MSDOS partition using OpenFirmware?" n
d154 2
a155 2
	n*|N*)	md_init_mbr $_disk;;
	*)	cat << __EOT
d165 2
a166 4
		ask "Do you want to keep the current MSDOS partition setup?" y
		case $resp in
		n*|N*)	md_init_mbr $_disk;;
		esac
d231 2
a232 6
		ask "Is the above information correct?" n

		case $resp in
		n*|N*)	;;
		*)	break ;;
		esac
d247 1
a247 1
	local _disk=$1
d251 1
a251 1
	0)	ask "Do you wish to edit the existing disklabel on $_disk?" y
d255 1
a255 1
		ask "Do you want to create one with the disklabel editor?" y
d258 1
a258 1
		ask "Do you want to try and repair the damage using the disklabel editor?" y
d262 4
a265 4
	case $resp in
	y*|Y*)	;;
	*)	return ;;
	esac
@


1.18
log
@Sync with 'modernization' changes to macppc. Also fix a couple of whitespace
typos in macppc.

Cosmetic changes only, no semantic change.

macppc and mvmeppc install.md now identical (again?).
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.17 2003/08/16 20:37:24 krw Exp $
d150 1
a150 1
	local _disk=$1
d178 2
a179 1
	disklabel -r $_disk > /dev/null 2> /tmp/checkfordisklabel
d184 1
a184 3
	else
		rval=0
	fi
@


1.17
log
@Minor cosmetic cleanup.

Use '<msg>...done.' consistantly by replacing last five varient uses. Out with
'<msg> ... done.', '<msg>...Done.', etc.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.16 2002/12/04 13:11:23 miod Exp $
d50 11
a60 8
	if [[ $disklabeltype = "HFS" ]]
	then
		echo "the 'ofwboot' program needs to be copied to the first HFS partition"
		echo "of the disk to allow booting of OpenBSD"
	elif [[ $disklabeltype = "MBR" ]]
	then
		echo "Installing boot in the msdos partition /dev/${1}i"
		if mount -t msdos /dev/${1}i /mnt2 ; then
d64 1
a64 1
			echo "Failed, you will not be able to boot from /dev/${1}."
d66 2
a67 1
	fi
d71 20
a90 35
	# $1 is the disk to init
	echo
	echo "You will now be asked if you want to initialize the disk with a 1MB"
	echo "MSDOS partition. This is the recommended setup and will allow you to"
	echo "store the boot and other interesting things here."
	echo
	echo "If you want to have a different setup, exit 'install' now and do"
	echo "the MBR initialization by hand using the 'fdisk' program."
	echo
	echo "If you choose to manually setup the MSDOS partition, "
	echo "consult your PowerPC OpenFirmware manual -and- the"
	echo "PowerPC OpenBSD Installation Guide for doing setup this way."
	echo
	ask "Do you want to init the MBR and the MSDOS partition?" y
	case "$resp" in
	n*|N*)	exit 0;;
	*)	echo
		echo "An MBR record with an OpenBSD usable partition table will now be copied"
		echo "to your disk. Unless you have special requirements you will not need"
		echo "to edit this MBR. After the MBR is copied an empty 1MB MSDOS partition"
		echo "will be created on the disk. You *MUST* setup the OpenBSD disklabel"
		echo "to have a partition include this MSDOS partition."
		echo "You will have an opportunity to do this shortly."
		echo
		echo "You will probably see a few '...: no disk label' messages"
		echo "It's completely normal. The disk has no label yet."
		echo "This will take a minute or two..."
		sleep 2
		echo -n "Creating Master Boot Record (MBR)..."
		fdisk -i -f /usr/mdec/mbr $1
		echo "done."
		echo -n "Copying 1MB MSDOS partition to disk..."
		gunzip < /usr/mdec/msdos1mb.gz | dd of=/dev/r$1c bs=512 seek=1 >/dev/null 2>&1
		echo "done."
		;;
d92 20
a113 3
md_init_hfs() {
	pdisk /dev/${1}c
}
d115 3
a117 2
	# $1 is the disk to check
	local rval
d119 1
a119 13
	echo
	echo "Apple systems have two methods to label/partition a boot disk."
	echo "Either the disk can be partitioned with Apple HFS partition"
	echo "tools to contain an \"Unused\" partition, or without any"
	echo "MacOS tools, the disk can be labled using an MBR partition table"
	echo "If the HFS (DPME) partition table is used, after the disk is"
	echo "partitioned with the Apple software, the \"Unused\" section"
	echo "must be changed to type \"OpenBSD\" name \"OpenBSD\" using the"
	echo "pdisk tool contained on this ramdisk. The disklabel can"
	echo "then be edited normally"
	echo "WARNING: the MBR partitioning code will HAPPILY overwrite/destroy"
	echo "any HFS partitions on the disk, including the partition table."
	echo "Choose the MBR option carefully, knowing this fact."
d121 16
a136 2
	ask "Do you want to choose (H)FS labeling or (M)BR labeling?" H
	case "$resp" in
d138 1
a138 1
		md_checkforMBRdisklabel $1
d142 1
a142 1
		md_init_hfs $1
d148 1
d150 1
d152 2
a153 3
	echo "You have chosen to put a MBR disklabel on the disk."
	ask "Is this correct?" n
	case "$resp" in
d159 12
a170 11
	case "$resp" in
	n*|N*)	md_init_mbr $1;;
	*)	echo
		echo "You may keep your current setup if you want to be able to use any"
		echo "already loaded OS. However you will be asked to prepare an empty"
		echo "partition for OpenBSD later. There must also be at least ~0.5MB free space"
		echo "in the boot partition to hold the OpenBSD bootloader."
		echo
		echo "Also note that the boot partition must be included as partition"
		echo "'i' in the OpenBSD disklabel."
		echo
d172 2
a173 2
		case "$resp" in
		n*|N*)	md_init_mbr $1;;
d178 1
a178 1
	disklabel -r $1 > /dev/null 2> /tmp/checkfordisklabel
d191 16
a206 18
md_prep_fdisk()
{
	local _disk
	local _done

	_disk=$1
	echo
	echo "This disk has not previously been used with OpenBSD. You may share"
	echo "this disk with other operating systems. However, to be able to boot"
	echo "the system you will need a small DOS partition in the beginning of"
	echo "the disk to hold the kernel boot. OpenFirmware understands"
	echo "how to read an MSDOS style format from the disk."
	echo
	echo "This DOS style partitioning has been taken care of if"
	echo "you chose to do that initialization earlier in the install."
	echo
	echo "WARNING: Wrong information in the BIOS partition table might"
	echo "render the disk unusable."
d210 2
a211 3
	echo
	echo "Current partition information is:"
	fdisk ${_disk}
d214 1
a214 3
	_done=0
	while [ $_done = 0 ]; do
		echo
d217 1
a217 1
An OpenBSD partition should have type (i.d.) of 166 (A6), and should be the
d219 7
a225 2
to be used by OpenBSD is correct, otherwise OpenBSD disklabel installation
will fail. Furthermore, the partitions must NOT overlap each others.
a226 4
The fdisk utility will be started update mode (interactive.)
You will be able to add / modify this information as needed.
If you make a mistake, simply exit fdisk without storing the new
information, and you will be allowed to start over.
a227 1
		echo
d230 6
a235 1
		fdisk -e ${_disk}
d237 3
a239 7
		echo
		echo "The new partition information is:"
		fdisk ${_disk}

		echo
		echo "(You will be permitted to edit this information again.)"
		echo "-------------------------------------------------------"
d242 1
a242 1
		case "$resp" in
d244 1
a244 1
		*)	_done=1 ;;
d248 8
a255 6
	echo
	echo "Please take note of the offset and size of the OpenBSD partition"
	echo "*AND* the MSDOS partitions you may want to access from OpenBSD."
	echo "At least the MSDOS partition used for booting must be accessible"
	echo "by OpenBSD as partition 'i'. You may need this information to "
	echo "fill in the OpenBSD disk label later."
d259 2
a260 3
md_prep_disklabel()
{
	local _disk
a261 1
	_disk=$1
d264 1
a264 1
	0)	ask "Do you wish to edit the disklabel on $_disk?" y
d266 2
a267 2
	1)	md_prep_fdisk ${_disk}
		echo "WARNING: Disk $_disk has no label"
d270 1
a270 1
	2)	echo "WARNING: Label on disk $_disk is corrupted"
d275 1
a275 1
	case "$resp" in
d287 4
a290 4
Also, you *must* make sure that the 'i' partition points at the MSDOS
partition that will be used for booting. The 'c' partition shall start
at offset 0 and include the entire disk. This is most likely correct when
you see the default label in the editor.
d309 6
a314 8
	if [[ $disklabeltype = "HFS" ]]
	then
		disklabel -c -f /tmp/fstab.${_disk} -E ${_disk}
	elif [[ $disklabeltype = "MBR" ]]
	then
		disklabel -W ${_disk}
		disklabel ${_disk} >/tmp/label.$$
		disklabel -r -R ${_disk} /tmp/label.$$
d316 1
a316 1
		disklabel -f /tmp/fstab.${_disk} -E ${_disk}
d325 2
a326 2
Once the machine has rebooted use Open Firmware to boot into OpenBSD,
as described in the install document.
@


1.16
log
@Typos; Tor Hougton
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.15 2002/11/07 01:28:52 krw Exp $
d97 1
a97 1
		echo "..done."
d100 1
a100 1
		echo "..done."
@


1.15
log
@Treat 'bsd' like just another filename in THESETS, no more 'kernel'
logic.  As result, MDSETS gone from everything but mac68k.

MDSETS now treated as a list of complete file names to add to THESETS,
allowing more MD flexibility, i.e. may or may not be .tgz files.

All traces of tar.gz removed. Not used for sets since 2.7 or so. As a
result of code simplification from not having to consider tar.gz, the
functions get_sets(), make_lastset(), and set_not_done() are
eliminated, along with the global SETS.

Build THESETS and DEFAULTSETS to contain full file names.

Always install sets in the order they appear in THESETS, keeping
siteXX last but without needing special logic. More predictable for
user if a lot of set additions and removals done before being
satisfied, as the sets are now installed in the same order they appear
in the selection list.

Remove ability to look for non-set .tgz/.tar.gz files. The job of the
install scripts is to install the standard sets in a simple and
rational way. Not to install general tar balls. The user can do that
post-install or simply '!' out to do it during install. On their head
be it.

If no sets are found in a specified source, list the filenames in
THESETS to show what is being looked for.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.14 2002/05/20 16:53:57 krw Exp $
d70 1
a70 1
	echo "MSDOS partition. This is the recomended setup and will allow you to"
@


1.14
log
@Eliminate md_questions(). It was used only to control the setting of
machdep.allowaperture. Remove the setting of machdep.allowaperture
from md_installboot().

Add MDXAPERTURE variable to relevant architectures.

Add a new function set_machdep_allowaperture(). It is called *after*
install_sets() (which changes when the X Window question is asked), and
if MDXAPERTURE is present modifies sysctl.conf.

Shrinks overall size for i386, macppc, sparc64 (which used md_questions
for machdep.allowaperture) but increases size a bit for other
architectures since set_machep_allowaperture is in install.sub.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.13 2002/05/19 16:16:05 krw Exp $
a41 2
# Machine-dependent install sets
MDSETS=kernel
@


1.13
log
@Do not use `' pairs inside here documents. Errors will occur
if the ` is not individually escaped and the here document as a whole
is not escaped. (i.e. cat << \__EOT).
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.12 2002/05/18 17:56:03 krw Exp $
a48 4
}

md_questions() {
	:
@


1.12
log
@Eliminate md_get_diskdevs() and md_get_cddevs() by

1) Saving one boot's worth of dmesg in /tmp/dmesg.boot
2) Using sed to scan for devices and pull out names in
   new get_diskdevs() and get_cddevs() in install.sub
3) Saving any md disk/cd sed patterns in MDDISKDEVS and
   MDCDDEVS variables.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.11 2002/05/14 01:49:25 krw Exp $
d285 1
a285 1
     (the `sectors/cylinder' entry, which is not shown here)
@


1.11
log
@Eliminate md_native_fstype() and md_native_fsopts(). Both functions
simply echo'd a single word if present at all.

Replace with variables MDFSTYPE and MDFSOPTS if required. Rework logic
in install.sub's mount_a_disk() to always include 'ro' as an option to
the mount command. This allows even those arch's with MDFSTYPE to
usually get by without MDFSOPTS.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.10 2002/05/09 21:54:46 krw Exp $
a48 10
}

md_get_diskdevs() {
	# return available disk devices
	bsort `dmesg | egrep -a "^[sw]d[0-9]+ " | cutword 1`
}

md_get_cddevs() {
	# return available CDROM devices
	bsort `dmesg | egrep -a "^cd[0-9]+ " | cutword 1`
@


1.10
log
@Elminate md_welcome_banner() and md_not_going_to_install() as the
output of both was essentially identical on all architectures. Replace
with welcome_banner() and not_going_to_install() in install.sub.

Abstract common verbiage from md_congrats() into congrats() which
calls md_congrats() for any architecture specific additional verbiage.

Reword things so ${MODE} can be plausibly used in more places.

Remove extraneous #!/bin/sh in hp300 install.md.

ok deraadt@@ espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.9 2002/05/08 23:01:47 krw Exp $
d45 1
a79 8
}

md_native_fstype() {
	echo "msdos"
}

md_native_fsopts() {
	echo "ro"
@


1.9
log
@Abstract out common md_set_term() code into set_term() in install.sub,
calling md_set_term() from set_term() to do machine dependent stuff.
Currently only i386 does anything - keyboard mappings.

Add MDTERM variable to allow install.md to set proper default terminal
type. Default to vt220.

Eliminate md_get_partition_range() as useless since every architecture
returned '[a-p]'.

Make default term for all mvme* architectures vt100 as requested by miod@@.

ok deraadt@@ millert@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.8 2002/04/28 14:44:01 krw Exp $
a339 47
md_welcome_banner() {
{
	if [ "$MODE" = install ]; then
		cat << __EOT
Welcome to the OpenBSD/mvmeppc ${VERSION_MAJOR}.${VERSION_MINOR} installation program.

This program is designed to help you put OpenBSD on your disk in a simple and
rational way.
__EOT

	else
		cat << __EOT
Welcome to the OpenBSD/mvmeppc ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program.

This program is designed to help you upgrade your OpenBSD system in a simple
and rational way.  As a reminder, installing the 'etc' binary set is NOT
recommended.  Once the rest of your system has been upgraded, you should
manually merge any changes to files in the 'etc' set into those files which
already exist on your system.
__EOT
	fi

cat << __EOT

As with anything which modifies your disk's contents, this program can cause
SIGNIFICANT data loss, and you are advised to make sure your data is backed
up before beginning the installation process.

Default answers are displayed in brackets after the questions.  You can hit
Control-C at any time to quit, but if you do so at a prompt, you may have
to hit return.  Also, quitting in the middle of installation may leave your
system in an inconsistent state.  If you hit Control-C and restart the
install, the install program will remember many of your old answers.

__EOT
} | more
}

md_not_going_to_install() {
	cat << __EOT

OK, then.  Enter 'reboot' at the prompt to reset the machine.  Once the machine
has rebooted, use Open Firmware to load the new boot code.

__EOT
}

a340 6
	local what;
	if [ "$MODE" = install ]; then
		what=installed
	else
		what=upgraded
	fi
d343 2
a344 4
CONGRATULATIONS!  You have successfully $what OpenBSD!  To boot the
installed system, enter reboot at the command prompt.  Once the machine
has rebooted, use Open Firmware to boot into OpenBSD.

@


1.8
log
@Change getresp() into ask().

ask() takes 2 parameters. The first one is the question to
ask the user, and the 2nd is the default answer.

Shrinks and makes the code clearer.

From espie@@ with some tweaking, ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.7 2002/04/28 02:13:20 deraadt Exp $
d44 1
a47 4
	test -n "$TERM" && return
	ask "Specify terminal type:" vt220
	TERM=$resp
	export TERM
a57 5
}

md_get_partition_range() {
	# return range of valid partition letters
	echo [a-p]
@


1.7
log
@modernize
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.6 2002/04/25 21:28:13 miod Exp $
d48 1
a48 2
	echo -n "Specify terminal type [vt220]: "
	getresp vt220
d111 1
a111 2
	echo -n "Do you want to init the MBR and the MSDOS partition? [y] "
	getresp "y"
d157 1
a157 2
	echo -n "Do you want to choose (H)FS labeling or (M)BR labeling [H] "
	getresp "h"
d173 1
a173 2
	echo -n "Is this correct? [n] "
	getresp "n"
d179 1
a179 2
	echo -n "Have you initialized an MSDOS partition using OpenFirmware? [n] "
	getresp "n"
d191 1
a191 2
		echo -n "Do you want to keep the current MSDOS partition setup? [y]"
		getresp "y"
d230 1
a230 2
	echo -n "Press [Enter] to continue "
	getresp ""
d235 1
a235 2
	echo -n "Press [Enter] to continue "
	getresp ""
d253 1
a253 2
		echo -n "Press [Enter] to continue "
		getresp ""
d264 1
a264 2
		echo -n "Is the above information correct? [n] "
		getresp "n"
d278 1
a278 2
	echo -n "Press [Enter] to continue "
	getresp ""
d288 1
a288 1
	0)	echo -n "Do you wish to edit the disklabel on $_disk? [y] "
d292 1
a292 1
		echo -n "Do you want to create one with the disklabel editor? [y] "
d295 1
a295 1
		echo -n "Do you want to try and repair the damage using the disklabel editor? [y] "
a298 1
	getresp "y"
d331 2
a332 2
	echo -n "Press [Enter] to continue "
	getresp ""
@


1.6
log
@- fix a few texts
- remove dead hp300 stuff
ok millert@@, espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.5 2002/03/31 17:30:31 deraadt Exp $
a53 4
md_makerootwritable() {
	:
}

d56 1
a56 1
	bsort `cat /kern/msgbuf | egrep -a "^[sw]d[0-9]+ " | cutword 1`
d61 1
a61 1
	bsort `cat /kern/msgbuf | egrep -a "^cd[0-9]+ " | cutword 1`
d364 1
a364 1
Welcome to the OpenBSD/powerpc ${VERSION_MAJOR}.${VERSION_MINOR} installation program.
d372 1
a372 1
Welcome to the OpenBSD/powerpc ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program.
@


1.5
log
@bit of shrinkage, krw ok
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.4 2002/02/14 03:26:05 deraadt Exp $
d252 1
a252 1
		cat << \__md_prep_fdisk_1
d263 1
a263 1
__md_prep_fdisk_1
d321 1
a321 1
	cat << \__md_prep_disklabel_1
d346 1
a346 1
__md_prep_disklabel_1
@


1.4
log
@typo
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.3 2001/12/23 01:51:52 krw Exp $
a37 1

d43 2
a44 1
MDSETS="kernel"
a57 4
md_machine_arch() {
	cat /kern/machine
}

d69 2
a70 2
    # return range of valid partition letters
    echo [a-p]
d78 1
a78 1
	if [[ $disklabeltype = "HFS" ]] 
d82 1
a82 1
	elif [[ $disklabeltype = "MBR" ]] 
d95 1
a95 1
    echo "msdos"
d99 1
a99 1
    echo "ro"
d119 2
a120 4
	n*|N*)
		exit 0;;
	*)
		echo
d133 1
a133 1
		fdisk -i -f /usr/mdec/mbr $1 
d138 1
a138 1
	;;
d166 1
a166 2
	m*|M*)
		export disklabeltype=MBR
d170 1
a170 2
	*)
		export disklabeltype=HFS
d183 1
a183 2
	n*|N*)
		echo "aborting install"
a184 2
	*)
		;;
d190 2
a191 4
	n*|N*)
		md_init_mbr $1;;
	*)
		echo
d203 2
a204 3
		n*|N*)
			md_init_mbr $1;;
		*)
a205 2
		esac
	;;
d281 2
a282 2
		n*|N*) ;;
		*) _done=1 ;;
d303 1
a303 2
	0)
		echo -n "Do you wish to edit the disklabel on $_disk? [y] "
d305 1
a305 2
	1)
		md_prep_fdisk ${_disk}
d309 1
a309 2
	2)
		echo "WARNING: Label on disk $_disk is corrupted"
a311 1

d316 1
a316 1
	y*|Y*) ;;
d324 1
a324 1
You may set these size/offset pairs on cylinder boundaries 
d349 1
a349 1
	if [[ $disklabeltype = "HFS" ]] 
d352 1
a352 1
	elif [[ $disklabeltype = "MBR" ]] 
a424 8
}

hostname() {
	case $# in
		0)      cat /kern/hostname ;;
		1)      echo "$1" > /kern/hostname ;;
		*)      echo usage: hostname [name-of-host]
	esac
@


1.3
log
@Remove extra blank line displayed before the paragraph 'As with
anything ...' during install and/or upgrade on some archs.

On sparc, sparc64, sun3 and vax fix a typo ('echo Welcome' ->
'Welcome') in here-document displayed in md_welcome_banner().
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.2 2001/09/04 22:25:02 deraadt Exp $
d4 1
a4 1
# Copyright rc) 1996 The NetBSD Foundation, Inc.
@


1.2
log
@MB == megabytes, Mb == megabits
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.1 2001/06/26 22:23:25 smurph Exp $
a402 1

@


1.1
log
@Initial import of mvmeppc.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.24 2001/04/17 13:06:24 brad Exp $
d109 1
a109 1
	echo "You will now be asked if you want to initialize the disk with a 1Mb"
d129 1
a129 1
		echo "to edit this MBR. After the MBR is copied an empty 1Mb MSDOS partition"
d207 1
a207 1
		echo "partition for OpenBSD later. There must also be at least ~0.5Mb free space"
@

