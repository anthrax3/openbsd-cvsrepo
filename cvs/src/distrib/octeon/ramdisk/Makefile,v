head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.3.0.12
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2016.12.05.20.08.34;	author natano;	state Exp;
branches;
next	1.4;
commitid	jAeImoBLqezCsmLu;

1.4
date	2016.10.14.18.44.20;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	SCMr9f2ZDRZiobIN;

1.3
date	2013.10.15.22.46.53;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2013.10.14.00.00.11;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2013.03.26.18.03.53;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Use makefs to build bsd.rd; tested by visa
@
text
@#	$OpenBSD: Makefile,v 1.4 2016/10/14 18:44:20 deraadt Exp $

REV=		${OSrev}

TOP=		${.CURDIR}/..

BSD_RD=		bsd.rd
IMAGE=		mr.fs
CBIN?=		instbin
CRUNCHCONF?=	${CBIN}.conf
CRUNCHCONFS?=	${.CURDIR}/../common/crunch.conf
LISTS=		${.CURDIR}/list
UTILS?=		${.CURDIR}/../../miniroot

MTREE=		${UTILS}/mtree.conf

DISKTYPE=	rdroot
MAKEFSARGS_RD=	-o disklabel=${DISKTYPE},minfree=0,density=4096

# mix config is not needed.
all:	${BSD_RD}

${BSD_RD}: ${IMAGE} bsd rdsetroot
	cp bsd ${BSD_RD}
	${.OBJDIR}/rdsetroot ${BSD_RD} ${IMAGE}

${IMAGE}: ${CBIN}
	rm -rf $@@.d
	install -d -o root -g wheel $@@.d
	mtree -def ${MTREE} -p $@@.d -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} REV=${REV} \
	    TARGDIR=$@@.d UTILS=${UTILS} RELEASEDIR=${RELEASEDIR} \
	    sh ${UTILS}/runlist.sh ${LISTS}
	rm $@@.d/${CBIN}
	makefs ${MAKEFSARGS_RD} $@@ $@@.d

bsd:
	cd ${TOP}/../../sys/arch/octeon/compile/RAMDISK && \
	    su ${BUILDUSER} -c '${MAKE} config && ${MAKE} clean && exec ${MAKE}'
	cp -p ${TOP}/../../sys/arch/octeon/compile/RAMDISK/obj/bsd bsd

rdsetroot:	${TOP}/../common/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o rdsetroot \
	    ${TOP}/../common/elfrdsetroot.c ${TOP}/../common/elf32.c \
	    ${TOP}/../common/elf64.c

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -M -E -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${.ALLSRC}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all

${CRUNCHCONF}: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
	    lib*.a lib*.olist ${CBIN}.map \
	    *.o *.lo *.c bsd ${BSD_RD} rdsetroot
	rm -rf cd-dir ${IMAGE}.d

.ifdef RELEASEDIR
install:
	cp ${BSD_RD} ${RELEASEDIR}
.endif

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.4
log
@Use new kernel compile method for ramdisks, de-escalating to $BUILDUSER
as required.
much help from natano and tb.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2013/10/15 22:46:53 deraadt Exp $
a14 1
MOUNT_POINT=	/mnt
d17 2
a18 10
VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c


DISKTYPE=       rdroot
NBLKS=          10240
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -m 0 -o space -i 4096
d23 1
a23 1
${BSD_RD}: ${CBIN} ${IMAGE} bsd rdsetroot
d27 9
a35 1
${IMAGE}: rd_setup do_files rd_teardown
a41 13
rd_setup:
	dd if=/dev/zero of=${IMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${IMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}

a46 6
unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}

.PRECIOUS:	${IMAGE}

a55 7
do_files:
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

d60 1
a60 1
	rm -rf cd-dir
@


1.3
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2013/10/14 00:00:11 guenther Exp $
a38 1
	cd ${TOP}/../../sys/arch/octeon/conf && config RAMDISK
d40 2
a41 2
	    ${MAKE} clean && exec ${MAKE}
	cp ${TOP}/../../sys/arch/octeon/compile/RAMDISK/bsd bsd
@


1.2
log
@Turn on the distrib lib bits in crunchgen by setting SRCLIBDIR.
Add the new files to the clean target's rm list.

"why not get it tested?" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2013/03/26 18:03:53 jasper Exp $
d85 1
a85 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
@


1.1
log
@add ramdisk installer for octeon, still has some rough edges and needs some
manual fiddling, but works good enough to perform an install on the CAM-0100.
@
text
@d1 1
a1 1
#	$OpenBSD$
d72 1
a72 1
	${MAKE} -f ${CBIN}.mk all
d86 1
@

