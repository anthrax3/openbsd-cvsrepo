head	1.6;
access;
symbols
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4;
locks; strict;
comment	@# @;


1.6
date	2017.07.28.18.15.44;	author rpe;	state Exp;
branches;
next	1.5;
commitid	K369F2mXWuSRrNyX;

1.5
date	2017.05.07.12.00.12;	author jsg;	state Exp;
branches;
next	1.4;
commitid	kliu0jDCVsNvFdVY;

1.4
date	2017.03.10.05.49.08;	author jsg;	state Exp;
branches;
next	1.3;
commitid	MLqaUBmHA4QEgSKF;

1.3
date	2017.03.08.09.33.03;	author jsg;	state Exp;
branches;
next	1.2;
commitid	UELs6mpWaHnEyZr1;

1.2
date	2017.02.18.02.01.53;	author jsg;	state Exp;
branches;
next	1.1;
commitid	S2e6egyPi3vh53o8;

1.1
date	2017.01.23.02.24.00;	author patrick;	state Exp;
branches;
next	;
commitid	GzIHGrDhaxkkIgV1;


desc
@@


1.6
log
@DEFAULTSETS, SANESETS and THESETS are set in the install.md scripts
according to the same logic for all architectures but sgi.

Consolidate setting them in one place in install.sub and incorporate
the sgi specific MDSETS and MDSANESETS.

Introduce MDSANESETS complementing MDSETS which makes the construction
of DEFAULTSETS, THESETS and SANESETS clearer in install.sub.

While here, adjust the comment about how MDSETS used now.

OK deraadt@@
@
text
@#	$OpenBSD: install.md,v 1.5 2017/05/07 12:00:12 jsg Exp $
#
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# machine dependent section of installation/upgrade script.
#

NEWFSARGS_msdos="-F 16 -L boot"
MOUNT_ARGS_msdos="-o-l"

md_installboot() {
	local _disk=/dev/$1 _mdec _plat

	# Mount MSDOS partition, extract U-Boot and copy UEFI boot program
	mount ${MOUNT_ARGS_msdos} ${_disk}i /mnt/mnt
	mkdir -p /mnt/mnt/efi/boot
	cp /mnt/usr/mdec/BOOTAA64.EFI /mnt/mnt/efi/boot/bootaa64.efi
	echo bootaa64.efi > /mnt/mnt/efi/boot/startup.nsh

	_plat=rpi
	_mdec=/usr/mdec/$_plat

	cp $_mdec/{bootcode.bin,start.elf,fixup.dat,*.dtb} /mnt/mnt/
	cp $_mdec/u-boot.bin /mnt/mnt/
	cat > /mnt/mnt/config.txt<<-__EOT
		arm_control=0x200
		enable_uart=1
		device_tree_address=0x100
		kernel=u-boot.bin
	__EOT
}

md_prep_fdisk() {
	local _disk=$1 _d

	local bootparttype="C"
	local bootsectorstart="8192"
	local bootsectorsize="32768"
	local bootsectorend=$(($bootsectorstart + $bootsectorsize))
	local bootfstype="msdos"
	local newfs_args=${NEWFSARGS_msdos}

	while :; do
		_d=whole
		if disk_has $_disk mbr; then
			fdisk $_disk
		else
			echo "MBR has invalid signature; not showing it."
		fi
		ask "Use (W)hole disk$ or (E)dit the MBR?" "$_d"
		case $resp in
		[wW]*)
			echo -n "Creating a ${bootfstype} partition and an OpenBSD partition for rest of $_disk..."
			fdisk -e ${_disk} <<__EOT >/dev/null
reinit
e 0
${bootparttype}
n
${bootsectorstart}
${bootsectorsize}
f 0
e 3
A6
n
${bootsectorend}

write
quit
__EOT
			echo "done."
			disklabel $_disk 2>/dev/null | grep -q "^  i:" || disklabel -w -d $_disk
			newfs -t ${bootfstype} ${newfs_args} ${_disk}i
			return ;;
		[eE]*)
			# Manually configure the MBR.
			cat <<__EOT

You will now create one MBR partition to contain your OpenBSD data
and one MBR partition on which the OpenBSD boot program is located.
Neither partition will overlap any other partition.

The OpenBSD MBR partition will have an id of 'A6' and the boot MBR
partition will have an id of '${bootparttype}' (${bootfstype}).
The boot partition will be at least 16MB and be the first 'MSDOS'
partition on the disk.

$(fdisk ${_disk})
__EOT
			fdisk -e ${_disk}
			disk_has $_disk mbr openbsd && return
			echo No OpenBSD partition in MBR, try again. ;;
		esac
	done
}

md_prep_disklabel() {
	local _disk=$1 _f=/tmp/i/fstab.$1

	md_prep_fdisk $_disk

	disklabel_autolayout $_disk $_f || return
	[[ -s $_f ]] && return

	# Edit disklabel manually.
	# Abandon all hope, ye who enter here.
	disklabel -F $_f -E $_disk
}

md_congrats() {
}

md_consoleinfo() {
}
@


1.5
log
@Increase the offset from the start of the disk to the FAT filesystem
from sector 2048/1MB to sector 8192/4MB.

This gives enough space for a combined U-Boot and ATF FIT image for the
Firefly-RK3399.

Requested by and ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.4 2017/03/10 05:49:08 jsg Exp $
a33 3

SANESETS="bsd"
DEFAULTSETS="bsd bsd.rd"
@


1.4
log
@The SoftIron OverDrive 3000 boots to an EFI shell.  Create a startup.nsh
file on the ESP to explicitly load bootaa64.efi so it will load without
manual intervention.

Suggested by patrick@@ verified by deraadt@@ ok kettenis@@

The partition type of the ESP remains 0x0c rather than 0xef as it
should be as otherwise the rpi3 won't boot.  The AMI EDK2 based UEFI
on the other hand can handle the ESP partition type being 0x0c or 0xef.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.3 2017/03/08 09:33:03 jsg Exp $
d67 1
a67 1
	local bootsectorstart="2048"
@


1.3
log
@copy rpi3 u-boot to the installed disk

Even though this can't be the SD card at the moment, it is possible to
boot off USB if an OTP bit has been set.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.2 2017/02/18 02:01:53 jsg Exp $
d48 1
@


1.2
log
@Add miniroot and ramdisk hooks for the Raspberry Pi 3.

Unlike the TI boot ROM the Broadcom one doesn't understand FAT12, only
FAT16 or FAT32.

The u-boot-aarch64 and raspberrypi-firmware packages are now required to
run make release on arm64.

ok patrick@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.1 2017/01/23 02:24:00 patrick Exp $
d53 1
@


1.1
log
@Add support for creating RAMDISK kernels for arm64.  Based on
the armv7 code, but with the u-boot, device tree and mkuboot
bits stripped out.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.43 2017/01/19 06:55:58 jsg Exp $
d42 1
a42 1
	local _disk=/dev/$1
d48 11
@

