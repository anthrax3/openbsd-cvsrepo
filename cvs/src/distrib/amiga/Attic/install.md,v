head	1.22;
access;
symbols
	OPENBSD_3_2:1.20.0.2
	OPENBSD_3_2_BASE:1.20
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.8
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.6
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.4
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4;
locks; strict;
comment	@# @;


1.22
date	2002.12.31.16.35.32;	author miod;	state dead;
branches;
next	1.21;

1.21
date	2002.11.07.01.28.51;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2002.05.22.01.48.38;	author krw;	state Exp;
branches;
next	1.19;

1.19
date	2002.05.20.16.53.57;	author krw;	state Exp;
branches;
next	1.18;

1.18
date	2002.05.18.17.56.03;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2002.05.14.01.49.25;	author krw;	state Exp;
branches;
next	1.16;

1.16
date	2002.05.09.21.54.46;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2002.05.08.23.01.46;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2002.05.07.02.03.57;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2002.04.25.21.28.10;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.31.17.30.30;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.14.03.34.14;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.23.19.44.38;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	99.09.03.18.55.22;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	99.08.15.10.05.04;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	98.10.28.17.53.28;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.09.11.22.55.45;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.03.27.23.49.34;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.05.18.13.15.09;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	97.05.14.21.39.10;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.05.13.16.04.06;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	97.05.03.22.27.09;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.22
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@#	$OpenBSD: install.md,v 1.21 2002/11/07 01:28:51 krw Exp $
#	$NetBSD: install.md,v 1.3.2.5 1996/08/26 15:45:28 gwr Exp $
#
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# machine dependent section of installation/upgrade script.
#

MDFSTYPE=ados
MDCDDEVS='/^a\{0,1\}cd[0-9][0-9]* /s/ .*//p'
ARCH=ARCH

md_set_term() {
}

md_installboot() {
	# Nothing needed
}

md_checkfordisklabel() {
	# $1 is the disk to check
	local rval

	disklabel $1 > /dev/null 2> /tmp/checkfordisklabel
	if grep "no disk label" /tmp/checkfordisklabel; then
		rval=1
	elif grep "disk label corrupted" /tmp/checkfordisklabel; then
		rval=2
	else
		rval=0
	fi

	rm -f /tmp/checkfordisklabel
	return $rval
}

md_prep_disklabel()
{
	local _disk

	_disk=$1
	md_checkfordisklabel $_disk
	case $? in
	0)	;;
	1)	echo "ERROR: Disk $_disk is not partitioned, read the"
		echo "preparation document on how to go about doing this."
		;;
	2)	echo "WARNING: Label on disk $_disk is corrupted.  Maybe"
		echo "you should interrupt the install process and recheck"
		echo "your disk partitioning in AmigaOS?"
		;;
	esac
}

md_congrats() {
	cat << __EOT

Once in AmigaOS, boot via loadbsd without the -b flag, as described
in the install document.
__EOT
}
@


1.21
log
@Treat 'bsd' like just another filename in THESETS, no more 'kernel'
logic.  As result, MDSETS gone from everything but mac68k.

MDSETS now treated as a list of complete file names to add to THESETS,
allowing more MD flexibility, i.e. may or may not be .tgz files.

All traces of tar.gz removed. Not used for sets since 2.7 or so. As a
result of code simplification from not having to consider tar.gz, the
functions get_sets(), make_lastset(), and set_not_done() are
eliminated, along with the global SETS.

Build THESETS and DEFAULTSETS to contain full file names.

Always install sets in the order they appear in THESETS, keeping
siteXX last but without needing special logic. More predictable for
user if a lot of set additions and removals done before being
satisfied, as the sets are now installed in the same order they appear
in the selection list.

Remove ability to look for non-set .tgz/.tar.gz files. The job of the
install scripts is to install the standard sets in a simple and
rational way. Not to install general tar balls. The user can do that
post-install or simply '!' out to do it during install. On their head
be it.

If no sets are found in a specified source, list the filenames in
THESETS to show what is being looked for.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.20 2002/05/22 01:48:38 krw Exp $
@


1.20
log
@Fix quoting botch in earlier commit. Make sure MDDISKDEVS and
MDCDDEVS actually work with non-empty values as well as the
supplied default this time.

Problem first detected by jsyn@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.19 2002/05/20 16:53:57 krw Exp $
a42 2
# Machine-dependent install sets
MDSETS=kernel
@


1.19
log
@Eliminate md_questions(). It was used only to control the setting of
machdep.allowaperture. Remove the setting of machdep.allowaperture
from md_installboot().

Add MDXAPERTURE variable to relevant architectures.

Add a new function set_machdep_allowaperture(). It is called *after*
install_sets() (which changes when the X Window question is asked), and
if MDXAPERTURE is present modifies sysctl.conf.

Shrinks overall size for i386, macppc, sparc64 (which used md_questions
for machdep.allowaperture) but increases size a bit for other
architectures since set_machep_allowaperture is in install.sub.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.18 2002/05/18 17:56:03 krw Exp $
d46 1
a46 1
MDCDDEVS="'/^a\{0,1\}cd[0-9][0-9]* /s/ .*//p'"
@


1.18
log
@Eliminate md_get_diskdevs() and md_get_cddevs() by

1) Saving one boot's worth of dmesg in /tmp/dmesg.boot
2) Using sed to scan for devices and pull out names in
   new get_diskdevs() and get_cddevs() in install.sub
3) Saving any md disk/cd sed patterns in MDDISKDEVS and
   MDCDDEVS variables.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.17 2002/05/14 01:49:25 krw Exp $
a49 4
}

md_questions() {
	:
@


1.17
log
@Eliminate md_native_fstype() and md_native_fsopts(). Both functions
simply echo'd a single word if present at all.

Replace with variables MDFSTYPE and MDFSOPTS if required. Rework logic
in install.sub's mount_a_disk() to always include 'ro' as an option to
the mount command. This allows even those arch's with MDFSTYPE to
usually get by without MDFSOPTS.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.16 2002/05/09 21:54:46 krw Exp $
d46 1
a49 10
}

md_get_diskdevs() {
	# return available disk devices
	dmesg | sed -n -e '/^[sw]d[0-9] /{s/ .*//;p;}'
}

md_get_cddevs() {
	# return available CDROM devices
	dmesg | sed -n -e '/^a\{0,1\}cd[0-9] /{s/ .*//;p;}'
@


1.16
log
@Elminate md_welcome_banner() and md_not_going_to_install() as the
output of both was essentially identical on all architectures. Replace
with welcome_banner() and not_going_to_install() in install.sub.

Abstract common verbiage from md_congrats() into congrats() which
calls md_congrats() for any architecture specific additional verbiage.

Reword things so ${MODE} can be plausibly used in more places.

Remove extraneous #!/bin/sh in hp300 install.md.

ok deraadt@@ espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.15 2002/05/08 23:01:46 krw Exp $
d45 1
a66 8
}

md_native_fstype() {
	echo "ados"
}

md_native_fsopts() {
	echo "ro"
@


1.15
log
@Abstract out common md_set_term() code into set_term() in install.sub,
calling md_set_term() from set_term() to do machine dependent stuff.
Currently only i386 does anything - keyboard mappings.

Add MDTERM variable to allow install.md to set proper default terminal
type. Default to vt220.

Eliminate md_get_partition_range() as useless since every architecture
returned '[a-p]'.

Make default term for all mvme* architectures vt100 as requested by miod@@.

ok deraadt@@ millert@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.14 2002/05/07 02:03:57 krw Exp $
a110 51
md_welcome_banner() {
{
	if [ "$MODE" = "install" ]; then
		echo ""
		echo "Welcome to the OpenBSD/amiga ${VERSION_MAJOR}.${VERSION_MINOR} installation program."
		cat << __EOT

This program is designed to help you put OpenBSD on your disk in a simple and
rational way.
__EOT

	else
		echo ""
		echo "Welcome to the OpenBSD/amiga ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program."
		cat << __EOT

This program is designed to help you upgrade your OpenBSD system in a
simple and rational way.

As a reminder, installing the `etc' binary set is NOT recommended.
Once the rest of your system has been upgraded, you should manually
merge any changes to files in the `etc' set into those files which
already exist on your system.
__EOT
	fi

cat << __EOT

As with anything which modifies your disk's contents, this
program can cause SIGNIFICANT data loss, and you are advised
to make sure your data is backed up before beginning the
installation process.

Default answers are displayed in brackets after the questions.
You can hit Control-C at any time to quit, but if you do so at a
prompt, you may have to hit return.  Also, quitting in the middle of
installation may leave your system in an inconsistent state.

__EOT
} | more
}

md_not_going_to_install() {
	cat << __EOT

OK, then.  Enter `halt' at the prompt to halt the machine.  Once the
machine has halted, power-cycle the system and you'll get back to AmigaOS.

__EOT
}

a111 6
	local what;
	if [ "$MODE" = "install" ]; then
		what="installed";
	else
		what="upgraded";
	fi
d114 2
a115 5
CONGRATULATIONS!  You have successfully $what OpenBSD!
To boot the installed system, enter halt at the command prompt. Once the
system has halted, reset the machine, enter AmigaOS and boot via loadbsd
without the -b flag, per the install document.

@


1.14
log
@All architectures now use miniroot, so eliminate last few getresp()
calls in favour of ask().

Fix the erroneous advice I gave to Hugh in vax getresp() -> ask().

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.13 2002/04/25 21:28:10 miod Exp $
a47 6
	if [ ! -z "$TERM" ]; then
		return
	fi
	ask "Specify terminal type:" vt220
	TERM="$resp"
	export TERM
a57 5
}

md_get_partition_range() {
	# return range of valid partition letters
	echo "[a-p]"
@


1.13
log
@- fix a few texts
- remove dead hp300 stuff
ok millert@@, espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.12 2002/03/31 17:30:30 deraadt Exp $
d51 1
a51 2
	echo -n "Specify terminal type [vt220]: "
	getresp "vt220"
@


1.12
log
@bit of shrinkage, krw ok
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.11 2002/02/14 03:34:14 deraadt Exp $
d128 1
a128 1
		cat << \__welcome_banner_1
d132 1
a132 1
__welcome_banner_1
d137 1
a137 1
		cat << \__welcome_banner_2
d146 1
a146 1
__welcome_banner_2
d149 1
a149 1
cat << \__welcome_banner_3
d161 1
a161 1
__welcome_banner_3
d166 1
a166 1
	cat << \__not_going_to_install_1
d171 1
a171 1
__not_going_to_install_1
d181 1
a181 1
	cat << __congratulations_1
d188 1
a188 1
__congratulations_1
@


1.11
log
@version mishandling
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.10 2001/06/23 19:44:38 deraadt Exp $
a38 1

d44 1
a44 1
MDSETS="kernel"
d68 2
a69 2
    # return range of valid partition letters
    echo "[a-p]"
d112 2
a113 4
	0)
		;;
	1)
		echo "ERROR: Disk $_disk is not partitioned, read the"
d116 1
a116 2
	2)
		echo "WARNING: Label on disk $_disk is corrupted.  Maybe"
@


1.10
log
@argh.  stop using kernfs, using dmesg using sysctl.  encode ARCH into
install.md at build time.  remove some crud.  and the icing on the cake:
skip testing all this until next week
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.9 1999/09/03 18:55:22 deraadt Exp $
d131 1
a131 1
		echo "Welcome to the OpenBSD/amiga ${VERSION} installation program."
d140 1
a140 1
		echo "Welcome to the OpenBSD/amiga ${VERSION} upgrade program."
@


1.9
log
@md_questions() interface allows asking questions before sets
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.8 1999/08/15 10:05:04 millert Exp $
d46 1
a46 15
MSGBUF=/kern/msgbuf
HOSTNAME=/kern/hostname

# an alias for hostname(1)
hostname() {
	if [ -x /bin/hostname ]; then
		/bin/hostname $1
	else
		if [ -z "$1" ]; then
			cat $HOSTNAME
		else
			echo $1 > $HOSTNAME
		fi
	fi
}
a57 8
md_makerootwritable() {
	# This is done in .profile now
}

md_machine_arch() {
	cat /kern/machine
}

d60 1
a60 1
	sed -n -e '/^[sw]d[0-9] /{s/ .*//;p;}' < $MSGBUF
d65 1
a65 1
	sed -n -e '/^a\{0,1\}cd[0-9] /{s/ .*//;p;}' < $MSGBUF
@


1.8
log
@Kill md_copy_kernel()
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.7 1998/10/28 17:53:28 millert Exp $
d93 4
@


1.7
log
@call check_kernel instead of having the same code in all the .md files
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.6 1998/09/11 22:55:45 millert Exp $
a142 4
}

md_copy_kernel() {
	check_kernel
@


1.6
log
@kill md_get_ifdevs, miniroot/install.sub uses mi version now
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.5 1998/03/27 23:49:34 deraadt Exp $
d146 1
a146 1
	# We use a "kernel" set instead
@


1.5
log
@simplify
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.4 1997/05/18 13:15:09 niklas Exp $
a87 8
}

md_get_ifdevs() {
	# return available network devices
	sed -n -e '/^[al]e[0-9] /{s/ .*//;p;}' -e '/^qn[0-9] /{s/ .*//;p;}' \
	    -e '/^\(isa\)\{0,1\}ed[0-9] /{s/ .*//;p;}' \
	    -e '/^bah[0-9] /{s/ .*//;p;}' -e '/^es[0-9] /{s/ .*//;p;}' \
	    < $MSGBUF
@


1.4
log
@Use a kernel set instead of copying it from the booted root-image.
Skip dmesg, cut & sort uses.  Use kernfs and more sed instead.  Native
filesystems are "ados".
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.3 1997/05/14 21:39:10 millert Exp $
d164 2
a165 4
This program is designed to help you put OpenBSD on your disk,
in a simple and rational way.  You'll be asked several questions,
and it would probably be useful to have your disk's hardware
manual, the installation notes, and a calculator handy.
@


1.3
log
@Add md_machine_arch()
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.2 1997/05/13 16:04:06 niklas Exp $
d45 16
a60 1
MDSETS=
d82 1
a82 1
	dmesg | egrep "^[sw]d[0-9] " | cut -d" " -f1 | sort -u
d87 1
a87 1
	dmesg | grep "^a?cd[0-9] " | cut -d" " -f1 | sort -u
d92 4
a95 1
	dmesg | egrep "(^[al]e[0-9] |^(isa)?ed[0-9] |^qn[0-9] |^bah[0-9] |^es[0-9] )" | cut -d" " -f1 | sort -u
d108 1
d112 1
d154 1
a154 3
	echo -n "Copying kernel..."
	cp -p /bsd /mnt/bsd
	echo "done."
@


1.2
log
@Reflect amiga reality + fix typo
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.1 1997/05/03 22:27:09 niklas Exp $
d59 4
@


1.1
log
@Add amiga md parts of the miniroot stuff
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.8 1997/05/01 11:30:43 niklas Exp $
d45 1
a45 1
MDSETS="xbin xman xinc xcon"
d58 1
a58 16
	# Was: do_mfs_mount "/tmp" "2048"
	# /tmp is the mount point
	# 2048 is the size in DEV_BIZE blocks

	umount /tmp > /dev/null 2>&1
	if ! mount_mfs -s 2048 swap /tmp ; then
		cat << \__mfs_failed_1

FATAL ERROR: Can't mount the memory filesystem.

__mfs_failed_1
		exit
	fi

	# Bleh.  Give mount_mfs a chance to DTRT.
	sleep 2
d82 1
a82 1
#	echo "Installing boot block..."
d124 1
a124 1
		echo "your disk partitioning in AmigaOS?""
@
