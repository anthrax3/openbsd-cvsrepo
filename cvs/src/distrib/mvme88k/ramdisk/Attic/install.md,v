head	1.44;
access;
symbols
	OPENBSD_5_5:1.43.0.2
	OPENBSD_5_5_BASE:1.43
	OPENBSD_5_4:1.42.0.6
	OPENBSD_5_4_BASE:1.42
	OPENBSD_5_3:1.42.0.4
	OPENBSD_5_3_BASE:1.42
	OPENBSD_5_2:1.42.0.2
	OPENBSD_5_2_BASE:1.42
	OPENBSD_5_1_BASE:1.40
	OPENBSD_5_1:1.40.0.4
	OPENBSD_5_0:1.40.0.2
	OPENBSD_5_0_BASE:1.40
	OPENBSD_4_9:1.38.0.2
	OPENBSD_4_9_BASE:1.38
	OPENBSD_4_8:1.37.0.6
	OPENBSD_4_8_BASE:1.37
	OPENBSD_4_7:1.37.0.2
	OPENBSD_4_7_BASE:1.37
	OPENBSD_4_6:1.37.0.4
	OPENBSD_4_6_BASE:1.37
	OPENBSD_4_5:1.27.0.4
	OPENBSD_4_5_BASE:1.27
	OPENBSD_4_4:1.27.0.2
	OPENBSD_4_4_BASE:1.27
	OPENBSD_4_3:1.25.0.2
	OPENBSD_4_3_BASE:1.25
	OPENBSD_4_2:1.24.0.10
	OPENBSD_4_2_BASE:1.24
	OPENBSD_4_1:1.24.0.8
	OPENBSD_4_1_BASE:1.24
	OPENBSD_4_0:1.24.0.6
	OPENBSD_4_0_BASE:1.24
	OPENBSD_3_9:1.24.0.4
	OPENBSD_3_9_BASE:1.24
	OPENBSD_3_8:1.24.0.2
	OPENBSD_3_8_BASE:1.24
	OPENBSD_3_7:1.23.0.6
	OPENBSD_3_7_BASE:1.23
	OPENBSD_3_6:1.23.0.4
	OPENBSD_3_6_BASE:1.23
	OPENBSD_3_5:1.23.0.2
	OPENBSD_3_5_BASE:1.23
	OPENBSD_3_4:1.20.0.2
	OPENBSD_3_4_BASE:1.20
	OPENBSD_3_3:1.18.0.2
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.17.0.2
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@# @;


1.44
date	2014.03.18.22.36.28;	author miod;	state dead;
branches;
next	1.43;

1.43
date	2013.11.16.18.37.27;	author rpe;	state Exp;
branches;
next	1.42;

1.42
date	2012.07.13.14.50.34;	author halex;	state Exp;
branches;
next	1.41;

1.41
date	2012.07.10.14.25.00;	author halex;	state Exp;
branches;
next	1.40;

1.40
date	2011.07.06.20.02.16;	author halex;	state Exp;
branches;
next	1.39;

1.39
date	2011.04.17.20.57.11;	author krw;	state Exp;
branches;
next	1.38;

1.38
date	2011.01.03.00.36.50;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2009.06.04.00.44.47;	author krw;	state Exp;
branches;
next	1.36;

1.36
date	2009.06.02.16.23.45;	author krw;	state Exp;
branches;
next	1.35;

1.35
date	2009.05.31.17.49.53;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2009.05.11.17.13.07;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2009.05.09.21.37.26;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2009.04.24.01.43.27;	author krw;	state Exp;
branches;
next	1.31;

1.31
date	2009.04.24.01.04.33;	author krw;	state Exp;
branches;
next	1.30;

1.30
date	2009.04.12.12.56.02;	author krw;	state Exp;
branches;
next	1.29;

1.29
date	2009.04.12.01.35.01;	author krw;	state Exp;
branches;
next	1.28;

1.28
date	2009.04.10.23.11.17;	author krw;	state Exp;
branches;
next	1.27;

1.27
date	2008.06.26.05.42.04;	author ray;	state Exp;
branches;
next	1.26;

1.26
date	2008.03.22.23.28.10;	author krw;	state Exp;
branches;
next	1.25;

1.25
date	2008.03.04.00.36.38;	author krw;	state Exp;
branches;
next	1.24;

1.24
date	2005.03.27.15.13.50;	author krw;	state Exp;
branches;
next	1.23;

1.23
date	2003.10.15.04.32.28;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2003.10.12.13.18.37;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2003.09.21.02.11.42;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.09.18.45.52;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2003.08.07.20.57.06;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2002.11.07.01.28.52;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2002.05.20.16.53.57;	author krw;	state Exp;
branches;
next	1.16;

1.16
date	2002.05.19.16.16.05;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2002.05.18.17.56.03;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2002.05.14.01.49.25;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.09.21.54.46;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.08.23.01.47;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.07.02.03.57;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2002.04.25.21.28.13;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.31.17.30.31;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.14.03.34.15;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.23.19.44.49;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.25.19.18.40;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.24.04.51.55;	author smurph;	state Exp;
branches;
next	1.4;

1.4
date	99.09.03.18.55.32;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.08.15.10.05.07;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.04.01.21.30.34;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.12.17.02.16.32;	author smurph;	state Exp;
branches;
next	;


desc
@@


1.44
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#       $OpenBSD: install.md,v 1.43 2013/11/16 18:37:27 rpe Exp $
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# machine dependent section of installation/upgrade script.
#
#

MDTERM=vt100
NCPU=$(sysctl -n hw.ncpufound)

((NCPU > 1)) && { DEFAULTSETS="bsd bsd.rd bsd.mp" ; SANESETS="bsd bsd.mp" ; }

md_installboot() {
	# Use cat to avoid holes created by cp(1)
	cat /mnt/usr/mdec/bootsd > /mnt/boot
	/mnt/usr/mdec/installboot /mnt/boot /mnt/usr/mdec/bootxx /dev/r${1}a
}

md_prep_disklabel() {
	local _disk=$1 _f _op

	_f=/tmp/fstab.$_disk
	if [[ $_disk == $ROOTDISK ]]; then
		while :; do
			echo "The auto-allocated layout for $_disk is:"
			disklabel -h -A $_disk | egrep "^#  |^  [a-p]:"
			ask "Use (A)uto layout, (E)dit auto layout, or create (C)ustom layout?" a
			case $resp in
			a*|A*)	_op=-w ;;
			e*|E*)	_op=-E ;;
			c*|C*)	break ;;
			*)	continue ;;
			esac
			disklabel $FSTABFLAG $_f $_op -A $_disk
			return
		done
	fi
	cat <<__EOT
You will now create a OpenBSD disklabel on the disk.  The disklabel defines
how OpenBSD splits up the disk into OpenBSD partitions in which filesystems
and swap space are created.  You must provide each filesystem's mountpoint
in this program.

__EOT

	disklabel $FSTABFLAG $_f -E $_disk
}

md_congrats() {
}

md_consoleinfo() {
}
@


1.43
log
@Remove AUTOROOT variable which is a leftover of r1.183 of install.sub

diff from Philipp e1c1bac6253dc54a1e89ddc046585792 at osteo dot net

ok krw@@ halex@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.42 2012/07/13 14:50:34 halex Exp $
@


1.42
log
@copy boot loaders using cat and shell redirection rather than cp,
since the latter may insert holes in the target files, which could
be bad for the boot process

ok deraadt@@ guenther@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.41 2012/07/10 14:25:00 halex Exp $
d55 1
a55 1
			a*|A*)	_op=-w ; AUTOROOT=y ;;
@


1.41
log
@since disklabel -W is no more, zap it from all the install.md's

ok krw@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.40 2011/07/06 20:02:16 halex Exp $
d40 2
a41 1
	cp /mnt/usr/mdec/bootsd /mnt/boot
@


1.40
log
@As non-mp install.md's neither set NCPU, nor will have a bsd.mp,
we could as well pull the 'mv bsd.mp bsd' and the associated checks
out of there.

ok deraadt@@ "makes sense" todd@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.39 2011/04/17 20:57:11 krw Exp $
a46 1
	disklabel -W $_disk >/dev/null 2>&1
@


1.39
log
@First crack at enabling the installation of a DUID version of
/etc/fstab, after asking user. Current default is existing behaviour.

Feedback & suggestions deraadt@@, halex@@, jsing@@, todd@@.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.38 2011/01/03 00:36:50 deraadt Exp $
a39 6
	if [[ -f /mnt/bsd.mp ]] && ((NCPU > 1)); then
		echo "Multiprocessor machine; using bsd.mp instead of bsd."
		mv /mnt/bsd /mnt/bsd.sp 2>/dev/null
		mv /mnt/bsd.mp /mnt/bsd
	fi

@


1.38
log
@reduce the amount of cd'ing in the install script, since it sucks
to change the environment that functions assume they run in.  use
sub-shells or absolute paths when possible.
ok krw
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.37 2009/06/04 00:44:47 krw Exp $
d66 1
a66 1
			disklabel -f $_f $_op -A $_disk
d78 1
a78 1
	disklabel -f $_f -E $_disk
@


1.37
log
@Nuke now superfluous ARCH=ARCH lines in install.md and the sed processing of
those lines in list2sh.awk.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.36 2009/06/02 16:23:45 krw Exp $
d40 1
a40 2
	cd /mnt
	if [[ -f bsd.mp ]] && ((NCPU > 1)); then
d42 2
a43 2
		mv bsd bsd.sp 2>/dev/null
		mv bsd.mp bsd
@


1.36
log
@Add '-h' flag, and '*' as a unit specifier for 'p' Editor command.
Both cause partition sizes to be displayed using a human readable
format with the units automatically chosen by looking at the smallest
partition in the disk label. Remove forceable humanization in 'A'
code and use '-h' in install scripts.

Prodded & ok deraadt@@, verbiage tweaks from jmc@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.35 2009/05/31 17:49:53 deraadt Exp $
a34 1
ARCH=ARCH
@


1.35
log
@Make bootblock installation as silent as possible by default.  While
there, remove a lot of cruft from the various md_installboot functions
ok halex
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.34 2009/05/11 17:13:07 deraadt Exp $
d60 1
a60 1
			disklabel -A $_disk | egrep "^#  |^  [a-p]:"
@


1.34
log
@Remind people that mountpoints must now be entered using the disklabel
command; the script does not ask afterwards.  Note I am not adjusting
the macppc or sgi install.md scripts.  I ask their maintainers to clean
them before I will maintain them further.  Please
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.33 2009/05/09 21:37:26 deraadt Exp $
d49 1
a49 1
	/mnt/usr/mdec/installboot -v /mnt/boot /mnt/usr/mdec/bootxx /dev/r${1}a
@


1.33
log
@remove some chatty disklabel stuff
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.32 2009/04/24 01:43:27 krw Exp $
d72 8
@


1.32
log
@Remove magic 'bsd.mp -> bsd' linking for the moment as it confuses
subsequent upgrades.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.31 2009/04/24 01:04:33 krw Exp $
a47 1
	echo "Installing boot block..."
@


1.31
log
@Move bsd.mp juggling into relevant MD files. Make bsd.mp a default
selection on multi-processor machines. Make bsd.mp a sanity check
item on multi-processor machines.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.30 2009/04/12 12:56:02 krw Exp $
a45 1
		ln -sf bsd bsd.mp
@


1.30
log
@Tweak pattern used to select partition lines for display so the
'# /dev/r...' line is not selected.

Noticed by deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.29 2009/04/12 01:35:01 krw Exp $
d36 3
d41 8
@


1.29
log
@No longer need '-f' or '-p' when displaying layout. A few patterns
missed the '# size offset ...' line at the top of the partition
list.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.28 2009/04/10 23:11:17 krw Exp $
d51 1
a51 1
			disklabel -A $_disk | egrep "^#|^  [a-p]:"
@


1.28
log
@Where appropriate display the auto-allocation layout of the root
disk and ask if the installee wants to use it, edit it, or create
their own custom disklabel. Most one-disk installs will not need
to see fdisk or disklabel.

i386 and macppc by me, adapted for others by deraadt@@.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.27 2008/06/26 05:42:04 ray Exp $
d51 1
a51 1
			disklabel -f $_f -p g -A $_disk | egrep "^#|^  [a-p]:"
@


1.27
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.26 2008/03/22 23:28:10 krw Exp $
d44 1
a44 1
	local _disk=$1
d47 17
a63 1
	disklabel -f /tmp/fstab.$_disk -E $_disk
@


1.26
log
@No point in checking disklabel output for 'disk label corrupted' message
since it isn't emitted anymore.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.25 2008/03/04 00:36:38 krw Exp $
a15 7
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
@


1.25
log
@Redo serial console configuration logic. Smaller, easier to
understand.

Add serial console handling for alpha, macppc, zaurus.  No functional
change for i386/amd64.

All archs should now have automatic serial console configuration.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.24 2005/03/27 15:13:50 krw Exp $
a49 14
# $1 is the disk to check
md_checkfordisklabel() {
	local rval=0

	disklabel $1 >/dev/null 2>/tmp/checkfordisklabel

	if grep "disk label corrupted" /tmp/checkfordisklabel; then
		rval=2
	fi >/dev/null 2>&1

	rm -f /tmp/checkfordisklabel
	return $rval
}

a51 6

	md_checkfordisklabel $_disk
	case $? in
	2)	echo "WARNING: Label on disk $_disk is corrupted. You will be repairing it.\n"
		;;
	esac
@


1.24
log
@Use new skeleton kbd(8) '-l' to generalize kbd(8) use.  Eliminate
fixed list of available maps and machine dependant md_set_term()
functions.

Any ramdisk with /sbin/kbd present (amd64, cats, i386 at the moment)
will now present list of available keyboard encodings.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.23 2003/10/15 04:32:28 deraadt Exp $
d78 3
@


1.23
log
@ok it is OpenBSD's 8th birthday
a bit of silliness is permitted
change mvme* to install bootblocks with correct path
ok drahn, and some others..
not sure who, because it is hard to check my mail from the
blackberry I am commiting this from, over ssh of course...
hmmmm mcnalleyes....
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.22 2003/10/12 13:18:37 krw Exp $
a42 3

md_set_term() {
}
@


1.22
log
@Cleanup and shrinkage:

1) Eliminate 'WARNING: Disk xxx has no label.' message. When installing OpenBSD
this is a normal condition not worth commenting on. From some discussion on
hackers/icb.

2) Use consistant verbiage and case statement when checking the disklabel.

3) Consistantly suppress output of 'disklabel -W', reducing duplicate messages
like '# using MBR partition ...' which are issued again when the 'disklabel -f
...' command is executed.

4) Usual code rectifications - eliminate extra {}'s, multiple echos
elimination, etc.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.21 2003/09/21 02:11:42 krw Exp $
d49 2
a50 2
	cp /mnt/usr/mdec/bootsd /mnt/bootsd
	/mnt/usr/mdec/installboot -v /mnt/bootsd /mnt/usr/mdec/bootxx /dev/r${1}a
@


1.21
log
@Fix extraneous display of grep output when searching disklabel output for
error information. Previously things like:

disklabel: no disk label
WARNING: Disk wd0 has no disk label. You will be creating a new one.

would be printed. Now the 'disklabel: no disk label' message is correctly
sent to /dev/null.

Take the opportunity to clean up a bit of code and formatting, making all
the md_checkfordisklabel() functions as identical as possible.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.20 2003/09/09 18:45:52 miod Exp $
d59 1
a59 3
	if grep "no disk label" /tmp/checkfordisklabel; then
		rval=1
	elif grep "disk label corrupted" /tmp/checkfordisklabel; then
d67 1
a67 2
md_prep_disklabel()
{
a71 2
	1)	echo "WARNING: Disk $_disk has no label. You will be creating a new one.\n"
		;;
d76 1
a76 1
	disklabel -W $_disk
@


1.20
log
@Remove old disklabel description text we have no real use for at this point.
with finishing touches and ok krw@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.19 2003/08/07 20:57:06 miod Exp $
d53 1
a54 1
	# $1 is the disk to check
d58 1
d63 1
a63 1
	fi
@


1.19
log
@Bits and pieces towards mvme88k installation media, mostly cloned from the
mvme68k code.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.23 2002/11/07 01:28:52 krw Exp $
d48 1
a48 1
	echo Installing boot block...
d55 1
a55 1
	local rval
d57 1
a57 1
	disklabel $1 >> /dev/null 2> /tmp/checkfordisklabel
a61 2
	else
		rval=0
d70 1
a70 1
	local _disk
a71 1
	_disk=$1
d74 1
a74 1
	0)	ask "Do you wish to edit the disklabel on $_disk?" y
d76 1
a76 2
	1)	echo "WARNING: Disk $_disk has no label"
		ask "Do you want to create one with the disklabel editor?" y
a77 8
	2)	echo "WARNING: Label on disk $_disk is corrupted"
		ask "Do you want to try and repair the damage using the disklabel editor?" y
		;;
	esac

	case "$resp" in
	y*|Y*)	;;
	*)	return ;;
d80 2
a81 26
	# display example
	cat << __EOT

Here is an example of what the partition information will look like once
you have entered the disklabel editor. Disk partition sizes and offsets
are in sector (most likely 512 bytes) units. Make sure these size/offset
pairs are on cylinder boundaries (the number of sector per cylinder is
given in the 'sectors/cylinder' entry, which is not shown here).

Do not change any parameters except the partition layout and the label name.
It's probably also wisest not to touch the '16 partitions:' line, even
in case you have defined less than sixteen partitions.

[Example]
16 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  a:    50176        0    4.2BSD     1024  8192    16   # (Cyl.    0 - 111)
  b:    64512    50176      swap                        # (Cyl.  112 - 255)
  c:   640192        0   unknown                        # (Cyl.    0 - 1428)
  d:   525504   114688    4.2BSD     1024  8192    16   # (Cyl.  256 - 1428)
[End of example]

__EOT
	ask "Press [Enter] to continue"
	disklabel -W ${_disk}
	disklabel -f /tmp/fstab.${_disk} -E ${_disk}
@


1.18
log
@Treat 'bsd' like just another filename in THESETS, no more 'kernel'
logic.  As result, MDSETS gone from everything but mac68k.

MDSETS now treated as a list of complete file names to add to THESETS,
allowing more MD flexibility, i.e. may or may not be .tgz files.

All traces of tar.gz removed. Not used for sets since 2.7 or so. As a
result of code simplification from not having to consider tar.gz, the
functions get_sets(), make_lastset(), and set_not_done() are
eliminated, along with the global SETS.

Build THESETS and DEFAULTSETS to contain full file names.

Always install sets in the order they appear in THESETS, keeping
siteXX last but without needing special logic. More predictable for
user if a lot of set additions and removals done before being
satisfied, as the sets are now installed in the same order they appear
in the selection list.

Remove ability to look for non-set .tgz/.tar.gz files. The job of the
install scripts is to install the standard sets in a simple and
rational way. Not to install general tar balls. The user can do that
post-install or simply '!' out to do it during install. On their head
be it.

If no sets are found in a specified source, list the filenames in
THESETS to show what is being looked for.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.17 2002/05/20 16:53:57 krw Exp $
a46 5
md_get_ifdevs() {
	# return available network devices
	dmesg | egrep "(^ie[0-9] )|(^le[0-9] )" | cut -d" " -f1 | sort -u
}

d48 3
a50 21
	local _rawdev

	if [ "X${1}" = X"" ]; then
		echo "No disk device specified, you must run installboot manually."
		return
	fi
	_rawdev=/dev/r${1}a

	# use extracted mdec if it exists (may be newer)
	if [ -d /mnt/usr/mdec ]; then
		cp /mnt/usr/mdec/bootsd /mnt/bootsd
		/mnt/usr/mdec/installboot -v /mnt/bootsd /mnt/usr/mdec/bootxx _rawdev
	elif [ -d /usr/mdec ]; then
		cp /usr/mdec/bootsd /mnt/bootsd
		/usr/mdec/installboot -v /mnt/bootsd /usr/mdec/bootxx _rawdev
	else
		echo "No boot block prototypes found, you must run installboot manually."
	fi
}
md_labeldisk() {
	echo "huh"
a51 1

@


1.17
log
@Eliminate md_questions(). It was used only to control the setting of
machdep.allowaperture. Remove the setting of machdep.allowaperture
from md_installboot().

Add MDXAPERTURE variable to relevant architectures.

Add a new function set_machdep_allowaperture(). It is called *after*
install_sets() (which changes when the X Window question is asked), and
if MDXAPERTURE is present modifies sysctl.conf.

Shrinks overall size for i386, macppc, sparc64 (which used md_questions
for machdep.allowaperture) but increases size a bit for other
architectures since set_machep_allowaperture is in install.sub.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.16 2002/05/19 16:16:05 krw Exp $
a40 2
# Machine-dependent install sets
MDSETS=kernel
@


1.16
log
@Do not use `' pairs inside here documents. Errors will occur
if the ` is not individually escaped and the here document as a whole
is not escaped. (i.e. cat << \__EOT).
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.15 2002/05/18 17:56:03 krw Exp $
a51 4
}

md_questions() {
	:
@


1.15
log
@Eliminate md_get_diskdevs() and md_get_cddevs() by

1) Saving one boot's worth of dmesg in /tmp/dmesg.boot
2) Using sed to scan for devices and pull out names in
   new get_diskdevs() and get_cddevs() in install.sub
3) Saving any md disk/cd sed patterns in MDDISKDEVS and
   MDCDDEVS variables.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.14 2002/05/14 01:49:25 krw Exp $
d129 1
a129 1
given in the `sectors/cylinder' entry, which is not shown here).
d132 1
a132 1
It's probably also wisest not to touch the `16 partitions:' line, even
@


1.14
log
@Eliminate md_native_fstype() and md_native_fsopts(). Both functions
simply echo'd a single word if present at all.

Replace with variables MDFSTYPE and MDFSOPTS if required. Rework logic
in install.sub's mount_a_disk() to always include 'ro' as an option to
the mount command. This allows even those arch's with MDFSTYPE to
usually get by without MDFSOPTS.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.13 2002/05/09 21:54:46 krw Exp $
a46 8
}

md_get_diskdevs() {
	dmesg | egrep -a "^sd[0-9] "
}

md_get_cddevs() {
	dmesg | egrep -a "^cd[0-9] "
@


1.13
log
@Elminate md_welcome_banner() and md_not_going_to_install() as the
output of both was essentially identical on all architectures. Replace
with welcome_banner() and not_going_to_install() in install.sub.

Abstract common verbiage from md_congrats() into congrats() which
calls md_congrats() for any architecture specific additional verbiage.

Reword things so ${MODE} can be plausibly used in more places.

Remove extraneous #!/bin/sh in hp300 install.md.

ok deraadt@@ espie@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.12 2002/05/08 23:01:47 krw Exp $
a158 3
}

md_native_fstype() {
@


1.12
log
@Abstract out common md_set_term() code into set_term() in install.sub,
calling md_set_term() from set_term() to do machine dependent stuff.
Currently only i386 does anything - keyboard mappings.

Add MDTERM variable to allow install.md to set proper default terminal
type. Default to vt220.

Eliminate md_get_partition_range() as useless since every architecture
returned '[a-p]'.

Make default term for all mvme* architectures vt100 as requested by miod@@.

ok deraadt@@ millert@@ miod@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.11 2002/05/07 02:03:57 krw Exp $
a157 51
md_welcome_banner() {
	if [ "$MODE" = "install" ]; then
		echo ""
		echo "Welcome to the OpenBSD/mvme88k ${VERSION_MAJOR}.${VERSION_MINOR} installation program."
		cat << __EOT

This program is designed to help you put OpenBSD on your disk,
in a simple and rational way.  You'll be asked several questions,
and it would probably be useful to have your disk's hardware
manual, the installation notes, and a calculator handy.
__EOT

	else
		echo ""
		echo "Welcome to the OpenBSD/mvme88k ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program."
		cat << __EOT

This program is designed to help you upgrade your OpenBSD system in a
simple and rational way.

As a reminder, installing the `etc' binary set is NOT recommended.
Once the rest of your system has been upgraded, you should manually
merge any changes to files in the `etc' set into those files which
already exist on your system.
__EOT
	fi

cat << __EOT

As with anything which modifies your disk's contents, this
program can cause SIGNIFICANT data loss, and you are advised
to make sure your data is backed up before beginning the
installation process.

Default answers are displayed in brackets after the questions.
You can hit Control-C at any time to quit, but if you do so at a
prompt, you may have to hit return.  Also, quitting in the middle of
installation may leave your system in an inconsistent state.

__EOT
}

md_not_going_to_install() {
	cat << __EOT

OK, then.  Enter `halt' at the prompt to halt the machine.  Once the
machine has halted, power-cycle the system to load new boot code.

__EOT
}

a158 13
	local what;
	if [ "$MODE" = "install" ]; then
		what="installed";
	else
		what="upgraded";
	fi
	cat << __EOT

CONGRATULATIONS!  You have successfully $what OpenBSD!
To boot the installed system, enter halt at the command prompt. Once the
system has halted, reset the machine and boot from the disk.

__EOT
@


1.11
log
@All architectures now use miniroot, so eliminate last few getresp()
calls in favour of ask().

Fix the erroneous advice I gave to Hugh in vax getresp() -> ask().

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.10 2002/04/25 21:28:13 miod Exp $
d43 1
a46 6
	if [ ! -z "$TERM" ]; then
		return
	fi
	ask "Specify terminal type:" xterm
	TERM="$resp"
	export TERM
a59 5
}

md_get_partition_range() {
	# return range of valid partition letters
	echo "[a-p]"
@


1.10
log
@- fix a few texts
- remove dead hp300 stuff
ok millert@@, espie@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.9 2002/03/31 17:30:31 deraadt Exp $
d49 1
a49 2
	echo -n "Specify terminal type [xterm]: "
	getresp "xterm"
d125 1
a125 1
	0)	echo -n "Do you wish to edit the disklabel on $_disk? [y] "
d128 1
a128 1
		echo -n "Do you want to create one with the disklabel editor? [y] "
d131 1
a131 1
		echo -n "Do you want to try and repair the damage using the disklabel editor? [y] "
a134 1
	getresp "y"
d163 1
a163 2
	echo -n "Press [Enter] to continue "
	getresp ""
@


1.9
log
@bit of shrinkage, krw ok
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.8 2002/02/14 03:34:15 deraadt Exp $
d143 1
a143 1
	cat << \__md_prep_disklabel_1
d152 2
a153 2
It's probably also wisest not to touch the `8 partitions:' line, even
in case you have defined less than eight partitions.
d156 1
a156 1
8 partitions:
d164 1
a164 1
__md_prep_disklabel_1
d175 1
a175 1
		cat << \__welcome_banner_1
d181 1
a181 1
__welcome_banner_1
d186 1
a186 1
		cat << \__welcome_banner_2
d195 1
a195 1
__welcome_banner_2
d198 1
a198 1
cat << \__welcome_banner_3
d210 1
a210 1
__welcome_banner_3
d214 1
a214 1
	cat << \__not_going_to_install_1
d219 1
a219 1
__not_going_to_install_1
d229 1
a229 1
	cat << __congratulations_1
d235 1
a235 1
__congratulations_1
@


1.8
log
@version mishandling
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.7 2001/06/23 19:44:49 deraadt Exp $
a35 1

d41 4
d63 2
a64 2
md_get_ifdevs() {                                                         
        # return available network devices                               
d126 1
a126 2
	0)
		echo -n "Do you wish to edit the disklabel on $_disk? [y] "
d128 1
a128 2
	1)
		echo "WARNING: Disk $_disk has no label"
d131 1
a131 2
	2)
		echo "WARNING: Label on disk $_disk is corrupted"
d138 1
a138 1
	y*|Y*) ;;
@


1.7
log
@argh.  stop using kernfs, using dmesg using sysctl.  encode ARCH into
install.md at build time.  remove some crud.  and the icing on the cake:
skip testing all this until next week
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.6 2001/01/25 19:18:40 deraadt Exp $
d174 1
a174 1
		echo "Welcome to the OpenBSD/mvme88k ${VERSION} installation program."
d185 1
a185 1
		echo "Welcome to the OpenBSD/mvme88k ${VERSION} upgrade program."
@


1.6
log
@egrep -a to permit working with binary data in dmesg
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.5 2000/01/24 04:51:55 smurph Exp $
a41 3
TMPWRITEABLE=/tmp/writeable
KERNFSMOUNTED=/tmp/kernfsmounted

a51 4
md_machine_arch() {
	cat /kern/machine
}

d53 1
a53 1
	egrep -a "^sd[0-9] " < /kern/msgbuf
d57 1
a57 1
	egrep -a "^cd[0-9] " < /kern/msgbuf
d62 1
a62 1
	egrep "(^ie[0-9] )|(^le[0-9] )"< /kern/msgbuf  | cut -d" " -f1 | sort -u
a238 38
}

md_makerootwritable() {

	if [ -e ${TMPWRITEABLE} ]
	then
		md_mountkernfs
		return
	fi
	umount /tmp >> /dev/null 2>&1
	if ! mount -t ffs  -u /dev/rd0a / ; then
		cat << \__rd0_failed_1

FATAL ERROR: Can't mount the ram filesystem.

__rd0_failed_1
		exit
	fi

	# Bleh.  Give mount_mfs a chance to DTRT.
	sleep 2
	> ${TMPWRITEABLE}

	md_mountkernfs
}
md_mountkernfs() {
	if [ -e ${KERNFSMOUNTED} ]
	then
		return
	fi
	if ! mount -t kernfs /kern /kern
	then
		cat << \__kernfs_failed_1
FATAL ERROR: Can't mount kernfs filesystem
__kernfs_failed_1
		exit
	fi
	> ${KERNFSMOUNTED} 
@


1.5
log
@mvme88k ramdisk mods.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.4 1999/09/03 18:55:32 deraadt Exp $
d60 1
a60 1
	egrep "^sd[0-9] " < /kern/msgbuf
d64 1
a64 1
	egrep "^cd[0-9] " < /kern/msgbuf
@


1.4
log
@md_questions() interface allows asking questions before sets
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.3 1999/08/15 10:05:07 millert Exp $
d92 2
a93 2
		cp /mnt/usr/mdec/boot /mnt/bootsd
		/mnt/usr/mdec/installboot -v /mnt/bootsd /mnt/usr/mdec/bootxx $_rawdev
d95 2
a96 2
		cp /usr/mdec/boot /mnt/bootsd
		/usr/mdec/installboot -v /mnt/bootsd /usr/mdec/bootxx $_rawdev
@


1.3
log
@Kill md_copy_kernel()
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.2 1999/04/01 21:30:34 deraadt Exp $
d75 4
@


1.2
log
@disklabel -f use, for fstab tweaking
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.1 1998/12/17 02:16:32 smurph Exp $
a43 20

md_copy_kernel() {
	if [ ! -s /mnt/bsd ]; then
		echo	""
		echo	"Warning, no kernel installed!"
		echo	"You did not unpack a file set containing a kernel."
		echo	"This is needed to boot.  Please note that the install"
		echo	"install kernel is not suitable for general use."
		echo -n	"Escape to shell add /mnt/bsd by hand? [y] "
		getresp "y"
		case "$resp" in
			y*|Y*)
				echo "Type 'exit' to return to install."
				sh
				;;
			*)
				;;
		esac
	fi
}
@


1.1
log
@commit to add upport for mvme88k.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.5 1997/09/30 17:52:44 deraadt Exp $
d191 1
a191 1
	disklabel -E ${_disk}
@

