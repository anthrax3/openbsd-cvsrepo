head	1.22;
access;
symbols
	OPENBSD_5_5:1.21.0.2
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.18.0.4
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.2
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.17.0.6
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.14.0.8
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.6
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.4
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.12.0.2
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.10.0.4
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.2
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.7.0.10
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.8
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.6
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.1.0.10
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@# @;


1.22
date	2014.03.18.22.36.28;	author miod;	state dead;
branches;
next	1.21;

1.21
date	2013.11.09.22.35.40;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2013.10.15.22.46.52;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2013.10.14.00.00.11;	author guenther;	state Exp;
branches;
next	1.18;

1.18
date	2013.01.05.11.20.55;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.16;

1.16
date	2011.04.15.03.11.22;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2011.03.14.19.07.46;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2009.04.12.16.12.53;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2008.12.02.03.20.57;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2008.12.02.01.01.07;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2008.01.11.10.16.40;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2007.06.17.00.28.21;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2007.04.13.17.34.40;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2004.12.11.14.04.11;	author martin;	state Exp;
branches;
next	1.6;

1.6
date	2003.08.07.20.57.05;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.08.18.44.54;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.25.22.10.28;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.30.02.33.23;	author krw;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.11.15.23.10;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.12.17.02.16.31;	author smurph;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#	$OpenBSD: Makefile,v 1.21 2013/11/09 22:35:40 miod Exp $

TOP=		${.CURDIR}/..

.include "${TOP}/Makefile.inc"
BSD_RD=		bsd.rd
IMAGE=		mr.fs
CBIN?=		instbin
LISTS=		${.CURDIR}/list
UTILS?=		${.CURDIR}/../../miniroot

MOUNT_POINT=	/mnt
MTREE=		${UTILS}/mtree.conf

VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$


DISKTYPE=       rdroot
NBLKS=          4096
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -t ffs -m 0 -o space

all:	${BSD_RD}

${BSD_RD}: ${CBIN} ${IMAGE} bsd rdsetroot
	cp bsd ${BSD_RD}
	${.OBJDIR}/rdsetroot ${BSD_RD} ${IMAGE}

${IMAGE}: rd_setup do_files rd_teardown

bsd:
.ifndef(NOBUILD)
	cd ${.CURDIR}/../../../sys/arch/mvme88k/conf && config RAMDISK
	cd ${.CURDIR}/../../../sys/arch/mvme88k/compile/RAMDISK && \
	    ${MAKE} clean && exec ${MAKE}
.endif
	cp ${.CURDIR}/../../../sys/arch/mvme88k/compile/RAMDISK/bsd bsd

rd_test: rd_setup rd_teardown

rd_setup: 
	dd if=/dev/zero of=${IMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${IMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}

rdsetroot:	${TOP}/../common/elfrdsetroot.c
	${HOSTCC} -o rdsetroot \
	    ${TOP}/../common/elfrdsetroot.c ${TOP}/../common/elf32.c \
	    ${TOP}/../common/elf64.c

unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}

.PRECIOUS:      ${IMAGE}

.ifdef RELEASEDIR
install:
	cp ${BSD_RD} ${RELEASEDIR}
.endif

${CBIN}.conf: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CBIN}.conf
	crunchgen -E -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${CBIN}.conf

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk all

#${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
#	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all

do_files:
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.conf ${CBIN}.mk ${CBIN}.cache \
	    lib*.a lib*.olist ${CBIN}.map \
	    *.o *.lo *.c bsd ${BSD_RD} rdsetroot

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.21
log
@Disable SRCLIBDIR crunchgen feature on gcc 3 platforms; gcc 3 collect2 does
not behave the way crunchgen expects it to. Will hopefully get fixed soon.
Discussed with guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2013/10/15 22:46:52 deraadt Exp $
@


1.20
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2013/10/14 00:00:11 guenther Exp $
d81 4
a84 1
	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all
@


1.19
log
@Turn on the distrib lib bits in crunchgen by setting SRCLIBDIR.
Add the new files to the clean target's rm list.

"why not get it tested?" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2013/01/05 11:20:55 miod Exp $
d91 1
a91 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.conf ${CBIN}.mk ${CBIN}.cache \
@


1.18
log
@Switch m88k ports to ELF.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2011/04/18 16:52:10 thib Exp $
d81 1
a81 1
	${MAKE} -f ${CBIN}.mk all
d92 1
@


1.17
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2011/04/15 03:11:22 deraadt Exp $
d58 4
a61 2
rdsetroot:	${TOP}/../common/rdsetroot.c
	${HOSTCC} -o rdsetroot ${TOP}/../common/rdsetroot.c
d78 1
a78 1
	crunchgen -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${CBIN}.conf
@


1.16
log
@No need to make depend kernels; ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2011/03/14 19:07:46 deraadt Exp $
d15 1
a15 1
VND?=		svnd0
@


1.15
log
@unify a chunk
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2009/04/17 03:58:54 deraadt Exp $
d39 1
a39 1
	    ${MAKE} clean && ${MAKE} depend && ${MAKE}
@


1.14
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2009/04/12 16:12:53 deraadt Exp $
d90 1
a90 2
	*.o *.lo *.c bsd ${BSD_RD} \
	rdsetroot
@


1.13
log
@run make depend for kernel, too; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2008/12/02 03:20:57 deraadt Exp $
d67 1
d69 2
a70 1
	cp ${BSD_RD} ${DESTDIR}/snapshot/${BSD_RD}
d85 1
a85 1
	    sh ${UTILS}/runlist.sh ${LISTS}
@


1.12
log
@commit with rdsetroot now accepting the filesystem as a 2nd arg
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2008/12/02 01:01:07 deraadt Exp $
d39 1
a39 1
	    ${MAKE} clean && ${MAKE}
@


1.11
log
@no longer need to compile rdsetroot with DEBUG
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2008/01/11 10:16:40 espie Exp $
d31 1
a31 1
	${.OBJDIR}/rdsetroot ${BSD_RD} < ${IMAGE}
@


1.10
log
@cleanup: make -> ${MAKE} consistenly.
zap extra subshells.

okay miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2007/06/17 00:28:21 deraadt Exp $
d59 1
a59 1
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/../common/rdsetroot.c
@


1.9
log
@Stop using disklabel -r.  The disklabel code does not know all the semantics
for pushing disklabels onto the disk (and besides that, it is buggy and
unreadable crap); thanks for help from krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2007/04/13 17:34:40 millert Exp $
d39 1
a39 1
	    make clean && make
d77 1
a77 1
	make -f ${CBIN}.mk all
@


1.8
log
@Update install media generation to the new semantics of the -c flag.
Also replace "newfs -O" with "newfs -O 0" now that -O takes an option.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2004/12/11 14:04:11 martin Exp $
d48 1
a48 1
	disklabel -w -r ${VND} ${DISKTYPE}
@


1.7
log
@don't clean bsdmix and bsdofw

'feel free to remove' miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2003/08/07 20:57:05 miod Exp $
d25 1
a25 1
NEWFSARGS= -t ffs -m 0 -o space -u 32 -c 16
@


1.6
log
@Bits and pieces towards mvme88k installation media, mostly cloned from the
mvme68k code.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2002/04/30 09:18:20 deraadt Exp $
d88 1
a88 1
	*.o *.lo *.c bsd bsdmix bsdofw ${BSD_RD} \
@


1.5
log
@kill extraneous duplicated commands.
okay miod@@
@
text
@d1 1
a1 2
#	$OpenBSDBSD: Makefile,v 1.1 1995/07/18 04:13:06 briggs Exp $
#	$NetBSD: Makefile,v 1.1 1995/07/18 04:13:06 briggs Exp $
d6 1
d8 3
a10 2
CRUNCHCONF?=	 ${.CURDIR}/${CBIN}.conf
BASE=mr
d13 1
a14 1
#FS=		ramdisk.fs
a19 2
REALIMAGE!=	echo /tmp/image.${PID}
LISTFLOPPY?=	${.CURDIR}/list_ramdisk
a20 1
.include "Makefile.inc"
d22 10
a31 1
all:	bsd.rd
d33 1
a33 29
#${FS}:	bsd.gz
#	dd if=/dev/zero of=${REALIMAGE} count=4096
#	vnconfig -v -c ${VND} ${REALIMAGE}
#	disklabel -w ${VND} rdroot
#	newfs -m 0 -o space -i 8192 -c 80 ${VND_RDEV}
#	mount ${VND_DEV} ${MOUNT_POINT}
#	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
#	    TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
#	    sh ${UTILS}/runlist.sh ${LISTFLOPPY}
#	/usr/mdec/installboot -v /mnt/boot ${DESTDIR}/usr/mdec/biosboot ${VND_CRDEV}
#	@@echo ""
#	@@df -i ${MOUNT_POINT}
#	@@echo ""
#	umount ${MOUNT_POINT}
#	vnconfig -u ${VND}
#	cp ${REALIMAGE} ${FS}

DISKTYPE=	rdroot
NBLKS=		8192
# old format, minfree, opt, b/i  trks, sects, cpg
#NEWFSARGS= -t ffs -m 0 -o space -u 32 -c 16
#NEWFSARGS= -m 0 -o space -u 32 -c 16
NEWFSARGS=
bsd.gz: bsd.rd
	gzip -c9 bsd.rd > bsd.gz

bsd.rd: ${IMAGE} bsd rdsetroot
	cp bsd bsd.rd
	${.CURDIR}/${__objdir}/rdsetroot bsd.rd < ${IMAGE}
d36 5
a40 3
#	cd ${.CURDIR}/../../../sys/arch/mvme88k/conf && config RAMDISK
#	cd ${.CURDIR}/../../../sys/arch/mvme88k/compile/RAMDISK && \
#	    make clean && make
d43 1
a43 1
${IMAGE}: ${CBIN} rd_setup do_files rd_teardown
d45 4
a48 4
rd_setup: ${CBIN}
	dd if=/dev/zero of=${REALIMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${DISKTYPE}
d50 1
a50 1
	fsck -f -y ${VND_RDEV} > /dev/null
a56 2
	cp ${REALIMAGE} ${IMAGE}
	rm ${REALIMAGE}
a63 1
	-/bin/rm -f ${IMAGE}
d68 25
a92 1
	cp bsd.rd ${DESTDIR}/snapshot/bsd.rd
@


1.4
log
@runlist.sh & list2sh.awk unification
@
text
@a69 10
	fsck -f -y ${VND_RDEV} > /dev/null
	fsck -f -y ${VND_RDEV} > /dev/null
	fsck -f -y ${VND_RDEV} > /dev/null
	fsck -f -y ${VND_RDEV} > /dev/null
	fsck -f -y ${VND_RDEV} > /dev/null
	fsck -f -y ${VND_RDEV} > /dev/null
	fsck -f -y ${VND_RDEV} > /dev/null
	fsck -f -y ${VND_RDEV} > /dev/null
	fsck -f -y ${VND_RDEV} > /dev/null
	fsck -f -y ${VND_RDEV} > /dev/null
@


1.3
log
@Make customizing floppy contents easier by accepting a
user supplied value for LISTFLOPPY.

Suggestion by peter.galbavy@@knowtion.net.

ok deraadt@@.
@
text
@d33 2
a34 1
#	    TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh ${LISTFLOPPY}
@


1.2
log
@unify a.out rdsetroot
@
text
@d20 1
a20 1
LISTFLOPPY=	${.CURDIR}/list_ramdisk
@


1.1
log
@commit to add upport for mvme88k.
@
text
@d88 2
a89 2
rdsetroot:	${TOP}/common/rdsetroot.c
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/common/rdsetroot.c
@

