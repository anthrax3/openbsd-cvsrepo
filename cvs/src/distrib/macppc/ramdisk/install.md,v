head	1.71;
access;
symbols
	OPENBSD_6_2:1.71.0.4
	OPENBSD_6_2_BASE:1.71
	OPENBSD_6_1:1.70.0.4
	OPENBSD_6_1_BASE:1.70
	OPENBSD_6_0:1.68.0.4
	OPENBSD_6_0_BASE:1.68
	OPENBSD_5_9:1.68.0.2
	OPENBSD_5_9_BASE:1.68
	OPENBSD_5_8:1.60.0.4
	OPENBSD_5_8_BASE:1.60
	OPENBSD_5_7:1.56.0.2
	OPENBSD_5_7_BASE:1.56
	OPENBSD_5_6:1.54.0.6
	OPENBSD_5_6_BASE:1.54
	OPENBSD_5_5:1.54.0.2
	OPENBSD_5_5_BASE:1.54
	OPENBSD_5_4:1.53.0.4
	OPENBSD_5_4_BASE:1.53
	OPENBSD_5_3:1.53.0.2
	OPENBSD_5_3_BASE:1.53
	OPENBSD_5_2:1.52.0.2
	OPENBSD_5_2_BASE:1.52
	OPENBSD_5_1_BASE:1.50
	OPENBSD_5_1:1.50.0.4
	OPENBSD_5_0:1.50.0.2
	OPENBSD_5_0_BASE:1.50
	OPENBSD_4_9:1.48.0.2
	OPENBSD_4_9_BASE:1.48
	OPENBSD_4_8:1.46.0.2
	OPENBSD_4_8_BASE:1.46
	OPENBSD_4_7:1.45.0.2
	OPENBSD_4_7_BASE:1.45
	OPENBSD_4_6:1.45.0.4
	OPENBSD_4_6_BASE:1.45
	OPENBSD_4_5:1.35.0.2
	OPENBSD_4_5_BASE:1.35
	OPENBSD_4_4:1.34.0.2
	OPENBSD_4_4_BASE:1.34
	OPENBSD_4_3:1.33.0.2
	OPENBSD_4_3_BASE:1.33
	OPENBSD_4_2:1.32.0.2
	OPENBSD_4_2_BASE:1.32
	OPENBSD_4_1:1.30.0.2
	OPENBSD_4_1_BASE:1.30
	OPENBSD_4_0:1.29.0.6
	OPENBSD_4_0_BASE:1.29
	OPENBSD_3_9:1.29.0.4
	OPENBSD_3_9_BASE:1.29
	OPENBSD_3_8:1.29.0.2
	OPENBSD_3_8_BASE:1.29
	OPENBSD_3_7:1.26.0.4
	OPENBSD_3_7_BASE:1.26
	OPENBSD_3_6:1.26.0.2
	OPENBSD_3_6_BASE:1.26
	OPENBSD_3_5:1.24.0.2
	OPENBSD_3_5_BASE:1.24
	OPENBSD_3_4:1.19.0.4
	OPENBSD_3_4_BASE:1.19
	OPENBSD_3_3:1.19.0.2
	OPENBSD_3_3_BASE:1.19
	OPENBSD_3_2:1.15.0.2
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3;
locks; strict;
comment	@# @;


1.71
date	2017.07.28.18.15.44;	author rpe;	state Exp;
branches;
next	1.70;
commitid	K369F2mXWuSRrNyX;

1.70
date	2017.01.22.23.43.54;	author rpe;	state Exp;
branches;
next	1.69;
commitid	T8Ujv1g6HeWswBdS;

1.69
date	2016.09.04.09.52.03;	author rpe;	state Exp;
branches;
next	1.68;
commitid	MluxzkKaq4wrtv84;

1.68
date	2016.02.23.02.34.09;	author krw;	state Exp;
branches;
next	1.67;
commitid	gwUH8t5kZQGsGeyp;

1.67
date	2016.02.08.17.39.37;	author krw;	state Exp;
branches;
next	1.66;
commitid	ZOci9bt8S9LF1Az1;

1.66
date	2015.12.29.11.16.14;	author rpe;	state Exp;
branches;
next	1.65;
commitid	dPgVJD33gNmmCKz4;

1.65
date	2015.12.18.16.20.58;	author rpe;	state Exp;
branches;
next	1.64;
commitid	VkQ4KC1oXExBZv81;

1.64
date	2015.12.02.21.17.17;	author krw;	state Exp;
branches;
next	1.63;
commitid	qjXM8wxHbdPw7A4U;

1.63
date	2015.11.09.20.54.12;	author rpe;	state Exp;
branches;
next	1.62;
commitid	euu2kEavGhIGtt10;

1.62
date	2015.10.25.10.20.51;	author krw;	state Exp;
branches;
next	1.61;
commitid	hwNh1w1pPCoWC2Xa;

1.61
date	2015.10.17.08.47.24;	author rpe;	state Exp;
branches;
next	1.60;
commitid	KNahsrA9e7A9tpdn;

1.60
date	2015.08.03.10.36.41;	author rpe;	state Exp;
branches;
next	1.59;
commitid	VqnlPK1BjbbPSWSX;

1.59
date	2015.06.02.19.54.06;	author rpe;	state Exp;
branches;
next	1.58;
commitid	zUqrjWrWSBxkCmbI;

1.58
date	2015.05.31.19.40.10;	author rpe;	state Exp;
branches;
next	1.57;
commitid	p6r5f9n0C0WoWNND;

1.57
date	2015.05.04.19.55.26;	author rpe;	state Exp;
branches;
next	1.56;
commitid	NyWrBKI5Tnb4FUEi;

1.56
date	2014.08.20.06.52.21;	author phessler;	state Exp;
branches;
next	1.55;
commitid	Ao1bJ1VxGwdRMPPI;

1.55
date	2014.08.15.09.45.54;	author rpe;	state Exp;
branches;
next	1.54;
commitid	1ay5nPocSGoegdY3;

1.54
date	2013.11.16.18.37.27;	author rpe;	state Exp;
branches;
next	1.53;

1.53
date	2012.10.15.02.27.23;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2012.07.13.14.50.34;	author halex;	state Exp;
branches;
next	1.51;

1.51
date	2012.07.10.14.25.00;	author halex;	state Exp;
branches;
next	1.50;

1.50
date	2011.07.06.20.02.16;	author halex;	state Exp;
branches;
next	1.49;

1.49
date	2011.04.17.20.57.10;	author krw;	state Exp;
branches;
next	1.48;

1.48
date	2011.01.03.00.36.49;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	2010.10.02.00.11.57;	author krw;	state Exp;
branches;
next	1.46;

1.46
date	2010.06.27.00.42.00;	author krw;	state Exp;
branches;
next	1.45;

1.45
date	2009.06.24.11.26.40;	author krw;	state Exp;
branches;
next	1.44;

1.44
date	2009.06.04.00.44.47;	author krw;	state Exp;
branches;
next	1.43;

1.43
date	2009.06.02.16.23.45;	author krw;	state Exp;
branches;
next	1.42;

1.42
date	2009.05.31.17.49.53;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2009.05.30.21.57.17;	author krw;	state Exp;
branches;
next	1.40;

1.40
date	2009.04.24.01.43.27;	author krw;	state Exp;
branches;
next	1.39;

1.39
date	2009.04.24.01.04.33;	author krw;	state Exp;
branches;
next	1.38;

1.38
date	2009.04.12.12.56.02;	author krw;	state Exp;
branches;
next	1.37;

1.37
date	2009.04.12.01.35.01;	author krw;	state Exp;
branches;
next	1.36;

1.36
date	2009.04.10.23.11.17;	author krw;	state Exp;
branches;
next	1.35;

1.35
date	2009.01.15.17.53.57;	author todd;	state Exp;
branches;
next	1.34;

1.34
date	2008.06.26.05.42.03;	author ray;	state Exp;
branches;
next	1.33;

1.33
date	2008.03.04.00.36.38;	author krw;	state Exp;
branches;
next	1.32;

1.32
date	2007.08.15.15.33.20;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2007.05.24.13.17.26;	author krw;	state Exp;
branches;
next	1.30;

1.30
date	2007.02.11.18.59.31;	author krw;	state Exp;
branches;
next	1.29;

1.29
date	2005.04.02.14.34.46;	author krw;	state Exp;
branches;
next	1.28;

1.28
date	2005.03.27.15.13.50;	author krw;	state Exp;
branches;
next	1.27;

1.27
date	2005.03.26.01.40.20;	author krw;	state Exp;
branches;
next	1.26;

1.26
date	2004.07.18.01.14.04;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2004.05.24.15.47.00;	author tom;	state Exp;
branches;
next	1.24;

1.24
date	2003.12.04.20.17.02;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2003.10.10.02.41.26;	author krw;	state Exp;
branches;
next	1.22;

1.22
date	2003.09.22.01.31.39;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2003.09.21.02.11.42;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.19.02.40.11;	author krw;	state Exp;
branches;
next	1.19;

1.19
date	2003.03.02.16.09.55;	author krw;	state Exp;
branches;
next	1.18;

1.18
date	2003.02.16.23.16.44;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2002.12.04.13.11.22;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2002.11.07.01.28.52;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2002.05.20.16.53.57;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2002.05.19.16.16.05;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.18.17.56.03;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.14.01.49.25;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.09.21.54.46;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.08.23.14.53;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.28.14.44.01;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2002.04.25.21.28.13;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.31.17.30.30;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.23.18.29.51;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.14.03.26.05;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.23.01.51.52;	author krw;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.08.17.40.40;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.04.22.25.02;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.01.16.47.03;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.71
log
@DEFAULTSETS, SANESETS and THESETS are set in the install.md scripts
according to the same logic for all architectures but sgi.

Consolidate setting them in one place in install.sub and incorporate
the sgi specific MDSETS and MDSANESETS.

Introduce MDSANESETS complementing MDSETS which makes the construction
of DEFAULTSETS, THESETS and SANESETS clearer in install.sub.

While here, adjust the comment about how MDSETS used now.

OK deraadt@@
@
text
@#	$OpenBSD: install.md,v 1.70 2017/01/22 23:43:54 rpe Exp $
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# machine dependent section of installation/upgrade script.
#

MDXAPERTURE=2
MDXDM=y
NCPU=$(sysctl -n hw.ncpufound)

md_installboot() {
	local _disk=$1

	# If there is an MSDOS partition on the boot disk, copy ofwboot
	# into it.
	if disk_has $_disk mbr openbsd; then
		if mount /dev/${_disk}i /mnt2 >/dev/null 2>&1; then
			# Use cat to avoid holes created by cp(1)
			cat /mnt/usr/mdec/ofwboot > /mnt2/ofwboot
			umount /mnt2
		fi
	fi
}

md_prep_MBR() {
	local _disk=$1 _q _d

	if disk_has $_disk hfs; then
		cat <<__EOT

WARNING: Putting an MBR partition table on $_disk will DESTROY the existing HFS
         partitions and HFS partition table:
$(pdisk -l $_disk)

__EOT
		ask_yn "Are you *sure* you want an MBR partition table on $_disk?"
		[[ $resp == n ]] && return 1
	fi

	while :; do
		_d=whole

		if disk_has $_disk mbr; then
			fdisk $_disk
			if disk_has $_disk mbr openbsd; then
				_q=", use the (O)penBSD area"
				_d=OpenBSD
			fi
		else
			echo "MBR has invalid signature; not showing it."
		fi
		ask "Use (W)hole disk$_q or (E)dit the MBR?" "$_d"
		case $resp in
		[wW]*)
			echo -n "Creating a 1MB DOS partition and an OpenBSD partition for rest of $_disk..."
			dd if=/dev/zero of=/dev/r${_disk}c bs=1m count=1
			fdisk -iy $_disk >/dev/null
			echo "done."
			break ;;
		[eE]*)
			# Manually configure the MBR.
			cat <<__EOT

You will now create one MBR partition to contain your OpenBSD data
and one MBR partition to contain the program that Open Firmware uses
to boot OpenBSD. Neither partition will overlap any other partition.

The OpenBSD MBR partition will have an id of 'A6' and the boot MBR
partition will have an id of '06' (DOS). The boot partition will be
at least 1MB and be marked as the *only* active partition.

$(fdisk $_disk)
__EOT
			fdisk -e $_disk
			disk_has $_disk mbr dos ||
				{ echo "\nNo DOS (id 06) partition!\n"; continue; }
			disk_has $_disk mbr dos_active ||
				{ echo "\nNo active DOS partition!\n"; continue; }
			disk_has $_disk mbr openbsd ||
				{ echo "\nNo OpenBSD (id A6) partition!\n"; continue; }
			break ;;
		[oO]*)
			[[ $_d == OpenBSD ]] || continue
			break ;;
		esac
	done

	disklabel $_disk 2>/dev/null | grep -q "^  i:" || disklabel -w -d $_disk
	newfs -t msdos ${_disk}i
}

md_prep_HFS() {
	local _disk=$1 _d _q

	while :; do
		_q=
		_d=Modify
		disk_has $_disk hfs openbsd &&
			{ _q="Use the (O)penBSD partition, "; _d=OpenBSD; }
		pdisk -l $_disk
		ask "$_q(M)odify a partition or (A)bort?" "$_d"
		case $resp in
		[aA]*)	return 1 ;;
		[oO]*)	return 0 ;;
		[mM]*)	pdisk $_disk
			disk_has $_disk hfs openbsd && break
			echo "\nNo 'OpenBSD'-type partition named 'OpenBSD'!"
		esac
	done

	return 0;
}

md_prep_disklabel() {
	local _disk=$1 _f=/tmp/i/fstab.$1

	PARTTABLE=
	while [[ -z $PARTTABLE ]]; do
		resp=MBR
		disk_has $_disk hfs && ask "Use HFS or MBR partition table?" HFS
		case $resp in
		[mM]*)	md_prep_MBR $_disk && PARTTABLE=MBR ;;
		[hH]*)	md_prep_HFS $_disk && PARTTABLE=HFS ;;
		esac
	done

	disklabel_autolayout $_disk $_f || return
	[[ -s $_f ]] && return

	# Edit disklabel manually.
	# Abandon all hope, ye who enter here.
	disklabel -F $_f -E $_disk
}

md_congrats() {
	cat <<__EOT

INSTALL.$ARCH describes how to configure Open Firmware to boot OpenBSD. The
command to boot OpenBSD will be something like 'boot hd:,ofwboot /bsd'.
__EOT
	if [[ $PARTTABLE == HFS ]]; then
		cat <<__EOT

NOTE: You must use MacOS to copy 'ofwboot' from the OpenBSD install media to
the first HFS partition of $ROOTDISK.
__EOT
	fi

}

md_consoleinfo() {
	local _u _d=zstty

	for _u in $(scan_dmesg "/^$_d\([0-9]\) .*/s//\1/p"); do
		if [[ $_d$_u == $CONSOLE || -z $CONSOLE ]]; then
			CDEV=$_d$_u
			: ${CSPEED:=57600}
			set -- a b c d e f g h i j
			shift $_u
			CTTY=tty$1
			return
		fi
	done
}
@


1.70
log
@Whitespaces ...
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.69 2016/09/04 09:52:03 rpe Exp $
a36 2

((NCPU > 1)) && { DEFAULTSETS="bsd bsd.rd bsd.mp"; SANESETS="bsd bsd.mp"; }
@


1.69
log
@Move files created by root during install/upgrade in a subdir of
/tmp with proper permissions so that unprivileged programs can not
tamper with them.

positive feedback from deraadt
OK halex
@
text
@d1 1
a1 2
#	$OpenBSD: install.md,v 1.68 2016/02/23 02:34:09 krw Exp $
#
@


1.68
log
@In the great pdisk churn we lost a pdisk pecularity in disk name
handling. "pdisk -l /dev/wd0c" used to work as well as "pdisk -l
/dev/rwd0c". The new, more fdisk-like, code does not accept the
former.

Adjust the install scripts to eliminate the use of "/dev/wd0c"
constructs and, like fdisk, simply use 'wd0'.

Fixes macppc installs to HFS partitioned disks.

Discovered and diff by rpe@@.

ok rpe@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.67 2016/02/08 17:39:37 krw Exp $
d145 1
a145 1
	local _disk=$1 _f=/tmp/fstab.$1
@


1.67
log
@If manual disklabel editing is requested during install, don't emit
verbiage explaining what disklabels are.

If you don't know, you should be using (A)uto!

ok rpe@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.66 2015/12/29 11:16:14 rpe Exp $
d63 1
a63 1
$(pdisk -l /dev/${_disk}c)
d130 1
a130 1
		pdisk -l /dev/${_disk}c
d135 1
a135 1
		[mM]*)	pdisk /dev/${_disk}c
@


1.66
log
@Change patterns in case-blocks from a*|A* to [aA]*

OK halex@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.65 2015/12/18 16:20:58 rpe Exp $
d160 2
a161 12
	cat <<__EOT

You will now create an OpenBSD disklabel inside the OpenBSD $PARTTABLE
partition. The disklabel defines how OpenBSD splits up the $PARTTABLE partition
into OpenBSD partitions in which filesystems and swap space are created.
You must provide each filesystem's mountpoint in this program.

The offsets used in the disklabel are ABSOLUTE, i.e. relative to the
start of the disk, NOT the start of the OpenBSD $PARTTABLE partition.

__EOT

@


1.65
log
@Introduce a new function disk_has() to inspect a disk if it has a
partition-table of a certain type and optionally if it has a partition
of a certain type.

Use disk_has() in the install.md script to replace all the various
"fdisk <disk> | grep <pattern>" commands greatly simplifying things.

positive feedback from sthen@@
"time to get it really tested" deraadt@@
OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.64 2015/12/02 21:17:17 krw Exp $
d84 1
a84 1
		w*|W*)
d90 1
a90 1
		e*|E*)
d112 1
a112 1
		o*|O*)
@


1.64
log
@If (O)penBSD is not offered as a partitioning option, do not accept
'O*|o*' as a valid response. Ignore it as we do other invalid input.

armv7 is special case to be handled separately.

Noticed by kettenis@@.

ok deraadt@@ rpe@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.63 2015/11/09 20:54:12 rpe Exp $
d46 5
a50 7
	if fdisk $_disk | grep -q 'Signature: 0xAA55'; then
		if fdisk $_disk | grep -q '^..: 06 '; then
			if mount /dev/${_disk}i /mnt2 >/dev/null 2>&1; then
				# Use cat to avoid holes created by cp(1)
				cat /mnt/usr/mdec/ofwboot > /mnt2/ofwboot
				umount /mnt2
			fi
a54 8
md_has_hfs () {
	pdisk -l /dev/${1}c 2>&1 | grep -q '^Partition map '
}

md_has_hfs_openbsd () {
	pdisk -l /dev/${1}c 2>&1 | grep -q ' OpenBSD OpenBSD '
}

d58 1
a58 1
	if md_has_hfs $_disk; then
d73 1
a73 1
		if fdisk $_disk | grep -q 'Signature: 0xAA55'; then
d75 1
a75 1
			if fdisk $_disk | grep -q '^..: A6 '; then
d105 1
a105 1
			fdisk $_disk | grep -q '^..: 06 ' ||
d107 1
a107 1
			fdisk $_disk | grep -q '^\*.: 06 ' ||
d109 1
a109 1
			fdisk $_disk | grep -q "^..: A6 " ||
d128 1
a128 1
		md_has_hfs_openbsd $_disk &&
d136 1
a136 1
			md_has_hfs_openbsd $_disk && break
d150 1
a150 1
		md_has_hfs $_disk && ask "Use HFS or MBR partition table?" HFS
@


1.63
log
@Fix commas in "Use (W)hole disk MBR..." question.

OK jmc@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.62 2015/10/25 10:20:51 krw Exp $
d122 3
a124 1
		o*|O*)	break ;;
@


1.62
log
@Use 'fdisk -i', instead of 'fdisk -e' with a here document of
'reinit;update;write;quit'. They've done the same thing for some
time now.

Tweaks & test from rpe@@.

ok rpe@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.61 2015/10/17 08:47:24 rpe Exp $
d86 1
a86 1
				_q=", use the (O)penBSD area,"
@


1.61
log
@Cleanup a bit.

OK krw@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.60 2015/08/03 10:36:41 rpe Exp $
d97 1
a97 6
			fdisk -e $_disk <<__EOT >/dev/null
reinit
update
write
quit
__EOT
@


1.60
log
@Enable the xdm installer question on macppc, now that it has virtual
consoles.

Noted by stsp
OK deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.59 2015/06/02 19:54:06 rpe Exp $
d58 1
a58 1
	pdisk -l /dev/$1c 2>&1 | grep -q "^Partition map "
d62 1
a62 1
	pdisk -l /dev/$1c 2>&1 | grep -q " OpenBSD OpenBSD "
d71 1
a71 1
WARNING: putting an MBR partition table on $_disk will DESTROY the existing HFS
d82 1
d120 1
a120 1
			fdisk $_disk | grep -q '^..: 06 ' || \
d122 1
a122 1
			fdisk $_disk | grep -q '^\*.: 06 ' || \
d124 1
a124 1
			fdisk $_disk | grep -q "^..: A6 " || \
d137 1
a137 1
	
d141 1
a141 1
		md_has_hfs_openbsd $_disk && \
d146 3
a148 3
		a*|A*)	return 1 ;;
		o*|O*)	return 0 ;;
		m*|M*)	pdisk /dev/${_disk}c
d165 2
a166 8
		m|mbr|M|MBR)
			md_prep_MBR $_disk || continue
			PARTTABLE=MBR
			;;
		h|hfs|H|HFS)
			md_prep_HFS $_disk || continue
			PARTTABLE=HFS
			;;
@


1.59
log
@Remove the $FSTABFLAG variable and use -F directly. The installer
uses disklabel UIDs unconditionally for a while already.

OK krw@@
"looks good" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.58 2015/05/31 19:40:10 rpe Exp $
d36 1
@


1.58
log
@Replace identical code in the MD scripts of the installer with a new
MI function disklabel_autolayout() which now handles all aspects of
the disklabel auto-layout and autopartitioning case for the root disk.
Remove get_disklabel_template() and merge it with the new function.

"move forward" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.57 2015/05/04 19:55:26 rpe Exp $
d189 1
a189 1
	disklabel $FSTABFLAG $_f -E $_disk
@


1.57
log
@Add the new template file based autopartitioning feature of disklabel(8)
to the OpenBSD installer. It is available during unattended installation.
The template file is fetched from an url, provided as answer to a new
question in the response file:

    URL to autopartitioning template for disklabel = url

Original diff from and OK henning@@
'no objection' krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.56 2014/08/20 06:52:21 phessler Exp $
d156 1
a156 1
	local _disk=$1 _f _op
d174 2
a175 21
	_f=/tmp/fstab.$_disk
	if [[ $_disk == $ROOTDISK ]]; then
		if $AUTO && get_disklabel_template; then
			disklabel -T /disklabel.auto $FSTABFLAG $_f -w -A $_disk && return
			echo "Autopartitioning failed"
			exit 1
		fi
		while :; do
			echo "The auto-allocated layout for $_disk is:"
			disklabel -h -A $_disk | egrep "^#  |^  [a-p]:"
			ask "Use (A)uto layout, (E)dit auto layout, or create (C)ustom layout?" a
			case $resp in
			a*|A*)	_op=-w ;;
			e*|E*)	_op=-E ;;
			c*|C*)	break ;;
			*)	continue ;;
			esac
			disklabel $FSTABFLAG $_f $_op -A $_disk
			return
		done
	fi
@


1.56
log
@When doing Whole disk installs on macppc, blank the first 1 meg of the
disk, so we can successfully create our partitions including the
all important boot partition.

Reported by many, but last by /u/TheWalkingGlitch via reddit

OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.55 2014/08/15 09:45:54 rpe Exp $
d176 5
@


1.55
log
@Align install.md files with installer style.

- { foo ; bar ; } -> { foo; bar; }
- if foo ; then -> if foo; then

OK halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.54 2013/11/16 18:37:27 rpe Exp $
d94 1
@


1.54
log
@Remove AUTOROOT variable which is a leftover of r1.183 of install.sub

diff from Philipp e1c1bac6253dc54a1e89ddc046585792 at osteo dot net

ok krw@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.53 2012/10/15 02:27:23 deraadt Exp $
d38 1
a38 1
((NCPU > 1)) && { DEFAULTSETS="bsd bsd.rd bsd.mp" ; SANESETS="bsd bsd.mp" ; }
d118 1
a118 1
				{ echo "\nNo DOS (id 06) partition!\n" ; continue ; }
d120 1
a120 1
				{ echo "\nNo active DOS partition!\n" ; continue ; }
d122 1
a122 1
				{ echo "\nNo OpenBSD (id A6) partition!\n" ; continue ; }
d139 1
a139 1
			{ _q="Use the (O)penBSD partition, " ; _d=OpenBSD ; }
@


1.53
log
@use the boot goop that is in /mnt/usr/mdec, allowing the media to shrink.
tested by krw
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.52 2012/07/13 14:50:34 halex Exp $
d180 1
a180 1
			a*|A*)	_op=-w ; AUTOROOT=y ;;
@


1.52
log
@copy boot loaders using cat and shell redirection rather than cp,
since the latter may insert holes in the target files, which could
be bad for the boot process

ok deraadt@@ guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.51 2012/07/10 14:25:00 halex Exp $
d49 1
a49 1
				cat /usr/mdec/ofwboot > /mnt2/ofwboot
@


1.51
log
@since disklabel -W is no more, zap it from all the install.md's

ok krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.50 2011/07/06 20:02:16 halex Exp $
d48 2
a49 1
				cp /usr/mdec/ofwboot /mnt2
@


1.50
log
@As non-mp install.md's neither set NCPU, nor will have a bsd.mp,
we could as well pull the 'mv bsd.mp bsd' and the associated checks
out of there.

ok deraadt@@ "makes sense" todd@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.49 2011/04/17 20:57:10 krw Exp $
a171 1
	disklabel -W $_disk >/dev/null 2>&1
@


1.49
log
@First crack at enabling the installation of a DUID version of
/etc/fstab, after asking user. Current default is existing behaviour.

Feedback & suggestions deraadt@@, halex@@, jsing@@, todd@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.48 2011/01/03 00:36:49 deraadt Exp $
a41 6

	if [[ -f /mnt/bsd.mp ]] && ((NCPU > 1)); then
		echo "Multiprocessor machine; using bsd.mp instead of bsd."
		mv /mnt/bsd /mnt/bsd.sp 2>/dev/null
		mv /mnt/bsd.mp /mnt/bsd
	fi
@


1.48
log
@reduce the amount of cd'ing in the install script, since it sucks
to change the environment that functions assume they run in.  use
sub-shells or absolute paths when possible.
ok krw
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.47 2010/10/02 00:11:57 krw Exp $
d191 1
a191 1
			disklabel -f $_f $_op -A $_disk
d208 1
a208 1
	disklabel -f $_f -E $_disk
@


1.47
log
@We haven't been updating ofwboot during upgrades since 2006. This
is contrary to our usual practice of updating boot blocks. Let's
try copying in the new one if we can find the 'i' partition.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.46 2010/06/27 00:42:00 krw Exp $
d43 1
a43 2
	cd /mnt
	if [[ -f bsd.mp ]] && ((NCPU > 1)); then
d45 2
a46 2
		mv bsd bsd.sp 2>/dev/null
		mv bsd.mp bsd
@


1.46
log
@Tighten up the congrats text.

ok deraadt@@ drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.45 2009/06/24 11:26:40 krw Exp $
d50 8
a57 6
	[[ $PARTTABLE == MBR ]] || return

	if mount -t msdos /dev/${_disk}i /mnt2 ; then
		if cp /usr/mdec/ofwboot /mnt2; then
			umount /mnt2
			return
a59 4

	echo "Failed to install bootblocks."
	echo "You will not be able to boot OpenBSD from $_disk."
	exit
@


1.45
log
@Bring macppc install into the new age. Fewer questions, less verbiage,
more action and safety. "reads ok" sthen@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.44 2009/06/04 00:44:47 krw Exp $
d215 5
d223 2
a224 4
To boot OpenBSD, the 'ofwboot' program must be present in the first HFS
partition of $ROOTDISK. If it is not currently present you must boot MacOS and
use MacOS tools to copy it from the OpenBSD install media. Then reboot the
machine.
a227 7
	cat <<__EOT

Once the machine has rebooted use Open Firmware to boot into OpenBSD, as
described in the INSTALL.$ARCH document. The command to boot OpenBSD will
be something like 'boot hd:,ofwboot /bsd'.

__EOT
@


1.44
log
@Nuke now superfluous ARCH=ARCH lines in install.md and the sed processing of
those lines in list2sh.awk.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.43 2009/06/02 16:23:45 krw Exp $
d50 1
a50 1
	[[ $disklabeltype == MBR ]] || return
d64 3
a66 13
md_prep_disk() {
	local _disk=$1 _resp
	typeset -l _resp

	cat <<__EOT

$_disk must be partitioned using an HFS or an MBR partition table.

HFS partition tables are created with MacOS. Existing partitions in the HFS
partition table can be modified by OpenBSD for use by OpenBSD.

MBR partition tables are created with OpenBSD. MacOS *cannot* be booted from a
disk partitioned with an MBR partition table.
d68 2
a69 19
__EOT

	while :; do
		ask "Use HFS or MBR partition table?" HFS
		_resp=$resp
		case $_resp in
		m|mbr)	export disklabeltype=MBR
			md_prep_MBR $_disk || continue
			disklabel $_disk 2>/dev/null | grep -q "^  i:" || \
				disklabel -w -d $_disk
			newfs -t msdos ${_disk}i
			break
			;;
		h|hfs)	export disklabeltype=HFS
			md_prep_HFS $_disk
			break
			;;
		esac
	done
d73 1
a73 1
	local _disk=$1
d75 1
a75 1
	if [[ -n $(disklabel -c $_disk 2>/dev/null | grep ' HFS ') ]]; then
d79 2
a80 1
         partitions and HFS partition table.
d84 1
a84 1
		[[ $resp == n ]] && exit
d87 16
a102 4
	ask_yn "Use *all* of $_disk for OpenBSD?"
	if [[ $resp == y ]]; then
		echo -n "Creating Master Boot Record (MBR)..."
		fdisk -e $_disk  >/dev/null 2>&1 <<__EOT
d108 27
a134 8
		echo "done."
	else
		fdisk $_disk ; fdisk -e $_disk
		fdisk $_disk | grep -q "^..: 06 " || \
			{ echo "No DOS (id 06) partition" ; return 1 ; }
		fdisk $_disk | grep -q "^..: A6 " || \
			{ echo "No OpenBSD (id A6) partition" ; return 1 ; }
	fi
d136 2
a137 1
	return 0
d141 17
a157 7
	local _disk=$1

	cat <<__EOT

You must modify an existing partition to be of type "OpenBSD" and have the name
"OpenBSD". If the partition does not exist you must create it with the Apple
MacOS tools before attempting to install OpenBSD.
d159 1
a159 3
__EOT

	pdisk /dev/${_disk}c
d165 15
a179 15
	md_prep_disk $_disk

	case $disklabeltype in
	HFS)	;;
	MBR)	cat <<__EOT

You *MUST* setup the OpenBSD disklabel to include the MSDOS-formatted boot
partition as the 'i' partition. If the 'i' partition is missing or not the
MSDOS-formatted boot partition, then the 'ofwboot' file required to boot
OpenBSD cannot be installed.

__EOT
		;;
	*)	echo "$_disk has no HFS or MBR partition table." ; exit ;;
	esac
d198 13
d215 1
a215 1
	if [[ $disklabeltype == HFS ]]; then
@


1.43
log
@Add '-h' flag, and '*' as a unit specifier for 'p' Editor command.
Both cause partition sizes to be displayed using a human readable
format with the units automatically chosen by looking at the smallest
partition in the disk label. Remove forceable humanization in 'A'
code and use '-h' in install scripts.

Prodded & ok deraadt@@, verbiage tweaks from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.42 2009/05/31 17:49:53 deraadt Exp $
a35 1
ARCH=ARCH
@


1.42
log
@Make bootblock installation as silent as possible by default.  While
there, remove a lot of cruft from the various md_installboot functions
ok halex
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.41 2009/05/30 21:57:17 krw Exp $
d173 1
a173 1
			disklabel -A $_disk | egrep "^#  |^  [a-p]:"
@


1.41
log
@Even HFS installs need to run disklabel(8)! Revert erroroneous
bypassing of disklabel(8) invocation.

Noticed by and fix ok maja@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.40 2009/04/24 01:43:27 krw Exp $
a52 1
	echo -n "Copying 'ofwboot' to the boot partition (${_disk}i)..."
a55 1
			echo "done."
d60 2
a61 1
	echo "FAILED.\nYou will not be able to boot OpenBSD from $_disk."
@


1.40
log
@Remove magic 'bsd.mp -> bsd' linking for the moment as it confuses
subsequent upgrades.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.39 2009/04/24 01:04:33 krw Exp $
d156 2
a157 6
	HFS)	return ;;
	MBR)	;;
	*)	echo "$_disk has no HFS or MBR partition table." ; exit ;;
	esac

	cat <<__EOT
d165 3
@


1.39
log
@Move bsd.mp juggling into relevant MD files. Make bsd.mp a default
selection on multi-processor machines. Make bsd.mp a sanity check
item on multi-processor machines.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.38 2009/04/12 12:56:02 krw Exp $
a48 1
		ln -sf bsd bsd.mp
@


1.38
log
@Tweak pattern used to select partition lines for display so the
'# /dev/r...' line is not selected.

Noticed by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.37 2009/04/12 01:35:01 krw Exp $
d37 3
d43 8
@


1.37
log
@No longer need '-f' or '-p' when displaying layout. A few patterns
missed the '# size offset ...' line at the top of the partition
list.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.36 2009/04/10 23:11:17 krw Exp $
d165 1
a165 1
			disklabel -A $_disk | egrep "^#|^  [a-p]:"
@


1.36
log
@Where appropriate display the auto-allocation layout of the root
disk and ask if the installee wants to use it, edit it, or create
their own custom disklabel. Most one-disk installs will not need
to see fdisk or disklabel.

i386 and macppc by me, adapted for others by deraadt@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.35 2009/01/15 17:53:57 todd Exp $
d165 1
a165 1
			disklabel -f $_f -p g -A $_disk | egrep "^#|^  [a-p]:"
@


1.35
log
@proof that nobody chooses serial consoles on macppc on install and uses the
default serial speed, fix a typo introduced many months ago.
ok krw@@ "Good catch."
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.34 2008/06/26 05:42:03 ray Exp $
d141 1
a141 1
	local _disk=$1 _q
d146 6
a151 2
	HFS)	;;
	MBR)	cat <<__EOT
a158 5
		;;
	*)	echo "Disk label type ('$disklabeltype') is not 'HFS' or 'MBR'."
		exit
		;;
	esac
d161 17
a177 1
	disklabel -c -f /tmp/fstab.$_disk -E $_disk
@


1.34
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.33 2008/03/04 00:36:38 krw Exp $
d191 1
a191 1
			: ${CSPEED:=56700}
@


1.33
log
@Redo serial console configuration logic. Smaller, easier to
understand.

Add serial console handling for alpha, macppc, zaurus.  No functional
change for i386/amd64.

All archs should now have automatic serial console configuration.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.32 2007/08/15 15:33:20 deraadt Exp $
a17 7
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
@


1.32
log
@go slightly back to the older behaviour by writing out a default disk label
only if 'i' is not found; by krw who is not around, looked at by drahn
and otto and miod
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.31 2007/05/24 13:17:26 krw Exp $
d190 15
@


1.31
log
@Close some (probably not all) holes in the creation of the required
'i' partition.

Keep asking for an MBR until it has both a DOS and an OpenBSD
partition.

Forcibly write a default disklabel, which will have the correct 'i'
defined, before letting the user work on the disklabel.

Use newfs(8) to format the 'i' partition instead of plopping a
pre-formatted 1MB FAT in it.

Remove a bunch of excess verbiage, which will reappear in an updated
INSTALL.macppc.

Feedback from otto@@, drahn@@ and deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.30 2007/02/11 18:59:31 krw Exp $
d85 2
a86 1
			disklabel -w -d $_disk
@


1.30
log
@Nuke MDFSTYPE and MDFSOPTS, 'mount -t ...' and giving the user the
option to choose a filesystem type when mounting a disk. Rely on the
filesystem information provided by the disklabel.

When there is only one usable partition on the selected disk, just
mount it without bothering the user with a question.

Ensure that msdos filesystems are mounted with '-s' so that the names
of the install sets will be in lower case and thus visible to the
script.

msdos problems noted by Rodolfo Gouveia, who did a lot of testing and
debugging. 'mount -t ...' silliness pointed out by deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.29 2005/04/02 14:34:46 krw Exp $
d84 3
a86 1
			md_prep_MBR $_disk
d121 6
a126 7

		echo -n "Formatting 1MB MSDOS boot partition..."
		gunzip </usr/mdec/msdos1mb.gz | \
		    dd of=/dev/r${_disk}c bs=512 seek=1 >/dev/null 2>&1
		echo "done."

		return
d129 1
a129 35
	# Manual MBR setup. The user is basically on their own. Give a few
	# hints and let the user rip.
	cat <<__EOT

**** NOTE ****

A valid MBR for an OpenBSD bootable disk must contain at least:

a) One DOS (id '06') partition at least 1MB in size. This is where Open
Firmware will look for the 'ofwboot' program used to boot OpenBSD.
Consult your PowerPC Open Firmware manual -and- the INSTALL.$ARCH file
for directions on setting up this partition correctly.

b) One OpenBSD (id 'A6') partition.

**************

Current partition information is:

$(fdisk $_disk)

__EOT

	fdisk -e $_disk

	cat <<__EOT
Here is the MBR configuration you chose:

$(fdisk $_disk)

Please take note of the offsets and sizes of the DOS partition, the OpenBSD
partition, and any other partitions you want to access from OpenBSD. You will
need this information to fill in the OpenBSD disklabel.

__EOT
@


1.29
log
@Scrounge a few more characters of whitespace, mostly to be consistant.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.28 2005/03/27 15:13:50 krw Exp $
a41 1
MDFSTYPE=msdos
@


1.28
log
@Use new skeleton kbd(8) '-l' to generalize kbd(8) use.  Eliminate
fixed list of available maps and machine dependant md_set_term()
functions.

Any ramdisk with /sbin/kbd present (amd64, cats, i386 at the moment)
will now present list of available keyboard encodings.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.27 2005/03/26 01:40:20 krw Exp $
d68 1
a68 1
	cat << __EOT
d100 1
a100 1
		cat << __EOT
d113 1
a113 1
		fdisk -e $_disk  >/dev/null 2>&1 << __EOT
d122 1
a122 1
		gunzip < /usr/mdec/msdos1mb.gz | \
d131 1
a131 1
	cat << __EOT
d154 1
a154 1
	cat << __EOT
d169 1
a169 1
	cat << __EOT
d187 1
a187 1
	MBR)	cat << __EOT
d207 1
a207 1
		cat << __EOT
d216 1
a216 1
	cat << __EOT
@


1.27
log
@Start some delayed cleanup and shrinkage. Today: ': ;' -> ':;' in
while statements.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.26 2004/07/18 01:14:04 deraadt Exp $
a44 3

md_set_term() {
}
@


1.26
log
@spaces
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.25 2004/05/24 15:47:00 tom Exp $
d83 1
a83 1
	while : ; do
@


1.25
log
@Normalise to "Open Firmware".

ok drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.24 2003/12/04 20:17:02 deraadt Exp $
d131 1
a131 1
 
d179 1
a179 1
	
@


1.24
log
@shorten a teeny bit more
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.23 2003/10/10 02:41:26 krw Exp $
d140 4
a143 4
a) One DOS (id '06') partition at least 1MB in size. This is where OpenFirmware
will look for the 'ofwboot' program used to boot OpenBSD. Consult your PowerPC
OpenFirmware manual -and- the INSTALL.$ARCH file for directions on setting up
this partition correctly.
d221 3
a223 3
Once the machine has rebooted use OpenFirmware to boot into OpenBSD, as
described in the INSTALL.$ARCH document. The command to boot OpenBSD will be
something like 'boot hd:,ofwboot /bsd'.
@


1.23
log
@Basically a rewrite to eliminate confusing logic and excess verbiage.

Testing by nick@@, 'just put it in' drahn@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.22 2003/09/22 01:31:39 krw Exp $
d99 1
a99 1
md_prep_MBR () {
d169 1
a169 1
md_prep_HFS () {
@


1.22
log
@Introduce a function ask_yn() to use when asking 'yes or no'
questions.

ask_yn() always returns a 'y' or 'n' in $resp, vastly simplifying the
logic used to check the user response.

ask_yn() insists on the user responding with a 'y', 'n', 'yes', or
'no'. Case is ignored.

Previously almost any input was accepted as either a yes or a no
depending on the question. ask_yn() reduces the chance of user error,
e.g.  by answering the next question (default route) instead of the
posed one (Use DNS server now?).

All 'yes or no' questions now use ask_yn(). All questions show the
full default answer, i.e. 'yes' or 'no' rather than 'y' or 'n'.

Some minor logic cleanups of the usual sort, but no changes to logic
flow or questions bar minor verbiage adjustment.

Inspired by a Bob Beck install nit.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.21 2003/09/21 02:11:42 krw Exp $
d52 1
a52 6
	case $disklabeltype in
	HFS)	cat << __EOT
The 'ofwboot' program needs to be copied to the first HFS partition of $_disk
to allow booting of OpenBSD.
__EOT
		;;
d54 3
a56 3
	MBR)	echo "Installing boot in the msdos partition ${_disk}i"
		if mount -t msdos /dev/${_disk}i /mnt2 ; then
			cp /usr/mdec/ofwboot /mnt2
d58 2
a59 2
		else
			echo "Failed, you will not be able to boot from $_disk."
d61 4
a64 2
		;;
	esac
d67 3
a69 2
md_init_mbr() {
	local _disk=$1
d73 1
a73 10
You will now be asked if you want to initialize $_disk with a 1MB MSDOS
partition. This is the recommended setup and will allow you to store the boot
and other interesting things here.

If you want to have a different setup, exit 'install' now and do the MBR
initialization by hand using the 'fdisk' program.

If you choose to manually setup the MSDOS partition, consult your PowerPC
OpenFirmware manual -and- the PowerPC OpenBSD Installation Guide for doing
setup this way.
d75 2
a76 3
__EOT
	ask_yn "Do you want to initialize the MBR and the MSDOS partition?" yes
	[[ $resp == n ]] && exit
d78 2
a79 6
	cat << __EOT
An MBR record with an OpenBSD usable partition table will now be copied to your
disk. Unless you have special requirements, you will not need to edit this MBR.
After the MBR is copied an empty 1MB MSDOS partition will be created on the
disk. You *MUST* setup the OpenBSD disklabel to have a partition include this
MSDOS partition. You will have an opportunity to do this shortly.
a80 2
You will probably see a few '...: no disk label' messages. It's completely
normal. The disk has no label yet. This may take a minute or two...
a81 1
	sleep 2
d83 14
a96 7
	echo -n "Creating Master Boot Record (MBR)..."
	fdisk -i -f /usr/mdec/mbr $_disk
	echo "done."

	echo -n "Copying 1MB MSDOS partition to disk..."
	gunzip < /usr/mdec/msdos1mb.gz | dd of=/dev/r${_disk}c bs=512 seek=1 >/dev/null 2>&1
	echo "done."
d99 2
a100 2
md_checkfordisklabel() {
	local rval _disk=$1
d102 2
a103 1
	cat << __EOT
d105 2
a106 1
Apple systems have two methods to label/partition a boot disk.
a107 12
Either the disk can be partitioned with Apple HFS partition tools to contain an
"Unused" partition, or without any MacOS tools, the disk can be labeled using
an MBR partition table.

If the HFS (DPME) partition table is used, after the disk is partitioned with
the Apple software, the "Unused" section must be changed to type "OpenBSD" name
"OpenBSD" using the pdisk tool contained on this ramdisk. The disklabel can
then be edited normally.

WARNING: the MBR partitioning code will HAPPILY overwrite/destroy any HFS
         partitions on the disk, including the partition table. Choose the
         MBR option carefully, knowing this fact.
d109 3
d113 15
a127 13
	ask "Do you want to use (H)FS labeling or (M)BR labeling" H
	case $resp in
	m*|M*)	export disklabeltype=MBR
		md_checkforMBRdisklabel $_disk
		rval=$?
		;;
	*)	export disklabeltype=HFS
		pdisk /dev/${_disk}c
		rval=$?
		;;
	esac
	return $rval
}
d129 6
a134 14
md_checkforMBRdisklabel() {
	local _disk=$1 rval=0

	ask_yn "Are you *sure* you want to put a MBR disklabel on the disk?"
	[[ $resp == n ]] && exit

	ask_yn "Have you initialized an MSDOS partition using OpenFirmware?"
	case $resp in
	n)	md_init_mbr $_disk;;
	y)	cat << __EOT
You may keep your current setup if you want to be able to use any already
loaded OS. However you will be asked to prepare an empty partition for OpenBSD
later. There must also be at least ~0.5MB free space in the boot partition to
hold the OpenBSD bootloader.
d136 1
a136 2
Also note that the boot partition must be included as partition 'i' in the
OpenBSD disklabel.
d138 1
a138 7
__EOT
		ask_yn "Keep the current MSDOS partition setup?" yes
		[[ $resp == n ]] && md_init_mbr $_disk
		;;
	esac

	disklabel -r $_disk >/dev/null 2>/tmp/checkfordisklabel
d140 4
a143 5
	if grep "no disk label" /tmp/checkfordisklabel; then
		rval=1
	elif grep "disk label corrupted" /tmp/checkfordisklabel; then
		rval=2
	fi >/dev/null 2>&1
d145 1
a145 3
	rm -f /tmp/checkfordisklabel
	return $rval
}
d147 1
a147 2
md_prep_fdisk() {
	local _disk=$1
d149 1
a149 1
	cat << __EOT
d151 1
a151 4
This disk has not previously been used with OpenBSD. You may share this disk
with other operating systems. However, to be able to boot the system you will
need a small DOS partition in the beginning of the disk to hold the kernel
boot. OpenFirmware understands how to read an MSDOS style format from the disk.
a152 5
This DOS style partitioning has been taken care of if you chose to do that
initialization earlier in the install.

WARNING: Wrong information in the BIOS partition table might render the disk
         unusable.
d155 1
a155 1
	ask "Press [Enter] to continue"
d157 2
a158 3
	echo "\nCurrent partition information is:"
	fdisk $_disk
	ask "Press [Enter] to continue"
d160 1
a160 2
	while : ; do
		cat << __EOT
d162 3
a164 9
An OpenBSD partition should have a type (id) of 166 (A6), and should be the
only partition marked as active. Also make sure that the size of the partition
to be used by OpenBSD is correct, otherwise OpenBSD disklabel installation will
fail. Furthermore, the partitions must NOT overlap each others.

The fdisk utility will be started update mode (interactive.) You will be able
to add / modify this information as needed. If you make a mistake, simply exit
fdisk without storing the new information, and you will be allowed to start
over.
d167 1
a167 1
		ask "Press [Enter] to continue"
d169 2
a170 13
		fdisk -e $_disk
		cat << __EOT

The new partition information is:

$(fdisk $_disk)

(You will be permitted to edit this information again.)
-------------------------------------------------------
__EOT
		ask_yn "Is the above information correct?"
		[[ $resp == y ]] && break
	done
d174 3
a176 4
Please take note of the offset and size of the OpenBSD partition *AND* the
MSDOS partitions you may want to access from OpenBSD. At least the MSDOS
partition used for booting must be accessible by OpenBSD as partition 'i'. You
may need this information to fill in the OpenBSD disklabel later.
d179 2
a180 1
	ask "Press [Enter] to continue"
d186 12
a197 7
	md_checkfordisklabel $_disk
	case $? in
	0)	_q="Do you wish to edit the existing disklabel on $_disk?"
		;;
	1)	md_prep_fdisk $_disk
		echo "WARNING: $_disk has no label"
		_q="Do you want to create one with the disklabel editor?"
d199 2
a200 2
	2)	echo "WARNING: The disklabel on $_disk is invalid."
		_q="Do you want to try and repair the damage using the disklabel editor?"
d204 3
a206 4
	if [[ -n $_q ]]; then
		ask_yn "$_q" yes
		[[ $resp == n ]] && return
	fi
d208 3
a210 2
	# display example
	cat << __EOT
d212 4
a215 23
Disk partition sizes and offsets are in sector (most likely 512 bytes) units.
You may set these size/offset pairs on cylinder boundaries
     (the number of sector per cylinder is given in )
     (the 'sectors/cylinder' entry, which is not shown here)
Also, you *must* make sure that the 'i' partition points at the MSDOS partition
that will be used for booting. The 'c' partition shall start at offset 0 and
include the entire disk. This is most likely correct when you see the default
label in the editor.

Do not change any parameters except the partition layout and the label name.

   [Here is an example of what the partition information may look like.]
10 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  a:   120832    10240    4.2BSD     1024  8192    16   # (Cyl.   11*- 142*)
  b:   131072   131072      swap                        # (Cyl.  142*- 284*)
  c:  6265200        0    unused     1024  8192         # (Cyl.    0 - 6809)
  e:   781250   262144    4.2BSD     1024  8192    16   # (Cyl.  284*- 1134*)
  f:  1205000  1043394    4.2BSD     1024  8192    16   # (Cyl. 1134*- 2443*)
  g:  2008403  2248394    4.2BSD     1024  8192    16   # (Cyl. 2443*- 4626*)
  h:  2008403  4256797    4.2BSD     1024  8192    16   # (Cyl. 4626*- 6809*)
  i:    10208       32     MSDOS                        # (Cyl.    0*- 11*)
[End of example]
a216 12
	ask "Press [Enter] to continue"

	if [[ $disklabeltype == HFS ]]; then
		disklabel -c -f /tmp/fstab.$_disk -E $_disk
	elif [[ $disklabeltype == MBR ]]; then
		disklabel -W $_disk
		disklabel $_disk >/tmp/label.$$
		disklabel -r -R $_disk /tmp/label.$$
		rm -f /tmp/label.$$
		disklabel -f /tmp/fstab.$_disk -E $_disk
	else
		echo "unknown disk label type"
a217 1
}
a218 1
md_congrats() {
d221 4
a224 2
Once the machine has rebooted use Open Firmware to boot into OpenBSD, as
described in the install document.
@


1.21
log
@Fix extraneous display of grep output when searching disklabel output for
error information. Previously things like:

disklabel: no disk label
WARNING: Disk wd0 has no disk label. You will be creating a new one.

would be printed. Now the 'disklabel: no disk label' message is correctly
sent to /dev/null.

Take the opportunity to clean up a bit of code and formatting, making all
the md_checkfordisklabel() functions as identical as possible.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.20 2003/09/19 02:40:11 krw Exp $
d87 2
a88 5
	ask "Do you want to initialize the MBR and the MSDOS partition?" y
	case $resp in
	n*|N*)	exit 0	;;
	*)		;;
	esac
d149 2
a150 5
	ask "Are you *sure* you want to put a MBR disklabel on the disk?" n
	case $resp in
	n*|N*)	echo "aborting install"
		exit 0;;
	esac
d152 1
a152 1
	ask "Have you initialized an MSDOS partition using OpenFirmware?" n
d154 2
a155 2
	n*|N*)	md_init_mbr $_disk;;
	*)	cat << __EOT
d165 2
a166 4
		ask "Do you want to keep the current MSDOS partition setup?" y
		case $resp in
		n*|N*)	md_init_mbr $_disk;;
		esac
d231 2
a232 6
		ask "Is the above information correct?" n

		case $resp in
		n*|N*)	;;
		*)	break ;;
		esac
d247 1
a247 1
	local _disk=$1
d251 1
a251 1
	0)	ask "Do you wish to edit the existing disklabel on $_disk?" y
d255 1
a255 1
		ask "Do you want to create one with the disklabel editor?" y
d258 1
a258 1
		ask "Do you want to try and repair the damage using the disklabel editor?" y
d262 4
a265 4
	case $resp in
	y*|Y*)	;;
	*)	return ;;
	esac
@


1.20
log
@Sync with 'modernization' changes to macppc. Also fix a couple of whitespace
typos in macppc.

Cosmetic changes only, no semantic change.

macppc and mvmeppc install.md now identical (again?).
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.19 2003/03/02 16:09:55 krw Exp $
d150 1
a150 1
	local _disk=$1
d178 2
a179 1
	disklabel -r $_disk > /dev/null 2> /tmp/checkfordisklabel
d184 1
a184 3
	else
		rval=0
	fi
@


1.19
log
@Fix msdos partition handling during install - sometimes those 'i's
aren't stray attempts at vi insertions after all.

Problem spotted by drahn@@.

ok drahn@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.18 2003/02/16 23:16:44 krw Exp $
d131 1
a131 1
	 partitions on the disk, including the partition table. Choose the
d175 1
a175 1
	;;
a272 1

@


1.18
log
@Bring macppc install.md into the modern world.

deraadt@@ drahn@@ ok, miod@@ ok a while ago.

A few spelling tweeks, '{}' elimination, syntax error corrections
after ok.

Tested with HFS install and HFS upgrade. More testing, especially of
MBR installs, would be good.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.17 2002/12/04 13:11:22 miod Exp $
d59 2
a60 2
	MBR)	echo "Installing boot in the msdos partition $_disk"
		if mount -t msdos /dev/$_disk /mnt2 ; then
d64 1
a64 1
			echo "Failed, you will not be able to boot from ${_disk}."
@


1.17
log
@Typos; Tor Hougton
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.16 2002/11/07 01:28:52 krw Exp $
d50 11
a60 8
	if [[ $disklabeltype = "HFS" ]]
	then
		echo "the 'ofwboot' program needs to be copied to the first HFS partition"
		echo "of the disk to allow booting of OpenBSD"
	elif [[ $disklabeltype = "MBR" ]]
	then
		echo "Installing boot in the msdos partition /dev/${1}i"
		if mount -t msdos /dev/${1}i /mnt2 ; then
d64 1
a64 1
			echo "Failed, you will not be able to boot from /dev/${1}."
d66 2
a67 1
	fi
d71 20
a90 35
	# $1 is the disk to init
	echo
	echo "You will now be asked if you want to initialize the disk with a 1MB"
	echo "MSDOS partition. This is the recommended setup and will allow you to"
	echo "store the boot and other interesting things here."
	echo
	echo "If you want to have a different setup, exit 'install' now and do"
	echo "the MBR initialization by hand using the 'fdisk' program."
	echo
	echo "If you choose to manually setup the MSDOS partition, "
	echo "consult your PowerPC OpenFirmware manual -and- the"
	echo "PowerPC OpenBSD Installation Guide for doing setup this way."
	echo
	ask "Do you want to init the MBR and the MSDOS partition?" y
	case "$resp" in
	n*|N*)	exit 0;;
	*)	echo
		echo "An MBR record with an OpenBSD usable partition table will now be copied"
		echo "to your disk. Unless you have special requirements you will not need"
		echo "to edit this MBR. After the MBR is copied an empty 1MB MSDOS partition"
		echo "will be created on the disk. You *MUST* setup the OpenBSD disklabel"
		echo "to have a partition include this MSDOS partition."
		echo "You will have an opportunity to do this shortly."
		echo
		echo "You will probably see a few '...: no disk label' messages"
		echo "It's completely normal. The disk has no label yet."
		echo "This will take a minute or two..."
		sleep 2
		echo -n "Creating Master Boot Record (MBR)..."
		fdisk -i -f /usr/mdec/mbr $1
		echo "..done."
		echo -n "Copying 1MB MSDOS partition to disk..."
		gunzip < /usr/mdec/msdos1mb.gz | dd of=/dev/r$1c bs=512 seek=1 >/dev/null 2>&1
		echo "..done."
	;;
a91 1
}
d93 19
a111 2
md_init_hfs() {
	pdisk /dev/${1}c
d115 1
a115 2
	# $1 is the disk to check
	local rval
d121 4
a124 3
Either the disk can be partitioned with Apple HFS partition tools to contain
an "Unused" partition, or without any MacOS tools, the disk can be labled
using an MBR partition table.
d129 1
d131 2
a132 2
partitions on the disk, including the partition table.
Choose the MBR option carefully, knowing this fact.
d135 2
a136 2
	ask "Do you want to choose (H)FS labeling or (M)BR labeling" H
	case "$resp" in
d138 1
a138 1
		md_checkforMBRdisklabel $1
d142 1
a142 1
		md_init_hfs $1
d148 1
d150 1
d152 2
a153 3
	echo "You have chosen to put a MBR disklabel on the disk."
	ask "Is this correct?" n
	case "$resp" in
d159 2
a160 2
	case "$resp" in
	n*|N*)	md_init_mbr $1;;
d172 2
a173 2
		case "$resp" in
		n*|N*)	md_init_mbr $1;;
d178 1
a178 1
	disklabel -r $1 > /dev/null 2> /tmp/checkfordisklabel
d191 2
a192 4
md_prep_fdisk()
{
	local _disk
	local _done
a193 1
	_disk=$1
d202 1
a202 1
initialization earlier in the install"
d205 1
a205 1
unusable.
d210 2
a211 3
	echo
	echo "Current partition information is:"
	fdisk ${_disk}
d214 1
a214 3
	_done=0
	while [ $_done = 0 ]; do
		echo
d217 1
a217 1
An OpenBSD partition should have type (i.d.) of 166 (A6), and should be the
d219 7
a225 2
to be used by OpenBSD is correct, otherwise OpenBSD disklabel installation
will fail. Furthermore, the partitions must NOT overlap each others.
a226 4
The fdisk utility will be started update mode (interactive.)
You will be able to add / modify this information as needed.
If you make a mistake, simply exit fdisk without storing the new
information, and you will be allowed to start over.
a227 1
		echo
d230 2
a231 1
		fdisk -e ${_disk}
d233 7
a239 7
		echo
		echo "The new partition information is:"
		fdisk ${_disk}

		echo
		echo "(You will be permitted to edit this information again.)"
		echo "-------------------------------------------------------"
d242 1
a242 1
		case "$resp" in
d244 1
a244 1
		*)	_done=1 ;;
d248 8
a255 6
	echo
	echo "Please take note of the offset and size of the OpenBSD partition"
	echo "*AND* the MSDOS partitions you may want to access from OpenBSD."
	echo "At least the MSDOS partition used for booting must be accessible"
	echo "by OpenBSD as partition 'i'. You may need this information to "
	echo "fill in the OpenBSD disk label later."
d259 2
a260 3
md_prep_disklabel()
{
	local _disk
a261 1
	_disk=$1
d264 1
a264 1
	0)	ask "Do you wish to edit the disklabel on $_disk?" y
d266 2
a267 2
	1)	md_prep_fdisk ${_disk}
		echo "WARNING: Disk $_disk has no label"
d270 1
a270 1
	2)	echo "WARNING: Label on disk $_disk is corrupted"
d276 1
a276 1
	case "$resp" in
d288 4
a291 4
Also, you *must* make sure that the 'i' partition points at the MSDOS
partition that will be used for booting. The 'c' partition shall start
at offset 0 and include the entire disk. This is most likely correct when
you see the default label in the editor.
d310 6
a315 8
	if [[ $disklabeltype = "HFS" ]]
	then
		disklabel -c -f /tmp/fstab.${_disk} -E ${_disk}
	elif [[ $disklabeltype = "MBR" ]]
	then
		disklabel -W ${_disk}
		disklabel ${_disk} >/tmp/label.$$
		disklabel -r -R ${_disk} /tmp/label.$$
d317 1
a317 1
		disklabel -f /tmp/fstab.${_disk} -E ${_disk}
d326 2
a327 2
Once the machine has rebooted use Open Firmware to boot into OpenBSD,
as described in the install document.
@


1.16
log
@Treat 'bsd' like just another filename in THESETS, no more 'kernel'
logic.  As result, MDSETS gone from everything but mac68k.

MDSETS now treated as a list of complete file names to add to THESETS,
allowing more MD flexibility, i.e. may or may not be .tgz files.

All traces of tar.gz removed. Not used for sets since 2.7 or so. As a
result of code simplification from not having to consider tar.gz, the
functions get_sets(), make_lastset(), and set_not_done() are
eliminated, along with the global SETS.

Build THESETS and DEFAULTSETS to contain full file names.

Always install sets in the order they appear in THESETS, keeping
siteXX last but without needing special logic. More predictable for
user if a lot of set additions and removals done before being
satisfied, as the sets are now installed in the same order they appear
in the selection list.

Remove ability to look for non-set .tgz/.tar.gz files. The job of the
install scripts is to install the standard sets in a simple and
rational way. Not to install general tar balls. The user can do that
post-install or simply '!' out to do it during install. On their head
be it.

If no sets are found in a specified source, list the filenames in
THESETS to show what is being looked for.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.15 2002/05/20 16:53:57 krw Exp $
d70 1
a70 1
	echo "MSDOS partition. This is the recomended setup and will allow you to"
@


1.15
log
@Eliminate md_questions(). It was used only to control the setting of
machdep.allowaperture. Remove the setting of machdep.allowaperture
from md_installboot().

Add MDXAPERTURE variable to relevant architectures.

Add a new function set_machdep_allowaperture(). It is called *after*
install_sets() (which changes when the X Window question is asked), and
if MDXAPERTURE is present modifies sysctl.conf.

Shrinks overall size for i386, macppc, sparc64 (which used md_questions
for machdep.allowaperture) but increases size a bit for other
architectures since set_machep_allowaperture is in install.sub.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.14 2002/05/19 16:16:05 krw Exp $
a41 2
# Machine-dependent install sets
MDSETS=kernel
@


1.14
log
@Do not use `' pairs inside here documents. Errors will occur
if the ` is not individually escaped and the here document as a whole
is not escaped. (i.e. cat << \__EOT).
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.13 2002/05/18 17:56:03 krw Exp $
d45 1
a50 11
md_questions() {
	echo
	ask "Do you expect to run the X Window System?" y
	case "$resp" in
	y*|Y*)
		xfree86=y
		;;
	esac
	echo
}

a64 8
	fi
	if [ "$xfree86" = y ]; then
		echo
		echo "Enabling machdep.allowaperture. Read xf86(4) for more information."
		echo '1,$s/^#machdep\.allowaperture=2/machdep\.allowaperture=2	/
w
q' | ed /mnt/etc/sysctl.conf 2> /dev/null
		echo
@


1.13
log
@Eliminate md_get_diskdevs() and md_get_cddevs() by

1) Saving one boot's worth of dmesg in /tmp/dmesg.boot
2) Using sed to scan for devices and pull out names in
   new get_diskdevs() and get_cddevs() in install.sub
3) Saving any md disk/cd sed patterns in MDDISKDEVS and
   MDCDDEVS variables.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.12 2002/05/14 01:49:25 krw Exp $
d305 1
a305 1
     (the `sectors/cylinder' entry, which is not shown here)
@


1.12
log
@Eliminate md_native_fstype() and md_native_fsopts(). Both functions
simply echo'd a single word if present at all.

Replace with variables MDFSTYPE and MDFSOPTS if required. Rework logic
in install.sub's mount_a_disk() to always include 'ro' as an option to
the mount command. This allows even those arch's with MDFSTYPE to
usually get by without MDFSOPTS.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.11 2002/05/09 21:54:46 krw Exp $
a47 10
}

md_get_diskdevs() {
	# return available disk devices
	bsort `dmesg | egrep -a "^[sw]d[0-9]+ " | cutword 1`
}

md_get_cddevs() {
	# return available CDROM devices
	bsort `dmesg | egrep -a "^cd[0-9]+ " | cutword 1`
@


1.11
log
@Elminate md_welcome_banner() and md_not_going_to_install() as the
output of both was essentially identical on all architectures. Replace
with welcome_banner() and not_going_to_install() in install.sub.

Abstract common verbiage from md_congrats() into congrats() which
calls md_congrats() for any architecture specific additional verbiage.

Reword things so ${MODE} can be plausibly used in more places.

Remove extraneous #!/bin/sh in hp300 install.md.

ok deraadt@@ espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.10 2002/05/08 23:14:53 krw Exp $
d44 1
a93 8
}

md_native_fstype() {
	echo "msdos"
}

md_native_fsopts() {
	echo "ro"
@


1.10
log
@(Oops. Missed this one first time around)

Abstract out common md_set_term() code into set_term() in install.sub,
calling md_set_term() from set_term() to do machine dependent stuff.
Currently only i386 does anything - keyboard mappings.

Add MDTERM variable to allow install.md to set proper default terminal
type. Default to vt220.

Eliminate md_get_partition_range() as useless since every architecture
returned '[a-p]'.

Make default term for all mvme* architectures vt100 as requested by miod@@.

ok deraadt@@ millert@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.9 2002/04/28 14:44:01 krw Exp $
a359 47
md_welcome_banner() {
{
	if [ "$MODE" = install ]; then
		cat << __EOT
Welcome to the OpenBSD/macppc ${VERSION_MAJOR}.${VERSION_MINOR} installation program.

This program is designed to help you put OpenBSD on your disk in a simple and
rational way.
__EOT

	else
		cat << __EOT
Welcome to the OpenBSD/macppc ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program.

This program is designed to help you upgrade your OpenBSD system in a simple
and rational way.  As a reminder, installing the 'etc' binary set is NOT
recommended.  Once the rest of your system has been upgraded, you should
manually merge any changes to files in the 'etc' set into those files which
already exist on your system.
__EOT
	fi

cat << __EOT

As with anything which modifies your disk's contents, this program can cause
SIGNIFICANT data loss, and you are advised to make sure your data is backed
up before beginning the installation process.

Default answers are displayed in brackets after the questions.  You can hit
Control-C at any time to quit, but if you do so at a prompt, you may have
to hit return.  Also, quitting in the middle of installation may leave your
system in an inconsistent state.  If you hit Control-C and restart the
install, the install program will remember many of your old answers.

__EOT
} | more
}

md_not_going_to_install() {
	cat << __EOT

OK, then.  Enter 'reboot' at the prompt to reset the machine.  Once the machine
has rebooted, use Open Firmware to load the new boot code.

__EOT
}

a360 6
	local what;
	if [ "$MODE" = install ]; then
		what=installed
	else
		what=upgraded
	fi
d363 2
a364 4
CONGRATULATIONS!  You have successfully $what OpenBSD!  To boot the
installed system, enter reboot at the command prompt.  Once the machine
has rebooted, use Open Firmware to boot into OpenBSD.

@


1.9
log
@Change getresp() into ask().

ask() takes 2 parameters. The first one is the question to
ask the user, and the 2nd is the default answer.

Shrinks and makes the code clearer.

From espie@@ with some tweaking, ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.8 2002/04/25 21:28:13 miod Exp $
a46 4
	test -n "$TERM" && return
	ask "Specify terminal type:" vt220
	TERM=$resp
	export TERM
a56 5
}

md_get_partition_range() {
	# return range of valid partition letters
	echo [a-p]
@


1.8
log
@- fix a few texts
- remove dead hp300 stuff
ok millert@@, espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.7 2002/03/31 17:30:30 deraadt Exp $
d48 1
a48 2
	echo -n "Specify terminal type [vt220]: "
	getresp vt220
d70 1
a70 2
	echo -n "Do you expect to run the X Window System? [y] "
	getresp y
d126 1
a126 2
	echo -n "Do you want to init the MBR and the MSDOS partition? [y] "
	getresp "y"
d175 1
a175 2
	echo -n "Do you want to choose (H)FS labeling or (M)BR labeling [H] "
	getresp "h"
d191 1
a191 2
	echo -n "Is this correct? [n] "
	getresp "n"
d197 1
a197 2
	echo -n "Have you initialized an MSDOS partition using OpenFirmware? [n] "
	getresp "n"
d210 1
a210 2
		echo -n "Do you want to keep the current MSDOS partition setup? [y]"
		getresp "y"
d250 1
a250 2
	echo -n "Press [Enter] to continue "
	getresp ""
d255 1
a255 2
	echo -n "Press [Enter] to continue "
	getresp ""
d273 1
a273 2
		echo -n "Press [Enter] to continue "
		getresp ""
d284 1
a284 2
		echo -n "Is the above information correct? [n] "
		getresp "n"
d298 1
a298 2
	echo -n "Press [Enter] to continue "
	getresp ""
d308 1
a308 1
	0)	echo -n "Do you wish to edit the disklabel on $_disk? [y] "
d312 1
a312 1
		echo -n "Do you want to create one with the disklabel editor? [y] "
d315 1
a315 1
		echo -n "Do you want to try and repair the damage using the disklabel editor? [y] "
a319 1
	getresp "y"
d352 2
a353 2
	echo -n "Press [Enter] to continue "
	getresp ""
@


1.7
log
@bit of shrinkage, krw ok
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.6 2002/02/23 18:29:51 deraadt Exp $
d157 1
d162 15
a176 13
	echo
	echo "Apple systems have two methods to label/partition a boot disk."
	echo "Either the disk can be partitioned with Apple HFS partition"
	echo "tools to contain an \"Unused\" partition, or without any"
	echo "MacOS tools, the disk can be labled using an MBR partition table"
	echo "If the HFS (DPME) partition table is used, after the disk is"
	echo "partitioned with the Apple software, the \"Unused\" section"
	echo "must be changed to type \"OpenBSD\" name \"OpenBSD\" using the"
	echo "pdisk tool contained on this ramdisk. The disklabel can"
	echo "then be edited normally"
	echo "WARNING: the MBR partitioning code will HAPPILY overwrite/destroy"
	echo "any HFS partitions on the disk, including the partition table."
	echo "Choose the MBR option carefully, knowing this fact."
d206 10
a215 9
	*)	echo
		echo "You may keep your current setup if you want to be able to use any"
		echo "already loaded OS. However you will be asked to prepare an empty"
		echo "partition for OpenBSD later. There must also be at least ~0.5MB free space"
		echo "in the boot partition to hold the OpenBSD bootloader."
		echo
		echo "Also note that the boot partition must be included as partition"
		echo "'i' in the OpenBSD disklabel."
		echo
d243 13
a255 12
	echo
	echo "This disk has not previously been used with OpenBSD. You may share"
	echo "this disk with other operating systems. However, to be able to boot"
	echo "the system you will need a small DOS partition in the beginning of"
	echo "the disk to hold the kernel boot. OpenFirmware understands"
	echo "how to read an MSDOS style format from the disk."
	echo
	echo "This DOS style partitioning has been taken care of if"
	echo "you chose to do that initialization earlier in the install."
	echo
	echo "WARNING: Wrong information in the BIOS partition table might"
	echo "render the disk unusable."
d269 1
a269 1
		cat << \__md_prep_fdisk_1
d280 1
a280 1
__md_prep_fdisk_1
d339 1
a339 1
	cat << \__md_prep_disklabel_1
d364 1
a364 1
__md_prep_disklabel_1
@


1.6
log
@be aware that macppc has aperture too
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.5 2002/02/14 03:26:05 deraadt Exp $
a37 1

d43 1
a43 1
MDSETS="kernel"
d65 2
a66 2
    # return range of valid partition letters
    echo [a-p]
d74 3
a76 5
		y*|Y*)
			xfree86=y
			;;
		*)
			;;
d82 1
a82 1
	if [[ $disklabeltype = "HFS" ]] 
d86 1
a86 1
	elif [[ $disklabeltype = "MBR" ]] 
d107 1
a107 1
    echo "msdos"
d111 1
a111 1
    echo "ro"
d131 2
a132 4
	n*|N*)
		exit 0;;
	*)
		echo
d145 1
a145 1
		fdisk -i -f /usr/mdec/mbr $1 
d178 1
a178 2
	m*|M*)
		export disklabeltype=MBR
d182 1
a182 2
	*)
		export disklabeltype=HFS
d195 1
a195 2
	n*|N*)
		echo "aborting install"
a196 2
	*)
		;;
d202 2
a203 4
	n*|N*)
		md_init_mbr $1;;
	*)
		echo
d215 1
a215 4
		n*|N*)
			md_init_mbr $1;;
		*)
		;;
d293 2
a294 2
		n*|N*) ;;
		*) _done=1 ;;
d315 1
a315 2
	0)
		echo -n "Do you wish to edit the disklabel on $_disk? [y] "
d317 1
a317 2
	1)
		md_prep_fdisk ${_disk}
d321 1
a321 2
	2)
		echo "WARNING: Label on disk $_disk is corrupted"
d329 1
a329 1
	y*|Y*) ;;
d337 1
a337 1
You may set these size/offset pairs on cylinder boundaries 
d362 1
a362 1
	if [[ $disklabeltype = "HFS" ]] 
d365 1
a365 1
	elif [[ $disklabeltype = "MBR" ]] 
@


1.5
log
@typo
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.4 2001/12/23 01:51:52 krw Exp $
d71 11
a81 1
	:
d98 8
@


1.4
log
@Remove extra blank line displayed before the paragraph 'As with
anything ...' during install and/or upgrade on some archs.

On sparc, sparc64, sun3 and vax fix a typo ('echo Welcome' ->
'Welcome') in here-document displayed in md_welcome_banner().
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.3 2001/10/08 17:40:40 drahn Exp $
d4 1
a4 1
# Copyright rc) 1996 The NetBSD Foundation, Inc.
@


1.3
log
@powerpc -> macppc changes (missed previously)
change ARCH=ARCH sed to use `arch -ks` so it has the proper macppc
directory when referring to the ftp or CD directories.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.2 2001/09/04 22:25:02 deraadt Exp $
a395 1

@


1.2
log
@MB == megabytes, Mb == megabits
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.1 2001/09/01 16:47:03 drahn Exp $
d381 1
a381 1
Welcome to the OpenBSD/powerpc ${VERSION_MAJOR}.${VERSION_MINOR} installation program.
d389 1
a389 1
Welcome to the OpenBSD/powerpc ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program.
@


1.1
log
@Move the powerpc ramdisk building support from powerpc to macppc.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.25 2001/06/23 19:44:54 deraadt Exp $
d102 1
a102 1
	echo "You will now be asked if you want to initialize the disk with a 1Mb"
d122 1
a122 1
		echo "to edit this MBR. After the MBR is copied an empty 1Mb MSDOS partition"
d200 1
a200 1
		echo "partition for OpenBSD later. There must also be at least ~0.5Mb free space"
@

