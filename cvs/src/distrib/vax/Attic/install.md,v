head	1.48;
access;
symbols
	OPENBSD_5_9:1.47.0.2
	OPENBSD_5_9_BASE:1.47
	OPENBSD_5_8:1.45.0.4
	OPENBSD_5_8_BASE:1.45
	OPENBSD_5_7:1.42.0.2
	OPENBSD_5_7_BASE:1.42
	OPENBSD_5_6:1.42.0.4
	OPENBSD_5_6_BASE:1.42
	OPENBSD_5_5:1.40.0.2
	OPENBSD_5_5_BASE:1.40
	OPENBSD_5_4:1.39.0.6
	OPENBSD_5_4_BASE:1.39
	OPENBSD_5_3:1.39.0.4
	OPENBSD_5_3_BASE:1.39
	OPENBSD_5_2:1.39.0.2
	OPENBSD_5_2_BASE:1.39
	OPENBSD_5_1_BASE:1.37
	OPENBSD_5_1:1.37.0.4
	OPENBSD_5_0:1.37.0.2
	OPENBSD_5_0_BASE:1.37
	OPENBSD_4_9:1.35.0.8
	OPENBSD_4_9_BASE:1.35
	OPENBSD_4_8:1.35.0.6
	OPENBSD_4_8_BASE:1.35
	OPENBSD_4_7:1.35.0.2
	OPENBSD_4_7_BASE:1.35
	OPENBSD_4_6:1.35.0.4
	OPENBSD_4_6_BASE:1.35
	OPENBSD_4_5:1.28.0.4
	OPENBSD_4_5_BASE:1.28
	OPENBSD_4_4:1.28.0.2
	OPENBSD_4_4_BASE:1.28
	OPENBSD_4_3:1.26.0.2
	OPENBSD_4_3_BASE:1.26
	OPENBSD_4_2:1.25.0.2
	OPENBSD_4_2_BASE:1.25
	OPENBSD_4_1:1.24.0.8
	OPENBSD_4_1_BASE:1.24
	OPENBSD_4_0:1.24.0.6
	OPENBSD_4_0_BASE:1.24
	OPENBSD_3_9:1.24.0.4
	OPENBSD_3_9_BASE:1.24
	OPENBSD_3_8:1.24.0.2
	OPENBSD_3_8_BASE:1.24
	OPENBSD_3_7:1.22.0.6
	OPENBSD_3_7_BASE:1.22
	OPENBSD_3_6:1.22.0.4
	OPENBSD_3_6_BASE:1.22
	OPENBSD_3_5:1.22.0.2
	OPENBSD_3_5_BASE:1.22
	OPENBSD_3_4:1.20.0.4
	OPENBSD_3_4_BASE:1.20
	OPENBSD_3_3:1.20.0.2
	OPENBSD_3_3_BASE:1.20
	OPENBSD_3_2:1.19.0.2
	OPENBSD_3_2_BASE:1.19
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@# @;


1.48
date	2016.03.09.16.28.45;	author deraadt;	state dead;
branches;
next	1.47;
commitid	OSDG2O3Cgeifnf1W;

1.47
date	2016.02.08.17.28.09;	author krw;	state Exp;
branches;
next	1.46;
commitid	4nj4L34RoKX0PFN0;

1.46
date	2015.10.15.19.28.31;	author miod;	state Exp;
branches;
next	1.45;
commitid	JAihZ7SpbEYKsmM1;

1.45
date	2015.06.02.19.54.07;	author rpe;	state Exp;
branches;
next	1.44;
commitid	zUqrjWrWSBxkCmbI;

1.44
date	2015.05.31.19.40.11;	author rpe;	state Exp;
branches;
next	1.43;
commitid	p6r5f9n0C0WoWNND;

1.43
date	2015.05.04.19.55.27;	author rpe;	state Exp;
branches;
next	1.42;
commitid	NyWrBKI5Tnb4FUEi;

1.42
date	2014.03.22.02.24.43;	author krw;	state Exp;
branches;
next	1.41;

1.41
date	2014.03.22.01.13.02;	author krw;	state Exp;
branches;
next	1.40;

1.40
date	2013.11.16.18.37.27;	author rpe;	state Exp;
branches;
next	1.39;

1.39
date	2012.07.13.14.50.34;	author halex;	state Exp;
branches;
next	1.38;

1.38
date	2012.07.10.14.25.00;	author halex;	state Exp;
branches;
next	1.37;

1.37
date	2011.07.06.18.32.58;	author miod;	state Exp;
branches;
next	1.36;

1.36
date	2011.04.17.20.57.11;	author krw;	state Exp;
branches;
next	1.35;

1.35
date	2009.06.04.00.44.48;	author krw;	state Exp;
branches;
next	1.34;

1.34
date	2009.06.02.16.23.45;	author krw;	state Exp;
branches;
next	1.33;

1.33
date	2009.05.11.17.13.07;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2009.05.09.21.37.26;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2009.04.12.12.56.02;	author krw;	state Exp;
branches;
next	1.30;

1.30
date	2009.04.12.01.35.01;	author krw;	state Exp;
branches;
next	1.29;

1.29
date	2009.04.10.23.11.17;	author krw;	state Exp;
branches;
next	1.28;

1.28
date	2008.06.26.05.42.04;	author ray;	state Exp;
branches;
next	1.27;

1.27
date	2008.03.22.23.28.10;	author krw;	state Exp;
branches;
next	1.26;

1.26
date	2008.03.04.00.36.38;	author krw;	state Exp;
branches;
next	1.25;

1.25
date	2007.05.28.02.57.11;	author krw;	state Exp;
branches;
next	1.24;

1.24
date	2005.04.03.19.34.00;	author krw;	state Exp;
branches;
next	1.23;

1.23
date	2005.03.27.15.13.50;	author krw;	state Exp;
branches;
next	1.22;

1.22
date	2003.10.12.13.18.37;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2003.09.21.02.11.42;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2002.11.07.01.28.52;	author krw;	state Exp;
branches;
next	1.19;

1.19
date	2002.09.24.23.45.05;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2002.08.27.02.18.34;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2002.05.22.01.48.38;	author krw;	state Exp;
branches;
next	1.16;

1.16
date	2002.05.20.16.53.57;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2002.05.18.17.56.03;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2002.05.14.01.49.25;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.09.21.54.46;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.08.23.01.47;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.07.02.03.57;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.06.07.23.25;	author hugh;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.31.17.30.31;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.19.08.43.56;	author hugh;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.10.06.51.15;	author hugh;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.10.06.48.43;	author hugh;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.24.23.17.29;	author hugh;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.14.20.53.12;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.23.01.51.52;	author krw;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.23.19.45.01;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.24.10.55.02;	author hugh;	state Exp;
branches;
next	;


desc
@@


1.48
log
@We are done providing support for the vax.
lots of agreement.
@
text
@#	$OpenBSD: install.md,v 1.47 2016/02/08 17:28:09 krw Exp $
#	$NetBSD: install.md,v 1.3.2.5 1996/08/26 15:45:28 gwr Exp $
#
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# machine dependent section of installation/upgrade script.
#

MDTERM=vt100
MDDKDEVS='/^[hs]d[0-9] /s/ .*//p;/^ra[0-9] /s/ .*//p'
MDCDDEVS='/^cd[0-9] /s/ .*//p;/^ra[0-9] .* RRD40$/s/ .*//p'
MDMTDEVS='/^[ms]t[0-9][0-9]* /s/ .*//p'

md_installboot() {
	if ! installboot -r /mnt ${1}; then
		echo "\nFailed to install bootblocks."
		echo "You will not be able to boot OpenBSD from ${1}."
		exit
	fi
}

md_prep_disklabel() {
	local _disk=$1 _f=/tmp/fstab.$1

	disklabel_autolayout $_disk $_f || return
	[[ -s $_f ]] && return

	# Edit disklabel manually.
	# Abandon all hope, ye who enter here.
	disklabel -F $_f -E $_disk
}

md_congrats() {
}

md_consoleinfo() {
}
@


1.47
log
@If manual disklabel editing is requested during install, don't emit
verbiage explaining what disklabels are.

If you don't know, you should be using (A)uto!

ok rpe@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.46 2015/10/15 19:28:31 miod Exp $
@


1.46
log
@Use MI installboot instead of disklabel -B to install boot blocks.
ok krw@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.45 2015/06/02 19:54:07 rpe Exp $
d55 2
a56 8
	cat <<__EOT
You will now create a OpenBSD disklabel on the disk.  The disklabel defines
how OpenBSD splits up the disk into OpenBSD partitions in which filesystems
and swap space are created.  You must provide each filesystem's mountpoint
in this program.

__EOT

@


1.45
log
@Remove the $FSTABFLAG variable and use -F directly. The installer
uses disklabel UIDs unconditionally for a while already.

OK krw@@
"looks good" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.44 2015/05/31 19:40:11 rpe Exp $
d42 5
a46 3
	# Use cat to avoid holes created by cp(1)
	cat /mnt/usr/mdec/boot > /mnt/boot
	/sbin/disklabel -B $1
@


1.44
log
@Replace identical code in the MD scripts of the installer with a new
MI function disklabel_autolayout() which now handles all aspects of
the disklabel auto-layout and autopartitioning case for the root disk.
Remove get_disklabel_template() and merge it with the new function.

"move forward" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.43 2015/05/04 19:55:27 rpe Exp $
d61 1
a61 1
	disklabel $FSTABFLAG $_f -E $_disk
@


1.43
log
@Add the new template file based autopartitioning feature of disklabel(8)
to the OpenBSD installer. It is available during unattended installation.
The template file is fetched from an url, provided as answer to a new
question in the response file:

    URL to autopartitioning template for disklabel = url

Original diff from and OK henning@@
'no objection' krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.42 2014/03/22 02:24:43 krw Exp $
d48 4
a51 1
	local _disk=$1 _f _op
a52 21
	_f=/tmp/fstab.$_disk
	if [[ $_disk == $ROOTDISK ]]; then
		if $AUTO && get_disklabel_template; then
			disklabel -T /disklabel.auto $FSTABFLAG $_f -w -A $_disk && return
			echo "Autopartitioning failed"
			exit 1
		fi
		while :; do
			echo "The auto-allocated layout for $_disk is:"
			disklabel -h -A $_disk | egrep "^#  |^  [a-p]:"
			ask "Use (A)uto layout, (E)dit auto layout, or create (C)ustom layout?" a
			case $resp in
			a*|A*)	_op=-w ;;
			e*|E*)	_op=-E ;;
			c*|C*)	break ;;
			*)	continue ;;
			esac
			disklabel $FSTABFLAG $_f $_op -A $_disk
			return
		done
	fi
@


1.42
log
@Oops. MDMTDEVS is used to populate /dev. Put those bits back.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.41 2014/03/22 01:13:02 krw Exp $
d52 5
@


1.41
log
@Remove 'tape' as a method for installing sets. Elite masters of unix
arcana able to do without instructions for tape installs, can do
without the crutch of script support. If any non-EMOUA tape users
surface, this is easy to restore.

ok halex@@ on the actual diff.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.40 2013/11/16 18:37:27 rpe Exp $
d39 1
@


1.40
log
@Remove AUTOROOT variable which is a leftover of r1.183 of install.sub

diff from Philipp e1c1bac6253dc54a1e89ddc046585792 at osteo dot net

ok krw@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.39 2012/07/13 14:50:34 halex Exp $
a38 1
MDMTDEVS='/^[ms]t[0-9][0-9]* /s/ .*//p'
@


1.39
log
@copy boot loaders using cat and shell redirection rather than cp,
since the latter may insert holes in the target files, which could
be bad for the boot process

ok deraadt@@ guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.38 2012/07/10 14:25:00 halex Exp $
d57 1
a57 1
			a*|A*)	_op=-w ; AUTOROOT=y ;;
@


1.38
log
@since disklabel -W is no more, zap it from all the install.md's

ok krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.37 2011/07/06 18:32:58 miod Exp $
d42 2
a43 1
	cp /mnt/usr/mdec/boot /mnt/boot
@


1.37
log
@Remove support for non-microVAX, non-VAXstation, non-VXT hardware in the
VAX port. This means, 11/7xx, VAX6000 and VAX8x00 systems, as well as SBI,
CMI, BI, XMI and MASSBUS drivers.
Most of these files were not being compiled or kept in compilable state over
the years anyway.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.36 2011/04/17 20:57:11 krw Exp $
a48 1
	disklabel -W $_disk >/dev/null 2>&1
@


1.36
log
@First crack at enabling the installation of a DUID version of
/etc/fstab, after asking user. Current default is existing behaviour.

Feedback & suggestions deraadt@@, halex@@, jsing@@, todd@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.35 2009/06/04 00:44:48 krw Exp $
d37 1
a37 1
MDDKDEVS='/^[hs]d[0-9] /s/ .*//p;/^r[al][0-9] /s/ .*//p'
d39 1
a39 1
MDMTDEVS='/^[cms]t[0-9][0-9]* /s/ .*//p;/^ts[0-9]0-9]* /s/ .*//p'
@


1.35
log
@Nuke now superfluous ARCH=ARCH lines in install.md and the sed processing of
those lines in list2sh.awk.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.34 2009/06/02 16:23:45 krw Exp $
d62 1
a62 1
			disklabel -f $_f $_op -A $_disk
d74 1
a74 1
	disklabel -f $_f -E $_disk
@


1.34
log
@Add '-h' flag, and '*' as a unit specifier for 'p' Editor command.
Both cause partition sizes to be displayed using a human readable
format with the units automatically chosen by looking at the smallest
partition in the disk label. Remove forceable humanization in 'A'
code and use '-h' in install scripts.

Prodded & ok deraadt@@, verbiage tweaks from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.33 2009/05/11 17:13:07 deraadt Exp $
a39 1
ARCH=ARCH
@


1.33
log
@Remind people that mountpoints must now be entered using the disklabel
command; the script does not ask afterwards.  Note I am not adjusting
the macppc or sgi install.md scripts.  I ask their maintainers to clean
them before I will maintain them further.  Please
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.32 2009/05/09 21:37:26 deraadt Exp $
d55 1
a55 1
			disklabel -A $_disk | egrep "^#  |^  [a-p]:"
@


1.32
log
@remove some chatty disklabel stuff
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.31 2009/04/12 12:56:02 krw Exp $
d67 8
@


1.31
log
@Tweak pattern used to select partition lines for display so the
'# /dev/r...' line is not selected.

Noticed by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.30 2009/04/12 01:35:01 krw Exp $
a42 1
	echo "Installing boot block..."
@


1.30
log
@No longer need '-f' or '-p' when displaying layout. A few patterns
missed the '# size offset ...' line at the top of the partition
list.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.29 2009/04/10 23:11:17 krw Exp $
d56 1
a56 1
			disklabel -A $_disk | egrep "^#|^  [a-p]:"
@


1.29
log
@Where appropriate display the auto-allocation layout of the root
disk and ask if the installee wants to use it, edit it, or create
their own custom disklabel. Most one-disk installs will not need
to see fdisk or disklabel.

i386 and macppc by me, adapted for others by deraadt@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.28 2008/06/26 05:42:04 ray Exp $
d56 1
a56 1
			disklabel -f $_f -p g -A $_disk | egrep "^#|^  [a-p]:"
@


1.28
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.27 2008/03/22 23:28:10 krw Exp $
d49 1
a49 1
	local _disk=$1
d52 17
a68 1
	disklabel -f /tmp/fstab.$_disk -E $_disk
@


1.27
log
@No point in checking disklabel output for 'disk label corrupted' message
since it isn't emitted anymore.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.26 2008/03/04 00:36:38 krw Exp $
a18 7
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
@


1.26
log
@Redo serial console configuration logic. Smaller, easier to
understand.

Add serial console handling for alpha, macppc, zaurus.  No functional
change for i386/amd64.

All archs should now have automatic serial console configuration.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.25 2007/05/28 02:57:11 krw Exp $
a54 14
# $1 is the disk to check
md_checkfordisklabel() {
	local rval=0

	disklabel $1 >/dev/null 2>/tmp/checkfordisklabel

	if grep "disk label corrupted" /tmp/checkfordisklabel; then
		rval=2
	fi >/dev/null 2>&1

	rm -f /tmp/checkfordisklabel
	return $rval
}

a56 6

	md_checkfordisklabel $_disk
	case $? in
	2)	echo "WARNING: Label on disk $_disk is corrupted. You will be repairing it.\n"
		;;
	esac
@


1.25
log
@Don't look for wt tape devices while installing.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.24 2005/04/03 19:34:00 krw Exp $
d83 3
@


1.24
log
@More shrinkage with a bit of code factoring.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.23 2005/03/27 15:13:50 krw Exp $
d46 1
a46 1
MDMTDEVS='/^[cmsw]t[0-9][0-9]* /s/ .*//p;/^ts[0-9]0-9]* /s/ .*//p'
@


1.23
log
@Use new skeleton kbd(8) '-l' to generalize kbd(8) use.  Eliminate
fixed list of available maps and machine dependant md_set_term()
functions.

Any ramdisk with /sbin/kbd present (amd64, cats, i386 at the moment)
will now present list of available keyboard encodings.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.22 2003/10/12 13:18:37 krw Exp $
d44 1
a44 1
MDDISKDEVS='/^[hs]d[0-9] /s/ .*//p;/^r[al][0-9] /s/ .*//p'
d46 1
@


1.22
log
@Cleanup and shrinkage:

1) Eliminate 'WARNING: Disk xxx has no label.' message. When installing OpenBSD
this is a normal condition not worth commenting on. From some discussion on
hackers/icb.

2) Use consistant verbiage and case statement when checking the disklabel.

3) Consistantly suppress output of 'disklabel -W', reducing duplicate messages
like '# using MBR partition ...' which are issued again when the 'disklabel -f
...' command is executed.

4) Usual code rectifications - eliminate extra {}'s, multiple echos
elimination, etc.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.21 2003/09/21 02:11:42 krw Exp $
a46 3

md_set_term() {
}
@


1.21
log
@Fix extraneous display of grep output when searching disklabel output for
error information. Previously things like:

disklabel: no disk label
WARNING: Disk wd0 has no disk label. You will be creating a new one.

would be printed. Now the 'disklabel: no disk label' message is correctly
sent to /dev/null.

Take the opportunity to clean up a bit of code and formatting, making all
the md_checkfordisklabel() functions as identical as possible.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.20 2002/11/07 01:28:52 krw Exp $
d63 1
a63 3
	if grep "no disk label" /tmp/checkfordisklabel; then
		rval=1
	elif grep "disk label corrupted" /tmp/checkfordisklabel; then
d71 1
a71 2
md_prep_disklabel()
{
d76 1
a76 6
	0)	;;
	1)	echo WARNING: Disk $_disk has no label. You will be creating a new one.
		echo
		;;
	2)	echo WARNING: Label on disk $_disk is corrupted. You will be repairing.
		echo
d80 2
a81 2
	disklabel -W ${_disk}
	disklabel -f /tmp/fstab.${_disk} -E ${_disk}
@


1.20
log
@Treat 'bsd' like just another filename in THESETS, no more 'kernel'
logic.  As result, MDSETS gone from everything but mac68k.

MDSETS now treated as a list of complete file names to add to THESETS,
allowing more MD flexibility, i.e. may or may not be .tgz files.

All traces of tar.gz removed. Not used for sets since 2.7 or so. As a
result of code simplification from not having to consider tar.gz, the
functions get_sets(), make_lastset(), and set_not_done() are
eliminated, along with the global SETS.

Build THESETS and DEFAULTSETS to contain full file names.

Always install sets in the order they appear in THESETS, keeping
siteXX last but without needing special logic. More predictable for
user if a lot of set additions and removals done before being
satisfied, as the sets are now installed in the same order they appear
in the selection list.

Remove ability to look for non-set .tgz/.tar.gz files. The job of the
install scripts is to install the standard sets in a simple and
rational way. Not to install general tar balls. The user can do that
post-install or simply '!' out to do it during install. On their head
be it.

If no sets are found in a specified source, list the filenames in
THESETS to show what is being looked for.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.19 2002/09/24 23:45:05 deraadt Exp $
d57 1
d59 3
a61 2
	# $1 is the disk to check
	local rval
a62 1
	disklabel $1 > /dev/null 2> /tmp/checkfordisklabel
d67 1
a67 3
	else
		rval=0
	fi
@


1.19
log
@fix english; krw ok
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.18 2002/08/27 02:18:34 krw Exp $
a42 2
# Machine-dependent install sets
MDSETS=kernel
@


1.18
log
@Move general partitioning advice from machine dependant per disk
routine to install.sh so it is displayed only once.

Strongly advise /, /tmp, /var, /usr and /home have their own
disk partitions as requested by deraadt@@.

Rather than rely on users not re-selecting an already initialized
disk, just allow them to choose from un-initialized disks.

Move get_root invocation into install.sub as both install.sh and
upgrade.sh did it first thing.

Remove the 'workaround' to a 'vnode aliasing bug' that came in
with the initial import of upgrade.sh from NetBSD. ok millert@@.

Rework verbiage in a few places. Clean up logic around looping
through disk units by handling root disk better.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.17 2002/05/22 01:48:38 krw Exp $
d83 1
a83 1
	1)	echo WARNING: Label on disk $_disk has no label. You will be creating a new one.
@


1.17
log
@Fix quoting botch in earlier commit. Make sure MDDISKDEVS and
MDCDDEVS actually work with non-empty values as well as the
supplied default this time.

Problem first detected by jsyn@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.16 2002/05/20 16:53:57 krw Exp $
a90 7
	# display example
	cat << __EOT
If you are unsure of how to use multiple partitions properly
(ie. separating /, /usr, /tmp, /var, /usr/local, and other things)
just split the space into a root and swap partition for now.

__EOT
@


1.16
log
@Eliminate md_questions(). It was used only to control the setting of
machdep.allowaperture. Remove the setting of machdep.allowaperture
from md_installboot().

Add MDXAPERTURE variable to relevant architectures.

Add a new function set_machdep_allowaperture(). It is called *after*
install_sets() (which changes when the X Window question is asked), and
if MDXAPERTURE is present modifies sysctl.conf.

Shrinks overall size for i386, macppc, sparc64 (which used md_questions
for machdep.allowaperture) but increases size a bit for other
architectures since set_machep_allowaperture is in install.sub.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.15 2002/05/18 17:56:03 krw Exp $
d46 2
a47 2
MDDISKDEVS="'/^[hs]d[0-9] /s/ .*//p;/^r[al][0-9] /s/ .*//p'"
MDCDDEVS="'/^cd[0-9] /s/ .*//p;/^ra[0-9] .* RRD40$/s/ .*//p'"
@


1.15
log
@Eliminate md_get_diskdevs() and md_get_cddevs() by

1) Saving one boot's worth of dmesg in /tmp/dmesg.boot
2) Using sed to scan for devices and pull out names in
   new get_diskdevs() and get_cddevs() in install.sub
3) Saving any md disk/cd sed patterns in MDDISKDEVS and
   MDCDDEVS variables.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.14 2002/05/14 01:49:25 krw Exp $
a50 4
}

md_questions() {
	:
@


1.14
log
@Eliminate md_native_fstype() and md_native_fsopts(). Both functions
simply echo'd a single word if present at all.

Replace with variables MDFSTYPE and MDFSOPTS if required. Rework logic
in install.sub's mount_a_disk() to always include 'ro' as an option to
the mount command. This allows even those arch's with MDFSTYPE to
usually get by without MDFSOPTS.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.13 2002/05/09 21:54:46 krw Exp $
d46 2
a50 25
}

md_get_msgbuf() {
	# Only want to see one boot's worth of info
	dmesg > /tmp/msgbuf
	sed -n -f /dev/stdin /tmp/msgbuf <<- OOF
		/^OpenBSD /h
		/^OpenBSD /!H
		\${
			g
			p
		}
	OOF
}

md_get_diskdevs() {
	# return available disk devices
	md_get_msgbuf |sed -n  -e '/^[hs]d[0-9] /{s/ .*//;p;}' \
	    -e '/^r[al][0-9] /{s/ .*//;p;}'
}

md_get_cddevs() {
	# return available CDROM devices
	md_get_msgbuf | sed -n 	-e '/^cd[0-9] /{s/ .*//;p;}' \
	    -e '/^ra[0-9] .* RRD40$/{s/ .*//;p;}'
@


1.13
log
@Elminate md_welcome_banner() and md_not_going_to_install() as the
output of both was essentially identical on all architectures. Replace
with welcome_banner() and not_going_to_install() in install.sub.

Abstract common verbiage from md_congrats() into congrats() which
calls md_congrats() for any architecture specific additional verbiage.

Reword things so ${MODE} can be plausibly used in more places.

Remove extraneous #!/bin/sh in hp300 install.md.

ok deraadt@@ espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.12 2002/05/08 23:01:47 krw Exp $
a83 8
}

md_native_fstype() {
	:
}

md_native_fsopts() {
	:
@


1.12
log
@Abstract out common md_set_term() code into set_term() in install.sub,
calling md_set_term() from set_term() to do machine dependent stuff.
Currently only i386 does anything - keyboard mappings.

Add MDTERM variable to allow install.md to set proper default terminal
type. Default to vt220.

Eliminate md_get_partition_range() as useless since every architecture
returned '[a-p]'.

Make default term for all mvme* architectures vt100 as requested by miod@@.

ok deraadt@@ millert@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.11 2002/05/07 02:03:57 krw Exp $
a136 47
md_welcome_banner() {
{
	if [ "$MODE" = install ]; then
		cat << __EOT
Welcome to the OpenBSD/vax ${VERSION_MAJOR}.${VERSION_MINOR} installation program.

This program is designed to help you put OpenBSD on your disk in a simple and
rational way.
__EOT

	else
		cat << __EOT
Welcome to the OpenBSD/vax ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program.

This program is designed to help you upgrade your OpenBSD system in a simple
and rational way.  As a reminder, installing the 'etc' binary set is NOT
recommended.  Once the rest of your system has been upgraded, you should
manually merge any changes to files in the 'etc' set into those files which
already exist on your system.
__EOT
	fi

cat << __EOT

As with anything which modifies your disk's contents, this program can cause
SIGNIFICANT data loss, and you are advised to make sure your data is backed
up before beginning the installation process.

Default answers are displayed in brackets after the questions.  You can hit
Control-C at any time to quit, but if you do so at a prompt, you may have
to hit return.  Also, quitting in the middle of installation may leave your
system in an inconsistent state.  If you hit Control-C and restart the
install, the install program will remember many of your old answers.

__EOT
} | more
}

md_not_going_to_install() {
	cat << __EOT

OK, then.  Enter 'halt' at the prompt to halt the machine.  Once the machine
has halted, power-cycle the system to load new boot code.

__EOT
}

a137 13
	local what;
	if [ "$MODE" = install ]; then
		what=installed
	else
		what=upgraded
	fi
	cat << __EOT

CONGRATULATIONS!  You have successfully $what OpenBSD!  To boot the
installed system, enter halt at the command prompt. Once the system has
halted, reset the machine and boot from the disk.

__EOT
@


1.11
log
@All architectures now use miniroot, so eliminate last few getresp()
calls in favour of ask().

Fix the erroneous advice I gave to Hugh in vax getresp() -> ask().

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.10 2002/05/06 07:23:25 hugh Exp $
d45 1
a48 4
	test -n "$TERM" && return
	ask "Specify terminal type:" vt100
	TERM=$resp
	export TERM
a73 5
}

md_get_partition_range() {
	# return range of valid partition letters
	echo [a-p]
@


1.10
log
@Convert a getresp that seems to have escaped the sieve.
Spotted by grange.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.9 2002/03/31 17:30:31 deraadt Exp $
d49 1
a49 1
	ask "Specify terminal type [vt100]: " vt100
@


1.9
log
@bit of shrinkage, krw ok
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.8 2002/03/19 08:43:56 hugh Exp $
d49 1
a49 2
	echo -n "Specify terminal type [vt100]: "
	getresp vt100
@


1.8
log
@Match RRD40 as a cdrom on MSCP. May be useful to simh users, even if
nobody has the actual hardware.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.7 2002/03/10 06:51:15 hugh Exp $
a38 1

d81 2
a82 2
    # return range of valid partition letters
    echo [a-p]
d126 2
a127 4
	0)
		;;
	1)
		echo WARNING: Label on disk $_disk has no label. You will be creating a new one.
d130 1
a130 2
	2)
		echo WARNING: Label on disk $_disk is corrupted. You will be repairing.
@


1.7
log
@Add ra[0-9] hd[0-9] and rl[0-9] to drives matched by md_get_diskdevs.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.6 2002/03/10 06:48:43 hugh Exp $
d77 2
a78 1
	md_get_msgbuf | sed -n 	-e '/^cd[0-9] /{s/ .*//;p;}'
@


1.6
log
@Use the base boot.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.5 2002/02/24 23:17:29 hugh Exp $
d71 2
a72 2
	md_get_msgbuf | sed -n 	-e '/^sd[0-9] /{s/ .*//;p;}' \
	    -e '/^x[ra][0-9] /{s/ .*//;p;}'
@


1.5
log
@Copy boot to correct root.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.4 2002/02/14 20:53:12 deraadt Exp $
d91 1
a91 1
	cp /usr/mdec/boot /mnt/boot
@


1.4
log
@sync with other install.md scripts.  also copy /boot from /usr/mdec, where it
now lives
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.3 2001/12/23 01:51:52 krw Exp $
d91 1
a91 1
	cp /usr/mdec/boot /boot
@


1.3
log
@Remove extra blank line displayed before the paragraph 'As with
anything ...' during install and/or upgrade on some archs.

On sparc, sparc64, sun3 and vax fix a typo ('echo Welcome' ->
'Welcome') in here-document displayed in md_welcome_banner().
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.2 2001/06/23 19:45:01 deraadt Exp $
d45 1
a45 1
MDSETS="kernel"
d60 6
a65 6
                /^OpenBSD /h
                /^OpenBSD /!H
                \${
                        g
                        p
                }
d72 1
a72 1
				-e '/^x[ra][0-9] /{s/ .*//;p;}' 
d90 3
a92 2
        echo "Installing boot block..."
        /sbin/disklabel -B $1
d161 1
a161 1
Welcome to the OpenBSD/vax ${VERSION} upgrade program.
d163 4
a166 6
This program is designed to help you upgrade your OpenBSD system in a
simple and rational way.

As a reminder, installing the 'etc' binary set is NOT recommended.
Once the rest of your system has been upgraded, you should manually
merge any changes to files in the 'etc' set into those files which
d173 9
a181 8
As with anything which modifies your disk's contents, this program can
cause SIGNIFICANT data loss, and you are advised to make sure your
data is backed up before beginning the installation process.

Default answers are displayed in brackets after the questions.  You
can hit Control-C at any time to quit, but if you do so at a prompt,
you may have to hit return.  Also, quitting in the middle of
installation may leave your system in an inconsistent state.
d190 2
a191 2
OK, then.  Enter 'halt' at the prompt to halt the machine.  Once the
machine has halted, power-cycle the system to load new boot code.
d205 3
a207 3
CONGRATULATIONS!  You have successfully $what OpenBSD!
To boot the installed system, enter halt at the command prompt. Once the
system has halted, reset the machine and boot from the disk.
@


1.2
log
@argh.  stop using kernfs, using dmesg using sysctl.  encode ARCH into
install.md at build time.  remove some crud.  and the icing on the cake:
skip testing all this until next week
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.1 2001/02/24 10:55:02 hugh Exp $
a155 1

d160 1
a160 1
echo Welcome to the OpenBSD/vax ${VERSION} upgrade program.
a168 1

@


1.1
log
@Get this stuff closer to woriking in-tree.
@
text
@d1 1
a1 1
#	$OpenBSD$
a44 2
MSGBUF=/kern/msgbuf
HOSTNAME=/kern/hostname
d46 1
a46 13

# an alias for hostname(1)
hostname() {
	if [ -x /bin/hostname ]; then
		/bin/hostname $1
	else
		if [ -z "$1" ]; then
			cat $HOSTNAME
		else
			echo $1 > $HOSTNAME
		fi
	fi
}
a55 21
md_makerootwritable() {
	# Was: do_mfs_mount "/tmp" "2048"
	# /tmp is the mount point
	# 2048 is the size in DEV_BIZE blocks

	if [ ! -w /tmp ]; then
		umount /tmp > /dev/null 2>&1
		if ! mount_mfs -s 2048 swap /tmp ; then
			cat << __EOT

FATAL ERROR: Can't mount the memory filesystem.

__EOT
			exit
		fi

		# Bleh.  Give mount_mfs a chance to DTRT.
		sleep 2
	fi
}

d57 3
a59 2
        # Only want to see one boot's worth of info
        sed -n -f /dev/stdin $MSGBUF <<- OOF
a66 4
}

md_machine_arch() {
	cat /kern/machine
@

