head	1.38;
access;
symbols
	OPENBSD_5_1_BASE:1.37
	OPENBSD_5_1:1.37.0.4
	OPENBSD_5_0:1.37.0.2
	OPENBSD_5_0_BASE:1.37
	OPENBSD_4_9:1.36.0.8
	OPENBSD_4_9_BASE:1.36
	OPENBSD_4_8:1.36.0.6
	OPENBSD_4_8_BASE:1.36
	OPENBSD_4_7:1.36.0.2
	OPENBSD_4_7_BASE:1.36
	OPENBSD_4_6:1.36.0.4
	OPENBSD_4_6_BASE:1.36
	OPENBSD_4_5:1.29.0.4
	OPENBSD_4_5_BASE:1.29
	OPENBSD_4_4:1.29.0.2
	OPENBSD_4_4_BASE:1.29
	OPENBSD_4_3:1.27.0.2
	OPENBSD_4_3_BASE:1.27
	OPENBSD_4_2:1.26.0.6
	OPENBSD_4_2_BASE:1.26
	OPENBSD_4_1:1.26.0.4
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.26.0.2
	OPENBSD_4_0_BASE:1.26
	OPENBSD_3_9:1.25.0.4
	OPENBSD_3_9_BASE:1.25
	OPENBSD_3_8:1.25.0.2
	OPENBSD_3_8_BASE:1.25
	OPENBSD_3_7:1.24.0.2
	OPENBSD_3_7_BASE:1.24
	OPENBSD_3_6:1.21.0.4
	OPENBSD_3_6_BASE:1.21
	OPENBSD_3_5:1.21.0.2
	OPENBSD_3_5_BASE:1.21
	OPENBSD_3_4:1.19.0.4
	OPENBSD_3_4_BASE:1.19
	OPENBSD_3_3:1.19.0.2
	OPENBSD_3_3_BASE:1.19
	OPENBSD_3_2:1.17.0.2
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3;
locks; strict;
comment	@# @;


1.38
date	2012.06.20.18.45.44;	author matthew;	state dead;
branches;
next	1.37;

1.37
date	2011.04.17.20.57.10;	author krw;	state Exp;
branches;
next	1.36;

1.36
date	2009.06.04.00.44.47;	author krw;	state Exp;
branches;
next	1.35;

1.35
date	2009.06.02.16.23.45;	author krw;	state Exp;
branches;
next	1.34;

1.34
date	2009.05.30.22.12.42;	author krw;	state Exp;
branches;
next	1.33;

1.33
date	2009.05.11.17.13.07;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2009.04.12.12.56.02;	author krw;	state Exp;
branches;
next	1.31;

1.31
date	2009.04.12.01.35.01;	author krw;	state Exp;
branches;
next	1.30;

1.30
date	2009.04.10.23.11.17;	author krw;	state Exp;
branches;
next	1.29;

1.29
date	2008.06.26.05.42.03;	author ray;	state Exp;
branches;
next	1.28;

1.28
date	2008.03.23.15.51.35;	author krw;	state Exp;
branches;
next	1.27;

1.27
date	2008.03.04.00.36.38;	author krw;	state Exp;
branches;
next	1.26;

1.26
date	2006.03.09.20.49.00;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2005.03.27.15.13.50;	author krw;	state Exp;
branches;
next	1.24;

1.24
date	2004.12.10.20.18.34;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2004.12.03.06.37.49;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2004.12.03.06.30.00;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2003.10.12.13.18.37;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.21.02.11.42;	author krw;	state Exp;
branches;
next	1.19;

1.19
date	2002.11.07.01.28.52;	author krw;	state Exp;
branches;
next	1.18;

1.18
date	2002.10.30.21.37.40;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2002.09.24.23.45.05;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2002.08.27.02.18.34;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.09.05.53.53;	author todd;	state Exp;
branches;
next	1.14;

1.14
date	2002.05.20.16.53.57;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.18.17.56.03;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.14.01.49.25;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.09.21.54.46;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.08.23.01.46;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.28.14.44.01;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2002.04.24.22.33.41;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.31.17.30.30;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.23.01.51.52;	author krw;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.23.19.44.44;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.25.19.18.39;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.09.03.18.55.28;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.08.15.10.05.05;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.06.13.10.33.31;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.38
log
@more mac68k bits for the attic
@
text
@#       $OpenBSD: install.md,v 1.37 2011/04/17 20:57:10 krw Exp $
#
# Copyright (c) 2002, Miodrag Vallat.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY ITS AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
# EVENT SHALL ITS AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# machine dependent section of installation/upgrade script.
#
#

# Machine-dependent install sets
MDSETS="bsdsbc bsdsbc.rd"

md_installboot() {
}

md_prep_disklabel() {
	local _disk=$1 _f _op
 
	disklabel -W $_disk >/dev/null 2>&1
	if [[ -n $(disklabel -c $_disk 2>/dev/null | grep ' HFS ') ]]; then
		cat <<__EOT
This disk has been setup under MacOS. You will now edit a MacOS partition
table. Be careful not to remove the MacOS partitions in use.
__EOT
		pdisk /dev/${_disk}c
	fi

	_f=/tmp/fstab.$_disk
	if [[ $_disk == $ROOTDISK ]]; then
		while :; do
			echo "The auto-allocated layout for $_disk is:"
			disklabel -h -A $_disk | egrep "^#  |^  [a-p]:"
			ask "Use (A)uto layout, (E)dit auto layout, or create (C)ustom layout?" a
			case $resp in
			a*|A*)	_op=-w ; AUTOROOT=y ;;
			e*|E*)	_op=-E ;;
			c*|C*)	break ;;
			*)	continue ;;
			esac
			disklabel $FSTABFLAG $_f $_op -A $_disk
			return
		done
 	fi
	cat <<__EOT
You will now create a OpenBSD disklabel on the disk.  The disklabel defines
how OpenBSD splits up the disk into OpenBSD partitions in which filesystems
and swap space are created.  You must provide each filesystem's mountpoint
in this program.

__EOT
	disklabel $FSTABFLAG $_f -E $_disk
}

md_congrats() {
}

md_consoleinfo() {
}
@


1.37
log
@First crack at enabling the installation of a DUID version of
/etc/fstab, after asking user. Current default is existing behaviour.

Feedback & suggestions deraadt@@, halex@@, jsing@@, todd@@.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.36 2009/06/04 00:44:47 krw Exp $
@


1.36
log
@Nuke now superfluous ARCH=ARCH lines in install.md and the sed processing of
those lines in list2sh.awk.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.35 2009/06/02 16:23:45 krw Exp $
d88 1
a88 1
			disklabel -f $_f $_op -A $_disk
d99 1
a99 1
	disklabel -f $_f -E $_disk
@


1.35
log
@Add '-h' flag, and '*' as a unit specifier for 'p' Editor command.
Both cause partition sizes to be displayed using a human readable
format with the units automatically chosen by looking at the smallest
partition in the disk label. Remove forceable humanization in 'A'
code and use '-h' in install scripts.

Prodded & ok deraadt@@, verbiage tweaks from jmc@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.34 2009/05/30 22:12:42 krw Exp $
a59 1
ARCH=ARCH
@


1.34
log
@Even HFS installs need to run disklabel(8)! Revert erroroneous
bypassing of disklabel(8) invocation. Nuke redundant verbiage
while here. Prompted by macppc problem noted by maja@@.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.33 2009/05/11 17:13:07 deraadt Exp $
d81 1
a81 1
			disklabel -A $_disk | egrep "^#  |^  [a-p]:"
@


1.33
log
@Remind people that mountpoints must now be entered using the disklabel
command; the script does not ask afterwards.  Note I am not adjusting
the macppc or sgi install.md scripts.  I ask their maintainers to clean
them before I will maintain them further.  Please
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.32 2009/04/12 12:56:02 krw Exp $
a74 7
		return
	fi

	cat <<__EOT
This disk is not shared with MacOS. You will now edit a regular OpenBSD
disklabel.
__EOT
@


1.32
log
@Tweak pattern used to select partition lines for display so the
'# /dev/r...' line is not selected.

Noticed by deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.31 2009/04/12 01:35:01 krw Exp $
d100 7
@


1.31
log
@No longer need '-f' or '-p' when displaying layout. A few patterns
missed the '# size offset ...' line at the top of the partition
list.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.30 2009/04/10 23:11:17 krw Exp $
d88 1
a88 1
			disklabel -A $_disk | egrep "^#|^  [a-p]:"
@


1.30
log
@Where appropriate display the auto-allocation layout of the root
disk and ask if the installee wants to use it, edit it, or create
their own custom disklabel. Most one-disk installs will not need
to see fdisk or disklabel.

i386 and macppc by me, adapted for others by deraadt@@.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.29 2008/06/26 05:42:03 ray Exp $
d88 1
a88 1
			disklabel -f $_f -p g -A $_disk | egrep "^#|^  [a-p]:"
@


1.29
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.28 2008/03/23 15:51:35 krw Exp $
d66 3
a68 2
	local _disk=$1

d75 4
a78 2
	else
		cat <<__EOT
a81 2
		disklabel -W $_disk >/dev/null 2>&1
		disklabel -f /tmp/fstab.$_disk -E $_disk
d83 18
@


1.28
log
@Bring mac68k into the md_checkfordisklabel()-free world.

Quick test by martin@@ shows it seems to still work.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.27 2008/03/04 00:36:38 krw Exp $
a39 7
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
@


1.27
log
@Redo serial console configuration logic. Smaller, easier to
understand.

Add serial console handling for alpha, macppc, zaurus.  No functional
change for i386/amd64.

All archs should now have automatic serial console configuration.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.26 2006/03/09 20:49:00 miod Exp $
a71 16
# $1 is the disk to check
md_checkfordisklabel() {
	local rval=0

	disklabel $1 >/tmp/checkfordisklabel 2>&1

	if grep "disk label corrupted" /tmp/checkfordisklabel; then
		rval=2
	elif grep " HFS " /tmp/checkfordisklabel; then
		rval=3
	fi >/dev/null 2>&1

	rm -f /tmp/checkfordisklabel
	return $rval
}

d75 2
a76 3
	md_checkfordisklabel $_disk
	case $? in
	3)	cat <<__EOT
d81 2
a82 2
		;;
	*)	cat <<__EOT
d88 1
a88 2
		;;
	esac
@


1.26
log
@vt100->vt220; spotted by nick@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.25 2005/03/27 15:13:50 krw Exp $
d110 3
@


1.25
log
@Use new skeleton kbd(8) '-l' to generalize kbd(8) use.  Eliminate
fixed list of available maps and machine dependant md_set_term()
functions.

Any ramdisk with /sbin/kbd present (amd64, cats, i386 at the moment)
will now present list of available keyboard encodings.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.24 2004/12/10 20:18:34 miod Exp $
a66 1
MDTERM=vt100
@


1.24
log
@Oops, correctly detect disks shared with Mac OS.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.23 2004/12/03 06:37:49 miod Exp $
a69 3
md_set_term() {
}

a70 2
	# no standalone boot block
	:
@


1.23
log
@Kill mac68k *SBC kernels. Instead, build kernels with both sbc scsi flavours
compiled in, but one disabled, and use config -e to swap them and build
the other kernels; saves valuable compile time.

Add ramdisks into the build (at release time). Since we are moving to a
bsd.rd installation, it is not necessary to put kernels in .tgz files
anymore, so don't bother, and adjust installation script sets information
accordingly.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.22 2004/12/03 06:30:00 miod Exp $
d82 1
a82 1
	disklabel $1 >/dev/null 2>/tmp/checkfordisklabel
@


1.22
log
@Invoke pdisk, not disklabel, on disks with MacOS partition information.
ok krw@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.21 2003/10/12 13:18:37 krw Exp $
d66 1
a66 1
MDSETS="bsd.tgz bsd-sbc.tgz"
@


1.21
log
@Cleanup and shrinkage:

1) Eliminate 'WARNING: Disk xxx has no label.' message. When installing OpenBSD
this is a normal condition not worth commenting on. From some discussion on
hackers/icb.

2) Use consistant verbiage and case statement when checking the disklabel.

3) Consistantly suppress output of 'disklabel -W', reducing duplicate messages
like '# using MBR partition ...' which are issued again when the 'disklabel -f
...' command is executed.

4) Usual code rectifications - eliminate extra {}'s, multiple echos
elimination, etc.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.20 2003/09/21 02:11:42 krw Exp $
d95 1
a95 1
	local _disk=$1 _wflag="-W"
d99 5
a103 1
	2)	echo "WARNING: Label on disk $_disk is corrupted. You will be repairing it.\n"
d105 3
a107 4
	3)	cat <<__EOT
WARNING: This disk has been set up under Mac OS. For safety reasons, you
	 will not be allowed to save any disklabel changes from OpenBSD.

d109 2
a110 1
		_wflag="-N"
a112 3

	disklabel $_wflag $_disk >/dev/null 2>&1
	disklabel -f /tmp/fstab.$_disk -E $_disk
@


1.20
log
@Fix extraneous display of grep output when searching disklabel output for
error information. Previously things like:

disklabel: no disk label
WARNING: Disk wd0 has no disk label. You will be creating a new one.

would be printed. Now the 'disklabel: no disk label' message is correctly
sent to /dev/null.

Take the opportunity to clean up a bit of code and formatting, making all
the md_checkfordisklabel() functions as identical as possible.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.19 2002/11/07 01:28:52 krw Exp $
d84 1
a84 3
	if grep "no OpenBSD or MacOS disk label" /tmp/checkfordisklabel; then
		rval=1
	elif grep "disk label corrupted" /tmp/checkfordisklabel; then
d95 1
a95 2
	local _disk=$1
	local _wflag="-W"
d99 7
a105 10
	0)	;;
	1)	echo WARNING: Disk $_disk has no label. You will be creating a new one.
		echo
	;;
	2)	echo WARNING: Label on disk $_disk is corrupted. You will be repairing.
		echo
	;;
	3)	echo WARNING: This disk has been set up under Mac OS. For safety reasons, you
		echo will not be allowed to save any disklabel changes from OpenBSD.
		echo
d107 1
a107 1
	;;
d110 2
a111 2
	disklabel ${_wflag} ${_disk}
	disklabel -f /tmp/fstab.${_disk} -E ${_disk}
@


1.19
log
@Treat 'bsd' like just another filename in THESETS, no more 'kernel'
logic.  As result, MDSETS gone from everything but mac68k.

MDSETS now treated as a list of complete file names to add to THESETS,
allowing more MD flexibility, i.e. may or may not be .tgz files.

All traces of tar.gz removed. Not used for sets since 2.7 or so. As a
result of code simplification from not having to consider tar.gz, the
functions get_sets(), make_lastset(), and set_not_done() are
eliminated, along with the global SETS.

Build THESETS and DEFAULTSETS to contain full file names.

Always install sets in the order they appear in THESETS, keeping
siteXX last but without needing special logic. More predictable for
user if a lot of set additions and removals done before being
satisfied, as the sets are now installed in the same order they appear
in the selection list.

Remove ability to look for non-set .tgz/.tar.gz files. The job of the
install scripts is to install the standard sets in a simple and
rational way. Not to install general tar balls. The user can do that
post-install or simply '!' out to do it during install. On their head
be it.

If no sets are found in a specified source, list the filenames in
THESETS to show what is being looked for.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.18 2002/10/30 21:37:40 miod Exp $
d78 1
d80 3
a82 2
	# $1 is the disk to check
	local rval
a83 1
	disklabel $1 > /dev/null 2> /tmp/checkfordisklabel
d90 1
a90 3
	else
		rval=0
	fi
@


1.18
log
@Change kernel set to shorter names on mac68k; supposed to make krw's
next changes easier.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.17 2002/09/24 23:45:05 deraadt Exp $
d66 1
a66 1
MDSETS="bsd bsd-sbc"
@


1.17
log
@fix english; krw ok
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.16 2002/08/27 02:18:34 krw Exp $
d66 1
a66 1
MDSETS="bsd-generic bsd-genericsbc"
@


1.16
log
@Move general partitioning advice from machine dependant per disk
routine to install.sh so it is displayed only once.

Strongly advise /, /tmp, /var, /usr and /home have their own
disk partitions as requested by deraadt@@.

Rather than rely on users not re-selecting an already initialized
disk, just allow them to choose from un-initialized disks.

Move get_root invocation into install.sub as both install.sh and
upgrade.sh did it first thing.

Remove the 'workaround' to a 'vnode aliasing bug' that came in
with the initial import of upgrade.sh from NetBSD. ok millert@@.

Rework verbiage in a few places. Clean up logic around looping
through disk units by handling root disk better.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.15 2002/06/09 05:53:53 todd Exp $
d104 1
a104 1
	1)	echo WARNING: Label on disk $_disk has no label. You will be creating a new one.
@


1.15
log
@knf
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.14 2002/05/20 16:53:57 krw Exp $
a116 7
	# display example
	cat << __EOT
If you are unsure of how to use multiple partitions properly
(ie. separating /, /usr, /tmp, /var, /usr/local, and other things)
just split the space into a root and swap partition for now.

__EOT
@


1.14
log
@Eliminate md_questions(). It was used only to control the setting of
machdep.allowaperture. Remove the setting of machdep.allowaperture
from md_installboot().

Add MDXAPERTURE variable to relevant architectures.

Add a new function set_machdep_allowaperture(). It is called *after*
install_sets() (which changes when the X Window question is asked), and
if MDXAPERTURE is present modifies sysctl.conf.

Shrinks overall size for i386, macppc, sparc64 (which used md_questions
for machdep.allowaperture) but increases size a bit for other
architectures since set_machep_allowaperture is in install.sub.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.13 2002/05/18 17:56:03 krw Exp $
d25 1
a25 1
# 
@


1.13
log
@Eliminate md_get_diskdevs() and md_get_cddevs() by

1) Saving one boot's worth of dmesg in /tmp/dmesg.boot
2) Using sed to scan for devices and pull out names in
   new get_diskdevs() and get_cddevs() in install.sub
3) Saving any md disk/cd sed patterns in MDDISKDEVS and
   MDCDDEVS variables.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.12 2002/05/14 01:49:25 krw Exp $
a70 4
}

md_questions() {
	:
@


1.12
log
@Eliminate md_native_fstype() and md_native_fsopts(). Both functions
simply echo'd a single word if present at all.

Replace with variables MDFSTYPE and MDFSOPTS if required. Rework logic
in install.sub's mount_a_disk() to always include 'ro' as an option to
the mount command. This allows even those arch's with MDFSTYPE to
usually get by without MDFSOPTS.

ok deraadt@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.11 2002/05/09 21:54:46 krw Exp $
a70 10
}

md_get_diskdevs() {
	# return available disk devices
	bsort `dmesg | egrep -a "^[sw]d[0-9]+ " | cutword 1`
}

md_get_cddevs() {
	# return available CDROM devices
	bsort `dmesg | egrep -a "^cd[0-9]+ " | cutword 1`
@


1.11
log
@Elminate md_welcome_banner() and md_not_going_to_install() as the
output of both was essentially identical on all architectures. Replace
with welcome_banner() and not_going_to_install() in install.sub.

Abstract common verbiage from md_congrats() into congrats() which
calls md_congrats() for any architecture specific additional verbiage.

Reword things so ${MODE} can be plausibly used in more places.

Remove extraneous #!/bin/sh in hp300 install.md.

ok deraadt@@ espie@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.10 2002/05/08 23:01:46 krw Exp $
a88 8
	:
}

md_native_fstype() {
	:
}

md_native_fsopts() {
@


1.10
log
@Abstract out common md_set_term() code into set_term() in install.sub,
calling md_set_term() from set_term() to do machine dependent stuff.
Currently only i386 does anything - keyboard mappings.

Add MDTERM variable to allow install.md to set proper default terminal
type. Default to vt220.

Eliminate md_get_partition_range() as useless since every architecture
returned '[a-p]'.

Make default term for all mvme* architectures vt100 as requested by miod@@.

ok deraadt@@ millert@@ miod@@
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.9 2002/04/28 14:44:01 krw Exp $
a149 47
md_welcome_banner() {
{
	if [ "$MODE" = "install" ]; then
		cat << __EOT
Welcome to the OpenBSD/mac68k ${VERSION_MAJOR}.${VERSION_MINOR} installation program.

This program is designed to help you put OpenBSD on your disk, in a simple and
rational way.
__EOT

	else
		cat << __EOT
Welcome to the OpenBSD/mac68k ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program.

This program is designed to help you upgrade your OpenBSD system in a simple
and rational way.  As a reminder, installing the 'etc' binary set is NOT
recommended.  Once the rest of your system has been upgraded, you should
manually merge any changes to files in the 'etc' set into those files which
already exist on your system.
__EOT
	fi

cat << __EOT

As with anything which modifies your disk's contents, this
program can cause SIGNIFICANT data loss, and you are advised
to make sure your data is backed up before beginning the
installation process.

Default answers are displayed in brackets after the questions.
You can hit Control-C at any time to quit, but if you do so at a
prompt, you may have to hit return.  Also, quitting in the middle of
installation may leave your system in an inconsistent state.

__EOT
} | more
}

md_not_going_to_install() {
	cat << __EOT

OK, then.  Enter `halt' at the prompt to halt the machine.  Once the
machine has halted, power-cycle the system to load new boot code.

__EOT
}

a150 13
	local what;
	if [ "$MODE" = "install" ]; then
		what="installed";
	else
		what="upgraded";
	fi
	cat << __EOT

CONGRATULATIONS!  You have successfully $what OpenBSD!  To boot the
installed system, enter halt at the command prompt. Once the system has
halted, reset the machine and boot from the disk.

__EOT
@


1.9
log
@Change getresp() into ask().

ask() takes 2 parameters. The first one is the question to
ask the user, and the 2nd is the default answer.

Shrinks and makes the code clearer.

From espie@@ with some tweaking, ok deraadt@@.
@
text
@d1 1
a1 1
#       $OpenBSD: install.md,v 1.8 2002/04/24 22:33:41 miod Exp $
d67 1
a70 6
	if [ ! -z "$TERM" ]; then
		return
	fi
	ask "Specify terminal type:" vt100
	TERM="$resp"
	export TERM
a80 5
}

md_get_partition_range() {
	# return range of valid partition letters
	echo [a-p]
@


1.8
log
@The beginnings of decent mac68k installation media, as two bsd.rd images.
Currently, the building of this is not enabled in "make release", however.
@
text
@d1 1
a1 1
#       $OpenBSD$
d73 1
a73 2
	echo -n "Specify terminal type [vt100]: "
	getresp "vt100"
@


1.7
log
@bit of shrinkage, krw ok
@
text
@d1 1
a1 1
#!/bin/sh
d3 11
a13 2
#	$OpenBSD: install.md,v 1.6 2001/12/23 01:51:52 krw Exp $
#	$NetBSD: install.md,v 1.1.2.4 1996/08/26 15:45:14 gwr Exp $
d15 11
d61 2
a62 1
# machine dependent section of installation/upgrade script
d66 1
a66 1
MDSETS=kernel
d70 5
a74 2
	echo -n "Specify terminal type [vt220]: "
	getresp "vt220"
a76 14
	# set screensize (i.e., for an xterm)
	rows=`stty -a | grep rows | cutword 4`
	columns=`stty -a | grep columns | cutword 6`
	if [ "$rows" -eq 0 -o "$columns" -eq 0 ]; then
		echo -n "Specify terminal rows [25]: "
		getresp "25"
		rows="$resp"

		echo -n "Specify terminal columns [80]: "
		getresp "80"
		columns="$resp"

		stty rows "$rows" columns "$columns"
	fi
d81 1
a81 1
	dmesg | egrep -a "^sd[0-9]+ " | cutword 1 | sort -u
d85 2
a86 2
	# return available CD-ROM devices
	dmesg | egrep -a "^cd[0-9]+ " | cutword 1 | sort -u
d91 1
a91 1
	echo "[a-p]"
d99 9
d112 16
a127 2
	# We don't have disklabels.
	return 0
d130 29
a158 3
md_prep_disklabel()
{
	# We don't have disklabels.
a160 4
# Note, while they might not seem machine-dependent, the
# welcome banner and the punt message may contain information
# and/or instructions specific to the type of machine.

d162 1
a162 1
(
d164 2
a165 2
		echo "Welcome to the OpenBSD/mac68k ${VERSION_MAJOR}.${VERSION_MINOR} installation program."
		cat << \__welcome_banner_1
d167 3
a169 3
This program is designed to help you put OpenBSD on your system in a
simple and rational way.
__welcome_banner_1
d172 2
a173 5
		echo "Welcome to the OpenBSD/mac68k ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program."
		cat << \__welcome_banner_2

This program is designed to help you upgrade your OpenBSD system in a
simple and rational way.
d175 4
a178 3
As a reminder, installing the `etc' binary set is NOT recommended.
Once the rest of your system has been upgraded, you should manually
merge any changes to files in the `etc' set into those files which
d180 1
a180 1
__welcome_banner_2
d183 1
a183 1
cat << \__welcome_banner_3
d185 8
a192 7
As with anything which modifies your disk's contents, this program can
cause SIGNIFICANT data loss, and you are advised to make sure your
data is backed up before beginning the installation process.

Default answers are displayed in brackets after the questions.  You
can hit Control-C at any time to quit, but if you do so at a prompt,
you may have to hit return.  Also, quitting in the middle of
d195 2
a196 2
__welcome_banner_3
) | less -E
d200 1
a200 1
		cat << \__not_going_to_install_1
d202 2
a203 2
OK, then.  Enter 'halt' at the prompt to halt the machine.  Once the
machine has halted, reset the system in order to reboot.
d205 1
a205 1
__not_going_to_install_1
d210 2
a211 2
	if [ "$MODE" = install ]; then
		what=installed
d213 1
a213 1
		what=upgraded
d215 1
a215 1
	cat << \__congratulations_1
d218 1
a218 1
installed system, enter halt at the command prompt.  Once the system has
d221 1
a221 9
__congratulations_1
}

md_native_fstype() {
	# Nothing to do.
}

md_native_fsopts() {
	# Nothing to do.
@


1.6
log
@Remove extra blank line displayed before the paragraph 'As with
anything ...' during install and/or upgrade on some archs.

On sparc, sparc64, sun3 and vax fix a typo ('echo Welcome' ->
'Welcome') in here-document displayed in md_welcome_banner().
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.5 2001/06/23 19:44:44 deraadt Exp $
a39 1

d45 2
a46 2
MDSETS="kernel"
ARCH=
@


1.5
log
@argh.  stop using kernfs, using dmesg using sysctl.  encode ARCH into
install.md at build time.  remove some crud.  and the icing on the cake:
skip testing all this until next week
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.4 2001/01/25 19:18:39 deraadt Exp $
a127 1

@


1.4
log
@egrep -a to permit working with binary data in dmesg
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.3 1999/09/03 18:55:28 deraadt Exp $
d47 1
a47 3

TMPWRITEABLE=/tmp/writeable
KERNFSMOUNTED=/tmp/kernfsmounted
a69 42
md_makerootwritable() {

	if [ -e ${TMPWRITEABLE} ]
	then
		md_mountkernfs
		return
	fi
	if ! mount -t ffs  -u /dev/rd0a / ; then
		cat << \__rd0_failed_1

FATAL ERROR: Can't mount the ram filesystem.

__rd0_failed_1
		exit
	fi

	# Bleh.  Give mount_mfs a chance to DTRT.
	sleep 2
	> ${TMPWRITEABLE}

	md_mountkernfs
}

md_mountkernfs() {
	if [ -e ${KERNFSMOUNTED} ]
	then
		return
	fi
	if ! mount -t kernfs /kern /kern
	then
		cat << \__kernfs_failed_1
FATAL ERROR: Can't mount kernfs filesystem
__kernfs_failed_1
		exit
	fi
	> ${KERNFSMOUNTED} 
}

md_machine_arch() {
	cat /kern/machine
}

d72 1
a72 1
	egrep -a "^sd[0-9]+ " /kern/msgbuf | cutword 1 | sort -u
d77 1
a77 1
	egrep -a "^cd[0-9]+ " /kern/msgbuf | cutword 1 | sort -u
@


1.3
log
@md_questions() interface allows asking questions before sets
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.2 1999/08/15 10:05:05 millert Exp $
d116 1
a116 1
	cat /kern/msgbuf | egrep "^sd[0-9]+ " | cutword 1 | sort -u
d121 1
a121 1
	cat /kern/msgbuf | egrep "^cd[0-9]+ " | cutword 1 | sort -u
@


1.2
log
@Kill md_copy_kernel()
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.1 1999/06/13 10:33:31 downsj Exp $
d127 4
@


1.1
log
@New ramdisk framework for mac68k.  Not tested yet.

This is only a portion of it, and isn't even buildable on mac68k itself.
(It requires an hp300.)
@
text
@d3 1
a3 1
#	$OpenBSD: install.md,v 1.17 1999/04/01 04:39:50 millert Exp $
a140 4
}

md_copy_kernel() {
	check_kernel
@

