head	1.33;
access;
symbols
	OPENBSD_5_5:1.32.0.2
	OPENBSD_5_5_BASE:1.32
	OPENBSD_5_4:1.29.0.4
	OPENBSD_5_4_BASE:1.29
	OPENBSD_5_3:1.29.0.2
	OPENBSD_5_3_BASE:1.29
	OPENBSD_5_2:1.28.0.6
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.4
	OPENBSD_5_0:1.28.0.2
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.25.0.8
	OPENBSD_4_9_BASE:1.25
	OPENBSD_4_8:1.25.0.6
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.25.0.2
	OPENBSD_4_7_BASE:1.25
	OPENBSD_4_6:1.25.0.4
	OPENBSD_4_6_BASE:1.25
	OPENBSD_4_5:1.23.0.2
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.21.0.4
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.2
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.18.0.10
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.8
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.6
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.4
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.2
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.17.0.8
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.17.0.6
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.17.0.4
	OPENBSD_3_4_BASE:1.17
	OPENBSD_3_3:1.17.0.2
	OPENBSD_3_3_BASE:1.17
	OPENBSD_3_2:1.16.0.2
	OPENBSD_3_2_BASE:1.16
	OPENBSD_3_1:1.11.0.4
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.10.0.6
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.9.0.10
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.8
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.6
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.4
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7;
locks; strict;
comment	@# @;


1.33
date	2014.03.18.22.36.28;	author miod;	state dead;
branches;
next	1.32;

1.32
date	2013.11.09.22.35.40;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2013.10.15.22.46.52;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2013.10.14.00.00.10;	author guenther;	state Exp;
branches;
next	1.29;

1.29
date	2013.02.02.13.36.05;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.27;

1.27
date	2011.04.15.03.11.22;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2011.03.14.19.07.46;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2009.04.12.16.12.53;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2008.12.02.03.20.57;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2008.12.02.01.01.07;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2008.01.11.10.16.40;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2007.06.17.00.28.21;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2007.04.13.17.34.40;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2004.12.11.14.04.11;	author martin;	state Exp;
branches;
next	1.17;

1.17
date	2002.12.18.11.03.08;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2002.06.09.05.53.54;	author todd;	state Exp;
branches;
next	1.15;

1.15
date	2002.04.30.09.18.20;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2002.04.28.18.28.34;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2002.04.25.22.10.28;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2002.04.17.01.59.57;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.11.15.23.09;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2000.01.24.04.50.26;	author smurph;	state Exp;
branches;
next	1.9;

1.9
date	97.09.26.02.20.43;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.09.05.21.16.55;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.05.14.18.39.03;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	97.05.12.03.25.19;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.02.16.04.00.49;	author rahnds;	state Exp;
branches;
next	1.4;

1.4
date	97.02.16.03.26.24;	author rahnds;	state Exp;
branches;
next	1.3;

1.3
date	97.02.15.04.27.11;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	97.02.15.04.06.53;	author rahnds;	state dead;
branches;
next	1.1;

1.1
date	96.10.12.01.18.05;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.33
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#	$OpenBSD: Makefile,v 1.32 2013/11/09 22:35:40 miod Exp $

TOP=		${.CURDIR}/..

.include "${TOP}/Makefile.inc"
BSD_RD=		bsd.rd
IMAGE=		mr.fs
CBIN?=		instbin
LISTS=		${.CURDIR}/list
UTILS?=		${.CURDIR}/../../miniroot

MOUNT_POINT=	/mnt
MTREE=		${UTILS}/mtree.conf

VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$


DISKTYPE=       rdroot
NBLKS=          4096
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -t ffs -m 0 -o space

all:	${BSD_RD}

${BSD_RD}: ${CBIN} ${IMAGE} bsd rdsetroot
	cp bsd ${BSD_RD}
	${.OBJDIR}/rdsetroot ${BSD_RD} ${IMAGE}

${IMAGE}: rd_setup do_files rd_teardown

bsd:
.ifndef(NOBUILD)
	cd ${.CURDIR}/../../../sys/arch/mvme68k/conf && config RAMDISK
	cd ${.CURDIR}/../../../sys/arch/mvme68k/compile/RAMDISK && \
	    ${MAKE} clean && exec ${MAKE}
.endif
	cp ${.CURDIR}/../../../sys/arch/mvme68k/compile/RAMDISK/bsd bsd

rd_test: rd_setup rd_teardown

rd_setup:
	dd if=/dev/zero of=${IMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${IMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}

rdsetroot:	${TOP}/../common/elfrdsetroot.c
	${HOSTCC} -o rdsetroot \
	    ${TOP}/../common/elfrdsetroot.c ${TOP}/../common/elf32.c \
	    ${TOP}/../common/elf64.c

unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}

.PRECIOUS:      ${IMAGE}

.ifdef RELEASEDIR
install:
	cp ${BSD_RD} ${RELEASEDIR}
.endif

${CBIN}.conf: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CBIN}.conf
	crunchgen -E -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${CBIN}.conf

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk all

#${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
#	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all

do_files:
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.conf ${CBIN}.mk ${CBIN}.cache \
	    lib*.a lib*.olist ${CBIN}.map \
	    *.o *.lo *.c bsd ${BSD_RD} rdsetroot

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.32
log
@Disable SRCLIBDIR crunchgen feature on gcc 3 platforms; gcc 3 collect2 does
not behave the way crunchgen expects it to. Will hopefully get fixed soon.
Discussed with guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2013/10/15 22:46:52 deraadt Exp $
@


1.31
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2013/10/14 00:00:10 guenther Exp $
d81 4
a84 1
	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all
@


1.30
log
@Turn on the distrib lib bits in crunchgen by setting SRCLIBDIR.
Add the new files to the clean target's rm list.

"why not get it tested?" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2013/02/02 13:36:05 miod Exp $
d91 1
a91 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.conf ${CBIN}.mk ${CBIN}.cache \
@


1.29
log
@mvme68k ELF bits. Boot block updates heavily based upon the recent mvme88k
a.out->ELF transition.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2011/04/18 16:52:10 thib Exp $
d81 1
a81 1
	${MAKE} -f ${CBIN}.mk all
d92 1
@


1.28
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2011/04/15 03:11:22 deraadt Exp $
d58 4
a61 2
rdsetroot:	${TOP}/../common/rdsetroot.c
	${HOSTCC} -o rdsetroot ${TOP}/../common/rdsetroot.c
d78 1
a78 1
	crunchgen -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${CBIN}.conf
@


1.27
log
@No need to make depend kernels; ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2011/03/14 19:07:46 deraadt Exp $
d15 1
a15 1
VND?=		svnd0
@


1.26
log
@unify a chunk
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2009/04/17 03:58:54 deraadt Exp $
d39 1
a39 1
	    ${MAKE} clean && ${MAKE} depend && ${MAKE}
@


1.25
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2009/04/12 16:12:53 deraadt Exp $
d90 1
a90 2
	*.o *.lo *.c bsd ${BSD_RD} \
	rdsetroot
@


1.24
log
@run make depend for kernel, too; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2008/12/02 03:20:57 deraadt Exp $
d67 1
d69 2
a70 1
	cp ${BSD_RD} ${DESTDIR}/snapshot/${BSD_RD}
d85 1
a85 1
	    sh ${UTILS}/runlist.sh ${LISTS}
@


1.23
log
@commit with rdsetroot now accepting the filesystem as a 2nd arg
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2008/12/02 01:01:07 deraadt Exp $
d39 1
a39 1
	    ${MAKE} clean && ${MAKE}
@


1.22
log
@no longer need to compile rdsetroot with DEBUG
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2008/01/11 10:16:40 espie Exp $
d31 1
a31 1
	${.OBJDIR}/rdsetroot ${BSD_RD} < ${IMAGE}
@


1.21
log
@cleanup: make -> ${MAKE} consistenly.
zap extra subshells.

okay miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2007/06/17 00:28:21 deraadt Exp $
d59 1
a59 1
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/../common/rdsetroot.c
@


1.20
log
@Stop using disklabel -r.  The disklabel code does not know all the semantics
for pushing disklabels onto the disk (and besides that, it is buggy and
unreadable crap); thanks for help from krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2007/04/13 17:34:40 millert Exp $
d39 1
a39 1
	    make clean && make
d77 1
a77 1
	make -f ${CBIN}.mk all
@


1.19
log
@Update install media generation to the new semantics of the -c flag.
Also replace "newfs -O" with "newfs -O 0" now that -O takes an option.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2004/12/11 14:04:11 martin Exp $
d48 1
a48 1
	disklabel -w -r ${VND} ${DISKTYPE}
@


1.18
log
@don't clean bsdmix and bsdofw

'feel free to remove' miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2002/12/18 11:03:08 miod Exp $
d25 1
a25 1
NEWFSARGS= -t ffs -m 0 -o space -u 32 -c 16
@


1.17
log
@Do not clean too far.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2002/06/09 05:53:54 todd Exp $
d88 1
a88 1
	*.o *.lo *.c bsd bsdmix bsdofw ${BSD_RD} \
@


1.16
log
@knf
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2002/04/30 09:18:20 deraadt Exp $
d88 1
a88 1
	*.o *.lo *.c bsd bsdmix bsdofw ${BSD_RD} ${BSDOFW_RD} ${BSDMIX_RD} \
@


1.15
log
@use makeconf.awk throughout, delete instbin in Makefile
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2002/04/28 18:28:34 deraadt Exp $
d45 1
a45 1
rd_setup: 
@


1.14
log
@use single shared mtree.conf
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2002/04/25 22:10:28 deraadt Exp $
d84 1
@


1.13
log
@runlist.sh & list2sh.awk unification
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2002/04/17 01:59:57 deraadt Exp $
d13 1
a13 1
MTREE=		${.CURDIR}/mtree.conf
@


1.12
log
@use the very small RAMDISK config; bring this up to modern times.  needs a few tests
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2001/05/11 15:23:09 deraadt Exp $
d82 2
a83 1
	    REV=${REV} TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh ${LISTS}
@


1.11
log
@unify a.out rdsetroot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2000/01/24 04:50:26 smurph Exp $
d37 2
a38 2
	cd ${.CURDIR}/../../../sys/arch/mvme68k/conf && config MINIROOT
	cd ${.CURDIR}/../../../sys/arch/mvme68k/compile/MINIROOT && \
d41 1
a41 1
	cp ${.CURDIR}/../../../sys/arch/mvme68k/compile/MINIROOT/bsd bsd
@


1.10
log
@Clean up mvme68k install utils and remdisk.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 1995/07/18 04:13:06 briggs Exp $
d58 2
a59 2
rdsetroot:	${TOP}/common/rdsetroot.c
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/common/rdsetroot.c
@


1.9
log
@Don't specify disktype to newfs when we already have a label.
@
text
@d1 1
a1 2
#	$OpenBSDBSD: Makefile,v 1.1 1995/07/18 04:13:06 briggs Exp $
#	$NetBSD: Makefile,v 1.1 1995/07/18 04:13:06 briggs Exp $
d6 1
d8 3
a10 2
CRUNCHCONF?=	 ${.CURDIR}/${CBIN}.conf
BASE=mr
d13 1
a14 1
#FS=		ramdisk.fs
a19 2
REALIMAGE!=	echo /tmp/image.${PID}
LISTFLOPPY=	${.CURDIR}/list_ramdisk
a20 1
.include "Makefile.inc"
d22 4
a25 1
all:	bsd.rd
d27 1
a27 20
#${FS}:	bsd.gz
#	dd if=/dev/zero of=${REALIMAGE} count=4096
#	vnconfig -v -c ${VND} ${REALIMAGE}
#	disklabel -w ${VND} rdroot
#	newfs -m 0 -o space -i 8192 -c 80 ${VND_RDEV}
#	mount ${VND_DEV} ${MOUNT_POINT}
#	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
#	    TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh ${LISTFLOPPY}
#	/usr/mdec/installboot -v /mnt/boot ${DESTDIR}/usr/mdec/biosboot ${VND_CRDEV}
#	@@echo ""
#	@@df -i ${MOUNT_POINT}
#	@@echo ""
#	umount ${MOUNT_POINT}
#	vnconfig -u ${VND}
#	cp ${REALIMAGE} ${FS}

DISKTYPE=	rdroot
NBLKS=		4096
# old format, minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -t ffs -m 0 -o space -u 32 -c 16
d29 3
a31 2
bsd.gz: bsd.rd
	gzip -c9 bsd.rd > bsd.gz
d33 1
a33 3
bsd.rd: ${IMAGE} bsd rdsetroot
	cp bsd bsd.rd
	${.CURDIR}/${__objdir}/rdsetroot bsd.rd < ${IMAGE}
d36 1
d40 1
d43 1
a43 1
${IMAGE}: ${CBIN} rd_setup do_files rd_teardown
d45 4
a48 4
rd_setup: ${CBIN}
	dd if=/dev/zero of=${REALIMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${DISKTYPE}
a56 2
	cp ${REALIMAGE} ${IMAGE}
	rm ${REALIMAGE}
a63 1
	-/bin/rm -f ${IMAGE}
d68 23
a90 1
	cp bsd.rd ${DESTDIR}/snapshot/bsd.rd
@


1.8
log
@make depend (in this case) is a total waste of time
@
text
@d30 1
a30 1
#	newfs -m 0 -o space -i 8192 -c 80 ${VND_RDEV} rdroot
d66 1
a66 1
	newfs ${NEWFSARGS} ${VND_RDEV} ${DISKTYPE}
@


1.7
log
@Use svnds and remove ugly cache flushing
@
text
@d57 1
a57 1
	    make clean && make depend && make
@


1.6
log
@do not build a filesystem containing a bsd containing a ramdisk.
instead, build simply a bsd containing a ramdisk.
people can netboot this :-)
@
text
@d1 1
d14 1
a14 1
VND?=		vnd0
a33 3
#	sync
#	cat /*bin/* > /dev/null
#	sync
a37 3
#	sync
#	cat /*bin/* > /dev/null
#	sync
a71 3
	sync
	cat /*bin/* > /dev/null
	sync
@


1.5
log
@clean up and add missing file from previous commit
@
text
@d6 14
a19 8
IMAGE=		miniroot-${REV}.fs
CRUNCHCONF?=    ${.CURDIR}/${CBIN}.conf
BASE=miniroot

MOUNT_POINT=	/mnt1
BDEV=		/dev/rd0a
CDEV=		/dev/rrd0a
RDEV=		/dev/rd0c
d21 1
a21 1
KERNEL=		${SRCSYSDIR}/arch/mvme68k/compile/MINIROOT/bsd
d23 1
a23 2
all: ${CBIN} ${IMAGE}
	@@echo "all done"
d25 21
a45 1
.include "Makefile.inc"
d47 2
a48 2
DISKTYPE=       rdroot
NBLKS=          4096
d50 1
a50 11
#NEWFSARGS= -t ffs -m 0 -o space -u 32 -c 16

${IMAGE}:	do_prep do_mount do_files do_umount_copy do_unconfig
	mv -f ${IMAGE}.tmp ${IMAGE}
	if [ -e rd.pid ] ; then \
	kill `< rd.pid`; \
	rm rd.pid;\
	fi

rdsetroot:	${TOP}/common/rdsetroot.c
	${HOSTCC} -o rdsetroot ${TOP}/common/rdsetroot.c
d52 2
a53 2
setroot: ${IMAGE} bsd 
	rdsetroot bsd < ${IMAGE}
d55 19
a73 2
bsd:	${KERNEL}
	cp ${KERNEL} bsd
d75 1
a75 18
writetape:
	echo rewinding tape < /dev/rst0
	buffer -i /usr/mdec/stboot -o /dev/nrst0
	buffer -i /usr/mdec/bootst -o /dev/nrst0
	buffer -B -p75 -i bsd -o /dev/nrst0
	echo rewinding tape < /dev/rst0


do_prep: ${CBIN} do_unconfig
	sh ${.CURDIR}/start_rdconfig.sh ${RDEV} ${NBLKS}
	disklabel -w ${RDEV} ${DISKTYPE}
	
do_mount:
	-newfs ${NEWFSARGS} -s ${NBLKS} ${CDEV} ${DISKTYPE}
	mount ${BDEV} ${MOUNT_POINT}
 
do_umount_copy:
	@@echo ""
d77 3
a79 1
	@@echo ""
d81 3
a83 8
	dd if=${CDEV} of=${IMAGE}.tmp bs=4b count=`expr ${NBLKS} / 4 `

do_unconfig:
	-umount ${MOUNT_POINT}
	if [ -e rd.pid ] ; then \
	kill `< rd.pid`; \
	rm rd.pid; \
	fi
d85 2
d88 4
a91 1
.PRECIOUS:	${IMAGE}
d93 1
d95 2
@


1.4
log
@Add the final? pieces to support mvme68k ramdisk support.
uses rdsetroot to create a ramdisk in a kernel image.
@
text
@d37 2
a38 2
setroot: bsd
	rdsetroot bsd < miniroot-12.fs
@


1.3
log
@Add new style of miniroot building. primarily based on the distrib/miniroot
code.
@
text
@d11 5
a15 3
BDEV=		/dev/vnd0a
CDEV=		/dev/rvnd0a
RDEV=		/dev/vnd0c
d34 17
d52 2
a53 4
	#sh ${.CURDIR}/start_rdconfig.sh ${CDEV} ${NBLKS}
	dd if=/dev/zero of=${IMAGE} bs=1k count=2048
	vnconfig -cv ${RDEV} ${IMAGE}
	disklabel -r -w ${RDEV} ${DISKTYPE}
d56 1
a56 1
	-newfs ${NEWFSARGS} -s ${NBLKS} ${BDEV} ${DISKTYPE}
d68 5
a72 1
	-vnconfig -u ${RDEV}
@


1.2
log
@Removal of the sun3 pieces of the miniroot build mechanism.
Prepare for new setroot version.
@
text
@d1 1
a1 1
#	$NetBSD: Makefile,v 1.3 1995/11/21 21:19:14 gwr Exp $
a4 1
# This include just sets REV=XX
d6 8
d15 2
a16 2
IMAGE=	ramdisk
CBIN=	rd_bin
d18 1
a18 1
TREE=	${TOP}/common/${IMAGE}.tree
d20 2
a21 12
LISTS=	${TOP}/common/${CBIN}.list \
	${TOP}/common/${IMAGE}.list

KERNEL=${SRCSYSDIR}/arch/sun3/compile/RAMDISK/netbsd

MOUNT_POINT=	/mnt
BDEV=		/dev/rd0
CDEV=		/dev/rd0

# These are all the parameters for the root fs: (256K)
DISKTYPE=	rdroot
NBLKS=		512
d23 1
a23 8
NEWFSARGS= -O -m 0 -o space -i 2048 -t 2 -u 16 -c 16

CLEANFILES= netbsd-rd rdsetroot ${IMAGE}.fs

netbsd-rd : rdsetroot ${IMAGE}.fs
	cp ${KERNEL} netbsd-tmp
	./rdsetroot  netbsd-tmp < ${IMAGE}.fs
	-mv -f netbsd-tmp $@@
d25 15
a39 5
rdsetroot: ${TOP}/common/rdsetroot.c
	$(CC) -o $@@ -DDEBUG ${TOP}/common/rdsetroot.c

${IMAGE}.fs: ${TREE} ${LISTS} ${CBIN}
	-newfs ${NEWFSARGS} -s ${NBLKS} ${CDEV} ${DISKTYPE}
d41 2
a42 5
	mtree -def ${TREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} \
	  OBJDIR=${.OBJDIR} TARGDIR=${MOUNT_POINT} \
	  sh ${TOP}/common/RunList.sh ${LISTS}
	sync
d47 1
a47 1
	dd if=${CDEV} of=$@@ count=${NBLKS}
d49 3
a51 8
# Do not delete this if I change my mind and kill make...
.PRECIOUS: ${IMAGE}.fs

# Rules for making ${CBIN} ...
.include "${TOP}/common/Make.crunch"

# This is listed in rd_bin.conf but is built here.
${CBIN} : libhack.o
d53 1
a53 3
# Use stubs to eliminate some large stuff from libc
HACKSRC=${TOP}/../utils/libhack
.include "${HACKSRC}/Makefile.inc"
a54 3
clean cleandir:
	-rm -f a.out core *.core *.o
	-rm -f ${CLEANFILES}
a55 2
# Standard rules needed by the above...
.include <bsd.obj.mk>
@


1.1
log
@first cut, copied from sun3 stuff
@
text
@@
