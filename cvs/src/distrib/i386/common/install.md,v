head	1.72;
access;
symbols
	OPENBSD_6_1:1.72.0.4
	OPENBSD_6_1_BASE:1.72
	OPENBSD_6_0:1.70.0.4
	OPENBSD_6_0_BASE:1.70
	OPENBSD_5_9:1.70.0.2
	OPENBSD_5_9_BASE:1.70
	OPENBSD_5_8:1.64.0.4
	OPENBSD_5_8_BASE:1.64
	OPENBSD_5_7:1.60.0.2
	OPENBSD_5_7_BASE:1.60
	OPENBSD_5_6:1.58.0.4
	OPENBSD_5_6_BASE:1.58
	OPENBSD_5_5:1.57.0.2
	OPENBSD_5_5_BASE:1.57
	OPENBSD_5_4:1.55.0.4
	OPENBSD_5_4_BASE:1.55
	OPENBSD_5_3:1.55.0.2
	OPENBSD_5_3_BASE:1.55
	OPENBSD_5_2:1.54.0.2
	OPENBSD_5_2_BASE:1.54
	OPENBSD_5_1_BASE:1.53
	OPENBSD_5_1:1.53.0.4
	OPENBSD_5_0:1.53.0.2
	OPENBSD_5_0_BASE:1.53
	OPENBSD_4_9:1.50.0.2
	OPENBSD_4_9_BASE:1.50
	OPENBSD_4_8:1.49.0.2
	OPENBSD_4_8_BASE:1.49
	OPENBSD_4_7:1.47.0.2
	OPENBSD_4_7_BASE:1.47
	OPENBSD_4_6:1.47.0.4
	OPENBSD_4_6_BASE:1.47
	OPENBSD_4_5:1.33.0.4
	OPENBSD_4_5_BASE:1.33
	OPENBSD_4_4:1.33.0.2
	OPENBSD_4_4_BASE:1.33
	OPENBSD_4_3:1.30.0.2
	OPENBSD_4_3_BASE:1.30
	OPENBSD_4_2:1.29.0.4
	OPENBSD_4_2_BASE:1.29
	OPENBSD_4_1:1.29.0.2
	OPENBSD_4_1_BASE:1.29
	OPENBSD_4_0:1.28.0.6
	OPENBSD_4_0_BASE:1.28
	OPENBSD_3_9:1.28.0.4
	OPENBSD_3_9_BASE:1.28
	OPENBSD_3_8:1.28.0.2
	OPENBSD_3_8_BASE:1.28
	OPENBSD_3_7:1.24.0.4
	OPENBSD_3_7_BASE:1.24
	OPENBSD_3_6:1.24.0.2
	OPENBSD_3_6_BASE:1.24
	OPENBSD_3_5:1.22.0.2
	OPENBSD_3_5_BASE:1.22
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.17.0.2
	OPENBSD_3_3_BASE:1.17
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12;
locks; strict;
comment	@# @;


1.72
date	2017.01.22.23.43.54;	author rpe;	state Exp;
branches;
next	1.71;
commitid	T8Ujv1g6HeWswBdS;

1.71
date	2016.09.04.09.52.03;	author rpe;	state Exp;
branches;
next	1.70;
commitid	MluxzkKaq4wrtv84;

1.70
date	2016.02.08.17.28.08;	author krw;	state Exp;
branches;
next	1.69;
commitid	4nj4L34RoKX0PFN0;

1.69
date	2015.12.29.11.16.14;	author rpe;	state Exp;
branches;
next	1.68;
commitid	dPgVJD33gNmmCKz4;

1.68
date	2015.12.18.16.20.58;	author rpe;	state Exp;
branches;
next	1.67;
commitid	VkQ4KC1oXExBZv81;

1.67
date	2015.12.02.21.17.17;	author krw;	state Exp;
branches;
next	1.66;
commitid	qjXM8wxHbdPw7A4U;

1.66
date	2015.11.09.20.54.12;	author rpe;	state Exp;
branches;
next	1.65;
commitid	euu2kEavGhIGtt10;

1.65
date	2015.10.25.10.20.51;	author krw;	state Exp;
branches;
next	1.64;
commitid	hwNh1w1pPCoWC2Xa;

1.64
date	2015.06.02.19.54.06;	author rpe;	state Exp;
branches;
next	1.63;
commitid	zUqrjWrWSBxkCmbI;

1.63
date	2015.06.02.19.39.19;	author rpe;	state Exp;
branches;
next	1.62;
commitid	JUhqCleEkW5lHyMG;

1.62
date	2015.05.31.19.40.10;	author rpe;	state Exp;
branches;
next	1.61;
commitid	p6r5f9n0C0WoWNND;

1.61
date	2015.05.04.19.55.26;	author rpe;	state Exp;
branches;
next	1.60;
commitid	NyWrBKI5Tnb4FUEi;

1.60
date	2015.01.12.16.33.31;	author deraadt;	state Exp;
branches;
next	1.59;
commitid	A44BjxYQVmvEK2uf;

1.59
date	2014.08.15.09.45.54;	author rpe;	state Exp;
branches;
next	1.58;
commitid	1ay5nPocSGoegdY3;

1.58
date	2014.07.20.20.12.41;	author deraadt;	state Exp;
branches;
next	1.57;
commitid	6WWKcMEXNAUweNPh;

1.57
date	2014.01.20.05.14.05;	author jsing;	state Exp;
branches;
next	1.56;

1.56
date	2013.11.16.18.37.27;	author rpe;	state Exp;
branches;
next	1.55;

1.55
date	2012.10.15.17.21.03;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	2012.07.10.14.25.00;	author halex;	state Exp;
branches;
next	1.53;

1.53
date	2011.07.06.20.02.16;	author halex;	state Exp;
branches;
next	1.52;

1.52
date	2011.04.17.20.57.10;	author krw;	state Exp;
branches;
next	1.51;

1.51
date	2011.03.22.19.20.16;	author krw;	state Exp;
branches;
next	1.50;

1.50
date	2011.01.03.00.36.49;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	2010.08.08.21.06.06;	author krw;	state Exp;
branches;
next	1.48;

1.48
date	2010.08.08.17.02.14;	author krw;	state Exp;
branches;
next	1.47;

1.47
date	2009.06.11.17.05.06;	author deraadt;	state Exp;
branches;
next	1.46;

1.46
date	2009.06.11.04.28.50;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	2009.06.04.00.44.46;	author krw;	state Exp;
branches;
next	1.44;

1.44
date	2009.06.02.16.23.45;	author krw;	state Exp;
branches;
next	1.43;

1.43
date	2009.05.31.17.49.53;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2009.05.11.17.13.07;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2009.05.09.21.37.26;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2009.04.30.00.03.08;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	2009.04.25.03.21.51;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	2009.04.24.01.43.27;	author krw;	state Exp;
branches;
next	1.37;

1.37
date	2009.04.24.01.04.33;	author krw;	state Exp;
branches;
next	1.36;

1.36
date	2009.04.12.12.56.02;	author krw;	state Exp;
branches;
next	1.35;

1.35
date	2009.04.12.01.35.01;	author krw;	state Exp;
branches;
next	1.34;

1.34
date	2009.04.10.23.11.17;	author krw;	state Exp;
branches;
next	1.33;

1.33
date	2008.06.26.05.42.03;	author ray;	state Exp;
branches;
next	1.32;

1.32
date	2008.05.21.18.52.45;	author krw;	state Exp;
branches;
next	1.31;

1.31
date	2008.03.23.14.03.55;	author krw;	state Exp;
branches;
next	1.30;

1.30
date	2008.03.04.00.36.38;	author krw;	state Exp;
branches;
next	1.29;

1.29
date	2007.02.11.18.59.30;	author krw;	state Exp;
branches;
next	1.28;

1.28
date	2005.04.02.14.34.46;	author krw;	state Exp;
branches;
next	1.27;

1.27
date	2005.03.27.15.13.50;	author krw;	state Exp;
branches;
next	1.26;

1.26
date	2005.03.26.19.27.11;	author krw;	state Exp;
branches;
next	1.25;

1.25
date	2005.03.26.01.40.20;	author krw;	state Exp;
branches;
next	1.24;

1.24
date	2004.09.12.21.01.27;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2004.06.26.20.10.17;	author krw;	state Exp;
branches;
next	1.22;

1.22
date	2004.03.03.02.19.26;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2003.10.12.13.18.37;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.22.01.31.39;	author krw;	state Exp;
branches;
next	1.19;

1.19
date	2003.09.21.02.11.42;	author krw;	state Exp;
branches;
next	1.18;

1.18
date	2003.08.16.20.37.24;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2003.01.26.15.58.39;	author krw;	state Exp;
branches;
next	1.16;

1.16
date	2002.12.14.15.33.34;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2002.12.08.20.53.14;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2002.11.07.01.28.52;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2002.10.05.21.01.17;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2002.09.22.22.42.25;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2002.09.21.21.11.58;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2002.09.17.12.28.54;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2002.08.27.02.18.34;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.20.16.53.57;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.18.19.28.50;	author krw;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.18.17.56.03;	author krw;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.14.01.49.25;	author krw;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.09.21.54.46;	author krw;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.08.23.01.46;	author krw;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.28.14.44.01;	author krw;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.22.02.40.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.72
log
@Whitespaces ...
@
text
@#	$OpenBSD: install.md,v 1.71 2016/09/04 09:52:03 rpe Exp $
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# machine dependent section of installation/upgrade script.
#

MDXAPERTURE=2
MDXDM=y
NCPU=$(sysctl -n hw.ncpufound)

((NCPU > 1)) && { DEFAULTSETS="bsd bsd.rd bsd.mp"; SANESETS="bsd bsd.mp"; }

md_installboot() {
	if ! installboot -r /mnt ${1}; then
		echo "\nFailed to install bootblocks."
		echo "You will not be able to boot OpenBSD from ${1}."
		exit
	fi
}

md_prep_fdisk() {
	local _disk=$1 _q _d

	while :; do
		_d=whole
		if disk_has $_disk mbr; then
			fdisk $_disk
			if disk_has $_disk mbr openbsd; then
				_q=", use the (O)penBSD area"
				_d=OpenBSD
			fi
		else
			echo "MBR has invalid signature; not showing it."
		fi
		ask "Use (W)hole disk$_q or (E)dit the MBR?" "$_d"
		case $resp in
		[wW]*)
			echo -n "Setting OpenBSD MBR partition to whole $_disk..."
			fdisk -iy $_disk >/dev/null
			echo "done."
			return ;;
		[eE]*)
			# Manually configure the MBR.
			cat <<__EOT

You will now create a single MBR partition to contain your OpenBSD data. This
partition must have an id of 'A6'; must *NOT* overlap other partitions; and
must be marked as the only active partition.  Inside the fdisk command, the
'manual' command describes all the fdisk commands in detail.

$(fdisk ${_disk})
__EOT
			fdisk -e ${_disk}
			disk_has $_disk mbr openbsd && return
			echo No OpenBSD partition in MBR, try again. ;;
		[oO]*)
			[[ $_d == OpenBSD ]] || continue
			return ;;
		esac
	done
}

md_prep_disklabel() {
	local _disk=$1 _f=/tmp/i/fstab.$1

	md_prep_fdisk $_disk

	disklabel_autolayout $_disk $_f || return
	[[ -s $_f ]] && return

	# Edit disklabel manually.
	# Abandon all hope, ye who enter here.
	disklabel -F $_f -E $_disk
}

md_congrats() {
}

md_consoleinfo() {
	local _u _d=com

	for _u in $(scan_dmesg "/^$_d\([0-9]\) .*/s//\1/p"); do
		if [[ $_d$_u == $CONSOLE || -z $CONSOLE ]]; then
			CDEV=$_d$_u
			CPROM=com$_u
			CTTY=tty0$_u
			return
		fi
	done
}
@


1.71
log
@Move files created by root during install/upgrade in a subdir of
/tmp with proper permissions so that unprivileged programs can not
tamper with them.

positive feedback from deraadt
OK halex
@
text
@d1 1
a1 2
#	$OpenBSD: install.md,v 1.70 2016/02/08 17:28:08 krw Exp $
#
@


1.70
log
@If manual disklabel editing is requested during install, don't emit
verbiage explaining what disklabels are.

If you don't know, you should be using (A)uto!

ok rpe@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.69 2015/12/29 11:16:14 rpe Exp $
d92 1
a92 1
	local _disk=$1 _f=/tmp/fstab.$1
@


1.69
log
@Change patterns in case-blocks from a*|A* to [aA]*

OK halex@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.68 2015/12/18 16:20:58 rpe Exp $
d99 2
a100 12
	cat <<__EOT

You will now create an OpenBSD disklabel inside the OpenBSD MBR
partition. The disklabel defines how OpenBSD splits up the MBR partition
into OpenBSD partitions in which filesystems and swap space are created.
You must provide each filesystem's mountpoint in this program.

The offsets used in the disklabel are ABSOLUTE, i.e. relative to the
start of the disk, NOT the start of the OpenBSD MBR partition.

__EOT

@


1.68
log
@Introduce a new function disk_has() to inspect a disk if it has a
partition-table of a certain type and optionally if it has a partition
of a certain type.

Use disk_has() in the install.md script to replace all the various
"fdisk <disk> | grep <pattern>" commands greatly simplifying things.

positive feedback from sthen@@
"time to get it really tested" deraadt@@
OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.67 2015/12/02 21:17:17 krw Exp $
d65 1
a65 1
		w*|W*)
d70 1
a70 1
		e*|E*)
d84 1
a84 1
		o*|O*)
@


1.67
log
@If (O)penBSD is not offered as a partitioning option, do not accept
'O*|o*' as a valid response. Ignore it as we do other invalid input.

armv7 is special case to be handled separately.

Noticed by kettenis@@.

ok deraadt@@ rpe@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.66 2015/11/09 20:54:12 rpe Exp $
d54 1
a54 1
		if fdisk $_disk | grep -q 'Signature: 0xAA55'; then
d56 1
a56 1
			if fdisk $_disk | grep -q '^..: A6 '; then
d82 1
a82 1
			fdisk $_disk | grep -q ' A6 ' && return
@


1.66
log
@Fix commas in "Use (W)hole disk MBR..." question.

OK jmc@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.65 2015/10/25 10:20:51 krw Exp $
d84 3
a86 1
		o*|O*)	return ;;
@


1.65
log
@Use 'fdisk -i', instead of 'fdisk -e' with a here document of
'reinit;update;write;quit'. They've done the same thing for some
time now.

Tweaks & test from rpe@@.

ok rpe@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.64 2015/06/02 19:54:06 rpe Exp $
d57 1
a57 1
				_q=", use the (O)penBSD area,"
@


1.64
log
@Remove the $FSTABFLAG variable and use -F directly. The installer
uses disklabel UIDs unconditionally for a while already.

OK krw@@
"looks good" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.63 2015/06/02 19:39:19 rpe Exp $
d67 1
a67 6
			fdisk -e ${_disk} <<__EOT >/dev/null
reinit
update
write
quit
__EOT
@


1.63
log
@Replace
  [[ -n $(foo | grep 'bar') ]]
with
  foo | grep -q 'bar'

OK halex@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.62 2015/05/31 19:40:10 rpe Exp $
d114 1
a114 1
	disklabel $FSTABFLAG $_f -E $_disk
@


1.62
log
@Replace identical code in the MD scripts of the installer with a new
MI function disklabel_autolayout() which now handles all aspects of
the disklabel auto-layout and autopartitioning case for the root disk.
Remove get_disklabel_template() and merge it with the new function.

"move forward" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.61 2015/05/04 19:55:26 rpe Exp $
d54 1
a54 1
		if [[ -n $(fdisk $_disk | grep 'Signature: 0xAA55') ]]; then
d56 1
a56 1
			if [[ -n $(fdisk $_disk | grep '^..: A6 ') ]]; then
d87 1
a87 1
			[[ -n $(fdisk $_disk | grep ' A6 ') ]] && return
@


1.61
log
@Add the new template file based autopartitioning feature of disklabel(8)
to the OpenBSD installer. It is available during unattended installation.
The template file is fetched from an url, provided as answer to a new
question in the response file:

    URL to autopartitioning template for disklabel = url

Original diff from and OK henning@@
'no objection' krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.60 2015/01/12 16:33:31 deraadt Exp $
d95 1
a95 1
	local _disk=$1 _f _op
d99 2
a100 21
	_f=/tmp/fstab.$_disk
	if [[ $_disk == $ROOTDISK ]]; then
		if $AUTO && get_disklabel_template; then
			disklabel -T /disklabel.auto $FSTABFLAG $_f -w -A $_disk && return
			echo "Autopartitioning failed"
			exit 1
		fi
		while :; do
			echo "The auto-allocated layout for $_disk is:"
			disklabel -h -A $_disk | egrep "^#  |^  [a-p]:"
			ask "Use (A)uto layout, (E)dit auto layout, or create (C)ustom layout?" a
			case $resp in
			a*|A*)	_op=-w ;;
			e*|E*)	_op=-E ;;
			c*|C*)	break ;;
			*)	continue ;;
			esac
			disklabel $FSTABFLAG $_f $_op -A $_disk
			return
		done
	fi
@


1.60
log
@Enable lid suspends by default in the kernel, and remove the question from
the installer.  We used a full release cycle to learn that suspend/resume
is reliable enough for this default.  Personal policy can disable this using
machdep.lidsuspend=0 in /etc/sysctl.conf
ok more people begging, and less people whining
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.59 2014/08/15 09:45:54 rpe Exp $
d101 5
@


1.59
log
@Align install.md files with installer style.

- { foo ; bar ; } -> { foo; bar; }
- if foo ; then -> if foo; then

OK halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.58 2014/07/20 20:12:41 deraadt Exp $
a36 1
MDLID=y
@


1.58
log
@ask about lid
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.57 2014/01/20 05:14:05 jsing Exp $
d40 1
a40 1
((NCPU > 1)) && { DEFAULTSETS="bsd bsd.rd bsd.mp" ; SANESETS="bsd bsd.mp" ; }
d43 1
a43 1
	if ! installboot -r /mnt ${1} ; then
@


1.57
log
@Switch i386 installs/upgrades to the new installboot.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.56 2013/11/16 18:37:27 rpe Exp $
d37 1
@


1.56
log
@Remove AUTOROOT variable which is a leftover of r1.183 of install.sub

diff from Philipp e1c1bac6253dc54a1e89ddc046585792 at osteo dot net

ok krw@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.55 2012/10/15 17:21:03 deraadt Exp $
d42 1
a42 4
	# LBA biosboot uses /boot's i-node number. Using 'cat' preserves that
	# number, so multiboot setups (NTLDR) can work across upgrades.
	cat /mnt/usr/mdec/boot >/mnt/boot
	if ! /mnt/usr/mdec/installboot /mnt/boot /mnt/usr/mdec/biosboot ${1} ; then
@


1.55
log
@use the baseXX installed /usr/mdec directory instead of placing lots of
heavy boot media into the ramdisk.  i386 tested by okan, amd64 tested
by florian.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.54 2012/07/10 14:25:00 halex Exp $
d109 1
a109 1
			a*|A*)	_op=-w ; AUTOROOT=y ;;
@


1.54
log
@since disklabel -W is no more, zap it from all the install.md's

ok krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.53 2011/07/06 20:02:16 halex Exp $
d44 2
a45 2
	cat /usr/mdec/boot >/mnt/boot
	if ! /usr/mdec/installboot /mnt/boot /usr/mdec/biosboot ${1} ; then
@


1.53
log
@As non-mp install.md's neither set NCPU, nor will have a bsd.mp,
we could as well pull the 'mv bsd.mp bsd' and the associated checks
out of there.

ok deraadt@@ "makes sense" todd@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.52 2011/04/17 20:57:10 krw Exp $
a101 1
	disklabel -W $_disk >/dev/null 2>&1
@


1.52
log
@First crack at enabling the installation of a DUID version of
/etc/fstab, after asking user. Current default is existing behaviour.

Feedback & suggestions deraadt@@, halex@@, jsing@@, todd@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.51 2011/03/22 19:20:16 krw Exp $
a41 6
	if [[ -f /mnt/bsd.mp ]] && ((NCPU > 1)); then
		echo "Multiprocessor machine; using bsd.mp instead of bsd."
		mv /mnt/bsd /mnt/bsd.sp 2>/dev/null
		mv /mnt/bsd.mp /mnt/bsd
	fi

@


1.51
log
@Pay attention to result of amd64/i386 installboot(8).  Warn user
when they won't be able to boot the installed root disk.  Move
installboot invocation to just before congratulation on sucess is
emitted. Thus the installed partition will be 'complete' if it ever
is booted.

"go for it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.50 2011/01/03 00:36:49 deraadt Exp $
d121 1
a121 1
			disklabel -f $_f $_op -A $_disk
d138 1
a138 1
	disklabel -f $_f -E $_disk
@


1.50
log
@reduce the amount of cd'ing in the install script, since it sucks
to change the environment that functions assume they run in.  use
sub-shells or absolute paths when possible.
ok krw
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.49 2010/08/08 21:06:06 krw Exp $
d51 5
a55 1
	/usr/mdec/installboot /mnt/boot /usr/mdec/biosboot ${1}
@


1.49
log
@Revert auto-enabling of apm. Some security implications were not
fully appreciated, and no time to work through them.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.48 2010/08/08 17:02:14 krw Exp $
d42 1
a42 2
	cd /mnt
	if [[ -f bsd.mp ]] && ((NCPU > 1)); then
d44 2
a45 2
		mv bsd bsd.sp 2>/dev/null
		mv bsd.mp bsd
@


1.48
log
@Look for MD devices or assurance that apmd would be a useful thing to
run. If found, add "apmd_flags=" installed rc.conf.local. Suggested by
deraadt@@.

i386/apm test by kettenis@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.47 2009/06/11 17:05:06 deraadt Exp $
a36 1
MDAPMD="^apm0 |^acpi0: sleep .* S3"
@


1.47
log
@extra space
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.46 2009/06/11 04:28:50 deraadt Exp $
d37 1
@


1.46
log
@Do not show MBRs without the correct signature, instead say they are
bogus and provide less options to the user
ok krw
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.45 2009/06/04 00:44:46 krw Exp $
d141 1
a141 1
md_consoleinfo () {
@


1.45
log
@Nuke now superfluous ARCH=ARCH lines in install.md and the sed processing of
those lines in list2sh.awk.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.44 2009/06/02 16:23:45 krw Exp $
d59 7
a65 4
		fdisk $_disk
		if [[ -n $(fdisk $_disk | grep ' A6 ') ]]; then
			_q=" use the (O)penBSD area,"
			_d=OpenBSD
d67 1
a67 2
			_q=
			_d=whole
d69 1
a69 1
		ask "Use (W)hole disk,$_q or (E)dit the MBR?" "$_d"
@


1.44
log
@Add '-h' flag, and '*' as a unit specifier for 'p' Editor command.
Both cause partition sizes to be displayed using a human readable
format with the units automatically chosen by looking at the smallest
partition in the disk label. Remove forceable humanization in 'A'
code and use '-h' in install scripts.

Prodded & ok deraadt@@, verbiage tweaks from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.43 2009/05/31 17:49:53 deraadt Exp $
a36 1
ARCH=ARCH
@


1.43
log
@Make bootblock installation as silent as possible by default.  While
there, remove a lot of cruft from the various md_installboot functions
ok halex
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.42 2009/05/11 17:13:07 deraadt Exp $
d109 1
a109 1
			disklabel -A $_disk | egrep "^#  |^  [a-p]:"
@


1.42
log
@Remind people that mountpoints must now be entered using the disklabel
command; the script does not ask afterwards.  Note I am not adjusting
the macppc or sgi install.md scripts.  I ask their maintainers to clean
them before I will maintain them further.  Please
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.41 2009/05/09 21:37:26 deraadt Exp $
d53 1
a53 1
	/usr/mdec/installboot -v /mnt/boot /usr/mdec/biosboot ${1}
@


1.41
log
@remove some chatty disklabel stuff
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.40 2009/04/30 00:03:08 deraadt Exp $
d127 1
@


1.40
log
@Redo the fdisk handling for MBR-only architectures (macppc has to get
caught up one day, but that is not my battle).  Hope people like this
tested by oga, ok krw
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.39 2009/04/25 03:21:51 deraadt Exp $
a49 1
	echo Installing boot block...
a53 1
	echo "done."
@


1.39
log
@If the right conditions exist, ask if xdm should be started automatically.
Yes, there are machines where you X needs configuration, but let us be
realistic about it: THAT IS AN X BUG.  And there are machines where getty
and xdm fight: THAT IS A CONSOLE DRIVER BUG.  And this commit is going to
force those bugs to eventually matter enough so that they get fixed.   Just
watch.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.38 2009/04/24 01:43:27 krw Exp $
d59 1
a59 1
	local _disk=$1
d61 14
a74 4
	ask_yn "Do you want to use *all* of $_disk for OpenBSD?"
	if [[ $resp == y ]]; then
		echo -n "Putting all of $_disk into an active OpenBSD MBR partition (type 'A6')..."
		fdisk -e ${_disk} <<__EOT >/dev/null
d80 5
a84 6
		echo "done."
		return
	fi

	# Manually configure the MBR.
	cat <<__EOT
d88 2
a89 10
must be marked as the only active partition.

The 'manual' command describes all the fdisk commands in detail.

$(fdisk ${_disk})
__EOT
	fdisk -e ${_disk}

	cat <<__EOT
Here is the partition information you chose:
d93 6
@


1.38
log
@Remove magic 'bsd.mp -> bsd' linking for the moment as it confuses
subsequent upgrades.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.37 2009/04/24 01:04:33 krw Exp $
d36 1
@


1.37
log
@Move bsd.mp juggling into relevant MD files. Make bsd.mp a default
selection on multi-processor machines. Make bsd.mp a sanity check
item on multi-processor machines.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.36 2009/04/12 12:56:02 krw Exp $
a46 1
		ln -sf bsd bsd.mp
@


1.36
log
@Tweak pattern used to select partition lines for display so the
'# /dev/r...' line is not selected.

Noticed by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.35 2009/04/12 01:35:01 krw Exp $
d37 3
d42 8
@


1.35
log
@No longer need '-f' or '-p' when displaying layout. A few patterns
missed the '# size offset ...' line at the top of the partition
list.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.34 2009/04/10 23:11:17 krw Exp $
d93 1
a93 1
			disklabel -A $_disk | egrep "^#|^  [a-p]:"
@


1.34
log
@Where appropriate display the auto-allocation layout of the root
disk and ask if the installee wants to use it, edit it, or create
their own custom disklabel. Most one-disk installs will not need
to see fdisk or disklabel.

i386 and macppc by me, adapted for others by deraadt@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.33 2008/06/26 05:42:03 ray Exp $
d93 1
a93 1
			disklabel -f $_f -p g -A $_disk | grep "^  [a-p]:"
@


1.33
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.32 2008/05/21 18:52:45 krw Exp $
d84 1
a84 1
	local _disk=$1
d88 18
d117 1
a117 2
	disklabel -W $_disk >/dev/null 2>&1
	disklabel -f /tmp/fstab.$_disk -E $_disk
@


1.32
log
@pccom is dead. long live com. Bring install script into the new world.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.31 2008/03/23 14:03:55 krw Exp $
a17 7
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
@


1.31
log
@No point in warning users during install that the disklabel has a
weird number of partitions, doesn't checksum, doesn't exist or was
found at a particular sector. Brings all archs together in omerta by
eliminating use of '-r' and examination of disklabel messages.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.30 2008/03/04 00:36:38 krw Exp $
d114 1
a114 1
	local _u _d=pccom
@


1.30
log
@Redo serial console configuration logic. Smaller, easier to
understand.

Add serial console handling for alpha, macppc, zaurus.  No functional
change for i386/amd64.

All archs should now have automatic serial console configuration.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.29 2007/02/11 18:59:30 krw Exp $
a53 14
# $1 is the disk to check
md_checkfordisklabel() {
	local rval=0

	disklabel -r $1 >/dev/null 2>/tmp/checkfordisklabel

	if grep "disk label corrupted" /tmp/checkfordisklabel; then
		rval=2
	fi >/dev/null 2>&1

	rm -f /tmp/checkfordisklabel
	return $rval
}

a104 6

	md_checkfordisklabel $_disk
	case $? in
	2)	echo "WARNING: Label on disk $_disk is corrupted. You will be repairing it.\n"
		;;
	esac
@


1.29
log
@Nuke MDFSTYPE and MDFSOPTS, 'mount -t ...' and giving the user the
option to choose a filesystem type when mounting a disk. Rely on the
filesystem information provided by the disklabel.

When there is only one usable partition on the selected disk, just
mount it without bothering the user with a question.

Ensure that msdos filesystems are mounted with '-s' so that the names
of the install sets will be in lower case and thus visible to the
script.

msdos problems noted by Rodolfo Gouveia, who did a lot of testing and
debugging. 'mount -t ...' silliness pointed out by deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.28 2005/04/02 14:34:46 krw Exp $
a42 1
MDSERIAL="pccom com tty0"
d131 13
@


1.28
log
@Scrounge a few more characters of whitespace, mostly to be consistant.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.27 2005/03/27 15:13:50 krw Exp $
a41 2
MDFSTYPE=msdos
MDFSOPTS=-s
@


1.27
log
@Use new skeleton kbd(8) '-l' to generalize kbd(8) use.  Eliminate
fixed list of available maps and machine dependant md_set_term()
functions.

Any ramdisk with /sbin/kbd present (amd64, cats, i386 at the moment)
will now present list of available keyboard encodings.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.26 2005/03/26 19:27:11 krw Exp $
d52 1
a52 1
	cat /usr/mdec/boot > /mnt/boot
d77 1
a77 1
		fdisk -e ${_disk} << __EOT > /dev/null
d88 1
a88 1
	cat << __EOT
d100 1
a100 1
	cat << __EOT
d112 1
a112 1
	cat << __EOT
@


1.26
log
@Simplify/shrink kbd(8) logic and verbiage. Always ask for best kbd(8)
table.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.25 2005/03/26 01:40:20 krw Exp $
a45 1

a46 11

md_set_term() {
	local _tables="be br de dk es fr it jp no sf sg sv uk us"

	ask_yn "Are you using a USB keyboard?"
	[[ $resp == n ]] && _tables="$_tables pt ru ua"
	_tables=$(bsort $_tables)

	ask_which "kbd(8) table" "best matches your keyboard" "$_tables" us
	[[ $resp != @@(done|us) ]] && kbd $resp && echo $resp >/tmp/kbdtype
}
@


1.25
log
@Start some delayed cleanup and shrinkage. Today: ': ;' -> ':;' in
while statements.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.24 2004/09/12 21:01:27 deraadt Exp $
d50 1
a50 1
	local _tables
d52 3
a54 2
	ask_yn "Do you wish to select a keyboard encoding table?"
	[[ $resp == n ]] && return
d56 2
a57 38
	while :; do
		ask "Select your keyboard type: (P)C-AT/XT, (U)SB or 'done'" P
		case $resp in
		P*|p*)  _tables="be br de dk es fr it jp lt no pt ru sf sg sv ua uk us"
			;;
		U*|u*)	_tables="be br de dk es fr it jp no sf sg sv uk us"
			;;
		done)	;;
		*)	echo "'$resp' is not a valid keyboard type."
			resp=
			continue
			;;
		esac
		break;
	done

	[ -z "$_tables" ] && return

	while :; do
		cat << __EOT
The available keyboard encoding tables are:

	${_tables}

__EOT
		ask "Table name? (or 'done')" us
		case $resp in
		done)	;;
		*)	if kbd $resp ; then
				echo $resp > /tmp/kbdtype
			else
				echo "'${resp}' is not a valid table name."
				continue
			fi
			;;
		esac
		break;
	done
@


1.24
log
@add br keymap; from miod
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.23 2004/06/26 20:10:17 krw Exp $
d55 1
a55 1
	while : ; do
d73 1
a73 1
	while : ; do
@


1.23
log
@Allow change of default console to first serial device during install. Used in
i386 only at this time.

ok beck@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.22 2004/03/03 02:19:26 krw Exp $
d60 1
a60 1
		U*|u*)	_tables="br de dk es fr it jp no sf sg sv uk us"
@


1.22
log
@Use 'cat' rather than 'cp' to put /boot on disk. This preserves
/boot's i-node number and allows multiboot (NTLDR) setups to work
across upgrades. Suggested by Tom Cosgrove and Todd Miller.

NOTE: Will only work if preserved biosboot is an LBA biosboot. i.e.
won't work for 3.4 -> 3.5 upgrade because LBA biosboot went in
post-3.4.

ok millert@@ deraadt@@ tom@@ nick@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.21 2003/10/12 13:18:37 krw Exp $
d45 2
@


1.21
log
@Cleanup and shrinkage:

1) Eliminate 'WARNING: Disk xxx has no label.' message. When installing OpenBSD
this is a normal condition not worth commenting on. From some discussion on
hackers/icb.

2) Use consistant verbiage and case statement when checking the disklabel.

3) Consistantly suppress output of 'disklabel -W', reducing duplicate messages
like '# using MBR partition ...' which are issued again when the 'disklabel -f
...' command is executed.

4) Usual code rectifications - eliminate extra {}'s, multiple echos
elimination, etc.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.20 2003/09/22 01:31:39 krw Exp $
d95 3
a97 1
	cp /usr/mdec/boot /mnt/boot
@


1.20
log
@Introduce a function ask_yn() to use when asking 'yes or no'
questions.

ask_yn() always returns a 'y' or 'n' in $resp, vastly simplifying the
logic used to check the user response.

ask_yn() insists on the user responding with a 'y', 'n', 'yes', or
'no'. Case is ignored.

Previously almost any input was accepted as either a yes or a no
depending on the question. ask_yn() reduces the chance of user error,
e.g.  by answering the next question (default route) instead of the
posed one (Use DNS server now?).

All 'yes or no' questions now use ask_yn(). All questions show the
full default answer, i.e. 'yes' or 'no' rather than 'y' or 'n'.

Some minor logic cleanups of the usual sort, but no changes to logic
flow or questions bar minor verbiage adjustment.

Inspired by a Bob Beck install nit.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.19 2003/09/21 02:11:42 krw Exp $
d106 1
a106 3
	if grep "no disk label" /tmp/checkfordisklabel; then
		rval=1
	elif grep "disk label corrupted" /tmp/checkfordisklabel; then
d168 1
a168 6
	0)	;;
	1)	echo WARNING: Disk $_disk has no label. You will be creating a new one.
		echo
		;;
	2)	echo WARNING: Label on disk $_disk is corrupted. You will be repairing.
		echo
d172 2
a173 1
	disklabel -f /tmp/fstab.${_disk} -E ${_disk}
@


1.19
log
@Fix extraneous display of grep output when searching disklabel output for
error information. Previously things like:

disklabel: no disk label
WARNING: Disk wd0 has no disk label. You will be creating a new one.

would be printed. Now the 'disklabel: no disk label' message is correctly
sent to /dev/null.

Take the opportunity to clean up a bit of code and formatting, making all
the md_checkfordisklabel() functions as identical as possible.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.18 2003/08/16 20:37:24 krw Exp $
d50 2
a51 1
	ask "Do you wish to select a keyboard encoding table?" n
a52 7
	case $resp in
	Y*|y*)	;;
	*)	return
		;;
	esac

	resp=
d116 2
a117 3
md_prep_fdisk()
{
	local _disk=$1 _whole=$2
d119 2
a120 1
	if [ -n "$_whole" ]; then
d152 1
a152 2
md_prep_disklabel()
{
d155 1
a155 5
	ask "Do you want to use *all* of $_disk for OpenBSD?" no
	case $resp in
	y*|Y*)	md_prep_fdisk ${_disk} Y ;;
	*)	md_prep_fdisk ${_disk} ;;
	esac
@


1.18
log
@Minor cosmetic cleanup.

Use '<msg>...done.' consistantly by replacing last five varient uses. Out with
'<msg> ... done.', '<msg>...Done.', etc.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.17 2003/01/26 15:58:39 krw Exp $
d106 1
d108 3
a110 2
	# $1 is the disk to check
	local rval
a111 1
	disklabel -r $1 > /dev/null 2> /tmp/checkfordisklabel
d116 1
a116 3
	else
		rval=0
	fi
@


1.17
log
@Mount msdos filesystems with -s (shortnames) rather than -l
(longnames). This ensures the install sets are listed in lowercase and
are thus visible to the install/upgrade scripts.

Installing/upgrading from sets on msdos partitions should now work
(again?).

Problem noticed by Michael Lucas.

deraadt@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.16 2002/12/14 15:33:34 krw Exp $
d103 1
a103 1
	echo "...done."
@


1.16
log
@Expunge some trailing whitespace.

From David Krause.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.15 2002/12/08 20:53:14 krw Exp $
d43 1
a43 1
MDFSOPTS=-l
@


1.15
log
@Add 'br' (Brazil) to displayed list of keyboard encoding tables.

From Pedro Bastos.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.14 2002/11/07 01:28:52 krw Exp $
d173 1
a173 1
into OpenBSD partitions in which filesystems and swap space are created. 
@


1.14
log
@Treat 'bsd' like just another filename in THESETS, no more 'kernel'
logic.  As result, MDSETS gone from everything but mac68k.

MDSETS now treated as a list of complete file names to add to THESETS,
allowing more MD flexibility, i.e. may or may not be .tgz files.

All traces of tar.gz removed. Not used for sets since 2.7 or so. As a
result of code simplification from not having to consider tar.gz, the
functions get_sets(), make_lastset(), and set_not_done() are
eliminated, along with the global SETS.

Build THESETS and DEFAULTSETS to contain full file names.

Always install sets in the order they appear in THESETS, keeping
siteXX last but without needing special logic. More predictable for
user if a lot of set additions and removals done before being
satisfied, as the sets are now installed in the same order they appear
in the selection list.

Remove ability to look for non-set .tgz/.tar.gz files. The job of the
install scripts is to install the standard sets in a simple and
rational way. Not to install general tar balls. The user can do that
post-install or simply '!' out to do it during install. On their head
be it.

If no sets are found in a specified source, list the filenames in
THESETS to show what is being looked for.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.13 2002/10/05 21:01:17 krw Exp $
d62 1
a62 1
		P*|p*)  _tables="be de dk es fr it jp lt no pt ru sf sg sv ua uk us"
d64 1
a64 1
		U*|u*)	_tables="de dk es fr it jp no sf sg sv uk us"
@


1.13
log
@Fix a typo ('Your' -> 'You'). Spotted by Julien Bordet.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.12 2002/09/22 22:42:25 krw Exp $
a41 2
# Machine-dependent install sets
MDSETS=kernel
@


1.12
log
@Do not allow install to proceed until root filesystem can be mounted on
$ROOTDEV and ${ROOTDISK}b can be used for swap.  Also shortens output
generated during (successful) install.

Fix problem with upgrade on systems with many disk devices by
automatically creating devices encountered during the fsck'ing of fstab
filesystems. Problem noted by Dethlef Madsen and Nick Nauwelaerts.

Adjust some verbiage in i386 install.md to make it more consistant.

Reformat welcome message to make sure all lines are <80 characters wide.

Minor cleanups.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.11 2002/09/21 21:11:58 krw Exp $
d144 1
a144 1
Your will now create a single MBR partition to contain your OpenBSD data. This
@


1.11
log
@Further reduce i386 install output by sending to /dev/null the fdisk
output produced when the user opts to have the install script use the
entire disk for OpenBSD.

ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.10 2002/09/17 12:28:54 krw Exp $
d130 1
a130 1
		echo -n "Putting all of $_disk into an active OpenBSD MBR partition..."
d178 1
a178 1
start of the disk, NOT the start of the MBR 'A6' partition.
@


1.10
log
@Ruthlessly expunge unnecessary verbiage and whitespace to make sure
the install example will easily fit on the CD insert at some
reasonable font size. Reword many messages and questions for same
reason.

In addition:

1) Add '...done.' to match 'Installing boot block...'

2) During install, after asking which is the root disk, start
initializing it immediately rather than asking again which disk to
work on.

3) Move munged fstab filesystem mounting to *before* network
initialization so that if you bail out during network initialization
and restart you do not have to go through disk initialization again.
Also puts fsck and mount messages close to each other rather than
spitting out the latter just before root password questions.

4) Make 'usr/obj' nosuid,nodev by default, /home nodev by default.

5) For network interfaces only show the complete list of media options
if the user indicates they want to change the default.

6) Move the question about the ftp server supporting passive ftp to
*after* selecting the ftp server where it is more 'rational' and can
easily be made more concise.

7) Don't bother umount'ing filesystems or stopping the dhclient after
a successful install/upgrade. The next step is a reboot after all.

Some minor code tweaks and comment cleanup while in the area.

Tested in recent snapshots. Suggested by & ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.9 2002/08/27 02:18:34 krw Exp $
d130 2
a131 3
		echo
		echo Updating MBR based on BIOS geometry.
		fdisk -e ${_disk} << __EOT
d137 3
d141 2
a142 2
	else
		cat << __EOT
d152 1
a152 2
		fdisk -e ${_disk}
	fi
a157 1

d165 1
a165 1
	ask "Do you want to use the *entire* disk for OpenBSD?" no
d173 1
a173 1
You will now create an OpenBSD disklabel inside the MBR 'A6' ('OpenBSD')
@


1.9
log
@Move general partitioning advice from machine dependant per disk
routine to install.sh so it is displayed only once.

Strongly advise /, /tmp, /var, /usr and /home have their own
disk partitions as requested by deraadt@@.

Rather than rely on users not re-selecting an already initialized
disk, just allow them to choose from un-initialized disks.

Move get_root invocation into install.sub as both install.sh and
upgrade.sh did it first thing.

Remove the 'workaround' to a 'vnode aliasing bug' that came in
with the initial import of upgrade.sh from NetBSD. ok millert@@.

Rework verbiage in a few places. Clean up logic around looping
through disk units by handling root disk better.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.8 2002/05/20 16:53:57 krw Exp $
d105 1
d140 5
d146 1
a146 10
		echo
		cat << __EOT
A single OpenBSD partition with id 'A6' ('OpenBSD') should exist in the MBR.
All of your OpenBSD partitions will be contained _within_ this partition,
including your swap space.  In the normal case it should be the only partition
marked as active.  (Unless you are using a multiple-OS booter, but you can
adjust that later.)  Furthermore, the MBR partitions must NOT overlap each
other.  [If this is a new install, you are most likely going to want to type
the following fdisk commands: reinit, update, write, quit. Use the 'manual'
command to read a full description.]  The current partition information is:
d148 1
a149 2
		fdisk ${_disk}
		echo
d153 6
a158 4
	echo Here is the partition information you chose:
	echo
	fdisk ${_disk}
	echo
d173 6
a178 6
Inside the BIOS 'A6' ('OpenBSD') partition you just created, there resides an
OpenBSD partition table which defines how this BIOS partition is to be split
up. This table declares the offsets and sizes of your / partition, your swap
space, and any other partitions you might create.  (NOTE: The OpenBSD disk
label offsets are absolute, ie. relative to the start of the disk... NOT
relative to the start of the BIOS 'A6' partition).
a192 9
	# display example
	cat << __EOT
If this disk is shared with other operating systems, those operating systems
should have a BIOS partition entry that spans the space they occupy completely.
For safety, also make sure all OpenBSD file systems are within the offset and
size specified in the 'A6' BIOS partition table.  (By default, the disklabel
editor will try to enforce this).

__EOT
@


1.8
log
@Eliminate md_questions(). It was used only to control the setting of
machdep.allowaperture. Remove the setting of machdep.allowaperture
from md_installboot().

Add MDXAPERTURE variable to relevant architectures.

Add a new function set_machdep_allowaperture(). It is called *after*
install_sets() (which changes when the X Window question is asked), and
if MDXAPERTURE is present modifies sysctl.conf.

Shrinks overall size for i386, macppc, sparc64 (which used md_questions
for machdep.allowaperture) but increases size a bit for other
architectures since set_machep_allowaperture is in install.sub.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.7 2002/05/18 19:28:50 krw Exp $
d201 1
a201 3
editor will try to enforce this).  If you are unsure of how to use multiple
partitions properly (ie. separating /,  /usr, /tmp, /var, /usr/local, and other
things) just split the space into a root and swap partition for now.
@


1.7
log
@Use __EOT (as for all other <<'s) instead of __EOC
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.6 2002/05/18 17:56:03 krw Exp $
d46 1
a100 11
md_questions() {
	echo
	ask "Do you expect to run the X Window System?" y
	case "$resp" in
	y*|Y*)
		xfree86=y
		;;
	esac
	echo
}

a104 9

	if [ "$xfree86" = y ]; then
		echo
		echo "Enabling machdep.allowaperture. Read xf86(4) for more information."
		echo '1,$s/^#machdep\.allowaperture=2/machdep\.allowaperture=2	/
w
q' | ed /mnt/etc/sysctl.conf 2> /dev/null
		echo
	fi
@


1.6
log
@Eliminate md_get_diskdevs() and md_get_cddevs() by

1) Saving one boot's worth of dmesg in /tmp/dmesg.boot
2) Using sed to scan for devices and pull out names in
   new get_diskdevs() and get_cddevs() in install.sub
3) Saving any md disk/cd sed patterns in MDDISKDEVS and
   MDCDDEVS variables.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.5 2002/05/14 01:49:25 krw Exp $
d150 1
a150 1
		fdisk -e ${_disk} << __EOC
d155 1
a155 1
__EOC
@


1.5
log
@Eliminate md_native_fstype() and md_native_fsopts(). Both functions
simply echo'd a single word if present at all.

Replace with variables MDFSTYPE and MDFSOPTS if required. Rework logic
in install.sub's mount_a_disk() to always include 'ro' as an option to
the mount command. This allows even those arch's with MDFSTYPE to
usually get by without MDFSOPTS.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.4 2002/05/09 21:54:46 krw Exp $
a97 10
}

md_get_diskdevs() {
	# return available disk devices
	bsort `dmesg | egrep -a "^[sw]d[0-9]+ " | cutword 1`
}

md_get_cddevs() {
	# return available CDROM devices
	bsort `dmesg | egrep -a "^cd[0-9]+ " | cutword 1`
@


1.4
log
@Elminate md_welcome_banner() and md_not_going_to_install() as the
output of both was essentially identical on all architectures. Replace
with welcome_banner() and not_going_to_install() in install.sub.

Abstract common verbiage from md_congrats() into congrats() which
calls md_congrats() for any architecture specific additional verbiage.

Reword things so ${MODE} can be plausibly used in more places.

Remove extraneous #!/bin/sh in hp300 install.md.

ok deraadt@@ espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.3 2002/05/08 23:01:46 krw Exp $
d44 2
a133 8
}

md_native_fstype() {
	echo msdos
}

md_native_fsopts() {
	echo "ro,-l"
@


1.3
log
@Abstract out common md_set_term() code into set_term() in install.sub,
calling md_set_term() from set_term() to do machine dependent stuff.
Currently only i386 does anything - keyboard mappings.

Add MDTERM variable to allow install.md to set proper default terminal
type. Default to vt220.

Eliminate md_get_partition_range() as useless since every architecture
returned '[a-p]'.

Make default term for all mvme* architectures vt100 as requested by miod@@.

ok deraadt@@ millert@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.2 2002/04/28 14:44:01 krw Exp $
a243 47
md_welcome_banner() {
{
	if [ "$MODE" = install ]; then
		cat << __EOT
Welcome to the OpenBSD/i386 ${VERSION_MAJOR}.${VERSION_MINOR} installation program.

This program is designed to help you put OpenBSD on your disk in a simple and
rational way.
__EOT

	else
		cat << __EOT
Welcome to the OpenBSD/i386 ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program.

This program is designed to help you upgrade your OpenBSD system in a simple
and rational way.  As a reminder, installing the 'etc' binary set is NOT
recommended.  Once the rest of your system has been upgraded, you should
manually merge any changes to files in the 'etc' set into those files which
already exist on your system.
__EOT
	fi

cat << __EOT

As with anything which modifies your disk's contents, this program can cause
SIGNIFICANT data loss, and you are advised to make sure your data is backed
up before beginning the installation process.

Default answers are displayed in brackets after the questions.  You can hit
Control-C at any time to quit, but if you do so at a prompt, you may have
to hit return.  Also, quitting in the middle of installation may leave your
system in an inconsistent state.  If you hit Control-C and restart the
install, the install program will remember many of your old answers.

__EOT
} | more
}

md_not_going_to_install() {
	cat << __EOT

OK, then.  Enter 'halt' at the prompt to halt the machine.  Once the machine
has halted, power-cycle the system to load new boot code.

__EOT
}

a244 13
	local what;
	if [ "$MODE" = install ]; then
		what=installed
	else
		what=upgraded
	fi
	cat << __EOT

CONGRATULATIONS!  You have successfully $what OpenBSD!  To boot the
installed system, enter halt at the command prompt. Once the system has
halted, reset the machine and boot from the disk.

__EOT
@


1.2
log
@Change getresp() into ask().

ask() takes 2 parameters. The first one is the question to
ask the user, and the 2nd is the default answer.

Shrinks and makes the code clearer.

From espie@@ with some tweaking, ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.1 2002/04/22 02:40:02 deraadt Exp $
a48 5
	test -n "$TERM" && return
	ask "Specify terminal type:" vt220
	TERM=$resp
	export TERM

a105 5
}

md_get_partition_range() {
	# return range of valid partition letters
	echo [a-p]
@


1.1
log
@move things back a directory
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.17 2002/04/12 02:15:28 deraadt Exp $
d50 1
a50 2
	echo -n "Specify terminal type [vt220]: "
	getresp vt220
d54 1
a54 2
	echo -n "Do you wish to select a keyboard encoding table? [n] "
	getresp n
d64 1
a64 2
		echo -n "Select your keyboard type: (P)C-AT/XT, (U)SB or 'done' [P] "
		getresp P
d88 1
a88 2
		echo -n "Table name? (or 'done') [us] "
		getresp us
d120 1
a120 2
	echo -n "Do you expect to run the X Window System? [y] "
	getresp y
d212 1
a212 2
	echo -n 'Do you want to use the *entire* disk for OpenBSD? [no] '
	getresp "no"
@

