head	1.36;
access;
symbols
	OPENBSD_3_1:1.35.0.2
	OPENBSD_3_1_BASE:1.35
	OPENBSD_3_0:1.34.0.10
	OPENBSD_3_0_BASE:1.34
	OPENBSD_2_9:1.34.0.8
	OPENBSD_2_9_BASE:1.34
	OPENBSD_2_8:1.34.0.6
	OPENBSD_2_8_BASE:1.34
	OPENBSD_2_7:1.34.0.4
	OPENBSD_2_7_BASE:1.34
	OPENBSD_2_6:1.34.0.2
	OPENBSD_2_6_BASE:1.34
	OPENBSD_2_5:1.32.0.2
	OPENBSD_2_5_BASE:1.32
	OPENBSD_2_4:1.29.0.2
	OPENBSD_2_4_BASE:1.29
	OPENBSD_2_3:1.27.0.4
	OPENBSD_2_3_BASE:1.27
	OPENBSD_2_2:1.27.0.2
	OPENBSD_2_2_BASE:1.27
	OPENBSD_2_1:1.20.0.2
	OPENBSD_2_1_BASE:1.20;
locks; strict;
comment	@# @;


1.36
date	2002.04.22.02.40.02;	author deraadt;	state dead;
branches;
next	1.35;

1.35
date	2001.11.09.16.27.29;	author todd;	state Exp;
branches;
next	1.34;

1.34
date	99.08.06.20.49.10;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	99.05.26.16.08.43;	author espie;	state Exp;
branches;
next	1.32;

1.32
date	99.04.10.02.16.13;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	98.12.21.10.10.15;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	98.12.16.01.18.09;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	98.10.24.23.28.35;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	98.10.15.07.26.47;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	97.10.07.05.36.05;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	97.09.26.02.09.57;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	97.09.05.21.16.51;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	97.09.05.09.05.46;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	97.06.06.03.44.47;	author kstailey;	state Exp;
branches;
next	1.22;

1.22
date	97.05.29.18.27.53;	author kstailey;	state Exp;
branches;
next	1.21;

1.21
date	97.05.29.18.23.49;	author kstailey;	state Exp;
branches;
next	1.20;

1.20
date	97.05.17.04.01.48;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	97.05.14.18.39.00;	author niklas;	state Exp;
branches;
next	1.18;

1.18
date	97.05.11.20.01.57;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	97.05.10.02.13.13;	author tholo;	state Exp;
branches;
next	1.16;

1.16
date	97.05.08.06.02.35;	author tholo;	state Exp;
branches;
next	1.15;

1.15
date	97.05.08.05.56.21;	author tholo;	state Exp;
branches;
next	1.14;

1.14
date	97.05.07.06.03.24;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	97.05.07.04.46.52;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	97.05.04.20.52.48;	author tholo;	state Exp;
branches;
next	1.11;

1.11
date	97.05.04.20.22.14;	author tholo;	state Exp;
branches;
next	1.10;

1.10
date	97.05.04.03.26.24;	author tholo;	state Exp;
branches;
next	1.9;

1.9
date	97.05.03.07.56.44;	author tholo;	state Exp;
branches;
next	1.8;

1.8
date	97.05.03.07.50.14;	author tholo;	state Exp;
branches;
next	1.7;

1.7
date	97.04.17.02.10.42;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	97.04.16.21.37.30;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.04.16.02.45.30;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.04.16.01.53.44;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.04.14.11.01.02;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.04.14.10.57.09;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	97.04.13.17.17.52;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.36
log
@move things back a directory
@
text
@#	$OpenBSD: Makefile,v 1.35 2001/11/09 16:27:29 todd Exp $

.PATH: ${.CURDIR}/../ramdisk
RAMDISK=RAMDISK
NOBSDRD=1

.include "${.CURDIR}/../common/Makefile.inc"
@


1.35
log
@use RAMDISK_CD not RAMDISK for bsd.rd; ok deraadt@@ (now that I tested)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.34 1999/08/06 20:49:10 deraadt Exp $
@


1.34
log
@new install media.  floppyXX.fs is the regular one.  floppyBXX.fs contains no
none of the scsi drivers on the first floppy, but others (to be detailed
elsewhere).  bsd.rd is still the one from floppyXX.fs.  finally, cdromXX.fs
is a 2.88MB install, which contains a superset of all these.. to be placed on
the CD.
@
text
@d1 1
a1 1
#	$OpenBSD$
d5 1
@


1.33
log
@compile i386 ramdisk with -Os (conserve size)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 1999/04/10 02:16:13 deraadt Exp $
d3 2
a4 1
TOP=		${.CURDIR}/..
d6 1
a6 114
.include "${TOP}/Makefile.inc"
IMAGE=		mr.fs
CBIN?=		instbin
.if (${KERBEROS} == "yes")
CRUNCHCONF?=    ${.CURDIR}/${CBIN}.conf
.else
CRUNCHCONF?=    ${.CURDIR}/${CBIN}-nokrb.conf
.endif
LISTS=		${.CURDIR}/list

MOUNT_POINT=	/mnt
MTREE=		${.CURDIR}/mtree.conf

FS=		floppy${REV}.fs
VND?=		svnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$
REALIMAGE!=	echo /var/tmp/image.${PID}
LISTFLOPPY=	${.CURDIR}/list_floppy

all:	${FS}

${FS}:	bsd.gz
	dd if=/dev/zero of=${REALIMAGE} bs=10k count=144
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w -r ${VND} floppy3
	newfs -m 0 -o space -i 524288 -c 80 ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh ${LISTFLOPPY}
	/usr/mdec/installboot -v -s 18 -h 2 ${MOUNT_POINT}/boot \
	    ${DESTDIR}/usr/mdec/biosboot ${VND_CRDEV}
	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	umount ${MOUNT_POINT}
	vnconfig -u ${VND}
	cp ${REALIMAGE} ${FS}
	rm ${REALIMAGE}

DISKTYPE=       rdroot
NBLKS=          3510
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -m 0 -o space -c 16 -i 4096

bsd.gz: bsd.rd
	cp bsd.rd bsd.strip
	strip bsd.strip
	gzip -c9 bsd.strip > bsd.gz

bsd.rd:	${IMAGE} bsd rdsetroot
	cp bsd bsd.rd
	${.OBJDIR}/rdsetroot bsd.rd < ${IMAGE}


bsd:
	cd ${.CURDIR}/../../../../sys/arch/i386/conf && config RAMDISK
	cd ${.CURDIR}/../../../../sys/arch/i386/compile/RAMDISK && \
	    make clean && COPTS=-Os make
#	cd ${.CURDIR}/../../../../sys/arch/i386/compile/RAMDISK && \
#	    make clean && make
	cp ${.CURDIR}/../../../../sys/arch/i386/compile/RAMDISK/bsd bsd

${IMAGE}: ${CBIN} rd_setup do_files rd_teardown

rd_setup: ${CBIN}
	dd if=/dev/zero of=${REALIMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w -r ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}
	cp ${REALIMAGE} ${IMAGE}
	rm ${REALIMAGE}

rdsetroot:	${TOP}/common/rdsetroot.c
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/common/rdsetroot.c

unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}
	-/bin/rm -f ${IMAGE}

.PRECIOUS:	${IMAGE}

install:
	cp bsd.rd ${DESTDIR}/snapshot/bsd.rd
	cp ${FS} ${DESTDIR}/snapshot/${FS}

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -D ${BSDSRCDIR} -L ${DESTDIR}/usr/lib \
	-c ${CBIN}.c -e ${CBIN} -m ${CBIN}.mk ${CRUNCHCONF}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	make -f ${CBIN}.mk all

do_files:
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh ${LISTS}

clean cleandir:
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}*.cache \
	    *.o *.lo *.c bsd bsd.rd bsd.gz bsd.strip floppy*.fs rdsetroot

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.32
log
@shrink ramdisk a teeny bit; 8MB installs now work reliably
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 1998/12/21 10:10:15 deraadt Exp $
d61 1
d65 3
a67 1
	    make clean && make
@


1.31
log
@copy correct file
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 1998/12/16 01:18:09 deraadt Exp $
d48 1
a48 1
NBLKS=          3560
@


1.30
log
@provide bsd.rd too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 1998/10/24 23:28:35 deraadt Exp $
d95 1
a95 1
	cp bsd.rd ${DESTDIR}/snapshot/${FS} 
@


1.29
log
@make 8mb installs work
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 1998/10/15 07:26:47 deraadt Exp $
d95 1
@


1.28
log
@shrink ramdisk filesystem
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 1997/10/07 05:36:05 deraadt Exp $
d48 1
a48 1
NBLKS=          3640
@


1.27
log
@call if floppy22.fs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 1997/09/26 02:09:57 millert Exp $
d48 1
a48 1
NBLKS=          4046
@


1.26
log
@Fix some newfs usage.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 1997/09/05 21:16:51 deraadt Exp $
d18 1
a18 1
FS=		floppy.fs
@


1.25
log
@make depend (in this case) is a total waste of time
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 1997/09/05 09:05:46 deraadt Exp $
d33 1
a33 1
	newfs -m 0 -o space -i 524288 -c 80 ${VND_RDEV} floppy3
d73 1
a73 1
	newfs ${NEWFSARGS} ${VND_RDEV} ${DISKTYPE}
@


1.24
log
@installboot -v and -h
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 1997/06/06 03:44:47 kstailey Exp $
d64 1
a64 1
	    make clean && make depend && make
@


1.23
log
@fix bugs in non-kerb version
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 1997/05/29 18:27:53 kstailey Exp $
d37 2
a38 1
	/usr/mdec/installboot -v ${MOUNT_POINT}/boot ${DESTDIR}/usr/mdec/biosboot ${VND_CRDEV}
@


1.22
log
@remove instbin, not instbin-nokrb on "make clean" w.o./KERBEROS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 1997/05/29 18:23:49 kstailey Exp $
d97 2
a98 2
	crunchgen -D ${BSDSRCDIR} -L ${DESTDIR}/usr/lib -c ${CBIN} \
	${CRUNCHCONF}
a107 1
.if (${KERBEROS} == "yes")
d109 1
a109 1
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
a110 5
.else
clean cleandir:
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}-nokrb.mk ${CBIN}-nokrb.cache \
	    *.o *.lo *.c bsd bsd.rd bsd.gz bsd.strip floppy*.fs rdsetroot
.endif
@


1.21
log
@Make this work with non-kerberized systems.
Remove bsd.strip on "make clean".
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 1997/05/17 04:01:48 millert Exp $
d114 2
a115 3
	/bin/rm -f core ${IMAGE} ${CBIN}-nokrb ${CBIN}-nokrb.mk \
	    ${CBIN}-nokrb.cache *.o *.lo *.c \
	    bsd bsd.rd bsd.gz bsd.strip floppy*.fs rdsetroot
@


1.20
log
@Need bsd.subdir.mk for "make obj" to work.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 1997/05/14 18:39:00 niklas Exp $
d8 1
d10 3
d97 2
a98 1
	crunchgen -D ${BSDSRCDIR} -L ${DESTDIR}/usr/lib ${CRUNCHCONF}
d108 1
d110 8
a117 2
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache *.o *.lo *.c \
	    bsd bsd.rd bsd.gz floppy*.fs rdsetroot
@


1.19
log
@Use svnds and remove ugly cache flushing
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 1997/05/11 20:01:57 millert Exp $
d108 1
@


1.18
log
@Build filesystems images in /var/tmp to avoid panic'ing if /tmp is MFS.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 1997/05/10 02:13:13 tholo Exp $
d15 1
a15 1
VND?=		vnd0
a33 3
	sync
	cat /*bin/* > /dev/null
	sync
a36 3
	sync
	cat /*bin/* > /dev/null
	sync
a73 3
	sync
	cat /*bin/* > /dev/null
	sync
@


1.17
log
@Revert a change we are not quite ready for yet
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 1997/05/08 06:02:35 tholo Exp $
d20 1
a20 1
REALIMAGE!=	echo /tmp/image.${PID}
@


1.16
log
@Remove local hacks accidentally committed
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 1997/05/08 05:56:21 tholo Exp $
d88 2
a89 2
rdsetroot:	${TOP}/rdsetroot.c
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/rdsetroot.c
@


1.15
log
@Clean up build of install floppy
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 1997/05/07 06:03:24 deraadt Exp $
d20 1
a20 1
REALIMAGE!=	echo /var/tmp/image.${PID}
d63 3
a67 5
#	cd ${.CURDIR}/../../../../sys/arch/i386/conf && config RAMDISK
#	cd ${.CURDIR}/../../../../sys/arch/i386/compile/RAMDISK && \
#	    make clean && make depend && make
#	cp ${.CURDIR}/../../../../sys/arch/i386/compile/RAMDISK/bsd bsd

d88 2
a89 2
rdsetroot:	${TOP}/common/rdsetroot.c
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/common/rdsetroot.c
@


1.14
log
@lean, mean, and vi fits
@
text
@d1 1
a1 4
#	$OpenBSD: Makefile,v 1.13 1997/05/07 04:46:52 deraadt Exp $

# Revision is 2.1
REV=           21
d7 1
d9 1
a9 1
BASE=mr
d12 1
d20 1
a20 1
REALIMAGE!=	echo /tmp/image.${PID}
a22 2
.include "Makefile.inc"

d33 1
a36 1
	/usr/mdec/installboot -v /mnt/boot ${DESTDIR}/usr/mdec/biosboot ${VND_CRDEV}
a62 3
	cd ${.CURDIR}/../../../../sys/arch/i386/conf && config RAMDISK
	cd ${.CURDIR}/../../../../sys/arch/i386/compile/RAMDISK && \
	    make clean && make depend && make
d65 5
a99 1

d102 17
@


1.13
log
@strip kernel, fewer inodes on floppy
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1997/05/04 20:52:48 tholo Exp $
a28 6
.ifndef FLOPPY3
	dd if=/dev/zero of=${REALIMAGE} bs=10k count=120
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w -r ${VND} floppy5
	newfs -m 0 -o space -i 8192 -c 80 ${VND_RDEV} floppy5
.else
d32 1
a32 2
	newfs -m 0 -o space -i 32768 -c 80 ${VND_RDEV} floppy3
.endif
@


1.12
log
@Better fix for getting at rdsetroot; from Dale Rahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1997/05/04 20:22:14 tholo Exp $
d38 1
a38 1
	newfs -m 0 -o space -i 6500 -c 80 ${VND_RDEV} floppy3
d64 3
a66 1
	gzip -c9 bsd.rd > bsd.gz
@


1.11
log
@Make this work without obj directories/links
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1997/05/04 03:26:24 tholo Exp $
d68 1
a68 5
.if exists(${.CURDIR}/${__objdir})
	${.CURDIR}/${__objdir}/rdsetroot bsd.rd < ${IMAGE}
.else
	${.CURDIR}/rdsetroot bsd.rd < ${IMAGE}
.endif
@


1.10
log
@Remove unneeded REV to install of kernel and boot blocks
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1997/05/03 07:56:44 tholo Exp $
d68 1
d70 3
@


1.9
log
@Undo private changes
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1997/05/03 07:50:14 tholo Exp $
d42 1
a42 1
	    REV=${REV} TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh ${LISTFLOPPY}
@


1.8
log
@Almost complete install script that uses the machine-independant code from
the miniroot; not quite ready for prime-time yet but getting closer
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1997/04/17 02:10:42 niklas Exp $
d4 1
a4 1
REV=		21
d21 1
a21 1
REALIMAGE!=	echo /var/tmp/image.${PID}
d70 4
a73 1
bsd:	${.CURDIR}/../../../../sys/arch/i386/compile/RAMDISK/bsd
a74 5

#	cd ${.CURDIR}/../../../../sys/arch/i386/conf && config RAMDISK
#	cd ${.CURDIR}/../../../../sys/arch/i386/compile/RAMDISK && \
#	    make clean && make depend && make
#	cp ${.CURDIR}/../../../../sys/arch/i386/compile/RAMDISK/bsd bsd
@


1.7
log
@I had rcs-openbsd.pl have its way here
@
text
@d1 4
a4 1
#	$OpenBSD: Makefile,v 1.6 1997/04/16 21:37:30 deraadt Exp $
d21 1
a21 1
REALIMAGE!=	echo /tmp/image.${PID}
d42 1
a42 1
	    TARGDIR=${MOUNT_POINT} sh ${TOP}/runlist.sh ${LISTFLOPPY}
d70 1
a70 4
bsd:
	cd ${.CURDIR}/../../../../sys/arch/i386/conf && config RAMDISK
	cd ${.CURDIR}/../../../../sys/arch/i386/compile/RAMDISK && \
	    make clean && make depend && make
d72 5
@


1.6
log
@floppy.fs
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.5 1997/04/16 02:45:30 deraadt Exp $
#	$NetBSD: Makefile,v 1.1 1995/07/18 04:13:06 briggs Exp $
@


1.5
log
@build ramdisk using vnd. rd builds suck (can you say race?)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/04/16 01:53:44 deraadt Exp $
d7 1
a7 1
IMAGE=		mr-${REV}.fs
d13 1
a13 1
FS=		floppy-${REV}.fs
d105 2
@


1.4
log
@two fs images
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1997/04/14 11:01:02 deraadt Exp $
a11 3
BDEV=		/dev/rd0a
CDEV=		/dev/rrd0a
RDEV=		/dev/rd0c
d58 2
a59 2
# old format, minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -t ffs -m 0 -o space -c 16 -i 4096
d64 1
a64 1
bsd.rd: ${IMAGE} bsd rdsetroot
d74 1
a74 6
${IMAGE}:	do_prep do_mount do_files do_umount_copy do_unconfig ${CBIN}
	mv -f ${IMAGE}.tmp ${IMAGE}
	-if [ -e ${.CURDIR}/${__objdir}/rd.pid ] ; then \
	kill `cat ${.CURDIR}/${__objdir}/rd.pid`; \
	rm ${.CURDIR}/${__objdir}/rd.pid;\
	fi
d76 7
a82 2
rdsetroot:	${TOP}/common/rdsetroot.c
	${HOSTCC} -DDEBUG -o rdsetroot ${TOP}/common/rdsetroot.c
d84 1
a84 18
writetape:
	echo rewinding tape < /dev/rst0
	buffer -i /usr/mdec/stboot -o /dev/nrst0
	buffer -i /usr/mdec/bootst -o /dev/nrst0
	buffer -B -p75 -i bsd -o /dev/nrst0
	echo rewinding tape < /dev/rst0


do_prep: ${CBIN} do_unconfig
	sh ${.CURDIR}/start_rdconfig.sh ${RDEV} ${NBLKS}
	disklabel -w -r ${RDEV} ${DISKTYPE}
	
do_mount:
	-newfs ${NEWFSARGS} -s ${NBLKS} ${CDEV} ${DISKTYPE}
	mount ${BDEV} ${MOUNT_POINT}
 
do_umount_copy:
	@@echo ""
d86 3
a88 1
	@@echo ""
d90 3
a92 1
	dd if=${CDEV} of=${IMAGE}.tmp bs=4b count=`expr ${NBLKS} / 4 `
d94 2
a95 6
do_unconfig:
	-umount ${MOUNT_POINT}
	-if [ -e ${.CURDIR}/${__objdir}/rd.pid ] ; then \
	kill `cat ${.CURDIR}/${__objdir}/rd.pid`; \
	rm ${.CURDIR}/${__objdir}/rd.pid; \
	fi
@


1.3
log
@creates mr-20.fs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1997/04/14 10:57:09 deraadt Exp $
d16 1
d27 1
a27 1
all:	floppy
d29 1
a29 1
floppy: bsd.gz
d56 1
a56 1
	cp ${REALIMAGE} ${IMAGE}
@


1.2
log
@create ramdisk bootable floppies by typing "make"
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 1997/04/13 17:17:52 mickey Exp $
d7 1
a7 1
IMAGE=		miniroot-${REV}.fs
d9 1
a9 1
BASE=miniroot
@


1.1
log
@import of hp300's ramdisk stuff for i386.
merged w/ existing stuff...
awk nuked away from ramdisk, only MAKEDEV needs it.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1997/02/23 19:10:50 downsj Exp $
d11 1
a11 1
MOUNT_POINT=	/mnt1
d16 7
a22 1
KERNEL=		/sys/arch/i386/compile/RAMDISK/bsd
d24 3
a26 2
all: ${CBIN} ${IMAGE}
	@@echo "all done"
d28 29
a56 1
.include "Makefile.inc"
d63 14
a76 1
${IMAGE}:	do_prep do_mount do_files do_umount_copy do_unconfig
a85 6
setroot: ${IMAGE} bsd 
	${.CURDIR}/${__objdir}/rdsetroot bsd < ${IMAGE}

bsd:	${KERNEL}
	cp ${KERNEL} bsd

d116 4
@
