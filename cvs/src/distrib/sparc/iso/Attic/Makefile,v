head	1.15;
access;
symbols
	OPENBSD_6_0:1.14.0.8
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.4
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.12.0.6
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.5.0.6
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3;
locks; strict;
comment	@# @;


1.15
date	2016.09.01.10.08.29;	author deraadt;	state dead;
branches;
next	1.14;
commitid	qVq42rwKOPg5Qxjs;

1.14
date	2014.09.21.13.44.45;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	oU9URDYHjCPgvf88;

1.13
date	2014.08.26.21.36.44;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	d7fVtFqlTBeFuAsD;

1.12
date	2014.03.02.05.46.26;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2014.01.24.00.34.22;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2014.01.12.21.58.00;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2011.06.08.19.16.19;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.7;

1.7
date	2011.04.10.20.00.43;	author krw;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.18.05.40.47;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2009.04.17.03.58.55;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2008.08.25.17.18.55;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2007.08.10.12.29.55;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.10.03.02.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2007.08.10.02.28.53;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@remove sparc media building goop
@
text
@#	$OpenBSD: Makefile,v 1.14 2014/09/21 13:44:45 deraadt Exp $

TOP=	${.CURDIR}/..

#.include "${TOP}/Makefile.inc"

CDROM=	install${OSrev}.iso
RELXDIR?=	/home/relx-${MACHINE}
RELDIR?=	/home/rel-${MACHINE}

BASE=		${RELDIR}/base${OSrev}.tgz ${RELDIR}/comp${OSrev}.tgz \
		${RELDIR}/game${OSrev}.tgz ${RELDIR}/man${OSrev}.tgz \
		${RELDIR}/bsd ${RELDIR}/bsd.rd \
		${RELDIR}/INSTALL.${MACHINE}
XBASE=		${RELXDIR}/xbase${OSrev}.tgz ${RELXDIR}/xfont${OSrev}.tgz \
		${RELXDIR}/xshare${OSrev}.tgz ${RELXDIR}/xserv${OSrev}.tgz

all: ${CDROM}

${CDROM}: ${BASE} ${XBASE}
	-rm -rf ${.OBJDIR}/cd-dir
	mkdir -p ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}

	cp -p ${BASE} ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}
	cp -p ${XBASE} ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}

	cat ${RELDIR}/SHA256 ${RELXDIR}/SHA256 > \
	    ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256
	# XXX no SHA256.sig

	ln -f ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/bsd.rd ${.OBJDIR}/cd-dir/bsd.rd
	ln -f ${.OBJDIR}/cd-dir/bsd.rd ${.OBJDIR}/cd-dir/bsd
	ln -f ${.OBJDIR}/cd-dir/bsd.rd ${.OBJDIR}/cd-dir/vmunix # for kicks

	cp ${RELDIR}/boot ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}
	cp ${RELDIR}/bootxx ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}


	(mkhybrid -a -R -v -v -T -L -d -D -N -o ${.OBJDIR}/${CDROM} \
	    -A "OpenBSD ${OSREV} ${MACHINE} Install CD" \
	    -P "Copyright (c) `date +%Y` Theo de Raadt, The OpenBSD project" \
	    -p "Theo de Raadt <deraadt@@openbsd.org>" \
	    -V "OpenBSD/${MACHINE}   ${OSREV} Install CD" \
	    ${.OBJDIR}/cd-dir 2>&1) | tee log
	vnconfig -v -c vnd0 ${.OBJDIR}/${CDROM}
	mount -t cd9660 /dev/vnd0a /mnt
	/usr/mdec/installboot -v \
	    -s `cat log | grep -v 'Name' | egrep "/cd-dir/${OSREV}/${MACHINE}/boot$$" | cut -d' ' -f1` \
	    -e `cat log | grep -v 'Name' | egrep "/cd-dir/${OSREV}/${MACHINE}/boot$$" | cut -d' ' -f2` \
	    /mnt/${OSREV}/${MACHINE}/boot /usr/mdec/bootxx /dev/rvnd0c
	disklabel -w vnd0 fakecdrom "OpenBSD/${MACHINE}   "
	umount /mnt
	vnconfig -u vnd0
	# XXX Some ${MACHINE} machines fail to load the kernel correctly if the
	# XXX cd image is truncated.  It is not yet known why this happens.
	# XXX For now we pad the image.
	dd if=/dev/zero bs=2k count=200 >> ${.OBJDIR}/${CDROM}

install:
	cp ${CDROM} ${RELDIR}/

clean cleandir:
	/bin/rm -f ${CDROM}
	rm -rf cd-dir log

unconfig:
	-umount /mnt
	-vnconfig -u vnd0

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.14
log
@xetc set does not go onto little iso
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2014/08/26 21:36:44 deraadt Exp $
@


1.13
log
@no more exposed etc set
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2014/03/02 05:46:26 deraadt Exp $
d15 2
a16 3
XBASE=		${RELXDIR}/xbase${OSrev}.tgz ${RELXDIR}/xetc${OSrev}.tgz \
		${RELXDIR}/xfont${OSrev}.tgz ${RELXDIR}/xshare${OSrev}.tgz \
		${RELXDIR}/xserv${OSrev}.tgz
@


1.12
log
@Unfortunately... the "full-size downloadable" ISOs will ship without
internal-signing, because the procedures ran into some snags we can't
fix in time for release...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2014/01/24 00:34:22 deraadt Exp $
d12 1
a12 2
		${RELDIR}/etc${OSrev}.tgz ${RELDIR}/game${OSrev}.tgz \
		${RELDIR}/man${OSrev}.tgz \
@


1.11
log
@Refactor the install*.iso creation in regards to signing.
ok todd
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2014/01/12 21:58:00 deraadt Exp $
d28 4
a31 2
	cp -p ${RELDIR}/.i-SHA256 ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256
	cp -p ${RELDIR}/.i-SHA256.sig ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256.sig
@


1.10
log
@Place a SHA256 (not SHA256.sig, sorry not yet) onto the install*.iso
media to give some upcoming changes a chance of working.

Long discussions with todd and rpe
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2011/06/08 19:16:19 krw Exp $
d28 2
d36 1
a37 4
	cat ${RELDIR}/SHA256 ${RELXDIR}/SHA256 > \
		${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256

	cp ${RELDIR}/bootxx ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}
a60 5
	# update the SHA256 file
	grep -v ${CDROM} ${RELDIR}/SHA256 > ${RELDIR}/SHA256.new
	sum -a sha256 ${CDROM} >> ${RELDIR}/SHA256.new
	sort ${RELDIR}/SHA256.new > ${RELDIR}/SHA256
	rm ${RELDIR}/SHA256.new
@


1.9
log
@Revert fakecdrom elimination pending further testing. ariane@@ pointed
out that sparc64 iso at least does not boot. Retain the svnd -> vnd
changes that happened after the original commit.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2011/04/18 16:52:10 thib Exp $
d34 4
@


1.8
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2011/04/10 20:00:43 krw Exp $
d48 1
@


1.7
log
@'fakecdrom' disktab entry no longer needed, nor is mksuncd mangling of
the boot cd image.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2010/10/18 05:40:47 deraadt Exp $
d42 2
a43 2
	vnconfig -v -c svnd0 ${.OBJDIR}/${CDROM}
	mount -t cd9660 /dev/svnd0a /mnt
d47 1
a47 1
	    /mnt/${OSREV}/${MACHINE}/boot /usr/mdec/bootxx /dev/rsvnd0c
d49 1
a49 1
	vnconfig -u svnd0
d69 1
a69 1
	-vnconfig -u svnd0
@


1.6
log
@no more misc set
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2009/04/17 03:58:55 deraadt Exp $
a47 1
	disklabel -w svnd0 fakecdrom "OpenBSD/${MACHINE}   "
@


1.5
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2008/08/25 17:18:55 deraadt Exp $
d13 1
a13 1
		${RELDIR}/man${OSrev}.tgz ${RELDIR}/misc${OSrev}.tgz \
@


1.4
log
@use ?= for adjusting RELXDIR for all sets
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2007/08/10 12:29:55 deraadt Exp $
d58 5
@


1.3
log
@add missing xserv, and use ${MACHINE} throughout (still needs testing)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2007/08/10 03:02:38 deraadt Exp $
d8 1
a8 1
RELXDIR=	/home/relx-${MACHINE}
@


1.2
log
@use more variables, because variables are good
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2007/08/10 02:28:53 deraadt Exp $
d8 2
a9 2
RELXDIR=	/home/relx-sparc
RELDIR?=	/home/rel-sparc
d15 1
a15 1
		${RELDIR}/INSTALL.sparc
d17 2
a18 1
		${RELXDIR}/xfont${OSrev}.tgz ${RELXDIR}/xshare${OSrev}.tgz
d24 1
a24 1
	mkdir -p ${.OBJDIR}/cd-dir/${OSREV}/sparc
d26 2
a27 2
	cp -p ${BASE} ${.OBJDIR}/cd-dir/${OSREV}/sparc
	cp -p ${XBASE} ${.OBJDIR}/cd-dir/${OSREV}/sparc
d29 1
a29 1
	ln -f ${.OBJDIR}/cd-dir/${OSREV}/sparc/bsd.rd ${.OBJDIR}/cd-dir/bsd.rd
d33 2
a34 2
	cp ${RELDIR}/boot ${.OBJDIR}/cd-dir/${OSREV}/sparc
	cp ${RELDIR}/bootxx ${.OBJDIR}/cd-dir/${OSREV}/sparc
d37 1
a37 1
	    -A "OpenBSD ${OSREV} sparc Install CD" \
d40 1
a40 1
	    -V "OpenBSD/sparc   ${OSREV} Install CD" \
d45 4
a48 4
	    -s `cat log | grep -v 'Name' | egrep "/cd-dir/${OSREV}/sparc/boot$$" | cut -d' ' -f1` \
	    -e `cat log | grep -v 'Name' | egrep "/cd-dir/${OSREV}/sparc/boot$$" | cut -d' ' -f2` \
	    /mnt/${OSREV}/sparc/boot /usr/mdec/bootxx /dev/rsvnd0c
	disklabel -w svnd0 fakecdrom "OpenBSD/sparc   "
d51 1
a51 1
	# XXX Some sparc machines fail to load the kernel correctly if the
@


1.1
log
@a somewhat crude way to generate installXX.iso files based on
intermediate snapshot components.  uses some knowledge from our internal
build scheme to link together base and X sets.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2005/03/11 15:40:59 deraadt Exp $
d10 9
d21 1
a21 1
${CDROM}:
d25 2
a26 8
	cp -p ${RELDIR}/{base,comp,etc,game,man,misc}${OSrev}.tgz \
	    ${.OBJDIR}/cd-dir/${OSREV}/sparc
	cp -p ${RELDIR}/{bsd,bsd.rd} \
	    ${.OBJDIR}/cd-dir/${OSREV}/sparc
	cp -p ${RELXDIR}/{xbase,xetc,xfont,xserv,xshare}${OSrev}.tgz \
	    ${.OBJDIR}/cd-dir/${OSREV}/sparc
	cp -p ${RELDIR}/INSTALL.sparc \
	    ${.OBJDIR}/cd-dir/${OSREV}/sparc
@

