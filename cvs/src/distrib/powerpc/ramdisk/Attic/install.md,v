head	1.26;
access;
symbols
	OPENBSD_2_9:1.24.0.2
	OPENBSD_2_9_BASE:1.24
	OPENBSD_2_8:1.16.0.2
	OPENBSD_2_8_BASE:1.16
	OPENBSD_2_7:1.13.0.4
	OPENBSD_2_7_BASE:1.13
	OPENBSD_2_6:1.13.0.2
	OPENBSD_2_6_BASE:1.13
	OPENBSD_2_5:1.9.0.2
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2;
locks; strict;
comment	@# @;


1.26
date	2001.09.01.16.47.03;	author drahn;	state dead;
branches;
next	1.25;

1.25
date	2001.06.23.19.44.54;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2001.04.17.13.06.24;	author brad;	state Exp;
branches;
next	1.23;

1.23
date	2001.04.17.05.37.01;	author drahn;	state Exp;
branches;
next	1.22;

1.22
date	2001.04.17.04.15.27;	author drahn;	state Exp;
branches;
next	1.21;

1.21
date	2001.04.13.01.29.24;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2001.03.25.06.30.41;	author drahn;	state Exp;
branches;
next	1.19;

1.19
date	2001.03.24.01.17.50;	author drahn;	state Exp;
branches;
next	1.18;

1.18
date	2001.03.03.21.23.49;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2001.01.25.19.18.41;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2000.10.17.15.21.59;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2000.09.12.03.03.40;	author rahnds;	state Exp;
branches;
next	1.14;

1.14
date	2000.08.08.01.08.07;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	99.09.23.21.33.44;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.09.03.18.55.35;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	99.08.15.10.05.07;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	99.07.30.17.16.10;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	99.04.01.21.30.48;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	98.10.28.17.53.30;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	98.09.15.05.45.50;	author rahnds;	state Exp;
branches;
next	1.6;

1.6
date	98.09.12.20.05.28;	author rahnds;	state Exp;
branches;
next	1.5;

1.5
date	98.08.07.01.35.27;	author rahnds;	state Exp;
branches;
next	1.4;

1.4
date	98.07.19.00.38.51;	author rahnds;	state Exp;
branches;
next	1.3;

1.3
date	98.04.06.20.27.29;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	97.10.15.14.09.04;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	97.10.10.10.16.56;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.26
log
@Move the powerpc ramdisk building support from powerpc to macppc.
@
text
@#	$OpenBSD: install.md,v 1.25 2001/06/23 19:44:54 deraadt Exp $
#
#
# Copyright rc) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

#
# machine dependent section of installation/upgrade script.
#

# Machine-dependent install sets
MDSETS="kernel"
ARCH=ARCH

md_set_term() {
	test -n "$TERM" && return
	echo -n "Specify terminal type [vt220]: "
	getresp vt220
	TERM=$resp
	export TERM
}

md_get_diskdevs() {
	# return available disk devices
	bsort `dmesg | egrep -a "^[sw]d[0-9]+ " | cutword 1`
}

md_get_cddevs() {
	# return available CDROM devices
	bsort `dmesg | egrep -a "^cd[0-9]+ " | cutword 1`
}

md_get_partition_range() {
    # return range of valid partition letters
    echo [a-p]
}

md_questions() {
	:
}

md_installboot() {
	if [[ $disklabeltype = "HFS" ]] 
	then
		echo "the 'ofwboot' program needs to be copied to the first HFS partition"
		echo "of the disk to allow booting of OpenBSD"
	elif [[ $disklabeltype = "MBR" ]] 
	then
		echo "Installing boot in the msdos partition /dev/${1}i"
		if mount -t msdos /dev/${1}i /mnt2 ; then
			cp /usr/mdec/ofwboot /mnt2
			umount /mnt2
		else
			echo "Failed, you will not be able to boot from /dev/${1}."
		fi
	fi
}

md_native_fstype() {
    echo "msdos"
}

md_native_fsopts() {
    echo "ro"
}

md_init_mbr() {
	# $1 is the disk to init
	echo
	echo "You will now be asked if you want to initialize the disk with a 1Mb"
	echo "MSDOS partition. This is the recomended setup and will allow you to"
	echo "store the boot and other interesting things here."
	echo
	echo "If you want to have a different setup, exit 'install' now and do"
	echo "the MBR initialization by hand using the 'fdisk' program."
	echo
	echo "If you choose to manually setup the MSDOS partition, "
	echo "consult your PowerPC OpenFirmware manual -and- the"
	echo "PowerPC OpenBSD Installation Guide for doing setup this way."
	echo
	echo -n "Do you want to init the MBR and the MSDOS partition? [y] "
	getresp "y"
	case "$resp" in
	n*|N*)
		exit 0;;
	*)
		echo
		echo "An MBR record with an OpenBSD usable partition table will now be copied"
		echo "to your disk. Unless you have special requirements you will not need"
		echo "to edit this MBR. After the MBR is copied an empty 1Mb MSDOS partition"
		echo "will be created on the disk. You *MUST* setup the OpenBSD disklabel"
		echo "to have a partition include this MSDOS partition."
		echo "You will have an opportunity to do this shortly."
		echo
		echo "You will probably see a few '...: no disk label' messages"
		echo "It's completely normal. The disk has no label yet."
		echo "This will take a minute or two..."
		sleep 2
		echo -n "Creating Master Boot Record (MBR)..."
		fdisk -i -f /usr/mdec/mbr $1 
		echo "..done."
		echo -n "Copying 1MB MSDOS partition to disk..."
		gunzip < /usr/mdec/msdos1mb.gz | dd of=/dev/r$1c bs=512 seek=1 >/dev/null 2>&1
		echo "..done."
	;;
	esac
}

md_init_hfs() {
	pdisk /dev/${1}c
}
md_checkfordisklabel() {
	# $1 is the disk to check
	local rval

	echo
	echo "Apple systems have two methods to label/partition a boot disk."
	echo "Either the disk can be partitioned with Apple HFS partition"
	echo "tools to contain an \"Unused\" partition, or without any"
	echo "MacOS tools, the disk can be labled using an MBR partition table"
	echo "If the HFS (DPME) partition table is used, after the disk is"
	echo "partitioned with the Apple software, the \"Unused\" section"
	echo "must be changed to type \"OpenBSD\" name \"OpenBSD\" using the"
	echo "pdisk tool contained on this ramdisk. The disklabel can"
	echo "then be edited normally"
	echo "WARNING: the MBR partitioning code will HAPPILY overwrite/destroy"
	echo "any HFS partitions on the disk, including the partition table."
	echo "Choose the MBR option carefully, knowing this fact."

	echo -n "Do you want to choose (H)FS labeling or (M)BR labeling [H] "
	getresp "h"
	case "$resp" in
	m*|M*)
		export disklabeltype=MBR
		md_checkforMBRdisklabel $1
		rval=$?
		;;
	*)
		export disklabeltype=HFS
		md_init_hfs $1
		rval=$?
		;;
	esac
	return $rval
}
md_checkforMBRdisklabel() {

	echo "You have chosen to put a MBR disklabel on the disk."
	echo -n "Is this correct? [n] "
	getresp "n"
	case "$resp" in
	n*|N*)
		echo "aborting install"
		exit 0;;
	*)
		;;
	esac

	echo -n "Have you initialized an MSDOS partition using OpenFirmware? [n] "
	getresp "n"
	case "$resp" in
	n*|N*)
		md_init_mbr $1;;
	*)
		echo
		echo "You may keep your current setup if you want to be able to use any"
		echo "already loaded OS. However you will be asked to prepare an empty"
		echo "partition for OpenBSD later. There must also be at least ~0.5Mb free space"
		echo "in the boot partition to hold the OpenBSD bootloader."
		echo
		echo "Also note that the boot partition must be included as partition"
		echo "'i' in the OpenBSD disklabel."
		echo
		echo -n "Do you want to keep the current MSDOS partition setup? [y]"
		getresp "y"
		case "$resp" in
		n*|N*)
			md_init_mbr $1;;
		*)
		;;
		esac
	;;
	esac

	disklabel -r $1 > /dev/null 2> /tmp/checkfordisklabel
	if grep "no disk label" /tmp/checkfordisklabel; then
		rval=1
	elif grep "disk label corrupted" /tmp/checkfordisklabel; then
		rval=2
	else
		rval=0
	fi

	rm -f /tmp/checkfordisklabel
	return $rval
}

md_prep_fdisk()
{
	local _disk
	local _done

	_disk=$1
	echo
	echo "This disk has not previously been used with OpenBSD. You may share"
	echo "this disk with other operating systems. However, to be able to boot"
	echo "the system you will need a small DOS partition in the beginning of"
	echo "the disk to hold the kernel boot. OpenFirmware understands"
	echo "how to read an MSDOS style format from the disk."
	echo
	echo "This DOS style partitioning has been taken care of if"
	echo "you chose to do that initialization earlier in the install."
	echo
	echo "WARNING: Wrong information in the BIOS partition table might"
	echo "render the disk unusable."

	echo -n "Press [Enter] to continue "
	getresp ""

	echo
	echo "Current partition information is:"
	fdisk ${_disk}
	echo -n "Press [Enter] to continue "
	getresp ""

	_done=0
	while [ $_done = 0 ]; do
		echo
		cat << \__md_prep_fdisk_1

An OpenBSD partition should have type (i.d.) of 166 (A6), and should be the
only partition marked as active. Also make sure that the size of the partition
to be used by OpenBSD is correct, otherwise OpenBSD disklabel installation
will fail. Furthermore, the partitions must NOT overlap each others.

The fdisk utility will be started update mode (interactive.)
You will be able to add / modify this information as needed.
If you make a mistake, simply exit fdisk without storing the new
information, and you will be allowed to start over.
__md_prep_fdisk_1
		echo
		echo -n "Press [Enter] to continue "
		getresp ""

		fdisk -e ${_disk}

		echo
		echo "The new partition information is:"
		fdisk ${_disk}

		echo
		echo "(You will be permitted to edit this information again.)"
		echo "-------------------------------------------------------"
		echo -n "Is the above information correct? [n] "
		getresp "n"

		case "$resp" in
		n*|N*) ;;
		*) _done=1 ;;
		esac
	done

	echo
	echo "Please take note of the offset and size of the OpenBSD partition"
	echo "*AND* the MSDOS partitions you may want to access from OpenBSD."
	echo "At least the MSDOS partition used for booting must be accessible"
	echo "by OpenBSD as partition 'i'. You may need this information to "
	echo "fill in the OpenBSD disk label later."
	echo -n "Press [Enter] to continue "
	getresp ""
}

md_prep_disklabel()
{
	local _disk

	_disk=$1
	md_checkfordisklabel $_disk
	case $? in
	0)
		echo -n "Do you wish to edit the disklabel on $_disk? [y] "
		;;
	1)
		md_prep_fdisk ${_disk}
		echo "WARNING: Disk $_disk has no label"
		echo -n "Do you want to create one with the disklabel editor? [y] "
		;;
	2)
		echo "WARNING: Label on disk $_disk is corrupted"
		echo -n "Do you want to try and repair the damage using the disklabel editor? [y] "
		;;

	esac

	getresp "y"
	case "$resp" in
	y*|Y*) ;;
	*)	return ;;
	esac

	# display example
	cat << \__md_prep_disklabel_1

Disk partition sizes and offsets are in sector (most likely 512 bytes) units.
You may set these size/offset pairs on cylinder boundaries 
     (the number of sector per cylinder is given in )
     (the `sectors/cylinder' entry, which is not shown here)
Also, you *must* make sure that the 'i' partition points at the MSDOS
partition that will be used for booting. The 'c' partition shall start
at offset 0 and include the entire disk. This is most likely correct when
you see the default label in the editor.

Do not change any parameters except the partition layout and the label name.

   [Here is an example of what the partition information may look like.]
10 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  a:   120832    10240    4.2BSD     1024  8192    16   # (Cyl.   11*- 142*)
  b:   131072   131072      swap                        # (Cyl.  142*- 284*)
  c:  6265200        0    unused     1024  8192         # (Cyl.    0 - 6809)
  e:   781250   262144    4.2BSD     1024  8192    16   # (Cyl.  284*- 1134*)
  f:  1205000  1043394    4.2BSD     1024  8192    16   # (Cyl. 1134*- 2443*)
  g:  2008403  2248394    4.2BSD     1024  8192    16   # (Cyl. 2443*- 4626*)
  h:  2008403  4256797    4.2BSD     1024  8192    16   # (Cyl. 4626*- 6809*)
  i:    10208       32     MSDOS                        # (Cyl.    0*- 11*)
[End of example]
__md_prep_disklabel_1
	echo -n "Press [Enter] to continue "
	getresp ""
	if [[ $disklabeltype = "HFS" ]] 
	then
		disklabel -c -f /tmp/fstab.${_disk} -E ${_disk}
	elif [[ $disklabeltype = "MBR" ]] 
	then
		disklabel -W ${_disk}
		disklabel ${_disk} >/tmp/label.$$
		disklabel -r -R ${_disk} /tmp/label.$$
		rm -f /tmp/label.$$
		disklabel -f /tmp/fstab.${_disk} -E ${_disk}
	else
		echo "unknown disk label type"
	fi
}

md_welcome_banner() {
{
	if [ "$MODE" = install ]; then
		cat << __EOT
Welcome to the OpenBSD/powerpc ${VERSION_MAJOR}.${VERSION_MINOR} installation program.

This program is designed to help you put OpenBSD on your disk in a simple and
rational way.
__EOT

	else
		cat << __EOT
Welcome to the OpenBSD/powerpc ${VERSION_MAJOR}.${VERSION_MINOR} upgrade program.

This program is designed to help you upgrade your OpenBSD system in a simple
and rational way.  As a reminder, installing the 'etc' binary set is NOT
recommended.  Once the rest of your system has been upgraded, you should
manually merge any changes to files in the 'etc' set into those files which
already exist on your system.

__EOT
	fi

cat << __EOT

As with anything which modifies your disk's contents, this program can cause
SIGNIFICANT data loss, and you are advised to make sure your data is backed
up before beginning the installation process.

Default answers are displayed in brackets after the questions.  You can hit
Control-C at any time to quit, but if you do so at a prompt, you may have
to hit return.  Also, quitting in the middle of installation may leave your
system in an inconsistent state.  If you hit Control-C and restart the
install, the install program will remember many of your old answers.

__EOT
} | more
}

md_not_going_to_install() {
	cat << __EOT

OK, then.  Enter 'reboot' at the prompt to reset the machine.  Once the machine
has rebooted, use Open Firmware to load the new boot code.

__EOT
}

md_congrats() {
	local what;
	if [ "$MODE" = install ]; then
		what=installed
	else
		what=upgraded
	fi
	cat << __EOT

CONGRATULATIONS!  You have successfully $what OpenBSD!  To boot the
installed system, enter reboot at the command prompt.  Once the machine
has rebooted, use Open Firmware to boot into OpenBSD.

__EOT
}
@


1.25
log
@argh.  stop using kernfs, using dmesg using sysctl.  encode ARCH into
install.md at build time.  remove some crud.  and the icing on the cake:
skip testing all this until next week
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.24 2001/04/17 13:06:24 brad Exp $
@


1.24
log
@- apple -> Apple
- kernel boot -> bootloader
--
Ok'd by: drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.23 2001/04/17 05:37:01 drahn Exp $
d45 1
a54 8
md_makerootwritable() {
	:
}

md_machine_arch() {
	cat /kern/machine
}

d57 1
a57 1
	bsort `cat /kern/msgbuf | egrep -a "^[sw]d[0-9]+ " | cutword 1`
d62 1
a62 1
	bsort `cat /kern/msgbuf | egrep -a "^cd[0-9]+ " | cutword 1`
a438 8
}

hostname() {
	case $# in
		0)      cat /kern/hostname ;;
		1)      echo "$1" > /kern/hostname ;;
		*)      echo usage: hostname [name-of-host]
	esac
@


1.23
log
@Do not claim that a user will not be able to boot from the hard drive
because they installed on a HFS partitioned disk, tell them that they
have to set it up by copying 'ofwboot' to the first HFS partition.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.22 2001/04/17 04:15:27 drahn Exp $
d157 3
a159 3
	echo "Either the disk can be partitioned with apple HFS partition"
	echo "tools to contain an \"Unused\" partition, or without any any"
	echo "macos tools, the disk can be labled using an MBR partition table"
d161 1
a161 1
	echo "partitioned with the apple software, the \"Unused\" section"
d208 1
a208 1
		echo "in the boot partition to hold the OpenBSD kernel boot."
a222 1

@


1.22
log
@Flush the in-core disklabel when running disklabel without the -r option,
such as editing a HFS partitioned disk. This is necessary because
the OpenBSD partition entry in the HFS label may have just been added
and the old disklabel did not contain the entry.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.21 2001/04/13 01:29:24 krw Exp $
d82 13
a94 6
	echo "Installing boot in the msdos partition /dev/${1}i"
	if mount -t msdos /dev/${1}i /mnt2 ; then
		cp /usr/mdec/ofwboot /mnt2
		umount /mnt2
	else
		echo "Failed, you will not be able to boot from /dev/${1}."
d173 1
a173 1
		disklabeltype=MBR
d178 1
a178 1
		disklabeltype=HFS
@


1.21
log
@Minor typos & cleanup.

Fix a couple of missing closing quotes in the MBR partitioning routine.

Ensure that all questions posed have a space after the closing ']'.

makeing -> making.

ok drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.20 2001/03/25 06:30:41 drahn Exp $
d365 1
a365 1
		disklabel -f /tmp/fstab.${_disk} -E ${_disk}
@


1.20
log
@Check in tested version of install.md, one without syntax errors.
Clean up print on install query.
add var/db for mtree on ramdisk to support dhcp.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.19 2001/03/24 01:17:50 drahn Exp $
d113 1
a113 1
	echo -n "Do you want to init the MBR and the MSDOS partition? [y]"
d162 1
a162 1
	echo -n "Do you want to choose (H)FS labeling or (M)BR labeling [H]"
d180 2
a181 2
	echo "You have chosen to put a MBR disklabel on the disk.
	echo -n "Is this correct [n]
d191 1
a191 1
	echo -n "Have you initialized an MSDOS partition using OpenFirmware? [n]"
d314 1
a314 1
		echo -n "Do you wish to edit the disklabel on $_disk? [y]"
d319 1
a319 1
		echo -n "Do you want to create one with the disklabel editor? [y]"
d323 1
a323 1
		echo -n "Do you want to try and repair the damage using the disklabel editor? [y]"
@


1.19
log
@First cut at HFS shared parition capable ramdisk.
Documentation needs to be enhanced to reflect how to use this
properly.
Still one major issue with kernel recognizing new disklabel after
disk is modified with pdisk.
MD label handing in the install.md still needs to be cleaned up.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.18 2001/03/03 21:23:49 deraadt Exp $
d162 1
a162 1
	echo "Do you want to choose (H)FS labeling or (M)BR labeling [H]"
d172 1
a172 1
		md_init_hfs $1;;
@


1.18
log
@vt220 console type
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.17 2001/01/25 19:18:41 deraadt Exp $
d111 1
a111 1
	echo "PowerPC BSD Installation Guide for doing setup this way."
d141 3
d149 42
a190 7
	echo "Power.4e systems need an MBR and MSDOS partition on the boot disk."
	echo "This is necessary because the OpenFirmware doesn't know about"
	echo "OpenBSD, or how to boot the system from a BSD partition."
	echo
	echo "Install will put a boot program with the name 'ofwboot' "
	echo "that you will configure OpenFirmware to use when booting OpenBSD."
	echo
d363 13
a375 5
	disklabel -W ${_disk}
	disklabel ${_disk} >/tmp/label.$$
	disklabel -r -R ${_disk} /tmp/label.$$
	rm -f /tmp/label.$$
	disklabel -f /tmp/fstab.${_disk} -E ${_disk}
@


1.17
log
@egrep -a to permit working with binary data in dmesg
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.16 2000/10/17 15:21:59 deraadt Exp $
d48 2
a49 2
	echo -n "Specify terminal type [vt100]: "
	getresp vt100
@


1.16
log
@use reboot
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.15 2000/09/12 03:03:40 rahnds Exp $
d64 1
a64 1
	bsort `cat /kern/msgbuf | egrep "^[sw]d[0-9]+ " | cutword 1`
d69 1
a69 1
	bsort `cat /kern/msgbuf | egrep "^cd[0-9]+ " | cutword 1`
@


1.15
log
@remove ofdisk, it is no longer used.
recommend reboot, not halt, when installation is done.
halt leaves some machines in a state where only pulling the powercord
or finding the magic reset button (almost inside the machine) is required.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.15 2000/09/12 04:01:43 drahn Exp $
d375 1
a375 1
has rebooted, use openfirmware to load the new boot code.
d390 2
a391 2
installed system, enter halt at the command prompt. Once the system has
halted, reset the machine and boot from the disk.
@


1.14
log
@use GENERIC and RAMDISK
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.13 1999/09/23 21:33:44 aaron Exp $
d64 1
a64 1
	bsort `cat /kern/msgbuf | egrep "^[sw]d[0-9]+|ofdisk[0-9] " | cutword 1`
d374 2
a375 2
OK, then.  Enter 'halt' at the prompt to halt the machine.  Once the machine
has halted, power-cycle the system to load new boot code.
@


1.13
log
@Formatting, typo, and grammar fixes.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.12 1999/09/03 18:55:35 deraadt Exp $
d44 1
a44 1
MDSETS="kernel bsdmix bsdofw"
d47 1
a47 3
	if [ ! -z "$TERM" ]; then
		return
	fi
d49 2
a50 2
	getresp "vt100"
	TERM="$resp"
d55 1
d64 1
a64 1
	cat /kern/msgbuf | egrep "^[sw]d[0-9]|ofdisk[0-9] " | sed -e "s/[ :(].*//" | sort -u
d69 1
a69 1
	cat /kern/msgbuf | egrep "^cd[0-9] " | sed -e "s/[ :(].*//" | sort -u
d74 1
a74 1
    echo "[a-p]"
d334 7
a340 10
	if [ "$MODE" = "install" ]; then
		echo ""
		echo "Welcome to the OpenBSD/PowerPC ${VERSION} installation program."
		cat << \__welcome_banner_1

This program is designed to help you put OpenBSD on your disk,
in a simple and rational way.  You'll be asked several questions,
and it would probably be useful to have your disk's hardware
manual, the installation notes, and a calculator handy.
__welcome_banner_1
d343 7
a349 10
		echo ""
		echo "Welcome to the OpenBSD/PowerPC ${VERSION} upgrade program."
		cat << \__welcome_banner_2

This program is designed to help you upgrade your OpenBSD system in a
simple and rational way.

As a reminder, installing the `etc' binary set is NOT recommended.
Once the rest of your system has been upgraded, you should manually
merge any changes to files in the `etc' set into those files which
d351 2
a352 1
__welcome_banner_2
d355 1
a355 1
cat << \__welcome_banner_3
d357 9
a365 9
As with anything which modifies your disk's contents, this
program can cause SIGNIFICANT data loss, and you are advised
to make sure your data is backed up before beginning the
installation process.

Default answers are displayed in brackets after the questions.
You can hit Control-C at any time to quit, but if you do so at a
prompt, you may have to hit return.  Also, quitting in the middle of
installation may leave your system in an inconsistent state.
d367 1
a367 1
__welcome_banner_3
d372 1
a372 1
	cat << \__not_going_to_install_1
d374 2
a375 2
OK, then.  Enter `halt' at the prompt to halt the machine.  Once the
machine has halted, power-cycle the system to load new boot code.
d377 1
a377 1
__not_going_to_install_1
d382 2
a383 2
	if [ "$MODE" = "install" ]; then
		what="installed";
d385 1
a385 1
		what="upgraded";
d387 1
a387 1
	cat << __congratulations_1
d389 3
a391 3
CONGRATULATIONS!  You have successfully $what OpenBSD!
To boot the installed system, enter halt at the command prompt. Once the
system has halted, reset the machine and boot from the disk.
d393 1
a393 1
__congratulations_1
d396 7
@


1.12
log
@md_questions() interface allows asking questions before sets
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.11 1999/08/15 10:05:07 millert Exp $
d121 1
a121 1
		echo "A MBR record with an OpenBSD usable partition table will now be copied"
d129 1
a129 1
		echo "It's completly normal. The disk has no label yet."
d147 1
a147 1
	echo "Power.4e systems need a MBR and MSDOS partition on the boot disk."
d154 1
a154 1
	echo -n "Have you initialized a MSDOS partition using OpenFirmware? [n]"
d169 1
a169 1
		echo -n "Do You want to keep the current MSDOS partition setup? [y]"
d203 1
a203 1
	echo "the system you will need a small DOS partition in the begining of"
d208 1
a208 1
	echo "you choosed to do that initialization earlier in the install."
@


1.11
log
@Kill md_copy_kernel()
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.10 1999/07/30 17:16:10 deraadt Exp $
d76 4
@


1.10
log
@acd went away
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.9 1999/04/01 21:30:48 deraadt Exp $
a326 4
}

md_copy_kernel() {
	check_kernel
@


1.9
log
@disklabel -f use, for fstab tweaking
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.8 1998/10/28 17:53:30 millert Exp $
d70 1
a70 1
	cat /kern/msgbuf | egrep "^a?cd[0-9] " | sed -e "s/[ :(].*//" | sort -u
@


1.8
log
@call check_kernel instead of having the same code in all the .md files
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.7 1998/09/15 05:45:50 rahnds Exp $
d326 1
a326 1
	disklabel -E ${_disk}
@


1.7
log
@remove cut from ramdisk, since other ports dont use it.
At least temporarily remove vi from the powerpc ramdisks,
They dont fit on a floppy any longer.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.6 1998/09/12 20:05:28 rahnds Exp $
d330 1
@


1.6
log
@remove ethernet device detection now that that in common code.
write MBR on disk using fdisk -i, not dd, that way the partition sizes get
set up nicely. (Works even better with a soon to be checked in fdisk change).
add some powerpc specific installation sets.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.5 1998/08/07 01:35:27 rahnds Exp $
d65 1
a65 1
	cat /kern/msgbuf | egrep "^[sw]d[0-9]|ofdisk[0-9] " | cut -d" " -f1 | sort -u
d70 1
a70 1
	cat /kern/msgbuf | egrep "^a?cd[0-9] " | cut -d" " -f1 | sort -u
@


1.5
log
@changes to shrink compressed ramdisk size so that it would fit on floppy.
changes to install scripts to work on ofw machines.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.4 1998/07/19 00:38:51 rahnds Exp $
d44 1
a44 1
MDSETS="kernel"
a72 5
md_get_ifdevs() {
	# return available network devices
	cat /kern/msgbuf | egrep "^?de[0-9]|ofnet[0-9] " | cut -d" " -f1 | sort -u
}

d129 1
a129 1
		dd if=/usr/mdec/mbr of=/dev/r$1c >/dev/null 2>&1
@


1.4
log
@add support for openfirmware drivers. A second look might be appropriate.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.3 1998/04/06 20:27:29 pefo Exp $
d331 1
a331 1
	disklabel -e ${_disk}
@


1.3
log
@Fix for 1Mb MSDOS change
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.2 1997/10/15 14:09:04 pefo Exp $
d65 1
a65 1
	cat /kern/msgbuf | egrep "^[sw]d[0-9] " | cut -d" " -f1 | sort -u
d75 1
a75 1
	cat /kern/msgbuf | egrep "^?de[0-9] " | cut -d" " -f1 | sort -u
@


1.2
log
@Fix some inconsitencies
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.1 1997/10/10 10:16:56 pefo Exp $
d50 2
a51 2
	echo -n "Specify terminal type [pc3]: "
	getresp "pc3"
d104 1
a104 1
	echo "You will now be asked if you want to initialize the disk with a 5Mb"
d107 1
d109 5
a113 3
	echo "the MBR initialization by hand using the 'fdisk' program. You may"
	echo "also use any vendor specific program to set up the disk. Consult"
	echo "your PowerPC system manuals for doing setup this way."
d124 1
a124 1
		echo "to edit this MBR. After the MBR is copied an empty 5Mb MSDOS partition"
d126 3
a128 1
		echo "to have a partition covering this MSDOS partition."
d133 1
d135 4
a138 1
		gunzip < /usr/mdec/msdos5mb.gz | dd of=/dev/r$1c bs=512 seek=32 >/dev/null 2>&1
d149 2
a150 4
	echo "This is necessary because the OpenFirmware doesn't know nothing"
	echo "about OpenBSD and have to boot the system from a BSD partition."
	echo "Install will put a boot program with the name 'ofwboot' in there"
	echo "that you later should use to boot OpenBSD."
d152 4
a155 1
	echo -n "Have you initialized a MSDOS partition with OpenFirmware? [n]"
d164 1
a164 1
		echo "partition for OpenBSD later. There must also be ~0.5Mb free space"
d166 1
d203 7
a209 4
	echo "this disk with other operating systems." Anyhow, to be able to boot"
	echo "the system you will need a small DOS partition in the begining of
	echo "the disk to hold the kernel boot. This has been taken care of if"
	echo "you choosed to do that initialization just before."
d228 2
a229 2
An OpenBSD partition should have type 166 (A6), and should be the only
partition marked as active. Also make sure that the size of the partition
d231 5
a235 3
will fail. Furthermore, the partitions must NOT overlap each others. fdisk
will be started in update mode, and you will be able to add this information
as needed.  If you make a mistake, exit fdisk without storing the new
d238 1
d242 1
a242 1
		fdisk -u ${_disk}
d249 3
a251 2
		echo "Is this information correct (if not, you will be permitted to "
		echo -n "edit it again)? [n] "
d260 1
d301 4
a304 5
Here is an example of what the partition information may look like once
you have entered the disklabel editor. Disk partition sizes and offsets
are in sector (most likely 512 bytes) units. You may set these size/offset
pairs on cylinder boundaries (the number of sector per cylinder is given
in the `sectors/cylinder' entry, which is not shown here).
d312 1
a312 1
[Example]
a334 3
	#echo -n "Copying kernel..."
	#cp -p /bsd /mnt/bsd
	#echo "done."
d405 1
@


1.1
log
@PowerPC ramdisk stuff. "list" and scripts still needs work. This is only the
first "work copy"...
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.5 1997/05/19 22:19:58 pefo Exp $
d86 1
a86 1
# do the copy.....
d106 1
a106 1
	echo "store about three to four different bootable kernels on the disk."
d110 1
a110 1
	echo "your ARC system manuals for doing setup this way."
d145 1
a145 1
	echo -n "Have initialized a MSDOS partition with OpenFirmware? [n]"
@
