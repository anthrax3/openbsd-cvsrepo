head	1.19;
access;
symbols
	OPENBSD_6_2:1.19.0.4
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.17.0.8
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.6.0.12
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.10
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.8
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.6
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.5.0.6
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3;
locks; strict;
comment	@# @;


1.19
date	2017.08.13.15.41.30;	author jasper;	state Exp;
branches;
next	1.18;
commitid	Zfv9pmF8993F5X8d;

1.18
date	2017.06.13.16.28.04;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	UBGc9cx40ncZbnca;

1.17
date	2015.09.07.01.41.35;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	jcZERL4IVySX2Kqa;

1.16
date	2015.09.06.18.22.10;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	4d72lPkmrENzV0tu;

1.15
date	2014.09.21.13.44.44;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	oU9URDYHjCPgvf88;

1.14
date	2014.08.26.21.36.44;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	d7fVtFqlTBeFuAsD;

1.13
date	2014.03.30.05.05.08;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2014.03.30.04.56.06;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2014.03.02.16.06.14;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2014.03.02.15.57.34;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2014.03.02.05.46.26;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2014.01.24.00.34.22;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2014.01.12.21.58.00;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.18.05.40.47;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2008.08.25.17.18.55;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2007.08.10.12.29.55;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.10.03.02.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2007.08.10.02.28.53;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@strip .SUNW_ctf in the remaining strip invocations

broke amd64/ramdisk_cd as it no longer fit; spotted by jsg@@
ok deraadt@@ mpi@@
@
text
@#	$OpenBSD: Makefile,v 1.18 2017/06/13 16:28:04 deraadt Exp $

TOP=	${.CURDIR}/..

.include "${TOP}/Makefile.inc"

CDROM=		install${REV}.iso

FS=		install${REV}.fs
FSSIZE=		737280
FSTYPE=		install360

RAMDISK=	RAMDISK_CD

MOUNT_POINT=	/mnt
MTREE=		${UTILS}/mtree.conf

RELXDIR?=	/home/relx-${MACHINE}
RELDIR?=	/home/rel-${MACHINE}

BSDRD=		${RELDIR}/bsd.rd
BASE=		${RELDIR}/base${OSrev}.tgz ${RELDIR}/comp${OSrev}.tgz \
		${RELDIR}/game${OSrev}.tgz ${RELDIR}/man${OSrev}.tgz \
		${RELDIR}/bsd ${RELDIR}/bsd.rd ${RELDIR}/bsd.mp \
		${RELDIR}/INSTALL.${MACHINE}
XBASE=		${RELXDIR}/xbase${OSrev}.tgz ${RELXDIR}/xfont${OSrev}.tgz \
		${RELXDIR}/xshare${OSrev}.tgz ${RELXDIR}/xserv${OSrev}.tgz

VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
VND_IDEV=	/dev/${VND}i
VND_IRDEV=	/dev/r${VND}i
BOOT?=		${DESTDIR}/usr/mdec/boot
EFIBOOT?=	${DESTDIR}/usr/mdec/BOOTX64.EFI ${DESTDIR}/usr/mdec/BOOTIA32.EFI
PID!=		echo $$$$
REALIMAGE!=	echo /var/tmp/image.${PID}
MSDOSSIZE=	960
TOTALSIZE!=	expr ${FSSIZE} + ${MSDOSSIZE}
TEMPLATE=	${.CURDIR}/template

all: ${CDROM} ${FS}

${FS}: ${BASE} ${XBASE} bsd.gz
	dd if=/dev/zero of=${REALIMAGE} bs=512 count=${TOTALSIZE}
	vnconfig -v -c ${VND} ${REALIMAGE}
	fdisk -yi -l ${FSSIZE} -b ${MSDOSSIZE} -f ${DESTDIR}/usr/mdec/mbr ${VND}
.ifdef TEMPLATE
	disklabel -wAT ${TEMPLATE} ${VND}
	newfs -t msdos ${VND_IRDEV}
	mount ${VND_IDEV} ${MOUNT_POINT}
	mkdir -p ${MOUNT_POINT}/efi/boot
	cp ${EFIBOOT} ${MOUNT_POINT}/efi/boot
	umount ${MOUNT_POINT}
.else
	disklabel -w ${VND} ${FSTYPE}
.endif
	newfs -m 0 -o space -i 524288 -c ${FSSIZE} ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}
	cp ${BOOT} ${MOUNT_POINT}/boot
	strip ${MOUNT_POINT}/boot
	strip -R .comment -R .SUNW_ctf ${MOUNT_POINT}/boot
	dd if=bsd.gz of=${MOUNT_POINT}/bsd bs=512
	installboot -v -r ${MOUNT_POINT} ${VND_CRDEV} \
	    ${DESTDIR}/usr/mdec/biosboot ${MOUNT_POINT}/boot
	mkdir -p ${MOUNT_POINT}/${OSREV}/${MACHINE}
	mkdir -p ${MOUNT_POINT}/etc
	echo "set image /${OSREV}/${MACHINE}/bsd.rd" > ${MOUNT_POINT}/etc/boot.conf

	cp -p ${BASE} ${MOUNT_POINT}/${OSREV}/${MACHINE}
	cp -p ${XBASE} ${MOUNT_POINT}/${OSREV}/${MACHINE}

	cat ${RELDIR}/SHA256 ${RELXDIR}/SHA256 > \
	    ${MOUNT_POINT}/${OSREV}/${MACHINE}/SHA256
	# XXX no SHA256.sig

	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	umount ${MOUNT_POINT}
	vnconfig -u ${VND}
	cp ${REALIMAGE} ${FS}
	rm ${REALIMAGE}

${CDROM}: ${BASE} ${XBASE}
	-rm -rf ${.OBJDIR}/cd-dir
	mkdir -p ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}
	mkdir -p ${.OBJDIR}/cd-dir/etc
	echo "set image /${OSREV}/${MACHINE}/bsd.rd" > ${.OBJDIR}/cd-dir/etc/boot.conf

	cp -p ${BASE} ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}
	cp -p ${XBASE} ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}

	cat ${RELDIR}/SHA256 ${RELXDIR}/SHA256 > \
	    ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256
	# XXX no SHA256.sig

	cp -p ${RELDIR}/cdbr ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}
	cp -p ${RELDIR}/cdboot ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/cdboot

	mkhybrid -a -R -T -L -l -d -D -N -o ${.OBJDIR}/${CDROM} -v -v \
	    -A "OpenBSD ${OSREV} ${MACHINE} Install CD" \
	    -P "Copyright (c) `date +%Y` Theo de Raadt, The OpenBSD project" \
	    -p "Theo de Raadt <deraadt@@openbsd.org>" \
	    -V "OpenBSD/${MACHINE}   ${OSREV} Install CD" \
	    -b ${OSREV}/${MACHINE}/cdbr -c ${OSREV}/${MACHINE}/boot.catalog \
	    ${.OBJDIR}/cd-dir

install:
	cp ${CDROM} ${FS} ${RELDIR}/

clean cleandir:
	/bin/rm -f ${CDROM} ${FS}
	rm -rf cd-dir

bsd.gz: bsd.rd
	cp ${BSDRD} bsd.strip
	strip bsd.strip
	strip -R .comment -R .SUNW_ctf bsd.strip
	gzip -c9n bsd.strip > bsd.gz

bsd.rd: ${BSDRD}

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.18
log
@The KARL compile.tgz linkkit adds some growth to the base set.
Prepare the install*.fs files for this growth.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2015/09/07 01:41:35 deraadt Exp $
d63 1
a63 1
	strip -R .comment ${MOUNT_POINT}/boot
d120 1
a120 1
	strip -R .comment bsd.strip
@


1.17
log
@also install BOOTIA32.EFI
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2015/09/06 18:22:10 deraadt Exp $
d10 2
a11 2
FSSIZE=		573440
FSTYPE=		install280
@


1.16
log
@create uefi/msdos partition using fdisk -b, then place uefi bootloader
into there.  inspired by similar changes kettenis is making to the
smaller miniroot.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2014/09/21 13:44:44 deraadt Exp $
d36 1
a36 1
EFIBOOT?=	${DESTDIR}/usr/mdec/BOOTX64.EFI
@


1.15
log
@xetc set does not go onto little iso
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2014/08/26 21:36:44 deraadt Exp $
d33 2
d36 1
d39 3
d46 1
a46 1
	dd if=/dev/zero of=${REALIMAGE} bs=512 count=${FSSIZE}
d48 9
a56 1
	fdisk -yi -l ${FSSIZE} -f ${DESTDIR}/usr/mdec/mbr ${VND}
d58 1
@


1.14
log
@no more exposed etc set
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2014/03/30 05:05:08 deraadt Exp $
d26 2
a27 3
XBASE=		${RELXDIR}/xbase${OSrev}.tgz ${RELXDIR}/xetc${OSrev}.tgz \
		${RELXDIR}/xfont${OSrev}.tgz ${RELXDIR}/xshare${OSrev}.tgz \
		${RELXDIR}/xserv${OSrev}.tgz
@


1.13
log
@increase size of iso media (try 2)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2014/03/30 04:56:06 deraadt Exp $
d23 1
a23 2
		${RELDIR}/etc${OSrev}.tgz ${RELDIR}/game${OSrev}.tgz \
		${RELDIR}/man${OSrev}.tgz \
@


1.12
log
@increase size of iso media
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2014/03/02 16:06:14 deraadt Exp $
d10 1
a10 1
FSSIZE=		491520
@


1.11
log
@also install the "maxiroot"
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2014/03/02 15:57:34 deraadt Exp $
d11 1
a11 1
FSTYPE=		install240
@


1.10
log
@Build a (USB or other disk) miniroot, which can be dd'd and booted since
it is in LBA form.
Work by chris@@, integration methodology proposed by me.  Needs improvements
after release..
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2014/03/02 05:46:26 deraadt Exp $
d98 1
a98 1
	cp ${CDROM} ${RELDIR}/
@


1.9
log
@Unfortunately... the "full-size downloadable" ISOs will ship without
internal-signing, because the procedures ran into some snags we can't
fix in time for release...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2014/01/24 00:34:22 deraadt Exp $
d8 10
d21 1
d31 41
a71 1
all: ${CDROM}
a88 1

d101 1
a101 1
	/bin/rm -f ${CDROM}
d103 8
@


1.8
log
@Refactor the install*.iso creation in regards to signing.
ok todd
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2014/01/12 21:58:00 deraadt Exp $
d30 4
a33 2
	cp -p ${RELDIR}/.i-SHA256 ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256
	cp -p ${RELDIR}/.i-SHA256.sig ${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256.sig
@


1.7
log
@Place a SHA256 (not SHA256.sig, sorry not yet) onto the install*.iso
media to give some upcoming changes a chance of working.

Long discussions with todd and rpe
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2010/10/18 05:40:47 deraadt Exp $
d30 2
a35 2
	cat ${RELDIR}/SHA256 ${RELXDIR}/SHA256 > \
		${.OBJDIR}/cd-dir/${OSREV}/${MACHINE}/SHA256
a46 5
	# update the SHA256 file
	grep -v ${CDROM} ${RELDIR}/SHA256 > ${RELDIR}/SHA256.new
	sum -a sha256 ${CDROM} >> ${RELDIR}/SHA256.new
	sort ${RELDIR}/SHA256.new > ${RELDIR}/SHA256
	rm ${RELDIR}/SHA256.new
@


1.6
log
@no more misc set
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2009/04/17 03:58:54 deraadt Exp $
d33 3
@


1.5
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2008/08/25 17:18:55 deraadt Exp $
d13 1
a13 1
		${RELDIR}/man${OSrev}.tgz ${RELDIR}/misc${OSrev}.tgz \
@


1.4
log
@use ?= for adjusting RELXDIR for all sets
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2007/08/10 12:29:55 deraadt Exp $
d44 5
@


1.3
log
@add missing xserv, and use ${MACHINE} throughout (still needs testing)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2007/08/10 03:02:38 deraadt Exp $
d8 1
a8 1
RELXDIR=	/home/relx-${MACHINE}
@


1.2
log
@use more variables, because variables are good
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2007/08/10 02:28:53 deraadt Exp $
d8 2
a9 2
RELXDIR=	/home/relx-amd64
RELDIR?=	/home/rel-amd64
d15 1
a15 1
		${RELDIR}/INSTALL.amd64
d17 2
a18 1
		${RELXDIR}/xfont${OSrev}.tgz ${RELXDIR}/xshare${OSrev}.tgz
d24 1
a24 1
	mkdir -p ${.OBJDIR}/cd-dir/${OSREV}/amd64
d26 1
a26 1
	echo "set image /${OSREV}/amd64/bsd.rd" > ${.OBJDIR}/cd-dir/etc/boot.conf
d28 2
a29 2
	cp -p ${BASE} ${.OBJDIR}/cd-dir/${OSREV}/amd64
	cp -p ${XBASE} ${.OBJDIR}/cd-dir/${OSREV}/amd64
d31 2
a32 2
	cp -p ${RELDIR}/cdbr ${.OBJDIR}/cd-dir/${OSREV}/amd64
	cp -p ${RELDIR}/cdboot ${.OBJDIR}/cd-dir/${OSREV}/amd64/cdboot
d35 1
a35 1
	    -A "OpenBSD ${OSREV} amd64 Install CD" \
d38 2
a39 2
	    -V "OpenBSD/amd64   ${OSREV} Install CD" \
	    -b ${OSREV}/amd64/cdbr -c ${OSREV}/amd64/boot.catalog \
@


1.1
log
@a somewhat crude way to generate installXX.iso files based on
intermediate snapshot components.  uses some knowledge from our internal
build scheme to link together base and X sets.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2005/03/11 15:40:58 deraadt Exp $
d10 9
d21 1
a21 1
${CDROM}:
d27 2
a28 8
	cp -p ${RELDIR}/{base,comp,etc,game,man,misc}${OSrev}.tgz \
	    ${.OBJDIR}/cd-dir/${OSREV}/amd64
	cp -p ${RELDIR}/{bsd,bsd.rd,bsd.mp} \
	    ${.OBJDIR}/cd-dir/${OSREV}/amd64
	cp -p ${RELXDIR}/{xbase,xetc,xfont,xserv,xshare}${OSrev}.tgz \
	    ${.OBJDIR}/cd-dir/${OSREV}/amd64
	cp -p ${RELDIR}/INSTALL.amd64 \
	    ${.OBJDIR}/cd-dir/${OSREV}/amd64
@

