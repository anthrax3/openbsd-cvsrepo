head	1.54;
access;
symbols
	OPENBSD_6_1_BASE:1.54
	OPENBSD_6_0:1.51.0.4
	OPENBSD_6_0_BASE:1.51
	OPENBSD_5_9:1.51.0.2
	OPENBSD_5_9_BASE:1.51
	OPENBSD_5_8:1.41.0.4
	OPENBSD_5_8_BASE:1.41
	OPENBSD_5_7:1.37.0.2
	OPENBSD_5_7_BASE:1.37
	OPENBSD_5_6:1.35.0.4
	OPENBSD_5_6_BASE:1.35
	OPENBSD_5_5:1.34.0.2
	OPENBSD_5_5_BASE:1.34
	OPENBSD_5_4:1.32.0.4
	OPENBSD_5_4_BASE:1.32
	OPENBSD_5_3:1.32.0.2
	OPENBSD_5_3_BASE:1.32
	OPENBSD_5_2:1.31.0.2
	OPENBSD_5_2_BASE:1.31
	OPENBSD_5_1_BASE:1.29
	OPENBSD_5_1:1.29.0.4
	OPENBSD_5_0:1.29.0.2
	OPENBSD_5_0_BASE:1.29
	OPENBSD_4_9:1.26.0.2
	OPENBSD_4_9_BASE:1.26
	OPENBSD_4_8:1.25.0.2
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.23.0.2
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.23.0.4
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.10.0.4
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.7.0.4
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.6.0.6
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.4
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.54
date	2017.01.22.23.43.54;	author rpe;	state Exp;
branches;
next	1.53;
commitid	T8Ujv1g6HeWswBdS;

1.53
date	2016.09.04.09.52.03;	author rpe;	state Exp;
branches;
next	1.52;
commitid	MluxzkKaq4wrtv84;

1.52
date	2016.09.02.12.22.09;	author pirofti;	state Exp;
branches;
next	1.51;
commitid	pvnnnAoQDYs1rtLk;

1.51
date	2016.02.08.17.28.08;	author krw;	state Exp;
branches;
next	1.50;
commitid	4nj4L34RoKX0PFN0;

1.50
date	2015.12.29.11.16.14;	author rpe;	state Exp;
branches;
next	1.49;
commitid	dPgVJD33gNmmCKz4;

1.49
date	2015.12.28.17.00.13;	author rpe;	state Exp;
branches;
next	1.48;
commitid	WU3281xYhEsqxwWk;

1.48
date	2015.12.18.16.20.58;	author rpe;	state Exp;
branches;
next	1.47;
commitid	VkQ4KC1oXExBZv81;

1.47
date	2015.12.02.21.17.16;	author krw;	state Exp;
branches;
next	1.46;
commitid	qjXM8wxHbdPw7A4U;

1.46
date	2015.12.02.17.46.03;	author krw;	state Exp;
branches;
next	1.45;
commitid	hpBylFmvrCXC2aG8;

1.45
date	2015.11.09.20.54.12;	author rpe;	state Exp;
branches;
next	1.44;
commitid	euu2kEavGhIGtt10;

1.44
date	2015.10.25.10.20.51;	author krw;	state Exp;
branches;
next	1.43;
commitid	hwNh1w1pPCoWC2Xa;

1.43
date	2015.10.09.18.30.54;	author rpe;	state Exp;
branches;
next	1.42;
commitid	wH1kozq0xnfue9Fq;

1.42
date	2015.10.07.18.02.06;	author krw;	state Exp;
branches;
next	1.41;
commitid	ckUctlDiCYNxkVZg;

1.41
date	2015.06.02.19.54.06;	author rpe;	state Exp;
branches;
next	1.40;
commitid	zUqrjWrWSBxkCmbI;

1.40
date	2015.06.02.19.39.18;	author rpe;	state Exp;
branches;
next	1.39;
commitid	JUhqCleEkW5lHyMG;

1.39
date	2015.05.31.19.40.10;	author rpe;	state Exp;
branches;
next	1.38;
commitid	p6r5f9n0C0WoWNND;

1.38
date	2015.05.04.19.55.26;	author rpe;	state Exp;
branches;
next	1.37;
commitid	NyWrBKI5Tnb4FUEi;

1.37
date	2015.01.12.16.33.31;	author deraadt;	state Exp;
branches;
next	1.36;
commitid	A44BjxYQVmvEK2uf;

1.36
date	2014.08.15.09.45.54;	author rpe;	state Exp;
branches;
next	1.35;
commitid	1ay5nPocSGoegdY3;

1.35
date	2014.07.20.20.12.41;	author deraadt;	state Exp;
branches;
next	1.34;
commitid	6WWKcMEXNAUweNPh;

1.34
date	2014.01.19.04.08.27;	author jsing;	state Exp;
branches;
next	1.33;

1.33
date	2013.11.16.18.37.26;	author rpe;	state Exp;
branches;
next	1.32;

1.32
date	2012.10.15.17.21.04;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2012.07.13.14.50.34;	author halex;	state Exp;
branches;
next	1.30;

1.30
date	2012.07.10.14.25.00;	author halex;	state Exp;
branches;
next	1.29;

1.29
date	2011.07.06.20.02.16;	author halex;	state Exp;
branches;
next	1.28;

1.28
date	2011.04.17.20.57.10;	author krw;	state Exp;
branches;
next	1.27;

1.27
date	2011.03.22.19.20.16;	author krw;	state Exp;
branches;
next	1.26;

1.26
date	2011.01.03.00.36.46;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2010.08.08.21.06.06;	author krw;	state Exp;
branches;
next	1.24;

1.24
date	2010.08.08.17.02.14;	author krw;	state Exp;
branches;
next	1.23;

1.23
date	2009.06.11.04.28.49;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2009.06.04.00.44.46;	author krw;	state Exp;
branches;
next	1.21;

1.21
date	2009.06.02.16.23.45;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2009.05.31.17.49.53;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2009.05.11.17.13.07;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2009.05.09.21.37.26;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2009.04.30.00.03.06;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2009.04.25.03.21.50;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2009.04.24.01.43.27;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2009.04.24.01.04.33;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2009.04.12.12.56.01;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2009.04.12.01.35.01;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.10.23.11.17;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.26.05.42.03;	author ray;	state Exp;
branches;
next	1.9;

1.9
date	2008.03.23.14.03.55;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2008.03.04.00.36.38;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2007.02.11.18.59.30;	author krw;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.02.14.34.46;	author krw;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.27.15.13.49;	author krw;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.26.19.27.11;	author krw;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.26.01.40.20;	author krw;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.12.23.46.08;	author krw;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.07.21.16.47;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.54
log
@Whitespaces ...
@
text
@#	$OpenBSD: install.md,v 1.53 2016/09/04 09:52:03 rpe Exp $
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# machine dependent section of installation/upgrade script.
#

MDXAPERTURE=2
MDXDM=y
NCPU=$(sysctl -n hw.ncpufound)

if dmesg | grep -q 'efifb0 at mainbus0'; then
	MDEFI=y
fi

((NCPU > 1)) && { DEFAULTSETS="bsd bsd.rd bsd.mp"; SANESETS="bsd bsd.mp"; }

md_installboot() {
	if ! installboot -r /mnt ${1}; then
		echo "\nFailed to install bootblocks."
		echo "You will not be able to boot OpenBSD from ${1}."
		exit
	fi
}

md_prep_fdisk() {
	local _disk=$1 _q _d

	while :; do
		_d=whole
		_q="Use (W)hole disk MBR, whole disk (G)PT"

		[[ $MDEFI == y ]] && _d=gpt

		if disk_has $_disk mbr || disk_has $_disk gpt; then
			fdisk $_disk
			if disk_has $_disk mbr openbsd ||
				disk_has $_disk gpt openbsd; then
				_q="$_q, (O)penBSD area"
				_d=OpenBSD
			fi
		else
			echo "No valid MBR or GPT."
		fi

		ask "$_q or (E)dit?" "$_d"
		case $resp in
		[wW]*)
			echo -n "Setting OpenBSD MBR partition to whole $_disk..."
			fdisk -iy $_disk >/dev/null
			echo "done."
			return ;;
		[gG]*)
			if [[ $MDEFI != y ]]; then
				ask_yn "An EFI/GPT disk may not boot. Proceed?"
				[[ $resp == n ]] && continue
			fi

			echo -n "Setting OpenBSD GPT partition to whole $_disk..."
			fdisk -iy -g -b 960 $_disk >/dev/null
			echo "done."
			return ;;
		[eE]*)
			if disk_has $_disk gpt; then
				# Manually configure the GPT.
				cat <<__EOT

You will now create two GPT partitions. The first must have an id
of 'EF' and be large enough to contain the OpenBSD boot programs,
at least 960 blocks. The second must have an id of 'A6' and will
contain your OpenBSD data. Neither may overlap other partitions.
Inside the fdisk command, the 'manual' command describes the fdisk
commands in detail.

$(fdisk $_disk)
__EOT
				fdisk -e $_disk

				if ! disk_has $_disk gpt openbsd; then
					echo -n "No OpenBSD partition in GPT,"
				elif ! disk_has $_disk gpt efisys; then
					echo -n "No EFI Sys partition in GPT,"
				else
					return
				fi
			else
				# Manually configure the MBR.
				cat <<__EOT

You will now create a single MBR partition to contain your OpenBSD data. This
partition must have an id of 'A6'; must *NOT* overlap other partitions; and
must be marked as the only active partition.  Inside the fdisk command, the
'manual' command describes all the fdisk commands in detail.

$(fdisk $_disk)
__EOT
				fdisk -e $_disk
				disk_has $_disk mbr openbsd && return
				echo -n "No OpenBSD partition in MBR,"
			fi
			echo "try again." ;;
		[oO]*)
			[[ $_d == OpenBSD ]] || continue
			if [[ $_disk == $ROOTDISK ]] && disk_has $_disk gpt &&
				! disk_has $_disk gpt efisys; then
				echo "No EFI Sys partition in GPT, try again."
				$AUTO && exit 1
				continue
			fi
			return ;;
		esac
	done
}

md_prep_disklabel() {
	local _disk=$1 _f=/tmp/i/fstab.$1

	md_prep_fdisk $_disk

	disklabel_autolayout $_disk $_f || return
	[[ -s $_f ]] && return

	# Edit disklabel manually.
	# Abandon all hope, ye who enter here.
	disklabel -F $_f -E $_disk
}

md_congrats() {
}

md_consoleinfo() {
	local _u _d=com

	for _u in $(scan_dmesg "/^$_d\([0-9]\) .*/s//\1/p"); do
		if [[ $_d$_u == $CONSOLE || -z $CONSOLE ]]; then
			CDEV=$_d$_u
			CPROM=com$_u
			CTTY=tty0$_u
			return
		fi
	done
}
@


1.53
log
@Move files created by root during install/upgrade in a subdir of
/tmp with proper permissions so that unprivileged programs can not
tamper with them.

positive feedback from deraadt
OK halex
@
text
@d1 1
a1 2
#	$OpenBSD: install.md,v 1.52 2016/09/02 12:22:09 pirofti Exp $
#
@


1.52
log
@Fix misleading 'No valid MBR or GPT' message when no OpenBSD area is found.


The current code is too strict and checks for an OpenBSD area inside an
MBR or GPT and if it fails to find one reports that there's no valid MBR
or GPT (which is misleading because the MBR/GPT is valid).

Instead, do two checks (similar to i386): first see if there's an MBR or GPT
present on the disk and if there is then check for the OpenBSD area.

OK krw@@, halex@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.51 2016/02/08 17:28:08 krw Exp $
d143 1
a143 1
	local _disk=$1 _f=/tmp/fstab.$1
@


1.51
log
@If manual disklabel editing is requested during install, don't emit
verbiage explaining what disklabels are.

If you don't know, you should be using (A)uto!

ok rpe@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.50 2015/12/29 11:16:14 rpe Exp $
d62 1
a62 3
		if disk_has $_disk mbr openbsd || disk_has $_disk gpt openbsd; then
			_q="$_q, (O)penBSD area"
			_d=OpenBSD
d64 5
@


1.50
log
@Change patterns in case-blocks from a*|A* to [aA]*

OK halex@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.49 2015/12/28 17:00:13 rpe Exp $
d147 2
a148 12
	cat <<__EOT

You will now create an OpenBSD disklabel inside the OpenBSD MBR
partition. The disklabel defines how OpenBSD splits up the MBR partition
into OpenBSD partitions in which filesystems and swap space are created.
You must provide each filesystem's mountpoint in this program.

The offsets used in the disklabel are ABSOLUTE, i.e. relative to the
start of the disk, NOT the start of the OpenBSD MBR partition.

__EOT

@


1.49
log
@- no need to insist on EFISYS partitions on non-root disks.
- prevent autoinstall loop

OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.48 2015/12/18 16:20:58 rpe Exp $
d72 1
a72 1
		w*|W*)
d77 1
a77 1
		g*|G*)
d87 1
a87 1
		e*|E*)
d126 1
a126 1
		o*|O*)
@


1.48
log
@Introduce a new function disk_has() to inspect a disk if it has a
partition-table of a certain type and optionally if it has a partition
of a certain type.

Use disk_has() in the install.md script to replace all the various
"fdisk <disk> | grep <pattern>" commands greatly simplifying things.

positive feedback from sthen@@
"time to get it really tested" deraadt@@
OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.47 2015/12/02 21:17:16 krw Exp $
d128 2
a129 1
			if disk_has $_disk gpt && ! disk_has $_disk gpt efisys; then
d131 1
@


1.47
log
@If (O)penBSD is not offered as a partitioning option, do not accept
'O*|o*' as a valid response. Ignore it as we do other invalid input.

armv7 is special case to be handled separately.

Noticed by kettenis@@.

ok deraadt@@ rpe@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.46 2015/12/02 17:46:03 krw Exp $
d62 3
a64 1
		if fdisk $_disk | grep -q 'Signature: 0xAA55'; then
a65 8
			if fdisk $_disk | grep -q '^..: A6 '; then
				_d=OpenBSD
			fi
		elif fdisk $_disk | grep -q "First usable LBA:"; then
			fdisk $_disk
			if fdisk $_disk | grep -q "^      OpenBSD "; then
				_d=OpenBSD
			fi
a68 1
		[[ $_d == OpenBSD ]] && _q="$_q, (O)penBSD area"
d88 1
a88 1
			if fdisk $_disk | grep -q "First usable LBA:"; then
d102 2
a103 3
				_d=$(fdisk $_disk | grep "^      OpenBSD ")
				_q=$(fdisk $_disk | grep "^      EFI Sys ")
				if [[ -z $_d ]]; then
d105 1
a105 1
				elif [[ -z $_q ]]; then
d122 1
a122 1
				fdisk $_disk | grep -q ' A6 ' && return
d128 1
a128 3
			_d=$(fdisk $_disk | grep "First usable LBA:")
			_q=$(fdisk $_disk | grep "^      EFI Sys ")
			if [[ -n $_d && -z $_q ]]; then
@


1.46
log
@Make GPT an option equivalent to MBR when installing. Warn that the
result may not be bootable if GPT is used on a machine that did not
boot via EFI. But allow the user to proceed if the user insists.
Sometimes you just want to create an EFI bootable image on a non-EFI
machine.

Enforce the presence of both an OpenBSD partition and an EFI Sys
partition if GPT partitioning is used.

Prompted by complaints and observations from kettenis@@.

Verbiage tweak from doug@@. Tested & ok rpe@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.45 2015/11/09 20:54:12 rpe Exp $
d135 1
@


1.45
log
@Fix commas in "Use (W)hole disk MBR..." question.

OK jmc@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.44 2015/10/25 10:20:51 krw Exp $
d58 1
d60 1
a60 2
		[[ $MDEFI == y && $_disk == $ROOTDISK ]] &&
			_q=", whole disk (G)PT"
d65 5
a69 1
				_q="$_q, use the (O)penBSD area"
d73 1
a73 1
			echo "MBR has invalid signature; not showing it."
d75 3
a77 1
		ask "Use (W)hole disk MBR$_q or (E)dit the MBR?" "$_d"
d85 3
a87 4
			if [[ $MDEFI != y || $_disk != $ROOTDISK ]]; then
				echo "'$resp' is not a valid choice."
				$AUTO && exit 1
				continue
d91 1
a91 1
			fdisk -i -g -b 960 -y $_disk >/dev/null
d95 26
a120 2
			# Manually configure the MBR.
			cat <<__EOT
d127 1
a127 1
$(fdisk ${_disk})
d129 13
a141 4
			fdisk -e ${_disk}
			fdisk $_disk | grep -q ' A6 ' && return
			echo No OpenBSD partition in MBR, try again. ;;
		o*|O*)	return ;;
@


1.44
log
@Use 'fdisk -i', instead of 'fdisk -e' with a here document of
'reinit;update;write;quit'. They've done the same thing for some
time now.

Tweaks & test from rpe@@.

ok rpe@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.43 2015/10/09 18:30:54 rpe Exp $
d60 1
a60 1
			_q=", whole disk (G)PT,"
d65 1
a65 1
				_q="$_q, use the (O)penBSD area,"
@


1.43
log
@Exit autoinstall in case of an invalid choice.

OK krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.42 2015/10/07 18:02:06 krw Exp $
d75 1
a75 6
			fdisk -e ${_disk} <<__EOT >/dev/null
reinit
update
write
quit
__EOT
@


1.42
log
@Add initial support for UEFI/GPT installs to install script. Original
diff from rpe@@.

ok deraadt@@ yasuoka@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.41 2015/06/02 19:54:06 rpe Exp $
d84 5
a88 1
			[[ $MDEFI == y && $_disk == $ROOTDISK ]] || continue
@


1.41
log
@Remove the $FSTABFLAG variable and use -F directly. The installer
uses disklabel UIDs unconditionally for a while already.

OK krw@@
"looks good" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.40 2015/06/02 19:39:18 rpe Exp $
d39 4
d58 4
d65 1
a65 1
				_q=", use the (O)penBSD area,"
d71 1
a71 1
		ask "Use (W)hole disk$_q or (E)dit the MBR?" "$_d"
d81 7
@


1.40
log
@Replace
  [[ -n $(foo | grep 'bar') ]]
with
  foo | grep -q 'bar'

OK halex@@ krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.39 2015/05/31 19:40:10 rpe Exp $
d114 1
a114 1
	disklabel $FSTABFLAG $_f -E $_disk
@


1.39
log
@Replace identical code in the MD scripts of the installer with a new
MI function disklabel_autolayout() which now handles all aspects of
the disklabel auto-layout and autopartitioning case for the root disk.
Remove get_disklabel_template() and merge it with the new function.

"move forward" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.38 2015/05/04 19:55:26 rpe Exp $
d54 1
a54 1
		if [[ -n $(fdisk $_disk | grep 'Signature: 0xAA55') ]]; then
d56 1
a56 1
			if [[ -n $(fdisk $_disk | grep '^..: A6 ') ]]; then
d87 1
a87 1
			[[ -n $(fdisk $_disk | grep ' A6 ') ]] && return
@


1.38
log
@Add the new template file based autopartitioning feature of disklabel(8)
to the OpenBSD installer. It is available during unattended installation.
The template file is fetched from an url, provided as answer to a new
question in the response file:

    URL to autopartitioning template for disklabel = url

Original diff from and OK henning@@
'no objection' krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.37 2015/01/12 16:33:31 deraadt Exp $
d95 1
a95 1
	local _disk=$1 _f _op
d99 2
a100 21
	_f=/tmp/fstab.$_disk
	if [[ $_disk == $ROOTDISK ]]; then
		if $AUTO && get_disklabel_template; then
			disklabel -T /disklabel.auto $FSTABFLAG $_f -w -A $_disk && return
			echo "Autopartitioning failed"
			exit 1
		fi
		while :; do
			echo "The auto-allocated layout for $_disk is:"
			disklabel -h -A $_disk | egrep "^#  |^  [a-p]:"
			ask "Use (A)uto layout, (E)dit auto layout, or create (C)ustom layout?" a
			case $resp in
			a*|A*)	_op=-w ;;
			e*|E*)	_op=-E ;;
			c*|C*)	break ;;
			*)	continue ;;
			esac
			disklabel $FSTABFLAG $_f $_op -A $_disk
			return
		done
	fi
@


1.37
log
@Enable lid suspends by default in the kernel, and remove the question from
the installer.  We used a full release cycle to learn that suspend/resume
is reliable enough for this default.  Personal policy can disable this using
machdep.lidsuspend=0 in /etc/sysctl.conf
ok more people begging, and less people whining
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.36 2014/08/15 09:45:54 rpe Exp $
d101 5
@


1.36
log
@Align install.md files with installer style.

- { foo ; bar ; } -> { foo; bar; }
- if foo ; then -> if foo; then

OK halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.35 2014/07/20 20:12:41 deraadt Exp $
a36 1
MDLID=y
@


1.35
log
@ask about lid
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.34 2014/01/19 04:08:27 jsing Exp $
d40 1
a40 1
((NCPU > 1)) && { DEFAULTSETS="bsd bsd.rd bsd.mp" ; SANESETS="bsd bsd.mp" ; }
d43 1
a43 1
	if ! installboot -r /mnt ${1} ; then
@


1.34
log
@Switch amd64 installs/upgrades to the new installboot.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.33 2013/11/16 18:37:26 rpe Exp $
d37 1
@


1.33
log
@Remove AUTOROOT variable which is a leftover of r1.183 of install.sub

diff from Philipp e1c1bac6253dc54a1e89ddc046585792 at osteo dot net

ok krw@@ halex@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.32 2012/10/15 17:21:04 deraadt Exp $
d42 1
a42 3
	# Use cat to avoid holes created by cp(1)
	cat /mnt/usr/mdec/boot > /mnt/boot
	if ! /mnt/usr/mdec/installboot /mnt/boot /mnt/usr/mdec/biosboot ${1} ; then
@


1.32
log
@use the baseXX installed /usr/mdec directory instead of placing lots of
heavy boot media into the ramdisk.  i386 tested by okan, amd64 tested
by florian.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.31 2012/07/13 14:50:34 halex Exp $
d108 1
a108 1
			a*|A*)	_op=-w ; AUTOROOT=y ;;
@


1.31
log
@copy boot loaders using cat and shell redirection rather than cp,
since the latter may insert holes in the target files, which could
be bad for the boot process

ok deraadt@@ guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.30 2012/07/10 14:25:00 halex Exp $
d43 2
a44 2
	cat /usr/mdec/boot > /mnt/boot
	if ! /usr/mdec/installboot /mnt/boot /usr/mdec/biosboot ${1} ; then
@


1.30
log
@since disklabel -W is no more, zap it from all the install.md's

ok krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.29 2011/07/06 20:02:16 halex Exp $
d42 2
a43 1
	cp /usr/mdec/boot /mnt/boot
@


1.29
log
@As non-mp install.md's neither set NCPU, nor will have a bsd.mp,
we could as well pull the 'mv bsd.mp bsd' and the associated checks
out of there.

ok deraadt@@ "makes sense" todd@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.28 2011/04/17 20:57:10 krw Exp $
a99 1
	disklabel -W $_disk >/dev/null 2>&1
@


1.28
log
@First crack at enabling the installation of a DUID version of
/etc/fstab, after asking user. Current default is existing behaviour.

Feedback & suggestions deraadt@@, halex@@, jsing@@, todd@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.27 2011/03/22 19:20:16 krw Exp $
a41 6
	if [[ -f /mnt/bsd.mp ]] && ((NCPU > 1)); then
		echo "Multiprocessor machine; using bsd.mp instead of bsd."
		mv /mnt/bsd /mnt/bsd.sp 2>/dev/null
		mv /mnt/bsd.mp /mnt/bsd
	fi

@


1.27
log
@Pay attention to result of amd64/i386 installboot(8).  Warn user
when they won't be able to boot the installed root disk.  Move
installboot invocation to just before congratulation on sucess is
emitted. Thus the installed partition will be 'complete' if it ever
is booted.

"go for it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.26 2011/01/03 00:36:46 deraadt Exp $
d119 1
a119 1
			disklabel -f $_f $_op -A $_disk
d136 1
a136 1
	disklabel -f $_f -E $_disk
@


1.26
log
@reduce the amount of cd'ing in the install script, since it sucks
to change the environment that functions assume they run in.  use
sub-shells or absolute paths when possible.
ok krw
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.25 2010/08/08 21:06:06 krw Exp $
d49 5
a53 1
	/usr/mdec/installboot /mnt/boot /usr/mdec/biosboot ${1}
@


1.25
log
@Revert auto-enabling of apm. Some security implications were not
fully appreciated, and no time to work through them.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.24 2010/08/08 17:02:14 krw Exp $
d42 1
a42 2
	cd /mnt
	if [[ -f bsd.mp ]] && ((NCPU > 1)); then
d44 2
a45 2
		mv bsd bsd.sp 2>/dev/null
		mv bsd.mp bsd
@


1.24
log
@Look for MD devices or assurance that apmd would be a useful thing to
run. If found, add "apmd_flags=" installed rc.conf.local. Suggested by
deraadt@@.

i386/apm test by kettenis@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.23 2009/06/11 04:28:49 deraadt Exp $
a36 1
MDAPMD="^acpi0: sleep .* S3"
@


1.23
log
@Do not show MBRs without the correct signature, instead say they are
bogus and provide less options to the user
ok krw
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.22 2009/06/04 00:44:46 krw Exp $
d37 1
@


1.22
log
@Nuke now superfluous ARCH=ARCH lines in install.md and the sed processing of
those lines in list2sh.awk.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.21 2009/06/02 16:23:45 krw Exp $
d57 7
a63 4
		fdisk $_disk
		if [[ -n $(fdisk $_disk | grep ' A6 ') ]]; then
			_q=" use the (O)penBSD area,"
			_d=OpenBSD
d65 1
a65 2
			_q=
			_d=whole
d67 1
a67 1
		ask "Use (W)hole disk,$_q or (E)dit the MBR?" "$_d"
@


1.21
log
@Add '-h' flag, and '*' as a unit specifier for 'p' Editor command.
Both cause partition sizes to be displayed using a human readable
format with the units automatically chosen by looking at the smallest
partition in the disk label. Remove forceable humanization in 'A'
code and use '-h' in install scripts.

Prodded & ok deraadt@@, verbiage tweaks from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.20 2009/05/31 17:49:53 deraadt Exp $
a36 1
ARCH=ARCH
@


1.20
log
@Make bootblock installation as silent as possible by default.  While
there, remove a lot of cruft from the various md_installboot functions
ok halex
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.19 2009/05/11 17:13:07 deraadt Exp $
d107 1
a107 1
			disklabel -A $_disk | egrep "^#  |^  [a-p]:"
@


1.19
log
@Remind people that mountpoints must now be entered using the disklabel
command; the script does not ask afterwards.  Note I am not adjusting
the macppc or sgi install.md scripts.  I ask their maintainers to clean
them before I will maintain them further.  Please
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.18 2009/05/09 21:37:26 deraadt Exp $
d51 1
a51 1
	/usr/mdec/installboot -v /mnt/boot /usr/mdec/biosboot ${1}
@


1.18
log
@remove some chatty disklabel stuff
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.17 2009/04/30 00:03:06 deraadt Exp $
d125 1
@


1.17
log
@Redo the fdisk handling for MBR-only architectures (macppc has to get
caught up one day, but that is not my battle).  Hope people like this
tested by oga, ok krw
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.16 2009/04/25 03:21:50 deraadt Exp $
a49 1
	echo Installing boot block...
a51 1
	echo "done."
@


1.16
log
@If the right conditions exist, ask if xdm should be started automatically.
Yes, there are machines where you X needs configuration, but let us be
realistic about it: THAT IS AN X BUG.  And there are machines where getty
and xdm fight: THAT IS A CONSOLE DRIVER BUG.  And this commit is going to
force those bugs to eventually matter enough so that they get fixed.   Just
watch.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.15 2009/04/24 01:43:27 krw Exp $
d57 1
a57 1
	local _disk=$1
d59 14
a72 4
	ask_yn "Do you want to use *all* of $_disk for OpenBSD?"
	if [[ $resp == y ]]; then
		echo -n "Putting all of $_disk into an active OpenBSD MBR partition (type 'A6')..."
		fdisk -e ${_disk} <<__EOT >/dev/null
d78 5
a82 6
		echo "done."
		return
	fi

	# Manually configure the MBR.
	cat <<__EOT
d86 2
a87 10
must be marked as the only active partition.

The 'manual' command describes all the fdisk commands in detail.

$(fdisk ${_disk})
__EOT
	fdisk -e ${_disk}

	cat <<__EOT
Here is the partition information you chose:
d91 6
@


1.15
log
@Remove magic 'bsd.mp -> bsd' linking for the moment as it confuses
subsequent upgrades.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.14 2009/04/24 01:04:33 krw Exp $
d36 1
@


1.14
log
@Move bsd.mp juggling into relevant MD files. Make bsd.mp a default
selection on multi-processor machines. Make bsd.mp a sanity check
item on multi-processor machines.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.13 2009/04/12 12:56:01 krw Exp $
a46 1
		ln -sf bsd bsd.mp
@


1.13
log
@Tweak pattern used to select partition lines for display so the
'# /dev/r...' line is not selected.

Noticed by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.12 2009/04/12 01:35:01 krw Exp $
d37 3
d42 8
@


1.12
log
@No longer need '-f' or '-p' when displaying layout. A few patterns
missed the '# size offset ...' line at the top of the partition
list.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.11 2009/04/10 23:11:17 krw Exp $
d91 1
a91 1
			disklabel -A $_disk | egrep "^#|^  [a-p]:"
@


1.11
log
@Where appropriate display the auto-allocation layout of the root
disk and ask if the installee wants to use it, edit it, or create
their own custom disklabel. Most one-disk installs will not need
to see fdisk or disklabel.

i386 and macppc by me, adapted for others by deraadt@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.10 2008/06/26 05:42:03 ray Exp $
d91 1
a91 1
			disklabel -f $_f -p g -A $_disk | grep "^  [a-p]:"
@


1.10
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.9 2008/03/23 14:03:55 krw Exp $
d82 1
a82 1
	local _disk=$1
d86 18
d115 1
a115 2
	disklabel -W $_disk >/dev/null 2>&1
	disklabel -f /tmp/fstab.$_disk -E $_disk
@


1.9
log
@No point in warning users during install that the disklabel has a
weird number of partitions, doesn't checksum, doesn't exist or was
found at a particular sector. Brings all archs together in omerta by
eliminating use of '-r' and examination of disklabel messages.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.8 2008/03/04 00:36:38 krw Exp $
a17 7
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
@


1.8
log
@Redo serial console configuration logic. Smaller, easier to
understand.

Add serial console handling for alpha, macppc, zaurus.  No functional
change for i386/amd64.

All archs should now have automatic serial console configuration.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.7 2007/02/11 18:59:30 krw Exp $
a51 14
# $1 is the disk to check
md_checkfordisklabel() {
	local rval=0

	disklabel -r $1 >/dev/null 2>/tmp/checkfordisklabel

	if grep "disk label corrupted" /tmp/checkfordisklabel; then
		rval=2
	fi >/dev/null 2>&1

	rm -f /tmp/checkfordisklabel
	return $rval
}

a102 6

	md_checkfordisklabel $_disk
	case $? in
	2)	echo "WARNING: Label on disk $_disk is corrupted. You will be repairing it.\n"
		;;
	esac
@


1.7
log
@Nuke MDFSTYPE and MDFSOPTS, 'mount -t ...' and giving the user the
option to choose a filesystem type when mounting a disk. Rely on the
filesystem information provided by the disklabel.

When there is only one usable partition on the selected disk, just
mount it without bothering the user with a question.

Ensure that msdos filesystems are mounted with '-s' so that the names
of the install sets will be in lower case and thus visible to the
script.

msdos problems noted by Rodolfo Gouveia, who did a lot of testing and
debugging. 'mount -t ...' silliness pointed out by deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.6 2005/04/02 14:34:46 krw Exp $
a42 1
MDSERIAL="com com tty0"
d129 13
@


1.6
log
@Scrounge a few more characters of whitespace, mostly to be consistant.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.5 2005/03/27 15:13:49 krw Exp $
a41 2
MDFSTYPE=msdos
MDFSOPTS=-s
@


1.5
log
@Use new skeleton kbd(8) '-l' to generalize kbd(8) use.  Eliminate
fixed list of available maps and machine dependant md_set_term()
functions.

Any ramdisk with /sbin/kbd present (amd64, cats, i386 at the moment)
will now present list of available keyboard encodings.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.4 2005/03/26 19:27:11 krw Exp $
d75 1
a75 1
		fdisk -e ${_disk} << __EOT > /dev/null
d86 1
a86 1
	cat << __EOT
d98 1
a98 1
	cat << __EOT
d110 1
a110 1
	cat << __EOT
@


1.4
log
@Simplify/shrink kbd(8) logic and verbiage. Always ask for best kbd(8)
table.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.3 2005/03/26 01:40:20 krw Exp $
a46 11

md_set_term() {
	local _tables="be br de dk es fr it jp no sf sg sv uk us"

	ask_yn "Are you using a USB keyboard?"
	[[ $resp == n ]] && _tables="$_tables pt ru ua"
	_tables=$(bsort $_tables)

	ask_which "kbd(8) table" "best matches your keyboard" "$_tables" us
	[[ $resp != @@(done|us) ]] && kbd $resp && echo $resp >/tmp/kbdtype
}
@


1.3
log
@Start some delayed cleanup and shrinkage. Today: ': ;' -> ':;' in
while statements.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.2 2004/08/12 23:46:08 krw Exp $
d49 1
a49 1
	local _tables
d51 3
a53 2
	ask_yn "Do you wish to select a keyboard encoding table?"
	[[ $resp == n ]] && return
d55 2
a56 38
	while :; do
		ask "Select your keyboard type: (P)C-AT/XT, (U)SB or 'done'" P
		case $resp in
		P*|p*)  _tables="be br de dk es fr it jp lt no pt ru sf sg sv ua uk us"
			;;
		U*|u*)	_tables="br de dk es fr it jp no sf sg sv uk us"
			;;
		done)	;;
		*)	echo "'$resp' is not a valid keyboard type."
			resp=
			continue
			;;
		esac
		break;
	done

	[ -z "$_tables" ] && return

	while :; do
		cat << __EOT
The available keyboard encoding tables are:

	${_tables}

__EOT
		ask "Table name? (or 'done')" us
		case $resp in
		done)	;;
		*)	if kbd $resp ; then
				echo $resp > /tmp/kbdtype
			else
				echo "'${resp}' is not a valid table name."
				continue
			fi
			;;
		esac
		break;
	done
@


1.2
log
@Add ability to specify default serial console just like i386.

ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: install.md,v 1.1 2004/02/07 21:16:47 deraadt Exp $
d54 1
a54 1
	while : ; do
d72 1
a72 1
	while : ; do
@


1.1
log
@first cut; most written by mickey, couple tunings by me
@
text
@d1 1
a1 1
#	$OpenBSD$
d45 1
@

