head	1.47;
access;
symbols
	OPENBSD_6_1:1.47.0.4
	OPENBSD_6_1_BASE:1.47
	OPENBSD_6_0:1.45.0.4
	OPENBSD_6_0_BASE:1.45
	OPENBSD_5_9:1.45.0.2
	OPENBSD_5_9_BASE:1.45
	OPENBSD_5_8:1.43.0.10
	OPENBSD_5_8_BASE:1.43
	OPENBSD_5_7:1.43.0.4
	OPENBSD_5_7_BASE:1.43
	OPENBSD_5_6:1.43.0.6
	OPENBSD_5_6_BASE:1.43
	OPENBSD_5_5:1.43.0.2
	OPENBSD_5_5_BASE:1.43
	OPENBSD_5_4:1.41.0.2
	OPENBSD_5_4_BASE:1.41
	OPENBSD_5_3:1.40.0.8
	OPENBSD_5_3_BASE:1.40
	OPENBSD_5_2:1.40.0.6
	OPENBSD_5_2_BASE:1.40
	OPENBSD_5_1_BASE:1.40
	OPENBSD_5_1:1.40.0.4
	OPENBSD_5_0:1.40.0.2
	OPENBSD_5_0_BASE:1.40
	OPENBSD_4_9:1.37.0.2
	OPENBSD_4_9_BASE:1.37
	OPENBSD_4_8:1.36.0.6
	OPENBSD_4_8_BASE:1.36
	OPENBSD_4_7:1.36.0.2
	OPENBSD_4_7_BASE:1.36
	OPENBSD_4_6:1.36.0.4
	OPENBSD_4_6_BASE:1.36
	OPENBSD_4_5:1.33.0.2
	OPENBSD_4_5_BASE:1.33
	OPENBSD_4_4:1.32.0.4
	OPENBSD_4_4_BASE:1.32
	OPENBSD_4_3:1.32.0.2
	OPENBSD_4_3_BASE:1.32
	OPENBSD_4_2:1.31.0.2
	OPENBSD_4_2_BASE:1.31
	OPENBSD_4_1:1.28.0.2
	OPENBSD_4_1_BASE:1.28
	OPENBSD_4_0:1.26.0.12
	OPENBSD_4_0_BASE:1.26
	OPENBSD_3_9:1.26.0.10
	OPENBSD_3_9_BASE:1.26
	OPENBSD_3_8:1.26.0.8
	OPENBSD_3_8_BASE:1.26
	OPENBSD_3_7:1.26.0.6
	OPENBSD_3_7_BASE:1.26
	OPENBSD_3_6:1.26.0.4
	OPENBSD_3_6_BASE:1.26
	OPENBSD_3_5:1.26.0.2
	OPENBSD_3_5_BASE:1.26
	OPENBSD_3_4:1.25.0.2
	OPENBSD_3_4_BASE:1.25
	OPENBSD_3_3:1.24.0.4
	OPENBSD_3_3_BASE:1.24
	OPENBSD_3_2:1.24.0.2
	OPENBSD_3_2_BASE:1.24
	OPENBSD_3_1:1.20.0.2
	OPENBSD_3_1_BASE:1.20
	OPENBSD_3_0:1.18.0.2
	OPENBSD_3_0_BASE:1.18
	OPENBSD_2_9:1.15.0.8
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_8:1.15.0.6
	OPENBSD_2_8_BASE:1.15
	OPENBSD_2_7:1.15.0.4
	OPENBSD_2_7_BASE:1.15
	OPENBSD_2_6:1.15.0.2
	OPENBSD_2_6_BASE:1.15
	OPENBSD_2_5:1.14.0.4
	OPENBSD_2_5_BASE:1.14
	OPENBSD_2_4:1.14.0.2
	OPENBSD_2_4_BASE:1.14
	OPENBSD_2_3:1.13.0.2
	OPENBSD_2_3_BASE:1.13
	OPENBSD_2_2:1.11.0.2
	OPENBSD_2_2_BASE:1.11
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5;
locks; strict;
comment	@# @;


1.47
date	2016.10.14.18.44.20;	author deraadt;	state Exp;
branches;
next	1.46;
commitid	SCMr9f2ZDRZiobIN;

1.46
date	2016.09.01.10.08.29;	author deraadt;	state Exp;
branches;
next	1.45;
commitid	qVq42rwKOPg5Qxjs;

1.45
date	2015.10.20.16.22.47;	author miod;	state Exp;
branches;
next	1.44;
commitid	Q0pmTKx6d9ubaE6X;

1.44
date	2015.10.20.16.18.23;	author miod;	state Exp;
branches;
next	1.43;
commitid	rQFmhE8YQRRU057h;

1.43
date	2013.10.18.14.04.04;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2013.10.14.00.00.12;	author guenther;	state Exp;
branches;
next	1.41;

1.41
date	2013.07.05.21.29.51;	author miod;	state Exp;
branches;
next	1.40;

1.40
date	2011.07.10.16.24.08;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	2011.07.09.00.49.28;	author drahn;	state Exp;
branches;
next	1.38;

1.38
date	2011.04.18.16.52.10;	author thib;	state Exp;
branches;
next	1.37;

1.37
date	2010.10.18.04.07.51;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	2009.04.17.15.59.48;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2009.04.17.03.58.54;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2009.04.12.16.12.53;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2008.12.02.03.20.57;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2008.01.11.10.16.40;	author espie;	state Exp;
branches;
next	1.31;

1.31
date	2007.06.17.00.28.21;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2007.06.08.02.30.20;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2007.04.13.17.34.40;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	2007.02.16.16.56.22;	author tsi;	state Exp;
branches;
next	1.27;

1.27
date	2006.12.25.01.25.39;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2004.02.28.04.53.30;	author jolan;	state Exp;
branches;
next	1.25;

1.25
date	2003.07.22.17.15.12;	author brad;	state Exp;
branches;
next	1.24;

1.24
date	2002.08.05.15.25.43;	author art;	state Exp;
branches;
next	1.23;

1.23
date	2002.05.19.08.56.58;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2002.04.30.07.24.22;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2002.04.28.18.28.34;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2002.02.15.20.28.57;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2002.02.15.01.06.21;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2001.10.09.23.03.51;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2001.10.08.00.18.14;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2001.09.04.22.25.02;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	99.05.26.16.08.43;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	98.06.27.20.52.11;	author todd;	state Exp;
branches;
next	1.13;

1.13
date	98.03.08.00.27.00;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	98.02.22.08.32.58;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	97.10.09.16.13.07;	author niklas;	state Exp;
branches;
next	1.10;

1.10
date	97.10.01.22.12.59;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	97.09.26.02.20.45;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.09.21.11.46.01;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.09.05.21.16.58;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.05.30.17.29.39;	author grr;	state Exp;
branches;
next	1.5;

1.5
date	97.05.24.23.16.48;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.05.15.08.46.10;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.05.15.06.57.21;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	97.05.14.21.52.59;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	97.05.14.20.44.34;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.47
log
@Use new kernel compile method for ramdisks, de-escalating to $BUILDUSER
as required.
much help from natano and tb.
@
text
@#	$OpenBSD: Makefile,v 1.46 2016/09/01 10:08:29 deraadt Exp $

REV=		${OSrev}

CBIN=		instbin
ARCHDIR=	${.CURDIR}/../${MACHINE}/ramdisk

.include <bsd.own.mk>

.if exists(${ARCHDIR}/Makefile.inc)
.include "${ARCHDIR}/Makefile.inc"
.endif

MOUNT_POINT?=	/mnt
VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
DISKTYPE=	rdroot
PID!=		echo $$$$
REALIMAGE!=	echo /var/tmp/image.${PID}
IMAGE?=		ramdisk${REV}.fs
IMAGESIZE?=	8192 # 4MB in 512 byte blocks
NEWFS_WILL_FAIL?=false
RDSETROOT_EXT_SRC=${.CURDIR}/../common/elf32.c ${.CURDIR}/../common/elf64.c
CRUNCHGENOPTS?=-E
KERNEL?=	RAMDISK
UTILS?=		${.CURDIR}/../miniroot
STRIP?=		strip

LISTS=		${.CURDIR}/list ${ARCHDIR}/list.local
MTREE=		${UTILS}/mtree.conf

FLOPPY?=	floppy${REV}.fs
FLOPPYSIZE?=	2880
FLOPPYTYPE?=	floppy
INSTALLBOOT?=	installboot
BOOT?=		${DESTDIR}/usr/mdec/boot
BOOTIN?=	${MOUNT_POINT}/boot
BOOTXX?=	${DESTDIR}/usr/mdec/bootxx

# old format, minfree, opt, b/i  trks, sects, cpg
NEWFSOPTS=	-t ffs -m 0 -o space -f 1024 -b 8192
NEWFSOPTS_RD?=	${NEWFSOPTS} -i 8192 -s ${IMAGESIZE}
#NEWFSOPTS_FD=	${NEWFSOPTS} -i 524288 -c ${FLOPPYSIZE} -s ${FLOPPYSIZE}
NEWFSOPTS_FD=	${NEWFSOPTS} -i 1048575 -c ${FLOPPYSIZE} -s ${FLOPPYSIZE}

.ifndef DESTDIR
all:
	@@echo setenv DESTDIR before making a ramdisk!
	@@false
.else

.ifdef MAKEFLOPPY
all:	bsd.rd ${FLOPPY}
.else
all:	bsd.rd
.endif

${FLOPPY}:	bsd.gz ${BOOT} ${BOOTXX}
	dd if=/dev/zero of=${REALIMAGE} count=${FLOPPYSIZE}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${FLOPPYTYPE}
	newfs ${NEWFSOPTS_FD} ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}
	cp bsd.gz ${MOUNT_POINT}/bsd
	${INSTALLBOOT} -v -r ${MOUNT_POINT} ${VND} ${BOOTXX} ${BOOT}
	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	umount ${MOUNT_POINT}
	vnconfig -u ${VND}
	dd if=${REALIMAGE} of=${FLOPPY} count=${FLOPPYSIZE}
	rm -f ${REALIMAGE}

bsd:
	cd ${.CURDIR}/../../sys/arch/${MACHINE}/compile/${KERNEL} && \
	    su ${BUILDUSER} -c '${MAKE} config && ${MAKE} clean && env COPTS=-Os ${MAKE}'
	cp -p ${.CURDIR}/../../sys/arch/${MACHINE}/compile/${KERNEL}/obj/bsd bsd

bsd.rd:	bsd ${IMAGE} rdsetroot
	cp bsd bsd.rd
	${.OBJDIR}/rdsetroot bsd.rd ${IMAGE}
	${STRIP} bsd.rd

bsd.gz:	bsd.rd
	${GZIPCMD} ${GZIPFLAGS} < bsd.rd > bsd.gz

rdsetroot: ${.CURDIR}/../common/elfrdsetroot.c ${RDSETROOT_EXT_SRC}
	${HOSTCC} ${HOSTCCFLAGS} -o rdsetroot ${RDSETROOT_EXT_SRC} \
	    ${.CURDIR}/../common/elfrdsetroot.c

${IMAGE}: ${CBIN}
	dd if=/dev/zero of=${REALIMAGE} count=${IMAGESIZE}
	vnconfig -v -c ${VND} ${REALIMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs ${NEWFSOPTS_RD} ${VND_RDEV} || ${NEWFS_WILL_FAIL}
	mount ${VND_DEV} ${MOUNT_POINT}
	mtree -def ${MTREE} -p ${MOUNT_POINT}/ -u
	REV=${REV} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    ARCHDIR=${ARCHDIR} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}
	@@echo ""
	@@df -i ${MOUNT_POINT}
	@@echo ""
	umount ${MOUNT_POINT}
	vnconfig -u ${VND_DEV}
	cp ${REALIMAGE} ${IMAGE}
	rm ${REALIMAGE}

${CBIN}.conf: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CBIN}.conf
	crunchgen ${CRUNCHGENOPTS} -D ${.CURDIR}/../.. -L ${DESTDIR}/usr/lib \
	    ${CBIN}.conf

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk SRCLIBDIR=${.CURDIR}/../../../lib all

clean cleandir:
	/bin/rm -f *.core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
	    lib*.a lib*.olist ${CBIN}.map \
	    ${CBIN}.conf *.o *.lo *.c bsd bsd.*

.endif	# DESTDIR check

.ifdef RELEASEDIR
beforeinstall:
	cp bsd.rd ${RELEASEDIR}
.ifdef MAKEFLOPPY
	cp ${FLOPPY} ${RELEASEDIR}
.endif	# MAKEFLOPPY
.endif	# RELEASEDIR

unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}
	-/bin/rm -f ${REALIMAGE}

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.46
log
@remove sparc media building goop
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.45 2015/10/20 16:22:47 miod Exp $
a75 1
	cd ${.CURDIR}/../../sys/arch/${MACHINE}/conf && config ${KERNEL}
d77 2
a78 2
	    ${MAKE} clean && ${MAKE} depend && COPTS=-Os ${MAKE}
	cp ${.CURDIR}/../../sys/arch/${MACHINE}/compile/${KERNEL}/bsd bsd
@


1.45
log
@... but keep the previous logic for sparc, which is the other user of this
Makefile, until it switches to MI installboot, too.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2015/10/20 16:18:23 miod Exp $
a64 3
.if ${MACHINE} == "sparc"
	cp ${BOOT} ${MOUNT_POINT}/
.endif
a65 4
.if ${MACHINE} == "sparc"
	${INSTALLBOOT} -v ${BOOTIN} ${BOOTXX} \
	    `echo ${VND_RDEV} | sed -e 's/a$$/c/'`
.else
a66 1
.endif
@


1.44
log
@Missing commit of vax switch to MI installboot(8), forgotten when it went in.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.43 2013/10/18 14:04:04 deraadt Exp $
d65 3
d69 4
d74 1
@


1.43
log
@cleanup elfrdsetroot references; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.42 2013/10/14 00:00:12 guenther Exp $
a64 1
	cp ${BOOT} ${MOUNT_POINT}/
d66 1
a66 5
	${INSTALLBOOT} -v ${BOOTIN} ${BOOTXX} \
		`echo ${VND_RDEV} | sed -e 's/a$$/c/'`
.if (${MACHINE_ARCH} == "vax")
	disklabel -B -b ${BOOTXX} ${VND}
.endif
@


1.42
log
@Turn on the distrib lib bits in crunchgen by setting SRCLIBDIR.
Add the new files to the clean target's rm list.

"why not get it tested?" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.41 2013/07/05 21:29:51 miod Exp $
a23 1
RDSETROOT?=	elfrdsetroot
d86 1
a86 1
bsd.rd:	bsd ${IMAGE} ${RDSETROOT}
d88 1
a88 1
	${.OBJDIR}/${RDSETROOT} bsd.rd ${IMAGE}
d94 3
a96 3
${RDSETROOT}: ${.CURDIR}/../common/${RDSETROOT}.c ${RDSETROOT_EXT_SRC}
	${HOSTCC} ${HOSTCCFLAGS} -o ${RDSETROOT} ${RDSETROOT_EXT_SRC} \
	    ${.CURDIR}/../common/${RDSETROOT}.c
@


1.41
log
@ELF_TOOLCHAIN bye bye.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.40 2011/07/10 16:24:08 deraadt Exp $
d126 1
a126 1
	${MAKE} -f ${CBIN}.mk all
d130 2
a131 1
	${CBIN}.conf *.o *.lo *.c bsd bsd.*
@


1.40
log
@better dependencies for rdsetroot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.39 2011/07/09 00:49:28 drahn Exp $
a23 1
.if ${ELF_TOOLCHAIN:L} == "yes"
a26 5
.else
RDSETROOT?=	rdsetroot
CRUNCHGENOPTS?=
RDSETROOT_EXT_SRC=
.endif
@


1.39
log
@conditionally include extra source files on elf archs.
'will work for now' deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2011/04/18 16:52:10 thib Exp $
d101 1
a101 1
${RDSETROOT}: ${.CURDIR}/../common/${RDSETROOT}.c
@


1.38
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2010/10/18 04:07:51 deraadt Exp $
d26 1
d31 1
d102 2
a103 1
	${HOSTCC} ${HOSTCCFLAGS} -o ${RDSETROOT} ${.CURDIR}/../common/${RDSETROOT}.c
@


1.37
log
@Place a smaller spwd.db onto the install media.  Be consistant with the naming
of the "additional" list files (for architectures which split the list)
Then... cleanup some TZ which it is clear should not have been placed onto
certain media which don't have the space for them.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36 2009/04/17 15:59:48 deraadt Exp $
d15 1
a15 1
VND?=		svnd0
@


1.36
log
@further minor unification
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.35 2009/04/17 03:58:54 deraadt Exp $
d35 1
a35 1
LISTS=		${.CURDIR}/list ${ARCHDIR}/list
@


1.35
log
@For SHA256 hashes to be ready to go onto the install media, we must
build the sets before we build the media.  While there we can get rid
of DESTDIR/snapshot too, and simply install straight into RELEASEDIR.
(This also ends up saving an astounding amount of traffic/latency in a nfs
environment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.34 2009/04/12 16:12:53 deraadt Exp $
d20 1
a20 1
REALIMAGE!=	echo /tmp/image.${PID}
@


1.34
log
@run make depend for kernel, too; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 2008/12/02 03:20:57 deraadt Exp $
d109 3
a111 2
	REV=${REV} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} ARCHDIR=${ARCHDIR} \
	    TARGDIR=${MOUNT_POINT} UTILS=${UTILS} sh ${UTILS}/runlist.sh ${LISTS}
d135 3
d139 1
a139 1
	cp bsd.rd ${DESTDIR}/snapshot
d141 3
a143 4
	cp ${FLOPPY} ${DESTDIR}/snapshot
.endif

.endif	# DESTDIR check
@


1.33
log
@commit with rdsetroot now accepting the filesystem as a 2nd arg
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 2008/01/11 10:16:40 espie Exp $
d88 1
a88 1
	    ${MAKE} depend && ${MAKE} clean && COPTS=-Os ${MAKE}
@


1.32
log
@cleanup: make -> ${MAKE} consistenly.
zap extra subshells.

okay miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2007/06/17 00:28:21 deraadt Exp $
d93 1
a93 1
	${.OBJDIR}/${RDSETROOT} bsd.rd < ${IMAGE}
@


1.31
log
@Stop using disklabel -r.  The disklabel code does not know all the semantics
for pushing disklabels onto the disk (and besides that, it is buggy and
unreadable crap); thanks for help from krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2007/06/08 02:30:20 deraadt Exp $
d88 1
a88 1
	    make depend && make clean && COPTS=-Os make
d128 1
a128 1
	make -f ${CBIN}.mk all
@


1.30
log
@increase the % of space given to inodes
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2007/04/13 17:34:40 millert Exp $
a44 1
RAWLABEL?=	-r
d67 1
a67 1
	disklabel -w ${RAWLABEL} ${VND} ${FLOPPYTYPE}
d105 1
a105 1
	disklabel -w ${RAWLABEL} ${VND} ${DISKTYPE}
@


1.29
log
@Update install media generation to the new semantics of the -c flag.
Also replace "newfs -O" with "newfs -O 0" now that -O takes an option.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2007/02/16 16:56:22 tsi Exp $
d49 1
a49 1
NEWFSOPTS_RD?=	${NEWFSOPTS} -i 16384 -s ${IMAGESIZE}
@


1.28
log
@s/GZIP/GZIPCMD/g in `make release` structure to avoid conflict with gzip's
use of a GZIP environment variable for extra command flags.

ok deraadt@@, millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2006/12/25 01:25:39 deraadt Exp $
d49 3
a51 3
NEWFSOPTS_RD?=	${NEWFSOPTS} -i 16384 -c 64 -s ${IMAGESIZE}
#NEWFSOPTS_FD=	${NEWFSOPTS} -i 524288 -c 80 -s ${FLOPPYSIZE}
NEWFSOPTS_FD=	${NEWFSOPTS} -i 1048575 -c 256 -s ${FLOPPYSIZE}
@


1.27
log
@remove some junk
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2004/02/28 04:53:30 jolan Exp $
d98 1
a98 1
	${GZIP} ${GZIPFLAGS} < bsd.rd > bsd.gz
@


1.26
log
@makeing->making
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2003/07/22 17:15:12 brad Exp $
a89 2
#	cd ${.CURDIR}/../../sys/arch/${MACHINE}/compile/${KERNEL} && \
#	    make depend && make clean && make
@


1.25
log
@- use :L variable modifier with ELF_TOOLCHAIN variable
- change 2 instances of the check from != "yes" to == "no"

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2002/08/05 15:25:43 art Exp $
d55 1
a55 1
	@@echo setenv DESTDIR before makeing a ramdisk!
@


1.24
log
@If ELF_TOOLCHAIN, pass -E to crunchgen and build elfrdsetroot instead
of rdsetroot.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2002/05/19 08:56:58 deraadt Exp $
d24 1
a24 1
.if ${ELF_TOOLCHAIN} == "yes"
@


1.23
log
@fix a copied typo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2002/04/30 07:24:22 deraadt Exp $
d8 2
d24 5
d30 1
a33 1
RDSETROOT?=	rdsetroot
@


1.22
log
@first pass of instbin removal movement
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2002/04/28 18:28:34 deraadt Exp $
d64 1
a64 1
	cp ${BOOT} ${MOUNT_POINT}$/
@


1.21
log
@use single shared mtree.conf
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2002/02/15 20:28:57 deraadt Exp $
d107 1
@


1.20
log
@backwards test
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2002/02/15 01:06:21 deraadt Exp $
d29 1
a29 1
MTREE=		${.CURDIR}/mtree.conf
@


1.19
log
@vax support, bit hackish, will do for now; input from hugh
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2001/10/09 23:03:51 deraadt Exp $
d68 1
a68 1
.if (${MACHINE_ARCH} != "vax")
@


1.18
log
@permit modification of $RDSETROOT
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2001/10/08 00:18:14 deraadt Exp $
d42 1
a42 1
NEWFSOPTS_RD=	${NEWFSOPTS} -i 16384 -c 64 -s ${IMAGESIZE}
d68 3
@


1.17
log
@permit changing of rdsetroot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2001/09/04 22:25:02 deraadt Exp $
d36 1
d64 1
a64 1
	cp ${BOOT} ${MOUNT_POINT}/boot
d66 1
a66 1
	${INSTALLBOOT} -v ${MOUNT_POINT}/boot ${BOOTXX} \
d93 1
a93 1
	${HOSTCC} ${HOSTCCFLAGS} -o ${RDSETROOT} ${.CURDIR}/../common/$(RDSETROOT}.c
@


1.16
log
@MB == megabytes, Mb == megabits
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 1999/05/26 16:08:43 espie Exp $
d26 1
d83 1
a83 1
bsd.rd:	bsd ${IMAGE} rdsetroot
d85 1
a85 1
	${.OBJDIR}/rdsetroot bsd.rd < ${IMAGE}
d91 2
a92 2
rdsetroot: ${.CURDIR}/../common/rdsetroot.c
	${HOSTCC} ${HOSTCCFLAGS} -o rdsetroot ${.CURDIR}/../common/rdsetroot.c
@


1.15
log
@compile i386 ramdisk with -Os (conserve size)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 1998/06/27 20:52:11 todd Exp $
d20 1
a20 1
IMAGESIZE?=	8192 # 4Mb in 512 byte blocks
@


1.14
log
@s/23/${OSrev}/
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 1998/03/08 00:27:00 deraadt Exp $
d77 3
a79 1
	    make depend && make clean && make
@


1.13
log
@moving to 2.3
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1998/02/22 08:32:58 deraadt Exp $
d3 1
a3 1
REV=		23
@


1.12
log
@whack c partition
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1997/10/09 16:13:07 niklas Exp $
d3 1
a3 1
REV=		22
@


1.11
log
@Rebuild .depend as old .depend might break your looong release build
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1997/10/01 22:12:59 deraadt Exp $
d64 2
a65 1
	${INSTALLBOOT} -v ${MOUNT_POINT}/boot ${BOOTXX} ${VND_RDEV}
a70 1
	# some bug can put an extra 8k at the end it seems
@


1.10
log
@21 -> 22
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1997/09/26 02:20:45 millert Exp $
d77 1
a77 1
	    make clean && make
@


1.9
log
@Don't specify disktype to newfs when we already have a label.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1997/09/21 11:46:01 deraadt Exp $
d3 1
a3 2
# Revision is 2.1
REV=		21
@


1.8
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1997/09/05 21:16:58 deraadt Exp $
d61 1
a61 1
	newfs ${NEWFSOPTS_FD} ${VND_RDEV} ${FLOPPYTYPE}
d96 1
a96 1
	newfs ${NEWFSOPTS_RD} ${VND_RDEV} ${DISKTYPE} || ${NEWFS_WILL_FAIL}
@


1.7
log
@make depend (in this case) is a total waste of time
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.6 1997/05/30 17:29:39 grr Exp $
#	$NetBSD: Makefile,v 1.2.4.3 1996/07/04 07:05:32 leo Exp $
@


1.6
log
@minor tweaks to not bother making the ramdisk.fs image bootable, since there's
no /bsd there to boot and fix a little problem with ${BOOT} != .../boot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1997/05/24 23:16:48 deraadt Exp $
d79 1
a79 1
	    make clean && make depend && make
@


1.5
log
@always allow unconfig
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/05/15 08:46:10 deraadt Exp $
d64 1
a64 1
	cp ${BOOT} ${MOUNT_POINT}
@


1.4
log
@capability for making rd sparc floppies, as soon as sparc bootblocks do zlib
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1997/05/06 17:10:32 niklas Exp $
a109 5
unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}
	-/bin/rm -f ${REALIMAGE}

d131 6
@


1.3
log
@Allow archs to specify that newfs will fail.  Remove obsolete
cache flushing
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.2 1997/05/14 21:52:59 deraadt Exp $
#	$OpenBSD: Makefile,v 1.2 1997/05/14 21:52:59 deraadt Exp $
d22 1
a22 2
IMAGESIZE?=	4096
NEWFSOPTS?=	-m 0 -c 64 -i 8192
d32 14
d48 1
a48 1
	@@echo setenv DESTDIR before makeing a miniroot!
d52 3
d56 19
d82 1
a82 2

bsd.rd: bsd ${IMAGE} ${.OBJDIR}/rdsetroot
d85 1
a85 1
#	${STRIP} bsd.rd
d87 4
a90 1
${.OBJDIR}/rdsetroot: ${.CURDIR}/../common/rdsetroot.c
a92 1

d96 2
a97 3
	disklabel -w -r ${VND} ${DISKTYPE}
	newfs -o space ${NEWFSOPTS} ${VND_RDEV} ${DISKTYPE} || \
	    ${NEWFS_WILL_FAIL}
d113 1
a113 1
	-/bin/rm -f ${IMAGE}
d131 3
@


1.2
log
@working bsd.rd; without vi for now
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile,v 1.1 1997/05/14 20:44:34 deraadt Exp $
#	$OpenBSD: Makefile,v 1.1 1997/05/14 20:44:34 deraadt Exp $
d25 1
d62 2
a63 1
	newfs -o space ${NEWFSOPTS} ${VND_RDEV} ${DISKTYPE}
@


1.1
log
@shareable ramdisk creation; in part by grr
@
text
@d1 2
a2 2
#	$OpenBSD$
#	$OpenBSD: Makefile,v 1.12 1997/05/06 17:10:32 niklas Exp $
d51 1
a51 1
	${STRIP} bsd.rd
a70 1
	cat /*bin/* > /dev/null
@

