head	1.8;
access;
symbols
	OPENBSD_5_4:1.7.0.10
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.8
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7;
locks; strict;
comment	@# @;


1.8
date	2013.09.04.20.00.25;	author patrick;	state dead;
branches;
next	1.7;

1.7
date	2011.07.27.20.44.53;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.09.00.42.49;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.08.21.39.32;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2011.04.18.16.52.09;	author thib;	state Exp;
branches;
next	1.3;

1.3
date	2011.04.15.03.11.22;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.22.17.34.56;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.14.16.40.23;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Beagle has been replaced by armv7.
@
text
@#	$OpenBSD: Makefile,v 1.7 2011/07/27 20:44:53 drahn Exp $

REV=	${OSrev}

TOP=		${.CURDIR}/..

BSD_RD=		bsd.rd
IMAGE=		mr.fs
CBIN?=		instbin
CRUNCHCONF?=	${CBIN}.conf
CRUNCHCONFS?=	${.CURDIR}/../common/crunch.conf
LISTS=		${.CURDIR}/list
UTILS?=		${.CURDIR}/../../miniroot

MOUNT_POINT=	/mnt
MTREE=		${UTILS}/mtree.conf

VND?=		vnd0
VND_DEV=	/dev/${VND}a
VND_RDEV=	/dev/r${VND}a
VND_CRDEV=	/dev/r${VND}c
PID!=		echo $$$$


DISKTYPE=       rdroot2.5M
NBLKS=		5120
# minfree, opt, b/i  trks, sects, cpg
NEWFSARGS= -m 0 -o space -i 4096

.ifndef DESTDIR
all ${IMAGE}:
	@@echo setenv DESTDIR before making a ramdisk!
	@@false
.else

# mix config is not needed.
all:	${BSD_RD}

${BSD_RD}: ${CBIN} ${IMAGE} bsd rdsetroot
	cp bsd ${BSD_RD}
	${.OBJDIR}/rdsetroot ${BSD_RD} ${IMAGE}

${IMAGE}: rd_setup do_files rd_teardown

.endif

bsd:
	cd ${TOP}/../../sys/arch/beagle/conf && config RAMDISK
	cd ${TOP}/../../sys/arch/beagle/compile/RAMDISK && \
	    ${MAKE} clean && exec ${MAKE}
	cp ${TOP}/../../sys/arch/beagle/compile/RAMDISK/bsd bsd

rd_setup:
	dd if=/dev/zero of=${IMAGE} bs=512 count=${NBLKS}
	vnconfig -v -c ${VND} ${IMAGE}
	disklabel -w ${VND} ${DISKTYPE}
	newfs ${NEWFSARGS} ${VND_RDEV}
	fsck ${VND_RDEV}
	mount ${VND_DEV} ${MOUNT_POINT}

rd_teardown:
	@@df -i ${MOUNT_POINT}
	-umount ${MOUNT_POINT}
	-vnconfig -u ${VND}

rdsetroot:	${TOP}/../common/elfrdsetroot.c
	${HOSTCC} ${HOSTCFLAGS} -o rdsetroot \
	    ${TOP}/../common/elfrdsetroot.c ${TOP}/../common/elf32.c \
	    ${TOP}/../common/elf64.c

unconfig:
	-umount -f ${MOUNT_POINT}
	-vnconfig -u ${VND}

.PRECIOUS:	${IMAGE}

${CBIN}.mk ${CBIN}.cache ${CBIN}.c: ${CRUNCHCONF}
	crunchgen -E -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${.ALLSRC}

${CBIN}: ${CBIN}.mk ${CBIN}.cache ${CBIN}.c
	${MAKE} -f ${CBIN}.mk all

${CRUNCHCONF}: ${LISTS}
	awk -f ${UTILS}/makeconf.awk CBIN=${CBIN} ${LISTS} > ${CBIN}.conf

do_files:
	cat ${MTREE} | mtree -de -p ${MOUNT_POINT}/ -u
	TOPDIR=${TOP} CURDIR=${.CURDIR} OBJDIR=${.OBJDIR} \
	    REV=${REV} TARGDIR=${MOUNT_POINT} UTILS=${UTILS} \
	    RELEASEDIR=${RELEASEDIR} sh ${UTILS}/runlist.sh ${LISTS}
	rm ${MOUNT_POINT}/${CBIN}

clean cleandir:
	/bin/rm -f core ${IMAGE} ${CBIN} ${CBIN}.mk ${CBIN}.cache \
	    *.o *.lo *.c bsd ${BSD_RD} rdsetroot
	rm -f instbin.conf
	rm -rf cd-dir

.ifdef RELEASEDIR
install:
	cp ${BSD_RD} ${RELEASEDIR}
.endif	# RELEASEDIR

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.7
log
@Beagle will not need the hack to rdsetroot va != pa kernels like is
needed on armish.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2011/07/09 00:42:49 drahn Exp $
@


1.6
log
@Unbreak most archs for the last commit. cut and paste changed rdsetroot
to elfrdsetroot. Does not yet fix sparc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2011/07/08 21:39:32 drahn Exp $
a40 3
	awk 'BEGIN { printf("%c", 192); }' < /dev/null | dd of=${BSD_RD} bs=1 count=1 seek=95 conv=notrunc 2>/dev/null;
	awk 'BEGIN { printf("%c", 192); }' < /dev/null | dd of=${BSD_RD} bs=1 count=1 seek=127 conv=notrunc 2>/dev/null;
	awk 'BEGIN { printf("%c", 192); }' < /dev/null | dd of=${BSD_RD} bs=1 count=1 seek=159 conv=notrunc 2>/dev/null;
a41 3
	dd if=/dev/zero of=${BSD_RD} bs=1 count=1 seek=95 conv=notrunc 2>/dev/null;
	dd if=/dev/zero of=${BSD_RD} bs=1 count=1 seek=127 conv=notrunc 2>/dev/null;
	dd if=/dev/zero of=${BSD_RD} bs=1 count=1 seek=159 conv=notrunc 2>/dev/null;
@


1.5
log
@Allow the elf rdsetroot operation to function on 32 bit and 64 bit binaries.
Enables developers to build arm ramdisk kernels on amd64 archs
OK deraadt@@ 'looked fine' miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2011/04/18 16:52:09 thib Exp $
d73 1
a73 1
	${HOSTCC} ${HOSTCFLAGS} -o elfrdsetroot \
@


1.4
log
@Deprecate vnds in favour of svnds.

In effect, this removes the "old" vndX nodes, and renames
the svndX nodes to vndX.

Old svndX nodes will still continue to work though, for now.

Cleanup accordingly.

ok deraadt@@, todd@@
comments and ok on the man page bits from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2011/04/15 03:11:22 deraadt Exp $
d73 3
a75 1
	${HOSTCC} -o rdsetroot ${TOP}/../common/elfrdsetroot.c
@


1.3
log
@No need to make depend kernels; ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2011/03/22 17:34:56 deraadt Exp $
d18 1
a18 1
VND?=		svnd0
@


1.2
log
@Make this like other ramdisk Makefiles (those of you who are currently
doing cross-builds will want to maintain your own diffs for now)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2011/03/14 16:40:23 drahn Exp $
d56 1
a56 1
	    ${MAKE} clean && ${MAKE} depend && ${MAKE}
@


1.1
log
@Initial beagle distrib pieces.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2009/04/17 03:58:54 deraadt Exp $
a23 5
OBJARG=
# XXX - the following for cross builds. shouldn't be here for native
.if ${HOST} != ${TARGET}
OBJARG=-O obj.${HOST}.${TARGET}
.endif
a25 1
#NBLKS=		8192
d82 1
a82 1
	crunchgen -E ${OBJARG} -D ${.CURDIR}/../../.. -L ${DESTDIR}/usr/lib ${.ALLSRC}
d106 1
a106 1
.endif
@

