head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.4
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.6
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.2
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.4
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.10.0.16
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.12
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.10
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.8
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.6
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.9.0.18
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.14
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.18
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.16
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.14
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.12
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.10
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.8
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.2
	UBC_BASE:1.7
	OPENBSD_3_0:1.5.0.12
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.10
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.4
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.12
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.10
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2016.04.19.10.24.42;	author mpi;	state Exp;
branches;
next	1.15;
commitid	cA23wrhtpSoFZEwE;

1.15
date	2016.01.25.14.30.30;	author mpi;	state Exp;
branches;
next	1.14;
commitid	7AkssaZPPd7mA8h3;

1.14
date	2015.03.14.03.38.46;	author jsg;	state Exp;
branches;
next	1.13;
commitid	p4LJxGKbi0BU2cG6;

1.13
date	2014.11.16.12.30.59;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	yv0ECmCdICvq576h;

1.12
date	2014.09.14.14.17.24;	author jsg;	state Exp;
branches;
next	1.11;
commitid	uzzBR7hz9ncd4O6G;

1.11
date	2014.07.08.13.02.57;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	E2I6e8QZgMmNFC95;

1.10
date	2010.11.27.19.59.11;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.13.06.23.20;	author jsg;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.27.17.37.05;	author pefo;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.08.02.24.07;	author art;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2001.11.28.16.13.29;	author art;	state Exp;
branches;
next	1.5;

1.5
date	99.09.11.00.44.59;	author mickey;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	96.04.21.22.19.21;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.03.11.11.16.31;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.02.20.13.35.46;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.28;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.28;	author deraadt;	state Exp;
branches;
next	;

1.5.4.1
date	2001.12.05.00.43.29;	author niklas;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2002.03.06.02.07.09;	author niklas;	state Exp;
branches;
next	;

1.7.2.1
date	2002.06.11.03.28.48;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Start reducing the dependence on <uvm/uvm_param.h> by using int-1-0
instead of boolean_t-TRUE-FALSE.
@
text
@/*	$OpenBSD: db_watch.c,v 1.15 2016/01/25 14:30:30 mpi Exp $ */
/*	$NetBSD: db_watch.c,v 1.9 1996/03/30 22:30:12 christos Exp $	*/

/*
 * Mach Operating System
 * Copyright (c) 1993,1992,1991,1990 Carnegie Mellon University
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie Mellon
 * the rights to redistribute these changes.
 *
 * 	Author: Richard P. Draves, Carnegie Mellon University
 *	Date:	10/90
 */

#include <sys/param.h>
#include <sys/systm.h>

#include <machine/db_machdep.h>

#include <ddb/db_break.h>
#include <ddb/db_watch.h>
#include <ddb/db_lex.h>
#include <ddb/db_run.h>
#include <ddb/db_sym.h>
#include <ddb/db_output.h>
#include <ddb/db_command.h>
#include <ddb/db_extern.h>

/*
 * Watchpoints.
 */

int db_watchpoints_inserted = 1;

#define	NWATCHPOINTS	100
struct db_watchpoint	db_watch_table[NWATCHPOINTS];
db_watchpoint_t		db_next_free_watchpoint = &db_watch_table[0];
db_watchpoint_t		db_free_watchpoints = 0;
db_watchpoint_t		db_watchpoint_list = 0;

db_watchpoint_t
db_watchpoint_alloc(void)
{
	db_watchpoint_t	watch;

	if ((watch = db_free_watchpoints) != 0) {
	    db_free_watchpoints = watch->link;
	    return (watch);
	}
	if (db_next_free_watchpoint == &db_watch_table[NWATCHPOINTS]) {
	    db_printf("All watchpoints used.\n");
	    return (0);
	}
	watch = db_next_free_watchpoint;
	db_next_free_watchpoint++;

	return (watch);
}

void
db_watchpoint_free(db_watchpoint_t watch)
{
	watch->link = db_free_watchpoints;
	db_free_watchpoints = watch;
}

void
db_set_watchpoint(db_addr_t addr, vsize_t size)
{
	db_watchpoint_t	watch;

	/*
	 *	Should we do anything fancy with overlapping regions?
	 */

	for (watch = db_watchpoint_list; watch != 0; watch = watch->link)
		if (watch->loaddr == addr && watch->hiaddr == addr + size) {
			db_printf("Already set.\n");
			return;
		}

	watch = db_watchpoint_alloc();
	if (watch == 0) {
		db_printf("Too many watchpoints.\n");
		return;
	}

	watch->loaddr = addr;
	watch->hiaddr = addr+size;

	watch->link = db_watchpoint_list;
	db_watchpoint_list = watch;

	db_watchpoints_inserted = 0;
}

void
db_delete_watchpoint(db_addr_t addr)
{
	db_watchpoint_t	watch;
	db_watchpoint_t	*prev;

	for (prev = &db_watchpoint_list; (watch = *prev) != 0;
	   prev = &watch->link)
		if (watch->loaddr <= addr && addr < watch->hiaddr) {
			*prev = watch->link;
			db_watchpoint_free(watch);
			return;
		}

	db_printf("Not set.\n");
}

void
db_list_watchpoints(void)
{
	db_watchpoint_t	watch;

	if (db_watchpoint_list == 0) {
	    db_printf("No watchpoints set\n");
	    return;
	}

	db_printf("  Address  Size\n");
	for (watch = db_watchpoint_list; watch != 0; watch = watch->link)
		db_printf("%8lx  %lx\n",
		    watch->loaddr, watch->hiaddr - watch->loaddr);
}

/* Delete watchpoint */
/*ARGSUSED*/
void
db_deletewatch_cmd(db_expr_t addr, int have_addr, db_expr_t count, char *modif)
{
	db_delete_watchpoint(addr);
}

/* Set watchpoint */
/*ARGSUSED*/
void
db_watchpoint_cmd(db_expr_t addr, int have_addr, db_expr_t count, char *modif)
{
	vsize_t 	size;
	db_expr_t	value;

	if (db_expression(&value))
	    size = (vsize_t) value;
	else
	    size = 4;
	db_skip_to_eol();

	db_set_watchpoint(addr, size);
}

/* list watchpoints */
/*ARGSUSED*/
void
db_listwatch_cmd(db_expr_t addr, int have_addr, db_expr_t count, char *modif)
{
	db_list_watchpoints();
}

void
db_set_watchpoints(void)
{
	db_watchpoint_t	watch;

	if (!db_watchpoints_inserted && db_watchpoint_list != NULL) {
		for (watch = db_watchpoint_list; watch != 0;
		    watch = watch->link)
			pmap_protect(pmap_kernel(), trunc_page(watch->loaddr),
			    round_page(watch->hiaddr), PROT_READ);
		pmap_update(pmap_kernel());
		db_watchpoints_inserted = 1;
	}
}

void
db_clear_watchpoints(void)
{
	db_watchpoints_inserted = 0;
}
@


1.15
log
@Kill trailing whitespaces.  No object change.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.14 2015/03/14 03:38:46 jsg Exp $ */
d51 1
a51 1
boolean_t	db_watchpoints_inserted = TRUE;
d112 1
a112 1
	db_watchpoints_inserted = FALSE;
d192 1
a192 1
		db_watchpoints_inserted = TRUE;
d199 1
a199 1
	db_watchpoints_inserted = FALSE;
@


1.14
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.13 2014/11/16 12:30:59 deraadt Exp $ */
d4 1
a4 1
/* 
d8 1
a8 1
 * 
d14 1
a14 1
 * 
d18 1
a18 1
 * 
d20 1
a20 1
 * 
d25 1
a25 1
 * 
@


1.13
log
@Replace a plethora of historical protection options with just
PROT_NONE, PROT_READ, PROT_WRITE, and PROT_EXEC from mman.h.
PROT_MASK is introduced as the one true way of extracting those bits.
Remove UVM_ADV_* wrapper, using the standard names.
ok doug guenther kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.12 2014/09/14 14:17:24 jsg Exp $ */
a40 1
#include <ddb/db_access.h>
@


1.12
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.11 2014/07/08 13:02:57 deraadt Exp $ */
d191 1
a191 1
			    round_page(watch->hiaddr), VM_PROT_READ);
@


1.11
log
@These do not need the extremely poorly named uvm/uvm_extern.h (which
pulls in the universe). occasionally they need sys/systm.h
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.10 2010/11/27 19:59:11 miod Exp $ */
a34 1
#include <sys/proc.h>
@


1.10
log
@Get rid of the vm_map field of ddb breakpoints and watchpoints, and do not
pretend these could work on userland addresses.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.9 2006/03/13 06:23:20 jsg Exp $ */
d34 1
@


1.9
log
@ansi/deregister. No binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.8 2002/02/27 17:37:05 pefo Exp $ */
d87 1
a87 1
db_set_watchpoint(struct vm_map *map, db_addr_t addr, vsize_t size)
a90 5
	if (map == NULL) {
	    db_printf("No map.\n");
	    return;
	}

d95 5
a99 9
	for (watch = db_watchpoint_list;
	     watch != 0;
	     watch = watch->link)
	    if (db_map_equal(watch->map, map) &&
		(watch->loaddr == addr) &&
		(watch->hiaddr == addr+size)) {
		db_printf("Already set.\n");
		return;
	    }
d103 2
a104 2
	    db_printf("Too many watchpoints.\n");
	    return;
a106 1
	watch->map = map;
d117 1
a117 1
db_delete_watchpoint(struct vm_map *map, db_addr_t addr)
d122 7
a128 10
	for (prev = &db_watchpoint_list;
	     (watch = *prev) != 0;
	     prev = &watch->link)
	    if (db_map_equal(watch->map, map) &&
		(watch->loaddr <= addr) &&
		(addr < watch->hiaddr)) {
		*prev = watch->link;
		db_watchpoint_free(watch);
		return;
	    }
d143 4
a146 8
	db_printf(" Map        Address  Size\n");
	for (watch = db_watchpoint_list;
	     watch != 0;
	     watch = watch->link)
	    db_printf("%s%p  %8lx  %lx\n",
		      db_map_current(watch->map) ? "*" : " ",
		      watch->map, watch->loaddr,
		      watch->hiaddr - watch->loaddr);
d154 1
a154 1
	db_delete_watchpoint(db_map_addr(addr), addr);
d171 1
a171 1
	db_set_watchpoint(db_map_addr(addr), addr, size);
d188 6
a193 9
	    for (watch = db_watchpoint_list;
	         watch != 0;
	         watch = watch->link)
		pmap_protect(watch->map->pmap,
			     trunc_page(watch->loaddr),
			     round_page(watch->hiaddr),
			     VM_PROT_READ);
	    pmap_update(watch->map->pmap);
	    db_watchpoints_inserted = TRUE;
a200 32
}

boolean_t
db_find_watchpoint(struct vm_map *map, db_addr_t addr, db_regs_t *regs)
{
	db_watchpoint_t watch;
	db_watchpoint_t found = 0;

	for (watch = db_watchpoint_list;
	     watch != 0;
	     watch = watch->link)
	    if (db_map_equal(watch->map, map)) {
		if ((watch->loaddr <= addr) &&
		    (addr < watch->hiaddr))
		    return (TRUE);
		else if ((trunc_page(watch->loaddr) <= addr) &&
			 (addr < round_page(watch->hiaddr)))
		    found = watch;
	    }

	/*
	 *	We didn't hit exactly on a watchpoint, but we are
	 *	in a protected region.  We want to single-step
	 *	and then re-protect.
	 */

	if (found) {
	    db_watchpoints_inserted = FALSE;
	    db_single_step(regs);
	}

	return (FALSE);
@


1.8
log
@don't execute the pmap_update() call if we have no watch list. bo-bo art :-)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.7 2001/12/08 02:24:07 art Exp $ */
d61 1
a61 1
db_watchpoint_alloc()
d63 1
a63 1
	register db_watchpoint_t	watch;
d80 1
a80 2
db_watchpoint_free(watch)
	register db_watchpoint_t	watch;
d87 1
a87 4
db_set_watchpoint(map, addr, size)
	struct vm_map	*map;
	db_addr_t	addr;
	vsize_t 	size;
d89 1
a89 1
	register db_watchpoint_t	watch;
d127 1
a127 3
db_delete_watchpoint(map, addr)
	struct vm_map	*map;
	db_addr_t	addr;
d129 2
a130 2
	register db_watchpoint_t	watch;
	register db_watchpoint_t	*prev;
d147 1
a147 1
db_list_watchpoints()
d149 1
a149 1
	register db_watchpoint_t	watch;
d169 1
a169 5
db_deletewatch_cmd(addr, have_addr, count, modif)
	db_expr_t	addr;
	int		have_addr;
	db_expr_t	count;
	char *		modif;
d177 1
a177 5
db_watchpoint_cmd(addr, have_addr, count, modif)
	db_expr_t	addr;
	int		have_addr;
	db_expr_t	count;
	char *		modif;
d194 1
a194 5
db_listwatch_cmd(addr, have_addr, count, modif)
	db_expr_t	addr;
	int		have_addr;
	db_expr_t	count;
	char *		modif;
d200 1
a200 1
db_set_watchpoints()
d202 1
a202 1
	register db_watchpoint_t	watch;
d218 1
a218 1
db_clear_watchpoints()
d224 1
a224 4
db_find_watchpoint(map, addr, regs)
	struct vm_map	*map;
	db_addr_t	addr;
	db_regs_t	*regs;
d226 1
a226 1
	register db_watchpoint_t watch;
@


1.7
log
@Sprinkle pmap_update calls where relevant and some other
misc pmap usage fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.6 2001/11/28 16:13:29 art Exp $ */
d222 1
a222 1
	if (!db_watchpoints_inserted) {
@


1.7.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.7 2001/12/08 02:24:07 art Exp $ */
d222 1
a222 1
	if (!db_watchpoints_inserted && db_watchpoint_list != NULL) {
@


1.6
log
@zap some typedefs.
vm_map_t -> struct vm_map *
vm_map_entry_t -> struct vm_map_entry *
simple_lock_data_t -> struct simplelock

(uvm not done yet, coming in the next commit)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.5 1999/09/11 00:44:59 mickey Exp $ */
d230 1
a230 1

@


1.5
log
@s/vm_offset_t/vaddr_t/ s/vm_size_t/vsize_t/
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.4 1996/04/21 22:19:21 deraadt Exp $ */
d89 1
a89 1
	vm_map_t	map;
d132 1
a132 1
	vm_map_t	map;
d243 1
a243 1
	vm_map_t	map;
@


1.5.4.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.5 1999/09/11 00:44:59 mickey Exp $ */
d89 1
a89 1
	struct vm_map	*map;
d132 1
a132 1
	struct vm_map	*map;
d243 1
a243 1
	struct vm_map	*map;
@


1.5.4.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d222 1
a222 1
	if (!db_watchpoints_inserted && db_watchpoint_list != NULL) {
d230 1
a230 1
	    pmap_update(watch->map->pmap);
@


1.4
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d91 1
a91 1
	vm_size_t	size;
d193 1
a193 1
	vm_size_t	size;
d197 1
a197 1
	    size = (vm_size_t) value;
@


1.3
log
@Debbuger changed towards the latest Mach.
Some minor changes for Linux ;) emulation.
Small bug fixes from NetBSD.
@
text
@d1 2
a2 1
/*	$OpenBSD: db_watch.c,v 1.2 1996/02/20 13:35:46 mickey Exp $	*/
d166 1
a166 1
	    db_printf("%s%8x  %8x  %x\n",
@


1.2
log
@netbsd-current import & 'boot' cmd addition.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_watch.c,v 1.8 1996/02/05 01:57:22 christos Exp $	*/
d5 1
a5 1
 * Copyright (c) 1991,1990 Carnegie Mellon University
d14 1
a14 1
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS 
d25 2
a26 2
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: db_watch.c,v 1.7 1994/10/09 08:30:15 mycroft Exp $	*/
d41 1
d43 3
d205 1
d207 5
a211 1
db_listwatch_cmd()
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
