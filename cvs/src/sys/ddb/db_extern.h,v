head	1.19;
access;
symbols
	OPENBSD_6_2:1.19.0.4
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.18.0.4
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.16.0.2
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.13.0.38
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.40
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.32
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.36
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.34
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.30
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.28
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.26
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.24
	OPENBSD_5_0:1.13.0.22
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.20
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.18
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.14
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.16
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.12
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.10
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.8
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.6
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.12.0.8
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.6
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.4
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.11.0.10
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.8
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.11
	UBC:1.10.0.6
	UBC_BASE:1.10
	OPENBSD_3_0:1.10.0.4
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.9.0.16
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.14
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.12
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.10
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.8
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.6
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.4
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6;
locks; strict;
comment	@ * @;


1.19
date	2017.05.29.06.14.10;	author mpi;	state Exp;
branches;
next	1.18;
commitid	kOJ4rx83W4cr7RQt;

1.18
date	2016.09.16.19.13.17;	author jasper;	state Exp;
branches;
next	1.17;
commitid	aag1XqKQQN6pS0l5;

1.17
date	2016.09.04.09.22.29;	author mpi;	state Exp;
branches;
next	1.16;
commitid	jBolvsPoQ0BaYiLs;

1.16
date	2016.04.19.12.23.25;	author mpi;	state Exp;
branches;
next	1.15;
commitid	8RTokESmYJ4rQpkq;

1.15
date	2016.04.19.10.12.36;	author mpi;	state Exp;
branches;
next	1.14;
commitid	uzREFYXNwPSah65A;

1.14
date	2016.03.09.09.04.15;	author mpi;	state Exp;
branches;
next	1.13;
commitid	AEIAF7S6Z6Ey8k81;

1.13
date	2006.07.06.18.14.14;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2004.04.25.03.21.50;	author itojun;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.14.01.26.51;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.02.10.10.42.35;	author niklas;	state Exp;
branches
	1.10.6.1;
next	1.9;

1.9
date	97.07.08.10.48.32;	author niklas;	state Exp;
branches
	1.9.12.1;
next	1.8;

1.8
date	97.05.29.03.28.44;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	97.02.07.06.18.46;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	96.09.27.14.42.32;	author briggs;	state Exp;
branches;
next	1.5;

1.5
date	96.08.04.01.27.45;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.05.10.13.58.43;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.05.05.12.23.11;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.03.11.11.16.07;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.02.20.13.35.36;	author mickey;	state Exp;
branches;
next	;

1.9.12.1
date	2001.05.14.22.06.57;	author niklas;	state Exp;
branches;
next	1.9.12.2;

1.9.12.2
date	2002.03.28.11.43.03;	author niklas;	state Exp;
branches;
next	1.9.12.3;

1.9.12.3
date	2004.06.05.23.12.36;	author niklas;	state Exp;
branches;
next	;

1.10.6.1
date	2002.06.11.03.28.48;	author art;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Pass the symbol instead of its name when looking for CTF infos.

ok jasper@@
@
text
@/*	$OpenBSD: db_extern.h,v 1.18 2016/09/16 19:13:17 jasper Exp $	*/
/*	$NetBSD: db_extern.h,v 1.1 1996/02/05 01:57:00 christos Exp $	*/

/*
 * Copyright (c) 1995 Christos Zoulas.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Christos Zoulas.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef _DDB_DB_EXTERN_H_
#define _DDB_DB_EXTERN_H_

/* db_sym.c */
void ddb_init(void);

/* db_examine.c */
void db_examine_cmd(db_expr_t, int, db_expr_t, char *);
void db_print_cmd(db_expr_t, int, db_expr_t, char *);
void db_search_cmd(db_expr_t, boolean_t, db_expr_t, char *);
void db_print_loc_and_inst(db_addr_t);
size_t db_strlcpy(char *, const char *, size_t);

/* db_expr.c */
int db_expression(db_expr_t *);

/* db_hangman.c */
void db_hangman(db_expr_t, int, db_expr_t, char *);

/* db_input.c */
int db_readline(char *, int);

/* db_trap.c */
void db_trap(int, int);

/* db_prof.c */
void db_prof_init(void);
int db_prof_enable(void);
void db_prof_disable(void);

/* db_ctf.c */
void	db_ctf_init(void);

#endif /* _DDB_DB_EXTERN_H_ */
@


1.18
log
@teach ddb(4) about CTF. currently it only loads the CTF and uses it on amd64
to lookup the number of function parameters. however having this basic
facility allows us to expand it's usage.

currently hidden behind the (disabled) DDBCTF kernel option as some of the
required tools are not available in base yet. in addition to that one
also needs recent bootblocks that load the .SUNW_ctf kernel section.

discussed with mpi@@ over many a cider and ale in cambridge
feedback and ok guenther@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.17 2016/09/04 09:22:29 mpi Exp $	*/
a62 1
int	db_ctf_func_numargs(const char *);
@


1.17
log
@Introduce Dynamic Profiling, a ddb(4) based & gprof compatible kernel
profiling framework.

Code patching is used to enable probes when entering functions.  The
probes will call a mcount()-like function to match the behavior of a
GPROF kernel.

Currently only available on amd64 and guarded under DDBPROF.  Support
for other archs will follow soon.

A new sysctl knob, ddb.console, need to be set to 1 in securelevel 0
to be able to use this feature.

Inputs and ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.16 2016/04/19 12:23:25 mpi Exp $	*/
d61 4
@


1.16
log
@Do not expose private functions.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.15 2016/04/19 10:12:36 mpi Exp $	*/
d56 5
@


1.15
log
@Keep db_write_cmd() in the only place where it is used, just like we did
with db_show_regs().
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.14 2016/03/09 09:04:15 mpi Exp $	*/
a39 1
void db_examine(db_addr_t, char *, int);
d41 1
a43 2
void db_search_cmd(db_expr_t, boolean_t, db_expr_t, char *);
void db_search(db_addr_t, int, db_expr_t, db_expr_t, db_expr_t);
a45 5
boolean_t db_term(db_expr_t *);
boolean_t db_unary(db_expr_t *);
boolean_t db_mult_expr(db_expr_t *);
boolean_t db_add_expr(db_expr_t *);
boolean_t db_shift_expr(db_expr_t *);
a51 5
void db_putstring(char *, int);
void db_putnchars(int, int);
void db_delete(int, int);
void db_delete_line(void);
int db_inputchar(int);
@


1.14
log
@Move db_show_regs() in the only file where it is used and turn it private.

ok mlarkin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.13 2006/07/06 18:14:14 miod Exp $	*/
a67 3

/* db_write_cmd.c */
void db_write_cmd(db_expr_t, boolean_t, db_expr_t, char *);
@


1.13
log
@Remove db_check_interrupt() related logic, since it was dummied in practice.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.12 2004/04/25 03:21:50 itojun Exp $	*/
a64 3

/* db_print.c */
void db_show_regs(db_expr_t, boolean_t, db_expr_t, char *);
@


1.12
log
@kill unbounded string op.  deraadt ok
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.11 2002/03/14 01:26:51 millert Exp $	*/
a64 1
void db_check_interrupt(void);
@


1.11
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.10 2001/02/10 10:42:35 niklas Exp $	*/
d43 1
a43 1
void db_strcpy(char *, char *);
@


1.10
log
@new symbol handling in ddb for ELF, there is still a problem with hangman on alpha though..
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.9 1997/07/08 10:48:32 niklas Exp $	*/
d36 1
a36 1
void ddb_init __P((void));
d39 7
a45 7
void db_examine_cmd __P((db_expr_t, int, db_expr_t, char *));
void db_examine __P((db_addr_t, char *, int));
void db_print_cmd __P((db_expr_t, int, db_expr_t, char *));
void db_print_loc_and_inst __P((db_addr_t));
void db_strcpy __P((char *, char *));
void db_search_cmd __P((db_expr_t, boolean_t, db_expr_t, char *));
void db_search __P((db_addr_t, int, db_expr_t, db_expr_t, db_expr_t));
d48 6
a53 6
boolean_t db_term __P((db_expr_t *));
boolean_t db_unary __P((db_expr_t *));
boolean_t db_mult_expr __P((db_expr_t *));
boolean_t db_add_expr __P((db_expr_t *));
boolean_t db_shift_expr __P((db_expr_t *));
int db_expression __P((db_expr_t *));
d56 1
a56 1
void db_hangman __P((db_expr_t, int, db_expr_t, char *));
d59 7
a65 7
void db_putstring __P((char *, int));
void db_putnchars __P((int, int));
void db_delete __P((int, int));
void db_delete_line __P((void));
int db_inputchar __P((int));
int db_readline __P((char *, int));
void db_check_interrupt __P((void));
d68 1
a68 1
void db_show_regs __P((db_expr_t, boolean_t, db_expr_t, char *));
d74 1
a74 1
void db_write_cmd __P((db_expr_t, boolean_t, db_expr_t, char *));
@


1.10.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.10 2001/02/10 10:42:35 niklas Exp $	*/
d36 1
a36 1
void ddb_init(void);
d39 7
a45 7
void db_examine_cmd(db_expr_t, int, db_expr_t, char *);
void db_examine(db_addr_t, char *, int);
void db_print_cmd(db_expr_t, int, db_expr_t, char *);
void db_print_loc_and_inst(db_addr_t);
void db_strcpy(char *, char *);
void db_search_cmd(db_expr_t, boolean_t, db_expr_t, char *);
void db_search(db_addr_t, int, db_expr_t, db_expr_t, db_expr_t);
d48 6
a53 6
boolean_t db_term(db_expr_t *);
boolean_t db_unary(db_expr_t *);
boolean_t db_mult_expr(db_expr_t *);
boolean_t db_add_expr(db_expr_t *);
boolean_t db_shift_expr(db_expr_t *);
int db_expression(db_expr_t *);
d56 1
a56 1
void db_hangman(db_expr_t, int, db_expr_t, char *);
d59 7
a65 7
void db_putstring(char *, int);
void db_putnchars(int, int);
void db_delete(int, int);
void db_delete_line(void);
int db_inputchar(int);
int db_readline(char *, int);
void db_check_interrupt(void);
d68 1
a68 1
void db_show_regs(db_expr_t, boolean_t, db_expr_t, char *);
d74 1
a74 1
void db_write_cmd(db_expr_t, boolean_t, db_expr_t, char *);
@


1.9
log
@Let the count of symbols be long, so the nlist array will get proper
alignment everywhere.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.8 1997/05/29 03:28:44 mickey Exp $	*/
d35 1
a35 16
/* db_aout.c */
void X_db_sym_init __P((long *, char *, char *));
size_t X_db_nsyms __P((db_symtab_t));
db_sym_t X_db_isym __P((db_symtab_t, size_t));
db_sym_t X_db_lookup __P((db_symtab_t, char *));
db_sym_t X_db_search_symbol __P((db_symtab_t, db_addr_t, db_strategy_t,
				 db_expr_t *));
void X_db_symbol_values __P((db_sym_t, char **, db_expr_t *));
void db_printsym __P((db_expr_t, db_strategy_t));
boolean_t X_db_line_at_pc __P((db_symtab_t, db_sym_t, char **,
			       int *, db_expr_t));
int X_db_sym_numargs __P((db_symtab_t, db_sym_t, int *, char **));
struct exec;
void X_db_stub_xh __P((db_symtab_t, struct exec *));
int X_db_symtablen __P((db_symtab_t));
int X_db_symatoff __P((db_symtab_t, int, void*, int*));
d54 3
@


1.9.12.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.10 2001/02/10 10:42:35 niklas Exp $	*/
d35 16
a50 1
/* db_sym.c */
a68 3

/* db_hangman.c */
void db_hangman __P((db_expr_t, int, db_expr_t, char *));
@


1.9.12.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d36 1
a36 1
void ddb_init(void);
d39 7
a45 7
void db_examine_cmd(db_expr_t, int, db_expr_t, char *);
void db_examine(db_addr_t, char *, int);
void db_print_cmd(db_expr_t, int, db_expr_t, char *);
void db_print_loc_and_inst(db_addr_t);
void db_strcpy(char *, char *);
void db_search_cmd(db_expr_t, boolean_t, db_expr_t, char *);
void db_search(db_addr_t, int, db_expr_t, db_expr_t, db_expr_t);
d48 6
a53 6
boolean_t db_term(db_expr_t *);
boolean_t db_unary(db_expr_t *);
boolean_t db_mult_expr(db_expr_t *);
boolean_t db_add_expr(db_expr_t *);
boolean_t db_shift_expr(db_expr_t *);
int db_expression(db_expr_t *);
d56 1
a56 1
void db_hangman(db_expr_t, int, db_expr_t, char *);
d59 7
a65 7
void db_putstring(char *, int);
void db_putnchars(int, int);
void db_delete(int, int);
void db_delete_line(void);
int db_inputchar(int);
int db_readline(char *, int);
void db_check_interrupt(void);
d68 1
a68 1
void db_show_regs(db_expr_t, boolean_t, db_expr_t, char *);
d74 1
a74 1
void db_write_cmd(db_expr_t, boolean_t, db_expr_t, char *);
@


1.9.12.3
log
@Merge with the trunk
@
text
@d43 1
a43 1
size_t db_strlcpy(char *, const char *, size_t);
@


1.8
log
@futher support for kernfs......
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.7 1997/02/07 06:18:46 mickey Exp $	*/
d36 1
a36 1
void X_db_sym_init __P((int *, char *, char *));
@


1.7
log
@necessary support for kernfs.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.6 1996/09/27 14:42:32 briggs Exp $	*/
d49 2
@


1.6
log
@Prototype db_delete_line().
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.5 1996/08/04 01:27:45 niklas Exp $	*/
d47 2
@


1.5
log
@Make compile on OpenBSD/alpha.  MD stuff is still missing though.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.4 1996/05/10 13:58:43 mickey Exp $	*/
d70 1
@


1.4
log
@do dynamic symtab allocattion.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.2 1996/03/11 11:16:07 mickey Exp $	*/
d56 1
a56 1
void db_search __P((db_addr_t, int, db_expr_t, db_expr_t, unsigned int));
@


1.3
log
@add advanced hang analyzer.
idea by theo.
@
text
@d37 4
a40 4
size_t X_db_nsyms __P((db_symtab_t *));
db_sym_t X_db_isym __P((db_symtab_t *, size_t));
db_sym_t X_db_lookup __P((db_symtab_t *, char *));
db_sym_t X_db_search_symbol __P((db_symtab_t *, db_addr_t, db_strategy_t,
d44 1
a44 1
boolean_t X_db_line_at_pc __P((db_symtab_t *, db_sym_t, char **,
d46 1
a46 1
int X_db_sym_numargs __P((db_symtab_t *, db_sym_t, int *, char **));
@


1.2
log
@Debbuger changed towards the latest Mach.
Some minor changes for Linux ;) emulation.
Small bug fixes from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_extern.h,v 1.1 1996/02/20 13:35:36 mickey Exp $	*/
d37 2
@


1.1
log
@netbsd-current import & 'boot' cmd addition.
@
text
@d1 2
a2 1
/*	$OpenBSD: db_extern.h,v 1.1 1996/02/05 01:57:00 christos Exp $	*/
@
