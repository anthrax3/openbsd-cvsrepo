head	1.16;
access;
symbols
	OPENBSD_6_0:1.16.0.12
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.8
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.10
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.6
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.15.0.30
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.28
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.26
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.24
	OPENBSD_5_0:1.15.0.22
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.20
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.18
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.14
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.16
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.12
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.10
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.8
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.6
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.4
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.12
	UBC:1.9.0.20
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.18
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.16
	OPENBSD_2_8:1.9.0.14
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.12
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.10
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.8
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.6
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.4
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.2
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.4
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2013.12.12.21.00.09;	author guenther;	state Exp;
branches;
next	1.15;

1.15
date	2006.07.06.18.14.48;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2003.08.24.01.27.07;	author avsm;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.28.01.52.18;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.18.18.22.46;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.14.16.12.33;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.14.01.26.51;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.11.04.20.45.17;	author chuck;	state Exp;
branches
	1.9.10.1
	1.9.20.1;
next	1.8;

1.8
date	97.07.07.19.45.25;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.07.24.21.58.04;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.07.23.23.54.28;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.04.21.22.19.07;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.03.11.11.16.17;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.02.20.13.35.40;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.05.02.16;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.28;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.28;	author deraadt;	state Exp;
branches;
next	;

1.9.10.1
date	2002.03.28.11.43.03;	author niklas;	state Exp;
branches;
next	1.9.10.2;

1.9.10.2
date	2003.03.28.00.00.19;	author niklas;	state Exp;
branches;
next	1.9.10.3;

1.9.10.3
date	2004.02.19.10.56.12;	author niklas;	state Exp;
branches;
next	;

1.9.20.1
date	2002.06.11.03.28.48;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Add db_vprintf(), and then use it in ACPI's db_disprint() instead of
formatting into a local buffer.

ok miod@@
@
text
@/*	$OpenBSD: db_output.h,v 1.15 2006/07/06 18:14:48 miod Exp $ */
/*	$NetBSD: db_output.h,v 1.9 1996/04/04 05:13:50 cgd Exp $	*/

/* 
 * Mach Operating System
 * Copyright (c) 1993,1992,1991,1990 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon
 * the rights to redistribute these changes.
 *
 * 	Author: David B. Golub, Carnegie Mellon University
 *	Date:	8/90
 */

/*
 * Printing routines for kernel debugger.
 */
void db_force_whitespace(void);
void db_putchar(int);
int db_print_position(void);
int db_printf(const char *, ...)
    __attribute__((__format__(__kprintf__,1,2)));
int db_vprintf(const char *, va_list)
    __attribute__((__format__(__kprintf__,1,0)));
void db_end_line(int);

/*
 * This is a replacement for the non-standard %z, %n and %r printf formats
 * in db_printf.
 *
 * db_format(buf, bufsize, val, format, alt, width)
 *
 * val is the value we want printed.
 * format is one of DB_FORMAT_[ZRN]
 * alt specifies if we should provide an "alternate" format (# in the printf
 *   format).
 * width is the field width. 0 is the same as no width specifier.
 */
#define DB_FORMAT_Z	1
#define DB_FORMAT_R	2
#define DB_FORMAT_N	3
#define DB_FORMAT_BUF_SIZE	64	/* should be plenty for all formats */
char *db_format(char *, size_t, long, int, int, int);

/* XXX - this is the wrong place, but we have no better. */
void db_stack_dump(void);
@


1.15
log
@Make the ddb.log sysctl available as an in-ddb variable, $log, for consistency.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.14 2003/08/24 01:27:07 avsm Exp $ */
d41 2
@


1.14
log
@sprinkle some __kprintf__ attributes around functions which use format
strings in the kernel to make gcc aware of the extra modifiers
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.13 2003/06/28 01:52:18 tedu Exp $ */
a41 2

extern int db_log;
@


1.13
log
@option to log ddb output to kernel message buffer, via sysctl ddb.log
ok deraadt@@ henric@@ djm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.12 2002/05/18 18:22:46 art Exp $ */
d40 1
a40 1
    __kprintf_attribute__((__format__(__kprintf__,1,2)));
@


1.12
log
@Implement db_stack_dump - a function that will print a stack
trace with printf (to the console and into the msgbuf).
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.11 2002/05/14 16:12:33 art Exp $ */
d42 2
@


1.11
log
@db_printf has three non-standard formats that are not supported by
printf. Since we want to be able to have some ddb functions use db_printf
or normal printf, provide a new way to acheive the same kind of formatting.

The new function is called db_format and can emulate all variations of
how the nonstandard db_printf formats are used.

Note that this doesn't (yet?) mean that we want to convert all the
non-standard formats, we just want to have that option.

miod@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.10 2002/03/14 01:26:51 millert Exp $ */
d60 3
@


1.10
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.9 1997/11/04 20:45:17 chuck Exp $ */
d42 18
@


1.9
log
@db_output.c: kill db_ksprintn, db_printf_guts, kdbprintf, db_printf.
  db_printf moves to kern/subr_prf.c and uses the new kprintf located there.
db_output.h: kill kdbprintf [use db_printf]
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.8 1997/07/07 19:45:25 niklas Exp $ */
d36 4
a39 4
void db_force_whitespace __P((void));
void db_putchar __P((int));
int db_print_position __P((void));
int db_printf __P((const char *, ...))
d41 1
a41 1
void db_end_line __P((int));
@


1.9.20.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.9 1997/11/04 20:45:17 chuck Exp $ */
d36 4
a39 4
void db_force_whitespace(void);
void db_putchar(int);
int db_print_position(void);
int db_printf(const char *, ...)
d41 1
a41 22
void db_end_line(int);

/*
 * This is a replacement for the non-standard %z, %n and %r printf formats
 * in db_printf.
 *
 * db_format(buf, bufsize, val, format, alt, width)
 *
 * val is the value we want printed.
 * format is one of DB_FORMAT_[ZRN]
 * alt specifies if we should provide an "alternate" format (# in the printf
 *   format).
 * width is the field width. 0 is the same as no width specifier.
 */
#define DB_FORMAT_Z	1
#define DB_FORMAT_R	2
#define DB_FORMAT_N	3
#define DB_FORMAT_BUF_SIZE	64	/* should be plenty for all formats */
char *db_format(char *, size_t, long, int, int, int);

/* XXX - this is the wrong place, but we have no better. */
void db_stack_dump(void);
@


1.9.10.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d36 4
a39 4
void db_force_whitespace(void);
void db_putchar(int);
int db_print_position(void);
int db_printf(const char *, ...)
d41 1
a41 1
void db_end_line(int);
@


1.9.10.2
log
@Sync the SMP branch with 3.3
@
text
@a41 21

/*
 * This is a replacement for the non-standard %z, %n and %r printf formats
 * in db_printf.
 *
 * db_format(buf, bufsize, val, format, alt, width)
 *
 * val is the value we want printed.
 * format is one of DB_FORMAT_[ZRN]
 * alt specifies if we should provide an "alternate" format (# in the printf
 *   format).
 * width is the field width. 0 is the same as no width specifier.
 */
#define DB_FORMAT_Z	1
#define DB_FORMAT_R	2
#define DB_FORMAT_N	3
#define DB_FORMAT_BUF_SIZE	64	/* should be plenty for all formats */
char *db_format(char *, size_t, long, int, int, int);

/* XXX - this is the wrong place, but we have no better. */
void db_stack_dump(void);
@


1.9.10.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d40 1
a40 1
    __attribute__((__format__(__kprintf__,1,2)));
a41 2

extern int db_log;
@


1.8
log
@Do not wrap lines so often, much prettier x output
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.7 1996/07/24 21:58:04 niklas Exp $ */
a39 2
    __kprintf_attribute__((__format__(__kprintf__,1,2)));
int kdbprintf __P((const char *, ...))
@


1.7
log
@printf style functions now are int, explicitly return 0
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.6 1996/07/23 23:54:28 deraadt Exp $ */
d43 1
a43 1
void db_end_line __P((void));
@


1.6
log
@make printf/addlog return 0, for compat to userland
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d41 1
a41 1
void kdbprintf __P((const char *, ...))
@


1.5
log
@partial sync with netbsd 960418, more to come
@
text
@d39 1
a39 1
void db_printf __P((const char *, ...))
@


1.4
log
@Debbuger changed towards the latest Mach.
Some minor changes for Linux ;) emulation.
Small bug fixes from NetBSD.
@
text
@d1 2
a2 1
/*	$OpenBSD: db_output.h,v 1.3 1996/02/20 13:35:40 mickey Exp $	*/
d39 4
a42 2
void db_printf __P((const char *, ...));
void kdbprintf __P((const char *, ...));
@


1.3
log
@netbsd-current import & 'boot' cmd addition.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_output.h,v 1.7 1996/02/05 01:57:09 christos Exp $	*/
d5 1
a5 1
 * Copyright (c) 1991,1990 Carnegie Mellon University
d14 1
a14 1
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS 
d25 2
a26 2
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
@


1.2
log
@update from netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: db_output.h,v 1.6 1995/10/16 05:28:17 mycroft Exp $	*/
d36 1
d38 2
a40 1
void db_printf __P((const char *, ...));
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: db_output.h,v 1.5 1994/10/09 08:19:36 mycroft Exp $	*/
d38 1
a38 1
int db_printf __P((char *, ...));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
