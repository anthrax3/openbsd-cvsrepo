head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.6
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.22
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.14
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.18
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.16
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.12
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.10
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.8
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.6
	OPENBSD_5_0:1.9.0.4
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.8.0.36
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.32
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.34
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.30
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.28
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.26
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.24
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.22
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.20
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.18
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.16
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.14
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.12
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.10
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.8
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.2
	UBC_BASE:1.7
	OPENBSD_3_0:1.5.0.12
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.10
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.4
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.12
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.10
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2016.04.19.12.23.25;	author mpi;	state Exp;
branches;
next	1.10;
commitid	8RTokESmYJ4rQpkq;

1.10
date	2016.01.25.14.30.30;	author mpi;	state Exp;
branches;
next	1.9;
commitid	7AkssaZPPd7mA8h3;

1.9
date	2010.11.27.19.59.11;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.01.26.51;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.28.16.13.29;	author art;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2001.11.06.19.53.18;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	99.09.11.00.44.59;	author mickey;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	96.04.21.22.18.56;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.03.11.11.16.00;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.02.20.13.35.33;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.27;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.27;	author deraadt;	state Exp;
branches;
next	;

1.5.4.1
date	2001.11.13.21.05.48;	author niklas;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2001.12.05.00.43.29;	author niklas;	state Exp;
branches;
next	1.5.4.3;

1.5.4.3
date	2002.03.28.11.43.03;	author niklas;	state Exp;
branches;
next	;

1.7.2.1
date	2002.06.11.03.28.48;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Do not expose private functions.
@
text
@/*	$OpenBSD: db_break.h,v 1.10 2016/01/25 14:30:30 mpi Exp $	*/
/*	$NetBSD: db_break.h,v 1.8 1996/02/05 01:56:52 christos Exp $	*/

/*
 * Mach Operating System
 * Copyright (c) 1993,1992,1991,1990 Carnegie Mellon University
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie Mellon
 * the rights to redistribute these changes.
 *
 *	Author: David B. Golub, Carnegie Mellon University
 *	Date:	7/90
 */

#ifndef	_DDB_DB_BREAK_H_
#define	_DDB_DB_BREAK_H_

#include <uvm/uvm_extern.h>

/*
 * Breakpoints.
 */
typedef struct db_breakpoint {
	db_addr_t address;		/* set here */
	int	init_count;		/* number of times to skip bkpt */
	int	count;			/* current count */
	int	flags;			/* flags: */
#define	BKPT_SINGLE_STEP	0x2	    /* to simulate single step */
#define	BKPT_TEMP		0x4	    /* temporary */
	int	bkpt_inst;		/* saved instruction at bkpt */
	struct db_breakpoint *link;	/* link in in-use or free chain */
} *db_breakpoint_t;

db_breakpoint_t db_find_breakpoint(db_addr_t);
void db_set_breakpoints(void);
void db_clear_breakpoints(void);
db_breakpoint_t db_set_temp_breakpoint(db_addr_t);
void db_delete_temp_breakpoint(db_breakpoint_t);
void db_delete_cmd(db_expr_t, int, db_expr_t, char *);
void db_breakpoint_cmd(db_expr_t, int, db_expr_t, char *);
void db_listbreak_cmd(db_expr_t, int, db_expr_t, char *);

#endif	/* _DDB_DB_BREAK_H_ */
@


1.10
log
@Kill trailing whitespaces.  No object change.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_break.h,v 1.9 2010/11/27 19:59:11 miod Exp $	*/
a51 4
db_breakpoint_t db_breakpoint_alloc(void);
void db_breakpoint_free(db_breakpoint_t);
void db_set_breakpoint(db_addr_t, int);
void db_delete_breakpoint(db_addr_t);
a56 1
void db_list_breakpoints(void);
@


1.9
log
@Get rid of the vm_map field of ddb breakpoints and watchpoints, and do not
pretend these could work on userland addresses.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_break.h,v 1.8 2002/03/14 01:26:51 millert Exp $	*/
d4 1
a4 1
/* 
d8 1
a8 1
 * 
d14 1
a14 1
 * 
d18 1
a18 1
 * 
d20 1
a20 1
 * 
d25 1
a25 1
 * 
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: db_break.h,v 1.7 2001/11/28 16:13:29 art Exp $	*/
a41 1
	struct vm_map *map;			/* in this map */
d54 3
a56 4
void db_set_breakpoint(struct vm_map *, db_addr_t, int);
void db_delete_breakpoint(struct vm_map *, db_addr_t);
db_breakpoint_t db_find_breakpoint(struct vm_map *, db_addr_t);
db_breakpoint_t db_find_breakpoint_here(db_addr_t);
a64 3
boolean_t db_map_equal(struct vm_map *, struct vm_map *);
boolean_t db_map_current(struct vm_map *);
struct vm_map *db_map_addr(vaddr_t);
@


1.7
log
@zap some typedefs.
vm_map_t -> struct vm_map *
vm_map_entry_t -> struct vm_map_entry *
simple_lock_data_t -> struct simplelock

(uvm not done yet, coming in the next commit)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_break.h,v 1.6 2001/11/06 19:53:18 miod Exp $	*/
d53 17
a69 17
db_breakpoint_t db_breakpoint_alloc __P((void));
void db_breakpoint_free __P((db_breakpoint_t));
void db_set_breakpoint __P((struct vm_map *, db_addr_t, int));
void db_delete_breakpoint __P((struct vm_map *, db_addr_t));
db_breakpoint_t db_find_breakpoint __P((struct vm_map *, db_addr_t));
db_breakpoint_t db_find_breakpoint_here __P((db_addr_t));
void db_set_breakpoints __P((void));
void db_clear_breakpoints __P((void));
db_breakpoint_t db_set_temp_breakpoint __P((db_addr_t));
void db_delete_temp_breakpoint __P((db_breakpoint_t));
void db_list_breakpoints __P((void));
void db_delete_cmd __P((db_expr_t, int, db_expr_t, char *));
void db_breakpoint_cmd __P((db_expr_t, int, db_expr_t, char *));
void db_listbreak_cmd __P((db_expr_t, int, db_expr_t, char *));
boolean_t db_map_equal __P((struct vm_map *, struct vm_map *));
boolean_t db_map_current __P((struct vm_map *));
struct vm_map *db_map_addr __P((vaddr_t));
@


1.7.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_break.h,v 1.7 2001/11/28 16:13:29 art Exp $	*/
d53 17
a69 17
db_breakpoint_t db_breakpoint_alloc(void);
void db_breakpoint_free(db_breakpoint_t);
void db_set_breakpoint(struct vm_map *, db_addr_t, int);
void db_delete_breakpoint(struct vm_map *, db_addr_t);
db_breakpoint_t db_find_breakpoint(struct vm_map *, db_addr_t);
db_breakpoint_t db_find_breakpoint_here(db_addr_t);
void db_set_breakpoints(void);
void db_clear_breakpoints(void);
db_breakpoint_t db_set_temp_breakpoint(db_addr_t);
void db_delete_temp_breakpoint(db_breakpoint_t);
void db_list_breakpoints(void);
void db_delete_cmd(db_expr_t, int, db_expr_t, char *);
void db_breakpoint_cmd(db_expr_t, int, db_expr_t, char *);
void db_listbreak_cmd(db_expr_t, int, db_expr_t, char *);
boolean_t db_map_equal(struct vm_map *, struct vm_map *);
boolean_t db_map_current(struct vm_map *);
struct vm_map *db_map_addr(vaddr_t);
@


1.6
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_break.h,v 1.5 1999/09/11 00:44:59 mickey Exp $	*/
d42 1
a42 1
	vm_map_t map;			/* in this map */
d55 3
a57 3
void db_set_breakpoint __P((vm_map_t, db_addr_t, int));
void db_delete_breakpoint __P((vm_map_t, db_addr_t));
db_breakpoint_t db_find_breakpoint __P((vm_map_t, db_addr_t));
d67 3
a69 3
boolean_t db_map_equal __P((vm_map_t, vm_map_t));
boolean_t db_map_current __P((vm_map_t));
vm_map_t db_map_addr __P((vaddr_t));
@


1.5
log
@s/vm_offset_t/vaddr_t/ s/vm_size_t/vsize_t/
@
text
@d1 1
a1 1
/*	$OpenBSD: db_break.h,v 1.4 1996/04/21 22:18:56 deraadt Exp $	*/
d36 1
a36 1
#include <vm/vm.h>
@


1.5.4.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d36 1
a36 1
#include <uvm/uvm_extern.h>
@


1.5.4.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_break.h,v 1.5.4.1 2001/11/13 21:05:48 niklas Exp $	*/
d42 1
a42 1
	struct vm_map *map;			/* in this map */
d55 3
a57 3
void db_set_breakpoint __P((struct vm_map *, db_addr_t, int));
void db_delete_breakpoint __P((struct vm_map *, db_addr_t));
db_breakpoint_t db_find_breakpoint __P((struct vm_map *, db_addr_t));
d67 3
a69 3
boolean_t db_map_equal __P((struct vm_map *, struct vm_map *));
boolean_t db_map_current __P((struct vm_map *));
struct vm_map *db_map_addr __P((vaddr_t));
@


1.5.4.3
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d53 17
a69 17
db_breakpoint_t db_breakpoint_alloc(void);
void db_breakpoint_free(db_breakpoint_t);
void db_set_breakpoint(struct vm_map *, db_addr_t, int);
void db_delete_breakpoint(struct vm_map *, db_addr_t);
db_breakpoint_t db_find_breakpoint(struct vm_map *, db_addr_t);
db_breakpoint_t db_find_breakpoint_here(db_addr_t);
void db_set_breakpoints(void);
void db_clear_breakpoints(void);
db_breakpoint_t db_set_temp_breakpoint(db_addr_t);
void db_delete_temp_breakpoint(db_breakpoint_t);
void db_list_breakpoints(void);
void db_delete_cmd(db_expr_t, int, db_expr_t, char *);
void db_breakpoint_cmd(db_expr_t, int, db_expr_t, char *);
void db_listbreak_cmd(db_expr_t, int, db_expr_t, char *);
boolean_t db_map_equal(struct vm_map *, struct vm_map *);
boolean_t db_map_current(struct vm_map *);
struct vm_map *db_map_addr(vaddr_t);
@


1.4
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: db_break.h,v 1.3 1996/03/11 11:16:00 mickey Exp $	*/
d69 1
a69 1
vm_map_t db_map_addr __P((vm_offset_t));
@


1.3
log
@Debbuger changed towards the latest Mach.
Some minor changes for Linux ;) emulation.
Small bug fixes from NetBSD.
@
text
@d1 2
a2 1
/*	$OpenBSD: db_break.h,v 1.2 1996/02/20 13:35:33 mickey Exp $	*/
@


1.2
log
@netbsd-current import & 'boot' cmd addition.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_break.h,v 1.8 1996/02/05 01:56:52 christos Exp $	*/
d5 1
a5 1
 * Copyright (c) 1991,1990 Carnegie Mellon University
d14 1
a14 1
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS 
d25 2
a26 2
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: db_break.h,v 1.7 1994/10/09 08:29:58 mycroft Exp $	*/
d52 6
a57 2
db_breakpoint_t	db_find_breakpoint __P((vm_map_t, db_addr_t));
db_breakpoint_t	db_find_breakpoint_here __P((db_addr_t));
d60 1
a60 2

db_breakpoint_t	db_set_temp_breakpoint __P((db_addr_t));
d62 4
a65 1

d70 1
a70 1
#endif	_DDB_DB_BREAK_H_
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
