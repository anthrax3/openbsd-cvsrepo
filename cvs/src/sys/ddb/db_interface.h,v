head	1.19;
access;
symbols
	OPENBSD_6_1:1.19.0.2
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.16.0.22
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.14
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.18
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.16
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.12
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.10
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.8
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.6
	OPENBSD_5_0:1.16.0.4
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.12.0.4
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.10.0.2
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.5.0.16
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.14
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.3.0.26
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.24
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.22
	OPENBSD_2_8:1.3.0.20
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.18
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.16
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.19
date	2017.01.09.17.58.44;	author mpi;	state Exp;
branches;
next	1.18;
commitid	j82PkKLhCqOiV0JZ;

1.18
date	2017.01.09.17.21.42;	author mpi;	state Exp;
branches;
next	1.17;
commitid	o57YWCdCXNjzNuSt;

1.17
date	2016.01.15.11.21.58;	author dlg;	state Exp;
branches;
next	1.16;
commitid	7LVjORDaEDODwOzR;

1.16
date	2010.11.05.15.17.50;	author claudio;	state Exp;
branches;
next	1.15;

1.15
date	2009.08.17.13.11.58;	author jasper;	state Exp;
branches;
next	1.14;

1.14
date	2009.08.14.21.16.13;	author thib;	state Exp;
branches;
next	1.13;

1.13
date	2009.08.13.13.49.20;	author thib;	state Exp;
branches;
next	1.12;

1.12
date	2009.06.17.01.30.30;	author thib;	state Exp;
branches;
next	1.11;

1.11
date	2009.06.03.22.09.30;	author thib;	state Exp;
branches;
next	1.10;

1.10
date	2009.01.18.13.36.56;	author thib;	state Exp;
branches;
next	1.9;

1.9
date	2006.07.12.05.55.22;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2006.07.11.21.17.58;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.20.18.29.23;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.16.03.18.29;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.18.09.49.17;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.51;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.04.21.22.19.02;	author deraadt;	state Exp;
branches
	1.3.16.1
	1.3.26.1;
next	1.2;

1.2
date	96.03.11.11.16.10;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.02.20.13.35.37;	author mickey;	state Exp;
branches;
next	;

1.3.16.1
date	2002.03.28.11.43.03;	author niklas;	state Exp;
branches;
next	1.3.16.2;

1.3.16.2
date	2003.03.28.00.00.19;	author niklas;	state Exp;
branches;
next	;

1.3.26.1
date	2002.06.11.03.28.48;	author art;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Revert previous, it's a documented behavior and people might rely on it.

Pointed by deraadt@@
@
text
@/*	$OpenBSD: db_interface.h,v 1.18 2017/01/09 17:21:42 mpi Exp $	*/
/*	$NetBSD: db_interface.h,v 1.1 1996/02/05 01:57:03 christos Exp $	*/

/*
 * Copyright (c) 1995 Christos Zoulas.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Christos Zoulas.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef _DDB_DB_INTERFACE_H_
#define _DDB_DB_INTERFACE_H_

/* arch/<arch>/<arch>/db_trace.c */
void db_stack_trace_print(db_expr_t, int, db_expr_t, char *,
    int (*)(const char *, ...));

/* arch/<arch>/<arch>/db_disasm.c */
db_addr_t db_disasm(db_addr_t, boolean_t);

/* kern/kern_proc.c */
void db_show_all_procs(db_expr_t, int, db_expr_t, char *);

/* kern/kern_timeout.c */
void db_show_callout(db_expr_t, int, db_expr_t, char *);

struct mount;

/* kern/vfs_subr.c */
void vfs_buf_print(void *, int, int (*)(const char *, ...));
void vfs_vnode_print(void *, int, int (*)(const char *, ...));
void vfs_mount_print(struct mount *, int, int (*)(const char *, ...));

/* kern/subr_pool.c */
void db_show_all_pools(db_expr_t, int, db_expr_t, char *);

/* kern/uipc_mbuf.c */
void m_print(void *, int (*)(const char *, ...));

/* kern/uipc_socket.c */
void so_print(void *, int (*)(const char *, ...));

/* nfs/nfs_debug.c */
void db_show_all_nfsreqs(db_expr_t, int, db_expr_t, char *);
void nfs_request_print(void *, int, int (*)(const char *, ...));
void db_show_all_nfsnodes(db_expr_t, int, db_expr_t, char *);
void nfs_node_print(void *, int, int (*)(const char *, ...));

/* ufs/ffs/ffs_softdep.c */
struct worklist;
void worklist_print(struct worklist *, int, int (*)(const char *, ...));
void softdep_print(struct buf *, int, int (*)(const char *, ...));

/* arch/<arch>/<arch>/db_interface.c */
void db_machine_init(void);

#endif /* _DDB_DB_INTERFACE_H_ */
@


1.18
log
@Stop and restart the watchdog timer when entering and leaving ddb(4).

From Christian Ludwig.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.17 2016/01/15 11:21:58 dlg Exp $	*/
a46 4

/* kern/kern_watchdog.c */
void db_wdog_disable(void);
void db_wdog_enable(void);
@


1.17
log
@add a "show socket" command to ddb

should help inspecting socket issues in the future.

enthusiasm from mpi@@ bluhm@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.16 2010/11/05 15:17:50 claudio Exp $	*/
d47 4
@


1.16
log
@Implement m_print as real ddb command "show mbuf addr" in the way other
such commands are implemented.
"Ja! You'll need to update ddb.4 as well, of course." miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.15 2009/08/17 13:11:58 jasper Exp $	*/
d60 3
@


1.15
log
@dd 'show all bufs' to show all the buffers in the system

ok beck@@ thib@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.14 2009/08/14 21:16:13 thib Exp $	*/
d57 3
@


1.14
log
@add ddb functions to be able to show all the nfsnodes in the system
and rewrite the nfsreq code to use pool_walk().

OK beck@@, blambert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.11 2009/06/03 22:09:30 thib Exp $	*/
d51 1
a51 1
void vfs_buf_print(struct buf *, int, int (*)(const char *, ...));
@


1.13
log
@add a show all vnodes command, use dlg's nice pool_walk() to accomplish
this.

ok beck@@, dlg@@
@
text
@a58 1
struct nfsreq;
d60 3
a62 1
void db_nfsreq_print(struct nfsreq *, int, int (*)(const char *, ...));
@


1.12
log
@Revert bufq's. this is inline with the major midlayer reverts that
have been going on. this appears to bring us back to stable state.

lots of testing by oga and ariane and my self.
@
text
@a48 1
struct vnode;
d52 1
a52 1
void vfs_vnode_print(struct vnode *, int, int (*)(const char *, ...));
@


1.11
log
@add a flexible buffer queue (bufq) api, based on the never used
one by tedu@@. It doesn't do anything smart yet, it just uses
plain old disksort. we also keep the old method of queueing bufs
since some miods have crazy MD drivers that need some love.

ok beck@@, art@@
tested by many on many archs.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.9 2006/07/12 05:55:22 deraadt Exp $	*/
a62 4

/* kern/kern_bufq.c */
struct bufq;
void db_bufq_print(struct bufq *, int, int (*)(const char *, ...));
@


1.10
log
@Add nfs ddb hooks, for now only to show all the outstanding nfsreq's
and to print out struct nfsreq.

"get it in so people can pound on it" blambert@@
OK and information_s_ on the manpage from miod@@
@
text
@d64 4
@


1.9
log
@fake structs to let kernels compile on architectures that some german
companies do not use.  Mickey, why did you break the tree for us like this,
all after not showing the diffs to lots of people? Are you that special
that you can get away with this?  Do you really want to bet on that, again?
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.8 2006/07/11 21:17:58 mickey Exp $	*/
d58 5
@


1.8
log
@add mount/vnode/buf and softdep printing commands; tested on a few archs and will make pedro happy too (;
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.7 2006/05/20 18:29:23 mickey Exp $	*/
d47 3
@


1.7
log
@add show all pools command listing all pools as vmstat -m does; miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.6 2006/05/16 03:18:29 mickey Exp $	*/
d48 5
d55 5
@


1.6
log
@fix comments
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.5 2002/05/18 09:49:17 art Exp $	*/
d47 3
@


1.5
log
@Rename the MD db_stack_trace_cmd to db_stack_trace_print. Add an argument
that specifies which printf funciton it should use. Implement
db_stack_trace_cmd in MI code.

Thanks to miod@@ for all the tests.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.4 2002/03/14 01:26:51 millert Exp $	*/
d42 1
a42 1
/* kern/kern_synch.c */
d45 1
a45 1
/* kern/kern_clock.c */
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.3 1996/04/21 22:19:02 deraadt Exp $	*/
d36 2
a37 1
void db_stack_trace_cmd(db_expr_t, int, db_expr_t, char *);
@


1.3
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.2 1996/03/11 11:16:10 mickey Exp $	*/
d36 1
a36 1
void db_stack_trace_cmd __P((db_expr_t, int, db_expr_t, char *));
d39 1
a39 1
db_addr_t db_disasm __P((db_addr_t, boolean_t));
d42 1
a42 1
void db_show_all_procs __P((db_expr_t, int, db_expr_t, char *));
d45 1
a45 1
void db_show_callout __P((db_expr_t, int, db_expr_t, char *));
d48 1
a48 1
void db_machine_init __P((void));
@


1.3.26.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.h,v 1.3 1996/04/21 22:19:02 deraadt Exp $	*/
d36 1
a36 2
void db_stack_trace_print(db_expr_t, int, db_expr_t, char *,
    int (*)(const char *, ...));
d39 1
a39 1
db_addr_t db_disasm(db_addr_t, boolean_t);
d42 1
a42 1
void db_show_all_procs(db_expr_t, int, db_expr_t, char *);
d45 1
a45 1
void db_show_callout(db_expr_t, int, db_expr_t, char *);
d48 1
a48 1
void db_machine_init(void);
@


1.3.16.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d36 1
a36 1
void db_stack_trace_cmd(db_expr_t, int, db_expr_t, char *);
d39 1
a39 1
db_addr_t db_disasm(db_addr_t, boolean_t);
d42 1
a42 1
void db_show_all_procs(db_expr_t, int, db_expr_t, char *);
d45 1
a45 1
void db_show_callout(db_expr_t, int, db_expr_t, char *);
d48 1
a48 1
void db_machine_init(void);
@


1.3.16.2
log
@Sync the SMP branch with 3.3
@
text
@d36 1
a36 2
void db_stack_trace_print(db_expr_t, int, db_expr_t, char *,
    int (*)(const char *, ...));
@


1.2
log
@Debbuger changed towards the latest Mach.
Some minor changes for Linux ;) emulation.
Small bug fixes from NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD: db_interface.h,v 1.1 1996/02/20 13:35:37 mickey Exp $	*/
/*	$NetBSD: db_interface.h,v 1.1 1996/02/05 01:57:03 christos Exp &	*/
@


1.1
log
@netbsd-current import & 'boot' cmd addition.
@
text
@d1 2
a2 1
/*	$OpenBSD: db_interface.h,v 1.1 1996/02/05 01:57:03 christos Exp $	*/
@
