head	1.18;
access;
symbols
	OPENBSD_6_2:1.18.0.10
	OPENBSD_6_2_BASE:1.18
	OPENBSD_6_1:1.18.0.8
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.4
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.4
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.13.0.14
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.10
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.8
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.6
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.4
	OPENBSD_5_0:1.13.0.2
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.12.0.20
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.18
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.14
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.16
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.12
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.10
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.8
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.6
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.4
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.2
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.9.0.18
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.16
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.14
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.12
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.10
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.8
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.8.0.2
	UBC_BASE:1.8
	OPENBSD_3_0:1.7.0.20
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.18
	OPENBSD_2_8:1.7.0.16
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.14
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.12
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.10
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.8
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.6
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2016.01.25.14.30.30;	author mpi;	state Exp;
branches;
next	1.17;
commitid	7AkssaZPPd7mA8h3;

1.17
date	2015.03.14.05.48.17;	author tedu;	state Exp;
branches;
next	1.16;
commitid	TDErf47GYmXte0gD;

1.16
date	2015.03.14.03.38.46;	author jsg;	state Exp;
branches;
next	1.15;
commitid	p4LJxGKbi0BU2cG6;

1.15
date	2014.09.14.14.17.24;	author jsg;	state Exp;
branches;
next	1.14;
commitid	uzzBR7hz9ncd4O6G;

1.14
date	2014.07.08.13.02.57;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	E2I6e8QZgMmNFC95;

1.13
date	2011.04.05.19.54.35;	author jasper;	state Exp;
branches;
next	1.12;

1.12
date	2006.07.06.19.05.58;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2006.07.06.18.14.48;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.13.06.23.20;	author jsg;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.14.01.26.51;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.06.19.53.18;	author miod;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	97.07.19.22.31.21;	author niklas;	state Exp;
branches
	1.7.12.1;
next	1.6;

1.6
date	97.03.21.00.41.17;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.04.21.22.19.18;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.03.30.04.51.30;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.03.11.11.16.28;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.02.20.13.35.45;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.28;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.28;	author deraadt;	state Exp;
branches;
next	;

1.7.12.1
date	2001.11.13.21.05.48;	author niklas;	state Exp;
branches;
next	1.7.12.2;

1.7.12.2
date	2002.03.28.11.43.04;	author niklas;	state Exp;
branches;
next	;

1.8.2.1
date	2002.06.11.03.28.48;	author art;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Kill trailing whitespaces.  No object change.
@
text
@/*	$OpenBSD: db_variables.c,v 1.17 2015/03/14 05:48:17 tedu Exp $	*/
/*	$NetBSD: db_variables.c,v 1.8 1996/02/05 01:57:19 christos Exp $	*/

/*
 * Mach Operating System
 * Copyright (c) 1993,1992,1991,1990 Carnegie Mellon University
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie Mellon
 * the rights to redistribute these changes.
 */

#include <sys/param.h>
#include <sys/systm.h>

#include <machine/db_machdep.h>

#include <ddb/db_lex.h>
#include <ddb/db_variables.h>
#include <ddb/db_command.h>
#include <ddb/db_sym.h>
#include <ddb/db_extern.h>
#include <ddb/db_var.h>

struct db_variable db_vars[] = {
	{ "radix",	(long *)&db_radix, db_var_rw_int },
	{ "maxoff",	(long *)&db_maxoff, db_var_rw_int },
	{ "maxwidth",	(long *)&db_max_width, db_var_rw_int },
	{ "tabstops",	(long *)&db_tab_stop_width, db_var_rw_int },
	{ "lines",	(long *)&db_max_line, db_var_rw_int },
	{ "log",	(long *)&db_log, db_var_rw_int }
};
struct db_variable *db_evars = db_vars + nitems(db_vars);

int
db_find_variable(struct db_variable **varp)
{
	int	t;
	struct db_variable *vp;

	t = db_read_token();
	if (t == tIDENT) {
	    for (vp = db_vars; vp < db_evars; vp++) {
		if (!strcmp(db_tok_string, vp->name)) {
		    *varp = vp;
		    return (1);
		}
	    }
	    for (vp = db_regs; vp < db_eregs; vp++) {
		if (!strcmp(db_tok_string, vp->name)) {
		    *varp = vp;
		    return (1);
		}
	    }
	}
	db_error("Unknown variable\n");
	/*NOTREACHED*/
	return 0;
}

int
db_get_variable(db_expr_t *valuep)
{
	struct db_variable *vp;

	if (!db_find_variable(&vp))
	    return (0);

	db_read_variable(vp, valuep);

	return (1);
}

int
db_set_variable(db_expr_t value)
{
	struct db_variable *vp;

	if (!db_find_variable(&vp))
	    return (0);

	db_write_variable(vp, &value);

	return (1);
}


void
db_read_variable(struct db_variable *vp, db_expr_t *valuep)
{
	int	(*func)(struct db_variable *, db_expr_t *, int) = vp->fcn;

	if (func == FCN_NULL)
	    *valuep = *(vp->valuep);
	else
	    (*func)(vp, valuep, DB_VAR_GET);
}

void
db_write_variable(struct db_variable *vp, db_expr_t *valuep)
{
	int	(*func)(struct db_variable *, db_expr_t *, int) = vp->fcn;

	if (func == FCN_NULL)
	    *(vp->valuep) = *valuep;
	else
	    (*func)(vp, valuep, DB_VAR_SET);
}

/*ARGSUSED*/
void
db_set_cmd(db_expr_t addr, int have_addr, db_expr_t count, char *modif)
{
	db_expr_t	value;
	struct db_variable *vp;
	int	t;

	t = db_read_token();
	if (t != tDOLLAR) {
	    db_error("Unknown variable\n");
	    /*NOTREACHED*/
	}
	if (!db_find_variable(&vp)) {
	    db_error("Unknown variable\n");
	    /*NOTREACHED*/
	}

	t = db_read_token();
	if (t != tEQ)
	    db_unread_token(t);

	if (!db_expression(&value)) {
	    db_error("No value\n");
	    /*NOTREACHED*/
	}
	if (db_read_token() != tEOL) {
	    db_error("?\n");
	    /*NOTREACHED*/
	}

	db_write_variable(vp, &value);
}

int
db_var_rw_int(struct db_variable *var, db_expr_t *expr, int mode)
{

	if (mode == DB_VAR_SET)
		*var->valuep = *(int *)expr;
	else
		*expr = *(int *)var->valuep;
	return (0);
}

@


1.17
log
@restore systm.h, needed for strcmp. from Steven McDonald
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.16 2015/03/14 03:38:46 jsg Exp $	*/
d4 1
a4 1
/* 
d8 1
a8 1
 * 
d14 1
a14 1
 * 
d18 1
a18 1
 * 
d20 1
a20 1
 * 
d25 1
a25 1
 * 
@


1.16
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.15 2014/09/14 14:17:24 jsg Exp $	*/
d31 1
@


1.15
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.14 2014/07/08 13:02:57 deraadt Exp $	*/
a30 1
#include <sys/systm.h>
@


1.14
log
@These do not need the extremely poorly named uvm/uvm_extern.h (which
pulls in the universe). occasionally they need sys/systm.h
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.13 2011/04/05 19:54:35 jasper Exp $	*/
a31 1
#include <sys/proc.h>
@


1.13
log
@- use nitems() no binary change on amd64

"reads OK" claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.12 2006/07/06 19:05:58 miod Exp $	*/
d31 1
a32 2

#include <uvm/uvm_extern.h>
@


1.12
log
@Make sure we alter ddb variables as ints, not longs; only matters on 64 bit
platforms.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.11 2006/07/06 18:14:48 miod Exp $	*/
d52 1
a52 1
struct db_variable *db_evars = db_vars + sizeof(db_vars)/sizeof(db_vars[0]);
@


1.11
log
@Make the ddb.log sysctl available as an in-ddb variable, $log, for consistency.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.10 2006/03/13 06:23:20 jsg Exp $	*/
d45 6
a50 6
	{ "radix",	(long *)&db_radix, FCN_NULL },
	{ "maxoff",	(long *)&db_maxoff, FCN_NULL },
	{ "maxwidth",	(long *)&db_max_width, FCN_NULL },
	{ "tabstops",	(long *)&db_tab_stop_width, FCN_NULL },
	{ "lines",	(long *)&db_max_line, FCN_NULL },
	{ "log",	(long *)&db_log, FCN_NULL }
d162 12
@


1.10
log
@ansi/deregister. No binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.9 2002/03/14 01:26:51 millert Exp $	*/
d50 1
@


1.9
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.8 2001/11/06 19:53:18 miod Exp $	*/
d54 1
a54 2
db_find_variable(varp)
	struct db_variable	**varp;
d80 1
a80 2
db_get_variable(valuep)
	db_expr_t	*valuep;
d93 1
a93 2
db_set_variable(value)
	db_expr_t	value;
d107 1
a107 3
db_read_variable(vp, valuep)
	struct db_variable *vp;
	db_expr_t	*valuep;
d118 1
a118 3
db_write_variable(vp, valuep)
	struct db_variable *vp;
	db_expr_t	*valuep;
d130 1
a130 5
db_set_cmd(addr, have_addr, count, modif)
	db_expr_t	addr;
	int		have_addr;
	db_expr_t	count;
	char *		modif;
@


1.8
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.7 1997/07/19 22:31:21 niklas Exp $	*/
d114 1
a114 1
	int	(*func) __P((struct db_variable *, db_expr_t *, int)) = vp->fcn;
d127 1
a127 1
	int	(*func) __P((struct db_variable *, db_expr_t *, int)) = vp->fcn;
@


1.8.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.8 2001/11/06 19:53:18 miod Exp $	*/
d114 1
a114 1
	int	(*func)(struct db_variable *, db_expr_t *, int) = vp->fcn;
d127 1
a127 1
	int	(*func)(struct db_variable *, db_expr_t *, int) = vp->fcn;
@


1.7
log
@Include vm/vm.h everywhere it is needed to get at boolean_t (I would prefer
to have it in sys/types.h but that is problematic).  Some KNF.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.6 1997/03/21 00:41:17 niklas Exp $	*/
d33 1
a33 1
#include <vm/vm.h>
@


1.7.12.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d33 1
a33 1
#include <uvm/uvm_extern.h>
@


1.7.12.2
log
@Merge in -current from about a week ago
@
text
@d114 1
a114 1
	int	(*func)(struct db_variable *, db_expr_t *, int) = vp->fcn;
d127 1
a127 1
	int	(*func)(struct db_variable *, db_expr_t *, int) = vp->fcn;
@


1.6
log
@Make ddb variables long (for 64bit archs).  from netbsd
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.5 1996/04/21 22:19:18 deraadt Exp $	*/
d32 2
@


1.5
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.4 1996/03/30 04:51:30 mickey Exp $	*/
d43 5
a47 5
	{ "radix",	&db_radix, FCN_NULL },
	{ "maxoff",	(int *)&db_maxoff, FCN_NULL },
	{ "maxwidth",	&db_max_width, FCN_NULL },
	{ "tabstops",	&db_tab_stop_width, FCN_NULL },
	{ "lines",	&db_max_line, FCN_NULL },
@


1.4
log
@Added: sysctl access to the ddb variables.
Fixed: "netbsd" strings in sym table handling routines.
now it is usefull to change max_{width,line} according
to your real console geometry, just w/ sysctl program.
@
text
@d1 2
a2 1
/*	$OpenBSD: db_variables.c,v 1.3 1996/03/11 11:16:28 mickey Exp $	*/
@


1.3
log
@Debbuger changed towards the latest Mach.
Some minor changes for Linux ;) emulation.
Small bug fixes from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.2 1996/02/20 13:35:45 mickey Exp $	*/
d39 1
a39 7

extern unsigned int	db_maxoff;

extern int	db_radix;
extern int	db_max_width;
extern int	db_tab_stop_width;
extern int	db_max_line;
@


1.2
log
@netbsd-current import & 'boot' cmd addition.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_variables.c,v 1.8 1996/02/05 01:57:19 christos Exp $	*/
d5 1
a5 1
 * Copyright (c) 1991,1990 Carnegie Mellon University
d14 1
a14 1
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS 
d25 2
a26 2
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: db_variables.c,v 1.7 1994/10/09 08:56:28 mycroft Exp $	*/
d36 3
d80 1
d112 1
d117 1
a117 1
	int	(*func)() = vp->fcn;
d125 1
d130 1
a130 1
	int	(*func)() = vp->fcn;
d138 1
d140 5
a144 1
db_set_cmd()
a146 1
	int	(*func)();
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
