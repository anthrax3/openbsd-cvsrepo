head	1.23;
access;
symbols
	SMP_SYNC_A:1.23
	SMP_SYNC_B:1.23
	UBC_SYNC_A:1.23
	UBC_SYNC_B:1.23
	OPENBSD_3_0:1.20.0.2
	OPENBSD_3_0_BASE:1.20
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_8:1.9.0.4
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	SMP:1.8.0.4
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.23
date	2001.11.06.19.53.43;	author miod;	state dead;
branches;
next	1.22;

1.22
date	2001.11.06.01.35.04;	author art;	state Exp;
branches;
next	1.21;

1.21
date	2001.11.06.00.30.38;	author art;	state Exp;
branches;
next	1.20;

1.20
date	2001.08.12.22.41.15;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	2001.08.12.21.36.48;	author mickey;	state Exp;
branches;
next	1.18;

1.18
date	2001.08.12.21.00.15;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	2001.08.12.20.18.30;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	2001.08.12.05.18.42;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	2001.08.06.14.03.05;	author art;	state Exp;
branches;
next	1.14;

1.14
date	2001.07.05.07.25.54;	author art;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.27.04.52.39;	author art;	state Exp;
branches;
next	1.12;

1.12
date	2001.04.06.23.41.01;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2001.03.23.23.36.39;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.08.14.31.37;	author art;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.13.16.08.28;	author art;	state Exp;
branches;
next	1.8;

1.8
date	99.06.01.08.23.51;	author art;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	98.09.11.21.17.52;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	98.03.01.00.38.01;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	97.11.06.05.59.31;	author csapuntz;	state Exp;
branches;
next	1.4;

1.4
date	97.10.06.20.21.15;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.10.06.15.28.51;	author csapuntz;	state Exp;
branches;
next	1.2;

1.2
date	96.08.02.00.05.58;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.36;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.36;	author deraadt;	state Exp;
branches;
next	;

1.8.4.1
date	2000.03.24.09.09.53;	author niklas;	state Exp;
branches;
next	1.8.4.2;

1.8.4.2
date	2001.05.14.22.47.49;	author niklas;	state Exp;
branches;
next	1.8.4.3;

1.8.4.3
date	2001.07.04.11.01.16;	author niklas;	state Exp;
branches;
next	1.8.4.4;

1.8.4.4
date	2001.10.31.03.32.14;	author nate;	state Exp;
branches;
next	1.8.4.5;

1.8.4.5
date	2001.11.13.23.02.31;	author niklas;	state dead;
branches;
next	;


desc
@@


1.23
log
@Begone.
@
text
@#include <uvm/uvm_extern.h>
@


1.22
log
@Move the last content from vm/ to uvm/
The only thing left in vm/ are just dumb wrappers.
vm/vm.h includes uvm/uvm_extern.h
vm/pmap.h includes uvm/uvm_pmap.h
vm/vm_page.h includes uvm/uvm_page.h
@
text
@@


1.21
log
@Kill vm/vm_param.h, move it to uvm/uvm_param.h
@
text
@a0 61
/*	$OpenBSD: vm.h,v 1.20 2001/08/12 22:41:15 mickey Exp $	*/
/*	$NetBSD: vm.h,v 1.22 2000/03/26 20:54:48 kleink Exp $	*/

/*
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)vm.h	8.5 (Berkeley) 5/11/95
 */

#ifndef VM_H
#define VM_H

typedef int		vm_inherit_t;	/* XXX: inheritance codes */
typedef off_t           voff_t;		/* XXX: offset within a uvm_object */

union vm_map_object;
typedef union vm_map_object vm_map_object_t;

struct vm_map_entry;
typedef struct vm_map_entry *vm_map_entry_t;

struct vm_map;
typedef struct vm_map *vm_map_t;

struct vm_page;
typedef struct vm_page  *vm_page_t;

#include <sys/types.h>
#include <sys/vmmeter.h>
#include <sys/queue.h>
#include <uvm/uvm_param.h>
#include <sys/lock.h>
a1 32
#include <vm/vm_page.h>
#include <vm/pmap.h>
#include <uvm/uvm_map.h>

/*
 * Shareable process virtual address space.
 * May eventually be merged with vm_map.
 * Several fields are temporary (text, data stuff).
 */
struct vmspace {
	struct	vm_map vm_map;	/* VM address map */
	int	vm_refcnt;	/* number of references */
	caddr_t	vm_shm;		/* SYS5 shared memory private data XXX */
/* we copy from vm_startcopy to the end of the structure on fork */
#define vm_startcopy vm_rssize
	segsz_t vm_rssize; 	/* current resident set size in pages */
	segsz_t vm_swrss;	/* resident set size before last swap */
	segsz_t vm_tsize;	/* text size (pages) XXX */
	segsz_t vm_dsize;	/* data size (pages) XXX */
	segsz_t vm_ssize;	/* stack size (pages) */
	caddr_t	vm_taddr;	/* user virtual address of text XXX */
	caddr_t	vm_daddr;	/* user virtual address of data XXX */
	caddr_t vm_maxsaddr;	/* user VA at max stack growth */
};

#ifdef pmap_resident_count
#define vm_resident_count(vm) (pmap_resident_count((vm)->vm_map.pmap))
#else
#define vm_resident_count(vm) ((vm)->vm_rssize)
#endif

#endif /* VM_H */
@


1.20
log
@merge vm_map.h into uvm_map.h, kinda matches netbsd's approach
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.19 2001/08/12 21:36:48 mickey Exp $	*/
d60 1
a60 1
#include <vm/vm_param.h>
@


1.19
log
@vm_pager.h no more
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.18 2001/08/12 21:00:15 mickey Exp $	*/
a62 1
#include <vm/vm_map.h>
d65 1
@


1.18
log
@vm_inherit.h no more
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.17 2001/08/12 20:18:30 mickey Exp $	*/
a64 1
#include <vm/vm_pager.h>
@


1.17
log
@vm_extern.h no more
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.16 2001/08/12 05:18:42 mickey Exp $	*/
a61 1
#include <vm/vm_inherit.h>
@


1.16
log
@vm/vm_prot.h no more
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.16 2001/08/12 04:57:19 mickey Exp $	*/
a67 1
#include <vm/vm_extern.h>
@


1.15
log
@Add a new type voff_t (right now it's typedefed as off_t) used for offsets
into objects.

Gives the possibilty to mmap beyond the size of vaddr_t.

From NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.14 2001/07/05 07:25:54 art Exp $	*/
d57 1
a61 1
#include <vm/vm_prot.h>
d63 1
@


1.14
log
@No need to include vm/vm_object.h.
It only includes to files which are already included by vm/vm.h
@
text
@d1 2
a2 2
/*	$OpenBSD: vm.h,v 1.13 2001/06/27 04:52:39 art Exp $	*/
/*	$NetBSD: vm.h,v 1.13 1994/06/29 06:47:52 cgd Exp $	*/
d42 2
a43 1
typedef int vm_inherit_t;		/* XXX: inheritance codes */
@


1.13
log
@Remove junk from headers, just leave enough for UVM.
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.12 2001/04/06 23:41:01 art Exp $	*/
a65 1
#include <vm/vm_object.h>
@


1.12
log
@Get rid of vm_pmap from struct vmspace.
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.11 2001/03/23 23:36:39 millert Exp $	*/
a54 16

#if !defined(UVM)
struct vm_object;
typedef struct vm_object *vm_object_t;

struct pager_struct;
typedef struct pager_struct *vm_pager_t;

/*
 *	MACH VM locking type mappings to kernel types
 */
typedef struct simplelock	simple_lock_data_t;
typedef struct simplelock	*simple_lock_t;
typedef struct lock		lock_data_t;
typedef struct lock		*lock_t;
#endif
@


1.11
log
@Take vm_pmap out of struct vmspace if we are using UVM since UVM doesn't
use that.  Fixes size mismatch in i386 pmap.new kernel.
This requires that users rebuild libkvm and friends using the new headers
for ps et al to work with a new kernel.
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.10 2000/11/08 14:31:37 art Exp $	*/
a91 3
#ifndef UVM
	struct	pmap vm_pmap;	/* private physical map */
#endif
@


1.10
log
@Include vm_page.h and reorder some.
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.9 2000/03/13 16:08:28 art Exp $	*/
d92 1
d94 1
@


1.9
log
@various cleanups
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.8 1999/06/01 08:23:51 art Exp $	*/
a76 1
#include <vm/pmap.h>
d79 3
@


1.8
log
@remove the "ifdef pmap_resident_count" hack and replace it with a macro.
change some &vm->vm_pmap to vm->vm_map.pmap
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.7 1998/09/11 21:17:52 mickey Exp $	*/
a41 2
/* XXX remove this later when the simple locks are not here! */

d53 4
a59 3
struct vm_page;
typedef struct vm_page  *vm_page_t;

a65 1
#if !defined(UVM)
d105 1
a105 1
#ifdef  pmap_resident_count
@


1.8.4.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 2
d55 3
a60 4
#if !defined(UVM)
struct vm_object;
typedef struct vm_object *vm_object_t;

d67 1
d107 1
a107 1
#ifdef pmap_resident_count
@


1.8.4.2
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.12 2001/04/06 23:41:01 art Exp $	*/
d77 1
a79 3
#include <vm/vm_page.h>
#include <vm/vm_pager.h>
#include <vm/pmap.h>
d90 1
@


1.8.4.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.8.4.2 2001/05/14 22:47:49 niklas Exp $	*/
d55 16
@


1.8.4.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: vm.h,v 1.22 2000/03/26 20:54:48 kleink Exp $	*/
d42 1
a42 2
typedef int		vm_inherit_t;	/* XXX: inheritance codes */
typedef off_t           voff_t;		/* XXX: offset within a uvm_object */
a55 1
#include <sys/types.h>
d60 3
a62 1
#include <uvm/uvm_extern.h>
d64 1
d66 2
a67 1
#include <uvm/uvm_map.h>
@


1.8.4.5
log
@merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.8.4.4 2001/10/31 03:32:14 nate Exp $	*/
@


1.7
log
@include pmap.h earlier, so MD pmap structures may be
kept all together in the pmap.h file w/o spreading
all over MD includes.
verified on most architectures.
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.6 1998/03/01 00:38:01 niklas Exp $	*/
d106 7
@


1.6
log
@Merge of MACHINE_NEW_CONTIG (aka MNN) code from Chuck Cranor,
<chuck@@openbsd.org>. This code is as of yet disabled on all platforms,
actually not yet supported on more than mvme68k, although other
platforms are expected soon, as code is already available.
This code makes handling of multiple physical memory regions
consistent over all platforms, as well as keeping the performance of
maintaining a single continuous memory chunk.  It is also a
requirement for the upcoming UVM replacement VM system.

What I did in this merge: just declared the pmap_map function in a
MD include file per port that needs it.  It's not an exported pmap
interface, says Chuck.  It ended up in differnt include files on
differnet ports, as I tried to follow the current policy on a per-arch
basis.
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.5 1997/11/06 05:59:31 csapuntz Exp $	*/
d79 1
a82 1
#include <vm/pmap.h>
@


1.5
log
@Updates for VFS Lite 2 + soft update.
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.4 1997/10/06 20:21:15 deraadt Exp $	*/
d42 2
d67 1
d72 1
@


1.4
log
@back out vfs lite2 till after 2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.2 1996/08/02 00:05:58 niklas Exp $	*/
d36 1
a36 1
 *	@@(#)vm.h	8.2 (Berkeley) 12/13/93
d62 8
d73 1
a73 1
#include <vm/lock.h>
@


1.3
log
@VFS Lite2 Changes
@
text
@d36 1
a36 1
 *	@@(#)vm.h	8.5 (Berkeley) 5/11/95
a61 8
/*
 *	MACH VM locking type mappings to kernel types
 */
typedef struct simplelock	simple_lock_data_t;
typedef struct simplelock	*simple_lock_t;
typedef struct lock		lock_data_t;
typedef struct lock		*lock_t;

d65 1
a65 1
#include <sys/lock.h>
@


1.2
log
@Fix long-standing swap-leak. Add OpenBSD tags. Optimize thread_wakeup.
@
text
@d1 1
a1 1
/*	$OpenBSD: vm.h,v 1.13 1994/06/29 06:47:52 cgd Exp $	*/
d36 1
a36 1
 *	@@(#)vm.h	8.2 (Berkeley) 12/13/93
d62 8
d73 1
a73 1
#include <vm/lock.h>
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

