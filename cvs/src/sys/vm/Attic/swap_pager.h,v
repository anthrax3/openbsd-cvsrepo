head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	UBC_SYNC_A:1.3
	UBC_SYNC_B:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.22
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2001.06.27.05.04.20;	author art;	state dead;
branches;
next	1.2;

1.2
date	96.08.02.00.05.57;	author niklas;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	95.10.18.08.53.36;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.36;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2001.07.04.11.01.16;	author niklas;	state dead;
branches;
next	;


desc
@@


1.3
log
@Not used, kill.
@
text
@/*	$OpenBSD: swap_pager.h,v 1.2 1996/08/02 00:05:57 niklas Exp $	*/
/*	$NetBSD: swap_pager.h,v 1.6 1994/06/29 06:47:49 cgd Exp $	*/

/*
 * Copyright (c) 1990 University of Utah.
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)swap_pager.h	8.1 (Berkeley) 6/11/93
 */

#ifndef	_SWAP_PAGER_
#define	_SWAP_PAGER_	1

/*
 * In the swap pager, the backing store for an object is organized as an
 * array of some number of "swap blocks".  A swap block consists of a bitmask
 * and some number of contiguous DEV_BSIZE disk blocks.  The minimum size
 * of a swap block is:
 *
 *	max(PAGE_SIZE, dmmin*DEV_BSIZE)			[ 32k currently ]
 *
 * bytes (since the pager interface is page oriented), the maximum size is:
 *
 *	min(#bits(swb_mask)*PAGE_SIZE, dmmax*DEV_BSIZE)	[ 128k currently ]
 *
 * where dmmin and dmmax are left over from the old VM interface.  The bitmask
 * (swb_mask) is used by swap_pager_haspage() to determine if a particular
 * page has actually been written; i.e. the pager copy of the page is valid.
 * All swap blocks in the backing store of an object will be the same size.
 *
 * The reason for variable sized swap blocks is to reduce fragmentation of
 * swap resources.  Whenever possible we allocate smaller swap blocks to
 * smaller objects.  The swap block size is determined from a table of
 * object-size vs. swap-block-size computed at boot time.
 */
typedef	int	sw_bm_t;	/* pager bitmask */

struct	swblock {
	sw_bm_t	 swb_mask;	/* bitmask of valid pages in this block */
	daddr_t	 swb_block;	/* starting disk block for this block */
};
typedef struct swblock	*sw_blk_t;

/*
 * Swap pager private data.
 */
struct swpager {
	vm_size_t    sw_osize;	/* size of object we are backing (bytes) */
	int	     sw_bsize;	/* size of swap blocks (DEV_BSIZE units) */
	int	     sw_nblocks;/* number of blocks in list (sw_blk_t units) */
	sw_blk_t     sw_blocks;	/* pointer to list of swap blocks */
	short	     sw_flags;	/* flags */
	short	     sw_poip;	/* pageouts in progress */
	int	     sw_cnt;	/* count of pages in pager */
};
typedef struct swpager	*sw_pager_t;

#define	SW_WANTED	0x01
#define SW_NAMED	0x02

#endif	/* _SWAP_PAGER_ */
@


1.2
log
@Fix long-standing swap-leak. Add OpenBSD tags. Optimize thread_wakeup.
@
text
@d1 1
a1 1
/*	$OpenBSD: swap_pager.h,v 1.6 1994/06/29 06:47:49 cgd Exp $	*/
@


1.2.16.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: swap_pager.h,v 1.2 1996/08/02 00:05:57 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
d87 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
