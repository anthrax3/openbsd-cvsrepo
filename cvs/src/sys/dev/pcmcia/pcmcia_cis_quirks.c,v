head	1.14;
access;
symbols
	OPENBSD_6_1:1.12.0.10
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.6
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.4
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.11.0.4
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.4
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.22
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.20
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.16
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.18
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.14
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.12
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.5.0.12
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.10
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.8
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.6
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.5.0.4
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.6
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.14
date	2017.09.08.05.36.52;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	uRv5pa9QDlZaYgwD;

1.13
date	2017.08.24.04.06.05;	author jsg;	state Exp;
branches;
next	1.12;
commitid	bIMr0LnmE54nv4IX;

1.12
date	2015.03.14.03.38.49;	author jsg;	state Exp;
branches;
next	1.11;
commitid	p4LJxGKbi0BU2cG6;

1.11
date	2014.08.18.04.23.11;	author dlg;	state Exp;
branches;
next	1.10;
commitid	vIMTGQ2GkhByqnpf;

1.10
date	2014.07.12.18.48.52;	author tedu;	state Exp;
branches;
next	1.9;
commitid	OBNa5kfxQ2UXoiIw;

1.9
date	2011.03.31.13.05.27;	author jasper;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.27.16.42.19;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2004.01.24.23.32.13;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2004.01.24.23.13.55;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.04.09.47;	author angelos;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.20.05.01.11;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	99.10.06.13.35.47;	author fgsch;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	99.08.14.05.47.41;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	99.01.28.04.58.31;	author fgsch;	state Exp;
branches;
next	;

1.3.4.1
date	2001.05.14.22.26.08;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2001.07.04.10.43.29;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2004.02.19.10.56.31;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.14
log
@If you use sys/param.h, you don't need sys/types.h
@
text
@/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.13 2017/08/24 04:06:05 jsg Exp $	*/
/*	$NetBSD: pcmcia_cis_quirks.c,v 1.3 1998/12/29 09:00:28 marc Exp $	*/

/*
 * Copyright (c) 1998 Marc Horowitz.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Marc Horowitz.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/malloc.h>
#include <sys/device.h>

#include <dev/pcmcia/pcmciadevs.h>
#include <dev/pcmcia/pcmciareg.h>
#include <dev/pcmcia/pcmciavar.h>

/* There are cards out there whose CIS flat-out lies.  This file
   contains struct pcmcia_function chains for those devices. */

/* these structures are just static templates which are then copied
   into "live" allocated structures */

struct pcmcia_function pcmcia_3cxem556_func0 = {
	0,			/* function number */
	PCMCIA_FUNCTION_NETWORK,
	0x07,			/* last cfe number */
	0x800,			/* ccr_base */
	0x63,			/* ccr_mask */
};

struct pcmcia_config_entry pcmcia_3cxem556_func0_cfe0 = {
	0x07,			/* cfe number */
	PCMCIA_CFE_IO8 | PCMCIA_CFE_IO16 | PCMCIA_CFE_IRQLEVEL,
	PCMCIA_IFTYPE_IO,
	1,			/* num_iospace */
	4,			/* iomask */
	{ { 0x0010, 0 } },	/* iospace */
	0xffff,			/* irqmask */
	0,			/* num_memspace */
	{ },			/* memspace */
	0,			/* maxtwins */
};

static struct pcmcia_function pcmcia_3cxem556_func1 = {
	1,			/* function number */
	PCMCIA_FUNCTION_SERIAL,
	0x27,			/* last cfe number */
	0x900,			/* ccr_base */
	0x63,			/* ccr_mask */
};

static struct pcmcia_config_entry pcmcia_3cxem556_func1_cfe0 = {
	0x27,			/* cfe number */
	PCMCIA_CFE_IO8 | PCMCIA_CFE_IRQLEVEL,
	PCMCIA_IFTYPE_IO,
	1,			/* num_iospace */
	3,			/* iomask */
	{ { 0x0008, 0 } },	/* iospace */
	0xffff,			/* irqmask */
	0,			/* num_memspace */
	{ },			/* memspace */
	0,			/* maxtwins */
};

struct pcmcia_function pcmcia_megahertz_xjem1144_func0 = {
	0,			/* function number */
	PCMCIA_FUNCTION_NETWORK,
	0x07,			/* last cfe number */
	0x200,			/* ccr_base */
	0x63,			/* ccr_mask */
};

struct pcmcia_config_entry pcmcia_megahertz_xjem1144_func0_cfe0 = {
	0x07,			/* cfe number */
	PCMCIA_CFE_IO8 | PCMCIA_CFE_IO16 | PCMCIA_CFE_IRQLEVEL,
	PCMCIA_IFTYPE_IO,
	1,			/* num_iospace */
	4,			/* iomask */
	{ { 0x0010, 0 } },	/* iospace */
	0xffff,			/* irqmask */
	0,			/* num_memspace */
	{ },			/* memspace */
	0,			/* maxtwins */
};

static struct pcmcia_function pcmcia_megahertz_xjem1144_func1 = {
	1,			/* function number */
	PCMCIA_FUNCTION_SERIAL,
	0x35,			/* last cfe number */
	0x300,			/* ccr_base */
	0x3,			/* ccr_mask */
};

static struct pcmcia_config_entry pcmcia_megahertz_xjem1144_func1_cfe0 = {
	0x35,			/* cfe number */
	PCMCIA_CFE_IO8 | PCMCIA_CFE_IRQLEVEL, PCMCIA_IFTYPE_IO,
	1,			/* num_iospace */
	0,			/* iomask */
	{ { 0x0008, 0x2f8 } },	/* iospace */
	0xffff,			/* irqmask */
	0,			/* num_memspace */
	{ },			/* memspace */
	0,			/* maxtwins */
};

static struct pcmcia_function pcmcia_sierra_a555_func1 = {
	1,			/* function number */
	PCMCIA_FUNCTION_SERIAL,
	0x24,			/* last cfe number */
	0x700,			/* ccr_base */
	0x73,			/* ccr_mask */
};

static struct pcmcia_config_entry pcmcia_sierra_a555_func1_cfe0 = {
	0x20,			/* cfe number */
	PCMCIA_CFE_IO8 | PCMCIA_CFE_IRQLEVEL, PCMCIA_IFTYPE_IO,
	1,			/* num_iospace */
	0,			/* iomask */
	{ { 0x0008, 0x3f8 } },	/* iospace */
	0x3fbc,			/* irqmask */
	0,			/* num_memspace */
	{ },			/* memspace */
	0,			/* maxtwins */
};

static struct pcmcia_function pcmcia_sveclancard_func0 = {
	0,			/* function number */
	PCMCIA_FUNCTION_NETWORK,
	0x1,			/* last cfe number */
	0x100,			/* ccr_base */
	0x1,			/* ccr_mask */
};

static struct pcmcia_config_entry pcmcia_sveclancard_func0_cfe0 = {
	0x1,			/* cfe number */
	PCMCIA_CFE_MWAIT_REQUIRED | PCMCIA_CFE_RDYBSY_ACTIVE |
	PCMCIA_CFE_WP_ACTIVE | PCMCIA_CFE_BVD_ACTIVE | PCMCIA_CFE_IO16,
	PCMCIA_IFTYPE_IO,
	1,			/* num_iospace */
	5,			/* iomask */
	{ { 0x20, 0x300 } },	/* iospace */
	0xdeb8,			/* irqmask */
	0,			/* num_memspace */
	{ },			/* memspace */
	0,			/* maxtwins */
};

static struct pcmcia_cis_quirk pcmcia_cis_quirks[] = {
	{ PCMCIA_VENDOR_3COM, PCMCIA_PRODUCT_3COM_3CXEM556, PCMCIA_CIS_INVALID,
	  &pcmcia_3cxem556_func0, &pcmcia_3cxem556_func0_cfe0 },
	{ PCMCIA_VENDOR_3COM, PCMCIA_PRODUCT_3COM_3CXEM556, PCMCIA_CIS_INVALID,
	  &pcmcia_3cxem556_func1, &pcmcia_3cxem556_func1_cfe0 },
	{ PCMCIA_VENDOR_3COM, PCMCIA_PRODUCT_3COM_3CXEM556B,
	  PCMCIA_CIS_INVALID,
	  &pcmcia_3cxem556_func0, &pcmcia_3cxem556_func0_cfe0 },
	{ PCMCIA_VENDOR_3COM, PCMCIA_PRODUCT_3COM_3CXEM556B,
	  PCMCIA_CIS_INVALID,
	  &pcmcia_3cxem556_func1, &pcmcia_3cxem556_func1_cfe0 },
	{ PCMCIA_VENDOR_MEGAHERTZ2, PCMCIA_PRODUCT_MEGAHERTZ2_XJEM1144,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_megahertz_xjem1144_func0,
	  &pcmcia_megahertz_xjem1144_func0_cfe0 },
	{ PCMCIA_VENDOR_MEGAHERTZ2, PCMCIA_PRODUCT_MEGAHERTZ2_XJEM1144,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_megahertz_xjem1144_func1,
	  &pcmcia_megahertz_xjem1144_func1_cfe0 },
	{ PCMCIA_VENDOR_SIERRA, PCMCIA_PRODUCT_SIERRA_A550,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_sierra_a555_func1, &pcmcia_sierra_a555_func1_cfe0 },
	{ PCMCIA_VENDOR_SIERRA, PCMCIA_PRODUCT_SIERRA_A555,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_sierra_a555_func1, &pcmcia_sierra_a555_func1_cfe0 },
	{ PCMCIA_VENDOR_SIERRA, PCMCIA_PRODUCT_SIERRA_A710,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_sierra_a555_func1, &pcmcia_sierra_a555_func1_cfe0 },
	{ PCMCIA_VENDOR_SIERRA, PCMCIA_PRODUCT_SIERRA_AC710,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_sierra_a555_func1, &pcmcia_sierra_a555_func1_cfe0 },
	{ PCMCIA_VENDOR_INVALID, PCMCIA_PRODUCT_INVALID,
	  PCMCIA_CIS_SVEC_LANCARD,
	  &pcmcia_sveclancard_func0, &pcmcia_sveclancard_func0_cfe0 },
};

void pcmcia_check_cis_quirks(sc)
	struct pcmcia_softc *sc;
{
	int wiped = 0;
	int i, j;
	struct pcmcia_function *pf, *pf_next, *pf_last;
	struct pcmcia_config_entry *cfe, *cfe_next;

	pf = NULL;
	pf_last = NULL;

	
	for (i = 0; i < nitems(pcmcia_cis_quirks);
	    i++) {
		if ((sc->card.manufacturer == pcmcia_cis_quirks[i].manufacturer) &&
			(sc->card.product == pcmcia_cis_quirks[i].product) &&
			(((sc->card.manufacturer != PCMCIA_VENDOR_INVALID) &&
			  (sc->card.product != PCMCIA_PRODUCT_INVALID)) ||
			 ((sc->card.manufacturer == PCMCIA_VENDOR_INVALID) &&
			  (sc->card.product == PCMCIA_PRODUCT_INVALID) &&
			  sc->card.cis1_info[0] &&
			  (strcmp(sc->card.cis1_info[0],
					  pcmcia_cis_quirks[i].cis1_info[0]) == 0) &&
			  sc->card.cis1_info[1] &&
			  (strcmp(sc->card.cis1_info[1],
					  pcmcia_cis_quirks[i].cis1_info[1]) == 0)))) {
			if (!wiped) {
				if (pcmcia_verbose) {
					printf("%s: using CIS quirks for ", sc->dev.dv_xname);
					for (j = 0; j < 4; j++) {
						if (sc->card.cis1_info[j] == NULL)
							break;
						if (j)
							printf(", ");
						printf("%s", sc->card.cis1_info[j]);
					}
					printf("\n");
				}

				for (pf = SIMPLEQ_FIRST(&sc->card.pf_head); pf != NULL;
				     pf = pf_next) {
					for (cfe = SIMPLEQ_FIRST(&pf->cfe_head); cfe != NULL;
					     cfe = cfe_next) {
						cfe_next = SIMPLEQ_NEXT(cfe, cfe_list);
						free(cfe, M_DEVBUF, 0);
					}
					pf_next = SIMPLEQ_NEXT(pf, pf_list);
					free(pf, M_DEVBUF, 0);
				}

				SIMPLEQ_INIT(&sc->card.pf_head);
				wiped = 1;
			}

			if (pf_last == pcmcia_cis_quirks[i].pf) {
				cfe = malloc(sizeof(*cfe), M_DEVBUF, M_NOWAIT);
				if (cfe == NULL)
					return;
				*cfe = *pcmcia_cis_quirks[i].cfe;

				SIMPLEQ_INSERT_TAIL(&pf->cfe_head, cfe, cfe_list);
			} else {
				pf = malloc(sizeof(*pf), M_DEVBUF, M_NOWAIT);
				if (pf == NULL)
					return;
				*pf = *pcmcia_cis_quirks[i].pf;
				SIMPLEQ_INIT(&pf->cfe_head);

				cfe = malloc(sizeof(*cfe), M_DEVBUF, M_NOWAIT);
				if (cfe == NULL) {
					free(pf, M_DEVBUF, sizeof(*pf));
					return;
				}
				*cfe = *pcmcia_cis_quirks[i].cfe;

				SIMPLEQ_INSERT_TAIL(&pf->cfe_head, cfe, cfe_list);
				SIMPLEQ_INSERT_TAIL(&sc->card.pf_head, pf, pf_list);

				pf_last = pcmcia_cis_quirks[i].pf;
			}
		}
	}
}
@


1.13
log
@Fix a memory leak in an error path.  Coverity CID 1453101.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.12 2015/03/14 03:38:49 jsg Exp $	*/
a32 1
#include <sys/types.h>
@


1.12
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.11 2014/08/18 04:23:11 dlg Exp $	*/
d279 2
a280 1
				if (cfe == NULL)
d282 1
@


1.11
log
@its a bit silly to include mbuf.h to get to malloc.h. just include
malloc.h instead.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.10 2014/07/12 18:48:52 tedu Exp $	*/
a40 1
#include <dev/pcmcia/pcmciachip.h>
@


1.10
log
@add a size argument to free. will be used soon, but for now default to 0.
after discussions with beck deraadt kettenis.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.9 2011/03/31 13:05:27 jasper Exp $	*/
d36 1
a37 1
#include <sys/mbuf.h>
@


1.9
log
@- use nitems(); no binary change.

ok fgsch@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.8 2005/10/27 16:42:19 deraadt Exp $	*/
d255 1
a255 1
						free(cfe, M_DEVBUF);
d258 1
a258 1
					free(pf, M_DEVBUF);
@


1.8
log
@use a quirk to attach the new sierra wireless; tony@@kozoru.com
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.7 2004/01/24 23:32:13 deraadt Exp $	*/
d223 1
a223 1
	for (i = 0; i < sizeof(pcmcia_cis_quirks)/sizeof(pcmcia_cis_quirks[0]);
@


1.7
log
@Also add support for Sierra A550 and A710/A750 which are apparently map
the com port at the same place
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.6 2004/01/24 23:13:55 deraadt Exp $	*/
d201 3
@


1.6
log
@Sierra A555 1x card support
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.5 2001/05/24 04:09:47 angelos Exp $	*/
d194 3
d198 3
@


1.5
log
@Check malloc() returns, from tedu@@heorot.stanford.edu, ok aaron@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.4 2000/06/20 05:01:11 niklas Exp $	*/
d133 20
d194 3
@


1.4
log
@Almost make a Megahertz card working, still rx probs though
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.3 1999/10/06 13:35:47 fgsch Exp $	*/
d235 2
d242 2
d248 2
@


1.3
log
@Replace unnecessary static int with a define.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.2 1999/08/14 05:47:41 fgsch Exp $	*/
d92 41
d156 1
a156 1
	{ PCMCIA_VENDOR_3COM, PCMCIA_PRODUCT_3COM_3CXEM556, PCMCIA_CIS_INVALID, 
d160 2
a161 1
	{ PCMCIA_VENDOR_3COM, PCMCIA_PRODUCT_3COM_3CXEM556B, PCMCIA_CIS_INVALID,
d163 2
a164 1
	{ PCMCIA_VENDOR_3COM, PCMCIA_PRODUCT_3COM_3CXEM556B, PCMCIA_CIS_INVALID,
d166 10
a175 1
	{ PCMCIA_VENDOR_INVALID, PCMCIA_PRODUCT_INVALID, PCMCIA_CIS_SVEC_LANCARD,
@


1.3.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.4 2000/06/20 05:01:11 niklas Exp $	*/
a91 41
struct pcmcia_function pcmcia_megahertz_xjem1144_func0 = {
	0,			/* function number */
	PCMCIA_FUNCTION_NETWORK,
	0x07,			/* last cfe number */
	0x200,			/* ccr_base */
	0x63,			/* ccr_mask */
};

struct pcmcia_config_entry pcmcia_megahertz_xjem1144_func0_cfe0 = {
	0x07,			/* cfe number */
	PCMCIA_CFE_IO8 | PCMCIA_CFE_IO16 | PCMCIA_CFE_IRQLEVEL,
	PCMCIA_IFTYPE_IO,
	1,			/* num_iospace */
	4,			/* iomask */
	{ { 0x0010, 0 } },	/* iospace */
	0xffff,			/* irqmask */
	0,			/* num_memspace */
	{ },			/* memspace */
	0,			/* maxtwins */
};

static struct pcmcia_function pcmcia_megahertz_xjem1144_func1 = {
	1,			/* function number */
	PCMCIA_FUNCTION_SERIAL,
	0x35,			/* last cfe number */
	0x300,			/* ccr_base */
	0x3,			/* ccr_mask */
};

static struct pcmcia_config_entry pcmcia_megahertz_xjem1144_func1_cfe0 = {
	0x35,			/* cfe number */
	PCMCIA_CFE_IO8 | PCMCIA_CFE_IRQLEVEL, PCMCIA_IFTYPE_IO,
	1,			/* num_iospace */
	0,			/* iomask */
	{ { 0x0008, 0x2f8 } },	/* iospace */
	0xffff,			/* irqmask */
	0,			/* num_memspace */
	{ },			/* memspace */
	0,			/* maxtwins */
};

d115 1
a115 1
	{ PCMCIA_VENDOR_3COM, PCMCIA_PRODUCT_3COM_3CXEM556, PCMCIA_CIS_INVALID,
d119 1
a119 2
	{ PCMCIA_VENDOR_3COM, PCMCIA_PRODUCT_3COM_3CXEM556B,
	  PCMCIA_CIS_INVALID,
d121 1
a121 2
	{ PCMCIA_VENDOR_3COM, PCMCIA_PRODUCT_3COM_3CXEM556B,
	  PCMCIA_CIS_INVALID,
d123 1
a123 10
	{ PCMCIA_VENDOR_MEGAHERTZ2, PCMCIA_PRODUCT_MEGAHERTZ2_XJEM1144,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_megahertz_xjem1144_func0,
	  &pcmcia_megahertz_xjem1144_func0_cfe0 },
	{ PCMCIA_VENDOR_MEGAHERTZ2, PCMCIA_PRODUCT_MEGAHERTZ2_XJEM1144,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_megahertz_xjem1144_func1,
	  &pcmcia_megahertz_xjem1144_func1_cfe0 },
	{ PCMCIA_VENDOR_INVALID, PCMCIA_PRODUCT_INVALID,
	  PCMCIA_CIS_SVEC_LANCARD,
@


1.3.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.3.4.1 2001/05/14 22:26:08 niklas Exp $	*/
a234 2
				if (cfe == NULL)
					return;
a239 2
				if (pf == NULL)
					return;
a243 2
				if (cfe == NULL)
					return;
@


1.3.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a132 20
static struct pcmcia_function pcmcia_sierra_a555_func1 = {
	1,			/* function number */
	PCMCIA_FUNCTION_SERIAL,
	0x24,			/* last cfe number */
	0x700,			/* ccr_base */
	0x73,			/* ccr_mask */
};

static struct pcmcia_config_entry pcmcia_sierra_a555_func1_cfe0 = {
	0x20,			/* cfe number */
	PCMCIA_CFE_IO8 | PCMCIA_CFE_IRQLEVEL, PCMCIA_IFTYPE_IO,
	1,			/* num_iospace */
	0,			/* iomask */
	{ { 0x0008, 0x3f8 } },	/* iospace */
	0x3fbc,			/* irqmask */
	0,			/* num_memspace */
	{ },			/* memspace */
	0,			/* maxtwins */
};

a173 9
	{ PCMCIA_VENDOR_SIERRA, PCMCIA_PRODUCT_SIERRA_A550,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_sierra_a555_func1, &pcmcia_sierra_a555_func1_cfe0 },
	{ PCMCIA_VENDOR_SIERRA, PCMCIA_PRODUCT_SIERRA_A555,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_sierra_a555_func1, &pcmcia_sierra_a555_func1_cfe0 },
	{ PCMCIA_VENDOR_SIERRA, PCMCIA_PRODUCT_SIERRA_A710,
	  PCMCIA_CIS_INVALID, 
	  &pcmcia_sierra_a555_func1, &pcmcia_sierra_a555_func1_cfe0 },
@


1.2
log
@Support for 3CXEM556B-INT.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmcia_cis_quirks.c,v 1.1 1999/01/28 04:58:31 fgsch Exp $	*/
a125 3
	
static int n_pcmcia_cis_quirks =
	sizeof(pcmcia_cis_quirks)/sizeof(pcmcia_cis_quirks[0]);
d138 3
a140 1
	for (i=0; i<n_pcmcia_cis_quirks; i++) {
@


1.1
log
@Add support for:
	- 3COM 3CXEM556 (Ethernet/Modem)
	- SVEC Combo and Lancard
	- Corega PCC-T
Add pcmcia_check_cis_quirks to fix some cards whose CIS flat-out lies.
Add more products to pcmciadevs.
Correctly read 1 controller if CL-PD6729.
Remove some unused vars.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d118 4
@

