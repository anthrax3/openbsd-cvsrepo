head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.46
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.48
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.44
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.34
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.42
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.40
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.38
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.36
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.32
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.30
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.28
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.26
	OPENBSD_5_0:1.8.0.24
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.22
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.20
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.16
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.18
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.14
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.12
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.6.0.12
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.10
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.4.0.4
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	SMP:1.2.0.4
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2005.11.23.11.39.37;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2005.01.27.17.03.23;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.03.16.07;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.27.01;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.17.21.52.16;	author deraadt;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2000.04.08.05.50.51;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.08.08.01.00.14;	author niklas;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	98.09.11.10.47.15;	author fgsch;	state Exp;
branches;
next	;

1.2.4.1
date	2001.05.14.22.26.08;	author niklas;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2001.10.31.03.22.48;	author nate;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2002.03.28.15.34.52;	author niklas;	state Exp;
branches;
next	;

1.4.4.1
date	2002.06.11.03.42.28;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@use proper bus_size_t for register offsets and not bus_addr_t; uwe@@ miod@@ testing
@
text
@/*	$OpenBSD: pcmciachip.h,v 1.7 2005/01/27 17:03:23 millert Exp $ */
/*	$NetBSD: pcmciachip.h,v 1.5 2000/01/13 08:58:51 joda Exp $	*/

/*
 * Copyright (c) 1997 Marc Horowitz.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Marc Horowitz.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _PCMCIA_PCMCIACHIP_H_
#define	_PCMCIA_PCMCIACHIP_H_

#include <machine/bus.h>

struct pcmcia_function;
struct pcmcia_mem_handle;
struct pcmcia_io_handle;

/* interfaces for pcmcia to call the chipset */

typedef struct pcmcia_chip_functions *pcmcia_chipset_tag_t;
typedef void *pcmcia_chipset_handle_t;
typedef int pcmcia_mem_handle_t;

#define	PCMCIA_MEM_ATTR		1
#define	PCMCIA_MEM_COMMON	2

#define	PCMCIA_WIDTH_MEM8	8
#define	PCMCIA_WIDTH_MEM16	16

#define	PCMCIA_WIDTH_MEM_MASK	24

#define	PCMCIA_WIDTH_AUTO	0
#define	PCMCIA_WIDTH_IO8	1
#define	PCMCIA_WIDTH_IO16	2

struct pcmcia_chip_functions {
	/* memory space allocation */
	int	(*mem_alloc)(pcmcia_chipset_handle_t, bus_size_t,
		    struct pcmcia_mem_handle *);
	void	(*mem_free)(pcmcia_chipset_handle_t,
		    struct pcmcia_mem_handle *);

	/* memory space window mapping */
	int	(*mem_map)(pcmcia_chipset_handle_t, int, bus_addr_t,
		    bus_size_t, struct pcmcia_mem_handle *,
		    bus_size_t *, int *);
	void	(*mem_unmap)(pcmcia_chipset_handle_t, int);

	/* I/O space allocation */
	int	(*io_alloc)(pcmcia_chipset_handle_t, bus_addr_t,
		    bus_size_t, bus_size_t, struct pcmcia_io_handle *);
	void	(*io_free)(pcmcia_chipset_handle_t,
		    struct pcmcia_io_handle *);

	/* I/O space window mapping */
	int	(*io_map)(pcmcia_chipset_handle_t, int, bus_addr_t,
		    bus_size_t, struct pcmcia_io_handle *, int *);
	void	(*io_unmap)(pcmcia_chipset_handle_t, int);

	/* interrupt glue */
	void	*(*intr_establish)(pcmcia_chipset_handle_t,
		    struct pcmcia_function *, int, int (*)(void *), void *, char *);
	void	(*intr_disestablish)(pcmcia_chipset_handle_t, void *);
	const char *(*intr_string)(pcmcia_chipset_handle_t, void *);

	/* card enable/disable */
	void	(*socket_enable)(pcmcia_chipset_handle_t);
	void	(*socket_disable)(pcmcia_chipset_handle_t);

	/* card detection */
	int (*card_detect)(pcmcia_chipset_handle_t);  
};

/* Memory space functions. */
#define pcmcia_chip_mem_alloc(tag, handle, size, pcmhp)			\
	((*(tag)->mem_alloc)((handle), (size), (pcmhp)))

#define pcmcia_chip_mem_free(tag, handle, pcmhp)			\
	((*(tag)->mem_free)((handle), (pcmhp)))

#define pcmcia_chip_mem_map(tag, handle, kind, card_addr, size, pcmhp,	\
	    offsetp, windowp)						\
	((*(tag)->mem_map)((handle), (kind), (card_addr), (size), (pcmhp), \
	    (offsetp), (windowp)))

#define pcmcia_chip_mem_unmap(tag, handle, window)			\
	((*(tag)->mem_unmap)((handle), (window)))

/* I/O space functions. */
#define pcmcia_chip_io_alloc(tag, handle, start, size, align, pcihp)	\
	((*(tag)->io_alloc)((handle), (start), (size), (align), (pcihp)))

#define pcmcia_chip_io_free(tag, handle, pcihp)				\
	((*(tag)->io_free)((handle), (pcihp)))

#define pcmcia_chip_io_map(tag, handle, width, card_addr, size, pcihp,	\
	    windowp) \
	((*(tag)->io_map)((handle), (width), (card_addr), (size), (pcihp), \
	    (windowp)))

#define pcmcia_chip_io_unmap(tag, handle, window)			\
	((*(tag)->io_unmap)((handle), (window)))

/* Interrupt functions. */
#define pcmcia_chip_intr_establish(tag, handle, pf, ipl, fct, arg, xname)	\
	((*(tag)->intr_establish)((handle), (pf), (ipl), (fct), (arg), (xname)))

#define pcmcia_chip_intr_disestablish(tag, handle, ih)			\
	((*(tag)->intr_disestablish)((handle), (ih)))

#define pcmcia_chip_intr_string(tag, handle, ih)			\
	((*(tag)->intr_string)((handle), (ih)))

/* Socket functions. */
#define	pcmcia_chip_socket_enable(tag, handle)				\
	((*(tag)->socket_enable)((handle)))
#define	pcmcia_chip_socket_disable(tag, handle)				\
	((*(tag)->socket_disable)((handle)))

struct pcmciabus_attach_args {
	char *paa_busname;	/* Bus name */
	pcmcia_chipset_tag_t pct;
	pcmcia_chipset_handle_t pch;
	bus_addr_t iobase;		/* start i/o space allocation here */
	bus_size_t iosize;		/* size of the i/o space range */
};

/* interfaces for the chipset to call pcmcia */

int	pcmcia_card_attach(struct device *);
void	pcmcia_card_detach(struct device *, int);
void	pcmcia_card_deactivate(struct device *);
int	pcmcia_card_gettype(struct device *);

#endif /* _PCMCIA_PCMCIACHIP_H_ */
@


1.7
log
@Add pcmcia_intr_string() to format the intr string for pcmcia attach
routines.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmciachip.h,v 1.6 2002/03/14 03:16:07 millert Exp $ */
d70 1
a70 1
		    bus_addr_t *, int *);
@


1.6
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmciachip.h,v 1.5 2002/03/14 01:27:01 millert Exp $ */
d88 1
d134 3
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmciachip.h,v 1.4 2001/08/17 21:52:16 deraadt Exp $ */
d85 2
a86 2
	void	*(*intr_establish) __P((pcmcia_chipset_handle_t,
		    struct pcmcia_function *, int, int (*)(void *), void *, char *));
@


1.4
log
@quieten pcmcia/cardbus interrupt handling at unsuspend time
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmciachip.h,v 1.3 2000/04/08 05:50:51 aaron Exp $ */
d62 4
a65 4
	int	(*mem_alloc) __P((pcmcia_chipset_handle_t, bus_size_t,
		    struct pcmcia_mem_handle *));
	void	(*mem_free) __P((pcmcia_chipset_handle_t,
		    struct pcmcia_mem_handle *));
d68 1
a68 1
	int	(*mem_map) __P((pcmcia_chipset_handle_t, int, bus_addr_t,
d70 2
a71 2
		    bus_addr_t *, int *));
	void	(*mem_unmap) __P((pcmcia_chipset_handle_t, int));
d74 4
a77 4
	int	(*io_alloc) __P((pcmcia_chipset_handle_t, bus_addr_t,
		    bus_size_t, bus_size_t, struct pcmcia_io_handle *));
	void	(*io_free) __P((pcmcia_chipset_handle_t,
		    struct pcmcia_io_handle *));
d80 3
a82 3
	int	(*io_map) __P((pcmcia_chipset_handle_t, int, bus_addr_t,
		    bus_size_t, struct pcmcia_io_handle *, int *));
	void	(*io_unmap) __P((pcmcia_chipset_handle_t, int));
d87 1
a87 1
	void	(*intr_disestablish) __P((pcmcia_chipset_handle_t, void *));
d90 2
a91 2
	void	(*socket_enable) __P((pcmcia_chipset_handle_t));
	void	(*socket_disable) __P((pcmcia_chipset_handle_t));
d94 1
a94 1
	int (*card_detect) __P((pcmcia_chipset_handle_t));  
d150 4
a153 4
int	pcmcia_card_attach __P((struct device *));
void	pcmcia_card_detach __P((struct device *, int));
void	pcmcia_card_deactivate __P((struct device *));
int	pcmcia_card_gettype __P((struct device *));
@


1.4.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmciachip.h,v 1.4 2001/08/17 21:52:16 deraadt Exp $ */
d62 4
a65 4
	int	(*mem_alloc)(pcmcia_chipset_handle_t, bus_size_t,
		    struct pcmcia_mem_handle *);
	void	(*mem_free)(pcmcia_chipset_handle_t,
		    struct pcmcia_mem_handle *);
d68 1
a68 1
	int	(*mem_map)(pcmcia_chipset_handle_t, int, bus_addr_t,
d70 2
a71 2
		    bus_addr_t *, int *);
	void	(*mem_unmap)(pcmcia_chipset_handle_t, int);
d74 4
a77 4
	int	(*io_alloc)(pcmcia_chipset_handle_t, bus_addr_t,
		    bus_size_t, bus_size_t, struct pcmcia_io_handle *);
	void	(*io_free)(pcmcia_chipset_handle_t,
		    struct pcmcia_io_handle *);
d80 3
a82 3
	int	(*io_map)(pcmcia_chipset_handle_t, int, bus_addr_t,
		    bus_size_t, struct pcmcia_io_handle *, int *);
	void	(*io_unmap)(pcmcia_chipset_handle_t, int);
d85 3
a87 3
	void	*(*intr_establish)(pcmcia_chipset_handle_t,
		    struct pcmcia_function *, int, int (*)(void *), void *, char *);
	void	(*intr_disestablish)(pcmcia_chipset_handle_t, void *);
d90 2
a91 2
	void	(*socket_enable)(pcmcia_chipset_handle_t);
	void	(*socket_disable)(pcmcia_chipset_handle_t);
d94 1
a94 1
	int (*card_detect)(pcmcia_chipset_handle_t);  
d150 4
a153 4
int	pcmcia_card_attach(struct device *);
void	pcmcia_card_detach(struct device *, int);
void	pcmcia_card_deactivate(struct device *);
int	pcmcia_card_gettype(struct device *);
@


1.3
log
@Initial check-in for support of 32-bit CardBus PC Cards; from NetBSD. On many
machines, this code needs the new PCIBIOS* options enabled in the kernel config
file to work, but your mileage may vary. Included is a working 3c575 driver for
3Com 10/100 CardBus PC Card NICs (tested only with the 'C' revision). The 3c575
is the pccard version of the PCI EtherLink XL cards, and thus the xl driver has
been split into /sys/dev/ic.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d86 1
a86 1
		    struct pcmcia_function *, int, int (*)(void *), void *));
d128 2
a129 2
#define pcmcia_chip_intr_establish(tag, handle, pf, ipl, fct, arg)	\
	((*(tag)->intr_establish)((handle), (pf), (ipl), (fct), (arg)))
@


1.2
log
@Support detaching.  Support CIS-less cards.  Style police.
@
text
@d1 2
a2 2
/*	$OpenBSD: pcmciachip.h,v 1.1 1998/09/11 10:47:15 fgsch Exp $	*/
/*	$NetBSD: pcmciachip.h,v 1.2 1997/10/16 23:27:36 thorpej Exp $	*/
d51 5
d92 3
d141 1
@


1.2.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
/*	$OpenBSD: pcmciachip.h,v 1.3 2000/04/08 05:50:51 aaron Exp $ */
/*	$NetBSD: pcmciachip.h,v 1.5 2000/01/13 08:58:51 joda Exp $	*/
a50 5
#define	PCMCIA_WIDTH_MEM8	8
#define	PCMCIA_WIDTH_MEM16	16

#define	PCMCIA_WIDTH_MEM_MASK	24

a86 3

	/* card detection */
	int (*card_detect) __P((pcmcia_chipset_handle_t));  
a132 1
	char *paa_busname;	/* Bus name */
@


1.2.4.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: pcmciachip.h,v 1.2.4.1 2001/05/14 22:26:08 niklas Exp $ */
d86 1
a86 1
		    struct pcmcia_function *, int, int (*)(void *), void *, char *));
d128 2
a129 2
#define pcmcia_chip_intr_establish(tag, handle, pf, ipl, fct, arg, xname)	\
	((*(tag)->intr_establish)((handle), (pf), (ipl), (fct), (arg), (xname)))
@


1.2.4.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d62 4
a65 4
	int	(*mem_alloc)(pcmcia_chipset_handle_t, bus_size_t,
		    struct pcmcia_mem_handle *);
	void	(*mem_free)(pcmcia_chipset_handle_t,
		    struct pcmcia_mem_handle *);
d68 1
a68 1
	int	(*mem_map)(pcmcia_chipset_handle_t, int, bus_addr_t,
d70 2
a71 2
		    bus_addr_t *, int *);
	void	(*mem_unmap)(pcmcia_chipset_handle_t, int);
d74 4
a77 4
	int	(*io_alloc)(pcmcia_chipset_handle_t, bus_addr_t,
		    bus_size_t, bus_size_t, struct pcmcia_io_handle *);
	void	(*io_free)(pcmcia_chipset_handle_t,
		    struct pcmcia_io_handle *);
d80 3
a82 3
	int	(*io_map)(pcmcia_chipset_handle_t, int, bus_addr_t,
		    bus_size_t, struct pcmcia_io_handle *, int *);
	void	(*io_unmap)(pcmcia_chipset_handle_t, int);
d85 3
a87 3
	void	*(*intr_establish)(pcmcia_chipset_handle_t,
		    struct pcmcia_function *, int, int (*)(void *), void *, char *);
	void	(*intr_disestablish)(pcmcia_chipset_handle_t, void *);
d90 2
a91 2
	void	(*socket_enable)(pcmcia_chipset_handle_t);
	void	(*socket_disable)(pcmcia_chipset_handle_t);
d94 1
a94 1
	int (*card_detect)(pcmcia_chipset_handle_t);  
d150 4
a153 4
int	pcmcia_card_attach(struct device *);
void	pcmcia_card_detach(struct device *, int);
void	pcmcia_card_deactivate(struct device *);
int	pcmcia_card_gettype(struct device *);
@


1.1
log
@PCMCIA code ported from NetBSD.
Support for aic, ep, pccom and sm.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d142 2
a143 1
void	pcmcia_card_detach __P((struct device *));
@

