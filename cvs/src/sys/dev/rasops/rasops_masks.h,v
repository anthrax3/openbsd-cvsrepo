head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.10
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.12
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.28
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.26
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.22
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.20
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.18
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.16
	OPENBSD_5_0:1.4.0.14
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.12
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.10
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.8
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.1.0.26
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.24
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.22
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.20
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.18
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.16
	OPENBSD_3_4_BASE:1.1
	UBC_SYNC_A:1.1
	OPENBSD_3_3:1.1.0.14
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.12
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.10
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.1
	UBC:1.1.0.8
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.2;
locks; strict;
comment	@ * @;


1.5
date	2014.12.19.22.44.59;	author guenther;	state Exp;
branches;
next	1.4;
commitid	LS2TNeCue5R9L67C;

1.4
date	2008.06.26.05.42.18;	author ray;	state Exp;
branches;
next	1.3;

1.3
date	2006.08.04.06.28.10;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.03.18.42.06;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.18.04.32.45;	author nate;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.05.14.22.26.16;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Use <sys/endian.h> instead of <machine/endian.h>

ok dlg@@ mpi@@ bcook@@ millert@@ miod@@
@
text
@/*	$OpenBSD: rasops_masks.h,v 1.4 2008/06/26 05:42:18 ray Exp $ */
/* 	$NetBSD: rasops_masks.h,v 1.5 2000/06/13 13:37:01 ad Exp $	*/

/*-
 * Copyright (c) 1999 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Andrew Doran.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _RASOPS_MASKS_H_
#define _RASOPS_MASKS_H_ 1

#include <sys/types.h>
#include <sys/endian.h>

/*
 * Convenience macros. To get around the problem of dealing with properly
 * ordered bits on little-endian machines, we just convert everything to
 * big-endian and back again when we're done.
 *
 * MBL: move bits left
 * MBR: move bits right
 * MBE: make big-endian
 */

#define MBL(x,y)	((y) > 31 ? 0 : (x) >> (y))
#define MBR(x,y)    	((y) > 31 ? 0 : (x) << (y))

#if BYTE_ORDER == BIG_ENDIAN
#define MBE(x)		(x)
#else
#define MBE(x) \
({ \
	u_int32_t tmp = (x); \
	tmp = ((tmp >>  1) & 0x55555555) | ((tmp <<  1) & 0xaaaaaaaa); \
	tmp = ((tmp >>  2) & 0x33333333) | ((tmp <<  2) & 0xcccccccc); \
	tmp = ((tmp >>  4) & 0x0f0f0f0f) | ((tmp <<  4) & 0xf0f0f0f0); \
	tmp = ((tmp >>  8) & 0x00ff00ff) | ((tmp <<  8) & 0xff00ff00); \
	tmp = ((tmp >> 16) & 0x0000ffff) | ((tmp << 16) & 0xffff0000); \
	tmp; \
})
#endif

/*
 * Using GETBITS() and PUTBITS() inside a loop mightn't be such a good idea.
 * There's probably some CSE and strength-reduction that the compiler won't
 * even think about - really should have a few assumptions/separate cases.
 */

/* Get a number of bits ( <= 32 ) from *sp and store in dw */
#define GETBITS(sp, x, w, dw) do {					\
	dw = MBL(*(sp), (x));						\
	if (((x) + (w)) > 32)						\
		dw |= (MBR((sp)[1], 32 - (x))); 			\
} while(0);

/* Put a number of bits ( <= 32 ) from sw to *dp */
#define PUTBITS(sw, x, w, dp) do {					\
	int n = (x) + (w) - 32;						\
									\
	if (n <= 0) {							\
		n = rasops_pmask[x & 31][w & 31];			\
		*(dp) = (*(dp) & ~n) | (MBR(sw, x) & n);		\
	} else {							\
		*(dp) = (*(dp) & rasops_rmask[x]) | (MBR((sw), x));	\
		(dp)[1] = ((dp)[1] & rasops_rmask[n]) |			\
			(MBL(sw, 32-(x)) & rasops_lmask[n]);		\
	}								\
} while(0);

/* rasops_masks.c */
#if BYTE_ORDER == BIG_ENDIAN
extern const int32_t	rasops_lmask[32+1];
extern const int32_t	rasops_rmask[32+1];
extern const int32_t	rasops_pmask[32][32];
#define	rasops_masks_init()	do { } while (0)
#else
extern int32_t	rasops_lmask[32+1];
extern int32_t	rasops_rmask[32+1];
extern int32_t	rasops_pmask[32][32];
void	rasops_masks_init(void);
#endif

#endif /* _RASOPS_MASKS_H_ */
@


1.4
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rasops_masks.h,v 1.3 2006/08/04 06:28:10 miod Exp $ */
d37 1
a37 1
#include <machine/endian.h>
@


1.3
log
@More simplification for little-endian systems.
@
text
@d1 1
a1 1
/*	$OpenBSD: rasops_masks.h,v 1.2 2006/08/03 18:42:06 miod Exp $ */
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.2
log
@Since rasops is big-endian internally (because it's the logical choice
for frame buffer work), it is no surprise that the less-than-8-bpp code
is completely wrong when run on a little endian machine, and only works
by accident if character cells are 8-bit wide.

Fix the BE<->LE conversions, so that now rasops1 works in all cases.
rasops2 and rasops4 might still need some help, but I'm not in a hurry to
meet a 4bpp big-endian frame buffer on a little-endian system...
@
text
@d1 1
a1 1
/*	$OpenBSD: rasops_masks.h,v 1.1 2001/03/18 04:32:45 nate Exp $ */
a54 1
#if BYTE_ORDER == BIG_ENDIAN
d58 2
a60 1

a61 3

#define MBL(x,y)    	((y) > 31 ? 0 : MBE(MBE(x) << (y)))
#define MBR(x,y)    	((y) > 31 ? 0 : MBE(MBE(x) >> (y)))
a71 1

@


1.1
log
@Import rasops from NetBSD.  This gives improved performance for raster
operations.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d65 11
a75 4
#define MBE(x)		( (((x) & 0x000000FFU) << 24) \
                        | (((x) & 0x0000FF00U) <<  8) \
                        | (((x) & 0x00FF0000U) >>  8) \
                        | (((x) & 0xFF000000U) >> 24) )
d106 1
d110 7
@


1.1.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: rasops_masks.h,v 1.1 2001/03/18 04:32:45 nate Exp $ */
@

