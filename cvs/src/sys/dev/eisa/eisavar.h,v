head	1.14;
access;
symbols
	OPENBSD_6_1:1.14.0.22
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.18
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.8
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.16
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.14
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.12
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.10
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.6
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.4
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.2
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.8
	OPENBSD_5_0:1.13.0.6
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.4
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.2
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.12.0.24
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.26
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.22
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.20
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.18
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.16
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.14
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.12
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.10
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.8
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.6
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.4
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.11.0.2
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.10.0.18
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.16
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.10
	UBC:1.10.0.14
	UBC_BASE:1.10
	OPENBSD_3_0:1.10.0.12
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.10
	OPENBSD_2_8:1.10.0.8
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.6
	OPENBSD_2_7_BASE:1.10
	SMP:1.10.0.4
	SMP_BASE:1.10
	kame_19991208:1.10
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.9.0.2
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.8.0.4
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2012.03.28.20.44.23;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2010.05.23.14.50.31;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.12.12.22.56.46;	author hshoexer;	state Exp;
branches;
next	1.11;

1.11
date	2002.12.20.01.56.32;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	99.06.16.14.38.35;	author espie;	state Exp;
branches
	1.10.4.1
	1.10.14.1;
next	1.9;

1.9
date	98.10.29.22.45.30;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	98.01.20.18.40.26;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	97.03.12.20.13.01;	author pefo;	state Exp;
branches;
next	1.6;

1.6
date	96.11.28.23.27.40;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.11.12.20.30.10;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.04.21.22.20.45;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.18.23.47.13;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.27.22.06.09;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.30;	author deraadt;	state Exp;
branches;
next	;

1.10.4.1
date	2003.03.28.00.38.10;	author niklas;	state Exp;
branches;
next	1.10.4.2;

1.10.4.2
date	2004.02.19.10.56.14;	author niklas;	state Exp;
branches;
next	;

1.10.14.1
date	2003.05.19.22.01.43;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Work in progress support for the SGI Indigo, Indigo 2 and Indy systems
(IP20, IP22, IP24) in 64-bit mode, adapated from NetBSD. Currently limited
to headless operation, input and video drivers will get ported soon.

Should work on all R4000, R4440 and R5000 based systems. L2 cache on R5000SC
Indy not supported yet (coming soon), R4600 not supported yet either (coming
soon as well).

Tested to boot multiuser on: Indigo2 R4000SC, Indy R4000PC, Indy R4000SC,
Indy R5000SC, Indigo2 R4400SC. There are still glitches in the Ethernet driver
which are being looked at.

Expansion support is limited to the GIO E++ board; GIO boards with PCI-GIO
bridges not ported yet due to the lack of hardware, and this kind of driver
does not port blindly.

Most of this work comes from NetBSD, polishing and integration work, as well
as putting as many ``R4x00 in 64-bit mode'' erratas as necessary, by yours
truly.

More work is coming, as well as trying to get some easy way to boot install
kernels (as older PROM can only boot ECOFF binaries, which won't do for the
kernel).
@
text
@/*	$OpenBSD: eisavar.h,v 1.13 2010/05/23 14:50:31 deraadt Exp $	*/
/*	$NetBSD: eisavar.h,v 1.11 1997/06/06 23:30:07 thorpej Exp $	*/

/*
 * Copyright (c) 1995, 1996 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *      for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _DEV_EISA_EISAVAR_H_
#define	_DEV_EISA_EISAVAR_H_

/*
 * Definitions for EISA autoconfiguration.
 *
 * This file describes types and functions which are used for EISA
 * configuration.  Some of this information is machine-specific, and is
 * separated into eisa_machdep.h.
 */

#include <machine/bus.h>
#include <dev/eisa/eisareg.h>		/* For ID register & string info. */

/* 
 * Structures and definitions needed by the machine-dependent header.
 */
struct eisabus_attach_args;

/*
 * Machine-dependent definitions.
 */
#if defined(__alpha__)
#include <alpha/eisa/eisa_machdep.h>
#elif defined(__i386__)
#include <i386/eisa/eisa_machdep.h>
#else
#include <machine/eisa_machdep.h>
#endif

typedef int	eisa_slot_t;		/* really only needs to be 4 bits */

/*
 * EISA bus attach arguments.
 */
struct eisabus_attach_args {
	char	*eba_busname;		/* XXX should be common */
	bus_space_tag_t eba_iot;	/* eisa i/o space tag */
	bus_space_tag_t eba_memt;	/* eisa mem space tag */
	bus_dma_tag_t eba_dmat;		/* DMA tag */
	eisa_chipset_tag_t eba_ec;
};

/*
 * EISA device attach arguments.
 */
struct eisa_attach_args {
	bus_space_tag_t ea_iot;		/* eisa i/o space tag */
	bus_space_tag_t ea_memt;	/* eisa mem space tag */
	bus_dma_tag_t ea_dmat;		/* DMA tag */
	eisa_chipset_tag_t ea_ec;

	eisa_slot_t	ea_slot;
	u_int8_t	ea_vid[EISA_NVIDREGS];
	u_int8_t	ea_pid[EISA_NPIDREGS];
	char		ea_idstring[EISA_IDSTRINGLEN];
};

/*
 * Locators for EISA devices, as specified to config.
 */
#define	eisacf_slot		cf_loc[0]
#define	EISA_UNKNOWN_SLOT	-1		/* wildcarded 'slot' */

#endif /* _DEV_EISA_EISAVAR_H_ */
@


1.13
log
@toast __arc__; we gave up on that platform around a decade ago
@
text
@d1 1
a1 1
/*	$OpenBSD: eisavar.h,v 1.12 2003/12/12 22:56:46 hshoexer Exp $	*/
d57 1
a57 4
#if (__alpha__ + __i386__ + __hppa__ != 1)
#error COMPILING FOR UNSUPPORTED MACHINE, OR MORE THAN ONE.
#endif
#if __alpha__
d59 1
a59 2
#endif
#if __i386__
d61 2
a62 3
#endif
#if __hppa__
#include <hppa/include/eisa_machdep.h>
@


1.12
log
@another small compiler warning cleanup (#error instead of bailing out)

ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: eisavar.h,v 1.11 2002/12/20 01:56:32 mickey Exp $	*/
d57 1
a57 1
#if (__alpha__ + __i386__ + __arc__ + __hppa__ != 1)
a64 3
#endif
#if __arc__
#include <arc/eisa/eisa_machdep.h>
@


1.11
log
@no need for these to sit in their own dirs, there not gonna be any sources there anyway, all code is in the particular bus adapter's source
@
text
@d1 1
a1 1
/*	$OpenBSD: eisavar.h,v 1.10 1999/06/16 14:38:35 espie Exp $	*/
d58 1
a58 1
ERROR: COMPILING FOR UNSUPPORTED MACHINE, OR MORE THAN ONE.
@


1.10
log
@On the off chance that something that is NOT the kernel includes those
files...
@
text
@d1 1
a1 1
/*	$OpenBSD: eisavar.h,v 1.9 1998/10/29 22:45:30 mickey Exp $	*/
d70 1
a70 1
#include <hppa/eisa/eisa_machdep.h>
@


1.10.14.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d70 1
a70 1
#include <hppa/include/eisa_machdep.h>
@


1.10.4.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d70 1
a70 1
#include <hppa/include/eisa_machdep.h>
@


1.10.4.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d58 1
a58 1
#error COMPILING FOR UNSUPPORTED MACHINE, OR MORE THAN ONE.
@


1.9
log
@hppa could be eisa too
@
text
@d1 1
a1 1
/*	$OpenBSD: eisavar.h,v 1.8 1998/01/20 18:40:26 niklas Exp $	*/
d57 1
a57 1
#if (alpha + i386 + arc + hppa != 1)
d60 1
a60 1
#if alpha
d63 1
a63 1
#if i386
d66 1
a66 1
#if arc
d69 1
a69 1
#if hppa
@


1.8
log
@Merge bus_dma support from NetBSD, mostly by Jason Thorpe.  Only i386 uses it
 so far, the other archs gets placeholders for now.  I wrote a compatibility
layer for OpenBSD's old isadma code so we can still use our old
driver sources.  They will however get changed to native bus_dma use,
on a case by case basis.   Oh yes, I almost forgot, I kept our notion
of isadma being a device so DMA-less ISA-busses still work
@
text
@d1 1
a1 1
/*	$OpenBSD: eisavar.h,v 1.7 1997/03/12 20:13:01 pefo Exp $	*/
d57 1
a57 1
#if (alpha + i386 + arc != 1)
d68 3
@


1.7
log
@Need this for arc/pci...
@
text
@d1 2
a2 2
/*	$OpenBSD: eisavar.h,v 1.6 1996/11/28 23:27:40 niklas Exp $	*/
/*	$NetBSD: eisavar.h,v 1.10 1996/10/21 22:31:03 thorpej Exp $	*/
d79 1
d89 1
@


1.6
log
@Adaption to new bus.h from NetBSD.  Various driver has been updated to
NetBSD 961107 state.  Other has not, partly because sometimes the bus.h
changes was coupled with other changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: eisavar.h,v 1.5 1996/11/12 20:30:10 niklas Exp $	*/
d57 1
a57 1
#if (alpha + i386 != 1)
d65 3
@


1.5
log
@s/bus.h/bus.old.h/ to make the transit to the bus_space bus.h an easy road
possibly taken in small steps
@
text
@d1 2
a2 2
/*	$OpenBSD: eisavar.h,v 1.4 1996/04/21 22:20:45 deraadt Exp $	*/
/*	$NetBSD: eisavar.h,v 1.9 1996/04/12 06:34:36 cgd Exp $	*/
d46 1
a46 1
#include <machine/bus.old.h>
d73 3
a75 2
	char		*eba_busname;		/* XXX should be common */
	bus_chipset_tag_t eba_bc;		/* XXX should be common */
d83 2
a84 1
	bus_chipset_tag_t ea_bc;
@


1.4
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: eisavar.h,v 1.3 1996/04/18 23:47:13 niklas Exp $	*/
d46 1
a46 1
#include <machine/bus.h>
@


1.3
log
@NetBSD 960317 merge
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: eisavar.h,v 1.4 1996/03/08 20:25:22 cgd Exp $	*/
d35 2
a36 2
#ifndef __DEV_EISA_EISAVAR_H__
#define	__DEV_EISA_EISAVAR_H__
d41 3
a43 2
 * This file describes types, constants, and functions which are used
 * for EISA autoconfiguration.
d49 17
a68 1

d75 1
a77 1

d83 1
a90 16

/*
 * Easy to remember names for EISA device locators.
 */

#define	eisacf_slot		cf_loc[0]		/* slot */


/*
 * EISA device locator values that mean "unknown" or "unspecified."
 * Note that not all are supplied by 'config' and should be filled
 * in by the device if appropriate.
 */

#define	EISA_UNKNOWN_SLOT	((eisa_slot_t)-1)

d92 1
a92 2
 * The EISA bus cfdriver, so that subdevices can more easily tell
 * what bus they're on.
d94 2
d97 1
a97 13
extern struct cfdriver eisacd;

/*
 * XXX interrupt attachment, etc., is done by using the ISA interfaces.
 * XXX THIS SHOULD CHANGE.
 */

#include <dev/isa/isavar.h>

#define	eisa_intr_establish	isa_intr_establish		/* XXX */
#define	eisa_intr_disestablish	isa_intr_disestablish		/* XXX */

#endif /* !__DEV_EISA_EISAVAR_H__ */
@


1.2
log
@from netbsd:
The IST_* and IPL_* constants are not bus-specific; don't treat them as such.
Change splimp -> splnet in Ethernet, ARCnet, and FDDI drivers.
@
text
@d1 2
a2 1
/*	$NetBSD: eisavar.h,v 1.1 1995/04/17 12:08:23 cgd Exp $	*/
d5 1
a5 1
 * Copyright (c) 1995 Christopher G. Demetriou
d35 3
d39 4
a42 3
 * XXX
 * XXX EISA AUTOCONFIG SHOULD BE SEPERATED FROM ISA AUTOCONFIG!!!
 * XXX
d45 29
d75 1
a75 1
 * pull in the ISA definitions
d77 18
a94 1
#include <dev/isa/isavar.h>
d97 2
a98 2
 * and bend them to our twisted ways:
 * map the functions, etc. that are used
d101 2
a102 2
#define eisa_attach_args	isa_attach_args			/* XXX */
#define eisadev			isadev				/* XXX */
d105 2
@


1.1
log
@Initial revision
@
text
@a53 10

#define	EISA_IPL_NONE	ISA_IPL_NONE				/* XXX */
#define	EISA_IPL_BIO	ISA_IPL_BIO				/* XXX */
#define	EISA_IPL_NET	ISA_IPL_NET				/* XXX */
#define	EISA_IPL_TTY	ISA_IPL_TTY				/* XXX */
#define	EISA_IPL_CLOCK	ISA_IPL_CLOCK				/* XXX */

#define	EISA_IST_PULSE	ISA_IST_PULSE				/* XXX */
#define	EISA_IST_EDGE	ISA_IST_EDGE				/* XXX */
#define	EISA_IST_LEVEL	ISA_IST_LEVEL				/* XXX */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
