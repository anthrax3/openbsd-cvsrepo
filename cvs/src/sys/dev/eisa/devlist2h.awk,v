head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.58
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.54
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.44
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.52
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.50
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.48
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.46
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.42
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.40
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.38
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.36
	OPENBSD_5_0:1.4.0.34
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.32
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.30
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.26
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.28
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.3.0.12
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.10
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2003.03.29.00.17.44;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.26.22.23.03;	author mickey;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	96.04.21.22.20.18;	author deraadt;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	96.04.18.23.47.10;	author niklas;	state Exp;
branches;
next	;

1.2.16.1
date	2001.05.14.22.23.15;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2003.05.13.19.34.57;	author ho;	state Exp;
branches;
next	;

1.3.6.1
date	2003.05.19.22.01.43;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@device/vendor id is always < 7 chars. store it in the array and save on the extra pointer average of 50% space savings. regen the eisadevs
@
text
@#! /usr/bin/awk -f
#	$OpenBSD: devlist2h.awk,v 1.3 2001/01/26 22:23:03 mickey Exp $
#	$NetBSD: devlist2h.awk,v 1.2 1996/04/09 20:07:16 cgd Exp $
#
# Copyright (c) 1995, 1996 Christopher G. Demetriou
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#      This product includes software developed by Christopher G. Demetriou.
# 4. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
BEGIN {
	nproducts = nvendors = 0
	dfile="eisadevs_data.h"
	hfile="eisadevs.h"
}
NR == 1 {
	VERSION = $0
	gsub("\\$", "", VERSION)

	printf("/*\n") > dfile
	printf(" * THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.\n") \
	    > dfile
	printf(" *\n") > dfile
	printf(" * generated from:\n") > dfile
	printf(" *\t%s\n", VERSION) > dfile
	printf(" */\n") > dfile

	printf("/*\n") > hfile
	printf(" * THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.\n") \
	    > hfile
	printf(" *\n") > hfile
	printf(" * generated from:\n") > hfile
	printf(" *\t%s\n", VERSION) > hfile
	printf(" */\n") > hfile

	next
}
$1 == "vendor" {
	nvendors++

	vendorindex[$2] = nvendors;	# record index for this name, for later.
	vendors[nvendors, 1] = $2;	# name/ID
	i = 2; f = 3;

	# comments
	ocomment = oparen = 0
	if (f <= NF) {
		ocomment = 1;
	}
	while (f <= NF) {
		if ($f == "#") {
			oparen = 1
			f++
			continue
		}
		if (oparen) {
			f++
			continue
		}
		vendors[nvendors, i] = $f
		i++; f++;
	}

	next
}
$1 == "product" {
	nproducts++

	products[nproducts, 1] = $2;		# vendor name
	products[nproducts, 2] = $3;		# product id
	printf("#define\tEISA_PRODUCT_%s%s\t\"", products[nproducts, 1],
	    products[nproducts, 2]) > hfile

	i = vendorindex[products[nproducts, 1]]; j = 2;
	needspace = 0;
	while (vendors[i, j] != "") {
		if (needspace)
			printf(" ") > hfile
		printf("%s", vendors[i, j]) > hfile
		needspace = 1
		j++
	}

	if (needspace)
		printf(" ") > hfile

	i=3; f = 4;

	# comments
	ocomment = oparen = 0
	if (f <= NF) {
		ocomment = 1;
	}
	while (f <= NF) {
		if ($f == "#") {
			printf("(") > hfile
			oparen = 1
			f++
			continue
		}
		if (oparen) {
			printf("%s", $f) > hfile
			if (f < NF)
				printf(" ") > hfile
			f++
			continue
		}
		products[nproducts, i] = $f
		printf("%s", products[nproducts, i]) > hfile
		if (f < NF)
			printf(" ") > hfile
		i++; f++;
	}
	if (oparen)
		printf(")") > hfile
	if (ocomment)
		printf("\"") > hfile
	printf("\n") > hfile

	next
}
{
	if ($0 == "")
		blanklines++
	if (blanklines != 2 && blanklines != 3)
		print $0 > hfile
	if (blanklines < 2)
		print $0 > dfile
}
END {
	# print out the match tables

	printf("\n") > dfile

	printf("static const struct eisa_knowndev eisa_knowndevs[] = {\n") > dfile
	for (i = 1; i <= nproducts; i++) {
		printf("\t{\n") > dfile
		printf("\t    0,\n") > dfile
		printf("\t    \"%s%s\",\n", products[i, 1], products[i, 2]) \
		    > dfile
		printf("\t    EISA_PRODUCT_%s%s,\n", \
		    products[i, 1], products[i, 2]) \
		    > dfile

		printf("\t},\n") > dfile
	}
	for (i = 1; i <= nvendors; i++) {
		printf("\t{\n") > dfile
		printf("\t    EISA_KNOWNDEV_NOPROD,\n") \
		    > dfile
		printf("\t    \"%s\",\n", vendors[i, 1]) \
		    > dfile
		printf("\t    \"") > dfile
		j = 2;
		needspace = 0;
		while (vendors[i, j] != "") {
			if (needspace)
				printf(" ") > dfile
			printf("%s", vendors[i, j]) > dfile
			needspace = 1
			j++
		}
		printf("\",\n") > dfile
		printf("\t},\n") > dfile
	}
	printf("\t{ 0, \"\", NULL, }\n") > dfile
	printf("};\n") > dfile
}
@


1.3
log
@constify eisa_knowndevs
@
text
@d2 1
a2 1
#	$OpenBSD: devlist2h.awk,v 1.2 1996/04/21 22:20:18 deraadt Exp $
d188 1
a188 1
	printf("\t{ 0, NULL, NULL, }\n") > dfile
@


1.3.6.1
log
@sync
@
text
@d2 1
a2 1
#	$OpenBSD$
d188 1
a188 1
	printf("\t{ 0, \"\", NULL, }\n") > dfile
@


1.2
log
@partial sync with netbsd 960418, more to come
@
text
@d2 1
a2 1
#	$OpenBSD: devlist2h.awk,v 1.1 1996/04/18 23:47:10 niklas Exp $
d157 1
a157 1
	printf("struct eisa_knowndev eisa_knowndevs[] = {\n") > dfile
@


1.2.16.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d2 1
a2 1
#	$OpenBSD: devlist2h.awk,v 1.3 2001/01/26 22:23:03 mickey Exp $
d157 1
a157 1
	printf("static const struct eisa_knowndev eisa_knowndevs[] = {\n") > dfile
@


1.2.16.2
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d2 1
a2 1
#	$OpenBSD: devlist2h.awk,v 1.2.16.1 2001/05/14 22:23:15 niklas Exp $
d188 1
a188 1
	printf("\t{ 0, \"\", NULL, }\n") > dfile
@


1.1
log
@NetBSD 960317 merge
@
text
@d2 2
a3 2
#	$OpenBSD$
#	$NetBSD: devlist2h.awk,v 1.1 1996/02/26 23:46:20 cgd Exp $
d94 1
a94 1
            products[nproducts, 2]) > hfile
@
