head	1.24;
access;
symbols
	OPENBSD_6_1:1.24.0.4
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.24.0.2
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.23.0.2
	OPENBSD_5_9_BASE:1.23
	OPENBSD_5_8:1.23.0.4
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.22.0.4
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.20.0.14
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.12
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.10
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.8
	OPENBSD_5_0:1.20.0.6
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.4
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.2
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.19.0.6
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.19.0.8
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.4
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.2
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.18.0.8
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.6
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.18.0.4
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.2
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.17.0.2
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.15.0.4
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.2
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.10.0.12
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.10
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.8
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.10
	UBC:1.9.0.4
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.4
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.2
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.24
date	2016.07.11.09.50.02;	author kettenis;	state Exp;
branches;
next	1.23;
commitid	GhFzme38yGshPTK1;

1.23
date	2015.03.14.03.38.48;	author jsg;	state Exp;
branches;
next	1.22;
commitid	p4LJxGKbi0BU2cG6;

1.22
date	2014.12.05.15.50.04;	author mpi;	state Exp;
branches;
next	1.21;
commitid	t9FBKDfc4VDxpEy2;

1.21
date	2013.12.28.03.30.41;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2010.07.23.07.47.13;	author jsg;	state Exp;
branches;
next	1.19;

1.19
date	2008.06.26.05.42.17;	author ray;	state Exp;
branches;
next	1.18;

1.18
date	2006.03.05.01.11.37;	author brad;	state Exp;
branches;
next	1.17;

1.17
date	2006.02.12.00.13.01;	author maja;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.16.22.50.34;	author brad;	state Exp;
branches;
next	1.15;

1.15
date	2005.01.28.18.27.55;	author brad;	state Exp;
branches;
next	1.14;

1.14
date	2004.09.28.01.13.32;	author brad;	state Exp;
branches;
next	1.13;

1.13
date	2004.09.27.18.25.48;	author brad;	state Exp;
branches;
next	1.12;

1.12
date	2004.09.26.00.59.58;	author brad;	state Exp;
branches;
next	1.11;

1.11
date	2004.09.20.06.05.27;	author brad;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.14.01.26.58;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.08.02.16.41;	author nate;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2000.08.28.05.24.06;	author jason;	state Exp;
branches;
next	1.7;

1.7
date	2000.08.26.20.04.18;	author nate;	state Exp;
branches;
next	1.6;

1.6
date	99.12.07.22.01.33;	author jason;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	99.09.17.01.38.56;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	99.07.23.12.39.11;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.07.16.14.59.07;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	99.05.31.22.13.47;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.11.11.19.34.50;	author jason;	state Exp;
branches;
next	;

1.6.2.1
date	2001.05.14.22.25.28;	author niklas;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2001.07.04.10.41.46;	author niklas;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2002.03.28.15.34.52;	author niklas;	state Exp;
branches;
next	;

1.9.4.1
date	2002.06.11.03.42.24;	author art;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Initialize oui and model fields in the softc.

ok deraadt@@, mpi@@
@
text
@/*	$OpenBSD: ukphy.c,v 1.23 2015/03/14 03:38:48 jsg Exp $	*/
/*	$NetBSD: ukphy.c,v 1.9 2000/02/02 23:34:57 thorpej Exp $	*/

/*-
 * Copyright (c) 1998, 1999 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,
 * NASA Ames Research Center, and by Frank van der Linden.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1997 Manuel Bouyer.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * driver for generic unknown PHYs
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/socket.h>
#include <sys/errno.h>

#include <net/if.h>
#include <net/if_var.h>
#include <net/if_media.h>

#include <dev/mii/mii.h>
#include <dev/mii/miivar.h>

int	ukphymatch(struct device *, void *, void *);
void	ukphyattach(struct device *, struct device *, void *);

struct cfattach ukphy_ca = {
	sizeof(struct mii_softc), ukphymatch, ukphyattach, mii_phy_detach
};

struct cfdriver ukphy_cd = {
	NULL, "ukphy", DV_DULL
};

int	ukphy_service(struct mii_softc *, struct mii_data *, int);

const struct mii_phy_funcs ukphy_funcs = {
	ukphy_service, ukphy_status, mii_phy_reset,
};

int
ukphymatch(struct device *parent, void *match, void *aux)
{

	/*
	 * We know something is here, so always match at a low priority.
	 */
	return (1);
}

void
ukphyattach(struct device *parent, struct device *self, void *aux)
{
	struct mii_softc *sc = (struct mii_softc *)self;
	struct mii_attach_args *ma = aux;
	struct mii_data *mii = ma->mii_data;

	printf(": Generic IEEE 802.3u media interface, rev. %d:",
	    MII_REV(ma->mii_id2));
	printf(" OUI 0x%06x, model 0x%04x\n",
	    MII_OUI(ma->mii_id1, ma->mii_id2), MII_MODEL(ma->mii_id2));

	sc->mii_inst = mii->mii_instance;
	sc->mii_phy = ma->mii_phyno;
	sc->mii_funcs = &ukphy_funcs;
	sc->mii_oui = MII_OUI(ma->mii_id1, ma->mii_id2);
	sc->mii_model = MII_MODEL(ma->mii_id2);
	sc->mii_pdata = mii;
	sc->mii_flags = ma->mii_flags;

	/*
	 * Don't do loopback on unknown PHYs.  It might confuse some of them.
	 */
	sc->mii_flags |= MIIF_NOLOOP;

	PHY_RESET(sc);

	sc->mii_capabilities =
	    PHY_READ(sc, MII_BMSR) & ma->mii_capmask;
	if (sc->mii_capabilities & BMSR_EXTSTAT)
		sc->mii_extcapabilities = PHY_READ(sc, MII_EXTSR);
	if ((sc->mii_capabilities & BMSR_MEDIAMASK) == 0 &&
	    (sc->mii_extcapabilities & EXTSR_MEDIAMASK) == 0)
		printf("%s: no media present\n", sc->mii_dev.dv_xname);
	else
		mii_phy_add_media(sc);
}

int
ukphy_service(struct mii_softc *sc, struct mii_data *mii, int cmd)
{
	struct ifmedia_entry *ife = mii->mii_media.ifm_cur;
	int reg;

	if ((sc->mii_dev.dv_flags & DVF_ACTIVE) == 0)
		return (ENXIO);

	switch (cmd) {
	case MII_POLLSTAT:
		/*
		 * If we're not polling our PHY instance, just return.
		 */
		if (IFM_INST(ife->ifm_media) != sc->mii_inst)
			return (0);
		break;

	case MII_MEDIACHG:
		/*
		 * If the media indicates a different PHY instance,
		 * isolate ourselves.
		 */
		if (IFM_INST(ife->ifm_media) != sc->mii_inst) {
			reg = PHY_READ(sc, MII_BMCR);
			PHY_WRITE(sc, MII_BMCR, reg | BMCR_ISO);
			return (0);
		}

		/*
		 * If the interface is not up, don't do anything.
		 */
		if ((mii->mii_ifp->if_flags & IFF_UP) == 0)
			break;

		mii_phy_setmedia(sc);
		break;

	case MII_TICK:
		/*
		 * If we're not currently selected, just return.
		 */
		if (IFM_INST(ife->ifm_media) != sc->mii_inst)
			return (0);

		if (mii_phy_tick(sc) == EJUSTRETURN)
			return (0);
		break;

	case MII_DOWN:
		mii_phy_down(sc);
		return (0);
	}

	/* Update the media status. */
	mii_phy_status(sc);

	/* Callback if something changed. */
	mii_phy_update(sc, cmd);
	return (0);
}
@


1.23
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.22 2014/12/05 15:50:04 mpi Exp $	*/
d117 2
@


1.22
log
@Explicitly include <net/if_var.h> instead of pulling it in <net/if.h>.

ok mikeb@@, krw@@, bluhm@@, tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.21 2013/12/28 03:30:41 deraadt Exp $	*/
a63 1
#include <sys/kernel.h>
@


1.21
log
@mii drivers no longer need activate functions.  Repair of the PHY
configuration setting is done at resume time because all networks
drivers which were previously up, do an IFF_UP operation which
hits PHY_RESET.
This was in snapshots for about 2 weeks.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.20 2010/07/23 07:47:13 jsg Exp $	*/
d70 1
@


1.20
log
@Manuel Bouyer rescinded clauses 3 and 4 of his license text.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.19 2008/06/26 05:42:17 ray Exp $	*/
d79 1
a79 2
	sizeof(struct mii_softc), ukphymatch, ukphyattach, mii_phy_detach,
	    mii_phy_activate
@


1.19
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.18 2006/03/05 01:11:37 brad Exp $	*/
a44 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Manuel Bouyer.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.18
log
@remove whitespace at the end of line.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.17 2006/02/12 00:13:01 maja Exp $	*/
a19 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.17
log
@Correct information in dmesg again. -moj ok jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.16 2005/10/16 22:50:34 brad Exp $	*/
d124 1
a124 1
	printf(" OUI 0x%06x, model 0x%04x\n", 
@


1.16
log
@make ukphy dmesg attach print on one line.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.15 2005/01/28 18:27:55 brad Exp $	*/
d124 1
a124 1
	printf(" OUI 0x%06x, model 0x%04x\n", MII_REV(ma->mii_id2),
@


1.15
log
@Get flags passed down to PHY drivers correctly.  This was done on
an adhoc basis in a couple of PHY drivers, this fixes it more generally.

From NetBSD

Fixes panics with aue(4) NICs.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.14 2004/09/28 01:13:32 brad Exp $	*/
d122 4
a125 4
	printf(": Generic IEEE 802.3u media interface\n");
	printf("%s: OUI 0x%06x, model 0x%04x, rev. %d\n",
	    sc->mii_dev.dv_xname, MII_OUI(ma->mii_id1, ma->mii_id2),
	    MII_MODEL(ma->mii_id2), MII_REV(ma->mii_id2));
@


1.14
log
@mii_phy_tick() already checks for autonegotiation.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.13 2004/09/27 18:25:48 brad Exp $	*/
d131 1
a131 1
	sc->mii_flags = mii->mii_flags;
@


1.13
log
@ANSI protos and some minor cleanup

ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.12 2004/09/26 00:59:58 brad Exp $	*/
a193 6
			return (0);

		/*
		 * Only used for autonegotiation.
		 */
		if (IFM_SUBTYPE(ife->ifm_media) != IFM_AUTO)
@


1.12
log
@Restructure the PHY entry points to use a structure of
entry points instead of descrete function pointers, and
extend this to include a "reset" entry point. Make sure
any PHY-specific reset routine is always used.

From NetBSD

ok mcbride@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.11 2004/09/20 06:05:27 brad Exp $	*/
d106 1
a106 4
ukphymatch(parent, match, aux)
	struct device *parent;
	void *match;
	void *aux;
d116 1
a116 3
ukphyattach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
d152 1
a152 4
ukphy_service(sc, mii, cmd)
	struct mii_softc *sc;
	struct mii_data *mii;
	int cmd;
@


1.11
log
@don't include sys/malloc.h, no memory management functions are used
by any of the MII drivers.

From NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.10 2002/03/14 01:26:58 millert Exp $	*/
d101 4
d134 1
a134 2
	sc->mii_service = ukphy_service;
	sc->mii_status = ukphy_status;
d143 1
a143 1
	mii_phy_reset(sc);
@


1.10
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.9 2001/06/08 02:16:41 nate Exp $	*/
a77 1
#include <sys/malloc.h>
@


1.9
log
@Add some general support info for gigabit phys
Fix some comments
Remove some dead code
From NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.8 2000/08/28 05:24:06 jason Exp $	*/
d88 2
a89 2
int	ukphymatch __P((struct device *, void *, void *));
void	ukphyattach __P((struct device *, struct device *, void *));
d100 1
a100 1
int	ukphy_service __P((struct mii_softc *, struct mii_data *, int));
@


1.9.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.9 2001/06/08 02:16:41 nate Exp $	*/
d88 2
a89 2
int	ukphymatch(struct device *, void *, void *);
void	ukphyattach(struct device *, struct device *, void *);
d100 1
a100 1
int	ukphy_service(struct mii_softc *, struct mii_data *, int);
@


1.8
log
@hush
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.7 2000/08/26 20:04:18 nate Exp $	*/
d145 4
a148 1
	if ((sc->mii_capabilities & BMSR_MEDIAMASK) == 0)
@


1.7
log
@sync mii code with netbsd
adds detach functionality for phys
some code cleanup

Nobody really had time to test all of this out, but theo said commit anyway
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.6 1999/12/07 22:01:33 jason Exp $	*/
a144 1
	printf("%s: ", sc->mii_dev.dv_xname);
d146 1
a146 1
		printf("no media present");
a148 1
	printf("\n");
@


1.6
log
@Merge with NetBSD:
o move common support functions for phy drivers from mii.c to mii_physubr.c,
	so that they are not includes if no PHY is configured
o Clean up the code that adds media a little, and make media selection
	table-driven in preparation for some other changes to be made.
o Don't add any loopback versions of media, for now.
o Add mii_down(), which is used by MAC drivers to inform PHYs that the
	interface is now down.  PHYs use this to cancel pending asynchronous
	operations.
o Add OUI for Enable Semiconductor.
o New Driver for TDK TSC78Q2120 PHY
@
text
@d1 2
a2 2
/*	$OpenBSD: ukphy.c,v 1.5 1999/09/17 01:38:56 jason Exp $	*/
/*	$NetBSD: ukphy.c,v 1.1.6.1 1999/04/23 15:39:00 perry Exp $	*/
d92 2
a93 1
	sizeof(struct mii_softc), ukphymatch, ukphyattach
d132 1
d134 6
d145 6
a150 2
	if (sc->mii_capabilities & BMSR_MEDIAMASK)
		mii_add_media(sc);
d162 3
d191 1
a191 12
		switch (IFM_SUBTYPE(ife->ifm_media)) {
		case IFM_AUTO:
			/*
			 * If we're already in auto mode, just return.
			 */
			if (PHY_READ(sc, MII_BMCR) & BMCR_AUTOEN)
				return (0);
			(void) mii_phy_auto(sc, 1);
			break;
		default:
			mii_phy_setmedia(sc);
		}
d207 1
a207 25
		/*
		 * Is the interface even up?
		 */
		if ((mii->mii_ifp->if_flags & IFF_UP) == 0)
			return (0);

		/*
		 * Check to see if we have link.  If we do, we don't
		 * need to restart the autonegotiation process.  Read
		 * the BMSR twice in case it's latched.
		 */
		reg = PHY_READ(sc, MII_BMSR) |
		    PHY_READ(sc, MII_BMSR);
		if (reg & BMSR_LINK)
			return (0);

		/*
		 * Only retry autonegotiation every 5 seconds.
		 */
		if (++sc->mii_ticks != 5)
			return (0);
		
		sc->mii_ticks = 0;
		mii_phy_reset(sc);
		if (mii_phy_auto(sc, 0) == EJUSTRETURN)
d217 1
a217 1
	ukphy_status(sc);
d220 1
a220 4
	if (sc->mii_active != mii->mii_media_active || cmd == MII_MEDIACHG) {
		(*mii->mii_statchg)(sc->mii_dev.dv_parent);
		sc->mii_active = mii->mii_media_active;
	}
@


1.6.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
/*	$OpenBSD: ukphy.c,v 1.8 2000/08/28 05:24:06 jason Exp $	*/
/*	$NetBSD: ukphy.c,v 1.9 2000/02/02 23:34:57 thorpej Exp $	*/
d92 1
a92 2
	sizeof(struct mii_softc), ukphymatch, ukphyattach, mii_phy_detach,
	    mii_phy_activate
a130 1
	sc->mii_status = ukphy_status;
a131 6
	sc->mii_flags = mii->mii_flags;

	/*
	 * Don't do loopback on unknown PHYs.  It might confuse some of them.
	 */
	sc->mii_flags |= MIIF_NOLOOP;
d137 2
a138 4
	if ((sc->mii_capabilities & BMSR_MEDIAMASK) == 0)
		printf("%s: no media present\n", sc->mii_dev.dv_xname);
	else
		mii_phy_add_media(sc);
a149 3
	if ((sc->mii_dev.dv_flags & DVF_ACTIVE) == 0)
		return (ENXIO);

d176 12
a187 1
		mii_phy_setmedia(sc);
d203 25
a227 1
		if (mii_phy_tick(sc) == EJUSTRETURN)
d237 1
a237 1
	mii_phy_status(sc);
d240 4
a243 1
	mii_phy_update(sc, cmd);
@


1.6.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.6.2.1 2001/05/14 22:25:28 niklas Exp $	*/
d145 1
a145 4
	if (sc->mii_capabilities & BMSR_EXTSTAT)
		sc->mii_extcapabilities = PHY_READ(sc, MII_EXTSR);
	if ((sc->mii_capabilities & BMSR_MEDIAMASK) == 0 &&
	    (sc->mii_extcapabilities & EXTSR_MEDIAMASK) == 0)
@


1.6.2.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d88 2
a89 2
int	ukphymatch(struct device *, void *, void *);
void	ukphyattach(struct device *, struct device *, void *);
d100 1
a100 1
int	ukphy_service(struct mii_softc *, struct mii_data *, int);
@


1.5
log
@add IFM_NONE instead of IFM_AUTO for isolation
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.4 1999/07/23 12:39:11 deraadt Exp $	*/
a87 3
#ifdef __NetBSD__
int	ukphymatch __P((struct device *, struct cfdata *, void *));
#else
a88 1
#endif
a94 1
#ifdef __OpenBSD__
a97 1
#endif
a103 3
#ifdef __NetBSD__
	struct cfdata *match;
#else
a104 1
#endif
a132 9
#define	ADD(m, c)	ifmedia_add(&mii->mii_media, (m), (c), NULL)

	ADD(IFM_MAKEWORD(IFM_ETHER, IFM_NONE, 0, sc->mii_inst),
	    BMCR_ISO);
#if 0
	ADD(IFM_MAKEWORD(IFM_ETHER, IFM_100_TX, IFM_LOOP, sc->mii_inst),
	    BMCR_LOOP|BMCR_S100);
#endif

d138 1
a138 3
		mii_add_media(mii, sc->mii_capabilities,
		    sc->mii_inst);
#undef ADD
a184 5
		case IFM_100_T4:
			/*
			 * XXX Not supported as a manual setting right now.
			 */
			return (EINVAL);
d186 1
a186 6
			/*
			 * BMCR data is stored in the ifmedia entry.
			 */
			PHY_WRITE(sc, MII_ANAR,
			    mii_anar(ife->ifm_media));
			PHY_WRITE(sc, MII_BMCR, ife->ifm_data);
d230 4
@


1.4
log
@do not print media information to dmesg; ifconfig shows it
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.3 1999/07/16 14:59:07 jason Exp $	*/
d145 1
a145 1
	ADD(IFM_MAKEWORD(IFM_ETHER, IFM_AUTO, 0, sc->mii_inst),
@


1.3
log
@Sync with NetBSD:
o Implement asynchronous autonegotiation when driven by the MII tick
  (one-second clock).  Prevents .5s delays every 5 seconds when the interface
  is up but there is no link.
o Correct the sense of the PCR_FLINK100 bit in nsphy.c.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukphy.c,v 1.2 1999/05/31 22:13:47 millert Exp $	*/
d156 1
a156 4
	printf("%s: ", sc->mii_dev.dv_xname);
	if ((sc->mii_capabilities & BMSR_MEDIAMASK) == 0)
		printf("no media present");
	else
a158 1
	printf("\n");
@


1.2
log
@Enable "auto" mode so we at least have a chance of working.  Otherwise,
we panic in ifmedia_set because ifmedia_match() fails.
@
text
@d1 2
a2 2
/*	$OpenBSD: ukphy.c,v 1.1 1998/11/11 19:34:50 jason Exp $	*/
/*	$NetBSD: ukphy.c,v 1.1 1998/11/05 00:36:48 thorpej Exp $	*/
d5 1
a5 1
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
d80 1
d208 1
a208 1
			(void) mii_phy_auto(sc);
d262 2
a263 1
		(void) mii_phy_auto(sc);
@


1.1
log
@Merge with NetBSD:
o additional phy drivers (seeq, ics, level1)
o "unknown phy" driver for unsupported phys
o collected common code into mii_physubr
o exphy isn't the only phy that doesn't have valid id registers
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d144 1
a144 1
	ADD(IFM_MAKEWORD(IFM_ETHER, IFM_NONE, 0, sc->mii_inst),
@

