head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.14
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.16
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.12
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.10
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.8
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.6
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.10.0.36
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.34
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.32
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.30
	OPENBSD_5_0:1.10.0.28
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.26
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.24
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.20
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.22
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.18
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.16
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.14
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.12
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.10
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.8
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.8
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.2
	SMP_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2013.12.28.03.30.41;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2005.02.19.06.00.04;	author brad;	state Exp;
branches;
next	1.9;

1.9
date	2005.01.28.18.27.55;	author brad;	state Exp;
branches;
next	1.8;

1.8
date	2004.09.27.18.25.48;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	2004.09.26.00.59.58;	author brad;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.20.06.05.27;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.19.08.58;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.58;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.18.15.07.00;	author chris;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	2000.08.26.20.04.18;	author nate;	state Exp;
branches;
next	1.1;

1.1
date	99.12.10.21.48.20;	author jason;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.05.14.22.25.28;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.03.28.15.34.52;	author niklas;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2003.06.07.11.02.29;	author ho;	state Exp;
branches;
next	;

1.3.8.1
date	2002.06.11.03.42.24;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@mii drivers no longer need activate functions.  Repair of the PHY
configuration setting is done at resume time because all networks
drivers which were previously up, do an IFF_UP operation which
hits PHY_RESET.
This was in snapshots for about 2 weeks.
@
text
@/*	$OpenBSD: txphy.c,v 1.10 2005/02/19 06:00:04 brad Exp $	*/

/*
 * Copyright (c) 1999 Jason L. Wright (jason@@thought.net)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Driver for the Texas Instruments TNETE2101 phy.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/device.h>
#include <sys/socket.h>
#include <sys/errno.h>

#include <net/if.h>
#include <net/if_media.h>

#include <dev/mii/mii.h>
#include <dev/mii/miivar.h>
#include <dev/mii/miidevs.h>

int	txphymatch(struct device *, void *, void *);
void	txphyattach(struct device *, struct device *, void *);

struct cfattach txphy_ca = {
	sizeof(struct mii_softc), txphymatch, txphyattach, mii_phy_detach
};

struct cfdriver txphy_cd = {
	NULL, "txphy", DV_DULL
};

int	txphy_service(struct mii_softc *, struct mii_data *, int);

const struct mii_phy_funcs txphy_funcs = {
	txphy_service, ukphy_status, mii_phy_reset,
};

static const struct mii_phydesc txphys[] = {
	{ MII_OUI_xxTI,	MII_MODEL_xxTI_TNETE2101,
	  MII_STR_xxTI_TNETE2101 },

	{ 0,			0,
	  NULL },
};

int
txphymatch(struct device *parent, void *match, void *aux)
{
	struct mii_attach_args *ma = aux;

	if (mii_phy_match(ma, txphys) != NULL)
		return (10);

	return (0);
}

void
txphyattach(struct device *parent, struct device *self, void *aux)
{
	struct mii_softc *sc = (struct mii_softc *)self;
	struct mii_attach_args *ma = aux;
	struct mii_data *mii = ma->mii_data;
	const struct mii_phydesc *mpd;

	mpd = mii_phy_match(ma, txphys);
	printf(": %s, rev. %d\n", mpd->mpd_name, MII_REV(ma->mii_id2));

	sc->mii_inst = mii->mii_instance;
	sc->mii_phy = ma->mii_phyno;
	sc->mii_funcs = &txphy_funcs;
	sc->mii_pdata = mii;
	sc->mii_flags = ma->mii_flags;

	PHY_RESET(sc);

	sc->mii_capabilities =
	    PHY_READ(sc, MII_BMSR) & ma->mii_capmask;
	if (sc->mii_capabilities & BMSR_MEDIAMASK)
		mii_phy_add_media(sc);
}

int
txphy_service(struct mii_softc *sc, struct mii_data *mii, int cmd)
{
	struct ifmedia_entry *ife = mii->mii_media.ifm_cur;

	if ((sc->mii_dev.dv_flags & DVF_ACTIVE) == 0)
		return (ENXIO);

	/*
	 * Can't isolate the RTL8139 phy, so it has to be the only one.
	 */
	if (IFM_INST(ife->ifm_media) != sc->mii_inst)
		panic("txphy_service: attempt to isolate phy");

	switch (cmd) {
	case MII_POLLSTAT:
		break;

	case MII_MEDIACHG:
		/*
		 * If the interface is not up, don't do anything.
		 */
		if ((mii->mii_ifp->if_flags & IFF_UP) == 0)
			break;

		mii_phy_setmedia(sc);
		break;

	case MII_TICK:
		if (mii_phy_tick(sc) == EJUSTRETURN)
			return (0);
		break;

	case MII_DOWN:
		mii_phy_down(sc);
		return (0);
	}

	/* Update the media status. */
	mii_phy_status(sc);

	/* Callback if something changed. */
	mii_phy_update(sc, cmd);
	return (0);
}
@


1.10
log
@use mii_phy_match()
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.9 2005/01/28 18:27:55 brad Exp $	*/
d51 1
a51 2
	sizeof(struct mii_softc), txphymatch, txphyattach, mii_phy_detach,
	    mii_phy_activate
@


1.9
log
@Get flags passed down to PHY drivers correctly.  This was done on
an adhoc basis in a couple of PHY drivers, this fixes it more generally.

From NetBSD

Fixes panics with aue(4) NICs.
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.8 2004/09/27 18:25:48 brad Exp $	*/
d65 8
d78 1
a78 2
	if (MII_OUI(ma->mii_id1, ma->mii_id2) == MII_OUI_xxTI &&
	    MII_MODEL(ma->mii_id2) == MII_MODEL_xxTI_TNETE2101)
d80 1
d90 1
d92 2
a93 2
	printf(": %s, rev. %d\n", MII_STR_xxTI_TNETE2101,
	    MII_REV(ma->mii_id2));
@


1.8
log
@ANSI protos and some minor cleanup

ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.7 2004/09/26 00:59:58 brad Exp $	*/
d90 1
a90 1
	sc->mii_flags = mii->mii_flags;
@


1.7
log
@Restructure the PHY entry points to use a structure of
entry points instead of descrete function pointers, and
extend this to include a "reset" entry point. Make sure
any PHY-specific reset routine is always used.

From NetBSD

ok mcbride@@
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.6 2004/09/20 06:05:27 brad Exp $	*/
d66 1
a66 4
txphymatch(parent, match, aux)
	struct device *parent;
	void *match;
	void *aux;
d77 1
a77 3
txphyattach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
d101 1
a101 4
txphy_service(sc, mii, cmd)
	struct mii_softc *sc;
	struct mii_data *mii;
	int cmd;
@


1.6
log
@don't include sys/malloc.h, no memory management functions are used
by any of the MII drivers.

From NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.5 2003/06/02 19:08:58 jason Exp $	*/
d61 4
d93 1
a93 2
	sc->mii_service = txphy_service;
	sc->mii_status = ukphy_status;
d97 1
a97 1
	mii_phy_reset(sc);
@


1.5
log
@nuke clase 3 & 4
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.4 2002/03/14 01:26:58 millert Exp $	*/
a36 1
#include <sys/malloc.h>
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.3 2000/10/18 15:07:00 chris Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Jason L. Wright
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.3
log
@Fix compile error (ok nate@@)
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.2 2000/08/26 20:04:18 nate Exp $	*/
d53 2
a54 2
int	txphymatch __P((struct device *, void *, void *));
void	txphyattach __P((struct device *, struct device *, void *));
d65 1
a65 1
int	txphy_service __P((struct mii_softc *, struct mii_data *, int));
@


1.3.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.3 2000/10/18 15:07:00 chris Exp $	*/
d53 2
a54 2
int	txphymatch(struct device *, void *, void *);
void	txphyattach(struct device *, struct device *, void *);
d65 1
a65 1
int	txphy_service(struct mii_softc *, struct mii_data *, int);
@


1.2
log
@sync mii code with netbsd
adds detach functionality for phys
some code cleanup

Nobody really had time to test all of this out, but theo said commit anyway
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.1 1999/12/10 21:48:20 jason Exp $	*/
d136 1
a136 2
		switch (IFM_SUBTYPE(ife->ifm_media)) {
		  mii_phy_setmedia(sc);
@


1.1
log
@simple driver for Texas Instruments TNETE2101 phy
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d57 2
a58 1
	sizeof(struct mii_softc), txphymatch, txphyattach
d96 1
d98 1
d105 1
a105 1
		mii_add_media(sc);
d116 3
d137 1
a137 11
		case IFM_AUTO:
			/*
			 * If we're already in auto mode, just return.
			 */
			if (PHY_READ(sc, MII_BMCR) & BMCR_AUTOEN)
				return (0);
			(void) mii_phy_auto(sc, 1);
			break;
		default:
			mii_phy_setmedia(sc);
		}
d141 1
a141 4
		/*
		 * Only used for autonegotiation.
		 */
		if (IFM_SUBTYPE(ife->ifm_media) != IFM_AUTO)
a142 11

		/*
		 * Is the interface even up?
		 */
		if ((mii->mii_ifp->if_flags & IFF_UP) == 0)
			return (0);

		/*
		 * The TNETE2101 autonegotiation doesn't need to be
		 * kicked; it continues in the background.
		 */
d151 1
a151 1
	ukphy_status(sc);
d154 1
a154 4
	if (sc->mii_active != mii->mii_media_active || cmd == MII_MEDIACHG) {
		(*mii->mii_statchg)(sc->mii_dev.dv_parent);
		sc->mii_active = mii->mii_media_active;
	}
@


1.1.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.3 2000/10/18 15:07:00 chris Exp $	*/
d57 1
a57 2
	sizeof(struct mii_softc), txphymatch, txphyattach, mii_phy_detach,
	    mii_phy_activate
a94 1
	sc->mii_status = ukphy_status;
a95 1
	sc->mii_flags = mii->mii_flags;
d102 1
a102 1
		mii_phy_add_media(sc);
a112 3
	if ((sc->mii_dev.dv_flags & DVF_ACTIVE) == 0)
		return (ENXIO);

d130 12
a141 1
		mii_phy_setmedia(sc);
d145 4
a148 1
		if (mii_phy_tick(sc) == EJUSTRETURN)
d150 11
d169 1
a169 1
	mii_phy_status(sc);
d172 4
a175 1
	mii_phy_update(sc, cmd);
@


1.1.2.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d53 2
a54 2
int	txphymatch(struct device *, void *, void *);
void	txphyattach(struct device *, struct device *, void *);
d65 1
a65 1
int	txphy_service(struct mii_softc *, struct mii_data *, int);
@


1.1.2.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: txphy.c,v 1.1.2.2 2002/03/28 15:34:52 niklas Exp $	*/
d15 5
@


