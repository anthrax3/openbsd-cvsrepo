head	1.8;
access;
symbols
	OPENBSD_5_4:1.7.0.10
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.8
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.3.0.14
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.12
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.10
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.6
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.2.0.8
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.0.22
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.20
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.18
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.16
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.14
	OPENBSD_3_4_BASE:1.1
	UBC_SYNC_A:1.1
	OPENBSD_3_3:1.1.0.12
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.10
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.1
	UBC:1.1.0.6
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.8
date	2013.11.04.14.07.15;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2011.04.27.18.54.19;	author matthew;	state Exp;
branches;
next	1.6;

1.6
date	2011.04.03.17.58.31;	author dlg;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.03.17.55.07;	author dlg;	state Exp;
branches;
next	1.4;

1.4
date	2011.04.03.16.53.20;	author dlg;	state Exp;
branches;
next	1.3;

1.3
date	2007.10.17.15.07.37;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.15.05.33.39;	author krw;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.29.06.05.03;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.8
log
@remove iop(4) driver.  it is entirely unmaintained and supports something
which basically doesn't exist at all.
reminded about it by brad
@
text
@/*	$OpenBSD: ioprbsvar.h,v 1.7 2011/04/27 18:54:19 matthew Exp $	*/

/*
 * Copyright (c) 2001 Niklas Hallqvist
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _I2O_IOPRBSVAR_H_
#define	_I2O_IOPRBSVAR_H_

/*
 * A command contol block, one for each corresponding command index of the
 * controller.
 */
struct ioprbs_ccb {
	TAILQ_ENTRY(ioprbs_ccb) ic_chain;
	struct scsi_xfer *ic_xs;
#if 0
	struct aac_fib *ac_fib;		/* FIB associated with this command */
	bus_addr_t ac_fibphys;		/* bus address of the FIB */
	bus_dmamap_t ac_dmamap_xfer;
	struct aac_sg_table *ac_sgtable;/* pointer to s/g table in command */
#endif
	int ic_timeout;
	u_int32_t ic_blockno;
	u_int32_t ic_blockcnt;
	u_int8_t ic_flags;
#define IOPRBS_ICF_WATCHDOG 	0x1
#define IOPRBS_ICF_COMPLETED 	0x2
};

/* XXX What is correct? */
#define IOPRBS_MAX_CCBS 256

struct ioprbs_softc {
	struct	device sc_dv;			/* Generic device data */
	struct	scsi_link sc_link;	/* Virtual SCSI bus for cache devs */
	struct	iop_initiator sc_ii;
	struct	iop_initiator sc_eventii;

	int	sc_flags;
	int	sc_secperunit;			/* # sectors in total */
	int	sc_secsize;			/* sector size in bytes */
	int	sc_maxxfer;			/* max xfer size in bytes */
	int	sc_maxqueuecnt;			/* maximum h/w queue depth */
	int	sc_queuecnt;			/* current h/w queue depth */

	struct ioprbs_ccb sc_ccbs[IOPRBS_MAX_CCBS];
	TAILQ_HEAD(, ioprbs_ccb) sc_free_ccb, sc_ccbq;
	/* commands on hold for controller resources */
	TAILQ_HEAD(, ioprbs_ccb) sc_ready;
	/* commands which have been returned by the controller */
	struct scsi_iopool sc_iopool;
	struct mutex sc_ccb_mtx;
};

#define	IOPRBS_CLAIMED		0x01
#define	IOPRBS_NEW_EVTMASK	0x02
#define IOPRBS_ENABLED		0x04

#define	IOPRBS_TIMEOUT		(30 * 1000)
#define IOPRBS_BLOCK_SIZE	512

/*
 * Wait this long for a lost interrupt to get detected.
 */
#define IOPRBS_WATCH_TIMEOUT	10000		/* 10000 * 1ms = 10s */

#endif	/* !_I2O_IOPRMSVAR_H_ */
@


1.7
log
@Simplify ioprbs(4) scsi_xfer handling.

XS_POLL handling is still wrong, but reportedly it works, so leaving
it be for now.

ok dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ioprbsvar.h,v 1.6 2011/04/03 17:58:31 dlg Exp $	*/
@


1.6
log
@put iopools back in. ok gcc
@
text
@d1 1
a1 1
/*	$OpenBSD: ioprbsvar.h,v 1.5 2011/04/03 17:55:07 dlg Exp $	*/
a73 2
	LIST_HEAD(, scsi_xfer) sc_queue;
	struct scsi_xfer *sc_queuelast;
@


1.5
log
@back iopools out, it was never compiled.
@
text
@d1 1
a1 1
/*	$OpenBSD: ioprbsvar.h,v 1.4 2011/04/03 16:53:20 dlg Exp $	*/
d76 2
@


1.4
log
@get rid of NO_CCB by moving to iopools.

"be brave" k2k11
@
text
@d1 1
a1 1
/*	$OpenBSD: ioprbsvar.h,v 1.3 2007/10/17 15:07:37 deraadt Exp $	*/
a75 2
	struct scsi_iopool sc_iopool;
	struct mutex sc_ccb_mtx;
@


1.3
log
@de-abstract and just use splbio() and splx()
@
text
@d1 1
a1 1
/*	$OpenBSD: ioprbsvar.h,v 1.2 2005/09/15 05:33:39 krw Exp $	*/
d76 2
@


1.2
log
@Don't fake MODE SENSE page 4 info inside raid drivers, just let sd
fake a geometry. Page 4 info does not get used for size information.
Eliminate now unused union scsi_disk_pages.

ok marco@@ mickey@@ pre-lock.
@
text
@d1 1
a1 1
/*	$OpenBSD: ioprbsvar.h,v 1.1 2001/06/29 06:05:03 niklas Exp $	*/
a88 6


/* XXX These have to become spinlocks in case of SMP */
#define IOPRBS_LOCK(sc) splbio()
#define IOPRBS_UNLOCK(sc, lock) splx(lock)
typedef int ioprbs_lock_t;
@


1.1
log
@Alpha-version (or is that Intel?) of the I2O random block storage driver.
Inspired by ld_iop.c from NetBSD but written by me mostly.  Tested on the
Adaptec 2100S RAID card, got it working at Usenix in a weird hackathon setup.
@
text
@d1 1
a1 1
/*	$OpenBSD: iopspvar.h,v 1.1 2001/06/26 02:50:14 niklas Exp $	*/
a67 3
	int	sc_ncylinders;			/* # cylinders */
	int	sc_nheads;			/* # heads */
	int	sc_nsectors;			/* # sectors per track */
@

