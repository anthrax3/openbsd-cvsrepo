head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.7.0.24
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.22
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.20
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.18
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.14
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.12
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.10
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.8
	OPENBSD_5_0:1.7.0.6
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.4
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.4.0.28
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.10
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.8
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.6
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2015.09.10.18.14.52;	author mpi;	state Exp;
branches;
next	1.7;
commitid	yCNTJc2qmad1KZnd;

1.7
date	2010.07.26.01.56.27;	author guenther;	state Exp;
branches;
next	1.6;

1.6
date	2009.11.09.17.53.39;	author nicm;	state Exp;
branches;
next	1.5;

1.5
date	2009.10.31.14.13.57;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.23.28.04;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.12.20.35.01;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.27.03;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.16.23.49.12;	author mickey;	state Exp;
branches
	1.1.6.1
	1.1.10.1;
next	;

1.1.6.1
date	2001.05.14.22.26.32;	author niklas;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2002.03.28.15.09.10;	author niklas;	state Exp;
branches;
next	1.1.6.3;

1.1.6.3
date	2003.03.28.00.38.33;	author niklas;	state Exp;
branches;
next	1.1.6.4;

1.1.6.4
date	2003.06.07.11.02.34;	author ho;	state Exp;
branches;
next	;

1.1.10.1
date	2002.06.11.03.42.32;	author art;	state Exp;
branches;
next	1.1.10.2;

1.1.10.2
date	2003.05.19.22.14.07;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@kqueue(2) support for wsmouse(4), wskbd(4) and wsmux(4).

Needed for libinput port.

ok guenther@@, miod@@
@
text
@/* $OpenBSD: wseventvar.h,v 1.7 2010/07/26 01:56:27 guenther Exp $ */
/* $NetBSD: wseventvar.h,v 1.1 1998/03/22 14:24:03 drochner Exp $ */

/*
 * Copyright (c) 1996, 1997 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)event_var.h	8.1 (Berkeley) 6/11/93
 */

/*
 * Internal "wscons_event" queue interface for the keyboard and mouse drivers.
 * The drivers are expected not to place events in the queue above spltty(),
 * i.e., are expected to run off serial ports or similar devices.
 */

/* WSEVENT_QSIZE should be a power of two so that `%' is fast */
#define	WSEVENT_QSIZE	256	/* may need tuning; this uses 2k */

struct wseventvar {
	u_int	get;		/* get (read) index (modified synchronously) */
	volatile u_int put;	/* put (write) index (modified by interrupt) */
	struct selinfo sel;	/* process selecting */
	struct process *io;	/* process that opened queue (can get SIGIO) */
	int	wanted;		/* wake up on input ready */
	int	async;		/* send SIGIO on input ready */
	struct wscons_event *q;	/* circular buffer (queue) of events */
};

#define	splwsevent()	spltty()

#define	WSEVENT_WAKEUP(ev) { \
	selwakeup(&(ev)->sel); \
	if ((ev)->wanted) { \
		(ev)->wanted = 0; \
		wakeup((caddr_t)(ev)); \
	} \
	if ((ev)->async) \
		pgsignal((ev)->io->ps_pgrp, SIGIO, 0); \
}

void	wsevent_init(struct wseventvar *);
void	wsevent_fini(struct wseventvar *);
int	wsevent_read(struct wseventvar *, struct uio *, int);
int	wsevent_poll(struct wseventvar *, int, struct proc *);
int	wsevent_kqfilter(struct wseventvar *, struct knote *);

/*
 * PWSEVENT is set just above PSOCK, which is just above TTIPRI, on the
 * theory that mouse and keyboard `user' input should be quick.
 */
#define	PWSEVENT	23
@


1.7
log
@Correct the links between threads, processes, pgrps, and sessions,
so that the process-level stuff is to/from struct process and not
struct proc.  This fixes a bunch of problem cases in rthreads.
Based on earlier work by blambert and myself, but mostly written
at c2k10.

Tested by many: deraadt, sthen, krw, ray, and in snapshots
@
text
@d1 1
a1 1
/* $OpenBSD: wseventvar.h,v 1.6 2009/11/09 17:53:39 nicm Exp $ */
d109 1
@


1.6
log
@Every selwakeup() should have a matching KNOTE() (even if kqueue isn't
supported it doesn't do any harm), so put the KNOTE() in selwakeup() itself and
remove it from any occurences where both are used, except one for kqueue itself
and one in sys_pipe.c (where the selwakeup is under a PIPE_SEL flag).

Based on a diff from tedu.

ok deraadt
@
text
@d1 1
a1 1
/* $OpenBSD: wseventvar.h,v 1.5 2009/10/31 14:13:57 deraadt Exp $ */
d87 1
a87 1
	struct proc *io;	/* process that opened queue (can get SIGIO) */
d102 1
a102 1
		pgsignal((ev)->io->p_pgrp, SIGIO, 0); \
@


1.5
log
@KNOTE() after selwakeup(); ok miod
@
text
@d1 1
a1 1
/* $OpenBSD: wseventvar.h,v 1.4 2003/06/02 23:28:04 millert Exp $ */
a96 1
	KNOTE(&(ev)->sel.si_note, 0); \
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/* $OpenBSD: wseventvar.h,v 1.3 2003/02/12 20:35:01 matthieu Exp $ */
d97 1
@


1.3
log
@in async mode, send SIGIO to the process group of the process that
requested the signal. This is coherent with what /dev/tty does and
the current implementation of fcntl(F_SETOWN). Ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: wseventvar.h,v 1.2 2002/03/14 01:27:03 millert Exp $ */
d55 1
a55 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/* $OpenBSD: wseventvar.h,v 1.1 2000/05/16 23:49:12 mickey Exp $ */
d106 1
a106 1
		psignal((ev)->io, SIGIO); \
@


1.1
log
@import newer wscons source from netbsd.
art@@ said it will make his life easier in alpha
rhands@@ said it is not used in powerpc for now
bjc@@ said that it would make vax port easier
mickey@@ said other platforms can use it, and it's faster
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d109 4
a112 4
void	wsevent_init __P((struct wseventvar *));
void	wsevent_fini __P((struct wseventvar *));
int	wsevent_read __P((struct wseventvar *, struct uio *, int));
int	wsevent_poll __P((struct wseventvar *, int, struct proc *));
@


1.1.10.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: wseventvar.h,v 1.1 2000/05/16 23:49:12 mickey Exp $ */
d109 4
a112 4
void	wsevent_init(struct wseventvar *);
void	wsevent_fini(struct wseventvar *);
int	wsevent_read(struct wseventvar *, struct uio *, int);
int	wsevent_poll(struct wseventvar *, int, struct proc *);
@


1.1.10.2
log
@sync
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d106 1
a106 1
		pgsignal((ev)->io->p_pgrp, SIGIO, 0); \
@


1.1.6.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/* $OpenBSD: wseventvar.h,v 1.1 2000/05/16 23:49:12 mickey Exp $ */
@


1.1.6.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d109 4
a112 4
void	wsevent_init(struct wseventvar *);
void	wsevent_fini(struct wseventvar *);
int	wsevent_read(struct wseventvar *, struct uio *, int);
int	wsevent_poll(struct wseventvar *, int, struct proc *);
@


1.1.6.3
log
@Sync the SMP branch with 3.3
@
text
@d106 1
a106 1
		pgsignal((ev)->io->p_pgrp, SIGIO, 0); \
@


1.1.6.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: wseventvar.h,v 1.1.6.3 2003/03/28 00:38:33 niklas Exp $ */
d55 5
a59 1
 * 3. Neither the name of the University nor the names of its contributors
@


