head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.14
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.12
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.10
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.8
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.22
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.20
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.18
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.16
	OPENBSD_5_0:1.7.0.14
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.12
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.10
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.8
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.4
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.18
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.8
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	SMP:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2014.01.26.17.48.08;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.26.05.42.19;	author ray;	state Exp;
branches;
next	1.6;

1.6
date	2007.05.31.22.23.13;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.29.20.23.13;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.03;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.08.07.42.20;	author maja;	state Exp;
branches
	1.3.4.1
	1.3.8.1;
next	1.2;

1.2
date	2000.08.01.13.51.18;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.16.23.49.12;	author mickey;	state Exp;
branches;
next	;

1.3.4.1
date	2001.05.14.22.26.32;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.03.28.15.09.10;	author niklas;	state Exp;
branches;
next	;

1.3.8.1
date	2002.06.11.03.42.32;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Attempt to make user changes of keyboard layout a bit more `sticky' on wsmux
kernels:
- keyboard drivers will now tell wskbd if the keyboard layout they ask
  for is a default value, or a value they are 100% sure of (either
  because your kernel has a XXXKBD_LAYOUT option, or because the
  driver can tell the keyboard layout, e.g. by the country code on USB
  keyboards which provide it, such as Sun's)
- when attaching a keyboard with a non-default layout, the layout will
  become the default layout of the mux for new keyboard attachments if
  the mux doesn't have a layout set already.
- when changing the keyboard layout of a particular keyboard with an
  ioctl (i.e. using kbd(8) or wsconsctl(8)), the layout will become the
  default layout of the mux for new keyboard attachments.

ok mpi@@
@
text
@/*	$OpenBSD: wsksymvar.h,v 1.7 2008/06/26 05:42:19 ray Exp $	*/
/*	$NetBSD: wsksymvar.h,v 1.8.4.1 2000/07/07 09:50:21 hannken Exp $ */

/*-
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Juergen Hannken-Illjes.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _DEV_WSCONS_WSKSYMVAR_H_
#define _DEV_WSCONS_WSKSYMVAR_H_

#ifndef _KERNEL
#include <sys/types.h>
#endif

typedef u_int16_t keysym_t;
typedef u_int32_t kbd_t;

struct wscons_keymap {
	keysym_t command;
	keysym_t group1[2];
	keysym_t group2[2];
};

struct wscons_keydesc {
	kbd_t	name;				/* name of this map */
	kbd_t	base;				/* map this one is based on */
	int	map_size;			/* size of map */
	const keysym_t *map;			/* the map itself */
};

#ifdef _KERNEL
struct wskbd_mapdata {
	const struct wscons_keydesc *keydesc;
	kbd_t layout;
};

/* layout variant bits ignored by mapping code */
#define KB_HANDLEDBYWSKBD	(KB_METAESC | KB_DEFAULT)

/*
 * Utility functions.
 */
void	wskbd_get_mapentry(const struct wskbd_mapdata *, int,
                                struct wscons_keymap *);
void	wskbd_init_keymap(int, struct wscons_keymap **, int *);
int	wskbd_load_keymap(const struct wskbd_mapdata *, kbd_t,
                               struct wscons_keymap **, int *);
keysym_t wskbd_compose_value(keysym_t *);

#endif

#endif /* !_DEV_WSCONS_WSKSYMVAR_H_ */
@


1.7
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wsksymvar.h,v 1.6 2007/05/31 22:23:13 tedu Exp $	*/
d63 1
a63 1
#define KB_HANDLEDBYWSKBD KB_METAESC
d71 1
a71 1
int	wskbd_load_keymap(const struct wskbd_mapdata *,
@


1.6
log
@switch wskbd hotkeys over to workq.  this eliminates quite a bit of code,
so remove the option too.  if you have audio and wskbd, you have hotkeys.
ok dlg
@
text
@d1 1
a1 1
/*	$OpenBSD: wsksymvar.h,v 1.5 2006/05/29 20:23:13 miod Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.5
log
@Add support for the audio volume keys found on many laptops' builtin
keyboard. These specific keys are posted to a kernel thread which will
issue mixer commands if an audio device exists.

Written by Alexey Vatchenko <avv , mail zp ua> with tweaks by deraadt@@ and I.
@
text
@d1 1
a1 1
/*	$OpenBSD: wsksymvar.h,v 1.4 2002/03/14 01:27:03 millert Exp $	*/
a80 6

/*
 * keysym_t hotkey functions.
 */
void	wskbd_hotkey_init(void);
void	wskbd_hotkey_put(keysym_t);
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: wsksymvar.h,v 1.3 2001/03/08 07:42:20 maja Exp $	*/
d81 6
@


1.3
log
@Make struct wscons_keydesc public. To make it possible for kbd(1) to
list known encodings. -moj  ok @@aaron
@
text
@d1 1
a1 1
/*	$OpenBSD: wsksymvar.h,v 1.2 2000/08/01 13:51:18 mickey Exp $	*/
d75 6
a80 6
void	wskbd_get_mapentry __P((const struct wskbd_mapdata *, int,
                                struct wscons_keymap *));
void	wskbd_init_keymap __P((int, struct wscons_keymap **, int *));
int	wskbd_load_keymap __P((const struct wskbd_mapdata *,
                               struct wscons_keymap **, int *));
keysym_t wskbd_compose_value __P((keysym_t *));
@


1.3.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: wsksymvar.h,v 1.3 2001/03/08 07:42:20 maja Exp $	*/
d75 6
a80 6
void	wskbd_get_mapentry(const struct wskbd_mapdata *, int,
                                struct wscons_keymap *);
void	wskbd_init_keymap(int, struct wscons_keymap **, int *);
int	wskbd_load_keymap(const struct wskbd_mapdata *,
                               struct wscons_keymap **, int *);
keysym_t wskbd_compose_value(keysym_t *);
@


1.3.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: wsksymvar.h,v 1.3 2001/03/08 07:42:20 maja Exp $	*/
@


1.3.4.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d75 6
a80 6
void	wskbd_get_mapentry(const struct wskbd_mapdata *, int,
                                struct wscons_keymap *);
void	wskbd_init_keymap(int, struct wscons_keymap **, int *);
int	wskbd_load_keymap(const struct wskbd_mapdata *,
                               struct wscons_keymap **, int *);
keysym_t wskbd_compose_value(keysym_t *);
@


1.2
log
@update wscons, nothing serious, mostly api fixes for us; from netbsd through aaron@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wsksymvar.h,v 1.1 2000/05/16 23:49:12 mickey Exp $	*/
a55 1
#ifdef _KERNEL
d63 1
@


1.1
log
@import newer wscons source from netbsd.
art@@ said it will make his life easier in alpha
rhands@@ said it is not used in powerpc for now
bjc@@ said that it would make vax port easier
mickey@@ said other platforms can use it, and it's faster
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: wsksymvar.h,v 1.8 1999/12/21 11:59:13 drochner Exp $ */
d48 1
a48 1
typedef u_int16_t kbd_t;
@

