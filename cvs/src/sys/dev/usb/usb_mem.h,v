head	1.15;
access;
symbols
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.4
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.14.0.16
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.10
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.12
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.10
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.8
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.6
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.10
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.6
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.8
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.4
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.2
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.11.0.12
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.10
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.6
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.8
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.4
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.8
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.8
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.9
	UBC:1.8.0.6
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	SMP:1.4.0.2
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3;
locks; strict;
comment	@ * @;


1.15
date	2016.11.30.10.19.18;	author mpi;	state Exp;
branches;
next	1.14;
commitid	loUvSjtnv6JBwpXz;

1.14
date	2013.04.15.09.23.02;	author mglocker;	state Exp;
branches;
next	1.13;

1.13
date	2010.09.29.20.06.38;	author kettenis;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.26.05.42.19;	author ray;	state Exp;
branches;
next	1.11;

1.11
date	2005.06.10.04.11.48;	author martin;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.08.13.19.09;	author nate;	state Exp;
branches;
next	1.9;

1.9
date	2002.07.25.02.18.11;	author nate;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.08.18.10.39;	author aaron;	state Exp;
branches
	1.8.6.1;
next	1.7;

1.7
date	2000.07.04.11.44.24;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.28.19.37.50;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.26.08.39.46;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.11.07.21.30.19;	author fgsch;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	99.09.27.18.03.56;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	99.08.27.09.00.30;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	99.08.13.05.28.04;	author fgsch;	state Exp;
branches;
next	;

1.4.2.1
date	2001.05.14.22.26.24;	author niklas;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2003.03.28.00.38.32;	author niklas;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2004.02.19.10.56.34;	author niklas;	state Exp;
branches;
next	;

1.8.6.1
date	2002.10.29.00.33.32;	author art;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Do not overlay DMA fragment decriptors with free list handling.

This "cleverness" increase the risk of races due to caching and/or
prefetching between the HC and DMA engine.  Many of the bug reports
on bugs@@ involving memory corruptions in usb_allocmem() should be
easier to diagnose when not avoided with this change.

From Marius Strobl, ok kettenis@@
@
text
@/*	$OpenBSD: usb_mem.h,v 1.14 2013/04/15 09:23:02 mglocker Exp $ */
/*	$NetBSD: usb_mem.h,v 1.20 2003/05/03 18:11:42 wiz Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/usb_mem.h,v 1.9 1999/11/17 22:33:47 n_hibma Exp $	*/

/*
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

struct usb_frag_dma;

struct usb_dma_block {
	bus_dma_tag_t tag;
	bus_dmamap_t map;
        caddr_t kaddr;
        bus_dma_segment_t segs[1];
        int nsegs;
        size_t size;
        size_t align;
	struct usb_frag_dma *frags;
	LIST_ENTRY(usb_dma_block) next;
};

#define DMAADDR(dma, o) ((dma)->block->map->dm_segs[0].ds_addr + (dma)->offs + (o))
#define KERNADDR(dma, o) \
	((void *)((char *)((dma)->block->kaddr + (dma)->offs) + (o)))

usbd_status	usb_allocmem(struct usbd_bus *,size_t,size_t, struct usb_dma *);
void		usb_freemem(struct usbd_bus *, struct usb_dma *);
void		usb_syncmem(struct usb_dma *, bus_addr_t, bus_size_t, int);
@


1.14
log
@Get rid of various 'typedef struct' definitions and use plain structure
definitions instead.  We don't change usb.h for now to stay compatible
with userland.

Tested by mpi@@ on macppc and myself on i386.

ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_mem.h,v 1.13 2010/09/29 20:06:38 kettenis Exp $ */
d35 2
d45 1
a45 1
	int fullblock;
@


1.13
log
@Add DMA sync operations.  Fixes problems on macppc with gcc4 because
apparently it reorders stores in a bad way.  Mostly from NetBSD.

earlier diff tested by landry@@ (who noticed the problems on macppc)
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_mem.h,v 1.12 2008/06/26 05:42:19 ray Exp $ */
d35 1
a35 1
typedef struct usb_dma_block {
d45 1
a45 1
} usb_dma_block_t;
d51 3
a53 3
usbd_status	usb_allocmem(usbd_bus_handle,size_t,size_t, usb_dma_t *);
void		usb_freemem(usbd_bus_handle, usb_dma_t *);
void		usb_syncmem(usb_dma_t *, bus_addr_t, bus_size_t, int);
@


1.12
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_mem.h,v 1.11 2005/06/10 04:11:48 martin Exp $ */
d53 1
@


1.11
log
@remove unused code and un-ifdef

ok dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_mem.h,v 1.10 2003/07/08 13:19:09 nate Exp $ */
a20 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.10
log
@Sync USB code with NetBSD.
This includes numerous fixes and paves the way for usb 2.0 support.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_mem.h,v 1.9 2002/07/25 02:18:11 nate Exp $ */
a41 1
#if defined(__NetBSD__) || defined(__OpenBSD__)
a59 28

#elif defined(__FreeBSD__)

/*
 * FreeBSD does not have special functions for DMA memory, so let's keep it
 * simple for now.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/queue.h>
#include <sys/proc.h>
#include <sys/buf.h>
#include <sys/malloc.h>
#include <sys/kernel.h>
#include <vm/vm.h>

#define		usb_allocmem(t,s,a,p)	(*(p) = malloc(s, M_USB, M_NOWAIT), (*(p) == NULL? USBD_NOMEM: USBD_NORMAL_COMPLETION))
#define		usb_freemem(t,p)	(free(*(p), M_USB))

#ifdef __alpha__
#define DMAADDR(dma, o)	(alpha_XXX_dmamap((vm_offset_t) *(dma) + (o)))
#else
#define DMAADDR(dma, o)	(vtophys(*(dma) + (o)))
#endif
#define KERNADDR(dma, o)	((void *) ((char *)*(dma) + (o)))
#endif /* __FreeBSD__ */

@


1.9
log
@get rid of trailing whitespace
@
text
@d1 2
a2 2
/*	$OpenBSD: usb_mem.h,v 1.8 2000/11/08 18:10:39 aaron Exp $ */
/*	$NetBSD: usb_mem.h,v 1.15 2000/06/28 16:39:27 mrg Exp $	*/
d55 3
a57 2
#define DMAADDR(dma) ((dma)->block->map->dm_segs[0].ds_addr + (dma)->offs)
#define KERNADDR(dma) ((void *)((dma)->block->kaddr + (dma)->offs))
d65 1
a65 1
 * FreeBSD does not have special functions for dma memory, so let's keep it
d82 1
a82 1
#define DMAADDR(dma)	(alpha_XXX_dmamap((vm_offset_t) *(dma)))
d84 1
a84 3
#define DMAADDR(dma)	(vtophys(*(dma)))
#endif
#define KERNADDR(dma)	((void *) *(dma))
d86 2
@


1.8
log
@Sync with NetBSD. Too many changes to mention. For now I have skipped
umass.c and ukbd.c as the diffs are a bit hairier.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_mem.h,v 1.7 2000/07/04 11:44:24 fgsch Exp $ */
d63 1
a63 1
/* 
@


1.8.6.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_mem.h,v 1.8 2000/11/08 18:10:39 aaron Exp $ */
d63 1
a63 1
/*
@


1.7
log
@sync with NetBSD... well almost. someone w/ the hw should check umass.
@
text
@d1 2
a2 2
/*	$OpenBSD: usb_mem.h,v 1.6 2000/03/28 19:37:50 aaron Exp $ */
/*	$NetBSD: usb_mem.h,v 1.12 2000/03/12 23:10:29 nathanw Exp $	*/
d58 2
a59 2
usbd_status	usb_allocmem __P((usbd_bus_handle,size_t,size_t, usb_dma_t *));
void		usb_freemem  __P((usbd_bus_handle, usb_dma_t *));
a75 3
#include <vm/pmap.h>

#include <machine/pmap.h>       /* for vtophys */
@


1.6
log
@Much cleaner sync with NetBSD. Some #if defined() magic has been sent in the
form of a diff to augustss@@netbsd.org so that future syncs will be very easy.
This commit also adds support for ADMtek AN986 "Pegasus" based USB Ethernet,
CATC USB-EL1210A based USB Ethernet, and USB Printers (all untested).
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d10 1
a10 1
 * by Lennart Augustsson (augustss@@carlstedt.se) at
@


1.5
log
@Sync with NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_mem.h,v 1.4 1999/11/07 21:30:19 fgsch Exp $	*/
d3 1
@


1.4
log
@sync with NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: usb_mem.h,v 1.10 1999/10/13 18:52:54 augustss Exp $	*/
d54 1
a54 1
#define DMAADDR(dma) ((dma)->block->segs[0].ds_addr + (dma)->offs)
@


1.4.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 3
/*	$OpenBSD: usb_mem.h,v 1.8 2000/11/08 18:10:39 aaron Exp $ */
/*	$NetBSD: usb_mem.h,v 1.15 2000/06/28 16:39:27 mrg Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/usb_mem.h,v 1.9 1999/11/17 22:33:47 n_hibma Exp $	*/
d9 1
a9 1
 * by Lennart Augustsson (lennart@@augustsson.net) at
d54 1
a54 1
#define DMAADDR(dma) ((dma)->block->map->dm_segs[0].ds_addr + (dma)->offs)
d57 2
a58 2
usbd_status	usb_allocmem(usbd_bus_handle,size_t,size_t, usb_dma_t *);
void		usb_freemem(usbd_bus_handle, usb_dma_t *);
d75 3
@


1.4.2.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d63 1
a63 1
/*
@


1.4.2.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d2 1
a2 1
/*	$NetBSD: usb_mem.h,v 1.20 2003/05/03 18:11:42 wiz Exp $	*/
d55 2
a56 3
#define DMAADDR(dma, o) ((dma)->block->map->dm_segs[0].ds_addr + (dma)->offs + (o))
#define KERNADDR(dma, o) \
	((void *)((char *)((dma)->block->kaddr + (dma)->offs) + (o)))
d64 1
a64 1
 * FreeBSD does not have special functions for DMA memory, so let's keep it
d81 1
a81 1
#define DMAADDR(dma, o)	(alpha_XXX_dmamap((vm_offset_t) *(dma) + (o)))
d83 3
a85 1
#define DMAADDR(dma, o)	(vtophys(*(dma) + (o)))
a86 2
#define KERNADDR(dma, o)	((void *) ((char *)*(dma) + (o)))
#endif /* __FreeBSD__ */
@


1.3
log
@Sync with NetBSD.
@
text
@d2 1
a2 1
/*	$NetBSD: usb_mem.h,v 1.8 1999/09/13 19:18:17 augustss Exp $	*/
a78 2
typedef void * usb_dma_t;

d82 3
d86 1
@


1.2
log
@Sync with NetBSD;
Make sure not to call tsleep() from suspend/resume routine.
Move more of the transfer completion processing to HC independent code.
Fix some problems with transfer abort & timeout.
Merge the soft_{td,qh} with the real {td,qh}.  This saves time and space.
@
text
@d1 2
a2 2
/*	$OpenBSD: usb_mem.h,v 1.1 1999/08/13 05:28:04 fgsch Exp $	*/
/*	$NetBSD: usb_mem.h,v 1.4 1999/01/09 12:16:54 augustss Exp $	*/
a53 5
typedef struct {
	struct usb_dma_block *block;
	u_int offs;
} usb_dma_t;

d57 2
a58 2
usbd_status	usb_allocmem __P((bus_dma_tag_t, size_t, size_t, usb_dma_t *));
void		usb_freemem  __P((bus_dma_tag_t, usb_dma_t *));
@


1.1
log
@From NetBSD; USB support.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 1
a42 1
typedef struct usb_block_dma {
d51 1
a51 1
	LIST_ENTRY(usb_block_dma) next;
d55 1
a55 1
	usb_dma_block_t *block;
@

