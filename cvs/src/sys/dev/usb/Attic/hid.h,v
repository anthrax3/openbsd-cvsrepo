head	1.12;
access;
symbols
	OPENBSD_5_8:1.11.0.8
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.10.0.26
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.22
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.20
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.18
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.16
	OPENBSD_5_0:1.10.0.14
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.12
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.10
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.6
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.8
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.4
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.9.0.24
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.22
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.18
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.20
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.16
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.14
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.10
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.12
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.8
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.6
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.9
	UBC:1.4.0.6
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.01.08.15.54.13;	author jcs;	state dead;
branches;
next	1.11;
commitid	kI4H556ZKYkRQGw5;

1.11
date	2014.05.12.09.50.44;	author mpi;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.26.05.42.18;	author ray;	state Exp;
branches;
next	1.9;

1.9
date	2002.07.25.04.07.32;	author nate;	state Exp;
branches;
next	1.8;

1.8
date	2002.07.25.02.18.10;	author nate;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.09.15.06.29;	author nate;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.07.18.29.18;	author nate;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.07.18.08.04;	author nate;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.08.18.10.37;	author aaron;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	2000.07.04.11.44.21;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.28.19.37.46;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.08.13.05.28.03;	author fgsch;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.05.14.22.26.18;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.03.28.00.38.31;	author niklas;	state Exp;
branches;
next	;

1.4.6.1
date	2002.06.11.03.42.30;	author art;	state Exp;
branches;
next	1.4.6.2;

1.4.6.2
date	2002.10.29.00.33.31;	author art;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Move HID support files out of dev/usb into new dev/hid directory

These files aren't USB-specific and were used by the previous
Bluetooth implementation, and will be used by the upcoming
HID-over-i2C implementation

ok deraadt
previous version ok kettenis and mpi
@
text
@/*	$OpenBSD: hid.h,v 1.11 2014/05/12 09:50:44 mpi Exp $ */
/*	$NetBSD: hid.h,v 1.8 2002/07/11 21:14:25 augustss Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/hid.h,v 1.7 1999/11/17 22:33:40 n_hibma Exp $ */

/*
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

enum hid_kind {
	hid_input,
	hid_output,
	hid_feature,
	hid_collection,
	hid_endcollection,
	hid_none
};

struct hid_location {
	u_int32_t size;
	u_int32_t count;
	u_int32_t pos;
};

struct hid_item {
	/* Global */
	int32_t _usage_page;
	int32_t logical_minimum;
	int32_t logical_maximum;
	int32_t physical_minimum;
	int32_t physical_maximum;
	int32_t unit_exponent;
	int32_t unit;
	int32_t report_ID;
	/* Local */
	int32_t usage;
	int32_t usage_minimum;
	int32_t usage_maximum;
	int32_t designator_index;
	int32_t designator_minimum;
	int32_t designator_maximum;
	int32_t string_index;
	int32_t string_minimum;
	int32_t string_maximum;
	int32_t set_delimiter;
	/* Misc */
	int32_t collection;
	int collevel;
	enum hid_kind kind;
	u_int32_t flags;
	/* Location */
	struct hid_location loc;
	/* */
	struct hid_item *next;
};

struct	hid_data *hid_start_parse(const void *, int, enum hid_kind);
void	hid_end_parse(struct hid_data *);
int	hid_get_item(struct hid_data *, struct hid_item *);
int	hid_report_size(const void *, int, enum hid_kind, uint8_t);
int	hid_locate(const void *, int, int32_t, uint8_t, enum hid_kind,
	    struct hid_location *, uint32_t *);
int32_t	hid_get_data(const uint8_t *buf, int, struct hid_location *);
int	hid_is_collection(const void *, int, uint8_t, int32_t);
@


1.11
log
@Backport FreeBSD's HID parser in order to properly parse `moderm'
input device descriptors, notably if they include an Item with an
Usage array (Min-Max range) and others single Usage elements.

Tested by many, thanks!  ok andre@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hid.h,v 1.10 2008/06/26 05:42:18 ray Exp $ */
@


1.10
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hid.h,v 1.9 2002/07/25 04:07:32 nate Exp $ */
d82 8
a89 8
struct hid_data *hid_start_parse(void *d, int len, enum hid_kind kind);
void hid_end_parse(struct hid_data *s);
int hid_get_item(struct hid_data *s, struct hid_item *h);
int hid_report_size(void *buf, int len, enum hid_kind k, u_int8_t id);
int hid_locate(void *desc, int size, u_int32_t usage, u_int8_t id,
	       enum hid_kind kind, struct hid_location *loc, u_int32_t *flags);
u_long hid_get_data(u_char *buf, struct hid_location *loc);
int hid_is_collection(void *desc, int size, u_int8_t id, u_int32_t usage);
@


1.9
log
@update $NetBSD$ tags
@
text
@d1 1
a1 1
/*	$OpenBSD: hid.h,v 1.8 2002/07/25 02:18:10 nate Exp $ */
a20 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.8
log
@get rid of trailing whitespace
@
text
@d1 2
a2 2
/*	$OpenBSD: hid.h,v 1.7 2002/05/09 15:06:29 nate Exp $ */
/*	$NetBSD: hid.h,v 1.7 2001/12/28 17:32:36 augustss Exp $	*/
@


1.7
log
@Sync hid stuff including ukbd, ums, and uhid with NetBSD
This adds a uhidev device which can be thought of as something like a
uhid bus.  It allows more than one ukbd, ums, or uhid to attach to the same
device instance.  This functionality is found on many of the newer keyboards
that have extra buttons.  (The extra buttons show up as uhid device(s)).

Tested by me on i386, dale on macppc, and jason on sparc64
@
text
@d1 1
a1 1
/*	$OpenBSD: hid.h,v 1.6 2002/05/07 18:29:18 nate Exp $ */
d42 1
a42 1
enum hid_kind { 
@


1.6
log
@Meant to commit only ulpt and committed everything.  Most things weren't ready
@
text
@d1 2
a2 2
/*	$OpenBSD: hid.h,v 1.4 2000/11/08 18:10:37 aaron Exp $ */
/*	$NetBSD: hid.h,v 1.6 2000/06/01 14:28:57 augustss Exp $	*/
d43 6
a48 1
	hid_input, hid_output, hid_feature, hid_collection, hid_endcollection
d89 1
a89 1
struct hid_data *hid_start_parse(void *d, int len, int kindset);
d92 3
a94 3
int hid_report_size(void *buf, int len, enum hid_kind k, u_int8_t *id);
int hid_locate(void *desc, int size, u_int32_t usage, enum hid_kind kind,
	       struct hid_location *loc, u_int32_t *flags);
d96 1
a96 1
int hid_is_collection(void *desc, int size, u_int32_t usage);
@


1.5
log
@Sync ulpt driver with NetBSD
@
text
@d2 1
a2 1
/*	$NetBSD: hid.h,v 1.7 2001/12/28 17:32:36 augustss Exp $	*/
d43 1
a43 6
	hid_input,
	hid_output,
	hid_feature,
	hid_collection,
	hid_endcollection,
	hid_none
d84 1
a84 1
struct hid_data *hid_start_parse(void *d, int len, enum hid_kind kind);
d87 3
a89 3
int hid_report_size(void *buf, int len, enum hid_kind k, u_int8_t id);
int hid_locate(void *desc, int size, u_int32_t usage, u_int8_t id,
	       enum hid_kind kind, struct hid_location *loc, u_int32_t *flags);
d91 1
a91 1
int hid_is_collection(void *desc, int size, u_int8_t id, u_int32_t usage);
@


1.4
log
@Sync with NetBSD. Too many changes to mention. For now I have skipped
umass.c and ukbd.c as the diffs are a bit hairier.
@
text
@d1 2
a2 2
/*	$OpenBSD: hid.h,v 1.3 2000/07/04 11:44:21 fgsch Exp $ */
/*	$NetBSD: hid.h,v 1.6 2000/06/01 14:28:57 augustss Exp $	*/
d43 6
a48 1
	hid_input, hid_output, hid_feature, hid_collection, hid_endcollection
d89 1
a89 1
struct hid_data *hid_start_parse(void *d, int len, int kindset);
d92 3
a94 3
int hid_report_size(void *buf, int len, enum hid_kind k, u_int8_t *id);
int hid_locate(void *desc, int size, u_int32_t usage, enum hid_kind kind,
	       struct hid_location *loc, u_int32_t *flags);
d96 1
a96 1
int hid_is_collection(void *desc, int size, u_int32_t usage);
@


1.4.6.1
log
@Sync UBC branch to -current
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: hid.h,v 1.7 2001/12/28 17:32:36 augustss Exp $	*/
d43 1
a43 6
	hid_input,
	hid_output,
	hid_feature,
	hid_collection,
	hid_endcollection,
	hid_none
d84 1
a84 1
struct hid_data *hid_start_parse(void *d, int len, enum hid_kind kind);
d87 3
a89 3
int hid_report_size(void *buf, int len, enum hid_kind k, u_int8_t id);
int hid_locate(void *desc, int size, u_int32_t usage, u_int8_t id,
	       enum hid_kind kind, struct hid_location *loc, u_int32_t *flags);
d91 1
a91 1
int hid_is_collection(void *desc, int size, u_int8_t id, u_int32_t usage);
@


1.4.6.2
log
@sync to -current
@
text
@d2 1
a2 1
/*	$NetBSD: hid.h,v 1.8 2002/07/11 21:14:25 augustss Exp $	*/
d42 1
a42 1
enum hid_kind {
@


1.3
log
@sync with NetBSD... well almost. someone w/ the hw should check umass.
@
text
@d1 2
a2 2
/*	$OpenBSD: hid.h,v 1.2 2000/03/28 19:37:46 aaron Exp $ */
/*	$NetBSD: hid.h,v 1.4 1999/11/18 23:32:26 augustss Exp $	*/
d84 8
a91 9
struct hid_data *hid_start_parse __P((void *d, int len, int kindset));
void hid_end_parse __P((struct hid_data *s));
int hid_get_item __P((struct hid_data *s, struct hid_item *h));
int hid_report_size __P((void *buf, int len, enum hid_kind k, u_int8_t *id));
int hid_locate __P((void *desc, int size, u_int32_t usage, 
		    enum hid_kind kind, struct hid_location *loc, 
		    u_int32_t *flags));
u_long hid_get_data __P((u_char *buf, struct hid_location *loc));
int hid_is_collection __P((void *desc, int size, u_int32_t usage));
@


1.2
log
@Much cleaner sync with NetBSD. Some #if defined() magic has been sent in the
form of a diff to augustss@@netbsd.org so that future syncs will be very easy.
This commit also adds support for ADMtek AN986 "Pegasus" based USB Ethernet,
CATC USB-EL1210A based USB Ethernet, and USB Printers (all untested).
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d10 1
a10 1
 * by Lennart Augustsson (augustss@@carlstedt.se) at
@


1.1
log
@From NetBSD; USB support.
@
text
@d1 3
a3 2
/*	$OpenBSD$	*/
/*	$NetBSD: hid.h,v 1.3 1998/11/25 22:32:04 augustss Exp $	*/
@


1.1.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 3
/*	$OpenBSD: hid.h,v 1.4 2000/11/08 18:10:37 aaron Exp $ */
/*	$NetBSD: hid.h,v 1.6 2000/06/01 14:28:57 augustss Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/hid.h,v 1.7 1999/11/17 22:33:40 n_hibma Exp $ */
d9 1
a9 1
 * by Lennart Augustsson (lennart@@augustsson.net) at
d83 9
a91 8
struct hid_data *hid_start_parse(void *d, int len, int kindset);
void hid_end_parse(struct hid_data *s);
int hid_get_item(struct hid_data *s, struct hid_item *h);
int hid_report_size(void *buf, int len, enum hid_kind k, u_int8_t *id);
int hid_locate(void *desc, int size, u_int32_t usage, enum hid_kind kind,
	       struct hid_location *loc, u_int32_t *flags);
u_long hid_get_data(u_char *buf, struct hid_location *loc);
int hid_is_collection(void *desc, int size, u_int32_t usage);
@


1.1.4.2
log
@Sync the SMP branch with 3.3
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: hid.h,v 1.8 2002/07/11 21:14:25 augustss Exp $	*/
d42 2
a43 7
enum hid_kind {
	hid_input,
	hid_output,
	hid_feature,
	hid_collection,
	hid_endcollection,
	hid_none
d84 1
a84 1
struct hid_data *hid_start_parse(void *d, int len, enum hid_kind kind);
d87 3
a89 3
int hid_report_size(void *buf, int len, enum hid_kind k, u_int8_t id);
int hid_locate(void *desc, int size, u_int32_t usage, u_int8_t id,
	       enum hid_kind kind, struct hid_location *loc, u_int32_t *flags);
d91 1
a91 1
int hid_is_collection(void *desc, int size, u_int8_t id, u_int32_t usage);
@


