head	1.16;
access;
symbols
	OPENBSD_4_7:1.15.0.10
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.12
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.8
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.14
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.16
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.6
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.8
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.11.0.8
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.13
	UBC:1.11.0.6
	UBC_BASE:1.11
	OPENBSD_3_0:1.11.0.4
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	SMP:1.7.0.2
	SMP_BASE:1.7
	kame_19991208:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5;
locks; strict;
comment	@# @;


1.16
date	2010.07.01.00.27.51;	author tedu;	state dead;
branches;
next	1.15;

1.15
date	2007.06.09.12.17.38;	author mbalmer;	state Exp;
branches;
next	1.14;

1.14
date	2003.05.17.06.07.57;	author nate;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.07.18.29.18;	author nate;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.07.18.08.04;	author nate;	state Exp;
branches;
next	1.11;

1.11
date	2000.11.08.18.10.37;	author aaron;	state Exp;
branches
	1.11.6.1;
next	1.10;

1.10
date	2000.07.04.11.44.20;	author fgsch;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.14.22.50.23;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.28.19.37.46;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.12.26.14.59.33;	author fgsch;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	99.11.07.21.30.18;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	99.09.27.18.03.54;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	99.08.31.07.42.50;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	99.08.29.10.35.35;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	99.08.27.09.00.27;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	99.08.23.22.02.09;	author fgsch;	state Exp;
branches;
next	;

1.7.2.1
date	2001.05.14.22.26.17;	author niklas;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2003.06.07.11.02.32;	author ho;	state Exp;
branches;
next	;

1.11.6.1
date	2003.05.19.22.23.39;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.16
log
@any TODO containing the item "Use lock manager locks." is provably wrong.
ok dlg
@
text
@$OpenBSD: TODO,v 1.15 2007/06/09 12:17:38 mbalmer Exp $

Some things that need to be done:
---------------------------------

High priority:
--------------

On a short control transfer the status phase needs to be executed anyway.

Allow interrupt out endpoints. (USB 1.1)

Fix flow control in ucom (copy from com driver).

Use some encapsulation in the upl driver to allow multiple protocols.

Get the uezcom driver (with Doug Ambrisko's firmware) running.


Bug reports:
------------

Bernd Ernesti's problem: host controller halted with umodem

umass problem with Ricoh flash reader

wskbd for X

mel kravitz's problem, lockups with disk and printer

Aaron's problem: Test aue with ohci.


General:
--------

Figure out why uvisor is so slow.
Try to get specs, and check if Linux driver is really right.

Add lots of bus_dmamap_sync().

Do bandwidth accounting.

Use lock manager locks.

Use the pool allocator for TDs et al.

Throw out more USBDI gunk.

Make hub driver notice transition between self and bus powered state.
Some hubs change the number of available ports on this transition. :(
Handle overcurrent conditions.

Make it possible to open any device in a "generic" way, i.e., like ugen.
Perhaps usbdevfs?

Rotate the QHs for bulk transport to get fairer scheduling.

Change HC drivers to queue multiple request for an endpoint
to get better performance.

Do memory deallocation when HC driver is detached.

uaudio problems:
	mixer names are awful, use some heuristics.
	implement selector units
	debug input
	test with more devices

Stylistic changes:
	use usb_ and usbd_ consistently
	rearrange the contents and names of some files (Nick)

Use splsoftusb() or a thread to deliver callbacks.

Add threads to the Ethernet drivers.

Change what's done at watchdog timeout inb if_{a,c,k}ue.c; what we have
now doesn't work because it's done in an interrupt context.

Factor out the common code from the Ethernet drivers and reuse that.

Rewrite HID driver to handle report IDs properly.  Perhaps there should
be a hiddev to which hid with different IDs can attach?

Get rid of hcpriv.

Keyspan serial driver

Clean up umass driver


Documentation:
--------------

Document device driver API.

Document HC driver API.

Update ugen(4)
@


1.15
log
@Add a CVS marker.

ok jsg
@
text
@d1 1
a1 1
$OpenBSD$
@


1.14
log
@sync with NetBSD and add various local hacks to make things work correctly
with our scsi layer
@
text
@d1 2
@


1.13
log
@Meant to commit only ulpt and committed everything.  Most things weren't ready
@
text
@d88 2
@


1.12
log
@Sync ulpt driver with NetBSD
@
text
@a87 2
Clean up umass driver

@


1.11
log
@Sync with NetBSD. Too many changes to mention. For now I have skipped
umass.c and ukbd.c as the diffs are a bit hairier.
@
text
@d88 2
@


1.11.6.1
log
@sync
@
text
@a87 2
Clean up umass driver

@


1.10
log
@sync with NetBSD... well almost. someone w/ the hw should check umass.
@
text
@d4 4
a7 2
Before 1.5:
-----------
a30 2
Y-E data floppy doesn't work.

a37 2
Translate UFI commands?

a86 2

Factor out comon code in network drivers.
@


1.9
log
@Sync with NetBSD.
@
text
@d1 2
a2 2
Some things that need to be done in no particular order:
--------------------------------------------------------
d7 13
a19 1
Reset toggle on SET_INTERFACE (USB 1.1)
d21 9
a29 1
Allow interrupt out endpoints. (USB 1.1)
a30 1
-----------
d32 2
a33 1
Make flow control work in ucom.
d36 1
d55 1
d67 1
a67 1
	implement input
a73 6
Document device driver API.

Document HC driver API.

Handle CLEAR_ENDPOINT_STALL centrally.

d87 14
@


1.8
log
@Much cleaner sync with NetBSD. Some #if defined() magic has been sent in the
form of a diff to augustss@@netbsd.org so that future syncs will be very easy.
This commit also adds support for ADMtek AN986 "Pegasus" based USB Ethernet,
CATC USB-EL1210A based USB Ethernet, and USB Printers (all untested).
@
text
@d7 1
a7 1
Add isoc to OHCI driver.
d9 1
a9 1
Port FreeBSD umass driver.
d13 6
a34 3
Rewrite mouse and keyboard driver to handle devices which use the
report ID.  One way would be to attach ums and ukbd to uhid.

d65 2
d70 1
@


1.7
log
@sync w/ NetBSD
@
text
@d4 8
a11 2
Find race condition in UHCI driver.  Rarely (under heavy USB load) you get a
"uhci_idone: ii=0x%x is done!".  This "cannot happen".
d37 1
a37 5
Add generic ucom layer for serial adapters.

Add isoc to OHCI driver.

Do memory deallocation when HC driver is deactivated.
d53 12
a64 1
Handle CLEAR_ENPOINT_STALL centrally.
@


1.7.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
Some things that need to be done:
---------------------------------
d4 2
a5 33
High priority:
--------------

On a short control transfer the status phase needs to be executed anyway.

Allow interrupt out endpoints. (USB 1.1)

Fix flow control in ucom (copy from com driver).

Use some encapsulation in the upl driver to allow multiple protocols.

Get the uezcom driver (with Doug Ambrisko's firmware) running.


Bug reports:
------------

Bernd Ernesti's problem: host controller halted with umodem

umass problem with Ricoh flash reader

wskbd for X

mel kravitz's problem, lockups with disk and printer

Aaron's problem: Test aue with ohci.


General:
--------

Figure out why uvisor is so slow.
Try to get specs, and check if Linux driver is really right.
d22 3
a24 1
Perhaps usbdevfs?
d31 5
a35 1
Do memory deallocation when HC driver is detached.
d40 1
a40 1
	debug input
a46 20
Use splsoftusb() or a thread to deliver callbacks.

Add threads to the Ethernet drivers.

Change what's done at watchdog timeout inb if_{a,c,k}ue.c; what we have
now doesn't work because it's done in an interrupt context.

Factor out the common code from the Ethernet drivers and reuse that.

Rewrite HID driver to handle report IDs properly.  Perhaps there should
be a hiddev to which hid with different IDs can attach?

Get rid of hcpriv.

Keyspan serial driver


Documentation:
--------------

d51 1
a51 1
Update ugen(4)
@


1.7.2.2
log
@Sync SMP branch to -current
@
text
@a87 2
Clean up umass driver

@


1.6
log
@sync with NetBSD.
@
text
@a43 3
	use NULL not 0
	declare all local definitions static
	rename s/request/xfer/
a44 3
	rename s/r/err/
	use implicit test for no err
	indent continuation lines according to KNF
d50 2
@


1.5
log
@Sync with NetBSD.
@
text
@d4 3
d18 1
a19 2

Add an event mechanism to find out about attach and detach.
@


1.4
log
@sync with NetBSD;
struct device->bdevice.
@
text
@a5 4
Implement isochronous transfer mode.

Implement audio driver.

d14 1
a14 1
Make hub driver note transition between self and bus powered state.
d17 17
a33 2
Make it possible to preallocate DMA buffers to avoid calling the
memory allocator from an interrupt context.
d35 5
a39 1
Move memory allocation and copying to HC independent code.
d41 9
a49 1
Use a TD chain in ohci.c to allow transfers > 8K.
@


1.3
log
@Sync with NetBSD;
Add some comments.  Change a type name.
@
text
@a17 2
Port FreeBSD umass driver.

@


1.2
log
@Sync with NetBSD;
Make sure not to call tsleep() from suspend/resume routine.
Move more of the transfer completion processing to HC independent code.
Fix some problems with transfer abort & timeout.
Merge the soft_{td,qh} with the real {td,qh}.  This saves time and space.
@
text
@d4 2
@


1.1
log
@Todo list and roadmap; from NetBSD.
@
text
@d27 4
@

