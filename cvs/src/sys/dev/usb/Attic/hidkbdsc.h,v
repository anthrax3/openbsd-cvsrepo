head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.16
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.12
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.10
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.01.08.15.54.13;	author jcs;	state dead;
branches;
next	1.4;
commitid	kI4H556ZKYkRQGw5;

1.4
date	2012.07.13.12.33.08;	author shadchin;	state Exp;
branches;
next	1.3;

1.3
date	2012.07.07.09.25.45;	author mlarkin;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.09.14.22.38;	author shadchin;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.31.16.04.50;	author miod;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Move HID support files out of dev/usb into new dev/hid directory

These files aren't USB-specific and were used by the previous
Bluetooth implementation, and will be used by the upcoming
HID-over-i2C implementation

ok deraadt
previous version ok kettenis and mpi
@
text
@/*	$OpenBSD: hidkbdsc.h,v 1.4 2012/07/13 12:33:08 shadchin Exp $	*/
/*      $NetBSD: ukbd.c,v 1.85 2003/03/11 16:44:00 augustss Exp $        */

/*
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#define MAXKEYCODE 6
#define MAXVARS 128

#define MAXKEYS (MAXVARS+2*MAXKEYCODE)

struct hidkbd_variable {
	struct hid_location loc;
	u_int8_t	mask;
	u_int8_t	key;
};

struct hidkbd_data {
	u_int8_t	keycode[MAXKEYCODE];
	u_int8_t	var[MAXVARS];
};

struct hidkbd {
	/* stored data */
	struct hidkbd_data sc_ndata;
	struct hidkbd_data sc_odata;

	/* input reports */
	u_int sc_nvar;
	struct hidkbd_variable *sc_var;

	struct hid_location sc_keycodeloc;
	u_int sc_nkeycode;

	/* output reports */
	struct hid_location sc_numloc;
	struct hid_location sc_capsloc;
	struct hid_location sc_scroloc;
	struct hid_location sc_compose;
	int sc_leds;

	/* state information */
	struct device *sc_device;
	struct device *sc_wskbddev;
	char sc_enabled;

	char sc_console_keyboard;	/* we are the console keyboard */

	char sc_debounce;		/* for quirk handling */
	struct timeout sc_delay;	/* for quirk handling */
	struct hidkbd_data sc_data;	/* for quirk handling */

	/* key repeat logic */
#if defined(WSDISPLAY_COMPAT_RAWKBD)
	int sc_rawkbd;
#endif /* defined(WSDISPLAY_COMPAT_RAWKBD) */

	int sc_polling;
	int sc_npollchar;
	u_int16_t sc_pollchars[MAXKEYS];
};

int	hidkbd_attach(struct device *, struct hidkbd *, int, uint32_t,
	    int, void *, int);
void	hidkbd_attach_wskbd(struct hidkbd *, kbd_t,
	    const struct wskbd_accessops *);
void	hidkbd_bell(u_int, u_int, u_int, int);
void	hidkbd_cngetc(struct hidkbd *, u_int *, int *);
int	hidkbd_detach(struct hidkbd *, int);
int	hidkbd_enable(struct hidkbd *, int);
void	hidkbd_input(struct hidkbd *, uint8_t *, u_int);
int	hidkbd_ioctl(struct hidkbd *, u_long, caddr_t, int, struct proc *);
int	hidkbd_set_leds(struct hidkbd *, int, uint8_t *);

extern int hidkbd_is_console;
@


1.4
log
@Add support compose LED on a usb keyboard

ok mpi@@, from Alexander Polakov <polachok at gmail dot com>
@
text
@d1 1
a1 1
/*	$OpenBSD: hidkbdsc.h,v 1.3 2012/07/07 09:25:45 mlarkin Exp $	*/
@


1.3
log
@

Support for USB keyboards that use a variable for each separate key in the
HID report. Fixes certain gaming-style USB keyboards.

ok miod@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hidkbdsc.h,v 1.2 2011/11/09 14:22:38 shadchin Exp $	*/
d66 1
@


1.2
log
@Auto-repeat keys in WSKBD_RAW mode is not needed.
WSKBD_RAW mode used in X, but X independently implements auto-repeat keys.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hidkbdsc.h,v 1.1 2010/07/31 16:04:50 miod Exp $	*/
d35 1
a35 1
#define MAXMOD 8		/* max 32 */
d37 7
a43 1
#define MAXKEYS (MAXMOD+2*MAXKEYCODE)
a45 1
	u_int32_t	modifiers;
d47 1
d56 2
a57 6
	struct hid_location sc_modloc[MAXMOD];
	u_int sc_nmod;
	struct {
		u_int32_t mask;
		u_int8_t key;
	} sc_mods[MAXMOD];
@


1.1
log
@Factorization of the bluetooth and usb hid input driver logic, to reduce code
duplication and divergence.
Thanks to mlarkin@@ for bluetooth devices tests.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukbd.c,v 1.51 2010/02/22 17:24:20 miod Exp $	*/
a77 1
	struct timeout sc_rawrepeat_ch;
a78 2
#define REP_DELAY1 400
#define REP_DELAYN 100
a79 2
	int sc_nrep;
	char sc_rep[MAXKEYS];
@

