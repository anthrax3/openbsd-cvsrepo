head	1.24;
access;
symbols
	OPENBSD_6_2:1.24.0.4
	OPENBSD_6_2_BASE:1.24
	OPENBSD_6_1:1.24.0.8
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.24.0.6
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.22.0.6
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.22.0.2
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.20.0.4
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.13.0.2
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.11.0.12
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.10
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.8
	OPENBSD_5_0:1.11.0.6
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.4
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.10.0.6
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.8
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.4
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.4.0.16
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.14
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	SMP:1.4.0.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	UBC_SYNC_B:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	UBC:1.3.0.2;
locks; strict;
comment	@ * @;


1.24
date	2016.01.09.02.01.06;	author jcs;	state Exp;
branches;
next	1.23;
commitid	ZZ8BxfBVFIzLR2OU;

1.23
date	2016.01.08.15.54.14;	author jcs;	state Exp;
branches;
next	1.22;
commitid	kI4H556ZKYkRQGw5;

1.22
date	2015.01.09.12.07.50;	author mpi;	state Exp;
branches;
next	1.21;
commitid	SbnTte7ZSgPxxJ3B;

1.21
date	2014.12.11.18.39.27;	author mpi;	state Exp;
branches;
next	1.20;
commitid	L2P5oN9ppxqXZsYS;

1.20
date	2014.04.24.09.40.28;	author mpi;	state Exp;
branches;
next	1.19;

1.19
date	2014.04.15.09.14.27;	author mpi;	state Exp;
branches;
next	1.18;

1.18
date	2014.03.19.08.59.37;	author mpi;	state Exp;
branches;
next	1.17;

1.17
date	2014.03.15.09.50.26;	author mpi;	state Exp;
branches;
next	1.16;

1.16
date	2013.11.19.14.04.07;	author pirofti;	state Exp;
branches;
next	1.15;

1.15
date	2013.11.15.08.17.44;	author pirofti;	state Exp;
branches;
next	1.14;

1.14
date	2013.11.01.12.05.26;	author mpi;	state Exp;
branches;
next	1.13;

1.13
date	2013.05.07.08.44.38;	author mpi;	state Exp;
branches;
next	1.12;

1.12
date	2013.04.15.09.23.02;	author mglocker;	state Exp;
branches;
next	1.11;

1.11
date	2010.08.02.23.17.34;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.26.05.42.18;	author ray;	state Exp;
branches;
next	1.9;

1.9
date	2007.06.14.08.08.21;	author mbalmer;	state Exp;
branches;
next	1.8;

1.8
date	2007.06.06.19.25.49;	author mk;	state Exp;
branches;
next	1.7;

1.7
date	2007.06.04.10.34.04;	author mbalmer;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.18.02.54.11;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.07.04.41.19;	author krw;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.11.02.32.32;	author nate;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.09.15.06.29;	author nate;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2002.05.07.18.29.18;	author nate;	state dead;
branches;
next	1.1;

1.1
date	2002.05.07.18.08.04;	author nate;	state Exp;
branches;
next	;

1.3.2.1
date	2002.06.11.03.42.30;	author art;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2003.05.19.22.24.08;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.24
log
@move UHID_* definitions back to usbhid.h where they were before the
HID separation
@
text
@/*	$OpenBSD: uhidev.h,v 1.23 2016/01/08 15:54:14 jcs Exp $	*/
/*	$NetBSD: uhidev.h,v 1.3 2002/10/08 09:56:17 dan Exp $	*/

/*
 * Copyright (c) 2001 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#define UHIDBUSCF_REPORTID		0
#define UHIDBUSCF_REPORTID_DEFAULT	-1

#define uhidevcf_reportid cf_loc[UHIDBUSCF_REPORTID]
#define UHIDEV_UNK_REPORTID UHIDBUSCF_REPORTID_DEFAULT

struct uhidev_softc {
	struct device sc_dev;		/* base device */
	struct usbd_device *sc_udev;
	struct usbd_interface *sc_iface;/* interface */
	int sc_ifaceno;			/* interface number */
	struct usbd_pipe *sc_ipipe;	/* input interrupt pipe */
	struct usbd_xfer *sc_ixfer;	/* read request */
	int sc_iep_addr;

	u_char *sc_ibuf;
	u_int sc_isize;

	struct usbd_pipe *sc_opipe;	/* output interrupt pipe */
	struct usbd_xfer *sc_oxfer;	/* write request */
	struct usbd_xfer *sc_owxfer;	/* internal write request */
	int sc_oep_addr;

	void *sc_repdesc;
	int sc_repdesc_size;

	u_int sc_nrepid;
	struct uhidev **sc_subdevs;

	int sc_refcnt;
};

struct uhidev {
	struct device sc_dev;		/* base device */
	struct usbd_device *sc_udev;	/* USB device */
	struct uhidev_softc *sc_parent;
	uByte sc_report_id;
	u_int8_t sc_state;
#define	UHIDEV_OPEN	0x01	/* device is open */
	void (*sc_intr)(struct uhidev *, void *, u_int);

	int sc_isize;
	int sc_osize;
	int sc_fsize;
};

struct uhidev_attach_arg {
	struct usb_attach_arg	*uaa;
	struct uhidev_softc	*parent;
	uint8_t			 reportid;
#define	UHIDEV_CLAIM_ALLREPORTID	255
};

void uhidev_get_report_desc(struct uhidev_softc *, void **, int *);
int uhidev_open(struct uhidev *);
void uhidev_close(struct uhidev *);
int uhidev_ioctl(struct uhidev *, u_long, caddr_t, int, struct proc *);
int uhidev_set_report(struct uhidev_softc *, int, int, void *, int);
int uhidev_set_report_async(struct uhidev_softc *, int, int, void *, int);
int uhidev_get_report(struct uhidev_softc *, int, int, void *, int);
int uhidev_get_report_async(struct uhidev_softc *, int, int, void *, int,
    void *, void (*)(void *, int, void *, int));
usbd_status uhidev_write(struct uhidev_softc *, void *, int);
@


1.23
log
@Move HID support files out of dev/usb into new dev/hid directory

These files aren't USB-specific and were used by the previous
Bluetooth implementation, and will be used by the upcoming
HID-over-i2C implementation

ok deraadt
previous version ok kettenis and mpi
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.22 2015/01/09 12:07:50 mpi Exp $	*/
a38 4

#define UHID_INPUT_REPORT 0x01
#define UHID_OUTPUT_REPORT 0x02
#define UHID_FEATURE_REPORT 0x03
@


1.22
log
@Add an asynchronous version of uhidev_get_report(), from David Higgs
with some tweaks.

Nothing use it for the moment, but upcoming upd(4) improvements need
it.
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.21 2014/12/11 18:39:27 mpi Exp $	*/
d39 4
@


1.21
log
@Change uhidev(4) set/get report functions in various way.

Always pass the parent uhidev(4) descriptor corresponding to the single
USB device with multiple reportIDs instead of a child.

Make uhidev_get_report() aware of non NUL reportID by prepending a byte
to the given buffer, just like uhidev_set_report{,async}() already do.

Return the number of bytes written or read upon success and -1 otherwise.
This allow callers to deal with short reads without having do mess with
xfer error codes madness.

Reviewed and tested by David Higgs.
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.20 2014/04/24 09:40:28 mpi Exp $	*/
d94 2
@


1.20
log
@Change the usbd_*_report() family of functions to take a usbd_device
and a infaceno argument instead of an iface pointer.  While here,
remove some unused functions and inlined usbd_read_report_desc since
it is used only once.

This is part of plumbing required to convert the various USB HID devices
to handle multiples report IDs.

ok andre@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.19 2014/04/15 09:14:27 mpi Exp $	*/
d91 3
a93 3
usbd_status uhidev_set_report(struct uhidev *, int, int, void *, int);
usbd_status uhidev_set_report_async(struct uhidev *, int, int, void *, int);
usbd_status uhidev_get_report(struct uhidev *, int, int, void *, int);
@


1.19
log
@Modify the uhidev_*_report() methods to always take a report ID argument
instead of using the default, per-driver, one.  This is a step to move
away from the 1 report ID <-> 1 driver design which is no longer true
since the addition of upd(4).

ok andre@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.18 2014/03/19 08:59:37 mpi Exp $	*/
d44 1
@


1.18
log
@Add a temporary hack to let a subdriver claim all the reportIDs of
a device.  This should be removed once all the drivers attaching to
uhidev(4) are converted.

ok andre@@, sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.17 2014/03/15 09:50:26 mpi Exp $	*/
d90 3
a92 3
usbd_status uhidev_set_report(struct uhidev *, int, void *, int);
usbd_status uhidev_set_report_async(struct uhidev *, int, void *, int);
usbd_status uhidev_get_report(struct uhidev *scd, int type, void *data,int len);
@


1.17
log
@Remove debug leftover.
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.16 2013/11/19 14:04:07 pirofti Exp $	*/
d80 4
a83 4
	struct usb_attach_arg *uaa;
	struct uhidev_softc *parent;
	int reportid;
	int reportsize;
@


1.16
log
@Kill matchlvl usage throughout the usb stack.

Allows us to move forward on cleaning.

Okay mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.15 2013/11/15 08:17:44 pirofti Exp $	*/
a70 1
	int sc_in_rep_size;
@


1.15
log
@Clean-up the HID environment.


This set of drivers were very very dirty.

i/ Clean-up the match/attach multi-casting hackjob
	- stop casting aux to every attach arg in existance
	- be consistent about casting it only to uhidev_attach_arg
	- fetch the usb_attach_arg from above where needed

ii/ Sort out the activate routines
	- leave the deactivation to the parent (uhidev(4))
	- ditch the sc_dying flag in favour of usbd_is_dying()

iii/ Get closer to keeping all the usb hid information in the uhidev
     structure (one uhidev per reportID)
	- store the usbd_device in the uhidev
	- use it consistently instead of always peaking at the parent's
 	  soft state

Okay mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.14 2013/11/01 12:05:26 mpi Exp $	*/
a84 1
	int matchlvl;
@


1.14
log
@Do not abuse the stack of the current process to prepend a report ID
to the report request, use malloc(9) with the appropriate size like
it is done in the synchronous version.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.13 2013/05/07 08:44:38 mpi Exp $	*/
d67 1
@


1.13
log
@When deactivating child devices do not panic if their driver does
not implement an *activate() function.  This could receive more love
but is good enough for the moment to start cleaning useless *activate()
functions.

While here remove unused sc_dying argument.

Tested by and ok mglocker@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.12 2013/04/15 09:23:02 mglocker Exp $	*/
d91 2
a92 2
usbd_status uhidev_set_report(struct uhidev *scd, int type, void *data,int len);
void uhidev_set_report_async(struct uhidev *scd, int type, void *data, int len);
@


1.12
log
@Get rid of various 'typedef struct' definitions and use plain structure
definitions instead.  We don't change usb.h for now to stay compatible
with userland.

Tested by mpi@@ on macppc and myself on i386.

ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.11 2010/08/02 23:17:34 miod Exp $	*/
a62 1
	u_char sc_dying;
@


1.11
log
@Handle USB_GET_REPORT, USB_GET_REPORT_DESC, USB_GET_REPORT_ID and
USB_SET_REPORT ioctls in ukbd and ums.
This allows usbhidctl to be used on these devices e.g. to dump the report
descriptor of troublesome models.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.10 2008/06/26 05:42:18 ray Exp $	*/
d42 4
a45 4
	usbd_device_handle sc_udev;
	usbd_interface_handle sc_iface;	/* interface */
	usbd_pipe_handle sc_ipipe;	/* input interrupt pipe */
	usbd_xfer_handle sc_ixfer;	/* read request */
d51 3
a53 3
	usbd_pipe_handle sc_opipe;	/* output interrupt pipe */
	usbd_xfer_handle sc_oxfer;	/* write request */
	usbd_xfer_handle sc_owxfer;	/* internal write request */
@


1.10
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.9 2007/06/14 08:08:21 mbalmer Exp $	*/
d74 4
d91 1
@


1.9
log
@Move four #defines out of usb_port.h and to the places where they are used.

ok jsg.
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.8 2007/06/06 19:25:49 mk Exp $	*/
a19 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.8
log
@Mechanical removal of USBBASEDEVICE.  No binary change.

Tested by thib and myself.

ok mbalmer jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.7 2007/06/04 10:34:04 mbalmer Exp $	*/
d40 3
@


1.7
log
@Last part of FreeBSD/NetBSD sepcific code removal.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.6 2006/08/18 02:54:11 jason Exp $	*/
d45 1
a45 1
	USBBASEDEVICE sc_dev;		/* base device */
d71 1
a71 1
	USBBASEDEVICE sc_dev;		/* base device */
@


1.6
log
@support for ucycom:
- teach ucom that not all i/o is done via bulk pipes
- teach uhidev that i/o interrupt pipes are distinct
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.5 2006/03/07 04:41:19 krw Exp $	*/
a39 6

#if defined(__NetBSD__)
#include "locators.h"
#include "rnd.h"

#endif
@


1.5
log
@Remove last NRND NetBSDisms from tree.

ok deraadt@@ brad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.4 2002/11/11 02:32:32 nate Exp $	*/
d54 3
a56 2
	usbd_pipe_handle sc_intrpipe;	/* interrupt pipe */
	int sc_ep_addr;
d61 5
d100 1
@


1.4
log
@sync with NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.3 2002/05/09 15:06:29 nate Exp $	*/
a44 3
#if NRND > 0
#include <sys/rnd.h>
#endif
a77 3
#if defined(__NetBSD__) && NRND > 0
        rndsource_element_t     rnd_source;
#endif
@


1.3
log
@Sync hid stuff including ukbd, ums, and uhid with NetBSD
This adds a uhidev device which can be thought of as something like a
uhid bus.  It allows more than one ukbd, ums, or uhid to attach to the same
device instance.  This functionality is found on many of the newer keyboards
that have extra buttons.  (The extra buttons show up as uhid device(s)).

Tested by me on i386, dale on macppc, and jason on sparc64
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: uhidev.h,v 1.2 2001/12/29 18:56:52 augustss Exp $	*/
d43 5
d81 3
@


1.3.2.1
log
@Sync UBC branch to -current
@
text
@@


1.3.2.2
log
@sync
@
text
@d2 1
a2 1
/*	$NetBSD: uhidev.h,v 1.3 2002/10/08 09:56:17 dan Exp $	*/
a42 5
#include "rnd.h"

#if NRND > 0
#include <sys/rnd.h>
#endif
a75 3
#if defined(__NetBSD__) && NRND > 0
        rndsource_element_t     rnd_source;
#endif
@


1.2
log
@Meant to commit only ulpt and committed everything.  Most things weren't ready
@
text
@d1 1
a1 1
/*	$OpenBSD: uhidev.h,v 1.1 2002/05/07 18:08:04 nate Exp $	*/
@


1.1
log
@Sync ulpt driver with NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@

