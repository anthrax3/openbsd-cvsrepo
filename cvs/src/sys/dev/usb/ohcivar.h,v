head	1.38;
access;
symbols
	OPENBSD_6_1:1.37.0.14
	OPENBSD_6_1_BASE:1.37
	OPENBSD_6_0:1.37.0.12
	OPENBSD_6_0_BASE:1.37
	OPENBSD_5_9:1.37.0.6
	OPENBSD_5_9_BASE:1.37
	OPENBSD_5_8:1.37.0.8
	OPENBSD_5_8_BASE:1.37
	OPENBSD_5_7:1.37.0.2
	OPENBSD_5_7_BASE:1.37
	OPENBSD_5_6:1.37.0.4
	OPENBSD_5_6_BASE:1.37
	OPENBSD_5_5:1.34.0.4
	OPENBSD_5_5_BASE:1.34
	OPENBSD_5_4:1.33.0.2
	OPENBSD_5_4_BASE:1.33
	OPENBSD_5_3:1.31.0.10
	OPENBSD_5_3_BASE:1.31
	OPENBSD_5_2:1.31.0.8
	OPENBSD_5_2_BASE:1.31
	OPENBSD_5_1_BASE:1.31
	OPENBSD_5_1:1.31.0.6
	OPENBSD_5_0:1.31.0.4
	OPENBSD_5_0_BASE:1.31
	OPENBSD_4_9:1.31.0.2
	OPENBSD_4_9_BASE:1.31
	OPENBSD_4_8:1.28.0.4
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.28.0.2
	OPENBSD_4_7_BASE:1.28
	OPENBSD_4_6:1.26.0.8
	OPENBSD_4_6_BASE:1.26
	OPENBSD_4_5:1.26.0.4
	OPENBSD_4_5_BASE:1.26
	OPENBSD_4_4:1.26.0.2
	OPENBSD_4_4_BASE:1.26
	OPENBSD_4_3:1.25.0.4
	OPENBSD_4_3_BASE:1.25
	OPENBSD_4_2:1.25.0.2
	OPENBSD_4_2_BASE:1.25
	OPENBSD_4_1:1.21.0.2
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.4
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.20.0.4
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.20.0.2
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.18.0.6
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.18.0.8
	OPENBSD_3_6_BASE:1.18
	SMP_SYNC_A:1.18
	SMP_SYNC_B:1.18
	OPENBSD_3_5:1.18.0.4
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	UBC_SYNC_A:1.17
	OPENBSD_3_3:1.17.0.4
	OPENBSD_3_3_BASE:1.17
	OPENBSD_3_2:1.17.0.2
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.14.0.4
	OPENBSD_3_1_BASE:1.14
	UBC_SYNC_B:1.17
	UBC:1.14.0.2
	UBC_BASE:1.14
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	SMP:1.6.0.2
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5;
locks; strict;
comment	@ * @;


1.38
date	2017.05.26.13.13.50;	author mpi;	state Exp;
branches;
next	1.37;
commitid	Noou6A5iinZbDq9R;

1.37
date	2014.05.16.18.17.03;	author mpi;	state Exp;
branches;
next	1.36;

1.36
date	2014.04.29.21.51.18;	author mpi;	state Exp;
branches;
next	1.35;

1.35
date	2014.03.25.20.27.37;	author mpi;	state Exp;
branches;
next	1.34;

1.34
date	2013.11.01.12.00.54;	author mpi;	state Exp;
branches;
next	1.33;

1.33
date	2013.05.30.16.15.02;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2013.04.15.09.23.01;	author mglocker;	state Exp;
branches;
next	1.31;

1.31
date	2010.12.14.16.13.16;	author jakemsr;	state Exp;
branches;
next	1.30;

1.30
date	2010.09.07.16.21.46;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2010.08.30.21.30.17;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	2009.11.04.19.14.10;	author kettenis;	state Exp;
branches;
next	1.27;

1.27
date	2009.10.13.19.33.17;	author pirofti;	state Exp;
branches;
next	1.26;

1.26
date	2008.06.26.05.42.18;	author ray;	state Exp;
branches;
next	1.25;

1.25
date	2007.06.15.11.41.48;	author mbalmer;	state Exp;
branches;
next	1.24;

1.24
date	2007.06.12.16.26.36;	author mbalmer;	state Exp;
branches;
next	1.23;

1.23
date	2007.06.10.10.15.35;	author mbalmer;	state Exp;
branches;
next	1.22;

1.22
date	2007.03.22.05.53.36;	author pascoe;	state Exp;
branches;
next	1.21;

1.21
date	2006.05.22.15.52.48;	author krw;	state Exp;
branches;
next	1.20;

1.20
date	2005.03.30.14.12.35;	author dlg;	state Exp;
branches;
next	1.19;

1.19
date	2005.03.30.14.02.03;	author dlg;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.08.13.19.09;	author nate;	state Exp;
branches;
next	1.17;

1.17
date	2002.05.07.18.29.18;	author nate;	state Exp;
branches;
next	1.16;

1.16
date	2002.05.07.18.08.04;	author nate;	state Exp;
branches;
next	1.15;

1.15
date	2002.05.02.20.08.04;	author nate;	state Exp;
branches;
next	1.14;

1.14
date	2001.10.31.04.24.44;	author nate;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2001.09.15.20.57.33;	author drahn;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.03.02.20.32;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.11.08.18.10.37;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.07.04.11.44.22;	author fgsch;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.30.16.19.33;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.28.19.37.48;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.26.08.39.45;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.11.07.21.30.19;	author fgsch;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	99.09.27.18.03.55;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	99.08.27.09.00.28;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	99.08.19.08.18.38;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	99.08.16.22.08.48;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	99.08.13.05.28.04;	author fgsch;	state Exp;
branches;
next	;

1.6.2.1
date	2001.05.14.22.26.20;	author niklas;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2001.07.04.10.43.47;	author niklas;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2001.10.31.03.22.49;	author nate;	state Exp;
branches;
next	1.6.2.4;

1.6.2.4
date	2001.11.13.21.10.04;	author niklas;	state Exp;
branches;
next	1.6.2.5;

1.6.2.5
date	2003.03.28.00.38.31;	author niklas;	state Exp;
branches;
next	1.6.2.6;

1.6.2.6
date	2004.02.19.10.56.33;	author niklas;	state Exp;
branches;
next	;

1.14.2.1
date	2002.06.11.03.42.30;	author art;	state Exp;
branches;
next	;


desc
@@


1.38
log
@Prepare ohci_intr1() for IPL_MPSAFE.

Stop manipulating the done list and root hub port status in the interrupt
handler.

Some parts lifted from NetBSD's r1.157 but with functionnal polling and
without leaving WDH interrupts masked after exiting ddb(4).

Fix an splassert() by no longer calling usb_transfer_complete() in the
interrupt handler.

Issue reported by claudio@@, brynet@@ and Jacqueline Jolicoeur.
@
text
@/*	$OpenBSD: ohcivar.h,v 1.37 2014/05/16 18:17:03 mpi Exp $ */
/*	$NetBSD: ohcivar.h,v 1.32 2003/02/22 05:24:17 tsutsui Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/ohcivar.h,v 1.13 1999/11/17 22:33:41 n_hibma Exp $	*/

/*
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

struct ohci_soft_ed {
	struct ohci_ed ed;
	struct ohci_soft_ed *next;
	ohci_physaddr_t physaddr;
};
#define OHCI_SED_SIZE ((sizeof (struct ohci_soft_ed) + OHCI_ED_ALIGN - 1) / OHCI_ED_ALIGN * OHCI_ED_ALIGN)
#define OHCI_SED_CHUNK 128


struct ohci_soft_td {
	struct ohci_td td;
	struct ohci_soft_td *nexttd; /* mirrors nexttd in TD */
	struct ohci_soft_td *dnext; /* next in done list */
	ohci_physaddr_t physaddr;
	LIST_ENTRY(ohci_soft_td) hnext;
	struct usbd_xfer *xfer;
	u_int16_t len;
	u_int16_t flags;
#define OHCI_CALL_DONE	0x0001
#define OHCI_ADD_LEN	0x0002
};
#define OHCI_STD_SIZE ((sizeof (struct ohci_soft_td) + OHCI_TD_ALIGN - 1) / OHCI_TD_ALIGN * OHCI_TD_ALIGN)
#define OHCI_STD_CHUNK 128


struct ohci_soft_itd {
	struct ohci_itd itd;
	struct ohci_soft_itd *nextitd; /* mirrors nexttd in ITD */
	struct ohci_soft_itd *dnext; /* next in done list */
	ohci_physaddr_t physaddr;
	LIST_ENTRY(ohci_soft_itd) hnext;
	struct usbd_xfer *xfer;
	u_int16_t flags;
#ifdef DIAGNOSTIC
	char isdone;
#endif
};
#define OHCI_SITD_SIZE ((sizeof (struct ohci_soft_itd) + OHCI_ITD_ALIGN - 1) / OHCI_ITD_ALIGN * OHCI_ITD_ALIGN)
#define OHCI_SITD_CHUNK 64


#define OHCI_NO_EDS (2*OHCI_NO_INTRS-1)

#define OHCI_HASH_SIZE 128

struct ohci_softc {
	struct usbd_bus sc_bus;		/* base device */
	bus_space_tag_t iot;
	bus_space_handle_t ioh;
	bus_size_t sc_size;
	int sc_flags;			/* misc flags */
#define OHCIF_RHSC_INTR			0x01

	struct usb_dma sc_hccadma;
	struct ohci_hcca *sc_hcca;
	struct ohci_soft_ed *sc_eds[OHCI_NO_EDS];
	u_int sc_bws[OHCI_NO_INTRS];

	u_int32_t sc_eintrs;
	struct ohci_soft_ed *sc_isoc_head;
	struct ohci_soft_ed *sc_ctrl_head;
	struct ohci_soft_ed *sc_bulk_head;

	LIST_HEAD(, ohci_soft_td)  sc_hash_tds[OHCI_HASH_SIZE];
	LIST_HEAD(, ohci_soft_itd) sc_hash_itds[OHCI_HASH_SIZE];

	int sc_noport;
	u_int8_t sc_conf;		/* device configuration */

	char sc_softwake;

	struct ohci_soft_ed *sc_freeeds;
	struct ohci_soft_td *sc_freetds;
	struct ohci_soft_itd *sc_freeitds;

	struct usbd_xfer *sc_intrxfer;

	char sc_vendor[16];
	int sc_id_vendor;

	u_int32_t sc_control;		/* Preserved during suspend/standby */
	u_int32_t sc_intre;
	u_int32_t sc_ival;

	u_int sc_overrun_cnt;
	struct timeval sc_overrun_ntc;

	struct timeout sc_tmo_rhsc;
};

struct ohci_xfer {
	struct usbd_xfer xfer;
};

usbd_status	ohci_checkrev(struct ohci_softc *);
usbd_status	ohci_handover(struct ohci_softc *);
usbd_status	ohci_init(struct ohci_softc *);
int		ohci_intr(void *);
int		ohci_detach(struct device *, int);
int		ohci_activate(struct device *, int);
@


1.37
log
@There is no need to remember which usb(4) device is the child of an USB
host controller because autoconf(9) already does it.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.36 2014/04/29 21:51:18 mpi Exp $ */
d85 2
a110 3

	struct ohci_soft_itd *sc_sidone;
	struct ohci_soft_td *sc_sdone;
@


1.36
log
@Get rid of the per-softc freelist of transfer descriptors and use a
per-driver pool(9) instead.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.35 2014/03/25 20:27:37 mpi Exp $ */
a123 2

	struct device *sc_child;
d134 1
a134 1
int		ohci_detach(struct ohci_softc *, int);
@


1.35
log
@Instead of matching root hubs with a custom address, that only works
because USB_START_ADDR is defined to 0 and the softc is M_ZERO'd,
assume that root hubs are the only devices with a depth of 0.

Root hubs can now happily be detached and reattached.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.34 2013/11/01 12:00:54 mpi Exp $ */
a106 2

	SIMPLEQ_HEAD(, usbd_xfer) sc_free_xfers; /* free xfers */
@


1.34
log
@Move the abort_task storage to the generic USB xfer structure instead
of defining it in every controller specific structure.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.33 2013/05/30 16:15:02 deraadt Exp $ */
a99 1
	u_int8_t sc_addr;		/* device address */
@


1.33
log
@Enforce ca_activate tree-walks over the entire heirarchy for all events,
cleaning up some shutdown-hook related code on the way.
(A few drivers related to sparc are still skipped at kettenis' request)
ok kettenis mlarkin, tested by many others too
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.32 2013/04/15 09:23:01 mglocker Exp $ */
a132 1
	struct usb_task	abort_task;
@


1.32
log
@Get rid of various 'typedef struct' definitions and use plain structure
definitions instead.  We don't change usb.h for now to stay compatible
with userland.

Tested by mpi@@ on macppc and myself on i386.

ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.31 2010/12/14 16:13:16 jakemsr Exp $ */
a117 2

	void *sc_shutdownhook;		/* cookie from shutdown hook */
@


1.31
log
@use the dying flag in struct usbd_bus instead of a private dying flag
in *hci_softc

ok miod@@, krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.30 2010/09/07 16:21:46 deraadt Exp $ */
d35 2
a36 2
typedef struct ohci_soft_ed {
	ohci_ed_t ed;
d39 1
a39 1
} ohci_soft_ed_t;
d44 2
a45 2
typedef struct ohci_soft_td {
	ohci_td_t td;
d50 1
a50 1
	usbd_xfer_handle xfer;
d55 1
a55 1
} ohci_soft_td_t;
d60 2
a61 2
typedef struct ohci_soft_itd {
	ohci_itd_t itd;
d66 1
a66 1
	usbd_xfer_handle xfer;
d71 1
a71 1
} ohci_soft_itd_t;
d80 1
a80 1
typedef struct ohci_softc {
d86 1
a86 1
	usb_dma_t sc_hccadma;
d88 1
a88 1
	ohci_soft_ed_t *sc_eds[OHCI_NO_EDS];
d92 3
a94 3
	ohci_soft_ed_t *sc_isoc_head;
	ohci_soft_ed_t *sc_ctrl_head;
	ohci_soft_ed_t *sc_bulk_head;
d105 3
a107 3
	ohci_soft_ed_t *sc_freeeds;
	ohci_soft_td_t *sc_freetds;
	ohci_soft_itd_t *sc_freeitds;
d111 1
a111 1
	usbd_xfer_handle sc_intrxfer;
d113 2
a114 2
	ohci_soft_itd_t *sc_sidone;
	ohci_soft_td_t  *sc_sdone;
d131 1
a131 1
} ohci_softc_t;
d138 3
a140 3
usbd_status	ohci_checkrev(ohci_softc_t *);
usbd_status	ohci_handover(ohci_softc_t *);
usbd_status	ohci_init(ohci_softc_t *);
d142 1
a142 1
int		ohci_detach(ohci_softc_t *, int);
@


1.30
log
@remove the powerhook code.  All architectures now use the ca_activate tree
traversal code to suspend/resume
ok oga kettenis blambert
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.29 2010/08/30 21:30:17 deraadt Exp $ */
a130 2

	char sc_dying;
@


1.29
log
@Change powerhooks into activate functions, and provide stub powerhook
functions
ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.28 2009/11/04 19:14:10 kettenis Exp $ */
a118 1
	void *sc_powerhook;		/* cookie from power hook */
a145 1
void		ohci_powerhook(int, void *);
@


1.28
log
@Get rid of __HAVE_GENERIC_SOFT_INTERRUPTS now that all our platforms support it.

ok jsing@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.27 2009/10/13 19:33:17 pirofti Exp $ */
d147 1
a147 1
void		ohci_power(int, void *);
@


1.27
log
@Get rid of devact enum, substitute it with an int and coresponding defines.

This is needed for the addition of further suspend/resume actions.

Okay deraadt@@, marco@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.26 2008/06/26 05:42:18 ray Exp $ */
a102 1
#ifdef __HAVE_GENERIC_SOFT_INTERRUPTS
a103 1
#endif /* __HAVE_GENERIC_SOFT_INTERRUPTS */
@


1.26
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.25 2007/06/15 11:41:48 mbalmer Exp $ */
d148 1
a148 1
int		ohci_activate(struct device *, enum devact);
@


1.25
log
@Replace the USB_USE_SOFTINTR macro with __HAVE_GENERIC_SOFT_INTTERUPTS
(which was used to define USB_USE_SOFTINTR).

No binary changes.

ok dlg, mk.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.24 2007/06/12 16:26:36 mbalmer Exp $ */
a20 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.24
log
@Remove the definition and use of the device_ptr_t which was a struct device *.

No binary change.

ok mk.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.23 2007/06/10 10:15:35 mbalmer Exp $ */
d110 1
a110 1
#ifdef USB_USE_SOFTINTR
d112 1
a112 1
#endif /* USB_USE_SOFTINTR */
@


1.23
log
@Remove definitions and usage of usb_callout and related macros.  These macros
were used as a layer of confusion^Wabstraction around the timeout(9) API.

No binary change.

ok jsg.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.22 2007/03/22 05:53:36 pascoe Exp $ */
d140 1
a140 1
	device_ptr_t sc_child;
d155 1
a155 1
int		ohci_activate(device_ptr_t, enum devact);
@


1.22
log
@Perform legacy emulation handover for USB1 companion controllers immediately
but defer the remainder of their initialisation until after the other devices
on their PCI bus have attached.  This ensures that any USB2 controller has also
completed its initialisation before we start to initialise the USB1 parts.

This minimises the chance that a nasty SMM implementation will trash the USB1
controller's config when it performs legacy emulation handover of the USB2 part.

This time without accidentally leaving the OHCI controller shutdown, and with
some cosmetic fixes.

ok dlg@@, OHCI tests mglocker@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.20 2005/03/30 14:12:35 dlg Exp $ */
d138 1
a138 1
	usb_callout_t sc_tmo_rhsc;
@


1.21
log
@Expunge all #if defined(__NetBSD__) and #if defined(__FreeBSD__) crud.
Misused in many cases anyway.

ok dlg@@
@
text
@d150 2
@


1.20
log
@restore all of the registers on resume to cope with power loss during
suspend which leaves the controller totally unconfigured.

help from and ok pascoe@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.19 2005/03/30 14:02:03 dlg Exp $ */
a127 1
#if defined(__NetBSD__) || defined(__OpenBSD__)
d130 1
a130 1
#endif
a151 1
#if defined(__NetBSD__) || defined(__OpenBSD__)
a154 1
#endif
@


1.19
log
@make the powerhooks the responsibility of the bus ohci is attached to

ok uwe@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.18 2003/07/08 13:19:09 nate Exp $ */
d134 1
@


1.18
log
@Sync USB code with NetBSD.
This includes numerous fixes and paves the way for usb 2.0 support.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.17 2002/05/07 18:29:18 nate Exp $ */
d155 1
@


1.17
log
@Meant to commit only ulpt and committed everything.  Most things weren't ready
@
text
@d1 2
a2 2
/*	$OpenBSD: ohcivar.h,v 1.15 2002/05/02 20:08:04 nate Exp $ */
/*	$NetBSD: ohcivar.h,v 1.28 2001/09/28 23:57:21 augustss Exp $	*/
d110 4
d145 5
a149 1
void	ohci_reset(ohci_softc_t *);
a155 3
Static void		ohci_rhsc_enable(void *sc);

#define MS_TO_TICKS(ms) ((ms) * hz / 1000)
@


1.16
log
@Sync ulpt driver with NetBSD
@
text
@d2 1
a2 1
/*	$NetBSD: ohcivar.h,v 1.30 2001/12/31 12:20:35 augustss Exp $	*/
a108 1
	char sc_softwake;
d141 1
a141 7
struct ohci_xfer {
	struct usbd_xfer xfer;
	struct usb_task	abort_task;
};

#define OXFER(xfer) ((struct ehci_xfer *)(xfer))

d148 1
@


1.15
log
@prefix structure members to avoid name clashes.
From NetBSD
@
text
@d1 2
a2 2
/*	$OpenBSD: ohcivar.h,v 1.14 2001/10/31 04:24:44 nate Exp $ */
/*	$NetBSD: ohcivar.h,v 1.28 2001/09/28 23:57:21 augustss Exp $	*/
d109 1
d142 7
a148 1
void	ohci_reset(ohci_softc_t *);
a154 1
Static void		ohci_rhsc_enable(void *sc);
@


1.14
log
@Synchronize usb code with NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.13 2001/09/15 20:57:33 drahn Exp $ */
d141 1
@


1.14.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.14 2001/10/31 04:24:44 nate Exp $ */
a140 1
void	ohci_reset(ohci_softc_t *);
@


1.13
log
@Add a timer to reinable the OHCI RHSC (Root Hub Status Change)
interrupt after one second. Originally the interrupt was disabled
permanently after it fired once. This causes futher hot plug/removals
to stop working. However the interrupt will fire several times in succession
as a device is inserted/removed. This effectively debounces the interrupt.

Apparently only some systems actually plug directly into the root hub:
Most PCI cards do not, however newer apple motherboards all do.

This was sent around for review some time back and again recently, this
time with no feedback.
@
text
@d1 2
a2 2
/*	$OpenBSD: ohcivar.h,v 1.12 2001/05/03 02:20:32 aaron Exp $ */
/*	$NetBSD: ohcivar.h,v 1.27 2001/02/21 10:19:30 minoura Exp $	*/
d134 2
a137 3
#if defined(__OpenBSD__)
	struct timeout sc_tmo_rhsc;
#endif
@


1.12
log
@Sync with NetBSD. Tested with a USB keyboard, USB mouse, and three different
kue(4) Ethernet devices.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.11 2000/11/08 18:10:37 aaron Exp $ */
d136 3
d148 1
@


1.11
log
@Sync with NetBSD. Too many changes to mention. For now I have skipped
umass.c and ukbd.c as the diffs are a bit hairier.
@
text
@d1 2
a2 2
/*	$OpenBSD: ohcivar.h,v 1.10 2000/07/04 11:44:22 fgsch Exp $ */
/*	$NetBSD: ohcivar.h,v 1.24 2000/06/01 14:28:58 augustss Exp $	*/
d128 5
@


1.10
log
@sync with NetBSD... well almost. someone w/ the hw should check umass.
@
text
@d1 2
a2 2
/*	$OpenBSD: ohcivar.h,v 1.9 2000/03/30 16:19:33 aaron Exp $ */
/*	$NetBSD: ohcivar.h,v 1.21 2000/03/29 01:46:27 augustss Exp $	*/
d134 2
a135 2
usbd_status	ohci_init __P((ohci_softc_t *));
int		ohci_intr __P((void *));
d137 2
a138 2
int		ohci_detach __P((ohci_softc_t *, int));
int		ohci_activate __P((device_ptr_t, enum devact));
@


1.9
log
@Sync with NetBSD. USB Ethernet drivers should work now.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.8 2000/03/28 19:37:48 aaron Exp $ */
d10 1
a10 1
 * by Lennart Augustsson (augustss@@carlstedt.se) at
d91 1
@


1.8
log
@Much cleaner sync with NetBSD. Some #if defined() magic has been sent in the
form of a diff to augustss@@netbsd.org so that future syncs will be very easy.
This commit also adds support for ADMtek AN986 "Pegasus" based USB Ethernet,
CATC USB-EL1210A based USB Ethernet, and USB Printers (all untested).
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: ohcivar.h,v 1.20 2000/02/22 11:30:55 augustss Exp $	*/
d50 1
d66 1
d70 1
d72 6
d82 1
d102 2
a103 1
	LIST_HEAD(, ohci_soft_td) sc_hash_tds[OHCI_HASH_SIZE];
d117 2
a118 1
	ohci_physaddr_t sc_done;
d129 2
@


1.7
log
@Sync with NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.6 1999/11/07 21:30:19 fgsch Exp $	*/
d3 1
@


1.6
log
@sync with NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD: ohcivar.h,v 1.5 1999/09/27 18:03:55 fgsch Exp $	*/
/*	$NetBSD: ohcivar.h,v 1.11 1999/09/15 21:14:03 augustss Exp $	*/
d55 1
a55 1
	usbd_request_handle reqh;
d64 8
d87 1
d99 3
d103 3
a105 1
	usbd_request_handle sc_intrreqh;
d110 5
a114 1
	void *sc_powerhook;
d120 1
d123 1
@


1.6.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 3
/*	$OpenBSD: ohcivar.h,v 1.11 2000/11/08 18:10:37 aaron Exp $ */
/*	$NetBSD: ohcivar.h,v 1.24 2000/06/01 14:28:58 augustss Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/ohcivar.h,v 1.13 1999/11/17 22:33:41 n_hibma Exp $	*/
d9 1
a9 1
 * by Lennart Augustsson (lennart@@augustsson.net) at
a48 1

d55 1
a55 1
	usbd_xfer_handle xfer;
a63 17

typedef struct ohci_soft_itd {
	ohci_itd_t itd;
	struct ohci_soft_itd *nextitd; /* mirrors nexttd in ITD */
	struct ohci_soft_itd *dnext; /* next in done list */
	ohci_physaddr_t physaddr;
	LIST_ENTRY(ohci_soft_itd) hnext;
	usbd_xfer_handle xfer;
	u_int16_t flags;
#ifdef DIAGNOSTIC
	char isdone;
#endif
} ohci_soft_itd_t;
#define OHCI_SITD_SIZE ((sizeof (struct ohci_soft_itd) + OHCI_ITD_ALIGN - 1) / OHCI_ITD_ALIGN * OHCI_ITD_ALIGN)
#define OHCI_SITD_CHUNK 64


a71 1
	bus_size_t sc_size;
a78 1
	ohci_soft_ed_t *sc_isoc_head;
d82 1
a82 2
	LIST_HEAD(, ohci_soft_td)  sc_hash_tds[OHCI_HASH_SIZE];
	LIST_HEAD(, ohci_soft_itd) sc_hash_itds[OHCI_HASH_SIZE];
a89 5
	ohci_soft_itd_t *sc_freeitds;

	SIMPLEQ_HEAD(, usbd_xfer) sc_free_xfers; /* free xfers */

	usbd_xfer_handle sc_intrxfer;
d91 1
a91 2
	ohci_soft_itd_t *sc_sidone;
	ohci_soft_td_t  *sc_sdone;
d96 1
a96 5
#if defined(__NetBSD__) || defined(__OpenBSD__)
	void *sc_powerhook;		/* cookie from power hook */
	void *sc_shutdownhook;		/* cookie from shutdown hook */
#endif

a97 2

	char sc_dying;
d100 4
a103 6
usbd_status	ohci_init(ohci_softc_t *);
int		ohci_intr(void *);
#if defined(__NetBSD__) || defined(__OpenBSD__)
int		ohci_detach(ohci_softc_t *, int);
int		ohci_activate(device_ptr_t, enum devact);
#endif
@


1.6.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: ohcivar.h,v 1.27 2001/02/21 10:19:30 minoura Exp $	*/
a127 5
	u_int32_t sc_control;		/* Preserved during suspend/standby */
	u_int32_t sc_intre;

	u_int sc_overrun_cnt;
	struct timeval sc_overrun_ntc;
@


1.6.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.6.2.2 2001/07/04 10:43:47 niklas Exp $ */
a135 3
#if defined(__OpenBSD__)
	struct timeout sc_tmo_rhsc;
#endif
a144 1
Static void		ohci_rhsc_enable(void *sc);
@


1.6.2.4
log
@Merge in -current
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: ohcivar.h,v 1.28 2001/09/28 23:57:21 augustss Exp $	*/
a133 2
	usb_callout_t sc_tmo_rhsc;

d136 3
@


1.6.2.5
log
@Sync the SMP branch with 3.3
@
text
@a140 1
void	ohci_reset(ohci_softc_t *);
@


1.6.2.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d2 1
a2 1
/*	$NetBSD: ohcivar.h,v 1.32 2003/02/22 05:24:17 tsutsui Exp $	*/
a109 4
#ifdef USB_USE_SOFTINTR
	char sc_softwake;
#endif /* USB_USE_SOFTINTR */

d141 1
a141 5
struct ohci_xfer {
	struct usbd_xfer xfer;
	struct usb_task	abort_task;
};

d148 3
@


1.5
log
@Sync with NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a71 5
#if defined(__NetBSD__) || defined(__OpenBSD__)
	void *sc_ih;			/* interrupt vectoring */

	/* XXX should keep track of all DMA memory */
#endif /* __NetBSD__ || defined(__OpenBSD__) */
d102 1
a102 1
int		ohci_detach __P((device_ptr_t, int));
a105 9

#ifdef USB_DEBUG
#define DPRINTF(x)	if (ohcidebug) printf x
#define DPRINTFN(n,x)	if (ohcidebug>(n)) printf x
extern int ohcidebug;
#else
#define DPRINTF(x)
#define DPRINTFN(n,x)
#endif
@


1.4
log
@Sync with NetBSD;
Make sure not to call tsleep() from suspend/resume routine.
Move more of the transfer completion processing to HC independent code.
Fix some problems with transfer abort & timeout.
Merge the soft_{td,qh} with the real {td,qh}.  This saves time and space.
@
text
@d1 2
a2 2
/*	$OpenBSD: ohcivar.h,v 1.3 1999/08/19 08:18:38 fgsch Exp $	*/
/*	$NetBSD: ohcivar.h,v 1.6 1999/08/14 14:49:31 augustss Exp $	*/
d59 1
a59 1
#define OHCI_SET_LEN	0x0002
a74 1
	bus_dma_tag_t sc_dmatag;	/* DMA tag */
a97 2
	int sc_intrs;

d100 3
d107 2
@


1.3
log
@Sync with NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: ohcivar.h,v 1.2 1999/08/16 22:08:48 fgsch Exp $	*/
d42 1
a42 1
	ohci_ed_t *ed;
d46 2
a47 1
#define OHCI_ED_CHUNK 256
d50 1
a50 1
	ohci_td_t *td;
a54 1
	/*ohci_soft_ed_t *sed;*/
d61 2
a62 1
#define OHCI_TD_CHUNK 256
@


1.2
log
@Sync with NetBSD. Mostly FreeBSD related changes.
Diffs sent to augustsson.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d76 1
a76 1
#endif /* __NetBSD__ */
@


1.1
log
@From NetBSD; USB support.
@
text
@d2 1
a2 1
/*	$NetBSD: ohcivar.h,v 1.5 1999/05/20 09:52:35 augustss Exp $	*/
d69 2
a72 2
	bus_space_tag_t iot;
	bus_space_handle_t ioh;
d76 1
a76 5

#elif defined(__FreeBSD__)
        int             sc_iobase;
	int             unit;
#endif /* __FreeBSD__ */
@

