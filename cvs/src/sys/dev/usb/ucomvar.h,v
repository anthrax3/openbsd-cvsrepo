head	1.18;
access;
symbols
	OPENBSD_6_1:1.18.0.18
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.16
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.10
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.12
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.4
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.8
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.6
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.17.0.20
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.18
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.16
	OPENBSD_5_0:1.17.0.14
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.12
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.10
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.6
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.8
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.4
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.2
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.16.0.4
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.2
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.14.0.2
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.4
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.12.0.6
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.4
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.11.0.12
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.8
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.6
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.11
	UBC:1.7.0.2
	UBC_BASE:1.7
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	SMP:1.6.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3;
locks; strict;
comment	@ * @;


1.18
date	2013.04.15.09.23.02;	author mglocker;	state Exp;
branches;
next	1.17;

1.17
date	2008.06.26.05.42.18;	author ray;	state Exp;
branches;
next	1.16;

1.16
date	2007.06.14.08.08.21;	author mbalmer;	state Exp;
branches;
next	1.15;

1.15
date	2007.06.11.16.30.31;	author mbalmer;	state Exp;
branches;
next	1.14;

1.14
date	2006.08.18.02.54.11;	author jason;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.27.08.19.39;	author dlg;	state Exp;
branches;
next	1.12;

1.12
date	2005.01.10.08.17.49;	author dlg;	state Exp;
branches;
next	1.11;

1.11
date	2002.07.10.03.09.34;	author nate;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.07.18.29.18;	author nate;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.07.18.08.04;	author nate;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.30.20.45.34;	author nordin;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.31.04.24.44;	author nate;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2001.05.03.02.20.33;	author aaron;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.11.08.18.10.38;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.04.11.44.22;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.14.22.50.25;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.12.16.19.12;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.05.00.29.14;	author aaron;	state Exp;
branches;
next	;

1.6.2.1
date	2001.05.14.22.26.20;	author niklas;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2001.07.04.10.43.50;	author niklas;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2001.11.13.21.10.04;	author niklas;	state Exp;
branches;
next	1.6.2.4;

1.6.2.4
date	2002.03.06.02.11.47;	author niklas;	state Exp;
branches;
next	1.6.2.5;

1.6.2.5
date	2003.03.28.00.38.31;	author niklas;	state Exp;
branches;
next	;

1.7.2.1
date	2002.01.31.22.55.39;	author niklas;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2002.06.11.03.42.30;	author art;	state Exp;
branches;
next	1.7.2.3;

1.7.2.3
date	2002.10.29.00.33.32;	author art;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Get rid of various 'typedef struct' definitions and use plain structure
definitions instead.  We don't change usb.h for now to stay compatible
with userland.

Tested by mpi@@ on macppc and myself on i386.

ok mpi@@
@
text
@/*	$OpenBSD: ucomvar.h,v 1.17 2008/06/26 05:42:18 ray Exp $ */
/*	$NetBSD: ucomvar.h,v 1.10 2001/12/31 12:15:21 augustss Exp $	*/

/*
 * Copyright (c) 1999 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#define UCOMBUSCF_PORTNO		0
#define UCOMBUSCF_PORTNO_DEFAULT	-1

#define ucomcf_portno cf_loc[UCOMBUSCF_PORTNO]
#define UCOM_UNK_PORTNO UCOMBUSCF_PORTNO_DEFAULT

struct	ucom_softc;

struct ucom_methods {
	void (*ucom_get_status)(void *sc, int portno, u_char *lsr, u_char *msr);
	void (*ucom_set)(void *sc, int portno, int reg, int onoff);
#define UCOM_SET_DTR 1
#define UCOM_SET_RTS 2
#define UCOM_SET_BREAK 3
	int (*ucom_param)(void *sc, int portno, struct termios *);
	int (*ucom_ioctl)(void *sc, int portno, u_long cmd,
			  caddr_t data, int flag, struct proc *p);
	int (*ucom_open)(void *sc, int portno);
	void (*ucom_close)(void *sc, int portno);
	void (*ucom_read)(void *sc, int portno, u_char **ptr, u_int32_t *count);
	void (*ucom_write)(void *sc, int portno, u_char *to, u_char *from,
			   u_int32_t *count);
};

/* modem control register */
#define	UMCR_RTS	0x02	/* Request To Send */
#define	UMCR_DTR	0x01	/* Data Terminal Ready */

/* line status register */
#define	ULSR_RCV_FIFO	0x80
#define	ULSR_TSRE	0x40	/* Transmitter empty: byte sent */
#define	ULSR_TXRDY	0x20	/* Transmitter buffer empty */
#define	ULSR_BI		0x10	/* Break detected */
#define	ULSR_FE		0x08	/* Framing error: bad stop bit */
#define	ULSR_PE		0x04	/* Parity error */
#define	ULSR_OE		0x02	/* Overrun, lost incoming byte */
#define	ULSR_RXRDY	0x01	/* Byte ready in Receive Buffer */
#define	ULSR_RCV_MASK	0x1f	/* Mask for incoming data or error */

/* modem status register */
/* All deltas are from the last read of the MSR. */
#define	UMSR_DCD	0x80	/* Current Data Carrier Detect */
#define	UMSR_RI		0x40	/* Current Ring Indicator */
#define	UMSR_DSR	0x20	/* Current Data Set Ready */
#define	UMSR_CTS	0x10	/* Current Clear to Send */
#define	UMSR_DDCD	0x08	/* DCD has changed state */
#define	UMSR_TERI	0x04	/* RI has toggled low to high */
#define	UMSR_DDSR	0x02	/* DSR has changed state */
#define	UMSR_DCTS	0x01	/* CTS has changed state */

struct ucom_attach_args {
	int portno;
	int bulkin;
	int bulkout;
	struct uhidev_softc *uhidev;
	u_int ibufsize;
	u_int ibufsizepad;
	u_int obufsize;
	u_int opkthdrlen;
	const char *info;	/* attach message */
	struct usbd_device *device;
	struct usbd_interface *iface;
	struct ucom_methods *methods;
	void *arg;
};

int ucomsubmatch(struct device *, void *, void *);

int ucomprint(void *aux, const char *pnp);
void ucom_status_change(struct ucom_softc *);
@


1.17
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.16 2007/06/14 08:08:21 mbalmer Exp $ */
d94 2
a95 2
	usbd_device_handle device;
	usbd_interface_handle iface;
@


1.16
log
@Move four #defines out of usb_port.h and to the places where they are used.

ok jsg.
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.15 2007/06/11 16:30:31 mbalmer Exp $ */
a19 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.15
log
@Remove the usb_proc_ptr type definition, which was really a 'struct proc *'
only.

No binary change.

ok mk.
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.14 2006/08/18 02:54:11 jason Exp $ */
d40 3
@


1.14
log
@support for ucycom:
- teach ucom that not all i/o is done via bulk pipes
- teach uhidev that i/o interrupt pipes are distinct
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.13 2006/03/27 08:19:39 dlg Exp $ */
d54 1
a54 1
			  caddr_t data, int flag, usb_proc_ptr p);
@


1.13
log
@shrink by removing some unneeded ifdefs
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.12 2005/01/10 08:17:49 dlg Exp $ */
d92 1
@


1.12
log
@add support for calling units (cuaU*)
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.11 2002/07/10 03:09:34 nate Exp $ */
a39 10


#if defined(__NetBSD__)
/* Macros to clear/set/test flags. */
#define SET(t, f)       (t) |= (f)
#define CLR(t, f)       (t) &= ~(f)
#define ISSET(t, f)     ((t) & (f))

#include "locators.h"
#endif
@


1.11
log
@Try to be more portable
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.10 2002/05/07 18:29:18 nate Exp $ */
a112 3
#if defined(__NetBSD__)
int ucomsubmatch(struct device *, struct cfdata *, void *);
#else
a113 1
#endif
@


1.10
log
@Meant to commit only ulpt and committed everything.  Most things weren't ready
@
text
@d1 2
a2 2
/*	$OpenBSD: ucomvar.h,v 1.8 2002/01/30 20:45:34 nordin Exp $ */
/*	$NetBSD: ucomvar.h,v 1.9 2001/01/23 21:56:17 augustss Exp $	*/
d43 5
d64 1
a64 1
			  caddr_t data, int flag, struct proc *p);
d113 2
a114 3
int ucomprint(void *aux, const char *pnp);
#if defined(__OpenBSD__)
int ucomsubmatch(struct device *parent, void *cf, void *aux);
d116 1
a116 1
int ucomsubmatch(struct device *parent, struct cfdata *cf, void *aux);
d118 2
@


1.9
log
@Sync ulpt driver with NetBSD
@
text
@d2 1
a2 1
/*	$NetBSD: ucomvar.h,v 1.10 2001/12/31 12:15:21 augustss Exp $	*/
d59 1
a59 1
			  caddr_t data, int flag, usb_proc_ptr p);
d108 3
a110 2
#if defined(__NetBSD__)
int ucomsubmatch(struct device *, struct cfdata *, void *);
d112 1
a112 1
int ucomsubmatch(struct device *, void *, void *);
a113 2

int ucomprint(void *aux, const char *pnp);
@


1.8
log
@Move SET/CLR/ISSET macros to param.h. fgsch@@ and millert@@ ok
@
text
@d1 2
a2 2
/*	$OpenBSD: ucomvar.h,v 1.7 2001/10/31 04:24:44 nate Exp $ */
/*	$NetBSD: ucomvar.h,v 1.9 2001/01/23 21:56:17 augustss Exp $	*/
d59 1
a59 1
			  caddr_t data, int flag, struct proc *p);
d108 2
a109 3
int ucomprint(void *aux, const char *pnp);
#if defined(__OpenBSD__)
int ucomsubmatch(struct device *parent, void *cf, void *aux);
d111 1
a111 1
int ucomsubmatch(struct device *parent, struct cfdata *cf, void *aux);
d113 2
@


1.7
log
@Synchronize usb code with NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.6 2001/05/03 02:20:33 aaron Exp $ */
a40 5

/* Macros to clear/set/test flags. */
#define SET(t, f)       (t) |= (f)
#define CLR(t, f)       (t) &= ~(f)
#define ISSET(t, f)     ((t) & (f))
@


1.7.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.8 2002/01/30 20:45:34 nordin Exp $ */
d41 5
@


1.7.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.7.2.1 2002/01/31 22:55:39 niklas Exp $ */
@


1.7.2.3
log
@sync to -current
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: ucomvar.h,v 1.10 2001/12/31 12:15:21 augustss Exp $	*/
a42 5
/* Macros to clear/set/test flags. */
#define SET(t, f)       (t) |= (f)
#define CLR(t, f)       (t) &= ~(f)
#define ISSET(t, f)     ((t) & (f))

d59 1
a59 1
			  caddr_t data, int flag, usb_proc_ptr p);
d108 3
a110 2
#if defined(__NetBSD__)
int ucomsubmatch(struct device *, struct cfdata *, void *);
d112 1
a112 1
int ucomsubmatch(struct device *, void *, void *);
a113 2

int ucomprint(void *aux, const char *pnp);
@


1.6
log
@Sync with NetBSD. Tested with a USB keyboard, USB mouse, and three different
kue(4) Ethernet devices.
@
text
@d1 2
a2 2
/*	$OpenBSD: ucomvar.h,v 1.5 2000/11/08 18:10:38 aaron Exp $ */
/*	$NetBSD: ucomvar.h,v 1.8 2000/09/03 19:15:45 augustss Exp $	*/
@


1.6.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d106 1
@


1.6.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.6.2.1 2001/05/14 22:26:20 niklas Exp $ */
a105 1
	const char *info;	/* attach message */
@


1.6.2.3
log
@Merge in -current
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: ucomvar.h,v 1.9 2001/01/23 21:56:17 augustss Exp $	*/
@


1.6.2.4
log
@Merge in trunk
@
text
@d42 5
@


1.6.2.5
log
@Sync the SMP branch with 3.3
@
text
@d2 1
a2 1
/*	$NetBSD: ucomvar.h,v 1.10 2001/12/31 12:15:21 augustss Exp $	*/
a42 5
/* Macros to clear/set/test flags. */
#define SET(t, f)       (t) |= (f)
#define CLR(t, f)       (t) &= ~(f)
#define ISSET(t, f)     ((t) & (f))

d59 1
a59 1
			  caddr_t data, int flag, usb_proc_ptr p);
d108 3
a110 2
#if defined(__NetBSD__)
int ucomsubmatch(struct device *, struct cfdata *, void *);
d112 1
a112 1
int ucomsubmatch(struct device *, void *, void *);
a113 2

int ucomprint(void *aux, const char *pnp);
@


1.5
log
@Sync with NetBSD. Too many changes to mention. For now I have skipped
umass.c and ukbd.c as the diffs are a bit hairier.
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.4 2000/07/04 11:44:22 fgsch Exp $ */
d106 1
@


1.4
log
@sync with NetBSD... well almost. someone w/ the hw should check umass.
@
text
@d1 2
a2 2
/*	$OpenBSD: ucomvar.h,v 1.3 2000/04/14 22:50:25 aaron Exp $ */
/*	$NetBSD: ucomvar.h,v 1.5 2000/04/14 14:21:55 augustss Exp $	*/
d57 2
a58 3
	void (*ucom_get_status)__P((void *sc, int portno, 
				    u_char *lsr, u_char *msr));
	void (*ucom_set)__P((void *sc, int portno, int reg, int onoff));
d62 8
a69 9
	int (*ucom_param)__P((void *sc, int portno, struct termios *));
	int (*ucom_ioctl)__P((void *sc, int portno, u_long cmd, 
			      caddr_t data, int flag, struct proc *p));
	int (*ucom_open)__P((void *sc, int portno));
	void (*ucom_close)__P((void *sc, int portno));
	void (*ucom_read)__P((void *sc, int portno, u_char **ptr, 
			      u_int32_t *count));
	void (*ucom_write)__P((void *sc, int portno, u_char *to, u_char *from,
			       u_int32_t *count));
d105 1
a105 1
	u_int obufsizepad;
d112 1
a112 1
int ucomprint __P((void *aux, const char *pnp));
d114 1
a114 1
int ucomsubmatch __P((struct device *parent, void *match, void *aux));
d116 1
a116 1
int ucomsubmatch __P((struct device *parent, struct cfdata *cf, void *aux));
d118 1
a118 1
void ucom_status_change __P((struct ucom_softc *));
@


1.3
log
@Sync with NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: ucomvar.h,v 1.2 2000/04/12 16:19:12 aaron Exp $ */
d9 1
a9 1
 * by Lennart Augustsson (augustss@@carlstedt.se) at
@


1.2
log
@RCSids.
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: ucomvar.h,v 1.2 2000/02/08 09:18:02 augustss Exp $	*/
d47 1
a47 1
#if !defined(__OpenBSD__)
d66 1
a66 1
	void (*ucom_open)__P((void *sc, int portno));
d68 4
d104 4
d116 1
a116 1
int ucomsubmatch __P((struct device *parent, void *cf, void *aux));
d120 1
a120 1
void ucom_status_change __P((struct ucom_softc *sc));
@


1.1
log
@Add USB modem driver stubs; from NetBSD. Not yet tested.
@
text
@d1 1
@

