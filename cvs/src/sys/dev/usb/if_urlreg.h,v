head	1.15;
access;
symbols
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.16
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.14
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.8
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.10
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.10
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.8
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.6
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.12
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.8
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.10
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.6
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.4
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.2
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.4
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	SMP:1.4.0.6
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	UBC_SYNC_B:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	UBC:1.3.0.2;
locks; strict;
comment	@ * @;


1.15
date	2013.10.28.16.08.08;	author mpi;	state Exp;
branches;
next	1.14;

1.14
date	2013.04.15.09.23.01;	author mglocker;	state Exp;
branches;
next	1.13;

1.13
date	2010.12.06.04.41.39;	author jakemsr;	state Exp;
branches;
next	1.12;

1.12
date	2007.11.25.16.40.03;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.10.10.15.35;	author mbalmer;	state Exp;
branches;
next	1.10;

1.10
date	2007.06.06.19.25.49;	author mk;	state Exp;
branches;
next	1.9;

1.9
date	2007.06.04.10.34.04;	author mbalmer;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.06.04.08.47;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.07.04.41.19;	author krw;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.29.09.51.07;	author dlg;	state Exp;
branches;
next	1.5;

1.5
date	2004.05.19.11.37.00;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.29.02.59.05;	author nate;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	2002.05.07.19.32.49;	author nate;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2002.05.07.18.29.18;	author nate;	state dead;
branches;
next	1.1;

1.1
date	2002.05.07.18.08.04;	author nate;	state Exp;
branches;
next	;

1.3.2.1
date	2002.06.11.03.42.30;	author art;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2002.10.29.00.33.31;	author art;	state Exp;
branches;
next	;

1.4.6.1
date	2004.06.05.23.12.58;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Use the correct value for the Interframe Gap Time 0 bit in the transmit
configuration register and fix a typo.  From Paul A. Patience.
@
text
@/*	$OpenBSD: if_urlreg.h,v 1.14 2013/04/15 09:23:01 mglocker Exp $ */
/*	$NetBSD: if_urlreg.h,v 1.1 2002/03/28 21:09:11 ichiro Exp $	*/
/*
 * Copyright (c) 2001, 2002
 *     Shingo WATANABE <nabe@@nabechan.org>.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the author nor the names of any co-contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#define	URL_IFACE_INDEX		0
#define	URL_CONFIG_NO		1

#define	URL_TX_LIST_CNT		1
#define	URL_RX_LIST_CNT		1

#define	URL_TX_TIMEOUT		1000
#define	URL_TIMEOUT		10000

/* Packet length */
#define	URL_MAX_MTU		1536
#define	URL_MIN_FRAME_LEN	60
#define	URL_BUFSZ		URL_MAX_MTU

/* Request */
#define	URL_REQ_MEM		0x05

#define	URL_CMD_READMEM		1
#define	URL_CMD_WRITEMEM	2

/* Registers */
#define	URL_IDR0		0x0120 /* Ethernet Address, load from 93C46 */
#define	URL_IDR1		0x0121 /* Ethernet Address, load from 93C46 */
#define	URL_IDR2		0x0122 /* Ethernet Address, load from 93C46 */
#define	URL_IDR3		0x0123 /* Ethernet Address, load from 93C46 */
#define	URL_IDR4		0x0124 /* Ethernet Address, load from 93C46 */
#define	URL_IDR5		0x0125 /* Ethernet Address, load from 93C46 */

#define	URL_MAR0		0x0126 /* Multicast register */
#define	URL_MAR1		0x0127 /* Multicast register */
#define	URL_MAR2		0x0128 /* Multicast register */
#define	URL_MAR3		0x0129 /* Multicast register */
#define	URL_MAR4		0x012a /* Multicast register */
#define	URL_MAR5		0x012b /* Multicast register */
#define	URL_MAR6		0x012c /* Multicast register */
#define	URL_MAR7		0x012d /* Multicast register */
#define	URL_MAR			URL_MAR0

#define	URL_CR			0x012e /* Command Register */
#define	 URL_CR_WEPROM		(1<<5) /* EEPROM Write Enable */
#define	 URL_CR_SOFT_RST	(1<<4) /* Software Reset */
#define	 URL_CR_RE		(1<<3) /* Ethernet Receive Enable */
#define	 URL_CR_TE		(1<<2) /* Ethernet Transmit Enable */
#define	 URL_CR_EP3CLREN	(1<<1) /* Enable clearing the performance counter */
#define	 URL_CR_AUTOLOAD	(1<<0) /* Auto-load the contents of 93C46 */

#define	URL_TCR			0x012f /* Transmit Control Register */
#define	 URL_TCR_TXRR1		(1<<7) /* TX Retry Count */
#define	 URL_TCR_TXRR0		(1<<6) /* TX Retry Count */
#define	 URL_TCR_IFG1		(1<<4) /* Interframe Gap Time */
#define	 URL_TCR_IFG0		(1<<3) /* Interframe Gap Time */
#define	 URL_TCR_NOCRC		(1<<0) /* no CRC Append */

#define	URL_RCR			0x0130 /* Receive Configuration Register */
#define	 URL_RCR_TAIL		(1<<7)
#define	 URL_RCR_AER		(1<<6)
#define	 URL_RCR_AR		(1<<5)
#define	 URL_RCR_AM		(1<<4)
#define	 URL_RCR_AB		(1<<3)
#define	 URL_RCR_AD		(1<<2)
#define	 URL_RCR_AAM		(1<<1)
#define	 URL_RCR_AAP		(1<<0)

#define	URL_MSR			0x137 /* Media Status Register */
#define	 URL_MSR_TXFCE		(1<<7)
#define	 URL_MSR_RXFCE		(1<<6)
#define	 URL_MSR_DUPLEX		(1<<4)
#define	 URL_MSR_SPEED_100	(1<<3)
#define	 URL_MSR_LINK		(1<<2)
#define	 URL_MSR_TXPF		(1<<1)
#define	 URL_MSR_RXPF		(1<<0)

#define	URL_PHYADD		0x138 /* MII PHY Address select */
#define	 URL_PHYADD_MASK	0x1f /* MII PHY Address select */

#define	URL_PHYDAT		0x139 /* MII PHY data */

#define	URL_PHYCNT		0x13b /* MII PHY control */
#define	 URL_PHYCNT_PHYOWN	(1<<6) /* Own bit */
#define	 URL_PHYCNT_RWCR	(1<<5) /* MII management data R/W control */
#define	 URL_PHY_PHYOFF_MASK	0x1f /* PHY register offset */

#define	URL_BMCR		0x140 /* Basic mode control register */
#define	URL_BMSR		0x142 /* Basic mode status register */
#define	URL_ANAR		0x144 /* Auto-negotiation advertisement register */
#define	URL_ANLP		0x146 /* Auto-negotiation link partner ability register */


typedef	uWord url_rxhdr_t;	/* Receive Header */
#define	URL_RXHDR_BYTEC_MASK	(0x0fff) /* RX bytes count */
#define	URL_RXHDR_VALID_MASK	(0x1000) /* Valid packet */
#define	URL_RXHDR_RUNTPKT_MASK	(0x2000) /* Runt packet */
#define	URL_RXHDR_PHYPKT_MASK	(0x4000) /* Physical match packet */
#define	URL_RXHDR_MCASTPKT_MASK	(0x8000) /* Multicast packet */

#define	GET_IFP(sc)		(&(sc)->sc_ac.ac_if)
#define	GET_MII(sc)		(&(sc)->sc_mii)

struct url_chain {
	struct url_softc	*url_sc;
	struct usbd_xfer	*url_xfer;
	char			*url_buf;
	struct mbuf		*url_mbuf;
	int			url_idx;
};

struct url_cdata {
	struct url_chain	url_tx_chain[URL_TX_LIST_CNT];
	struct url_chain	url_rx_chain[URL_TX_LIST_CNT];
#if 0
	/* XXX: Interrupt Endpoint is not yet supported! */
	struct url_intrpkg	url_ibuf;
#endif
	int			url_tx_prod;
	int			url_tx_cons;
	int			url_tx_cnt;
	int			url_rx_prod;
};

struct url_softc {
	struct device		sc_dev;	/* base device */
	struct usbd_device	*sc_udev;

	/* USB */
	struct usbd_interface	*sc_ctl_iface;
	/* int			sc_ctl_iface_no; */
	int			sc_bulkin_no; /* bulk in endpoint */
	int			sc_bulkout_no; /* bulk out endpoint */
	int			sc_intrin_no; /* intr in endpoint */
	struct usbd_pipe	*sc_pipe_rx;
	struct usbd_pipe	*sc_pipe_tx;
	struct usbd_pipe	*sc_pipe_intr;
	struct timeout		sc_stat_ch;
	u_int			sc_rx_errs;
	/* u_int		sc_intr_errs; */
	struct timeval		sc_rx_notice;

	/* Ethernet */
	struct arpcom		sc_ac; /* ethernet common */
	struct mii_data		sc_mii;
	struct rwlock		sc_mii_lock;
	int			sc_link;
#define	sc_media url_mii.mii_media
	struct url_cdata	sc_cdata;

        int                     sc_refcnt;

	struct usb_task		sc_tick_task;
	struct usb_task		sc_stop_task;

	u_int16_t		sc_flags;
};
@


1.14
log
@Get rid of various 'typedef struct' definitions and use plain structure
definitions instead.  We don't change usb.h for now to stay compatible
with userland.

Tested by mpi@@ on macppc and myself on i386.

ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.13 2010/12/06 04:41:39 jakemsr Exp $ */
d83 1
a83 1
#define	 URL_TCR_IFG0		(1<<4) /* Interframe Gap Time */
d121 1
a121 1
typedef	uWord url_rxhdr_t;	/* Recive Header */
@


1.13
log
@* replace per-driver dying and/or other state variables with use of
  usbd_deactivete() and usbd_is_dying()
* use usbd_deactivate() in activate()/DEACTIVATE
* convert a few more direct checks of the associated bus' dying flag
  with usbd_is_dying()
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.12 2007/11/25 16:40:03 jmc Exp $ */
d133 1
a133 1
	usbd_xfer_handle	url_xfer;
d154 1
a154 1
	usbd_device_handle	sc_udev;
d157 1
a157 1
	usbd_interface_handle	sc_ctl_iface;
d162 3
a164 3
	usbd_pipe_handle	sc_pipe_rx;
	usbd_pipe_handle	sc_pipe_tx;
	usbd_pipe_handle	sc_pipe_intr;
@


1.12
log
@spelling fixes, from Martynas Venckus;
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.11 2007/06/10 10:15:35 mbalmer Exp $ */
a177 2
	int                     sc_attached;
	int			sc_dying;
@


1.11
log
@Remove definitions and usage of usb_callout and related macros.  These macros
were used as a layer of confusion^Wabstraction around the timeout(9) API.

No binary change.

ok jsg.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.10 2007/06/06 19:25:49 mk Exp $ */
d143 1
a143 1
	/* XXX: Intrrupt Endpoint is not yet supported! */
@


1.10
log
@Mechanical removal of USBBASEDEVICE.  No binary change.

Tested by thib and myself.

ok mbalmer jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.9 2007/06/04 10:34:04 mbalmer Exp $ */
d165 1
a165 1
	usb_callout_t		sc_stat_ch;
@


1.9
log
@Last part of FreeBSD/NetBSD sepcific code removal.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.8 2007/05/06 04:08:47 krw Exp $ */
d153 1
a153 1
	USBBASEDEVICE		sc_dev;	/* base device */
@


1.8
log
@More lockmgr -> rwlock low hanging fruit.

ok dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.7 2006/03/07 04:41:19 krw Exp $ */
a127 3
#if defined(__NetBSD__)
#define	GET_IFP(sc)		(&(sc)->sc_ec.ec_if)
#else
a128 1
#endif
a170 3
#if defined(__NetBSD__)
	struct ethercom		sc_ec; /* ethernet common */
#else
a171 1
#endif
@


1.7
log
@Remove last NRND NetBSDisms from tree.

ok deraadt@@ brad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.6 2004/09/29 09:51:07 dlg Exp $ */
d181 1
a181 1
	struct lock		sc_mii_lock;
@


1.6
log
@from netbsd: if_url.c 1.8, if_urlreg.h 1.2, urlphy.c 1.9 and urlphyreg.h 1.2
via Jonathan Gray
log message:

Remove advertising clauses from code written by Shingo WATANABE.
He has kindly consented it.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.5 2004/05/19 11:37:00 brad Exp $ */
a183 3
#if NRND > 0
	rndsource_element_t	rnd_source;
#endif
@


1.5
log
@remove duplication, use ETHER_ALIGN from if_ether.h
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.4 2002/07/29 02:59:05 nate Exp $ */
d15 1
a15 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Shingo WATANABE.
 * 4. Neither the name of the author nor the names of any co-contributors
@


1.4
log
@Make code more portable
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.3 2002/05/07 19:32:49 nate Exp $ */
a43 3

#define	ETHER_ALIGN		2

@


1.4.6.1
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d44 3
@


1.3
log
@Add a driver for Realtek RTL8150L based ethernet devices
From NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d134 3
d138 1
d181 3
d185 1
@


1.3.2.1
log
@Sync UBC branch to -current
@
text
@@


1.3.2.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.3.2.1 2002/06/11 03:42:30 art Exp $ */
a133 3
#if defined(__NetBSD__)
#define	GET_IFP(sc)		(&(sc)->sc_ec.ec_if)
#else
a134 1
#endif
a176 3
#if defined(__NetBSD__)
	struct ethercom		sc_ec; /* ethernet common */
#else
a177 1
#endif
@


1.2
log
@Meant to commit only ulpt and committed everything.  Most things weren't ready
@
text
@d1 1
a1 1
/*	$OpenBSD: if_urlreg.h,v 1.1 2002/05/07 18:08:04 nate Exp $ */
d134 1
a134 1
#define	GET_IFP(sc)		(&(sc)->sc_ec.ec_if)
d177 1
a177 1
	struct ethercom		sc_ec; /* ethernet common */
@


1.1
log
@Sync ulpt driver with NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
@

