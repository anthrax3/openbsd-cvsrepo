head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.18
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.16
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.10
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.12
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.8
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.6
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.20
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.18
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.16
	OPENBSD_5_0:1.8.0.14
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.12
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.10
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.6
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.8
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.4
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.5.0.24
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.26
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.22
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.20
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.16
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.18
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.14
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.12
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.10
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.8
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.6
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.5.0.4
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2013.04.15.09.23.02;	author mglocker;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.26.05.42.19;	author ray;	state Exp;
branches;
next	1.7;

1.7
date	2007.07.23.16.41.15;	author mbalmer;	state Exp;
branches;
next	1.6;

1.6
date	2007.06.09.11.06.53;	author mbalmer;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.03.02.20.34;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.08.18.10.39;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.04.11.44.25;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.28.19.37.51;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.08.19.08.18.39;	author fgsch;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.05.14.22.26.25;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2001.07.04.10.44.01;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Get rid of various 'typedef struct' definitions and use plain structure
definitions instead.  We don't change usb.h for now to stay compatible
with userland.

Tested by mpi@@ on macppc and myself on i386.

ok mpi@@
@
text
@/*	$OpenBSD: usbcdc.h,v 1.8 2008/06/26 05:42:19 ray Exp $ */
/*	$NetBSD: usbcdc.h,v 1.8 2001/02/16 20:15:57 kenh Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/usbcdc.h,v 1.7 1999/11/17 22:33:48 n_hibma Exp $	*/

/*
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _USBCDC_H_
#define _USBCDC_H_

#define UDESCSUB_CDC_HEADER	0
#define UDESCSUB_CDC_CM		1 /* Call Management */
#define UDESCSUB_CDC_ACM	2 /* Abstract Control Model */
#define UDESCSUB_CDC_DLM	3 /* Direct Line Management */
#define UDESCSUB_CDC_TRF	4 /* Telephone Ringer */
#define UDESCSUB_CDC_TCLSR	5 /* Telephone Call ... */
#define UDESCSUB_CDC_UNION	6
#define UDESCSUB_CDC_CS		7 /* Country Selection */
#define UDESCSUB_CDC_TOM	8 /* Telephone Operational Modes */
#define UDESCSUB_CDC_USBT	9 /* USB Terminal */
#define UDESCSUB_CDC_NCT	10 /* Network Channel Terminal */
#define UDESCSUB_CDC_PUF	11 /* Protocol Unit */
#define UDESCSUB_CDC_EUF	12 /* Extension Unit */
#define UDESCSUB_CDC_MCMF	13 /* Multi-Channel Management */
#define UDESCSUB_CDC_CCMF	14 /* CAPI Control Management */
#define UDESCSUB_CDC_ENF	15 /* Ethernet Networking */
#define UDESCSUB_CDC_ANF	16 /* ATM Networking */

struct usb_cdc_header_descriptor {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uWord		bcdCDC;
} __packed;

struct usb_cdc_cm_descriptor {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bmCapabilities;
#define USB_CDC_CM_DOES_CM		0x01
#define USB_CDC_CM_OVER_DATA		0x02
	uByte		bDataInterface;
} __packed;

struct usb_cdc_acm_descriptor {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bmCapabilities;
#define USB_CDC_ACM_HAS_FEATURE		0x01
#define USB_CDC_ACM_HAS_LINE		0x02
#define USB_CDC_ACM_HAS_BREAK		0x04
#define USB_CDC_ACM_HAS_NETWORK_CONN	0x08
} __packed;

struct usb_cdc_union_descriptor {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bMasterInterface;
	uByte		bSlaveInterface[1];
} __packed;

struct usb_cdc_ethernet_descriptor {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		iMacAddress;
	uDWord		bmEthernetStatistics;
	uWord		wMaxSegmentSize;
	uWord		wNumberMCFilters;
	uByte		bNumberPowerFilters;
} __packed;

#define UCDC_SEND_ENCAPSULATED_COMMAND	0x00
#define UCDC_GET_ENCAPSULATED_RESPONSE	0x01
#define UCDC_SET_COMM_FEATURE		0x02
#define UCDC_GET_COMM_FEATURE		0x03
#define  UCDC_ABSTRACT_STATE		0x01
#define  UCDC_COUNTRY_SETTING		0x02
#define UCDC_CLEAR_COMM_FEATURE		0x04
#define UCDC_SET_LINE_CODING		0x20
#define UCDC_GET_LINE_CODING		0x21
#define UCDC_SET_CONTROL_LINE_STATE	0x22
#define  UCDC_LINE_DTR			0x0001
#define  UCDC_LINE_RTS			0x0002
#define UCDC_SEND_BREAK			0x23
#define  UCDC_BREAK_ON			0xffff
#define  UCDC_BREAK_OFF			0x0000

struct usb_cdc_abstract_state {
	uWord	wState;
#define UCDC_IDLE_SETTING		0x0001
#define UCDC_DATA_MULTIPLEXED		0x0002
} __packed;
#define UCDC_ABSTRACT_STATE_LENGTH 2

struct usb_cdc_line_state {
	uDWord	dwDTERate;
	uByte	bCharFormat;
#define UCDC_STOP_BIT_1			0
#define UCDC_STOP_BIT_1_5		1
#define UCDC_STOP_BIT_2			2
	uByte	bParityType;
#define UCDC_PARITY_NONE		0
#define UCDC_PARITY_ODD			1
#define UCDC_PARITY_EVEN		2
#define UCDC_PARITY_MARK		3
#define UCDC_PARITY_SPACE		4
	uByte	bDataBits;
} __packed;
#define UCDC_LINE_STATE_LENGTH 7

struct usb_cdc_notification {
	uByte	bmRequestType;
#define UCDC_NOTIFICATION		0xa1
	uByte	bNotification;
#define UCDC_N_NETWORK_CONNECTION	0x00
#define UCDC_N_RESPONSE_AVAILABLE	0x01
#define UCDC_N_AUX_JACK_HOOK_STATE	0x08
#define UCDC_N_RING_DETECT		0x09
#define UCDC_N_SERIAL_STATE		0x20
#define UCDC_N_CALL_STATE_CHANGED	0x28
#define UCDC_N_LINE_STATE_CHANGED	0x29
#define UCDC_N_CONNECTION_SPEED_CHANGE	0x2a
	uWord	wValue;
	uWord	wIndex;
	uWord	wLength;
	uByte	data[16];
} __packed;
#define UCDC_NOTIFICATION_LENGTH 8

struct usb_cdc_connection_speed {
	uDWord	dwUSBitRate;
	uDWord	dwDSBitRate;
} __packed;
#define UCDC_CONNECTION_SPEED_LENGTH 8

/*
 * Bits set in the SERIAL STATE notifcation (first byte of data)
 */

#define UCDC_N_SERIAL_OVERRUN		0x40
#define UCDC_N_SERIAL_PARITY		0x20
#define UCDC_N_SERIAL_FRAMING		0x10
#define UCDC_N_SERIAL_RI		0x08
#define UCDC_N_SERIAL_BREAK		0x04
#define UCDC_N_SERIAL_DSR		0x02
#define UCDC_N_SERIAL_DCD		0x01

#endif /* _USBCDC_H_ */
@


1.8
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usbcdc.h,v 1.7 2007/07/23 16:41:15 mbalmer Exp $ */
d56 1
a56 1
typedef struct {
d61 1
a61 1
} __packed usb_cdc_header_descriptor_t;
d63 1
a63 1
typedef struct {
d71 1
a71 1
} __packed usb_cdc_cm_descriptor_t;
d73 1
a73 1
typedef struct {
d82 1
a82 1
} __packed usb_cdc_acm_descriptor_t;
d84 1
a84 1
typedef struct {
d90 1
a90 1
} __packed usb_cdc_union_descriptor_t;
d92 1
a92 1
typedef struct {
d101 1
a101 1
} __packed usb_cdc_ethernet_descriptor_t;
d119 1
a119 1
typedef struct {
d123 1
a123 1
} __packed usb_cdc_abstract_state_t;
d126 1
a126 1
typedef struct {
d139 1
a139 1
} __packed usb_cdc_line_state_t;
d142 1
a142 1
typedef struct {
d158 1
a158 1
} __packed usb_cdc_notification_t;
d161 1
a161 1
typedef struct {
d164 1
a164 1
} __packed usb_cdc_connection_speed_t;
@


1.7
log
@This improves cdce(4) and makes some devices work that previously did not
(like the Sony Ericsson K610 mobile phone).

- Read hardware address from ethernet descriptor makes the Sony Ericsson
  K610 work.
- Add support for status notifications (interrupt endpoint).
- Recognize if there is a union descriptori (thus remove CDCE_NO_UNION).
- Handle wrong union descriptors (master/slave values are swapped)
  (Ambit NTL 250)

Diff done by Marc Winiger <mw@@msys.ch>, tested by many on different
platforms and with various devices:  cable modems, mobile phones, and,
zaurus as USB function.

ok jsg, claudio, kili
@
text
@d1 1
a1 1
/*	$OpenBSD: usbcdc.h,v 1.6 2007/06/09 11:06:53 mbalmer Exp $ */
a20 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.6
log
@Remove the definition and use of UPACKED and replace it with our own __packed
(to which UPACKED was define'd before anway).  No binary change, just one layer
of confusion less in the sourcecode.

ok jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: usbcdc.h,v 1.5 2001/05/03 02:20:34 aaron Exp $ */
d55 7
d99 11
d167 6
@


1.5
log
@Sync with NetBSD. Tested with a USB keyboard, USB mouse, and three different
kue(4) Ethernet devices.
@
text
@d1 1
a1 1
/*	$OpenBSD: usbcdc.h,v 1.4 2000/11/08 18:10:39 aaron Exp $ */
d61 1
a61 1
} UPACKED usb_cdc_header_descriptor_t;
d71 1
a71 1
} UPACKED usb_cdc_cm_descriptor_t;
d82 1
a82 1
} UPACKED usb_cdc_acm_descriptor_t;
d90 1
a90 1
} UPACKED usb_cdc_union_descriptor_t;
d112 1
a112 1
} UPACKED usb_cdc_abstract_state_t;
d128 1
a128 1
} UPACKED usb_cdc_line_state_t;
d147 1
a147 1
} UPACKED usb_cdc_notification_t;
@


1.4
log
@Sync with NetBSD. Too many changes to mention. For now I have skipped
umass.c and ukbd.c as the diffs are a bit hairier.
@
text
@d1 2
a2 2
/*	$OpenBSD: usbcdc.h,v 1.3 2000/07/04 11:44:25 fgsch Exp $ */
/*	$NetBSD: usbcdc.h,v 1.7 2000/05/30 10:10:18 augustss Exp $	*/
d149 12
@


1.3
log
@sync with NetBSD... well almost. someone w/ the hw should check umass.
@
text
@d1 2
a2 2
/*	$OpenBSD: usbcdc.h,v 1.2 2000/03/28 19:37:51 aaron Exp $ */
/*	$NetBSD: usbcdc.h,v 1.5 1999/11/18 23:32:32 augustss Exp $	*/
@


1.2
log
@Much cleaner sync with NetBSD. Some #if defined() magic has been sent in the
form of a diff to augustss@@netbsd.org so that future syncs will be very easy.
This commit also adds support for ADMtek AN986 "Pegasus" based USB Ethernet,
CATC USB-EL1210A based USB Ethernet, and USB Printers (all untested).
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d10 1
a10 1
 * by Lennart Augustsson (augustss@@carlstedt.se) at
d61 1
a61 1
} usb_cdc_header_descriptor_t;
d71 1
a71 1
} usb_cdc_cm_descriptor_t;
d82 1
a82 1
} usb_cdc_acm_descriptor_t;
d90 1
a90 1
} usb_cdc_union_descriptor_t;
d112 1
a112 1
} usb_cdc_abstract_state_t;
d128 1
a128 1
} usb_cdc_line_state_t;
d147 1
a147 1
} usb_cdc_notification_t;
@


1.1
log
@Sync with NetBSD.
@
text
@d1 3
a3 2
/*	$OpenBSD$	*/
/*	$NetBSD: usbcdc.h,v 1.4 1999/08/16 20:20:19 augustss Exp $	*/
@


1.1.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 3
/*	$OpenBSD: usbcdc.h,v 1.4 2000/11/08 18:10:39 aaron Exp $ */
/*	$NetBSD: usbcdc.h,v 1.7 2000/05/30 10:10:18 augustss Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/usbcdc.h,v 1.7 1999/11/17 22:33:48 n_hibma Exp $	*/
d9 1
a9 1
 * by Lennart Augustsson (lennart@@augustsson.net) at
d60 1
a60 1
} UPACKED usb_cdc_header_descriptor_t;
d70 1
a70 1
} UPACKED usb_cdc_cm_descriptor_t;
d81 1
a81 1
} UPACKED usb_cdc_acm_descriptor_t;
d89 1
a89 1
} UPACKED usb_cdc_union_descriptor_t;
d111 1
a111 1
} UPACKED usb_cdc_abstract_state_t;
d127 1
a127 1
} UPACKED usb_cdc_line_state_t;
d146 1
a146 1
} UPACKED usb_cdc_notification_t;
@


1.1.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: usbcdc.h,v 1.8 2001/02/16 20:15:57 kenh Exp $	*/
a148 12

/*
 * Bits set in the SERIAL STATE notifcation (first byte of data)
 */

#define UCDC_N_SERIAL_OVERRUN		0x40
#define UCDC_N_SERIAL_PARITY		0x20
#define UCDC_N_SERIAL_FRAMING		0x10
#define UCDC_N_SERIAL_RI		0x08
#define UCDC_N_SERIAL_BREAK		0x04
#define UCDC_N_SERIAL_DSR		0x02
#define UCDC_N_SERIAL_DCD		0x01
@


