head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.14
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.16
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.10
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.12
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.8
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.6
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.24
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.22
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.20
	OPENBSD_5_0:1.8.0.18
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.16
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.14
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.10
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.12
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.8
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.6
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.4
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6;
locks; strict;
comment	@ * @;


1.9
date	2013.04.15.09.23.01;	author mglocker;	state Exp;
branches;
next	1.8;

1.8
date	2007.06.06.19.25.49;	author mk;	state Exp;
branches;
next	1.7;

1.7
date	2006.11.13.20.06.38;	author damien;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.18.15.11.12;	author damien;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.09.08.21.08;	author damien;	state Exp;
branches;
next	1.4;

1.4
date	2006.07.19.20.00.36;	author damien;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.19.19.22.02;	author damien;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.18.21.24.40;	author damien;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.16.22.30.46;	author niallo;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Get rid of various 'typedef struct' definitions and use plain structure
definitions instead.  We don't change usb.h for now to stay compatible
with userland.

Tested by mpi@@ on macppc and myself on i386.

ok mpi@@
@
text
@/*	$OpenBSD: if_rumvar.h,v 1.8 2007/06/06 19:25:49 mk Exp $	*/

/*-
 * Copyright (c) 2005, 2006 Damien Bergamini <damien.bergamini@@free.fr>
 * Copyright (c) 2006 Niall O'Higgins <niallo@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define RUM_RX_LIST_COUNT	1
#define RUM_TX_LIST_COUNT	8

struct rum_rx_radiotap_header {
	struct ieee80211_radiotap_header wr_ihdr;
	uint8_t		wr_flags;
	uint8_t		wr_rate;
	uint16_t	wr_chan_freq;
	uint16_t	wr_chan_flags;
	uint8_t		wr_antenna;
	uint8_t		wr_antsignal;
} __packed;

#define RT2573_RX_RADIOTAP_PRESENT					\
	((1 << IEEE80211_RADIOTAP_FLAGS) |				\
	 (1 << IEEE80211_RADIOTAP_RATE) |				\
	 (1 << IEEE80211_RADIOTAP_CHANNEL) |				\
	 (1 << IEEE80211_RADIOTAP_ANTENNA) |				\
	 (1 << IEEE80211_RADIOTAP_DB_ANTSIGNAL))

struct rum_tx_radiotap_header {
	struct ieee80211_radiotap_header wt_ihdr;
	uint8_t		wt_flags;
	uint8_t		wt_rate;
	uint16_t	wt_chan_freq;
	uint16_t	wt_chan_flags;
	uint8_t		wt_antenna;
} __packed;

#define RT2573_TX_RADIOTAP_PRESENT						\
	((1 << IEEE80211_RADIOTAP_FLAGS) |				\
	 (1 << IEEE80211_RADIOTAP_RATE) |				\
	 (1 << IEEE80211_RADIOTAP_CHANNEL) |				\
	 (1 << IEEE80211_RADIOTAP_ANTENNA))

struct rum_softc;

struct rum_tx_data {
	struct rum_softc	*sc;
	struct usbd_xfer	*xfer;
	uint8_t			*buf;
	struct ieee80211_node	*ni;
};

struct rum_rx_data {
	struct rum_softc	*sc;
	struct usbd_xfer	*xfer;
	uint8_t			*buf;
	struct mbuf		*m;
};

struct rum_softc {
	struct device			sc_dev;
	struct ieee80211com		sc_ic;
	int				(*sc_newstate)(struct ieee80211com *,
					    enum ieee80211_state, int);

	struct usbd_device		*sc_udev;
	struct usbd_interface		*sc_iface;

	struct ieee80211_channel	*sc_curchan;

	int				sc_rx_no;
	int				sc_tx_no;

	uint16_t			macbbp_rev;
	uint8_t				rf_rev;
	uint8_t				rffreq;

	struct usbd_xfer		*amrr_xfer;

	struct usbd_pipe		*sc_rx_pipeh;
	struct usbd_pipe		*sc_tx_pipeh;

	enum ieee80211_state		sc_state;
	int				sc_arg;
	struct usb_task			sc_task;

	struct ieee80211_amrr		amrr;
	struct ieee80211_amrr_node	amn;

	struct rum_rx_data		rx_data[RUM_RX_LIST_COUNT];
	struct rum_tx_data		tx_data[RUM_TX_LIST_COUNT];
	int				tx_queued;
	int				tx_cur;

	struct timeout			scan_to;
	struct timeout			amrr_to;

	int				sc_tx_timer;

	uint32_t			sta[6];
	uint32_t			rf_regs[4];
	uint8_t				txpow[44];

	struct {
		uint8_t	val;
		uint8_t	reg;
	} __packed			bbp_prom[16];

	int				hw_radio;
	int				rx_ant;
	int				tx_ant;
	int				nb_ant;
	int				ext_2ghz_lna;
	int				ext_5ghz_lna;
	int				rssi_2ghz_corr;
	int				rssi_5ghz_corr;
	int				sifs;
	uint8_t				bbp17;

#if NBPFILTER > 0
	caddr_t				sc_drvbpf;

	union {
		struct rum_rx_radiotap_header th;
		uint8_t	pad[64];
	}				sc_rxtapu;
#define sc_rxtap	sc_rxtapu.th
	int				sc_rxtap_len;

	union {
		struct rum_tx_radiotap_header th;
		uint8_t	pad[64];
	}				sc_txtapu;
#define sc_txtap	sc_txtapu.th
	int				sc_txtap_len;
#endif
};
@


1.8
log
@Mechanical removal of USBBASEDEVICE.  No binary change.

Tested by thib and myself.

ok mbalmer jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: if_rumvar.h,v 1.7 2006/11/13 20:06:38 damien Exp $	*/
d59 1
a59 1
	usbd_xfer_handle	xfer;
d66 1
a66 1
	usbd_xfer_handle	xfer;
d77 2
a78 2
	usbd_device_handle		sc_udev;
	usbd_interface_handle		sc_iface;
d89 1
a89 1
	usbd_xfer_handle		amrr_xfer;
d91 2
a92 2
	usbd_pipe_handle		sc_rx_pipeh;
	usbd_pipe_handle		sc_tx_pipeh;
@


1.7
log
@first round of commits for proper 11b/g protection support:
- use the newly introduced ieee80211_get_rts() and
  ieee80211_get_cts_to_self() functions.
- use CTS-to-self instead of RTS/CTS to protect OFDM frames in
  a mixed 11b/g BSS.
- make sure multicast frames are sent using CCK modulation.

remove support for 5GHz radios in ral(4) RT2560 and ural(4).
i'm not aware of any such adapters on the market and 11a code
is known to be broken.

some cleanup while i'm here.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_rumvar.h,v 1.6 2006/08/18 15:11:12 damien Exp $	*/
d72 1
a72 1
	USBBASEDEVICE			sc_dev;
@


1.6
log
@- fix support for RT5225 (802.11a MIMO)
- set default Tx power for 802.11a channels
- in rum_newstate(), save the "arg" parameter so we can pass it to the
  ieee80211_new_state() function in the usb task
- merge rum_tx_data() and rum_tx_mgt()
- s/le32toh/letoh32/g (le32toh is defined in usb_port.h)
- cosmetic while i'm here
@
text
@d1 1
a1 1
/*	$OpenBSD: if_rumvar.h,v 1.5 2006/08/09 08:21:08 damien Exp $	*/
d20 2
a21 2
#define RT2573_RX_LIST_COUNT	1
#define RT2573_TX_LIST_COUNT	1
a60 1
	struct mbuf		*m;
d101 2
a102 2
	struct rum_rx_data		rx_data[RT2573_RX_LIST_COUNT];
	struct rum_tx_data		tx_data[RT2573_TX_LIST_COUNT];
d104 1
d106 2
a107 2
	struct timeout			scan_ch;
	struct timeout			amrr_ch;
@


1.5
log
@mega-commit of unrelated changes to bring rum(4) into a working state.
more to come but works well enough for me to commit this over a rum(4).
it shares a lot of code with ral(4) rt2661.c.

thanks to jsg@@ for sending me a rum(4).
@
text
@d1 1
a1 1
/*	$OpenBSD: if_rumvar.h,v 1.4 2006/07/19 20:00:36 damien Exp $	*/
a87 1
	uint32_t			rfprog;
d96 1
a119 1
	int				led_mode;
@


1.4
log
@remove defintions of rum_{rx,tx}_ring structures that are unused.
@
text
@d1 2
a2 1
/*	$OpenBSD: if_rumvar.h,v 1.3 2006/07/19 19:22:02 damien Exp $  */
d21 1
a21 1
#define RT2573_TX_LIST_COUNT	5
a85 1
	uint32_t			asic_rev;
d91 2
d99 3
d107 1
d111 1
d113 1
a113 1
	uint8_t				txpow[14];
d125 6
a149 1

@


1.3
log
@there aren't 10 STA registers on RT2501USB.
clear only STA0 to STA2 included.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_rumvar.h,v 1.2 2006/07/18 21:24:40 damien Exp $  */
a70 17
struct rum_tx_ring {
	struct rum_tx_data	*data;
	struct rum_tx_desc	*desc;
	int			count;
	int			queued;
	int			cur;
	int			next;
	int			stat;
};
struct rum_rx_ring {
	struct rum_rx_data	*data;
	struct rum_rx_desc	*desc;
	int			cur;
	int			next;
	int			stat;
};

a99 4

	struct rum_tx_ring		txq[5];
	struct rum_tx_ring		mgtq;
	struct rum_rx_ring		rxq;
@


1.2
log
@nuke sc->rssadapt_ch.  it was used but not initialized.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_rumvar.h,v 1.1 2006/06/16 22:30:46 niallo Exp $  */
a125 1
	uint16_t			sta[11];
@


1.1
log
@- add rum(4), a driver for the next generation Ralink Technology USB 802.11a/b/g
  wireless network devices.

not yet fully functional, putting it in the tree so others can hack on it too.
@
text
@d1 1
a1 1
/*	$OpenBSD$  */
a156 1
	struct timeout			rssadapt_ch;
@

