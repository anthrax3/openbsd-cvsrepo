head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.14
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.8
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.10
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.24
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.22
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.20
	OPENBSD_5_0:1.3.0.18
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.16
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.14
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.10
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.12
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.1.0.10
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.8
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.6
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.10.12.21.51.11;	author fcambus;	state Exp;
branches;
next	1.6;
commitid	IcKkOi5LKiIk7t5F;

1.6
date	2013.12.04.00.52.52;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2013.11.11.12.38.16;	author pirofti;	state Exp;
branches;
next	1.4;

1.4
date	2013.04.15.09.23.01;	author mglocker;	state Exp;
branches;
next	1.3;

1.3
date	2007.07.23.16.41.15;	author mbalmer;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.06.19.25.49;	author mk;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.20.20.30.09;	author dhartmei;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Rename CDCE_ZAURUS option to CDCE_CRC32 for clarity.

OK kettenis@@
@
text
@/*	$OpenBSD: if_cdcereg.h,v 1.6 2013/12/04 00:52:52 deraadt Exp $ */

/*
 * Copyright (c) 1997, 1998, 1999, 2000-2003 Bill Paul <wpaul@@windriver.com>
 * Copyright (c) 2003 Craig Boston
 * Copyright (c) 2004 Daniel Hartmeier
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Bill Paul.
 * 4. Neither the name of the author nor the names of any co-contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY Bill Paul AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL Bill Paul, THE VOICES IN HIS HEAD OR
 * THE CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#define CDCE_RX_LIST_CNT	1
#define CDCE_TX_LIST_CNT	1
#define CDCE_BUFSZ		1542

struct cdce_type {
	struct usb_devno	 cdce_dev;
	u_int16_t		 cdce_flags;
#define CDCE_CRC32	1
#define CDCE_SWAPUNION	2
};

struct cdce_softc;

struct cdce_chain {
	struct cdce_softc	*cdce_sc;
	struct usbd_xfer	*cdce_xfer;
	char			*cdce_buf;
	struct mbuf		*cdce_mbuf;
	int			 cdce_accum;
	int			 cdce_idx;
};

struct cdce_cdata {
	struct cdce_chain	 cdce_rx_chain[CDCE_RX_LIST_CNT];
	struct cdce_chain	 cdce_tx_chain[CDCE_TX_LIST_CNT];
	int			 cdce_tx_prod;
	int			 cdce_tx_cons;
	int			 cdce_tx_cnt;
	int			 cdce_rx_prod;
};

struct cdce_softc {
	struct device		 cdce_dev;
	struct arpcom		 cdce_arpcom;
#define GET_IFP(sc) (&(sc)->cdce_arpcom.ac_if)
	struct usbd_device	*cdce_udev;
	struct usbd_interface	*cdce_ctl_iface;
	int			 cdce_intr_no;
	struct usbd_pipe	*cdce_intr_pipe;
	struct usb_cdc_notification cdce_intr_buf;
	int			 cdce_intr_size;
	struct usbd_interface	*cdce_data_iface;
	int			 cdce_bulkin_no;
	struct usbd_pipe	*cdce_bulkin_pipe;
	int			 cdce_bulkout_no;
	struct usbd_pipe	*cdce_bulkout_pipe;
	struct cdce_cdata	 cdce_cdata;
	int			 cdce_rxeof_errors;
	u_int16_t		 cdce_flags;
	char			 cdce_attached;
};
@


1.6
log
@use dv_unit rather than storing (or forgetting to store...) a local
version
noted by uaa@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cdcereg.h,v 1.5 2013/11/11 12:38:16 pirofti Exp $ */
d44 1
a44 1
#define CDCE_ZAURUS	1
@


1.5
log
@Replace sc_dying in favour of usbd_is_dying() and usbd_deactivate().

Okay mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cdcereg.h,v 1.4 2013/04/15 09:23:01 mglocker Exp $ */
a82 1
	int			 cdce_unit;
@


1.4
log
@Get rid of various 'typedef struct' definitions and use plain structure
definitions instead.  We don't change usb.h for now to stay compatible
with userland.

Tested by mpi@@ on macppc and myself on i386.

ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cdcereg.h,v 1.3 2007/07/23 16:41:15 mbalmer Exp $ */
a82 1
	char			 cdce_dying;
@


1.3
log
@This improves cdce(4) and makes some devices work that previously did not
(like the Sony Ericsson K610 mobile phone).

- Read hardware address from ethernet descriptor makes the Sony Ericsson
  K610 work.
- Add support for status notifications (interrupt endpoint).
- Recognize if there is a union descriptori (thus remove CDCE_NO_UNION).
- Handle wrong union descriptors (master/slave values are swapped)
  (Ambit NTL 250)

Diff done by Marc Winiger <mw@@msys.ch>, tested by many on different
platforms and with various devices:  cable modems, mobile phones, and,
zaurus as USB function.

ok jsg, claudio, kili
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cdcereg.h,v 1.2 2007/06/06 19:25:49 mk Exp $ */
d52 1
a52 1
	usbd_xfer_handle	 cdce_xfer;
d72 2
a73 2
	usbd_device_handle	 cdce_udev;
	usbd_interface_handle	 cdce_ctl_iface;
d75 2
a76 2
	usbd_pipe_handle	 cdce_intr_pipe;
	usb_cdc_notification_t	 cdce_intr_buf;
d78 1
a78 1
	usbd_interface_handle	 cdce_data_iface;
d80 1
a80 1
	usbd_pipe_handle	 cdce_bulkin_pipe;
d82 1
a82 1
	usbd_pipe_handle	 cdce_bulkout_pipe;
@


1.2
log
@Mechanical removal of USBBASEDEVICE.  No binary change.

Tested by thib and myself.

ok mbalmer jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cdcereg.h,v 1.1 2004/07/20 20:30:09 dhartmei Exp $ */
d45 1
a45 1
#define CDCE_NO_UNION	2
d74 4
@


1.1
log
@Driver for USB CDC Ethernet devices (USB Host-to-Host), appearing as
network interfaces, transporting Ethernet, supporting Sharp Zaurus and
Prolific PL-2501 (external cable). Written by Craig Boston based on code
from Bill Paul. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d69 1
a69 1
	USBBASEDEVICE		 cdce_dev;
@

