head	1.74;
access;
symbols
	OPENBSD_6_1:1.74.0.4
	OPENBSD_6_1_BASE:1.74
	OPENBSD_6_0:1.74.0.6
	OPENBSD_6_0_BASE:1.74
	OPENBSD_5_9:1.74.0.2
	OPENBSD_5_9_BASE:1.74
	OPENBSD_5_8:1.73.0.8
	OPENBSD_5_8_BASE:1.73
	OPENBSD_5_7:1.73.0.2
	OPENBSD_5_7_BASE:1.73
	OPENBSD_5_6:1.73.0.4
	OPENBSD_5_6_BASE:1.73
	OPENBSD_5_5:1.69.0.4
	OPENBSD_5_5_BASE:1.69
	OPENBSD_5_4:1.68.0.2
	OPENBSD_5_4_BASE:1.68
	OPENBSD_5_3:1.66.0.6
	OPENBSD_5_3_BASE:1.66
	OPENBSD_5_2:1.66.0.4
	OPENBSD_5_2_BASE:1.66
	OPENBSD_5_1_BASE:1.66
	OPENBSD_5_1:1.66.0.2
	OPENBSD_5_0:1.64.0.2
	OPENBSD_5_0_BASE:1.64
	OPENBSD_4_9:1.63.0.2
	OPENBSD_4_9_BASE:1.63
	OPENBSD_4_8:1.59.0.2
	OPENBSD_4_8_BASE:1.59
	OPENBSD_4_7:1.53.0.2
	OPENBSD_4_7_BASE:1.53
	OPENBSD_4_6:1.52.0.4
	OPENBSD_4_6_BASE:1.52
	OPENBSD_4_5:1.50.0.2
	OPENBSD_4_5_BASE:1.50
	OPENBSD_4_4:1.44.0.2
	OPENBSD_4_4_BASE:1.44
	OPENBSD_4_3:1.34.0.2
	OPENBSD_4_3_BASE:1.34
	OPENBSD_4_2:1.29.0.2
	OPENBSD_4_2_BASE:1.29
	OPENBSD_4_1:1.26.0.2
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.24.0.4
	OPENBSD_4_0_BASE:1.24
	OPENBSD_3_9:1.20.0.2
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.18.0.4
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.2
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.16.0.8
	OPENBSD_3_6_BASE:1.16
	SMP_SYNC_A:1.16
	SMP_SYNC_B:1.16
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	UBC_SYNC_A:1.15
	OPENBSD_3_3:1.15.0.4
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.2
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.15
	UBC:1.10.0.2
	UBC_BASE:1.10
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	SMP:1.2.0.4
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.74
date	2015.11.27.10.59.32;	author mpi;	state Exp;
branches;
next	1.73;
commitid	6yJdd8L38vYwsx40;

1.73
date	2014.03.20.15.07.11;	author abieber;	state Exp;
branches;
next	1.72;

1.72
date	2014.03.20.13.07.01;	author andre;	state Exp;
branches;
next	1.71;

1.71
date	2014.03.20.12.50.49;	author andre;	state Exp;
branches;
next	1.70;

1.70
date	2014.03.19.13.45.44;	author andre;	state Exp;
branches;
next	1.69;

1.69
date	2013.10.30.12.28.19;	author aoyama;	state Exp;
branches;
next	1.68;

1.68
date	2013.03.08.02.21.43;	author jcs;	state Exp;
branches;
next	1.67;

1.67
date	2013.03.07.23.43.14;	author jcs;	state Exp;
branches;
next	1.66;

1.66
date	2012.01.31.21.13.32;	author brynet;	state Exp;
branches;
next	1.65;

1.65
date	2011.12.01.23.02.12;	author dhill;	state Exp;
branches;
next	1.64;

1.64
date	2011.03.09.17.03.06;	author sthen;	state Exp;
branches;
next	1.63;

1.63
date	2010.12.02.06.39.09;	author jakemsr;	state Exp;
branches;
next	1.62;

1.62
date	2010.10.03.17.25.21;	author armani;	state Exp;
branches;
next	1.61;

1.61
date	2010.09.15.17.25.36;	author jasper;	state Exp;
branches;
next	1.60;

1.60
date	2010.08.21.17.31.49;	author jasper;	state Exp;
branches;
next	1.59;

1.59
date	2010.08.02.13.58.37;	author miod;	state Exp;
branches;
next	1.58;

1.58
date	2010.07.19.05.08.37;	author jakemsr;	state Exp;
branches;
next	1.57;

1.57
date	2010.07.15.15.45.48;	author sthen;	state Exp;
branches;
next	1.56;

1.56
date	2010.04.07.21.18.42;	author jasper;	state Exp;
branches;
next	1.55;

1.55
date	2010.04.07.21.00.33;	author sthen;	state Exp;
branches;
next	1.54;

1.54
date	2010.04.07.20.53.52;	author sthen;	state Exp;
branches;
next	1.53;

1.53
date	2009.10.17.07.10.38;	author jakemsr;	state Exp;
branches;
next	1.52;

1.52
date	2009.05.11.08.07.42;	author yuo;	state Exp;
branches;
next	1.51;

1.51
date	2009.04.22.18.56.56;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2008.11.29.21.54.46;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	2008.11.25.08.57.07;	author jasper;	state Exp;
branches;
next	1.48;

1.48
date	2008.09.08.16.58.32;	author martynas;	state Exp;
branches;
next	1.47;

1.47
date	2008.08.27.17.33.32;	author deraadt;	state Exp;
branches;
next	1.46;

1.46
date	2008.08.26.22.25.20;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	2008.08.11.05.37.01;	author mglocker;	state Exp;
branches;
next	1.44;

1.44
date	2008.07.22.16.24.40;	author mglocker;	state Exp;
branches;
next	1.43;

1.43
date	2008.06.29.10.04.15;	author yuo;	state Exp;
branches;
next	1.42;

1.42
date	2008.06.26.05.42.19;	author ray;	state Exp;
branches;
next	1.41;

1.41
date	2008.06.22.23.15.24;	author brad;	state Exp;
branches;
next	1.40;

1.40
date	2008.06.19.08.18.57;	author brad;	state Exp;
branches;
next	1.39;

1.39
date	2008.06.15.18.30.08;	author miod;	state Exp;
branches;
next	1.38;

1.38
date	2008.06.15.18.10.03;	author yuo;	state Exp;
branches;
next	1.37;

1.37
date	2008.05.24.20.39.18;	author ckuethe;	state Exp;
branches;
next	1.36;

1.36
date	2008.05.08.13.57.43;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2008.05.06.05.59.49;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2008.02.23.22.19.13;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2007.11.25.22.26.55;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2007.11.21.17.34.19;	author robert;	state Exp;
branches;
next	1.31;

1.31
date	2007.11.14.12.13.56;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2007.08.28.09.45.46;	author henning;	state Exp;
branches;
next	1.29;

1.29
date	2007.06.05.08.43.56;	author mbalmer;	state Exp;
branches;
next	1.28;

1.28
date	2007.05.22.09.55.15;	author robert;	state Exp;
branches;
next	1.27;

1.27
date	2007.05.21.05.40.28;	author jsg;	state Exp;
branches;
next	1.26;

1.26
date	2007.01.01.22.27.00;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2006.11.11.14.39.22;	author jolan;	state Exp;
branches;
next	1.24;

1.24
date	2006.08.16.19.12.05;	author jason;	state Exp;
branches;
next	1.23;

1.23
date	2006.08.12.04.31.51;	author jason;	state Exp;
branches;
next	1.22;

1.22
date	2006.05.14.12.00.04;	author matthieu;	state Exp;
branches;
next	1.21;

1.21
date	2006.03.31.04.35.39;	author drahn;	state Exp;
branches;
next	1.20;

1.20
date	2006.02.10.23.29.02;	author djm;	state Exp;
branches;
next	1.19;

1.19
date	2005.12.24.12.45.54;	author robert;	state Exp;
branches;
next	1.18;

1.18
date	2004.10.31.14.06.40;	author jsg;	state Exp;
branches;
next	1.17;

1.17
date	2004.10.31.12.22.34;	author jsg;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.27.20.12.59;	author nate;	state Exp;
branches;
next	1.15;

1.15
date	2002.07.25.04.07.33;	author nate;	state Exp;
branches;
next	1.14;

1.14
date	2002.07.25.02.18.11;	author nate;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.07.20.06.28;	author nate;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.07.18.29.18;	author nate;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.07.18.08.04;	author nate;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.31.04.24.44;	author nate;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2001.05.03.02.20.34;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.28.09.43.42;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2000.11.08.18.10.39;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.04.11.44.25;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.30.16.19.33;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.28.19.37.50;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.26.08.39.46;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.09.27.18.03.56;	author fgsch;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	99.08.13.05.28.04;	author fgsch;	state Exp;
branches;
next	;

1.2.4.1
date	2001.05.14.22.26.24;	author niklas;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2001.07.04.10.44.00;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2001.11.13.21.10.04;	author niklas;	state Exp;
branches;
next	1.2.4.4;

1.2.4.4
date	2003.03.28.00.38.32;	author niklas;	state Exp;
branches;
next	1.2.4.5;

1.2.4.5
date	2004.02.19.10.56.34;	author niklas;	state Exp;
branches;
next	;

1.10.2.1
date	2002.06.11.03.42.31;	author art;	state Exp;
branches;
next	1.10.2.2;

1.10.2.2
date	2002.10.29.00.33.32;	author art;	state Exp;
branches;
next	;


desc
@@


1.74
log
@Attach the iPhone 6 as ugen(4), from Laurent GUALDI.
@
text
@/*	$OpenBSD: usb_quirks.c,v 1.73 2014/03/20 15:07:11 abieber Exp $ */
/*	$NetBSD: usb_quirks.c,v 1.45 2003/05/10 17:47:14 hamajima Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/usb_quirks.c,v 1.30 2003/01/02 04:15:55 imp Exp $	*/

/*
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>

#include <dev/usb/usb.h>

#include <dev/usb/usbdevs.h>
#include <dev/usb/usb_quirks.h>

#ifdef USB_DEBUG
extern int usbdebug;
#endif

#define ANY 0xffff

const struct usbd_quirk_entry {
	u_int16_t idVendor;
	u_int16_t idProduct;
	u_int16_t bcdDevice;
	struct usbd_quirks quirks;
} usb_quirks[] = {
 { USB_VENDOR_KYE, USB_PRODUCT_KYE_NICHE,	    0x100, { UQ_NO_SET_PROTO}},
 { USB_VENDOR_INSIDEOUT, USB_PRODUCT_INSIDEOUT_EDGEPORT4,
   						    0x094, { UQ_SWAP_UNICODE}},
 { USB_VENDOR_QTRONIX, USB_PRODUCT_QTRONIX_980N,    0x110, { UQ_SPUR_BUT_UP }},
 { USB_VENDOR_ALCOR2, USB_PRODUCT_ALCOR2_KBD_HUB,   0x001, { UQ_SPUR_BUT_UP }},
 { USB_VENDOR_MCT, USB_PRODUCT_MCT_HUB0100,         0x102, { UQ_BUS_POWERED }},
 { USB_VENDOR_MCT, USB_PRODUCT_MCT_USB232,          0x102, { UQ_BUS_POWERED }},
 { USB_VENDOR_METRICOM, USB_PRODUCT_METRICOM_RICOCHET_GS,
 	0x100, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_SANYO, USB_PRODUCT_SANYO_SCP4900,
 	0x000, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_MOTOROLA2, USB_PRODUCT_MOTOROLA2_T720C,
	0x001, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_EICON, USB_PRODUCT_EICON_DIVA852,
	0x100, { UQ_ASSUME_CM_OVER_DATA }},
 /* YAMAHA router's ucdDevice is the version of firmware and often changes. */
 { USB_VENDOR_YAMAHA, USB_PRODUCT_YAMAHA_RTA54I,
	ANY, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_YAMAHA, USB_PRODUCT_YAMAHA_RTA55I,
	ANY, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_YAMAHA, USB_PRODUCT_YAMAHA_RTW65B,
	ANY, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_YAMAHA, USB_PRODUCT_YAMAHA_RTW65I,
	ANY, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_QUALCOMM, USB_PRODUCT_QUALCOMM_MSM_MODEM,
	ANY, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_QUALCOMM2, USB_PRODUCT_QUALCOMM2_MSM_PHONE,
	ANY, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_SUNTAC, USB_PRODUCT_SUNTAC_AS64LX,
	0x100, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_CMOTECH, USB_PRODUCT_CMOTECH_CM5100P,
	ANY, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_CMOTECH, USB_PRODUCT_CMOTECH_CCU550,
	ANY, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_CMOTECH, USB_PRODUCT_CMOTECH_CNU550pro,
	ANY, { UQ_ASSUME_CM_OVER_DATA }},
 { USB_VENDOR_SIEMENS2, USB_PRODUCT_SIEMENS2_ES75,
	ANY, { UQ_ASSUME_CM_OVER_DATA }},

 { USB_VENDOR_TI, USB_PRODUCT_TI_UTUSB41,	    0x110, { UQ_POWER_CLAIM }},

 /* XXX These should have a revision number, but I don't know what they are. */
 { USB_VENDOR_HP, USB_PRODUCT_HP_895C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_880C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_815C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_810C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_830C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_885C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_840C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_816C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_959C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_1220C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_NEC, USB_PRODUCT_NEC_PICTY900,	    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_NEC, USB_PRODUCT_NEC_PICTY760,	    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_NEC, USB_PRODUCT_NEC_PICTY920,	    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_NEC, USB_PRODUCT_NEC_PICTY800,	    ANY,   { UQ_BROKEN_BIDIR }},

 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPHONE,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPHONE_3G,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPHONE_3GS,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPHONE_4_CDMA,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPHONE_4_GSM,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPHONE_4S,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPHONE_6,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPOD_TOUCH,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPOD_TOUCH_2G,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPOD_TOUCH_3G,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPOD_TOUCH_4G,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPAD,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPAD2,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_SPEAKERS,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_CYPRESS, USB_PRODUCT_CYPRESS_SISPM_OLD,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_CYPRESS, USB_PRODUCT_CYPRESS_SISPM,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_CYPRESS, USB_PRODUCT_CYPRESS_SISPM_FLASH,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_ITUNER, USB_PRODUCT_ITUNER_USBLCD20x2,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_ITUNER, USB_PRODUCT_ITUNER_USBLCD256x64,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_MECANIQUE, USB_PRODUCT_MECANIQUE_WISPY,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_METAGEEK, USB_PRODUCT_METAGEEK_WISPY24I,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_MUSTEK2, USB_PRODUCT_MUSTEK2_PM800,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_OMRON, USB_PRODUCT_OMRON_BX35F,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_OMRON, USB_PRODUCT_OMRON_BX50F,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_OMRON, USB_PRODUCT_OMRON_BY35S,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_TENX, USB_PRODUCT_TENX_MISSILE,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_TERRATEC, USB_PRODUCT_TERRATEC_AUREON,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_TI, USB_PRODUCT_TI_MSP430,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_VELLEMAN, USB_PRODUCT_VELLEMAN_K8055,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_DREAMLINK, USB_PRODUCT_DREAMLINK_ULMB1,	ANY,	{ UQ_BAD_HID }},

 { USB_VENDOR_HUAWEI, USB_PRODUCT_HUAWEI_E220,	ANY,	{ UQ_NO_STRINGS }},
 { USB_VENDOR_SHANTOU, USB_PRODUCT_SHANTOU_DM9601, ANY, { UQ_NO_STRINGS }},
 { USB_VENDOR_RALINK, USB_PRODUCT_RALINK_RT2573, ANY,	{ UQ_NO_STRINGS }},

 /* MS keyboards do weird things */
 { USB_VENDOR_MICROSOFT, USB_PRODUCT_MICROSOFT_WLNOTEBOOK,
	ANY, { UQ_MS_BAD_CLASS | UQ_MS_LEADING_BYTE }},
 { USB_VENDOR_MICROSOFT, USB_PRODUCT_MICROSOFT_WLNOTEBOOK2,
	ANY, { UQ_MS_BAD_CLASS | UQ_MS_LEADING_BYTE }},

 { 0, 0, 0, { 0 } }
};

#define bANY 0xff
const struct usbd_dev_quirk_entry {
	u_int8_t bDeviceClass;
	u_int8_t bDeviceSubClass;
	u_int8_t bDeviceProtocol;
	struct usbd_quirks quirks;
} usb_dev_quirks[] = {
 { 0, 0, 0, { 0 } }
};

const struct usbd_quirks usbd_no_quirk = { 0 };

const struct usbd_quirks *
usbd_find_quirk(usb_device_descriptor_t *d)
{
	const struct usbd_quirk_entry *t;
	const struct usbd_dev_quirk_entry *td;
	u_int16_t vendor = UGETW(d->idVendor);
	u_int16_t product = UGETW(d->idProduct);
	u_int16_t revision = UGETW(d->bcdDevice);

	/* search device specific quirks entry */
	for (t = usb_quirks; t->idVendor != 0; t++) {
		if (t->idVendor  == vendor &&
		    t->idProduct == product &&
		    (t->bcdDevice == ANY || t->bcdDevice == revision)) {
#ifdef USB_DEBUG
			if (usbdebug && t->quirks.uq_flags)
				printf("usbd_find_quirk for specific device 0x%04x/0x%04x/%x: %d\n",
					vendor, product, UGETW(d->bcdDevice),
					t->quirks.uq_flags);
#endif
	
			return (&t->quirks);
		}
	}
	/* no device specific quirks found, search class specific entry */
	for (td = usb_dev_quirks; td->bDeviceClass != 0; td++) {
		if (td->bDeviceClass == d->bDeviceClass &&
		    (td->bDeviceSubClass == bANY ||
		     td->bDeviceSubClass == d->bDeviceSubClass) &&
		    (td->bDeviceProtocol == bANY ||
		     td->bDeviceProtocol == d->bDeviceProtocol)) {
#ifdef USB_DEBUG
			if (usbdebug && td->quirks.uq_flags)
				printf("usbd_find_quirk for device class 0x%02x/0x%02x/%x: %d\n",
					d->bDeviceClass, d->bDeviceSubClass, 
					UGETW(d->bcdDevice),
					td->quirks.uq_flags);
#endif
			return (&td->quirks);
		}
	}

	return (&usbd_no_quirk);
}
@


1.73
log
@add USB_PRODUCT_ITUNER_USBLCD256x64 as UQ_BAD_HID so libusb can talk via
interrupt transfers

OK sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.72 2014/03/20 13:07:01 andre Exp $ */
d118 1
@


1.72
log
@Add several devices we already have defined in usbdevs and are also known to be
UPSes.

(forced commit due to previous empty commit message)

ok mpi@@ sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.71 2014/03/20 12:50:49 andre Exp $ */
d129 1
@


1.71
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.70 2014/03/19 13:45:44 andre Exp $ */
@


1.70
log
@Removing devices supported by upd(4) from quirks.

ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.69 2013/10/30 12:28:19 aoyama Exp $ */
a124 11
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6C100,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6C120,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6C550AVR,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6C800,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6C900,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6C1100,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6C1250EITWRK,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6C1500EITWRK,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6H375,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_CYBERPOWER, USB_PRODUCT_CYBERPOWER_1500,	ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_CYBERPOWER, USB_PRODUCT_CYBERPOWER_OR2200, ANY,	{ UQ_BAD_HID }},
a127 8
 { USB_VENDOR_DELL2, USB_PRODUCT_DELL2_UPS,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_T750,			ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_T1000,			ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_T1500,			ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_RT2200,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_R1500G2,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_T750G2,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_IDOWELL, USB_PRODUCT_IDOWELL_IDOWELL,	ANY,	{ UQ_BAD_HID }},
a128 1
 { USB_VENDOR_LIEBERT2, USB_PRODUCT_LIEBERT2_PSA,	ANY,	{ UQ_BAD_HID }},
a130 2
 { USB_VENDOR_MGE, USB_PRODUCT_MGE_UPS1,		ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_MGE, USB_PRODUCT_MGE_UPS2,		ANY,	{ UQ_BAD_HID }},
@


1.69
log
@Treat another OMRON UPS, BY35S, as ugen(4).

Now NUT (sysutils/nut in ports) works on this device, and may work on
other OMRON UPSs, by:

1. Apply following diff to NUT source:
    https://gist.github.com/ao-kenji/7070817

2. Put following setting in /etc/nut/ups.conf.
---
[by35s]
	driver = blazer_usb
	port = auto
	desc = "OMRON BY35S"
	vendorid = 0590
	productid = 0080
	subdriver = ippon
---

Reference:
http://sunnyone41.blogspot.jp/2011/05/omron-by50subuntu-1104.html
(written in Japanese)

ok deraadt@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.68 2013/03/08 02:21:43 jcs Exp $ */
a111 2
 { USB_VENDOR_APC, USB_PRODUCT_APC_UPS,			ANY,	{ UQ_BAD_HID }},
 { USB_VENDOR_APC, USB_PRODUCT_APC_UPS5G,		ANY,	{ UQ_BAD_HID }},
a147 1
 { USB_VENDOR_LIEBERT, USB_PRODUCT_LIEBERT_UPS,		ANY,	{ UQ_BAD_HID }},
@


1.68
log
@backout previous phidgets quirk
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.67 2013/03/07 23:43:14 jcs Exp $ */
d159 1
@


1.67
log
@add a quirk for phidgets to attach as ugen instead of uhid
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.66 2012/01/31 21:13:32 brynet Exp $ */
a158 1
 { USB_VENDOR_PHIDGETS, USB_PRODUCT_PHIDGETS_2X2,	ANY,	{ UQ_BAD_HID }},
@


1.66
log
@add uhid/uaudio quirks for the iPad and iPad 2.

ok deraadt@@/dcoppa@@ and sthen@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.65 2011/12/01 23:02:12 dhill Exp $ */
d159 1
@


1.65
log
@Mark Apple iPod and iPhone products with UQ_BAD_HID and UAUDIO_FLAG_BAD_AUDIO.

This allows these devices to attach as ugen, so at least we can use some apps,
like gphoto2 to retrieve media.

requested by a few,  ok mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.64 2011/03/09 17:03:06 sthen Exp $ */
d123 3
a125 1
 { USB_VENDOR_APPLE, USB_PRODUCT_APPLE_IPOD_TOUCH_4G,	ANY,	{ UQ_BAD_HID }}, 
@


1.64
log
@Knock out a bunch more UPS devices from attaching to uhid(4).
feedback/ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.63 2010/12/02 06:39:09 jakemsr Exp $ */
d114 10
@


1.63
log
@don't attach to the hid interface of the ti msp430
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.62 2010/10/03 17:25:21 armani Exp $ */
d112 2
a113 1
 { USB_VENDOR_APC, USB_PRODUCT_APC_UPSPRO500,		ANY,	{ UQ_BAD_HID }},
d115 1
d118 4
d123 1
d125 1
d129 8
d138 2
a139 1
 { USB_VENDOR_LIEBERT, USB_PRODUCT_LIEBERT_POWERSURE_PXT, ANY,	{ UQ_BAD_HID }},
@


1.62
log
@Prevent the Dream Link USB LED Message Board to be attached as an HID
device so it can be used in userland.

ok jasper@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.61 2010/09/15 17:25:36 jasper Exp $ */
d132 1
@


1.61
log
@- prevent about then dots from being emitted by my rum(4) upon attach.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.60 2010/08/21 17:31:49 jasper Exp $ */
d133 1
@


1.60
log
@- add a quirk for the apple clear orb usb speakers
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.59 2010/08/02 13:58:37 miod Exp $ */
d136 1
@


1.59
log
@Quirk for USB_PRODUCT_MICROSOFT_WLINTELLIMOUSE turns out not to be
required; PR 6436
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.58 2010/07/19 05:08:37 jakemsr Exp $ */
d113 1
@


1.58
log
@move audio specific quirks out of usb_quirks and into uaudio

ok krw
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.57 2010/07/15 15:45:48 sthen Exp $ */
a140 2
 { USB_VENDOR_MICROSOFT, USB_PRODUCT_MICROSOFT_WLINTELLIMOUSE,
	ANY, { UQ_MS_LEADING_BYTE }},
@


1.57
log
@knock out MetaGeek Wi-Spy 2.4i from attaching to uhid.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.56 2010/04/07 21:18:42 jasper Exp $ */
a57 12
 { USB_VENDOR_DALLAS, USB_PRODUCT_DALLAS_J6502,	    0x0a2, { UQ_BAD_ADC }},
 { USB_VENDOR_DALLAS, USB_PRODUCT_DALLAS_J6502,	    0x0a2, { UQ_AU_NO_XU }},
 { USB_VENDOR_ALTEC, USB_PRODUCT_ALTEC_ADA70,	    0x103, { UQ_BAD_ADC }},
 { USB_VENDOR_ALTEC, USB_PRODUCT_ALTEC_ASC495,      0x000, { UQ_BAD_AUDIO }},
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_QUICKCAMNBDLX,
	0x100, { UQ_BAD_AUDIO }},
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_QUICKCAMPRONB,
	0x000, { UQ_BAD_AUDIO }},
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_QUICKCAMPRO4K,
	0x000, { UQ_BAD_AUDIO }},
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_QUICKCAMZOOM,
	0x000, { UQ_BAD_AUDIO }},
a94 1
 { USB_VENDOR_TELEX, USB_PRODUCT_TELEX_MIC1,	    0x009, { UQ_AU_NO_FRAC }},
@


1.56
log
@- add my shantou DM9601 (UQ_NO_STRINGS).

ok sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.55 2010/04/07 21:00:33 sthen Exp $ */
d136 1
@


1.55
log
@Add Velleman K8055 USB experimenter kit (from Jens Teglhus Moller)
and Belkin F6C120 UPS, both UQ_BAD_HID.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.54 2010/04/07 20:53:52 sthen Exp $ */
d146 1
@


1.54
log
@Move UQ_BAD_HIDs together and line up columns better.
ok deraadt@@, earlier version ok jasper@@, feedback halex@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.53 2009/10/17 07:10:38 jakemsr Exp $ */
d126 1
d143 1
@


1.53
log
@remove bogus quirk.  these devices do not lie about their type, but
they do have bSynchAddress set to 0 in their endpoint descriptor.
uaudio(4) used to not handle that correctly, but now does.

positive response from krw, deraadt, ratchov
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.52 2009/05/11 08:07:42 yuo Exp $ */
d82 1
a82 1
 /* YAMAHA router's ucdDevice is the version of farmware and often changes. */
a108 3
 { USB_VENDOR_TERRATEC, USB_PRODUCT_TERRATEC_AUREON,
   						    ANY, { UQ_BAD_HID }},

a119 1
 { USB_VENDOR_ITUNER, USB_PRODUCT_ITUNER_USBLCD20x2,	    ANY,   { UQ_BAD_HID }},
d124 4
a127 9
 { USB_VENDOR_MECANIQUE, USB_PRODUCT_MECANIQUE_WISPY, ANY,   { UQ_BAD_HID }},
 { USB_VENDOR_OMRON, USB_PRODUCT_OMRON_BX35F,       ANY,   { UQ_BAD_HID }},
 { USB_VENDOR_OMRON, USB_PRODUCT_OMRON_BX50F,       ANY,   { UQ_BAD_HID }},
 { USB_VENDOR_TENX, USB_PRODUCT_TENX_MISSILE,	    ANY,   { UQ_BAD_HID }},
 { USB_VENDOR_APC, USB_PRODUCT_APC_UPSPRO500,	    ANY,   { UQ_BAD_HID }},
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6C550AVR, ANY,   { UQ_BAD_HID }},
 { USB_VENDOR_BELKIN, USB_PRODUCT_BELKIN_F6C1500EITWRK,    ANY,    { UQ_BAD_HID }},
 { USB_VENDOR_MGE, USB_PRODUCT_MGE_UPS1,	    ANY,   { UQ_BAD_HID }},
 { USB_VENDOR_MGE, USB_PRODUCT_MGE_UPS2,	    ANY,   { UQ_BAD_HID }},
d129 8
d138 6
a143 1
 { USB_VENDOR_LIEBERT, USB_PRODUCT_LIEBERT_POWERSURE_PXT, ANY, { UQ_BAD_HID }},
d145 2
a146 2
  /* MS keyboards do weird things */
  { USB_VENDOR_MICROSOFT, USB_PRODUCT_MICROSOFT_WLNOTEBOOK,
d148 1
a148 1
  { USB_VENDOR_MICROSOFT, USB_PRODUCT_MICROSOFT_WLNOTEBOOK2,
d150 1
a150 1
  { USB_VENDOR_MICROSOFT, USB_PRODUCT_MICROSOFT_WLINTELLIMOUSE,
a151 8

 /* SISPM devices */
 { USB_VENDOR_CYPRESS, USB_PRODUCT_CYPRESS_SISPM_OLD,	    ANY,   { UQ_BAD_HID }},
 { USB_VENDOR_CYPRESS, USB_PRODUCT_CYPRESS_SISPM,	    ANY,   { UQ_BAD_HID }},
 { USB_VENDOR_CYPRESS, USB_PRODUCT_CYPRESS_SISPM_FLASH,	    ANY,   { UQ_BAD_HID }},

 /* HUAWEI devices */
 { USB_VENDOR_HUAWEI, USB_PRODUCT_HUAWEI_E220,	ANY,	{ UQ_NO_STRINGS }},
@


1.52
log
@some huawei E220 OEM devices has broken strings in the device descriptor.
to suppress broken output in dmesg, add { UQ_NO_STRINGS } flag to the device.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.51 2009/04/22 18:56:56 deraadt Exp $ */
a107 6
 { USB_VENDOR_SILICONPORTALS, USB_PRODUCT_SILICONPORTALS_YAPPHONE,
   						    0x100, { UQ_AU_INP_ASYNC }},
 { USB_VENDOR_AVANCELOGIC, USB_PRODUCT_AVANCELOGIC_USBAUDIO,
   						    0x101, { UQ_AU_INP_ASYNC }},
 { USB_VENDOR_PLANTRONICS, USB_PRODUCT_PLANTRONICS_HEADSET,
   						    0x004, { UQ_AU_INP_ASYNC }},
@


1.51
log
@sync to MECANIQUE change, and add a uftdi found there, spotted by Henrik Hellerstedt
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.50 2008/11/29 21:54:46 deraadt Exp $ */
d159 3
@


1.50
log
@liebert ubs as ugen
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.49 2008/11/25 08:57:07 jasper Exp $ */
d134 1
a134 1
 { USB_VENDOR_METAGEEK, USB_PRODUCT_METAGEEK_WISPY, ANY,   { UQ_BAD_HID }},
@


1.49
log
@- add a quirk for the terratec uaudio device to stop uhidev(4)
from attaching

with a hint from mglocker@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.48 2008/09/08 16:58:32 martynas Exp $ */
d145 1
@


1.48
log
@prevent mustek from attaching as uhid.  ok theo, sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.47 2008/08/27 17:33:32 deraadt Exp $ */
d114 4
@


1.47
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.46 2008/08/26 22:25:20 deraadt Exp $ */
d140 1
@


1.46
log
@another ups to knock out of being a uhid
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.45 2008/08/11 05:37:01 mglocker Exp $ */
d136 1
@


1.45
log
@Since we have ehci(4) isoc support now, don't demote USB2 uvideo(4)
devices to USB1, instead let them attach to ehci(4).

This may break a couple of the devices for the moment, but it's the way
we have to go finally.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.44 2008/07/22 16:24:40 mglocker Exp $ */
d138 1
@


1.44
log
@There are devices out there which are UVC compatible, but do not show
up as this (we love standards).  To make those devices attach anyway
we add an explicit quirk device list.  Of course this list still needs
to be extended.

Thanks to Jerome Pinot for reporting about this issue and testing this
diff with his cam, which is such a device.

OK yuo@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.43 2008/06/29 10:04:15 yuo Exp $ */
a151 3
/* devices which are UVC compatible (uvideo) but don't set UDCLASS_VIDEO */
{ USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_QUICKCAMOEM_1,
	ANY, { UQ_EHCI_NEEDTO_DISOWN }},
a161 1
 { UDCLASS_VIDEO, bANY,	bANY,	{ UQ_EHCI_NEEDTO_DISOWN }},
@


1.43
log
@add usb2.0 to usb1.1(ohci/uchi) handover request to usb subsystem.
add new quirk entry for uvideo which is required isoc transfer.

Some usb2.0 devices use isochronous transfer but current usb
subsystem does not support isoc transfer in ehci(usb2.0) bus.
This patch introduce new psuedo usb hub request UHF_PORT_DISOWN_TO_1_1
to handover the device to ehci to usb1.1 bus(ohci or uhci).

ok mglocker@@ deraadt@@ fgsch@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.42 2008/06/26 05:42:19 ray Exp $ */
d151 4
@


1.42
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.41 2008/06/22 23:15:24 brad Exp $ */
d161 1
a161 1
 /* currently this table is empty */
@


1.41
log
@Remove the QuickCam Pro 5000 from the quirks list now that there
is a UVC driver.

ok robert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.40 2008/06/19 08:18:57 brad Exp $ */
a20 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.40
log
@Sync USB ids. Although the Pro 5000 should be removed as it is
a UVC compliant webcam.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.39 2008/06/15 18:30:08 miod Exp $ */
a74 2
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_QUICKCAMPRO5K_2,
	0x005, { UQ_BAD_AUDIO }},
@


1.39
log
@typo
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.38 2008/06/15 18:10:03 yuo Exp $ */
d69 1
a69 1
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_QUICKCAMDLXNB,
d75 1
a75 1
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_QUICKCAMPRO5K,
@


1.38
log
@expand the quirk framework to enable device class match

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.37 2008/05/24 20:39:18 ckuethe Exp $ */
d200 1
a200 1
	/* no device specific quirks found, serarch class specific entry */
@


1.37
log
@Add a quirk to prevent this LCD device from attaching as a HID. This is a
not somewhere we want to go in the long term - adding a quirk for every
device out there that does something a little funky. It would be better if
devices that claimed they are HIDs actually acted like it. Failing that,
passing usb commands though uhid would be nice.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.36 2008/05/08 13:57:43 miod Exp $ */
d163 11
d180 1
d185 1
d189 10
a198 2
		    (t->bcdDevice == ANY || t->bcdDevice == revision))
			break;
d200 7
d208 5
a212 4
	if (usbdebug && t->quirks.uq_flags)
		printf("usbd_find_quirk 0x%04x/0x%04x/%x: %d\n",
			  UGETW(d->idVendor), UGETW(d->idProduct),
			  UGETW(d->bcdDevice), t->quirks.uq_flags);
d214 5
a218 1
	return (&t->quirks);
@


1.36
log
@Add support for Microsoft Wireless Intellimouse, from FreeBSD. Not only does
this device bends the uhid specs backwards, it is also completely unusable
for left-handed people due to its shape.

Tested on actual hardware thanks to a donation from Maxim Belooussov.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.35 2008/05/06 05:59:49 deraadt Exp $ */
d134 1
@


1.35
log
@another omron usb that must be ugen; vladas.urbonas@@gmail
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.34 2008/02/23 22:19:13 deraadt Exp $ */
d146 8
@


1.34
log
@SiSPM devices are like belkin ups; do not attach as uhid, pr#5719
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.33 2007/11/25 22:26:55 deraadt Exp $ */
d140 1
@


1.33
log
@add CNU550pro; from iss @@ e-sky.ru
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.32 2007/11/21 17:34:19 robert Exp $ */
d145 5
@


1.32
log
@attach Logitech QuickCam Pro 5000 as ugen for now
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.31 2007/11/14 12:13:56 deraadt Exp $ */
d109 2
@


1.31
log
@CCU-550 EVDO; Alexey Vatchenko
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.30 2007/08/28 09:45:46 henning Exp $ */
d75 2
@


1.30
log
@OMRON BX35F is a UPS and should not be claimed by uhid
From: vladas <vladas.urbonas@@gmail.com>
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.29 2007/06/05 08:43:56 mbalmer Exp $ */
d105 2
@


1.29
log
@Remove the "Static" declaration of many functions.  It was defined to be empty
and it was not consistently used.  It was confusing as it suggested these
functions were static, which they were not.

discussed with dlg and jsg, ok jsg.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.28 2007/05/22 09:55:15 robert Exp $ */
d133 1
@


1.28
log
@A quirk is needed for the Logitech QuickCam Notebook to prevent attaching
to uaudio(4) instead of ugen(4), because of the internal microphone.
from brad;
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.27 2007/05/21 05:40:28 jsg Exp $ */
d56 1
a56 1
Static const struct usbd_quirk_entry {
@


1.27
log
@Remove logprintf macro
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.26 2007/01/01 22:27:00 deraadt Exp $ */
d69 2
@


1.26
log
@knock UPS products out from being matched as HID devices
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.25 2006/11/11 14:39:22 jolan Exp $ */
d157 1
a157 1
		logprintf("usbd_find_quirk 0x%04x/0x%04x/%x: %d\n",
@


1.25
log
@add quirk for the usb missile launcher
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.24 2006/08/16 19:12:05 jason Exp $ */
d132 4
@


1.24
log
@don't quirk the earthmates
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.23 2006/08/12 04:31:51 jason Exp $ */
d131 1
@


1.23
log
@the delorme earthmate is NOT a HID (UQ_BAD_HID)
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.22 2006/05/14 12:00:04 matthieu Exp $ */
a130 2
 { USB_VENDOR_DELORME, USB_PRODUCT_DELORME_EMUSB,   ANY,   { UQ_BAD_HID }},
 { USB_VENDOR_DELORME, USB_PRODUCT_DELORME_EMLT20,  ANY,   { UQ_BAD_HID }},
@


1.22
log
@Add a quirk to force the Wi-spy spectrum analyser to attach as ugen.
It claims to be a HID device, but it's not really one. ok miod@@, jsg@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.21 2006/03/31 04:35:39 drahn Exp $ */
d131 2
@


1.21
log
@Add GSM modem SIEMENS ES75 - from patch sent to freebsd-usb@@ by Jindra Fucik
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.20 2006/02/10 23:29:02 djm Exp $ */
d130 1
@


1.20
log
@CMOTech/Maxon EVDO card needs ASSUME_CM_OVER_DATA quirk to attach; ok dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.19 2005/12/24 12:45:54 robert Exp $ */
d103 2
@


1.19
log
@Add Logitech QuickCam Zoom support.
A quirk is needed to prevent attaching to uaudio(4) instead of ugen(4),
because of the internal microphone.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.18 2004/10/31 14:06:40 jsg Exp $ */
d102 2
@


1.18
log
@sync with quirks from FreeBSD and NetBSD, ok dlg
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.17 2004/10/31 12:22:34 jsg Exp $ */
d72 2
@


1.17
log
@UQ_NO_STRINGS no longer needed, ok dlg
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.16 2003/06/27 20:12:59 nate Exp $ */
d69 4
d81 20
d115 4
d120 4
@


1.16
log
@more quirks from netbsd
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.15 2002/07/25 04:07:33 nate Exp $ */
a64 4
 { USB_VENDOR_BTC, USB_PRODUCT_BTC_BTC7932,	    0x100, { UQ_NO_STRINGS }},
 { USB_VENDOR_ADS, USB_PRODUCT_ADS_UBS10BT,	    0x002, { UQ_NO_STRINGS }},
 { USB_VENDOR_PERACOM, USB_PRODUCT_PERACOM_SERIAL1, 0x101, { UQ_NO_STRINGS }},
 { USB_VENDOR_WACOM, USB_PRODUCT_WACOM_CT0405U,     0x101, { UQ_NO_STRINGS }},
d74 1
a74 1
 	0x100, { UQ_ASSUME_CM_OVER_DATA | UQ_NO_STRINGS }},
d76 1
a76 1
 	0x000, { UQ_ASSUME_CM_OVER_DATA | UQ_NO_STRINGS }},
a77 2
 { USB_VENDOR_ACERP, USB_PRODUCT_ACERP_ACERSCAN_320U,
						    0x000, { UQ_NO_STRINGS }},
a82 1
 { USB_VENDOR_NEODIO, USB_PRODUCT_NEODIO_ND5010,    0x100, { UQ_NO_STRINGS }},
a91 1
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_WMRPAD,  ANY, { UQ_NO_STRINGS }},
@


1.15
log
@update $NetBSD$ tags
@
text
@d1 3
a3 3
/*	$OpenBSD: usb_quirks.c,v 1.14 2002/07/25 02:18:11 nate Exp $ */
/*	$NetBSD: usb_quirks.c,v 1.40 2002/07/11 21:14:34 augustss Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/usb_quirks.c,v 1.13 1999/11/17 22:33:47 n_hibma Exp $	*/
d79 2
d87 5
d98 2
a99 1

@


1.14
log
@get rid of trailing whitespace
@
text
@d1 2
a2 2
/*	$OpenBSD: usb_quirks.c,v 1.13 2002/05/07 20:06:28 nate Exp $ */
/*	$NetBSD: usb_quirks.c,v 1.39 2001/11/13 06:24:56 lukem Exp $	*/
@


1.13
log
@Sync quirks with NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.12 2002/05/07 18:29:18 nate Exp $ */
d44 1
a44 1
 
d63 1
a63 1
 { USB_VENDOR_INSIDEOUT, USB_PRODUCT_INSIDEOUT_EDGEPORT4, 
d113 1
a113 1
		logprintf("usbd_find_quirk 0x%04x/0x%04x/%x: %d\n", 
@


1.12
log
@Meant to commit only ulpt and committed everything.  Most things weren't ready
@
text
@d1 2
a2 2
/*	$OpenBSD: usb_quirks.c,v 1.10 2001/10/31 04:24:44 nate Exp $ */
/*	$NetBSD: usb_quirks.c,v 1.38 2001/04/15 10:26:36 augustss Exp $	*/
a76 2
 { USB_VENDOR_MCT, USB_PRODUCT_MCT_SITECOM_USB232,  0x102, { UQ_BUS_POWERED }},
 { USB_VENDOR_MCT, USB_PRODUCT_MCT_DU_H3SP_USB232,  0x102, { UQ_BUS_POWERED }},
@


1.11
log
@Sync ulpt driver with NetBSD
@
text
@d2 1
a2 1
/*	$NetBSD: usb_quirks.c,v 1.39 2001/11/13 06:24:56 lukem Exp $	*/
d77 2
@


1.10
log
@Synchronize usb code with NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD: usb_quirks.c,v 1.9 2001/05/03 02:20:34 aaron Exp $ */
/*	$NetBSD: usb_quirks.c,v 1.38 2001/04/15 10:26:36 augustss Exp $	*/
a76 2
 { USB_VENDOR_MCT, USB_PRODUCT_MCT_SITECOM_USB232,  0x102, { UQ_BUS_POWERED }},
 { USB_VENDOR_MCT, USB_PRODUCT_MCT_DU_H3SP_USB232,  0x102, { UQ_BUS_POWERED }},
@


1.10.2.1
log
@Sync UBC branch to -current
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: usb_quirks.c,v 1.39 2001/11/13 06:24:56 lukem Exp $	*/
d77 2
@


1.10.2.2
log
@sync to -current
@
text
@d2 1
a2 1
/*	$NetBSD: usb_quirks.c,v 1.40 2002/07/11 21:14:34 augustss Exp $	*/
d44 1
a44 1

d63 1
a63 1
 { USB_VENDOR_INSIDEOUT, USB_PRODUCT_INSIDEOUT_EDGEPORT4,
d113 1
a113 1
		logprintf("usbd_find_quirk 0x%04x/0x%04x/%x: %d\n",
@


1.9
log
@Sync with NetBSD. Tested with a USB keyboard, USB mouse, and three different
kue(4) Ethernet devices.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.8 2001/01/28 09:43:42 aaron Exp $ */
d77 2
d88 5
a92 7
#ifdef notyet
 { USB_VENDOR_HP, USB_PRODUCT_HP_895C,		    ANY,  { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_880C,		    ANY,  { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_815C,		    ANY,  { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_810C,		    ANY,  { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_830C,		    ANY,  { UQ_BROKEN_BIDIR }},
#endif
@


1.8
log
@Another USB sync with NetBSD. We are still lacking an up-to-date umass(4)
driver. I would appreciate it if someone with the hardware looked into it.
I also have to take a closer look at changes to the USB Ethernet drivers,
as well as import some drivers we are missing (uftdi, if_upl, yap, etc.)
@
text
@d1 2
a2 2
/*	$OpenBSD: usb_quirks.c,v 1.7 2000/11/08 18:10:39 aaron Exp $ */
/*	$NetBSD: usb_quirks.c,v 1.31 2000/10/24 14:57:35 augustss Exp $	*/
d54 2
d85 9
d103 3
d108 3
a110 3
		if (t->idVendor  == UGETW(d->idVendor) &&
		    t->idProduct == UGETW(d->idProduct) &&
		    t->bcdDevice == UGETW(d->bcdDevice))
@


1.7
log
@Sync with NetBSD. Too many changes to mention. For now I have skipped
umass.c and ukbd.c as the diffs are a bit hairier.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.6 2000/07/04 11:44:25 fgsch Exp $ */
d54 1
a54 1
Static struct usbd_quirk_entry {
d68 1
a68 1
 { USB_VENDOR_DALLAS, USB_PRODUCT_DALLAS_J6502,	    0x0a2, { UQ_NO_XU }},
d78 5
d86 1
a86 1
struct usbd_quirks usbd_no_quirk = { 0 };
d88 1
a88 1
struct usbd_quirks *
d91 1
a91 1
	struct usbd_quirk_entry *t;
@


1.6
log
@sync with NetBSD... well almost. someone w/ the hw should check umass.
@
text
@d1 2
a2 2
/*	$OpenBSD: usb_quirks.c,v 1.5 2000/03/30 16:19:33 aaron Exp $ */
/*	$NetBSD: usb_quirks.c,v 1.24 2000/03/27 12:33:58 augustss Exp $	*/
d61 1
a61 1
 { USB_VENDOR_INSIDEOUT,USB_PRODUCT_INSIDEOUT_EDGEPORT4, 
d68 1
d72 1
d75 3
d84 1
a84 2
usbd_find_quirk(d)
	usb_device_descriptor_t *d;
@


1.5
log
@Sync with NetBSD. USB Ethernet drivers should work now.
@
text
@d1 1
a1 1
/*	$OpenBSD: usb_quirks.c,v 1.4 2000/03/28 19:37:50 aaron Exp $ */
d10 1
a10 1
 * by Lennart Augustsson (augustss@@carlstedt.se) at
d71 2
@


1.4
log
@Much cleaner sync with NetBSD. Some #if defined() magic has been sent in the
form of a diff to augustss@@netbsd.org so that future syncs will be very easy.
This commit also adds support for ADMtek AN986 "Pegasus" based USB Ethernet,
CATC USB-EL1210A based USB Ethernet, and USB Printers (all untested).
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: usb_quirks.c,v 1.23 2000/03/25 17:30:00 augustss Exp $	*/
d54 1
a54 1
static struct usbd_quirk_entry {
@


1.3
log
@Sync with NetBSD.
@
text
@d1 3
a3 2
/*	$OpenBSD: usb_quirks.c,v 1.2 1999/09/27 18:03:56 fgsch Exp $	*/
/*	$NetBSD: usb_quirks.c,v 1.22 2000/03/16 21:51:24 augustss Exp $	*/
d54 1
a54 1
struct usbd_quirk_entry {
d66 1
d68 1
a68 1
 { USB_VENDOR_ALTEC, USB_PRODUCT_ALTEC_ADA70,       0x103, { UQ_BAD_ADC }},
d70 1
a70 1
 { USB_VENDOR_QTRONIX, USB_PRODUCT_QTRONIX_980N,    0x110, {UQ_SPUR_BUT_UP}},
@


1.2
log
@Sync with NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: usb_quirks.c,v 1.14 1999/09/15 13:57:09 augustss Exp $	*/
a42 3
#if defined(__FreeBSD__)
#include <sys/bus.h>
#endif
d58 1
a58 1
} quirks[] = {
d63 1
a63 1
 { USB_VENDOR_ADS, USB_PRODUCT_ADS_ENET,	    0x002, { UQ_NO_STRINGS }},
d66 3
a68 1
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_N48,   0x110, { UQ_MS_REVZ }},
d80 1
a80 1
	for (t = quirks; t->idVendor != 0; t++) {
@


1.2.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 3
/*	$OpenBSD: usb_quirks.c,v 1.8 2001/01/28 09:43:42 aaron Exp $ */
/*	$NetBSD: usb_quirks.c,v 1.31 2000/10/24 14:57:35 augustss Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/usb_quirks.c,v 1.13 1999/11/17 22:33:47 n_hibma Exp $	*/
d9 1
a9 1
 * by Lennart Augustsson (lennart@@augustsson.net) at
d43 3
d56 1
a56 1
Static const struct usbd_quirk_entry {
d61 1
a61 1
} usb_quirks[] = {
d63 1
a63 1
 { USB_VENDOR_INSIDEOUT, USB_PRODUCT_INSIDEOUT_EDGEPORT4, 
d66 1
a66 1
 { USB_VENDOR_ADS, USB_PRODUCT_ADS_UBS10BT,	    0x002, { UQ_NO_STRINGS }},
a67 1
 { USB_VENDOR_WACOM, USB_PRODUCT_WACOM_CT0405U,     0x101, { UQ_NO_STRINGS }},
d69 1
a69 15
 { USB_VENDOR_DALLAS, USB_PRODUCT_DALLAS_J6502,	    0x0a2, { UQ_AU_NO_XU }},
 { USB_VENDOR_ALTEC, USB_PRODUCT_ALTEC_ADA70,	    0x103, { UQ_BAD_ADC }},
 { USB_VENDOR_ALTEC, USB_PRODUCT_ALTEC_ASC495,      0x000, { UQ_BAD_AUDIO }},
 { USB_VENDOR_QTRONIX, USB_PRODUCT_QTRONIX_980N,    0x110, { UQ_SPUR_BUT_UP }},
 { USB_VENDOR_ALCOR2, USB_PRODUCT_ALCOR2_KBD_HUB,   0x001, { UQ_SPUR_BUT_UP }},
 { USB_VENDOR_MCT, USB_PRODUCT_MCT_HUB0100,         0x102, { UQ_BUS_POWERED }},
 { USB_VENDOR_MCT, USB_PRODUCT_MCT_USB232,          0x102, { UQ_BUS_POWERED }},
 { USB_VENDOR_METRICOM, USB_PRODUCT_METRICOM_RICOCHET_GS,
 	0x100, { UQ_ASSUME_CM_OVER_DATA | UQ_NO_STRINGS }},
 { USB_VENDOR_TI, USB_PRODUCT_TI_UTUSB41,	    0x110, { UQ_POWER_CLAIM }},
 { USB_VENDOR_ACERP, USB_PRODUCT_ACERP_ACERSCAN_320U,
						    0x000, { UQ_NO_STRINGS }},
 { USB_VENDOR_TELEX, USB_PRODUCT_TELEX_MIC1,	    0x009, { UQ_AU_NO_FRAC }},
 { USB_VENDOR_SILICONPORTALS, USB_PRODUCT_SILICONPORTALS_YAPPHONE,
   						    0x100, { UQ_AU_INP_ASYNC }},
d73 1
a73 1
const struct usbd_quirks usbd_no_quirk = { 0 };
d75 3
a77 2
const struct usbd_quirks *
usbd_find_quirk(usb_device_descriptor_t *d)
d79 1
a79 1
	const struct usbd_quirk_entry *t;
d81 1
a81 1
	for (t = usb_quirks; t->idVendor != 0; t++) {
@


1.2.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: usb_quirks.c,v 1.38 2001/04/15 10:26:36 augustss Exp $	*/
a53 2
#define ANY 0xffff

a82 9
 /* XXX These should have a revision number, but I don't know what they are. */
#ifdef notyet
 { USB_VENDOR_HP, USB_PRODUCT_HP_895C,		    ANY,  { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_880C,		    ANY,  { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_815C,		    ANY,  { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_810C,		    ANY,  { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_830C,		    ANY,  { UQ_BROKEN_BIDIR }},
#endif

a91 3
	u_int16_t vendor = UGETW(d->idVendor);
	u_int16_t product = UGETW(d->idProduct);
	u_int16_t revision = UGETW(d->bcdDevice);
d94 3
a96 3
		if (t->idVendor  == vendor &&
		    t->idProduct == product &&
		    (t->bcdDevice == ANY || t->bcdDevice == revision))
@


1.2.4.3
log
@Merge in -current
@
text
@a76 2
 { USB_VENDOR_MCT, USB_PRODUCT_MCT_SITECOM_USB232,  0x102, { UQ_BUS_POWERED }},
 { USB_VENDOR_MCT, USB_PRODUCT_MCT_DU_H3SP_USB232,  0x102, { UQ_BUS_POWERED }},
d86 7
a92 5
 { USB_VENDOR_HP, USB_PRODUCT_HP_895C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_880C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_815C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_810C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_HP, USB_PRODUCT_HP_830C,		    ANY,   { UQ_BROKEN_BIDIR }},
@


1.2.4.4
log
@Sync the SMP branch with 3.3
@
text
@d2 1
a2 1
/*	$NetBSD: usb_quirks.c,v 1.40 2002/07/11 21:14:34 augustss Exp $	*/
d44 1
a44 1

d63 1
a63 1
 { USB_VENDOR_INSIDEOUT, USB_PRODUCT_INSIDEOUT_EDGEPORT4,
d77 2
d115 1
a115 1
		logprintf("usbd_find_quirk 0x%04x/0x%04x/%x: %d\n",
@


1.2.4.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d2 2
a3 2
/*	$NetBSD: usb_quirks.c,v 1.45 2003/05/10 17:47:14 hamajima Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/usb_quirks.c,v 1.30 2003/01/02 04:15:55 imp Exp $	*/
a78 2
 { USB_VENDOR_SANYO, USB_PRODUCT_SANYO_SCP4900,
 	0x000, { UQ_ASSUME_CM_OVER_DATA | UQ_NO_STRINGS }},
a84 5
 { USB_VENDOR_AVANCELOGIC, USB_PRODUCT_AVANCELOGIC_USBAUDIO,
   						    0x101, { UQ_AU_INP_ASYNC }},
 { USB_VENDOR_NEODIO, USB_PRODUCT_NEODIO_ND5010,    0x100, { UQ_NO_STRINGS }},
 { USB_VENDOR_PLANTRONICS, USB_PRODUCT_PLANTRONICS_HEADSET,
   						    0x004, { UQ_AU_INP_ASYNC }},
d91 1
a91 2
 { USB_VENDOR_HP, USB_PRODUCT_HP_1220C,		    ANY,   { UQ_BROKEN_BIDIR }},
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_WMRPAD,  ANY, { UQ_NO_STRINGS }},
@


1.1
log
@From NetBSD; USB support.
@
text
@d2 1
a2 1
/*	$NetBSD: usb_quirks.c,v 1.11 1999/06/26 00:09:15 augustss Exp $	*/
d62 1
a62 1
 { USB_VENDOR_GENIUS, USB_PRODUCT_GENIUS_NICHE,     0x100, { UQ_NO_SET_PROTO}},
d68 2
a69 2
 { USB_VENDOR_JAZZ, USB_PRODUCT_JAZZ_J6502,	    0x0a2, { UQ_BAD_ADC }},
 { USB_VENDOR_LOGITECH, USB_PRODUCT_LOGITECH_USBPS2,0x110, { UQ_MS_REVZ }},
d89 3
a91 3
		printf("usbd_find_quirk 0x%04x/0x%04x/%x: %d\n", 
		       UGETW(d->idVendor), UGETW(d->idProduct),
		       UGETW(d->bcdDevice), t->quirks.uq_flags);
@

