head	1.15;
access;
symbols
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.18
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.16
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.10
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.12
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.4
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.8
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.6
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.14.0.12
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.10
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.8
	OPENBSD_5_0:1.14.0.6
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.4
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.13.0.6
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.8
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.4
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.2
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.11.0.14
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.16
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.6
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.8
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.7.0.6
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.10
	UBC:1.7.0.4
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	SMP:1.1.0.2
	SMP_BASE:1.1
	kame_19991208:1.1;
locks; strict;
comment	@ * @;


1.15
date	2013.04.15.09.23.02;	author mglocker;	state Exp;
branches;
next	1.14;

1.14
date	2010.07.23.19.59.09;	author jakemsr;	state Exp;
branches;
next	1.13;

1.13
date	2008.06.26.05.42.18;	author ray;	state Exp;
branches;
next	1.12;

1.12
date	2007.06.09.11.06.53;	author mbalmer;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.19.05.27.00;	author nate;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.25.04.07.32;	author nate;	state Exp;
branches;
next	1.9;

1.9
date	2002.07.25.02.18.10;	author nate;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.06.23.07.26;	author nate;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.03.02.20.33;	author aaron;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2001.01.28.09.43.41;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.08.18.10.37;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.04.11.44.22;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.28.19.37.49;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.26.08.39.45;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.11.11.15.54.59;	author ho;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.05.14.22.26.20;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.07.04.10.43.48;	author niklas;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2003.03.28.00.38.31;	author niklas;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2003.06.07.11.02.33;	author ho;	state Exp;
branches;
next	;

1.7.4.1
date	2002.06.11.03.42.30;	author art;	state Exp;
branches;
next	1.7.4.2;

1.7.4.2
date	2002.10.29.00.33.32;	author art;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Get rid of various 'typedef struct' definitions and use plain structure
definitions instead.  We don't change usb.h for now to stay compatible
with userland.

Tested by mpi@@ on macppc and myself on i386.

ok mpi@@
@
text
@/*	$OpenBSD: uaudioreg.h,v 1.14 2010/07/23 19:59:09 jakemsr Exp $ */
/*	$NetBSD: uaudioreg.h,v 1.11 2002/10/23 02:32:37 christos Exp $	*/

/*
 * Copyright (c) 1999 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#define UAUDIO_VERSION		0x100

#define UDESC_CS_CONFIG		0x22
#define UDESC_CS_STRING		0x23
#define UDESC_CS_INTERFACE	0x24
#define UDESC_CS_ENDPOINT	0x25

#define UDESCSUB_AC_HEADER	1
#define UDESCSUB_AC_INPUT	2
#define UDESCSUB_AC_OUTPUT	3
#define UDESCSUB_AC_MIXER	4
#define UDESCSUB_AC_SELECTOR	5
#define UDESCSUB_AC_FEATURE	6
#define UDESCSUB_AC_PROCESSING	7
#define UDESCSUB_AC_EXTENSION	8

/* The first fields are identical to usb_endpoint_descriptor_t */
struct usb_endpoint_descriptor_audio {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bEndpointAddress;
	uByte		bmAttributes;
	uWord		wMaxPacketSize;
	uByte		bInterval;
	/*
	 * The following two entries are only used by the Audio Class.
	 * And according to the specs the Audio Class is the only one
	 * allowed to extend the endpoint descriptor.
	 * Who knows what goes on in the minds of the people in the USB
	 * standardization?  :-(
	 */
	uByte		bRefresh;
	uByte		bSynchAddress;
} __packed;
#define USB_ENDPOINT_DESCRIPTOR_AUDIO_SIZE 9

struct usb_audio_control_descriptor {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uWord		bcdADC;
	uWord		wTotalLength;
	uByte		bInCollection;
	uByte		baInterfaceNr[1];
} __packed;

struct usb_audio_streaming_interface_descriptor {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bTerminalLink;
	uByte		bDelay;
	uWord		wFormatTag;
} __packed;

struct usb_audio_streaming_endpoint_descriptor {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bmAttributes;
#define UA_SED_FREQ_CONTROL	0x01
#define UA_SED_PITCH_CONTROL	0x02
#define UA_SED_MAXPACKETSONLY	0x80
	uByte		bLockDelayUnits;
	uWord		wLockDelay;
} __packed;

struct usb_audio_streaming_type1_descriptor {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bFormatType;
	uByte		bNrChannels;
	uByte		bSubFrameSize;
	uByte		bBitResolution;
	uByte		bSamFreqType;
#define UA_SAMP_CONTNUOUS 0
	uByte		tSamFreq[3*2]; /* room for low and high */
#define UA_GETSAMP(p, n) ((p)->tSamFreq[(n)*3+0] | ((p)->tSamFreq[(n)*3+1] << 8) | ((p)->tSamFreq[(n)*3+2] << 16))
#define UA_SAMP_LO(p) UA_GETSAMP(p, 0)
#define UA_SAMP_HI(p) UA_GETSAMP(p, 1)
} __packed;

struct usb_audio_cluster {
	uByte		bNrChannels;
	uWord		wChannelConfig;
	uByte		iChannelNames;
} __packed;

/* Shared by all units and terminals */
struct usb_audio_unit {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bUnitId;
};

/* UDESCSUB_AC_INPUT */
struct usb_audio_input_terminal {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bTerminalId;
	uWord		wTerminalType;
	uByte		bAssocTerminal;
	uByte		bNrChannels;
	uWord		wChannelConfig;
	uByte		iChannelNames;
	uByte		iTerminal;
} __packed;

/* UDESCSUB_AC_OUTPUT */
struct usb_audio_output_terminal {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bTerminalId;
	uWord		wTerminalType;
	uByte		bAssocTerminal;
	uByte		bSourceId;
	uByte		iTerminal;
} __packed;

/* UDESCSUB_AC_MIXER */
struct usb_audio_mixer_unit {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bUnitId;
	uByte		bNrInPins;
	uByte		baSourceId[255]; /* [bNrInPins] */
	/* struct usb_audio_mixer_unit_1 */
} __packed;
struct usb_audio_mixer_unit_1 {
	uByte		bNrChannels;
	uWord		wChannelConfig;
	uByte		iChannelNames;
	uByte		bmControls[255]; /* [bNrChannels] */
	/*uByte		iMixer;*/
} __packed;

/* UDESCSUB_AC_SELECTOR */
struct usb_audio_selector_unit {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bUnitId;
	uByte		bNrInPins;
	uByte		baSourceId[255]; /* [bNrInPins] */
	/* uByte	iSelector; */
} __packed;

/* UDESCSUB_AC_FEATURE */
struct usb_audio_feature_unit {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bUnitId;
	uByte		bSourceId;
	uByte		bControlSize;
	uByte		bmaControls[255]; /* size for more than enough */
	/* uByte	iFeature; */
} __packed;

/* UDESCSUB_AC_PROCESSING */
struct usb_audio_processing_unit {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bUnitId;
	uWord		wProcessType;
	uByte		bNrInPins;
	uByte		baSourceId[255]; /* [bNrInPins] */
	/* struct usb_audio_processing_unit_1 */
} __packed;
struct usb_audio_processing_unit_1{
	uByte		bNrChannels;
	uWord		wChannelConfig;
	uByte		iChannelNames;
	uByte		bControlSize;
	uByte		bmControls[255]; /* [bControlSize] */
#define UA_PROC_ENABLE_MASK 1
} __packed;

struct usb_audio_processing_unit_updown {
	uByte		iProcessing;
	uByte		bNrModes;
	uWord		waModes[255]; /* [bNrModes] */
} __packed;

/* UDESCSUB_AC_EXTENSION */
struct usb_audio_extension_unit {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bUnitId;
	uWord		wExtensionCode;
	uByte		bNrInPins;
	uByte		baSourceId[255]; /* [bNrInPins] */
	/* struct usb_audio_extension_unit_1 */
} __packed;
struct usb_audio_extension_unit_1 {
	uByte		bNrChannels;
	uWord		wChannelConfig;
	uByte		iChannelNames;
	uByte		bControlSize;
	uByte		bmControls[255]; /* [bControlSize] */
#define UA_EXT_ENABLE_MASK 1
#define UA_EXT_ENABLE 1
	/*uByte		iExtension;*/
} __packed;

/* USB terminal types */
#define UAT_UNDEFINED		0x0100
#define UAT_STREAM		0x0101
#define UAT_VENDOR		0x01ff
/* input terminal types */
#define UATI_UNDEFINED		0x0200
#define UATI_MICROPHONE		0x0201
#define UATI_DESKMICROPHONE	0x0202
#define UATI_PERSONALMICROPHONE	0x0203
#define UATI_OMNIMICROPHONE	0x0204
#define UATI_MICROPHONEARRAY	0x0205
#define UATI_PROCMICROPHONEARR	0x0206
/* output terminal types */
#define UATO_UNDEFINED		0x0300
#define UATO_SPEAKER		0x0301
#define UATO_HEADPHONES		0x0302
#define UATO_DISPLAYAUDIO	0x0303
#define UATO_DESKTOPSPEAKER	0x0304
#define UATO_ROOMSPEAKER	0x0305
#define UATO_COMMSPEAKER	0x0306
#define UATO_SUBWOOFER		0x0307
/* bidir terminal types */
#define UATB_UNDEFINED		0x0400
#define UATB_HANDSET		0x0401
#define UATB_HEADSET		0x0402
#define UATB_SPEAKERPHONE	0x0403
#define UATB_SPEAKERPHONEESUP	0x0404
#define UATB_SPEAKERPHONEECANC	0x0405
/* telephony terminal types */
#define UATT_UNDEFINED		0x0500
#define UATT_PHONELINE		0x0501
#define UATT_TELEPHONE		0x0502
#define UATT_DOWNLINEPHONE	0x0503
/* external terminal types */
#define UATE_UNDEFINED		0x0600
#define UATE_ANALOGCONN		0x0601
#define UATE_DIGITALAUIFC	0x0602
#define UATE_LINECONN		0x0603
#define UATE_LEGACYCONN		0x0604
#define UATE_SPDIF		0x0605
#define UATE_1394DA		0x0606
#define UATE_1394DV		0x0607
/* embedded function terminal types */
#define UATF_UNDEFINED		0x0700
#define UATF_CALIBNOISE		0x0701
#define UATF_EQUNOISE		0x0702
#define UATF_CDPLAYER		0x0703
#define UATF_DAT		0x0704
#define UATF_DCC		0x0705
#define UATF_MINIDISK		0x0706
#define UATF_ANALOGTAPE		0x0707
#define UATF_PHONOGRAPH		0x0708
#define UATF_VCRAUDIO		0x0709
#define UATF_VIDEODISCAUDIO	0x070a
#define UATF_DVDAUDIO		0x070b
#define UATF_TVTUNERAUDIO	0x070c
#define UATF_SATELLITE		0x070d
#define UATF_CABLETUNER		0x070e
#define UATF_DSS		0x070f
#define UATF_RADIORECV		0x0710
#define UATF_RADIOXMIT		0x0711
#define UATF_MULTITRACK		0x0712
#define UATF_SYNTHESIZER	0x0713


#define SET_CUR 0x01
#define GET_CUR 0x81
#define SET_MIN 0x02
#define GET_MIN 0x82
#define SET_MAX 0x03
#define GET_MAX 0x83
#define SET_RES 0x04
#define GET_RES 0x84
#define SET_MEM 0x05
#define GET_MEM 0x85
#define GET_STAT 0xff

#define MUTE_CONTROL	0x01
#define VOLUME_CONTROL	0x02
#define BASS_CONTROL	0x03
#define MID_CONTROL	0x04
#define TREBLE_CONTROL	0x05
#define GRAPHIC_EQUALIZER_CONTROL	0x06
#define AGC_CONTROL	0x07
#define DELAY_CONTROL	0x08
#define BASS_BOOST_CONTROL 0x09
#define LOUDNESS_CONTROL 0x0a

#define FU_MASK(u) (1 << ((u)-1))

#define MASTER_CHAN	0

#define AS_GENERAL	1
#define FORMAT_TYPE	2
#define FORMAT_SPECIFIC 3

#define UA_FMT_PCM	1
#define UA_FMT_PCM8	2
#define UA_FMT_IEEE_FLOAT 3
#define UA_FMT_ALAW	4
#define UA_FMT_MULAW	5
#define UA_FMT_MPEG	0x1001
#define UA_FMT_AC3	0x1002

#define SAMPLING_FREQ_CONTROL	0x01
#define PITCH_CONTROL		0x02

#define FORMAT_TYPE_UNDEFINED 0
#define FORMAT_TYPE_I 1
#define FORMAT_TYPE_II 2
#define FORMAT_TYPE_III 3

#define UA_PROC_MASK(n) (1<< ((n)-1))
#define PROCESS_UNDEFINED		0
#define  XX_ENABLE_CONTROL			1
#define UPDOWNMIX_PROCESS		1
#define  UD_ENABLE_CONTROL			1
#define  UD_MODE_SELECT_CONTROL			2
#define DOLBY_PROLOGIC_PROCESS		2
#define  DP_ENABLE_CONTROL			1
#define  DP_MODE_SELECT_CONTROL			2
#define P3D_STEREO_EXTENDER_PROCESS	3
#define  P3D_ENABLE_CONTROL			1
#define  P3D_SPACIOUSNESS_CONTROL		2
#define REVERBATION_PROCESS		4
#define  RV_ENABLE_CONTROL			1
#define  RV_LEVEL_CONTROL			2
#define  RV_TIME_CONTROL			3
#define  RV_FEEDBACK_CONTROL			4
#define CHORUS_PROCESS			5
#define  CH_ENABLE_CONTROL			1
#define  CH_LEVEL_CONTROL			2
#define  CH_RATE_CONTROL			3
#define  CH_DEPTH_CONTROL			4
#define DYN_RANGE_COMP_PROCESS		6
#define  DR_ENABLE_CONTROL			1
#define  DR_COMPRESSION_RATE_CONTROL		2
#define  DR_MAXAMPL_CONTROL			3
#define  DR_THRESHOLD_CONTROL			4
#define  DR_ATTACK_TIME_CONTROL			5
#define  DR_RELEASE_TIME_CONTROL		6
@


1.14
log
@bring back changes in uaudio.c r1.83, this time remembering to commit
uaudioreg.h.  sorry about that.

sync endpoints allow for the sample clock on USB audio devices to not
be synchronized to the USB clock.  the sync endpoint gives information
on how much data to send to the data endpoint.  although devices that
require sync endpoints will "work" when the sync endpoint inormation
is ignored, there is a possibility of static, echoing, or any other
type of clock desync error.

requires some small changes to existing code:
* tighten up checks for whether a setting needs/supplies a sync
endpoint.  ignore settings that need a sync endpoint but don't
supply one.  previously all settings that require a sync endpoint
were ignored.
* if a sync endpoint is being used, use the same denominator for
fractional samples as the sync endpoint uses (2**16).

this only implements playback sync endpoints.  recording sync
endpoints are an odd concept: the driver would control the clock
rate of the device.  there may be such devices, but I can't even
imagine how that could be reliably implemented.  I guess you would
sync to the USB clock or the system clock ... but then, what's the
point?
@
text
@d1 1
a1 1
/*	$OpenBSD: uaudioreg.h,v 1.13 2008/06/26 05:42:18 ray Exp $ */
d51 1
a51 1
typedef struct {
d67 1
a67 1
} __packed usb_endpoint_descriptor_audio_t;
@


1.13
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uaudioreg.h,v 1.12 2007/06/09 11:06:53 mbalmer Exp $ */
d68 1
@


1.12
log
@Remove the definition and use of UPACKED and replace it with our own __packed
(to which UPACKED was define'd before anway).  No binary change, just one layer
of confusion less in the sourcecode.

ok jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: uaudioreg.h,v 1.11 2003/05/19 05:27:00 nate Exp $ */
a19 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.11
log
@updates from NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: uaudioreg.h,v 1.10 2002/07/25 04:07:32 nate Exp $ */
d74 1
a74 1
} UPACKED usb_endpoint_descriptor_audio_t;
d84 1
a84 1
} UPACKED;
d93 1
a93 1
} UPACKED;
d105 1
a105 1
} UPACKED;
d121 1
a121 1
} UPACKED;
d127 1
a127 1
} UPACKED;
d149 1
a149 1
} UPACKED;
d161 1
a161 1
} UPACKED;
d172 1
a172 1
} UPACKED;
d179 1
a179 1
} UPACKED;
d190 1
a190 1
} UPACKED;
d202 1
a202 1
} UPACKED;
d214 1
a214 1
} UPACKED;
d222 1
a222 1
} UPACKED;
d228 1
a228 1
} UPACKED;
d240 1
a240 1
} UPACKED;
d250 1
a250 1
} UPACKED;
@


1.10
log
@update $NetBSD$ tags
@
text
@d1 2
a2 2
/*	$OpenBSD: uaudioreg.h,v 1.9 2002/07/25 02:18:10 nate Exp $ */
/*	$NetBSD: uaudioreg.h,v 1.9 2002/07/11 21:14:27 augustss Exp $	*/
a42 1
#define UDESC_CS_DEVICE		0x21
d128 8
@


1.9
log
@get rid of trailing whitespace
@
text
@d1 2
a2 2
/*	$OpenBSD: uaudioreg.h,v 1.8 2002/05/06 23:07:26 nate Exp $ */
/*	$NetBSD: uaudioreg.h,v 1.8 2002/03/07 14:37:03 kent Exp $	*/
@


1.8
log
@sync uaudio with NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: uaudioreg.h,v 1.7 2001/05/03 02:20:33 aaron Exp $ */
d66 1
a66 1
	/* 
@


1.7
log
@Sync with NetBSD. Tested with a USB keyboard, USB mouse, and three different
kue(4) Ethernet devices.
@
text
@d1 2
a2 2
/*	$OpenBSD: uaudioreg.h,v 1.6 2001/01/28 09:43:41 aaron Exp $ */
/*	$NetBSD: uaudioreg.h,v 1.7 2000/12/28 00:29:58 augustss Exp $	*/
d101 3
d346 2
d349 2
a350 1
#define SAMPLING_FREQ_CONTROL 0x01
@


1.7.4.1
log
@Sync UBC branch to -current
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: uaudioreg.h,v 1.8 2002/03/07 14:37:03 kent Exp $	*/
a100 3
#define UA_SED_FREQ_CONTROL	0x01
#define UA_SED_PITCH_CONTROL	0x02
#define UA_SED_MAXPACKETSONLY	0x80
a342 2
#define UA_FMT_MPEG	0x1001
#define UA_FMT_AC3	0x1002
d344 1
a344 2
#define SAMPLING_FREQ_CONTROL	0x01
#define PITCH_CONTROL		0x02
@


1.7.4.2
log
@sync to -current
@
text
@d2 1
a2 1
/*	$NetBSD: uaudioreg.h,v 1.9 2002/07/11 21:14:27 augustss Exp $	*/
d66 1
a66 1
	/*
@


1.6
log
@Another USB sync with NetBSD. We are still lacking an up-to-date umass(4)
driver. I would appreciate it if someone with the hardware looked into it.
I also have to take a closer look at changes to the USB Ethernet drivers,
as well as import some drivers we are missing (uftdi, if_upl, yap, etc.)
@
text
@d1 2
a2 2
/*	$OpenBSD: uaudioreg.h,v 1.5 2000/11/08 18:10:37 aaron Exp $ */
/*	$NetBSD: uaudioreg.h,v 1.6 2000/05/30 10:10:17 augustss Exp $	*/
@


1.5
log
@Sync with NetBSD. Too many changes to mention. For now I have skipped
umass.c and ukbd.c as the diffs are a bit hairier.
@
text
@d1 1
a1 1
/*	$OpenBSD: uaudioreg.h,v 1.4 2000/07/04 11:44:22 fgsch Exp $ */
d242 64
a305 1
#define UAT_STREAM 0x0101
@


1.4
log
@sync with NetBSD... well almost. someone w/ the hw should check umass.
@
text
@d1 2
a2 2
/*	$OpenBSD: uaudioreg.h,v 1.3 2000/03/28 19:37:49 aaron Exp $ */
/*	$NetBSD: uaudioreg.h,v 1.4 2000/01/16 09:32:56 augustss Exp $	*/
@


1.3
log
@Much cleaner sync with NetBSD. Some #if defined() magic has been sent in the
form of a diff to augustss@@netbsd.org so that future syncs will be very easy.
This commit also adds support for ADMtek AN986 "Pegasus" based USB Ethernet,
CATC USB-EL1210A based USB Ethernet, and USB Printers (all untested).
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d8 3
a10 2
 * Author: Lennart Augustsson <augustss@@carlstedt.se>
 *         Carlstedt Research & Technology
d75 1
a75 1
} usb_endpoint_descriptor_audio_t;
d85 1
a85 1
};
d94 1
a94 1
};
d103 1
a103 1
};
d119 1
a119 1
};
d125 1
a125 1
};
d139 1
a139 1
};
d151 1
a151 1
};
d162 1
a162 1
};
d169 1
a169 1
};
d180 1
a180 1
};
d192 1
a192 1
};
d204 1
a204 1
};
d212 1
a212 1
};
d218 1
a218 1
};
d230 1
a230 1
};
d240 1
a240 1
};
@


1.2
log
@Sync with NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: uaudioreg.h,v 1.1 1999/11/11 15:54:59 ho Exp $	*/
d287 1
a287 1
#define UA_PROC_MASK(n)  (1 << ((n)-1))
d289 1
a289 2
#define XX_ENABLE_CONTROL		1

d291 2
a292 3
#define UD_ENABLE_CONTROL		1
#define UD_MODE_SELECT_CONTROL		2

d294 2
a295 3
#define DP_ENABLE_CONTROL		1
#define DP_MODE_SELECT_CONTROL		2

d297 2
a298 3
#define P3D_ENABLE_CONTROL		1
#define P3D_SPACIOUSNESS_CONTROL	2

d300 4
a303 5
#define RV_ENABLE_CONTROL		1
#define RV_LEVEL_CONTROL		2
#define RV_TIME_CONTROL			3
#define RV_FEEDBACK_CONTROL		4

d305 4
a308 5
#define CH_ENABLE_CONTROL		1
#define CH_LEVEL_CONTROL		2
#define CH_RATE_CONTROL			3
#define CH_DEPTH_CONTROL		4

d310 6
a315 6
#define DR_ENABLE_CONTROL		1
#define DR_COMPRESSION_RATE_CONTROL	2
#define DR_MAXAMPL_CONTROL		3
#define DR_THRESHOLD_CONTROL		4
#define DR_ATTACK_TIME_CONTROL		5
#define DR_RELEASE_TIME_CONTROL		6
@


1.1
log
@USB Audio, from NetBSD (augustss@@carlstedt.se). Imported by me and niklas@@.
@
text
@d1 2
a2 2
/*	$OpenBSD: uaudioreg.h,v 1.2 1999/10/13 20:13:29 augustss Exp $	*/
/*	$NetBSD: uaudioreg.h,v 1.2 1999/10/13 20:13:29 augustss Exp $	*/
d159 1
a159 1
	uByte		baSourceId[255]; /* length is really bNrInPins */
d166 1
a166 1
	uByte		bmControls[255];
d177 1
a177 1
	uByte		baSourceId[255];
d201 1
a201 1
	uByte		baSourceId[255];
d209 8
a216 2
	uByte		bmControls[255];
	/*uByte		iProcessing;*/
d227 1
a227 1
	uByte		baSourceId[255];
d235 3
a237 2
	uByte		bmControls[255];
#define UA_EXT_ENABLE 0
d286 36
@


1.1.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
/*	$OpenBSD: uaudioreg.h,v 1.6 2001/01/28 09:43:41 aaron Exp $ */
/*	$NetBSD: uaudioreg.h,v 1.6 2000/05/30 10:10:17 augustss Exp $	*/
d8 2
a9 3
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
d74 1
a74 1
} UPACKED usb_endpoint_descriptor_audio_t;
d84 1
a84 1
} UPACKED;
d93 1
a93 1
} UPACKED;
d102 1
a102 1
} UPACKED;
d118 1
a118 1
} UPACKED;
d124 1
a124 1
} UPACKED;
d138 1
a138 1
} UPACKED;
d150 1
a150 1
} UPACKED;
d159 1
a159 1
	uByte		baSourceId[255]; /* [bNrInPins] */
d161 1
a161 1
} UPACKED;
d166 1
a166 1
	uByte		bmControls[255]; /* [bNrChannels] */
d168 1
a168 1
} UPACKED;
d177 1
a177 1
	uByte		baSourceId[255]; /* [bNrInPins] */
d179 1
a179 1
} UPACKED;
d191 1
a191 1
} UPACKED;
d201 1
a201 1
	uByte		baSourceId[255]; /* [bNrInPins] */
d203 1
a203 1
} UPACKED;
d209 3
a211 9
	uByte		bmControls[255]; /* [bControlSize] */
#define UA_PROC_ENABLE_MASK 1
} UPACKED;

struct usb_audio_processing_unit_updown {
	uByte		iProcessing;
	uByte		bNrModes;
	uWord		waModes[255]; /* [bNrModes] */
} UPACKED;
d221 1
a221 1
	uByte		baSourceId[255]; /* [bNrInPins] */
d223 1
a223 1
} UPACKED;
d229 2
a230 3
	uByte		bmControls[255]; /* [bControlSize] */
#define UA_EXT_ENABLE_MASK 1
#define UA_EXT_ENABLE 1
d232 1
a232 65
} UPACKED;

/* USB terminal types */
#define UAT_UNDEFINED		0x0100
#define UAT_STREAM		0x0101
#define UAT_VENDOR		0x01ff
/* input terminal types */
#define UATI_UNDEFINED		0x0200
#define UATI_MICROPHONE		0x0201
#define UATI_DESKMICROPHONE	0x0202
#define UATI_PERSONALMICROPHONE	0x0203
#define UATI_OMNIMICROPHONE	0x0204
#define UATI_MICROPHONEARRAY	0x0205
#define UATI_PROCMICROPHONEARR	0x0206
/* output terminal types */
#define UATO_UNDEFINED		0x0300
#define UATO_SPEAKER		0x0301
#define UATO_HEADPHONES		0x0302
#define UATO_DISPLAYAUDIO	0x0303
#define UATO_DESKTOPSPEAKER	0x0304
#define UATO_ROOMSPEAKER	0x0305
#define UATO_COMMSPEAKER	0x0306
#define UATO_SUBWOOFER		0x0307
/* bidir terminal types */
#define UATB_UNDEFINED		0x0400
#define UATB_HANDSET		0x0401
#define UATB_HEADSET		0x0402
#define UATB_SPEAKERPHONE	0x0403
#define UATB_SPEAKERPHONEESUP	0x0404
#define UATB_SPEAKERPHONEECANC	0x0405
/* telephony terminal types */
#define UATT_UNDEFINED		0x0500
#define UATT_PHONELINE		0x0501
#define UATT_TELEPHONE		0x0502
#define UATT_DOWNLINEPHONE	0x0503
/* external terminal types */
#define UATE_UNDEFINED		0x0600
#define UATE_ANALOGCONN		0x0601
#define UATE_DIGITALAUIFC	0x0602
#define UATE_LINECONN		0x0603
#define UATE_LEGACYCONN		0x0604
#define UATE_SPDIF		0x0605
#define UATE_1394DA		0x0606
#define UATE_1394DV		0x0607
/* embedded function terminal types */
#define UATF_UNDEFINED		0x0700
#define UATF_CALIBNOISE		0x0701
#define UATF_EQUNOISE		0x0702
#define UATF_CDPLAYER		0x0703
#define UATF_DAT		0x0704
#define UATF_DCC		0x0705
#define UATF_MINIDISK		0x0706
#define UATF_ANALOGTAPE		0x0707
#define UATF_PHONOGRAPH		0x0708
#define UATF_VCRAUDIO		0x0709
#define UATF_VIDEODISCAUDIO	0x070a
#define UATF_DVDAUDIO		0x070b
#define UATF_TVTUNERAUDIO	0x070c
#define UATF_SATELLITE		0x070d
#define UATF_CABLETUNER		0x070e
#define UATF_DSS		0x070f
#define UATF_RADIORECV		0x0710
#define UATF_RADIOXMIT		0x0711
#define UATF_MULTITRACK		0x0712
#define UATF_SYNTHESIZER	0x0713
d234 1
a278 30

#define UA_PROC_MASK(n) (1<< ((n)-1))
#define PROCESS_UNDEFINED		0
#define  XX_ENABLE_CONTROL			1
#define UPDOWNMIX_PROCESS		1
#define  UD_ENABLE_CONTROL			1
#define  UD_MODE_SELECT_CONTROL			2
#define DOLBY_PROLOGIC_PROCESS		2
#define  DP_ENABLE_CONTROL			1
#define  DP_MODE_SELECT_CONTROL			2
#define P3D_STEREO_EXTENDER_PROCESS	3
#define  P3D_ENABLE_CONTROL			1
#define  P3D_SPACIOUSNESS_CONTROL		2
#define REVERBATION_PROCESS		4
#define  RV_ENABLE_CONTROL			1
#define  RV_LEVEL_CONTROL			2
#define  RV_TIME_CONTROL			3
#define  RV_FEEDBACK_CONTROL			4
#define CHORUS_PROCESS			5
#define  CH_ENABLE_CONTROL			1
#define  CH_LEVEL_CONTROL			2
#define  CH_RATE_CONTROL			3
#define  CH_DEPTH_CONTROL			4
#define DYN_RANGE_COMP_PROCESS		6
#define  DR_ENABLE_CONTROL			1
#define  DR_COMPRESSION_RATE_CONTROL		2
#define  DR_MAXAMPL_CONTROL			3
#define  DR_THRESHOLD_CONTROL			4
#define  DR_ATTACK_TIME_CONTROL			5
#define  DR_RELEASE_TIME_CONTROL		6
@


1.1.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: uaudioreg.h,v 1.7 2000/12/28 00:29:58 augustss Exp $	*/
@


1.1.2.3
log
@Sync the SMP branch with 3.3
@
text
@d2 1
a2 1
/*	$NetBSD: uaudioreg.h,v 1.9 2002/07/11 21:14:27 augustss Exp $	*/
d66 1
a66 1
	/*
a100 3
#define UA_SED_FREQ_CONTROL	0x01
#define UA_SED_PITCH_CONTROL	0x02
#define UA_SED_MAXPACKETSONLY	0x80
a342 2
#define UA_FMT_MPEG	0x1001
#define UA_FMT_AC3	0x1002
d344 1
a344 2
#define SAMPLING_FREQ_CONTROL	0x01
#define PITCH_CONTROL		0x02
@


1.1.2.4
log
@Sync SMP branch to -current
@
text
@d2 1
a2 1
/*	$NetBSD: uaudioreg.h,v 1.11 2002/10/23 02:32:37 christos Exp $	*/
d43 1
a128 8

/* Shared by all units and terminals */
struct usb_audio_unit {
	uByte		bLength;
	uByte		bDescriptorType;
	uByte		bDescriptorSubtype;
	uByte		bUnitId;
};
@


