head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.2
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.4
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.13.0.2
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.10.0.26
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.34
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.32
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.30
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.28
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.24
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.22
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.20
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.18
	OPENBSD_5_0:1.10.0.16
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.14
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.12
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.8
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.10
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.6
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.4
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.2
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.9.0.16
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.14
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.12
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.7.0.8
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.5.0.4
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.8
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.2
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	powerpc_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2017.03.12.11.44.42;	author kettenis;	state Exp;
branches;
next	1.13;
commitid	EI38NWUhFaLvENjQ;

1.13
date	2016.07.09.12.31.05;	author kettenis;	state Exp;
branches;
next	1.12;
commitid	dHtESIDokOOOkBsl;

1.12
date	2016.06.12.12.55.42;	author kettenis;	state Exp;
branches;
next	1.11;
commitid	BaLLTMJpcKjC80FA;

1.11
date	2016.05.16.21.12.17;	author kettenis;	state Exp;
branches;
next	1.10;
commitid	YXa0iFXO6YiUN61p;

1.10
date	2007.10.14.17.26.59;	author kettenis;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.11.16.20.01;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	2003.10.31.04.08.10;	author drahn;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.03.16.06;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.58;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.19.05.32.59;	author art;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	2001.06.25.23.04.39;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	99.10.28.04.25.25;	author rahnds;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	97.11.07.08.07.24;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.12.23.00.32.57;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.23.00.32.57;	author rahnds;	state Exp;
branches;
next	;

1.3.2.1
date	2001.07.04.10.41.48;	author niklas;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.10.31.03.22.45;	author nate;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2002.03.28.15.38.28;	author niklas;	state Exp;
branches;
next	1.3.2.4;

1.3.2.4
date	2004.02.19.10.56.25;	author niklas;	state Exp;
branches;
next	;

1.5.4.1
date	2002.06.11.03.42.24;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Introduce OF_getindex() API and use it to replace multiple instances of
pretty much identical code.

ok visa@@
@
text
@/*	$OpenBSD: openfirm.h,v 1.13 2016/07/09 12:31:05 kettenis Exp $	*/
/*	$NetBSD: openfirm.h,v 1.1 1996/09/30 16:35:10 ws Exp $	*/

/*
 * Copyright (C) 1995, 1996 Wolfgang Solfrank.
 * Copyright (C) 1995, 1996 TooLs GmbH.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * Prototypes for OpenFirmware Interface Routines
 */

#include <sys/param.h>
#include <sys/device.h>

int openfirmware(void *);

extern char OF_buf[];

int OF_peer(int phandle);
int OF_child(int phandle);
int OF_parent(int phandle);
int OF_instance_to_package(int ihandle);
int OF_getproplen(int handle, char *prop);
int OF_getprop(int handle, char *prop, void *buf, int buflen);
uint32_t OF_getpropint(int handle, char *, uint32_t);
int OF_getpropintarray(int, char *, uint32_t *, int);
int OF_setprop(int, char *, const void *, int);
int OF_nextprop(int, char *, void *);
int OF_finddevice(char *name);
int OF_is_compatible(int, const char *);
int OF_instance_to_path(int ihandle, char *buf, int buflen);
int OF_package_to_path(int phandle, char *buf, int buflen);
int OF_call_method_1(char *method, int ihandle, int nargs, ...);
int OF_call_method(char *method, int ihandle, int nargs, int nreturns, ...);
int OF_open(char *dname);
void OF_close(int handle);
int OF_read(int handle, void *addr, int len);
int OF_write(int handle, void *addr, int len);
int OF_seek(int handle, u_quad_t pos);
void OF_boot(char *bootspec);
void OF_enter(void);
void OF_exit(void) __attribute__((__noreturn__));
int OF_interpret(char *cmd, int nreturns, ...);
#if 0
void (*OF_set_callback(void (*newfunc)(void *))) ();
#endif
int OF_getnodebyname(int, const char *);
int OF_getnodebyphandle(uint32_t);
int OF_getindex(int, const char *, const char *);

/*
 * Some generic routines for OpenFirmware handling.
 */
int ofnmmatch(char *cp1, char *cp2);
void ofw_intr_establish(void);

/*
 * Generic OpenFirmware probe argument.
 * This is how all probe structures must start
 * in order to support generic OpenFirmware device drivers.
 */
struct ofprobe {
	int phandle;
	/*
	 * Special unit field for disk devices.
	 * This is a KLUDGE to work around the fact that OpenFirmware
	 * doesn't probe the scsi bus completely.
	 * YES, I THINK THIS IS A BUG IN THE OPENFIRMWARE DEFINITION!!!	XXX
	 * See also ofdisk.c.
	 */
	int unit;
};

/*
 * The softc structure for devices we might be booted from (i.e. we might
 * want to set root/swap to) needs to start with these fields:		XXX
 */
struct ofb_softc {
	struct device sc_dev;
	int sc_phandle;
	int sc_unit;		/* Might be missing for non-disk devices */
};
@


1.13
log
@Add interfaces to look up a device tree node by phandle.

ok patrick@@, jsg@@, visa@@
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.12 2016/06/12 12:55:42 kettenis Exp $	*/
d75 1
@


1.12
log
@Add OF_getpropint() and OF_getpropintarray().

ok visa@@, jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.11 2016/05/16 21:12:17 kettenis Exp $	*/
d74 1
@


1.11
log
@Introduce OF_is_compatible(9), a convenience function to check the "compatible"
property of an OFW/FDT node.

ok deraadt@@, pactrick@@
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.10 2007/10/14 17:26:59 kettenis Exp $	*/
d51 2
@


1.10
log
@Implement OF_getproplen().

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.9 2004/01/11 16:20:01 drahn Exp $	*/
d54 1
@


1.9
log
@Add new getnodebyname interface as OF_getnodebyname to openfirmware, from
netbsd. Only implemented on macppc so far.
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.8 2003/10/31 04:08:10 drahn Exp $	*/
d49 1
@


1.8
log
@cleanup some OF bits, macppc specific bits in ofbus.c and with broken
firmware OF_exit() can return.
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.7.10.1 2003/10/10 17:04:17 drahn Exp $	*/
d69 1
@


1.7
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.6 2002/03/14 01:26:58 millert Exp $	*/
d62 1
a62 1
void OF_boot(char *bootspec) __attribute__((__noreturn__));
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.5 2001/08/19 05:32:59 art Exp $	*/
d67 1
a67 1
void (*OF_set_callback __P((void (*newfunc)(void *)))) ();
@


1.5
log
@setprop and nextprop
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.4 2001/06/25 23:04:39 drahn Exp $	*/
d41 1
a41 1
int openfirmware __P((void *));
d45 21
a65 21
int OF_peer __P((int phandle));
int OF_child __P((int phandle));
int OF_parent __P((int phandle));
int OF_instance_to_package __P((int ihandle));
int OF_getprop __P((int handle, char *prop, void *buf, int buflen));
int OF_setprop __P((int, char *, const void *, int));
int OF_nextprop __P((int, char *, void *));
int OF_finddevice __P((char *name));
int OF_instance_to_path __P((int ihandle, char *buf, int buflen));
int OF_package_to_path __P((int phandle, char *buf, int buflen));
int OF_call_method_1 __P((char *method, int ihandle, int nargs, ...));
int OF_call_method __P((char *method, int ihandle, int nargs, int nreturns, ...));
int OF_open __P((char *dname));
void OF_close __P((int handle));
int OF_read __P((int handle, void *addr, int len));
int OF_write __P((int handle, void *addr, int len));
int OF_seek __P((int handle, u_quad_t pos));
void OF_boot __P((char *bootspec)) __attribute__((__noreturn__));
void OF_enter __P((void));
void OF_exit __P((void)) __attribute__((__noreturn__));
int OF_interpret __P((char *cmd, int nreturns, ...));
d73 1
a73 1
int ofnmmatch __P((char *cp1, char *cp2));
@


1.5.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.5 2001/08/19 05:32:59 art Exp $	*/
d41 1
a41 1
int openfirmware(void *);
d45 21
a65 21
int OF_peer(int phandle);
int OF_child(int phandle);
int OF_parent(int phandle);
int OF_instance_to_package(int ihandle);
int OF_getprop(int handle, char *prop, void *buf, int buflen);
int OF_setprop(int, char *, const void *, int);
int OF_nextprop(int, char *, void *);
int OF_finddevice(char *name);
int OF_instance_to_path(int ihandle, char *buf, int buflen);
int OF_package_to_path(int phandle, char *buf, int buflen);
int OF_call_method_1(char *method, int ihandle, int nargs, ...);
int OF_call_method(char *method, int ihandle, int nargs, int nreturns, ...);
int OF_open(char *dname);
void OF_close(int handle);
int OF_read(int handle, void *addr, int len);
int OF_write(int handle, void *addr, int len);
int OF_seek(int handle, u_quad_t pos);
void OF_boot(char *bootspec) __attribute__((__noreturn__));
void OF_enter(void);
void OF_exit(void) __attribute__((__noreturn__));
int OF_interpret(char *cmd, int nreturns, ...);
d67 1
a67 1
void (*OF_set_callback(void (*newfunc)(void *))) ();
d73 1
a73 1
int ofnmmatch(char *cp1, char *cp2);
@


1.4
log
@prototype OF_interpret(), more cleanup.
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.3 1999/10/28 04:25:25 rahnds Exp $	*/
d50 2
@


1.3
log
@Sync up with some piece of reality, start supporting powerpc again.
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.2 1997/11/07 08:07:24 niklas Exp $	*/
d63 2
d66 1
d72 1
@


1.3.2.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.3 1999/10/28 04:25:25 rahnds Exp $	*/
a62 2
int OF_interpret __P((char *cmd, int nreturns, ...));
#if 0
a63 1
#endif
a68 1
void ofw_intr_establish(void);
@


1.3.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.3.2.1 2001/07/04 10:41:48 niklas Exp $	*/
a49 2
int OF_setprop __P((int, char *, const void *, int));
int OF_nextprop __P((int, char *, void *));
@


1.3.2.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
int openfirmware(void *);
d45 21
a65 21
int OF_peer(int phandle);
int OF_child(int phandle);
int OF_parent(int phandle);
int OF_instance_to_package(int ihandle);
int OF_getprop(int handle, char *prop, void *buf, int buflen);
int OF_setprop(int, char *, const void *, int);
int OF_nextprop(int, char *, void *);
int OF_finddevice(char *name);
int OF_instance_to_path(int ihandle, char *buf, int buflen);
int OF_package_to_path(int phandle, char *buf, int buflen);
int OF_call_method_1(char *method, int ihandle, int nargs, ...);
int OF_call_method(char *method, int ihandle, int nargs, int nreturns, ...);
int OF_open(char *dname);
void OF_close(int handle);
int OF_read(int handle, void *addr, int len);
int OF_write(int handle, void *addr, int len);
int OF_seek(int handle, u_quad_t pos);
void OF_boot(char *bootspec) __attribute__((__noreturn__));
void OF_enter(void);
void OF_exit(void) __attribute__((__noreturn__));
int OF_interpret(char *cmd, int nreturns, ...);
d67 1
a67 1
void (*OF_set_callback(void (*newfunc)(void *))) ();
d73 1
a73 1
int ofnmmatch(char *cp1, char *cp2);
@


1.3.2.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d62 1
a62 1
void OF_boot(char *bootspec);
a68 1
int OF_getnodebyname(int, const char *);
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: openfirm.h,v 1.1 1996/09/30 16:35:10 ws Exp $	*/
d43 1
a43 1
extern char *OF_buf;
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Import of Openfirmware device drivers for PowerPC port.
From NetBSD, with modification to get current time in kernel.
@
text
@@
