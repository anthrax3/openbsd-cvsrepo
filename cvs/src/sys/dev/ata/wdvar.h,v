head	1.21;
access;
symbols
	OPENBSD_6_2:1.21.0.12
	OPENBSD_6_2_BASE:1.21
	OPENBSD_6_1:1.21.0.14
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.10
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.8
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.6
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.4
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.20.0.6
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.2
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.19.0.4
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.2
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.2
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.14.0.4
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.12.0.10
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.12
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.8
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.6
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.11.0.10
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.8
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.6
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.4
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.2
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.7.0.4
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.6
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.21
date	2014.07.09.12.56.28;	author mpi;	state Exp;
branches;
next	1.20;
commitid	NKtrbjFVOj3sQBuE;

1.20
date	2013.06.11.16.42.14;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2012.02.24.06.19.00;	author guenther;	state Exp;
branches;
next	1.18;

1.18
date	2011.09.22.22.12.45;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2011.06.06.01.59.49;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	2011.06.05.18.40.33;	author matthew;	state Exp;
branches;
next	1.15;

1.15
date	2011.04.05.19.57.40;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2010.07.23.07.47.13;	author jsg;	state Exp;
branches;
next	1.13;

1.13
date	2010.07.21.02.04.41;	author matthew;	state Exp;
branches;
next	1.12;

1.12
date	2007.06.06.17.15.13;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2004.09.24.07.05.44;	author grange;	state Exp;
branches;
next	1.10;

1.10
date	2003.10.21.09.57.04;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.16.20.03.40;	author grange;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.28.21.01.42;	author grange;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.21.20.10.33;	author grange;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.03.09.18.46;	author gluk;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.03.16.04;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.52;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.25.03.50.50;	author todd;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2000.04.10.07.06.16;	author csapuntz;	state Exp;
branches;
next	1.1;

1.1
date	99.07.18.21.25.18;	author csapuntz;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.05.14.22.23.06;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2002.03.28.12.29.45;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2003.03.28.00.38.10;	author niklas;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2004.02.19.10.56.14;	author niklas;	state Exp;
branches;
next	;

1.3.6.1
date	2002.06.11.03.42.16;	author art;	state Exp;
branches;
next	1.3.6.2;

1.3.6.2
date	2003.05.19.22.01.42;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Kill unused shutdown hook pointers.

ok miod@@, deraadt@@, tedu@@
@
text
@/*	$OpenBSD: wdvar.h,v 1.20 2013/06/11 16:42:14 deraadt Exp $	*/
/*	$NetBSD: wdvar.h,v 1.3 1998/11/11 19:38:27 bouyer Exp $	*/

/*
 * Copyright (c) 1998, 2001 Manuel Bouyer.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef _DEV_ATA_WDVAR_H_
#define _DEV_ATA_WDVAR_H_

/* Params needed by the controller to perform an ATA bio */
struct ata_bio {
    volatile u_int16_t flags; /* cmd flags */
#define ATA_NOSLEEP 0x0001 /* Can't sleep */
#define ATA_POLL    0x0002 /* poll for completion */
#define ATA_ITSDONE 0x0004 /* the transfer is as done as it gets */
#define ATA_SINGLE  0x0008 /* transfer has to be done in single-sector mode */
#define ATA_LBA     0x0010 /* transfer uses LBA addressing */
#define ATA_READ    0x0020 /* transfer is a read (otherwise a write) */
#define ATA_CORR    0x0040 /* transfer had a corrected error */
#define ATA_LBA48   0x0080 /* transfer uses 48-bit LBA addressing */
    int multi; /* number of blocks to transfer in multi-mode */
    struct disklabel *lp; /* pointer to drive's label info */
    daddr_t blkno; /* block addr */
    daddr_t blkdone; /* number of blks transferred */
    daddr_t nblks; /* number of block currently transferring */
    int     nbytes; /* number of bytes currently transferring */
    long    bcount; /* total number of bytes */
    char   *databuf; /* data buffer address */
    volatile int error;
#define NOERROR   0 /* There was no error (r_error invalid) */
#define ERROR     1 /* check r_error */
#define ERR_DF    2 /* Drive fault */
#define ERR_DMA   3 /* DMA error */
#define TIMEOUT   4 /* device timed out */
#define ERR_NODEV 5 /* device bas been detached */
    u_int8_t r_error; /* copy of error register */
    struct wd_softc *wd;
};

struct wd_softc {
	/* General disk infos */
	struct device sc_dev;
	struct disk sc_dk;
	struct bufq sc_bufq;

	/* IDE disk soft states */
	struct ata_bio sc_wdc_bio; /* current transfer */
	struct buf *sc_bp; /* buf being transferred */
	struct ata_drive_datas *drvp; /* Our controller's infos */
	int openings;
	struct ataparams sc_params;/* drive characteristics found */
	int sc_flags;
/*
 * XXX Nothing resets this yet, but disk change sensing will when ATA-4 is
 * more fully implemented.
 */
#define WDF_LOADED	0x10 /* parameters loaded */
#define WDF_WAIT	0x20 /* waiting for resources */
#define WDF_LBA		0x40 /* using LBA mode */
#define WDF_LBA48	0x80 /* using 48-bit LBA mode */

	u_int64_t sc_capacity;
	int cyl; /* actual drive parameters */
	int heads;
	int sectors;
	int retries; /* number of xfer retry */
	struct timeout sc_restart_timeout;
};

/* drive states stored in ata_drive_datas */
#define RECAL          0
#define RECAL_WAIT     1
#define PIOMODE        2
#define PIOMODE_WAIT   3
#define DMAMODE        4
#define DMAMODE_WAIT   5
#define GEOMETRY       6
#define GEOMETRY_WAIT  7
#define MULTIMODE      8
#define MULTIMODE_WAIT 9
#define READY          10

int wdc_ata_bio(struct ata_drive_datas*, struct ata_bio*);
int wd_hibernate_io(dev_t dev, daddr_t blkno, vaddr_t addr, size_t size,
	    int wr, void *page);

void wddone(void *);

#endif	/* !_DEV_ATA_WDVAR_H_ */
@


1.20
log
@final removal of daddr64_t.  daddr_t has been 64 bit for a long enough
test period; i think 3 years ago the last bugs fell out.
ok otto beck others
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.19 2012/02/24 06:19:00 guenther Exp $	*/
a89 1
	void *sc_sdhook;
@


1.19
log
@Correct the spelling of "transferred" and "transferring"

from Tobias Ulmer (tobiasu at tmux.org); ok jmc@@, krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.18 2011/09/22 22:12:45 deraadt Exp $	*/
d45 3
a47 3
    daddr64_t blkno; /* block addr */
    daddr64_t blkdone; /* number of blks transferred */
    daddr64_t nblks; /* number of block currently transferring */
@


1.18
log
@KNF of mlarkin's code, requested by him.  Some improvements to the interface
for talking to the disk driver snuck in.
ok mlarkin
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.17 2011/06/06 01:59:49 matthew Exp $	*/
d47 2
a48 2
    daddr64_t nblks; /* number of block currently transfering */
    int     nbytes; /* number of bytes currently transfering */
@


1.17
log
@Delete the long dead LOCKED and WANTED flags from cd(4), sd(4), and
wd(4).  They haven't been used for 10+ years, since the drivers were
switched to use disk_lock() and disk_unlock() instead.

No binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.16 2011/06/05 18:40:33 matthew Exp $	*/
d107 1
a107 1
int wd_hibernate_io(dev_t dev, daddr_t blkno, caddr_t addr, size_t size,
@


1.16
log
@Drop kernel support for the useless DIOCWLABEL ioctl and prune a lot
of silly flag twiddling code in various disk drivers.

ok deraadt@@, miod@@

N.B., users will need a -current disklabel(8) to be able to write new
disklabels to disk now.
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.15 2011/04/05 19:57:40 deraadt Exp $	*/
a74 2
#define WDF_LOCKED	  0x01
#define WDF_WANTED	  0x02
@


1.15
log
@wd_hibernate_io() is a standalone disk io writer which tries to not
damage kernel memory very much while doing the job.  It is not very
pretty yet, but improving it will need some MI work.
ok mlarkin jsg dlg
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.14 2010/07/23 07:47:13 jsg Exp $	*/
a76 2
#define WDF_WLABEL	  0x04 /* label is writable */
#define WDF_LABELLING	  0x08 /* writing label */
@


1.14
log
@Manuel Bouyer rescinded clauses 3 and 4 of his license text.
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.13 2010/07/21 02:04:41 matthew Exp $	*/
d62 35
d111 2
@


1.13
log
@Garbage collect ata_bio's badsect field.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.12 2007/06/06 17:15:13 deraadt Exp $	*/
a14 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Manuel Bouyer.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
@


1.12
log
@now that all partition size/offsets are potentially 64-bit, change the
type of all variables to daddr64_t.  this includes the APIs for XXsize()
and XXdump(), all range checks inside bio drivers, internal variables
for disklabel handling, and even uvm's swap offsets.  re-read numerous
times by otto, miod, krw, thib to look for errors
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.11 2004/09/24 07:05:44 grange Exp $	*/
a64 1
    daddr64_t badsect[127];    /* 126 plus trailing -1 marker */
@


1.11
log
@Multiple inclusion protection.
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.10 2003/10/21 09:57:04 jmc Exp $	*/
d51 3
a53 3
    daddr_t blkno; /* block addr */
    daddr_t blkdone; /* number of blks transferred */
    daddr_t nblks; /* number of block currently transfering */
d65 1
a65 1
    daddr_t badsect[127];    /* 126 plus trailing -1 marker */
@


1.10
log
@typos from Tom Cosgrove;
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.9 2003/10/16 20:03:40 grange Exp $	*/
d35 3
d85 2
@


1.9
log
@spaces/tabs cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.8 2003/09/28 21:01:42 grange Exp $	*/
d42 2
a43 2
#define ATA_LBA     0x0010 /* tranfert uses LBA adressing */
#define ATA_READ    0x0020 /* tranfert is a read (otherwise a write) */
d45 1
a45 1
#define ATA_LBA48   0x0080 /* transfer uses 48-bit LBA adressing */
d53 1
a53 1
    char   *databuf; /* data buffer adress */
@


1.8
log
@kill trailing spaces, no functional changes
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.7 2003/02/21 20:10:33 grange Exp $	*/
d55 5
a59 5
#define NOERROR 0 /* There was no error (r_error invalid) */
#define ERROR   1 /* check r_error */
#define ERR_DF	2 /* Drive fault */
#define ERR_DMA 3 /* DMA error */
#define TIMEOUT 4 /* device timed out */
d69 1
a69 1
#define PIOMODE	       2
@


1.7
log
@Fix Manuel Bouyer's copyright, from NetBSD
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.6 2002/05/03 09:18:46 gluk Exp $	*/
d25 1
a25 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     
d38 1
a38 1
#define ATA_NOSLEEP 0x0001 /* Can't sleep */   
d79 1
a79 1
int wdc_ata_bio(struct ata_drive_datas*, struct ata_bio*); 
@


1.6
log
@LBA48 support.
Adopted from NetBSD by Alexander Yurchenko <grange@@openbsd.ru>.

costa@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.5 2002/03/14 03:16:04 millert Exp $	*/
d5 1
a5 1
 * Copyright (c) 1998 Manuel Bouyer.
d17 1
a17 2
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
d22 10
a31 11
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
@


1.5
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.4 2002/03/14 01:26:52 millert Exp $	*/
d47 1
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.3 2001/01/25 03:50:50 todd Exp $	*/
d54 1
a54 1
    char*   databuf; /* data buffer adress */
@


1.3
log
@spelling
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.1 1999/07/18 21:25:18 csapuntz Exp $	*/
d80 1
a80 1
int wdc_ata_bio __P((struct ata_drive_datas*, struct ata_bio*)); 
d82 1
a82 1
void wddone __P((void *));
@


1.3.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.3 2001/01/25 03:50:50 todd Exp $	*/
a46 1
#define ATA_LBA48   0x0080 /* transfer uses 48-bit LBA adressing */
d54 1
a54 1
    char   *databuf; /* data buffer adress */
d80 1
a80 1
int wdc_ata_bio(struct ata_drive_datas*, struct ata_bio*); 
d82 1
a82 1
void wddone(void *);
@


1.3.6.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d5 1
a5 1
 * Copyright (c) 1998, 2001 Manuel Bouyer.
d17 2
a18 1
 *	This product includes software developed by Manuel Bouyer.
d23 11
a33 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.2
log
@

Added support for wd detach (merge from NetBSD). Support for
SCSI/ATAPI detach is not here yet.

Minor cleanup of wdc. Downgrade to UDMA mode 1 before going further.
Want to stay in UDMA modes because they're more error-resilient due to
a CRC.

Got rid of some of the ridiculous amount of softc sharing going on.
Hopefully, this will make the life of whoever goes in and fixes the
ref-counting to be correct easier.
@
text
@d50 1
a50 1
    daddr_t blkdone; /* number of blks transfered */
@


1.1
log
@

Import of NetBSD ATA/IDE stuff.

Introduction of home-grown

To enable this stuff in your configuration, look at the NEWATA conf file
and go through

dev/isa/files.isa
dev/pci/files.pci
conf/files
arch/i386/conf/files.i386

and follow the instructions on commenting/uncommenting stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.3 1998/11/11 19:38:27 bouyer Exp $	*/
d61 1
d64 1
@


1.1.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: wdvar.h,v 1.3 2001/01/25 03:50:50 todd Exp $	*/
d50 1
a50 1
    daddr_t blkdone; /* number of blks transferred */
a60 1
#define ERR_NODEV 5 /* device bas been detached */
a62 1
    struct wd_softc *wd;
@


1.1.4.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d54 1
a54 1
    char   *databuf; /* data buffer adress */
d80 1
a80 1
int wdc_ata_bio(struct ata_drive_datas*, struct ata_bio*); 
d82 1
a82 1
void wddone(void *);
@


1.1.4.3
log
@Sync the SMP branch with 3.3
@
text
@d5 1
a5 1
 * Copyright (c) 1998, 2001 Manuel Bouyer.
d17 2
a18 1
 *	This product includes software developed by Manuel Bouyer.
d23 11
a33 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
a46 1
#define ATA_LBA48   0x0080 /* transfer uses 48-bit LBA adressing */
@


1.1.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d25 1
a25 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
d38 1
a38 1
#define ATA_NOSLEEP 0x0001 /* Can't sleep */
d42 2
a43 2
#define ATA_LBA     0x0010 /* transfer uses LBA addressing */
#define ATA_READ    0x0020 /* transfer is a read (otherwise a write) */
d45 1
a45 1
#define ATA_LBA48   0x0080 /* transfer uses 48-bit LBA addressing */
d53 1
a53 1
    char   *databuf; /* data buffer address */
d55 5
a59 5
#define NOERROR   0 /* There was no error (r_error invalid) */
#define ERROR     1 /* check r_error */
#define ERR_DF    2 /* Drive fault */
#define ERR_DMA   3 /* DMA error */
#define TIMEOUT   4 /* device timed out */
d69 1
a69 1
#define PIOMODE        2
d79 1
a79 1
int wdc_ata_bio(struct ata_drive_datas*, struct ata_bio*);
@


