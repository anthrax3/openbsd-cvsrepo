head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.2.0.14
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.16
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.14
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.12
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2014.07.12.19.01.49;	author tedu;	state Exp;
branches;
next	1.3;
commitid	oZu656PKSRXbpZyM;

1.3
date	2014.07.12.18.48.18;	author tedu;	state Exp;
branches;
next	1.2;
commitid	I19imNlAX05zJOED;

1.2
date	2011.07.08.03.58.27;	author dlg;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.31.18.27.59;	author reyk;	state Exp;
branches;
next	;


desc
@@


1.4
log
@revert bogus free changes in not kernel files. got a little trigger happy.
@
text
@/*	$OpenBSD: build.c,v 1.3 2014/07/12 18:48:18 tedu Exp $	*/

/*
 * Copyright (c) 2007 Reyk Floeter <reyk@@openbsd.org>
 * Copyright (c) 2004 Theo de Raadt <deraadt@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>

#include <dev/pci/if_myxreg.h>

#include <fcntl.h>
#include <stdlib.h>
#include <err.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>
#include <zlib.h>

#include "eth_z8e.h"
#include "ethp_z8e.h"

#define CHUNK 8192

void
myx_build_firmware(u_int8_t *fw, size_t len, size_t ulen, const char *file)
{
	z_stream zs;

	FILE *f;
	size_t rlen, total = 0;
	u_int8_t *ufw;
	int rv;

	f = fopen(file, "w");
	if (f == NULL)
		err(1, file);

	ufw = malloc(ulen);
	if (ufw == NULL)
		err(1, "ufw malloc");

	bzero(&zs, sizeof (zs));
	rv = inflateInit(&zs);
	if (rv != Z_OK)
		errx(1, "uncompress init failure");

	zs.avail_in = len;
	zs.next_in = fw;
	zs.avail_out = ulen;
	zs.next_out = ufw;
	rv = inflate(&zs, Z_FINISH);
        if (rv != Z_STREAM_END)
		errx(1, "zlib %d", rv);

	inflateEnd(&zs);

	do {
		rlen = ulen - total;
		if (rlen > CHUNK)
			rlen = CHUNK;

		if (fwrite(&ufw[total], rlen, 1, f) < 1) {
			if (!ferror(f))
				errx(1, "unexpected short write");
			err(1, "%s", file);
		}

		total += rlen;
	} while (total < ulen);

	printf("%s: len %zu -> %zu\n", file, len, ulen);
	free(ufw);
	fclose(f);
}

int
main(int argc, char *argv[])
{
	myx_build_firmware(eth_z8e, eth_z8e_length,
	    eth_z8e_uncompressed_length, MYXFW_ALIGNED);
	myx_build_firmware(ethp_z8e, ethp_z8e_length,
	    ethp_z8e_uncompressed_length, MYXFW_UNALIGNED);
	return (0);
}
@


1.3
log
@add a size argument to free. will be used soon, but for now default to 0.
after discussions with beck deraadt kettenis.
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.2 2011/07/08 03:58:27 dlg Exp $	*/
d85 1
a85 1
	free(ufw, 0);
@


1.2
log
@update the firmware to 1.4.50 via freebsd.

the freebsd firmwares are compressed and get the kernel to uncompress them
to use them. we uncompress in build.c so the kernel can just read off disk
onto the card without any extra work. this lets us copy future fbsd fw
updates directly without any extra work.

myri have also rescinded one of the clauses on their license.

ok claudio@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d85 1
a85 1
	free(ufw);
@


1.1
log
@import the Myricom Myri-10G firmware
@
text
@d30 1
d32 4
a35 1
#include "myxfw.h"
d38 1
a38 1
myx_build_firmware(u_int32_t *fw, size_t len, const char *file)
d40 9
a48 7
	int		fd, rlen;
	size_t		i, total = 0;
	u_int32_t	data;

	printf("creating %s", file);
	fd = open(file, O_WRONLY|O_CREAT|O_TRUNC, 0644);
	if (fd == -1)
d51 27
a77 5
	for (i = 0; i < len; i++) {
		data = letoh32(fw[i]);
		rlen = write(fd, &data, sizeof(u_int32_t));
		if (rlen == -1) {
			printf("\n");
d80 1
a80 4
		if (rlen != sizeof(u_int32_t)) {
			printf("\n");
			errx(1, "%s: short write", file);
		}
d82 1
a82 1
	}
d84 3
a86 2
	printf(" total %d\n", total);
	close(fd);
d92 4
a95 4
	myx_build_firmware(myxfw_eth_z8e,
	    MYXFW_ETH_Z8E_SIZE, MYXFW_ALIGNED);
	myx_build_firmware(myxfw_ethp_z8e,
	    MYXFW_ETHP_Z8E_SIZE, MYXFW_UNALIGNED);
@

