head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.50
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.48
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.38
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.46
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.44
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.42
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.40
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.36
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.34
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.32
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.30
	OPENBSD_5_0:1.2.0.28
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.26
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.24
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.22
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.18
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.16
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.14
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.12
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.0.6
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	SMP:1.1.0.4
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.10.01.04.08.45;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.12.00.04.57;	author miod;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2004.06.05.23.12.47;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@add some missing $, ok djm@@ 'That looks fine to me' millert@@
@
text
@;	$OpenBSD$
;	$NetBSD: oosiop.ss,v 1.2 2003/04/06 09:48:42 tsutsui Exp $

;
; Copyright (c) 2001 Shuichiro URATA.  All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
; 1. Redistributions of source code must retain the above copyright
;    notice, this list of conditions and the following disclaimer.
; 2. Redistributions in binary form must reproduce the above copyright
;    notice, this list of conditions and the following disclaimer in the
;    documentation and/or other materials provided with the distribution.
; 3. The name of the author may not be used to endorse or promote products
;    derived from this software without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;

; NCR 53c700 script
;

ARCH 700

; interrupt codes
ABSOLUTE int_done	= 0xbeef0000
ABSOLUTE int_msgin	= 0xbeef0001
ABSOLUTE int_extmsg	= 0xbeef0002
ABSOLUTE int_resel	= 0xbeef0003
ABSOLUTE int_res_id	= 0xbeef0004
ABSOLUTE int_resfail	= 0xbeef0005
ABSOLUTE int_disc	= 0xbeef0006
ABSOLUTE int_err 	= 0xdeadbeef

; patch entries
ENTRY p_resel_msgin_move
ENTRY p_select
ENTRY p_datain_jump
ENTRY p_dataout_jump
ENTRY p_msgin_move
ENTRY p_msgout_move
ENTRY p_cmdout_move
ENTRY p_status_move
ENTRY p_extmsglen_move
ENTRY p_extmsgin_move


PROC  oosiop_script:

ENTRY wait_reselect
wait_reselect:
	WAIT RESELECT REL(reselect_fail)
	INT int_resel
reselect_fail:
	INT int_resfail

ENTRY wait_resel_identify
wait_resel_identify:
	INT int_err, WHEN NOT MSG_IN
p_resel_msgin_move:
	MOVE 0, 0, WHEN MSG_IN
	INT int_res_id

ENTRY start_select
start_select:
p_select:
	SELECT ATN 0, REL(wait_reselect)

ENTRY phasedispatch
phasedispatch:
	JUMP REL(msgin), WHEN MSG_IN
	JUMP REL(msgout), WHEN MSG_OUT
	JUMP REL(status), WHEN STATUS
	JUMP REL(cmdout), WHEN CMD
p_datain_jump:
	JUMP 0, WHEN DATA_IN
p_dataout_jump:
	JUMP 0, WHEN DATA_OUT
	INT int_err

msgin:
	CLEAR ATN
p_msgin_move:
	MOVE 0, 0, WHEN MSG_IN
	JUMP REL(complete), IF 0x00
	JUMP REL(extmsgsetup), IF 0x01
	JUMP REL(disconnect), IF 0x04
	INT int_msgin

ENTRY ack_msgin
ack_msgin:
	CLEAR ACK
	JUMP REL(phasedispatch)

ENTRY sendmsg
sendmsg:
	SET ATN
	CLEAR ACK
msgout:
p_msgout_move:
	MOVE 0, 0, WHEN MSG_OUT
	CLEAR ATN
	JUMP REL(phasedispatch)

cmdout:
	CLEAR ATN
p_cmdout_move:
	MOVE 0, 0, WHEN CMD
	JUMP REL(phasedispatch)

status:
p_status_move:
	MOVE 0, 0, WHEN STATUS
	JUMP REL(phasedispatch)

disconnect:
	CLEAR ACK
	WAIT DISCONNECT
	INT int_disc

complete:
	CLEAR ACK
	WAIT DISCONNECT
	INT int_done

; receive extended message length
extmsgsetup:
	CLEAR ACK
	INT int_err, IF NOT MSG_IN
p_extmsglen_move:
	MOVE 0, 0, WHEN MSG_IN
	INT int_extmsg

; receive extended message
ENTRY rcv_extmsg
rcv_extmsg:
	CLEAR ACK
	INT int_err, IF NOT MSG_IN
p_extmsgin_move:
	MOVE 0, 0, WHEN MSG_IN
	INT int_msgin
@


1.1
log
@Preliminary port of NetBSD oosiop driver, for NCR53C700 chips, as commonly
encountered on the oldest hppa machines.

Currently compiled in, but disabled, in the kernel, until it is stable
enough - right now read access are fine, but writes eventually time out
and do not complete.

ok deraadt@@
@
text
@d1 1
@


1.1.4.1
log
@Merge with the trunk
@
text
@@

