head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.44
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.42
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.38
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.28
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.36
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.34
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.32
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.30
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.26
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.24
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.22
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.20
	OPENBSD_5_0:1.2.0.18
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.16
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.2
date	2007.04.19.04.08.51;	author dlg;	state Exp;
branches;
next	1.1;

1.1
date	2007.04.19.04.04.58;	author dlg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@the tht firmware isnt technically a firmware, its a series of commands
interleaved with data, which is copied directly into the task fifo of a
tht controller. the commands and data are all 32bit words, and they all
have to be little endian. this byteswaps the host ordered values in
microcode.h into little endian values for the controller to eat.

you can now build the firmware correctly on big endian archs.
@
text
@/*	$OpenBSD: build.c,v 1.1 2007/04/19 04:04:58 dlg Exp $ */

/*
 * Copyright (c) 2007 David Gwynne <dlg@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>

#include <err.h>
#include <fcntl.h>
#include <stdio.h>
#include <unistd.h>

#include "microcode.h"

#define THT_FW_NAME "tht"

int
main(int argc, char *argv[])
{
	ssize_t		len;
	int		fd;
	int		i;

	fd = open(THT_FW_NAME, O_WRONLY | O_CREAT | O_TRUNC, 0644);
	if (fd == -1)
		err(1, "%s", THT_FW_NAME);

	for (i = 0; i < (sizeof(tht_fw) / sizeof(tht_fw[0])); i++)
		tht_fw[i] = htole32(tht_fw[i]);

	len = write(fd, tht_fw, sizeof(tht_fw));
	if (len == -1)
		err(1, "%s write", THT_FW_NAME);
	if (len != sizeof(tht_fw))
		errx(1, "%s: short write", THT_FW_NAME);

	close(fd);

	return (0);
}
@


1.1
log
@add bits to turn microcode.h into an actual blob. needs endian fixes yet.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d35 1
d40 3
@

