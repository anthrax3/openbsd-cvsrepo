head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.4.0.20
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.28
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.26
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.24
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.22
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.18
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.16
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.14
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.12
	OPENBSD_5_0:1.4.0.10
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.8
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.6
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2016.05.11.21.52.50;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	VpgRpYXqYSJy4P7J;

1.4
date	2009.07.03.04.34.51;	author dlg;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.21.16.31.53;	author reyk;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.05.23.41.20;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2006.09.20.22.16.04;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove hppa64 port, which we never got going beyond broken single users.
hppa reverse-stack gives us a valuable test case, but most developers don't
have a 2nd one to proceed further with this.
ok kettenis
@
text
@# $OpenBSD: Makefile,v 1.4 2009/07/03 04:34:51 dlg Exp $

NOPROG=
NOMAN=
CC=${HOSTCC}

# PCI capable systems only
.if (${MACHINE_ARCH} == "powerpc") || (${MACHINE} == "alpha") || \
    (${MACHINE} == "amd64") || (${MACHINE} == "hppa") || \
    (${MACHINE} == "i386") || \
    (${MACHINE} == "sgi") || (${MACHINE} == "sparc64")

FIRM=	bnx-b06 bnx-b09 bnx-rv2p bnx-xi-rv2p bnx-xi90-rv2p

PROG=	build

CLEANFILES+= ${FIRM} ${PROG}

all: ${FIRM}

${FIRM}: build
	${.OBJDIR}/build

realinstall:

afterinstall:
	${INSTALL} -c -o ${BINOWN} -g ${BINGRP} -m 644 \
	    ${FIRM} ${DESTDIR}/etc/firmware
	${INSTALL} -c -o ${BINOWN} -g ${BINGRP} -m 644 \
	    ${.CURDIR}/bnx-license ${DESTDIR}/etc/firmware

.endif

.include <bsd.prog.mk>
@


1.4
log
@newer bnx chips use a separate firmware to the "old" ones. this updates
the b06 firmware for the older chips, and adds the b09 firmware. there are
three variants of the rv2p code thats loaded onto the chips, so this has
been split out into separate firmware files as well.

the driver has been updated to handle the split firmwares, and to easily
allow loading of the different versions. this change only supports the
loading of the firmwares for the currently supported chips.

after this change you must build the new firmwares and install them as well
as your new kernel.

"go to it" deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2007/04/05 23:41:20 drahn Exp $
d10 1
a10 1
    (${MACHINE} == "hppa64") || (${MACHINE} == "i386") || \
@


1.3
log
@correct list of architectures

ok deraadt@@
@
text
@d13 1
a13 1
FIRM=	bnx
@


1.2
log
@Allow usb microcode to be built in a cross environment.  System endian has been
factored out of the result binaries already. Still need to address non usb.
ok deraadt.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2006/09/20 22:16:04 deraadt Exp $
d8 4
a11 5
.if (${MACHINE} == "i386") || (${MACHINE} == "amd64") || \
    (${MACHINE} == "alpha") || (${MACHINE} == "sparc64") || \
    (${MACHINE_ARCH} == "powerpc") || (${MACHINE} == "cats") || \
    (${MACHINE} == "hppa") || (${MACHINE} == "hppa64") || \
    (${MACHINE} == "sgi")
@


1.1
log
@build a bnx firmware file, for firmload
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2005/06/16 08:23:49 markus Exp $
d5 1
@

