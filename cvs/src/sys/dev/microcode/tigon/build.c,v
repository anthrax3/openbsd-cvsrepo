head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.10
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.8
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.6.0.20
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.16
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.3.0.20
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.16
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2014.07.12.19.01.50;	author tedu;	state Exp;
branches;
next	1.7;
commitid	oZu656PKSRXbpZyM;

1.7
date	2014.07.12.18.48.18;	author tedu;	state Exp;
branches;
next	1.6;
commitid	I19imNlAX05zJOED;

1.6
date	2009.08.29.22.53.23;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2009.08.07.00.10.17;	author martynas;	state Exp;
branches;
next	1.4;

1.4
date	2009.07.28.07.20.28;	author claudio;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.17.18.48.52;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2004.11.22.20.47.48;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.22.04.14.18;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@revert bogus free changes in not kernel files. got a little trigger happy.
@
text
@/*	$OpenBSD: build.c,v 1.7 2014/07/12 18:48:18 tedu Exp $	*/

/*
 * Copyright (c) 2004 Theo de Raadt <deraadt@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include <sys/types.h>
#include <dev/ic/tivar.h>
#include <err.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "ti_fw.h"
#include "ti_fw2.h"

static void
output(const char *name,
    const int FwReleaseMajor, const int FwReleaseMinor,
    const int FwReleaseFix, const u_int32_t FwStartAddr,
    const u_int32_t FwTextAddr, const int FwTextLen,
    const u_int32_t FwRodataAddr, const int FwRodataLen,
    const u_int32_t FwDataAddr, const int FwDataLen,
    const u_int32_t FwSbssAddr, const int FwSbssLen,
    const u_int32_t FwBssAddr, const int FwBssLen,
    const u_int32_t *FwText, int sizetext,
    const u_int32_t *FwRodata, int sizerodata,
    const u_int32_t *FwData, int sizedata)
{
	struct	tigon_firmware tfproto, *tf;
	int len, fd, i, cnt;
	u_int32_t *b;
	ssize_t rlen;

	len = sizeof(tfproto) - sizeof(tfproto.data) + sizetext +
	    sizerodata + sizedata;
	tf = (struct tigon_firmware *)malloc(len);
	bzero(tf, len);

	tf->FwReleaseMajor = FwReleaseMajor;
	tf->FwReleaseMinor = FwReleaseMinor;
	tf->FwReleaseFix = FwReleaseFix;
	tf->FwStartAddr = FwStartAddr;

	tf->FwTextAddr = FwTextAddr;
	tf->FwTextLen = FwTextLen;

	tf->FwRodataAddr = FwRodataAddr;
	tf->FwRodataLen = FwRodataLen;

	tf->FwDataAddr = FwDataAddr;
	tf->FwDataLen = FwDataLen;

	tf->FwSbssAddr = FwSbssAddr;
	tf->FwSbssLen = FwSbssLen;

	tf->FwBssAddr = FwBssAddr;
	tf->FwBssLen = FwBssLen;

	tf->FwTextOffset = 0;
	tf->FwRodataOffset = sizetext;
	tf->FwDataOffset = sizetext + sizerodata;

	bcopy(FwText, &tf->data[tf->FwTextOffset], FwTextLen);
	bcopy(FwRodata, &tf->data[tf->FwRodataOffset], FwRodataLen);
	bcopy(FwData, &tf->data[tf->FwDataOffset], FwDataLen);

	b = (u_int32_t *)tf;
	cnt = len / sizeof(u_int32_t);
	for (i = 0; i < cnt; i++)
		 b[i] = htole32(b[i]);

	printf("creating %s length %d [%d+%d+%d] [%d+%d+%d]\n",
	    name, len, FwTextLen, FwRodataLen, FwDataLen,
	    sizetext, sizerodata, sizedata);
	fd = open(name, O_WRONLY|O_CREAT|O_TRUNC, 0644);
	if (fd == -1)
		err(1, "%s", name);

	rlen = write(fd, tf, len);
	if (rlen == -1)
		err(1, "%s", name);
	if (rlen != len)
		errx(1, "%s: short write", name);
	free(tf);
	close(fd);
}


int
main(int argc, char *argv[])
{

	output("tigon1",
	    tigonFwReleaseMajor, tigonFwReleaseMinor,
	    tigonFwReleaseFix, tigonFwStartAddr,
	    tigonFwTextAddr, tigonFwTextLen,
	    tigonFwRodataAddr, tigonFwRodataLen,
	    tigonFwDataAddr, tigonFwDataLen,
	    tigonFwSbssAddr, tigonFwSbssLen,
	    tigonFwBssAddr, tigonFwBssLen,
	    tigonFwText, sizeof tigonFwText,
	    tigonFwRodata, sizeof tigonFwRodata,
	    tigonFwData, sizeof tigonFwData);

	output("tigon2",
	    tigon2FwReleaseMajor, tigon2FwReleaseMinor,
	    tigon2FwReleaseFix, tigon2FwStartAddr,
	    tigon2FwTextAddr, tigon2FwTextLen,
	    tigon2FwRodataAddr, tigon2FwRodataLen,
	    tigon2FwDataAddr, tigon2FwDataLen,
	    tigon2FwSbssAddr, tigon2FwSbssLen,
	    tigon2FwBssAddr, tigon2FwBssLen,
	    tigon2FwText, sizeof tigon2FwText,
	    tigon2FwRodata, sizeof tigon2FwRodata,
	    tigon2FwData, sizeof tigon2FwData);

	return 0;
}
@


1.7
log
@add a size argument to free. will be used soon, but for now default to 0.
after discussions with beck deraadt kettenis.
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.6 2009/08/29 22:53:23 kettenis Exp $	*/
d98 1
a98 1
	free(tf, 0);
@


1.6
log
@Unbreak the tree.
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.5 2009/08/07 00:10:17 martynas Exp $	*/
d98 1
a98 1
	free(tf);
@


1.5
log
@pull some more missing;  for err&errx, printf, write, bzopy&bzero
ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.4 2009/07/28 07:20:28 claudio Exp $	*/
d19 1
a19 1
#include <dev/pci/if_tivar.h>
@


1.4
log
@The firmware is an array of u_int32_t and differs between architectures.
From now on install the tigon firmware in little endian byte order and swap
it acordingly in the driver. Correctly calculate the length of the FW in the
build tool -- now my fiber cards no longer have issues to establish link on
bootup. Please put this in deraadt@@

On big endian archs (sparc64, macppc) the firmware file needs to be updated.
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.3 2005/05/17 18:48:52 jason Exp $	*/
d20 1
d22 1
d24 2
@


1.3
log
@- check return from write(2) so we KNOW the data is on the disk
- remove unneeded variables
- add missing includes
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.2 2004/11/22 20:47:48 deraadt Exp $	*/
d40 2
a41 1
	int len, fd, i;
d44 2
a45 2
	len = sizeof tf - sizeof(tfproto.data) + sizetext + sizerodata +
	    sizedata;
d76 5
@


1.2
log
@stdlib.h
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.1 2004/11/22 04:14:18 deraadt Exp $	*/
d41 1
d83 5
a87 1
	write(fd, tf, len);
@


1.1
log
@build a tigon firmware file. Saves 150KB or so in GENERIC kernels
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d21 1
@

