head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.6
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.46
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.36
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.44
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.42
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.40
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.38
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.34
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.32
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.30
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.28
	OPENBSD_5_0:1.3.0.26
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.24
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.22
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.18
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.20
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.16
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2016.12.18.18.28.39;	author krw;	state Exp;
branches;
next	1.3;
commitid	fSD9BCfnjZyV2uP8;

1.3
date	2005.05.17.18.48.52;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.24.20.41.34;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.22.12.02.47;	author grange;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Use %zu/%d to print size_t/ssize_t. Cast recno_t (a.k.a. u_int32_t)
to (unsigned long) to match %lu formats. Makes gcc happier and
quieter.

ok deraadt@@
@
text
@/*	$OpenBSD: build.c,v 1.3 2005/05/17 18:48:52 jason Exp $	*/

/*
 * Copyright (c) 2004 Theo de Raadt <deraadt@@openbsd.org>
 * Copyright (c) 2004 Dmitry Bogdan <dsb@@imcs.dvgu.ru>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>

#include <fcntl.h>
#include <stdlib.h>
#include <stdio.h>
#include <err.h>
#include <unistd.h>

#include "rcvbundl.h"

const u_int32_t fxp_ucode_d101a[] = D101_A_RCVBUNDLE_UCODE;
const u_int32_t fxp_ucode_d101b0[] = D101_B0_RCVBUNDLE_UCODE;
const u_int32_t fxp_ucode_d101ma[] = D101M_B_RCVBUNDLE_UCODE;
const u_int32_t fxp_ucode_d101s[] = D101S_RCVBUNDLE_UCODE;
const u_int32_t fxp_ucode_d102[] = D102_B_RCVBUNDLE_UCODE;
const u_int32_t fxp_ucode_d102c[] = D102_C_RCVBUNDLE_UCODE;
const u_int32_t fxp_ucode_d102e[] = D102_E_RCVBUNDLE_UCODE;

#define UCODE(x)	x, sizeof(x)

static void
output(const char *name, const u_int32_t *ucode, const int ucode_len)
{
	ssize_t rlen;
	int fd, i;
	u_int32_t dword;

	printf("creating %s length %d (microcode: %zu DWORDS)\n",
	    name, ucode_len, ucode_len / sizeof(u_int32_t));
	fd = open(name, O_WRONLY|O_CREAT|O_TRUNC, 0644);
	if (fd == -1)
		err(1, "%s", name);
	for (i = 0; i < ucode_len / sizeof(u_int32_t); i++) {
		dword = htole32(ucode[i]);
		rlen = write(fd, &dword, sizeof(dword));
		if (rlen == -1)
			err(1, "%s", name);
		if (rlen != sizeof(dword))
			errx(1, "%s: short write", name);
	}
	close(fd);
}

int
main(int argc, char *argv[])
{
	output("fxp-d101a", UCODE(fxp_ucode_d101a));
	output("fxp-d101b0", UCODE(fxp_ucode_d101b0));
	output("fxp-d101ma", UCODE(fxp_ucode_d101ma));
	output("fxp-d101s", UCODE(fxp_ucode_d101s));
	output("fxp-d102", UCODE(fxp_ucode_d102));
	output("fxp-d102c", UCODE(fxp_ucode_d102c));
	output("fxp-d102e", UCODE(fxp_ucode_d102e));

	return (0);
}
@


1.3
log
@- check return from write(2) so we KNOW the data is on the disk
- remove unneeded variables
- add missing includes
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.2 2005/04/24 20:41:34 brad Exp $	*/
d47 1
a47 1
	printf("creating %s length %d (microcode: %d DWORDS)\n",
@


1.2
log
@add microcode to support interrupt mitigation on the
82551 F stepping chipset.

From FreeBSD via Dmitry Bogdan <dsb at imcs dot dvgu dot ru>
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.1 2004/12/22 12:02:47 grange Exp $	*/
d24 3
d43 1
d54 5
a58 1
		write(fd, &dword, sizeof(dword));
@


1.1
log
@Use vfs firmware loader for fxp(4) interrupt coalescing microcode.
Initial work by Dmitry Bogdan <bogdan@@eastonline.ru> with a help
from me and Theo.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d5 1
a5 1
 * Copyright (c) 2004 Dmitry Bogdan
d33 1
d64 1
@

