head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.4
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.10
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.8
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.6
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.4.0.32
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.28
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.26
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.24
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.22
	OPENBSD_5_0:1.4.0.20
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.18
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.16
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.12
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.14
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.10
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.8
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.6
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.4
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.2
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.12.18.18.28.39;	author krw;	state Exp;
branches;
next	1.6;
commitid	fSD9BCfnjZyV2uP8;

1.6
date	2014.07.12.19.01.50;	author tedu;	state Exp;
branches;
next	1.5;
commitid	oZu656PKSRXbpZyM;

1.5
date	2014.07.12.18.48.18;	author tedu;	state Exp;
branches;
next	1.4;
commitid	I19imNlAX05zJOED;

1.4
date	2007.01.06.02.48.42;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2005.07.12.19.28.53;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.17.18.48.52;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.20.12.29.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Use %zu/%d to print size_t/ssize_t. Cast recno_t (a.k.a. u_int32_t)
to (unsigned long) to match %lu formats. Makes gcc happier and
quieter.

ok deraadt@@
@
text
@/*	$OpenBSD: build.c,v 1.6 2014/07/12 19:01:50 tedu Exp $	*/

/*
 * Copyright (c) 2004 Theo de Raadt <deraadt@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include <sys/types.h>
#include <dev/pci/ydsvar.h>
#include <fcntl.h>
#include <stdlib.h>
#include <unistd.h>
#include <err.h>
#include <string.h>
#include <stdio.h>
#include "yds_hwmcode.h"

#define FILENAME "yds"

void
hswapn(u_int32_t *p, int wcount)
{
	for (; wcount; wcount -=4) {
		*p = htonl(*p);
		p++;
	}
}

int
main(int argc, char *argv[])
{
	struct	yds_firmware yfproto, *yf;
	int len, fd;
	ssize_t rlen;

	len = sizeof(*yf) - sizeof(yfproto.data) +
	    sizeof(yds_dsp_mcode) + sizeof(yds_ds1_ctrl_mcode) +
	    sizeof(yds_ds1e_ctrl_mcode);

	yf = (struct yds_firmware *)malloc(len);
	bzero(yf, len);

	yf->dsplen = htonl(sizeof(yds_dsp_mcode));
	yf->ds1len = htonl(sizeof(yds_ds1_ctrl_mcode));
	yf->ds1elen = htonl(sizeof(yds_ds1e_ctrl_mcode));

	bcopy(yds_dsp_mcode, &yf->data[0], sizeof(yds_dsp_mcode));
	hswapn((u_int32_t *)&yf->data[0], sizeof(yds_dsp_mcode));

	bcopy(yds_ds1_ctrl_mcode, &yf->data[sizeof(yds_dsp_mcode)],
	    sizeof(yds_ds1_ctrl_mcode));
	hswapn((u_int32_t *)&yf->data[sizeof(yds_dsp_mcode)],
	    sizeof(yds_ds1_ctrl_mcode));

	bcopy(yds_ds1e_ctrl_mcode,
	    &yf->data[sizeof(yds_dsp_mcode) + sizeof(yds_ds1_ctrl_mcode)],
	    sizeof(yds_ds1e_ctrl_mcode));
	hswapn((u_int32_t *)&yf->data[sizeof(yds_dsp_mcode) +
	    sizeof(yds_ds1_ctrl_mcode)],
	    sizeof(yds_ds1e_ctrl_mcode));

	printf("creating %s length %d [%zu+%zu+%zu]\n",
	    FILENAME, len, sizeof(yds_dsp_mcode),
	    sizeof(yds_ds1_ctrl_mcode), sizeof(yds_ds1e_ctrl_mcode));
	fd = open(FILENAME, O_WRONLY|O_CREAT|O_TRUNC, 0644);
	if (fd == -1)
		err(1, FILENAME);

	rlen = write(fd, yf, len);
	if (rlen == -1)
		err(1, "%s", FILENAME);
	if (rlen != len)
		errx(1, "%s: short write", FILENAME);
	free(yf);
	close(fd);
	return 0;
}
@


1.6
log
@revert bogus free changes in not kernel files. got a little trigger happy.
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.5 2014/07/12 18:48:18 tedu Exp $	*/
d72 1
a72 1
	printf("creating %s length %d [%d+%d+%d]\n",
@


1.5
log
@add a size argument to free. will be used soon, but for now default to 0.
after discussions with beck deraadt kettenis.
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.4 2007/01/06 02:48:42 deraadt Exp $	*/
d84 1
a84 1
	free(yf, 0);
@


1.4
log
@make microcode file byte-order independent so that the file is the same
on all architectures, and have the driver cope with this as well
tested by ian
YOU MUST UPDATE YOUR MICROCODE FILE OR THE DRIVER WILL NOT BE HAPPY
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.3 2005/07/12 19:28:53 deraadt Exp $	*/
d84 1
a84 1
	free(yf);
@


1.3
log
@write ds1 ctrl mcode where we wanted the ds1e varient
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.2 2005/05/17 18:48:52 jason Exp $	*/
d30 9
d53 18
a70 8
	yf->dsplen = sizeof(yds_dsp_mcode);
	yf->ds1len = sizeof(yds_ds1_ctrl_mcode);
	yf->ds1elen = sizeof(yds_ds1e_ctrl_mcode);

	bcopy(yds_dsp_mcode, &yf->data[0], yf->dsplen);
	bcopy(yds_ds1_ctrl_mcode, &yf->data[yf->dsplen], yf->ds1len);
	bcopy(yds_ds1e_ctrl_mcode, &yf->data[yf->dsplen + yf->ds1len],
	    yf->ds1elen);
d73 2
a74 1
	    FILENAME, len, yf->dsplen, yf->ds1len, yf->ds1elen);
@


1.2
log
@- check return from write(2) so we KNOW the data is on the disk
- remove unneeded variables
- add missing includes
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.1 2004/12/20 12:29:40 deraadt Exp $	*/
d50 1
a50 1
	bcopy(yds_ds1_ctrl_mcode, &yf->data[yf->dsplen + yf->ds1len],
@


1.1
log
@firmware loading from the filesystem.  pci subsystem type things
are still done early, but audio subsystem setup is deferred till
after root is mounted.  tested by mcbride
@
text
@d1 1
a1 1
/*	$OpenBSD: build.c,v 1.2 2004/11/22 20:47:48 deraadt Exp $	*/
d22 4
a25 1

d34 2
a35 1
	int len, fd, i;
d59 5
a63 1
	write(fd, yf, len);
@

