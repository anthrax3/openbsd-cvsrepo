head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.34
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.36
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.32
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.22
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.30
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.28
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.26
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.24
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.20
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.18
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.16
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.14
	OPENBSD_5_0:1.9.0.12
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.10
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.8
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.4
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.6
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	SMP:1.4.0.4
	UBC:1.4.0.2
	UBC_SYNC_B:1.5;
locks; strict;
comment	@ * @;


1.9
date	2008.11.29.01.55.06;	author ray;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.04.13.00.55;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.27.17.39.05;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.11.19.20.28;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.27.02;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.25.02.37.43;	author jason;	state Exp;
branches
	1.4.2.1
	1.4.4.1;
next	1.3;

1.3
date	2002.01.12.21.41.17;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.12.21.30.56;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.12.20.19.40;	author jason;	state Exp;
branches;
next	;

1.4.2.1
date	2002.01.31.22.55.38;	author niklas;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2002.06.11.03.42.29;	author art;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2003.05.19.22.14.42;	author tedu;	state Exp;
branches;
next	;

1.4.4.1
date	2002.03.28.15.09.09;	author niklas;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	2003.03.28.00.38.30;	author niklas;	state Exp;
branches;
next	1.4.4.3;

1.4.4.3
date	2003.05.13.19.35.11;	author ho;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Iain Hibbert (plunky@@netbsd) removed clauses 3 and 4 from his
licenses as well. Thanks!

"Groovy" deraadt
@
text
@/*	$OpenBSD: magmareg.h,v 1.8 2006/03/04 13:00:55 miod Exp $	*/

/*-
 *  Copyright (c) 1998 Iain Hibbert
 *  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifdef MAGMA_DEBUG
#define dprintf(x) printf x
#else
#define dprintf(x)
#endif

/*  The mapping of minor device number -> card and port is done as
 * follows by default:
 *
 *  +---+---+---+---+---+---+---+---+
 *  | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
 *  +---+---+---+---+---+---+---+---+
 *    |   |   |   |   |   |   |   |
 *    |   |   |   |   +---+---+---+---> port number
 *    |   |   |   |
 *    |   |   |   +-------------------> dialout (on tty ports)
 *    |   |   |
 *    |   |   +-----------------------> unused
 *    |   |
 *    +---+---------------------------> card number
 *
 */

#define MAGMA_MAX_CARDS		4
#define MAGMA_MAX_TTY		16
#define MAGMA_MAX_BPP		2
#define MAGMA_MAX_CD1400	4
#define MAGMA_MAX_CD1190	2

#define MAGMA_CARD(x)	((minor(x) >> 6) & 0x03)
#define MAGMA_PORT(x)	(minor(x) & 0x0f)

#define MTTY_DIALOUT(x) (minor(x) & 0x10)

/*
 * Supported Card Types
 */
struct magma_board_info {
	const char *mb_sbusname;	/* sbus name */
	const char *mb_name;		/* cardname to match against */
	const char *mb_realname;	/* english card name */
	int mb_nser;			/* number of serial ports */
	int mb_npar;			/* number of parallel ports */
	int mb_ncd1400;			/* number of CD1400 chips */
	int mb_svcackr;			/* svcackr offset */
	int mb_svcackt;			/* svcackt offset */
	int mb_svcackm;			/* svcackm offset */
	int mb_cd1400[MAGMA_MAX_CD1400];/* cd1400 chip register offsets */
	int mb_ncd1190;			/* number of CD1190 chips */
	int mb_cd1190[MAGMA_MAX_CD1190];/* cd1190 chip register offsets */
};

/*
 * cd1400 chip data
 */
struct cd1400 {
	bus_space_handle_t cd_regh;	/* chip register handle */
	bus_space_tag_t cd_regt;	/* chip register tag */
	int cd_chiprev;			/* chip revision */
	int cd_clock;			/* clock speed in MHz */
	int cd_parmode;			/* parallel mode operation */
};

/*
 * cd1190 chip data
 */
struct cd1190 {
	bus_space_handle_t cd_regh;	/* chip register handle */
	bus_space_tag_t cd_regt;	/* chip register tag */
	int cd_chiprev;			/* chip revision */
};

/* software state for each card */
struct magma_softc {
	struct device ms_dev;		/* required. must be first in softc */

	bus_space_tag_t sc_bustag;	/* our bus tag */
	bus_space_handle_t sc_iohandle;	/* whole card registers */
	void *sc_ih;			/* interrupt vector */
	void *sc_sih;			/* softintr vector */

	/* cd1400 chip info */
	int ms_ncd1400;
	struct cd1400 ms_cd1400[MAGMA_MAX_CD1400];
	bus_space_handle_t sc_svcackrh;	/* CD1400 service acknowledge receive */
	bus_space_handle_t sc_svcackth;	/* CD1400 service acknowledge transmit */
	bus_space_handle_t sc_svcackmh;	/* CD1400 service acknowledge modem */


	/* cd1190 chip info */
	int ms_ncd1190;
	struct cd1190 ms_cd1190[MAGMA_MAX_CD1190];

	const struct magma_board_info *ms_board;	/* what am I? */

	struct mtty_softc *ms_mtty;
	struct mbpp_softc *ms_mbpp;

	struct intrhand ms_hardint;	/* hard interrupt handler */
	struct intrhand ms_softint;	/* soft interrupt handler */
};

#define MTTY_RBUF_SIZE		(2 * 512)
#define MTTY_RX_FIFO_THRESHOLD	6
#define MTTY_RX_DTR_THRESHOLD	9

struct mtty_port {
	struct cd1400 *mp_cd1400;	/* ptr to chip */
	int mp_channel;			/* and channel */
	struct tty *mp_tty;

	int mp_openflags;	/* default tty flags */
	int mp_flags;		/* port flags */
	int mp_carrier;		/* state of carrier */

	u_char *mp_rbuf;	/* ring buffer start */
	u_char *mp_rend;	/* ring buffer end */
	u_char *mp_rget;	/* ring buffer read pointer */
	u_char *mp_rput;	/* ring buffer write pointer */

	u_char *mp_txp;		/* transmit character pointer */
	int mp_txc;		/* transmit character counter */
};

#define MTTYF_CARRIER_CHANGED	(1<<0)
#define MTTYF_SET_BREAK		(1<<1)
#define MTTYF_CLR_BREAK		(1<<2)
#define MTTYF_DONE		(1<<3)
#define MTTYF_STOP		(1<<4)
#define MTTYF_RING_OVERFLOW	(1<<5)

struct mtty_softc {
	struct device ms_dev;		/* device info */
	int ms_nports;			/* tty ports */
	struct mtty_port ms_port[MAGMA_MAX_TTY];
};

#define MBPP_RX_FIFO_THRESHOLD	25

struct mbpp_port {
	struct cd1400 *mp_cd1400;	/* for LC2+1Sp card */
	struct cd1190 *mp_cd1190;	/* all the others   */

	int mp_flags;

	struct bpp_param mp_param;
#define mp_burst mp_param.bp_burst
#define mp_timeout mp_param.bp_timeout
#define mp_delay mp_param.bp_delay

	u_char *mp_ptr;			/* pointer to io data */
	int mp_cnt;			/* count of io chars */

	struct timeout mp_timeout_tmo;	/* for mbpp_timeout() */
	struct timeout mp_start_tmo;	/* for mbpp_start() */
};

#define MBPPF_OPEN	(1<<0)
#define MBPPF_TIMEOUT	(1<<1)
#define MBPPF_UIO	(1<<2)
#define MBPPF_DELAY	(1<<3)
#define MBPPF_WAKEUP	(1<<4)

struct mbpp_softc {
	struct device ms_dev;		/* device info */
	int ms_nports;			/* parallel ports */
	struct mbpp_port ms_port[MAGMA_MAX_BPP];
};

/* internal function prototypes */

int cd1400_compute_baud(speed_t, int, int *, int *);
__inline void cd1400_write_ccr(struct cd1400 *, u_char);
__inline u_char cd1400_read_reg(struct cd1400 *, int);
__inline void cd1400_write_reg(struct cd1400 *, int, u_char);
void cd1400_enable_transmitter(struct cd1400 *, int);

int magma_match(struct device *, void *, void *);
void magma_attach(struct device *, struct device *, void *);
int magma_hard(void *);
void magma_soft(void *);

int mtty_match(struct device *, void *, void *);
void mtty_attach(struct device *, struct device *, void *);
int mtty_modem_control(struct mtty_port *, int, int);
int mtty_param(struct tty *, struct termios *);
void mtty_start(struct tty *);

int mbpp_match(struct device *, void *, void *);
void mbpp_attach(struct device *, struct device *, void *);
int mbpp_rw(dev_t, struct uio *);
void mbpp_timeout(void *);
void mbpp_start(void *);
int mbpp_send(struct mbpp_port *, caddr_t, int);
int mbpp_recv(struct mbpp_port *, caddr_t, int);
int mbpp_hztoms(int);
int mbpp_mstohz(int);

#define	CD1400_REGMAPSIZE	0x80
#define	CD1190_REGMAPSIZE	0x20
@


1.8
log
@Do not redefine locally SET/CLR/ISSET macros from <sys/param.h>; no functional
change.
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.7 2003/03/27 17:39:05 jason Exp $	*/
d3 1
a3 2
/* magmareg.h
 *
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Iain Hibbert
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
a25 1
 *
@


1.7
log
@const and static cleaning
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.6 2003/02/11 19:20:28 mickey Exp $	*/
a202 7

/*
 * useful macros
 */
#define SET(t, f)	((t) |= (f))
#define CLR(t, f)	((t) &= ~(f))
#define ISSET(t, f)	((t) & (f))
@


1.6
log
@be consistant on Hz vs hz
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.5 2002/03/14 01:27:02 millert Exp $	*/
d128 1
a128 1
	struct magma_board_info *ms_board;	/* what am I? */
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.4 2002/01/25 02:37:43 jason Exp $	*/
d94 1
a94 1
	int cd_clock;			/* clock speed in Mhz */
@


1.4
log
@Add support for the "Magma 2+1HS Sp" (from NetBSD)
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.3 2002/01/12 21:41:17 jason Exp $	*/
d213 26
a238 26
int cd1400_compute_baud __P((speed_t, int, int *, int *));
__inline void cd1400_write_ccr __P((struct cd1400 *, u_char));
__inline u_char cd1400_read_reg __P((struct cd1400 *, int));
__inline void cd1400_write_reg __P((struct cd1400 *, int, u_char));
void cd1400_enable_transmitter __P((struct cd1400 *, int));

int magma_match __P((struct device *, void *, void *));
void magma_attach __P((struct device *, struct device *, void *));
int magma_hard __P((void *));
void magma_soft __P((void *));

int mtty_match __P((struct device *, void *, void *));
void mtty_attach __P((struct device *, struct device *, void *));
int mtty_modem_control __P((struct mtty_port *, int, int));
int mtty_param __P((struct tty *, struct termios *));
void mtty_start __P((struct tty *));

int mbpp_match __P((struct device *, void *, void *));
void mbpp_attach __P((struct device *, struct device *, void *));
int mbpp_rw __P((dev_t, struct uio *));
void mbpp_timeout __P((void *));
void mbpp_start __P((void *));
int mbpp_send __P((struct mbpp_port *, caddr_t, int));
int mbpp_recv __P((struct mbpp_port *, caddr_t, int));
int mbpp_hztoms __P((int));
int mbpp_mstohz __P((int));
@


1.4.4.1
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d213 26
a238 26
int cd1400_compute_baud(speed_t, int, int *, int *);
__inline void cd1400_write_ccr(struct cd1400 *, u_char);
__inline u_char cd1400_read_reg(struct cd1400 *, int);
__inline void cd1400_write_reg(struct cd1400 *, int, u_char);
void cd1400_enable_transmitter(struct cd1400 *, int);

int magma_match(struct device *, void *, void *);
void magma_attach(struct device *, struct device *, void *);
int magma_hard(void *);
void magma_soft(void *);

int mtty_match(struct device *, void *, void *);
void mtty_attach(struct device *, struct device *, void *);
int mtty_modem_control(struct mtty_port *, int, int);
int mtty_param(struct tty *, struct termios *);
void mtty_start(struct tty *);

int mbpp_match(struct device *, void *, void *);
void mbpp_attach(struct device *, struct device *, void *);
int mbpp_rw(dev_t, struct uio *);
void mbpp_timeout(void *);
void mbpp_start(void *);
int mbpp_send(struct mbpp_port *, caddr_t, int);
int mbpp_recv(struct mbpp_port *, caddr_t, int);
int mbpp_hztoms(int);
int mbpp_mstohz(int);
@


1.4.4.2
log
@Sync the SMP branch with 3.3
@
text
@d94 1
a94 1
	int cd_clock;			/* clock speed in MHz */
@


1.4.4.3
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.4.4.2 2003/03/28 00:38:30 niklas Exp $	*/
d128 1
a128 1
	const struct magma_board_info *ms_board;	/* what am I? */
@


1.4.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.4 2002/01/25 02:37:43 jason Exp $	*/
@


1.4.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.4.2.1 2002/01/31 22:55:38 niklas Exp $	*/
d213 26
a238 26
int cd1400_compute_baud(speed_t, int, int *, int *);
__inline void cd1400_write_ccr(struct cd1400 *, u_char);
__inline u_char cd1400_read_reg(struct cd1400 *, int);
__inline void cd1400_write_reg(struct cd1400 *, int, u_char);
void cd1400_enable_transmitter(struct cd1400 *, int);

int magma_match(struct device *, void *, void *);
void magma_attach(struct device *, struct device *, void *);
int magma_hard(void *);
void magma_soft(void *);

int mtty_match(struct device *, void *, void *);
void mtty_attach(struct device *, struct device *, void *);
int mtty_modem_control(struct mtty_port *, int, int);
int mtty_param(struct tty *, struct termios *);
void mtty_start(struct tty *);

int mbpp_match(struct device *, void *, void *);
void mbpp_attach(struct device *, struct device *, void *);
int mbpp_rw(dev_t, struct uio *);
void mbpp_timeout(void *);
void mbpp_start(void *);
int mbpp_send(struct mbpp_port *, caddr_t, int);
int mbpp_recv(struct mbpp_port *, caddr_t, int);
int mbpp_hztoms(int);
int mbpp_mstohz(int);
@


1.4.2.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d94 1
a94 1
	int cd_clock;			/* clock speed in MHz */
d128 1
a128 1
	const struct magma_board_info *ms_board;	/* what am I? */
@


1.3
log
@the 1190 and 1400 register maps aren't the same size don't treat them so
(basically this was a cut and pasto).
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.2 2002/01/12 21:30:56 jason Exp $	*/
d73 3
a75 2
	char *mb_name;			/* cardname to match against */
	char *mb_realname;		/* english card name */
@


1.2
log
@House cleaning: removing some leftover sparc bits and such
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.1 2002/01/12 20:19:40 jason Exp $	*/
d240 1
@


1.1
log
@Port of Iain Hibbert's magma driver to sparc64
@
text
@d1 1
a1 1
/*	$OpenBSD: magmareg.h,v 1.4 2001/07/04 08:43:28 niklas Exp $	*/
d101 2
a102 1
	__volatile u_char *cd_reg;	/* chip registers */
d110 5
a117 4
	void *sc_ih;			/* interrupt vector */
	void *sc_sih;			/* softintr vector */
	bus_space_tag_t sc_bustag;
	bus_space_handle_t sc_iohandle;	/* whole card registers */
d121 1
@

