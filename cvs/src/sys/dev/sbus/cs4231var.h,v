head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.42
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.32
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.40
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.38
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.36
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.34
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.30
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.28
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.26
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.24
	OPENBSD_5_0:1.9.0.22
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.20
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.18
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.14
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.6
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.4
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.2
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.6
	UBC:1.2.0.6
	UBC_BASE:1.2
	SMP:1.2.0.4
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2006.06.02.20.00.56;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2004.09.29.19.17.43;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.18.32.41;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.04.01.51.45;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.09.20.25.17;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.08.17.49.42;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.03.16.07;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.01.04.10.49;	author jason;	state Exp;
branches
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2001.09.30.00.45.17;	author jason;	state Exp;
branches;
next	;

1.2.4.1
date	2001.10.31.03.22.49;	author nate;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2002.03.28.15.09.09;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2003.03.28.00.38.30;	author niklas;	state Exp;
branches;
next	1.2.4.4;

1.2.4.4
date	2003.06.07.11.02.32;	author ho;	state Exp;
branches;
next	;

1.2.6.1
date	2002.06.11.03.42.29;	author art;	state Exp;
branches;
next	1.2.6.2;

1.2.6.2
date	2002.10.29.00.33.31;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@sbus_establish() and the associated linked list in the sbus softc is now only
used to store a per-device reset callback, for use in sbusreset(). Except
sbusreset() has never, ever, been used since Torek's sbus code went in.
Time to recycle those wasted bits.
@
text
@/*	$OpenBSD: cs4231var.h,v 1.8 2004/09/29 19:17:43 miod Exp $	*/

/*
 * Copyright (c) 1999 Jason L. Wright (jason@@thought.net)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
 *
 */

/*
 * Driver for CS4231 based audio found in some sun4m systems
 */

/*
 * List of device memory allocations (see cs4231_malloc/cs4231_free).
 */
struct cs_dma {
	struct cs_dma *		next;
	caddr_t			addr;
	bus_dmamap_t		dmamap;
	bus_dma_segment_t	segs[1];
	int			nsegs;
	size_t			size;
};

struct cs_volume {
	u_int8_t	left;
	u_int8_t	right;
};

struct cs_channel {
	void		(*cs_intr)(void *);	/* interrupt handler */
	void		*cs_arg;		/* interrupt arg */
	struct cs_dma	*cs_curdma;		/* current dma block */
	u_int32_t	cs_cnt;			/* current block count */
	u_int32_t	cs_blksz;		/* current block size */
	u_int32_t	cs_segsz;		/* current segment size */
	int		cs_locked;		/* channel locked? */
};

struct cs4231_softc {
	struct	device sc_dev;		/* base device */
	struct	intrhand sc_ih;		/* interrupt vectoring */
	bus_dma_tag_t sc_dmatag;
	bus_space_tag_t	sc_bustag;	/* CS4231/APC register tag */
	bus_space_handle_t sc_regs;	/* CS4231/APC register handle */
	int	sc_burst;		/* XXX: DMA burst size in effect */
	int	sc_open;		/* already open? */

	struct cs_channel sc_playback, sc_capture;

	char		sc_mute[9];	/* which devs are muted */
	u_int8_t	sc_out_port;	/* output port */
	u_int8_t	sc_in_port;	/* input port */
	struct	cs_volume sc_volume[9];	/* software volume */
	struct	cs_volume sc_adc;	/* adc volume */

	int sc_format_bits;
	int sc_speed_bits;
	int sc_precision;
	int sc_need_commit;
	int sc_channels;
	struct cs_dma	*sc_dmas;	/* dma list */
};
@


1.8
log
@Ratibibugle now useless evcnt structures.
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.7 2003/06/02 18:32:41 jason Exp $	*/
a66 1
	struct	sbusdev sc_sd;		/* sbus device */
@


1.7
log
@Nuke my clause 3 and 4 (and a couple of files jointly (c) with Theo).
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.6 2002/10/04 01:51:45 jason Exp $	*/
a71 1
	struct	evcnt sc_intrcnt;	/* statistics */
@


1.6
log
@simplify format setup
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.5 2002/09/09 20:25:17 jason Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Jason L. Wright
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.5
log
@Add support for audio capture (finally) and fix a bunch of stupid bugs.
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.4 2002/04/08 17:49:42 jason Exp $	*/
a93 1
	u_int sc_last_format;
@


1.4
log
@Credit DARPA/USAF appropriately.
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.3 2002/03/14 03:16:07 millert Exp $	*/
d60 10
a79 1
	int	sc_locked;		/* locked? */
d81 1
a81 4
	void	(*sc_rintr)(void *);	/* input completion intr handler */
	void *	sc_rarg;		/* arg for sc_rintr() */
	void	(*sc_pintr)(void *);	/* output completion intr handler */
	void *	sc_parg;		/* arg for sc_pintr() */
d85 1
d87 1
a94 3
	u_int32_t	sc_blksz;
	u_int32_t	sc_playcnt;
	u_int32_t	sc_playsegsz;
a95 1
	struct cs_dma	*sc_nowplaying;
@


1.3
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.2 2001/10/01 04:10:49 jason Exp $	*/
d32 5
@


1.2
log
@simplification:
don't need to mute the monitor when changing modes (cs4231 mutes it
automatically when entering MODE_CHANGE_ENABLE is set).
Remember the last format/xtal/speed selection and avoid resetting it if
we're using the same one again.
Also, simplify the volume/mute setup.
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.1 2001/09/30 00:45:17 jason Exp $	*/
d67 1
a67 1
	void	(*sc_rintr)(void*);	/* input completion intr handler */
d69 1
a69 1
	void	(*sc_pintr)(void*);	/* output completion intr handler */
@


1.2.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.2 2001/10/01 04:10:49 jason Exp $	*/
a31 5
 *
 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
 *
d67 1
a67 1
	void	(*sc_rintr)(void *);	/* input completion intr handler */
d69 1
a69 1
	void	(*sc_pintr)(void *);	/* output completion intr handler */
@


1.2.6.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.2.6.1 2002/06/11 03:42:29 art Exp $	*/
a59 10
struct cs_channel {
	void		(*cs_intr)(void *);	/* interrupt handler */
	void		*cs_arg;		/* interrupt arg */
	struct cs_dma	*cs_curdma;		/* current dma block */
	u_int32_t	cs_cnt;			/* current block count */
	u_int32_t	cs_blksz;		/* current block size */
	u_int32_t	cs_segsz;		/* current segment size */
	int		cs_locked;		/* channel locked? */
};

d70 1
d72 4
a75 1
	struct cs_channel sc_playback, sc_capture;
a78 1
	u_int8_t	sc_in_port;	/* input port */
a79 1
	struct	cs_volume sc_adc;	/* adc volume */
d86 4
d91 1
@


1.2.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.2.4.2
log
@Merge in -current from roughly a week ago
@
text
@d67 1
a67 1
	void	(*sc_rintr)(void *);	/* input completion intr handler */
d69 1
a69 1
	void	(*sc_pintr)(void *);	/* output completion intr handler */
@


1.2.4.3
log
@Sync the SMP branch with 3.3
@
text
@a31 5
 *
 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
 *
a54 10
struct cs_channel {
	void		(*cs_intr)(void *);	/* interrupt handler */
	void		*cs_arg;		/* interrupt arg */
	struct cs_dma	*cs_curdma;		/* current dma block */
	u_int32_t	cs_cnt;			/* current block count */
	u_int32_t	cs_blksz;		/* current block size */
	u_int32_t	cs_segsz;		/* current segment size */
	int		cs_locked;		/* channel locked? */
};

d65 1
d67 4
a70 1
	struct cs_channel sc_playback, sc_capture;
a73 1
	u_int8_t	sc_in_port;	/* input port */
a74 1
	struct	cs_volume sc_adc;	/* adc volume */
d81 4
d86 1
@


1.2.4.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.2.4.3 2003/03/28 00:38:30 niklas Exp $	*/
d15 5
@


1.1
log
@driver for SUNW,CS4231 (doesn't quite sound right yet =), but is mostly there.
Mostly a port from sparc, but bits from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.2 1999/06/07 20:58:22 jason Exp $	*/
d81 1
@

