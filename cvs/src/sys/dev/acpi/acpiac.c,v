head	1.30;
access;
symbols
	OPENBSD_6_1_BASE:1.30
	OPENBSD_6_0:1.30.0.6
	OPENBSD_6_0_BASE:1.30
	OPENBSD_5_9:1.30.0.2
	OPENBSD_5_9_BASE:1.30
	OPENBSD_5_8:1.30.0.4
	OPENBSD_5_8_BASE:1.30
	OPENBSD_5_7:1.28.0.22
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.28.0.20
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.28.0.18
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.28.0.14
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.28.0.12
	OPENBSD_5_3_BASE:1.28
	OPENBSD_5_2:1.28.0.10
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.8
	OPENBSD_5_0:1.28.0.6
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.28.0.4
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.2
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.27.0.2
	OPENBSD_4_7_BASE:1.27
	OPENBSD_4_6:1.27.0.4
	OPENBSD_4_6_BASE:1.27
	OPENBSD_4_5:1.26.0.2
	OPENBSD_4_5_BASE:1.26
	OPENBSD_4_4:1.25.0.2
	OPENBSD_4_4_BASE:1.25
	OPENBSD_4_3:1.19.0.2
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.17.0.2
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.7.0.4
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7;
locks; strict;
comment	@ * @;


1.30
date	2015.07.17.20.15.52;	author jcs;	state Exp;
branches;
next	1.29;
commitid	3rCKwwLrio85onAm;

1.29
date	2015.03.14.03.38.46;	author jsg;	state Exp;
branches;
next	1.28;
commitid	p4LJxGKbi0BU2cG6;

1.28
date	2010.08.07.16.55.38;	author canacar;	state Exp;
branches;
next	1.27;

1.27
date	2009.03.11.20.37.46;	author jordan;	state Exp;
branches;
next	1.26;

1.26
date	2008.11.06.23.41.28;	author marco;	state Exp;
branches;
next	1.25;

1.25
date	2008.07.23.00.20.35;	author fgsch;	state Exp;
branches;
next	1.24;

1.24
date	2008.07.18.03.54.18;	author marco;	state Exp;
branches;
next	1.23;

1.23
date	2008.06.12.22.19.17;	author marco;	state Exp;
branches;
next	1.22;

1.22
date	2008.06.01.17.59.55;	author marco;	state Exp;
branches;
next	1.21;

1.21
date	2008.05.16.06.50.55;	author dlg;	state Exp;
branches;
next	1.20;

1.20
date	2008.05.14.05.24.36;	author jordan;	state Exp;
branches;
next	1.19;

1.19
date	2007.11.03.22.51.21;	author canacar;	state Exp;
branches;
next	1.18;

1.18
date	2007.06.23.11.41.03;	author canacar;	state Exp;
branches;
next	1.17;

1.17
date	2007.02.21.03.58.12;	author marco;	state Exp;
branches;
next	1.16;

1.16
date	2007.01.03.05.52.28;	author marco;	state Exp;
branches;
next	1.15;

1.15
date	2006.12.28.17.30.46;	author mk;	state Exp;
branches;
next	1.14;

1.14
date	2006.12.26.23.58.08;	author marco;	state Exp;
branches;
next	1.13;

1.13
date	2006.12.23.17.46.39;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2006.12.21.11.23.41;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2006.12.18.17.55.58;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2006.11.29.22.17.07;	author marco;	state Exp;
branches;
next	1.9;

1.9
date	2006.10.19.08.56.46;	author marco;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.12.16.38.21;	author jordan;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.22.19.29.24;	author jordan;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.22.17.21.33;	author jordan;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.17.07.33.40;	author marco;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.17.00.46.54;	author jordan;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.16.22.14.32;	author marco;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.16.04.16.59;	author marco;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.14.04.15.43;	author marco;	state Exp;
branches;
next	;


desc
@@


1.30
log
@fix compilation with ACPI_DEBUG
@
text
@/* $OpenBSD: acpiac.c,v 1.29 2015/03/14 03:38:46 jsg Exp $ */
/*
 * Copyright (c) 2005 Marco Peereboom <marco@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/event.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/malloc.h>

#include <machine/bus.h>
#include <machine/apmvar.h>

#include <dev/acpi/acpireg.h>
#include <dev/acpi/acpivar.h>
#include <dev/acpi/acpidev.h>
#include <dev/acpi/dsdt.h>

#include <sys/sensors.h>

int  acpiac_match(struct device *, void *, void *);
void acpiac_attach(struct device *, struct device *, void *);
int  acpiac_notify(struct aml_node *, int, void *);

void acpiac_refresh(void *);
int acpiac_getsta(struct acpiac_softc *);

struct cfattach acpiac_ca = {
	sizeof(struct acpiac_softc), acpiac_match, acpiac_attach
};

struct cfdriver acpiac_cd = {
	NULL, "acpiac", DV_DULL
};

const char *acpiac_hids[] = { ACPI_DEV_AC, 0 };

int
acpiac_match(struct device *parent, void *match, void *aux)
{
	struct acpi_attach_args *aa = aux;
	struct cfdata *cf = match;

	/* sanity */
	return (acpi_matchhids(aa, acpiac_hids, cf->cf_driver->cd_name));
}

void
acpiac_attach(struct device *parent, struct device *self, void *aux)
{
	struct acpiac_softc *sc = (struct acpiac_softc *)self;
	struct acpi_attach_args *aa = aux;

	sc->sc_acpi = (struct acpi_softc *)parent;
	sc->sc_devnode = aa->aaa_node;

	acpiac_getsta(sc);
	printf(": AC unit ");
	if (sc->sc_ac_stat == PSR_ONLINE)
		printf("online\n");
	else if (sc->sc_ac_stat == PSR_OFFLINE)
		printf("offline\n");
	else
		printf("in unknown state\n");

	strlcpy(sc->sc_sensdev.xname, DEVNAME(sc),
	    sizeof(sc->sc_sensdev.xname));
	strlcpy(sc->sc_sens[0].desc, "power supply",
	    sizeof(sc->sc_sens[0].desc));
	sc->sc_sens[0].type = SENSOR_INDICATOR;
	sensor_attach(&sc->sc_sensdev, &sc->sc_sens[0]);
	sensordev_install(&sc->sc_sensdev);
	sc->sc_sens[0].value = sc->sc_ac_stat;

	aml_register_notify(sc->sc_devnode, aa->aaa_dev,
	    acpiac_notify, sc, ACPIDEV_NOPOLL);
}

void
acpiac_refresh(void *arg)
{
	struct acpiac_softc *sc = arg;

	acpiac_getsta(sc);
	sc->sc_sens[0].value = sc->sc_ac_stat;
	acpi_record_event(sc->sc_acpi, APM_POWER_CHANGE);
}

int
acpiac_getsta(struct acpiac_softc *sc)
{
	int64_t sta;

	if (aml_evalname(sc->sc_acpi, sc->sc_devnode, "_STA", 0, NULL, NULL)) {
		dnprintf(10, "%s: no _STA\n",
		    DEVNAME(sc));
	}

	if (aml_evalinteger(sc->sc_acpi, sc->sc_devnode, "_PSR", 0, NULL, &sta)) {
		dnprintf(10, "%s: no _PSR\n",
		    DEVNAME(sc));
		return (1);
	}
	sc->sc_ac_stat = sta;
	return (0);
}

int
acpiac_notify(struct aml_node *node, int notify_type, void *arg)
{
	struct acpiac_softc *sc = arg;

	dnprintf(10, "acpiac_notify: %.2x %s\n", notify_type,
	    DEVNAME(sc));

	switch (notify_type) {
	case 0x00:
	case 0x01:
	case 0x81:
		/*
		 * XXX some sony vaio's use the wrong notify type
		 * work around it by honoring it as a 0x80
		 */
		/* FALLTHROUGH */
	case 0x80:
		acpiac_refresh(sc);
		dnprintf(10, "A/C status: %d\n", sc->sc_ac_stat);
		break;
	}
	return (0);
}
@


1.29
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.28 2010/08/07 16:55:38 canacar Exp $ */
d127 1
a127 1
	    sc->sc_devnode->name);
@


1.28
log
@Generate power change events for APM. Makes powerup and powerdown scripts
work with ACPI.
ok deraadt@@, phessler@@, feedback kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.27 2009/03/11 20:37:46 jordan Exp $ */
a29 1
#include <dev/acpi/amltypes.h>
@


1.27
log
@Cleanup.. use aml_evalinteger instead of aml_evalname
ok marco@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.26 2008/11/06 23:41:28 marco Exp $ */
d19 1
d25 1
d100 1
@


1.26
log
@Collapse all sanity checks of hids into one function.

Originaly from jordan
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.25 2008/07/23 00:20:35 fgsch Exp $ */
d103 1
a103 1
	struct aml_value res;
d110 1
a110 1
	if (aml_evalname(sc->sc_acpi, sc->sc_devnode, "_PSR", 0, NULL, &res)) {
d115 1
a115 2
	sc->sc_ac_stat = aml_val2int(&res);
	aml_freevalue(&res);
@


1.25
log
@move the aml_register_notify() call below for better debugging output.
marco@@ ok.
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.24 2008/07/18 03:54:18 marco Exp $ */
d48 2
d57 1
a57 5
	if (aa->aaa_name == NULL ||
	    strcmp(aa->aaa_name, cf->cf_driver->cd_name) != 0 ||
	    aa->aaa_table != NULL)
		return (0);
	return (1);
@


1.24
log
@POLL causes concurrency issues with event driven batteries.  Remove for now
until I have time to implement proper fix.

Noted by several folks.
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.23 2008/06/12 22:19:17 marco Exp $ */
a70 3
	aml_register_notify(sc->sc_devnode, aa->aaa_dev,
	    acpiac_notify, sc, ACPIDEV_NOPOLL);

d88 3
@


1.23
log
@Poll AC because there are some crappy machines out there that need it.
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.22 2008/06/01 17:59:55 marco Exp $ */
d72 1
a72 1
	    acpiac_notify, sc, ACPIDEV_POLL);
@


1.22
log
@Re-enable new parser.  Lots of testing by various folks.  Fits all media
now too.

ok kettenis deraadt
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.20 2008/05/14 05:24:36 jordan Exp $ */
d72 1
a72 1
	    acpiac_notify, sc, ACPIDEV_NOPOLL);
@


1.21
log
@back out jordans new parser.

it didnt have enough oks from the right people, it did break machines
that were previously working, and it bloated the RAMDISKS and install
media beyond the constraints of the media.

requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.19 2007/11/03 22:51:21 canacar Exp $ */
d69 1
a69 1
	sc->sc_devnode = aa->aaa_node->child;
d71 1
a71 1
	aml_register_notify(sc->sc_devnode->parent, aa->aaa_dev,
d128 1
a128 1
	    sc->sc_devnode->parent->name);
@


1.20
log
@Adding new ACPI Parser code
Old guts of code still exists, needs to be torn out next
ok marco@@
ok brad@@
@
text
@d69 1
a69 1
	sc->sc_devnode = aa->aaa_node;
d71 1
a71 1
	aml_register_notify(sc->sc_devnode, aa->aaa_dev,
d128 1
a128 1
	    sc->sc_devnode->name);
@


1.19
log
@Notebook from ckuethe@@ that notifies AC with 0x01, so add that in.
cool ckuethe@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.18 2007/06/23 11:41:03 canacar Exp $ */
d69 1
a69 1
	sc->sc_devnode = aa->aaa_node->child;
d71 1
a71 1
	aml_register_notify(sc->sc_devnode->parent, aa->aaa_dev,
d128 1
a128 1
	    sc->sc_devnode->parent->name);
@


1.18
log
@Accept 0x00 as notify type since some notebooks (MSI-S260)
incorrectly use it when signaling events. ok marco@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.17 2007/02/21 03:58:12 marco Exp $ */
d132 1
@


1.17
log
@Some Sony VAIOs use the wrong eventing type.  Work around that by honering it.
Found by giovanni <qgiovanni @@ gmail . com>

ok jordan
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.16 2007/01/03 05:52:28 marco Exp $ */
d131 1
@


1.16
log
@Consistent naming for the sensors.
From Constantine Murenin <mureninc at gmail dot com>
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.15 2006/12/28 17:30:46 mk Exp $ */
d131 6
@


1.15
log
@Prettify dmesg a bit for attach with power state being either offline or
unknown.

ok marco (who already had this change in his tree but said I should
commit)
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.14 2006/12/26 23:58:08 marco Exp $ */
d85 4
a88 3
	strlcpy(sc->sens[0].desc, "power supply", sizeof(sc->sens[0].desc));
	sc->sens[0].type = SENSOR_INDICATOR;
	sensor_attach(&sc->sc_sensdev, &sc->sens[0]);
d90 1
a90 1
	sc->sens[0].value = sc->sc_ac_stat;
d99 1
a99 1
	sc->sens[0].value = sc->sc_ac_stat;
@


1.14
log
@Add polling to devices that require it such as acpibat and acpitz.
Use the same tsleep/wakeup mechanism as the interrupt code to keep it non-
concurrent.
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.13 2006/12/23 17:46:39 deraadt Exp $ */
d79 1
a79 1
		printf("offline");
d81 1
a81 1
		printf(" in unknown state");
@


1.13
log
@adapt to new two-level sensor api; Constantine A. Murenin
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.12 2006/12/21 11:23:41 deraadt Exp $ */
d72 1
a72 1
	    acpiac_notify, sc);
@


1.12
log
@more minor knf
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.11 2006/12/18 17:55:58 deraadt Exp $ */
d83 3
a85 2
	strlcpy(sc->sens[0].device, DEVNAME(sc), sizeof(sc->sens[0].device));
	strlcpy(sc->sens[0].desc, "power supply", sizeof(sc->sens[2].desc));
d87 2
a88 1
	sensor_add(&sc->sens[0]);
@


1.11
log
@minor cleaning; ok marco
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.10 2006/11/29 22:17:07 marco Exp $ */
d74 1
a74 1
	acpiac_getsta(sc); 
d95 1
a95 1
	acpiac_getsta(sc); 
@


1.10
log
@After a long debate at the hackathon it was decided that the acpi implementation
is not concurrent if the sensors thread goes away.  This makes acpi completly
lockless.

help and ok dlg
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.9 2006/10/19 08:56:46 marco Exp $ */
a58 1

d75 1
a75 3

	printf(": ");

d77 1
a77 1
		printf("AC unit online");
d79 1
a79 1
		printf("AC unit offline");
d81 1
a81 3
		printf("AC unit in unknown state");

	printf("\n");
a95 1

a115 1

a132 2


@


1.9
log
@Replace ACPI ioctls with APM ioctls.  This makes ACPI talk the same protocol
as APM therefore userspace can now retrieve power information in the same
fashion as all other apm arches (zaurus, macppc, i386 etc).

To use force the use of acpi device like so: apmd -f /dev/acpi

ok jordan@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.8 2006/10/12 16:38:21 jordan Exp $ */
d72 2
a73 1
	aml_register_notify(sc->sc_devnode->parent, aa->aaa_dev, acpiac_notify, sc);
a92 3

	if (sensor_task_register(sc, acpiac_refresh, 10))
		printf(", unable to register update task\n");
a94 1
/* XXX this is for debug only, remove later */
d110 1
a110 1
	if (aml_evalname(sc->sc_acpi, sc->sc_devnode, "_STA", 0, NULL, NULL) != 0) {
d115 1
a115 1
	if (aml_evalname(sc->sc_acpi, sc->sc_devnode, "_PSR", 0, NULL, &res) != 0) {
d136 1
a136 1
		acpiac_getsta(sc);
d140 1
@


1.8
log
@Massive ACPI changes
  Fixed ACPI leaks
  new ACPI API
ok marco@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.7 2006/02/22 19:29:24 jordan Exp $ */
a35 14

struct acpiac_softc {
	struct device		sc_dev;

	bus_space_tag_t		sc_iot;
	bus_space_handle_t	sc_ioh;

	struct acpi_softc	*sc_acpi;
	struct aml_node		*sc_devnode;

	int			sc_ac_stat;

	struct sensor sens[1];	/* XXX debug only */
};
@


1.7
log
@Added new aml_register_notify to handle call-by-ID
Moved powerdown code to button device
ok marco@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.6 2006/02/22 17:21:33 jordan Exp $ */
d125 1
a125 2
	struct aml_value res, env;
	struct acpi_context *ctx;
d127 1
a127 5
	memset(&res, 0, sizeof(res));
	memset(&env, 0, sizeof(env));

	ctx = NULL;
	if (aml_eval_name(sc->sc_acpi, sc->sc_devnode, "_STA", &res, &env)) {
d132 1
a132 1
	if (aml_eval_name(sc->sc_acpi, sc->sc_devnode, "_PSR", &res, &env)) {
d137 2
a138 2

	sc->sc_ac_stat = aml_val2int(NULL, &res);
@


1.6
log
@Added notify callback for A/C device
ok marco@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.5 2006/02/17 07:33:40 marco Exp $ */
d86 1
a86 1
	aml_register_notify(sc->sc_devnode->parent, acpiac_notify, sc);
a151 1
	int oldstat;
a157 1
		oldstat = sc->sc_ac_stat;
d159 1
a159 2
		dnprintf(10, "A/C status: old:%d new:%d\n", oldstat,
		    sc->sc_ac_stat);
d162 1
@


1.5
log
@Add sensors output.  This is for debug only and will be removed later.
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.4 2006/02/17 00:46:54 jordan Exp $ */
d33 1
a33 1
int acpiac_match(struct device *, void *, void *);
d35 1
d86 2
a134 1
		return (1);
d145 20
@


1.4
log
@Fixed code for handling _INI
Rearranged debug statements
ok marco@@
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.3 2006/02/16 22:14:32 marco Exp $ */
d31 2
d46 2
d50 1
d97 20
@


1.3
log
@Print useful information during boot about the battery and power supply.

ok jordan.
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.2 2005/12/16 04:16:59 marco Exp $ */
a108 2

	dnprintf(40, "_STA value: %x\n", res.v_integer);
@


1.2
log
@Use new unified header.
@
text
@d1 1
a1 1
/* $OpenBSD: acpiac.c,v 1.1 2005/12/14 04:15:43 marco Exp $ */
d28 2
d39 5
d46 2
d74 1
a74 3
/*
	struct acpiac_softc *sc = (struct acpiac_softc *) self;
	struct acpi_softc *psc = (struct acpi_softc *) parent;
d76 14
a89 3
	bus_addr_t address;
	bus_size_t size;
*/
d92 29
@


1.1
log
@Add AC device.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d27 1
a27 1
#include <dev/acpi/acpiac.h>
@

