head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.6
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.9.0.18
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.16
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.7.0.4
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	2015.03.14.03.38.47;	author jsg;	state Exp;
branches;
next	1.9;
commitid	p4LJxGKbi0BU2cG6;

1.9
date	2011.05.23.11.58.40;	author pirofti;	state Exp;
branches;
next	1.8;

1.8
date	2011.04.06.21.16.13;	author martynas;	state Exp;
branches;
next	1.7;

1.7
date	2010.07.27.06.12.50;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2010.07.26.17.46.29;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.04.17.16.00;	author pirofti;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.04.04.50.08;	author pirofti;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.03.00.36.59;	author pirofti;	state Exp;
branches;
next	1.2;

1.2
date	2008.07.02.04.23.22;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.02.03.14.54;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@/*	$OpenBSD: acpivideo.c,v 1.9 2011/05/23 11:58:40 pirofti Exp $	*/
/*
 * Copyright (c) 2008 Federico G. Schwindt <fgsch@@openbsd.org>
 * Copyright (c) 2009 Paul Irofti <pirofti@@openbsd.org>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <machine/bus.h>

#include <dev/acpi/acpivar.h>
#include <dev/acpi/acpidev.h>
#include <dev/acpi/amltypes.h>
#include <dev/acpi/dsdt.h>

#ifdef ACPIVIDEO_DEBUG
#define DPRINTF(x)	printf x
#else
#define DPRINTF(x)
#endif

/* _DOS Enable/Disable Output Switching */
#define DOS_SWITCH_BY_OSPM		0
#define DOS_SWITCH_BY_BIOS		1
#define DOS_SWITCH_LOCKED		2
#define DOS_SWITCH_BY_OSPM_EXT		3
#define DOS_BRIGHTNESS_BY_OSPM		4

/* Notifications for Displays Devices */
#define NOTIFY_OUTPUT_SWITCHED		0x80
#define NOTIFY_OUTPUT_CHANGED		0x81
#define NOTIFY_OUTPUT_CYCLE_KEY		0x82
#define NOTIFY_OUTPUT_NEXT_KEY		0x83
#define NOTIFY_OUTPUT_PREV_KEY		0x84

int	acpivideo_match(struct device *, void *, void *);
void	acpivideo_attach(struct device *, struct device *, void *);
int	acpivideo_notify(struct aml_node *, int, void *);

void	acpivideo_set_policy(struct acpivideo_softc *, int);
int	acpi_foundvout(struct aml_node *, void *);
int	acpivideo_print(void *, const char *);

int	acpivideo_getpcibus(struct acpivideo_softc *, struct aml_node *);

struct cfattach acpivideo_ca = {
	sizeof(struct acpivideo_softc), acpivideo_match, acpivideo_attach
};

struct cfdriver acpivideo_cd = {
	NULL, "acpivideo", DV_DULL
};

int
acpivideo_match(struct device *parent, void *match, void *aux)
{
	struct acpi_attach_args	*aaa = aux;
	struct cfdata *cf = match;

	if (aaa->aaa_name == NULL || strcmp(aaa->aaa_name,
	    cf->cf_driver->cd_name) != 0 || aaa->aaa_table != NULL)
		return (0);

	return (1);
}

void
acpivideo_attach(struct device *parent, struct device *self, void *aux)
{
	struct acpivideo_softc *sc = (struct acpivideo_softc *)self;
	struct acpi_attach_args *aaa = aux;

	sc->sc_acpi = (struct acpi_softc *)parent;
	sc->sc_devnode = aaa->aaa_node;

	printf(": %s\n", sc->sc_devnode->name);

	if (acpivideo_getpcibus(sc, sc->sc_devnode) == -1)
		return;

	aml_register_notify(sc->sc_devnode, aaa->aaa_dev,
	    acpivideo_notify, sc, ACPIDEV_NOPOLL);

	acpivideo_set_policy(sc,
	    DOS_SWITCH_BY_OSPM | DOS_BRIGHTNESS_BY_OSPM);

	aml_find_node(aaa->aaa_node, "_BCL", acpi_foundvout, sc);
}

int
acpivideo_notify(struct aml_node *node, int notify, void *arg)
{
	struct acpivideo_softc *sc = arg;

	switch (notify) {
	case NOTIFY_OUTPUT_SWITCHED:
	case NOTIFY_OUTPUT_CHANGED:
	case NOTIFY_OUTPUT_CYCLE_KEY:
	case NOTIFY_OUTPUT_NEXT_KEY:
	case NOTIFY_OUTPUT_PREV_KEY:
		DPRINTF(("%s: event 0x%02x\n", DEVNAME(sc), notify));
		break;
	default:
		printf("%s: unknown event 0x%02x\n", DEVNAME(sc), notify);
		break;
	}

	return (0);
}

void
acpivideo_set_policy(struct acpivideo_softc *sc, int policy)
{
	struct aml_value args, res;

	memset(&args, 0, sizeof(args));
	args.v_integer = policy;
	args.type = AML_OBJTYPE_INTEGER;

	aml_evalname(sc->sc_acpi, sc->sc_devnode, "_DOS", 1, &args, &res);
	DPRINTF(("%s: set policy to %X\n", DEVNAME(sc), aml_val2int(&res)));

	aml_freevalue(&res);
}

int
acpi_foundvout(struct aml_node *node, void *arg)
{
	struct acpivideo_softc *sc = (struct acpivideo_softc *)arg;
	struct device *self = (struct device *)arg;
	struct acpi_attach_args aaa;
	node = node->parent;

	DPRINTF(("Inside acpi_foundvout()\n"));
	if (node->parent != sc->sc_devnode)
		return (0);

	if (aml_searchname(node, "_BCM") && aml_searchname(node, "_BQC")) {
		memset(&aaa, 0, sizeof(aaa));
		aaa.aaa_iot = sc->sc_acpi->sc_iot;
		aaa.aaa_memt = sc->sc_acpi->sc_memt;
		aaa.aaa_node = node;
		aaa.aaa_name = "acpivout";

		config_found(self, &aaa, acpivideo_print);
	}

	return (0);
}

int
acpivideo_print(void *aux, const char *pnp)
{
	struct acpi_attach_args *aa = aux;

	if (pnp) {
		if (aa->aaa_name)
			printf("%s at %s", aa->aaa_name, pnp);
		else
			return (QUIET);
	}

	return (UNCONF);
}

int
acpivideo_getpcibus(struct acpivideo_softc *sc, struct aml_node *node)
{
	/* Check if parent device has PCI mapping */
	return (node->parent && node->parent->pci) ?
		node->parent->pci->sub : -1;
}
@


1.9
log
@Remove leftover include.
@
text
@d1 1
a1 1
/*	$OpenBSD: acpivideo.c,v 1.8 2011/04/06 21:16:13 martynas Exp $	*/
a24 1
#include <dev/acpi/acpireg.h>
@


1.8
log
@Don't enumerate _DOD for attaching acpivout(4), since:
- ACPI spec. says _DOD is not required for brightness controls,
- The list returned by _DOD might be wrong,
- It's an unnecessary work to do.
Instead, decision to attach will be based on the actual methods
found, similarly like in the other ACPI drivers.
Tested by several on tech@@.
OK kettenis@@, marco@@, pirofti@@.

pirofti@@ asked me to note here that devices not supporting brightness
controls won't attach from now on.  This shouldn't be a concern for
you, since such devices weren't doing anything at all, anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: acpivideo.c,v 1.7 2010/07/27 06:12:50 deraadt Exp $	*/
a21 1
#include <sys/malloc.h>
@


1.7
log
@annoying spaces getting in the way
@
text
@d1 1
a1 1
/*	$OpenBSD: acpivideo.c,v 1.6 2010/07/26 17:46:29 kettenis Exp $	*/
a56 1
void	acpivideo_get_dod(struct acpivideo_softc *);
a102 2
	acpivideo_get_dod(sc);
	aml_find_node(aaa->aaa_node, "_DCS", acpi_foundvout, sc);
d137 1
a137 1
	DPRINTF(("%s: set policy to %d", DEVNAME(sc), aml_val2int(&res)));
a144 4
	struct aml_value	res;
	int	i, addr;
	char	fattach = 0;

d147 2
a148 1
	struct acpivideo_attach_args av;
d150 2
a151 5
	if (sc->sc_dod == NULL)
		return (0);
	DPRINTF(("Inside acpi_foundvout()"));
	if (aml_evalname(sc->sc_acpi, node->parent, "_ADR", 0, NULL, &res)) {
		DPRINTF(("%s: no _ADR\n", DEVNAME(sc)));
a152 4
	}
	addr = aml_val2int(&res);
	DPRINTF(("_ADR: %X\n", addr));
	aml_freevalue(&res);
d154 6
a159 18
	for (i = 0; i < sc->sc_dod_len; i++)
		if (addr == (sc->sc_dod[i]&0xffff)) {
			DPRINTF(("Matched: %X\n", sc->sc_dod[i]));
			fattach = 1;
			break;
		}
	if (fattach) {
		memset(&av, 0, sizeof(av));
		av.aaa.aaa_iot = sc->sc_acpi->sc_iot;
		av.aaa.aaa_memt = sc->sc_acpi->sc_memt;
		av.aaa.aaa_node = node->parent;
		av.aaa.aaa_name = "acpivout";
		av.dod = sc->sc_dod[i];
		/*
		 *  Make sure we don't attach twice if both _BCL and
		 * _DCS methods are found by zeroing the DOD address.
		 */
		sc->sc_dod[i] = 0;
d161 1
a161 1
		config_found(self, &av, acpivideo_print);
a179 32
}

void
acpivideo_get_dod(struct acpivideo_softc * sc)
{
	struct aml_value	res;
	int	i;

	if (aml_evalname(sc->sc_acpi, sc->sc_devnode, "_DOD", 0, NULL, &res)) {
		DPRINTF(("%s: no _DOD\n", DEVNAME(sc)));
		return;
	}
	sc->sc_dod_len = res.length;
	if (sc->sc_dod_len == 0) {
		sc->sc_dod = NULL;
		aml_freevalue(&res);
		return;
	}
	sc->sc_dod = malloc(sc->sc_dod_len * sizeof(int), M_DEVBUF,
	    M_WAITOK|M_ZERO);
	if (sc->sc_dod == NULL) {
		aml_freevalue(&res);
		return;
	}

	for (i = 0; i < sc->sc_dod_len; i++) {
		sc->sc_dod[i] = aml_val2int(res.v_package[i]);
		DPRINTF(("DOD: %X ", sc->sc_dod[i]));
	}
	DPRINTF(("\n"));

	aml_freevalue(&res);
@


1.6
log
@Some machines include VID devices for hardware that doesn't exist.  Avoid
attaching those devices by checking whether the PCI bus on which they are
supposed to sit exists.  Fixes issues with brightness controls on my Dell
laptop.

ok marco@@, pirofti@@
@
text
@d1 1
a1 1
/*	$OpenBSD: acpivideo.c,v 1.5 2009/06/04 17:16:00 pirofti Exp $	*/
d180 1
a180 1
		/* 
d223 1
a223 1
	sc->sc_dod = malloc(sc->sc_dod_len * sizeof(int), M_DEVBUF, 
@


1.5
log
@Add myself to the copyright, suggested by marco@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: acpivideo.c,v 1.4 2009/06/04 04:50:08 pirofti Exp $	*/
d61 2
d95 3
d237 8
@


1.4
log
@Some output devices have only brightness support (or only output switching).
Handle the case where only brightness is supported. This makes brightness work
on some Sony Vaio's.

Okay mlarkin@@ deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: acpivideo.c,v 1.3 2009/06/03 00:36:59 pirofti Exp $	*/
d4 1
@


1.3
log
@Add acpivideo support. This adds brightness support for all laptops
except thinkpads, they will use the acpithinkpad driver. The driver is
also hooked into wsconsole. So brightness can be adjusted via:

$ wsconsctl display.brightness=<percentage>

This is very helpfull on some laptops that have a nasty bios and get two
steps instead of one when pressing the brightness button.

Tested on various dell, fujitsu, acer, samsung and other laptops.

Okay marco@@, miod@@. Suggestions from kettenis@@.
Lots of reviews and help from miod@@, thanks!
@
text
@d1 1
a1 1
/*	$OpenBSD: acpivideo.c,v 1.2 2008/07/02 04:23:22 fgsch Exp $	*/
d100 1
d174 5
@


1.2
log
@defines for output devices' events.
@
text
@d1 1
a1 1
/*	$OpenBSD: acpivideo.c,v 1.1 2008/07/02 03:14:54 fgsch Exp $	*/
d21 1
a50 14
/* Notifications for Output Devices */
#define NOTIFY_BRIGHTNESS_CYCLE		0x85
#define NOTIFY_BRIGHTNESS_UP		0x86
#define NOTIFY_BRIGHTNESS_DOWN		0x87
#define NOTIFY_BRIGHTNESS_ZERO		0x88
#define NOTIFY_DISPLAY_OFF		0x89

struct acpivideo_softc {
	struct device sc_dev;

	struct acpi_softc *sc_acpi;
	struct aml_node	*sc_devnode;
};

d53 6
a67 3
int	acpivideo_notify(struct aml_node *, int, void *);
void	acpivideo_set_policy(struct acpivideo_softc *, int);

d85 1
a85 1
	struct acpi_attach_args *aa = aux;
d88 1
a88 1
	sc->sc_devnode = aa->aaa_node;
d92 1
a92 1
	aml_register_notify(sc->sc_devnode, aa->aaa_dev,
d97 3
d110 3
a114 1

d131 1
d133 91
@


1.1
log
@add acpivideo. for now almost an empty skel so others can work on
suspend/resume. eventually it will also manage output switching and
brightness where supported.  prodded by marco@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d49 7
@

