head	1.9;
access;
symbols
	OPENBSD_6_1:1.8.0.10
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.6
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.7.0.16
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.14
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.12
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.16
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.12
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.10
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.8
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.6
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.18
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.8
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.2
	SMP_BASE:1.1
	kame_19991208:1.1;
locks; strict;
comment	@ * @;


1.9
date	2017.09.08.05.36.52;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	uRv5pa9QDlZaYgwD;

1.8
date	2015.03.14.03.38.49;	author jsg;	state Exp;
branches;
next	1.7;
commitid	p4LJxGKbi0BU2cG6;

1.7
date	2011.11.15.22.27.53;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2011.10.25.20.02.20;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2009.07.15.17.18.14;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2006.07.31.11.06.36;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.01.27.01;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.21.17.41.04;	author mickey;	state Exp;
branches
	1.2.8.1;
next	1.1;

1.1
date	99.11.28.11.52.06;	author downsj;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.05.14.22.26.09;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.03.28.15.34.52;	author niklas;	state Exp;
branches;
next	;

1.2.8.1
date	2002.06.11.03.42.28;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@If you use sys/param.h, you don't need sys/types.h
@
text
@/*	$OpenBSD: lpt_puc.c,v 1.8 2015/03/14 03:38:49 jsg Exp $	*/
/*	$NetBSD: lpt_puc.c,v 1.1 1998/06/26 18:52:41 cgd Exp $	*/

/*
 * Copyright (c) 1998 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Machine-independent parallel port ('lpt') driver attachment to "PCI 
 * Universal Communications" controller driver.
 *
 * Author: Christopher G. Demetriou, May 17, 1998.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <machine/bus.h>

#include <dev/pci/pucvar.h>
#include <dev/ic/lptvar.h>

int	lpt_puc_probe(struct device *, void *, void *);
void	lpt_puc_attach(struct device *, struct device *, void *);
int	lpt_puc_detach(struct device *, int);

struct cfattach lpt_puc_ca = {
	sizeof(struct lpt_softc), lpt_puc_probe, lpt_puc_attach, lpt_puc_detach,
};

int
lpt_puc_probe(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct puc_attach_args *aa = aux;

	/*
	 * Locators already matched, just check the type.
	 */
	if (PUC_IS_LPT(aa->type))
		return (1);

	return (0);
}

void
lpt_puc_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct lpt_softc *sc = (void *)self;
	struct puc_attach_args *aa = aux;
	const char *intrstr;

	sc->sc_iot = aa->t;
	sc->sc_ioh = aa->h;

	intrstr = aa->intr_string(aa);
	sc->sc_ih = aa->intr_establish(aa, IPL_TTY, lptintr, sc,
	    sc->sc_dev.dv_xname);
	if (sc->sc_ih == NULL) {
		printf(": couldn't establish interrupt");
		if (intrstr != NULL)
			printf(" at %s", intrstr);
		printf("\n");
		return;
	}
	printf(" %s", intrstr);

	lpt_attach_common(sc);
}

int
lpt_puc_detach(struct device *self, int flags)
{
	return (0);
}
@


1.8
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_puc.c,v 1.7 2011/11/15 22:27:53 deraadt Exp $	*/
a40 1
#include <sys/types.h>
@


1.7
log
@Simplify various parts of the puc(4) attachment code.  Tested lightly
by krw and myself.
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_puc.c,v 1.6 2011/10/25 20:02:20 deraadt Exp $	*/
a48 1
#include <dev/ic/lptreg.h>
@


1.6
log
@Use a new encoding for the entries in the pucdata table, the result is
that the .o file is half the size.  Tested by camield (who just doubled
the table size recently for a 16-port device).  Hopefully no regressions,
since this is a pretty large change of a very large table.
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_puc.c,v 1.5 2009/07/15 17:18:14 deraadt Exp $	*/
d57 1
a57 1
	sizeof(struct lpt_softc), lpt_puc_probe, lpt_puc_attach, lpt_puc_detach
a99 2
	sc->sc_state = 0;

a105 3

	/* cardbus_intr_disestablish(psc->sc_cc, psc->sc_cf, csc->cc_ih); */

@


1.5
log
@print interrupt string like com at puc does
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_puc.c,v 1.4 2006/07/31 11:06:36 mickey Exp $	*/
d70 2
a71 2
	if (aa->type != PUC_PORT_TYPE_LPT)
		return (0);
d73 1
a73 1
	return (1);
@


1.4
log
@puc@@cardbus (only added (commented out) to whom has puc@@pci enabled)
tested on puc@@pci by fkr and meself on the cardbus.
still needs a bit more work but generally works.
deraadt@@ ok and some input from miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_puc.c,v 1.3 2002/03/14 01:27:01 millert Exp $	*/
d98 1
a98 1
	printf(": interrupting at %s", intrstr);
@


1.3
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_puc.c,v 1.2 2000/07/21 17:41:04 mickey Exp $	*/
a47 1
#include <dev/pci/pcivar.h>
d54 1
d57 1
a57 1
	sizeof(struct lpt_softc), lpt_puc_probe, lpt_puc_attach
d88 3
a90 3
	intrstr = pci_intr_string(aa->pc, aa->intrhandle);
	sc->sc_ih = pci_intr_establish(aa->pc, aa->intrhandle, IPL_TTY,
	    lptintr, sc, sc->sc_dev.dv_xname);
d103 9
@


1.2
log
@convert to new timeouts
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_puc.c,v 1.1 1999/11/28 11:52:06 downsj Exp $	*/
d53 2
a54 2
int	lpt_puc_probe __P((struct device *, void *, void *));
void	lpt_puc_attach __P((struct device *, struct device *, void *));
@


1.2.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_puc.c,v 1.2 2000/07/21 17:41:04 mickey Exp $	*/
d53 2
a54 2
int	lpt_puc_probe(struct device *, void *, void *);
void	lpt_puc_attach(struct device *, struct device *, void *);
@


1.1
log
@Add puc lpt driver support, not actually tested...
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d98 1
a98 1
	printf(": interrupting at %s\n", intrstr);
d101 2
a102 1
	bus_space_write_1(sc->sc_iot, sc->sc_ioh, lpt_control, LPC_NINIT);
@


1.1.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: lpt_puc.c,v 1.2 2000/07/21 17:41:04 mickey Exp $	*/
d98 1
a98 1
	printf(": interrupting at %s", intrstr);
d101 1
a101 2

	lpt_attach_common(sc);
@


1.1.2.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d53 2
a54 2
int	lpt_puc_probe(struct device *, void *, void *);
void	lpt_puc_attach(struct device *, struct device *, void *);
@


