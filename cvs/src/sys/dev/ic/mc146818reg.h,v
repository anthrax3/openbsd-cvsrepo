head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.56
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.54
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.48
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.50
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.42
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.46
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.44
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.40
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.38
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.34
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.36
	OPENBSD_5_0:1.7.0.32
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.30
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.28
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.24
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.26
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.22
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.20
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.18
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.16
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.14
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.12
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.4
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.20
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2003.10.21.18.58.49;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.54;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.17.00.58.00;	author pvalchev;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	97.04.17.21.13.14;	author mickey;	state Exp;
branches
	1.4.14.1;
next	1.3;

1.3
date	97.03.12.19.51.33;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	96.10.31.01.01.34;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.31;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.31;	author deraadt;	state Exp;
branches;
next	;

1.4.14.1
date	2001.07.04.10.40.58;	author niklas;	state Exp;
branches;
next	1.4.14.2;

1.4.14.2
date	2001.07.14.10.02.46;	author ho;	state Exp;
branches;
next	1.4.14.3;

1.4.14.3
date	2002.03.28.11.51.01;	author niklas;	state Exp;
branches;
next	1.4.14.4;

1.4.14.4
date	2003.04.19.19.17.49;	author niklas;	state Exp;
branches;
next	1.4.14.5;

1.4.14.5
date	2004.02.19.10.56.19;	author niklas;	state Exp;
branches;
next	;

1.5.4.1
date	2002.06.11.03.42.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@typos from Tom Cosgrove;

Tom: I did not commit a couple of your changes.

i did not include some punctuation fixes (full stops, etc.)
mnemorable -> mnemonic: i decided memorable was probably better
instrunctions -> instruction: i kept the plural
@
text
@/*	$OpenBSD: mc146818reg.h,v 1.6 2002/03/14 01:26:54 millert Exp $	*/
/*	$NetBSD: mc146818reg.h,v 1.1 1995/05/04 19:31:18 cgd Exp $	*/

/*
 * Copyright (c) 1995 Carnegie-Mellon University.
 * All rights reserved.
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*
 * Definitions for the Motorola MC146818A Real Time Clock.
 * They also apply for the (compatible) Dallas Semiconductor DS1287A RTC.
 *
 * Though there are undoubtedly other (better) sources, this material was
 * culled from the DEC "KN121 System Module Programmer's Reference
 * Information."
 *
 * The MC146818A has 16 registers.  The first 10 contain time-of-year
 * and alarm data.  The rest contain various control and status bits.
 *
 * To read or write the registers, one writes the register number to
 * the RTC's control port, then either reads from or writes the new
 * data to the RTC's data port.  Since the locations of these ports
 * and the method used to access them can be machine-dependent, the
 * low-level details of reading and writing the RTC's registers are
 * handled by machine-specific functions.
 *
 * The time-of-year and alarm data can be expressed in either binary
 * or BCD, and they are selected by a bit in register B.
 *
 * The "hour" time-of-year and alarm fields can either be expressed in
 * AM/PM format, or in 24-hour format.  If AM/PM format is chosen, the
 * hour fields can have the values: 1-12 and 81-92 (the latter being
 * PM).  If the 24-hour format is chosen, they can have the values
 * 0-24.  The hour format is selectable by a bit in register B.
 * (XXX IS AM/PM MODE DESCRIPTION CORRECT?)
 *
 * It is assumed the if systems are going to use BCD (rather than
 * binary) mode, or AM/PM hour format, they'll do the appropriate
 * conversions in machine-dependent code.  Also, if the clock is
 * switched between BCD and binary mode, or between AM/PM mode and
 * 24-hour mode, the time-of-day and alarm registers are NOT
 * automatically reset; they must be reprogrammed with correct values.
 */

/*
 * The registers, and the bits within each register.
 */

#define	MC_SEC		0x0	/* Time of year: seconds (0-59) */
#define	MC_ASEC		0x1	/* Alarm: seconds */
#define	MC_MIN		0x2	/* Time of year: minutes (0-59) */
#define	MC_AMIN		0x3	/* Alarm: minutes */
#define	MC_HOUR		0x4	/* Time of year: hour (see above) */
#define	MC_AHOUR	0x5	/* Alarm: hour */
#define	MC_DOW		0x6	/* Time of year: day of week (1-7) */
#define	MC_DOM		0x7	/* Time of year: day of month (1-31) */
#define	MC_MONTH	0x8	/* Time of year: month (1-12) */
#define	MC_YEAR		0x9	/* Time of year: year in century (0-99) */

#define	MC_REGA		0xa	/* Control register A */

#define	 MC_REGA_RSMASK	0x0f	/* Interrupt rate select mask (see below) */
#define	 MC_REGA_DVMASK	0x70	/* Divisor select mask (see below) */
#define	 MC_REGA_UIP	0x80	/* Update in progress; read only. */

#define	MC_REGB		0xb	/* Control register B */

#define	 MC_REGB_DSE	0x01	/* Daylight Saving Enable */
#define	 MC_REGB_24HR	0x02	/* 24-hour mode (AM/PM mode when clear) */
#define	 MC_REGB_BINARY	0x04	/* Binary mode (BCD mode when clear) */
#define	 MC_REGB_SQWE	0x08	/* Square wave enable, ONLY in BQ3285E */
#define	 MC_REGB_UIE	0x10	/* Update End interrupt enable */
#define	 MC_REGB_AIE	0x20	/* Alarm interrupt enable */
#define	 MC_REGB_PIE	0x40	/* Periodic interrupt enable */
#define	 MC_REGB_SET	0x80	/* Allow time to be set; stops updates */

#define	MC_REGC		0xc	/* Control register C */

/*	 MC_REGC_UNUSED	0x0f	UNUSED */
#define	 MC_REGC_UF	0x10	/* Update End interrupt flag */
#define	 MC_REGC_AF	0x20	/* Alarm interrupt flag */
#define	 MC_REGC_PF	0x40	/* Periodic interrupt flag */
#define	 MC_REGC_IRQF	0x80	/* Interrupt request pending flag */

#define	MC_REGD		0xd	/* Control register D */

/*	 MC_REGD_UNUSED	0x7f	UNUSED */
#define	 MC_REGD_VRT	0x80	/* Valid RAM and Time bit */


#define	MC_NREGS	0xe	/* 14 registers; CMOS follows */
#define	MC_NTODREGS	0xa	/* 10 of those regs are for TOD and alarm */

#define	MC_NVRAM_START	0xe	/* start of NVRAM: offset 14 */
#define	MC_NVRAM_SIZE	50	/* 50 bytes of NVRAM */

/*
 * Periodic Interrupt Rate Select constants (Control register A)
 */
#define	MC_RATE_NONE	0x0	/* No periodic interrupt */
#define	MC_RATE_1	0x1     /* 256 Hz if MC_BASE_32_KHz, else 32768 Hz */
#define	MC_RATE_2	0x2     /* 128 Hz if MC_BASE_32_KHz, else 16384 Hz */
#define	MC_RATE_8192_Hz	0x3	/* 122.070 us period */
#define	MC_RATE_4096_Hz	0x4	/* 244.141 us period */
#define	MC_RATE_2048_Hz	0x5	/* 488.281 us period */
#define	MC_RATE_1024_Hz	0x6	/* 976.562 us period */
#define	MC_RATE_512_Hz	0x7	/* 1.953125 ms period */
#define	MC_RATE_256_Hz	0x8	/* 3.90625 ms period */
#define	MC_RATE_128_Hz	0x9	/* 7.8125 ms period */
#define	MC_RATE_64_Hz	0xa	/* 15.625 ms period */
#define	MC_RATE_32_Hz	0xb	/* 31.25 ms period */
#define	MC_RATE_16_Hz	0xc	/* 62.5 ms period */
#define	MC_RATE_8_Hz	0xd	/* 125 ms period */
#define	MC_RATE_4_Hz	0xe	/* 250 ms period */
#define	MC_RATE_2_Hz	0xf	/* 500 ms period */

/*
 * Time base (divisor select) constants (Control register A)
 */
#define	MC_BASE_4_MHz	0x00		/* 4MHz crystal */
#define	MC_BASE_1_MHz	0x10		/* 1MHz crystal */
#define	MC_BASE_32_KHz	0x20		/* 32KHz crystal */
#define	MC_BASE_NONE	0x60		/* actually, both of these reset */
#define	MC_BASE_RESET	0x70

#ifndef _LOCORE
/*
 * RTC register/NVRAM read and write functions -- machine-dependent.
 * Appropriately manipulate RTC registers to get/put data values.
 */
u_int mc146818_read(void *sc, u_int reg);
void mc146818_write(void *sc, u_int reg, u_int datum);

/*
 * A collection of TOD/Alarm registers.
 */
typedef u_int mc_todregs[MC_NTODREGS];

/*
 * Get all of the TOD/Alarm registers
 * Must be called at splhigh(), and with the RTC properly set up.
 */
#define MC146818_GETTOD(sc, regs)					\
	do {								\
		int i;							\
									\
		/* update in progress; spin loop */			\
		while (mc146818_read(sc, MC_REGA) & MC_REGA_UIP)	\
			;						\
									\
		/* read all of the tod/alarm regs */			\
		for (i = 0; i < MC_NTODREGS; i++)			\
			(*regs)[i] = mc146818_read(sc, i);		\
	} while (0);

/*
 * Set all of the TOD/Alarm registers
 * Must be called at splhigh(), and with the RTC properly set up.
 */
#define MC146818_PUTTOD(sc, regs)					\
	do {								\
		int i;							\
									\
		/* stop updates while setting */			\
		mc146818_write(sc, MC_REGB,				\
		    mc146818_read(sc, MC_REGB) | MC_REGB_SET);		\
									\
		/* write all of the tod/alarm regs */			\
		for (i = 0; i < MC_NTODREGS; i++)			\
			mc146818_write(sc, i, (*regs)[i]);		\
									\
		/* reenable updates */					\
		mc146818_write(sc, MC_REGB,				\
		    mc146818_read(sc, MC_REGB) & ~MC_REGB_SET);		\
	} while (0);
#endif

@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: mc146818reg.h,v 1.5 2001/05/17 00:58:00 pvalchev Exp $	*/
d31 1
a31 1
 * They also apply for the (compatible) Dallas Semicontuctor DS1287A RTC.
@


1.5
log
@It's Daylight Saving Time, not Savings.  Fix comments.
Discussed with pjanzen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mc146818reg.h,v 1.4 1997/04/17 21:13:14 mickey Exp $	*/
d151 2
a152 2
u_int mc146818_read __P((void *sc, u_int reg));
void mc146818_write __P((void *sc, u_int reg, u_int datum));
@


1.5.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: mc146818reg.h,v 1.5 2001/05/17 00:58:00 pvalchev Exp $	*/
d151 2
a152 2
u_int mc146818_read(void *sc, u_int reg);
void mc146818_write(void *sc, u_int reg, u_int datum);
@


1.4
log
@hide C decls when _LOCORE defined
@
text
@d1 1
a1 1
/*	$OpenBSD: mc146818reg.h,v 1.3 1997/03/12 19:51:33 pefo Exp $	*/
d88 1
a88 1
#define	 MC_REGB_DSE	0x01	/* Daylight Savings Enable */
@


1.4.14.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: mc146818reg.h,v 1.4 1997/04/17 21:13:14 mickey Exp $	*/
d88 1
a88 1
#define	 MC_REGB_DSE	0x01	/* Daylight Saving Enable */
@


1.4.14.2
log
@Initial import of some SMP code from NetBSD.
Not really working here yet, but there is some work in progress.
@
text
@d1 1
a1 1
/*	$OpenBSD: mc146818reg.h,v 1.4.14.1 2001/07/04 10:40:58 niklas Exp $	*/
a68 3
#ifndef _IC_MC146818REG_H_
#define _IC_MC146818REG_H_

a197 1
#endif /* _IC_MC146818REG_H_ */
@


1.4.14.3
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d154 2
a155 2
u_int mc146818_read(void *sc, u_int reg);
void mc146818_write(void *sc, u_int reg, u_int datum);
@


1.4.14.4
log
@A sweep to fix remaining files not in sync with the SMP_SYNC_B point.
@
text
@d1 1
a1 1
/*	$OpenBSD: mc146818reg.h,v 1.6 2002/03/14 01:26:54 millert Exp $	*/
d69 3
d201 1
@


1.4.14.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d31 1
a31 1
 * They also apply for the (compatible) Dallas Semiconductor DS1287A RTC.
@


1.3
log
@Add a define for another compatible chip.
@
text
@d1 1
a1 1
/*	$OpenBSD: mc146818reg.h,v 1.2 1996/10/31 01:01:34 niklas Exp $	*/
d146 1
a146 1

d196 2
@


1.2
log
@$OpenBSD RCSIDs
@
text
@d1 1
a1 1
/*	$OpenBSD: mc146818reg.h,v 1.1 1995/05/04 19:31:18 cgd Exp $	*/
d91 1
a91 1
/*	 MC_REGB_UNUSED	0x08	   UNUSED */
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
