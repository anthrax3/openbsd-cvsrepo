head	1.52;
access;
symbols
	OPENBSD_6_1_BASE:1.52
	OPENBSD_6_0:1.51.0.20
	OPENBSD_6_0_BASE:1.51
	OPENBSD_5_9:1.51.0.14
	OPENBSD_5_9_BASE:1.51
	OPENBSD_5_8:1.51.0.16
	OPENBSD_5_8_BASE:1.51
	OPENBSD_5_7:1.51.0.8
	OPENBSD_5_7_BASE:1.51
	OPENBSD_5_6:1.51.0.12
	OPENBSD_5_6_BASE:1.51
	OPENBSD_5_5:1.51.0.10
	OPENBSD_5_5_BASE:1.51
	OPENBSD_5_4:1.51.0.6
	OPENBSD_5_4_BASE:1.51
	OPENBSD_5_3:1.51.0.4
	OPENBSD_5_3_BASE:1.51
	OPENBSD_5_2:1.51.0.2
	OPENBSD_5_2_BASE:1.51
	OPENBSD_5_1_BASE:1.50
	OPENBSD_5_1:1.50.0.10
	OPENBSD_5_0:1.50.0.6
	OPENBSD_5_0_BASE:1.50
	OPENBSD_4_9:1.50.0.4
	OPENBSD_4_9_BASE:1.50
	OPENBSD_4_8:1.50.0.2
	OPENBSD_4_8_BASE:1.50
	OPENBSD_4_7:1.47.0.2
	OPENBSD_4_7_BASE:1.47
	OPENBSD_4_6:1.45.0.8
	OPENBSD_4_6_BASE:1.45
	OPENBSD_4_5:1.45.0.4
	OPENBSD_4_5_BASE:1.45
	OPENBSD_4_4:1.45.0.2
	OPENBSD_4_4_BASE:1.45
	OPENBSD_4_3:1.43.0.4
	OPENBSD_4_3_BASE:1.43
	OPENBSD_4_2:1.43.0.2
	OPENBSD_4_2_BASE:1.43
	OPENBSD_4_1:1.40.0.2
	OPENBSD_4_1_BASE:1.40
	OPENBSD_4_0:1.39.0.2
	OPENBSD_4_0_BASE:1.39
	OPENBSD_3_9:1.37.0.2
	OPENBSD_3_9_BASE:1.37
	OPENBSD_3_8:1.36.0.2
	OPENBSD_3_8_BASE:1.36
	OPENBSD_3_7:1.35.0.2
	OPENBSD_3_7_BASE:1.35
	OPENBSD_3_6:1.34.0.4
	OPENBSD_3_6_BASE:1.34
	SMP_SYNC_A:1.34
	SMP_SYNC_B:1.34
	OPENBSD_3_5:1.34.0.2
	OPENBSD_3_5_BASE:1.34
	OPENBSD_3_4:1.33.0.2
	OPENBSD_3_4_BASE:1.33
	UBC_SYNC_A:1.31
	OPENBSD_3_3:1.31.0.6
	OPENBSD_3_3_BASE:1.31
	OPENBSD_3_2:1.31.0.4
	OPENBSD_3_2_BASE:1.31
	OPENBSD_3_1:1.31.0.2
	OPENBSD_3_1_BASE:1.31
	UBC_SYNC_B:1.31
	UBC:1.30.0.4
	UBC_BASE:1.30
	OPENBSD_3_0:1.30.0.2
	OPENBSD_3_0_BASE:1.30
	OPENBSD_2_9_BASE:1.24
	OPENBSD_2_9:1.24.0.2
	OPENBSD_2_8:1.16.0.6
	OPENBSD_2_8_BASE:1.16
	OPENBSD_2_7:1.16.0.4
	OPENBSD_2_7_BASE:1.16
	SMP:1.16.0.2
	SMP_BASE:1.16
	kame_19991208:1.14
	OPENBSD_2_6:1.14.0.2
	OPENBSD_2_6_BASE:1.14
	OPENBSD_2_5:1.11.0.4
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.11.0.2
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8;
locks; strict;
comment	@ * @;


1.52
date	2016.09.03.14.43.37;	author jsg;	state Exp;
branches;
next	1.51;
commitid	kmy1dtXauhpMnPAS;

1.51
date	2012.05.12.18.02.33;	author kettenis;	state Exp;
branches;
next	1.50;

1.50
date	2010.08.06.21.04.14;	author kettenis;	state Exp;
branches;
next	1.49;

1.49
date	2010.08.01.23.55.38;	author yasuoka;	state Exp;
branches;
next	1.48;

1.48
date	2010.06.26.22.33.30;	author yasuoka;	state Exp;
branches;
next	1.47;

1.47
date	2009.11.04.19.14.10;	author kettenis;	state Exp;
branches;
next	1.46;

1.46
date	2009.10.13.19.33.16;	author pirofti;	state Exp;
branches;
next	1.45;

1.45
date	2008.06.08.13.55.06;	author kettenis;	state Exp;
branches;
next	1.44;

1.44
date	2008.04.30.13.59.32;	author dlg;	state Exp;
branches;
next	1.43;

1.43
date	2007.05.08.21.28.11;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2007.05.08.21.18.18;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2007.05.08.20.33.07;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2006.12.28.20.50.26;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2006.07.31.11.06.30;	author mickey;	state Exp;
branches;
next	1.38;

1.38
date	2006.03.27.06.14.52;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2005.10.24.14.22.34;	author fgsch;	state Exp;
branches;
next	1.36;

1.36
date	2005.05.27.18.42.15;	author uwe;	state Exp;
branches;
next	1.35;

1.35
date	2004.10.20.12.40.14;	author pefo;	state Exp;
branches;
next	1.34;

1.34
date	2003.09.23.16.51.12;	author millert;	state Exp;
branches;
next	1.33;

1.33
date	2003.07.15.03.15.58;	author jason;	state Exp;
branches;
next	1.32;

1.32
date	2003.06.03.21.09.02;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2002.03.14.01.26.54;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2001.10.05.21.01.11;	author mickey;	state Exp;
branches
	1.30.4.1;
next	1.29;

1.29
date	2001.09.30.15.20.59;	author art;	state Exp;
branches;
next	1.28;

1.28
date	2001.09.30.01.19.58;	author art;	state Exp;
branches;
next	1.27;

1.27
date	2001.09.30.00.57.07;	author art;	state Exp;
branches;
next	1.26;

1.26
date	2001.09.29.03.07.57;	author art;	state Exp;
branches;
next	1.25;

1.25
date	2001.09.27.15.39.33;	author art;	state Exp;
branches;
next	1.24;

1.24
date	2001.03.15.21.09.17;	author art;	state Exp;
branches;
next	1.23;

1.23
date	2001.03.15.19.07.01;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2001.03.15.19.03.33;	author mjacob;	state Exp;
branches;
next	1.21;

1.21
date	2001.03.15.18.47.53;	author art;	state Exp;
branches;
next	1.20;

1.20
date	2001.03.15.17.52.20;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2001.03.13.02.53.52;	author mickey;	state Exp;
branches;
next	1.18;

1.18
date	2001.01.24.09.38.04;	author hugh;	state Exp;
branches;
next	1.17;

1.17
date	2000.11.08.15.42.48;	author art;	state Exp;
branches;
next	1.16;

1.16
date	2000.02.04.06.11.58;	author angelos;	state Exp;
branches
	1.16.2.1;
next	1.15;

1.15
date	2000.02.01.01.32.39;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	99.08.08.01.34.15;	author niklas;	state Exp;
branches;
next	1.13;

1.13
date	99.07.26.15.09.00;	author niklas;	state Exp;
branches;
next	1.12;

1.12
date	99.07.26.12.31.43;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	98.05.14.05.59.43;	author downsj;	state Exp;
branches;
next	1.10;

1.10
date	98.02.23.11.41.26;	author downsj;	state Exp;
branches;
next	1.9;

1.9
date	97.07.07.16.37.12;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	97.03.06.07.06.45;	author tholo;	state Exp;
branches;
next	1.7;

1.7
date	97.01.29.17.56.35;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.12.10.22.28.31;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.11.29.22.54.52;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.10.30.15.01.50;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.05.10.12.37.14;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.21.22.23.20;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.04.19.16.08.34;	author niklas;	state Exp;
branches;
next	;

1.16.2.1
date	2001.05.14.22.23.39;	author niklas;	state Exp;
branches;
next	1.16.2.2;

1.16.2.2
date	2001.10.31.03.22.41;	author nate;	state Exp;
branches;
next	1.16.2.3;

1.16.2.3
date	2002.03.28.11.51.00;	author niklas;	state Exp;
branches;
next	1.16.2.4;

1.16.2.4
date	2003.06.07.11.02.28;	author ho;	state Exp;
branches;
next	1.16.2.5;

1.16.2.5
date	2004.02.19.10.56.17;	author niklas;	state Exp;
branches;
next	;

1.30.4.1
date	2002.06.11.03.42.17;	author art;	state Exp;
branches;
next	;


desc
@@


1.52
log
@de-zaurus com.c
"looks correct" deraadt@@ guenther@@ on an earlier rev
@
text
@/*	$OpenBSD: comvar.h,v 1.51 2012/05/12 18:02:33 kettenis Exp $	*/
/*	$NetBSD: comvar.h,v 1.5 1996/05/05 19:50:47 christos Exp $	*/

/*
 * Copyright (c) 1997 - 1998, Jason Downs.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
/*
 * Copyright (c) 1996 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/timeout.h>

struct commulti_attach_args {
	int		ca_slave;		/* slave number */

	bus_space_tag_t ca_iot;
	bus_space_handle_t ca_ioh;
	int		ca_iobase;
	int		ca_noien;
};

#define	COM_IBUFSIZE	(32 * 512)
#define	COM_IHIGHWATER	((3 * COM_IBUFSIZE) / 4)

struct com_softc {
	struct device sc_dev;
	void *sc_ih;
	bus_space_tag_t sc_iot;
	struct tty *sc_tty;
	struct timeout sc_dtr_tmo;
	struct timeout sc_diag_tmo;
	void *sc_si;

	int sc_overflows;
	int sc_floods;
	int sc_errors;

	int sc_halt;

	bus_addr_t sc_iobase;
	int sc_frequency;

	bus_space_handle_t sc_ioh;

	u_char sc_uarttype;
#define COM_UART_UNKNOWN	0x00		/* unknown */
#define COM_UART_8250		0x01		/* no fifo */
#define COM_UART_16450		0x02		/* no fifo */
#define COM_UART_16550		0x03		/* no working fifo */
#define COM_UART_16550A		0x04		/* 16 byte fifo */
#define COM_UART_ST16650	0x05		/* no working fifo */
#define COM_UART_ST16650V2	0x06		/* 32 byte fifo */
#define COM_UART_TI16750	0x07		/* 64 byte fifo */
#define	COM_UART_ST16C654	0x08		/* 64 bytes fifo */
#define	COM_UART_XR16850	0x10		/* 128 byte fifo */
#define	COM_UART_OX16C950	0x11		/* 128 byte fifo */

	u_char sc_hwflags;
#define	COM_HW_NOIEN	0x01
#define	COM_HW_FIFO	0x02
#define	COM_HW_SIR	0x20
#define	COM_HW_CONSOLE	0x40
#define	COM_HW_KGDB	0x80
	u_char sc_swflags;
#define	COM_SW_SOFTCAR	0x01
#define	COM_SW_CLOCAL	0x02
#define	COM_SW_CRTSCTS	0x04
#define	COM_SW_MDMBUF	0x08
#define	COM_SW_PPS	0x10
#define	COM_SW_DEAD	0x20
	int	sc_fifolen;
	u_char sc_msr, sc_mcr, sc_lcr, sc_ier;
	u_char sc_dtr;

	u_char	sc_cua;

	u_char	sc_initialize;		/* force initialization */

	u_char *sc_ibuf, *sc_ibufp, *sc_ibufhigh, *sc_ibufend;
	u_char sc_ibufs[2][COM_IBUFSIZE];

	/* power management hooks */
	int (*enable)(struct com_softc *);
	void (*disable)(struct com_softc *);
	int enabled;
};

int	comprobe1(bus_space_tag_t, bus_space_handle_t);
int	comstop(struct tty *, int);
int	comintr(void *);
int	com_detach(struct device *, int);
int	com_activate(struct device *, int);
void	com_resume(struct com_softc *);

void	comdiag(void *);
int	comspeed(long, long);
u_char	com_cflag2lcr(tcflag_t); /* XXX undefined */
int	comparam(struct tty *, struct termios *);
void	comstart(struct tty *);
void	comsoft(void *);

struct consdev;
int	comcnattach(bus_space_tag_t, bus_addr_t, int, int, tcflag_t);
void	comcnprobe(struct consdev *);
void	comcninit(struct consdev *);
int	comcngetc(dev_t);
void	comcnputc(dev_t, int);
void	comcnpollc(dev_t, int);
int	com_common_getc(bus_space_tag_t, bus_space_handle_t);
void	com_common_putc(bus_space_tag_t, bus_space_handle_t, int);
void	com_raisedtr(void *);

#ifdef KGDB
extern bus_addr_t com_kgdb_addr;
extern bus_space_tag_t com_kgdb_iot;
extern bus_space_handle_t com_kgdb_ioh;

int	com_kgdb_attach(bus_space_tag_t, bus_addr_t, int, int, tcflag_t);
int	kgdbintr(void *);
#endif

void com_attach_subr(struct com_softc *);

extern int comdefaultrate;
extern int comconsrate;
extern int comconsfreq;
extern bus_addr_t comconsaddr;
extern bus_addr_t comsiraddr;
extern int comconsattached;
extern bus_space_tag_t comconsiot;
extern bus_space_handle_t comconsioh;
extern int comconsunit;
extern tcflag_t comconscflag;
@


1.51
log
@Remove unused variable.

ok mpi@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.50 2010/08/06 21:04:14 kettenis Exp $	*/
d103 1
a103 2
#define COM_UART_PXA2X0		0x11		/* 16 byte fifo */
#define	COM_UART_OX16C950	0x12		/* 128 byte fifo */
@


1.50
log
@Initial stab at making com@@puc suspend and resume properly.  Works fine
for using cu(1) between two OpenBSD machines.  Probably doesn't work for
serial consoles but we don't support those on puc(4) anyway.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.49 2010/08/01 23:55:38 yasuoka Exp $	*/
a176 1
extern int comconsinit;
@


1.49
log
@Change COM_IBUFSIZE 8K to 16K because 8K is not enough for CDMA1X card
by KDDI.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.48 2010/06/26 22:33:30 yasuoka Exp $	*/
d141 1
@


1.48
log
@Grow COM_IBUFSIZE from 1024 to 8192 to be enough size for recent
devices.  This will fix the problem using KDDI W04K that has 3.1 Mbps
in downlink.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.47 2009/11/04 19:14:10 kettenis Exp $	*/
d69 1
a69 1
#define	COM_IBUFSIZE	(16 * 512)
@


1.47
log
@Get rid of __HAVE_GENERIC_SOFT_INTERRUPTS now that all our platforms support it.

ok jsing@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.46 2009/10/13 19:33:16 pirofti Exp $	*/
d69 1
a69 1
#define	COM_IBUFSIZE	(2 * 512)
@


1.46
log
@Get rid of devact enum, substitute it with an int and coresponding defines.

This is needed for the addition of further suspend/resume actions.

Okay deraadt@@, marco@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.45 2008/06/08 13:55:06 kettenis Exp $	*/
a78 1
#ifdef __HAVE_GENERIC_SOFT_INTERRUPTS
a79 3
#else
	struct timeout sc_comsoft_tmo;
#endif
@


1.45
log
@Make serial console on non-primary ports work to on i386.

tested by jbg@@, "it is right" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.44 2008/04/30 13:59:32 dlg Exp $	*/
d144 1
a144 1
int	com_activate(struct device *, enum devact);
@


1.44
log
@fix serial console handling on amd64. currently only glass console ever
works, even if the boot loader is configured to use serial console.

after the changes jsing and i made, the initial probe of the serial port
was failing since the default base addres for the port is invalid. cos of
that the kernel would only ever consider the glass console for use. this
fixes it by reprobing the serial port if we get any config for it from the
boot loader.

advice on aesthetics from miod@@
advice and ok from kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.43 2007/05/08 21:28:11 deraadt Exp $	*/
d184 1
@


1.43
log
@backout while the amd64 puc situation is rethought
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.40 2006/12/28 20:50:26 miod Exp $	*/
d176 1
@


1.42
log
@move com_activate() to where it belongs
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.41 2007/05/08 20:33:07 deraadt Exp $	*/
d143 2
@


1.41
log
@put more foo_detach() routines where they are used
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.40 2006/12/28 20:50:26 miod Exp $	*/
a142 1
int	com_activate(struct device *, enum devact);
@


1.40
log
@Support for ST16C654 chips, however these aren't detected as such, so the
attachment code has to know better for now;
from Alexei G. Malinin (alexei.malinin@@inetcomm.ru)
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.39 2006/07/31 11:06:30 mickey Exp $	*/
a142 1
int	com_detach(struct device *, int);
@


1.39
log
@puc@@cardbus (only added (commented out) to whom has puc@@pci enabled)
tested on puc@@pci by fkr and meself on the cardbus.
still needs a bit more work but generally works.
deraadt@@ ok and some input from miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.38 2006/03/27 06:14:52 deraadt Exp $	*/
d105 1
@


1.38
log
@in detach, mark device with COM_SW_DEAD, so that close() will not go
tapping additional registes.  allows it to work on macppc, where doing
such a tap after unplug is very bad.  drahn helped fkr@@bytemine.de
ok miod and drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.37 2005/10/24 14:22:34 fgsch Exp $	*/
d107 1
@


1.37
log
@fix compilation for KGDB; looked by miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.36 2005/05/27 18:42:15 uwe Exp $	*/
d120 1
@


1.36
log
@- Merge changes from pxacom back into the common com driver.

Changes to the common com driver (partly from NetBSD):
- Multiply before divide in comspeed() to avoid overflow (from NetBSD).
- Don't call getc() and send -1 if the output queue is empty.
- Take UART clock frequency as a parameter instead of using COM_FREQ.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.35 2004/10/20 12:40:14 pefo Exp $	*/
d162 5
a166 1
int	com_kgdb_attach(bus_space_tag_t, int, int, int, tcflag_t);
@


1.35
log
@Use bus_addr_t instead of int for port address/offset, ok mickey
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.34 2003/09/23 16:51:12 millert Exp $	*/
d106 1
d111 1
a137 1
void	cominit(bus_space_tag_t, bus_space_handle_t, int);
d145 1
a145 1
u_char	com_cflag2lcr(tcflag_t);
d169 1
d171 1
@


1.34
log
@Replace select backends with poll backends.  selscan() and pollscan()
now call the poll backend.  With this change we implement greater
poll(2) functionality instead of emulating it via the select backend.
Adapted from NetBSD and including some changes from FreeBSD.
Tested by many, deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.33 2003/07/15 03:15:58 jason Exp $	*/
d91 1
a91 1
	int sc_iobase;
d150 1
a150 1
int	comcnattach(bus_space_tag_t, int, int, int, tcflag_t);
d168 1
a168 1
extern int comconsaddr;
@


1.33
log
@move prototype for com_raisedtr() to comvar.h (just like pccom).
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.32 2003/06/03 21:09:02 deraadt Exp $	*/
d82 1
a82 1
	struct timeout sc_poll_tmo;
d147 1
a147 1
void	compoll(void *);
@


1.32
log
@terms 3 & 4 cleanup based on "terms" file
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.31 2002/03/14 01:26:54 millert Exp $	*/
d158 1
@


1.31
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.30 2001/10/05 21:01:11 mickey Exp $	*/
a14 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Jason Downs for the
 *      OpenBSD system.
 * 4. Neither the name(s) of the author(s) nor the name OpenBSD
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
@


1.30
log
@restore some of that dead code needed for dev/cons functionality
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.29 2001/09/30 15:20:59 art Exp $	*/
d137 2
a138 2
	int (*enable) __P((struct com_softc *));
	void (*disable) __P((struct com_softc *));
d142 13
a154 13
int	comprobe1 __P((bus_space_tag_t, bus_space_handle_t));
void	cominit __P((bus_space_tag_t, bus_space_handle_t, int));
int	comstop __P((struct tty *, int));
int	comintr __P((void *));
int	com_detach __P((struct device *, int));
int	com_activate __P((struct device *, enum devact));

void	comdiag		__P((void *));
int	comspeed	__P((long, long));
u_char	com_cflag2lcr	__P((tcflag_t));
int	comparam	__P((struct tty *, struct termios *));
void	comstart	__P((struct tty *));
void	compoll		__P((void *));
d157 8
a164 8
int	comcnattach	__P((bus_space_tag_t, int, int, int, tcflag_t));
void	comcnprobe	__P((struct consdev *));
void	comcninit	__P((struct consdev *));
int	comcngetc	__P((dev_t));
void	comcnputc	__P((dev_t, int));
void	comcnpollc	__P((dev_t, int));
int	com_common_getc	__P((bus_space_tag_t, bus_space_handle_t));
void	com_common_putc	__P((bus_space_tag_t, bus_space_handle_t, int));
d167 2
a168 2
int	com_kgdb_attach	__P((bus_space_tag_t, int, int, int, tcflag_t));
int	kgdbintr __P((void *));
d171 1
a171 1
void com_attach_subr __P((struct com_softc *));
@


1.30.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.30 2001/10/05 21:01:11 mickey Exp $	*/
d137 2
a138 2
	int (*enable)(struct com_softc *);
	void (*disable)(struct com_softc *);
d142 13
a154 13
int	comprobe1(bus_space_tag_t, bus_space_handle_t);
void	cominit(bus_space_tag_t, bus_space_handle_t, int);
int	comstop(struct tty *, int);
int	comintr(void *);
int	com_detach(struct device *, int);
int	com_activate(struct device *, enum devact);

void	comdiag(void *);
int	comspeed(long, long);
u_char	com_cflag2lcr(tcflag_t);
int	comparam(struct tty *, struct termios *);
void	comstart(struct tty *);
void	compoll(void *);
d157 8
a164 8
int	comcnattach(bus_space_tag_t, int, int, int, tcflag_t);
void	comcnprobe(struct consdev *);
void	comcninit(struct consdev *);
int	comcngetc(dev_t);
void	comcnputc(dev_t, int);
void	comcnpollc(dev_t, int);
int	com_common_getc(bus_space_tag_t, bus_space_handle_t);
void	com_common_putc(bus_space_tag_t, bus_space_handle_t, int);
d167 2
a168 2
int	com_kgdb_attach(bus_space_tag_t, int, int, int, tcflag_t);
int	kgdbintr(void *);
d171 1
a171 1
void com_attach_subr(struct com_softc *);
@


1.29
log
@Enable break interrupt earlier.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.28 2001/09/30 01:19:58 art Exp $	*/
d158 1
a170 1
int comcnattach __P((bus_space_tag_t, int, int, int, tcflag_t));
@


1.28
log
@Remove dead code.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.27 2001/09/30 00:57:07 art Exp $	*/
a163 4

#if defined(DDB) || defined(KGDB)
void	com_enable_debugport	__P((struct com_softc *));
#endif
@


1.27
log
@Remove the COM_HAYESP code. It doesn't appear to have been ever used and
it's very intrusive and makes the code less readable.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.26 2001/09/29 03:07:57 art Exp $	*/
a156 1
void	comcnprobe	__P((struct consdev *));
@


1.26
log
@- compoll is now scheduled once for every sc instead of just one timeout for
  all ports and looping over them.
- support for generic soft interrupts.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.25 2001/09/27 15:39:33 art Exp $	*/
a99 3
#ifdef COM_HAYESP
	int sc_hayespbase;
#endif
a101 1
	bus_space_handle_t sc_hayespioh;
a116 1
#define	COM_HW_HAYESP	0x04
a148 3
#ifdef COM_HAYESP
int comprobeHAYESP __P((bus_space_handle_t hayespioh, struct com_softc *sc));
#endif
@


1.25
log
@Split out comattach that does isa and isapnp attachment and initialization,
into comattach that does the isa stuff and com_attach_subr that does the
init.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.24 2001/03/15 21:09:17 art Exp $	*/
d86 5
@


1.24
log
@Put back new timeouts. This time with correct timeout for compoll.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.23 2001/03/15 19:07:01 deraadt Exp $	*/
d179 1
@


1.23
log
@bzzzt
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.22 2001/03/15 19:03:33 mjacob Exp $	*/
d65 2
d84 2
@


1.22
log
@Add in missing prototype for comspeedcomspeed.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.21 2001/03/15 18:47:53 art Exp $	*/
a137 1
int	comspeedcomspeed __P((long, long));
@


1.21
log
@back out new timeouts until I find out why they break alpha.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.20 2001/03/15 17:52:20 deraadt Exp $	*/
d138 1
@


1.20
log
@support puc devices with higher speeds (not tested yet)
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.19 2001/03/13 02:53:52 mickey Exp $	*/
a64 2
#include <sys/timeout.h>

a81 3
	struct timeout sc_dtr_tmo;
	struct timeout sc_diag_tmo;
	struct timeout sc_poll_tmo;
@


1.19
log
@new timeouts
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.18 2001/01/24 09:38:04 hugh Exp $	*/
d154 1
a154 1
int	comspeed	__P((long));
@


1.18
log
@KGDB for i386 from NetBSD via niklas, with tweaks and accommodations.
Tested by various, vetted by mickey & theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.17 2000/11/08 15:42:48 art Exp $	*/
d65 2
d84 3
@


1.17
log
@Add comcnattach that does the basic steps needed to attach
a com as a serial console. (idea from NetBSD).

If cn_tab->cn_dev == NODEV, try to find comopen in cdevsw and set cn_dev
to the right device.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.16 2000/02/04 06:11:58 angelos Exp $	*/
d90 1
d114 1
d150 1
d157 1
d162 11
@


1.16
log
@Externalize comstop()
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.15 2000/02/01 01:32:39 mickey Exp $	*/
d158 2
@


1.16.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.24 2001/03/15 21:09:17 art Exp $	*/
a64 2
#include <sys/timeout.h>

a81 2
	struct timeout sc_dtr_tmo;
	struct timeout sc_diag_tmo;
a89 1
	int sc_frequency;
a112 1
#define	COM_HW_KGDB	0x80
d147 1
a147 2
int	comspeed	__P((long, long));
u_char	com_cflag2lcr	__P((tcflag_t));
a153 1
int	comcnattach	__P((bus_space_tag_t, int, int, int, tcflag_t));
a157 13
int	com_common_getc	__P((bus_space_tag_t, bus_space_handle_t));
void	com_common_putc	__P((bus_space_tag_t, bus_space_handle_t, int));

#if defined(DDB) || defined(KGDB)
void	com_enable_debugport	__P((struct com_softc *));
#endif

#ifdef KGDB
int	com_kgdb_attach	__P((bus_space_tag_t, int, int, int, tcflag_t));
int	kgdbintr __P((void *));
#endif

int comcnattach __P((bus_space_tag_t, int, int, int, tcflag_t));
@


1.16.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.16.2.1 2001/05/14 22:23:39 niklas Exp $	*/
a85 5
#ifdef __HAVE_GENERIC_SOFT_INTERRUPTS
	void *sc_si;
#else
	struct timeout sc_poll_tmo;
#endif
d95 3
d100 1
d116 1
d149 3
d160 1
a161 1
void	comcnprobe	__P((struct consdev *));
d169 4
d178 1
a178 1
void com_attach_subr __P((struct com_softc *));
@


1.16.2.3
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d137 2
a138 2
	int (*enable)(struct com_softc *);
	void (*disable)(struct com_softc *);
d142 13
a154 13
int	comprobe1(bus_space_tag_t, bus_space_handle_t);
void	cominit(bus_space_tag_t, bus_space_handle_t, int);
int	comstop(struct tty *, int);
int	comintr(void *);
int	com_detach(struct device *, int);
int	com_activate(struct device *, enum devact);

void	comdiag(void *);
int	comspeed(long, long);
u_char	com_cflag2lcr(tcflag_t);
int	comparam(struct tty *, struct termios *);
void	comstart(struct tty *);
void	compoll(void *);
d157 8
a164 8
int	comcnattach(bus_space_tag_t, int, int, int, tcflag_t);
void	comcnprobe(struct consdev *);
void	comcninit(struct consdev *);
int	comcngetc(dev_t);
void	comcnputc(dev_t, int);
void	comcnpollc(dev_t, int);
int	com_common_getc(bus_space_tag_t, bus_space_handle_t);
void	com_common_putc(bus_space_tag_t, bus_space_handle_t, int);
d167 2
a168 2
int	com_kgdb_attach(bus_space_tag_t, int, int, int, tcflag_t);
int	kgdbintr(void *);
d171 1
a171 1
void com_attach_subr(struct com_softc *);
@


1.16.2.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.16.2.3 2002/03/28 11:51:00 niklas Exp $	*/
d15 7
@


1.16.2.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d82 1
a82 1
	struct timeout sc_comsoft_tmo;
d147 1
a147 1
void	comsoft(void *);
a157 1
void	com_raisedtr(void *);
@


1.15
log
@missed in last com.c commit, sc_ic usage was replaced w/ ia_ic where needed; niklas@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.14 1999/08/08 01:34:15 niklas Exp $	*/
d138 1
@


1.14
log
@Detach support for com; NetBSD and me
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.13 1999/07/26 15:09:00 niklas Exp $	*/
a95 1
	isa_chipset_tag_t sc_ic;
@


1.13
log
@fix my last commit where I committed more than intended
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.11 1998/05/14 05:59:43 downsj Exp $	*/
d130 5
d140 2
@


1.12
log
@Remove obsolete detach code that has been dead for very long
@
text
@a89 1
	int sc_frequency;
a113 1
#define	COM_HW_KGDB	0x80
d133 1
a133 2
int	cominit __P((bus_space_tag_t, int, int, int, tcflag_t,
	    bus_space_handle_t *));
d140 1
a140 2
int	comspeed	__P((long, long));
u_char	com_cflag2lcr	__P((tcflag_t));
a143 1
int	com_is_console	__P((bus_space_tag_t, int, bus_space_handle_t *));
a146 1
int	comcnattach	__P((bus_space_tag_t, int, int, int, tcflag_t));
a150 10
int	com_common_getc	__P((bus_space_tag_t, bus_space_handle_t));
void	com_common_putc	__P((bus_space_tag_t, bus_space_handle_t, int));

#if defined(DDB) || defined(KGDB)
void com_enable_debugport __P((struct com_softc *));
#endif

#ifdef KGDB
int	com_kgdb_attach	__P((bus_space_tag_t, int, int, int, tcflag_t));
#endif
@


1.11
log
@* Better support for XR16C850.
* Copyright.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.10 1998/02/23 11:41:26 downsj Exp $	*/
d90 1
a113 3
#define	COM_HW_ABSENT_PENDING	0x08	/* reattached, awaiting close/reopen */
#define	COM_HW_ABSENT	0x10		/* configure actually failed, or removed */
#define	COM_HW_REATTACH	0x20		/* reattaching */
d115 1
d135 2
a136 1
void	cominit __P((bus_space_tag_t, bus_space_handle_t, int));
a137 1
void	com_absent_notify __P((struct com_softc *sc));
d143 2
a144 1
int	comspeed	__P((long));
d148 1
d152 1
d157 10
@


1.10
log
@New probe routine and support for ST16650.

Compiles, but completely untested.
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.9 1997/07/07 16:37:12 niklas Exp $	*/
d5 31
d107 1
@


1.9
log
@Removed an unused arg
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.8 1997/03/06 07:06:45 tholo Exp $	*/
d67 10
d91 1
@


1.8
log
@Add control flag to call hardpps() on carrier change
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.7 1997/01/29 17:56:35 niklas Exp $	*/
d92 1
a92 1
int	comprobe1 __P((bus_space_tag_t, bus_space_handle_t, int));
@


1.7
log
@Export comdefaultrate
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.6 1996/12/10 22:28:31 deraadt Exp $	*/
d80 1
@


1.6
log
@the real changes by niklas... I did not merge correctly
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.1 1996/11/30 13:39:31 niklas Exp $	*/
d112 1
@


1.5
log
@Missing pieces of new bus.h that CVS lost behind my back
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.4 1996/10/30 15:01:50 niklas Exp $	*/
d43 68
a110 3
int comprobe1 __P((bus_space_tag_t, bus_space_handle_t, int));
void cominit __P((bus_space_tag_t, bus_space_handle_t, int));
int comintr __P((void *));
d113 1
@


1.4
log
@cominit is used from the outside (the alpha port)
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.3 1996/05/10 12:37:14 deraadt Exp $	*/
d37 2
a38 2
	bus_chipset_tag_t ca_bc;
	bus_io_handle_t ca_ioh;
d43 2
a44 2
int comprobe1 __P((bus_chipset_tag_t, bus_io_handle_t, int));
void cominit __P((bus_chipset_tag_t, bus_io_handle_t, int));
d49 2
a50 2
extern bus_chipset_tag_t comconsbc;
extern bus_io_handle_t comconsioh;
@


1.3
log
@proto change
@
text
@d1 1
a1 1
/*	$OpenBSD: comvar.h,v 1.1 1996/04/19 16:08:34 niklas Exp $	*/
d44 1
@


1.2
log
@partial sync with netbsd 960418, more to come
@
text
@d2 1
a2 1
/*	$NetBSD: comvar.h,v 1.4 1996/04/15 18:54:35 cgd Exp $	*/
d44 1
@


1.1
log
@NetBSD 960317 merge
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: comvar.h,v 1.3 1996/03/10 09:01:26 cgd Exp $	*/
d49 1
@
