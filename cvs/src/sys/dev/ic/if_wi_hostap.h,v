head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.8
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.12
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.10
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.4
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.46
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.44
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.40
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.38
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.34
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.36
	OPENBSD_5_0:1.9.0.32
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.30
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.28
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.24
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.26
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.22
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.20
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.18
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.16
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.14
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.12
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	SMP:1.8.0.4
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8
	UBC_SYNC_B:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	UBC:1.6.0.2
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4;
locks; strict;
comment	@ * @;


1.10
date	2014.08.24.18.01.27;	author zhuk;	state Exp;
branches;
next	1.9;
commitid	U5Tni3KouSny7h2m;

1.9
date	2003.10.21.18.58.49;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2003.01.21.20.09.39;	author millert;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2002.12.30.03.23.58;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.08.22.19.47;	author millert;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2002.04.26.22.19.07;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.08.18.43.26;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.30.22.40.26;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.28.20.49.39;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.28.18.21.06;	author mickey;	state Exp;
branches;
next	;

1.6.2.1
date	2002.06.11.03.42.18;	author art;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2003.05.19.21.54.24;	author tedu;	state Exp;
branches;
next	;

1.8.4.1
date	2004.02.19.10.56.18;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Fix wrong IEEE 802.11 ioctl's:

  * SIOCG80211ALLNODES operates on struct ieee80211_nodereq_all, not
    struct ieee80211_nodereq.

  * Six SIOC* from wi(4) were using same codes with generic parts of
    IEEE 802.11 framework. Things worked due to the fact that size
    of data struct being passed is encoded in actual SIOC*, too.

This commit means that ifconfig and some ports will need to be rebuilt,
if any of affected SIOC* codes is used. Port bumps to follow.

First part okay reyk@@, whole diff okay mpi@@
Heavy prodding to commit now from deraadt@@
@
text
@/*	$OpenBSD: if_wi_hostap.h,v 1.9 2003/10/21 18:58:49 jmc Exp $	*/

/*
 * Copyright (c) 2002
 *	Thomas Skibo <skibo@@pacbell.net>.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Thomas Skibo.
 * 4. Neither the name of the author nor the names of any co-contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY Thomas Skibo AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL Thomas Skibo OR HIS DRINKING PALS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 *
 * $FreeBSD: $
 */

#ifndef __WI_HOSTAP_H__
#define __WI_HOSTAP_H__

#define WIHAP_MAX_STATIONS	1800

struct hostap_sta {
	u_int8_t	addr[6];
	u_int16_t	asid;
	u_int16_t	flags;
	u_int16_t	sig_info;	/* 15:8 signal, 7:0 noise */
	u_int16_t	capinfo;
	u_int8_t	rates;
};

#define HOSTAP_FLAGS_AUTHEN	0x0001
#define HOSTAP_FLAGS_ASSOC	0x0002
#define HOSTAP_FLAGS_PERM	0x0004
#define	HOSTAP_FLAGS_BITS	"\20\01AUTH\02ASSOC\03PERM"

#define SIOCHOSTAP_GET		_IOWR('i', 200, struct ifreq)
#define SIOCHOSTAP_ADD		_IOWR('i', 201, struct ifreq)
#define SIOCHOSTAP_DEL		_IOWR('i', 202, struct ifreq)
#define SIOCHOSTAP_GETALL	_IOWR('i', 203, struct ifreq)
#define SIOCHOSTAP_GFLAGS	_IOWR('i', 204, struct ifreq)
#define SIOCHOSTAP_SFLAGS	_IOWR('i', 205, struct ifreq)

/* Flags for SIOCHOSTAP_GFLAGS/SFLAGS */
#define WIHAPFL_ACTIVE		0x0001
#define WIHAPFL_MAC_FILT	0x0002

/* Flags set internally only: */
#define WIHAPFL_CANTCHANGE	(WIHAPFL_ACTIVE)

struct hostap_getall {
	int		nstations;
	struct hostap_sta *addr;
	int		size;
};



#ifdef _KERNEL
struct wihap_sta_info {
	TAILQ_ENTRY(wihap_sta_info) list;
	LIST_ENTRY(wihap_sta_info) hash;

	struct wi_softc	*sc;
	u_int8_t	addr[6];
	u_short		flags;
	struct timeout	tmo;

	u_int16_t	asid;
	u_int16_t	capinfo;
	u_int16_t	sig_info;	/* 15:8 signal, 7:0 noise */
	u_int8_t	rates;
	u_int8_t	tx_curr_rate;
	u_int8_t	tx_max_rate;
	u_int32_t	*challenge;
};

#define WI_SIFLAGS_ASSOC	HOSTAP_FLAGS_ASSOC
#define WI_SIFLAGS_AUTHEN	HOSTAP_FLAGS_AUTHEN
#define WI_SIFLAGS_PERM		HOSTAP_FLAGS_PERM
#define WI_SIFLAGS_DEAD		0x1000

#define WI_STA_HASH_SIZE	113

#if WI_STA_HASH_SIZE*16 >= 2007 /* will generate ASID's too large. */
#error "WI_STA_HASH_SIZE too big"
#endif
#if WI_STA_HASH_SIZE*16 < WIHAP_MAX_STATIONS
#error "WI_STA_HASH_SIZE too small"
#endif

struct wihap_info {
	TAILQ_HEAD(sta_list, wihap_sta_info)	sta_list;
	LIST_HEAD(sta_hash, wihap_sta_info)	sta_hash[WI_STA_HASH_SIZE];

	u_int16_t		apflags;

	int			n_stations;
	u_int16_t		asid_inuse_mask[WI_STA_HASH_SIZE];

	int			inactivity_time;
	struct timeout		tmo;
};

#define WIHAP_DFLT_INACTIVITY_TIME	(120) /* 2 minutes */

struct wi_softc;
struct wi_frame;

int	wihap_check_tx(struct wihap_info *, u_int8_t [], u_int8_t *);
int	wihap_data_input(struct wi_softc *, struct wi_frame *, struct mbuf *);
int	wihap_ioctl(struct wi_softc *, u_long, caddr_t);
void	wihap_init(struct wi_softc *);
void	wihap_mgmt_input(struct wi_softc *, struct wi_frame *, struct mbuf *);
void	wihap_shutdown(struct wi_softc *);

#endif /* _KERNEL */
#endif /* __WI_HOSTAP_H__ */
@


1.9
log
@typos from Tom Cosgrove;

Tom: I did not commit a couple of your changes.

i did not include some punctuation fixes (full stops, etc.)
mnemorable -> mnemonic: i decided memorable was probably better
instrunctions -> instruction: i kept the plural
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_hostap.h,v 1.8 2003/01/21 20:09:39 millert Exp $	*/
d56 6
a61 6
#define SIOCHOSTAP_GET		_IOWR('i', 210, struct ifreq)
#define SIOCHOSTAP_ADD		_IOWR('i', 211, struct ifreq)
#define SIOCHOSTAP_DEL		_IOWR('i', 212, struct ifreq)
#define SIOCHOSTAP_GETALL	_IOWR('i', 213, struct ifreq)
#define SIOCHOSTAP_GFLAGS	_IOWR('i', 214, struct ifreq)
#define SIOCHOSTAP_SFLAGS	_IOWR('i', 215, struct ifreq)
@


1.8
log
@Use a 2-level timeout for hostap.  Instead of of sending a station
a deauth/disassoc packet when the inactivity timer fires, just set
a flag, re-queue it and set the master wihap timer if needed.  What
this does is to effectively bundle (and serialize) deauth/disassoc
packets so if a large number need to be sent at once we don't stomp
all over the card.  We also only do at most 10 stations at a time.
The sta_list has been changed from a doubly linked list to a tailq.
Inactive stations are kept at the head of the queue, new ones are
added to the tail.

Idea and OK by mickey@@, prompted by an issue found by
merith AT vantronix DOT net
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_hostap.h,v 1.7 2002/12/30 03:23:58 mickey Exp $	*/
d67 1
a67 1
/* Flags set inernally only: */
@


1.8.4.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d67 1
a67 1
/* Flags set internally only: */
@


1.7
log
@proper HOSTAP_FLAGS_BITS; from merith@@vantronix.net
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_hostap.h,v 1.6 2002/06/08 22:19:47 millert Exp $	*/
d80 1
a80 1
	LIST_ENTRY(wihap_sta_info) list;
d100 1
d112 1
a112 1
	LIST_HEAD(sta_list, wihap_sta_info)	sta_list;
d121 1
@


1.6
log
@kill __P
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_hostap.h,v 1.5 2002/04/26 22:19:07 millert Exp $	*/
d54 1
a54 1
#define	HOSTAP_FLAGS_BITS	"\20\01ASSOC\02AUTH\03PERM"
@


1.6.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.6.2.2
log
@sync
@
text
@d54 1
a54 1
#define	HOSTAP_FLAGS_BITS	"\20\01AUTH\02ASSOC\03PERM"
d80 1
a80 1
	TAILQ_ENTRY(wihap_sta_info) list;
a99 1
#define WI_SIFLAGS_DEAD		0x1000
d111 1
a111 1
	TAILQ_HEAD(sta_list, wihap_sta_info)	sta_list;
a119 1
	struct timeout		tmo;
@


1.5
log
@Implement shared key support for hostap mode; from Thomas Skibo
Also do a little KNF while I'm in here.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_hostap.h,v 1.4 2002/04/08 18:43:26 mickey Exp $	*/
d127 6
a132 9
void wihap_mgmt_input		__P((struct wi_softc *, struct wi_frame *,
				     struct mbuf *));
int  wihap_data_input		__P((struct wi_softc *, struct wi_frame *,
				     struct mbuf *));
int  wihap_check_tx		__P((struct wihap_info *, u_int8_t [],
				     u_int8_t *));
void wihap_init			__P((struct wi_softc *));
void wihap_shutdown		__P((struct wi_softc *));
int  wihap_ioctl		__P((struct wi_softc *, u_long, caddr_t));
@


1.4
log
@restore what was a default inactivity timeout, two minutes
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_hostap.h,v 1.3 2002/03/30 22:40:26 mickey Exp $	*/
d94 1
@


1.3
log
@kill lots of space and insert some more for knf
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_hostap.h,v 1.2 2002/03/28 20:49:39 mickey Exp $	*/
d121 1
a121 2
#define WIHAP_INTERVAL			5
#define WIHAP_DFLT_INACTIVITY_TIME	(120/WIHAP_INTERVAL) /* 2 minutes */
@


1.2
log
@some BITS defs for %b
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_hostap.h,v 1.1 2002/03/28 18:21:06 mickey Exp $	*/
d56 4
a59 4
#define SIOCHOSTAP_GET 		_IOWR('i', 210, struct ifreq)
#define SIOCHOSTAP_ADD 		_IOWR('i', 211, struct ifreq)
#define SIOCHOSTAP_DEL 		_IOWR('i', 212, struct ifreq)
#define SIOCHOSTAP_GETALL 	_IOWR('i', 213, struct ifreq)
d71 1
a71 1
	int 		nstations;
d73 1
a73 1
	int 		size;
@


1.1
log
@basic host-ap implementation, more work is needed; from Thomas Skibo <skibo@@pacbell.net>; millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d54 1
@

