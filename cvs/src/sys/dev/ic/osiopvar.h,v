head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.26
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.30
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.28
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.22
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.24
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.16
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.20
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.18
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.14
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.12
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.8
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.6
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.4
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.10.0.10
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.12
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.8
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.6
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.9.0.14
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.12
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC:1.5.0.2
	UBC_SYNC_A:1.5
	SMP:1.1.0.4
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2010.06.28.04.39.57;	author dlg;	state Exp;
branches;
next	1.10;

1.10
date	2007.04.13.18.34.48;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2003.11.16.20.30.06;	author avsm;	state Exp;
branches;
next	1.8;

1.8
date	2003.10.21.18.58.49;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.26.00.40.53;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.28.02;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.06.22.40.57;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.06.22.01.43;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.08.18.03.46;	author krw;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.06.20.24.31;	author krw;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.08.02.11.38;	author krw;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.05.13.19.35.02;	author ho;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.06.07.11.02.29;	author ho;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2004.02.19.10.56.20;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.11
log
@implement iopools in osiop to get rid of another use of XS_NO_CCB.

original diff corrected by miod@@
tested by and ok miod@@
@
text
@/*	$OpenBSD: osiopvar.h,v 1.10 2007/04/13 18:34:48 krw Exp $	*/
/*	$NetBSD: osiopvar.h,v 1.3 2002/05/14 02:58:35 matt Exp $	*/

/*
 * Copyright (c) 2001 Izumi Tsutsui.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Van Jacobson of Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)siopvar.h	7.1 (Berkeley) 5/8/90
 */

#define osiop_read_1(sc, reg)					\
    bus_space_read_1((sc)->sc_bst, (sc)->sc_reg, reg)
#define osiop_write_1(sc, reg, val)				\
    bus_space_write_1((sc)->sc_bst, (sc)->sc_reg, reg, val)

#define osiop_read_4(sc, reg)					\
    bus_space_read_4((sc)->sc_bst, (sc)->sc_reg, reg)
#define osiop_write_4(sc, reg, val)				\
    bus_space_write_4((sc)->sc_bst, (sc)->sc_reg, reg, val)     
        
/*
 * The largest single request will be MAXPHYS bytes which will require
 * at most MAXPHYS/NBPG+1 chain elements to describe, i.e. if none of
 * the buffer pages are physically contiguous (MAXPHYS/NBPG) and the
 * buffer is not page aligned (+1).
 */
/* XXX This should be (MAXPHYS / NBPG + 1), but hardcoded in script */
#define OSIOP_NSG	(16 + 1)
#if MAXPHYS > (PAGE_SIZE * (OSIOP_NSG - 1))
#define OSIOP_MAX_XFER	(PAGE_SIZE * (OSIOP_NSG - 1))
#else
#define OSIOP_MAX_XFER	MAXPHYS
#endif

#define OSIOP_NTGT 8
#define OSIOP_NACB 32	/* XXX (PAGE_SIZE / sizeof(osiop_ds)) is better? */

/*
 * Data Structure for SCRIPTS program
 */
typedef struct buf_table {
	u_int32_t count;
	u_int32_t addr;
} buf_table_t;

struct osiop_ds {
	u_int32_t scsi_addr;		/* SCSI ID & sync */
	u_int32_t pad1;
	buf_table_t id;			/* Identify message */
	buf_table_t cmd;		/* SCSI command */
	buf_table_t status;		/* Status */
	buf_table_t msg;		/* Message */
	buf_table_t msgin;		/* Message in */
	buf_table_t extmsg;		/* Extended message in */
	buf_table_t synmsg;		/* Sync transfer request */
	buf_table_t data[OSIOP_NSG];	/* DMA S/G buffers */

	u_int8_t msgout[8];
	u_int8_t msgbuf[8];
	u_int8_t stat[8];

	struct scsi_generic scsi_cmd;	/* DMA'able copy of xs->cmd */
	u_int32_t pad[1+3];		/* pad to 256 bytes */
} __packed;

/* status can hold the SCSI_* status values, and 2 additional values: */
#define SCSI_OSIOP_NOCHECK	0xfe	/* don't check the scsi status */
#define SCSI_OSIOP_NOSTATUS	0xff	/* device didn't report status */

#define MSG_INVALID		0xff	/* dummy value for message buffer */

#define OSIOP_DSOFF(x)		offsetof(struct osiop_ds, x)
#define OSIOP_DSIDOFF		OSIOP_DSOFF(msgout[0])
#define OSIOP_DSMSGOFF		OSIOP_DSOFF(msgbuf[0])
#define OSIOP_DSMSGINOFF	OSIOP_DSOFF(msgbuf[1])
#define OSIOP_DSEXTMSGOFF	OSIOP_DSOFF(msgbuf[2])
#define OSIOP_DSSYNMSGOFF	OSIOP_DSOFF(msgbuf[3])
#define OSIOP_DSSTATOFF		OSIOP_DSOFF(stat[0])
#define OSIOP_DSCMDOFF		OSIOP_DSOFF(scsi_cmd)

/*
 * ACB. Holds additional information for each SCSI command Comments:
 * Basicly, we refrain from fiddling with the scsi_xfer struct
 * (except do the expected updating of return values).
 * We'll generally update: xs->{flags,resid,error,status} and
 * occasionally xs->retries.
 */
struct osiop_acb {
	TAILQ_ENTRY(osiop_acb) chain;
	struct scsi_xfer *xs;	/* SCSI xfer ctrl block from upper layer */
	struct osiop_softc *sc;	/* points back to our adapter */

	bus_dmamap_t datadma;	/* DMA map for data transfer */

	struct osiop_ds *ds;	/* data structure for this acb */
	bus_size_t dsoffset;	/* offset of data structure for this acb */

	int	xsflags;	/* copy of xs->flags */
	int	datalen;
	void *data;		/* transfer data buffer ptr */

	bus_addr_t curaddr;	/* current transfer data buffer */
	bus_size_t curlen;	/* current transfer data length */

	int status;		/* status of this acb */
/* status defs */
#define ACB_S_FREE	0	/* cmd slot is free */
#define ACB_S_READY	1	/* cmd slot is waiting for processing */
#define ACB_S_ACTIVE	2	/* cmd slot is being processed */
#define ACB_S_DONE	3	/* cmd slot has been processed */

	int flags;		/* cmd slot flags */
#define ACB_F_TIMEOUT	0x01	/* command timeout */
#define ACB_F_AUTOSENSE 0x02	/* request sense due to SCSI_CHECK */

	u_int8_t intstat;	/* buffer to save sc_flags on disconnect */
};

/*
 * Some info about each (possible) target on the SCSI bus.  This should
 * probably have been a "per target+lunit" structure, but we'll leave it at
 * this for now.  Is there a way to reliably hook it up to sc->fordriver??
 */
struct osiop_tinfo {
	int cmds;		/* number of commands processed */
	int senses;		/* number of sense requests */
	int dconns;		/* number of disconnects */
	int touts;		/* number of timeouts */
	int perrs;		/* number of parity errors */
	int lubusy;		/* What local units/subr. are busy? */
	int period;		/* Period suggestion */
	int offset;		/* Offset suggestion */
	int flags;		/* misc flags per each target */
#define TI_NOSYNC	0x01	/* disable sync xfer on this target */
#define TI_NODISC	0x02	/* disable disconnect on this target */
	int state;		/* negotiation state */
	u_int8_t sxfer;		/* value for SXFER reg */
	u_int8_t sbcl;		/* value for SBCL reg */
};

struct osiop_softc {
	struct device sc_dev;

	bus_space_tag_t sc_bst;		/* bus space tag */
	bus_space_handle_t sc_reg;	/* register I/O handle */

	bus_dma_tag_t sc_dmat;		/* bus dma tag */
	bus_dmamap_t sc_scrdma;		/* script dma map */
	bus_dmamap_t sc_dsdma;		/* script data dma map */

	u_int32_t *sc_script;		/* ptr to script memory */
	struct osiop_ds *sc_ds;		/* ptr to data structure memory */

	int sc_id;			/* adapter SCSI id */
	int sc_active;			/* number of active I/O's */

	struct osiop_acb *sc_nexus;	/* current command */
	struct osiop_acb *sc_acb;	/* the real command blocks */

	/* Lists of command blocks */
	TAILQ_HEAD(acb_list, osiop_acb) free_list,
				        ready_list,
				        nexus_list;
	struct mutex free_list_mtx;

	struct scsi_link    sc_link;
	struct scsi_iopool  sc_iopool;

	struct osiop_tinfo sc_tinfo[OSIOP_NTGT];

	int sc_clock_freq;
	int sc_tcp[4];
	int sc_flags;
#define OSIOP_INTSOFF	0x80	/* Interrupts turned off */
#define OSIOP_INTDEFER	0x40	/* MD interrupt has been deferred */
#define OSIOP_NODMA	0x02	/* No DMA transfer */
#define OSIOP_ALIVE	0x01	/* controller initialized */

	int sc_cfflags;			/* copy of config flags */

	int sc_minsync;

	u_int8_t sc_dstat;
	u_int8_t sc_sstat0;
	u_int8_t sc_sstat1;
	u_int8_t sc_istat;
	u_int8_t sc_dcntl;
	u_int8_t sc_ctest7;
	u_int8_t sc_dmode;
	u_int8_t sc_sien;
	u_int8_t sc_dien;
};

/* negotiation states */
#define NEG_INIT	0	/* Initial negotiate state */
#define NEG_SYNC	NEG_INIT /* Negotiate synch transfers */
#define NEG_WAITS	1	/* Waiting for synch negotiation response */
#define NEG_DONE	2	/* Wide and/or sync negotiation done */

void osiop_attach(struct osiop_softc *);
void osiop_intr(struct osiop_softc *);
@


1.10
log
@scsi_generic is now 16 bytes. Adjust padding so struct is still
256 bytes.
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.9 2003/11/16 20:30:06 avsm Exp $	*/
d217 1
d220 1
@


1.9
log
@convert __attribute__((__packed__)) to __packed so that parsers unaware
of gcc extensions have more of a chance.
ok mcbride@@, no objections from millert@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.8 2003/10/21 18:58:49 jmc Exp $	*/
d114 1
a114 1
	
d116 1
a116 1
	u_int32_t pad[1+4];		/* pad to 256 bytes */
@


1.8
log
@typos from Tom Cosgrove;

Tom: I did not commit a couple of your changes.

i did not include some punctuation fixes (full stops, etc.)
mnemorable -> mnemonic: i decided memorable was probably better
instrunctions -> instruction: i kept the plural
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.7 2003/06/26 00:40:53 mickey Exp $	*/
d117 1
a117 1
} __attribute__((__packed__));
@


1.7
log
@align acb size to 256 bytes to avoid cache issues; krw@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.6 2003/06/02 23:28:02 millert Exp $	*/
d119 1
a119 1
/* status can hold the SCSI_* status values, and 2 additionnal values: */
d248 2
a249 2
#define NEG_WAITS	1	/* Waiting for synch negoation response */
#define NEG_DONE	2	/* Wide and/or sync negotation done */
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.5 2003/05/06 22:40:57 mickey Exp $	*/
d116 1
@


1.5
log
@count auto-sense reqs as well; krw@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.4 2003/05/06 22:01:43 mickey Exp $	*/
d45 1
a45 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@allow programming dma block bus transaction length on 710 and set to 8 words for hppa/osiop; krw@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.3 2003/04/08 18:03:46 krw Exp $	*/
d182 1
@


1.3
log
@Fix diagnostic output to display data buffer actually being used.

Fix setting of data buffer length when doing auto request sense.

Add a little general paranoia about setting data buffer length.

Eliminate $ifdef'ed field in acb structure, leaving diagnostic code
using it #ifdef'ed.

Mostly suggested by and ok mickey@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.2 2003/04/06 20:24:31 krw Exp $	*/
d242 1
@


1.2
log
@Fix a lot of issues in osiop.

In particular fix dma memory handling and as a result request sense
processing.

Much input/advice/testing from Mickey.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.1 2003/01/08 02:11:38 krw Exp $	*/
a155 1
#ifdef OSIOP_DEBUG
a156 1
#endif
@


1.1
log
@Merry Christmas Mickey!

First cut at osiop driver (LSI Logic/Symbios/NCR 53C710). For hppa
only at the moment.

Functional for the most part, but there are known problems:

1) SCSI_CHECK/REQUEST_SENSE not handled at all - simply returns a
zero'ed scsi_sense_data buffer. As a result all osiop sc_link's are
created with the ADEV_NODOORLOCK quirk to suppress PREVENT_ALLOW
commands from being issued (and failing) during probe.

2) Sync negotiation (wide is not supported on this chip) needs to be
validated due to some ominous comments in the source about being valid
only for the 33Mhz Zeus board.

3) Probe message needs fixing/completion to issue useful info. See 2).

4) Timeout/hangs occur under heavy load, e.g. make builds.

From NetBSD.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d118 2
d135 1
a148 1
	bus_dmamap_t cmddma;	/* DMA map for SCSI command */
d154 2
a155 2
	bus_size_t cmdlen;	/* command length */
	bus_size_t datalen;	/* transfer data length */
@


1.1.4.1
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.1 2003/01/08 02:11:38 krw Exp $	*/
a117 2
	
	struct scsi_generic scsi_cmd;	/* DMA'able copy of xs->cmd */
a132 1
#define OSIOP_DSCMDOFF		OSIOP_DSOFF(scsi_cmd)
d146 1
d152 3
a154 2
	int	xsflags;	/* copy of xs->flags */
	int	datalen;
d156 1
a181 1
	int senses;		/* number of sense requests */
a241 1
	u_int8_t sc_dmode;
@


1.1.4.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: osiopvar.h,v 1.1.4.1 2003/05/13 19:35:02 ho Exp $	*/
d45 5
a49 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d116 1
a116 2
	u_int32_t pad[1+4];		/* pad to 256 bytes */
} __packed;
d118 1
a118 1
/* status can hold the SCSI_* status values, and 2 additional values: */
d247 2
a248 2
#define NEG_WAITS	1	/* Waiting for synch negotiation response */
#define NEG_DONE	2	/* Wide and/or sync negotiation done */
@


