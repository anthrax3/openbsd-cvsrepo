head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.18
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.16
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.10
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.12
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.8
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.6
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.10
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.8
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.4
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.6
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.8
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.2;
locks; strict;
comment	@ * @;


1.7
date	2013.05.30.16.15.02;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2011.04.21.23.10.08;	author krw;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.29.21.17.15;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.26.05.42.15;	author ray;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.06.22.31.21;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.54;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.17.21.35.06;	author mickey;	state Exp;
branches
	1.1.4.1
	1.1.8.1;
next	;

1.1.4.1
date	2001.05.14.22.23.38;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2002.03.28.11.51.00;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2003.03.28.00.38.12;	author niklas;	state Exp;
branches;
next	;

1.1.8.1
date	2002.06.11.03.42.17;	author art;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2003.05.19.21.54.24;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Enforce ca_activate tree-walks over the entire heirarchy for all events,
cleaning up some shutdown-hook related code on the way.
(A few drivers related to sparc are still skipped at kettenis' request)
ok kettenis mlarkin, tested by many others too
@
text
@/*	$OpenBSD: cacvar.h,v 1.6 2011/04/21 23:10:08 krw Exp $	*/
/*	$NetBSD: cacvar.h,v 1.7 2000/10/19 14:28:47 ad Exp $	*/

/*-
 * Copyright (c) 2000 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Andrew Doran.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _IC_CACVAR_H_
#define	_IC_CACVAR_H_

#define	CAC_MAX_CCBS	128
#define	CAC_MAX_XFER	(0xffff * 512)
#define	CAC_SG_SIZE	32
#define	CAC_SECTOR_SIZE	512

#define	cac_inb(sc, port) \
	bus_space_read_1((sc)->sc_iot, (sc)->sc_ioh, port)
#define	cac_inw(sc, port) \
	bus_space_read_2((sc)->sc_iot, (sc)->sc_ioh, port)
#define	cac_inl(sc, port) \
	bus_space_read_4((sc)->sc_iot, (sc)->sc_ioh, port)
#define	cac_outb(sc, port, val) \
	bus_space_write_1((sc)->sc_iot, (sc)->sc_ioh, port, val)
#define	cac_outw(sc, port, val) \
	bus_space_write_2((sc)->sc_iot, (sc)->sc_ioh, port, val)
#define	cac_outl(sc, port, val) \
	bus_space_write_4((sc)->sc_iot, (sc)->sc_ioh, port, val)

/*
 * Stupid macros to deal with alignment/endianness issues.
 */

#define	CAC_GET1(x)							\
	(((u_char *)&(x))[0])
#define	CAC_GET2(x)							\
	(((u_char *)&(x))[0] | (((u_char *)&(x))[1] << 8))
#define	CAC_GET4(x)							\
	((((u_char *)&(x))[0] | (((u_char *)&(x))[1] << 8)) |		\
	(((u_char *)&(x))[2] << 16 | (((u_char *)&(x))[3] << 24)))

struct cac_ccb {
	/* Data the controller will touch - 276 bytes */
	struct cac_hdr	ccb_hdr;
	struct cac_req	ccb_req;
	struct cac_sgb	ccb_seg[CAC_SG_SIZE];

	/* Data the controller won't touch */
	int		ccb_flags;
	int		ccb_datasize;
	paddr_t		ccb_paddr;
	bus_dmamap_t	ccb_dmamap_xfer;
	SIMPLEQ_ENTRY(cac_ccb) ccb_chain;
	struct scsi_xfer *ccb_xs;
};

#define	CAC_CCB_DATA_IN		0x0001	/* Map describes inbound xfer */
#define	CAC_CCB_DATA_OUT	0x0002	/* Map describes outbound xfer */
#define	CAC_CCB_ACTIVE		0x0004	/* Command submitted to controller */

struct cac_softc;

struct cac_linkage {
	struct	cac_ccb *(*cl_completed)(struct cac_softc *);
	int	(*cl_fifo_full)(struct cac_softc *);
	void	(*cl_intr_enable)(struct cac_softc *, int);
	int	(*cl_intr_pending)(struct cac_softc *);
	void	(*cl_submit)(struct cac_softc *, struct cac_ccb *);
};

struct cac_softc {
	struct device		sc_dv;
	bus_space_tag_t		sc_iot;
	bus_space_handle_t	sc_ioh;
	bus_dma_tag_t		sc_dmat;
	bus_dmamap_t		sc_dmamap;
	int			sc_nunits;
	void			*sc_ih;
	struct scsi_link	sc_link;
	const struct cac_linkage	*sc_cl;
	caddr_t			sc_ccbs;
	paddr_t			sc_ccbs_paddr;
	SIMPLEQ_HEAD(, cac_ccb)	sc_ccb_free;	
	SIMPLEQ_HEAD(, cac_ccb)	sc_ccb_queue;
	struct cac_drive_info	*sc_dinfos;
	int			(*sc_ioctl)(struct device *, u_long, caddr_t);
	struct ksensor		*sc_sensors;
	struct ksensordev	sc_sensordev;

	struct mutex		sc_ccb_mtx; /* ccb queue protection */
	struct scsi_iopool	sc_iopool;
};

/* XXX These have to become spinlocks in case of fine SMP */
#define	CAC_LOCK(sc) splbio()
#define	CAC_UNLOCK(sc, lock) splx(lock)
typedef	int cac_lock_t;

int	cac_init(struct cac_softc *, int);
int	cac_intr(void *);
int	cac_flush(struct cac_softc *);

extern const struct	cac_linkage cac_l0;

#endif	/* !_IC_CACVAR_H_ */
@


1.6
log
@A plausible iopoolification. Utter dearth of interested parties
after more than a year of grovelling emails shows further effort
is pointless.

ok matthew@@ dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cacvar.h,v 1.5 2008/10/29 21:17:15 brad Exp $	*/
d125 1
@


1.5
log
@Add initial bio support; only volume status is handled.

Based on cac(4) bio support from NetBSD which is derived from
OpenBSD's ciss(4) bio support.

Tested by otto@@ jbg@@

ok marco@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cacvar.h,v 1.4 2008/06/26 05:42:15 ray Exp $	*/
d113 3
@


1.4
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cacvar.h,v 1.3 2003/03/06 22:31:21 mickey Exp $	*/
d64 1
a64 1
	(((u_char *)&(x))[0] << 16 | (((u_char *)&(x))[1] << 24)))
d110 3
d114 5
@


1.3
log
@this is a fix for kernel panics and craches along w/ other stability
improvements worked out over past few months w/ different people.
the main bug was fixes w/ help of harding@@motd.ca .
10x to all and enjoy the better driver (;
@
text
@d1 1
a1 1
/*	$OpenBSD: cacvar.h,v 1.2 2002/03/14 01:26:54 millert Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cacvar.h,v 1.1 2000/12/17 21:35:06 mickey Exp $	*/
d43 1
a43 1
#define	CAC_MAX_CCBS	20
@


1.1
log
@Compaq SMART Array RAID controllers.
based on netbsd driver.
testing helps from brad@@
eisa untested, but should work (;
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d119 2
a120 2
int	cac_init __P((struct cac_softc *, int));
int	cac_intr __P((void *));
@


1.1.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cacvar.h,v 1.1 2000/12/17 21:35:06 mickey Exp $	*/
d119 2
a120 2
int	cac_init(struct cac_softc *, int);
int	cac_intr(void *);
@


1.1.8.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 1
a43 1
#define	CAC_MAX_CCBS	128
@


1.1.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: cacvar.h,v 1.1 2000/12/17 21:35:06 mickey Exp $	*/
@


1.1.4.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d119 2
a120 2
int	cac_init(struct cac_softc *, int);
int	cac_intr(void *);
@


1.1.4.3
log
@Sync the SMP branch with 3.3
@
text
@d43 1
a43 1
#define	CAC_MAX_CCBS	128
@


