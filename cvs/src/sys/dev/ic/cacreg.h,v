head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.32
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.34
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.28
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.30
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.22
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.26
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.24
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.20
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.18
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.14
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.16
	OPENBSD_5_0:1.6.0.12
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.10
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.8
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.4
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.18
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.16
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.14
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.12
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.10
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.8
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	SMP:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2;
locks; strict;
comment	@ * @;


1.6
date	2008.10.29.21.17.15;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.26.05.42.15;	author ray;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.16.20.30.06;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.06.22.31.21;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.07.04.47.26;	author mickey;	state Exp;
branches
	1.2.4.1
	1.2.8.1;
next	1.1;

1.1
date	2000.12.17.21.35.06;	author mickey;	state Exp;
branches;
next	;

1.2.4.1
date	2001.05.14.22.23.37;	author niklas;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2003.03.28.00.38.12;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2004.02.19.10.56.17;	author niklas;	state Exp;
branches;
next	;

1.2.8.1
date	2003.05.19.21.54.24;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Add initial bio support; only volume status is handled.

Based on cac(4) bio support from NetBSD which is derived from
OpenBSD's ciss(4) bio support.

Tested by otto@@ jbg@@

ok marco@@
@
text
@/*	$OpenBSD: cacreg.h,v 1.5 2008/06/26 05:42:15 ray Exp $	*/
/*	$NetBSD: cacreg.h,v 1.5 2001/01/10 16:48:04 ad Exp $	*/

/*-
 * Copyright (c) 2000 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Andrew Doran.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*-
 * Copyright (c) 1999 Jonathan Lemon
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _IC_CACREG_H_
#define	_IC_CACREG_H_

/* Board register offsets */
#define	CAC_REG_CMD_FIFO		0x04
#define	CAC_REG_DONE_FIFO		0x08
#define	CAC_REG_INTR_MASK		0x0C
#define	CAC_REG_STATUS			0x10
#define	CAC_REG_INTR_PENDING		0x14

#define	CAC_42REG_CMD_FIFO		0x40
#define	CAC_42REG_DONE_FIFO		0x44
#define	CAC_42REG_INTR_MASK		0x34
#define	CAC_42REG_STATUS		0x30

#define	CAC_42_EXTINT			0x08

#define	CAC_EISAREG_INTR_MASK		0x01
#define	CAC_EISAREG_LOCAL_MASK		0x04
#define	CAC_EISAREG_LOCAL_DOORBELL	0x05
#define	CAC_EISAREG_SYSTEM_MASK		0x06
#define	CAC_EISAREG_SYSTEM_DOORBELL	0x07
#define	CAC_EISAREG_LIST_ADDR		0x08
#define	CAC_EISAREG_LIST_LEN		0x0c
#define	CAC_EISAREG_TAG			0x0f
#define	CAC_EISAREG_COMPLETE_ADDR	0x10
#define	CAC_EISAREG_LIST_STATUS		0x16

/* EISA channel control */
#define	CAC_EISA_CHANNEL_BUSY		0x01
#define	CAC_EISA_CHANNEL_CLEAR		0x02

/* Interrupt mask values */
#define	CAC_INTR_DISABLE		0x00
#define	CAC_INTR_ENABLE			0x01

/* Interrupt status masks */
#define	CAC_INTR_FIFO_NEMPTY		0x01

/* Command types */
#define	CAC_CMD_GET_LOG_DRV_INFO	0x10
#define	CAC_CMD_GET_CTRL_INFO		0x11
#define	CAC_CMD_SENSE_DRV_STATUS	0x12
#define	CAC_CMD_START_RECOVERY		0x13
#define	CAC_CMD_GET_PHYS_DRV_INFO	0x15
#define	CAC_CMD_BLINK_DRV_LEDS		0x16
#define	CAC_CMD_SENSE_DRV_LEDS		0x17
#define	CAC_CMD_GET_LOG_DRV_EXT		0x18
#define	CAC_CMD_GET_CTRL_INFO		0x11
#define	CAC_CMD_READ			0x20
#define	CAC_CMD_WRITE			0x30
#define	CAC_CMD_WRITE_MEDIA		0x31
#define	CAC_CMD_GET_CONFIG		0x50
#define	CAC_CMD_SET_CONFIG		0x51
#define	CAC_CMD_START_FIRMWARE		0x99
#define	CAC_CMD_FLUSH_CACHE		0xc2

/* Return status codes */
#define	CAC_RET_SOFT_ERROR		0x02
#define	CAC_RET_HARD_ERROR		0x04
#define	CAC_RET_CMD_INVALID		0x10
#define	CAC_RET_CMD_REJECTED		0x14

struct cac_drive_info {
	u_int16_t	secsize;
	u_int32_t	secperunit;
	u_int16_t	ncylinders;
	u_int8_t	nheads;
	u_int8_t	signature;
	u_int8_t	psectors;
	u_int16_t	wprecomp;
	u_int8_t	max_acc;
	u_int8_t	control;
	u_int16_t	pcylinders;
	u_int8_t	ptracks;
	u_int16_t	landing_zone;
	u_int8_t	nsectors;
	u_int8_t	checksum;
	u_int8_t	mirror;
} __packed;

struct cac_controller_info {
	u_int8_t	num_drvs;
	u_int32_t	signature;
	u_int8_t	firm_rev[4];
	u_int8_t	rom_rev[4];
	u_int8_t	hw_rev;
	u_int32_t	bb_rev;
	u_int32_t	drv_present_map;
	u_int32_t	ext_drv_map;
	u_int32_t	board_id;
	u_int8_t	cfg_error;
	u_int32_t	non_disk_bits;
	u_int8_t	bad_ram_addr;
	u_int8_t	cpu_rev;
	u_int8_t	pdpi_rev;
	u_int8_t	epic_rev;
	u_int8_t	wcxc_rev;
	u_int8_t	marketing_rev;
	u_int8_t	ctlr_flags;
	u_int8_t	host_flags;
	u_int8_t	expand_dis;
	u_int8_t	scsi_chips;
	u_int32_t	max_req_blocks;
	u_int32_t	ctlr_clock;
	u_int8_t	drvs_per_bus;
	u_int16_t	big_drv_present_map[8];
	u_int16_t	big_ext_drv_map[8];
	u_int16_t	big_non_disk_map[8];
	u_int16_t	task_flags;
	u_int8_t	icl_bus;
	u_int8_t	red_modes;
	u_int8_t	cur_red_mode;
	u_int8_t	red_ctlr_stat;
	u_int8_t	red_fail_reason;
	u_int8_t	reserved[403];
} __packed;

struct cac_drive_status {
	u_int8_t	stat;
#define	CAC_LD_OK	0
#define	CAC_LD_FAILED	1
#define	CAC_LD_UNCONF	2
#define	CAC_LD_DEGRAD	3
#define	CAC_LD_RBLDRD	4	/* ready for rebuild */
#define	CAC_LD_REBLD	5
#define	CAC_LD_PDINV	6	/* wrong phys drive replaced */
#define	CAC_LD_PDUNC	7	/* phys drive is not connected proper */
#define	CAC_LD_EXPND	10	/* expanding */
#define	CAC_LD_NORDY	11	/* volume is not ready */
#define	CAC_LD_QEXPND	12	/* queued for expansion */
	u_int8_t	failed[4];	/* failed map */
	u_int8_t	res0[416];
	u_int8_t	prog[4];	/* blocks left to rebuild/expand */
	u_int8_t	rebuild;	/* drive that is rebuilding */
	u_int16_t	remapcnt[32];	/* count of re3mapped blocks for pds */
	u_int8_t	replaced[4];	/* replaced drives map */
	u_int8_t	spare[4];	/* used spares map */
	u_int8_t	sparestat;	/* spare status */
#define	CAC_LD_CONF	0x01	/* spare configured */
#define	CAC_LD_RBLD	0x02	/* spare is used and rebuilding */
#define	CAC_LD_DONE	0x04	/* spare rebuild done */
#define	CAC_LD_FAIL	0x08	/* at least one spare drive has failed */
#define	CAC_LD_USED	0x10	/* at least one spare drive is used */
#define	CAC_LD_AVAIL	0x20	/* at least one spare is available */
	u_int8_t	sparemap[32];	/* spare->pd replacement map */
	u_int8_t	replok[4];	/* replaced failed map */
	u_int8_t	readyok;	/* ready to become ok */
	u_int8_t	memfail;	/* cache mem failure */
	u_int8_t	expfail;	/* expansion failure */
	u_int8_t	rebldfail;	/* rebuild failure */
#define	CAC_LD_RBLD_READ	0x01	/* read faild */
#define	CAC_LD_RBLD_WRITE	0x02	/* write fail */
	u_int8_t	bigfailed[16];	/* bigmap vers of same of the above */
	u_int8_t	bigremapcnt[256];
	u_int8_t	bigreplaced[16];
	u_int8_t	bigspare[16];
	u_int8_t	bigsparemap[128];
	u_int8_t	bigreplok[16];
	u_int8_t	bigrebuild;	/* big-number rebuilding driveno */
} __packed;

struct cac_blink {
	u_int32_t	duration;	/* x100ms */
	u_int32_t	elapsed;	/* only for sense */
	u_int8_t	pdtab[256];
#define	CAC_BLINK_ALL	1
#define	CAC_BLINK_TIMED 2
	u_int8_t	res[248];
} __packed;

struct cac_hdr {
	u_int8_t	drive;		/* logical drive */
	u_int8_t	priority;	/* block priority */
	u_int16_t	size;		/* size of request, in words */
} __packed;

struct cac_req {
	u_int16_t	next;		/* offset of next request */
	u_int8_t	command;	/* command */
	u_int8_t	error;		/* return error code */
	u_int32_t	blkno;		/* block number */
	u_int16_t	bcount;		/* block count */
	u_int8_t	sgcount;	/* number of scatter/gather entries */
	u_int8_t	reserved;	/* reserved */
} __packed;

struct cac_sgb {
	u_int32_t	length;		/* length of S/G segment */
	u_int32_t	addr;		/* physical address of block */
} __packed;
	
#endif	/* !_IC_CACREG_H_ */
@


1.5
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cacreg.h,v 1.4 2003/11/16 20:30:06 avsm Exp $	*/
d175 53
@


1.4
log
@convert __attribute__((__packed__)) to __packed so that parsers unaware
of gcc extensions have more of a chance.
ok mcbride@@, no objections from millert@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cacreg.h,v 1.3 2003/03/06 22:31:21 mickey Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.3
log
@this is a fix for kernel panics and craches along w/ other stability
improvements worked out over past few months w/ different people.
the main bug was fixes w/ help of harding@@motd.ca .
10x to all and enjoy the better driver (;
@
text
@d1 1
a1 1
/*	$OpenBSD: cacreg.h,v 1.2 2001/02/07 04:47:26 mickey Exp $	*/
d145 1
a145 1
} __attribute__((__packed__));
d182 1
a182 1
} __attribute__((__packed__));
d188 1
a188 1
} __attribute__((__packed__));
d198 1
a198 1
} __attribute__((__packed__));
d203 1
a203 1
} __attribute__((__packed__));
@


1.2
log
@ok, commit this since it most likely to work; i guess now it will get tested a little bit sooner than in a few months; 10x brad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cacreg.h,v 1.1 2000/12/17 21:35:06 mickey Exp $	*/
d102 3
d126 1
@


1.2.8.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a101 3
/* Interrupt status masks */
#define	CAC_INTR_FIFO_NEMPTY		0x01

a122 1
#define	CAC_RET_CMD_INVALID		0x10
@


1.2.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: cacreg.h,v 1.2 2001/02/07 04:47:26 mickey Exp $	*/
@


1.2.4.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a101 3
/* Interrupt status masks */
#define	CAC_INTR_FIFO_NEMPTY		0x01

a122 1
#define	CAC_RET_CMD_INVALID		0x10
@


1.2.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d145 1
a145 1
} __packed;
d182 1
a182 1
} __packed;
d188 1
a188 1
} __packed;
d198 1
a198 1
} __packed;
d203 1
a203 1
} __packed;
@


1.1
log
@Compaq SMART Array RAID controllers.
based on netbsd driver.
testing helps from brad@@
eisa untested, but should work (;
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: cacreg.h,v 1.3 2000/06/13 13:36:47 ad Exp $	*/
d80 2
a81 1
#define	CAC_42REG_INTR_PENDING		0x08
@

