head	1.17;
access;
symbols
	OPENBSD_6_1:1.17.0.8
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.10
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.4
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.4
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.15.0.20
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.10
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.12
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.13.0.4
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.11.0.2
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.9.0.6
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.4
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.2
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.8.0.10
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.8
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.6
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.4
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.6
	UBC_BASE:1.5
	SMP:1.5.0.4
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5;
locks; strict;
comment	@ * @;


1.17
date	2014.11.27.14.53.42;	author brad;	state Exp;
branches;
next	1.16;
commitid	NtfFntFLbD7jE0vg;

1.16
date	2014.07.08.05.35.18;	author dlg;	state Exp;
branches;
next	1.15;
commitid	0QJleeeWqZmC5anF;

1.15
date	2009.10.15.17.54.54;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2009.08.10.20.29.54;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2009.06.11.22.37.58;	author sthen;	state Exp;
branches;
next	1.12;

1.12
date	2009.04.17.20.20.18;	author kettenis;	state Exp;
branches;
next	1.11;

1.11
date	2008.11.26.13.30.29;	author kettenis;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.26.05.42.15;	author ray;	state Exp;
branches;
next	1.9;

1.9
date	2006.12.21.22.13.36;	author jason;	state Exp;
branches;
next	1.8;

1.8
date	2004.08.08.19.01.20;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.20.22.07.45;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.54;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.09.15.07.20;	author jason;	state Exp;
branches
	1.5.4.1
	1.5.6.1;
next	1.4;

1.4
date	2001.10.04.20.36.16;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.02.21.21.52;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.02.20.32.46;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.21.16.16.50;	author jason;	state Exp;
branches;
next	;

1.5.4.1
date	2001.10.31.03.22.42;	author nate;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2002.03.28.11.51.01;	author niklas;	state Exp;
branches;
next	1.5.4.3;

1.5.4.3
date	2003.03.28.00.38.13;	author niklas;	state Exp;
branches;
next	;

1.5.6.1
date	2002.06.11.03.42.18;	author art;	state Exp;
branches;
next	1.5.6.2;

1.5.6.2
date	2003.05.19.21.54.24;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Garbage collect some bits that were never used.

ok mikeb@@
@
text
@/*	$OpenBSD: hmevar.h,v 1.16 2014/07/08 05:35:18 dlg Exp $	*/
/*	$NetBSD: hmevar.h,v 1.6 2000/09/28 10:56:57 tsutsui Exp $	*/

/*-
 * Copyright (c) 1999 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Paul Kranenburg.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/timeout.h>

#define	HME_TX_RING_SIZE	64
#define	HME_RX_RING_SIZE	64
#define	HME_RX_RING_MAX		256
#define	HME_TX_RING_MAX		256
#define	HME_RX_PKTSIZE		1600
#define	HME_TX_NSEGS		16

struct hme_sxd {
	struct mbuf *sd_mbuf;		/* descriptor mbuf */
	bus_dmamap_t sd_map;		/* descriptor dmamap */
};

struct hme_ring {
	/* Ring Descriptors */
	caddr_t		rb_membase;	/* Packet buffer: CPU address */
	bus_addr_t	rb_dmabase;	/* Packet buffer: DMA address */
	caddr_t		rb_txd;		/* Transmit descriptors */
	bus_addr_t	rb_txddma;	/* DMA address of same */
	caddr_t		rb_rxd;		/* Receive descriptors */
	bus_addr_t	rb_rxddma;	/* DMA address of same */
};

struct hme_softc {
	struct device	sc_dev;		/* boilerplate device view */
	struct arpcom	sc_arpcom;	/* Ethernet common part */
	struct mii_data	sc_mii;		/* MII media control */
#define sc_media	sc_mii.mii_media/* shorthand */
	struct timeout	sc_tick_ch;	/* tick callout */

	/* The following bus handles are to be provided by the bus front-end */
	bus_space_tag_t	sc_bustag;	/* bus tag */
	bus_dma_tag_t	sc_dmatag;	/* bus dma tag */
	bus_dmamap_t	sc_dmamap;	/* bus dma handle */
	bus_space_handle_t sc_seb;	/* HME Global registers */
	bus_space_handle_t sc_erx;	/* HME ERX registers */
	bus_space_handle_t sc_etx;	/* HME ETX registers */
	bus_space_handle_t sc_mac;	/* HME MAC registers */
	bus_space_handle_t sc_mif;	/* HME MIF registers */
	int		sc_burst;	/* DVMA burst size in effect */
	int		sc_phys[2];	/* MII instance -> PHY map */

	int		sc_pci;		/* XXXXX -- PCI buses are LE. */

	/* Ring descriptor */
	struct hme_ring		sc_rb;

	int			sc_debug;

	struct hme_sxd sc_txd[HME_TX_RING_MAX], sc_rxd[HME_RX_RING_MAX];
	bus_dmamap_t	sc_rxmap_spare;
	int	sc_tx_cnt, sc_tx_prod, sc_tx_cons;
	struct if_rxring sc_rx_ring;
	int	sc_rx_prod, sc_rx_cons;
	u_int32_t sc_tcvr;
};


void	hme_config(struct hme_softc *);
void	hme_unconfig(struct hme_softc *);
void	hme_reset(struct hme_softc *);
int	hme_intr(void *);
@


1.16
log
@cut things that relied on mclgeti for rx ring accounting/restriction over
to using if_rxr.

cut the reporting systat did over to the rxr ioctl.

tested as much as i can on alpha, amd64, and sparc64.
mpi@@ has run it on macppc.
ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.15 2009/10/15 17:54:54 deraadt Exp $	*/
a81 4

	/* Special hardware hooks */
	void	(*sc_hwreset)(struct hme_softc *);
	void	(*sc_hwinit)(struct hme_softc *);
@


1.15
log
@Add detach support to a few more drivers, and in others do the neccessary
operations in the detach function in the right order.  Also ensure that the
interrupt handlers not trust registers that go away.
read over very carefully by dms, tested by me
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.14 2009/08/10 20:29:54 deraadt Exp $	*/
d90 2
a91 1
	int	sc_rx_cnt, sc_rx_prod, sc_rx_cons;
@


1.14
log
@More cases of shutdown hooks not needed after card is already stopped.  In
these cases the xxstop function is a bit more complicated and has a flag of
some sort, but the use of that flag does not matter;  DMA is already ceased
ok dlg
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.13 2009/06/11 22:37:58 sthen Exp $	*/
d96 1
@


1.13
log
@Simplify the ioctl handling code. From Brad.
Tested by myself and Simon Kuhnle.
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.12 2009/04/17 20:20:18 kettenis Exp $	*/
a81 1
	void			*sc_sh;		/* shutdownhook cookie */
@


1.12
log
@Switch hme(4) over to using MCLGETI when allocating mbufs for the RX ring.

tested by okan@@, sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.11 2008/11/26 13:30:29 kettenis Exp $	*/
a82 1
	short			sc_if_flags;
@


1.11
log
@Use bus_dmamap_load_mbuf instead of loading mbuf fragments ourselves, and
use m_defrag to linearize packets that don't fit in 16 segments.

ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.10 2008/06/26 05:42:15 ray Exp $	*/
d92 1
a92 1
	int	sc_last_rd;
@


1.10
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.9 2006/12/21 22:13:36 jason Exp $	*/
d40 1
a44 1
	int sd_loaded;			/* descriptor dmamap loaded? */
@


1.9
log
@betetr yet, just nuke sc_enaddr all together, just fill in arpcom and
everybody is happy
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.8 2004/08/08 19:01:20 brad Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.8
log
@do not reset the chip (and subsequently the phy) when unnecessary; that is,
for address changes, multicast filter changes, or adjusting promiscuous mode.
Fixes resetting the phy for things like start/stopping tcpdump.

From NetBSD
tested by me, miod@@, otto@@ and a few others.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.7 2002/11/20 22:07:45 jason Exp $	*/
a90 1
	u_int8_t		sc_enaddr[ETHER_ADDR_LEN]; /* MAC address */
@


1.7
log
@Store which tcvr to prefer
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.6 2002/03/14 01:26:54 millert Exp $	*/
d90 1
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.5 2001/10/09 15:07:20 jason Exp $	*/
d100 1
@


1.5
log
@- keep a spare dmamap_t around for rx (use it to keep the old mbuf loaded
while trying to get the next buffer setup).
- reduce ring size for both rx & tx
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.4 2001/10/04 20:36:16 jason Exp $	*/
d93 2
a94 2
	void	(*sc_hwreset) __P((struct hme_softc *));
	void	(*sc_hwinit) __P((struct hme_softc *));
d103 3
a105 3
void	hme_config __P((struct hme_softc *));
void	hme_reset __P((struct hme_softc *));
int	hme_intr __P((void *));
@


1.5.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.5 2001/10/09 15:07:20 jason Exp $	*/
d93 2
a94 2
	void	(*sc_hwreset)(struct hme_softc *);
	void	(*sc_hwinit)(struct hme_softc *);
d103 3
a105 3
void	hme_config(struct hme_softc *);
void	hme_reset(struct hme_softc *);
int	hme_intr(void *);
@


1.5.6.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a99 1
	u_int32_t sc_tcvr;
@


1.5.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.5.4.2
log
@Merge in -current from about a week ago
@
text
@d93 2
a94 2
	void	(*sc_hwreset)(struct hme_softc *);
	void	(*sc_hwinit)(struct hme_softc *);
d103 3
a105 3
void	hme_config(struct hme_softc *);
void	hme_reset(struct hme_softc *);
int	hme_intr(void *);
@


1.5.4.3
log
@Sync the SMP branch with 3.3
@
text
@a99 1
	u_int32_t sc_tcvr;
@


1.4
log
@move stats update into ticker
allocate all dmamaps in advance (and use load/unload/sync as appropriate)
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.3 2001/10/02 21:21:52 jason Exp $	*/
d42 2
a43 2
#define	HME_TX_RING_SIZE	128
#define	HME_RX_RING_SIZE	128
d97 1
@


1.3
log
@De uglify (a bit) and garbage collect a bunch of now unused functions.
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.2 2001/10/02 20:32:46 jason Exp $	*/
d49 3
a51 2
	struct mbuf *sd_mbuf;
	bus_dmamap_t sd_map;
@


1.2
log
@Pull in a change I wrote a -long- time ago: avoid {bcopy/memcpy} into statically
allocated buffers.  Use the buffer provided in the mbuf (after bus_dmaifying
it, of course) instead
[This is only step one: next step, garbage collection and deuglification]
@
text
@d1 1
a1 1
/*	$OpenBSD: hmevar.h,v 1.1 2001/08/21 16:16:50 jason Exp $	*/
d42 5
a46 1
#define	_HME_NDESC	32
a60 9
	caddr_t		rb_txbuf;	/* Transmit buffers */
	caddr_t		rb_rxbuf;	/* Receive buffers */
	int		rb_ntbuf;	/* # of transmit buffers */
	int		rb_nrbuf;	/* # of receive buffers */

	/* Ring Descriptor state */
	int	rb_tdhead, rb_tdtail;
	int	rb_rdtail;
	int	rb_td_nbusy;
a85 6
#if notused
	void		(*sc_copytobuf) __P((struct hme_softc *,
					     void *, void *, size_t));
	void		(*sc_copyfrombuf) __P((struct hme_softc *,
					      void *, void *, size_t));
#endif
d95 3
a97 2
	int	sc_tx_cnt;
	struct hme_sxd sc_txd[_HME_NDESC], sc_rxd[_HME_NDESC];
@


1.1
log
@bus independent part of hme driver from netbsd
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 7
d106 2
a107 3
#if NRND > 0
	rndsource_element_t	rnd_source;
#endif
@

