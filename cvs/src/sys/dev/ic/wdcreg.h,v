head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.42
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.44
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.38
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.40
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.32
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.36
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.34
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.30
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.28
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.24
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.26
	OPENBSD_5_0:1.16.0.22
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.20
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.18
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.14
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.16
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.12
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.10
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.8
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.6
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.4
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.2
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.15.0.2
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.4.0.6
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.7
	UBC:1.4.0.4
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.2
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.16
date	2006.05.07.21.15.47;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2005.12.10.11.45.43;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2005.08.27.14.08.38;	author jsg;	state Exp;
branches;
next	1.13;

1.13
date	2004.09.24.07.05.44;	author grange;	state Exp;
branches;
next	1.12;

1.12
date	2004.04.28.17.21.16;	author grange;	state Exp;
branches;
next	1.11;

1.11
date	2004.01.23.20.48.33;	author grange;	state Exp;
branches;
next	1.10;

1.10
date	2003.10.16.14.15.41;	author grange;	state Exp;
branches;
next	1.9;

1.9
date	2003.09.28.21.01.43;	author grange;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.28.02;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.06.15.10.59.06;	author gluk;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.02.01.37.22;	author csapuntz;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.03.09.18.46;	author gluk;	state Exp;
branches;
next	1.4;

1.4
date	2001.04.30.20.53.53;	author csapuntz;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2001.03.23.02.16.41;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.11.17.01.22.56;	author csapuntz;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	99.07.18.21.25.16;	author csapuntz;	state Exp;
branches;
next	;

1.2.2.1
date	2001.05.14.22.24.24;	author niklas;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.07.04.10.41.18;	author niklas;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2003.03.28.00.38.15;	author niklas;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2003.06.07.11.02.29;	author ho;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	2004.02.19.10.56.21;	author niklas;	state Exp;
branches;
next	1.2.2.6;

1.2.2.6
date	2004.06.05.23.12.44;	author niklas;	state Exp;
branches;
next	;

1.4.4.1
date	2002.06.11.03.42.20;	author art;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	2002.10.29.00.33.26;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Fix cut'n'paste abuse in previous typo fix; spotted by Constantine A. Murenin,
thanks!
@
text
@/*      $OpenBSD: wdcreg.h,v 1.15 2005/12/10 11:45:43 miod Exp $     */
/*	$NetBSD: wdcreg.h,v 1.22 1999/03/07 14:02:54 bouyer Exp $	*/

/*-
 * Copyright (c) 1991 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)wdreg.h	7.1 (Berkeley) 5/9/91
 */

#ifndef _DEV_IC_WDCREG_H_
#define _DEV_IC_WDCREG_H_

/*
 * Controller register (wdr_ctlr)
 */
#define WDCTL_4BIT	0x08	/* use four head bits (wd1003) */
#define WDCTL_RST	0x04	/* reset the controller */
#define WDCTL_IDS	0x02	/* disable controller interrupts */

/*
 * Status bits.
 */
#define WDCS_BSY	0x80	/* busy */
#define WDCS_DRDY	0x40	/* drive ready */
#define WDCS_DWF	0x20	/* drive write fault */
#define WDCS_DSC	0x10	/* drive seek complete */
#define WDCS_DRQ	0x08	/* data request */
#define WDCS_CORR	0x04	/* corrected data */
#define WDCS_IDX	0x02	/* index */
#define WDCS_ERR	0x01	/* error */
#define WDCS_BITS	"\020\010BSY\007DRDY\006DWF\005DSC\004DRQ\003CORR\002IDX\001ERR"

/*
 * Error bits.
 */
#define WDCE_BBK	0x80	/* bad block detected */
#define WDCE_CRC	0x80	/* CRC error (Ultra-DMA only) */
#define WDCE_UNC	0x40	/* uncorrectable data error */
#define WDCE_MC		0x20	/* media changed */
#define WDCE_IDNF	0x10	/* id not found */
#define WDCE_MCR	0x08	/* media change requested */
#define WDCE_ABRT	0x04	/* aborted command */
#define WDCE_TK0NF	0x02	/* track 0 not found */
#define WDCE_AMNF	0x01	/* address mark not found */

/*
 * Commands for Disk Controller.
 */
#define WDCC_NOP	0x00	/* NOP - Always fail with "aborted command" */
#define WDCC_RECAL	0x10	/* disk restore code -- resets cntlr */

#define WDCC_READ	0x20	/* disk read code */
#define WDCC_WRITE	0x30	/* disk write code */
#define WDCC__LONG	0x02	/* modifier -- access ecc bytes */
#define WDCC__NORETRY	0x01	/* modifier -- no retries */

#define WDCC_FORMAT	0x50	/* disk format code */
#define WDCC_DIAGNOSE	0x90	/* controller diagnostic */
#define WDCC_IDP	0x91	/* initialize drive parameters */

#define WDCC_READMULTI	0xc4	/* read multiple */
#define WDCC_WRITEMULTI	0xc5	/* write multiple */
#define WDCC_SETMULTI	0xc6	/* set multiple mode */

#define WDCC_READDMA	0xc8	/* read with DMA */
#define WDCC_WRITEDMA	0xca	/* write with DMA */

#define WDCC_ACKMC	0xdb	/* acknowledge media change */
#define WDCC_LOCK	0xde	/* lock drawer */
#define WDCC_UNLOCK	0xdf	/* unlock drawer */

#define WDCC_FLUSHCACHE	0xe7	/* Flush cache */
#define WDCC_IDENTIFY	0xec	/* read parameters from controller */
#define SET_FEATURES	0xef	/* set features */

#define WDCC_IDLE	0xe3	/* set idle timer & enter idle mode */
#define WDCC_IDLE_IMMED	0xe1	/* enter idle mode */
#define WDCC_SLEEP	0xe6	/* enter sleep mode */
#define WDCC_STANDBY	0xe2	/* set standby timer & enter standby mode */
#define WDCC_STANDBY_IMMED 0xe0	/* enter standby mode */
#define WDCC_CHECK_PWR	0xe5	/* check power mode */

#define WDCC_READ_EXT		0x24 /* read 48-bit addressing */
#define WDCC_WRITE_EXT		0x34 /* write 48-bit addressing */

#define WDCC_READMULTI_EXT	0x29 /* read multiple 48-bit addressing */
#define WDCC_WRITEMULTI_EXT	0x39 /* write multiple 48-bit addressing */

#define WDCC_READDMA_EXT	0x25 /* read 48-bit addressing with DMA */
#define WDCC_WRITEDMA_EXT	0x35 /* write 48-bit addressing with DMA */

#define WDCC_FLUSHCACHE_EXT	0xea /* 48-bit addressing flush cache */

/* security mode commands */
#define WDCC_SEC_SET_PASSWORD		0xf1 /* set user or master password */
#define WDCC_SEC_UNLOCK			0xf2 /* authenticate */
#define WDCC_SEC_ERASE_PREPARE		0xf3 
#define WDCC_SEC_ERASE_UNIT		0xf4 /* erase all user data */
#define WDCC_SEC_FREEZE_LOCK		0xf5 /* prevent password changes */
#define WDCC_SEC_DISABLE_PASSWORD	0xf6

/* Subcommands for SET_FEATURES (features register ) */
#define WDSF_8BIT_PIO_EN	0x01 /* Enable 8bit PIO (CFA featureset) */
#define WDSF_EN_WR_CACHE	0x02
#define WDSF_SET_MODE		0x03
#define WDSF_REASSIGN_EN	0x04 /* Obsolete in ATA-6 */
#define WDSF_APM_EN		0x05 /* Enable Adv. Power Management */
#define WDSF_PUIS_EN		0x06 /* Enable Power-Up In Standby */
#define WDSF_PUIS_SPINUP	0x07 /* Power-Up In Standby spin-up */
#define WDSF_CFA_MODE1_EN	0x0A /* Enable CFA power mode 1 */
#define WDSF_RMSN_DS		0x31 /* Disable Removable Media Status */
#define WDSF_RETRY_DS		0x33 /* Obsolete in ATA-6 */
#define WDSF_AAM_EN		0x42 /* Enable Autom. Acoustic Management */
#define WDSF_SET_CACHE_SGMT	0x54 /* Obsolete in ATA-6 */
#define WDSF_READAHEAD_DS	0x55 /* Disable read look-ahead */
#define WDSF_RLSE_EN		0x5D /* Enable release interrupt */
#define WDSF_SRV_EN		0x5E /* Enable SERVICE interrupt */
#define WDSF_POD_DS		0x66
#define WDSF_ECC_DS		0x77
#define WDSF_8BIT_PIO_DS	0x81 /* Disable 8bit PIO (CFA featureset) */
#define WDSF_WRITE_CACHE_DS	0x82
#define WDSF_REASSIGN_DS	0x84
#define WDSF_APM_DS		0x85 /* Disable Adv. Power Management */
#define WDSF_PUIS_DS		0x86 /* Disable Power-Up In Standby */
#define WDSF_ECC_EN		0x88
#define WDSF_CFA_MODE1_DS	0x8A /* Disable CFA power mode 1 */
#define WDSF_RMSN_EN		0x95 /* Enable Removable Media Status */
#define WDSF_RETRY_EN		0x99 /* Obsolete in ATA-6 */
#define WDSF_SET_CURRENT	0x9A /* Obsolete in ATA-6 */
#define WDSF_READAHEAD_EN	0xAA
#define WDSF_PREFETCH_SET	0xAB /* Obsolete in ATA-6 */
#define WDSF_AAM_DS		0xC2 /* Disable Autom. Acoustic Management */
#define WDSF_POD_EN		0xCC
#define WDSF_RLSE_DS		0xDD /* Disable release interrupt */
#define WDSF_SRV_DS		0xDE /* Disable SERVICE interrupt */

/* parameters uploaded to device/heads register */
#define WDSD_IBM	0xa0	/* forced to 512 byte sector, ecc */
#define WDSD_CHS	0x00	/* cylinder/head/sector addressing */
#define WDSD_LBA	0x40	/* logical block addressing */

/* Commands for ATAPI devices */
#define ATAPI_CHECK_POWER_MODE	0xe5
#define ATAPI_EXEC_DRIVE_DIAGS	0x90
#define ATAPI_IDLE_IMMEDIATE	0xe1
#define ATAPI_NOP		0x00
#define ATAPI_PKT_CMD		0xa0
#define ATAPI_IDENTIFY_DEVICE	0xa1
#define ATAPI_SOFT_RESET	0x08
#define ATAPI_DEVICE_RESET	0x08 /* ATA/ATAPI-5 name for soft reset */
#define ATAPI_SLEEP		0xe6
#define ATAPI_STANDBY_IMMEDIATE	0xe0
#define ATAPI_SMART		0xB0 /* SMART operations */
#define ATAPI_SETMAX		0xF9 /* Set Max Address */
#define ATAPI_WRITEEXT		0x34 /* Write sectors Ext */
#define ATAPI_SETMAXEXT		0x37 /* Set Max Address Ext */
#define ATAPI_WRITEMULTIEXT	0x39 /* Write Multi Ext */

/* Bytes used by ATAPI_PACKET_COMMAND ( feature register) */
#define ATAPI_PKT_CMD_FTRE_DMA	0x01
#define ATAPI_PKT_CMD_FTRE_OVL	0x02

/* ireason */
#define WDCI_CMD	0x01 /* command(1) or data(0) */
#define WDCI_IN		0x02 /* transfer to(1) or from(0) the host */
#define WDCI_RELEASE	0x04 /* bus released until completion */

#define PHASE_CMDOUT	(WDCS_DRQ | WDCI_CMD)
#define PHASE_DATAIN	(WDCS_DRQ | WDCI_IN)
#define PHASE_DATAOUT	WDCS_DRQ
#define PHASE_COMPLETED	(WDCI_IN | WDCI_CMD)
#define PHASE_ABORTED	0

#endif	/* !_DEV_IC_WDCREG_H_ */
@


1.15
log
@{en,re}trys -> {en,re}tries; eyeballed by jmc@@
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.14 2005/08/27 14:08:38 jsg Exp $     */
d83 1
a83 1
#define WDCC__NORETRY	0x01	/* modifier -- no entries */
@


1.14
log
@Define some ATA security feature set commands.
ok grange@@ deraadt@@
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.13 2004/09/24 07:05:44 grange Exp $     */
d83 1
a83 1
#define WDCC__NORETRY	0x01	/* modifier -- no retrys */
@


1.13
log
@Multiple inclusion protection.
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.12 2004/04/28 17:21:16 grange Exp $     */
d121 8
@


1.12
log
@Add FLUSH CACHE EXT command from ATA/ATAPI-6 spec.
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.11 2004/01/23 20:48:33 grange Exp $     */
d38 3
d193 2
@


1.11
log
@Use %b to display status register, this will make bug reports more
informative. Also convert WDCS_BITS string to caps.
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.10 2003/10/16 14:15:41 grange Exp $     */
d116 2
@


1.10
log
@spaces/tabs cleanup
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.9 2003/09/28 21:01:43 grange Exp $     */
d56 1
a56 1
#define WDCS_BITS	"\020\010bsy\007drdy\006dwf\005dsc\004drq\003corr\002idx\001err"
@


1.9
log
@kill trailing spaces, no functional changes
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.8 2003/06/02 23:28:02 millert Exp $     */
d41 3
a43 6
#define  WDCTL_4BIT	 0x08	/* use four head bits (wd1003) */
#define  WDCTL_RST	 0x04	/* reset the controller */
#define  WDCTL_IDS	 0x02	/* disable controller interrupts */
#if 0 /* NOT MAPPED; fd uses this register on PCs */
#define	wd_digin	1	/* disk controller input (R) */
#endif
d48 8
a55 8
#define	WDCS_BSY	0x80	/* busy */
#define	WDCS_DRDY	0x40	/* drive ready */
#define	WDCS_DWF	0x20	/* drive write fault */
#define	WDCS_DSC	0x10	/* drive seek complete */
#define	WDCS_DRQ	0x08	/* data request */
#define	WDCS_CORR	0x04	/* corrected data */
#define	WDCS_IDX	0x02	/* index */
#define	WDCS_ERR	0x01	/* error */
d61 9
a69 9
#define	WDCE_BBK	0x80	/* bad block detected */
#define	WDCE_CRC	0x80	/* CRC error (Ultra-DMA only) */
#define	WDCE_UNC	0x40	/* uncorrectable data error */
#define	WDCE_MC		0x20	/* media changed */
#define	WDCE_IDNF	0x10	/* id not found */
#define	WDCE_MCR	0x08	/* media change requested */
#define	WDCE_ABRT	0x04	/* aborted command */
#define	WDCE_TK0NF	0x02	/* track 0 not found */
#define	WDCE_AMNF	0x01	/* address mark not found */
d75 1
a75 1
#define	WDCC_RECAL	0x10	/* disk restore code -- resets cntlr */
d77 23
a99 23
#define	WDCC_READ	0x20	/* disk read code */
#define	WDCC_WRITE	0x30	/* disk write code */
#define	 WDCC__LONG	 0x02	 /* modifier -- access ecc bytes */
#define	 WDCC__NORETRY	 0x01	 /* modifier -- no retrys */

#define	WDCC_FORMAT	0x50	/* disk format code */
#define	WDCC_DIAGNOSE	0x90	/* controller diagnostic */
#define	WDCC_IDP	0x91	/* initialize drive parameters */

#define	WDCC_READMULTI	0xc4	/* read multiple */
#define	WDCC_WRITEMULTI	0xc5	/* write multiple */
#define	WDCC_SETMULTI	0xc6	/* set multiple mode */

#define	WDCC_READDMA	0xc8	/* read with DMA */
#define	WDCC_WRITEDMA	0xca	/* write with DMA */

#define	WDCC_ACKMC	0xdb	/* acknowledge media change */
#define	WDCC_LOCK	0xde	/* lock drawer */
#define	WDCC_UNLOCK	0xdf	/* unlock drawer */

#define	WDCC_FLUSHCACHE	0xe7	/* Flush cache */
#define	WDCC_IDENTIFY	0xec	/* read parameters from controller */
#define	SET_FEATURES	0xef	/* set features */
d120 1
a120 1
#define WDSF_SET_MODE    	0x03
d148 1
a148 1
#define WDSF_POD_EN             0xCC
d153 3
a155 3
#define	WDSD_IBM	0xa0	/* forced to 512 byte sector, ecc */
#define	WDSD_CHS	0x00	/* cylinder/head/sector addressing */
#define	WDSD_LBA	0x40	/* logical block addressing */
d165 1
a165 1
#define ATAPI_DEVICE_RESET      0x08 /* ATA/ATAPI-5 name for soft reset */
d175 2
a176 2
#define ATAPI_PKT_CMD_FTRE_DMA 0x01
#define ATAPI_PKT_CMD_FTRE_OVL 0x02
d179 9
a187 11
#define WDCI_CMD         0x01    /* command(1) or data(0) */
#define WDCI_IN          0x02    /* transfer to(1) or from(0) the host */
#define WDCI_RELEASE     0x04    /* bus released until completion */

#define PHASE_CMDOUT    (WDCS_DRQ | WDCI_CMD)
#define PHASE_DATAIN    (WDCS_DRQ | WDCI_IN)
#define PHASE_DATAOUT   WDCS_DRQ
#define PHASE_COMPLETED (WDCI_IN | WDCI_CMD)
#define PHASE_ABORTED   0


@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.7 2002/06/15 10:59:06 gluk Exp $     */
d38 1
a38 1
/* 
d40 1
a40 1
 */ 
d161 1
a161 1
#define ATAPI_CHECK_POWER_MODE	0xe5 
d165 2
a166 2
#define ATAPI_PKT_CMD		0xa0 
#define ATAPI_IDENTIFY_DEVICE	0xa1 
d186 1
a186 1
#define PHASE_CMDOUT    (WDCS_DRQ | WDCI_CMD)  
@


1.7
log
@Move ATA SMART defines to atactl.
No kernel parts use this constants.

From Alexander Yurchenko <grange@@rt.mipt.ru>
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.6 2002/06/02 01:37:22 csapuntz Exp $     */
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@Fix ordering and typo problem
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.5 2002/05/03 09:18:46 gluk Exp $     */
a179 11

/* SubCommands for SMART operations */
#define ATAPI_SMART_READ	0xD0 /* SMART read data */
#define ATAPI_SMART_AUTOSAVE	0xD2 /* SMART en-/disable attr. autosave */
#define ATAPI_SMART_SAVE	0xD3 /* SMART save attributes */
#define ATAPI_SMART_OFFLINE	0xD4 /* SMART execute offline immediately */
#define ATAPI_SMART_READLOG	0xD5 /* SMART read log */
#define ATAPI_SMART_WRITELOG	0xD6 /* SMART write log */
#define ATAPI_SMART_EN		0xD8 /* SMART enable operations */
#define ATAPI_SMART_DS		0xD9 /* SMART disable operations */
#define ATAPI_SMART_STATUS	0xDA /* SMART return status */
@


1.5
log
@LBA48 support.
Adopted from NetBSD by Alexander Yurchenko <grange@@openbsd.ru>.

costa@@ ok.
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.4 2001/04/30 20:53:53 csapuntz Exp $     */
d188 1
a189 1
#define ATAPI_SMART_EN		0xD8 /* SMART disable operations */
@


1.4
log
@

Added ATAPI_DEVICE_RESET command
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.3 2001/03/23 02:16:41 deraadt Exp $     */
d114 9
@


1.4.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.4 2001/04/30 20:53:53 csapuntz Exp $     */
a114 9
#define WDCC_READ_EXT		0x24 /* read 48-bit addressing */
#define WDCC_WRITE_EXT		0x34 /* write 48-bit addressing */

#define WDCC_READMULTI_EXT	0x29 /* read multiple 48-bit addressing */
#define WDCC_WRITEMULTI_EXT	0x39 /* write multiple 48-bit addressing */

#define WDCC_READDMA_EXT	0x25 /* read 48-bit addressing with DMA */
#define WDCC_WRITEDMA_EXT	0x35 /* write 48-bit addressing with DMA */

a178 1
#define ATAPI_SMART_EN		0xD8 /* SMART enable operations */
d180 1
@


1.4.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.4.4.1 2002/06/11 03:42:20 art Exp $     */
d180 11
@


1.3
log
@atactl SMART support; wouter@@yourcreativesolutions.nl
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.2 1999/11/17 01:22:56 csapuntz Exp $     */
d163 1
@


1.2
log
@

New interface to ATA registers that goes through the lower-level device
driver (pciide, wdc, etc.)

Remove #define WDCDEBUG from top of files

More fixes to ATAPISCSI logic:

Not all devices transition correctly between phases. Devices are supposed
to keep BSY high until they've set the registers to the next sensible
state. Some devices drop BSY and leave the registers in an old or
nonsense state. Our polling code is extremely sensitive to this
(though an early itnerrupt could also observe this). So, if the device is
in an unexpected state, the new polling code waits for a while in the hope
that it enters a better state.

This seems to fix many of the problems reported.

Also, there was a horrible bug which would cause sense to fail on a ATAPI
command that sent data to the drive
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.1 1999/07/18 21:25:16 csapuntz Exp $     */
d116 1
d119 12
a130 4
#define WDSF_REASSIGN_EN	0x04
#define WDSF_RETRY_DS		0x33
#define WDSF_SET_CACHE_SGMT	0x54
#define WDSF_READAHEAD_DS	0x55
d133 1
d136 2
d139 4
a142 2
#define WDSF_RETRY_EN		0x99
#define WDSF_SET_CURRENT	0x9A
d144 2
a145 1
#define WDSF_PREFETCH_SET	0xAB
d147 2
d165 16
@


1.2.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.3 2001/03/23 02:16:41 deraadt Exp $     */
a115 1
#define WDSF_8BIT_PIO_EN	0x01 /* Enable 8bit PIO (CFA featureset) */
d118 4
a121 12
#define WDSF_REASSIGN_EN	0x04 /* Obsolete in ATA-6 */
#define WDSF_APM_EN		0x05 /* Enable Adv. Power Management */
#define WDSF_PUIS_EN		0x06 /* Enable Power-Up In Standby */
#define WDSF_PUIS_SPINUP	0x07 /* Power-Up In Standby spin-up */
#define WDSF_CFA_MODE1_EN	0x0A /* Enable CFA power mode 1 */
#define WDSF_RMSN_DS		0x31 /* Disable Removable Media Status */
#define WDSF_RETRY_DS		0x33 /* Obsolete in ATA-6 */
#define WDSF_AAM_EN		0x42 /* Enable Autom. Acoustic Management */
#define WDSF_SET_CACHE_SGMT	0x54 /* Obsolete in ATA-6 */
#define WDSF_READAHEAD_DS	0x55 /* Disable read look-ahead */
#define WDSF_RLSE_EN		0x5D /* Enable release interrupt */
#define WDSF_SRV_EN		0x5E /* Enable SERVICE interrupt */
a123 1
#define WDSF_8BIT_PIO_DS	0x81 /* Disable 8bit PIO (CFA featureset) */
a125 2
#define WDSF_APM_DS		0x85 /* Disable Adv. Power Management */
#define WDSF_PUIS_DS		0x86 /* Disable Power-Up In Standby */
d127 2
a128 4
#define WDSF_CFA_MODE1_DS	0x8A /* Disable CFA power mode 1 */
#define WDSF_RMSN_EN		0x95 /* Enable Removable Media Status */
#define WDSF_RETRY_EN		0x99 /* Obsolete in ATA-6 */
#define WDSF_SET_CURRENT	0x9A /* Obsolete in ATA-6 */
d130 1
a130 2
#define WDSF_PREFETCH_SET	0xAB /* Obsolete in ATA-6 */
#define WDSF_AAM_DS		0xC2 /* Disable Autom. Acoustic Management */
a131 2
#define WDSF_RLSE_DS		0xDD /* Disable release interrupt */
#define WDSF_SRV_DS		0xDE /* Disable SERVICE interrupt */
a147 16
#define ATAPI_SMART		0xB0 /* SMART operations */
#define ATAPI_SETMAX		0xF9 /* Set Max Address */
#define ATAPI_WRITEEXT		0x34 /* Write sectors Ext */
#define ATAPI_SETMAXEXT		0x37 /* Set Max Address Ext */
#define ATAPI_WRITEMULTIEXT	0x39 /* Write Multi Ext */

/* SubCommands for SMART operations */
#define ATAPI_SMART_READ	0xD0 /* SMART read data */
#define ATAPI_SMART_AUTOSAVE	0xD2 /* SMART en-/disable attr. autosave */
#define ATAPI_SMART_SAVE	0xD3 /* SMART save attributes */
#define ATAPI_SMART_OFFLINE	0xD4 /* SMART execute offline immediately */
#define ATAPI_SMART_READLOG	0xD5 /* SMART read log */
#define ATAPI_SMART_WRITELOG	0xD6 /* SMART write log */
#define ATAPI_SMART_DS		0xD9 /* SMART disable operations */
#define ATAPI_SMART_EN		0xD8 /* SMART disable operations */
#define ATAPI_SMART_STATUS	0xDA /* SMART return status */
@


1.2.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.2.2.1 2001/05/14 22:24:24 niklas Exp $     */
a162 1
#define ATAPI_DEVICE_RESET      0x08 /* ATA/ATAPI-5 name for soft reset */
@


1.2.2.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*      $OpenBSD$     */
a114 9
#define WDCC_READ_EXT		0x24 /* read 48-bit addressing */
#define WDCC_WRITE_EXT		0x34 /* write 48-bit addressing */

#define WDCC_READMULTI_EXT	0x29 /* read multiple 48-bit addressing */
#define WDCC_WRITEMULTI_EXT	0x39 /* write multiple 48-bit addressing */

#define WDCC_READDMA_EXT	0x25 /* read 48-bit addressing with DMA */
#define WDCC_WRITEDMA_EXT	0x35 /* write 48-bit addressing with DMA */

d171 11
@


1.2.2.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*      $OpenBSD: wdcreg.h,v 1.2.2.3 2003/03/28 00:38:15 niklas Exp $     */
d19 5
a23 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2.2.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*      $OpenBSD$     */
d38 1
a38 1
/*
d40 7
a46 4
 */
#define WDCTL_4BIT	0x08	/* use four head bits (wd1003) */
#define WDCTL_RST	0x04	/* reset the controller */
#define WDCTL_IDS	0x02	/* disable controller interrupts */
d51 9
a59 9
#define WDCS_BSY	0x80	/* busy */
#define WDCS_DRDY	0x40	/* drive ready */
#define WDCS_DWF	0x20	/* drive write fault */
#define WDCS_DSC	0x10	/* drive seek complete */
#define WDCS_DRQ	0x08	/* data request */
#define WDCS_CORR	0x04	/* corrected data */
#define WDCS_IDX	0x02	/* index */
#define WDCS_ERR	0x01	/* error */
#define WDCS_BITS	"\020\010BSY\007DRDY\006DWF\005DSC\004DRQ\003CORR\002IDX\001ERR"
d64 9
a72 9
#define WDCE_BBK	0x80	/* bad block detected */
#define WDCE_CRC	0x80	/* CRC error (Ultra-DMA only) */
#define WDCE_UNC	0x40	/* uncorrectable data error */
#define WDCE_MC		0x20	/* media changed */
#define WDCE_IDNF	0x10	/* id not found */
#define WDCE_MCR	0x08	/* media change requested */
#define WDCE_ABRT	0x04	/* aborted command */
#define WDCE_TK0NF	0x02	/* track 0 not found */
#define WDCE_AMNF	0x01	/* address mark not found */
d78 1
a78 1
#define WDCC_RECAL	0x10	/* disk restore code -- resets cntlr */
d80 23
a102 23
#define WDCC_READ	0x20	/* disk read code */
#define WDCC_WRITE	0x30	/* disk write code */
#define WDCC__LONG	0x02	/* modifier -- access ecc bytes */
#define WDCC__NORETRY	0x01	/* modifier -- no retrys */

#define WDCC_FORMAT	0x50	/* disk format code */
#define WDCC_DIAGNOSE	0x90	/* controller diagnostic */
#define WDCC_IDP	0x91	/* initialize drive parameters */

#define WDCC_READMULTI	0xc4	/* read multiple */
#define WDCC_WRITEMULTI	0xc5	/* write multiple */
#define WDCC_SETMULTI	0xc6	/* set multiple mode */

#define WDCC_READDMA	0xc8	/* read with DMA */
#define WDCC_WRITEDMA	0xca	/* write with DMA */

#define WDCC_ACKMC	0xdb	/* acknowledge media change */
#define WDCC_LOCK	0xde	/* lock drawer */
#define WDCC_UNLOCK	0xdf	/* unlock drawer */

#define WDCC_FLUSHCACHE	0xe7	/* Flush cache */
#define WDCC_IDENTIFY	0xec	/* read parameters from controller */
#define SET_FEATURES	0xef	/* set features */
d123 1
a123 1
#define WDSF_SET_MODE		0x03
d151 1
a151 1
#define WDSF_POD_EN		0xCC
d156 3
a158 3
#define WDSD_IBM	0xa0	/* forced to 512 byte sector, ecc */
#define WDSD_CHS	0x00	/* cylinder/head/sector addressing */
#define WDSD_LBA	0x40	/* logical block addressing */
d161 1
a161 1
#define ATAPI_CHECK_POWER_MODE	0xe5
d165 2
a166 2
#define ATAPI_PKT_CMD		0xa0
#define ATAPI_IDENTIFY_DEVICE	0xa1
d168 1
a168 1
#define ATAPI_DEVICE_RESET	0x08 /* ATA/ATAPI-5 name for soft reset */
d178 2
a179 2
#define ATAPI_PKT_CMD_FTRE_DMA	0x01
#define ATAPI_PKT_CMD_FTRE_OVL	0x02
d182 11
a192 9
#define WDCI_CMD	0x01 /* command(1) or data(0) */
#define WDCI_IN		0x02 /* transfer to(1) or from(0) the host */
#define WDCI_RELEASE	0x04 /* bus released until completion */

#define PHASE_CMDOUT	(WDCS_DRQ | WDCI_CMD)
#define PHASE_DATAIN	(WDCS_DRQ | WDCI_IN)
#define PHASE_DATAOUT	WDCS_DRQ
#define PHASE_COMPLETED	(WDCI_IN | WDCI_CMD)
#define PHASE_ABORTED	0
@


1.2.2.6
log
@Merge with the trunk
@
text
@a116 2
#define WDCC_FLUSHCACHE_EXT	0xea /* 48-bit addressing flush cache */

@


1.1
log
@

Import of NetBSD ATA/IDE stuff.

Introduction of home-grown

To enable this stuff in your configuration, look at the NEWATA conf file
and go through

dev/isa/files.isa
dev/pci/files.pci
conf/files
arch/i386/conf/files.i386

and follow the instructions on commenting/uncommenting stuff
@
text
@d1 1
a1 1
/*      $OpenBSD: $     */
d42 3
a44 21
/*
 * Disk Controller register definitions.
 */

/* offsets of registers in the 'regular' register region */
#define	wd_data		0	/* data register (R/W - 16 bits) */
#define	wd_error	1	/* error register (R) */
#define	wd_precomp	1	/* write precompensation (W) */
#define	wd_features	1	/* features (W), same as wd_precomp */
#define	wd_seccnt	2	/* sector count (R/W) */
#define	wd_ireason	2	/* interrupt reason (R/W) (for atapi) */
#define	wd_sector	3	/* first sector number (R/W) */
#define	wd_cyl_lo	4	/* cylinder address, low byte (R/W) */
#define	wd_cyl_hi	5	/* cylinder address, high byte (R/W) */
#define	wd_sdh		6	/* sector size/drive/head (R/W) */
#define	wd_command	7	/* command register (W)	*/
#define	wd_status	7	/* immediate status (R)	*/

/* offsets of registers in the auxiliary register region */
#define	wd_aux_altsts	0	/* alternate fixed disk status (R) */
#define	wd_aux_ctlr	0	/* fixed disk controller control (W) */
d163 1
@

