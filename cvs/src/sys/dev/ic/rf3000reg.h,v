head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.32
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.30
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.24
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.26
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.18
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.22
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.20
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.16
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.14
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.12
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.24
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.20
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.18
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.16
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.14
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.12
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.10
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.8
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2009.08.16.18.03.48;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.25.00.15.47;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.22.23.55.24;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove use of BITS and BIT macros.
@
text
@/*	$OpenBSD: rf3000reg.h,v 1.2 2004/07/25 00:15:47 millert Exp $	*/
/*      $NetBSD: rf3000reg.h,v 1.3 2004/07/21 04:25:22 dyoung Exp $        */

/*
 * Copyright (c) 2004 David Young.  All rights reserved.
 *
 * This code was written by David Young.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the author nor the names of any co-contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY David Young ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL David
 * Young BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
 * OF SUCH DAMAGE.
 */

#ifndef _DEV_IC_RF3000REG_H_
#define	_DEV_IC_RF3000REG_H_

/*
 * Serial bus format for RF Microdevices RF3000 spread-spectrum
 * baseband modem.
 */
#define	RF3000_TWI_DATA_MASK	0xff
#define	RF3000_TWI_ADDR_MASK	0x7f
#define	RF3000_TWI_AI		0x80	/* auto-increment */

/*
 * Registers for RFMD RF3000.
 */
#define RF3000_CTL		0x01		/* modem control */
#define		RF3000_CTL_MODE_MASK		0xf0
#define		RF3000_CTL_MODE_1MBPS		0
#define		RF3000_CTL_MODE_RSVD0		1
#define		RF3000_CTL_MODE_2MBPS		2
#define		RF3000_CTL_MODE_2MBPS_SHORT	3
#define		RF3000_CTL_MODE_5MBPS		4
#define		RF3000_CTL_MODE_5MBPS_SHORT	5
#define		RF3000_CTL_MODE_11MBPS		6
#define		RF3000_CTL_MODE_11MBPS_SHORT	7
#define		RF3000_CTL_MODE_BPSK		8
#define		RF3000_CTL_MODE_QPSK		9
#define		RF3000_CTL_MODE_RSVD1		10
#define		RF3000_CTL_MODE_RSVD2		11
#define RF3000_RXSTAT		RF3000_CTL	/* RX status */
#define		RF3000_RXSTAT_SHORTPRE		(1<<3)	/* 1: short preamble */
#define		RF3000_RXSTAT_ACQ		(1<<2)	/* 1: acquired */
#define		RF3000_RXSTAT_SFD		(1<<1)	/* 1: SFD detected */
#define		RF3000_RXSTAT_CRC		(1<<0)	/* 1: CRC invalid */
#define RF3000_CCACTL		0x02		/* CCA control */
/* CCA mode */
#define		RF3000_CCACTL_MODE_MASK		0xc0
#define		RF3000_CCACTL_MODE_RSSIT	0	/* RSSI threshold */
#define		RF3000_CCACTL_MODE_ACQ		1	/* acquisition */
#define		RF3000_CCACTL_MODE_BOTH		2	/* threshold or acq. */
/* RSSI threshold for CCA */
#define		RF3000_CCACTL_RSSIT_MASK	0x3f
#define RF3000_DIVCTL		0x03		/* diversity control */
#define		RF3000_DIVCTL_ENABLE		(1<<7)	/* enable diversity */
#define		RF3000_DIVCTL_ANTSEL		(1<<6)	/* if ENABLE = 0, set
							 * ANT SEL
							 */
#define RF3000_RSSI		RF3000_DIVCTL	/* RSSI value */
#define		RF3000_RSSI_MASK		0x3f
#define RF3000_GAINCTL		0x11		/* TX variable gain control */
#define		RF3000_GAINCTL_TXVGC_MASK	0xfc
#define		RF3000_GAINCTL_SCRAMBLER	(1<<1)
#define	RF3000_LOGAINCAL	0x14		/* low gain calibration */
#define		RF3000_LOGAINCAL_CAL_MASK	0x3f
#define	RF3000_HIGAINCAL	0x15		/* high gain calibration */
#define		RF3000_HIGAINCAL_CAL_MASK	0x3f
#define		RF3000_HIGAINCAL_DSSSPAD	(1<<6)	/* 6dB gain pad for DSSS
							 * modes (meaning?)
							 */
#define RF3000_OPTIONS1		0x1C		/* Options Register 1 */
/* Saturation threshold is 4 + offset, where -3 <= offset <= 3.
 * SAT_THRESH is the absolute value, SAT_THRESH_SIGN is the sign.
 */
#define		RF3000_OPTIONS1_SAT_THRESH_SIGN	(1<<7)
#define		RF3000_OPTIONS1_SAT_THRESH	0x60
#define		RF3000_OPTIONS1_ALTAGC		(1<<4)	/* 1: retrigger AGC
 							 * algorithm on ADC
 							 * saturation
							 */
#define		RF3000_OPTIONS1_ALTBUS		(1<<3)	/* 1: enable alternate
							 * Tx/Rx data bus
							 * interface.
							 */
#define		RF3000_OPTIONS1_RESERVED0_MASK	0x7/* 0 */

#define RF3000_OPTIONS2		0x1D		/* Options Register 2 */
/* 1: delay next AGC 2us instead of 1us after a 1->0 LNAGS-pin transition. */
#define		RF3000_OPTIONS2_LNAGS_DELAY	(1<<7)
#define		RF3000_OPTIONS2_RESERVED0_MASK	0x78	/* 0 */
/* Threshold for AGC re-trigger. 0: high count, 1: low count. */
#define		RF3000_OPTIONS2_RTG_THRESH	(1<<2)
#define		RF3000_OPTIONS2_RESERVED1_MASK	0x3	/* 0 */

#endif /* _DEV_IC_RF3000REG_H_ */
@


1.2
log
@Here is the serial bus format for the RF3000.  From NetBSD (dyoung)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 1
a50 1
#define		RF3000_CTL_MODE_MASK		BITS(7, 4)
d64 4
a67 4
#define		RF3000_RXSTAT_SHORTPRE		BIT(3)	/* 1: short preamble */
#define		RF3000_RXSTAT_ACQ		BIT(2)	/* 1: acquired */
#define		RF3000_RXSTAT_SFD		BIT(1)	/* 1: SFD detected */
#define		RF3000_RXSTAT_CRC		BIT(0)	/* 1: CRC invalid */
d70 1
a70 1
#define		RF3000_CCACTL_MODE_MASK		BITS(7, 6)
d75 1
a75 1
#define		RF3000_CCACTL_RSSIT_MASK	BITS(5, 0)
d77 2
a78 2
#define		RF3000_DIVCTL_ENABLE		BIT(7)	/* enable diversity */
#define		RF3000_DIVCTL_ANTSEL		BIT(6)	/* if ENABLE = 0, set
d82 1
a82 1
#define		RF3000_RSSI_MASK		BITS(5, 0)
d84 2
a85 2
#define		RF3000_GAINCTL_TXVGC_MASK	BITS(7, 2)
#define		RF3000_GAINCTL_SCRAMBLER	BIT(1)
d87 1
a87 1
#define		RF3000_LOGAINCAL_CAL_MASK	BITS(5, 0)
d89 2
a90 2
#define		RF3000_HIGAINCAL_CAL_MASK	BITS(5, 0)
#define		RF3000_HIGAINCAL_DSSSPAD	BIT(6)	/* 6dB gain pad for DSSS
d97 3
a99 3
#define		RF3000_OPTIONS1_SAT_THRESH_SIGN	BIT(7)
#define		RF3000_OPTIONS1_SAT_THRESH	BITS(6,5)
#define		RF3000_OPTIONS1_ALTAGC		BIT(4)	/* 1: retrigger AGC
d103 1
a103 1
#define		RF3000_OPTIONS1_ALTBUS		BIT(3)	/* 1: enable alternate
d107 1
a107 1
#define		RF3000_OPTIONS1_RESERVED0_MASK	BITS(2,0)/* 0 */
d111 2
a112 2
#define		RF3000_OPTIONS2_LNAGS_DELAY	BIT(7)
#define		RF3000_OPTIONS2_RESERVED0_MASK	BITS(6,3)	/* 0 */
d114 2
a115 2
#define		RF3000_OPTIONS2_RTG_THRESH	BIT(2)
#define		RF3000_OPTIONS2_RESERVED1_MASK	BITS(1,0)	/* 0 */
@


1.1
log
@atw(4) driver from NetBSD (dyoung).  Based in part on a port by
Matthew Gream.

Unfortunately, the adm8211 card I have with me does not work correctly
with the driver yet so real testing will have to wait until I get
my hands on an adm8211-based DWL-650 or something similar.
@
text
@d1 2
a2 1
/* $NetBSD */
d39 9
a47 1
 * Registers for RF Microdevices RF3000 spread-spectrum baseband modem.
d50 13
d64 4
a67 4
#define		RF3000_CTL_MODE_MASK		BITS(7, 4)
#define		RF3000_RXSTAT_ACQ		BIT(2)
#define		RF3000_RXSTAT_SFD		BIT(1)
#define		RF3000_RXSTAT_CRC		BIT(0)
@

