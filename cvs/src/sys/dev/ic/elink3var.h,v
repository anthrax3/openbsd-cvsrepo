head	1.19;
access;
symbols
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.19.0.32
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.30
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.24
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.26
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.18
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.22
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.20
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.16
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.14
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.10
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.12
	OPENBSD_5_0:1.19.0.8
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.6
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.4
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.2
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.18.0.32
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.28
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.26
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.24
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.22
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.18.0.20
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.18
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.16
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.14
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.12
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.18.0.10
	OPENBSD_3_6_BASE:1.18
	SMP_SYNC_A:1.18
	SMP_SYNC_B:1.18
	OPENBSD_3_5:1.18.0.8
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.18.0.6
	OPENBSD_3_4_BASE:1.18
	UBC_SYNC_A:1.18
	OPENBSD_3_3:1.18.0.4
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.18.0.2
	OPENBSD_3_2_BASE:1.18
	OPENBSD_3_1:1.17.0.2
	OPENBSD_3_1_BASE:1.17
	UBC_SYNC_B:1.18
	UBC:1.16.0.6
	UBC_BASE:1.16
	OPENBSD_3_0:1.16.0.4
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9_BASE:1.16
	OPENBSD_2_9:1.16.0.2
	OPENBSD_2_8:1.15.0.2
	OPENBSD_2_8_BASE:1.15
	OPENBSD_2_7:1.13.0.4
	OPENBSD_2_7_BASE:1.13
	SMP:1.13.0.2
	SMP_BASE:1.13
	kame_19991208:1.12
	OPENBSD_2_6:1.12.0.2
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.11.0.4
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.11.0.2
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.9.0.2
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4;
locks; strict;
comment	@ * @;


1.19
date	2009.11.23.16.36.22;	author claudio;	state Exp;
branches;
next	1.18;

1.18
date	2002.06.09.03.14.18;	author todd;	state Exp;
branches;
next	1.17;

1.17
date	2002.03.14.01.26.54;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2000.11.09.18.06.39;	author mickey;	state Exp;
branches
	1.16.6.1;
next	1.15;

1.15
date	2000.09.15.22.28.51;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2000.05.29.18.04.07;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.02.02.18.47.01;	author deraadt;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	99.07.26.12.31.44;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	98.09.19.10.08.05;	author maja;	state Exp;
branches;
next	1.10;

1.10
date	98.09.11.12.06.56;	author fgsch;	state Exp;
branches;
next	1.9;

1.9
date	97.10.30.23.58.18;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	97.07.30.11.12.23;	author niklas;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	96.11.28.23.27.51;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.10.31.01.01.29;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.10.12.23.38.55;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.05.26.00.27.00;	author deraadt;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	96.05.07.07.35.49;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.03.07.58.46;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.05.02.13.38.07;	author deraadt;	state Exp;
branches;
next	;

1.4.2.1
date	96.10.13.06.52.59;	author deraadt;	state Exp;
branches;
next	;

1.8.2.1
date	97.10.31.00.00.00;	author niklas;	state Exp;
branches;
next	;

1.13.2.1
date	2001.05.14.22.23.46;	author niklas;	state Exp;
branches;
next	1.13.2.2;

1.13.2.2
date	2002.03.28.11.51.00;	author niklas;	state Exp;
branches;
next	;

1.16.6.1
date	2002.06.11.03.42.18;	author art;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Bring elink3 at least a bit into the new world. It used to have some super
scary mbuf chache that caused massive problems. Now we just pre-allocate
empty mbuf cluster for later use. Diff mostly from deraadt@@ with some
minor changes by myself. Tested with pcmcia ep(4) by myself. OK deraadt@@
@
text
@/*	$OpenBSD: elink3var.h,v 1.18 2002/06/09 03:14:18 todd Exp $	*/
/*	$NetBSD: elink3var.h,v 1.12 1997/03/30 22:47:11 jonathan Exp $	*/

/*
 * Copyright (c) 1994 Herb Peyerl <hpeyerl@@beer.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Herb Peyerl.
 * 4. The name of Herb Peyerl may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Ethernet software status per interface.
 */
struct ep_softc {
	struct device sc_dev;
	void *sc_ih;
	struct timeout sc_epmbuffill_tmo;

	struct arpcom sc_arpcom;	/* Ethernet common part		*/
	struct mii_data sc_mii;		/* MII/media control		*/
	bus_space_tag_t sc_iot;		/* bus cookie			*/
	bus_space_handle_t sc_ioh;	/* bus i/o handle		*/
	u_int	ep_connectors;		/* Connectors on this card.	*/
#define MAX_MBS	8			/* # of mbufs we keep around	*/
	struct mbuf *mb[MAX_MBS];	/* spare mbuf storage.		*/
	int	next_mb;		/* Which mbuf to use next. 	*/
	int	tx_start_thresh;	/* Current TX_start_thresh.	*/
	int	tx_succ_ok;		/* # packets sent in sequence   */
					/* w/o underrun			*/

	u_int	ep_flags;		/* capabilities flag (from EEPROM) */
#define EP_FLAGS_PNP			0x0001
#define EP_FLAGS_FULLDUPLEX		0x0002
#define EP_FLAGS_LARGEPKT		0x0004	/* 4k packet support */
#define EP_FLAGS_SLAVEDMA		0x0008
#define EP_FLAGS_SECONDDMA		0x0010
#define EP_FLAGS_FULLDMA		0x0020
#define EP_FLAGS_FRAGMENTDMA		0x0040
#define EP_FLAGS_CRC_PASSTHRU		0x0080
#define EP_FLAGS_TXDONE			0x0100
#define EP_FLAGS_NO_TXLENGTH		0x0200
#define EP_FLAGS_RXREPEAT		0x0400
#define EP_FLAGS_SNOOPING		0x0800
#define EP_FLAGS_100MBIT		0x1000
#define EP_FLAGS_POWERMGMT		0x2000
#define EP_FLAGS_MII			0x4000

	u_short ep_chipset;		/* Chipset family on this board */
#define EP_CHIPSET_UNKNOWN		0x00	/* unknown (assume 3c509) */
#define EP_CHIPSET_3C509		0x01	/* PIO: 3c509, 3c589 */
#define EP_CHIPSET_VORTEX		0x02	/* 100mbit, single-pkt dma */
#define EP_CHIPSET_BOOMERANG		0x03	/* Saner dma plus PIO */
#define EP_CHIPSET_BOOMERANG2		0x04	/* Saner dma, no PIO */
#define EP_CHIPSET_ROADRUNNER		0x05	/* Like Boomerang, but PCMCIA */

	u_char	bustype;
#define EP_BUS_ISA	  	0x0
#define	EP_BUS_PCMCIA	  	0x1
#define	EP_BUS_EISA	  	0x2
#define EP_BUS_PCI	  	0x3

#define EP_IS_BUS_32(a)	((a) & 0x2)

	u_char	txashift;		/* shift in SET_TX_AVAIL_THRESH */
};

u_int16_t epreadeeprom(bus_space_tag_t, bus_space_handle_t, int);
void	epconfig(struct ep_softc *, u_short, u_int8_t *);
int	epintr(void *);
void	epstop(struct ep_softc *);
void	epinit(struct ep_softc *);
int	ep_detach(struct device *);
@


1.18
log
@a step towards consistancy; in general:
	'struct arpcom foo' -> 'struct arpcom sc_arpcom'
ok itojun@@
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.16 2000/11/09 18:06:39 mickey Exp $	*/
a49 1
	int	last_mb;		/* Last mbuf.			*/
@


1.17
log
@First round of __P removal in sys
@
text
@@


1.16
log
@new timeouts; aaron@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.15 2000/09/15 22:28:51 aaron Exp $	*/
d91 6
a96 6
u_int16_t epreadeeprom __P((bus_space_tag_t, bus_space_handle_t, int));
void	epconfig __P((struct ep_softc *, u_short, u_int8_t *));
int	epintr __P((void *));
void	epstop __P((struct ep_softc *));
void	epinit __P((struct ep_softc *));
int	ep_detach __P((struct device *));
@


1.16.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.16 2000/11/09 18:06:39 mickey Exp $	*/
d91 6
a96 6
u_int16_t epreadeeprom(bus_space_tag_t, bus_space_handle_t, int);
void	epconfig(struct ep_softc *, u_short, u_int8_t *);
int	epintr(void *);
void	epstop(struct ep_softc *);
void	epinit(struct ep_softc *);
int	ep_detach(struct device *);
@


1.15
log
@Support the ejection of mii ep(4) devices, i.e., the 3c574.
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.14 2000/05/29 18:04:07 aaron Exp $	*/
d40 1
@


1.14
log
@Support for 3c574 and 3CCFEM556BI PCMCIA Ethernet; from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.13 2000/02/02 18:47:01 deraadt Exp $	*/
d95 1
@


1.13
log
@make the activate routines do xxstop() and xxinit()
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.12 1999/07/26 12:31:44 niklas Exp $	*/
a40 3
#ifdef __NetBSD__
	struct ethercom sc_ethercom;	/* Ethernet common part		*/
#else
d42 1
a42 2
#endif
	struct ifmedia sc_media;	/* media control		*/
d77 1
@


1.13.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.16 2000/11/09 18:06:39 mickey Exp $	*/
a39 1
	struct timeout sc_epmbuffill_tmo;
d41 3
d45 2
a46 1
	struct mii_data sc_mii;		/* MII/media control		*/
a80 1
#define EP_CHIPSET_ROADRUNNER		0x05	/* Like Boomerang, but PCMCIA */
a97 1
int	ep_detach __P((struct device *));
@


1.13.2.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d91 6
a96 6
u_int16_t epreadeeprom(bus_space_tag_t, bus_space_handle_t, int);
void	epconfig(struct ep_softc *, u_short, u_int8_t *);
int	epintr(void *);
void	epstop(struct ep_softc *);
void	epinit(struct ep_softc *);
int	ep_detach(struct device *);
@


1.12
log
@Remove obsolete detach code that has been dead for very long
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.11 1998/09/19 10:08:05 maja Exp $	*/
d97 1
@


1.11
log
@Added if_media support from NetBSD. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.10 1998/09/11 12:06:56 fgsch Exp $	*/
a90 3
	u_char	pcmcia_flags;
#define EP_REATTACH		0x01
#define EP_ABSENT		0x02
@


1.10
log
@Add a third parameter to epconfig to get the MAC address if it's a pcmcia
card and support it. Use NULL otherwise.
Update the ep based drivers.
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.9 1997/10/30 23:58:18 niklas Exp $	*/
a42 1
	struct ifmedia sc_media;	/* media control		*/
a44 1
	int sc_media;			/* default media type		*/
d46 1
@


1.9
log
@From Jim Rees <rees@@umich.edu>: remember media type
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.8 1997/07/30 11:12:23 niklas Exp $	*/
d74 1
d98 1
a98 1
void	epconfig __P((struct ep_softc *, u_short));
@


1.8
log
@Sync to NetBSD.  Adapt to use bus_space_multi_raw* interface of OpenBSD.
Some KNF too.
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.7 1996/11/28 23:27:51 niklas Exp $	*/
d46 1
@


1.8.2.1
log
@Merge in 1.8 to 1.9 from the trunk;
From Jim Rees <rees@@umich.edu>: remember media type
@
text
@d1 1
a1 1
/*	$OpenBSD: elink3var.h,v 1.9 1997/10/30 23:58:18 niklas Exp $	*/
a45 1
	int sc_media;			/* default media type		*/
@


1.7
log
@Adaption to new bus.h from NetBSD.  Various driver has been updated to
NetBSD 961107 state.  Other has not, partly because sometimes the bus.h
changes was coupled with other changes.
@
text
@d1 2
a2 2
/*	$OpenBSD: elink3var.h,v 1.6 1996/10/31 01:01:29 niklas Exp $	*/
/*	$NetBSD: elink3var.h,v 1.6 1996/10/21 22:34:25 thorpej Exp $	*/
d41 4
d46 1
d49 1
d58 23
a80 2
	char    ep_connectors;		/* Connectors on this card.	*/
	u_char	txashift;		/* shift in SET_TX_AVAIL_THRESH */
d89 1
d96 1
a96 1
void	epconfig __P((struct ep_softc *, u_int16_t));
@


1.6
log
@$OpenBSD RCSIDs
@
text
@d1 2
a2 2
/*	$OpenBSD: elink3var.h,v 1.5 1996/05/14 22:22:06 thorpej Exp $	*/
/*	$NetBSD: elink3var.h,v 1.5 1996/05/14 22:22:06 thorpej Exp $	*/
d42 2
a43 2
	bus_chipset_tag_t sc_bc;	/* bus cookie			*/
	bus_io_handle_t sc_ioh;		/* bus i/o handle		*/
d67 1
a67 1
u_int16_t epreadeeprom __P((bus_chipset_tag_t, bus_io_handle_t, int));
@


1.5
log
@on newer cards, use word count for SET_TX_AVAIL_THRESH; from numerous people, gleamed from plan9/bsdi drivers, and confirmed in last two sentences in 3c590 manual
@
text
@d1 1
@


1.4
log
@sync 0521
@
text
@a42 1
	char    ep_connectors;		/* Connectors on this card.	*/
d50 3
@


1.4.2.1
log
@merge in fixes
@
text
@d43 1
a50 3

	char    ep_connectors;		/* Connectors on this card.	*/
	u_char	txashift;		/* shift in SET_TX_AVAIL_THRESH */
@


1.3
log
@sync with 0504 -- prototypes and bus.h
@
text
@d1 1
a1 1
/*	$NetBSD: elink3var.h,v 1.3 1996/05/03 19:08:48 christos Exp $	*/
d4 1
a4 1
 * Copyright (c) 1994 Herb Peyerl <hpeyerl@@novatel.ca>
d65 1
a65 1
void	epconfig __P((struct ep_softc *, u_int));
@


1.2
log
@need another field for pcmcia
@
text
@d1 1
a1 1
/*	$NetBSD: elink3var.h,v 1.1 1996/04/25 02:17:36 thorpej Exp $	*/
d41 2
a42 1
	int	ep_iobase;		/* i/o bus address		*/
d64 1
a64 1
u_short	epreadeeprom __P((int id_port, int offset));
d67 1
@


1.1
log
@if_ep splitup
@
text
@d57 4
@
