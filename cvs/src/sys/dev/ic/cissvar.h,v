head	1.15;
access;
symbols
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.18
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.16
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.10
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.12
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.4
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.8
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.6
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.14.0.12
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.8
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.10
	OPENBSD_5_0:1.14.0.6
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.4
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.7.0.10
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.12
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.15
date	2013.05.30.16.15.02;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.03.01.03.55;	author dlg;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.03.00.56.42;	author dlg;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.02.13.34.21;	author dlg;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.02.01.33.57;	author dlg;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.02.01.27.20;	author dlg;	state Exp;
branches;
next	1.9;

1.9
date	2010.06.02.01.18.36;	author dlg;	state Exp;
branches;
next	1.8;

1.8
date	2010.05.31.19.35.03;	author halex;	state Exp;
branches;
next	1.7;

1.7
date	2007.03.22.16.55.31;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2006.12.23.17.46.39;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.31.23.19.35;	author krw;	state Exp;
branches;
next	1.4;

1.4
date	2006.08.27.22.12.10;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2006.08.27.20.51.09;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.07.04.00.16;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.06.01.52.13;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Enforce ca_activate tree-walks over the entire heirarchy for all events,
cleaning up some shutdown-hook related code on the way.
(A few drivers related to sparc are still skipped at kettenis' request)
ok kettenis mlarkin, tested by many others too
@
text
@/*	$OpenBSD: cissvar.h,v 1.14 2010/06/03 01:03:55 dlg Exp $	*/

/*
 * Copyright (c) 2005,2006 Michael Shalayeff
 * All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
 * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/sensors.h>

struct ciss_ld {
	struct ciss_blink bling;	/* a copy of blink state */
	char	xname[16];		/* copy of the sdN name */
	int	ndrives;
	u_int8_t tgts[1];
};

struct ciss_softc {
	struct device	sc_dev;
	struct scsi_link sc_link;
	struct timeout	sc_hb;
	void		*sc_ih;
	int		sc_flush;
	struct ksensor	*sensors;
	struct ksensordev sensordev;

	u_int	sc_flags;
#define	CISS_BIO	0x0001
	int ccblen, maxcmd, maxsg, nbus, ndrives, maxunits;
	struct ciss_ccb_list sc_free_ccb;
	struct mutex	sc_free_ccb_mtx;
	struct scsi_iopool sc_iopool;

	bus_space_tag_t	iot;
	bus_space_handle_t ioh, cfg_ioh;
	bus_dma_tag_t	dmat;
	bus_dmamap_t	cmdmap;
	bus_dma_segment_t cmdseg[1];
	void		*ccbs;
	void		*scratch;

	struct ciss_config cfg;
	int cfgoff;
	u_int32_t iem;
	u_int32_t heartbeat;
	int       fibrillation;
	struct ciss_ld **sc_lds;
};

/* XXX These have to become spinlocks in case of fine SMP */
#define	CISS_LOCK(sc) splbio()
#define	CISS_UNLOCK(sc, lock) splx(lock)
#define	CISS_LOCK_SCRATCH(sc) splbio()
#define	CISS_UNLOCK_SCRATCH(sc, lock) splx(lock)
typedef	int ciss_lock_t;

int	ciss_attach(struct ciss_softc *sc);
int	ciss_intr(void *v);
void	ciss_shutdown(void *v);
@


1.14
log
@get rid of the kthread. it is unused and just bloats the kernel.

pointed out by brad.
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.13 2010/06/03 00:56:42 dlg Exp $	*/
a33 1
	void		*sc_sh;
d70 1
@


1.13
log
@useless abstraction is, by definition, useless.

dont typedef the tailq head struct.
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.12 2010/06/02 13:34:21 dlg Exp $	*/
a34 1
	struct proc	*sc_thread;
@


1.12
log
@convert ciss(4) over to using iopools. this is fairly easy after the recent
tweaks ive made.

this provides better concurrent access to multiple volumes on the same hba,
while improving the reliability of the ioctl and sensor codepaths.

tested by okan@@ halex@@
ok krw@@ okan@@ halex@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.11 2010/06/02 01:33:57 dlg Exp $	*/
d43 1
a43 1
	ciss_queue_head	sc_free_ccb;
@


1.11
log
@protect the ccb free queue with its own mutex
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.10 2010/06/02 01:27:20 dlg Exp $	*/
d45 1
@


1.10
log
@get rid of useless ccb queues. when the ccb is on the chip, we mark its
state as such, putting it on a queue is silly. one of the queues was
initted by never used.
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.9 2010/06/02 01:18:36 dlg Exp $	*/
d44 1
@


1.9
log
@get rid of the code for the passthru bus support. it was never enabled and
confuses the code and bloats the kernel.
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.8 2010/05/31 19:35:03 halex Exp $	*/
d43 1
a43 1
	ciss_queue_head	sc_free_ccb, sc_ccbq, sc_ccbdone;
@


1.8
log
@do not immediately panic if we find a non-increasing heartbeat counter but
keep count for at least 33 seconds. then panic.

ok marco@@, moral support johan@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.7 2007/03/22 16:55:31 deraadt Exp $	*/
a31 1
	struct scsi_link *sc_link_raw;
a58 6
};

struct ciss_rawsoftc {
	struct scsi_link sc_link;
	struct ciss_softc *sc_softc;
	u_int8_t	sc_channel;
@


1.7
log
@split userland & kernel struct sensor/sensordev so that the addition
of new fields in the future is less disruptive.  This is done similar
to how struct proc is handled for ps(1).  ok jmc (man page changes)
tested fkr simon, and more suggestions from millert
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.6 2006/12/23 17:46:39 deraadt Exp $	*/
d58 1
@


1.6
log
@adapt to new two-level sensor api; Constantine A. Murenin
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.5 2006/08/31 23:19:35 krw Exp $	*/
d38 2
a39 2
	struct sensor	*sensors;
	struct sensordev sensordev;
@


1.5
log
@ciss can't do bio ioctl's when >1 logical device is defined. Bail out
of ciss_ioctl if >1 logical device is present. Fixes dereferencing of
uninitialized pointer.

From mickey@@ ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.4 2006/08/27 22:12:10 mickey Exp $	*/
d20 1
a20 1
struct sensor;
d39 1
@


1.4
log
@display proper volume device name in the volume line (; krw@@ testing
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.3 2006/08/27 20:51:09 mickey Exp $	*/
d41 1
@


1.3
log
@basic monitoring and management support. there are a few more things to fix but fetching array status and rebuild/blinking works on compaq/hp boxen; testing and some fixes by krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.2 2005/09/07 04:00:16 mickey Exp $	*/
d24 1
@


1.2
log
@sync on shutdown
@
text
@d1 1
a1 1
/*	$OpenBSD: cissvar.h,v 1.1 2005/07/06 01:52:13 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 2005 Michael Shalayeff
d20 8
d37 1
d55 1
@


1.1
log
@smartarray 5* raid controller; does io but needs more work; commented out in configs for now
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d28 1
d54 1
a54 1
/* XXX These have to become spinlocks in case of SMP */
d57 2
@

