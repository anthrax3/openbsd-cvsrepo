head	1.16;
access;
symbols
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.15.0.8
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.11.0.2
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.9.0.2
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.8
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.4
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.8
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.2.0.10
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.8
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.2;
locks; strict;
comment	@ * @;


1.16
date	2017.03.11.11.55.03;	author mpi;	state Exp;
branches;
next	1.15;
commitid	eXDj5wwfsbdFBB4L;

1.15
date	2015.05.24.10.57.47;	author miod;	state Exp;
branches;
next	1.14;
commitid	lWcX96d8OBs4r9kK;

1.14
date	2013.05.23.18.29.51;	author tobias;	state Exp;
branches;
next	1.13;

1.13
date	2013.04.20.08.01.37;	author tobias;	state Exp;
branches;
next	1.12;

1.12
date	2012.08.10.17.49.31;	author shadchin;	state Exp;
branches;
next	1.11;

1.11
date	2012.02.02.21.40.20;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2010.11.23.04.07.55;	author shadchin;	state Exp;
branches;
next	1.9;

1.9
date	2010.07.22.14.27.44;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2010.07.21.20.10.17;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2008.07.29.04.20.37;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2008.07.16.20.03.22;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.31.14.35.51;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.02.21.21.00;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.02.04.39.50;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.55;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.13.20.12.34;	author aaron;	state Exp;
branches
	1.1.4.1
	1.1.8.1;
next	;

1.1.4.1
date	2001.05.14.22.24.07;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2002.03.28.11.51.01;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2004.06.05.23.12.43;	author niklas;	state Exp;
branches;
next	;

1.1.8.1
date	2002.06.11.03.42.20;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Introduce a new knob to force the first USB keyboard as console input.

By setting "machdep.forceukbd=1" you can now use your USB keyboard in
ddb(4) even if your BIOS emulates a pckbd(4).

ok tom@@, kettenis@@, deraadt@@
@
text
@/* $OpenBSD: pckbcvar.h,v 1.15 2015/05/24 10:57:47 miod Exp $ */
/* $NetBSD: pckbcvar.h,v 1.4 2000/06/09 04:58:35 soda Exp $ */

/*
 * Copyright (c) 1998
 *	Matthias Drochner.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef _DEV_IC_PCKBCVAR_H_
#define _DEV_IC_PCKBCVAR_H_

#include <sys/timeout.h>

#define PCKBCCF_SLOT            0
#define PCKBCCF_SLOT_DEFAULT    -1

typedef void *pckbc_tag_t;
typedef int pckbc_slot_t;
#define	PCKBC_KBD_SLOT	0
#define	PCKBC_AUX_SLOT	1
#define	PCKBC_NSLOTS	2

/*
 * external representation (pckbc_tag_t),
 * needed early for console operation
 */
struct pckbc_internal { 
	bus_space_tag_t t_iot;
	bus_space_handle_t t_ioh_d, t_ioh_c; /* data port, cmd port */
	bus_addr_t t_addr;
	u_char t_cmdbyte; /* shadow */

	int t_flags;
#define	PCKBC_CANT_TRANSLATE	0x0001	/* can't translate to XT scancodes */
#define	PCKBC_NEED_AUXWRITE	0x0002	/* need auxwrite command to find aux */
	int t_haveaux; /* controller has an aux port */

	struct pckbc_slotdata *t_slotdata[PCKBC_NSLOTS];

	struct pckbc_softc *t_sc; /* back pointer */

	struct timeout t_cleanup;
	struct timeout t_poll;
};

typedef void (*pckbc_inputfcn)(void *, int);

/*
 * State per device.
 */
struct pckbc_softc {
	struct device sc_dv;
	struct pckbc_internal *id;

	pckbc_inputfcn inputhandler[PCKBC_NSLOTS];
	void *inputarg[PCKBC_NSLOTS];
	char *subname[PCKBC_NSLOTS];
};

struct pckbc_attach_args {
	pckbc_tag_t pa_tag;
	pckbc_slot_t pa_slot;
};

extern const char *pckbc_slot_names[];
extern struct pckbc_internal pckbc_consdata;
extern int pckbc_console_attached;

void pckbc_set_inputhandler(pckbc_tag_t, pckbc_slot_t,
				 pckbc_inputfcn, void *, char *);

void pckbc_flush(pckbc_tag_t, pckbc_slot_t);
int pckbc_poll_cmd(pckbc_tag_t, pckbc_slot_t, u_char *, int,
			int, u_char *, int);
int pckbc_enqueue_cmd(pckbc_tag_t, pckbc_slot_t, u_char *, int,
			   int, int, u_char *);
int pckbc_send_cmd(bus_space_tag_t, bus_space_handle_t, u_char);
int pckbc_poll_data(pckbc_tag_t, pckbc_slot_t);
int pckbc_poll_data1(bus_space_tag_t, bus_space_handle_t,
			  bus_space_handle_t, pckbc_slot_t, int);
void pckbc_set_poll(pckbc_tag_t, pckbc_slot_t, int);
int pckbc_xt_translation(pckbc_tag_t);
void pckbc_slot_enable(pckbc_tag_t, pckbc_slot_t, int);

void pckbc_attach(struct pckbc_softc *, int);
int pckbc_cnattach(bus_space_tag_t, bus_addr_t, bus_size_t, int);
int pckbc_is_console(bus_space_tag_t, bus_addr_t);
void pckbc_reset(struct pckbc_softc *);
void pckbc_stop(struct pckbc_softc *);
int pckbcintr(void *);

void pckbc_release_console(void);

/*
 * Device configuration flags (cf_flags).
 */

#define	PCKBCF_FORCE_KEYBOARD_PRESENT	0x0001

#endif /* _DEV_IC_PCKBCVAR_H_ */
@


1.15
log
@Follow the recent pckbc@@isa changes and always establish all the necessary
interrupts at pckbc attach time, and get rid of the `intr_establish'
pckbc callback.

Tested on hppa (gsckbc) and sgi (pckbc@@hpc); not tested on sparc64 (pckbc@@ebus)
but this attachment was already behaving this way and its intr_establish
callback was an empty function.
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.14 2013/05/23 18:29:51 tobias Exp $ */
d112 2
@


1.14
log
@Revert Active PS/2 support for now, until we find a solution suitable
for chipsets which stopped working.

ok mpi
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.12 2012/08/10 17:49:31 shadchin Exp $ */
a78 2

	void (*intr_establish)(struct pckbc_softc *, pckbc_slot_t);
@


1.13
log
@Enable active PS/2 multiplexing if available.
Supported for i386 and amd64 except SMALL_KERNEL.

Based on Miod's former work on this subject.

ok mpi
@
text
@a34 8
/*
 * Only compile Active PS/2 Multiplexing support on systems where it might
 * be found.
 */
#if (defined(__i386__) || defined(__amd64__)) && !defined(SMALL_KERNEL)
#define PCKBC_APM
#endif

a41 3
#ifdef PCKBC_APM
#define	PCKBC_NSLOTS	5	/* 1 KBD + 4 AUX */
#else
a42 1
#endif
a57 3
#ifdef PCKBC_APM
	int t_apmver; /* Active PS/2 Multiplexing version */
#endif
d102 2
a103 2
int pckbc_poll_data1(bus_space_tag_t, bus_space_handle_t, bus_space_handle_t,
			   pckbc_slot_t, struct pckbc_internal *);
@


1.12
log
@simplify pckbc_xt_translation()
* call only for set translation on (once in /sys/dev/pckbd.c)
  therefore we can delete unused code.
* change behavior (more standard) - return zero on success

ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.11 2012/02/02 21:40:20 deraadt Exp $ */
d35 8
d50 3
d54 1
d70 3
d117 2
a118 2
int pckbc_poll_data1(bus_space_tag_t, bus_space_handle_t,
			  bus_space_handle_t, pckbc_slot_t, int);
@


1.11
log
@disable the polling timeout when we suspend; discovered by some code
guenther is working on
ok miod
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.10 2010/11/23 04:07:55 shadchin Exp $ */
d105 1
a105 1
int pckbc_xt_translation(pckbc_tag_t, pckbc_slot_t, int);
@


1.10
log
@removed slot argument of function pckbc_cnattach
because it is always PCKBC_KBD_SLOT

ok krw@@, miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.9 2010/07/22 14:27:44 deraadt Exp $ */
d112 1
@


1.9
log
@Reset the keyboard controller on resume, and also alert the children
(pckbd and pms) to do their part
started by mlarkin, cleaned up by me
ok miod
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.8 2010/07/21 20:10:17 miod Exp $ */
d109 1
a109 2
int pckbc_cnattach(bus_space_tag_t, bus_addr_t, bus_size_t,
			pckbc_slot_t, int);
@


1.8
log
@Disable the heuristics for legacy free systems if pckbc flags are set to 1
in UKC; found the hard way by jakemsr@@ on an old Tecra laptop.
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.7 2008/07/29 04:20:37 miod Exp $ */
d112 1
@


1.7
log
@Reenable the AUXWRITE dance to try and find the aux port in pckbc(4), based
on an attachment dependent flag; the Tadople SPARCLE needs it.
ok kettenis@@ deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.6 2008/07/16 20:03:22 miod Exp $ */
d108 1
a108 1
void pckbc_attach(struct pckbc_softc *);
d113 6
@


1.6
log
@Add a new parameter to pckbc_cnattach(): flags to put in the pckbc bowels.
For now, only one such flag is defined, PCKBC_CANT_TRANSLATE. It hints
pckbc that the device does not behave correctly to the ``set translation''
commands.

Set this flag if we are running on a Tadpole Ultrabook machine, which needs it.
This makes the built-in keyboard work correctly on this laptop (with the
help of the software translation pckbd diff).

tested & ok kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.5 2007/01/31 14:35:51 mickey Exp $ */
d56 1
@


1.5
log
@run a timeout (calling intr handler) to recover from in buffer oflows that make no ints; w/ help from miod@@ and ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.4 2004/11/02 21:21:00 miod Exp $ */
d54 2
d57 1
d109 1
a109 1
			pckbc_slot_t);
@


1.4
log
@Remove __HAVE_NWSCONS and related remnants of pre-wscons days; no functional
change.
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.3 2004/04/02 04:39:50 deraadt Exp $ */
d60 1
@


1.3
log
@remove terms 3 & 4 for drochner@@NetBSD.org; as seen on netbsd lists
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.2 2002/03/14 01:26:55 millert Exp $ */
a107 3

/* md hook for use without mi wscons */
int pckbc_machdep_cnattach(pckbc_tag_t, pckbc_slot_t);
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.1 2000/11/13 20:12:34 aaron Exp $ */
a15 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed for the NetBSD Project
 *	by Matthias Drochner.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.1
log
@Machine-independent PC-like keyboard driver; from NetBSD. XXX - Not used
anywhere quite yet, but useful to have these files in the tree while we work
towards wscons for i386 and alpha.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d68 1
a68 1
typedef void (*pckbc_inputfcn) __P((void *, int));
d81 1
a81 1
	void (*intr_establish) __P((struct pckbc_softc *, pckbc_slot_t));
d93 2
a94 2
void pckbc_set_inputhandler __P((pckbc_tag_t, pckbc_slot_t,
				 pckbc_inputfcn, void *, char *));
d96 18
a113 18
void pckbc_flush __P((pckbc_tag_t, pckbc_slot_t));
int pckbc_poll_cmd __P((pckbc_tag_t, pckbc_slot_t, u_char *, int,
			int, u_char *, int));
int pckbc_enqueue_cmd __P((pckbc_tag_t, pckbc_slot_t, u_char *, int,
			   int, int, u_char *));
int pckbc_send_cmd __P((bus_space_tag_t, bus_space_handle_t, u_char));
int pckbc_poll_data __P((pckbc_tag_t, pckbc_slot_t));
int pckbc_poll_data1 __P((bus_space_tag_t, bus_space_handle_t,
			  bus_space_handle_t, pckbc_slot_t, int));
void pckbc_set_poll __P((pckbc_tag_t, pckbc_slot_t, int));
int pckbc_xt_translation __P((pckbc_tag_t, pckbc_slot_t, int));
void pckbc_slot_enable __P((pckbc_tag_t, pckbc_slot_t, int));

void pckbc_attach __P((struct pckbc_softc *));
int pckbc_cnattach __P((bus_space_tag_t, bus_addr_t, bus_size_t,
			pckbc_slot_t));
int pckbc_is_console __P((bus_space_tag_t, bus_addr_t));
int pckbcintr __P((void *));
d116 1
a116 1
int pckbc_machdep_cnattach __P((pckbc_tag_t, pckbc_slot_t));
@


1.1.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.1 2000/11/13 20:12:34 aaron Exp $ */
d68 1
a68 1
typedef void (*pckbc_inputfcn)(void *, int);
d81 1
a81 1
	void (*intr_establish)(struct pckbc_softc *, pckbc_slot_t);
d93 2
a94 2
void pckbc_set_inputhandler(pckbc_tag_t, pckbc_slot_t,
				 pckbc_inputfcn, void *, char *);
d96 18
a113 18
void pckbc_flush(pckbc_tag_t, pckbc_slot_t);
int pckbc_poll_cmd(pckbc_tag_t, pckbc_slot_t, u_char *, int,
			int, u_char *, int);
int pckbc_enqueue_cmd(pckbc_tag_t, pckbc_slot_t, u_char *, int,
			   int, int, u_char *);
int pckbc_send_cmd(bus_space_tag_t, bus_space_handle_t, u_char);
int pckbc_poll_data(pckbc_tag_t, pckbc_slot_t);
int pckbc_poll_data1(bus_space_tag_t, bus_space_handle_t,
			  bus_space_handle_t, pckbc_slot_t, int);
void pckbc_set_poll(pckbc_tag_t, pckbc_slot_t, int);
int pckbc_xt_translation(pckbc_tag_t, pckbc_slot_t, int);
void pckbc_slot_enable(pckbc_tag_t, pckbc_slot_t, int);

void pckbc_attach(struct pckbc_softc *);
int pckbc_cnattach(bus_space_tag_t, bus_addr_t, bus_size_t,
			pckbc_slot_t);
int pckbc_is_console(bus_space_tag_t, bus_addr_t);
int pckbcintr(void *);
d116 1
a116 1
int pckbc_machdep_cnattach(pckbc_tag_t, pckbc_slot_t);
@


1.1.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/* $OpenBSD: pckbcvar.h,v 1.1 2000/11/13 20:12:34 aaron Exp $ */
@


1.1.4.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d68 1
a68 1
typedef void (*pckbc_inputfcn)(void *, int);
d81 1
a81 1
	void (*intr_establish)(struct pckbc_softc *, pckbc_slot_t);
d93 2
a94 2
void pckbc_set_inputhandler(pckbc_tag_t, pckbc_slot_t,
				 pckbc_inputfcn, void *, char *);
d96 18
a113 18
void pckbc_flush(pckbc_tag_t, pckbc_slot_t);
int pckbc_poll_cmd(pckbc_tag_t, pckbc_slot_t, u_char *, int,
			int, u_char *, int);
int pckbc_enqueue_cmd(pckbc_tag_t, pckbc_slot_t, u_char *, int,
			   int, int, u_char *);
int pckbc_send_cmd(bus_space_tag_t, bus_space_handle_t, u_char);
int pckbc_poll_data(pckbc_tag_t, pckbc_slot_t);
int pckbc_poll_data1(bus_space_tag_t, bus_space_handle_t,
			  bus_space_handle_t, pckbc_slot_t, int);
void pckbc_set_poll(pckbc_tag_t, pckbc_slot_t, int);
int pckbc_xt_translation(pckbc_tag_t, pckbc_slot_t, int);
void pckbc_slot_enable(pckbc_tag_t, pckbc_slot_t, int);

void pckbc_attach(struct pckbc_softc *);
int pckbc_cnattach(bus_space_tag_t, bus_addr_t, bus_size_t,
			pckbc_slot_t);
int pckbc_is_console(bus_space_tag_t, bus_addr_t);
int pckbcintr(void *);
d116 1
a116 1
int pckbc_machdep_cnattach(pckbc_tag_t, pckbc_slot_t);
@


1.1.4.3
log
@Merge with the trunk
@
text
@d16 6
@


