head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	UBC_SYNC_A:1.3
	UBC_SYNC_B:1.3
	SMP:1.3.0.2;
locks; strict;
comment	@ * @;


1.3
date	99.07.30.13.43.36;	author d;	state dead;
branches;
next	1.2;

1.2
date	99.07.14.03.51.50;	author d;	state Exp;
branches;
next	1.1;

1.1
date	99.06.21.23.21.46;	author d;	state Exp;
branches;
next	;


desc
@@


1.3
log
@rename rl2->rln for sanity
@
text
@/*	$OpenBSD: rl2.h,v 1.2 1999/07/14 03:51:50 d Exp $	*/
/*
 * David Leonard <d@@openbsd.org>, 1999. Public domain.
 *
 * Proxim RangeLAN2 parameters.
 */

/*
 * Eventually, there should be a way of getting and setting these
 * from user space. Ideally, via ioctl().
 */

/* User-configurable station parameters. */
struct rl2_param {
	u_int32_t	rp_security;		/* Security ID */
#define RL2_SECURITY_DEFAULT	0x0010203
	u_int8_t	rp_station_type;	/* Station type */
#define RL2_STATIONTYPE_SLAVE		0
#define RL2_STATIONTYPE_ALTMASTER	1
#define RL2_STATIONTYPE_MASTER		2
	u_int8_t	rp_domain;		/* Network domain */
	u_int8_t	rp_channel;		/* Phys channel when master */
	u_int8_t	rp_subchannel;		/* Logical master subchannel */
	char		rp_master[11];		/* Name when master */
	u_int8_t	rp_mac_optimize;
#define RL2_MAC_OPTIM_LIGHT	0
#define RL2_MAC_OPTIM_NORMAL	1
	u_int8_t	rp_roam_config;		/* Roaming speed */
#define RL2_ROAM_SLOW		0
#define RL2_ROAM_NORMAL		1
#define RL2_ROAM_FAST		2
	u_int8_t	rp_peer_to_peer;	/* Ability to talk to peers */
};

#ifdef notyet
#define RL2IOSPARAM    _IOW('2', 1, struct rl2_param)  /* set params */
#define RL2IOGPARAM    _IOR('2', 2, struct rl2_param)  /* get params */
#endif

@


1.2
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: rl2.h,v 1.1 1999/06/21 23:21:46 d Exp $	*/
@


1.1
log
@RangeLAN2 wireless network card
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d6 3
a8 1
 *
d10 1
a10 1
 * from user space. Perhaps through ioctl().
d13 1
d15 1
a15 5
	u_int8_t  rp_roamconfig;	/* roam speed */
#define RL2_ROAM_SLOW		0
#define RL2_ROAM_NORMAL		1
#define RL2_ROAM_FAST		2
	u_int32_t rp_security;		/* security id */
d17 1
a17 1
	u_int8_t  rp_stationtype;
d21 12
a32 4
	u_int8_t  rp_domain;
	u_int8_t  rp_channel;
	u_int8_t  rp_subchannel;
	char	  rp_master[11];	/* valid only when st.type is master */
d35 4
a38 3
/* XXX possible ioctls to use */
#define RL2IOSPARAM	_IOW('2', 1, struct rl2_param)	/* set params */
#define RL2IOGPARAM	_IOR('2', 2, struct rl2_param)	/* get params */
@

