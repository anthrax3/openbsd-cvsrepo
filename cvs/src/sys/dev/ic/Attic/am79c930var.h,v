head	1.5;
access;
symbols
	OPENBSD_4_3:1.4.0.26
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.24
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.22
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.20
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.18
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.2
	SMP_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2008.05.23.14.04.18;	author brad;	state dead;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.54;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.04.09.02.58;	author niklas;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2000.08.17.16.16.30;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	99.12.16.02.56.56;	author deraadt;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.05.14.22.23.27;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.10.31.03.22.41;	author nate;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2002.03.28.11.51.00;	author niklas;	state Exp;
branches;
next	;

1.3.4.1
date	2002.06.11.03.42.17;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bye bye awi(4). No net80211 love, uses its own WEP code and has not worked
properly in 8.5 years so just garbage collect the driver.

ok damien@@ deraadt@@
@
text
@/* $OpenBSD: am79c930var.h,v 1.4 2002/03/14 01:26:54 millert Exp $ */

/*-
 * Copyright (c) 1999 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Bill Sommerfeld
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#define AM79C930_BUS_PCMCIA 1
#define AM79C930_BUS_ISAPNP 2	/* not implemented */

struct am79c930_softc 
{
	bus_space_tag_t sc_iot;
	bus_space_handle_t sc_ioh;

	bus_space_tag_t sc_memt;
	bus_space_handle_t sc_memh;

	struct am79c930_ops *sc_ops;

	int sc_bustype;
};

struct am79c930_ops 
{
	void (*write_1)(struct am79c930_softc *, u_int32_t, u_int8_t);
	void (*write_2)(struct am79c930_softc *, u_int32_t, u_int16_t);
	void (*write_4)(struct am79c930_softc *, u_int32_t, u_int32_t);
	void (*write_bytes)(struct am79c930_softc *, u_int32_t, u_int8_t *, size_t);

	u_int8_t (*read_1)(struct am79c930_softc *, u_int32_t);
	u_int16_t (*read_2)(struct am79c930_softc *, u_int32_t);
	u_int32_t (*read_4)(struct am79c930_softc *, u_int32_t);
	void (*read_bytes)(struct am79c930_softc *, u_int32_t, u_int8_t *, size_t);
};

void am79c930_chip_init(struct am79c930_softc *sc, int);

void am79c930_gcr_setbits(struct am79c930_softc *sc, u_int8_t bits);
void am79c930_gcr_clearbits(struct am79c930_softc *sc, u_int8_t bits);

u_int8_t am79c930_gcr_read(struct am79c930_softc *sc);

#define am79c930_hard_reset(sc) am79c930_gcr_setbits(sc, AM79C930_GCR_CORESET)
#define am79c930_hard_reset_off(sc) am79c930_gcr_clearbits(sc, AM79C930_GCR_CORESET)


@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/* $OpenBSD: am79c930var.h,v 1.3 2001/07/04 09:02:58 niklas Exp $ */
@


1.3
log
@$OpenBSD$
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d57 9
a65 9
	void (*write_1) __P((struct am79c930_softc *, u_int32_t, u_int8_t));
	void (*write_2) __P((struct am79c930_softc *, u_int32_t, u_int16_t));
	void (*write_4) __P((struct am79c930_softc *, u_int32_t, u_int32_t));
	void (*write_bytes) __P((struct am79c930_softc *, u_int32_t, u_int8_t *, size_t));

	u_int8_t (*read_1) __P((struct am79c930_softc *, u_int32_t));
	u_int16_t (*read_2) __P((struct am79c930_softc *, u_int32_t));
	u_int32_t (*read_4) __P((struct am79c930_softc *, u_int32_t));
	void (*read_bytes) __P((struct am79c930_softc *, u_int32_t, u_int8_t *, size_t));
d68 1
a68 1
void am79c930_chip_init __P((struct am79c930_softc *sc, int));
d70 2
a71 2
void am79c930_gcr_setbits __P((struct am79c930_softc *sc, u_int8_t bits));
void am79c930_gcr_clearbits __P((struct am79c930_softc *sc, u_int8_t bits));
d73 1
a73 1
u_int8_t am79c930_gcr_read __P((struct am79c930_softc *sc));
@


1.3.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: am79c930var.h,v 1.3 2001/07/04 09:02:58 niklas Exp $ */
d57 9
a65 9
	void (*write_1)(struct am79c930_softc *, u_int32_t, u_int8_t);
	void (*write_2)(struct am79c930_softc *, u_int32_t, u_int16_t);
	void (*write_4)(struct am79c930_softc *, u_int32_t, u_int32_t);
	void (*write_bytes)(struct am79c930_softc *, u_int32_t, u_int8_t *, size_t);

	u_int8_t (*read_1)(struct am79c930_softc *, u_int32_t);
	u_int16_t (*read_2)(struct am79c930_softc *, u_int32_t);
	u_int32_t (*read_4)(struct am79c930_softc *, u_int32_t);
	void (*read_bytes)(struct am79c930_softc *, u_int32_t, u_int8_t *, size_t);
d68 1
a68 1
void am79c930_chip_init(struct am79c930_softc *sc, int);
d70 2
a71 2
void am79c930_gcr_setbits(struct am79c930_softc *sc, u_int8_t bits);
void am79c930_gcr_clearbits(struct am79c930_softc *sc, u_int8_t bits);
d73 1
a73 1
u_int8_t am79c930_gcr_read(struct am79c930_softc *sc);
@


1.2
log
@replace if_awi w/ semi-current netbsd driver; still has problems
@
text
@d1 1
a1 1
/* $NetBSD$ */
@


1.1
log
@non-working awi driver; someone finish it
@
text
@d1 1
a1 2
/* $NetBSD: am79c930var.h,v 1.2 1999/11/05 05:13:36 sommerfeld Exp $ */
/* $OpenBSD$ */
@


1.1.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 1
/* $NetBSD$ */
@


1.1.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.1.2.3
log
@Merge in -current from about a week ago
@
text
@d57 4
a60 4
	void (*write_1)(struct am79c930_softc *, u_int32_t, u_int8_t);
	void (*write_2)(struct am79c930_softc *, u_int32_t, u_int16_t);
	void (*write_4)(struct am79c930_softc *, u_int32_t, u_int32_t);
	void (*write_bytes)(struct am79c930_softc *, u_int32_t, u_int8_t *, size_t);
d62 4
a65 4
	u_int8_t (*read_1)(struct am79c930_softc *, u_int32_t);
	u_int16_t (*read_2)(struct am79c930_softc *, u_int32_t);
	u_int32_t (*read_4)(struct am79c930_softc *, u_int32_t);
	void (*read_bytes)(struct am79c930_softc *, u_int32_t, u_int8_t *, size_t);
d68 1
a68 1
void am79c930_chip_init(struct am79c930_softc *sc, int);
d70 2
a71 2
void am79c930_gcr_setbits(struct am79c930_softc *sc, u_int8_t bits);
void am79c930_gcr_clearbits(struct am79c930_softc *sc, u_int8_t bits);
d73 1
a73 1
u_int8_t am79c930_gcr_read(struct am79c930_softc *sc);
@


