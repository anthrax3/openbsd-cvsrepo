head	1.3;
access;
symbols
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.24
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.22
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.18
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.16
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.14
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2015.06.19.11.12.24;	author jmatthew;	state dead;
branches;
next	1.2;
commitid	I5HMIEQiHPSVn0jd;

1.2
date	2009.06.24.11.00.53;	author krw;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.16.00.00.13;	author krw;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove isp(4) now that the ql* family have replaced it
@
text
@/*	$OpenBSD: isp_library.h,v 1.2 2009/06/24 11:00:53 krw Exp $ */
/* $FreeBSD: src/sys/dev/isp/isp_library.h,v 1.8 2007/04/02 01:04:20 mjacob Exp $ */
/*-
 *  Copyright (c) 1997-2007 by Matthew Jacob
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 * 
 *  1. Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 * 
 *  THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 *  ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE
 *  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 *  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 *  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 *  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 *  SUCH DAMAGE.
 */
#ifndef	_ISP_LIBRARY_H
#define	_ISP_LIBRARY_H

extern int isp_save_xs(ispsoftc_t *, XS_T *, u_int32_t *);
extern XS_T *isp_find_xs(ispsoftc_t *, u_int32_t);
extern u_int32_t isp_find_handle(ispsoftc_t *, XS_T *);
extern u_int32_t isp_handle_index(u_int32_t);
extern void isp_destroy_handle(ispsoftc_t *, u_int32_t);
extern int isp_getrqentry(ispsoftc_t *, u_int32_t *, u_int32_t *, void **);
extern void isp_print_qentry (ispsoftc_t *, char *, int, void *);
extern void isp_print_bytes(ispsoftc_t *, const char *, int, void *);
extern int isp_fc_runstate(ispsoftc_t *, int);
extern void isp_dump_portdb(ispsoftc_t *);
extern void isp_shutdown(ispsoftc_t *);
extern void isp_put_hdr(ispsoftc_t *, isphdr_t *, isphdr_t *);
extern void isp_get_hdr(ispsoftc_t *, isphdr_t *, isphdr_t *);
extern int isp_get_response_type(ispsoftc_t *, isphdr_t *);
extern void
isp_put_request(ispsoftc_t *, ispreq_t *, ispreq_t *);
extern void
isp_put_marker(ispsoftc_t *, isp_marker_t *, isp_marker_t *);
extern void
isp_put_marker_24xx(ispsoftc_t *, isp_marker_24xx_t *, isp_marker_24xx_t *);
extern void
isp_put_request_t2(ispsoftc_t *, ispreqt2_t *, ispreqt2_t *);
extern void
isp_put_request_t2e(ispsoftc_t *, ispreqt2e_t *, ispreqt2e_t *);
extern void
isp_put_request_t3(ispsoftc_t *, ispreqt3_t *, ispreqt3_t *);
extern void
isp_put_request_t3e(ispsoftc_t *, ispreqt3e_t *, ispreqt3e_t *);
extern void
isp_put_extended_request(ispsoftc_t *, ispextreq_t *, ispextreq_t *);
extern void
isp_put_request_t7(ispsoftc_t *, ispreqt7_t *, ispreqt7_t *);
extern void
isp_put_24xx_abrt(ispsoftc_t *, isp24xx_abrt_t *, isp24xx_abrt_t *);
extern void
isp_put_cont_req(ispsoftc_t *, ispcontreq_t *, ispcontreq_t *);
extern void
isp_put_cont64_req(ispsoftc_t *, ispcontreq64_t *, ispcontreq64_t *);
extern void
isp_get_response(ispsoftc_t *, ispstatusreq_t *, ispstatusreq_t *);
extern void isp_get_24xx_response(ispsoftc_t *, isp24xx_statusreq_t *,
    isp24xx_statusreq_t *);
void
isp_get_24xx_abrt(ispsoftc_t *, isp24xx_abrt_t *, isp24xx_abrt_t *);
extern void
isp_get_rio2(ispsoftc_t *, isp_rio2_t *, isp_rio2_t *);
extern void
isp_put_icb(ispsoftc_t *, isp_icb_t *, isp_icb_t *);
extern void
isp_put_icb_2400(ispsoftc_t *, isp_icb_2400_t *, isp_icb_2400_t *);
extern void
isp_get_pdb_21xx(ispsoftc_t *, isp_pdb_21xx_t *, isp_pdb_21xx_t *);
extern void
isp_get_pdb_24xx(ispsoftc_t *, isp_pdb_24xx_t *, isp_pdb_24xx_t *);
extern void
isp_get_plogx(ispsoftc_t *, isp_plogx_t *, isp_plogx_t *);
extern void
isp_put_plogx(ispsoftc_t *, isp_plogx_t *, isp_plogx_t *);
extern void
isp_get_ct_pt(ispsoftc_t *isp, isp_ct_pt_t *, isp_ct_pt_t *);
extern void
isp_get_ms(ispsoftc_t *isp, isp_ms_t *, isp_ms_t *);
extern void
isp_put_ct_pt(ispsoftc_t *isp, isp_ct_pt_t *, isp_ct_pt_t *);
extern void
isp_put_ms(ispsoftc_t *isp, isp_ms_t *, isp_ms_t *);
extern void
isp_put_sns_request(ispsoftc_t *, sns_screq_t *, sns_screq_t *);
extern void
isp_put_gid_ft_request(ispsoftc_t *, sns_gid_ft_req_t *,
    sns_gid_ft_req_t *);
extern void
isp_put_gxn_id_request(ispsoftc_t *, sns_gxn_id_req_t *,
    sns_gxn_id_req_t *);
extern void
isp_get_sns_response(ispsoftc_t *, sns_scrsp_t *, sns_scrsp_t *, int);
extern void
isp_get_gid_ft_response(ispsoftc_t *, sns_gid_ft_rsp_t *,
    sns_gid_ft_rsp_t *, int);
extern void
isp_get_gxn_id_response(ispsoftc_t *, sns_gxn_id_rsp_t *,
    sns_gxn_id_rsp_t *);
extern void
isp_get_gff_id_response(ispsoftc_t *, sns_gff_id_rsp_t *,
    sns_gff_id_rsp_t *);
extern void
isp_get_ga_nxt_response(ispsoftc_t *, sns_ga_nxt_rsp_t *,
    sns_ga_nxt_rsp_t *);
extern void
isp_get_els(ispsoftc_t *, els_t *, els_t *);
extern void
isp_put_els(ispsoftc_t *, els_t *, els_t *);
extern void
isp_get_fc_hdr(ispsoftc_t *, fc_hdr_t *, fc_hdr_t *);
extern void
isp_get_fcp_cmnd_iu(ispsoftc_t *, fcp_cmnd_iu_t *, fcp_cmnd_iu_t *);
extern void isp_put_rft_id(ispsoftc_t *, rft_id_t *, rft_id_t *);
extern void isp_get_ct_hdr(ispsoftc_t *isp, ct_hdr_t *, ct_hdr_t *);
extern void isp_put_ct_hdr(ispsoftc_t *isp, ct_hdr_t *, ct_hdr_t *);

#define	ISP_HANDLE_MASK		0x7fff

#ifdef	ISP_TARGET_MODE
#if	defined(__NetBSD__) || defined(__OpenBSD__)
#include <dev/ic/isp_target.h>
#elif 	defined(__FreeBSD__)
#include <dev/isp/isp_target.h>
#else
#include "isp_target.h"
#endif

#define	IS_TARGET_HANDLE(x)     ((x) & 0x8000)

extern int isp_save_xs_tgt(ispsoftc_t *, void *, u_int32_t *);
extern void *isp_find_xs_tgt(ispsoftc_t *, u_int32_t);
extern u_int32_t isp_find_tgt_handle(ispsoftc_t *, void *);
extern void isp_destroy_tgt_handle(ispsoftc_t *, u_int32_t);

extern void
isp_put_atio(ispsoftc_t *, at_entry_t *, at_entry_t *);
extern void
isp_get_atio(ispsoftc_t *, at_entry_t *, at_entry_t *);
extern void
isp_put_atio2(ispsoftc_t *, at2_entry_t *, at2_entry_t *);
extern void
isp_put_atio2e(ispsoftc_t *, at2e_entry_t *, at2e_entry_t *);
extern void
isp_get_atio2(ispsoftc_t *, at2_entry_t *, at2_entry_t *);
extern void
isp_get_atio2e(ispsoftc_t *, at2e_entry_t *, at2e_entry_t *);
extern void
isp_get_atio7(ispsoftc_t *isp, at7_entry_t *, at7_entry_t *);
extern void
isp_put_ctio(ispsoftc_t *, ct_entry_t *, ct_entry_t *);
extern void
isp_get_ctio(ispsoftc_t *, ct_entry_t *, ct_entry_t *);
extern void
isp_put_ctio2(ispsoftc_t *, ct2_entry_t *, ct2_entry_t *);
extern void
isp_put_ctio2e(ispsoftc_t *, ct2e_entry_t *, ct2e_entry_t *);
extern void
isp_put_ctio7(ispsoftc_t *, ct7_entry_t *, ct7_entry_t *);
extern void
isp_get_ctio2(ispsoftc_t *, ct2_entry_t *, ct2_entry_t *);
extern void
isp_get_ctio2e(ispsoftc_t *, ct2e_entry_t *, ct2e_entry_t *);
extern void
isp_get_ctio7(ispsoftc_t *, ct7_entry_t *, ct7_entry_t *);
extern void
isp_put_enable_lun(ispsoftc_t *, lun_entry_t *, lun_entry_t *);
extern void
isp_get_enable_lun(ispsoftc_t *, lun_entry_t *, lun_entry_t *);
extern void
isp_put_notify(ispsoftc_t *, in_entry_t *, in_entry_t *);
extern void
isp_get_notify(ispsoftc_t *, in_entry_t *, in_entry_t *);
extern void
isp_put_notify_fc(ispsoftc_t *, in_fcentry_t *, in_fcentry_t *);
extern void
isp_put_notify_fc_e(ispsoftc_t *, in_fcentry_e_t *, in_fcentry_e_t *);
extern void
isp_put_notify_24xx(ispsoftc_t *, in_fcentry_24xx_t *, in_fcentry_24xx_t *);
extern void
isp_get_notify_fc(ispsoftc_t *, in_fcentry_t *, in_fcentry_t *);
extern void
isp_get_notify_fc_e(ispsoftc_t *, in_fcentry_e_t *, in_fcentry_e_t *);
extern void
isp_get_notify_24xx(ispsoftc_t *, in_fcentry_24xx_t *, in_fcentry_24xx_t *);
extern void
isp_put_notify_ack(ispsoftc_t *, na_entry_t *, na_entry_t *);
extern void
isp_get_notify_ack(ispsoftc_t *, na_entry_t *, na_entry_t *);
extern void
isp_put_notify_24xx_ack(ispsoftc_t *, na_fcentry_24xx_t *, na_fcentry_24xx_t *);
extern void
isp_put_notify_ack_fc(ispsoftc_t *, na_fcentry_t *, na_fcentry_t *);
extern void
isp_put_notify_ack_fc_e(ispsoftc_t *, na_fcentry_e_t *, na_fcentry_e_t *);
extern void isp_put_notify_ack_24xx(ispsoftc_t *, na_fcentry_24xx_t *,
    na_fcentry_24xx_t *);
extern void
isp_get_notify_ack_fc(ispsoftc_t *, na_fcentry_t *, na_fcentry_t *);
extern void
isp_get_notify_ack_fc_e(ispsoftc_t *, na_fcentry_e_t *, na_fcentry_e_t *);
extern void isp_get_notify_ack_24xx(ispsoftc_t *, na_fcentry_24xx_t *,
    na_fcentry_24xx_t *);
extern void
isp_get_abts(ispsoftc_t *, abts_t *, abts_t *);
extern void
isp_put_abts_rsp(ispsoftc_t *, abts_rsp_t *, abts_rsp_t *);
extern void
isp_get_abts_rsp(ispsoftc_t *, abts_rsp_t *, abts_rsp_t *);
#endif	/* ISP_TARGET_MODE */
#endif	/* _ISP_LIBRARY_H */
@


1.2
log
@Major update to isp driver, mostly from mjacob via FreeBSD.

Everything that worked before should still work so in it goes. Newer
boards (2300, 2400) may now work but are still a work in progress.
Thanks to many testers but especially kettenis@@ for finding a show
stopper bug and stomping it.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: isp_library.h,v 1.1 2008/11/16 00:00:13 krw Exp $ */
@


1.1
log
@Add new style replacement for isp_inline.h.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d32 34
a65 12
#include <dev/ic/isp_openbsd.h>

extern int isp_save_xs(struct ispsoftc *, XS_T *, u_int16_t *);
extern XS_T *isp_find_xs(struct ispsoftc *, u_int16_t);
extern u_int16_t isp_find_handle(struct ispsoftc *, XS_T *);
extern int isp_handle_index(u_int16_t);
extern void isp_destroy_handle(struct ispsoftc *, u_int16_t);
extern void isp_remove_handle(struct ispsoftc *, XS_T *);

extern int
isp_getrqentry(struct ispsoftc *, u_int16_t *, u_int16_t *, void **);

d67 1
a67 5
isp_print_qentry (struct ispsoftc *, char *, int, void *);


#define	TBA	(4 * (((QENTRY_LEN >> 2) * 3) + 1) + 1)

d69 1
a69 8
isp_print_bytes(struct ispsoftc *, char *, int, void *);

extern int isp_fc_runstate(struct ispsoftc *, int);

extern void isp_copy_out_hdr(struct ispsoftc *, isphdr_t *, isphdr_t *);
extern void isp_copy_in_hdr(struct ispsoftc *, isphdr_t *, isphdr_t *);
extern int isp_get_response_type(struct ispsoftc *, isphdr_t *);

d71 5
a75 1
isp_put_request(struct ispsoftc *, ispreq_t *, ispreq_t *);
d77 1
a77 1
isp_put_request_t2(struct ispsoftc *, ispreqt2_t *, ispreqt2_t *);
d79 1
a79 1
isp_put_request_t3(struct ispsoftc *, ispreqt3_t *, ispreqt3_t *);
d81 1
a81 1
isp_put_extended_request(struct ispsoftc *, ispextreq_t *, ispextreq_t *);
d83 1
a83 1
isp_put_cont_req(struct ispsoftc *, ispcontreq_t *, ispcontreq_t *);
d85 1
a85 1
isp_put_cont64_req(struct ispsoftc *, ispcontreq64_t *, ispcontreq64_t *);
d87 1
a87 1
isp_get_response(struct ispsoftc *, ispstatusreq_t *, ispstatusreq_t *);
d89 1
a89 1
isp_get_response_x(struct ispsoftc *, ispstatus_cont_t *, ispstatus_cont_t *);
d91 1
a91 1
isp_get_rio2(struct ispsoftc *, isp_rio2_t *, isp_rio2_t *);
d93 1
a93 1
isp_put_icb(struct ispsoftc *, isp_icb_t *, isp_icb_t *);
d95 1
a95 1
isp_get_pdb(struct ispsoftc *, isp_pdb_t *, isp_pdb_t *);
d97 1
a97 1
isp_get_ct_hdr(struct ispsoftc *isp, ct_hdr_t *, ct_hdr_t *);
d99 1
a99 1
isp_put_sns_request(struct ispsoftc *, sns_screq_t *, sns_screq_t *);
d101 1
a101 1
isp_put_gid_ft_request(struct ispsoftc *, sns_gid_ft_req_t *,
d104 1
a104 1
isp_put_gxn_id_request(struct ispsoftc *, sns_gxn_id_req_t *,
d107 1
a107 1
isp_get_sns_response(struct ispsoftc *, sns_scrsp_t *, sns_scrsp_t *, int);
d109 1
a109 1
isp_get_gid_ft_response(struct ispsoftc *, sns_gid_ft_rsp_t *,
d112 1
a112 1
isp_get_gxn_id_response(struct ispsoftc *, sns_gxn_id_rsp_t *,
d115 1
a115 1
isp_get_gff_id_response(struct ispsoftc *, sns_gff_id_rsp_t *,
d118 1
a118 1
isp_get_ga_nxt_response(struct ispsoftc *, sns_ga_nxt_rsp_t *,
d120 14
d135 5
a139 1
#ifndef	_ISP_TARGET_H
d142 24
d167 1
a167 1
isp_put_atio(struct ispsoftc *, at_entry_t *, at_entry_t *);
d169 1
a169 1
isp_get_atio(struct ispsoftc *, at_entry_t *, at_entry_t *);
d171 1
a171 1
isp_put_atio2(struct ispsoftc *, at2_entry_t *, at2_entry_t *);
d173 1
a173 1
isp_get_atio2(struct ispsoftc *, at2_entry_t *, at2_entry_t *);
d175 1
a175 1
isp_put_ctio(struct ispsoftc *, ct_entry_t *, ct_entry_t *);
d177 1
a177 1
isp_get_ctio(struct ispsoftc *, ct_entry_t *, ct_entry_t *);
d179 1
a179 1
isp_put_ctio2(struct ispsoftc *, ct2_entry_t *, ct2_entry_t *);
d181 1
a181 1
isp_get_ctio2(struct ispsoftc *, ct2_entry_t *, ct2_entry_t *);
d183 1
a183 1
isp_put_enable_lun(struct ispsoftc *, lun_entry_t *, lun_entry_t *);
d185 1
a185 1
isp_get_enable_lun(struct ispsoftc *, lun_entry_t *, lun_entry_t *);
d187 1
a187 1
isp_put_notify(struct ispsoftc *, in_entry_t *, in_entry_t *);
d189 1
a189 1
isp_get_notify(struct ispsoftc *, in_entry_t *, in_entry_t *);
d191 1
a191 1
isp_put_notify_fc(struct ispsoftc *, in_fcentry_t *, in_fcentry_t *);
d193 1
a193 1
isp_get_notify_fc(struct ispsoftc *, in_fcentry_t *, in_fcentry_t *);
d195 1
a195 1
isp_put_notify_ack(struct ispsoftc *, na_entry_t *, na_entry_t *);
d197 1
a197 1
isp_get_notify_ack(struct ispsoftc *, na_entry_t *, na_entry_t *);
d199 1
a199 1
isp_put_notify_ack_fc(struct ispsoftc *, na_fcentry_t *, na_fcentry_t *);
d201 24
a224 6
isp_get_notify_ack_fc(struct ispsoftc *, na_fcentry_t *, na_fcentry_t *);
#endif

#define	ISP_IS_SBUS(isp)	\
	(ISP_SBUS_SUPPORTED && (isp)->isp_bustype == ISP_BT_SBUS)

@

