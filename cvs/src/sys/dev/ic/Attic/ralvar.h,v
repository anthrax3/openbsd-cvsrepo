head	1.9;
access;
symbols
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7;
locks; strict;
comment	@ * @;


1.9
date	2006.01.09.20.03.34;	author damien;	state dead;
branches;
next	1.8;

1.8
date	2005.10.02.13.50.29;	author damien;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.11.19.39.35;	author damien;	state Exp;
branches;
next	1.6;

1.6
date	2005.03.01.19.38.09;	author damien;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.01.19.30.42;	author damien;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.28.17.49.22;	author damien;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.28.17.03.33;	author damien;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.19.09.45.16;	author damien;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.15.20.51.21;	author damien;	state Exp;
branches;
next	;


desc
@@


1.9
log
@- add preliminary support for Ralink Technology RT2561, RT2561S and RT2661
  chipsets in ral(4).
- restructure the code a bit; split ic/ral.c into ic/rt2560.c and ic/rt2661.c
- import the 8051 microcode files required by these chipsets.
- more to come;  there is currently no automatic rate control and some
  features are untested (hostap and ibss modes for instance).  most of
  the pre-802.11n capabilities of the RT2661 chipset are not supported
  (like frame aggregation, piggy-back).  MIMO should work though the
  performance/range gain has not been measured.
@
text
@/*	$OpenBSD: ralvar.h,v 1.8 2005/10/02 13:50:29 damien Exp $  */

/*-
 * Copyright (c) 2005
 *	Damien Bergamini <damien.bergamini@@free.fr>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

struct ral_rx_radiotap_header {
	struct ieee80211_radiotap_header wr_ihdr;
	uint64_t	wr_tsf;
	uint8_t		wr_flags;
	uint16_t	wr_chan_freq;
	uint16_t	wr_chan_flags;
	uint8_t		wr_antenna;
	uint8_t		wr_antsignal;
} __packed;

#define RAL_RX_RADIOTAP_PRESENT						\
	((1 << IEEE80211_RADIOTAP_TSFT) |				\
	 (1 << IEEE80211_RADIOTAP_FLAGS) |				\
	 (1 << IEEE80211_RADIOTAP_CHANNEL) |				\
	 (1 << IEEE80211_RADIOTAP_ANTENNA) |				\
	 (1 << IEEE80211_RADIOTAP_DB_ANTSIGNAL))

struct ral_tx_radiotap_header {
	struct ieee80211_radiotap_header wt_ihdr;
	uint8_t		wt_flags;
	uint8_t		wt_rate;
	uint16_t	wt_chan_freq;
	uint16_t	wt_chan_flags;
	uint8_t		wt_antenna;
} __packed;

#define RAL_TX_RADIOTAP_PRESENT						\
	((1 << IEEE80211_RADIOTAP_FLAGS) |				\
	 (1 << IEEE80211_RADIOTAP_RATE) |				\
	 (1 << IEEE80211_RADIOTAP_CHANNEL) |				\
	 (1 << IEEE80211_RADIOTAP_ANTENNA))

struct ral_tx_data {
	bus_dmamap_t			map;
	struct mbuf			*m;
	struct ieee80211_node		*ni;
	struct ieee80211_rssdesc	id;
};

struct ral_tx_ring {
	bus_dmamap_t		map;
	bus_dma_segment_t	seg;
	bus_addr_t		physaddr;
	struct ral_tx_desc	*desc;
	struct ral_tx_data	*data;
	int			count;
	int			queued;
	int			cur;
	int			next;
	int			cur_encrypt;
	int			next_encrypt;
};

struct ral_rx_data {
	bus_dmamap_t	map;
	struct mbuf	*m;
	int		drop;
};

struct ral_rx_ring {
	bus_dmamap_t		map;
	bus_dma_segment_t	seg;
	bus_addr_t		physaddr;
	struct ral_rx_desc	*desc;
	struct ral_rx_data	*data;
	int			count;
	int			cur;
	int			next;
	int			cur_decrypt;
};

struct ral_node {
	struct ieee80211_node		ni;
	struct ieee80211_rssadapt	rssadapt;
};

struct ral_softc {
	struct device			sc_dev;

	struct ieee80211com		sc_ic;
	int				(*sc_newstate)(struct ieee80211com *,
					    enum ieee80211_state, int);

	int				(*sc_enable)(struct ral_softc *);
	void				(*sc_disable)(struct ral_softc *);
	void				(*sc_power)(struct ral_softc *, int);

	bus_dma_tag_t			sc_dmat;
	bus_space_tag_t			sc_st;
	bus_space_handle_t		sc_sh;

	struct timeout			scan_ch;
	struct timeout			rssadapt_ch;

	int				sc_flags;
#define RAL_ENABLED	(1 << 0)

	int				sc_tx_timer;

	uint32_t			asic_rev;
	uint32_t			eeprom_rev;
	uint8_t				rf_rev;

	struct ral_tx_ring		txq;
	struct ral_tx_ring		prioq;
	struct ral_tx_ring		atimq;
	struct ral_tx_ring		bcnq;
	struct ral_rx_ring		rxq;

	uint32_t			rf_regs[4];
	uint8_t				txpow[14];

	struct {
		uint8_t		reg;
		uint8_t		val;
	}				bbp_prom[16];

	int				led_mode;
	int				hw_radio;
	int				rx_ant;
	int				tx_ant;
	int				nb_ant;

#if NBPFILTER > 0
	caddr_t				sc_drvbpf;

	union {
		struct ral_rx_radiotap_header th;
		uint8_t	pad[64];
	}				sc_rxtapu;
#define sc_rxtap	sc_rxtapu.th
	int				sc_rxtap_len;

	union {
		struct ral_tx_radiotap_header th;
		uint8_t	pad[64];
	}				sc_txtapu;
#define sc_txtap	sc_txtapu.th
	int				sc_txtap_len;
#endif
};

int	ral_attach(struct ral_softc *);
int	ral_detach(struct ral_softc *);
int	ral_intr(void *);
int	ral_activate(struct device *, enum devact);
@


1.8
log
@avoid multiple calls to sc_enable().  cardbus_intr_establish() was called
multiple times without calling cardbus_intr_disestablish() in between.
@
text
@d1 1
a1 1
/*	$OpenBSD: ralvar.h,v 1.7 2005/03/11 19:39:35 damien Exp $  */
@


1.7
log
@some cosmetic tweaks
fix debug messages level
simplify e2prom code
@
text
@d1 1
a1 1
/*	$OpenBSD: ralvar.h,v 1.6 2005/03/01 19:38:09 damien Exp $  */
d113 3
@


1.6
log
@use one uint64_t instead of two uint32_t in rx radiotap header.
@
text
@d1 1
a1 1
/*	$OpenBSD: ralvar.h,v 1.5 2005/03/01 19:30:42 damien Exp $  */
d131 1
a131 1
		uint8_t		val;	
a138 2
	int				bbp_tune;
	
@


1.5
log
@make sure radiotap structures are packed.
@
text
@d1 1
a1 1
/*	$OpenBSD: ralvar.h,v 1.4 2005/02/28 17:49:22 damien Exp $  */
d22 1
a22 2
	uint32_t	wr_tsf_lo;
	uint32_t	wr_tsf_hi;
@


1.4
log
@add radiotap, monitor and promiscuous mode support.
@
text
@d1 1
a1 1
/*	$OpenBSD: ralvar.h,v 1.3 2005/02/28 17:03:33 damien Exp $  */
d29 1
a29 1
};
d45 1
a45 1
};
@


1.3
log
@do per-node rate adaptation. paves the way for ibss support.
@
text
@d1 1
a1 1
/*	$OpenBSD: ralvar.h,v 1.2 2005/02/19 09:45:16 damien Exp $  */
d22 2
d27 1
d32 2
a33 1
	((1 << IEEE80211_RADIOTAP_FLAGS) |				\
d35 1
d41 1
d44 1
d49 3
a51 1
	 (1 << IEEE80211_RADIOTAP_CHANNEL))
@


1.2
log
@cosmetic tweaks.
@
text
@d1 1
a1 1
/*	$OpenBSD: ralvar.h,v 1.1 2005/02/15 20:51:21 damien Exp $  */
d83 5
a101 2

	struct ieee80211_rssadapt	rssadapt;
@


1.1
log
@Driver for Ralink Technology RT2500 wireless adapters.
@
text
@d1 1
a1 1
/*	$OpenBSD$  */
d95 2
a96 2
        bus_space_tag_t			sc_st;
        bus_space_handle_t		sc_sh;
@

