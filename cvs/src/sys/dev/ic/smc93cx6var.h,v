head	1.17;
access;
symbols
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.8
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.6
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.16.0.52
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.44
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.48
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.46
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.42
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.40
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.36
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.38
	OPENBSD_5_0:1.16.0.34
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.32
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.30
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.26
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.28
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.24
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.22
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.20
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.18
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.16
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.14
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.12
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.10
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.8
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.6
	OPENBSD_3_6_BASE:1.16
	SMP_SYNC_A:1.16
	SMP_SYNC_B:1.16
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.4
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.12
	UBC:1.6.0.12
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.10
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.8
	OPENBSD_2_8:1.6.0.6
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.2
	SMP_BASE:1.6
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.17
date	2015.09.12.16.24.14;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	0ApO5ZvZ5e8sEqPY;

1.16
date	2003.08.15.23.41.47;	author fgsch;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.15.23.01.01;	author fgsch;	state Exp;
branches;
next	1.14;

1.14
date	2003.08.12.10.27.10;	author fgsch;	state Exp;
branches;
next	1.13;

1.13
date	2003.08.08.21.34.39;	author fgsch;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.30.19.36.59;	author smurph;	state Exp;
branches;
next	1.11;

1.11
date	2002.06.28.01.27.59;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.28.00.40.53;	author millert;	state dead;
branches;
next	1.9;

1.9
date	2002.06.28.00.34.54;	author smurph;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.19.02.49.20;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.04.36.33;	author smurph;	state dead;
branches;
next	1.6;

1.6
date	2000.01.31.01.50.54;	author weingart;	state Exp;
branches
	1.6.2.1
	1.6.12.1;
next	1.5;

1.5
date	96.11.28.23.27.53;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.10.31.01.01.41;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.08.21.22.27.45;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.27.21.15.50;	author shawn;	state Exp;
branches;
next	1.1;

1.1
date	96.05.26.00.27.06;	author deraadt;	state Exp;
branches;
next	;

1.6.2.1
date	2002.03.06.02.11.43;	author niklas;	state dead;
branches;
next	1.6.2.2;

1.6.2.2
date	2002.03.28.12.08.27;	author niklas;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2003.03.28.00.38.15;	author niklas;	state Exp;
branches;
next	1.6.2.4;

1.6.2.4
date	2004.02.19.10.56.20;	author niklas;	state Exp;
branches;
next	;

1.6.12.1
date	2002.06.11.03.42.20;	author art;	state Exp;
branches;
next	1.6.12.2;

1.6.12.2
date	2002.10.29.00.33.26;	author art;	state Exp;
branches;
next	;


desc
@@


1.17
log
@let the C files do the sys/param.h including job
@
text
@/*	$OpenBSD: smc93cx6var.h,v 1.16 2003/08/15 23:41:47 fgsch Exp $	*/
/* $FreeBSD: sys/dev/aic7xxx/93cx6.h,v 1.3 1999/12/29 04:35:33 peter Exp $ */
/*
 * Interface to the 93C46 serial EEPROM that is used to store BIOS
 * settings for the aic7xxx based adaptec SCSI controllers.  It can
 * also be used for 93C26 and 93C06 serial EEPROMS.
 *
 * Copyright (c) 1994, 1995 Justin T. Gibbs.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions, and the following disclaimer,
 *    without modification, immediately at the beginning of the file.
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * Where this Software is combined with software released under the terms of 
 * the GNU Public License ("GPL") and the terms of the GPL would require the 
 * combined work to also be released under the terms of the GPL, the terms
 * and conditions of this License will apply in addition to those of the
 * GPL with the exception of any terms or conditions of this License that
 * conflict with, or are expressly prohibited by, the GPL.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef _SMC93CX6VAR_H_
#define _SMC93CX6VAR_H_

#ifdef _KERNEL

typedef enum {
	C46 = 6,
	C56_66 = 8
} seeprom_chip_t;

struct seeprom_descriptor {
	bus_space_tag_t sd_tag;
	bus_space_handle_t sd_bsh;
	bus_size_t sd_regsize;
	bus_size_t sd_control_offset;
	bus_size_t sd_status_offset;
	bus_size_t sd_dataout_offset;
	seeprom_chip_t sd_chip;
	u_int16_t sd_MS;
	u_int16_t sd_RDY;
	u_int16_t sd_CS;
	u_int16_t sd_CK;
	u_int16_t sd_DO;
	u_int16_t sd_DI;
};

/*
 * This function will read count 16-bit words from the serial EEPROM and
 * return their value in buf.  The port address of the aic7xxx serial EEPROM
 * control register is passed in as offset.  The following parameters are
 * also passed in:
 *
 *   CS  - Chip select
 *   CK  - Clock
 *   DO  - Data out
 *   DI  - Data in
 *   RDY - SEEPROM ready
 *   MS  - Memory port mode select
 *
 *  A failed read attempt returns 0, and a successful read returns 1.
 */

#define	SEEPROM_INB(sd) \
	(((sd)->sd_regsize == 4) \
	    ? bus_space_read_4((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_control_offset) \
	    : bus_space_read_1((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_control_offset))

#define	SEEPROM_OUTB(sd, value) \
do { \
	if ((sd)->sd_regsize == 4) \
		bus_space_write_4((sd)->sd_tag, (sd)->sd_bsh, \
		    (sd)->sd_control_offset, (value)); \
	else \
		bus_space_write_1((sd)->sd_tag, (sd)->sd_bsh, \
		    (sd)->sd_control_offset, (u_int8_t) (value)); \
} while(0)

#define	SEEPROM_STATUS_INB(sd) \
	(((sd)->sd_regsize == 4) \
	    ? bus_space_read_4((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_status_offset) \
	    : bus_space_read_1((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_status_offset))

#define	SEEPROM_DATA_INB(sd) \
	(((sd)->sd_regsize == 4) \
	    ? bus_space_read_4((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_dataout_offset) \
	    : bus_space_read_1((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_dataout_offset))

int	read_seeprom(struct seeprom_descriptor *, u_int16_t *,
	     bus_size_t, bus_size_t);

#endif /* _KERNEL */
#endif /* _SMC93CX6VAR_H_ */
@


1.16
log
@cleanup.
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.15 2003/08/15 23:01:01 fgsch Exp $	*/
a40 2

#include <sys/param.h>
@


1.15
log
@- remove ahc dependency, convert smc93cx6 into an attribute.
- support for 8 and 32 bit registers.
from NetBSD.
deraadt@@ and krw@@ testing and ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.14 2003/08/12 10:27:10 fgsch Exp $	*/
a42 3
#if !(defined(__NetBSD__) || defined(__OpenBSD__))
#include <sys/systm.h>
#endif
d114 2
a115 2
int read_seeprom(struct seeprom_descriptor *, u_int16_t *,
		 bus_size_t, bus_size_t);
@


1.14
log
@move verify_cksum() to ahc; krw@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.13 2003/08/08 21:34:39 fgsch Exp $	*/
d55 3
a57 1
	struct ahc_softc *sd_ahc;
d87 6
a92 1
	ahc_inb(sd->sd_ahc, sd->sd_control_offset)
d94 7
a100 3
do {								\
	ahc_outb(sd->sd_ahc, sd->sd_control_offset, value);	\
	ahc_flush_device_writes(sd->sd_ahc);			\
d104 6
a109 1
	ahc_inb(sd->sd_ahc, sd->sd_status_offset)
d111 5
a115 1
	ahc_inb(sd->sd_ahc, sd->sd_dataout_offset)
@


1.13
log
@remove unused code and a some cleanup; deraadt@@ and krw@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.12 2002/06/30 19:36:59 smurph Exp $	*/
a98 1
int verify_cksum(struct seeprom_config *);
d101 1
a101 1
#endif /* SMC93CX6VAR_H_ */
@


1.12
log
@Add write function to seeprom.
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.11 2002/06/28 01:27:59 millert Exp $	*/
d97 3
a99 5
int read_seeprom(struct seeprom_descriptor *sd, u_int16_t *buf,
		 bus_size_t start_addr, bus_size_t count);
int write_seeprom(struct seeprom_descriptor *sd, u_int16_t *buf,
		  bus_size_t start_addr, bus_size_t count);
int verify_cksum(struct seeprom_config *sc);
@


1.11
log
@actually, new new ahc uses these after all
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.9 2002/06/28 00:34:54 smurph Exp $	*/
d99 2
@


1.10
log
@not used by new ahc driver
@
text
@@


1.9
log
@Return of new ahc
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.8 2002/03/19 02:49:20 millert Exp $	*/
@


1.8
log
@revert to older ahc driver until the new one's bugs are fixed
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.6 2000/01/31 01:50:54 weingart Exp $	*/
d39 2
d55 1
a55 2
	bus_space_tag_t sd_tag;             
	bus_space_handle_t sd_bsh;
d85 1
a85 1
	bus_space_read_1(sd->sd_tag, sd->sd_bsh, sd->sd_control_offset)
d87 5
a91 1
	bus_space_write_1(sd->sd_tag, sd->sd_bsh, sd->sd_control_offset, value)
d93 1
a93 1
	bus_space_read_1(sd->sd_tag, sd->sd_bsh, sd->sd_status_offset)
d95 1
a95 1
	bus_space_read_1(sd->sd_tag, sd->sd_bsh, sd->sd_dataout_offset)
d99 1
d102 1
@


1.7
log
@New port of FreeBSD's ahc driver
@
text
@@


1.6
log
@Add support for 93C66 and 93C56 SEEPROM chips.
Adapted from FreeBSD code.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.6.12.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.6 2000/01/31 01:50:54 weingart Exp $	*/
@


1.6.12.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.6.12.1 2002/06/11 03:42:20 art Exp $	*/
a38 2
#ifndef _SMC93CX6VAR_H_
#define _SMC93CX6VAR_H_
d53 2
a54 1
	struct ahc_softc *sd_ahc;
d84 1
a84 1
	ahc_inb(sd->sd_ahc, sd->sd_control_offset)
d86 1
a86 5
do {								\
	ahc_outb(sd->sd_ahc, sd->sd_control_offset, value);	\
	ahc_flush_device_writes(sd->sd_ahc);			\
} while(0)

d88 1
a88 1
	ahc_inb(sd->sd_ahc, sd->sd_status_offset)
d90 1
a90 1
	ahc_inb(sd->sd_ahc, sd->sd_dataout_offset)
a93 3
int write_seeprom(struct seeprom_descriptor *sd, u_int16_t *buf,
		  bus_size_t start_addr, bus_size_t count);
int verify_cksum(struct seeprom_config *sc);
a95 1
#endif /* SMC93CX6VAR_H_ */
@


1.6.2.1
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.6 2000/01/31 01:50:54 weingart Exp $	*/
@


1.6.2.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD: smc93cx6var.h,v 1.8 2002/03/19 02:49:20 millert Exp $	*/
@


1.6.2.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a38 2
#ifndef _SMC93CX6VAR_H_
#define _SMC93CX6VAR_H_
d53 2
a54 1
	struct ahc_softc *sd_ahc;
d84 1
a84 1
	ahc_inb(sd->sd_ahc, sd->sd_control_offset)
d86 1
a86 5
do {								\
	ahc_outb(sd->sd_ahc, sd->sd_control_offset, value);	\
	ahc_flush_device_writes(sd->sd_ahc);			\
} while(0)

d88 1
a88 1
	ahc_inb(sd->sd_ahc, sd->sd_status_offset)
d90 1
a90 1
	ahc_inb(sd->sd_ahc, sd->sd_dataout_offset)
a93 3
int write_seeprom(struct seeprom_descriptor *sd, u_int16_t *buf,
		  bus_size_t start_addr, bus_size_t count);
int verify_cksum(struct seeprom_config *sc);
a95 1
#endif /* SMC93CX6VAR_H_ */
@


1.6.2.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d43 3
d55 1
a55 3
	bus_space_tag_t sd_tag;
	bus_space_handle_t sd_bsh;
	bus_size_t sd_regsize;
d85 1
a85 6
	(((sd)->sd_regsize == 4) \
	    ? bus_space_read_4((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_control_offset) \
	    : bus_space_read_1((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_control_offset))

d87 3
a89 7
do { \
	if ((sd)->sd_regsize == 4) \
		bus_space_write_4((sd)->sd_tag, (sd)->sd_bsh, \
		    (sd)->sd_control_offset, (value)); \
	else \
		bus_space_write_1((sd)->sd_tag, (sd)->sd_bsh, \
		    (sd)->sd_control_offset, (u_int8_t) (value)); \
d93 1
a93 6
	(((sd)->sd_regsize == 4) \
	    ? bus_space_read_4((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_status_offset) \
	    : bus_space_read_1((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_status_offset))

d95 1
a95 5
	(((sd)->sd_regsize == 4) \
	    ? bus_space_read_4((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_dataout_offset) \
	    : bus_space_read_1((sd)->sd_tag, (sd)->sd_bsh, \
	          (sd)->sd_dataout_offset))
d97 5
a101 2
int	read_seeprom(struct seeprom_descriptor *, u_int16_t *,
	     bus_size_t, bus_size_t);
d104 1
a104 1
#endif /* _SMC93CX6VAR_H_ */
@


1.5
log
@Adaption to new bus.h from NetBSD.  Various driver has been updated to
NetBSD 961107 state.  Other has not, partly because sometimes the bus.h
changes was coupled with other changes.
@
text
@d1 2
a2 3
/*	$OpenBSD: smc93cx6var.h,v 1.4 1996/10/31 01:01:41 niklas Exp $	*/
/*	$NetBSD: smc93cx6var.h,v 1.3 1996/10/21 22:34:41 thorpej Exp $	*/

d15 23
a37 9
 *    notice immediately at the beginning of the file, without modification,
 *    this list of conditions, and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Absolutely no warranty of function or purpose is made by the author
 *    Justin T. Gibbs.
 * 4. Modifications may be freely made to this file if the above conditions
 *    are met.
d45 7
d53 6
a58 7
#if defined(__FreeBSD__)
	u_long sd_iobase;
#elif defined(__NetBSD__) || defined(__OpenBSD__)
	bus_space_tag_t sd_iot;
	bus_space_handle_t sd_ioh;
	bus_size_t sd_offset;
#endif
a82 4
#if defined(__FreeBSD__)
#define	SEEPROM_INB(sd)		inb(sd->sd_iobase)
#define	SEEPROM_OUTB(sd, value)	outb(sd->sd_iobase, value)
#elif defined(__NetBSD__) || defined(__OpenBSD__)
d84 1
a84 1
	bus_space_read_1(sd->sd_iot, sd->sd_ioh, sd->sd_offset)
d86 8
a93 2
	bus_space_write_1(sd->sd_iot, sd->sd_ioh, sd->sd_offset, value)
#endif
d95 1
a95 7
#if defined(__FreeBSD__)
int read_seeprom __P((struct seeprom_descriptor *sd,
    u_int16_t *buf, u_int start_addr, int count));
#elif defined(__NetBSD__) || defined(__OpenBSD__)
int read_seeprom __P((struct seeprom_descriptor *sd,
    u_int16_t *buf, bus_size_t start_addr, bus_size_t count));
#endif
@


1.4
log
@$OpenBSD RCSIDs
@
text
@d1 3
a3 1
/*	$OpenBSD: smc93cx6var.h,v 1.3 1996/08/21 22:27:45 deraadt Exp $	*/
d36 3
a38 3
	bus_chipset_tag_t sd_bc;
	bus_io_handle_t sd_ioh;
	bus_io_size_t sd_offset;
d69 1
a69 1
	bus_io_read_1(sd->sd_bc, sd->sd_ioh, sd->sd_offset)
d71 1
a71 1
	bus_io_write_1(sd->sd_bc, sd->sd_ioh, sd->sd_offset, value)
d79 1
a79 1
    u_int16_t *buf, bus_io_size_t start_addr, bus_io_size_t count));
@


1.3
log
@check for __OpenBSD__, prep for tossing __NetBSD__?
@
text
@d1 1
a22 2
 *
 *      $Id: smc93cx6var.h,v 1.2 1996/06/27 21:15:50 shawn Exp $
@


1.2
log
@new 2940 driver merged from freebsd sources 960623
@
text
@d23 1
a23 1
 *      $Id: 93cx6.h,v 1.3 1996/05/30 07:19:55 gibbs Exp $
d27 1
a27 1
#if !defined(__NetBSD__)
d34 1
a34 1
#elif defined(__NetBSD__)
d66 1
a66 1
#elif defined(__NetBSD__)
d76 1
a76 1
#elif defined(__NetBSD__)
@


1.1
log
@sync 0521
@
text
@d23 1
a23 1
 *      $Id: smc93cx6var.h,v 1.1.1.1 1996/05/17 19:06:39 niklas Exp $
d62 11
a79 2
int acquire_seeprom __P((struct seeprom_descriptor *sd));
void release_seeprom __P((struct seeprom_descriptor *sd));
@
