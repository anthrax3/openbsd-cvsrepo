head	1.25;
access;
symbols
	OPENBSD_6_1_BASE:1.25
	OPENBSD_6_0:1.25.0.8
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.2
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.25.0.4
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.24.0.22
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.24.0.26
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.24.0.24
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.24.0.20
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.24.0.18
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.24.0.14
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.16
	OPENBSD_5_0:1.24.0.12
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.24.0.10
	OPENBSD_4_9_BASE:1.24
	OPENBSD_4_8:1.24.0.8
	OPENBSD_4_8_BASE:1.24
	OPENBSD_4_7:1.24.0.4
	OPENBSD_4_7_BASE:1.24
	OPENBSD_4_6:1.24.0.6
	OPENBSD_4_6_BASE:1.24
	OPENBSD_4_5:1.24.0.2
	OPENBSD_4_5_BASE:1.24
	OPENBSD_4_4:1.23.0.8
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.23.0.6
	OPENBSD_4_3_BASE:1.23
	OPENBSD_4_2:1.23.0.4
	OPENBSD_4_2_BASE:1.23
	OPENBSD_4_1:1.23.0.2
	OPENBSD_4_1_BASE:1.23
	OPENBSD_4_0:1.19.0.2
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.17.0.6
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.4
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.17.0.2
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.15.0.4
	OPENBSD_3_6_BASE:1.15
	SMP_SYNC_A:1.15
	SMP_SYNC_B:1.15
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.3.0.8
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	SMP:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.25
date	2015.04.05.23.25.57;	author miod;	state Exp;
branches;
next	1.24;
commitid	XOdAFq379z2QzTF2;

1.24
date	2009.02.06.22.51.04;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2007.01.12.22.02.33;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2007.01.11.22.02.04;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2007.01.11.21.58.05;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2006.12.18.18.57.26;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2006.08.22.21.04.32;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2006.04.16.21.03.45;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2005.02.27.22.10.58;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2005.01.23.16.53.21;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2003.12.16.06.07.13;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2003.08.19.03.13.07;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2003.08.19.02.52.38;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2003.08.17.05.52.41;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2003.08.17.02.47.47;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.19.24.22;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.18.09.39.45;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2003.02.11.19.11.51;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2003.01.31.17.00.19;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2003.01.31.03.44.26;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.55;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.25.21.35.26;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.20.08.32.20;	author mickey;	state Exp;
branches
	1.3.4.1
	1.3.8.1;
next	1.2;

1.2
date	2001.01.11.21.30.30;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.30.19.39.38;	author mickey;	state Exp;
branches;
next	;

1.3.4.1
date	2001.05.14.22.24.16;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.03.06.02.11.43;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2002.03.28.12.09.41;	author niklas;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2003.03.28.00.38.15;	author niklas;	state Exp;
branches;
next	1.3.4.5;

1.3.4.5
date	2003.06.07.11.02.29;	author ho;	state Exp;
branches;
next	1.3.4.6;

1.3.4.6
date	2004.02.19.10.56.21;	author niklas;	state Exp;
branches;
next	;

1.3.8.1
date	2002.01.31.22.55.32;	author niklas;	state Exp;
branches;
next	1.3.8.2;

1.3.8.2
date	2002.06.11.03.42.20;	author art;	state Exp;
branches;
next	1.3.8.3;

1.3.8.3
date	2003.05.19.21.59.43;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Work-in-progress support for non-accelerated X11 on *some* sti(4) frame buffers;
based upon the old HP ngle X11 driver. Currently limited to CRX (720/735/750),
Timber (710, old 715), Artist (712, 715) and EG (B-series), however the
colormap isn't set up correctly on Timber and EG yet.

Joint work with Artem Falcon, now in good enough shape to be worked further
in the tree.
@
text
@/*	$OpenBSD: stivar.h,v 1.24 2009/02/06 22:51:04 miod Exp $	*/

/*
 * Copyright (c) 2000-2003 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _IC_STIVAR_H_
#define _IC_STIVAR_H_

struct sti_softc;
struct sti_screen;

/*
 * STI ROM information - one per device
 */
struct sti_rom {
	struct sti_softc	*rom_softc;	/* backpointer to device */
	int			 rom_devtype;

	bus_space_tag_t		 iot, memt;	/* XXX iot unused */
	bus_space_handle_t	 romh;
	bus_space_handle_t	 regh[STI_REGION_MAX];
	bus_addr_t		*bases;

	struct sti_dd		 rom_dd;	/* in word format */
	vaddr_t			 rom_code;

	/*
	 * ROM-provided function pointers
	 */
	sti_init_t		 init;
	sti_mgmt_t		 mgmt;
	sti_unpmv_t		 unpmv;
	sti_blkmv_t		 blkmv;
	sti_test_t		 test;
	sti_exhdl_t		 exhdl;
	sti_inqconf_t		 inqconf;
	sti_scment_t		 scment;
	sti_dmac_t		 dmac;
	sti_flowc_t		 flowc;
	sti_utiming_t		 utiming;
	sti_pmgr_t		 pmgr;
	sti_util_t		 util;
};

/*
 * STI screen information - one per head
 */
struct sti_screen {
	struct sti_rom		*scr_rom;

#ifdef notyet
	u_int			 scr_flags;
#endif

	int			 scr_bpp;

	struct sti_font		 scr_curfont;
	struct sti_cfg		 scr_cfg;
	struct sti_ecfg		 scr_ecfg;
	u_int8_t		 name[STI_DEVNAME_LEN];

	void			*scr_romfont;	/* ROM font copy in memory... */
	u_int			 scr_fontmaxcol;/* ...or in off-screen area */
	u_int			 scr_fontbase;

	u_int8_t		 scr_rcmap[STI_NCMAP],
				 scr_gcmap[STI_NCMAP],
				 scr_bcmap[STI_NCMAP];

	u_int16_t		 fbheight, fbwidth;
	u_int16_t		 oheight, owidth;	/* offscreen size */
	bus_addr_t		 fbaddr;
	bus_size_t		 fblen;

	/* wsdisplay information */
	int			 scr_nscreens;
	u_int			 scr_wsmode;
	struct	wsscreen_descr	 scr_wsd;
	struct	wsscreen_descr	*scr_scrlist[1];
	struct	wsscreen_list	 scr_screenlist;

	/*
	 * Board-specific function data and pointers
	 */
	void			(*setupfb)(struct sti_screen *);
	int			(*putcmap)(struct sti_screen *, u_int, u_int);

	uint32_t		reg10_value;
	uint32_t		reg12_value;
	bus_addr_t		cmap_finish_register;
};

/*
 * STI device state
 */
struct sti_softc {
	struct device		 sc_dev;
#ifdef notyet
	void			*sc_ih;
#endif

	u_int			 sc_flags;
#define	STI_CONSOLE	0x0001	/* first head is console... */
#define	STI_ATTACHED	0x0002	/* ... and wsdisplay_cnattach() has been done */
#define	STI_ROM_ENABLED	0x0004	/* PCI ROM is enabled */

	bus_addr_t		 bases[STI_REGION_MAX];
	struct sti_rom		*sc_rom;
	struct sti_screen	*sc_scr;

	/* optional, required for PCI */
	void			(*sc_enable_rom)(struct sti_softc *);
	void			(*sc_disable_rom)(struct sti_softc *);
};

int	sti_attach_common(struct sti_softc *, bus_space_tag_t, bus_space_tag_t,
	    bus_space_handle_t, u_int);
int	sti_cnattach(struct sti_rom *, struct sti_screen *, bus_space_tag_t,
	    bus_addr_t *, u_int);
void	sti_describe(struct sti_softc *);
void	sti_end_attach(void *);
u_int	sti_rom_size(bus_space_tag_t, bus_space_handle_t);

#endif /* _IC_STIVAR_H_ */
@


1.24
log
@Split sti structures into rom-related information and screen-related
information. This is preliminary work to help eventually supporting the
dual-head ELK model.

Also split the initialization code in several routines, this makes the
code easier to read, and makes it easier to release resources upon failure.

Finally, don't forget to clear the text planes on non-console displays
when initializing.
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.23 2007/01/12 22:02:33 miod Exp $	*/
d33 1
d44 1
d48 1
d50 3
a52 1
	vaddr_t			 rom_code;
d104 10
@


1.23
log
@Keep the wsscreen_descr in the softc, to allow sti of different text
resolutions to attach without disturbing each other.
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.22 2007/01/11 22:02:04 miod Exp $	*/
d34 32
d67 1
a67 2
	struct sti_softc *scr_main;	/* may be NULL if early console */
	int		scr_devtype;
d69 23
a91 38
	bus_space_tag_t	iot, memt;
	bus_space_handle_t romh;
	bus_addr_t	*bases;
	bus_addr_t	fbaddr;
	bus_size_t	fblen;

	int		scr_bpp;

	struct sti_dd	scr_dd;		/* in word format */
	struct sti_font	scr_curfont;
	struct sti_cfg	scr_cfg;
	struct sti_ecfg	scr_ecfg;

	void		*scr_romfont;	/* ROM font copy, either in memory... */
	u_int		scr_fontmaxcol;	/* ...or in off-screen frame buffer */
	u_int		scr_fontbase;

	u_int8_t	scr_rcmap[STI_NCMAP],
			scr_gcmap[STI_NCMAP],
			scr_bcmap[STI_NCMAP];

	vaddr_t		scr_code;
	sti_init_t	init;
	sti_mgmt_t	mgmt;
	sti_unpmv_t	unpmv;
	sti_blkmv_t	blkmv;
	sti_test_t	test;
	sti_exhdl_t	exhdl;
	sti_inqconf_t	inqconf;
	sti_scment_t	scment;
	sti_dmac_t	dmac;
	sti_flowc_t	flowc;
	sti_utiming_t	utiming;
	sti_pmgr_t	pmgr;
	sti_util_t	util;

	u_int16_t	fbheight, fbwidth, oheight, owidth;
	u_int8_t	name[STI_DEVNAME_LEN];
d94 3
a96 1
	struct	wsscreen_descr	scr_wsd;
d98 1
a98 1
	struct	wsscreen_list	scr_screenlist;
d101 3
d105 13
a117 17
	struct device sc_dev;
	void *sc_ih;

	u_int	sc_flags;
#define	STI_TEXTMODE	0x0001
#define	STI_CLEARSCR	0x0002
#define	STI_CONSOLE	0x0004
#define	STI_ATTACHED	0x0008
#define	STI_ROM_ENABLED	0x0010
	int	sc_nscreens;

	bus_space_tag_t iot, memt;
	bus_space_handle_t romh;
	bus_addr_t	bases[STI_REGION_MAX];

	struct sti_screen *sc_scr;
	u_int	sc_wsmode;
d120 2
a121 2
	void	(*sc_enable_rom)(struct sti_softc *);
	void	(*sc_disable_rom)(struct sti_softc *);
d124 4
a127 3
int	sti_attach_common(struct sti_softc *sc, u_int codebase);
void	sti_clear(struct sti_screen *);
int	sti_cnattach(struct sti_screen *, bus_space_tag_t, bus_addr_t *, u_int);
@


1.22
log
@Add the ability for a sti backend to specify callbacks to disable and enable
access to the sti rom, as this seems to be necessary for sti@@pci; hide this
with macros so that platforms which do not have pci support (i.e. hp300)
do not get bloated from this.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.21 2007/01/11 21:58:05 miod Exp $	*/
d76 5
@


1.21
log
@Allow sti_attach_common() to return an error code, and do not fall into
sti_end_attach() if an error has occured.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.20 2006/12/18 18:57:26 miod Exp $	*/
d32 2
d35 1
d87 1
d96 4
@


1.20
log
@Change sti attachment to pass an array of base addresses for the sti regions,
instead of using the rom mapping for region #0 and the device mapping for
region #1. This will allow sti devices on which regions may be relative to
different origins to attach (to be used very soon).

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.19 2006/08/22 21:04:32 miod Exp $	*/
d94 1
a94 1
void	sti_attach_common(struct sti_softc *sc, u_int codebase);
@


1.19
log
@Clear sti display on console attach, now that the bootloader leaves us
with scribbles around; ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.18 2006/04/16 21:03:45 miod Exp $	*/
d37 2
a38 1
	bus_addr_t	base, fbaddr;
d88 1
a88 1
	bus_addr_t base;
d96 1
a96 1
int	sti_cnattach(struct sti_screen *, bus_space_tag_t, bus_addr_t, u_int);
@


1.18
log
@Introduce sti_rom_size() which will compute the size of a card's rom, and
use it instead of duplicating the same logic in 3 places.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.17 2005/02/27 22:10:58 miod Exp $	*/
d94 1
@


1.17
log
@Split sti softc in two structures, one device-related for regular device
attachment and interface, one screen-attached for the real work.

The attachment code is now required to decide whether sti_end_attach() is
run immediately, or as a startuphook.

This allows hp300 to initialize sti early, and use it as a console; hppa
is functionally unchanged, as it uses the PROM console until the root device
is mounted.
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.16 2005/01/23 16:53:21 miod Exp $	*/
d97 1
@


1.16
log
@Two sti(4) changes necessary for hp300:
- specify which microcode bank (pa or m68k) to use at attachment time.
- compensate for broken 8.02 m68k code which reports wrong frame buffer
  offset.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.15 2003/12/16 06:07:13 mickey Exp $	*/
d32 7
a38 3
struct sti_softc {
	struct device sc_dev;
	void *sc_ih;
d40 1
a40 8
	u_int	sc_wsmode;
	u_int	sc_flags;
#define	STI_TEXTMODE	0x0001
#define	STI_CLEARSCR	0x0002
#define	STI_CONSOLE	0x0004
	int	sc_devtype;
	int	sc_nscreens;
	int	sc_bpp;
d42 4
a45 4
	bus_space_tag_t iot, memt;
	bus_space_handle_t romh;
	bus_addr_t base, fbaddr;
	bus_size_t fblen;
d47 3
a49 8
	struct sti_dd sc_dd;		/* in word format */
	struct sti_font sc_curfont;
	struct sti_cfg sc_cfg;
	struct sti_ecfg sc_ecfg;

	void	*sc_romfont;		/* ROM font copy, either in memory... */
	u_int	sc_fontmaxcol;		/* ...or in off-screen frame buffer */
	u_int	sc_fontbase;
d51 3
a53 2
	u_int8_t sc_rcmap[STI_NCMAP], sc_gcmap[STI_NCMAP], sc_bcmap[STI_NCMAP];
	vaddr_t	sc_code;
d55 1
d69 22
d93 4
a96 2
void sti_attach_common(struct sti_softc *sc, u_int codebase);
int sti_intr(void *v);
@


1.15
log
@only map the rom and do not touch the hpa space getting rid of memsize define that was not really true; plus tested by otto@@ and miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.14 2003/08/19 03:13:07 mickey Exp $	*/
d77 1
a77 1
void sti_attach_common(struct sti_softc *sc);
@


1.14
log
@give better depth and cmsize
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.13 2003/08/19 02:52:38 mickey Exp $	*/
d46 3
a48 1
	bus_space_handle_t ioh, romh, fbh;
@


1.13
log
@implement WSDISPLAYIO_{GET,PUT}CMAP; untested
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.12 2003/08/17 05:52:41 mickey Exp $	*/
d43 1
@


1.12
log
@implement WSDISPLAYIO_{S,G}MODE
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.11 2003/08/17 02:47:47 mickey Exp $	*/
d56 1
@


1.11
log
@cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.10 2003/06/02 19:24:22 mickey Exp $	*/
d36 1
@


1.10
log
@kill the caluses three and four on some of my code
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.9 2003/02/18 09:39:45 miod Exp $	*/
a31 2
/* #define	STIDEBUG */

d42 1
a42 1
	
@


1.9
log
@Whenever possible, store the prom font data in off-screen frame buffer
memory, and use block move operations in putchar, rather than keeping a copy
of the prom font in memory and using memory to frame buffer transfers.

Recommended by the sti docs. No visible performance improvement though.

Tested on both kind of sti devices by mickey@@ and myself.
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.8 2003/02/11 19:11:51 miod Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.8
log
@Byte-prom font loading support.
ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.7 2003/01/31 17:00:19 miod Exp $	*/
a54 1
	void *sc_romfont;
d58 5
a62 1
	vaddr_t sc_code;
@


1.7
log
@Working wscons attachment and block move operations; joint debug by mickey
and myself.
wsdisplay at sti will be enabled as soon as byte-size rom font loading is done.
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.6 2003/01/31 03:44:26 mickey Exp $	*/
d54 2
a55 1
	struct sti_font *sc_curfont;
@


1.6
log
@fetch the font and use it, some cleanup and knf
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.5 2002/03/14 01:26:55 millert Exp $	*/
d48 1
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.4 2002/01/25 21:35:26 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 2000 Michael Shalayeff
d53 1
a53 1
	struct sti_font *sc_fonts;	/* in word format */
a55 1
	struct sti_fontcfg sc_fontcfg;
@


1.4
log
@tell wsdisplay if we are a console
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.3 2001/03/20 08:32:20 mickey Exp $	*/
d75 2
a76 2
void sti_attach_common __P((struct sti_softc *sc));
int sti_intr __P((void *v));
@


1.3
log
@better default screen init
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.2 2001/01/11 21:30:30 mickey Exp $	*/
d46 1
@


1.3.8.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.4 2002/01/25 21:35:26 mickey Exp $	*/
a45 1
#define	STI_CONSOLE	0x0004
@


1.3.8.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.3.8.1 2002/01/31 22:55:32 niklas Exp $	*/
d75 2
a76 2
void sti_attach_common(struct sti_softc *sc);
int sti_intr(void *v);
@


1.3.8.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 2000-2003 Michael Shalayeff
a47 1
	int	sc_nscreens;
d53 1
a53 1
	struct sti_font sc_curfont;
d56 1
d58 1
a58 5
	void	*sc_romfont;		/* ROM font copy, either in memory... */
	u_int	sc_fontmaxcol;		/* ...or in off-screen frame buffer */
	u_int	sc_fontbase;

	vaddr_t	sc_code;
@


1.3.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.3 2001/03/20 08:32:20 mickey Exp $	*/
@


1.3.4.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a45 1
#define	STI_CONSOLE	0x0004
@


1.3.4.3
log
@Merge in -current from about a week ago
@
text
@d75 2
a76 2
void sti_attach_common(struct sti_softc *sc);
int sti_intr(void *v);
@


1.3.4.4
log
@Sync the SMP branch with 3.3
@
text
@d4 1
a4 1
 * Copyright (c) 2000-2003 Michael Shalayeff
a47 1
	int	sc_nscreens;
d53 1
a53 1
	struct sti_font sc_curfont;
d56 1
d58 1
a58 5
	void	*sc_romfont;		/* ROM font copy, either in memory... */
	u_int	sc_fontmaxcol;		/* ...or in off-screen frame buffer */
	u_int	sc_fontbase;

	vaddr_t	sc_code;
@


1.3.4.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.3.4.4 2003/03/28 00:38:15 niklas Exp $	*/
d15 5
@


1.3.4.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d32 2
a37 1
	u_int	sc_wsmode;
d44 1
a44 2
	int	sc_bpp;

d46 1
a46 3
	bus_space_handle_t romh;
	bus_addr_t base, fbaddr;
	bus_size_t fblen;
a56 1
	u_int8_t sc_rcmap[STI_NCMAP], sc_gcmap[STI_NCMAP], sc_bcmap[STI_NCMAP];
@


1.2
log
@no stidebug
@
text
@d1 1
a1 1
/*	$OpenBSD: stivar.h,v 1.1 2000/05/30 19:39:38 mickey Exp $	*/
a55 3

	struct wsscreen_descr *sc_screens;
	struct wsscreen_list sti_screenlist;
@


1.1
log
@sti hp graphics, available in pci and hp-prop sgc bus form factors.
attach point for wsdisplay.
a few problems may exist w/ certain prom versions.
tested in byte- and word-wide modes.
no support yet for multiple resolutions and fonts.
pci not tested (obviously).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d34 2
a35 2
#ifndef _STIVAR_H_
#define _STIVAR_H_
d37 1
d80 1
a80 1
#endif /* _STIVAR_H_ */
@

