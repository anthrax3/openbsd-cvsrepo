head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.26
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.30
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.28
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.22
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.24
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.16
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.20
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.18
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.14
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.12
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.8
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.6
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.4
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.14
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.10
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2010.07.27.20.53.39;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2009.11.24.17.40.43;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2006.11.28.20.04.02;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2006.09.19.07.23.02;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2006.09.18.21.33.32;	author dim;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.01.21.48.08;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.14.01.08.11;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Make sure we stop DMA before we suspend.  Remove unused argument to re_stop()
to avoid the dilemma what meaningless value to pass.

ok deraadt@@
@
text
@/*	$OpenBSD: revar.h,v 1.6 2009/11/24 17:40:43 kettenis Exp $	*/

/*
 * Copyright (c) 2005 Peter Valchev <pvalchev@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

int	re_intr(void *);
int	re_attach(struct rl_softc *, const char *);
void	re_reset(struct rl_softc *);
int	re_init(struct ifnet *);
void	re_stop(struct ifnet *);
@


1.6
log
@Reset the chip an re-initialise the interface after reset.  Resetting the
PHY doesn't seem to be necessary on re(4) so don't descend further for now.

Based on a diff from mlarkin@@

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: revar.h,v 1.5 2006/11/28 20:04:02 brad Exp $	*/
d23 1
a23 1
void	re_stop(struct ifnet *, int);
@


1.5
log
@move printing of the interrupt string into re_attach().
@
text
@d1 1
a1 1
/*	$OpenBSD: revar.h,v 1.4 2006/09/19 07:23:02 mickey Exp $	*/
d21 1
@


1.4
log
@no externs on protots ad no casts from void *
@
text
@d1 1
a1 1
/*	$OpenBSD: revar.h,v 1.3 2006/09/18 21:33:32 dim Exp $	*/
d20 1
a20 1
int	re_attach(struct rl_softc *);
@


1.3
log
@Fix for re_stop() being called from re_cardbus_shutdown() with the
wrong arguments, causing uvm_fault on halt/reboot, with a cardbus re
inserted.  While here, cleanup prototypes and use revar.h everywhere.

ok brad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: revar.h,v 1.2 2006/07/01 21:48:08 brad Exp $	*/
d19 4
a22 4
extern int re_intr(void *);
extern int re_attach(struct rl_softc *);
extern int re_init(struct ifnet *);
extern void re_stop(struct ifnet *, int);
@


1.2
log
@(fxp/re)_attach_common -> (fxp/re)_attach
@
text
@d1 1
a1 1
/*	$OpenBSD: revar.h,v 1.1 2005/01/14 01:08:11 pvalchev Exp $	*/
d20 1
a20 1
extern void re_attach(struct rl_softc *);
d22 1
a22 1
extern void re_stop(struct rl_softc *);
@


1.1
log
@split re(4) into bus-independent code (ic/re.c) and PCI front-end
(pci/if_re_pci.c) for soon-to-come cardbus support; ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d20 1
a20 1
extern void re_attach_common(struct rl_softc *);
@

