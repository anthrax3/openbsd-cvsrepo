head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.18
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.14
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.12
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.10
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.10
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.6
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2014.07.11.21.54.38;	author tedu;	state dead;
branches;
next	1.4;
commitid	0n9cIGBISFAEt4b1;

1.4
date	2010.08.05.13.13.17;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2008.02.24.21.46.19;	author uwe;	state Exp;
branches;
next	1.2;

1.2
date	2007.09.01.17.06.26;	author xsa;	state Exp;
branches;
next	1.1;

1.1
date	2007.07.27.16.52.24;	author gwk;	state Exp;
branches;
next	;


desc
@@


1.5
log
@"It's not the years, honey; it's the mileage."

bluetooth support doesn't work and isn't going anywhere. the current
design is a dead end, and should not be the basis for any future support.
general consensus says to whack it so as to not mislead the unwary.
@
text
@/*	$OpenBSD: bthidev.h,v 1.4 2010/08/05 13:13:17 miod Exp $ */
/*	$NetBSD: bthidev.h,v 1.4 2007/11/03 17:41:03 plunky Exp $	*/

/*-
 * Copyright (c) 2006 Itronix Inc.
 * All rights reserved.
 *
 * Written by Iain Hibbert for Itronix Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of Itronix Inc. may not be used to endorse
 *    or promote products derived from this software without specific
 *    prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY ITRONIX INC. ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL ITRONIX INC. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _DEV_BLUETOOTH_BTHIDEV_H_
#define _DEV_BLUETOOTH_BTHIDEV_H_

#ifdef _KERNEL

#define BTHIDBUSCF_REPORTID		0
#define BTHIDBUSCF_REPORTID_DEFAULT	-1

#define bthidevcf_reportid	cf_loc[BTHIDBUSCF_REPORTID]
#define BTHIDEV_UNK_REPORTID	BTHIDBUSCF_REPORTID_DEFAULT

/* HID device header */
struct bthidev {
	struct device	 sc_dev;
	struct btdev	*sc_parent;

	int		 sc_id;		/* report id */
	int		 sc_len;	/* report len */

	void		(*sc_input)	/* input method */
			(struct bthidev *, uint8_t *, int);

	void		(*sc_feature)	/* feature method */
			(struct bthidev *, uint8_t *, int);

	LIST_ENTRY(bthidev)	 sc_next;
};

/* HID device attach arguments */
struct bthidev_attach_args {
	void		*ba_desc;	/* descriptor */
	int		 ba_dlen;	/* descriptor length */
	int		 ba_id;		/* report id */

	void		(*ba_input)	/* input method */
			(struct bthidev *, uint8_t *, int);
	void		(*ba_feature)	/* feature method */
			(struct bthidev *, uint8_t *, int);
	int		(*ba_output)	/* output method */
			(struct bthidev *, uint8_t *, int, int);
};

#endif /* _KERNEL */

#endif /* _DEV_BLUETOOTH_BTHIDEV_H_ */
@


1.4
log
@Allow bthidev_output() to not grab the bt lock, to prevent lock
recursion when trying to send commands from input callbacks. Makes the
caps/num/scroll lock keys on btkbd correctly lit the leds instead of
panic'ing.
Noticed and fix tested by mlarkin@@, "do whatever you want in bt" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: bthidev.h,v 1.3 2008/02/24 21:46:19 uwe Exp $ */
@


1.3
log
@Sync Bluetooth HID drivers with NetBSD and adopt to our needs, as we
don't have problib
@
text
@d1 1
a1 1
/*	$OpenBSD: bthidev.h,v 1.2 2007/09/01 17:06:26 xsa Exp $ */
d74 1
a74 1
			(struct bthidev *, uint8_t *, int);
@


1.2
log
@- Add bthidev(4), from NetBSD.
- Make btms(4) and btkbd(4) compile.
- Removed remaining proplib NetBSD'sim

Prodded a while ago by gwk@@. Eyeballed by miod@@.
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: bthidev.h,v 1.1 2006/06/19 15:44:45 gdamore Exp $	*/
d38 2
d46 1
d63 1
d76 2
@


1.1
log
@Commiting for xsa@@ who dosent want to for some reason. He has KNFed and
de-proplibed some of the netbsd bluetooth drives for HID devices
(mice and keyboards) they will however NOT BUILD YET as they lack the
glue device bthidev and our replacement for the problib.

no objections from uwe
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: bthidev.h,v 1.3 2006/09/10 15:45:56 plunky Exp $	*/
d38 5
a42 5
/* bthidev(4) properties */
#define BTHIDEVcontrolpsm	"control-psm"
#define BTHIDEVinterruptpsm	"interrupt-psm"
#define BTHIDEVdescriptor	"descriptor"
#define BTHIDEVreconnect	"reconnect"
a43 2
#ifdef _KERNEL
/* HID device header */
d46 1
a46 1
	struct device	*sc_parent;
a59 1
/* HID device attach arguments */
d61 1
a61 1
	const void	*ba_desc;	/* descriptor */
a71 1
#endif /* _KERNEL */
@

