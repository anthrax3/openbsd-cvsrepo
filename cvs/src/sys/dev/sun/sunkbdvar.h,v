head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.24
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.20
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.10
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.18
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.16
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.14
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.12
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.8
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.6
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.4
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.2
	OPENBSD_5_0:1.15.0.12
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.10
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.8
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.4
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.6
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.2
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.10.0.12
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.10
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.8
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	SMP:1.1.0.4
	UBC:1.1.0.2
	UBC_SYNC_B:1.4;
locks; strict;
comment	@ * @;


1.16
date	2011.11.09.14.22.38;	author shadchin;	state Exp;
branches;
next	1.15;

1.15
date	2009.01.12.21.11.58;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2009.01.12.17.45.37;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2009.01.11.18.59.54;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2009.01.11.16.12.15;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2009.01.11.15.53.58;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.11.16.44.51;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2005.05.14.15.25.20;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.19.08.58;	author jason;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.17.04.53.56;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	2003.01.22.19.02.31;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.29.01.00.51;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.08.12.10.43.56;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.29.20.43.43;	author maja;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.08.17.49.42;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.25.03.24.53;	author jason;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2002.01.31.22.55.39;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.06.11.03.42.29;	author art;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2002.10.29.00.33.31;	author art;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2003.05.19.22.23.38;	author tedu;	state Exp;
branches;
next	;

1.1.4.1
date	2003.03.28.00.38.30;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.06.07.11.02.32;	author ho;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Auto-repeat keys in WSKBD_RAW mode is not needed.
WSKBD_RAW mode used in X, but X independently implements auto-repeat keys.

ok miod@@
@
text
@/*	$OpenBSD: sunkbdvar.h,v 1.15 2009/01/12 21:11:58 miod Exp $	*/

/*
 * Copyright (c) 2002 Jason L. Wright (jason@@thought.net)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
 *
 */

#define	SUNKBD_MAX_INPUT_SIZE	64

struct sunkbd_softc {
	struct device	sc_dev;

	int		(*sc_sendcmd)(void *, u_int8_t *, u_int);
	void		(*sc_decode)(u_int8_t, u_int *, int *);

	int		sc_leds;		/* LED status */
	int		sc_id;			/* keyboard type */
	u_int8_t	sc_kbdstate;		/* keyboard state */
	int		sc_click;		/* click state */
	int		sc_layout;		/* current layout */

	int		sc_bellactive, sc_belltimeout;
	struct timeout	sc_bellto;

	struct device	*sc_wskbddev;

#ifdef WSDISPLAY_COMPAT_RAWKBD
	int		sc_rawkbd;
#endif
};

extern struct wskbd_accessops sunkbd_accessops;

void	sunkbd_attach(struct sunkbd_softc *, struct wskbddev_attach_args *);
void	sunkbd_bellstop(void *);
void	sunkbd_decode(u_int8_t, u_int *, int *);
void	sunkbd_input(struct sunkbd_softc *, u_int8_t *, u_int);
void	sunkbd_raw(struct sunkbd_softc *, u_int8_t);
int	sunkbd_setclick(struct sunkbd_softc *, int);

extern const struct wscons_keydesc sunkbd_keydesctab[];
extern struct wskbd_mapdata sunkbd_keymapdata;
extern const struct wscons_keydesc sunkbd5_keydesctab[];
extern struct wskbd_mapdata sunkbd5_keymapdata;

/*
 * Keyboard types 5 and 6 identify themselves as type 4, but might have
 * different layouts. Fortunately they will have distinct layout codes, so
 * here's a way to distinct types 5 and 6 from type 4.
 *
 * Note that ``Compact-1'' keyboards will be abusively reported as type 5.
 */
#define ISTYPE5(layout) ((layout) > 0x20)

#define	MAXSUNLAYOUT	0x062
extern const int sunkbd_layouts[MAXSUNLAYOUT];
extern const u_int8_t sunkbd_rawmap[0x80];
@


1.15
log
@Oops, sunkbd_decode() still needs to be public for *cngetc() to work;
spotted the hard way by kettenis.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.14 2009/01/12 17:45:37 miod Exp $	*/
a54 5
	int		sc_nrep;
	char		sc_rep[SUNKBD_MAX_INPUT_SIZE * 2];
	struct timeout	sc_rawrepeat_tmo;
#define	REP_DELAY1	400
#define	REP_DELAYN	100
@


1.14
log
@Remap the audio mute key on type 5, as it collides with the keypad equal
key on type 4.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.13 2009/01/11 18:59:54 miod Exp $	*/
d67 1
@


1.13
log
@WSDISPLAY_COMPAT_RAWKBD support for sun serial keyboards (zskbd, comkbd).
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.12 2009/01/11 16:12:15 miod Exp $	*/
d40 1
a66 1
void	sunkbd_decode(u_int8_t, u_int *, int *);
@


1.12
log
@Define a limit to the input which can be fed to sunkbd_input() at once,
will be necessary for rawkbd mode.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.11 2009/01/11 15:53:58 miod Exp $	*/
d51 9
d87 1
@


1.11
log
@Factor a bit more sunkbd common parts; paves the way for upcoming
WSDISPLAY_COMPAT_RAWKBD support.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.10 2005/11/11 16:44:51 miod Exp $	*/
d33 2
@


1.10
log
@Enable or disable keyclick on attach, based upon the PROM keyboard-click?
property.
Tested with type 3 and type 4 keyboards.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.9 2005/05/14 15:25:20 miod Exp $	*/
d53 1
d56 1
@


1.9
log
@Factorize most of the high-level logic for Sun serial keyboards in
sys/dev/sun/sunkbd.c, and move the layout tables to sys/dev/sun/sunkbdmap.c.

No functional changes, small sparc64 kernel shrinkage.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.8 2003/06/02 19:08:58 jason Exp $	*/
d56 1
@


1.8
log
@nuke clase 3 & 4
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.7 2003/05/17 04:53:56 jason Exp $	*/
d33 23
@


1.7
log
@up MAXSUNLAYOUT... miod, you owe me a beer
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.6 2003/01/22 19:02:31 miod Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Jason L. Wright
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.6
log
@Recognize the Voyager ``Compact-1'' keyboard layouts.
Currently, they are mapped to the corresponding type 5 layouts, but some
tweaks might be necessary in the future.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.5 2002/11/29 01:00:51 miod Exp $	*/
d53 1
a53 1
#define	MAXSUNLAYOUT	0x061
@


1.5
log
@Upon detection of an international Sun keyboard with a recognized layout,
attach it with the appropriate keymap table, rather than the default KB_US
table.

If this is not the expected behaviour, users can still revert to US layout
via "kbd us" or "wsconsctl -w keyboard.encoding=us".

As the installation media uses the prom console, which will honor the
international keyboard layout, this will definitely help users with
international keyboards and fancy characters in their passwords...

Note that there is still some Sun keyboard tables missing at the moment.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.4 2002/08/12 10:43:56 miod Exp $	*/
d48 2
d53 1
a53 1
#define	MAXSUNLAYOUT	0x040
@


1.4
log
@Convert sparc console code from rcons and pseudo-devices to rasops and wscons.
For most framebuffers it is faster.

Other changes include:
o 24 bit support in tcx(4) for the S24 framebuffer
o accelerated cgsix(4) text console
o new cgtwelve(4) driver for the GS framebuffer
o improved serial driver code
o better keyboard support

The following framebuffers have not been tested but should work: cgfour,
cgeight and cgfourteen

These changes will require XF4 changes, to use Xwsfb instead of Xsun*, to be
commited later today.

Most of the work by me during the LSM and the week after, with code borrowed
from jason@@, NetBSD (new serial code), and feedback from mickey@@. Work on
pnozz(4) done by millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.3 2002/05/29 20:43:43 maja Exp $	*/
d50 3
@


1.3
log
@Add a new wskbd type for Sun type 5 keyboards (WSKBD_TYPE_SUN5).
This is needed since eg Swedish type 4 and 5 keyboard has keycodes
with different keycodes. eg AltGr and Compose are switched in type 5
compared with type 4.

This change will need a new Xserver to allow sun type 5 keyboards.
-moj  ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.2 2002/04/08 17:49:42 jason Exp $	*/
a38 1
extern const keysym_t sunkbd_keydesc_us[];
d44 5
@


1.2
log
@Credit DARPA/USAF appropriately.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.1 2002/01/25 03:24:53 jason Exp $	*/
d42 4
@


1.1
log
@move the scancode -> wskbd event map into a seperate file... more still
to move, though.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d32 5
@


1.1.4.1
log
@Sync the SMP branch with 3.3
@
text
@a31 5
 *
 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
 *
d34 1
a36 14
extern const struct wscons_keydesc sunkbd5_keydesctab[];
extern struct wskbd_mapdata sunkbd5_keymapdata;

/*
 * Keyboard types 5 and 6 identify themselves as type 4, but might have
 * different layouts. Fortunately they will have distinct layout codes, so
 * here's a way to distinct types 5 and 6 from type 4.
 *
 * Note that ``Compact-1'' keyboards will be abusively reported as type 5.
 */
#define ISTYPE5(layout) ((layout) > 0x20)

#define	MAXSUNLAYOUT	0x061
extern const int sunkbd_layouts[MAXSUNLAYOUT];
@


1.1.4.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.1.4.1 2003/03/28 00:38:30 niklas Exp $	*/
d15 5
d53 1
a53 1
#define	MAXSUNLAYOUT	0x062
@


1.1.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.1 2002/01/25 03:24:53 jason Exp $	*/
@


1.1.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.1.2.1 2002/01/31 22:55:39 niklas Exp $	*/
a31 5
 *
 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
 *
a36 4
extern const struct wscons_keydesc sunkbd5_keydesctab[];
extern struct wskbd_mapdata sunkbd5_keymapdata;

#define ISTYPE5(layout) ((layout) > 0x20)
@


1.1.2.3
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sunkbdvar.h,v 1.1.2.2 2002/06/11 03:42:29 art Exp $	*/
d39 1
a44 5
/*
 * Keyboard types 5 and 6 identify themselves as type 4, but might have
 * different layouts. Fortunately they will have distinct layout codes, so
 * here's a way to distinct types 5 and 6 from type 4.
 */
@


1.1.2.4
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a47 2
 *
 * Note that ``Compact-1'' keyboards will be abusively reported as type 5.
a49 3

#define	MAXSUNLAYOUT	0x062
extern const int sunkbd_layouts[MAXSUNLAYOUT];
@


