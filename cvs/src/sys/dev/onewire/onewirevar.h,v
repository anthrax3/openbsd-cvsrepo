head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.26
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.16
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.24
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.22
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.20
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.18
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.14
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.12
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.10
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.8
	OPENBSD_5_0:1.7.0.6
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.4
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.5.0.6
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.6
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.4
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.2
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.1.0.2
	OPENBSD_4_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2010.07.19.23.44.09;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2010.07.06.19.59.59;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2008.04.07.22.50.41;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2006.10.08.21.12.51;	author grange;	state Exp;
branches;
next	1.3;

1.3
date	2006.09.30.15.52.21;	author grange;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.29.19.38.52;	author grange;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.04.16.27.03;	author grange;	state Exp;
branches;
next	;


desc
@@


1.7
log
@just use a buffer and make onewire_crc16() operate like onewire_crc()
from j0@@cox.net (author of owctr)
@
text
@/*	$OpenBSD: onewirevar.h,v 1.6 2010/07/06 19:59:59 deraadt Exp $	*/

/*
 * Copyright (c) 2006 Alexander Yurchenko <grange@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _DEV_ONEWIRE_ONEWIREVAR_H_
#define _DEV_ONEWIRE_ONEWIREVAR_H_

/*
 * 1-Wire bus interface.
 */

/* Bus master interface */
struct onewire_bus {
	void *	bus_cookie;

	int	(*bus_reset)(void *);
	int	(*bus_bit)(void *, int);
	int	(*bus_read_byte)(void *);
	void	(*bus_write_byte)(void *, int);
	void	(*bus_read_block)(void *, void *, int);
	void	(*bus_write_block)(void *, const void *, int);
	int	(*bus_triplet)(void *, int);
	void	(*bus_matchrom)(void *, u_int64_t);
	int	(*bus_search)(void *, u_int64_t *, int, u_int64_t);
};

/* Bus methods */
int		onewire_lock(void *, int);
void		onewire_unlock(void *);

int		onewire_reset(void *);
int		onewire_bit(void *, int);
int		onewire_read_byte(void *);
void		onewire_write_byte(void *, int);
void		onewire_read_block(void *, void *, int);
void		onewire_write_block(void *, const void *, int);
int		onewire_triplet(void *, int);
void		onewire_matchrom(void *, u_int64_t);
int		onewire_search(void *, u_int64_t *, int, u_int64_t);

#define ONEWIRE_NOWAIT		0x0001

/* Bus attachment */
struct onewirebus_attach_args {
	struct onewire_bus *	oba_bus;
	int			oba_flags;
#define	ONEWIRE_SCAN_NOW		0x0001
#define	ONEWIRE_NO_PERIODIC_SCAN	0x0002
};

int	onewirebus_print(void *, const char *);

/* Device attachment */
struct onewire_attach_args {
	void *			oa_onewire;
	u_int64_t		oa_rom;
};

/* Family matching */
struct onewire_matchfam {
	int om_type;
};

/* Miscellaneous routines */
int		onewire_crc(const void *, int);
u_int16_t	onewire_crc16(const void *, int);
const char *	onewire_famname(int);
int		onewire_matchbyfam(struct onewire_attach_args *,
		    const struct onewire_matchfam *, int);

/* Bus bit-banging */
struct onewire_bbops {
	void	(*bb_rx)(void *);
	void	(*bb_tx)(void *);
	int	(*bb_get)(void *);
	void	(*bb_set)(void *, int);
};

int		onewire_bb_reset(const struct onewire_bbops *, void *);
int		onewire_bb_bit(const struct onewire_bbops *, void *, int);

#endif	/* !_DEV_ONEWIRE_ONEWIREVAR_H_ */
@


1.6
log
@one wire counter driver 2nd rev, from John L. Scarfone" <j0@@cox.net> PR 6422
ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: onewirevar.h,v 1.5 2008/04/07 22:50:41 miod Exp $	*/
d80 1
a80 1
u_int16_t	onewire_crc16(u_int16_t, u_int8_t);
@


1.5
log
@Allow a 1-Wire controller to request an immediate scan, and also to prevent
periodic scans.

ok grange@@ (until this gets replaced with a proper notification mechanism
to avoid unnecessary bus polling).
@
text
@d1 1
a1 1
/*	$OpenBSD: onewirevar.h,v 1.4 2006/10/08 21:12:51 grange Exp $	*/
d80 1
@


1.4
log
@Rework bus scanning code so that most of work could be offloaded
the hardware. And fix another bug in the search algorithm.
@
text
@d1 1
a1 1
/*	$OpenBSD: onewirevar.h,v 1.3 2006/09/30 15:52:21 grange Exp $	*/
d60 3
@


1.3
log
@Allow to offload the match rom command to hardware.
@
text
@d1 1
a1 1
/*	$OpenBSD: onewirevar.h,v 1.2 2006/09/29 19:38:52 grange Exp $	*/
d38 1
d53 1
@


1.2
log
@Extend bus master interface so that block read/write operations
can be offloaded to hardware.
@
text
@d1 1
a1 1
/*	$OpenBSD: onewirevar.h,v 1.1 2006/03/04 16:27:03 grange Exp $	*/
d37 1
d43 1
@


1.1
log
@Dallas 1-Wire bus support. Includes the following drivers:

gpioow(4)	1-Wire bus bit-banging through GPIO pin
onewire(4)	1-Wire bus driver
owid(4)		1-Wire ID family type device
owtemp(4)	1-Wire temperature family type device

Drivers for RS-232 and USB bus masters will follow.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d34 2
a45 1
int		onewire_triplet(void *, int);
d48 1
@

