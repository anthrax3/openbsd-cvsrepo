head	1.11;
access;
symbols
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.10
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.6
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.4
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.16
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.4
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.5.0.6
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.11
date	2015.03.14.03.38.48;	author jsg;	state Exp;
branches;
next	1.10;
commitid	p4LJxGKbi0BU2cG6;

1.10
date	2014.09.14.14.17.25;	author jsg;	state Exp;
branches;
next	1.9;
commitid	uzzBR7hz9ncd4O6G;

1.9
date	2011.07.03.15.47.16;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	2010.07.08.07.19.54;	author jasper;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.13.19.33.16;	author pirofti;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.25.00.27.09;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2007.06.01.21.30.31;	author cnst;	state Exp;
branches;
next	1.4;

1.4
date	2007.03.22.16.55.31;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2006.12.23.17.46.39;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.23.06.27.11;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.04.16.27.03;	author grange;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@/*	$OpenBSD: owid.c,v 1.10 2014/09/14 14:17:25 jsg Exp $	*/

/*
 * Copyright (c) 2006 Alexander Yurchenko <grange@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * 1-Wire ID family type device driver.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/sensors.h>

#include <dev/onewire/onewiredevs.h>
#include <dev/onewire/onewirereg.h>
#include <dev/onewire/onewirevar.h>

struct owid_softc {
	struct device		sc_dev;

	void *			sc_onewire;
	u_int64_t		sc_rom;

	struct ksensor		sc_sensor;
	struct ksensordev	sc_sensordev;

	int			sc_dying;
};

int	owid_match(struct device *, void *, void *);
void	owid_attach(struct device *, struct device *, void *);
int	owid_detach(struct device *, int);
int	owid_activate(struct device *, int);

struct cfattach owid_ca = {
	sizeof(struct owid_softc),
	owid_match,
	owid_attach,
	owid_detach,
	owid_activate
};

struct cfdriver owid_cd = {
	NULL, "owid", DV_DULL
};

static const struct onewire_matchfam owid_fams[] = {
	{ ONEWIRE_FAMILY_DS1990 }
};

int
owid_match(struct device *parent, void *match, void *aux)
{
	return (onewire_matchbyfam(aux, owid_fams, nitems(owid_fams)));
}

void
owid_attach(struct device *parent, struct device *self, void *aux)
{
	struct owid_softc *sc = (struct owid_softc *)self;
	struct onewire_attach_args *oa = aux;

	sc->sc_onewire = oa->oa_onewire;
	sc->sc_rom = oa->oa_rom;

	/* Initialize sensor */
	strlcpy(sc->sc_sensordev.xname, sc->sc_dev.dv_xname,
	    sizeof(sc->sc_sensordev.xname));
	sc->sc_sensor.type = SENSOR_INTEGER;
	sc->sc_sensor.value = ONEWIRE_ROM_SN(sc->sc_rom);
	snprintf(sc->sc_sensor.desc, sizeof(sc->sc_sensor.desc), "sn %012llx",
	    ONEWIRE_ROM_SN(oa->oa_rom));
	sensor_attach(&sc->sc_sensordev, &sc->sc_sensor);
	sensordev_install(&sc->sc_sensordev);

	printf("\n");
}

int
owid_detach(struct device *self, int flags)
{
	struct owid_softc *sc = (struct owid_softc *)self;

	sensordev_deinstall(&sc->sc_sensordev);

	return (0);
}

int
owid_activate(struct device *self, int act)
{
	struct owid_softc *sc = (struct owid_softc *)self;

	switch (act) {
	case DVACT_DEACTIVATE:
		sc->sc_dying = 1;
		break;
	}

	return (0);
}
@


1.10
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@d1 1
a1 1
/*	$OpenBSD: owid.c,v 1.9 2011/07/03 15:47:16 matthew Exp $	*/
a25 1
#include <sys/kernel.h>
@


1.9
log
@Remove config_activate() and DVACT_ACTIVATE.  PCMCIA's the only thing
that's ever used it, and it's long since been changed to use
DVACT_{QUIESCE,SUSPEND,RESUME} instead.

ok deraadt@@, dlg@@; miod@@ also agreed with this idea when I brought it
up a few weeks ago
@
text
@d1 1
a1 1
/*	$OpenBSD: owid.c,v 1.8 2010/07/08 07:19:54 jasper Exp $	*/
a26 1
#include <sys/proc.h>
@


1.8
log
@- use nitems() where applicable

ok grange@@
@
text
@d1 1
a1 1
/*	$OpenBSD: owid.c,v 1.7 2009/10/13 19:33:16 pirofti Exp $	*/
a110 2
	case DVACT_ACTIVATE:
		break;
@


1.7
log
@Get rid of devact enum, substitute it with an int and coresponding defines.

This is needed for the addition of further suspend/resume actions.

Okay deraadt@@, marco@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: owid.c,v 1.6 2008/10/25 00:27:09 deraadt Exp $	*/
d70 1
a70 2
	return (onewire_matchbyfam(aux, owid_fams,
	    sizeof(owid_fams) /sizeof(owid_fams[0])));
@


1.6
log
@put the serial number into the name of the devices (for sysctl), because
Joerg Goltermann has so many of them and has convinced me that he cannot
tell them apart.
ok grange cnst henning
@
text
@d1 1
a1 1
/*	$OpenBSD: owid.c,v 1.5 2007/06/01 21:30:31 cnst Exp $	*/
d49 1
a49 1
int	owid_activate(struct device *, enum devact);
d107 1
a107 1
owid_activate(struct device *self, enum devact act)
@


1.5
log
@remove strings from sensor.desc which are now present in sysctl variable names; ok grange@@
@
text
@d1 1
a1 1
/*	$OpenBSD: owid.c,v 1.4 2007/03/22 16:55:31 deraadt Exp $	*/
d88 2
@


1.4
log
@split userland & kernel struct sensor/sensordev so that the addition
of new fields in the future is less disruptive.  This is done similar
to how struct proc is handled for ps(1).  ok jmc (man page changes)
tested fkr simon, and more suggestions from millert
@
text
@d1 1
a1 1
/*	$OpenBSD: owid.c,v 1.3 2006/12/23 17:46:39 deraadt Exp $	*/
a86 1
	strlcpy(sc->sc_sensor.desc, "ID", sizeof(sc->sc_sensor.desc));
@


1.3
log
@adapt to new two-level sensor api; Constantine A. Murenin
@
text
@d1 1
a1 1
/*	$OpenBSD: owid.c,v 1.2 2006/06/23 06:27:11 miod Exp $	*/
d40 2
a41 2
	struct sensor		sc_sensor;
	struct sensordev	sc_sensordev;
@


1.2
log
@In a drivers activate() entry point, if on DVACT_DEACTIVATE it does
something, then it MUST return zero on DVACT_ACTIVATE, not EOPNOTSUPP;
this very popular bug has been cut and pasted a lot of times...
ok deraadt@@ mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: owid.c,v 1.1 2006/03/04 16:27:03 grange Exp $	*/
d41 1
d84 2
a85 2
	strlcpy(sc->sc_sensor.device, sc->sc_dev.dv_xname,
	    sizeof(sc->sc_sensor.device));
d89 2
a90 1
	sensor_add(&sc->sc_sensor);
d100 1
a100 1
	sensor_del(&sc->sc_sensor);
@


1.1
log
@Dallas 1-Wire bus support. Includes the following drivers:

gpioow(4)	1-Wire bus bit-banging through GPIO pin
onewire(4)	1-Wire bus driver
owid(4)		1-Wire ID family type device
owtemp(4)	1-Wire temperature family type device

Drivers for RS-232 and USB bus masters will follow.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d110 1
a110 1
		return (EOPNOTSUPP);
@

