head	1.3;
access;
symbols
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	SMP:1.2.0.4
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	UBC:1.1.0.4
	UBC_SYNC_B:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2005.03.05.23.58.44;	author tdeval;	state dead;
branches;
next	1.2;

1.2
date	2002.12.13.02.52.11;	author tdeval;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.25.17.11.49;	author itojun;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.05.19.22.22.29;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Clean up the tree from incomplete, unreliable and unsupported IEEE1394 code.
Ok deraadt@@, miod@@
@
text
@/*	$OpenBSD: ieee1212var.h,v 1.2 2002/12/13 02:52:11 tdeval Exp $	*/
/*	$NetBSD: ieee1212var.h,v 1.1 2002/02/27 04:58:51 jmc Exp $	*/

/*
 * Copyright (c) 2000 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by James Chacon.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef	_DEV_STD_IEEE1212VAR_H
#define	_DEV_STD_IEEE1212VAR_H

struct p1212_dir;

typedef struct p1212_key {
	u_int8_t key_type;
	u_int8_t key_value;
	u_int8_t key;
	u_int32_t val;
} p1212_key;

typedef struct p1212_leafdata {
	u_int32_t len;
	u_int32_t *data;
} p1212_leafdata;

typedef struct p1212_textdata {
	u_int8_t spec_type;
	u_int32_t spec_id;
	u_int32_t lang_id;
	char *text;
} p1212_textdata;

typedef struct p1212_com {
	struct p1212_key key;
	u_int32_t textcnt;
	struct p1212_textdata **text;
} p1212_com;

typedef struct p1212_data {
	struct p1212_com com;

	u_int32_t val;
	struct p1212_leafdata *leafdata;
	void (*print)(struct p1212_data *);
	TAILQ_ENTRY(p1212_data) data;
} p1212_data;

typedef struct p1212_dir {
	struct p1212_com com;

	int match;
	void (*print)(struct p1212_dir *);
	struct p1212_dir *parent;
	TAILQ_HEAD(, p1212_data) data_root;
	TAILQ_HEAD(, p1212_dir) subdir_root;
	TAILQ_ENTRY(p1212_dir) dir;
} p1212_dir;

typedef struct p1212_rom {
	char name[5];
	u_int32_t len;
	u_int32_t *data;
	struct p1212_dir *root;
} p1212_rom;

int p1212_iscomplete(u_int32_t *, u_int32_t *);
struct p1212_rom *p1212_parse(u_int32_t *, u_int32_t, u_int32_t);
void p1212_walk(struct p1212_dir *, void *,
    void (*)(struct p1212_key *, void *));
struct p1212_key **p1212_find(struct p1212_dir *, int, int, int);
void p1212_print(struct p1212_dir *);
void p1212_free(struct p1212_rom *);
struct device **p1212_match_units(struct device *, struct p1212_dir *,
    int (*)(void *, const char *));

#endif	/* _DEV_STD_IEEE1212VAR_H */
@


1.2
log
@Better memory balancing (between alloc/free),
some enhancements, lots of debugging, KNF...
@
text
@d1 1
a1 1
/*	$OpenBSD: ieee1212var.h,v 1.1 2002/06/25 17:11:49 itojun Exp $	*/
@


1.1
log
@IEEE1394 infrastructure part.
IP-over-FW and SCSI over FW are being worked on.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 2
a41 2
#ifndef _DEV_STD_IEEE1212VAR_H
#define _DEV_STD_IEEE1212VAR_H
d45 1
a45 1
struct p1212_key {
d50 1
a50 1
};
d52 1
a52 1
struct p1212_leafdata {
d55 1
a55 1
};
d57 1
a57 1
struct p1212_textdata {
d62 1
a62 1
};
d64 1
a64 1
struct p1212_com {
d68 1
a68 1
};
d70 1
a70 1
struct p1212_data {
d72 1
a72 1
	
d77 1
a77 2
};

d79 1
a79 1
struct p1212_dir {
d88 1
a88 1
};
d90 1
a90 1
struct p1212_rom {
d95 1
a95 1
};
d98 1
a98 1
struct p1212_rom *p1212_parse (u_int32_t *, u_int32_t, u_int32_t);
d107 1
a107 1
#endif /* _DEV_STD_IEEE1212VAR_H */
@


1.1.4.1
log
@sync
@
text
@d40 2
a41 2
#ifndef	_DEV_STD_IEEE1212VAR_H
#define	_DEV_STD_IEEE1212VAR_H
d45 1
a45 1
typedef struct p1212_key {
d50 1
a50 1
} p1212_key;
d52 1
a52 1
typedef struct p1212_leafdata {
d55 1
a55 1
} p1212_leafdata;
d57 1
a57 1
typedef struct p1212_textdata {
d62 1
a62 1
} p1212_textdata;
d64 1
a64 1
typedef struct p1212_com {
d68 1
a68 1
} p1212_com;
d70 1
a70 1
typedef struct p1212_data {
d72 1
a72 1

d77 2
a78 1
} p1212_data;
d80 1
a80 1
typedef struct p1212_dir {
d89 1
a89 1
} p1212_dir;
d91 1
a91 1
typedef struct p1212_rom {
d96 1
a96 1
} p1212_rom;
d99 1
a99 1
struct p1212_rom *p1212_parse(u_int32_t *, u_int32_t, u_int32_t);
d108 1
a108 1
#endif	/* _DEV_STD_IEEE1212VAR_H */
@


