head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.44
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.46
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.42
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.32
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.40
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.38
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.36
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.34
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.30
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.28
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.26
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.24
	OPENBSD_5_0:1.6.0.22
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.20
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.18
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.14
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.16
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.12
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.10
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.8
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC:1.4.0.6
	UBC_SYNC_A:1.4
	SMP:1.4.0.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4;
locks; strict;
comment	@# @;


1.6
date	2006.08.10.23.41.16;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.15.23.52.32;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.15.23.50.02;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.15.23.45.52;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.12.01.43.31;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.11.19.39.30;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@No need for needs-flag for hil and hilms.
@
text
@#	$OpenBSD: files.hil,v 1.5 2004/09/15 23:52:32 mickey Exp $
#
# Configuration file for machine-independent HIL code.
#

device	hil {[code = -1]}
file	dev/hil/hil.c		hil

device	hilkbd: wskbddev
attach	hilkbd at hil
file	dev/hil/hilkbd.c	hilkbd			needs-flag
file	dev/hil/hilkbdmap.c	hilkbd

device	hilms: wsmousedev
attach	hilms at hil
file	dev/hil/hilms.c		hilms

device	hilid
attach	hilid at hil
file	dev/hil/hilid.c		hilid
@


1.5
log
@code locator is optional
@
text
@d1 1
a1 1
#	$OpenBSD: files.hil,v 1.4 2003/02/15 23:50:02 miod Exp $
d7 1
a7 1
file	dev/hil/hil.c		hil	needs-flag
d11 1
a11 1
file	dev/hil/hilkbd.c	hilkbd	needs-flag
d16 1
a16 1
file	dev/hil/hilms.c		hilms	needs-flag
@


1.4
log
@A simple and crude driver to play with the hil so-called ``ID module''
devices.

The ID module only purpose is to provide a small, unique, bitstring, which
was used for some copy-protection or licensing scheme under HP-UX.

Right now this driver is useless, as it provides no way to communicate
this information to userland, and only displays it while attaching, as such:
hilid0 at hil0 code 2: ID module
hilid0: security code 10 04 b4 41 ac 77 14 0f 41 00 00 00 00 00 00 00
hilid1 at hil0 code 3: ID module
hilid1: security code 10 04 b4 41 e3 b8 13 0f 41 00 00 00 00 00 00 00

Too bad it's not even good enough to feed the kernel random generator...
@
text
@d1 1
a1 1
#	$OpenBSD: files.hil,v 1.3 2003/02/15 23:45:52 miod Exp $
d6 1
a6 1
device	hil { code = -1 }
@


1.3
log
@Provide a "code" locator for hil devices. This will let people ask their
kernels to attach hilkbd0 (console keyboard) or hilms0 (main mouse) to
a specific device in the loop, by using UKC or compiling a new kernel.

Using this and the previous console changes, it is now possible on a loop
with multiple keyboards, to choose which keyboard will be the console
keyboard.
@
text
@d1 1
a1 1
#	$OpenBSD: files.hil,v 1.2 2003/02/12 01:43:31 miod Exp $
d17 4
@


1.2
log
@A simple driver for HIL mice and tablets. Most of the work being already
done by the loop, this is mostly an HIL packet decoding routine.
@
text
@d1 1
a1 1
#	$OpenBSD: files.hil,v 1.1 2003/02/11 19:39:30 miod Exp $
d6 1
a6 1
device	hil { }
@


1.1
log
@Machine independent HP-HIL loop support code.

Derived from the hp300 HIL code, and some information found in XFree86
HP-UX specific parts.

However, this code does not provide an HP-UX compatible /dev/hil* interface,
but will rather attach real BSD drivers to the hil driver glue.

Currently, only a driver for the HP-HIL keyboards is provided. More to come
as resources permit.

The international layout tables for hilkbd are derived from the ite tables
found in the hp300 code, but only the US layout could be tested.

Sample dmesg output on a heavily charged hil loop:
hil0 at gsc0 offset 21000 irq 1
hilkbd0 at hil0 code 1: 109-key keyboard, layout 1b
wskbd0 at hilkbd0: console keyboard
hilkbd1 at hil0 code 2: 109-key keyboard, layout 1f
wskbd1 at hilkbd1
"ID module" at hil0 id 34 code 3 not configured
"ID module" at hil0 id 34 code 4 not configured
"Tablet" at hil0 id 94 code 5 not configured
"Mouse" at hil0 id 68 code 6 not configured

Some feedback from and ok mickey@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d14 3
a16 3
#device	hilms: wsmousedev
#attach	hilms at hil
#file	dev/hil/hilms.c		hilms	needs-flag
@

