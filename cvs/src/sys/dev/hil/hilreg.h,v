head	1.6;
access;
symbols
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.42
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.32
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.40
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.38
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.36
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.34
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.30
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.28
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.26
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.24
	OPENBSD_5_0:1.6.0.22
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.20
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.18
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.14
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.16
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.12
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.10
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.8
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC:1.3.0.6
	UBC_SYNC_A:1.3
	SMP:1.3.0.4
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3;
locks; strict;
comment	@ * @;


1.6
date	2006.08.10.23.43.45;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2005.01.11.00.11.05;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.23.28.01;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.15.01.02.28;	author miod;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2003.02.12.01.42.31;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.11.19.39.30;	author miod;	state Exp;
branches;
next	;

1.3.4.1
date	2003.03.28.14.05.52;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2003.06.07.11.02.28;	author ho;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Handle the ``arrow repeat'' special scancode on button boxes; from the old
X11R5 server, untested.
@
text
@/*	$OpenBSD: hilreg.h,v 1.5 2005/01/11 00:11:05 miod Exp $	*/
/*	$NetBSD: hilreg.h,v 1.6 1997/02/02 09:39:21 thorpej Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * from: Utah $Hdr: hilreg.h 1.10 92/01/21$
 *
 *	@@(#)hilreg.h	8.1 (Berkeley) 6/10/93
 */

#include <machine/hil_machdep.h>

#define	HIL_BUSY		0x02
#define	HIL_DATA_RDY		0x01

/* HIL status bits */
#define	HIL_POLLDATA	0x10		/* HIL poll data follows */
#define	HIL_COMMAND	0x08		/* Start of original command */
#define	HIL_ERROR	0x80		/* HIL error */

#define	HIL_RECONFIG	0x80		/* HIL has reconfigured */
#define	HIL_UNPLUGGED	0x84		/* HIL cable unplugged */

#define	HIL_SSHIFT	4		/* Bits to shift status over */
#define	HIL_SMASK	0x0f		/* Service request status mask */
#define	HIL_DEVMASK	0x07

/* HIL status types */
#define	HIL_68K		0x04		/* Data from the 68k is ready */
#define	HIL_STATUS	0x05		/* HIL status in data register */
#define	HIL_DATA	0x06		/* HIL data in data register */
#define	HIL_CTRLSHIFT	0x08		/* key + CTRL + SHIFT */
#define	HIL_CTRL	0x09		/* key + CTRL */
#define	HIL_SHIFT	0x0a		/* key + SHIFT */
#define	HIL_KEY		0x0b		/* key only */

/* HIL commands */
#define HIL_IDENTIFY	0x03		/* Get device information */
#define	HIL_READTIME	0x13		/* Read real time register */
#define	HIL_RNAME	0x30		/* Report name */
#define	HIL_RSTATUS	0x31		/* Report status */
#define	HIL_DESCRIBE	0x32		/* Extended describe */
#define HIL_SECURITY	0x33		/* Read security bits */
#define	HIL_DKR		0x3d		/* Disable auto repeat */
#define	HIL_ER1		0x3e		/* Enable auto repeat 1/30 */
#define	HIL_ER2		0x3f		/* Enable auto repeat 1/60 */
#define	HIL_PROMPT1	0x40		/* Prompt #1 */
#define	HIL_PROMPT2	0x41		/* Prompt #2 */
#define	HIL_PROMPT3	0x42		/* Prompt #3 */
#define	HIL_PROMPT4	0x43		/* Prompt #4 */
#define	HIL_PROMPT5	0x44		/* Prompt #5 */
#define	HIL_PROMPT6	0x45		/* Prompt #6 */
#define	HIL_PROMPT7	0x46		/* Prompt #7 */
#define	HIL_PROMPT	0x47		/* Prompt */
#define	HIL_ACK1	0x48		/* Acknowledge #1 */
#define	HIL_ACK2	0x49		/* Acknowledge #2 */
#define	HIL_ACK3	0x4a		/* Acknowledge #3 */
#define	HIL_ACK4	0x4b		/* Acknowledge #4 */
#define	HIL_ACK5	0x4c		/* Acknowledge #5 */
#define	HIL_ACK6	0x4d		/* Acknowledge #6 */
#define	HIL_ACK7	0x4e		/* Acknowledge #7 */
#define	HIL_ACK		0x4f		/* Acknowledge */
#define	HIL_INTON	0x5c		/* Turn on interrupts. */
#define	HIL_INTOFF	0x5d		/* Turn off interrupts. */
#define	HIL_SETARD	0xa0		/* Set auto-repeat delay */
#define	HIL_SETARR	0xa2		/* Set auto-repeat rate */
#define	HIL_SETTONE	0xa3		/* Set tone generator */
#define	HIL_CNMT	0xb2		/* Clear nmi */
#define	HIL_TRIGGER	0xc5		/* Trigger command */
#define	HIL_STARTCMD	0xe0		/* Start loop command */
#define	HIL_TIMEOUT	0xfe		/* Timeout */

/* Read/write various registers on the 8042. */
#define	HIL_READBUSY		0x02	/* internal "busy" register */
#define	HIL_READKBDLANG		0x12	/* read keyboard language code */
#define	HIL_WRITEKBDSADR 	0xe9
#define	HIL_WRITELPSTAT 	0xea
#define	HIL_WRITELPCTRL 	0xeb
#define	HIL_READKBDSADR	 	0xf9
#define	HIL_READLPSTAT  	0xfa
#define	HIL_READLPCTRL  	0xfb

/* BUSY bits */
#define	BSY_LOOPBUSY	0x04

/* LPCTRL bits */
#define	LPC_AUTOPOLL	0x01	/* enable auto-polling */
#define	LPC_NOERROR	0x02	/* don't report errors */
#define	LPC_NORECONF	0x04	/* don't report reconfigure */
#define	LPC_KBDCOOK	0x10	/* cook all keyboards */
#define	LPC_RECONF	0x80	/* reconfigure the loop */

/* LPSTAT bits */
#define	LPS_DEVMASK	0x07	/* number of loop devices */
#define	LPS_CONFGOOD	0x08	/* reconfiguration worked */
#define	LPS_CONFFAIL	0x80	/* reconfiguration failed */

/* HIL packet headers */
#define	HIL_MOUSEDATA   0x02
#define	HIL_KBDDATA     0x70
  
#define	HIL_MOUSEMOTION	0x02	/* mouse movement event */
#define	HIL_TABLET      0x02	/* tablet motion event */
#define	HIL_KNOBBOX     0x03	/* knob box motion data */
#define	HIL_KBDBUTTON	0x40	/* keyboard button event */
#define	HIL_MOUSEBUTTON 0x40	/* mouse button event */
#define	HIL_BUTTONBOX   0x60	/* button box event */

/* ID module defines */
#define HILSCBIT	0x04

/* For setting auto repeat on the keyboard */
#define	ar_format(x)	~((x - 10) / 10)
#define	KBD_ARD		400	/* initial delay in msec (10 - 2560) */
#define	KBD_ARR		60	/* rate (10 - 2550 msec, 2551 == off) */

/* Device information bits */
#define	HIL_ABSOLUTE	0x40	/* absolute positioning data */
#define	HIL_16_BITS	0x20	/* 16 bit position accuracy */
#define	HIL_IOB		0x10	/* I/O description byte follows */
#define	HIL_AXMASK	0x03	/* Number of axes supported */

#define	HILIOB_PROMPT	0x80	/* prompt and acknowledge (leds) supported */
#define	HILIOB_PMASK	0x70	/* number of prompt & acknowledge supported */
#define	HILIOB_PIO	0x08	/* proximity in/out (pressure) supported */
#define	HILIOB_BMASK	0x07	/* number of buttons supported */
@


1.5
log
@Reliability fixes:
- Let the loop initialize completely before attempting to probe its devices.
  Fixes the "no answer from device 1" problem.
- Handle ``loop unplugged'' events and force detach of all children in this
  case.
@
text
@d1 1
a1 1
/*	$OpenBSD: hilreg.h,v 1.4 2003/06/02 23:28:01 millert Exp $	*/
d131 1
a131 1
#define	HIL_KBDDATA     0x40
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: hilreg.h,v 1.3 2003/02/15 01:02:28 miod Exp $	*/
d51 1
d53 1
@


1.3
log
@Remove misleading (and incorrect) HIL_STATMASK definition.
@
text
@d1 1
a1 1
/*	$OpenBSD: hilreg.h,v 1.2 2003/02/12 01:42:31 miod Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.3.4.1
log
@Sync SMP to 3.3, files that CVS misses due to some bug
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.3.4.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: hilreg.h,v 1.3.4.1 2003/03/28 14:05:52 niklas Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2
log
@Move values related to device identification data to hilreg.h, with better
names.
@
text
@d1 1
a1 1
/*	$OpenBSD: hilreg.h,v 1.1 2003/02/11 19:39:30 miod Exp $	*/
a55 1
#define	HIL_STATMASK	(HIL_DATA | HIL_COMMAND)
@


1.1
log
@Machine independent HP-HIL loop support code.

Derived from the hp300 HIL code, and some information found in XFree86
HP-UX specific parts.

However, this code does not provide an HP-UX compatible /dev/hil* interface,
but will rather attach real BSD drivers to the hil driver glue.

Currently, only a driver for the HP-HIL keyboards is provided. More to come
as resources permit.

The international layout tables for hilkbd are derived from the ite tables
found in the hp300 code, but only the US layout could be tested.

Sample dmesg output on a heavily charged hil loop:
hil0 at gsc0 offset 21000 irq 1
hilkbd0 at hil0 code 1: 109-key keyboard, layout 1b
wskbd0 at hilkbd0: console keyboard
hilkbd1 at hil0 code 2: 109-key keyboard, layout 1f
wskbd1 at hilkbd1
"ID module" at hil0 id 34 code 3 not configured
"ID module" at hil0 id 34 code 4 not configured
"Tablet" at hil0 id 94 code 5 not configured
"Mouse" at hil0 id 68 code 6 not configured

Some feedback from and ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d150 11
@

