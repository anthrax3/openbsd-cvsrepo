head	1.5;
access;
symbols
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.38
	OPENBSD_5_0:1.4.0.36
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.34
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.32
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.28
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.30
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.26
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.24
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.22
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.20
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.18
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.16
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.14
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.3.0.18
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.16
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.14
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.12
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.10
	OPENBSD_2_8:1.3.0.8
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.6
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2012.04.06.15.53.58;	author jsing;	state dead;
branches;
next	1.4;

1.4
date	2002.12.16.07.01.04;	author tdeval;	state Exp;
branches;
next	1.3;

1.3
date	99.07.30.14.45.32;	author peter;	state Exp;
branches
	1.3.4.1
	1.3.14.1;
next	1.2;

1.2
date	99.02.16.00.02.56;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	99.01.11.14.29.29;	author niklas;	state Exp;
branches;
next	;

1.3.4.1
date	2003.03.28.00.38.28;	author niklas;	state Exp;
branches;
next	;

1.3.14.1
date	2003.05.19.22.21.52;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Put raidframe in the attic.
@
text
@/*	$OpenBSD: rf_mcpair.h,v 1.4 2002/12/16 07:01:04 tdeval Exp $	*/
/*	$NetBSD: rf_mcpair.h,v 1.4 1999/03/14 21:53:31 oster Exp $	*/

/*
 * Copyright (c) 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Mark Holland
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*
 * rf_mcpair.h
 * See comments in rf_mcpair.c
 */

#ifndef	_RF__RF_MCPAIR_H_
#define	_RF__RF_MCPAIR_H_

#include "rf_types.h"
#include "rf_threadstuff.h"

struct RF_MCPair_s {
	RF_DECLARE_MUTEX(mutex);
	RF_DECLARE_COND (cond);
	int		 flag;
	RF_MCPair_t	*next;
};
#define	RF_WAIT_MCPAIR(_mcp)	tsleep(&((_mcp)->flag), PRIBIO, "mcpair", 0)

int  rf_ConfigureMCPair(RF_ShutdownList_t **);
RF_MCPair_t *rf_AllocMCPair(void);
void rf_FreeMCPair(RF_MCPair_t *);
void rf_MCPairWakeupFunc(RF_MCPair_t *);

#endif	/* !_RF__RF_MCPAIR_H_ */
@


1.4
log
@Major KNF.  Incentive from Tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_mcpair.h,v 1.3 1999/07/30 14:45:32 peter Exp $	*/
@


1.3
log
@Update RAIDframe from NetBSD-current as of 1999/07/26.

Please note that you *must* follow the upgrade instructions at

	http://www.cs.usask.ca/staff/oster/clabel_upgrade.html

before installing the new raidctl and new kernel using this code.
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_mcpair.h,v 1.2 1999/02/16 00:02:56 niklas Exp $	*/
d3 1
d31 3
a33 2
/* rf_mcpair.h
 * see comments in rf_mcpair.c
d36 2
a37 2
#ifndef _RF__RF_MCPAIR_H_
#define _RF__RF_MCPAIR_H_
d43 4
a46 4
	RF_DECLARE_MUTEX(mutex)
	RF_DECLARE_COND(cond)
	int     flag;
	RF_MCPair_t *next;
d48 1
a48 1
#define RF_WAIT_MCPAIR(_mcp)  tsleep(&((_mcp)->flag), PRIBIO, "mcpair", 0)
d50 1
a50 1
int     rf_ConfigureMCPair(RF_ShutdownList_t ** listp);
d52 2
a53 2
void    rf_FreeMCPair(RF_MCPair_t * t);
void    rf_MCPairWakeupFunc(RF_MCPair_t * t);
d55 1
a55 1
#endif				/* !_RF__RF_MCPAIR_H_ */
@


1.3.14.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d30 2
a31 3
/*
 * rf_mcpair.h
 * See comments in rf_mcpair.c
d34 2
a35 2
#ifndef	_RF__RF_MCPAIR_H_
#define	_RF__RF_MCPAIR_H_
d41 4
a44 4
	RF_DECLARE_MUTEX(mutex);
	RF_DECLARE_COND (cond);
	int		 flag;
	RF_MCPair_t	*next;
d46 1
a46 1
#define	RF_WAIT_MCPAIR(_mcp)	tsleep(&((_mcp)->flag), PRIBIO, "mcpair", 0)
d48 1
a48 1
int  rf_ConfigureMCPair(RF_ShutdownList_t **);
d50 2
a51 2
void rf_FreeMCPair(RF_MCPair_t *);
void rf_MCPairWakeupFunc(RF_MCPair_t *);
d53 1
a53 1
#endif	/* !_RF__RF_MCPAIR_H_ */
@


1.3.4.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d30 2
a31 3
/*
 * rf_mcpair.h
 * See comments in rf_mcpair.c
d34 2
a35 2
#ifndef	_RF__RF_MCPAIR_H_
#define	_RF__RF_MCPAIR_H_
d41 4
a44 4
	RF_DECLARE_MUTEX(mutex);
	RF_DECLARE_COND (cond);
	int		 flag;
	RF_MCPair_t	*next;
d46 1
a46 1
#define	RF_WAIT_MCPAIR(_mcp)	tsleep(&((_mcp)->flag), PRIBIO, "mcpair", 0)
d48 1
a48 1
int  rf_ConfigureMCPair(RF_ShutdownList_t **);
d50 2
a51 2
void rf_FreeMCPair(RF_MCPair_t *);
void rf_MCPairWakeupFunc(RF_MCPair_t *);
d53 1
a53 1
#endif	/* !_RF__RF_MCPAIR_H_ */
@


1.2
log
@Merge from NetBSD, mostly indentation
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_mcpair.h,v 1.1 1999/01/11 14:29:29 niklas Exp $	*/
/*	$NetBSD: rf_mcpair.h,v 1.3 1999/02/05 00:06:13 oster Exp $	*/
d46 1
a46 1
#define RF_WAIT_MCPAIR(_mcp)  tsleep(&((_mcp)->flag), PRIBIO | PCATCH, "mcpair", 0)
@


1.1
log
@Import of CMU's RAIDframe via NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_mcpair.h,v 1.1 1998/11/13 04:20:31 oster Exp $	*/
/*	$NetBSD: rf_mcpair.h,v 1.1 1998/11/13 04:20:31 oster Exp $	*/
d41 4
a44 4
  RF_DECLARE_MUTEX(mutex)
  RF_DECLARE_COND(cond)
  int           flag;
  RF_MCPair_t  *next;
a45 5

#ifdef KERNEL
#if !defined(__NetBSD__) && !defined(__OpenBSD__)
#define RF_WAIT_MCPAIR(_mcp)  mpsleep(&((_mcp)->flag), PZERO, "mcpair", 0, (void *) simple_lock_addr((_mcp)->mutex), MS_LOCK_SIMPLE)
#else
a46 4
#endif
#else /* KERNEL */
#define RF_WAIT_MCPAIR(_mcp)  RF_WAIT_COND((_mcp)->cond, (_mcp)->mutex)
#endif /* KERNEL */
d48 1
a48 1
int rf_ConfigureMCPair(RF_ShutdownList_t **listp);
d50 2
a51 2
void rf_FreeMCPair(RF_MCPair_t *t);
void rf_MCPairWakeupFunc(RF_MCPair_t *t);
d53 1
a53 1
#endif /* !_RF__RF_MCPAIR_H_ */
@

