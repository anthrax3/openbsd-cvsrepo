head	1.5;
access;
symbols
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.38
	OPENBSD_5_0:1.4.0.36
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.34
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.32
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.28
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.30
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.26
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.24
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.22
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.20
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.18
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.16
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.14
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.3
	UBC:1.2.0.16
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.6
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2012.04.06.15.53.58;	author jsing;	state dead;
branches;
next	1.4;

1.4
date	2002.12.16.07.01.03;	author tdeval;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.05.22.11.27;	author tdeval;	state Exp;
branches;
next	1.2;

1.2
date	99.02.16.00.02.43;	author niklas;	state Exp;
branches
	1.2.6.1
	1.2.16.1;
next	1.1;

1.1
date	99.01.11.14.29.19;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2003.03.28.00.38.28;	author niklas;	state Exp;
branches;
next	;

1.2.16.1
date	2002.10.29.00.33.30;	author art;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2003.05.19.22.21.51;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Put raidframe in the attic.
@
text
@/*	$OpenBSD: rf_engine.h,v 1.4 2002/12/16 07:01:03 tdeval Exp $	*/
/*	$NetBSD: rf_engine.h,v 1.3 1999/02/05 00:06:11 oster Exp $	*/

/*
 * Copyright (c) 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: William V. Courtright II, Mark Holland, Jim Zelenka
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/***********************************************************
 *                                                         *
 * engine.h -- Header file for execution engine functions. *
 *                                                         *
 ***********************************************************/

#ifndef	_RF__RF_ENGINE_H_
#define	_RF__RF_ENGINE_H_

extern void **rf_hook_cookies;

int  rf_ConfigureEngine(RF_ShutdownList_t **, RF_Raid_t *, RF_Config_t *);

	/* Return finished node to engine. */
int  rf_FinishNode(RF_DagNode_t *, int);

	/* Execute dag. */
int  rf_DispatchDAG(RF_DagHeader_t *, void (*) (void *), void *);

#endif	/* !_RF__RF_ENGINE_H_ */
@


1.4
log
@Major KNF.  Incentive from Tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_engine.h,v 1.3 2002/08/05 22:11:27 tdeval Exp $	*/
@


1.3
log
@Clean up hook cookies from shutdown hook.
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_engine.h,v 1.2 1999/02/16 00:02:43 niklas Exp $	*/
d3 1
d31 5
a35 5
/**********************************************************
 *                                                        *
 * engine.h -- header file for execution engine functions *
 *                                                        *
 **********************************************************/
d37 2
a38 2
#ifndef _RF__RF_ENGINE_H_
#define _RF__RF_ENGINE_H_
d42 1
a42 3
int 
rf_ConfigureEngine(RF_ShutdownList_t ** listp,
    RF_Raid_t * raidPtr, RF_Config_t * cfgPtr);
d44 2
a45 2
int     rf_FinishNode(RF_DagNode_t * node, int context);	/* return finished node
								 * to engine */
d47 2
a48 1
int     rf_DispatchDAG(RF_DagHeader_t * dag, void (*cbFunc) (void *), void *cbArg);	/* execute dag */
d50 1
a50 1
#endif				/* !_RF__RF_ENGINE_H_ */
@


1.2
log
@Merge from NetBSD, mostly indentation
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_engine.h,v 1.1 1999/01/11 14:29:19 niklas Exp $	*/
d38 2
@


1.2.6.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d30 5
a34 8
/***********************************************************
 *                                                         *
 * engine.h -- Header file for execution engine functions. *
 *                                                         *
 ***********************************************************/

#ifndef	_RF__RF_ENGINE_H_
#define	_RF__RF_ENGINE_H_
d36 2
a37 1
extern void **rf_hook_cookies;
d39 3
a41 1
int  rf_ConfigureEngine(RF_ShutdownList_t **, RF_Raid_t *, RF_Config_t *);
d43 2
a44 2
	/* Return finished node to engine. */
int  rf_FinishNode(RF_DagNode_t *, int);
d46 1
a46 2
	/* Execute dag. */
int  rf_DispatchDAG(RF_DagHeader_t *, void (*) (void *), void *);
d48 1
a48 1
#endif	/* !_RF__RF_ENGINE_H_ */
@


1.2.16.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_engine.h,v 1.2 1999/02/16 00:02:43 niklas Exp $	*/
a37 2

extern void **rf_hook_cookies;
@


1.2.16.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d30 5
a34 5
/***********************************************************
 *                                                         *
 * engine.h -- Header file for execution engine functions. *
 *                                                         *
 ***********************************************************/
d36 2
a37 2
#ifndef	_RF__RF_ENGINE_H_
#define	_RF__RF_ENGINE_H_
d41 3
a43 1
int  rf_ConfigureEngine(RF_ShutdownList_t **, RF_Raid_t *, RF_Config_t *);
d45 2
a46 2
	/* Return finished node to engine. */
int  rf_FinishNode(RF_DagNode_t *, int);
d48 1
a48 2
	/* Execute dag. */
int  rf_DispatchDAG(RF_DagHeader_t *, void (*) (void *), void *);
d50 1
a50 1
#endif	/* !_RF__RF_ENGINE_H_ */
@


1.1
log
@Import of CMU's RAIDframe via NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_engine.h,v 1.1 1998/11/13 04:20:29 oster Exp $	*/
/*	$NetBSD: rf_engine.h,v 1.1 1998/11/13 04:20:29 oster Exp $	*/
a35 29
/* :  
 * Log: rf_engine.h,v 
 * Revision 1.11  1996/06/14 14:16:22  jimz
 * new decl of ConfigureEngine
 *
 * Revision 1.10  1996/06/10  11:55:47  jimz
 * Straightened out some per-array/not-per-array distinctions, fixed
 * a couple bugs related to confusion. Added shutdown lists. Removed
 * layout shutdown function (now subsumed by shutdown lists).
 *
 * Revision 1.9  1996/05/30  12:59:18  jimz
 * make etimer happier, more portable
 *
 * Revision 1.8  1996/05/24  04:28:55  jimz
 * release cleanup ckpt
 *
 * Revision 1.7  1996/05/23  21:46:35  jimz
 * checkpoint in code cleanup (release prep)
 * lots of types, function names have been fixed
 *
 * Revision 1.6  1996/05/18  19:51:34  jimz
 * major code cleanup- fix syntax, make some types consistent,
 * add prototypes, clean out dead code, et cetera
 *
 * Revision 1.5  1995/12/01  18:12:17  root
 * added copyright info
 *
 */

d39 3
a41 2
int rf_ConfigureEngine(RF_ShutdownList_t **listp,
	RF_Raid_t *raidPtr, RF_Config_t *cfgPtr);
d43 2
a44 1
int rf_FinishNode(RF_DagNode_t *node, int context); /* return finished node to engine */
d46 1
a46 1
int rf_DispatchDAG(RF_DagHeader_t *dag, void (*cbFunc)(void *), void *cbArg); /* execute dag */
d48 1
a48 1
#endif /* !_RF__RF_ENGINE_H_ */
@

