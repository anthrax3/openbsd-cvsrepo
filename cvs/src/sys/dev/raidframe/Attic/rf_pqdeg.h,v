head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.38
	OPENBSD_5_0:1.3.0.36
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.34
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.32
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.28
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.30
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.26
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.24
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.16
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.6
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2012.04.06.15.53.59;	author jsing;	state dead;
branches;
next	1.3;

1.3
date	2002.12.16.07.01.04;	author tdeval;	state Exp;
branches;
next	1.2;

1.2
date	99.02.16.00.03.11;	author niklas;	state Exp;
branches
	1.2.6.1
	1.2.16.1;
next	1.1;

1.1
date	99.01.11.14.29.39;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2003.03.28.00.38.29;	author niklas;	state Exp;
branches;
next	;

1.2.16.1
date	2003.05.19.22.21.53;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Put raidframe in the attic.
@
text
@/*	$OpenBSD: rf_pqdeg.h,v 1.3 2002/12/16 07:01:04 tdeval Exp $	*/
/*	$NetBSD: rf_pqdeg.h,v 1.3 1999/02/05 00:06:15 oster Exp $	*/

/*
 * Copyright (c) 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Daniel Stodolsky
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#ifndef	_RF__RF_PQDEG_H_
#define	_RF__RF_PQDEG_H_

#include "rf_types.h"

#if	RF_UTILITY == 0
#include "rf_dag.h"

/*
 * Extern decl's of the failure mode PQ functions.
 * See pddeg.c for nomenclature discussion.
 */

/* Reads, single failure. */
RF_CREATE_DAG_FUNC_DECL(rf_PQ_100_CreateReadDAG);
/* Reads, two failures. */
RF_CREATE_DAG_FUNC_DECL(rf_PQ_110_CreateReadDAG);
RF_CREATE_DAG_FUNC_DECL(rf_PQ_101_CreateReadDAG);
RF_CREATE_DAG_FUNC_DECL(rf_PQ_200_CreateReadDAG);

/* Writes, single failure. */
RF_CREATE_DAG_FUNC_DECL(rf_PQ_100_CreateWriteDAG);
RF_CREATE_DAG_FUNC_DECL(rf_PQ_010_CreateSmallWriteDAG);
RF_CREATE_DAG_FUNC_DECL(rf_PQ_010_CreateLargeWriteDAG);
RF_CREATE_DAG_FUNC_DECL(rf_PQ_001_CreateSmallWriteDAG);
RF_CREATE_DAG_FUNC_DECL(rf_PQ_001_CreateLargeWriteDAG);

/* Writes, double failures. */
RF_CREATE_DAG_FUNC_DECL(rf_PQ_011_CreateWriteDAG);
RF_CREATE_DAG_FUNC_DECL(rf_PQ_110_CreateWriteDAG);
RF_CREATE_DAG_FUNC_DECL(rf_PQ_101_CreateWriteDAG);
RF_CREATE_DAG_FUNC_DECL(rf_PQ_200_CreateWriteDAG);
#endif	/* RF_UTILITY == 0 */

typedef	RF_uint32	RF_ua32_t[32];
typedef	RF_uint8	RF_ua1024_t[1024];

extern RF_ua32_t rf_rn;
extern RF_ua32_t rf_qfor[32];
#ifndef	_KERNEL			/*
				 * We don't support PQ in the kernel yet, so
				 * don't link in this monster table.
				 */
extern RF_ua1024_t rf_qinv[29 * 29];
#else	/* !_KERNEL */
extern RF_ua1024_t rf_qinv[1];
#endif	/* !_KERNEL */

#endif	/* !_RF__RF_PQDEG_H_ */
@


1.3
log
@Major KNF.  Incentive from Tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_pqdeg.h,v 1.2 1999/02/16 00:03:11 niklas Exp $	*/
@


1.2
log
@Merge from NetBSD, mostly indentation
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_pqdeg.h,v 1.1 1999/01/11 14:29:39 niklas Exp $	*/
d3 1
d31 2
a32 2
#ifndef _RF__RF_PQDEG_H_
#define _RF__RF_PQDEG_H_
d36 1
a36 1
#if RF_UTILITY == 0
d39 2
a40 1
/* extern decl's of the failure mode PQ functions.
d44 1
a44 1
/* reads, single failure  */
d46 1
a46 1
/* reads, two failure */
d51 1
a51 1
/* writes, single failure */
d58 1
a58 1
/* writes, double failure */
d63 1
a63 1
#endif				/* RF_UTILITY == 0 */
d65 2
a66 2
typedef RF_uint32 RF_ua32_t[32];
typedef RF_uint8 RF_ua1024_t[1024];
d70 4
a73 2
#ifndef _KERNEL			/* we don't support PQ in the kernel yet, so
				 * don't link in this monster table */
d75 1
a75 1
#else				/* !_KERNEL */
d77 1
a77 1
#endif				/* !_KERNEL */
d79 1
a79 1
#endif				/* !_RF__RF_PQDEG_H_ */
@


1.2.16.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d30 2
a31 2
#ifndef	_RF__RF_PQDEG_H_
#define	_RF__RF_PQDEG_H_
d35 1
a35 1
#if	RF_UTILITY == 0
d38 1
a38 2
/*
 * Extern decl's of the failure mode PQ functions.
d42 1
a42 1
/* Reads, single failure. */
d44 1
a44 1
/* Reads, two failures. */
d49 1
a49 1
/* Writes, single failure. */
d56 1
a56 1
/* Writes, double failures. */
d61 1
a61 1
#endif	/* RF_UTILITY == 0 */
d63 2
a64 2
typedef	RF_uint32	RF_ua32_t[32];
typedef	RF_uint8	RF_ua1024_t[1024];
d68 2
a69 4
#ifndef	_KERNEL			/*
				 * We don't support PQ in the kernel yet, so
				 * don't link in this monster table.
				 */
d71 1
a71 1
#else	/* !_KERNEL */
d73 1
a73 1
#endif	/* !_KERNEL */
d75 1
a75 1
#endif	/* !_RF__RF_PQDEG_H_ */
@


1.2.6.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d30 2
a31 2
#ifndef	_RF__RF_PQDEG_H_
#define	_RF__RF_PQDEG_H_
d35 1
a35 1
#if	RF_UTILITY == 0
d38 1
a38 2
/*
 * Extern decl's of the failure mode PQ functions.
d42 1
a42 1
/* Reads, single failure. */
d44 1
a44 1
/* Reads, two failures. */
d49 1
a49 1
/* Writes, single failure. */
d56 1
a56 1
/* Writes, double failures. */
d61 1
a61 1
#endif	/* RF_UTILITY == 0 */
d63 2
a64 2
typedef	RF_uint32	RF_ua32_t[32];
typedef	RF_uint8	RF_ua1024_t[1024];
d68 2
a69 4
#ifndef	_KERNEL			/*
				 * We don't support PQ in the kernel yet, so
				 * don't link in this monster table.
				 */
d71 1
a71 1
#else	/* !_KERNEL */
d73 1
a73 1
#endif	/* !_KERNEL */
d75 1
a75 1
#endif	/* !_RF__RF_PQDEG_H_ */
@


1.1
log
@Import of CMU's RAIDframe via NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_pqdeg.h,v 1.1 1998/11/13 04:20:32 oster Exp $	*/
/*	$NetBSD: rf_pqdeg.h,v 1.1 1998/11/13 04:20:32 oster Exp $	*/
a29 19
/* :  
 * Log: rf_pqdeg.h,v 
 * Revision 1.7  1996/07/18 22:57:14  jimz
 * port simulator to AIX
 *
 * Revision 1.6  1996/06/02  17:31:48  jimz
 * Moved a lot of global stuff into array structure, where it belongs.
 * Fixed up paritylogging, pss modules in this manner. Some general
 * code cleanup. Removed lots of dead code, some dead files.
 *
 * Revision 1.5  1996/05/23  21:46:35  jimz
 * checkpoint in code cleanup (release prep)
 * lots of types, function names have been fixed
 *
 * Revision 1.4  1995/11/30  16:19:11  wvcii
 * added copyright info
 *
 */

d61 1
a61 1
#endif /* RF_UTILITY == 0 */
d63 2
a64 2
typedef RF_uint32     RF_ua32_t[32];
typedef RF_uint8      RF_ua1024_t[1024];
d68 4
a71 3
#ifndef KERNEL                 /* we don't support PQ in the kernel yet, so don't link in this monster table */
extern RF_ua1024_t rf_qinv[29*29];
#else /* !KERNEL */
d73 1
a73 1
#endif /* !KERNEL */
d75 1
a75 1
#endif /* !_RF__RF_PQDEG_H_ */
@

