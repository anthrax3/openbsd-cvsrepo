head	1.7;
access;
symbols
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.38
	OPENBSD_5_0:1.6.0.36
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.34
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.32
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.28
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.30
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.26
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.24
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.22
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.20
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.18
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.16
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.14
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.12
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.10
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.8
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.6
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.12
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.10
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.5.0.8
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.6
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.2
	SMP_BASE:1.4
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2012.04.06.15.53.58;	author jsing;	state dead;
branches;
next	1.6;

1.6
date	2002.12.16.07.01.03;	author tdeval;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.08.16.07.38;	author peter;	state Exp;
branches
	1.5.8.1;
next	1.4;

1.4
date	2000.01.11.18.02.20;	author peter;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2000.01.07.14.50.19;	author peter;	state Exp;
branches;
next	1.2;

1.2
date	99.02.16.00.02.23;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	99.01.11.14.28.59;	author niklas;	state Exp;
branches;
next	;

1.4.2.1
date	2001.05.14.22.26.09;	author niklas;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2003.03.28.00.38.26;	author niklas;	state Exp;
branches;
next	;

1.5.8.1
date	2003.05.19.22.21.50;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Put raidframe in the attic.
@
text
@/*	$OpenBSD: rf_archs.h,v 1.6 2002/12/16 07:01:03 tdeval Exp $	*/
/*	$NetBSD: rf_archs.h,v 1.9 2000/03/04 03:27:13 oster Exp $	*/

/*
 * Copyright (c) 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Mark Holland
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*
 * rf_archs.h -- Defines for which architectures you want to
 * include in some particular build of RAIDframe.  Unfortunately,
 * it's difficult to exclude declustering, P+Q, and distributed
 * sparing because the code is intermixed with RAID5 code.  This
 * should be fixed.
 *
 * This is really intended only for use in the kernel, where I
 * am worried about the size of the object module.  At user level and
 * in the simulator, I don't really care that much, so all the
 * architectures can be compiled together.  Note that by itself, turning
 * off these defines does not affect the size of the executable; you
 * have to edit the makefile for that.
 *
 * Comment out any line below to eliminate that architecture.
 * The list below includes all the modules that can be compiled
 * out.
 */

#ifndef	_RF__RF_ARCHS_H_
#define	_RF__RF_ARCHS_H_

#define	RF_INCLUDE_EVENODD			1

#define	RF_INCLUDE_RAID5_RS			1
#define	RF_INCLUDE_PARITYLOGGING		1

#define	RF_INCLUDE_CHAINDECLUSTER		1
#define	RF_INCLUDE_INTERDECLUSTER		1

#define	RF_INCLUDE_RAID0			1
#define	RF_INCLUDE_RAID1			1
#define	RF_INCLUDE_RAID4			1
#define	RF_INCLUDE_RAID5			1
#define	RF_INCLUDE_RAID6			1
#define	RF_INCLUDE_DECL_PQ			1

#define	RF_MEMORY_REDZONES			0
#define	RF_RECON_STATS				1

#include "rf_options.h"

#endif	/* !_RF__RF_ARCHS_H_ */
@


1.6
log
@Major KNF.  Incentive from Tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_archs.h,v 1.5 2000/08/08 16:07:38 peter Exp $	*/
@


1.5
log
@sync RAIDframe with Gre Oster's work for NetBSD.

This update incorporates changes since January 2000.

RAID1 and RAID5 tested for functionality matching the 2.7 code. A
number of bug fixes (including stopping a parity rebuild when
unconfiguring) have been included. See Greg's RAIDframe info page:

	http://www.cs.usask.ca/staff/oster/raid.html

The RAID_AUTOCONFIG feature set does *NOT* yet work. These features
require more work throughout the boot system and as such are a big
task.

IMPORTANT: As with anything that is this near live data on your
systems, please test carefully with existing configurations before
deploying in a live system.  Feedback via sendbug or mail direct
to peter@@wonderland.org is appreciated.
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_archs.h,v 1.4 2000/01/11 18:02:20 peter Exp $	*/
d3 1
d31 3
a33 2
/* rf_archs.h -- defines for which architectures you want to
 * include is some particular build of raidframe.  Unfortunately,
d38 1
a38 1
 * this is really intended only for use in the kernel, where I
d45 2
a46 2
 * comment out any line below to eliminate that architecture.
 * the list below includes all the modules that can be compiled
a47 1
 *
d50 2
a51 2
#ifndef _RF__RF_ARCHS_H_
#define _RF__RF_ARCHS_H_
d53 1
a53 1
#define RF_INCLUDE_EVENODD       1
d55 2
a56 2
#define RF_INCLUDE_RAID5_RS      1
#define RF_INCLUDE_PARITYLOGGING 1
d58 9
a66 9
#define RF_INCLUDE_CHAINDECLUSTER 1
#define RF_INCLUDE_INTERDECLUSTER 1

#define RF_INCLUDE_RAID0   1
#define RF_INCLUDE_RAID1   1
#define RF_INCLUDE_RAID4   1
#define RF_INCLUDE_RAID5   1
#define RF_INCLUDE_RAID6   0
#define RF_INCLUDE_DECL_PQ 0
d68 2
a69 2
#define RF_MEMORY_REDZONES 0
#define RF_RECON_STATS     1
d73 1
a73 1
#endif				/* !_RF__RF_ARCHS_H_ */
@


1.5.8.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d30 2
a31 3
/*
 * rf_archs.h -- Defines for which architectures you want to
 * include in some particular build of RAIDframe.  Unfortunately,
d36 1
a36 1
 * This is really intended only for use in the kernel, where I
d43 2
a44 2
 * Comment out any line below to eliminate that architecture.
 * The list below includes all the modules that can be compiled
d46 1
d49 2
a50 2
#ifndef	_RF__RF_ARCHS_H_
#define	_RF__RF_ARCHS_H_
d52 1
a52 1
#define	RF_INCLUDE_EVENODD			1
d54 2
a55 2
#define	RF_INCLUDE_RAID5_RS			1
#define	RF_INCLUDE_PARITYLOGGING		1
d57 9
a65 9
#define	RF_INCLUDE_CHAINDECLUSTER		1
#define	RF_INCLUDE_INTERDECLUSTER		1

#define	RF_INCLUDE_RAID0			1
#define	RF_INCLUDE_RAID1			1
#define	RF_INCLUDE_RAID4			1
#define	RF_INCLUDE_RAID5			1
#define	RF_INCLUDE_RAID6			1
#define	RF_INCLUDE_DECL_PQ			1
d67 2
a68 2
#define	RF_MEMORY_REDZONES			0
#define	RF_RECON_STATS				1
d72 1
a72 1
#endif	/* !_RF__RF_ARCHS_H_ */
@


1.4
log
@sync with NetBSD

- removed threadid stuff
- removed unused files
- general tidyup
- you can no longer configure the same unit twice (without
de-configuring first of course).

Again, this has only been tested locally on IDE disks. Further testing
and feedback would be appreciated.
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_archs.h,v 1.3 2000/01/07 14:50:19 peter Exp $	*/
/*	$NetBSD: rf_archs.h,v 1.7 2000/01/08 03:49:37 oster Exp $	*/
a68 4

#define RF_INCLUDE_QUEUE_RANDOM 0

#define RF_KEEP_DISKSTATS 1
@


1.4.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_archs.h,v 1.5 2000/08/08 16:07:38 peter Exp $	*/
/*	$NetBSD: rf_archs.h,v 1.9 2000/03/04 03:27:13 oster Exp $	*/
d69 4
@


1.4.2.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d30 2
a31 3
/*
 * rf_archs.h -- Defines for which architectures you want to
 * include in some particular build of RAIDframe.  Unfortunately,
d36 1
a36 1
 * This is really intended only for use in the kernel, where I
d43 2
a44 2
 * Comment out any line below to eliminate that architecture.
 * The list below includes all the modules that can be compiled
d46 1
d49 2
a50 2
#ifndef	_RF__RF_ARCHS_H_
#define	_RF__RF_ARCHS_H_
d52 1
a52 1
#define	RF_INCLUDE_EVENODD			1
d54 2
a55 2
#define	RF_INCLUDE_RAID5_RS			1
#define	RF_INCLUDE_PARITYLOGGING		1
d57 9
a65 9
#define	RF_INCLUDE_CHAINDECLUSTER		1
#define	RF_INCLUDE_INTERDECLUSTER		1

#define	RF_INCLUDE_RAID0			1
#define	RF_INCLUDE_RAID1			1
#define	RF_INCLUDE_RAID4			1
#define	RF_INCLUDE_RAID5			1
#define	RF_INCLUDE_RAID6			1
#define	RF_INCLUDE_DECL_PQ			1
d67 2
a68 2
#define	RF_MEMORY_REDZONES			0
#define	RF_RECON_STATS				1
d72 1
a72 1
#endif	/* !_RF__RF_ARCHS_H_ */
@


1.3
log
@sync with work by Greg Oster on NetBSD

Please note: This update has *only* been tested on i386 with IDE
disks. Could someone with a spare box please make sure all is OK with
SCSI and maybe other arches ? sparc testing will follow locally.

* remove rf_sys.h
* many changes to make it more stable
* some performance increases
* All raid threads now get their own kernel process and the calling
  raidctl(8) program will show status progress through a meter.
* In theory FFS_SOFTUPDATES and RAIDframe will now work together - NOT
  TESTED YET

See http://www.cs.usask.ca/staff/oster/raid.html

This updates include Greg's changes to Jan 4th 2000.

TODO:
* some odd behaviour when running raictl -c on an already config'ed
  raid set - problem founf, fix being done
* progress meter is in raidctl(8) - seperate commit, but could do with
  sync'ing with OpenBSD ftp version
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_archs.h,v 1.2 1999/02/16 00:02:23 niklas Exp $	*/
/*	$NetBSD: rf_archs.h,v 1.6 1999/08/26 02:40:27 oster Exp $	*/
a50 5

/*
 * Khalil's performance-displaying demo stuff.
 * Relies on CMU meter tools.
 */
@


1.2
log
@Merge from NetBSD, mostly indentation
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_archs.h,v 1.1 1999/01/11 14:28:59 niklas Exp $	*/
/*	$NetBSD: rf_archs.h,v 1.4 1999/02/05 00:06:06 oster Exp $	*/
a52 8
 * Turn off if you do not have CMU PDL support compiled
 * into your kernel.
 */
#ifndef RF_CMU_PDL
#define RF_CMU_PDL 0
#endif				/* !RF_CMU_PDL */

/*
a77 11

/* These two symbols enable nonstandard forms of error recovery.
 * These modes are only valid for performance measurements and
 * data corruption will occur if an error occurs when either
 * forward or backward error recovery are enabled.  In general
 * both of the following two definitions should be commented
 * out--this forces RAIDframe to use roll-away error recovery
 * which does guarantee proper error recovery without data corruption
 */
/* #define RF_FORWARD 1 */
/* #define RF_BACKWARD 1 */
@


1.1
log
@Import of CMU's RAIDframe via NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_archs.h,v 1.1 1998/11/13 04:20:26 oster Exp $	*/
/*	$NetBSD: rf_archs.h,v 1.1 1998/11/13 04:20:26 oster Exp $	*/
a46 106
 * :  
 * Log: rf_archs.h,v 
 * Revision 1.32  1996/08/20 23:05:40  jimz
 * define RF_KEEP_DISKSTATS to 1
 *
 * Revision 1.31  1996/07/31  15:34:04  jimz
 * include evenodd
 *
 * Revision 1.30  1996/07/27  23:36:08  jimz
 * Solaris port of simulator
 *
 * Revision 1.29  1996/07/26  20:11:46  jimz
 * only define RF_DEMO for CMU_PDL
 *
 * Revision 1.28  1996/07/26  20:10:57  jimz
 * define RF_CMU_PDL only if it isn't already defined
 *
 * Revision 1.27  1996/07/18  22:57:14  jimz
 * port simulator to AIX
 *
 * Revision 1.26  1996/06/17  14:38:33  jimz
 * properly #if out RF_DEMO code
 * fix bug in MakeConfig that was causing weird behavior
 * in configuration routines (config was not zeroed at start)
 * clean up genplot handling of stacks
 *
 * Revision 1.25  1996/06/14  21:24:59  jimz
 * turn on RF_CMU_PDL by default
 *
 * Revision 1.24  1996/06/13  20:41:57  jimz
 * add RF_INCLUDE_QUEUE_RANDOM (0)
 *
 * Revision 1.23  1996/06/11  18:12:36  jimz
 * get rid of JOIN operations
 * use ThreadGroup stuff instead
 * fix some allocation/deallocation and sync bugs
 *
 * Revision 1.22  1996/06/10  22:24:55  wvcii
 * added symbols for enabling forward or backward error
 * recovery experiments
 *
 * Revision 1.21  1996/06/05  18:06:02  jimz
 * Major code cleanup. The Great Renaming is now done.
 * Better modularity. Better typing. Fixed a bunch of
 * synchronization bugs. Made a lot of global stuff
 * per-desc or per-array. Removed dead code.
 *
 * Revision 1.20  1996/05/30  11:29:41  jimz
 * Numerous bug fixes. Stripe lock release code disagreed with the taking code
 * about when stripes should be locked (I made it consistent: no parity, no lock)
 * There was a lot of extra serialization of I/Os which I've removed- a lot of
 * it was to calculate values for the cache code, which is no longer with us.
 * More types, function, macro cleanup. Added code to properly quiesce the array
 * on shutdown. Made a lot of stuff array-specific which was (bogusly) general
 * before. Fixed memory allocation, freeing bugs.
 *
 * Revision 1.19  1996/05/27  18:56:37  jimz
 * more code cleanup
 * better typing
 * compiles in all 3 environments
 *
 * Revision 1.18  1996/05/23  21:46:35  jimz
 * checkpoint in code cleanup (release prep)
 * lots of types, function names have been fixed
 *
 * Revision 1.17  1996/05/23  00:33:23  jimz
 * code cleanup: move all debug decls to rf_options.c, all extern
 * debug decls to rf_options.h, all debug vars preceded by rf_
 *
 * Revision 1.16  1996/05/18  19:51:34  jimz
 * major code cleanup- fix syntax, make some types consistent,
 * add prototypes, clean out dead code, et cetera
 *
 * Revision 1.15  1996/05/15  22:32:59  jimz
 * remove cache and vs stuff
 *
 * Revision 1.14  1995/11/30  16:27:34  wvcii
 * added copyright info
 *
 * Revision 1.13  1995/11/28  21:23:44  amiri
 * added the interleaved declustering architecture
 * ('I'), with distributed sparing.
 *
 * Revision 1.12  1995/11/17  16:59:45  amiri
 * don't INCLUDE_CHAINDECLUSTER in the kernel
 * source.
 *
 * Revision 1.11  1995/11/16  16:15:21  amiri
 * don't include RAID5 with rotated sparing (INCLUDE_RAID5_RS) in kernel
 *
 * Revision 1.10  1995/10/12  17:40:47  jimz
 * define INCLUDE_LS
 *
 * Revision 1.9  1995/10/11  06:56:47  jimz
 * define INCLUDE_VS (sanity check for compilation)
 *
 * Revision 1.8  1995/10/05  18:56:24  jimz
 * don't INCLUDE_VS
 *
 * Revision 1.7  1995/10/04  03:51:20  wvcii
 * added raid 1
 *
 * Revision 1.6  1995/09/07  09:59:29  wvcii
 * unstable archs conditionally defined for !KERNEL makes
 *
 *
d58 1
a58 1
#endif /* !RF_CMU_PDL */
a63 5
#ifndef KERNEL
#if RF_CMU_PDL > 0
#define RF_DEMO 1
#endif /* RF_CMU_PDL > 0 */
#endif /* !KERNEL */
d100 1
a100 1
#endif /* !_RF__RF_ARCHS_H_ */
@

