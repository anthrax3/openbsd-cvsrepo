head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.38
	OPENBSD_5_0:1.3.0.36
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.34
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.32
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.28
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.30
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.26
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.24
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.16
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.6
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2012.04.06.15.53.58;	author jsing;	state dead;
branches;
next	1.3;

1.3
date	2002.12.16.07.01.04;	author tdeval;	state Exp;
branches;
next	1.2;

1.2
date	99.02.16.00.03.02;	author niklas;	state Exp;
branches
	1.2.6.1
	1.2.16.1;
next	1.1;

1.1
date	99.01.11.14.29.33;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2003.03.28.00.38.28;	author niklas;	state Exp;
branches;
next	;

1.2.16.1
date	2003.05.19.22.21.52;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Put raidframe in the attic.
@
text
@/*	$OpenBSD: rf_options.c,v 1.3 2002/12/16 07:01:04 tdeval Exp $	*/
/*	$NetBSD: rf_options.c,v 1.3 1999/02/05 00:06:13 oster Exp $	*/

/*
 * rf_options.c
 */
/*
 * Copyright (c) 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Jim Zelenka
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */


#include "rf_threadstuff.h"
#include "rf_types.h"
#include "rf_archs.h"
#include "rf_general.h"
#include "rf_options.h"

#ifdef	RF_DBG_OPTION
#undef	RF_DBG_OPTION
#endif	/* RF_DBG_OPTION */

#ifdef	__STDC__
#define	RF_DBG_OPTION(_option_,_defval_)				\
	long rf_##_option_ = _defval_;
#else	/* __STDC__ */
#define	RF_DBG_OPTION(_option_,_defval_)				\
	long rf_/**/_option_ = _defval_;
#endif	/* __STDC__ */

#include "rf_optnames.h"

#undef	RF_DBG_OPTION

#ifdef	__STDC__
#define	RF_DBG_OPTION(_option_,_defval_)				\
	{RF_STRING(_option_), &rf_##_option_},
#else	/* __STDC__ */
#define	RF_DBG_OPTION(_option_,_defval_)				\
	{RF_STRING(_option_), &rf_/**/_option_},
#endif	/* __STDC__ */

RF_DebugName_t rf_debugNames[] = {
#include "rf_optnames.h"
	{NULL, NULL}
};
#undef	RF_DBG_OPTION

#ifdef	__STDC__
#define	RF_DBG_OPTION(_option_,_defval_)				\
	rf_##_option_  = _defval_;
#else	/* __STDC__ */
#define	RF_DBG_OPTION(_option_,_defval_)				\
	rf_/**/_option_ = _defval_;
#endif	/* __STDC__ */

void
rf_ResetDebugOptions(void)
{
#include "rf_optnames.h"
}
@


1.3
log
@Major KNF.  Incentive from Tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_options.c,v 1.2 1999/02/16 00:03:02 niklas Exp $	*/
@


1.2
log
@Merge from NetBSD, mostly indentation
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_options.c,v 1.1 1999/01/11 14:29:33 niklas Exp $	*/
d3 1
d41 11
a51 9
#ifdef RF_DBG_OPTION
#undef RF_DBG_OPTION
#endif				/* RF_DBG_OPTION */

#ifdef __STDC__
#define RF_DBG_OPTION(_option_,_defval_) long rf_##_option_ = _defval_;
#else				/* __STDC__ */
#define RF_DBG_OPTION(_option_,_defval_) long rf_/**/_option_ = _defval_;
#endif				/* __STDC__ */
d55 1
a55 1
#undef RF_DBG_OPTION
d57 7
a63 5
#ifdef __STDC__
#define RF_DBG_OPTION(_option_,_defval_) { RF_STRING(_option_), &rf_##_option_ },
#else				/* __STDC__ */
#define RF_DBG_OPTION(_option_,_defval_) { RF_STRING(_option_), &rf_/**/_option_ },
#endif				/* __STDC__ */
d69 1
a69 1
#undef RF_DBG_OPTION
d71 7
a77 5
#ifdef __STDC__
#define RF_DBG_OPTION(_option_,_defval_) rf_##_option_  = _defval_ ;
#else				/* __STDC__ */
#define RF_DBG_OPTION(_option_,_defval_) rf_/**/_option_ = _defval_ ;
#endif				/* __STDC__ */
d79 2
a80 2
void 
rf_ResetDebugOptions()
@


1.2.16.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d40 9
a48 11
#ifdef	RF_DBG_OPTION
#undef	RF_DBG_OPTION
#endif	/* RF_DBG_OPTION */

#ifdef	__STDC__
#define	RF_DBG_OPTION(_option_,_defval_)				\
	long rf_##_option_ = _defval_;
#else	/* __STDC__ */
#define	RF_DBG_OPTION(_option_,_defval_)				\
	long rf_/**/_option_ = _defval_;
#endif	/* __STDC__ */
d52 1
a52 1
#undef	RF_DBG_OPTION
d54 5
a58 7
#ifdef	__STDC__
#define	RF_DBG_OPTION(_option_,_defval_)				\
	{RF_STRING(_option_), &rf_##_option_},
#else	/* __STDC__ */
#define	RF_DBG_OPTION(_option_,_defval_)				\
	{RF_STRING(_option_), &rf_/**/_option_},
#endif	/* __STDC__ */
d64 1
a64 1
#undef	RF_DBG_OPTION
d66 5
a70 7
#ifdef	__STDC__
#define	RF_DBG_OPTION(_option_,_defval_)				\
	rf_##_option_  = _defval_;
#else	/* __STDC__ */
#define	RF_DBG_OPTION(_option_,_defval_)				\
	rf_/**/_option_ = _defval_;
#endif	/* __STDC__ */
d72 2
a73 2
void
rf_ResetDebugOptions(void)
@


1.2.6.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d40 9
a48 11
#ifdef	RF_DBG_OPTION
#undef	RF_DBG_OPTION
#endif	/* RF_DBG_OPTION */

#ifdef	__STDC__
#define	RF_DBG_OPTION(_option_,_defval_)				\
	long rf_##_option_ = _defval_;
#else	/* __STDC__ */
#define	RF_DBG_OPTION(_option_,_defval_)				\
	long rf_/**/_option_ = _defval_;
#endif	/* __STDC__ */
d52 1
a52 1
#undef	RF_DBG_OPTION
d54 5
a58 7
#ifdef	__STDC__
#define	RF_DBG_OPTION(_option_,_defval_)				\
	{RF_STRING(_option_), &rf_##_option_},
#else	/* __STDC__ */
#define	RF_DBG_OPTION(_option_,_defval_)				\
	{RF_STRING(_option_), &rf_/**/_option_},
#endif	/* __STDC__ */
d64 1
a64 1
#undef	RF_DBG_OPTION
d66 5
a70 7
#ifdef	__STDC__
#define	RF_DBG_OPTION(_option_,_defval_)				\
	rf_##_option_  = _defval_;
#else	/* __STDC__ */
#define	RF_DBG_OPTION(_option_,_defval_)				\
	rf_/**/_option_ = _defval_;
#endif	/* __STDC__ */
d72 2
a73 2
void
rf_ResetDebugOptions(void)
@


1.1
log
@Import of CMU's RAIDframe via NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_options.c,v 1.1 1998/11/13 04:20:31 oster Exp $	*/
/*	$NetBSD: rf_options.c,v 1.1 1998/11/13 04:20:31 oster Exp $	*/
a32 9
#ifdef _KERNEL
#define KERNEL
#endif

#ifdef KERNEL
#if !defined(__NetBSD__) && !defined(__OpenBSD__)
#include <dfstrace.h>
#endif /* !__NetBSD__ && !__OpenBSD__ */
#endif /* KERNEL */
d42 1
a42 1
#endif /* RF_DBG_OPTION */
d46 1
a46 1
#else /* __STDC__ */
d48 1
a48 1
#endif /* __STDC__ */
d56 1
a56 1
#else /* __STDC__ */
d58 1
a58 1
#endif /* __STDC__ */
a63 1

d68 1
a68 1
#else /* __STDC__ */
d70 1
a70 1
#endif /* __STDC__ */
d72 2
a73 1
void rf_ResetDebugOptions()
@

