head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.38
	OPENBSD_5_0:1.3.0.36
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.34
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.32
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.28
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.30
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.26
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.24
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.16
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.6
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2012.04.06.15.53.59;	author jsing;	state dead;
branches;
next	1.3;

1.3
date	2002.12.16.07.01.05;	author tdeval;	state Exp;
branches;
next	1.2;

1.2
date	99.02.16.00.03.24;	author niklas;	state Exp;
branches
	1.2.6.1
	1.2.16.1;
next	1.1;

1.1
date	99.01.11.14.29.48;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2003.03.28.00.38.29;	author niklas;	state Exp;
branches;
next	;

1.2.16.1
date	2003.05.19.22.21.53;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Put raidframe in the attic.
@
text
@/*	$OpenBSD: rf_reconutil.h,v 1.3 2002/12/16 07:01:05 tdeval Exp $	*/
/*	$NetBSD: rf_reconutil.h,v 1.3 1999/02/05 00:06:17 oster Exp $	*/

/*
 * Copyright (c) 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Mark Holland
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/**************************************************************
 * rf_reconutil.h -- Header file for reconstruction utilities.
 **************************************************************/

#ifndef	_RF__RF_RECONUTIL_H_
#define	_RF__RF_RECONUTIL_H_

#include "rf_types.h"
#include "rf_reconstruct.h"

RF_ReconCtrl_t *rf_MakeReconControl(RF_RaidReconDesc_t *,
	RF_RowCol_t, RF_RowCol_t, RF_RowCol_t, RF_RowCol_t);
void rf_FreeReconControl(RF_Raid_t *, RF_RowCol_t);
RF_HeadSepLimit_t rf_GetDefaultHeadSepLimit(RF_Raid_t *);
int  rf_GetDefaultNumFloatingReconBuffers(RF_Raid_t *);
RF_ReconBuffer_t *rf_MakeReconBuffer(RF_Raid_t *,
	RF_RowCol_t, RF_RowCol_t, RF_RbufType_t);
void rf_FreeReconBuffer(RF_ReconBuffer_t *);
void rf_CheckFloatingRbufCount(RF_Raid_t *, int);

#endif	/* !_RF__RF_RECONUTIL_H_ */
@


1.3
log
@Major KNF.  Incentive from Tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_reconutil.h,v 1.2 1999/02/16 00:03:24 niklas Exp $	*/
@


1.2
log
@Merge from NetBSD, mostly indentation
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_reconutil.h,v 1.1 1999/01/11 14:29:48 niklas Exp $	*/
d3 1
d31 3
a33 3
/************************************************************
 * rf_reconutil.h -- header file for reconstruction utilities
 ************************************************************/
d35 2
a36 2
#ifndef _RF__RF_RECONUTIL_H_
#define _RF__RF_RECONUTIL_H_
d41 9
a49 11
RF_ReconCtrl_t *
rf_MakeReconControl(RF_RaidReconDesc_t * reconDesc,
    RF_RowCol_t frow, RF_RowCol_t fcol, RF_RowCol_t srow, RF_RowCol_t scol);
void    rf_FreeReconControl(RF_Raid_t * raidPtr, RF_RowCol_t row);
RF_HeadSepLimit_t rf_GetDefaultHeadSepLimit(RF_Raid_t * raidPtr);
int     rf_GetDefaultNumFloatingReconBuffers(RF_Raid_t * raidPtr);
RF_ReconBuffer_t *
rf_MakeReconBuffer(RF_Raid_t * raidPtr, RF_RowCol_t row,
    RF_RowCol_t col, RF_RbufType_t type);
void    rf_FreeReconBuffer(RF_ReconBuffer_t * rbuf);
void    rf_CheckFloatingRbufCount(RF_Raid_t * raidPtr, int dolock);
d51 1
a51 1
#endif				/* !_RF__RF_RECONUTIL_H_ */
@


1.2.16.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d30 3
a32 3
/**************************************************************
 * rf_reconutil.h -- Header file for reconstruction utilities.
 **************************************************************/
d34 2
a35 2
#ifndef	_RF__RF_RECONUTIL_H_
#define	_RF__RF_RECONUTIL_H_
d40 11
a50 9
RF_ReconCtrl_t *rf_MakeReconControl(RF_RaidReconDesc_t *,
	RF_RowCol_t, RF_RowCol_t, RF_RowCol_t, RF_RowCol_t);
void rf_FreeReconControl(RF_Raid_t *, RF_RowCol_t);
RF_HeadSepLimit_t rf_GetDefaultHeadSepLimit(RF_Raid_t *);
int  rf_GetDefaultNumFloatingReconBuffers(RF_Raid_t *);
RF_ReconBuffer_t *rf_MakeReconBuffer(RF_Raid_t *,
	RF_RowCol_t, RF_RowCol_t, RF_RbufType_t);
void rf_FreeReconBuffer(RF_ReconBuffer_t *);
void rf_CheckFloatingRbufCount(RF_Raid_t *, int);
d52 1
a52 1
#endif	/* !_RF__RF_RECONUTIL_H_ */
@


1.2.6.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d30 3
a32 3
/**************************************************************
 * rf_reconutil.h -- Header file for reconstruction utilities.
 **************************************************************/
d34 2
a35 2
#ifndef	_RF__RF_RECONUTIL_H_
#define	_RF__RF_RECONUTIL_H_
d40 11
a50 9
RF_ReconCtrl_t *rf_MakeReconControl(RF_RaidReconDesc_t *,
	RF_RowCol_t, RF_RowCol_t, RF_RowCol_t, RF_RowCol_t);
void rf_FreeReconControl(RF_Raid_t *, RF_RowCol_t);
RF_HeadSepLimit_t rf_GetDefaultHeadSepLimit(RF_Raid_t *);
int  rf_GetDefaultNumFloatingReconBuffers(RF_Raid_t *);
RF_ReconBuffer_t *rf_MakeReconBuffer(RF_Raid_t *,
	RF_RowCol_t, RF_RowCol_t, RF_RbufType_t);
void rf_FreeReconBuffer(RF_ReconBuffer_t *);
void rf_CheckFloatingRbufCount(RF_Raid_t *, int);
d52 1
a52 1
#endif	/* !_RF__RF_RECONUTIL_H_ */
@


1.1
log
@Import of CMU's RAIDframe via NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_reconutil.h,v 1.1 1998/11/13 04:20:34 oster Exp $	*/
/*	$NetBSD: rf_reconutil.h,v 1.1 1998/11/13 04:20:34 oster Exp $	*/
a33 46
/* :  
 * Log: rf_reconutil.h,v 
 * Revision 1.10  1996/07/15 05:40:41  jimz
 * some recon datastructure cleanup
 * better handling of multiple failures
 * added undocumented double-recon test
 *
 * Revision 1.9  1996/07/13  00:00:59  jimz
 * sanitized generalized reconstruction architecture
 * cleaned up head sep, rbuf problems
 *
 * Revision 1.8  1996/06/07  21:33:04  jimz
 * begin using consistent types for sector numbers,
 * stripe numbers, row+col numbers, recon unit numbers
 *
 * Revision 1.7  1996/06/05  18:06:02  jimz
 * Major code cleanup. The Great Renaming is now done.
 * Better modularity. Better typing. Fixed a bunch of
 * synchronization bugs. Made a lot of global stuff
 * per-desc or per-array. Removed dead code.
 *
 * Revision 1.6  1996/06/03  23:28:26  jimz
 * more bugfixes
 * check in tree to sync for IPDS runs with current bugfixes
 * there still may be a problem with threads in the script test
 * getting I/Os stuck- not trivially reproducible (runs ~50 times
 * in a row without getting stuck)
 *
 * Revision 1.5  1996/05/27  18:56:37  jimz
 * more code cleanup
 * better typing
 * compiles in all 3 environments
 *
 * Revision 1.4  1996/05/23  21:46:35  jimz
 * checkpoint in code cleanup (release prep)
 * lots of types, function names have been fixed
 *
 * Revision 1.3  1996/05/18  19:51:34  jimz
 * major code cleanup- fix syntax, make some types consistent,
 * add prototypes, clean out dead code, et cetera
 *
 * Revision 1.2  1995/12/06  15:06:47  root
 * added copyright info
 *
 */

d40 11
a50 9
RF_ReconCtrl_t *rf_MakeReconControl(RF_RaidReconDesc_t *reconDesc,
	RF_RowCol_t frow, RF_RowCol_t fcol, RF_RowCol_t srow, RF_RowCol_t scol);
void rf_FreeReconControl(RF_Raid_t *raidPtr, RF_RowCol_t row);
RF_HeadSepLimit_t rf_GetDefaultHeadSepLimit(RF_Raid_t *raidPtr);
int rf_GetDefaultNumFloatingReconBuffers(RF_Raid_t *raidPtr);
RF_ReconBuffer_t *rf_MakeReconBuffer(RF_Raid_t *raidPtr, RF_RowCol_t row,
	RF_RowCol_t col, RF_RbufType_t type);
void rf_FreeReconBuffer(RF_ReconBuffer_t *rbuf);
void rf_CheckFloatingRbufCount(RF_Raid_t *raidPtr, int dolock);
d52 1
a52 1
#endif /* !_RF__RF_RECONUTIL_H_ */
@

