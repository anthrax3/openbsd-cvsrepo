head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.38
	OPENBSD_5_0:1.3.0.36
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.34
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.32
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.28
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.30
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.26
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.24
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.16
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.6
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2012.04.06.15.53.58;	author jsing;	state dead;
branches;
next	1.3;

1.3
date	2002.12.16.07.01.03;	author tdeval;	state Exp;
branches;
next	1.2;

1.2
date	99.02.16.00.02.27;	author niklas;	state Exp;
branches
	1.2.6.1
	1.2.16.1;
next	1.1;

1.1
date	99.01.11.14.29.03;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2003.03.28.00.38.27;	author niklas;	state Exp;
branches;
next	;

1.2.16.1
date	2003.05.19.22.21.51;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Put raidframe in the attic.
@
text
@/*	$OpenBSD: rf_copyback.h,v 1.3 2002/12/16 07:01:03 tdeval Exp $	*/
/*	$NetBSD: rf_copyback.h,v 1.3 1999/02/05 00:06:06 oster Exp $	*/

/*
 * rf_copyback.h
 */
/*
 * Copyright (c) 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Jim Zelenka
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#ifndef	_RF__RF_COPYBACK_H_
#define	_RF__RF_COPYBACK_H_

#include "rf_types.h"

typedef struct RF_CopybackDesc_s {
	RF_Raid_t		*raidPtr;
	RF_RowCol_t		 frow;
	RF_RowCol_t		 fcol;
	RF_RowCol_t		 spRow;
	RF_RowCol_t		 spCol;
	int			 status;
	RF_StripeNum_t		 stripeAddr;
	RF_SectorCount_t	 sectPerSU;
	RF_SectorCount_t	 sectPerStripe;
	char			*databuf;
	RF_DiskQueueData_t	*readreq;
	RF_DiskQueueData_t	*writereq;
	struct timeval		 starttime;
	RF_MCPair_t		*mcpair;
} RF_CopybackDesc_t;

extern int rf_copyback_in_progress;

int  rf_ConfigureCopyback(RF_ShutdownList_t **);
void rf_CopybackReconstructedData(RF_Raid_t *);
void rf_ContinueCopyback(RF_CopybackDesc_t *);

#endif	/* !_RF__RF_COPYBACK_H_ */
@


1.3
log
@Major KNF.  Incentive from Tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_copyback.h,v 1.2 1999/02/16 00:02:27 niklas Exp $	*/
@


1.2
log
@Merge from NetBSD, mostly indentation
@
text
@d1 1
a1 1
/*	$OpenBSD: rf_copyback.h,v 1.1 1999/01/11 14:29:03 niklas Exp $	*/
d3 1
d34 2
a35 2
#ifndef _RF__RF_COPYBACK_H_
#define _RF__RF_COPYBACK_H_
d40 15
a54 15
	RF_Raid_t *raidPtr;
	RF_RowCol_t frow;
	RF_RowCol_t fcol;
	RF_RowCol_t spRow;
	RF_RowCol_t spCol;
	int     status;
	RF_StripeNum_t stripeAddr;
	RF_SectorCount_t sectPerSU;
	RF_SectorCount_t sectPerStripe;
	char   *databuf;
	RF_DiskQueueData_t *readreq;
	RF_DiskQueueData_t *writereq;
	struct timeval starttime;
	RF_MCPair_t *mcpair;
}       RF_CopybackDesc_t;
d58 3
a60 3
int     rf_ConfigureCopyback(RF_ShutdownList_t ** listp);
void    rf_CopybackReconstructedData(RF_Raid_t * raidPtr);
void    rf_ContinueCopyback(RF_CopybackDesc_t * desc);
d62 1
a62 1
#endif				/* !_RF__RF_COPYBACK_H_ */
@


1.2.16.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d33 2
a34 2
#ifndef	_RF__RF_COPYBACK_H_
#define	_RF__RF_COPYBACK_H_
d39 15
a53 15
	RF_Raid_t		*raidPtr;
	RF_RowCol_t		 frow;
	RF_RowCol_t		 fcol;
	RF_RowCol_t		 spRow;
	RF_RowCol_t		 spCol;
	int			 status;
	RF_StripeNum_t		 stripeAddr;
	RF_SectorCount_t	 sectPerSU;
	RF_SectorCount_t	 sectPerStripe;
	char			*databuf;
	RF_DiskQueueData_t	*readreq;
	RF_DiskQueueData_t	*writereq;
	struct timeval		 starttime;
	RF_MCPair_t		*mcpair;
} RF_CopybackDesc_t;
d57 3
a59 3
int  rf_ConfigureCopyback(RF_ShutdownList_t **);
void rf_CopybackReconstructedData(RF_Raid_t *);
void rf_ContinueCopyback(RF_CopybackDesc_t *);
d61 1
a61 1
#endif	/* !_RF__RF_COPYBACK_H_ */
@


1.2.6.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 1

d33 2
a34 2
#ifndef	_RF__RF_COPYBACK_H_
#define	_RF__RF_COPYBACK_H_
d39 15
a53 15
	RF_Raid_t		*raidPtr;
	RF_RowCol_t		 frow;
	RF_RowCol_t		 fcol;
	RF_RowCol_t		 spRow;
	RF_RowCol_t		 spCol;
	int			 status;
	RF_StripeNum_t		 stripeAddr;
	RF_SectorCount_t	 sectPerSU;
	RF_SectorCount_t	 sectPerStripe;
	char			*databuf;
	RF_DiskQueueData_t	*readreq;
	RF_DiskQueueData_t	*writereq;
	struct timeval		 starttime;
	RF_MCPair_t		*mcpair;
} RF_CopybackDesc_t;
d57 3
a59 3
int  rf_ConfigureCopyback(RF_ShutdownList_t **);
void rf_CopybackReconstructedData(RF_Raid_t *);
void rf_ContinueCopyback(RF_CopybackDesc_t *);
d61 1
a61 1
#endif	/* !_RF__RF_COPYBACK_H_ */
@


1.1
log
@Import of CMU's RAIDframe via NetBSD.
@
text
@d1 2
a2 2
/*	$OpenBSD: rf_copyback.h,v 1.1 1998/11/13 04:20:27 oster Exp $	*/
/*	$NetBSD: rf_copyback.h,v 1.1 1998/11/13 04:20:27 oster Exp $	*/
a31 25
/*
 * :  
 * Log: rf_copyback.h,v 
 * Revision 1.5  1996/07/11 19:08:00  jimz
 * generalize reconstruction mechanism
 * allow raid1 reconstructs via copyback (done with array
 * quiesced, not online, therefore not disk-directed)
 *
 * Revision 1.4  1996/06/10  11:55:47  jimz
 * Straightened out some per-array/not-per-array distinctions, fixed
 * a couple bugs related to confusion. Added shutdown lists. Removed
 * layout shutdown function (now subsumed by shutdown lists).
 *
 * Revision 1.3  1996/05/24  01:59:45  jimz
 * another checkpoint in code cleanup for release
 * time to sync kernel tree
 *
 * Revision 1.2  1996/05/23  21:46:35  jimz
 * checkpoint in code cleanup (release prep)
 * lots of types, function names have been fixed
 *
 * Revision 1.1  1996/05/18  19:55:02  jimz
 * Initial revision
 *
 */
d39 15
a53 17
  RF_Raid_t           *raidPtr;
  RF_RowCol_t          frow;
  RF_RowCol_t          fcol;
  RF_RowCol_t          spRow;
  RF_RowCol_t          spCol;
  int                  status;
  RF_StripeNum_t       stripeAddr;
  RF_SectorCount_t     sectPerSU;
  RF_SectorCount_t     sectPerStripe;
  char                *databuf;
  RF_DiskQueueData_t  *readreq;
  RF_DiskQueueData_t  *writereq;
  struct timeval       starttime;
#ifndef SIMULATE
  RF_MCPair_t         *mcpair;
#endif /* !SIMULATE */
} RF_CopybackDesc_t;
d57 3
a59 3
int  rf_ConfigureCopyback(RF_ShutdownList_t **listp);
void rf_CopybackReconstructedData(RF_Raid_t *raidPtr);
void rf_ContinueCopyback(RF_CopybackDesc_t *desc);
d61 1
a61 1
#endif /* !_RF__RF_COPYBACK_H_ */
@

