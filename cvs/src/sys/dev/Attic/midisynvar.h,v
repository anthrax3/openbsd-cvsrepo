head	1.4;
access;
symbols
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.8
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.2.0.26
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.24
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.22
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.20
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.18
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.16
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.14
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.12
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.10
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.16
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.14
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.12
	OPENBSD_2_8:1.1.0.10
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.8
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.6
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2010.07.31.08.33.20;	author ratchov;	state dead;
branches;
next	1.3;

1.3
date	2008.06.26.05.42.14;	author ray;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.52;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.01.02.00.02.37;	author niklas;	state Exp;
branches
	1.1.6.1
	1.1.16.1;
next	;

1.1.6.1
date	2002.03.28.12.29.44;	author niklas;	state Exp;
branches;
next	;

1.1.16.1
date	2002.06.11.03.42.15;	author art;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove the ``midisyn'' framework and anything using it, i.e., the opl
device and the midi interface to pcppi.
@
text
@/*	$OpenBSD: midisynvar.h,v 1.3 2008/06/26 05:42:14 ray Exp $	*/
/*	$NetBSD: midisynvar.h,v 1.3 1998/11/25 22:17:07 augustss Exp $	*/

/*
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (augustss@@netbsd.org).
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _SYS_DEV_MIDISYNVAR_H_
#define _SYS_DEV_MIDISYNVAR_H_

typedef struct midisyn midisyn;

struct midisyn_methods {
	int  (*open)(midisyn *, int);
	void (*close)(midisyn *);
	int  (*ioctl)(midisyn *, u_long, caddr_t, int, struct proc *);
	int  (*allocv)(midisyn *, u_int32_t, u_int32_t);
	void (*noteon)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*noteoff)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*keypres)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*ctlchg)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*pgmchg)(midisyn *, u_int32_t, u_int32_t);
	void (*chnpres)(midisyn *, u_int32_t, u_int32_t);
	void (*pitchb)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*sysex)(midisyn *, u_int32_t);
};

struct voice {
	u_int chan_note;	/* channel and note */
#define MS_CHANNOTE(chan, note) ((chan) * 256 + (note))
#define MS_GETCHAN(v) ((v)->chan_note >> 8)
	u_int seqno;		/* allocation index (increases with time) */
	u_char inuse;
};

#define MIDI_MAX_CHANS 16

struct midisyn {
	/* Filled by synth driver */
	struct midisyn_methods *mets;
	char name[32];
	int nvoice;
	int flags;
#define MS_DOALLOC	1
#define MS_FREQXLATE	2
	void *data;

	/* Used by midisyn driver */
	u_int8_t buf[3];
	int pos;
	struct voice *voices;
	u_int seqno;
	u_int16_t pgms[MIDI_MAX_CHANS];
};

#define MS_GETPGM(ms, vno) ((ms)->pgms[MS_GETCHAN(&(ms)->voices[vno])])

struct midi_softc;

extern struct midi_hw_if midisyn_hw_if;

void	midisyn_attach(struct midi_softc *, midisyn *);

#define MIDISYN_FREQ_TO_HZ(f) ((f) >> 16)

#endif /* _SYS_DEV_MIDISYNVAR_H_ */
@


1.3
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: midisynvar.h,v 1.2 2002/03/14 01:26:52 millert Exp $	*/
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: midisynvar.h,v 1.1 1999/01/02 00:02:37 niklas Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.1
log
@Midi & sequencer support from NetBSD, mostly by Lennart Augustsson
@
text
@d1 1
a1 1
/*	$OpenBSD: midisynvar.h,v 1.3 1998/11/25 22:17:07 augustss Exp $	*/
d46 12
a57 12
	int  (*open)	__P((midisyn *, int));
	void (*close)   __P((midisyn *));
	int  (*ioctl)   __P((midisyn *, u_long, caddr_t, int, struct proc *));
	int  (*allocv)  __P((midisyn *, u_int32_t, u_int32_t));
	void (*noteon)  __P((midisyn *, u_int32_t, u_int32_t, u_int32_t));
	void (*noteoff) __P((midisyn *, u_int32_t, u_int32_t, u_int32_t));
	void (*keypres) __P((midisyn *, u_int32_t, u_int32_t, u_int32_t));
	void (*ctlchg)  __P((midisyn *, u_int32_t, u_int32_t, u_int32_t));
	void (*pgmchg)  __P((midisyn *, u_int32_t, u_int32_t));
	void (*chnpres) __P((midisyn *, u_int32_t, u_int32_t));
	void (*pitchb)  __P((midisyn *, u_int32_t, u_int32_t, u_int32_t));
	void (*sysex)   __P((midisyn *, u_int32_t));
d94 1
a94 1
void	midisyn_attach __P((struct midi_softc *, midisyn *));
@


1.1.16.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: midisynvar.h,v 1.1 1999/01/02 00:02:37 niklas Exp $	*/
d46 12
a57 12
	int  (*open)(midisyn *, int);
	void (*close)(midisyn *);
	int  (*ioctl)(midisyn *, u_long, caddr_t, int, struct proc *);
	int  (*allocv)(midisyn *, u_int32_t, u_int32_t);
	void (*noteon)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*noteoff)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*keypres)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*ctlchg)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*pgmchg)(midisyn *, u_int32_t, u_int32_t);
	void (*chnpres)(midisyn *, u_int32_t, u_int32_t);
	void (*pitchb)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*sysex)(midisyn *, u_int32_t);
d94 1
a94 1
void	midisyn_attach(struct midi_softc *, midisyn *);
@


1.1.6.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 12
a57 12
	int  (*open)(midisyn *, int);
	void (*close)(midisyn *);
	int  (*ioctl)(midisyn *, u_long, caddr_t, int, struct proc *);
	int  (*allocv)(midisyn *, u_int32_t, u_int32_t);
	void (*noteon)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*noteoff)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*keypres)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*ctlchg)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*pgmchg)(midisyn *, u_int32_t, u_int32_t);
	void (*chnpres)(midisyn *, u_int32_t, u_int32_t);
	void (*pitchb)(midisyn *, u_int32_t, u_int32_t, u_int32_t);
	void (*sysex)(midisyn *, u_int32_t);
d94 1
a94 1
void	midisyn_attach(struct midi_softc *, midisyn *);
@


