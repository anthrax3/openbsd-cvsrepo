head	1.9;
access;
symbols
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.7.0.24
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.22
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.20
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.18
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.14
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.12
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.10
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.8
	OPENBSD_5_0:1.7.0.6
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.4
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.6.0.6
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.8
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6;
locks; strict;
comment	@ * @;


1.9
date	2016.07.03.20.05.44;	author mglocker;	state dead;
branches;
next	1.8;
commitid	qyd7C1mIQD48GTJ0;

1.8
date	2015.08.29.20.51.46;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	boRODGnkIREslCMf;

1.7
date	2010.07.14.21.24.33;	author jakemsr;	state Exp;
branches;
next	1.6;

1.6
date	2008.07.23.22.10.21;	author mglocker;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.13.05.00.32;	author mglocker;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.09.20.51.31;	author mglocker;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.25.07.47.47;	author mglocker;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.24.19.37.34;	author mglocker;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.09.19.49.55;	author robert;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Move videovar.h in to video.c since it isn't used anywhere else.

Suggested by mpi@@ diff from Patrick Keshishian.

ok mpi
@
text
@/*	$OpenBSD: videovar.h,v 1.8 2015/08/29 20:51:46 deraadt Exp $	*/
/*
 * Copyright (c) 2008 Robert Nagy <robert@@openbsd.org>
 * Copyright (c) 2008 Marcus Glocker <mglocker@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _SYS_DEV_VIDEOVAR_H
#define _SYS_DEV_VIDEOVAR_H

struct video_softc {
	struct device		 dev;
	void			*hw_hdl;	/* hardware driver handle */
	struct device		*sc_dev;	/* hardware device struct */
	struct video_hw_if	*hw_if;		/* hardware interface */
	char			 sc_dying;	/* device detached */
#define VIDEO_OPEN	0x01
	char			 sc_open;

	int			 sc_fsize;
	uint8_t			*sc_fbuffer;
	size_t			 sc_fbufferlen;
	int			 sc_vidmode;	/* access mode */
#define		VIDMODE_NONE	0
#define		VIDMODE_MMAP	1
#define		VIDMODE_READ	2
	int			 sc_frames_ready;

	struct selinfo		 sc_rsel;	/* read selector */
};

#endif /* _SYS_DEV_VIDEOVAR_H */
@


1.8
log
@video sub-drivers will not return EINVAL in size variable.  (Well,
a broken USB driver could, then what happens?)  0 is the right error.
Also, keep track the size for free()
@
text
@d1 1
a1 1
/*	$OpenBSD: videovar.h,v 1.7 2010/07/14 21:24:33 jakemsr Exp $	*/
@


1.7
log
@implement poll() for video(4)
ok mglocker
@
text
@d1 1
a1 1
/*	$OpenBSD: videovar.h,v 1.6 2008/07/23 22:10:21 mglocker Exp $	*/
d33 1
@


1.6
log
@If /dev/video* is already used by an application, return EBUSY to other
applications.  Fixes a kernel panic.

Reported by ian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: videovar.h,v 1.5 2008/06/13 05:00:32 mglocker Exp $	*/
d33 7
a39 1
	int			 sc_start_read;
@


1.5
log
@Add myself to the copyright since i fumbled around in those files, too.

OK robert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: videovar.h,v 1.4 2008/06/09 20:51:31 mglocker Exp $	*/
d28 2
@


1.4
log
@Let the driver switch between read() and mmap() depending on what
the userland application wants.

OK robert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: videovar.h,v 1.3 2008/05/25 07:47:47 mglocker Exp $	*/
d4 1
@


1.3
log
@Spacing.  Comments.  strncpy() -> strlcpy().
@
text
@d1 1
a1 1
/*	$OpenBSD: videovar.h,v 1.2 2008/05/24 19:37:34 mglocker Exp $	*/
d30 1
@


1.2
log
@- Enable userland to read(2) video stream from /dev/video.
- Prepare for mmap(2).
@
text
@d1 1
a1 1
/*	$OpenBSD: videovar.h,v 1.1 2008/04/09 19:49:55 robert Exp $	*/
d22 5
a26 5
	struct device	dev;
	void		*hw_hdl;	/* hardware driver handle */
	struct device	*sc_dev;	/* hardware device struct */
	struct video_hw_if *hw_if;	/* hardware interface */
	char		sc_dying;	/* device detached */
d28 2
a29 2
	int		 sc_fsize;
	uint8_t		*sc_fbuffer;
@


1.1
log
@Initial import for uvideo(4) and video(4):

uvideo(4) is a driver for USB video device class devices including webcams,
camcorders and other cameras.

video(4) is a device-independent layer that implements the V4L2 (Video for Linux Two)
API.

These drivers are *really* work in progress so don't even try to use them just yet,
because the driver still has some issues, even if it can be used to capture simple
MJPEG videos.

ok mglocker@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d27 3
@

