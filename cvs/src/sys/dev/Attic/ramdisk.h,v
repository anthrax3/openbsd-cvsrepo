head	1.6;
access;
symbols
	OPENBSD_4_9:1.5.0.38
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.36
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.32
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.34
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.30
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.28
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.26
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.24
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.22
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.20
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.18
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.16
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.26
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.24
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.22
	OPENBSD_2_8:1.4.0.20
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.18
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.16
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.14
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.12
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.10
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2011.06.23.17.09.01;	author matthew;	state dead;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.52;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.04.21.22.19.56;	author deraadt;	state Exp;
branches
	1.4.16.1
	1.4.26.1;
next	1.3;

1.3
date	96.04.18.23.47.04;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.06.19.25;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.29;	author deraadt;	state Exp;
branches;
next	;

1.4.16.1
date	2002.03.28.15.03.52;	author niklas;	state Exp;
branches;
next	;

1.4.26.1
date	2002.06.11.03.42.15;	author art;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Eliminate ramdisk.c and ramdisk.h now that they're unused.
@
text
@/*	$OpenBSD: ramdisk.h,v 1.5 2002/03/14 01:26:52 millert Exp $	*/
/*	$NetBSD: ramdisk.h,v 1.4 1996/03/22 23:02:04 gwr Exp $	*/

/*
 * Copyright (c) 1995 Gordon W. Ross
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 4. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Gordon W. Ross
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * RAM-disk ioctl functions:
 */

#include <sys/ioccom.h>

struct rd_conf {
	caddr_t rd_addr;
	size_t  rd_size;
	int     rd_type;
};

#define RD_GETCONF	_IOR('r', 0, struct rd_conf)	/* get unit config */
#define RD_SETCONF	_IOW('r', 1, struct rd_conf)	/* set unit config */

/*
 * There are three configurations supported for each unit,
 * reflected in the value of the rd_type field:
 */
#define RD_UNCONFIGURED 0
/*
 *     Not yet configured.  Open returns ENXIO.
 */
#define RD_KMEM_FIXED	1
/*
 *     Disk image resident in kernel (patched in or loaded).
 *     Requires that the function: rd_set_kmem() is called to
 *     attach the (initialized) kernel memory to be used by the
 *     device.  It can be initialized by an "open hook" if this
 *     driver is compiled with the RD_OPEN_HOOK option.
 *     No attempt will ever be made to free this memory.
 */
#define RD_KMEM_ALLOCATED 2
/*
 *     Small, wired-down chunk of kernel memory obtained from
 *     kmem_alloc().  The allocation is performed by an ioctl
 *     call on the "control" unit (regular unit + 16)
 */
#define RD_UMEM_SERVER 3
/*
 *     Indirect access to user-space of a user-level server.
 *     (Like the MFS hack, but better! 8^)  Device operates
 *     only while the server has the control device open and
 *     continues to service I/O requests.  The process that
 *     does this setconf will become the I/O server.  This
 *     configuration type can be disabled using:
 *         option  RAMDISK_SERVER=0
 */

#ifdef	_KERNEL
/*
 * If the option RAMDISK_HOOKS is on, then these functions are
 * called by the ramdisk driver to allow machine-dependent to
 * match/configure and/or load each ramdisk unit.
 */
extern void rd_attach_hook(int unit, struct rd_conf *);
extern void rd_open_hook(int unit, struct rd_conf *);
#endif
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ramdisk.h,v 1.4 1996/04/21 22:19:56 deraadt Exp $	*/
@


1.4
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: ramdisk.h,v 1.3 1996/04/18 23:47:04 niklas Exp $	*/
d89 2
a90 2
extern void rd_attach_hook __P((int unit, struct rd_conf *));
extern void rd_open_hook   __P((int unit, struct rd_conf *));
@


1.4.26.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ramdisk.h,v 1.4 1996/04/21 22:19:56 deraadt Exp $	*/
d89 2
a90 2
extern void rd_attach_hook(int unit, struct rd_conf *);
extern void rd_open_hook(int unit, struct rd_conf *);
@


1.4.16.1
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d89 2
a90 2
extern void rd_attach_hook(int unit, struct rd_conf *);
extern void rd_open_hook(int unit, struct rd_conf *);
@


1.3
log
@NetBSD 960317 merge
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: ramdisk.h,v 1.3 1996/03/07 10:26:31 leo Exp $	*/
a88 1
extern int  rd_match_hook  __P((struct device *, void *, void *));
@


1.2
log
@from netbsd; add copyright notice
@
text
@d1 2
a2 1
/*	$NetBSD: ramdisk.h,v 1.2 1995/10/26 15:46:24 gwr Exp $	*/
d87 1
a87 1
 * configure and/or load each ramdisk unit.
d89 1
@


1.1
log
@Initial revision
@
text
@d1 31
d61 1
a61 1
 *     device.  This can be called by an "open hook" if this
d63 1
a63 1
 *     No attempt will be made to free this memory.
d77 3
a79 3
 *     does this setconf will become the I/O server. 
 *     Support for this configuration type is optional:
 *         option  RAMDISK_SERVER
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
