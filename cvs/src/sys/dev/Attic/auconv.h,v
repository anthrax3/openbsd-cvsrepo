head	1.9;
access;
symbols
	OPENBSD_5_7:1.8.0.30
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.28
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.26
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.22
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.20
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.18
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.16
	OPENBSD_5_0:1.8.0.14
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.12
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.10
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.6
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.8
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.4
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.2
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.6.0.22
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.20
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.18
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.16
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.14
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.12
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.10
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.6
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.12
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.10
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.05.11.06.46.21;	author ratchov;	state dead;
branches;
next	1.8;
commitid	RaOGL5SyOGOZylwx;

1.8
date	2008.06.26.05.42.14;	author ray;	state Exp;
branches;
next	1.7;

1.7
date	2007.10.23.19.54.36;	author jakemsr;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.06.02.34.57;	author nate;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.51;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.31.04.14.00;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.01.01.49.48;	author aaron;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2000.07.20.21.44.34;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	97.10.07.14.07.46;	author niklas;	state Exp;
branches
	1.1.12.1;
next	;

1.1.12.1
date	2001.05.14.22.22.59;	author niklas;	state Exp;
branches;
next	1.1.12.2;

1.1.12.2
date	2001.07.04.10.40.09;	author niklas;	state Exp;
branches;
next	1.1.12.3;

1.1.12.3
date	2002.03.06.02.11.42;	author niklas;	state Exp;
branches;
next	1.1.12.4;

1.1.12.4
date	2002.03.28.12.29.44;	author niklas;	state Exp;
branches;
next	1.1.12.5;

1.1.12.5
date	2003.03.28.00.38.09;	author niklas;	state Exp;
branches;
next	;

1.3.4.1
date	2002.01.31.22.55.29;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.06.11.03.42.15;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Remove all audio format conversion code from the kernel (btw holding
the kernel_lock), as we already do better conversions in
user-mode. Yet, no need for every single driver to fiddle with the
conversion code as they are done transparently by common MI code. With
help from armani and miod, support from mpi

ok armani@@
@
text
@/*	$OpenBSD: auconv.h,v 1.8 2008/06/26 05:42:14 ray Exp $ */
/*	$NetBSD: auconv.h,v 1.5 1999/11/01 18:12:19 augustss Exp $	*/

/*-
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/* Convert between signed and unsigned. */
extern void change_sign8(void *, u_char *, int);
extern void change_sign16_le(void *, u_char *, int);
extern void change_sign16_be(void *, u_char *, int);
/* Convert between little and big endian. */
extern void swap_bytes(void *, u_char *, int);
extern void swap_bytes_change_sign16_le(void *, u_char *, int);
extern void swap_bytes_change_sign16_be(void *, u_char *, int);
extern void change_sign16_swap_bytes_le(void *, u_char *, int);
extern void change_sign16_swap_bytes_be(void *, u_char *, int);
/* Byte expansion/contraction */
extern void linear8_to_linear16_le(void *, u_char *, int);
extern void linear8_to_linear16_be(void *, u_char *, int);
extern void linear16_to_linear8_le(void *, u_char *, int);
extern void linear16_to_linear8_be(void *, u_char *, int);
/* Byte expansion/contraction with sign change */
extern void ulinear8_to_linear16_le(void *, u_char *, int);
extern void ulinear8_to_linear16_be(void *, u_char *, int);
extern void linear16_to_ulinear8_le(void *, u_char *, int);
extern void linear16_to_ulinear8_be(void *, u_char *, int);

/* same as above, plus converting mono to stereo */
extern void noswap_bytes_mts(void *, u_char *, int);
extern void swap_bytes_mts(void *, u_char *, int);
extern void linear8_to_linear16_le_mts(void *, u_char *, int);
extern void linear8_to_linear16_be_mts(void *, u_char *, int);
extern void ulinear8_to_linear16_le_mts(void *, u_char *, int);
extern void ulinear8_to_linear16_be_mts(void *, u_char *, int);
extern void change_sign16_le_mts(void *, u_char *, int);
extern void change_sign16_be_mts(void *, u_char *, int);
extern void change_sign16_swap_bytes_le_mts(void *, u_char *, int);
extern void change_sign16_swap_bytes_be_mts(void *, u_char *, int);
void swap_bytes_change_sign16_le_mts(void *, u_char *, int);
void swap_bytes_change_sign16_be_mts(void *, u_char *, int);

/* 16-bit signed linear stereo to mono.  drops every other sample */
void linear16_decimator(void *, u_char *, int);
void linear16_to_linear8_le_stm(void *, u_char *, int);
void linear16_to_linear8_be_stm(void *, u_char *, int);
void linear16_to_ulinear8_le_stm(void *, u_char *, int);
void linear16_to_ulinear8_be_stm(void *, u_char *, int);
void change_sign16_le_stm(void *, u_char *, int);
void change_sign16_be_stm(void *, u_char *, int);
void swap_bytes_stm(void *, u_char *, int);
void swap_bytes_change_sign16_be_stm(void *, u_char *, int);
void change_sign16_swap_bytes_le_stm(void *, u_char *, int);

/* backwards compat for now */
#if BYTE_ORDER == LITTLE_ENDIAN
#define change_sign16 change_sign16_le
#define change_sign16_swap_bytes swap_bytes_change_sign16_le
#define swap_bytes_change_sign16 swap_bytes_change_sign16_le
#define linear8_to_linear16 linear8_to_linear16_le
#define ulinear8_to_linear16 ulinear8_to_linear16_le
#define linear8_to_linear16_mts linear8_to_linear16_le_mts
#define ulinear8_to_linear16_mts ulinear8_to_linear16_le_mts
#define change_sign16_mts change_sign16_le_mts
#define change_sign16_swap_bytes_mts change_sign16_swap_bytes_le_mts
#else
#define change_sign16 change_sign16_be
#define change_sign16_swap_bytes swap_bytes_change_sign16_be
#define swap_bytes_change_sign16 swap_bytes_change_sign16_be
#define linear8_to_linear16 linear8_to_linear16_be
#define ulinear8_to_linear16 ulinear8_to_linear16_be
#define linear8_to_linear16_mts linear8_to_linear16_be_mts
#define ulinear8_to_linear16_mts ulinear8_to_linear16_be_mts
#define change_sign16_mts change_sign16_be_mts
#define change_sign16_swap_bytes_mts change_sign16_swap_bytes_be_mts
#endif
@


1.8
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: auconv.h,v 1.7 2007/10/23 19:54:36 jakemsr Exp $ */
@


1.7
log
@- add a couple more mono-to-stereo conversions
- add stereo-to-mono conversions for mono recording
  on stereo only devices
@
text
@d1 1
a1 1
/*	$OpenBSD: auconv.h,v 1.6 2002/05/06 02:34:57 nate Exp $ */
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.6
log
@new conversion functions from NetBSD for uaudio
@
text
@d1 1
a1 1
/*	$OpenBSD: auconv.h,v 1.5 2002/03/14 01:26:51 millert Exp $ */
d72 14
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: auconv.h,v 1.4 2001/12/31 04:14:00 mickey Exp $ */
d55 1
d58 3
@


1.4
log
@add a mono-to-stereo versions; from Kazuhiko Fukuhara <zaa83571@@oak.zero.ad.jp>
@
text
@d1 1
a1 1
/*	$OpenBSD: auconv.h,v 1.3 2001/05/01 01:49:48 aaron Exp $ */
d41 3
a43 3
extern void change_sign8 __P((void *, u_char *, int));
extern void change_sign16_le __P((void *, u_char *, int));
extern void change_sign16_be __P((void *, u_char *, int));
d45 5
a49 5
extern void swap_bytes __P((void *, u_char *, int));
extern void swap_bytes_change_sign16_le __P((void *, u_char *, int));
extern void swap_bytes_change_sign16_be __P((void *, u_char *, int));
extern void change_sign16_swap_bytes_le __P((void *, u_char *, int));
extern void change_sign16_swap_bytes_be __P((void *, u_char *, int));
d51 6
a56 6
extern void linear8_to_linear16_le __P((void *, u_char *, int));
extern void linear8_to_linear16_be __P((void *, u_char *, int));
extern void linear16_to_linear8_le __P((void *, u_char *, int));
extern void linear16_to_linear8_be __P((void *, u_char *, int));
extern void ulinear8_to_linear16_le __P((void *, u_char *, int));
extern void ulinear8_to_linear16_be __P((void *, u_char *, int));
d58 10
a67 10
extern void noswap_bytes_mts __P((void *, u_char *, int));
extern void swap_bytes_mts __P((void *, u_char *, int));
extern void linear8_to_linear16_le_mts __P((void *, u_char *, int));
extern void linear8_to_linear16_be_mts __P((void *, u_char *, int));
extern void ulinear8_to_linear16_le_mts __P((void *, u_char *, int));
extern void ulinear8_to_linear16_be_mts __P((void *, u_char *, int));
extern void change_sign16_le_mts __P((void *, u_char *, int));
extern void change_sign16_be_mts __P((void *, u_char *, int));
extern void change_sign16_swap_bytes_le_mts __P((void *, u_char *, int));
extern void change_sign16_swap_bytes_be_mts __P((void *, u_char *, int));
@


1.3
log
@Add $OpenBSD$ tags.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d55 13
d75 5
d85 5
@


1.3.4.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: auconv.h,v 1.4 2001/12/31 04:14:00 mickey Exp $ */
a54 13
extern void ulinear8_to_linear16_le __P((void *, u_char *, int));
extern void ulinear8_to_linear16_be __P((void *, u_char *, int));
/* same as above, plus converting mono to stereo */
extern void noswap_bytes_mts __P((void *, u_char *, int));
extern void swap_bytes_mts __P((void *, u_char *, int));
extern void linear8_to_linear16_le_mts __P((void *, u_char *, int));
extern void linear8_to_linear16_be_mts __P((void *, u_char *, int));
extern void ulinear8_to_linear16_le_mts __P((void *, u_char *, int));
extern void ulinear8_to_linear16_be_mts __P((void *, u_char *, int));
extern void change_sign16_le_mts __P((void *, u_char *, int));
extern void change_sign16_be_mts __P((void *, u_char *, int));
extern void change_sign16_swap_bytes_le_mts __P((void *, u_char *, int));
extern void change_sign16_swap_bytes_be_mts __P((void *, u_char *, int));
a61 5
#define ulinear8_to_linear16 ulinear8_to_linear16_le
#define linear8_to_linear16_mts linear8_to_linear16_le_mts
#define ulinear8_to_linear16_mts ulinear8_to_linear16_le_mts
#define change_sign16_mts change_sign16_le_mts
#define change_sign16_swap_bytes_mts change_sign16_swap_bytes_le_mts
a66 5
#define ulinear8_to_linear16 ulinear8_to_linear16_be
#define linear8_to_linear16_mts linear8_to_linear16_be_mts
#define ulinear8_to_linear16_mts ulinear8_to_linear16_be_mts
#define change_sign16_mts change_sign16_be_mts
#define change_sign16_swap_bytes_mts change_sign16_swap_bytes_be_mts
@


1.3.4.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: auconv.h,v 1.3.4.1 2002/01/31 22:55:29 niklas Exp $ */
d41 3
a43 3
extern void change_sign8(void *, u_char *, int);
extern void change_sign16_le(void *, u_char *, int);
extern void change_sign16_be(void *, u_char *, int);
d45 5
a49 5
extern void swap_bytes(void *, u_char *, int);
extern void swap_bytes_change_sign16_le(void *, u_char *, int);
extern void swap_bytes_change_sign16_be(void *, u_char *, int);
extern void change_sign16_swap_bytes_le(void *, u_char *, int);
extern void change_sign16_swap_bytes_be(void *, u_char *, int);
d51 6
a56 10
extern void linear8_to_linear16_le(void *, u_char *, int);
extern void linear8_to_linear16_be(void *, u_char *, int);
extern void linear16_to_linear8_le(void *, u_char *, int);
extern void linear16_to_linear8_be(void *, u_char *, int);
/* Byte expansion/contraction with sign change */
extern void ulinear8_to_linear16_le(void *, u_char *, int);
extern void ulinear8_to_linear16_be(void *, u_char *, int);
extern void linear16_to_ulinear8_le(void *, u_char *, int);
extern void linear16_to_ulinear8_be(void *, u_char *, int);

d58 10
a67 10
extern void noswap_bytes_mts(void *, u_char *, int);
extern void swap_bytes_mts(void *, u_char *, int);
extern void linear8_to_linear16_le_mts(void *, u_char *, int);
extern void linear8_to_linear16_be_mts(void *, u_char *, int);
extern void ulinear8_to_linear16_le_mts(void *, u_char *, int);
extern void ulinear8_to_linear16_be_mts(void *, u_char *, int);
extern void change_sign16_le_mts(void *, u_char *, int);
extern void change_sign16_be_mts(void *, u_char *, int);
extern void change_sign16_swap_bytes_le_mts(void *, u_char *, int);
extern void change_sign16_swap_bytes_be_mts(void *, u_char *, int);
@


1.2
log
@extend with new netbsd api, and add backwards compat hacks for drivers
@
text
@d1 1
@


1.1
log
@From NetBSD: Simple conversions of audio streams, for use with the newer
MI audio subsystem (actually one of two :-) ) coming after 2.2
@
text
@d1 1
a1 2
/*	$OpenBSD: auconv.h,v 1.2 1997/08/24 22:20:25 augustss Exp $	*/
/*	$NetBSD: auconv.h,v 1.2 1997/08/24 22:20:25 augustss Exp $	*/
d4 1
a4 1
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
d7 3
d29 2
a30 2
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
d41 2
a42 1
extern void change_sign16 __P((void *, u_char *, int));
d45 4
a48 2
extern void swap_bytes_change_sign16 __P((void *, u_char *, int));
extern void change_sign16_swap_bytes __P((void *, u_char *, int));
d50 17
a66 2
extern void linear8_to_linear16 __P((void *, u_char *, int));
extern void linear16_to_linear8 __P((void *, u_char *, int));
@


1.1.12.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 1
/*	$NetBSD: auconv.h,v 1.5 1999/11/01 18:12:19 augustss Exp $	*/
d5 1
a5 1
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
a7 3
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson.
 *
d27 2
a28 2
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
d39 1
a39 2
extern void change_sign16_le __P((void *, u_char *, int));
extern void change_sign16_be __P((void *, u_char *, int));
d42 2
a43 4
extern void swap_bytes_change_sign16_le __P((void *, u_char *, int));
extern void swap_bytes_change_sign16_be __P((void *, u_char *, int));
extern void change_sign16_swap_bytes_le __P((void *, u_char *, int));
extern void change_sign16_swap_bytes_be __P((void *, u_char *, int));
d45 2
a46 17
extern void linear8_to_linear16_le __P((void *, u_char *, int));
extern void linear8_to_linear16_be __P((void *, u_char *, int));
extern void linear16_to_linear8_le __P((void *, u_char *, int));
extern void linear16_to_linear8_be __P((void *, u_char *, int));

/* backwards compat for now */
#if BYTE_ORDER == LITTLE_ENDIAN
#define change_sign16 change_sign16_le
#define change_sign16_swap_bytes swap_bytes_change_sign16_le
#define swap_bytes_change_sign16 swap_bytes_change_sign16_le
#define linear8_to_linear16 linear8_to_linear16_le
#else
#define change_sign16 change_sign16_be
#define change_sign16_swap_bytes swap_bytes_change_sign16_be
#define swap_bytes_change_sign16 swap_bytes_change_sign16_be
#define linear8_to_linear16 linear8_to_linear16_be
#endif
@


1.1.12.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@a0 1
/*	$OpenBSD$ */
@


1.1.12.3
log
@Merge in trunk
@
text
@a54 13
extern void ulinear8_to_linear16_le __P((void *, u_char *, int));
extern void ulinear8_to_linear16_be __P((void *, u_char *, int));
/* same as above, plus converting mono to stereo */
extern void noswap_bytes_mts __P((void *, u_char *, int));
extern void swap_bytes_mts __P((void *, u_char *, int));
extern void linear8_to_linear16_le_mts __P((void *, u_char *, int));
extern void linear8_to_linear16_be_mts __P((void *, u_char *, int));
extern void ulinear8_to_linear16_le_mts __P((void *, u_char *, int));
extern void ulinear8_to_linear16_be_mts __P((void *, u_char *, int));
extern void change_sign16_le_mts __P((void *, u_char *, int));
extern void change_sign16_be_mts __P((void *, u_char *, int));
extern void change_sign16_swap_bytes_le_mts __P((void *, u_char *, int));
extern void change_sign16_swap_bytes_be_mts __P((void *, u_char *, int));
a61 5
#define ulinear8_to_linear16 ulinear8_to_linear16_le
#define linear8_to_linear16_mts linear8_to_linear16_le_mts
#define ulinear8_to_linear16_mts ulinear8_to_linear16_le_mts
#define change_sign16_mts change_sign16_le_mts
#define change_sign16_swap_bytes_mts change_sign16_swap_bytes_le_mts
a66 5
#define ulinear8_to_linear16 ulinear8_to_linear16_be
#define linear8_to_linear16_mts linear8_to_linear16_be_mts
#define ulinear8_to_linear16_mts ulinear8_to_linear16_be_mts
#define change_sign16_mts change_sign16_be_mts
#define change_sign16_swap_bytes_mts change_sign16_swap_bytes_be_mts
@


1.1.12.4
log
@Merge in -current from about a week ago
@
text
@d41 3
a43 3
extern void change_sign8(void *, u_char *, int);
extern void change_sign16_le(void *, u_char *, int);
extern void change_sign16_be(void *, u_char *, int);
d45 5
a49 5
extern void swap_bytes(void *, u_char *, int);
extern void swap_bytes_change_sign16_le(void *, u_char *, int);
extern void swap_bytes_change_sign16_be(void *, u_char *, int);
extern void change_sign16_swap_bytes_le(void *, u_char *, int);
extern void change_sign16_swap_bytes_be(void *, u_char *, int);
d51 6
a56 6
extern void linear8_to_linear16_le(void *, u_char *, int);
extern void linear8_to_linear16_be(void *, u_char *, int);
extern void linear16_to_linear8_le(void *, u_char *, int);
extern void linear16_to_linear8_be(void *, u_char *, int);
extern void ulinear8_to_linear16_le(void *, u_char *, int);
extern void ulinear8_to_linear16_be(void *, u_char *, int);
d58 10
a67 10
extern void noswap_bytes_mts(void *, u_char *, int);
extern void swap_bytes_mts(void *, u_char *, int);
extern void linear8_to_linear16_le_mts(void *, u_char *, int);
extern void linear8_to_linear16_be_mts(void *, u_char *, int);
extern void ulinear8_to_linear16_le_mts(void *, u_char *, int);
extern void ulinear8_to_linear16_be_mts(void *, u_char *, int);
extern void change_sign16_le_mts(void *, u_char *, int);
extern void change_sign16_be_mts(void *, u_char *, int);
extern void change_sign16_swap_bytes_le_mts(void *, u_char *, int);
extern void change_sign16_swap_bytes_be_mts(void *, u_char *, int);
@


1.1.12.5
log
@Sync the SMP branch with 3.3
@
text
@a54 1
/* Byte expansion/contraction with sign change */
a56 3
extern void linear16_to_ulinear8_le(void *, u_char *, int);
extern void linear16_to_ulinear8_be(void *, u_char *, int);

@


