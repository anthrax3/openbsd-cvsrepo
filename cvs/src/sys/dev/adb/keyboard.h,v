head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.24
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.22
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.12
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.20
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.18
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.16
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.14
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.20
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.18
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.14
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.16
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.12
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.10
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.8
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.6
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3;
locks; strict;
comment	@ * @;


1.5
date	2011.06.13.16.29.11;	author shadchin;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.10.20.13.50;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.12.21.49.08;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.12.18.06.24;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.18.23.21.17;	author miod;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Not need define KEYBOARD_ARRAY (keyboard array used only in dev/adb/akbd.c
if defined WSDISPLAY_COMPAT_RAWKBD). Move keyboard array from dev/adb/keyboard.h
to dev/adb/akbdmap.h.

ok miod@@
@
text
@/*	$OpenBSD: keyboard.h,v 1.4 2006/03/10 20:13:50 miod Exp $	*/
/*	$NetBSD: keyboard.h,v 1.1 1998/05/15 10:15:54 tsubai Exp $	*/

/*-
 * Copyright (C) 1993	Allen K. Briggs, Chris P. Caputo,
 *			Michael L. Finch, Bradley A. Grantham, and
 *			Lawrence A. Kesteloot
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the Alice Group.
 * 4. The names of the Alice Group or any of its members may not be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE ALICE GROUP ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE ALICE GROUP BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#define ADBK_CAPSLOCK	0x39
#define	ADBK_RESET	0x7f

#define ADBK_KEYVAL(key)	((key) & 0x7f)
#define ADBK_PRESS(key)		(((key) & 0x80) == 0)
#define ADBK_KEYDOWN(key)	(key)
#define ADBK_KEYUP(key)		((key) | 0x80)
@


1.4
log
@Switch to RAWKEY_xxx constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.3 2006/02/12 21:49:08 miod Exp $	*/
a43 144

#ifndef KEYBOARD_ARRAY
extern unsigned char keyboard[128];
#else
#include <dev/wscons/wskbdraw.h>
unsigned char keyboard[128] = {
	RAWKEY_a,
	RAWKEY_s,
	RAWKEY_d,
	RAWKEY_f,
	RAWKEY_h,
	RAWKEY_g,
	RAWKEY_z,
	RAWKEY_x,
	RAWKEY_c,
	RAWKEY_v,
#ifdef FIX_SV_X_KBDBUG
	RAWKEY_grave,
#else
	RAWKEY_less,
#endif
	RAWKEY_b,
	RAWKEY_q,
	RAWKEY_w,
	RAWKEY_e,
	RAWKEY_r,
	RAWKEY_y,
	RAWKEY_t,
	RAWKEY_1,
	RAWKEY_2,
	RAWKEY_3,
	RAWKEY_4,
	RAWKEY_6,
	RAWKEY_5,
	RAWKEY_equal,
	RAWKEY_9,
	RAWKEY_7,
	RAWKEY_minus,
	RAWKEY_8,
	RAWKEY_0,
	RAWKEY_bracketright,
	RAWKEY_o,
	RAWKEY_u,
	RAWKEY_bracketleft,
	RAWKEY_i,
	RAWKEY_p,
	RAWKEY_Return,
	RAWKEY_l,
	RAWKEY_j,
	RAWKEY_apostrophe,
	RAWKEY_k,
	RAWKEY_semicolon,
	RAWKEY_backslash,
	RAWKEY_comma,
	RAWKEY_slash,
	RAWKEY_n,
	RAWKEY_m,
	RAWKEY_period,
	RAWKEY_Tab,
	RAWKEY_space,
#ifdef FIX_SV_X_KBDBUG
	RAWKEY_less,
#else
	RAWKEY_grave,
#endif
	RAWKEY_Delete,
	RAWKEY_KP_Enter,
	RAWKEY_Escape,
	RAWKEY_Control_L,
	219,			/* XXX */
	RAWKEY_Shift_L,
	RAWKEY_Caps_Lock,
	RAWKEY_Alt_L,
	RAWKEY_Left,
	RAWKEY_Right,
	RAWKEY_Down,
	RAWKEY_Up,
	0, /* Fn */
	0,
	RAWKEY_KP_Delete,
	0,
	RAWKEY_KP_Multiply,
	0,
	RAWKEY_KP_Add,
	0,
	RAWKEY_Num_Lock,
	0,
	0,
	0,
	RAWKEY_KP_Divide,
	RAWKEY_KP_Enter,
	0,
	RAWKEY_KP_Subtract,
	0,
	0,
	RAWKEY_KP_Equal,
	RAWKEY_KP_Insert,
	RAWKEY_KP_End,
	RAWKEY_KP_Down,
	RAWKEY_KP_Next,
	RAWKEY_KP_Left,
	RAWKEY_KP_Begin,
	RAWKEY_KP_Right,
	RAWKEY_KP_Home,
	0,
	RAWKEY_KP_Up,
	RAWKEY_KP_Prior,
	0,
	0,
	RAWKEY_KP_Delete,
	RAWKEY_f5,
	RAWKEY_f6,
	RAWKEY_f7,
	RAWKEY_f3,
	RAWKEY_f8,
	RAWKEY_f9,
	0,
	RAWKEY_f11,
	0,
	RAWKEY_Print_Screen,
	RAWKEY_KP_Enter,
	RAWKEY_Hold_Screen,
	0,
	RAWKEY_f10,
	0,
	RAWKEY_f12,
	0,
	RAWKEY_Pause,
	RAWKEY_Insert,
	RAWKEY_Home,
	RAWKEY_Prior,
	RAWKEY_Delete,
	RAWKEY_f4,
	RAWKEY_End,
	RAWKEY_f2,
	RAWKEY_Next,
	RAWKEY_f1,
	0,
	0,
	0,
	0,
	0
};
#endif /* KEYBOARD_ARRAY */
@


1.3
log
@Remove unused columns from the keyboard[] array. No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.2 2006/02/12 18:06:24 miod Exp $	*/
a43 4
#define ADBK_MODIFIER(key)	((((key) & 0x7f) == ADBK_SHIFT) || \
				 (((key) & 0x7f) == ADBK_CONTROL) || \
				 (((key) & 0x7f) == ADBK_FLOWER) || \
				 (((key) & 0x7f) == ADBK_OPTION))
d48 1
d50 10
a59 10
	 30,
	 31,
	 32,
	 33,
	 35,
	 34,
	 44,
	 45,
	 46,
	 47,
d61 1
a61 1
	 41,
d63 1
a63 1
	 86,
d65 39
a103 39
	 48,
	 16,
	 17,
	 18,
	 19,
	 21,
	 20,
	  2,
	  3,
	  4,
	  5,
	  7,
	  6,
	 13,
	 10,
	  8,
	 12,
	  9,
	 11,
	 27,
	 24,
	 22,
	 26,
	 23,
	 25,
	 28,
	 38,
	 36,
	 40,
	 37,
	 39,
	 43,
	 51,
	 53,
	 49,
	 50,
	 52,
	 15,
	 57,
d105 1
a105 1
	 86,
d107 1
a107 1
	 41,
d109 77
a185 77
	211, /* Delete */
	105, /* MODE/KP_Enter */
	  1,
	 29,
	219,
	 42,
	 58,
	 56, /* L Alt */
	203,  /* Left */
	205,  /* Right */
	208,  /* Down */
	200,  /* Up */
	  0, /* Fn */
	  0,
	 83,
	  0,
	 55,
	  0,
	 78,
	  0,
	 69,
	  0,
	  0,
	  0,
	181,
	156,
	  0,
	 74,
	  0,
	  0,
	118,
	 82,
	 79,
	 80,
	 81,
	 75,
	 76,
	 77,
	 71,
	  0,
	 72,
	 73,
	  0,
	  0,
	 51,
	 63, /* F5 */
	 64, /* F6 */
	 65, /* F7 */
	 61, /* F3 */
	 66, /* F8 */
	 67, /* F9 */
	  0,
	 87, /* F11 */
	  0,
	  0,
	156,
	  0,
	  0,
	 68, /* F10 */
	  0,
	 88, /* F12 */
	  0,
	  0,
	  0,
	199,
	201,
	  0,
	 62, /* F4 */
	207,
	 60, /* F2 */
	209,
	 59, /* F1 */
	  0,
	  0,
	  0,
	  0,
	  0 /* pwr */
@


1.2
log
@Clean up the adb_event structure, now that it is never exported to userland;
also fix handling of caps lock and power keys in akbd; with help from claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.1 2006/01/18 23:21:17 miod Exp $	*/
d50 1
a50 1
extern unsigned char keyboard[128][4];
d52 11
a62 12
unsigned char keyboard[128][4] = {
	  /* Scan code      Normal     Shifted     Controlled   XT */
	{ /*   0x00, */       'a',       'A',         0x01,	 30 },
	{ /*   0x01, */       's',       'S',         0x13,	 31 },
	{ /*   0x02, */       'd',       'D',         0x04,	 32 },
	{ /*   0x03, */       'f',       'F',         0x06,	 33 },
	{ /*   0x04, */       'h',       'H',         0x08,	 35 },
	{ /*   0x05, */       'g',       'G',         0x07,	 34 },
	{ /*   0x06, */       'z',       'Z',         0x1A,	 44 },
	{ /*   0x07, */       'x',       'X',         0x18,	 45 },
	{ /*   0x08, */       'c',       'C',         0x03,	 46 },
	{ /*   0x09, */       'v',       'V',         0x16,	 47 },
d64 1
a64 1
	{ /*   0x0A, */      0x00,      0x00,         0x00,	 41 },
d66 1
a66 1
	{ /*   0x0A, */      0x00,      0x00,         0x00,	 86 },
d68 39
a106 39
	{ /*   0x0B, */       'b',       'B',         0x02,	 48 },
	{ /*   0x0C, */       'q',       'Q',         0x11,	 16 },
	{ /*   0x0D, */       'w',       'W',         0x17,	 17 },
	{ /*   0x0E, */       'e',       'E',         0x05,	 18 },
	{ /*   0x0F, */       'r',       'R',         0x12,	 19 },
	{ /*   0x10, */       'y',       'Y',         0x19,	 21 },
	{ /*   0x11, */       't',       'T',         0x14,	 20 },
	{ /*   0x12, */       '1',       '!',         0x00,	  2 },
	{ /*   0x13, */       '2',       '@@',         0x00,	  3 },
	{ /*   0x14, */       '3',       '#',         0x00,	  4 },
	{ /*   0x15, */       '4',       '$',         0x00,	  5 },
	{ /*   0x16, */       '6',       '^',         0x1E,	  7 },
	{ /*   0x17, */       '5',       '%',         0x00,	  6 },
	{ /*   0x18, */       '=',       '+',         0x00,	 13 },
	{ /*   0x19, */       '9',       '(',         0x00,	 10 },
	{ /*   0x1A, */       '7',       '&',         0x00,	  8 },
	{ /*   0x1B, */       '-',       '_',         0x1F,	 12 },
	{ /*   0x1C, */       '8',       '*',         0x00,	  9 },
	{ /*   0x1D, */       '0',       ')',         0x00,	 11 },
	{ /*   0x1E, */       ']',       '}',         0x1D,	 27 },
	{ /*   0x1F, */       'o',       'O',         0x0F,	 24 },
	{ /*   0x20, */       'u',       'U',         0x15,	 22 },
	{ /*   0x21, */       '[',       '{',         0x1B,	 26 },
	{ /*   0x22, */       'i',       'I',         0x09,	 23 },
	{ /*   0x23, */       'p',       'P',         0x10,	 25 },
	{ /*   0x24, */      0x0D,      0x0D,         0x0D,	 28 },
	{ /*   0x25, */       'l',       'L',         0x0C,	 38 },
	{ /*   0x26, */       'j',       'J',         0x0A,	 36 },
	{ /*   0x27, */       '\'',      '"',         0x00,	 40 },
	{ /*   0x28, */       'k',       'K',         0x0B,	 37 },
	{ /*   0x29, */       ';',       ':',         0x00,	 39 },
	{ /*   0x2A, */      '\\',       '|',         0x1C,	 43 },
	{ /*   0x2B, */       ',',       '<',         0x00,	 51 },
	{ /*   0x2C, */       '/',       '?',         0x00,	 53 },
	{ /*   0x2D, */       'n',       'N',         0x0E,	 49 },
	{ /*   0x2E, */       'm',       'M',         0x0D,	 50 },
	{ /*   0x2F, */       '.',       '>',         0x00,	 52 },
	{ /*   0x30, */      0x09,      0x09,         0x09,	 15 },
	{ /*   0x31, */       ' ',       ' ',         0x00,	 57 },
d108 1
a108 1
	{ /*   0x32, */       '`',       '~',         0x00,	 86 },
d110 1
a110 1
	{ /*   0x32, */       '`',       '~',         0x00,	 41 },
d112 77
a188 77
	{ /*   0x33, */      0x7F,      0x7F,         0x7F,	211 }, /* Delete */
	{ /*   0x34, */      0x00,      0x00,         0x00,	105 }, /* MODE/KP_Enter */
	{ /*   0x35, */      0x1B,      0x1B,         0x1B,	  1 },
	{ /*   0x36, */      0x00,      0x00,         0x00,	 29 },
	{ /*   0x37, */      0x00,      0x00,         0x00,	219 },
	{ /*   0x38, */      0x00,      0x00,         0x00,	 42 },
	{ /*   0x39, */      0x00,      0x00,         0x00,	 58 },
	{ /*   0x3A, */      0x00,      0x00,         0x00,	 56 }, /* L Alt */
	{ /*   0x3B, */       'h',      0x00,         0x00,	203 },  /* Left */
	{ /*   0x3C, */       'l',      0x00,         0x00,	205 },  /* Right */
	{ /*   0x3D, */       'j',      0x00,         0x00,	208 },  /* Down */
	{ /*   0x3E, */       'k',      0x00,         0x00,	200 },  /* Up */
	{ /*   0x3F, */      0x00,      0x00,         0x00,	  0 }, /* Fn */
	{ /*   0x40, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x41, */       '.',       '.',         0x00,	 83 },
	{ /*   0x42, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x43, */       '*',       '*',         0x00,	 55 },
	{ /*   0x44, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x45, */       '+',       '+',         0x00,	 78 },
	{ /*   0x46, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x47, */      0x00,      0x00,         0x00,	 69 },
	{ /*   0x48, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x49, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4A, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4B, */       '/',       '/',         0x00,	181 },
	{ /*   0x4C, */      0x0D,      0x0D,         0x0D,	156 },
	{ /*   0x4D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4E, */       '-',       '-',         0x00,	 74 },
	{ /*   0x4F, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x50, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x51, */       '=',       '=',         0x00,	118 },
	{ /*   0x52, */       '0',       '0',         0x00,	 82 },
	{ /*   0x53, */       '1',       '1',         0x00,	 79 },
	{ /*   0x54, */       '2',       '2',         0x00,	 80 },
	{ /*   0x55, */       '3',       '3',         0x00,	 81 },
	{ /*   0x56, */       '4',       '4',         0x00,	 75 },
	{ /*   0x57, */       '5',       '5',         0x00,	 76 },
	{ /*   0x58, */       '6',       '6',         0x00,	 77 },
	{ /*   0x59, */       '7',       '7',         0x00,	 71 },
	{ /*   0x5A, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5B, */       '8',       '8',         0x00,	 72 },
	{ /*   0x5C, */       '9',       '9',         0x00,	 73 },
	{ /*   0x5D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5F, */      0x00,      0x00,         0x00,	 51 },
	{ /*   0x60, */      0x00,      0x00,         0x00,	 63 }, /* F5 */
	{ /*   0x61, */      0x00,      0x00,         0x00,	 64 }, /* F6 */
	{ /*   0x62, */      0x00,      0x00,         0x00,	 65 }, /* F7 */
	{ /*   0x63, */      0x00,      0x00,         0x00,	 61 }, /* F3 */
	{ /*   0x64, */      0x00,      0x00,         0x00,	 66 }, /* F8 */
	{ /*   0x65, */      0x00,      0x00,         0x00,	 67 }, /* F9 */
	{ /*   0x66, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x67, */      0x00,      0x00,         0x00,	 87 }, /* F11 */
	{ /*   0x68, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x69, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6A, */      0x00,      0x00,         0x00,	156 },
	{ /*   0x6B, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6C, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6D, */      0x00,      0x00,         0x00,	 68 }, /* F10 */
	{ /*   0x6E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6F, */      0x00,      0x00,         0x00,	 88 }, /* F12 */
	{ /*   0x70, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x71, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x72, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x73, */      0x00,      0x00,         0x00,	199 },
	{ /*   0x74, */      0x00,      0x00,         0x00,	201 },
	{ /*   0x75, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x76, */      0x00,      0x00,         0x00,	 62 }, /* F4 */
	{ /*   0x77, */      0x00,      0x00,         0x00,	207 },
	{ /*   0x78, */      0x00,      0x00,         0x00,	 60 }, /* F2 */
	{ /*   0x79, */      0x00,      0x00,         0x00,	209 },
	{ /*   0x7A, */      0x00,      0x00,         0x00,	 59 }, /* F1 */
	{ /*   0x7B, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7C, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7F, */      0x00,      0x00,         0x00,	  0 } /* pwr */
@


1.1
log
@Factorize akbd and ams drivers between mac68k and macppc; while there, start
moving out common adb code as well, and merge adb_direct.c into adb.c to
simplify external header files.

No functional change; more cleanups to come.
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.8 2002/05/09 09:56:57 maja Exp $	*/
a36 11
#define ADBK_LEFT	0x3B
#define ADBK_RIGHT	0x3C
#define ADBK_UP		0x3E
#define ADBK_DOWN	0x3D
#define ADBK_PGUP	0x74
#define ADBK_PGDN	0x79
#define ADBK_HOME	0x73
#define ADBK_END	0x77
#define ADBK_CONTROL	0x36
#define ADBK_FLOWER	0x37
#define ADBK_SHIFT	0x38
d38 1
a38 16
#define ADBK_OPTION	0x3A
#define ADBK_F		0x03
#define ADBK_O		0x1F
#define ADBK_P		0x23
#define ADBK_Q		0x0C
#define ADBK_V		0x09
#define ADBK_1		0x12
#define ADBK_2		0x13
#define ADBK_3		0x14
#define ADBK_4		0x15
#define ADBK_5		0x17
#define ADBK_6		0x16
#define ADBK_7		0x1A
#define ADBK_8		0x1C
#define ADBK_9		0x19
#define ADBK_0		0x1D
@

