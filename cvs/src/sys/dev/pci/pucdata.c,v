head	1.104;
access;
symbols
	OPENBSD_6_1:1.104.0.2
	OPENBSD_6_1_BASE:1.104
	OPENBSD_6_0:1.104.0.4
	OPENBSD_6_0_BASE:1.104
	OPENBSD_5_9:1.101.0.2
	OPENBSD_5_9_BASE:1.101
	OPENBSD_5_8:1.96.0.4
	OPENBSD_5_8_BASE:1.96
	OPENBSD_5_7:1.95.0.4
	OPENBSD_5_7_BASE:1.95
	OPENBSD_5_6:1.92.0.6
	OPENBSD_5_6_BASE:1.92
	OPENBSD_5_5:1.92.0.4
	OPENBSD_5_5_BASE:1.92
	OPENBSD_5_4:1.87.0.2
	OPENBSD_5_4_BASE:1.87
	OPENBSD_5_3:1.86.0.2
	OPENBSD_5_3_BASE:1.86
	OPENBSD_5_2:1.83.0.2
	OPENBSD_5_2_BASE:1.83
	OPENBSD_5_1_BASE:1.80
	OPENBSD_5_1:1.80.0.2
	OPENBSD_5_0:1.74.0.2
	OPENBSD_5_0_BASE:1.74
	OPENBSD_4_9:1.72.0.4
	OPENBSD_4_9_BASE:1.72
	OPENBSD_4_8:1.72.0.2
	OPENBSD_4_8_BASE:1.72
	OPENBSD_4_7:1.66.0.2
	OPENBSD_4_7_BASE:1.66
	OPENBSD_4_6:1.63.0.4
	OPENBSD_4_6_BASE:1.63
	OPENBSD_4_5:1.60.0.2
	OPENBSD_4_5_BASE:1.60
	OPENBSD_4_4:1.55.0.2
	OPENBSD_4_4_BASE:1.55
	OPENBSD_4_3:1.52.0.2
	OPENBSD_4_3_BASE:1.52
	OPENBSD_4_2:1.48.0.2
	OPENBSD_4_2_BASE:1.48
	OPENBSD_4_1:1.46.0.2
	OPENBSD_4_1_BASE:1.46
	OPENBSD_4_0:1.43.0.2
	OPENBSD_4_0_BASE:1.43
	OPENBSD_3_9:1.42.0.2
	OPENBSD_3_9_BASE:1.42
	OPENBSD_3_8:1.40.0.4
	OPENBSD_3_8_BASE:1.40
	OPENBSD_3_7:1.40.0.2
	OPENBSD_3_7_BASE:1.40
	OPENBSD_3_6:1.38.0.2
	OPENBSD_3_6_BASE:1.38
	SMP_SYNC_A:1.35
	SMP_SYNC_B:1.35
	OPENBSD_3_5:1.32.0.2
	OPENBSD_3_5_BASE:1.32
	OPENBSD_3_4:1.30.0.2
	OPENBSD_3_4_BASE:1.30
	UBC_SYNC_A:1.25
	OPENBSD_3_3:1.25.0.2
	OPENBSD_3_3_BASE:1.25
	OPENBSD_3_2:1.22.0.2
	OPENBSD_3_2_BASE:1.22
	OPENBSD_3_1:1.19.0.2
	OPENBSD_3_1_BASE:1.19
	UBC_SYNC_B:1.23
	UBC:1.17.0.2
	UBC_BASE:1.17
	OPENBSD_3_0:1.14.0.2
	OPENBSD_3_0_BASE:1.14
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.2
	SMP_BASE:1.2
	kame_19991208:1.2;
locks; strict;
comment	@ * @;


1.104
date	2016.04.24.06.47.56;	author jsg;	state Exp;
branches;
next	1.103;
commitid	fdAY4PLkubOHRfsY;

1.103
date	2016.03.17.20.28.18;	author uaa;	state Exp;
branches;
next	1.102;
commitid	a5MPurQotk1Dzxvp;

1.102
date	2016.03.15.07.39.27;	author mlarkin;	state Exp;
branches;
next	1.101;
commitid	QoaCKoQOY54L8vXp;

1.101
date	2016.01.15.18.57.27;	author deraadt;	state Exp;
branches;
next	1.100;
commitid	5KWDtxXsLbPRk2qr;

1.100
date	2015.12.26.22.16.12;	author kettenis;	state Exp;
branches;
next	1.99;
commitid	r1gavvBJGistVW9S;

1.99
date	2015.11.14.14.47.56;	author miod;	state Exp;
branches;
next	1.98;
commitid	2pkGyPKPBHGgYDCE;

1.98
date	2015.09.06.17.40.54;	author sf;	state Exp;
branches;
next	1.97;
commitid	YPfDKJdzNHG8IxUs;

1.97
date	2015.08.23.23.15.57;	author deraadt;	state Exp;
branches;
next	1.96;
commitid	dMD7dBFiawxHNcBy;

1.96
date	2015.03.14.03.38.49;	author jsg;	state Exp;
branches;
next	1.95;
commitid	p4LJxGKbi0BU2cG6;

1.95
date	2014.12.07.03.59.25;	author deraadt;	state Exp;
branches;
next	1.94;
commitid	pnVmbV11V8IXFCBu;

1.94
date	2014.09.22.21.16.20;	author sasano;	state Exp;
branches;
next	1.93;
commitid	zmLbtR1BHKqYIKHx;

1.93
date	2014.08.13.07.45.37;	author jsg;	state Exp;
branches;
next	1.92;
commitid	YGAaJF68IQuYIJ8j;

1.92
date	2014.02.02.19.25.41;	author miod;	state Exp;
branches;
next	1.91;

1.91
date	2014.01.21.03.23.36;	author deraadt;	state Exp;
branches;
next	1.90;

1.90
date	2013.11.09.04.05.58;	author jsg;	state Exp;
branches;
next	1.89;

1.89
date	2013.09.28.08.53.41;	author mlarkin;	state Exp;
branches;
next	1.88;

1.88
date	2013.09.21.20.19.32;	author miod;	state Exp;
branches;
next	1.87;

1.87
date	2013.04.21.20.46.28;	author deraadt;	state Exp;
branches;
next	1.86;

1.86
date	2013.01.08.02.30.25;	author deraadt;	state Exp;
branches;
next	1.85;

1.85
date	2012.10.12.21.56.03;	author sasano;	state Exp;
branches;
next	1.84;

1.84
date	2012.09.03.14.37.03;	author jsg;	state Exp;
branches;
next	1.83;

1.83
date	2012.07.12.08.20.52;	author deraadt;	state Exp;
branches;
next	1.82;

1.82
date	2012.05.12.15.54.54;	author kettenis;	state Exp;
branches;
next	1.81;

1.81
date	2012.05.07.20.43.09;	author kettenis;	state Exp;
branches;
next	1.80;

1.80
date	2012.01.09.22.31.51;	author haesbaert;	state Exp;
branches;
next	1.79;

1.79
date	2012.01.02.11.07.02;	author sthen;	state Exp;
branches;
next	1.78;

1.78
date	2011.10.26.14.20.25;	author jsg;	state Exp;
branches;
next	1.77;

1.77
date	2011.10.25.20.02.21;	author deraadt;	state Exp;
branches;
next	1.76;

1.76
date	2011.10.22.19.06.21;	author camield;	state Exp;
branches;
next	1.75;

1.75
date	2011.10.09.21.46.32;	author jsg;	state Exp;
branches;
next	1.74;

1.74
date	2011.04.20.04.58.29;	author mlarkin;	state Exp;
branches;
next	1.73;

1.73
date	2011.03.22.03.56.07;	author mlarkin;	state Exp;
branches;
next	1.72;

1.72
date	2010.07.22.17.16.10;	author pirofti;	state Exp;
branches;
next	1.71;

1.71
date	2010.07.07.21.32.50;	author sthen;	state Exp;
branches;
next	1.70;

1.70
date	2010.07.02.01.07.20;	author pirofti;	state Exp;
branches;
next	1.69;

1.69
date	2010.04.27.16.32.53;	author sthen;	state Exp;
branches;
next	1.68;

1.68
date	2010.04.21.01.09.13;	author beck;	state Exp;
branches;
next	1.67;

1.67
date	2010.03.27.21.58.30;	author kettenis;	state Exp;
branches;
next	1.66;

1.66
date	2009.11.23.02.06.38;	author yuo;	state Exp;
branches;
next	1.65;

1.65
date	2009.08.11.20.03.56;	author deraadt;	state Exp;
branches;
next	1.64;

1.64
date	2009.07.23.21.38.48;	author deraadt;	state Exp;
branches;
next	1.63;

1.63
date	2009.06.26.17.41.29;	author deraadt;	state Exp;
branches;
next	1.62;

1.62
date	2009.03.29.22.11.19;	author deraadt;	state Exp;
branches;
next	1.61;

1.61
date	2009.03.03.15.43.27;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	2009.01.22.13.15.20;	author jsg;	state Exp;
branches;
next	1.59;

1.59
date	2008.11.25.12.37.19;	author deraadt;	state Exp;
branches;
next	1.58;

1.58
date	2008.11.24.23.46.06;	author kettenis;	state Exp;
branches;
next	1.57;

1.57
date	2008.10.02.15.28.07;	author mbalmer;	state Exp;
branches;
next	1.56;

1.56
date	2008.08.22.01.09.08;	author deraadt;	state Exp;
branches;
next	1.55;

1.55
date	2008.05.05.22.25.04;	author dlg;	state Exp;
branches;
next	1.54;

1.54
date	2008.04.24.21.31.28;	author kettenis;	state Exp;
branches;
next	1.53;

1.53
date	2008.04.23.18.40.01;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2007.11.09.02.05.16;	author fgsch;	state Exp;
branches;
next	1.51;

1.51
date	2007.11.02.16.13.10;	author henning;	state Exp;
branches;
next	1.50;

1.50
date	2007.10.22.09.37.35;	author otto;	state Exp;
branches;
next	1.49;

1.49
date	2007.10.11.17.35.57;	author sthen;	state Exp;
branches;
next	1.48;

1.48
date	2007.06.08.12.44.41;	author mbalmer;	state Exp;
branches;
next	1.47;

1.47
date	2007.03.18.15.31.15;	author mickey;	state Exp;
branches;
next	1.46;

1.46
date	2006.12.28.20.52.36;	author miod;	state Exp;
branches;
next	1.45;

1.45
date	2006.12.21.18.53.26;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2006.11.08.17.46.54;	author mcbride;	state Exp;
branches;
next	1.43;

1.43
date	2006.06.15.15.29.25;	author jason;	state Exp;
branches;
next	1.42;

1.42
date	2005.11.02.17.08.22;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2005.10.26.17.09.23;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2005.03.07.13.28.26;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	2004.11.21.03.56.44;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	2004.08.18.19.58.14;	author millert;	state Exp;
branches;
next	1.37;

1.37
date	2004.08.18.17.34.53;	author millert;	state Exp;
branches;
next	1.36;

1.36
date	2004.06.18.14.54.09;	author henning;	state Exp;
branches;
next	1.35;

1.35
date	2004.05.14.16.39.25;	author henning;	state Exp;
branches;
next	1.34;

1.34
date	2004.04.17.17.53.46;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2004.04.17.17.52.03;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2004.03.10.00.47.50;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2003.12.09.23.06.56;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2003.08.06.22.07.37;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2003.08.02.17.15.01;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	2003.06.27.10.04.53;	author henning;	state Exp;
branches;
next	1.27;

1.27
date	2003.06.25.09.09.53;	author henning;	state Exp;
branches;
next	1.26;

1.26
date	2003.06.25.09.06.07;	author henning;	state Exp;
branches;
next	1.25;

1.25
date	2003.02.11.19.20.28;	author mickey;	state Exp;
branches;
next	1.24;

1.24
date	2002.11.30.01.11.46;	author fgsch;	state Exp;
branches;
next	1.23;

1.23
date	2002.10.13.19.46.17;	author henning;	state Exp;
branches;
next	1.22;

1.22
date	2002.06.02.10.08.38;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2002.05.27.07.08.12;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2002.04.29.22.30.34;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	2002.03.22.23.29.50;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2002.02.17.19.24.56;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2001.11.23.04.18.22;	author deraadt;	state Exp;
branches
	1.17.2.1;
next	1.16;

1.16
date	2001.11.18.20.43.35;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2001.11.08.19.53.28;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.11.09.47.12;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2001.08.05.10.05.36;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2001.04.29.17.30.54;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2001.03.28.21.04.29;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2001.03.28.18.10.54;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2001.03.15.17.52.20;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.03.05.15.02.20;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.02.09.36.22;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.14.18.50.20;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.11.21.23.25;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.08.17.01.25;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.27.19.26.01;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.11.14.01.27.57;	author downsj;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	99.10.26.13.06.14;	author downsj;	state Exp;
branches;
next	;

1.2.2.1
date	2001.05.14.22.25.56;	author niklas;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.07.04.10.43.02;	author niklas;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2001.10.31.03.22.47;	author nate;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2001.11.13.21.10.03;	author niklas;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	2001.12.05.00.43.30;	author niklas;	state Exp;
branches;
next	1.2.2.6;

1.2.2.6
date	2002.03.06.02.11.47;	author niklas;	state Exp;
branches;
next	1.2.2.7;

1.2.2.7
date	2003.03.28.00.38.25;	author niklas;	state Exp;
branches;
next	1.2.2.8;

1.2.2.8
date	2004.02.19.10.56.29;	author niklas;	state Exp;
branches;
next	1.2.2.9;

1.2.2.9
date	2004.06.05.23.12.54;	author niklas;	state Exp;
branches;
next	;

1.17.2.1
date	2002.06.11.03.42.27;	author art;	state Exp;
branches;
next	1.17.2.2;

1.17.2.2
date	2002.10.29.00.33.29;	author art;	state Exp;
branches;
next	1.17.2.3;

1.17.2.3
date	2003.05.19.22.19.08;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.104
log
@match on Intel 100 series and 100 series LP PCH
@
text
@/*	$OpenBSD: pucdata.c,v 1.103 2016/03/17 20:28:18 uaa Exp $	*/
/*	$NetBSD: pucdata.c,v 1.6 1999/07/03 05:55:23 cgd Exp $	*/

/*
 * Copyright (c) 1998, 1999 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * PCI "universal" communications card driver configuration data (used to
 * match/attach the cards).
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <dev/pci/pcireg.h>
#include <dev/pci/pcivar.h>
#include <dev/pci/pucvar.h>
#include <dev/pci/pcidevs.h>

const struct puc_device_description puc_devs[] = {

	{	/* 6 Series KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_6SERIES_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 7 Series KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_7SERIES_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 8 Series KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_8SERIES_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 8 Series LP KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_8SERIES_LP_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 9 Series KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_9SERIES_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 9 Series LP KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_9SERIES_LP_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 100 Series KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_100SERIES_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 100 Series LP KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_100SERIES_LP_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 82946GZ KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82946GZ_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 82Q965 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82Q965_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 82G965 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82G965_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 82Q35 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82Q35_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 82G33 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82G33_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 82Q33 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82Q33_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 82X38 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82X38_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* GM965 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82GM965_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* GME965 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82GME965_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* GM45 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82GM45_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* Q45 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82Q45_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 3400 KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_3400_KT, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* Intel EG20T */
	    {   PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_EG20T_SERIAL_1, 0x0000, 0x0000 },
	    {	0xffff,	0xffff,				      0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* Intel EG20T */
	    {   PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_EG20T_SERIAL_2, 0x0000, 0x0000 },
	    {	0xffff,	0xffff,				      0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* Intel EG20T */
	    {   PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_EG20T_SERIAL_3, 0x0000, 0x0000 },
	    {	0xffff,	0xffff,				      0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* Intel EG20T */
	    {   PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_EG20T_SERIAL_4, 0x0000, 0x0000 },
	    {	0xffff,	0xffff,				      0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* Atom S1200 UART */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_ATOM_S1200_UART, 0x0000, 0x0000 },
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	/*
	 * XXX no entry because I have no data:
	 * XXX Dolphin Peripherals 4006 (single parallel)
	 */

	/*
	 * Dolphin Peripherals 4014 (dual parallel port) card.  PLX 9050, with
	 * a seemingly-lame EEPROM setup that puts the Dolphin IDs
	 * into the subsystem fields, and claims that it's a
	 * network/misc (0x02/0x80) device.
	 */
	{   /* "Dolphin Peripherals 4014" */
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_9050,	0xd84d,	0x6810	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
	    {
		{ PUC_LPT, 0x20, 0x0000 },
		{ PUC_LPT, 0x24, 0x0000 },
	    },
	},

	/*
	 * XXX no entry because I have no data:
	 * XXX Dolphin Peripherals 4025 (single serial)
	 */

	/*
	 * Dolphin Peripherals 4035 (dual serial port) card.  PLX 9050, with
	 * a seemingly-lame EEPROM setup that puts the Dolphin IDs
	 * into the subsystem fields, and claims that it's a
	 * network/misc (0x02/0x80) device.
	 */
	{   /* "Dolphin Peripherals 4035" */
	    {	PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0xd84d,	0x6808	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/*
	 * XXX no entry because I have no data:
	 * XXX Dolphin Peripherals 4078 (dual serial and single parallel)
	 */

	/*
	 * Decision PCCOM PCI series. PLX 9052 with 1 or 2 16554 UARTS
	 */

	/* Decision Computer Inc PCCOM 2 Port RS232/422/485: 2S */
	{   /* "Decision Computer Inc PCCOM 2 Port RS232/422/485", */
	    {	PCI_VENDOR_DCI,	PCI_PRODUCT_DCI_APCI2,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0008 },
	    },
	},

	/* Decision Computer Inc PCCOM 4 Port RS232/422/485: 4S */
	{   /* "Decision Computer Inc PCCOM 4 Port RS232/422/485", */
	    {	PCI_VENDOR_DCI,	PCI_PRODUCT_DCI_APCI4,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0008 },
		{ PUC_COM_POW2(0), 0x1c, 0x0010 },
		{ PUC_COM_POW2(0), 0x1c, 0x0018 },
	    },
	},

	/* Decision Computer Inc PCCOM 8 Port RS232/422/485: 8S */
	{   /* "Decision Computer Inc PCCOM 8 Port RS232/422/485", */
	    {	PCI_VENDOR_DCI, PCI_PRODUCT_DCI_APCI8,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0008 },
		{ PUC_COM_POW2(0), 0x1c, 0x0010 },
		{ PUC_COM_POW2(0), 0x1c, 0x0018 },
		{ PUC_COM_POW2(0), 0x1c, 0x0020 },
		{ PUC_COM_POW2(0), 0x1c, 0x0028 },
		{ PUC_COM_POW2(0), 0x1c, 0x0030 },
		{ PUC_COM_POW2(0), 0x1c, 0x0038 },
	    },
	},
	/* IBM SurePOS 300 Series (481033H) serial ports */
	{   /* "IBM SurePOS 300 Series (481033H) serial ports", */
	    {	PCI_VENDOR_IBM, PCI_PRODUCT_IBM_4810_SCC,	0, 0	},
	    {	0xffff, 0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 }, /* Port C */
		{ PUC_COM_POW2(0), 0x18, 0x0000 }, /* Port D */
		{ PUC_COM_POW2(0), 0x14, 0x0000 }, /* Port E */
		{ PUC_COM_POW2(0), 0x1c, 0x0000 }, /* Port F */
	    },
	},

	/*
	 * SIIG Boards.
	 *
	 * SIIG provides documentation for their boards at:
	 * <URL:http://www.siig.com/driver.htm>
	 *
	 * Please excuse the weird ordering, it's the order they
	 * use in their documentation.
	 */

	/*
	 * SIIG "10x" family boards.
	 */

	/* SIIG Cyber Serial PCI 16C550 (10x family): 1S */
	{   /* "SIIG Cyber Serial PCI 16C550 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1000,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial PCI 16C650 (10x family): 1S */
	{   /* "SIIG Cyber Serial PCI 16C650 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1001,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial PCI 16C850 (10x family): 1S */
	{   /* "SIIG Cyber Serial PCI 16C850 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1002,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
	    },
	},

	/* SIIG Cyber I/O PCI 16C550 (10x family): 1S, 1P */
	{   /* "SIIG Cyber I/O PCI 16C550 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1010,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_LPT, 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber I/O PCI 16C650 (10x family): 1S, 1P */
	{   /* "SIIG Cyber I/O PCI 16C650 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1011,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_LPT, 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber I/O PCI 16C850 (10x family): 1S, 1P */
	{   /* "SIIG Cyber I/O PCI 16C850 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1012,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_LPT, 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber Parallel PCI (10x family): 1P */
	{   /* "SIIG Cyber Parallel PCI (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1020,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_LPT, 0x18, 0x0000 },
	    },
	},

	/* SIIG Cyber Parallel Dual PCI (10x family): 2P */
	{   /* "SIIG Cyber Parallel Dual PCI (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1021,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_LPT, 0x18, 0x0000 },
		{ PUC_LPT, 0x20, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial Dual PCI 16C550 (10x family): 2S */
	{   /* "SIIG Cyber Serial Dual PCI 16C550 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1030,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial Dual PCI 16C650 (10x family): 2S */
	{   /* "SIIG Cyber Serial Dual PCI 16C650 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1031,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial Dual PCI 16C850 (10x family): 2S */
	{   /* "SIIG Cyber Serial Dual PCI 16C850 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1032,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber 2S1P PCI 16C550 (10x family): 2S, 1P */
	{   /* "SIIG Cyber 2S1P PCI 16C550 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1034,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_LPT, 0x20, 0x0000 },
	    },
	},

	/* SIIG Cyber 2S1P PCI 16C650 (10x family): 2S, 1P */
	{   /* "SIIG Cyber 2S1P PCI 16C650 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1035,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_LPT, 0x20, 0x0000 },
	    },
	},

	/* SIIG Cyber 2S1P PCI 16C850 (10x family): 2S, 1P */
	{   /* "SIIG Cyber 2S1P PCI 16C850 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1036,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_LPT, 0x20, 0x0000 },
	    },
	},

	/* SIIG Cyber 4S PCI 16C550 (10x family): 4S */
	{   /* "SIIG Cyber 4S PCI 16C550 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1050,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_COM_POW2(0), 0x20, 0x0000 },
		{ PUC_COM_POW2(0), 0x24, 0x0000 },
	    },
	},

	/* SIIG Cyber 4S PCI 16C650 (10x family): 4S */
	{   /* "SIIG Cyber 4S PCI 16C650 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1051,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_COM_POW2(0), 0x20, 0x0000 },
		{ PUC_COM_POW2(0), 0x24, 0x0000 },
	    },
	},

	/* SIIG Cyber 4S PCI 16C850 (10x family): 4S */
	{   /* "SIIG Cyber 4S PCI 16C850 (10x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1052,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_COM_POW2(0), 0x20, 0x0000 },
		{ PUC_COM_POW2(0), 0x24, 0x0000 },
	    },
	},

	/*
	 * SIIG "20x" family boards.
	 */

	/* SIIG Cyber Parallel PCI (20x family): 1P */
	{   /* "SIIG Cyber Parallel PCI (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2020,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	/* SIIG Cyber Parallel Dual PCI (20x family): 2P */
	{   /* "SIIG Cyber Parallel Dual PCI (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2021,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_LPT, 0x10, 0x0000 },
		{ PUC_LPT, 0x18, 0x0000 },
	    },
	},

	/* SIIG Cyber 2P1S PCI 16C550 (20x family): 1S, 2P */
	{   /* "SIIG Cyber 2P1S PCI 16C550 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2040,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_LPT, 0x14, 0x0000 },
		{ PUC_LPT, 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber 2P1S PCI 16C650 (20x family): 1S, 2P */
	{   /* "SIIG Cyber 2P1S PCI 16C650 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2041,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_LPT, 0x14, 0x0000 },
		{ PUC_LPT, 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber 2P1S PCI 16C850 (20x family): 1S, 2P */
	{   /* "SIIG Cyber 2P1S PCI 16C850 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2042,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_LPT, 0x14, 0x0000 },
		{ PUC_LPT, 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial PCI 16C550 (20x family): 1S */
	{   /* "SIIG Cyber Serial PCI 16C550 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2000,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial PCI 16C650 (20x family): 1S */
	{   /* "SIIG Cyber Serial PCI 16C650 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2001,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial PCI 16C850 (20x family): 1S */
	{   /* "SIIG Cyber Serial PCI 16C850 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2002,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* SIIG Cyber I/O PCI 16C550 (20x family): 1S, 1P */
	{   /* "SIIG Cyber I/O PCI 16C550 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2010,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_LPT, 0x14, 0x0000 },
	    },
	},

	/* SIIG Cyber I/O PCI 16C650 (20x family): 1S, 1P */
	{   /* "SIIG Cyber I/O PCI 16C650 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2011,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_LPT, 0x14, 0x0000 },
	    },
	},

	/* SIIG Cyber I/O PCI 16C850 (20x family): 1S, 1P */
	{   /* "SIIG Cyber I/O PCI 16C850 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2012,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_LPT, 0x14, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial Dual PCI 16C550 (20x family): 2S */
	{   /* "SIIG Cyber Serial Dual PCI 16C550 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2030,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial Dual PCI 16C650 (20x family): 2S */
	{   /* "SIIG Cyber Serial Dual PCI 16C650 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2031,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},

	/* SIIG Cyber Serial Dual PCI 16C850 (20x family): 2S */
	{   /* "SIIG Cyber Serial Dual PCI 16C850 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2032,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},

	/* SIIG Cyber 2S1P PCI 16C550 (20x family): 2S, 1P */
	{   /* "SIIG Cyber 2S1P PCI 16C550 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2060,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_LPT, 0x18, 0x0000 },
	    },
	},

	/* SIIG Cyber 2S1P PCI 16C650 (20x family): 2S, 1P */
	{   /* "SIIG Cyber 2S1P PCI 16C650 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2061,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_LPT, 0x18, 0x0000 },
	    },
	},

	/* SIIG Cyber 2S1P PCI 16C850 (20x family): 2S, 1P */
	{   /* "SIIG Cyber 2S1P PCI 16C850 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2062,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_LPT, 0x18, 0x0000 },
	    },
	},

	/* SIIG Cyber 4S PCI 16C550 (20x family): 4S */
	{   /* "SIIG Cyber 4S PCI 16C550 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2050,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber 4S PCI 16C650 (20x family): 4S */
	{   /* "SIIG Cyber 4S PCI 16C650 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2051,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber 4S PCI 16C850 (20x family): 4S */
	{   /* "SIIG Cyber 4S PCI 16C850 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2052,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* SIIG Cyber 8S PCI 16C850 (20x family): 8S */
	{   /* "SIIG Cyber 8S PCI 16C850 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2081,		0, 0	},
	    {	0xffff, 0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_COM_POW2(0), 0x20, 0x0000 },
		{ PUC_COM_POW2(0), 0x20, 0x0008 },
		{ PUC_COM_POW2(0), 0x20, 0x0010 },
		{ PUC_COM_POW2(0), 0x20, 0x0018 },
	    },
	},

	/* SIIG Cyber 8S PCI 16C850 (20x family): 8S */
	{   /* "SIIG Cyber 8S PCI 16C850 (20x family)", */
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI954,
		PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2082	},
	    {	0xffff, 0xffff,	0xffff, 0xffff	},
	    {
		{ PUC_COM_MUL(10), 0x10, 0x0000 },
		{ PUC_COM_MUL(10), 0x10, 0x0008 },
		{ PUC_COM_MUL(10), 0x10, 0x0010 },
		{ PUC_COM_MUL(10), 0x10, 0x0018 },
	    },
	},

	/* OX16PCI954, first part of Serial Technologies Expander PCI-232-108 */
	{   /* "OX16PCI954" */
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI954,
		PCI_VENDOR_OXFORD2, 0	},
	    {	0xffff, 0xffff,	0xffff, 0xffff	},
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x10, 0x0010 },
		{ PUC_COM_POW2(3), 0x10, 0x0018 },
	    },
	},

	/* Exsys EX-41092 (sold as SIIG JJ-E10011-S3) */
	{      /* "Exsys EX-41092", */
		{ PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_EXSYS_EX41092,0x0000,0x0000},
		{ 0xffff, 0xffff,                                       0x0000,0x0000},
		{
			{ PUC_COM_MUL(10), 0x10, 0x0000 },
		},
	},

	/* Exsys EX-41098, second part of Serial Technologies Expander PCI-232-108 */
	{   /* "Exsys EX-41098", */
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_EXSYS_EX41098,
		PCI_VENDOR_OXFORD2, 0	},
	    {	0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x10, 0x0010 },
		{ PUC_COM_POW2(3), 0x10, 0x0018 },
	    },
	},

	/* Exsys EX-41098, second part of SIIG Cyber 8S PCI Card */
	{   /* "Exsys EX-41098", */
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_EXSYS_EX41098,
		PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2082	},
	    {	0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_MUL(10), 0x10, 0x0000 },
		{ PUC_COM_MUL(10), 0x10, 0x0008 },
		{ PUC_COM_MUL(10), 0x10, 0x0010 },
		{ PUC_COM_MUL(10), 0x10, 0x0018 },
	    },
	},

	/*
	 * VScom PCI-400S, based on PLX 9050 Chip, 16k buffer
	 */
	{ /* "VScom PCI-400S", */
	    { PCI_VENDOR_PLX, PCI_PRODUCT_PLX_1077, 0x10b5, 0x1077 },
	    { 0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0008 },
		{ PUC_COM_POW2(3), 0x18, 0x0010 },
		{ PUC_COM_POW2(3), 0x18, 0x0018 },
	    },
	},

	/*
	 * VScom PCI-800, as sold on http://www.swann.com.au/isp/titan.html.
	 * Some PLX chip.  Note: This board has a software selectable(?)
	 * clock multiplier which this driver doesn't support, so you'll
	 * have to use an appropriately scaled baud rate when talking to
	 * the card.
	 */
	{   /* "VScom PCI-800", */
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_1076,	0x10b5,	0x1076	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0008 },
		{ PUC_COM_POW2(0), 0x18, 0x0010 },
		{ PUC_COM_POW2(0), 0x18, 0x0018 },
		{ PUC_COM_POW2(0), 0x18, 0x0020 },
		{ PUC_COM_POW2(0), 0x18, 0x0028 },
		{ PUC_COM_POW2(0), 0x18, 0x0030 },
		{ PUC_COM_POW2(0), 0x18, 0x0038 },
	    },
	},

	/*
	* VScom PCI 011H, 1 lpt.
	*/
	{   /* "VScom PCI-011H", */
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_VSCOM_PCI011H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	/*
	 * VScom PCI x10H, 1 lpt.
	 * is the lpt part of VScom 110H, 210H, 410H
	 */
	{   /* "VScom PCI-x10H", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCIx10H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	/*
	 * VScom PCI 100H, little sister of 800H, 1 com.
	 * also com part of VScom 110H
	 * The one I have defaults to a fequency of 14.7456 MHz which is
	 * jumper J1 set to 2-3.
	 */
	{   /* "VScom PCI-100H", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI100H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
	    },
	},

	/*
	 * VScom PCI 200H, little sister of 800H, 2 com.
	 * also com part of VScom 210H
	 * The one I have defaults to a fequency of 14.7456 MHz which is
	 * jumper J1 set to 2-3.
	 */

	{   /* "VScom PCI-200H", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
	    },
	},

	/*
	 * VScom PCI 400H and 800H. Uses 4/8 16950 UART, behind a PCI chips
	 * that offers 4 com port on PCI device 0 (both 400H and 800H)
	 * and 4 on PCI device 1 (800H only). PCI device 0 has
	 * device ID 3 and PCI device 1 device ID 4. Uses a 14.7456 MHz crystal
	 * instead of the standart 1.8432MHz.
	 * There's a version with a jumper for selecting the crystal frequency,
	 * defaults to 8x as used here. The jumperless version uses 8x, too.
	 */
	{   /* "VScom PCI-400H/800H", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800H_0,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x10, 0x0010 },
		{ PUC_COM_POW2(3), 0x10, 0x0018 },
	    },
	},
	{   /* "VScom PCI-400H/800H", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800H_1,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x10, 0x0010 },
		{ PUC_COM_POW2(3), 0x10, 0x0018 },
	    },
	},

	/*
	 * VScom PCI 200HV2, is 200H Version 2.
	 * Sells as 200H
	 */
	{   /* "VScom PCI-200HV2", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200HV2,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
	    },
	},

	/*
	 * VScom PCI 010L
	 * one lpt
	 * untested
	 */
	{   /* "VScom PCI-010L", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI010L,    0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_LPT, 0x1c, 0x0000 },
	    },
	},

	/*
	 * VScom PCI 100L
	 * one com
	 * The one I have defaults to a fequency of 14.7456 MHz which is
	 * jumper J1 set to 2-3.
	 */
	{   /* "VScom PCI-100L", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI100L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
	    },
	},

	/*
	 * VScom PCI 110L
	 * one com, one lpt
	 * untested
	 */
	{   /* "VScom PCI-110L", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI110L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
		{ PUC_LPT, 0x1c, 0x0000 },
	    },
	},

	/*
	 * VScom PCI-200L has 2 x 16550 UARTS.
	 * The board has a jumper which allows you to select a clock speed
	 * of either 14.7456MHz or 1.8432MHz. By default it runs at
	 * the fast speed.
	 */
	{   /* "VScom PCI-200L with 2 x 16550 UARTS" */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
	    },
	},

	/*
	 * VScom PCI-210L
	 * Has a jumper for frequency selection, defaults to 8x as used here
	 * two com, one lpt
	 */
	{   /* "VScom PCI-210L" */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI210L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_LPT, 0x1c, 0x0000 },
	    },
	},

	/*
	 * VScom PCI 400L
	 * Has a jumper for frequency selection, defaults to 8x as used here
	 * This is equal to J1 in pos 2-3
	 * VendorID mismatch with docs, should be 14d2 (oxford), is 10d2 (molex)
	 */
	{   /* "VScom PCI-400L", */
	    {	PCI_VENDOR_MOLEX, PCI_PRODUCT_MOLEX_VSCOM_PCI400L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_COM_POW2(3), 0x20, 0x0000 },
		{ PUC_COM_POW2(3), 0x20, 0x0008 },
	    },
	},

	/*
	 * VScom PCI 800L
	 * Has a jumper for frequency selection, defaults to 8x as used here
	 */
	{   /* "VScom PCI-800L", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_COM_POW2(3), 0x20, 0x0000 },
		{ PUC_COM_POW2(3), 0x20, 0x0008 },
		{ PUC_COM_POW2(3), 0x20, 0x0010 },
		{ PUC_COM_POW2(3), 0x20, 0x0018 },
		{ PUC_COM_POW2(3), 0x20, 0x0020 },
		{ PUC_COM_POW2(3), 0x20, 0x0028 },
	    },
	},

	/*
	 * Exsys EX-41098
	 */
	{   /* "Exsys EX-41098", */
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_EXSYS_EX41098,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x10, 0x0008 },
		{ PUC_COM_POW2(0), 0x10, 0x0010 },
		{ PUC_COM_POW2(0), 0x10, 0x0018 },
	    },
	},

	/*
	 * Boards with an Oxford Semiconductor chip.
	 *
	 * Oxford Semiconductor provides documentation for their chip at:
	 * <URL:http://www.plxtech.com/products/uart/>
	 *
	 * As sold by Kouwell <URL:http://www.kouwell.com/>.
	 * I/O Flex PCI I/O Card Model-223 with 4 serial and 1 parallel ports.
	 */

	/* Exsys EX-1372 (uses Oxford OX16PCI952 and a 8x clock) */
	{   /* "Oxford Semiconductor OX16PCI952 UARTs", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI952,
		PCI_VENDOR_OXFORD2, 0x0001 },
	    {   0xffff, 0xffff,	0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
	    },
	},

	/* Oxford Semiconductor OX16PCI952 PCI `950 UARTs - 128 byte FIFOs */
	{   /* "Oxford Semiconductor OX16PCI952 UARTs", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI952,	0, 0 },
	    {   0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},

	/* Oxford Semiconductor OX16PCI952 PCI Parallel port */
	{   /* "Oxford Semiconductor OX16PCI952 Parallel port", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI952P,	0, 0 },
	    {   0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	/* Oxford Semiconductor OXPCIE952 PCIE Parallel port */
	{   /* "Oxford Semiconductor OXPCIE952 PCIE Parallel port", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OXPCIE952,	0, 0 },
	    {   0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	/* SIIG 2050 (uses Oxford 16PCI954 and a 10x clock) */
	{   /* "Oxford Semiconductor OX16PCI954 UARTs", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI954,
		PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2050 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_MUL(10), 0x10, 0x0000 },
		{ PUC_COM_MUL(10), 0x10, 0x0008 },
		{ PUC_COM_MUL(10), 0x10, 0x0010 },
		{ PUC_COM_MUL(10), 0x10, 0x0018 },
	    },
	},

	/* I-O DATA RSA-PCI2 (uses Oxford 16PCI954 and a 8x clock) */
	{   /* "Oxford Semiconductor OX16PCI954 UARTs", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI954,
		PCI_VENDOR_IODATA, 0xc070 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
	    },
	},

	/* Oxford Semiconductor OX16PCI954 PCI UARTs */
	{   /* "Oxford Semiconductor OX16PCI954 UARTs", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI954,	0, 0 },
	    {   0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x10, 0x0008 },
		{ PUC_COM_POW2(0), 0x10, 0x0010 },
		{ PUC_COM_POW2(0), 0x10, 0x0018 },
	    },
	},

	/* Commell MP-954GPS, GPS and 2 COM */
	{   /* "Oxford Semiconductor OX16mPCI954 UARTs", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OXMPCI954,	0, 0 },
	    {   0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(2), 0x10, 0x0000 },
		{ PUC_COM_POW2(2), 0x10, 0x0008 },
		{ PUC_COM_POW2(2), 0x10, 0x0010 },
	    },
	},

	/* Oxford Semiconductor OX16PCI954K PCI UARTs */
	{   /* "Oxford Semiconductor OX16PCI954K UARTs", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI954K,	0, 0 },
	    {   0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* Oxford Semiconductor OX16PCI954 PCI Parallel port */
	{   /* "Oxford Semiconductor OX16PCI954 Parallel port", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI954P,	0, 0 },
	    {   0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	/* Oxford Semiconductor PCIE `950 UARTs - 128 byte FIFOs */
	{   /* "Oxford Semiconductor PCIE UARTs", */
	    {   PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OXPCIE952S,	0, 0 },
	    {   0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/*
	 * Brainboxes BB16PCI958.
	 * Apparently based on an Oxford Semiconductor OX16PCI958 chip.
	 */
	{    /* "Brainboxes BB16PCI958 UARTs", */
	    {	PCI_VENDOR_BRAINBOXES, PCI_PRODUCT_BRAINBOXES_IS200_BB16PCI958,
		    							0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0008 },
	    },
	},

	/*
	 * NEC PK-UG-X001 K56flex PCI Modem card.
	 * NEC MARTH bridge chip and Rockwell RCVDL56ACF/SP using.
	 */
	{   /* "NEC PK-UG-X001 K56flex PCI Modem", */
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_MARTH,	0x1033,	0x8014	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* NEC PK-UG-X008 */
	{   /* "NEC PK-UG-X008", */
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_PKUG,	0x1033,	0x8012	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* Lava Computers 2SP-PCI (0x8000-0x8003) */
	{   /* "Lava Computers 2SP-PCI parallel port", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_1P,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
	    {
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	/* Lava Computers 2SP-PCI and Quattro-PCI serial ports */
	{   /* "Lava Computers dual serial port", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_2S,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},

	/*
	 * Lava Computers Quattro-PCI serial ports.
	 * A second version of the Quattro-PCI with different PCI ids.
	 */
	{   /* "Lava Computers Quattro-PCI 4-port serial", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_QUATTRO_AB2,	0, 0	},
	    {	0xffff,	0xfffe,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},

	/*
	 * Lava Computers LavaPort-Dual and LavaPort-Quad 4*clock PCI
	 * serial ports.
	 */
	{   /* "Lava Computers high-speed port", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_LAVAPORT_0,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
	    {
		{ PUC_COM_POW2(2), 0x10, 0x0000 },
		{ PUC_COM_POW2(2), 0x14, 0x0000 },
	    },
	},

	/*
	 * Lava Computers LavaPort-single serial port.
	 */
	{   /* "Lava Computers high-speed port", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_LAVAPORT_2,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
	    {
		{ PUC_COM_POW2(2), 0x10, 0x0000 },
	    },
	},

	/* Lava Computers LavaPort-650 */
	{   /* "Lava Computers high-speed port", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_650,		0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
	    {
		{ PUC_COM_POW2(2), 0x10, 0x0000 },
	    },
	},

	/* Koutech IOFLEX-2S PCI Dual Port Serial, port 1 */
	{   /* "Koutech IOFLEX-2S PCI Dual Port Serial, port 1", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_0,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* Koutech IOFLEX-2S PCI Dual Port Serial, port 2 */
	{   /* "Koutech IOFLEX-2S PCI Dual Port Serial, port 2", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_1,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* Lava Computers Octopus-550 serial ports */
	{   /* "Lava Computers Octopus-550 8-port serial", */
	    {   PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_OCTOPUS550_0,	0, 0	},
	    {   0xffff, 0xfffc,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* Lava Computers Octopus-550 serial ports */
	{   /* "Lava Computers Octopus-550 8-port serial", */
	    {   PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_OCTOPUS550_1,	0, 0	},
	    {   0xffff, 0xfffc,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* US Robotics (3Com) PCI Modems */
	{   /* "US Robotics (3Com) 3CP5610 PCI 16550 Modem", */
	    {	PCI_VENDOR_USR, PCI_PRODUCT_USR_3CP5610,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* IBM 33L4618: AT&T/Lucent Venus Modem */
	{   /* "IBM 33L4618: AT&T/Lucent Venus Modem", */
	    /* "Actiontec 56K PCI Master" */
	    {	PCI_VENDOR_LUCENT, PCI_PRODUCT_LUCENT_VENUSMODEM,	0, 0 },
	    {	0xffff,	0xffff,						0, 0 },
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0008 },
	    },
	},

	/* Topic/SmartLink 5634PCV SurfRider */
	{   /* "Topic/SmartLink 5634PCV SurfRider" */
	    {	PCI_VENDOR_TOPIC, PCI_PRODUCT_TOPIC_5634PCV,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* SD-LAB PCI I/O Card 4S */
	{   /* "Syba Tech Ltd. PCI-4S" */
	    {   PCI_VENDOR_SYBA, PCI_PRODUCT_SYBA_4S,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x03e8 },
		{ PUC_COM_POW2(0), 0x10, 0x02e8 },
		{ PUC_COM_POW2(0), 0x10, 0x03f8 },
		{ PUC_COM_POW2(0), 0x10, 0x02f8 },
	    },
	},

	/* SD-LAB PCI I/O Card 4S2P */
	{   /* "Syba Tech Ltd. PCI-4S2P-550-ECP" */
	    {   PCI_VENDOR_SYBA, PCI_PRODUCT_SYBA_4S2P,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x02e8 },
		{ PUC_COM_POW2(0), 0x10, 0x02f8 },
		{ PUC_LPT, 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x10, 0x03e8 },
		{ PUC_COM_POW2(0), 0x10, 0x03f8 },
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 4S RS232/422/485 */
	{   /* "Moxa Technologies, Industio CP-114" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP114,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0008 },
		{ PUC_COM_POW2(3), 0x18, 0x0010 },
		{ PUC_COM_POW2(3), 0x18, 0x0018 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 4S RS232/422/485 */
	{   /* "Moxa Technologies, SmartIO C104H/PCI" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_C104H,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0008 },
		{ PUC_COM_POW2(3), 0x18, 0x0010 },
		{ PUC_COM_POW2(3), 0x18, 0x0018 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 4S RS232 */
	{   /* "Moxa Technologies, SmartIO CP104UL/PCI" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP104UL,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0008 },
		{ PUC_COM_POW2(3), 0x18, 0x0010 },
		{ PUC_COM_POW2(3), 0x18, 0x0018 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 4S RS232 */
	{   /* "Moxa Technologies, SmartIO CP104JU/PCI" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP104JU,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0008 },
		{ PUC_COM_POW2(3), 0x18, 0x0010 },
		{ PUC_COM_POW2(3), 0x18, 0x0018 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 8S RS232 */
	{   /* "Moxa Technologies, Industio C168H" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_C168H,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0008 },
		{ PUC_COM_POW2(3), 0x18, 0x0010 },
		{ PUC_COM_POW2(3), 0x18, 0x0018 },
		{ PUC_COM_POW2(3), 0x18, 0x0020 },
		{ PUC_COM_POW2(3), 0x18, 0x0028 },
		{ PUC_COM_POW2(3), 0x18, 0x0030 },
		{ PUC_COM_POW2(3), 0x18, 0x0038 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 8S RS232 */
	{   /* "Moxa Technologies, CP-168U" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP168U,	0, 0	},
	    {	0xffff, 0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_COM_POW2(3), 0x18, 0x0008 },
		{ PUC_COM_POW2(3), 0x18, 0x0010 },
		{ PUC_COM_POW2(3), 0x18, 0x0018 },
		{ PUC_COM_POW2(3), 0x18, 0x0020 },
		{ PUC_COM_POW2(3), 0x18, 0x0028 },
		{ PUC_COM_POW2(3), 0x18, 0x0030 },
		{ PUC_COM_POW2(3), 0x18, 0x0038 },
	    },
	},

	/* NetMos 1P PCI: 1P */
	{   /* "NetMos NM9805 1284 Printer Port" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9805,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	/* NetMos 1S PCI 16C650 : 1S */
	{   /* "NetMos NM9835 UART" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9835,	0x1000, 0x0001	},
	    {	0xffff,	0xffff,					0xffff, 0xffff	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* NetMos 2S1P PCI 16C650 : 2S, 1P */
	{   /* "NetMos NM9835 Dual UART and 1284 Printer port" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9835,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_LPT, 0x18, 0x0000 },
	    },
	},

	/* NetMos 4S PCI 16C650 : 4S, 0P */
	{   /* "NetMos NM9845 Quad UART" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9845, 0x1000, 0x0004 },
	    {	0xffff,	0xffff,				      0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* NetMos 4S1P PCI 16C650 : 4S, 1P */
	{   /* "NetMos NM9845 Quad UART and 1284 Printer port" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9845, 0x1000, 0x0014 },
	    {	0xffff,	0xffff,				      0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_LPT, 0x20, 0x0000 },
	    },
	},

	/* NetMos 6S PCI 16C650 : 6S, 0P */
	{   /* "NetMos NM9845 6 UART" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9845, 0x1000, 0x0006 },
	    {	0xffff,	0xffff,				      0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_COM_POW2(0), 0x20, 0x0000 },
		{ PUC_COM_POW2(0), 0x24, 0x0000 },
	    },
	},

	/* NetMos 2S PCI 16C650 : 2S */
	{   /* "NetMos NM9845 Dual UART" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9845,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},

	/* NetMos 6S PCI 16C650 : 6S
	 * Shows up as three PCI devices, two with a single serial
	 * port and one with four serial ports (on a special ISA
	 * extender chip).
	 */
	{   /* "NetMos NM9865 6 UART: 1 UART" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9865, 0xa000, 0x1000 },
	    {	0xffff,	0xffff,				      0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "NetMos NM9865 6 UART: 4 UART ISA" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9865, 0xa000, 0x3004 },
	    {	0xffff,	0xffff,				      0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* NetMos PCIe Peripheral Controller :UART part */
	{   /* "NetMos NM9901 UART" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9901, 0xa000, 0x1000 },
	    {	0xffff,	0xffff,				      0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/* NetMos PCIe Peripheral Controller :parallel part */
	{   /* "NetMos NM9901 UART" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9901, 0xa000, 0x2000 },
	    {	0xffff,	0xffff,				      0xffff, 0xffff },
	    {
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	{   /* NetMos NM9922: 2S */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9922, 0xa000, 0x1000 },
	    {	0xffff,	0xffff,				      0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},

	/*
	 * Perle Speed8 LE.
	 * Based on an Oxford Semiconductor OX16PCI954 chip, using the
	 * 8-bit pass-through Local Bus function to hook up 4
	 * additional UARTs.
	 */
	{   /* OX16PCI954 internal UARTs */
	    {   PCI_VENDOR_PERLE, PCI_PRODUCT_PERLE_SPEED8_LE,
		PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OX16PCI954   },
	    {   0xffff, 0xffff, 0xffff, 0xffff   },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x10, 0x0010 },
		{ PUC_COM_POW2(3), 0x10, 0x0018 },
	     },
	},
	{   /* OX16PCI954 8-bit pass-through Local Bus */
	    {   PCI_VENDOR_PERLE, PCI_PRODUCT_PERLE_SPEED8_LE,
		PCI_VENDOR_OXFORD2, 0x9511   },
	    {   0xffff, 0xffff, 0xffff, 0xffff   },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x10, 0x0010 },
		{ PUC_COM_POW2(3), 0x10, 0x0018 },
	    },
	},

	{ /* Sunix 4018A : 2-port parallel */
	    {   PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_4018A,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_LPT, 0x10, 0x0000 },
		{ PUC_LPT, 0x18, 0x0000 },
	    },
	},

	/*
	 * SUNIX 40XX series of serial/parallel combo cards.
	 * Tested with 4055A and 4065A.
	 */
	{   /* SUNIX 400X 1P */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4000 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_LPT, 0x10, 0x0000 },
	    },
	},

	{   /* SUNIX 401X 2P */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4010 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_LPT, 0x10, 0x0000 },
		{ PUC_LPT, 0x18, 0x0000 },
	    },
	},

	{   /* SUNIX 402X 1S */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4020 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
	    },
	},

	{   /* SUNIX 403X 2S */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4030 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
	    },
	},

	{   /* SUNIX 4036 2S */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x0002 },
	    {	0xffff,	0xffff,	0xffff,	0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
	    },
	},

	{   /* SUNIX 405X 4S */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4050 },
	    {	0xffff,	0xffff,	0xffff,	0xe0f0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0008 },
	    },
	},

	{   /* SUNIX 406X 8S */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x5066 },
	    {	0xffff,	0xffff,	0xffff,	0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0008 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
		{ PUC_COM_POW2(0), 0x20, 0x0000 },
		{ PUC_COM_POW2(0), 0x24, 0x0000 },
	    },
	},

	{   /* SUNIX 406X 8S */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4060 },
	    {	0xffff,	0xffff,	0xffff,	0xe0f0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
		{ PUC_COM_POW2(3), 0x14, 0x0008 },
		{ PUC_COM_POW2(3), 0x18, 0x0000 },
		{ PUC_COM_POW2(3), 0x1c, 0x0000 },
		{ PUC_COM_POW2(3), 0x20, 0x0000 },
		{ PUC_COM_POW2(3), 0x24, 0x0000 },
	    },
	},

	{   /* SUNIX 407X 2S/1P */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4070 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_LPT, 0x18, 0x0000 },
	    },
	},

	{   /* SUNIX 408X 2S/2P */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4080 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_LPT, 0x18, 0x0000 },
		{ PUC_LPT, 0x20, 0x0000 },
	    },
	},

	{   /* SUNIX 409X 4S/2P */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4090 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0008 },
		{ PUC_LPT, 0x18, 0x0000 },
		{ PUC_LPT, 0x20, 0x0000 },
	    },
	},

	/*
	 * SUNIX 50XX series of serial/parallel combo cards.
	 * Tested with 5066A.
	 */
	{   /* SUNIX 5008 1P */
	    {   PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0100 },
	    {   0xffff, 0xffff, 0xffff, 0xeff0 },
	    {
		{ PUC_LPT, 0x14, 0x0000 },
	    },
	},

	{   /* SUNIX 5016 16S */
	    {   PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0010 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x10, 0x0010 },
		{ PUC_COM_POW2(3), 0x10, 0x0018 },
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
		{ PUC_COM_POW2(3), 0x14, 0x0008 },
		{ PUC_COM_POW2(3), 0x14, 0x0010 },
		{ PUC_COM_POW2(3), 0x14, 0x0018 },
		{ PUC_COM_POW2(3), 0x14, 0x0020 },
		{ PUC_COM_POW2(3), 0x14, 0x0028 },
		{ PUC_COM_POW2(3), 0x14, 0x0030 },
		{ PUC_COM_POW2(3), 0x14, 0x0038 },
		{ PUC_COM_POW2(3), 0x14, 0x0040 },
		{ PUC_COM_POW2(3), 0x14, 0x0048 },
		{ PUC_COM_POW2(3), 0x14, 0x0050 },
		{ PUC_COM_POW2(3), 0x14, 0x0058 },
	    },
	},

	{   /* SUNIX 5027 1S */
	    {   PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0001 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
	    },
	},

	{   /* SUNIX 5037 2S */
	    {   PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0002 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
	    },
	},

	{   /* SUNIX 5056 4S */
	    {   PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0004 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x10, 0x0010 },
		{ PUC_COM_POW2(3), 0x10, 0x0018 },
	    },
	},

	{   /* SUNIX 5066 8S */
	    {   PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0008 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x10, 0x0010 },
		{ PUC_COM_POW2(3), 0x10, 0x0018 },
		{ PUC_COM_POW2(3), 0x14, 0x0000 },
		{ PUC_COM_POW2(3), 0x14, 0x0008 },
		{ PUC_COM_POW2(3), 0x14, 0x0010 },
		{ PUC_COM_POW2(3), 0x14, 0x0018 },
	    },
	},

	{   /* SUNIX 5069 1S / 1P */
	    {   PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0101 },
	    {   0xffff, 0xffff, 0xffff, 0xeff0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_LPT, 0x14, 0x0000 },
	    },
	},

	{   /* SUNIX 5079 2S / 1P */
	    {   PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0102 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_LPT, 0x14, 0x0000 },
	    },
	},

	{   /* SUNIX 5099 4S / 1P */
	    {   PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0104 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0008 },
		{ PUC_COM_POW2(3), 0x10, 0x0010 },
		{ PUC_COM_POW2(3), 0x10, 0x0018 },
		{ PUC_LPT, 0x14, 0x0000 },
	    },
	},

	/*
	 * Boca Research Turbo Serial 654 (4 serial port) card.
	 * Appears to be the same as Chase Research PLC PCI-FAST4 card,
	 * same as Perle PCI-FAST4 Multi-Port serial card
	 */
	{   /* "Boca Turbo Serial 654 - IOP654" */
	    {   PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0x12e0, 0x0031  },
	    {   0xffff, 0xffff,				0xffff, 0xffff  },
	    {
		{ PUC_COM_POW2(2), 0x18, 0x0000 },
		{ PUC_COM_POW2(2), 0x18, 0x0008 },
		{ PUC_COM_POW2(2), 0x18, 0x0010 },
		{ PUC_COM_POW2(2), 0x18, 0x0018 },
	    },
	},

	/*
	 * Boca Research Turbo Serial 658 (8 serial port) card.
	 * Appears to be the same as Chase Research PLC PCI-FAST8 card
	 * same as Perle PCI-FAST8 Multi-Port serial card
	 */
	{   /* "Boca Turbo Serial 658 - IOP658" */
	    {   PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0x12e0, 0x0021  },
	    {   0xffff, 0xffff,				0xffff, 0xffff  },
	    {
		{ PUC_COM_POW2(2), 0x18, 0x0000 },
		{ PUC_COM_POW2(2), 0x18, 0x0008 },
		{ PUC_COM_POW2(2), 0x18, 0x0010 },
		{ PUC_COM_POW2(2), 0x18, 0x0018 },
		{ PUC_COM_POW2(2), 0x18, 0x0020 },
		{ PUC_COM_POW2(2), 0x18, 0x0028 },
		{ PUC_COM_POW2(2), 0x18, 0x0030 },
		{ PUC_COM_POW2(2), 0x18, 0x0038 },
	    },
	},

	/* Cronyx Engineering Ltd. Omega-PCI (8 serial port) card. */
	{    /* "Cronyx Omega-PCI" */
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_CRONYX_OMEGA,	0, 0 },
	    {	0xffff,	0xffff,					0, 0 },
	    {
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0008 },
		{ PUC_COM_POW2(0), 0x18, 0x0010 },
		{ PUC_COM_POW2(0), 0x18, 0x0018 },
		{ PUC_COM_POW2(0), 0x18, 0x0020 },
		{ PUC_COM_POW2(0), 0x18, 0x0028 },
		{ PUC_COM_POW2(0), 0x18, 0x0030 },
		{ PUC_COM_POW2(0), 0x18, 0x0038 },
	    },
	},

	/* PLX 9016 8 port serial card. (i.e. Syba) */
	{    /* "PLX 9016 - Syba" */
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_9016,	0, 0 },
	    {	0xffff,	0xffff,					0, 0 },
	    {
		{ PUC_COM_POW2(2), 0x10, 0x0000 },
		{ PUC_COM_POW2(2), 0x10, 0x0008 },
		{ PUC_COM_POW2(2), 0x10, 0x0010 },
		{ PUC_COM_POW2(2), 0x10, 0x0018 },
		{ PUC_COM_POW2(2), 0x10, 0x0020 },
		{ PUC_COM_POW2(2), 0x10, 0x0028 },
		{ PUC_COM_POW2(2), 0x10, 0x0030 },
		{ PUC_COM_POW2(2), 0x10, 0x0038 },
	    },
	},

	/* Avlab Technology, Inc. Low Profile PCI 4 Serial: 4S */
	{   /* "Avlab Low Profile PCI 4 Serial" */
	    {	PCI_VENDOR_AVLAB, PCI_PRODUCT_AVLAB_LPPCI4S_2,	0, 0  },
	    {	0xffff,	0xffff,					0, 0  },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* Avlab Technology, Inc. Low Profile PCI 4 Serial: 4S */
	{   /* "Avlab Low Profile PCI 4 Serial" */
	    {	PCI_VENDOR_AVLAB, PCI_PRODUCT_AVLAB_LPPCI4S,	0, 0  },
	    {	0xffff,	0xffff,					0, 0  },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},

	/* Avlab Technology, Inc. PCI 2 Serial: 2S */
	{   /* "Avlab PCI 2 Serial" */
	    {	PCI_VENDOR_AVLAB, PCI_PRODUCT_AVLAB_PCI2S,	0, 0  },
	    {	0xffff,	0xffff,					0, 0  },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},

	/* Digi International Digi Neo 4 Serial */
	{
	    {	PCI_VENDOR_DIGI, PCI_PRODUCT_DIGI_NEO4,		0, 0  },
	    {	0xffff, 0xffff,					0, 0  },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0200 },
		{ PUC_COM_POW2(3), 0x10, 0x0400 },
		{ PUC_COM_POW2(3), 0x10, 0x0600 },
	    },
	},

	/* Digi International Digi Neo 8 Serial */
	{
	    {	PCI_VENDOR_DIGI, PCI_PRODUCT_DIGI_NEO8,		0, 0  },
	    {	0xffff, 0xffff,					0, 0  },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0200 },
		{ PUC_COM_POW2(3), 0x10, 0x0400 },
		{ PUC_COM_POW2(3), 0x10, 0x0600 },
		{ PUC_COM_POW2(3), 0x10, 0x0800 },
		{ PUC_COM_POW2(3), 0x10, 0x0a00 },
		{ PUC_COM_POW2(3), 0x10, 0x0c00 },
		{ PUC_COM_POW2(3), 0x10, 0x0e00 },
	    },
	},

	/* Digi International Digi Neo 8 PCIe Serial */
	{
	    {	PCI_VENDOR_DIGI, PCI_PRODUCT_DIGI_NEO8_PCIE,	0, 0  },
	    {	0xffff, 0xffff,					0, 0  },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0200 },
		{ PUC_COM_POW2(3), 0x10, 0x0400 },
		{ PUC_COM_POW2(3), 0x10, 0x0600 },
		{ PUC_COM_POW2(3), 0x10, 0x0800 },
		{ PUC_COM_POW2(3), 0x10, 0x0a00 },
		{ PUC_COM_POW2(3), 0x10, 0x0c00 },
		{ PUC_COM_POW2(3), 0x10, 0x0e00 },
	    },
	},

	/*
	 * Multi-Tech ISI5634PCI/4 4-port modem board.
	 * Has a 4-channel Exar XR17C154 UART, but with bogus product ID in its
	 * config EEPROM.
	 */
	{
	    {   PCI_VENDOR_EXAR, PCI_PRODUCT_EXAR_XR17C158, 0x2205, 0x2003 },
	    {	0xffff,	0xffff,				    0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0200 },
		{ PUC_COM_POW2(3), 0x10, 0x0400 },
		{ PUC_COM_POW2(3), 0x10, 0x0600 },
	    },
	},

	{   /* EXAR XR17C152 Dual UART */
	    {   PCI_VENDOR_EXAR, PCI_PRODUCT_EXAR_XR17C152,	0, 0 },
	    {   0xffff, 0xffff,					0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0200 },
	    },
	},

	{   /* Exar XR17C154 Quad UART */
	    {   PCI_VENDOR_EXAR, PCI_PRODUCT_EXAR_XR17C154,	0, 0 },
	    {   0xffff, 0xffff,					0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0200 },
		{ PUC_COM_POW2(3), 0x10, 0x0400 },
		{ PUC_COM_POW2(3), 0x10, 0x0600 },
	    },
	},

	{   /* Exar XR17C158 Eight Channel UART */
	    {   PCI_VENDOR_EXAR, PCI_PRODUCT_EXAR_XR17C158,	0, 0 },
	    {   0xffff, 0xffff,					0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0200 },
		{ PUC_COM_POW2(3), 0x10, 0x0400 },
		{ PUC_COM_POW2(3), 0x10, 0x0600 },
		{ PUC_COM_POW2(3), 0x10, 0x0800 },
		{ PUC_COM_POW2(3), 0x10, 0x0a00 },
		{ PUC_COM_POW2(3), 0x10, 0x0c00 },
		{ PUC_COM_POW2(3), 0x10, 0x0e00 },
	    },
	},

	{   /* Exar XR17V354 Quad UART */
	    {   PCI_VENDOR_EXAR, PCI_PRODUCT_EXAR_XR17V354,	0, 0 },
	    {   0xffff, 0xffff,					0, 0 },
	    {
		{ PUC_COM_POW2(3), 0x10, 0x0000 },
		{ PUC_COM_POW2(3), 0x10, 0x0400 },
		{ PUC_COM_POW2(3), 0x10, 0x0800 },
		{ PUC_COM_POW2(3), 0x10, 0x0C00 },
	    },
	},

	{   /* Dell DRAC 3 Virtual UART */
	    {   PCI_VENDOR_DELL, PCI_PRODUCT_DELL_DRAC_3_VUART,	0, 0 },
	    {   0xffff, 0xffff,					0, 0 },
	    {
		{ PUC_COM_POW2(7), 0x14, 0x0000 },
	    },
	},
	{   /* Dell DRAC 4 Virtual UART */
	    {   PCI_VENDOR_DELL, PCI_PRODUCT_DELL_DRAC_4_VUART,	0, 0 },
	    {   0xffff, 0xffff,					0, 0 },
	    {
		{ PUC_COM_POW2(7), 0x14, 0x0000 },
	    },
	},

	/*
	 * Cardbus devices which can potentially show up because of
	 * Expresscard adapters
	 * XXX Keep this list synchronized with cardbus/com_cardbus.c
	*/

	{   /* "", */
	    {	PCI_VENDOR_3COM, PCI_PRODUCT_3COM_GLOBALMODEM56,0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "", */
	    {	PCI_VENDOR_3COM, PCI_PRODUCT_3COM_MODEM56,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "", */
	    {	PCI_VENDOR_BROADCOM, PCI_PRODUCT_BROADCOM_SERIAL,0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "", */
	    {	PCI_VENDOR_BROADCOM, PCI_PRODUCT_BROADCOM_SERIAL_2,0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "", */
	    {	PCI_VENDOR_BROADCOM, PCI_PRODUCT_BROADCOM_SERIAL_GC,0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "", */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_MODEM56,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "", */
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_OXCB950,0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "Xircom Cardbus 56K Modem", */
	    {	PCI_VENDOR_XIRCOM, PCI_PRODUCT_XIRCOM_MODEM_56K,0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "Xircom CBEM56G Modem", */
	    {	PCI_VENDOR_XIRCOM, PCI_PRODUCT_XIRCOM_CBEM56G,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "Xircom 56k Modem", */
	    {	PCI_VENDOR_XIRCOM, PCI_PRODUCT_XIRCOM_MODEM56,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "WinChipHead CH351 (2S)", */
	    {	PCI_VENDOR_WCH2, PCI_PRODUCT_WCH2_CH351,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},
	{   /* "WinChipHead CH352", */
	    {	PCI_VENDOR_WCH, PCI_PRODUCT_WCH_CH352,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},
	{   /* "WinChipHead CH382 (2S)", */
	    {	PCI_VENDOR_WCH2, PCI_PRODUCT_WCH2_CH382_1,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x00c0 },
		{ PUC_COM_POW2(0), 0x10, 0x00c8 },
	    },
	},
	{   /* "WinChipHead CH382 (2S1P)", */
	    {	PCI_VENDOR_WCH2, PCI_PRODUCT_WCH2_CH382_2,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x00c0 },
		{ PUC_COM_POW2(0), 0x10, 0x00c8 },
	    },
	},
	{   /* "TXIC TX382B (2S)", */
	    {	PCI_VENDOR_TXIC, PCI_PRODUCT_TXIC_TX382B,	0, 0	},
	    {	0xffff, 0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    }
	},
	{   /* "NetMos NM9820 UART" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_NM9820,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "MosChip MCS9865 Quad Serial Port" */
	    {   PCI_VENDOR_MOSCHIP, PCI_PRODUCT_MOSCHIP_MCS9865, 0x1000, 0x4 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
		{ PUC_COM_POW2(0), 0x18, 0x0000 },
		{ PUC_COM_POW2(0), 0x1c, 0x0000 },
	    },
	},
	{   /* "MosChip MCS9865 Dual Serial Port" */
	    {   PCI_VENDOR_MOSCHIP, PCI_PRODUCT_MOSCHIP_MCS9865, 0x1000, 0x2 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x14, 0x0000 },
	    },
	},
	{   /* "MosChip MCS9865 Single Serial Port" */
	    {   PCI_VENDOR_MOSCHIP, PCI_PRODUCT_MOSCHIP_MCS9865, 0x1000, 0x1 },
	    {   0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "Redhat QEMU PCI Serial" */
	    {   PCI_VENDOR_REDHAT, PCI_PRODUCT_REDHAT_SERIAL, 0x0000, 0x0000 },
	    {   0xffff, 0xffff, 0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{   /* "Redhat QEMU PCI Serial 2x" */
	    {   PCI_VENDOR_REDHAT, PCI_PRODUCT_REDHAT_SERIAL2, 0x0000, 0x0000 },
	    {   0xffff, 0xffff, 0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x10, 0x0008 },
	    },
	},
	{   /* "Redhat QEMU PCI Serial 4x" */
	    {   PCI_VENDOR_REDHAT, PCI_PRODUCT_REDHAT_SERIAL4, 0x0000, 0x0000 },
	    {   0xffff, 0xffff, 0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
		{ PUC_COM_POW2(0), 0x10, 0x0008 },
		{ PUC_COM_POW2(0), 0x10, 0x0010 },
		{ PUC_COM_POW2(0), 0x10, 0x0018 },
	    },
	},
};
int puc_ndevs = nitems(puc_devs);
@


1.103
log
@add TXIC TX382B entry.
currtently TX/RX FIFO is not working.

ok by detraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.102 2016/03/15 07:39:27 mlarkin Exp $	*/
d87 14
@


1.102
log
@
Exar XR17V354 puc(4) device, "high speed quad uart".
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.101 2016/01/15 18:57:27 deraadt Exp $	*/
d2168 8
@


1.101
log
@Moxa CP-168U support; from Olaf Schreck
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.100 2015/12/26 22:16:12 kettenis Exp $	*/
d2032 11
@


1.100
log
@Add support for the Perle Speed8 LE.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.99 2015/11/14 14:47:56 miod Exp $	*/
d1414 16
@


1.99
log
@Various *syncron* -> *synchron* typos.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.98 2015/09/06 17:40:54 sf Exp $	*/
d1550 29
@


1.98
log
@Add support for QEMU PCI serial devices in puc(4)

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.97 2015/08/23 23:15:57 deraadt Exp $	*/
d2008 1
a2008 1
	 * XXX Keep this list syncronized with cardbus/com_cardbus.c
@


1.97
log
@Make Atom S1200 UART work; Atanas Vladimirov has one.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.96 2015/03/14 03:38:49 jsg Exp $	*/
d2143 25
@


1.96
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.95 2014/12/07 03:59:25 deraadt Exp $	*/
d200 7
@


1.95
log
@support WCH2 CH351 puc
from Dmitry Alenichev
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.94 2014/09/22 21:16:20 sasano Exp $	*/
a46 1
#include <dev/ic/comreg.h>
@


1.94
log
@add Winchiphead CH382 support.

CH382 has 2S/2S1P/1P configuration, the diff supports 2S/2S1P only
(2S1P works as 2S).

ok by deraadt@@ and kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.93 2014/08/13 07:45:37 jsg Exp $	*/
d2073 8
@


1.93
log
@match on Intel 9 series and 9 series LP PCH, and add 8 series KT to puc
ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.92 2014/02/02 19:25:41 miod Exp $	*/
d2081 16
@


1.92
log
@Brainboxes BB16PCI958. Contributed by Eric Huiban, thanks!
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.91 2014/01/21 03:23:36 deraadt Exp $	*/
d58 1
a58 1
	{	/* Series KT */
d65 28
a171 7
	    {	0xffff, 0xffff,					0x0000, 0x0000 },
	    {
		{ PUC_COM_POW2(0), 0x10, 0x0000 },
	    },
	},
	{	/* 8 Series KT */
	    {	PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_8SERIES_KT, 0x0000, 0x0000 },
@


1.91
log
@Add all the Intel KT's which got missed.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.90 2013/11/09 04:05:58 jsg Exp $	*/
d1136 14
@


1.90
log
@add Intel 8 series kt (amt serial over lan)
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.89 2013/09/28 08:53:41 mlarkin Exp $	*/
d51 3
a53 3
	{   /* Intel GM45 KT */
	    {   PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82GM45_KT, 0x0000, 0x0000 },
	    {	0xffff,	0xffff,				      0x0000, 0x0000 },
d58 3
a60 3
	{   /* Intel 6 Series KT */
	    {   PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_6SERIES_KT, 0x0000, 0x0000 },
	    {	0xffff,	0xffff,				      0x0000, 0x0000 },
d65 3
a67 3
	{   /* Intel 7 Series KT */
	    {   PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_7SERIES_KT, 0x0000, 0x0000 },
	    {	0xffff,	0xffff,				      0x0000, 0x0000 },
d72 80
a151 3
	{   /* Intel 8 Series KT */
	    {   PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_8SERIES_KT, 0x0000, 0x0000 },
	    {	0xffff,	0xffff,				      0x0000, 0x0000 },
@


1.89
log
@

Another puc(4) device based on Oxford chipset found in a Startech
expresscard serial card
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.88 2013/09/21 20:19:32 miod Exp $	*/
d67 7
@


1.88
log
@Oxford OXPCIE952 parallel port puc(4) board; contributed by Markus Uhlin
(markus.uhlin; bredband dot net), thanks!
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.87 2013/04/21 20:46:28 deraadt Exp $	*/
d1043 9
@


1.87
log
@new digi puc; Hugo Lombard
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.86 2013/01/08 02:30:25 deraadt Exp $	*/
d963 9
@


1.86
log
@a single-com in the Exsys EX-4109x family; Gregory Edigarov <edigarov@@qarea.com>
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.85 2012/10/12 21:56:03 sasano Exp $	*/
d1767 16
@


1.85
log
@Added I-O DATA RSA-PCI2 support.
This card is OX16PCI954-based, but uses 14.7456MHz clock
to support 921600bps.

ok by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.84 2012/09/03 14:37:03 jsg Exp $	*/
d639 9
@


1.84
log
@add Intel 7 series kt (amt serial over lan)
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.83 2012/07/12 08:20:52 deraadt Exp $	*/
d970 11
@


1.83
log
@Support NetMos NM9820 cardbus (added to puc as well, for the
adaptor cages and because one day com@@cardbus should be replaced by
puc@@cardbus)
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.82 2012/05/12 15:54:54 kettenis Exp $	*/
d60 7
@


1.82
log
@Adjust for renaming of Intel GM45 Serial-over-LAN device in pcidevs r1.1643.

ok sthen@@, jsg@@, mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.81 2012/05/07 20:43:09 kettenis Exp $	*/
d1901 7
@


1.81
log
@Add support for Intel 6 Series KT (Serial-over-LAN, part of Intel AMT).

ok mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.80 2012/01/09 22:31:51 haesbaert Exp $	*/
d51 2
a52 2
	{   /* Intel GM45 SOL */
	    {   PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_82GM45_AMT_SOL, 0x0000, 0x0000 },
@


1.80
log
@pcidevs
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.79 2012/01/02 11:07:02 sthen Exp $	*/
d53 7
@


1.79
log
@Use the correct multiplier for older SUNIX 406x 8-serial cards. Problem
reported and fix tested by sebastia@@. naddy@@ helped get the ordering right.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.78 2011/10/26 14:20:25 jsg Exp $	*/
d1895 26
a1920 1
	}
@


1.78
log
@Intel EG20T serial, tested by mitja.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.77 2011/10/25 20:02:21 deraadt Exp $	*/
d1440 15
@


1.77
log
@Use a new encoding for the entries in the pucdata table, the result is
that the .o file is half the size.  Tested by camield (who just doubled
the table size recently for a 16-port device).  Hopefully no regressions,
since this is a pretty large change of a very large table.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.76 2011/10/22 19:06:21 camield Exp $	*/
d53 28
@


1.76
log
@Sunix 50xx serial/parallel cards

Bump PUC_MAX_PORTS, the resulting growth of pucdata will be dealt with later.

ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.75 2011/10/09 21:46:32 jsg Exp $	*/
d55 1
a55 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d73 2
a74 2
		{ PUC_PORT_TYPE_LPT, 0x20, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x24, 0x00 },
d93 2
a94 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d112 2
a113 2
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x08, COM_FREQ },
d122 4
a125 4
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x10, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x18, COM_FREQ },
d134 8
a141 8
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x10, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x18, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x20, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x28, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x30, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x38, COM_FREQ },
d149 4
a152 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ }, /* Port C */
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ }, /* Port D */
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ }, /* Port E */
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ }, /* Port F */
d175 1
a175 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
d184 1
a184 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
d193 1
a193 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
d202 2
a203 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
d212 2
a213 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
d222 2
a223 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
d232 1
a232 1
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00 },
d241 2
a242 2
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x20, 0x00 },
d251 2
a252 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d261 2
a262 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d271 2
a272 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d281 3
a283 3
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x20, 0x00 },
d292 3
a294 3
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x20, 0x00 },
d303 3
a305 3
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x20, 0x00 },
d314 4
a317 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ },
d326 4
a329 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ },
d338 4
a341 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ },
d354 1
a354 1
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00 },
d363 2
a364 2
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00 },
d373 3
a375 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x14, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
d384 3
a386 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x14, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
d395 3
a397 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x14, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
d406 1
a406 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d415 1
a415 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d424 1
a424 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d433 2
a434 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x14, 0x00 },
d443 2
a444 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x14, 0x00 },
d453 2
a454 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x14, 0x00 },
d463 2
a464 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d473 2
a474 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d483 2
a484 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d493 3
a495 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00 },
d504 3
a506 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00 },
d515 3
a517 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00 },
d526 4
a529 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d538 4
a541 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d550 4
a553 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d562 8
a569 8
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x10, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x18, COM_FREQ },
d579 4
a582 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 10 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 10 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 10 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 10 },
d592 4
a595 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 8 },
d605 4
a608 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 8 },
d618 4
a621 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 10 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 10 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 10 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 10 },
d632 4
a635 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
d650 8
a657 8
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x20, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x28, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x30, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x38, COM_FREQ },
d668 1
a668 1
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00 },
d680 1
a680 1
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00 },
d694 1
a694 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
d709 2
a710 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
d727 4
a730 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 8 },
d737 4
a740 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 8 },
d752 2
a753 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
d766 1
a766 1
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
d780 1
a780 1
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
d793 2
a794 2
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
d808 2
a809 2
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
d822 3
a824 3
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
d838 4
a841 4
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x08, COM_FREQ * 8 },
d853 8
a860 8
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x18, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x20, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x28, COM_FREQ * 8 },
d871 4
a874 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ },
d894 2
a895 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
d904 2
a905 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d914 1
a914 1
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00, 0x00 },
d924 4
a927 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 10 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 10 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 10 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 10 },
d936 4
a939 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ },
d948 3
a950 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 4 },
d959 4
a962 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d971 1
a971 1
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00, 0x00 },
d983 1
a983 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d992 1
a992 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1001 1
a1001 1
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00 },
d1010 2
a1011 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d1023 2
a1024 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d1036 2
a1037 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 4 },
d1048 1
a1048 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 4 },
d1057 1
a1057 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 4 },
d1066 1
a1066 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1075 1
a1075 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1084 4
a1087 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d1096 4
a1099 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d1108 1
a1108 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1118 1
a1118 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ },
d1127 1
a1127 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1136 4
a1139 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x3e8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x2e8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x3f8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x2f8, COM_FREQ },
d1148 6
a1153 6
		{ PUC_PORT_TYPE_COM, 0x10, 0x2e8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x2f8, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x10, 0x000, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x3e8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x3f8, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x10, 0x000, 0x00 },
d1162 4
a1165 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
d1174 4
a1177 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
d1186 4
a1189 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
d1198 4
a1201 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
d1210 8
a1217 8
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x20, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x28, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x30, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x38, COM_FREQ * 8 },
d1226 1
a1226 1
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00, 0x00 },
d1235 1
a1235 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1244 3
a1246 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
d1255 4
a1258 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d1267 5
a1271 5
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x20, 0x00, 0x00 },
d1280 6
a1285 6
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ },
d1294 2
a1295 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d1308 1
a1308 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1315 4
a1318 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d1327 1
a1327 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1336 1
a1336 1
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00 },
d1344 1
a1344 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1352 2
a1353 2
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00 },
d1365 1
a1365 1
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00, 0x00 },
d1373 2
a1374 2
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
d1382 1
a1382 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
d1390 2
a1391 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
d1399 2
a1400 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
a1403 1

d1408 4
a1411 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ },
d1419 8
a1426 8
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ * 8 },
d1434 3
a1436 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
d1444 4
a1447 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x20, 0x00, 0x00 },
d1455 6
a1460 6
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x20, 0x00, 0x00 },
d1469 2
a1470 2
	    {	PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0100 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
d1472 1
a1472 1
		{ PUC_PORT_TYPE_LPT, 0x14, 0x00, 0x00 },
d1477 2
a1478 2
	    {	PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0010 },
	    {	0xffff,	0xffff,	0xffff,	0xffff },
d1480 16
a1495 16
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x18, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x20, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x28, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x30, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x38, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x40, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x48, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x50, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x58, COM_FREQ * 8 },
d1500 2
a1501 2
	    {	PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0001 },
	    {	0xffff,	0xffff,	0xffff,	0xffff },
d1503 1
a1503 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
d1508 2
a1509 2
	    {	PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0002 },
	    {	0xffff,	0xffff,	0xffff,	0xffff },
d1511 2
a1512 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
d1517 2
a1518 2
	    {	PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0004 },
	    {	0xffff,	0xffff,	0xffff,	0xffff },
d1520 4
a1523 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 8 },
d1528 2
a1529 2
	    {	PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0008 },
	    {	0xffff,	0xffff,	0xffff,	0xffff },
d1531 8
a1538 8
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x18, COM_FREQ * 8 },
d1543 2
a1544 2
	    {	PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0101 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
d1546 2
a1547 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_LPT, 0x14, 0x00, 0x00 },
d1552 2
a1553 2
	    {	PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0102 },
	    {	0xffff,	0xffff,	0xffff,	0xffff },
d1555 3
a1557 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_LPT, 0x14, 0x00, 0x00 },
d1562 2
a1563 2
	    {	PCI_VENDOR_SUNIX2, PCI_PRODUCT_SUNIX2_50XX, 0x1fd4, 0x0104 },
	    {	0xffff,	0xffff,	0xffff,	0xffff },
d1565 5
a1569 5
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_LPT, 0x14, 0x00, 0x00 },
d1582 4
a1585 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 4 },
d1598 8
a1605 8
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x20, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x28, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x30, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x38, COM_FREQ * 4 },
d1614 8
a1621 8
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x20, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x28, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x30, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x38, COM_FREQ },
d1630 8
a1637 8
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x20, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x28, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x30, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x38, COM_FREQ * 4 },
d1646 4
a1649 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d1658 4
a1661 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d1670 2
a1671 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d1680 4
a1683 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x0000, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0200, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0400, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0600, COM_FREQ * 8 },
d1692 8
a1699 8
		{ PUC_PORT_TYPE_COM, 0x10, 0x0000, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0200, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0400, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0600, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0800, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0a00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0c00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0e00, COM_FREQ * 8 },
d1712 4
a1715 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x0000, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0200, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0400, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0600, COM_FREQ * 8 },
d1723 2
a1724 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x0000, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0200, COM_FREQ * 8 },
d1732 4
a1735 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x0000, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0200, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0400, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0600, COM_FREQ * 8 },
d1743 8
a1750 8
		{ PUC_PORT_TYPE_COM, 0x10, 0x0000, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0200, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0400, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0600, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0800, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0a00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0c00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x0e00, COM_FREQ * 8 },
d1758 1
a1758 1
		{ PUC_PORT_TYPE_COM, 0x14, 0x0000, COM_FREQ * 128 },
d1765 1
a1765 1
		{ PUC_PORT_TYPE_COM, 0x14, 0x0000, COM_FREQ * 128 },
d1779 1
a1779 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1786 1
a1786 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1793 1
a1793 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1800 1
a1800 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1807 1
a1807 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1814 1
a1814 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1821 1
a1821 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1828 1
a1828 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1835 1
a1835 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1842 1
a1842 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d1849 2
a1850 11
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
	    },
	},

	{   /* NULL, */

	    {	0,	0,		0, 0	},
	    {	0,	0,		0, 0	},
	    {
		{ 0, 0, 0 },
d1854 1
@


1.75
log
@add support for WCH CH352 serial
tested by Atanas Vladimirov on a CardBus device with one physical port
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.74 2011/04/20 04:58:29 mlarkin Exp $	*/
d1462 109
@


1.74
log
@Support for Intel GM45 SOL (Serial-over-LAN, part of Intel AMT) as a
generic puc(4) device.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.73 2011/03/22 03:56:07 mlarkin Exp $	*/
d1735 8
@


1.73
log
@Support for NetMos Nm9922 dual serial port cards

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.72 2010/07/22 17:16:10 pirofti Exp $	*/
d50 8
@


1.72
log
@Clean the macros from puc(4). Now with correct logic.

Tested and okay sthen@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.71 2010/07/07 21:32:50 sthen Exp $	*/
d1329 8
@


1.71
log
@revert last commit, it made my puc(4) disappear. ok pirofti@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.69 2010/04/27 16:32:53 sthen Exp $	*/
d49 1
a49 1
const struct puc_device_description puc_devices[] = {
@


1.70
log
@Abstraction clean-up. `I like it' deraadt@@.
@
text
@d49 1
a49 1
const struct puc_device_description puc_devs[] = {
@


1.69
log
@Update oxsemi (now plxtech) datasheet URL.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.68 2010/04/21 01:09:13 beck Exp $	*/
d49 1
a49 1
const struct puc_device_description puc_devices[] = {
@


1.68
log
@Add support for PLX I/O 9016 based 8 port serial card
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.67 2010/03/27 21:58:30 kettenis Exp $	*/
d874 1
a874 1
	 * <URL:http://www.oxsemi.com/products/uarts/index.html>
@


1.67
log
@Add support for NetMos 9865 6-port serial cards.

From Alexander Frolkin.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.66 2009/11/23 02:06:38 yuo Exp $	*/
d1498 16
@


1.66
log
@add NetMos NM9901 multiple peripheral board support

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.65 2009/08/11 20:03:56 deraadt Exp $	*/
d1288 23
@


1.65
log
@More exact matching for Sunix 40XX 4 and 8 port units so that we can fix
their baud rate multipliers.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.64 2009/07/23 21:38:48 deraadt Exp $	*/
d1288 18
@


1.64
log
@another lava puc that might show up
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.63 2009/06/26 17:41:29 deraadt Exp $	*/
d1350 1
a1350 1
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
d1361 1
a1361 1
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
d1365 6
a1370 6
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ },
@


1.63
log
@Add all the cardbus com devices to puc, since these can show up on the
pci bus because of the expresscard adaptors... Lacking a better mechanism,
also remind people to keep those lists syncronised.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.62 2009/03/29 22:11:19 deraadt Exp $	*/
d1074 12
@


1.62
log
@Take a shot at baud rate calculations for the 8-port
Serial Technologies Expander PCI-232-108
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.62 2009/03/29 22:08:18 deraadt Exp $	*/
d1573 77
@


1.61
log
@attempt support for a single-port variant of the NetMos NM9835 by looking
at the subsystem id first
ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.60 2009/01/22 13:15:20 jsg Exp $	*/
d575 26
@


1.60
log
@Add support for Moxa CP-104JU, 4xrs232
from/tested by Joerg Niendorf in pr 6053.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.59 2008/11/25 12:37:19 deraadt Exp $	*/
d1181 9
@


1.59
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.58 2008/11/24 23:46:06 kettenis Exp $	*/
d1136 14
a1149 2
	{   /* "Moxa Technologies, SmartIO CP104/PCI" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP104,	0, 0	},
@


1.58
log
@The Exsys EX-1372 uses a 8x clock.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.57 2008/10/02 15:28:07 mbalmer Exp $	*/
d100 1
a100 1
	{   /* "Decision Computer Inc PCCOM 2 Port RS232/422/485", */ 
d110 1
a110 1
	{   /* "Decision Computer Inc PCCOM 4 Port RS232/422/485", */ 
d122 1
a122 1
	{   /* "Decision Computer Inc PCCOM 8 Port RS232/422/485", */ 
d147 1
a147 1
	
d730 1
a730 1
	    {	0xffff, 0xffff,                                         0, 0 },
d774 2
a775 2
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8},
d914 3
a916 3
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ*4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ*4 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ*4 },
d1002 2
a1003 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ*4 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ*4 },
d1014 1
a1014 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ*4 },
d1023 1
a1023 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ*4 },
d1266 1
a1266 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
d1274 2
a1275 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
d1283 2
a1284 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
d1293 4
a1296 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ},
d1304 8
a1311 8
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ},
d1319 2
a1320 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
d1329 2
a1330 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
d1340 4
a1343 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ},
d1481 1
a1481 1
	    {   0xffff, 0xffff, 				0, 0 },
d1501 1
a1501 1
	    {   0xffff, 0xffff, 				0, 0 },
d1516 1
a1516 1
	    {   0xffff, 0xffff, 				0, 0 },
d1523 1
a1523 1
	    {   0xffff, 0xffff, 				0, 0 },
@


1.57
log
@Add the IBM 4810 ("SurePOS 300 Series") SCC to support the four additional
serial ports.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.56 2008/08/22 01:09:08 deraadt Exp $	*/
d853 11
@


1.56
log
@more puc happiness
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.55 2008/05/05 22:25:04 dlg Exp $	*/
d136 12
a147 1

@


1.55
log
@dell drac 3 and 4 virtual uarts are pucs running very fast.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.53 2008/04/23 18:40:01 deraadt Exp $	*/
d1376 12
@


1.54
log
@Adjust for renamed NetMos pcidevs entries.  Add support for more Nm9845
variants and correctly match the 4S variant.

ok deraadt@@
@
text
@d1480 15
@


1.53
log
@support netmos 6 port version; avf@@eldamar.org.uk
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.52 2007/11/09 02:05:16 fgsch Exp $	*/
d1141 9
d1152 1
a1152 1
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_2S1P,	0, 0	},
d1161 16
a1176 4
	/* NetMos 6S PCI 16C650 : 6S, 0P */
	{   /* "NetMos NM9845 6 UART" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_6S, 0x1000, 0x0006},
	    {	0xffff,	0xffff,				  0xffff, 0xffff},
d1182 1
a1182 2
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ },
d1186 4
a1189 4
	/* NetMos 4S PCI 16C650 : 4S, 0P */
	{   /* "NetMos NM9845 Quad UART" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_4S,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d1195 2
d1200 3
a1202 3
	/* NetMos 1P PCI: 1P */
	{   /* "NetMos NM9805 1284 Printer Port" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_1P,	0, 0	},
d1205 2
a1206 1
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00, 0x00 },
d1209 1
@


1.52
log
@Add Exar UARTs XR17C152, XR17C154 and XR17C158.
From Daniel Neri (daniel dot neri at sigicom dot se) via PR/5618.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.51 2007/11/02 16:13:10 henning Exp $	*/
d1149 14
@


1.51
log
@another SIIG Cyber 8S PCI 16C850 variant
From: Kurt Mosiejczuk <kurt-openbsd-tech@@se.rit.edu>
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.50 2007/10/22 09:37:35 otto Exp $	*/
d1390 52
@


1.50
log
@Add SUNIX 4036A 2 port serial card. Sadly it does not conform to
the SUNIX subsystem numbering scheme used on other cards, so it
needs its own entry; ok fgsch@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.49 2007/10/11 17:35:57 sthen Exp $	*/
d551 26
@


1.49
log
@Add device ID used by Commell MP-954GPS

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.48 2007/06/08 12:44:41 mbalmer Exp $	*/
d1192 10
@


1.48
log
@Add support for the Digi Neo 8-port serial adapter.

Patch from Pedro Almeida <palmeida@@securenetworks.pt>, with some minor
changes by me (man page).

ok jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.47 2007/03/18 15:31:15 mickey Exp $	*/
d858 11
@


1.47
log
@OX16PCI954K is a puc@@cardbus (missed in the previous puc@@cardbus commits)
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.46 2006/12/28 20:52:36 miod Exp $	*/
d1328 15
@


1.46
log
@Add support for the Cronyx Omega serial ports card; this particular card
forces the com(4) uart type to ST16C654 since that's what's on it;
from Alexei G. Malinin (alexei.malinin@@inetcomm.ru)
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.45 2006/12/21 18:53:26 deraadt Exp $	*/
d858 12
@


1.45
log
@support Avlab PCI 2S as a puc; from nicm__@@ntlworld.com
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.44 2006/11/08 17:46:54 mcbride Exp $	*/
d1263 16
@


1.44
log
@Add support for Decision Computer multiport serial cards.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.43 2006/06/15 15:29:25 jason Exp $	*/
d1275 10
@


1.43
log
@oxford 16pci954/siig 2050 has a 10x clock (why?!)
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.42 2005/11/02 17:08:22 deraadt Exp $	*/
d95 41
@


1.42
log
@2 more puc devices by oxford
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.41 2005/10/26 17:09:23 deraadt Exp $	*/
d792 13
@


1.41
log
@new digi puc; bsw71@@mail.ru
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.40 2005/03/07 13:28:26 deraadt Exp $	*/
d767 50
d857 3
a859 3
         * Lava Computers Quattro-PCI serial ports.
         * A second version of the Quattro-PCI with different PCI ids.
         */
d1073 2
a1074 2
                { PUC_PORT_TYPE_LPT, 0x10, 0x00 },
                { PUC_PORT_TYPE_LPT, 0x18, 0x00 },
@


1.40
log
@new netmos parallel puc; pawel@@rogocz.com
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.39 2004/11/21 03:56:44 deraadt Exp $	*/
d1171 12
@


1.39
log
@a single port com puc from lava
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.38 2004/08/18 19:58:14 millert Exp $	*/
d1011 8
@


1.38
log
@Fix last commit, all 4 com ports use the same frequency.  Prompted
by a comment from henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.36 2004/06/18 14:54:09 henning Exp $	*/
d829 11
@


1.37
log
@Add NetMos 4S (4 port serial)
@
text
@d988 1
a988 1
	/* NetMos 4S PCI 16C650 : 4S */
d995 2
a996 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ * 4 },
@


1.36
log
@Avlab PCI 4 Serial, takashi@@crazyhack.net in PR3823
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.35 2004/05/14 16:39:25 henning Exp $	*/
d985 12
@


1.35
log
@Syba SD-LAB PCI I/O Card 4S
From: Christian Gut <cycloon@@is-root.org>
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.34 2004/04/17 17:53:46 deraadt Exp $	*/
d1128 12
@


1.34
log
@oops, it is on the 2nd ID
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.33 2004/04/17 17:52:03 deraadt Exp $	*/
d896 12
@


1.33
log
@exsys EX41098
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.32 2004/03/10 00:47:50 deraadt Exp $	*/
d756 1
a756 1
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD_EXSYS_EX41098,	0, 0 },
@


1.32
log
@new vscom puc; toni.tiveron@@tiscali.it
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.31 2003/12/09 23:06:56 deraadt Exp $	*/
d749 14
@


1.31
log
@new moxa puc
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.30 2003/08/06 22:07:37 deraadt Exp $	*/
d510 14
@


1.30
log
@typo
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.29 2003/08/02 17:15:01 deraadt Exp $	*/
d900 12
@


1.29
log
@2nd port location was incorrect; bde@@freebsd
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.28 2003/06/27 10:04:53 henning Exp $	*/
d844 1
a844 1
	{   /* "US Robotics (3Com) 3CP5609 PCI 16550 Modem", */
@


1.28
log
@add support for a whole bunch of sunix cards
mostly from NetBSD
prodded and tested by henric
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.27 2003/06/25 09:09:53 henning Exp $	*/
a620 4
	 * strange things with the second port, either my card is simply
	 * broken or something really strange is going on.
	 * second port does not work at all. I'll request another one for
	 * further testing.
d627 1
a627 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
@


1.27
log
@a bit whitespace/tab KNF while I'm here
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.26 2003/06/25 09:06:07 henning Exp $	*/
d949 88
a1036 4
	/* Sunix 4065A : 8-port */
	{   /* "Sunix 4065A : 8-port" */
	    {   PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_4065A,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d1038 6
a1043 8
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x1A, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x1A, 0x00, COM_FREQ * 8 },
@


1.26
log
@support Moxa C104H
from Raul Aldaz <raul.aldaz at grupocarreras.com> with minor polishing by me,
thanks!
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.25 2003/02/11 19:20:28 mickey Exp $	*/
d679 1
a679 1
	 * of either 14.7456MHz or 1.8432MHz. By default it runs at 
d684 1
a684 1
	    {	0xffff, 0xffff,					    	0, 0 },
d698 1
a698 1
	    {	0xffff, 0xffff,					    	0, 0 },
d802 1
a802 1
	    {	
d944 2
a945 2
                { PUC_PORT_TYPE_LPT, 0x10, 0x00 },                              
                { PUC_PORT_TYPE_LPT, 0x18, 0x00 },                              
d978 1
a978 1
	    }, 
d998 1
a998 1
	    }, 
@


1.25
log
@be consistant on Hz vs hz
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.24 2002/11/30 01:11:46 fgsch Exp $	*/
d892 12
@


1.24
log
@SUNIX 4018A 2-port parallel; from Juan Vera.
indent while i'm here.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.22 2002/06/02 10:08:38 deraadt Exp $	*/
d592 2
a593 2
	 * device ID 3 and PCI device 1 device ID 4. Uses a 14.7456 Mhz crystal
	 * instead of the standart 1.8432Mhz.
@


1.23
log
@add support for
Boca Turbo Serial 654 (4 port serial)
Boca Turbo Serial 658 (8 port)

from Andrey Smagin with a little help by me

ok deraadt@@
@
text
@d62 2
a63 2
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_9050,		0xd84d,	0x6810	},
	    {	0xffff,	0xffff,					0xffff,	0xffff	},
d82 2
a83 2
	    {	PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,		0xd84d,	0x6808	},
	    {	0xffff,	0xffff,					0xffff,	0xffff	},
d112 2
a113 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1000,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d121 2
a122 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1001,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d130 2
a131 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1002,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d139 2
a140 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1010,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d149 2
a150 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1011,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d159 2
a160 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1012,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d169 2
a170 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1020,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d178 2
a179 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1021,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d188 2
a189 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1030,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d198 2
a199 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1031,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d208 2
a209 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1032,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d218 2
a219 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1034,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d229 2
a230 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1035,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d240 2
a241 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1036,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d251 2
a252 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1050,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d263 2
a264 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1051,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d275 2
a276 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1052,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d291 2
a292 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2020,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d300 2
a301 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2021,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d310 2
a311 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2040,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d321 2
a322 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2041,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d332 2
a333 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2042,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d343 2
a344 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2000,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d352 2
a353 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2001,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d361 2
a362 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2002,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d370 2
a371 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2010,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d380 2
a381 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2011,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d390 2
a391 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2012,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d400 2
a401 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2030,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d410 2
a411 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2031,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d420 2
a421 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2032,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d430 2
a431 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2060,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d441 2
a442 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2061,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d452 2
a453 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2062,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d463 2
a464 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2050,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d475 2
a476 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2051,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d487 2
a488 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2052,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d499 2
a500 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2081,			0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d521 2
a522 2
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_1076,		0x10b5,	0x1076	},
	    {	0xffff,	0xffff,					0xffff,	0xffff	},
d539 2
a540 2
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_VSCOM_PCI011H,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d551 2
a552 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCIx10H,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d565 2
a566 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI100H,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d580 2
a581 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200H,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d598 2
a599 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800H_0,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d608 2
a609 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800H_1,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d627 2
a628 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200HV2,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d641 2
a642 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI010L,    0, 0	},
	    {	0xffff, 0xffff,                                         0, 0	},
d655 2
a656 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI100L,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d668 2
a669 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI110L,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d683 2
a684 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200L,	0, 0	},
	    {	0xffff, 0xffff,					    	0, 0	},
d697 2
a698 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI210L,	0, 0	},
	    {	0xffff, 0xffff,					    	0, 0	},
d713 2
a714 2
	    {	PCI_VENDOR_MOLEX, PCI_PRODUCT_MOLEX_VSCOM_PCI400L,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d728 2
a729 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800L,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d747 2
a748 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_MARTH,		0x1033,	0x8014	},
	    {	0xffff,	0xffff,					0xffff,	0xffff	},
d754 1
a754 1
	/*NEC PK-UG-X008 */
d756 2
a757 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_PKUG,		0x1033,	0x8012	},
	    {	0xffff,	0xffff,					0xffff,	0xffff	},
d765 2
a766 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_1P,		0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d774 2
a775 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_2S,		0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d787 2
a788 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_QUATTRO_AB2,		0, 0	},
	    {	0xffff,	0xfffe,						0, 0	},
d795 4
a798 1
	/* Lava Computers LavaPort-Dual and LavaPort-Quad 4*clock PCI serial ports */
d800 2
a801 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_LAVAPORT_0,		0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d810 2
a811 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_650,			0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d819 2
a820 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_0,		0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d828 2
a829 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_1,		0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d837 2
a838 2
	    {   PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_OCTOPUS550_0,		0, 0	},
	    {   0xffff, 0xfffc,						0, 0	},
d849 2
a850 2
	    {	PCI_VENDOR_USR, PCI_PRODUCT_USR_3CP5610,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d859 2
a860 2
	    {	PCI_VENDOR_LUCENT, PCI_PRODUCT_LUCENT_VENUSMODEM, 	0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d868 2
a869 2
	    {	PCI_VENDOR_TOPIC, PCI_PRODUCT_TOPIC_5634PCV,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d877 2
a878 2
	    {   PCI_VENDOR_SYBA, PCI_PRODUCT_SYBA_4S2P,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d891 2
a892 2
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP114,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d903 2
a904 2
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_C168H,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d919 2
a920 2
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_2S1P,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d928 9
d939 2
a940 2
	    {   PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_4065A,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d959 2
a960 2
	    {   PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,           0x12e0, 0x0031  },
	    {   0xffff, 0xffff,                                 0xffff, 0xffff  },
d975 2
a976 2
	    {   PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,           0x12e0, 0x0021  },
	    {   0xffff, 0xffff,                                 0xffff, 0xffff  },
@


1.22
log
@missing first port on titan 800L; noted via seb@@script.jussieu.fr
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.21 2002/05/27 07:08:12 deraadt Exp $	*/
d939 36
@


1.21
log
@sunix is 8x speed serial
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.20 2002/04/29 22:30:34 mickey Exp $	*/
d731 1
@


1.20
log
@a couple more suzies from lava; from Richard Browne <richb@@timestone.com.au>
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.19 2002/03/22 23:29:50 deraadt Exp $	*/
d929 8
a936 8
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1A, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1A, 0x00, COM_FREQ },
@


1.19
log
@my guess at a sunix puc; the tester disappeared
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.18 2002/02/17 19:24:56 deraadt Exp $	*/
d775 13
@


1.18
log
@new puc devices: netmos, moxa, syba
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.17 2001/11/23 04:18:22 deraadt Exp $	*/
d908 16
@


1.17
log
@new vscom puc devices; lists-openbsdtech@@bsws.de
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.16 2001/11/18 20:43:35 deraadt Exp $	*/
d61 1
a61 1
	{   /* "Dolphin Peripherals 4014", */
d81 1
a81 1
	{   /* "Dolphin Peripherals 4035", */
d850 1
a850 2
	{   /* "Topic/SmartLink 5634PCV SurfRider", */
	    /* "Topic/SmartLink 5634PCV SurfRider" */
d855 53
@


1.17.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.17 2001/11/23 04:18:22 deraadt Exp $	*/
d61 1
a61 1
	{   /* "Dolphin Peripherals 4014" */
d81 1
a81 1
	{   /* "Dolphin Peripherals 4035" */
a730 1
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
a780 13
	/*
         * Lava Computers Quattro-PCI serial ports.
         * A second version of the Quattro-PCI with different PCI ids.
         */
	{   /* "Lava Computers Quattro-PCI 4-port serial", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_QUATTRO_AB2,		0, 0	},
	    {	0xffff,	0xfffe,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
	    },
	},

d850 2
a851 1
	{   /* "Topic/SmartLink 5634PCV SurfRider" */
a855 69
	    },
	},

	/* SD-LAB PCI I/O Card 4S2P */
	{   /* "Syba Tech Ltd. PCI-4S2P-550-ECP" */
	    {   PCI_VENDOR_SYBA, PCI_PRODUCT_SYBA_4S2P,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x2e8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x2f8, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x10, 0x000, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x3e8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x3f8, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x10, 0x000, 0x00 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 4S RS232/422/485 */
	{   /* "Moxa Technologies, Industio CP-114" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP114,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 8S RS232 */
	{   /* "Moxa Technologies, Industio C168H" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_C168H,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x20, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x28, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x30, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x38, COM_FREQ * 8 },
	    },
	},

	/* NetMos 2S1P PCI 16C650 : 2S, 1P */
	{   /* "NetMos NM9835 Dual UART and 1284 Printer port" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_2S1P,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
	    },
	},

	/* Sunix 4065A : 8-port */
	{   /* "Sunix 4065A : 8-port" */
	    {   PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_4065A,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x1A, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x1A, 0x00, COM_FREQ * 8 },
@


1.17.2.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.17.2.1 2002/06/11 03:42:27 art Exp $	*/
a938 36
	},

	/*
	 * Boca Research Turbo Serial 654 (4 serial port) card.
	 * Appears to be the same as Chase Research PLC PCI-FAST4 card,
	 * same as Perle PCI-FAST4 Multi-Port serial card
	 */
	{   /* "Boca Turbo Serial 654 - IOP654" */
	    {   PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,           0x12e0, 0x0031  },
	    {   0xffff, 0xffff,                                 0xffff, 0xffff  },
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 4 },
	    }, 
	},

	/*
	 * Boca Research Turbo Serial 658 (8 serial port) card.
	 * Appears to be the same as Chase Research PLC PCI-FAST8 card
	 * same as Perle PCI-FAST8 Multi-Port serial card
	 */
	{   /* "Boca Turbo Serial 658 - IOP658" */
	    {   PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,           0x12e0, 0x0021  },
	    {   0xffff, 0xffff,                                 0xffff, 0xffff  },
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x20, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x28, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x30, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x38, COM_FREQ * 4 },
	    }, 
@


1.17.2.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d62 2
a63 2
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_9050,	0xd84d,	0x6810	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d82 2
a83 2
	    {	PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0xd84d,	0x6808	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d112 2
a113 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1000,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d121 2
a122 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1001,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d130 2
a131 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1002,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d139 2
a140 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1010,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d149 2
a150 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1011,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d159 2
a160 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1012,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d169 2
a170 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1020,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d178 2
a179 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1021,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d188 2
a189 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1030,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d198 2
a199 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1031,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d208 2
a209 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1032,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d218 2
a219 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1034,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d229 2
a230 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1035,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d240 2
a241 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1036,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d251 2
a252 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1050,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d263 2
a264 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1051,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d275 2
a276 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1052,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d291 2
a292 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2020,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d300 2
a301 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2021,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d310 2
a311 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2040,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d321 2
a322 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2041,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d332 2
a333 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2042,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d343 2
a344 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2000,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d352 2
a353 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2001,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d361 2
a362 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2002,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d370 2
a371 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2010,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d380 2
a381 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2011,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d390 2
a391 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2012,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d400 2
a401 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2030,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d410 2
a411 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2031,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d420 2
a421 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2032,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d430 2
a431 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2060,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d441 2
a442 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2061,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d452 2
a453 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2062,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d463 2
a464 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2050,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d475 2
a476 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2051,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d487 2
a488 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2052,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d499 2
a500 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2081,		0, 0	},
	    {	0xffff, 0xffff,					0, 0	},
d521 2
a522 2
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_1076,	0x10b5,	0x1076	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d539 2
a540 2
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_VSCOM_PCI011H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d551 2
a552 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCIx10H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d565 2
a566 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI100H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d580 2
a581 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d592 2
a593 2
	 * device ID 3 and PCI device 1 device ID 4. Uses a 14.7456 MHz crystal
	 * instead of the standart 1.8432MHz.
d598 2
a599 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800H_0,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d608 2
a609 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800H_1,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d627 2
a628 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200HV2,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d641 2
a642 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI010L,    0, 0 },
	    {	0xffff, 0xffff,                                         0, 0 },
d655 2
a656 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI100L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d668 2
a669 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI110L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d683 2
a684 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200L,	0, 0 },
	    {	0xffff, 0xffff,					    	0, 0 },
d697 2
a698 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI210L,	0, 0 },
	    {	0xffff, 0xffff,					    	0, 0 },
d713 2
a714 2
	    {	PCI_VENDOR_MOLEX, PCI_PRODUCT_MOLEX_VSCOM_PCI400L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d728 2
a729 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d747 2
a748 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_MARTH,	0x1033,	0x8014	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d754 1
a754 1
	/* NEC PK-UG-X008 */
d756 2
a757 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_PKUG,	0x1033,	0x8012	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d765 2
a766 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_1P,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d774 2
a775 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_2S,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d787 2
a788 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_QUATTRO_AB2,	0, 0	},
	    {	0xffff,	0xfffe,					0, 0	},
d795 1
a795 4
	/*
	 * Lava Computers LavaPort-Dual and LavaPort-Quad 4*clock PCI
	 * serial ports.
	 */
d797 2
a798 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_LAVAPORT_0,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d807 2
a808 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_650,		0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d816 2
a817 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_0,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d825 2
a826 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_1,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d834 2
a835 2
	    {   PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_OCTOPUS550_0,	0, 0	},
	    {   0xffff, 0xfffc,					0, 0	},
d846 2
a847 2
	    {	PCI_VENDOR_USR, PCI_PRODUCT_USR_3CP5610,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d856 2
a857 2
	    {	PCI_VENDOR_LUCENT, PCI_PRODUCT_LUCENT_VENUSMODEM,	0, 0 },
	    {	0xffff,	0xffff,						0, 0 },
d865 2
a866 2
	    {	PCI_VENDOR_TOPIC, PCI_PRODUCT_TOPIC_5634PCV,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d874 2
a875 2
	    {   PCI_VENDOR_SYBA, PCI_PRODUCT_SYBA_4S2P,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d888 2
a889 2
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP114,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d900 2
a901 2
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_C168H,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d916 2
a917 2
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_2S1P,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
a924 9
	{ /* Sunix 4018A : 2-port parallel */
	    {   PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_4018A,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
                { PUC_PORT_TYPE_LPT, 0x10, 0x00 },                              
                { PUC_PORT_TYPE_LPT, 0x18, 0x00 },                              
	    },
	},

d927 2
a928 2
	    {   PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_4065A,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d947 2
a948 2
	    {   PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0x12e0, 0x0031  },
	    {   0xffff, 0xffff,				0xffff, 0xffff  },
d963 2
a964 2
	    {   PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0x12e0, 0x0021  },
	    {   0xffff, 0xffff,				0xffff, 0xffff  },
@


1.16
log
@vscom pci-200h
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.15 2001/11/08 19:53:28 mickey Exp $	*/
d82 2
a83 2
	    {	PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0xd84d,	0x6808	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d112 2
a113 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1000,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d121 2
a122 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1001,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d130 2
a131 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1002,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d139 2
a140 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1010,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d149 2
a150 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1011,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d159 2
a160 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1012,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d169 2
a170 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1020,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d178 2
a179 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1021,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d188 2
a189 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1030,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d198 2
a199 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1031,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d208 2
a209 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1032,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d218 2
a219 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1034,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d229 2
a230 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1035,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d240 2
a241 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1036,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d251 2
a252 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1050,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d263 2
a264 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1051,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d275 2
a276 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1052,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d291 2
a292 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2020,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d300 2
a301 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2021,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d310 2
a311 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2040,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d321 2
a322 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2041,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d332 2
a333 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2042,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d343 2
a344 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2000,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d352 2
a353 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2001,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d361 2
a362 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2002,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d370 2
a371 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2010,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d380 2
a381 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2011,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d390 2
a391 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2012,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d400 2
a401 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2030,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d410 2
a411 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2031,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d420 2
a421 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2032,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d430 2
a431 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2060,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d441 2
a442 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2061,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d452 2
a453 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2062,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d463 2
a464 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2050,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d475 2
a476 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2051,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d487 2
a488 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2052,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d499 2
a500 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2081,	0,	0	},
	    {	0xffff, 0xffff,				0,	0	},
d521 2
a522 2
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_1076,	0x10b5,	0x1076	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d536 56
a591 2
	 * Titan PCI-800H. Uses 8 16950 UART, behind a PCI chips that offers
	 * 4 com port on PCI device 0 and 4 on PCI device 1. PCI device 0 has
d594 2
d597 1
a597 1
	{   /* "VScom PCI-800H", */
d607 1
a607 1
	{   /* "VScom PCI-800H", */
d619 58
d679 2
a680 2
	 * of either 14.7456MHz or 1.8432MHz. By default it runs at the
	 * latter.  If pins 2 & 3 are shorted, use COM_FREQ * 8 instead.
d686 2
a687 2
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
d692 3
a694 2
	 * VScom PCI-200H uses a 14.7456 Mhz crystal instead of the standard
	 * 1.8432Mhz.
d696 2
a697 2
	{   /* "VScom PCI-200H with 2 x 16950 UARTS" */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200H,	0, 0	},
d700 38
a737 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
d741 4
a744 2
	/* NEC PK-UG-X001 K56flex PCI Modem card.
	   NEC MARTH bridge chip and Rockwell RCVDL56ACF/SP using. */
d746 2
a747 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_MARTH,	0x1033,	0x8014	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d755 2
a756 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_PKUG,	0x1033,	0x8012	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d764 2
a765 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_1P,	0,	0	},
	    {	0xffff,	0xfffc,					0,	0	},
d773 2
a774 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_2S,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
d783 3
a785 3
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_LAVAPORT_0,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
	    {
d793 2
a794 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_650,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
d802 2
a803 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_0,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
d811 2
a812 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_1,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
d820 2
a821 2
	    {   PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_OCTOPUS550_0, 0,      0       },
	    {   0xffff, 0xfffc,				 0,      0       },
d832 2
a833 2
	    {	PCI_VENDOR_USR, PCI_PRODUCT_USR_3CP5610,	0,	0	},
	    {	0xffff,	0xffff,					0,	0	},
d842 2
a843 2
	    {	PCI_VENDOR_LUCENT, PCI_PRODUCT_LUCENT_VENUSMODEM, 0,	0	},
	    {	0xffff,	0xffff,					0,	0	},
d852 2
a853 2
	    {	PCI_VENDOR_TOPIC, PCI_PRODUCT_TOPIC_5634PCV,	0,	0	},
	    {	0xffff,	0xffff,					0,	0	},
d861 2
a862 2
	    {	0,	0,	0,	0	},
	    {	0,	0,	0,	0	},
@


1.15
log
@it is octopussy 550, not 950
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.14 2001/08/11 09:47:12 deraadt Exp $	*/
d574 13
@


1.14
log
@document the fast thingy on the VScom PCI-200L
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.13 2001/08/05 10:05:36 deraadt Exp $	*/
d654 1
a654 1
	    {   PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_OCTOPUS950_0, 0,      0       },
@


1.13
log
@VScom PCI 200-L; lmoore@@starwon.com.au
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.12 2001/04/29 17:30:54 deraadt Exp $	*/
d562 6
@


1.12
log
@another puc
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.11 2001/03/28 21:04:29 deraadt Exp $	*/
d559 9
@


1.11
log
@lavaport 650
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.10 2001/03/28 18:10:54 deraadt Exp $	*/
d665 10
@


1.10
log
@new SIIG 8-port; apriori@@world.std.com
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.9 2001/03/15 17:52:20 deraadt Exp $	*/
d607 9
@


1.9
log
@support puc devices with higher speeds (not tested yet)
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.8 2001/03/05 15:02:20 deraadt Exp $	*/
d497 15
@


1.8
log
@fix order
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.7 2001/03/02 09:36:22 deraadt Exp $	*/
d47 1
d85 2
a86 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d115 1
a115 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
d124 1
a124 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
d133 1
a133 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
d142 1
a142 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
d152 1
a152 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
d162 1
a162 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
d191 2
a192 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d201 2
a202 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d211 2
a212 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d221 2
a222 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d232 2
a233 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d243 2
a244 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d254 4
a257 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00 },
d266 4
a269 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00 },
d278 4
a281 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00 },
d313 1
a313 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d324 1
a324 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d335 1
a335 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d346 1
a346 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d355 1
a355 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d364 1
a364 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d373 1
a373 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d383 1
a383 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d393 1
a393 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d403 2
a404 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
d413 2
a414 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
d423 2
a424 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
d433 2
a434 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
d444 2
a445 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
d455 2
a456 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
d466 4
a469 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d478 4
a481 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d490 4
a493 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d509 35
a543 8
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x20 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x28 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x30 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x38 },
d553 1
a553 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d562 1
a562 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d580 12
a591 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
d600 1
a600 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d609 1
a609 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d618 4
a621 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00 },
d630 1
a630 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
d640 1
a640 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x08 },
@


1.7
log
@new lava
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.6 2000/09/14 18:50:20 deraadt Exp $	*/
d566 9
a583 9
	    },
	},

	/* Koutech IOFLEX-2S PCI Dual Port Serial, port 2 */
	{   /* "Koutech IOFLEX-2S PCI Dual Port Serial, port 2", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_1,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00 },
@


1.6
log
@more lava; moride@@portside.net has one
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.5 2000/09/11 21:23:25 deraadt Exp $	*/
d540 1
a540 1
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_PARALLEL,	0,	0	},
d549 1
a549 1
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_SERIAL,	0,	0	},
d559 1
a559 1
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_SERIAL1,	0,	0	},
d566 12
d580 1
a580 1
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_SERIAL2,	0,	0	},
@


1.5
log
@another card with this chipset
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.4 2000/08/08 17:01:25 deraadt Exp $	*/
d554 18
@


1.4
log
@use PCI_VENDOR_* and PCI_PRODUCT_*_* names
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.3 2000/07/27 19:26:01 deraadt Exp $	*/
d568 1
@


1.3
log
@more puc devices, including IBM 33L4618: AT&T/Lucent Venus Modem offset from kaspar.toomik@@personalchemistry.com
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.2 1999/11/14 01:27:57 downsj Exp $	*/
d46 1
d61 2
a62 2
	    {	0x10b5,	0x9050,	0xd84d,	0x6810	},
	    {	0xffff,	0xffff,	0xffff,	0xffff	},
d81 2
a82 2
	    {	0x10b5,	0x9050,	0xd84d,	0x6808	},
	    {	0xffff,	0xffff,	0xffff,	0xffff	},
d111 2
a112 2
	    {	0x131f,	0x1000,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d120 2
a121 2
	    {	0x131f,	0x1001,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d129 2
a130 2
	    {	0x131f,	0x1002,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d138 2
a139 2
	    {	0x131f,	0x1010,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d148 2
a149 2
	    {	0x131f,	0x1011,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d158 2
a159 2
	    {	0x131f,	0x1012,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d168 2
a169 2
	    {	0x131f,	0x1020,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d177 2
a178 2
	    {	0x131f,	0x1021,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d187 1
a187 1
	    {	0x131f,	0x1030,	0,	0	},
d197 2
a198 2
	    {	0x131f,	0x1031,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d207 2
a208 2
	    {	0x131f,	0x1032,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d217 2
a218 2
	    {	0x131f,	0x1034,	0,	0	},	/* XXX really? */
	    {	0xffff,	0xffff,	0,	0	},
d228 2
a229 2
	    {	0x131f,	0x1035,	0,	0	},	/* XXX really? */
	    {	0xffff,	0xffff,	0,	0	},
d239 2
a240 2
	    {	0x131f,	0x1036,	0,	0	},	/* XXX really? */
	    {	0xffff,	0xffff,	0,	0	},
d250 2
a251 2
	    {	0x131f,	0x1050,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d262 2
a263 2
	    {	0x131f,	0x1051,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d274 2
a275 2
	    {	0x131f,	0x1052,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d290 2
a291 2
	    {	0x131f,	0x2020,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d299 2
a300 2
	    {	0x131f,	0x2021,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d309 2
a310 2
	    {	0x131f,	0x2040,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d320 2
a321 2
	    {	0x131f,	0x2041,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d331 2
a332 2
	    {	0x131f,	0x2042,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d342 2
a343 2
	    {	0x131f,	0x2000,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d351 2
a352 2
	    {	0x131f,	0x2001,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d360 2
a361 2
	    {	0x131f,	0x2002,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d369 2
a370 2
	    {	0x131f,	0x2010,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d379 2
a380 2
	    {	0x131f,	0x2011,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d389 2
a390 2
	    {	0x131f,	0x2012,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d399 2
a400 2
	    {	0x131f,	0x2030,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d409 2
a410 2
	    {	0x131f,	0x2031,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d419 2
a420 2
	    {	0x131f,	0x2032,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d429 2
a430 2
	    {	0x131f,	0x2060,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d440 2
a441 2
	    {	0x131f,	0x2061,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d451 2
a452 2
	    {	0x131f,	0x2062,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d462 2
a463 2
	    {	0x131f,	0x2050,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d474 2
a475 2
	    {	0x131f,	0x2051,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d486 2
a487 2
	    {	0x131f,	0x2052,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d505 2
a506 2
	    {	0x10b5,	0x1076,	0x10b5,	0x1076	},
	    {	0xffff,	0xffff,	0xffff,	0xffff	},
d522 2
a523 2
	    {	0x1033,	0x0074,	0x1033,	0x8014	},
	    {	0xffff,	0xffff,	0xffff,	0xffff	},
d531 2
a532 2
	    {	0x1033,	0x007d,	0x1033,	0x8012	},
	    {	0xffff,	0xffff,	0xffff,	0xffff	},
d538 1
a538 1
	/* Lava Computers 2SP-PCI */
d540 2
a541 2
	    {	0x1407,	0x8000,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d549 2
a550 2
	    {	0x1407,	0x0100,	0,	0	},
	    {	0xffff,	0xfffc,	0,	0	},
d559 2
a560 2
	    {	0x12b9,	0x1008,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d568 2
a569 2
	    {	0x11c1,	0x0480,	0,	0	},
	    {	0xffff,	0xffff,	0,	0	},
d576 1
@


1.2
log
@Kill the overly verbose description strings, add another device.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.1 1999/10/26 13:06:14 downsj Exp $	*/
d525 46
@


1.2.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.11 2001/03/28 21:04:29 deraadt Exp $	*/
a45 2
#include <dev/pci/pcidevs.h>
#include <dev/ic/comreg.h>
d60 2
a61 2
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_9050,		0xd84d,	0x6810	},
	    {	0xffff,	0xffff,					0xffff,	0xffff	},
d80 2
a81 2
	    {	PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0xd84d,	0x6808	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d83 2
a84 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d110 2
a111 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1000,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d113 1
a113 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
d119 2
a120 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1001,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d122 1
a122 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
d128 2
a129 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1002,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d131 1
a131 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
d137 2
a138 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1010,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d140 1
a140 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
d147 2
a148 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1011,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d150 1
a150 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
d157 2
a158 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1012,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d160 1
a160 1
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
d167 2
a168 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1020,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d176 2
a177 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1021,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d186 1
a186 1
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1030,	0,	0	},
d189 2
a190 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d196 2
a197 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1031,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d199 2
a200 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d206 2
a207 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1032,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d209 2
a210 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d216 2
a217 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1034,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d219 2
a220 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d227 2
a228 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1035,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d230 2
a231 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d238 2
a239 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1036,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d241 2
a242 2
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d249 2
a250 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1050,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d252 4
a255 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ },
d261 2
a262 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1051,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d264 4
a267 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ },
d273 2
a274 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1052,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d276 4
a279 4
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ },
d289 2
a290 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2020,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d298 2
a299 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2021,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d308 2
a309 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2040,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d311 1
a311 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d319 2
a320 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2041,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d322 1
a322 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d330 2
a331 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2042,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d333 1
a333 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d341 2
a342 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2000,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d344 1
a344 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d350 2
a351 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2001,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d353 1
a353 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d359 2
a360 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2002,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d362 1
a362 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d368 2
a369 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2010,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d371 1
a371 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d378 2
a379 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2011,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d381 1
a381 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d388 2
a389 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2012,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d391 1
a391 1
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
d398 2
a399 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2030,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d401 2
a402 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d408 2
a409 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2031,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d411 2
a412 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d418 2
a419 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2032,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d421 2
a422 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d428 2
a429 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2060,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d431 2
a432 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d439 2
a440 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2061,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d442 2
a443 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d450 2
a451 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2062,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d453 2
a454 2
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
d461 2
a462 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2050,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d464 4
a467 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d473 2
a474 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2051,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d476 4
a479 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
d485 2
a486 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2052,	0,	0	},
	    {	0xffff,	0xffff,				0,	0	},
d488 4
a491 4
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
a494 15
	/* SIIG Cyber 8S PCI 16C850 (20x family): 8S */
	{   /* "SIIG Cyber 8S PCI 16C850 (20x family)", */
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2081,	0,	0	},
	    {	0xffff, 0xffff,				0,	0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x10, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x20, 0x18, COM_FREQ },
	    },
	},
d504 2
a505 2
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_1076,	0x10b5,	0x1076	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d507 8
a514 35
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x20, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x28, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x30, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x38, COM_FREQ },
	    },
	},

	/*
	 * Titan PCI-800H. Uses 8 16950 UART, behind a PCI chips that offers
	 * 4 com port on PCI device 0 and 4 on PCI device 1. PCI device 0 has
	 * device ID 3 and PCI device 1 device ID 4. Uses a 14.7456 Mhz crystal
	 * instead of the standart 1.8432Mhz.
	 */
	{   /* "VScom PCI-800H", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800H_0,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 8 },
	    },
	},
	{   /* "VScom PCI-800H", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800H_1,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ * 8 },
d521 2
a522 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_MARTH,	0x1033,	0x8014	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d524 1
a524 97
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
	    },
	},

	/*NEC PK-UG-X008 */
	{   /* "NEC PK-UG-X008", */
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_PKUG,	0x1033,	0x8012	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
	    },
	},

	/* Lava Computers 2SP-PCI (0x8000-0x8003) */
	{   /* "Lava Computers 2SP-PCI parallel port", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_1P,	0,	0	},
	    {	0xffff,	0xfffc,					0,	0	},
	    {
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00 },
	    },
	},

	/* Lava Computers 2SP-PCI and Quattro-PCI serial ports */
	{   /* "Lava Computers dual serial port", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_2S,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
	    },
	},

	/* Lava Computers LavaPort-Dual and LavaPort-Quad 4*clock PCI serial ports */
	{   /* "Lava Computers high-speed port", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_LAVAPORT_0,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ*4 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ*4 },
	    },
	},

	/* Lava Computers LavaPort-650 */
	{   /* "Lava Computers high-speed port", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_650,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ*4 },
	    },
	},

	/* Koutech IOFLEX-2S PCI Dual Port Serial, port 1 */
	{   /* "Koutech IOFLEX-2S PCI Dual Port Serial, port 1", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_0,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
	    },
	},

	/* Koutech IOFLEX-2S PCI Dual Port Serial, port 2 */
	{   /* "Koutech IOFLEX-2S PCI Dual Port Serial, port 2", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_1,	0,	0	},
	    {	0xffff,	0xfffc,				0,	0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
	    },
	},

	/* Lava Computers Octopus-550 serial ports */
	{   /* "Lava Computers Octopus-550 8-port serial", */
	    {   PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_OCTOPUS950_0, 0,      0       },
	    {   0xffff, 0xfffc,				 0,      0       },
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ },
	    },
	},

	/* US Robotics (3Com) PCI Modems */
	{   /* "US Robotics (3Com) 3CP5609 PCI 16550 Modem", */
	    {	PCI_VENDOR_USR, PCI_PRODUCT_USR_3CP5610,	0,	0	},
	    {	0xffff,	0xffff,					0,	0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
	    },
	},

	/* IBM 33L4618: AT&T/Lucent Venus Modem */
	{   /* "IBM 33L4618: AT&T/Lucent Venus Modem", */
	    /* "Actiontec 56K PCI Master" */
	    {	PCI_VENDOR_LUCENT, PCI_PRODUCT_LUCENT_VENUSMODEM, 0,	0	},
	    {	0xffff,	0xffff,					0,	0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ },
a528 1

@


1.2.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.2.2.1 2001/05/14 22:25:56 niklas Exp $	*/
a664 10
	    },
	},

	/* Topic/SmartLink 5634PCV SurfRider */
	{   /* "Topic/SmartLink 5634PCV SurfRider", */
	    /* "Topic/SmartLink 5634PCV SurfRider" */
	    {	PCI_VENDOR_TOPIC, PCI_PRODUCT_TOPIC_5634PCV,	0,	0	},
	    {	0xffff,	0xffff,					0,	0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
@


1.2.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.2.2.2 2001/07/04 10:43:02 niklas Exp $	*/
a558 15
	    },
	},

	/*
	 * VScom PCI-200L has 2 x 16550 UARTS.
	 * The board has a jumper which allows you to select a clock speed
	 * of either 14.7456MHz or 1.8432MHz. By default it runs at the
	 * latter.  If pins 2 & 3 are shorted, use COM_FREQ * 8 instead.
	 */
	{   /* "VScom PCI-200L with 2 x 16550 UARTS" */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200L,	0, 0	},
	    {	0xffff, 0xffff,					    	0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ },
@


1.2.2.4
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d654 1
a654 1
	    {   PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_OCTOPUS550_0, 0,      0       },
@


1.2.2.5
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pucdata.c,v 1.2.2.4 2001/11/13 21:10:03 niklas Exp $	*/
d82 2
a83 2
	    {	PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,		0xd84d,	0x6808	},
	    {	0xffff,	0xffff,					0xffff,	0xffff	},
d112 2
a113 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1000,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d121 2
a122 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1001,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d130 2
a131 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1002,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d139 2
a140 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1010,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d149 2
a150 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1011,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d159 2
a160 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1012,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d169 2
a170 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1020,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d178 2
a179 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1021,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d188 2
a189 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1030,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d198 2
a199 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1031,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d208 2
a209 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1032,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d218 2
a219 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1034,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d229 2
a230 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1035,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d240 2
a241 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1036,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d251 2
a252 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1050,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d263 2
a264 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1051,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d275 2
a276 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1052,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d291 2
a292 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2020,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d300 2
a301 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2021,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d310 2
a311 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2040,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d321 2
a322 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2041,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d332 2
a333 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2042,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d343 2
a344 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2000,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d352 2
a353 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2001,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d361 2
a362 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2002,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d370 2
a371 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2010,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d380 2
a381 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2011,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d390 2
a391 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2012,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d400 2
a401 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2030,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d410 2
a411 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2031,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d420 2
a421 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2032,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d430 2
a431 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2060,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d441 2
a442 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2061,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d452 2
a453 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2062,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d463 2
a464 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2050,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d475 2
a476 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2051,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d487 2
a488 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2052,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d499 2
a500 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2081,			0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
d521 2
a522 2
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_1076,		0x10b5,	0x1076	},
	    {	0xffff,	0xffff,					0xffff,	0xffff	},
d536 2
a537 56
	* VScom PCI 011H, 1 lpt.
	*/
	{   /* "VScom PCI-011H", */
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_VSCOM_PCI011H,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00 },
	    },
	},

	/*
	 * VScom PCI x10H, 1 lpt.
	 * is the lpt part of VScom 110H, 210H, 410H
	 */
	{   /* "VScom PCI-x10H", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCIx10H,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00 },
	    },
	},

	/*
	 * VScom PCI 100H, little sister of 800H, 1 com.
	 * also com part of VScom 110H
	 * The one I have defaults to a fequency of 14.7456 MHz which is
	 * jumper J1 set to 2-3.
	 */
	{   /* "VScom PCI-100H", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI100H,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
	    },
	},

	/*
	 * VScom PCI 200H, little sister of 800H, 2 com.
	 * also com part of VScom 210H
	 * The one I have defaults to a fequency of 14.7456 MHz which is
	 * jumper J1 set to 2-3.
	 */

	{   /* "VScom PCI-200H", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200H,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
	    },
	},

	/*
	 * VScom PCI 400H and 800H. Uses 4/8 16950 UART, behind a PCI chips
	 * that offers 4 com port on PCI device 0 (both 400H and 800H)
	 * and 4 on PCI device 1 (800H only). PCI device 0 has
a539 2
	 * There's a version with a jumper for selecting the crystal frequency,
	 * defaults to 8x as used here. The jumperless version uses 8x, too.
d541 1
a541 1
	{   /* "VScom PCI-400H/800H", */
d551 1
a551 1
	{   /* "VScom PCI-400H/800H", */
a562 58
	 * VScom PCI 200HV2, is 200H Version 2.
	 * Sells as 200H
	 * strange things with the second port, either my card is simply
	 * broken or something really strange is going on.
	 * second port does not work at all. I'll request another one for
	 * further testing.
	 */
	{   /* "VScom PCI-200HV2", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200HV2,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
	    },
	},

	/*
	 * VScom PCI 010L
	 * one lpt
	 * untested
	 */
	{   /* "VScom PCI-010L", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI010L,    0, 0	},
	    {	0xffff, 0xffff,                                         0, 0	},
	    {
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
	    },
	},

	/*
	 * VScom PCI 100L
	 * one com
	 * The one I have defaults to a fequency of 14.7456 MHz which is
	 * jumper J1 set to 2-3.
	 */
	{   /* "VScom PCI-100L", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI100L,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
	    },
	},

	/*
	 * VScom PCI 110L
	 * one com, one lpt
	 * untested
	 */
	{   /* "VScom PCI-110L", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI110L,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
	    },
	},

	/*
d565 2
a566 2
	 * of either 14.7456MHz or 1.8432MHz. By default it runs at 
	 * the fast speed.
d572 2
a573 2
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8},
d577 2
a578 54
	/*
	 * VScom PCI-210L
	 * Has a jumper for frequency selection, defaults to 8x as used here
	 * two com, one lpt
	 */
	{   /* "VScom PCI-210L" */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI210L,	0, 0	},
	    {	0xffff, 0xffff,					    	0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_LPT, 0x1c, 0x00 },
	    },
	},

	/*
	 * VScom PCI 400L
	 * Has a jumper for frequency selection, defaults to 8x as used here
	 * This is equal to J1 in pos 2-3
	 * VendorID mismatch with docs, should be 14d2 (oxford), is 10d2 (molex)
	 */
	{   /* "VScom PCI-400L", */
	    {	PCI_VENDOR_MOLEX, PCI_PRODUCT_MOLEX_VSCOM_PCI400L,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x08, COM_FREQ * 8 },
	    },
	},

	/*
	 * VScom PCI 800L
	 * Has a jumper for frequency selection, defaults to 8x as used here
	 */
	{   /* "VScom PCI-800L", */
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800L,	0, 0	},
	    {	0xffff, 0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x18, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x20, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x20, 0x28, COM_FREQ * 8 },
	    },
	},

	/*
	 * NEC PK-UG-X001 K56flex PCI Modem card.
	 * NEC MARTH bridge chip and Rockwell RCVDL56ACF/SP using.
	 */
d580 2
a581 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_MARTH,		0x1033,	0x8014	},
	    {	0xffff,	0xffff,					0xffff,	0xffff	},
d589 2
a590 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_PKUG,		0x1033,	0x8012	},
	    {	0xffff,	0xffff,					0xffff,	0xffff	},
d598 2
a599 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_1P,		0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d607 2
a608 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_2S,		0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d617 3
a619 3
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_LAVAPORT_0,		0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
	    {	
d627 2
a628 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_650,			0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d636 2
a637 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_0,		0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d645 2
a646 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_1,		0, 0	},
	    {	0xffff,	0xfffc,						0, 0	},
d654 2
a655 2
	    {   PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_OCTOPUS550_0,		0, 0	},
	    {   0xffff, 0xfffc,						0, 0	},
d666 2
a667 2
	    {	PCI_VENDOR_USR, PCI_PRODUCT_USR_3CP5610,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d676 2
a677 2
	    {	PCI_VENDOR_LUCENT, PCI_PRODUCT_LUCENT_VENUSMODEM, 	0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d686 2
a687 2
	    {	PCI_VENDOR_TOPIC, PCI_PRODUCT_TOPIC_5634PCV,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
d695 2
a696 2
	    {	0,	0,		0, 0	},
	    {	0,	0,		0, 0	},
@


1.2.2.6
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d61 1
a61 1
	{   /* "Dolphin Peripherals 4014" */
d81 1
a81 1
	{   /* "Dolphin Peripherals 4035" */
d850 2
a851 1
	{   /* "Topic/SmartLink 5634PCV SurfRider" */
a855 53
	    },
	},

	/* SD-LAB PCI I/O Card 4S2P */
	{   /* "Syba Tech Ltd. PCI-4S2P-550-ECP" */
	    {   PCI_VENDOR_SYBA, PCI_PRODUCT_SYBA_4S2P,			0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x2e8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x2f8, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x10, 0x000, 0x00 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x3e8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x3f8, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x10, 0x000, 0x00 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 4S RS232/422/485 */
	{   /* "Moxa Technologies, Industio CP-114" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP114,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 8S RS232 */
	{   /* "Moxa Technologies, Industio C168H" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_C168H,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x20, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x28, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x30, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x38, COM_FREQ * 8 },
	    },
	},

	/* NetMos 2S1P PCI 16C650 : 2S, 1P */
	{   /* "NetMos NM9835 Dual UART and 1284 Printer port" */
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_2S1P,		0, 0	},
	    {	0xffff,	0xffff,						0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
@


1.2.2.7
log
@Sync the SMP branch with 3.3
@
text
@d62 2
a63 2
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_9050,	0xd84d,	0x6810	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d82 2
a83 2
	    {	PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0xd84d,	0x6808	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d112 2
a113 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1000,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d121 2
a122 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1001,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d130 2
a131 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1002,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d139 2
a140 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1010,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d149 2
a150 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1011,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d159 2
a160 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1012,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d169 2
a170 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1020,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d178 2
a179 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1021,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d188 2
a189 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1030,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d198 2
a199 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1031,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d208 2
a209 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1032,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d218 2
a219 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1034,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d229 2
a230 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1035,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d240 2
a241 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1036,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d251 2
a252 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1050,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d263 2
a264 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1051,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d275 2
a276 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_1052,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d291 2
a292 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2020,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d300 2
a301 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2021,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d310 2
a311 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2040,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d321 2
a322 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2041,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d332 2
a333 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2042,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d343 2
a344 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2000,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d352 2
a353 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2001,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d361 2
a362 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2002,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d370 2
a371 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2010,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d380 2
a381 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2011,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d390 2
a391 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2012,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d400 2
a401 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2030,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d410 2
a411 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2031,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d420 2
a421 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2032,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d430 2
a431 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2060,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d441 2
a442 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2061,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d452 2
a453 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2062,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d463 2
a464 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2050,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d475 2
a476 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2051,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d487 2
a488 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2052,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d499 2
a500 2
	    {	PCI_VENDOR_SIIG, PCI_PRODUCT_SIIG_2081,		0, 0	},
	    {	0xffff, 0xffff,					0, 0	},
d521 2
a522 2
	    {	PCI_VENDOR_PLX,	PCI_PRODUCT_PLX_1076,	0x10b5,	0x1076	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d539 2
a540 2
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_VSCOM_PCI011H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d551 2
a552 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCIx10H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d565 2
a566 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI100H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d580 2
a581 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200H,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d592 2
a593 2
	 * device ID 3 and PCI device 1 device ID 4. Uses a 14.7456 MHz crystal
	 * instead of the standart 1.8432MHz.
d598 2
a599 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800H_0,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d608 2
a609 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800H_1,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d627 2
a628 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200HV2,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d641 2
a642 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI010L,    0, 0 },
	    {	0xffff, 0xffff,                                         0, 0 },
d655 2
a656 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI100L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d668 2
a669 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI110L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d683 2
a684 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI200L,	0, 0 },
	    {	0xffff, 0xffff,					    	0, 0 },
d697 2
a698 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI210L,	0, 0 },
	    {	0xffff, 0xffff,					    	0, 0 },
d713 2
a714 2
	    {	PCI_VENDOR_MOLEX, PCI_PRODUCT_MOLEX_VSCOM_PCI400L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
d728 2
a729 2
	    {	PCI_VENDOR_OXFORD, PCI_PRODUCT_OXFORD_VSCOM_PCI800L,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
a730 1
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
d746 2
a747 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_MARTH,	0x1033,	0x8014	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d753 1
a753 1
	/* NEC PK-UG-X008 */
d755 2
a756 2
	    {	PCI_VENDOR_NEC,	PCI_PRODUCT_NEC_PKUG,	0x1033,	0x8012	},
	    {	0xffff,	0xffff,				0xffff,	0xffff	},
d764 2
a765 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_1P,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d773 2
a774 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_TWOSP_2S,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d781 1
a781 17
	/*
         * Lava Computers Quattro-PCI serial ports.
         * A second version of the Quattro-PCI with different PCI ids.
         */
	{   /* "Lava Computers Quattro-PCI 4-port serial", */
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_QUATTRO_AB2,	0, 0	},
	    {	0xffff,	0xfffe,					0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ },
	    },
	},

	/*
	 * Lava Computers LavaPort-Dual and LavaPort-Quad 4*clock PCI
	 * serial ports.
	 */
d783 2
a784 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_LAVAPORT_0,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d793 2
a794 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_650,		0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d802 2
a803 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_0,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d811 2
a812 2
	    {	PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_IOFLEX_2S_1,	0, 0	},
	    {	0xffff,	0xfffc,					0, 0	},
d820 2
a821 2
	    {   PCI_VENDOR_LAVA, PCI_PRODUCT_LAVA_OCTOPUS550_0,	0, 0	},
	    {   0xffff, 0xfffc,					0, 0	},
d832 2
a833 2
	    {	PCI_VENDOR_USR, PCI_PRODUCT_USR_3CP5610,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d842 2
a843 2
	    {	PCI_VENDOR_LUCENT, PCI_PRODUCT_LUCENT_VENUSMODEM,	0, 0 },
	    {	0xffff,	0xffff,						0, 0 },
d851 2
a852 2
	    {	PCI_VENDOR_TOPIC, PCI_PRODUCT_TOPIC_5634PCV,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d860 2
a861 2
	    {   PCI_VENDOR_SYBA, PCI_PRODUCT_SYBA_4S2P,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d874 2
a875 2
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP114,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d886 2
a887 2
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_C168H,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
d902 2
a903 2
	    {   PCI_VENDOR_NETMOS, PCI_PRODUCT_NETMOS_2S1P,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
a908 61
	},

	{ /* Sunix 4018A : 2-port parallel */
	    {   PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_4018A,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
                { PUC_PORT_TYPE_LPT, 0x10, 0x00 },                              
                { PUC_PORT_TYPE_LPT, 0x18, 0x00 },                              
	    },
	},

	/* Sunix 4065A : 8-port */
	{   /* "Sunix 4065A : 8-port" */
	    {   PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_4065A,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x1A, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x1A, 0x00, COM_FREQ * 8 },
	    },
	},

	/*
	 * Boca Research Turbo Serial 654 (4 serial port) card.
	 * Appears to be the same as Chase Research PLC PCI-FAST4 card,
	 * same as Perle PCI-FAST4 Multi-Port serial card
	 */
	{   /* "Boca Turbo Serial 654 - IOP654" */
	    {   PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0x12e0, 0x0031  },
	    {   0xffff, 0xffff,				0xffff, 0xffff  },
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 4 },
	    }, 
	},

	/*
	 * Boca Research Turbo Serial 658 (8 serial port) card.
	 * Appears to be the same as Chase Research PLC PCI-FAST8 card
	 * same as Perle PCI-FAST8 Multi-Port serial card
	 */
	{   /* "Boca Turbo Serial 658 - IOP658" */
	    {   PCI_VENDOR_PLX, PCI_PRODUCT_PLX_9050,	0x12e0, 0x0021  },
	    {   0xffff, 0xffff,				0xffff, 0xffff  },
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x20, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x28, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x30, COM_FREQ * 4 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x38, COM_FREQ * 4 },
	    }, 
@


1.2.2.8
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d621 4
d631 1
a631 1
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ * 8 },
d679 1
a679 1
	 * of either 14.7456MHz or 1.8432MHz. By default it runs at
d684 1
a684 1
	    {	0xffff, 0xffff,						0, 0 },
d698 1
a698 1
	    {	0xffff, 0xffff,						0, 0 },
d802 1
a802 1
	    {
d848 1
a848 1
	{   /* "US Robotics (3Com) 3CP5610 PCI 16550 Modem", */
a900 24
	/* Moxa Technologies Co., Ltd. PCI I/O Card 4S RS232/422/485 */
	{   /* "Moxa Technologies, SmartIO C104H/PCI" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_C104H,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
	    },
	},

	/* Moxa Technologies Co., Ltd. PCI I/O Card 4S RS232 */
	{   /* "Moxa Technologies, SmartIO CP104/PCI" */
	    {	PCI_VENDOR_MOXA, PCI_PRODUCT_MOXA_CP104,	0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
	    },
	},

d932 2
a933 2
                { PUC_PORT_TYPE_LPT, 0x10, 0x00 },
                { PUC_PORT_TYPE_LPT, 0x18, 0x00 },
d937 4
a940 7
	/*
	 * SUNIX 40XX series of serial/parallel combo cards.
	 * Tested with 4055A and 4065A.
	 */
	{   /* SUNIX 400X 1P */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4000 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
d942 8
a949 87
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00, 0x00 },
	    },
	},

	{   /* SUNIX 401X 2P */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4010 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_PORT_TYPE_LPT, 0x10, 0x00, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
	    },
	},

	{   /* SUNIX 402X 1S */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4020 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
	    },
	},

	{   /* SUNIX 403X 2S */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4030 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
	    },
	},

	{   /* SUNIX 405X 4S */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4050 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ},
	    },
	},

	{   /* SUNIX 406X 8S */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4060 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x1c, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x20, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x24, 0x00, COM_FREQ},
	    },
	},

	{   /* SUNIX 407X 2S/1P */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4070 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
	    },
	},

	{   /* SUNIX 408X 2S/2P */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4080 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x20, 0x00, 0x00 },
	    },
	},

	{   /* SUNIX 409X 4S/2P */
	    {	PCI_VENDOR_SUNIX, PCI_PRODUCT_SUNIX_40XX, 0x1409, 0x4090 },
	    {	0xffff,	0xffff,	0xffff,	0xeff0 },
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ * 8},
		{ PUC_PORT_TYPE_COM, 0x14, 0x00, COM_FREQ},
		{ PUC_PORT_TYPE_COM, 0x14, 0x08, COM_FREQ},
		{ PUC_PORT_TYPE_LPT, 0x18, 0x00, 0x00 },
		{ PUC_PORT_TYPE_LPT, 0x20, 0x00, 0x00 },
d966 1
a966 1
	    },
d986 1
a986 1
	    },
@


1.2.2.9
log
@Merge with the trunk
@
text
@a513 14
	 * VScom PCI-400S, based on PLX 9050 Chip, 16k buffer
	 */
	{ /* "VScom PCI-400S", */
	    { PCI_VENDOR_PLX, PCI_PRODUCT_PLX_1077, 0x10b5, 0x1077 },
	    { 0xffff, 0xffff, 0xffff, 0xffff },
	    {
		{ PUC_PORT_TYPE_COM, 0x18, 0x00, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x08, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x10, COM_FREQ * 8 },
		{ PUC_PORT_TYPE_COM, 0x18, 0x18, COM_FREQ * 8 },
	    },
	},

	/*
a738 14
	 * Exsys EX-41098
	 */
	{   /* "Exsys EX-41098", */
	    {	PCI_VENDOR_OXFORD2, PCI_PRODUCT_OXFORD2_EXSYS_EX41098,	0, 0 },
	    {	0xffff, 0xffff,						0, 0 },
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x00, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x08, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x10, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x18, COM_FREQ },
	    },
	},

	/*
a867 12
	    },
	},

	/* SD-LAB PCI I/O Card 4S */
	{   /* "Syba Tech Ltd. PCI-4S" */
	    {   PCI_VENDOR_SYBA, PCI_PRODUCT_SYBA_4S,		0, 0	},
	    {	0xffff,	0xffff,					0, 0	},
	    {
		{ PUC_PORT_TYPE_COM, 0x10, 0x3e8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x2e8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x3f8, COM_FREQ },
		{ PUC_PORT_TYPE_COM, 0x10, 0x2f8, COM_FREQ },
@


1.1
log
@PCI "universal" communication device driver, by cgd@@netbsd.org.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d59 1
a59 1
	{   "Dolphin Peripherals 4014",
d79 1
a79 1
	{   "Dolphin Peripherals 4035",
d109 1
a109 1
	{   "SIIG Cyber Serial PCI 16C550 (10x family)",
d118 1
a118 1
	{   "SIIG Cyber Serial PCI 16C650 (10x family)",
d127 1
a127 1
	{   "SIIG Cyber Serial PCI 16C850 (10x family)",
d136 1
a136 1
	{   "SIIG Cyber I/O PCI 16C550 (10x family)",
d146 1
a146 1
	{   "SIIG Cyber I/O PCI 16C650 (10x family)",
d156 1
a156 1
	{   "SIIG Cyber I/O PCI 16C850 (10x family)",
d166 1
a166 1
	{   "SIIG Cyber Parallel PCI (10x family)",
d175 1
a175 1
	{   "SIIG Cyber Parallel Dual PCI (10x family)",
d185 1
a185 1
	{   "SIIG Cyber Serial Dual PCI 16C550 (10x family)",
d195 1
a195 1
	{   "SIIG Cyber Serial Dual PCI 16C650 (10x family)",
d205 1
a205 1
	{   "SIIG Cyber Serial Dual PCI 16C850 (10x family)",
d215 1
a215 1
	{   "SIIG Cyber 2S1P PCI 16C550 (10x family)",
d226 1
a226 1
	{   "SIIG Cyber 2S1P PCI 16C650 (10x family)",
d237 1
a237 1
	{   "SIIG Cyber 2S1P PCI 16C850 (10x family)",
d248 1
a248 1
	{   "SIIG Cyber 4S PCI 16C550 (10x family)",
d260 1
a260 1
	{   "SIIG Cyber 4S PCI 16C650 (10x family)",
d272 1
a272 1
	{   "SIIG Cyber 4S PCI 16C850 (10x family)",
d288 1
a288 1
	{   "SIIG Cyber Parallel PCI (20x family)",
d297 1
a297 1
	{   "SIIG Cyber Parallel Dual PCI (20x family)",
d307 1
a307 1
	{   "SIIG Cyber 2P1S PCI 16C550 (20x family)",
d318 1
a318 1
	{   "SIIG Cyber 2P1S PCI 16C650 (20x family)",
d329 1
a329 1
	{   "SIIG Cyber 2P1S PCI 16C850 (20x family)",
d340 1
a340 1
	{   "SIIG Cyber Serial PCI 16C550 (20x family)",
d349 1
a349 1
	{   "SIIG Cyber Serial PCI 16C650 (20x family)",
d358 1
a358 1
	{   "SIIG Cyber Serial PCI 16C850 (20x family)",
d367 1
a367 1
	{   "SIIG Cyber I/O PCI 16C550 (20x family)",
d377 1
a377 1
	{   "SIIG Cyber I/O PCI 16C650 (20x family)",
d387 1
a387 1
	{   "SIIG Cyber I/O PCI 16C850 (20x family)",
d397 1
a397 1
	{   "SIIG Cyber Serial Dual PCI 16C550 (20x family)",
d407 1
a407 1
	{   "SIIG Cyber Serial Dual PCI 16C650 (20x family)",
d417 1
a417 1
	{   "SIIG Cyber Serial Dual PCI 16C850 (20x family)",
d427 1
a427 1
	{   "SIIG Cyber 2S1P PCI 16C550 (20x family)",
d438 1
a438 1
	{   "SIIG Cyber 2S1P PCI 16C650 (20x family)",
d449 1
a449 1
	{   "SIIG Cyber 2S1P PCI 16C850 (20x family)",
d460 1
a460 1
	{   "SIIG Cyber 4S PCI 16C550 (20x family)",
d472 1
a472 1
	{   "SIIG Cyber 4S PCI 16C650 (20x family)",
d484 1
a484 1
	{   "SIIG Cyber 4S PCI 16C850 (20x family)",
d503 1
a503 1
	{   "VScom PCI-800",
d518 17
a534 1
	{ 0 }
@

