head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.36
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.40
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.38
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.26
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.34
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.32
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.30
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.28
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.24
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.22
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.20
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.18
	OPENBSD_5_0:1.12.0.16
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.14
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.12
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.8
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.10
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.6
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.4
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.2
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.11.0.4
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.2
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.9.0.6
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.4
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.8.0.10
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.8
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.6
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.4
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.4
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	SMP:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2;
locks; strict;
comment	@ * @;


1.12
date	2007.10.18.21.10.58;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2006.11.29.00.56.51;	author dlg;	state Exp;
branches;
next	1.10;

1.10
date	2006.11.28.23.59.45;	author dlg;	state Exp;
branches;
next	1.9;

1.9
date	2005.08.09.04.10.12;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2002.11.14.02.31.46;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.59;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.07.23.19.55;	author jason;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2001.08.25.10.13.29;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.13.03.24.19;	author krw;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.12.15.40.32;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.29.23.53.38;	author krw;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2001.01.23.04.19.42;	author krw;	state Exp;
branches;
next	;

1.2.4.1
date	2001.05.14.22.25.49;	author niklas;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2001.07.04.10.42.33;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2001.10.31.03.22.46;	author nate;	state Exp;
branches;
next	1.2.4.4;

1.2.4.4
date	2002.03.28.15.35.58;	author niklas;	state Exp;
branches;
next	1.2.4.5;

1.2.4.5
date	2003.03.28.00.38.23;	author niklas;	state Exp;
branches;
next	;

1.6.4.1
date	2002.06.11.03.42.26;	author art;	state Exp;
branches;
next	1.6.4.2;

1.6.4.2
date	2003.05.19.22.18.01;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Initio INIC-941 works as well; ok miod@@
@
text
@/*	$OpenBSD: iha_pci.c,v 1.11 2006/11/29 00:56:51 dlg Exp $ */
/*-------------------------------------------------------------------------
 *
 * Device driver for the INI-9XXXU/UW or INIC-940/950  PCI SCSI Controller.
 *
 * Written for 386bsd and FreeBSD by
 *	Winston Hung		<winstonh@@initio.com>
 *
 * Copyright (c) 1997-1999 Initio Corp
 * Copyright (c) 2000-2002 Ken Westerback
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer,
 *    without modification, immediately at the beginning of the file.
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 *
 *-------------------------------------------------------------------------
 */
#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <dev/pci/pcidevs.h>
#include <dev/pci/pcivar.h>

#include <scsi/scsi_all.h>
#include <scsi/scsiconf.h>

#include <dev/ic/iha.h>

int  iha_pci_probe(struct device *, void *, void *);
void iha_pci_attach(struct device *, struct device *, void *);

struct cfattach iha_pci_ca = {
	sizeof(struct iha_softc), iha_pci_probe, iha_pci_attach
};

int
iha_pci_probe(parent, match, aux)
	struct device *parent;
	void *match;
	void *aux;
{
	struct pci_attach_args *pa = aux;

	if (PCI_VENDOR(pa->pa_id) == PCI_VENDOR_INITIO)
		switch (PCI_PRODUCT(pa->pa_id)) {
		case PCI_PRODUCT_INITIO_INIC940:
		case PCI_PRODUCT_INITIO_INIC941:
		case PCI_PRODUCT_INITIO_INIC950:
			return (1);
		}

	if (PCI_VENDOR(pa->pa_id) == PCI_VENDOR_DTCTECH)
		switch (PCI_PRODUCT(pa->pa_id)) {
		case PCI_PRODUCT_DTCTECH_DMX3194U:
			return (1);
		}

	return (0);
}

void
iha_pci_attach(parent, self, aux)
	struct device *parent;
	struct device *self;
	void *aux;
{
	struct pci_attach_args *pa = aux;
	struct scsibus_attach_args saa;
	bus_space_handle_t ioh;
	pci_intr_handle_t ih;
	struct iha_softc *sc = (void *)self;
	bus_space_tag_t iot;
	const char *intrstr;
	int ioh_valid;
				
	/*
	 * XXX - Tried memory mapping (using code from adw and ahc)
	 *	 rather that IO mapping, but it didn't work at all..
	 */
	ioh_valid = pci_mapreg_map(pa, PCI_MAPREG_START, PCI_MAPREG_TYPE_IO, 0,
	    &iot, &ioh, NULL, NULL, 0);

	if (ioh_valid != 0) {
		printf("%s: unable to map registers\n", sc->sc_dev.dv_xname);
		return;
	}

	sc->sc_iot  = iot;
	sc->sc_ioh  = ioh;
	sc->sc_dmat = pa->pa_dmat;
	
	if (pci_intr_map(pa, &ih)) {
		printf("%s: couldn't map interrupt\n", sc->sc_dev.dv_xname);
		return;
	}
	intrstr = pci_intr_string(pa->pa_pc, ih);

	sc->sc_ih = pci_intr_establish(pa->pa_pc, ih, IPL_BIO, iha_intr, sc,
				       sc->sc_dev.dv_xname);

	if (sc->sc_ih == NULL) {
		printf(": couldn't establish interrupt");
		if (intrstr != NULL)
			printf(" at %s", intrstr);
		printf("\n");
	} else {
		if (intrstr != NULL)
			printf(": %s\n", intrstr);

		if (iha_init_tulip(sc) == 0) {
			bzero(&saa, sizeof(saa));
			saa.saa_sc_link = &sc->sc_link;
			config_found(&sc->sc_dev, &saa, scsiprint);
		}
	}
}
@


1.11
log
@oops, i missed a closing brace with the scsibus_attach_args fixup.

found by ian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.10 2006/11/28 23:59:45 dlg Exp $ */
d65 1
@


1.10
log
@give scsi controllers a real attach args to fill in when attaching scsibus.

ok miod@@ marco@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.9 2005/08/09 04:10:12 mickey Exp $ */
d131 1
@


1.9
log
@do not set PCI_COMMAND_MASTER_ENABLE explicitly as it's already set in pcisubmatch(); kettenis@@ testing; brad@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.8 2002/11/14 02:31:46 krw Exp $ */
d85 1
d127 4
a130 2
		if (iha_init_tulip(sc) == 0)
			config_found(&sc->sc_dev, &sc->sc_link, scsiprint);
@


1.8
log
@Rework iha copyight verbiage to make clear what needs to be clear for
it to remain in the tree. With agreement of Initio.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.7 2002/03/14 01:26:59 millert Exp $ */
a89 1
	pcireg_t command;
a91 5
	command  = pci_conf_read(pa->pa_pc,pa->pa_tag,PCI_COMMAND_STATUS_REG);
	command |= PCI_COMMAND_MASTER_ENABLE | PCI_COMMAND_PARITY_ENABLE;

	pci_conf_write(pa->pa_pc, pa->pa_tag, PCI_COMMAND_STATUS_REG, command);

@


1.7
log
@First round of __P removal in sys
@
text
@d1 2
a2 3
/*	$OpenBSD: iha_pci.c,v 1.6 2001/10/07 23:19:55 jason Exp $ */
/*
 * Initio INI-9xxxU/UW SCSI Device Driver
d4 7
a10 2
 * Copyright (c) 2000 Ken Westerback
 * All rights reserved.
a31 13
 *
 *-------------------------------------------------------------------------
 *
 * Ported from i91u.c, provided by Initio Corporation, which credits:
 *
 * Device driver for the INI-9XXXU/UW or INIC-940/950  PCI SCSI Controller.
 *
 * FreeBSD
 *
 *  Written for 386bsd and FreeBSD by
 *	Winston Hung		<winstonh@@initio.com>
 *
 * Copyright (c) 1997-99 Initio Corp.  All rights reserved.
@


1.6
log
@match DTCTECH Domex DMX3194U (it's an initio in a different box)
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.5 2001/08/25 10:13:29 art Exp $ */
d56 2
a57 2
int  iha_pci_probe  __P((struct device *, void *, void *));
void iha_pci_attach __P((struct device *, struct device *, void *));
@


1.6.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.6 2001/10/07 23:19:55 jason Exp $ */
d56 2
a57 2
int  iha_pci_probe(struct device *, void *, void *);
void iha_pci_attach(struct device *, struct device *, void *);
@


1.6.4.2
log
@sync
@
text
@d1 3
a3 2
/*	$OpenBSD$ */
/*-------------------------------------------------------------------------
d5 2
a6 7
 * Device driver for the INI-9XXXU/UW or INIC-940/950  PCI SCSI Controller.
 *
 * Written for 386bsd and FreeBSD by
 *	Winston Hung		<winstonh@@initio.com>
 *
 * Copyright (c) 1997-1999 Initio Corp
 * Copyright (c) 2000-2002 Ken Westerback
d28 13
@


1.5
log
@Change pci_intr_map to take pci_attach_args as an argument.
All callers actually took all arguments to pci_intr_map from pci_attach_args
structs, so this simplifies code.
This also allows more complicated interrupt assignment schemes like the one
on sparc64.

This makes sparc64 pci interrupts work.

Inspired by the same change in NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.4 2001/07/13 03:24:19 krw Exp $ */
d76 7
a82 1
	}
@


1.4
log
@Remove static'ness of functions in line with normal OpenBSD
preferences.

Rename tul_* functions/variables iha_* for consistancy, since all are
now visible.

As updating the EEPROM did not work, don't try. Remove now unused
static dftNvram variable, and functions used only in trying to write
it to EEPROM.

Make iha_rate_tbl a const.
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.3 2001/06/12 15:40:32 niklas Exp $ */
d117 1
a117 2
	if (pci_intr_map(pa->pa_pc, pa->pa_intrtag, pa->pa_intrpin,
			 pa->pa_intrline, &ih)) {
@


1.3
log
@Make pci_mapreg_map take an extra argument where we can
put a size limitation of the PCI region to map.  That makes the PERC 3/Di
raid controller usable, as it publishes too much PCI memory for us to map
in the kernel virtual memory.  As we only access the first 256 byte it is
of no use to map 128MB of kvm.
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.2 2001/03/29 23:53:38 krw Exp $ */
d56 2
a57 2
static int  iha_pci_probe  __P((struct device *, void *, void *));
static void iha_pci_attach __P((struct device *, struct device *, void *));
d63 1
a63 1
static int
d81 1
a81 1
static void
@


1.2
log
@An INIC-940 based card supplied by Initio proves that the iha driver
does support both INIC-940 and INIC-950 chips. So allow iha to
recognize and claim INIC-940 based cards, and change documentation to
reflect new support.

Thanks to Initio for providing the card to test.
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.1 2001/01/23 04:19:42 krw Exp $ */
d106 1
a106 1
	    &iot, &ioh, NULL, NULL);
@


1.2.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.2 2001/03/29 23:53:38 krw Exp $ */
@


1.2.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.2.4.1 2001/05/14 22:25:49 niklas Exp $ */
d106 1
a106 1
	    &iot, &ioh, NULL, NULL, 0);
@


1.2.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: iha_pci.c,v 1.2.4.2 2001/07/04 10:42:33 niklas Exp $ */
d56 2
a57 2
int  iha_pci_probe  __P((struct device *, void *, void *));
void iha_pci_attach __P((struct device *, struct device *, void *));
d63 1
a63 1
int
d76 1
a76 7
		}

	if (PCI_VENDOR(pa->pa_id) == PCI_VENDOR_DTCTECH)
		switch (PCI_PRODUCT(pa->pa_id)) {
		case PCI_PRODUCT_DTCTECH_DMX3194U:
			return (1);
		}
d81 1
a81 1
void
d117 2
a118 1
	if (pci_intr_map(pa, &ih)) {
@


1.2.4.4
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d56 2
a57 2
int  iha_pci_probe(struct device *, void *, void *);
void iha_pci_attach(struct device *, struct device *, void *);
@


1.2.4.5
log
@Sync the SMP branch with 3.3
@
text
@d2 2
a3 1
/*-------------------------------------------------------------------------
d5 2
a6 7
 * Device driver for the INI-9XXXU/UW or INIC-940/950  PCI SCSI Controller.
 *
 * Written for 386bsd and FreeBSD by
 *	Winston Hung		<winstonh@@initio.com>
 *
 * Copyright (c) 1997-1999 Initio Corp
 * Copyright (c) 2000-2002 Ken Westerback
d28 13
@


1.1
log
@Add support for Initio INI-91xx SCSI Cards
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d73 1
@

