head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.28
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.26
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.24
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.12
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.20
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.18
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.16
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.14
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.10
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.8
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.6
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.15.0.2
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3;
locks; strict;
comment	@ * @;


1.17
date	2011.04.27.07.01.33;	author ratchov;	state Exp;
branches;
next	1.16;

1.16
date	2010.10.04.09.32.43;	author ratchov;	state Exp;
branches;
next	1.15;

1.15
date	2010.07.21.07.11.55;	author ratchov;	state Exp;
branches;
next	1.14;

1.14
date	2010.03.07.18.55.45;	author ratchov;	state Exp;
branches;
next	1.13;

1.13
date	2010.02.25.21.19.37;	author ratchov;	state Exp;
branches;
next	1.12;

1.12
date	2010.02.20.16.45.28;	author ratchov;	state Exp;
branches;
next	1.11;

1.11
date	2009.11.02.05.54.16;	author ratchov;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.11.12.59.29;	author ratchov;	state Exp;
branches;
next	1.9;

1.9
date	2009.05.08.17.52.18;	author ratchov;	state Exp;
branches;
next	1.8;

1.8
date	2009.05.08.16.53.45;	author ratchov;	state Exp;
branches;
next	1.7;

1.7
date	2009.05.08.15.31.16;	author ratchov;	state Exp;
branches;
next	1.6;

1.6
date	2009.04.25.12.15.10;	author ratchov;	state Exp;
branches;
next	1.5;

1.5
date	2009.04.25.12.10.19;	author ratchov;	state Exp;
branches;
next	1.4;

1.4
date	2008.11.29.18.32.18;	author ratchov;	state Exp;
branches;
next	1.3;

1.3
date	2008.02.21.01.37.55;	author ratchov;	state Exp;
branches;
next	1.2;

1.2
date	2007.10.28.18.25.21;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.28.13.42.31;	author ratchov;	state Exp;
branches;
next	;


desc
@@


1.17
log
@fix the interrupt handler in the case when the interrupt is shared
with other pci devices. Ignore the interrupt (and return 0) if neither
of the events that make the handler do actual work are set.

hints from jakemsr and dlg, explained by deraadt
@
text
@/*	$OpenBSD: envyreg.h,v 1.16 2010/10/04 09:32:43 ratchov Exp $	*/
/*
 * Copyright (c) 2007 Alexandre Ratchov <alex@@caoua.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#ifndef SYS_DEV_PCI_ENVYREG_H
#define SYS_DEV_PCI_ENVYREG_H

/*
 * BARs at PCI config space
 */
#define ENVY_CTL_BAR		0x10
#define ENVY_MT_BAR(isht)	((isht) ? 0x14 : 0x1c)
#define ENVY_CONF		0x60

/*
 * CCS "control" register
 */
#define ENVY_CTL		0x00
#define   ENVY_CTL_RESET	0x80
#define   ENVY_CTL_NATIVE	0x01
#define ENVY_CCS_INTMASK	0x01
#define   ENVY_CCS_INT_MT	0x10
#define   ENVY_CCS_INT_MIDI0	0x80
#define   ENVY_CCS_INT_MIDI1	0x20	/* Envy24 only */
#define ENVY_CCS_INTSTAT	0x02
#define ENVY_CCS_CONF		0x04	/* Envy24HT only */
#define ENVY_CCS_ACLINK		0x05	/* Envy24HT only */
#define ENVY_CCS_I2S		0x06	/* Envy24HT only */
#define ENVY_CCS_SPDIF		0x07	/* Envy24HT only */
#define ENVY_CCS_MIDIDATA0	0x0c
#define ENVY_CCS_MIDISTAT0	0x0d
#define ENVY_CCS_MIDIDATA1	0x1c	/* Envy24 only */
#define ENVY_CCS_MIDISTAT1	0x1d	/* Envy24 only */
#define ENVY_CCS_MIDIWAT	0x0e	/* Envy24HT only */
#define   ENVY_CCS_MIDIWAT_RX	0x20
#define ENVY_CCS_MIDIDATA1	0x1c
#define ENVY_CCS_MIDISTAT1	0x1d
#define ENVY_CCS_GPIODATA0	0x14	/* Envy24HT only */
#define ENVY_CCS_GPIODATA1	0x15	/* Envy24HT only */
#define ENVY_CCS_GPIODATA2	0x1e	/* Envy24HT only */
#define ENVY_CCS_GPIOMASK0	0x16	/* Envy24HT only */
#define ENVY_CCS_GPIOMASK1	0x17	/* Envy24HT only */
#define ENVY_CCS_GPIOMASK2	0x1f	/* Envy24HT only */
#define ENVY_CCS_GPIODIR0	0x18	/* Envy24HT only */
#define ENVY_CCS_GPIODIR1	0x19	/* Envy24HT only */
#define ENVY_CCS_GPIODIR2	0x1a	/* Envy24HT only */

/*
 * CCS registers to access indirect registers (CCI)
 */
#define ENVY_CCI_INDEX	0x3
#define ENVY_CCI_DATA	0x4

/*
 * CCS regisers to access iic bus
 */
#define ENVY_I2C_DEV		0x10
#define   ENVY_I2C_DEV_SHIFT	0x01
#define   ENVY_I2C_DEV_WRITE	0x01
#define   ENVY_I2C_DEV_EEPROM	0x50
#define ENVY_I2C_ADDR		0x11
#define ENVY_I2C_DATA		0x12
#define ENVY_I2C_CTL		0x13
#define   ENVY_I2C_CTL_BUSY	0x1

/*
 * CCI registers to access GPIO pins
 */
#define ENVY_CCI_GPIODATA	0x20
#define ENVY_CCI_GPIOMASK	0x21
#define ENVY_CCI_GPIODIR	0x22

/*
 * EEPROM bytes signification
 */
#define ENVY_EEPROM_CONF	6
#define   ENVY_CONF_MIDI	0x20
#define ENVY_EEPROM_ACLINK	7
#define ENVY_EEPROM_I2S		8
#define ENVY_EEPROM_SPDIF	9
#define ENVY_EEPROM_GPIOMASK(s)	((s)->isht ? 13 : 10)
#define ENVY_EEPROM_GPIOST(s)	((s)->isht ? 16 : 11)
#define ENVY_EEPROM_GPIODIR(s)	((s)->isht ? 10 : 12)

/*
 * MIDI status
 */
#define ENVY_MIDISTAT_IEMPTY(s)	((s)->isht ? 0x8 : 0x80)
#define ENVY_MIDISTAT_OBUSY(s)	((s)->isht ? 0x4 : 0x40)
#define ENVY_MIDISTAT_RESET	0xff
#define ENVY_MIDISTAT_UART	0x3f

/*
 * MT registers for play/record params
 */
#define ENVY_MT_INTR		0
#define   ENVY_MT_INTR_PACK	0x01
#define   ENVY_MT_INTR_RACK	0x02
#define   ENVY_MT_INTR_ERR	0x08	/* fifo error on HT, else reads 0 */
#define   ENVY_MT_INTR_ALL	0x0b	/* all of above */
#define   ENVY_MT_INTR_PMASK	0x40	/* !HT only */
#define   ENVY_MT_INTR_RMASK	0x80	/* !HT only */
#define ENVY_MT_RATE		1
#define   ENVY_MT_RATEMASK	0x0f
#define ENVY_MT_IMASK		3	/* HT only */
#define   ENVY_MT_IMASK_PDMA0	0x1
#define   ENVY_MT_IMASK_RDMA0	0x2
#define   ENVY_MT_IMASK_ERR	0x8
#define ENVY_MT_AC97_IDX	4
#define ENVY_MT_AC97_CMD	5
#define   ENVY_MT_AC97_READY	0x08
#define   ENVY_MT_AC97_CMD_MASK	0x30
#define   ENVY_MT_AC97_CMD_RD	0x10
#define   ENVY_MT_AC97_CMD_WR	0x20
#define   ENVY_MT_AC97_CMD_RST	0x80
#define ENVY_MT_AC97_DATA	6
#define ENVY_MT_PADDR		0x10
#define ENVY_MT_PBUFSZ		0x14
#define ENVY_MT_PBLKSZ(s)	((s)->isht ? 0x1c : 0x16)
#define ENVY_MT_CTL		0x18
#define   ENVY_MT_CTL_PSTART	0x01
#define   ENVY_MT_CTL_RSTART(s)	((s)->isht ? 0x02 : 0x04)
#define ENVY_MT_NSTREAM		0x19	/* HT only: 4 - active DACs */
#define ENVY_MT_ERR		0x1a	/* HT only: fifo error */
#define ENVY_MT_RADDR		0x20
#define ENVY_MT_RBUFSZ		0x24
#define ENVY_MT_RBLKSZ		0x26

/*
 * MT registers for monitor gains
 */
#define ENVY_MT_MONDATA		0x38
#define   ENVY_MT_MONVAL_BITS	7
#define   ENVY_MT_MONVAL_MASK	((1 << ENVY_MT_MONVAL_BITS) - 1)
#define ENVY_MT_MONIDX		0x3a

/*
 * MT registers to access the digital mixer
 */
#define ENVY_MT_OUTSRC		0x30
#define   ENVY_MT_OUTSRC_DMA	0x00
#define   ENVY_MT_OUTSRC_MON	0x01
#define   ENVY_MT_OUTSRC_LINE	0x02
#define   ENVY_MT_OUTSRC_SPD	0x03
#define   ENVY_MT_OUTSRC_MASK	0x03
#define ENVY_MT_SPDROUTE	0x32
#define   ENVY_MT_SPDSRC_DMA	0x00
#define   ENVY_MT_SPDSRC_MON	0x01
#define   ENVY_MT_SPDSRC_LINE	0x02
#define   ENVY_MT_SPDSRC_SPD	0x03
#define   ENVY_MT_SPDSRC_BITS	0x02
#define   ENVY_MT_SPDSRC_MASK	((1 << ENVY_MT_SPDSRC_BITS) - 1)
#define   ENVY_MT_SPDSEL_BITS	0x4
#define   ENVY_MT_SPDSEL_MASK	((1 << ENVY_MT_SPDSEL_BITS) - 1)
#define ENVY_MT_INSEL		0x34
#define   ENVY_MT_INSEL_BITS	0x4
#define   ENVY_MT_INSEL_MASK	((1 << ENVY_MT_INSEL_BITS) - 1)

/*
 * HT routing control
 */
#define ENVY_MT_HTSRC		0x2c
#define   ENVY_MT_HTSRC_DMA	0x00
#define   ENVY_MT_HTSRC_LINE	0x02
#define   ENVY_MT_HTSRC_SPD	0x04
#define   ENVY_MT_HTSRC_MASK	0x07

/*
 * AK4524 control registers
 */
#define AK4524_PWR		0x00
#define   AK4524_PWR_DA		0x01
#define   AK4524_PWR_AD		0x02
#define   AK4524_PWR_VREF	0x04
#define AK4524_RST		0x01
#define   AK4524_RST_DA		0x01
#define   AK4524_RST_AD		0x02
#define AK4524_FMT		0x02
#define   AK4524_FMT_NORM	0
#define   AK4524_FMT_DBL	0x01
#define   AK4524_FMT_QUA	0x02
#define   AK4524_FMT_QAUDFILT	0x04
#define   AK4524_FMT_256	0
#define   AK4524_FMT_512	0x04
#define   AK4524_FMT_1024	0x08
#define   AK4524_FMT_384	0x10
#define   AK4524_FMT_768	0x14
#define   AK4524_FMT_LSB16	0
#define   AK4524_FMT_LSB20	0x20
#define   AK4524_FMT_MSB24	0x40
#define   AK4524_FMT_IIS24	0x60
#define   AK4524_FMT_LSB24	0x80
#define AK4524_DEEMVOL		0x03
#define   AK4524_DEEM_44K1	0x00
#define   AK4524_DEEM_OFF	0x01
#define   AK4524_DEEM_48K	0x02
#define   AK4524_DEEM_32K	0x03
#define   AK4524_MUTE		0x80
#define AK4524_ADC_GAIN0	0x04
#define AK4524_ADC_GAIN1	0x05
#define AK4524_DAC_GAIN0	0x06
#define AK4524_DAC_GAIN1	0x07

/*
 * AK4358 control registers
 */
#define AK4358_ATT(chan)	((chan) <= 5 ? 0x4 + (chan) : 0xb - 6 + (chan))
#define   AK4358_ATT_EN		0x80

/*
 * AK5365 control registers
 */
#define AK5365_RST		0x00
#define   AK5365_RST_NORM	0x01
#define AK5365_SRC		0x01
#define   AK5365_SRC_MASK	0x07
#define AK5365_CTRL		0x02
#define   AK5365_CTRL_MUTE	0x01
#define   AK5365_CTRL_I2S	0x08
#define AK5365_ATT(chan)	(0x4 + (chan))

/*
 * default formats
 */
#define ENVY_RCHANS		12
#define ENVY_PCHANS		10
#define ENVY_RFRAME_SIZE	(4 * ENVY_RCHANS)
#define ENVY_PFRAME_SIZE	(4 * ENVY_PCHANS)

#endif /* !defined(SYS_DEV_PCI_ENVYREG_H) */
@


1.16
log
@add support for midi(4) ports to envy(4)
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.15 2010/07/21 07:11:55 ratchov Exp $	*/
d111 2
a112 1
#define   ENVY_MT_INTR_ERR	0x08	/* HT only fifo error */
@


1.15
log
@make ENVY_GPIO_XXX macros card specific, add stub for audiophile 192k
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.14 2010/03/07 18:55:45 ratchov Exp $	*/
a34 2
#define   ENVY_CCS_INT_MIDI1	0x80
#define   ENVY_CCS_INT_TMR	0x80
d36 1
d42 8
d89 1
d96 8
@


1.14
log
@Don't stop DMA in envy_halt_intput() and/or envy_halt_output().
Instead wait for the next interrupt and stop DMA in the interrupt
handler. This prevents the chip from entering a unstable state
in which DMA doesn't start cleanly.
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.13 2010/02/25 21:19:37 ratchov Exp $	*/
a76 8

/*
 * GPIO pin numbers
 */
#define ENVY_GPIO_CLK		0x2
#define ENVY_GPIO_DOUT		0x8
#define ENVY_GPIO_CSMASK	0x70
#define ENVY_GPIO_CS(dev)	((dev) << 4)
@


1.13
log
@Remove trailing spaces,
from Alexandr Shadchin <alexandr.shadchin at gmail.com>, thanks!
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.12 2010/02/20 16:45:28 ratchov Exp $	*/
d103 1
d111 1
d127 1
@


1.12
log
@Add necessary bits to support AC97 codecs in envy and add support
for the VIA Tremor 5.1 card.

From Alexandr Shadchin <alexandr.shadchin at gmail.com>, thanks!

help from oga@@
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.11 2009/11/02 05:54:16 ratchov Exp $	*/
d69 1
a69 1
#define	  ENVY_I2C_CTL_BUSY	0x1
d167 1
d180 1
a180 1
#define   AK4524_FMT_DBL       	0x01
d200 1
a200 1
#define	AK4524_ADC_GAIN1	0x05
@


1.11
log
@Add support for ``M-Audio Revolution 5.1'' cards, based on envy24HT.
From Alexandr Shadchin <ShadchinAV _at_ mail.ru>
Thanks!
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.10 2009/10/11 12:59:29 ratchov Exp $	*/
d110 8
@


1.10
log
@At initialization of HT chips, write configuration on the corresponding
control registers rather than on the PCI configuration space (which is
ok for non-HT chips only). Also fix the offset GPIO mask/dir are read
from EEPROM, old ones are working by accident.

both fixes are from Alexandr Shadchin <ShadchinAV _at_ mail.ru>
Thanks!
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.9 2009/05/08 17:52:18 ratchov Exp $	*/
d200 12
@


1.9
log
@add support HT mixer knobs (ie routing control). Allow monitoring
analog inputs
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.8 2009/05/08 16:53:45 ratchov Exp $	*/
d39 4
d93 1
a93 1
#define ENVY_EEPROM_GPIOMASK	10
d95 1
a95 1
#define ENVY_EEPROM_GPIODIR(s)	((s)->isht ? 13 : 12)
@


1.8
log
@add support for the ak4358 DAC used in ESI Julia cards. There are
two mono line0 and line1 knobs rather than a single stereo knob
because that's how the routing control (not exposed for ht chips yet)
works.
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.7 2009/05/08 15:31:16 ratchov Exp $	*/
d147 8
@


1.7
log
@rename few functions and macros, fix style
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.6 2009/04/25 12:15:10 ratchov Exp $	*/
d187 1
a187 1

@


1.6
log
@add basic support for Envy24HT chips and for ``ESI Juli@@''
cards using it. No mixer yet.

ok jakemsr@@
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.4 2008/11/29 18:32:18 ratchov Exp $	*/
d150 38
a187 32
#define AK_PWR			0x00
#define   AK_PWR_DA		0x01
#define   AK_PWR_AD		0x02
#define   AK_PWR_VREF		0x04
#define AK_RST			0x01
#define   AK_RST_DA		0x01
#define   AK_RST_AD		0x02
#define AK_FMT			0x02
#define   AK_FMT_NORM		0
#define   AK_FMT_DBL	       	0x01
#define   AK_FMT_QUAD		0x02
#define   AK_FMT_QAUDFILT	0x04
#define   AK_FMT_256		0
#define   AK_FMT_512		0x04
#define   AK_FMT_1024		0x08
#define   AK_FMT_384		0x10
#define   AK_FMT_768		0x14
#define   AK_FMT_LSB16		0
#define   AK_FMT_LSB20		0x20
#define   AK_FMT_MSB24		0x40
#define   AK_FMT_IIS24		0x60
#define   AK_FMT_LSB24		0x80
#define AK_DEEMVOL		0x03
#define   AK_DEEM_44K1		0x00
#define   AK_DEEM_OFF		0x01
#define   AK_DEEM_48K		0x02
#define   AK_DEEM_32K		0x03
#define   AK_MUTE		0x80
#define AK_ADC_GAIN0		0x04
#define	AK_ADC_GAIN1		0x05
#define AK_DAC_GAIN0		0x06
#define AK_DAC_GAIN1		0x07
@


1.5
log
@start splitting the driver in two parts: one specific to the
generic Envy24 chip common to all cards and another part specific
to the cards. This will ease adding support for other card models.

ok jakemsr@@
@
text
@d24 1
a24 1
#define ENVY_MT_BAR		0x1c
d39 9
d90 2
a91 2
#define ENVY_EEPROM_GPIOST	11
#define ENVY_EEPROM_GPIODIR	12
d99 2
a100 2
#define   ENVY_MT_INTR_PMASK	0x40
#define   ENVY_MT_INTR_RMASK	0x80
d103 1
a103 1
#define ENVY_MT_IMASK		3
d108 1
a108 1
#define ENVY_MT_PBLKSZ		0x16
d111 2
a112 1
#define   ENVY_MT_CTL_RSTART	0x04
@


1.4
log
@use the the correct register mask. Fixes certain mixer settings
being unreachable.
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.3 2008/02/21 01:37:55 ratchov Exp $	*/
d61 3
a63 3
#define ENVY_GPIO_DATA		0x20
#define ENVY_GPIO_MASK		0x21
#define ENVY_GPIO_DIR		0x22
a83 2
#define ENVY_EEPROM_MAXSZ	32

d94 3
a101 1
#define   ENVY_MT_CTL_PPAUSE	0x02
a102 1
#define   ENVY_MT_CTL_RPAUSE	0x08
a175 4
#define ENVY_RFRAME_SIZE	(4 * 12)
#define ENVY_PFRAME_SIZE	(4 * 10)
#define ENVY_RBUF_SIZE		(ENVY_RFRAME_SIZE * 0x1000)
#define ENVY_PBUF_SIZE		(ENVY_PFRAME_SIZE * 0x1000)
d178 2
@


1.3
log
@implement AK4524 input and output volume knobs and output mute switches.
There are 8 gain knobs but only 4 mute switches because each codec has two
channels but only one mute switch.

ok jakemsr@@
@
text
@d1 1
a1 1
/*	$OpenBSD: envyreg.h,v 1.2 2007/10/28 18:25:21 fgsch Exp $	*/
d124 1
a124 1
#define   ENVY_MT_OUTSRC_MASK	0x04
@


1.2
log
@id tags.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d130 2
a131 1
#define   ENVY_MT_SPDSRC_MASK	0x04
d164 4
@


1.1
log
@add new envy(4) driver for ICE1712 (aka VIA Envy24) audio devices. The
device uses 32bit samples, up to 96kHz sample rate, 12 input channels and 10
output channels. Currently AK4524 codecs are supported, so M-Audio Delta
cards should work. Playback and capture work, but the mixer is still
incomplete.

ok jakemsr@@
@
text
@d1 1
@

