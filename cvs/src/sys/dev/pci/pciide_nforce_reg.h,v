head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.52
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.50
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.38
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.46
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.44
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.42
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.40
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.36
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.34
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.32
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.0.8
	OPENBSD_3_4_BASE:1.1
	UBC:1.1.0.6
	UBC_SYNC_A:1.1
	SMP:1.1.0.4
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2004.09.24.07.38.38;	author grange;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.12.13.00.38;	author grange;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.13.15.39.59;	author grange;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2004.02.19.10.56.29;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Multiple inclusion protection.
@
text
@/*	$OpenBSD: pciide_nforce_reg.h,v 1.2 2003/12/12 13:00:38 grange Exp $	*/

/*
 * Copyright (c) 2003 Alexander Yurchenko <grange@@openbsd.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _DEV_PCI_PCIIDE_NFORCE_REG_H_
#define _DEV_PCI_PCIIDE_NFORCE_REG_H_

/* Configuration register */
#define NFORCE_CONF		0x50
#define NFORCE_CHAN_EN(chan) \
	(0x00000001 << (1 - (chan)))

/* PIO and multiword DMA timing register */
#define NFORCE_PIODMATIM	0x58
#define NFORCE_PIODMATIM_MASK(chan) \
	(0xffff << ((1 - (chan)) * 16))
#define NFORCE_PIODMATIM_SET(chan, drive, x) \
	((x) << ((3 - ((chan) * 2 + (drive))) * 8))

/* PIO timing register */
#define NFORCE_PIOTIM		0x5c

/* UDMA timing register */
#define NFORCE_UDMATIM		0x60
#define NFORCE_UDMATIM_MASK(chan) \
	(0xffff << ((1 - (chan)) * 16))
#define NFORCE_UDMATIM_SET(chan, drive, x) \
	((x) << ((3 - ((chan) * 2 + (drive))) * 8))
#define NFORCE_UDMA_EN(chan, drive) \
	(0x40 << ((3 - ((chan) * 2 + (drive))) * 8))
#define NFORCE_UDMA_ENM(chan, drive) \
	(0x80 << ((3 - ((chan) * 2 + (drive))) * 8))

/* Timing values */
static u_int8_t nforce_pio[] = { 0xa8, 0x65, 0x42, 0x22, 0x20 };
static u_int8_t nforce_udma[] = { 0x02, 0x01, 0x00, 0x04, 0x05, 0x06, 0x07 };

#endif	/* !_DEV_PCI_PCIIDE_NFORCE_REG_H_ */
@


1.2
log
@nforce chip doesn't have cable check bit; noticed by hugh@@ a long
time ago.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_nforce_reg.h,v 1.1 2003/02/13 15:39:59 grange Exp $	*/
d28 3
d60 2
@


1.1
log
@Final part of NVIDIA nForce/nForce2 IDE support:
- registers definitions
- timing values setup
- cable detection
Partially from Linux, FreeBSD and AMD specs.
Many thanks to Johan Lindman <tybollt@@solace.mh.se> for providing
access to the testing machine.
ok gluk@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a31 2
#define NFORCE_CONF_CABLE(chan, drive) \
	(0x00010000 << ((chan) * 2 + (drive)))
@


1.1.4.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d32 2
@


