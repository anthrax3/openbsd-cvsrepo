head	1.18;
access;
symbols
	OPENBSD_6_1:1.18.0.10
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.12
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.8
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.6
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.4
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.17.0.8
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.4
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.15.0.4
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.2
	OPENBSD_5_0:1.12.0.12
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.10
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.8
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.4
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.6
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.2
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.9.0.2
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.6
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	SMP:1.2.0.4
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	UBC:1.1.0.4
	UBC_SYNC_B:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.18
date	2014.03.17.22.01.56;	author kettenis;	state Exp;
branches;
next	1.17;

1.17
date	2012.12.22.19.17.36;	author mpi;	state Exp;
branches;
next	1.16;

1.16
date	2012.12.04.10.42.04;	author mpi;	state Exp;
branches;
next	1.15;

1.15
date	2011.10.24.15.42.33;	author oga;	state Exp;
branches;
next	1.14;

1.14
date	2011.10.16.01.11.31;	author dhill;	state Exp;
branches;
next	1.13;

1.13
date	2011.09.14.10.26.16;	author oga;	state Exp;
branches;
next	1.12;

1.12
date	2008.12.24.05.42.58;	author oga;	state Exp;
branches;
next	1.11;

1.11
date	2008.12.23.22.01.38;	author oga;	state Exp;
branches;
next	1.10;

1.10
date	2008.03.23.08.36.41;	author damien;	state Exp;
branches;
next	1.9;

1.9
date	2007.12.07.17.35.22;	author oga;	state Exp;
branches;
next	1.8;

1.8
date	2007.11.25.17.11.12;	author oga;	state Exp;
branches;
next	1.7;

1.7
date	2007.08.04.19.40.25;	author reyk;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.11.21.15.21;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.03.19.24.42;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.13.22.59.02;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.20.19.30.41;	author grange;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.19.20.06.28;	author millert;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2002.07.12.20.17.03;	author mickey;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2002.10.29.00.33.27;	author art;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.05.19.22.17.59;	author tedu;	state Exp;
branches;
next	;

1.2.4.1
date	2004.02.19.10.56.25;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.18
log
@The AGP ioctl interface is gone; remove the header file as well.

ok matthieu@@
@
text
@/*	$OpenBSD: agpreg.h,v 1.17 2012/12/22 19:17:36 mpi Exp $	*/
/*	$NetBSD: agpreg.h,v 1.1 2001/09/10 10:01:02 fvdl Exp $	*/

/*-
 * Copyright (c) 2000 Doug Rabson
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	$FreeBSD: src/sys/pci/agpreg.h,v 1.3 2000/07/12 10:13:04 dfr Exp $
 */

#ifndef _PCI_AGPREG_H_
#define _PCI_AGPREG_H_

/*
 * The AGP gatt uses 4k pages irrespective of the host page size.
 */
#define AGP_PAGE_SIZE		4096
#define AGP_PAGE_SHIFT		12

/*
 * Offsets for various AGP configuration registers.
 */
#define AGP_APBASE			0x10

/*
 * Offsets from the AGP Capability pointer.
 */
#define AGP_CAPID			0x02
#define AGP_CAPID_GET_MAJOR(x)		(((x) & 0x00f00000U) >> 20)
#define AGP_CAPID_GET_MINOR(x)		(((x) & 0x000f0000U) >> 16)
#define AGP_CAPID_GET_NEXT_PTR(x)	(((x) & 0x0000ff00U) >> 8)
#define AGP_CAPID_GET_CAP_ID(x)		(((x) & 0x000000ffU) >> 0)

#define AGP_STATUS			0x4
#define AGP_COMMAND			0x8

/*
 * Macros to manipulate AGP mode words.
 */
#define AGP_MODE_GET_RQ(x)		(((x) & 0xff000000U) >> 24)
#define AGP_MODE_GET_SBA(x)		(((x) & 0x00000200U) >> 9)
#define AGP_MODE_GET_AGP(x)		(((x) & 0x00000100U) >> 8)
#define AGP_MODE_GET_4G(x)		(((x) & 0x00000020U) >> 5)
#define AGP_MODE_GET_FW(x)		(((x) & 0x00000010U) >> 4)
#define AGP_MODE_GET_RATE(x)		((x) & 0x00000007U)
#define AGP_MODE_SET_RQ(x,v)		(((x) & ~0xff000000U) | ((v) << 24))
#define AGP_MODE_SET_SBA(x,v)		(((x) & ~0x00000200U) | ((v) << 9))
#define AGP_MODE_SET_AGP(x,v)		(((x) & ~0x00000100U) | ((v) << 8))
#define AGP_MODE_SET_4G(x,v)		(((x) & ~0x00000020U) | ((v) << 5))
#define AGP_MODE_SET_FW(x,v)		(((x) & ~0x00000010U) | ((v) << 4))
#define AGP_MODE_SET_RATE(x,v)		(((x) & ~0x00000007U) | (v))
#define AGP_MODE_RATE_1x		0x00000001
#define AGP_MODE_RATE_2x		0x00000002
#define AGP_MODE_RATE_4x		0x00000004

/*
 * Config offsets for Intel AGP chipsets.
 */
/* i840/850/850E */
#define AGP_I840_MCHCFG			0x50
#define MCHCFG_AAGN			(1U << 9)  /* Aperture AccessEN */

/* i82443LX/BX/GX */
#define AGP_INTEL_NBXCFG		0x50
#define AGP_INTEL_STS			0x90
#define NBXCFG_APAE			(1U << 10) /* AGPtoPCI AccessDIS */
#define NBXCFG_AAGN			(1U << 9)  /* Aperture AccessEN */

/* Error Status for i8XX Chipset */
#define	AGP_INTEL_I8XX_ERRSTS		0xc8

/* Common register */
#define	AGP_INTEL_ERRCMD		0x90	/* Not i8XX, 8 bits
						 * ERRSTS is at + 1 and is 16
						 */
#define AGP_INTEL_AGPCMD		0xa8
#define AGPCMD_SBA			(1U << 9)
#define AGPCMD_AGPEN			(1U << 8)
#define AGPCMD_FWEN			(1U << 4)
#define AGPCMD_RATE_1X			(1U << 1)
#define AGPCMD_RATE_2X			(1U << 2)
#define AGPCMD_RATE_4X			(1U << 3)

#define AGP_INTEL_AGPCTRL		0xb0
#define AGPCTRL_AGPRSE			(1U << 13) /* AGPRSE (82443 only)*/
#define AGPCTRL_GTLB			(1U << 7)  /* GTLB EN */

#define AGP_INTEL_APSIZE		0xb4
#define APSIZE_MASK			0x3f

#define AGP_INTEL_ATTBASE		0xb8

/*
 * Config offsets for VIA AGP 2.x chipsets.
 */
#define AGP_VIA_GARTCTRL		0x80
#define AGP_VIA_APSIZE			0x84
#define AGP_VIA_ATTBASE			0x88

/*
 * Config offsets for VIA AGP 3.0 chipsets.
 */
#define AGP3_VIA_GARTCTRL		0x90
#define AGP3_VIA_APSIZE			0x94
#define AGP3_VIA_ATTBASE		0x98
#define AGP_VIA_AGPSEL_REG		0xfc
#define AGP_VIA_AGPSEL			0xfd

/*
 * Config offsets for SiS AGP chipsets.
 */
#define AGP_SIS_ATTBASE			0x90
#define AGP_SIS_WINCTRL			0x94
#define AGP_SIS_TLBCTRL			0x97
#define AGP_SIS_TLBFLUSH		0x98

/*
 * Config offsets for Apple UniNorth & U3 AGP chipsets.
 */
#define AGP_APPLE_ATTBASE		0x8c
#define AGP_APPLE_APBASE		0x90
#define AGP_APPLE_GARTCTRL		0x94

#define AGP_APPLE_GART_INVALIDATE	0x00001
#define AGP_APPLE_GART_ENABLE		0x00100
#define AGP_APPLE_GART_2XRESET		0x10000
#define AGP_APPLE_GART_PERFRD		0x80000

/*
 * Config offsets for Ali AGP chipsets.
 */
#define AGP_ALI_AGPCTRL			0xb8
#define AGP_ALI_ATTBASE			0xbc
#define AGP_ALI_TLBCTRL			0xc0

/*
 * Config offsets for the AMD 751 chipset.
 */
#define AGP_AMD751_REGISTERS		0x14
#define AGP_AMD751_APCTRL		0xac
#define AGP_AMD751_MODECTRL		0xb0
#define AGP_AMD751_MODECTRL_SYNEN	0x80
#define AGP_AMD751_MODECTRL2		0xb2
#define AGP_AMD751_MODECTRL2_G1LM	0x01
#define AGP_AMD751_MODECTRL2_GPDCE	0x02
#define AGP_AMD751_MODECTRL2_NGSE	0x08

/*
 * Memory mapped register offsets for AMD 751 chipset.
 */
#define AGP_AMD751_CAPS			0x00
#define AGP_AMD751_CAPS_EHI		0x0800
#define AGP_AMD751_CAPS_P2P		0x0400
#define AGP_AMD751_CAPS_MPC		0x0200
#define AGP_AMD751_CAPS_VBE		0x0100
#define AGP_AMD751_CAPS_REV		0x00ff
#define AGP_AMD751_STATUS		0x02
#define AGP_AMD751_STATUS_P2PS		0x0800
#define AGP_AMD751_STATUS_GCS		0x0400
#define AGP_AMD751_STATUS_MPS		0x0200
#define AGP_AMD751_STATUS_VBES		0x0100
#define AGP_AMD751_STATUS_P2PE		0x0008
#define AGP_AMD751_STATUS_GCE		0x0004
#define AGP_AMD751_STATUS_VBEE		0x0001
#define AGP_AMD751_ATTBASE		0x04
#define AGP_AMD751_TLBCTRL		0x0c

/*
 * Config registers for i810 device 0
 */
#define AGP_I810_SMRAM			0x70
#define AGP_I810_SMRAM_GMS		0xc0
#define AGP_I810_SMRAM_GMS_DISABLED	0x00
#define AGP_I810_SMRAM_GMS_ENABLED_0	0x40
#define AGP_I810_SMRAM_GMS_ENABLED_512	0x80
#define AGP_I810_SMRAM_GMS_ENABLED_1024 0xc0
#define AGP_I810_MISCC			0x72
#define AGP_I810_MISCC_WINSIZE	 	0x0001
#define AGP_I810_MISCC_WINSIZE_64	0x0000
#define AGP_I810_MISCC_WINSIZE_32	0x0001
#define AGP_I810_MISCC_PLCK		0x0008
#define AGP_I810_MISCC_PLCK_UNLOCKED	0x0000
#define AGP_I810_MISCC_PLCK_LOCKED	0x0008
#define AGP_I810_MISCC_WPTC		0x0030
#define AGP_I810_MISCC_WPTC_NOLIMIT	0x0000
#define AGP_I810_MISCC_WPTC_62		0x0010
#define AGP_I810_MISCC_WPTC_50		0x0020
#define AGP_I810_MISCC_WPTC_37		0x0030
#define AGP_I810_MISCC_RPTC		0x00c0
#define AGP_I810_MISCC_RPTC_NOLIMIT	0x0000
#define AGP_I810_MISCC_RPTC_62		0x0040
#define AGP_I810_MISCC_RPTC_50		0x0080 
#define AGP_I810_MISCC_RPTC_37		0x00c0

/*
 * Config registers for i810 device 1
 */
#define AGP_I810_GMADR			0x10
#define AGP_I810_MMADR			0x14

/*
 * Memory mapped register offsets for i810 chipset.
 */
#define AGP_I810_PGTBL_CTL		0x2020
#define AGP_I810_PGTBL_SIZE_MASK	0x0000000e
#define AGP_I810_PGTBL_SIZE_512KB	(0 << 1)
#define AGP_I810_PGTBL_SIZE_256KB	(1 << 1)
#define AGP_I810_PGTBL_SIZE_128KB	(2 << 1)
#define AGP_I810_DRT			0x3000
#define AGP_I810_DRT_UNPOPULATED	0x00
#define AGP_I810_DRT_POPULATED		0x01
#define AGP_I810_GTT			0x10000

/*
 * Config registers for i830MG device 0
 */
#define AGP_I830_GCC0                   0x50
#define AGP_I830_GCC1                   0x52
#define AGP_I830_GCC1_DEV2              0x08
#define AGP_I830_GCC1_DEV2_ENABLED      0x00
#define AGP_I830_GCC1_DEV2_DISABLED     0x08
#define AGP_I830_GCC1_GMS               0xf0
#define AGP_I830_GCC1_GMS_STOLEN_512    0x20
#define AGP_I830_GCC1_GMS_STOLEN_1024   0x30
#define AGP_I830_GCC1_GMS_STOLEN_8192   0x40
#define AGP_I830_GCC1_GMASIZE           0x01
#define AGP_I830_GCC1_GMASIZE_64        0x01
#define AGP_I830_GCC1_GMASIZE_128       0x00


/*
 * Config registers for 852GM/855GM/865G device 0
 */
#define AGP_I855_GCC1			0x50
#define AGP_I855_GCC1_DEV2		0x08
#define AGP_I855_GCC1_DEV2_ENABLED	0x00
#define AGP_I855_GCC1_DEV2_DISABLED	0x08
#define AGP_I855_GCC1_GMS		0xf0
#define AGP_I855_GCC1_GMS_STOLEN_0M	0x00
#define AGP_I855_GCC1_GMS_STOLEN_1M	0x10
#define AGP_I855_GCC1_GMS_STOLEN_4M	0x20
#define AGP_I855_GCC1_GMS_STOLEN_8M	0x30
#define AGP_I855_GCC1_GMS_STOLEN_16M	0x40
#define AGP_I855_GCC1_GMS_STOLEN_32M	0x50

/*
 * 915G registers
 */
#define AGP_I915_GMADR			0x18
#define AGP_I915_MMADR			0x10
#define AGP_I915_GTTADR			0x1C
#define AGP_I915_GCC1_GMS_STOLEN_48M	0x60
#define AGP_I915_GCC1_GMS_STOLEN_64M	0x70
#define AGP_I915_DEVEN			0x54
#define AGP_I915_DEVEN_D2F0		0x08
#define AGP_I915_DEVEN_D2F0_ENABLED	0x08
#define AGP_I915_DEVEN_D2F0_DISABLED	0x00
#define AGP_I915_MSAC			0x62
#define AGP_I915_MSAC_GMASIZE		0x02
#define AGP_I915_MSAC_GMASIZE_128	0x02
#define AGP_I915_MSAC_GMASIZE_256	0x00

/*
 * G965 registers
 */
#define AGP_I965_GMADR			0x18
#define AGP_I965_MMADR			0x10
#define AGP_I965_MSAC			0x62
#define AGP_I965_MSAC_GMASIZE		0x06
#define AGP_I965_MSAC_GMASIZE_128	0x00
#define AGP_I965_MSAC_GMASIZE_256	0x02
#define AGP_I965_MSAC_GMASIZE_512	0x06
#define AGP_I965_GTT			0x80000

/*
 * G33 registers
 */
#define AGP_G33_GCC1_GMS_STOLEN_128M	0x80
#define AGP_G33_GCC1_GMS_STOLEN_256M	0x90
#define AGP_G33_PGTBL_SIZE_MASK		(3U << 8)
#define AGP_G33_PGTBL_SIZE_1M		(1U << 8)
#define AGP_G33_PGTBL_SIZE_2M		(2U << 8)

/*
 * Intel 4-series registers and values
 */
#define AGP_INTEL_GMCH_GMS_STOLEN_96M	0xa0
#define AGP_INTEL_GMCH_GMS_STOLEN_160M	0xb0
#define AGP_INTEL_GMCH_GMS_STOLEN_224M	0xc0
#define AGP_INTEL_GMCH_GMS_STOLEN_352M	0xd0
#define	AGP_G4X_GTT			0x200000

/*
 * Intel Sandybridge registers and values
 */
#define AGP_INTEL_SNB_GMCH_CTRL			0x50
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_MASK	0xF8
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_32M	(1 << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_64M	(2 << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_96M	(3 << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_128M	(4 << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_160M	(5 << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_192M	(6 << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_224M	(7 << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_256M	(8 << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_288M	(9 << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_320M	(0xa << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_352M	(0xb << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_384M	(0xc << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_416M	(0xd << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_448M	(0xe << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_480M	(0xf << 3)
#define AGP_INTEL_SNB_GMCH_GMS_STOLEN_512M	(0x10 << 3)

#endif /* !_PCI_AGPREG_H_ */
@


1.17
log
@Add support for U3 brigdes present in macppc G5 machines. Many thanks
to Chris Jackman for sending me a PowerMac G5!
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.16 2012/12/04 10:42:04 mpi Exp $	*/
d36 6
d57 19
@


1.16
log
@Add support for Uninorth AGP bridges found in most if not all the macppc
machines with a G3 or G4 microprocessor. It would not be difficult to add
support for U3 bridges found in G5 powered macppc to this driver but I
don't have such hardware.
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.15 2011/10/24 15:42:33 oga Exp $	*/
d123 1
@


1.15
log
@Fix unaligned pci config space access in intelagp.

tested by reported. ok kettenis@@ (who pointed out a botch i'd made, too).

While here remove definition of another (unused) unaligned access. to be added
back when it is actually used (this one pointed out by deraadt@@).
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.14 2011/10/16 01:11:31 dhill Exp $	*/
d112 11
@


1.14
log
@align the read to the PCI config space.

from drahn@@, ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.13 2011/09/14 10:26:16 oga Exp $	*/
a54 4
/* i845/855PM */
#define	AGP_I845_AGPMISC		0x51
#define AGPMISC_AAGN			(1U << 1)  /* Aperture AccessEN */

d69 3
a71 1
#define	AGP_INTEL_ERRSTS		0x91	/* Not i8XX */
@


1.13
log
@Initial kernel support for sandybridge intel chipsets in intagp and inteldrm.

Far from perfect. Extra (almost essential) features like the extra
ringbuffers are not yet supported (I have half a diff), but this and the
appropriate ddx patches allow modesetting and basic shadow acceleration.

Initial work by jcs@@, a few cleanups and bugfixes by me.

Tested by many on all appropriate chipsets. ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.12 2008/12/24 05:42:58 oga Exp $	*/
d104 1
@


1.12
log
@Fix support for earlier i8XX chipsets (specifically the 830 and 840).

Earlier changes meant that we were reading the wrong register, on the
graphics card instead of the gmch (bus 0, device 0, function 0. it's the
memory controller on all boards with intel chipsets).  Later chipsets
have a ``mirror'' register on the graphics card device, explaining why
this didn't manifest on all chipsets. For simplicity, always find and
read the register from the GMCH. While i'm here, fixup unaligned
configuration space access (0x50 vs 0x52)

Tested by several.
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.11 2008/12/23 22:01:38 oga Exp $	*/
d277 22
@


1.11
log
@intagp support for Intel 4-series (e.g. GM45) chipsets.

Tested by several x200 owners.
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.10 2008/03/23 08:36:41 damien Exp $	*/
d219 1
a219 1
#define AGP_I855_GCC1			0x52
@


1.10
log
@Add AGP support for the Intel G33 chipset.
Tested on i386 with a Gigabyte G33M-DS2R motherboard (Intel GMA 3100).
Based on NetBSD code.

ok oga@@
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.9 2007/12/07 17:35:22 oga Exp $	*/
d223 1
a223 1
#define AGP_I855_GCC1_GMS		0x70
d268 9
@


1.9
log
@KNF, no binary change.

Looked over by a few people.
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.8 2007/11/25 17:11:12 oga Exp $	*/
d265 3
@


1.8
log
@Make agp attach as a device. This means that many more agp bridges
actually get detected and attached. Also adds a kernel api for
manipulating agp.

Enable this on i386 and amd64.

"I think you should commit it" deraadt@@, ok matthieu. Looked over by
several others.
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.7 2007/08/04 19:40:25 reyk Exp $	*/
d38 1
a38 1
#define AGP_APBASE		0x10
d43 1
a43 1
#define AGP_CAPID		0x02
d49 2
a50 2
#define AGP_STATUS		0x4
#define AGP_COMMAND		0x8
d56 2
a57 2
#define	AGP_I845_AGPMISC	0x51
#define AGPMISC_AAGN		(1U << 1)  /* Aperture AccessEN */
d60 2
a61 2
#define AGP_I840_MCHCFG		0x50
#define MCHCFG_AAGN		(1U << 9)  /* Aperture AccessEN */
d64 4
a67 4
#define AGP_INTEL_NBXCFG	0x50
#define AGP_INTEL_STS		0x90
#define NBXCFG_APAE		(1U << 10) /* AGPtoPCI AccessDIS */
#define NBXCFG_AAGN		(1U << 9)  /* Aperture AccessEN */
d70 1
a70 1
#define	AGP_INTEL_I8XX_ERRSTS	0xc8
d73 12
a84 12
#define	AGP_INTEL_ERRSTS	0x91	/* Not i8XX */
#define AGP_INTEL_AGPCMD	0xa8
#define AGPCMD_SBA		(1U << 9)
#define AGPCMD_AGPEN		(1U << 8)
#define AGPCMD_FWEN		(1U << 4)
#define AGPCMD_RATE_1X		(1U << 1)
#define AGPCMD_RATE_2X		(1U << 2)
#define AGPCMD_RATE_4X		(1U << 3)

#define AGP_INTEL_AGPCTRL	0xb0
#define AGPCTRL_AGPRSE		(1U << 13) /* AGPRSE (82443 only)*/
#define AGPCTRL_GTLB		(1U << 7)  /* GTLB EN */
d86 2
a87 2
#define AGP_INTEL_APSIZE	0xb4
#define APSIZE_MASK		0x3f
d89 1
a89 1
#define AGP_INTEL_ATTBASE	0xb8
d94 3
a96 3
#define AGP_VIA_GARTCTRL	0x80
#define AGP_VIA_APSIZE		0x84
#define AGP_VIA_ATTBASE		0x88
d101 4
a104 4
#define AGP3_VIA_GARTCTRL	0x90
#define AGP3_VIA_APSIZE		0x94
#define AGP3_VIA_ATTBASE	0x98
#define AGP_VIA_AGPSEL		0xfd
d109 4
a112 4
#define AGP_SIS_ATTBASE		0x90
#define AGP_SIS_WINCTRL		0x94
#define AGP_SIS_TLBCTRL		0x97
#define AGP_SIS_TLBFLUSH	0x98
d117 3
a119 3
#define AGP_ALI_AGPCTRL		0xb8
#define AGP_ALI_ATTBASE		0xbc
#define AGP_ALI_TLBCTRL		0xc0
d124 3
a126 3
#define AGP_AMD751_REGISTERS	0x14
#define AGP_AMD751_APCTRL	0xac
#define AGP_AMD751_MODECTRL	0xb0
d128 1
a128 1
#define AGP_AMD751_MODECTRL2	0xb2
d136 1
a136 1
#define AGP_AMD751_CAPS		0x00
d142 1
a142 1
#define AGP_AMD751_STATUS	0x02
d150 2
a151 2
#define AGP_AMD751_ATTBASE	0x04
#define AGP_AMD751_TLBCTRL	0x0c
d156 1
a156 1
#define AGP_I810_SMRAM		0x70
d162 2
a163 2
#define AGP_I810_MISCC		0x72
#define AGP_I810_MISCC_WINSIZE		      0x0001
d173 1
a173 1
#define AGP_I810_MISCC_WPTC_37		      0x0030
d177 1
a177 1
#define AGP_I810_MISCC_RPTC_50		0x0080
d183 2
a184 2
#define AGP_I810_GMADR		0x10
#define AGP_I810_MMADR		0x14
@


1.7
log
@Add AGP support for the intel i965 chipset, this also extends the
internal AGP API to work with 64bit PCI-Express memory and
non-standard AGP aperture bases.

tested by many
ok matthieu@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.6 2006/02/11 21:15:21 matthieu Exp $	*/
d55 9
d66 16
d83 3
d87 2
d92 1
a92 1
 * Config offsets for VIA AGP chipsets.
d97 8
@


1.6
log
@New version of i915 supprotm  adapted from freebsd by Dimitry Andric, with
one tweak suggested by miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.5 2006/02/03 19:24:42 millert Exp $	*/
d151 9
a159 5
#define AGP_I810_PGTBL_CTL	0x2020
#define AGP_I810_DRT		0x3000
#define AGP_I810_DRT_UNPOPULATED 0x00
#define AGP_I810_DRT_POPULATED	0x01
#define AGP_I810_GTT		0x10000
d169 1
a169 1
#define AGP_I830_GCC1_GMS               0x70
d209 18
@


1.5
log
@Back out i915 changes; they broke some i810-based machines.
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.4 2006/01/13 22:59:02 deraadt Exp $	*/
d188 17
@


1.4
log
@support i915.  adapted from freebsd by Dimitry Andric.  does not break
at least i810 on x40, but made x41 work.  ok matthieu
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.3 2004/01/20 19:30:41 grange Exp $	*/
a187 17

/*
 * 915G registers
 */
#define AGP_I915_GMADR			0x18
#define AGP_I915_MMADR			0x10
#define AGP_I915_GTTADR			0x1C
#define AGP_I915_GCC1_GMS_STOLEN_48M	0x60
#define AGP_I915_GCC1_GMS_STOLEN_64M	0x70
#define AGP_I915_DEVEN			0x54
#define AGP_I915_DEVEN_D2F0		0x08
#define AGP_I915_DEVEN_D2F0_ENABLED	0x08
#define AGP_I915_DEVEN_D2F0_DISABLED	0x00
#define AGP_I915_MSAC			0x62
#define AGP_I915_MSAC_GMASIZE		0x02
#define AGP_I915_MSAC_GMASIZE_128	0x02
#define AGP_I915_MSAC_GMASIZE_256	0x00
@


1.3
log
@Support for i852/855/865 AGP; from NetBSD via Michael van der
Westhuizen <michael@@skanky.homeunix.net> with little tweaks.

Tested by millert@@ todd@@ jmc@@ andreas@@ and jcs@@'s friend
ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.2 2003/03/19 20:06:28 millert Exp $	*/
d188 17
@


1.2
log
@Add i830 support from NetBSD via patch in kernel/3150.
Verified to not break i81[05] and tested on two i830s.
@
text
@d1 1
a1 1
/*	$OpenBSD: agpreg.h,v 1.1 2002/07/12 20:17:03 mickey Exp $	*/
d172 16
@


1.2.4.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a171 16


/*
 * Config registers for 852GM/855GM/865G device 0
 */
#define AGP_I855_GCC1			0x52
#define AGP_I855_GCC1_DEV2		0x08
#define AGP_I855_GCC1_DEV2_ENABLED	0x00
#define AGP_I855_GCC1_DEV2_DISABLED	0x08
#define AGP_I855_GCC1_GMS		0x70
#define AGP_I855_GCC1_GMS_STOLEN_0M	0x00
#define AGP_I855_GCC1_GMS_STOLEN_1M	0x10
#define AGP_I855_GCC1_GMS_STOLEN_4M	0x20
#define AGP_I855_GCC1_GMS_STOLEN_8M	0x30
#define AGP_I855_GCC1_GMS_STOLEN_16M	0x40
#define AGP_I855_GCC1_GMS_STOLEN_32M	0x50
@


1.1
log
@support for the agp gart on various agp chipsets.
only i810 driver was tested though.
based on the netbsd's lkm, initially ported
by hunter@@dg.net.ua and later made into shape by mickey.
testing by art@@ and millert@@ .
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d156 16
@


1.1.4.1
log
@sync to -current
@
text
@@


1.1.4.2
log
@sync
@
text
@a156 16
/*
 * Config registers for i830MG device 0
 */
#define AGP_I830_GCC0                   0x50
#define AGP_I830_GCC1                   0x52
#define AGP_I830_GCC1_DEV2              0x08
#define AGP_I830_GCC1_DEV2_ENABLED      0x00
#define AGP_I830_GCC1_DEV2_DISABLED     0x08
#define AGP_I830_GCC1_GMS               0x70
#define AGP_I830_GCC1_GMS_STOLEN_512    0x20
#define AGP_I830_GCC1_GMS_STOLEN_1024   0x30
#define AGP_I830_GCC1_GMS_STOLEN_8192   0x40
#define AGP_I830_GCC1_GMASIZE           0x01
#define AGP_I830_GCC1_GMASIZE_64        0x01
#define AGP_I830_GCC1_GMASIZE_128       0x00

@


