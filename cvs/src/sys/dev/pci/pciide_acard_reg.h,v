head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.52
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.50
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.38
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.46
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.44
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.42
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.40
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.36
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.34
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.32
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.30
	OPENBSD_5_0:1.5.0.28
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.26
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.24
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.20
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.22
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.18
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.16
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.14
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.12
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.10
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.8
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.1.0.14
	OPENBSD_3_4_BASE:1.1
	UBC_SYNC_A:1.1
	OPENBSD_3_3:1.1.0.12
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.10
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.1
	UBC:1.1.0.6
	UBC_BASE:1.1
	SMP:1.1.0.4
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.09.24.07.43.03;	author grange;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.24.07.38.38;	author grange;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.12.13.03.51;	author grange;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.28.21.01.43;	author grange;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.03.22.03.44;	author chris;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.10.31.03.22.47;	author nate;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2004.02.19.10.56.29;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Missing $OpenBSD$ tag.
@
text
@/*	$OpenBSD$	*/
/*	$NetBSD: pciide_acard_reg.h,v 1.1 2001/04/21 16:36:38 tsutsui Exp $	*/

/*
 * Copyright (c) 2001 Izumi Tsutsui.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef _DEV_PCI_PCIIDE_ACARD_REG_H_
#define _DEV_PCI_PCIIDE_ACARD_REG_H_

#define ATP850_IDETIME(channel)	(0x40 + (channel) * 4)
#define ATP860_IDETIME		0x40

#define	ATP850_SETTIME(drive, act, rec)					\
	    (((((act) & 0xf) << 8) | ((rec) & 0xf)) << ((drive) * 16))
#define	ATP860_SETTIME(channel, drive, act, rec)			\
	    (((((act) & 0xf) << 4) | ((rec) & 0xf)) <<			\
	    ((channel) * 16 + (drive) * 8))
#define	ATP860_SETTIME_MASK(channel)	(0xffff << ((channel) * 16))

static const u_int8_t acard_act_udma[] = {0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3};
static const u_int8_t acard_rec_udma[] = {0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1};
static const u_int8_t acard_act_dma[]  = {0x0, 0x3, 0x3};
static const u_int8_t acard_rec_dma[]  = {0xa, 0x3, 0x1};
static const u_int8_t acard_act_pio[]  = {0x0, 0x0, 0x0, 0x3, 0x3};
static const u_int8_t acard_rec_pio[]  = {0x0, 0xa, 0x8, 0x3, 0x1};

#define ATP850_UDMA		0x54
#define ATP860_UDMA		0x44

#define	ATP850_UDMA_MODE(channel, drive, x)		\
	    (((x) & 0x3) << ((channel) * 4 + (drive) * 2))
#define	ATP860_UDMA_MODE(channel, drive, x)		\
	    (((x) & 0xf) << ((channel) * 8 + (drive) * 4))
#define	ATP850_UDMA_MASK(channel)	(0xf << ((channel) * 4))
#define	ATP860_UDMA_MASK(channel)	(0xff << ((channel) * 8))

static const u_int8_t acard_udma_conf[] = {0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7};

#define ATP8x0_CTRL		0x48
#define  ATP8x0_CTRL_EN(chan)	(0x00020000 << (chan))
#define  ATP860_CTRL_INT	0x00010000
#define  ATP860_CTRL_80P(chan)	(0x00000100 << (chan))

#endif	/* !_DEV_PCI_PCIIDE_ACARD_REG_H_ */
@


1.4
log
@Multiple inclusion protection.
@
text
@d1 1
@


1.3
log
@Support for 2 new acard ata133 chips.
@
text
@d30 3
d66 2
@


1.2
log
@kill trailing spaces, no functional changes
@
text
@d40 2
a41 2
static const u_int8_t acard_act_udma[] = {0x3, 0x3, 0x3, 0x3, 0x3};
static const u_int8_t acard_rec_udma[] = {0x1, 0x1, 0x1, 0x1, 0x1};
d57 1
a57 1
static const u_int8_t acard_udma_conf[] = {0x1, 0x2, 0x3, 0x4, 0x5};
@


1.1
log
@from NetBSD:
Add support for Acard ATP850/860, Highpoint HPT370A, and ALi UDMA4/5 controllers
Workaround some OPTi chipset bugs (opti_chip_map still disabled by default)
@
text
@d20 1
a20 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     
@


1.1.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@@


1.1.4.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d20 1
a20 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
d40 2
a41 2
static const u_int8_t acard_act_udma[] = {0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3};
static const u_int8_t acard_rec_udma[] = {0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1};
d57 1
a57 1
static const u_int8_t acard_udma_conf[] = {0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7};
@


