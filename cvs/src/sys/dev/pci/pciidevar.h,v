head	1.21;
access;
symbols
	OPENBSD_6_2_BASE:1.21
	OPENBSD_6_1:1.21.0.8
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.6
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.20.0.24
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.22
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.20
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.18
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.14
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.12
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.10
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.8
	OPENBSD_5_0:1.20.0.6
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.4
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.2
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.19.0.2
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.18.0.6
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.2
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.16.0.16
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.14
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.12
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.10
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.8
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.6
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.4
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.2
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.7.0.12
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.10
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.8
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.4.0.4
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.4
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.21
date	2015.09.10.18.10.34;	author deraadt;	state Exp;
branches;
next	1.20;
commitid	pbNNrPaFfPV40pxN;

1.20
date	2010.07.22.18.11.16;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2009.10.05.20.01.40;	author jsg;	state Exp;
branches;
next	1.18;

1.18
date	2009.01.04.10.37.40;	author jsg;	state Exp;
branches;
next	1.17;

1.17
date	2009.01.04.10.22.01;	author jsg;	state Exp;
branches;
next	1.16;

1.16
date	2004.10.17.19.00.46;	author grange;	state Exp;
branches;
next	1.15;

1.15
date	2004.10.17.18.47.08;	author grange;	state Exp;
branches;
next	1.14;

1.14
date	2004.10.17.18.32.12;	author grange;	state Exp;
branches;
next	1.13;

1.13
date	2004.10.17.18.23.58;	author grange;	state Exp;
branches;
next	1.12;

1.12
date	2004.10.17.18.22.13;	author grange;	state Exp;
branches;
next	1.11;

1.11
date	2004.10.17.18.16.12;	author grange;	state Exp;
branches;
next	1.10;

1.10
date	2004.10.17.18.05.55;	author grange;	state Exp;
branches;
next	1.9;

1.9
date	2004.10.17.17.58.30;	author grange;	state Exp;
branches;
next	1.8;

1.8
date	2004.09.24.07.38.38;	author grange;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.04.30.34;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.03.16.06;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.59;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.25.21.40.20;	author csapuntz;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2001.04.04.07.02.55;	author csapuntz;	state Exp;
branches;
next	1.2;

1.2
date	99.07.18.21.25.20;	author csapuntz;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	98.06.30.22.58.18;	author angelos;	state Exp;
branches;
next	;

1.2.4.1
date	2001.05.14.22.25.56;	author niklas;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2001.07.04.10.42.58;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2002.03.28.15.35.59;	author niklas;	state Exp;
branches;
next	;

1.4.4.1
date	2002.06.11.03.42.27;	author art;	state Exp;
branches;
next	;


desc
@@


1.21
log
@sizes for free(); ok sthen
@
text
@/*	$OpenBSD: pciidevar.h,v 1.20 2010/07/22 18:11:16 deraadt Exp $	*/
/*	$NetBSD: pciidevar.h,v 1.6 2001/01/12 16:04:00 bouyer Exp $	*/

/*
 * Copyright (c) 1998 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _DEV_PCI_PCIIDEVAR_H_
#define _DEV_PCI_PCIIDEVAR_H_

/*
 * PCI IDE driver exported software structures.
 *
 * Author: Christopher G. Demetriou, March 2, 1998.
 */

#include <dev/ata/atavar.h>
#include <dev/ic/wdcreg.h>
#include <dev/ic/wdcvar.h>

/*
 * While standard PCI IDE controllers only have 2 channels, it is
 * common for PCI SATA controllers to have more.  Here we define
 * the maximum number of channels that any one PCI IDE device can
 * have.
 */
#define PCIIDE_MAX_CHANNELS	4

struct pciide_softc {
	struct wdc_softc	sc_wdcdev;	/* common wdc definitions */
	pci_chipset_tag_t	sc_pc;		/* PCI registers info */
	pcitag_t		sc_tag;
	void			*sc_pci_ih;	/* PCI interrupt handle */
	int			sc_dma_ok;	/* bus-master DMA info */
	bus_space_tag_t		sc_dma_iot;
	bus_space_handle_t	sc_dma_ioh;
	bus_size_t		sc_dma_iosz;
	bus_dma_tag_t		sc_dmat;

	/*
	 * Some controllers might have DMA restrictions other than
	 * the norm.
	 */
	bus_size_t		sc_dma_maxsegsz;
	bus_size_t		sc_dma_boundary;

	/*
	 * Used as a register save space by pciide_activate()
	 * 
	 * sc_save[] is for the 6 pci regs starting at PCI_MAPREG_END + 0x18 --
	 * most IDE chipsets need a subset of those saved.  sc_save2 is for
	 * up to 6 other registers, which specific chips might need saved.
	 */
	pcireg_t		sc_save[6];
	pcireg_t		sc_save2[6];

	/* Chip description */
	const struct pciide_product_desc *sc_pp;
	/* unmap/detach */
	void (*chip_unmap)(struct pciide_softc *, int);
	/* Chip revision */
	int sc_rev;
	/* common definitions */
	struct channel_softc *wdc_chanarray[PCIIDE_MAX_CHANNELS];
	/* internal bookkeeping */
	struct pciide_channel {			/* per-channel data */
		struct channel_softc wdc_channel; /* generic part */
		const char	*name;
		int		hw_ok;		/* hardware mapped & OK? */
		int		compat;		/* is it compat? */
		int             dma_in_progress;
		void		*ih;		/* compat or pci handle */
		bus_space_handle_t ctl_baseioh;	/* ctrl regs blk, native mode */
		/* DMA tables and DMA map for xfer, for each drive */
		struct pciide_dma_maps {
			bus_dmamap_t    dmamap_table;
			struct idedma_table *dma_table;
			bus_dmamap_t    dmamap_xfer;
			int dma_flags;
		} dma_maps[2];
		/*
		 * Some controllers require certain bits to
		 * always be set for proper operation of the
		 * controller.  Set those bits here, if they're
		 * required.
		 */
		uint8_t		idedma_cmd;
	} pciide_channels[PCIIDE_MAX_CHANNELS];

	/* Chip-specific private data */
	void *sc_cookie;
	size_t sc_cookielen;

	/* DMA registers access functions */
	u_int8_t (*sc_dmacmd_read)(struct pciide_softc *, int);
	void (*sc_dmacmd_write)(struct pciide_softc *, int, u_int8_t);
	u_int8_t (*sc_dmactl_read)(struct pciide_softc *, int);
	void (*sc_dmactl_write)(struct pciide_softc *, int, u_int8_t);
	void (*sc_dmatbl_write)(struct pciide_softc *, int, u_int32_t);
};

#define PCIIDE_DMACMD_READ(sc, chan) \
	(sc)->sc_dmacmd_read((sc), (chan))
#define PCIIDE_DMACMD_WRITE(sc, chan, val) \
	(sc)->sc_dmacmd_write((sc), (chan), (val))
#define PCIIDE_DMACTL_READ(sc, chan) \
	(sc)->sc_dmactl_read((sc), (chan))
#define PCIIDE_DMACTL_WRITE(sc, chan, val) \
	(sc)->sc_dmactl_write((sc), (chan), (val))
#define PCIIDE_DMATBL_WRITE(sc, chan, val) \
	(sc)->sc_dmatbl_write((sc), (chan), (val))

int	pciide_mapregs_compat( struct pci_attach_args *,
	    struct pciide_channel *, int, bus_size_t *, bus_size_t *);
int	pciide_mapregs_native(struct pci_attach_args *,
	    struct pciide_channel *, bus_size_t *, bus_size_t *,
	    int (*pci_intr)(void *));
void	pciide_mapreg_dma(struct pciide_softc *,
	    struct pci_attach_args *);
int	pciide_chansetup(struct pciide_softc *, int, pcireg_t);
void	pciide_mapchan(struct pci_attach_args *,
	    struct pciide_channel *, pcireg_t, bus_size_t *, bus_size_t *,
	    int (*pci_intr)(void *));
int	pciide_chan_candisable(struct pciide_channel *);
void	pciide_map_compat_intr( struct pci_attach_args *,
	    struct pciide_channel *, int, int);
void	pciide_unmap_compat_intr( struct pci_attach_args *,
	    struct pciide_channel *, int, int);
int	pciide_compat_intr(void *);
int	pciide_pci_intr(void *);
int	pciide_intr_flag(struct pciide_channel *);

u_int8_t pciide_dmacmd_read(struct pciide_softc *, int);
void	 pciide_dmacmd_write(struct pciide_softc *, int, u_int8_t);
u_int8_t pciide_dmactl_read(struct pciide_softc *, int);
void	 pciide_dmactl_write(struct pciide_softc *, int, u_int8_t);
void	 pciide_dmatbl_write(struct pciide_softc *, int, u_int32_t);

void	 pciide_channel_dma_setup(struct pciide_channel *);
int	 pciide_dma_table_setup(struct pciide_softc *, int, int);
int	 pciide_dma_init(void *, int, int, void *, size_t, int);
void	 pciide_dma_start(void *, int, int);
int	 pciide_dma_finish(void *, int, int, int);
void	 pciide_irqack(struct channel_softc *);
void	 pciide_print_modes(struct pciide_channel *);
void	 pciide_print_channels(int, pcireg_t);

void	 default_chip_unmap(struct pciide_softc *, int);
void	 pciide_unmapreg_dma(struct pciide_softc *);
void	 pciide_chanfree(struct pciide_softc *, int);
void	 pciide_unmap_chan(struct pciide_softc *, struct pciide_channel *, int);
int	 pciide_unmapregs_compat(struct pciide_softc *,
	     struct pciide_channel *);
int	 pciide_unmapregs_native(struct pciide_softc *,
	     struct pciide_channel *);
int	 pciide_dma_table_free(struct pciide_softc *, int, int);
void	 pciide_channel_dma_free(struct pciide_channel *);

/*
 * Functions defined by machine-dependent code.
 */

#ifdef __i386__
void gcsc_chip_map(struct pciide_softc *, struct pci_attach_args *);
#endif

/* Attach compat interrupt handler, returning handle or NULL if failed. */
#if !defined(pciide_machdep_compat_intr_establish)
void	*pciide_machdep_compat_intr_establish(struct device *,
	    struct pci_attach_args *, int, int (*)(void *), void *);
void	pciide_machdep_compat_intr_disestablish(pci_chipset_tag_t pc,
	    void *);
#endif

#endif	/* !_DEV_PCI_PCIIDEVAR_H_ */
@


1.20
log
@When suspending, save & restore as many registers as we can from the
pciide front-ends chips.  More registers will have to added here, chip
by chip (warning messages about unknown chipsets, on resume, mean that
you should talk to me).  Also call the wdc back-end (our child) to have
it reset the controller properly on resume.  This makes all pciide that
we've tested unsuspend.
ok kettenis mlarkin
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.19 2009/10/05 20:01:40 jsg Exp $	*/
d118 1
@


1.19
log
@Add some minimalistic detach/unmap bits for pciide,
done using a chipset unmap callback.

Still needs to work to distinguish between compat
register mappings and compat interrupts so we
don't get caught out.

Tested with a diskless sii3112 CardBus eSATA controller
by me, and testing and feedback by deraadt@@ with
a phison based expresscard SSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.18 2009/01/04 10:37:40 jsg Exp $	*/
d72 10
@


1.18
log
@Add support for CS5535 IDE adapted from the gcscide code in NetBSD
originally written by Juan Romero Pardines.

Thanks to Lars Kotthoff for testing on a HeroLogic HL-463 system.

Because the CS5535 doesn't provide SMM emulated PCI access to set
DMA/PIO modes or a real PCI IDE controller we have to resort to
making MSR calls.  As this is very MD specific, hide most of uglyness
away in i386 MD pciide code.

ok grange@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.17 2009/01/04 10:22:01 jsg Exp $	*/
d63 1
d75 2
d162 11
@


1.17
log
@Shift prototypes for some common pciide functions out into
a header file where MD code can get at them.

ok grange@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.16 2004/10/17 19:00:46 grange Exp $	*/
d163 4
@


1.16
log
@Allow chip-map function to specify which bits must permanently present
in the dma command register. It's a no-op for now but sii3114 will need
it. From NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.15 2004/10/17 18:47:08 grange Exp $	*/
d124 35
@


1.15
log
@Don't touch dma registers directly, instead use callbacks that
can be overridden by chip-map function. It's a no-op for now but
will be needed to support sata controllers which have a non-lenear
dma registers space.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.14 2004/10/17 18:32:12 grange Exp $	*/
d94 7
@


1.14
log
@Bump wdc_chanarray as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.13 2004/10/17 18:23:58 grange Exp $	*/
d98 7
d106 11
@


1.13
log
@Bump number of channels to PCIIDE_MAX_CHANNELS.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.12 2004/10/17 18:22:13 grange Exp $	*/
d77 1
a77 1
	struct channel_softc *wdc_chanarray[PCIIDE_NUM_CHANNELS];
@


1.12
log
@Constify channel name.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.11 2004/10/17 18:16:12 grange Exp $	*/
d94 1
a94 1
	} pciide_channels[PCIIDE_NUM_CHANNELS];
@


1.11
log
@Stop bloating pciide_softc with chip-specific variables. Add one pointer
to chip private data and use it.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.10 2004/10/17 18:05:55 grange Exp $	*/
d81 1
a81 1
		char		*name;
@


1.10
log
@Move pciide_softc definition to pciidevar.h.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.9 2004/10/17 17:58:30 grange Exp $	*/
a71 7
	/* For Cypress */
	const struct cy82c693_handle *sc_cy_handle;
	int sc_cy_compatchan;

	/* For SiS */
	u_int8_t sis_type;

d95 3
@


1.9
log
@Define 4 channels max for pciide. Legacy ide controllers can only
have 2, but sata ones can more. From NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.8 2004/09/24 07:38:38 grange Exp $	*/
d43 3
a45 1
struct device;
d54 49
@


1.8
log
@Multiple inclusion protection.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.7 2002/03/14 04:30:34 millert Exp $	*/
d44 8
@


1.7
log
@Don't prototype pciide_machdep_compat_intr_establish() and
pciide_machdep_compat_intr_disestablish() if they are macros.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.6 2002/03/14 03:16:06 millert Exp $	*/
d34 3
d56 2
@


1.6
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.5 2002/03/14 01:26:59 millert Exp $	*/
d47 1
d52 1
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.4 2001/06/25 21:40:20 csapuntz Exp $	*/
d47 2
a48 2
void	*pciide_machdep_compat_intr_establish __P((struct device *,
	    struct pci_attach_args *, int, int (*)(void *), void *));
@


1.4
log
@Add disestablish routine for compat PCIIDE interrupts
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.3 2001/04/04 07:02:55 csapuntz Exp $	*/
d49 2
a50 2
void	pciide_machdep_compat_intr_disestablish __P((pci_chipset_tag_t pc,
	    void *));
@


1.4.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.4 2001/06/25 21:40:20 csapuntz Exp $	*/
d47 4
a50 6
#if !defined(pciide_machdep_compat_intr_establish)
void	*pciide_machdep_compat_intr_establish(struct device *,
	    struct pci_attach_args *, int, int (*)(void *), void *);
void	pciide_machdep_compat_intr_disestablish(pci_chipset_tag_t pc,
	    void *);
#endif
@


1.3
log
@

Minor cleanup to minimize diffs with NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.2 1999/07/18 21:25:20 csapuntz Exp $	*/
d49 2
@


1.2
log
@

Import of NetBSD ATA/IDE stuff.

Introduction of home-grown

To enable this stuff in your configuration, look at the NEWATA conf file
and go through

dev/isa/files.isa
dev/pci/files.pci
conf/files
arch/i386/conf/files.i386

and follow the instructions on commenting/uncommenting stuff
@
text
@d1 2
a2 2
/*	$OpenBSD: pciidevar.h,v 1.2 1998/10/12 16:09:22 bouyer Exp $	*/
/*	$NetBSD: pciidevar.h,v 1.2 1998/10/12 16:09:22 bouyer Exp $	*/
@


1.2.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
/*	$OpenBSD: pciidevar.h,v 1.3 2001/04/04 07:02:55 csapuntz Exp $	*/
/*	$NetBSD: pciidevar.h,v 1.6 2001/01/12 16:04:00 bouyer Exp $	*/
@


1.2.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidevar.h,v 1.2.4.1 2001/05/14 22:25:56 niklas Exp $	*/
a48 2
void	pciide_machdep_compat_intr_disestablish __P((pci_chipset_tag_t pc,
	    void *));
@


1.2.4.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d47 4
a50 6
#if !defined(pciide_machdep_compat_intr_establish)
void	*pciide_machdep_compat_intr_establish(struct device *,
	    struct pci_attach_args *, int, int (*)(void *), void *);
void	pciide_machdep_compat_intr_disestablish(pci_chipset_tag_t pc,
	    void *);
#endif
@


1.1
log
@PCI-IDE interface include files (needed for Alpha, at least); from NetBSD.
@
text
@d1 2
a2 2
/* $OpenBSD$ */
/*	$NetBSD: pciidevar.h,v 1.1 1998/03/04 06:35:11 cgd Exp $	*/
a40 12
struct pci_attach_args;

/*
 * Attach args for devices that attach to pciide.  Really, that's just wdc.
 */
struct pciide_attach_args {
	int			channel;
	bus_space_tag_t		cmd_iot, ctl_iot;
	bus_space_handle_t	cmd_ioh, ctl_ioh;
	int			(**ihandp) __P((void *));
	void			**ihandargp;
};
@

