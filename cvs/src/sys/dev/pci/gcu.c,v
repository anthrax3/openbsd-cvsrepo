head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.12
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.10
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.18
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.16
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2015.03.19.00.18.11;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	yLEmsI0zKA5HmoBw;

1.3
date	2011.04.03.15.36.02;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2009.12.03.11.07.46;	author dms;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.25.13.28.13;	author dms;	state Exp;
branches;
next	;


desc
@@


1.4
log
@missing gcu_var.h conversion
@
text
@/*	$OpenBSD: gcu.c,v 1.3 2011/04/03 15:36:02 jasper Exp $	*/

/*
 * Copyright (c) 2009 Dariusz Swiderski <sfires@@sfires.net>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*                                                         
 * Driver for a GCU device that apears on embeded intel systems, like 80579
 */                                                                     

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <dev/pci/pcireg.h>
#include <dev/pci/pcivar.h>

#include <dev/pci/pcidevs.h>
#include <dev/pci/gcu_var.h>

int gcu_probe(struct device *, void *, void *);
void gcu_attach(struct device *, struct device *, void *);
int gcu_detach(struct device *, int);

const struct pci_matchid gcu_devices[] = {
	{ PCI_VENDOR_INTEL, PCI_PRODUCT_INTEL_EP80579_GCU }
};
        
struct cfdriver gcu_cd = {
	NULL, "gcu", DV_IFNET
};

struct cfattach gcu_ca = {
	sizeof(struct gcu_softc), gcu_probe, gcu_attach
};

int
gcu_probe(struct device *parent, void *match, void *aux)
{
	return (pci_matchbyid((struct pci_attach_args *)aux, gcu_devices,
	    nitems(gcu_devices)));
}

void
gcu_attach(struct device *parent, struct device *self, void *aux)
{
	struct gcu_softc *sc = (struct gcu_softc *)self;
	struct pci_attach_args *pa = aux;
	int val;

	val = pci_conf_read(pa->pa_pc, pa->pa_tag, PCI_MAPREG_START);
	if (PCI_MAPREG_TYPE(val) != PCI_MAPREG_TYPE_MEM) {
		printf(": mmba is not mem space\n");
		return;
	}

	if (pci_mapreg_map(pa, 0x10, PCI_MAPREG_MEM_TYPE(val), 0, &sc->tag, 
	    &sc->handle, &sc->addr, &sc->size, 0)) {
		printf(": cannot find mem space\n");
		return;
	}

	mtx_init(&sc->mdio_mtx, IPL_NET);

	printf("\n");
}
@


1.3
log
@use nitems(); no binary change for drivers that are compiled on amd64.

ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gcu.c,v 1.2 2009/12/03 11:07:46 dms Exp $	*/
d31 1
a31 1
#include <dev/pci/gcu.h>
@


1.2
log
@use a define rather than magic number, spotted by Brad

ok by claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gcu.c,v 1.1 2009/11/25 13:28:13 dms Exp $	*/
d53 1
a53 1
	    sizeof(gcu_devices)/sizeof(gcu_devices[0])));
@


1.1
log
@Add support for em(4) interfaces found on intel EP80579 SoC. The MAC part is
basicly 82545, but the PHY's are separated form the chip and they are accessed
through a special PCI device called GCU which has the MDIO interface. Since
there is no direct relationship between MAC and PHY, so for the moment they
are assigned to each other the way its done on Axiomtek NA-200, that was
danted to us by them.

This also adds a device driver for the GCU.

tested by me on Axiomtek board
reviewed by claudio@@, kettenis@@, deraadt@@
'commit that as is' deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 1
a63 1
	val = pci_conf_read(pa->pa_pc, pa->pa_tag, 0x10);
@

