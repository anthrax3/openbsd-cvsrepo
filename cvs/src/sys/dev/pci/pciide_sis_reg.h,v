head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.30
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.28
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.16
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.24
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.22
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.20
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.18
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.14
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.12
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.10
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.8
	OPENBSD_5_0:1.8.0.6
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.4
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.7.0.20
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.22
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.18
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.16
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.14
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.12
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.10
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.8
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.6
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.10
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.6
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2010.07.23.07.47.13;	author jsg;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.17.18.16.12;	author grange;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.24.07.38.38;	author grange;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.28.21.01.43;	author grange;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.02.09.33.33;	author grange;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.21.20.10.34;	author grange;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.04.07.02.54;	author csapuntz;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	99.07.18.21.25.20;	author csapuntz;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.05.14.22.25.56;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.03.28.00.38.24;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2003.05.13.19.35.08;	author ho;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2004.02.19.10.56.29;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2003.05.19.22.19.08;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Manuel Bouyer rescinded clauses 3 and 4 of his license text.
@
text
@/*	$OpenBSD: pciide_sis_reg.h,v 1.7 2004/10/17 18:16:12 grange Exp $	*/
/*	$NetBSD: pciide_sis_reg.h,v 1.6 2000/05/15 08:46:01 bouyer Exp $	*/

/*
 * Copyright (c) 1998 Manuel Bouyer.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef _DEV_PCI_PCIIDE_SIS_REG_H_
#define _DEV_PCI_PCIIDE_SIS_REG_H_

/*
 * Registers definitions for SiS SiS5597/98 PCI IDE controller.
 * Available from http://www.sis.com.tw/html/databook.html
 */

/* IDE timing control registers (32 bits), for all but 96x */
#define SIS_TIM(channel) (0x40 + (channel * 4))
/* for 730, 630 and older (66, 100OLD) */
#define SIS_TIM66_REC_OFF(drive) (16 * (drive))
#define SIS_TIM66_ACT_OFF(drive) (8 + 16 * (drive))
#define SIS_TIM66_UDMA_TIME_OFF(drive) (12 + 16 * (drive))
/* for older than 96x (100NEW, 133OLD) */
#define SIS_TIM100_REC_OFF(drive) (16 * (drive))
#define SIS_TIM100_ACT_OFF(drive) (4 + 16 * (drive))
#define SIS_TIM100_UDMA_TIME_OFF(drive) (8 + 16 * (drive))

/*
 * From FreeBSD: on 96x, the timing registers may start from 0x40 or 0x70
 * depending on the value from register 0x57. 32bits of timing info for
 * each drive.
 */
#define SIS_TIM133(reg57, channel, drive) \
    ((((reg57) & 0x40) ? 0x70 : 0x40) + ((channel) << 3) + ((drive) << 2))

/* IDE general control register 0 (8 bits) */
#define SIS_CTRL0 0x4a
#define SIS_CTRL0_PCIBURST	0x80
#define SIS_CTRL0_FAST_PW	0x20
#define SIS_CTRL0_BO		0x08
#define SIS_CTRL0_CHAN0_EN	0x02 /* manual (v2.0) is wrong!!! */
#define SIS_CTRL0_CHAN1_EN	0x04 /* manual (v2.0) is wrong!!! */

/* IDE general control register 1 (8 bits) */
#define SIS_CTRL1 0x4b
#define SIS_CTRL1_POSTW_EN(chan, drv) (0x10 << ((drv) + 2 * (chan)))
#define SIS_CTRL1_PREFETCH_EN(chan, drv) (0x01 << ((drv) + 2 * (chan)))

/* IDE misc control register (8 bit) */
#define SIS_MISC 0x52
#define SIS_MISC_TIM_SEL	0x08
#define SIS_MISC_GTC		0x04
#define SIS_MISC_FIFO_SIZE	0x01

/* following are from FreeBSD (sorry, no description) */
#define SIS_REG_49	0x49
#define SIS_REG_50	0x50
#define SIS_REG_51	0x51
#define SIS_REG_52	0x52
#define SIS_REG_53	0x53
#define SIS_REG_57	0x57

#define SIS_REG_CBL 0x48
#define SIS_REG_CBL_33(channel) (0x10 << (channel))
#define SIS96x_REG_CBL(channel) (0x51 + (channel) * 2)
#define SIS96x_REG_CBL_33 0x80

#define SIS_PRODUCT_5518 0x5518

/* Private data */
struct pciide_sis {
	u_int8_t sis_type;
};

/* timings values, mostly from FreeBSD */
/* PIO timings, for all up to 133NEW */
static const u_int8_t sis_pio_act[] =
    {12, 6, 4, 3, 3};
static const u_int8_t sis_pio_rec[] =
    {11, 7, 4, 3, 1};
/* DMA timings for 66 and 100OLD */
static const u_int8_t sis_udma66_tim[] =
    {15, 13, 11, 10, 9, 8};
/* DMA timings for 100NEW */
static const u_int8_t sis_udma100new_tim[] =
    {0x8b, 0x87, 0x85, 0x84, 0x82, 0x81};
/* DMA timings for 133OLD */
static const u_int8_t sis_udma133old_tim[] =
    {0x8f, 0x8a, 0x87, 0x85, 0x83, 0x82, 0x81};
/* PIO, DMA and UDMA timings for 133NEW */
static const u_int32_t sis_pio133new_tim[] =
    {0x28269008, 0x0c266008, 0x4263008, 0x0c0a3008, 0x05093008};
static const u_int32_t sis_dma133new_tim[] =
    {0x22196008, 0x0c0a3008, 0x05093008};
static const u_int32_t sis_udma133new_tim[] =
    {0x9f4, 0x64a, 0x474, 0x254, 0x234, 0x224, 0x214};

#endif	/* !_DEV_PCI_PCIIDE_SIS_REG_H_ */
@


1.7
log
@Stop bloating pciide_softc with chip-specific variables. Add one pointer
to chip private data and use it.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_sis_reg.h,v 1.6 2004/09/24 07:38:38 grange Exp $	*/
a14 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Manuel Bouyer.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
@


1.6
log
@Multiple inclusion protection.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_sis_reg.h,v 1.5 2003/09/28 21:01:43 grange Exp $	*/
d95 5
@


1.5
log
@kill trailing spaces, no functional changes
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_sis_reg.h,v 1.4 2003/05/02 09:33:33 grange Exp $	*/
d35 3
d118 2
@


1.4
log
@Rework SIS IDE support. Unbreak the newest chips and fix issues with the
old ones. Original work by sos@@freebsd, then adapted for netbsd by
bouyer@@netbsd. Many thanks to Paul de Weerd <paul@@mail.me.maar.nu>
for problem report, providing url to the preliminary netbsd diff and
access to testing machine. Extra testing by tedu@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_sis_reg.h,v 1.3 2003/02/21 20:10:34 grange Exp $	*/
d25 1
a25 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     
@


1.3
log
@Fix Manuel Bouyer's copyright, from NetBSD
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_sis_reg.h,v 1.2 2001/04/04 07:02:54 csapuntz Exp $	*/
d40 1
a40 1
/* IDE timing control registers (32 bits) */
d42 16
a57 4
#define SIS_TIM_REC_OFF(drive) (16 * (drive))
#define SIS_TIM_ACT_OFF(drive) (8 + 16 * (drive))
#define SIS_TIM_UDMA_TIME_OFF(drive) (13 + 16 * (drive))
#define SIS_TIM_UDMA_EN(drive) (1 << (15 + 16 * (drive)))
d78 37
a114 7
static int8_t sis_pio_act[] = {7, 5, 4, 3, 3};
static int8_t sis_pio_rec[] = {7, 0, 5, 3, 1};
#ifdef unused
static int8_t sis_dma_act[] = {0, 3, 3};
static int8_t sis_dma_rec[] = {0, 2, 1};
#endif
static int8_t sis_udma_tim[] = {3, 2, 1};
@


1.2
log
@

Minor cleanup to minimize diffs with NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_sis_reg.h,v 1.1 1999/07/18 21:25:20 csapuntz Exp $	*/
d17 1
a17 2
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
@


1.2.6.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d17 2
a18 1
 *	This product includes software developed by Manuel Bouyer.
d41 1
a41 1
/* IDE timing control registers (32 bits), for all but 96x */
d43 4
a46 16
/* for 730, 630 and older (66, 100OLD) */
#define SIS_TIM66_REC_OFF(drive) (16 * (drive))
#define SIS_TIM66_ACT_OFF(drive) (8 + 16 * (drive))
#define SIS_TIM66_UDMA_TIME_OFF(drive) (12 + 16 * (drive))
/* for older than 96x (100NEW, 133OLD) */
#define SIS_TIM100_REC_OFF(drive) (16 * (drive))
#define SIS_TIM100_ACT_OFF(drive) (4 + 16 * (drive))
#define SIS_TIM100_UDMA_TIME_OFF(drive) (8 + 16 * (drive))

/*
 * From FreeBSD: on 96x, the timing registers may start from 0x40 or 0x70
 * depending on the value from register 0x57. 32bits of timing info for
 * each drive.
 */
#define SIS_TIM133(reg57, channel, drive) \
    ((((reg57) & 0x40) ? 0x70 : 0x40) + ((channel) << 3) + ((drive) << 2))
d67 7
a73 37
/* following are from FreeBSD (sorry, no description) */
#define SIS_REG_49	0x49
#define SIS_REG_50	0x50
#define SIS_REG_51	0x51
#define SIS_REG_52	0x52
#define SIS_REG_53	0x53
#define SIS_REG_57	0x57

#define SIS_REG_CBL 0x48
#define SIS_REG_CBL_33(channel) (0x10 << (channel))
#define SIS96x_REG_CBL(channel) (0x51 + (channel) * 2)
#define SIS96x_REG_CBL_33 0x80

#define SIS_PRODUCT_5518 0x5518

/* timings values, mostly from FreeBSD */
/* PIO timings, for all up to 133NEW */
static const u_int8_t sis_pio_act[] =
    {12, 6, 4, 3, 3};
static const u_int8_t sis_pio_rec[] =
    {11, 7, 4, 3, 1};
/* DMA timings for 66 and 100OLD */
static const u_int8_t sis_udma66_tim[] =
    {15, 13, 11, 10, 9, 8};
/* DMA timings for 100NEW */
static const u_int8_t sis_udma100new_tim[] =
    {0x8b, 0x87, 0x85, 0x84, 0x82, 0x81};
/* DMA timings for 133OLD */
static const u_int8_t sis_udma133old_tim[] =
    {0x8f, 0x8a, 0x87, 0x85, 0x83, 0x82, 0x81};
/* PIO, DMA and UDMA timings for 133NEW */
static const u_int32_t sis_pio133new_tim[] =
    {0x28269008, 0x0c266008, 0x4263008, 0x0c0a3008, 0x05093008};
static const u_int32_t sis_dma133new_tim[] =
    {0x22196008, 0x0c0a3008, 0x05093008};
static const u_int32_t sis_udma133new_tim[] =
    {0x9f4, 0x64a, 0x474, 0x254, 0x234, 0x224, 0x214};
@


1.1
log
@

Import of NetBSD ATA/IDE stuff.

Introduction of home-grown

To enable this stuff in your configuration, look at the NEWATA conf file
and go through

dev/isa/files.isa
dev/pci/files.pci
conf/files
arch/i386/conf/files.i386

and follow the instructions on commenting/uncommenting stuff
@
text
@d1 2
a2 2
/*	$OpenBSD: pciide_sis_reg.h,v 1.5 1998/12/04 17:30:55 drochner Exp $	*/
/*	$NetBSD: pciide_sis_reg.h,v 1.5 1998/12/04 17:30:55 drochner Exp $	*/
d23 10
a32 11
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
@


1.1.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
/*	$OpenBSD: pciide_sis_reg.h,v 1.2 2001/04/04 07:02:54 csapuntz Exp $	*/
/*	$NetBSD: pciide_sis_reg.h,v 1.6 2000/05/15 08:46:01 bouyer Exp $	*/
d23 11
a33 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.1.4.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d17 2
a18 1
 *	This product includes software developed by Manuel Bouyer.
@


1.1.4.3
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_sis_reg.h,v 1.1.4.2 2003/03/28 00:38:24 niklas Exp $	*/
d40 1
a40 1
/* IDE timing control registers (32 bits), for all but 96x */
d42 4
a45 16
/* for 730, 630 and older (66, 100OLD) */
#define SIS_TIM66_REC_OFF(drive) (16 * (drive))
#define SIS_TIM66_ACT_OFF(drive) (8 + 16 * (drive))
#define SIS_TIM66_UDMA_TIME_OFF(drive) (12 + 16 * (drive))
/* for older than 96x (100NEW, 133OLD) */
#define SIS_TIM100_REC_OFF(drive) (16 * (drive))
#define SIS_TIM100_ACT_OFF(drive) (4 + 16 * (drive))
#define SIS_TIM100_UDMA_TIME_OFF(drive) (8 + 16 * (drive))

/*
 * From FreeBSD: on 96x, the timing registers may start from 0x40 or 0x70
 * depending on the value from register 0x57. 32bits of timing info for
 * each drive.
 */
#define SIS_TIM133(reg57, channel, drive) \
    ((((reg57) & 0x40) ? 0x70 : 0x40) + ((channel) << 3) + ((drive) << 2))
d66 7
a72 37
/* following are from FreeBSD (sorry, no description) */
#define SIS_REG_49	0x49
#define SIS_REG_50	0x50
#define SIS_REG_51	0x51
#define SIS_REG_52	0x52
#define SIS_REG_53	0x53
#define SIS_REG_57	0x57

#define SIS_REG_CBL 0x48
#define SIS_REG_CBL_33(channel) (0x10 << (channel))
#define SIS96x_REG_CBL(channel) (0x51 + (channel) * 2)
#define SIS96x_REG_CBL_33 0x80

#define SIS_PRODUCT_5518 0x5518

/* timings values, mostly from FreeBSD */
/* PIO timings, for all up to 133NEW */
static const u_int8_t sis_pio_act[] =
    {12, 6, 4, 3, 3};
static const u_int8_t sis_pio_rec[] =
    {11, 7, 4, 3, 1};
/* DMA timings for 66 and 100OLD */
static const u_int8_t sis_udma66_tim[] =
    {15, 13, 11, 10, 9, 8};
/* DMA timings for 100NEW */
static const u_int8_t sis_udma100new_tim[] =
    {0x8b, 0x87, 0x85, 0x84, 0x82, 0x81};
/* DMA timings for 133OLD */
static const u_int8_t sis_udma133old_tim[] =
    {0x8f, 0x8a, 0x87, 0x85, 0x83, 0x82, 0x81};
/* PIO, DMA and UDMA timings for 133NEW */
static const u_int32_t sis_pio133new_tim[] =
    {0x28269008, 0x0c266008, 0x4263008, 0x0c0a3008, 0x05093008};
static const u_int32_t sis_dma133new_tim[] =
    {0x22196008, 0x0c0a3008, 0x05093008};
static const u_int32_t sis_udma133new_tim[] =
    {0x9f4, 0x64a, 0x474, 0x254, 0x234, 0x224, 0x214};
@


1.1.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d25 1
a25 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
@


