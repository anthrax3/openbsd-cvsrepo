head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.22
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.26
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.24
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.12
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.20
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.18
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.16
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.14
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.10
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.8
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.6
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.4
	OPENBSD_5_0:1.13.0.2
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.12.0.20
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.18
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.14
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.16
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.12
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.10
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.8
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.6
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.4
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.2
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.4
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	SMP:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.13
date	2011.04.03.15.36.03;	author jasper;	state Exp;
branches;
next	1.12;

1.12
date	2006.08.25.04.35.03;	author brad;	state Exp;
branches;
next	1.11;

1.11
date	2006.07.31.10.00.15;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2006.07.27.10.49.26;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.15.11.08.47;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2005.08.09.04.10.13;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.19.24.23;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.27.00;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.25.10.13.30;	author art;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	2001.06.12.15.40.33;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.07.20.49.36;	author mickey;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2000.09.29.19.58.41;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.15.16.56.13;	author mickey;	state Exp;
branches;
next	;

1.3.4.1
date	2001.05.14.22.26.00;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2001.07.04.10.43.11;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2001.10.31.03.22.48;	author nate;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2002.03.28.15.35.59;	author niklas;	state Exp;
branches;
next	1.3.4.5;

1.3.4.5
date	2003.06.07.11.02.31;	author ho;	state Exp;
branches;
next	;

1.5.4.1
date	2002.06.11.03.42.27;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@use nitems(); no binary change for drivers that are compiled on amd64.

ok claudio@@
@
text
@/*	$OpenBSD: twe_pci.c,v 1.12 2006/08/25 04:35:03 brad Exp $	*/

/*
 * Copyright (c) 2000 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/malloc.h>
#include <sys/device.h>

#include <dev/pci/pcidevs.h>
#include <dev/pci/pcivar.h>

#include <machine/bus.h>

#include <scsi/scsi_all.h>
#include <scsi/scsi_disk.h>
#include <scsi/scsiconf.h>

#include <dev/ic/twereg.h>
#include <dev/ic/twevar.h>

#define	TWE_BAR	0x10

int	twe_pci_match(struct device *, void *, void *);
void	twe_pci_attach(struct device *, struct device *, void *);

struct cfattach twe_pci_ca = {
	sizeof(struct twe_softc), twe_pci_match, twe_pci_attach
};

const struct pci_matchid twe_pci_devices[] = {
	{ PCI_VENDOR_3WARE, PCI_PRODUCT_3WARE_ESCALADE },
	{ PCI_VENDOR_3WARE, PCI_PRODUCT_3WARE_ESCALADE_ASIC }
};

int
twe_pci_match(parent, match, aux)
	struct device *parent;
	void *match;
	void *aux;
{
	return (pci_matchbyid((struct pci_attach_args *)aux, twe_pci_devices,
	    nitems(twe_pci_devices)));
}

void
twe_pci_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct twe_softc *sc = (struct twe_softc *)self;
	struct pci_attach_args *pa = aux;
	pci_intr_handle_t ih;
	const char *intrstr;
	bus_size_t size;

	if (pci_mapreg_map(pa, TWE_BAR, PCI_MAPREG_TYPE_IO, 0,
	    &sc->iot, &sc->ioh, NULL, &size, 0)) {
		printf(": can't map controller i/o space\n");
		return;
	}
	sc->dmat = pa->pa_dmat;

	if (pci_intr_map(pa, &ih)) {
		printf(": can't map interrupt\n");
		bus_space_unmap(sc->iot, sc->ioh, size);
		return;
	}
	intrstr = pci_intr_string(pa->pa_pc, ih);
	sc->sc_ih = pci_intr_establish(pa->pa_pc, ih, IPL_BIO, twe_intr, sc,
	    sc->sc_dev.dv_xname);
	if (!sc->sc_ih) {
		printf(": can't establish interrupt");
		if (intrstr)
			printf(" at %s", intrstr);
		printf("\n");
		bus_space_unmap(sc->iot, sc->ioh, size);
		return;
	}

	printf(": %s\n%s", intrstr, sc->sc_dev.dv_xname);

	if (twe_attach(sc)) {
		pci_intr_disestablish(pa->pa_pc, sc->sc_ih);
		sc->sc_ih = NULL;
		bus_space_unmap(sc->iot, sc->ioh, size);
	}
}
@


1.12
log
@update for the Triware to 3ware renaming and use pci_matchbyid().
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.11 2006/07/31 10:00:15 mickey Exp $	*/
d68 1
a68 1
	    sizeof(twe_pci_devices)/sizeof(twe_pci_devices[0])));
@


1.11
log
@oops; the new one is w a whole new fw and doesn't work w/ twe(4)
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.10 2006/07/27 10:49:26 mickey Exp $	*/
d56 5
d67 2
a68 8
	struct pci_attach_args *pa = aux;

	if (PCI_VENDOR(pa->pa_id) == PCI_VENDOR_TRIWARE &&
	    (PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_TRIWARE_ESCALADE ||
	    PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_TRIWARE_ESCALADE_ASIC))
		return 1;

	return 0;
@


1.10
log
@new twe; reported by Randal Harisch <azar@@eyeonvideo.com>
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.9 2005/11/15 11:08:47 mickey Exp $	*/
d66 1
a66 2
	    PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_TRIWARE_ESCALADE_ASIC ||
	    PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_TRIWARE_ESCALADE_9500))
@


1.9
log
@missing return upon intr_establish failure
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.8 2005/08/09 04:10:13 mickey Exp $	*/
d66 2
a67 1
	    PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_TRIWARE_ESCALADE_ASIC))
@


1.8
log
@do not set PCI_COMMAND_MASTER_ENABLE explicitly as it's already set in pcisubmatch(); kettenis@@ testing; brad@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.7 2003/06/02 19:24:23 mickey Exp $	*/
d104 1
@


1.7
log
@kill the caluses three and four on some of my code
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.6 2002/03/14 01:27:00 millert Exp $	*/
a81 1
	pcireg_t csr;
a88 5

	/* enable bus mastering (should not it be mi?) */
	csr = pci_conf_read(pa->pa_pc, pa->pa_tag, PCI_COMMAND_STATUS_REG);
	pci_conf_write(pa->pa_pc, pa->pa_tag, PCI_COMMAND_STATUS_REG,
	    csr | PCI_COMMAND_MASTER_ENABLE);
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.5 2001/08/25 10:13:30 art Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.5
log
@Change pci_intr_map to take pci_attach_args as an argument.
All callers actually took all arguments to pci_intr_map from pci_attach_args
structs, so this simplifies code.
This also allows more complicated interrupt assignment schemes like the one
on sparc64.

This makes sparc64 pci interrupts work.

Inspired by the same change in NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.4 2001/06/12 15:40:33 niklas Exp $	*/
d54 2
a55 2
int	twe_pci_match __P((struct device *, void *, void *));
void	twe_pci_attach __P((struct device *, struct device *, void *));
@


1.5.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.5 2001/08/25 10:13:30 art Exp $	*/
d54 2
a55 2
int	twe_pci_match(struct device *, void *, void *);
void	twe_pci_attach(struct device *, struct device *, void *);
@


1.4
log
@Make pci_mapreg_map take an extra argument where we can
put a size limitation of the PCI region to map.  That makes the PERC 3/Di
raid controller usable, as it publishes too much PCI memory for us to map
in the kernel virtual memory.  As we only access the first 256 byte it is
of no use to map 128MB of kvm.
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.3 2000/12/07 20:49:36 mickey Exp $	*/
d101 1
a101 2
	if (pci_intr_map(pa->pa_pc, pa->pa_intrtag, pa->pa_intrpin,
	    pa->pa_intrline, &ih)) {
@


1.3
log
@new 3ware card, presumably backwards compatible; from freebsd
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.2 2000/09/29 19:58:41 mickey Exp $	*/
d90 1
a90 1
	    &sc->iot, &sc->ioh, NULL, &size)) {
@


1.3.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.3 2000/12/07 20:49:36 mickey Exp $	*/
@


1.3.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.3.4.1 2001/05/14 22:26:00 niklas Exp $	*/
d90 1
a90 1
	    &sc->iot, &sc->ioh, NULL, &size, 0)) {
@


1.3.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.3.4.2 2001/07/04 10:43:11 niklas Exp $	*/
d101 2
a102 1
	if (pci_intr_map(pa, &ih)) {
@


1.3.4.4
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d54 2
a55 2
int	twe_pci_match(struct device *, void *, void *);
void	twe_pci_attach(struct device *, struct device *, void *);
@


1.3.4.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.3.4.4 2002/03/28 15:35:59 niklas Exp $	*/
d15 5
@


1.2
log
@fix pasto in error printf
@
text
@d1 1
a1 1
/*	$OpenBSD: twe_pci.c,v 1.1 2000/09/15 16:56:13 mickey Exp $	*/
d70 2
a71 1
	    PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_TRIWARE_ESCALADE)
@


1.1
log
@3ware escalade ide raid controllers
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d90 1
a90 1
		printf(": can't map codec i/o space\n");
@

