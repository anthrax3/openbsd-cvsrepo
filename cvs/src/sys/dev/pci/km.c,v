head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.6
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.10
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.6
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2015.11.04.19.39.30;	author sthen;	state Exp;
branches;
next	1.10;
commitid	zUug7JArJ1az4iw3;

1.10
date	2015.03.14.03.38.48;	author jsg;	state Exp;
branches;
next	1.9;
commitid	p4LJxGKbi0BU2cG6;

1.9
date	2014.12.06.03.52.50;	author jsg;	state Exp;
branches;
next	1.8;
commitid	ok7LoAYDDHjslOoV;

1.8
date	2013.09.17.13.42.34;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2013.09.17.13.36.31;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2013.03.14.14.50.25;	author brynet;	state Exp;
branches;
next	1.5;

1.5
date	2011.05.31.00.19.55;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.26.15.07.49;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2008.08.30.01.10.13;	author brad;	state Exp;
branches;
next	1.2;

1.2
date	2008.08.29.03.38.31;	author cnst;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.29.05.29.59;	author cnst;	state Exp;
branches;
next	;


desc
@@


1.11
log
@allow km(4) to match the temperature sensor in GX-412TC SOC (as used on APU2)
tested by nothingness at citycable.ch, ok bmercer@@
@
text
@/*	$OpenBSD: km.c,v 1.10 2015/03/14 03:38:48 jsg Exp $	*/

/*
 * Copyright (c) 2008 Constantine A. Murenin <cnst+openbsd@@bugmail.mojo.ru>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/sensors.h>

#include <machine/bus.h>

#include <dev/pci/pcivar.h>
#include <dev/pci/pcidevs.h>


/*
 * AMD Family > 10h Processors, Function 3 -- Miscellaneous Control
 */

/* Function 3 Registers */
#define KM_REP_TEMP_CONTR_R	0xa4
#define KM_THERMTRIP_STAT_R	0xe4
#define KM_NORTHBRIDGE_CAP_R	0xe8
#define KM_CPUID_FAMILY_MODEL_R	0xfc

/* Operations on Reported Temperature Control Register */
#define KM_GET_CURTMP(r)	(((r) >> 21) & 0x7ff)

/* Operations on Thermtrip Status Register */
#define KM_GET_DIODEOFFSET(r)	(((r) >> 8) & 0x7f)


struct km_softc {
	struct device		sc_dev;

	pci_chipset_tag_t	sc_pc;
	pcitag_t		sc_pcitag;

	struct ksensor		sc_sensor;
	struct ksensordev	sc_sensordev;
};

int	km_match(struct device *, void *, void *);
void	km_attach(struct device *, struct device *, void *);
void	km_refresh(void *);

struct cfattach km_ca = {
	sizeof(struct km_softc), km_match, km_attach
};

struct cfdriver km_cd = {
	NULL, "km", DV_DULL
};

static const struct pci_matchid km_devices[] = {
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_10_MISC },
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_11_MISC },
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_14_MISC },
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_15_0x_MISC },
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_15_1x_MISC },
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_16_MISC },
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_16_3X_MISC }
};


int
km_match(struct device *parent, void *match, void *aux)
{
	/* successful match supersedes pchb(4) */
	return pci_matchbyid((struct pci_attach_args *)aux, km_devices,
	    sizeof(km_devices) / sizeof(km_devices[0])) * 2;
}

void
km_attach(struct device *parent, struct device *self, void *aux)
{
	struct km_softc		*sc = (struct km_softc *)self;
	struct pci_attach_args	*pa = aux;

	sc->sc_pc = pa->pa_pc;
	sc->sc_pcitag = pa->pa_tag;

	strlcpy(sc->sc_sensordev.xname, sc->sc_dev.dv_xname,
	    sizeof(sc->sc_sensordev.xname));

	sc->sc_sensor.type = SENSOR_TEMP;
	sensor_attach(&sc->sc_sensordev, &sc->sc_sensor);

	if (sensor_task_register(sc, km_refresh, 5) == NULL) {
		printf(": unable to register update task\n");
		return;
	}

	sensordev_install(&sc->sc_sensordev);

	printf("\n");
}

void
km_refresh(void *arg)
{
	struct km_softc	*sc = arg;
	struct ksensor	*s = &sc->sc_sensor;
	pcireg_t	r;
	int		c;

	r = pci_conf_read(sc->sc_pc, sc->sc_pcitag, KM_REP_TEMP_CONTR_R);
	c = KM_GET_CURTMP(r);
	s->value = c * 125000 + 273150000;
}
@


1.10
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: km.c,v 1.9 2014/12/06 03:52:50 jsg Exp $	*/
d75 2
a76 1
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_16_MISC }
@


1.9
log
@match family 16h
@
text
@d1 1
a1 1
/*	$OpenBSD: km.c,v 1.8 2013/09/17 13:42:34 kettenis Exp $	*/
a25 1
#include <dev/pci/pcireg.h>
@


1.8
log
@Add support for AMD Family 15h Models 10h-1Fh Processors.
@
text
@d1 1
a1 1
/*	$OpenBSD: km.c,v 1.7 2013/09/17 13:36:31 kettenis Exp $	*/
d32 1
a32 1
 * AMD Family 10h/11h/14h/15h Processors, Function 3 -- Miscellaneous Control
d75 2
a76 1
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_15_1x_MISC }
@


1.7
log
@Rename existing AMD Family 15h Models 00h-0Fh Processor entries and add
a bunch of AMD Family 15h Models 10h-1Fh Processor entries.
@
text
@d1 1
a1 1
/*	$OpenBSD: km.c,v 1.6 2013/03/14 14:50:25 brynet Exp $	*/
d32 1
a32 1
 * AMD Family 10h/11h/14h Processors, Function 3 -- Miscellaneous Control
d74 2
a75 1
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_15_0x_MISC }
@


1.6
log
@Match on family 15h also.

ok brad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: km.c,v 1.5 2011/05/31 00:19:55 deraadt Exp $	*/
d74 1
a74 1
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_15_MISC }
@


1.5
log
@Family 14h also supports the km(4) temperature sensor
from brad
@
text
@d1 1
a1 1
/*	$OpenBSD: km.c,v 1.4 2009/01/26 15:07:49 kettenis Exp $	*/
d73 2
a74 1
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_14_MISC }
@


1.4
log
@Unify error message.

ok grange@@, oga@@, todd@@
@
text
@d1 1
a1 1
/*	$OpenBSD: km.c,v 1.3 2008/08/30 01:10:13 brad Exp $	*/
d32 1
a32 1
 * AMD Family 10h/11h Processors, Function 3 -- Miscellaneous Control
d72 2
a73 1
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_11_MISC }
@


1.3
log
@Mention Family 11h in the comment.
@
text
@d1 1
a1 1
/*	$OpenBSD: km.c,v 1.2 2008/08/29 03:38:31 cnst Exp $	*/
d100 1
a100 1
		printf(": unable to register the update task\n");
@


1.2
log
@support AMD Family 11h (Turion X2 Ultra et al);  discussed with jsg@@ and jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: km.c,v 1.1 2008/04/29 05:29:59 cnst Exp $	*/
d32 1
a32 1
 * AMD Family 10h Processors, Function 3 -- Miscellaneous Control
d71 2
a72 2
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_10_MISC},
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_11_MISC}
@


1.1
log
@New km(4) driver for AMD Family 10h Processors (Phenom, Opteron Barcelona etc);
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: kate.c,v 1.2 2008/03/27 04:52:03 cnst Exp $	*/
d71 2
a72 1
	{ PCI_VENDOR_AMD, PCI_PRODUCT_AMD_AMD64_10_MISC}
@

