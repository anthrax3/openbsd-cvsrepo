head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.18
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.16
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.14
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.10
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.8
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.7.0.18
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.16
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.14
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.12
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.10
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.8
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.6
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.3.0.10
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.4
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2013.11.26.20.33.17;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2009.10.13.22.05.13;	author jsg;	state Exp;
branches;
next	1.8;

1.8
date	2009.05.31.04.42.16;	author jsg;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.17.08.44.41;	author grange;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.24.07.38.38;	author grange;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.28.21.01.43;	author grange;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.20.21.33.37;	author grange;	state Exp;
branches;
next	1.3;

1.3
date	2001.04.04.07.02.54;	author csapuntz;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	99.07.18.21.25.20;	author csapuntz;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	98.06.30.22.58.17;	author angelos;	state Exp;
branches;
next	;

1.2.4.1
date	2001.05.14.22.25.56;	author niklas;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2003.03.28.00.38.24;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2004.02.19.10.56.29;	author niklas;	state Exp;
branches;
next	;

1.3.6.1
date	2003.05.19.22.19.08;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.10
log
@1 << 31 cleanup.  Eitan Adler pointed out that there has been a
resurrection of the bad idiom in the tree.
sufficient review by miod, kettenis, tedu
@
text
@/*	$OpenBSD: pciidereg.h,v 1.9 2009/10/13 22:05:13 jsg Exp $	*/
/*	$NetBSD: pciidereg.h,v 1.6 2000/11/14 18:42:58 thorpej Exp $	*/

/*
 * Copyright (c) 1998 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _DEV_PCI_PCIIDEREG_H_
#define _DEV_PCI_PCIIDEREG_H_

/*
 * PCI IDE controller register definitions.
 *
 * Author: Christopher G. Demetriou, March 2, 1998.
 *
 * See "PCI IDE Controller Specification, Revision 1.0 3/4/94" and
 * "Programming Interface for Bus Master IDE Controller, Revision 1.0
 * 5/16/94" from the PCI SIG.
 */

/*
 * Number of channels per chip.  MUST NOT CHANGE (macros in pciide.c and
 * this file depend on its value).
 */
#define	PCIIDE_NUM_CHANNELS		2

/*
 * PCI base address register locations (some are per-channel).
 */
#define	PCIIDE_REG_CMD_BASE(chan)	(0x10 + (8 * (chan)))
#define	PCIIDE_REG_CTL_BASE(chan)	(0x14 + (8 * (chan)))
#define	PCIIDE_REG_BUS_MASTER_DMA	0x20

/*
 * Bits in the PCI Programming Interface register (some are per-channel).
 * Bits 6-4 are defined as read-only in PCI 2.1 specification.
 * Microsoft proposed to use these bits for independent channels
 * enable/disable. This feature is enabled based on the value of bit 6.
 */
#define PCIIDE_CHANSTATUS_EN		0x40
#define PCIIDE_CHAN_EN(chan)		(0x20 >> (chan))
#define	PCIIDE_INTERFACE_PCI(chan)	(0x01 << (2 * (chan)))
#define	PCIIDE_INTERFACE_SETTABLE(chan)	(0x02 << (2 * (chan)))
#define	PCIIDE_INTERFACE_BUS_MASTER_DMA	0x80

/*
 * Compatibility address/IRQ definitions (some are per-channel).
 */
#define	PCIIDE_COMPAT_CMD_BASE(chan)	((chan) == 0 ? 0x1f0 : 0x170)
#define	PCIIDE_COMPAT_CMD_SIZE		8
#define	PCIIDE_COMPAT_CTL_BASE(chan)	((chan) == 0 ? 0x3f6 : 0x376)
#define	PCIIDE_COMPAT_CTL_SIZE		1
#define	PCIIDE_COMPAT_IRQ(chan)		((chan) == 0 ? 14 : 15)

#define	PCIIDE_CHANNEL_NAME(chan)	((chan) == 0 ? "channel 0" : "channel 1")

/*
 * definitions for IDE DMA
 * XXX maybe this should go elsewhere
 */

/* secondary channel registers offset */
#define IDEDMA_SCH_OFFSET 0x08
#define IDEDMA_NREGS 8

/* Bus master command register (per channel) */
#define IDEDMA_CMD(chan) (0x00 + IDEDMA_SCH_OFFSET * (chan))
#define IDEDMA_CMD_WRITE 0x08
#define IDEDMA_CMD_START 0x01

/* Bus master status register (per channel) */
#define IDEDMA_CTL(chan) (0x02 + IDEDMA_SCH_OFFSET * (chan))
#define IDEDMA_CTL_DRV_DMA(d)	(0x20 << (d))
#define IDEDMA_CTL_INTR		0x04
#define IDEDMA_CTL_ERR		0x02
#define IDEDMA_CTL_ACT		0x01

/* Bus master table pointer register (per channel) */
#define IDEDMA_TBL(chan) (0x04 + IDEDMA_SCH_OFFSET * (chan))
#define IDEDMA_TBL_MASK 0xfffffffc
#define IDEDMA_TBL_ALIGN 0x00010000

/* bus master table descriptor */
struct idedma_table {
	u_int32_t base_addr; /* physical base addr of memory region */
	u_int32_t byte_count; /* memory region length */
#define IDEDMA_BYTE_COUNT_MASK 0x0000FFFF
#define IDEDMA_BYTE_COUNT_EOT  0x80000000
};

#define IDEDMA_BYTE_COUNT_MAX 0x00010000 /* Max I/O per table */
#define IDEDMA_BYTE_COUNT_ALIGN 0x00010000

/* Number of idedma table needed */
#define NIDEDMA_TABLES (MAXPHYS/PAGE_SIZE + 1)

/* Intel SCH */
#define SCH_D0TIM	0x80
#define SCH_D1TIM	0x84
#define SCH_TIM_UDMA	0x70000
#define SCH_TIM_MDMA	0x00300
#define SCH_TIM_PIO	0x00007
#define SCH_TIM_SYNCDMA	(1U << 31)

#define SCH_TIM_MASK	(SCH_TIM_UDMA | SCH_TIM_MDMA | SCH_TIM_PIO)

#endif	/* !_DEV_PCI_PCIIDEREG_H_ */
@


1.9
log
@Correct udma timing register offset and the udma mode ceiling
we allow for Intel SCH chips.

From tharada@@oucrc.org in PR 6232, verified against the datasheet.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidereg.h,v 1.8 2009/05/31 04:42:16 jsg Exp $	*/
d129 1
a129 1
#define SCH_TIM_SYNCDMA	(1 << 31)
@


1.8
log
@Add SCH IDE support code.
Tested on a p series vaio.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidereg.h,v 1.7 2004/10/17 08:44:41 grange Exp $	*/
d126 1
a126 1
#define SCH_TIM_UDMA	0x30000
@


1.7
log
@Define number of ide dma registers; from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidereg.h,v 1.6 2004/09/24 07:38:38 grange Exp $	*/
d122 10
@


1.6
log
@Multiple inclusion protection.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidereg.h,v 1.5 2003/09/28 21:01:43 grange Exp $	*/
d90 1
@


1.5
log
@kill trailing spaces, no functional changes
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidereg.h,v 1.4 2002/11/20 21:33:37 grange Exp $	*/
d34 3
d121 2
@


1.4
log
@o change dma engine registers macros so that the channel
specifying is required
o fix missed offsets for the secondary channel which were found
with the help of this new more strict semantics; this can solve
many old problems

tested by gluk@@, jason@@
ok gluk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidereg.h,v 1.3 2001/04/04 07:02:54 csapuntz Exp $	*/
d81 1
a81 1
 * definitions for IDE DMA 
@


1.3
log
@

Minor cleanup to minimize diffs with NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: pciidereg.h,v 1.2 1999/07/18 21:25:20 csapuntz Exp $	*/
d88 2
a89 2
/* Bus master command register */
#define IDEDMA_CMD 0x00
d93 2
a94 2
/* Bus master status register */
#define IDEDMA_CTL 0x02
d100 2
a101 2
/* Bus master table pointer register */
#define IDEDMA_TBL 0x04
@


1.3.6.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d88 2
a89 2
/* Bus master command register (per channel) */
#define IDEDMA_CMD(chan) (0x00 + IDEDMA_SCH_OFFSET * (chan))
d93 2
a94 2
/* Bus master status register (per channel) */
#define IDEDMA_CTL(chan) (0x02 + IDEDMA_SCH_OFFSET * (chan))
d100 2
a101 2
/* Bus master table pointer register (per channel) */
#define IDEDMA_TBL(chan) (0x04 + IDEDMA_SCH_OFFSET * (chan))
@


1.2
log
@

Import of NetBSD ATA/IDE stuff.

Introduction of home-grown

To enable this stuff in your configuration, look at the NEWATA conf file
and go through

dev/isa/files.isa
dev/pci/files.pci
conf/files
arch/i386/conf/files.i386

and follow the instructions on commenting/uncommenting stuff
@
text
@d1 2
a2 2
/*	$OpenBSD: pciidereg.h,v 1.4 1999/02/02 16:14:00 bouyer Exp $	*/
/*	$NetBSD: pciidereg.h,v 1.4 1999/02/02 16:14:00 bouyer Exp $	*/
d60 1
a60 1
 * Microsoft proposed to use these bits for independant channels
d78 2
d117 1
a117 1
#define NIDEDMA_TABLES (MAXPHYS/NBPG + 1)
@


1.2.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
/*	$OpenBSD: pciidereg.h,v 1.3 2001/04/04 07:02:54 csapuntz Exp $	*/
/*	$NetBSD: pciidereg.h,v 1.6 2000/11/14 18:42:58 thorpej Exp $	*/
d60 1
a60 1
 * Microsoft proposed to use these bits for independent channels
a77 2
#define	PCIIDE_CHANNEL_NAME(chan)	((chan) == 0 ? "channel 0" : "channel 1")

d115 1
a115 1
#define NIDEDMA_TABLES (MAXPHYS/PAGE_SIZE + 1)
@


1.2.4.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d88 2
a89 2
/* Bus master command register (per channel) */
#define IDEDMA_CMD(chan) (0x00 + IDEDMA_SCH_OFFSET * (chan))
d93 2
a94 2
/* Bus master status register (per channel) */
#define IDEDMA_CTL(chan) (0x02 + IDEDMA_SCH_OFFSET * (chan))
d100 2
a101 2
/* Bus master table pointer register (per channel) */
#define IDEDMA_TBL(chan) (0x04 + IDEDMA_SCH_OFFSET * (chan))
@


1.2.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d81 1
a81 1
 * definitions for IDE DMA
@


1.1
log
@PCI-IDE interface include files (needed for Alpha, at least); from NetBSD.
@
text
@d1 2
a2 2
/* $OpenBSD$ */
/*	$NetBSD: pciidereg.h,v 1.2 1998/03/04 19:17:10 cgd Exp $	*/
d59 3
d63 2
d77 39
@

