head	1.17;
access;
symbols
	OPENBSD_6_0:1.17.0.10
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.4
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.8
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.6
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.15.0.2
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.14.0.8
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.6
	OPENBSD_5_0:1.14.0.4
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.2
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.13.0.12
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.8
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.10
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.6
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.4
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.2
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.11.0.8
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.6
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.4
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11;
locks; strict;
comment	@ * @;


1.17
date	2014.08.20.01.02.50;	author dlg;	state Exp;
branches;
next	1.16;
commitid	lSPrbeSeISePZs1C;

1.16
date	2013.04.01.06.40.40;	author brad;	state Exp;
branches;
next	1.15;

1.15
date	2012.08.31.12.41.17;	author stsp;	state Exp;
branches;
next	1.14;

1.14
date	2010.09.07.16.21.45;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2007.12.05.08.30.33;	author jsg;	state Exp;
branches;
next	1.12;

1.12
date	2007.09.01.19.19.39;	author ckuethe;	state Exp;
branches;
next	1.11;

1.11
date	2006.02.19.13.57.02;	author damien;	state Exp;
branches;
next	1.10;

1.10
date	2006.02.16.17.35.51;	author damien;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.15.19.36.46;	author damien;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.12.10.28.07;	author damien;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.04.21.48.34;	author damien;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.04.09.46.48;	author damien;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.22.21.35.08;	author damien;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.18.20.44.51;	author damien;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.17.11.12.54;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.14.22.08.20;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.14.21.54.58;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.17
log
@remove the custom jumbo allocator. its never been enabled or used.

putting this into the tree to make it easier to test.
@
text
@/*	$OpenBSD: if_nfevar.h,v 1.16 2013/04/01 06:40:40 brad Exp $	*/

/*-
 * Copyright (c) 2005 Jonathan Gray <jsg@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define NFE_IFQ_MAXLEN	64

struct nfe_tx_data {
	bus_dmamap_t	map;
	bus_dmamap_t	active;
	struct mbuf	*m;
};

struct nfe_tx_ring {
	bus_dmamap_t		map;
	bus_dma_segment_t	seg;
	bus_addr_t		physaddr;
	struct nfe_desc32	*desc32;
	struct nfe_desc64	*desc64;
	struct nfe_tx_data	data[NFE_TX_RING_COUNT];
	int			queued;
	int			cur;
	int			next;
};

struct nfe_rx_data {
	bus_dmamap_t	map;
	struct mbuf	*m;
};

struct nfe_rx_ring {
	bus_dmamap_t		map;
	bus_dma_segment_t	seg;
	bus_addr_t		physaddr;
	struct nfe_desc32	*desc32;
	struct nfe_desc64	*desc64;
	struct nfe_rx_data	data[NFE_RX_RING_COUNT];
	int			bufsz;
	int			cur;
	int			next;
};

struct nfe_softc {
	struct device		sc_dev;
	struct arpcom		sc_arpcom;
	bus_space_handle_t	sc_memh;
	bus_space_tag_t		sc_memt;
	void			*sc_ih;
	bus_dma_tag_t		sc_dmat;
	struct mii_data		sc_mii;
	struct timeout		sc_tick_ch;

	u_int			sc_flags;
#define NFE_JUMBO_SUP		0x01
#define NFE_40BIT_ADDR		0x02
#define NFE_HW_CSUM		0x04
#define NFE_HW_VLAN		0x08
#define NFE_CORRECT_MACADDR	0x20
#define NFE_PWR_MGMT		0x40
#define NFE_WOL			0x80

	uint32_t		rxtxctl;
	uint8_t			mii_phyaddr;

	struct nfe_tx_ring	txq;
	struct nfe_rx_ring	rxq;
};
@


1.16
log
@Rewrite receive filter and ioctl handling code.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.15 2012/08/31 12:41:17 stsp Exp $	*/
a38 6
struct nfe_jbuf {
	caddr_t			buf;
	bus_addr_t		physaddr;
	SLIST_ENTRY(nfe_jbuf)	jnext;
};

a46 2
	bus_dmamap_t		jmap;
	bus_dma_segment_t	jseg;
a49 1
	caddr_t			jpool;
a50 2
	struct nfe_jbuf		jbuf[NFE_JPOOL_COUNT];
	SLIST_HEAD(, nfe_jbuf)	jfreelist;
a70 1
#define NFE_USE_JUMBO		0x10
@


1.15
log
@Wake on LAN support for nfe(4). Tested by me, russel on misc@@, and jsg.
ok jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.14 2010/09/07 16:21:45 deraadt Exp $	*/
a76 1
	int			sc_if_flags;
@


1.14
log
@remove the powerhook code.  All architectures now use the ca_activate tree
traversal code to suspend/resume
ok oga kettenis blambert
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.13 2007/12/05 08:30:33 jsg Exp $	*/
d86 1
@


1.13
log
@Make sure newer adapters are not in powerdown mode.
From Oleg Safiullin <form@@pdp-11.org.ru> similiar to changes
in Linux/FreeBSD driver.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.12 2007/09/01 19:19:39 ckuethe Exp $	*/
a75 1
	void			*sc_powerhook;
@


1.12
log
@Correct the backwards ethernet address that some NVidia MACs have.
diff from brad. "commit this" jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.11 2006/02/19 13:57:02 damien Exp $	*/
d86 1
@


1.11
log
@- fix h/w VLAN tagging and enable it for adapters that support it (VLAN tag
  stripping job is left to the network stack).
- enable interrupt mitigation by default.
- add some magic to the initialization sequence in the hope that it will fix
  TX issues seen on some adapters.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.10 2006/02/16 17:35:51 damien Exp $	*/
d80 6
a85 5
#define NFE_JUMBO_SUP	0x01
#define NFE_40BIT_ADDR	0x02
#define NFE_HW_CSUM	0x04
#define NFE_HW_VLAN	0x08
#define NFE_USE_JUMBO	0x10
@


1.10
log
@- stop enabling/disabling interrupts in nfe_intr().
- store RX/TX settings in nfe_softc so we don't recompute them all the time.
- fix h/w VLAN tagging flags.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.9 2006/02/15 19:36:46 damien Exp $	*/
d87 1
a87 1
	uint8_t			phyaddr;
@


1.9
log
@- enable jumbo frames for adapters that support it.
- extend TX DMA mappings size from MCLBYTES to NFE_JBYTES.
- add initial (disabled) bits for interrupts mitigation.
- add initial (disabled) bits for h/w VLAN tagging.
- did some consistency tweaks while i'm here.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.8 2006/02/12 10:28:07 damien Exp $	*/
d86 1
@


1.8
log
@initial jumbo frames support (disabled for now).
#define'ing NFE_NO_JUMBO can save a few hundred KB of wired memory.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.7 2006/02/04 21:48:34 damien Exp $	*/
d83 2
a84 1
#define NFE_USE_JUMBO	0x08
@


1.7
log
@- start MII timer in nfe_init() and move timer initialization in nfe_attach()
- set RX filter before enabling RX in nfe_init()
- call mii_down() in nfe_stop()
- fix setting of full/half-duplex mode
- call mii_phy_reset() for each PHY attached and call mii_mediachg() in
  nfe_ifmedia_upd()
- some cleaning while i'm here
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.6 2006/02/04 09:46:48 damien Exp $	*/
d39 6
d53 2
d58 1
d60 3
d83 1
@


1.6
log
@- add support for multicast filters.
- fix setting of if_capabilities flags for chips supporting checksum offload.
- fix dmesg output in case we can't establish the intr handler.
- fix a call to bus_dmamap_unload() in nfe_encap().
@
text
@d1 3
a3 2
/*	$OpenBSD: if_nfevar.h,v 1.5 2006/01/22 21:35:08 damien Exp $	*/
/*
d63 1
a63 1
	struct timeout		sc_timeout;
@


1.5
log
@fixes miibus_{read,write}reg routines.
this resolves the ghost ukphy problem.
did some cleanup while i'm here.

tested by and ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.4 2006/01/18 20:44:51 damien Exp $	*/
d65 1
@


1.4
log
@initial Tx/Rx bits.  not working yet.

joint work with jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.3 2005/12/17 11:12:54 jsg Exp $	*/
d63 1
@


1.3
log
@Don't dynamically assign ring size, simplifies ring structures
and code that deals with rings.  We can get away with this
as we only have one type of rx and one type of tx ring at a time
unlike ral(4).

Suggested by and ok damien@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.2 2005/12/14 22:08:20 jsg Exp $	*/
d18 1
a18 1
#define NFE_IFQ_MAXLEN 64
d21 3
a23 2
	bus_dmamap_t			map;
	struct mbuf			*m;
d30 2
a31 2
	struct nfe_desc		*desc_v1;
	struct nfe_desc_v3	*desc_v3;
a40 1
	int		drop;
d47 2
a48 2
	struct nfe_desc		*desc_v1;
	struct nfe_desc_v3	*desc_v3;
d57 2
a58 2
        bus_space_handle_t	sc_ioh;
        bus_space_tag_t		sc_iot;
d65 3
a67 2
#define NFE_JUMBO_SUP		0x01
#define NFE_40BIT_ADDR		0x02
d69 1
a69 1
	u_char			phyaddr;
@


1.2
log
@We aren't likely to need to keep track of crypted/decrypted ring
bits any time soon... pointed out by damien@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_nfevar.h,v 1.1 2005/12/14 21:54:58 jsg Exp $	*/
d31 1
a31 2
	struct nfe_tx_data	*data;
	int			count;
d49 1
a49 2
	struct nfe_rx_data	*data;
	int			count;
@


1.1
log
@Initial bits for an nvidia nforce Ethernet driver.
bus_dma usage modelled after ral.  Does not yet see rx interrupts
when testing with ck804.

Nvidia won't give out documentation for this, various "free" operating
systems include a closed source driver, and the Linux people who reverse
engineered it to create a specification won't give it out.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a35 2
	int			cur_encrypt;
	int			next_encrypt;
a53 1
	int			cur_decrypt;
@

