head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.32
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.30
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.28
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.16
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.24
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.22
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.20
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.18
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.14
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.12
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.10
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.8
	OPENBSD_5_0:1.7.0.6
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.4
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.6.0.16
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.18
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.14
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.12
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.10
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.8
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.6
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.5.0.14
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.3.0.8
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	SMP:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2;
locks; strict;
comment	@ * @;


1.7
date	2010.07.23.07.47.13;	author jsg;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.08.17.48.21;	author krw;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.16.00.53.12;	author krw;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.00;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.04.15.06.01.31;	author krw;	state Exp;
branches
	1.3.4.1
	1.3.8.1;
next	1.2;

1.2
date	2001.02.20.00.32.30;	author krw;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.15.04.07.58;	author krw;	state Exp;
branches;
next	;

1.3.4.1
date	2001.05.14.22.25.57;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.03.28.15.35.59;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2003.03.28.00.38.25;	author niklas;	state Exp;
branches;
next	;

1.3.8.1
date	2002.06.11.03.42.27;	author art;	state Exp;
branches;
next	1.3.8.2;

1.3.8.2
date	2002.10.29.00.33.29;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Manuel Bouyer rescinded clauses 3 and 4 of his license text.
@
text
@/*	$OpenBSD: siop_pci_common.h,v 1.6 2005/10/08 17:48:21 krw Exp $ */
/*	$NetBSD: siop_pci_common.h,v 1.6 2005/02/27 00:27:34 perry Exp $ */

/*
 * Copyright (c) 2000 Manuel Bouyer.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* common functions for the siop and esiop pci front ends */

/* structure describing each chip */
struct siop_product_desc {
	u_int32_t product;
	int	revision;
	int	features; /* features are defined in siopvar.h */
	u_int8_t maxburst;
	u_int8_t maxoff;  /* maximum supported offset */
	u_int8_t clock_div; /* clock divider to use for async. logic */
	u_int8_t clock_period; /* clock period (ns * 10) */
	int 	ram_size; /* size of RAM, if appropriate */
};

const struct siop_product_desc * siop_lookup_product(u_int32_t, int);

/* Driver internal state */
struct siop_pci_common_softc {
	pci_chipset_tag_t	sc_pc;	/* PCI registers info */
	pcitag_t		sc_tag;
	void			*sc_ih;	/* PCI interrupt handle */
	const struct siop_product_desc *sc_pp; /* Adapter description */
};

int siop_pci_attach_common(struct siop_pci_common_softc *,
	struct siop_common_softc *, struct pci_attach_args *,
	int (*)(void *));
void siop_pci_reset(struct siop_common_softc *);
@


1.6
log
@Remove some trailing whitespace in license. From perry via NetBSD.
Some whitespace tweaks to minimize delta. Note we are now sync'd up
to latest (r1.6) NetBSD source.
@
text
@d1 1
a1 1
/*	$OpenBSD: siop_pci_common.h,v 1.5 2002/09/16 00:53:12 krw Exp $ */
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Manuel Bouyer.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.5
log
@Resync siop with NetBSD. Make strong effort to minimize
differences, undoing whitespace, spelling, etc. changes
and adopting the NetBSD code instead of equivalent home
grown code for PPR negotiation, etc.

siop.c            1.21 -> 1.64
siop_common.c     1.12 -> 1.30
siopreg.h         1.7  -> 1.13
siopvar.h         1.13 -> 1.18
siopvar_common.h  1.10 -> 1.21
ncr53cxxx.c       1.5  -> 1.10
siop.ss           1.12 -> 1.17
siop_pci.c        1.8  -> 1.11
siop_pci_common.c 1.6  -> 1.17
siop_pci_common.h 1.2  -> 1.4

Many fixes, add 1010-66 support, restructure things to prepare for
addition of esiop, osiop and oosiop drivers.

tested on various archs by art@@, millert@@, wilfried@@, jason@@,
Dan Weeks.

ok deraadt@@.
@
text
@d1 2
a2 2
/*	$OpenBSD: siop_pci_common.h,v 1.4 2002/03/14 01:27:00 millert Exp $ */
/*	$NetBSD: siop_pci_common.h,v 1.4 2002/04/23 20:41:19 bouyer Exp $	*/
d24 1
a24 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     
d57 1
a57 1
int siop_pci_attach_common (struct siop_pci_common_softc *,
d59 1
a59 1
	int (*) (void *));
@


1.4
log
@First round of __P removal in sys
@
text
@d1 2
a2 2
/*	$OpenBSD: siop_pci_common.h,v 1.3 2001/04/15 06:01:31 krw Exp $ */
/*	$NetBSD: siop_pci_common.h,v 1.2 2000/10/23 14:57:23 bouyer Exp $	*/
d17 1
a17 1
 *	This product includes software developed by Manuel Bouyer
d43 1
a43 4
	u_int8_t scf_index; /* Index into a period_factor_to_scf.scf */
#define     SF_CLOCK_2500	0
#define	    SF_CLOCK_1250	1
#define	    SF_CLOCK_625	2
d50 1
a50 2
struct siop_pci_softc {
	struct siop_softc siop;
d57 4
a60 3
int siop_pci_attach_common(struct siop_pci_softc *,
	struct pci_attach_args *);
void siop_pci_reset(struct siop_softc *);
@


1.3
log
@Support U160 on 53c1010 chips.

Add support for PPR negotiations and DT transfers,
and the preservation and restoration of the
SCNTL4 register which controls Ultra3 transfers.

Redo sync lookup, since the same period factor
can mean two things depending on whether you are
using DT or ST. Keep a minimum allowed ST period
factor, and a minimum allowd DT period factor for
each adapter.

Currently NO support for QAS or IUS or AIP.
@
text
@d1 1
a1 1
/*	$OpenBSD: siop_pci_common.h,v 1.2 2001/02/20 00:32:30 krw Exp $ */
d50 1
a50 1
const struct siop_product_desc * siop_lookup_product __P((u_int32_t, int));
d61 3
a63 3
int siop_pci_attach_common __P((struct siop_pci_softc *,
	struct pci_attach_args *));
void siop_pci_reset __P((struct siop_softc *));
@


1.3.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: siop_pci_common.h,v 1.3 2001/04/15 06:01:31 krw Exp $ */
d50 1
a50 1
const struct siop_product_desc * siop_lookup_product(u_int32_t, int);
d61 3
a63 3
int siop_pci_attach_common(struct siop_pci_softc *,
	struct pci_attach_args *);
void siop_pci_reset(struct siop_softc *);
@


1.3.8.2
log
@sync to -current
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: siop_pci_common.h,v 1.4 2002/04/23 20:41:19 bouyer Exp $	*/
d17 1
a17 1
 *	This product includes software developed by Manuel Bouyer.
d43 4
a46 1
	u_int8_t clock_period; /* clock period (ns * 10) */
d53 2
a54 1
struct siop_pci_common_softc {
d61 3
a63 4
int siop_pci_attach_common (struct siop_pci_common_softc *,
	struct siop_common_softc *, struct pci_attach_args *,
	int (*) (void *));
void siop_pci_reset(struct siop_common_softc *);
@


1.3.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: siop_pci_common.h,v 1.3 2001/04/15 06:01:31 krw Exp $ */
@


1.3.4.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d50 1
a50 1
const struct siop_product_desc * siop_lookup_product(u_int32_t, int);
d61 3
a63 3
int siop_pci_attach_common(struct siop_pci_softc *,
	struct pci_attach_args *);
void siop_pci_reset(struct siop_softc *);
@


1.3.4.3
log
@Sync the SMP branch with 3.3
@
text
@d2 1
a2 1
/*	$NetBSD: siop_pci_common.h,v 1.4 2002/04/23 20:41:19 bouyer Exp $	*/
d17 1
a17 1
 *	This product includes software developed by Manuel Bouyer.
d43 4
a46 1
	u_int8_t clock_period; /* clock period (ns * 10) */
d53 2
a54 1
struct siop_pci_common_softc {
d61 3
a63 4
int siop_pci_attach_common (struct siop_pci_common_softc *,
	struct siop_common_softc *, struct pci_attach_args *,
	int (*) (void *));
void siop_pci_reset(struct siop_common_softc *);
@


1.2
log
@Tone down the verbosity level on the siop driver, print negotiation
results on one line, during boot polling only.

Force wide/sync negotiations for all targets during boot.

Delete extraneous name field and associated strings that duplicate
info provided in INQUIRY data.

Actually timeout during polling rather than wait forever for
ITSDONE.

Remove unneeded check for SCSI_POLL before calling scsi_done(). Makes
logic conform to other drivers.
@
text
@d1 1
a1 1
/*	$OpenBSD: siop_pci_common.h,v 1.1 2001/02/15 04:07:58 krw Exp $ */
d43 4
a46 1
	u_int8_t clock_period; /* clock period (ns * 10) */
@


1.1
log
@Import siop, a replacement for the ncr SCSI driver, from NetBSD.

Written for NetBSD by Manuel Bouyer.

Tested with various cards on i386 and alpha.

Outstanding issue: doesn't work with PowerPC yet.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a38 1
	const char *name;
@

