head	1.6;
access;
symbols
	OPENBSD_5_7:1.5.0.42
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.40
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.38
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.34
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.32
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.30
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.28
	OPENBSD_5_0:1.5.0.26
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3;
locks; strict;
comment	@ * @;


1.6
date	2015.04.09.18.58.22;	author deraadt;	state dead;
branches;
next	1.5;
commitid	cDamcqFPw3HffP51;

1.5
date	2005.04.01.21.42.36;	author canacar;	state Exp;
branches;
next	1.4;

1.4
date	2004.12.07.06.10.24;	author mcbride;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.26.22.48.14;	author mcbride;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.26.20.17.23;	author mcbride;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.26.06.42.33;	author alex;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Send lmc(4) and san(4) to the HDLC framed bit bucket in the sky.
@
text
@/*	$OpenBSD: if_san_obsd.h,v 1.5 2005/04/01 21:42:36 canacar Exp $	*/

/*-
 * Copyright (c) 2001-2004 Sangoma Technologies (SAN)
 * All rights reserved.  www.sangoma.com
 *
 * This code is written by Alex Feldman <al.feldman@@sangoma.com> for SAN.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following disclaimer
 *    in the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name of Sangoma Technologies nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY SANGOMA TECHNOLOGIES AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */



#ifndef __IF_SAN_OBSD_H
# define __IF_SAN_OBSD_H

#define IF_IFACE_V35		0x1001
#define IF_IFACE_T1		0x1002
#define IF_IFACE_E1		0x1003
#define IF_IFACE_SYNC_SERIAL	0x1004

#define IF_PROTO_HDLC		0x2001
#define IF_PROTO_PPP		0x2002
#define IF_PROTO_CISCO		0x2003
#define IF_PROTO_FR		0x2004
#define IF_PROTO_FR_ADD_PVC	0x2005
#define IF_PROTO_FR_DEL_PVC	0x2006
#define IF_PROTO_X25		0x2007
#define WAN_PROTO_X25		0x2007

#define IF_GET_PROTO		0x3001

#define te1_settings		void
#define sync_serial_settings	void

#define ifs_size		data_length
#define ifs_te1			data
#define ifs_sync		data
#define ifs_cisco		data
#define ifs_fr			data
#define ifs_fr_pvc		data
#define ifs_fr_pvc_info	data


#define SANCFG_LBO_FLAG		0x0001
#define SANCFG_CLOCK_FLAG	0x0002

typedef struct { int dummy; } cisco_proto, fr_proto, fr_proto_pvc;
struct if_settings {
	unsigned int	type;
	unsigned int	data_length;
	unsigned long	flags;
	void*		data;
};

typedef struct {
	int		proto;
	int		iface;
	char		hwprobe[100];
	sdla_te_cfg_t	te_cfg;
	union {
		cisco_proto	cisco;
		fr_proto	fr;
		fr_proto_pvc	fr_pvc;
	} protocol;
} wanlite_def_t;

/* WANPIPE Generic function interface */
# if defined(_KERNEL)
struct ifnet	*wanpipe_generic_alloc (sdla_t *);
void		 wanpipe_generic_free (struct ifnet *);
int		 wanpipe_generic_name (sdla_t *, char *, int);
int		 wanpipe_generic_register(sdla_t *, struct ifnet *, char *);
void		 wanpipe_generic_unregister(struct ifnet *);
int		 wanpipe_generic_open(struct ifnet *);
int		 wanpipe_generic_close(struct ifnet *);
int		 wanpipe_generic_input(struct ifnet *, struct mbuf *);
int		 wanpipe_generic_tx_timeout(struct ifnet *);
int		 wp_lite_set_proto(struct ifnet *, struct ifreq *);
int		 wp_lite_set_te1_cfg(struct ifnet *, struct ifreq *);
# endif
#endif /* __IF_SAN_OBSD_H */
@


1.5
log
@Improve san(4) driver:

* Some KNF, fix return values (from -Exxx to Exxx)
* Some string handling paranoia.
* Use ifconfig media options to switch between ppp and cHDLC modes,
  based on patch from claudio@@
* tcpdump works, patch from claudio@@
* ppp mode now works.

Lots of testing & feedback by Greg Mortensen,
Additional testing Sean Knox
ok alex@@, go go go deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_san_obsd.h,v 1.4 2004/12/07 06:10:24 mcbride Exp $	*/
@


1.4
log
@Cleanup. Rename some defines, add wp_lite_set_te1_cfg()
(used to change LBO and T1/E1 clock configurations)

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_san_obsd.h,v 1.3 2004/06/26 22:48:14 mcbride Exp $	*/
d95 1
a95 1
int		 wanpipe_generic_name (sdla_t *, char *);
@


1.3
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: if_san_obsd.h,v 1.2 2004/06/26 20:17:23 mcbride Exp $	*/
d68 2
a69 8
#define WANHDLC_CONF_INTERFACE	0x0001
#define WANHDLC_CONF_CLOCKING	0x0002

typedef struct {
	unsigned long	mask;
	char		interface;
	unsigned	bps;
} wan_dev_conf_t;
d75 1
a83 1
	wan_dev_conf_t	devconf;
d103 1
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 26
a65 26
# define IF_IFACE_V35		0x1001
# define IF_IFACE_T1		0x1002
# define IF_IFACE_E1		0x1003
# define IF_IFACE_SYNC_SERIAL	0x1004

# define IF_PROTO_HDLC		0x2001
# define IF_PROTO_PPP		0x2002
# define IF_PROTO_CISCO		0x2003
# define IF_PROTO_FR		0x2004
# define IF_PROTO_FR_ADD_PVC	0x2005
# define IF_PROTO_FR_DEL_PVC	0x2006
# define IF_PROTO_X25		0x2007
# define WAN_PROTO_X25		0x2007

# define IF_GET_PROTO		0x3001

# define te1_settings		void
# define sync_serial_settings	void

# define ifs_size		data_length
# define ifs_te1		data
# define ifs_sync              	data
# define ifs_cisco             	data
# define ifs_fr                	data
# define ifs_fr_pvc            	data
# define ifs_fr_pvc_info       	data
d78 1
a78 2
struct if_settings
{
d99 10
a108 10
struct ifnet*	wanpipe_generic_alloc (sdla_t*);
void		wanpipe_generic_free (struct ifnet*);
int		wanpipe_generic_name (sdla_t*, char*);
int		wanpipe_generic_register(sdla_t*, struct ifnet*, char*);
void		wanpipe_generic_unregister(struct ifnet*);
int		wanpipe_generic_open(struct ifnet*);
int		wanpipe_generic_close(struct ifnet*);
int		wanpipe_generic_input(struct ifnet*, struct mbuf*);
int		wanpipe_generic_tx_timeout(struct ifnet*);
int		wp_lite_set_proto(struct ifnet*, struct ifreq*);
@


1.1
log
@Sangoma Network Device driver for AFT series card (initiali version).
ok mcbride@@
@
text
@d1 2
@

