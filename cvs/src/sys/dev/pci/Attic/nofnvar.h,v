head	1.7;
access;
symbols
	OPENBSD_5_6:1.6.0.48
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.46
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.42
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.40
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.38
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.36
	OPENBSD_5_0:1.6.0.34
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	SMP:1.5.0.6
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	UBC_SYNC_B:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	UBC:1.4.0.2;
locks; strict;
comment	@ * @;


1.7
date	2014.08.15.14.12.07;	author mikeb;	state dead;
branches;
next	1.6;
commitid	2AkQEO8mhDh240iv;

1.6
date	2003.06.02.19.08.58;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.24.18.33.26;	author jason;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	2002.05.16.22.52.17;	author jason;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2002.05.15.21.33.22;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.08.23.06.01;	author jason;	state dead;
branches;
next	1.1;

1.1
date	2002.01.07.23.16.38;	author jason;	state Exp;
branches;
next	;

1.4.2.1
date	2002.06.11.03.42.26;	author art;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2002.10.29.00.33.29;	author art;	state Exp;
branches;
next	;

1.5.6.1
date	2003.06.07.11.02.30;	author ho;	state Exp;
branches;
next	;


desc
@@


1.7
log
@With deprecation of crypto(4) interface lofn(4) and nofn(4) become
obsolete.  No objections from the usual suspects.
@
text
@/*	$OpenBSD: nofnvar.h,v 1.6 2003/06/02 19:08:58 jason Exp $	*/

/*
 * Copyright (c) 2002 Jason L. Wright (jason@@thought.net)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
 *
 */

struct nofn_softc {
	struct device sc_dev;
	void *sc_ih;
	bus_space_handle_t sc_sh;
	bus_space_tag_t sc_st;
	bus_space_handle_t sc_pk_h;
	bus_space_tag_t sc_pk_t;
	bus_dma_tag_t sc_dmat;
	int32_t sc_cid;
	int sc_flags;
	int sc_rngskip, sc_rngtick;
	struct timeout sc_rngto;
	u_int32_t sc_intrmask, sc_revid;
	SIMPLEQ_HEAD(,nofn_pk_q) sc_pk_queue;
	struct nofn_pk_q *sc_pk_current;
	union nofn_pk_reg sc_pk_tmp, sc_pk_zero;
};

struct nofn_pk_q {
	SIMPLEQ_ENTRY(nofn_pk_q)	q_next;
	int (*q_start)(struct nofn_softc *, struct nofn_pk_q *);
	void (*q_finish)(struct nofn_softc *, struct nofn_pk_q *);
	struct cryptkop *q_krp;
};

#define	NOFN_FLAGS_RNG		0x01
#define	NOFN_FLAGS_PK		0x02

#define	REG_WRITE_4(sc,r,v) \
	bus_space_write_4((sc)->sc_st, (sc)->sc_sh, (r), (v))
#define	REG_READ_4(sc,r) \
	bus_space_read_4((sc)->sc_st, (sc)->sc_sh, (r))

#define	PK_WRITE_4(sc,r,v) \
	bus_space_write_4((sc)->sc_pk_t, (sc)->sc_pk_h, (r), (v))
#define	PK_READ_4(sc,r) \
	bus_space_read_4((sc)->sc_pk_t, (sc)->sc_pk_h, (r))

#ifndef PK_RNC_SCALER
#define PK_RNC_SCALER		0x00000700
#endif

/* C = M ^ E mod N */
#define	NOFN_MODEXP_PAR_M	0
#define	NOFN_MODEXP_PAR_E	1
#define	NOFN_MODEXP_PAR_N	2
@


1.6
log
@nuke clase 3 & 4
@
text
@d1 1
a1 1
/*	$OpenBSD: nofnvar.h,v 1.5 2002/09/24 18:33:26 jason Exp $	*/
@


1.5
log
@Don't use constants for the output parameter, use the iparam count as a pointer to the first result location.
@
text
@d1 1
a1 1
/*	$OpenBSD: nofnvar.h,v 1.4 2002/05/16 22:52:17 jason Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Jason L. Wright
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.5.6.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: nofnvar.h,v 1.5 2002/09/24 18:33:26 jason Exp $	*/
d15 5
@


1.4
log
@DARPA blurb
@
text
@d1 1
a1 1
/*	$OpenBSD: nofnvar.h,v 1.3 2002/05/15 21:33:22 jason Exp $	*/
a84 1
#define	NOFN_MODEXP_PAR_C	3
@


1.4.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.4.2.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: nofnvar.h,v 1.4.2.1 2002/06/11 03:42:26 art Exp $	*/
d85 1
@


1.3
log
@Driver for the Hifn 7814/7851/7854 HIPP1 processors; currently only supports
the public key engine (very much like the 6500, surprise) and the rng.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d32 5
@


1.2
log
@Remove nofn driver... it was much easier than I thought to support 7811
in the hifn7751 driver.
@
text
@d1 1
a1 1
/*	$OpenBSD: nofnvar.h,v 1.1 2002/01/07 23:16:38 jason Exp $	*/
d34 17
d52 5
a56 13
struct nofn_softc {
	struct device sc_dv;		/* us, as a device */
	void *sc_ih;			/* interrupt vectoring */
	bus_space_handle_t sc_sh0;	/* group 0 handle */
	bus_space_tag_t sc_st0;		/* group 0 tag */
	bus_space_handle_t sc_sh1;	/* group 1 handle */
	bus_space_tag_t sc_st1;		/* group 1 tag */
	bus_space_handle_t sc_sh2;	/* gpram handle */
	bus_space_tag_t sc_st2;		/* gpram tag */
	pci_chipset_tag_t sc_pci_pc;	/* pci config space */
	pcitag_t sc_pci_tag;		/* pci config space tag */
	struct timeout sc_rngto;	/* rng timeout */
	int sc_rnghz;			/* rng ticks */
d59 22
a80 8
#define	G0_READ_4(sc,reg) \
    bus_space_read_4((sc)->sc_st0, (sc)->sc_sh0, (reg))
#define	G0_WRITE_4(sc,reg, val) \
    bus_space_write_4((sc)->sc_st0, (sc)->sc_sh0, (reg), (val))
#define	G1_READ_4(sc,reg) \
    bus_space_read_4((sc)->sc_st1, (sc)->sc_sh1, (reg))
#define	G1_WRITE_4(sc,reg, val) \
    bus_space_write_4((sc)->sc_st1, (sc)->sc_sh1, (reg), (val))
@


1.1
log
@Enough of a driver for 7811 to poll the random number generator for bits
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@

