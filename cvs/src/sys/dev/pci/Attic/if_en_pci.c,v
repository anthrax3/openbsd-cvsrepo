head	1.13;
access;
symbols
	OPENBSD_4_5:1.11.0.14
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.12
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.10
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.8
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.6
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.4
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.10.0.14
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.12
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.10
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.8
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.6
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.10
	UBC:1.8.0.4
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.6.0.14
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.12
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.10
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.8
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.13
date	2009.04.15.06.54.44;	author oga;	state dead;
branches;
next	1.12;

1.12
date	2009.03.29.21.53.52;	author sthen;	state Exp;
branches;
next	1.11;

1.11
date	2005.09.11.18.17.08;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.19.18.46.41;	author fgsch;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.14.01.26.58;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.25.10.13.29;	author art;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2001.04.06.16.27.45;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	98.01.07.11.03.27;	author deraadt;	state Exp;
branches
	1.6.10.1;
next	1.5;

1.5
date	97.05.07.00.17.40;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	97.03.20.22.03.45;	author chuck;	state Exp;
branches;
next	1.3;

1.3
date	96.10.31.01.05.11;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.21.21.37.37;	author chuck;	state Exp;
branches;
next	1.1;

1.1
date	96.06.21.15.36.34;	author chuck;	state Exp;
branches;
next	;

1.6.10.1
date	2001.05.14.22.25.44;	author niklas;	state Exp;
branches;
next	1.6.10.2;

1.6.10.2
date	2001.10.31.03.22.45;	author nate;	state Exp;
branches;
next	1.6.10.3;

1.6.10.3
date	2002.03.28.15.35.57;	author niklas;	state Exp;
branches;
next	1.6.10.4;

1.6.10.4
date	2003.03.28.00.38.22;	author niklas;	state Exp;
branches;
next	;

1.8.4.1
date	2002.06.11.03.42.25;	author art;	state Exp;
branches;
next	1.8.4.2;

1.8.4.2
date	2002.10.29.00.33.28;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Remove en(4) (no manpage present, no none removed), and the midway.c glue code
for it.

It is very unlikely this still compiles, the hardware is dead. It isn't in any
arch's config file. the sparc sbus code is even commented out in files.sparc.

Not to mention that the code is fucking appauling, doesn't even know that sparc
got bus.h ages ago, still uses vtophys(), defines all types of functions to
arch-specific hacks.

I will miss the bitchy comments, though...

As a note to other drivers: this is the fate that awaits you if you screw up my
ctags on commonly used functions.

"you have my ok" claudio@@, "zap zap zap" deraadt@@

If i've missed any bits, please remove them.
@
text
@/*	$OpenBSD: if_en_pci.c,v 1.12 2009/03/29 21:53:52 sthen Exp $	*/

/*
 *
 * Copyright (c) 1996 Charles D. Cranor and Washington University.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Charles D. Cranor and
 *	Washington University.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *
 * i f _ e n _ p c i . c  
 *
 * author: Chuck Cranor <chuck@@ccrc.wustl.edu>
 * started: spring, 1996.
 *
 * PCI glue for the eni155p card.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/mbuf.h>
#include <sys/socket.h>
#include <sys/socketvar.h>

#include <net/if.h>

#include <dev/pci/pcivar.h>
#include <dev/pci/pcireg.h>
#include <dev/pci/pcidevs.h>

#include <dev/ic/midwayreg.h>
#include <dev/ic/midwayvar.h>


/*
 * local structures
 */

struct en_pci_softc {
  /* bus independent stuff */
  struct en_softc esc;		/* includes "device" structure */

  /* PCI bus glue */
  void *sc_ih;			/* interrupt handle */
  pci_chipset_tag_t en_pc;	/* for PCI calls */

};

/*
 * local defines (PCI specific stuff)
 */

/* 
 * address of config base memory address register in PCI config space
 * (this is card specific)
 */
        
#define PCI_CBMA        0x10

/*
 * tonga (pci bridge).   ENI cards only!
 */

#define EN_TONGA        0x60            /* PCI config addr of tonga reg */

#define TONGA_SWAP_DMA  0x80            /* endian swap control */
#define TONGA_SWAP_BYTE 0x40
#define TONGA_SWAP_WORD 0x20

/*
 * adaptec pci bridge.   ADP cards only!
 */

#define ADP_PCIREG	0x050040	/* PCI control register */

#define ADP_PCIREG_RESET	0x1	/* reset card */
#define ADP_PCIREG_IENABLE	0x2	/* interrupt enable */
#define ADP_PCIREG_SWAP_WORD	0x4	/* swap byte on slave access */
#define ADP_PCIREG_SWAP_DMA	0x8	/* swap bytes on DMA */

/*
 * prototypes
 */

static	int en_pci_match(struct device *, void *, void *);
static	void en_pci_attach(struct device *, struct device *, void *);

/*
 * PCI autoconfig attachments
 */

struct cfattach en_pci_ca = {
    sizeof(struct en_pci_softc), en_pci_match, en_pci_attach,
};

#if !defined(MIDWAY_ENIONLY)

static void adp_busreset(void *);

/*
 * bus specific reset function [ADP only!]
 */

static void adp_busreset(v)

void *v;

{
  struct en_softc *sc = (struct en_softc *) v;
  u_int32_t dummy;

  bus_space_write_4(sc->en_memt, sc->en_base, ADP_PCIREG, ADP_PCIREG_RESET);
  DELAY(1000);  /* let it reset */
  dummy = bus_space_read_4(sc->en_memt, sc->en_base, ADP_PCIREG);
  bus_space_write_4(sc->en_memt, sc->en_base, ADP_PCIREG, 
                (ADP_PCIREG_SWAP_WORD|ADP_PCIREG_SWAP_DMA|ADP_PCIREG_IENABLE));
  dummy = bus_space_read_4(sc->en_memt, sc->en_base, ADP_PCIREG);
  if ((dummy & (ADP_PCIREG_SWAP_WORD|ADP_PCIREG_SWAP_DMA)) !=
                (ADP_PCIREG_SWAP_WORD|ADP_PCIREG_SWAP_DMA))
    printf("adp_busreset: Adaptec ATM did NOT reset!\n");

}
#endif

/***********************************************************************/

/*
 * autoconfig stuff
 */

static int en_pci_match(parent, match, aux)

struct device *parent;
void *match;
void *aux;

{
  struct pci_attach_args *pa = (struct pci_attach_args *) aux;

#if !defined(MIDWAY_ADPONLY)
  if (PCI_VENDOR(pa->pa_id) == PCI_VENDOR_EFFICIENTNETS && 
      (PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_EFFICIENTNETS_ENI155PF ||
       PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_EFFICIENTNETS_ENI155PA))
    return 1;
#endif

#if !defined(MIDWAY_ENIONLY)
  if (PCI_VENDOR(pa->pa_id) == PCI_VENDOR_ADP && 
      (PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_ADP_AIC5900 ||
       PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_ADP_AIC5905))
    return 1;
#endif

  return 0;
}


static void en_pci_attach(parent, self, aux)

struct device *parent, *self;
void *aux;

{
  struct en_softc *sc = (void *)self;
  struct en_pci_softc *scp = (void *)self;
  struct pci_attach_args *pa = aux;
  pci_intr_handle_t ih;
  const char *intrstr;
  int retval;

  sc->is_adaptec = (PCI_VENDOR(pa->pa_id) == PCI_VENDOR_ADP) ? 1 : 0;
  scp->en_pc = pa->pa_pc;

  /*
   * interrupt map
   */

  if (pci_intr_map(pa, &ih)) {
    printf(": can't map interrupt\n");
    return;
  }
  intrstr = pci_intr_string(scp->en_pc, ih);
  scp->sc_ih = pci_intr_establish(scp->en_pc, ih, IPL_NET, en_intr, sc,
      sc->sc_dev.dv_xname);
  if (scp->sc_ih == NULL) {
    printf(": can't establish interrupt");
    if (intrstr != NULL)
      printf(" at %s", intrstr);
    printf("\n");
    return;
  }
  sc->ipl = 1; /* XXX */

  /*
   * memory map
   */

  retval = pci_mapreg_map(pa, PCI_CBMA, PCI_MAPREG_TYPE_MEM, 0,
    &sc->en_memt, &sc->en_base, NULL, &sc->en_obmemsz, 0);
 
  if (retval) {
    printf(": can't map mem space\n");
    return;
  }

  printf(": %s\n", intrstr);

  /*
   * set up pci bridge
   */

#if !defined(MIDWAY_ENIONLY)
  if (sc->is_adaptec) {
    sc->en_busreset = adp_busreset;
    adp_busreset(sc);
  }
#endif

#if !defined(MIDWAY_ADPONLY)
  if (!sc->is_adaptec) {
    sc->en_busreset = NULL;
    pci_conf_write(scp->en_pc, pa->pa_tag, EN_TONGA, 
		  (TONGA_SWAP_DMA|TONGA_SWAP_WORD));
  }
#endif

  /*
   * done PCI specific stuff
   */

  en_attach(sc);

}
@


1.12
log
@make various strings ("can't map mem space" and similar) more consistent
between instances, saving space in the kernel. feedback from many (some
incorporated, some left for future work).

ok deraadt, kettenis, "why not" miod.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.11 2005/09/11 18:17:08 mickey Exp $	*/
@


1.11
log
@do not inline pci_mapreg_map() anymore as it is olrite now; brad@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.10 2002/06/19 18:46:41 fgsch Exp $	*/
d206 1
a206 1
    printf(": couldn't map interrupt\n");
d213 1
a213 1
    printf(": couldn't establish interrupt");
d229 1
a229 1
    printf(": couldn't map memory\n");
@


1.10
log
@remove __BROKEN_INDIRECT_CONFIG cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.9 2002/03/14 01:26:58 millert Exp $	*/
a193 1
  bus_addr_t membase;
a197 1
  sc->en_memt = pa->pa_memt;
d225 2
a226 5
  retval = pci_mem_find(scp->en_pc, pa->pa_tag, PCI_CBMA,
				&membase, &sc->en_obmemsz, NULL);
  if (retval == 0)
    retval = bus_space_map(sc->en_memt, membase, sc->en_obmemsz, 0,
      &sc->en_base);
@


1.9
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.8 2001/08/25 10:13:29 art Exp $	*/
a111 1
#ifdef __BROKEN_INDIRECT_CONFIG
a112 3
#else
static	int en_pci_match(struct device *, struct cfdata *, void *);
#endif
a160 1
#ifdef __BROKEN_INDIRECT_CONFIG
a161 3
#else
struct cfdata *match;
#endif
@


1.8
log
@Change pci_intr_map to take pci_attach_args as an argument.
All callers actually took all arguments to pci_intr_map from pci_attach_args
structs, so this simplifies code.
This also allows more complicated interrupt assignment schemes like the one
on sparc64.

This makes sparc64 pci interrupts work.

Inspired by the same change in NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.7 2001/04/06 16:27:45 jason Exp $	*/
d113 1
a113 1
static	int en_pci_match __P((struct device *, void *, void *));
d115 1
a115 1
static	int en_pci_match __P((struct device *, struct cfdata *, void *));
d117 1
a117 1
static	void en_pci_attach __P((struct device *, struct device *, void *));
d129 1
a129 1
static void adp_busreset __P((void *));
@


1.8.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.8 2001/08/25 10:13:29 art Exp $	*/
d113 1
a113 1
static	int en_pci_match(struct device *, void *, void *);
d115 1
a115 1
static	int en_pci_match(struct device *, struct cfdata *, void *);
d117 1
a117 1
static	void en_pci_attach(struct device *, struct device *, void *);
d129 1
a129 1
static void adp_busreset(void *);
@


1.8.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.8.4.1 2002/06/11 03:42:25 art Exp $	*/
d112 1
d114 3
d165 1
d167 3
@


1.7
log
@typo in error message
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.6 1998/01/07 11:03:27 deraadt Exp $	*/
d215 1
a215 2
  if (pci_intr_map(scp->en_pc, pa->pa_intrtag, pa->pa_intrpin, 
					pa->pa_intrline, &ih)) {
@


1.6
log
@now this is really pretty
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.5 1997/05/07 00:17:40 niklas Exp $	*/
d224 1
a224 1
    printf(": couldn't establish interrupt\n");
@


1.6.10.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.7 2001/04/06 16:27:45 jason Exp $	*/
d224 1
a224 1
    printf(": couldn't establish interrupt");
@


1.6.10.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.6.10.1 2001/05/14 22:25:44 niklas Exp $	*/
d215 2
a216 1
  if (pci_intr_map(pa, &ih)) {
@


1.6.10.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d113 1
a113 1
static	int en_pci_match(struct device *, void *, void *);
d115 1
a115 1
static	int en_pci_match(struct device *, struct cfdata *, void *);
d117 1
a117 1
static	void en_pci_attach(struct device *, struct device *, void *);
d129 1
a129 1
static void adp_busreset(void *);
@


1.6.10.4
log
@Sync the SMP branch with 3.3
@
text
@d112 1
d114 3
d165 1
d167 3
@


1.5
log
@call pci_intr_establish correctly
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.4 1997/03/20 22:03:45 chuck Exp $	*/
a206 2
  printf("\n");

d217 1
a217 1
    printf("%s: couldn't map interrupt\n", sc->sc_dev.dv_xname);
d224 1
a224 1
    printf("%s: couldn't establish interrupt\n", sc->sc_dev.dv_xname);
a229 1
  printf("%s: interrupting at %s\n", sc->sc_dev.dv_xname, intrstr);
d243 1
a243 1
    printf("%s: couldn't map memory\n", sc->sc_dev.dv_xname);
d246 2
@


1.4
log
@update for adaptec support
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.7 1997/03/20 21:30:46 chuck Exp $	*/
d223 2
a224 1
  scp->sc_ih = pci_intr_establish(scp->en_pc, ih, IPL_NET, en_intr, sc);
@


1.3
log
@-Wall fixes needed by alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.2 1996/06/21 21:37:37 chuck Exp $	*/
d46 1
a46 1
#include <sys/types.h>
a50 1
#include <sys/systm.h>
d88 1
a88 1
 * tonga (pci bridge)
d98 11
d112 1
d114 3
d127 29
d165 1
d167 3
d175 6
a180 2
  if (PCI_VENDOR(pa->pa_id) != PCI_VENDOR_EFFICIENTNETS)
    return 0;
d182 4
a185 1
  if (PCI_PRODUCT(pa->pa_id) == PCI_PRODUCT_EFFICIENTNETS_ENI155P)
d187 1
d202 1
a202 1
  bus_mem_addr_t membase;
d209 2
a210 1
  sc->en_bc = pa->pa_bc;
d223 1
a223 2
  scp->sc_ih = pci_intr_establish(scp->en_pc, ih, IPL_NET, en_intr, sc,
      sc->sc_dev.dv_xname);
d241 2
a242 1
    retval = bus_mem_map(sc->en_bc, membase, sc->en_obmemsz, 0, &sc->en_base);
d250 1
a250 1
   * set up swapping
d253 14
a266 2
  pci_conf_write(scp->en_pc, pa->pa_tag, EN_TONGA, 
		(TONGA_SWAP_DMA|TONGA_SWAP_WORD));
@


1.2
log
@use correct copyright
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_pci.c,v 1.1 1996/06/21 15:36:34 chuck Exp $	*/
d51 1
d167 2
a168 1
  scp->sc_ih = pci_intr_establish(scp->en_pc, ih, IPL_NET, en_intr, sc);
@


1.1
log
@PCI glue for the en ATM device.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d5 1
a5 1
 * Copyright (c) 1996 Charles D. Cranor
d18 2
a19 1
 *      This product includes software developed by Charles D. Cranor.
@
