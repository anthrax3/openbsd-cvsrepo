head	1.7;
access;
symbols
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.10
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.8
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.6
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.5.0.4
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	SMP:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.2;
locks; strict;
comment	@ * @;


1.7
date	2008.05.07.02.46.39;	author krw;	state dead;
branches;
next	1.6;

1.6
date	2003.06.07.11.31.24;	author ho;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.21.19.41.13;	author ho;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.25.22.30.08;	author ho;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.24.21.08.06;	author ho;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.04.13.07.20;	author ho;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.29.08.45.58;	author ho;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.05.14.22.25.50;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2001.07.04.10.42.37;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2001.10.31.03.22.46;	author nate;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2004.02.19.10.56.27;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Rather than fixing ises(4), nuke it.

ok deraadt@@
@
text
@/*	$OpenBSD: isesvar.h,v 1.6 2003/06/07 11:31:24 ho Exp $	*/

/*
 * Copyright (c) 2000 Håkan Olsson (ho@@crt.se)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

struct ises_softc {
	struct device		sc_dv;		/* generic device */
	void			*sc_ih;		/* interrupt handler cookie */
	bus_space_handle_t	sc_memh;	/* memory handle */
	bus_space_tag_t		sc_memt;	/* memory tag */
	bus_dma_tag_t		sc_dmat;	/* dma tag */
	bus_dmamap_t		sc_dmamap;	/* dma xfer map */
	caddr_t			sc_dma_data;	/* data area */

	int32_t			sc_cid;		/* crypto tag */
	u_int32_t		sc_intrmask;	/* interrupt mask */
	u_int32_t		sc_dma_mask;	/* DMA running mask */
	SIMPLEQ_HEAD(,ises_q)	sc_queue;	/* packet queue */
	int			sc_nqueue;	/* count enqueued */
	SIMPLEQ_HEAD(,ises_q)	sc_qchip;	/* on chip */
	struct timeout		sc_timeout;	/* init + hrng timeout */
	int			sc_nsessions;	/* nr of sessions */
	struct ises_session	*sc_sessions;	/* sessions */
	int			sc_cursession;	/* current session */
	int			sc_switching;	/* we're switching sessions */
	int			sc_initstate;	/* card initialization state */

	SIMPLEQ_HEAD(,ises_cmd) sc_cmdq;	/* Commands in A-queue */
	u_int32_t		sc_lnau1_r[64];	/* LNAU 1 result (2048 bits) */
	int			sc_lnau1_rlen;	/* LNAU 1 result len (bytes) */
	u_int32_t		sc_lnau2_r[64];	/* LNAU 2 result (2048 bits) */
	int			sc_lnau2_rlen;	/* LNAU 2 result len (bytes) */
};

union ises_q_u {
	struct mbuf		*mbuf;
	struct uio		*uio;
	/* XXX more ? */
};

#define ISES_MAX_SCATTER	64

struct ises_q {
	SIMPLEQ_ENTRY(ises_q)	q_next;
	struct cryptop		*q_crp;
	struct ises_softc	*q_sc;

	union ises_q_u		q_src, q_dst;	/* src/dst data bufs */

	bus_dma_segment_t	q_src_ds, q_dst_ds;

	struct ises_session	q_session;
	u_int16_t		q_offset;	/* crypto offset */
	int			q_sesn;

#if 0
	long			q_src_packp[ISES_MAX_SCATTER];
	int			q_src_packl[ISES_MAX_SCATTER];
	int			q_src_npa, q_src_l;
#endif

	long			q_dst_packp;
	int			q_dst_packl;
	int			q_dst_npa, q_dst_l;
	u_int32_t		q_macbuf[5];
};

struct ises_cmd {
	SIMPLEQ_ENTRY(ises_cmd)	cmd_next;
	u_int32_t		cmd_code;	/* Command code */
	u_int32_t		cmd_rlen;	/* Response length */
	u_int32_t		cmd_session;	/* Current ises_session */
	u_int32_t		(*cmd_cb)(struct ises_softc *, 
					  struct ises_cmd *); /* Callback */
};

/* Maximum queue length */
#ifndef ISES_MAX_NQUEUE
#define ISES_MAX_NQUEUE		24
#endif
@


1.6
log
@Remove clause 3.
@
text
@d1 1
a1 1
/*	$OpenBSD: isesvar.h,v 1.5 2001/09/21 19:41:13 ho Exp $	*/
@


1.5
log
@Not yet working, but getting a bit closer.
@
text
@d1 1
a1 1
/*	$OpenBSD: isesvar.h,v 1.4 2001/06/25 22:30:08 ho Exp $	*/
a14 2
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.4
log
@Cleanup/rewrite. Some further work. No crypto yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: isesvar.h,v 1.3 2001/06/24 21:08:06 ho Exp $	*/
d65 2
d79 4
a82 1
	
d84 1
@


1.3
log
@Some cleanup.
@
text
@d1 1
a1 1
/*	$OpenBSD: isesvar.h,v 1.2 2001/06/04 13:07:20 ho Exp $	*/
d37 1
a37 1
	struct ises_databuf     sc_dma_data;	/* data area */
d41 1
d48 2
a52 1
	struct ises_bchu_session sc_bsession;	/* Current BCHU session */
d59 6
d70 3
a72 2
	struct mbuf 		*q_src_m, *q_dst_m;
	bus_dma_segment_t	q_srcpkt, q_dstpkt;
d74 1
a74 4
	struct ises_bchu_session q_bsession;
	u_int32_t		q_hminner[5];	/* hmac inner state */
	u_int32_t		q_hmouter[5];	/* hmac outer state */
	u_int32_t		q_paddr;
a75 1
	u_int8_t		q_pad[16];
a77 2
	long			q_src_packp;
	int			q_src_packl;
d90 1
a92 8
};

struct ises_session {
	u_int32_t    ses_used;
	u_int32_t    ses_deskey[6];		/* 3DES key */
	u_int32_t    ses_hminner[5];		/* hmac inner state */
	u_int32_t    ses_hmouter[5];		/* hmac outer state */
	u_int32_t    ses_iv[2];			/* DES/3DES iv */
@


1.2
log
@Some further work. No crypto yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: isesvar.h,v 1.1 2001/01/29 08:45:58 ho Exp $	*/
d36 3
a38 3
	bus_dmamap_t		sc_dmamap_xfer; /* dma xfer map */
	struct ises_databuf     sc_dmamap;      /* data area */
	bus_addr_t		sc_dmamap_phys; /* bus address of data area */
d63 1
a63 1
	struct ises_pktbuf	q_srcpkt, q_dstpkt;
@


1.1
log
@Driver for the Pijnenburg PCC-ISES crypto chip. For now, it only generates
random data for the system entropy pool. No crypto yet.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d31 1
a31 1
	struct	device		sc_dv;		/* generic device */
a40 1
	u_int32_t		sc_omr;		/* OMR */
d48 7
d60 1
a60 3
	struct ises_pktbuf	q_srcpkt;
	struct ises_pktbuf	q_dstpkt;
	struct ises_pktctx	q_ctx;
a61 1
	struct ises_softc	*q_sc;
d63 1
d65 6
d72 1
d83 8
d92 5
a96 5
       u_int32_t    ses_used;
       u_int32_t    ses_deskey[6];		/* 3DES key */
       u_int32_t    ses_hminner[5];		/* hmac inner state */
       u_int32_t    ses_hmouter[5];		/* hmac outer state */
       u_int32_t    ses_iv[2];			/* DES/3DES iv */
@


1.1.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: isesvar.h,v 1.1 2001/01/29 08:45:58 ho Exp $	*/
@


1.1.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: isesvar.h,v 1.1.4.1 2001/05/14 22:25:50 niklas Exp $	*/
d31 1
a31 1
	struct device		sc_dv;		/* generic device */
d36 3
a38 3
	bus_dmamap_t		sc_dmamap;	/* dma xfer map */
	caddr_t			sc_dma_data;	/* data area */

d41 1
a41 1
	u_int32_t		sc_dma_mask;	/* DMA running mask */
a47 2
	int			sc_cursession;	/* current session */
	int			sc_switching;	/* we're switching sessions */
a48 12

	SIMPLEQ_HEAD(,ises_cmd) sc_cmdq;	/* Commands in A-queue */
	u_int32_t		sc_lnau1_r[64];	/* LNAU 1 result (2048 bits) */
	int			sc_lnau1_rlen;	/* LNAU 1 result len (bytes) */
	u_int32_t		sc_lnau2_r[64];	/* LNAU 2 result (2048 bits) */
	int			sc_lnau2_rlen;	/* LNAU 2 result len (bytes) */
};

union ises_q_u {
	struct mbuf		*mbuf;
	struct uio		*uio;
	/* XXX more ? */
d54 4
d59 1
a60 6
	union ises_q_u		q_src, q_dst;	/* src/dst data bufs */

	bus_dma_segment_t	q_src_ds, q_dst_ds;

	struct ises_session	q_session;
	u_int16_t		q_offset;	/* crypto offset */
d62 2
a63 1
	
d72 6
a77 7
struct ises_cmd {
	SIMPLEQ_ENTRY(ises_cmd)	cmd_next;
	u_int32_t		cmd_code;	/* Command code */
	u_int32_t		cmd_rlen;	/* Response length */
	u_int32_t		cmd_session;	/* Current ises_session */
	u_int32_t		(*cmd_cb)(struct ises_softc *, 
					  struct ises_cmd *); /* Callback */
@


1.1.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: isesvar.h,v 1.1.4.2 2001/07/04 10:42:37 niklas Exp $	*/
a64 2
#define ISES_MAX_SCATTER	64

d77 1
a77 4

#if 0
	long			q_src_packp[ISES_MAX_SCATTER];
	int			q_src_packl[ISES_MAX_SCATTER];
a78 1
#endif
@


1.1.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d15 2
@


