head	1.13;
access;
symbols
	OPENBSD_3_7:1.12.0.14
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.12
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.10
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.8
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.12
	UBC:1.11.0.2
	UBC_BASE:1.11
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.7.0.4
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.2
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3;
locks; strict;
comment	@ * @;


1.13
date	2005.05.10.01.37.31;	author brad;	state dead;
branches;
next	1.12;

1.12
date	2002.03.14.03.16.06;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.19.19.22.43;	author deraadt;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2001.06.23.21.54.54;	author fgsch;	state Exp;
branches;
next	1.9;

1.9
date	2001.02.23.22.59.09;	author jason;	state Exp;
branches;
next	1.8;

1.8
date	2000.10.17.15.47.12;	author jason;	state Exp;
branches;
next	1.7;

1.7
date	99.11.17.05.21.19;	author jason;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	99.06.29.17.13.40;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	99.03.16.04.26.39;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	99.03.10.20.04.15;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	98.10.10.04.30.09;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	98.09.22.21.54.55;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	98.09.21.05.24.55;	author jason;	state Exp;
branches;
next	;

1.7.2.1
date	2001.05.14.22.25.48;	author niklas;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2001.07.04.10.42.28;	author niklas;	state Exp;
branches;
next	1.7.2.3;

1.7.2.3
date	2001.12.05.00.43.30;	author niklas;	state Exp;
branches;
next	1.7.2.4;

1.7.2.4
date	2002.03.28.15.35.57;	author niklas;	state Exp;
branches;
next	;

1.11.2.1
date	2002.06.11.03.42.26;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@put this in the Attic
@
text
@/*	$OpenBSD: if_txvar.h,v 1.12 2002/03/14 03:16:06 millert Exp $	*/
/* $FreeBSD: src/sys/pci/if_txvar.h,v 1.8 2001/02/07 20:11:02 semenu Exp $ */

/*-
 * Copyright (c) 1997 Semen Ustimenko
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Configuration
 */
/*#define	EPIC_DEBUG	1*/
/*#define	EPIC_USEIOSPACE	1*/
#define	EARLY_RX	1

#define TX_RING_SIZE		16		/* Leave this a power of 2 */
#define RX_RING_SIZE		16		/* And this too, to do not */
						/* confuse RX(TX)_RING_MASK */
#define TX_RING_MASK		(TX_RING_SIZE - 1)
#define RX_RING_MASK		(RX_RING_SIZE - 1)
#define ETHER_MAX_FRAME_LEN	(ETHER_MAX_LEN + ETHER_CRC_LEN)

/* PCI aux configuration registers */
#if defined(__FreeBSD__)
#define	PCIR_BASEIO	(PCIR_MAPS + 0x0)	/* Base IO Address */
#define	PCIR_BASEMEM	(PCIR_MAPS + 0x4)	/* Base Memory Address */
#else /* __OpenBSD__ */
#define	PCI_BASEIO	(PCI_MAPS + 0x0)	/* Base IO Address */
#define	PCI_BASEMEM	(PCI_MAPS + 0x4)	/* Base Memory Address */
#endif /* __FreeBSD__ */

/* PCI identification */
#define SMC_VENDORID		0x10B8
#define SMC_DEVICEID_83C170	0x0005

/* EPIC's registers */
#define	COMMAND		0x0000
#define	INTSTAT		0x0004		/* Interrupt status. See below */
#define	INTMASK		0x0008		/* Interrupt mask. See below */
#define	GENCTL		0x000C
#define	NVCTL		0x0010
#define	EECTL		0x0014		/* EEPROM control **/
#define	TEST1		0x001C		/* XXXXX */
#define	CRCCNT		0x0020		/* CRC error counter */
#define	ALICNT		0x0024		/* FrameTooLang error counter */
#define	MPCNT		0x0028		/* MissedFrames error counters */
#define	MIICTL		0x0030
#define	MIIDATA		0x0034
#define	MIICFG		0x0038
#define IPG		0x003C
#define	LAN0		0x0040		/* MAC address */
#define	LAN1		0x0044		/* MAC address */
#define	LAN2		0x0048		/* MAC address */
#define	ID_CHK		0x004C
#define	MC0		0x0050		/* Multicast filter table */
#define	MC1		0x0054		/* Multicast filter table */
#define	MC2		0x0058		/* Multicast filter table */
#define	MC3		0x005C		/* Multicast filter table */
#define	RXCON		0x0060		/* Rx control register */
#define	TXCON		0x0070		/* Tx control register */
#define	TXSTAT		0x0074
#define	PRCDAR		0x0084		/* RxRing bus address */
#define	PRSTAT		0x00A4
#define	PRCPTHR		0x00B0
#define	PTCDAR		0x00C4		/* TxRing bus address */
#define	ETXTHR		0x00DC

#define	COMMAND_STOP_RX		0x01
#define	COMMAND_START_RX	0x02
#define	COMMAND_TXQUEUED	0x04
#define	COMMAND_RXQUEUED	0x08
#define	COMMAND_NEXTFRAME	0x10
#define	COMMAND_STOP_TDMA	0x20
#define	COMMAND_STOP_RDMA	0x40
#define	COMMAND_TXUGO		0x80

/* Interrupt register bits */
#define INTSTAT_RCC	0x00000001
#define INTSTAT_HCC	0x00000002
#define INTSTAT_RQE	0x00000004
#define INTSTAT_OVW	0x00000008	
#define INTSTAT_RXE	0x00000010	
#define INTSTAT_TXC	0x00000020
#define INTSTAT_TCC	0x00000040	
#define INTSTAT_TQE	0x00000080	
#define INTSTAT_TXU	0x00000100
#define INTSTAT_CNT	0x00000200
#define INTSTAT_PREI	0x00000400
#define INTSTAT_RCT	0x00000800	
#define INTSTAT_FATAL	0x00001000	/* One of DPE,APE,PMA,PTA happend */	
#define INTSTAT_UNUSED1	0x00002000
#define INTSTAT_UNUSED2	0x00004000	
#define INTSTAT_GP2	0x00008000	/* PHY Event */	
#define INTSTAT_INT_ACTV 0x00010000
#define INTSTAT_RXIDLE	0x00020000
#define INTSTAT_TXIDLE	0x00040000
#define INTSTAT_RCIP	0x00080000	
#define INTSTAT_TCIP	0x00100000	
#define INTSTAT_RBE	0x00200000
#define INTSTAT_RCTS	0x00400000	
#define	INTSTAT_RSV	0x00800000
#define	INTSTAT_DPE	0x01000000	/* PCI Fatal error */
#define	INTSTAT_APE	0x02000000	/* PCI Fatal error */
#define	INTSTAT_PMA	0x04000000	/* PCI Fatal error */
#define	INTSTAT_PTA	0x08000000	/* PCI Fatal error */

#define	GENCTL_SOFT_RESET		0x00000001
#define	GENCTL_ENABLE_INTERRUPT		0x00000002
#define	GENCTL_SOFTWARE_INTERRUPT	0x00000004
#define	GENCTL_POWER_DOWN		0x00000008
#define	GENCTL_ONECOPY			0x00000010
#define	GENCTL_BIG_ENDIAN		0x00000020
#define	GENCTL_RECEIVE_DMA_PRIORITY	0x00000040
#define	GENCTL_TRANSMIT_DMA_PRIORITY	0x00000080
#define	GENCTL_RECEIVE_FIFO_THRESHOLD128	0x00000300
#define	GENCTL_RECEIVE_FIFO_THRESHOLD96	0x00000200
#define	GENCTL_RECEIVE_FIFO_THRESHOLD64	0x00000100
#define	GENCTL_RECEIVE_FIFO_THRESHOLD32	0x00000000
#define	GENCTL_MEMORY_READ_LINE		0x00000400
#define	GENCTL_MEMORY_READ_MULTIPLE	0x00000800
#define	GENCTL_SOFTWARE1		0x00001000
#define	GENCTL_SOFTWARE2		0x00002000
#define	GENCTL_RESET_PHY		0x00004000

#define	NVCTL_ENABLE_MEMORY_MAP		0x00000001
#define	NVCTL_CLOCK_RUN_SUPPORTED	0x00000002
#define	NVCTL_GP1_OUTPUT_ENABLE		0x00000004
#define	NVCTL_GP2_OUTPUT_ENABLE		0x00000008
#define	NVCTL_GP1			0x00000010
#define	NVCTL_GP2			0x00000020
#define	NVCTL_CARDBUS_MODE		0x00000040
#define	NVCTL_IPG_DELAY_MASK(x)		((x&0xF)<<7)

#define	RXCON_SAVE_ERRORED_PACKETS	0x00000001
#define	RXCON_RECEIVE_RUNT_FRAMES	0x00000002
#define	RXCON_RECEIVE_BROADCAST_FRAMES	0x00000004
#define	RXCON_RECEIVE_MULTICAST_FRAMES	0x00000008
#define	RXCON_RECEIVE_INVERSE_INDIVIDUAL_ADDRESS_FRAMES	0x00000010
#define	RXCON_PROMISCUOUS_MODE		0x00000020
#define	RXCON_MONITOR_MODE		0x00000040
#define	RXCON_EARLY_RECEIVE_ENABLE	0x00000080
#define	RXCON_EXTERNAL_BUFFER_DISABLE	0x00000000
#define	RXCON_EXTERNAL_BUFFER_16K	0x00000100
#define	RXCON_EXTERNAL_BUFFER_32K	0x00000200
#define	RXCON_EXTERNAL_BUFFER_128K	0x00000300

#define TXCON_EARLY_TRANSMIT_ENABLE	0x00000001
#define TXCON_LOOPBACK_DISABLE		0x00000000
#define TXCON_LOOPBACK_MODE_INT		0x00000002
#define TXCON_LOOPBACK_MODE_PHY		0x00000004
#define TXCON_LOOPBACK_MODE		0x00000006
#define TXCON_FULL_DUPLEX		0x00000006
#define TXCON_SLOT_TIME			0x00000078

#define	MIICFG_SERIAL_ENABLE		0x00000001
#define	MIICFG_694_ENABLE		0x00000002
#define	MIICFG_694_STATUS		0x00000004
#define	MIICFG_PHY_PRESENT		0x00000008
#define	MIICFG_SMI_ENABLE		0x00000010

#define	TEST1_CLOCK_TEST		0x00000008

/*
 * Some default values
 */
#define TXCON_DEFAULT		(TXCON_SLOT_TIME | TXCON_EARLY_TRANSMIT_ENABLE)
#define TRANSMIT_THRESHOLD	0x300

#if defined(EARLY_RX)
#define RXCON_EARLY		(RXCON_EARLY_RECEIVE_ENABLE | \
				 RXCON_SAVE_ERRORED_PACKETS)
#else
#define RXCON_EARLY		(0)
#endif

#define	RXCON_DEFAULT		(RXCON_EARLY | \
				 RXCON_RECEIVE_MULTICAST_FRAMES | \
				 RXCON_RECEIVE_BROADCAST_FRAMES)

/*
 * Structures definition and Functions prototypes
 */

/* EPIC's hardware descriptors, must be aligned on dword in memory */
/* NB: to make driver happy, this two structures MUST have thier sizes */
/* be divisor of PAGE_SIZE */
struct epic_tx_desc {
	volatile u_int16_t	status;
	volatile u_int16_t	txlength;
	volatile u_int32_t	bufaddr;
	volatile u_int16_t	buflength;
	volatile u_int16_t	control;
	volatile u_int32_t	next;
};
struct epic_rx_desc {
	volatile u_int16_t	status;
	volatile u_int16_t	rxlength;
	volatile u_int32_t	bufaddr;
	volatile u_int32_t	buflength;
	volatile u_int32_t	next;
};

/* This structure defines EPIC's fragment list, maximum number of frags */
/* is 63. Let use maximum, becouse size of struct MUST be divisor of */
/* PAGE_SIZE, and sometimes come mbufs with more than 30 frags */
#define EPIC_MAX_FRAGS 63
struct epic_frag_list {
	volatile u_int32_t		numfrags;
	struct {
		volatile u_int32_t	fragaddr;
		volatile u_int32_t	fraglen;
	} frag[EPIC_MAX_FRAGS]; 
	volatile u_int32_t		pad;		/* align on 256 bytes */
};

/* This is driver's structure to define EPIC descriptors */
struct epic_rx_buffer {
	struct mbuf *		mbuf;		/* mbuf receiving packet */
};

struct epic_tx_buffer {
	struct mbuf *		mbuf;		/* mbuf contained packet */
};

/*
 * NB: ALIGN OF ABOVE STRUCTURES
 * epic_rx_desc, epic_tx_desc, epic_frag_list - must be aligned on dword
 */

/* PHY, known by tx driver */
#define	EPIC_UNKN_PHY		0x0000
#define	EPIC_QS6612_PHY		0x0001
#define	EPIC_AC101_PHY		0x0002
#define	EPIC_LXT970_PHY		0x0003
#define	EPIC_SERIAL		0x0004

#define	SMC9432DMT		0xA010
#define	SMC9432TX		0xA011
#define	SMC9032TXM		0xA012
#define	SMC9032TX		0xA013
#define	SMC9432TXPWR		0xA014
#define	SMC9432BTX		0xA015
#define	SMC9432FTX		0xA016
#define	SMC9432FTX_SC		0xA017
#define	SMC9432TX_XG_ADHOC	0xA020
#define	SMC9434TX_XG_ADHOC	0xA021
#define	SMC9432FTX_ADHOC	0xA022
#define	SMC9432BTX1		0xA024

/* Driver status structure */
typedef struct {
#if defined(__OpenBSD__)
	struct device		dev;
	struct arpcom		arpcom;
	mii_data_t		miibus;
	struct timeout		sc_tmo;
#else /* __FreeBSD__ */
	struct resource		*res;
	struct resource		*irq;

	device_t		miibus;
	device_t		dev;
	struct callout_handle	stat_ch;

	u_int32_t		unit;
#endif
	void			*sc_ih;
	bus_space_tag_t		sc_st;
	bus_space_handle_t	sc_sh;

	struct epic_rx_buffer	rx_buffer[RX_RING_SIZE];
	struct epic_tx_buffer	tx_buffer[TX_RING_SIZE];

	/* Each element of array MUST be aligned on dword  */
	/* and bounded on PAGE_SIZE 			   */
	struct epic_rx_desc	*rx_desc;
	struct epic_tx_desc	*tx_desc;
	struct epic_frag_list	*tx_flist;
	u_int32_t		flags;
	u_int32_t		tx_threshold;
	u_int32_t		txcon;
	u_int32_t		miicfg;
	u_int32_t		cur_tx;
	u_int32_t		cur_rx;
	u_int32_t		dirty_tx;
	u_int32_t		pending_txs;
	u_int16_t		cardvend;
	u_int16_t		cardid;
	struct mii_softc 	*physc;
	u_int32_t		phyid;
	int			serinst;
	void 			*pool;
} epic_softc_t;

struct epic_type {
	u_int16_t	ven_id;
	u_int16_t	dev_id;
	char		*name;
};

#if defined(EPIC_DEBUG)
#define dprintf(a) printf a
#else
#define dprintf(a)
#endif

#if defined(__FreeBSD__)
#define EPIC_FORMAT	"tx%d"
#define EPIC_ARGS(sc)	(sc->unit)
#define EPIC_BPFTAP_ARG(ifp)    ifp
#else /* __OpenBSD__ */
#define EPIC_FORMAT	"%s"
#define EPIC_ARGS(sc)	(sc->dev.dv_xname)
#define EPIC_BPFTAP_ARG(ifp)	(ifp)->if_bpf
#endif

#define sc_if arpcom.ac_if
#define sc_macaddr arpcom.ac_enaddr

#define CSR_WRITE_4(sc,reg,val) 					\
	bus_space_write_4( (sc)->sc_st, (sc)->sc_sh, (reg), (val) )
#define CSR_WRITE_2(sc,reg,val) 					\
	bus_space_write_2( (sc)->sc_st, (sc)->sc_sh, (reg), (val) )
#define CSR_WRITE_1(sc,reg,val) 					\
	bus_space_write_1( (sc)->sc_st, (sc)->sc_sh, (reg), (val) )
#define CSR_READ_4(sc,reg) 						\
	bus_space_read_4( (sc)->sc_st, (sc)->sc_sh, (reg) )
#define CSR_READ_2(sc,reg) 						\
	bus_space_read_2( (sc)->sc_st, (sc)->sc_sh, (reg) )
#define CSR_READ_1(sc,reg) 						\
	bus_space_read_1( (sc)->sc_st, (sc)->sc_sh, (reg) )

#define	PHY_READ_2(sc,phy,reg)						\
	epic_read_phy_reg((sc),(phy),(reg))
#define	PHY_WRITE_2(sc,phy,reg,val)					\
	epic_write_phy_reg((sc),(phy),(reg),(val))

/* Macro to get either mbuf cluster or nothing */
#define EPIC_MGETCLUSTER(m)						\
	{ MGETHDR((m),M_DONTWAIT,MT_DATA);				\
	  if (m) {							\
	    MCLGET((m),M_DONTWAIT);					\
	    if( NULL == ((m)->m_flags & M_EXT) ) {			\
	      m_freem(m);						\
	      (m) = NULL;						\
	    }								\
	  }								\
	}
/*
 * Platform Independant Field Accessors
 */
#if defined(__OpenBSD__)

#define epic_dev(sc)		(*sc)
#define epic_dev_ptr(sc)	(void *)(sc)

#define epic_mii(sc)		(sc->miibus)
#define epic_mii_ptr(sc)	(&sc->miibus)	

#else

#define epic_dev(dev)		(*(device_get_softc(dev))
#define epic_dev_ptr(dev)	(device_get_softc(dev))

#define	epic_mii(sc)		(*(device_get_softc(sc->miibus))
#define epic_mii_ptr(sc)	(device_get_softc(sc->miibus))

#endif

@


1.12
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: if_txvar.h,v 1.11 2001/11/19 19:22:43 deraadt Exp $	*/
@


1.11
log
@more than typo
@
text
@d1 1
a1 1
/*	$OpenBSD: if_txvar.h,v 1.10 2001/06/23 21:54:54 fgsch Exp $	*/
d376 1
a376 1
#define epic_dev_ptr(sc)	(void*)(sc)
@


1.11.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_txvar.h,v 1.11 2001/11/19 19:22:43 deraadt Exp $	*/
d376 1
a376 1
#define epic_dev_ptr(sc)	(void *)(sc)
@


1.10
log
@Remove repeated ethernet constants; use if_ether.h for it instead.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_txvar.h,v 1.9 2001/02/23 22:59:09 jason Exp $	*/
d226 1
a226 1
/* PAGE_SIZE, and sometimes come mbufs with more then 30 frags */
@


1.9
log
@Merge with FreeBSD:
more portable between fbsd and obsd
real mii support
prefer memory mapped registers (if configuration supports it)
@
text
@d1 1
a1 1
/*	$OpenBSD: if_txvar.h,v 1.8 2000/10/17 15:47:12 jason Exp $	*/
a36 9
#ifndef ETHER_MAX_LEN
#define ETHER_MAX_LEN		1518
#endif
#ifndef ETHER_MIN_LEN
#define ETHER_MIN_LEN		64
#endif
#ifndef ETHER_CRC_LEN
#define ETHER_CRC_LEN		4
#endif
@


1.8
log
@update tx from freebsd sources based on patch from pr#1405
(dadams@@sleethal.com), but local changes preserved and ifmedia ioctls
fixed; deraadt/aaron ok
@
text
@d1 2
a2 2
/*	$OpenBSD: if_txvar.h,v 1.7 1999/11/17 05:21:19 jason Exp $	*/
/* $FreeBSD: src/sys/pci/if_txvar.h,v 1.7 2000/06/21 19:19:49 semenu Exp $ */
d260 19
a278 4
/*
 * Driver status structure
 * There are macros to handle the access of Free|Open specific fields.
 */
d280 1
a283 1

a284 1

d286 1
d312 1
a312 1
	u_int32_t		phyid;
d317 5
@


1.7
log
@merge with freebsd:
o make sure busmaster/io/mem bits are set appropriately
o make sure the card powers up correctly
@
text
@d1 2
a2 2
/*	$OpenBSD: if_txvar.h,v 1.6 1999/06/29 17:13:40 jason Exp $	*/
/* $FreeBSD: src/sys/pci/if_txvar.h,v 1.5 1999/10/29 09:56:52 semenu Exp $ */
d33 4
a50 2
#define EPIC_FULL_DUPLEX	1
#define EPIC_HALF_DUPLEX	0
d52 9
a60 1
#define	EPIC_LINK_DOWN		0x00000001
d64 1
a64 20
#define CHIPID_83C170		0x0005
#define	PCI_VENDORID(x)		((x) & 0xFFFF)
#define	PCI_CHIPID(x)		(((x) >> 16) & 0xFFFF)

/* PCI configuration */
#define	PCI_CFID	0x00	/* Configuration ID */
#define	PCI_CFCS	0x04	/* Configurtion Command/Status */
#define	PCI_CFRV	0x08	/* Configuration Revision */
#define	PCI_CFLT	0x0c	/* Configuration Latency Timer */
#define	PCI_CBIO	0x10	/* Configuration Base IO Address */
#define	PCI_CBMA	0x14	/* Configuration Base Memory Address */
#define	PCI_CFIT	0x3c	/* Configuration Interrupt */
#define	PCI_CFDA	0x40	/* Configuration Driver Area */

#define	PCI_CFCS_IOEN	0x0001	/* IO Space Enable */
#define	PCI_CFCS_MAEN	0x0002	/* Memory Space Enable */
#define	PCI_CFCS_BMEN	0x0004	/* Bus Master Enable */

#define	PCI_CONF_WRITE(r, v)	pci_conf_write(config_id, (r), (v))
#define	PCI_CONF_READ(r)	pci_conf_read(config_id, (r))
a106 3
/* Tx threshold */
#define TX_FIFO_THRESH	0x80		/* 0x40 or 0x10 */

d185 4
d193 3
d197 1
a197 1
#define TRANSMIT_THRESHOLD	0x80
d200 2
a201 1
 #define RXCON_DEFAULT		(RXCON_EARLY_RECEIVE_ENABLE | RXCON_SAVE_ERRORED_PACKETS)
d203 1
a203 1
 #define RXCON_DEFAULT		(0)
a204 42
/*
 * National Semiconductor's DP83840A Registers and bits
 */
#define	DP83840_OUI	0x080017
#define DP83840_BMCR	0x00	/* Control register */
#define DP83840_BMSR	0x01	/* Status rgister */
#define	DP83840_ANAR	0x04	/* Autonegotiation advertising register */
#define	DP83840_LPAR	0x05	/* Link Partner Ability register */
#define DP83840_ANER	0x06	/* Auto-Negotiation Expansion Register */
#define DP83840_PAR	0x19	/* PHY Address Register */
#define	DP83840_PHYIDR1	0x02
#define	DP83840_PHYIDR2	0x03

#define BMCR_RESET		0x8000
#define	BMCR_LOOPBACK		0x4000
#define BMCR_100MBPS		0x2000	/* 10/100 Mbps */
#define BMCR_AUTONEGOTIATION	0x1000	/* ON/OFF */
#define	BMCR_POWERDOWN		0x0800
#define	BMCR_ISOLATE		0x0400
#define BMCR_RESTART_AUTONEG	0x0200
#define	BMCR_FULL_DUPLEX	0x0100
#define	BMCR_COL_TEST		0x0080

#define	BMSR_100BASE_T4		0x8000
#define	BMSR_100BASE_TX_FD	0x4000
#define	BMSR_100BASE_TX		0x2000
#define	BMSR_10BASE_T_FD	0x1000
#define	BMSR_10BASE_T		0x0800
#define	BMSR_AUTONEG_COMPLETE	0x0020
#define BMSR_AUTONEG_ABLE	0x0008
#define	BMSR_LINK_STATUS	0x0004

#define PAR_FULL_DUPLEX		0x0400

#define ANER_MULTIPLE_LINK_FAULT	0x10

/* ANAR and LPAR have the same bits, define them only once */
#define	ANAR_10			0x0020
#define	ANAR_10_FD		0x0040
#define	ANAR_100_TX		0x0080
#define	ANAR_100_TX_FD		0x0100
#define	ANAR_100_T4		0x0200
d206 3
a208 23
/*
 * Quality Semiconductor's QS6612 registers and bits
 */
#define	QS6612_OUI		0x006051
#define	QS6612_MCTL		17
#define	QS6612_INTSTAT		29
#define	QS6612_INTMASK		30
#define	QS6612_BPCR		31

#define	MCTL_T4_PRESENT		0x1000	/* External T4 Enabled, ignored */
					/* if AutoNeg is enabled */
#define	MCTL_BTEXT		0x0800	/* Reduces 10baset squelch level */
					/* for extended cable length */

#define	INTSTAT_AN_COMPLETE	0x40	/* Autonegotiation complete */
#define	INTSTAT_RF_DETECTED	0x20	/* Remote Fault detected */
#define	INTSTAT_LINK_STATUS	0x10	/* Link status changed */
#define	INTSTAT_AN_LP_ACK	0x08	/* Autoneg. LP Acknoledge */
#define	INTSTAT_PD_FAULT	0x04	/* Parallel Detection Fault */
#define	INTSTAT_AN_PAGE		0x04	/* Autoneg. Page Received */
#define	INTSTAT_RE_CNT_FULL	0x01	/* Receive Error Counter Full */

#define	INTMASK_THUNDERLAN	0x8000	/* Enable interrupts */
d260 5
a264 1
/* Driver status structure */
d267 15
a281 1
	struct device		sc_dev;
d285 1
a285 12
#else /* __FreeBSD__ */
#if defined(EPIC_USEIOSPACE)
	u_int32_t		iobase;
#else
	caddr_t			csr;
#endif
#endif
#if !defined(EPIC_NOIFMEDIA)
	struct ifmedia 		ifmedia;
#endif
	struct arpcom		arpcom;
	u_int32_t		unit;
d305 12
d320 1
a320 29
#define sc_if arpcom.ac_if
#define sc_macaddr arpcom.ac_enaddr
#if defined(EPIC_USEIOSPACE)
#define CSR_WRITE_4(sc,reg,val) 					\
	outl( (sc)->iobase + (u_int32_t)(reg), (val) )
#define CSR_WRITE_2(sc,reg,val) 					\
	outw( (sc)->iobase + (u_int32_t)(reg), (val) )
#define CSR_WRITE_1(sc,reg,val) 					\
	outb( (sc)->iobase + (u_int32_t)(reg), (val) )
#define CSR_READ_4(sc,reg) 						\
	inl( (sc)->iobase + (u_int32_t)(reg) )
#define CSR_READ_2(sc,reg) 						\
	inw( (sc)->iobase + (u_int32_t)(reg) )
#define CSR_READ_1(sc,reg) 						\
	inb( (sc)->iobase + (u_int32_t)(reg) )
#else
#define CSR_WRITE_1(sc,reg,val) 					\
	((*(volatile u_int8_t*)((sc)->csr + (u_int32_t)(reg))) = (u_int8_t)(val))
#define CSR_WRITE_2(sc,reg,val) 					\
	((*(volatile u_int16_t*)((sc)->csr + (u_int32_t)(reg))) = (u_int16_t)(val))
#define CSR_WRITE_4(sc,reg,val) 					\
	((*(volatile u_int32_t*)((sc)->csr + (u_int32_t)(reg))) = (u_int32_t)(val))
#define CSR_READ_1(sc,reg) 						\
	(*(volatile u_int8_t*)((sc)->csr + (u_int32_t)(reg)))
#define CSR_READ_2(sc,reg) 						\
	(*(volatile u_int16_t*)((sc)->csr + (u_int32_t)(reg)))
#define CSR_READ_4(sc,reg) 						\
	(*(volatile u_int32_t*)((sc)->csr + (u_int32_t)(reg)))
#endif
d323 5
a327 2
#define EPIC_ARGS(sc)	(sc->sc_dev.dv_xname)
#define sc_if	arpcom.ac_if
d329 1
d342 36
a378 3

#define	PHY_READ_2(sc,reg)	epic_read_phy_register(sc,reg)
#define PHY_WRITE_2(sc,reg,val)	epic_write_phy_register(sc,reg,val)
@


1.7.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
/*	$OpenBSD: if_txvar.h,v 1.9 2001/02/23 22:59:09 jason Exp $	*/
/* $FreeBSD: src/sys/pci/if_txvar.h,v 1.8 2001/02/07 20:11:02 semenu Exp $ */
a32 4
/*#define	EPIC_DEBUG	1*/
/*#define	EPIC_USEIOSPACE	1*/
#define	EARLY_RX	1

d47 2
d50 1
a50 9

/* PCI aux configuration registers */
#if defined(__FreeBSD__)
#define	PCIR_BASEIO	(PCIR_MAPS + 0x0)	/* Base IO Address */
#define	PCIR_BASEMEM	(PCIR_MAPS + 0x4)	/* Base Memory Address */
#else /* __OpenBSD__ */
#define	PCI_BASEIO	(PCI_MAPS + 0x0)	/* Base IO Address */
#define	PCI_BASEMEM	(PCI_MAPS + 0x4)	/* Base Memory Address */
#endif /* __FreeBSD__ */
d54 20
a73 1
#define SMC_DEVICEID_83C170	0x0005
d116 3
a196 4
#define	MIICFG_SERIAL_ENABLE		0x00000001
#define	MIICFG_694_ENABLE		0x00000002
#define	MIICFG_694_STATUS		0x00000004
#define	MIICFG_PHY_PRESENT		0x00000008
a200 3
/*
 * Some default values
 */
d202 1
a202 1
#define TRANSMIT_THRESHOLD	0x300
d205 1
a205 2
#define RXCON_EARLY		(RXCON_EARLY_RECEIVE_ENABLE | \
				 RXCON_SAVE_ERRORED_PACKETS)
d207 1
a207 1
#define RXCON_EARLY		(0)
d209 64
d274 1
a274 3
#define	RXCON_DEFAULT		(RXCON_EARLY | \
				 RXCON_RECEIVE_MULTICAST_FRAMES | \
				 RXCON_RECEIVE_BROADCAST_FRAMES)
a325 20
/* PHY, known by tx driver */
#define	EPIC_UNKN_PHY		0x0000
#define	EPIC_QS6612_PHY		0x0001
#define	EPIC_AC101_PHY		0x0002
#define	EPIC_LXT970_PHY		0x0003
#define	EPIC_SERIAL		0x0004

#define	SMC9432DMT		0xA010
#define	SMC9432TX		0xA011
#define	SMC9032TXM		0xA012
#define	SMC9032TX		0xA013
#define	SMC9432TXPWR		0xA014
#define	SMC9432BTX		0xA015
#define	SMC9432FTX		0xA016
#define	SMC9432FTX_SC		0xA017
#define	SMC9432TX_XG_ADHOC	0xA020
#define	SMC9434TX_XG_ADHOC	0xA021
#define	SMC9432FTX_ADHOC	0xA022
#define	SMC9432BTX1		0xA024

d329 1
a329 14
	struct device		dev;
	struct arpcom		arpcom;
	mii_data_t		miibus;
	struct timeout		sc_tmo;
#else /* __FreeBSD__ */
	struct resource		*res;
	struct resource		*irq;

	device_t		miibus;
	device_t		dev;
	struct callout_handle	stat_ch;

	u_int32_t		unit;
#endif
d333 12
a344 1

d356 1
a356 1
	u_int32_t		miicfg;
a360 5
	u_int16_t		cardvend;
	u_int16_t		cardid;
	struct mii_softc 	*physc;
	u_int32_t		phyid;
	int			serinst;
a363 12
struct epic_type {
	u_int16_t	ven_id;
	u_int16_t	dev_id;
	char		*name;
};

#if defined(EPIC_DEBUG)
#define dprintf(a) printf a
#else
#define dprintf(a)
#endif

d367 29
a395 1
#define EPIC_BPFTAP_ARG(ifp)    ifp
d398 2
a399 5
#define EPIC_ARGS(sc)	(sc->dev.dv_xname)
#define EPIC_BPFTAP_ARG(ifp)	(ifp)->if_bpf
#endif

#define sc_if arpcom.ac_if
a400 1

d413 1
d415 2
a416 36
#define	PHY_READ_2(sc,phy,reg)						\
	epic_read_phy_reg((sc),(phy),(reg))
#define	PHY_WRITE_2(sc,phy,reg,val)					\
	epic_write_phy_reg((sc),(phy),(reg),(val))

/* Macro to get either mbuf cluster or nothing */
#define EPIC_MGETCLUSTER(m)						\
	{ MGETHDR((m),M_DONTWAIT,MT_DATA);				\
	  if (m) {							\
	    MCLGET((m),M_DONTWAIT);					\
	    if( NULL == ((m)->m_flags & M_EXT) ) {			\
	      m_freem(m);						\
	      (m) = NULL;						\
	    }								\
	  }								\
	}
/*
 * Platform Independant Field Accessors
 */
#if defined(__OpenBSD__)

#define epic_dev(sc)		(*sc)
#define epic_dev_ptr(sc)	(void*)(sc)

#define epic_mii(sc)		(sc->miibus)
#define epic_mii_ptr(sc)	(&sc->miibus)	

#else

#define epic_dev(dev)		(*(device_get_softc(dev))
#define epic_dev_ptr(dev)	(device_get_softc(dev))

#define	epic_mii(sc)		(*(device_get_softc(sc->miibus))
#define epic_mii_ptr(sc)	(device_get_softc(sc->miibus))

#endif
@


1.7.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_txvar.h,v 1.7.2.1 2001/05/14 22:25:48 niklas Exp $	*/
d37 9
@


1.7.2.3
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_txvar.h,v 1.7.2.2 2001/07/04 10:42:28 niklas Exp $	*/
d226 1
a226 1
/* PAGE_SIZE, and sometimes come mbufs with more than 30 frags */
@


1.7.2.4
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d376 1
a376 1
#define epic_dev_ptr(sc)	(void *)(sc)
@


1.6
log
@sync with freebsd:
comment out some debugging code, rcsid changes
@
text
@d1 2
a2 2
/*	$OpenBSD: if_txvar.h,v 1.5 1999/03/16 04:26:39 jason Exp $	*/
/*	$FreeBSD: if_txvar.h,v 1.3 1999/05/22 06:10:14 semenu Exp $	*/
a27 3
 *
 *      $FreeBSD: if_txvar.h,v 1.2 1999/03/14 08:30:23 semenu Exp $
 *
d67 4
@


1.5
log
@merge with freesbd:
o put media types in a structure for ifmedia adding
o make sure ifp->if_snd.ifq_maxlen is initialized
o add workaround for app note 7-15
o more checks for IFF_UP
o use DELAY() instead of counters
@
text
@d1 2
a2 2
/*	$OpenBSD: if_txvar.h,v 1.4 1999/03/10 20:04:15 jason Exp $	*/
/*	$FreeBSD: if_txvar.h,v 1.2 1999/03/14 08:30:23 semenu Exp $	*/
@


1.4
log
@fix freebsd id's
Merge with FreeBSD: longer delay when accessing mii, type fixups
@
text
@d1 2
a2 1
/*	$OpenBSD: if_txvar.h,v 1.3 1998/10/10 04:30:09 jason Exp $	*/
d29 1
a29 1
 *      $FreeBSD: if_txvar.h,v 1.1 1998/11/01 07:44:33 semenu Exp $
d196 4
d222 1
d225 2
d229 1
d258 1
d383 1
a383 1
	((*(u_int8_t*)((sc)->csr + (u_int32_t)(reg))) = (u_int8_t)(val))
d385 1
a385 1
	((*(u_int16_t*)((sc)->csr + (u_int32_t)(reg))) = (u_int16_t)(val))
d387 1
a387 1
	((*(u_int32_t*)((sc)->csr + (u_int32_t)(reg))) = (u_int32_t)(val))
d389 1
a389 1
	(*(u_int8_t*)((sc)->csr + (u_int32_t)(reg)))
d391 1
a391 1
	(*(u_int16_t*)((sc)->csr + (u_int32_t)(reg)))
d393 1
a393 1
	(*(u_int32_t*)((sc)->csr + (u_int32_t)(reg)))
@


1.3
log
@add OpenBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d28 1
a28 1
 *      $Id: if_txvar.h,v 1.2 1998/09/22 21:54:55 jason Exp $
@


1.2
log
@Updated driver from Ustimenko Semen <semen@@iclub.nsu.ru>:
o Cleaned up ifmedia support
o Improved ring & mbuf handling
@
text
@d1 2
d28 1
a28 1
 *      $Id: if_txvar.h,v 1.1 1998/09/21 05:24:55 jason Exp $
@


1.1
log
@SMC 83C170 EPIC support from; Semen Ustimenko (semen@@iclub.nsu.ru)
This is the chip found on the SMC EtherPower II 10/100 boards.
@
text
@d26 1
a26 1
 *      $Id: smc83c170.h,v 1.13 1998/06/05 13:23:46 galv Exp $
d42 5
a46 2
#define TX_RING_SIZE		16
#define RX_RING_SIZE		16
d289 1
d295 1
a295 1
	} frag[63]; 
d327 1
d329 1
@

