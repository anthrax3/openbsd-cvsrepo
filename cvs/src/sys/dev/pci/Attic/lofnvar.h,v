head	1.10;
access;
symbols
	OPENBSD_5_6:1.9.0.48
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.46
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.42
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.40
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.38
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.36
	OPENBSD_5_0:1.9.0.34
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.32
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.30
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.26
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.28
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.24
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.22
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.20
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.18
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.16
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.14
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.12
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.8
	UBC:1.4.0.6
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	SMP:1.4.0.2;
locks; strict;
comment	@ * @;


1.10
date	2014.08.15.14.12.07;	author mikeb;	state dead;
branches;
next	1.9;
commitid	2AkQEO8mhDh240iv;

1.9
date	2003.06.02.19.08.58;	author jason;	state Exp;
branches;
next	1.8;

1.8
date	2002.09.24.18.33.26;	author jason;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.09.19.13.09;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.08.19.09.25;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.08.17.49.42;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.26.06.33.52;	author jason;	state Exp;
branches
	1.4.2.1
	1.4.6.1;
next	1.3;

1.3
date	2001.06.26.05.03.10;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.26.03.41.31;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.25.23.04.46;	author jason;	state Exp;
branches;
next	;

1.4.2.1
date	2003.03.28.00.38.23;	author niklas;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2003.06.07.11.02.30;	author ho;	state Exp;
branches;
next	;

1.4.6.1
date	2002.06.11.03.42.26;	author art;	state Exp;
branches;
next	1.4.6.2;

1.4.6.2
date	2002.10.29.00.33.29;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@With deprecation of crypto(4) interface lofn(4) and nofn(4) become
obsolete.  No objections from the usual suspects.
@
text
@/*	$OpenBSD: lofnvar.h,v 1.9 2003/06/02 19:08:58 jason Exp $	*/

/*
 * Copyright (c) 2001-2002 Jason L. Wright (jason@@thought.net)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
 *
 */

#define	LOFN_RNGBUF_SIZE	8	/* size in 32 bit elements */

struct lofn_softc {
	struct device		sc_dv;
	void *			sc_ih;
	bus_space_handle_t	sc_sh;
	bus_space_tag_t		sc_st;
	bus_dma_tag_t		sc_dmat;
	u_int32_t		sc_rngbuf[LOFN_RNGBUF_SIZE], sc_ier;
	int32_t			sc_cid;
	union lofn_reg		sc_tmp;
	union lofn_reg		sc_zero;
	SIMPLEQ_HEAD(,lofn_q)	sc_queue;
	struct lofn_q		*sc_current;
};

struct lofn_q {
	SIMPLEQ_ENTRY(lofn_q) q_next;
	int (*q_start)(struct lofn_softc *, struct lofn_q *);
	void (*q_finish)(struct lofn_softc *, struct lofn_q *);
	struct cryptkop *q_krp;
};

#define	READ_REG(sc,r)		\
    bus_space_read_4((sc)->sc_st, (sc)->sc_sh, (r))
#define	READ_REG_0(sc,r)	READ_REG((sc), (r) | LOFN_WIN_0)
#define	READ_REG_1(sc,r)	READ_REG((sc), (r) | LOFN_WIN_1)
#define	READ_REG_2(sc,r)	READ_REG((sc), (r) | LOFN_WIN_2)
#define	READ_REG_3(sc,r)	READ_REG((sc), (r) | LOFN_WIN_3)

#define	WRITE_REG(sc,r,v)	\
    bus_space_write_4((sc)->sc_st, (sc)->sc_sh, (r), (v))
#define	WRITE_REG_0(sc,r,v)	WRITE_REG((sc), (r) | LOFN_WIN_0, (v))
#define	WRITE_REG_1(sc,r,v)	WRITE_REG((sc), (r) | LOFN_WIN_1, (v))
#define	WRITE_REG_2(sc,r,v)	WRITE_REG((sc), (r) | LOFN_WIN_2, (v))
#define	WRITE_REG_3(sc,r,v)	WRITE_REG((sc), (r) | LOFN_WIN_3, (v))

#ifndef LOFN_RNG_SCALAR
#define	LOFN_RNG_SCALAR		0x00000700
#endif

/* C = M ^ E mod N */
#define	LOFN_MODEXP_PAR_M	0
#define	LOFN_MODEXP_PAR_E	1
#define	LOFN_MODEXP_PAR_N	2
@


1.9
log
@nuke clase 3 & 4
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.8 2002/09/24 18:33:26 jason Exp $	*/
@


1.8
log
@Don't use constants for the output parameter, use the iparam count as a pointer to the first result location.
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.7 2002/05/09 19:13:09 jason Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Jason L. Wright
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.7
log
@Rework to process requests from a queue/interrupt handler instead of busy
waiting.
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.6 2002/05/08 19:09:25 jason Exp $	*/
a83 1
#define	LOFN_MODEXP_PAR_C	3
@


1.6
log
@register as having support for MODEXP operations and add associated
goop as appropriate.  Several problems still remain:
- alot of incorrect results (probably something stupid)
- the driver busy waits instead of being interrupt driven (pending question
to hifn about how interrupt ack is supposed to work).
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.5 2002/04/08 17:49:42 jason Exp $	*/
d4 1
a4 1
 * Copyright (c) 2001 Jason L. Wright (jason@@thought.net)
d47 1
a47 1
	u_int32_t		sc_rngbuf[LOFN_RNGBUF_SIZE];
d51 9
@


1.5
log
@Credit DARPA/USAF appropriately.
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.4 2001/06/26 06:33:52 jason Exp $	*/
d48 3
d70 6
@


1.4
log
@jack up the rng clock prescalar a bit
define the rng address space
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.3 2001/06/26 05:03:10 jason Exp $	*/
d32 5
@


1.4.2.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 2001-2002 Jason L. Wright (jason@@thought.net)
a31 5
 *
 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
 *
d42 1
a42 13
	u_int32_t		sc_rngbuf[LOFN_RNGBUF_SIZE], sc_ier;
	int32_t			sc_cid;
	union lofn_reg		sc_tmp;
	union lofn_reg		sc_zero;
	SIMPLEQ_HEAD(,lofn_q)	sc_queue;
	struct lofn_q		*sc_current;
};

struct lofn_q {
	SIMPLEQ_ENTRY(lofn_q) q_next;
	int (*q_start)(struct lofn_softc *, struct lofn_q *);
	void (*q_finish)(struct lofn_softc *, struct lofn_q *);
	struct cryptkop *q_krp;
a61 5

/* C = M ^ E mod N */
#define	LOFN_MODEXP_PAR_M	0
#define	LOFN_MODEXP_PAR_E	1
#define	LOFN_MODEXP_PAR_N	2
@


1.4.2.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.4.2.1 2003/03/28 00:38:23 niklas Exp $	*/
d15 5
@


1.4.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.4 2001/06/26 06:33:52 jason Exp $	*/
d4 1
a4 1
 * Copyright (c) 2001-2002 Jason L. Wright (jason@@thought.net)
a31 5
 *
 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
 *
d42 1
a42 13
	u_int32_t		sc_rngbuf[LOFN_RNGBUF_SIZE], sc_ier;
	int32_t			sc_cid;
	union lofn_reg		sc_tmp;
	union lofn_reg		sc_zero;
	SIMPLEQ_HEAD(,lofn_q)	sc_queue;
	struct lofn_q		*sc_current;
};

struct lofn_q {
	SIMPLEQ_ENTRY(lofn_q) q_next;
	int (*q_start)(struct lofn_softc *, struct lofn_q *);
	void (*q_finish)(struct lofn_softc *, struct lofn_q *);
	struct cryptkop *q_krp;
a61 6

/* C = M ^ E mod N */
#define	LOFN_MODEXP_PAR_M	0
#define	LOFN_MODEXP_PAR_E	1
#define	LOFN_MODEXP_PAR_N	2
#define	LOFN_MODEXP_PAR_C	3
@


1.4.6.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.4.6.1 2002/06/11 03:42:26 art Exp $	*/
d84 1
@


1.3
log
@fix big oops in bus access macros and buffer for rng
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.2 2001/06/26 03:41:31 jason Exp $	*/
d58 4
@


1.2
log
@bus access methods
@
text
@d1 1
a1 1
/*	$OpenBSD: lofnvar.h,v 1.1 2001/06/25 23:04:46 jason Exp $	*/
d34 2
d42 1
d46 1
a46 1
    bus_space_read_4((sc)->sc_st, (sc)->sc_sh, reg)
d53 5
a57 5
    bus_space_write_4((sc)->sc_st, (sc)->sc_sh, reg, val)
#define	WRITE_REG_0(sc,r,v)	READ_REG((sc), (r) | LOFN_WIN_0, (v))
#define	WRITE_REG_1(sc,r,v)	READ_REG((sc), (r) | LOFN_WIN_1, (v))
#define	WRITE_REG_2(sc,r,v)	READ_REG((sc), (r) | LOFN_WIN_2, (v))
#define	WRITE_REG_3(sc,r,v)	READ_REG((sc), (r) | LOFN_WIN_3, (v))
@


1.1
log
@New dma engine skeleton
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 14
@

