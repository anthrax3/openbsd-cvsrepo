head	1.7;
access;
symbols
	OPENBSD_5_7:1.6.0.40
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.38
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.36
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.32
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.30
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.28
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.26
	OPENBSD_5_0:1.6.0.24
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.22
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.20
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.16
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.18
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.14
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.12
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.10
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.8
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.6
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.4.0.22
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.20
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.18
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.16
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.14
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.12
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.10
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.6
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.2
	SMP_BASE:1.3
	kame_19991208:1.2
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.04.09.18.58.22;	author deraadt;	state dead;
branches;
next	1.6;
commitid	cDamcqFPw3HffP51;

1.6
date	2005.11.07.00.29.21;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.05.11.49.01;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.10.15.33.09;	author provos;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.01.18.01.42;	author chris;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	99.10.26.23.47.15;	author chris;	state Exp;
branches;
next	1.1;

1.1
date	99.07.01.23.10.40;	author deraadt;	state Exp;
branches;
next	;

1.3.2.1
date	2001.05.14.22.25.45;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Send lmc(4) and san(4) to the HDLC framed bit bucket in the sky.
@
text
@/*	$OpenBSD: if_lmcioctl.h,v 1.6 2005/11/07 00:29:21 brad Exp $ */
/*	$Id: if_lmcioctl.h,v 1.6 2005/11/07 00:29:21 brad Exp $	*/

/*
 * Copyright (c) 1997-1999 LAN Media Corporation (LMC)
 * All rights reserved.  www.lanmedia.com
 *
 * This code is written by Michael Graff <graff@@vix.com> for LMC.
 * The code is derived from permitted modifications to software created
 * by Matt Thomas (matt@@3am-software.com).
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following disclaimer
 *    in the documentation and/or other materials provided with the
 *    distribution.
 * 3. All marketing or advertising materials mentioning features or
 *    use of this software must display the following acknowledgement:
 *      This product includes software developed by LAN Media Corporation
 *      and its contributors.
 * 4. Neither the name of LAN Media Corporation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY LAN MEDIA CORPORATION AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * IOCTLs for the sane world.
 */
#define LMCIOCGINFO	_IOW('i', 240, struct ifreq)
#define LMCIOCSINFO	_IOWR('i', 241, struct ifreq)

typedef struct {
	u_int32_t	n;
	u_int32_t	m;
	u_int32_t	v;
	u_int32_t	x;
	u_int32_t	r;
	u_int32_t	f;
	u_int32_t	exact;
} lmc_av9110_t;

/*
 * Common structure passed to the ioctl code.
 */
struct lmc___ctl {
	u_int32_t	cardtype;
	u_int32_t	clock_source;		/* HSSI, T1 */
	u_int32_t	clock_rate;		/* T1 */
	u_int32_t	crc_length;
	u_int32_t	cable_length;		/* DS3 */
	u_int32_t	scrambler_onoff;	/* DS3 */
	u_int32_t	cable_type;		/* T1 */
	u_int32_t	keepalive_onoff;	/* protocol */
	u_int32_t	ticks;			/* ticks/sec */
	union {
		lmc_av9110_t	ssi;
	} cardspec;
	u_int32_t       circuit_type;		/* T1 or E1 */
};

#define LMC_CARDTYPE_UNKNOWN		-1
#define LMC_CARDTYPE_HSSI		1	/* probed card is a HSSI card */
#define LMC_CARDTYPE_DS3		2	/* probed card is a DS3 card */
#define LMC_CARDTYPE_SSI		3	/* probed card is a SSI card */
#define LMC_CARDTYPE_T1			4	/* probed card is a T1 card */

#define LMC_CTL_CARDTYPE_LMC5200	0	/* HSSI */
#define LMC_CTL_CARDTYPE_LMC5245	1	/* DS3 */
#define LMC_CTL_CARDTYPE_LMC1000	2	/* SSI, V.35 */
#define LMC_CTL_CARDTYPE_LMC1200	3	/* DS1 */

#define LMC_CTL_OFF			0	/* generic OFF value */
#define LMC_CTL_ON			1	/* generic ON value */

#define LMC_CTL_CLOCK_SOURCE_EXT	0	/* clock off line */
#define LMC_CTL_CLOCK_SOURCE_INT	1	/* internal clock */

#define LMC_CTL_CRC_LENGTH_16		16
#define LMC_CTL_CRC_LENGTH_32		32
#define LMC_CTL_CRC_BYTESIZE_2		2
#define LMC_CTL_CRC_BYTESIZE_4		4

#define LMC_CTL_CABLE_LENGTH_LT_100FT	0	/* DS3 cable < 100 feet */
#define LMC_CTL_CABLE_LENGTH_GT_100FT	1	/* DS3 cable >= 100 feet */

#define LMC_CTL_CIRCUIT_TYPE_E1		0
#define LMC_CTL_CIRCUIT_TYPE_T1		1

/*
 * These are not in the least IOCTL related, but I want them common.
 */
/*
 * assignments for the GPIO register on the DEC chip (common)
 */
#define LMC_GEP_INIT		0x01 /* 0: */
#define LMC_GEP_RESET		0x02 /* 1: */
#define LMC_GEP_LOAD		0x10 /* 4: */
#define LMC_GEP_DP		0x20 /* 5: */
#define LMC_GEP_SERIAL		0x40 /* 6: serial out */
#define LMC_GEP_SERIALCLK	0x80 /* 7: serial clock */

/*
 * HSSI GPIO assignments
 */
#define LMC_GEP_HSSI_ST		0x04 /* 2: receive timing sense (deprecated) */
#define LMC_GEP_HSSI_CLOCK	0x08 /* 3: clock source */

/*
 * T1 GPIO assignments
 */
#define LMC_GEP_SSI_GENERATOR	0x04 /* 2: enable prog freq gen serial i/f */
#define LMC_GEP_SSI_TXCLOCK	0x08 /* 3: provide clock on TXCLOCK output */

/*
 * Common MII16 bits
 */
#define LMC_MII16_LED0		0x0080
#define LMC_MII16_LED1		0x0100
#define LMC_MII16_LED2		0x0200
#define LMC_MII16_LED3		0x0400  /* Error, and the red one */
#define LMC_MII16_LED_ALL	0x0780  /* LED bit mask */
#define LMC_MII16_FIFO_RESET	0x0800

/*
 * definitions for HSSI
 */
#define LMC_MII16_HSSI_TA	0x0001
#define LMC_MII16_HSSI_CA	0x0002
#define LMC_MII16_HSSI_LA	0x0004
#define LMC_MII16_HSSI_LB	0x0008
#define LMC_MII16_HSSI_LC	0x0010
#define LMC_MII16_HSSI_TM	0x0020
#define LMC_MII16_HSSI_CRC	0x0040

/*
 * assignments for the MII register 16 (DS3)
 */
#define LMC_MII16_DS3_ZERO	0x0001
#define LMC_MII16_DS3_TRLBK	0x0002
#define LMC_MII16_DS3_LNLBK	0x0004
#define LMC_MII16_DS3_RAIS	0x0008
#define LMC_MII16_DS3_TAIS	0x0010
#define LMC_MII16_DS3_BIST	0x0020
#define LMC_MII16_DS3_DLOS	0x0040
#define LMC_MII16_DS3_CRC	0x1000
#define LMC_MII16_DS3_SCRAM	0x2000

/* Note: 2 pairs of LEDs where swapped by mistake
 * in Xilinx code for DS3 & DS1 adapters */
#define LMC_DS3_LED0	0x0100		/* bit 08  yellow */
#define LMC_DS3_LED1	0x0080		/* bit 07  blue   */
#define LMC_DS3_LED2	0x0400		/* bit 10  green  */
#define LMC_DS3_LED3	0x0200		/* bit 09  red    */

/*
 * framer register 0 and 7 (7 is latched and reset on read)
 */
#define LMC_FRAMER_REG0_DLOS	0x80	/* digital loss of service */
#define LMC_FRAMER_REG0_OOFS	0x40	/* out of frame sync */
#define LMC_FRAMER_REG0_AIS	0x20	/* alarm indication signal */
#define LMC_FRAMER_REG0_CIS	0x10	/* channel idle */
#define LMC_FRAMER_REG0_LOC	0x08	/* loss of clock */

/*
 * And SSI, LMC1000
 */
#define LMC_MII16_SSI_DTR	0x0001	/* DTR output RW */
#define LMC_MII16_SSI_DSR	0x0002	/* DSR input RO */
#define LMC_MII16_SSI_RTS	0x0004	/* RTS output RW */
#define LMC_MII16_SSI_CTS	0x0008	/* CTS input RO */
#define LMC_MII16_SSI_DCD	0x0010	/* DCD input RO */
#define LMC_MII16_SSI_RI	0x0020	/* RI input RO */
#define LMC_MII16_SSI_CRC	0x1000	/* CRC select - RW */

/*
 * bits 0x0080 through 0x0800 are generic, and described
 * above with LMC_MII16_LED[0123] _LED_ALL, and _FIFO_RESET
 */
#define LMC_MII16_SSI_LL	0x1000	/* LL output RW */
#define LMC_MII16_SSI_RL	0x2000	/* RL output RW */
#define LMC_MII16_SSI_TM	0x4000	/* TM input RO */
#define LMC_MII16_SSI_LOOP	0x8000	/* loopback enable RW */

/*
 * Some of the MII16 bits are mirrored in the MII17 register as well,
 * but let's keep thing separate for now, and get only the cable from
 * the MII17.
 */
#define LMC_MII17_SSI_CABLE_MASK	0x0038	/* mask to extract the cable type */
#define LMC_MII17_SSI_CABLE_SHIFT 3	/* shift to extract the cable type */

/*
 * And T1, LMC1200
 */
#define LMC_MII16_T1_UNUSED1    0x0003
#define LMC_MII16_T1_XOE                0x0004
#define LMC_MII16_T1_RST                0x0008  /* T1 chip reset - RW */
#define LMC_MII16_T1_Z                  0x0010  /* output impedance T1=1, E1=0 output - RW */
#define LMC_MII16_T1_INTR               0x0020  /* interrupt from 8370 - RO */
#define LMC_MII16_T1_ONESEC             0x0040  /* one second square wave - ro */

#define LMC_MII16_T1_LED0               0x0100
#define LMC_MII16_T1_LED1               0x0080
#define LMC_MII16_T1_LED2               0x0400
#define LMC_MII16_T1_LED3               0x0200
#define LMC_MII16_T1_FIFO_RESET 0x0800

#define LMC_MII16_T1_CRC                0x1000  /* CRC select - RW */
#define LMC_MII16_T1_UNUSED2    0xe000

/* 8370 framer registers  */

#define T1FRAMER_ALARM1_STATUS  0x47
#define T1FRAMER_ALARM2_STATUS  0x48
#define T1FRAMER_FERR_LSB               0x50
#define T1FRAMER_FERR_MSB               0x51    /* framing bit error counter */
#define T1FRAMER_LCV_LSB                0x54
#define T1FRAMER_LCV_MSB                0x55    /* line code violation counter */
#define T1FRAMER_AERR                   0x5A

/* mask for the above AERR register */
#define T1FRAMER_LOF_MASK               (0x0f0) /* receive loss of frame */
#define T1FRAMER_COFA_MASK              (0x0c0) /* change of frame alignment */
#define T1FRAMER_SEF_MASK               (0x03)  /* severely errored frame  */

/* 8370 framer register ALM1 (0x47) values
 * used to determine link status
 */

#define T1F_SIGFRZ      0x01    /* signaling freeze */
#define T1F_RLOF        0x02    /* receive loss of frame alignment */
#define T1F_RLOS        0x04    /* receive loss of signal */
#define T1F_RALOS       0x08    /* receive analog loss of signal or RCKI loss of clock */
#define T1F_RAIS        0x10    /* receive alarm indication signal */
#define T1F_UNUSED      0x20
#define T1F_RYEL        0x40    /* receive yellow alarm */
#define T1F_RMYEL       0x80    /* receive multiframe yellow alarm */

/* ------------------ end T1 defs ------------------- */

#define LMC_MII_LedMask                 0x0780
#define LMC_MII_LedBitPos               7

#if defined(_KERNEL)
/*
 * media independent methods to check on media status, link, light LEDs,
 * etc.
 */
struct lmc___media {
	void	(* init)(lmc_softc_t * const);
	void	(* defaults)(lmc_softc_t * const);
	void	(* set_status)(lmc_softc_t * const, lmc_ctl_t *);
	void	(* set_clock_source)(lmc_softc_t * const, int);
	void	(* set_speed)(lmc_softc_t * const, lmc_ctl_t *);
	void	(* set_cable_length)(lmc_softc_t * const, int);
	void	(* set_scrambler)(lmc_softc_t * const, int);
	int	(* get_link_status)(lmc_softc_t * const);
	void	(* set_link_status)(lmc_softc_t * const, int);
	void	(* set_crc_length)(lmc_softc_t * const, int);
	void    (* set_circuit_type)(lmc_softc_t * const, int);
	void	(* watchdog)(lmc_softc_t * const);
};

u_int32_t lmc_mii_readreg(lmc_softc_t * const sc, u_int32_t devaddr,
			  u_int32_t regno);
void lmc_mii_writereg(lmc_softc_t * const sc, u_int32_t devaddr,
		      u_int32_t regno, u_int32_t data);
void lmc_initcsrs(lmc_softc_t * const sc, lmc_csrptr_t csr_base,
		  size_t csr_size);
void lmc_dec_reset(lmc_softc_t * const sc);
void lmc_reset(lmc_softc_t * const sc);
void lmc_led_on(lmc_softc_t * const sc, u_int32_t led);
void lmc_led_off(lmc_softc_t * const sc, u_int32_t led);
void lmc_gpio_mkinput(lmc_softc_t * const sc, u_int32_t bits);
void lmc_gpio_mkoutput(lmc_softc_t * const sc, u_int32_t bits);
lmc_intrfunc_t lmc_intr_normal(void *);
int lmc_read_macaddr(lmc_softc_t * const sc);
void lmc_attach(lmc_softc_t * const sc);
void lmc_initring(lmc_softc_t * const sc, lmc_ringinfo_t * const ri,
		  lmc_desc_t *descs, int ndescs);
#endif /* _KERNEL */
@


1.6
log
@first round of lmc(4) cleaning. removes a good portion of the ifdef
crud making this readable.

ok dlg@@
@
text
@d1 2
a2 2
/*	$OpenBSD: if_lmcioctl.h,v 1.5 2005/11/05 11:49:01 brad Exp $ */
/*	$Id: if_lmcioctl.h,v 1.5 2005/11/05 11:49:01 brad Exp $	*/
@


1.5
log
@add bus_dma and big endian support.

From NetBSD

Thanks to Jason Ackley for testing on i386/amd64/sparc64
with both T1 and T3 cards.

"looks ok" dlg@@
@
text
@d1 2
a2 2
/*	$OpenBSD: if_lmcioctl.h,v 1.4 2000/11/10 15:33:09 provos Exp $ */
/*	$Id: if_lmcioctl.h,v 1.4 2000/11/10 15:33:09 provos Exp $	*/
a41 26
#if defined(linux)
#include <linux/types.h>
/*
 * IOCTLs that we use for linux.  The structures passed in really should
 * go into an OS inspecific file, since BSD will use these as well.
 *
 * Under linux, the 16 reserved-for-device IOCTLs are numbered 0x89f0
 * through 0x89ff.
 */
#define LMCIOCGINFO         SIOCDEVPRIVATE+3 /* get current state */
#define LMCIOCSINFO         SIOCDEVPRIVATE+4 /* set state to user values */
#define LMCIOCSKEEPALIVE    SIOCDEVPRIVATE+5 /* Turn keepalives on/off */
#ifdef  LMC_DEBUG_FILE
#define LMCIOCLEARSTATS LMCIOCSINFO + 1 /* Clear debug stats */
#endif
#ifdef  LMC_BAZ
#define LMCIOCGETLMCSTATS       LMCIOCSINFO + 3
#define LMCIOCCLEARLMCSTATS     LMCIOCSINFO + 4
#define LMCIOCDUMPEVENTLOG      LMCIOCSINFO + 5
#define LMCIOCGETXINFO          LMCIOCSINFO + 6
#define LMCIOCREADLEDS          LMCIOCSINFO + 7
#define LMCIOCSETLEDS           LMCIOCSINFO + 8
#define LMCIOCRESET             LMCIOCSINFO + 9
#endif

#else
a47 2
#endif

a82 1

a98 1

a179 1

a226 1

d260 1
a260 4
/*
 * OpenBSD, NetBSD uses _KERNEL, FreeBSD uses KERNEL.
 */
#if defined(_KERNEL) || defined(KERNEL) || defined(__KERNEL__)
d297 1
a297 1
#endif /* LMC_IS_KERNEL */
@


1.4
log
@seperate -> separate, okay aaron@@
@
text
@d1 2
a2 2
/*	$OpenBSD: if_lmcioctl.h,v 1.3 2000/02/01 18:01:42 chris Exp $ */
/*	$Id: if_lmcioctl.h,v 1.3 2000/02/01 18:01:42 chris Exp $	*/
d331 1
a331 1
		  tulip_desc_t *descs, int ndescs);
@


1.3
log
@general cleanup (remove LMC_IOMAPPED crud entirely)
add correct rcs tags
sync w/lmc's lmc_media.c regarding watchdog support
(So, the LEDs on the T1/T3 cards [the ones with built-in CSU/DSUs], and also
the DS1 "SSI" card should now change according to various line conditions, as
ths manual says they do)
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$Id: if_lmcioctl.h,v 1.2 1999/10/26 23:47:15 chris Exp $	*/
d233 1
a233 1
 * but let's keep thing seperate for now, and get only the cable from
@


1.3.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
/*	$OpenBSD: if_lmcioctl.h,v 1.4 2000/11/10 15:33:09 provos Exp $ */
/*	$Id: if_lmcioctl.h,v 1.4 2000/11/10 15:33:09 provos Exp $	*/
d233 1
a233 1
 * but let's keep thing separate for now, and get only the cable from
@


1.2
log
@Support LMC1200
Based on LMC's Linux code
@
text
@d1 2
a2 1
/*	$Id: if_lmcioctl.h,v 1.9 1999/02/18 10:30:18 explorer Exp $	*/
d312 1
@


1.1
log
@lmc driver; ported by chris@@dqc.org
@
text
@d1 1
a1 1
/*	$NetBSD: if_lmcioctl.h,v 1.2 1999/03/25 04:09:34 explorer Exp $	*/
d3 1
a3 1
/*-
d42 1
d50 15
a64 2
#define LMCIOCGINFO	0x89f0	/* get current state */
#define LMCIOCSINFO	0x89f1	/* set state to user provided values */
d99 1
a99 1
		lmc_av9110_t	t1;
d101 1
d104 7
d113 2
a114 1
#define LMC_CTL_CARDTYPE_LMC1000	2	/* T1, E1, etc */
d124 3
d131 3
d156 2
a157 2
#define LMC_GEP_T1_GENERATOR	0x04 /* 2: enable prog freq gen serial i/f */
#define LMC_GEP_T1_TXCLOCK	0x08 /* 3: provide clock on TXCLOCK output */
d162 6
a167 6
#define LMC_MII16_LED0         0x0080
#define LMC_MII16_LED1         0x0100
#define LMC_MII16_LED2         0x0200
#define LMC_MII16_LED3         0x0400  /* Error, and the red one */
#define LMC_MII16_LED_ALL      0x0780  /* LED bit mask */
#define LMC_MII16_FIFO_RESET   0x0800
d172 7
a178 7
#define LMC_MII16_HSSI_TA      0x0001
#define LMC_MII16_HSSI_CA      0x0002
#define LMC_MII16_HSSI_LA      0x0004
#define LMC_MII16_HSSI_LB      0x0008
#define LMC_MII16_HSSI_LC      0x0010
#define LMC_MII16_HSSI_TM      0x0020
#define LMC_MII16_HSSI_CRC     0x0040
d193 17
d211 1
a211 1
 * And T1
d213 7
a219 7
#define LMC_MII16_T1_DTR	0x0001	/* DTR output RW */
#define LMC_MII16_T1_DSR	0x0002	/* DSR input RO */
#define LMC_MII16_T1_RTS	0x0004	/* RTS output RW */
#define LMC_MII16_T1_CTS	0x0008	/* CTS input RO */
#define LMC_MII16_T1_DCD	0x0010	/* DCD input RO */
#define LMC_MII16_T1_RI		0x0020	/* RI input RO */
#define LMC_MII16_T1_CRC	0x0040	/* CRC select */
d225 4
a228 4
#define LMC_MII16_T1_LL		0x1000	/* LL output RW */
#define LMC_MII16_T1_RL		0x2000	/* RL output RW */
#define LMC_MII16_T1_TM		0x4000	/* TM input RO */
#define LMC_MII16_T1_LOOP	0x8000	/* loopback enable RW */
d235 2
a236 2
#define LMC_MII17_T1_CABLE_MASK	0x0038	/* mask to extract the cable type */
#define LMC_MII17_T1_CABLE_SHIFT 3	/* shift to extract the cable type */
d239 36
a274 1
 * framer register 0 and 7 (7 is latched and reset on read)
a275 5
#define LMC_FRAMER_REG0_DLOS	0x80	/* digital loss of service */
#define LMC_FRAMER_REG0_OOFS	0x40	/* out of frame sync */
#define LMC_FRAMER_REG0_AIS	0x20	/* alarm indication signal */
#define LMC_FRAMER_REG0_CIS	0x10	/* channel idle */
#define LMC_FRAMER_REG0_LOC	0x08	/* loss of clock */
d277 10
a286 4
#define LMC_CARDTYPE_UNKNOWN	-1
#define LMC_CARDTYPE_HSSI	 1	/* probed card is a HSSI card */
#define LMC_CARDTYPE_DS3	 2	/* probed card is a DS3 card */
#define LMC_CARDTYPE_T1		 3	/* probed card is a T1 card */
d288 2
a289 1
#if defined(LMC_IS_KERNEL) /* defined in if_lmc_types.h */
d292 4
d310 1
a329 1

@

