head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.40
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.44
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.42
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.30
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.38
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.36
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.34
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.32
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.28
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.26
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.24
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.22
	OPENBSD_5_0:1.4.0.20
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.18
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.16
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.12
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.14
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.10
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.8
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.6
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.4
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.2
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.0.18
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.16
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.14
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.12
	OPENBSD_3_4_BASE:1.1
	UBC_SYNC_A:1.1
	OPENBSD_3_3:1.1.0.10
	OPENBSD_3_3_BASE:1.1
	UBC_SYNC_B:1.1
	OPENBSD_3_2:1.1.0.8
	OPENBSD_3_2_BASE:1.1
	UBC:1.1.0.6
	OPENBSD_3_1:1.1.0.4
	OPENBSD_3_1_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.4
date	2006.11.28.23.59.45;	author dlg;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.21.23.20.44;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.09.04.10.13;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.18.01.55.30;	author krw;	state Exp;
branches
	1.1.6.1;
next	;

1.1.6.1
date	2002.06.11.03.42.27;	author art;	state Exp;
branches;
next	;


desc
@@


1.4
log
@give scsi controllers a real attach args to fill in when attaching scsibus.

ok miod@@ marco@@ deraadt@@
@
text
@/*	$OpenBSD: trm_pci.c,v 1.3 2006/01/21 23:20:44 miod Exp $
 * ------------------------------------------------------------
 *       O.S     : OpenBSD
 *    FILE NAME  : trm_pci.c                          
 *         BY    : Erich Chen     (erich@@tekram.com.tw)
 *    Description: Device Driver for Tekram DC395U/UW/F,DC315/U 
 *                 PCI SCSI Bus Master Host Adapter    
 *                 (SCSI chip set used Tekram ASIC TRM-S1040)
 * (C)Copyright 1995-1999 Tekram Technology Co., Ltd.
 * (C)Copyright 2001-2002 Ashley R. Martens and Kenneth R. Westerback
 * ------------------------------------------------------------
 *    HISTORY:                    
 *                        
 *  REV#   DATE          NAME           DESCRIPTION    
 *  1.00   05/01/99      ERICH CHEN     First released for NetBSD 1.4.x
 *  1.01   00/00/00      MARTIN AKESSON Port to OpenBSD 2.8
 *  1.02   Sep 19, 2001  ASHLEY MARTENS Cleanup and formatting
 * ------------------------------------------------------------
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ------------------------------------------------------------
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <dev/pci/pcidevs.h>
#include <dev/pci/pcivar.h>

#include <scsi/scsi_all.h>
#include <scsi/scsiconf.h>

#include <dev/ic/trm.h>

int	trm_pci_probe (struct device *, void *, void *);
void	trm_pci_attach (struct device *, struct device *, void *);

struct  cfattach trm_pci_ca = {
	sizeof(struct trm_softc),
	trm_pci_probe,
	trm_pci_attach,
	NULL,			/* Detach */
	NULL,			/* Activate */
};


/*
 * ------------------------------------------------------------
 * Function : trm_pci_probe
 * Purpose  : Check the slots looking for a board we recognize.
 *            If we find one, note ti's address (slot) and call
 *            the actual probe routine to check it out.
 * Inputs   : 
 * ------------------------------------------------------------
 */
int
trm_pci_probe(struct device *parent, void *match, void *aux)
{
	struct pci_attach_args *pa = aux;

	if (PCI_VENDOR(pa->pa_id) == PCI_VENDOR_TEKRAM2) {
		switch (PCI_PRODUCT(pa->pa_id)) {
		case PCI_PRODUCT_TEKRAM2_DC3X5U:
			return 1;
		}
	}
	return 0;
}

/*
 * ------------------------------------------------------------
 * Function : trm_pci_attach
 * Purpose  : 
 * Inputs   :
 * ------------------------------------------------------------
 */
void
trm_pci_attach(struct device *parent, struct device *self, void *aux)
{
	struct pci_attach_args *pa = aux;
	struct scsibus_attach_args saa;
	bus_space_handle_t ioh;/* bus space handle */
	pci_intr_handle_t ih;
	struct trm_softc *sc = (void *)self;
	bus_space_tag_t iot;   /* bus space tag    */
	const char *intrstr;
	int unit;

	unit = sc->sc_device.dv_unit;

	if (PCI_PRODUCT(pa->pa_id) != PCI_PRODUCT_TEKRAM2_DC3X5U)
		return;

	/* 
	 * mask for get correct base address of pci IO port
	 */
	if (pci_mapreg_map(pa, PCI_MAPREG_START, PCI_MAPREG_TYPE_IO, 0,
	    &iot, &ioh, NULL, NULL, 0) != 0) {
		printf("%s: unable to map registers\n", sc->sc_device.dv_xname);
		return;
	}

	/*    
	 * test checksum of eeprom & initial "ACB" adapter control block
	 */
	sc->sc_iotag    = iot;
	sc->sc_iohandle = ioh;
	sc->sc_dmatag   = pa->pa_dmat;

	if (trm_init(sc, unit) != 0) {
		printf("%s: trm_init failed", sc->sc_device.dv_xname);
		return;
	}

	/*
	 *  Map and establish interrupt 
	 */
	if (pci_intr_map(pa, &ih)) {
		printf("%s: couldn't map interrupt\n", sc->sc_device.dv_xname);
		return;
	}
	intrstr = pci_intr_string(pa->pa_pc, ih);

	if (pci_intr_establish(pa->pa_pc, ih, IPL_BIO, trm_Interrupt, sc,
	    sc->sc_device.dv_xname) == NULL) {
		printf("\n%s: couldn't establish interrupt", sc->sc_device.dv_xname);
		if (intrstr != NULL)
			printf(" at %s", intrstr);
		printf("\n");
	} else { 
		if (intrstr != NULL)
			printf(": %s\n", intrstr);

		bzero(&saa, sizeof(saa));
		saa.saa_sc_link = &sc->sc_link;

		/* Tell SCSI layer about our SCSI bus */
		config_found(&sc->sc_device, &saa, scsiprint);
	}
}
@


1.3
log
@Remove zeroref here too; spotted by naddy@@
@
text
@d1 1
a1 1
/*	$OpenBSD: trm_pci.c,v 1.2 2005/08/09 04:10:13 mickey Exp $
d103 1
d156 3
d160 1
a160 1
		config_found(&sc->sc_device, &sc->sc_link, scsiprint);
@


1.2
log
@do not set PCI_COMMAND_MASTER_ENABLE explicitly as it's already set in pcisubmatch(); kettenis@@ testing; brad@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: trm_pci.c,v 1.1 2002/02/18 01:55:30 krw Exp $
a65 1
	NULL			/* ZeroRef */
@


1.1
log
@Add trm - driver for Tekram TRM-S1040 cards (DC395U/UW/F,DC315/U).

Thanks to Tekram for donating a couple of cards and a NetBSD driver by
Erich Chen of Tekram. Thanks to Martin Akesson for a first port of the
NetBSD driver to OpenBSD and thanks to Ashley Martens for the major
cleanup to make it presentable and style(9)ish.

Only tested on i386 at this time.
@
text
@d1 1
a1 1
/*	$OpenBSD$
a108 1
	pcireg_t command;
a111 9

	/*
	 * These cards do not allow memory mapped accesses.
	 * pa_pc:  chipset tag
	 * pa_tag: pci tag
	 */
	command = pci_conf_read(pa->pa_pc, pa->pa_tag, PCI_COMMAND_STATUS_REG);
	command |= PCI_COMMAND_IO_ENABLE | PCI_COMMAND_MASTER_ENABLE;
	pci_conf_write(pa->pa_pc, pa->pa_tag, PCI_COMMAND_STATUS_REG, command);
@


1.1.6.1
log
@Sync UBC branch to -current
@
text
@@

