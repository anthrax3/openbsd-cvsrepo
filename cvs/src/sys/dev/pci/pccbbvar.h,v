head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.30
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.28
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.26
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.14
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.22
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.20
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.18
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.16
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.12
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.10
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.8
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.6
	OPENBSD_5_0:1.16.0.4
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.13.0.10
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.6
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.4
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.2
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.12.0.4
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.2
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.10
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.6
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	SMP:1.5.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.16
date	2010.09.06.18.34.34;	author kettenis;	state Exp;
branches;
next	1.15;

1.15
date	2010.01.13.09.10.33;	author jsg;	state Exp;
branches;
next	1.14;

1.14
date	2009.07.25.11.27.26;	author kettenis;	state Exp;
branches;
next	1.13;

1.13
date	2007.11.30.08.12.00;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2006.10.12.16.35.51;	author grange;	state Exp;
branches;
next	1.11;

1.11
date	2006.06.21.11.27.03;	author fkr;	state Exp;
branches;
next	1.10;

1.10
date	2006.04.02.23.29.05;	author brad;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.02.18.20.01;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2005.09.23.22.55.12;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2004.07.14.21.54.19;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.59;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.01.02.19.46;	author mickey;	state Exp;
branches
	1.5.2.1
	1.5.6.1;
next	1.4;

1.4
date	2001.01.27.04.44.20;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.25.00.04.59;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.06.19.49.11;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.08.05.50.51;	author aaron;	state Exp;
branches;
next	;

1.5.2.1
date	2001.05.14.22.25.52;	author niklas;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2001.07.04.10.42.45;	author niklas;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2002.03.28.15.35.58;	author niklas;	state Exp;
branches;
next	;

1.5.6.1
date	2002.06.11.03.42.26;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Save and restore pci config space registers common to all PCI-CardBus
bridges when we do suspend and resume.

ok deraadt@@
@
text
@/*	$OpenBSD: pccbbvar.h,v 1.15 2010/01/13 09:10:33 jsg Exp $	*/
/*	$NetBSD: pccbbvar.h,v 1.13 2000/06/08 10:28:29 haya Exp $	*/
/*
 * Copyright (c) 1999 HAYAKAWA Koichi.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* require sys/device.h */
/* require sys/queue.h */
/* require sys/callout.h */
/* require dev/ic/i82365reg.h */
/* require dev/ic/i82365var.h */

#ifndef _DEV_PCI_PCCBBVAR_H_
#define	_DEV_PCI_PCCBBVAR_H_

#include <sys/timeout.h>

#define	PCIC_FLAG_SOCKETP	0x0001
#define	PCIC_FLAG_CARDP		0x0002

/* Chipset ID */
#define	CB_UNKNOWN	0	/* NOT Cardbus-PCI bridge */
#define	CB_TI113X	1	/* TI PCI1130/1131 */
#define	CB_TI12XX	2	/* TI PCI1250/1220 */
#define	CB_RX5C47X	3	/* RICOH RX5C475/476/477 */
#define	CB_RX5C46X	4	/* RICOH RX5C465/466/467 */
#define	CB_TOPIC95	5	/* Toshiba ToPIC95 */
#define	CB_TOPIC95B	6	/* Toshiba ToPIC95B */
#define	CB_TOPIC97	7	/* Toshiba ToPIC97 */
#define	CB_CIRRUS	8	/* Cirrus Logic CL-PD683X */
#define	CB_TI125X	9	/* TI PCI1250/1251(B)/1450 */
#define	CB_OLDO2MICRO	10	/* O2Micro */
#define	CB_CHIPS_LAST	11	/* Sentinel */

#define PCCARD_VCC_UKN		0x00	/* Unknown */
#define PCCARD_VCC_5V		0x01
#define PCCARD_VCC_3V		0x02
#define PCCARD_VCC_XV		0x04
#define PCCARD_VCC_YV		0x08

#if 0
static char *cb_chipset_name[CB_CHIPS_LAST] = {
	"unknown", "TI 113X", "TI 12XX", "RF5C47X", "RF5C46X", "ToPIC95",
	"ToPIC95B", "ToPIC97", "CL-PD 683X", "TI 125X",
};
#endif

struct pccbb_softc;
struct pccbb_intrhand_list;


struct cbb_pcic_handle {
	struct device *ph_parent;
	bus_space_tag_t ph_base_t;
	bus_space_handle_t ph_base_h;
	u_int8_t (*ph_read)(struct cbb_pcic_handle *, int);
	void (*ph_write)(struct cbb_pcic_handle *, int, u_int8_t);
	int sock;

	int vendor;
	int flags;
	int memalloc;
	struct {
		bus_addr_t addr;
		bus_size_t size;
		long offset;
		int kind;
	} mem[PCIC_MEM_WINS];
	int ioalloc;
	struct {
		bus_addr_t addr;
		bus_size_t size;
		int width;
	} io[PCIC_IO_WINS];
	int ih_irq;
	struct device *pcmcia;

	int shutdown;
};

struct pccbb_win_chain {
	bus_addr_t wc_start;		/* Caution: region [start, end], */
	bus_addr_t wc_end;		/* instead of [start, end). */
	int wc_flags;
	bus_space_handle_t wc_handle;
	TAILQ_ENTRY(pccbb_win_chain) wc_list;
};
#define	PCCBB_MEM_CACHABLE	1

TAILQ_HEAD(pccbb_win_chain_head, pccbb_win_chain);

struct pccbb_softc {
	struct device sc_dev;
	bus_space_tag_t sc_iot;
	bus_space_tag_t sc_memt;
	bus_dma_tag_t sc_dmat;

	rbus_tag_t sc_rbus_iot;		/* rbus for i/o donated from parent */
	rbus_tag_t sc_rbus_memt;	/* rbus for mem donated from parent */

	bus_space_tag_t sc_base_memt;
	bus_space_handle_t sc_base_memh;

	struct timeout sc_ins_tmo;
	void *sc_ih;			/* interrupt handler */
	int sc_intrline;		/* interrupt line */
	pcitag_t sc_intrtag;		/* copy of pa->pa_intrtag */
	pci_intr_pin_t sc_intrpin;	/* copy of pa->pa_intrpin */
	int sc_function;
	u_int32_t sc_flags;
#define	CBB_CARDEXIST	0x01
#define	CBB_INSERTING	0x01000000
#define	CBB_16BITCARD	0x04
#define	CBB_32BITCARD	0x08

	pci_chipset_tag_t sc_pc;
	pcitag_t sc_tag;
	pcireg_t sc_id;
	int sc_chipset;			/* chipset id */
	int sc_ints_on;

	pcireg_t sc_csr;
	pcireg_t sc_bhlcr;
	pcireg_t sc_int;

	pcireg_t sc_sockbase;		/* Socket base register */
	pcireg_t sc_busnum;		/* bus number */

	pcireg_t sc_sysctrl;
	pcireg_t sc_cbctrl;
	pcireg_t sc_mfunc;

	/* CardBus stuff */
	struct cardslot_softc *sc_csc;

	struct pccbb_win_chain_head sc_memwindow;
	struct pccbb_win_chain_head sc_iowindow;

	pcireg_t sc_membase[2];
	pcireg_t sc_memlimit[2];
	pcireg_t sc_iobase[2];
	pcireg_t sc_iolimit[2];

	/* pcmcia stuff */
	struct pcic_handle sc_pcmcia_h;
	pcmcia_chipset_tag_t sc_pct;
	int sc_pcmcia_flags;
#define	PCCBB_PCMCIA_IO_RELOC	0x01	/* IO addr relocatable stuff exists */
#define	PCCBB_PCMCIA_MEM_32	0x02	/* 32-bit memory address ready */
#define	PCCBB_PCMCIA_16BITONLY	0x04	/* 32-bit mode disable */

	struct proc *sc_event_thread;
	SIMPLEQ_HEAD(, pcic_event) sc_events;

	/* interrupt handler list on the bridge */
	struct pccbb_intrhand_list *sc_pil;
	int sc_pil_intr_enable;	/* can i call intr handler for child device? */
};

/*
 * struct pccbb_intrhand_list holds interrupt handler and argument for
 * child devices.
 */

struct pccbb_intrhand_list {
	int (*pil_func)(void *);
	void *pil_arg;
	int pil_level;
	struct evcount pil_count;
	struct pccbb_intrhand_list *pil_next;
};

#endif /* _DEV_PCI_PCCBBREG_H_ */
@


1.15
log
@As per NetBSD move HAYAKAWA Koichi's licenses to two clause.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.14 2009/07/25 11:27:26 kettenis Exp $	*/
d142 4
d149 4
d158 5
@


1.14
log
@Stop using rbus to set up the socket BAR if it has been left unitialized
by the firmware; our PCI code takes care of this now.  Also eliminate
support for I/O socket BARs.  There is no evidence they actually exist.
Clean up some unused structure members while there.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.13 2007/11/30 08:12:00 miod Exp $	*/
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by HAYAKAWA Koichi.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.13
log
@Skip the sanity test introduced in r1.50 on TI devices, as it gets triggered
with valid devices.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.12 2006/10/12 16:35:51 grange Exp $	*/
a139 1
#define	CBB_MEMHMAPPED	0x02000000
a145 5

	bus_addr_t sc_mem_start;	/* CardBus/PCMCIA memory start */
	bus_addr_t sc_mem_end;		/* CardBus/PCMCIA memory end */
	bus_addr_t sc_io_start;		/* CardBus/PCMCIA io start */
	bus_addr_t sc_io_end;		/* CardBus/PCMCIA io end */
@


1.12
log
@Add a symbolic name parameter to cardbus_intr_establish().
Count cardbus devices interrupts in cbb(4) using evcount(9).

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.11 2006/06/21 11:27:03 fkr Exp $	*/
d144 1
@


1.11
log
@removal of '#ifdef rbus ... #else ...' directives, we use rbus in all
cases anyways, so we might as well remove code (the !rbus case) thats been
dead throughout the last years and just use the rbus code without ifdefs.

brad, miod "I am all for this diff"
ok deraadt, mickey
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.10 2006/04/02 23:29:05 brad Exp $	*/
d186 1
@


1.10
log
@- add pccbb_attach_hook in pccbbattach for MD initializations.
- omit arithmetics to bus_space_handle_t.
- remove use of IST_LEVEL; not defined on sparc64 and unused.

From NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.9 2005/10/02 18:20:01 fgsch Exp $	*/
a122 1
#if rbus
a124 1
#endif
@


1.9
log
@add special handling for some o2micro devices, so by instance atheros works.
adapted from similar linux change by
Aristeu Sergio Rozanski Filho <aris at cathedrallabs dot org>
via Leonardo Chiquitto Filho <leonardo at iken dot com dot br>.
test compiled by pedro@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.8 2005/09/23 22:55:12 fgsch Exp $	*/
d142 1
@


1.8
log
@complete rearrange and spaces. makes this readable. no binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.7 2004/07/14 21:54:19 mickey Exp $	*/
d57 2
a58 1
#define	CB_CHIPS_LAST	10	/* Sentinel */
@


1.7
log
@tweaks for ti12xx bridges; from freebsd via rees@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.6 2002/03/14 01:26:59 millert Exp $ */
d58 6
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.5 2001/05/01 02:19:46 mickey Exp $ */
d56 2
a57 1
#define	CB_CHIPS_LAST	9	/* Sentinel */
d62 1
a62 1
	"ToPIC95B", "ToPIC97", "CL-PD 683X",
@


1.5
log
@restore socket base addr and bus number on resume; from netbsd
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.4 2001/01/27 04:44:20 mickey Exp $ */
d73 2
a74 2
	u_int8_t (*ph_read) __P((struct cbb_pcic_handle *, int));
	void (*ph_write) __P((struct cbb_pcic_handle *, int, u_int8_t));
d176 1
a176 1
	int (*pil_func) __P((void *));
@


1.5.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.5 2001/05/01 02:19:46 mickey Exp $ */
d73 2
a74 2
	u_int8_t (*ph_read)(struct cbb_pcic_handle *, int);
	void (*ph_write)(struct cbb_pcic_handle *, int, u_int8_t);
d176 1
a176 1
	int (*pil_func)(void *);
@


1.5.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d145 3
@


1.5.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.5.2.1 2001/05/14 22:25:52 niklas Exp $ */
a143 3

	pcireg_t sc_sockbase;		/* Socket base register */
	pcireg_t sc_busnum;		/* bus number */
@


1.5.2.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d73 2
a74 2
	u_int8_t (*ph_read)(struct cbb_pcic_handle *, int);
	void (*ph_write)(struct cbb_pcic_handle *, int, u_int8_t);
d176 1
a176 1
	int (*pil_func)(void *);
@


1.4
log
@introduce and use a flag indicating that interrupts are
enabled for this cbb. essentially this means that cbb
driver has completed it's initialization and is
ready to treat interrupts. this was exposed by
ccb's sharing their interrupt and pccbbintr() being called
for cbb which has not completed attachment due
to interrupt sharing.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.3 2000/07/25 00:04:59 mickey Exp $ */
d144 3
@


1.3
log
@convert to new timeouts
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.2 2000/07/06 19:49:11 aaron Exp $ */
d138 1
@


1.2
log
@Sync with NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: pccbbvar.h,v 1.1 2000/04/08 05:50:51 aaron Exp $ */
d41 2
d123 1
@


1.1
log
@Initial check-in for support of 32-bit CardBus PC Cards; from NetBSD. On many
machines, this code needs the new PCIBIOS* options enabled in the kernel config
file to work, but your mileage may vary. Included is a working 3c575 driver for
3Com 10/100 CardBus PC Card NICs (tested only with the 'C' revision). The 3c575
is the pccard version of the PCI EtherLink XL cards, and thus the xl driver has
been split into /sys/dev/ic.
@
text
@d1 2
a2 2
/*	$OpenBSD$ */
/*	$NetBSD: pccbbvar.h,v 1.12 2000/03/23 07:01:40 thorpej Exp $	*/
d171 1
@

