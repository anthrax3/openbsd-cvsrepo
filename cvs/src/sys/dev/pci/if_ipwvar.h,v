head	1.28;
access;
symbols
	OPENBSD_6_2_BASE:1.28
	OPENBSD_6_1:1.28.0.4
	OPENBSD_6_1_BASE:1.28
	OPENBSD_6_0:1.25.0.6
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.2
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.24.0.6
	OPENBSD_5_8_BASE:1.24
	OPENBSD_5_7:1.24.0.4
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.23.0.6
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.23.0.4
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.21.0.12
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.21.0.10
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.8
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.6
	OPENBSD_5_0:1.21.0.4
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.21.0.2
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.20.0.2
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.18.0.4
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.18.0.6
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.2
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.17.0.2
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.15.0.2
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.14.0.6
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.4
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.2
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.12.0.4
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12;
locks; strict;
comment	@ * @;


1.28
date	2016.09.05.10.17.30;	author tedu;	state Exp;
branches;
next	1.27;
commitid	v4TVMbg1eTRYG0ph;

1.27
date	2016.09.05.09.59.20;	author kettenis;	state Exp;
branches;
next	1.26;
commitid	uFP8u4jS9PVbGRb4;

1.26
date	2016.09.05.08.17.29;	author tedu;	state Exp;
branches;
next	1.25;
commitid	SzoxOYYWq3RWrWJ3;

1.25
date	2015.09.01.07.09.55;	author deraadt;	state Exp;
branches;
next	1.24;
commitid	VvLv8PeakqoJLqr3;

1.24
date	2014.12.19.15.19.47;	author krw;	state Exp;
branches;
next	1.23;
commitid	GR2mxyBhdCxTjnoN;

1.23
date	2013.12.06.21.03.04;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2013.11.14.12.41.14;	author dlg;	state Exp;
branches;
next	1.21;

1.21
date	2010.09.07.16.21.45;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2010.08.03.18.26.25;	author kettenis;	state Exp;
branches;
next	1.19;

1.19
date	2010.07.28.21.21.38;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2008.08.28.15.08.38;	author damien;	state Exp;
branches;
next	1.17;

1.17
date	2008.07.21.04.12.21;	author kevlo;	state Exp;
branches;
next	1.16;

1.16
date	2008.04.16.18.32.15;	author damien;	state Exp;
branches;
next	1.15;

1.15
date	2008.02.23.21.35.41;	author hshoexer;	state Exp;
branches;
next	1.14;

1.14
date	2006.08.19.12.03.05;	author damien;	state Exp;
branches;
next	1.13;

1.13
date	2006.02.26.19.14.40;	author damien;	state Exp;
branches;
next	1.12;

1.12
date	2005.03.12.13.37.49;	author damien;	state Exp;
branches;
next	1.11;

1.11
date	2005.03.12.13.31.26;	author damien;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.01.19.30.38;	author damien;	state Exp;
branches;
next	1.9;

1.9
date	2005.02.21.13.33.29;	author damien;	state Exp;
branches;
next	1.8;

1.8
date	2005.01.13.20.52.13;	author damien;	state Exp;
branches;
next	1.7;

1.7
date	2005.01.05.09.07.16;	author jsg;	state Exp;
branches;
next	1.6;

1.6
date	2004.12.21.17.29.53;	author damien;	state Exp;
branches;
next	1.5;

1.5
date	2004.12.05.17.46.07;	author damien;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.18.21.02.42;	author damien;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.27.21.21.16;	author damien;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.27.21.17.18;	author damien;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.20.12.50.48;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.28
log
@redo rwlock conversion now that i've compiled it on i386
@
text
@/*	$OpenBSD: if_ipwvar.h,v 1.27 2016/09/05 09:59:20 kettenis Exp $	*/

/*-
 * Copyright (c) 2004-2006
 *      Damien Bergamini <damien.bergamini@@free.fr>. All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

struct ipw_firmware {
	u_char	*data;
	size_t	size;
	u_char	*main;
	size_t	main_size;
	u_char	*ucode;
	size_t	ucode_size;
};

struct ipw_soft_bd {
	struct ipw_bd	*bd;
	int		type;
#define IPW_SBD_TYPE_NOASSOC	0
#define IPW_SBD_TYPE_COMMAND	1
#define IPW_SBD_TYPE_HEADER	2
#define IPW_SBD_TYPE_DATA	3
	void		*priv;
};

struct ipw_soft_hdr {
	struct ipw_hdr			hdr;
	bus_dmamap_t			map;
	SLIST_ENTRY(ipw_soft_hdr)	next;
};

struct ipw_soft_buf {
	struct mbuf			*m;
	struct ieee80211_node		*ni;
	bus_dmamap_t			map;
	SLIST_ENTRY(ipw_soft_buf)	next;
};

struct ipw_rx_radiotap_header {
	struct ieee80211_radiotap_header wr_ihdr;
	uint8_t		wr_flags;
	uint16_t	wr_chan_freq;
	uint16_t	wr_chan_flags;
	uint8_t		wr_antsignal;
} __packed;

#define IPW_RX_RADIOTAP_PRESENT						\
	((1 << IEEE80211_RADIOTAP_FLAGS) |				\
	 (1 << IEEE80211_RADIOTAP_CHANNEL) |				\
	 (1 << IEEE80211_RADIOTAP_DB_ANTSIGNAL))

struct ipw_tx_radiotap_header {
	struct ieee80211_radiotap_header wt_ihdr;
	uint8_t		wt_flags;
	uint16_t	wt_chan_freq;
	uint16_t	wt_chan_flags;
} __packed;

#define IPW_TX_RADIOTAP_PRESENT						\
	((1 << IEEE80211_RADIOTAP_FLAGS) |				\
	 (1 << IEEE80211_RADIOTAP_CHANNEL))

#define IPW_MAX_NSEG	1

struct ipw_softc {
	struct device			sc_dev;

	struct ieee80211com		sc_ic;
	int				(*sc_newstate)(struct ieee80211com *,
					    enum ieee80211_state, int);

	struct rwlock			sc_rwlock;

	bus_space_tag_t			sc_st;
	bus_space_handle_t		sc_sh;
	void 				*sc_ih;
	pci_chipset_tag_t		sc_pct;
	pcitag_t			sc_pcitag;
	bus_size_t			sc_sz;

	int				sc_tx_timer;

	bus_dma_tag_t			sc_dmat;

	bus_dmamap_t			tbd_map;
	bus_dmamap_t			rbd_map;
	bus_dmamap_t			status_map;
	bus_dmamap_t			cmd_map;

	bus_dma_segment_t		tbd_seg;
	bus_dma_segment_t		rbd_seg;
	bus_dma_segment_t		status_seg;
	bus_dma_segment_t		cmd_seg;

	struct ipw_bd			*tbd_list;
	struct ipw_bd			*rbd_list;
	struct ipw_status		*status_list;

	struct ipw_cmd			cmd;
	struct ipw_soft_bd		stbd_list[IPW_NTBD];
	struct ipw_soft_buf		tx_sbuf_list[IPW_NDATA];
	struct ipw_soft_hdr		shdr_list[IPW_NDATA];
	struct ipw_soft_bd		srbd_list[IPW_NRBD];
	struct ipw_soft_buf		rx_sbuf_list[IPW_NRBD];

	struct task			sc_scantask;
	struct task			sc_authandassoctask;

	SLIST_HEAD(, ipw_soft_hdr)	free_shdr;
	SLIST_HEAD(, ipw_soft_buf)	free_sbuf;

	uint32_t			table1_base;
	uint32_t			table2_base;

	uint32_t			txcur;
	uint32_t			txold;
	uint32_t			rxcur;
	int				txfree;

#if NBPFILTER > 0
	caddr_t				sc_drvbpf;

	union {
		struct ipw_rx_radiotap_header th;
		uint8_t	pad[64];
	} sc_rxtapu;
#define sc_rxtap	sc_rxtapu.th
	int				sc_rxtap_len;

	union {
		struct ipw_tx_radiotap_header th;
		uint8_t	pad[64];
	} sc_txtapu;
#define sc_txtap	sc_txtapu.th
	int				sc_txtap_len;
#endif
};
@


1.27
log
@Backout previous commit; does not compile.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.26 2016/09/05 08:17:29 tedu Exp $	*/
d85 1
a85 3
	uint32_t			sc_flags;
#define IPW_FLAG_FW_INITED	(1 << 0)
#define IPW_FLAG_BUSY		(1 << 1)
@


1.26
log
@convert busy flag and tsleep to rwlock as in iwm
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.25 2015/09/01 07:09:55 deraadt Exp $	*/
d85 3
a87 1
	struct rwlock			sc_rwlock;
@


1.25
log
@sizes for free(), mostly related to firmwares.
ok dlg
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.24 2014/12/19 15:19:47 krw Exp $	*/
d85 1
a85 3
	uint32_t			sc_flags;
#define IPW_FLAG_FW_INITED	(1 << 0)
#define IPW_FLAG_BUSY		(1 << 1)
@


1.24
log
@Change scan and auth+assoc workq entries to taskq entries.

Identical diff originally and independently developed by blambert@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.23 2013/12/06 21:03:04 deraadt Exp $	*/
d22 1
@


1.23
log
@Add a DVACT_WAKEUP op to the *_activate() API.  This is called after the
kernel resumes normal (non-cold, able to run processes, etc) operation.
Previously we were relying on specific DVACT_RESUME op's in drivers
creating callback/threads themselves, but that has become too common,
indicating the need for a built-in mechanism.
ok dlg kettenis, tested by a sufficient amount of people
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.22 2013/11/14 12:41:14 dlg Exp $	*/
d119 3
@


1.22
log
@replace workqs with tasks for handling resume. state handling is
still in workqs.

from kimberley manning
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.21 2010/09/07 16:21:45 deraadt Exp $	*/
a129 2

	struct task			sc_resume_t;
@


1.21
log
@remove the powerhook code.  All architectures now use the ca_activate tree
traversal code to suspend/resume
ok oga kettenis blambert
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.20 2010/08/03 18:26:25 kettenis Exp $	*/
d131 1
a131 1
	struct workq_task		sc_resume_wqt;
@


1.20
log
@Bring the suspend/resume code of all the Intel wireless drivers in line with
iwn(4) again.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.19 2010/07/28 21:21:38 deraadt Exp $	*/
a130 1
	void				*powerhook;
@


1.19
log
@Make legacy xxpower() functions call xxstop() on suspend, and simplify their
resume paths.  For new-style suspend/resume, add a ca_activate function where
it is missing, and use a workq to resume because these drivers like to sleep.
ok damien
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.18 2008/08/28 15:08:38 damien Exp $	*/
d84 1
a84 1
	uint32_t			flags;
d86 1
@


1.18
log
@i've lost the IF_PURGE() bits in the process...
use license.template while i'm here.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.17 2008/07/21 04:12:21 kevlo Exp $	*/
d131 1
@


1.17
log
@cleanup - we don't have resource structure
ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.16 2008/04/16 18:32:15 damien Exp $	*/
d7 3
a9 9
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice unmodified, this list of conditions, and the following
 *    disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d11 7
a17 11
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
@


1.16
log
@Kernel implementation of the 4-way handshake and group-key
handshake protocols (both supplicant and authenticator state
machines) as defined in the IEEE 802.11i standard.

Software implementation of the TKIP (Temporal Key Integrity
Protocol) and CCMP (CTR with CBC-MAC Protocol) protocols.

This diff doesn't implement any of the 802.1X authentication
protocols and thus only PSK authentication (using pre-shared
keys) is currently supported.

In concrete terms, this adds support for WPA-PSK and WPA2-PSK
protocols, both in station and hostap modes.

The following drivers are marked as WPA-capable and should
work:  bwi(4), malo(4), ral(4), iwn(4), wpi(4), ural(4),
rum(4), upgt(4), and zyd(4)

The following options have been added to ifconfig(8):
wpa, wpapsk, wpaprotos, wpaakms, wpaciphers, wpagroupcipher

wpa-psk(8) can be used to generate keys from passphrases.

tested by many@@
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.15 2008/02/23 21:35:41 hshoexer Exp $	*/
a96 2
	struct resource			*irq;
	struct resource			*mem;
@


1.15
log
@forgot that one when committing the if_ipw.c memleak fix.  Hopefully
unbreaks the tree.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.14 2006/08/19 12:03:05 damien Exp $	*/
a160 2

	void				*fw_data;
@


1.14
log
@get rid of shared auth mode.
the ioctl is not supported by ifconfig and it has never worked anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.13 2006/02/26 19:14:40 damien Exp $	*/
d161 2
@


1.13
log
@prettify + u_int{8,16,32}_t -> uint{8,16,32}_t
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.12 2005/03/12 13:37:49 damien Exp $	*/
a104 2

	int				authmode;
@


1.12
log
@prevent fragmentation from happening.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.10 2005/03/01 19:30:38 damien Exp $	*/
d4 1
a4 1
 * Copyright (c) 2004, 2005
d63 4
a66 4
	u_int8_t	wr_flags;
	u_int16_t	wr_chan_freq;
	u_int16_t	wr_chan_flags;
	u_int8_t	wr_antsignal;
d76 3
a78 3
	u_int8_t	wt_flags;
	u_int16_t	wt_chan_freq;
	u_int16_t	wt_chan_flags;
d94 1
a94 1
	u_int32_t			flags;
d136 2
a137 2
	u_int32_t			table1_base;
	u_int32_t			table2_base;
d139 3
a141 3
	u_int32_t			txcur;
	u_int32_t			txold;
	u_int32_t			rxcur;
d151 1
a151 1
		u_int8_t	pad[64];
d158 1
a158 1
		u_int8_t	pad[64];
@


1.11
log
@s/__attribute__((__packed__))/__packed/
@
text
@d85 1
a85 1
#define IPW_MAX_NSEG	6
@


1.10
log
@make sure radiotap structures are packed.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.9 2005/02/21 13:33:29 damien Exp $	*/
d67 1
a67 1
} __attribute__((__packed__));
d79 1
a79 1
} __attribute__((__packed__));
@


1.9
log
@ipwcontrol and iwicontrol removal.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.8 2005/01/13 20:52:13 damien Exp $	*/
d67 1
a67 1
};
d79 1
a79 1
};
@


1.8
log
@fix a critical bug that made the kernel crash under heavy upstream traffic
load. pointed out by jcs@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ipwvar.h,v 1.7 2005/01/05 09:07:16 jsg Exp $	*/
a163 3

#define SIOCGRADIO	_IOWR('i', 139, struct ifreq)
#define SIOCGTABLE1	_IOWR('i', 140, struct ifreq)
@


1.7
log
@Use $OpenBSD$ instead of $Id$. ok damien@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 2004
a140 1
	u_int32_t			txfree;
d142 1
@


1.6
log
@add powerhooks
OK claudio@@ kevlo@@ deraadt@@
@
text
@d1 1
a1 1
/*      $Id: if_ipwvar.h,v 1.5 2004/12/05 17:46:07 damien Exp $ */
@


1.5
log
@Clean Tx/Rx rings allocation and management.
@
text
@d1 1
a1 1
/*      $Id: if_ipwvar.h,v 1.4 2004/11/18 21:02:42 damien Exp $ */
d103 1
d143 2
@


1.4
log
@use the filesystem based firmware loader; deraadt ok
@
text
@d1 1
a1 1
/*      $Id: if_ipwvar.h,v 1.3 2004/10/27 21:21:16 damien Exp $ */
d51 1
a51 1
	TAILQ_ENTRY(ipw_soft_hdr)	next;
d58 1
a58 1
	TAILQ_ENTRY(ipw_soft_buf)	next;
d85 2
d125 6
a130 6
	struct ipw_cmd			*cmd;
	struct ipw_soft_bd		*stbd_list;
	struct ipw_soft_bd		*srbd_list;
	struct ipw_soft_hdr		*shdr_list;
	struct ipw_soft_buf		*tx_sbuf_list;
	struct ipw_soft_buf		*rx_sbuf_list;
d132 2
a133 2
	TAILQ_HEAD(, ipw_soft_hdr)	sc_free_shdr;
	TAILQ_HEAD(, ipw_soft_buf)	sc_free_sbuf;
d140 1
@


1.3
log
@Cache firmware into kernel memory instead of sending it directly. The
firmware is now sent only when the interface is turned up.
This paves the way for proper suspend/resume support.
@
text
@d1 1
a1 1
/*      $Id: if_ipwvar.h,v 1.2 2004/10/27 21:17:18 damien Exp $ */
d31 5
a35 4
	void	*main;
	int	main_size;
	void	*ucode;
	int	ucode_size;
a91 1
	struct ipw_firmware		fw;
d93 1
a93 2
#define IPW_FLAG_FW_CACHED	(1 << 0)
#define IPW_FLAG_FW_INITED	(1 << 1)
a158 2
#define SIOCSLOADFW	 _IOW('i', 137, struct ifreq)
#define SIOCSKILLFW	 _IOW('i', 138, struct ifreq)
@


1.2
log
@Add authmode support (imported from iwi).
@
text
@d1 1
a1 1
/*      $Id: if_ipwvar.h,v 1.1 2004/10/20 12:50:48 deraadt Exp $ */
d30 7
d91 1
d93 2
a94 1
#define IPW_FLAG_FW_INITED	(1 << 0)
@


1.1
log
@support for Intel 2100/2200BG/2915ABG wireless devices written by
damien.bergamini@@free.fr. This gets imported even though there is no
firmware in the tree.  This is a ridiculous situation: everything is
free, everything works, except Intel will not let us put a little
dinky firmware flat file into OpenBSD.  So OpenBSD is ready for Intel
whenever they are.

Are you a consumer?  Do you want to see this changed -- contact
jketreno@@linux.intel.com and tell him how you feel about this.  He is
likely someone who cannot do anything about it, though.  If anyone can
work up or down the chain around his department and get me contact
information for various people, I will compile and later publish such
a list.  Go do it people -- this is how things will change.  Get me
email addresses and phone numbers.
@
text
@d1 1
a1 1
/*      $Id: if_ipwvar.h,v 1.4 2004/09/05 14:48:03 damien Exp $ */
d94 2
@

