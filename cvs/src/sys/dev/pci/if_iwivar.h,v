head	1.26;
access;
symbols
	OPENBSD_6_0:1.25.0.14
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.2
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.25.0.10
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.25.0.8
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.25.0.6
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.25.0.4
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.23.0.12
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.23.0.10
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.23.0.8
	OPENBSD_5_2_BASE:1.23
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.6
	OPENBSD_5_0:1.23.0.4
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.23.0.2
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.22.0.2
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.4
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.19.0.2
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.18.0.10
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.8
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.6
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.18.0.4
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.2
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9;
locks; strict;
comment	@ * @;


1.26
date	2016.09.05.08.17.48;	author tedu;	state Exp;
branches;
next	1.25;
commitid	a7moayKlo9ztd3AK;

1.25
date	2013.12.03.22.37.24;	author kettenis;	state Exp;
branches;
next	1.24;

1.24
date	2013.11.14.12.39.14;	author dlg;	state Exp;
branches;
next	1.23;

1.23
date	2010.09.07.16.21.45;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2010.08.03.18.26.25;	author kettenis;	state Exp;
branches;
next	1.21;

1.21
date	2010.07.28.21.21.38;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2009.06.05.22.40.31;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2008.08.28.15.52.20;	author damien;	state Exp;
branches;
next	1.18;

1.18
date	2006.08.19.12.03.05;	author damien;	state Exp;
branches;
next	1.17;

1.17
date	2006.04.01.15.36.01;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.01.01.04.40;	author pedro;	state Exp;
branches;
next	1.15;

1.15
date	2006.03.31.17.18.37;	author pedro;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.27.20.46.35;	author damien;	state Exp;
branches;
next	1.13;

1.13
date	2006.02.26.19.14.40;	author damien;	state Exp;
branches;
next	1.12;

1.12
date	2005.09.19.20.01.12;	author damien;	state Exp;
branches;
next	1.11;

1.11
date	2005.07.07.07.55.19;	author kevlo;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.04.16.37.07;	author damien;	state Exp;
branches;
next	1.9;

1.9
date	2005.03.12.13.31.26;	author damien;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.01.19.30.38;	author damien;	state Exp;
branches;
next	1.7;

1.7
date	2005.02.21.13.33.29;	author damien;	state Exp;
branches;
next	1.6;

1.6
date	2005.01.09.16.47.50;	author damien;	state Exp;
branches;
next	1.5;

1.5
date	2005.01.05.09.07.16;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2004.12.21.17.29.54;	author damien;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.04.17.24.06;	author damien;	state Exp;
branches;
next	1.2;

1.2
date	2004.11.22.21.34.35;	author damien;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.20.12.50.48;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.26
log
@convert busy flag and tsleep to rwlock as in iwm
@
text
@/*	$OpenBSD: if_iwivar.h,v 1.25 2013/12/03 22:37:24 kettenis Exp $	*/

/*-
 * Copyright (c) 2004-2006
 *      Damien Bergamini <damien.bergamini@@free.fr>. All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

struct iwi_rx_radiotap_header {
	struct ieee80211_radiotap_header wr_ihdr;
	uint8_t		wr_flags;
	uint8_t		wr_rate;
	uint16_t	wr_chan_freq;
	uint16_t	wr_chan_flags;
	uint8_t		wr_antsignal;
	uint8_t		wr_antenna;
} __packed;

#define IWI_RX_RADIOTAP_PRESENT						\
	((1 << IEEE80211_RADIOTAP_FLAGS) |				\
	 (1 << IEEE80211_RADIOTAP_RATE) |				\
	 (1 << IEEE80211_RADIOTAP_CHANNEL) |				\
	 (1 << IEEE80211_RADIOTAP_DB_ANTSIGNAL) |			\
	 (1 << IEEE80211_RADIOTAP_ANTENNA))

struct iwi_tx_radiotap_header {
	struct ieee80211_radiotap_header wt_ihdr;
	uint8_t		wt_flags;
	uint16_t	wt_chan_freq;
	uint16_t	wt_chan_flags;
} __packed;

#define IWI_TX_RADIOTAP_PRESENT						\
	((1 << IEEE80211_RADIOTAP_FLAGS) |				\
	 (1 << IEEE80211_RADIOTAP_CHANNEL))


struct iwi_cmd_ring {
	bus_dmamap_t		map;
	bus_dma_segment_t	seg;
	struct iwi_cmd_desc	*desc;
	int			queued;
	int			cur;
	int			next;
};

struct iwi_tx_data {
	bus_dmamap_t		map;
	struct mbuf		*m;
	struct ieee80211_node	*ni;
};

struct iwi_tx_ring {
	bus_dmamap_t		map;
	bus_dma_segment_t	seg;
	bus_size_t		csr_ridx;
	bus_size_t		csr_widx;
	struct iwi_tx_desc	*desc;
	struct iwi_tx_data	data[IWI_TX_RING_COUNT];
	int			queued;
	int			cur;
	int			next;
};

struct iwi_rx_data {
	bus_dmamap_t		map;
	struct mbuf		*m;
	uint32_t		reg;
};

struct iwi_rx_ring {
	struct iwi_rx_data	data[IWI_RX_RING_COUNT];
	int			cur;
};

struct iwi_softc {
	struct device		sc_dev;

	struct ieee80211com	sc_ic;
	int			(*sc_newstate)(struct ieee80211com *,
				    enum ieee80211_state, int);

	struct rwlock		sc_rwlock;

	bus_dma_tag_t		sc_dmat;

	struct iwi_cmd_ring	cmdq;
	struct iwi_tx_ring	txq[4];
	struct iwi_rx_ring	rxq;

#define IWI_MAX_NODE	32
	uint8_t			sta[IWI_MAX_NODE][IEEE80211_ADDR_LEN];
	uint8_t			nsta;

	bus_space_tag_t		sc_st;
	bus_space_handle_t	sc_sh;
	void 			*sc_ih;
	pci_chipset_tag_t	sc_pct;
	pcitag_t		sc_pcitag;
	bus_size_t		sc_sz;

	struct task		init_task;

	int			sc_tx_timer;

#if NBPFILTER > 0
	caddr_t			sc_drvbpf;

	union {
		struct iwi_rx_radiotap_header th;
		uint8_t	pad[64];
	} sc_rxtapu;
#define sc_rxtap	sc_rxtapu.th
	int			sc_rxtap_len;

	union {
		struct iwi_tx_radiotap_header th;
		uint8_t	pad[64];
	} sc_txtapu;
#define sc_txtap	sc_txtapu.th
	int			sc_txtap_len;
#endif
};
@


1.25
log
@Seems we simply have to live with fatal firmware errors.  Even Linux, with its
driver written by Intel engineers occasionally gets them.  So when we get one,
simply reset the chip, reload the firware and bring the interface up again.

Tested by naddy@@, who unfortunately is experiencing the quantum zeno effect
making his iwi(4) not crap out.
ok stsp@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.24 2013/11/14 12:39:14 dlg Exp $	*/
d94 1
a94 3
	uint32_t		sc_flags;
#define IWI_FLAG_FW_INITED	(1 << 0)
#define IWI_FLAG_BUSY		(1 << 1)
@


1.24
log
@replace workqs with tasks for handling resume

from kimberley manning
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.23 2010/09/07 16:21:45 deraadt Exp $	*/
d115 2
a117 2

	struct task		sc_resume_t;
@


1.23
log
@remove the powerhook code.  All architectures now use the ca_activate tree
traversal code to suspend/resume
ok oga kettenis blambert
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.22 2010/08/03 18:26:25 kettenis Exp $	*/
d117 1
a117 1
	struct workq_task	sc_resume_wqt;
@


1.22
log
@Bring the suspend/resume code of all the Intel wireless drivers in line with
iwn(4) again.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.21 2010/07/28 21:21:38 deraadt Exp $	*/
a116 1
	void			*powerhook;
@


1.21
log
@Make legacy xxpower() functions call xxstop() on suspend, and simplify their
resume paths.  For new-style suspend/resume, add a ca_activate function where
it is missing, and use a workq to resume because these drivers like to sleep.
ok damien
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.20 2009/06/05 22:40:31 deraadt Exp $	*/
d94 1
a94 1
	uint32_t		flags;
d96 1
@


1.20
log
@T
ariane's new allocator gave iwi dirty memory, and made a real bug fall out.
The kva was being stored in a structure hidden by a cast, but passing the
"structure" corrupts subsequent arguments to bus_dmamap_load().
group effort with ariane, kettenis, and oga.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.19 2008/08/28 15:52:20 damien Exp $	*/
d117 1
@


1.19
log
@WPA support for iwi(4).
some initial WMM bits too.
use license.template while i'm here.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.18 2006/08/19 12:03:05 damien Exp $	*/
d52 1
a52 1
	struct iwi_cmd_desc	desc[IWI_CMD_RING_COUNT];
@


1.18
log
@get rid of shared auth mode.
the ioctl is not supported by ifconfig and it has never worked anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.17 2006/04/01 15:36:01 mickey Exp $	*/
d7 3
a9 9
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice unmodified, this list of conditions, and the following
 *    disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d11 7
a17 11
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
@


1.17
log
@use proper types and not fetch iobase that is not used later; damien ok
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.16 2006/04/01 01:04:40 pedro Exp $	*/
a122 2

	int			authmode;
@


1.16
log
@Put Damien's latest changes back in, okay deraadt@@.
Please note that the driver now requires new firmware (version 3.0).
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.14 2006/03/27 20:46:35 damien Exp $	*/
d77 2
a78 2
	bus_addr_t		csr_ridx;
	bus_addr_t		csr_widx;
@


1.15
log
@Backout, causes panics
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.13 2006/02/26 19:14:40 damien Exp $	*/
d58 39
d109 3
a111 25
	struct iwi_tx_desc	*tx_desc;
	bus_dmamap_t		tx_ring_map;
	bus_dma_segment_t	tx_ring_seg;

	struct iwi_tx_buf {
		bus_dmamap_t		map;
		struct mbuf		*m;
		struct ieee80211_node	*ni;
	} tx_buf[IWI_TX_RING_SIZE];

	int			tx_cur;
	int			tx_old;
	int			tx_queued;

	struct iwi_cmd_desc	*cmd_desc;
	bus_dmamap_t		cmd_ring_map;
	bus_dma_segment_t	cmd_ring_seg;
	int			cmd_cur;

	struct iwi_rx_buf {
		bus_dmamap_t	map;
		struct mbuf	*m;
	} rx_buf[IWI_RX_RING_SIZE];

	int			rx_cur;
@


1.14
log
@- complete rework of rings allocation (do things more like ral(4))
- upgrade to firmware v3.0 layout
- enable s/w antenna diversity
- many code cleanup
@
text
@a57 39

struct iwi_cmd_ring {
	bus_dmamap_t		map;
	bus_dma_segment_t	seg;
	struct iwi_cmd_desc	desc[IWI_CMD_RING_COUNT];
	int			queued;
	int			cur;
	int			next;
};

struct iwi_tx_data {
	bus_dmamap_t		map;
	struct mbuf		*m;
	struct ieee80211_node	*ni;
};

struct iwi_tx_ring {
	bus_dmamap_t		map;
	bus_dma_segment_t	seg;
	bus_addr_t		csr_ridx;
	bus_addr_t		csr_widx;
	struct iwi_tx_desc	*desc;
	struct iwi_tx_data	data[IWI_TX_RING_COUNT];
	int			queued;
	int			cur;
	int			next;
};

struct iwi_rx_data {
	bus_dmamap_t		map;
	struct mbuf		*m;
	uint32_t		reg;
};

struct iwi_rx_ring {
	struct iwi_rx_data	data[IWI_RX_RING_COUNT];
	int			cur;
};

d70 25
a94 3
	struct iwi_cmd_ring	cmdq;
	struct iwi_tx_ring	txq[4];
	struct iwi_rx_ring	rxq;
@


1.13
log
@prettify + u_int{8,16,32}_t -> uint{8,16,32}_t
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.12 2005/09/19 20:01:12 damien Exp $	*/
d58 39
d109 3
a111 25
	struct iwi_tx_desc	*tx_desc;
	bus_dmamap_t		tx_ring_map;
	bus_dma_segment_t	tx_ring_seg;

	struct iwi_tx_buf {
		bus_dmamap_t		map;
		struct mbuf		*m;
		struct ieee80211_node	*ni;
	} tx_buf[IWI_TX_RING_SIZE];

	int			tx_cur;
	int			tx_old;
	int			tx_queued;

	struct iwi_cmd_desc	*cmd_desc;
	bus_dmamap_t		cmd_ring_map;
	bus_dma_segment_t	cmd_ring_seg;
	int			cmd_cur;

	struct iwi_rx_buf {
		bus_dmamap_t	map;
		struct mbuf	*m;
	} rx_buf[IWI_RX_RING_SIZE];

	int			rx_cur;
@


1.12
log
@o Add initial bits for IBSS support.
o Fix association with APs not broadcasting their SSIDs.
o Don't send anything if there is less than eight free slots in Tx ring.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.11 2005/07/07 07:55:19 kevlo Exp $	*/
d4 1
a4 1
 * Copyright (c) 2004, 2005
d32 6
a37 6
	u_int8_t	wr_flags;
	u_int8_t	wr_rate;
	u_int16_t	wr_chan_freq;
	u_int16_t	wr_chan_flags;
	u_int8_t	wr_antsignal;
	u_int8_t	wr_antenna;
d49 3
a51 3
	u_int8_t	wt_flags;
	u_int16_t	wt_chan_freq;
	u_int16_t	wt_chan_flags;
d65 1
a65 1
	u_int32_t		flags;
d97 2
a98 2
	u_int8_t		sta[IWI_MAX_NODE][IEEE80211_ADDR_LEN];
	u_int8_t		nsta;
d118 1
a118 1
		u_int8_t	pad[64];
d125 1
a125 1
		u_int8_t	pad[64];
@


1.11
log
@remove unused structure definitions. ok damien@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.10 2005/04/04 16:37:07 damien Exp $	*/
d95 4
@


1.10
log
@remove noise statistics. this was generating tons of useless interrupts.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.9 2005/03/12 13:31:26 damien Exp $	*/
a95 2
	struct resource		*irq;
	struct resource		*mem;
@


1.9
log
@s/__attribute__((__packed__))/__packed/
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.8 2005/03/01 19:30:38 damien Exp $	*/
a36 1
	u_int8_t	wr_antnoise;
a44 1
	 (1 << IEEE80211_RADIOTAP_DB_ANTNOISE) |			\
@


1.8
log
@make sure radiotap structures are packed.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.7 2005/02/21 13:33:29 damien Exp $	*/
d39 1
a39 1
} __attribute__((__packed__));
d54 1
a54 1
} __attribute__((__packed__));
@


1.7
log
@ipwcontrol and iwicontrol removal.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.6 2005/01/09 16:47:50 damien Exp $	*/
d39 1
a39 1
};
d54 1
a54 1
};
@


1.6
log
@- add support for 2.2 firmware
- fix rssi decoding
- implement basics for IBSS support
- decrease channel scan time from 100ms to 40ms
- cosmetic changes while i'm here
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwivar.h,v 1.5 2005/01/05 09:07:16 jsg Exp $	*/
a130 3

#define SIOCGRADIO	_IOWR('i', 139, struct ifreq)
#define SIOCGTABLE0	_IOWR('i', 140, struct ifreq)
@


1.5
log
@Use $OpenBSD$ instead of $Id$. ok damien@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 2004
d84 1
a84 1
	int			tx_free;
@


1.4
log
@add powerhooks
OK claudio@@ kevlo@@ deraadt@@
@
text
@d1 1
a1 1
/*	$Id: if_iwivar.h,v 1.3 2004/12/04 17:24:06 damien Exp $ */
@


1.3
log
@Clean DMA allocation of Tx and Rx rings
@
text
@d1 1
a1 1
/*	$Id: if_iwivar.h,v 1.2 2004/11/22 21:34:35 damien Exp $ */
d104 1
d110 2
@


1.2
log
@use the filesystem based firmware loader; ok deraadt@@
@
text
@d1 1
a1 1
/*	$Id: if_iwivar.h,v 1.1 2004/10/20 12:50:48 deraadt Exp $ */
a29 36
struct iwi_buf {
	struct mbuf		*m;
	struct ieee80211_node	*ni;
	bus_dmamap_t		map;
	TAILQ_ENTRY(iwi_buf)	next;
};

struct iwi_tx_slot {
	caddr_t		virtaddr;
	struct iwi_buf	*buf;
};

struct iwi_rx_slot {
	u_int32_t	csr;
	struct iwi_buf	*buf;
};

struct iwi_rx_queue {
	struct iwi_rx_slot	*slots;
	u_int32_t		cur;
	u_int32_t		size;
};

struct iwi_tx_queue {
	bus_dmamap_t		map;
	bus_dma_segment_t	seg;
	bus_addr_t		physaddr;
	caddr_t			virtaddr;
	struct iwi_tx_slot	*slots;
	u_int32_t		csr_read;
	u_int32_t		csr_write;
	u_int32_t		old;
	u_int32_t		cur;
	u_int32_t 		size;
};

d70 27
a96 2
	struct iwi_tx_queue	txqueue[5];
	struct iwi_rx_queue	rxqueue;
a109 6
	bus_dma_tag_t		sc_dmat;

	struct iwi_buf		*buf_list;
	int			nbuf;
	TAILQ_HEAD(, iwi_buf)	sc_free_buf;

a127 2

#define IWI_ASYNC_CMD	(1 << 0)
@


1.1
log
@support for Intel 2100/2200BG/2915ABG wireless devices written by
damien.bergamini@@free.fr. This gets imported even though there is no
firmware in the tree.  This is a ridiculous situation: everything is
free, everything works, except Intel will not let us put a little
dinky firmware flat file into OpenBSD.  So OpenBSD is ready for Intel
whenever they are.

Are you a consumer?  Do you want to see this changed -- contact
jketreno@@linux.intel.com and tell him how you feel about this.  He is
likely someone who cannot do anything about it, though.  If anyone can
work up or down the chain around his department and get me contact
information for various people, I will compile and later publish such
a list.  Go do it people -- this is how things will change.  Get me
email addresses and phone numbers.
@
text
@d1 1
a1 1
/*	$Id: if_iwivar.h,v 1.1 2004/10/17 21:55:23 damien Exp $ */
a29 9
struct iwi_firmware {
	void	*boot;
	int	boot_size;
	void	*ucode;
	int	ucode_size;
	void	*main;
	int	main_size;
};

a102 1
	struct iwi_firmware	fw;
d104 1
a104 2
#define IWI_FLAG_FW_CACHED	(1 << 0)
#define IWI_FLAG_FW_INITED	(1 << 1)
a147 2
#define SIOCSLOADFW	 _IOW('i', 137, struct ifreq)
#define SIOCSKILLFW	 _IOW('i', 138, struct ifreq)
@

