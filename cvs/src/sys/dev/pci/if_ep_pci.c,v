head	1.34;
access;
symbols
	OPENBSD_6_2:1.34.0.10
	OPENBSD_6_2_BASE:1.34
	OPENBSD_6_1:1.34.0.8
	OPENBSD_6_1_BASE:1.34
	OPENBSD_6_0:1.34.0.6
	OPENBSD_6_0_BASE:1.34
	OPENBSD_5_9:1.34.0.2
	OPENBSD_5_9_BASE:1.34
	OPENBSD_5_8:1.32.0.4
	OPENBSD_5_8_BASE:1.32
	OPENBSD_5_7:1.31.0.4
	OPENBSD_5_7_BASE:1.31
	OPENBSD_5_6:1.30.0.4
	OPENBSD_5_6_BASE:1.30
	OPENBSD_5_5:1.29.0.4
	OPENBSD_5_5_BASE:1.29
	OPENBSD_5_4:1.28.0.10
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.28.0.8
	OPENBSD_5_3_BASE:1.28
	OPENBSD_5_2:1.28.0.6
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.4
	OPENBSD_5_0:1.28.0.2
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.27.0.20
	OPENBSD_4_9_BASE:1.27
	OPENBSD_4_8:1.27.0.18
	OPENBSD_4_8_BASE:1.27
	OPENBSD_4_7:1.27.0.14
	OPENBSD_4_7_BASE:1.27
	OPENBSD_4_6:1.27.0.16
	OPENBSD_4_6_BASE:1.27
	OPENBSD_4_5:1.27.0.12
	OPENBSD_4_5_BASE:1.27
	OPENBSD_4_4:1.27.0.10
	OPENBSD_4_4_BASE:1.27
	OPENBSD_4_3:1.27.0.8
	OPENBSD_4_3_BASE:1.27
	OPENBSD_4_2:1.27.0.6
	OPENBSD_4_2_BASE:1.27
	OPENBSD_4_1:1.27.0.4
	OPENBSD_4_1_BASE:1.27
	OPENBSD_4_0:1.27.0.2
	OPENBSD_4_0_BASE:1.27
	OPENBSD_3_9:1.26.0.2
	OPENBSD_3_9_BASE:1.26
	OPENBSD_3_8:1.24.0.2
	OPENBSD_3_8_BASE:1.24
	OPENBSD_3_7:1.23.0.4
	OPENBSD_3_7_BASE:1.23
	OPENBSD_3_6:1.23.0.2
	OPENBSD_3_6_BASE:1.23
	SMP_SYNC_A:1.23
	SMP_SYNC_B:1.23
	OPENBSD_3_5:1.22.0.6
	OPENBSD_3_5_BASE:1.22
	OPENBSD_3_4:1.22.0.4
	OPENBSD_3_4_BASE:1.22
	UBC_SYNC_A:1.22
	OPENBSD_3_3:1.22.0.2
	OPENBSD_3_3_BASE:1.22
	OPENBSD_3_2:1.21.0.4
	OPENBSD_3_2_BASE:1.21
	OPENBSD_3_1:1.21.0.2
	OPENBSD_3_1_BASE:1.21
	UBC_SYNC_B:1.21
	UBC:1.20.0.4
	UBC_BASE:1.20
	OPENBSD_3_0:1.20.0.2
	OPENBSD_3_0_BASE:1.20
	OPENBSD_2_9_BASE:1.19
	OPENBSD_2_9:1.19.0.4
	OPENBSD_2_8:1.19.0.2
	OPENBSD_2_8_BASE:1.19
	OPENBSD_2_7:1.18.0.10
	OPENBSD_2_7_BASE:1.18
	SMP:1.18.0.8
	SMP_BASE:1.18
	kame_19991208:1.18
	OPENBSD_2_6:1.18.0.6
	OPENBSD_2_6_BASE:1.18
	OPENBSD_2_5:1.18.0.4
	OPENBSD_2_5_BASE:1.18
	OPENBSD_2_4:1.18.0.2
	OPENBSD_2_4_BASE:1.18
	OPENBSD_2_3:1.14.0.2
	OPENBSD_2_3_BASE:1.14
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5;
locks; strict;
comment	@ * @;


1.34
date	2015.11.24.17.11.39;	author mpi;	state Exp;
branches;
next	1.33;
commitid	5gdEnqVoJuTuwdTu;

1.33
date	2015.11.24.13.33.17;	author mpi;	state Exp;
branches;
next	1.32;
commitid	5DvsamK0GblTp8ww;

1.32
date	2015.03.14.03.38.48;	author jsg;	state Exp;
branches;
next	1.31;
commitid	p4LJxGKbi0BU2cG6;

1.31
date	2014.12.22.02.28.52;	author tedu;	state Exp;
branches;
next	1.30;
commitid	yM2VFFhpDTeFQlve;

1.30
date	2014.07.22.13.12.11;	author mpi;	state Exp;
branches;
next	1.29;
commitid	TGHgrLxu6sxZoiFt;

1.29
date	2013.08.07.01.06.34;	author bluhm;	state Exp;
branches;
next	1.28;

1.28
date	2011.04.03.15.36.02;	author jasper;	state Exp;
branches;
next	1.27;

1.27
date	2006.06.17.18.00.43;	author brad;	state Exp;
branches;
next	1.26;

1.26
date	2005.11.21.18.16.41;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2005.09.11.18.17.08;	author mickey;	state Exp;
branches;
next	1.24;

1.24
date	2005.08.09.04.10.12;	author mickey;	state Exp;
branches;
next	1.23;

1.23
date	2004.05.12.06.35.11;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2002.11.19.18.40.17;	author jason;	state Exp;
branches;
next	1.21;

1.21
date	2002.03.14.01.26.58;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2001.08.25.10.13.29;	author art;	state Exp;
branches
	1.20.4.1;
next	1.19;

1.19
date	2000.05.29.18.04.08;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	98.09.19.10.08.06;	author maja;	state Exp;
branches
	1.18.8.1;
next	1.17;

1.17
date	98.09.16.21.16.49;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	98.09.11.12.06.58;	author fgsch;	state Exp;
branches;
next	1.15;

1.15
date	98.09.02.03.01.05;	author jason;	state Exp;
branches;
next	1.14;

1.14
date	98.04.02.20.14.03;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	98.02.25.23.54.00;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	98.01.07.11.03.28;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	97.11.07.08.07.27;	author niklas;	state Exp;
branches;
next	1.10;

1.10
date	97.07.30.11.12.27;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	96.11.28.23.28.05;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	96.11.12.20.30.53;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.10.14.10.22.23;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.10.14.09.00.51;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.05.26.00.27.42;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.05.07.07.38.35;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.05.05.13.39.09;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.05.03.07.59.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.05.02.13.38.16;	author deraadt;	state Exp;
branches;
next	;

1.18.8.1
date	2001.05.14.22.25.44;	author niklas;	state Exp;
branches;
next	1.18.8.2;

1.18.8.2
date	2001.10.31.03.22.45;	author nate;	state Exp;
branches;
next	1.18.8.3;

1.18.8.3
date	2002.03.28.15.35.57;	author niklas;	state Exp;
branches;
next	1.18.8.4;

1.18.8.4
date	2003.03.28.00.38.22;	author niklas;	state Exp;
branches;
next	1.18.8.5;

1.18.8.5
date	2004.06.05.23.12.50;	author niklas;	state Exp;
branches;
next	;

1.20.4.1
date	2002.06.11.03.42.25;	author art;	state Exp;
branches;
next	1.20.4.2;

1.20.4.2
date	2003.05.19.22.18.00;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.34
log
@You only need <net/if_dl.h> if you're using LLADDR() or a sockaddr_dl.
@
text
@/*	$OpenBSD: if_ep_pci.c,v 1.33 2015/11/24 13:33:17 mpi Exp $	*/
/*	$NetBSD: if_ep_pci.c,v 1.13 1996/10/21 22:56:38 thorpej Exp $	*/

/*
 * Copyright (c) 1994 Herb Peyerl <hpeyerl@@beer.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Herb Peyerl.
 * 4. The name of Herb Peyerl may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "bpfilter.h" 
 
#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mbuf.h> 
#include <sys/socket.h> 
#include <sys/ioctl.h>
#include <sys/errno.h>
#include <sys/timeout.h>
#include <sys/syslog.h>
#include <sys/selinfo.h>
#include <sys/device.h>

#include <net/if.h>
#include <net/if_media.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>
 
#if NBPFILTER > 0
#include <net/bpf.h>
#endif

#include <machine/cpu.h>
#include <machine/bus.h>
#include <machine/intr.h>

#include <dev/mii/miivar.h>

#include <dev/ic/elink3var.h>
#include <dev/ic/elink3reg.h>

#include <dev/pci/pcivar.h>
#include <dev/pci/pcireg.h>
#include <dev/pci/pcidevs.h>

/*
 * PCI constants.
 * XXX These should be in a common file!
 */
#define PCI_CONN		0x48    /* Connector type */
#define PCI_CBIO		0x10    /* Configuration Base IO Address */

int ep_pci_match(struct device *, void *, void *);
void ep_pci_attach(struct device *, struct device *, void *);

struct cfattach ep_pci_ca = {
	sizeof(struct ep_softc), ep_pci_match, ep_pci_attach
};

const struct pci_matchid ep_pci_devices[] = {
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C590 },
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C595MII },
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C595T4 },
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C595TX },
};

int
ep_pci_match(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	return (pci_matchbyid((struct pci_attach_args *)aux, ep_pci_devices,
	    nitems(ep_pci_devices)));
}

void
ep_pci_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct ep_softc *sc = (void *)self;
	struct pci_attach_args *pa = aux;
	pci_chipset_tag_t pc = pa->pa_pc;
	bus_size_t iosize;
	pci_intr_handle_t ih;
	pcireg_t i;
	const char *intrstr = NULL;

	if (pci_mapreg_map(pa, PCI_CBIO, PCI_MAPREG_TYPE_IO, 0,
	    &sc->sc_iot, &sc->sc_ioh, NULL, &iosize, 0)) {
		printf(": can't map i/o space\n");
		return;
	}

	sc->bustype = EP_BUS_PCI;

	i = pci_conf_read(pc, pa->pa_tag, PCI_CONN);

	GO_WINDOW(0);

	printf(":");

	epconfig(sc, EP_CHIPSET_VORTEX, NULL);

	/* Map and establish the interrupt. */
	if (pci_intr_map(pa, &ih)) {
		printf(", couldn't map interrupt\n");
		bus_space_unmap(sc->sc_iot, sc->sc_ioh, iosize);
		return;
	}
	intrstr = pci_intr_string(pc, ih);
	sc->sc_ih = pci_intr_establish(pc, ih, IPL_NET, epintr,
	    sc, sc->sc_dev.dv_xname);
	if (sc->sc_ih == NULL) {
		printf(": couldn't establish interrupt");
		if (intrstr != NULL)
			printf(" at %s", intrstr);
		printf("\n");
		bus_space_unmap(sc->sc_iot, sc->sc_ioh, iosize);
		return;
	}
	printf(" %s\n", intrstr);
}
@


1.33
log
@The only network driver needing <net/if_types.h> is upl(4) for IFT_OTHER.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.32 2015/03/14 03:38:48 jsg Exp $	*/
a47 1
#include <net/if_dl.h>
@


1.32
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.31 2014/12/22 02:28:52 tedu Exp $	*/
a48 1
#include <net/if_types.h>
@


1.31
log
@unifdef INET
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.30 2014/07/22 13:12:11 mpi Exp $	*/
a62 1
#include <dev/mii/mii.h>
@


1.30
log
@Fewer <netinet/in_systm.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.29 2013/08/07 01:06:34 bluhm Exp $	*/
a51 1
#ifdef INET
a53 1
#endif
@


1.29
log
@Most network drivers include netinet/in_var.h, but apparently they
don't have to.  Just remove these include lines.
Compiled on amd64 i386 sparc64; OK henning@@ mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.28 2011/04/03 15:36:02 jasper Exp $	*/
a53 2
#include <netinet/in_systm.h>
#include <netinet/ip.h> 
@


1.28
log
@use nitems(); no binary change for drivers that are compiled on amd64.

ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.27 2006/06/17 18:00:43 brad Exp $	*/
a54 1
#include <netinet/in_var.h>
@


1.27
log
@add sys/timeout.h
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.26 2005/11/21 18:16:41 millert Exp $	*/
d105 1
a105 1
	    sizeof(ep_pci_devices)/sizeof(ep_pci_devices[0])));
@


1.26
log
@Move contents of sys/select.h to sys/selinfo.h in preparation for a
userland-visible sys/select.h.  Consistent with what Net and Free do.
OK deraadt@@, tested with full ports build by naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.25 2005/09/11 18:17:08 mickey Exp $	*/
d42 1
@


1.25
log
@do not inline pci_mapreg_map() anymore as it is olrite now; brad@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.24 2005/08/09 04:10:12 mickey Exp $	*/
d43 1
a43 1
#include <sys/select.h>
@


1.24
log
@do not set PCI_COMMAND_MASTER_ENABLE explicitly as it's already set in pcisubmatch(); kettenis@@ testing; brad@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.23 2004/05/12 06:35:11 tedu Exp $	*/
a114 2
	bus_space_tag_t iot = pa->pa_iot;
	bus_addr_t iobase;
d120 2
a121 6
	if (pci_io_find(pc, pa->pa_tag, PCI_CBIO, &iobase, &iosize)) {
		printf(": can't find i/o space\n");
		return;
	}

	if (bus_space_map(iot, iobase, iosize, 0, &sc->sc_ioh)) {
a125 1
	sc->sc_iot = iot;
d139 1
d150 1
@


1.23
log
@network drivers don't need to include bpfdesc.h
ok krw@@ canacar@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.22 2002/11/19 18:40:17 jason Exp $	*/
a141 5

	/* Enable the card. */
	pci_conf_write(pc, pa->pa_tag, PCI_COMMAND_STATUS_REG,
	    pci_conf_read(pc, pa->pa_tag, PCI_COMMAND_STATUS_REG) |
	    PCI_COMMAND_MASTER_ENABLE);
@


1.22
log
@Add a simplistic table driven lookup routine and use it where appropriate.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.21 2002/03/14 01:26:58 millert Exp $	*/
a60 1
#include <net/bpfdesc.h>
@


1.21
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.20 2001/08/25 10:13:29 art Exp $	*/
d92 7
d104 2
a105 16
	struct pci_attach_args *pa = (struct pci_attach_args *) aux;

	if (PCI_VENDOR(pa->pa_id) != PCI_VENDOR_3COM)
		return 0;

	switch (PCI_PRODUCT(pa->pa_id)) {
	case PCI_PRODUCT_3COM_3C590:
	case PCI_PRODUCT_3COM_3C595MII:
	case PCI_PRODUCT_3COM_3C595T4:
	case PCI_PRODUCT_3COM_3C595TX:
		break;
	default:
		return 0;
	}

	return 1;
@


1.20
log
@Change pci_intr_map to take pci_attach_args as an argument.
All callers actually took all arguments to pci_intr_map from pci_attach_args
structs, so this simplifies code.
This also allows more complicated interrupt assignment schemes like the one
on sparc64.

This makes sparc64 pci interrupts work.

Inspired by the same change in NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.19 2000/05/29 18:04:08 aaron Exp $	*/
d85 2
a86 2
int ep_pci_match __P((struct device *, void *, void *));
void ep_pci_attach __P((struct device *, struct device *, void *));
@


1.20.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.20 2001/08/25 10:13:29 art Exp $	*/
d85 2
a86 2
int ep_pci_match(struct device *, void *, void *);
void ep_pci_attach(struct device *, struct device *, void *);
@


1.20.4.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a91 7
const struct pci_matchid ep_pci_devices[] = {
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C590 },
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C595MII },
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C595T4 },
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C595TX },
};

d97 16
a112 2
	return (pci_matchbyid((struct pci_attach_args *)aux, ep_pci_devices,
	    sizeof(ep_pci_devices)/sizeof(ep_pci_devices[0])));
@


1.19
log
@Support for 3c574 and 3CCFEM556BI PCMCIA Ethernet; from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.18 1998/09/19 10:08:06 maja Exp $	*/
d157 1
a157 2
	if (pci_intr_map(pc, pa->pa_intrtag, pa->pa_intrpin,
	    pa->pa_intrline, &ih)) {
@


1.18
log
@Added if_media support from NetBSD. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.17 1998/09/16 21:16:49 deraadt Exp $	*/
d67 3
@


1.18.8.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.19 2000/05/29 18:04:08 aaron Exp $	*/
a66 3

#include <dev/mii/mii.h>
#include <dev/mii/miivar.h>
@


1.18.8.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.18.8.1 2001/05/14 22:25:44 niklas Exp $	*/
d157 2
a158 1
	if (pci_intr_map(pa, &ih)) {
@


1.18.8.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d85 2
a86 2
int ep_pci_match(struct device *, void *, void *);
void ep_pci_attach(struct device *, struct device *, void *);
@


1.18.8.4
log
@Sync the SMP branch with 3.3
@
text
@a91 7
const struct pci_matchid ep_pci_devices[] = {
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C590 },
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C595MII },
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C595T4 },
	{ PCI_VENDOR_3COM, PCI_PRODUCT_3COM_3C595TX },
};

d97 16
a112 2
	return (pci_matchbyid((struct pci_attach_args *)aux, ep_pci_devices,
	    sizeof(ep_pci_devices)/sizeof(ep_pci_devices[0])));
@


1.18.8.5
log
@Merge with the trunk
@
text
@d61 1
@


1.17
log
@fix ep probe message printouts
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.16 1998/09/11 12:06:58 fgsch Exp $	*/
d49 1
@


1.16
log
@Add a third parameter to epconfig to get the MAC address if it's a pcmcia
card and support it. Use NULL otherwise.
Update the ep based drivers.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.15 1998/09/02 03:01:05 jason Exp $	*/
d142 2
@


1.15
log
@o new driver for the 3c900, 3c905, 3c905b ported from FreeBSD
o removed if_ep devices in favor of if_xl driver
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.14 1998/04/02 20:14:03 deraadt Exp $	*/
d143 1
a143 1
	epconfig(sc, EP_CHIPSET_VORTEX);
@


1.14
log
@support 3c905B
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.13 1998/02/25 23:54:00 deraadt Exp $	*/
a102 5
	case PCI_PRODUCT_3COM_3C900COMBO:
	case PCI_PRODUCT_3COM_3C900TPO:
	case PCI_PRODUCT_3COM_3C905T4:
	case PCI_PRODUCT_3COM_3C905TX:
	case PCI_PRODUCT_3COM_3C905B:
@


1.13
log
@do not print model number twice
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.12 1998/01/07 11:03:28 deraadt Exp $	*/
d107 1
@


1.12
log
@now this is really pretty
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.11 1997/11/07 08:07:27 niklas Exp $	*/
a127 1
	char *model;
a145 24

	switch (PCI_PRODUCT(pa->pa_id)) {
	case PCI_PRODUCT_3COM_3C590:
		model = "3Com 3C590 Ethernet";
		break;
	case PCI_PRODUCT_3COM_3C595MII:
	case PCI_PRODUCT_3COM_3C595T4:
	case PCI_PRODUCT_3COM_3C595TX:
		model = "3Com 3C595 Ethernet";
		break;
	case PCI_PRODUCT_3COM_3C900COMBO:
	case PCI_PRODUCT_3COM_3C900TPO:
		model = "3Com 3C900 Ethernet";
		break;
	case PCI_PRODUCT_3COM_3C905T4:
	case PCI_PRODUCT_3COM_3C905TX:
		model = "3Com 3C905 Ethernet";
		break;
	default:
		model = "unknown model!";
		break;
	}

	printf(": <%s> ", model);
@


1.11
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_pci.c,v 1.13 1996/10/21 22:56:38 thorpej Exp $	*/
d182 1
a182 1
		printf("%s: couldn't map interrupt\n", sc->sc_dev.dv_xname);
d189 1
a189 2
		printf("%s: couldn't establish interrupt",
		    sc->sc_dev.dv_xname);
d195 1
a195 1
	printf("%s: interrupting at %s\n", sc->sc_dev.dv_xname, intrstr);
@


1.10
log
@Sync to NetBSD.  Adapt to use bus_space_multi_raw* interface of OpenBSD.
Some KNF too.
@
text
@d1 1
@


1.9
log
@Adaption to new bus.h from NetBSD.  Various driver has been updated to
NetBSD 961107 state.  Other has not, partly because sometimes the bus.h
changes was coupled with other changes.
@
text
@a125 1
	u_short conn = 0;
a144 11
	/*
	 * Bits 13,12,9 of the isa adapter are the same as bits 
	 * 5,4,3 of the pci adapter
	 */
	if (i & IS_PCI_AUI)
		conn |= IS_AUI;
	if (i & IS_PCI_BNC)
		conn |= IS_BNC;
	if (i & IS_PCI_UTP)
		conn |= IS_UTP;

d171 1
a171 1
	epconfig(sc, conn);
@


1.8
log
@s/bus.h/bus.old.h/ to make the transit to the bus_space bus.h an easy road
possibly taken in small steps
@
text
@d1 1
a1 1
/*	$NetBSD: if_ep_pci.c,v 1.7 1996/05/13 00:03:15 mycroft Exp $	*/
d63 1
a63 1
#include <machine/bus.old.h>
d99 7
a105 7
	case PCI_PRODUCT_3COM_3C595:
	case PCI_PRODUCT_3COM_3C595T:
	case PCI_PRODUCT_3COM_3C595TM:
	case PCI_PRODUCT_3COM_3C900:
	case PCI_PRODUCT_3COM_3C900T:
	case PCI_PRODUCT_3COM_3C905:
	case PCI_PRODUCT_3COM_3C905T:
d122 3
a124 3
	bus_chipset_tag_t bc = pa->pa_bc;
	bus_io_addr_t iobase;
	bus_io_size_t iosize;
d136 1
a136 1
	if (bus_io_map(bc, iobase, iosize, &sc->sc_ioh)) {
d141 1
a141 1
	sc->sc_bc = bc;
d163 3
a165 3
	case PCI_PRODUCT_3COM_3C595:
	case PCI_PRODUCT_3COM_3C595T:
	case PCI_PRODUCT_3COM_3C595TM:
d168 2
a169 2
	case PCI_PRODUCT_3COM_3C900:
	case PCI_PRODUCT_3COM_3C900T:
d172 2
a173 2
	case PCI_PRODUCT_3COM_3C905:
	case PCI_PRODUCT_3COM_3C905T:
d178 1
a207 2

	epstop(sc);
@


1.7
log
@rename some 3cxxx stuff
@
text
@d63 1
a63 1
#include <machine/bus.h>
@


1.6
log
@better 3c59x and 3c9xx support; netbsd pr#2840; curt@@portal.ca
@
text
@d100 2
d103 1
d105 1
d164 2
d169 1
d173 1
@


1.5
log
@sync 0521
@
text
@d100 2
a158 1

d161 6
@


1.4
log
@sync with 0504 -- prototypes and bus.h
@
text
@d1 1
a1 1
/*	$NetBSD: if_ep_pci.c,v 1.3 1996/05/03 19:08:00 christos Exp $	*/
d4 1
a4 1
 * Copyright (c) 1994 Herb Peyerl <hpeyerl@@novatel.ca>
d64 1
d73 4
a76 3
/* PCI constants */
#define PCI_VENDORID(x)		((x) & 0xFFFF)
#define PCI_CHIPID(x)		(((x) >> 16) & 0xFFFF)
d78 1
a78 1
#define PCI_CBMA		0x10    /* Configuration Base Memory Address */
d94 1
a94 1
	if (PCI_VENDORID(pa->pa_id) != PCI_VENDOR_3COM)
d97 1
a97 1
	switch (PCI_CHIPID(pa->pa_id)) {
d120 2
a121 1
	u_short i, conn = 0;
d125 1
a125 1
	if (pci_io_find(pc, pa->pa_tag, PCI_CBMA, &iobase, &iosize)) {
d153 1
a153 1
	switch (PCI_CHIPID(pa->pa_id)) {
@


1.3
log
@add general ether_ioctl call in net/if_ethersubr.c,
NS,IPX,X.25 special processing is now handled in there.
reflect this amazing addition in all the ether ifaces.
ppl, pls check the stuff.
@
text
@d1 1
a1 1
/*	$NetBSD: if_ep_pci.c,v 1.1 1996/04/25 02:17:06 thorpej Exp $	*/
d36 1
d63 1
a63 1
#include <machine/pio.h>
a89 1
	struct cfdata *cf = match;
a111 1
	u_short conn = 0;
d114 3
d118 1
a118 2
	int iobase;
	u_short i;
d122 2
a123 2
	if (pci_map_io(pa->pa_tag, PCI_CBMA, &iobase)) {
		printf(": couldn't map io\n");
d126 7
d134 1
a134 1
	sc->ep_iobase = iobase; /* & 0xfffffff0 */
@


1.2
log
@prettier printf messages
@
text
@a55 5
#ifdef NS
#include <netns/ns.h>
#include <netns/ns_if.h>
#endif
  
@


1.1
log
@if_ep splitup
@
text
@d159 1
a159 1
	printf(": %s\n", model);
@

