head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.16
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.20
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.18
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.14
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.12
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.10
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.8
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2012.12.04.10.42.04;	author mpi;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.30.22.03.47;	author oga;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.09.15.11.19;	author oga;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.16.19.00.28;	author oga;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.25.17.11.12;	author oga;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Add support for Uninorth AGP bridges found in most if not all the macppc
machines with a G3 or G4 microprocessor. It would not be difficult to add
support for U3 bridges found in G5 powered macppc to this driver but I
don't have such hardware.
@
text
@#	$OpenBSD: files.agp,v 1.4 2011/05/30 22:03:47 oga Exp $

define agpdev {}

# agpbus defined in /sys/conf/files
device agp: agpdev
attach agp at agpdev
file	dev/pci/agp.c		agp		needs-flag

device	aliagp: agpdev
attach	aliagp at agpbus
file	dev/pci/agp_ali.c	aliagp

device	amdagp: agpdev
attach	amdagp at agpbus
file	dev/pci/agp_amd.c	amdagp

device	appleagp: agpdev
attach  appleagp at agpbus
file	dev/pci/agp_apple.c	appleagp

device	intelagp: agpdev
attach	intelagp at agpbus
file	dev/pci/agp_intel.c	intelagp

# agpint defined in  /sys/conf/files since it attaches at vga
device	intagp: agpdev
attach	intagp at agpint
# intelagp needs file to check presence of IGD
file	dev/pci/agp_i810.c	intagp		needs-flag

device	mmuagp: agpdev
attach	mmuagp at agpbus
file	dev/pci/mmuagp.c	mmuagp

device	sisagp: agpdev
attach	sisagp at agpbus
file	dev/pci/agp_sis.c	sisagp

device	viaagp: agpdev
attach	viaagp at agpbus
file	dev/pci/agp_via.c	viaagp
@


1.4
log
@Add mmuagp. a driver for the agp chipsets on early amd64 machines.

This agp hardware uses the on-chip GART built into amd cpus and a
southbridge bit of hardware to handle the rest (hence mmu) most osen
call this agp_amd64 or similar, but openbsd has no numbers in device
names.

Ported this from free/netbsd and adapted to our agp subsystem years ago
but never was commited due to conflicting with the now dead iommu code.
Tested by at least Tom Murphy, matthieu@@ (who has been using it for
literally years) and kettenis@@.

``just commit it'' deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: files.agp,v 1.3 2008/11/09 15:11:19 oga Exp $
d17 4
@


1.3
log
@Rework that way that agp attaches.

previously, we had a static list of pcidevs and which agp driver would
be interanlly attached. Instead, split the agp drivers so they work like
audio(4), where we attach a driver, which sets up some callbacks and
initial state, then attaches the interface (agp(4)). Since this allows
us to attach different drivers in different places, and give them
/proper/ probe functions move most of the drivers back to attaching at
pchb, where they should, and intagp (formerly agp_i810) stays attaching
at vga, since it's part of the intel integrated graphics chips.

Diff shrinks the kernel slightly, gets rid of the annoying "no integrated
graphics" warning, and allows more cleanup later.

Tested by many. fix for alpha build (the only other vga_pci.c consumer)
suggested by miod.
@
text
@d1 1
a1 1
#	$OpenBSD: files.agp,v 1.2 2008/03/16 19:00:28 oga Exp $
d27 4
@


1.2
log
@Make agp(4) attach at vga(4) instead of pchb(4). This is because sometimes
agp and drm need to use the same memory mapping, the best way to deal
with that is to allow them to share (that's coming later), for this to
work cleanly we move the attach point of agp.

Ideally most agp drivers would attach at pchb, with only agp_i810
(and any that work similarly) attaching at vga, but this will do for
now.

ok kettenis@@, miod@@.
@
text
@d1 1
a1 1
#	$OpenBSD: files.agp,v 1.1 2007/11/25 17:11:12 oga Exp $
d3 1
a3 1
file	dev/pci/agp.c		agp			needs-flag
d5 30
a34 23
define	agp_ali
file	dev/pci/agp_ali.c	agp_ali & agpbus	needs-flag

define	agp_amd
file	dev/pci/agp_amd.c	agp_amd & agpbus	needs-flag

define	agp_apple
file	dev/pci/agp_apple.c	agp_apple & agpbus	needs-flag

define	agp_i810
file	dev/pci/agp_i810.c	agp_i810 & agpbus	needs-flag

define	agp_intel
file	dev/pci/agp_intel.c	agp_intel & agpbus	needs-flag

define	agp_sis
file	dev/pci/agp_sis.c	agp_sis & agpbus	needs-flag

define	agp_via
file	dev/pci/agp_via.c	agp_via & agpbus	needs-flag

define	agp_amd64
file	dev/pci/agp_amd64.c	agp_amd64 & agpbus	needs-flag
@


1.1
log
@Make agp attach as a device. This means that many more agp bridges
actually get detected and attached. Also adds a kernel api for
manipulating agp.

Enable this on i386 and amd64.

"I think you should commit it" deraadt@@, ok matthieu. Looked over by
several others.
@
text
@d1 1
a1 1
#	$OpenBSD$
a2 4
define	agpbus { }

device	agp
attach	agp at agpbus
d6 1
a6 1
file	dev/pci/agp_ali.c	agp_ali & agp		needs-flag
d9 1
a9 1
file	dev/pci/agp_amd.c	agp_amd & agp		needs-flag
d12 1
a12 1
file	dev/pci/agp_apple.c	agp_apple & agp		needs-flag
d15 1
a15 1
file	dev/pci/agp_i810.c	agp_i810 & agp		needs-flag
d18 1
a18 1
file	dev/pci/agp_intel.c	agp_intel & agp		needs-flag
d21 1
a21 1
file	dev/pci/agp_sis.c	agp_sis & agp		needs-flag
d24 1
a24 1
file	dev/pci/agp_via.c	agp_via & agp		needs-flag
d27 1
a27 1
file	dev/pci/agp_amd64.c	agp_amd64 & agp		needs-flag
@

