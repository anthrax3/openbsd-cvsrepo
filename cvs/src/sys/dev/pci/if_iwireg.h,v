head	1.28;
access;
symbols
	OPENBSD_6_2_BASE:1.28
	OPENBSD_6_1:1.28.0.36
	OPENBSD_6_1_BASE:1.28
	OPENBSD_6_0:1.28.0.34
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.22
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.28.0.30
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.28
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.28.0.26
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.28.0.24
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.28.0.20
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.28.0.18
	OPENBSD_5_3_BASE:1.28
	OPENBSD_5_2:1.28.0.16
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.14
	OPENBSD_5_0:1.28.0.12
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.28.0.10
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.8
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.28.0.4
	OPENBSD_4_7_BASE:1.28
	OPENBSD_4_6:1.28.0.6
	OPENBSD_4_6_BASE:1.28
	OPENBSD_4_5:1.28.0.2
	OPENBSD_4_5_BASE:1.28
	OPENBSD_4_4:1.25.0.10
	OPENBSD_4_4_BASE:1.25
	OPENBSD_4_3:1.25.0.8
	OPENBSD_4_3_BASE:1.25
	OPENBSD_4_2:1.25.0.6
	OPENBSD_4_2_BASE:1.25
	OPENBSD_4_1:1.25.0.4
	OPENBSD_4_1_BASE:1.25
	OPENBSD_4_0:1.25.0.2
	OPENBSD_4_0_BASE:1.25
	OPENBSD_3_9:1.20.0.2
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12;
locks; strict;
comment	@ * @;


1.28
date	2008.09.04.15.59.52;	author damien;	state Exp;
branches;
next	1.27;

1.27
date	2008.09.03.19.47.58;	author damien;	state Exp;
branches;
next	1.26;

1.26
date	2008.08.28.15.52.20;	author damien;	state Exp;
branches;
next	1.25;

1.25
date	2006.08.19.11.07.45;	author damien;	state Exp;
branches;
next	1.24;

1.24
date	2006.04.02.20.30.20;	author dim;	state Exp;
branches;
next	1.23;

1.23
date	2006.04.01.01.04.40;	author pedro;	state Exp;
branches;
next	1.22;

1.22
date	2006.03.31.17.18.37;	author pedro;	state Exp;
branches;
next	1.21;

1.21
date	2006.03.27.20.46.35;	author damien;	state Exp;
branches;
next	1.20;

1.20
date	2006.02.26.19.14.40;	author damien;	state Exp;
branches;
next	1.19;

1.19
date	2006.01.29.15.44.16;	author damien;	state Exp;
branches;
next	1.18;

1.18
date	2006.01.18.20.25.22;	author damien;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.06.20.33.39;	author damien;	state Exp;
branches;
next	1.16;

1.16
date	2005.09.19.20.01.12;	author damien;	state Exp;
branches;
next	1.15;

1.15
date	2005.05.22.16.05.47;	author damien;	state Exp;
branches;
next	1.14;

1.14
date	2005.05.22.15.28.45;	author damien;	state Exp;
branches;
next	1.13;

1.13
date	2005.05.22.15.14.10;	author damien;	state Exp;
branches;
next	1.12;

1.12
date	2005.03.12.13.31.26;	author damien;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.09.16.47.50;	author damien;	state Exp;
branches;
next	1.10;

1.10
date	2005.01.05.09.07.16;	author jsg;	state Exp;
branches;
next	1.9;

1.9
date	2004.12.06.19.54.06;	author damien;	state Exp;
branches;
next	1.8;

1.8
date	2004.12.04.19.19.24;	author damien;	state Exp;
branches;
next	1.7;

1.7
date	2004.12.04.19.01.47;	author damien;	state Exp;
branches;
next	1.6;

1.6
date	2004.12.04.17.24.06;	author damien;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.24.21.20.58;	author damien;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.23.21.28.22;	author damien;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.22.21.34.35;	author damien;	state Exp;
branches;
next	1.2;

1.2
date	2004.11.22.19.20.28;	author damien;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.20.12.50.48;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.28
log
@mostly cosmetic.
also, do not set the privacy bit in the capinfo field of (re)assoc
requests, even for RSNA.
@
text
@/*	$OpenBSD: if_iwireg.h,v 1.27 2008/09/03 19:47:58 damien Exp $	*/

/*-
 * Copyright (c) 2004-2008
 *      Damien Bergamini <damien.bergamini@@free.fr>. All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define IWI_CMD_RING_COUNT	16
#define IWI_TX_RING_COUNT	64
#define IWI_RX_RING_COUNT	32

#define IWI_CSR_INTR		0x0008
#define IWI_CSR_INTR_MASK	0x000c
#define IWI_CSR_INDIRECT_ADDR	0x0010
#define IWI_CSR_INDIRECT_DATA	0x0014
#define IWI_CSR_AUTOINC_ADDR	0x0018
#define IWI_CSR_AUTOINC_DATA	0x001c
#define IWI_CSR_RST		0x0020
#define IWI_CSR_CTL		0x0024
#define IWI_CSR_IO		0x0030
#define IWI_CSR_CMD_BASE	0x0200
#define IWI_CSR_CMD_SIZE	0x0204
#define IWI_CSR_TX_BASE(ac)	(0x0208 + (ac) * 8)
#define IWI_CSR_TX_SIZE(ac)	(0x020c + (ac) * 8)
#define IWI_CSR_CMD_RIDX	0x0280
#define IWI_CSR_TX_RIDX(ac)	(0x0284 + (ac) * 4)
#define IWI_CSR_RX_RIDX		0x02a0
#define IWI_CSR_RX_BASE		0x0500
#define IWI_CSR_TABLE0_SIZE	0x0700
#define IWI_CSR_TABLE0_BASE	0x0704
#define IWI_CSR_NODE_BASE	0x0c0c
#define IWI_CSR_CMD_WIDX	0x0f80
#define IWI_CSR_TX_WIDX(ac)	(0x0f84 + (ac) * 4)
#define IWI_CSR_RX_WIDX		0x0fa0
#define IWI_CSR_READ_INT	0x0ff4

/* aliases */
#define IWI_CSR_CURRENT_TX_RATE	IWI_CSR_TABLE0_BASE

/* possible flags for IWI_CSR_INTR */
#define IWI_INTR_RX_DONE	0x00000002
#define IWI_INTR_CMD_DONE	0x00000800
#define IWI_INTR_TX1_DONE	0x00001000
#define IWI_INTR_TX2_DONE	0x00002000
#define IWI_INTR_TX3_DONE	0x00004000
#define IWI_INTR_TX4_DONE	0x00008000
#define IWI_INTR_FW_INITED	0x01000000
#define IWI_INTR_RADIO_OFF	0x04000000
#define IWI_INTR_FATAL_ERROR	0x40000000
#define IWI_INTR_PARITY_ERROR	0x80000000

#define IWI_INTR_MASK							\
	(IWI_INTR_RX_DONE | IWI_INTR_CMD_DONE | IWI_INTR_TX1_DONE |	\
	 IWI_INTR_TX2_DONE | IWI_INTR_TX3_DONE | IWI_INTR_TX4_DONE |	\
	 IWI_INTR_FW_INITED | IWI_INTR_RADIO_OFF |			\
	 IWI_INTR_FATAL_ERROR | IWI_INTR_PARITY_ERROR)

/* possible flags for register IWI_CSR_RST */
#define IWI_RST_PRINCETON_RESET	0x00000001
#define IWI_RST_SW_RESET	0x00000080
#define IWI_RST_MASTER_DISABLED	0x00000100
#define IWI_RST_STOP_MASTER	0x00000200

/* possible flags for register IWI_CSR_CTL */
#define IWI_CTL_CLOCK_READY	0x00000001
#define IWI_CTL_ALLOW_STANDBY	0x00000002
#define IWI_CTL_INIT		0x00000004

/* possible flags for register IWI_CSR_IO */
#define IWI_IO_RADIO_ENABLED	0x00010000

/* possible flags for IWI_CSR_READ_INT */
#define IWI_READ_INT_INIT_HOST	0x20000000

/* constants for command blocks */
#define IWI_CB_DEFAULT_CTL	0x8cea0000
#define IWI_CB_MAXDATALEN	8191

/* firmware binary image header */
struct iwi_firmware_hdr {
	uint8_t		oldvermaj;
	uint8_t		oldvermin;
	uint8_t		vermaj;
	uint8_t		vermin;
	uint32_t	bootsz;
	uint32_t	ucodesz;
	uint32_t	mainsz;
} __packed;

struct iwi_hdr {
	uint8_t	type;
#define IWI_HDR_TYPE_DATA	0
#define IWI_HDR_TYPE_COMMAND	1
#define IWI_HDR_TYPE_NOTIF	3
#define IWI_HDR_TYPE_FRAME	9

	uint8_t	seq;
	uint8_t	flags;
#define IWI_HDR_FLAG_IRQ	0x04

	uint8_t	reserved;
} __packed;

struct iwi_notif {
	uint32_t	reserved[2];
	uint8_t		type;
#define IWI_NOTIF_TYPE_ASSOCIATION	10
#define IWI_NOTIF_TYPE_AUTHENTICATION	11
#define IWI_NOTIF_TYPE_SCAN_CHANNEL	12
#define IWI_NOTIF_TYPE_SCAN_COMPLETE	13
#define IWI_NOTIF_TYPE_BAD_LINK		15
#define IWI_NOTIF_TYPE_BEACON		17
#define IWI_NOTIF_TYPE_PAIRWISE_KEY	18
#define IWI_NOTIF_TYPE_CALIBRATION	20
#define IWI_NOTIF_TYPE_NOISE		25

	uint8_t		flags;
	uint16_t	len;
} __packed;

/* structure for notification IWI_NOTIF_TYPE_AUTHENTICATION */
struct iwi_notif_authentication {
	uint8_t	state;
#define IWI_DEAUTHENTICATED	0
#define IWI_AUTHENTICATED	9
} __packed;

/* structure for notification IWI_NOTIF_TYPE_ASSOCIATION */
struct iwi_notif_association {
	uint8_t			state;
#define IWI_DEASSOCIATED	0
#define IWI_ASSOCIATED		12

	struct ieee80211_frame	frame;
	uint16_t		capinfo;
	uint16_t		status;
	uint16_t		associd;
} __packed;

/* structure for notification IWI_NOTIF_TYPE_SCAN_CHANNEL */
struct iwi_notif_scan_channel {
	uint8_t	nchan;
	uint8_t	reserved[47];
} __packed;

/* structure for notification IWI_NOTIF_TYPE_SCAN_COMPLETE */
struct iwi_notif_scan_complete {
	uint8_t	type;
	uint8_t	nchan;
	uint8_t	status;
	uint8_t	reserved;
} __packed;

/* structure for notification IWI_NOTIF_TYPE_BEACON */
struct iwi_notif_beacon {
	uint32_t	status;
#define IWI_BEACON_MISSED	1

	uint32_t	count;
};

/* received frame header */
struct iwi_frame {
	uint32_t	reserved1[2];
	uint8_t		chan;
	uint8_t		status;
	uint8_t		rate;
	uint8_t		rssi;	/* receiver signal strength indicator */
	uint8_t		agc;	/* automatic gain control */
	uint8_t		rssi_dbm;
	uint16_t	signal;
	uint16_t	noise;
	uint8_t		antenna;
	uint8_t		control;
	uint8_t		reserved2[2];
	uint16_t	len;
} __packed;

/* header for transmission */
struct iwi_tx_desc {
	struct iwi_hdr	hdr;
	uint32_t	reserved1;
	uint8_t		station;
	uint8_t		reserved2[3];
	uint8_t		cmd;
#define IWI_DATA_CMD_TX	0x0b

	uint8_t		seq;
	uint16_t	len;
	uint8_t		priority;
	uint8_t		flags;
#define IWI_DATA_FLAG_SHPREAMBLE	(1 << 2)
#define IWI_DATA_FLAG_NO_WEP		(1 << 5)
#define IWI_DATA_FLAG_NEED_ACK		(1 << 7)

	uint8_t		xflags;
#define IWI_DATA_XFLAG_CCK		(1 << 0)
#define IWI_DATA_XFLAG_QOS		(1 << 4)

	uint8_t		txkey;
#define IWI_DATA_KEY_USE_PAIRWISE	(1 << 5)
#define IWI_DATA_KEY_WEP40		(1 << 6)
#define IWI_DATA_KEY_WEP104		(1 << 7)

	uint8_t		wepkey[IEEE80211_KEYBUF_SIZE];
	uint8_t		rate;
	uint8_t		antenna;
	uint8_t		reserved3[10];

	struct ieee80211_qosframe_addr4	wh;
	uint32_t	iv[2];

	uint32_t	nseg;
#define IWI_MAX_NSEG	6
#define IWI_MAX_SCATTER	(IWI_MAX_NSEG - 2)

	uint32_t	seg_addr[IWI_MAX_NSEG];
	uint16_t	seg_len[IWI_MAX_NSEG];
} __packed;

/* command */
struct iwi_cmd_desc {
	struct iwi_hdr	hdr;
	uint8_t		type;
#define IWI_CMD_ENABLE			2
#define IWI_CMD_SET_CONFIG		6
#define IWI_CMD_SET_ESSID		8
#define IWI_CMD_SET_MAC_ADDRESS		11
#define IWI_CMD_SET_RTS_THRESHOLD	15
#define IWI_CMD_SET_FRAG_THRESHOLD	16
#define IWI_CMD_SET_POWER_MODE		17
#define IWI_CMD_SET_GROUP_KEY		18
#define IWI_CMD_SET_PAIRWISE_KEY	19
#define IWI_CMD_ASSOCIATE		21
#define IWI_CMD_SET_RATES		22
#define IWI_CMD_SET_QOS_PARAMS		25
#define IWI_CMD_SCAN			26
#define IWI_CMD_SET_OPTIE		31
#define IWI_CMD_DISABLE			33
#define IWI_CMD_SET_RANDOM_SEED		34
#define IWI_CMD_SET_TX_POWER		35
#define IWI_CMD_SET_SENSITIVITY		42
#define IWI_CMD_SET_QOS_CAP		84

	uint8_t		len;
	uint16_t	reserved;
	uint8_t		data[120];
} __packed;

/* node information (IBSS) */
struct iwi_node {
	uint8_t	bssid[IEEE80211_ADDR_LEN];
	uint8_t	reserved[2];
} __packed;

/* constants for 'mode' fields */
#define IWI_MODE_11A	0
#define IWI_MODE_11B	1
#define IWI_MODE_11G	2

/* possible values for command IWI_CMD_SET_POWER_MODE */
#define IWI_POWER_MODE_CAM	0

/* structure for command IWI_CMD_SET_RATES */
struct iwi_rateset {
	uint8_t	mode;
	uint8_t	nrates;
	uint8_t	type;
#define IWI_RATESET_TYPE_NEGOTIATED	0
#define IWI_RATESET_TYPE_SUPPORTED	1

	uint8_t	reserved;
	uint8_t	rates[12];
} __packed;

/* structures for command IWI_CMD_SET_QOS_PARAMS */
struct iwi_qos_params {
	uint16_t	cwmin[EDCA_NUM_AC];
	uint16_t	cwmax[EDCA_NUM_AC];
	uint8_t		aifsn[EDCA_NUM_AC];
	uint8_t		acm  [EDCA_NUM_AC];
	uint8_t		txop [EDCA_NUM_AC];
} __packed;

struct iwi_qos_cmd {
	struct iwi_qos_params	cck;
	struct iwi_qos_params	ofdm;
	struct iwi_qos_params	current;
} __packed;

/* copied verbatim from sys/net80211/ieee80211_output.c */
static const struct ieee80211_edca_ac_params iwi_cck[EDCA_NUM_AC] = {
	[EDCA_AC_BK] = { 5, 10, 7,   0 },
	[EDCA_AC_BE] = { 5, 10, 3,   0 },
	[EDCA_AC_VI] = { 4,  5, 2, 188 },
	[EDCA_AC_VO] = { 3,  4, 2, 102 }
};

/* copied verbatim from sys/net80211/ieee80211_output.c */
static const struct ieee80211_edca_ac_params iwi_ofdm[EDCA_NUM_AC] = {
	[EDCA_AC_BK] = { 4, 10, 7,   0 },
	[EDCA_AC_BE] = { 4, 10, 3,   0 },
	[EDCA_AC_VI] = { 3,  4, 2,  94 },
	[EDCA_AC_VO] = { 2,  3, 2,  47 }
};

/* structure for command IWI_CMD_SET_TX_POWER */
struct iwi_txpower {
	uint8_t	nchan;
	uint8_t	mode;
	struct {
		uint8_t	chan;
		uint8_t	power;
#define IWI_TXPOWER_MAX		20
#define IWI_TXPOWER_RATIO	(IEEE80211_TXPOWER_MAX / IWI_TXPOWER_MAX)
	} __packed chan[37];
} __packed;

/* structure for command IWI_CMD_ASSOCIATE */
struct iwi_associate {
	uint8_t		chan;
	uint8_t		auth;
#define IWI_AUTH_OPEN	0
#define IWI_AUTH_SHARED	1
#define IWI_AUTH_NONE	3

	uint8_t		type;
#define IWI_ASSOC_ASSOCIATE	0
#define IWI_ASSOC_REASSOCIATE	1
#define IWI_ASSOC_DISASSOCIATE	2
#define IWI_ASSOC_SIBSS		3

	uint8_t		reserved1;
	uint16_t	policy;
#define IWI_ASSOC_POLICY_QOS	(1 << 0)
#define IWI_ASSOC_POLICY_RSN	(1 << 1)

	uint8_t		plen;
#define IWI_ASSOC_SHPREAMBLE	(1 << 2)

	uint8_t		mode;
	uint8_t		bssid[IEEE80211_ADDR_LEN];
	uint8_t		tstamp[8];
	uint16_t	capinfo;
	uint16_t	lintval;
	uint16_t	intval;
	uint8_t		dst[IEEE80211_ADDR_LEN];
	uint32_t	reserved3;
	uint16_t	reserved4;
} __packed;

/* structure for command IWI_CMD_SCAN */
struct iwi_scan {
	uint32_t	index;
	uint8_t		channels[54];
#define IWI_CHAN_5GHZ	(0 << 6)
#define IWI_CHAN_2GHZ	(1 << 6)

	uint8_t		type[27];
#define IWI_SCAN_TYPE_PASSIVE	0x11
#define IWI_SCAN_TYPE_DIRECTED	0x22
#define IWI_SCAN_TYPE_BROADCAST	0x33
#define IWI_SCAN_TYPE_BDIRECTED	0x44

	uint8_t		reserved1;
	uint16_t	reserved2;
	uint16_t	passive;	/* dwell time */
	uint16_t	directed;	/* dwell time */
	uint16_t	broadcast;	/* dwell time */
	uint16_t	bdirected;	/* dwell time */
} __packed;

/* structure for command IWI_CMD_SET_CONFIGURATION */
struct iwi_configuration {
	uint8_t	bluetooth_coexistence;
	uint8_t	reserved1;
	uint8_t	answer_pbreq;
	uint8_t	allow_invalid_frames;
	uint8_t	multicast_enabled;
	uint8_t	exclude_unicast_unencrypted;
	uint8_t	disable_unicast_decryption;
	uint8_t	exclude_multicast_unencrypted;
	uint8_t	disable_multicast_decryption;
	uint8_t	antenna;
	uint8_t	reserved2;
	uint8_t	bg_autodetection;
	uint8_t	reserved3;
	uint8_t	enable_multicast_filtering;
	uint8_t	bluetooth_threshold;
	uint8_t	silence_threshold;
	uint8_t	allow_beacon_and_probe_resp;
	uint8_t	allow_mgt;
	uint8_t	report_noise;
	uint8_t	reserved5;
} __packed;

/* structure for command IWI_CMD_SET_GROUP_KEY */
struct iwi_group_key {
	uint8_t	cmd;
#define IWI_GROUP_KEY_CMD_SETKEY	0x08

	uint8_t	seq;
	uint8_t	idx;
	uint8_t	len;
	uint8_t	key[16];
} __packed;

/* structure for command IWI_CMD_SET_PAIRWISE_KEY */
struct iwi_pairwise_key {
	uint8_t		idx;
	uint8_t		cipher;
#define IWI_CIPHER_WEP	0
#define IWI_CIPHER_CCMP	2
#define IWI_CIPHER_TKIP	3
	uint8_t		sta;
	uint8_t		flags;
	uint8_t		key[16];
	uint64_t	tsc;
} __packed;

#define IWI_MEM_EEPROM_CTL	0x00300040
#define IWI_MEM_EVENT_CTL	0x00300004

/* possible flags for register IWI_MEM_EVENT */
#define IWI_LED_ASSOC	(1 << 5)
#define IWI_LED_MASK	0xd9fffffb

/* EEPROM = Electrically Erasable Programmable Read-Only Memory */

#define IWI_EEPROM_MAC	0x21

#define IWI_EEPROM_DELAY	1	/* minimum hold time (microsecond) */

#define IWI_EEPROM_C	(1 << 0)	/* Serial Clock */
#define IWI_EEPROM_S	(1 << 1)	/* Chip Select */
#define IWI_EEPROM_D	(1 << 2)	/* Serial data input */
#define IWI_EEPROM_Q	(1 << 4)	/* Serial data output */

#define IWI_EEPROM_SHIFT_D	2
#define IWI_EEPROM_SHIFT_Q	4

/*
 * control and status registers access macros
 */
#define CSR_READ_1(sc, reg)						\
	bus_space_read_1((sc)->sc_st, (sc)->sc_sh, (reg))

#define CSR_READ_2(sc, reg)						\
	bus_space_read_2((sc)->sc_st, (sc)->sc_sh, (reg))

#define CSR_READ_4(sc, reg)						\
	bus_space_read_4((sc)->sc_st, (sc)->sc_sh, (reg))

#define CSR_READ_REGION_4(sc, offset, datap, count)			\
	bus_space_read_region_4((sc)->sc_st, (sc)->sc_sh, (offset),	\
	    (datap), (count))

#define CSR_WRITE_1(sc, reg, val)					\
	bus_space_write_1((sc)->sc_st, (sc)->sc_sh, (reg), (val))

#define CSR_WRITE_2(sc, reg, val)					\
	bus_space_write_2((sc)->sc_st, (sc)->sc_sh, (reg), (val))

#define CSR_WRITE_4(sc, reg, val)					\
	bus_space_write_4((sc)->sc_st, (sc)->sc_sh, (reg), (val))

#define CSR_WRITE_REGION_1(sc, offset, datap, count)			\
	bus_space_write_region_1((sc)->sc_st, (sc)->sc_sh, (offset),	\
	    (datap), (count))
/*
 * indirect memory space access macros
 */
#define MEM_WRITE_1(sc, addr, val) do {					\
	CSR_WRITE_4((sc), IWI_CSR_INDIRECT_ADDR, (addr));		\
	CSR_WRITE_1((sc), IWI_CSR_INDIRECT_DATA, (val));		\
} while (/* CONSTCOND */0)

#define MEM_WRITE_2(sc, addr, val) do {					\
	CSR_WRITE_4((sc), IWI_CSR_INDIRECT_ADDR, (addr));		\
	CSR_WRITE_2((sc), IWI_CSR_INDIRECT_DATA, (val));		\
} while (/* CONSTCOND */0)

#define MEM_WRITE_4(sc, addr, val) do {					\
	CSR_WRITE_4((sc), IWI_CSR_INDIRECT_ADDR, (addr));		\
	CSR_WRITE_4((sc), IWI_CSR_INDIRECT_DATA, (val));		\
} while (/* CONSTCOND */0)

#define MEM_WRITE_MULTI_1(sc, addr, buf, len) do {			\
	CSR_WRITE_4((sc), IWI_CSR_INDIRECT_ADDR, (addr));		\
	CSR_WRITE_MULTI_1((sc), IWI_CSR_INDIRECT_DATA, (buf), (len));	\
} while (/* CONSTCOND */0)

/*
 * EEPROM access macro
 */
#define IWI_EEPROM_CTL(sc, val) do {					\
	MEM_WRITE_4((sc), IWI_MEM_EEPROM_CTL, (val));			\
	DELAY(IWI_EEPROM_DELAY);					\
} while (/* CONSTCOND */0)
@


1.27
log
@(Re)Association requests should contain a QoS Capability element,
not an EDCA Parameter Set element (spotted by IEEE80211_STA_ONLY).
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.26 2008/08/28 15:52:20 damien Exp $	*/
d35 2
a36 8
#define IWI_CSR_TX1_BASE	0x0208
#define IWI_CSR_TX1_SIZE	0x020c
#define IWI_CSR_TX2_BASE	0x0210
#define IWI_CSR_TX2_SIZE	0x0214
#define IWI_CSR_TX3_BASE	0x0218
#define IWI_CSR_TX3_SIZE	0x021c
#define IWI_CSR_TX4_BASE	0x0220
#define IWI_CSR_TX4_SIZE	0x0224
d38 1
a38 4
#define IWI_CSR_TX1_RIDX	0x0284
#define IWI_CSR_TX2_RIDX	0x0288
#define IWI_CSR_TX3_RIDX	0x028c
#define IWI_CSR_TX4_RIDX	0x0290
d45 1
a45 4
#define IWI_CSR_TX1_WIDX	0x0f84
#define IWI_CSR_TX2_WIDX	0x0f88
#define IWI_CSR_TX3_WIDX	0x0f8c
#define IWI_CSR_TX4_WIDX	0x0f90
@


1.26
log
@WPA support for iwi(4).
some initial WMM bits too.
use license.template while i'm here.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.25 2006/08/19 11:07:45 damien Exp $	*/
d267 1
a267 1
#define IWI_CMD_SET_EDCAIE		84
@


1.25
log
@o Improve 802.11 radiotap support (correct Rx antenna and Rx rate,
  add short preamble flag)
o Add short slot time support
o Ignore parity errors interrupts (as per Linux driver)
o Fix DMA sync ops
o Improve async commands processing
o Fix hardware WEP encryption (40/104bit keys)
o Set Tx power to the maximum value for 802.11a channels too
o Disable bluetooth coexistence and hardware antenna diversity as
  it seems to panic the firmware on some adapters
o Handle beacon miss and link degradation notifications (but don't
  automatically roam yet)
o Remove unused prototypes
o Cosmetic tweaks as always
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.24 2006/04/02 20:30:20 dim Exp $	*/
d4 1
a4 1
 * Copyright (c) 2004-2006
d7 3
a9 9
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice unmodified, this list of conditions, and the following
 *    disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d11 7
a17 11
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d137 1
d221 2
a222 1
#define IWI_DATA_XFLAG_CCK	(1 << 0)
d224 4
a227 3
	uint8_t		wep_txkey;
#define IWI_DATA_KEY_WEP40	(1 << 6)
#define IWI_DATA_KEY_WEP104	(1 << 7)
d256 2
a257 1
#define IWI_CMD_SET_WEP_KEY		18
d260 1
d262 1
d264 1
a264 1
#define IWI_CMD_SET_IV			34
d267 1
d300 31
d358 4
a361 1
	uint16_t	reserved2;
d421 2
a422 2
/* structure for command IWI_CMD_SET_WEP_KEY */
struct iwi_wep_key {
d424 1
a424 1
#define IWI_WEP_KEY_CMD_SETKEY	0x08
d429 14
a442 1
	uint8_t	key[IEEE80211_KEYBUF_SIZE];
@


1.24
log
@Prevent panic when loading pre-3.0 iwi firmware, and give a helpful
error message instead. Also return EINVAL for some other error paths.

ok damien, deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.23 2006/04/01 01:04:40 pedro Exp $	*/
a108 3
/* table2 offsets */
#define IWI_INFO_ADAPTER_MAC	40

a112 14
/* supported rates */
#define IWI_RATE_DS1	10
#define IWI_RATE_DS2	20
#define IWI_RATE_DS5	55
#define IWI_RATE_DS11	110
#define IWI_RATE_OFDM6	13
#define IWI_RATE_OFDM9	15
#define IWI_RATE_OFDM12	5
#define IWI_RATE_OFDM18	7
#define IWI_RATE_OFDM24	9
#define IWI_RATE_OFDM36	11
#define IWI_RATE_OFDM48	1
#define IWI_RATE_OFDM54	3

d145 1
d187 8
d225 3
a227 3
#define IWI_DATA_FLAG_SHPREAMBLE	0x04
#define IWI_DATA_FLAG_NO_WEP		0x20
#define IWI_DATA_FLAG_NEED_ACK		0x80
d230 2
d233 3
d324 5
d332 2
d383 1
a383 1
	uint8_t	reserved4;
d386 1
a386 1
	uint8_t	noise_reported;
@


1.23
log
@Put Damien's latest changes back in, okay deraadt@@.
Please note that the driver now requires new firmware (version 3.0).
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.21 2006/03/27 20:46:35 damien Exp $	*/
d132 4
a135 1
	uint32_t	version;
@


1.22
log
@Backout, causes panics
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.20 2006/02/26 19:14:40 damien Exp $	*/
d30 3
a32 3
#define IWI_TX_RING_SIZE	64
#define IWI_CMD_RING_SIZE	16
#define IWI_RX_RING_SIZE	32
d53 6
a58 6
#define IWI_CSR_CMD_READ_INDEX	0x0280
#define IWI_CSR_TX1_READ_INDEX	0x0284
#define IWI_CSR_TX2_READ_INDEX	0x0288
#define IWI_CSR_TX3_READ_INDEX	0x028c
#define IWI_CSR_TX4_READ_INDEX	0x0290
#define IWI_CSR_RX_READ_INDEX	0x02a0
d63 9
a72 7
#define IWI_CSR_CMD_WRITE_INDEX	0x0f80
#define IWI_CSR_TX1_WRITE_INDEX	0x0f84
#define IWI_CSR_TX2_WRITE_INDEX	0x0f88
#define IWI_CSR_TX3_WRITE_INDEX	0x0f8c
#define IWI_CSR_TX4_WRITE_INDEX	0x0f90
#define IWI_CSR_RX_WRITE_INDEX	0x0fa0
#define IWI_CSR_READ_INT	0x0ff4
d75 6
a80 6
#define IWI_INTR_RX_TRANSFER	0x00000002
#define IWI_INTR_CMD_TRANSFER	0x00000800
#define IWI_INTR_TX1_TRANSFER	0x00001000
#define IWI_INTR_TX2_TRANSFER	0x00002000
#define IWI_INTR_TX3_TRANSFER	0x00004000
#define IWI_INTR_TX4_TRANSFER	0x00008000
d87 2
a88 3
	(IWI_INTR_RX_TRANSFER |	IWI_INTR_CMD_TRANSFER |			\
	 IWI_INTR_TX1_TRANSFER | IWI_INTR_TX2_TRANSFER |		\
	 IWI_INTR_TX3_TRANSFER | IWI_INTR_TX4_TRANSFER |		\
d133 3
a135 1
	uint32_t	mode;
d144 1
d148 1
d162 1
d179 1
d225 1
d233 1
d246 1
d256 16
a271 15
#define IWI_CMD_ENABLE				2
#define IWI_CMD_SET_CONFIGURATION		6
#define IWI_CMD_SET_ESSID			8
#define IWI_CMD_SET_MAC_ADDRESS			11
#define IWI_CMD_SET_RTS_THRESHOLD		15
#define IWI_CMD_SET_FRAG_THRESHOLD		16
#define IWI_CMD_SET_POWER_MODE			17
#define IWI_CMD_SET_WEP_KEY			18
#define IWI_CMD_ASSOCIATE			21
#define IWI_CMD_SET_RATES			22
#define IWI_CMD_SCAN				26
#define IWI_CMD_DISABLE				33
#define IWI_CMD_SET_IV				34
#define IWI_CMD_SET_TX_POWER			35
#define IWI_CMD_SET_SENSITIVITY			42
a287 3
/* macro for command IWI_CMD_SET_SENSITIVITY */
#define IWI_RSSIDBM2RAW(rssi)	((rssi) - 112)

d298 1
d322 1
d387 1
@


1.21
log
@- complete rework of rings allocation (do things more like ral(4))
- upgrade to firmware v3.0 layout
- enable s/w antenna diversity
- many code cleanup
@
text
@d30 3
a32 3
#define IWI_CMD_RING_COUNT	16
#define IWI_TX_RING_COUNT	64
#define IWI_RX_RING_COUNT	32
d53 6
a58 6
#define IWI_CSR_CMD_RIDX	0x0280
#define IWI_CSR_TX1_RIDX	0x0284
#define IWI_CSR_TX2_RIDX	0x0288
#define IWI_CSR_TX3_RIDX	0x028c
#define IWI_CSR_TX4_RIDX	0x0290
#define IWI_CSR_RX_RIDX		0x02a0
d63 7
a69 6
#define IWI_CSR_CMD_WIDX	0x0f80
#define IWI_CSR_TX1_WIDX	0x0f84
#define IWI_CSR_TX2_WIDX	0x0f88
#define IWI_CSR_TX3_WIDX	0x0f8c
#define IWI_CSR_TX4_WIDX	0x0f90
#define IWI_CSR_RX_WIDX		0x0fa0
a71 3
/* aliases */
#define IWI_CSR_CURRENT_TX_RATE	IWI_CSR_TABLE0_BASE

d73 6
a78 6
#define IWI_INTR_RX_DONE	0x00000002
#define IWI_INTR_CMD_DONE	0x00000800
#define IWI_INTR_TX1_DONE	0x00001000
#define IWI_INTR_TX2_DONE	0x00002000
#define IWI_INTR_TX3_DONE	0x00004000
#define IWI_INTR_TX4_DONE	0x00008000
d85 3
a87 2
	(IWI_INTR_RX_DONE | IWI_INTR_CMD_DONE | IWI_INTR_TX1_DONE |	\
	 IWI_INTR_TX2_DONE | IWI_INTR_TX3_DONE | IWI_INTR_TX4_DONE |	\
d132 1
a132 3
	uint32_t	bootsz;
	uint32_t	ucodesz;
	uint32_t	mainsz;
a140 1

a143 1

a156 1

a172 1

a217 1

a224 1

a236 1
#define IWI_MAX_SCATTER	(IWI_MAX_NSEG - 2)
d246 15
a260 16
#define IWI_CMD_ENABLE			2
#define IWI_CMD_SET_CONFIG		6
#define IWI_CMD_SET_ESSID		8
#define IWI_CMD_SET_MAC_ADDRESS		11
#define IWI_CMD_SET_RTS_THRESHOLD	15
#define IWI_CMD_SET_FRAG_THRESHOLD	16
#define IWI_CMD_SET_POWER_MODE		17
#define IWI_CMD_SET_WEP_KEY		18
#define IWI_CMD_ASSOCIATE		21
#define IWI_CMD_SET_RATES		22
#define IWI_CMD_SCAN			26
#define IWI_CMD_DISABLE			33
#define IWI_CMD_SET_IV			34
#define IWI_CMD_SET_TX_POWER		35
#define IWI_CMD_SET_SENSITIVITY		42

d277 3
a289 1

a312 1

a376 1

@


1.20
log
@prettify + u_int{8,16,32}_t -> uint{8,16,32}_t
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.19 2006/01/29 15:44:16 damien Exp $	*/
d30 3
a32 3
#define IWI_TX_RING_SIZE	64
#define IWI_CMD_RING_SIZE	16
#define IWI_RX_RING_SIZE	32
d53 6
a58 6
#define IWI_CSR_CMD_READ_INDEX	0x0280
#define IWI_CSR_TX1_READ_INDEX	0x0284
#define IWI_CSR_TX2_READ_INDEX	0x0288
#define IWI_CSR_TX3_READ_INDEX	0x028c
#define IWI_CSR_TX4_READ_INDEX	0x0290
#define IWI_CSR_RX_READ_INDEX	0x02a0
d63 9
a72 7
#define IWI_CSR_CMD_WRITE_INDEX	0x0f80
#define IWI_CSR_TX1_WRITE_INDEX	0x0f84
#define IWI_CSR_TX2_WRITE_INDEX	0x0f88
#define IWI_CSR_TX3_WRITE_INDEX	0x0f8c
#define IWI_CSR_TX4_WRITE_INDEX	0x0f90
#define IWI_CSR_RX_WRITE_INDEX	0x0fa0
#define IWI_CSR_READ_INT	0x0ff4
d75 6
a80 6
#define IWI_INTR_RX_TRANSFER	0x00000002
#define IWI_INTR_CMD_TRANSFER	0x00000800
#define IWI_INTR_TX1_TRANSFER	0x00001000
#define IWI_INTR_TX2_TRANSFER	0x00002000
#define IWI_INTR_TX3_TRANSFER	0x00004000
#define IWI_INTR_TX4_TRANSFER	0x00008000
d87 2
a88 3
	(IWI_INTR_RX_TRANSFER |	IWI_INTR_CMD_TRANSFER |			\
	 IWI_INTR_TX1_TRANSFER | IWI_INTR_TX2_TRANSFER |		\
	 IWI_INTR_TX3_TRANSFER | IWI_INTR_TX4_TRANSFER |		\
d133 3
a135 1
	uint32_t	mode;
d144 1
d148 1
d162 1
d179 1
d225 1
d233 1
d246 1
d256 16
a271 15
#define IWI_CMD_ENABLE				2
#define IWI_CMD_SET_CONFIGURATION		6
#define IWI_CMD_SET_ESSID			8
#define IWI_CMD_SET_MAC_ADDRESS			11
#define IWI_CMD_SET_RTS_THRESHOLD		15
#define IWI_CMD_SET_FRAG_THRESHOLD		16
#define IWI_CMD_SET_POWER_MODE			17
#define IWI_CMD_SET_WEP_KEY			18
#define IWI_CMD_ASSOCIATE			21
#define IWI_CMD_SET_RATES			22
#define IWI_CMD_SCAN				26
#define IWI_CMD_DISABLE				33
#define IWI_CMD_SET_IV				34
#define IWI_CMD_SET_TX_POWER			35
#define IWI_CMD_SET_SENSITIVITY			42
a287 3
/* macro for command IWI_CMD_SET_SENSITIVITY */
#define IWI_RSSIDBM2RAW(rssi)	((rssi) - 112)

d298 1
d322 1
d387 1
@


1.19
log
@re-enable scatter and fix scanning of 802.11a channels.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.18 2006/01/18 20:25:22 damien Exp $	*/
d131 2
a132 2
	u_int32_t	version;
	u_int32_t	mode;
d136 1
a136 1
	u_int8_t	type;
d141 2
a142 2
	u_int8_t	seq;
	u_int8_t	flags;
d144 1
a144 1
	u_int8_t	reserved;
d148 2
a149 2
	u_int32_t	reserved[2];
	u_int8_t	type;
d157 2
a158 2
	u_int8_t	flags;
	u_int16_t	len;
d163 1
a163 1
	u_int8_t	state;
d170 1
a170 1
	u_int8_t		state;
d174 3
a176 3
	u_int16_t		capinfo;
	u_int16_t		status;
	u_int16_t		associd;
d181 2
a182 2
	u_int8_t	nchan;
	u_int8_t	reserved[47];
d187 4
a190 4
	u_int8_t	type;
	u_int8_t	nchan;
	u_int8_t	status;
	u_int8_t	reserved;
d195 13
a207 13
	u_int32_t	reserved1[2];
	u_int8_t	chan;
	u_int8_t	status;
	u_int8_t	rate;
	u_int8_t	rssi;	/* receiver signal strength indicator */
	u_int8_t	agc;	/* automatic gain control */
	u_int8_t	rssi_dbm;
	u_int16_t	signal;
	u_int16_t	noise;
	u_int8_t	antenna;
	u_int8_t	control;
	u_int8_t	reserved2[2];
	u_int16_t	len;
d213 4
a216 4
	u_int32_t	reserved1;
	u_int8_t	station;
	u_int8_t	reserved2[3];
	u_int8_t	cmd;
d218 4
a221 4
	u_int8_t	seq;
	u_int16_t	len;
	u_int8_t	priority;
	u_int8_t	flags;
d225 6
a230 6
	u_int8_t	xflags;
	u_int8_t	wep_txkey;
	u_int8_t	wepkey[IEEE80211_KEYBUF_SIZE];
	u_int8_t	rate;
	u_int8_t	antenna;
	u_int8_t	reserved3[10];
d233 1
a233 1
	u_int32_t	iv[2];
d235 1
a235 1
	u_int32_t	nseg;
d238 2
a239 2
	u_int32_t	seg_addr[IWI_MAX_NSEG];
	u_int16_t	seg_len[IWI_MAX_NSEG];
d245 1
a245 1
	u_int8_t	type;
d261 3
a263 3
	u_int8_t	len;
	u_int16_t	reserved;
	u_int8_t	data[120];
d268 2
a269 2
	u_int8_t	bssid[IEEE80211_ADDR_LEN];
	u_int8_t	reserved[2];
d285 3
a287 3
	u_int8_t	mode;
	u_int8_t	nrates;
	u_int8_t	type;
d290 2
a291 2
	u_int8_t	reserved;
	u_int8_t	rates[12];
d296 2
a297 2
	u_int8_t	nchan;
	u_int8_t	mode;
d299 2
a300 2
		u_int8_t	chan;
		u_int8_t	power;
d308 2
a309 2
	u_int8_t	chan;
	u_int8_t	auth;
d313 13
a325 13
	u_int8_t	type;
	u_int8_t	reserved1;
	u_int16_t	reserved2;
	u_int8_t	plen;
	u_int8_t	mode;
	u_int8_t	bssid[IEEE80211_ADDR_LEN];
	u_int8_t	tstamp[8];
	u_int16_t	capinfo;
	u_int16_t	lintval;
	u_int16_t	intval;
	u_int8_t	dst[IEEE80211_ADDR_LEN];
	u_int32_t	reserved3;
	u_int16_t	reserved4;
d330 2
a331 2
	u_int32_t	index;
	u_int8_t	channels[54];
d335 1
a335 1
	u_int8_t	type[27];
d341 6
a346 6
	u_int8_t	reserved1;
	u_int16_t	reserved2;
	u_int16_t	passive;	/* dwell time */
	u_int16_t	directed;	/* dwell time */
	u_int16_t	broadcast;	/* dwell time */
	u_int16_t	bdirected;	/* dwell time */
d351 20
a370 20
	u_int8_t	bluetooth_coexistence;
	u_int8_t	reserved1;
	u_int8_t	answer_pbreq;
	u_int8_t	allow_invalid_frames;
	u_int8_t	multicast_enabled;
	u_int8_t	exclude_unicast_unencrypted;
	u_int8_t	disable_unicast_decryption;
	u_int8_t	exclude_multicast_unencrypted;
	u_int8_t	disable_multicast_decryption;
	u_int8_t	antenna;
	u_int8_t	reserved2;
	u_int8_t	bg_autodetection;
	u_int8_t	reserved3;
	u_int8_t	enable_multicast_filtering;
	u_int8_t	bluetooth_threshold;
	u_int8_t	reserved4;
	u_int8_t	allow_beacon_and_probe_resp;
	u_int8_t	allow_mgt;
	u_int8_t	noise_reported;
	u_int8_t	reserved5;
d375 1
a375 1
	u_int8_t	cmd;
d377 4
a380 4
	u_int8_t	seq;
	u_int8_t	idx;
	u_int8_t	len;
	u_int8_t	key[IEEE80211_KEYBUF_SIZE];
@


1.18
log
@add some bits to control assoc led.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.17 2005/10/06 20:33:39 damien Exp $	*/
d237 1
d335 1
a335 1
	u_int8_t	type[26];
d341 1
a341 1
	u_int8_t	reserved1[2];
@


1.17
log
@o Use firmware extended scan command; this one doesn't crash when scanning
  the 5GHz band.
o Enable 802.11a channels scanning for 2915ABG adapters.
o Fix a typo (negociated->negotiated).
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.16 2005/09/19 20:01:12 damien Exp $	*/
d4 1
a4 1
 * Copyright (c) 2004, 2005
d382 7
a389 2

#define IWI_MEM_EEPROM_CTL	0x00300040
@


1.16
log
@o Add initial bits for IBSS support.
o Fix association with APs not broadcasting their SSIDs.
o Don't send anything if there is less than eight free slots in Tx ring.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.15 2005/05/22 16:05:47 damien Exp $	*/
a252 1
#define IWI_CMD_SCAN				20
d255 1
d287 1
a287 1
#define IWI_RATESET_TYPE_NEGOCIATED	0
d329 1
a329 6
	u_int8_t	type;
#define IWI_SCAN_TYPE_PASSIVE	1
#define IWI_SCAN_TYPE_DIRECTED	2
#define IWI_SCAN_TYPE_BROADCAST	3
#define IWI_SCAN_TYPE_BDIRECTED	4
	u_int16_t	intval;
d333 13
a345 1
	u_int8_t	reserved[3];
@


1.15
log
@set fragmentation threshold in iwi_config().
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.13 2005/05/22 15:14:10 damien Exp $	*/
d62 1
d213 3
a215 1
	u_int32_t	reserved1[2];
d230 1
a230 1
	u_int8_t	reserved2[10];
d265 6
d331 1
d333 1
d416 3
@


1.14
log
@some changes for IBSS mode support (not yet working).
@
text
@d247 1
@


1.13
log
@add monitor mode support.  fast channel hop is not yet implemented though.
requires a firmware upgrade to version 1.0.4.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.12 2005/03/12 13:31:26 damien Exp $	*/
d333 1
a333 1
	u_int8_t	answer_broadcast_probe_req;
@


1.12
log
@s/__attribute__((__packed__))/__packed/
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.11 2005/01/09 16:47:50 damien Exp $	*/
d320 1
@


1.11
log
@- add support for 2.2 firmware
- fix rssi decoding
- implement basics for IBSS support
- decrease channel scan time from 100ms to 40ms
- cosmetic changes while i'm here
@
text
@d1 1
a1 1
/*	$OpenBSD: if_iwireg.h,v 1.10 2005/01/05 09:07:16 jsg Exp $	*/
d132 1
a132 1
} __attribute__((__packed__));
d144 1
a144 1
} __attribute__((__packed__));
d158 1
a158 1
} __attribute__((__packed__));
d165 1
a165 1
} __attribute__((__packed__));
d176 1
a176 1
} __attribute__((__packed__));
d182 1
a182 1
} __attribute__((__packed__));
d190 1
a190 1
} __attribute__((__packed__));
d207 1
a207 1
} __attribute__((__packed__));
d236 1
a236 1
} __attribute__((__packed__));
d259 1
a259 1
} __attribute__((__packed__));
d281 1
a281 1
} __attribute__((__packed__));
d292 2
a293 2
	} __attribute__((__packed__)) chan[37];
} __attribute__((__packed__));
d315 1
a315 1
} __attribute__((__packed__));
d326 1
a326 1
} __attribute__((__packed__));
d350 1
a350 1
} __attribute__((__packed__));
d360 1
a360 1
} __attribute__((__packed__));
@


1.10
log
@Use $OpenBSD$ instead of $Id$. ok damien@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 2004
d79 1
d87 2
a88 2
	 IWI_INTR_FW_INITED | IWI_INTR_FATAL_ERROR |			\
	 IWI_INTR_PARITY_ERROR)
d155 1
d178 6
d200 1
a200 5
#define IWI_RSSI2DBM(rssi, agc)						\
	((u_int8_t)((rssi) -						\
	 ((((agc) & 0x2e) >> 1) + ((((agc) | 0x8c) & 0xcc) >> 2) +	\
	 ((agc) & 0x0f))))
	u_int8_t	reserved2;
d205 1
a205 1
	u_int8_t	reserved3[2];
d267 1
a267 1
#define IWI_RSSI2SENS(rssi)	((rssi) + 112)
d334 1
a334 1
	u_int8_t	enable_multicast;
d341 1
a341 1
	u_int8_t	bg_autodetect;
d348 1
a348 1
	u_int8_t	pass_noise;
@


1.9
log
@indent
@
text
@d1 1
a1 1
/*	$Id: if_iwireg.h,v 1.8 2004/12/04 19:19:24 damien Exp $ */
@


1.8
log
@minor cleaning
@
text
@d1 1
a1 1
/*	$Id: if_iwireg.h,v 1.7 2004/12/04 19:01:47 damien Exp $ */
d366 4
a369 4
#define IWI_EEPROM_C       (1 << 0)        /* Serial Clock */
#define IWI_EEPROM_S       (1 << 1)        /* Chip Select */
#define IWI_EEPROM_D       (1 << 2)        /* Serial data input */
#define IWI_EEPROM_Q       (1 << 4)        /* Serial data output */
d371 2
a372 2
#define IWI_EEPROM_SHIFT_D    2
#define IWI_EEPROM_SHIFT_Q    4
@


1.7
log
@fix shared authentication
@
text
@d1 1
a1 1
/*	$Id: if_iwireg.h,v 1.6 2004/12/04 17:24:06 damien Exp $ */
d428 1
a428 1
} while (0)
@


1.6
log
@Clean DMA allocation of Tx and Rx rings
@
text
@d1 1
a1 1
/*	$Id: if_iwireg.h,v 1.5 2004/11/24 21:20:58 damien Exp $ */
d295 3
a297 3
#define IWI_AUTH_OPEN	(0 << 4)
#define IWI_AUTH_SHARED	(1 << 4)
#define IWI_AUTH_NONE	(3 << 4)
@


1.5
log
@add missing field in struct iwi_associate
@
text
@d1 1
a1 1
/*	$Id: if_iwireg.h,v 1.4 2004/11/23 21:28:22 damien Exp $ */
d30 3
a32 2
#define IWI_TX_SLOT_SIZE	128
#define IWI_RX_NSLOTS		32
d43 15
a57 3
#define IWI_CSR_TX_BASE		0x0200
#define IWI_CSR_TX_SIZE		0x0204
#define IWI_CSR_TX_READ_INDEX	0x0280
d59 1
a59 1
#define IWI_CSR_RX_SLOT_BASE	0x0500
d63 5
a67 1
#define IWI_CSR_TX_WRITE_INDEX	0x0f80
d73 1
a73 1
#define IWI_INTR_TX0_TRANSFER	0x00000800
d83 1
a83 1
	(IWI_INTR_RX_TRANSFER |	IWI_INTR_TX0_TRANSFER |			\
d206 2
a207 1
struct iwi_data {
d235 2
a236 1
struct iwi_cmd {
@


1.4
log
@add support for 2915ABG adapters
@
text
@d1 1
a1 1
/*	$Id: if_iwireg.h,v 1.3 2004/11/22 21:34:35 damien Exp $ */
d291 1
@


1.3
log
@use the filesystem based firmware loader; ok deraadt@@
@
text
@d1 1
a1 1
/*	$Id: if_iwireg.h,v 1.2 2004/11/22 19:20:28 damien Exp $ */
d239 1
d299 1
@


1.2
log
@fix a typo
@
text
@d1 1
a1 1
/*	$Id: if_iwireg.h,v 1.1 2004/10/20 12:50:48 deraadt Exp $ */
d109 6
@


1.1
log
@support for Intel 2100/2200BG/2915ABG wireless devices written by
damien.bergamini@@free.fr. This gets imported even though there is no
firmware in the tree.  This is a ridiculous situation: everything is
free, everything works, except Intel will not let us put a little
dinky firmware flat file into OpenBSD.  So OpenBSD is ready for Intel
whenever they are.

Are you a consumer?  Do you want to see this changed -- contact
jketreno@@linux.intel.com and tell him how you feel about this.  He is
likely someone who cannot do anything about it, though.  If anyone can
work up or down the chain around his department and get me contact
information for various people, I will compile and later publish such
a list.  Go do it people -- this is how things will change.  Get me
email addresses and phone numbers.
@
text
@d1 1
a1 1
/*	$Id: if_iwireg.h,v 1.1 2004/10/17 21:55:23 damien Exp $ */
d120 1
a120 1
} __packet;
@

