head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.26
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.14
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.22
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.20
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.18
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.16
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.12
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.10
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.8
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.1.0.22
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.18
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.20
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.16
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.14
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.12
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.10
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2016.09.19.06.46.44;	author ratchov;	state Exp;
branches;
next	1.3;
commitid	qGgYgJTgEFuAoGj4;

1.3
date	2010.09.21.02.09.15;	author jakemsr;	state Exp;
branches;
next	1.2;

1.2
date	2010.08.27.16.26.35;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.07.20.08.45;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove unused getdev() audio driver functions.
@
text
@/* $OpenBSD: auixpvar.h,v 1.3 2010/09/21 02:09:15 jakemsr Exp $ */
/* $NetBSD: auixpvar.h,v 1.3 2005/01/12 15:54:34 kent Exp $*/

/*
 * Copyright (c) 2004, 2005 Reinoud Zandijk <reinoud@@netbsd.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */


/*
 * NetBSD audio driver for ATI IXP-{150,200,...} audio driver hardware.
 */

#define DMA_DESC_CHAIN	255

/* audio format structure describing our hardware capabilities */
/* XXX min and max sample rates are for AD1888 codec XXX */
#define AUIXP_NFORMATS 6

#define AUIXP_MINRATE  7000
#define AUIXP_MAXRATE 48000

/* auixp structures; used to record alloced DMA space */
struct auixp_dma {
	/* bus mappings */
	bus_dmamap_t		 map;
	caddr_t			 addr;
	bus_dma_segment_t	 segs[1];
	int			 nsegs;
	size_t			 size;

	/* audio feeder */
	void			 (*intr)(void *);
	void			*intrarg;

	/* status and setup bits */
	int			 running;
	u_int32_t		 linkptr;
	u_int32_t		 dma_enable_bit;

	/* linked list of all mapped area's */
	SLIST_ENTRY(auixp_dma)	 dma_chain;
};

struct auixp_codec {
	struct auixp_softc	*sc;

	int			 present;
	int			 codec_nr;

	struct ac97_codec_if	*codec_if;
	struct ac97_host_if	 host_if;
	enum ac97_host_flags	 codec_flags;
};

struct auixp_softc {
	struct device		sc_dev;
	void			*sc_ih;

	/* card properties */
	int			has_4ch, has_6ch, is_fixed, has_spdif;

	/* bus tags */
	bus_space_tag_t		sc_iot;
	bus_space_handle_t	sc_ioh;
	bus_addr_t		sc_iob;
	bus_size_t		sc_ios;

	pcitag_t		sc_tag;
	pci_chipset_tag_t	sc_pct;

	bus_dma_tag_t		sc_dmat;

	/* DMA business */
	struct auixp_dma	*sc_output_dma;
	struct auixp_dma	*sc_input_dma;

	/* list of allocated DMA pieces */
	SLIST_HEAD(auixp_dma_list, auixp_dma) sc_dma_list;

	/* codec */
	struct auixp_codec	sc_codec;
	int			sc_codec_not_ready_bits;

	/* last set audio parameters */
	struct audio_params	sc_play_params;
	struct audio_params	sc_rec_params;
};
@


1.3
log
@* add autoconf(9) activate function.  basically the same as other ac97(4)
  devices.
* only one codec will ever be supported, and there's no reason to restrict
  the supported codec to being in the first codec slot.
@
text
@d1 1
a1 1
/* $OpenBSD: auixpvar.h,v 1.2 2010/08/27 16:26:35 deraadt Exp $ */
a84 1
	audio_device_t		sc_audev;
@


1.2
log
@Delete #if'd out powerhook code which is just unfinished scaffolding
@
text
@d1 1
a1 1
/* $OpenBSD: auixpvar.h,v 1.1 2005/08/07 20:08:45 mickey Exp $ */
d109 2
a110 3
	/* codecs */
	int			sc_num_codecs;
	struct auixp_codec	sc_codec[ATI_IXP_CODECS];
@


1.1
log
@ati ixp audio; ported form ntbsd in <4h of boretime; testing by krw@@ and ian@@
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a116 4

	/* suspend/resume */
	void			*powerhook;
	u_int16_t		*savemem;
@

