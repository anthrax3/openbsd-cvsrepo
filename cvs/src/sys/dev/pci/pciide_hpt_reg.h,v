head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.26
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.28
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.16
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.24
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.22
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.20
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.18
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.14
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.12
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.10
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.8
	OPENBSD_5_0:1.11.0.6
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.4
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.10.0.20
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.22
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.18
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.16
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.14
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.12
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.10
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.8
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.3
	UBC:1.2.0.4
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SMP:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.2;
locks; strict;
comment	@ * @;


1.11
date	2010.07.23.07.47.13;	author jsg;	state Exp;
branches;
next	1.10;

1.10
date	2004.09.24.07.38.38;	author grange;	state Exp;
branches;
next	1.9;

1.9
date	2003.09.28.21.01.43;	author grange;	state Exp;
branches;
next	1.8;

1.8
date	2003.07.29.18.16.27;	author grange;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.19.21.10.24;	author grange;	state Exp;
branches;
next	1.6;

1.6
date	2003.07.19.20.53.01;	author grange;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.18.20.21.50;	author grange;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.21.20.10.33;	author grange;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.06.14.35.47;	author gluk;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.03.22.03.44;	author chris;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2001.03.26.22.17.06;	author chris;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.05.14.22.25.55;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2001.10.31.03.22.47;	author nate;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2003.03.28.00.38.24;	author niklas;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2004.02.19.10.56.29;	author niklas;	state Exp;
branches;
next	;

1.2.4.1
date	2002.10.29.00.33.29;	author art;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2003.05.19.22.18.02;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Manuel Bouyer rescinded clauses 3 and 4 of his license text.
@
text
@/*	$OpenBSD: pciide_hpt_reg.h,v 1.10 2004/09/24 07:38:38 grange Exp $	*/
/*      $NetBSD: pciide_hpt_reg.h,v 1.4 2001/07/23 14:55:27 bouyer Exp $       */

/*
 * Copyright (c) 2000 Manuel Bouyer.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef _DEV_PCI_PCIIDE_HPT_REG_H_
#define _DEV_PCI_PCIIDE_HPT_REG_H_

/*
 * Register definitions for Highpoint PCI IDE controllers.
 *
 * The HPT366 has 2 PCI IDE functions, each of them has only one channel.
 * The HPT370 and HPT372 has the 2 channels on the same PCI IDE function.
 */

/*
 * The HPT366, HPT370 and HPT372 have the same vendor/device ID but not the
 * same revision.
 */
#define HPT366_REV 0x01
#define HPT370_REV 0x03
#define HPT370A_REV 0x04
#define HPT372_REV 0x05
#define HPT374_REV 0x07

#define HPT_IDETIM(chan, drive) (0x40 + ((drive) * 4) + ((chan) * 8))
#define HPT_IDETIM_BUFEN		0x80000000
#define HPT_IDETIM_MSTEN		0x40000000
#define HPT_IDETIM_DMAEN		0x20000000
#define HPT_IDETIM_UDMAEN		0x10000000

#define HPT366_CTRL1		0x50
#define HPT366_CTRL1_BLKDIS(chan)	(0x40 << (chan))
#define HPT366_CTRL1_CHANEN(chan)	(0x10 << (chan))
#define HPT366_CTRL1_CLRBUF(chan)	(0x04 << (chan))
#define HPT366_CTRL1_LEG(chan)		(0x01 << (chan))

#define HPT366_CTRL2		0x51
#define HPT366_CTRL2_FASTIRQ		0x80
#define HPT366_CTRL2_HOLDIRQ(chan)	(0x20 << (chan))
#define HPT366_CTRL2_SGEN		0x10
#define HPT366_CTRL2_CLEARFIFO(chan)	(0x04 << (chan))
#define HPT366_CTRL2_CLEARBMSM		0x02
#define HPT366_CTRL2_CLEARSG		0x01

#define HPT366_CTRL3(chan)	(0x52 + ((chan) * 4))
#define HPT366_CTRL3_PDMA		0x8000
#define HPT366_CTRL3_BP			0x4000
#define HPT366_CTRL3_FASTIRQ_OFFSET	9
#define HPT366_CTRL3_FASTIRQ_MASK	0x3

#define HPT370_CTRL1(chan)	(0x50 + ((chan) * 4))
#define HPT370_CTRL1_CLRSG		0x80
#define HPT370_CTRL1_READF		0x40
#define HPT370_CTRL1_CLRST		0x20
#define HPT370_CTRL1_CLRSGC		0x10
#define HPT370_CTRL1_BLKDIS		0x08
#define HPT370_CTRL1_EN			0x04
#define HPT370_CTRL1_CLRDBUF		0x02
#define HPT370_CTRL1_LEGEN		0x01

#define HPT370_CTRL2(chan)	(0x51 + ((chan) * 4))
#define HPT370_CTRL2_FASTIRQ		0x02
#define HPT370_CTRL2_HIRQ		0x01

#define HPT370_CTRL3(chan)	(0x52 + ((chan) * 4))
#define HPT370_CTRL3_HIZ		0x8000
#define HPT370_CTRL3_BP			0x4000
#define HPT370_CTRL3_FASTIRQ_OFFSET	9
#define HPT370_CTRL3_FASTIRQ_MASK	0x3

#define HPT_STAT1		0x58
#define HPT_STAT1_IRQPOLL(chan)		(0x40 << (chan)) /* 366 only */
#define HPT_STAT1_DMARQ(chan) 		(0x04 << ((chan) * 3))
#define HPT_STAT1_DMACK(chan) 		(0x02 << ((chan) * 3))
#define HPT_STAT1_IORDY(chan) 		(0x01 << ((chan) * 3))

#define HPT_STAT2		0x59
#define HPT_STAT2_FLT_RST		0x40 /* 366 only */
#define HPT_STAT2_RST(chan)		(0x40 << (chan))  /* 370 only */
#define HPT_STAT2_POLLEN(chan)		(0x04 << ((chan) * 3))
#define HPT_STAT2_IRQD1(chan)		(0x02 << ((chan) * 3))
#define HPT_STAT2_IRQD0_CH1		0x08
#define HPT_STAT2_POLLST		0x01

#define HPT_CSEL		0x5a
#define HPT_CSEL_IRQDIS			0x10 /* 370 only */
#define HPT_CSEL_PCIDIS			0x08 /* 370 only */
#define HPT_CSEL_PCIWR			0x04 /* 370 only */
#define HPT_CSEL_CBLID(chan)		 (0x01 << (1 - (chan)))

#define HPT_SC2		0x5b
#define HPT_SC2_OSC_OK	0x80
#define HPT_SC2_OSC_EN	0x20
#define HPT_SC2_ECLK	0x10
#define HPT_SC2_BPIO	0x08
#define HPT_SC2_DMARQW	0x04
#define HPT_SC2_SCLK	0x02
#define HPT_SC2_MAEN	0x01

static u_int32_t hpt366_pio[] =
	{0x00d0a7aa, 0x00c8a753, 0x00c8a742, 0x00c8a731};
static u_int32_t hpt366_dma[] =
	{0x20c8a797, 0x20c8a742, 0x20c8a731};
static u_int32_t hpt366_udma[] =
	{0x10c8a731, 0x10cba731, 0x10caa731, 0x10cfa731, 0x10c9a731};

static u_int32_t hpt370_pio[] =
	{0x06914e8a, 0x06914e65, 0x06514e33, 0x06514e22, 0x06514e21};
static u_int32_t hpt370_dma[] =
	{0x26514e97, 0x26514e33, 0x26514e21};
static u_int32_t hpt370_udma[] =
	{0x16514e31, 0x164d4e31, 0x16494e31, 0x166d4e31, 0x16454e31,
	 0x16454e31};

static u_int32_t hpt372_pio[] =
	{0x0d029d5e, 0x0d029d26, 0x0c829ca6, 0x0c829c84, 0x0c829c62};
static u_int32_t hpt372_dma[] =
	{0x2c82922e, 0x2c829266, 0x2c829262};
static u_int32_t hpt372_udma[] =
	{0x1c82dc62, 0x1c9adc62, 0x1c91dc62, 0x1c8edc62, 0x1c8ddc62,
	 0x1c6ddc62, 0x1c81dc62};

static u_int32_t hpt374_pio[] =
	{0x0ac1f48a, 0x0ac1f465, 0x0a81f454, 0x0a81f443, 0x0a81f442};
static u_int32_t hpt374_dma[] =
	{0x228082ea, 0x22808254, 0x22808242};
static u_int32_t hpt374_udma[] =
	{0x121882ea, 0x12148254, 0x120c8242, 0x128c8242, 0x12ac8242,
	 0x12848242, 0x12808242};

#endif	/* !_DEV_PCI_PCIIDE_HPT_REG_H_ */
@


1.10
log
@Multiple inclusion protection.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_hpt_reg.h,v 1.9 2003/09/28 21:01:43 grange Exp $	*/
d15 1
a15 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Manuel Bouyer.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
@


1.9
log
@kill trailing spaces, no functional changes
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_hpt_reg.h,v 1.8 2003/07/29 18:16:27 grange Exp $	*/
d34 2
d159 2
@


1.8
log
@Support for HPT302 and HPT371, inspired from the FreeBSD ata driver.
Thanks to otto@@ for help in regress testing and tedu@@ for unslacking me.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_hpt_reg.h,v 1.7 2003/07/19 21:10:24 grange Exp $	*/
d24 1
a24 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     
d138 1
a138 1
static u_int32_t hpt370_udma[] = 
@


1.7
log
@Remove bullshit: hpt366 rev. 1 is hpt366, not hpt372a.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_hpt_reg.h,v 1.6 2003/07/19 20:53:01 grange Exp $	*/
d141 8
@


1.6
log
@typo
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_hpt_reg.h,v 1.5 2003/06/18 20:21:50 grange Exp $	*/
a49 1
#define HPT372A_REV 0x01
@


1.5
log
@For HPT370 chips disable interrupt prediction and correct timing
value for UDMA5. Enable UDMA5 for HPT370A again since it's safe now.
Work by Otto Moerbeek <otto@@drijf.net> via PR 3282. Help in testing from
gluk@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_hpt_reg.h,v 1.4 2003/02/21 20:10:33 grange Exp $	*/
d43 1
a43 1
 * The HPT366, HPT370 and HPT372 have the save vendor/device ID but not the
@


1.4
log
@Fix Manuel Bouyer's copyright, from NetBSD
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_hpt_reg.h,v 1.3 2002/07/06 14:35:47 gluk Exp $	*/
d141 1
a141 1
	 0x1a85f442};
@


1.3
log
@HPT 372, 372A and 374.  Only HPT372 was tested.
Mostly from NetBSD.

deraadt@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_hpt_reg.h,v 1.2 2001/08/03 22:03:44 chris Exp $	*/
d17 1
a17 2
 *      This product includes software developed by the University of
 *      California, Berkeley and its contributors.
@


1.2
log
@from NetBSD:
Add support for Acard ATP850/860, Highpoint HPT370A, and ALi UDMA4/5 controllers
Workaround some OPTi chipset bugs (opti_chip_map still disabled by default)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 2
 * Register definitions for the Highpoint HPT366 UDMA/66 * and HPT370 UDMA/100
 * PCI IDE controller.  
d40 1
a40 1
 * The HPT370 has the 2 channels on the same PCI IDE function.
d44 2
a45 2
 * The HPT366 and HPT370 have the save vendor/device ID but not the
 * same revision
d50 3
d120 9
d143 8
@


1.2.4.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_hpt_reg.h,v 1.2 2001/08/03 22:03:44 chris Exp $	*/
d37 2
a38 1
 * Register definitions for Highpoint PCI IDE controllers.
d41 1
a41 1
 * The HPT370 and HPT372 has the 2 channels on the same PCI IDE function.
d45 2
a46 2
 * The HPT366, HPT370 and HPT372 have the save vendor/device ID but not the
 * same revision.
a50 3
#define HPT372_REV 0x05
#define HPT372A_REV 0x01
#define HPT374_REV 0x07
a117 9
#define HPT_SC2		0x5b
#define HPT_SC2_OSC_OK	0x80
#define HPT_SC2_OSC_EN	0x20
#define HPT_SC2_ECLK	0x10
#define HPT_SC2_BPIO	0x08
#define HPT_SC2_DMARQW	0x04
#define HPT_SC2_SCLK	0x02
#define HPT_SC2_MAEN	0x01

a131 8

static u_int32_t hpt374_pio[] =
	{0x0ac1f48a, 0x0ac1f465, 0x0a81f454, 0x0a81f443, 0x0a81f442};
static u_int32_t hpt374_dma[] =
	{0x228082ea, 0x22808254, 0x22808242};
static u_int32_t hpt374_udma[] =
	{0x121882ea, 0x12148254, 0x120c8242, 0x128c8242, 0x12ac8242,
	 0x12848242, 0x12808242};
@


1.2.4.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d17 2
a18 1
 *      This product includes software developed by Manuel Bouyer.
@


1.1
log
@Support for Ultra/66 on Highpoint HPT366 and Ultra/100 on HPT370
@
text
@d2 1
a2 1
/*      $NetBSD: pciide_hpt_reg.h,v 1.3 2001/01/05 15:20:53 bouyer Exp $       */
d50 1
@


1.1.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: pciide_hpt_reg.h,v 1.1 2001/03/26 22:17:06 chris Exp $	*/
@


1.1.4.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 2
a2 2
/*	$OpenBSD: pciide_hpt_reg.h,v 1.1.4.1 2001/05/14 22:25:55 niklas Exp $	*/
/*      $NetBSD: pciide_hpt_reg.h,v 1.4 2001/07/23 14:55:27 bouyer Exp $       */
a49 1
#define HPT370A_REV 0x04
@


1.1.4.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d17 2
a18 1
 *      This product includes software developed by Manuel Bouyer.
d37 2
a38 1
 * Register definitions for Highpoint PCI IDE controllers.
d41 1
a41 1
 * The HPT370 and HPT372 has the 2 channels on the same PCI IDE function.
d45 2
a46 2
 * The HPT366, HPT370 and HPT372 have the save vendor/device ID but not the
 * same revision.
a50 3
#define HPT372_REV 0x05
#define HPT372A_REV 0x01
#define HPT374_REV 0x07
a117 9
#define HPT_SC2		0x5b
#define HPT_SC2_OSC_OK	0x80
#define HPT_SC2_OSC_EN	0x20
#define HPT_SC2_ECLK	0x10
#define HPT_SC2_BPIO	0x08
#define HPT_SC2_DMARQW	0x04
#define HPT_SC2_SCLK	0x02
#define HPT_SC2_MAEN	0x01

a131 8

static u_int32_t hpt374_pio[] =
	{0x0ac1f48a, 0x0ac1f465, 0x0a81f454, 0x0a81f443, 0x0a81f442};
static u_int32_t hpt374_dma[] =
	{0x228082ea, 0x22808254, 0x22808242};
static u_int32_t hpt374_udma[] =
	{0x121882ea, 0x12148254, 0x120c8242, 0x128c8242, 0x12ac8242,
	 0x12848242, 0x12808242};
@


1.1.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d24 1
a24 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
d43 1
a43 1
 * The HPT366, HPT370 and HPT372 have the same vendor/device ID but not the
d50 1
d139 1
a139 1
static u_int32_t hpt370_udma[] =
d141 1
a141 9
	 0x16454e31};

static u_int32_t hpt372_pio[] =
	{0x0d029d5e, 0x0d029d26, 0x0c829ca6, 0x0c829c84, 0x0c829c62};
static u_int32_t hpt372_dma[] =
	{0x2c82922e, 0x2c829266, 0x2c829262};
static u_int32_t hpt372_udma[] =
	{0x1c82dc62, 0x1c9adc62, 0x1c91dc62, 0x1c8edc62, 0x1c8ddc62,
	 0x1c6ddc62, 0x1c81dc62};
@


