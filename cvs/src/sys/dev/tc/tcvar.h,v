head	1.16;
access;
symbols
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.24
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.14
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.22
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.20
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.18
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.16
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.12
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.10
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.8
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.6
	OPENBSD_5_0:1.16.0.4
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.14.0.8
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.4
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.6
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.2
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.13.0.4
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.2
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.12.0.14
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.12
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.10
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.8
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.6
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.4
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.10
	UBC:1.7.0.4
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.20
	OPENBSD_2_8:1.6.0.18
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.16
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.14
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.12
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.10
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.8
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.6
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4;
locks; strict;
comment	@ * @;


1.16
date	2010.11.11.17.54.54;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2010.09.22.12.36.32;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2008.08.09.16.42.30;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2007.11.06.18.20.07;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2004.06.28.02.28.43;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2003.04.27.11.22.54;	author ho;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.02.22.56.06;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.14.03.16.08;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.01.27.03;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.27.20.23.38;	author miod;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	96.12.08.01.03.07;	author niklas;	state Exp;
branches
	1.6.14.1;
next	1.5;

1.5
date	96.11.12.20.31.02;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.05.26.00.27.56;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.21.22.26.30;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.18.23.48.24;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.26.18.19.34;	author deraadt;	state Exp;
branches;
next	;

1.6.14.1
date	2001.07.04.10.43.38;	author niklas;	state Exp;
branches;
next	1.6.14.2;

1.6.14.2
date	2002.03.28.15.09.09;	author niklas;	state Exp;
branches;
next	1.6.14.3;

1.6.14.3
date	2003.03.28.00.38.30;	author niklas;	state Exp;
branches;
next	1.6.14.4;

1.6.14.4
date	2003.05.13.19.35.11;	author ho;	state Exp;
branches;
next	;

1.7.4.1
date	2002.06.11.03.42.30;	author art;	state Exp;
branches;
next	1.7.4.2;

1.7.4.2
date	2003.05.19.22.23.39;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.16
log
@DEC 3000/400 has a 22.5MHz TURBOchannel bus instead of the usual 25MHz;
correctly report this.

Then, in asc@@tc, compute synchronous transfer periods (involving the bus
clock) with a better accuracy.

ok krw@@
@
text
@/* $OpenBSD: tcvar.h,v 1.15 2010/09/22 12:36:32 miod Exp $ */
/* $NetBSD: tcvar.h,v 1.17 2000/06/04 19:15:15 cgd Exp $ */

/*
 * Copyright (c) 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#ifndef __DEV_TC_TCVAR_H__
#define __DEV_TC_TCVAR_H__

/*
 * Definitions for TURBOchannel autoconfiguration.
 */

#include <machine/bus.h>
#include <dev/tc/tcreg.h>

/*
 * Machine-dependent definitions.
 */
#include <machine/tc_machdep.h>

struct tc_softc {
	struct	device sc_dv;

	int	sc_speed;
	int	sc_nslots;
	struct tc_slotdesc *sc_slots;

	void	(*sc_intr_establish)(struct device *, void *,
			int, int (*)(void *), void *, const char *);
	void	(*sc_intr_disestablish)(struct device *, void *, const char *);
	bus_dma_tag_t (*sc_get_dma_tag)(int);
};

/*
 * Arguments used to attach TURBOchannel busses.
 */
struct tcbus_attach_args {
	char		*tba_busname;		/* XXX should be common */
	bus_space_tag_t tba_memt;

	/* Bus information */
	u_int		tba_speed;		/* see TC_SPEED_* below */
	u_int		tba_nslots;
	struct tc_slotdesc *tba_slots;
	u_int		tba_nbuiltins;
	const struct tc_builtin *tba_builtins;
	

	/* TC bus resource management; XXX will move elsewhere eventually. */
	void	(*tba_intr_establish)(struct device *, void *,
			int, int (*)(void *), void *, const char *);
	void	(*tba_intr_disestablish)(struct device *, void *, const char *);
	bus_dma_tag_t (*tba_get_dma_tag)(int);
};

/*
 * Arguments used to attach TURBOchannel devices.
 */
struct tc_attach_args {
	bus_space_tag_t ta_memt;
	bus_dma_tag_t	ta_dmat;

	char		ta_modname[TC_ROM_LLEN+1];
	u_int		ta_slot;
	tc_offset_t	ta_offset;
	tc_addr_t	ta_addr;
	void		*ta_cookie;
	u_int		ta_busspeed;		/* see TC_SPEED_* below */
};

/*
 * Description of TURBOchannel slots, provided by machine-dependent
 * code to the TURBOchannel bus driver.
 */
struct tc_slotdesc {
	tc_addr_t	tcs_addr;
	void		*tcs_cookie;
	int		tcs_used;
};

/*
 * Description of built-in TURBOchannel devices, provided by
 * machine-dependent code to the TURBOchannel bus driver.
 */
struct tc_builtin {
	char		*tcb_modname;
	u_int		tcb_slot;
	tc_offset_t	tcb_offset;
	void		*tcb_cookie;
};

/*
 * Interrupt establishment functions.
 */
int	tc_checkslot(tc_addr_t, char *);
void	tc_devinfo(const char *, char *, size_t);
void	tcattach(struct device *, struct device *, void *);
void	tc_intr_establish(struct device *, void *, int, int (*)(void *),
	    void *, const char *);
void	tc_intr_disestablish(struct device *, void *, const char *);

/*
 * Easy to remember names for TURBOchannel device locators.
 */
#define	tccf_slot	cf_loc[0]		/* slot */
#define	tccf_offset	cf_loc[1]		/* offset */

#define	TCCF_SLOT_UNKNOWN	-1
#define	TCCF_OFFSET_UNKNOWN	-1

/*
 * Miscellaneous definitions.
 */
#define	TC_SPEED_12_5_MHZ	25		/* 12.5MHz TC bus */
#define	TC_SPEED_22_5_MHZ	45		/* 22.5MHz TC bus */
#define	TC_SPEED_25_MHZ		50		/* 25MHz TC bus */

#define	TC_SPEED_TO_KHZ(s)	((s) * (1000 / 2))

#endif /* __DEV_TC_TCVAR_H__ */
@


1.15
log
@Revert previous and let drivers register counterless interrupts;
tc_intr_disestablish() prototype is changed to carry information whether the
counter needs to be detached or not.

This does not matter much since no driver ever calls tc_intr_disestablish().
@
text
@d1 1
a1 1
/* $OpenBSD: tcvar.h,v 1.14 2008/08/09 16:42:30 miod Exp $ */
d139 5
a143 2
#define	TC_SPEED_12_5_MHZ	0		/* 12.5MHz TC bus */
#define	TC_SPEED_25_MHZ		1		/* 25MHz TC bus */
@


1.14
log
@Pass a device name to {tc,tcds,ioasic}_intr_establish in order to get
meaningful names associated to the interrupt counters.
@
text
@d1 1
a1 1
/* $OpenBSD: tcvar.h,v 1.13 2007/11/06 18:20:07 miod Exp $ */
d55 1
a55 1
	void	(*sc_intr_disestablish)(struct device *, void *);
d77 1
a77 1
	void	(*tba_intr_disestablish)(struct device *, void *);
d125 1
a125 1
void	tc_intr_disestablish(struct device *, void *);
@


1.13
log
@Get rid of TC_IPL_xxx values and tc_intrlevel_t, and use IPL_xxx and int.
No functional change.
@
text
@d1 1
a1 1
/* $OpenBSD: tcvar.h,v 1.12 2004/06/28 02:28:43 aaron Exp $ */
d54 1
a54 1
			int, int (*)(void *), void *);
d76 1
a76 1
			int, int (*)(void *), void *);
d124 1
a124 1
	    void *);
@


1.12
log
@Use new event counter API for interrupt counting on alpha.  By me, with some
edits by Theo.  deraadt@@ ok
@
text
@d1 1
a1 1
/* $OpenBSD: tcvar.h,v 1.11 2003/04/27 11:22:54 ho Exp $ */
a44 20

/*
 * In the long run, the following block will go completely away.
 * For now, the MI TC code still uses the old TC_IPL_ names
 * and not the new IPL_ names.
 */
#if 1
/*
 * Map the new definitions to the old.
 */
#include <machine/intr.h>

#define tc_intrlevel_t	int

#define	TC_IPL_NONE	IPL_NONE
#define	TC_IPL_BIO	IPL_BIO
#define	TC_IPL_NET	IPL_NET
#define	TC_IPL_TTY	IPL_TTY
#define	TC_IPL_CLOCK	IPL_CLOCK
#endif /* 1 */
@


1.11
log
@strcpy/sprintf cleanup of sys/dev. miod@@, deraadt@@ says to commit.
@
text
@d1 1
a1 1
/* $OpenBSD: tcvar.h,v 1.10 2002/05/02 22:56:06 miod Exp $ */
a72 1
	const struct evcnt *(*sc_intr_evcnt)(struct device *, void *);
a94 1
	const struct evcnt *(*tba_intr_evcnt)(struct device *, void *);
a142 1
const struct evcnt *tc_intr_evcnt(struct device *, void *);
@


1.10
log
@Big TURBOchannel support catchup from NetBSD, part 1.
A few local changes and tweaks remain.

This bring DEC 3000 machines back in the game, but framebuffers are still
not supported at the moment.

Thanks to ericj@@ and nate@@ for supplying me a DEC 3000 for testing.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d143 1
a143 1
void	tc_devinfo(const char *, char *);
@


1.9
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 2
a2 2
/*	$OpenBSD: tcvar.h,v 1.8 2002/03/14 01:27:03 millert Exp $	*/
/*	$NetBSD: tcvar.h,v 1.7 1996/10/22 21:37:31 cgd Exp $	*/
d35 1
a35 1
 * Definitions for TurboChannel autoconfiguration.
d44 6
a49 13
#if !defined(__alpha__)
ERROR: COMPILING FOR UNSUPPORTED MACHINE, OR MORE THAN ONE.
#endif
#ifdef __alpha__
#include <alpha/tc/tc_machdep.h>
#endif

/*
 * In the long run, the following block will go completely away
 * (i.e. both parts of the #if, including the #include, etc.).
 * For now, the MI TC code still uses the old definitions provided
 * by the pmax port, and not the new definitions provided by the
 * alpha port.
d51 1
a51 1
#ifdef __alpha__
d53 1
a53 1
 * On the alpha, map the new definitions to the old.
d64 1
d66 13
a78 1
#endif
d81 1
a81 1
 * Arguments used to attach TurboChannel busses.
a84 1
#ifdef __alpha__ /* XXX */
a85 1
#endif
d96 1
d98 1
a98 1
		    tc_intrlevel_t, int (*)(void *), void *);
d100 1
d104 1
a104 1
 * Arguments used to attach TurboChannel devices.
a106 1
#ifdef __alpha__ /* XXX */
d108 1
a108 1
#endif
d119 2
a120 2
 * Description of TurboChannel slots, provided by machine-dependent
 * code to the TurboChannel bus driver.
d129 2
a130 2
 * Description of built-in TurboChannel devices, provided by
 * machine-dependent code to the TurboChannel bus driver.
d142 6
a147 2
void	tc_intr_establish(struct device *, void *, tc_intrlevel_t,
	    int (*)(void *), void *);
d151 1
a151 1
 * Easy to remember names for TurboChannel device locators.
a163 6

/*
 * The TurboChannel bus cfdriver, so that subdevices can more
 * easily tell what bus they're on.
 */
extern struct cfdriver tc_cd;
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: tcvar.h,v 1.7 2001/06/27 20:23:38 miod Exp $	*/
d92 2
a93 2
	void	(*tba_intr_establish) __P((struct device *, void *,
		    tc_intrlevel_t, int (*)(void *), void *));
d137 2
a138 2
void	tc_intr_establish __P((struct device *, void *, tc_intrlevel_t,
	    int (*)(void *), void *));
@


1.7
log
@More pmax files are leaving the party.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcvar.h,v 1.6 1996/12/08 01:03:07 niklas Exp $	*/
d94 1
a94 1
	void	(*tba_intr_disestablish) __P((struct device *, void *));
d139 1
a139 1
void	tc_intr_disestablish __P((struct device *, void *));
@


1.7.4.1
log
@Sync UBC branch to -current
@
text
@d1 2
a2 2
/* $OpenBSD$ */
/* $NetBSD: tcvar.h,v 1.17 2000/06/04 19:15:15 cgd Exp $ */
d35 1
a35 1
 * Definitions for TURBOchannel autoconfiguration.
d44 13
a56 6
#include <machine/tc_machdep.h>

/*
 * In the long run, the following block will go completely away.
 * For now, the MI TC code still uses the old TC_IPL_ names
 * and not the new IPL_ names.
d58 1
a58 1
#if 1
d60 1
a60 1
 * Map the new definitions to the old.
a70 1
#endif /* 1 */
d72 1
a72 13
struct tc_softc {
	struct	device sc_dv;

	int	sc_speed;
	int	sc_nslots;
	struct tc_slotdesc *sc_slots;

	const struct evcnt *(*sc_intr_evcnt)(struct device *, void *);
	void	(*sc_intr_establish)(struct device *, void *,
			int, int (*)(void *), void *);
	void	(*sc_intr_disestablish)(struct device *, void *);
	bus_dma_tag_t (*sc_get_dma_tag)(int);
};
d75 1
a75 1
 * Arguments used to attach TURBOchannel busses.
d79 1
d81 1
d92 3
a94 5
	const struct evcnt *(*tba_intr_evcnt)(struct device *, void *);
	void	(*tba_intr_establish)(struct device *, void *,
			int, int (*)(void *), void *);
	void	(*tba_intr_disestablish)(struct device *, void *);
	bus_dma_tag_t (*tba_get_dma_tag)(int);
d98 1
a98 1
 * Arguments used to attach TURBOchannel devices.
d101 1
d103 1
a103 1
	bus_dma_tag_t	ta_dmat;
d114 2
a115 2
 * Description of TURBOchannel slots, provided by machine-dependent
 * code to the TURBOchannel bus driver.
d124 2
a125 2
 * Description of built-in TURBOchannel devices, provided by
 * machine-dependent code to the TURBOchannel bus driver.
d137 3
a139 7
int	tc_checkslot(tc_addr_t, char *);
void	tc_devinfo(const char *, char *);
void	tcattach(struct device *, struct device *, void *);
const struct evcnt *tc_intr_evcnt(struct device *, void *);
void	tc_intr_establish(struct device *, void *, int, int (*)(void *),
	    void *);
void	tc_intr_disestablish(struct device *, void *);
d142 1
a142 1
 * Easy to remember names for TURBOchannel device locators.
d155 6
@


1.7.4.2
log
@sync
@
text
@d143 1
a143 1
void	tc_devinfo(const char *, char *, size_t);
@


1.6
log
@Merge to NetBSD 961107, i.e. mostly new bus.h
@
text
@d1 1
a1 1
/*	$OpenBSD: tcvar.h,v 1.5 1996/11/12 20:31:02 niklas Exp $	*/
a37 1
#ifdef __alpha__	/* XXX pmax does not yet have machine/bus.h */
a38 1
#endif
d44 1
a44 1
#if (alpha + pmax != 1)
d47 1
a47 1
#if alpha
a49 3
#if pmax
#include <machine/tc_machdep.h>
#endif
a71 11
#else
/*
 * On the pmax, we still need the old definitions.
 */
typedef enum {
	TC_IPL_NONE,			/* block only this interrupt */
	TC_IPL_BIO,			/* block disk interrupts */
	TC_IPL_NET,			/* block network interrupts */
	TC_IPL_TTY,			/* block terminal interrupts */
	TC_IPL_CLOCK,			/* block clock interrupts */
} tc_intrlevel_t;
@


1.6.14.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcvar.h,v 1.6 1996/12/08 01:03:07 niklas Exp $	*/
d38 1
d40 1
d46 1
a46 1
#if !defined(__alpha__)
d49 1
a49 1
#ifdef __alpha__
d52 3
d77 11
@


1.6.14.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d92 3
a94 3
	void	(*tba_intr_establish)(struct device *, void *,
		    tc_intrlevel_t, int (*)(void *), void *);
	void	(*tba_intr_disestablish)(struct device *, void *);
d137 3
a139 3
void	tc_intr_establish(struct device *, void *, tc_intrlevel_t,
	    int (*)(void *), void *);
void	tc_intr_disestablish(struct device *, void *);
@


1.6.14.3
log
@Sync the SMP branch with 3.3
@
text
@d1 2
a2 2
/* $OpenBSD$ */
/* $NetBSD: tcvar.h,v 1.17 2000/06/04 19:15:15 cgd Exp $ */
d35 1
a35 1
 * Definitions for TURBOchannel autoconfiguration.
d44 13
a56 6
#include <machine/tc_machdep.h>

/*
 * In the long run, the following block will go completely away.
 * For now, the MI TC code still uses the old TC_IPL_ names
 * and not the new IPL_ names.
d58 1
a58 1
#if 1
d60 1
a60 1
 * Map the new definitions to the old.
a70 1
#endif /* 1 */
d72 1
a72 13
struct tc_softc {
	struct	device sc_dv;

	int	sc_speed;
	int	sc_nslots;
	struct tc_slotdesc *sc_slots;

	const struct evcnt *(*sc_intr_evcnt)(struct device *, void *);
	void	(*sc_intr_establish)(struct device *, void *,
			int, int (*)(void *), void *);
	void	(*sc_intr_disestablish)(struct device *, void *);
	bus_dma_tag_t (*sc_get_dma_tag)(int);
};
d75 1
a75 1
 * Arguments used to attach TURBOchannel busses.
d79 1
d81 1
a91 1
	const struct evcnt *(*tba_intr_evcnt)(struct device *, void *);
d93 1
a93 1
			int, int (*)(void *), void *);
a94 1
	bus_dma_tag_t (*tba_get_dma_tag)(int);
d98 1
a98 1
 * Arguments used to attach TURBOchannel devices.
d101 1
d103 1
a103 1
	bus_dma_tag_t	ta_dmat;
d114 2
a115 2
 * Description of TURBOchannel slots, provided by machine-dependent
 * code to the TURBOchannel bus driver.
d124 2
a125 2
 * Description of built-in TURBOchannel devices, provided by
 * machine-dependent code to the TURBOchannel bus driver.
d137 2
a138 6
int	tc_checkslot(tc_addr_t, char *);
void	tc_devinfo(const char *, char *);
void	tcattach(struct device *, struct device *, void *);
const struct evcnt *tc_intr_evcnt(struct device *, void *);
void	tc_intr_establish(struct device *, void *, int, int (*)(void *),
	    void *);
d142 1
a142 1
 * Easy to remember names for TURBOchannel device locators.
d155 6
@


1.6.14.4
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/* $OpenBSD: tcvar.h,v 1.6.14.3 2003/03/28 00:38:30 niklas Exp $ */
d143 1
a143 1
void	tc_devinfo(const char *, char *, size_t);
@


1.5
log
@s/bus.h/bus.old.h/ to make the transit to the bus_space bus.h an easy road
possibly taken in small steps
@
text
@d1 2
a2 2
/*	$OpenBSD: tcvar.h,v 1.4 1996/05/26 00:27:56 deraadt Exp $	*/
/*	$NetBSD: tcvar.h,v 1.5 1996/05/17 23:38:16 cgd Exp $	*/
d38 2
a39 2
#ifdef __alpha__	/* XXX pmax does not yet have machine/bus.old.h */
#include <machine/bus.old.h>
d63 1
a63 1
#ifdef __alpha_
d96 1
a96 1
	bus_chipset_tag_t tba_bc;		/* XXX should be common */
d118 1
a118 1
	bus_chipset_tag_t ta_bc;
@


1.4
log
@sync 0521
@
text
@d1 1
a1 1
/*	$OpenBSD: tcvar.h,v 1.3 1996/04/21 22:26:30 deraadt Exp $	*/
d38 2
a39 2
#ifdef __alpha__	/* XXX pmax does not yet have machine/bus.h */
#include <machine/bus.h>
@


1.3
log
@partial sync with netbsd 960418, more to come
@
text
@d1 2
a2 2
/*	$OpenBSD: tcvar.h,v 1.2 1996/04/18 23:48:24 niklas Exp $	*/
/*	$NetBSD: tcvar.h,v 1.4 1996/03/17 21:37:47 jonathan Exp $	*/
d35 1
a35 1
 * TurboChannel autoconfiguration definitions.
d38 3
d42 11
d54 1
d57 23
a79 1
 * Interrupt levels.  XXX should be common, elsewhere.
d88 1
d95 3
d117 4
@


1.2
log
@NetBSD 960317 merge
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: tcvar.h,v 1.3 1996/02/27 01:37:33 cgd Exp $	*/
d131 1
a131 1
extern struct cfdriver tccd;
@


1.1
log
@from netbsd:
machine-independent TurboChannel bus configuration.  These files
deal with stuff like:
        (1) configuring built-in devices,
        (2) looking at TC slots configuring any devices found.
The lists of slots, slot locations, etc. and built-in devices
are provided by machine-dependent code.  Interrupt handling
is also provided by machine-dependent code, but the MD code provides
hooks so that standard names for 'establish' and 'disestablish'
can be used in drivers.
@
text
@d1 2
a2 1
/*	$NetBSD: tcvar.h,v 1.1 1995/12/20 00:48:36 cgd Exp $	*/
d55 2
a56 3
struct tc_attach_args {
	u_int	tca_nslots;
	struct tc_slotdesc *tca_slots;
d58 7
a64 2
	u_int	tca_nbuiltins;
	const struct tc_builtin *tca_builtins;
d66 2
a67 1
	void	(*tca_intr_establish) __P((struct device *, void *,
d69 1
a69 1
	void	(*tca_intr_disestablish) __P((struct device *, void *));
d75 7
a81 6
struct tcdev_attach_args {
	char	tcda_modname[TC_ROM_LLEN+1];
	u_int	tcda_slot;
	tc_offset_t tcda_offset;
	tc_addr_t tcda_addr;
	void	*tcda_cookie;
d89 3
a91 3
	tc_addr_t tcs_addr;
	void	*tcs_cookie;
	int	tcs_used;
d99 4
a102 4
	char	*tcb_modname;
	u_int	tcb_slot;
	tc_offset_t tcb_offset;
	void	*tcb_cookie;
d120 6
@
