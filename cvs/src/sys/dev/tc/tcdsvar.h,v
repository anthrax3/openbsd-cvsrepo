head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.34
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.36
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.32
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.22
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.30
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.28
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.26
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.24
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.20
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.18
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.16
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.14
	OPENBSD_5_0:1.4.0.12
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.10
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.6
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.3.0.10
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.2.0.8
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	OPENBSD_3_5:1.1.0.12
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.10
	OPENBSD_3_4_BASE:1.1
	UBC_SYNC_A:1.1
	SMP:1.1.0.8
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	UBC_SYNC_B:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	UBC:1.1.0.2;
locks; strict;
comment	@ * @;


1.4
date	2008.08.09.16.42.30;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.13.22.36.06;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.28.02.28.43;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.02.22.56.06;	author miod;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.06.11.03.42.30;	author art;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Pass a device name to {tc,tcds,ioasic}_intr_establish in order to get
meaningful names associated to the interrupt counters.
@
text
@/* $OpenBSD: tcdsvar.h,v 1.3 2006/03/13 22:36:06 miod Exp $ */
/* $NetBSD: tcdsvar.h,v 1.2 2001/08/22 05:00:27 nisimura Exp $ */

/*
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

struct tcds_slotconfig {
	/*
	 * Bookkeeping information
	 */
	int	sc_slot;

	bus_space_tag_t sc_bst;			/* to frob TCDS regs */
	bus_space_handle_t sc_bsh;

	int	(*sc_intrhand)(void *);		/* intr. handler */
	void	*sc_intrarg;			/* intr. handler arg. */
	struct evcount sc_count;		/* intr. count */

	/*
	 * Sets of bits in TCDS CIR and IMER that enable/check
	 * various things.
	 */
	u_int32_t sc_resetbits;
	u_int32_t sc_intrmaskbits;
	u_int32_t sc_intrbits;
	u_int32_t sc_dmabits;
	u_int32_t sc_errorbits;

	/*
	 * Offsets to slot-specific DMA resources.
	 */
	bus_size_t sc_sda;
	bus_size_t sc_dic;
	bus_size_t sc_dud0;
	bus_size_t sc_dud1;
};

struct tcdsdev_attach_args {
	bus_space_tag_t tcdsda_bst;		/* bus space tag */
	bus_space_handle_t tcdsda_bsh;		/* bus space handle */
	bus_dma_tag_t tcdsda_dmat;		/* bus dma tag */
	struct tcds_slotconfig *tcdsda_sc;	/* slot configuration */
	int	tcdsda_chip;			/* chip number */
	int	tcdsda_id;			/* SCSI ID */
	u_int	tcdsda_freq;			/* chip frequency */
	int	tcdsda_period;			/* min. sync period */
	int	tcdsda_variant;			/* NCR chip variant */
	int	tcdsda_fast;			/* chip does Fast mode */
};

/*
 * TCDS functions.
 */
void	tcds_intr_establish(struct device *, int,
	    int (*)(void *), void *, const char *);
void	tcds_intr_disestablish(struct device *, int);
void	tcds_dma_enable(struct tcds_slotconfig *, int);
void	tcds_scsi_enable(struct tcds_slotconfig *, int);
int	tcds_scsi_iserr(struct tcds_slotconfig *);
int	tcds_scsi_isintr(struct tcds_slotconfig *, int);
void	tcds_scsi_reset(struct tcds_slotconfig *);
@


1.3
log
@Remove unused softc member.
@
text
@d1 1
a1 1
/* $OpenBSD: tcdsvar.h,v 1.2 2004/06/28 02:28:43 aaron Exp $ */
d80 1
a80 1
	    int (*)(void *), void *);
@


1.2
log
@Use new event counter API for interrupt counting on alpha.  By me, with some
edits by Theo.  deraadt@@ ok
@
text
@d1 1
a1 1
/* $OpenBSD: tcdsvar.h,v 1.1 2002/05/02 22:56:06 miod Exp $ */
a42 1
	char	sc_name[8];			/* ev_name */
@


1.1
log
@Big TURBOchannel support catchup from NetBSD, part 1.
A few local changes and tweaks remain.

This bring DEC 3000 machines back in the game, but framebuffers are still
not supported at the moment.

Thanks to ericj@@ and nate@@ for supplying me a DEC 3000 for testing.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d42 1
a42 1
	struct evcnt sc_evcnt;			/* intr. count */
@


1.1.2.1
log
@Sync UBC branch to -current
@
text
@@

