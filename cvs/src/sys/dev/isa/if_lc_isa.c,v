head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.8
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.4
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.18
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.14
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.12
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.10
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.8
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.6
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.4
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.6
	UBC_BASE:1.1
	SMP:1.1.0.4
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.11.24.17.11.39;	author mpi;	state Exp;
branches;
next	1.11;
commitid	5gdEnqVoJuTuwdTu;

1.11
date	2014.08.11.12.45.45;	author mpi;	state Exp;
branches;
next	1.10;
commitid	nYggAidK85QbUFh2;

1.10
date	2013.08.07.01.06.32;	author bluhm;	state Exp;
branches;
next	1.9;

1.9
date	2011.06.20.01.09.25;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	2009.08.10.22.08.04;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.21.18.16.40;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.14.12.28.00;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2005.06.08.17.03.00;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.12.06.35.11;	author tedu;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.27.11.22.53;	author ho;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.13.17.26.44;	author niklas;	state Exp;
branches
	1.1.4.1
	1.1.6.1;
next	;

1.1.4.1
date	2001.10.31.03.22.43;	author nate;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2003.05.13.19.35.03;	author ho;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2004.06.05.23.12.46;	author niklas;	state Exp;
branches;
next	;

1.1.6.1
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2003.05.19.22.07.48;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.12
log
@You only need <net/if_dl.h> if you're using LLADDR() or a sockaddr_dl.
@
text
@/*	$OpenBSD: if_lc_isa.c,v 1.11 2014/08/11 12:45:45 mpi Exp $ */
/*	$NetBSD: if_lc_isa.c,v 1.10 2001/06/13 10:46:03 wiz Exp $ */

/*-
 * Copyright (c) 1994, 1995, 1997 Matt Thomas <matt@@3am-software.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * DEC EtherWORKS 3 Ethernet Controllers
 *
 * Written by Matt Thomas
 *
 *   This driver supports the LEMAC (DE203, DE204, and DE205) cards.
 */

#include "bpfilter.h"

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mbuf.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <sys/errno.h>
#include <sys/syslog.h>
#include <sys/selinfo.h>
#include <sys/device.h>
#include <sys/queue.h>

#include <net/if.h>
#include <net/if_media.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>

#if NBPFILTER > 0
#include <net/bpf.h>
#endif

#include <machine/cpu.h>
#include <machine/bus.h>
#include <machine/intr.h>

#include <dev/ic/lemacreg.h>
#include <dev/ic/lemacvar.h>

#include <dev/isa/isavar.h>

extern struct cfdriver lc_cd;

int	lemac_isa_find(struct lemac_softc *, struct isa_attach_args *,
    int);
int	lemac_isa_probe(struct device *, void *, void *);
void	lemac_isa_attach(struct device *, struct device *, void *);

struct cfattach lc_isa_ca = {
	sizeof(struct lemac_softc), lemac_isa_probe, lemac_isa_attach
};

int
lemac_isa_find(sc, ia, attach)
	struct lemac_softc *sc;
	struct isa_attach_args *ia;
	int attach;
{
	bus_addr_t maddr;
	bus_size_t msize;
	int rv = 0, irq;

	/*
	 * Disallow wildcarded i/o addresses.
	 */
	if (ia->ia_iobase == IOBASEUNK)
		return 0;

	/*
	 * Make sure this is a valid LEMAC address.
	 */
	if (ia->ia_iobase & (LEMAC_IOSIZE - 1))
		return 0;

	sc->sc_iot = ia->ia_iot;

	/*
	 * Map the LEMAC's port space for the probe sequence.
	 */
	ia->ia_iosize = LEMAC_IOSIZE;

	if (bus_space_map(sc->sc_iot, ia->ia_iobase, ia->ia_iosize, 0,
	    &sc->sc_ioh)) {
		if (attach)
			printf(": can't map i/o space\n");
		return (0);
	}

	/*
	 * Read the Ethernet address from the EEPROM.
	 * It must start with one of the DEC OUIs and pass the
	 * DEC ethernet checksum test.
	 */
	if (lemac_port_check(sc->sc_iot, sc->sc_ioh) == 0)
		goto outio;

	/*
	 * Get information about memory space and attempt to map it.
	 */
	lemac_info_get(sc->sc_iot, sc->sc_ioh, &maddr, &msize, &irq);

	if (ia->ia_maddr != maddr && ia->ia_maddr != MADDRUNK)
		goto outio;

	if (maddr != 0 && msize != 0) {
		sc->sc_memt = ia->ia_memt;
		if (bus_space_map(ia->ia_memt, maddr, msize, 0,
		    &sc->sc_memh)) {
			if (attach)
				printf(": can't map mem space\n");
			goto outio;
		}
	}

	/*
	 * Double-check IRQ configuration.
	 */
	if (ia->ia_irq != irq && ia->ia_irq != IRQUNK)
		printf("%s: overriding IRQ %d to %d\n", sc->sc_dv.dv_xname,
		    ia->ia_irq, irq);

	if (attach) {
		lemac_ifattach(sc);

		sc->sc_ih = isa_intr_establish(ia->ia_ic, irq, IST_EDGE,
		    IPL_NET, lemac_intr, sc, sc->sc_dv.dv_xname);
	}

	/*
	 * I guess we've found one.
	 */
	rv = 1;

	ia->ia_maddr = maddr;
	ia->ia_msize = msize;
	ia->ia_irq = irq;

	if (maddr != 0 && msize != 0 && (rv == 0 || !attach))
		bus_space_unmap(sc->sc_memt, sc->sc_memh, msize);
outio:
	if (rv == 0 || !attach)
		bus_space_unmap(sc->sc_iot, sc->sc_ioh, LEMAC_IOSIZE);
	return (rv);
}

int
lemac_isa_probe(parent, match, aux)
	struct device *parent;
	void *match;
	void *aux;
{
	struct isa_attach_args *ia = aux;
	struct cfdata *cf = ((struct device *)match)->dv_cfdata;
	struct lemac_softc sc;

	snprintf(sc.sc_dv.dv_xname, sizeof sc.sc_dv.dv_xname, "%s%d",
	    lc_cd.cd_name, cf->cf_unit);
    
	return (lemac_isa_find(&sc, ia, 0));
}

void
lemac_isa_attach(parent, self, aux)
	struct device *parent;
	struct device *self;
	void *aux;
{
	struct lemac_softc *sc = (void *)self;
	struct isa_attach_args *ia = aux;

	lemac_isa_find(sc, ia, 1);
}
@


1.11
log
@Fewer <netinet/in_systm.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.10 2013/08/07 01:06:32 bluhm Exp $ */
a49 1
#include <net/if_dl.h>
@


1.10
log
@Most network drivers include netinet/in_var.h, but apparently they
don't have to.  Just remove these include lines.
Compiled on amd64 i386 sparc64; OK henning@@ mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.9 2011/06/20 01:09:25 matthew Exp $ */
a52 1
#ifdef INET
a53 2
#include <netinet/in_systm.h>
#include <netinet/ip.h>
a54 1
#endif
@


1.9
log
@isa(4) is an indirect bus, which means that drivers that attach to it
need to provide an xxxprobe() method instead of an xxxmatch() method.
The critical difference is xxxprobe() is given a device softc for the
second argument, whereas a xxxmatch() is given the cfdata as the
second argument.

This commit fixes the handful of ISA device drivers that incorrectly
cast the second argument to a "struct cfdata *" instead of a "struct
device *".  (Minor complication: unlike isa(4), isapnp(4) is a direct
bus, and if_we.c used the same probe/match code for both; now separate
we_probe and we_match methods are used as appropriate.)

"makes sense to me" krw@@; ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.8 2009/08/10 22:08:04 deraadt Exp $ */
a55 1
#include <netinet/in_var.h>
@


1.8
log
@This does not need a shutdown function either (though the equilevant
to stop is not called because the ioctl function is a masterpiece)
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.7 2005/11/21 18:16:40 millert Exp $ */
d185 1
a185 1
	struct cfdata *cf = match;
@


1.7
log
@Move contents of sys/select.h to sys/selinfo.h in preparation for a
userland-visible sys/select.h.  Consistent with what Net and Free do.
OK deraadt@@, tested with full ports build by naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.6 2005/11/14 12:28:00 mickey Exp $ */
a154 6
		sc->sc_ats = shutdownhook_establish(lemac_shutdown, sc);
		if (sc->sc_ats == NULL)
			printf(
			    "\n%s: warning: can't establish shutdown hook\n",
			    sc->sc_dv.dv_xname);

@


1.6
log
@msize is proper bus_size_t
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.5 2005/06/08 17:03:00 henning Exp $ */
d45 1
a45 1
#include <sys/select.h>
@


1.5
log
@remove netns crud.
some drivers actually had hooks for SIOCSIFADDR, most just useless includes
"looks good" deraadt miod brad
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.4 2004/05/12 06:35:11 tedu Exp $ */
d92 1
a92 1
	bus_addr_t msize;
@


1.4
log
@network drivers don't need to include bpfdesc.h
ok krw@@ canacar@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.3 2003/04/27 11:22:53 ho Exp $ */
a58 5
#endif

#ifdef NS
#include <netns/ns.h>
#include <netns/ns_if.h>
@


1.3
log
@strcpy/sprintf cleanup of sys/dev. miod@@, deraadt@@ says to commit.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.2 2002/03/14 01:26:56 millert Exp $ */
a67 1
#include <net/bpfdesc.h>
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.1 2001/07/13 17:26:44 niklas Exp $ */
d200 2
a201 1
	sprintf(sc.sc_dv.dv_xname, "%s%d", lc_cd.cd_name, cf->cf_unit);
@


1.1
log
@On my 10th wedding anniversary I am celebrating by
committing this driver for technology from back when I got married :-)
It is for DEC EtherWorks cards, and comes from NetBSD.  I have done severe
KNF, and fixed the driver to work with PIO-only cards. Enjoy!
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.10 2001/06/13 10:46:03 wiz Exp $ */
d82 4
a85 4
int	lemac_isa_find __P((struct lemac_softc *, struct isa_attach_args *,
    int));
int	lemac_isa_probe __P((struct device *, void *, void *));
void	lemac_isa_attach __P((struct device *, struct device *, void *));
@


1.1.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.1 2001/07/13 17:26:44 niklas Exp $ */
d82 4
a85 4
int	lemac_isa_find(struct lemac_softc *, struct isa_attach_args *,
    int);
int	lemac_isa_probe(struct device *, void *, void *);
void	lemac_isa_attach(struct device *, struct device *, void *);
@


1.1.6.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d200 1
a200 2
	snprintf(sc.sc_dv.dv_xname, sizeof sc.sc_dv.dv_xname, "%s%d",
	    lc_cd.cd_name, cf->cf_unit);
@


1.1.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
@


1.1.4.2
log
@Merge in -current from about a week ago
@
text
@d82 4
a85 4
int	lemac_isa_find(struct lemac_softc *, struct isa_attach_args *,
    int);
int	lemac_isa_probe(struct device *, void *, void *);
void	lemac_isa_attach(struct device *, struct device *, void *);
@


1.1.4.3
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_lc_isa.c,v 1.1.4.2 2002/03/28 12:11:35 niklas Exp $ */
d200 1
a200 2
	snprintf(sc.sc_dv.dv_xname, sizeof sc.sc_dv.dv_xname, "%s%d",
	    lc_cd.cd_name, cf->cf_unit);
@


1.1.4.4
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d68 1
@


