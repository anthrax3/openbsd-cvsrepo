head	1.14;
access;
symbols
	OPENBSD_6_1:1.14.0.8
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.4
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.4
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.11.0.6
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.10.0.22
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.20
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.18
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.16
	OPENBSD_5_0:1.10.0.14
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.12
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.10
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.6
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.8
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.4
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.18
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.16
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.14
	OPENBSD_2_8:1.1.0.12
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.10
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.8
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.14
date	2015.11.24.17.11.39;	author mpi;	state Exp;
branches;
next	1.13;
commitid	5gdEnqVoJuTuwdTu;

1.13
date	2014.12.03.20.09.32;	author krw;	state Exp;
branches;
next	1.12;
commitid	rapVfhq63upxHrrZ;

1.12
date	2014.08.11.12.45.45;	author mpi;	state Exp;
branches;
next	1.11;
commitid	nYggAidK85QbUFh2;

1.11
date	2013.08.07.01.06.33;	author bluhm;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.26.05.42.16;	author ray;	state Exp;
branches;
next	1.9;

1.9
date	2006.06.17.17.57.00;	author brad;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.24.01.50.31;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.23.14.42.55;	author martin;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.21.18.16.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2005.06.08.17.03.00;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.12.06.35.11;	author tedu;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.18.13.14.43;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.09.26.19.09.15;	author fgsch;	state Exp;
branches
	1.1.8.1
	1.1.18.1;
next	;

1.1.8.1
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2003.03.28.00.38.16;	author niklas;	state Exp;
branches;
next	1.1.8.3;

1.1.8.3
date	2004.06.05.23.12.46;	author niklas;	state Exp;
branches;
next	;

1.1.18.1
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	1.1.18.2;

1.1.18.2
date	2003.05.19.22.07.48;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@You only need <net/if_dl.h> if you're using LLADDR() or a sockaddr_dl.
@
text
@/*	$OpenBSD: if_sm_isa.c,v 1.13 2014/12/03 20:09:32 krw Exp $	*/
/*	$NetBSD: if_sm_isa.c,v 1.4 1998/07/05 06:49:14 jonathan Exp $	*/

/*-
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,
 * NASA Ames Research Center.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include "bpfilter.h"

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mbuf.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <sys/errno.h>
#include <sys/syslog.h>
#include <sys/selinfo.h>
#include <sys/timeout.h>
#include <sys/device.h>

#include <net/if.h>
#include <net/if_media.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>

#if NBPFILTER > 0
#include <net/bpf.h>
#endif

#include <machine/intr.h>
#include <machine/bus.h>

#include <dev/mii/mii.h>
#include <dev/mii/miivar.h>

#include <dev/ic/smc91cxxreg.h>
#include <dev/ic/smc91cxxvar.h>

#include <dev/isa/isavar.h>

int	sm_isa_match(struct device *, void *, void *);
void	sm_isa_attach(struct device *, struct device *, void *);

struct sm_isa_softc {
	struct	smc91cxx_softc sc_smc;		/* real "smc" softc */

	/* ISA-specific goo. */
	void	*sc_ih;				/* interrupt cookie */
};

struct cfattach sm_isa_ca = {
	sizeof(struct sm_isa_softc), sm_isa_match, sm_isa_attach
};

int
sm_isa_match(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct isa_attach_args *ia = aux;
	bus_space_tag_t iot = ia->ia_iot;
	bus_space_handle_t ioh;
	u_int16_t tmp;
	int rv = 0;
	extern const char *smc91cxx_idstrs[];

	/* Disallow wildcarded values. */
	if (ia->ia_irq == -1)
		return (0);
	if (ia->ia_iobase == -1)
		return (0);

	/* Map i/o space. */
	if (bus_space_map(iot, ia->ia_iobase, SMC_IOSIZE, 0, &ioh))
		return (0);

	/* Check that high byte of BANK_SELECT is what we expect. */
	tmp = bus_space_read_2(iot, ioh, BANK_SELECT_REG_W);
	if ((tmp & BSR_DETECT_MASK) != BSR_DETECT_VALUE)
		goto out;

	/*
	 * Switch to bank 0 and perform the test again.
	 * XXX INVASIVE!
	 */
	bus_space_write_2(iot, ioh, BANK_SELECT_REG_W, 0);
	tmp = bus_space_read_2(iot, ioh, BANK_SELECT_REG_W);
	if ((tmp & BSR_DETECT_MASK) != BSR_DETECT_VALUE)
		goto out;

	/*
	 * Switch to bank 1 and check the base address register.
	 * XXX INVASIVE!
	 */
	bus_space_write_2(iot, ioh, BANK_SELECT_REG_W, 1);
	tmp = bus_space_read_2(iot, ioh, BASE_ADDR_REG_W);
	if (ia->ia_iobase != ((tmp >> 3) & 0x3e0))
		goto out;

	/*
	 * Check for a recognized chip id.
	 * XXX INVASIVE!
	 */
	bus_space_write_2(iot, ioh, BANK_SELECT_REG_W, 3);
	tmp = bus_space_read_2(iot, ioh, REVISION_REG_W);
	if (smc91cxx_idstrs[RR_ID(tmp)] == NULL)
		goto out;

	/*
	 * Assume we have an SMC91Cxx.
	 */
	ia->ia_iosize = SMC_IOSIZE;
	rv = 1;

 out:
	bus_space_unmap(iot, ioh, SMC_IOSIZE);
	return (rv);
}

void
sm_isa_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct sm_isa_softc *isc = (struct sm_isa_softc *)self;
	struct smc91cxx_softc *sc = &isc->sc_smc;
	struct isa_attach_args *ia = aux;
	bus_space_tag_t iot = ia->ia_iot;
	bus_space_handle_t ioh;

	printf("\n");

	/* Map i/o space. */
	if (bus_space_map(iot, ia->ia_iobase, ia->ia_iosize, 0, &ioh))
		panic("sm_isa_attach: can't map i/o space");

	sc->sc_bst = iot;
	sc->sc_bsh = ioh;

	/* should always be enabled */
	sc->sc_enabled = 1;

	/* XXX Should get Ethernet address from EEPROM!! */

	/* Perform generic initialization. */
	smc91cxx_attach(sc, NULL);

	/* Establish the interrupt handler. */
	isc->sc_ih = isa_intr_establish(ia->ia_ic, ia->ia_irq, IST_EDGE,
	    IPL_NET, smc91cxx_intr, sc, sc->sc_dev.dv_xname);
	if (isc->sc_ih == NULL)
		printf("%s: couldn't establish interrupt handler\n",
		    sc->sc_dev.dv_xname);
}
@


1.13
log
@More duplicate #include cleanout.

ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.12 2014/08/11 12:45:45 mpi Exp $	*/
a47 1
#include <net/if_dl.h>
@


1.12
log
@Fewer <netinet/in_systm.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.11 2013/08/07 01:06:33 bluhm Exp $	*/
a59 2

#include <net/if_media.h>
@


1.11
log
@Most network drivers include netinet/in_var.h, but apparently they
don't have to.  Just remove these include lines.
Compiled on amd64 i386 sparc64; OK henning@@ mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.10 2008/06/26 05:42:16 ray Exp $	*/
a50 1
#ifdef INET
a51 2
#include <netinet/in_systm.h>
#include <netinet/ip.h>
a52 1
#endif
@


1.10
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.9 2006/06/17 17:57:00 brad Exp $	*/
a53 1
#include <netinet/in_var.h>
@


1.9
log
@add sys/timeout.h
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.8 2006/02/24 01:50:31 brad Exp $	*/
a19 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.8
log
@remove NetBSD headers
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.7 2006/01/23 14:42:55 martin Exp $	*/
d51 1
@


1.7
log
@update sm(4) from NetBSD, including support for more models and MII;
also activate ISA attachment;

ok brad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.6 2005/11/21 18:16:40 millert Exp $	*/
a54 3
#ifdef __NetBSD__
#include <net/if_ether.h>
#endif
a61 3
#ifdef __NetBSD__
#include <netinet/if_inarp.h>
#else
a62 1
#endif
@


1.6
log
@Move contents of sys/select.h to sys/selinfo.h in preparation for a
userland-visible sys/select.h.  Consistent with what Net and Free do.
OK deraadt@@, tested with full ports build by naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.5 2005/06/08 17:03:00 henning Exp $	*/
d78 5
@


1.5
log
@remove netns crud.
some drivers actually had hooks for SIOCSIFADDR, most just useless includes
"looks good" deraadt miod brad
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.4 2004/05/12 06:35:11 tedu Exp $	*/
d50 1
a50 1
#include <sys/select.h>
@


1.4
log
@network drivers don't need to include bpfdesc.h
ok krw@@ canacar@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.3 2003/02/18 13:14:43 jmc Exp $	*/
a69 5
#endif

#ifdef NS
#include <netns/ns.h>
#include <netns/ns_if.h>
@


1.3
log
@intial -> initial;

the great intial witch hunt, as prompted by tdeval@@

os-aix-dso.c: ok henning@@
ab.C: ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.2 2002/03/14 01:26:56 millert Exp $	*/
a78 1
#include <net/bpfdesc.h>
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.1 1998/09/26 19:09:15 fgsch Exp $	*/
d194 1
a194 1
	/* Perform generic intialization. */
@


1.1
log
@Add smc91cxx ISA support.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d90 2
a91 2
int	sm_isa_match __P((struct device *, void *, void *));
void	sm_isa_attach __P((struct device *, struct device *, void *));
@


1.1.18.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_isa.c,v 1.1 1998/09/26 19:09:15 fgsch Exp $	*/
d90 2
a91 2
int	sm_isa_match(struct device *, void *, void *);
void	sm_isa_attach(struct device *, struct device *, void *);
@


1.1.18.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d194 1
a194 1
	/* Perform generic initialization. */
@


1.1.8.1
log
@Merge in -current from about a week ago
@
text
@d90 2
a91 2
int	sm_isa_match(struct device *, void *, void *);
void	sm_isa_attach(struct device *, struct device *, void *);
@


1.1.8.2
log
@Sync the SMP branch with 3.3
@
text
@d194 1
a194 1
	/* Perform generic initialization. */
@


1.1.8.3
log
@Merge with the trunk
@
text
@d79 1
@


