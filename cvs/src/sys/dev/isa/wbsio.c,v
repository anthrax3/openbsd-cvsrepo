head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.12
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.10
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.6
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.12
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.10
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.6
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.4
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.03.14.03.38.47;	author jsg;	state Exp;
branches;
next	1.9;
commitid	p4LJxGKbi0BU2cG6;

1.9
date	2015.01.02.23.02.54;	author chris;	state Exp;
branches;
next	1.8;
commitid	XrXEuQQtZXmvB1po;

1.8
date	2012.07.01.02.15.09;	author lteo;	state Exp;
branches;
next	1.7;

1.7
date	2011.12.06.16.06.07;	author mpf;	state Exp;
branches;
next	1.6;

1.6
date	2010.07.18.12.44.55;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2009.03.29.21.53.52;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2008.04.08.18.48.43;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2008.04.07.18.45.26;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.31.17.56.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2008.02.17.15.04.08;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@/*	$OpenBSD: wbsio.c,v 1.9 2015/01/02 23:02:54 chris Exp $	*/
/*
 * Copyright (c) 2008 Mark Kettenis <kettenis@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * Winbond LPC Super I/O driver.
 */

#include <sys/param.h>
#include <sys/device.h>
#include <sys/kernel.h>
#include <sys/systm.h>

#include <machine/bus.h>

#include <dev/isa/isavar.h>
#include <dev/isa/wbsioreg.h>

#ifdef WBSIO_DEBUG
#define DPRINTF(x) printf x
#else
#define DPRINTF(x)
#endif

struct wbsio_softc {
	struct device		sc_dev;

	bus_space_tag_t		sc_iot;
	bus_space_handle_t	sc_ioh;
};

int	wbsio_probe(struct device *, void *, void *);
void	wbsio_attach(struct device *, struct device *, void *);
int	wbsio_print(void *, const char *);

struct cfattach wbsio_ca = {
	sizeof(struct wbsio_softc),
	wbsio_probe,
	wbsio_attach
};

struct cfdriver wbsio_cd = {
	NULL, "wbsio", DV_DULL
};

static __inline void
wbsio_conf_enable(bus_space_tag_t iot, bus_space_handle_t ioh)
{
	bus_space_write_1(iot, ioh, WBSIO_INDEX, WBSIO_CONF_EN_MAGIC);
	bus_space_write_1(iot, ioh, WBSIO_INDEX, WBSIO_CONF_EN_MAGIC);
}

static __inline void
wbsio_conf_disable(bus_space_tag_t iot, bus_space_handle_t ioh)
{
	bus_space_write_1(iot, ioh, WBSIO_INDEX, WBSIO_CONF_DS_MAGIC);
}

static __inline u_int8_t
wbsio_conf_read(bus_space_tag_t iot, bus_space_handle_t ioh, u_int8_t index)
{
	bus_space_write_1(iot, ioh, WBSIO_INDEX, index);
	return (bus_space_read_1(iot, ioh, WBSIO_DATA));
}

static __inline void
wbsio_conf_write(bus_space_tag_t iot, bus_space_handle_t ioh, u_int8_t index,
    u_int8_t data)
{
	bus_space_write_1(iot, ioh, WBSIO_INDEX, index);
	bus_space_write_1(iot, ioh, WBSIO_DATA, data);
}

int
wbsio_probe(struct device *parent, void *match, void *aux)
{
	struct isa_attach_args *ia = aux;
	bus_space_tag_t iot;
	bus_space_handle_t ioh;
	u_int8_t reg;

	/* Match by device ID */
	iot = ia->ia_iot;
	if (bus_space_map(iot, ia->ipa_io[0].base, WBSIO_IOSIZE, 0, &ioh))
		return (0);
	wbsio_conf_enable(iot, ioh);
	reg = wbsio_conf_read(iot, ioh, WBSIO_ID);
	DPRINTF(("wbsio_probe: id 0x%02x\n", reg));
	wbsio_conf_disable(iot, ioh);
	bus_space_unmap(iot, ioh, WBSIO_IOSIZE);
	switch (reg) {
	case WBSIO_ID_W83627HF:
	case WBSIO_ID_W83627THF:
	case WBSIO_ID_W83627EHF:
	case WBSIO_ID_W83627DHG:
	case WBSIO_ID_W83627DHGP:
	case WBSIO_ID_W83627UHG:
	case WBSIO_ID_W83637HF:
	case WBSIO_ID_W83697HF:
	case WBSIO_ID_NCT6776F:
	case WBSIO_ID_NCT5104D:
		ia->ipa_nio = 1;
		ia->ipa_io[0].length = WBSIO_IOSIZE;
		ia->ipa_nmem = 0;
		ia->ipa_nirq = 0;
		ia->ipa_ndrq = 0;
		return (1);
	}

	return (0);
}

void
wbsio_attach(struct device *parent, struct device *self, void *aux)
{
	struct wbsio_softc *sc = (void *)self;
	struct isa_attach_args *ia = aux;
	struct isa_attach_args nia;
	u_int8_t devid, reg, reg0, reg1;
	u_int16_t iobase;

	/* Map ISA I/O space */
	sc->sc_iot = ia->ia_iot;
	if (bus_space_map(sc->sc_iot, ia->ipa_io[0].base,
	    WBSIO_IOSIZE, 0, &sc->sc_ioh)) {
		printf(": can't map i/o space\n");
		return;
	}

	/* Enter configuration mode */
	wbsio_conf_enable(sc->sc_iot, sc->sc_ioh);

	/* Read device ID */
	devid = wbsio_conf_read(sc->sc_iot, sc->sc_ioh, WBSIO_ID);
	switch (devid) {
	case WBSIO_ID_W83627HF:
		printf(": W83627HF");
		break;
	case WBSIO_ID_W83627THF:
		printf(": W83627THF");
		break;
	case WBSIO_ID_W83627EHF:
		printf(": W83627EHF");
		break;
	case WBSIO_ID_W83627DHG:
		printf(": W83627DHG");
		break;
	case WBSIO_ID_W83627DHGP:
		printf(": W83627DHG-P");
		break;
	case WBSIO_ID_W83627UHG:
		printf(": W83627UHG");
		break;
	case WBSIO_ID_W83637HF:
		printf(": W83637HF");
		break;
	case WBSIO_ID_W83697HF:
		printf(": W83697HF");
		break;
	case WBSIO_ID_NCT6776F:
		printf(": NCT6776F");
		break;
	case WBSIO_ID_NCT5104D:
		printf(": NCT5104D");
		break;
	}

	/* Read device revision */
	reg = wbsio_conf_read(sc->sc_iot, sc->sc_ioh, WBSIO_REV);
	printf(" rev 0x%02x", reg);

	/* Select HM logical device */
	wbsio_conf_write(sc->sc_iot, sc->sc_ioh, WBSIO_LDN, WBSIO_LDN_HM);

	/*
	 * The address should be 8-byte aligned, but it seems some
	 * BIOSes ignore this.  They get away with it, because
	 * Apparently the hardware simply ignores the lower three
	 * bits.  We do the same here.
	 */
	reg0 = wbsio_conf_read(sc->sc_iot, sc->sc_ioh, WBSIO_HM_ADDR_LSB);
	reg1 = wbsio_conf_read(sc->sc_iot, sc->sc_ioh, WBSIO_HM_ADDR_MSB);
	iobase = (reg1 << 8) | (reg0 & ~0x7);

	printf("\n");

	/* Escape from configuration mode */
	wbsio_conf_disable(sc->sc_iot, sc->sc_ioh);

	if (iobase == 0)
		return;

	nia = *ia;
	nia.ia_iobase = iobase;
	nia.ia_aux = (void *)(u_long)devid; /* pass devid down to wb_match() */

	config_found(self, &nia, wbsio_print);
}

int
wbsio_print(void *aux, const char *pnp)
{
	struct isa_attach_args *ia = aux;

	if (pnp)
		printf("%s", pnp);
	if (ia->ia_iosize)
		printf(" port 0x%x", ia->ia_iobase);
	if (ia->ia_iosize > 1)
		printf("/%d", ia->ia_iosize);
	return (UNCONF);
}
@


1.9
log
@Identify NCT5104D variant in dmesg. (No lm here, these are used for com and
gpio pins on SuperMicro and PC Engines.)

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wbsio.c,v 1.8 2012/07/01 02:15:09 lteo Exp $	*/
a28 1
#include <dev/isa/isareg.h>
@


1.8
log
@Add support for the Winbond W83627UHG chip.

Ported from a DragonFly BSD commit by Constantine A. Murenin:

http://gitweb.dragonflybsd.org/dragonfly.git/commitdiff/245ec76bc1613b22cf282526fa9931e4c16e4237

Tested on a Lanner FW-7539 appliance.

ok mlarkin mikeb haesbaert henning
@
text
@d1 1
a1 1
/*	$OpenBSD: wbsio.c,v 1.7 2011/12/06 16:06:07 mpf Exp $	*/
d115 1
d176 3
@


1.7
log
@Add support for Nuvoton NCT6776F fan, voltage and temperature sensors.
Tested on a Supermicro X9SCL/X9SCM board.
With help from kettenis to make the part that works around a
chip ID collision less ugly.
OK kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: wbsio.c,v 1.6 2010/07/18 12:44:55 kettenis Exp $	*/
d111 1
d163 3
@


1.6
log
@Add support for Winbond/Nuvoton W83627DHG-P.

From Mitja Muzenic.
@
text
@d1 1
a1 1
/*	$OpenBSD: wbsio.c,v 1.5 2009/03/29 21:53:52 sthen Exp $	*/
d31 1
a31 30

/* ISA bus registers */
#define WBSIO_INDEX		0x00	/* Configuration Index Register */
#define WBSIO_DATA		0x01	/* Configuration Data Register */

#define WBSIO_IOSIZE		0x02	/* ISA I/O space size */

#define WBSIO_CONF_EN_MAGIC	0x87	/* enable configuration mode */
#define WBSIO_CONF_DS_MAGIC	0xaa	/* disable configuration mode */

/* Configuration Space Registers */
#define WBSIO_LDN		0x07	/* Logical Device Number */
#define WBSIO_ID		0x20	/* Device ID */
#define WBSIO_REV		0x21	/* Device Revision */

#define WBSIO_ID_W83627HF	0x52
#define WBSIO_ID_W83627THF	0x82
#define WBSIO_ID_W83627EHF	0x88
#define WBSIO_ID_W83627DHG	0xa0
#define WBSIO_ID_W83627DHGP	0xb0
#define WBSIO_ID_W83627SF	0x59
#define WBSIO_ID_W83637HF	0x70
#define WBSIO_ID_W83697HF	0x60

/* Logical Device Number (LDN) Assignments */
#define WBSIO_LDN_HM		0x0b

/* Hardware Monitor Control Registers (LDN B) */
#define WBSIO_HM_ADDR_MSB	0x60	/* Address [15:8] */
#define WBSIO_HM_ADDR_LSB	0x61	/* Address [7:0] */
d113 1
d131 1
a131 1
	u_int8_t reg, reg0, reg1;
d146 2
a147 2
	reg = wbsio_conf_read(sc->sc_iot, sc->sc_ioh, WBSIO_ID);
	switch (reg) {
d169 3
d201 2
@


1.5
log
@make various strings ("can't map mem space" and similar) more consistent
between instances, saving space in the kernel. feedback from many (some
incorporated, some left for future work).

ok deraadt, kettenis, "why not" miod.
@
text
@d1 1
a1 1
/*	$OpenBSD: wbsio.c,v 1.4 2008/04/08 18:48:43 kettenis Exp $	*/
d50 1
d139 1
d187 3
@


1.4
log
@Fix dmesg printing in the case that no device attaches.

ok miod@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wbsio.c,v 1.3 2008/04/07 18:45:26 kettenis Exp $	*/
d164 1
a164 1
		printf(": can't map I/O space\n");
@


1.3
log
@Hardware monitor address should be 8-byte aligned.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wbsio.c,v 1.2 2008/03/31 17:56:41 deraadt Exp $	*/
d225 1
a225 1
wbsio_print(void *aux, const char *isa)
d229 2
@


1.2
log
@if iobase is 0, lm child is not configured by the bios; ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: wbsio.c,v 1.1 2008/02/17 15:04:08 kettenis Exp $	*/
d201 6
d209 1
a209 1
	iobase = (reg1 << 8) | reg0;
@


1.1
log
@Enter wbsio(4), a driver for the Winbond LPC Super I/O chips.

ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d209 3
@

