head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.34
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.24
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.32
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.30
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.28
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.26
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.22
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.20
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.18
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.16
	OPENBSD_5_0:1.4.0.14
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.12
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.10
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.8
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.22
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.20
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.18
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.16
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.14
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.12
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.10
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	SMP:1.1.0.4
	UBC:1.1.0.2
	UBC_SYNC_B:1.2;
locks; strict;
comment	@ * @;


1.5
date	2016.09.04.10.35.39;	author tedu;	state dead;
branches;
next	1.4;
commitid	k3CCBfex7SPUwjoW;

1.4
date	2008.06.26.05.42.16;	author ray;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.10.17.47.55;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.24.22.38.03;	author mickey;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2002.01.31.22.55.32;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	;

1.1.4.1
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@naddy discovered that bha no longer builds because it includes the now
deleted aha.h header. therefore bha must be dragged into the attic too.
@
text
@/*	$OpenBSD: bha_isa.c,v 1.4 2008/06/26 05:42:16 ray Exp $	*/
/*	$NetBSD: bha_isa.c,v 1.14 1998/08/15 10:10:51 mycroft Exp $	*/

/*-
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Charles M. Hannum.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <machine/bus.h>
#include <machine/intr.h>

#include <scsi/scsi_all.h>
#include <scsi/scsiconf.h>

#include <dev/isa/isavar.h>
#include <dev/isa/isadmavar.h>

#include <dev/ic/bhareg.h>
#include <dev/ic/bhavar.h>

#include "aha.h"
#if NAHA > 0
int btports[8];	/* cannot be more */
int nbtports;
#endif

#define	BHA_ISA_IOSIZE	4

int	bha_isa_probe(struct device *, void *, void *);
void	bha_isa_attach(struct device *, struct device *, void *);

struct cfattach bha_isa_ca = {
	sizeof(struct bha_softc), bha_isa_probe, bha_isa_attach
};

/*
 * Check the slots looking for a board we recognise
 * If we find one, note its address (slot) and call
 * the actual probe routine to check it out.
 */
int
bha_isa_probe(parent, match, aux)
	struct device *parent;
	void *aux, *match;
{
	struct isa_attach_args *ia = aux;
	bus_space_tag_t iot = ia->ia_iot;
	bus_space_handle_t ioh;
	struct bha_probe_data bpd;
#if NAHA > 0
	struct bha_digit digit; 
#endif
	int rv;

	/* Disallow wildcarded i/o address. */
	if (ia->ia_iobase == IOBASEUNK)
		return (0);

	if (bus_space_map(iot, ia->ia_iobase, BHA_ISA_IOSIZE, 0, &ioh))
		return (0);

	rv = bha_find(iot, ioh, &bpd);

#if NAHA > 0
	if (rv) {
		/* Adaptec 1542 cards do not support this */
		digit.reply.digit = '@@';
		digit.cmd.opcode = BHA_INQUIRE_REVISION_3;
		bha_cmd(iot, ioh, NULL, sizeof(digit.cmd), (u_char *)&digit.cmd,
		    sizeof(digit.reply), (u_char *)&digit.reply);
		if (digit.reply.digit == '@@')
			return 1;
	}
#endif

	bus_space_unmap(iot, ioh, BHA_ISA_IOSIZE);

	if (rv) {
		if (ia->ia_irq != -1 && ia->ia_irq != bpd.sc_irq)
			return (0);
		if (ia->ia_drq != -1 && ia->ia_drq != bpd.sc_drq)
			return (0);
		ia->ia_irq = bpd.sc_irq;
		ia->ia_drq = bpd.sc_drq;
		ia->ia_msize = 0;
		ia->ia_iosize = BHA_ISA_IOSIZE;
	}
	return (rv);
}

/*
 * Attach all the sub-devices we can find
 */
void
bha_isa_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct isa_attach_args *ia = aux;
	struct bha_softc *sc = (void *)self;
	bus_space_tag_t iot = ia->ia_iot;
	bus_space_handle_t ioh;
	struct bha_probe_data bpd;
	isa_chipset_tag_t ic = ia->ia_ic;
#ifndef __OpenBSD__
	int error;
#endif

	printf("\n");

	if (bus_space_map(iot, ia->ia_iobase, ia->ia_iosize, 0, &ioh)) {
		printf("%s: can't map i/o space\n", sc->sc_dev.dv_xname);
		return;
	}

	sc->sc_iot = iot;
	sc->sc_ioh = ioh;
	sc->sc_dmat = ia->ia_dmat;
	if (!bha_find(iot, ioh, &bpd)) {
		printf("%s: bha_find failed\n", sc->sc_dev.dv_xname);
		return;
	}

	sc->sc_dmaflags = 0;
	if (bpd.sc_drq != DRQUNK) {
#ifdef __OpenBSD__
		isa_dmacascade(ic, bpd.sc_drq);
#else
		if ((error = isa_dmacascade(ic, bpd.sc_drq)) != 0) {
			printf("%s: unable to cascade DRQ, error = %d\n",
			    sc->sc_dev.dv_xname, error);
			return;
		}
#endif
	} else {
		/*
		 * We have a VLB controller.  If we're at least both
		 * hardware revision E and firmware revision 3.37,
		 * we can do 32-bit DMA (earlier revisions are buggy
		 * in this regard).
		 */
		bha_inquire_setup_information(sc);
		if (strcmp(sc->sc_firmware, "3.37") < 0)
		    printf("%s: buggy VLB controller, disabling 32-bit DMA\n",
		        sc->sc_dev.dv_xname);
		else
			sc->sc_dmaflags = ISABUS_DMA_32BIT;
	}

	sc->sc_ih = isa_intr_establish(ic, bpd.sc_irq, IST_EDGE, IPL_BIO,
	    bha_intr, sc, sc->sc_dev.dv_xname);
	if (sc->sc_ih == NULL) {
		printf("%s: couldn't establish interrupt\n",
		    sc->sc_dev.dv_xname);
		return;
	}

	bha_attach(sc, &bpd);

#if NAHA > 0
	/* XXXX To avoid conflicting with the aha1542 probe */
	btports[nbtports++] = ia->ia_iobase;
#endif
}
@


1.4
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: bha_isa.c,v 1.3 2007/04/10 17:47:55 miod Exp $	*/
@


1.3
log
@``it's'' -> ``its'' when the grammar gods require this change.
@
text
@d1 1
a1 1
/*	$OpenBSD: bha_isa.c,v 1.2 2002/03/14 01:26:56 millert Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: bha_isa.c,v 1.1 2002/01/24 22:38:03 mickey Exp $	*/
d74 1
a74 1
 * If we find one, note it's address (slot) and call
@


1.1
log
@bussified and bus-split bustec scsi ha driver.
original port done by chris@@ in '98 and pounded into
-current by me, plus support for wide mode.
tested on pci in both modes by me, on eisa (w/
half success, thus not enabled yet) by jason@@.
niklas@@, jason@@, millert@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d65 2
a66 2
int	bha_isa_probe __P((struct device *, void *, void *));
void	bha_isa_attach __P((struct device *, struct device *, void *));
@


1.1.4.1
log
@Merge in -current from about a week ago
@
text
@d65 2
a66 2
int	bha_isa_probe(struct device *, void *, void *);
void	bha_isa_attach(struct device *, struct device *, void *);
@


1.1.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: bha_isa.c,v 1.1 2002/01/24 22:38:03 mickey Exp $	*/
@


1.1.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: bha_isa.c,v 1.1.2.1 2002/01/31 22:55:32 niklas Exp $	*/
d65 2
a66 2
int	bha_isa_probe(struct device *, void *, void *);
void	bha_isa_attach(struct device *, struct device *, void *);
@


