head	1.5;
access;
symbols
	OPENBSD_4_1:1.3.0.22
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.20
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.18
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.2
	UBC_BASE:1.2
	OPENBSD_3_0:1.1.0.10
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.8
	OPENBSD_2_8:1.1.0.6
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.2
	SMP_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2007.05.29.21.01.55;	author claudio;	state dead;
branches;
next	1.4;

1.4
date	2007.05.29.18.21.19;	author claudio;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.05.17.25.58;	author art;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	99.12.27.21.51.35;	author fgsch;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.11.13.21.10.01;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	;

1.2.2.1
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@It helps to commit removals from the tree that has the files cvs removed
instead of one where they where just empty. Figured out by art@@
@
text
@@


1.4
log
@Move tokenring support to the attic where it can join the cards that where
decomissioned aeon ago. We will not miss it at all.
OK dlg@@ henning@@ and a lot of cheers by other in the room
@
text
@@


1.3
log
@First round of __P removal in sys
@
text
@a0 175
/*	$OpenBSD: if_tribm_isa.c,v 1.2 2001/11/05 17:25:58 art Exp $	*/
/*	$NetBSD: if_tribm_isa.c,v 1.2 1999/03/22 23:01:37 bad Exp $	*/

/*
 * Copyright (c) 1999 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Onno van der Linden.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by The NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its 
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/socket.h>
#include <sys/device.h>
#include <sys/timeout.h>

#include <net/if.h>
#include <net/if_media.h>
#include <netinet/in.h>
#include <netinet/if_ether.h>

#include <machine/bus.h>

#include <dev/isa/isavar.h>

#include <dev/ic/tropicreg.h>
#include <dev/ic/tropicvar.h>

int	tribm_isa_probe(struct device *, void *, void *);
int	tr_isa_map_io(struct isa_attach_args *, bus_space_handle_t *,
	    bus_space_handle_t *);
void	tr_isa_unmap_io(struct isa_attach_args *, bus_space_handle_t,
	    bus_space_handle_t);

int
tribm_isa_probe(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct isa_attach_args *ia = aux;
	static int irq_f[4] = { 9, 3, 6, 7 };
	static int irq_e[4] = { 9, 3, 10, 11 };
	bus_space_tag_t piot = ia->ia_iot;
	bus_space_tag_t memt = ia->ia_memt;
	bus_space_handle_t pioh, mmioh;
	int i, irq;
	u_int8_t s;

#ifdef notyet
/* XXX Try both 0xa20 and 0xa24 and store that info like 3com */
	if (ia->ia_iobase == IOBASEUNK)
		ia->ia_iobase = 0xa20;
#else
	if (ia->ia_iobase == IOBASEUNK)
		return 0;
#endif

	ia->ia_iosize = 4;
	ia->ia_aux = NULL;

	if (tr_isa_map_io(ia, &pioh, &mmioh))
		return 0;

/*
 * F = Token-Ring Network PC Adapter
 *     Token-Ring Network PC Adapter II
 *     Token-Ring Network Adapter/A
 * E = Token-Ring Network 16/4 Adapter/A (long card)
 *     Token-Ring Network 16/4 Adapter
 * D = Token-Ring Network 16/4 Adapter/A (short card)
 *     16/4 ISA-16 Adapter
 * C = Auto 16/4 Token-Ring ISA Adapter
 *     Auto 16/4 Token-Ring MC Adapter
 */
/*
 * XXX Both 0xD and 0xC types should be able to use 16-bit read and writes
 */
	switch (bus_space_read_1(memt, mmioh, TR_TYP_OFFSET)) {
	case 0xF:
	case 0xE:
	case 0xD:
		if (ia->ia_maddr == MADDRUNK)
#ifdef notyet
			ia->ia_maddr = TR_SRAM_DEFAULT;
#else
			return 0;
#endif
		break;
	case 0xC:
		i = bus_space_read_1(memt, mmioh, TR_ACA_OFFSET) << 12;
		if (ia->ia_maddr == MADDRUNK)
			ia->ia_maddr = i;
		else if (ia->ia_maddr != i) {
			printf(
"tribm_isa_probe: sram mismatch; kernel configured %x != board configured %x\n",
				ia->ia_maddr, i);
			tr_isa_unmap_io(ia, pioh, mmioh);
			return 0;
		}
		break;
	default:
		printf("tribm_isa_probe: unknown type code %x\n",
		    bus_space_read_1(memt, mmioh, TR_TYP_OFFSET));
		tr_isa_unmap_io(ia, pioh, mmioh);
		return 0;
	}

	s = bus_space_read_1(piot, pioh, TR_SWITCH);

	switch (bus_space_read_1(memt, mmioh, TR_IRQ_OFFSET)) {
	case 0xF:
		irq = irq_f[s & 3];
		break;
	case 0xE:
		irq = irq_e[s & 3];
		break;
	default:
		printf("tribm_isa_probe: Unknown IRQ code %x\n",
		    bus_space_read_1(memt, mmioh, TR_IRQ_OFFSET));
		tr_isa_unmap_io(ia, pioh, mmioh);
		return 0;
	}

	if (ia->ia_irq == IRQUNK)
		ia->ia_irq = irq;
	else if (ia->ia_irq != irq) {
		printf(
"tribm_isa_probe: irq mismatch; kernel configured %d != board configured %d\n",
			ia->ia_irq, irq);
		tr_isa_unmap_io(ia, pioh, mmioh);
		return 0;
	}
/*
 * XXX 0x0c == MSIZEMASK (MSIZEBITS)
 */
	ia->ia_msize = 8192 <<
	    ((bus_space_read_1(memt, mmioh, TR_ACA_OFFSET + 1) & 0x0c) >> 2);
	tr_isa_unmap_io(ia, pioh, mmioh);
	/* Check alignment of membase. */
	if ((ia->ia_maddr & (ia->ia_msize-1)) != 0) {
		printf("tribm_isa_probe: SRAM unaligned 0x%04x/%d\n",
		    ia->ia_maddr, ia->ia_msize);
		return 0;
	}
 	return 1;
}
@


1.2
log
@Switch everything to the new bus_dmamap_sync API.
Most work by Wilbern Cobb <vedge@@csoft.org> with some fixes from me, mickey@@
and drahn@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_tribm_isa.c,v 1.1 1999/12/27 21:51:35 fgsch Exp $	*/
d58 5
a62 5
int	tribm_isa_probe __P((struct device *, void *, void *));
int	tr_isa_map_io __P((struct isa_attach_args *, bus_space_handle_t *,
	    bus_space_handle_t *));
void	tr_isa_unmap_io __P((struct isa_attach_args *, bus_space_handle_t,
	    bus_space_handle_t));
@


1.2.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_tribm_isa.c,v 1.2 2001/11/05 17:25:58 art Exp $	*/
d58 5
a62 5
int	tribm_isa_probe(struct device *, void *, void *);
int	tr_isa_map_io(struct isa_attach_args *, bus_space_handle_t *,
	    bus_space_handle_t *);
void	tr_isa_unmap_io(struct isa_attach_args *, bus_space_handle_t,
	    bus_space_handle_t);
@


1.1
log
@Token ring driver for Tropic based boards; from NetBSD.
This is as is in NetBSD. I've some mods in my tree ready to be merged.

For the records:
* This driver needs massive work to be ready for production (people is
invited to help, don't be shy). Rewrite part/whole is my list.
* IP isn't working at the moment. ARP handling needs several changes.
(remember this guys? maybe this time...)
* This only handle SNAP frames. IPX using IPX frames doesn't work (you
could receive but not transmit to be exact). In order to do that, dsap
needs to be changed. I don't know how to setup multiple dsap's at the
moment (don't worry about it now, our IPX code is going to be replaced
soon since the current implementation is buggy).
* Source routing is missing.
* tcpdump needs some hacking too (in my tree too).
* More things I'm probably forgetting now (haven't worked on this for
a while).

  Our networking code needs some cleanup and rearrangement (specially
the headers). net/if_ether.h is an example; arp is not ether specific.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
@


1.1.2.1
log
@Merge in -current
@
text
@a43 1
#include <sys/timeout.h>
@


1.1.2.2
log
@Merge in -current from about a week ago
@
text
@d58 5
a62 5
int	tribm_isa_probe(struct device *, void *, void *);
int	tr_isa_map_io(struct isa_attach_args *, bus_space_handle_t *,
	    bus_space_handle_t *);
void	tr_isa_unmap_io(struct isa_attach_args *, bus_space_handle_t,
	    bus_space_handle_t);
@


