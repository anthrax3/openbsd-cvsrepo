head	1.7;
access;
symbols
	OPENBSD_4_7:1.6.0.6
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.8
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.10
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.8
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.6
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.16
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.14
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.12
	OPENBSD_2_8:1.1.0.10
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.8
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.6
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2010.07.31.08.33.20;	author ratchov;	state dead;
branches;
next	1.6;

1.6
date	2008.06.26.05.42.16;	author ray;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.02.05.21.40;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.21.18.16.40;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.27.11.22.53;	author ho;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.01.02.00.02.42;	author niklas;	state Exp;
branches
	1.1.6.1
	1.1.16.1;
next	;

1.1.6.1
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2003.05.13.19.35.03;	author ho;	state Exp;
branches;
next	;

1.1.16.1
date	2002.06.11.03.42.22;	author art;	state Exp;
branches;
next	1.1.16.2;

1.1.16.2
date	2003.05.19.22.08.30;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@remove the ``midisyn'' framework and anything using it, i.e., the opl
device and the midi interface to pcppi.
@
text
@/*	$OpenBSD: midi_pcppi.c,v 1.6 2008/06/26 05:42:16 ray Exp $	*/
/*	$NetBSD: midi_pcppi.c,v 1.4 1998/11/25 22:17:06 augustss Exp $	*/

/*
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (augustss@@netbsd.org).
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/errno.h>
#include <sys/device.h>
#include <sys/malloc.h>
#include <sys/proc.h>
#include <sys/conf.h>
#include <sys/selinfo.h>
#include <sys/audioio.h>
#include <sys/midiio.h>

#include <dev/isa/pcppivar.h>

#include <dev/audio_if.h>
#include <dev/midi_if.h>
#include <dev/midivar.h>
#include <dev/midisynvar.h>

#define MAX_DURATION 30		/* turn off sound automagically after 30 s */

struct midi_pcppi_softc {
	struct midi_softc sc_mididev;
	midisyn sc_midisyn;
};

int	midi_pcppi_match(struct device *, void *, void *);
void	midi_pcppi_attach(struct device *, struct device *, void *);

void	midi_pcppi_on(midisyn *, u_int32_t, u_int32_t, u_int32_t);
void	midi_pcppi_off(midisyn *, u_int32_t, u_int32_t, u_int32_t);
void	midi_pcppi_close(midisyn *);

struct cfattach midi_pcppi_ca = {
	sizeof(struct midi_pcppi_softc), midi_pcppi_match, midi_pcppi_attach
};

struct midisyn_methods midi_pcppi_hw = {
	0,			/* open */
	midi_pcppi_close,
	0,			/* ioctl */
	0,			/* allocv */
	midi_pcppi_on,
	midi_pcppi_off,
	0,
	0,
	0,
	0,
	0,
	0,
};

int midi_pcppi_attached = 0;	/* Not very nice */

int
midi_pcppi_match(parent, match, aux)
	struct device *parent;
	void *match;
	void *aux;
{
	return (!midi_pcppi_attached);
}

void
midi_pcppi_attach(parent, self, aux)
	struct device *parent;
	struct device *self;
	void *aux;
{
	struct midi_pcppi_softc *sc = (struct midi_pcppi_softc *)self;
	struct pcppi_attach_args *pa = (struct pcppi_attach_args *)aux;
	midisyn *ms;

	ms = &sc->sc_midisyn;
	ms->mets = &midi_pcppi_hw;
	strlcpy(ms->name, "PC speaker", sizeof ms->name);
	ms->nvoice = 1;
	ms->flags = MS_DOALLOC | MS_FREQXLATE;
	ms->data = pa->pa_cookie;

	midi_pcppi_attached++;

	midisyn_attach(&sc->sc_mididev, ms);
	midi_attach(&sc->sc_mididev, parent);
}

void
midi_pcppi_on(ms, chan, note, vel)
	midisyn *ms;
	u_int32_t chan, note, vel;
{
	pcppi_tag_t t = ms->data;

	/*printf("ON  %p %d\n", t, MIDISYN_FREQ_TO_HZ(note));*/
	pcppi_bell(t, MIDISYN_FREQ_TO_HZ(note), MAX_DURATION * hz, 0);
}

void
midi_pcppi_off(ms, chan, note, vel)
	midisyn *ms;
	u_int32_t chan, note, vel;
{
	pcppi_tag_t t = ms->data;

	/*printf("OFF %p %d\n", t, note >> 16);*/
	pcppi_bell(t, 0, 0, 0);
}

void
midi_pcppi_close(ms)
	midisyn *ms;
{
	pcppi_tag_t t = ms->data;

	/* Make sure we are quiet. */
	pcppi_bell(t, 0, 0, 0);
}
@


1.6
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: midi_pcppi.c,v 1.5 2006/01/02 05:21:40 brad Exp $	*/
@


1.5
log
@remove last traces of __BROKEN_INDIRECT_CONFIG.

Thanks to aanriot@@ and Michael Knudsen for checking that alpha/i386/macppc
kernels still compile.
@
text
@d1 1
a1 1
/*	$OpenBSD: midi_pcppi.c,v 1.4 2005/11/21 18:16:40 millert Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.4
log
@Move contents of sys/select.h to sys/selinfo.h in preparation for a
userland-visible sys/select.h.  Consistent with what Net and Free do.
OK deraadt@@, tested with full ports build by naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: midi_pcppi.c,v 1.3 2003/04/27 11:22:53 ho Exp $	*/
a65 2
#define __BROKEN_INDIRECT_CONFIG /* XXX */
#ifdef __BROKEN_INDIRECT_CONFIG
a66 3
#else
int	midi_pcppi_match(struct device *, struct cfdata *, void *);
#endif
a96 1
#ifdef __BROKEN_INDIRECT_CONFIG
a97 3
#else
	struct cfdata *match;
#endif
@


1.3
log
@strcpy/sprintf cleanup of sys/dev. miod@@, deraadt@@ says to commit.
@
text
@d1 1
a1 1
/*	$OpenBSD: midi_pcppi.c,v 1.2 2002/03/14 01:26:56 millert Exp $	*/
d48 1
a48 1
#include <sys/select.h>
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: midi_pcppi.c,v 1.1 1999/01/02 00:02:42 niklas Exp $	*/
d124 1
a124 1
	strcpy(ms->name, "PC speaker");
@


1.1
log
@Midi & sequencer support from NetBSD, mostly by Lennart Augustsson
@
text
@d1 1
a1 1
/*	$OpenBSD: midi_pcppi.c,v 1.4 1998/11/25 22:17:06 augustss Exp $	*/
d68 1
a68 1
int	midi_pcppi_match __P((struct device *, void *, void *));
d70 1
a70 1
int	midi_pcppi_match __P((struct device *, struct cfdata *, void *));
d72 1
a72 1
void	midi_pcppi_attach __P((struct device *, struct device *, void *));
d74 3
a76 3
void	midi_pcppi_on    __P((midisyn *, u_int32_t, u_int32_t, u_int32_t));
void	midi_pcppi_off   __P((midisyn *, u_int32_t, u_int32_t, u_int32_t));
void	midi_pcppi_close __P((midisyn *));
@


1.1.16.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: midi_pcppi.c,v 1.1 1999/01/02 00:02:42 niklas Exp $	*/
d68 1
a68 1
int	midi_pcppi_match(struct device *, void *, void *);
d70 1
a70 1
int	midi_pcppi_match(struct device *, struct cfdata *, void *);
d72 1
a72 1
void	midi_pcppi_attach(struct device *, struct device *, void *);
d74 3
a76 3
void	midi_pcppi_on(midisyn *, u_int32_t, u_int32_t, u_int32_t);
void	midi_pcppi_off(midisyn *, u_int32_t, u_int32_t, u_int32_t);
void	midi_pcppi_close(midisyn *);
@


1.1.16.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d124 1
a124 1
	strlcpy(ms->name, "PC speaker", sizeof ms->name);
@


1.1.6.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d68 1
a68 1
int	midi_pcppi_match(struct device *, void *, void *);
d70 1
a70 1
int	midi_pcppi_match(struct device *, struct cfdata *, void *);
d72 1
a72 1
void	midi_pcppi_attach(struct device *, struct device *, void *);
d74 3
a76 3
void	midi_pcppi_on(midisyn *, u_int32_t, u_int32_t, u_int32_t);
void	midi_pcppi_off(midisyn *, u_int32_t, u_int32_t, u_int32_t);
void	midi_pcppi_close(midisyn *);
@


1.1.6.2
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: midi_pcppi.c,v 1.1.6.1 2002/03/28 12:11:35 niklas Exp $	*/
d124 1
a124 1
	strlcpy(ms->name, "PC speaker", sizeof ms->name);
@


