head	1.3;
access;
symbols
	OPENBSD_4_3:1.2.0.26
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.24
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.22
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.20
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.18
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.16
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.14
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.12
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.10
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.14
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.12
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.10
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2008.04.23.13.28.59;	author jsg;	state dead;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.07.31.06.10.04;	author d;	state Exp;
branches
	1.1.4.1
	1.1.14.1;
next	;

1.1.4.1
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	;

1.1.14.1
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove driver for pre 802.11 RangeLAN2 wireless devices.
It doesn't compile, was never finished, is now irrelevant, and miod
has taken it apon himself to scare good boys and girls by suggesting
they read the code.

ok dlg@@
@
text
@/*	$OpenBSD: if_rln_isa.c,v 1.2 2002/03/14 01:26:56 millert Exp $	*/

/*
 * David Leonard <d@@openbsd.org>, 1999. Public domain.
 *
 * RangeLAN2 ISA card.
 *
 * The DIP switch settings on the card to set the i/o base address are
 *
 *     addr: 1 2 3 4 5 6 7  ['X' = on = down = towards the red/green leds]
 *	100: - - - - - X -
 *	120: - - X - - X -
 *	140: - - - X - X -
 *	218: X X - - - - X
 *	270: - X X X - - X  [default]
 *	280: - - - - X - X
 *	290: - X - - X - X
 *	298: X X - - X - X
 *	2a0: - - X - X - X
 *	2a8: X - X - X - X
 *	2e0: - - X X X - X
 *	300: - - - - - X X
 *	310: - X - - - X X
 *	358: X X - X - X X
 *	360: - - X X - X X
 *	368: X - X X - X X
 *
 * PnP:
 *	PXM0100 "Symphony Cordless PnP ISA Card"
 */

#include "bpfilter.h"

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/socket.h>
#include <sys/device.h>
#include <sys/queue.h>

#include <net/if.h>

#ifdef INET
#include <netinet/in.h>
#include <netinet/if_ether.h>
#endif

#include <machine/cpu.h>
#include <machine/bus.h>
#include <machine/intr.h>

#include <dev/ic/rln.h>
#include <dev/ic/rlnvar.h>
#include <dev/ic/rlnreg.h>

#include <dev/isa/isavar.h>

static int rln_isa_probe(struct device *, void *, void *);
static void rln_isa_attach(struct device *, struct device *, void *);

struct cfattach rln_isa_ca = {
	sizeof(struct rln_softc), rln_isa_probe, rln_isa_attach
};

static const int rln_irq[] = {
	3, 4, 5, 7, 10, 11, 12, 15
};
#define NRLN_IRQ	(sizeof(rln_irq) / sizeof(rln_irq[0]))

static int
rln_isa_probe(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct isa_attach_args *ia = aux;
	struct rln_softc *sc = match;

	/*
	 * The i/o base addr is set by the dip switches
	 * and must be specified in the kernel config.
	 */
	if (ia->ia_iobase == IOBASEUNK)
		return (0);

	/* Attempt a card reset through the io ports */
	sc->sc_iot = ia->ia_iot;
	sc->sc_width = 0;	/* Force width probe */
	if (bus_space_map(sc->sc_iot, ia->ia_iobase, RLN_NPORTS, 0, 
	    &sc->sc_ioh))
		return (0);

	if (rln_reset(sc)) {
		bus_space_unmap(sc->sc_iot, sc->sc_ioh, RLN_NPORTS);
		return (0);
	}

	ia->ia_iosize = RLN_NPORTS;
	return (1);
}

static void
rln_isa_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct rln_softc *sc = (void *)self;
	struct isa_attach_args *ia = aux;
	int irq = ia->ia_irq;
	int mask;
	int i;

	if (irq == IRQUNK) {
		/* Allocate a valid IRQ. */
		mask = 0;
		for (i = 0; i < NRLN_IRQ; i++)
			mask |= (1 << rln_irq[i]);
		if (isa_intr_alloc(ia->ia_ic, mask, IST_EDGE, &irq))
			panic("rln_isa_attach: can't allocate irq");
	} 
#ifdef DIAGNOSTIC
	else {
		/* Check given IRQ is valid. */
		for (i = 0; i < NRLN_IRQ; i++)
			if (irq == rln_irq[i])
				break;
		if (i == NRLN_IRQ)
			printf("rln_isa_probe: using invalid irq %d\n", irq);
	}
#endif

	printf(":");

	sc->sc_ih = isa_intr_establish(ia->ia_ic, irq, IST_EDGE,
	    IPL_NET, rlnintr, sc, sc->sc_dev.dv_xname);
#ifdef DIAGNOSTIC
	if (sc->sc_ih == NULL)
		panic("rln_isa_attach: couldn't establish interrupt");
#endif

	/* Tell the card which IRQ to use. */
	sc->sc_irq = irq;
	sc->sc_width = 0;	/* re-probe width */

	printf("%s: RangeLAN2 7100", sc->sc_dev.dv_xname);
	rlnconfig(sc);
	printf("\n");
}
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_rln_isa.c,v 1.1 1999/07/31 06:10:04 d Exp $	*/
@


1.1
log
@RangeLAN2 ISA
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d57 2
a58 2
static int rln_isa_probe __P((struct device *, void *, void *));
static void rln_isa_attach __P((struct device *, struct device *, void *));
@


1.1.14.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_rln_isa.c,v 1.1 1999/07/31 06:10:04 d Exp $	*/
d57 2
a58 2
static int rln_isa_probe(struct device *, void *, void *);
static void rln_isa_attach(struct device *, struct device *, void *);
@


1.1.4.1
log
@Merge in -current from about a week ago
@
text
@d57 2
a58 2
static int rln_isa_probe(struct device *, void *, void *);
static void rln_isa_attach(struct device *, struct device *, void *);
@


