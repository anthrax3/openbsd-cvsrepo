head	1.58;
access;
symbols
	OPENBSD_6_2:1.58.0.16
	OPENBSD_6_2_BASE:1.58
	OPENBSD_6_1:1.58.0.14
	OPENBSD_6_1_BASE:1.58
	OPENBSD_6_0:1.58.0.10
	OPENBSD_6_0_BASE:1.58
	OPENBSD_5_9:1.58.0.2
	OPENBSD_5_9_BASE:1.58
	OPENBSD_5_8:1.58.0.8
	OPENBSD_5_8_BASE:1.58
	OPENBSD_5_7:1.58.0.6
	OPENBSD_5_7_BASE:1.58
	OPENBSD_5_6:1.58.0.4
	OPENBSD_5_6_BASE:1.58
	OPENBSD_5_5:1.57.0.14
	OPENBSD_5_5_BASE:1.57
	OPENBSD_5_4:1.57.0.10
	OPENBSD_5_4_BASE:1.57
	OPENBSD_5_3:1.57.0.8
	OPENBSD_5_3_BASE:1.57
	OPENBSD_5_2:1.57.0.6
	OPENBSD_5_2_BASE:1.57
	OPENBSD_5_1_BASE:1.57
	OPENBSD_5_1:1.57.0.4
	OPENBSD_5_0:1.57.0.2
	OPENBSD_5_0_BASE:1.57
	OPENBSD_4_9:1.55.0.4
	OPENBSD_4_9_BASE:1.55
	OPENBSD_4_8:1.55.0.2
	OPENBSD_4_8_BASE:1.55
	OPENBSD_4_7:1.53.0.6
	OPENBSD_4_7_BASE:1.53
	OPENBSD_4_6:1.53.0.8
	OPENBSD_4_6_BASE:1.53
	OPENBSD_4_5:1.53.0.4
	OPENBSD_4_5_BASE:1.53
	OPENBSD_4_4:1.53.0.2
	OPENBSD_4_4_BASE:1.53
	OPENBSD_4_3:1.52.0.6
	OPENBSD_4_3_BASE:1.52
	OPENBSD_4_2:1.52.0.4
	OPENBSD_4_2_BASE:1.52
	OPENBSD_4_1:1.52.0.2
	OPENBSD_4_1_BASE:1.52
	OPENBSD_4_0:1.51.0.12
	OPENBSD_4_0_BASE:1.51
	OPENBSD_3_9:1.51.0.10
	OPENBSD_3_9_BASE:1.51
	OPENBSD_3_8:1.51.0.8
	OPENBSD_3_8_BASE:1.51
	OPENBSD_3_7:1.51.0.6
	OPENBSD_3_7_BASE:1.51
	OPENBSD_3_6:1.51.0.4
	OPENBSD_3_6_BASE:1.51
	SMP_SYNC_A:1.51
	SMP_SYNC_B:1.51
	OPENBSD_3_5:1.51.0.2
	OPENBSD_3_5_BASE:1.51
	OPENBSD_3_4:1.45.0.4
	OPENBSD_3_4_BASE:1.45
	UBC_SYNC_A:1.45
	OPENBSD_3_3:1.45.0.2
	OPENBSD_3_3_BASE:1.45
	OPENBSD_3_2:1.44.0.2
	OPENBSD_3_2_BASE:1.44
	OPENBSD_3_1:1.43.0.2
	OPENBSD_3_1_BASE:1.43
	UBC_SYNC_B:1.44
	UBC:1.42.0.4
	UBC_BASE:1.42
	OPENBSD_3_0:1.42.0.2
	OPENBSD_3_0_BASE:1.42
	OPENBSD_2_9_BASE:1.40
	OPENBSD_2_9:1.40.0.2
	OPENBSD_2_8:1.39.0.8
	OPENBSD_2_8_BASE:1.39
	OPENBSD_2_7:1.39.0.6
	OPENBSD_2_7_BASE:1.39
	SMP:1.39.0.4
	SMP_BASE:1.39
	kame_19991208:1.39
	OPENBSD_2_6:1.39.0.2
	OPENBSD_2_6_BASE:1.39
	OPENBSD_2_5:1.34.0.2
	OPENBSD_2_5_BASE:1.34
	OPENBSD_2_4:1.30.0.2
	OPENBSD_2_4_BASE:1.30
	OPENBSD_2_3:1.27.0.2
	OPENBSD_2_3_BASE:1.27
	OPENBSD_2_2:1.22.0.2
	OPENBSD_2_2_BASE:1.22
	OPENBSD_2_1:1.21.0.2
	OPENBSD_2_1_BASE:1.21
	OPENBSD_2_0:1.16.0.2
	OPENBSD_2_0_BASE:1.16
	netbsd:1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.58
date	2014.03.18.22.36.37;	author miod;	state Exp;
branches;
next	1.57;

1.57
date	2011.07.08.08.26.41;	author jsg;	state Exp;
branches;
next	1.56;

1.56
date	2011.07.07.19.16.42;	author deraadt;	state Exp;
branches;
next	1.55;

1.55
date	2010.06.24.21.17.59;	author jasper;	state Exp;
branches;
next	1.54;

1.54
date	2010.05.23.11.52.37;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2008.06.26.05.42.16;	author ray;	state Exp;
branches;
next	1.52;

1.52
date	2007.01.06.20.17.43;	author miod;	state Exp;
branches;
next	1.51;

1.51
date	2004.02.03.09.25.02;	author mickey;	state Exp;
branches;
next	1.50;

1.50
date	2004.02.01.17.11.43;	author nordin;	state Exp;
branches;
next	1.49;

1.49
date	2004.02.01.06.33.29;	author drahn;	state Exp;
branches;
next	1.48;

1.48
date	2004.01.28.01.39.39;	author mickey;	state Exp;
branches;
next	1.47;

1.47
date	2004.01.15.17.51.42;	author miod;	state Exp;
branches;
next	1.46;

1.46
date	2003.12.12.22.56.46;	author hshoexer;	state Exp;
branches;
next	1.45;

1.45
date	2002.12.20.01.56.32;	author mickey;	state Exp;
branches;
next	1.44;

1.44
date	2002.06.30.16.05.59;	author miod;	state Exp;
branches;
next	1.43;

1.43
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.42;

1.42
date	2001.07.06.00.23.09;	author smurph;	state Exp;
branches
	1.42.4.1;
next	1.41;

1.41
date	2001.07.06.00.04.29;	author smurph;	state Exp;
branches;
next	1.40;

1.40
date	2001.01.29.05.51.00;	author mickey;	state Exp;
branches;
next	1.39;

1.39
date	99.08.09.17.38.45;	author deraadt;	state Exp;
branches
	1.39.4.1;
next	1.38;

1.38
date	99.08.08.19.16.47;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	99.07.05.20.08.37;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	99.06.22.16.28.27;	author espie;	state Exp;
branches;
next	1.35;

1.35
date	99.06.16.14.38.35;	author espie;	state Exp;
branches;
next	1.34;

1.34
date	99.01.20.18.21.00;	author niklas;	state Exp;
branches;
next	1.33;

1.33
date	99.01.16.08.28.30;	author mickey;	state Exp;
branches;
next	1.32;

1.32
date	99.01.07.06.14.48;	author niklas;	state Exp;
branches;
next	1.31;

1.31
date	98.11.28.01.27.40;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	98.08.22.17.58.04;	author rahnds;	state Exp;
branches;
next	1.29;

1.29
date	98.07.28.13.26.51;	author csapuntz;	state Exp;
branches;
next	1.28;

1.28
date	98.04.26.21.02.48;	author provos;	state Exp;
branches;
next	1.27;

1.27
date	98.01.20.18.40.33;	author niklas;	state Exp;
branches;
next	1.26;

1.26
date	97.12.25.13.18.07;	author downsj;	state Exp;
branches;
next	1.25;

1.25
date	97.12.25.12.06.49;	author downsj;	state Exp;
branches;
next	1.24;

1.24
date	97.12.25.09.22.44;	author downsj;	state Exp;
branches;
next	1.23;

1.23
date	97.12.21.14.41.27;	author downsj;	state Exp;
branches;
next	1.22;

1.22
date	97.10.13.14.46.45;	author pefo;	state Exp;
branches;
next	1.21;

1.21
date	97.02.13.16.50.15;	author pefo;	state Exp;
branches;
next	1.20;

1.20
date	96.11.29.22.55.04;	author niklas;	state Exp;
branches;
next	1.19;

1.19
date	96.11.23.21.46.43;	author kstailey;	state Exp;
branches;
next	1.18;

1.18
date	96.11.12.20.30.40;	author niklas;	state Exp;
branches;
next	1.17;

1.17
date	96.10.31.01.05.10;	author niklas;	state Exp;
branches;
next	1.16;

1.16
date	96.08.15.17.31.42;	author shawn;	state Exp;
branches;
next	1.15;

1.15
date	96.08.15.17.28.41;	author shawn;	state Exp;
branches;
next	1.14;

1.14
date	96.08.14.14.36.17;	author shawn;	state Exp;
branches;
next	1.13;

1.13
date	96.06.22.23.18.43;	author pefo;	state Exp;
branches;
next	1.12;

1.12
date	96.05.26.00.27.24;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	96.05.12.08.45.38;	author pefo;	state Exp;
branches;
next	1.10;

1.10
date	96.05.10.12.37.45;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.04.27.18.39.07;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	96.04.21.22.24.16;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.04.18.23.47.43;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.03.20.01.00.55;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.03.19.21.10.23;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.03.08.16.43.07;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.02.20.04.36.00;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	95.12.27.22.06.30;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.36;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.36;	author deraadt;	state Exp;
branches;
next	;

1.39.4.1
date	2001.05.14.22.24.45;	author niklas;	state Exp;
branches;
next	1.39.4.2;

1.39.4.2
date	2001.10.31.03.22.43;	author nate;	state Exp;
branches;
next	1.39.4.3;

1.39.4.3
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	1.39.4.4;

1.39.4.4
date	2003.03.28.00.38.16;	author niklas;	state Exp;
branches;
next	1.39.4.5;

1.39.4.5
date	2004.02.19.10.56.22;	author niklas;	state Exp;
branches;
next	;

1.42.4.1
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	1.42.4.2;

1.42.4.2
date	2002.10.29.00.33.26;	author art;	state Exp;
branches;
next	1.42.4.3;

1.42.4.3
date	2003.05.19.22.07.48;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.58
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: isavar.h,v 1.57 2011/07/08 08:26:41 jsg Exp $	*/
/*	$NetBSD: isavar.h,v 1.26 1997/06/06 23:43:57 thorpej Exp $	*/

/*-
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,
 * NASA Ames Research Center.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1996 Christos Zoulas.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Christos Zoulas.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1995 Chris G. Demetriou
 * Copyright (c) 1992 Berkeley Software Design, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Berkeley Software
 *	Design, Inc.
 * 4. The name of Berkeley Software Design must not be used to endorse
 *    or promote products derived from this software without specific
 *    prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY BERKELEY SOFTWARE DESIGN, INC. ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL BERKELEY SOFTWARE DESIGN, INC. BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	BSDI Id: isavar.h,v 1.5 1992/12/01 18:06:00 karels Exp 
 */

#ifndef _DEV_ISA_ISAVAR_H_
#define	_DEV_ISA_ISAVAR_H_

/*
 * Definitions for ISA and ISA PnP autoconfiguration.
 */

#include <sys/queue.h>
#include <machine/bus.h>

#ifndef NISADMA
#include "isadma.h"
#endif

/* 
 * Structures and definitions needed by the machine-dependent header.
 */
struct isabus_attach_args;

#if defined(__alpha__)
#include <alpha/isa/isa_machdep.h>
#elif defined(__i386__)
#include <i386/isa/isa_machdep.h>
#elif defined(__powerpc__)
#include <powerpc/isa/isa_machdep.h>
#else
#include <machine/isa_machdep.h>
#endif

#include "isapnp.h"

#if NISAPNP > 0
/*
 * Structures and definitions needed by the machine-dependent header.
 */
struct isapnp_softc;

#if defined(__alpha__)
#include <alpha/isa/isapnp_machdep.h>
#elif defined(__i386__)
#include <i386/isa/isapnp_machdep.h>
#else
#error COMPILING ISAPNP FOR UNSUPPORTED MACHINE.
#endif
#endif	/* NISAPNP */

# define ISAPNP_WRITE_ADDR(sc, v) \
    bus_space_write_1(sc->sc_iot, sc->sc_addr_ioh, 0, v)
# define ISAPNP_WRITE_DATA(sc, v) \
    bus_space_write_1(sc->sc_iot, sc->sc_wrdata_ioh, 0, v)
# define ISAPNP_READ_DATA(sc) \
    bus_space_read_1(sc->sc_iot, sc->sc_read_ioh, 0)

# define ISAPNP_CLONE_SETUP(dest, src) \
	do { \
		bzero((dest), sizeof(*(dest))); \
		(dest)->ia_ic = (src)->ia_ic; \
	} while (0)

#ifndef _DEV_ISA_ISAPNPREG_H_
/*
 * `reg' defines needed only for these structures.
 */
#define ISAPNP_MAX_CARDS 	8
#define ISAPNP_MAX_IDENT	32
#define ISAPNP_MAX_DEVCLASS	16
#define ISAPNP_SERIAL_SIZE	9

#define ISAPNP_NUM_MEM		4
#define ISAPNP_NUM_IO		8
#define ISAPNP_NUM_IRQ		16
#define ISAPNP_NUM_DRQ		8
#define ISAPNP_NUM_MEM32	4
#endif	/* _DEV_ISA_ISAPNPREG_H_ */

/*
 * ISA PnP-specific structures.
 */
struct isapnp_softc {
	struct device		sc_dev;
	TAILQ_HEAD(, isadev)
		sc_subdevs;		/* list of all children */

	bus_space_tag_t sc_iot;		/* isa io space tag */
	bus_space_tag_t sc_memt;	/* isa mem space tag */
#if NISADMA > 0
	bus_dma_tag_t sc_dmat;		/* isa DMA tag */
#endif /* NISADMA > 0 */

	int			sc_read_port;
	bus_space_handle_t	sc_addr_ioh;
	bus_space_handle_t	sc_wrdata_ioh;
	bus_space_handle_t	sc_read_ioh;
	bus_space_handle_t	sc_memh;
	u_int8_t		sc_ncards;
    	u_int8_t		sc_id[ISAPNP_MAX_CARDS][ISAPNP_SERIAL_SIZE];
};

struct isapnp_region {
	bus_space_handle_t h;
	u_int32_t base;

	u_int32_t minbase;
	u_int32_t maxbase;
	u_int32_t length;
	u_int32_t align;
	u_int8_t  flags;
};

struct isapnp_pin {
	int16_t	  num;
	u_int8_t  flags:4;
	u_int8_t  type:4;
	u_int16_t bits;
};

struct isapnp_knowndev {
	const char pnpid[8];
	const char driver[5];
};

/*
 * ISA bus attach arguments
 */
struct isabus_attach_args {
	char	*iba_busname;		/* XXX should be common */
	bus_space_tag_t iba_iot;	/* isa i/o space tag */
	bus_space_tag_t iba_memt;	/* isa mem space tag */
#if NISADMA > 0
	bus_dma_tag_t iba_dmat;		/* isa DMA tag */
#endif
	isa_chipset_tag_t iba_ic;
};

/*
 * ISA/ISA PnP shared driver attach arguments
 */
struct isa_attach_args {
	struct device  *ia_isa;		/* isa device */
	bus_space_tag_t ia_iot;		/* isa i/o space tag */
	bus_space_tag_t ia_memt;	/* isa mem space tag */
#if NISADMA > 0
	bus_dma_tag_t ia_dmat;		/* DMA tag */
#endif
	bus_space_handle_t ia_delaybah;	/* i/o handle for `delay port' */

	isa_chipset_tag_t ia_ic;

	/*
	 * ISA PnP configuration support.  `ipa_' prefixes are used to denote
	 * PnP specific members of this structure.
	 */
	struct isa_attach_args	*ipa_sibling;
	struct isa_attach_args	*ipa_child;

	char	ipa_devident[ISAPNP_MAX_IDENT];
	char	ipa_devlogic[ISAPNP_MAX_DEVCLASS];
	char	ipa_devcompat[ISAPNP_MAX_DEVCLASS];
	char	ipa_devclass[ISAPNP_MAX_DEVCLASS];

	u_char	ipa_pref;
	u_char	ipa_devnum;

	u_char	ipa_nio;
	u_char	ipa_nirq;
	u_char	ipa_ndrq;
	u_char	ipa_nmem;
	u_char	ipa_nmem32;

	struct isapnp_region	ipa_io[ISAPNP_NUM_IO];
	struct isapnp_region	ipa_mem[ISAPNP_NUM_MEM];
	struct isapnp_region	ipa_mem32[ISAPNP_NUM_MEM32];
	struct isapnp_pin	ipa_irq[ISAPNP_NUM_IRQ];
	struct isapnp_pin	ipa_drq[ISAPNP_NUM_DRQ];

	/*
	 * Compatibility defines for ISA drivers.
	 */
#define ia_iobase	ipa_io[0].base
#define ia_iosize	ipa_io[0].length
#define ia_ioh		ipa_io[0].h
#define ia_irq		ipa_irq[0].num
#define	ia_drq		ipa_drq[0].num
#define	ia_drq2		ipa_drq[1].num
#define ia_maddr	ipa_mem[0].base
#define ia_msize	ipa_mem[0].length
#define ia_memh		ipa_mem[0].h

	void	*ia_aux;		/* driver specific */
};

#define	IOBASEUNK	-1		/* i/o address is unknown */
#define	IRQUNK		-1		/* interrupt request line is unknown */
#define	DRQUNK		-1		/* DMA request line is unknown */
#define	MADDRUNK	-1		/* shared memory address is unknown */

/*
 * Per-device ISA variables
 */
struct isadev {
	struct  device *id_dev;		/* back pointer to generic */
	TAILQ_ENTRY(isadev)
		id_bchain;		/* bus chain */
};

/*
 * ISA master bus
 */
struct isa_softc {
	struct	device sc_dev;		/* base device */
	TAILQ_HEAD(, isadev)
		sc_subdevs;		/* list of all children */

	bus_space_tag_t sc_iot;		/* isa io space tag */
	bus_space_tag_t sc_memt;	/* isa mem space tag */
#if NISADMA > 0
	bus_dma_tag_t sc_dmat;		/* isa DMA tag */
#endif /* NISADMA > 0 */

	isa_chipset_tag_t sc_ic;

#if NISADMA > 0
	/*
	 * Bitmap representing the DRQ channels available
	 * for ISA.
	 */
	int	sc_drqmap;
#define sc_drq	sc_drqmap		/* XXX compatibility mode */

	bus_space_handle_t sc_dma1h;	/* i/o handle for DMA controller #1 */
	bus_space_handle_t sc_dma2h;	/* i/o handle for DMA controller #2 */
	bus_space_handle_t sc_dmapgh;	/* i/o handle for DMA page registers */

	/*
	 * DMA maps used for the 8 DMA channels.
	 */
	bus_dmamap_t	sc_dmamaps[8];
	bus_size_t 	sc_dmalength[8];

	int	sc_dmareads;		/* state for isa_dmadone() */
	int	sc_dmafinished;		/* DMA completion state */
#endif /* NISADMA > 0 */

	/*
	 * This i/o handle is used to map port 0x84, which is
	 * read to provide a 1.25us delay.  This access handle
	 * is mapped in isaattach(), and exported to drivers
	 * via isa_attach_args.
	 */
	bus_space_handle_t   sc_delaybah;
};

#define	ISA_DRQ_ISFREE(isadev, drq) \
	((((struct isa_softc *)(isadev))->sc_drqmap & (1 << (drq))) == 0)

#define	ISA_DRQ_ALLOC(isadev, drq) \
	((struct isa_softc *)(isadev))->sc_drqmap |= (1 << (drq))

#define	ISA_DRQ_FREE(isadev, drq) \
	((struct isa_softc *)(isadev))->sc_drqmap &= ~(1 << (drq))

#define		cf_iobase		cf_loc[0]
#define		cf_iosize		cf_loc[1]
#define		cf_maddr		cf_loc[2]
#define		cf_msize		cf_loc[3]
#define		cf_irq			cf_loc[4]
#define		cf_drq			cf_loc[5]
#define		cf_drq2			cf_loc[6]

/*
 * ISA interrupt handler manipulation.
 * 
 * To establish an ISA interrupt handler, a driver calls isa_intr_establish()
 * with the interrupt number, type, level, function, and function argument of
 * the interrupt it wants to handle.  Isa_intr_establish() returns an opaque
 * handle to an event descriptor if it succeeds, and invokes panic() if it
 * fails.  (XXX It should return NULL, then drivers should handle that, but
 * what should they do?)  Interrupt handlers should return 0 for "interrupt
 * not for me", 1  for "I took care of it", or -1 for "I guess it was mine,
 * but I wasn't expecting it."
 *
 * To remove an interrupt handler, the driver calls isa_intr_disestablish() 
 * with the handle returned by isa_intr_establish() for that handler.
 */

/* ISA interrupt sharing types */
char	*isa_intr_typename(int type);

void	isascan(struct device *parent, void *match);
int	isaprint(void *, const char *);

/*
 * Some ISA devices (e.g. on a VLB) can perform 32-bit DMA.  This
 * flag is passed to bus_dmamap_create() to indicate that fact.
 */
#define	ISABUS_DMA_32BIT	BUS_DMA_BUS1

/*
 * ISA PnP prototypes and support macros.
 */
static __inline void isapnp_write_reg(struct isapnp_softc *, int, u_char);
static __inline u_char isapnp_read_reg(struct isapnp_softc *, int);

static __inline void
isapnp_write_reg(struct isapnp_softc *sc, int r, u_char v)
{
	ISAPNP_WRITE_ADDR(sc, r);
	ISAPNP_WRITE_DATA(sc, v);
}

static __inline u_char
isapnp_read_reg(struct isapnp_softc *sc, int r)
{
	ISAPNP_WRITE_ADDR(sc, r);
	return ISAPNP_READ_DATA(sc);
}

struct isa_attach_args *
    isapnp_get_resource(struct isapnp_softc *, int, struct isa_attach_args *);
char *isapnp_id_to_vendor(char *, const u_char *);

int isapnp_config(bus_space_tag_t, bus_space_tag_t,
    struct isa_attach_args *);
void isapnp_unconfig(bus_space_tag_t, bus_space_tag_t,
    struct isa_attach_args *);

void isapnp_isa_attach_hook(struct isa_softc *);
#ifdef DEBUG_ISAPNP
void isapnp_print_mem(const char *, const struct isapnp_region *);
void isapnp_print_io(const char *, const struct isapnp_region *);
void isapnp_print_irq(const char *, const struct isapnp_pin *);
void isapnp_print_drq(const char *, const struct isapnp_pin *);
void isapnp_print_dep_start(const char *, const u_char);
void isapnp_print_attach(const struct isa_attach_args *);
void isapnp_get_config(struct isapnp_softc *,
	struct isa_attach_args *);
void isapnp_print_config(const struct isa_attach_args *);
#endif	/* DEBUG_ISAPNP */
#endif /* _DEV_ISA_ISAVAR_H_ */
@


1.57
log
@ansi, no binary change
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.56 2011/07/07 19:16:42 deraadt Exp $	*/
a119 2
#elif defined(__hp300__)
#include <hp300/dev/isa_machdep.h>
@


1.56
log
@remove mvmeppc; it is really rough shape.  ok drahn miod
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.55 2010/06/24 21:17:59 jasper Exp $	*/
d405 1
a405 4
isapnp_write_reg(sc, r, v)
	struct isapnp_softc *sc;
	int r;
	u_char v;
d412 1
a412 3
isapnp_read_reg(sc, r)
	struct isapnp_softc *sc;
	int r;
@


1.55
log
@- remove ISAPNP_FREE and ISAPNP_MALLOC macro's and just use them inline.

ok thib@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.54 2010/05/23 11:52:37 deraadt Exp $	*/
a123 2
#elif defined(__mvmeppc__)
#include <mvmeppc/isa/isa_machdep.h>
@


1.54
log
@move hp300 to -D__hp300__; ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.53 2008/06/26 05:42:16 ray Exp $	*/
a155 2
# define ISAPNP_MALLOC(a) malloc(a, M_DEVBUF, M_WAITOK)
# define ISAPNP_FREE(a) free(a, M_DEVBUF)
@


1.53
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.52 2007/01/06 20:17:43 miod Exp $	*/
d120 1
a120 3
#elif defined(__cats__)
#include <cats/isa/isa_machdep.h>
#elif defined(hp300)
@


1.52
log
@Preliminary support for the hp300 single ISA slot found in 4xx `t' models.
Everything works well but interrupts, where no two devices causes the frodo
chip to behave in the same way... (polling will work nicely)
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.51 2004/02/03 09:25:02 mickey Exp $	*/
a19 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.51
log
@repair cats
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.50 2004/02/01 17:11:43 nordin Exp $	*/
d125 1
a125 4
#if (__alpha__ + amiga + __cats__ + __i386__ + arc + __wgrisc__ + __powerpc__ + __hppa__ + __amd64__ != 1)
#error "COMPILING ISA FOR UNSUPPORTED MACHINE, OR MORE THAN ONE."
#endif
#ifdef __alpha__
d127 1
a127 5
#endif
#ifdef amiga
#include <amiga/isa/isa_machdep.h>
#endif
#ifdef __cats__
d129 3
a131 2
#endif
#ifdef __i386__
d133 1
a133 9
#endif
#ifdef arc
#include <arc/isa/isa_machdep.h>
#endif
#ifdef __wgrisc__
#include <wgrisc/isa/isa_machdep.h>
#endif
#ifdef __powerpc__
#ifdef __mvmeppc__
d135 2
d138 1
a138 8
#include <powerpc/isa/isa_machdep.h>
#endif 
#endif
#ifdef __hppa__
#include <hppa/include/isa_machdep.h>
#endif
#ifdef __amd64__
#include <amd64/include/isa_machdep.h>
d149 3
a151 4
#if (__i386__ != 1 && __alpha__ != 1)
#error COMPILING ISAPNP FOR UNSUPPORTED MACHINE, OR MORE THAN ONE.
#endif
#if __i386__
d153 2
a154 3
#endif
#if __alpha__
#include <alpha/isa/isapnp_machdep.h>
@


1.50
log
@Restore support for amd64.
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.49 2004/02/01 06:33:29 drahn Exp $	*/
d125 1
a125 1
#if (__alpha__ + amiga + __arm__ + __i386__ + arc + __wgrisc__ + __powerpc__ + __hppa__ + __amd64__ != 1)
d134 1
a134 1
#ifdef __arm__
@


1.49
log
@add cats support ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.48 2004/01/28 01:39:39 mickey Exp $	*/
d125 1
a125 1
#if (__alpha__ + amiga + __arm__ + __i386__ + arc + __wgrisc__ + __powerpc__ + __hppa__ != 1)
@


1.48
log
@an amd64 arch support.
hacked by art@@ from netbsd sources and then later debugged
by me into the shape where it can host itself.
no bootloader yet as needs redoing from the
recent advanced i386 sources (anyone? ;)
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.47 2004/01/15 17:51:42 miod Exp $	*/
d125 1
a125 1
#if (__alpha__ + amiga + __i386__ + arc + __wgrisc__ + __powerpc__ + __hppa__ + __amd64__ != 1)
d133 3
@


1.47
log
@Provide explicit function argument declarations.
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.46 2003/12/12 22:56:46 hshoexer Exp $	*/
d125 1
a125 1
#if (__alpha__ + amiga + __i386__ + arc + __wgrisc__ + __powerpc__ + __hppa__ != 1)
d152 3
@


1.46
log
@another small compiler warning cleanup (#error instead of bailing out)

ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.45 2002/12/20 01:56:32 mickey Exp $	*/
d445 1
@


1.45
log
@no need for these to sit in their own dirs, there not gonna be any sources there anyway, all code is in the particular bus adapter's source
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.44 2002/06/30 16:05:59 miod Exp $	*/
d163 1
a163 1
ERROR: COMPILING ISAPNP FOR UNSUPPORTED MACHINE, OR MORE THAN ONE.
@


1.44
log
@When duplicating isa_attach_args structures to build several attachement
possibilities for isapnp devices, make sure to carry the original ia_ic
member. Although mostly unused on i386, it is vital on alpha.

This makes isapnp on alpha attach without panicing.
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.43 2002/03/14 01:26:56 millert Exp $	*/
d151 1
a151 1
#include <hppa/isa/isa_machdep.h>
@


1.43
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.42 2001/07/06 00:23:09 smurph Exp $	*/
d182 5
d451 1
a451 1
    isapnp_get_resource(struct isapnp_softc *, int);
@


1.42
log
@__powerpc__ is defined in gcc's specs and used throughout the tree for powerpc related stuff, so mvmeppc must retain __powerpc__ and add __mvmeppc__.
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.40 2001/01/29 05:51:00 mickey Exp $	*/
d410 1
a410 1
char	*isa_intr_typename __P((int type));
d412 2
a413 2
void	isascan __P((struct device *parent, void *match));
int	isaprint __P((void *, const char *));
d424 2
a425 2
static __inline void isapnp_write_reg __P((struct isapnp_softc *, int, u_char));
static __inline u_char isapnp_read_reg __P((struct isapnp_softc *, int));
d446 2
a447 2
    isapnp_get_resource __P((struct isapnp_softc *, int));
char *isapnp_id_to_vendor __P((char *, const u_char *));
d449 4
a452 4
int isapnp_config __P((bus_space_tag_t, bus_space_tag_t,
    struct isa_attach_args *));
void isapnp_unconfig __P((bus_space_tag_t, bus_space_tag_t,
    struct isa_attach_args *));
d454 1
a454 1
void isapnp_isa_attach_hook __P((struct isa_softc *));
d456 9
a464 9
void isapnp_print_mem __P((const char *, const struct isapnp_region *));
void isapnp_print_io __P((const char *, const struct isapnp_region *));
void isapnp_print_irq __P((const char *, const struct isapnp_pin *));
void isapnp_print_drq __P((const char *, const struct isapnp_pin *));
void isapnp_print_dep_start __P((const char *, const u_char));
void isapnp_print_attach __P((const struct isa_attach_args *));
void isapnp_get_config __P((struct isapnp_softc *,
	struct isa_attach_args *));
void isapnp_print_config __P((const struct isa_attach_args *));
@


1.42.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.42 2001/07/06 00:23:09 smurph Exp $	*/
d410 1
a410 1
char	*isa_intr_typename(int type);
d412 2
a413 2
void	isascan(struct device *parent, void *match);
int	isaprint(void *, const char *);
d424 2
a425 2
static __inline void isapnp_write_reg(struct isapnp_softc *, int, u_char);
static __inline u_char isapnp_read_reg(struct isapnp_softc *, int);
d446 2
a447 2
    isapnp_get_resource(struct isapnp_softc *, int);
char *isapnp_id_to_vendor(char *, const u_char *);
d449 4
a452 4
int isapnp_config(bus_space_tag_t, bus_space_tag_t,
    struct isa_attach_args *);
void isapnp_unconfig(bus_space_tag_t, bus_space_tag_t,
    struct isa_attach_args *);
d454 1
a454 1
void isapnp_isa_attach_hook(struct isa_softc *);
d456 9
a464 9
void isapnp_print_mem(const char *, const struct isapnp_region *);
void isapnp_print_io(const char *, const struct isapnp_region *);
void isapnp_print_irq(const char *, const struct isapnp_pin *);
void isapnp_print_drq(const char *, const struct isapnp_pin *);
void isapnp_print_dep_start(const char *, const u_char);
void isapnp_print_attach(const struct isa_attach_args *);
void isapnp_get_config(struct isapnp_softc *,
	struct isa_attach_args *);
void isapnp_print_config(const struct isa_attach_args *);
@


1.42.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.42.4.1 2002/06/11 03:42:21 art Exp $	*/
a181 5
# define ISAPNP_CLONE_SETUP(dest, src) \
	do { \
		bzero((dest), sizeof(*(dest))); \
		(dest)->ia_ic = (src)->ia_ic; \
	} while (0)
d446 1
a446 1
    isapnp_get_resource(struct isapnp_softc *, int, struct isa_attach_args *);
@


1.42.4.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d151 1
a151 1
#include <hppa/include/isa_machdep.h>
@


1.41
log
@correct includes for mvmeppc
@
text
@d125 1
a125 1
#if (__alpha__ + amiga + __i386__ + arc + __wgrisc__ + __powerpc__ + __mvmeppc__ + __hppa__ != 1)
a143 2
#include <powerpc/isa/isa_machdep.h>
#endif
d146 3
@


1.40
log
@fix isadma-less compile, new pnpdevs, space control
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.39 1999/08/09 17:38:45 deraadt Exp $	*/
d125 1
a125 1
#if (__alpha__ + amiga + __i386__ + arc + __wgrisc__ + __powerpc__ + __hppa__ != 1)
d145 3
@


1.39
log
@re-order things to make them clearer
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.38 1999/08/08 19:16:47 deraadt Exp $	*/
d237 2
a238 2
	const char *pnpid;
	const char *driver;
d357 1
a357 1
	vm_size_t	sc_dmalength[8];
@


1.39.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.40 2001/01/29 05:51:00 mickey Exp $	*/
d237 2
a238 2
	const char pnpid[8];
	const char driver[5];
d357 1
a357 1
	bus_size_t 	sc_dmalength[8];
@


1.39.4.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.39.4.1 2001/05/14 22:24:45 niklas Exp $	*/
a143 3
#ifdef __mvmeppc__
#include <mvmeppc/isa/isa_machdep.h>
#else
a144 1
#endif 
@


1.39.4.3
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d410 1
a410 1
char	*isa_intr_typename(int type);
d412 2
a413 2
void	isascan(struct device *parent, void *match);
int	isaprint(void *, const char *);
d424 2
a425 2
static __inline void isapnp_write_reg(struct isapnp_softc *, int, u_char);
static __inline u_char isapnp_read_reg(struct isapnp_softc *, int);
d446 2
a447 2
    isapnp_get_resource(struct isapnp_softc *, int);
char *isapnp_id_to_vendor(char *, const u_char *);
d449 4
a452 4
int isapnp_config(bus_space_tag_t, bus_space_tag_t,
    struct isa_attach_args *);
void isapnp_unconfig(bus_space_tag_t, bus_space_tag_t,
    struct isa_attach_args *);
d454 1
a454 1
void isapnp_isa_attach_hook(struct isa_softc *);
d456 9
a464 9
void isapnp_print_mem(const char *, const struct isapnp_region *);
void isapnp_print_io(const char *, const struct isapnp_region *);
void isapnp_print_irq(const char *, const struct isapnp_pin *);
void isapnp_print_drq(const char *, const struct isapnp_pin *);
void isapnp_print_dep_start(const char *, const u_char);
void isapnp_print_attach(const struct isa_attach_args *);
void isapnp_get_config(struct isapnp_softc *,
	struct isa_attach_args *);
void isapnp_print_config(const struct isa_attach_args *);
@


1.39.4.4
log
@Sync the SMP branch with 3.3
@
text
@d151 1
a151 1
#include <hppa/include/isa_machdep.h>
a181 5
# define ISAPNP_CLONE_SETUP(dest, src) \
	do { \
		bzero((dest), sizeof(*(dest))); \
		(dest)->ia_ic = (src)->ia_ic; \
	} while (0)
d446 1
a446 1
    isapnp_get_resource(struct isapnp_softc *, int, struct isa_attach_args *);
@


1.39.4.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d125 1
a125 1
#if (__alpha__ + amiga + __cats__ + __i386__ + arc + __wgrisc__ + __powerpc__ + __hppa__ + __amd64__ != 1)
a133 3
#ifdef __cats__
#include <cats/isa/isa_machdep.h>
#endif
a152 3
#ifdef __amd64__
#include <amd64/include/isa_machdep.h>
#endif
d163 1
a163 1
#error COMPILING ISAPNP FOR UNSUPPORTED MACHINE, OR MORE THAN ONE.
a444 1
	int r;
@


1.38
log
@prepare for alpha, if it ever happens
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.37 1999/07/05 20:08:37 deraadt Exp $	*/
d300 1
a305 1
#define ia_ioh		ipa_io[0].h
@


1.37
log
@first attempt at isapnp gus support
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.36 1999/06/22 16:28:27 espie Exp $	*/
d158 1
a158 1
#if (__i386__ != 1)
d163 3
@


1.36
log
@amiga and arc are not cpu, but machines.
Hence the #ifdef corresponds to the kernel Makefile.
Hence no __
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.35 1999/06/16 14:38:35 espie Exp $	*/
d197 9
a206 5
	bus_space_tag_t		sc_iot;
	bus_space_tag_t		sc_memt;
#if NISADMA > 0
	bus_dma_tag_t		sc_dmat;
#endif
@


1.35
log
@On the off chance that something that is NOT the kernel includes those
files...
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.34 1999/01/20 18:21:00 niklas Exp $	*/
d125 1
a125 1
#if (__alpha__ + __amiga__ + __i386__ + __arc__ + __wgrisc__ + __powerpc__ + __hppa__ != 1)
d131 1
a131 1
#ifdef __amiga__
d137 1
a137 1
#ifdef __arc__
@


1.34
log
@Use #error instead of C syntax error to report an inconsistency in defines
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.33 1999/01/16 08:28:30 mickey Exp $	*/
d125 1
a125 1
#if (alpha + amiga + i386 + arc + wgrisc + powerpc + hppa != 1)
d128 1
a128 1
#ifdef alpha
d131 1
a131 1
#ifdef amiga
d134 1
a134 1
#ifdef i386
d137 1
a137 1
#ifdef arc
d140 1
a140 1
#ifdef wgrisc
d143 1
a143 1
#ifdef powerpc
d146 1
a146 1
#ifdef hppa
d158 1
a158 1
#if (i386 != 1)
d161 1
a161 1
#if i386
@


1.33
log
@hppa has isa too
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.32 1999/01/07 06:14:48 niklas Exp $	*/
d125 2
a126 2
#if (alpha + amiga + i386 + arc + wgrisc + powerpc +hppa != 1)
ERROR: COMPILING ISA FOR UNSUPPORTED MACHINE, OR MORE THAN ONE.
d128 1
a128 1
#if alpha
d131 1
a131 1
#if amiga
d134 1
a134 1
#if i386
d137 1
a137 1
#if arc
d140 1
a140 1
#if wgrisc
d143 1
a143 1
#if powerpc
d146 1
a146 1
#if hppa
@


1.32
log
@Die, NEWCONFIG
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.31 1998/11/28 01:27:40 deraadt Exp $	*/
d125 1
a125 1
#if (alpha + amiga + i386 + arc + wgrisc + powerpc != 1)
d145 3
@


1.31
log
@need ia_memh fake tag
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.30 1998/08/22 17:58:04 rahnds Exp $	*/
a399 7

#ifdef NEWCONFIG
/*
 * Establish a device as being on the ISA bus (XXX NOT IMPLEMENTED).
 */
void isa_establish __P((struct isadev *, struct device *));
#endif
@


1.30
log
@Powerpc supports isa not just power4e
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.29 1998/07/28 13:26:51 csapuntz Exp $	*/
d296 1
@


1.29
log
@

Disable ISA PNP devices before ISA scan
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.28 1998/04/26 21:02:48 provos Exp $	*/
d125 1
a125 1
#if (alpha + amiga + i386 + arc + wgrisc + power4e != 1)
d143 1
a143 1
#if power4e
@


1.28
log
@update audio from NetBSD, mostly by Lennart Augustsson <augustss@@cs.chalmers.se>
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.27 1998/01/20 18:40:33 niklas Exp $	*/
d446 1
@


1.27
log
@Merge bus_dma support from NetBSD, mostly by Jason Thorpe.  Only i386 uses it
 so far, the other archs gets placeholders for now.  I wrote a compatibility
layer for OpenBSD's old isadma code so we can still use our old
driver sources.  They will however get changed to native bus_dma use,
on a case by case basis.   Oh yes, I almost forgot, I kept our notion
of isadma being a device so DMA-less ISA-busses still work
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.26 1997/12/25 13:18:07 downsj Exp $	*/
d292 1
d376 1
@


1.26
log
@Use functions for DIAGNOSTIC.
@
text
@d1 39
a39 3
/*	$OpenBSD: isavar.h,v 1.25 1997/12/25 12:06:49 downsj Exp $	*/
/*	$NetBSD: isavar.h,v 1.24 1996/10/21 22:41:11 thorpej Exp $	*/
/*	$NetBSD: isapnpvar.h,v 1.5.4.2 1997/10/29 00:40:49 thorpej Exp $	*/
d116 4
d197 3
d238 3
d251 3
a253 1

d323 3
d329 22
d358 4
d363 2
a364 2
	int8_t sc_drq;		/* DRQ usage tracking */
};
d366 2
a367 15
/*
 * Macros for sc_drq access.
 */
#ifdef DIAGNOSTIC
void isa_drq_alloc __P((void *, int));
void isa_drq_free __P((void *, int));
int isa_drq_isfree __P((void *, int));
#else
#define isa_drq_alloc(_sc, _drq)	\
	(((struct isa_softc *)(_sc))->sc_drq |= (1 << (_drq)))
#define isa_drq_free(_sc, _drq)		\
	(((struct isa_softc *)(_sc))->sc_drq &= ~(1 << (_drq)))
#define isa_drq_isfree(_sc, _drq)	\
	!((((struct isa_softc *)(_sc))->sc_drq << (_drq)) & 1)
#endif	/* DIAGNOSTIC */
d404 6
@


1.25
log
@Real DRQ usage tracking.
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.24 1997/12/25 09:22:44 downsj Exp $	*/
d292 5
d303 1
@


1.24
log
@New ISA/ISA PnP configuration infrastructure:

isa_attach_args and isapnp_attach_args have been merged.
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.23 1997/12/21 14:41:27 downsj Exp $	*/
d285 2
d288 10
@


1.23
log
@Obliterate old PnP `code' and outright replace with christos' code.
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.22 1997/10/13 14:46:45 pefo Exp $	*/
d3 30
d74 1
a74 1
 * Definitions for ISA autoconfiguration.
d86 1
a86 1
ERROR: COMPILING FOR UNSUPPORTED MACHINE, OR MORE THAN ONE.
d107 81
d199 1
a199 1
 * ISA driver attach arguments
d202 1
d206 2
d210 38
a247 6
	int	ia_iobase;		/* base i/o address */
	int	ia_iosize;		/* span of ports used */
	int	ia_irq;			/* interrupt request */
	int	ia_drq;			/* DMA request */
	int	ia_maddr;		/* physical i/o mem addr */
	u_int	ia_msize;		/* size of i/o memory */
a248 2

	bus_space_handle_t ia_delaybah;	/* i/o handle for `delay port' */
d323 44
@


1.22
log
@powerpc
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.21 1997/02/13 16:50:15 pefo Exp $	*/
a104 19

	/* XXX need fixes, some are duplicated */
	/* begin isapnp section */
	int id;				/* logical device ID */
	int comp_id;			/* compatible device ID */
	int csn;			/* card selection number */
	int ldn;			/* logical device number */
	struct {
		int num;
		int type;
	} irq[2];
	int drq[2];
	int port[8];
	struct {
		int base;
		int control;
		int range;
	} mem[4];
	/* end isapnp stuff */
a140 6

	/*
	 * This points to the isapnp_softc structure that holds
	 * information of PnP devices on the ISA bus.
	 */
	void *pnpsc;
a148 1
#define		cf_pnpid		cf_loc[6]
@


1.21
log
@riscpc++
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.20 1996/11/29 22:55:04 niklas Exp $	*/
d55 1
a55 1
#if (alpha + amiga + i386 + arc + wgrisc != 1)
d72 3
@


1.20
log
@Missing pieces of new bus.h that CVS lost behind my back
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.19 1996/11/23 21:46:43 kstailey Exp $	*/
d55 1
a55 1
#if (alpha + amiga + i386 + arc + riscpc != 1)
d70 2
a71 2
#if riscpc
#include <riscpc/isa/isa_machdep.h>
@


1.19
log
@added const to second parameter of cfprint_t routines
@
text
@d1 2
a2 2
/*	$OpenBSD: isavar.h,v 1.18 1996/11/12 20:30:40 niklas Exp $	*/
/*	$NetBSD: isavar.h,v 1.23 1996/05/08 23:32:31 thorpej Exp $	*/
d48 1
a48 1
#include <machine/bus.old.h>
d78 3
a80 2
	char	*iba_busname;			/* XXX should be common */
	bus_chipset_tag_t iba_bc;		/* XXX should be common */
d88 3
a90 1
	bus_chipset_tag_t ia_bc;
d101 1
a101 1
	bus_io_handle_t ia_delayioh;	/* i/o handle for `delay port' */
d145 3
a147 1
	bus_chipset_tag_t sc_bc;
d152 1
a152 1
	 * read to provide a 1.25us delay.  This i/o handle
d156 1
a156 1
	bus_io_handle_t   sc_delayioh;
@


1.18
log
@s/bus.h/bus.old.h/ to make the transit to the bus_space bus.h an easy road
possibly taken in small steps
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.17 1996/10/31 01:05:10 niklas Exp $	*/
d188 1
a188 1
int	isaprint __P((void *, char *));
@


1.17
log
@-Wall fixes needed by alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.16 1996/08/15 17:31:42 shawn Exp $	*/
d48 1
a48 1
#include <machine/bus.h>
@


1.16
log
@compatible, not compatiAble
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.15 1996/08/15 17:28:41 shawn Exp $	*/
d185 2
d188 1
a188 1
char	*isa_intr_typename __P((int type));
@


1.15
log
@make use of compatiable device id; delete redundant argument
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.14 1996/08/14 14:36:17 shawn Exp $	*/
d103 1
a103 1
	int comp_id;			/* compatiable device ID */
@


1.14
log
@rudimentary plug-and-play support, see pnp(4)
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.13 1996/06/22 23:18:43 pefo Exp $	*/
d103 1
@


1.13
log
@arch/arc have isa bus.
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.12 1996/05/26 00:27:24 deraadt Exp $	*/
d99 18
d151 6
d165 1
@


1.12
log
@sync 0521
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.11 1996/05/12 08:45:38 pefo Exp $	*/
d55 1
a55 1
#if (alpha + amiga + i386 + pica != 1)
d67 5
a71 2
#if pica
#include <pica/isa/isa_machdep.h>
@


1.11
log
@pull in pica machdep isa header if pica
@
text
@d1 2
a2 2
/*	$OpenBSD: isavar.h,v 1.8 1996/04/21 22:24:16 deraadt Exp $	*/
/*	$NetBSD: isavar.h,v 1.22 1996/05/05 01:14:14 thorpej Exp $	*/
d125 1
a125 1
	 * read to provide a 2.5us delay.  This i/o handle
@


1.10
log
@map delay port
@
text
@d55 1
a55 1
#if (alpha + amiga + i386 != 1)
d66 3
@


1.9
log
@Bring forward the Amiga ISA support, and resolve a conflict with if_ed
@
text
@d2 1
a2 1
/*	$NetBSD: isavar.h,v 1.21 1996/04/11 22:20:50 cgd Exp $	*/
d91 2
d119 8
@


1.8
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.7 1996/04/18 23:47:43 niklas Exp $	*/
d55 1
a55 1
#if (alpha + i386 != 1)
d60 3
@


1.7
log
@NetBSD 960317 merge
@
text
@d1 2
a2 2
/*	$OpenBSD: isavar.h,v 1.6 1996/03/20 01:00:55 mickey Exp $	*/
/*	$NetBSD: isavar.h,v 1.20 1996/03/16 02:00:43 cgd Exp $	*/
d50 15
d71 1
d78 2
a79 1
	bus_chipset_tag_t ia_bc;	/* bus chipset tag */
d112 2
a113 1
	bus_chipset_tag_t sc_bc;	/* bus chipset tag */
a140 3
void	*isa_intr_establish __P((int intr, int type, int level,
	    int (*ih_fun)(void *), void *ih_arg, char *));
void	isa_intr_disestablish __P((void *handler));
@


1.6
log
@Fix back wrong patches.
@
text
@d1 2
a2 2
/*	$OpenBSD: isavar.h,v 1.5 1996/03/19 21:10:23 mickey Exp $	*/
/*	$NetBSD: isavar.h,v 1.17 1995/12/24 02:31:38 mycroft Exp $      */
d40 3
d48 9
d62 2
d94 2
d135 1
a135 6
/*
 * software conventions
 */
typedef enum { BUS_ISA, BUS_EISA } isa_type;

extern isa_type isa_bustype;	/* type of bus; XXX should be in softc */
@


1.5
log
@Merging w/ NetBSD 021796.
speaker upgraded to the current.
some changes to the VM stuff (ie kern_thread.c added and so).
@
text
@d1 1
a1 1
/*	$OpenBSD: isavar.h,v 1.4 1996/03/08 16:43:07 niklas Exp $	*/
d108 1
a108 1
	    int (*ih_fun)(void *), void *ih_arg));
@


1.4
log
@From NetBSD: merge of 960217
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d108 1
a108 1
	    int (*ih_fun)(void *), void *ih_arg, char *ih_what));
@


1.3
log
@Pass device name to interrupt establish routines so it can be recorded in
the device interrupt chain structures (isa, pci)

Move interrupt chain structure definition to <machine/psl.h> so vmstat can
get at it (i386)

Remove hack to count interrupts the old way (i386)
@
text
@d1 2
a2 1
/*	$NetBSD: isavar.h,v 1.16 1995/06/07 06:45:44 cgd Exp $	*/
@


1.2
log
@from netbsd:
The IST_* and IPL_* constants are not bus-specific; don't treat them as such.
Change splimp -> splnet in Ethernet, ARCnet, and FDDI drivers.
@
text
@d107 1
a107 1
	    int (*ih_fun)(void *), void *ih_arg));
@


1.1
log
@Initial revision
@
text
@a104 16
typedef enum {
	ISA_IST_NONE = 0,	/* not yet assigned */
	ISA_IST_PULSE,		/* pulsed */
	ISA_IST_EDGE,		/* edge-triggered */
	ISA_IST_LEVEL		/* level-triggered */
} isa_intrtype;

/* ISA interrupt levels; system interrupt levels for ISA bus use */
typedef enum {
	ISA_IPL_NONE,		/* block only the interrupt's IRQ*/
	ISA_IPL_BIO,		/* block I/O interrupts */
	ISA_IPL_NET,		/* network */
	ISA_IPL_TTY,		/* terminal */
	ISA_IPL_CLOCK,		/* clock */
} isa_intrlevel;

d106 2
a107 2
void	*isa_intr_establish __P((int intr, isa_intrtype type,
	    isa_intrlevel level, int (*ih_fun)(void *), void *ih_arg));
d109 1
a109 1
char	*isa_intr_typename __P((isa_intrtype type));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
