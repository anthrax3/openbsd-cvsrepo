head	1.16;
access;
symbols
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.4
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.13.0.6
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.22
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.20
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.18
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.16
	OPENBSD_5_0:1.12.0.14
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.12
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.10
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.6
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.8
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.4
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.2
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.11.0.6
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.4
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.2
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.6
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.10
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.6
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.16
date	2015.11.24.17.11.39;	author mpi;	state Exp;
branches;
next	1.15;
commitid	5gdEnqVoJuTuwdTu;

1.15
date	2014.11.24.02.03.37;	author brad;	state Exp;
branches;
next	1.14;
commitid	Wmnzf8bGQILqXRTG;

1.14
date	2014.08.11.12.45.45;	author mpi;	state Exp;
branches;
next	1.13;
commitid	nYggAidK85QbUFh2;

1.13
date	2013.08.07.01.06.32;	author bluhm;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.26.05.42.16;	author ray;	state Exp;
branches;
next	1.11;

1.11
date	2006.10.20.17.02.24;	author brad;	state Exp;
branches;
next	1.10;

1.10
date	2006.10.20.16.54.01;	author brad;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.21.18.16.40;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.22.23.26.05;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	2005.06.08.17.03.00;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.12.06.35.11;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.12.05.37.00;	author aaron;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	99.03.26.06.34.27;	author fgsch;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	98.11.06.06.32.15;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	98.09.22.06.33.19;	author fgsch;	state Exp;
branches;
next	;

1.3.6.1
date	2001.05.14.22.24.44;	author niklas;	state Exp;
branches;
next	1.3.6.2;

1.3.6.2
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	1.3.6.3;

1.3.6.3
date	2004.06.05.23.12.46;	author niklas;	state Exp;
branches;
next	;

1.4.6.1
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@You only need <net/if_dl.h> if you're using LLADDR() or a sockaddr_dl.
@
text
@/*	$OpenBSD: if_ne_isapnp.c,v 1.15 2014/11/24 02:03:37 brad Exp $	*/
/*	$NetBSD: if_ne_isapnp.c,v 1.7 1998/07/23 19:30:45 christos Exp $	*/

/*-
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,
 * NASA Ames Research Center and Matt Thomas of the 3am Software Foundry.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include "bpfilter.h"

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mbuf.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <sys/errno.h>
#include <sys/syslog.h>
#include <sys/selinfo.h>
#include <sys/device.h>

#include <net/if.h>
#include <net/if_media.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>

#if NBPFILTER > 0
#include <net/bpf.h>
#endif

#include <machine/intr.h>
#include <machine/bus.h>

#include <dev/ic/dp8390reg.h>
#include <dev/ic/dp8390var.h>

#include <dev/ic/ne2000reg.h>
#include <dev/ic/ne2000var.h>

#include <dev/ic/rtl80x9reg.h>
#include <dev/ic/rtl80x9var.h>

#include <dev/isa/isavar.h>

#include <dev/isa/isapnpreg.h>

static int ne_isapnp_match(struct device *, void *, void *);
static void ne_isapnp_attach(struct device *, struct device *, void *);

struct ne_isapnp_softc {
	struct	ne2000_softc sc_ne2000;		/* real "ne2000" softc */

	/* ISA-specific goo. */
	void	*sc_ih;				/* interrupt cookie */
};

struct cfattach ne_isapnp_ca = {
	sizeof(struct ne_isapnp_softc), ne_isapnp_match, ne_isapnp_attach
};

static int
ne_isapnp_match(struct device *parent, void *match, void *aux)
{
	return (1);
}

static void
ne_isapnp_attach(struct device *parent, struct device *self, void *aux)
{
	struct ne_isapnp_softc * const isc = (struct ne_isapnp_softc *)self;
	struct ne2000_softc * const nsc = &isc->sc_ne2000;
	struct dp8390_softc * const dsc = &nsc->sc_dp8390;
	struct isa_attach_args * const ipa = aux;
	bus_space_tag_t nict;
	bus_space_handle_t nich;
	bus_space_tag_t asict;
	bus_space_handle_t asich;
	const char *typestr;
	int netype;

	nict = ipa->ia_iot;
	nich = ipa->ipa_io[0].h;

	asict = nict;

	if (bus_space_subregion(nict, nich, NE2000_ASIC_OFFSET,
	    NE2000_ASIC_NPORTS, &asich)) {
		printf("%s: can't subregion i/o space\n", dsc->sc_dev.dv_xname);
		return;
	}

	dsc->sc_regt = nict;
	dsc->sc_regh = nich;

	nsc->sc_asict = asict;
	nsc->sc_asich = asich;

	/*
	 * Detect it again, so we can print some information about the
	 * interface.
	 */
	netype = ne2000_detect(nsc);
	switch (netype) {
	case NE2000_TYPE_NE1000:
		typestr = "NE1000";
		break;

	case NE2000_TYPE_NE2000:
		typestr = "NE2000";
		/*
		 * Check for a Realtek 8019.
		 */
		bus_space_write_1(nict, nich, ED_P0_CR,
		    ED_CR_PAGE_0 | ED_CR_STP);
		if (bus_space_read_1(nict, nich, NERTL_RTL0_8019ID0) ==
								RTL0_8019ID0 &&
		    bus_space_read_1(nict, nich, NERTL_RTL0_8019ID1) ==
								RTL0_8019ID1) {
			typestr = "NE2000 (RTL8019)";
			dsc->sc_mediachange = rtl80x9_mediachange;
			dsc->sc_mediastatus = rtl80x9_mediastatus;
			dsc->init_card = rtl80x9_init_card;
			dsc->sc_media_init = rtl80x9_media_init;
		}
		break;

	default:
		printf(": where did the card go?!\n");
		return;
	}

	printf(": %s", typestr);

	/* This interface is always enabled. */
	dsc->sc_enabled = 1;

	/*
	 * Do generic NE2000 attach.  This will read the station address
	 * from the EEPROM.
	 */
	ne2000_attach(nsc, NULL);

	/* Establish the interrupt handler. */
	isc->sc_ih = isa_intr_establish(ipa->ia_ic, ipa->ipa_irq[0].num,
	    IST_EDGE, IPL_NET, dp8390_intr, dsc,
	    dsc->sc_dev.dv_xname);
	if (isc->sc_ih == NULL)
		printf(": couldn't establish interrupt handler\n");
}
@


1.15
log
@use the correct capitalization for Realtek.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.14 2014/08/11 12:45:45 mpi Exp $	*/
a46 1
#include <net/if_dl.h>
@


1.14
log
@Fewer <netinet/in_systm.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.13 2013/08/07 01:06:32 bluhm Exp $	*/
d137 1
a137 1
		 * Check for a RealTek 8019.
@


1.13
log
@Most network drivers include netinet/in_var.h, but apparently they
don't have to.  Just remove these include lines.
Compiled on amd64 i386 sparc64; OK henning@@ mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.12 2008/06/26 05:42:16 ray Exp $	*/
a49 1
#ifdef INET
a50 2
#include <netinet/in_systm.h>
#include <netinet/ip.h>
a51 1
#endif
@


1.12
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.11 2006/10/20 17:02:24 brad Exp $	*/
a52 1
#include <netinet/in_var.h>
@


1.11
log
@remove some NetBSD code.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.10 2006/10/20 16:54:01 brad Exp $	*/
a19 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.10
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.9 2005/11/21 18:16:40 millert Exp $	*/
a54 3
#ifdef __NetBSD__
#include <net/if_ether.h>
#endif
a61 3
#ifdef __NetBSD__
#include <netinet/if_inarp.h>
#else
a63 1
#endif
a83 4
#ifdef __NetBSD__
#include <dev/isa/isapnpvar.h>
#include <dev/isa/isapnpdevs.h>
#endif
@


1.9
log
@Move contents of sys/select.h to sys/selinfo.h in preparation for a
userland-visible sys/select.h.  Consistent with what Net and Free do.
OK deraadt@@, tested with full ports build by naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.8 2005/10/22 23:26:05 brad Exp $	*/
d111 1
a111 3
ne_isapnp_match(parent, match, aux)
	struct device *parent;
	void *match, *aux;
d113 1
a113 1
	return 1;
d117 1
a117 4
ne_isapnp_attach(
	struct device *parent,
	struct device *self,
	void *aux)
@


1.8
log
@shorten ne(4) dmesg entries from 2-3 lines to 1.

Thanks to Han Boetes for testing on an isapnp card.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.7 2005/06/08 17:03:00 henning Exp $	*/
d50 1
a50 1
#include <sys/select.h>
@


1.7
log
@remove netns crud.
some drivers actually had hooks for SIOCSIFADDR, most just useless includes
"looks good" deraadt miod brad
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.6 2004/05/12 06:35:11 tedu Exp $	*/
a134 2
	printf("\n");

d182 1
a182 1
		printf("%s: where did the card go?!\n", dsc->sc_dev.dv_xname);
d186 1
a186 1
	printf("%s: %s Ethernet\n", dsc->sc_dev.dv_xname, typestr);
d202 1
a202 2
		printf("%s: couldn't establish interrupt handler\n",
		    dsc->sc_dev.dv_xname);
@


1.6
log
@network drivers don't need to include bpfdesc.h
ok krw@@ canacar@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.5 2002/03/14 01:26:56 millert Exp $	*/
a69 5
#endif

#ifdef NS
#include <netns/ns.h>
#include <netns/ns_if.h>
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.4 2001/03/12 05:37:00 aaron Exp $	*/
a78 1
#include <net/bpfdesc.h>
@


1.4
log
@Adjust the way that media is initialized on DP8390-compatibles; from NetBSD.
The dp8390_softc now has media_init and media_fini function pointers that
do the work. fgsch@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.3 1999/03/26 06:34:27 fgsch Exp $	*/
d102 2
a103 2
static int ne_isapnp_match __P((struct device *, void *, void *));
static void ne_isapnp_attach __P((struct device *, struct device *, void *));
@


1.4.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.4 2001/03/12 05:37:00 aaron Exp $	*/
d102 2
a103 2
static int ne_isapnp_match(struct device *, void *, void *);
static void ne_isapnp_attach(struct device *, struct device *, void *);
@


1.3
log
@Add support for some 100Mbit PCMCIA cards.
Change the ne2000_detect parm list.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.2 1998/11/06 06:32:15 fgsch Exp $	*/
a137 3
	void (*npp_init_media) __P((struct dp8390_softc *, int **,
	    int *, int *));
	int *media, nmedia, defmedia;
a142 4
	npp_init_media = NULL;
	media = NULL;
	nmedia = defmedia = 0;

a181 1
			npp_init_media = rtl80x9_init_media;
d185 1
a195 4
	/* Initialize media, if we have it. */
	if (npp_init_media != NULL)
		(*npp_init_media)(dsc, &media, &nmedia, &defmedia);

d203 1
a203 1
	ne2000_attach(nsc, NULL, media, nmedia, defmedia);
@


1.3.6.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.4 2001/03/12 05:37:00 aaron Exp $	*/
d138 3
d146 4
d189 1
a192 1
			dsc->sc_media_init = rtl80x9_media_init;
d203 4
d214 1
a214 1
	ne2000_attach(nsc, NULL);
@


1.3.6.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d102 2
a103 2
static int ne_isapnp_match(struct device *, void *, void *);
static void ne_isapnp_attach(struct device *, struct device *, void *);
@


1.3.6.3
log
@Merge with the trunk
@
text
@d79 1
@


1.2
log
@Support for RealTek 8019 and 8029 NE2000-compatible network interfaces.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ne_isapnp.c,v 1.1 1998/09/22 06:33:19 fgsch Exp $	*/
d171 1
a171 1
	netype = ne2000_detect(nict, nich, asict, asich);
@


1.1
log
@Replace the ed driver.
ec is used for 3c503 cards, we for SMC/WD 80x3 series and ne for ne[12]00.
This also adds ne2k pnp support.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d91 3
d138 3
d142 1
d146 4
d171 2
a172 1
	switch (ne2000_detect(nict, nich, asict, asich)) {
d179 15
d203 4
d214 1
a214 1
	ne2000_attach(nsc, NULL);
@

