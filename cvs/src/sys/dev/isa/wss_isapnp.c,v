head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.24
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.22
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.18
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.16
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.14
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.12
	OPENBSD_5_0:1.8.0.10
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.8
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.6
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.7.0.4
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.26
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.24
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.22
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.20
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.18
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.16
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.14
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.12
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.10
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.14
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.12
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.10
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.4
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4;
locks; strict;
comment	@ * @;


1.9
date	2014.09.14.14.17.25;	author jsg;	state Exp;
branches;
next	1.8;
commitid	uzzBR7hz9ncd4O6G;

1.8
date	2009.06.21.00.38.22;	author martynas;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.26.05.42.16;	author ray;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.57;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.07.19.19.47.05;	author deraadt;	state Exp;
branches
	1.5.4.1
	1.5.14.1;
next	1.4;

1.4
date	99.03.08.11.05.22;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.03.08.04.15.42;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.03.04.22.14.36;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.03.02.08.12.45;	author deraadt;	state Exp;
branches;
next	;

1.5.4.1
date	2002.03.28.12.11.36;	author niklas;	state Exp;
branches;
next	;

1.5.14.1
date	2002.06.11.03.42.22;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@/*	$OpenBSD: wss_isapnp.c,v 1.8 2009/06/21 00:38:22 martynas Exp $	*/
/*	$NetBSD: wss_isapnp.c,v 1.5 1998/11/25 22:17:07 augustss Exp $	*/

/*
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (augustss@@netbsd.org).
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/errno.h>
#include <sys/ioctl.h>
#include <sys/syslog.h>
#include <sys/device.h>

#include <machine/bus.h>

#include <sys/audioio.h>
#include <dev/audio_if.h>

#include <dev/isa/isavar.h>
#include <dev/isa/isadmavar.h>

#include <dev/isa/isapnpreg.h>

#include <dev/isa/ad1848var.h>
#include <dev/ic/ad1848reg.h>
#include <dev/isa/madreg.h>
#include <dev/isa/wssreg.h>
#include <dev/isa/wssvar.h>

int	wss_isapnp_match(struct device *, void *, void *);
void	wss_isapnp_attach(struct device *, struct device *, void *);

struct cfattach wss_isapnp_ca = {
	sizeof(struct wss_softc), wss_isapnp_match, wss_isapnp_attach
};


/*
 * Probe / attach routines.
 */

/*
 * Probe for the WSS hardware.
 */
int
wss_isapnp_match(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	return 1;
}

/*
 * Attach hardware to driver, attach hardware driver to audio
 * pseudo-device driver.
 */
void
wss_isapnp_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct isapnp_softc *pnp = (struct isapnp_softc *)parent;
	struct wss_softc *sc = (struct wss_softc *)self;
	struct ad1848_softc *ac = &sc->sc_ad1848;
	struct isa_attach_args *ipa = aux;

	/* probably broken */
	isapnp_write_reg(pnp, ISAPNP_CONFIG_CONTROL, 0x02);

	sc->sc_iot = ipa->ia_iot;
	sc->sc_ioh = ipa->ipa_io[0].h;
	sc->mad_chip_type = MAD_NONE;

/* Set up AD1848 I/O handle. */ 
	ac->sc_iot = sc->sc_iot;
	ac->sc_isa = parent->dv_parent; 
	ac->sc_ioh = sc->sc_ioh;
	ac->mode = 2;
	ac->sc_iooffs = 0;

	sc->sc_ic  = ipa->ia_ic;
	sc->wss_irq = ipa->ipa_irq[0].num;
	sc->wss_drq = ipa->ipa_drq[0].num;
	sc->wss_recdrq = ipa->ipa_ndrq > 1 ? ipa->ipa_drq[1].num :
	    ipa->ipa_drq[0].num;

	if (ad1848_probe(&sc->sc_ad1848)==0) {
		printf("%s: probe failed\n", ac->sc_dev.dv_xname);
		return;
	}

	wssattach(sc);
}

@


1.8
log
@fix rcs ids.  ok sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a38 1
#include <sys/proc.h>
@


1.7
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD; wss_isapnp.c,v1.0 1999/1/5 14:08:57 mike Exp $	*/ 
@


1.6
log
@First round of __P removal in sys
@
text
@a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.5
log
@further fixes for strange wss isapnp cards; apollo@@slcnet.net
@
text
@d64 2
a65 2
int	wss_isapnp_match __P((struct device *, void *, void *));
void	wss_isapnp_attach __P((struct device *, struct device *, void *));
@


1.5.14.1
log
@Sync UBC branch to -current
@
text
@d64 2
a65 2
int	wss_isapnp_match(struct device *, void *, void *);
void	wss_isapnp_attach(struct device *, struct device *, void *);
@


1.5.4.1
log
@Merge in -current from about a week ago
@
text
@d64 2
a65 2
int	wss_isapnp_match(struct device *, void *, void *);
void	wss_isapnp_attach(struct device *, struct device *, void *);
@


1.4
log
@remove extra prints our isapnp subsystem does earlier
@
text
@d102 1
a102 2
	if (bus_space_read_1(ipa->ia_iot, ipa->ipa_io[0].h, 0x0) == 0x01)
		isapnp_write_reg(pnp, ISAPNP_CONFIG_CONTROL, 0x02);
@


1.3
log
@cleanup
@
text
@a100 2
	printf("\n");
	
a125 3

	printf("%s: %s %s", ac->sc_dev.dv_xname, ipa->ipa_devident,
	    ipa->ipa_devclass);
@


1.2
log
@simplify cs4232 handling; apollo@@slcnet.net
@
text
@d120 3
a122 3
	sc->wss_drq = ipa->ipa_drq[0].num; /* I DONT NEED TO DO THIS */
	sc->wss_recdrq = ipa->ipa_drq[1].num;
	/* ipa->ipa_ndrq > 1 ? ipa->ipa_drq[1].num : ipa->ipa_drq[0].num; */
d124 2
a125 2
	if(ad1848_probe(&sc->sc_ad1848)==0) {
		printf("%s: probe failed\n",ac->sc_dev.dv_xname);
d130 1
a130 1
		ipa->ipa_devclass);
@


1.1
log
@wss_isapnp; work by apollo@@slcnet.net..
@
text
@a86 2


d96 1
d103 4
d108 2
a109 2
        sc->sc_ioh = ipa->ipa_io[0].h;
        sc->mad_chip_type = MAD_NONE;
a117 1

d122 1
a122 4
	/*
		ipa->ipa_ndrq > 1 ? ipa->ipa_drq[1].num : ipa->ipa_drq[0].num; 
	*/

d124 1
a124 2
	if(ad1848_probe(&sc->sc_ad1848)==0)
	{
a126 1

d130 1
a130 1
	       ipa->ipa_devclass);
@

