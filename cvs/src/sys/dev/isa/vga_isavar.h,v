head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.60
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.50
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.58
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.56
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.54
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.52
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.48
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.46
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.44
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.42
	OPENBSD_5_0:1.4.0.40
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.38
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.36
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.32
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.34
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.30
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.28
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.26
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.24
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.22
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.20
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.18
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.14
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.12
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.10
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.15.20.17.38;	author aaron;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	97.11.06.12.26.55;	author niklas;	state Exp;
branches
	1.2.10.1;
next	1.1;

1.1
date	97.01.24.19.57.30;	author niklas;	state Exp;
branches;
next	;

1.2.10.1
date	2001.05.14.22.24.53;	author niklas;	state Exp;
branches;
next	1.2.10.2;

1.2.10.2
date	2002.03.28.12.11.36;	author niklas;	state Exp;
branches;
next	;

1.3.6.1
date	2002.06.11.03.42.22;	author art;	state Exp;
branches;
next	;


desc
@@


1.4
log
@First round of __P removal in sys
@
text
@/* $OpenBSD: vga_isavar.h,v 1.3 2000/11/15 20:17:38 aaron Exp $ */
/* $NetBSD: vga_isavar.h,v 1.1 1998/03/22 15:14:36 drochner Exp $ */

/*
 * Copyright (c) 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

int	vga_isa_cnattach(bus_space_tag_t, bus_space_tag_t);
@


1.3
log
@Updated VGA driver; from NetBSD. Needed for wscons on i386 and alpha. These
files could probably be updated even a bit further (they are from mid-summer).

In addition, I've added support for console scrollback, somewhat inspired by
Linux's vgacon driver. Basically, instead of allocating our own buffer and
doing lots of copies, we take advantage of Video RAM and just modify the VGA
display origin register as appropriate. This approach has a few advantages:
simple to implement, no wasted KVM, it's fast, and after a boot you can now
scroll back all the way to the BIOS messages (assuming your msgbuf is of a
typical length :). Disadvantages are that the VRAM buffer is relatively
small (only 32k) and we do not support raster devices through this method.
(thanks to mickey@@ for pointing this out).

The code for this is fairly unobtrusive, so should we come up with a better
approach to console scrollback at a later time (i.e., even more platform
independent) it should be easy to revert this.

We're one step further in porting nice features of PCVT over to wscons.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d31 1
a31 1
int	vga_isa_cnattach __P((bus_space_tag_t, bus_space_tag_t));
@


1.3.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: vga_isavar.h,v 1.3 2000/11/15 20:17:38 aaron Exp $ */
d31 1
a31 1
int	vga_isa_cnattach(bus_space_tag_t, bus_space_tag_t);
@


1.2
log
@Add some missing things for the MI vga driver.  Move wscons to an MI place as
well.  $OpenBSD$ tagging
@
text
@d1 2
a2 2
/*	$OpenBSD: vga_isavar.h,v 1.2 1996/11/23 06:06:45 cgd Exp $	*/
/*	$NetBSD: vga_isavar.h,v 1.2 1996/11/23 06:06:45 cgd Exp $	*/
d31 1
a31 2
int	vga_isa_console_match __P((bus_space_tag_t, bus_space_tag_t));
void	vga_isa_console_attach __P((bus_space_tag_t, bus_space_tag_t));
@


1.2.10.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 2
/* $OpenBSD: vga_isavar.h,v 1.3 2000/11/15 20:17:38 aaron Exp $ */
/* $NetBSD: vga_isavar.h,v 1.1 1998/03/22 15:14:36 drochner Exp $ */
d31 2
a32 1
int	vga_isa_cnattach __P((bus_space_tag_t, bus_space_tag_t));
@


1.2.10.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d31 1
a31 1
int	vga_isa_cnattach(bus_space_tag_t, bus_space_tag_t);
@


1.1
log
@Sync with NetBSD 961207
@
text
@d1 1
@
