head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.10
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.8
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.20
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.18
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.14
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.12
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.10
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.8
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.30
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.28
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.26
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.24
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.22
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.20
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.18
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.16
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.14
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.12
	OPENBSD_2_8:1.3.0.10
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.6
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2014.09.14.14.17.25;	author jsg;	state Exp;
branches;
next	1.6;
commitid	uzzBR7hz9ncd4O6G;

1.6
date	2010.06.26.23.24.44;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2009.03.29.21.53.52;	author sthen;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.01.07.06.14.47;	author niklas;	state Exp;
branches
	1.3.6.1
	1.3.16.1;
next	1.2;

1.2
date	98.10.05.07.34.43;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	98.09.11.07.42.58;	author fgsch;	state Exp;
branches;
next	;

1.3.6.1
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	;

1.3.16.1
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@/*	$OpenBSD: aic_isa.c,v 1.6 2010/06/26 23:24:44 guenther Exp $	*/
/*	$NetBSD: aic6360.c,v 1.52 1996/12/10 21:27:51 thorpej Exp $	*/

/*
 * Copyright (c) 1994, 1995, 1996 Charles Hannum.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Charles M. Hannum.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * Copyright (c) 1994 Jarle Greipsland
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Acknowledgements: Many of the algorithms used in this driver are
 * inspired by the work of Julian Elischer (julian@@tfs.com) and
 * Charles Hannum (mycroft@@duality.gnu.ai.mit.edu).  Thanks a million!
 */

#include <sys/types.h>
#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/errno.h>
#include <sys/ioctl.h>
#include <sys/device.h>
#include <sys/buf.h>
#include <sys/queue.h>

#include <machine/bus.h>
#include <machine/intr.h>

#include <scsi/scsi_all.h>
#include <scsi/scsi_message.h>
#include <scsi/scsiconf.h>

#include <dev/isa/isavar.h>

#include <dev/ic/aic6360reg.h>
#include <dev/ic/aic6360var.h>

int	aic_isa_probe(struct device *, void *, void *);
void	aic_isa_attach(struct device *, struct device *, void *);

struct cfattach aic_isa_ca = {
	sizeof(struct aic_softc), aic_isa_probe, aic_isa_attach
};

/*
 * INITIALIZATION ROUTINES (probe, attach ++)
 */

/*
 * aicprobe: probe for AIC6360 SCSI-controller
 * returns non-zero value if a controller is found.
 */
int
aic_isa_probe(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct isa_attach_args *ia = aux;
	bus_space_tag_t iot = ia->ia_iot;
	bus_space_handle_t ioh;
	int rv;

	if (bus_space_map(iot, ia->ia_iobase, AIC_NPORTS, 0, &ioh))
		return (0);

	AIC_TRACE(("aic: probing for aic-chip at port 0x%x\n", ia->ia_iobase));
	rv = aic_find(iot, ioh);

	bus_space_unmap(iot, ioh, AIC_NPORTS);

	if (rv) {
		ia->ia_msize = 0;
		ia->ia_iosize = AIC_NPORTS;
	}
	return (rv);
}

/*
 * Attach the AIC6360, fill out some high and low level data structures
 */
void
aic_isa_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct isa_attach_args *ia = aux;
	bus_space_tag_t iot = ia->ia_iot;
	bus_space_handle_t ioh;
	struct aic_softc *sc = (void *)self;

	if (bus_space_map(iot, ia->ia_iobase, AIC_NPORTS, 0, &ioh))
		panic("%s: can't map i/o-ports", sc->sc_dev.dv_xname);

	sc->sc_iot = iot;
	sc->sc_ioh = ioh;

	printf("\n");

	sc->sc_ih = isa_intr_establish(ia->ia_ic, ia->ia_irq, IST_EDGE,
	    IPL_BIO, aicintr, sc, sc->sc_dev.dv_xname);

	aicattach(sc);
}

@


1.6
log
@Don't #include <sys/user.h> into files that don't need the stuff
it defines.  In some cases, this means pulling in uvm.h or pcb.h
instead, but most of the inclusions were just noise.  Tested on
alpha, amd64, armish, hppa, i386, macpcc, sgi, sparc64, and vax,
mostly by krw and naddy.
ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: aic_isa.c,v 1.5 2009/03/29 21:53:52 sthen Exp $	*/
a61 1
#include <sys/proc.h>
@


1.5
log
@make various strings ("can't map mem space" and similar) more consistent
between instances, saving space in the kernel. feedback from many (some
incorporated, some left for future work).

ok deraadt, kettenis, "why not" miod.
@
text
@d1 1
a1 1
/*	$OpenBSD: aic_isa.c,v 1.4 2002/03/14 01:26:56 millert Exp $	*/
a62 1
#include <sys/user.h>
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: aic_isa.c,v 1.3 1999/01/07 06:14:47 niklas Exp $	*/
d132 1
a132 1
		panic("%s: could not map I/O-ports", sc->sc_dev.dv_xname);
@


1.3
log
@Die, NEWCONFIG
@
text
@d1 1
a1 1
/*	$OpenBSD: aic_isa.c,v 1.2 1998/10/05 07:34:43 fgsch Exp $	*/
d78 2
a79 2
int	aic_isa_probe __P((struct device *, void *, void *));
void	aic_isa_attach __P((struct device *, struct device *, void *));
@


1.3.16.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: aic_isa.c,v 1.3 1999/01/07 06:14:47 niklas Exp $	*/
d78 2
a79 2
int	aic_isa_probe(struct device *, void *, void *);
void	aic_isa_attach(struct device *, struct device *, void *);
@


1.3.6.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d78 2
a79 2
int	aic_isa_probe(struct device *, void *, void *);
void	aic_isa_attach(struct device *, struct device *, void *);
@


1.2
log
@Remove the bus_space_unmap from aic_find.
Call isa_intr_establish before aicattach.
@
text
@d1 1
a1 1
/*	$OpenBSD: aic_isa.c,v 1.1 1998/09/11 07:42:58 fgsch Exp $	*/
a102 5
#ifdef NEWCONFIG
	if (ia->ia_iobase == IOBASEUNK)
		return (0);
#endif

a110 22
#ifdef NEWCONFIG
	if (ia->ia_irq != IRQUNK) {
		if (ia->ia_irq != sc->sc_irq) {
			printf("%s: irq mismatch; ", sc->sc_dev.dv_xname);
			printf("kernel configured %d != board configured %d\n",
			    ia->ia_irq, sc->sc_irq);
			return (0);
		}
	} else
		ia->ia_irq = sc->sc_irq;

	if (ia->ia_drq != DRQUNK) {
		if (ia->ia_drq != sc->sc_drq) {
			printf("%s: drq mismatch; ", sc->sc_dev.dv_xname);
			printf("kernel configured %d != board configured %d\n",
			    ia->ia_drq, sc->sc_drq);
			return (0);
		}
	} else
		ia->ia_drq = sc->sc_drq;
#endif

a137 4

#ifdef NEWCONFIG
	isa_establish(&sc->sc_id, &sc->sc_dev);
#endif
@


1.1
log
@aic routines for ISA.
@
text
@d1 1
a1 1
/*	$OpenBSD: aic6360.c,v 1.15 1997/07/30 13:03:50 niklas Exp $ */
d101 1
d112 1
a112 2
	if (aic_find(iot, ioh) != 0)
		return (0);
d138 5
a142 3
	ia->ia_msize = 0;
	ia->ia_iosize = AIC_NPORTS;
	return (1);
a169 2
	aicattach(sc);

d172 2
@

