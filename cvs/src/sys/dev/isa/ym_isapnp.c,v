head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.8
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.20
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.18
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.14
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.12
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.10
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.8
	OPENBSD_5_0:1.9.0.6
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.4
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.2
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.8.0.32
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.34
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.30
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.28
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.26
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.24
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.22
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.20
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.18
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.16
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.14
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.12
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.10
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.8
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.14
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.12
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.10
	OPENBSD_2_8:1.7.0.8
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.6
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.4
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3;
locks; strict;
comment	@ * @;


1.10
date	2014.09.14.14.17.25;	author jsg;	state Exp;
branches;
next	1.9;
commitid	uzzBR7hz9ncd4O6G;

1.9
date	2010.06.30.11.21.35;	author jakemsr;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.01.26.57;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.08.05.05.32.41;	author deraadt;	state Exp;
branches
	1.7.4.1
	1.7.14.1;
next	1.6;

1.6
date	99.07.21.12.39.22;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	99.07.20.16.36.06;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	99.03.08.11.16.49;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	98.08.04.12.01.39;	author csapuntz;	state Exp;
branches;
next	1.2;

1.2
date	98.06.02.14.49.09;	author csapuntz;	state Exp;
branches;
next	1.1;

1.1
date	98.05.08.18.37.25;	author csapuntz;	state Exp;
branches;
next	;

1.7.4.1
date	2002.03.28.12.11.36;	author niklas;	state Exp;
branches;
next	;

1.7.14.1
date	2002.06.11.03.42.22;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@/*	$OpenBSD: ym_isapnp.c,v 1.9 2010/06/30 11:21:35 jakemsr Exp $ */


/*
 * Copyright (c) 1998 Constantine Sapuntzakis. All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  Driver for the Yamaha OPL3-SA3 chipset. This is found on many laptops
 *  and Pentium (II) motherboards.
 */

#include "midi.h"

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/errno.h>
#include <sys/ioctl.h>
#include <sys/syslog.h>
#include <sys/device.h>

#include <sys/audioio.h>
#include <dev/audio_if.h>
#include <dev/midi_if.h>

#include <dev/isa/isavar.h>
#include <dev/isa/isadmavar.h>

#include <dev/ic/ad1848reg.h>
#include <dev/isa/ad1848var.h>

#include <dev/ic/cs4231reg.h>
#include <dev/isa/cs4231var.h>
#include <dev/ic/mpuvar.h>

#include <dev/isa/wssreg.h>
#include <dev/isa/ymvar.h>

int	ym_isapnp_match(struct device *, void *, void *);
void	ym_isapnp_attach(struct device *, struct device *, void *);

struct cfattach ym_isapnp_ca = {
	sizeof(struct ym_softc), ym_isapnp_match, ym_isapnp_attach
};

/*
 * Probe / attach routines.
 */

/*
 * Probe for the soundblaster hardware.
 */
int
ym_isapnp_match(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct isa_attach_args *ia = aux;

	if (ia->ipa_nio < 5)
		return 0;
	return 1;
}

/*
 * Attach hardware to driver, attach hardware driver to audio
 * pseudo-device driver.
 */
void
ym_isapnp_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct ym_softc *sc = (struct ym_softc *)self;
	struct isa_attach_args *ia = aux;

	sc->sc_iot = ia->ia_iot;
	sc->sc_ioh = ia->ipa_io[1].h;
	sc->sc_ic = ia->ia_ic;

	sc->ym_irq = ia->ipa_irq[0].num;
	sc->ym_drq = ia->ipa_drq[0].num;
	sc->ym_recdrq = ia->ipa_drq[1].num;

	sc->sc_controlioh = ia->ipa_io[4].h; 

	sc->sc_ad1848.sc_ioh = sc->sc_ioh;
	sc->sc_ad1848.sc_isa = parent->dv_parent;
	sc->sc_ad1848.sc_iot = sc->sc_iot;
	sc->sc_ad1848.sc_iooffs = WSS_CODEC;
	sc->sc_ad1848.mode = 2;
	sc->sc_ad1848.MCE_bit = MODE_CHANGE_ENABLE;
	sc->sc_ad1848.sc_flags = AD1848_FLAG_32REGS;

#if NMIDI > 0
	sc->sc_mpu_sc.iobase = ia->ipa_io[3].base;
	sc->sc_mpu_sc.ioh = ia->ipa_io[3].h;
#endif

	ym_attach(sc);
}
@


1.9
log
@* use audio(9)'s DMA trigger methods instead of the init/start
  methods.  the AD1848 DMA engine runs continuously and doesn't
  need to be started/stopped or otherwise manipulated for each
  block.  makes the driver a bit more efficient.
* allow "Mode 2" capable chips such as the CS4231 to work in "Mode 1"
  when there is only one DMA channel, instead of forcing it into
  "Mode 2", which expects two DMA channels.  allows recording to
  work for "Mode 2" capable devices when there is only one DMA
  channel.
* service both playback and recording interrupts in full-duplex
  mode, instead of only playback interrupts.  allows "Mode 2"
  capable chips to work in full-duplex mode.
* fix checks for sample rate/format recalibration completion.  gets
  rid of busy loops that briefly "hang" the kernel when the device is
  opened and/or reconfigured.
@
text
@d1 1
a1 1
/*	$OpenBSD: ym_isapnp.c,v 1.8 2002/03/14 01:26:57 millert Exp $ */
a42 1
#include <sys/proc.h>
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ym_isapnp.c,v 1.7 1999/08/05 05:32:41 deraadt Exp $ */
d116 1
@


1.7
log
@mv isa/mpu401var.h ic/mpuvar.h
@
text
@d1 1
a1 1
/*	$OpenBSD: ym_isapnp.c,v 1.6 1999/07/21 12:39:22 deraadt Exp $ */
d62 2
a63 2
int	ym_isapnp_match __P((struct device *, void *, void *));
void	ym_isapnp_attach __P((struct device *, struct device *, void *));
@


1.7.14.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ym_isapnp.c,v 1.7 1999/08/05 05:32:41 deraadt Exp $ */
d62 2
a63 2
int	ym_isapnp_match(struct device *, void *, void *);
void	ym_isapnp_attach(struct device *, struct device *, void *);
@


1.7.4.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d62 2
a63 2
int	ym_isapnp_match(struct device *, void *, void *);
void	ym_isapnp_attach(struct device *, struct device *, void *);
@


1.6
log
@do resource requirement checking in match(), not attach()
@
text
@d1 1
a1 1
/*	$OpenBSD: ym_isapnp.c,v 1.5 1999/07/20 16:36:06 deraadt Exp $ */
d57 1
a57 1
#include <dev/isa/mpu401var.h>
@


1.5
log
@first cut at isapnp and ym mpu
@
text
@d1 1
a1 1
/*	$OpenBSD: ym_isapnp.c,v 1.4 1999/03/08 11:16:49 deraadt Exp $ */
d81 1
d83 2
a98 5

	if (ia->ipa_nio < 5) {
		printf("Insufficient I/O ports... not really attached\n");
		return;
	}
@


1.4
log
@indent
@
text
@d1 1
a1 1
/*	$OpenBSD: ym_isapnp.c,v 1.3 1998/08/04 12:01:39 csapuntz Exp $ */
d35 2
d47 1
d57 1
a68 1

d98 1
a98 1
		printf ("Insufficient I/O ports... not really attached\n");
d119 5
a125 1

@


1.3
log
@

Fix by Federico G. Schwindt <fgsch@@olimpo.com.br> for YM ISA PNP driver
@
text
@d1 1
a1 1
/*	$OpenBSD: ym_isapnp.c,v 1.2 1998/06/02 14:49:09 csapuntz Exp $ */
d91 2
a92 2
  struct ym_softc *sc = (struct ym_softc *)self;
  struct isa_attach_args *ia = aux;
d94 21
a114 21
  if (ia->ipa_nio < 5) {
    printf ("Insufficient I/O ports... not really attached\n");
    return;
  }

  sc->sc_iot = ia->ia_iot;
  sc->sc_ioh = ia->ipa_io[1].h;
  sc->sc_ic = ia->ia_ic;

  sc->ym_irq = ia->ipa_irq[0].num;
  sc->ym_drq = ia->ipa_drq[0].num;
  sc->ym_recdrq = ia->ipa_drq[1].num;

  sc->sc_controlioh = ia->ipa_io[4].h; 

  sc->sc_ad1848.sc_ioh = sc->sc_ioh;
  sc->sc_ad1848.sc_isa = parent->dv_parent;
  sc->sc_ad1848.sc_iot = sc->sc_iot;
  sc->sc_ad1848.sc_iooffs = WSS_CODEC;
  sc->sc_ad1848.mode = 2;
  sc->sc_ad1848.MCE_bit = MODE_CHANGE_ENABLE;
d116 1
a116 1
  ym_attach(sc);
@


1.2
log
@

Fixed copyright.
@
text
@d1 1
a1 1
/*	$OpenBSD: ym_isapnp.c,v 1.1 1998/05/08 18:37:25 csapuntz Exp $ */
d109 1
a109 1
  sc->sc_ad1848.sc_iobase = ia->ipa_io[1].base + WSS_CODEC;
@


1.1
log
@

Cleaned up AD1848 driver and added driver for Yamaha OPL3-SA3 to tree.
@
text
@d1 1
a1 1
/*	$OpenBSD:$ */
d5 2
a6 3
 * Copyright (c) 1991-1993 Regents of the University of California.
 * All rights reserved.
 *
d15 2
a16 19
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the Computer Systems
 *	Engineering Group at Lawrence Berkeley Laboratory.
 * 4. Neither the name of the University nor of the Laboratory may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d18 10
@

