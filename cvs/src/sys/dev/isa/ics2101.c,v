head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.12
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.20
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.18
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.16
	OPENBSD_5_0:1.7.0.14
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.12
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.10
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.8
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.4
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.18
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.16
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.14
	OPENBSD_2_8:1.4.0.12
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.10
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.8
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd:1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2014.09.14.14.17.25;	author jsg;	state Exp;
branches;
next	1.8;
commitid	uzzBR7hz9ncd4O6G;

1.8
date	2013.05.15.08.29.24;	author ratchov;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.26.05.42.16;	author ray;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.10.10.11.24;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.04.26.21.02.44;	author provos;	state Exp;
branches
	1.4.8.1
	1.4.18.1;
next	1.3;

1.3
date	96.05.07.07.36.42;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.08.16.42.57;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.34;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.34;	author deraadt;	state Exp;
branches;
next	;

1.4.8.1
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	1.4.8.2;

1.4.8.2
date	2003.05.13.19.35.03;	author ho;	state Exp;
branches;
next	;

1.4.18.1
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	1.4.18.2;

1.4.18.2
date	2003.05.19.22.07.48;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.9
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@/* $OpenBSD: ics2101.c,v 1.8 2013/05/15 08:29:24 ratchov Exp $ */
/* $NetBSD: ics2101.c,v 1.6 1997/10/09 07:57:23 jtc Exp $ */

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Ken Hornstein and John Kohl.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/errno.h>
#include <sys/ioctl.h>
#include <sys/syslog.h>
#include <sys/device.h>
#include <sys/buf.h>

#include <machine/cpu.h>

#include <sys/audioio.h>
#include <dev/audio_if.h>

#include <dev/isa/isavar.h>
#include <dev/isa/isadmavar.h>

#include <dev/ic/ics2101reg.h>
#include <dev/isa/ics2101var.h>


#define ICS_VALUE	0x01
#define ICS_MUTE	0x02
#define ICS_MUTE_MUTED	0x04

/* convert from [AUDIO_MIN_GAIN,AUDIO_MAX_GAIN] (0,255) to
   [ICSMIX_MAX_ATTN,ICSMIX_MIN_ATTN] (0,127) */

#define cvt_value(val) ((val) >> 1)

static void ics2101_mix_doit(struct ics2101_softc *, u_int, u_int, u_int,
    u_int);
/*
 * Program one channel of the ICS mixer
 */


static void
ics2101_mix_doit(sc, chan, side, value, flags)
	struct ics2101_softc *sc;
	u_int chan, side, value, flags;
{
	bus_space_tag_t iot = sc->sc_iot;
	unsigned char flip_left[6] = {0x01, 0x01, 0x01, 0x02, 0x01, 0x02};
	unsigned char flip_right[6] = {0x02, 0x02, 0x02, 0x01, 0x02, 0x01};
	register unsigned char ctrl_addr;
	register unsigned char attn_addr;
	register unsigned char normal;

	if (chan < ICSMIX_CHAN_0 || chan > ICSMIX_CHAN_5)
		return;
	if (side != ICSMIX_LEFT && side != ICSMIX_RIGHT)
		return;

	if (flags & ICS_MUTE) {
		value = cvt_value(sc->sc_setting[chan][side]);
		sc->sc_mute[chan][side] = flags & ICS_MUTE_MUTED;
	} else if (flags & ICS_VALUE) {
		sc->sc_setting[chan][side] = value;
		value = cvt_value(value);
		if (value > ICSMIX_MIN_ATTN)
			value = ICSMIX_MIN_ATTN;
	} else
		return;

	ctrl_addr = chan << 3;
	attn_addr = chan << 3;

	if (side == ICSMIX_LEFT) {
		ctrl_addr |= ICSMIX_CTRL_LEFT;
		attn_addr |= ICSMIX_ATTN_LEFT;
		if (sc->sc_mute[chan][side])
			normal = 0x0;
		else if (sc->sc_flags & ICS_FLIP)
			normal = flip_left[chan];
		else
			normal = 0x01;
	} else {
		ctrl_addr |= ICSMIX_CTRL_RIGHT;
		attn_addr |= ICSMIX_ATTN_RIGHT;
		if (sc->sc_mute[chan][side])
			normal = 0x0;
		else if (sc->sc_flags & ICS_FLIP)
			normal = flip_right[chan];
		else
			normal = 0x02;
	}

	mtx_enter(&audio_lock);

	bus_space_write_1(iot, sc->sc_selio_ioh, sc->sc_selio, ctrl_addr);
	bus_space_write_1(iot, sc->sc_dataio_ioh, sc->sc_dataio, normal);

	bus_space_write_1(iot, sc->sc_selio_ioh, sc->sc_selio, attn_addr);
	bus_space_write_1(iot, sc->sc_dataio_ioh, sc->sc_dataio, (unsigned char) value);

	mtx_leave(&audio_lock);
}

void
ics2101_mix_mute(sc, chan, side, domute)
	struct ics2101_softc *sc;
	unsigned int chan, side, domute;
{
    ics2101_mix_doit(sc, chan, side, 0,
		     domute ? ICS_MUTE|ICS_MUTE_MUTED : ICS_MUTE);
}

void
ics2101_mix_attenuate(sc, chan, side, value)
	struct ics2101_softc *sc;
	unsigned int chan, side, value;
{
    ics2101_mix_doit(sc, chan, side, value, ICS_VALUE);
}
@


1.8
log
@Introduce a global interrupt-aware mutex protecting data
structures (including sound-card registers) from concurent
access by syscall and interrupt code-paths. Since critical
sections remain the same, calls to splraise/spllower can be
safely replaced by calls to mtx_enter/mtx_leave with two
exceptions: (1) mutexes are not reentrant (the inner splraise
is thus removed), and (2) we're not allowed to sleep with a
mutex (either msleep is used or the mutex is released before
sleeping).

ok and help from kettenis, a lot of work from armani
@
text
@d1 1
a1 1
/* $OpenBSD: ics2101.c,v 1.7 2008/06/26 05:42:16 ray Exp $ */
a38 1
#include <sys/proc.h>
@


1.7
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: ics2101.c,v 1.6 2003/04/10 10:11:24 miod Exp $ */
a80 1
	int s;
d121 1
a121 1
	s = splaudio();
d129 1
a129 1
	splx(s);
@


1.6
log
@Proper use of bus_space makes the need for <machine/pio.h> obsolete, which
is good since not all isa capable platforms provide such a file.
@
text
@d1 1
a1 1
/* $OpenBSD: ics2101.c,v 1.5 2002/03/14 01:26:56 millert Exp $ */
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD 
 *	  Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its 
 *    contributors may be used to endorse or promote products derived 
 *    from this software without specific prior written permission.
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/* $OpenBSD: ics2101.c,v 1.4 1998/04/26 21:02:44 provos Exp $ */
a49 1
#include <machine/pio.h>
@


1.4
log
@update audio from NetBSD, mostly by Lennart Augustsson <augustss@@cs.chalmers.se>
@
text
@d1 1
a1 1
/* $OpenBSD: ics2101.c,v 1.3 1996/05/07 07:36:42 deraadt Exp $ */
d71 2
a72 2
static void ics2101_mix_doit __P((struct ics2101_softc *, u_int, u_int, u_int,
    u_int));
@


1.4.18.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD: ics2101.c,v 1.4 1998/04/26 21:02:44 provos Exp $ */
d71 2
a72 2
static void ics2101_mix_doit(struct ics2101_softc *, u_int, u_int, u_int,
    u_int);
@


1.4.18.2
log
@sync
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d50 1
@


1.4.8.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d71 2
a72 2
static void ics2101_mix_doit(struct ics2101_softc *, u_int, u_int, u_int,
    u_int);
@


1.4.8.2
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/* $OpenBSD: ics2101.c,v 1.4.8.1 2002/03/28 12:11:35 niklas Exp $ */
d50 1
@


1.3
log
@sync with 0504 -- prototypes and bus.h
@
text
@d1 2
a2 2
/* $OpenBSD: ics2101.c,v 1.2 1996/03/08 16:42:57 niklas Exp $ */
/* $NetBSD: ics2101.c,v 1.4 1996/04/29 20:03:10 christos Exp $ */
d30 2
a31 2
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
d83 1
d132 2
a133 2
	outb(sc->sc_selio, ctrl_addr);
	outb(sc->sc_dataio, normal);
d135 2
a136 2
	outb(sc->sc_selio, attn_addr);
	outb(sc->sc_dataio, (unsigned char) value);
@


1.2
log
@From NetBSD: merge of 960217
@
text
@d1 2
a2 2
/* $OpenBSD$ */
/* $NetBSD: ics2101.c,v 1.3 1996/02/05 02:22:11 jtc Exp $ */
d71 2
d81 1
a81 1
	unsigned int chan, side, value, flags;
@


1.1
log
@Initial revision
@
text
@d1 3
a3 1
/* $NetBSD: ics2101.c,v 1.1 1995/07/19 19:58:49 brezak Exp $ */
d5 1
a5 2
 * Copyright (c) 1995 John T. Kohl.  All Rights Reserved.
 * Copyright (c) 1994 The Regents of the University of California.
d8 2
a9 2
 * This code is derived from software contributed to Berkeley by
 * Ken Hornstein.
d21 5
a25 5
 *      This product includes software developed by the University of
 *      California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
d27 11
a37 13
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 *	$Id: ics2101.c,v 1.1 1995/07/19 19:58:49 brezak Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
