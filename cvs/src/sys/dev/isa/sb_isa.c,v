head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.12
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.10
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.6
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.38
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.36
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.32
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.30
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.28
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.26
	OPENBSD_5_0:1.8.0.24
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.22
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.20
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.16
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.18
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.14
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.12
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.2
	UBC_BASE:1.5
	OPENBSD_3_0:1.4.0.14
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.12
	OPENBSD_2_8:1.4.0.10
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.8
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.6
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.05.12.16.35.23;	author ratchov;	state Exp;
branches;
next	1.9;
commitid	8SRHQ3IQe4e0vyPS;

1.9
date	2014.09.14.14.17.25;	author jsg;	state Exp;
branches;
next	1.8;
commitid	uzzBR7hz9ncd4O6G;

1.8
date	2006.01.02.05.21.40;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	2003.04.27.11.22.53;	author ho;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.01.17.14.10;	author millert;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	99.01.02.01.33.39;	author niklas;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	98.04.28.00.03.24;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	98.04.26.21.02.57;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	97.07.10.23.06.37;	author provos;	state Exp;
branches;
next	;

1.4.6.1
date	2001.11.13.21.10.01;	author niklas;	state Exp;
branches;
next	1.4.6.2;

1.4.6.2
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	1.4.6.3;

1.4.6.3
date	2003.05.13.19.35.03;	author ho;	state Exp;
branches;
next	;

1.5.2.1
date	2002.06.11.03.42.22;	author art;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2003.05.19.22.08.46;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove references to (deleted) auconv.h and mulaw.h files. Fixes
i386 build. Found by Mark Patruck <mark at wrapped.cx>, thanks!
@
text
@/*	$OpenBSD: sb_isa.c,v 1.9 2014/09/14 14:17:25 jsg Exp $	*/
/*	$NetBSD: sb_isa.c,v 1.15 1997/11/30 15:32:25 drochner Exp $	*/

/*
 * Copyright (c) 1991-1993 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the Computer Systems
 *	Engineering Group at Lawrence Berkeley Laboratory.
 * 4. Neither the name of the University nor of the Laboratory may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/errno.h>
#include <sys/ioctl.h>
#include <sys/syslog.h>
#include <sys/device.h>

#include <machine/bus.h>

#include <sys/audioio.h>
#include <dev/audio_if.h>
#include <dev/midi_if.h>

#include <dev/isa/isavar.h>
#include <dev/isa/isadmavar.h>

#include <dev/isa/sbreg.h>
#include <dev/isa/sbvar.h>

#include <dev/isa/sbdspvar.h>

static	int sbfind(struct device *, struct sbdsp_softc *, struct isa_attach_args *);

int	sb_isa_match(struct device *, void *, void *);
void	sb_isa_attach(struct device *, struct device *, void *);

struct cfattach sb_isa_ca = {
	sizeof(struct sbdsp_softc), sb_isa_match, sb_isa_attach
};

/*
 * Probe / attach routines.
 */

/*
 * Probe for the soundblaster hardware.
 */
int
sb_isa_match(parent, match, aux)
	struct device *parent;
	void *match;
	void *aux;
{
	struct sbdsp_softc probesc, *sc = &probesc;

	bzero(sc, sizeof *sc);
	sc->sc_dev.dv_cfdata = ((struct device *)match)->dv_cfdata;
	strlcpy(sc->sc_dev.dv_xname, "sb", sizeof sc->sc_dev.dv_xname);
	return sbfind(parent, sc, aux);
}

static int
sbfind(parent, sc, ia)
	struct device *parent;
	struct sbdsp_softc *sc;
	struct isa_attach_args *ia;
{
	int rc = 0;

	if (!SB_BASE_VALID(ia->ia_iobase))
		return 0;

	sc->sc_iot = ia->ia_iot;

	/* Map i/o space [we map 24 ports which is the max of the sb and pro] */
	if (bus_space_map(sc->sc_iot, ia->ia_iobase, SBP_NPORT, 0,
	    &sc->sc_ioh))
		return 0;

	sc->sc_iobase = ia->ia_iobase;
	sc->sc_irq = ia->ia_irq;
	sc->sc_drq8 = ia->ia_drq;
	sc->sc_drq16 = ia->ia_drq2;
	sc->sc_ic = ia->ia_ic;

	if (!sbmatch(sc))
		goto bad;

	if ((sc->sc_drq8 != -1 && !isa_drq_isfree(parent, sc->sc_drq8)) ||
	    (sc->sc_drq16 != -1 && !isa_drq_isfree(parent, sc->sc_drq16)))
		goto bad;

	if (ISSBPROCLASS(sc))
		ia->ia_iosize = SBP_NPORT;
	else
		ia->ia_iosize = SB_NPORT;

	if (!ISSB16CLASS(sc) && sc->sc_model != SB_JAZZ)
		ia->ia_drq2 = -1;

	ia->ia_irq = sc->sc_irq;

	rc = 1;

bad:
	bus_space_unmap(sc->sc_iot, sc->sc_ioh, SBP_NPORT);
	return rc;
}


/*
 * Attach hardware to driver, attach hardware driver to audio
 * pseudo-device driver .
 */
void
sb_isa_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct sbdsp_softc *sc = (struct sbdsp_softc *)self;
	struct isa_attach_args *ia = aux;

	if (!sbfind(parent, sc, ia) || 
	    bus_space_map(sc->sc_iot, ia->ia_iobase, ia->ia_iosize, 0,
	    &sc->sc_ioh)) {
		printf("%s: sbfind failed\n", sc->sc_dev.dv_xname);
		return;
	}
	sc->sc_ic = ia->ia_ic;
	sc->sc_isa = parent;
	sbattach(sc);
}
@


1.9
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sb_isa.c,v 1.8 2006/01/02 05:21:40 brad Exp $	*/
a49 1
#include <dev/mulaw.h>
@


1.8
log
@remove last traces of __BROKEN_INDIRECT_CONFIG.

Thanks to aanriot@@ and Michael Knudsen for checking that alpha/i386/macppc
kernels still compile.
@
text
@d1 1
a1 1
/*	$OpenBSD: sb_isa.c,v 1.7 2003/04/27 11:22:53 ho Exp $	*/
a43 1
#include <sys/proc.h>
@


1.7
log
@strcpy/sprintf cleanup of sys/dev. miod@@, deraadt@@ says to commit.
@
text
@d1 1
a1 1
/*	$OpenBSD: sb_isa.c,v 1.6 2002/03/14 01:26:56 millert Exp $	*/
a62 2
#define __BROKEN_INDIRECT_CONFIG /* XXX */
#ifdef __BROKEN_INDIRECT_CONFIG
a63 3
#else
int	sb_isa_match(struct device *, struct cfdata *, void *);
#endif
a79 1
#ifdef __BROKEN_INDIRECT_CONFIG
a80 3
#else
	struct cfdata *match;
#endif
a85 1
#ifdef __BROKEN_INDIRECT_CONFIG
a86 3
#else
	sc->sc_dev.dv_cfdata = match;
#endif
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: sb_isa.c,v 1.5 2001/11/01 17:14:10 millert Exp $	*/
d100 1
a100 1
	strcpy(sc->sc_dev.dv_xname, "sb");
@


1.5
log
@add missing end bracket in comment
@
text
@d1 1
a1 1
/*	$OpenBSD: sb_isa.c,v 1.3 1998/04/28 00:03:24 deraadt Exp $	*/
d61 1
a61 1
static	int sbfind __P((struct device *, struct sbdsp_softc *, struct isa_attach_args *));
d65 1
a65 1
int	sb_isa_match __P((struct device *, void *, void *));
d67 1
a67 1
int	sb_isa_match __P((struct device *, struct cfdata *, void *));
d69 1
a69 1
void	sb_isa_attach __P((struct device *, struct device *, void *));
@


1.5.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sb_isa.c,v 1.5 2001/11/01 17:14:10 millert Exp $	*/
d61 1
a61 1
static	int sbfind(struct device *, struct sbdsp_softc *, struct isa_attach_args *);
d65 1
a65 1
int	sb_isa_match(struct device *, void *, void *);
d67 1
a67 1
int	sb_isa_match(struct device *, struct cfdata *, void *);
d69 1
a69 1
void	sb_isa_attach(struct device *, struct device *, void *);
@


1.5.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d100 1
a100 1
	strlcpy(sc->sc_dev.dv_xname, "sb", sizeof sc->sc_dev.dv_xname);
@


1.4
log
@Forgotten file in the midi commit
@
text
@d117 1
a117 1
	/* Map i/o space [we map 24 ports which is the max of the sb and pro */
@


1.4.6.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d117 1
a117 1
	/* Map i/o space [we map 24 ports which is the max of the sb and pro] */
@


1.4.6.2
log
@Merge in -current from about a week ago
@
text
@d61 1
a61 1
static	int sbfind(struct device *, struct sbdsp_softc *, struct isa_attach_args *);
d65 1
a65 1
int	sb_isa_match(struct device *, void *, void *);
d67 1
a67 1
int	sb_isa_match(struct device *, struct cfdata *, void *);
d69 1
a69 1
void	sb_isa_attach(struct device *, struct device *, void *);
@


1.4.6.3
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: sb_isa.c,v 1.4.6.2 2002/03/28 12:11:35 niklas Exp $	*/
d100 1
a100 1
	strlcpy(sc->sc_dev.dv_xname, "sb", sizeof sc->sc_dev.dv_xname);
@


1.3
log
@silence noisy probe() routines
@
text
@d1 1
a1 1
/*	$OpenBSD: sb_isa.c,v 1.2 1998/04/26 21:02:57 provos Exp $	*/
d50 1
d166 3
a168 2
	    bus_space_map(sc->sc_iot, ia->ia_iobase, ia->ia_iosize, 
			  0, &sc->sc_ioh))
d170 2
@


1.2
log
@update audio from NetBSD, mostly by Lennart Augustsson <augustss@@cs.chalmers.se>
@
text
@d1 1
a1 1
/*	$OpenBSD: sb_isa.c,v 1.1 1997/07/10 23:06:37 provos Exp $	*/
d111 1
a111 2
	if (!SB_BASE_VALID(ia->ia_iobase)) {
		printf("sb: configured iobase 0x%x invalid\n", ia->ia_iobase);
a112 1
	}
d118 1
a118 3
	    &sc->sc_ioh)) {
		printf("sb: can't map i/o space 0x%x/%d in probe\n",
		    ia->ia_iobase, SBP_NPORT);
a119 1
	}
d166 1
a166 2
			  0, &sc->sc_ioh)) {
		printf("%s: sbfind failed\n", sc->sc_dev.dv_xname);
a167 1
	}
@


1.1
log
@sync with NETBSD 30/3/97 + adapating aria.c
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: sb_isa.c,v 1.3 1997/03/20 11:03:11 mycroft Exp $	*/
d46 2
d60 4
d65 3
d84 24
a107 1
	void *match, *aux;
d109 1
a109 5
	/*
	 * Indirect brokedness!
	 */
	register struct sbdsp_softc *sc = match;
	register struct isa_attach_args *ia = aux;
d118 1
a118 1
	/* Map i/o space [we map 24 ports which is the max of the sb and pro  */
a125 3
	/*
	 * Indirect brokedness!
	 */
d129 1
a129 1
	sc->sc_drq16 = -1;	/* XXX */
d132 6
a137 4
	if (!sbmatch(sc)) {
		bus_space_unmap(sc->sc_iot, sc->sc_ioh, SBP_NPORT);
		return 0;
	}
d144 3
d149 5
a153 1
	return 1;
d166 11
a176 1
	sbattach((struct sbdsp_softc *) self);
@

