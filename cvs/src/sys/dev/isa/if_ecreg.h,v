head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.68
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.70
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.66
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.56
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.64
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.62
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.60
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.58
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.54
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.52
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.50
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.48
	OPENBSD_5_0:1.2.0.46
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.44
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.42
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.38
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.40
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.36
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.34
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.32
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.30
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.28
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.26
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.24
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.22
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.20
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.18
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.16
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.14
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.12
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.10
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.6
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_8:1.1.0.12
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.10
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.8
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2001.01.25.03.50.50;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	98.09.22.06.33.18;	author fgsch;	state Exp;
branches
	1.1.8.1;
next	;

1.1.8.1
date	2001.05.14.22.24.38;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@spelling
@
text
@/*	$OpenBSD: if_ecreg.h,v 1.1 1998/09/22 06:33:18 fgsch Exp $	*/
/*	$NetBSD: if_ecreg.h,v 1.1 1997/11/02 00:44:26 thorpej Exp $	*/

/*
 * 3Com Etherlink II (3c503) register definitions.
 *
 * Copyright (C) 1993, David Greenman.  This software may be used, modified,
 * copied, distributed, and sold, in both source and binary form provided that
 * the above copyright and these terms are retained.  Under no circumstances is
 * the author responsible for the proper functioning of this software, nor does
 * the author assume any responsibility for damages incurred with its use.
 */

#ifndef _DEV_ISA_IF_ECREG_H_
#define	_DEV_ISA_IF_ECREG_H_

#define ELINK2_NIC_OFFSET	0
#define ELINK2_ASIC_OFFSET	0x400	/* offset to nic i/o regs */

/*
 * XXX - The I/O address range is fragmented in the 3c503; this is the
 *	number of regs at iobase.
 */
#define ELINK2_NIC_PORTS	16
#define	ELINK2_ASIC_PORTS	16

/* tx memory starts in second bank on 8bit cards */
#define ELINK2_TX_PAGE_OFFSET_8BIT	0x20

/* tx memory starts in first bank on 16bit cards */
#define ELINK2_TX_PAGE_OFFSET_16BIT	0x0

/* ...and rx memory starts in second bank */
#define ELINK2_RX_PAGE_OFFSET_16BIT	0x20


/*
 * Page Start Register.  Must match PSTART in NIC.
 */
#define ELINK2_PSTR		0

/*
 * Page Stop Register.  Must match PSTOP in NIC.
 */
#define ELINK2_PSPR		1

/*
 * DrQ Timer Register.  Determines number of bytes to be transferred during a
 * DMA burst.
 */
#define ELINK2_DQTR		2

/*
 * Base Configuration Register.  Read-only register which contains the
 * board-configured I/O base address of the adapter.  Bit encoded.
 */
#define ELINK2_BCFR		3

/*
 * EPROM Configuration Register.  Read-only register which contains the
 * board-configured memory base address.  Bit encoded.
 */
#define ELINK2_PCFR		4

/*
 * GA Configuration Register.  Gate-Array Configuration Register.
 *
 * mbs2  mbs1  mbs0	start address
 *  0     0     0	0x0000
 *  0     0     1	0x2000
 *  0     1     0	0x4000
 *  0     1     1	0x6000
 *
 * Note that with adapters with only 8K, the setting for 0x2000 must always be
 * used.
 */
#define ELINK2_GACFR		5

#define ELINK2_GACFR_MBS0	0x01
#define ELINK2_GACFR_MBS1	0x02
#define ELINK2_GACFR_MBS2	0x04

#define ELINK2_GACFR_RSEL	0x08	/* enable shared memory */
#define ELINK2_GACFR_TEST	0x10	/* for GA testing */
#define ELINK2_GACFR_OWS	0x20	/* select 0WS access to GA */
#define ELINK2_GACFR_TCM	0x40	/* Mask DMA interrupts */
#define ELINK2_GACFR_NIM	0x80	/* Mask NIC interrupts */

/*
 * Control Register.  Miscellaneous control functions.
 */
#define ELINK2_CR		6

#define ELINK2_CR_RST		0x01	/* Reset GA and NIC */
#define ELINK2_CR_XSEL		0x02	/* Transceiver select.  BNC=1(def) AUI=0 */
#define ELINK2_CR_EALO		0x04	/* window EA PROM 0-15 to I/O base */
#define ELINK2_CR_EAHI		0x08	/* window EA PROM 16-31 to I/O base */
#define ELINK2_CR_SHARE		0x10	/* select interrupt sharing option */
#define ELINK2_CR_DBSEL		0x20	/* Double buffer select */
#define ELINK2_CR_DDIR		0x40	/* DMA direction select */
#define ELINK2_CR_START		0x80	/* Start DMA controller */

/*
 * Status Register.  Miscellaneous status information.
 */
#define ELINK2_STREG		7

#define ELINK2_STREG_REV	0x07	/* GA revision */
#define ELINK2_STREG_DIP	0x08	/* DMA in progress */
#define ELINK2_STREG_DTC	0x10	/* DMA terminal count */
#define ELINK2_STREG_OFLW	0x20	/* Overflow */
#define ELINK2_STREG_UFLW	0x40	/* Underflow */
#define ELINK2_STREG_DPRDY	0x80	/* Data port ready */

/*
 * Interrupt/DMA Configuration Register
 */
#define ELINK2_IDCFR		8

#define ELINK2_IDCFR_DRQ	0x07	/* DMA request */
#define ELINK2_IDCFR_UNUSED	0x08	/* not used */
#if 0
#define ELINK2_IDCFR_IRQ	0xF0	/* Interrupt request */
#else
#define ELINK2_IDCFR_IRQ2	0x10	/* Interrupt request 2 select */
#define ELINK2_IDCFR_IRQ3	0x20	/* Interrupt request 3 select */
#define ELINK2_IDCFR_IRQ4	0x40	/* Interrupt request 4 select */
#define ELINK2_IDCFR_IRQ5	0x80	/* Interrupt request 5 select */
#endif

/*
 * DMA Address Register MSB
 */
#define ELINK2_DAMSB		9

/*
 * DMA Address Register LSB
 */
#define ELINK2_DALSB		0x0a

/*
 * Vector Pointer Register 2
 */
#define ELINK2_VPTR2		0x0b

/*
 * Vector Pointer Register 1
 */
#define ELINK2_VPTR1		0x0c

/*
 * Vector Pointer Register 0
 */
#define ELINK2_VPTR0		0x0d

/*
 * Register File Access MSB
 */
#define ELINK2_RFMSB		0x0e

/*
 * Register File Access LSB
 */
#define ELINK2_RFLSB		0x0f

#endif /* _DEV_ISA_IF_ECREG_H_ */
@


1.1
log
@Replace the ed driver.
ec is used for 3c503 cards, we for SMC/WD 80x3 series and ne for ne[12]00.
This also adds ne2k pnp support.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d48 1
a48 1
 * DrQ Timer Register.  Determines number of bytes to be transfered during a
@


1.1.8.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ecreg.h,v 1.2 2001/01/25 03:50:50 todd Exp $	*/
d48 1
a48 1
 * DrQ Timer Register.  Determines number of bytes to be transferred during a
@


