head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.60
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.50
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.58
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.56
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.54
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.52
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.48
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.46
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.44
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.42
	OPENBSD_5_0:1.5.0.40
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.38
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.36
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.32
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.34
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.30
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.28
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.26
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.24
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.22
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.20
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.18
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.16
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.4
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2002.03.14.03.16.05;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.29.06.27.59;	author mickey;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	99.09.30.22.13.52;	author kstailey;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	99.06.22.16.20.03;	author niklas;	state Exp;
branches;
next	;

1.2.4.1
date	2001.05.14.22.24.32;	author niklas;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	;

1.3.6.1
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Final __P removal plus some cosmetic fixups
@
text
@/*	$OpenBSD: essvar.h,v 1.4 2002/03/14 01:26:56 millert Exp $	*/
/*	$NetBSD: essvar.h,v 1.14 1999/03/18 06:03:31 mycroft Exp $	*/
/*
 * Copyright 1997
 * Digital Equipment Corporation. All rights reserved.
 *
 * This software is furnished under license and may be used and
 * copied only in accordance with the following terms and conditions.
 * Subject to these conditions, you may download, copy, install,
 * use, modify and distribute this software in source and/or binary
 * form. No title or ownership is transferred hereby.
 *
 * 1) Any source code used, modified or distributed must reproduce
 *    and retain this copyright notice and list of conditions as
 *    they appear in the source file.
 *
 * 2) No right is granted to use any trade name, trademark, or logo of
 *    Digital Equipment Corporation. Neither the "Digital Equipment
 *    Corporation" name nor any trademark or logo of Digital Equipment
 *    Corporation may be used to endorse or promote products derived
 *    from this software without the prior written permission of
 *    Digital Equipment Corporation.
 *
 * 3) This software is provided "AS-IS" and any express or implied
 *    warranties, including but not limited to, any implied warranties
 *    of merchantability, fitness for a particular purpose, or
 *    non-infringement are disclaimed. In no event shall DIGITAL be
 *    liable for any damages whatsoever, and in particular, DIGITAL
 *    shall not be liable for special, indirect, consequential, or
 *    incidental damages or damages for lost profits, loss of
 *    revenue or loss of use, whether such damages arise in contract,
 *    negligence, tort, under statute, in equity, at law or otherwise,
 *    even if advised of the possibility of such damage.
 */

/*
** @@(#) $RCSfile: essvar.h,v $ $Revision: 1.4 $ (SHARK) $Date: 2002/03/14 01:26:56 $
**
**++
**
**  essvar.h
**
**  FACILITY:
**
**	DIGITAL Network Appliance Reference Design (DNARD)
**
**  MODULE DESCRIPTION:
**
**	This module contains the structure definitions and function
**	prototypes for the ESS Technologies 1887/888 sound chip
**	driver.
**
**  AUTHORS:
**
**	Blair Fidler	Software Engineering Australia
**			Gold Coast, Australia.
**
**  CREATION DATE:
**
**	May 12, 1997.
**
**  MODIFICATION HISTORY:
**
**--
*/
#define ESS_DAC_PLAY_VOL	0
#define ESS_MIC_PLAY_VOL	1
#define ESS_LINE_PLAY_VOL	2
#define ESS_SYNTH_PLAY_VOL	3
#define ESS_CD_PLAY_VOL		4
#define ESS_AUXB_PLAY_VOL	5
#define ESS_INPUT_CLASS		6

#define ESS_MASTER_VOL		7
#define ESS_PCSPEAKER_VOL	8
#define ESS_OUTPUT_CLASS	9

#define ESS_RECORD_MONITOR	10
#define ESS_MONITOR_CLASS	11

#define ESS_RECORD_VOL		12
#define	ESS_RECORD_SOURCE	13
#define ESS_RECORD_CLASS	14

#define ESS_1788_NDEVS		15

#define ESS_DAC_REC_VOL		15
#define ESS_MIC_REC_VOL		16
#define ESS_LINE_REC_VOL	17
#define ESS_SYNTH_REC_VOL	18
#define ESS_CD_REC_VOL		19
#define ESS_AUXB_REC_VOL	20
#define ESS_MIC_PREAMP		21

#define ESS_1888_NDEVS		22
#define ESS_MAX_NDEVS		22

struct ess_audio_channel
{
	int	drq;			/* DMA channel */
#define IS16BITDRQ(drq) ((drq) >= 4)
	int	irq;			/* IRQ line for this DMA channel */
	int	ist;
	void	*ih;			/* interrupt vectoring */
	u_long	nintr;			/* number of interrupts taken */
	void	(*intr)(void *);	/* ISR for DMA complete */
	void	*arg;			/* arg for intr() */

	/* Status information */
	int	active;			/* boolean: channel in use? */

	/* Polling state */
	int	polled;			/* 1 if channel is polled */
	int	dmapos;			/* last DMA pointer */
	int	buffersize;		/* size of DMA buffer */
	/* (The following is only needed due to the stupid block interface.) */
	int	dmacount;		/* leftover partial block */
	int	blksize;		/* current block size */
};

struct ess_softc
{
	struct	device sc_dev;		/* base device */
	struct	device *sc_isa;
	isa_chipset_tag_t sc_ic;
	bus_space_tag_t sc_iot;		/* tag */
	bus_space_handle_t sc_ioh;	/* handle */
	struct timeout sc_tmo1, sc_tmo2;

	int	sc_iobase;		/* I/O port base address */

	u_short	sc_open;		/* reference count of open calls */

	int ndevs;
	u_char	gain[ESS_MAX_NDEVS][2];	/* kept in input levels */
#define ESS_LEFT 0
#define ESS_RIGHT 1

	u_int	out_port;		/* output port */
	u_int	in_mask;		/* input ports */
	u_int	in_port;		/* XXX needed for MI interface */

	u_int	spkr_state;		/* non-null is on */

	struct ess_audio_channel sc_audio1; /* audio channel for record */
	struct ess_audio_channel sc_audio2; /* audio channel for playback */

	u_int	sc_model;
#define ESS_UNSUPPORTED 0
#define ESS_1888	1
#define ESS_1887	2
#define ESS_888		3
#define ESS_1788	4
#define ESS_1869	5
#define ESS_1879	6
#define ESS_1868	7
#define ESS_1878	8

	u_int	sc_version;		/* Legacy ES688/ES1688 ID */
};

int	essmatch(struct ess_softc *);
void	essattach(struct ess_softc *);

@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: essvar.h,v 1.3 2001/01/29 06:27:59 mickey Exp $	*/
d37 1
a37 1
** @@(#) $RCSfile: essvar.h,v $ $Revision: 1.3 $ (SHARK) $Date: 2001/01/29 06:27:59 $
d106 1
a106 1
	void	(*intr)(void*);	/* ISR for DMA complete */
@


1.3
log
@new timeouts; spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: essvar.h,v 1.2 1999/09/30 22:13:52 kstailey Exp $	*/
d37 1
a37 1
** @@(#) $RCSfile: essvar.h,v $ $Revision: 1.2 $ (SHARK) $Date: 1999/09/30 22:13:52 $
d106 1
a106 1
	void	(*intr)__P((void*));	/* ISR for DMA complete */
d162 2
a163 2
int	essmatch __P((struct ess_softc *));
void	essattach __P((struct ess_softc *));
@


1.3.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: essvar.h,v 1.3 2001/01/29 06:27:59 mickey Exp $	*/
d37 1
a37 1
** @@(#) $RCSfile: essvar.h,v $ $Revision: 1.3 $ (SHARK) $Date: 2001/01/29 06:27:59 $
d106 1
a106 1
	void	(*intr)(void *);	/* ISR for DMA complete */
d162 2
a163 2
int	essmatch(struct ess_softc *);
void	essattach(struct ess_softc *);
@


1.2
log
@Sync w/NetBSD.  Add support for ES18[67][89] - Nonaka Kimihiro + muting control fix
@
text
@d1 1
a1 1
/*	$OpenBSD: essvar.h,v 1.1 1999/06/22 16:20:03 niklas Exp $	*/
d37 1
a37 1
** @@(#) $RCSfile: essvar.h,v $ $Revision: 1.1 $ (SHARK) $Date: 1999/06/22 16:20:03 $
d49 3
a51 3
**      This module contains the structure definitions and function
**      prototypes for the ESS Technologies 1887/888 sound chip
**      driver.
d58 1
a58 1
**  CREATION DATE:  
d128 1
d134 1
a134 1
	int ndevs; 
d138 1
a138 1
	
d144 1
a144 1
	
@


1.2.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: essvar.h,v 1.3 2001/01/29 06:27:59 mickey Exp $	*/
d37 1
a37 1
** @@(#) $RCSfile: essvar.h,v $ $Revision: 1.3 $ (SHARK) $Date: 2001/01/29 06:27:59 $
d49 3
a51 3
**	This module contains the structure definitions and function
**	prototypes for the ESS Technologies 1887/888 sound chip
**	driver.
d58 1
a58 1
**  CREATION DATE:
a127 1
	struct timeout sc_tmo1, sc_tmo2;
d133 1
a133 1
	int ndevs;
d137 1
a137 1

d143 1
a143 1

@


1.2.4.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
** @@(#) $RCSfile$ $Revision$ (SHARK) $Date$
d106 1
a106 1
	void	(*intr)(void *);	/* ISR for DMA complete */
d162 2
a163 2
int	essmatch(struct ess_softc *);
void	essattach(struct ess_softc *);
@


1.1
log
@ESS audio driver ported from NetBSD, some mixer problems with X-based mixers
otherwise OK (mixerctl works quite OK, very strange).
At the moment it is polled only, but it works quite OK that way too.
@
text
@d1 1
a1 1
/*	$OpenBSD: essvar.h,v 1.14 1999/03/18 06:03:31 mycroft Exp $	*/
d37 1
a37 1
** @@(#) $RCSfile: essvar.h,v $ $Revision: 1.1.1.10 $ (SHARK) $Date: 1999/03/18 22:16:58 $
d153 4
@

