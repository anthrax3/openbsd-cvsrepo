head	1.16;
access;
symbols
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.13.0.6
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.11.0.24
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.22
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.20
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.18
	OPENBSD_5_0:1.11.0.16
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.14
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.12
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.8
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.10
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.6
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.4
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.2
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.7.0.10
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.8
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.8
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.6
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.10
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.8
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.6
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2;
locks; strict;
comment	@ * @;


1.16
date	2015.11.24.17.11.39;	author mpi;	state Exp;
branches;
next	1.15;
commitid	5gdEnqVoJuTuwdTu;

1.15
date	2015.11.24.13.33.17;	author mpi;	state Exp;
branches;
next	1.14;
commitid	5DvsamK0GblTp8ww;

1.14
date	2014.08.11.12.45.45;	author mpi;	state Exp;
branches;
next	1.13;
commitid	nYggAidK85QbUFh2;

1.13
date	2013.11.15.16.46.27;	author brad;	state Exp;
branches;
next	1.12;

1.12
date	2013.08.07.01.06.32;	author bluhm;	state Exp;
branches;
next	1.11;

1.11
date	2008.02.18.16.24.14;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2006.06.17.17.57.00;	author brad;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.21.18.16.40;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.12.06.35.11;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.56;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2000.05.29.18.04.08;	author aaron;	state Exp;
branches
	1.6.8.1;
next	1.5;

1.5
date	98.09.19.10.08.05;	author maja;	state Exp;
branches
	1.5.8.1;
next	1.4;

1.4
date	98.09.16.21.16.37;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	98.09.11.12.06.57;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	98.03.23.03.06.07;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.03.20.05.58.08;	author dgregor;	state Exp;
branches;
next	;

1.5.8.1
date	2001.05.14.22.24.42;	author niklas;	state Exp;
branches;
next	1.5.8.2;

1.5.8.2
date	2002.03.28.12.11.35;	author niklas;	state Exp;
branches;
next	1.5.8.3;

1.5.8.3
date	2004.06.05.23.12.45;	author niklas;	state Exp;
branches;
next	;

1.6.8.1
date	2002.06.11.03.42.21;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@You only need <net/if_dl.h> if you're using LLADDR() or a sockaddr_dl.
@
text
@/*	$OpenBSD: if_ep_isapnp.c,v 1.15 2015/11/24 13:33:17 mpi Exp $	*/
/*	$NetBSD: if_ep_isapnp.c,v 1.5 1996/05/12 23:52:36 mycroft Exp $	*/

/*
 * Copyright (c) 1996 Jason R. Thorpe <thorpej@@beer.org>
 * Copyright (c) 1994 Herb Peyerl <hpeyerl@@beer.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Herb Peyerl.
 * 4. The name of Herb Peyerl may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Note: Most of the code here was written by Theo de Raadt originally,
 * ie. all the mechanics of probing for all cards on first call and then
 * searching for matching devices on subsequent calls.
 */

#include "bpfilter.h"

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mbuf.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <sys/errno.h>
#include <sys/syslog.h>
#include <sys/selinfo.h>
#include <sys/device.h>
#include <sys/timeout.h>
#include <sys/queue.h>

#include <net/if.h>
#include <net/if_media.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>

#if NBPFILTER > 0
#include <net/bpf.h>
#endif

#include <machine/cpu.h>
#include <machine/bus.h>
#include <machine/intr.h>

#include <dev/mii/mii.h>
#include <dev/mii/miivar.h>

#include <dev/ic/elink3var.h>
#include <dev/ic/elink3reg.h>

#include <dev/isa/isavar.h>
#include <dev/isa/elink.h>

int ep_isapnp_match(struct device *, void *, void *);
void ep_isapnp_attach(struct device *, struct device *, void *);

struct cfattach ep_isapnp_ca = {
	sizeof(struct ep_softc), ep_isapnp_match, ep_isapnp_attach
};

/*
 * 3c509 cards on the ISA bus are probed in ethernet address order.
 * The probe sequence requires careful orchestration, and we'd like
 * to allow the irq and base address to be wildcarded. So, we
 * probe all the cards the first time epprobe() is called. On subsequent
 * calls we look for matching cards.
 */
int
ep_isapnp_match(struct device *parent, void *match, void *aux)
{
	/* XXX This should be more intelligent */
	return 1;
}

void
ep_isapnp_attach(struct device *parent, struct device *self, void *aux)
{
	struct ep_softc *sc = (void *)self;
	struct isa_attach_args *ia = aux;
	bus_space_tag_t iot = ia->ia_iot;
	bus_space_handle_t ioh;

	sc->sc_iot = iot = ia->ia_iot;
	sc->sc_ioh = ioh = ia->ipa_io[0].h;
	sc->bustype = EP_BUS_ISA;

	printf(":");

	/* Should look at ia->ia_devident... */
	epconfig(sc, EP_CHIPSET_3C509, NULL);

	sc->sc_ih = isa_intr_establish(ia->ia_ic, ia->ia_irq, IST_EDGE,
	    IPL_NET, epintr, sc, sc->sc_dev.dv_xname);
}
@


1.15
log
@The only network driver needing <net/if_types.h> is upl(4) for IFT_OTHER.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.14 2014/08/11 12:45:45 mpi Exp $	*/
a53 2
#include <net/if_dl.h>
#include <net/netisr.h>
@


1.14
log
@Fewer <netinet/in_systm.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.13 2013/11/15 16:46:27 brad Exp $	*/
a54 1
#include <net/if_types.h>
@


1.13
log
@ansify some function definitions.
no functional change.

ok sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.12 2013/08/07 01:06:32 bluhm Exp $	*/
a58 1
#ifdef INET
a59 2
#include <netinet/in_systm.h>
#include <netinet/ip.h>
a60 1
#endif
@


1.12
log
@Most network drivers include netinet/in_var.h, but apparently they
don't have to.  Just remove these include lines.
Compiled on amd64 i386 sparc64; OK henning@@ mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.11 2008/02/18 16:24:14 krw Exp $	*/
d98 1
a98 3
ep_isapnp_match(parent, match, aux)
	struct device *parent;
	void *match, *aux;
d105 1
a105 3
ep_isapnp_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
@


1.11
log
@'like\nlike' -> 'like' in a couple of comments.

From Giovanni Bechis.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.10 2006/06/17 17:57:00 brad Exp $	*/
a61 1
#include <netinet/in_var.h>
@


1.10
log
@add sys/timeout.h
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.9 2005/11/21 18:16:40 millert Exp $	*/
d94 1
a94 1
 * like to allow the irq and base address to be wildcarded. So, we
@


1.9
log
@Move contents of sys/select.h to sys/selinfo.h in preparation for a
userland-visible sys/select.h.  Consistent with what Net and Free do.
OK deraadt@@, tested with full ports build by naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.8 2004/05/12 06:35:11 tedu Exp $	*/
d50 1
@


1.8
log
@network drivers don't need to include bpfdesc.h
ok krw@@ canacar@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.7 2002/03/14 01:26:56 millert Exp $	*/
d48 1
a48 1
#include <sys/select.h>
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.6 2000/05/29 18:04:08 aaron Exp $	*/
a67 1
#include <net/bpfdesc.h>
@


1.6
log
@Support for 3c574 and 3CCFEM556BI PCMCIA Ethernet; from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.5 1998/09/19 10:08:05 maja Exp $	*/
d84 2
a85 2
int ep_isapnp_match __P((struct device *, void *, void *));
void ep_isapnp_attach __P((struct device *, struct device *, void *));
@


1.6.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.6 2000/05/29 18:04:08 aaron Exp $	*/
d84 2
a85 2
int ep_isapnp_match(struct device *, void *, void *);
void ep_isapnp_attach(struct device *, struct device *, void *);
@


1.5
log
@Added if_media support from NetBSD. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.4 1998/09/16 21:16:37 deraadt Exp $	*/
d74 3
@


1.5.8.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.6 2000/05/29 18:04:08 aaron Exp $	*/
a73 3

#include <dev/mii/mii.h>
#include <dev/mii/miivar.h>
@


1.5.8.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d84 2
a85 2
int ep_isapnp_match(struct device *, void *, void *);
void ep_isapnp_attach(struct device *, struct device *, void *);
@


1.5.8.3
log
@Merge with the trunk
@
text
@d68 1
@


1.4
log
@fix ep probe message printouts
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.3 1998/09/11 12:06:57 fgsch Exp $	*/
d56 1
@


1.3
log
@Add a third parameter to epconfig to get the MAC address if it's a pcmcia
card and support it. Use NULL otherwise.
Update the ep based drivers.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.2 1998/03/23 03:06:07 deraadt Exp $	*/
d116 2
@


1.2
log
@fix printing for these; ignore model number
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.1 1998/03/20 05:58:08 dgregor Exp $	*/
d118 1
a118 1
	epconfig(sc, EP_CHIPSET_3C509);
@


1.1
log
@New PnP 'ep' driver.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ep_isapnp.c,v 1.12 1998/02/26 06:44:04 deraadt Exp $	*/
a111 1
	int chipset;
d117 2
a118 13
	/* XXX This probably isn't right.  We should use the PnP ID instead. */
	chipset = htons(epreadeeprom(iot, ioh, EEPROM_PROD_ID));
	if ((chipset & 0xfff0) == PROD_ID_3C509) {
		printf(": 3Com 3C509 Ethernet");
		epconfig(sc, EP_CHIPSET_3C509);
	} else {
		/*
		 * XXX: Maybe a 3c515, but the check in ep_isapnp_probe looks
		 * at the moment only for a 3c509.
		 */
		printf(": unknown card %04x", chipset);
		epconfig(sc, EP_CHIPSET_UNKNOWN);
	}
@


