head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.2
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4;
locks; strict;
comment	@ * @;


1.10
date	2017.06.22.06.21.12;	author jmatthew;	state Exp;
branches;
next	1.9;
commitid	wkzyY2fUO0lPWnL4;

1.9
date	2017.01.10.17.16.39;	author reyk;	state Exp;
branches;
next	1.8;
commitid	P8LvESj9qwBhTMCf;

1.8
date	2016.06.06.17.17.54;	author mikeb;	state Exp;
branches;
next	1.7;
commitid	0WLroaAFB64UlKZN;

1.7
date	2016.01.27.09.04.19;	author reyk;	state Exp;
branches;
next	1.6;
commitid	xjeRSSQ0SXSd3nFz;

1.6
date	2015.12.12.12.33.49;	author reyk;	state Exp;
branches;
next	1.5;
commitid	BGb3xaQZJ9ACCtNF;

1.5
date	2015.11.13.07.52.20;	author mlarkin;	state Exp;
branches;
next	1.4;
commitid	KdsjYlqLpqhwOUHf;

1.4
date	2015.07.28.09.48.52;	author reyk;	state Exp;
branches;
next	1.3;
commitid	DsGre19herlItbcd;

1.3
date	2015.07.23.12.08.42;	author reyk;	state Exp;
branches;
next	1.2;
commitid	zfD59P8hohVRmERs;

1.2
date	2015.07.21.17.59.58;	author reyk;	state Exp;
branches;
next	1.1;
commitid	M3PVBA9XssLCo5BI;

1.1
date	2015.07.21.03.38.22;	author reyk;	state Exp;
branches;
next	;
commitid	t8p39jbat5DBrbFu;


desc
@@


1.10
log
@Add a hypervisor-specific function pointer in pvbus(4) that gets called during
cpu_hatch() on each cpu, allowing initialization of per-cpu features on each
cpu as it starts up.

input from reyk@@ and mikeb@@
ok mikeb@@
@
text
@/*	$OpenBSD: pvvar.h,v 1.9 2017/01/10 17:16:39 reyk Exp $	*/

/*
 * Copyright (c) 2015 Reyk Floeter <reyk@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _DEV_PV_PVVAR_H_
#define _DEV_PV_PVVAR_H_

struct pvbus_req {
	size_t			 pvr_keylen;
	char			*pvr_key;
	size_t			 pvr_valuelen;
	char			*pvr_value;
};

#define PVBUSIOC_KVREAD		_IOWR('V', 1, struct pvbus_req)
#define PVBUSIOC_KVWRITE	_IOWR('V', 2, struct pvbus_req)
#define PVBUSIOC_TYPE		_IOWR('V', 3, struct pvbus_req)

#ifdef _KERNEL
enum {
	PVBUS_KVM,
	PVBUS_HYPERV,
	PVBUS_VMWARE,
	PVBUS_XEN,
	PVBUS_BHYVE,
	PVBUS_OPENBSD,

	PVBUS_MAX
};

enum {
	PVBUS_KVREAD,
	PVBUS_KVWRITE,
	PVBUS_KVLS
};

struct pvbus_hv {
	uint32_t		 hv_base;
	uint32_t		 hv_features;
	uint16_t		 hv_major;
	uint16_t		 hv_minor;

	void			*hv_arg;
	int			(*hv_kvop)(void *, int, char *, char *, size_t);
	void			(*hv_init_cpu)(struct pvbus_hv *);
};

struct pvbus_softc {
	struct device		 pvbus_dev;
	struct pvbus_hv		*pvbus_hv;
};

struct pvbus_attach_args {
	const char		*pvba_busname;
};

struct bus_dma_tag;

struct pv_attach_args {
	const char		*pva_busname;
	struct pvbus_hv		*pva_hv;
	struct bus_dma_tag	*pva_dmat;
};

void	 pvbus_identify(void);
int	 pvbus_probe(void);
void	 pvbus_init_cpu(void);
void	 pvbus_reboot(struct device *);
void	 pvbus_shutdown(struct device *);

#endif /* _KERNEL */
#endif /* _DEV_PV_PVBUS_H_ */
@


1.9
log
@Introduce pvbus_reboot() and pvbus_shutdown() to move the repeated
tasks from the PV drivers into a central place.  While here, we
figured out that it is not needed to check for allowpowerdown on the
hypervisor-initiated shutdown requests.

OK mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pvvar.h,v 1.8 2016/06/06 17:17:54 mikeb Exp $	*/
d59 1
d81 1
@


1.8
log
@Provide a bus_dma tag as part of the pvbus attach arguments

ok reyk (a while ago)
@
text
@d1 1
a1 1
/*	$OpenBSD: pvvar.h,v 1.7 2016/01/27 09:04:19 reyk Exp $	*/
d80 2
@


1.7
log
@Add a key-value interface to pvbus(4) that allows to get or set values
in the underlying information store of the host from the OpenBSD-VM's
userspace.  OpenBSD did not provide access to these stores before,
mostly because we did not want to add a custom tool and interface for
each hypervisor.  The pvbus(4) interface provides backends for
xen(4)'s XenStore and vmt(4)'s VMware Tools "guestinfo".  These
information stores are fairly different, XenStore is a "filesystem"
while vmt is a RPC, and the key-value abstraction limits them a bit
but provides the most wanted functionality.

Discussed with many
OK mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pvvar.h,v 1.6 2015/12/12 12:33:49 reyk Exp $	*/
d70 2
d75 1
@


1.6
log
@Identify hypervisors before configuring other children of the mainbus
(bios, CPU, interrupt handlers, pvbus).  This splits the pvbus attach
function into two parts: pvbus_identify() to scan the CPUID registers
for supported hypervisors and pvbus_attach() to attach the bus, print
information, and configure the children.

This will be needed for Xen and KVM, as discussed with mikeb@@ and sf@@
OK mlarkin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pvvar.h,v 1.5 2015/11/13 07:52:20 mlarkin Exp $	*/
d22 12
d45 6
d56 3
d78 1
@


1.5
log
@
vmm(4) kernel code

circulated on hackers@@, no objections. Disabled by default.
@
text
@d1 1
a1 1
/*	$OpenBSD: pvvar.h,v 1.4 2015/07/28 09:48:52 reyk Exp $	*/
d36 2
a37 1
	uint32_t		 hv_version;
d42 1
a42 1
	struct pvbus_hv		 pvbus_hv[PVBUS_MAX];
d54 1
a54 2
extern int has_hv_cpuid;

@


1.4
log
@Add callbacks for supported hypervisors in pvbus(4) to print more
information and for some generic CPUID/MSR-level initialization.  This
changes the attach/match path a bit.

Hypervisor informatiom may include a version number, for example:
pvbus0 at mainbus0: Hyper-V 6.3.9600

OK mlarkin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pvvar.h,v 1.3 2015/07/23 12:08:42 reyk Exp $	*/
d28 1
@


1.3
log
@Add the bhyve id to recognize if we're running under this hypervisor.

OK mlarkin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pvvar.h,v 1.2 2015/07/21 17:59:58 reyk Exp $	*/
d22 16
d40 1
a40 1
	uint8_t			 pvbus_types;
d49 1
a49 1
	uint8_t			 pva_types;	/* detected hv types */
a52 6

#define PVBUS_KVM	0x01
#define PVBUS_HYPERV	0x02
#define PVBUS_VMWARE	0x04
#define PVBUS_XEN	0x08
#define PVBUS_BHYVE	0x10
@


1.2
log
@Switch pvbus(4) to fully dynamic autoconf - drivers don't have to be
listed in pvbus.c anymore and are defined by the config only.

OK mlarkin@@ sf@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pvvar.h,v 1.1 2015/07/21 03:38:22 reyk Exp $	*/
d42 1
@


1.1
log
@Add pvbus(4), a pseudo-bus to attach non-PCI paravirtual devices and buses.
vmt(4) is moved from mainbus0 to pvbus0, more devices will follow.

OK sf@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a32 1
	uint8_t			 pva_type;	/* required hv type */
@

