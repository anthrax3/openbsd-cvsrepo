head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.6
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.8
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.4
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.13.0.10
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.6
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.11.0.42
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.40
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.38
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.36
	OPENBSD_5_0:1.11.0.34
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.32
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.30
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.26
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.28
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.24
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.22
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.20
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.18
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.16
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.14
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.8.0.14
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.12
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.10
	OPENBSD_2_8:1.8.0.8
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.6
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.4
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.14
date	2015.09.02.01.52.26;	author yasuoka;	state Exp;
branches;
next	1.13;
commitid	CUwlbzT4LejFC15d;

1.13
date	2014.01.24.05.24.07;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2013.12.28.02.51.07;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.20.20.54;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.01.17.00.27;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.14.01.27.13;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	99.08.25.00.54.18;	author mickey;	state Exp;
branches
	1.8.4.1
	1.8.14.1;
next	1.7;

1.7
date	98.12.19.11.35.48;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	98.08.07.05.24.17;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	98.05.25.19.17.39;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	98.05.18.21.51.45;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.10.25.06.58.49;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	97.10.24.19.01.03;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	97.10.21.04.05.54;	author mickey;	state Exp;
branches;
next	;

1.8.4.1
date	2002.03.28.14.52.01;	author niklas;	state Exp;
branches;
next	1.8.4.2;

1.8.4.2
date	2003.06.07.11.07.44;	author ho;	state Exp;
branches;
next	;

1.8.14.1
date	2002.06.11.03.32.24;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Initial commit of uefi boot loader of OpenBSD.

ok deraadt yuo
@
text
@/*	$OpenBSD: bootarg.h,v 1.13 2014/01/24 05:24:07 deraadt Exp $	*/

/*
 * Copyright (c) 1996-1999 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#define	BOOTARG_APIVER	(BAPIV_VECTOR|BAPIV_ENV|BAPIV_BMEMMAP)
#define	BAPIV_ANCIENT	0x00000000	/* MD old i386 bootblocks */
#define	BAPIV_VARS	0x00000001	/* MD structure w/ add info passed */
#define	BAPIV_VECTOR	0x00000002	/* MI vector of MD structures passed */
#define	BAPIV_ENV	0x00000004	/* MI environment vars vector */
#define	BAPIV_BMEMMAP	0x00000008	/* MI memory map passed is in bytes */

typedef struct _boot_args {
	int ba_type;
	size_t ba_size;
	struct _boot_args *ba_next;
	int ba_arg[1];
} bootarg_t;

#define	BOOTARG_ENV	0x1000
#define	BOOTARG_END	-1

#if defined(_KERNEL) || defined(_STANDALONE)
extern void *bootargv;
extern int bootargc;
extern bootarg_t *bootargp;
#endif

void	loadrandom(char *name, char *buf, size_t buflen);
int	mdrandom(char *buf, size_t buflen);

#ifdef _STANDALONE
void addbootarg(int, size_t, void *);
void makebootargs(caddr_t, size_t *);
void makebootargs32(caddr_t, size_t *);
#endif /* _STANDALONE */
@


1.13
log
@remove irrelevant error handling in loadrandom; this operates on the
principe of fire and forget, and we really want developers to start
trying to write per-architecture XOR thingies using timers and such
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.12 2013/12/28 02:51:07 deraadt Exp $	*/
d58 1
@


1.12
log
@Try to load entropy data from disk:/etc/random.seed, and additionally
use a MD-supplied random function.  Then, insert this into the ELF
openbsd.randomdata of the kernel, so that it has entropy right from
the start.  Some help from jsing for the softraid aspects.
Also tested by phessler
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.11 2003/06/02 20:20:54 mickey Exp $	*/
d52 1
a52 1
int	loadrandom(char *name, char *buf, size_t buflen);
@


1.11
log
@three four kill ...
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.10 2003/06/01 17:00:27 deraadt Exp $	*/
d51 3
@


1.10
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.9 2002/03/14 01:27:13 millert Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.9
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.8 1999/08/25 00:54:18 mickey Exp $	*/
d53 1
a53 1
extern int bootargc;                                                     
@


1.8
log
@give better support to the bios memory maps.
provide memory maps editing through the machine memory command.
rearrange probing in machdep, so it provides less output,
also giving a shot for apm to fix the memory maps.
changes to kernel are minimal, only that is required due
to the api version bits addition and such cosmetic changes.
tested on all critical kernel,boot combinations; niklas@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.7 1998/12/19 11:35:48 mickey Exp $	*/
d58 2
a59 2
void addbootarg __P((int, size_t, void *));
void makebootargs __P((caddr_t, size_t *));
@


1.8.14.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.8 1999/08/25 00:54:18 mickey Exp $	*/
d58 2
a59 2
void addbootarg(int, size_t, void *);
void makebootargs(caddr_t, size_t *);
@


1.8.4.1
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d58 2
a59 2
void addbootarg(int, size_t, void *);
void makebootargs(caddr_t, size_t *);
@


1.8.4.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.8.4.1 2002/03/28 14:52:01 niklas Exp $	*/
d15 5
d53 1
a53 1
extern int bootargc;
@


1.7
log
@one more flag for xmas
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.6 1998/08/07 05:24:17 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1996-1998 Michael Shalayeff
d17 1
a17 1
 *	This product includes software developed by Michael Shalayeff.
d21 11
a31 12
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
d34 1
a34 1
#define	BOOTARG_APIVER	(BAPIV_VECTOR|BAPIV_ENV)
@


1.6
log
@environment is there too
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.5 1998/05/25 19:17:39 mickey Exp $	*/
d40 1
@


1.5
log
@make a new file for variable manipulation code; add environment support
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.4 1998/05/18 21:51:45 mickey Exp $	*/
d35 1
a35 1
#define	BOOTARG_APIVER	(BAPIV_VECTOR)
@


1.4
log
@define bitmapped bootarg api version
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.3 1997/10/25 06:58:49 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1996,1997,1998 Michael Shalayeff
@


1.3
log
@new bootargs, store argv at specified location
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.2 1997/10/24 19:01:03 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1996 Michael Shalayeff
d35 6
d48 1
@


1.2
log
@export bootarg* vars
@
text
@d1 1
a1 1
/*	$OpenBSD: bootarg.h,v 1.1 1997/10/21 04:05:54 mickey Exp $	*/
d52 1
a52 1
void *makebootargs __P((size_t *));
@


1.1
log
@argument vector support
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 6
@
