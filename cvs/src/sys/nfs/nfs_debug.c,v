head	1.6;
access;
symbols
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.12
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.8
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.4
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.14
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.12
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.10
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.6
date	2014.09.14.14.17.26;	author jsg;	state Exp;
branches;
next	1.5;
commitid	uzzBR7hz9ncd4O6G;

1.5
date	2014.07.10.13.36.38;	author tedu;	state Exp;
branches;
next	1.4;
commitid	3hV84BLrfx6ukuQ1;

1.4
date	2013.05.31.14.00.08;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2009.08.14.21.16.13;	author thib;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.18.13.57.17;	author thib;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.18.13.36.56;	author thib;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@/*	$OpenBSD: nfs_debug.c,v 1.5 2014/07/10 13:36:38 tedu Exp $ */
/*
 * Copyright (c) 2009 Thordur I. Bjornsson. <thib@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include <sys/param.h>
#include <sys/systm.h>
#include <sys/timeout.h>
#include <sys/mount.h>
#include <sys/kernel.h>
#include <sys/pool.h>
#include <sys/vnode.h>

#include <nfs/rpcv2.h>
#include <nfs/nfsproto.h>
#include <nfs/nfs.h>
#include <nfs/nfsnode.h>
#include <nfs/nfsmount.h>
#include <nfs/nfs_var.h>

#include <machine/db_machdep.h>
#include <ddb/db_interface.h>
#include <ddb/db_output.h>

void
db_show_all_nfsreqs(db_expr_t expr, int haddr, db_expr_t count, char *modif)
{
	int full = 0;

	if (modif[0] == 'f')
		full = 1;

	pool_walk(&nfsreqpl, full, db_printf, nfs_request_print);
}

void
nfs_request_print(void *v, int full, int (*pr)(const char *, ...))
{
	struct nfsreq	*rep = v;

	(*pr)("xid 0x%x flags 0x%x rexmit %i procnum %i proc %p\n",
	    rep->r_xid, rep->r_flags, rep->r_rexmit, rep->r_procnum,
	    rep->r_procp);

	if (full) {
		(*pr)("mreq %p mrep %p md %p nfsmount %p vnode %p timer %i",
		    " rtt %i\n",
		    rep->r_mreq, rep->r_mrep, rep->r_md, rep->r_nmp,
		    rep->r_vp, rep->r_timer, rep->r_rtt);
	}
}

void
db_show_all_nfsnodes(db_expr_t expr, int haddr, db_expr_t count, char *modif)
{
	int full = 0;

	if (modif[0] == 'f')
		full = 1;

	pool_walk(&nfs_node_pool, full, db_printf, nfs_node_print);
}



void
nfs_node_print(void *v, int full, int (*pr)(const char *, ...))
{
	struct nfsnode	*np = v;

	(*pr)("size %llu flag %i vnode %p accstamp %lld\n",
	    np->n_size, np->n_flag, np->n_vnode, (long long)np->n_accstamp);

	if (full) {
		(*pr)("pushedlo %llu pushedhi %llu pushlo %llu pushhi %llu\n",
		    np->n_pushedlo, np->n_pushedhi, np->n_pushlo,
		    np->n_pushhi);
		(*pr)("commitflags %i\n", np->n_commitflags);
	}
}
@


1.5
log
@delete some boolean_t poison
@
text
@d1 1
a1 1
/*	$OpenBSD: nfs_debug.c,v 1.4 2013/05/31 14:00:08 guenther Exp $ */
d19 1
a19 1
#include <sys/proc.h>
@


1.4
log
@Use %lld for printing time_t
@
text
@d1 1
a1 1
/*	$OpenBSD: nfs_debug.c,v 1.3 2009/08/14 21:16:13 thib Exp $ */
d39 1
a39 1
	boolean_t full = FALSE;
d42 1
a42 1
		full = TRUE;
d67 1
a67 1
	boolean_t full = FALSE;
d70 1
a70 1
		full = TRUE;
@


1.3
log
@add ddb functions to be able to show all the nfsnodes in the system
and rewrite the nfsreq code to use pool_walk().

OK beck@@, blambert@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d82 2
a83 2
	(*pr)("size %llu flag %i vnode %p accstamp %i\n",
	    np->n_size, np->n_flag, np->n_vnode, np->n_accstamp);
@


1.2
log
@add $OpenBSD$ tag
@
text
@d22 2
a23 1
#include <sys/queue.h>
d28 3
a35 2
extern struct nfsreqhead nfs_reqq;

d39 1
a39 6
	struct nfsreq	*rep;

	if (TAILQ_EMPTY(&nfs_reqq)) {
		db_printf("no outstanding requests\n");
		return;
	}
d41 2
a42 2
	TAILQ_FOREACH(rep, &nfs_reqq, r_chain)
		db_printf("%p\n", rep);
d44 1
d48 1
a48 1
db_nfsreq_print(struct nfsreq *rep, int full, int (*pr)(const char *, ...))
d50 2
d61 29
@


1.1
log
@Add nfs ddb hooks, for now only to show all the outstanding nfsreq's
and to print out struct nfsreq.

"get it in so people can pound on it" blambert@@
OK and information_s_ on the manpage from miod@@
@
text
@d1 1
@

