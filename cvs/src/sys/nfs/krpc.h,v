head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.18
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.20
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.16
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.12
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.14
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.6
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.10
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.8
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.18
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.16
	OPENBSD_5_0:1.6.0.14
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.12
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.10
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.6
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.8
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.26
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.24
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.22
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.20
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.18
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.16
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.2
	UBC_BASE:1.4
	OPENBSD_3_0:1.3.0.24
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.22
	OPENBSD_2_8:1.3.0.20
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.18
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.16
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2012.12.05.23.20.23;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.17.17.27.24;	author thib;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.27.13;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.14.23.37.33;	author mickey;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	96.04.17.04.50.21;	author mickey;	state Exp;
branches
	1.3.16.1;
next	1.2;

1.2
date	95.12.21.14.42.17;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.21;	author deraadt;	state Exp;
branches;
next	;

1.3.16.1
date	2001.12.05.01.02.40;	author niklas;	state Exp;
branches;
next	1.3.16.2;

1.3.16.2
date	2002.03.28.15.02.48;	author niklas;	state Exp;
branches;
next	;

1.4.2.1
date	2002.06.11.03.32.03;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@/*	$OpenBSD: krpc.h,v 1.6 2008/05/17 17:27:24 thib Exp $	*/
/*	$NetBSD: krpc.h,v 1.4 1995/12/19 23:07:11 cgd Exp $	*/

int krpc_call(struct sockaddr_in *, u_int, u_int, u_int, struct mbuf **,
    struct mbuf **, int);
int krpc_portmap(struct sockaddr_in *, u_int, u_int, u_int16_t *);

struct mbuf *xdr_string_encode(char *, int);
struct mbuf *xdr_string_decode(struct mbuf *, char *, int *);
struct mbuf *xdr_inaddr_encode(struct in_addr *);
struct mbuf *xdr_inaddr_decode(struct mbuf *, struct in_addr *);

/* RPC definitions for the portmapper. */
#define	PMAPPORT		111
#define	PMAPPROG		100000
#define	PMAPVERS		2
#define	PMAPPROC_NULL		0
#define	PMAPPROC_SET		1
#define	PMAPPROC_UNSET		2
#define	PMAPPROC_GETPORT	3
#define	PMAPPROC_DUMP		4
#define	PMAPPROC_CALLIT		5

/* RPC definitions for bootparamd. */
#define	BOOTPARAM_PROG		100026
#define	BOOTPARAM_VERS		1
#define BOOTPARAM_WHOAMI	1
#define BOOTPARAM_GETFILE	2

@


1.6
log
@KNF. No names for arguments in function prototypes, regroup
functions and make some comments nicer...
@
text
@d1 1
a1 1
/*	$OpenBSD: krpc.h,v 1.5 2002/03/14 01:27:13 millert Exp $	*/
a2 2

#include <sys/cdefs.h>
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: krpc.h,v 1.4 2001/11/14 23:37:33 mickey Exp $	*/
d6 8
a13 3
int krpc_call(struct sockaddr_in *sin,
	u_int prog, u_int vers, u_int func,
	struct mbuf **data, struct mbuf **from, int retries);
d15 1
a15 12
int krpc_portmap(struct sockaddr_in *sin,
	u_int prog, u_int vers, u_int16_t *portp);

struct mbuf *xdr_string_encode(char *str, int len);
struct mbuf *xdr_string_decode(struct mbuf *m, char *str, int *len_p);
struct mbuf *xdr_inaddr_encode(struct in_addr *ia);
struct mbuf *xdr_inaddr_decode(struct mbuf *m, struct in_addr *ia);


/*
 * RPC definitions for the portmapper
 */
d26 1
a26 4

/*
 * RPC definitions for bootparamd
 */
@


1.4
log
@allow swaples diskless configs; deradt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: krpc.h,v 1.3 1996/04/17 04:50:21 mickey Exp $	*/
d6 1
a6 1
int krpc_call __P((struct sockaddr_in *sin,
d8 1
a8 1
	struct mbuf **data, struct mbuf **from, int retries));
d10 2
a11 2
int krpc_portmap __P((struct sockaddr_in *sin,
	u_int prog, u_int vers, u_int16_t *portp));
d13 4
a16 4
struct mbuf *xdr_string_encode __P((char *str, int len));
struct mbuf *xdr_string_decode __P((struct mbuf *m, char *str, int *len_p));
struct mbuf *xdr_inaddr_encode __P((struct in_addr *ia));
struct mbuf *xdr_inaddr_decode __P((struct mbuf *m, struct in_addr *ia));
@


1.4.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: krpc.h,v 1.4 2001/11/14 23:37:33 mickey Exp $	*/
d6 1
a6 1
int krpc_call(struct sockaddr_in *sin,
d8 1
a8 1
	struct mbuf **data, struct mbuf **from, int retries);
d10 2
a11 2
int krpc_portmap(struct sockaddr_in *sin,
	u_int prog, u_int vers, u_int16_t *portp);
d13 4
a16 4
struct mbuf *xdr_string_encode(char *str, int len);
struct mbuf *xdr_string_decode(struct mbuf *m, char *str, int *len_p);
struct mbuf *xdr_inaddr_encode(struct in_addr *ia);
struct mbuf *xdr_inaddr_decode(struct mbuf *m, struct in_addr *ia);
@


1.3
log
@Minor cleanups. Checked against Lite2.
(NetBSD's was really just a Lite2's, but w/ 64bit support)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d8 1
a8 1
	struct mbuf **data, struct mbuf **from));
@


1.3.16.1
log
@Merge in -current
@
text
@d8 1
a8 1
	struct mbuf **data, struct mbuf **from, int retries));
@


1.3.16.2
log
@Merge in -current from roughly a week ago
@
text
@d6 1
a6 1
int krpc_call(struct sockaddr_in *sin,
d8 1
a8 1
	struct mbuf **data, struct mbuf **from, int retries);
d10 2
a11 2
int krpc_portmap(struct sockaddr_in *sin,
	u_int prog, u_int vers, u_int16_t *portp);
d13 4
a16 4
struct mbuf *xdr_string_encode(char *str, int len);
struct mbuf *xdr_string_decode(struct mbuf *m, char *str, int *len_p);
struct mbuf *xdr_inaddr_encode(struct in_addr *ia);
struct mbuf *xdr_inaddr_decode(struct mbuf *m, struct in_addr *ia);
@


1.2
log
@from cgd; handle 64-bit pointers and longs
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: krpc.h,v 1.3 1995/04/24 21:54:56 gwr Exp $	*/
d5 2
a6 2
int krpc_call __P((struct sockaddr_in *sin, \
	u_int prog, u_int vers, u_int func, \
d9 1
a9 1
int krpc_portmap __P((struct sockaddr_in *sin, \
d12 4
a15 4
struct mbuf * xdr_string_encode __P((char *str, int len));
struct mbuf * xdr_string_decode __P((struct mbuf *m, char *str, int *len_p));
struct mbuf * xdr_inaddr_encode __P((struct in_addr *ia));
struct mbuf * xdr_inaddr_decode __P((struct mbuf *m, struct in_addr *ia));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
