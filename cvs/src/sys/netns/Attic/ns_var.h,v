head	1.9;
access;
symbols
	OPENBSD_3_7:1.8.0.14
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.12
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.10
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.8
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.6.0.24
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.22
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.20
	OPENBSD_2_8:1.6.0.18
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.16
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.14
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.12
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.10
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.8
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.6
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4;
locks; strict;
comment	@ * @;


1.9
date	2005.06.17.21.02.51;	author henning;	state dead;
branches;
next	1.8;

1.8
date	2002.03.14.03.16.12;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.27.13;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.10.21.11.07.12;	author mickey;	state Exp;
branches
	1.6.14.1
	1.6.24.1;
next	1.5;

1.5
date	96.10.21.10.58.20;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.05.07.05.53.40;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.24.08.46.20;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.04.21.22.30.13;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.03.04.08.20.32;	author niklas;	state Exp;
branches;
next	;

1.6.14.1
date	2002.03.28.14.57.38;	author niklas;	state Exp;
branches;
next	;

1.6.24.1
date	2002.06.11.03.31.38;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@rot in Attic
@
text
@/*	$OpenBSD: ns_var.h,v 1.8 2002/03/14 03:16:12 millert Exp $	*/

#ifdef _KERNEL
struct socket;
struct nspcb;
struct ifnet;
struct ns_ifaddr;
struct sockaddr_ns;
struct mbuf;
struct ns_addr;
struct route;
struct rtentry;
struct ifnet_en;
struct in_addr;
struct sockaddr;

/* ns.c */
int ns_control(struct socket *, u_long, caddr_t, struct ifnet *);
void ns_ifscrub(struct ifnet *, struct ns_ifaddr *);
int ns_ifinit(struct ifnet *, struct ns_ifaddr *, struct sockaddr_ns *,
		   int);
struct ns_ifaddr *ns_iaonnetof(struct ns_addr *);

/* ns_cksum.c */
u_short ns_cksum(struct mbuf *, int);

/* ns_error.c */
int ns_err_x(int);
void ns_error(struct mbuf *, int, int );
void ns_printhost(struct ns_addr *);
void ns_err_input(struct mbuf *);
u_long nstime(void);
int ns_echo(struct mbuf *);

/* ns_input.c */
void ns_init(void);
void nsintr(void);
void *idp_ctlinput(int, struct sockaddr *, void *);
void idp_forward(struct mbuf *);
int idp_do_route(struct ns_addr *, struct route *);
void idp_undo_route(struct route *);
void ns_watch_output(struct mbuf *, struct ifnet *);

/* ns_ip.c */
struct ifnet_en *nsipattach(void);
int nsipioctl(struct ifnet *, u_long, caddr_t);
void idpip_input(struct mbuf *, ...);
int nsipoutput(struct ifnet *, struct mbuf *, struct sockaddr *,     
		struct rtentry *);
void nsipstart(struct ifnet *);
int nsip_route(struct mbuf *);
int nsip_free(struct ifnet *);
void *nsip_ctlinput(int, struct sockaddr *, void *);
int nsip_rtchange(struct in_addr *);

/* ns_output.c */
int ns_output(struct mbuf *, ...);

/* ns_pcb.c */
int ns_pcballoc(struct socket *, struct nspcb *);
int ns_pcbbind(struct nspcb *, struct mbuf *);
int ns_pcbconnect(struct nspcb *, struct mbuf *);
void ns_pcbdisconnect(struct nspcb *);
void ns_pcbdetach(struct nspcb *);
void ns_setsockaddr(struct nspcb *, struct mbuf *);
void ns_setpeeraddr(struct nspcb *, struct mbuf *);
void ns_pcbnotify(struct ns_addr *, int, void (*)(struct nspcb *), long);
void ns_rtchange(struct nspcb *);
struct nspcb *ns_pcblookup(struct ns_addr *, u_short, int);

#endif
@


1.8
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: ns_var.h,v 1.7 2002/03/14 01:27:13 millert Exp $	*/
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ns_var.h,v 1.6 1996/10/21 11:07:12 mickey Exp $	*/
d67 1
a67 1
void ns_pcbnotify __P((struct ns_addr *, int, void (*)(struct nspcb *), long));
@


1.6
log
@missing struct rtentry prototype
@
text
@d1 1
a1 1
/*	$OpenBSD: ns_var.h,v 1.5 1996/10/21 10:58:20 mickey Exp $	*/
d18 5
a22 5
int ns_control __P((struct socket *, u_long, caddr_t, struct ifnet *));
void ns_ifscrub __P((struct ifnet *, struct ns_ifaddr *));
int ns_ifinit __P((struct ifnet *, struct ns_ifaddr *, struct sockaddr_ns *,
		   int));
struct ns_ifaddr *ns_iaonnetof __P((struct ns_addr *));
d25 1
a25 1
u_short ns_cksum __P((struct mbuf *, int));
d28 6
a33 6
int ns_err_x __P((int));
void ns_error __P((struct mbuf *, int, int ));
void ns_printhost __P((struct ns_addr *));
void ns_err_input __P((struct mbuf *));
u_long nstime __P((void));
int ns_echo __P((struct mbuf *));
d36 7
a42 7
void ns_init __P((void));
void nsintr __P((void));
void *idp_ctlinput __P((int, struct sockaddr *, void *));
void idp_forward __P((struct mbuf *));
int idp_do_route __P((struct ns_addr *, struct route *));
void idp_undo_route __P((struct route *));
void ns_watch_output __P((struct mbuf *, struct ifnet *));
d45 10
a54 10
struct ifnet_en *nsipattach __P((void));
int nsipioctl __P((struct ifnet *, u_long, caddr_t));
void idpip_input __P((struct mbuf *, ...));
int nsipoutput __P((struct ifnet *, struct mbuf *, struct sockaddr *,     
		struct rtentry *));
void nsipstart __P((struct ifnet *));
int nsip_route __P((struct mbuf *));
int nsip_free __P((struct ifnet *));
void *nsip_ctlinput __P((int, struct sockaddr *, void *));
int nsip_rtchange __P((struct in_addr *));
d57 1
a57 1
int ns_output __P((struct mbuf *, ...));
d60 7
a66 7
int ns_pcballoc __P((struct socket *, struct nspcb *));
int ns_pcbbind __P((struct nspcb *, struct mbuf *));
int ns_pcbconnect __P((struct nspcb *, struct mbuf *));
void ns_pcbdisconnect __P((struct nspcb *));
void ns_pcbdetach __P((struct nspcb *));
void ns_setsockaddr __P((struct nspcb *, struct mbuf *));
void ns_setpeeraddr __P((struct nspcb *, struct mbuf *));
d68 2
a69 2
void ns_rtchange __P((struct nspcb *));
struct nspcb *ns_pcblookup __P((struct ns_addr *, u_short, int));
@


1.6.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ns_var.h,v 1.6 1996/10/21 11:07:12 mickey Exp $	*/
d18 5
a22 5
int ns_control(struct socket *, u_long, caddr_t, struct ifnet *);
void ns_ifscrub(struct ifnet *, struct ns_ifaddr *);
int ns_ifinit(struct ifnet *, struct ns_ifaddr *, struct sockaddr_ns *,
		   int);
struct ns_ifaddr *ns_iaonnetof(struct ns_addr *);
d25 1
a25 1
u_short ns_cksum(struct mbuf *, int);
d28 6
a33 6
int ns_err_x(int);
void ns_error(struct mbuf *, int, int );
void ns_printhost(struct ns_addr *);
void ns_err_input(struct mbuf *);
u_long nstime(void);
int ns_echo(struct mbuf *);
d36 7
a42 7
void ns_init(void);
void nsintr(void);
void *idp_ctlinput(int, struct sockaddr *, void *);
void idp_forward(struct mbuf *);
int idp_do_route(struct ns_addr *, struct route *);
void idp_undo_route(struct route *);
void ns_watch_output(struct mbuf *, struct ifnet *);
d45 10
a54 10
struct ifnet_en *nsipattach(void);
int nsipioctl(struct ifnet *, u_long, caddr_t);
void idpip_input(struct mbuf *, ...);
int nsipoutput(struct ifnet *, struct mbuf *, struct sockaddr *,     
		struct rtentry *);
void nsipstart(struct ifnet *);
int nsip_route(struct mbuf *);
int nsip_free(struct ifnet *);
void *nsip_ctlinput(int, struct sockaddr *, void *);
int nsip_rtchange(struct in_addr *);
d57 1
a57 1
int ns_output(struct mbuf *, ...);
d60 10
a69 10
int ns_pcballoc(struct socket *, struct nspcb *);
int ns_pcbbind(struct nspcb *, struct mbuf *);
int ns_pcbconnect(struct nspcb *, struct mbuf *);
void ns_pcbdisconnect(struct nspcb *);
void ns_pcbdetach(struct nspcb *);
void ns_setsockaddr(struct nspcb *, struct mbuf *);
void ns_setpeeraddr(struct nspcb *, struct mbuf *);
void ns_pcbnotify(struct ns_addr *, int, void (*)(struct nspcb *), long);
void ns_rtchange(struct nspcb *);
struct nspcb *ns_pcblookup(struct ns_addr *, u_short, int);
@


1.6.14.1
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d18 5
a22 5
int ns_control(struct socket *, u_long, caddr_t, struct ifnet *);
void ns_ifscrub(struct ifnet *, struct ns_ifaddr *);
int ns_ifinit(struct ifnet *, struct ns_ifaddr *, struct sockaddr_ns *,
		   int);
struct ns_ifaddr *ns_iaonnetof(struct ns_addr *);
d25 1
a25 1
u_short ns_cksum(struct mbuf *, int);
d28 6
a33 6
int ns_err_x(int);
void ns_error(struct mbuf *, int, int );
void ns_printhost(struct ns_addr *);
void ns_err_input(struct mbuf *);
u_long nstime(void);
int ns_echo(struct mbuf *);
d36 7
a42 7
void ns_init(void);
void nsintr(void);
void *idp_ctlinput(int, struct sockaddr *, void *);
void idp_forward(struct mbuf *);
int idp_do_route(struct ns_addr *, struct route *);
void idp_undo_route(struct route *);
void ns_watch_output(struct mbuf *, struct ifnet *);
d45 10
a54 10
struct ifnet_en *nsipattach(void);
int nsipioctl(struct ifnet *, u_long, caddr_t);
void idpip_input(struct mbuf *, ...);
int nsipoutput(struct ifnet *, struct mbuf *, struct sockaddr *,     
		struct rtentry *);
void nsipstart(struct ifnet *);
int nsip_route(struct mbuf *);
int nsip_free(struct ifnet *);
void *nsip_ctlinput(int, struct sockaddr *, void *);
int nsip_rtchange(struct in_addr *);
d57 1
a57 1
int ns_output(struct mbuf *, ...);
d60 10
a69 10
int ns_pcballoc(struct socket *, struct nspcb *);
int ns_pcbbind(struct nspcb *, struct mbuf *);
int ns_pcbconnect(struct nspcb *, struct mbuf *);
void ns_pcbdisconnect(struct nspcb *);
void ns_pcbdetach(struct nspcb *);
void ns_setsockaddr(struct nspcb *, struct mbuf *);
void ns_setpeeraddr(struct nspcb *, struct mbuf *);
void ns_pcbnotify(struct ns_addr *, int, void (*)(struct nspcb *), long);
void ns_rtchange(struct nspcb *);
struct nspcb *ns_pcblookup(struct ns_addr *, u_short, int);
@


1.5
log
@-Wall happiness
@
text
@d1 1
a1 1
/*	$OpenBSD: ns_var.h,v 1.2 1996/04/21 22:30:13 deraadt Exp $	*/
d12 1
@


1.4
log
@add local decl of sockaddr
@
text
@d47 2
a48 1
int nsipoutput __P((struct ifnet_en *, struct mbuf *, struct sockaddr *));
@


1.3
log
@Fix prototyping.
@
text
@d14 1
@


1.2
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: ns_var.h,v 1.1 1996/03/04 08:20:32 niklas Exp $	*/
d45 1
a45 1
int idpip_input __P((struct mbuf *, struct ifnet *));
@


1.1
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d65 1
a65 1
int ns_rtchange __P((struct nspcb *));
@
