head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.6
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.2
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.19.0.10
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.12
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.4
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.8
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.6
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.17.0.34
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.32
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.30
	OPENBSD_5_0:1.17.0.28
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.26
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.24
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.20
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.22
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.18
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.16
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.14
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.12
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.17.0.10
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.8
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.6
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.4
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.17.0.2
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.16.0.4
	OPENBSD_3_6_BASE:1.16
	SMP_SYNC_A:1.16
	SMP_SYNC_B:1.16
	OPENBSD_3_5:1.16.0.2
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.14.0.6
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.4
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	UBC_SYNC_B:1.14
	UBC:1.12.0.2
	UBC_BASE:1.12
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_8:1.7.0.12
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.10
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.8
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.6
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2016.06.19.11.54.33;	author natano;	state Exp;
branches;
next	1.19;
commitid	wHLNY5GFNXJSFYaC;

1.19
date	2013.06.02.01.07.39;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2013.05.30.17.35.01;	author guenther;	state Exp;
branches;
next	1.17;

1.17
date	2004.10.04.23.37.37;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2003.09.23.16.51.12;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.02.23.28.05;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.03.14.01.27.03;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.19.08.58.06;	author art;	state Exp;
branches;
next	1.12;

1.12
date	2001.12.10.18.49.51;	author art;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2001.12.10.04.45.31;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.23.02.14.22;	author csapuntz;	state Exp;
branches;
next	1.9;

1.9
date	2001.02.24.10.37.10;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.23.14.42.38;	author csapuntz;	state Exp;
branches;
next	1.7;

1.7
date	98.08.21.23.31.34;	author csapuntz;	state Exp;
branches
	1.7.8.1;
next	1.6;

1.6
date	97.11.08.17.21.07;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	97.11.06.05.58.11;	author csapuntz;	state Exp;
branches;
next	1.4;

1.4
date	97.10.06.20.19.44;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.10.06.15.08.42;	author csapuntz;	state Exp;
branches;
next	1.2;

1.2
date	96.02.29.10.12.21;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.42;	author deraadt;	state Exp;
branches;
next	;

1.7.8.1
date	2001.05.14.22.32.37;	author niklas;	state Exp;
branches;
next	1.7.8.2;

1.7.8.2
date	2001.07.04.10.48.08;	author niklas;	state Exp;
branches;
next	1.7.8.3;

1.7.8.3
date	2002.03.28.15.02.00;	author niklas;	state Exp;
branches;
next	1.7.8.4;

1.7.8.4
date	2003.06.07.11.03.39;	author ho;	state Exp;
branches;
next	1.7.8.5;

1.7.8.5
date	2004.02.19.10.56.36;	author niklas;	state Exp;
branches;
next	;

1.12.2.1
date	2002.06.11.03.29.20;	author art;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Remove the lockmgr() API. It is only used by filesystems, where it is a
trivial change to use rrw locks instead. All it needs is LK_* defines
for the RW_* flags.

tested by naddy and sthen on package building infrastructure
input and ok jmc mpi tedu
@
text
@/*	$OpenBSD: cd9660_node.h,v 1.19 2013/06/02 01:07:39 deraadt Exp $	*/
/*	$NetBSD: cd9660_node.h,v 1.15 1997/04/11 21:52:01 kleink Exp $	*/

/*-
 * Copyright (c) 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley
 * by Pace Willisson (pace@@blitz.com).  The Rock Ridge Extension
 * Support code is derived from software contributed to Berkeley
 * by Atsushi Murai (amurai@@spec.co.jp).
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)cd9660_node.h	8.4 (Berkeley) 12/5/94
 */

#include <sys/buf.h>

#define doff_t	u_quad_t

typedef	struct	{
	struct timespec	iso_atime;	/* time of last access */
	struct timespec	iso_mtime;	/* time of last modification */
	struct timespec	iso_ctime;	/* time file changed */
	u_short		iso_mode;	/* files access mode and type */
	uid_t		iso_uid;	/* owner user id */
	gid_t		iso_gid;	/* owner group id */
	short		iso_links;	/* links of file */
	dev_t		iso_rdev;	/* Major/Minor number for special */
} ISO_RRIP_INODE;

struct iso_node {
	struct	iso_node *i_next, **i_prev;	/* hash chain */
	struct	vnode *i_vnode;	/* vnode associated with this inode */
	struct	vnode *i_devvp;	/* vnode for block I/O */
	u_int	i_flag;		/* see below */
	dev_t	i_dev;		/* device where inode resides */
	cdino_t	i_number;	/* the identity of the inode */
				/* we use the actual starting block of the file */
	struct	iso_mnt *i_mnt;	/* filesystem associated with this inode */
	struct	lockf *i_lockf;	/* head of byte-level lock list */
	doff_t	i_endoff;	/* end of useful stuff in directory */
	doff_t	i_diroff;	/* offset in dir, where we found last entry */
	doff_t	i_offset;	/* offset of free space in directory */
	cdino_t	i_ino;		/* inode number of found directory */
	struct	rrwlock i_lock;	/* node lock */

	doff_t	iso_extent;	/* extent of file */
	doff_t	i_size;
	/*
	 * Actual start of data file (may be different from iso_extent, if the
	 * file has extended attributes).
	 */
	doff_t	iso_start;

	ISO_RRIP_INODE  inode;
	struct cluster_info i_ci; 
};

#define	i_forw		i_chain[0]
#define	i_back		i_chain[1]

/* flags */
#define	IN_ACCESS	0x0020		/* inode access time to be updated */

#define VTOI(vp) ((struct iso_node *)(vp)->v_data)
#define ITOV(ip) ((ip)->i_vnode)

/*
 * Prototypes for ISOFS vnode operations
 */
int	cd9660_lookup(void *);
int	cd9660_open(void *);
int	cd9660_close(void *);
int	cd9660_access(void *);
int	cd9660_getattr(void *);
int	cd9660_setattr(void *);
int	cd9660_read(void *);
int	cd9660_ioctl(void *);
int	cd9660_poll(void *);
int	cd9660_mmap(void *);
int	cd9660_seek(void *);
int	cd9660_readdir(void *);
int	cd9660_readlink(void *);
int	cd9660_abortop(void *);
int	cd9660_inactive(void *);
int	cd9660_reclaim(void *);
int	cd9660_link(void *);
int	cd9660_symlink(void *);
int	cd9660_bmap(void *);
int	cd9660_lock(void *);
int	cd9660_unlock(void *);
int	cd9660_strategy(void *);
int	cd9660_print(void *);
int	cd9660_islocked(void *);
int	cd9660_pathconf(void *);

int	cd9660_bufatoff(struct iso_node *, off_t, char **, struct buf **);

void	cd9660_defattr(struct iso_directory_record *, struct iso_node *,
    struct buf *);
void	cd9660_deftstamp(struct iso_directory_record *, struct iso_node *,
    struct buf *);
struct	vnode *cd9660_ihashget(dev_t, cdino_t);
int	cd9660_ihashins(struct iso_node *);
void	cd9660_ihashrem(struct iso_node *);
int	cd9660_tstamp_conv7(u_char *, struct timespec *);
int	cd9660_tstamp_conv17(u_char *, struct timespec *);
int	cd9660_vget_internal(struct mount *, cdino_t, struct vnode **, int,
    struct iso_directory_record *);
@


1.19
log
@Remove disabled ISODEVMAP support.  dev_t's on one system will not be
similar on another, so using that is crazy.
ok guenther krw
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.18 2013/05/30 17:35:01 guenther Exp $	*/
d69 1
a69 1
	struct  lock i_lock;    /* node lock */
@


1.18
log
@CD filesystems don't do inode numbers >2^32, so use a smaller type internally,
only using ino_t in the VFS layer APIs: vget, readdir, getattr.

ok matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.17 2004/10/04 23:37:37 millert Exp $	*/
a53 12

#ifdef ISODEVMAP
/*
 * FOr device# (major,minor) translation table
 */
struct iso_dnode {
	struct iso_dnode *d_next, **d_prev;	/* hash chain */
	dev_t		i_dev;		/* device where dnode resides */
	cdino_t		i_number;	/* the identity of the inode */
	dev_t		d_dev;		/* device # for translation */
};
#endif
@


1.17
log
@Make doff_t u_quad_t.  This allows me to read iso9660 DVD-ROMs that
are > 2GB.  doff_t should really be off_t but making it signed
exposed a bug that I haven't tried to track down yet.
Based on a patch from and OK by pedro@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.16 2003/09/23 16:51:12 millert Exp $	*/
d62 1
a62 1
	ino_t		i_number;	/* the identity of the inode */
d73 1
a73 1
	ino_t	i_number;	/* the identity of the inode */
d80 1
a80 1
	ino_t	i_ino;		/* inode number of found directory */
d139 1
a139 1
struct	vnode *cd9660_ihashget(dev_t, ino_t);
d144 1
a144 1
int	cd9660_vget_internal(struct mount *, ino_t, struct vnode **, int,
a145 5
ino_t	isodirino(struct iso_directory_record *, struct iso_mnt *);
#ifdef	ISODEVMAP
struct	iso_dnode *iso_dmap(dev_t, ino_t, int);
void	iso_dunmap(dev_t);
#endif
@


1.16
log
@Replace select backends with poll backends.  selscan() and pollscan()
now call the poll backend.  With this change we implement greater
poll(2) functionality instead of emulating it via the select backend.
Adapted from NetBSD and including some changes from FreeBSD.
Tested by many, deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.15 2003/06/02 23:28:05 millert Exp $	*/
d42 1
a42 8
/*
 * Theoretically, directories can be more than 2Gb in length,
 * however, in practice this seems unlikely. So, we define
 * the type doff_t as a long to keep down the cost of doing
 * lookup on a 32-bit machine. If you are porting to a 64-bit
 * architecture, you should make doff_t the same as off_t.
 */
#define doff_t	long
d71 1
a71 1
	u_long	i_flag;		/* see below */
d83 8
a90 4
	long iso_extent;	/* extent of file */
	long i_size;
	long iso_start;		/* actual start of data of file (may be different */
				/* from iso_extent, if file has extended attributes) */
@


1.15
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.14 2002/03/14 01:27:03 millert Exp $	*/
d118 1
a118 1
int	cd9660_select(void *);
@


1.14
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.13 2001/12/19 08:58:06 art Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.13
log
@UBC was a disaster. It worked very good when it worked, but on some
machines or some configurations or in some phase of the moon (we actually
don't know when or why) files disappeared. Since we've not been able to
track down the problem in two weeks intense debugging and we need -current
to be stable, back out everything to a state it had before UBC.

We apologise for the inconvenience.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.10 2001/06/23 02:14:22 csapuntz Exp $	*/
d114 25
a138 25
int	cd9660_lookup __P((void *));
int	cd9660_open __P((void *));
int	cd9660_close __P((void *));
int	cd9660_access __P((void *));
int	cd9660_getattr __P((void *));
int	cd9660_setattr __P((void *));
int	cd9660_read __P((void *));
int	cd9660_ioctl __P((void *));
int	cd9660_select __P((void *));
int	cd9660_mmap __P((void *));
int	cd9660_seek __P((void *));
int	cd9660_readdir __P((void *));
int	cd9660_readlink __P((void *));
int	cd9660_abortop __P((void *));
int	cd9660_inactive __P((void *));
int	cd9660_reclaim __P((void *));
int	cd9660_link __P((void *));
int	cd9660_symlink __P((void *));
int	cd9660_bmap __P((void *));
int	cd9660_lock __P((void *));
int	cd9660_unlock __P((void *));
int	cd9660_strategy __P((void *));
int	cd9660_print __P((void *));
int	cd9660_islocked __P((void *));
int	cd9660_pathconf __P((void *));
d142 12
a153 12
void	cd9660_defattr __P((struct iso_directory_record *, struct iso_node *,
    struct buf *));
void	cd9660_deftstamp __P((struct iso_directory_record *, struct iso_node *,
    struct buf *));
struct	vnode *cd9660_ihashget __P((dev_t, ino_t));
int	cd9660_ihashins __P((struct iso_node *));
void	cd9660_ihashrem __P((struct iso_node *));
int	cd9660_tstamp_conv7 __P((u_char *, struct timespec *));
int	cd9660_tstamp_conv17 __P((u_char *, struct timespec *));
int	cd9660_vget_internal __P((struct mount *, ino_t, struct vnode **, int,
    struct iso_directory_record *));
ino_t	isodirino __P((struct iso_directory_record *, struct iso_mnt *));
d155 2
a156 2
struct	iso_dnode *iso_dmap __P((dev_t, ino_t, int));
void	iso_dunmap __P((dev_t));
@


1.12
log
@Since VOP_READ is never called on VDIR vnodes and ext2fs_read
is only in the vnodeops in VREG and VDIR vnodes, we can remove tons of
code here.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.11 2001/12/10 04:45:31 art Exp $	*/
a44 1
#include <miscfs/genfs/genfs.h>
a78 1
	struct	genfs_node i_gnode;
d99 1
@


1.12.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.12 2001/12/10 18:49:51 art Exp $	*/
d115 25
a139 25
int	cd9660_lookup(void *);
int	cd9660_open(void *);
int	cd9660_close(void *);
int	cd9660_access(void *);
int	cd9660_getattr(void *);
int	cd9660_setattr(void *);
int	cd9660_read(void *);
int	cd9660_ioctl(void *);
int	cd9660_select(void *);
int	cd9660_mmap(void *);
int	cd9660_seek(void *);
int	cd9660_readdir(void *);
int	cd9660_readlink(void *);
int	cd9660_abortop(void *);
int	cd9660_inactive(void *);
int	cd9660_reclaim(void *);
int	cd9660_link(void *);
int	cd9660_symlink(void *);
int	cd9660_bmap(void *);
int	cd9660_lock(void *);
int	cd9660_unlock(void *);
int	cd9660_strategy(void *);
int	cd9660_print(void *);
int	cd9660_islocked(void *);
int	cd9660_pathconf(void *);
d143 12
a154 12
void	cd9660_defattr(struct iso_directory_record *, struct iso_node *,
    struct buf *);
void	cd9660_deftstamp(struct iso_directory_record *, struct iso_node *,
    struct buf *);
struct	vnode *cd9660_ihashget(dev_t, ino_t);
int	cd9660_ihashins(struct iso_node *);
void	cd9660_ihashrem(struct iso_node *);
int	cd9660_tstamp_conv7(u_char *, struct timespec *);
int	cd9660_tstamp_conv17(u_char *, struct timespec *);
int	cd9660_vget_internal(struct mount *, ino_t, struct vnode **, int,
    struct iso_directory_record *);
ino_t	isodirino(struct iso_directory_record *, struct iso_mnt *);
d156 2
a157 2
struct	iso_dnode *iso_dmap(dev_t, ino_t, int);
void	iso_dunmap(dev_t);
@


1.11
log
@Big cleanup inspired by NetBSD with some parts of the code from NetBSD.
 - get rid of VOP_BALLOCN and VOP_SIZE
 - move the generic getpages and putpages into miscfs/genfs
 - create a genfs_node which must be added to the top of the private portion
   of each vnode for filsystems that want to use genfs_{get,put}pages
 - rename genfs_mmap to vop_generic_mmap
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.10 2001/06/23 02:14:22 csapuntz Exp $	*/
a100 1
	struct cluster_info i_ci; 
@


1.10
log
@Get rid of several unused vnode operations
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.9 2001/02/24 10:37:10 deraadt Exp $	*/
d45 1
d80 1
@


1.9
log
@repair cluster structure damage
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.8 2001/02/23 14:42:38 csapuntz Exp $	*/
d139 2
a140 1
int	cd9660_blkatoff __P((void *));
@


1.8
log
@

Remove the clustering fields from the vnodes and place them in the
file system inode instead
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.7 1998/08/21 23:31:34 csapuntz Exp $	*/
d43 2
@


1.7
log
@

Fix malloc race in the cd9660 fs.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.6 1997/11/08 17:21:07 niklas Exp $	*/
d97 1
@


1.7.8.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.9 2001/02/24 10:37:10 deraadt Exp $	*/
a43 2
#include <sys/buf.h>

a96 1
	struct cluster_info i_ci; 
@


1.7.8.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.7.8.1 2001/05/14 22:32:37 niklas Exp $	*/
d139 1
a139 2

int	cd9660_bufatoff(struct iso_node *, off_t, char **, struct buf **);
@


1.7.8.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d114 25
a138 25
int	cd9660_lookup(void *);
int	cd9660_open(void *);
int	cd9660_close(void *);
int	cd9660_access(void *);
int	cd9660_getattr(void *);
int	cd9660_setattr(void *);
int	cd9660_read(void *);
int	cd9660_ioctl(void *);
int	cd9660_select(void *);
int	cd9660_mmap(void *);
int	cd9660_seek(void *);
int	cd9660_readdir(void *);
int	cd9660_readlink(void *);
int	cd9660_abortop(void *);
int	cd9660_inactive(void *);
int	cd9660_reclaim(void *);
int	cd9660_link(void *);
int	cd9660_symlink(void *);
int	cd9660_bmap(void *);
int	cd9660_lock(void *);
int	cd9660_unlock(void *);
int	cd9660_strategy(void *);
int	cd9660_print(void *);
int	cd9660_islocked(void *);
int	cd9660_pathconf(void *);
d142 12
a153 12
void	cd9660_defattr(struct iso_directory_record *, struct iso_node *,
    struct buf *);
void	cd9660_deftstamp(struct iso_directory_record *, struct iso_node *,
    struct buf *);
struct	vnode *cd9660_ihashget(dev_t, ino_t);
int	cd9660_ihashins(struct iso_node *);
void	cd9660_ihashrem(struct iso_node *);
int	cd9660_tstamp_conv7(u_char *, struct timespec *);
int	cd9660_tstamp_conv17(u_char *, struct timespec *);
int	cd9660_vget_internal(struct mount *, ino_t, struct vnode **, int,
    struct iso_directory_record *);
ino_t	isodirino(struct iso_directory_record *, struct iso_mnt *);
d155 2
a156 2
struct	iso_dnode *iso_dmap(dev_t, ino_t, int);
void	iso_dunmap(dev_t);
@


1.7.8.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.7.8.3 2002/03/28 15:02:00 niklas Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.7.8.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d118 1
a118 1
int	cd9660_poll(void *);
@


1.6
log
@Sync to NetBSD; some extra KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.5 1997/11/06 05:58:11 csapuntz Exp $	*/
d143 1
a143 1
void	cd9660_ihashins __P((struct iso_node *));
@


1.5
log
@Updates for VFS Lite 2 + soft update.
@
text
@d1 2
a2 2
/*	$OpenBSD: cd9660_node.h,v 1.4 1997/10/06 20:19:44 deraadt Exp $	*/
/*	$NetBSD: cd9660_node.h,v 1.11 1996/02/09 21:32:00 christos Exp $	*/
d111 39
a149 40
int cd9660_enotsupp __P((void *));
int cd9660_lookup __P((void *));
int cd9660_open __P((void *));
int cd9660_close __P((void *));
int cd9660_access __P((void *));
int cd9660_getattr __P((void *));
int cd9660_setattr __P((void *));
int cd9660_read __P((void *));
int cd9660_ioctl __P((void *));
int cd9660_select __P((void *));
int cd9660_mmap __P((void *));
int cd9660_seek __P((void *));
int cd9660_readdir __P((void *));
int cd9660_readlink __P((void *));
int cd9660_abortop __P((void *));
int cd9660_inactive __P((void *));
int cd9660_reclaim __P((void *));
int cd9660_link __P((void *));
int cd9660_symlink __P((void *));
int cd9660_bmap __P((void *));
int cd9660_lock __P((void *));
int cd9660_unlock __P((void *));
int cd9660_strategy __P((void *));
int cd9660_print __P((void *));
int cd9660_islocked __P((void *));
int cd9660_pathconf __P((void *));
int cd9660_blkatoff __P((void *));

void cd9660_defattr __P((struct iso_directory_record *,
			struct iso_node *, struct buf *));
void cd9660_deftstamp __P((struct iso_directory_record *,
			struct iso_node *, struct buf *));
struct vnode *cd9660_ihashget __P((dev_t, ino_t));
void cd9660_ihashins __P((struct iso_node *));
void cd9660_ihashrem __P((struct iso_node *));
int cd9660_tstamp_conv7 __P((u_char *, struct timespec *));
int cd9660_tstamp_conv17 __P((u_char *, struct timespec *));
int cd9660_vget_internal __P((struct mount *, ino_t, struct vnode **, int,
			      struct iso_directory_record *));
ino_t isodirino __P((struct iso_directory_record *, struct iso_mnt *));
d151 2
a152 2
struct iso_dnode *iso_dmap __P((dev_t, ino_t, int));
void iso_dunmap __P((dev_t));
@


1.4
log
@back out vfs lite2 till after 2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_node.h,v 1.2 1996/02/29 10:12:21 niklas Exp $	*/
d90 1
a90 1
	pid_t	i_lockholder, i_lockwaiter;
a102 2
#define	IN_LOCKED	0x0001		/* inode is locked */
#define	IN_WANTED	0x0002		/* some process waiting on lock */
d117 1
@


1.3
log
@VFS Lite2 Changes
@
text
@d90 1
a90 1
	struct  lock i_lock;    /* node lock */
d103 2
a118 1
int cd9660_setattr __P((void *));
@


1.2
log
@From NetBSD: merge with 960217
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d90 1
a90 1
	pid_t	i_lockholder, i_lockwaiter;
a102 2
#define	IN_LOCKED	0x0001		/* inode is locked */
#define	IN_WANTED	0x0002		/* some process waiting on lock */
d117 1
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: cd9660_node.h,v 1.10 1994/12/24 15:30:09 cgd Exp $	*/
d113 26
a138 23
int cd9660_lookup __P((struct vop_lookup_args *));
int cd9660_open __P((struct vop_open_args *));
int cd9660_close __P((struct vop_close_args *));
int cd9660_access __P((struct vop_access_args *));
int cd9660_getattr __P((struct vop_getattr_args *));
int cd9660_read __P((struct vop_read_args *));
int cd9660_ioctl __P((struct vop_ioctl_args *));
int cd9660_select __P((struct vop_select_args *));
int cd9660_mmap __P((struct vop_mmap_args *));
int cd9660_seek __P((struct vop_seek_args *));
int cd9660_readdir __P((struct vop_readdir_args *));
int cd9660_readlink __P((struct vop_readlink_args *));
int cd9660_abortop __P((struct vop_abortop_args *));
int cd9660_inactive __P((struct vop_inactive_args *));
int cd9660_reclaim __P((struct vop_reclaim_args *));
int cd9660_bmap __P((struct vop_bmap_args *));
int cd9660_lock __P((struct vop_lock_args *));
int cd9660_unlock __P((struct vop_unlock_args *));
int cd9660_strategy __P((struct vop_strategy_args *));
int cd9660_print __P((struct vop_print_args *));
int cd9660_islocked __P((struct vop_islocked_args *));
int cd9660_pathconf __P((struct vop_pathconf_args *));
int cd9660_blkatoff __P((struct vop_blkatoff_args *));
d149 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
