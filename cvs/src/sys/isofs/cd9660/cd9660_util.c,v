head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.8
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.10
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.6
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.46
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.44
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.40
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.38
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.36
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.34
	OPENBSD_5_0:1.7.0.32
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.30
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.28
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.24
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.26
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.22
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.20
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.18
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.16
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.14
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.12
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.20
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.18
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.16
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.5.0.14
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.12
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.10
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.4
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.6
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.4
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.03.14.03.38.50;	author jsg;	state Exp;
branches;
next	1.8;
commitid	p4LJxGKbi0BU2cG6;

1.8
date	2014.09.14.14.17.25;	author jsg;	state Exp;
branches;
next	1.7;
commitid	uzzBR7hz9ncd4O6G;

1.7
date	2003.11.04.21.54.01;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.28.05;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.07.01.02.20.22;	author d;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	97.11.08.17.21.07;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.04.19.16.08.41;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.02.29.10.12.24;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.42;	author deraadt;	state Exp;
branches;
next	;

1.5.4.1
date	2003.06.07.11.03.40;	author ho;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2004.02.19.10.56.36;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@/*	$OpenBSD: cd9660_util.c,v 1.8 2014/09/14 14:17:25 jsg Exp $	*/
/*	$NetBSD: cd9660_util.c,v 1.12 1997/01/24 00:27:33 cgd Exp $	*/

/*-
 * Copyright (c) 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley
 * by Pace Willisson (pace@@blitz.com).  The Rock Ridge Extension
 * Support code is derived from software contributed to Berkeley
 * by Atsushi Murai (amurai@@spec.co.jp). Joliet support was added by
 * Joachim Kuebart (joki@@kuebart.stuttgart.netsurf.de).
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)cd9660_util.c	8.3 (Berkeley) 12/5/94
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/namei.h>
#include <sys/resourcevar.h>
#include <sys/kernel.h>
#include <sys/file.h>
#include <sys/stat.h>
#include <sys/buf.h>
#include <sys/conf.h>
#include <sys/mount.h>
#include <sys/vnode.h>
#include <sys/malloc.h>
#include <sys/dirent.h>

#include <isofs/cd9660/iso.h>

/*
 * XXX: limited support for loading of Unicode
 * conversion routine as a kld at a run-time.
 * Should be removed when native Unicode kernel
 * interfaces have been introduced.
 */
u_char (*cd9660_wchar2char)(u_int32_t wchar) = NULL;

/*
 * Get one character out of an iso filename
 * Obey joliet_level
 * Return number of bytes consumed
 */
int
isochar(isofn, isoend, joliet_level, c)
      const u_char *isofn;
      const u_char *isoend;
      int joliet_level;
      u_char *c;
{
      *c = *isofn++;
      if (joliet_level == 0 || isofn == isoend)
              /* (00) and (01) are one byte in Joliet, too */
              return 1;

      /* No Unicode support yet :-( */
      switch (*c) {
      default:
              *c = '?';
              break;
      case '\0':
              *c = *isofn;
              break;
      }

      /* XXX: if Unicode conversion routine is loaded then use it */
      if (cd9660_wchar2char != NULL)
	      *c = cd9660_wchar2char((*(isofn - 1) << 8) | *isofn);

      return 2;
}

/*
 * translate and compare a filename
 * returns (fn - isofn)
 * Note: Version number plus ';' may be omitted.
 */
int
isofncmp(fn, fnlen, isofn, isolen, joliet_level)
	const u_char *fn, *isofn;
	int fnlen, isolen, joliet_level;
{
	int i, j;
	u_char c;
	const u_char *fnend = fn + fnlen, *isoend = isofn + isolen;
	
	for (; fn != fnend; fn++) {
		if (isofn == isoend)
			return *fn;
		isofn += isochar(isofn, isoend, joliet_level, &c);
		if (c == ';') {
			if (*fn++ != ';')
				return fn[-1];
			for (i = 0; fn != fnend; i = i * 10 + *fn++ - '0') {
				if (*fn < '0' || *fn > '9') {
					return -1;
				}
			}
			for (j = 0; isofn != isoend; j = j * 10 + c - '0')
				isofn += isochar(isofn, isoend,
				    joliet_level, &c);
			return i - j;
		}
		if (((u_char) c) != *fn) {
			if (c >= 'A' && c <= 'Z') {
				if (c + ('a' - 'A') != *fn) {
					if (*fn >= 'a' && *fn <= 'z')
						return *fn - ('a' - 'A') - c;
					else
						return *fn - c;
				}
			} else
				return *fn - c;
		}
	}
	if (isofn != isoend) {
		isofn += isochar(isofn, isoend, joliet_level, &c);
		switch (c) {
		default:
			return -c;
		case '.':
			if (isofn != isoend) {
				isochar(isofn, isoend, joliet_level, &c);
				if (c == ';')
					return 0;
			}
			return -1;
		case ';':
			return 0;
		}
	}
	return 0;
}

/*
 * translate a filename of length > 0
 */
void
isofntrans(infn, infnlen, outfn, outfnlen, original, assoc, joliet_level)
	u_char *infn, *outfn;
	int infnlen;
	u_short *outfnlen;
	int original;
	int assoc;
	int joliet_level;
{
	int fnidx = 0;
	u_char c, d = '\0', *infnend = infn + infnlen;
	
	if (assoc) {
		*outfn++ = ASSOCCHAR;
		fnidx++;
	}
	for (; infn != infnend; fnidx++) {
		infn += isochar(infn, infnend, joliet_level, &c);
		
		if (!original && c == ';') {
			fnidx -= (d == '.');
			break;
		} else
			*outfn++ = c;
		d = c;
	}
	*outfnlen = fnidx;
}
@


1.8
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_util.c,v 1.7 2003/11/04 21:54:01 mickey Exp $	*/
a55 1
#include <isofs/cd9660/cd9660_extern.h>
@


1.7
log
@a hook to use an lkm for unicode names decoding; from freebsd
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_util.c,v 1.6 2003/06/02 23:28:05 millert Exp $	*/
a48 1
#include <sys/proc.h>
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_util.c,v 1.5 1999/07/01 02:20:22 d Exp $	*/
d60 8
d93 5
@


1.5
log
@Add support for Joliet extensions. From FreeBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_util.c,v 1.4 1997/11/08 17:21:07 niklas Exp $	*/
d22 1
a22 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.5.4.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_util.c,v 1.5 1999/07/01 02:20:22 d Exp $	*/
d22 5
a26 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.5.4.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a59 8
 * XXX: limited support for loading of Unicode
 * conversion routine as a kld at a run-time.
 * Should be removed when native Unicode kernel
 * interfaces have been introduced.
 */
u_char (*cd9660_wchar2char)(u_int32_t wchar) = NULL;

/*
a84 5

      /* XXX: if Unicode conversion routine is loaded then use it */
      if (cd9660_wchar2char != NULL)
	      *c = cd9660_wchar2char((*(isofn - 1) << 8) | *isofn);

@


1.4
log
@Sync to NetBSD; some extra KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_util.c,v 1.3 1996/04/19 16:08:41 niklas Exp $	*/
d11 2
a12 1
 * by Atsushi Murai (amurai@@spec.co.jp).
d64 29
d94 1
d98 1
a98 1
isofncmp(fn, fnlen, isofn, isolen)
d100 1
a100 1
	int fnlen, isolen;
d103 2
a104 1
	char c;
d106 2
a107 2
	while (--fnlen >= 0) {
		if (--isolen < 0)
d109 5
a113 10
		if ((c = *isofn++) == ';') {
			switch (*fn++) {
			default:
				return *--fn;
			case 0:
				return 0;
			case ';':
				break;
			}
			for (i = 0; --fnlen >= 0; i = i * 10 + *fn++ - '0') {
d118 3
a120 1
			for (j = 0; --isolen >= 0; j = j * 10 + *isofn++ - '0');
a133 1
		fn++;
d135 3
a137 2
	if (isolen > 0) {
		switch (*isofn) {
d139 7
a146 3
		case '.':
			if (isofn[1] != ';')
				return -1;
d155 1
a155 1
 * translate a filename
d158 1
a158 1
isofntrans(infn, infnlen, outfn, outfnlen, original, assoc)
d164 1
d167 1
a171 1
		infnlen++;
d173 2
a174 2
	for (; fnidx < infnlen; fnidx++) {
		char c = *infn++;
d176 2
a177 5
		if (!original && c >= 'A' && c <= 'Z')
			*outfn++ = c + ('a' - 'A');
		else if (!original && c == '.' && *infn == ';')
			break;
		else if (!original && c == ';')
d179 1
a179 1
		else
d181 1
@


1.3
log
@NetBSD 960317 merge
@
text
@d1 2
a2 2
/*	$OpenBSD: cd9660_util.c,v 1.2 1996/02/29 10:12:24 niklas Exp $	*/
/*	$NetBSD: cd9660_util.c,v 1.10 1996/02/29 20:36:39 gwr Exp $	*/
a55 2
#include <miscfs/specfs/specdev.h> /* XXX */
#include <miscfs/fifofs/fifo.h> /* XXX */
d60 1
d68 1
a68 1
	u_char *fn, *isofn;
@


1.2
log
@From NetBSD: merge with 960217
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: cd9660_util.c,v 1.9 1996/02/09 21:32:06 christos Exp $	*/
d59 1
a59 1
#include <sys/dir.h>
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: cd9660_util.c,v 1.8 1994/12/13 22:33:25 mycroft Exp $	*/
d95 1
a95 1
		if (c != *fn) {
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
