head	1.3;
access;
symbols
	OPENBSD_4_7:1.2.0.56
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.58
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.54
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.52
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.50
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.48
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.46
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.44
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.42
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.40
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.38
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.36
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.34
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.32
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.30
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.28
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.26
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.24
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.14
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.3
date	2010.07.01.00.19.37;	author tedu;	state dead;
branches;
next	1.2;

1.2
date	97.02.24.14.30.49;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.41;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.41;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@I'm not sure where this TODO comes from, but it contains such exciting lies
as "should run as a user process"
@
text
@#	$OpenBSD: TODO,v 1.2 1997/02/24 14:30:49 niklas Exp $
#	$NetBSD: TODO,v 1.4 1994/07/19 11:34:48 mycroft Exp $

 1) should understand "older", original High Sierra ("CDROM001") type

   Not yet. ( I don't have this technical information, yet. )

 2) should understand Rock Ridge

   Yes, we have follows function.

       o Symbolic Link
       o Real Name(long name)
       o File Attribute 
       o Time stamp
       o uid, gid
       o Devices
       o Relocated directories

   Except follows:

       o POSIX device number mapping

         There is some preliminary stuff in there that (ab-)uses the mknod
         system call, but this needs a writable filesystem
         
 5) should have name translation enabled by mount flag

   Yes. we can disable the Rock Ridge Extension by follows option;

      "mount -t isofs -o -norrip /dev/cd0d /cdrom"

 6) should run as a user process, and not take up kernel space (cdroms
    are slow)

   Not yet.

 7) ECMA support.

   Not yet. we need not only a technical spec but also ECMA format
   cd-rom itself!

 8) Character set change by SVD ( multi SVD support )

   Not yet. We should also hack the other part of system as 8 bit
   clean. As far as I know, if you export the cdrom by NFS, the client
   can access the 8 bit clean (ie. Solaris Japanese with EUC code )

@


1.2
log
@OpenBSD tags
@
text
@d1 1
a1 1
#	$OpenBSD: TODO,v 1.4 1994/07/19 11:34:48 mycroft Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
