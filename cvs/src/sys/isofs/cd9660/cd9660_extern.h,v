head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.16
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.18
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.14
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.10
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.12
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.4
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.8
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.6
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.2
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.11.0.10
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.8
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.6
	OPENBSD_5_0:1.11.0.4
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.8.0.30
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.26
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.28
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.24
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.22
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.20
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.18
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.6
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.2
	SMP_BASE:1.4
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2;
locks; strict;
comment	@ * @;


1.13
date	2013.06.02.01.07.39;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2013.05.30.17.35.01;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2010.12.21.20.14.43;	author thib;	state Exp;
branches;
next	1.10;

1.10
date	2010.09.10.16.34.08;	author thib;	state Exp;
branches;
next	1.9;

1.9
date	2010.09.06.23.44.10;	author thib;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.28.05;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.27.03;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.20.01.50.08;	author assar;	state Exp;
branches
	1.6.6.1;
next	1.5;

1.5
date	2000.06.07.23.25.08;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.07.04.57.15;	author assar;	state Exp;
branches
	1.4.2.1
	1.4.4.1;
next	1.3;

1.3
date	99.07.01.02.20.20;	author d;	state Exp;
branches;
next	1.2;

1.2
date	98.02.08.22.41.32;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	97.11.08.20.54.29;	author niklas;	state Exp;
branches;
next	;

1.4.2.1
date	2001.05.14.22.32.37;	author niklas;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2002.03.28.15.02.00;	author niklas;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2003.06.07.11.03.39;	author ho;	state Exp;
branches;
next	;

1.4.4.1
date	2000.06.09.05.17.51;	author jason;	state Exp;
branches;
next	;

1.6.6.1
date	2002.06.11.03.29.20;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Remove disabled ISODEVMAP support.  dev_t's on one system will not be
similar on another, so using that is crazy.
ok guenther krw
@
text
@/*	$OpenBSD: cd9660_extern.h,v 1.12 2013/05/30 17:35:01 guenther Exp $	*/
/*	$NetBSD: cd9660_extern.h,v 1.1 1997/01/24 00:24:53 cgd Exp $	*/

/*-
 * Copyright (c) 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley
 * by Pace Willisson (pace@@blitz.com).  The Rock Ridge Extension
 * Support code is derived from software contributed to Berkeley
 * by Atsushi Murai (amurai@@spec.co.jp).
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)iso.h	8.4 (Berkeley) 12/5/94
 */

/*
 * Definitions used in the kernel for cd9660 file system support.
 */

/* CD-ROM Format type */
enum ISO_FTYPE  { ISO_FTYPE_DEFAULT, ISO_FTYPE_9660, ISO_FTYPE_RRIP, ISO_FTYPE_ECMA };

#ifndef	ISOFSMNT_ROOT
#define	ISOFSMNT_ROOT	0
#endif

struct iso_mnt {
	int im_flags;

	struct mount *im_mountp;
	dev_t im_dev;
	struct vnode *im_devvp;

	int logical_block_size;
	int im_bshift;
	int im_bmask;
	
	int volume_space_size;
	struct netexport im_export;
	
	char root[ISODCL (157, 190)];
	int root_extent;
	int root_size;
	enum ISO_FTYPE  iso_ftype;
	
	int rr_skip;
	int rr_skip0;

	int joliet_level;
};

#define VFSTOISOFS(mp)	((struct iso_mnt *)((mp)->mnt_data))

#define blkoff(imp, loc)	((loc) & (imp)->im_bmask)
#define lblktosize(imp, blk)	((blk) << (imp)->im_bshift)
#define lblkno(imp, loc)	((loc) >> (imp)->im_bshift)
#define blksize(imp, ip, lbn)	((imp)->logical_block_size)

int cd9660_mount(struct mount *, const char *, void *,
                      struct nameidata *, struct proc *);
int cd9660_start(struct mount *, int, struct proc *);
int cd9660_unmount(struct mount *, int, struct proc *);
int cd9660_root(struct mount *, struct vnode **);
int cd9660_quotactl(struct mount *, int, uid_t, caddr_t, struct proc *);
int cd9660_statfs(struct mount *, struct statfs *, struct proc *);
int cd9660_sync(struct mount *, int, struct ucred *, struct proc *);
int cd9660_vget(struct mount *, ino_t, struct vnode **);
int cd9660_fhtovp(struct mount *, struct fid *, struct vnode **);
int cd9660_vptofh(struct vnode *, struct fid *);
int cd9660_init(struct vfsconf *);
int cd9660_check_export(struct mount *, struct mbuf *, int *,
                             struct ucred **);
#define cd9660_sysctl ((int (*)(int *, u_int, void *, size_t *, void *, \
                                    size_t, struct proc *))eopnotsupp)

int cd9660_mountroot(void); 

extern struct vops	cd9660_vops;
extern struct vops	cd9660_specvops;
#ifdef FIFO
extern struct vops	cd9660_fifovops;
#endif

int	isochar(const u_char *, const u_char *, int, u_char *);
int	isofncmp(const u_char *, int, const u_char *, int, int);
void	isofntrans(u_char *, int, u_char *, u_short *, int, int, int);
cdino_t	isodirino(struct iso_directory_record *, struct iso_mnt *);
@


1.12
log
@CD filesystems don't do inode numbers >2^32, so use a smaller type internally,
only using ino_t in the VFS layer APIs: vget, readdir, getattr.

ok matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.11 2010/12/21 20:14:43 thib Exp $	*/
a111 4
#ifdef  ISODEVMAP
struct	iso_dnode *iso_dmap(dev_t, cdino_t, int);
void	iso_dunmap(dev_t);
#endif
@


1.11
log
@Bring back the "End the VOP experiment." diff, naddy's issues where
unrelated, and his alpha is much happier now.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.10 2010/09/10 16:34:08 thib Exp $	*/
d108 8
a115 4
int isochar(const u_char *, const u_char *, int, u_char *);
int isofncmp(const u_char *, int, const u_char *, int, int);
void isofntrans(u_char *, int, u_char *, u_short *, int, int, int);
ino_t isodirino(struct iso_directory_record *, struct iso_mnt *);
@


1.10
log
@Backout the VOP diff until the issues naddy was seeing on alpha (gcc3)
have been resolved.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.9 2010/09/06 23:44:10 thib Exp $	*/
d102 2
a103 2
extern int (**cd9660_vnodeop_p)(void *);
extern int (**cd9660_specop_p)(void *);
d105 1
a105 1
extern int (**cd9660_fifoop_p)(void *);
@


1.9
log
@End the VOP experiment. Instead of the ridicolusly complicated operation
vector setup that has questionable features (that have, as far as I can
tell never been used in practice, atleast not in OpenBSD), remove all
the gunk and favor a simple struct full of function pointers that get
set directly by each of the filesystems.

Removes gobs of ugly code and makes things simpler by a magnitude.

The only downside of this is that we loose the vnoperate feature so
the spec/fifo operations of the filesystems need to be kept in sync
with specfs and fifofs, this is no big deal as the API it self is pretty
static.

Many thanks to armani@@ who pulled an earlier version of this diff to
current after c2k10 and Gabriel Kihlman on tech@@ for testing.

Liked by many. "come on, find your balls" deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.8 2003/06/02 23:28:05 millert Exp $	*/
d102 2
a103 2
extern struct vops	cd9660_vops;
extern struct vops	cd9660_specvops;
d105 1
a105 1
extern struct vops	cd9660_fifovops;
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.7 2002/03/14 01:27:03 millert Exp $	*/
d102 2
a103 2
extern int (**cd9660_vnodeop_p)(void *);
extern int (**cd9660_specop_p)(void *);
d105 1
a105 1
extern int (**cd9660_fifoop_p)(void *);
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.6 2001/02/20 01:50:08 assar Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@use void * consistently in vfs_mount and sys_mount.  ok @@art
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.5 2000/06/07 23:25:08 millert Exp $	*/
d87 16
a102 16
int cd9660_mount __P((struct mount *, const char *, void *,
                      struct nameidata *, struct proc *));
int cd9660_start __P((struct mount *, int, struct proc *));
int cd9660_unmount __P((struct mount *, int, struct proc *));
int cd9660_root __P((struct mount *, struct vnode **));
int cd9660_quotactl __P((struct mount *, int, uid_t, caddr_t, struct proc *));
int cd9660_statfs __P((struct mount *, struct statfs *, struct proc *));
int cd9660_sync __P((struct mount *, int, struct ucred *, struct proc *));
int cd9660_vget __P((struct mount *, ino_t, struct vnode **));
int cd9660_fhtovp __P((struct mount *, struct fid *, struct vnode **));
int cd9660_vptofh __P((struct vnode *, struct fid *));
int cd9660_init __P((struct vfsconf *));
int cd9660_check_export __P((struct mount *, struct mbuf *, int *,
                             struct ucred **));
#define cd9660_sysctl ((int (*) __P((int *, u_int, void *, size_t *, void *, \
                                    size_t, struct proc *)))eopnotsupp)
d104 1
a104 1
int cd9660_mountroot __P((void)); 
d106 2
a107 2
extern int (**cd9660_vnodeop_p) __P((void *));
extern int (**cd9660_specop_p) __P((void *));
d109 1
a109 1
extern int (**cd9660_fifoop_p) __P((void *));
d112 4
a115 4
int isochar __P((const u_char *, const u_char *, int, u_char *));
int isofncmp __P((const u_char *, int, const u_char *, int, int));
void isofntrans __P((u_char *, int, u_char *, u_short *, int, int, int));
ino_t isodirino __P((struct iso_directory_record *, struct iso_mnt *));
@


1.6.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.6 2001/02/20 01:50:08 assar Exp $	*/
d87 16
a102 16
int cd9660_mount(struct mount *, const char *, void *,
                      struct nameidata *, struct proc *);
int cd9660_start(struct mount *, int, struct proc *);
int cd9660_unmount(struct mount *, int, struct proc *);
int cd9660_root(struct mount *, struct vnode **);
int cd9660_quotactl(struct mount *, int, uid_t, caddr_t, struct proc *);
int cd9660_statfs(struct mount *, struct statfs *, struct proc *);
int cd9660_sync(struct mount *, int, struct ucred *, struct proc *);
int cd9660_vget(struct mount *, ino_t, struct vnode **);
int cd9660_fhtovp(struct mount *, struct fid *, struct vnode **);
int cd9660_vptofh(struct vnode *, struct fid *);
int cd9660_init(struct vfsconf *);
int cd9660_check_export(struct mount *, struct mbuf *, int *,
                             struct ucred **);
#define cd9660_sysctl ((int (*)(int *, u_int, void *, size_t *, void *, \
                                    size_t, struct proc *))eopnotsupp)
d104 1
a104 1
int cd9660_mountroot(void); 
d106 2
a107 2
extern int (**cd9660_vnodeop_p)(void *);
extern int (**cd9660_specop_p)(void *);
d109 1
a109 1
extern int (**cd9660_fifoop_p)(void *);
d112 4
a115 4
int isochar(const u_char *, const u_char *, int, u_char *);
int isofncmp(const u_char *, int, const u_char *, int, int);
void isofntrans(u_char *, int, u_char *, u_short *, int, int, int);
ino_t isodirino(struct iso_directory_record *, struct iso_mnt *);
@


1.5
log
@Add cd9660_check_export() (from ufs_check_export() with trivial modifications).
Fixes the "NFS mounting of exported cd-rom causes panic" bug.  Apparently
when the checkexp vfs support was added cd9660 was left out.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.4 2000/02/07 04:57:15 assar Exp $	*/
d87 1
a87 1
int cd9660_mount __P((struct mount *, const char *, caddr_t,
@


1.4
log
@update to use new checkexp vfs operation
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.3 1999/07/01 02:20:20 d Exp $	*/
d87 2
a88 2
int cd9660_mount __P((struct mount *,
	    const char *, caddr_t, struct nameidata *, struct proc *));
d99 2
@


1.4.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.6 2001/02/20 01:50:08 assar Exp $	*/
d87 2
a88 2
int cd9660_mount __P((struct mount *, const char *, void *,
                      struct nameidata *, struct proc *));
a98 2
int cd9660_check_export __P((struct mount *, struct mbuf *, int *,
                             struct ucred **));
@


1.4.2.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d87 16
a102 16
int cd9660_mount(struct mount *, const char *, void *,
                      struct nameidata *, struct proc *);
int cd9660_start(struct mount *, int, struct proc *);
int cd9660_unmount(struct mount *, int, struct proc *);
int cd9660_root(struct mount *, struct vnode **);
int cd9660_quotactl(struct mount *, int, uid_t, caddr_t, struct proc *);
int cd9660_statfs(struct mount *, struct statfs *, struct proc *);
int cd9660_sync(struct mount *, int, struct ucred *, struct proc *);
int cd9660_vget(struct mount *, ino_t, struct vnode **);
int cd9660_fhtovp(struct mount *, struct fid *, struct vnode **);
int cd9660_vptofh(struct vnode *, struct fid *);
int cd9660_init(struct vfsconf *);
int cd9660_check_export(struct mount *, struct mbuf *, int *,
                             struct ucred **);
#define cd9660_sysctl ((int (*)(int *, u_int, void *, size_t *, void *, \
                                    size_t, struct proc *))eopnotsupp)
d104 1
a104 1
int cd9660_mountroot(void); 
d106 2
a107 2
extern int (**cd9660_vnodeop_p)(void *);
extern int (**cd9660_specop_p)(void *);
d109 1
a109 1
extern int (**cd9660_fifoop_p)(void *);
d112 4
a115 4
int isochar(const u_char *, const u_char *, int, u_char *);
int isofncmp(const u_char *, int, const u_char *, int, int);
void isofntrans(u_char *, int, u_char *, u_short *, int, int, int);
ino_t isodirino(struct iso_directory_record *, struct iso_mnt *);
@


1.4.2.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.4.2.2 2002/03/28 15:02:00 niklas Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.4.4.1
log
@Pull in patch from current:
Errata:
NFS exporting of CD filesystems caused a system panic.
Fix (millert):
Add cd9660_check_export() (from ufs_check_export() with trivial modifications).
Fixes the "NFS mounting of exported cd-rom causes panic" bug.  Apparently
when the checkexp vfs support was added cd9660 was left out.
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.4 2000/02/07 04:57:15 assar Exp $	*/
d87 2
a88 2
int cd9660_mount __P((struct mount *, const char *, caddr_t,
                      struct nameidata *, struct proc *));
a98 2
int cd9660_check_export __P((struct mount *, struct mbuf *, int *,
                             struct ucred **));
@


1.3
log
@Add support for Joliet extensions. From FreeBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.2 1998/02/08 22:41:32 tholo Exp $	*/
d96 1
a96 2
int cd9660_fhtovp __P((struct mount *, struct fid *, struct mbuf *,
	    struct vnode **, int *, struct ucred **));
@


1.2
log
@Updates to match type changes in syscall tables
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.1 1997/11/08 20:54:29 niklas Exp $	*/
d76 2
d111 3
a113 2
int isofncmp __P((const u_char *, int, const u_char *, int));
void isofntrans __P((u_char *, int, u_char *, u_short *, int, int));
@


1.1
log
@Forgot this one.. from NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: cd9660_extern.h,v 1.1 1997/01/24 00:24:53 cgd Exp $	*/
d86 1
a86 1
	    char *, caddr_t, struct nameidata *, struct proc *));
@
