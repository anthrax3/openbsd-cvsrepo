head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.24
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.20
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.18
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.16
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.14
	OPENBSD_5_0:1.6.0.12
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.10
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.8
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.4
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.1.0.10
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.07.11.21.54.38;	author tedu;	state dead;
branches;
next	1.6;
commitid	0n9cIGBISFAEt4b1;

1.6
date	2008.11.24.20.19.51;	author uwe;	state Exp;
branches;
next	1.5;

1.5
date	2008.11.22.04.42.58;	author uwe;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.24.20.55.27;	author uwe;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.01.02.46.11;	author uwe;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.30.08.10.03;	author uwe;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.14.12.04.02;	author grange;	state Exp;
branches;
next	;


desc
@@


1.7
log
@"It's not the years, honey; it's the mileage."

bluetooth support doesn't work and isn't going anywhere. the current
design is a dead end, and should not be the basis for any future support.
general consensus says to whack it so as to not mislead the unwary.
@
text
@/*	$OpenBSD: bt_proto.c,v 1.6 2008/11/24 20:19:51 uwe Exp $	*/
/*
 * Copyright (c) 2004 Alexander Yurchenko <grange@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/domain.h>
#include <sys/protosw.h>
#include <sys/socket.h>
#include <sys/timeout.h>

#include <netbt/bluetooth.h>
#include <netbt/bt_var.h>
#include <netbt/hci.h>
#include <netbt/l2cap.h>
#include <netbt/rfcomm.h>
#include <netbt/sco.h>

struct domain btdomain;

void bt_init(void);

struct protosw btsw[] = {
	{ SOCK_RAW, &btdomain, BTPROTO_HCI,
	  PR_ATOMIC | PR_ADDR,
	  NULL/*input*/, NULL/*output*/, NULL/*ctlinput*/,
	  hci_ctloutput, hci_usrreq, NULL/*init*/,
	  NULL/*fasttimo*/, NULL/*slowtimo*/, NULL/*drain*/,
	  NULL/*sysctl*/
	},
	{ SOCK_SEQPACKET, &btdomain, BTPROTO_SCO,
	  PR_ATOMIC | PR_CONNREQUIRED,
	  NULL/*input*/, NULL/*output*/, NULL/*ctlinput*/,
	  sco_ctloutput, sco_usrreq, NULL/*init*/,
	  NULL/*fasttimo*/, NULL/*slowtimo*/, NULL/*drain*/,
	  NULL/*sysctl*/
	},
	{ SOCK_SEQPACKET, &btdomain, BTPROTO_L2CAP,
	  PR_ATOMIC | PR_CONNREQUIRED,
	  NULL/*input*/, NULL/*output*/, NULL/*ctlinput*/,
	  l2cap_ctloutput, l2cap_usrreq, l2cap_init,
	  NULL/*fasttimo*/, NULL/*slowtimo*/, NULL/*drain*/,
	  NULL/*sysctl*/
	},
	{ SOCK_STREAM, &btdomain, BTPROTO_RFCOMM,
	  PR_CONNREQUIRED | PR_WANTRCVD,
	  NULL/*input*/, NULL/*output*/, NULL/*ctlinput*/,
	  rfcomm_ctloutput, rfcomm_usrreq, rfcomm_init,
	  NULL/*fasttimo*/, NULL/*slowtimo*/, NULL/*drain*/,
	  NULL/*sysctl*/
	}
};

struct domain btdomain = {
	AF_BLUETOOTH, "bluetooth",
	bt_init, NULL/*externalize*/, NULL/*dispose*/,
	btsw, &btsw[sizeof(btsw) / sizeof(btsw[0])], NULL,
	NULL/*rtattach*/, 32, sizeof(struct sockaddr_bt),
	NULL/*ifattach*/, NULL/*ifdetach*/
};

struct mutex bt_lock;

void
bt_init(void)
{
	/*
	 * In accordance with mutex(9), since hci_intr() uses the
	 * lock, we associate the subsystem lock with IPL_SOFTNET.
	 * For unknown reasons, in NetBSD the interrupt level is
	 * IPL_NONE.
	 */
	mtx_init(&bt_lock, IPL_BIO);
}
@


1.6
log
@hopefully that unbreaks macppc; reported by todd and mk
@
text
@d1 1
a1 1
/*	$OpenBSD: bt_proto.c,v 1.5 2008/11/22 04:42:58 uwe Exp $	*/
@


1.5
log
@Sync bluetooth with NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: bt_proto.c,v 1.4 2007/06/24 20:55:27 uwe Exp $	*/
d85 1
a85 1
	mtx_init(&bt_lock, IPL_SOFTNET);
@


1.4
log
@Remove some unused leftover code; original request from jasper@@
@
text
@d1 1
a1 1
/*	$OpenBSD: bt_proto.c,v 1.3 2007/06/01 02:46:11 uwe Exp $	*/
d33 2
d68 1
a68 1
	NULL/*init*/, NULL/*externalize*/, NULL/*dispose*/,
d73 14
@


1.3
log
@complete the sys/netbt import and adopt some more code to our interfaces
@
text
@d1 1
a1 1
/*	$OpenBSD: bt_proto.c,v 1.2 2007/05/30 08:10:03 uwe Exp $	*/
d66 1
a66 1
	bt_init, NULL/*externalize*/, NULL/*dispose*/,
@


1.2
log
@Unbreak the tree for gwk
@
text
@d1 1
a1 1
/*	$OpenBSD: bt_proto.c,v 1.1 2005/01/14 12:04:02 grange Exp $	*/
d25 1
d27 3
a29 1
#include <netbt/bt_var.h>
d37 1
a37 1
	  NULL/*hci_ctloutput*/, NULL/*hci_usrreq*/, NULL/*init*/,
d41 2
a42 3
#if 0
	{ SOCK_RAW, &btdomain, BLUETOOTH_PROTO_L2CAP,
	  PR_ATOMIC | PR_ADDR,
d44 1
a44 1
	  NULL/*ctloutput*/, l2cap_raw_usrreq, l2cap_raw_init,
d48 1
a48 1
	{ SOCK_SEQPACKET, &btdomain, BLUETOOTH_PROTO_L2CAP,
d55 2
a56 2
	{ SOCK_STREAM, &btdomain, BLUETOOTH_PROTO_RFCOMM,
	  PR_ATOMIC | PR_CONNREQUIRED,
a61 1
#endif
@


1.1
log
@First step in Bluetooth protocol stack support.

The code is adopted from the FreeBSD netgraph-based Bluetooth
implementation by Maksim Yevmenkin <m_evmenkin@@yahoo.com> but
all netgraph glue was replaced with usual BSD network stack
hooks. This is a work in progress. Only HCI layer works for now,
L2CAP and RFCOMM are on the way.

Help in testing from many, ok markus@@.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d22 1
a25 2
#include <netbt/l2cap.h>
#include <netbt/bt.h>
a26 2
#include <netbt/hci_var.h>
#include <netbt/l2cap_var.h>
d31 1
a31 1
	{ SOCK_RAW, &btdomain, BLUETOOTH_PROTO_HCI,
d34 1
a34 1
	  hci_raw_ctloutput, hci_raw_usrreq, hci_raw_init,
d67 1
a67 1
	NULL/*rtattach*/, 32, sizeof(struct sockaddr_hci),
@

