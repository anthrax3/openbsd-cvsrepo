head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.30
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.26
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.24
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.22
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.20
	OPENBSD_5_0:1.5.0.18
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.16
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.14
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.10
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.12
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.8
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.6
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.07.11.21.54.38;	author tedu;	state dead;
branches;
next	1.5;
commitid	0n9cIGBISFAEt4b1;

1.5
date	2007.06.24.20.55.27;	author uwe;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.31.23.50.19;	author uwe;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.30.08.10.02;	author uwe;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.04.22.40.16;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.14.12.04.02;	author grange;	state Exp;
branches;
next	;


desc
@@


1.6
log
@"It's not the years, honey; it's the mileage."

bluetooth support doesn't work and isn't going anywhere. the current
design is a dead end, and should not be the basis for any future support.
general consensus says to whack it so as to not mislead the unwary.
@
text
@/*	$OpenBSD: bt_input.c,v 1.5 2007/06/24 20:55:27 uwe Exp $	*/
/*
 * Copyright (c) 2004 Alexander Yurchenko <grange@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/socket.h>
#include <sys/timeout.h>

#include <net/netisr.h>

#include <netbt/hci.h>

void
btintr(void)
{
	struct hci_unit *unit;

	TAILQ_FOREACH(unit, &hci_unit_list, hci_next) {
		hci_intr(unit);
	}
}
@


1.5
log
@Remove some unused leftover code; original request from jasper@@
@
text
@d1 1
a1 1
/*	$OpenBSD: bt_input.c,v 1.4 2007/05/31 23:50:19 uwe Exp $	*/
@


1.4
log
@Enable packet flow between HCI driver and controller
- not all platforms have generic sofintr support, use schednetisr()
- enable HCI driver at attach time (for development, since we have no
  userland tools yet)
@
text
@d1 1
a1 1
/*	$OpenBSD: bt_input.c,v 1.3 2007/05/30 08:10:02 uwe Exp $	*/
a18 2
#include <sys/mbuf.h>
#include <sys/systm.h>
a21 2
#include <net/if.h>
#include <net/if_types.h>
a23 2
#include <netbt/bluetooth.h>
#include <netbt/bt_var.h>
a25 10
extern void hci_intr(void *);	/* XXX */

struct ifqueue btintrq;

void
bt_init(void)
{
	btintrq.ifq_maxlen = IFQ_MAXLEN;
}

a29 2
	struct mbuf *m;
	int s;
a32 13
	}

	for (;;) {
		s = splnet();
		IF_DEQUEUE(&btintrq, m);
		splx(s);

		if (m == NULL)
			break;

#if 0
		ng_btsocket_hci_raw_data_input(m);
#endif
@


1.3
log
@Unbreak the tree for gwk
@
text
@d1 1
a1 1
/*	$OpenBSD: bt_input.c,v 1.2 2006/03/04 22:40:16 brad Exp $	*/
d22 1
d30 3
d45 1
d48 4
@


1.2
log
@With the exception of two other small uncommited diffs this moves
the remainder of the network stack from splimp to splnet.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: bt_input.c,v 1.1 2005/01/14 12:04:02 grange Exp $	*/
a27 3
#include <netbt/hci.h>
#include <netbt/l2cap.h>
#include <netbt/bt.h>
a28 1
#include <netbt/hci_var.h>
d52 1
d54 1
@


1.1
log
@First step in Bluetooth protocol stack support.

The code is adopted from the FreeBSD netgraph-based Bluetooth
implementation by Maksim Yevmenkin <m_evmenkin@@yahoo.com> but
all netgraph glue was replaced with usual BSD network stack
hooks. This is a work in progress. Only HCI layer works for now,
L2CAP and RFCOMM are on the way.

Help in testing from many, ok markus@@.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d49 1
a49 1
		s = splimp();
@

