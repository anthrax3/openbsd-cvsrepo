head	1.16;
access;
symbols
	OPENBSD_5_6:1.15.0.8
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.6
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.13.0.22
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.20
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.18
	OPENBSD_5_0:1.13.0.16
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.14
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.12
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.8
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.10
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.6
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.4
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.2
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.12.0.16
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.14
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.12
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.10
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.8
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.6
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.10
	UBC:1.9.0.4
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2014.10.01.10.08.30;	author mpi;	state dead;
branches;
next	1.15;
commitid	H2YI4nUd6WXupaiB;

1.15
date	2013.07.03.03.15.52;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2013.06.25.09.16.34;	author mpi;	state Exp;
branches;
next	1.13;

1.13
date	2007.11.26.09.28.33;	author martynas;	state Exp;
branches;
next	1.12;

1.12
date	2003.12.07.15.41.27;	author markus;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.23.28.12;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.14.01.27.09;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.15.03.38.34;	author itojun;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2001.06.12.21.41.32;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.09.06.16.38;	author angelos;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.17.18.41.46;	author provos;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.13.05.16.07;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	97.02.24.13.34.01;	author niklas;	state Exp;
branches
	1.4.14.1;
next	1.3;

1.3
date	96.09.30.14.04.46;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.10.12.31.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.06;	author deraadt;	state Exp;
branches;
next	;

1.4.14.1
date	2001.05.14.22.40.01;	author niklas;	state Exp;
branches;
next	1.4.14.2;

1.4.14.2
date	2001.07.04.10.54.06;	author niklas;	state Exp;
branches;
next	1.4.14.3;

1.4.14.3
date	2002.03.28.14.57.37;	author niklas;	state Exp;
branches;
next	1.4.14.4;

1.4.14.4
date	2003.06.07.11.06.06;	author ho;	state Exp;
branches;
next	1.4.14.5;

1.4.14.5
date	2004.02.19.10.57.21;	author niklas;	state Exp;
branches;
next	;

1.9.4.1
date	2002.06.11.03.30.45;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@sl(4) is no more, thanks for all the fish!
@
text
@/*	$OpenBSD: if_slvar.h,v 1.15 2013/07/03 03:15:52 guenther Exp $	*/
/*	$NetBSD: if_slvar.h,v 1.16 1996/05/07 02:40:46 thorpej Exp $	*/

/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)if_slvar.h	8.3 (Berkeley) 2/1/94
 */

#ifndef _NET_IF_SLVAR_H_
#define _NET_IF_SLVAR_H_

/*
 * Statistics.
 */
struct slstat	{
	u_int	sl_ibytes;	/* bytes received */
	u_int	sl_ipackets;	/* packets received */
	u_int	sl_obytes;	/* bytes sent */
	u_int	sl_opackets;	/* packets sent */
};

struct vjstat {
	u_int	vjs_packets;	/* outbound packets */
	u_int	vjs_compressed;	/* outbound compressed packets */
	u_int	vjs_searches;	/* searches for connection state */
	u_int	vjs_misses;	/* times couldn't find conn. state */
	u_int	vjs_uncompressedin; /* inbound uncompressed packets */
	u_int	vjs_compressedin;   /* inbound compressed packets */
	u_int	vjs_errorin;	/* inbound unknown type packets */
	u_int	vjs_tossed;	/* inbound packets tossed because of error */
};

struct sl_stats {
	struct slstat	sl;	/* basic PPP statistics */
	struct vjstat	vj;	/* VJ header compression statistics */
};

struct ifslstatsreq {
	char ifr_name[IFNAMSIZ];
	struct sl_stats stats;
};

/*
 * This is an interface ioctl so that slstats(8) can do it on
 * a socket without having to open the serial device.
 */
#define SIOCGSLSTATS	_IOWR('i', 123, struct ifslstatsreq)


#ifdef _KERNEL

/* internal flags */
#define	SC_ERROR	0x0001		/* had an input error */

/* visible flags */
#define	SC_COMPRESS	IFF_LINK0	/* compress TCP traffic */
#define	SC_NOICMP	IFF_LINK1	/* suppress ICMP traffic */
#define	SC_AUTOCOMP	IFF_LINK2	/* auto-enable TCP compression */

/*
 * Definitions for SLIP interface data structures
 * 
 * (This exists so programs like slstats can get at the definition
 *  of sl_softc.)
 */
struct sl_softc {
	struct	ifnet sc_if;		/* network-visible interface */
	int	sc_unit;		/* XXX unit number */
	struct	ifqueue sc_fastq;	/* interactive output queue */
	struct	tty *sc_ttyp;		/* pointer to tty structure */
	u_char	*sc_mp;			/* pointer to next available buf char */
	u_char	*sc_ep;			/* pointer to last available buf char */
	u_char	*sc_pktstart;		/* pointer to beginning of packet */
	struct mbuf *sc_mbuf;		/* input buffer */
	u_int	sc_flags;		/* see below */
	u_int	sc_escape;	/* =1 if last char input was FRAME_ESCAPE */
	time_t	sc_lasttime;		/* last time a char arrived */
	time_t	sc_starttime;		/* time of first abort in window */
	long	sc_abortcount;		/* number of abort esacpe chars */
	long	sc_oqlen;		/* previous output queue size */
	long	sc_otimeout;		/* number of times output's stalled */
	int	sc_oldbufsize;		/* previous output buffer size */
	int	sc_oldbufquot;		/* previous output buffer quoting */
#ifdef INET				/* XXX */
	struct	slcompress sc_comp;	/* tcp compression data */
#endif
	caddr_t	sc_bpf;			/* BPF data */
	struct timeval sc_lastpacket;	/* for watchdog */
	LIST_ENTRY(sl_softc) sc_list;	/* all slip interfaces */
};

void	slattach(int);
void	slclose(struct tty *);
void	slinput(int, struct tty *);
int	slioctl(struct ifnet *, u_long, caddr_t);
int	slopen(dev_t, struct tty *);
int	sloutput(struct ifnet *,
	    struct mbuf *, struct sockaddr *, struct rtentry *);
void	slstart(struct tty *);
int	sltioctl(struct tty *, u_long, caddr_t, int);
#endif /* _KERNEL */
#endif /* _NET_IF_SLVAR_H_ */
@


1.15
log
@Switch times in the SLIP softc to time_t and reorder slightly

ok mpi@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.14 2013/06/25 09:16:34 mpi Exp $	*/
@


1.14
log
@Protect various driver descriptors by _KERNEL to stop exposing to much
stuff to userland, especially the "struct ifnet".

ok sthen@@, henning@@, uebayasi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.13 2007/11/26 09:28:33 martynas Exp $	*/
d103 2
a104 1
	long	sc_lasttime;		/* last time a char arrived */
a105 1
	long	sc_starttime;		/* time of first abort in window */
@


1.13
log
@typos;  ok jmc@@
sys/netinet/in_pcb.c and sys/net/bridgestp.c ok henning@@
sys/dev/pci/bktr/* ok jakemsr@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.12 2003/12/07 15:41:27 markus Exp $	*/
a38 34
 * Definitions for SLIP interface data structures
 * 
 * (This exists so programs like slstats can get at the definition
 *  of sl_softc.)
 */
struct sl_softc {
	struct	ifnet sc_if;		/* network-visible interface */
	int	sc_unit;		/* XXX unit number */
	struct	ifqueue sc_fastq;	/* interactive output queue */
	struct	tty *sc_ttyp;		/* pointer to tty structure */
	u_char	*sc_mp;			/* pointer to next available buf char */
	u_char	*sc_ep;			/* pointer to last available buf char */
	u_char	*sc_pktstart;		/* pointer to beginning of packet */
	struct mbuf *sc_mbuf;		/* input buffer */
	u_int	sc_flags;		/* see below */
	u_int	sc_escape;	/* =1 if last char input was FRAME_ESCAPE */
	long	sc_lasttime;		/* last time a char arrived */
	long	sc_abortcount;		/* number of abort esacpe chars */
	long	sc_starttime;		/* time of first abort in window */
	long	sc_oqlen;		/* previous output queue size */
	long	sc_otimeout;		/* number of times output's stalled */
#if defined(__NetBSD__) || defined(__OpenBSD__)
	int	sc_oldbufsize;		/* previous output buffer size */
	int	sc_oldbufquot;		/* previous output buffer quoting */
#endif
#ifdef INET				/* XXX */
	struct	slcompress sc_comp;	/* tcp compression data */
#endif
	caddr_t	sc_bpf;			/* BPF data */
	struct timeval sc_lastpacket;	/* for watchdog */
	LIST_ENTRY(sl_softc) sc_list;	/* all slip interfaces */
};

/*
d69 9
d87 4
a90 2
 * These two are interface ioctls so that pppstats can do them on
 * a socket without having to open the serial device.
d92 25
a116 1
#define SIOCGSLSTATS	_IOWR('i', 123, struct ifslstatsreq)
a117 1
#ifdef _KERNEL
@


1.12
log
@support ifconfig create; ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.11 2003/06/02 23:28:12 millert Exp $	*/
d108 1
a108 1
#define	SC_NOICMP	IFF_LINK1	/* supress ICMP traffic */
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.10 2002/03/14 01:27:09 millert Exp $	*/
d69 1
@


1.10
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.9 2001/06/15 03:38:34 itojun Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@change the meaning of ifnet.if_lastchange to meet RFC1573 ifLastChange.
follows BSD/OS practice and ucd-snmp code (FreeBSD does it for specific
interfaces only).

was: if_lastchange get updated on every packet transmission/receipt.
now: if_lastchange get updated when IFF_UP is changed.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.8 2001/06/12 21:41:32 deraadt Exp $	*/
d121 9
a129 9
void	slattach __P((int));
void	slclose __P((struct tty *));
void	slinput __P((int, struct tty *));
int	slioctl __P((struct ifnet *, u_long, caddr_t));
int	slopen __P((dev_t, struct tty *));
int	sloutput __P((struct ifnet *,
	    struct mbuf *, struct sockaddr *, struct rtentry *));
void	slstart __P((struct tty *));
int	sltioctl __P((struct tty *, u_long, caddr_t, int));
@


1.9.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.9 2001/06/15 03:38:34 itojun Exp $	*/
d121 9
a129 9
void	slattach(int);
void	slclose(struct tty *);
void	slinput(int, struct tty *);
int	slioctl(struct ifnet *, u_long, caddr_t);
int	slopen(dev_t, struct tty *);
int	sloutput(struct ifnet *,
	    struct mbuf *, struct sockaddr *, struct rtentry *);
void	slstart(struct tty *);
int	sltioctl(struct tty *, u_long, caddr_t, int);
@


1.8
log
@one less setuid program (use an ioctl like pppstats)
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.7 2001/06/09 06:16:38 angelos Exp $	*/
d72 1
@


1.7
log
@By popular demand, protect from multiple inclusion, and fix to use the
same naming style.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.6 2001/05/17 18:41:46 provos Exp $	*/
d74 31
d112 6
@


1.6
log
@convert mbuf and cluster allocation to pool, mostly from NetBSD
okay art@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.5 2001/03/13 05:16:07 mickey Exp $	*/
d39 3
d93 1
@


1.5
log
@allow configuring number of these in ukc
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.4 1997/02/24 13:34:01 niklas Exp $	*/
d52 2
a53 1
	u_char	*sc_buf;		/* input buffer */
@


1.4
log
@OpenBSD tags + some prototyping police
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.16 1996/05/07 02:40:46 thorpej Exp $	*/
d79 1
a79 1
void	slattach __P((void));
@


1.4.14.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.5 2001/03/13 05:16:07 mickey Exp $	*/
d79 1
a79 1
void	slattach __P((int));
@


1.4.14.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.4.14.1 2001/05/14 22:40:01 niklas Exp $	*/
a38 3
#ifndef _NET_IF_SLVAR_H_
#define _NET_IF_SLVAR_H_

d52 1
a52 2
	u_char	*sc_pktstart;		/* pointer to beginning of packet */
	struct mbuf *sc_mbuf;		/* input buffer */
a67 32
	struct timeval sc_lastpacket;	/* for watchdog */
};

/*
 * Statistics.
 */
struct slstat	{
	u_int	sl_ibytes;	/* bytes received */
	u_int	sl_ipackets;	/* packets received */
	u_int	sl_obytes;	/* bytes sent */
	u_int	sl_opackets;	/* packets sent */
};

struct vjstat {
	u_int	vjs_packets;	/* outbound packets */
	u_int	vjs_compressed;	/* outbound compressed packets */
	u_int	vjs_searches;	/* searches for connection state */
	u_int	vjs_misses;	/* times couldn't find conn. state */
	u_int	vjs_uncompressedin; /* inbound uncompressed packets */
	u_int	vjs_compressedin;   /* inbound compressed packets */
	u_int	vjs_errorin;	/* inbound unknown type packets */
	u_int	vjs_tossed;	/* inbound packets tossed because of error */
};

struct sl_stats {
	struct slstat	sl;	/* basic PPP statistics */
	struct vjstat	vj;	/* VJ header compression statistics */
};

struct ifslstatsreq {
	char ifr_name[IFNAMSIZ];
	struct sl_stats stats;
a77 6
/*
 * These two are interface ioctls so that pppstats can do them on
 * a socket without having to open the serial device.
 */
#define SIOCGSLSTATS	_IOWR('i', 123, struct ifslstatsreq)

a88 1
#endif /* _NET_IF_SLVAR_H_ */
@


1.4.14.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d121 9
a129 9
void	slattach(int);
void	slclose(struct tty *);
void	slinput(int, struct tty *);
int	slioctl(struct ifnet *, u_long, caddr_t);
int	slopen(dev_t, struct tty *);
int	sloutput(struct ifnet *,
	    struct mbuf *, struct sockaddr *, struct rtentry *);
void	slstart(struct tty *);
int	sltioctl(struct tty *, u_long, caddr_t, int);
@


1.4.14.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_slvar.h,v 1.4.14.3 2002/03/28 14:57:37 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.4.14.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a68 1
	LIST_ENTRY(sl_softc) sc_list;	/* all slip interfaces */
@


1.3
log
@kill a NetBSD ref
@
text
@d1 1
@


1.2
log
@if_name/if_unit -> if_xname/if_softc
@
text
@d59 1
a59 1
#ifdef NetBSD
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: if_slvar.h,v 1.15 1995/03/26 20:30:14 jtc Exp $	*/
d46 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
