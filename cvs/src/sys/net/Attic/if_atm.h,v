head	1.15;
access;
symbols
	OPENBSD_5_4:1.14.0.14
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.12
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.10
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.8
	OPENBSD_5_0:1.14.0.6
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.4
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.13.0.4
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.6
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.2
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.12.0.10
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.8
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.6
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.4
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.2
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.11.0.18
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.16
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.14
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.12
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.10
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.8
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.11
	UBC:1.10.0.4
	UBC_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.14
	OPENBSD_2_8:1.9.0.12
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.10
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.8
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.6
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.4
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.8.0.6
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.4
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7;
locks; strict;
comment	@ * @;


1.15
date	2013.08.20.09.14.23;	author mpi;	state dead;
branches;
next	1.14;

1.14
date	2010.05.07.13.33.16;	author claudio;	state Exp;
branches;
next	1.13;

1.13
date	2008.11.07.19.09.03;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2006.06.17.10.22.06;	author henning;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.14.01.27.09;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.09.06.16.37;	author angelos;	state Exp;
branches
	1.10.4.1;
next	1.9;

1.9
date	98.05.10.18.53.05;	author deraadt;	state Exp;
branches
	1.9.8.1;
next	1.8;

1.8
date	96.11.09.23.02.31;	author chuck;	state Exp;
branches;
next	1.7;

1.7
date	96.07.03.17.14.30;	author chuck;	state Exp;
branches;
next	1.6;

1.6
date	96.06.29.20.05.41;	author chuck;	state Exp;
branches;
next	1.5;

1.5
date	96.06.28.02.33.41;	author chuck;	state Exp;
branches;
next	1.4;

1.4
date	96.06.27.04.33.10;	author chuck;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.04.21.31;	author chuck;	state Exp;
branches;
next	1.2;

1.2
date	96.06.21.21.35.18;	author chuck;	state Exp;
branches;
next	1.1;

1.1
date	96.06.21.15.13.39;	author chuck;	state Exp;
branches;
next	;

1.9.8.1
date	2001.07.04.10.53.55;	author niklas;	state Exp;
branches;
next	1.9.8.2;

1.9.8.2
date	2002.03.28.14.57.36;	author niklas;	state Exp;
branches;
next	;

1.10.4.1
date	2002.06.11.03.30.45;	author art;	state Exp;
branches;
next	;


desc
@@


1.15
log
@tedu netnatm and ueagle(4).

ok mikeb@@, sthen@@, tedu@@ (implied), doc bits ok jmc@@
@
text
@/*      $OpenBSD: if_atm.h,v 1.14 2010/05/07 13:33:16 claudio Exp $       */

/*
 *
 * Copyright (c) 1996 Charles D. Cranor and Washington University.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Charles D. Cranor and
 *	Washington University.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * net/if_atm.h
 */
#ifndef _NET_IF_ATM_H_
#define _NET_IF_ATM_H_

/*
 * pseudo header for packet transmission
 */

struct atm_pseudohdr {
  u_int8_t atm_ph[4];	/* flags+VPI+VCI1(msb)+VCI2(lsb) */
};

#define ATM_PH_FLAGS(X)	((X)->atm_ph[0])
#define ATM_PH_VPI(X)	((X)->atm_ph[1])
#define ATM_PH_VCI(X)	((((X)->atm_ph[2]) << 8) | ((X)->atm_ph[3]))
#define ATM_PH_SETVCI(X,V) do { \
	(X)->atm_ph[2] = ((V) >> 8) & 0xff; \
	(X)->atm_ph[3] = ((V) & 0xff); \
} while (/* CONSTCOND */0)

#define ATM_PH_AAL5    0x01	/* use AAL5? (0 == aal0) */
#define ATM_PH_LLCSNAP 0x02	/* use the LLC SNAP encoding (iff aal5) */

#define ATM_PH_DRIVER7  0x40	/* reserve for driver's use */
#define ATM_PH_DRIVER8  0x80	/* reserve for driver's use */

#define ATMMTU		9180	/* ATM MTU size for IP */
				/* XXX: could be 9188 with LLC/SNAP according
					to comer */

/* user's ioctl hook for raw atm mode */
#define SIOCRAWATM	_IOWR('a', 122, int)	/* set driver's raw mode */

/* atm_pseudoioctl: turns on and off RX VCIs  [for internal use only!] */
struct atm_pseudoioctl {
  struct atm_pseudohdr aph;
  void *rxhand;
};
#define SIOCATMENA	_IOWR('a', 123, struct atm_pseudoioctl) /* enable */
#define SIOCATMDIS	_IOWR('a', 124, struct atm_pseudoioctl) /* disable */

/*
 * XXX forget all the garbage in if_llc.h and do it the easy way
 */

#define ATMLLC_HDR "\252\252\3\0\0\0"
struct atmllc {
  u_int8_t llchdr[6];	/* aa.aa.03.00.00.00 */
  u_int8_t type[2];	/* "ethernet" type */
};

/* ATM_LLC macros: note type code in host byte order */
#define ATM_LLC_TYPE(X) (((X)->type[0] << 8) | ((X)->type[1]))
#define ATM_LLC_SETTYPE(X,V) do { \
	(X)->type[0] = ((V) >> 8) & 0xff; \
	(X)->type[1] = ((V) & 0xff); \
} while (/* CONSTCOND */0)

#ifdef _KERNEL
void	atm_ifattach(struct ifnet *);
void	atm_input(struct ifnet *, struct atm_pseudohdr *,
		struct mbuf *, void *);
int	atm_output(struct ifnet *, struct mbuf *, struct sockaddr *, 
		struct rtentry *);
#endif /* _KERNEL */
#endif /* _NET_IF_ATM_H_ */
@


1.14
log
@Start cleaning up the mess called rtalloc*. Kill rtalloc2, make rtalloc1
accept flags for report and nocloning. Move the rtableid into struct route
(with a minor twist for now) and make a few more codepathes rdomain aware.
Appart from the pf.c and route.c bits the diff is mostly mechanical.
More to come...
OK michele, henning
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.13 2008/11/07 19:09:03 deraadt Exp $       */
@


1.13
log
@use do { } while (/* CONSTCOND */ 0) construct for all multi-line functional macros; ok otto
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.12 2006/06/17 10:22:06 henning Exp $       */
a39 2

#define RTALLOC1(A,B)		rtalloc1((A),(B), 0)
@


1.12
log
@unbreak; from theo
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.11 2002/03/14 01:27:09 millert Exp $       */
d54 1
a54 1
#define ATM_PH_SETVCI(X,V) { \
d57 1
a57 1
}
d92 1
a92 1
#define ATM_LLC_SETTYPE(X,V) { \
d95 1
a95 1
}
@


1.11
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.10 2001/06/09 06:16:37 angelos Exp $       */
d41 1
a41 1
#define RTALLOC1(A,B)		rtalloc1((A),(B))
@


1.10
log
@By popular demand, protect from multiple inclusion, and fix to use the
same naming style.
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.9 1998/05/10 18:53:05 deraadt Exp $       */
d98 5
a102 5
void	atm_ifattach __P((struct ifnet *));
void	atm_input __P((struct ifnet *, struct atm_pseudohdr *,
		struct mbuf *, void *));
int	atm_output __P((struct ifnet *, struct mbuf *, struct sockaddr *, 
		struct rtentry *));
@


1.10.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.10 2001/06/09 06:16:37 angelos Exp $       */
d98 5
a102 5
void	atm_ifattach(struct ifnet *);
void	atm_input(struct ifnet *, struct atm_pseudohdr *,
		struct mbuf *, void *);
int	atm_output(struct ifnet *, struct mbuf *, struct sockaddr *, 
		struct rtentry *);
@


1.9
log
@Make ATM_LLC_SETTYPE do the rigth thing: swap byte on LE machines, don't
swap on BE machines. The previous revision required a ntohs() in atm_output(),
to work on LE machines. This was broken for BE machines; bouyer
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.8 1996/11/09 23:02:31 chuck Exp $       */
d38 2
a40 7
#if (defined(__FreeBSD__) || defined(__bsdi__)) && defined(KERNEL)
#ifndef _KERNEL
#define _KERNEL
#endif
#endif /* freebsd doesn't define _KERNEL */

#if defined(__NetBSD__) || defined(__OpenBSD__) || defined(__bsdi__)
a41 3
#elif defined(__FreeBSD__)
#define RTALLOC1(A,B)		rtalloc1((A),(B),0UL)
#endif
d103 2
a104 1
#endif
@


1.9.8.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.9 1998/05/10 18:53:05 deraadt Exp $       */
a37 2
#ifndef _NET_IF_ATM_H_
#define _NET_IF_ATM_H_
d39 7
d47 3
d111 1
a111 2
#endif /* _KERNEL */
#endif /* _NET_IF_ATM_H_ */
@


1.9.8.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*      $OpenBSD$       */
d98 5
a102 5
void	atm_ifattach(struct ifnet *);
void	atm_input(struct ifnet *, struct atm_pseudohdr *,
		struct mbuf *, void *);
int	atm_output(struct ifnet *, struct mbuf *, struct sockaddr *, 
		struct rtentry *);
@


1.8
log
@fix previous byte-order fix the correct way
(from Zdenek Salvet <salvet@@horn.ics.muni.cz>)
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.7 1996/07/03 17:14:30 chuck Exp $       */
d101 2
a102 2
	(X)->type[1] = ((V) >> 8) & 0xff; \
	(X)->type[0] = ((V) & 0xff); \
@


1.7
log
@ported to FreeBSD 2.2-960612-SNAP.
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.5 1996/06/29 20:07:05 chuck Exp $       */
d98 2
a99 1
#define ATM_LLC_TYPE(X) (((X)->type[1] << 8) | ((X)->type[0]))
@


1.6
log
@change:
  - change asock to rxhand and adjust all for this [esp atm_input]
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.4 1996/06/28 02:34:34 chuck Exp $       */
d38 12
@


1.5
log
@add hook for user to turn on/off raw mode
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.3 1996/06/27 04:34:17 chuck Exp $       */
d71 1
a71 1
  struct socket *asock;
d95 1
a95 1
		struct mbuf *, struct socket *));
@


1.4
log
@fix/improvement:
 - add proto if atm_input
 - add native mode atm hooks to if_atmsubr.c (atm_input)
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.2 1996/06/26 04:22:54 chuck Exp $       */
d65 2
a66 1
/* pseudo ioctl */
d68 1
d73 2
a74 3

#define SIOCATMENA	_IOWR('a', 122, struct atm_pseudoioctl) /* enable */
#define SIOCATMDIS	_IOWR('a', 123, struct atm_pseudoioctl) /* disable */
@


1.3
log
@[1] add new rxso passing structure to if_atm.h
[2] modify atm_output to handle native mode atm output mbufs
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.1 1996/06/22 01:47:35 chuck Exp $       */
d92 5
a96 3
void atm_ifattach __P((struct ifnet *));
int atm_output __P((struct ifnet *, struct mbuf *, struct sockaddr *, 
	struct rtentry *));
@


1.2
log
@use correct copyright
@
text
@d1 1
a1 1
/*      $OpenBSD: if_atm.h,v 1.1 1996/06/21 15:13:39 chuck Exp $       */
d66 8
a73 2
#define SIOCATMENA	_IOWR('a', 122, struct atm_pseudohdr) /* enable */
#define SIOCATMDIS	_IOWR('a', 123, struct atm_pseudohdr) /* disable */
@


1.1
log
@network support for ATM networks (ATM == Async Transfer Mode, not
Automatic Teller Machine).

Currently supports PVCs only (no ATM ARP either).
@
text
@d1 1
a1 1
/*      $OpenBSD: $       */
d5 1
a5 1
 * Copyright (c) 1996 Charles D. Cranor
d18 2
a19 1
 *      This product includes software developed by Charles D. Cranor.
@
