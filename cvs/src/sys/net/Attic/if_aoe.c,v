head	1.4;
access;
symbols
	OPENBSD_5_6:1.3.0.16
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2014.10.07.20.23.32;	author tedu;	state dead;
branches;
next	1.3;
commitid	1hbxZJRSxjvGk5Dm;

1.3
date	2011.07.04.03.18.01;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2010.08.21.06.50.42;	author blambert;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.23.23.44.01;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove preliminary AOE (ata over ethernet) support. not finished after
many years and wide spread demand for support never materialized.
time to pack it in.
@
text
@/* $OpenBSD: if_aoe.c,v 1.3 2011/07/04 03:18:01 tedu Exp $ */
/*
 * Copyright (c) 2008 Ted Unangst <tedu@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/queue.h>
#include <sys/workq.h>
#include <sys/socket.h>
#include <sys/mbuf.h>
#include <net/if.h>
#include <net/if_aoe.h>

#ifdef AOE_DEBUG
#define	DPRINTF(x)	printf x
#else
#define	DPRINTF(x)	/* nothing */
#endif

struct aoe_handler_head aoe_handlers = TAILQ_HEAD_INITIALIZER(aoe_handlers);

void
aoe_input(struct ifnet *ifp, struct mbuf *m) 
{
	struct aoe_packet *ap;
	struct aoe_handler *q = NULL;

	splassert(IPL_NET);

	ap = mtod(m, struct aoe_packet *);
	DPRINTF(("aoe packet %d %d\n", htons(ap->major), ap->minor));

	TAILQ_FOREACH(q, &aoe_handlers, next) {
		if (q->ifp == ifp) {
			if (ap->major == q->major && ap->minor == q->minor)
				break;
		}
	}
	if (!q) {
		DPRINTF(("no q\n"));
		m_freem(m);
		return;
	}

	if (workq_add_task(NULL, 0, q->fn, q, m) != 0)
		m_freem(m);
}
@


1.3
log
@there's no way we can use just a single workq task here.  one task for all packets?
@
text
@d1 1
a1 1
/* $OpenBSD: if_aoe.c,v 1.2 2010/08/21 06:50:42 blambert Exp $ */
@


1.2
log
@an unchecked-for failure of workq_add_task could lead to an mbuf leak

steal a page from dlg@@ and embed a workq_task struct directly in
the aoe_handler struct so that we won't fail when enqueueing a task

while here, create real debugging printfs vice commenting out regular ones,
and kill with fire the excessive number of includes

ok marco@@ tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: if_aoe.c,v 1.1 2008/11/23 23:44:01 tedu Exp $ */
d57 2
a58 1
	workq_queue_task(NULL, &q->task, 0, q->fn, q, m);
@


1.1
log
@softraid support for ata over ethernet (aoe).  this includes a client and
part of a server.  there's no configuration yet, and several other drawbacks,
but it can be hammered into shape.  i haven't moved the code forward in a year,
and marco wants it in the tree to hack on.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a18 9
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/device.h>
#include <sys/ioctl.h>
#include <sys/proc.h>
#include <sys/malloc.h>
#include <sys/kernel.h>
#include <sys/disk.h>
#include <sys/rwlock.h>
a19 6
#include <sys/vnode.h>
#include <sys/namei.h>
#include <sys/fcntl.h>
#include <sys/disklabel.h>
#include <sys/conf.h>
#include <sys/stat.h>
a22 1
#include <sys/socketvar.h>
a23 3
#include <netinet/in.h>
#include <net/ethertypes.h>
#include <netinet/if_ether.h>
d26 6
d43 1
a43 1
	/* printf("aoe packet %d %d\n", htons(ap->major), ap->minor); */
d52 1
a52 1
		/* printf("no q\n"); */
d56 2
a57 1
	workq_add_task(NULL, 0, q->fn, q, m);
@

