head	1.14;
access;
symbols
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.4
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.13.0.28
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.22
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.24
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.16
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.20
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.18
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.14
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.12
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.10
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.8
	OPENBSD_5_0:1.13.0.6
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.4
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.2
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.8
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.4
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.2
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.10.0.12
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.10
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.4.0.4
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.2
	SMP_BASE:1.2;
locks; strict;
comment	@ * @;


1.14
date	2017.01.24.10.08.30;	author krw;	state Exp;
branches;
next	1.13;
commitid	6c6qq5OdS4VVnyVM;

1.13
date	2010.06.26.19.49.54;	author claudio;	state Exp;
branches;
next	1.12;

1.12
date	2009.11.21.14.08.14;	author claudio;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.26.05.42.20;	author ray;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.14.19.24.23;	author brad;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.03.14.52.23;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.16.20.30.07;	author avsm;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.07.10.16.46;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.03.20.35.58;	author angelos;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.27.09;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.09.06.16.38;	author angelos;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2001.06.05.23.43.46;	author maja;	state Exp;
branches;
next	1.2;

1.2
date	2000.01.07.23.25.22;	author angelos;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2000.01.07.21.37.30;	author angelos;	state Exp;
branches;
next	;

1.2.2.1
date	2001.07.04.10.54.02;	author niklas;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2002.03.28.14.57.36;	author niklas;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2003.03.28.00.41.28;	author niklas;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2004.02.19.10.57.21;	author niklas;	state Exp;
branches;
next	;

1.4.4.1
date	2002.06.11.03.30.45;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@A space here, a space there. Soon we're talking real whitespace
rectification.
@
text
@/*      $OpenBSD: if_gre.h,v 1.13 2010/06/26 19:49:54 claudio Exp $ */
/*	$NetBSD: if_gre.h,v 1.5 1999/11/19 20:41:19 thorpej Exp $ */

/*
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Heiko W.Rupp <hwr@@pilhuhn.de>
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _NET_IF_GRE_H
#define _NET_IF_GRE_H

struct gre_softc {
	struct ifnet		sc_if;
	LIST_ENTRY(gre_softc)	sc_list;
	struct timeout		sc_ka_hold;
	struct timeout		sc_ka_snd;
	struct in_addr		g_src;  /* source address of gre packets */
	struct in_addr		g_dst;  /* destination address of gre packets */
	struct route		route;	/* routing entry that determines, where
					   an encapsulated packet should go */
	u_int  g_rtableid;	/* routing table used for the tunnel */
	int			gre_unit;
	int			gre_flags;
	int			sc_ka_timout;
	int			sc_ka_holdmax;
	int			sc_ka_holdcnt;
	int			sc_ka_cnt;
	u_char			g_proto;	/* protocol of encapsulator */
	u_char			sc_ka_state;
#define GRE_STATE_UKNWN	0
#define GRE_STATE_DOWN	1
#define GRE_STATE_HOLD	2
#define GRE_STATE_UP	3
};


struct gre_h {
	u_int16_t flags;	/* GRE flags */
	u_int16_t ptype;	/* protocol type of payload typically
                               Ether protocol type*/
/*
 *  from here on: fields are optional, presence indicated by flags
 *
	u_int_16 checksum	 checksum (one-complements of GRE header
                             and payload
                             Present if (ck_pres | rt_pres == 1).
                             Valid if (ck_pres == 1).
	u_int_16 offset			 offset from start of routing filed to
                             first octet of active SRE (see below).
                             Present if (ck_pres | rt_pres == 1).
                             Valid if (rt_pres == 1).
	u_int_32 key         inserted by encapsulator e.g. for
                             authentication
                             Present if (key_pres ==1 ).
	u_int_32 seq_num     Sequence number to allow for packet order
                             Present if (seq_pres ==1 ).

    struct gre_sre[] routing Routing fileds (see below)
                             Present if (rt_pres == 1)
*/
} __packed;

struct greip {
	struct ip gi_i;
	struct gre_h  gi_g;
} __packed;

#define gi_pr           gi_i.ip_p
#define gi_len          gi_i.ip_len
#define gi_src          gi_i.ip_src
#define gi_dst          gi_i.ip_dst
#define gi_ptype	gi_g.ptype
#define gi_flags	gi_g.flags

#define GRE_CP          0x8000  /* Checksum Present */
#define GRE_RP          0x4000  /* Routing Present */
#define GRE_KP          0x2000  /* Key Present */
#define GRE_SP          0x1000  /* Sequence Present */
#define GRE_SS		0x0800	/* Strict Source Route */

/* gre_sre defines a Source route Entry. These are needed if packets
 *  should be routed over more than one tunnel hop by hop
 */

struct gre_sre {
	u_int16_t sre_family;	/* address family */
	u_char  sre_offset;	/* offset to first octet of active entry */
	u_char  sre_length;	/* number of octets in the SRE.
                               sre_lengthl==0 -> last entry. */
	u_char  *sre_rtinfo;	/* the routing information */
};

struct greioctl {
	int unit;
	struct    in_addr addr;
};

/* for mobile encaps */

struct mobile_h {
	u_int16_t proto;		/* protocol and S-bit */
	u_int16_t hcrc;			/* header checksum */
	u_int32_t odst;			/* original destination address */
	u_int32_t osrc;			/* original source addr, if S-bit set */
} __packed;

struct mobip_h {
	struct ip       mi;
	struct mobile_h mh;
} __packed;


#define MOB_H_SIZ_S		(sizeof(struct mobile_h) - sizeof(u_int32_t))
#define MOB_H_SIZ_L		(sizeof(struct mobile_h))
#define MOB_H_SBIT	0x0080


/*
 * ioctls needed to manipulate the interface
 */

#ifdef _KERNEL
extern  LIST_HEAD(gre_softc_head, gre_softc) gre_softc_list;
extern  int gre_allow;
extern  int gre_wccp;
extern  int ip_mobile_allow;

void	greattach(int);
int     gre_ioctl(struct ifnet *, u_long, caddr_t);
int     gre_output(struct ifnet *, struct mbuf *, struct sockaddr *,
	    struct rtentry *);
u_int16_t gre_in_cksum(u_int16_t *, u_int);
void	gre_recv_keepalive(struct gre_softc *);
#endif /* _KERNEL */
#endif /* _NET_IF_GRE_H_ */
@


1.13
log
@Implement a simple keepalive mechanism in gre(4) that is compatible with
the one used by Cisco. It sends a return gre packet inside a gre packet
to the other side and expects it to return.
OK deraadt, reyk additional testing by sthen
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.12 2009/11/21 14:08:14 claudio Exp $ */
d19 1
a19 1
 *    
d58 1
a58 1
};	
d63 1
a63 1
	u_int16_t ptype;	/* protocol type of payload typically 
d65 2
a66 2
/* 
 *  from here on: fields are optional, presence indicated by flags 
d112 1
a112 1
	u_char  sre_length;	/* number of octets in the SRE. 
d142 2
a143 2
/* 
 * ioctls needed to manipulate the interface 
d148 1
a148 1
extern  int gre_allow;   
@


1.12
log
@Add a way to bind the tunnel endpoint of a gif/gre interface into a
different rdomain than the default one. This allows to do MPLS VPNs
without the MPLS madness.  OK deraadt@@, henning@@
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.11 2008/06/26 05:42:20 ray Exp $ */
d37 8
a44 8
	struct ifnet sc_if;
	LIST_ENTRY(gre_softc) sc_list;
	struct    in_addr g_src;  /* source address of gre packets */
	struct    in_addr g_dst;  /* destination address of gre packets */
	struct route route;	/* routing entry that determines, where a
                                   encapsulated packet should go */
	int gre_unit;
	int gre_flags;
d46 12
a57 1
	u_char g_proto;		/* protocol of encapsulator */
d157 1
@


1.11
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.10 2005/05/14 19:24:23 brad Exp $ */
a38 2
	int gre_unit;
	int gre_flags;
d43 3
@


1.10
log
@- Add IPv6 over GRE.
- u_short -> u_int16_t
- Change default MTU to 1476 (same value that Cisco and other *BSD's use).
- Mark gre(4) interfaces as IFT_TUNNEL (Encapsulation interface).

From NetBSD

- Support setting the MTU

Be very careful when upgrading, the change in default MTU might cause
problems with an existing OpenBSD <-> OpenBSD setup.

Thanks to Stephen Marley <stephen dot marley at catwoman dot cl-is dot com>
for some testing.
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.9 2003/12/03 14:52:23 markus Exp $ */
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.9
log
@add support for ifconfig clone/destroy; ok henning deraadt
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.8 2003/11/16 20:30:07 avsm Exp $ */
d150 2
a151 2
	    struct rtentry *rt);
u_short	gre_in_cksum(u_short *p, u_int len);
@


1.8
log
@convert __attribute__((__packed__)) to __packed so that parsers unaware
of gcc extensions have more of a chance.
ok mcbride@@, no objections from millert@@, deraadt@@
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.7 2003/11/07 10:16:46 jmc Exp $ */
d45 1
d142 1
a142 2
extern	struct gre_softc *gre;
extern	int ngre;
@


1.7
log
@adress -> address, and a few more; all from Jonathon Gray;

(mvme68k/mvme88k) vs.c and (vax) if_le.c ok miod@@
isakmpd ones ok ho@@
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.6 2002/04/03 20:35:58 angelos Exp $ */
d79 1
a79 1
} __attribute__((__packed__));
d84 1
a84 1
} __attribute__((__packed__));
d123 1
a123 1
} __attribute__((__packed__));
d128 1
a128 1
} __attribute__((__packed__));
@


1.6
log
@WCCP sysctl variable -- ok deraadt@@ niklas@@
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.5 2002/03/14 01:27:09 millert Exp $ */
d104 1
a104 1
	u_int16_t sre_family;	/* adress family */
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.4 2001/06/09 06:16:38 angelos Exp $ */
d144 1
@


1.4
log
@By popular demand, protect from multiple inclusion, and fix to use the
same naming style.
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.3 2001/06/05 23:43:46 maja Exp $ */
d146 4
a149 4
void	greattach __P((int));
int     gre_ioctl __P((struct ifnet *, u_long, caddr_t));
int     gre_output __P((struct ifnet *, struct mbuf *, struct sockaddr *,
	    struct rtentry *rt));
@


1.4.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.4 2001/06/09 06:16:38 angelos Exp $ */
a143 1
extern  int gre_wccp;
d146 4
a149 4
void	greattach(int);
int     gre_ioctl(struct ifnet *, u_long, caddr_t);
int     gre_output(struct ifnet *, struct mbuf *, struct sockaddr *,
	    struct rtentry *rt);
@


1.3
log
@Allow boot -c to change number of gre devices. -moj ok angelos@@
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.2 2000/01/07 23:25:22 angelos Exp $ */
d152 1
a152 2

#endif
@


1.2
log
@Fix tcpdump -n -i greN (causes a panic in NetBSD)
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.1 2000/01/07 21:37:30 angelos Exp $ */
d141 2
a142 1
extern	struct gre_softc gre_softc[];
d146 1
a146 1
void	greattach __P((void));
@


1.2.2.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*      $OpenBSD: if_gre.h,v 1.2 2000/01/07 23:25:22 angelos Exp $ */
d141 1
a141 2
extern	struct gre_softc *gre;
extern	int ngre;
d145 1
a145 1
void	greattach __P((int));
d151 2
a152 1
#endif /* _NET_IF_GRE_H_ */
@


1.2.2.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*      $OpenBSD$ */
d146 4
a149 4
void	greattach(int);
int     gre_ioctl(struct ifnet *, u_long, caddr_t);
int     gre_output(struct ifnet *, struct mbuf *, struct sockaddr *,
	    struct rtentry *rt);
@


1.2.2.3
log
@Sync the SMP branch with 3.3
@
text
@a143 1
extern  int gre_wccp;
@


1.2.2.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a44 1
	LIST_ENTRY(gre_softc) sc_list;
d79 1
a79 1
} __packed;
d84 1
a84 1
} __packed;
d104 1
a104 1
	u_int16_t sre_family;	/* address family */
d123 1
a123 1
} __packed;
d128 1
a128 1
} __packed;
d141 2
a142 1
extern  LIST_HEAD(gre_softc_head, gre_softc) gre_softc_list;
@


1.1
log
@gre interface code, from NetBSD (with some changes)
@
text
@d1 1
a1 1
/*      $OpenBSD$ */
a48 1
	caddr_t	gre_bpf;
@

