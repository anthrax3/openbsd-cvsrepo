head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.4
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.11.0.4
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.10.0.6
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.8.0.14
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.10
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.8
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.4
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.4
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.14
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2017.05.04.15.00.24;	author bluhm;	state Exp;
branches;
next	1.11;
commitid	Gef6NNDxonzfVaq2;

1.11
date	2017.01.24.10.08.30;	author krw;	state Exp;
branches;
next	1.10;
commitid	6c6qq5OdS4VVnyVM;

1.10
date	2015.10.22.15.37.47;	author bluhm;	state Exp;
branches;
next	1.9;
commitid	tp9bS9eCrwvRYjyO;

1.9
date	2015.09.15.09.13.33;	author guenther;	state Exp;
branches;
next	1.8;
commitid	xpcDULgZh43kkojI;

1.8
date	2012.12.05.23.20.23;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.08.01.09.52;	author claudio;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.28.12;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.27.09;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.09.06.16.37;	author angelos;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2001.01.09.17.24.00;	author angelos;	state Exp;
branches;
next	1.2;

1.2
date	97.02.24.13.33.58;	author niklas;	state Exp;
branches
	1.2.14.1;
next	1.1;

1.1
date	95.10.18.08.53.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.06;	author deraadt;	state Exp;
branches;
next	;

1.2.14.1
date	2001.05.14.22.40.00;	author niklas;	state Exp;
branches;
next	1.2.14.2;

1.2.14.2
date	2001.07.04.10.53.58;	author niklas;	state Exp;
branches;
next	1.2.14.3;

1.2.14.3
date	2002.03.28.14.57.36;	author niklas;	state Exp;
branches;
next	1.2.14.4;

1.2.14.4
date	2003.06.07.11.06.06;	author ho;	state Exp;
branches;
next	;

1.4.4.1
date	2002.06.11.03.30.45;	author art;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Introduce sstosa() for converting sockaddr_storage with a type safe
inline function instead of casting it to sockaddr.  While there,
use inline instead of __inline for all these conversions.  Some
struct sockaddr casts can be avoided completely.
OK dhill@@ mpi@@
@
text
@/*	$OpenBSD: if_dl.h,v 1.11 2017/01/24 10:08:30 krw Exp $	*/
/*	$NetBSD: if_dl.h,v 1.8 1995/03/26 20:30:13 jtc Exp $	*/

/*
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)if_dl.h	8.1 (Berkeley) 6/10/93
 */

/*
 * A Link-Level Sockaddr may specify the interface in one of two
 * ways: either by means of a system-provided index number (computed
 * anew and possibly differently on every reboot), or by a human-readable
 * string such as "il0" (for managerial convenience).
 *
 * Census taking actions, such as something akin to SIOCGCONF would return
 * both the index and the human name.
 *
 * High volume transactions (such as giving a link-level ``from'' address
 * in a recvfrom or recvmsg call) may be likely only to provide the indexed
 * form, (which requires fewer copy operations and less space).
 *
 * The form and interpretation  of the link-level address is purely a matter
 * of convention between the device driver and its consumers; however, it is
 * expected that all drivers for an interface of a given if_type will agree.
 */

#ifndef _NET_IF_DL_H_
#define _NET_IF_DL_H_

/*
 * Structure of a Link-Level sockaddr:
 */
struct sockaddr_dl {
	u_char	  sdl_len;	/* Total length of sockaddr */
	u_char	  sdl_family;	/* AF_LINK */
	u_int16_t sdl_index;	/* if != 0, system given index for interface */
	u_char	  sdl_type;	/* interface type */
	u_char	  sdl_nlen;	/* interface name length, no trailing 0 reqd. */
	u_char	  sdl_alen;	/* link level address length */
	u_char	  sdl_slen;	/* link layer selector length, mostly 0 */
	char	  sdl_data[24];	/* minimum work area, can be larger;
				   contains both if name and ll address;
				   big enough for IFNAMSIZ plus 8byte ll addr */
};

#define LLADDR(s) ((caddr_t)((s)->sdl_data + (s)->sdl_nlen))

#ifdef _KERNEL

static inline struct sockaddr_dl *
satosdl(struct sockaddr *sa)
{
	return ((struct sockaddr_dl *)(sa));
}

static inline struct sockaddr *
sdltosa(struct sockaddr_dl *sdl)
{
	return ((struct sockaddr *)(sdl));
}

#else /* _KERNEL */

__BEGIN_DECLS
char	*link_ntoa(const struct sockaddr_dl *);
__END_DECLS

#endif /* _KERNEL */
#endif /* _NET_IF_DL_H_ */
@


1.11
log
@A space here, a space there. Soon we're talking real whitespace
rectification.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.10 2015/10/22 15:37:47 bluhm Exp $	*/
d76 1
a76 1
static __inline struct sockaddr_dl *
d82 1
a82 1
static __inline struct sockaddr *
@


1.10
log
@Inspired by satosin(), use inline functions to convert sockaddr dl.
Instead of casts they check wether the incoming object has the
expected type.  So introduce satosdl() and sdltosa() in the kernel.
OK mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.9 2015/09/15 09:13:33 guenther Exp $	*/
d35 1
a35 1
/* 
d40 1
a40 1
 * 
d43 1
a43 1
 * 
d47 1
a47 1
 * 
@


1.9
log
@link_addr() is gone

ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.8 2012/12/05 23:20:23 deraadt Exp $	*/
d74 15
a88 1
#ifndef _KERNEL
@


1.8
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.7 2011/07/08 01:09:52 claudio Exp $	*/
a76 1
void	link_addr(const char *, struct sockaddr_dl *);
@


1.7
log
@Increase sdl_data so that more then IFNAMSIZ bytes are available.
Additionally round the sizeof(struct sockaddr_dl) to a power of 2.
OK guenther@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.6 2003/06/02 23:28:12 millert Exp $	*/
a74 2

#include <sys/cdefs.h>
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.5 2002/03/14 01:27:09 millert Exp $	*/
d66 4
a69 3
	u_char	  sdl_slen;	/* link layer selector length */
	char	  sdl_data[12];	/* minimum work area, can be larger;
				   contains both if name and ll address */
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.4 2001/06/09 06:16:37 angelos Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@By popular demand, protect from multiple inclusion, and fix to use the
same naming style.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.3 2001/01/09 17:24:00 angelos Exp $	*/
d82 2
a83 2
void	link_addr __P((const char *, struct sockaddr_dl *));
char	*link_ntoa __P((const struct sockaddr_dl *));
@


1.4.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.4 2001/06/09 06:16:37 angelos Exp $	*/
d82 2
a83 2
void	link_addr(const char *, struct sockaddr_dl *);
char	*link_ntoa(const struct sockaddr_dl *);
@


1.3
log
@Fix comment (noticed by cas@@trans-nt.com)
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.2 1997/02/24 13:33:58 niklas Exp $	*/
d57 3
d86 2
a87 1
#endif /* !_KERNEL */
@


1.2
log
@OpenBSD tags + some prototyping police
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.8 1995/03/26 20:30:13 jtc Exp $	*/
d62 1
a62 1
	u_char	  sdl_family;	/* AF_DLI */
@


1.2.14.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.3 2001/01/09 17:24:00 angelos Exp $	*/
d62 1
a62 1
	u_char	  sdl_family;	/* AF_LINK */
@


1.2.14.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.2.14.1 2001/05/14 22:40:00 niklas Exp $	*/
a56 3
#ifndef _NET_IF_DL_H_
#define _NET_IF_DL_H_

d83 1
a83 2
#endif /* _KERNEL */
#endif /* _NET_IF_DL_H_ */
@


1.2.14.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d82 2
a83 2
void	link_addr(const char *, struct sockaddr_dl *);
char	*link_ntoa(const struct sockaddr_dl *);
@


1.2.14.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_dl.h,v 1.2.14.3 2002/03/28 14:57:36 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
