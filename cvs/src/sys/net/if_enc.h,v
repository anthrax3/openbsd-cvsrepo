head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.8
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.10
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.4
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.6
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.11.0.8
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.12
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.10
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.8
	OPENBSD_5_0:1.10.0.6
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.4
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.2
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.8.0.36
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.38
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.34
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.32
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.30
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.28
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.26
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.24
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.22
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.20
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.18
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.16
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.14
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.12
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.10
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.8
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.6
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.8.0.4
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.6
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.2
	SMP_BASE:1.5
	kame_19991208:1.2
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2014.12.08.10.46.14;	author mpi;	state Exp;
branches;
next	1.11;
commitid	ExaN0TCQ4X0c1lo6;

1.11
date	2013.06.25.09.16.34;	author mpi;	state Exp;
branches;
next	1.10;

1.10
date	2010.07.01.02.09.45;	author reyk;	state Exp;
branches;
next	1.9;

1.9
date	2010.06.29.21.28.37;	author reyk;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.25.05.14.00;	author angelos;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.09.06.16.37;	author angelos;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.30.22.56.23;	author angelos;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.15.20.02.37;	author angelos;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	99.12.31.19.47.45;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.12.27.03.06.40;	author angelos;	state Exp;
branches;
next	1.2;

1.2
date	99.10.29.05.22.02;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	98.06.10.23.57.11;	author provos;	state Exp;
branches;
next	;

1.5.2.1
date	2001.05.14.22.40.00;	author niklas;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2001.07.04.10.53.59;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.12
log
@There's no good reason to keep into "struct ifnet" a pointer that's only
used by enc(4) devices to attach their routes.

ok sthen@@, mikeb@@
@
text
@/*	$OpenBSD: if_enc.h,v 1.11 2013/06/25 09:16:34 mpi Exp $	*/

/*
 * Copyright (c) 2010 Reyk Floeter <reyk@@vantronix.net>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _NET_ENC_H
#define _NET_ENC_H

#define ENCMTU		1536		/* XXX should be bigger, maybe LOMTU */
#define ENC_HDRLEN	12

struct enchdr {
	u_int32_t af;
	u_int32_t spi;
	u_int32_t flags;
};

#ifdef _KERNEL
struct enc_softc {
	struct ifnet		 sc_if;		/* virtual interface */
	u_int			 sc_unit;
	struct ifaddr		 sc_ifa;	/* needed to attach rtentry */
};

struct ifnet	*enc_getif(u_int, u_int);
struct ifaddr	*enc_getifa(u_int, u_int);
#endif /* _KERNEL */

#endif /* _NET_ENC_H */
@


1.11
log
@Protect various driver descriptors by _KERNEL to stop exposing to much
stuff to userland, especially the "struct ifnet".

ok sthen@@, henning@@, uebayasi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_enc.h,v 1.10 2010/07/01 02:09:45 reyk Exp $	*/
d35 1
d39 1
@


1.10
log
@Allow to specify an alternative enc(4) interface for an SA.  All
traffic for this SA will appear on the specified enc interface instead
of enc0 and can be filtered and monitored separately. This will allow
to group individual ipsec policies to virtual interfaces and
simplifies monitoring and pf filtering with many ipsec policies a lot.

This diff includes the following changes:
- Store the enc interface unit (default 0) in the TDB of an SA and pass
it to the enc_getif() lookup when running the bpf or pf_test() handlers.
- Add the pfkey SADB_X_EXT_TAP extension to communicate the encX
interface unit for a specified SA between userland and kernel.
- Update enc(4) again to use an allocate array instead of the TAILQ to
lookup the matching enc interface in enc_getif() quickly.

Discussed with many, tested by a few, will need more testing & review.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_enc.h,v 1.9 2010/06/29 21:28:37 reyk Exp $	*/
a24 5
struct enc_softc {
	struct ifnet		 sc_if;		/* virtual interface */
	u_int			 sc_unit;
};

d31 6
d38 1
@


1.9
log
@Replace enc(4) with a new implementation as a cloner device.  We still
create enc0 by default, but it is possible to add additional enc
interfaces.  This will be used later to allow alternative encs per
policy or to have an enc per rdomain when IPsec becomes rdomain-aware.

manpage bits ok jmc@@
input from henning@@ deraadt@@ toby@@ naddy@@
ok henning@@ claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a27 2

	TAILQ_ENTRY(enc_softc)	 sc_entry;
d36 1
a36 1
struct ifnet	*enc_getif(u_int);
@


1.8
log
@Copyright update.
@
text
@d1 2
a2 1
/* $OpenBSD$ */
d4 1
a4 12
 * The authors of this code are John Ioannidis (ji@@tla.org),
 * Angelos D. Keromytis (kermit@@csd.uch.gr) and 
 * Niels Provos (provos@@physnet.uni-hamburg.de).
 *
 * This code was written by John Ioannidis for BSD/OS in Athens, Greece, 
 * in November 1995.
 *
 * Ported to OpenBSD and NetBSD, with additional transforms, in December 1996,
 * by Angelos D. Keromytis.
 *
 * Additional transforms and features in 1997 and 1998 by Angelos D. Keromytis
 * and Niels Provos.
d6 11
a16 18
 * Copyright (C) 1995, 1996, 1997, 1998 by John Ioannidis, Angelos D. Keromytis
 * and Niels Provos.
 * Copyright (c) 2001, Angelos D. Keromytis.
 *
 * Permission to use, copy, and modify this software with or without fee
 * is hereby granted, provided that this entire notice is included in
 * all copies of any software which is or includes a copy or
 * modification of this software. 
 * You may use this code under the GNU public license if you so wish. Please
 * contribute changes back to the authors under this freer than GPL license
 * so that we may further the use of strong encryption without limitations to
 * all.
 *
 * THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTY. IN PARTICULAR, NONE OF THE AUTHORS MAKES ANY
 * REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE
 * MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
 * PURPOSE.
d19 2
a20 2
#ifndef _NET_IF_ENC_H_
#define _NET_IF_ENC_H_
d22 1
a22 1
#define ENCMTU		(1024+512)
d26 4
a29 1
	struct ifnet		sc_if;  /* the interface */
d38 3
a40 2
extern struct enc_softc encif[];
#endif /* _NET_IF_ENC_H_ */
@


1.7
log
@By popular demand, protect from multiple inclusion, and fix to use the
same naming style.
@
text
@d1 1
d18 3
a20 2
 *	
 * Permission to use, copy, and modify this software without fee
@


1.6
log
@For bridged IPsec, use the gif* interfaces.
@
text
@d34 2
a35 2
#ifndef _IF_ENC_H_
#define _IF_ENC_H_
d51 1
a51 1
#endif
@


1.5
log
@Don't allow enc0 to be added to a bridge, as it's used for all
non-bound SAs...
@
text
@a41 10
	union sockaddr_union	sc_dst;
	u_int32_t		sc_spi;
	u_int32_t		sc_sproto;
};

struct ifsa {
	char			sa_ifname[IFNAMSIZ];	/* bridge ifs name */
	u_int32_t		sa_spi;
	u_int8_t		sa_proto;
	union sockaddr_union	sa_dst;
@


1.5.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d42 10
@


1.5.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@a0 1
/* $OpenBSD$ */
d17 2
a18 3
 * Copyright (c) 2001, Angelos D. Keromytis.
 *
 * Permission to use, copy, and modify this software with or without fee
d34 2
a35 2
#ifndef _NET_IF_ENC_H_
#define _NET_IF_ENC_H_
d51 1
a51 1
#endif /* _NET_IF_ENC_H_ */
@


1.4
log
@indent
@
text
@d60 1
@


1.3
log
@Implement ioctls for binding SAs to enc interfaces (to be used with
the bridge).
@
text
@d41 4
a44 4
        struct ifnet		sc_if;  /* the interface */
        union sockaddr_union	sc_dst;
        u_int32_t		sc_spi;
        u_int32_t		sc_sproto;
d48 1
a48 1
        char                    sa_ifname[IFNAMSIZ];    /* bridge ifs name */
@


1.2
log
@enc_softc definition
@
text
@d47 7
@


1.1
log
@make the packets which were successfully processed by IPSec available to
bpf via the enc0 interface, using linktype DLT_ENC.
@
text
@d40 7
@

