head	1.12;
access;
symbols
	OPENBSD_6_1:1.11.0.4
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.12
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.8
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.6
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.32
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.30
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.28
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.24
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.26
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.22
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.20
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.18
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.16
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.14
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.12
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.2.0.32
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.30
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.28
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.26
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.24
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.22
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2017.07.03.19.23.47;	author claudio;	state Exp;
branches;
next	1.11;
commitid	NsuV54HXnDkc2JGC;

1.11
date	2017.01.24.10.08.30;	author krw;	state Exp;
branches;
next	1.10;
commitid	6c6qq5OdS4VVnyVM;

1.10
date	2016.09.05.16.07.01;	author claudio;	state Exp;
branches;
next	1.9;
commitid	SePp8JOpR5x9ssaB;

1.9
date	2015.03.14.03.38.51;	author jsg;	state Exp;
branches;
next	1.8;
commitid	p4LJxGKbi0BU2cG6;

1.8
date	2014.09.08.06.24.13;	author jsg;	state Exp;
branches;
next	1.7;
commitid	ZqXwxwmeo3l29NOg;

1.7
date	2014.07.12.18.44.22;	author tedu;	state Exp;
branches;
next	1.6;
commitid	B4dZSbxas1X1IpXI;

1.6
date	2012.01.11.23.47.06;	author bluhm;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.10.07.22.42;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.23.28.12;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.13.02.09.47;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.21.07.16;	author niklas;	state Exp;
branches
	1.2.16.1
	1.2.26.1;
next	1.1;

1.1
date	95.10.18.08.53.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.07;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2003.05.16.00.29.44;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2003.06.07.11.06.07;	author ho;	state Exp;
branches;
next	1.2.16.3;

1.2.16.3
date	2004.02.19.10.57.23;	author niklas;	state Exp;
branches;
next	;

1.2.26.1
date	2003.05.19.22.30.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Both PF_ROUTE and PF_KEY need to start to take care of their own PCB list
to simplify the locking of those lists. For now move the LIST_ENTRY from
rawcb into routecb and in the pfkey case a new keycb. Do some cleanup and
renaming in the pfkey code but more to come.
OK bluhm@@ mpi@@
@
text
@/*	$OpenBSD: raw_cb.c,v 1.11 2017/01/24 10:08:30 krw Exp $	*/
/*	$NetBSD: raw_cb.c,v 1.9 1996/02/13 22:00:39 christos Exp $	*/

/*
 * Copyright (c) 1980, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)raw_cb.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mbuf.h>
#include <sys/socket.h>
#include <sys/socketvar.h>
#include <sys/domain.h>
#include <sys/protosw.h>
#include <sys/errno.h>

#include <net/raw_cb.h>
#include <netinet/in.h>

/*
 * Routines to manage the raw protocol control blocks.
 */

u_long	raw_sendspace = RAWSNDQ;
u_long	raw_recvspace = RAWRCVQ;

/*
 * Allocate a control block and a nominal amount
 * of buffer space for the socket.
 */
int
raw_attach(struct socket *so, int proto)
{
	struct rawcb *rp = sotorawcb(so);
	int error;

	/*
	 * It is assumed that raw_attach is called
	 * after space has been allocated for the
	 * rawcb.
	 */
	if (rp == NULL)
		return (ENOBUFS);
	if ((error = soreserve(so, raw_sendspace, raw_recvspace)) != 0)
		return (error);
	rp->rcb_socket = so;
	rp->rcb_proto.sp_family = so->so_proto->pr_domain->dom_family;
	rp->rcb_proto.sp_protocol = proto;
	return (0);
}

/*
 * Detach the raw connection block and discard
 * socket resources.
 */
void
raw_detach(struct rawcb *rp)
{
	struct socket *so = rp->rcb_socket;

	so->so_pcb = 0;
	sofree(so);
	free((caddr_t)(rp), M_PCB, 0);
}

/*
 * Disconnect and possibly release resources.
 */
void
raw_disconnect(struct rawcb *rp)
{
	if (rp->rcb_socket->so_state & SS_NOFDREF)
		raw_detach(rp);
}
@


1.11
log
@A space here, a space there. Soon we're talking real whitespace
rectification.
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.c,v 1.10 2016/09/05 16:07:01 claudio Exp $	*/
a48 5
 *
 * TODO:
 *	hash lookups by protocol family/protocol + address family
 *	take care of unique address problems per AF?
 *	redo address binding to allow wildcards
a52 1
struct rawcbhead rawcb;
d69 1
a69 1
	if (rp == 0)
a75 1
	LIST_INSERT_HEAD(&rawcb, rp, rcb_list);
a89 1
	LIST_REMOVE(rp, rcb_list);
a98 1

@


1.10
log
@Remove code that was never enabled, it will not happen.
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.c,v 1.9 2015/03/14 03:38:51 jsg Exp $	*/
d48 1
a48 1
 * Routines to manage the raw protocol control blocks. 
@


1.9
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.c,v 1.8 2014/09/08 06:24:13 jsg Exp $	*/
a97 5
#ifdef notdef
	if (rp->rcb_laddr)
		m_freem(dtom(rp->rcb_laddr));
	rp->rcb_laddr = 0;
#endif
a107 5
#ifdef notdef
	if (rp->rcb_faddr)
		m_freem(dtom(rp->rcb_faddr));
	rp->rcb_faddr = 0;
#endif
a110 16

#ifdef notdef
int
raw_bind(struct socket *so, struct mbuf *nam)
{
	struct sockaddr *addr = mtod(nam, struct sockaddr *);
	struct rawcb *rp;

	if (ifnet == 0)
		return (EADDRNOTAVAIL);
	rp = sotorawcb(so);
	nam = m_copym(nam, 0, M_COPYALL, M_WAITOK);
	rp->rcb_laddr = mtod(nam, struct sockaddr *);
	return (0);
}
#endif
@


1.8
log
@remove uneeded route.h includes
ok miod@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.c,v 1.7 2014/07/12 18:44:22 tedu Exp $	*/
a43 1
#include <net/if.h>
@


1.7
log
@add a size argument to free. will be used soon, but for now default to 0.
after discussions with beck deraadt kettenis.
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.c,v 1.6 2012/01/11 23:47:06 bluhm Exp $	*/
a44 1
#include <net/route.h>
@


1.6
log
@Ansify raw_... function definitions.  No binary change.
from Michael W. Bombardieri; ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.c,v 1.5 2003/12/10 07:22:42 itojun Exp $	*/
d105 1
a105 1
	free((caddr_t)(rp), M_PCB);
@


1.5
log
@de-register.  deraadt ok
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.c,v 1.4 2003/06/02 23:28:12 millert Exp $	*/
d67 1
a67 3
raw_attach(so, proto)
	struct socket *so;
	int proto;
d93 1
a93 2
raw_detach(rp)
	struct rawcb *rp;
d112 1
a112 2
raw_disconnect(rp)
	struct rawcb *rp;
d126 1
a126 3
raw_bind(so, nam)
	struct socket *so;
	struct mbuf *nam;
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.c,v 1.3 2003/05/13 02:09:47 jason Exp $	*/
d68 1
a68 1
	register struct socket *so;
d71 1
a71 1
	register struct rawcb *rp = sotorawcb(so);
d96 1
a96 1
	register struct rawcb *rp;
d131 1
a131 1
	register struct socket *so;
d135 1
a135 1
	register struct rawcb *rp;
@


1.3
log
@Kill a bunch more commons (very few left =)
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.c,v 1.2 1996/03/03 21:07:16 niklas Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d64 1
@


1.2.26.1
log
@sync
@
text
@a63 1
struct rawcbhead rawcb;
@


1.2.16.1
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@a63 1
struct rawcbhead rawcb;
@


1.2.16.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.c,v 1.2.16.1 2003/05/16 00:29:44 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2.16.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d68 1
a68 1
	struct socket *so;
d71 1
a71 1
	struct rawcb *rp = sotorawcb(so);
d96 1
a96 1
	struct rawcb *rp;
d131 1
a131 1
	struct socket *so;
d135 1
a135 1
	struct rawcb *rp;
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: raw_cb.c,v 1.8 1995/06/12 00:46:53 mycroft Exp $	*/
d84 1
a84 1
	if (error = soreserve(so, raw_sendspace, raw_recvspace))
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
