head	1.16;
access;
symbols
	OPENBSD_6_0:1.14.0.6
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.13.0.4
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.26
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.22
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.20
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.18
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.16
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.14
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.12
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.8
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.6.0.4
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.2
	SMP_BASE:1.3
	kame_19991208:1.1;
locks; strict;
comment	@ * @;


1.16
date	2017.01.29.19.58.47;	author bluhm;	state Exp;
branches;
next	1.15;
commitid	3e3CkrbYekyVOcxy;

1.15
date	2017.01.25.17.34.31;	author bluhm;	state Exp;
branches;
next	1.14;
commitid	pVtptbHA3yk4jSpN;

1.14
date	2015.09.28.08.32.05;	author mpi;	state Exp;
branches;
next	1.13;
commitid	MCjArMsyMPhqxF1g;

1.13
date	2015.07.17.18.05.59;	author mpi;	state Exp;
branches;
next	1.12;
commitid	urytYsjJJXbr5ECc;

1.12
date	2015.07.16.21.21.49;	author mpi;	state Exp;
branches;
next	1.11;
commitid	4zKIc1SAiSgHAnwL;

1.11
date	2014.07.09.15.35.53;	author mpi;	state Exp;
branches;
next	1.10;
commitid	rcrNPIflhvgmU1TF;

1.10
date	2009.11.21.14.08.14;	author claudio;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.03.14.51.05;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.01.27.09;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.26.06.29.01;	author itojun;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.27.15.48.38;	author itojun;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2001.02.16.08.48.03;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.30.21.51.50;	author angelos;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.12.06.40.45;	author angelos;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2000.01.07.19.28.49;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	99.12.08.06.50.18;	author itojun;	state Exp;
branches;
next	;

1.3.2.1
date	2001.05.14.22.40.00;	author niklas;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.10.31.03.29.02;	author nate;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2002.03.06.02.15.06;	author niklas;	state Exp;
branches;
next	1.3.2.4;

1.3.2.4
date	2002.03.28.14.57.36;	author niklas;	state Exp;
branches;
next	1.3.2.5;

1.3.2.5
date	2004.02.19.10.57.21;	author niklas;	state Exp;
branches;
next	;

1.6.4.1
date	2002.01.31.22.55.43;	author niklas;	state Exp;
branches;
next	1.6.4.2;

1.6.4.2
date	2002.06.11.03.30.45;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Change the IPv4 pr_input function to the way IPv6 is implemented,
to get rid of struct ip6protosw and some wrapper functions.  It is
more consistent to have less different structures.  The divert_input
functions cannot be called anyway, so remove them.
OK visa@@ mpi@@
@
text
@/*	$OpenBSD: if_gif.h,v 1.15 2017/01/25 17:34:31 bluhm Exp $	*/
/*	$KAME: if_gif.h,v 1.17 2000/09/11 11:36:41 sumikawa Exp $	*/

/*
 * Copyright (C) 1995, 1996, 1997, and 1998 WIDE Project.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * if_gif.h
 */

#ifndef _NET_IF_GIF_H_
#define _NET_IF_GIF_H_

struct gif_softc {
	struct ifnet	gif_if;	   /* common area */
	struct sockaddr	*gif_psrc; /* Physical src addr */
	struct sockaddr	*gif_pdst; /* Physical dst addr */
	u_int		gif_rtableid;
	LIST_ENTRY(gif_softc) gif_list;	/* list of all gifs */
};

extern LIST_HEAD(gif_softc_head, gif_softc) gif_softc_list;

int gif_encap(struct ifnet *, struct mbuf **, sa_family_t);

int in_gif_input(struct mbuf **, int *, int);
int in6_gif_input(struct mbuf **, int *, int);

#endif /* _NET_IF_GIF_H_ */
@


1.15
log
@Since raw_input() and route_input() are gone from pr_input, we can
make the variable parameters of the protocol input functions fixed.
Also add the proto to make it similar to IPv6.
OK mpi@@ guenther@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.14 2015/09/28 08:32:05 mpi Exp $	*/
d52 1
a52 1
void in_gif_input(struct mbuf *, int, int);
@


1.14
log
@Merge gif(4)'s tentacles in a single file.

Tested by <mxb AT alumni DOT chalmers DOT se>.

ok dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.13 2015/07/17 18:05:59 mpi Exp $	*/
d52 1
a52 1
void in_gif_input(struct mbuf *, ...);
@


1.13
log
@Explicitly do EtherIP encapsulation in bridge_ifenqueue().

The way gif(4) and bridge(4) are plugged together is disgusting but at
least this makes the layer violation obvious.

Fix a regression introduced by the M_PROTO1 loop prevention cleaning
because gif(4) was abusing this flag to figure out if the packet was
coming from a bridge(4).

Thanks to goda@@ for finding this!

ok goda@@, claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.12 2015/07/16 21:21:49 mpi Exp $	*/
d51 3
@


1.12
log
@Keep private definitions private.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.11 2014/07/09 15:35:53 mpi Exp $	*/
d49 2
@


1.11
log
@Kill unused route storages.

blambert@@, henning@@, lteo@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.10 2009/11/21 14:08:14 claudio Exp $	*/
a47 4
#define GIF_MTU		(1280)	/* Default MTU */
#define	GIF_MTU_MIN	(1280)	/* Minimum MTU */
#define	GIF_MTU_MAX	(8192)	/* Maximum MTU */

a49 5
/* Prototypes */
int gif_output(struct ifnet *, struct mbuf *,
		    struct sockaddr *, struct rtentry *);
int gif_ioctl(struct ifnet *, u_long, caddr_t);
void gif_start(struct ifnet *);
@


1.10
log
@Add a way to bind the tunnel endpoint of a gif/gre interface into a
different rdomain than the default one. This allows to do MPLS VPNs
without the MPLS madness.  OK deraadt@@, henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.9 2003/12/03 14:51:05 markus Exp $	*/
a39 4

#include <netinet/in.h>
/* XXX sigh, why route have struct route instead of pointer? */

a43 7
	union {
		struct route  gifscr_ro;    /* xxx */
#ifdef INET6
		struct route_in6 gifscr_ro6; /* xxx */
#endif
	} gifsc_gifscr;
	int		gif_flags;
a46 5

#define gif_ro gifsc_gifscr.gifscr_ro
#ifdef INET6
#define gif_ro6 gifsc_gifscr.gifscr_ro6
#endif
@


1.9
log
@add support for ifconfig clone/destroy; ok henning deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.8 2002/03/14 01:27:09 millert Exp $	*/
d55 1
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.7 2001/12/26 06:29:01 itojun Exp $	*/
d55 1
d67 1
a67 2
extern int ngif;
extern struct gif_softc *gif_softc;
@


1.7
log
@cosmetic
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.6 2001/07/27 15:48:38 itojun Exp $	*/
d70 4
a73 4
int gif_output __P((struct ifnet *, struct mbuf *,
		    struct sockaddr *, struct rtentry *));
int gif_ioctl __P((struct ifnet *, u_long, caddr_t));
void gif_start __P((struct ifnet *));
@


1.6
log
@variable name "gif" is way too generic - use "gif_softc".  sync with kame
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.5 2001/02/16 08:48:03 itojun Exp $	*/
a60 2

#define	GIFF_INUSE	0x1	/* gif is in use */
@


1.6.4.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.7 2001/12/26 06:29:01 itojun Exp $	*/
d61 2
@


1.6.4.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.6.4.1 2002/01/31 22:55:43 niklas Exp $	*/
d70 4
a73 4
int gif_output(struct ifnet *, struct mbuf *,
		    struct sockaddr *, struct rtentry *);
int gif_ioctl(struct ifnet *, u_long, caddr_t);
void gif_start(struct ifnet *);
@


1.5
log
@sync whitespace/comment with kame.  to help merge tasks
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.4 2000/12/30 21:51:50 angelos Exp $	*/
d69 1
a69 1
extern struct gif_softc *gif;
@


1.4
log
@gif_start() prototype
@
text
@d1 2
a2 1
/*	$OpenBSD: if_gif.h,v 1.3 2000/01/12 06:40:45 angelos Exp $	*/
d7 1
a7 1
 * 
d19 1
a19 1
 * 
@


1.3
log
@Remove gif_input() -- not needed anymore.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.2 2000/01/07 19:28:49 angelos Exp $	*/
d74 1
@


1.3.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 2
/*	$OpenBSD: if_gif.h,v 1.5 2001/02/16 08:48:03 itojun Exp $	*/
/*	$KAME: if_gif.h,v 1.17 2000/09/11 11:36:41 sumikawa Exp $	*/
d6 1
a6 1
 *
d18 1
a18 1
 *
a73 1
void gif_start __P((struct ifnet *));
@


1.3.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.3.2.1 2001/05/14 22:40:00 niklas Exp $	*/
d69 1
a69 1
extern struct gif_softc *gif_softc;
@


1.3.2.3
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d61 2
@


1.3.2.4
log
@Merge in -current from roughly a week ago
@
text
@d70 4
a73 4
int gif_output(struct ifnet *, struct mbuf *,
		    struct sockaddr *, struct rtentry *);
int gif_ioctl(struct ifnet *, u_long, caddr_t);
void gif_start(struct ifnet *);
@


1.3.2.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a54 1
	LIST_ENTRY(gif_softc) gif_list;	/* list of all gifs */
d66 2
a67 1
extern LIST_HEAD(gif_softc_head, gif_softc) gif_softc_list;
@


1.2
log
@Cleanup ifdefs
@
text
@d1 1
a1 1
/*	$OpenBSD: if_gif.h,v 1.1 1999/12/08 06:50:18 itojun Exp $	*/
a70 1
void gif_input __P((struct mbuf *, int, struct ifnet *));
@


1.1
log
@bring in KAME IPv6 code, dated 19991208.
replaces NRL IPv6 layer.  reuses NRL pcb layer.  no IPsec-on-v6 support.
see sys/netinet6/{TODO,IMPLEMENTATION} for more details.

GENERIC configuration should work fine as before.  GENERIC.v6 works fine
as well, but you'll need KAME userland tools to play with IPv6 (will be
bringed into soon).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a39 6
#if (defined(__FreeBSD__) && __FreeBSD__ >= 3) || defined(__NetBSD__)
#if defined(_KERNEL) && !defined(_LKM)
#include "opt_inet.h"
#endif
#endif

d41 1
a41 1
/* xxx sigh, why route have struct route instead of pointer? */
a73 3
#if defined(__FreeBSD__) && __FreeBSD__ < 3
int gif_ioctl __P((struct ifnet *, int, caddr_t));
#else
a74 2
#endif

@

