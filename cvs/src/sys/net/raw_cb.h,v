head	1.11;
access;
symbols
	OPENBSD_6_0:1.9.0.14
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.8
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.10
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.16
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.14
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.12
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.10
	OPENBSD_5_0:1.8.0.8
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.8
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.4
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.22
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2017.01.23.16.31.24;	author bluhm;	state Exp;
branches;
next	1.10;
commitid	9EAe7cRTLFNc3XTC;

1.10
date	2016.09.05.15.12.30;	author claudio;	state Exp;
branches;
next	1.9;
commitid	9stAtK16gR2yeKoN;

1.9
date	2013.10.24.18.50.16;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2009.11.13.20.54.05;	author claudio;	state Exp;
branches;
next	1.7;

1.7
date	2008.05.23.15.51.12;	author thib;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.28.12;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.13.02.09.47;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.10;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.09.06.16.39;	author angelos;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	96.03.03.21.07.17;	author niklas;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	95.10.18.08.53.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.07;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2001.07.04.10.54.19;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2002.03.28.14.57.37;	author niklas;	state Exp;
branches;
next	1.2.16.3;

1.2.16.3
date	2003.05.16.00.29.44;	author niklas;	state Exp;
branches;
next	1.2.16.4;

1.2.16.4
date	2003.06.07.11.06.07;	author ho;	state Exp;
branches;
next	;

1.3.4.1
date	2002.06.11.03.30.46;	author art;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2003.05.19.22.30.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.11
log
@The function raw_input() has not been called since netiso has been
removed in 2004.  The comment about raw_input() above rip_input()
was added in 1981, but it is wrong since 1992.  After that it has
been copied to rip6_input().  (*pr_input)() is never called with
the parameters (mbuf, sockproto, sockaddr, sockaddr).
So retire raw_input().
OK guenther@@ deraadt@@
@
text
@/*	$OpenBSD: raw_cb.h,v 1.10 2016/09/05 15:12:30 claudio Exp $	*/
/*	$NetBSD: raw_cb.h,v 1.9 1996/02/13 22:00:41 christos Exp $	*/

/*
 * Copyright (c) 1980, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)raw_cb.h	8.1 (Berkeley) 6/10/93
 */

#ifndef _NET_RAW_CB_H_
#define _NET_RAW_CB_H_

/*
 * Raw protocol interface control block.  Used
 * to tie a socket to the generic raw interface.
 */
struct rawcb {
	LIST_ENTRY(rawcb) rcb_list;	/* doubly linked list */
	struct	socket *rcb_socket;	/* back pointer to socket */
	struct	sockaddr *rcb_faddr;	/* destination address */
	struct	sockaddr *rcb_laddr;	/* socket's address */
	struct	sockproto rcb_proto;	/* protocol family, protocol */
};

/*
 * Nominal space allocated to a raw socket.
 */
#define	RAWSNDQ		8192
#define	RAWRCVQ		8192

#ifdef _KERNEL

extern LIST_HEAD(rawcbhead, rawcb) rawcb;		/* head of list */

#define	sotorawcb(so)		((struct rawcb *)(so)->so_pcb)
int	 raw_attach(struct socket *, int);
void	 raw_detach(struct rawcb *);
void	 raw_disconnect(struct rawcb *);
void	 raw_init(void);
int	 raw_usrreq(struct socket *,
	    int, struct mbuf *, struct mbuf *, struct mbuf *, struct proc *);
#endif /* _KERNEL */

#endif /* _NET_RAW_CB_H_ */
@


1.10
log
@Kill raw_ctlinput() this function is INCOMPLETE since rev 1.1 and is not
needed. All callers using the protosw pr_ctlinput pointer do a NULL check
before so there is no need to provide the function.
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.9 2013/10/24 18:50:16 deraadt Exp $	*/
a64 1
void	 raw_input(struct mbuf *, ...);
@


1.9
log
@Move more stuff under _KERNEL
ok claudio
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.8 2009/11/13 20:54:05 claudio Exp $	*/
a61 1
void	 *raw_ctlinput(int, struct sockaddr *, u_int, void *);
@


1.8
log
@Extend the protosw pr_ctlinput function to include the rdomain. This is
needed so that the route and inp lookups done in TCP and UDP know where
to look. Additionally in_pcbnotifyall() and tcp_respond() got a rdomain
argument as well for similar reasons. With this tcp seems to be now
fully rdomain save and no longer leaks single packets into the main domain.
Looks good markus@@, henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.7 2008/05/23 15:51:12 thib Exp $	*/
a49 2
#define	sotorawcb(so)		((struct rawcb *)(so)->so_pcb)

d57 1
d60 1
d69 1
a70 1
#endif /* _KERNEL */
@


1.7
log
@Deal with the situation when TCP nfs mounts timeout and processes
get hung in nfs_reconnect() because they do not have the proper
privilages to bind to a socket, by adding a struct proc * argument
to sobind() (and the *_usrreq() routines, and finally in{6}_pcbbind)
and do the sobind() with proc0 in nfs_connect.

OK markus@@, blambert@@.
"go ahead" deraadt@@.

Fixes an issue reported by bernd@@ (Tested by bernd@@).
Fixes PR5135 too.
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.6 2003/06/02 23:28:12 millert Exp $	*/
d62 1
a62 1
void	 *raw_ctlinput(int, struct sockaddr *, void *);
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.5 2003/05/13 02:09:47 jason Exp $	*/
d68 1
a68 1
	    int, struct mbuf *, struct mbuf *, struct mbuf *);
@


1.5
log
@Kill a bunch more commons (very few left =)
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.4 2002/03/14 01:27:10 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.3 2001/06/09 06:16:39 angelos Exp $	*/
d63 1
a63 1
LIST_HEAD(, rawcb) rawcb;		/* head of list */
@


1.3
log
@By popular demand, protect from multiple inclusion, and fix to use the
same naming style.
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.2 1996/03/03 21:07:17 niklas Exp $	*/
d65 8
a72 8
int	 raw_attach __P((struct socket *, int));
void	 *raw_ctlinput __P((int, struct sockaddr *, void *));
void	 raw_detach __P((struct rawcb *));
void	 raw_disconnect __P((struct rawcb *));
void	 raw_init __P((void));
void	 raw_input __P((struct mbuf *, ...));
int	 raw_usrreq __P((struct socket *,
	    int, struct mbuf *, struct mbuf *, struct mbuf *));
@


1.3.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.3 2001/06/09 06:16:39 angelos Exp $	*/
d65 8
a72 8
int	 raw_attach(struct socket *, int);
void	 *raw_ctlinput(int, struct sockaddr *, void *);
void	 raw_detach(struct rawcb *);
void	 raw_disconnect(struct rawcb *);
void	 raw_init(void);
void	 raw_input(struct mbuf *, ...);
int	 raw_usrreq(struct socket *,
	    int, struct mbuf *, struct mbuf *, struct mbuf *);
@


1.3.4.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 1
a63 1
extern LIST_HEAD(rawcbhead, rawcb) rawcb;		/* head of list */
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d39 3
d75 1
@


1.2.16.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.2 1996/03/03 21:07:17 niklas Exp $	*/
a38 3
#ifndef _NET_RAW_CB_H_
#define _NET_RAW_CB_H_

a71 1
#endif /* _NET_RAW_CB_H_ */
@


1.2.16.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d65 8
a72 8
int	 raw_attach(struct socket *, int);
void	 *raw_ctlinput(int, struct sockaddr *, void *);
void	 raw_detach(struct rawcb *);
void	 raw_disconnect(struct rawcb *);
void	 raw_init(void);
void	 raw_input(struct mbuf *, ...);
int	 raw_usrreq(struct socket *,
	    int, struct mbuf *, struct mbuf *, struct mbuf *);
@


1.2.16.3
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d63 1
a63 1
extern LIST_HEAD(rawcbhead, rawcb) rawcb;		/* head of list */
@


1.2.16.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: raw_cb.h,v 1.2.16.3 2003/05/16 00:29:44 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: raw_cb.h,v 1.8 1995/06/12 00:46:54 mycroft Exp $	*/
d63 1
a63 1
void	 raw_ctlinput __P((int, struct sockaddr *));
d67 1
a67 2
void	 raw_input __P((struct mbuf *,
	    struct sockproto *, struct sockaddr *, struct sockaddr *));
d70 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
