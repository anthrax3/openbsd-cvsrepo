head	1.21;
access;
symbols
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.4
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.19.0.28
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.30
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.22
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.26
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.24
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.20
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.18
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.16
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.14
	OPENBSD_5_0:1.19.0.12
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.10
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.8
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.4
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.19.0.6
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.2
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.18.0.16
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.14
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.12
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.18.0.10
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.8
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.6
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.4
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.2
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.15.0.6
	OPENBSD_3_6_BASE:1.15
	SMP_SYNC_A:1.15
	SMP_SYNC_B:1.15
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.11.0.4
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.13
	UBC:1.11.0.2
	UBC_BASE:1.11
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.2
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.21
date	2016.06.15.19.39.34;	author gerhard;	state Exp;
branches;
next	1.20;
commitid	qJ1QnDnimibODQ30;

1.20
date	2016.03.07.19.33.26;	author mmcc;	state Exp;
branches;
next	1.19;
commitid	dH2OOqaSrGDRNHR8;

1.19
date	2008.09.09.13.56.39;	author henning;	state Exp;
branches;
next	1.18;

1.18
date	2005.01.14.12.04.02;	author grange;	state Exp;
branches;
next	1.17;

1.17
date	2004.11.18.16.49.57;	author mpf;	state Exp;
branches;
next	1.16;

1.16
date	2004.10.28.20.34.20;	author henning;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.02.23.28.12;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.11.29.18.25.22;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.30.01.21.08;	author itojun;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.24.23.02.14;	author itojun;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.07.19.07.41;	author mickey;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2001.06.25.23.02.20;	author provos;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.09.06.16.38;	author angelos;	state Exp;
branches;
next	1.8;

1.8
date	2001.03.26.19.00.58;	author jason;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.22.05.26.35;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.18.19.00.13;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.18.18.40.22;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	99.12.08.06.50.18;	author itojun;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	97.02.24.13.34.02;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	97.02.20.01.07.42;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.06;	author deraadt;	state Exp;
branches;
next	;

1.4.2.1
date	2001.05.14.22.40.02;	author niklas;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2001.07.04.10.54.12;	author niklas;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2001.11.13.22.59.58;	author niklas;	state Exp;
branches;
next	1.4.2.4;

1.4.2.4
date	2003.03.28.00.41.28;	author niklas;	state Exp;
branches;
next	1.4.2.5;

1.4.2.5
date	2003.06.07.11.06.06;	author ho;	state Exp;
branches;
next	;

1.11.2.1
date	2002.06.11.03.30.45;	author art;	state Exp;
branches;
next	1.11.2.2;

1.11.2.2
date	2003.05.19.22.30.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Add umb(4) - a driver for the Mobile Broadband Interface Model (MBIM)

The umb(4) driver provides support for USB MBIM devices.
Those devices establish connections via celluar networks such as
GPRS, UMTS, and LTE.

ok mpi@@ sthen@@
additional feedback from deraadt@@ jmc@@ stsp@@ kettenis@@
@
text
@/*	$OpenBSD: if_types.h,v 1.20 2016/03/07 19:33:26 mmcc Exp $	*/
/*	$NetBSD: if_types.h,v 1.17 2000/10/26 06:51:31 onoe Exp $	*/

/*
 * Copyright (c) 1989, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)if_types.h	8.3 (Berkeley) 4/28/95
 */

#ifndef _NET_IF_TYPES_H_
#define _NET_IF_TYPES_H_

/*
 * Interface types for benefit of parsing media address headers.
 * This list is derived from the SNMP list of ifTypes, originally
 * documented in RFC1573, now maintained as:
 *
 * https://www.iana.org/assignments/ianaiftype-mib
 */

#define	IFT_OTHER		   0x01 /* none of the following */
#define	IFT_1822		   0x02 /* old-style arpanet imp */
#define	IFT_HDH1822		   0x03 /* HDH arpanet imp */
#define	IFT_X25DDN		   0x04 /* x25 to imp */
#define	IFT_X25			   0x05 /* PDN X25 interface (RFC877) */
#define	IFT_ETHER		   0x06 /* Ethernet CSMA/CD */
#define	IFT_ISO88023		   0x07 /* CSMA/CD */
#define	IFT_ISO88024		   0x08 /* Token Bus */
#define	IFT_ISO88025		   0x09 /* Token Ring */
#define	IFT_ISO88026		   0x0a /* MAN */
#define	IFT_STARLAN		   0x0b
#define	IFT_P10			   0x0c /* Proteon 10MBit ring */
#define	IFT_P80			   0x0d /* Proteon 80MBit ring */
#define	IFT_HY			   0x0e /* Hyperchannel */
#define	IFT_FDDI		   0x0f
#define	IFT_LAPB		   0x10
#define	IFT_SDLC		   0x11
#define	IFT_T1			   0x12
#define	IFT_CEPT		   0x13 /* E1 - european T1 */
#define	IFT_ISDNBASIC		   0x14
#define	IFT_ISDNPRIMARY		   0x15
#define	IFT_PTPSERIAL		   0x16 /* Proprietary PTP serial */
#define	IFT_PPP			   0x17 /* RFC 1331 */
#define	IFT_LOOP		   0x18 /* loopback */
#define	IFT_EON			   0x19 /* ISO over IP */
#define	IFT_XETHER		   0x1a /* obsolete 3MB experimental ethernet */
#define	IFT_NSIP		   0x1b /* XNS over IP */
#define	IFT_SLIP		   0x1c /* IP over generic TTY */
#define	IFT_ULTRA		   0x1d /* Ultra Technologies */
#define	IFT_DS3			   0x1e /* Generic T3 */
#define	IFT_SIP			   0x1f /* SMDS */
#define	IFT_FRELAY		   0x20 /* Frame Relay DTE only */
#define	IFT_RS232		   0x21
#define	IFT_PARA		   0x22 /* parallel-port */
#define	IFT_ARCNET		   0x23
#define	IFT_ARCNETPLUS		   0x24
#define	IFT_ATM			   0x25 /* ATM cells */
#define	IFT_MIOX25		   0x26
#define	IFT_SONET		   0x27 /* SONET or SDH */
#define	IFT_X25PLE		   0x28
#define	IFT_ISO88022LLC		   0x29
#define	IFT_LOCALTALK		   0x2a
#define	IFT_SMDSDXI		   0x2b
#define	IFT_FRELAYDCE		   0x2c /* Frame Relay DCE */
#define	IFT_V35			   0x2d
#define	IFT_HSSI		   0x2e
#define	IFT_HIPPI		   0x2f
#define	IFT_MODEM		   0x30 /* Generic Modem */
#define	IFT_AAL5		   0x31 /* AAL5 over ATM */
#define	IFT_SONETPATH		   0x32
#define	IFT_SONETVT		   0x33
#define	IFT_SMDSICIP		   0x34 /* SMDS InterCarrier Interface */
#define	IFT_PROPVIRTUAL		   0x35 /* Proprietary Virtual/internal */
#define	IFT_PROPMUX		   0x36 /* Proprietary Multiplexing */
#define	IFT_IEEE80212		   0x37 /* 100BaseVG */
#define	IFT_FIBRECHANNEL	   0x38 /* Fibre Channel */
#define	IFT_HIPPIINTERFACE	   0x39 /* HIPPI interfaces	 */
#define	IFT_FRAMERELAYINTERCONNECT 0x3a /* Obsolete, use either 0x20 or 0x2c */
#define	IFT_AFLANE8023		   0x3b /* ATM Emulated LAN for 802.3 */
#define	IFT_AFLANE8025		   0x3c /* ATM Emulated LAN for 802.5 */
#define	IFT_CCTEMUL		   0x3d /* ATM Emulated circuit		  */
#define	IFT_FASTETHER		   0x3e /* Fast Ethernet (100BaseT) */
#define	IFT_ISDN		   0x3f /* ISDN and X.25	    */
#define	IFT_V11			   0x40 /* CCITT V.11/X.21		*/
#define	IFT_V36			   0x41 /* CCITT V.36			*/
#define	IFT_G703AT64K		   0x42 /* CCITT G703 at 64Kbps */
#define	IFT_G703AT2MB		   0x43 /* Obsolete see DS1-MIB */
#define	IFT_QLLC		   0x44 /* SNA QLLC			*/
#define	IFT_FASTETHERFX		   0x45 /* Fast Ethernet (100BaseFX)	*/
#define	IFT_CHANNEL		   0x46 /* channel			*/
#define	IFT_IEEE80211		   0x47 /* radio spread spectrum	*/
#define	IFT_IBM370PARCHAN	   0x48 /* IBM System 360/370 OEMI Channel */
#define	IFT_ESCON		   0x49 /* IBM Enterprise Systems Connection */
#define	IFT_DLSW		   0x4a /* Data Link Switching */
#define	IFT_ISDNS		   0x4b /* ISDN S/T interface */
#define	IFT_ISDNU		   0x4c /* ISDN U interface */
#define	IFT_LAPD		   0x4d /* Link Access Protocol D */
#define	IFT_IPSWITCH		   0x4e /* IP Switching Objects */
#define	IFT_RSRB		   0x4f /* Remote Source Route Bridging */
#define	IFT_ATMLOGICAL		   0x50 /* ATM Logical Port */
#define	IFT_DS0			   0x51 /* Digital Signal Level 0 */
#define	IFT_DS0BUNDLE		   0x52 /* group of ds0s on the same ds1 */
#define	IFT_BSC			   0x53 /* Bisynchronous Protocol */
#define	IFT_ASYNC		   0x54 /* Asynchronous Protocol */
#define	IFT_CNR			   0x55 /* Combat Net Radio */
#define	IFT_ISO88025DTR		   0x56 /* ISO 802.5r DTR */
#define	IFT_EPLRS		   0x57 /* Ext Pos Loc Report Sys */
#define	IFT_ARAP		   0x58 /* Appletalk Remote Access Protocol */
#define	IFT_PROPCNLS		   0x59 /* Proprietary Connectionless Protocol*/
#define	IFT_HOSTPAD		   0x5a /* CCITT-ITU X.29 PAD Protocol */
#define	IFT_TERMPAD		   0x5b /* CCITT-ITU X.3 PAD Facility */
#define	IFT_FRAMERELAYMPI	   0x5c /* Multiproto Interconnect over FR */
#define	IFT_X213		   0x5d /* CCITT-ITU X213 */
#define	IFT_ADSL		   0x5e /* Asymmetric Digital Subscriber Loop */
#define	IFT_RADSL		   0x5f /* Rate-Adapt. Digital Subscriber Loop*/
#define	IFT_SDSL		   0x60 /* Symmetric Digital Subscriber Loop */
#define	IFT_VDSL		   0x61 /* Very H-Speed Digital Subscrib. Loop*/
#define	IFT_ISO88025CRFPINT	   0x62 /* ISO 802.5 CRFP */
#define	IFT_MYRINET		   0x63 /* Myricom Myrinet */
#define	IFT_VOICEEM		   0x64 /* voice recEive and transMit */
#define	IFT_VOICEFXO		   0x65 /* voice Foreign Exchange Office */
#define	IFT_VOICEFXS		   0x66 /* voice Foreign Exchange Station */
#define	IFT_VOICEENCAP		   0x67 /* voice encapsulation */
#define	IFT_VOICEOVERIP		   0x68 /* voice over IP encapsulation */
#define	IFT_ATMDXI		   0x69 /* ATM DXI */
#define	IFT_ATMFUNI		   0x6a /* ATM FUNI */
#define	IFT_ATMIMA		   0x6b /* ATM IMA		      */
#define	IFT_PPPMULTILINKBUNDLE	   0x6c /* PPP Multilink Bundle */
#define	IFT_IPOVERCDLC		   0x6d /* IBM ipOverCdlc */
#define	IFT_IPOVERCLAW		   0x6e /* IBM Common Link Access to Workstn */
#define	IFT_STACKTOSTACK	   0x6f /* IBM stackToStack */
#define	IFT_VIRTUALIPADDRESS	   0x70 /* IBM VIPA */
#define	IFT_MPC			   0x71 /* IBM multi-protocol channel support */
#define	IFT_IPOVERATM		   0x72 /* IBM ipOverAtm */
#define	IFT_ISO88025FIBER	   0x73 /* ISO 802.5j Fiber Token Ring */
#define	IFT_TDLC		   0x74 /* IBM twinaxial data link control */
#define	IFT_GIGABITETHERNET	   0x75 /* Gigabit Ethernet */
#define	IFT_HDLC		   0x76 /* HDLC */
#define	IFT_LAPF		   0x77 /* LAP F */
#define	IFT_V37			   0x78 /* V.37 */
#define	IFT_X25MLP		   0x79 /* Multi-Link Protocol */
#define	IFT_X25HUNTGROUP	   0x7a /* X25 Hunt Group */
#define	IFT_TRANSPHDLC		   0x7b /* Transp HDLC */
#define	IFT_INTERLEAVE		   0x7c /* Interleave channel */
#define	IFT_FAST		   0x7d /* Fast channel */
#define	IFT_IP			   0x7e /* IP (for APPN HPR in IP networks) */
#define	IFT_DOCSCABLEMACLAYER	   0x7f /* CATV Mac Layer */
#define	IFT_DOCSCABLEDOWNSTREAM	   0x80 /* CATV Downstream interface */
#define	IFT_DOCSCABLEUPSTREAM	   0x81 /* CATV Upstream interface */
#define	IFT_A12MPPSWITCH	   0x82	/* Avalon Parallel Processor */
#define	IFT_TUNNEL		   0x83	/* Encapsulation interface */
#define	IFT_COFFEE		   0x84	/* coffee pot */
#define	IFT_CES			   0x85	/* Circiut Emulation Service */
#define	IFT_ATMSUBINTERFACE	   0x86	/* (x)  ATM Sub Interface */
#define	IFT_L2VLAN		   0x87	/* Layer 2 Virtual LAN using 802.1Q */
#define	IFT_L3IPVLAN		   0x88	/* Layer 3 Virtual LAN - IP Protocol */
#define	IFT_L3IPXVLAN		   0x89	/* Layer 3 Virtual LAN - IPX Prot. */
#define	IFT_DIGITALPOWERLINE	   0x8a	/* IP over Power Lines */
#define	IFT_MEDIAMAILOVERIP	   0x8b	/* (xxx)  Multimedia Mail over IP */
#define	IFT_DTM			   0x8c	/* Dynamic synchronous Transfer Mode */
#define	IFT_DCN			   0x8d	/* Data Communications Network */
#define	IFT_IPFORWARD		   0x8e	/* IP Forwarding Interface */
#define	IFT_MSDSL		   0x8f	/* Multi-rate Symmetric DSL */
#define	IFT_IEEE1394		   0x90	/* IEEE1394 High Performance SerialBus*/
#define	IFT_IFGSN		   0x91	/* HIPPI-6400 */
#define	IFT_DVBRCCMACLAYER	   0x92	/* DVB-RCC MAC Layer */
#define	IFT_DVBRCCDOWNSTREAM	   0x93	/* DVB-RCC Downstream Channel */
#define	IFT_DVBRCCUPSTREAM	   0x94	/* DVB-RCC Upstream Channel */
#define	IFT_ATMVIRTUAL		   0x95	/* ATM Virtual Interface */
#define	IFT_MPLSTUNNEL		   0x96	/* MPLS Tunnel Virtual Interface */
#define	IFT_SRP			   0x97	/* Spatial Reuse Protocol */
#define	IFT_VOICEOVERATM	   0x98	/* Voice over ATM */
#define	IFT_VOICEOVERFRAMERELAY	   0x99	/* Voice Over Frame Relay */
#define	IFT_IDSL		   0x9a	/* Digital Subscriber Loop over ISDN */
#define	IFT_COMPOSITELINK	   0x9b	/* Avici Composite Link Interface */
#define	IFT_SS7SIGLINK		   0x9c	/* SS7 Signaling Link */
#define	IFT_PROPWIRELESSP2P	   0x9d	/* Prop. P2P wireless interface */
#define	IFT_FRFORWARD		   0x9e	/* Frame forward Interface */
#define	IFT_RFC1483		   0x9f	/* Multiprotocol over ATM AAL5 */
#define	IFT_USB			   0xa0	/* USB Interface */
#define	IFT_IEEE8023ADLAG	   0xa1	/* IEEE 802.3ad Link Aggregate*/
#define	IFT_BGPPOLICYACCOUNTING	   0xa2	/* BGP Policy Accounting */
#define	IFT_FRF16MFRBUNDLE	   0xa3	/* FRF.16 Multilik Frame Relay*/
#define	IFT_H323GATEKEEPER	   0xa4	/* H323 Gatekeeper */
#define	IFT_H323PROXY		   0xa5	/* H323 Voice and Video Proxy */
#define	IFT_MPLS		   0xa6	/* MPLS */
#define	IFT_MFSIGLINK		   0xa7	/* Multi-frequency signaling link */
#define	IFT_HDSL2		   0xa8	/* High Bit-Rate DSL, 2nd gen. */
#define	IFT_SHDSL		   0xa9	/* Multirate HDSL2 */
#define	IFT_DS1FDL		   0xaa	/* Facility Data Link (4Kbps) on a DS1*/
#define	IFT_POS			   0xab	/* Packet over SONET/SDH Interface */
#define	IFT_DVBASILN		   0xac	/* DVB-ASI Input */
#define	IFT_DVBASIOUT		   0xad	/* DVB-ASI Output */
#define	IFT_PLC			   0xae	/* Power Line Communications */
#define	IFT_NFAS		   0xaf	/* Non-Facility Associated Signaling */
#define	IFT_TR008		   0xb0	/* TROO8 */
#define	IFT_GR303RDT		   0xb1	/* Remote Digital Terminal */
#define	IFT_GR303IDT		   0xb2	/* Integrated Digital Terminal */
#define	IFT_ISUP		   0xb3	/* ISUP */
#define	IFT_PROPDOCSWIRELESSMACLAYER	   0xb4	/* prop/Wireless MAC Layer */
#define	IFT_PROPDOCSWIRELESSDOWNSTREAM	   0xb5	/* prop/Wireless Downstream */
#define	IFT_PROPDOCSWIRELESSUPSTREAM	   0xb6	/* prop/Wireless Upstream */
#define	IFT_HIPERLAN2		   0xb7	/* HIPERLAN Type 2 Radio Interface */
#define	IFT_PROPBWAP2MP		   0xb8	/* PropBroadbandWirelessAccess P2MP*/
#define	IFT_SONETOVERHEADCHANNEL   0xb9	/* SONET Overhead Channel */
#define	IFT_DIGITALWRAPPEROVERHEADCHANNEL  0xba	/* Digital Wrapper Overhead */
#define	IFT_AAL2		   0xbb	/* ATM adaptation layer 2 */
#define	IFT_RADIOMAC		   0xbc	/* MAC layer over radio links */
#define	IFT_ATMRADIO		   0xbd	/* ATM over radio links */
#define	IFT_IMT			   0xbe /* Inter-Machine Trunks */
#define	IFT_MVL			   0xbf /* Multiple Virtual Lines DSL */
#define	IFT_REACHDSL		   0xc0 /* Long Reach DSL */
#define	IFT_FRDLCIENDPT		   0xc1 /* Frame Relay DLCI End Point */
#define	IFT_ATMVCIENDPT		   0xc2 /* ATM VCI End Point */
#define	IFT_OPTICALCHANNEL	   0xc3 /* Optical Channel */
#define	IFT_OPTICALTRANSPORT	   0xc4 /* Optical Transport */
#define	IFT_PROPATM		   0xc5 /* Proprietary ATM */
#define	IFT_VOICEOVERCABLE	   0xc6 /* Voice Over Cable Interface */
#define	IFT_INFINIBAND		   0xc7 /* Infiniband */
#define	IFT_TELINK		   0xc8 /* TE Link */
#define	IFT_Q2931		   0xc9 /* Q.2931 */
#define	IFT_VIRTUALTG		   0xca /* Virtual Trunk Group */
#define	IFT_SIPTG		   0xcb /* SIP Trunk Group */
#define	IFT_SIPSIG		   0xcc /* SIP Signaling */
#define	IFT_DOCSCABLEUPSTREAMCHANNEL 0xcd /* CATV Upstream Channel */
#define	IFT_ECONET		   0xce /* Acorn Econet */
#define	IFT_PON155		   0xcf /* FSAN 155Mb Symetrical PON interface */
#define	IFT_PON622		   0xd0 /* FSAN 622Mb Symetrical PON interface */
#define	IFT_BRIDGE		   0xd1 /* Transparent bridge interface */
#define	IFT_LINEGROUP		   0xd2 /* Interface common to multiple lines */
#define	IFT_VOICEEMFGD		   0xd3 /* voice E&M Feature Group D */
#define	IFT_VOICEFGDEANA	   0xd4 /* voice FGD Exchange Access North American */
#define	IFT_VOICEDID		   0xd5 /* voice Direct Inward Dialing */

/* private usage... how should we define these? */
#define	IFT_GIF		0xf0
#define	IFT_DUMMY	0xf1
#define	IFT_PVC		0xf2
#define	IFT_FAITH	0xf3
#define	IFT_ENC		0xf4		/* Encapsulation */
#define	IFT_PFLOG	0xf5		/* Packet filter logging */
#define	IFT_PFSYNC	0xf6		/* Packet filter state syncing */
#define	IFT_CARP	0xf7		/* Common Address Redundancy Protocol */
#define IFT_BLUETOOTH	0xf8		/* Bluetooth */
#define IFT_PFLOW	0xf9		/* pflow */
#define IFT_MBIM	0xfa		/* Mobile Broadband Interface Model */

#endif /* _NET_IF_TYPES_H_ */
@


1.20
log
@http -> https for IETF/IANA URLs in comments
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.19 2008/09/09 13:56:39 henning Exp $	*/
d271 1
@


1.19
log
@welcome pflow(4), a netflow v5 compatible flow export interface.
flows export data gathered from pf states.
initial implementation by Joerg Goltermann <jg@@osn.de>, guidance and many
changes by me. 'put it in' theo
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.18 2005/01/14 12:04:02 grange Exp $	*/
d43 1
a43 1
 * <URL:http://www.iana.org/assignments/ianaiftype-mib>
@


1.18
log
@First step in Bluetooth protocol stack support.

The code is adopted from the FreeBSD netgraph-based Bluetooth
implementation by Maksim Yevmenkin <m_evmenkin@@yahoo.com> but
all netgraph glue was replaced with usual BSD network stack
hooks. This is a work in progress. Only HCI layer works for now,
L2CAP and RFCOMM are on the way.

Help in testing from many, ok markus@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.17 2004/11/18 16:49:57 mpf Exp $	*/
d270 1
@


1.17
log
@s/Access/Address/ at IFT_CARP
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.16 2004/10/28 20:34:20 henning Exp $	*/
d269 1
@


1.16
log
@define IFT_CARP, and set if_type to that on carp interfaces instead
of hiding under IFT_PROPVIRTUAL, ryan daniel ok
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.15 2003/06/02 23:28:12 millert Exp $	*/
d268 1
a268 1
#define	IFT_CARP	0xf7		/* Common Access Redundancy Protocol */
@


1.15
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.14 2002/11/29 18:25:22 mickey Exp $	*/
d268 1
@


1.14
log
@expose state table changes
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.13 2002/05/30 01:21:08 itojun Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.13
log
@remove extra */
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.12 2002/05/24 23:02:14 itojun Exp $	*/
d271 1
@


1.12
log
@more IANA values.  official # for bridge is assigned.   jason ok
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.11 2001/11/07 19:07:41 mickey Exp $	*/
d257 1
a257 1
#define	IFT_PON622		   0xd0 /* FSAN 622Mb Symetrical PON interface */*/
@


1.11
log
@enc and pflog were using iana space, move and update w/ iana current list; niels@@ angelos@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.10 2001/06/25 23:02:20 provos Exp $	*/
d255 8
a264 1
#define	IFT_BRIDGE	0xe8		/* bridge interfaces */
@


1.11.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.11 2001/11/07 19:07:41 mickey Exp $	*/
a254 8
#define	IFT_ECONET		   0xce /* Acorn Econet */
#define	IFT_PON155		   0xcf /* FSAN 155Mb Symetrical PON interface */
#define	IFT_PON622		   0xd0 /* FSAN 622Mb Symetrical PON interface */
#define	IFT_BRIDGE		   0xd1 /* Transparent bridge interface */
#define	IFT_LINEGROUP		   0xd2 /* Interface common to multiple lines */
#define	IFT_VOICEEMFGD		   0xd3 /* voice E&M Feature Group D */
#define	IFT_VOICEFGDEANA	   0xd4 /* voice FGD Exchange Access North American */
#define	IFT_VOICEDID		   0xd5 /* voice Direct Inward Dialing */
d257 1
@


1.11.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a270 1
#define	IFT_PFSYNC	0xf6		/* Packet filter state syncing */
@


1.10
log
@extend the logging via a new link header type.  export interface, direction,
action and rule nr.
@
text
@d1 2
a2 2
/*	$OpenBSD: if_types.h,v 1.9 2001/06/09 06:16:38 angelos Exp $	*/
/*	$NetBSD: if_types.h,v 1.7 1995/02/27 09:10:24 glass Exp $	*/
d36 1
a36 1
 *	@@(#)if_types.h	8.2 (Berkeley) 4/20/94
d44 4
a47 2
 * This list is derived from the SNMP list of ifTypes, currently
 * documented in RFC1573.
d50 205
a254 56
#define	IFT_OTHER	0x1		/* none of the following */
#define	IFT_1822	0x2		/* old-style arpanet imp */
#define	IFT_HDH1822	0x3		/* HDH arpanet imp */
#define	IFT_X25DDN	0x4		/* x25 to imp */
#define	IFT_X25		0x5		/* PDN X25 interface (RFC877) */
#define	IFT_ETHER	0x6		/* Ethernet CSMACD */
#define	IFT_ISO88023	0x7		/* CMSA CD */
#define	IFT_ISO88024	0x8		/* Token Bus */
#define	IFT_ISO88025	0x9		/* Token Ring */
#define	IFT_ISO88026	0xa		/* MAN */
#define	IFT_STARLAN	0xb
#define	IFT_P10		0xc		/* Proteon 10MBit ring */
#define	IFT_P80		0xd		/* Proteon 80MBit ring */
#define	IFT_HY		0xe		/* Hyperchannel */
#define	IFT_FDDI	0xf
#define	IFT_LAPB	0x10
#define	IFT_SDLC	0x11
#define	IFT_T1		0x12
#define	IFT_CEPT	0x13		/* E1 - european T1 */
#define	IFT_ISDNBASIC	0x14
#define	IFT_ISDNPRIMARY	0x15
#define	IFT_PTPSERIAL	0x16		/* Proprietary PTP serial */
#define	IFT_PPP		0x17		/* RFC 1331 */
#define	IFT_LOOP	0x18		/* loopback */
#define	IFT_EON		0x19		/* ISO over IP */
#define	IFT_XETHER	0x1a		/* obsolete 3MB experimental ethernet */
#define	IFT_NSIP	0x1b		/* XNS over IP */
#define	IFT_SLIP	0x1c		/* IP over generic TTY */
#define	IFT_ULTRA	0x1d		/* Ultra Technologies */
#define	IFT_DS3		0x1e		/* Generic T3 */
#define	IFT_SIP		0x1f		/* SMDS */
#define	IFT_FRELAY	0x20		/* Frame Relay DTE only */
#define	IFT_RS232	0x21
#define	IFT_PARA	0x22		/* parallel-port */
#define	IFT_ARCNET	0x23
#define	IFT_ARCNETPLUS	0x24
#define	IFT_ATM		0x25		/* ATM cells */
#define	IFT_MIOX25	0x26
#define	IFT_SONET	0x27		/* SONET or SDH */
#define	IFT_X25PLE	0x28
#define	IFT_ISO88022LLC	0x29
#define	IFT_LOCALTALK	0x2a
#define	IFT_SMDSDXI	0x2b
#define	IFT_FRELAYDCE	0x2c		/* Frame Relay DCE */
#define	IFT_V35		0x2d
#define	IFT_HSSI	0x2e
#define	IFT_HIPPI	0x2f
#define	IFT_MODEM	0x30		/* Generic Modem */
#define	IFT_AAL5	0x31		/* AAL5 over ATM */
#define	IFT_SONETPATH	0x32
#define	IFT_SONETVT	0x33
#define	IFT_SMDSICIP	0x34		/* SMDS InterCarrier Interface */
#define	IFT_PROPVIRTUAL	0x35		/* Proprietary Virtual/internal */
#define	IFT_PROPMUX	0x36		/* Proprietary Multiplexing */
#define	IFT_ENC		0x37		/* Encapsulation */
#define	IFT_PFLOG	0x38		/* Packet filter logging */
d260 4
a263 2
#define IFT_PVC		0xf2
#define IFT_FAITH	0xf3
@


1.9
log
@By popular demand, protect from multiple inclusion, and fix to use the
same naming style.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.8 2001/03/26 19:00:58 jason Exp $	*/
d102 2
a103 1
#define IFT_ENC		0x37		/* Encapsulation */
@


1.8
log
@- move if_vlan back to a default if_type of IFT_PROPVIRTUAL
- change if_type to match parent at vlan_configure time
- comment typo
- implement promiscuous mode for vlan interfaces (from NetBSD)
- change if_flags inheritance mask to UP|BROADCAST|SIMPLE|MULTICAST
(upshot of all this: bridging vlan interfaces works, with some limitations...
documentation soon)
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.7 2001/03/22 05:26:35 jason Exp $	*/
d39 3
d110 2
@


1.7
log
@remove vlan_proto variable, replace with ETHERTYPE_8021Q
define if_type for vlan interfaces (IFT_8021_VLAN)
#ifdef DEBUG some debugging printf's
protect against other uses of M_PROTO1
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.6 2000/10/18 19:00:13 jason Exp $	*/
a102 1
#define	IFT_8021_VLAN	0xe9		/* vlan interfaces */
@


1.6
log
@avoid clash with IANA ifType mib, move bridge to 0xe8
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.5 2000/10/18 18:40:22 jason Exp $	*/
d103 1
@


1.5
log
@add IFT_BRIDGE
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.4 1999/12/08 06:50:18 itojun Exp $	*/
a99 1
#define	IFT_BRIDGE	0x38		/* bridge interfaces */
d102 1
@


1.4
log
@bring in KAME IPv6 code, dated 19991208.
replaces NRL IPv6 layer.  reuses NRL pcb layer.  no IPsec-on-v6 support.
see sys/netinet6/{TODO,IMPLEMENTATION} for more details.

GENERIC configuration should work fine as before.  GENERIC.v6 works fine
as well, but you'll need KAME userland tools to play with IPv6 (will be
bringed into soon).
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.3 1997/02/24 13:34:02 niklas Exp $	*/
d100 1
@


1.4.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.8 2001/03/26 19:00:58 jason Exp $	*/
a101 1
#define	IFT_BRIDGE	0xe8		/* bridge interfaces */
@


1.4.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.4.2.1 2001/05/14 22:40:02 niklas Exp $	*/
a38 3
#ifndef _NET_IF_TYPES_H_
#define _NET_IF_TYPES_H_

d99 1
a99 2
#define	IFT_ENC		0x37		/* Encapsulation */
#define	IFT_PFLOG	0x38		/* Packet filter logging */
a106 2

#endif /* _NET_IF_TYPES_H_ */
@


1.4.2.3
log
@merge in -current
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: if_types.h,v 1.17 2000/10/26 06:51:31 onoe Exp $	*/
d36 1
a36 1
 *	@@(#)if_types.h	8.3 (Berkeley) 4/28/95
d44 2
a45 4
 * This list is derived from the SNMP list of ifTypes, originally
 * documented in RFC1573, now maintained as:
 *
 * <URL:http://www.iana.org/assignments/ianaiftype-mib>
d48 56
a103 205
#define	IFT_OTHER		   0x01 /* none of the following */
#define	IFT_1822		   0x02 /* old-style arpanet imp */
#define	IFT_HDH1822		   0x03 /* HDH arpanet imp */
#define	IFT_X25DDN		   0x04 /* x25 to imp */
#define	IFT_X25			   0x05 /* PDN X25 interface (RFC877) */
#define	IFT_ETHER		   0x06 /* Ethernet CSMA/CD */
#define	IFT_ISO88023		   0x07 /* CSMA/CD */
#define	IFT_ISO88024		   0x08 /* Token Bus */
#define	IFT_ISO88025		   0x09 /* Token Ring */
#define	IFT_ISO88026		   0x0a /* MAN */
#define	IFT_STARLAN		   0x0b
#define	IFT_P10			   0x0c /* Proteon 10MBit ring */
#define	IFT_P80			   0x0d /* Proteon 80MBit ring */
#define	IFT_HY			   0x0e /* Hyperchannel */
#define	IFT_FDDI		   0x0f
#define	IFT_LAPB		   0x10
#define	IFT_SDLC		   0x11
#define	IFT_T1			   0x12
#define	IFT_CEPT		   0x13 /* E1 - european T1 */
#define	IFT_ISDNBASIC		   0x14
#define	IFT_ISDNPRIMARY		   0x15
#define	IFT_PTPSERIAL		   0x16 /* Proprietary PTP serial */
#define	IFT_PPP			   0x17 /* RFC 1331 */
#define	IFT_LOOP		   0x18 /* loopback */
#define	IFT_EON			   0x19 /* ISO over IP */
#define	IFT_XETHER		   0x1a /* obsolete 3MB experimental ethernet */
#define	IFT_NSIP		   0x1b /* XNS over IP */
#define	IFT_SLIP		   0x1c /* IP over generic TTY */
#define	IFT_ULTRA		   0x1d /* Ultra Technologies */
#define	IFT_DS3			   0x1e /* Generic T3 */
#define	IFT_SIP			   0x1f /* SMDS */
#define	IFT_FRELAY		   0x20 /* Frame Relay DTE only */
#define	IFT_RS232		   0x21
#define	IFT_PARA		   0x22 /* parallel-port */
#define	IFT_ARCNET		   0x23
#define	IFT_ARCNETPLUS		   0x24
#define	IFT_ATM			   0x25 /* ATM cells */
#define	IFT_MIOX25		   0x26
#define	IFT_SONET		   0x27 /* SONET or SDH */
#define	IFT_X25PLE		   0x28
#define	IFT_ISO88022LLC		   0x29
#define	IFT_LOCALTALK		   0x2a
#define	IFT_SMDSDXI		   0x2b
#define	IFT_FRELAYDCE		   0x2c /* Frame Relay DCE */
#define	IFT_V35			   0x2d
#define	IFT_HSSI		   0x2e
#define	IFT_HIPPI		   0x2f
#define	IFT_MODEM		   0x30 /* Generic Modem */
#define	IFT_AAL5		   0x31 /* AAL5 over ATM */
#define	IFT_SONETPATH		   0x32
#define	IFT_SONETVT		   0x33
#define	IFT_SMDSICIP		   0x34 /* SMDS InterCarrier Interface */
#define	IFT_PROPVIRTUAL		   0x35 /* Proprietary Virtual/internal */
#define	IFT_PROPMUX		   0x36 /* Proprietary Multiplexing */
#define	IFT_IEEE80212		   0x37 /* 100BaseVG */
#define	IFT_FIBRECHANNEL	   0x38 /* Fibre Channel */
#define	IFT_HIPPIINTERFACE	   0x39 /* HIPPI interfaces	 */
#define	IFT_FRAMERELAYINTERCONNECT 0x3a /* Obsolete, use either 0x20 or 0x2c */
#define	IFT_AFLANE8023		   0x3b /* ATM Emulated LAN for 802.3 */
#define	IFT_AFLANE8025		   0x3c /* ATM Emulated LAN for 802.5 */
#define	IFT_CCTEMUL		   0x3d /* ATM Emulated circuit		  */
#define	IFT_FASTETHER		   0x3e /* Fast Ethernet (100BaseT) */
#define	IFT_ISDN		   0x3f /* ISDN and X.25	    */
#define	IFT_V11			   0x40 /* CCITT V.11/X.21		*/
#define	IFT_V36			   0x41 /* CCITT V.36			*/
#define	IFT_G703AT64K		   0x42 /* CCITT G703 at 64Kbps */
#define	IFT_G703AT2MB		   0x43 /* Obsolete see DS1-MIB */
#define	IFT_QLLC		   0x44 /* SNA QLLC			*/
#define	IFT_FASTETHERFX		   0x45 /* Fast Ethernet (100BaseFX)	*/
#define	IFT_CHANNEL		   0x46 /* channel			*/
#define	IFT_IEEE80211		   0x47 /* radio spread spectrum	*/
#define	IFT_IBM370PARCHAN	   0x48 /* IBM System 360/370 OEMI Channel */
#define	IFT_ESCON		   0x49 /* IBM Enterprise Systems Connection */
#define	IFT_DLSW		   0x4a /* Data Link Switching */
#define	IFT_ISDNS		   0x4b /* ISDN S/T interface */
#define	IFT_ISDNU		   0x4c /* ISDN U interface */
#define	IFT_LAPD		   0x4d /* Link Access Protocol D */
#define	IFT_IPSWITCH		   0x4e /* IP Switching Objects */
#define	IFT_RSRB		   0x4f /* Remote Source Route Bridging */
#define	IFT_ATMLOGICAL		   0x50 /* ATM Logical Port */
#define	IFT_DS0			   0x51 /* Digital Signal Level 0 */
#define	IFT_DS0BUNDLE		   0x52 /* group of ds0s on the same ds1 */
#define	IFT_BSC			   0x53 /* Bisynchronous Protocol */
#define	IFT_ASYNC		   0x54 /* Asynchronous Protocol */
#define	IFT_CNR			   0x55 /* Combat Net Radio */
#define	IFT_ISO88025DTR		   0x56 /* ISO 802.5r DTR */
#define	IFT_EPLRS		   0x57 /* Ext Pos Loc Report Sys */
#define	IFT_ARAP		   0x58 /* Appletalk Remote Access Protocol */
#define	IFT_PROPCNLS		   0x59 /* Proprietary Connectionless Protocol*/
#define	IFT_HOSTPAD		   0x5a /* CCITT-ITU X.29 PAD Protocol */
#define	IFT_TERMPAD		   0x5b /* CCITT-ITU X.3 PAD Facility */
#define	IFT_FRAMERELAYMPI	   0x5c /* Multiproto Interconnect over FR */
#define	IFT_X213		   0x5d /* CCITT-ITU X213 */
#define	IFT_ADSL		   0x5e /* Asymmetric Digital Subscriber Loop */
#define	IFT_RADSL		   0x5f /* Rate-Adapt. Digital Subscriber Loop*/
#define	IFT_SDSL		   0x60 /* Symmetric Digital Subscriber Loop */
#define	IFT_VDSL		   0x61 /* Very H-Speed Digital Subscrib. Loop*/
#define	IFT_ISO88025CRFPINT	   0x62 /* ISO 802.5 CRFP */
#define	IFT_MYRINET		   0x63 /* Myricom Myrinet */
#define	IFT_VOICEEM		   0x64 /* voice recEive and transMit */
#define	IFT_VOICEFXO		   0x65 /* voice Foreign Exchange Office */
#define	IFT_VOICEFXS		   0x66 /* voice Foreign Exchange Station */
#define	IFT_VOICEENCAP		   0x67 /* voice encapsulation */
#define	IFT_VOICEOVERIP		   0x68 /* voice over IP encapsulation */
#define	IFT_ATMDXI		   0x69 /* ATM DXI */
#define	IFT_ATMFUNI		   0x6a /* ATM FUNI */
#define	IFT_ATMIMA		   0x6b /* ATM IMA		      */
#define	IFT_PPPMULTILINKBUNDLE	   0x6c /* PPP Multilink Bundle */
#define	IFT_IPOVERCDLC		   0x6d /* IBM ipOverCdlc */
#define	IFT_IPOVERCLAW		   0x6e /* IBM Common Link Access to Workstn */
#define	IFT_STACKTOSTACK	   0x6f /* IBM stackToStack */
#define	IFT_VIRTUALIPADDRESS	   0x70 /* IBM VIPA */
#define	IFT_MPC			   0x71 /* IBM multi-protocol channel support */
#define	IFT_IPOVERATM		   0x72 /* IBM ipOverAtm */
#define	IFT_ISO88025FIBER	   0x73 /* ISO 802.5j Fiber Token Ring */
#define	IFT_TDLC		   0x74 /* IBM twinaxial data link control */
#define	IFT_GIGABITETHERNET	   0x75 /* Gigabit Ethernet */
#define	IFT_HDLC		   0x76 /* HDLC */
#define	IFT_LAPF		   0x77 /* LAP F */
#define	IFT_V37			   0x78 /* V.37 */
#define	IFT_X25MLP		   0x79 /* Multi-Link Protocol */
#define	IFT_X25HUNTGROUP	   0x7a /* X25 Hunt Group */
#define	IFT_TRANSPHDLC		   0x7b /* Transp HDLC */
#define	IFT_INTERLEAVE		   0x7c /* Interleave channel */
#define	IFT_FAST		   0x7d /* Fast channel */
#define	IFT_IP			   0x7e /* IP (for APPN HPR in IP networks) */
#define	IFT_DOCSCABLEMACLAYER	   0x7f /* CATV Mac Layer */
#define	IFT_DOCSCABLEDOWNSTREAM	   0x80 /* CATV Downstream interface */
#define	IFT_DOCSCABLEUPSTREAM	   0x81 /* CATV Upstream interface */
#define	IFT_A12MPPSWITCH	   0x82	/* Avalon Parallel Processor */
#define	IFT_TUNNEL		   0x83	/* Encapsulation interface */
#define	IFT_COFFEE		   0x84	/* coffee pot */
#define	IFT_CES			   0x85	/* Circiut Emulation Service */
#define	IFT_ATMSUBINTERFACE	   0x86	/* (x)  ATM Sub Interface */
#define	IFT_L2VLAN		   0x87	/* Layer 2 Virtual LAN using 802.1Q */
#define	IFT_L3IPVLAN		   0x88	/* Layer 3 Virtual LAN - IP Protocol */
#define	IFT_L3IPXVLAN		   0x89	/* Layer 3 Virtual LAN - IPX Prot. */
#define	IFT_DIGITALPOWERLINE	   0x8a	/* IP over Power Lines */
#define	IFT_MEDIAMAILOVERIP	   0x8b	/* (xxx)  Multimedia Mail over IP */
#define	IFT_DTM			   0x8c	/* Dynamic synchronous Transfer Mode */
#define	IFT_DCN			   0x8d	/* Data Communications Network */
#define	IFT_IPFORWARD		   0x8e	/* IP Forwarding Interface */
#define	IFT_MSDSL		   0x8f	/* Multi-rate Symmetric DSL */
#define	IFT_IEEE1394		   0x90	/* IEEE1394 High Performance SerialBus*/
#define	IFT_IFGSN		   0x91	/* HIPPI-6400 */
#define	IFT_DVBRCCMACLAYER	   0x92	/* DVB-RCC MAC Layer */
#define	IFT_DVBRCCDOWNSTREAM	   0x93	/* DVB-RCC Downstream Channel */
#define	IFT_DVBRCCUPSTREAM	   0x94	/* DVB-RCC Upstream Channel */
#define	IFT_ATMVIRTUAL		   0x95	/* ATM Virtual Interface */
#define	IFT_MPLSTUNNEL		   0x96	/* MPLS Tunnel Virtual Interface */
#define	IFT_SRP			   0x97	/* Spatial Reuse Protocol */
#define	IFT_VOICEOVERATM	   0x98	/* Voice over ATM */
#define	IFT_VOICEOVERFRAMERELAY	   0x99	/* Voice Over Frame Relay */
#define	IFT_IDSL		   0x9a	/* Digital Subscriber Loop over ISDN */
#define	IFT_COMPOSITELINK	   0x9b	/* Avici Composite Link Interface */
#define	IFT_SS7SIGLINK		   0x9c	/* SS7 Signaling Link */
#define	IFT_PROPWIRELESSP2P	   0x9d	/* Prop. P2P wireless interface */
#define	IFT_FRFORWARD		   0x9e	/* Frame forward Interface */
#define	IFT_RFC1483		   0x9f	/* Multiprotocol over ATM AAL5 */
#define	IFT_USB			   0xa0	/* USB Interface */
#define	IFT_IEEE8023ADLAG	   0xa1	/* IEEE 802.3ad Link Aggregate*/
#define	IFT_BGPPOLICYACCOUNTING	   0xa2	/* BGP Policy Accounting */
#define	IFT_FRF16MFRBUNDLE	   0xa3	/* FRF.16 Multilik Frame Relay*/
#define	IFT_H323GATEKEEPER	   0xa4	/* H323 Gatekeeper */
#define	IFT_H323PROXY		   0xa5	/* H323 Voice and Video Proxy */
#define	IFT_MPLS		   0xa6	/* MPLS */
#define	IFT_MFSIGLINK		   0xa7	/* Multi-frequency signaling link */
#define	IFT_HDSL2		   0xa8	/* High Bit-Rate DSL, 2nd gen. */
#define	IFT_SHDSL		   0xa9	/* Multirate HDSL2 */
#define	IFT_DS1FDL		   0xaa	/* Facility Data Link (4Kbps) on a DS1*/
#define	IFT_POS			   0xab	/* Packet over SONET/SDH Interface */
#define	IFT_DVBASILN		   0xac	/* DVB-ASI Input */
#define	IFT_DVBASIOUT		   0xad	/* DVB-ASI Output */
#define	IFT_PLC			   0xae	/* Power Line Communications */
#define	IFT_NFAS		   0xaf	/* Non-Facility Associated Signaling */
#define	IFT_TR008		   0xb0	/* TROO8 */
#define	IFT_GR303RDT		   0xb1	/* Remote Digital Terminal */
#define	IFT_GR303IDT		   0xb2	/* Integrated Digital Terminal */
#define	IFT_ISUP		   0xb3	/* ISUP */
#define	IFT_PROPDOCSWIRELESSMACLAYER	   0xb4	/* prop/Wireless MAC Layer */
#define	IFT_PROPDOCSWIRELESSDOWNSTREAM	   0xb5	/* prop/Wireless Downstream */
#define	IFT_PROPDOCSWIRELESSUPSTREAM	   0xb6	/* prop/Wireless Upstream */
#define	IFT_HIPERLAN2		   0xb7	/* HIPERLAN Type 2 Radio Interface */
#define	IFT_PROPBWAP2MP		   0xb8	/* PropBroadbandWirelessAccess P2MP*/
#define	IFT_SONETOVERHEADCHANNEL   0xb9	/* SONET Overhead Channel */
#define	IFT_DIGITALWRAPPEROVERHEADCHANNEL  0xba	/* Digital Wrapper Overhead */
#define	IFT_AAL2		   0xbb	/* ATM adaptation layer 2 */
#define	IFT_RADIOMAC		   0xbc	/* MAC layer over radio links */
#define	IFT_ATMRADIO		   0xbd	/* ATM over radio links */
#define	IFT_IMT			   0xbe /* Inter-Machine Trunks */
#define	IFT_MVL			   0xbf /* Multiple Virtual Lines DSL */
#define	IFT_REACHDSL		   0xc0 /* Long Reach DSL */
#define	IFT_FRDLCIENDPT		   0xc1 /* Frame Relay DLCI End Point */
#define	IFT_ATMVCIENDPT		   0xc2 /* ATM VCI End Point */
#define	IFT_OPTICALCHANNEL	   0xc3 /* Optical Channel */
#define	IFT_OPTICALTRANSPORT	   0xc4 /* Optical Transport */
#define	IFT_PROPATM		   0xc5 /* Proprietary ATM */
#define	IFT_VOICEOVERCABLE	   0xc6 /* Voice Over Cable Interface */
#define	IFT_INFINIBAND		   0xc7 /* Infiniband */
#define	IFT_TELINK		   0xc8 /* TE Link */
#define	IFT_Q2931		   0xc9 /* Q.2931 */
#define	IFT_VIRTUALTG		   0xca /* Virtual Trunk Group */
#define	IFT_SIPTG		   0xcb /* SIP Trunk Group */
#define	IFT_SIPSIG		   0xcc /* SIP Signaling */
#define	IFT_DOCSCABLEUPSTREAMCHANNEL 0xcd /* CATV Upstream Channel */
d109 2
a110 4
#define	IFT_PVC		0xf2
#define	IFT_FAITH	0xf3
#define	IFT_ENC		0xf4		/* Encapsulation */
#define	IFT_PFLOG	0xf5		/* Packet filter logging */
@


1.4.2.4
log
@Sync the SMP branch with 3.3
@
text
@a254 8
#define	IFT_ECONET		   0xce /* Acorn Econet */
#define	IFT_PON155		   0xcf /* FSAN 155Mb Symetrical PON interface */
#define	IFT_PON622		   0xd0 /* FSAN 622Mb Symetrical PON interface */
#define	IFT_BRIDGE		   0xd1 /* Transparent bridge interface */
#define	IFT_LINEGROUP		   0xd2 /* Interface common to multiple lines */
#define	IFT_VOICEEMFGD		   0xd3 /* voice E&M Feature Group D */
#define	IFT_VOICEFGDEANA	   0xd4 /* voice FGD Exchange Access North American */
#define	IFT_VOICEDID		   0xd5 /* voice Direct Inward Dialing */
d257 1
a263 1
#define	IFT_PFSYNC	0xf6		/* Packet filter state syncing */
@


1.4.2.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.4.2.4 2003/03/28 00:41:28 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.3
log
@OpenBSD tags + some prototyping police
@
text
@d1 1
a1 1
/*	$OpenBSD: if_types.h,v 1.7 1995/02/27 09:10:24 glass Exp $	*/
d100 6
@


1.2
log
@IPSEC package by John Ioannidis and Angelos D. Keromytis. Written in
Greece. From ftp.funet.fi:/pub/unix/security/net/ip/BSDipsec.tar.gz
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d98 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
