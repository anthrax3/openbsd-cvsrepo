head	1.19;
access;
symbols
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.19.0.4
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.18.0.6
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.15.0.42
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.46
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.44
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.40
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.38
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.36
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.34
	OPENBSD_5_0:1.15.0.32
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.30
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.28
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.24
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.26
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.22
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.20
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.18
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.16
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.14
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.12
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.10
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.8
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.6
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.4
	OPENBSD_3_6_BASE:1.15
	SMP_SYNC_A:1.15
	SMP_SYNC_B:1.15
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.14.0.4
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.13
	UBC:1.9.0.4
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.4
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.7.0.10
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.8
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.6
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2017.01.24.10.08.30;	author krw;	state Exp;
branches;
next	1.18;
commitid	6c6qq5OdS4VVnyVM;

1.18
date	2015.11.06.09.04.36;	author dlg;	state Exp;
branches;
next	1.17;
commitid	lT0blyIMTc93ssM1;

1.17
date	2015.06.03.00.50.09;	author dlg;	state Exp;
branches;
next	1.16;
commitid	gxTjkPThodI9Be3R;

1.16
date	2015.04.10.13.58.20;	author dlg;	state Exp;
branches;
next	1.15;
commitid	c7ei8kPelCOOwHXy;

1.15
date	2003.12.07.15.41.27;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.12.14.41.07;	author jason;	state Exp;
branches;
next	1.13;

1.13
date	2002.09.13.00.12.07;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2002.07.01.19.31.34;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.15.01.20.04;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.14.01.27.09;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.09.06.16.38;	author angelos;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2000.06.30.01.05.19;	author art;	state Exp;
branches;
next	1.7;

1.7
date	98.05.08.05.02.08;	author millert;	state Exp;
branches
	1.7.8.1;
next	1.6;

1.6
date	97.09.05.04.27.00;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.02.24.13.34.00;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.07.27.13.33.49;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.05.10.12.31.11;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.21.22.28.34;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.06;	author deraadt;	state Exp;
branches;
next	;

1.7.8.1
date	2001.05.14.22.40.01;	author niklas;	state Exp;
branches;
next	1.7.8.2;

1.7.8.2
date	2001.07.04.10.54.05;	author niklas;	state Exp;
branches;
next	1.7.8.3;

1.7.8.3
date	2002.03.28.14.57.37;	author niklas;	state Exp;
branches;
next	1.7.8.4;

1.7.8.4
date	2003.03.28.00.41.28;	author niklas;	state Exp;
branches;
next	1.7.8.5;

1.7.8.5
date	2004.02.19.10.57.21;	author niklas;	state Exp;
branches;
next	;

1.9.4.1
date	2002.06.11.03.30.45;	author art;	state Exp;
branches;
next	1.9.4.2;

1.9.4.2
date	2002.10.29.00.36.45;	author art;	state Exp;
branches;
next	1.9.4.3;

1.9.4.3
date	2003.05.19.22.30.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.19
log
@A space here, a space there. Soon we're talking real whitespace
rectification.
@
text
@/*	$OpenBSD: if_pppvar.h,v 1.18 2015/11/06 09:04:36 dlg Exp $	*/
/*	$NetBSD: if_pppvar.h,v 1.5 1997/01/03 07:23:29 mikel Exp $	*/
/*
 * if_pppvar.h - private structures and declarations for PPP.
 *
 * Copyright (c) 1989-2002 Paul Mackerras. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The name(s) of the authors of this software must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission.
 *
 * 4. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by Paul Mackerras
 *     <paulus@@samba.org>".
 *
 * THE AUTHORS OF THIS SOFTWARE DISCLAIM ALL WARRANTIES WITH REGARD TO
 * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
 * SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Copyright (c) 1984-2000 Carnegie Mellon University. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The name "Carnegie Mellon University" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For permission or any legal
 *    details, please contact
 *      Office of Technology Transfer
 *      Carnegie Mellon University
 *      5000 Forbes Avenue
 *      Pittsburgh, PA  15213-3890
 *      (412) 268-4387, fax: (412) 268-7395
 *      tech-transfer@@andrew.cmu.edu
 *
 * 4. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by Computing Services
 *     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
 *
 * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
 * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
 * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _NET_IF_PPPVAR_H_
#define _NET_IF_PPPVAR_H_

/*
 * Supported network protocols.  These values are used for
 * indexing sc_npmode.
 */
#define NP_IP	0		/* Internet Protocol */
#define NUM_NP	1		/* Number of NPs. */

struct ppp_pkt;

struct ppp_pkt_list {
	struct mutex	 pl_mtx;
	struct ppp_pkt	*pl_head;
	struct ppp_pkt	*pl_tail;
	u_int		 pl_count;
	u_int		 pl_limit;
};

/*
 * Structure describing each ppp unit.
 */
struct ppp_softc {
	struct	ifnet sc_if;		/* network-visible interface */
	struct	timeout sc_timo;	/* timeout control (for ptys) */
	int	sc_unit;		/* XXX unit number */
	u_int	sc_flags;		/* control/status bits; see if_ppp.h */
	void	*sc_devp;		/* pointer to device-dep structure */
	void	(*sc_start)(struct ppp_softc *); /* start output proc */
	void	(*sc_ctlp)(struct ppp_softc *); /* rcvd control pkt */
	void	(*sc_relinq)(struct ppp_softc *); /* relinquish ifunit */
	u_int16_t sc_mru;		/* max receive unit */
	pid_t	sc_xfer;		/* used in transferring unit */
	struct	ppp_pkt_list sc_rawq;	/* received packets */
	struct	mbuf_queue sc_inq;	/* queue of input packets for daemon */
	struct	ifqueue sc_fastq;	/* interactive output packet q */
	struct	mbuf *sc_togo;		/* output packet ready to go */
	struct	mbuf_list sc_npqueue;	/* output packets not to be sent yet */
	struct	pppstat sc_stats;	/* count of bytes/pkts sent/rcvd */
	caddr_t	sc_bpf;			/* hook for BPF */
	enum	NPmode sc_npmode[NUM_NP]; /* what to do with each NP */
	struct	compressor *sc_xcomp;	/* transmit compressor */
	void	*sc_xc_state;		/* transmit compressor state */
	struct	compressor *sc_rcomp;	/* receive decompressor */
	void	*sc_rc_state;		/* receive decompressor state */
	time_t	sc_last_sent;		/* time (secs) last NP pkt sent */
	time_t	sc_last_recv;		/* time (secs) last NP pkt rcvd */
	struct	bpf_program sc_pass_filt; /* filter for packets to pass */
	struct	bpf_program sc_active_filt; /* filter for "non-idle" packets */
#ifdef	VJC
	struct	slcompress *sc_comp;	/* vjc control buffer */
#endif

	/* Device-dependent part for async lines. */
	ext_accm sc_asyncmap;		/* async control character map */
	u_int32_t sc_rasyncmap;		/* receive async control char map */
	struct	mbuf *sc_outm;		/* mbuf chain currently being output */
	struct	ppp_pkt *sc_pkt;	/* pointer to input pkt chain */
	struct	ppp_pkt *sc_pktc;	/* pointer to current input pkt */
	uint8_t	*sc_pktp;		/* ptr to next char in input pkt */
	u_int16_t sc_ilen;		/* length of input packet so far */
	u_int16_t sc_fcs;		/* FCS so far (input) */
	u_int16_t sc_outfcs;		/* FCS so far for output packet */
	u_char	sc_rawin[16];		/* chars as received */
	int	sc_rawin_count;		/* # in sc_rawin */
	LIST_ENTRY(ppp_softc) sc_list;	/* all ppp interfaces */
};

#ifdef _KERNEL

struct ppp_pkt_hdr {
	struct ppp_pkt		*ph_next; /* next in pkt chain */
	struct ppp_pkt		*ph_pkt;  /* prev in chain or next in list */
	uint16_t		ph_len;
	uint16_t		ph_errmark;
};

struct ppp_pkt {
	struct ppp_pkt_hdr	p_hdr;
	uint8_t			p_buf[MCLBYTES - sizeof(struct ppp_pkt_hdr)];
};

void	ppp_pkt_free(struct ppp_pkt *);

#define PKT_NEXT(_p)		((_p)->p_hdr.ph_next)
#define PKT_PREV(_p)		((_p)->p_hdr.ph_pkt)
#define PKT_NEXTPKT(_p)		((_p)->p_hdr.ph_pkt)
#define PKT_LEN(_p)		((_p)->p_hdr.ph_len)

extern	struct ppp_softc ppp_softc[];

struct	ppp_softc *pppalloc(pid_t pid);
void	pppdealloc(struct ppp_softc *sc);
int	pppioctl(struct ppp_softc *sc, u_long cmd, caddr_t data,
		      int flag, struct proc *p);
void	ppppktin(struct ppp_softc *sc, struct ppp_pkt *pkt, int lost);
struct	mbuf *ppp_dequeue(struct ppp_softc *sc);
void	ppp_restart(struct ppp_softc *sc);
int	pppoutput(struct ifnet *, struct mbuf *,
		       struct sockaddr *, struct rtentry *);
#endif /* _KERNEL */
#endif /* _NET_IF_PPPVAR_H_ */
@


1.18
log
@unbreak tree after src/sys/net/if_ppp.c r1.95.

i forgot to commit the change of the npqueue type in the header.

noticed by benoit lecocq
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.17 2015/06/03 00:50:09 dlg Exp $	*/
d127 1
a127 1
	struct	slcompress *sc_comp; 	/* vjc control buffer */
d149 1
a149 1
	struct ppp_pkt		*ph_pkt;  /* prev in chain or next in list */ 
@


1.17
log
@there's been a long standing issue in ppp on a tty/serial line where it allocates mbufs at IPL_SOFTTTY, which is above the IPL_NET the mbuf layer protects itself at.

recent improvements to diagnostics in pools and mbufs now panic
instead of letting these things silently corrupt.

this reworks the ppp handling in the tty layer so it has its own
private pool to allocate packet memory out of. these packets get
built and then queued for softnet to process. softnet dequeues the
packet and attaches it to mbufs as external storage before handing
it on to the rest of the stack.

this was reported on bugs@@ and tested by both Walter Daugherity and
Martin van den Nieuwelaar
ok deraadt@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.16 2015/04/10 13:58:20 dlg Exp $	*/
d114 1
a114 2
	struct	mbuf *sc_npqueue;	/* output packets not to be sent yet */
	struct	mbuf **sc_npqtail;	/* ptr to last next ptr in npqueue */
@


1.16
log
@replace the use of ifqueues for most input queues serviced by netisr
with niqueues.

this change is so big because there's a lot of code that takes
pointers to different input queues (eg, ether_input picks between
ipv4, ipv6, pppoe, arp, and mpls input queues) and falls through
to code to enqueue packets against the pointer. if i changed only
one of the input queues id have to add sepearate code paths, one
for ifqueues and one for niqueues in each of these places

by flipping all these input queues at once i can keep the currently
common code common.

testing by mpi@@ sthen@@ and rafael zalamena
ok mpi@@ sthen@@ claudio@@ henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.15 2003/12/07 15:41:27 markus Exp $	*/
d86 10
d110 1
a110 1
	struct	ifqueue sc_rawq;	/* received packets */
d135 3
a137 3
	struct	mbuf *sc_m;		/* pointer to input mbuf chain */
	struct	mbuf *sc_mc;		/* pointer to current input mbuf */
	char	*sc_mp;			/* ptr to next char in input mbuf */
d147 20
d173 1
a173 1
void	ppppktin(struct ppp_softc *sc, struct mbuf *m, int lost);
@


1.15
log
@support ifconfig create; ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.14 2003/02/12 14:41:07 jason Exp $	*/
d101 1
a101 1
	struct	ifqueue sc_inq;		/* queue of input packets for daemon */
@


1.14
log
@Remove commons; inspired by netbsd.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.13 2002/09/13 00:12:07 deraadt Exp $	*/
d133 1
@


1.13
log
@Paul Mackerras and the Australian National University have worked things
out, and as a result, Paul now owns copyright on all these files, with the
proper terms.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.12 2002/07/01 19:31:34 deraadt Exp $	*/
d136 1
a136 1
struct	ppp_softc ppp_softc[NPPP];
@


1.12
log
@license update of CMU parts.  due to communication with wcw+@@andrew.cmu.edu,
pushed for by tygs@@netcologne.de.  Apparently we also now known how to talk
to the lawyers there, if we were so mad.  Note that a few other copyright
issues in pppd still remain, so this does not close this story.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.11 2002/03/15 01:20:04 millert Exp $	*/
d6 1
a6 2
 * Copyright (c) 1994 The Australian National University.
 * All rights reserved.
d8 28
a35 19
 * Permission to use, copy, modify, and distribute this software and its
 * documentation is hereby granted, provided that the above copyright
 * notice appears in all copies.  This software is provided without any
 * warranty, express or implied. The Australian National University
 * makes no representations about the suitability of this software for
 * any purpose.
 *
 * IN NO EVENT SHALL THE AUSTRALIAN NATIONAL UNIVERSITY BE LIABLE TO ANY
 * PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
 * THE AUSTRALIAN NATIONAL UNIVERSITY HAVE BEEN ADVISED OF THE POSSIBILITY
 * OF SUCH DAMAGE.
 *
 * THE AUSTRALIAN NATIONAL UNIVERSITY SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE AUSTRALIAN NATIONAL UNIVERSITY HAS NO
 * OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS,
 * OR MODIFICATIONS.
@


1.11
log
@Cosmetic changes only, primarily making comments line up nicely after the
__P removal.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.10 2002/03/14 01:27:09 millert Exp $	*/
d29 1
a29 2
 * Copyright (c) 1989 Carnegie Mellon University.
 * All rights reserved.
d31 35
a65 11
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by Carnegie Mellon University.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
@


1.10
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.9 2001/06/09 06:16:38 angelos Exp $	*/
d64 1
a64 1
	void	(*sc_start)(struct ppp_softc *);	/* start output proc */
d84 1
a84 1
	struct	bpf_program sc_pass_filt;   /* filter for packets to pass */
@


1.9
log
@By popular demand, protect from multiple inclusion, and fix to use the
same naming style.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.8 2000/06/30 01:05:19 art Exp $	*/
d64 3
a66 3
	void	(*sc_start) __P((struct ppp_softc *));	/* start output proc */
	void	(*sc_ctlp) __P((struct ppp_softc *)); /* rcvd control pkt */
	void	(*sc_relinq) __P((struct ppp_softc *)); /* relinquish ifunit */
d107 9
a115 9
struct	ppp_softc *pppalloc __P((pid_t pid));
void	pppdealloc __P((struct ppp_softc *sc));
int	pppioctl __P((struct ppp_softc *sc, u_long cmd, caddr_t data,
		      int flag, struct proc *p));
void	ppppktin __P((struct ppp_softc *sc, struct mbuf *m, int lost));
struct	mbuf *ppp_dequeue __P((struct ppp_softc *sc));
void	ppp_restart __P((struct ppp_softc *sc));
int	pppoutput __P((struct ifnet *, struct mbuf *,
		       struct sockaddr *, struct rtentry *));
@


1.9.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.9 2001/06/09 06:16:38 angelos Exp $	*/
d64 3
a66 3
	void	(*sc_start)(struct ppp_softc *); /* start output proc */
	void	(*sc_ctlp)(struct ppp_softc *); /* rcvd control pkt */
	void	(*sc_relinq)(struct ppp_softc *); /* relinquish ifunit */
d84 1
a84 1
	struct	bpf_program sc_pass_filt; /* filter for packets to pass */
d107 9
a115 9
struct	ppp_softc *pppalloc(pid_t pid);
void	pppdealloc(struct ppp_softc *sc);
int	pppioctl(struct ppp_softc *sc, u_long cmd, caddr_t data,
		      int flag, struct proc *p);
void	ppppktin(struct ppp_softc *sc, struct mbuf *m, int lost);
struct	mbuf *ppp_dequeue(struct ppp_softc *sc);
void	ppp_restart(struct ppp_softc *sc);
int	pppoutput(struct ifnet *, struct mbuf *,
		       struct sockaddr *, struct rtentry *);
@


1.9.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.9.4.1 2002/06/11 03:30:45 art Exp $	*/
d6 2
a7 1
 * Copyright (c) 1989-2002 Paul Mackerras. All rights reserved.
d9 34
a42 66
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The name(s) of the authors of this software must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission.
 *
 * 4. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by Paul Mackerras
 *     <paulus@@samba.org>".
 *
 * THE AUTHORS OF THIS SOFTWARE DISCLAIM ALL WARRANTIES WITH REGARD TO
 * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
 * SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Copyright (c) 1984-2000 Carnegie Mellon University. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The name "Carnegie Mellon University" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For permission or any legal
 *    details, please contact
 *      Office of Technology Transfer
 *      Carnegie Mellon University
 *      5000 Forbes Avenue
 *      Pittsburgh, PA  15213-3890
 *      (412) 268-4387, fax: (412) 268-7395
 *      tech-transfer@@andrew.cmu.edu
 *
 * 4. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by Computing Services
 *     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
 *
 * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
 * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
 * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
@


1.9.4.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d136 1
a136 1
extern	struct ppp_softc ppp_softc[];
@


1.8
log
@Convert to use new timeout API.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.7 1998/05/08 05:02:08 millert Exp $	*/
a116 1

@


1.7
log
@Add support for RFC-comliant deflate protocol
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.6 1997/09/05 04:27:00 millert Exp $	*/
d60 1
@


1.7.8.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.8 2000/06/30 01:05:19 art Exp $	*/
a59 1
	struct	timeout sc_timo;	/* timeout control (for ptys) */
@


1.7.8.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.7.8.1 2001/05/14 22:40:01 niklas Exp $	*/
d117 1
@


1.7.8.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d64 3
a66 3
	void	(*sc_start)(struct ppp_softc *); /* start output proc */
	void	(*sc_ctlp)(struct ppp_softc *); /* rcvd control pkt */
	void	(*sc_relinq)(struct ppp_softc *); /* relinquish ifunit */
d84 1
a84 1
	struct	bpf_program sc_pass_filt; /* filter for packets to pass */
d107 9
a115 9
struct	ppp_softc *pppalloc(pid_t pid);
void	pppdealloc(struct ppp_softc *sc);
int	pppioctl(struct ppp_softc *sc, u_long cmd, caddr_t data,
		      int flag, struct proc *p);
void	ppppktin(struct ppp_softc *sc, struct mbuf *m, int lost);
struct	mbuf *ppp_dequeue(struct ppp_softc *sc);
void	ppp_restart(struct ppp_softc *sc);
int	pppoutput(struct ifnet *, struct mbuf *,
		       struct sockaddr *, struct rtentry *);
@


1.7.8.4
log
@Sync the SMP branch with 3.3
@
text
@d6 2
a7 1
 * Copyright (c) 1989-2002 Paul Mackerras. All rights reserved.
d9 34
a42 66
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The name(s) of the authors of this software must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission.
 *
 * 4. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by Paul Mackerras
 *     <paulus@@samba.org>".
 *
 * THE AUTHORS OF THIS SOFTWARE DISCLAIM ALL WARRANTIES WITH REGARD TO
 * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
 * SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Copyright (c) 1984-2000 Carnegie Mellon University. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The name "Carnegie Mellon University" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For permission or any legal
 *    details, please contact
 *      Office of Technology Transfer
 *      Carnegie Mellon University
 *      5000 Forbes Avenue
 *      Pittsburgh, PA  15213-3890
 *      (412) 268-4387, fax: (412) 268-7395
 *      tech-transfer@@andrew.cmu.edu
 *
 * 4. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by Computing Services
 *     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
 *
 * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
 * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
 * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d105 1
a105 1
extern	struct ppp_softc ppp_softc[];
@


1.7.8.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a132 1
	LIST_ENTRY(ppp_softc) sc_list;	/* all ppp interfaces */
@


1.6
log
@Minor changes from ppp 2.3.1
@
text
@d1 1
a1 1
/*	$OpenBSD: if_pppvar.h,v 1.5 1997/02/24 13:34:00 niklas Exp $	*/
d45 3
d116 2
@


1.5
log
@OpenBSD tags + some prototyping police
@
text
@d1 2
a2 2
/*	$OpenBSD: if_pppvar.h,v 1.4 1996/05/07 02:40:39 thorpej Exp $	*/
/*	$NetBSD: if_pppvar.h,v 1.4 1996/05/07 02:40:39 thorpej Exp $	*/
d85 1
a85 1
	
d100 1
d110 3
@


1.4
log
@proto ppp_restart
@
text
@d1 1
@


1.3
log
@if_name/if_unit -> if_xname/if_softc
@
text
@d107 1
@


1.2
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$NetBSD: if_pppvar.h,v 1.3 1996/03/15 02:28:06 paulus Exp $	*/
d56 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: if_pppvar.h,v 1.2 1995/07/04 15:30:39 briggs Exp $	*/
d69 1
a69 5
#ifdef	VJC
	struct	slcompress sc_comp; 	/* vjc control buffer */
#endif
	u_int	sc_bytessent;		/* count of octets sent */
	u_int	sc_bytesrcvd;		/* count of octets received */
d78 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
