head	1.25;
access;
symbols
	OPENBSD_6_2:1.25.0.4
	OPENBSD_6_2_BASE:1.25
	OPENBSD_6_1:1.24.0.8
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.24.0.4
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.23.0.6
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.2
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.22.0.22
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.20
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.16
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.22.0.14
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.12
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.10
	OPENBSD_5_0:1.22.0.8
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.6
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.4
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.2
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.20.0.10
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.6
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.20.0.4
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.20.0.2
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.17.0.4
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.2
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.16.0.2
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.12.0.4
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.8.0.18
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.10
	UBC:1.8.0.16
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.14
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.12
	OPENBSD_2_8:1.8.0.10
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.8
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.6
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.4
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.7.0.8
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.25
date	2017.09.05.03.06.26;	author jsg;	state Exp;
branches;
next	1.24;
commitid	YhnP10JCfLXpJQMW;

1.24
date	2015.10.24.10.42.02;	author bluhm;	state Exp;
branches;
next	1.23;
commitid	ooninuingH9mEmCU;

1.23
date	2014.09.19.16.50.20;	author millert;	state Exp;
branches;
next	1.22;
commitid	ZShQn7IBvhZcHnQC;

1.22
date	2009.11.24.09.22.22;	author guenther;	state Exp;
branches;
next	1.21;

1.21
date	2009.10.26.21.09.33;	author jasper;	state Exp;
branches;
next	1.20;

1.20
date	2007.09.03.14.37.52;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.21.17.01.49;	author jasper;	state Exp;
branches;
next	1.18;

1.18
date	2007.03.18.15.27.53;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2006.08.04.21.35.51;	author beck;	state Exp;
branches;
next	1.16;

1.16
date	2005.12.28.16.33.57;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2005.12.13.00.35.23;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2005.06.17.21.48.03;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2005.05.24.03.55.11;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2004.07.13.21.03.39;	author marc;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.23.28.21;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.01.07.58.53;	author pjanzen;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.01.13.36.18;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	99.01.07.05.34.29;	author deraadt;	state Exp;
branches
	1.8.6.1
	1.8.16.1;
next	1.7;

1.7
date	97.02.28.07.15.58;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.02.27.01.00.54;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	96.07.26.10.34.28;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.25.05.44.10;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	96.03.03.12.11.39;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.01.29.01.05.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.26;	author deraadt;	state Exp;
branches;
next	;

1.8.6.1
date	2003.03.28.00.41.30;	author niklas;	state Exp;
branches;
next	1.8.6.2;

1.8.6.2
date	2003.06.07.11.09.07;	author ho;	state Exp;
branches;
next	;

1.8.16.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	1.8.16.2;

1.8.16.2
date	2002.10.29.00.36.49;	author art;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Add additional errno values required by POSIX.

ok jca@@ kettenis@@ deraadt@@
@
text
@/*	$OpenBSD: errno.h,v 1.24 2015/10/24 10:42:02 bluhm Exp $	*/
/*	$NetBSD: errno.h,v 1.10 1996/01/20 01:33:53 jtc Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)errno.h	8.5 (Berkeley) 1/21/94
 */

#include <sys/cdefs.h>

#define EPERM		1	/* Operation not permitted */
#define ENOENT		2	/* No such file or directory */
#define ESRCH		3	/* No such process */
#define EINTR		4	/* Interrupted system call */
#define EIO		5	/* Input/output error */
#define ENXIO		6	/* Device not configured */
#define E2BIG		7	/* Argument list too long */
#define ENOEXEC		8	/* Exec format error */
#define EBADF		9	/* Bad file descriptor */
#define ECHILD		10	/* No child processes */
#define EDEADLK		11	/* Resource deadlock avoided */
				/* 11 was EAGAIN */
#define ENOMEM		12	/* Cannot allocate memory */
#define EACCES		13	/* Permission denied */
#define EFAULT		14	/* Bad address */
#if __BSD_VISIBLE
#define ENOTBLK		15	/* Block device required */
#endif
#define EBUSY		16	/* Device busy */
#define EEXIST		17	/* File exists */
#define EXDEV		18	/* Cross-device link */
#define ENODEV		19	/* Operation not supported by device */
#define ENOTDIR		20	/* Not a directory */
#define EISDIR		21	/* Is a directory */
#define EINVAL		22	/* Invalid argument */
#define ENFILE		23	/* Too many open files in system */
#define EMFILE		24	/* Too many open files */
#define ENOTTY		25	/* Inappropriate ioctl for device */
#define ETXTBSY		26	/* Text file busy */
#define EFBIG		27	/* File too large */
#define ENOSPC		28	/* No space left on device */
#define ESPIPE		29	/* Illegal seek */
#define EROFS		30	/* Read-only file system */
#define EMLINK		31	/* Too many links */
#define EPIPE		32	/* Broken pipe */

/* math software */
#define EDOM		33	/* Numerical argument out of domain */
#define ERANGE		34	/* Result too large */

/* non-blocking and interrupt i/o */
#define EAGAIN		35	/* Resource temporarily unavailable */
#define EWOULDBLOCK	EAGAIN	/* Operation would block */
#define EINPROGRESS	36	/* Operation now in progress */
#define EALREADY	37	/* Operation already in progress */

/* ipc/network software -- argument errors */
#define ENOTSOCK	38	/* Socket operation on non-socket */
#define EDESTADDRREQ	39	/* Destination address required */
#define EMSGSIZE	40	/* Message too long */
#define EPROTOTYPE	41	/* Protocol wrong type for socket */
#define ENOPROTOOPT	42	/* Protocol not available */
#define EPROTONOSUPPORT	43	/* Protocol not supported */
#if __BSD_VISIBLE
#define ESOCKTNOSUPPORT	44	/* Socket type not supported */
#endif
#define EOPNOTSUPP	45	/* Operation not supported */
#if __BSD_VISIBLE
#define EPFNOSUPPORT	46	/* Protocol family not supported */
#endif
#define EAFNOSUPPORT	47	/* Address family not supported by protocol family */
#define EADDRINUSE	48	/* Address already in use */
#define EADDRNOTAVAIL	49	/* Can't assign requested address */

/* ipc/network software -- operational errors */
#define ENETDOWN	50	/* Network is down */
#define ENETUNREACH	51	/* Network is unreachable */
#define ENETRESET	52	/* Network dropped connection on reset */
#define ECONNABORTED	53	/* Software caused connection abort */
#define ECONNRESET	54	/* Connection reset by peer */
#define ENOBUFS		55	/* No buffer space available */
#define EISCONN		56	/* Socket is already connected */
#define ENOTCONN	57	/* Socket is not connected */
#if __BSD_VISIBLE
#define ESHUTDOWN	58	/* Can't send after socket shutdown */
#define ETOOMANYREFS	59	/* Too many references: can't splice */
#endif /* __BSD_VISIBLE */
#define ETIMEDOUT	60	/* Operation timed out */
#define ECONNREFUSED	61	/* Connection refused */

#define ELOOP		62	/* Too many levels of symbolic links */
#define ENAMETOOLONG	63	/* File name too long */

/* should be rearranged */
#if __BSD_VISIBLE
#define EHOSTDOWN	64	/* Host is down */
#endif /* __BSD_VISIBLE */
#define EHOSTUNREACH	65	/* No route to host */
#define ENOTEMPTY	66	/* Directory not empty */

/* quotas & mush */
#if __BSD_VISIBLE
#define EPROCLIM	67	/* Too many processes */
#define EUSERS		68	/* Too many users */
#endif /* __BSD_VISIBLE */
#define EDQUOT		69	/* Disk quota exceeded */

/* Network File System */
#define ESTALE		70	/* Stale NFS file handle */
#if __BSD_VISIBLE
#define EREMOTE		71	/* Too many levels of remote in path */
#define EBADRPC		72	/* RPC struct is bad */
#define ERPCMISMATCH	73	/* RPC version wrong */
#define EPROGUNAVAIL	74	/* RPC program not available */
#define EPROGMISMATCH	75	/* Program version wrong */
#define EPROCUNAVAIL	76	/* Bad procedure for program */
#endif /* __BSD_VISIBLE */

#define ENOLCK		77	/* No locks available */
#define ENOSYS		78	/* Function not implemented */

#if __BSD_VISIBLE
#define EFTYPE		79	/* Inappropriate file type or format */
#define EAUTH		80	/* Authentication error */
#define ENEEDAUTH	81	/* Need authenticator */
#define EIPSEC		82	/* IPsec processing failure */
#define ENOATTR		83	/* Attribute not found */
#endif /* __BSD_VISIBLE */
#define EILSEQ		84	/* Illegal byte sequence */
#if __BSD_VISIBLE
#define ENOMEDIUM	85	/* No medium found */
#define EMEDIUMTYPE	86	/* Wrong medium type */
#endif /* __BSD_VISIBLE */
#define EOVERFLOW	87	/* Value too large to be stored in data type */
#define ECANCELED	88	/* Operation canceled */
#define EIDRM		89	/* Identifier removed */
#define ENOMSG		90	/* No message of desired type */
#define ENOTSUP		91	/* Not supported */
#define EBADMSG		92	/* Bad message */
#define ENOTRECOVERABLE	93	/* State not recoverable */
#define EOWNERDEAD	94	/* Previous owner died */
#define EPROTO		95	/* Protocol error */
#if __BSD_VISIBLE
#define ELAST		95	/* Must be equal largest errno */
#endif /* __BSD_VISIBLE */

#ifdef _KERNEL
/* pseudo-errors returned inside kernel to modify return to process */
#define ERESTART	-1	/* restart syscall */
#define EJUSTRETURN	-2	/* don't modify regs, just return */
#endif
@


1.24
log
@Unify all the errno names in
- include comment
- libc errlist
- nls C msg
- man page
OK tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.23 2014/09/19 16:50:20 millert Exp $	*/
d170 4
d175 1
a175 1
#define ELAST		91	/* Must be equal largest errno */
@


1.23
log
@Move EHOSTUNREACH, EOVERFLOW and ECANCELED out from under __BSD_VISIBLE
since modern POSIX specifies them.  OK guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.22 2009/11/24 09:22:22 guenther Exp $	*/
d42 15
a56 15
#define	EPERM		1		/* Operation not permitted */
#define	ENOENT		2		/* No such file or directory */
#define	ESRCH		3		/* No such process */
#define	EINTR		4		/* Interrupted system call */
#define	EIO		5		/* Input/output error */
#define	ENXIO		6		/* Device not configured */
#define	E2BIG		7		/* Argument list too long */
#define	ENOEXEC		8		/* Exec format error */
#define	EBADF		9		/* Bad file descriptor */
#define	ECHILD		10		/* No child processes */
#define	EDEADLK		11		/* Resource deadlock avoided */
					/* 11 was EAGAIN */
#define	ENOMEM		12		/* Cannot allocate memory */
#define	EACCES		13		/* Permission denied */
#define	EFAULT		14		/* Bad address */
d58 1
a58 1
#define	ENOTBLK		15		/* Block device required */
d60 17
a76 17
#define	EBUSY		16		/* Device busy */
#define	EEXIST		17		/* File exists */
#define	EXDEV		18		/* Cross-device link */
#define	ENODEV		19		/* Operation not supported by device */
#define	ENOTDIR		20		/* Not a directory */
#define	EISDIR		21		/* Is a directory */
#define	EINVAL		22		/* Invalid argument */
#define	ENFILE		23		/* Too many open files in system */
#define	EMFILE		24		/* Too many open files */
#define	ENOTTY		25		/* Inappropriate ioctl for device */
#define	ETXTBSY		26		/* Text file busy */
#define	EFBIG		27		/* File too large */
#define	ENOSPC		28		/* No space left on device */
#define	ESPIPE		29		/* Illegal seek */
#define	EROFS		30		/* Read-only file system */
#define	EMLINK		31		/* Too many links */
#define	EPIPE		32		/* Broken pipe */
d79 2
a80 2
#define	EDOM		33		/* Numerical argument out of domain */
#define	ERANGE		34		/* Result too large */
d83 4
a86 4
#define	EAGAIN		35		/* Resource temporarily unavailable */
#define	EWOULDBLOCK	EAGAIN		/* Operation would block */
#define	EINPROGRESS	36		/* Operation now in progress */
#define	EALREADY	37		/* Operation already in progress */
d89 6
a94 6
#define	ENOTSOCK	38		/* Socket operation on non-socket */
#define	EDESTADDRREQ	39		/* Destination address required */
#define	EMSGSIZE	40		/* Message too long */
#define	EPROTOTYPE	41		/* Protocol wrong type for socket */
#define	ENOPROTOOPT	42		/* Protocol not available */
#define	EPROTONOSUPPORT	43		/* Protocol not supported */
d96 1
a96 1
#define	ESOCKTNOSUPPORT	44		/* Socket type not supported */
d98 1
a98 1
#define	EOPNOTSUPP	45		/* Operation not supported */
d100 1
a100 1
#define	EPFNOSUPPORT	46		/* Protocol family not supported */
d102 3
a104 3
#define	EAFNOSUPPORT	47		/* Address family not supported by protocol family */
#define	EADDRINUSE	48		/* Address already in use */
#define	EADDRNOTAVAIL	49		/* Can't assign requested address */
d107 8
a114 8
#define	ENETDOWN	50		/* Network is down */
#define	ENETUNREACH	51		/* Network is unreachable */
#define	ENETRESET	52		/* Network dropped connection on reset */
#define	ECONNABORTED	53		/* Software caused connection abort */
#define	ECONNRESET	54		/* Connection reset by peer */
#define	ENOBUFS		55		/* No buffer space available */
#define	EISCONN		56		/* Socket is already connected */
#define	ENOTCONN	57		/* Socket is not connected */
d116 2
a117 2
#define	ESHUTDOWN	58		/* Can't send after socket shutdown */
#define	ETOOMANYREFS	59		/* Too many references: can't splice */
d119 2
a120 2
#define	ETIMEDOUT	60		/* Operation timed out */
#define	ECONNREFUSED	61		/* Connection refused */
d122 2
a123 2
#define	ELOOP		62		/* Too many levels of symbolic links */
#define	ENAMETOOLONG	63		/* File name too long */
d127 1
a127 1
#define	EHOSTDOWN	64		/* Host is down */
d129 2
a130 2
#define	EHOSTUNREACH	65		/* No route to host */
#define	ENOTEMPTY	66		/* Directory not empty */
d134 2
a135 2
#define	EPROCLIM	67		/* Too many processes */
#define	EUSERS		68		/* Too many users */
d137 1
a137 1
#define	EDQUOT		69		/* Disk quota exceeded */
d140 1
a140 1
#define	ESTALE		70		/* Stale NFS file handle */
d142 6
a147 6
#define	EREMOTE		71		/* Too many levels of remote in path */
#define	EBADRPC		72		/* RPC struct is bad */
#define	ERPCMISMATCH	73		/* RPC version wrong */
#define	EPROGUNAVAIL	74		/* RPC prog. not avail */
#define	EPROGMISMATCH	75		/* Program version wrong */
#define	EPROCUNAVAIL	76		/* Bad procedure for program */
d150 2
a151 2
#define	ENOLCK		77		/* No locks available */
#define	ENOSYS		78		/* Function not implemented */
d154 5
a158 5
#define	EFTYPE		79		/* Inappropriate file type or format */
#define	EAUTH		80		/* Authentication error */
#define	ENEEDAUTH	81		/* Need authenticator */
#define	EIPSEC		82		/* IPsec processing failure */
#define	ENOATTR		83		/* Attribute not found */
d160 1
a160 1
#define	EILSEQ		84		/* Illegal byte sequence */
d162 2
a163 2
#define	ENOMEDIUM	85		/* No medium found */
#define	EMEDIUMTYPE	86		/* Wrong Medium Type */
d165 5
a169 5
#define	EOVERFLOW	87		/* Conversion overflow */
#define	ECANCELED	88		/* Operation canceled */
#define	EIDRM		89		/* Identifier removed */
#define	ENOMSG		90		/* No message of desired type */
#define	ENOTSUP		91		/* Not supported */
d171 1
a171 1
#define	ELAST		91		/* Must be equal largest errno */
d176 2
a177 2
#define	ERESTART	-1		/* restart syscall */
#define	EJUSTRETURN	-2		/* don't modify regs, just return */
@


1.22
log
@Change ENOTSUP's strerror() to "Not supported"
Provide C and Pig locale expansions for errno values from EAUTH to ENOTSUP

ok millert@@, mk@@, go aheads from others who have other translations
in the works
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.21 2009/10/26 21:09:33 jasper Exp $	*/
d128 1
a129 1
#endif /* __BSD_VISIBLE */
d164 1
a166 1
#endif /* __BSD_VISIBLE */
@


1.21
log
@add ENOTSUP and bump libc minor

discussed with a few
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.20 2007/09/03 14:37:52 millert Exp $	*/
d169 1
a169 1
#define ENOTSUP		91		/* Operation not supported */
@


1.20
log
@Add ENOMSG and EIDRM; from jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.19 2007/05/21 17:01:49 jasper Exp $	*/
d169 1
d171 1
a171 1
#define	ELAST		90		/* Must be equal largest errno */
@


1.19
log
@Add ECANCELED and EOVERFLOW. For canceled (async) operations and conversion
overflows, respectively. (EOVERFLOW from espie@@)

don't bump libc, as there are currently no functions that use them, but it
doesn't hurt to have them around.

as discussed with deraadt@@, espie@@, miod@@ and otto@@
ok deraadt@@ espie@@ miod@@ otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.18 2007/03/18 15:27:53 espie Exp $	*/
d166 5
a170 1
#define	ELAST		88		/* Must be equal largest errno */
@


1.18
log
@unwrap EILSEQ
okay millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.17 2006/08/04 21:35:51 beck Exp $	*/
d159 1
a159 1
#endif
d164 3
a166 1
#define	ELAST		86		/* Must be equal largest errno */
@


1.17
log
@Add ENOMEDIUM and EMEDIUMTYPE to report medium errors to userland programs
when using removable media devices, along with changes to scsi_base to
detect such cases in tapes other devices. This makes tar, dd, and friends
report a semi useful error message instead of nonsense when there is nothing
in the device.

Includes libc minor bump, and will require the corresponding sets change.

ok krw@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.16 2005/12/28 16:33:57 millert Exp $	*/
d159 1
d161 1
@


1.16
log
@Split off the non-kernel visible portion of sys/errno.h into a
separate errno.h.  sys/errno.h now only contains errno values (which
is included byerrno.h).  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.15 2005/12/13 00:35:23 millert Exp $	*/
d160 3
a162 1
#define	ELAST		84		/* Must be equal largest errno */
@


1.15
log
@First step in include files overhaul.  Use __FOO_VISIBLE (as defined
in sys/cdefs.h) instead of _FOO_SOURCE.  Also fix several namespace
pollution issues, including the byte order defines.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.14 2005/06/17 21:48:03 espie Exp $	*/
a39 1
#ifndef _KERNEL
a40 19

extern int errno;			/* global error number */

#if __BSD_VISIBLE && !defined(__SYS_ERRLIST)
#define __SYS_ERRLIST

extern int sys_nerr;
extern char *sys_errlist[];
#endif /* __BSD_VISIBLE && !defined(__SYS_ERRLIST) */

#if !defined(errno) && !defined(_STANDALONE)
__BEGIN_DECLS
int *__errno(void);
int *___errno(void);
__END_DECLS
#define errno (*__errno())
#endif /* errno */

#endif /* _KERNEL */
@


1.14
log
@forgotten commit.
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.13 2005/05/24 03:55:11 millert Exp $	*/
d41 2
d45 1
a45 1
#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE) && !defined(__SYS_ERRLIST)
d50 1
a50 1
#endif
a52 1
#include <sys/cdefs.h>
d77 1
a77 1
#ifndef _POSIX_SOURCE
d115 1
a115 1
#ifndef _POSIX_SOURCE
d117 1
a117 1
#endif /* _POSIX_SOURCE */
d119 1
a119 1
#ifndef _POSIX_SOURCE
d121 1
a121 1
#endif /* _POSIX_SOURCE */
d135 1
a135 1
#ifndef _POSIX_SOURCE
d138 1
a138 1
#endif /* _POSIX_SOURCE */
d146 1
a146 1
#ifndef _POSIX_SOURCE
d149 1
a149 1
#endif /* _POSIX_SOURCE */
d153 1
a153 1
#ifndef _POSIX_SOURCE
d156 1
a156 1
#endif /* _POSIX_SOURCE */
d161 1
a161 1
#ifndef _POSIX_SOURCE
d168 1
a168 1
#endif /* _POSIX_SOURCE */
d173 1
a173 1
#ifndef _POSIX_SOURCE
d181 1
a181 1
#endif /* _POSIX_SOURCE */
@


1.13
log
@POSIX specifies errno values that were BSD-specific once upon a time.
OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.12 2004/07/13 21:03:39 marc Exp $	*/
d178 2
a179 1
#define	ELAST		83		/* Must be equal largest errno */
@


1.12
log
@errno changes, lib major version bumps, and general flag day
To build you must:
cd /usr/src && make obj && make includes
cd lib/libc && make depend && make && NOMAN=1 sudo make install
cd /usr/src && make build
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.11 2003/06/02 23:28:21 millert Exp $	*/
a88 1
#ifndef _POSIX_SOURCE
a89 1
#endif
a102 1
#ifndef _POSIX_SOURCE
d114 1
d116 1
d118 1
d120 1
d134 1
d137 1
a141 1
#endif /* _POSIX_SOURCE */
d155 1
d160 1
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.10 2002/07/01 07:58:53 pjanzen Exp $	*/
d49 11
a59 1
#endif
@


1.10
log
@Change spelling in comment to match errlist.c
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.9 2002/05/01 13:36:18 drahn Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@Sync EA with FreeBSD, mostly addition of new ENOATTR errno.
ok millert@@, art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.8 1999/01/07 05:34:29 deraadt Exp $	*/
d147 1
a147 1
#define	EDQUOT		69		/* Disc quota exceeded */
@


1.8
log
@EIPSEC (may change name later); cmetz
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.7 1997/02/28 07:15:58 millert Exp $	*/
d167 2
a168 1
#define	ELAST		82		/* Must be equal largest errno */
@


1.8.6.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d147 1
a147 1
#define	EDQUOT		69		/* Disk quota exceeded */
d167 1
a167 2
#define	ENOATTR		83		/* Attribute not found */
#define	ELAST		83		/* Must be equal largest errno */
@


1.8.6.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.8.6.1 2003/03/28 00:41:30 niklas Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.8.16.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.8 1999/01/07 05:34:29 deraadt Exp $	*/
d167 1
a167 2
#define	ENOATTR		83		/* Attribute not found */
#define	ELAST		83		/* Must be equal largest errno */
@


1.8.16.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.8.16.1 2002/06/11 03:32:33 art Exp $	*/
d147 1
a147 1
#define	EDQUOT		69		/* Disk quota exceeded */
@


1.7
log
@Back out multiple inclusion check.  There are things that depend
on being able to re-include sys/errno.h with _KERNEL defined.  Ick.
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.6 1997/02/27 01:00:54 millert Exp $	*/
d166 2
a167 1
#define	ELAST		81		/* Must be equal largest errno */
@


1.6
log
@Protect against multiple inclusion.
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.5 1996/07/26 10:34:28 deraadt Exp $	*/
a43 3
#ifndef _SYS_ERRNO_H_
#define _SYS_ERRNO_H_

a172 2
#endif

@


1.5
log
@export non-constipated sys_errlist[] to userland
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.4 1996/07/25 05:44:10 downsj Exp $	*/
d44 3
d176 2
@


1.4
log
@Let's fix this more or less `correctly', rather then making it worse.
@
text
@d1 1
a1 1
/*	$OpenBSD: errno.h,v 1.3 1996/03/03 12:11:39 niklas Exp $	*/
d51 1
a51 1
extern const char *const sys_errlist[];
@


1.3
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d47 3
a49 1
#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
@


1.2
log
@from netbsd; move sys_nerr/sys_errlist decls to errno.h
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: errno.h,v 1.9 1995/03/26 20:24:04 jtc Exp $	*/
d45 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
