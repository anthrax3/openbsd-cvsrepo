head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.12
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.14
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.10
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.6
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.8
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.38
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.36
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.34
	OPENBSD_5_0:1.13.0.32
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.30
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.28
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.24
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.26
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.22
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.20
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.18
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.16
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.14
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.12
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.10
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.8
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.6
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.4
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.13
	SMP_SYNC_B:1.13
	OPENBSD_3_5:1.13.0.2
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.11
	UBC:1.9.0.20
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.18
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.16
	OPENBSD_2_8:1.9.0.14
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.12
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.10
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.8
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.6
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.4
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.2
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2014.07.11.14.36.44;	author uebayasi;	state Exp;
branches;
next	1.16;
commitid	V6bwQMCHbD31pEWD;

1.16
date	2014.07.11.07.57.58;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	YEh9IxRqJ7BoUCLy;

1.15
date	2014.07.10.12.13.48;	author uebayasi;	state Exp;
branches;
next	1.14;
commitid	aofvn6ceiucgjg4N;

1.14
date	2013.03.24.17.42.43;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2004.03.10.23.02.53;	author tom;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.02.23.28.21;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.28.22.06.55;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	98.03.18.12.10.14;	author pefo;	state Exp;
branches
	1.9.10.1
	1.9.20.1;
next	1.8;

1.8
date	97.06.22.22.05.58;	author downsj;	state Exp;
branches;
next	1.7;

1.7
date	97.01.16.04.19.41;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	96.10.14.13.22.15;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.06.16.10.27.30;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.05.02.13.14.55;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.18.21.41.07;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.12.12.11;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.28;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.28;	author deraadt;	state Exp;
branches;
next	;

1.9.10.1
date	2002.03.06.02.17.13;	author niklas;	state Exp;
branches;
next	1.9.10.2;

1.9.10.2
date	2002.03.28.14.52.01;	author niklas;	state Exp;
branches;
next	1.9.10.3;

1.9.10.3
date	2003.06.07.11.09.08;	author ho;	state Exp;
branches;
next	1.9.10.4;

1.9.10.4
date	2004.06.05.23.13.10;	author niklas;	state Exp;
branches;
next	;

1.9.20.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	;


desc
@@


1.17
log
@reboot(9): Add MI reboot entry function

Now, for kernel to "reboot" (reboot, halt, or shutdown), MD boot(9) is called
in some places.  This change introduces a new MI function reboot(9) which is
simply a wrapper to call MD boot(9).

OK kettenis@@ deraadt@@
@
text
@/*	$OpenBSD$	*/
/*	$NetBSD: reboot.h,v 1.9 1996/04/22 01:23:25 christos Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1988, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)reboot.h	8.2 (Berkeley) 7/10/94
 */

#ifndef _SYS_REBOOT_H_
#define	_SYS_REBOOT_H_

/*
 * Arguments to reboot system call.  These are passed to the boot program,
 * and then on to init.
 */
#define	RB_AUTOBOOT	0	/* flags for system auto-booting itself */

#define	RB_ASKNAME	0x0001	/* ask for file name to reboot from */
#define	RB_SINGLE	0x0002	/* reboot to single user only */
#define	RB_NOSYNC	0x0004	/* dont sync before reboot */
#define	RB_HALT		0x0008	/* don't reboot, just halt */
#define	RB_INITNAME	0x0010	/* name given for /etc/init (unused) */
#define	RB_DFLTROOT	0x0020	/* use compiled-in rootdev */
#define	RB_KDB		0x0040	/* give control to kernel debugger */
#define	RB_RDONLY	0x0080	/* mount root fs read-only */
#define	RB_DUMP		0x0100	/* dump kernel memory before reboot */
#define	RB_MINIROOT	0x0200	/* mini-root present in memory at boot time */
#define	RB_CONFIG	0x0400	/* change configured devices */
#define	RB_TIMEBAD	0x0800	/* don't call resettodr() in boot() */
#define	RB_POWERDOWN	0x1000	/* attempt to power down machine */
#define	RB_SERCONS	0x2000	/* use serial console if available */
#define	RB_USERREQ	0x4000	/* boot() called at user request (e.g. ddb) */

/*
 * Constants for converting boot-style device number to type,
 * adaptor (uba, mba, etc), unit number and partition number.
 * Type (== major device number) is in the low byte
 * for backward compatibility.  Except for that of the "magic
 * number", each mask applies to the shifted value.
 * Format:
 *	 (4) (4) (4) (4)  (8)     (8)
 *	--------------------------------
 *	|MA | AD| CT| UN| PART  | TYPE |
 *	--------------------------------
 */
#define	B_ADAPTORSHIFT		24
#define	B_ADAPTORMASK		0x0f
#define	B_ADAPTOR(val)		(((val) >> B_ADAPTORSHIFT) & B_ADAPTORMASK)
#define B_CONTROLLERSHIFT	20
#define B_CONTROLLERMASK	0xf
#define	B_CONTROLLER(val)	(((val)>>B_CONTROLLERSHIFT) & B_CONTROLLERMASK)
#define B_UNITSHIFT		16
#define B_UNITMASK		0xf
#define	B_UNIT(val)		(((val) >> B_UNITSHIFT) & B_UNITMASK)
#define B_PARTITIONSHIFT	8
#define B_PARTITIONMASK		0xff
#define	B_PARTITION(val)	(((val) >> B_PARTITIONSHIFT) & B_PARTITIONMASK)
#define	B_TYPESHIFT		0
#define	B_TYPEMASK		0xff
#define	B_TYPE(val)		(((val) >> B_TYPESHIFT) & B_TYPEMASK)

#define	B_MAGICMASK	0xf0000000
#define	B_DEVMAGIC	0xa0000000

#define MAKEBOOTDEV(type, adaptor, controller, unit, partition) \
	(((type) << B_TYPESHIFT) | ((adaptor) << B_ADAPTORSHIFT) | \
	((controller) << B_CONTROLLERSHIFT) | ((unit) << B_UNITSHIFT) | \
	((partition) << B_PARTITIONSHIFT) | B_DEVMAGIC)

#if	defined(_KERNEL) && !defined(_STANDALONE) && !defined(_LOCORE)

__BEGIN_DECLS
__dead void	reboot(int);
__dead void	boot(int);
__END_DECLS

#endif /* _KERNEL */

#endif /* !_SYS_REBOOT_H_ */
@


1.16
log
@sys/reboot.h does not need to be standalone and pull cdefs.h by itself.
enough kernel .S pull this in and cannot handle that (yet)
ok uebayasi
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.15 2014/07/10 12:13:48 uebayasi Exp $	*/
d99 1
@


1.15
log
@boot(): Unify declarations

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a36 2

#include <sys/cdefs.h>
@


1.14
log
@label some nested #endif's
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.13 2004/03/10 23:02:53 tom Exp $	*/
d35 5
d101 1
a101 2
void	boot(int)
    __attribute__((__noreturn__));
d105 2
@


1.13
log
@Ensure that we obey a user's ddb> boot reboot command even if the system
is cold (during startup).

This adds RB_USERREQ to sys/reboot.h, uses it in the ddb commands, and
ensures that */*/machdep.c:boot() won't set RB_HALT when cold if this
flag is set.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.12 2003/06/02 23:28:21 millert Exp $	*/
a95 1

a97 1

@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.11 2002/03/14 01:27:14 millert Exp $	*/
d55 1
@


1.11
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.10 2002/02/28 22:06:55 mickey Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.10
log
@hide proto from locore
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.9 1998/03/18 12:10:14 pefo Exp $	*/
d100 1
a100 1
void	boot __P((int))
@


1.9
log
@Add bit in boothowto to control console selection
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.8 1997/06/22 22:05:58 downsj Exp $	*/
d96 1
a96 1
#if	defined(_KERNEL) && !defined(_STANDALONE)
a105 1

@


1.9.20.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.9 1998/03/18 12:10:14 pefo Exp $	*/
d96 1
a96 1
#if	defined(_KERNEL) && !defined(_STANDALONE) && !defined(_LOCORE)
d100 1
a100 1
void	boot(int)
d106 1
@


1.9.10.1
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d96 1
a96 1
#if	defined(_KERNEL) && !defined(_STANDALONE) && !defined(_LOCORE)
d106 1
@


1.9.10.2
log
@Merge in -current from roughly a week ago
@
text
@d100 1
a100 1
void	boot(int)
@


1.9.10.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.9.10.2 2002/03/28 14:52:01 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.9.10.4
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a54 1
#define	RB_USERREQ	0x4000	/* boot() called at user request (e.g. ddb) */
@


1.8
log
@Add RB_POWERDOWN.
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.7 1997/01/16 04:19:41 kstailey Exp $	*/
d57 2
a58 1
#define RB_POWERDOWN	0x1000	/* attempt to power down machine */
@


1.7
log
@added RB_TIMEBAD bootflag
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.6 1996/10/14 13:22:15 mickey Exp $	*/
d45 13
a57 12
#define	RB_ASKNAME	0x001	/* ask for file name to reboot from */
#define	RB_SINGLE	0x002	/* reboot to single user only */
#define	RB_NOSYNC	0x004	/* dont sync before reboot */
#define	RB_HALT		0x008	/* don't reboot, just halt */
#define	RB_INITNAME	0x010	/* name given for /etc/init (unused) */
#define	RB_DFLTROOT	0x020	/* use compiled-in rootdev */
#define	RB_KDB		0x040	/* give control to kernel debugger */
#define	RB_RDONLY	0x080	/* mount root fs read-only */
#define	RB_DUMP		0x100	/* dump kernel memory before reboot */
#define	RB_MINIROOT	0x200	/* mini-root present in memory at boot time */
#define	RB_CONFIG	0x400	/* change configured devices */
#define	RB_TIMEBAD	0x800	/* don't call resettodr() in boot() */
@


1.6
log
@support standalone.
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.5 1996/06/16 10:27:30 deraadt Exp $	*/
d56 1
@


1.5
log
@add RB_CONFIG
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.4 1996/05/02 13:14:55 deraadt Exp $	*/
d93 1
a93 1
#ifdef _KERNEL
@


1.4
log
@proto more stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: reboot.h,v 1.3 1996/04/18 21:41:07 niklas Exp $	*/
d55 1
@


1.3
log
@Merge of NetBSD 960317
@
text
@d1 2
a2 2
/*	$OpenBSD: reboot.h,v 1.2 1996/03/03 12:12:11 niklas Exp $	*/
/*	$NetBSD: reboot.h,v 1.8 1996/02/22 20:30:16 scottr Exp $	*/
d91 12
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: reboot.h,v 1.7 1994/12/13 15:01:22 mycroft Exp $	*/
d40 2
a41 2
 * Arguments to reboot system call.  These are passed to boot program
 * in r11, and on to init.
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

