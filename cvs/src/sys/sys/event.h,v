head	1.25;
access;
symbols
	OPENBSD_6_1:1.23.0.4
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.21.0.4
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.20.0.8
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.4
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.19.0.4
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.17.0.4
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.2
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.8
	OPENBSD_5_0:1.15.0.6
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.4
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.2
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.13.0.4
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.6
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.2
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.11.0.6
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.8
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	SMP:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2;
locks; strict;
comment	@ * @;


1.25
date	2017.05.31.14.52.05;	author mikeb;	state Exp;
branches;
next	1.24;
commitid	AP08WxbAgBQjeXQY;

1.24
date	2017.05.31.07.12.28;	author tedu;	state Exp;
branches;
next	1.23;
commitid	qFmxBVmfggw4lLWk;

1.23
date	2016.09.24.18.39.17;	author tedu;	state Exp;
branches;
next	1.22;
commitid	GXzKcsQAvRY5ZZxt;

1.22
date	2016.08.13.17.05.02;	author tedu;	state Exp;
branches;
next	1.21;
commitid	ARqCXM2sKlLkxGcT;

1.21
date	2015.10.06.03.29.35;	author guenther;	state Exp;
branches;
next	1.20;
commitid	nqF9OlkElMvOOaU9;

1.20
date	2014.05.15.04.43.25;	author guenther;	state Exp;
branches;
next	1.19;

1.19
date	2013.08.13.05.52.26;	author guenther;	state Exp;
branches;
next	1.18;

1.18
date	2013.04.24.09.52.54;	author nicm;	state Exp;
branches;
next	1.17;

1.17
date	2012.06.08.05.22.49;	author guenther;	state Exp;
branches;
next	1.16;

1.16
date	2012.06.06.04.47.42;	author guenther;	state Exp;
branches;
next	1.15;

1.15
date	2010.08.02.19.54.07;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2010.07.28.21.44.41;	author nicm;	state Exp;
branches;
next	1.13;

1.13
date	2008.11.05.09.20.17;	author dlg;	state Exp;
branches;
next	1.12;

1.12
date	2008.11.05.09.07.56;	author dlg;	state Exp;
branches;
next	1.11;

1.11
date	2007.05.30.00.23.48;	author tedu;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.19.19.09.20;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.12.04.47.01;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.17.02.43.25;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.22.01.05.07;	author tedu;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.27.16.20.58;	author nate;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.22.19.59.13;	author nate;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.01.20.54.35;	author provos;	state Exp;
branches
	1.3.4.1
	1.3.8.1;
next	1.2;

1.2
date	2000.11.16.20.31.29;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.16.20.02.19;	author provos;	state Exp;
branches;
next	;

1.3.4.1
date	2001.05.14.22.45.01;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.03.28.14.52.01;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2003.06.07.11.09.07;	author ho;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2004.02.19.11.01.32;	author niklas;	state Exp;
branches;
next	;

1.3.8.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Add support for EV_RECEIPT and EV_DISPATCH flags

From FreeBSD via Jan Schreiber <jes at posteo ! de>, thanks!
OK tedu, bluhm
@
text
@/*	$OpenBSD: event.h,v 1.24 2017/05/31 07:12:28 tedu Exp $	*/

/*-
 * Copyright (c) 1999,2000,2001 Jonathan Lemon <jlemon@@FreeBSD.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	$FreeBSD: src/sys/sys/event.h,v 1.11 2001/02/24 01:41:31 jlemon Exp $
 */

#ifndef _SYS_EVENT_H_
#define _SYS_EVENT_H_

#define EVFILT_READ		(-1)
#define EVFILT_WRITE		(-2)
#define EVFILT_AIO		(-3)	/* attached to aio requests */
#define EVFILT_VNODE		(-4)	/* attached to vnodes */
#define EVFILT_PROC		(-5)	/* attached to struct process */
#define EVFILT_SIGNAL		(-6)	/* attached to struct process */
#define EVFILT_TIMER		(-7)	/* timers */

#define EVFILT_SYSCOUNT		7

#define EV_SET(kevp_, a, b, c, d, e, f) do {	\
	struct kevent *kevp = (kevp_);		\
	(kevp)->ident = (a);			\
	(kevp)->filter = (b);			\
	(kevp)->flags = (c);			\
	(kevp)->fflags = (d);			\
	(kevp)->data = (e);			\
	(kevp)->udata = (f);			\
} while(0)

struct kevent {
	__uintptr_t	ident;		/* identifier for this event */
	short		filter;		/* filter for event */
	u_short		flags;
	u_int		fflags;
	__int64_t	data;
	void		*udata;		/* opaque user data identifier */
};

/* actions */
#define EV_ADD		0x0001		/* add event to kq (implies enable) */
#define EV_DELETE	0x0002		/* delete event from kq */
#define EV_ENABLE	0x0004		/* enable event */
#define EV_DISABLE	0x0008		/* disable event (not reported) */

/* flags */
#define EV_ONESHOT	0x0010		/* only report one occurrence */
#define EV_CLEAR	0x0020		/* clear event state after reporting */
#define EV_RECEIPT	0x0040          /* force EV_ERROR on success, data=0 */
#define EV_DISPATCH	0x0080          /* disable event after reporting */

#define EV_SYSFLAGS	0xF000		/* reserved by system */
#define EV_FLAG1	0x2000		/* filter-specific flag */

/* returned values */
#define EV_EOF		0x8000		/* EOF detected */
#define EV_ERROR	0x4000		/* error, data contains errno */

/*
 * data/hint flags for EVFILT_{READ|WRITE}, shared with userspace
 */
#define NOTE_LOWAT	0x0001			/* low water mark */
#define NOTE_EOF	0x0002			/* return on EOF */

/*
 * data/hint flags for EVFILT_VNODE, shared with userspace
 */
#define	NOTE_DELETE	0x0001			/* vnode was removed */
#define	NOTE_WRITE	0x0002			/* data contents changed */
#define	NOTE_EXTEND	0x0004			/* size increased */
#define	NOTE_ATTRIB	0x0008			/* attributes changed */
#define	NOTE_LINK	0x0010			/* link count changed */
#define	NOTE_RENAME	0x0020			/* vnode was renamed */
#define	NOTE_REVOKE	0x0040			/* vnode access was revoked */
#define	NOTE_TRUNCATE   0x0080			/* vnode was truncated */

/*
 * data/hint flags for EVFILT_PROC, shared with userspace
 */
#define	NOTE_EXIT	0x80000000		/* process exited */
#define	NOTE_FORK	0x40000000		/* process forked */
#define	NOTE_EXEC	0x20000000		/* process exec'd */
#define	NOTE_PCTRLMASK	0xf0000000		/* mask for hint bits */
#define	NOTE_PDATAMASK	0x000fffff		/* mask for pid */

/* additional flags for EVFILT_PROC */
#define	NOTE_TRACK	0x00000001		/* follow across forks */
#define	NOTE_TRACKERR	0x00000002		/* could not track child */
#define	NOTE_CHILD	0x00000004		/* am a child process */

/*
 * This is currently visible to userland to work around broken
 * programs which pull in <sys/proc.h> or <sys/selinfo.h>.
 */
#include <sys/queue.h>
struct knote;
SLIST_HEAD(klist, knote);

#ifdef _KERNEL

#define KNOTE(list_, hint)	do { \
					struct klist *list = (list_); \
					if ((list) != NULL) \
						knote((list), (hint)); \
				} while (0)

#define	KN_HASHSIZE		64		/* XXX should be tunable */

/*
 * Flag indicating hint is a signal.  Used by EVFILT_SIGNAL, and also
 * shared by EVFILT_PROC  (all knotes attached to p->p_klist)
 */
#define NOTE_SIGNAL	0x08000000

struct filterops {
	int	f_isfd;		/* true if ident == filedescriptor */
	int	(*f_attach)(struct knote *kn);
	void	(*f_detach)(struct knote *kn);
	int	(*f_event)(struct knote *kn, long hint);
};

struct knote {
	SLIST_ENTRY(knote)	kn_link;	/* for fd */
	SLIST_ENTRY(knote)	kn_selnext;	/* for struct selinfo */
	TAILQ_ENTRY(knote)	kn_tqe;
	struct			kqueue *kn_kq;	/* which queue we are on */
	struct			kevent kn_kevent;
	int			kn_status;
	int			kn_sfflags;	/* saved filter flags */
	__int64_t		kn_sdata;	/* saved data field */
	union {
		struct		file *p_fp;	/* file data pointer */
		struct		process *p_process;	/* process pointer */
	} kn_ptr;
	const struct		filterops *kn_fop;
	void			*kn_hook;
#define KN_ACTIVE	0x01			/* event has been triggered */
#define KN_QUEUED	0x02			/* event is on queue */
#define KN_DISABLED	0x04			/* event is disabled */
#define KN_DETACHED	0x08			/* knote is detached */

#define kn_id		kn_kevent.ident
#define kn_filter	kn_kevent.filter
#define kn_flags	kn_kevent.flags
#define kn_fflags	kn_kevent.fflags
#define kn_data		kn_kevent.data
#define kn_fp		kn_ptr.p_fp
};

struct proc;

extern void	knote(struct klist *list, long hint);
extern void	knote_activate(struct knote *);
extern void	knote_remove(struct proc *p, struct klist *list);
extern void	knote_fdclose(struct proc *p, int fd);
extern void	knote_processexit(struct proc *);
extern int	kqueue_register(struct kqueue *kq,
		    struct kevent *kev, struct proc *p);
extern int	filt_seltrue(struct knote *kn, long hint);
extern int	seltrue_kqfilter(dev_t, struct knote *);
extern void	klist_invalidate(struct klist *);

#else	/* !_KERNEL */

#include <sys/cdefs.h>
struct timespec;

__BEGIN_DECLS
int	kqueue(void);
int	kevent(int kq, const struct kevent *changelist, int nchanges,
		    struct kevent *eventlist, int nevents,
		    const struct timespec *timeout);
__END_DECLS

#endif /* !_KERNEL */

#endif /* !_SYS_EVENT_H_ */
@


1.24
log
@make a copy of the first EV_SET argument to prevent multiple evaluation.
matches freebsd, fixes lldb. from Kamil Rytarowski at NetBSD.
while here, make the same change to KNOTE. ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.23 2016/09/24 18:39:17 tedu Exp $	*/
d72 2
@


1.23
log
@move knhash size to event.h, use it for hashfree. from Mathieu -
ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.22 2016/08/13 17:05:02 tedu Exp $	*/
d44 2
a45 1
#define EV_SET(kevp, a, b, c, d, e, f) do {	\
d122 2
a123 1
#define KNOTE(list, hint)	do { \
@


1.22
log
@modern interfaces should use modern speelings, so spell quad_t as int64_t.
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.21 2015/10/06 03:29:35 guenther Exp $	*/
d125 2
@


1.21
log
@struct knote's kn_sdata needs to be the same type as struct kevent's data

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.20 2014/05/15 04:43:25 guenther Exp $	*/
d58 1
a58 1
	quad_t		data;
d147 1
a147 1
	quad_t			kn_sdata;	/* saved data field */
@


1.20
log
@knote_processexit() needs the thread to pass down to FRELE(), so pass it
the exiting thread instead of assuming that that's ps_mainproc.
Also, panic no matter which thread of init takes it down.

ok tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.19 2013/08/13 05:52:26 guenther Exp $	*/
d147 1
a147 1
	int			kn_sdata;	/* saved data field */
@


1.19
log
@Switch time_t, ino_t, clock_t, and struct kevent's ident and data
members to 64bit types.  Assign new syscall numbers for (almost
all) the syscalls that involve the affected types, including anything
with time_t, timeval, itimerval, timespec, rusage, dirent, stat,
or kevent arguments.  Add a d_off member to struct dirent and replace
getdirentries() with getdents(), thus immensely simplifying and
accelerating telldir/seekdir.  Build perl with -DBIG_TIME.

Bump the major on every single base library: the compat bits included
here are only good enough to make the transition; the T32 compat
option will be burned as soon as we've reached the new world are
are happy with the snapshots for all architectures.

DANGER: ABI incompatibility.  Updating to this kernel requires extra
work or you won't be able to login: install a snapshot instead.

Much assistance in fixing userland issues from deraadt@@ and tedu@@
and build assistance from todd@@ and otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.18 2013/04/24 09:52:54 nicm Exp $	*/
d173 1
a173 1
extern void	knote_processexit(struct process *);
@


1.18
log
@When a ucom(4) is removed, it frees the tty with ttyfree(). However if
anyone is waiting with kqueue their knotes may still have a reference to
the tty and later try to use it in the filt_tty* functions.

To avoid this, walk the knotes in ttyfree(), remove them from the tty's
list and invalidate them by setting kn_hook to NODEV. The filter
functions can then check for this and safely ignore the knotes.

ok tedu matthieu
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.17 2012/06/08 05:22:49 guenther Exp $	*/
d54 1
a54 1
	u_int		ident;		/* identifier for this event */
d58 1
a58 1
	int		data;
@


1.17
log
@Missed a comment in the proc->process change
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.16 2012/06/06 04:47:42 guenther Exp $	*/
d170 1
@


1.16
log
@EVFILT_SIGNAL and EVFILT_PROC events need to track the process they're
attached to and not just the thread, which can go away.

Problem observed by jsg@@; ok jsg@@ matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.15 2010/08/02 19:54:07 guenther Exp $	*/
d38 2
a39 2
#define EVFILT_PROC		(-5)	/* attached to struct proc */
#define EVFILT_SIGNAL		(-6)	/* attached to struct proc */
@


1.15
log
@Fix knote handling for exiting processes: when triggering a NOTE_EXIT
knote, remove it from the process's klist; after handling those,
remove and drop any remaining knotes from the process's klist.  Ban
attaching knotes to processes that have started exiting or attaching
them via the pid of a thread other than the main thread.

ok tedu@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.14 2010/07/28 21:44:41 nicm Exp $	*/
d150 1
a150 1
		struct		proc *p_proc;	/* proc pointer */
@


1.14
log
@Add a dummy kqueue filter similar to seltrue and use it for anything
using seltrue for poll. Based on code from NetBSD.

Also remove a stray duplicate lpt entry from loongson, from deraadt.

ok tedu deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.13 2008/11/05 09:20:17 dlg Exp $	*/
d172 1
@


1.13
log
@wrap use of KNOTE macro arguments in () to prevent potential strange
expansion.

requested by otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.12 2008/11/05 09:07:56 dlg Exp $	*/
d175 1
@


1.12
log
@wrap an if statement in a macro up with do { } while (0) so it is safe to
use in other if/else blocks.

"yeah" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.10 2005/12/19 19:09:20 millert Exp $	*/
d123 1
a123 1
						knote(list, hint); \
@


1.11
log
@add a new kevent filter type for timers.  this allows processes to create
a series of oneshot or periodic timers.  capped to a global limit.
from freebsd via brad.
ok art pedro
@
text
@d121 4
a124 1
#define KNOTE(list, hint)	if ((list) != NULL) knote(list, hint)
@


1.10
log
@Change sys/select.h -> sys/selinfo.h in comment.
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.9 2004/01/12 04:47:01 tedu Exp $	*/
d40 1
d42 1
a42 1
#define EVFILT_SYSCOUNT		6
@


1.9
log
@klist_invalidate to help clean up when the backend disappears, tested by mpf@@
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.8 2003/12/17 02:43:25 tedu Exp $	*/
d112 1
a112 1
 * programs which pull in <sys/proc.h> or <sys/select.h>.
@


1.8
log
@add NOTE_EOF (return on EOF) and NOTE_TRUNCATE (vnode was truncated)
to kqueue
from marius@@monkey  tested by brad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.7 2003/07/22 01:05:07 tedu Exp $	*/
d171 1
@


1.7
log
@void *, not caddr_t.  missed in last commit.  thanks Marco Peereboom
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.6 2003/06/27 16:20:58 nate Exp $	*/
d82 1
d94 1
@


1.6
log
@filter event that simulates seltrue(). From NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.5 2003/05/22 19:59:13 nate Exp $	*/
d147 1
a147 1
	caddr_t			kn_hook;
@


1.5
log
@filterops doesn't need to change, so we can make it const
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.4 2002/03/14 01:27:14 millert Exp $	*/
d168 1
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.3 2001/03/01 20:54:35 provos Exp $	*/
d146 1
a146 1
	struct			filterops *kn_fop;
@


1.3
log
@port kqueue changes from freebsd, plus all required openbsd glue.
okay deraadt@@, millert@@
from jlemon@@freebsd.org:
extend kqueue down to the device layer, backwards compatible approach
suggested by peter@@freebsd.org
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.2 2000/11/16 20:31:29 mickey Exp $	*/
d128 3
a130 3
	int	(*f_attach)	__P((struct knote *kn));
	void	(*f_detach)	__P((struct knote *kn));
	int	(*f_event)	__P((struct knote *kn, long hint));
d175 2
a176 2
int	kqueue __P((void));
int	kevent __P((int kq, const struct kevent *changelist, int nchanges,
d178 1
a178 1
		    const struct timespec *timeout));
@


1.3.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.3 2001/03/01 20:54:35 provos Exp $	*/
d128 3
a130 3
	int	(*f_attach)(struct knote *kn);
	void	(*f_detach)(struct knote *kn);
	int	(*f_event)(struct knote *kn, long hint);
d175 2
a176 2
int	kqueue(void);
int	kevent(int kq, const struct kevent *changelist, int nchanges,
d178 1
a178 1
		    const struct timespec *timeout);
@


1.3.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.3 2001/03/01 20:54:35 provos Exp $	*/
@


1.3.4.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d128 3
a130 3
	int	(*f_attach)(struct knote *kn);
	void	(*f_detach)(struct knote *kn);
	int	(*f_event)(struct knote *kn, long hint);
d175 2
a176 2
int	kqueue(void);
int	kevent(int kq, const struct kevent *changelist, int nchanges,
d178 1
a178 1
		    const struct timespec *timeout);
@


1.3.4.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: event.h,v 1.3.4.2 2002/03/28 14:52:01 niklas Exp $	*/
d146 1
a146 1
	const struct		filterops *kn_fop;
@


1.3.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a81 1
#define NOTE_EOF	0x0002			/* return on EOF */
a92 1
#define	NOTE_TRUNCATE   0x0080			/* vnode was truncated */
d147 1
a147 1
	void			*kn_hook;
a167 2
extern int	filt_seltrue(struct knote *kn, long hint);
extern void	klist_invalidate(struct klist *);
@


1.2
log
@rcsid; lots of bad tabs and spaces
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1999,2000 Jonathan Lemon <jlemon@@FreeBSD.org>
d28 1
a28 1
 *	$FreeBSD: src/sys/sys/event.h,v 1.7 2000/05/26 02:06:54 jake Exp $
d43 9
d79 5
d92 1
d147 1
@


1.1
log
@support kernel event queues, from FreeBSD by Jonathan Lemon,
okay art@@, millert@@
@
text
@d1 2
d97 1
a97 1
#include <sys/queue.h> 
d123 1
a123 1
	struct 			kevent kn_kevent;
d150 1
a150 1
extern int 	kqueue_register(struct kqueue *kq,
d153 1
a153 1
#else 	/* !_KERNEL */
d159 2
a160 2
int     kqueue __P((void));
int     kevent __P((int kq, const struct kevent *changelist, int nchanges,
@

