head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.6
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.4
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.16.0.2
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.14.0.8
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.10
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.6
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.4
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.26
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.24
	OPENBSD_5_0:1.9.0.22
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.20
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.18
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.14
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.6
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2016.09.12.19.41.20;	author guenther;	state Exp;
branches;
next	1.16;
commitid	rDEbJJHj0O4ilibK;

1.16
date	2016.03.07.18.33.10;	author jca;	state Exp;
branches;
next	1.15;
commitid	UkD0EyIbxWEALb1m;

1.15
date	2016.03.04.20.35.33;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	jDxUDT46Anc7o4sm;

1.14
date	2013.12.03.23.00.51;	author naddy;	state Exp;
branches;
next	1.13;

1.13
date	2013.10.29.02.44.52;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2013.10.22.06.51.54;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2013.04.29.17.06.20;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	2012.12.05.23.20.24;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.21.08.17.33;	author otto;	state Exp;
branches;
next	1.8;

1.8
date	2005.12.13.00.35.23;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.21.18.16.46;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.28.21;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.16.20.02.20;	author provos;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	97.01.27.23.21.21;	author deraadt;	state Exp;
branches
	1.3.14.1;
next	1.2;

1.2
date	96.03.03.12.12.16;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.29;	author deraadt;	state Exp;
branches;
next	;

1.3.14.1
date	2001.05.14.22.45.03;	author niklas;	state Exp;
branches;
next	1.3.14.2;

1.3.14.2
date	2002.03.28.14.52.01;	author niklas;	state Exp;
branches;
next	1.3.14.3;

1.3.14.3
date	2003.06.07.11.09.08;	author ho;	state Exp;
branches;
next	;

1.4.6.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	;


desc
@@


1.17
log
@More #include cleanup per POSIX:
 - <sys/types.h>: don't pull in <sys/select.h>
 - <sys/select.h>: don't pull in <sys/time.h>, but rather declare timeval
   and timespec locally
 - <sys/time.h>: *do* always pull in <sys/select.h>
 - <sys/socket.h>: declare timeval if __BSD_VISIBLE for struct splice

Ports testing and fixed by ajacoutot@@
ok deraadt@@ millert@@
@
text
@/*	$OpenBSD: select.h,v 1.16 2016/03/07 18:33:10 jca Exp $	*/

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)select.h	8.2 (Berkeley) 1/4/94
 */

#ifndef _SYS_SELECT_H_
#define	_SYS_SELECT_H_

#include <sys/types.h>

#ifndef _TIMEVAL_DECLARED
#define _TIMEVAL_DECLARED
struct timeval {
	time_t		tv_sec;		/* seconds */
	suseconds_t	tv_usec;	/* and microseconds */
};
#endif

#ifndef _TIMESPEC_DECLARED
#define _TIMESPEC_DECLARED
struct timespec {
	time_t	tv_sec;		/* seconds */
	long	tv_nsec;	/* and nanoseconds */
};
#endif

/*
 * Select uses bit masks of file descriptors in longs.  These macros
 * manipulate such bit fields (the filesystem macros use chars).
 * FD_SETSIZE may be defined by the user, but the default here should
 * be enough for most uses.
 */
#ifndef	FD_SETSIZE
#define	FD_SETSIZE	1024
#endif

/*
 * We don't want to pollute the namespace with select(2) internals.
 * Non-underscore versions are exposed later #if __BSD_VISIBLE
 */
#define	__NBBY	8				/* number of bits in a byte */
typedef uint32_t __fd_mask;
#define __NFDBITS ((unsigned)(sizeof(__fd_mask) * __NBBY)) /* bits per mask */
#define	__howmany(x, y)	(((x) + ((y) - 1)) / (y))

typedef	struct fd_set {
	__fd_mask fds_bits[__howmany(FD_SETSIZE, __NFDBITS)];
} fd_set;

static __inline void
__fd_set(int fd, fd_set *p)
{
	p->fds_bits[fd / __NFDBITS] |= (1U << (fd % __NFDBITS));
}
#define FD_SET(n, p)	__fd_set((n), (p))

static __inline void
__fd_clr(int fd, fd_set *p)
{
	p->fds_bits[fd / __NFDBITS] &= ~(1U << (fd % __NFDBITS));
}
#define FD_CLR(n, p)	__fd_clr((n), (p))

static __inline int
__fd_isset(int fd, const fd_set *p)
{
	return (p->fds_bits[fd / __NFDBITS] & (1U << (fd % __NFDBITS)));
}
#define FD_ISSET(n, p)	__fd_isset((n), (p))

#if __BSD_VISIBLE
#define	FD_COPY(f, t)	(void)(*(t) = *(f))
#endif
#define	FD_ZERO(p) do {					\
	fd_set *_p = (p);				\
	__size_t _n = __howmany(FD_SETSIZE, __NFDBITS);	\
							\
	while (_n > 0)					\
		_p->fds_bits[--_n] = 0;			\
} while (0)

#if __BSD_VISIBLE
#define	NBBY	__NBBY
#define fd_mask	__fd_mask
#define NFDBITS	__NFDBITS
#ifndef howmany
#define howmany(x, y)	__howmany(x, y)
#endif
#endif /* __BSD_VISIBLE */

#ifndef _KERNEL
#ifndef _SIGSET_T_DEFINED_
#define _SIGSET_T_DEFINED_
typedef unsigned int sigset_t;
#endif

#ifndef _SELECT_DEFINED_
#define _SELECT_DEFINED_
__BEGIN_DECLS
int	select(int, fd_set * __restrict, fd_set * __restrict,
	    fd_set * __restrict, struct timeval * __restrict);
int	pselect(int, fd_set * __restrict, fd_set * __restrict,
	    fd_set * __restrict, const struct timespec * __restrict,
	    const sigset_t * __restrict);
__END_DECLS
#endif
#endif /* !_KERNEL */

#endif /* !_SYS_SELECT_H_ */
@


1.16
log
@Make __fd_isset() take a const fd_set * param, to avoid upsetting c++

ok zhuk@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.15 2016/03/04 20:35:33 deraadt Exp $	*/
d37 1
a37 1
#include <sys/time.h>		/* for types and struct timeval */
d39 15
a53 10
/*
 * Currently, <sys/time.h> includes <sys/types.h> before defining timeval and
 * timespec, and <sys/types.h> in turn includes <sys/select.h>.  So even though
 * we include <sys/time.h> above, the compiler might not see the timeval and
 * timespec definitions until after this header's contents have been processed.
 *
 * As a workaround, we forward declare timeval and timespec as structs here.
 */
struct timeval;
struct timespec;
@


1.15
log
@The FD_SET/FD_CLR/FD_ISSET macros have always multi-evaluated the fd argument.
Wrap them around a static inline function which avoids the problem.
ok kettenis mikeb
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.14 2013/12/03 23:00:51 naddy Exp $	*/
d88 1
a88 1
__fd_isset(int fd, fd_set *p)
@


1.14
log
@Remove string.h dependency from sys/select.h; from FreeBSD, tweaked
by deraadt@@.  Sync man page.

ok guenther@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.13 2013/10/29 02:44:52 deraadt Exp $	*/
d73 20
a92 6
#define	FD_SET(n, p) \
	((p)->fds_bits[(n) / __NFDBITS] |= (1U << ((n) % __NFDBITS)))
#define	FD_CLR(n, p) \
	((p)->fds_bits[(n) / __NFDBITS] &= ~(1U << ((n) % __NFDBITS)))
#define	FD_ISSET(n, p) \
	((p)->fds_bits[(n) / __NFDBITS] & (1U << ((n) % __NFDBITS)))
@


1.13
log
@__fd_mask should be unsigned, and let's shift an unsigned bit.  Why
has this never mattered before??
ok guenther millert
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.12 2013/10/22 06:51:54 deraadt Exp $	*/
d79 11
a89 2
#define	FD_COPY(f, t)	memcpy(t, f, sizeof(*(f)))
#define	FD_ZERO(p)	memset(p, 0, sizeof(*(p)))
@


1.12
log
@kernel has memcpy/memset now
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.11 2013/04/29 17:06:20 matthew Exp $	*/
d65 1
a65 1
typedef int32_t	__fd_mask;
d74 1
a74 1
	((p)->fds_bits[(n) / __NFDBITS] |= (1 << ((n) % __NFDBITS)))
d76 1
a76 1
	((p)->fds_bits[(n) / __NFDBITS] &= ~(1 << ((n) % __NFDBITS)))
d78 1
a78 1
	((p)->fds_bits[(n) / __NFDBITS] & (1 << ((n) % __NFDBITS)))
@


1.11
log
@Extend P_SIGSUSPEND handling in userret() to properly restore the
sigmask even if there are no pending signals under the temporary
sigmask.

Refactor existing select() and poll() system calls to introduce the
pselect() and ppoll() system calls.

Add rthread wrappers for pselect() and ppoll().  While there, update
cancellation point comments to reflect recent fdatasync() addition.

Minor bumps for libc and librthread due to new symbols.

ok guenther, millert, deraadt, jmc
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.10 2012/12/05 23:20:24 deraadt Exp $	*/
a78 4
#ifdef _KERNEL
#define	FD_COPY(f, t)	bcopy(f, t, sizeof(*(f)))
#define	FD_ZERO(p)	bzero(p, sizeof(*(p)))
#else
a80 1
#endif
@


1.10
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.9 2006/03/21 08:17:33 otto Exp $	*/
d40 11
d97 5
d105 5
a109 2
struct timeval;
int	select(int, fd_set *, fd_set *, fd_set *, struct timeval *);
@


1.9
log
@x << long generates a lint warning, so silence it by casting __NFDBITS
to unsigned; this is a conseqeunce of changing size_t to u_long.
ok deraadt@@ millert@@ cloder@@
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.8 2005/12/13 00:35:23 millert Exp $	*/
a36 1
#include <sys/cdefs.h>
@


1.8
log
@First step in include files overhaul.  Use __FOO_VISIBLE (as defined
in sys/cdefs.h) instead of _FOO_SOURCE.  Also fix several namespace
pollution issues, including the byte order defines.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.7 2005/11/21 18:16:46 millert Exp $	*/
d56 1
a56 1
#define __NFDBITS (sizeof(__fd_mask) * __NBBY)	/* bits per mask */
@


1.7
log
@Move contents of sys/select.h to sys/selinfo.h in preparation for a
userland-visible sys/select.h.  Consistent with what Net and Free do.
OK deraadt@@, tested with full ports build by naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.6 2003/06/02 23:28:21 millert Exp $	*/
d37 2
a38 1
#include <sys/time.h>
d52 1
a52 1
 * Non-underscore versions are exposed later.
d77 1
a77 1
#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
d84 1
a84 1
#endif /* !_POSIX_SOURCE && !_XOPEN_SOURCE */
a88 1
#include <sys/cdefs.h>
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 2
/*	$OpenBSD: select.h,v 1.5 2002/03/14 01:27:14 millert Exp $	*/
/*	$NetBSD: select.h,v 1.10 1995/03/26 20:24:38 jtc Exp $	*/
d37 1
a37 1
#include <sys/event.h>			/* for struct klist */
d40 4
a43 2
 * Used to maintain information about processes that wish to be
 * notified when I/O becomes possible.
d45 3
a47 6
struct selinfo {
	pid_t	si_selpid;	/* process to be notified */
	struct	klist si_note;	/* kernel note list */
	short	si_flags;	/* see below */
};
#define	SI_COLL	0x0001		/* collision occurred */
d49 19
d69 15
a83 1
struct proc;
d85 8
a92 2
void	selrecord(struct proc *selector, struct selinfo *);
void	selwakeup(struct selinfo *);
d94 1
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.4 2000/11/16 20:02:20 provos Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@support kernel event queues, from FreeBSD by Jonathan Lemon,
okay art@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.3 1997/01/27 23:21:21 deraadt Exp $	*/
d58 2
a59 2
void	selrecord __P((struct proc *selector, struct selinfo *));
void	selwakeup __P((struct selinfo *));
@


1.4.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.4 2000/11/16 20:02:20 provos Exp $	*/
d58 2
a59 2
void	selrecord(struct proc *selector, struct selinfo *);
void	selwakeup(struct selinfo *);
@


1.3
log
@select subsystem si_pid becomes si_selpid, to not conflict against user/kernel siginfo si_pid #define
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.2 1996/03/03 12:12:16 niklas Exp $	*/
d42 2
d50 1
@


1.3.14.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.4 2000/11/16 20:02:20 provos Exp $	*/
a41 2
#include <sys/event.h>			/* for struct klist */

a47 1
	struct	klist si_note;	/* kernel note list */
@


1.3.14.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d58 2
a59 2
void	selrecord(struct proc *selector, struct selinfo *);
void	selwakeup(struct selinfo *);
@


1.3.14.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.3.14.2 2002/03/28 14:52:01 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d47 1
a47 1
	pid_t	si_pid;		/* process to be notified */
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
