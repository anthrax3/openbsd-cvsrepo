head	1.24;
access;
symbols
	OPENBSD_5_4:1.23.0.2
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.22.0.26
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.24
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.22
	OPENBSD_5_0:1.22.0.20
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.18
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.16
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.12
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.14
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.10
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.8
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.6
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.4
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.22.0.2
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.21.0.10
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.8
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.21.0.6
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.21.0.4
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.21.0.2
	OPENBSD_3_6_BASE:1.21
	SMP_SYNC_A:1.19
	SMP_SYNC_B:1.19
	OPENBSD_3_5:1.19.0.2
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.16.0.8
	OPENBSD_3_4_BASE:1.16
	UBC_SYNC_A:1.16
	OPENBSD_3_3:1.16.0.6
	OPENBSD_3_3_BASE:1.16
	OPENBSD_3_2:1.16.0.4
	OPENBSD_3_2_BASE:1.16
	OPENBSD_3_1:1.16.0.2
	OPENBSD_3_1_BASE:1.16
	UBC_SYNC_B:1.16
	UBC:1.13.0.2
	UBC_BASE:1.13
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.14
	OPENBSD_2_8:1.9.0.12
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.10
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.8
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.6
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.4
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.8.0.6
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.4
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.24
date	2013.10.17.08.02.20;	author deraadt;	state dead;
branches;
next	1.23;

1.23
date	2013.03.26.16.39.08;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2006.10.06.20.58.17;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2004.08.10.18.51.15;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2004.07.01.21.37.34;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	2004.02.27.17.36.16;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2004.02.19.23.45.08;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.28.01.39.40;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	2002.03.28.07.02.03;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.02.16.18.18.34;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2001.11.14.14.43.42;	author hugh;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2001.11.14.14.32.54;	author hugh;	state Exp;
branches;
next	1.11;

1.11
date	2001.08.19.17.37.02;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.22.14.11.00;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	98.04.25.06.28.14;	author niklas;	state Exp;
branches
	1.9.8.1;
next	1.8;

1.8
date	97.03.16.02.54.19;	author downsj;	state Exp;
branches;
next	1.7;

1.7
date	97.03.03.21.18.23;	author rahnds;	state Exp;
branches;
next	1.6;

1.6
date	96.12.23.02.42.40;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.06.25.20.48.58;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.05.22.12.07.34;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.05.06.11.31.26;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.12.11.41;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.26;	author deraadt;	state Exp;
branches;
next	;

1.9.8.1
date	2001.07.04.11.00.18;	author niklas;	state Exp;
branches;
next	1.9.8.2;

1.9.8.2
date	2001.10.31.03.30.30;	author nate;	state Exp;
branches;
next	1.9.8.3;

1.9.8.3
date	2001.12.05.01.02.40;	author niklas;	state Exp;
branches;
next	1.9.8.4;

1.9.8.4
date	2002.03.06.02.17.13;	author niklas;	state Exp;
branches;
next	1.9.8.5;

1.9.8.5
date	2002.03.28.14.52.01;	author niklas;	state Exp;
branches;
next	1.9.8.6;

1.9.8.6
date	2003.03.28.00.41.30;	author niklas;	state Exp;
branches;
next	1.9.8.7;

1.9.8.7
date	2004.02.19.11.01.32;	author niklas;	state Exp;
branches;
next	1.9.8.8;

1.9.8.8
date	2004.06.05.23.13.09;	author niklas;	state Exp;
branches;
next	;

1.13.2.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Remove support for a.out and ecoff.  We only do elf now.
ok miod
@
text
@/*	$OpenBSD: exec_aout.h,v 1.23 2013/03/26 16:39:08 tedu Exp $	*/
/*	$NetBSD: exec_aout.h,v 1.15 1996/05/18 17:20:54 christos Exp $	*/

/*
 * Copyright (c) 1993, 1994 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef N_PAGSIZ
#define	N_PAGSIZ(ex)	(__LDPGSZ)
#endif

/*
 * Header prepended to each a.out file.
 * only manipulate the a_midmag field via the
 * N_SETMAGIC/N_GET{MAGIC,MID,FLAG} macros below.
 */
struct exec {
	u_int32_t	a_midmag;	/* htonl(flags<<26|mid<<16|magic) */
	u_int32_t	a_text;		/* text segment size */
	u_int32_t	a_data;		/* initialized data size */
	u_int32_t	a_bss;		/* uninitialized data size */
	u_int32_t	a_syms;		/* symbol table size */
	u_int32_t	a_entry;	/* entry point */
	u_int32_t	a_trsize;	/* text relocation size */
	u_int32_t	a_drsize;	/* data relocation size */
};

/* a_magic */
#define	OMAGIC		0407	/* old impure format */
#define	NMAGIC		0410	/* read-only text */
#define	ZMAGIC		0413	/* demand load format */
#define	QMAGIC		0314	/* "compact" demand load format; deprecated */

/*
 * a_mid - keep sorted in numerical order for sanity's sake
 * ensure that: 0 < mid < 0x3ff
 */
#define	MID_ZERO	0	/* unknown - implementation dependent */
#define	MID_SUN010	1	/* sun 68010/68020 binary */
#define	MID_SUN020	2	/* sun 68020-only binary */
#define	MID_PC386	100	/* 386 PC binary. (so quoth BFD) */
#define	MID_ROMPAOS	104	/* old IBM RT */
#define	MID_I386	134	/* i386 BSD binary */
#define	MID_M68K	135	/* m68k BSD binary with 8K page sizes */
#define	MID_M68K4K	136	/* DO NOT USE: m68k BSD binary with 4K page sizes */
#define	MID_NS32532	137	/* ns32532 */
#define	MID_SPARC	138	/* sparc */
#define	MID_PMAX	139	/* pmax */
#define	MID_VAX1K	140	/* vax 1k page size */
#define	MID_ALPHA	141	/* Alpha BSD binary */
#define	MID_MIPS	142	/* big-endian MIPS */
#define	MID_ARM6	143	/* ARM6 */
#define	MID_SH3		145	/* SH3 */
#define	MID_POWERPC	149	/* big-endian PowerPC */
#define	MID_VAX		150	/* vax */
#define	MID_SPARC64	151	/* LP64 sparc */
#define MID_MIPS2	152	/* MIPS2 */
#define	MID_M88K	153	/* m88k BSD binary */ 
#define	MID_HPPA	154	/* hppa */
#define	MID_AMD64	157	/* AMD64 */
#define	MID_MIPS64	158	/* big-endian MIPS64 */
#define	MID_HP200	200	/* hp200 (68010) BSD binary */
#define	MID_HP300	300	/* hp300 (68020+68881) BSD binary */
#define	MID_HPUX	0x20C	/* hp200/300 HP-UX binary */
#define	MID_HPUX800	0x20B	/* hp800 HP-UX binary pa1.0 */
#define	MID_HPPA11	0x210	/* hp700 HP-UX binary pa1.1 */
#define	MID_HPPA20	0x214	/* hp700 HP-UX binary pa2.0 */

/*
 * a_flags
 */
#define EX_DYNAMIC	0x20
#define EX_PIC		0x10
#define EX_DPMASK	0x30
/*
 * Interpretation of the (a_flags & EX_DPMASK) bits:
 *
 *	00		traditional executable or object file
 *	01		object file contains PIC code (set by `as -k')
 *	10		dynamic executable
 *	11		position independent executable image
 * 			(eg. a shared library)
 *
 */

/*
 * The a.out structure's a_midmag field is a network-byteorder encoding
 * of this int
 *	FFFFFFmmmmmmmmmmMMMMMMMMMMMMMMMM
 * Where `F' is 6 bits of flag like EX_DYNAMIC,
 *       `m' is 10 bits of machine-id like MID_I386, and
 *       `M' is 16 bits worth of magic number, ie. ZMAGIC.
 * The macros below will set/get the needed fields.
 */
#define	N_GETMAGIC(ex) \
    ( (((ex).a_midmag)&0xffff0000) ? (ntohl(((ex).a_midmag))&0xffff) : ((ex).a_midmag))
#define	N_GETMAGIC2(ex) \
    ( (((ex).a_midmag)&0xffff0000) ? (ntohl(((ex).a_midmag))&0xffff) : \
    (((ex).a_midmag) | 0x10000) )
#define	N_GETMID(ex) \
    ( (((ex).a_midmag)&0xffff0000) ? ((ntohl(((ex).a_midmag))>>16)&0x03ff) : MID_ZERO )
#define	N_GETFLAG(ex) \
    ( (((ex).a_midmag)&0xffff0000) ? ((ntohl(((ex).a_midmag))>>26)&0x3f) : 0 )
#define	N_SETMAGIC(ex,mag,mid,flag) \
    ( (ex).a_midmag = htonl( (((flag)&0x3f)<<26) | (((mid)&0x03ff)<<16) | \
    (((mag)&0xffff)) ) )

#define	N_ALIGN(ex,x) \
	(N_GETMAGIC(ex) == ZMAGIC || N_GETMAGIC(ex) == QMAGIC ? \
	((x) + __LDPGSZ - 1) & ~(__LDPGSZ - 1) : (x))

/* Valid magic number check. */
#define	N_BADMAG(ex) \
	(N_GETMAGIC(ex) != NMAGIC && N_GETMAGIC(ex) != OMAGIC && \
	N_GETMAGIC(ex) != ZMAGIC && N_GETMAGIC(ex) != QMAGIC)

/* Address of the bottom of the text segment. */
#define	N_TXTADDR(ex)	(N_GETMAGIC2(ex) == (ZMAGIC|0x10000) ? 0 : __LDPGSZ)

/* Address of the bottom of the data segment. */
#define	N_DATADDR(ex) \
	(N_GETMAGIC(ex) == OMAGIC ? N_TXTADDR(ex) + (ex).a_text : \
	(N_TXTADDR(ex) + (ex).a_text + __LDPGSZ - 1) & ~(__LDPGSZ - 1))

/* Address of the bottom of the bss segment. */
#define	N_BSSADDR(ex) \
	(N_DATADDR(ex) + (ex).a_data)

/* Text segment offset. */
#define	N_TXTOFF(ex) \
	( N_GETMAGIC2(ex)==ZMAGIC || N_GETMAGIC2(ex)==(QMAGIC|0x10000) ? \
	0 : (N_GETMAGIC2(ex)==(ZMAGIC|0x10000) ? __LDPGSZ : \
	sizeof(struct exec)) )

/* Data segment offset. */
#define	N_DATOFF(ex) \
	N_ALIGN(ex, N_TXTOFF(ex) + (ex).a_text)

/* Text relocation table offset. */
#define	N_TRELOFF(ex) \
	(N_DATOFF(ex) + (ex).a_data)

/* Data relocation table offset. */
#define	N_DRELOFF(ex) \
	(N_TRELOFF(ex) + (ex).a_trsize)

/* Symbol table offset. */
#define	N_SYMOFF(ex) \
	(N_DRELOFF(ex) + (ex).a_drsize)

/* String table offset. */
#define	N_STROFF(ex) \
	(N_SYMOFF(ex) + (ex).a_syms)


#ifdef _KERNEL

/* the "a.out" format's entry in the exec switch */
int	exec_aout_makecmds(struct proc *, struct exec_package *);

/* functions which prepare various a.out executable types */
/*
 * MI portion
 */
int	exec_aout_prep_zmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_nmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_omagic(struct proc *, struct exec_package *);

/*
 * MD portion
 */
#if !defined(cpu_exec_aout_makecmds)
int cpu_exec_aout_makecmds(struct proc *, struct exec_package *);
#endif

#endif /* _KERNEL */
@


1.23
log
@remove the old_?magic aout exec functions which are never used.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.22 2006/10/06 20:58:17 miod Exp $	*/
@


1.22
log
@Early bits for a 32-bit SuperH toolchain, currently for little-endian
systems only; more work is necessary in ld land.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.21 2004/08/10 18:51:15 deraadt Exp $	*/
a193 5

/* For compatibility modules */
int	exec_aout_prep_oldzmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_oldnmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_oldomagic(struct proc *, struct exec_package *);
@


1.21
log
@big-endian MIPS64 mid
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.20 2004/07/01 21:37:34 mickey Exp $	*/
d79 1
@


1.20
log
@two more hppa mids
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.19 2004/02/27 17:36:16 deraadt Exp $	*/
d86 1
@


1.19
log
@change amd64's MACHINE_ARCH from x86_64 to amd64.  There are many many
reasons for this, quite a few of them technical, and not all of them
in response to Intel's broken ia32e crud.  The gcc toolchain stays at
x86_64 for now.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.18 2004/02/19 23:45:08 deraadt Exp $	*/
d89 3
a91 1
#define	MID_HPUX800	0x20B	/* hp800 HP-UX binary */
@


1.18
log
@move MID_X86_64; kettenis@@chello.nl
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.17 2004/01/28 01:39:40 mickey Exp $	*/
d85 1
a85 1
#define	MID_X86_64	157	/* AMD x86-64 */
@


1.17
log
@an amd64 arch support.
hacked by art@@ from netbsd sources and then later debugged
by me into the shape where it can host itself.
no bootloader yet as needs redoing from the
recent advanced i386 sources (anyone? ;)
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.16 2002/03/28 07:02:03 deraadt Exp $	*/
d82 1
a82 1
#define	MID_X86_64	152	/* AMD x86-64 */
d85 1
@


1.16
log
@HPPA mid (needed for core files)
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.15 2002/03/14 01:27:14 millert Exp $	*/
d82 1
@


1.15
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.14 2002/02/16 18:18:34 millert Exp $	*/
d83 1
@


1.14
log
@Don't prototype functions if they are really just macros.
cpu_exec_aout_makecmds() may be #defined to ENOEXEC
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.13 2001/11/14 14:43:42 hugh Exp $	*/
d178 1
a178 1
int	exec_aout_makecmds __P((struct proc *, struct exec_package *));
d184 3
a186 3
int	exec_aout_prep_zmagic __P((struct proc *, struct exec_package *));
int	exec_aout_prep_nmagic __P((struct proc *, struct exec_package *));
int	exec_aout_prep_omagic __P((struct proc *, struct exec_package *));
d189 3
a191 3
int	exec_aout_prep_oldzmagic __P((struct proc *, struct exec_package *));
int	exec_aout_prep_oldnmagic __P((struct proc *, struct exec_package *));
int	exec_aout_prep_oldomagic __P((struct proc *, struct exec_package *));
d197 1
a197 1
int cpu_exec_aout_makecmds __P((struct proc *, struct exec_package *));
@


1.13
log
@Harmonize tabs.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.12 2001/11/14 14:32:54 hugh Exp $	*/
d196 1
d198 1
@


1.13.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.13 2001/11/14 14:43:42 hugh Exp $	*/
a82 1
#define	MID_HPPA	154	/* hppa */
d178 1
a178 1
int	exec_aout_makecmds(struct proc *, struct exec_package *);
d184 3
a186 3
int	exec_aout_prep_zmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_nmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_omagic(struct proc *, struct exec_package *);
d189 3
a191 3
int	exec_aout_prep_oldzmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_oldnmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_oldomagic(struct proc *, struct exec_package *);
d196 1
a196 3
#if !defined(cpu_exec_aout_makecmds)
int cpu_exec_aout_makecmds(struct proc *, struct exec_package *);
#endif
@


1.12
log
@New MID for Vax bins with 4k logical page size.
Rename old MID for use in compat.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.11 2001/08/19 17:37:02 art Exp $	*/
d68 1
a68 1
#define MID_ROMPAOS	104	/* old IBM RT */
d79 1
a79 1
#define MID_POWERPC	149	/* big-endian PowerPC */
d81 2
a82 2
#define MID_SPARC64	151	/* LP64 sparc */
#define MID_M88K	153	/* m88k BSD binary */ 
@


1.11
log
@fix some MIDs, add powerpc and sparc64.
miod@@ oked m88k change (so that we match NetBSD).
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.10 2001/06/22 14:11:00 deraadt Exp $	*/
d75 1
a75 1
#define	MID_VAX		140	/* vax */
d80 1
@


1.10
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.9 1998/04/25 06:28:14 niklas Exp $	*/
d79 3
a81 2
#define MID_ROMP	149	/* IBM RT */
#define MID_M88K	151	/* m88k BSD binary */ 
@


1.9
log
@a.out fields are 32 bits, this change eases cross-compilation from alpha
to 32-bit systems
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.8 1997/03/16 02:54:19 downsj Exp $	*/
d80 1
a80 1
#define MID_M88K        151     /* m88k BSD binary */ 
d84 1
a84 1
#define	MID_HPUX800     0x20B   /* hp800 HP-UX binary */
@


1.9.8.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.9 1998/04/25 06:28:14 niklas Exp $	*/
d80 1
a80 1
#define MID_M88K	151	/* m88k BSD binary */ 
d84 1
a84 1
#define	MID_HPUX800	0x20B	/* hp800 HP-UX binary */
@


1.9.8.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.9.8.1 2001/07/04 11:00:18 niklas Exp $	*/
d79 2
a80 3
#define MID_POWERPC	149	/* big-endian PowerPC */
#define MID_SPARC64	151	/* LP64 sparc */
#define MID_M88K	153	/* m88k BSD binary */ 
@


1.9.8.3
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d68 1
a68 1
#define	MID_ROMPAOS	104	/* old IBM RT */
d75 1
a75 1
#define	MID_VAX1K	140	/* vax 1k page size */
d79 3
a81 4
#define	MID_POWERPC	149	/* big-endian PowerPC */
#define	MID_VAX		150	/* vax */
#define	MID_SPARC64	151	/* LP64 sparc */
#define	MID_M88K	153	/* m88k BSD binary */ 
@


1.9.8.4
log
@Merge in trunk
@
text
@a195 1
#if !defined(cpu_exec_aout_makecmds)
a196 1
#endif
@


1.9.8.5
log
@Merge in -current from roughly a week ago
@
text
@d178 1
a178 1
int	exec_aout_makecmds(struct proc *, struct exec_package *);
d184 3
a186 3
int	exec_aout_prep_zmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_nmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_omagic(struct proc *, struct exec_package *);
d189 3
a191 3
int	exec_aout_prep_oldzmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_oldnmagic(struct proc *, struct exec_package *);
int	exec_aout_prep_oldomagic(struct proc *, struct exec_package *);
d197 1
a197 1
int cpu_exec_aout_makecmds(struct proc *, struct exec_package *);
@


1.9.8.6
log
@Sync the SMP branch with 3.3
@
text
@a82 1
#define	MID_HPPA	154	/* hppa */
@


1.9.8.7
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a81 1
#define	MID_X86_64	152	/* AMD x86-64 */
@


1.9.8.8
log
@Merge with the trunk
@
text
@d82 1
a82 1
#define MID_MIPS2	152	/* MIPS2 */
a84 1
#define	MID_AMD64	157	/* AMD64 */
@


1.8
log
@Slight rearrangement, addition of ROMP values.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.7 1997/03/03 21:18:23 rahnds Exp $	*/
d44 8
a51 8
	u_long	a_midmag;	/* htonl(flags<<26 | mid<<16 | magic) */
	u_long	a_text;		/* text segment size */
	u_long	a_data;		/* initialized data size */
	u_long	a_bss;		/* uninitialized data size */
	u_long	a_syms;		/* symbol table size */
	u_long	a_entry;	/* entry point */
	u_long	a_trsize;	/* text relocation size */
	u_long	a_drsize;	/* data relocation size */
@


1.7
log
@add m88k to MID list for a.out.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.6 1996/12/23 02:42:40 deraadt Exp $	*/
d68 1
a68 1
#define	MID_HP200	200	/* hp200 (68010) BSD binary */
d79 3
a82 1
#define MID_M88K        151     /* m88k BSD binary */ 
@


1.6
log
@use _{NLIST,KERN}_DO_{AOUT,ELF,ECOFF} to select binary types
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.5 1996/06/25 20:48:58 deraadt Exp $	*/
d80 1
@


1.5
log
@do not use MID_M68K4K
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.4 1996/05/22 12:07:34 deraadt Exp $	*/
a181 1
int	exec_aout_setup_stack __P((struct proc *, struct exec_package *));
@


1.4
log
@compat aout loaders change
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.h,v 1.2 1996/03/03 12:11:41 niklas Exp $	*/
d71 1
a71 1
#define	MID_M68K4K	136	/* m68k BSD binary with 4K page sizes */
@


1.3
log
@proto cpu_exec_aout_prep_oldzmagic()
@
text
@d2 1
a2 1
/*	$NetBSD: exec_aout.h,v 1.14 1996/05/03 20:04:14 christos Exp $	*/
d184 5
a192 1
int cpu_exec_aout_prep_oldzmagic __P((struct proc *, struct exec_package *));
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: exec_aout.h,v 1.13 1996/02/09 18:25:10 christos Exp $	*/
d187 2
a188 1
int	cpu_exec_aout_makecmds __P((struct proc *, struct exec_package *));
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: exec_aout.h,v 1.12 1995/08/18 15:32:58 pk Exp $	*/
d176 3
d183 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
