head	1.8;
access;
symbols
	OPENBSD_5_4:1.7.0.48
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.46
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.44
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.42
	OPENBSD_5_0:1.7.0.40
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.38
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.36
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.32
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.34
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.30
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.28
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.26
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.24
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.22
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.20
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.18
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.16
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.14
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.12
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.10
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.8
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.4
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.18
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.16
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.14
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.12
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.10
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2013.10.17.08.02.20;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.22.14.11.00;	author deraadt;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2000.08.31.14.49.07;	author ericj;	state Exp;
branches;
next	1.4;

1.4
date	96.05.22.12.05.20;	author deraadt;	state Exp;
branches
	1.4.16.1;
next	1.3;

1.3
date	96.04.18.21.40.54;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.12.11.42;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.26;	author deraadt;	state Exp;
branches;
next	;

1.4.16.1
date	2001.05.14.22.45.01;	author niklas;	state Exp;
branches;
next	1.4.16.2;

1.4.16.2
date	2001.07.04.11.00.18;	author niklas;	state Exp;
branches;
next	1.4.16.3;

1.4.16.3
date	2002.03.28.14.52.01;	author niklas;	state Exp;
branches;
next	;

1.6.4.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Remove support for a.out and ecoff.  We only do elf now.
ok miod
@
text
@/*	$OpenBSD: exec_ecoff.h,v 1.7 2002/03/14 01:27:14 millert Exp $	*/
/*	$NetBSD: exec_ecoff.h,v 1.9 1996/05/09 23:42:08 cgd Exp $	*/

/*
 * Copyright (c) 1994 Adam Glass
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Adam Glass.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef	_SYS_EXEC_ECOFF_H_
#define	_SYS_EXEC_ECOFF_H_

#include <machine/ecoff_machdep.h>

struct ecoff_filehdr {
	u_short f_magic;	/* magic number */
	u_short f_nscns;	/* # of sections */
	u_int   f_timdat;	/* time and date stamp */
	u_long  f_symptr;	/* file offset of symbol table */
	u_int   f_nsyms;	/* # of symbol table entries */
	u_short f_opthdr;	/* sizeof the optional header */
	u_short f_flags;	/* flags??? */
};

struct ecoff_aouthdr {
	u_short magic;
	u_short vstamp;
	ECOFF_PAD
	u_long  tsize;
	u_long  dsize;
	u_long  bsize;
	u_long  entry;
	u_long  text_start;
	u_long  data_start;
	u_long  bss_start;
	ECOFF_MACHDEP;
};

struct ecoff_scnhdr {		/* needed for size info */
	char	s_name[8];	/* name */
	u_long  s_paddr;	/* physical addr? for ROMing?*/
	u_long  s_vaddr;	/* virtual addr? */
	u_long  s_size;		/* size */
	u_long  s_scnptr;	/* file offset of raw data */
	u_long  s_relptr;	/* file offset of reloc data */
	u_long  s_lnnoptr;	/* file offset of line data */
	u_short s_nreloc;	/* # of relocation entries */
	u_short s_nlnno;	/* # of line entries */
	u_int   s_flags;	/* flags */
};

struct ecoff_exechdr {
	struct ecoff_filehdr f;
	struct ecoff_aouthdr a;
};

#define ECOFF_HDR_SIZE (sizeof(struct ecoff_exechdr))

#define ECOFF_OMAGIC 0407
#define ECOFF_NMAGIC 0410
#define ECOFF_ZMAGIC 0413

#define ECOFF_ROUND(value, by) \
	(((value) + (by) - 1) & ~((by) - 1))

#define ECOFF_BLOCK_ALIGN(ep, value) \
	((ep)->a.magic == ECOFF_ZMAGIC ? ECOFF_ROUND((value), ECOFF_LDPGSZ) : \
	    (value))

#define ECOFF_TXTOFF(ep) \
	((ep)->a.magic == ECOFF_ZMAGIC ? 0 : \
	    ECOFF_ROUND(ECOFF_HDR_SIZE + (ep)->f.f_nscns * \
	    sizeof(struct ecoff_scnhdr), ECOFF_SEGMENT_ALIGNMENT(ep)))

#define ECOFF_DATOFF(ep) \
	(ECOFF_BLOCK_ALIGN((ep), ECOFF_TXTOFF(ep) + (ep)->a.tsize))

#define ECOFF_SEGMENT_ALIGN(ep, value) \
	(ECOFF_ROUND((value), ((ep)->a.magic == ECOFF_ZMAGIC ? ECOFF_LDPGSZ : \
	ECOFF_SEGMENT_ALIGNMENT(ep))))

#ifdef _KERNEL
int	exec_ecoff_makecmds(struct proc *, struct exec_package *);
int	cpu_exec_ecoff_hook(struct proc *, struct exec_package *);
int	exec_ecoff_prep_omagic(struct proc *, struct exec_package *);
int	exec_ecoff_prep_nmagic(struct proc *, struct exec_package *);
int	exec_ecoff_prep_zmagic(struct proc *, struct exec_package *);
#endif /* _KERNEL */
#endif /* !_SYS_EXEC_ECOFF_H_ */
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.h,v 1.6 2001/06/22 14:11:00 deraadt Exp $	*/
@


1.6
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.h,v 1.5 2000/08/31 14:49:07 ericj Exp $	*/
d107 5
a111 5
int	exec_ecoff_makecmds __P((struct proc *, struct exec_package *));
int	cpu_exec_ecoff_hook __P((struct proc *, struct exec_package *));
int	exec_ecoff_prep_omagic __P((struct proc *, struct exec_package *));
int	exec_ecoff_prep_nmagic __P((struct proc *, struct exec_package *));
int	exec_ecoff_prep_zmagic __P((struct proc *, struct exec_package *));
@


1.6.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.h,v 1.6 2001/06/22 14:11:00 deraadt Exp $	*/
d107 5
a111 5
int	exec_ecoff_makecmds(struct proc *, struct exec_package *);
int	cpu_exec_ecoff_hook(struct proc *, struct exec_package *);
int	exec_ecoff_prep_omagic(struct proc *, struct exec_package *);
int	exec_ecoff_prep_nmagic(struct proc *, struct exec_package *);
int	exec_ecoff_prep_zmagic(struct proc *, struct exec_package *);
@


1.5
log
@
re-org ecoff headers. move some declarations from exec_ecoff.c to exec_ecoff.h
so they can be used for osf1 emul.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.h,v 1.4 1996/05/22 12:05:20 deraadt Exp $	*/
d88 1
a88 1
        (((value) + (by) - 1) & ~((by) - 1))
d91 2
a92 2
        ((ep)->a.magic == ECOFF_ZMAGIC ? ECOFF_ROUND((value), ECOFF_LDPGSZ) : \
	 (value))
d95 3
a97 3
        ((ep)->a.magic == ECOFF_ZMAGIC ? 0 : \
	 ECOFF_ROUND(ECOFF_HDR_SIZE + (ep)->f.f_nscns * \
		     sizeof(struct ecoff_scnhdr), ECOFF_SEGMENT_ALIGNMENT(ep)))
d100 1
a100 1
        (ECOFF_BLOCK_ALIGN((ep), ECOFF_TXTOFF(ep) + (ep)->a.tsize))
d103 2
a104 2
        (ECOFF_ROUND((value), ((ep)->a.magic == ECOFF_ZMAGIC ? ECOFF_LDPGSZ : \
         ECOFF_SEGMENT_ALIGNMENT(ep))))
d109 3
a111 3
int     exec_ecoff_prep_omagic __P((struct proc *, struct exec_package *));
int     exec_ecoff_prep_nmagic __P((struct proc *, struct exec_package *));
int     exec_ecoff_prep_zmagic __P((struct proc *, struct exec_package *));
@


1.4
log
@fiddling
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.h,v 1.2 1996/03/03 12:11:42 niklas Exp $	*/
d37 1
a37 1
#include <machine/ecoff.h>
d109 3
@


1.4.16.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.h,v 1.5 2000/08/31 14:49:07 ericj Exp $	*/
d37 1
a37 1
#include <machine/ecoff_machdep.h>
a108 3
int     exec_ecoff_prep_omagic __P((struct proc *, struct exec_package *));
int     exec_ecoff_prep_nmagic __P((struct proc *, struct exec_package *));
int     exec_ecoff_prep_zmagic __P((struct proc *, struct exec_package *));
@


1.4.16.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.h,v 1.4.16.1 2001/05/14 22:45:01 niklas Exp $	*/
d88 1
a88 1
	(((value) + (by) - 1) & ~((by) - 1))
d91 2
a92 2
	((ep)->a.magic == ECOFF_ZMAGIC ? ECOFF_ROUND((value), ECOFF_LDPGSZ) : \
	    (value))
d95 3
a97 3
	((ep)->a.magic == ECOFF_ZMAGIC ? 0 : \
	    ECOFF_ROUND(ECOFF_HDR_SIZE + (ep)->f.f_nscns * \
	    sizeof(struct ecoff_scnhdr), ECOFF_SEGMENT_ALIGNMENT(ep)))
d100 1
a100 1
	(ECOFF_BLOCK_ALIGN((ep), ECOFF_TXTOFF(ep) + (ep)->a.tsize))
d103 2
a104 2
	(ECOFF_ROUND((value), ((ep)->a.magic == ECOFF_ZMAGIC ? ECOFF_LDPGSZ : \
	ECOFF_SEGMENT_ALIGNMENT(ep))))
d109 3
a111 3
int	exec_ecoff_prep_omagic __P((struct proc *, struct exec_package *));
int	exec_ecoff_prep_nmagic __P((struct proc *, struct exec_package *));
int	exec_ecoff_prep_zmagic __P((struct proc *, struct exec_package *));
@


1.4.16.3
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d107 5
a111 5
int	exec_ecoff_makecmds(struct proc *, struct exec_package *);
int	cpu_exec_ecoff_hook(struct proc *, struct exec_package *);
int	exec_ecoff_prep_omagic(struct proc *, struct exec_package *);
int	exec_ecoff_prep_nmagic(struct proc *, struct exec_package *);
int	exec_ecoff_prep_zmagic(struct proc *, struct exec_package *);
@


1.3
log
@Merge of NetBSD 960317
@
text
@d2 1
a2 1
/*	$NetBSD: exec_ecoff.h,v 1.8 1996/03/07 14:29:44 christos Exp $	*/
d40 7
a46 7
	u_short ef_magic;	/* magic number */
	u_short ef_nsecs;	/* # of sections */
	u_int   ef_timestamp;	/* time and date stamp */
	u_long  ef_symptr;	/* file offset of symbol table */
	u_int   ef_syms;	/* # of symbol table entries */
	u_short ef_opthdr;	/* sizeof the optional header */
	u_short ef_flags;	/* flags??? */
d50 2
a51 2
	u_short ea_magic;
	u_short ea_vstamp;
d53 7
a59 7
	u_long  ea_tsize;
	u_long  ea_dsize;
	u_long  ea_bsize;
	u_long  ea_entry;
	u_long  ea_text_start;
	u_long  ea_data_start;
	u_long  ea_bss_start;
d64 10
a73 10
	char	es_name[8];	/* name */
	u_long  es_physaddr;	/* physical addr? for ROMing?*/
	u_long  es_virtaddr;	/* virtual addr? */
	u_long  es_size;	/* size */
	u_long  es_raw_offset;	/* file offset of raw data */
	u_long  es_reloc_offset; /* file offset of reloc data */
	u_long  es_line_offset;	/* file offset of line data */
	u_short es_nreloc;	/* # of relocation entries */
	u_short es_nline;	/* # of line entries */
	u_int   es_flags;	/* flags */
d76 6
a81 2
#define ECOFF_HDR_SIZE (sizeof(struct ecoff_filehdr) + \
			sizeof(struct ecoff_aouthdr))
d88 1
a88 1
        (((value) + by - 1) & ~(by - 1))
d90 15
a104 15
#define ECOFF_BLOCK_ALIGN(eap, value) \
        ((eap)->ea_magic == ECOFF_ZMAGIC ? ECOFF_ROUND(value, ECOFF_LDPGSZ) : \
	 value)

#define ECOFF_TXTOFF(efp, eap) \
        ((eap)->ea_magic == ECOFF_ZMAGIC ? 0 : \
	 ECOFF_ROUND(ECOFF_HDR_SIZE + (efp)->ef_nsecs * \
		     sizeof(struct ecoff_scnhdr),ECOFF_SEGMENT_ALIGNMENT(eap)))

#define ECOFF_DATOFF(efp, eap) \
        (ECOFF_BLOCK_ALIGN(eap, ECOFF_TXTOFF(efp, eap) + (eap)->ea_tsize))

#define ECOFF_SEGMENT_ALIGN(eap, value) \
        (ECOFF_ROUND(value, ((eap)->ea_magic == ECOFF_ZMAGIC ? ECOFF_LDPGSZ : \
         ECOFF_SEGMENT_ALIGNMENT(eap))))
d108 1
a108 2
int	cpu_exec_ecoff_hook __P((struct proc *, struct exec_package *,
				 struct ecoff_aouthdr *));
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: exec_ecoff.h,v 1.7 1995/06/16 02:07:56 mellon Exp $	*/
d104 2
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
