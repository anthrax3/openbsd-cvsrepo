head	1.125;
access;
symbols
	OPENBSD_6_2:1.125.0.4
	OPENBSD_6_2_BASE:1.125
	OPENBSD_6_1:1.124.0.4
	OPENBSD_6_1_BASE:1.124
	OPENBSD_6_0:1.122.0.2
	OPENBSD_6_0_BASE:1.122
	OPENBSD_5_9:1.121.0.2
	OPENBSD_5_9_BASE:1.121
	OPENBSD_5_8:1.118.0.4
	OPENBSD_5_8_BASE:1.118
	OPENBSD_5_7:1.115.0.2
	OPENBSD_5_7_BASE:1.115
	OPENBSD_5_6:1.107.0.4
	OPENBSD_5_6_BASE:1.107
	OPENBSD_5_5:1.105.0.4
	OPENBSD_5_5_BASE:1.105
	OPENBSD_5_4:1.104.0.2
	OPENBSD_5_4_BASE:1.104
	OPENBSD_5_3:1.101.0.2
	OPENBSD_5_3_BASE:1.101
	OPENBSD_5_2:1.96.0.2
	OPENBSD_5_2_BASE:1.96
	OPENBSD_5_1_BASE:1.94
	OPENBSD_5_1:1.94.0.2
	OPENBSD_5_0:1.92.0.2
	OPENBSD_5_0_BASE:1.92
	OPENBSD_4_9:1.89.0.2
	OPENBSD_4_9_BASE:1.89
	OPENBSD_4_8:1.88.0.2
	OPENBSD_4_8_BASE:1.88
	OPENBSD_4_7:1.86.0.2
	OPENBSD_4_7_BASE:1.86
	OPENBSD_4_6:1.84.0.4
	OPENBSD_4_6_BASE:1.84
	OPENBSD_4_5:1.82.0.2
	OPENBSD_4_5_BASE:1.82
	OPENBSD_4_4:1.75.0.2
	OPENBSD_4_4_BASE:1.75
	OPENBSD_4_3:1.74.0.2
	OPENBSD_4_3_BASE:1.74
	OPENBSD_4_2:1.72.0.2
	OPENBSD_4_2_BASE:1.72
	OPENBSD_4_1:1.69.0.2
	OPENBSD_4_1_BASE:1.69
	OPENBSD_4_0:1.68.0.2
	OPENBSD_4_0_BASE:1.68
	OPENBSD_3_9:1.66.0.2
	OPENBSD_3_9_BASE:1.66
	OPENBSD_3_8:1.63.0.2
	OPENBSD_3_8_BASE:1.63
	OPENBSD_3_7:1.61.0.2
	OPENBSD_3_7_BASE:1.61
	OPENBSD_3_6:1.58.0.2
	OPENBSD_3_6_BASE:1.58
	SMP_SYNC_A:1.55
	SMP_SYNC_B:1.55
	OPENBSD_3_5:1.54.0.2
	OPENBSD_3_5_BASE:1.54
	OPENBSD_3_4:1.53.0.2
	OPENBSD_3_4_BASE:1.53
	UBC_SYNC_A:1.51
	OPENBSD_3_3:1.51.0.2
	OPENBSD_3_3_BASE:1.51
	OPENBSD_3_2:1.49.0.2
	OPENBSD_3_2_BASE:1.49
	OPENBSD_3_1:1.47.0.2
	OPENBSD_3_1_BASE:1.47
	UBC_SYNC_B:1.50
	UBC:1.44.0.2
	UBC_BASE:1.44
	OPENBSD_3_0:1.41.0.2
	OPENBSD_3_0_BASE:1.41
	OPENBSD_2_9_BASE:1.36
	OPENBSD_2_9:1.36.0.2
	OPENBSD_2_8:1.30.0.2
	OPENBSD_2_8_BASE:1.30
	OPENBSD_2_7:1.28.0.2
	OPENBSD_2_7_BASE:1.28
	SMP:1.27.0.2
	SMP_BASE:1.27
	kame_19991208:1.25
	OPENBSD_2_6:1.25.0.2
	OPENBSD_2_6_BASE:1.25
	OPENBSD_2_5:1.23.0.2
	OPENBSD_2_5_BASE:1.23
	OPENBSD_2_4:1.20.0.2
	OPENBSD_2_4_BASE:1.20
	OPENBSD_2_3:1.19.0.2
	OPENBSD_2_3_BASE:1.19
	OPENBSD_2_2:1.17.0.2
	OPENBSD_2_2_BASE:1.17
	OPENBSD_2_1:1.13.0.2
	OPENBSD_2_1_BASE:1.13
	OPENBSD_2_0:1.10.0.2
	OPENBSD_2_0_BASE:1.10
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.125
date	2017.08.20.16.56.43;	author deraadt;	state Exp;
branches;
next	1.124;
commitid	wJ39sTA1GAhOYDkC;

1.124
date	2017.03.04.16.52.47;	author deraadt;	state Exp;
branches;
next	1.123;
commitid	OCYhy9zgDPavjkFM;

1.123
date	2016.09.09.18.12.37;	author millert;	state Exp;
branches;
next	1.122;
commitid	mBDdb9HYWgUfDo7E;

1.122
date	2016.05.11.18.01.33;	author deraadt;	state Exp;
branches;
next	1.121;
commitid	8HrfPuesPACD8eHr;

1.121
date	2015.12.19.19.44.09;	author deraadt;	state Exp;
branches;
next	1.120;
commitid	06zXvTFsidu1q2WK;

1.120
date	2015.10.06.21.17.01;	author deraadt;	state Exp;
branches;
next	1.119;
commitid	dzOPgLXvbBBzymkB;

1.119
date	2015.10.06.15.21.26;	author deraadt;	state Exp;
branches;
next	1.118;
commitid	ZuHSGSKpxfpgDZgj;

1.118
date	2015.07.02.01.34.00;	author dlg;	state Exp;
branches;
next	1.117;
commitid	HBmwORlhlW47BLMN;

1.117
date	2015.06.17.22.35.08;	author deraadt;	state Exp;
branches;
next	1.116;
commitid	9GUV93VvnoAJLIPE;

1.116
date	2015.06.17.22.32.08;	author deraadt;	state Exp;
branches;
next	1.115;
commitid	t9SY77H32y4EhYfI;

1.115
date	2015.01.20.18.14.51;	author deraadt;	state Exp;
branches;
next	1.114;
commitid	N9LfVgtWXkkeAVCv;

1.114
date	2015.01.20.18.12.49;	author deraadt;	state Exp;
branches;
next	1.113;
commitid	MEOmBKHzdmBjucsS;

1.113
date	2015.01.20.18.08.16;	author deraadt;	state Exp;
branches;
next	1.112;
commitid	WmjopUuWwzSWEYgG;

1.112
date	2015.01.20.18.03.17;	author deraadt;	state Exp;
branches;
next	1.111;
commitid	tfnXAxs6OVIv5q5R;

1.111
date	2015.01.18.21.47.16;	author millert;	state Exp;
branches;
next	1.110;
commitid	p3wg3aOQBv0s1e7p;

1.110
date	2015.01.17.15.03.09;	author millert;	state Exp;
branches;
next	1.109;
commitid	ey50yGFnoZoG4BF5;

1.109
date	2015.01.01.15.50.27;	author deraadt;	state Exp;
branches;
next	1.108;
commitid	aUXY4nvORi8fzhu0;

1.108
date	2014.10.22.06.55.10;	author dcoppa;	state Exp;
branches;
next	1.107;
commitid	ysy0SZf10Vm5T9Ql;

1.107
date	2014.07.15.21.59.17;	author deraadt;	state Exp;
branches;
next	1.106;
commitid	beUIljsE6tZdLJr8;

1.106
date	2014.05.02.19.03.06;	author deraadt;	state Exp;
branches;
next	1.105;

1.105
date	2014.01.12.11.26.09;	author deraadt;	state Exp;
branches;
next	1.104;

1.104
date	2013.07.07.18.11.49;	author deraadt;	state Exp;
branches;
next	1.103;

1.103
date	2013.03.25.17.46.22;	author deraadt;	state Exp;
branches;
next	1.102;

1.102
date	2013.03.23.16.12.30;	author deraadt;	state Exp;
branches;
next	1.101;

1.101
date	2013.01.31.23.30.40;	author miod;	state Exp;
branches;
next	1.100;

1.100
date	2013.01.17.21.24.58;	author deraadt;	state Exp;
branches;
next	1.99;

1.99
date	2013.01.16.10.38.27;	author deraadt;	state Exp;
branches;
next	1.98;

1.98
date	2013.01.16.04.05.22;	author deraadt;	state Exp;
branches;
next	1.97;

1.97
date	2012.12.05.23.20.24;	author deraadt;	state Exp;
branches;
next	1.96;

1.96
date	2012.06.20.21.40.55;	author deraadt;	state Exp;
branches;
next	1.95;

1.95
date	2012.04.12.12.33.03;	author deraadt;	state Exp;
branches;
next	1.94;

1.94
date	2012.01.11.22.11.34;	author deraadt;	state Exp;
branches;
next	1.93;

1.93
date	2011.11.30.10.26.56;	author dlg;	state Exp;
branches;
next	1.92;

1.92
date	2011.07.18.07.07.52;	author deraadt;	state Exp;
branches;
next	1.91;

1.91
date	2011.04.12.21.39.22;	author miod;	state Exp;
branches;
next	1.90;

1.90
date	2011.04.06.11.39.44;	author miod;	state Exp;
branches;
next	1.89;

1.89
date	2011.01.14.00.04.16;	author deraadt;	state Exp;
branches;
next	1.88;

1.88
date	2010.07.24.15.31.19;	author deraadt;	state Exp;
branches;
next	1.87;

1.87
date	2010.04.23.21.34.40;	author deraadt;	state Exp;
branches;
next	1.86;

1.86
date	2010.02.17.21.46.43;	author miod;	state Exp;
branches;
next	1.85;

1.85
date	2010.01.26.23.04.28;	author miod;	state Exp;
branches;
next	1.84;

1.84
date	2009.06.20.23.38.12;	author miod;	state Exp;
branches;
next	1.83;

1.83
date	2009.03.25.22.42.59;	author weingart;	state Exp;
branches;
next	1.82;

1.82
date	2009.02.08.21.02.22;	author miod;	state Exp;
branches;
next	1.81;

1.81
date	2008.11.24.14.26.54;	author deraadt;	state Exp;
branches;
next	1.80;

1.80
date	2008.11.24.12.57.37;	author dlg;	state Exp;
branches;
next	1.79;

1.79
date	2008.11.23.12.43.37;	author deraadt;	state Exp;
branches;
next	1.78;

1.78
date	2008.10.18.12.11.30;	author kettenis;	state Exp;
branches;
next	1.77;

1.77
date	2008.09.29.12.34.18;	author art;	state Exp;
branches;
next	1.76;

1.76
date	2008.09.19.05.41.29;	author djm;	state Exp;
branches;
next	1.75;

1.75
date	2008.07.02.00.13.32;	author deraadt;	state Exp;
branches;
next	1.74;

1.74
date	2008.03.10.17.15.33;	author deraadt;	state Exp;
branches;
next	1.73;

1.73
date	2007.12.13.15.15.31;	author blambert;	state Exp;
branches;
next	1.72;

1.72
date	2007.07.25.20.07.28;	author deraadt;	state Exp;
branches;
next	1.71;

1.71
date	2007.07.17.18.53.03;	author otto;	state Exp;
branches;
next	1.70;

1.70
date	2007.05.28.21.02.49;	author thib;	state Exp;
branches;
next	1.69;

1.69
date	2007.02.12.13.10.02;	author henning;	state Exp;
branches;
next	1.68;

1.68
date	2006.07.26.20.34.11;	author deraadt;	state Exp;
branches;
next	1.67;

1.67
date	2006.06.19.19.52.04;	author steven;	state Exp;
branches;
next	1.66;

1.66
date	2006.01.19.03.30.05;	author deraadt;	state Exp;
branches;
next	1.65;

1.65
date	2005.12.31.19.29.39;	author millert;	state Exp;
branches;
next	1.64;

1.64
date	2005.12.03.18.09.09;	author tedu;	state Exp;
branches;
next	1.63;

1.63
date	2005.08.09.00.46.12;	author deraadt;	state Exp;
branches;
next	1.62;

1.62
date	2005.06.07.16.36.21;	author deraadt;	state Exp;
branches;
next	1.61;

1.61
date	2005.03.11.22.07.32;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	2005.03.07.00.05.59;	author deraadt;	state Exp;
branches;
next	1.59;

1.59
date	2004.11.28.01.36.38;	author mickey;	state Exp;
branches;
next	1.58;

1.58
date	2004.08.11.15.28.23;	author deraadt;	state Exp;
branches;
next	1.57;

1.57
date	2004.08.11.15.04.22;	author deraadt;	state Exp;
branches;
next	1.56;

1.56
date	2004.08.09.18.08.50;	author deraadt;	state Exp;
branches;
next	1.55;

1.55
date	2004.05.31.18.35.35;	author millert;	state Exp;
branches;
next	1.54;

1.54
date	2004.02.27.18.06.55;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2003.08.11.14.52.42;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2003.06.02.23.28.21;	author millert;	state Exp;
branches;
next	1.51;

1.51
date	2003.02.12.23.07.28;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2002.10.25.21.55.28;	author millert;	state Exp;
branches;
next	1.49;

1.49
date	2002.09.10.21.36.57;	author deraadt;	state Exp;
branches;
next	1.48;

1.48
date	2002.04.24.21.53.12;	author espie;	state Exp;
branches;
next	1.47;

1.47
date	2002.03.22.23.29.28;	author deraadt;	state Exp;
branches;
next	1.46;

1.46
date	2002.01.30.20.45.35;	author nordin;	state Exp;
branches;
next	1.45;

1.45
date	2001.12.19.08.58.07;	author art;	state Exp;
branches;
next	1.44;

1.44
date	2001.12.10.03.03.10;	author art;	state Exp;
branches
	1.44.2.1;
next	1.43;

1.43
date	2001.11.28.13.47.39;	author art;	state Exp;
branches;
next	1.42;

1.42
date	2001.11.27.05.27.12;	author art;	state Exp;
branches;
next	1.41;

1.41
date	2001.09.11.13.11.18;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2001.08.07.22.57.15;	author art;	state Exp;
branches;
next	1.39;

1.39
date	2001.07.26.20.40.11;	author millert;	state Exp;
branches;
next	1.38;

1.38
date	2001.07.26.09.16.55;	author assar;	state Exp;
branches;
next	1.37;

1.37
date	2001.05.05.20.57.02;	author art;	state Exp;
branches;
next	1.36;

1.36
date	2001.04.15.02.35.09;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2001.04.07.08.04.49;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2001.04.06.04.46.18;	author csapuntz;	state Exp;
branches;
next	1.33;

1.33
date	2001.04.06.04.42.05;	author csapuntz;	state Exp;
branches;
next	1.32;

1.32
date	2001.01.31.23.34.15;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2001.01.31.17.42.26;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2000.08.21.21.13.37;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2000.06.16.21.47.19;	author provos;	state Exp;
branches;
next	1.28;

1.28
date	2000.04.08.05.06.24;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	2000.01.14.23.37.21;	author deraadt;	state Exp;
branches
	1.27.2.1;
next	1.26;

1.26
date	2000.01.06.03.34.39;	author smurph;	state Exp;
branches;
next	1.25;

1.25
date	99.09.23.08.25.01;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	99.09.17.13.13.46;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	99.02.28.06.25.30;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	99.01.11.20.44.02;	author niklas;	state Exp;
branches;
next	1.21;

1.21
date	98.11.11.17.57.34;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	98.07.15.23.12.55;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	98.03.07.22.41.37;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	97.11.06.05.59.10;	author csapuntz;	state Exp;
branches;
next	1.17;

1.17
date	97.10.06.20.21.09;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	97.10.06.15.25.34;	author csapuntz;	state Exp;
branches;
next	1.15;

1.15
date	97.10.01.21.53.36;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	97.09.11.16.09.57;	author kstailey;	state Exp;
branches;
next	1.13;

1.13
date	97.05.22.06.55.59;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	97.03.27.05.35.25;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	96.10.25.11.14.45;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	96.09.30.12.30.18;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.07.18.04.57.19;	author dm;	state Exp;
branches;
next	1.8;

1.8
date	96.04.21.22.31.51;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.04.18.21.41.03;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.03.19.21.10.48;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.03.05.02.30.00;	author dm;	state Exp;
branches;
next	1.4;

1.4
date	96.03.03.12.12.06;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.02.18.11.20.23;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.01.10.18.02.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.28;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.28;	author deraadt;	state Exp;
branches;
next	;

1.27.2.1
date	2001.05.14.22.45.03;	author niklas;	state Exp;
branches;
next	1.27.2.2;

1.27.2.2
date	2001.07.04.11.00.25;	author niklas;	state Exp;
branches;
next	1.27.2.3;

1.27.2.3
date	2001.10.31.03.30.30;	author nate;	state Exp;
branches;
next	1.27.2.4;

1.27.2.4
date	2001.12.05.01.02.40;	author niklas;	state Exp;
branches;
next	1.27.2.5;

1.27.2.5
date	2002.03.06.02.17.13;	author niklas;	state Exp;
branches;
next	1.27.2.6;

1.27.2.6
date	2003.03.28.00.41.30;	author niklas;	state Exp;
branches;
next	1.27.2.7;

1.27.2.7
date	2003.06.07.11.09.07;	author ho;	state Exp;
branches;
next	1.27.2.8;

1.27.2.8
date	2004.02.19.11.01.33;	author niklas;	state Exp;
branches;
next	1.27.2.9;

1.27.2.9
date	2004.06.05.23.13.09;	author niklas;	state Exp;
branches;
next	;

1.44.2.1
date	2002.01.31.22.55.49;	author niklas;	state Exp;
branches;
next	1.44.2.2;

1.44.2.2
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	1.44.2.3;

1.44.2.3
date	2002.10.29.00.36.49;	author art;	state Exp;
branches;
next	1.44.2.4;

1.44.2.4
date	2003.05.19.22.32.19;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.125
log
@crank to 6.2-beta
@
text
@/*	$OpenBSD: param.h,v 1.124 2017/03/04 16:52:47 deraadt Exp $	*/

/*-
 * Copyright (c) 1982, 1986, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _SYS_PARAM_H_
#define	_SYS_PARAM_H_

#define	BSD	199306		/* System version (year & month). */
#define BSD4_3	1
#define BSD4_4	1

#define OpenBSD	201711		/* OpenBSD version (year & month). */
#define OpenBSD6_2 2		/* OpenBSD 6.2 */

#include <sys/_null.h>

#ifndef _LOCORE
#include <sys/types.h>
#endif

/*
 * Machine-independent constants (some used in following include files).
 * Redefined constants are from POSIX 1003.1 limits file.
 *
 * MAXCOMLEN should be >= sizeof(ac_comm) (see <acct.h>)
 * MAXLOGNAME should be >= UT_NAMESIZE (see <utmp.h>)
 */
#include <sys/syslimits.h>

#define	MAXCOMLEN	16		/* max command name remembered */
#define	MAXINTERP	128		/* max interpreter file name length */
#define	MAXLOGNAME	LOGIN_NAME_MAX	/* max login name length w/ NUL */
#define	MAXUPRC		CHILD_MAX	/* max simultaneous processes */
#define	NCARGS		ARG_MAX		/* max bytes for an exec function */
#define	NGROUPS		NGROUPS_MAX	/* max number groups */
#define	NOFILE		OPEN_MAX	/* max open files per process (soft) */
#define	NOFILE_MAX	1024		/* max open files per process (hard) */
#define	NOGROUP		65535		/* marker for empty group set member */
#define MAXHOSTNAMELEN	256		/* max hostname length w/ NUL */

/* More types and definitions used throughout the kernel. */
#ifdef _KERNEL
#include <sys/errno.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <sys/ucred.h>
#include <sys/uio.h>
#include <sys/srp.h>
#endif

/* Signals. */
#include <sys/signal.h>

/* Machine type dependent parameters. */
#include <sys/limits.h>
#include <machine/param.h>

#ifdef _KERNEL
/*
 * Priorities.  Note that with 32 run queues, differences less than 4 are
 * insignificant.
 */
#define	PSWP	0
#define	PVM	4
#define	PINOD	8
#define	PRIBIO	16
#define	PVFS	20
#endif /* _KERNEL */
#define	PZERO	22		/* No longer magic, shouldn't be here.  XXX */
#ifdef _KERNEL
#define	PSOCK	24
#define	PWAIT	32
#define	PLOCK	36
#define	PPAUSE	40
#define	PUSER	50
#define	MAXPRI	127		/* Priorities range from 0 through MAXPRI. */

#define	PRIMASK		0x0ff
#define	PCATCH		0x100	/* OR'd with pri for tsleep to check signals */
#define PNORELOCK	0x200	/* OR'd with pri for msleep to not reaquire
				   the mutex */
#endif /* _KERNEL */

#define	NODEV	(dev_t)(-1)	/* non-existent device */

#define	ALIGNBYTES		_ALIGNBYTES
#define	ALIGN(p)		_ALIGN(p)
#define	ALIGNED_POINTER(p,t)	_ALIGNED_POINTER(p,t)

/*
 * File system parameters and macros.
 *
 * The file system is made out of blocks of at most MAXBSIZE units, with
 * smaller units (fragments) only in the last direct block.  MAXBSIZE
 * primarily determines the size of buffers in the buffer pool.  It may be
 * made larger without any effect on existing file systems; however making
 * it smaller makes some file systems unmountable.
 */
#ifdef _KERNEL
#define MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */
#endif /* _KERNEL */
#define	MAXBSIZE	(64 * 1024)

#define	_DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define	DEV_BSIZE	(1 << _DEV_BSHIFT)
#ifdef _KERNEL
#define	DEV_BSHIFT	_DEV_BSHIFT
#define	BLKDEV_IOSIZE	PAGE_SIZE
#endif /* _KERNEL */

/* pages to disk blocks */
#ifndef ctod
#define ctod(x)         ((x) << (PAGE_SHIFT - _DEV_BSHIFT))
#endif
#ifndef dtoc
#define dtoc(x)         ((x) >> (PAGE_SHIFT - _DEV_BSHIFT))
#endif

/* bytes to disk blocks */
#ifndef btodb
#define btodb(x)        ((x) >> _DEV_BSHIFT)
#endif
#ifndef dbtob
#define dbtob(x)        ((x) << _DEV_BSHIFT)
#endif

/*
 * MAXPATHLEN defines the longest permissible path length after expanding
 * symbolic links. It is used to allocate a temporary buffer from the buffer
 * pool in which to do the name expansion, hence should be a power of two,
 * and must be less than or equal to MAXBSIZE.  MAXSYMLINKS defines the
 * maximum number of symbolic links that may be expanded in a path name.
 * It should be set high enough to allow all legitimate uses, but halt
 * infinite loops reasonably quickly.
 */
#define	MAXPATHLEN	PATH_MAX
#define MAXSYMLINKS	SYMLOOP_MAX

/* Macros to set/clear/test flags. */
#ifdef _KERNEL
#define SET(t, f)	((t) |= (f))
#define CLR(t, f)	((t) &= ~(f))
#define ISSET(t, f)	((t) & (f))
#endif /* _KERNEL */

/* Bit map related macros. */
#define	setbit(a,i)	((a)[(i)>>3] |= 1<<((i)&(NBBY-1)))
#define	clrbit(a,i)	((a)[(i)>>3] &= ~(1<<((i)&(NBBY-1))))
#define	isset(a,i)	((a)[(i)>>3] & (1<<((i)&(NBBY-1))))
#define	isclr(a,i)	(((a)[(i)>>3] & (1<<((i)&(NBBY-1)))) == 0)

/* Macros for counting and rounding. */
#ifndef howmany
#define	howmany(x, y)	(((x)+((y)-1))/(y))
#endif
#define	roundup(x, y)	((((x)+((y)-1))/(y))*(y))
#define powerof2(x)	((((x)-1)&(x))==0)

/* Macros for min/max. */
#define	MIN(a,b) (((a)<(b))?(a):(b))
#define	MAX(a,b) (((a)>(b))?(a):(b))

/* Macros for calculating the offset of a field */
#if !defined(offsetof) && defined(_KERNEL)
#if __GNUC_PREREQ__(4, 0)
#define offsetof(s, e) __builtin_offsetof(s, e)
#else
#define offsetof(s, e) ((size_t)&((s *)0)->e)
#endif
#endif /* !defined(offsetof) && defined(_KERNEL) */

#define nitems(_a)	(sizeof((_a)) / sizeof((_a)[0]))

/*
 * Scale factor for scaled integers used to count %cpu time and load avgs.
 *
 * The number of CPU `tick's that map to a unique `%age' can be expressed
 * by the formula (1 / (2 ^ (FSHIFT - 11))).  The maximum load average that
 * can be calculated (assuming 32 bits) can be closely approximated using
 * the formula (2 ^ (2 * (16 - FSHIFT))) for (FSHIFT < 15).
 *
 * For the scheduler to maintain a 1:1 mapping of CPU `tick' to `%age',
 * FSHIFT must be at least 11; this gives us a maximum load avg of ~1024.
 */
#define	_FSHIFT	11		/* bits to right of fixed binary point */
#ifdef _KERNEL
#define	FSHIFT	_FSHIFT	
#endif
#define FSCALE	(1<<_FSHIFT)

#endif /* !_SYS_PARAM_H_ */
@


1.124
log
@crank to 6.1-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.123 2016/09/09 18:12:37 millert Exp $	*/
d44 2
a45 2
#define OpenBSD	201705		/* OpenBSD version (year & month). */
#define OpenBSD6_1 1		/* OpenBSD 6.1 */
@


1.123
log
@Move the 10 (!) defintions of NULL to their own mini header file and
update the NULL definition for C++11.  OK deraadt@@ guenther@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.122 2016/05/11 18:01:33 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201609		/* OpenBSD version (year & month). */
#define OpenBSD6_0 1		/* OpenBSD 6.0 */
@


1.122
log
@crank to 6.0-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.121 2015/12/19 19:44:09 deraadt Exp $	*/
d47 1
a47 7
#ifndef NULL
#ifdef 	__GNUG__
#define	NULL	__null
#else
#define	NULL	((void *)0)
#endif
#endif
@


1.121
log
@move to 5.9-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.120 2015/10/06 21:17:01 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201605		/* OpenBSD version (year & month). */
#define OpenBSD5_9 1		/* OpenBSD 5.9 */
@


1.120
log
@oops, mistaken commit, spotted by naddy
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.118 2015/07/02 01:34:00 dlg Exp $	*/
d44 2
a45 2
#define OpenBSD	201510		/* OpenBSD version (year & month). */
#define OpenBSD5_8 1		/* OpenBSD 5.8 */
@


1.119
log
@Add new "tty" request, which allows TIOCGETA, TIOCGPGRP, TIOCGWINSZ,
TIOCSBRK, TIOCCDTR, TIOCSETA, TIOCSETAW, and TIOCSETAF on tty
vnodes. This helps programs which call tcsetattr(), tcgetattr(), or
readpassphrase().  Especially the latter - tame's goal is to satisfy
the libc requirements of security-sensitive programs.

Remove TIOCSETAF from the basic "ioctl" request, because it is a "set"
option. "ioctl" is slowly turning into a "request information, cannot
set options" package.

Split the "cmsg" request into "sendfd" and "recvfd".  Non-SCM_RIGHTS
messages are currently flowing through freely and we'll need to think
about that.  This split lets us more strictly describe what our many
fd-passing programs will do.
@
text
@d41 2
@


1.118
log
@introduce srp, which according to the manpage i wrote is short for
"shared reference pointers".

srp allows concurrent access to a data structure by multiple cpus
while avoiding interlocking cpu opcodes. it manages its own reference
counts and the garbage collection of those data structure to avoid
use after frees.

internally srp is a twisted version of hazard pointers, which are
a relative of RCU.

jmatthew wrote the bulk of a hazard pointer implementation and
changed bpf to use it to allow mpsafe access to bpfilters. however,
at s2k15 we were trying to apply it to other data structures but
the memory overhead of every hazard pointer would have blown out
significantly in several uses cases. a bulk of our time at s2k15
was spent reworking hazard pointers into srp.

this diff adds the srp api and adds the necessary metadata to struct
cpuinfo on our MP architectures. srp on uniprocessor platforms has
alternate code that is optimised because it knows there'll be no
concurrent access to data by multiple cpus.

srp is made available to the system via param.h, so it should be
available everywhere in the kernel.

the docs likely need improvement cos im too close to the implementation.

ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.117 2015/06/17 22:35:08 deraadt Exp $	*/
a40 2
#define BSD4_3	1
#define BSD4_4	1
@


1.117
log
@my keyboard is conspiring against me
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.116 2015/06/17 22:32:08 deraadt Exp $	*/
d86 1
@


1.116
log
@crank to 5.8-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.115 2015/01/20 18:14:51 deraadt Exp $	*/
d45 1
a45 1
c#define OpenBSD5_8 1		/* OpenBSD 5.8 */
@


1.115
log
@FSHIFT does not need to go to userland, so convert it to _FSHIFT.
FSCALE still needs to be exported .. unless someone fixes a few ports
that need it.
ok guenther, tested by sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.114 2015/01/20 18:12:49 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201505		/* OpenBSD version (year & month). */
#define OpenBSD5_7 1		/* OpenBSD 5.7 */
@


1.114
log
@Years ago, MSIZE had to be known in <sys/param.h> probably to allocate
memory for the mbuf layer up front.  These days it only matters for
sizing of macros in <sys/mbuf.h>, so move it there.  MCLSHIFT, MCLBYTES,
and MCLOFSET can move also (a decade ago, architectures had different
mbuf sizes.  you don't want to know more)
ok guenther, ports fallout checked for by sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.111 2015/01/18 21:47:16 millert Exp $	*/
d222 5
a226 2
#define	FSHIFT	11		/* bits to right of fixed binary point */
#define FSCALE	(1<<FSHIFT)
@


1.113
log
@MAXFRAG was always placed incorrectly in <sys/param.h>  It is primarily
used in disklabel type tools, newfs, fsck, when related to ufs or
ufs-derived filesystems, but also in a struct. Those things always include
<ufs/ffs/fs.h>.  Move it there
ok guenther, tested in ports by sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.112 2015/01/20 18:03:17 deraadt Exp $	*/
a121 16

/*
 * Constants related to network buffer management.
 * MCLBYTES must be no larger than PAGE_SIZE (the software page size) and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
 */
#define	MSIZE		256		/* size of an mbuf */

#ifdef _KERNEL
#define	MCLSHIFT	11		/* convert bytes to m_buf clusters */
					/* 2K cluster can hold Ether frame */
#define	MCLBYTES	(1 << MCLSHIFT)	/* size of a m_buf cluster */
#define	MCLOFSET	(MCLBYTES - 1)
#endif /* _KERNEL */
@


1.112
log
@CMASK was only a CSRGism.  It was only used in the kernel and ftpd, once
each, never in portable software.  Mop it up.
ok guenther, tested in ports tree by sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.111 2015/01/18 21:47:16 millert Exp $	*/
a155 1
#define MAXFRAG 	8
@


1.111
log
@Back out previous.  HOST_NAME_MAX is only defined for newer POSIX
revisions so it is not safe to define MAXHOSTNAMELEN in terms of it.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.110 2015/01/17 15:03:09 millert Exp $	*/
a121 2

#define	CMASK	022		/* default file mask: S_IWGRP|S_IWOTH */
@


1.110
log
@Define MAXHOSTNAMELEN as HOST_NAME_MAX+1.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.109 2015/01/01 15:50:27 deraadt Exp $	*/
d77 1
a77 1
#define MAXHOSTNAMELEN	(HOST_NAME_MAX+1)	/* max hostname size */
@


1.109
log
@move to 5.7-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.108 2014/10/22 06:55:10 dcoppa Exp $	*/
d77 1
a77 1
#define MAXHOSTNAMELEN	256		/* max hostname size */
@


1.108
log
@
Sync offsetof() definition with what we have in <stddef.h> for
userland.
Fix a warning from gcc-4.9:

../../../../ufs/ufs/dir.h:113:33: warning: variably modified 'dh_firstfree' at file scope

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.107 2014/07/15 21:59:17 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201411		/* OpenBSD version (year & month). */
#define OpenBSD5_6 1		/* OpenBSD 5.6 */
@


1.107
log
@crank to 5.6-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.106 2014/05/02 19:03:06 deraadt Exp $	*/
d221 3
d226 1
@


1.106
log
@Change BLKDEV_IOSIZE to PAGE_SIZE
ok beck miod
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.105 2014/01/12 11:26:09 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201405		/* OpenBSD version (year & month). */
#define OpenBSD5_5 1		/* OpenBSD 5.5 */
@


1.105
log
@crank to 5.5beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.104 2013/07/07 18:11:49 deraadt Exp $	*/
d164 1
a164 1
#define	BLKDEV_IOSIZE	2048
@


1.104
log
@move to 5.4-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.103 2013/03/25 17:46:22 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201311		/* OpenBSD version (year & month). */
#define OpenBSD5_4 1		/* OpenBSD 5.4 */
@


1.103
log
@ALIGNBYTES/ALIGN/ALIGNED_POINTER can move to the MI file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.102 2013/03/23 16:12:30 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201305		/* OpenBSD version (year & month). */
#define OpenBSD5_3 1		/* OpenBSD 5.3 */
@


1.102
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.101 2013/01/31 23:30:40 miod Exp $	*/
d140 4
@


1.101
log
@welcome to 5.3-BETA
@
text
@d1 1
a1 2
/*	$OpenBSD: param.h,v 1.100 2013/01/17 21:24:58 deraadt Exp $	*/
/*	$NetBSD: param.h,v 1.23 1996/03/17 01:02:29 thorpej Exp $	*/
a34 2
 *
 *	@@(#)param.h	8.2 (Berkeley) 1/21/94
d37 3
d95 1
d105 1
d107 1
d119 3
d124 1
a124 2
#define	NODEV	(dev_t)(-1)	/* non-existent device */
	
d127 1
a127 1
 * MCLBYTES must be no larger than NBPG (the software page size), and,
d133 2
d139 1
d150 27
a176 2
#ifndef MAXBSIZE	/* XXX temp until sun3 DMA chaining */
#define	MAXBSIZE	MAXPHYS
a177 1
#define MAXFRAG 	8
d196 1
a196 1
#endif
a222 18
 * Constants for setting the parameters of the kernel memory allocator.
 *
 * 2 ** MINBUCKET is the smallest unit of memory that will be
 * allocated. It must be at least large enough to hold a pointer.
 *
 * Units of memory less or equal to MAXALLOCSAVE will permanently
 * allocate physical memory; requests for these size pieces of
 * memory are quite fast. Allocations greater than MAXALLOCSAVE must
 * always allocate and free physical memory; requests for these
 * size allocations should be done infrequently as they will be slow.
 *
 * Constraints: PAGE_SIZE <= MAXALLOCSAVE <= 2 ** (MINBUCKET + 14), and
 * MAXALLOCSIZE must be a power of two.
 */
#define MINBUCKET	4		/* 4 => min allocation of 16 bytes */
#define MAXALLOCSAVE	(2 * PAGE_SIZE)

/*
d236 1
a236 10
/*
 * The time for a process to be blocked before being very swappable.
 * This is a number of seconds which the system takes as being a non-trivial
 * amount of real time.  You probably shouldn't change this;
 * it is used in subtle ways (fractions and multiples of it are, that is, like
 * half of a ``long time'', almost a long time, etc.)
 * It is related to human patience and other factors which don't really
 * change over time.
 */
#define	MAXSLP	20
@


1.100
log
@Ensure the tty hiwat is less than the size of the ring buffer (since
we do not grow space like clist chains).  Clamp it a bit more precisely,
ensuring a bit of space for kernel ^T handling and such.  It was definately
wrong, and we can tune this if required later.
ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.99 2013/01/16 10:38:27 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201211		/* OpenBSD version (year & month). */
#define OpenBSD5_2 1		/* OpenBSD 5.2 */
@


1.99
log
@Move MAXMCLBYTES to mbuf.h so that fewer parts of userland see it.
ok matthieu
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.98 2013/01/16 04:05:22 deraadt Exp $	*/
a119 6
#define	CBLOCK	64		/* Clist block size, must be a power of 2. */
#define CBQSIZE	(CBLOCK/NBBY)	/* Quote bytes/cblock - can do better. */
				/* Data chars/clist. */
#define	CBSIZE	(CBLOCK - sizeof(struct cblock *) - CBQSIZE)
#define	CROUND	(CBLOCK - 1)	/* Clist rounding. */

@


1.98
log
@do not expose NETDEV to userland from param.h
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.97 2012/12/05 23:20:24 deraadt Exp $	*/
a137 2

#define MAXMCLBYTES	(64 * 1024)	/* largest cluster from the stack */
@


1.97
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.96 2012/06/20 21:40:55 deraadt Exp $	*/
a118 1
#define NETDEV	(dev_t)(-2)	/* network device (for nfs swap) */
@


1.96
log
@move to 5.2-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.95 2012/04/12 12:33:03 deraadt Exp $	*/
a80 1
#include <sys/cdefs.h>
@


1.95
log
@remove rfork(); ok guenther miod
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.94 2012/01/11 22:11:34 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201205		/* OpenBSD version (year & month). */
#define OpenBSD5_1 1		/* OpenBSD 5.1 */
@


1.94
log
@crank to 5.1-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.93 2011/11/30 10:26:56 dlg Exp $	*/
a241 17

/*
 * rfork() options.
 *
 * XXX currently, operations without RFPROC set are not supported.
 */
#define RFNAMEG		(1<<0)	/* UNIMPL new plan9 `name space' */
#define RFENVG		(1<<1)	/* UNIMPL copy plan9 `env space' */
#define RFFDG		(1<<2)	/* copy fd table */
#define RFNOTEG		(1<<3)	/* UNIMPL create new plan9 `note group' */
#define RFPROC		(1<<4)	/* change child (else changes curproc) */
#define RFMEM		(1<<5)	/* share `address space' */
#define RFNOWAIT	(1<<6)	/* parent need not wait() on child */ 
#define RFCNAMEG	(1<<10) /* UNIMPL zero plan9 `name space' */
#define RFCENVG		(1<<11) /* UNIMPL zero plan9 `env space' */
#define RFCFDG		(1<<12)	/* zero fd table */
#define RFTHREAD	(1<<13)	/* create a thread, not a process */
@


1.93
log
@this diff introduces the MAXMCLBYTES macro to describe the largest
cluster the generic network stack will be able to give you.

it also recognises that external storage on an mbuf may be bigger than
MCLBYTES. its only when m_pullup or m_pulldown need to allocate
another cluster that they now check the len argument, and now they
do it against MAXMCLBYTES.

this is required for me to do pfsync on jumbo frames as the m_pulldown
for the subregions fail beyond MCLBYTES into the packet.

ok deraadt@@ mikeb@@ henning@@ blambert@@
manpage changes ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.92 2011/07/18 07:07:52 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201111		/* OpenBSD version (year & month). */
#define OpenBSD5_0 1		/* OpenBSD 5.0 */
@


1.92
log
@take us to 5.0-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.91 2011/04/12 21:39:22 miod Exp $	*/
d140 2
@


1.91
log
@No longer special-case NULL as a long for kernel and bootblocks.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.90 2011/04/06 11:39:44 miod Exp $	*/
d44 2
a45 2
#define OpenBSD	201105		/* OpenBSD version (year & month). */
#define OpenBSD4_9 1		/* OpenBSD 4.9 */
@


1.90
log
@Define NULL as a void * instead of a long integer, as required by Single Unix.
Kernel and bootblocks still use the old 0L value until all the NULL abuses
in the code are fixed.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.89 2011/01/14 00:04:16 deraadt Exp $	*/
a50 3
#if defined(_KERNEL) || defined(_STANDALONE)
#define	NULL	0L
#else
a51 1
#endif
@


1.89
log
@move to 4.9-current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.88 2010/07/24 15:31:19 deraadt Exp $	*/
d51 1
d53 3
@


1.88
log
@move to 4.8-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.87 2010/04/23 21:34:40 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	201011		/* OpenBSD version (year & month). */
#define OpenBSD4_8 1		/* OpenBSD 4.8 */
@


1.87
log
@Merge the only relevant (for now) parts of simplelock.h into lock.h
since it is time to start transitioning away from the no-op behaviour.
ok oga kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.86 2010/02/17 21:46:43 miod Exp $	*/
d44 2
a45 2
#define OpenBSD	201005		/* OpenBSD version (year & month). */
#define OpenBSD4_7 1		/* OpenBSD 4.7 */
@


1.86
log
@Forgot to bump version number in comments; from Seth Wright via jmc@@, thanks.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.85 2010/01/26 23:04:28 miod Exp $	*/
a56 1
#include <sys/simplelock.h>
@


1.85
log
@4.7-BETA (also, lo-carb and ozone layer friendly)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.84 2009/06/20 23:38:12 miod Exp $	*/
d45 1
a45 1
#define OpenBSD4_7 1		/* OpenBSD 4.6 */
@


1.84
log
@4.6-BETA
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.83 2009/03/25 22:42:59 weingart Exp $	*/
d44 2
a45 2
#define OpenBSD	200910		/* OpenBSD version (year & month). */
#define OpenBSD4_6 1		/* OpenBSD 4.6 */
@


1.83
log
@Nuke old useless define.  Miod was ok with the idea.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.82 2009/02/08 21:02:22 miod Exp $	*/
d44 2
a45 2
#define OpenBSD	200905		/* OpenBSD version (year & month). */
#define OpenBSD4_5 1		/* OpenBSD 4.5 */
@


1.82
log
@Move to 4.5-BETA
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.81 2008/11/24 14:26:54 deraadt Exp $	*/
a117 2

#define	NBPW	sizeof(int)	/* number of bytes per word (integer) */
@


1.81
log
@move MCLPOOLS to if.h and force uipc_mbuf.c to get if.h, there is no
other option
ok dlg
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.80 2008/11/24 12:57:37 dlg Exp $	*/
d44 2
a45 2
#define OpenBSD	200811		/* OpenBSD version (year & month). */
#define OpenBSD4_4 1		/* OpenBSD 4.4 */
@


1.80
log
@add several backend pools to allocate mbufs clusters of various sizes out
of. currently limited to MCLBYTES (2048 bytes) and 4096 bytes until pools
can allocate objects of sizes greater than PAGESIZE.

this allows drivers to ask for "jumbo" packets to fill rx rings with.

the second half of this change is per interface mbuf cluster allocator
statistics. drivers can use the new interface (MCLGETI), which will use
these stats to selectively fail allocations based on demand for mbufs. if
the driver isnt rapidly consuming rx mbufs, we dont allow it to allocate
many to put on its rx ring.

drivers require modifications to take advantage of both the new allocation
semantic and large clusters.

this was written and developed with deraadt@@ over the last two days
ok deraadt@@ claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.79 2008/11/23 12:43:37 deraadt Exp $	*/
a142 1
#define MCLPOOLS	7		/* number of cluster pools */
@


1.79
log
@this adds:

#define nitems(_a)     (sizeof((_a)) / sizeof((_a)[0]))

in the kernel, you can now use this instead of torturing yourself.
ok dlg, well, really i just finally gave in to his arguments and we choose
a better name than sizeofa().
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.78 2008/10/18 12:11:30 kettenis Exp $	*/
d143 1
a143 1

@


1.78
log
@Revert the change to use pools for <= PAGE_SIZE allocations.  It
changes the pressure on the uvm system, uncovering several bugs.  Some
of those bugs result in provable deadlocks.  We'll have to reconsider
integrating this diff again after fixing those bugs.

ok art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.76 2008/09/19 05:41:29 djm Exp $	*/
d199 2
@


1.77
log
@Use pools to do allocations for all sizes <= PAGE_SIZE.
This will allow us to escape the limitations of kmem_map.
At this moment, the per-type limits are still enforced for all sizes,
but we might loosen that limit in the future after some thinking.

Original diff from Mickey in kernel/5761 , I massaged it a little to
obey the per-type limits.

miod@@ ok
@
text
@d215 2
a216 2
#define MINBUCKET	(sizeof(long) == 4? 4 : 5)
#define MAXALLOCSAVE	(PAGE_SIZE)
@


1.76
log
@increase MAXINTERP from 64 to 128 and allow a little extra room on top
of that for shell scripts to cover the #!, an optional space following
it and a newline at the end. feedback and ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.75 2008/07/02 00:13:32 deraadt Exp $	*/
d215 2
a216 2
#define MINBUCKET	4		/* 4 => min allocation of 16 bytes */
#define MAXALLOCSAVE	(2 * PAGE_SIZE)
@


1.75
log
@move to 4.4-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.74 2008/03/10 17:15:33 deraadt Exp $	*/
d70 1
a70 1
#define	MAXINTERP	64		/* max interpreter file name length */
@


1.74
log
@forgot to update the param symbols to 4.3
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.73 2007/12/13 15:15:31 blambert Exp $	*/
d44 2
a45 2
#define OpenBSD	200805		/* OpenBSD version (year & month). */
#define OpenBSD4_3 1		/* OpenBSD 4.3 */
@


1.73
log
@PNORELOCK is for msleep's mutex, not the now-gone ltsleep's interlock

update comment to match reality

ok oga@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.72 2007/07/25 20:07:28 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	200711		/* OpenBSD version (year & month). */
#define OpenBSD4_2 1		/* OpenBSD 4.2 */
@


1.72
log
@crank to 4.2-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.71 2007/07/17 18:53:03 otto Exp $	*/
d116 2
a117 2
#define PNORELOCK	0x200	/* OR'd with pri for ltsleep to not relock
				   the interlock */
@


1.71
log
@rewrite isset() and friends to use shifts and masks instead of divide
and modulo. generates smaller code and circumvents bugs seen on macppc
and mac68k. ok deraadt@@ art@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.70 2007/05/28 21:02:49 thib Exp $	*/
d44 2
a45 2
#define OpenBSD	200705		/* OpenBSD version (year & month). */
#define OpenBSD4_1 1		/* OpenBSD 4.1 */
@


1.70
log
@Move the MSIZE, MCLSHIFT, MCLBYTES and the MCLOFSET
mbuf constants from MD param.h to MI param.h.
Besides being the same on every arch, things will
most probly break if any arch has different values
then the others.

The NMBCLUSTERS constants needs to be MD though;

ok miod@@,krw@@,claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.69 2007/02/12 13:10:02 henning Exp $	*/
d179 4
a182 4
#define	setbit(a,i)	((a)[(i)/NBBY] |= 1<<((i)%NBBY))
#define	clrbit(a,i)	((a)[(i)/NBBY] &= ~(1<<((i)%NBBY)))
#define	isset(a,i)	((a)[(i)/NBBY] & (1<<((i)%NBBY)))
#define	isclr(a,i)	(((a)[(i)/NBBY] & (1<<((i)%NBBY))) == 0)
@


1.69
log
@4.1-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.68 2006/07/26 20:34:11 deraadt Exp $	*/
d130 14
@


1.68
log
@crank to 4.0-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.67 2006/06/19 19:52:04 steven Exp $	*/
d44 2
a45 2
#define OpenBSD	200611		/* OpenBSD version (year & month). */
#define OpenBSD4_0 1		/* OpenBSD 4.0 */
@


1.67
log
@permissable -> permissible.   ok jmc
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.66 2006/01/19 03:30:05 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	200605		/* OpenBSD version (year & month). */
#define OpenBSD3_9 1		/* OpenBSD 3.9 */
@


1.66
log
@crank to 3.8-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.65 2005/12/31 19:29:39 millert Exp $	*/
d146 1
a146 1
 * MAXPATHLEN defines the longest permissable path length after expanding
@


1.65
log
@Move TTY_NAME_MAX and LOGIN_NAME_MAX to sys/syslimits.h
Use correct values for _POSIX_TTY_NAME_MAX and _POSIX_LOGIN_NAME_MAX
Define MAXLOGNAME in terms of LOGIN_NAME_MAX
OK krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.64 2005/12/03 18:09:09 tedu Exp $	*/
d44 2
a45 2
#define OpenBSD	200511		/* OpenBSD version (year & month). */
#define OpenBSD3_8 1		/* OpenBSD 3.8 */
@


1.64
log
@kernel support for threaded processes (rthreads).
uses rfork(RFTHREAD) to create threads, which are presently processes
that are a little more tightly bound together.  several new syscalls
added to facilitate a userland thread library.
all conditional on RTHREADS, currently disabled.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.63 2005/08/09 00:46:12 deraadt Exp $	*/
d71 1
a71 1
#define	MAXLOGNAME	32		/* max login name length */
@


1.63
log
@move to 3.8-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.62 2005/06/07 16:36:21 deraadt Exp $	*/
d244 1
@


1.62
log
@wrong OpenBSD define for 3.7, oops; Claus Assmann
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.61 2005/03/11 22:07:32 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	200505		/* OpenBSD version (year & month). */
#define OpenBSD3_7 1		/* OpenBSD 3.7 */
@


1.61
log
@oops, off by 18
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.60 2005/03/07 00:05:59 deraadt Exp $	*/
d44 1
a44 1
#define OpenBSD	200519		/* OpenBSD version (year & month). */
@


1.60
log
@move to 3.7-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.59 2004/11/28 01:36:38 mickey Exp $	*/
d44 1
a44 1
#define OpenBSD	200501		/* OpenBSD version (year & month). */
@


1.59
log
@MAXSLP is not really an MD-configurable define so move it to param.h; miod@@ testing
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.58 2004/08/11 15:28:23 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	200411		/* OpenBSD version (year & month). */
#define OpenBSD3_6 1		/* OpenBSD 3.6 */
@


1.58
log
@damnit
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.57 2004/08/11 15:04:22 deraadt Exp $	*/
d217 11
@


1.57
log
@oops
@
text
@d1 1
a1 1
>/*	$OpenBSD: param.h,v 1.56 2004/08/09 18:08:50 deraadt Exp $	*/
@


1.56
log
@move to 3.6-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.55 2004/05/31 18:35:35 millert Exp $	*/
d44 1
a44 1
#define OpenBSD	2001005		/* OpenBSD version (year & month). */
@


1.55
log
@Define MAXSYMLINKS in terms of SYMLOOP_MAX just as MAXPATHLEN is defined
in terms of PATH_MAX.  From otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.54 2004/02/27 18:06:55 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	200405		/* OpenBSD version (year & month). */
#define OpenBSD3_5 1		/* OpenBSD 3.5 */
@


1.54
log
@oops; move to 3.5-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.53 2003/08/11 14:52:42 deraadt Exp $	*/
d155 1
a155 1
#define MAXSYMLINKS	32
@


1.53
log
@move to 3.4-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.52 2003/06/02 23:28:21 millert Exp $	*/
d44 2
a45 2
#define OpenBSD	200311		/* OpenBSD version (year & month). */
#define OpenBSD3_4 1		/* OpenBSD 3.4 */
@


1.52
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.51 2003/02/12 23:07:28 deraadt Exp $	*/
d44 2
a45 2
#define OpenBSD	200305		/* OpenBSD version (year & month). */
#define OpenBSD3_3 1		/* OpenBSD 3.3 */
@


1.51
log
@move to 3.3-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.50 2002/10/25 21:55:28 millert Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.50
log
@NULL is now 0L so it is the same size as a pointer.
OK mickey@@ and discussed with deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.49 2002/09/10 21:36:57 deraadt Exp $	*/
d48 2
a49 2
#define OpenBSD	200211		/* OpenBSD version (year & month). */
#define OpenBSD3_2 1		/* OpenBSD 3.2 */
@


1.49
log
@move to 3.2-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.48 2002/04/24 21:53:12 espie Exp $	*/
d55 1
a55 1
#define	NULL	0
@


1.48
log
@Introduce a new file, machine/internal_types.h, to hold that specific arch
type characteristics.

internal_types.h will contain only settings invisible from standard C, e.g.,
in the __* or _[A-Z]* namespace, and be reused by files like limits.h.

This allows us to shorten machine/limits.h greatly, as all the common defines
are now in sys/limits.h, plus a small stub in internal_types.h.

Tested on all arches as far as I know.
Approved after discussion with art, millert, deraadt, and others.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.47 2002/03/22 23:29:28 deraadt Exp $	*/
d48 2
a49 2
#define OpenBSD	200206		/* OpenBSD version (year & month). */
#define OpenBSD3_1 1		/* OpenBSD 3.1 */
@


1.47
log
@move to 3.1-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.46 2002/01/30 20:45:35 nordin Exp $	*/
d98 1
a99 1
#include <machine/limits.h>
@


1.46
log
@Move SET/CLR/ISSET macros to param.h. fgsch@@ and millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.45 2001/12/19 08:58:07 art Exp $	*/
d48 2
a49 2
#define OpenBSD	200111		/* OpenBSD version (year & month). */
#define OpenBSD3_0 1		/* OpenBSD 3.0 */
@


1.45
log
@UBC was a disaster. It worked very good when it worked, but on some
machines or some configurations or in some phase of the moon (we actually
don't know when or why) files disappeared. Since we've not been able to
track down the problem in two weeks intense debugging and we need -current
to be stable, back out everything to a state it had before UBC.

We apologise for the inconvenience.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.41 2001/09/11 13:11:18 deraadt Exp $	*/
d160 7
@


1.44
log
@Update comment
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.43 2001/11/28 13:47:39 art Exp $	*/
a229 14

#ifdef _KERNEL
/*
 * Defaults for Unified Buffer Cache parameters.
 * May be overridden in  <machine/param.h>
 */

#ifndef UBC_WINSHIFT
#define UBC_WINSHIFT 13
#endif
#ifndef UBC_NWINS
#define UBC_NWINS 1024
#endif
#endif /* _KERNEL */
@


1.44.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.46 2002/01/30 20:45:35 nordin Exp $	*/
a159 7

/* Macros to set/clear/test flags. */
#ifdef _KERNEL
#define SET(t, f)	((t) |= (f))
#define CLR(t, f)	((t) &= ~(f))
#define ISSET(t, f)	((t) & (f))
#endif
@


1.44.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.44.2.1 2002/01/31 22:55:49 niklas Exp $	*/
d48 2
a49 2
#define OpenBSD	200206		/* OpenBSD version (year & month). */
#define OpenBSD3_1 1		/* OpenBSD 3.1 */
a97 1
#include <sys/limits.h>
d99 1
@


1.44.2.3
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.44.2.2 2002/06/11 03:32:33 art Exp $	*/
d48 2
a49 2
#define OpenBSD	200211		/* OpenBSD version (year & month). */
#define OpenBSD3_2 1		/* OpenBSD 3.2 */
d55 1
a55 1
#define	NULL	0L
@


1.44.2.4
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d48 2
a49 2
#define OpenBSD	200305		/* OpenBSD version (year & month). */
#define OpenBSD3_3 1		/* OpenBSD 3.3 */
@


1.43
log
@Sync in more uvm changes from NetBSD.
This time we're getting rid of KERN_* and VM_PAGER_* error codes and
use errnos instead.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.42 2001/11/27 05:27:12 art Exp $	*/
d234 1
@


1.42
log
@Merge in the unified buffer cache code as found in NetBSD 2001/03/10. The
code is written mostly by Chuck Silvers <chuq@@chuq.com>/<chs@@netbsd.org>.

Tested for the past few weeks by many developers, should be in a pretty stable
state, but will require optimizations and additional cleanups.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.41 2001/09/11 13:11:18 deraadt Exp $	*/
d236 2
a237 2
#ifndef UBC_WINSIZE
#define UBC_WINSIZE 8192
@


1.41
log
@move to 3.0-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.40 2001/08/07 22:57:15 art Exp $	*/
d230 13
@


1.40
log
@Change tsleep into ltsleep.
ltsleep takes an additional argument - a simplelock and unlocks it when it's
safe to do so.

tsleep now becomes a wrapper around ltsleep.

From NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.39 2001/07/26 20:40:11 millert Exp $	*/
d48 2
a49 2
#define OpenBSD	200105		/* OpenBSD version (year & month). */
#define OpenBSD2_9 1		/* OpenBSD 2.9 */
@


1.39
log
@drop value of OpenBSD date to what it was before since the mknod/symlink changed have been backed out
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.38 2001/07/26 09:16:55 assar Exp $	*/
d118 4
a121 2
#define	PRIMASK	0x0ff
#define	PCATCH	0x100		/* OR'd with pri for tsleep to check signals */
@


1.38
log
@set OpenBSD version to 200107

ok'd by art
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.37 2001/05/05 20:57:02 art Exp $	*/
d48 1
a48 1
#define OpenBSD	200107		/* OpenBSD version (year & month). */
@


1.37
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.36 2001/04/15 02:35:09 deraadt Exp $	*/
d48 1
a48 1
#define OpenBSD	200105		/* OpenBSD version (year & month). */
@


1.36
log
@move to 2.9-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.35 2001/04/07 08:04:49 deraadt Exp $	*/
a126 21
/*
 * Clustering of hardware pages on machines with ridiculously small
 * page sizes is done here.  The paging subsystem deals with units of
 * CLSIZE pte's describing NBPG (from machine/param.h) pages each.
 */
#define	CLBYTES		(CLSIZE*NBPG)
#define	CLOFSET		(CLSIZE*NBPG-1)	/* for clusters, like PGOFSET */
#define	claligned(x)	((((int)(x))&CLOFSET)==0)
#define	CLOFF		CLOFSET
#define	CLSHIFT		(PGSHIFT+CLSIZELOG2)

#if CLSIZE==1
#define	clbase(i)	(i)
#define	clrnd(i)	(i)
#else
/* Give the base virtual address (first of CLSIZE). */
#define	clbase(i)	((i) &~ (CLSIZE-1))
/* Round a number of clicks up to a whole cluster. */
#define	clrnd(i)	(((i) + (CLSIZE-1)) &~ (CLSIZE-1))
#endif

d193 1
a193 1
 * Constraints: CLBYTES <= MAXALLOCSAVE <= 2 ** (MINBUCKET + 14), and
d197 1
a197 1
#define MAXALLOCSAVE	(2 * CLBYTES)
@


1.35
log
@offsetof() should return size_t
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.34 2001/04/06 04:46:18 csapuntz Exp $	*/
d48 2
a49 2
#define OpenBSD	200012		/* OpenBSD version (year & month). */
#define OpenBSD2_8 1		/* OpenBSD 2.8 */
@


1.34
log
@

Only define offsetof for KERNEL mode. Avoids breaking userland
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.33 2001/04/06 04:42:05 csapuntz Exp $	*/
d199 1
a199 1
#define offsetof(s, e) ((unsigned int)&((s *)0)->e)
@


1.33
log
@

Move offsetof define into sys/param.h
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.32 2001/01/31 23:34:15 deraadt Exp $	*/
d198 1
a198 1
#ifndef offsetof
@


1.32
log
@No, MAXLOGNAME 32 is better, because mumble mumble blah blah blah
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.31 2001/01/31 17:42:26 deraadt Exp $	*/
d196 5
@


1.31
log
@move utmp to large format, usernames to 32 chars; downsj
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.30 2000/08/21 21:13:37 deraadt Exp $	*/
d75 1
a75 1
#define	MAXLOGNAME	33		/* max login name length */
@


1.30
log
@2.8-beta (so that X11 can distinguish login.conf)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.29 2000/06/16 21:47:19 provos Exp $	*/
d75 1
a75 1
#define	MAXLOGNAME	12		/* max login name length */
@


1.29
log
@take MIN/MAX from param.h, okay theo@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.28 2000/04/08 05:06:24 deraadt Exp $	*/
d48 2
a49 2
#define OpenBSD	200006		/* OpenBSD version (year & month). */
#define OpenBSD2_7 1		/* OpenBSD 2.7 */
@


1.28
log
@2.7-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.27 2000/01/14 23:37:21 deraadt Exp $	*/
a193 1
#ifndef _KERNEL
a195 1
#endif
@


1.27
log
@no such thing as machparam.h; bmah@@ca.sandia.gov
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.26 2000/01/06 03:34:39 smurph Exp $	*/
d48 2
a49 2
#define OpenBSD	199912		/* OpenBSD version (year & month). */
#define OpenBSD2_6 1		/* OpenBSD 2.6 */
@


1.27.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.36 2001/04/15 02:35:09 deraadt Exp $	*/
d48 2
a49 2
#define OpenBSD	200105		/* OpenBSD version (year & month). */
#define OpenBSD2_9 1		/* OpenBSD 2.9 */
d75 1
a75 1
#define	MAXLOGNAME	32		/* max login name length */
d194 1
a196 4

/* Macros for calculating the offset of a field */
#if !defined(offsetof) && defined(_KERNEL)
#define offsetof(s, e) ((size_t)&((s *)0)->e)
@


1.27.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.27.2.1 2001/05/14 22:45:03 niklas Exp $	*/
d127 21
d214 1
a214 1
 * Constraints: PAGE_SIZE <= MAXALLOCSAVE <= 2 ** (MINBUCKET + 14), and
d218 1
a218 1
#define MAXALLOCSAVE	(2 * PAGE_SIZE)
@


1.27.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.27.2.2 2001/07/04 11:00:25 niklas Exp $	*/
d48 2
a49 2
#define OpenBSD	200111		/* OpenBSD version (year & month). */
#define OpenBSD3_0 1		/* OpenBSD 3.0 */
d118 2
a119 4
#define	PRIMASK		0x0ff
#define	PCATCH		0x100	/* OR'd with pri for tsleep to check signals */
#define PNORELOCK	0x200	/* OR'd with pri for ltsleep to not relock
				   the interlock */
@


1.27.2.4
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a229 13

#ifdef _KERNEL
/*
 * Defaults for Unified Buffer Cache parameters.
 */

#ifndef UBC_WINSHIFT
#define UBC_WINSHIFT 13
#endif
#ifndef UBC_NWINS
#define UBC_NWINS 1024
#endif
#endif /* _KERNEL */
@


1.27.2.5
log
@Merge in trunk
@
text
@a160 7
/* Macros to set/clear/test flags. */
#ifdef _KERNEL
#define SET(t, f)	((t) |= (f))
#define CLR(t, f)	((t) &= ~(f))
#define ISSET(t, f)	((t) & (f))
#endif

d230 13
@


1.27.2.6
log
@Sync the SMP branch with 3.3
@
text
@d48 2
a49 2
#define OpenBSD	200305		/* OpenBSD version (year & month). */
#define OpenBSD3_3 1		/* OpenBSD 3.3 */
d55 1
a55 1
#define	NULL	0L
a97 1
#include <sys/limits.h>
d99 1
@


1.27.2.7
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.27.2.6 2003/03/28 00:41:30 niklas Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.27.2.8
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 2
a45 2
#define OpenBSD	200311		/* OpenBSD version (year & month). */
#define OpenBSD3_4 1		/* OpenBSD 3.4 */
@


1.27.2.9
log
@Merge with the trunk
@
text
@d44 2
a45 2
#define OpenBSD	200405		/* OpenBSD version (year & month). */
#define OpenBSD3_5 1		/* OpenBSD 3.5 */
d155 1
a155 1
#define MAXSYMLINKS	SYMLOOP_MAX
@


1.26
log
@Fix for NFS swap device.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.25 1999/09/23 08:25:01 deraadt Exp $	*/
d130 1
a130 1
 * CLSIZE pte's describing NBPG (from machine/machparam.h) pages each.
@


1.25
log
@move towards 2.6-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.24 1999/09/17 13:13:46 espie Exp $	*/
d125 2
a126 1

@


1.24
log
@Be thorough about NULL as __null for C++.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.23 1999/02/28 06:25:30 deraadt Exp $	*/
d48 2
a49 2
#define OpenBSD	199905		/* OpenBSD version (year & month). */
#define OpenBSD2_5 1		/* OpenBSD 2.5 */
@


1.23
log
@moving to 2.5-beta
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.22 1999/01/11 20:44:02 niklas Exp $	*/
d52 3
d56 1
@


1.22
log
@Correct comment about RFNOWAIT
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 1998/11/11 17:57:34 deraadt Exp $	*/
d48 2
a49 2
#define OpenBSD	199812		/* OpenBSD version (year & month). */
#define OpenBSD2_4 1		/* OpenBSD 2.4 */
@


1.21
log
@define OpenBSD2_4 and date properly
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 1998/07/15 23:12:55 deraadt Exp $	*/
d237 1
a237 1
#define RFNOWAIT	(1<<6)	/* UNIMPL parent need not wait() on child */ 
@


1.20
log
@move NZERO for XPG3; kleink
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 1998/03/07 22:41:37 deraadt Exp $	*/
d48 2
a49 2
#define OpenBSD	199806		/* OpenBSD version (year & month). */
#define OpenBSD2_3 1		/* OpenBSD 2.3 */
@


1.19
log
@moving towards 2.3 now
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18 1997/11/06 05:59:10 csapuntz Exp $	*/
a115 2

#define	NZERO	0		/* default "nice" */
@


1.18
log
@Updates for VFS Lite 2 + soft update.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 1997/10/06 20:21:09 deraadt Exp $	*/
d48 2
a49 2
#define OpenBSD	199711		/* OpenBSD version (year & month). */
#define OpenBSD2_2 1		/* OpenBSD 2.2 */
@


1.17
log
@back out vfs lite2 till after 2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 1997/10/01 21:53:36 deraadt Exp $	*/
d57 1
@


1.16
log
@VFS Lite2 Changes
@
text
@a56 1
#include <sys/simplelock.h>
@


1.15
log
@2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 1997/09/11 16:09:57 kstailey Exp $	*/
d57 1
@


1.14
log
@activate sun3 SCSI DVMA
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 1997/05/22 06:55:59 deraadt Exp $	*/
d48 2
a49 2
#define OpenBSD	199706		/* OpenBSD version (year & month). */
#define OpenBSD2_1 1		/* OpenBSD 2.1 */
@


1.13
log
@OpenBSD2_1
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 1997/03/27 05:35:25 millert Exp $	*/
d159 1
d161 1
@


1.12
log
@Implement NOFILE_MAX--hard limit on max descriptors per proccess.
Future direction, might make sense to make this a kernel symbol tha
is sysctl-able.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 1996/10/25 11:14:45 deraadt Exp $	*/
d48 2
a49 2
#define OpenBSD	199610		/* OpenBSD version (year & month). */
#define OpenBSD2_0 1		/* OpenBSD 2.0 */
@


1.11
log
@i386 MAXBSIZE restriction goes away
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 1996/07/18 04:57:19 dm Exp $	*/
d74 2
a75 1
#define	NOFILE		OPEN_MAX	/* max open files per process */
@


1.10
log
@we are on the 2.0 path now
@
text
@d156 1
a156 1
 * it smaller make make some file systems unmountable.
a157 3
#if defined(__i386__)
#define	MAXBSIZE	16384		/* XXX MAXPHYS */
#else
a158 1
#endif
@


1.9
log
@Up NetBSD date for ipfilter and possibly more.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7 1996/04/18 21:41:03 niklas Exp $	*/
d48 2
a49 2
#define NetBSD	199606		/* NetBSD version (year & month). */
#define NetBSD1_2 1		/* NetBSD 1.2 */
@


1.8
log
@partial sync with netbsd 960418, more to come
@
text
@d48 2
a49 2
#define NetBSD	199603		/* NetBSD version (year & month). */
#define NetBSD1_1 3		/* NetBSD 1.1B */
@


1.7
log
@Merge of NetBSD 960317
@
text
@d1 2
a2 2
/*	$OpenBSD: param.h,v 1.6 1996/03/19 21:10:48 mickey Exp $	*/
/*	$NetBSD: param.h,v 1.21 1996/03/16 05:35:45 thorpej Exp $	*/
d49 1
a49 1
#define NetBSD1_1 2		/* NetBSD 1.1A */
@


1.6
log
@Merging w/ NetBSD 021796.
speaker upgraded to the current.
some changes to the VM stuff (ie kern_thread.c added and so).
@
text
@d1 2
a2 2
/*	$OpenBSD: param.h,v 1.5 1996/03/05 02:30:00 dm Exp $	*/
/*	$NetBSD: param.h,v 1.18.2.1 1995/10/12 05:42:01 jtc Exp $	*/
d48 2
a49 2
#define NetBSD	199511		/* NetBSD version (year & month). */
#define NetBSD1_1 1		/* NetBSD 1.1 */
@


1.5
log
@MAXBSIZE of 32768 breaks machines with 64 Megs of RAM
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.4 1996/03/03 12:12:06 niklas Exp $	*/
d55 1
a55 1
#ifndef LOCORE
@


1.4
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d159 1
a159 1
#define	MAXBSIZE	32768		/* XXX MAXPHYS */
@


1.3
log
@Use MAXPHYS for MAXBSIZE for all platforms but i386; use 32K on i386 until
pmap can be fixed
@
text
@d1 1
@


1.2
log
@plan9-like rfork() implimentation by me based on some earlier incomplete
work by rminnich@@Sarnoff.COM. still needs RFNOWAIT support.
@
text
@d157 5
a161 1
#define	MAXBSIZE	16384 /* XXX MAXPHYS */
@


1.1
log
@Initial revision
@
text
@d222 16
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

