head	1.9;
access;
symbols
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.2.0.20
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.18
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.16
	OPENBSD_5_0:1.2.0.14
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.12
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.10
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.8
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.6
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2014.08.22.23.05.15;	author krw;	state Exp;
branches;
next	1.8;
commitid	Brlni1H9a1B2EXRZ;

1.8
date	2013.10.24.07.34.56;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2013.09.14.01.35.02;	author guenther;	state Exp;
branches;
next	1.6;

1.6
date	2013.08.13.05.52.26;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2013.07.05.19.46.27;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2013.07.04.13.57.39;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2013.07.04.05.19.40;	author guenther;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.16.19.42.57;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.06.18.53.05;	author millert;	state Exp;
branches;
next	;


desc
@@


1.9
log
@POSIX/FreeBSD/NetBSD/Linux/etc agree -- blk[size|cnt]_t is the bomb.

So add the types blksize_t (a.k.a. int32_t) and blkcnt_t (a.k.a.
int64_t). Use blkcnt_t in stat.h since the base type (int64_t) does
not change. blksize_t in stat.h will follow after the tree is audited
for signed issues, since the base type will change from u_int32_t
to a POSIX compliant int32_t.

Guidance and feedback from guenther@@

ok millert@@
@
text
@/*	$OpenBSD: _types.h,v 1.8 2013/10/24 07:34:56 guenther Exp $	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)types.h	8.3 (Berkeley) 1/5/94
 */

#ifndef _SYS__TYPES_H_
#define	_SYS__TYPES_H_

#include <machine/_types.h>

typedef __int64_t	__blkcnt_t;	/* blocks allocated for file */
typedef __int32_t	__blksize_t;	/* optimal blocksize for I/O */
typedef	__int64_t	__clock_t;	/* ticks in CLOCKS_PER_SEC */
typedef	__int32_t	__clockid_t;	/* CLOCK_* identifiers */
typedef	unsigned long	__cpuid_t;	/* CPU id */
typedef	__int32_t	__dev_t;	/* device number */
typedef	__uint32_t	__fixpt_t;	/* fixed point number */
typedef	__uint64_t	__fsblkcnt_t;	/* file system block count */
typedef	__uint64_t	__fsfilcnt_t;	/* file system file count */
typedef	__uint32_t	__gid_t;	/* group id */
typedef	__uint32_t	__id_t;		/* may contain pid, uid or gid */
typedef	__uint32_t	__in_addr_t;	/* base type for internet address */
typedef	__uint16_t	__in_port_t;	/* IP port type */
typedef	__uint64_t	__ino_t;	/* inode number */
typedef	long		__key_t;	/* IPC key (for Sys V IPC) */
typedef	__uint32_t	__mode_t;	/* permissions */
typedef	__uint32_t	__nlink_t;	/* link count */
typedef	__int64_t	__off_t;	/* file offset or size */
typedef	__int32_t	__pid_t;	/* process id */
typedef	__uint64_t	__rlim_t;	/* resource limit */
typedef	__uint8_t	__sa_family_t;	/* sockaddr address family type */
typedef	__int32_t	__segsz_t;	/* segment size */
typedef	__uint32_t	__socklen_t;	/* length type for network syscalls */
typedef	long		__suseconds_t;	/* microseconds (signed) */
typedef	__int32_t	__swblk_t;	/* swap offset */
typedef	__int64_t	__time_t;	/* epoch time */
typedef	__int32_t	__timer_t;	/* POSIX timer identifiers */
typedef	__uint32_t	__uid_t;	/* user id */
typedef	__uint32_t	__useconds_t;	/* microseconds */

/*
 * mbstate_t is an opaque object to keep conversion state, during multibyte
 * stream conversions. The content must not be referenced by user programs.
 */
typedef union {
	char __mbstate8[128];
	__int64_t __mbstateL;			/* for alignment */
} __mbstate_t;

#endif /* !_SYS__TYPES_H_ */
@


1.8
log
@Align suseconds_t with POSIX: it's the type of the tv_usec member of timeval.
Use useconds_t in the ualarm() declaration.
Bump libstdc++ major to be sure there isn't ABI issues.

ok deraadt@@ jca@@ jmc@@ millert@@
ports testing by landry@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.7 2013/09/14 01:35:02 guenther Exp $	*/
d39 2
@


1.7
log
@Snapshots for all archs have been built, so remove the T32 code
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.6 2013/08/13 05:52:26 guenther Exp $	*/
d60 1
a60 1
typedef	__int32_t	__suseconds_t;	/* microseconds (signed) */
@


1.6
log
@Switch time_t, ino_t, clock_t, and struct kevent's ident and data
members to 64bit types.  Assign new syscall numbers for (almost
all) the syscalls that involve the affected types, including anything
with time_t, timeval, itimerval, timespec, rusage, dirent, stat,
or kevent arguments.  Add a d_off member to struct dirent and replace
getdirentries() with getdents(), thus immensely simplifying and
accelerating telldir/seekdir.  Build perl with -DBIG_TIME.

Bump the major on every single base library: the compat bits included
here are only good enough to make the transition; the T32 compat
option will be burned as soon as we've reached the new world are
are happy with the snapshots for all architectures.

DANGER: ABI incompatibility.  Updating to this kernel requires extra
work or you won't be able to login: install a snapshot instead.

Much assistance in fixing userland issues from deraadt@@ and tedu@@
and build assistance from todd@@ and otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.5 2013/07/05 19:46:27 guenther Exp $	*/
a49 1
typedef	__uint32_t	__ino32_t;	/* T32 */
a61 1
typedef	__int32_t	__time32_t;	/* T32 */
@


1.5
log
@Take II, this time without flubbing off_t: : move several internal
type definitions that are the same across all archs from
<machine/_types.h> to <sys/_types.h>

ok deraadt@@ kettenis@@ otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.4 2013/07/04 13:57:39 otto Exp $	*/
d39 1
a39 1
typedef	__int32_t	__clock_t;	/* ticks in CLOCKS_PER_SEC */
d50 2
a51 1
typedef	__uint32_t	__ino_t;	/* inode number */
d63 2
a64 1
typedef	__int32_t	__time_t;	/* epoch time */
@


1.4
log
@backout previous; off_t must be signed and there might be other C++ API
breakage lurking; ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.2 2008/03/16 19:42:57 otto Exp $	*/
d39 2
d44 2
d48 2
a49 2
typedef __uint32_t	__in_addr_t;	/* base type for internet address */
typedef __uint16_t	__in_port_t;	/* IP port type */
d54 1
d56 2
a57 2
typedef __uint64_t	__rlim_t;	/* resource limit */
typedef __uint8_t	__sa_family_t;	/* sockaddr address family type */
d59 2
a60 1
typedef __uint32_t	__socklen_t;	/* length type for network syscalls */
d62 2
a65 3
typedef	__int32_t	__suseconds_t;	/* microseconds (signed) */
typedef __uint64_t	__fsblkcnt_t;	/* file system block count */
typedef __uint64_t	__fsfilcnt_t;	/* file system file count */
@


1.3
log
@To ease future changes, move several internal type definitions that are
the same across all archs from <machine/_types.h> to <sys/_types.h>

ok deraadt@@
@
text
@a38 2
typedef	__int32_t	__clock_t;	/* ticks in CLOCKS_PER_SEC */
typedef	__int32_t	__clockid_t;	/* CLOCK_* identifiers */
a41 2
typedef	__uint64_t	__fsblkcnt_t;	/* file system block count */
typedef	__uint64_t	__fsfilcnt_t;	/* file system file count */
d44 2
a45 2
typedef	__uint32_t	__in_addr_t;	/* base type for internet address */
typedef	__uint16_t	__in_port_t;	/* IP port type */
a49 1
typedef	__uint64_t	__off_t;	/* file offset or size */
d51 2
a52 2
typedef	__uint64_t	__rlim_t;	/* resource limit */
typedef	__uint8_t	__sa_family_t;	/* sockaddr address family type */
d54 1
a54 2
typedef	__uint32_t	__socklen_t;	/* length type for network syscalls */
typedef	__int32_t	__suseconds_t;	/* microseconds (signed) */
a55 2
typedef	__int32_t	__time_t;	/* epoch time */
typedef	__int32_t	__timer_t;	/* POSIX timer identifiers */
d58 3
@


1.2
log
@Widen some struct statfs fields to support large filesystem stata
and add some to be able to support statvfs(2). Do the compat dance
to provide backward compatibility.  ok thib@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.1 2006/01/06 18:53:05 millert Exp $	*/
d39 2
d44 2
d48 2
a49 2
typedef __uint32_t	__in_addr_t;	/* base type for internet address */
typedef __uint16_t	__in_port_t;	/* IP port type */
d54 1
d56 2
a57 2
typedef __uint64_t	__rlim_t;	/* resource limit */
typedef __uint8_t	__sa_family_t;	/* sockaddr address family type */
d59 2
a60 1
typedef __uint32_t	__socklen_t;	/* length type for network syscalls */
d62 2
a65 3
typedef	__int32_t	__suseconds_t;	/* microseconds (signed) */
typedef __uint64_t	__fsblkcnt_t;	/* file system block count */
typedef __uint64_t	__fsfilcnt_t;	/* file system file count */
@


1.1
log
@Adapt things to use __type_t instead of _BSD_TYPE_T_
Add new sys/_types.h header
Include machine/_types.h or sys/_types.h where applicable
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d59 2
@

