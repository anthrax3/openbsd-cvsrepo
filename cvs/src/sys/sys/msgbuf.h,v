head	1.11;
access;
symbols
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.10.0.4
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.8.0.40
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.38
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.34
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.32
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.30
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.28
	OPENBSD_5_0:1.8.0.26
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.24
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.22
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.18
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.20
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.16
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.6
	UBC:1.4.0.10
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2016.06.23.13.15.21;	author bluhm;	state Exp;
branches;
next	1.10;
commitid	L950Tprx6pIQhkRL;

1.10
date	2015.01.13.18.51.27;	author kettenis;	state Exp;
branches;
next	1.9;
commitid	ZIGGFwm21iN1eeWB;

1.9
date	2015.01.13.10.07.58;	author mpf;	state Exp;
branches;
next	1.8;
commitid	IZ2rtJyRuzWF0F1j;

1.8
date	2005.04.14.21.58.50;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.23.28.21;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.03.21.19.08;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.13.04.05.13;	author millert;	state Exp;
branches
	1.4.10.1;
next	1.3;

1.3
date	2000.02.22.19.28.05;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.12.12.03;	author niklas;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	95.10.18.08.53.28;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.28;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2000.03.02.07.04.47;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2000.03.24.09.09.44;	author niklas;	state Exp;
branches;
next	1.2.16.3;

1.2.16.3
date	2002.03.28.14.52.01;	author niklas;	state Exp;
branches;
next	1.2.16.4;

1.2.16.4
date	2003.03.28.00.41.30;	author niklas;	state Exp;
branches;
next	1.2.16.5;

1.2.16.5
date	2003.06.07.11.09.07;	author ho;	state Exp;
branches;
next	;

1.4.10.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	1.4.10.2;

1.4.10.2
date	2002.10.29.00.36.49;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@It is annoying that the dmesg buffer can overflow and loose messages
undetected during debugging.  To make clear what happens, count the
dropped bytes and write message buffer full to syslogd.  This also
helps to have a reliable log system.
OK deraadt@@ millert@@ tedu@@
@
text
@/*	$OpenBSD: msgbuf.h,v 1.10 2015/01/13 18:51:27 kettenis Exp $	*/
/*	$NetBSD: msgbuf.h,v 1.8 1995/03/26 20:24:27 jtc Exp $	*/

/*
 * Copyright (c) 1981, 1984, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)msgbuf.h	8.1 (Berkeley) 6/2/93
 */

struct	msgbuf {
#define	MSG_MAGIC	0x063061
	long	msg_magic;
	long	msg_bufx;		/* write pointer */
	long	msg_bufr;		/* read pointer */
	long	msg_bufs;		/* real msg_bufc size (bytes) */
	long	msg_bufl;		/* # chars, <= msg_bufs */
	long	msg_bufd;		/* number of dropped bytes */
	char	msg_bufc[1];		/* buffer */
};
#ifdef _KERNEL
#define CONSBUFSIZE	(16 * 1024)	/* console message buffer size */
extern struct msgbuf *msgbufp;
extern struct msgbuf *consbufp;

void	initmsgbuf(caddr_t buf, size_t bufsize);
void	initconsbuf(void);
void	msgbuf_putchar(struct msgbuf *, const char c);
#endif
@


1.10
log
@Many architectures call initmsgbuf() really really early, before uvm is
initialized.  Calling malloc(9) at that point is not a good idea.  So
initialize consbuf later.

Fixes dmesg -s on sparc64 (and probably a few other architectures).

ok miod@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.9 2015/01/13 10:07:58 mpf Exp $	*/
d42 1
@


1.9
log
@Add dmesg -s support, to view the output of rc(8) system startup messages.
Help and feedback by Theo and Miod.
OK deraadt@@, manpage-ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.8 2005/04/14 21:58:50 krw Exp $	*/
d50 1
@


1.8
log
@Try to start log message buffer on a new line. Helps install scripts avoid
detecting phantom devices when scanning dmesg output.

Suggested by miod@@, ok deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.7 2003/06/02 23:28:21 millert Exp $	*/
d45 1
d47 1
d50 1
a50 1
void	msgbuf_putchar(const char c);
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.6 2002/07/03 21:19:08 miod Exp $	*/
d48 1
@


1.6
log
@Change all variables definitions (int foo) in sys/sys/*.h to variable
declarations (extern int foo), and compensate in the appropriate locations.
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.5 2002/03/14 01:27:14 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.4 2000/03/13 04:05:13 millert Exp $	*/
d49 1
a49 1
struct	msgbuf *msgbufp;
@


1.4
log
@Get rid of leading NULs in /kern/msgbuf.  If the msgbuf modified in between
reads at just the right time is is possible to get duplicate output but
in practice this is extremely rare.  Joint effort with Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.3 2000/02/22 19:28:05 deraadt Exp $	*/
d51 1
a51 1
void	initmsgbuf __P((caddr_t buf, size_t bufsize));
@


1.4.10.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.4 2000/03/13 04:05:13 millert Exp $	*/
d51 1
a51 1
void	initmsgbuf(caddr_t buf, size_t bufsize);
@


1.4.10.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.4.10.1 2002/06/11 03:32:33 art Exp $	*/
d49 1
a49 1
extern struct msgbuf *msgbufp;
@


1.3
log
@enlarge msgbuf, somewhat line netbsd did
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.2 1996/03/03 12:12:03 niklas Exp $	*/
d45 1
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a38 1
#define	MSG_BSIZE	(4096 - 3 * sizeof(long))
d44 2
a45 1
	char	msg_bufc[MSG_BSIZE];	/* buffer */
d49 2
@


1.2.16.1
log
@Sync with -current
@
text
@d39 1
d45 1
a45 2
	long	msg_bufs;		/* real msg_bufc size (bytes) */
	char	msg_bufc[1];		/* buffer */
a48 2

void	initmsgbuf __P((caddr_t buf, size_t bufsize));
@


1.2.16.2
log
@Sync with -current
@
text
@a44 1
	long	msg_bufl;		/* # chars, <= msg_bufs */
@


1.2.16.3
log
@Merge in -current from roughly a week ago
@
text
@d51 1
a51 1
void	initmsgbuf(caddr_t buf, size_t bufsize);
@


1.2.16.4
log
@Sync the SMP branch with 3.3
@
text
@d49 1
a49 1
extern struct msgbuf *msgbufp;
@


1.2.16.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: msgbuf.h,v 1.2.16.4 2003/03/28 00:41:30 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
