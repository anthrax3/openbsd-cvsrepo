head	1.14;
access;
symbols
	OPENBSD_6_1:1.14.0.4
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.13.0.12
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.8
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.10
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.6
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.11.0.18
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.16
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.14
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.12
	OPENBSD_5_0:1.11.0.10
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.8
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.6
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.4
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.10.0.4
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.9.0.2
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.30
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.28
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.26
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.5.0.24
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.22
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.20
	OPENBSD_2_8:1.5.0.18
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2016.09.02.18.11.28;	author tedu;	state Exp;
branches;
next	1.13;
commitid	rTRs82DQAsJjej88;

1.13
date	2013.12.16.18.46.39;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2013.12.15.21.09.48;	author naddy;	state Exp;
branches;
next	1.11;

1.11
date	2009.05.06.18.21.23;	author stevesk;	state Exp;
branches;
next	1.10;

1.10
date	2008.05.08.01.17.54;	author fgsch;	state Exp;
branches;
next	1.9;

1.9
date	2008.01.05.17.33.28;	author mbalmer;	state Exp;
branches;
next	1.8;

1.8
date	2006.06.01.20.10.28;	author mbalmer;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.27.19.30.28;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.28.22;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.03.06.07.06.47;	author tholo;	state Exp;
branches
	1.5.14.1;
next	1.4;

1.4
date	96.09.09.23.35.17;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	96.05.22.11.54.28;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.12.12.34;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.30;	author deraadt;	state Exp;
branches;
next	;

1.5.14.1
date	2003.06.07.11.09.08;	author ho;	state Exp;
branches;
next	;


desc
@@


1.14
log
@add a concept of 'verified auth' to sessions. When set via ioctl,
the user and parent process are recorded. Later, this info may be tested
and used to bypass authorization requirements.
ie, doas won't ask for your password again.
Great idea from henning.
ok deraadt guenther henning
@
text
@/*	$OpenBSD: ttycom.h,v 1.13 2013/12/16 18:46:39 millert Exp $	*/
/*	$NetBSD: ttycom.h,v 1.4 1996/05/19 17:17:53 jonathan Exp $	*/

/*-
 * Copyright (c) 1982, 1986, 1990, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)ttycom.h	8.1 (Berkeley) 3/28/94
 */

#ifndef	_SYS_TTYCOM_H_
#define	_SYS_TTYCOM_H_

#include <sys/ioccom.h>

/* Tty ioctl's. */

/*
 * Window/terminal size structure.  This information is stored by the kernel
 * in order to provide a consistent interface, but is not used by the kernel.
 */
struct winsize {
	unsigned short	ws_row;		/* rows, in characters */
	unsigned short	ws_col;		/* columns, in characters */
	unsigned short	ws_xpixel;	/* horizontal size, pixels */
	unsigned short	ws_ypixel;	/* vertical size, pixels */
};

struct tstamps {
	int	ts_set;		/* TIOCM_CAR and/or TIOCM_CTS */
	int	ts_clr;
};

#define		TIOCM_LE	0001		/* line enable */
#define		TIOCM_DTR	0002		/* data terminal ready */
#define		TIOCM_RTS	0004		/* request to send */
#define		TIOCM_ST	0010		/* secondary transmit */
#define		TIOCM_SR	0020		/* secondary receive */
#define		TIOCM_CTS	0040		/* clear to send */
#define		TIOCM_CAR	0100		/* carrier detect */
#define		TIOCM_CD	TIOCM_CAR
#define		TIOCM_RNG	0200		/* ring */
#define		TIOCM_RI	TIOCM_RNG
#define		TIOCM_DSR	0400		/* data set ready */
						/* 8-10 compat */
#define	TIOCEXCL	 _IO('t', 13)		/* set exclusive use of tty */
#define	TIOCNXCL	 _IO('t', 14)		/* reset exclusive use of tty */
						/* 15 unused */
#define	TIOCFLUSH	_IOW('t', 16, int)	/* flush buffers */
						/* 17-18 compat */
#define	TIOCGETA	_IOR('t', 19, struct termios) /* get termios struct */
#define	TIOCSETA	_IOW('t', 20, struct termios) /* set termios struct */
#define	TIOCSETAW	_IOW('t', 21, struct termios) /* drain output, set */
#define	TIOCSETAF	_IOW('t', 22, struct termios) /* drn out, fls in, set */
#define	TIOCGETD	_IOR('t', 26, int)	/* get line discipline */
#define	TIOCSETD	_IOW('t', 27, int)	/* set line discipline */
#define	TIOCSETVERAUTH	_IOW('t', 28, int)	/* set verified auth */
#define	TIOCCLRVERAUTH	 _IO('t', 29)		/* clear verified auth */
#define	TIOCCHKVERAUTH	 _IO('t', 30)		/* check verified auth */
						/* 127-124 compat */
#define	TIOCSBRK	 _IO('t', 123)		/* set break bit */
#define	TIOCCBRK	 _IO('t', 122)		/* clear break bit */
#define	TIOCSDTR	 _IO('t', 121)		/* set data terminal ready */
#define	TIOCCDTR	 _IO('t', 120)		/* clear data terminal ready */
#define	TIOCGPGRP	_IOR('t', 119, int)	/* get pgrp of tty */
#define	TIOCSPGRP	_IOW('t', 118, int)	/* set pgrp of tty */
						/* 117-116 compat */
#define	TIOCOUTQ	_IOR('t', 115, int)	/* output queue size */
#define	TIOCSTI		_IOW('t', 114, char)	/* simulate terminal input */
#define	TIOCNOTTY	 _IO('t', 113)		/* void tty association */
#define	TIOCPKT		_IOW('t', 112, int)	/* pty: set/clear packet mode */
#define		TIOCPKT_DATA		0x00	/* data packet */
#define		TIOCPKT_FLUSHREAD	0x01	/* flush packet */
#define		TIOCPKT_FLUSHWRITE	0x02	/* flush packet */
#define		TIOCPKT_STOP		0x04	/* stop output */
#define		TIOCPKT_START		0x08	/* start output */
#define		TIOCPKT_NOSTOP		0x10	/* no more ^S, ^Q */
#define		TIOCPKT_DOSTOP		0x20	/* now do ^S ^Q */
#define		TIOCPKT_IOCTL		0x40	/* state change of pty driver */
#define	TIOCSTOP	 _IO('t', 111)		/* stop output, like ^S */
#define	TIOCSTART	 _IO('t', 110)		/* start output, like ^Q */
#define	TIOCMSET	_IOW('t', 109, int)	/* set all modem bits */
#define	TIOCMBIS	_IOW('t', 108, int)	/* bis modem bits */
#define	TIOCMBIC	_IOW('t', 107, int)	/* bic modem bits */
#define	TIOCMGET	_IOR('t', 106, int)	/* get all modem bits */
#define	TIOCREMOTE	_IOW('t', 105, int)	/* remote input editing */
#define	TIOCGWINSZ	_IOR('t', 104, struct winsize)	/* get window size */
#define	TIOCSWINSZ	_IOW('t', 103, struct winsize)	/* set window size */
#define	TIOCUCNTL	_IOW('t', 102, int)	/* pty: set/clr usr cntl mode */
#define	TIOCSTAT	_IOW('t', 101, int)	/* generate status message */
#define		UIOCCMD(n)	_IO('u', n)	/* usr cntl op "n" */
#define	TIOCGSID	_IOR('t', 99, int)	/* get sid of tty */
#define	TIOCCONS	_IOW('t', 98, int)	/* become virtual console */
#define	TIOCSCTTY	 _IO('t', 97)		/* become controlling tty */
#define	TIOCEXT		_IOW('t', 96, int)	/* pty: external processing */
#define	TIOCSIG		_IOW('t', 95, int)	/* pty: generate signal */
#define	TIOCDRAIN	 _IO('t', 94)		/* wait till output drained */
#define	TIOCGFLAGS	_IOR('t', 93, int)	/* get device flags */
#define	TIOCSFLAGS	_IOW('t', 92, int)	/* set device flags */
#define		TIOCFLAG_SOFTCAR	0x01	/* ignore hardware carrier */
#define		TIOCFLAG_CLOCAL		0x02	/* set clocal on open */
#define		TIOCFLAG_CRTSCTS	0x04	/* set crtscts on open */
#define		TIOCFLAG_MDMBUF		0x08	/* set mdmbuf on open */
#define		TIOCFLAG_PPS		0x10	/* call hardpps on carrier up */
#define	TIOCGTSTAMP	_IOR('t', 91, struct timeval)	/* get timestamp */
#define	TIOCSTSTAMP	_IOW('t', 90, struct tstamps)	/* timestamp reasons */

/* Backwards compatibility */
#define	TIOCMODG	TIOCMGET
#define	TIOCMODS	TIOCMSET

#define	TTYDISC		0		/* termios tty line discipline */
#define	TABLDISC	3		/* tablet discipline */
#define	SLIPDISC	4		/* serial IP discipline */
#define	PPPDISC		5		/* ppp discipline */
#define	STRIPDISC	6		/* metricom wireless IP discipline */
#define	NMEADISC	7		/* NMEA0183 discipline */
#define	MSTSDISC	8		/* Meinberg time string discipline */
#define	ENDRUNDISC	9		/* EndRun time format discipline */

#endif /* !_SYS_TTYCOM_H_ */
@


1.13
log
@Restore TIOCGSID ioctl that was removed along with the 4.3BSD tty(4)
compat.  This will be used to implement tcgetsid() in the future.
OK kettenis@@ guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.12 2013/12/15 21:09:48 naddy Exp $	*/
d86 3
@


1.12
log
@update comment, 4.3BSD tty compatibility and the associated ioctls are gone
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.11 2009/05/06 18:21:23 stevesk Exp $	*/
d118 1
@


1.11
log
@endrun(4) - EndRun Technologies native time-of-day message timedelta
sensor.  Based on msts(4).  Tested with Praecis Ct
(http://www.endruntechnologies.com/network-time-source.htm).

help and feedback mbalmer
'no problem with this sensor going in' deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.10 2008/05/08 01:17:54 fgsch Exp $	*/
d45 1
a45 4
/*
 * Tty ioctl's except for those supported only for backwards compatibility
 * with the old tty driver.
 */
@


1.10
log
@fix TIOCSIG definition; from Hannah Schroeter <hannah at schlund dot de>
via tech. deraadt@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.9 2008/01/05 17:33:28 mbalmer Exp $	*/
d147 1
@


1.9
log
@Add support for the Meinberg Standard Time String format that all Meinberg
radio clocks can transmit over serial ports.  This is implemented as a
line discipline similar to nmea(4) and provides a timedelta sensor.

See http://www.meinberg.de/english/specs/timestr.htm for details on the
MSTS format.

ldattach(8) is extended to support the "msts" line discipline and two stopbits
(which some radio clocks, e.g. the C51 use).  Do a "make includes" before your
next system build.

Initially from Maurice Janssen based on nmea(4).  "go for it" deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.8 2006/06/01 20:10:28 mbalmer Exp $	*/
d124 1
a124 1
#define	TIOCSIG		 _IO('t', 95)		/* pty: generate signal */
@


1.8
log
@Add basic NMEA0183 support as a tty line discipline.  The line discipline
decodes NMEA messages completely transparent to userland applications, i.e.
userland can still use the NMEA stream and talk to the device.  If data
is received, a timedelta sensor suitable for ntpd is created.  The timestamp
is not very precise at the moment, use of this is experimental at best.

"get it in or we see how well the swiss people can swim" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.7 2006/04/27 19:30:28 deraadt Exp $	*/
d146 1
@


1.7
log
@create a (very simple) method for timestamping CTS & DCD events on ttys,
using ioctl TIOCSTSTAMP & TIOCGTSTAMP.  to be used later for gps monitoring
type things; ok kettenis miod
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.6 2003/06/02 23:28:22 millert Exp $	*/
d145 1
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.5 1997/03/06 07:06:47 tholo Exp $	*/
d61 5
d133 2
@


1.5
log
@Add control flag to call hardpps() on carrier change
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.4 1996/09/09 23:35:17 downsj Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.5.14.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.5 1997/03/06 07:06:47 tholo Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.4
log
@TIOCMOD{G,S} -> TIOCM{GET,SET}.  NetBSD PR#2741, Greg-Lindahl@@deshaw.com
@
text
@d1 1
a1 1
/*	$OpenBSD: ttycom.h,v 1.3 1996/05/22 11:54:28 deraadt Exp $	*/
d131 1
@


1.3
log
@add strip
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a64 2
#define	TIOCMODG	_IOR('t', 3, int)	/* get modem control state */
#define	TIOCMODS	_IOW('t', 4, int)	/* set modem control state */
d131 4
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d2 1
a2 1
/*	$NetBSD: ttycom.h,v 1.3 1994/06/29 06:45:55 cgd Exp $	*/
d138 1
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
