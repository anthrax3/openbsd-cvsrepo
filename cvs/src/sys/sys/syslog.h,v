head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.4
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.15.0.14
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.10
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.6
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.8
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.13.0.16
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.12
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.10
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.8
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.6
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.20
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.16
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.18
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.14
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.12
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.10
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.8
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.6
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.4
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.8
	UBC:1.6.0.2
	UBC_BASE:1.6
	OPENBSD_3_0:1.5.0.18
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.16
	OPENBSD_2_8:1.5.0.14
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.12
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.10
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.8
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.6
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.4
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2017.08.08.14.23.23;	author bluhm;	state Exp;
branches;
next	1.15;
commitid	mLHelEDyH1jZRa58;

1.15
date	2014.07.14.03.52.04;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	c77xFkzm2wveXKxW;

1.14
date	2014.07.10.08.55.35;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	pbN6jG3m5FuHrSxQ;

1.13
date	2010.10.19.19.01.05;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2006.01.06.18.53.06;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.08.24.01.27.07;	author avsm;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.23.28.22;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.26.19.20.33;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2002.10.06.14.50.26;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.24.08.16.42;	author jjbg;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	98.02.10.18.41.57;	author deraadt;	state Exp;
branches
	1.5.10.1;
next	1.4;

1.4
date	96.07.23.23.54.15;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.21.22.32.01;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.12.12.24;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.30;	author deraadt;	state Exp;
branches;
next	;

1.5.10.1
date	2001.10.31.03.30.30;	author nate;	state Exp;
branches;
next	1.5.10.2;

1.5.10.2
date	2002.03.28.14.52.02;	author niklas;	state Exp;
branches;
next	1.5.10.3;

1.5.10.3
date	2003.03.28.00.41.30;	author niklas;	state Exp;
branches;
next	1.5.10.4;

1.5.10.4
date	2003.06.07.11.09.08;	author ho;	state Exp;
branches;
next	1.5.10.5;

1.5.10.5
date	2004.02.19.11.01.34;	author niklas;	state Exp;
branches;
next	;

1.6.2.1
date	2002.06.11.03.32.34;	author art;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2002.10.29.00.36.49;	author art;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2003.05.19.22.32.36;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Kernel sendsyslog(2), libc syslog(3), and syslogd(8) restrict and
truncate the length of a syslog message to 8192 bytes.  Use one
global define LOG_MAXLINE for all of them.
OK deraadt@@ millert@@
@
text
@/*	$OpenBSD: syslog.h,v 1.15 2014/07/14 03:52:04 deraadt Exp $	*/
/*	$NetBSD: syslog.h,v 1.14 1996/04/03 20:46:44 christos Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)syslog.h	8.1 (Berkeley) 6/2/93
 */

#ifndef _SYS_SYSLOG_H_
#define _SYS_SYSLOG_H_

#define	_PATH_LOG	"/dev/log"

#define	LIOCSFD		_IOW('l', 127, int)	/* set sendsyslog() fd */

#define LOG_MAXLINE	8192			/* maximum line length */

/*
 * priorities/facilities are encoded into a single 32-bit quantity, where the
 * bottom 3 bits are the priority (0-7) and the top 28 bits are the facility
 * (0-big number).  Both the priorities and the facilities map roughly
 * one-to-one to strings in the syslogd(8) source code.  This mapping is
 * included in this file.
 *
 * priorities (these are ordered)
 */
#define	LOG_EMERG	0	/* system is unusable */
#define	LOG_ALERT	1	/* action must be taken immediately */
#define	LOG_CRIT	2	/* critical conditions */
#define	LOG_ERR		3	/* error conditions */
#define	LOG_WARNING	4	/* warning conditions */
#define	LOG_NOTICE	5	/* normal but significant condition */
#define	LOG_INFO	6	/* informational */
#define	LOG_DEBUG	7	/* debug-level messages */

#define	LOG_PRIMASK	0x07	/* mask to extract priority part (internal) */
				/* extract priority */
#define	LOG_PRI(p)	((p) & LOG_PRIMASK)

#ifdef SYSLOG_NAMES
#define	INTERNAL_NOPRI	0x10	/* the "no priority" priority */
				/* mark "facility" */
#define	INTERNAL_MARK	(LOG_NFACILITIES<<3)
typedef struct _code {
	char	*c_name;
	int	c_val;
} CODE;

CODE prioritynames[] = {
	{ "alert",	LOG_ALERT },
	{ "crit",	LOG_CRIT },
	{ "debug",	LOG_DEBUG },
	{ "emerg",	LOG_EMERG },
	{ "err",	LOG_ERR },
	{ "error",	LOG_ERR },		/* DEPRECATED */
	{ "info",	LOG_INFO },
	{ "none",	INTERNAL_NOPRI },	/* INTERNAL */
	{ "notice",	LOG_NOTICE },
	{ "panic", 	LOG_EMERG },		/* DEPRECATED */
	{ "warn",	LOG_WARNING },		/* DEPRECATED */
	{ "warning",	LOG_WARNING },
	{ NULL,		-1 },
};
#endif

/* facility codes */
#define	LOG_KERN	(0<<3)	/* kernel messages */
#define	LOG_USER	(1<<3)	/* random user-level messages */
#define	LOG_MAIL	(2<<3)	/* mail system */
#define	LOG_DAEMON	(3<<3)	/* system daemons */
#define	LOG_AUTH	(4<<3)	/* security/authorization messages */
#define	LOG_SYSLOG	(5<<3)	/* messages generated internally by syslogd */
#define	LOG_LPR		(6<<3)	/* line printer subsystem */
#define	LOG_NEWS	(7<<3)	/* network news subsystem */
#define	LOG_UUCP	(8<<3)	/* UUCP subsystem */
#define	LOG_CRON	(9<<3)	/* clock daemon */
#define	LOG_AUTHPRIV	(10<<3)	/* security/authorization messages (private) */
#define	LOG_FTP		(11<<3)	/* ftp daemon */

	/* other codes through 15 reserved for system use */
#define	LOG_LOCAL0	(16<<3)	/* reserved for local use */
#define	LOG_LOCAL1	(17<<3)	/* reserved for local use */
#define	LOG_LOCAL2	(18<<3)	/* reserved for local use */
#define	LOG_LOCAL3	(19<<3)	/* reserved for local use */
#define	LOG_LOCAL4	(20<<3)	/* reserved for local use */
#define	LOG_LOCAL5	(21<<3)	/* reserved for local use */
#define	LOG_LOCAL6	(22<<3)	/* reserved for local use */
#define	LOG_LOCAL7	(23<<3)	/* reserved for local use */

#define	LOG_NFACILITIES	24	/* current number of facilities */
#define	LOG_FACMASK	0x03f8	/* mask to extract facility part */
				/* facility of pri */
#define	LOG_FAC(p)	(((p) & LOG_FACMASK) >> 3)

#ifdef SYSLOG_NAMES
CODE facilitynames[] = {
	{ "auth",	LOG_AUTH },
	{ "authpriv",	LOG_AUTHPRIV },
	{ "cron", 	LOG_CRON },
	{ "daemon",	LOG_DAEMON },
	{ "ftp",	LOG_FTP },
	{ "kern",	LOG_KERN },
	{ "lpr",	LOG_LPR },
	{ "mail",	LOG_MAIL },
	{ "mark", 	INTERNAL_MARK },	/* INTERNAL */
	{ "news",	LOG_NEWS },
	{ "security",	LOG_AUTH },		/* DEPRECATED */
	{ "syslog",	LOG_SYSLOG },
	{ "user",	LOG_USER },
	{ "uucp",	LOG_UUCP },
	{ "local0",	LOG_LOCAL0 },
	{ "local1",	LOG_LOCAL1 },
	{ "local2",	LOG_LOCAL2 },
	{ "local3",	LOG_LOCAL3 },
	{ "local4",	LOG_LOCAL4 },
	{ "local5",	LOG_LOCAL5 },
	{ "local6",	LOG_LOCAL6 },
	{ "local7",	LOG_LOCAL7 },
	{ NULL,		-1 },
};
#endif

/* Used by reentrant functions */

struct syslog_data {
	int	log_stat;
	const char 	*log_tag;
	int 	log_fac;
	int 	log_mask;
};

#define SYSLOG_DATA_INIT {0, (const char *)0, LOG_USER, 0xff}

#ifdef _KERNEL
#define	LOG_PRINTF	-1	/* pseudo-priority to indicate use of printf */
#endif

/*
 * arguments to setlogmask.
 */
#define	LOG_MASK(pri)	(1 << (pri))		/* mask for one priority */
#define	LOG_UPTO(pri)	((1 << ((pri)+1)) - 1)	/* all priorities through pri */

/*
 * Option flags for openlog.
 *
 * LOG_ODELAY no longer does anything.
 * LOG_NDELAY is the inverse of what it used to be.
 */
#define	LOG_PID		0x01	/* log the pid with each message */
#define	LOG_CONS	0x02	/* log on the console if errors in sending */
#define	LOG_ODELAY	0x04	/* delay open until first syslog() (default) */
#define	LOG_NDELAY	0x08	/* don't delay open */
#define	LOG_NOWAIT	0x10	/* don't wait for console forks: DEPRECATED */
#define	LOG_PERROR	0x20	/* log to stderr as well */

#ifndef _KERNEL

/*
 * Don't use va_list in the vsyslog() prototype.   Va_list is typedef'd in two
 * places (<machine/varargs.h> and <machine/stdarg.h>), so if we include one
 * of them here we may collide with the utility's includes.  It's unreasonable
 * for utilities to have to include one of them to include syslog.h, so we get
 * __va_list from <machine/_types.h> and use it.
 */
#include <sys/cdefs.h>
#include <machine/_types.h>

__BEGIN_DECLS
void	closelog(void);
void	openlog(const char *, int, int);
int	setlogmask(int);
void	syslog(int, const char *, ...)
    __attribute__((__format__(__syslog__,2,3)));
void	vsyslog(int, const char *, __va_list);
void	closelog_r(struct syslog_data *);
void	openlog_r(const char *, int, int, struct syslog_data *);
int	setlogmask_r(int, struct syslog_data *);
void	syslog_r(int, struct syslog_data *, const char *, ...)
     __attribute__((__format__(__syslog__,3,4)));
void	vsyslog_r(int, struct syslog_data *, const char *, __va_list);
__END_DECLS

#else /* !_KERNEL */

void	logpri(int);
void	log(int, const char *, ...)
    __attribute__((__format__(__kprintf__,2,3)));
int	addlog(const char *, ...)
    __attribute__((__format__(__kprintf__,1,2)));
void	logwakeup(void);

#endif /* !_KERNEL */
#endif /* !_SYS_SYSLOG_H_ */

@


1.15
log
@Convert syslog_r(3) to using sendsyslog(2).  This ensures that syslog_r(3)
can be used anywhere (signal handler, stack protector fault handler) as
long as the format string does not contain floating point.
ok tedu miod beck
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.14 2014/07/10 08:55:35 deraadt Exp $	*/
d41 2
@


1.14
log
@Add new sendsyslog(const char *, size_t) system call which simply passes
a message up into syslogd's /dev/log interface.  This will be used to make
syslog_r work during file descriptor exhaustion, or inside sandboxes which
prohibit socket, connect, sendto, etc.
The system call is being added about a week before the library and daemon
changes.
ok guenther tedu miod matthew
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.13 2010/10/19 19:01:05 deraadt Exp $	*/
a149 3
	int	log_file;
	int	connected;
	int	opened;
d156 1
a156 1
#define SYSLOG_DATA_INIT {-1, 0, 0, 0, (const char *)0, LOG_USER, 0xff}
@


1.13
log
@Remove the LOG_MAKEPRI macro.  It has been broken (the << 3 is wrong) since
the dawn of time.  A few systems fixed^Hchanged it, thus breaking other code.
Since the usage of it is now a mess, the right path from here on out is to
*remove* the macro forever and cope with the (very minor) fallout.
ok guenther tedu millert sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.12 2006/01/06 18:53:06 millert Exp $	*/
d39 2
@


1.12
log
@Adapt things to use __type_t instead of _BSD_TYPE_T_
Add new sys/_types.h header
Include machine/_types.h or sys/_types.h where applicable
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.11 2003/08/24 01:27:07 avsm Exp $	*/
a60 1
#define	LOG_MAKEPRI(fac, pri)	(((fac) << 3) | (pri))
d65 1
a65 1
#define	INTERNAL_MARK	LOG_MAKEPRI(LOG_NFACILITIES, 0)
@


1.11
log
@sprinkle some __kprintf__ attributes around functions which use format
strings in the kernel to make gcc aware of the extra modifiers
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.10 2003/06/02 23:28:22 millert Exp $	*/
d190 1
a190 1
 * _BSD_VA_LIST_ from <machine/ansi.h> and use it.
a191 1
#include <machine/ansi.h>
d193 1
d201 1
a201 1
void	vsyslog(int, const char *, _BSD_VA_LIST_);
d207 1
a207 2
void	vsyslog_r(int, struct syslog_data *, const char *, 
     _BSD_VA_LIST_);
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.9 2003/02/26 19:20:33 espie Exp $	*/
d215 1
a215 1
    __kprintf_attribute__((__format__(__kprintf__,2,3)));
d217 1
a217 1
    __kprintf_attribute__((__format__(__kprintf__,1,2)));
@


1.9
log
@remove dependency upon NULL definition
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.8 2002/10/06 14:50:26 espie Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@use syslog format for syslog, now that release is past...
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.7 2002/03/14 01:27:14 millert Exp $	*/
d162 1
a162 1
#define SYSLOG_DATA_INIT {-1, 0, 0, 0, NULL, LOG_USER, 0xff}
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.6 2001/10/24 08:16:42 jjbg Exp $	*/
d204 1
a204 1
    __attribute__((__format__(__printf__,2,3)));
d210 1
a210 1
     __attribute__((__format__(__printf__,3,4)));
@


1.6
log
@syslog_r() implementation. deraadt@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.5 1998/02/10 18:41:57 deraadt Exp $	*/
d200 4
a203 4
void	closelog __P((void));
void	openlog __P((const char *, int, int));
int	setlogmask __P((int));
void	syslog __P((int, const char *, ...))
d205 5
a209 5
void	vsyslog __P((int, const char *, _BSD_VA_LIST_));
void	closelog_r __P((struct syslog_data *));
void	openlog_r __P((const char *, int, int, struct syslog_data *));
int	setlogmask_r __P((int, struct syslog_data *));
void	syslog_r __P((int, struct syslog_data *, const char *, ...))
d211 2
a212 2
void	vsyslog_r __P((int, struct syslog_data *, const char *, 
     _BSD_VA_LIST_));
d217 2
a218 2
void	logpri __P((int));
void	log __P((int, const char *, ...))
d220 1
a220 1
int	addlog __P((const char *, ...))
d222 1
a222 1
void	logwakeup __P((void));
@


1.6.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.6 2001/10/24 08:16:42 jjbg Exp $	*/
d200 4
a203 4
void	closelog(void);
void	openlog(const char *, int, int);
int	setlogmask(int);
void	syslog(int, const char *, ...)
d205 5
a209 5
void	vsyslog(int, const char *, _BSD_VA_LIST_);
void	closelog_r(struct syslog_data *);
void	openlog_r(const char *, int, int, struct syslog_data *);
int	setlogmask_r(int, struct syslog_data *);
void	syslog_r(int, struct syslog_data *, const char *, ...)
d211 2
a212 2
void	vsyslog_r(int, struct syslog_data *, const char *, 
     _BSD_VA_LIST_);
d217 2
a218 2
void	logpri(int);
void	log(int, const char *, ...)
d220 1
a220 1
int	addlog(const char *, ...)
d222 1
a222 1
void	logwakeup(void);
@


1.6.2.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.6.2.1 2002/06/11 03:32:34 art Exp $	*/
d204 1
a204 1
    __attribute__((__format__(__syslog__,2,3)));
d210 1
a210 1
     __attribute__((__format__(__syslog__,3,4)));
@


1.6.2.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d162 1
a162 1
#define SYSLOG_DATA_INIT {-1, 0, 0, 0, (const char *)0, LOG_USER, 0xff}
@


1.5
log
@Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.4 1996/07/23 23:54:15 deraadt Exp $	*/
d39 3
d150 14
d206 7
d225 2
@


1.5.10.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.5 1998/02/10 18:41:57 deraadt Exp $	*/
a38 3
#ifndef _SYS_SYSLOG_H_
#define _SYS_SYSLOG_H_

a146 14
/* Used by reentrant functions */

struct syslog_data {
	int	log_file;
	int	connected;
	int	opened;
	int	log_stat;
	const char 	*log_tag;
	int 	log_fac;
	int 	log_mask;
};

#define SYSLOG_DATA_INIT {-1, 0, 0, 0, NULL, LOG_USER, 0xff}

a188 7
void	closelog_r __P((struct syslog_data *));
void	openlog_r __P((const char *, int, int, struct syslog_data *));
int	setlogmask_r __P((int, struct syslog_data *));
void	syslog_r __P((int, struct syslog_data *, const char *, ...))
     __attribute__((__format__(__printf__,3,4)));
void	vsyslog_r __P((int, struct syslog_data *, const char *, 
     _BSD_VA_LIST_));
a200 2
#endif /* !_SYS_SYSLOG_H_ */

@


1.5.10.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d200 4
a203 4
void	closelog(void);
void	openlog(const char *, int, int);
int	setlogmask(int);
void	syslog(int, const char *, ...)
d205 5
a209 5
void	vsyslog(int, const char *, _BSD_VA_LIST_);
void	closelog_r(struct syslog_data *);
void	openlog_r(const char *, int, int, struct syslog_data *);
int	setlogmask_r(int, struct syslog_data *);
void	syslog_r(int, struct syslog_data *, const char *, ...)
d211 2
a212 2
void	vsyslog_r(int, struct syslog_data *, const char *, 
     _BSD_VA_LIST_);
d217 2
a218 2
void	logpri(int);
void	log(int, const char *, ...)
d220 1
a220 1
int	addlog(const char *, ...)
d222 1
a222 1
void	logwakeup(void);
@


1.5.10.3
log
@Sync the SMP branch with 3.3
@
text
@d162 1
a162 1
#define SYSLOG_DATA_INIT {-1, 0, 0, 0, (const char *)0, LOG_USER, 0xff}
d204 1
a204 1
    __attribute__((__format__(__syslog__,2,3)));
d210 1
a210 1
     __attribute__((__format__(__syslog__,3,4)));
@


1.5.10.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.5.10.3 2003/03/28 00:41:30 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.5.10.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d215 1
a215 1
    __attribute__((__format__(__kprintf__,2,3)));
d217 1
a217 1
    __attribute__((__format__(__kprintf__,1,2)));
@


1.4
log
@make printf/addlog return 0, for compat to userland
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.3 1996/04/21 22:32:01 deraadt Exp $	*/
d74 13
a86 13
	"alert",	LOG_ALERT,
	"crit",		LOG_CRIT,
	"debug",	LOG_DEBUG,
	"emerg",	LOG_EMERG,
	"err",		LOG_ERR,
	"error",	LOG_ERR,		/* DEPRECATED */
	"info",		LOG_INFO,
	"none",		INTERNAL_NOPRI,		/* INTERNAL */
	"notice",	LOG_NOTICE,
	"panic", 	LOG_EMERG,		/* DEPRECATED */
	"warn",		LOG_WARNING,		/* DEPRECATED */
	"warning",	LOG_WARNING,
	NULL,		-1,
d121 23
a143 23
	"auth",		LOG_AUTH,
	"authpriv",	LOG_AUTHPRIV,
	"cron", 	LOG_CRON,
	"daemon",	LOG_DAEMON,
	"ftp",		LOG_FTP,
	"kern",		LOG_KERN,
	"lpr",		LOG_LPR,
	"mail",		LOG_MAIL,
	"mark", 	INTERNAL_MARK,		/* INTERNAL */
	"news",		LOG_NEWS,
	"security",	LOG_AUTH,		/* DEPRECATED */
	"syslog",	LOG_SYSLOG,
	"user",		LOG_USER,
	"uucp",		LOG_UUCP,
	"local0",	LOG_LOCAL0,
	"local1",	LOG_LOCAL1,
	"local2",	LOG_LOCAL2,
	"local3",	LOG_LOCAL3,
	"local4",	LOG_LOCAL4,
	"local5",	LOG_LOCAL5,
	"local6",	LOG_LOCAL6,
	"local7",	LOG_LOCAL7,
	NULL,		-1,
@


1.3
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.2 1996/03/03 12:12:24 niklas Exp $	*/
d196 1
a196 1
void	addlog __P((const char *, ...))
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: syslog.h,v 1.10 1996/02/09 18:25:40 christos Exp $	*/
d186 2
a187 1
void	syslog __P((int, const char *, ...));
d194 4
a197 2
void	log __P((int, const char *, ...));
void	addlog __P((const char *, ...));
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: syslog.h,v 1.9 1995/03/26 20:24:51 jtc Exp $	*/
d195 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
