head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.38
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.36
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.32
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.30
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.28
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.26
	OPENBSD_5_0:1.4.0.24
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.22
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.20
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.16
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.18
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.14
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.12
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.10
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.8
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.6
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.2.0.18
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.16
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.14
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.12
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.10
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.8
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.2
	UBC_BASE:1.2
	SMP:1.1.0.4
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.01.14.21.15.36;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	TII3fryzJhm1a1iA;

1.4
date	2006.02.05.23.52.57;	author jakemsr;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.05.15.16.26;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2001.12.05.10.27.05;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.04.19.17.59;	author gluk;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.10.31.03.30.30;	author nate;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2002.03.06.02.17.13;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@This does not need <sys/param.h>.  <sys/types.h> is enough.
discussed with ratchov and sthen
@
text
@/* $OpenBSD: radioio.h,v 1.4 2006/02/05 23:52:57 jakemsr Exp $ */
/* $RuOBSD: radioio.h,v 1.4 2001/10/18 16:51:36 pva Exp $ */

/*
 * Copyright (c) 2001 Maxim Tsyplakov <tm@@oganer.net>,
 *                    Vladimir Popov <jumbo@@narod.ru>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _SYS_RADIOIO_H_
#define _SYS_RADIOIO_H_

#include <sys/types.h>

#define MIN_FM_FREQ	87500
#define MAX_FM_FREQ	108000

#define MIN_TV_CHAN	0
#define MAX_TV_CHAN	150

#define IF_FREQ	10700

struct radio_info {
	int	mute;
	int	volume;
	int	stereo;
	int	rfreq;	/* reference frequency */
	int	lock;	/* locking field strength during an automatic search */
	u_int32_t	freq;	/* in kHz */
	u_int32_t	caps;	/* card capabilities */
#define RADIO_CAPS_DETECT_STEREO	(1<<0)
#define RADIO_CAPS_DETECT_SIGNAL	(1<<1)
#define RADIO_CAPS_SET_MONO		(1<<2)
#define RADIO_CAPS_HW_SEARCH		(1<<3)
#define RADIO_CAPS_HW_AFC		(1<<4)
#define RADIO_CAPS_REFERENCE_FREQ	(1<<5)
#define RADIO_CAPS_LOCK_SENSITIVITY	(1<<6)
#define RADIO_CAPS_RESERVED1		(1<<7)
#define RADIO_CAPS_RESERVED2		(0xFF<<8)
#define RADIO_CARD_TYPE			(0xFF<<16)
	u_int32_t	info;
#define RADIO_INFO_STEREO		(1<<0)
#define RADIO_INFO_SIGNAL		(1<<1)
	u_int32_t	tuner_mode;
#define RADIO_TUNER_MODE_RADIO         (1<<0)
#define RADIO_TUNER_MODE_TV            (1<<1)
	u_int32_t	chan;
	u_int32_t	chnlset;
};

/* Radio device operations */
#define RIOCGINFO	_IOR('R', 21, struct radio_info) /* get info */
#define RIOCSINFO	_IOWR('R', 22, struct radio_info) /* set info */
#define RIOCSSRCH	_IOW('R', 23, int) /* search up/down */

#endif /* _SYS_RADIOIO_H_ */
@


1.4
log
@improve support for TV tuning via radio(4) by:
- adding a TV or radio mode flag to struct radio_info for radio(4)
  and a similar flag to struct TUNER for bktr(4) to make tuning
  mode explicit
- reporting the proper frequency when in TV mode
- documenting the mode flag and cleaning up some grammar

OK mickey@@, robert@@
@
text
@d1 1
a1 1
/* $OpenBSD: radioio.h,v 1.3 2005/12/05 15:16:26 robert Exp $ */
d33 1
a33 1
#include <sys/param.h>
@


1.3
log
@Add support to tune the channel and the channel sets via radio(4).

ok mickey@@
@
text
@d1 1
a1 1
/* $OpenBSD: radioio.h,v 1.2 2001/12/05 10:27:05 mickey Exp $ */
d64 3
@


1.2
log
@update for radio drivers from tm@@oganer.net und jumbo@@narod.ru
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d38 3
d64 2
@


1.1
log
@Device independent framework for FM-radio driver.

Work by Maxim Tsyplakov <tm@@oganer.net>,
        Vladimir Popov <jumbo@@narod.ru>
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/* $RuOBSD: radioio.h,v 1.3 2001/09/29 17:10:16 pva Exp $ */
d33 2
d40 8
d58 1
a58 1

d61 1
d64 3
a66 15
#define RIOCSMUTE	_IOW('R', 21, u_long) /* set mute/unmute */
#define RIOCGMUTE	_IOR('R', 21, u_long) /* get mute state */
#define RIOCGVOLU	_IOR('R', 22, u_long) /* get volume */
#define RIOCSVOLU	_IOW('R', 22, u_long) /* set volume */
#define RIOCGMONO	_IOR('R', 23, u_long) /* get mono/stereo */
#define RIOCSMONO	_IOW('R', 23, u_long) /* toggle mono/stereo */
#define RIOCGFREQ	_IOR('R', 24, u_long) /* get frequency (in kHz) */
#define RIOCSFREQ	_IOW('R', 24, u_long) /* set frequency (in kHz) */
#define RIOCSSRCH	_IOW('R', 25, u_long) /* search up/down */
#define RIOCGCAPS	_IOR('R', 26, u_long) /* get card capabilities */
#define RIOCGINFO	_IOR('R', 27, u_long) /* get generic information */
#define RIOCSREFF	_IOW('R', 28, u_long) /* set reference frequency */
#define RIOCGREFF	_IOR('R', 28, u_long) /* get reference frequency */
#define RIOCSLOCK	_IOW('R', 29, u_long) /* set lock sensetivity */
#define RIOCGLOCK	_IOR('R', 29, u_long) /* get lock sensetivity */
@


1.1.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@@


1.1.4.2
log
@Merge in trunk
@
text
@d1 2
a2 2
/* $OpenBSD$ */
/* $RuOBSD: radioio.h,v 1.4 2001/10/18 16:51:36 pva Exp $ */
a32 2
#include <sys/param.h>

a37 8
struct radio_info {
	int	mute;
	int	volume;
	int	stereo;
	int	rfreq;	/* reference frequency */
	int	lock;	/* locking field strength during an automatic search */
	u_int32_t	freq;	/* in kHz */
	u_int32_t	caps;	/* card capabilities */
d48 1
a48 1
	u_int32_t	info;
a50 1
};
d53 15
a67 3
#define RIOCGINFO	_IOR('R', 21, struct radio_info) /* get info */
#define RIOCSINFO	_IOWR('R', 22, struct radio_info) /* set info */
#define RIOCSSRCH	_IOW('R', 23, int) /* search up/down */
@


