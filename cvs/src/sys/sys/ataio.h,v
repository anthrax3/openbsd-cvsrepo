head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.56
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.52
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.48
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.50
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.42
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.46
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.44
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.40
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.38
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.36
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.34
	OPENBSD_5_0:1.5.0.32
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.30
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.28
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.24
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.26
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.22
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.20
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.18
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.16
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.14
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.12
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.14
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.12
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.10
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2003.09.26.21.43.32;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.24.18.38.33;	author grange;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.22.18.28.06;	author grange;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.30.00.44.51;	author csapuntz;	state Exp;
branches;
next	1.1;

1.1
date	99.07.18.21.25.20;	author csapuntz;	state Exp;
branches
	1.1.4.1
	1.1.14.1;
next	;

1.1.4.1
date	2002.03.06.02.17.13;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.03.28.00.41.30;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2004.02.19.11.01.32;	author niklas;	state Exp;
branches;
next	;

1.1.14.1
date	2002.01.31.22.55.48;	author niklas;	state Exp;
branches;
next	1.1.14.2;

1.1.14.2
date	2003.05.19.22.32.19;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Typos: defintion -> definition, proccess -> process

There are more occurences hiding in binutils, lynx and afs but I am too
lazy to report them upstream at the moment.
@
text
@/*	$OpenBSD: ataio.h,v 1.4 2002/12/24 18:38:33 grange Exp $	*/
/*	$NetBSD: ataio.h,v 1.2 1998/11/23 22:58:23 kenh Exp $	*/

#ifndef _SYS_ATAIO_H_
#define _SYS_ATAIO_H_

#include <sys/types.h>
#include <sys/ioctl.h>

typedef struct	atareq {
	u_long	flags;		/* info about the request status and type */
	u_char	command;	/* command code */
	u_char	features;	/* feature modifier bits for command */
	u_char	sec_count;	/* sector count */
	u_char	sec_num;	/* sector number */
	u_char	head;		/* head number */
	u_short	cylinder;	/* cylinder/lba address */

	caddr_t	databuf;	/* pointer to I/O data buffer */
	u_long	datalen;	/* length of data buffer */
	int	timeout;	/* command timeout */
	u_char	retsts;		/* return status for the command */
	u_char	error;		/* error bits */
} atareq_t;

/* bit definitions for flags */
#define ATACMD_READ		0x00000001
#define ATACMD_WRITE		0x00000002
#define ATACMD_READREG		0x00000004

/* definitions for the return status (retsts) */
#define ATACMD_OK	0x00
#define ATACMD_TIMEOUT	0x01
#define ATACMD_ERROR	0x02
#define ATACMD_DF	0x03

#define ATAIOCCOMMAND	_IOWR('Q', 8, atareq_t)

typedef struct atagettrace {
	unsigned int	buf_size;	/* length of data buffer */
	void		*buf;		/* pointer to data buffer */
	unsigned int	bytes_copied;	/* number of bytes copied to buffer */
	unsigned int	bytes_left;	/* number of bytes left */
} atagettrace_t;

#define ATAIOGETTRACE	_IOWR('Q', 27, struct atagettrace)

#endif /* _SYS_ATAIO_H_ */
@


1.4
log
@cleanup; ok costa@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ataio.h,v 1.3 2002/12/22 18:28:06 grange Exp $	*/
d26 1
a26 1
/* bit defintions for flags */
@


1.3
log
@Define atagettrace_t type and use it instead of struct atagettrace.
ok costa@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ataio.h,v 1.2 2002/01/30 00:44:51 csapuntz Exp $	*/
d19 1
a19 1
	caddr_t	databuf;	/* Pointer to I/O data buffer */
d21 2
a22 2
	int	timeout;	/* Command timeout */
	u_char	retsts;		/* the return status for the command */
d40 4
a43 4
        unsigned int     buf_size;
        void   *buf;
        unsigned int     bytes_copied;
	unsigned int     bytes_left;
d46 1
a46 1
#define ATAIOGETTRACE   _IOWR('Q', 27, struct atagettrace)
@


1.2
log
@IOCTL for retrieving traces from the ATA subsystem
@
text
@d1 1
a1 1
/*	$OpenBSD: ataio.h,v 1.1 1999/07/18 21:25:20 csapuntz Exp $	*/
d39 1
a39 1
struct atagettrace {
d44 1
a44 1
};
@


1.1
log
@

Import of NetBSD ATA/IDE stuff.

Introduction of home-grown

To enable this stuff in your configuration, look at the NEWATA conf file
and go through

dev/isa/files.isa
dev/pci/files.pci
conf/files
arch/i386/conf/files.i386

and follow the instructions on commenting/uncommenting stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: ataio.h,v 1.2 1998/11/23 22:58:23 kenh Exp $	*/
d38 9
@


1.1.4.1
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a37 9

struct atagettrace {
        unsigned int     buf_size;
        void   *buf;
        unsigned int     bytes_copied;
	unsigned int     bytes_left;
};

#define ATAIOGETTRACE   _IOWR('Q', 27, struct atagettrace)
@


1.1.4.2
log
@Sync the SMP branch with 3.3
@
text
@d19 1
a19 1
	caddr_t	databuf;	/* pointer to I/O data buffer */
d21 2
a22 2
	int	timeout;	/* command timeout */
	u_char	retsts;		/* return status for the command */
d39 6
a44 6
typedef struct atagettrace {
	unsigned int	buf_size;	/* length of data buffer */
	void		*buf;		/* pointer to data buffer */
	unsigned int	bytes_copied;	/* number of bytes copied to buffer */
	unsigned int	bytes_left;	/* number of bytes left */
} atagettrace_t;
d46 1
a46 1
#define ATAIOGETTRACE	_IOWR('Q', 27, struct atagettrace)
@


1.1.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d26 1
a26 1
/* bit definitions for flags */
@


1.1.14.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: ataio.h,v 1.2 2002/01/30 00:44:51 csapuntz Exp $	*/
a37 9

struct atagettrace {
        unsigned int     buf_size;
        void   *buf;
        unsigned int     bytes_copied;
	unsigned int     bytes_left;
};

#define ATAIOGETTRACE   _IOWR('Q', 27, struct atagettrace)
@


1.1.14.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d19 1
a19 1
	caddr_t	databuf;	/* pointer to I/O data buffer */
d21 2
a22 2
	int	timeout;	/* command timeout */
	u_char	retsts;		/* return status for the command */
d39 6
a44 6
typedef struct atagettrace {
	unsigned int	buf_size;	/* length of data buffer */
	void		*buf;		/* pointer to data buffer */
	unsigned int	bytes_copied;	/* number of bytes copied to buffer */
	unsigned int	bytes_left;	/* number of bytes left */
} atagettrace_t;
d46 1
a46 1
#define ATAIOGETTRACE	_IOWR('Q', 27, struct atagettrace)
@


