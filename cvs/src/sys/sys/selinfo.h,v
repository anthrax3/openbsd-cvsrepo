head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.38
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.34
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.36
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.28
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.32
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.30
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.26
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.24
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.22
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.20
	OPENBSD_5_0:1.3.0.18
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.16
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.14
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.10
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.12
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.1.0.6
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2016.11.07.00.26.32;	author guenther;	state Exp;
branches;
next	1.3;
commitid	W7ztnDZwvjCaeQTS;

1.3
date	2007.07.25.23.11.53;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2007.03.24.16.01.22;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.21.18.16.46;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Split PID from TID, giving processes a PID unrelated to the TID of their
initial thread

ok jsing@@ kettenis@@
@
text
@/*	$OpenBSD: selinfo.h,v 1.3 2007/07/25 23:11:53 art Exp $	*/

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)select.h	8.2 (Berkeley) 1/4/94
 */

#ifndef _SYS_SELINFO_H_
#define	_SYS_SELINFO_H_

#include <sys/event.h>			/* for struct klist */

/*
 * Used to maintain information about processes that wish to be
 * notified when I/O becomes possible.
 */
struct selinfo {
	pid_t	si_seltid;	/* thread to be notified */
	struct	klist si_note;	/* kernel note list */
	short	si_flags;	/* see below */
};
#define	SI_COLL	0x0001		/* collision occurred */

#ifdef _KERNEL
struct proc;

void	selrecord(struct proc *selector, struct selinfo *);
void	selwakeup(struct selinfo *);
#endif

#endif /* !_SYS_SELINFO_H_ */
@


1.3
log
@Back out the tracking of procs in struct selinfo. There's one serious
bug in the code, but as soon as I try to fix it, it seems to trigger
some other bugs. Instead of trying to figure out what's going on
while everyone suffers, it's better to back out and figure out
the bugs outside the tree.
@
text
@d1 1
a1 1
/*	$OpenBSD: selinfo.h,v 1.1 2005/11/21 18:16:46 millert Exp $	*/
d44 1
a44 1
	pid_t	si_selpid;	/* process to be notified */
@


1.2
log
@Kill the horrible hack of storing the pid in struct selinfo.

Instead, keep the proc pointer in it and put the selinfo on a list
in struct proc in selrecord. Then clean up the list when leaving
sys_select and sys_poll.

miod@@ ok, testing by many, including Bobs spamd boxes.
@
text
@d44 3
a46 4
	struct proc *si_selproc;
	TAILQ_ENTRY(selinfo) si_list;	/* list of selinfo for a process */
	struct	klist si_note;		/* kernel note list */
	short	si_flags;		/* see below */
@


1.1
log
@Move contents of sys/select.h to sys/selinfo.h in preparation for a
userland-visible sys/select.h.  Consistent with what Net and Free do.
OK deraadt@@, tested with full ports build by naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: select.h,v 1.6 2003/06/02 23:28:21 millert Exp $	*/
d44 4
a47 3
	pid_t	si_selpid;	/* process to be notified */
	struct	klist si_note;	/* kernel note list */
	short	si_flags;	/* see below */
@

