head	1.47;
access;
symbols
	OPENBSD_6_1:1.47.0.2
	OPENBSD_6_1_BASE:1.47
	OPENBSD_6_0:1.44.0.4
	OPENBSD_6_0_BASE:1.44
	OPENBSD_5_9:1.44.0.2
	OPENBSD_5_9_BASE:1.44
	OPENBSD_5_8:1.43.0.4
	OPENBSD_5_8_BASE:1.43
	OPENBSD_5_7:1.42.0.2
	OPENBSD_5_7_BASE:1.42
	OPENBSD_5_6:1.41.0.4
	OPENBSD_5_6_BASE:1.41
	OPENBSD_5_5:1.39.0.4
	OPENBSD_5_5_BASE:1.39
	OPENBSD_5_4:1.37.0.2
	OPENBSD_5_4_BASE:1.37
	OPENBSD_5_3:1.35.0.2
	OPENBSD_5_3_BASE:1.35
	OPENBSD_5_2:1.32.0.6
	OPENBSD_5_2_BASE:1.32
	OPENBSD_5_1_BASE:1.32
	OPENBSD_5_1:1.32.0.4
	OPENBSD_5_0:1.32.0.2
	OPENBSD_5_0_BASE:1.32
	OPENBSD_4_9:1.31.0.12
	OPENBSD_4_9_BASE:1.31
	OPENBSD_4_8:1.31.0.10
	OPENBSD_4_8_BASE:1.31
	OPENBSD_4_7:1.31.0.6
	OPENBSD_4_7_BASE:1.31
	OPENBSD_4_6:1.31.0.8
	OPENBSD_4_6_BASE:1.31
	OPENBSD_4_5:1.31.0.4
	OPENBSD_4_5_BASE:1.31
	OPENBSD_4_4:1.31.0.2
	OPENBSD_4_4_BASE:1.31
	OPENBSD_4_3:1.30.0.6
	OPENBSD_4_3_BASE:1.30
	OPENBSD_4_2:1.30.0.4
	OPENBSD_4_2_BASE:1.30
	OPENBSD_4_1:1.30.0.2
	OPENBSD_4_1_BASE:1.30
	OPENBSD_4_0:1.29.0.4
	OPENBSD_4_0_BASE:1.29
	OPENBSD_3_9:1.29.0.2
	OPENBSD_3_9_BASE:1.29
	OPENBSD_3_8:1.26.0.6
	OPENBSD_3_8_BASE:1.26
	OPENBSD_3_7:1.26.0.4
	OPENBSD_3_7_BASE:1.26
	OPENBSD_3_6:1.26.0.2
	OPENBSD_3_6_BASE:1.26
	SMP_SYNC_A:1.25
	SMP_SYNC_B:1.25
	OPENBSD_3_5:1.23.0.2
	OPENBSD_3_5_BASE:1.23
	OPENBSD_3_4:1.21.0.2
	OPENBSD_3_4_BASE:1.21
	UBC_SYNC_A:1.18
	OPENBSD_3_3:1.18.0.6
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.18.0.4
	OPENBSD_3_2_BASE:1.18
	OPENBSD_3_1:1.18.0.2
	OPENBSD_3_1_BASE:1.18
	UBC_SYNC_B:1.18
	UBC:1.17.0.4
	UBC_BASE:1.17
	OPENBSD_3_0:1.17.0.2
	OPENBSD_3_0_BASE:1.17
	OPENBSD_2_9_BASE:1.16
	OPENBSD_2_9:1.16.0.6
	OPENBSD_2_8:1.16.0.4
	OPENBSD_2_8_BASE:1.16
	OPENBSD_2_7:1.16.0.2
	OPENBSD_2_7_BASE:1.16
	SMP:1.15.0.6
	SMP_BASE:1.15
	kame_19991208:1.15
	OPENBSD_2_6:1.15.0.4
	OPENBSD_2_6_BASE:1.15
	OPENBSD_2_5:1.15.0.2
	OPENBSD_2_5_BASE:1.15
	OPENBSD_2_4:1.12.0.4
	OPENBSD_2_4_BASE:1.12
	OPENBSD_2_3:1.12.0.2
	OPENBSD_2_3_BASE:1.12
	OPENBSD_2_2:1.10.0.4
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.10.0.2
	OPENBSD_2_1_BASE:1.10
	OPENBSD_2_0:1.9.0.2
	OPENBSD_2_0_BASE:1.9
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.47
date	2017.02.04.02.54.33;	author guenther;	state Exp;
branches;
next	1.46;
commitid	9csrCwph526pp6vy;

1.46
date	2016.09.12.19.41.20;	author guenther;	state Exp;
branches;
next	1.45;
commitid	rDEbJJHj0O4ilibK;

1.45
date	2016.08.27.05.14.42;	author guenther;	state Exp;
branches;
next	1.44;
commitid	0trSC5tZZuHHrOtV;

1.44
date	2015.09.04.23.47.09;	author daniel;	state Exp;
branches;
next	1.43;
commitid	IjaXQSJgyijL2fNX;

1.43
date	2015.07.20.23.55.27;	author uebayasi;	state Exp;
branches;
next	1.42;
commitid	q72RNCJNEtUK5VIM;

1.42
date	2014.08.22.23.05.15;	author krw;	state Exp;
branches;
next	1.41;
commitid	Brlni1H9a1B2EXRZ;

1.41
date	2014.07.12.16.25.08;	author guenther;	state Exp;
branches;
next	1.40;
commitid	r9gXh8PA6rI3P7q2;

1.40
date	2014.03.11.19.45.28;	author guenther;	state Exp;
branches;
next	1.39;

1.39
date	2013.09.14.01.35.02;	author guenther;	state Exp;
branches;
next	1.38;

1.38
date	2013.08.13.05.52.27;	author guenther;	state Exp;
branches;
next	1.37;

1.37
date	2013.06.17.19.11.54;	author guenther;	state Exp;
branches;
next	1.36;

1.36
date	2013.06.11.16.42.18;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2013.01.09.12.17.38;	author jsg;	state Exp;
branches;
next	1.34;

1.34
date	2012.12.10.22.32.00;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2012.09.15.00.47.09;	author guenther;	state Exp;
branches;
next	1.32;

1.32
date	2011.03.19.18.26.06;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2008.03.16.19.42.57;	author otto;	state Exp;
branches;
next	1.30;

1.30
date	2006.10.03.19.49.06;	author pedro;	state Exp;
branches;
next	1.29;

1.29
date	2006.01.06.18.53.06;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	2005.12.13.00.35.23;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2005.11.21.18.16.46;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2004.07.13.21.04.29;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2004.06.08.18.19.00;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2004.06.08.18.11.28;	author marc;	state Exp;
branches;
next	1.23;

1.23
date	2003.12.11.23.02.30;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2003.12.11.22.55.22;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2003.08.19.23.42.46;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2003.06.26.17.07.01;	author jolan;	state Exp;
branches;
next	1.19;

1.19
date	2003.06.02.23.28.22;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2001.06.23.19.43.53;	author millert;	state Exp;
branches
	1.17.4.1;
next	1.16;

1.16
date	2000.02.22.17.29.12;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	99.02.15.18.53.57;	author millert;	state Exp;
branches
	1.15.6.1;
next	1.14;

1.14
date	99.01.07.23.38.59;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	99.01.07.05.35.22;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	97.11.30.18.50.18;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	97.11.06.01.25.47;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	97.04.20.20.47.33;	author tholo;	state Exp;
branches;
next	1.9;

1.9
date	96.05.28.12.16.28;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.04.21.22.32.15;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.04.18.21.41.17;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.03.24.18.07.58;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	96.03.23.19.13.11;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.03.19.21.10.49;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.03.03.12.12.36;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.30.08.29.46;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.30;	author deraadt;	state Exp;
branches;
next	;

1.15.6.1
date	2000.03.02.07.04.47;	author niklas;	state Exp;
branches;
next	1.15.6.2;

1.15.6.2
date	2001.07.04.11.00.36;	author niklas;	state Exp;
branches;
next	1.15.6.3;

1.15.6.3
date	2001.07.14.10.02.48;	author ho;	state Exp;
branches;
next	1.15.6.4;

1.15.6.4
date	2002.03.28.14.52.02;	author niklas;	state Exp;
branches;
next	1.15.6.5;

1.15.6.5
date	2003.06.07.11.09.08;	author ho;	state Exp;
branches;
next	1.15.6.6;

1.15.6.6
date	2004.02.19.11.01.35;	author niklas;	state Exp;
branches;
next	1.15.6.7;

1.15.6.7
date	2004.06.08.21.07.30;	author niklas;	state Exp;
branches;
next	;

1.17.4.1
date	2002.06.11.03.32.34;	author art;	state Exp;
branches;
next	;


desc
@@


1.47
log
@Move the typedefs for in_{addr,port}_t from <sys/types.h> to
<netinet/in.h> and <arpa/inet.h>

ok and ports test naddy@@ (thanks!)
ok krw@@ beck@@ millert@@
@
text
@/*	$OpenBSD: types.h,v 1.46 2016/09/12 19:41:20 guenther Exp $	*/
/*	$NetBSD: types.h,v 1.29 1996/11/15 22:48:25 jtc Exp $	*/

/*-
 * Copyright (c) 1982, 1986, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)types.h	8.4 (Berkeley) 1/21/94
 */

#ifndef _SYS_TYPES_H_
#define	_SYS_TYPES_H_

#include <sys/cdefs.h>
#if __BSD_VISIBLE
#include <sys/endian.h>
#else
#include <sys/_endian.h>
#endif

#if __BSD_VISIBLE
typedef	unsigned char	u_char;
typedef	unsigned short	u_short;
typedef	unsigned int	u_int;
typedef	unsigned long	u_long;

typedef unsigned char	unchar;		/* Sys V compatibility */
typedef	unsigned short	ushort;		/* Sys V compatibility */
typedef	unsigned int	uint;		/* Sys V compatibility */
typedef unsigned long	ulong;		/* Sys V compatibility */

typedef	__cpuid_t	cpuid_t;	/* CPU id */
typedef	__register_t	register_t;	/* register-sized type */
#endif /* __BSD_VISIBLE */

/*
 * XXX The exact-width bit types should only be exposed if __BSD_VISIBLE
 *     but the rest of the includes are not ready for that yet.
 */
#ifndef	__BIT_TYPES_DEFINED__
#define	__BIT_TYPES_DEFINED__
#endif

#ifndef	_INT8_T_DEFINED_
#define	_INT8_T_DEFINED_
typedef	__int8_t		int8_t;
#endif

#ifndef	_UINT8_T_DEFINED_
#define	_UINT8_T_DEFINED_
typedef	__uint8_t		uint8_t;
#endif

#ifndef	_INT16_T_DEFINED_
#define	_INT16_T_DEFINED_
typedef	__int16_t		int16_t;
#endif

#ifndef	_UINT16_T_DEFINED_
#define	_UINT16_T_DEFINED_
typedef	__uint16_t		uint16_t;
#endif

#ifndef	_INT32_T_DEFINED_
#define	_INT32_T_DEFINED_
typedef	__int32_t		int32_t;
#endif

#ifndef	_UINT32_T_DEFINED_
#define	_UINT32_T_DEFINED_
typedef	__uint32_t		uint32_t;
#endif

#ifndef	_INT64_T_DEFINED_
#define	_INT64_T_DEFINED_
typedef	__int64_t		int64_t;
#endif

#ifndef	_UINT64_T_DEFINED_
#define	_UINT64_T_DEFINED_
typedef	__uint64_t		uint64_t;
#endif

/* BSD-style unsigned bits types */
typedef	__uint8_t	u_int8_t;
typedef	__uint16_t	u_int16_t;
typedef	__uint32_t	u_int32_t;
typedef	__uint64_t	u_int64_t;

/* quads, deprecated in favor of 64 bit int types */
typedef	__int64_t	quad_t;
typedef	__uint64_t	u_quad_t;

#if __BSD_VISIBLE
/* VM system types */
typedef __vaddr_t	vaddr_t;
typedef __paddr_t	paddr_t;
typedef __vsize_t	vsize_t;
typedef __psize_t	psize_t;
#endif /* __BSD_VISIBLE */

/* Standard system types */
typedef __blkcnt_t	blkcnt_t;	/* blocks allocated for file */
typedef __blksize_t	blksize_t;	/* optimal blocksize for I/O */
typedef	char *		caddr_t;	/* core address */
typedef	__int32_t	daddr32_t;	/* 32-bit disk address */
typedef	__int64_t	daddr_t;	/* 64-bit disk address */
typedef	__dev_t		dev_t;		/* device number */
typedef	__fixpt_t	fixpt_t;	/* fixed point number */
typedef	__gid_t		gid_t;		/* group id */
typedef	__id_t		id_t;		/* may contain pid, uid or gid */
typedef	__ino_t		ino_t;		/* inode number */
typedef	__key_t		key_t;		/* IPC key (for Sys V IPC) */
typedef	__mode_t	mode_t;		/* permissions */
typedef	__nlink_t	nlink_t;	/* link count */
typedef	__rlim_t	rlim_t;		/* resource limit */
typedef	__segsz_t	segsz_t;	/* segment size */
typedef	__swblk_t	swblk_t;	/* swap offset */
typedef	__uid_t		uid_t;		/* user id */
typedef	__useconds_t	useconds_t;	/* microseconds */
typedef	__suseconds_t	suseconds_t;	/* microseconds (signed) */
typedef	__fsblkcnt_t	fsblkcnt_t;	/* file system block count */
typedef	__fsfilcnt_t	fsfilcnt_t;	/* file system file count */

/*
 * The following types may be defined in multiple header files.
 */
#ifndef	_CLOCK_T_DEFINED_
#define	_CLOCK_T_DEFINED_
typedef	__clock_t	clock_t;
#endif

#ifndef	_CLOCKID_T_DEFINED_
#define	_CLOCKID_T_DEFINED_
typedef	__clockid_t	clockid_t;
#endif

#ifndef	_PID_T_DEFINED_
#define	_PID_T_DEFINED_
typedef	__pid_t		pid_t;
#endif

#ifndef	_SIZE_T_DEFINED_
#define	_SIZE_T_DEFINED_
typedef	__size_t	size_t;
#endif

#ifndef	_SSIZE_T_DEFINED_
#define	_SSIZE_T_DEFINED_
typedef	__ssize_t	ssize_t;
#endif

#ifndef	_TIME_T_DEFINED_
#define	_TIME_T_DEFINED_
typedef	__time_t	time_t;
#endif

#ifndef	_TIMER_T_DEFINED_
#define	_TIMER_T_DEFINED_
typedef	__timer_t	timer_t;
#endif

#ifndef	_OFF_T_DEFINED_
#define	_OFF_T_DEFINED_
typedef	__off_t		off_t;
#endif

/*
 * These belong in unistd.h, but are placed here too to ensure that
 * long arguments will be promoted to off_t if the program fails to
 * include that header or explicitly cast them to off_t.
 */
#if __BSD_VISIBLE && !defined(_KERNEL)
__BEGIN_DECLS
off_t	 lseek(int, off_t, int);
int	 ftruncate(int, off_t);
int	 truncate(const char *, off_t);
__END_DECLS
#endif /* __BSD_VISIBLE && !_KERNEL */

#if __BSD_VISIBLE
/* Major, minor numbers, dev_t's. */
#define	major(x)	((int32_t)(((u_int32_t)(x) >> 8) & 0xff))
#define	minor(x)	((int32_t)((x) & 0xff) | (((x) & 0xffff0000) >> 8))
#define	makedev(x,y)	((dev_t)((((x) & 0xff) << 8) | ((y) & 0xff) | (((y) & 0xffff00) << 8)))
#endif

#if defined(__STDC__) && defined(_KERNEL)
/*
 * Forward structure declarations for function prototypes.  We include the
 * common structures that cross subsystem boundaries here; others are mostly
 * used in the same place that the structure is defined.
 */
struct	proc;
struct	pgrp;
struct	ucred;
struct	rusage;
struct	file;
struct	buf;
struct	tty;
struct	uio;
#endif

#ifdef _KERNEL
#if defined(__GNUC__) || \
	(defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901)
/* Support for C99: type _Bool is already built-in. */
#define false	0
#define true	1

#else
/* `_Bool' type must promote to `int' or `unsigned int'. */
typedef enum {
	false = 0,
	true = 1
} _Bool;

/* And those constants must also be available as macros. */
#define	false	false
#define	true	true

#endif

/* User visible type `bool' is provided as a macro which may be redefined */
#define bool _Bool

/* Inform that everything is fine */
#define __bool_true_false_are_defined 1

#endif /* _KERNEL */

#endif /* !_SYS_TYPES_H_ */
@


1.46
log
@More #include cleanup per POSIX:
 - <sys/types.h>: don't pull in <sys/select.h>
 - <sys/select.h>: don't pull in <sys/time.h>, but rather declare timeval
   and timespec locally
 - <sys/time.h>: *do* always pull in <sys/select.h>
 - <sys/socket.h>: declare timeval if __BSD_VISIBLE for struct splice

Ports testing and fixed by ajacoutot@@
ok deraadt@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.45 2016/08/27 05:14:42 guenther Exp $	*/
a152 11

/*
 * XPG4.2 states that inclusion of <netinet/in.h> must pull these
 * in and that inclusion of <sys/socket.h> must pull in sa_family_t.
 * We put these here because there are other headers that require
 * these types and <sys/socket.h> and <netinet/in.h> will indirectly
 * include <sys/types.h>.
 * XXX - now that we have protected versions these should move.
 */
typedef __in_addr_t	in_addr_t;	/* base type for internet address */
typedef __in_port_t	in_port_t;	/* IP port type */
@


1.45
log
@qaddr_t is (now) dead

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.44 2015/09/04 23:47:09 daniel Exp $	*/
a225 4
#endif

#if __BSD_VISIBLE
#include <sys/select.h>	/* must be after type declarations */
@


1.44
log
@These days pcc defines __GNUC__ and we don't support gcc2. Also needed
for upcoming CompCert port.

Final version of the diff is from kettenis@@ with input from jsg@@ and tedu@@.

ok kettenis@@, jsg@@, "I agree" millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.43 2015/07/20 23:55:27 uebayasi Exp $	*/
a121 1
typedef	quad_t *	qaddr_t;
@


1.43
log
@Indent.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d250 3
a252 2
#if (defined(__GNUC__) && __GNUC__ >= 3) || defined(__PCC__)
/* Support for _C99: type _Bool is already built-in. */
@


1.42
log
@POSIX/FreeBSD/NetBSD/Linux/etc agree -- blk[size|cnt]_t is the bomb.

So add the types blksize_t (a.k.a. int32_t) and blkcnt_t (a.k.a.
int64_t). Use blkcnt_t in stat.h since the base type (int64_t) does
not change. blksize_t in stat.h will follow after the tree is audited
for signed issues, since the base type will change from u_int32_t
to a POSIX compliant int32_t.

Guidance and feedback from guenther@@

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.41 2014/07/12 16:25:08 guenther Exp $	*/
d146 1
a146 1
typedef __rlim_t	rlim_t;		/* resource limit */
@


1.41
log
@Tackle the endian.h mess.  Make it so that:
 * you can #include <sys/endian.h> instead of <machine/endian.h>,
   and ditto <endian.h>  (fixes code that pulls in <sys/endian.h> first)

 * those will always export the symbols that POSIX specified for
   <endian.h>, including the new {be,le}{16,32,64}toh() set.  c.f.
	http://austingroupbugs.net/view.php?id=162

   if __BSD_VISIBLE then you also get the symbols that our <machine/endian.h>
   currently exports (ntohs, NTOHS, dlg's bemtoh*, etc)

 * when doing POSIX compiles (not __BSD_VISIBLE), then <netinet/in.h> and
   <arpa/inet.h> will *stop* exporting the extra symbols like BYTE_ORDER
   and betoh*

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.40 2014/03/11 19:45:28 guenther Exp $	*/
d133 2
@


1.40
log
@lint is gone, and the 'lint' conditional was never in the implementation
namespace, so stop changing behavior when it's #defined

ok beck@@ krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.39 2013/09/14 01:35:02 guenther Exp $	*/
d43 6
a48 2
#include <sys/_types.h>
#include <machine/endian.h>
@


1.39
log
@Snapshots for all archs have been built, so remove the T32 code
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.38 2013/08/13 05:52:27 guenther Exp $	*/
d244 1
a244 1
#if (defined(__GNUC__) && __GNUC__ >= 3) || defined(__PCC__) || defined(lint)
@


1.38
log
@Switch time_t, ino_t, clock_t, and struct kevent's ident and data
members to 64bit types.  Assign new syscall numbers for (almost
all) the syscalls that involve the affected types, including anything
with time_t, timeval, itimerval, timespec, rusage, dirent, stat,
or kevent arguments.  Add a d_off member to struct dirent and replace
getdirentries() with getdents(), thus immensely simplifying and
accelerating telldir/seekdir.  Build perl with -DBIG_TIME.

Bump the major on every single base library: the compat bits included
here are only good enough to make the transition; the T32 compat
option will be burned as soon as we've reached the new world are
are happy with the snapshots for all architectures.

DANGER: ABI incompatibility.  Updating to this kernel requires extra
work or you won't be able to login: install a snapshot instead.

Much assistance in fixing userland issues from deraadt@@ and tedu@@
and build assistance from todd@@ and otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.37 2013/06/17 19:11:54 guenther Exp $	*/
a136 1
typedef	__ino32_t	ino32_t;	/* inode number */
a190 1
typedef	__time32_t	time32_t;
@


1.37
log
@Add support for the _POSIX_CPUTIME and _POSIX_THREAD_CPUTIME options,
including CLOCK_{PROCESS,THREAD}_CPUTIME_ID constants and
{clock,pthread}_getcpuclockid() functions.

Worked out at t2k13 with help from tedu@@ and matthew@@ and testing by aja@@
ok matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.36 2013/06/11 16:42:18 deraadt Exp $	*/
d137 1
d192 1
@


1.36
log
@final removal of daddr64_t.  daddr_t has been 64 bit for a long enough
test period; i think 3 years ago the last bugs fell out.
ok otto beck others
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.35 2013/01/09 12:17:38 jsg Exp $	*/
a139 1
typedef	__pid_t		pid_t;		/* process id */
d171 5
@


1.35
log
@add support for using c99 bool in the kernel based on our stdbool.h
ok deraadt@@ millert@@ espie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.34 2012/12/10 22:32:00 deraadt Exp $	*/
a131 1
typedef	__int64_t	daddr64_t;	/* 64-bit disk address */
@


1.34
log
@does not need cdefs.h
(it might come back if guenther and i cleanup the endian.h mess)
ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.33 2012/09/15 00:47:09 guenther Exp $	*/
d239 27
@


1.33
log
@Improve POSIX/SUS compliance of <netdb.h>, <sys/socket.h>, and <sys/un.h>.

Much ports testing of various versions by naddy@@ and jasper@@
ok matthew@@, miller@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.32 2011/03/19 18:26:06 deraadt Exp $	*/
a42 1
#include <sys/cdefs.h>
@


1.32
log
@move to 64-bit daddr_t; ports tree will follow i hope
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.31 2008/03/16 19:42:57 otto Exp $	*/
a161 2
typedef __sa_family_t	sa_family_t;	/* sockaddr address family type */
typedef __socklen_t	socklen_t;	/* length type for network syscalls */
@


1.31
log
@Widen some struct statfs fields to support large filesystem stata
and add some to be able to support statvfs(2). Do the compat dance
to provide backward compatibility.  ok thib@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.30 2006/10/03 19:49:06 pedro Exp $	*/
a130 1
typedef	__int32_t	daddr_t;	/* 32-bit disk address */
d132 1
@


1.30
log
@Introduce daddr64_t and use it for physical block numbers
Okay weingart@@, "I'm game with putting my name on it" dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.29 2006/01/06 18:53:06 millert Exp $	*/
d149 2
@


1.29
log
@Adapt things to use __type_t instead of _BSD_TYPE_T_
Add new sys/_types.h header
Include machine/_types.h or sys/_types.h where applicable
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.28 2005/12/13 00:35:23 millert Exp $	*/
d131 3
a133 1
typedef	__int32_t	daddr_t;	/* disk address */
@


1.28
log
@First step in include files overhaul.  Use __FOO_VISIBLE (as defined
in sys/cdefs.h) instead of _FOO_SOURCE.  Also fix several namespace
pollution issues, including the byte order defines.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.27 2005/11/21 18:16:46 millert Exp $	*/
d44 1
a44 2
#include <machine/types.h>
#include <machine/ansi.h>
d58 50
a107 1
typedef	unsigned long	cpuid_t;
d110 9
a118 2
typedef	u_int64_t	u_quad_t;	/* quads */
typedef	int64_t		quad_t;
d121 9
d131 16
a146 16
typedef	int32_t		daddr_t;	/* disk address */
typedef	int32_t		dev_t;		/* device number */
typedef	u_int32_t	fixpt_t;	/* fixed point number */
typedef	u_int32_t	gid_t;		/* group id */
typedef	u_int32_t	id_t;		/* may contain pid, uid or gid */
typedef	u_int32_t	ino_t;		/* inode number */
typedef	long		key_t;		/* IPC key (for Sys V IPC) */
typedef	u_int32_t	mode_t;		/* permissions */
typedef	u_int32_t	nlink_t;	/* link count */
typedef	int32_t		pid_t;		/* process id */
typedef u_quad_t	rlim_t;		/* resource limit */
typedef	int32_t		segsz_t;	/* segment size */
typedef	int32_t		swblk_t;	/* swap offset */
typedef	u_int32_t	uid_t;		/* user id */
typedef	u_int32_t	useconds_t;	/* microseconds */
typedef	int32_t		suseconds_t;	/* microseconds (signed) */
d153 2
a154 1
 * include <sys/types.h>.  Thus we are compliant without too many hoops.
d156 4
a159 4
typedef u_int32_t	in_addr_t;	/* base type for internet address */
typedef u_int16_t	in_port_t;	/* IP port type */
typedef u_int8_t	sa_family_t;	/* sockaddr address family type */
typedef u_int32_t	socklen_t;	/* length type for network syscalls */
d161 6
a166 3
#ifdef	_BSD_CLOCK_T_
typedef	_BSD_CLOCK_T_	clock_t;
#undef	_BSD_CLOCK_T_
d169 3
a171 3
#ifdef	_BSD_SIZE_T_
typedef	_BSD_SIZE_T_	size_t;
#undef	_BSD_SIZE_T_
d174 3
a176 3
#ifdef	_BSD_SSIZE_T_
typedef	_BSD_SSIZE_T_	ssize_t;
#undef	_BSD_SSIZE_T_
d179 3
a181 3
#ifdef	_BSD_TIME_T_
typedef	_BSD_TIME_T_	time_t;
#undef	_BSD_TIME_T_
d184 3
a186 3
#ifdef	_BSD_CLOCKID_T_
typedef	_BSD_CLOCKID_T_	clockid_t;
#undef	_BSD_CLOCKID_T_
d189 3
a191 3
#ifdef	_BSD_TIMER_T_
typedef	_BSD_TIMER_T_	timer_t;
#undef	_BSD_TIMER_T_
d194 3
a196 3
#ifdef	_BSD_OFF_T_
typedef	_BSD_OFF_T_	off_t;
#undef	_BSD_OFF_T_
@


1.27
log
@Move contents of sys/select.h to sys/selinfo.h in preparation for a
userland-visible sys/select.h.  Consistent with what Net and Free do.
OK deraadt@@, tested with full ports build by naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.26 2004/07/13 21:04:29 millert Exp $	*/
d43 1
a43 1
/* Machine type dependent parameters. */
a44 1

d48 1
a48 1
#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
d136 1
a136 3
#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
#ifndef _KERNEL
#include <sys/cdefs.h>
d142 1
a142 2
#endif /* !_KERNEL */
#endif /* !defined(_POSIX_SOURCE) ... */
d144 1
a144 1
#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
d151 1
a151 1
#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
d153 1
a170 1
#endif /* !defined(_POSIX_SOURCE) ... */
@


1.26
log
@Change mode_t and nlink_t from 16bit to 32bit.  This allows us to
use mode_t in syscalls.master and to use mode_t in more places in
the kernel.  It also makes lint much more useful on kernel code.

I've also added a placeholder for st_birthtime to make a UFS2 import
easier at some future date.

Requested by and OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.25 2004/06/08 18:19:00 deraadt Exp $	*/
d156 1
a156 33
#define	NBBY	8		/* number of bits in a byte */

/*
 * Select uses bit masks of file descriptors in longs.  These macros
 * manipulate such bit fields (the filesystem macros use chars).
 * FD_SETSIZE may be defined by the user, but the default here should
 * be enough for most uses.
 */
#ifndef	FD_SETSIZE
#define	FD_SETSIZE	1024
#endif

typedef int32_t	fd_mask;
#define NFDBITS	(sizeof(fd_mask) * NBBY)	/* bits per mask */

#ifndef howmany
#define	howmany(x, y)	(((x) + ((y) - 1)) / (y))
#endif

typedef	struct fd_set {
	fd_mask	fds_bits[howmany(FD_SETSIZE, NFDBITS)];
} fd_set;

#define	FD_SET(n, p)	((p)->fds_bits[(n)/NFDBITS] |= (1 << ((n) % NFDBITS)))
#define	FD_CLR(n, p)	((p)->fds_bits[(n)/NFDBITS] &= ~(1 << ((n) % NFDBITS)))
#define	FD_ISSET(n, p)	((p)->fds_bits[(n)/NFDBITS] & (1 << ((n) % NFDBITS)))
#ifdef _KERNEL
#define	FD_COPY(f, t)	bcopy(f, t, sizeof(*(f)))
#define	FD_ZERO(p)	bzero(p, sizeof(*(p)))
#else
#define	FD_COPY(f, t)	memcpy(t, f, sizeof(*(f)))
#define	FD_ZERO(p)	memset(p, 0, sizeof(*(p)))
#endif
@


1.25
log
@fix
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.24 2004/06/08 18:11:28 marc Exp $	*/
d75 2
a76 2
typedef	u_int16_t	mode_t;		/* permissions */
typedef	u_int16_t	nlink_t;	/* link count */
@


1.24
log
@pull up cpuid_t define from smp branch.   Kill alpha specific defininition
of cpuid_t.  OK art@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.23 2003/12/11 23:02:30 millert Exp $	*/
a58 1
typedef	unsigned long	ulong;		/* Sys V compatibility */
@


1.23
log
@Add id_t type as per POSIX and use it for [gs]etpriority(2).
OK henning@@ and deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.22 2003/12/11 22:55:22 millert Exp $	*/
d59 3
@


1.22
log
@POSIX says rlim_t should be unsigned so make it u_quad_t.  Also add
POSIX-mandated RLIM_SAVED_MAX and RLIM_SAVED_CUR defines.  On OpenBSD
these are identical to RLIM_INFINITY as allowed by POSIX.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.21 2003/08/19 23:42:46 millert Exp $	*/
d70 1
@


1.21
log
@Crank FD_SETSIZE from 256 to 1024 by default.  Almost all users of
static fd_set have been changed to be dynamic or to use poll.
Note that some libraries in ports (specifically gtk) will complain
if clients are built with a different FD_SETSIZE from the library.
deraadt@@ OK.
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.20 2003/06/26 17:07:01 jolan Exp $	*/
d75 1
a75 1
typedef quad_t		rlim_t;		/* resource limit */
@


1.20
log
@fix typo in comment.  tedu@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.19 2003/06/02 23:28:22 millert Exp $	*/
d162 1
a162 1
#define	FD_SETSIZE	256
@


1.19
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.18 2002/03/14 01:27:14 millert Exp $	*/
d85 1
a85 1
 * We put there here because there are other headers that require
@


1.18
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.17 2001/06/23 19:43:53 millert Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.17
log
@Move to 24 bit minor numbers in a backwards compatible manner.
dev_t has been 32 bits for a long long time, now we can use those bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.16 2000/02/22 17:29:12 millert Exp $	*/
d142 3
a144 3
off_t	 lseek __P((int, off_t, int));
int	 ftruncate __P((int, off_t));
int	 truncate __P((const char *, off_t));
@


1.17.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.17 2001/06/23 19:43:53 millert Exp $	*/
d142 3
a144 3
off_t	 lseek(int, off_t, int);
int	 ftruncate(int, off_t);
int	 truncate(const char *, off_t);
@


1.16
log
@Use an _BSD_FOO_T_ type declaration for off_t in machine/ansi.h to allow
off_t to be visible in stdio.h even in strict ansi mode.  This is needed
for ftello()/fseeko() and it allows us to remove the horrible fpos_t hack.
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.15 1999/02/15 18:53:57 millert Exp $	*/
d152 2
a153 2
#define	minor(x)	((int32_t)((x) & 0xff))
#define	makedev(x,y)	((dev_t)(((x) << 8) | (y)))
@


1.15
log
@add socklen_t
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.14 1999/01/07 23:38:59 millert Exp $	*/
a77 1
typedef	quad_t		off_t;		/* file offset */
a97 23
/*
 * These belong in unistd.h, but are placed here too to ensure that
 * long arguments will be promoted to off_t if the program fails to
 * include that header or explicitly cast them to off_t.
 */
#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
#ifndef _KERNEL
#include <sys/cdefs.h>
__BEGIN_DECLS
off_t	 lseek __P((int, off_t, int));
int	 ftruncate __P((int, off_t));
int	 truncate __P((const char *, off_t));
__END_DECLS
#endif /* !_KERNEL */
#endif /* !defined(_POSIX_SOURCE) ... */

#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
/* Major, minor numbers, dev_t's. */
#define	major(x)	((int32_t)(((u_int32_t)(x) >> 8) & 0xff))
#define	minor(x)	((int32_t)((x) & 0xff))
#define	makedev(x,y)	((dev_t)(((x) << 8) | (y)))
#endif

d126 28
@


1.15.6.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d78 1
d99 23
a149 28
#endif

#ifdef	_BSD_OFF_T_
typedef	_BSD_OFF_T_	off_t;
#undef	_BSD_OFF_T_
#endif

/*
 * These belong in unistd.h, but are placed here too to ensure that
 * long arguments will be promoted to off_t if the program fails to
 * include that header or explicitly cast them to off_t.
 */
#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
#ifndef _KERNEL
#include <sys/cdefs.h>
__BEGIN_DECLS
off_t	 lseek __P((int, off_t, int));
int	 ftruncate __P((int, off_t));
int	 truncate __P((const char *, off_t));
__END_DECLS
#endif /* !_KERNEL */
#endif /* !defined(_POSIX_SOURCE) ... */

#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
/* Major, minor numbers, dev_t's. */
#define	major(x)	((int32_t)(((u_int32_t)(x) >> 8) & 0xff))
#define	minor(x)	((int32_t)((x) & 0xff))
#define	makedev(x,y)	((dev_t)(((x) << 8) | (y)))
@


1.15.6.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.15.6.1 2000/03/02 07:04:47 niklas Exp $	*/
d152 2
a153 2
#define	minor(x)	((int32_t)((x) & 0xff) | (((x) & 0xffff0000) >> 8))
#define	makedev(x,y)	((dev_t)((((x) & 0xff) << 8) | ((y) & 0xff) | (((y) & 0xffff00) << 8)))
@


1.15.6.3
log
@Initial import of some SMP code from NetBSD.
Not really working here yet, but there is some work in progress.
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.15.6.2 2001/07/04 11:00:36 niklas Exp $	*/
d62 1
a62 3
typedef	unsigned long	ulong;		/* Sys V compatibility */

typedef	unsigned long	cpuid_t;
@


1.15.6.4
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d144 3
a146 3
off_t	 lseek(int, off_t, int);
int	 ftruncate(int, off_t);
int	 truncate(const char *, off_t);
@


1.15.6.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.15.6.4 2002/03/28 14:52:02 niklas Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.15.6.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a71 1
typedef	u_int32_t	id_t;		/* may contain pid, uid or gid */
d77 1
a77 1
typedef u_quad_t	rlim_t;		/* resource limit */
d87 1
a87 1
 * We put these here because there are other headers that require
d164 1
a164 1
#define	FD_SETSIZE	1024
@


1.15.6.7
log
@sync to head
@
text
@d58 1
a58 1
typedef unsigned long	ulong;		/* Sys V compatibility */
@


1.14
log
@move uint*_t to machine/types.h
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.13 1999/01/07 05:35:22 deraadt Exp $	*/
d97 1
@


1.13
log
@uint*_t types from new POSIX, ick, yuck, bletch; cmetz
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.12 1997/11/30 18:50:18 millert Exp $	*/
a67 5

typedef u_int8_t       uint8_t;
typedef u_int16_t      uint16_t;
typedef u_int32_t      uint32_t;
typedef u_int64_t      uint64_t;
@


1.12
log
@Move in_addr_t and in_port_t to <sys/types.h> and add sa_family_t
and suseconds_t types for XPG4.2.
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.11 1997/11/06 01:25:47 millert Exp $	*/
d68 5
@


1.11
log
@XPG4.2 compat:
    1) usleep() and ualarm() use useconds_t not u_int
    2) usleep() returns an int
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.10 1997/04/20 20:47:33 tholo Exp $	*/
d85 12
@


1.10
log
@Add macros and types needed for POSIX 1003.1b timers
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.9 1996/05/28 12:16:28 deraadt Exp $	*/
d84 1
@


1.9
log
@thread changes
@
text
@d1 2
a2 2
/*	$OpenBSD: types.h,v 1.7 1996/04/18 21:41:17 niklas Exp $	*/
/*	$NetBSD: types.h,v 1.26 1996/04/09 20:55:47 cgd Exp $	*/
d126 10
@


1.8
log
@partial sync with netbsd 960418, more to come
@
text
@a84 6
#ifdef _KERNEL	/* XXX */
typedef	int	boolean_t;
#define	TRUE	1
#define	FALSE	0
#endif

a169 2
struct	thread;
struct	slock;
@


1.7
log
@Merge of NetBSD 960317
@
text
@d1 2
a2 2
/*	$OpenBSD: types.h,v 1.6 1996/03/24 18:07:58 tholo Exp $	*/
/*	$NetBSD: types.h,v 1.25 1996/03/15 19:54:53 jtc Exp $	*/
d93 1
a93 1
 * long arguments will be promoted to off_t if the program fails to 
@


1.6
log
@Move thread prototypes back to <sys/proc.h>
Duplicate boolean_t definition in <sys/types.h>, protected by _KERNEL
Only use boolean_t definition in <vm/vm_param.h> when not _KERNEL
Mark latter two with XXX
@
text
@d1 2
a2 2
/*	$OpenBSD: types.h,v 1.5 1996/03/23 19:13:11 tholo Exp $	*/
/*	$NetBSD: types.h,v 1.24 1995/12/29 01:15:13 jtc Exp $	*/
d53 1
a53 1
#ifndef _POSIX_SOURCE
d58 2
d62 1
d96 1
a96 1
#ifndef _POSIX_SOURCE
d105 1
a105 1
#endif /* !_POSIX_SOURCE */
d107 1
a107 1
#ifndef _POSIX_SOURCE
d134 1
a134 1
#ifndef _POSIX_SOURCE
d187 1
a187 1
#endif /* !_POSIX_SOURCE */
@


1.5
log
@Moved boolean_t back to vm_param.h; not protected by _KERNEL.  It needs to
be available to userland (libc, libkvm, others), but will break software if
defined in <sys/types.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.4 1996/03/19 21:10:49 mickey Exp $	*/
d81 6
@


1.4
log
@Merging w/ NetBSD 021796.
speaker upgraded to the current.
some changes to the VM stuff (ie kern_thread.c added and so).
@
text
@d1 1
a1 1
/*	$OpenBSD: types.h,v 1.3 1996/03/03 12:12:36 niklas Exp $	*/
a60 9

#ifdef	_KERNEL
/*
 * Boolean data type for use only kernel
 */
typedef	int	boolean_t;
#define	TRUE	1
#define	FALSE	0
#endif	/* _KERNEL */
@


1.3
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d62 9
d176 2
@


1.2
log
@from netbsd: use memcpy/memset for FD_COPY/FD_ZERO in userland
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: types.h,v 1.23 1995/05/28 03:06:34 jtc Exp $	*/
d151 1
d154 4
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
