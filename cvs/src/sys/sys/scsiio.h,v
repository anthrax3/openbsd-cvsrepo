head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.18
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.20
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.16
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.12
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.14
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.6
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.10
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.8
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.4
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.8
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.6
	OPENBSD_5_0:1.9.0.4
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.8.0.16
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.12
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.14
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.10
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.8
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.6
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.4
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.2
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.16
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.14
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.12
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.10
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.16
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.6
	UBC:1.5.0.14
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.12
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.10
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.4
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.12
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.10
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2012.09.05.17.17.47;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2010.11.16.19.54.58;	author jasper;	state Exp;
branches;
next	1.8;

1.8
date	2006.11.27.18.32.33;	author dlg;	state Exp;
branches;
next	1.7;

1.7
date	2006.07.23.02.50.20;	author dlg;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.27.23.40.31;	author tdeval;	state Exp;
branches;
next	1.5;

1.5
date	99.08.24.01.20.21;	author csapuntz;	state Exp;
branches
	1.5.4.1
	1.5.14.1;
next	1.4;

1.4
date	96.07.12.08.57.59;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	96.07.11.22.17.47;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.12.12.15;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.29;	author deraadt;	state Exp;
branches;
next	;

1.5.4.1
date	2003.03.28.00.41.30;	author niklas;	state Exp;
branches;
next	;

1.5.14.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@struct oscsi_addr is not used anymore
@
text
@/*	$OpenBSD: scsiio.h,v 1.9 2010/11/16 19:54:58 jasper Exp $	*/
/*	$NetBSD: scsiio.h,v 1.3 1994/06/29 06:45:09 cgd Exp $	*/

#ifndef _SYS_SCSIIO_H_
#define _SYS_SCSIIO_H_


#include <sys/types.h>
#include <sys/ioctl.h>

#define	SENSEBUFLEN 48
#define	CMDBUFLEN   16

typedef struct	scsireq {
	u_long	flags;		/* info about the request status and type */
	u_long	timeout;
	u_char	cmd[CMDBUFLEN];
	u_char	cmdlen;
	caddr_t	databuf;	/* address in user space of buffer */
	u_long	datalen;	/* size of user buffer (request) */
	u_long	datalen_used;	/* size of user buffer (used)*/
	u_char	sense[SENSEBUFLEN]; /* returned sense will be in here */
	u_char	senselen;	/* sensedata request size (MAX of SENSEBUFLEN)*/
	u_char	senselen_used;	/* return value only */
	u_char	status;		/* what the scsi status was from the adapter */
	u_char	retsts;		/* the return status for the command */
	int	error;		/* error bits */
} scsireq_t;

/* bit definitions for flags */
#define SCCMD_READ		0x00000001
#define SCCMD_WRITE		0x00000002
#define SCCMD_IOV		0x00000004
#define SCCMD_ESCAPE		0x00000010
#define SCCMD_TARGET		0x00000020


/* definitions for the return status (retsts) */
#define SCCMD_OK	0x00
#define SCCMD_TIMEOUT	0x01
#define SCCMD_BUSY	0x02
#define SCCMD_SENSE	0x03
#define SCCMD_UNKNOWN	0x04

#define SCIOCCOMMAND	_IOWR('Q', 1, scsireq_t)

#define SC_DB_CMDS	0x00000001	/* show all scsi cmds and errors */
#define SC_DB_FLOW	0x00000002	/* show routines entered	*/
#define SC_DB_FLOW2	0x00000004	/* show path INSIDE routines	*/
#define SC_DB_DMA	0x00000008	/* show DMA segments etc	*/
#define SCIOCDEBUG	_IOW('Q', 2, int)	/* from 0 to 15 */

struct scsi_addr {
	int     type;
#define TYPE_SCSI	0
#define TYPE_ATAPI	1
	int	scbus;		/* -1 if wildcard */
	int	target;		/* -1 if wildcard */
	int	lun;		/* -1 if wildcard */
};

#define SCIOCRESET	_IO('Q', 7)	/* reset the device */
#define SCIOCIDENTIFY	_IOR('Q', 9, struct scsi_addr) 

struct sbioc_device {
	void		*sd_cookie;
	int		sd_target;
	int		sd_lun;
};

#define SBIOCPROBE	_IOWR('Q', 127, struct sbioc_device)
#define SBIOCDETACH	_IOWR('Q', 128, struct sbioc_device)

#endif /* _SYS_SCSIIO_H_ */
@


1.9
log
@- add a define for CMDBUFLEN, and use it for scsireq.cmd

ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsiio.h,v 1.8 2006/11/27 18:32:33 dlg Exp $	*/
a51 6

struct	oscsi_addr {
	int	scbus;		/* -1 if wildcard */
	int	target;		/* -1 if wildcard */
	int	lun;		/* -1 if wildcard */
} ;
@


1.8
log
@add bio code to do hotplug of devices on the scsibus.

thumbs up deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsiio.h,v 1.7 2006/07/23 02:50:20 dlg Exp $	*/
d12 1
d17 1
a17 1
	u_char	cmd[16];	/* 12 is actually the max */
@


1.7
log
@remove some scsi ioctls, most importantly the ones that can reprobe the
bus. supporting these complicates the midlayer unnecessarily.

ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scsiio.h,v 1.6 2002/05/27 23:40:31 tdeval Exp $	*/
d69 9
@


1.6
log
@typos
@
text
@d1 1
a1 1
/*	$OpenBSD: scsiio.h,v 1.5 1999/08/24 01:20:21 csapuntz Exp $	*/
d60 2
a61 2
#define TYPE_SCSI 0
#define TYPE_ATAPI 1
a66 4
#define OSCIOCREPROBE	_IOW('Q', 3, struct oscsi_addr) /* look for new devs */
#define OSCIOCIDENTIFY  _IOR('Q', 4, struct oscsi_addr) 
#define SCIOCDECONFIG	_IO('Q', 5)	/* please disappear */
#define SCIOCRECONFIG	_IO('Q', 6)	/* please check again */
a67 1
#define	SCIOCREASSIGN	_IOW('Q', 8, int)	/* reassign block */
a68 1
#define SCIOCREPROBE    _IOW('Q', 10, struct scsi_addr)
@


1.5
log
@

Added type field to scsi_addr to reflect bus/device type (ATAPI or SCSI).
Updated ioctls to match

Minor patches in anticipation of wd->sd translation layer
@
text
@d1 1
a1 1
/*	$OpenBSD: scsiio.h,v 1.4 1996/07/12 08:57:59 pefo Exp $	*/
d29 1
a29 1
/* bit defintions for flags */
d69 1
a69 1
#define SCIOCDECONFIG	_IO('Q', 5)	/* please dissappear */
@


1.5.4.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d29 1
a29 1
/* bit definitions for flags */
d69 1
a69 1
#define SCIOCDECONFIG	_IO('Q', 5)	/* please disappear */
@


1.5.14.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: scsiio.h,v 1.5 1999/08/24 01:20:21 csapuntz Exp $	*/
d29 1
a29 1
/* bit definitions for flags */
d69 1
a69 1
#define SCIOCDECONFIG	_IO('Q', 5)	/* please disappear */
@


1.4
log
@Fixed wrong type of argument passing for SCIOCREASSIGN.
(thanks Theo).
@
text
@d1 1
a1 1
/*	$OpenBSD: scsiio.h,v 1.3 1996/07/11 22:17:47 pefo Exp $	*/
d52 1
a52 1
struct	scsi_addr {
d58 11
a68 2
#define SCIOCREPROBE	_IOW('Q', 3, struct scsi_addr) /* look for new devs */
#define SCIOCIDENTIFY	_IOR('Q', 4, struct scsi_addr) /* where are you? */
d73 2
@


1.3
log
@Make use of existing SCSI block reassign code.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 1
a63 1
#define	SCIOCREASSIGN	_IO('Q', 8)	/* reassign block */
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d63 1
a63 1

@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
