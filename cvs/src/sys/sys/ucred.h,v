head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.10
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.12
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.8
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.4
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.6.0.46
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.42
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.40
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.38
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.36
	OPENBSD_5_0:1.6.0.34
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2015.03.02.20.46.50;	author guenther;	state Exp;
branches;
next	1.10;
commitid	zq3ATDtt3EFolfIj;

1.10
date	2015.01.15.23.58.39;	author deraadt;	state Exp;
branches;
next	1.9;
commitid	uaVcJKt7N5NmgpVV;

1.9
date	2014.04.18.11.51.17;	author guenther;	state Exp;
branches;
next	1.8;

1.8
date	2014.03.30.21.54.48;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2014.03.24.00.19.48;	author guenther;	state Exp;
branches;
next	1.6;

1.6
date	2003.08.15.20.32.20;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.23.28.22;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.04.19.02.21.57;	author deraadt;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	96.03.03.12.12.37;	author niklas;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	95.10.18.08.53.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.30;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2001.07.04.11.00.37;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2002.03.28.14.52.02;	author niklas;	state Exp;
branches;
next	1.2.16.3;

1.2.16.3
date	2003.06.07.11.09.08;	author ho;	state Exp;
branches;
next	1.2.16.4;

1.2.16.4
date	2004.02.19.11.01.35;	author niklas;	state Exp;
branches;
next	;

1.3.6.1
date	2002.06.11.03.32.34;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Return EINVAL if the creds supplied for NFS export have a cr_ngroups less
than zero or greater than NGROUPS_MAX

Fixes panic seen by henning@@
@
text
@/*	$OpenBSD: ucred.h,v 1.10 2015/01/15 23:58:39 deraadt Exp $	*/
/*	$NetBSD: ucred.h,v 1.12 1995/06/01 22:44:50 jtc Exp $	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)ucred.h	8.2 (Berkeley) 1/4/94
 */

#ifndef _SYS_UCRED_H_
#define	_SYS_UCRED_H_

#include <sys/syslimits.h>

/*
 * Credentials.
 */
struct ucred {
	u_int	cr_ref;			/* reference count */

/* The following fields are all copied by crset() */
#define	cr_startcopy	cr_uid
	uid_t	cr_uid;			/* effective user id */
	uid_t	cr_ruid;		/* Real user id. */
	uid_t	cr_svuid;		/* Saved effective user id. */
	gid_t	cr_gid;			/* effective group id */
	gid_t	cr_rgid;		/* Real group id. */
	gid_t	cr_svgid;		/* Saved effective group id. */
	short	cr_ngroups;		/* number of groups */
	gid_t	cr_groups[NGROUPS_MAX];	/* groups */
};
#define NOCRED ((struct ucred *)-1)	/* no credential available */
#define FSCRED ((struct ucred *)-2)	/* filesystem credential */

/*
 *  Userspace version, for use in syscalls arguments
 */
struct xucred {
	uid_t	cr_uid;			/* user id */
	gid_t	cr_gid;			/* group id */
	short	cr_ngroups;		/* number of groups */
	gid_t	cr_groups[NGROUPS_MAX];	/* groups */
};

#ifdef _KERNEL
#define	crhold(cr)	(cr)->cr_ref++

#define SUSER_NOACCT	0x1	/* don't mark accounting flags */

int		crfromxucred(struct ucred *, const struct xucred *);
void		crset(struct ucred *, const struct ucred *);
struct ucred	*crcopy(struct ucred *cr);
struct ucred	*crdup(struct ucred *cr);
void		crfree(struct ucred *cr);
struct ucred	*crget(void);
int		suser(struct proc *p, u_int flags);
int		suser_ucred(struct ucred *cred);

#endif /* _KERNEL */

#endif /* !_SYS_UCRED_H_ */
@


1.10
log
@include <sys/syslimits.h> to get access to (and then use) NGROUPS_MAX
discussed at length with guenther
ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.9 2014/04/18 11:51:17 guenther Exp $	*/
d75 1
a75 1
void		crfromxucred(struct ucred *, const struct xucred *);
@


1.9
log
@Have each thread keeps its own (counted!) reference to the process's ucreds
to avoid possible use-after-free references when swapping ids in threaded
processes.  "Do I have the right creds?" checks are always made with the
threads creds.

Inspired by FreeBSD and NetBSD
"right time" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.8 2014/03/30 21:54:48 guenther Exp $	*/
d38 2
d55 1
a55 1
	gid_t	cr_groups[NGROUPS];	/* groups */
d67 1
a67 1
	gid_t	cr_groups[NGROUPS];	/* groups */
@


1.8
log
@Eliminates struct pcred by moving the real and saved ugids into
struct ucred; struct process then directly links to the ucred

Based on a discussion at c2k10 or so before noting that FreeBSD and
NetBSD did this too.

ok matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.7 2014/03/24 00:19:48 guenther Exp $	*/
d43 3
d74 1
@


1.7
log
@Split the API: struct ucred remains the kernel internal structure while
struct xucred becomes the structure for syscalls (mount(2) and nfssvc(2)).

ok deraadt@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.6 2003/08/15 20:32:20 tedu Exp $	*/
d44 2
d47 2
@


1.6
log
@change arguments to suser.  suser now takes the process, and a flags
argument.  old cred only calls user suser_ucred.  this will allow future
work to more flexibly implement the idea of a root process.  looks like
something i saw in freebsd, but a little different.
use of suser_ucred vs suser in file system code should be looked at again,
for the moment semantics remain unchanged.
review and input from art@@  testing and further review miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.5 2003/06/02 23:28:22 millert Exp $	*/
d51 10
d66 1
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.4 2002/03/14 01:27:14 millert Exp $	*/
d54 2
d60 3
a62 1
int		suser(struct ucred *cred, u_short *acflag);
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.3 2001/04/19 02:21:57 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.3
log
@crank cr_ref to u_int; ref freebsd-current/378268, lambert; this is an expedient fix
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.2 1996/03/03 12:12:37 niklas Exp $	*/
d58 5
a62 5
struct ucred	*crcopy __P((struct ucred *cr));
struct ucred	*crdup __P((struct ucred *cr));
void		crfree __P((struct ucred *cr));
struct ucred	*crget __P((void));
int		suser __P((struct ucred *cred, u_short *acflag));
@


1.3.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.3 2001/04/19 02:21:57 deraadt Exp $	*/
d58 5
a62 5
struct ucred	*crcopy(struct ucred *cr);
struct ucred	*crdup(struct ucred *cr);
void		crfree(struct ucred *cr);
struct ucred	*crget(void);
int		suser(struct ucred *cred, u_short *acflag);
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 1
a46 1
	u_short	cr_ref;			/* reference count */
@


1.2.16.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.2 1996/03/03 12:12:37 niklas Exp $	*/
d46 1
a46 1
	u_int	cr_ref;			/* reference count */
@


1.2.16.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d58 5
a62 5
struct ucred	*crcopy(struct ucred *cr);
struct ucred	*crdup(struct ucred *cr);
void		crfree(struct ucred *cr);
struct ucred	*crget(void);
int		suser(struct ucred *cred, u_short *acflag);
@


1.2.16.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ucred.h,v 1.2.16.2 2002/03/28 14:52:02 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2.16.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a53 2
#define SUSER_NOACCT	0x1	/* don't mark accounting flags */

d58 1
a58 3
int		suser(struct proc *p, u_int flags);
int		suser_ucred(struct ucred *cred);

@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
