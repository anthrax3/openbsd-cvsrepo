head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.2
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.6
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.14
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.12
	OPENBSD_5_0:1.4.0.10
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.8
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.6
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.22
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.20
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.18
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.34
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.32
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.30
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.28
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.26
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.24
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.22
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.09.17.06.09.08;	author guenther;	state Exp;
branches;
next	1.6;
commitid	GmbPmNTzamBLSHSK;

1.6
date	2015.05.05.02.13.46;	author guenther;	state Exp;
branches;
next	1.5;
commitid	dNPv28CJI5BxtRGW;

1.5
date	2013.01.15.01.34.27;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2009.03.05.19.52.24;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2003.10.30.21.38.09;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.12.11.28;	author niklas;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	95.10.18.08.53.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.26;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2004.02.19.11.01.32;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Document why <sys/core.h> is still needed
@
text
@/*	$OpenBSD: core.h,v 1.6 2015/05/05 02:13:46 guenther Exp $	*/
/*	$NetBSD: core.h,v 1.4 1994/10/29 08:20:14 cgd Exp $	*/

/*
 * Copyright (c) 1994 Paul Kranenburg
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Paul Kranenburg.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#define COREMAGIC	0507
#define CORESEGMAGIC	0510

/*
 * The core structure's c_midmag field (like exec's a_midmag) is a
 * network-byteorder encoding of this int
 *	FFFFFFmmmmmmmmmmMMMMMMMMMMMMMMMM
 * Where `F' is 6 bits of flag (currently unused),
 *       `m' is 10 bits of machine-id, and
 *       `M' is 16 bits worth of magic number, ie. COREMAGIC.
 * The macros below will set/get the needed fields.
 */
#define	CORE_GETMAGIC(c)  (  ntohl(((c).c_midmag))        & 0xffff )
#define	CORE_GETMID(c)    ( (ntohl(((c).c_midmag)) >> 16) & 0x03ff )
#define	CORE_GETFLAG(c)   ( (ntohl(((c).c_midmag)) >> 26) & 0x03f  )
#define	CORE_SETMAGIC(c,mag,mid,flag) ( (c).c_midmag = htonl ( \
			( ((flag) & 0x3f)   << 26) | \
			( ((mid)  & 0x03ff) << 16) | \
			( ((mag)  & 0xffff)      ) ) )

/* Flag definitions */
#define CORE_CPU	1
#define CORE_DATA	2
#define CORE_STACK	4

#ifndef _KERNEL
/*
 * XXX OBSOLETE, NO LONGER USED
 * XXX This header file exists to support binutils' netbsd-core format
 * XXX which is still needed for the a.out-m88k-openbsd use in luna88k
 * XXX boot block creation.
 *
 * A core file consists of a header followed by a number of segments.
 * Each segment is preceded by a `coreseg' structure giving the
 * segment's type, the virtual address where the bits resided in
 * process address space and the size of the segment.
 *
 * The core header specifies the lengths of the core header itself and
 * each of the following core segment headers to allow for any machine
 * dependent alignment requirements.
 */

struct core {
	u_int32_t c_midmag;		/* magic, id, flags */
	u_int16_t c_hdrsize;		/* Size of this header (machdep algn) */
	u_int16_t c_seghdrsize;		/* Size of a segment header */
	u_int32_t c_nseg;		/* # of core segments */
	char	c_name[MAXCOMLEN+1];	/* Copy of p->p_comm */
	u_int32_t c_signo;		/* Killing signal */
	u_long	c_ucode;		/* Hmm ? */
	u_long	c_cpusize;		/* Size of machine dependent segment */
	u_long	c_tsize;		/* Size of traditional text segment */
	u_long	c_dsize;		/* Size of traditional data segment */
	u_long	c_ssize;		/* Size of traditional stack segment */
};

struct coreseg {
	u_int32_t c_midmag;		/* magic, id, flags */
	u_long	c_addr;			/* Virtual address of segment */
	u_long	c_size;			/* Size of this segment */
};

#else
int	coredump_write(void *, enum uio_seg, const void *, size_t);
void	coredump_unmap(void *, vaddr_t, vaddr_t);
#endif
@


1.6
log
@emul_native is only used for kernel threads which can't dump core, so
delete coredump_trad(), uvm_coredump(), cpu_coredump(), struct md_coredump,
and various #includes that are superfluous.

This leaves compat_linux processes without a coredump callback.  If that
ability is desired, someone should update it to use coredump_elf32() and
verify the results...

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: core.h,v 1.5 2013/01/15 01:34:27 deraadt Exp $	*/
d62 4
@


1.5
log
@Slice & dice coredump write requests into MAXPHYS blocks, and
yield between operations.  Re-grab the vnode every operation,
so that multiple coredumps can be saved at the same time.
ok guenther beck etc
@
text
@d1 1
a1 1
/*	$OpenBSD: core.h,v 1.4 2009/03/05 19:52:24 kettenis Exp $	*/
d59 1
d61 1
d92 1
a92 3
#ifdef _KERNEL
int	coredump_trad(struct proc *, void *);

@


1.4
log
@Make ELF platforms generate ELF core dumps.  Somewhat based on code from
NetBSD.

ok kurt@@, drahn@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: core.h,v 1.3 2003/10/30 21:38:09 jmc Exp $	*/
d94 1
@


1.3
log
@preceeded -> preceded;
@
text
@d1 1
a1 1
/*	$OpenBSD: core.h,v 1.2 1996/03/03 12:11:28 niklas Exp $	*/
d89 6
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d61 1
a61 1
 * Each segment is preceeded by a `coreseg' structure giving the
@


1.2.16.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d61 1
a61 1
 * Each segment is preceded by a `coreseg' structure giving the
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
