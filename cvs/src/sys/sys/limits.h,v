head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.20
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.22
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.18
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.14
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.16
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.8
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.12
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.10
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.6
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.4
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.2
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.10
	OPENBSD_5_0:1.8.0.8
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.12
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.6
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.14
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.12
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.10
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	SMP:1.4.0.8
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	UBC_SYNC_B:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	UBC:1.4.0.2;
locks; strict;
comment	@ * @;


1.10
date	2012.06.30.20.21.10;	author guenther;	state Exp;
branches;
next	1.9;

1.9
date	2012.06.26.16.12.42;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2009.11.27.19.54.35;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.07.15.29.44;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.13.00.35.23;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.16.13.10.57;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.11.14.46.41;	author millert;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2002.04.24.22.32.57;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.24.21.57.09;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.24.21.53.12;	author espie;	state Exp;
branches;
next	;

1.4.2.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Further standards compliance fixes: export LONG_BIT, WORD_BIT, and
NL_{ARG,LANG,MSG,SET,TEXT}MAX with newer POSIX.
Hide {FLT,DBL}_{DIG,MAX,MIN} and {PASS,TMP,NL_N}_MAX with newer XPG.
Make _POSIX_NGROUPS_MAX and _POSIX_OPEN_MAX conditional on the POSIX
version, like _POSIX_TZNAME_MAX already is.
Add some more _POSIX_* and _XOPEN_* 'specified' limits.

ok kettenis@@
@
text
@/* $OpenBSD: limits.h,v 1.9 2012/06/26 16:12:42 deraadt Exp $ */
/*
 * Copyright (c) 2002 Marc Espie.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
 * PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef _SYS_LIMITS_H_
#define _SYS_LIMITS_H_

#include <sys/cdefs.h>

/* Common definitions for limits.h. */

/* Legacy */
#include <machine/limits.h>

#define	CHAR_BIT	8		/* number of bits in a char */

#define	SCHAR_MAX	0x7f		/* max value for a signed char */
#define SCHAR_MIN	(-0x7f-1)	/* min value for a signed char */

#define	UCHAR_MAX	0xff		/* max value for an unsigned char */
#ifdef __CHAR_UNSIGNED__
# define CHAR_MIN	0		/* min value for a char */
# define CHAR_MAX	0xff		/* max value for a char */
#else
# define CHAR_MAX	0x7f
# define CHAR_MIN	(-0x7f-1)
#endif

#define	MB_LEN_MAX	4		/* Allow UTF-8 (RFC 3629) */

#define	USHRT_MAX	0xffff		/* max value for an unsigned short */
#define	SHRT_MAX	0x7fff		/* max value for a short */
#define SHRT_MIN        (-0x7fff-1)     /* min value for a short */

#define	UINT_MAX	0xffffffffU	/* max value for an unsigned int */
#define	INT_MAX		0x7fffffff	/* max value for an int */
#define	INT_MIN		(-0x7fffffff-1)	/* min value for an int */

#ifdef __LP64__
# define ULONG_MAX	0xffffffffffffffffUL
					/* max value for unsigned long */
# define LONG_MAX	0x7fffffffffffffffL	
					/* max value for a signed long */
# define LONG_MIN	(-0x7fffffffffffffffL-1)	
					/* min value for a signed long */
#else
# define ULONG_MAX	0xffffffffUL	/* max value for an unsigned long */
# define LONG_MAX	0x7fffffffL	/* max value for a long */
# define LONG_MIN	(-0x7fffffffL-1)/* min value for a long */
#endif

#if __BSD_VISIBLE || __ISO_C_VISIBLE >= 1999
# define ULLONG_MAX	0xffffffffffffffffULL	
					/* max value for unsigned long long */
# define LLONG_MAX	0x7fffffffffffffffLL	
					/* max value for a signed long long */
# define LLONG_MIN	(-0x7fffffffffffffffLL-1)	
					/* min value for a signed long long */
#endif

#if __BSD_VISIBLE
# define UID_MAX	UINT_MAX	/* max value for a uid_t */
# define GID_MAX	UINT_MAX	/* max value for a gid_t */
#endif

#if __XPG_VISIBLE || __POSIX_VISIBLE >= 200809
# ifdef __LP64__
#  define LONG_BIT	64
# else
#  define LONG_BIT	32
# endif
# define WORD_BIT	32
#endif

#if __XPG_VISIBLE < 600
# include <machine/_float.h>

/* XSI defines marked LEGACY in XPG5 and removed in IEEE Std 1003.1-2001 */
# ifndef FLT_DIG
#   define FLT_DIG	__FLT_DIG
# endif
# ifndef FLT_MAX
#   define FLT_MAX	__FLT_MAX
# endif
# ifndef DBL_DIG
#   define DBL_DIG	__DBL_DIG
# endif
# ifndef DBL_MAX
#   define DBL_MAX	__DBL_MAX
# endif

/* XSI defines marked LEGACY in XPG4v2 and removed in XPG5 */
# if __XPG_VISIBLE < 500
#  ifndef FLT_MIN
#    define FLT_MIN	__FLT_MIN
#  endif
#  ifndef DBL_MIN
#    define DBL_MIN	__DBL_MIN
#  endif
# endif

#endif /* __XPG_VISIBLE < 600 */

#endif
@


1.9
log
@create new machine/_float.h which is namespace clean.  create a new
MI float.h which pulls in and defines the values that are needed from
there, and repair sys/limits.h so that it defines the values it needs
as well (depending on POSIX version, XPG version, etc).  guenther has
a more exact selection of that coming for limits.h.
this also fixes a few mistakes for the vax.
reviewed by kettenis and guenther.
@
text
@d1 1
a1 1
/* $OpenBSD: limits.h,v 1.8 2009/11/27 19:54:35 guenther Exp $ */
d87 1
a87 1
#if __XPG_VISIBLE
d94 1
d96 1
d99 1
d113 8
a120 5
# ifndef FLT_MIN
#   define FLT_MIN	__FLT_MIN
# endif
# ifndef DBL_MIN
#   define DBL_MIN	__DBL_MIN
d123 1
a123 1
#endif /* __XPG_VISIBLE */
@


1.8
log
@Move MB_LEN_MAX into the machine-independent sys/limits.h header,
rather than defining it separately for each architecture.
Also set it to 4, to accommodate for future UTF-8 support (rfc3629).

Diff by stsp, committing to catch the libc major bump

ok kettenis@@, guenther@@
@
text
@d1 1
a1 1
/* $OpenBSD: limits.h,v 1.7 2007/05/07 15:29:44 millert Exp $ */
a32 12
/*
 * <machine/internal_types.h> is meant to describe a specific architecture,
 * but to be a safe include, that doesn't ever define anything that is
 * user-visible (only typedefs and #define names that stays in the __xxx
 * namespace).
 *
 *   __machine_has_unsigned_chars	(default is signed chars)
 *   __FLT_xxx/__DBL_xxx		non standard values for floating
 *   					points limits.
 */
#include <machine/internal_types.h>

d42 1
a42 1
#ifdef __machine_has_unsigned_chars
a86 1

d95 9
a103 3
/* float.h defines these as well */
# if !defined(DBL_DIG)
#  if defined(__DBL_DIG)
d105 2
d108 1
a108 1
#   define DBL_MIN	__DBL_MIN
d110 1
a110 2
#   define FLT_DIG	__FLT_DIG
#   define FLT_MAX	__FLT_MAX
a111 9
#  else
#   define DBL_DIG	15
#   define DBL_MAX	1.7976931348623157E+308
#   define DBL_MIN	2.2250738585072014E-308
 
#   define FLT_DIG	6
#   define FLT_MAX	3.40282347E+38F
#   define FLT_MIN	1.17549435E-38F
#  endif
d113 5
a117 1
#endif
@


1.7
log
@UCHAR_MAX and USHRT_MAX should not have a 'U' suffix.
That is only needed for constants that would not fit in a signed int.
This is also consistent with UINT8_MAX and UINT16_MAX.
Fixes PR 5467, submitted by ikz isr.
@
text
@d1 1
a1 1
/* $OpenBSD: limits.h,v 1.6 2005/12/13 00:35:23 millert Exp $ */
d61 2
@


1.6
log
@First step in include files overhaul.  Use __FOO_VISIBLE (as defined
in sys/cdefs.h) instead of _FOO_SOURCE.  Also fix several namespace
pollution issues, including the byte order defines.  OK deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: limits.h,v 1.5 2004/09/16 13:10:57 miod Exp $ */
d53 1
a53 1
#define	UCHAR_MAX	0xffU		/* max value for an unsigned char */
d62 1
a62 1
#define	USHRT_MAX	0xffffU		/* max value for an unsigned short */
@


1.5
log
@Rely upon __LP64__ to choose {U,}LONG_{MIN,MAX} values, rather than a
homegrown define.
ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: limits.h,v 1.4 2002/05/11 14:46:41 millert Exp $ */
d29 2
d83 1
a83 2
#if !defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) || \
     defined(_ISOC99_SOURCE) || (__STDC_VERSION__ - 0) >= 199901L
d92 1
a92 1
#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
d98 1
a98 1
#if (!defined(_ANSI_SOURCE)&&!defined(_POSIX_SOURCE)) || defined(_XOPEN_SOURCE)
@


1.4
log
@Avoid multiple definitions of macros in float.h and limits.h.  This
is a long-standing problem that recently showed up on vax because
due to some indirection cpp no longer believes the definitions are
equivalent (though they really are).  From espie@@
@
text
@d1 1
a1 1
/* $OpenBSD: limits.h,v 1.3 2002/04/24 22:32:57 espie Exp $ */
a36 1
 *   __machine_arch_is_64_bits		(default is 32 bits arches)
d68 1
a68 1
#ifdef __machine_is_64_bits
d98 1
a98 1
# ifdef __machine_is_64_bits
@


1.4.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.3
log
@revert, sys/param.h will need fixing first.
@
text
@d1 1
a1 1
/* $OpenBSD: limits.h,v 1.1 2002/04/24 21:53:12 espie Exp $ */
d106 19
a124 16
# if defined(__DBL_DIG)
#  define DBL_DIG	__DBL_DIG
#  define DBL_MAX	__DBL_MAX
#  define DBL_MIN	__DBL_MIN

#  define FLT_DIG	__FLT_DIG
#  define FLT_MAX	__FLT_MAX
#  define FLT_MIN	__FLT_MIN
# else
#  define DBL_DIG	15
#  define DBL_MAX	1.7976931348623157E+308
#  define DBL_MIN	2.2250738585072014E-308

#  define FLT_DIG	6
#  define FLT_MAX	3.40282347E+38F
#  define FLT_MIN	1.17549435E-38F
@


1.2
log
@Make this not directly usable from userland.
ok millert@@
@
text
@a28 5
/* Protect against direct inclusion from userland. */
#if !defined(_KERNEL) && !defined(_LIMITS_H_)
# error "<sys/limits.h> is not meant to be used directly from userland"
#endif

@


1.1
log
@Introduce a new file, machine/internal_types.h, to hold that specific arch
type characteristics.

internal_types.h will contain only settings invisible from standard C, e.g.,
in the __* or _[A-Z]* namespace, and be reused by files like limits.h.

This allows us to shorten machine/limits.h greatly, as all the common defines
are now in sys/limits.h, plus a small stub in internal_types.h.

Tested on all arches as far as I know.
Approved after discussion with art, millert, deraadt, and others.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d28 5
@

