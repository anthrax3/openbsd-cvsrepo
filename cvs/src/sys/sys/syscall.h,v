head	1.184;
access;
symbols
	OPENBSD_6_1_BASE:1.184
	OPENBSD_6_0:1.182.0.2
	OPENBSD_6_0_BASE:1.182
	OPENBSD_5_9:1.177.0.2
	OPENBSD_5_9_BASE:1.177
	OPENBSD_5_8:1.166.0.4
	OPENBSD_5_8_BASE:1.166
	OPENBSD_5_7:1.163.0.2
	OPENBSD_5_7_BASE:1.163
	OPENBSD_5_6:1.155.0.4
	OPENBSD_5_6_BASE:1.155
	OPENBSD_5_5:1.150.0.4
	OPENBSD_5_5_BASE:1.150
	OPENBSD_5_4:1.145.0.2
	OPENBSD_5_4_BASE:1.145
	OPENBSD_5_3:1.138.0.2
	OPENBSD_5_3_BASE:1.138
	OPENBSD_5_2:1.136.0.2
	OPENBSD_5_2_BASE:1.136
	OPENBSD_5_1_BASE:1.132
	OPENBSD_5_1:1.132.0.2
	OPENBSD_5_0:1.130.0.2
	OPENBSD_5_0_BASE:1.130
	OPENBSD_4_9:1.116.0.2
	OPENBSD_4_9_BASE:1.116
	OPENBSD_4_8:1.114.0.2
	OPENBSD_4_8_BASE:1.114
	OPENBSD_4_7:1.110.0.2
	OPENBSD_4_7_BASE:1.110
	OPENBSD_4_6:1.106.0.4
	OPENBSD_4_6_BASE:1.106
	OPENBSD_4_5:1.101.0.4
	OPENBSD_4_5_BASE:1.101
	OPENBSD_4_4:1.101.0.2
	OPENBSD_4_4_BASE:1.101
	OPENBSD_4_3:1.100.0.2
	OPENBSD_4_3_BASE:1.100
	OPENBSD_4_2:1.97.0.4
	OPENBSD_4_2_BASE:1.97
	OPENBSD_4_1:1.97.0.2
	OPENBSD_4_1_BASE:1.97
	OPENBSD_4_0:1.95.0.2
	OPENBSD_4_0_BASE:1.95
	OPENBSD_3_9:1.92.0.2
	OPENBSD_3_9_BASE:1.92
	OPENBSD_3_8:1.86.0.2
	OPENBSD_3_8_BASE:1.86
	OPENBSD_3_7:1.84.0.4
	OPENBSD_3_7_BASE:1.84
	OPENBSD_3_6:1.84.0.2
	OPENBSD_3_6_BASE:1.84
	SMP_SYNC_A:1.77
	SMP_SYNC_B:1.77
	OPENBSD_3_5:1.75.0.2
	OPENBSD_3_5_BASE:1.75
	OPENBSD_3_4:1.69.0.2
	OPENBSD_3_4_BASE:1.69
	UBC_SYNC_A:1.65
	OPENBSD_3_3:1.58.0.2
	OPENBSD_3_3_BASE:1.58
	OPENBSD_3_2:1.56.0.2
	OPENBSD_3_2_BASE:1.56
	OPENBSD_3_1:1.55.0.2
	OPENBSD_3_1_BASE:1.55
	UBC_SYNC_B:1.56
	UBC:1.53.0.4
	UBC_BASE:1.53
	OPENBSD_3_0:1.53.0.2
	OPENBSD_3_0_BASE:1.53
	OPENBSD_2_9_BASE:1.48
	OPENBSD_2_9:1.48.0.2
	OPENBSD_2_8:1.46.0.2
	OPENBSD_2_8_BASE:1.46
	OPENBSD_2_7:1.44.0.2
	OPENBSD_2_7_BASE:1.44
	SMP:1.42.0.2
	SMP_BASE:1.42
	kame_19991208:1.40
	OPENBSD_2_6:1.40.0.2
	OPENBSD_2_6_BASE:1.40
	OPENBSD_2_5:1.35.0.2
	OPENBSD_2_5_BASE:1.35
	OPENBSD_2_4:1.33.0.2
	OPENBSD_2_4_BASE:1.33
	OPENBSD_2_3:1.25.0.2
	OPENBSD_2_3_BASE:1.25
	OPENBSD_2_2:1.18.0.2
	OPENBSD_2_2_BASE:1.18
	OPENBSD_2_1:1.15.0.2
	OPENBSD_2_1_BASE:1.15
	OPENBSD_2_0:1.12.0.2
	OPENBSD_2_0_BASE:1.12
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.184
date	2016.09.26.16.43.58;	author jca;	state Exp;
branches;
next	1.183;
commitid	t2jShKFwiA9gaU45;

1.183
date	2016.09.04.17.24.02;	author jsing;	state Exp;
branches;
next	1.182;
commitid	BSbNl91FuYX8ZrTk;

1.182
date	2016.06.27.16.52.01;	author jsing;	state Exp;
branches;
next	1.181;
commitid	zhZfX9LPKxKZfTSR;

1.181
date	2016.05.31.22.10.34;	author deraadt;	state Exp;
branches;
next	1.180;
commitid	MPXoA8w22WfeDURT;

1.180
date	2016.03.30.07.49.44;	author guenther;	state Exp;
branches;
next	1.179;
commitid	7jLJPhQK2zyWzG6Z;

1.179
date	2016.03.28.20.51.09;	author kettenis;	state Exp;
branches;
next	1.178;
commitid	Me86gqaSaGmYUR1L;

1.178
date	2016.03.21.22.41.29;	author bluhm;	state Exp;
branches;
next	1.177;
commitid	hneUpr7ZOJCeNeHP;

1.177
date	2015.11.24.23.50.50;	author deraadt;	state Exp;
branches;
next	1.176;
commitid	TOsawG7nknenUTKw;

1.176
date	2015.11.10.04.32.06;	author guenther;	state Exp;
branches;
next	1.175;
commitid	n9eBxUCVtRKCY8tE;

1.175
date	2015.10.28.12.04.06;	author deraadt;	state Exp;
branches;
next	1.174;
commitid	TK8oge2VXNNoQZjq;

1.174
date	2015.10.18.00.05.59;	author deraadt;	state Exp;
branches;
next	1.173;
commitid	qkbSzHUXFtlhbJG3;

1.173
date	2015.10.09.01.11.12;	author deraadt;	state Exp;
branches;
next	1.172;
commitid	925fvYttovA55HOT;

1.172
date	2015.10.02.17.51.04;	author kettenis;	state Exp;
branches;
next	1.171;
commitid	VpEpbgPSYypy3NfC;

1.171
date	2015.09.26.15.39.57;	author tedu;	state Exp;
branches;
next	1.170;
commitid	h1rusrK4lwb2KbOC;

1.170
date	2015.09.13.17.09.21;	author guenther;	state Exp;
branches;
next	1.169;
commitid	wzXeYk4hQ3rm1WW8;

1.169
date	2015.09.09.17.57.57;	author deraadt;	state Exp;
branches;
next	1.168;
commitid	doHZlEQGjhIpdtGa;

1.168
date	2015.08.26.05.40.40;	author doug;	state Exp;
branches;
next	1.167;
commitid	e0Zbz1k9tgjLaS5E;

1.167
date	2015.08.22.20.18.50;	author deraadt;	state Exp;
branches;
next	1.166;
commitid	6NDuzTPjBp2GqkfQ;

1.166
date	2015.07.20.00.57.06;	author guenther;	state Exp;
branches;
next	1.165;
commitid	uQd7U40rr4GIEFlW;

1.165
date	2015.07.19.02.37.44;	author deraadt;	state Exp;
branches;
next	1.164;
commitid	DP44l2zLFhJybkSd;

1.164
date	2015.05.06.11.26.02;	author jsg;	state Exp;
branches;
next	1.163;
commitid	9vrWUxB650OkCt4B;

1.163
date	2015.02.09.13.55.04;	author deraadt;	state Exp;
branches;
next	1.162;
commitid	FZGRHsrcj1Ez7Zul;

1.162
date	2015.02.09.13.34.49;	author deraadt;	state Exp;
branches;
next	1.161;
commitid	5yMidS9tJP3CVY3y;

1.161
date	2014.12.08.20.56.34;	author guenther;	state Exp;
branches;
next	1.160;
commitid	Unabqm8CKTCGXUYB;

1.160
date	2014.10.09.03.36.05;	author tedu;	state Exp;
branches;
next	1.159;
commitid	zonjoCc0qF32do3P;

1.159
date	2014.09.18.02.16.32;	author uebayasi;	state Exp;
branches;
next	1.158;
commitid	UU861uRLmkJCqllG;

1.158
date	2014.09.17.19.27.59;	author millert;	state Exp;
branches;
next	1.157;
commitid	RxMxZG9CDI9E2MZA;

1.157
date	2014.09.01.05.13.22;	author doug;	state Exp;
branches;
next	1.156;
commitid	SLapLeLVwWfyTUNP;

1.156
date	2014.08.31.01.47.17;	author guenther;	state Exp;
branches;
next	1.155;
commitid	XuGqbG3iajgb3Otu;

1.155
date	2014.07.10.08.58.30;	author deraadt;	state Exp;
branches;
next	1.154;
commitid	9yOEQmEgrCkgJoXC;

1.154
date	2014.07.07.20.01.21;	author matthew;	state Exp;
branches;
next	1.153;
commitid	4iiBPg78gXlMS7rl;

1.153
date	2014.07.07.00.27.13;	author guenther;	state Exp;
branches;
next	1.152;
commitid	ao5TlrTvPnkvJVg1;

1.152
date	2014.06.14.18.01.55;	author deraadt;	state Exp;
branches;
next	1.151;
commitid	AZPdatTs429ib8GG;

1.151
date	2014.06.13.08.27.04;	author deraadt;	state Exp;
branches;
next	1.150;
commitid	G4h95LDanJxGDw1w;

1.150
date	2014.02.09.10.07.13;	author guenther;	state Exp;
branches;
next	1.149;

1.149
date	2013.09.14.01.36.02;	author guenther;	state Exp;
branches;
next	1.148;

1.148
date	2013.08.16.08.33.56;	author guenther;	state Exp;
branches;
next	1.147;

1.147
date	2013.08.14.05.27.02;	author guenther;	state Exp;
branches;
next	1.146;

1.146
date	2013.08.13.05.54.10;	author guenther;	state Exp;
branches;
next	1.145;

1.145
date	2013.06.09.13.10.27;	author miod;	state Exp;
branches;
next	1.144;

1.144
date	2013.06.01.16.27.51;	author tedu;	state Exp;
branches;
next	1.143;

1.143
date	2013.06.01.09.50.03;	author miod;	state Exp;
branches;
next	1.142;

1.142
date	2013.04.29.17.08.08;	author matthew;	state Exp;
branches;
next	1.141;

1.141
date	2013.04.15.15.37.10;	author jsing;	state Exp;
branches;
next	1.140;

1.140
date	2013.03.14.21.39.05;	author tedu;	state Exp;
branches;
next	1.139;

1.139
date	2013.03.02.07.06.00;	author guenther;	state Exp;
branches;
next	1.138;

1.138
date	2012.09.10.02.22.36;	author deraadt;	state Exp;
branches;
next	1.137;

1.137
date	2012.08.23.06.13.02;	author deraadt;	state Exp;
branches;
next	1.136;

1.136
date	2012.06.21.00.57.59;	author guenther;	state Exp;
branches;
next	1.135;

1.135
date	2012.04.12.12.33.47;	author deraadt;	state Exp;
branches;
next	1.134;

1.134
date	2012.04.12.11.17.16;	author deraadt;	state Exp;
branches;
next	1.133;

1.133
date	2012.04.12.11.10.07;	author deraadt;	state Exp;
branches;
next	1.132;

1.132
date	2012.01.17.02.34.18;	author guenther;	state Exp;
branches;
next	1.131;

1.131
date	2011.10.15.23.36.31;	author guenther;	state Exp;
branches;
next	1.130;

1.130
date	2011.07.18.00.17.30;	author matthew;	state Exp;
branches;
next	1.129;

1.129
date	2011.07.09.05.46.58;	author matthew;	state Exp;
branches;
next	1.128;

1.128
date	2011.07.09.05.32.25;	author matthew;	state Exp;
branches;
next	1.127;

1.127
date	2011.07.09.00.18.15;	author deraadt;	state Exp;
branches;
next	1.126;

1.126
date	2011.07.09.00.11.28;	author deraadt;	state Exp;
branches;
next	1.125;

1.125
date	2011.07.08.19.19.59;	author tedu;	state Exp;
branches;
next	1.124;

1.124
date	2011.07.08.05.02.49;	author matthew;	state Exp;
branches;
next	1.123;

1.123
date	2011.07.07.23.46.46;	author matthew;	state Exp;
branches;
next	1.122;

1.122
date	2011.07.07.18.31.17;	author tedu;	state Exp;
branches;
next	1.121;

1.121
date	2011.07.07.01.21.22;	author tedu;	state Exp;
branches;
next	1.120;

1.120
date	2011.07.04.20.35.35;	author deraadt;	state Exp;
branches;
next	1.119;

1.119
date	2011.06.30.13.44.15;	author tedu;	state Exp;
branches;
next	1.118;

1.118
date	2011.06.01.06.22.39;	author guenther;	state Exp;
branches;
next	1.117;

1.117
date	2011.04.04.12.44.43;	author deraadt;	state Exp;
branches;
next	1.116;

1.116
date	2010.10.28.15.03.51;	author millert;	state Exp;
branches;
next	1.115;

1.115
date	2010.09.20.07.20.35;	author deraadt;	state Exp;
branches;
next	1.114;

1.114
date	2010.07.03.04.44.51;	author guenther;	state Exp;
branches;
next	1.113;

1.113
date	2010.07.01.23.11.11;	author tedu;	state Exp;
branches;
next	1.112;

1.112
date	2010.07.01.01.55.33;	author deraadt;	state Exp;
branches;
next	1.111;

1.111
date	2010.06.29.00.29.05;	author tedu;	state Exp;
branches;
next	1.110;

1.110
date	2010.01.18.19.13.05;	author schwarze;	state Exp;
branches;
next	1.109;

1.109
date	2009.11.27.20.06.42;	author guenther;	state Exp;
branches;
next	1.108;

1.108
date	2009.11.27.19.45.53;	author guenther;	state Exp;
branches;
next	1.107;

1.107
date	2009.08.02.16.28.40;	author beck;	state Exp;
branches;
next	1.106;

1.106
date	2009.06.15.17.31.49;	author deraadt;	state Exp;
branches;
next	1.105;

1.105
date	2009.06.15.17.01.26;	author beck;	state Exp;
branches;
next	1.104;

1.104
date	2009.06.03.15.47.13;	author jj;	state Exp;
branches;
next	1.103;

1.103
date	2009.06.03.14.45.55;	author jj;	state Exp;
branches;
next	1.102;

1.102
date	2009.03.12.07.04.48;	author guenther;	state Exp;
branches;
next	1.101;

1.101
date	2008.03.16.19.43.41;	author otto;	state Exp;
branches;
next	1.100;

1.100
date	2008.01.05.00.38.13;	author miod;	state Exp;
branches;
next	1.99;

1.99
date	2007.11.28.13.48.31;	author deraadt;	state Exp;
branches;
next	1.98;

1.98
date	2007.11.27.18.05.59;	author art;	state Exp;
branches;
next	1.97;

1.97
date	2006.09.22.17.36.17;	author pedro;	state Exp;
branches;
next	1.96;

1.96
date	2006.09.22.14.36.56;	author pedro;	state Exp;
branches;
next	1.95;

1.95
date	2006.06.14.19.52.52;	author otto;	state Exp;
branches;
next	1.94;

1.94
date	2006.06.09.00.06.10;	author deraadt;	state Exp;
branches;
next	1.93;

1.93
date	2006.04.28.08.39.32;	author pedro;	state Exp;
branches;
next	1.92;

1.92
date	2005.12.30.04.06.28;	author tedu;	state Exp;
branches;
next	1.91;

1.91
date	2005.12.30.04.02.18;	author tedu;	state Exp;
branches;
next	1.90;

1.90
date	2005.12.13.06.04.15;	author tedu;	state Exp;
branches;
next	1.89;

1.89
date	2005.12.13.06.02.03;	author tedu;	state Exp;
branches;
next	1.88;

1.88
date	2005.12.03.18.11.29;	author tedu;	state Exp;
branches;
next	1.87;

1.87
date	2005.12.03.18.09.09;	author tedu;	state Exp;
branches;
next	1.86;

1.86
date	2005.07.03.20.14.19;	author drahn;	state Exp;
branches;
next	1.85;

1.85
date	2005.06.17.20.42.32;	author millert;	state Exp;
branches;
next	1.84;

1.84
date	2004.07.15.14.36.08;	author deraadt;	state Exp;
branches;
next	1.83;

1.83
date	2004.07.15.11.25.18;	author millert;	state Exp;
branches;
next	1.82;

1.82
date	2004.07.14.23.45.59;	author millert;	state Exp;
branches;
next	1.81;

1.81
date	2004.07.14.18.01.29;	author millert;	state Exp;
branches;
next	1.80;

1.80
date	2004.07.13.21.06.33;	author millert;	state Exp;
branches;
next	1.79;

1.79
date	2004.07.09.23.53.59;	author millert;	state Exp;
branches;
next	1.78;

1.78
date	2004.06.13.21.52.08;	author niklas;	state Exp;
branches;
next	1.77;

1.77
date	2004.05.27.20.49.55;	author tedu;	state Exp;
branches;
next	1.76;

1.76
date	2004.05.03.17.40.18;	author millert;	state Exp;
branches;
next	1.75;

1.75
date	2004.02.28.19.44.32;	author miod;	state Exp;
branches;
next	1.74;

1.74
date	2004.01.14.05.25.10;	author tedu;	state Exp;
branches;
next	1.73;

1.73
date	2004.01.12.18.08.51;	author tedu;	state Exp;
branches;
next	1.72;

1.72
date	2003.12.31.00.13.57;	author millert;	state Exp;
branches;
next	1.71;

1.71
date	2003.12.11.23.04.14;	author millert;	state Exp;
branches;
next	1.70;

1.70
date	2003.12.10.23.11.36;	author millert;	state Exp;
branches;
next	1.69;

1.69
date	2003.09.07.21.01.07;	author miod;	state Exp;
branches;
next	1.68;

1.68
date	2003.07.01.22.19.35;	author tedu;	state Exp;
branches;
next	1.67;

1.67
date	2003.06.23.04.27.55;	author deraadt;	state Exp;
branches;
next	1.66;

1.66
date	2003.06.22.21.34.27;	author deraadt;	state Exp;
branches;
next	1.65;

1.65
date	2003.05.10.17.55.57;	author miod;	state Exp;
branches;
next	1.64;

1.64
date	2003.04.29.19.52.52;	author miod;	state Exp;
branches;
next	1.63;

1.63
date	2003.04.28.21.34.06;	author drahn;	state Exp;
branches;
next	1.62;

1.62
date	2003.04.25.20.34.22;	author drahn;	state Exp;
branches;
next	1.61;

1.61
date	2003.04.25.18.40.46;	author drahn;	state Exp;
branches;
next	1.60;

1.60
date	2003.04.14.06.28.29;	author deraadt;	state Exp;
branches;
next	1.59;

1.59
date	2003.04.14.04.53.50;	author art;	state Exp;
branches;
next	1.58;

1.58
date	2003.01.30.03.32.44;	author millert;	state Exp;
branches;
next	1.57;

1.57
date	2002.10.30.20.05.20;	author millert;	state Exp;
branches;
next	1.56;

1.56
date	2002.07.06.19.20.50;	author nordin;	state Exp;
branches;
next	1.55;

1.55
date	2002.03.14.00.44.20;	author miod;	state Exp;
branches;
next	1.54;

1.54
date	2002.02.22.20.55.28;	author drahn;	state Exp;
branches;
next	1.53;

1.53
date	2001.08.26.04.11.12;	author deraadt;	state Exp;
branches
	1.53.4.1;
next	1.52;

1.52
date	2001.06.26.20.07.26;	author dugsong;	state Exp;
branches;
next	1.51;

1.51
date	2001.06.26.19.56.51;	author dugsong;	state Exp;
branches;
next	1.50;

1.50
date	2001.06.16.22.17.12;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	2001.05.16.17.17.03;	author millert;	state Exp;
branches;
next	1.48;

1.48
date	2001.03.09.15.12.53;	author art;	state Exp;
branches;
next	1.47;

1.47
date	2000.11.16.20.04.09;	author provos;	state Exp;
branches;
next	1.46;

1.46
date	2000.09.12.17.28.44;	author millert;	state Exp;
branches;
next	1.45;

1.45
date	2000.06.22.22.44.43;	author mickey;	state Exp;
branches;
next	1.44;

1.44
date	2000.05.01.23.12.30;	author deraadt;	state Exp;
branches;
next	1.43;

1.43
date	2000.04.20.06.32.47;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2000.02.07.08.06.10;	author assar;	state Exp;
branches
	1.42.2.1;
next	1.41;

1.41
date	2000.02.07.04.57.18;	author assar;	state Exp;
branches;
next	1.40;

1.40
date	99.08.08.00.32.21;	author niklas;	state Exp;
branches;
next	1.39;

1.39
date	99.06.07.07.18.37;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	99.05.31.18.18.13;	author millert;	state Exp;
branches;
next	1.37;

1.37
date	99.05.31.17.34.52;	author millert;	state Exp;
branches;
next	1.36;

1.36
date	99.05.22.21.25.51;	author weingart;	state Exp;
branches;
next	1.35;

1.35
date	99.02.26.02.02.44;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	98.11.18.01.15.59;	author art;	state Exp;
branches;
next	1.33;

1.33
date	98.09.18.00.33.46;	author art;	state Exp;
branches;
next	1.32;

1.32
date	98.08.30.18.18.46;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	98.08.30.18.08.16;	author art;	state Exp;
branches;
next	1.30;

1.30
date	98.06.12.08.31.56;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	98.06.11.18.31.17;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	98.06.02.05.23.13;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	98.05.11.06.14.15;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	98.04.25.07.15.46;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	98.02.16.22.01.08;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	98.02.10.08.44.27;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	98.02.08.22.38.28;	author tholo;	state Exp;
branches;
next	1.22;

1.22
date	98.01.02.05.38.26;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	97.11.14.20.56.45;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	97.11.13.18.37.39;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	97.11.13.07.11.30;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	97.08.30.08.13.49;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	97.05.31.01.09.35;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	97.05.30.21.43.34;	author kstailey;	state Exp;
branches;
next	1.15;

1.15
date	97.04.20.20.49.44;	author tholo;	state Exp;
branches;
next	1.14;

1.14
date	97.01.26.05.22.11;	author downsj;	state Exp;
branches;
next	1.13;

1.13
date	96.10.29.16.05.15;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	96.10.04.01.01.05;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	96.08.25.09.53.38;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	96.05.18.08.54.17;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.05.02.13.14.20;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.04.19.16.10.34;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.04.19.01.36.35;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.04.18.21.41.10;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.01.29.23.05.09;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.01.10.18.02.13;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.01.07.17.20.35;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.05.23.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.29;	author deraadt;	state Exp;
branches;
next	;

1.42.2.1
date	2001.05.14.22.45.04;	author niklas;	state Exp;
branches;
next	1.42.2.2;

1.42.2.2
date	2001.07.04.11.00.32;	author niklas;	state Exp;
branches;
next	1.42.2.3;

1.42.2.3
date	2001.10.31.03.30.30;	author nate;	state Exp;
branches;
next	1.42.2.4;

1.42.2.4
date	2002.03.06.02.17.13;	author niklas;	state Exp;
branches;
next	1.42.2.5;

1.42.2.5
date	2002.03.28.14.52.02;	author niklas;	state Exp;
branches;
next	1.42.2.6;

1.42.2.6
date	2003.03.28.00.41.30;	author niklas;	state Exp;
branches;
next	1.42.2.7;

1.42.2.7
date	2003.05.13.19.36.57;	author ho;	state Exp;
branches;
next	1.42.2.8;

1.42.2.8
date	2003.05.15.04.08.03;	author niklas;	state Exp;
branches;
next	1.42.2.9;

1.42.2.9
date	2004.02.19.11.01.34;	author niklas;	state Exp;
branches;
next	1.42.2.10;

1.42.2.10
date	2004.06.05.23.13.10;	author niklas;	state Exp;
branches;
next	;

1.53.4.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	1.53.4.2;

1.53.4.2
date	2002.10.29.00.36.49;	author art;	state Exp;
branches;
next	1.53.4.3;

1.53.4.3
date	2003.05.19.22.32.36;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.184
log
@Regen
@
text
@/*	$OpenBSD$	*/

/*
 * System call numbers.
 *
 * DO NOT EDIT-- this file is automatically generated.
 * created from;	OpenBSD: syscalls.master,v 1.174 2016/09/04 17:22:40 jsing Exp 
 */

/* syscall: "syscall" ret: "int" args: "int" "..." */
#define	SYS_syscall	0

/* syscall: "exit" ret: "void" args: "int" */
#define	SYS_exit	1

/* syscall: "fork" ret: "int" args: */
#define	SYS_fork	2

/* syscall: "read" ret: "ssize_t" args: "int" "void *" "size_t" */
#define	SYS_read	3

/* syscall: "write" ret: "ssize_t" args: "int" "const void *" "size_t" */
#define	SYS_write	4

/* syscall: "open" ret: "int" args: "const char *" "int" "..." */
#define	SYS_open	5

/* syscall: "close" ret: "int" args: "int" */
#define	SYS_close	6

/* syscall: "getentropy" ret: "int" args: "void *" "size_t" */
#define	SYS_getentropy	7

/* syscall: "__tfork" ret: "int" args: "const struct __tfork *" "size_t" */
#define	SYS___tfork	8

/* syscall: "link" ret: "int" args: "const char *" "const char *" */
#define	SYS_link	9

/* syscall: "unlink" ret: "int" args: "const char *" */
#define	SYS_unlink	10

/* syscall: "wait4" ret: "pid_t" args: "pid_t" "int *" "int" "struct rusage *" */
#define	SYS_wait4	11

/* syscall: "chdir" ret: "int" args: "const char *" */
#define	SYS_chdir	12

/* syscall: "fchdir" ret: "int" args: "int" */
#define	SYS_fchdir	13

/* syscall: "mknod" ret: "int" args: "const char *" "mode_t" "dev_t" */
#define	SYS_mknod	14

/* syscall: "chmod" ret: "int" args: "const char *" "mode_t" */
#define	SYS_chmod	15

/* syscall: "chown" ret: "int" args: "const char *" "uid_t" "gid_t" */
#define	SYS_chown	16

/* syscall: "break" ret: "int" args: "char *" */
#define	SYS_break	17

/* syscall: "getdtablecount" ret: "int" args: */
#define	SYS_getdtablecount	18

/* syscall: "getrusage" ret: "int" args: "int" "struct rusage *" */
#define	SYS_getrusage	19

/* syscall: "getpid" ret: "pid_t" args: */
#define	SYS_getpid	20

/* syscall: "mount" ret: "int" args: "const char *" "const char *" "int" "void *" */
#define	SYS_mount	21

/* syscall: "unmount" ret: "int" args: "const char *" "int" */
#define	SYS_unmount	22

/* syscall: "setuid" ret: "int" args: "uid_t" */
#define	SYS_setuid	23

/* syscall: "getuid" ret: "uid_t" args: */
#define	SYS_getuid	24

/* syscall: "geteuid" ret: "uid_t" args: */
#define	SYS_geteuid	25

/* syscall: "ptrace" ret: "int" args: "int" "pid_t" "caddr_t" "int" */
#define	SYS_ptrace	26

/* syscall: "recvmsg" ret: "ssize_t" args: "int" "struct msghdr *" "int" */
#define	SYS_recvmsg	27

/* syscall: "sendmsg" ret: "ssize_t" args: "int" "const struct msghdr *" "int" */
#define	SYS_sendmsg	28

/* syscall: "recvfrom" ret: "ssize_t" args: "int" "void *" "size_t" "int" "struct sockaddr *" "socklen_t *" */
#define	SYS_recvfrom	29

/* syscall: "accept" ret: "int" args: "int" "struct sockaddr *" "socklen_t *" */
#define	SYS_accept	30

/* syscall: "getpeername" ret: "int" args: "int" "struct sockaddr *" "socklen_t *" */
#define	SYS_getpeername	31

/* syscall: "getsockname" ret: "int" args: "int" "struct sockaddr *" "socklen_t *" */
#define	SYS_getsockname	32

/* syscall: "access" ret: "int" args: "const char *" "int" */
#define	SYS_access	33

/* syscall: "chflags" ret: "int" args: "const char *" "u_int" */
#define	SYS_chflags	34

/* syscall: "fchflags" ret: "int" args: "int" "u_int" */
#define	SYS_fchflags	35

/* syscall: "sync" ret: "void" args: */
#define	SYS_sync	36

				/* 37 is obsolete o58_kill */
/* syscall: "stat" ret: "int" args: "const char *" "struct stat *" */
#define	SYS_stat	38

/* syscall: "getppid" ret: "pid_t" args: */
#define	SYS_getppid	39

/* syscall: "lstat" ret: "int" args: "const char *" "struct stat *" */
#define	SYS_lstat	40

/* syscall: "dup" ret: "int" args: "int" */
#define	SYS_dup	41

/* syscall: "fstatat" ret: "int" args: "int" "const char *" "struct stat *" "int" */
#define	SYS_fstatat	42

/* syscall: "getegid" ret: "gid_t" args: */
#define	SYS_getegid	43

/* syscall: "profil" ret: "int" args: "caddr_t" "size_t" "u_long" "u_int" */
#define	SYS_profil	44

/* syscall: "ktrace" ret: "int" args: "const char *" "int" "int" "pid_t" */
#define	SYS_ktrace	45

/* syscall: "sigaction" ret: "int" args: "int" "const struct sigaction *" "struct sigaction *" */
#define	SYS_sigaction	46

/* syscall: "getgid" ret: "gid_t" args: */
#define	SYS_getgid	47

/* syscall: "sigprocmask" ret: "int" args: "int" "sigset_t" */
#define	SYS_sigprocmask	48

/* syscall: "getlogin59" ret: "int" args: "char *" "u_int" */
#define	SYS_getlogin59	49

/* syscall: "setlogin" ret: "int" args: "const char *" */
#define	SYS_setlogin	50

/* syscall: "acct" ret: "int" args: "const char *" */
#define	SYS_acct	51

/* syscall: "sigpending" ret: "int" args: */
#define	SYS_sigpending	52

/* syscall: "fstat" ret: "int" args: "int" "struct stat *" */
#define	SYS_fstat	53

/* syscall: "ioctl" ret: "int" args: "int" "u_long" "..." */
#define	SYS_ioctl	54

/* syscall: "reboot" ret: "int" args: "int" */
#define	SYS_reboot	55

/* syscall: "revoke" ret: "int" args: "const char *" */
#define	SYS_revoke	56

/* syscall: "symlink" ret: "int" args: "const char *" "const char *" */
#define	SYS_symlink	57

/* syscall: "readlink" ret: "ssize_t" args: "const char *" "char *" "size_t" */
#define	SYS_readlink	58

/* syscall: "execve" ret: "int" args: "const char *" "char *const *" "char *const *" */
#define	SYS_execve	59

/* syscall: "umask" ret: "mode_t" args: "mode_t" */
#define	SYS_umask	60

/* syscall: "chroot" ret: "int" args: "const char *" */
#define	SYS_chroot	61

/* syscall: "getfsstat" ret: "int" args: "struct statfs *" "size_t" "int" */
#define	SYS_getfsstat	62

/* syscall: "statfs" ret: "int" args: "const char *" "struct statfs *" */
#define	SYS_statfs	63

/* syscall: "fstatfs" ret: "int" args: "int" "struct statfs *" */
#define	SYS_fstatfs	64

/* syscall: "fhstatfs" ret: "int" args: "const fhandle_t *" "struct statfs *" */
#define	SYS_fhstatfs	65

/* syscall: "vfork" ret: "int" args: */
#define	SYS_vfork	66

/* syscall: "gettimeofday" ret: "int" args: "struct timeval *" "struct timezone *" */
#define	SYS_gettimeofday	67

/* syscall: "settimeofday" ret: "int" args: "const struct timeval *" "const struct timezone *" */
#define	SYS_settimeofday	68

/* syscall: "setitimer" ret: "int" args: "int" "const struct itimerval *" "struct itimerval *" */
#define	SYS_setitimer	69

/* syscall: "getitimer" ret: "int" args: "int" "struct itimerval *" */
#define	SYS_getitimer	70

/* syscall: "select" ret: "int" args: "int" "fd_set *" "fd_set *" "fd_set *" "struct timeval *" */
#define	SYS_select	71

/* syscall: "kevent" ret: "int" args: "int" "const struct kevent *" "int" "struct kevent *" "int" "const struct timespec *" */
#define	SYS_kevent	72

/* syscall: "munmap" ret: "int" args: "void *" "size_t" */
#define	SYS_munmap	73

/* syscall: "mprotect" ret: "int" args: "void *" "size_t" "int" */
#define	SYS_mprotect	74

/* syscall: "madvise" ret: "int" args: "void *" "size_t" "int" */
#define	SYS_madvise	75

/* syscall: "utimes" ret: "int" args: "const char *" "const struct timeval *" */
#define	SYS_utimes	76

/* syscall: "futimes" ret: "int" args: "int" "const struct timeval *" */
#define	SYS_futimes	77

/* syscall: "mincore" ret: "int" args: "void *" "size_t" "char *" */
#define	SYS_mincore	78

/* syscall: "getgroups" ret: "int" args: "int" "gid_t *" */
#define	SYS_getgroups	79

/* syscall: "setgroups" ret: "int" args: "int" "const gid_t *" */
#define	SYS_setgroups	80

/* syscall: "getpgrp" ret: "int" args: */
#define	SYS_getpgrp	81

/* syscall: "setpgid" ret: "int" args: "pid_t" "pid_t" */
#define	SYS_setpgid	82

				/* 83 is obsolete osendsyslog */
/* syscall: "utimensat" ret: "int" args: "int" "const char *" "const struct timespec *" "int" */
#define	SYS_utimensat	84

/* syscall: "futimens" ret: "int" args: "int" "const struct timespec *" */
#define	SYS_futimens	85

/* syscall: "kbind" ret: "int" args: "const struct __kbind *" "size_t" "int64_t" */
#define	SYS_kbind	86

/* syscall: "clock_gettime" ret: "int" args: "clockid_t" "struct timespec *" */
#define	SYS_clock_gettime	87

/* syscall: "clock_settime" ret: "int" args: "clockid_t" "const struct timespec *" */
#define	SYS_clock_settime	88

/* syscall: "clock_getres" ret: "int" args: "clockid_t" "struct timespec *" */
#define	SYS_clock_getres	89

/* syscall: "dup2" ret: "int" args: "int" "int" */
#define	SYS_dup2	90

/* syscall: "nanosleep" ret: "int" args: "const struct timespec *" "struct timespec *" */
#define	SYS_nanosleep	91

/* syscall: "fcntl" ret: "int" args: "int" "int" "..." */
#define	SYS_fcntl	92

/* syscall: "accept4" ret: "int" args: "int" "struct sockaddr *" "socklen_t *" "int" */
#define	SYS_accept4	93

/* syscall: "__thrsleep" ret: "int" args: "const volatile void *" "clockid_t" "const struct timespec *" "void *" "const int *" */
#define	SYS___thrsleep	94

/* syscall: "fsync" ret: "int" args: "int" */
#define	SYS_fsync	95

/* syscall: "setpriority" ret: "int" args: "int" "id_t" "int" */
#define	SYS_setpriority	96

/* syscall: "socket" ret: "int" args: "int" "int" "int" */
#define	SYS_socket	97

/* syscall: "connect" ret: "int" args: "int" "const struct sockaddr *" "socklen_t" */
#define	SYS_connect	98

/* syscall: "getdents" ret: "int" args: "int" "void *" "size_t" */
#define	SYS_getdents	99

/* syscall: "getpriority" ret: "int" args: "int" "id_t" */
#define	SYS_getpriority	100

/* syscall: "pipe2" ret: "int" args: "int *" "int" */
#define	SYS_pipe2	101

/* syscall: "dup3" ret: "int" args: "int" "int" "int" */
#define	SYS_dup3	102

/* syscall: "sigreturn" ret: "int" args: "struct sigcontext *" */
#define	SYS_sigreturn	103

/* syscall: "bind" ret: "int" args: "int" "const struct sockaddr *" "socklen_t" */
#define	SYS_bind	104

/* syscall: "setsockopt" ret: "int" args: "int" "int" "int" "const void *" "socklen_t" */
#define	SYS_setsockopt	105

/* syscall: "listen" ret: "int" args: "int" "int" */
#define	SYS_listen	106

/* syscall: "chflagsat" ret: "int" args: "int" "const char *" "u_int" "int" */
#define	SYS_chflagsat	107

/* syscall: "pledge" ret: "int" args: "const char *" "const char **" */
#define	SYS_pledge	108

/* syscall: "ppoll" ret: "int" args: "struct pollfd *" "u_int" "const struct timespec *" "const sigset_t *" */
#define	SYS_ppoll	109

/* syscall: "pselect" ret: "int" args: "int" "fd_set *" "fd_set *" "fd_set *" "const struct timespec *" "const sigset_t *" */
#define	SYS_pselect	110

/* syscall: "sigsuspend" ret: "int" args: "int" */
#define	SYS_sigsuspend	111

/* syscall: "sendsyslog" ret: "int" args: "const void *" "size_t" "int" */
#define	SYS_sendsyslog	112

				/* 113 is obsolete orecvmsg */
				/* 114 is obsolete osendmsg */
				/* 115 is obsolete vtrace */
				/* 116 is obsolete t32_gettimeofday */
				/* 117 is obsolete t32_getrusage */
/* syscall: "getsockopt" ret: "int" args: "int" "int" "int" "void *" "socklen_t *" */
#define	SYS_getsockopt	118

/* syscall: "thrkill" ret: "int" args: "pid_t" "int" "void *" */
#define	SYS_thrkill	119

/* syscall: "readv" ret: "ssize_t" args: "int" "const struct iovec *" "int" */
#define	SYS_readv	120

/* syscall: "writev" ret: "ssize_t" args: "int" "const struct iovec *" "int" */
#define	SYS_writev	121

/* syscall: "kill" ret: "int" args: "int" "int" */
#define	SYS_kill	122

/* syscall: "fchown" ret: "int" args: "int" "uid_t" "gid_t" */
#define	SYS_fchown	123

/* syscall: "fchmod" ret: "int" args: "int" "mode_t" */
#define	SYS_fchmod	124

				/* 125 is obsolete orecvfrom */
/* syscall: "setreuid" ret: "int" args: "uid_t" "uid_t" */
#define	SYS_setreuid	126

/* syscall: "setregid" ret: "int" args: "gid_t" "gid_t" */
#define	SYS_setregid	127

/* syscall: "rename" ret: "int" args: "const char *" "const char *" */
#define	SYS_rename	128

				/* 129 is obsolete otruncate */
				/* 130 is obsolete oftruncate */
/* syscall: "flock" ret: "int" args: "int" "int" */
#define	SYS_flock	131

/* syscall: "mkfifo" ret: "int" args: "const char *" "mode_t" */
#define	SYS_mkfifo	132

/* syscall: "sendto" ret: "ssize_t" args: "int" "const void *" "size_t" "int" "const struct sockaddr *" "socklen_t" */
#define	SYS_sendto	133

/* syscall: "shutdown" ret: "int" args: "int" "int" */
#define	SYS_shutdown	134

/* syscall: "socketpair" ret: "int" args: "int" "int" "int" "int *" */
#define	SYS_socketpair	135

/* syscall: "mkdir" ret: "int" args: "const char *" "mode_t" */
#define	SYS_mkdir	136

/* syscall: "rmdir" ret: "int" args: "const char *" */
#define	SYS_rmdir	137

				/* 138 is obsolete t32_utimes */
				/* 139 is obsolete 4.2 sigreturn */
/* syscall: "adjtime" ret: "int" args: "const struct timeval *" "struct timeval *" */
#define	SYS_adjtime	140

/* syscall: "getlogin_r" ret: "int" args: "char *" "u_int" */
#define	SYS_getlogin_r	141

				/* 142 is obsolete ogethostid */
				/* 143 is obsolete osethostid */
				/* 144 is obsolete ogetrlimit */
				/* 145 is obsolete osetrlimit */
				/* 146 is obsolete okillpg */
/* syscall: "setsid" ret: "int" args: */
#define	SYS_setsid	147

/* syscall: "quotactl" ret: "int" args: "const char *" "int" "int" "char *" */
#define	SYS_quotactl	148

				/* 149 is obsolete oquota */
				/* 150 is obsolete ogetsockname */
/* syscall: "nfssvc" ret: "int" args: "int" "void *" */
#define	SYS_nfssvc	155

				/* 156 is obsolete ogetdirentries */
				/* 157 is obsolete statfs25 */
				/* 158 is obsolete fstatfs25 */
/* syscall: "getfh" ret: "int" args: "const char *" "fhandle_t *" */
#define	SYS_getfh	161

				/* 162 is obsolete ogetdomainname */
				/* 163 is obsolete osetdomainname */
/* syscall: "sysarch" ret: "int" args: "int" "void *" */
#define	SYS_sysarch	165

				/* 169 is obsolete semsys10 */
				/* 170 is obsolete msgsys10 */
				/* 171 is obsolete shmsys10 */
/* syscall: "pread" ret: "ssize_t" args: "int" "void *" "size_t" "int" "off_t" */
#define	SYS_pread	173

/* syscall: "pwrite" ret: "ssize_t" args: "int" "const void *" "size_t" "int" "off_t" */
#define	SYS_pwrite	174

/* syscall: "setgid" ret: "int" args: "gid_t" */
#define	SYS_setgid	181

/* syscall: "setegid" ret: "int" args: "gid_t" */
#define	SYS_setegid	182

/* syscall: "seteuid" ret: "int" args: "uid_t" */
#define	SYS_seteuid	183

				/* 184 is obsolete lfs_bmapv */
				/* 185 is obsolete lfs_markv */
				/* 186 is obsolete lfs_segclean */
				/* 187 is obsolete lfs_segwait */
				/* 188 is obsolete stat35 */
				/* 189 is obsolete fstat35 */
				/* 190 is obsolete lstat35 */
/* syscall: "pathconf" ret: "long" args: "const char *" "int" */
#define	SYS_pathconf	191

/* syscall: "fpathconf" ret: "long" args: "int" "int" */
#define	SYS_fpathconf	192

/* syscall: "swapctl" ret: "int" args: "int" "const void *" "int" */
#define	SYS_swapctl	193

/* syscall: "getrlimit" ret: "int" args: "int" "struct rlimit *" */
#define	SYS_getrlimit	194

/* syscall: "setrlimit" ret: "int" args: "int" "const struct rlimit *" */
#define	SYS_setrlimit	195

				/* 196 is obsolete ogetdirentries48 */
/* syscall: "mmap" ret: "void *" args: "void *" "size_t" "int" "int" "int" "long" "off_t" */
#define	SYS_mmap	197

/* syscall: "__syscall" ret: "quad_t" args: "quad_t" "..." */
#define	SYS___syscall	198

/* syscall: "lseek" ret: "off_t" args: "int" "int" "off_t" "int" */
#define	SYS_lseek	199

/* syscall: "truncate" ret: "int" args: "const char *" "int" "off_t" */
#define	SYS_truncate	200

/* syscall: "ftruncate" ret: "int" args: "int" "int" "off_t" */
#define	SYS_ftruncate	201

/* syscall: "sysctl" ret: "int" args: "const int *" "u_int" "void *" "size_t *" "void *" "size_t" */
#define	SYS_sysctl	202

/* syscall: "mlock" ret: "int" args: "const void *" "size_t" */
#define	SYS_mlock	203

/* syscall: "munlock" ret: "int" args: "const void *" "size_t" */
#define	SYS_munlock	204

				/* 206 is obsolete t32_futimes */
/* syscall: "getpgid" ret: "pid_t" args: "pid_t" */
#define	SYS_getpgid	207

				/* 208 is obsolete nnpfspioctl */
/* syscall: "utrace" ret: "int" args: "const char *" "const void *" "size_t" */
#define	SYS_utrace	209

/* syscall: "semget" ret: "int" args: "key_t" "int" "int" */
#define	SYS_semget	221

				/* 222 is obsolete semop35 */
				/* 223 is obsolete semconfig35 */
/* syscall: "msgget" ret: "int" args: "key_t" "int" */
#define	SYS_msgget	225

/* syscall: "msgsnd" ret: "int" args: "int" "const void *" "size_t" "int" */
#define	SYS_msgsnd	226

/* syscall: "msgrcv" ret: "int" args: "int" "void *" "size_t" "long" "int" */
#define	SYS_msgrcv	227

/* syscall: "shmat" ret: "void *" args: "int" "const void *" "int" */
#define	SYS_shmat	228

/* syscall: "shmdt" ret: "int" args: "const void *" */
#define	SYS_shmdt	230

				/* 231 is obsolete shmget35 */
				/* 232 is obsolete t32_clock_gettime */
				/* 233 is obsolete t32_clock_settime */
				/* 234 is obsolete t32_clock_getres */
				/* 240 is obsolete t32_nanosleep */
/* syscall: "minherit" ret: "int" args: "void *" "size_t" "int" */
#define	SYS_minherit	250

				/* 251 is obsolete rfork */
/* syscall: "poll" ret: "int" args: "struct pollfd *" "u_int" "int" */
#define	SYS_poll	252

/* syscall: "issetugid" ret: "int" args: */
#define	SYS_issetugid	253

/* syscall: "lchown" ret: "int" args: "const char *" "uid_t" "gid_t" */
#define	SYS_lchown	254

/* syscall: "getsid" ret: "pid_t" args: "pid_t" */
#define	SYS_getsid	255

/* syscall: "msync" ret: "int" args: "void *" "size_t" "int" */
#define	SYS_msync	256

				/* 257 is obsolete semctl35 */
				/* 258 is obsolete shmctl35 */
				/* 259 is obsolete msgctl35 */
/* syscall: "pipe" ret: "int" args: "int *" */
#define	SYS_pipe	263

/* syscall: "fhopen" ret: "int" args: "const fhandle_t *" "int" */
#define	SYS_fhopen	264

/* syscall: "preadv" ret: "ssize_t" args: "int" "const struct iovec *" "int" "int" "off_t" */
#define	SYS_preadv	267

/* syscall: "pwritev" ret: "ssize_t" args: "int" "const struct iovec *" "int" "int" "off_t" */
#define	SYS_pwritev	268

/* syscall: "kqueue" ret: "int" args: */
#define	SYS_kqueue	269

				/* 270 is obsolete t32_kevent */
/* syscall: "mlockall" ret: "int" args: "int" */
#define	SYS_mlockall	271

/* syscall: "munlockall" ret: "int" args: */
#define	SYS_munlockall	272

/* syscall: "getresuid" ret: "int" args: "uid_t *" "uid_t *" "uid_t *" */
#define	SYS_getresuid	281

/* syscall: "setresuid" ret: "int" args: "uid_t" "uid_t" "uid_t" */
#define	SYS_setresuid	282

/* syscall: "getresgid" ret: "int" args: "gid_t *" "gid_t *" "gid_t *" */
#define	SYS_getresgid	283

/* syscall: "setresgid" ret: "int" args: "gid_t" "gid_t" "gid_t" */
#define	SYS_setresgid	284

				/* 285 is obsolete sys_omquery */
/* syscall: "mquery" ret: "void *" args: "void *" "size_t" "int" "int" "int" "long" "off_t" */
#define	SYS_mquery	286

/* syscall: "closefrom" ret: "int" args: "int" */
#define	SYS_closefrom	287

/* syscall: "sigaltstack" ret: "int" args: "const struct sigaltstack *" "struct sigaltstack *" */
#define	SYS_sigaltstack	288

/* syscall: "shmget" ret: "int" args: "key_t" "size_t" "int" */
#define	SYS_shmget	289

/* syscall: "semop" ret: "int" args: "int" "struct sembuf *" "size_t" */
#define	SYS_semop	290

				/* 291 is obsolete t32_stat */
				/* 292 is obsolete t32_fstat */
				/* 293 is obsolete t32_lstat */
/* syscall: "fhstat" ret: "int" args: "const fhandle_t *" "struct stat *" */
#define	SYS_fhstat	294

/* syscall: "__semctl" ret: "int" args: "int" "int" "int" "union semun *" */
#define	SYS___semctl	295

/* syscall: "shmctl" ret: "int" args: "int" "int" "struct shmid_ds *" */
#define	SYS_shmctl	296

/* syscall: "msgctl" ret: "int" args: "int" "int" "struct msqid_ds *" */
#define	SYS_msgctl	297

/* syscall: "sched_yield" ret: "int" args: */
#define	SYS_sched_yield	298

/* syscall: "getthrid" ret: "pid_t" args: */
#define	SYS_getthrid	299

				/* 300 is obsolete t32___thrsleep */
/* syscall: "__thrwakeup" ret: "int" args: "const volatile void *" "int" */
#define	SYS___thrwakeup	301

/* syscall: "__threxit" ret: "void" args: "pid_t *" */
#define	SYS___threxit	302

/* syscall: "__thrsigdivert" ret: "int" args: "sigset_t" "siginfo_t *" "const struct timespec *" */
#define	SYS___thrsigdivert	303

/* syscall: "__getcwd" ret: "int" args: "char *" "size_t" */
#define	SYS___getcwd	304

/* syscall: "adjfreq" ret: "int" args: "const int64_t *" "int64_t *" */
#define	SYS_adjfreq	305

				/* 306 is obsolete getfsstat53 */
				/* 307 is obsolete statfs53 */
				/* 308 is obsolete fstatfs53 */
				/* 309 is obsolete fhstatfs53 */
/* syscall: "setrtable" ret: "int" args: "int" */
#define	SYS_setrtable	310

/* syscall: "getrtable" ret: "int" args: */
#define	SYS_getrtable	311

				/* 312 is obsolete t32_getdirentries */
/* syscall: "faccessat" ret: "int" args: "int" "const char *" "int" "int" */
#define	SYS_faccessat	313

/* syscall: "fchmodat" ret: "int" args: "int" "const char *" "mode_t" "int" */
#define	SYS_fchmodat	314

/* syscall: "fchownat" ret: "int" args: "int" "const char *" "uid_t" "gid_t" "int" */
#define	SYS_fchownat	315

				/* 316 is obsolete t32_fstatat */
/* syscall: "linkat" ret: "int" args: "int" "const char *" "int" "const char *" "int" */
#define	SYS_linkat	317

/* syscall: "mkdirat" ret: "int" args: "int" "const char *" "mode_t" */
#define	SYS_mkdirat	318

/* syscall: "mkfifoat" ret: "int" args: "int" "const char *" "mode_t" */
#define	SYS_mkfifoat	319

/* syscall: "mknodat" ret: "int" args: "int" "const char *" "mode_t" "dev_t" */
#define	SYS_mknodat	320

/* syscall: "openat" ret: "int" args: "int" "const char *" "int" "..." */
#define	SYS_openat	321

/* syscall: "readlinkat" ret: "ssize_t" args: "int" "const char *" "char *" "size_t" */
#define	SYS_readlinkat	322

/* syscall: "renameat" ret: "int" args: "int" "const char *" "int" "const char *" */
#define	SYS_renameat	323

/* syscall: "symlinkat" ret: "int" args: "const char *" "int" "const char *" */
#define	SYS_symlinkat	324

/* syscall: "unlinkat" ret: "int" args: "int" "const char *" "int" */
#define	SYS_unlinkat	325

				/* 326 is obsolete t32_utimensat */
				/* 327 is obsolete t32_futimens */
				/* 328 is obsolete __tfork51 */
/* syscall: "__set_tcb" ret: "void" args: "void *" */
#define	SYS___set_tcb	329

/* syscall: "__get_tcb" ret: "void *" args: */
#define	SYS___get_tcb	330

#define	SYS_MAXSYSCALL	331
@


1.183
log
@Regen.
@
text
@@


1.182
log
@Regen.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.173 2016/06/27 16:50:07 jsing Exp 
d121 1
a121 3
/* syscall: "o58_kill" ret: "int" args: "int" "int" */
#define	SYS_o58_kill	37

@


1.181
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.172 2016/05/31 22:08:53 deraadt Exp 
d121 3
a123 1
				/* 37 is obsolete o58_kill */
@


1.180
log
@regenerate
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.169 2016/03/30 07:49:11 guenther Exp 
d121 1
a121 3
/* syscall: "o58_kill" ret: "int" args: "int" "int" */
#define	SYS_o58_kill	37

d257 1
a257 3
/* syscall: "osendsyslog" ret: "int" args: "const void *" "size_t" */
#define	SYS_osendsyslog	83

@


1.179
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.168 2016/03/28 20:49:58 kettenis Exp 
d157 2
a158 2
/* syscall: "getlogin" ret: "int" args: "char *" "u_int" */
#define	SYS_getlogin	49
d413 3
a415 1
				/* 141 is obsolete ogetpeername */
@


1.178
log
@Rename the system call sendsyslog2 to sendsyslog.  Keep the old one
as osendsyslog for a while.  The three argument variant is the only
one that will stay.
input kettenis@@;  OK deraadt@@
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.166 2015/11/24 23:47:17 deraadt Exp 
@


1.177
log
@sync
@
text
@d259 2
a260 2
/* syscall: "sendsyslog" ret: "int" args: "const void *" "size_t" */
#define	SYS_sendsyslog	83
d346 2
a347 2
/* syscall: "sendsyslog2" ret: "int" args: "const void *" "size_t" "int" */
#define	SYS_sendsyslog2	112
@


1.176
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.165 2015/11/10 04:30:59 guenther Exp 
d346 3
a348 1
				/* 112 is obsolete osigstack */
@


1.175
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.164 2015/10/28 12:03:39 deraadt Exp 
d121 2
a122 2
/* syscall: "kill" ret: "int" args: "int" "int" */
#define	SYS_kill	37
d355 3
a357 1
				/* 119 is obsolete resuba */
d364 3
a366 1
				/* 122 is obsolete t32_settimeofday */
@


1.174
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.163 2015/10/18 00:04:43 deraadt Exp 
a426 6
/* syscall: "dnsconnect" ret: "int" args: "int" "const struct sockaddr *" "socklen_t" */
#define	SYS_dnsconnect	159

/* syscall: "dnssocket" ret: "int" args: "int" "int" "int" */
#define	SYS_dnssocket	160

@


1.173
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.162 2015/10/09 01:10:27 deraadt Exp 
d427 6
@


1.172
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.161 2015/10/02 17:49:40 kettenis Exp 
d334 2
a335 2
/* syscall: "tame" ret: "int" args: "const char *" "const char **" */
#define	SYS_tame	108
@


1.171
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.160 2015/09/26 15:38:53 tedu Exp 
@


1.170
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.159 2015/09/13 17:08:03 guenther Exp 
@


1.169
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.158 2015/09/09 17:56:59 deraadt Exp 
d491 2
a492 2
/* syscall: "__sysctl" ret: "int" args: "const int *" "u_int" "void *" "size_t *" "void *" "size_t" */
#define	SYS___sysctl	202
@


1.168
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.157 2015/08/26 05:20:06 doug Exp 
d334 1
a334 1
/* syscall: "tame" ret: "int" args: "int" "const char **" */
@


1.167
log
@Move to tame(int flags, char *paths[]) API/ABI.

The pathlist is a whitelist of dirs and files; anything else returns ENOENT.
Recommendation is to use a narrowly defined list.  Also add TAME_FATTR, which
permits explicit change operations against "struct stat" fields.  Some
other TAME_ flags are refined slightly.

Not cranking libc now, since nothing commited in base uses this and the
timing is uncomfortable for others.  Discussed with many; thanks for a
few bug fixes from semarie, doug, guenther.
ok guenther
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.155 2015/07/20 00:56:10 guenther Exp 
d334 1
a334 1
/* syscall: "tame" ret: "int" args: "int" "char **" */
@


1.166
log
@rebuild
@
text
@d334 1
a334 1
/* syscall: "tame" ret: "int" args: "int" */
@


1.165
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.154 2015/07/19 02:35:35 deraadt Exp 
d268 3
a270 1
				/* 86 is obsolete t32_getitimer */
@


1.164
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.153 2015/05/06 11:20:07 jsg Exp 
d332 3
a334 1
				/* 108 is obsolete osigvec */
@


1.163
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.152 2015/02/09 13:54:23 deraadt Exp 
@


1.162
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.150 2015/02/09 13:34:19 deraadt Exp 
@


1.161
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.149 2014/12/08 20:56:11 guenther Exp 
@


1.160
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.148 2014/10/09 03:35:06 tedu Exp 
d329 3
a331 1
				/* 107 is obsolete vtimes */
@


1.159
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.146 2014/09/17 19:26:06 millert Exp 
@


1.158
log
@regen
@
text
@@


1.157
log
@sync generated files
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.145 2014/09/01 05:09:53 doug Exp 
d256 1
a256 1
/* syscall: "setpgid" ret: "int" args: "pid_t" "int" */
@


1.156
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.144 2014/08/31 01:42:36 guenther Exp 
d184 1
a184 1
/* syscall: "readlink" ret: "int" args: "const char *" "char *" "size_t" */
@


1.155
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.143 2014/07/10 08:55:35 deraadt Exp 
d287 3
a289 1
				/* 93 is obsolete t32_select */
d311 6
a316 2
				/* 101 is obsolete osend */
				/* 102 is obsolete orecv */
@


1.154
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.142 2014/07/07 19:59:00 matthew Exp 
d259 3
a261 1
				/* 83 is obsolete t32_setitimer */
@


1.153
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.141 2014/07/06 20:55:58 kettenis Exp 
@


1.152
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.140 2014/06/14 18:01:42 deraadt Exp 
@


1.151
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.139 2014/06/13 08:26:10 deraadt Exp 
d31 1
a31 1
/* syscall: "getentropy" ret: "ssize_t" args: "void *" "size_t" */
@


1.150
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.138 2014/02/09 10:04:42 guenther Exp 
d31 3
a33 1
				/* 7 is obsolete t32_wait4 */
@


1.149
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.137 2013/09/14 01:35:01 guenther Exp 
@


1.148
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.136 2013/08/16 08:33:20 guenther Exp 
d31 1
a31 2
				/* 7 is t32 wait4 */

d257 1
a257 2
				/* 83 is t32 setitimer */

d264 1
a264 2
				/* 86 is t32 getitimer */

d283 1
a283 2
				/* 93 is t32 select */

d334 2
a335 4
				/* 116 is t32 gettimeofday */

				/* 117 is t32 getrusage */

d346 1
a346 2
				/* 122 is t32 settimeofday */

d386 1
a386 2
				/* 138 is t32 utimes */

d484 1
a484 2
				/* 206 is t32 futimes */

d513 4
a516 8
				/* 232 is t32 clock_gettime */

				/* 233 is t32 clock_settime */

				/* 234 is t32 clock_getres */

				/* 240 is t32 nanosleep */

d554 1
a554 2
				/* 270 is t32 kevent */

d589 3
a591 6
				/* 291 is t32 stat */

				/* 292 is t32 fstat */

				/* 293 is t32 lstat */

d610 1
a610 2
				/* 300 is t32 __thrsleep */

d636 1
a636 2
				/* 312 is t32 getdirentries */

d646 1
a646 2
				/* 316 is t32 fstatat */

d674 2
a675 4
				/* 326 is t32 utimensat */

				/* 327 is t32 futimens */

@


1.147
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.135 2013/08/14 05:26:14 guenther Exp 
d303 1
a303 1
/* syscall: "getdents" ret: "int" args: "int" "struct dirent *" "size_t" */
@


1.146
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.134 2013/08/13 05:52:24 guenther Exp 
d644 4
a647 8
				/* 306 is compat_o53 getfsstat */

				/* 307 is compat_o53 statfs */

				/* 308 is compat_o53 fstatfs */

				/* 309 is compat_o53 fhstatfs */

d698 1
a698 2
				/* 328 is compat_o51 __tfork */

@


1.145
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.133 2013/06/09 13:10:19 miod Exp 
d31 1
a31 2
/* syscall: "wait4" ret: "pid_t" args: "pid_t" "int *" "int" "struct rusage *" */
#define	SYS_wait4	7
d42 3
a44 1
				/* 11 is obsolete execv */
d66 3
a68 1
				/* 19 is obsolete olseek */
d123 3
a125 1
				/* 38 is obsolete stat43 */
d129 3
a131 1
				/* 40 is obsolete lstat43 */
d135 3
a137 1
				/* 42 is obsolete opipe */
d168 3
a170 1
				/* 53 is obsolete osigaltstack */
d210 18
a227 6
				/* 67 is obsolete vread */
				/* 68 is obsolete vwrite */
				/* 69 is obsolete sbrk */
				/* 70 is obsolete sstk */
				/* 71 is obsolete ommap */
				/* 72 is obsolete vadvise */
d237 6
a242 2
				/* 76 is obsolete vhangup */
				/* 77 is obsolete vlimit */
d258 15
a272 2
/* syscall: "setitimer" ret: "int" args: "int" "const struct itimerval *" "struct itimerval *" */
#define	SYS_setitimer	83
d274 2
a275 4
				/* 84 is obsolete owait */
				/* 85 is obsolete swapon25 */
/* syscall: "getitimer" ret: "int" args: "int" "struct itimerval *" */
#define	SYS_getitimer	86
a276 3
				/* 87 is obsolete ogethostname */
				/* 88 is obsolete osethostname */
				/* 89 is obsolete ogetdtablesize */
d280 3
d286 4
a289 2
/* syscall: "select" ret: "int" args: "int" "fd_set *" "fd_set *" "fd_set *" "struct timeval *" */
#define	SYS_select	93
d303 3
a305 1
				/* 99 is obsolete oaccept */
d338 1
a338 2
/* syscall: "gettimeofday" ret: "int" args: "struct timeval *" "struct timezone *" */
#define	SYS_gettimeofday	116
d340 1
a340 2
/* syscall: "getrusage" ret: "int" args: "int" "struct rusage *" */
#define	SYS_getrusage	117
d352 1
a352 2
/* syscall: "settimeofday" ret: "int" args: "const struct timeval *" "const struct timezone *" */
#define	SYS_settimeofday	122
d393 1
a393 2
/* syscall: "utimes" ret: "int" args: "const char *" "const struct timeval *" */
#define	SYS_utimes	138
d492 1
a492 2
/* syscall: "futimes" ret: "int" args: "int" "const struct timeval *" */
#define	SYS_futimes	206
d522 1
a522 2
/* syscall: "clock_gettime" ret: "int" args: "clockid_t" "struct timespec *" */
#define	SYS_clock_gettime	232
d524 1
a524 2
/* syscall: "clock_settime" ret: "int" args: "clockid_t" "const struct timespec *" */
#define	SYS_clock_settime	233
d526 1
a526 2
/* syscall: "clock_getres" ret: "int" args: "clockid_t" "struct timespec *" */
#define	SYS_clock_getres	234
d528 1
a528 2
/* syscall: "nanosleep" ret: "int" args: "const struct timespec *" "struct timespec *" */
#define	SYS_nanosleep	240
d567 1
a567 2
/* syscall: "kevent" ret: "int" args: "int" "const struct kevent *" "int" "struct kevent *" "int" "const struct timespec *" */
#define	SYS_kevent	270
d603 1
a603 2
/* syscall: "stat" ret: "int" args: "const char *" "struct stat *" */
#define	SYS_stat	291
d605 1
a605 2
/* syscall: "fstat" ret: "int" args: "int" "struct stat *" */
#define	SYS_fstat	292
d607 1
a607 2
/* syscall: "lstat" ret: "int" args: "const char *" "struct stat *" */
#define	SYS_lstat	293
d627 1
a627 2
/* syscall: "__thrsleep" ret: "int" args: "const volatile void *" "clockid_t" "const struct timespec *" "void *" "const int *" */
#define	SYS___thrsleep	300
d658 1
a658 2
/* syscall: "getdirentries" ret: "int" args: "int" "char *" "int" "off_t *" */
#define	SYS_getdirentries	312
d669 1
a669 2
/* syscall: "fstatat" ret: "int" args: "int" "const char *" "struct stat *" "int" */
#define	SYS_fstatat	316
d698 1
a698 2
/* syscall: "utimensat" ret: "int" args: "int" "const char *" "const struct timespec *" "int" */
#define	SYS_utimensat	326
d700 1
a700 2
/* syscall: "futimens" ret: "int" args: "int" "const struct timespec *" */
#define	SYS_futimens	327
@


1.144
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.132 2013/06/01 16:27:37 tedu Exp 
d445 1
a445 1
/* syscall: "__sysctl" ret: "int" args: "int *" "u_int" "void *" "size_t *" "void *" "size_t" */
@


1.143
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.131 2013/06/01 09:49:50 miod Exp 
@


1.142
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.130 2013/04/29 17:06:20 matthew Exp 
d461 3
@


1.141
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.129 2013/04/15 15:32:19 jsing Exp 
d283 6
a288 2
				/* 109 is obsolete osigblock */
				/* 110 is obsolete osigsetmask */
@


1.140
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.128 2013/03/14 21:38:22 tedu Exp 
d184 12
a195 4
				/* 62 is obsolete fstat43 */
				/* 63 is obsolete ogetkerninfo */
				/* 64 is obsolete ogetpagesize */
				/* 65 is obsolete omsync25 */
d609 1
a609 2
/* syscall: "getfsstat" ret: "int" args: "struct statfs *" "size_t" "int" */
#define	SYS_getfsstat	306
d611 1
a611 2
/* syscall: "statfs" ret: "int" args: "const char *" "struct statfs *" */
#define	SYS_statfs	307
d613 1
a613 2
/* syscall: "fstatfs" ret: "int" args: "int" "struct statfs *" */
#define	SYS_fstatfs	308
d615 1
a615 2
/* syscall: "fhstatfs" ret: "int" args: "const fhandle_t *" "struct statfs *" */
#define	SYS_fhstatfs	309
@


1.139
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.127 2013/03/02 07:05:18 guenther Exp 
d667 2
a668 1
				/* 328 is obsolete otfork51 */
@


1.138
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.126 2012/09/10 02:22:17 deraadt Exp 
d667 1
a667 2
				/* 328 is compat_o51 __tfork */

@


1.137
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.125 2012/08/23 06:12:49 deraadt Exp 
d417 1
a417 2
				/* 196 is compat_o48 getdirentries */

@


1.136
log
@Regenerate
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.124 2012/06/21 00:56:59 guenther Exp 
d449 1
a449 3
/* syscall: "nnpfspioctl" ret: "int" args: "int" "char *" "int" "struct ViceIoctl *" "int" */
#define	SYS_nnpfspioctl	208

@


1.135
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.123 2012/04/12 12:33:03 deraadt Exp 
d34 3
a36 1
				/* 8 is obsolete ocreat */
d670 1
a670 2
/* syscall: "__tfork" ret: "int" args: "struct __tfork *" */
#define	SYS___tfork	328
@


1.134
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.122 2012/04/12 11:16:24 deraadt Exp 
d486 1
a486 3
/* syscall: "rfork" ret: "int" args: "int" */
#define	SYS_rfork	251

@


1.133
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.121 2012/04/12 11:07:19 deraadt Exp 
d393 4
a396 12
/* syscall: "lfs_bmapv" ret: "int" args: "fsid_t *" "struct block_info *" "int" */
#define	SYS_lfs_bmapv	184

/* syscall: "lfs_markv" ret: "int" args: "fsid_t *" "struct block_info *" "int" */
#define	SYS_lfs_markv	185

/* syscall: "lfs_segclean" ret: "int" args: "fsid_t *" "u_long" */
#define	SYS_lfs_segclean	186

/* syscall: "lfs_segwait" ret: "int" args: "fsid_t *" "struct timeval *" */
#define	SYS_lfs_segwait	187

@


1.132
log
@Reimplement mutexes, condvars, and rwlocks to eliminate bugs,
particularly the "consume the signal you just sent" hang, and putting
the wait queues in userspace.

Do cancellation handling in pthread_cond_*wait(), pthread_join(),
and sem_wait().

Add __ prefix to thr{sleep,wakeup,exit,sigdivert}() syscalls; add
'abort" argument to thrsleep to close cancellation race; make
thr{sleep,wakeup} return errno values via *retval to avoid touching
userspace errno.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.119 2011/10/15 23:35:29 guenther Exp 
d60 3
a62 1
				/* 18 is obsolete getfsstat25 */
@


1.131
log
@sync
@
text
@d592 2
a593 2
/* syscall: "thrsleep" ret: "int" args: "void *" "clockid_t" "const struct timespec *" "void *" */
#define	SYS_thrsleep	300
d595 2
a596 2
/* syscall: "thrwakeup" ret: "int" args: "void *" "int" */
#define	SYS_thrwakeup	301
d598 2
a599 2
/* syscall: "threxit" ret: "void" args: "pid_t *" */
#define	SYS_threxit	302
d601 2
a602 2
/* syscall: "thrsigdivert" ret: "int" args: "sigset_t" "siginfo_t *" "const struct timespec *" */
#define	SYS_thrsigdivert	303
@


1.130
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.118 2011/07/18 00:16:54 matthew Exp 
d676 10
a685 1
#define	SYS_MAXSYSCALL	328
@


1.129
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.117 2011/07/09 05:46:26 matthew Exp 
d673 4
a676 1
#define	SYS_MAXSYSCALL	327
@


1.128
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.116 2011/07/09 05:31:26 matthew Exp 
d421 1
a421 1
				/* 196 is compat_48 getdirentries */
@


1.127
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.115 2011/07/09 00:18:06 deraadt Exp 
d155 1
a155 3
/* syscall: "osigaltstack" ret: "int" args: "const struct osigaltstack *" "struct osigaltstack *" */
#define	SYS_osigaltstack	53

d189 2
a190 6
/* syscall: "sbrk" ret: "int" args: "int" */
#define	SYS_sbrk	69

/* syscall: "sstk" ret: "int" args: "int" */
#define	SYS_sstk	70

d421 1
a421 2
/* syscall: "ogetdirentries" ret: "int" args: "int" "char *" "int" "long *" */
#define	SYS_ogetdirentries	196
@


1.126
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.114 2011/07/09 00:10:51 deraadt Exp 
d370 1
a370 1
				/* 158 is obsolete fstatfs */
@


1.125
log
@regen syscalls
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.113 2011/07/08 19:19:20 tedu Exp 
d60 1
a60 2
				/* 18 is compat_25 ogetfsstat */

d185 1
a185 2
				/* 65 is compat_25 omsync */

d229 1
a229 2
				/* 85 is compat_25 swapon */

d369 2
a370 4
				/* 157 is compat_25 ostatfs */

				/* 158 is compat_25 ostatfs */

@


1.124
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.112 2011/07/08 05:01:27 matthew Exp 
d379 2
a380 4
				/* 162 is compat_09 ogetdomainname */

				/* 163 is compat_09 osetdomainname */

d384 3
a386 6
				/* 169 is compat_10 osemsys */

				/* 170 is compat_10 omsgsys */

				/* 171 is compat_10 oshmsys */

@


1.123
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.111 2011/07/07 23:45:00 matthew Exp 
d125 1
a125 3
/* syscall: "opipe" ret: "int" args: */
#define	SYS_opipe	42

@


1.122
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.110 2011/07/07 18:30:50 tedu Exp 
d650 43
a692 1
#define	SYS_MAXSYSCALL	313
@


1.121
log
@regen syscalls
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.109 2011/07/07 01:19:40 tedu Exp 
@


1.120
log
@move the specfs code to a place people can see it; ok guenther thib krw
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.108 2011/06/30 13:43:14 tedu Exp 
d34 1
a34 2
				/* 8 is compat_43 ocreat */

d62 1
a62 2
				/* 19 is compat_43 olseek */

d117 1
a117 2
				/* 38 is compat_43 stat43 */

d121 1
a121 2
				/* 40 is compat_43 lstat43 */

d185 3
a187 6
				/* 62 is compat_43 fstat43 */

				/* 63 is compat_43 ogetkerninfo */

				/* 64 is compat_43 ogetpagesize */

d201 1
a201 2
				/* 71 is compat_43 ommap */

d232 1
a232 2
				/* 84 is compat_43 owait */

d238 3
a240 6
				/* 87 is compat_43 ogethostname */

				/* 88 is compat_43 osethostname */

				/* 89 is compat_43 ogetdtablesize */

d262 1
a262 2
				/* 99 is compat_43 oaccept */

d266 2
a267 4
				/* 101 is compat_43 osend */

				/* 102 is compat_43 orecv */

d281 3
a283 6
				/* 108 is compat_43 osigvec */

				/* 109 is compat_43 osigblock */

				/* 110 is compat_43 osigsetmask */

d287 3
a289 6
				/* 112 is compat_43 osigstack */

				/* 113 is compat_43 orecvmsg */

				/* 114 is compat_43 osendmsg */

d316 1
a316 2
				/* 125 is compat_43 orecvfrom */

d326 2
a327 4
				/* 129 is compat_43 otruncate */

				/* 130 is compat_43 oftruncate */

d356 6
a361 12
				/* 141 is compat_43 ogetpeername */

				/* 142 is compat_43 ogethostid */

				/* 143 is compat_43 osethostid */

				/* 144 is compat_43 ogetrlimit */

				/* 145 is compat_43 osetrlimit */

				/* 146 is compat_43 okillpg */

d368 2
a369 4
				/* 149 is compat_43 oquota */

				/* 150 is compat_43 ogetsockname */

d373 1
a373 2
				/* 156 is compat_43 ogetdirentries */

@


1.119
log
@sync
@
text
@@


1.118
log
@regenerate
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.107 2011/06/01 06:20:41 guenther Exp 
d454 3
a456 6
				/* 188 is compat_35 stat35 */

				/* 189 is compat_35 fstat35 */

				/* 190 is compat_35 lstat35 */

d511 2
a512 3
				/* 222 is compat_35 semop */

				/* 223 is obsolete sys_semconfig */
d528 1
a528 2
				/* 231 is compat_35 shmget */

d562 3
a564 6
				/* 257 is compat_35 semctl35 */

				/* 258 is compat_35 shmctl35 */

				/* 259 is compat_35 msgctl35 */

@


1.117
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.105 2011/04/04 12:44:10 deraadt Exp 
@


1.116
log
@Regen for new getdirentries.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.104 2010/10/28 15:02:41 millert Exp 
a595 2

				/* 273 is compat_o47 getpeereid */
@


1.115
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.103 2010/09/20 07:18:03 deraadt Exp 
d475 2
a476 2
/* syscall: "getdirentries" ret: "int" args: "int" "char *" "int" "long *" */
#define	SYS_getdirentries	196
d690 4
a693 1
#define	SYS_MAXSYSCALL	312
@


1.114
log
@Fix the naming of interfaces and variables for rdomains and rtables
and make it possible to bind sockets (including listening sockets!)
to rtables and not just rdomains.  This changes the name of the
system calls, socket option, and ioctl.  After building with this
you should remove the files /usr/share/man/cat2/[gs]etrdomain.0.

Since this removes the existing [gs]etrdomain() system calls, the
libc major is bumped.

Written by claudio@@, criticized^Wcritiqued by me
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.101 2010/07/01 23:10:40 tedu Exp 
d597 1
a597 2
/* syscall: "getpeereid" ret: "int" args: "int" "uid_t *" "gid_t *" */
#define	SYS_getpeereid	273
@


1.113
log
@regen
@
text
@d685 2
a686 2
/* syscall: "setrdomain" ret: "int" args: "int" */
#define	SYS_setrdomain	310
d688 2
a689 2
/* syscall: "getrdomain" ret: "int" args: */
#define	SYS_getrdomain	311
@


1.112
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.100 2010/07/01 01:54:38 deraadt Exp 
a577 2

				/* 265 is compat_35 fhstat */
@


1.111
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.99 2010/06/29 00:28:14 tedu Exp 
a510 2
				/* 220 is compat_23 semctl23 */

a516 2
				/* 224 is compat_23 msgctl23 */

a528 2
				/* 229 is compat_23 shmctl23 */

a572 6
				/* 260 is compat_o43 getfsstat */

				/* 261 is compat_o43 statfs */

				/* 262 is compat_o43 fstatfs */

a579 2

				/* 266 is compat_o43 fhstatfs */
@


1.110
log
@regen, even though there is no code change, such that the RCS IDs match,
as suggested by art@@
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.98 2010/01/18 19:09:39 schwarze Exp 
@


1.109
log
@Regenerate
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.97 2009/11/27 20:05:50 guenther Exp 
@


1.108
log
@Convert thrsleep() to an absolute timeout with clockid to eliminate a
race condition and prep for later support of pthread_condattr_setclock()

"get it in" deraadt@@, tedu@@, cheers by others
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.93 2009/06/03 15:42:03 jj Exp 
d671 1
a671 1
/* syscall: "thrsleep" ret: "int" args: "void *" "int" "void *" */
d680 1
a680 1
/* syscall: "thrsigdivert" ret: "int" args: "sigset_t" */
d701 7
a707 1
#define	SYS_MAXSYSCALL	310
@


1.107
log
@
Dynamic buffer cache support - a re-commit of what was backed out
after c2k9

allows buffer cache to be extended and grow/shrink dynamically

tested by many, ok oga@@, "why not just commit it" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.104 2009/06/03 15:47:13 jj Exp $	*/
d677 1
a677 1
/* syscall: "threxit" ret: "void" args: "int" */
@


1.106
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.105
log
@Back out all the buffer cache changes I committed during c2k9. This reverts three
commits:

1) The sysctl allowing bufcachepercent to be changed at boot time.
2) The change moving the buffer cache hash chains to a red-black tree
3) The dynamic buffer cache (Which depended on the earlier too).

ok on the backout from marco and todd
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.102 2009/03/12 07:04:48 guenther Exp $	*/
@


1.104
log
@sync these also
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.103
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.91 2009/03/12 06:56:13 guenther Exp 
@


1.102
log
@regen
@
text
@d508 2
a509 2
/* syscall: "xfspioctl" ret: "int" args: "int" "char *" "int" "struct ViceIoctl *" "int" */
#define	SYS_xfspioctl	208
@


1.101
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.90 2008/03/16 19:42:57 otto Exp 
d677 1
a677 1
/* syscall: "threxit" ret: "int" args: "int" */
@


1.100
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.89 2008/01/05 00:36:13 miod Exp 
d579 1
a579 2
/* syscall: "getfsstat" ret: "int" args: "struct statfs *" "size_t" "int" */
#define	SYS_getfsstat	260
d581 1
a581 2
/* syscall: "statfs" ret: "int" args: "const char *" "struct statfs *" */
#define	SYS_statfs	261
d583 1
a583 2
/* syscall: "fstatfs" ret: "int" args: "int" "struct statfs *" */
#define	SYS_fstatfs	262
d593 1
a593 2
/* syscall: "fhstatfs" ret: "int" args: "const fhandle_t *" "struct statfs *" */
#define	SYS_fhstatfs	266
d689 13
a701 1
#define	SYS_MAXSYSCALL	306
@


1.99
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.88 2007/11/28 13:47:02 deraadt Exp 
d210 1
a210 3
/* syscall: "vadvise" ret: "int" args: "int" */
#define	SYS_vadvise	72

@


1.98
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.87 2007/11/27 18:04:47 art Exp 
a418 2

				/* 164 is compat_09 ouname */
@


1.97
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.86 2006/09/22 17:35:41 pedro Exp 
@


1.96
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.85 2006/09/22 14:36:24 pedro Exp 
d445 12
@


1.95
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.84 2006/06/14 19:52:07 otto Exp 
a444 12

/* syscall: "lfs_bmapv" ret: "int" args: "fsid_t *" "struct block_info *" "int" */
#define	SYS_lfs_bmapv	184

/* syscall: "lfs_markv" ret: "int" args: "fsid_t *" "struct block_info *" "int" */
#define	SYS_lfs_markv	185

/* syscall: "lfs_segclean" ret: "int" args: "fsid_t *" "u_long" */
#define	SYS_lfs_segclean	186

/* syscall: "lfs_segwait" ret: "int" args: "fsid_t *" "struct timeval *" */
#define	SYS_lfs_segwait	187
@


1.94
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.83 2006/06/09 00:05:54 deraadt Exp 
d694 4
a697 1
#define	SYS_MAXSYSCALL	305
@


1.93
log
@Regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.82 2006/04/28 08:34:31 pedro Exp 
@


1.92
log
@rebuild
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.81 2005/12/30 04:02:17 tedu Exp 
d691 4
a694 1
#define	SYS_MAXSYSCALL	304
@


1.91
log
@change thrwakeup to take an argument which specifies how many threads
to wakeup.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.80 2005/12/13 06:02:03 tedu Exp 
@


1.90
log
@rebuild
@
text
@d682 1
a682 1
/* syscall: "thrwakeup" ret: "int" args: "void *" */
@


1.89
log
@change the first arg to thrsleep and thrwakeup to a void *.
i had initially selected long since the kernel doesn't attempt
to interpret this value in any way, but since it is always a
pointer value in practice, this makes a little more sense.
binary compat in any case.  suggestion from deraadt@@
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.79 2005/12/03 18:09:08 tedu Exp 
@


1.88
log
@rebuild
@
text
@d679 1
a679 1
/* syscall: "thrsleep" ret: "int" args: "long" "int" "void *" */
d682 1
a682 1
/* syscall: "thrwakeup" ret: "int" args: "long" */
@


1.87
log
@kernel support for threaded processes (rthreads).
uses rfork(RFTHREAD) to create threads, which are presently processes
that are a little more tightly bound together.  several new syscalls
added to facilitate a userland thread library.
all conditional on RTHREADS, currently disabled.
ok deraadt
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.78 2005/07/03 20:13:59 drahn Exp 
@


1.86
log
@sync
@
text
@d673 19
a691 1
#define	SYS_MAXSYSCALL	298
@


1.85
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.77 2005/06/17 20:39:14 millert Exp 
a622 21

/* syscall: "extattrctl" ret: "int" args: "const char *" "int" "const char *" "int" "const char *" */
#define	SYS_extattrctl	274

/* syscall: "extattr_set_file" ret: "int" args: "const char *" "int" "const char *" "const void *" "size_t" */
#define	SYS_extattr_set_file	275

/* syscall: "extattr_get_file" ret: "ssize_t" args: "const char *" "int" "const char *" "void *" "size_t" */
#define	SYS_extattr_get_file	276

/* syscall: "extattr_delete_file" ret: "int" args: "const char *" "int" "const char *" */
#define	SYS_extattr_delete_file	277

/* syscall: "extattr_set_fd" ret: "int" args: "int" "int" "const char *" "const void *" "size_t" */
#define	SYS_extattr_set_fd	278

/* syscall: "extattr_get_fd" ret: "ssize_t" args: "int" "int" "const char *" "void *" "size_t" */
#define	SYS_extattr_get_fd	279

/* syscall: "extattr_delete_fd" ret: "int" args: "int" "int" "const char *" */
#define	SYS_extattr_delete_fd	280
@


1.84
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.76 2004/07/15 14:35:34 deraadt Exp 
a504 3

/* syscall: "undelete" ret: "int" args: "const char *" */
#define	SYS_undelete	205
@


1.83
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.75 2004/07/15 11:24:46 millert Exp 
d98 1
a98 1
/* syscall: "getpeername" ret: "int" args: "int" "struct sockaddr *" "int *" */
d630 1
a630 1
/* syscall: "extattr_set_file" ret: "int" args: "const char *" "int" "const char *" "void *" "size_t" */
d639 1
a639 1
/* syscall: "extattr_set_fd" ret: "int" args: "int" "int" "const char *" "void *" "size_t" */
@


1.82
log
@regen for new {msg,sem,shm}ctl syscalls.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.74 2004/07/14 23:45:11 millert Exp 
d518 1
a518 1
				/* 220 is compat_23 __osemctl */
d526 1
a526 1
				/* 224 is compat_23 omsgctl */
d540 1
a540 1
				/* 229 is compat_23 oshmctl */
@


1.81
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.73 2004/07/14 18:00:48 millert Exp 
d580 1
a580 2
/* syscall: "__semctl" ret: "int" args: "int" "int" "int" "union semun *" */
#define	SYS___semctl	257
d582 1
a582 2
/* syscall: "shmctl" ret: "int" args: "int" "int" "struct shmid_ds *" */
#define	SYS_shmctl	258
d584 1
a584 2
/* syscall: "msgctl" ret: "int" args: "int" "int" "struct msqid_ds *" */
#define	SYS_msgctl	259
d688 10
a697 1
#define	SYS_MAXSYSCALL	295
@


1.80
log
@regen after stat/mode_t/nlink_t changes
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.72 2004/07/13 21:04:29 millert Exp 
d604 1
a604 2
/* syscall: "fhstat" ret: "int" args: "const fhandle_t *" "struct stat *" */
#define	SYS_fhstat	265
d688 4
a691 1
#define	SYS_MAXSYSCALL	294
@


1.79
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.71 2004/07/09 23:52:02 millert Exp 
d49 1
a49 1
/* syscall: "mknod" ret: "int" args: "const char *" "int" "dev_t" */
d52 1
a52 1
/* syscall: "chmod" ret: "int" args: "const char *" "int" */
d183 1
a183 1
/* syscall: "umask" ret: "int" args: "int" */
d336 1
a336 1
/* syscall: "fchmod" ret: "int" args: "int" "int" */
d357 1
a357 1
/* syscall: "mkfifo" ret: "int" args: "const char *" "int" */
d369 1
a369 1
/* syscall: "mkdir" ret: "int" args: "const char *" "int" */
d458 1
a458 2
/* syscall: "stat" ret: "int" args: "const char *" "struct stat *" */
#define	SYS_stat	188
d460 1
a460 2
/* syscall: "fstat" ret: "int" args: "int" "struct stat *" */
#define	SYS_fstat	189
d462 1
a462 2
/* syscall: "lstat" ret: "int" args: "const char *" "struct stat *" */
#define	SYS_lstat	190
d680 10
a689 1
#define	SYS_MAXSYSCALL	291
@


1.78
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD
d119 1
a119 1
				/* 38 is compat_43 ostat */
d124 1
a124 1
				/* 40 is compat_43 olstat */
d189 1
a189 1
				/* 62 is compat_43 ofstat */
@


1.77
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.70 2004/05/27 20:48:46 tedu Exp 
@


1.76
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.69 2004/05/03 17:38:48 millert Exp 
@


1.75
log
@Regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.68 2004/02/28 19:44:16 miod Exp 
d526 1
a526 2
/* syscall: "semop" ret: "int" args: "int" "struct sembuf *" "u_int" */
#define	SYS_semop	222
d548 1
a548 2
/* syscall: "shmget" ret: "int" args: "key_t" "int" "int" */
#define	SYS_shmget	231
d677 7
a683 1
#define	SYS_MAXSYSCALL	289
@


1.74
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.67 2004/01/14 05:23:25 tedu Exp 
@


1.73
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.66 2004/01/12 18:06:51 tedu Exp 
d162 2
a163 2
/* syscall: "sigaltstack" ret: "int" args: "const struct sigaltstack *" "struct sigaltstack *" */
#define	SYS_sigaltstack	53
d676 4
a679 1
#define	SYS_MAXSYSCALL	288
@


1.72
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.65 2003/12/31 00:13:24 millert Exp 
d673 4
a676 1
#define	SYS_MAXSYSCALL	287
@


1.71
log
@regen now that [gs]etpriority(2) take id_t, not int.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.64 2003/12/11 23:02:30 millert Exp 
d31 1
a31 1
/* syscall: "wait4" ret: "int" args: "int" "int *" "int" "struct rusage *" */
@


1.70
log
@regen after poll(2) change
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.63 2003/12/10 23:10:08 millert Exp 
d267 1
a267 1
/* syscall: "setpriority" ret: "int" args: "int" "int" "int" */
d278 1
a278 1
/* syscall: "getpriority" ret: "int" args: "int" "int" */
@


1.69
log
@Regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.62 2003/09/07 21:00:27 miod Exp 
d570 1
a570 1
/* syscall: "poll" ret: "int" args: "struct pollfd *" "int" "int" */
@


1.68
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.61 2003/07/01 22:18:09 tedu Exp 
@


1.67
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.60 2003/06/23 04:26:53 deraadt Exp 
d669 1
a669 3
/* syscall: "omquery" ret: "int" args: "int" "void **" "size_t" "int" "off_t" */
#define	SYS_omquery	285

@


1.66
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.58 2003/05/10 17:53:58 miod Exp 
@


1.65
log
@Regen
@
text
@d570 1
a570 1
/* syscall: "poll" ret: "int" args: "struct pollfd *" "unsigned long" "int" */
@


1.64
log
@Regen (omsync deprecation)
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.57 2003/04/29 19:52:32 miod Exp 
d244 1
a244 2
/* syscall: "swapon" ret: "int" args: "const char *" */
#define	SYS_swapon	85
@


1.63
log
@sync mquery.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.56 2003/04/28 21:32:08 drahn Exp 
d195 1
a195 2
/* syscall: "omsync" ret: "int" args: "caddr_t" "size_t" */
#define	SYS_omsync	65
@


1.62
log
@mquery backout sync.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.55 2003/04/25 20:32:07 drahn Exp 
d671 2
a672 2
/* syscall: "mquery" ret: "int" args: "int" "void **" "size_t" "int" "off_t" */
#define	SYS_mquery	285
d674 4
a677 1
#define	SYS_MAXSYSCALL	286
@


1.61
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.54 2003/04/25 18:30:18 drahn Exp 
d671 2
a672 2
/* syscall: "omquery" ret: "int" args: "int" "void **" "size_t" "int" "off_t" */
#define	SYS_omquery	285
d674 1
a674 4
/* syscall: "mquery" ret: "void *" args: "void *" "size_t" "int" "int" "int" "long" "off_t" */
#define	SYS_mquery	286

#define	SYS_MAXSYSCALL	287
@


1.60
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.53 2003/04/14 04:53:50 art Exp 
d671 2
a672 2
/* syscall: "mquery" ret: "int" args: "int" "void **" "size_t" "int" "off_t" */
#define	SYS_mquery	285
d674 4
a677 1
#define	SYS_MAXSYSCALL	286
@


1.59
log
@There are two related changes.

The first one is an mquery(2) syscall. It's for asking the VM system
about where to map things. It will be used by ld.so, read the man page
for details.

The second change is related and is a centralization of uvm_map hint
that all callers of uvm_map calculated. This will allow us to adjust
this hint on architectures that have segments for non-exec mappings.

deraadt@@ drahn@@ ok.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.52 2003/01/30 03:29:49 millert Exp 
@


1.58
log
@regen now that setreuid/setregid have moved out of compat and into kern
@
text
@d671 4
a674 1
#define	SYS_MAXSYSCALL	285
@


1.57
log
@regen due to addition of [gs]etres[ug]id(2)
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.51 2002/10/30 20:02:58 millert Exp 
d343 2
a344 1
				/* 126 is compat_43 osetreuid */
d346 2
a347 1
				/* 127 is compat_43 osetregid */
@


1.56
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.50 2002/07/06 19:14:20 nordin Exp 
d657 13
a669 1
#define	SYS_MAXSYSCALL	281
@


1.55
log
@Regen after syscall changes (option PTRACE)
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.49 2002/03/14 00:42:25 miod Exp 
a435 6

/* syscall: "ntp_gettime" ret: "int" args: "struct ntptimeval *" */
#define	SYS_ntp_gettime	175

/* syscall: "ntp_adjtime" ret: "int" args: "struct timex *" */
#define	SYS_ntp_adjtime	176
@


1.54
log
@EA sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.48 2002/02/22 20:37:45 drahn Exp 
@


1.53
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.47 2001/06/26 19:56:52 dugsong Exp 
d642 22
a663 1
#define	SYS_MAXSYSCALL	274
@


1.53.4.1
log
@Sync UBC branch to -current
@
text
@d642 1
a642 22
/* syscall: "extattrctl" ret: "int" args: "const char *" "int" "const char *" "int" "const char *" */
#define	SYS_extattrctl	274

/* syscall: "extattr_set_file" ret: "int" args: "const char *" "int" "const char *" "void *" "size_t" */
#define	SYS_extattr_set_file	275

/* syscall: "extattr_get_file" ret: "ssize_t" args: "const char *" "int" "const char *" "void *" "size_t" */
#define	SYS_extattr_get_file	276

/* syscall: "extattr_delete_file" ret: "int" args: "const char *" "int" "const char *" */
#define	SYS_extattr_delete_file	277

/* syscall: "extattr_set_fd" ret: "int" args: "int" "int" "const char *" "void *" "size_t" */
#define	SYS_extattr_set_fd	278

/* syscall: "extattr_get_fd" ret: "ssize_t" args: "int" "int" "const char *" "void *" "size_t" */
#define	SYS_extattr_get_fd	279

/* syscall: "extattr_delete_fd" ret: "int" args: "int" "int" "const char *" */
#define	SYS_extattr_delete_fd	280

#define	SYS_MAXSYSCALL	281
@


1.53.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.53.4.1 2002/06/11 03:32:33 art Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.50 2002/07/06 19:14:20 nordin Exp 
d436 6
@


1.53.4.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.58 2003/05/10 17:53:58 miod Exp 
d195 2
a196 1
				/* 65 is compat_25 omsync */
d245 2
a246 1
				/* 85 is compat_25 swapon */
d343 1
a343 2
/* syscall: "setreuid" ret: "int" args: "uid_t" "uid_t" */
#define	SYS_setreuid	126
d345 1
a345 2
/* syscall: "setregid" ret: "int" args: "gid_t" "gid_t" */
#define	SYS_setregid	127
d657 1
a657 19
/* syscall: "getresuid" ret: "int" args: "uid_t *" "uid_t *" "uid_t *" */
#define	SYS_getresuid	281

/* syscall: "setresuid" ret: "int" args: "uid_t" "uid_t" "uid_t" */
#define	SYS_setresuid	282

/* syscall: "getresgid" ret: "int" args: "gid_t *" "gid_t *" "gid_t *" */
#define	SYS_getresgid	283

/* syscall: "setresgid" ret: "int" args: "gid_t" "gid_t" "gid_t" */
#define	SYS_setresgid	284

/* syscall: "omquery" ret: "int" args: "int" "void **" "size_t" "int" "off_t" */
#define	SYS_omquery	285

/* syscall: "mquery" ret: "void *" args: "void *" "size_t" "int" "int" "int" "long" "off_t" */
#define	SYS_mquery	286

#define	SYS_MAXSYSCALL	287
@


1.52
log
@regen
@
text
@@


1.51
log
@implement djb's getpeereid(2), to allow local-domain servers to determine client credentials. mostly from superscript.com. deraadt@@ ok
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.46 2001/06/16 22:16:23 deraadt Exp 
@


1.50
log
@sync
@
text
@d639 4
a642 1
#define	SYS_MAXSYSCALL	273
@


1.49
log
@regen for COMPAT_2{3,5}
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.45 2001/05/16 17:14:35 millert Exp 
d422 1
a422 1
/* syscall: "sysarch" ret: "int" args: "int" "char *" */
@


1.48
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.44 2001/03/09 15:11:47 art Exp 
d61 1
a61 2
/* syscall: "ogetfsstat" ret: "int" args: "struct statfs *" "long" "int" */
#define	SYS_ogetfsstat	18
d409 1
a409 2
/* syscall: "ostatfs" ret: "int" args: "const char *" "struct ostatfs *" */
#define	SYS_ostatfs	157
d411 1
a411 2
/* syscall: "ofstatfs" ret: "int" args: "int" "struct ostatfs *" */
#define	SYS_ofstatfs	158
d527 1
a527 2
/* syscall: "__osemctl" ret: "int" args: "int" "int" "int" "union semun *" */
#define	SYS___osemctl	220
d536 1
a536 2
/* syscall: "omsgctl" ret: "int" args: "int" "int" "struct omsqid_ds *" */
#define	SYS_omsgctl	224
d550 1
a550 2
/* syscall: "oshmctl" ret: "int" args: "int" "int" "struct oshmid_ds *" */
#define	SYS_oshmctl	229
@


1.47
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.43 2000/11/16 20:02:17 provos Exp 
d639 7
a645 1
#define	SYS_MAXSYSCALL	271
@


1.46
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.42 2000/09/12 17:25:56 millert Exp 
d633 7
a639 1
#define	SYS_MAXSYSCALL	269
@


1.45
log
@regen-vtrace
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.41 2000/06/22 22:41:19 mickey Exp 
d524 1
a524 1
/* syscall: "getpgid" ret: "int" args: "pid_t" */
d591 1
a591 1
/* syscall: "getsid" ret: "int" args: "pid_t" */
@


1.44
log
@sys_semconfig goes foom
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.40 2000/05/01 23:10:58 deraadt Exp 
a314 3

/* syscall: "vtrace" ret: "int" args: "int" "int" */
#define	SYS_vtrace	115
@


1.43
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.39 2000/04/20 06:32:23 deraadt Exp 
d542 1
a542 3
/* syscall: "semconfig" ret: "int" args: "int" */
#define	SYS_semconfig	223

@


1.42
log
@regen (with correct reference from syscalls.master)
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.38 2000/02/07 04:49:27 assar Exp 
d437 6
d632 7
a638 1
#define	SYS_MAXSYSCALL	267
@


1.42.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.48 2001/03/09 15:12:53 art Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.44 2001/03/09 15:11:47 art Exp 
d316 3
a436 6
/* syscall: "pread" ret: "ssize_t" args: "int" "void *" "size_t" "int" "off_t" */
#define	SYS_pread	173

/* syscall: "pwrite" ret: "ssize_t" args: "int" "const void *" "size_t" "int" "off_t" */
#define	SYS_pwrite	174

d521 1
a521 1
/* syscall: "getpgid" ret: "pid_t" args: "pid_t" */
d536 3
a538 1
				/* 223 is obsolete sys_semconfig */
d590 1
a590 1
/* syscall: "getsid" ret: "pid_t" args: "pid_t" */
d626 1
a626 19
/* syscall: "preadv" ret: "ssize_t" args: "int" "const struct iovec *" "int" "int" "off_t" */
#define	SYS_preadv	267

/* syscall: "pwritev" ret: "ssize_t" args: "int" "const struct iovec *" "int" "int" "off_t" */
#define	SYS_pwritev	268

/* syscall: "kqueue" ret: "int" args: */
#define	SYS_kqueue	269

/* syscall: "kevent" ret: "int" args: "int" "const struct kevent *" "int" "struct kevent *" "int" "const struct timespec *" */
#define	SYS_kevent	270

/* syscall: "mlockall" ret: "int" args: "int" */
#define	SYS_mlockall	271

/* syscall: "munlockall" ret: "int" args: */
#define	SYS_munlockall	272

#define	SYS_MAXSYSCALL	273
@


1.42.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.42.2.1 2001/05/14 22:45:04 niklas Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.47 2001/06/26 19:56:52 dugsong Exp 
d61 2
a62 1
				/* 18 is compat_25 ogetfsstat */
d410 2
a411 1
				/* 157 is compat_25 ostatfs */
d413 2
a414 1
				/* 158 is compat_25 ostatfs */
d425 1
a425 1
/* syscall: "sysarch" ret: "int" args: "int" "void *" */
d530 2
a531 1
				/* 220 is compat_23 __osemctl */
d540 2
a541 1
				/* 224 is compat_23 omsgctl */
d555 2
a556 1
				/* 229 is compat_23 oshmctl */
d645 1
a645 4
/* syscall: "getpeereid" ret: "int" args: "int" "uid_t *" "gid_t *" */
#define	SYS_getpeereid	273

#define	SYS_MAXSYSCALL	274
@


1.42.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.42.2.2 2001/07/04 11:00:32 niklas Exp $	*/
@


1.42.2.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.48 2002/02/22 20:37:45 drahn Exp 
d642 1
a642 22
/* syscall: "extattrctl" ret: "int" args: "const char *" "int" "const char *" "int" "const char *" */
#define	SYS_extattrctl	274

/* syscall: "extattr_set_file" ret: "int" args: "const char *" "int" "const char *" "void *" "size_t" */
#define	SYS_extattr_set_file	275

/* syscall: "extattr_get_file" ret: "ssize_t" args: "const char *" "int" "const char *" "void *" "size_t" */
#define	SYS_extattr_get_file	276

/* syscall: "extattr_delete_file" ret: "int" args: "const char *" "int" "const char *" */
#define	SYS_extattr_delete_file	277

/* syscall: "extattr_set_fd" ret: "int" args: "int" "int" "const char *" "void *" "size_t" */
#define	SYS_extattr_set_fd	278

/* syscall: "extattr_get_fd" ret: "ssize_t" args: "int" "int" "const char *" "void *" "size_t" */
#define	SYS_extattr_get_fd	279

/* syscall: "extattr_delete_fd" ret: "int" args: "int" "int" "const char *" */
#define	SYS_extattr_delete_fd	280

#define	SYS_MAXSYSCALL	281
@


1.42.2.5
log
@Merge in -current from roughly a week ago
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.49 2002/03/14 00:42:25 miod Exp 
@


1.42.2.6
log
@Sync the SMP branch with 3.3
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.52 2003/01/30 03:29:49 millert Exp 
d343 1
a343 2
/* syscall: "setreuid" ret: "int" args: "uid_t" "uid_t" */
#define	SYS_setreuid	126
d345 1
a345 2
/* syscall: "setregid" ret: "int" args: "gid_t" "gid_t" */
#define	SYS_setregid	127
d437 6
d663 1
a663 13
/* syscall: "getresuid" ret: "int" args: "uid_t *" "uid_t *" "uid_t *" */
#define	SYS_getresuid	281

/* syscall: "setresuid" ret: "int" args: "uid_t" "uid_t" "uid_t" */
#define	SYS_setresuid	282

/* syscall: "getresgid" ret: "int" args: "gid_t *" "gid_t *" "gid_t *" */
#define	SYS_getresgid	283

/* syscall: "setresgid" ret: "int" args: "gid_t" "gid_t" "gid_t" */
#define	SYS_setresgid	284

#define	SYS_MAXSYSCALL	285
@


1.42.2.7
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.42.2.6 2003/03/28 00:41:30 niklas Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.58 2003/05/10 17:53:58 miod Exp 
d195 2
a196 1
				/* 65 is compat_25 omsync */
d245 2
a246 1
				/* 85 is compat_25 swapon */
d671 1
a671 7
/* syscall: "omquery" ret: "int" args: "int" "void **" "size_t" "int" "off_t" */
#define	SYS_omquery	285

/* syscall: "mquery" ret: "void *" args: "void *" "size_t" "int" "int" "int" "long" "off_t" */
#define	SYS_mquery	286

#define	SYS_MAXSYSCALL	287
@


1.42.2.8
log
@Biglock!  Most of the logic
comes from NetBSD.
Also a lot of fixes, enough to get a dual cpu machine actually run MP for a
very short while (we are just talking about seconds) before starving out one
of the cpus.  More coming very soon.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.38.2.6 2003/05/13 19:21:28 ho Exp 
@


1.42.2.9
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d7 1
a7 1
 * created from;	OpenBSD
d31 1
a31 1
/* syscall: "wait4" ret: "pid_t" args: "pid_t" "int *" "int" "struct rusage *" */
d162 2
a163 2
/* syscall: "osigaltstack" ret: "int" args: "const struct osigaltstack *" "struct osigaltstack *" */
#define	SYS_osigaltstack	53
d267 1
a267 1
/* syscall: "setpriority" ret: "int" args: "int" "id_t" "int" */
d278 1
a278 1
/* syscall: "getpriority" ret: "int" args: "int" "id_t" */
d570 1
a570 1
/* syscall: "poll" ret: "int" args: "struct pollfd *" "u_int" "int" */
d669 3
a671 1
				/* 285 is obsolete sys_omquery */
d675 1
a675 7
/* syscall: "closefrom" ret: "int" args: "int" */
#define	SYS_closefrom	287

/* syscall: "sigaltstack" ret: "int" args: "const struct sigaltstack *" "struct sigaltstack *" */
#define	SYS_sigaltstack	288

#define	SYS_MAXSYSCALL	289
@


1.42.2.10
log
@Merge with the trunk
@
text
@d526 2
a527 1
				/* 222 is compat_35 semop */
d549 2
a550 1
				/* 231 is compat_35 shmget */
d679 1
a679 7
/* syscall: "shmget" ret: "int" args: "key_t" "size_t" "int" */
#define	SYS_shmget	289

/* syscall: "semop" ret: "int" args: "int" "struct sembuf *" "size_t" */
#define	SYS_semop	290

#define	SYS_MAXSYSCALL	291
@


1.41
log
@update to use new checkexp vfs operation
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.37 1999/06/07 07:17:42 deraadt Exp 
@


1.40
log
@regen
@
text
@d617 10
a626 1
#define	SYS_MAXSYSCALL	264
@


1.39
log
@sync
@
text
@@


1.38
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.36 1999/05/31 17:34:47 millert Exp 
d130 2
a131 2
/* syscall: "pipe" ret: "int" args: */
#define	SYS_pipe	42
d614 4
a617 1
#define	SYS_MAXSYSCALL	263
@


1.37
log
@New struct statfs with mount options.  NOTE: this replaces statfs(2),
fstatfs(2), and getfsstat(2) so you will need to build a new kernel
before doing a "make build" or you will get "unimplemented syscall" errors.

The new struct statfs has the following featuires:
o Has a u_int32_t flags field--now softdep can have a real flag.

o Uses u_int32_t instead of longs (nicer on the alpha).  Note: the man
page used to lie about setting invalid/unused fields to -1.  SunOS does
that but our code never has.

o Gets rid of f_type completely.  It hasn't been used since NetBSD 0.9
and having it there but always 0 is confusing.  It is conceivable
that this may cause some old code to not compile but that is better
than silently breaking.

o Adds a mount_info union that contains the FSTYPE_args struct.  This
means that "mount" can now tell you all the options a filesystem was
mounted with.  This is especially nice for NFS.

Other changes:
o The linux statfs emulation didn't convert between BSD fs names
  and linux f_type numbers.  Now it does, since the BSD f_type
  number is useless to linux apps (and has been removed anyway)

o FreeBSD's struct statfs is different from our (both old and new)
and thus needs conversion.  Previously, the OpenBSD syscalls
were used without any real translation.

o mount(8) will now show extra info when invoked with no arguments.
However, to see *everything* you need to use the -v (verbose) flag.
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.35 1999/05/22 21:23:40 weingart Exp 
@


1.36
log
@Sync syscalls.master
@
text
@d61 2
a62 2
/* syscall: "getfsstat" ret: "int" args: "struct statfs *" "long" "int" */
#define	SYS_getfsstat	18
d413 2
a414 2
/* syscall: "statfs" ret: "int" args: "const char *" "struct statfs *" */
#define	SYS_statfs	157
d416 2
a417 2
/* syscall: "fstatfs" ret: "int" args: "int" "struct statfs *" */
#define	SYS_fstatfs	158
d605 10
a614 1
#define	SYS_MAXSYSCALL	260
@


1.35
log
@forgot to regen after socklen_t changes
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.34 1999/02/15 21:28:23 millert Exp 
d478 3
@


1.34
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.32 1998/11/18 01:14:25 art Exp 
d93 1
a93 1
/* syscall: "recvfrom" ret: "ssize_t" args: "int" "void *" "size_t" "int" "struct sockaddr *" "int *" */
d96 1
a96 1
/* syscall: "accept" ret: "int" args: "int" "struct sockaddr *" "int *" */
d102 1
a102 1
/* syscall: "getsockname" ret: "int" args: "int" "struct sockaddr *" "int *" */
d276 1
a276 1
/* syscall: "connect" ret: "int" args: "int" "const struct sockaddr *" "int" */
d291 1
a291 1
/* syscall: "bind" ret: "int" args: "int" "const struct sockaddr *" "int" */
d294 1
a294 1
/* syscall: "setsockopt" ret: "int" args: "int" "int" "int" "const void *" "int" */
d326 1
a326 1
/* syscall: "getsockopt" ret: "int" args: "int" "int" "int" "void *" "int *" */
d364 1
a364 1
/* syscall: "sendto" ret: "ssize_t" args: "int" "const void *" "size_t" "int" "const struct sockaddr *" "int" */
@


1.33
log
@Sync with previous commit of syscall.master that did not make it into the changelogs. (enable xfspioctl even when XFS is not defined)
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.31 1998/09/17 20:54:04 art Exp 
@


1.32
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.30 1998/08/30 18:18:00 deraadt Exp 
@


1.31
log
@regen with xfspioctl
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.29 1998/08/30 18:04:21 art Exp 
@


1.30
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.28 1998/06/12 08:31:11 deraadt Exp 
d520 3
@


1.29
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.27 1998/06/11 18:29:53 deraadt Exp 
@


1.28
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.26 1998/06/02 05:22:29 deraadt Exp 
d521 2
a522 2
/* syscall: "__semctl" ret: "int" args: "int" "int" "int" "union semun *" */
#define	SYS___semctl	220
d533 2
a534 2
/* syscall: "msgctl" ret: "int" args: "int" "int" "struct msqid_ds *" */
#define	SYS_msgctl	224
d548 2
a549 2
/* syscall: "shmctl" ret: "int" args: "int" "int" "struct shmid_ds *" */
#define	SYS_shmctl	229
d590 10
a599 1
#define	SYS_MAXSYSCALL	257
@


1.27
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.25 1998/05/11 06:13:45 deraadt Exp 
d506 1
a506 1
/* syscall: "mlock" ret: "int" args: "void *" "size_t" */
d509 1
a509 1
/* syscall: "munlock" ret: "int" args: "void *" "size_t" */
@


1.26
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.24 1998/04/25 07:14:45 deraadt Exp 
d539 1
a539 1
/* syscall: "msgsnd" ret: "int" args: "int" "void *" "size_t" "int" */
d545 1
a545 1
/* syscall: "shmat" ret: "void *" args: "int" "void *" "int" */
d551 1
a551 1
/* syscall: "shmdt" ret: "int" args: "void *" */
@


1.25
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.23 1998/02/16 21:56:28 millert Exp 
d178 1
a178 1
/* syscall: "readlink" ret: "int" args: "const char *" "char *" "int" */
@


1.24
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.22 1998/02/10 08:44:07 deraadt Exp 
d108 1
a108 1
/* syscall: "chflags" ret: "int" args: "const char *" "u_long" */
d111 1
a111 1
/* syscall: "fchflags" ret: "int" args: "int" "u_long" */
@


1.23
log
@Sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.21 1998/02/08 22:37:01 tholo Exp 
d49 1
a49 1
/* syscall: "mknod" ret: "int" args: "const char *" "mode_t" "dev_t" */
d52 1
a52 1
/* syscall: "chmod" ret: "int" args: "const char *" "mode_t" */
d184 1
a184 1
/* syscall: "umask" ret: "mode_t" args: "mode_t" */
d342 1
a342 1
/* syscall: "fchmod" ret: "int" args: "int" "mode_t" */
d361 1
a361 1
/* syscall: "mkfifo" ret: "int" args: "const char *" "mode_t" */
d373 1
a373 1
/* syscall: "mkdir" ret: "int" args: "const char *" "mode_t" */
@


1.22
log
@sync
@
text
@d1 2
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.20 1998/01/02 05:32:51 deraadt Exp 
d10 1
a10 1
/* syscall: "syscall" ret: "int" args: */
d13 1
a13 1
/* syscall: "exit" ret: "int" args: "int" */
d19 1
a19 1
/* syscall: "read" ret: "int" args: "int" "char *" "u_int" */
d22 1
a22 1
/* syscall: "write" ret: "int" args: "int" "char *" "u_int" */
d25 1
a25 1
/* syscall: "open" ret: "int" args: "char *" "int" "int" */
d36 1
a36 1
/* syscall: "link" ret: "int" args: "char *" "char *" */
d39 1
a39 1
/* syscall: "unlink" ret: "int" args: "char *" */
d43 1
a43 1
/* syscall: "chdir" ret: "int" args: "char *" */
d49 1
a49 1
/* syscall: "mknod" ret: "int" args: "char *" "int" "int" */
d52 1
a52 1
/* syscall: "chmod" ret: "int" args: "char *" "int" */
d55 1
a55 1
/* syscall: "chown" ret: "int" args: "char *" "int" "int" */
d69 1
a69 1
/* syscall: "mount" ret: "int" args: "char *" "char *" "int" "caddr_t" */
d72 1
a72 1
/* syscall: "unmount" ret: "int" args: "char *" "int" */
d87 1
a87 1
/* syscall: "recvmsg" ret: "int" args: "int" "struct msghdr *" "int" */
d90 1
a90 1
/* syscall: "sendmsg" ret: "int" args: "int" "caddr_t" "int" */
d93 1
a93 1
/* syscall: "recvfrom" ret: "int" args: "int" "caddr_t" "size_t" "int" "caddr_t" "int *" */
d96 1
a96 1
/* syscall: "accept" ret: "int" args: "int" "caddr_t" "int *" */
d99 1
a99 1
/* syscall: "getpeername" ret: "int" args: "int" "caddr_t" "int *" */
d102 1
a102 1
/* syscall: "getsockname" ret: "int" args: "int" "caddr_t" "int *" */
d105 1
a105 1
/* syscall: "access" ret: "int" args: "char *" "int" */
d108 1
a108 1
/* syscall: "chflags" ret: "int" args: "char *" "int" */
d111 1
a111 1
/* syscall: "fchflags" ret: "int" args: "int" "int" */
d114 1
a114 1
/* syscall: "sync" ret: "int" args: */
d127 1
a127 1
/* syscall: "dup" ret: "int" args: "u_int" */
d136 1
a136 1
/* syscall: "profil" ret: "int" args: "char *" "size_t" "u_long" "u_int" */
d139 1
a139 1
/* syscall: "ktrace" ret: "int" args: "char *" "int" "int" "int" */
d142 1
a142 1
/* syscall: "sigaction" ret: "int" args: "int" "struct sigaction *" "struct sigaction *" */
d154 1
a154 1
/* syscall: "setlogin" ret: "int" args: "char *" */
d157 1
a157 1
/* syscall: "acct" ret: "int" args: "char *" */
d163 1
a163 1
/* syscall: "sigaltstack" ret: "int" args: "struct sigaltstack *" "struct sigaltstack *" */
d166 1
a166 1
/* syscall: "ioctl" ret: "int" args: "int" "u_long" "caddr_t" */
d172 1
a172 1
/* syscall: "revoke" ret: "int" args: "char *" */
d175 1
a175 1
/* syscall: "symlink" ret: "int" args: "char *" "char *" */
d178 1
a178 1
/* syscall: "readlink" ret: "int" args: "char *" "char *" "int" */
d181 1
a181 1
/* syscall: "execve" ret: "int" args: "char *" "char **" "char **" */
d184 1
a184 1
/* syscall: "umask" ret: "int" args: "int" */
d187 1
a187 1
/* syscall: "chroot" ret: "int" args: "char *" */
d229 1
a229 1
/* syscall: "getgroups" ret: "int" args: "u_int" "gid_t *" */
d232 1
a232 1
/* syscall: "setgroups" ret: "int" args: "u_int" "gid_t *" */
d238 1
a238 1
/* syscall: "setpgid" ret: "int" args: "int" "int" */
d241 1
a241 1
/* syscall: "setitimer" ret: "int" args: "u_int" "struct itimerval *" "struct itimerval *" */
d246 1
a246 1
/* syscall: "swapon" ret: "int" args: "char *" */
d249 1
a249 1
/* syscall: "getitimer" ret: "int" args: "u_int" "struct itimerval *" */
d258 1
a258 1
/* syscall: "dup2" ret: "int" args: "u_int" "u_int" */
d261 1
a261 1
/* syscall: "fcntl" ret: "int" args: "int" "int" "void *" */
d264 1
a264 1
/* syscall: "select" ret: "int" args: "u_int" "fd_set *" "fd_set *" "fd_set *" "struct timeval *" */
d276 1
a276 1
/* syscall: "connect" ret: "int" args: "int" "caddr_t" "int" */
d291 1
a291 1
/* syscall: "bind" ret: "int" args: "int" "caddr_t" "int" */
d294 1
a294 1
/* syscall: "setsockopt" ret: "int" args: "int" "int" "int" "caddr_t" "int" */
d326 1
a326 1
/* syscall: "getsockopt" ret: "int" args: "int" "int" "int" "caddr_t" "int *" */
d330 1
a330 1
/* syscall: "readv" ret: "int" args: "int" "struct iovec *" "u_int" */
d333 1
a333 1
/* syscall: "writev" ret: "int" args: "int" "struct iovec *" "u_int" */
d336 1
a336 1
/* syscall: "settimeofday" ret: "int" args: "struct timeval *" "struct timezone *" */
d339 1
a339 1
/* syscall: "fchown" ret: "int" args: "int" "int" "int" */
d342 1
a342 1
/* syscall: "fchmod" ret: "int" args: "int" "int" */
d351 1
a351 1
/* syscall: "rename" ret: "int" args: "char *" "char *" */
d361 1
a361 1
/* syscall: "mkfifo" ret: "int" args: "char *" "int" */
d364 1
a364 1
/* syscall: "sendto" ret: "int" args: "int" "caddr_t" "size_t" "int" "caddr_t" "int" */
d373 1
a373 1
/* syscall: "mkdir" ret: "int" args: "char *" "int" */
d376 1
a376 1
/* syscall: "rmdir" ret: "int" args: "char *" */
d379 1
a379 1
/* syscall: "utimes" ret: "int" args: "char *" "struct timeval *" */
d383 1
a383 1
/* syscall: "adjtime" ret: "int" args: "struct timeval *" "struct timeval *" */
d401 1
a401 1
/* syscall: "quotactl" ret: "int" args: "char *" "int" "int" "caddr_t" */
d408 1
a408 1
/* syscall: "nfssvc" ret: "int" args: "int" "caddr_t" */
d413 1
a413 1
/* syscall: "statfs" ret: "int" args: "char *" "struct statfs *" */
d419 1
a419 1
/* syscall: "getfh" ret: "int" args: "char *" "fhandle_t *" */
d437 1
a437 1
/* syscall: "ntp_gettime" ret: "int" args: "struct timex *" */
d464 1
a464 1
/* syscall: "stat" ret: "int" args: "char *" "struct stat *" */
d470 1
a470 1
/* syscall: "lstat" ret: "int" args: "char *" "struct stat *" */
d473 1
a473 1
/* syscall: "pathconf" ret: "int" args: "char *" "int" */
d476 1
a476 1
/* syscall: "fpathconf" ret: "int" args: "int" "int" */
d479 1
a479 1
/* syscall: "getrlimit" ret: "int" args: "u_int" "struct rlimit *" */
d482 1
a482 1
/* syscall: "setrlimit" ret: "int" args: "u_int" "struct rlimit *" */
d485 1
a485 1
/* syscall: "getdirentries" ret: "int" args: "int" "char *" "u_int" "long *" */
d491 1
a491 1
/* syscall: "__syscall" ret: "int" args: */
d497 1
a497 1
/* syscall: "truncate" ret: "int" args: "char *" "int" "off_t" */
d512 1
a512 1
/* syscall: "undelete" ret: "int" args: "char *" */
d515 1
a515 1
/* syscall: "futimes" ret: "int" args: "int" "struct timeval *" */
d545 1
a545 1
/* syscall: "shmat" ret: "int" args: "int" "void *" "int" */
d581 1
a581 1
/* syscall: "lchown" ret: "int" args: "char *" "int" "int" */
@


1.21
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.19 1997/11/14 20:56:03 deraadt Exp 
d8 1
d10 2
d13 2
d16 2
d19 2
d22 2
d25 2
d28 2
d31 1
d33 2
d36 2
d39 1
d41 1
d43 2
d46 2
d49 2
d52 2
d55 2
d58 2
d61 1
d63 2
d66 2
d69 2
d72 2
d75 2
d78 2
d81 2
d84 2
d87 2
d90 2
d93 2
d96 2
d99 2
d102 2
d105 2
d108 2
d111 2
d114 2
d117 1
d119 2
d122 1
d124 2
d127 2
d130 2
d133 2
d136 2
d139 2
d142 2
d145 2
d148 2
d151 2
d154 2
d157 2
d160 2
d163 2
d166 2
d169 2
d172 2
d175 2
d178 2
d181 2
d184 2
d187 1
d189 1
d191 1
d193 2
d196 2
d199 1
d202 1
d204 2
d207 1
d209 2
d212 2
d215 2
d218 2
d221 1
d224 1
d226 2
d229 2
d232 2
d235 2
d238 2
d241 1
d243 2
d246 2
d249 1
d251 1
d253 1
d255 2
d258 2
d261 2
d264 2
d267 2
d270 2
d273 2
d276 1
d278 2
d281 1
d283 1
d285 2
d288 2
d291 2
d294 2
d297 1
d300 1
d302 1
d304 2
d307 1
d309 1
d311 1
d313 2
d316 1
d318 1
d320 2
d323 2
d326 1
d328 1
d330 2
d333 2
d336 2
d339 2
d342 1
d344 1
d346 1
d348 2
d351 1
d353 1
d355 2
d358 2
d361 2
d364 2
d367 2
d370 2
d373 2
d376 2
d379 1
d381 1
d383 1
d385 1
d387 1
d389 1
d391 1
d393 1
d395 2
d398 2
d401 1
d403 1
d405 2
d408 1
d410 2
d413 2
d416 2
d419 1
d421 1
d423 1
d425 2
d428 1
d430 1
d432 1
d434 2
d437 2
d440 2
d443 2
d446 2
d449 2
d452 2
d455 2
d458 2
d461 2
d464 2
d467 2
d470 2
d473 2
d476 2
d479 2
d482 2
d485 2
d488 2
d491 2
d494 2
d497 2
d500 2
d503 2
d506 2
d509 2
d512 2
d515 2
d518 2
d521 2
d524 2
d527 2
d530 2
d533 2
d536 2
d539 2
d542 2
d545 2
d548 2
d551 2
d554 2
d557 2
d560 2
d563 2
d566 2
d569 2
d572 2
d575 2
d578 2
d581 2
d584 2
d587 1
@


1.20
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.18 1997/11/13 18:35:31 deraadt Exp 
@


1.19
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.17 1997/11/13 07:11:12 deraadt Exp 
d73 1
a73 1
#define	SYS_msync	65
d220 2
a221 1
#define	SYS_MAXSYSCALL	256
@


1.18
log
@repair all that gunk
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.16 1997/08/29 20:44:24 kstailey Exp 
d219 2
a220 1
#define	SYS_MAXSYSCALL	255
@


1.17
log
@sync to syscalls.master
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.15 1997/05/30 21:43:33 kstailey Exp 
@


1.16
log
@add getpgid(2) from NetBSD
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.14 1997/04/20 20:48:27 tholo Exp 
@


1.15
log
@Add new POSIX 1003.1b related syscalls; from pk@@NetBSD
@
text
@d197 1
@


1.14
log
@Regen.
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.13 1997/01/26 05:18:27 downsj Exp 
d209 4
@


1.13
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.12 1996/10/29 03:46:28 deraadt Exp 
d213 2
a214 1
#define	SYS_MAXSYSCALL	254
@


1.12
log
@update
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.11 1996/10/04 00:59:19 deraadt Exp 
@


1.11
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.10 1996/08/25 09:51:34 deraadt Exp 
@


1.10
log
@sync to syscalls.master
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.9 1996/05/18 08:53:10 deraadt Exp 
d212 2
a213 1
#define	SYS_MAXSYSCALL	253
@


1.9
log
@sync with master
@
text
@d5 1
a5 1
 * created from	OpenBSD
d211 2
a212 1
#define	SYS_MAXSYSCALL	252
@


1.8
log
@NetBSD 960317 merge
@
text
@d196 1
@


1.7
log
@ran makesyscalls.sh
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.30 1995/11/22 23:07:29 cgd Exp 
d170 1
a171 1
#define	SYS_ntp_gettime	177
@


1.6
log
@Merge of NetBSD 960317
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.31 1996/02/27 04:20:41 jonathan Exp 
a169 1
#define	SYS_ntp_gettime	175
d171 1
@


1.5
log
@Add kernel PLL for system clock
Add ntp_adjtime() and ntp_gettime() system calls
Mostly stolen from FreeBSD
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.30 1995/11/22 23:07:29 cgd Exp 
d170 1
a171 1
#define	SYS_ntp_gettime	177
@


1.4
log
@plan9-like rfork() implimentation by me based on some earlier incomplete
work by rminnich@@Sarnoff.COM. still needs RFNOWAIT support.
@
text
@d170 2
@


1.3
log
@add minherit() system call
@
text
@d207 2
a208 1
#define	SYS_MAXSYSCALL	251
@


1.2
log
@update for new syscalls.master
@
text
@d206 2
a207 1
#define	SYS_MAXSYSCALL	232
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.29 1995/10/10 01:32:53 mycroft Exp 
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
