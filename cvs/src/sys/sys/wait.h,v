head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.10
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.6
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.8
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.14.0.28
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.26
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.24
	OPENBSD_5_0:1.14.0.22
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.20
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.18
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.14
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.16
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.12
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.10
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.8
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.6
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.4
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.2
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.6.0.6
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.18
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2014.06.13.22.40.31;	author matthew;	state Exp;
branches;
next	1.16;
commitid	O0RQd42uLw4XMOQG;

1.16
date	2014.02.12.05.47.36;	author guenther;	state Exp;
branches;
next	1.15;

1.15
date	2013.03.24.17.42.43;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.27.02.17.21;	author tedu;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.30.20.43.41;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2005.12.13.00.35.24;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.08.03.19.25.49;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.23.28.22;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.31.15.40.24;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.01.23.19.16.09;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.02.21.43.12;	author niklas;	state Exp;
branches
	1.6.6.1;
next	1.5;

1.5
date	96.11.14.20.28.35;	author etheisen;	state Exp;
branches
	1.5.14.1;
next	1.4;

1.4
date	96.04.21.22.32.21;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.03.03.12.12.49;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.04.03.44;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.31;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.31;	author deraadt;	state Exp;
branches;
next	;

1.5.14.1
date	2001.05.14.22.45.05;	author niklas;	state Exp;
branches;
next	1.5.14.2;

1.5.14.2
date	2002.03.06.02.17.13;	author niklas;	state Exp;
branches;
next	1.5.14.3;

1.5.14.3
date	2002.03.28.14.52.02;	author niklas;	state Exp;
branches;
next	1.5.14.4;

1.5.14.4
date	2003.06.07.11.09.08;	author ho;	state Exp;
branches;
next	1.5.14.5;

1.5.14.5
date	2004.02.19.11.01.35;	author niklas;	state Exp;
branches;
next	;

1.6.6.1
date	2002.01.31.22.55.49;	author niklas;	state Exp;
branches;
next	1.6.6.2;

1.6.6.2
date	2002.06.11.03.32.34;	author art;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Remove support for "union wait" and WSTOPPED.

union wait has been deprecated since 4.3BSD, and WSTOPPED means
something else now in POSIX, that we don't yet support.

Original diff by guenther, from 2.5 years ago.
Ports tree cleanup and re-testing by naddy.

ok deraadt, kettenis
@
text
@/*	$OpenBSD: wait.h,v 1.16 2014/02/12 05:47:36 guenther Exp $	*/
/*	$NetBSD: wait.h,v 1.11 1996/04/09 20:55:51 cgd Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1989, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)wait.h	8.2 (Berkeley) 7/10/94
 */

#ifndef _SYS_WAIT_H_
#define _SYS_WAIT_H_

#include <sys/cdefs.h>

/*
 * This file holds definitions relevent to the wait4 system call
 * and the alternate interfaces that use it (wait, wait3, waitpid).
 */

/*
 * Macros to test the exit status returned by wait
 * and extract the relevant values.
 */
#define	_WSTATUS(x)	((x) & 0177)
#define	_WSTOPPED	0177		/* _WSTATUS if process is stopped */
#define	_WCONTINUED	0177777		/* process has continued */
#define WIFSTOPPED(x)	(((x) & 0xff) == _WSTOPPED)
#define WSTOPSIG(x)	(int)(((unsigned)(x) >> 8) & 0xff)
#define WIFSIGNALED(x)	(_WSTATUS(x) != _WSTOPPED && _WSTATUS(x) != 0)
#define WTERMSIG(x)	(_WSTATUS(x))
#define WIFEXITED(x)	(_WSTATUS(x) == 0)
#define WEXITSTATUS(x)	(int)(((unsigned)(x) >> 8) & 0xff)
#define WIFCONTINUED(x)	(((x) & _WCONTINUED) == _WCONTINUED)
#if __XPG_VISIBLE
#define	WCOREFLAG	0200
#define WCOREDUMP(x)	((x) & WCOREFLAG)

#define	W_EXITCODE(ret, sig)	((ret) << 8 | (sig))
#define	W_STOPCODE(sig)		((sig) << 8 | _WSTOPPED)
#endif

/*
 * Option bits for the third argument of wait4.  WNOHANG causes the
 * wait to not hang if there are no stopped or terminated processes, rather
 * returning an error indication in this case (pid==0).  WUNTRACED
 * indicates that the caller should receive status about untraced children
 * which stop due to signals.  If children are stopped and a wait without
 * this option is done, it is as though they were still running... nothing
 * about them is returned.
 */
#define WNOHANG		1	/* don't hang in wait */
#define WUNTRACED	2	/* tell about stopped, untraced children */
#define	WCONTINUED	8	/* report a job control continued process */

#if __BSD_VISIBLE
/*
 * Tokens for special values of the "pid" parameter to wait4.
 */
#define	WAIT_ANY	(-1)	/* any process */
#define	WAIT_MYPGRP	0	/* any process in my process group */
#endif /* __BSD_VISIBLE */

#ifndef _KERNEL
#include <sys/types.h>

__BEGIN_DECLS
struct rusage;	/* forward declaration */

pid_t	wait(int *);
pid_t	waitpid(pid_t, int *, int);
#if __BSD_VISIBLE
pid_t	wait3(int *, int, struct rusage *);
pid_t	wait4(pid_t, int *, int, struct rusage *);
#endif /* __BSD_VISIBLE */
__END_DECLS
#endif /* !_KERNEL */

#endif /* !_SYS_WAIT_H_ */
@


1.16
log
@Eliminate the exit sig handling, which was only invokable via the
Linux-compat clone() syscall when *not* using CLONE_THREAD.  pirofti@@
confirms Opera runs in compat without this, so out it goes; one less hair
to choke on in kern_exit.c

ok tedu@@ pirofti@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.15 2013/03/24 17:42:43 deraadt Exp $	*/
d49 1
a49 7
#if __BSD_VISIBLE
#define	_W_INT(w)	(*(int *)&(w))	/* convert union wait to int */
#else
#define	_W_INT(i)	(i)
#endif

#define	_WSTATUS(x)	(_W_INT(x) & 0177)
d52 2
a53 2
#define WIFSTOPPED(x)	((_W_INT(x) & 0xff) == _WSTOPPED)
#define WSTOPSIG(x)	(int)(((unsigned)_W_INT(x) >> 8) & 0xff)
d57 2
a58 2
#define WEXITSTATUS(x)	(int)(((unsigned)_W_INT(x) >> 8) & 0xff)
#define WIFCONTINUED(x)	((_W_INT(x) & _WCONTINUED) == _WCONTINUED)
d61 1
a61 1
#define WCOREDUMP(x)	(_W_INT(x) & WCOREFLAG)
a85 53

#include <sys/types.h>

/*
 * Deprecated:
 * Structure of the information in the status word returned by wait4.
 * If w_stopval==WSTOPPED, then the second structure describes
 * the information returned, else the first.
 */
union wait {
	int	w_status;		/* used in syscall */
	/*
	 * Terminated process status.
	 */
	struct {
#if _BYTE_ORDER == _LITTLE_ENDIAN
		unsigned int	w_Termsig:7,	/* termination signal */
				w_Coredump:1,	/* core dump indicator */
				w_Retcode:8,	/* exit code if w_termsig==0 */
				w_Filler:16;	/* upper bits filler */
#endif
#if _BYTE_ORDER == _BIG_ENDIAN
		unsigned int	w_Filler:16,	/* upper bits filler */
				w_Retcode:8,	/* exit code if w_termsig==0 */
				w_Coredump:1,	/* core dump indicator */
				w_Termsig:7;	/* termination signal */
#endif
	} w_T;
	/*
	 * Stopped process status.  Returned
	 * only for traced children unless requested
	 * with the WUNTRACED option bit.
	 */
	struct {
#if _BYTE_ORDER == _LITTLE_ENDIAN
		unsigned int	w_Stopval:8,	/* == W_STOPPED if stopped */
				w_Stopsig:8,	/* signal that stopped us */
				w_Filler:16;	/* upper bits filler */
#endif
#if _BYTE_ORDER == _BIG_ENDIAN
		unsigned int	w_Filler:16,	/* upper bits filler */
				w_Stopsig:8,	/* signal that stopped us */
				w_Stopval:8;	/* == W_STOPPED if stopped */
#endif
	} w_S;
};
#define	w_termsig	w_T.w_Termsig
#define w_coredump	w_T.w_Coredump
#define w_retcode	w_T.w_Retcode
#define w_stopval	w_S.w_Stopval
#define w_stopsig	w_S.w_Stopsig

#define	WSTOPPED	_WSTOPPED
@


1.15
log
@label some nested #endif's
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.14 2006/04/27 02:17:21 tedu Exp $	*/
a83 3
#if __XPG_VISIBLE
#define	WALTSIG		4	/* wait for child with alternate exit signal */
#endif
@


1.14
log
@use the underscore variants of _BYTE_ORDER which are always defined
even when various "strict" compiler options are used
ok deraadt millert
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.13 2006/03/30 20:43:41 deraadt Exp $	*/
d161 1
a161 1
#endif
d163 1
a163 1
#endif
@


1.13
log
@do an int & unsigned int dance because of shift of signed value; ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.12 2005/12/13 00:35:24 millert Exp $	*/
d110 1
a110 1
#if BYTE_ORDER == LITTLE_ENDIAN
d116 1
a116 1
#if BYTE_ORDER == BIG_ENDIAN
d129 1
a129 1
#if BYTE_ORDER == LITTLE_ENDIAN
d134 1
a134 1
#if BYTE_ORDER == BIG_ENDIAN
@


1.12
log
@First step in include files overhaul.  Use __FOO_VISIBLE (as defined
in sys/cdefs.h) instead of _FOO_SOURCE.  Also fix several namespace
pollution issues, including the byte order defines.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.11 2003/08/03 19:25:49 millert Exp $	*/
d59 1
a59 1
#define WSTOPSIG(x)	((_W_INT(x) >> 8) & 0xff)
d63 1
a63 1
#define WEXITSTATUS(x)	((_W_INT(x) >> 8) & 0xff)
@


1.11
log
@Implement the WCONTINUED flag to the wait(2) family of syscalls and the
associated WIFCONTINUED macro as per 1003.1-2001.  Adapted from FreeBSD.
A minor amount of trickiness is involved here.  The value for WCONTINUED
is chosen in such a way that _WSTATUS(_WCONTINUED) == _WSTOPPED and the
WIFSTOPPED macro has been modified such that WIFSTOPPED(_WCONTINUED) !=
_WSTOPPED.  This means we don't need to add an extra check to the
WIFSIGNALED and WIFSTOPPED macros.  deraadt@@ OK.
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.10 2003/06/02 23:28:22 millert Exp $	*/
d38 2
d49 3
a51 1
#ifdef _POSIX_SOURCE
a52 3
#else
#define	_W_INT(w)	(*(int *)&(w))	/* convert union wait to int */
#define	WCOREFLAG	0200
d65 2
a66 1
#ifndef _POSIX_SOURCE
d84 1
a84 1
#ifndef _POSIX_SOURCE
d89 1
a89 3
#ifndef _POSIX_SOURCE
/* POSIX extensions and 4.2/4.3 compatibility: */

d148 1
a148 1
#endif /* _POSIX_SOURCE */
a151 1
#include <sys/cdefs.h>
d158 1
a158 1
#ifndef _POSIX_SOURCE
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.9 2003/05/31 15:40:24 deraadt Exp $	*/
d56 2
a57 1
#define WIFSTOPPED(x)	(_WSTATUS(x) == _WSTOPPED)
d63 1
d85 1
@


1.9
log
@only return 8 bits of status
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.8 2002/03/14 01:27:14 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.7 2002/01/23 19:16:09 fgsch Exp $	*/
d61 1
a61 1
#define WSTOPSIG(x)	(_W_INT(x) >> 8)
d65 1
a65 1
#define WEXITSTATUS(x)	(_W_INT(x) >> 8)
@


1.7
log
@compatability -> compatibility.
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.6 2001/04/02 21:43:12 niklas Exp $	*/
d158 2
a159 2
pid_t	wait __P((int *));
pid_t	waitpid __P((pid_t, int *, int));
d161 2
a162 2
pid_t	wait3 __P((int *, int, struct rusage *));
pid_t	wait4 __P((pid_t, int *, int, struct rusage *));
@


1.6
log
@On popular demand, the Linux-compatibility clone(2) implementation based
on NetBSD's code, as well as some faked Posix RT extensions by me.  This makes
at least simple linuxthreads tests work.
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.5 1996/11/14 20:28:35 etheisen Exp $	*/
d89 1
a89 1
/* POSIX extensions and 4.2/4.3 compatability: */
@


1.6.6.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.7 2002/01/23 19:16:09 fgsch Exp $	*/
d89 1
a89 1
/* POSIX extensions and 4.2/4.3 compatibility: */
@


1.6.6.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.6.6.1 2002/01/31 22:55:49 niklas Exp $	*/
d158 2
a159 2
pid_t	wait(int *);
pid_t	waitpid(pid_t, int *, int);
d161 2
a162 2
pid_t	wait3(int *, int, struct rusage *);
pid_t	wait4(pid_t, int *, int, struct rusage *);
@


1.5
log
@sys/types.h not machine/endian.h for alpha.
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.3 1996/03/03 12:12:49 niklas Exp $	*/
d84 3
@


1.5.14.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.6 2001/04/02 21:43:12 niklas Exp $	*/
a83 3
#ifndef _POSIX_SOURCE
#define	WALTSIG		4	/* wait for child with alternate exit signal */
#endif
@


1.5.14.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d89 1
a89 1
/* POSIX extensions and 4.2/4.3 compatibility: */
@


1.5.14.3
log
@Merge in -current from roughly a week ago
@
text
@d158 2
a159 2
pid_t	wait(int *);
pid_t	waitpid(pid_t, int *, int);
d161 2
a162 2
pid_t	wait3(int *, int, struct rusage *);
pid_t	wait4(pid_t, int *, int, struct rusage *);
@


1.5.14.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: wait.h,v 1.5.14.3 2002/03/28 14:52:02 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
d61 1
a61 1
#define WSTOPSIG(x)	((_W_INT(x) >> 8) & 0xff)
d65 1
a65 1
#define WEXITSTATUS(x)	((_W_INT(x) >> 8) & 0xff)
@


1.5.14.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d56 1
a56 2
#define	_WCONTINUED	0177777		/* process has continued */
#define WIFSTOPPED(x)	((_W_INT(x) & 0xff) == _WSTOPPED)
a61 1
#define WIFCONTINUED(x)	((_W_INT(x) & _WCONTINUED) == _WCONTINUED)
a82 1
#define	WCONTINUED	8	/* report a job control continued process */
@


1.4
log
@partial sync with netbsd 960418, more to come
@
text
@d94 1
a94 1
#include <machine/endian.h>
@


1.3
log
@From NetBSD: 960217 merge
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: wait.h,v 1.10 1995/10/19 08:14:18 jtc Exp $	*/
d108 1
a108 1
#if BYTE_ORDER == LITTLE_ENDIAN 
d114 1
a114 1
#if BYTE_ORDER == BIG_ENDIAN 
d127 1
a127 1
#if BYTE_ORDER == LITTLE_ENDIAN 
d132 1
a132 1
#if BYTE_ORDER == BIG_ENDIAN 
@


1.2
log
@from netbsd; wrap against multiple inclusion
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: wait.h,v 1.9 1995/03/26 20:25:07 jtc Exp $	*/
d38 3
d162 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
