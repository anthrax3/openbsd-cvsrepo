head	1.14;
access;
symbols
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.12
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.8
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.10
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.6
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.4
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.8
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.6
	OPENBSD_5_0:1.9.0.4
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.7.0.24
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.26
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.22
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.20
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.18
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.16
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.14
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.12
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.24
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.22
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2013.10.25.04.42.48;	author guenther;	state Exp;
branches;
next	1.13;

1.13
date	2013.09.14.01.35.02;	author guenther;	state Exp;
branches;
next	1.12;

1.12
date	2013.08.13.05.52.26;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2013.03.31.21.49.06;	author guenther;	state Exp;
branches;
next	1.10;

1.10
date	2012.09.05.17.13.36;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2010.11.02.10.51.06;	author kettenis;	state Exp;
branches;
next	1.8;

1.8
date	2010.07.26.01.56.27;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.11.23.02.30;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.11.22.55.22;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.23.28.21;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.14;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.03.21.21.27.22;	author millert;	state Exp;
branches
	1.3.14.1
	1.3.24.1;
next	1.2;

1.2
date	96.03.03.12.12.12;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.29;	author deraadt;	state Exp;
branches;
next	;

1.3.14.1
date	2002.03.28.14.52.01;	author niklas;	state Exp;
branches;
next	1.3.14.2;

1.3.14.2
date	2003.06.07.11.09.08;	author ho;	state Exp;
branches;
next	1.3.14.3;

1.3.14.3
date	2004.02.19.11.01.34;	author niklas;	state Exp;
branches;
next	;

1.3.24.1
date	2002.06.11.03.32.33;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Move the declarations for dogetrusage(), itimerround(), and dowait4()
to sys/*.h headers so that the compat/linux code can use them.
Change dowait4() to not copyout() the status value, but rather leave
that for its caller, as compat/linux has to translate it, with the
side benefit of simplifying the native code.

Originally written months ago as part of the time_t work; long
memory, prodding, and ok from pirofti@@
@
text
@/*	$OpenBSD: resource.h,v 1.13 2013/09/14 01:35:02 guenther Exp $	*/
/*	$NetBSD: resource.h,v 1.14 1996/02/09 18:25:27 christos Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)resource.h	8.2 (Berkeley) 1/4/94
 */

#ifndef _SYS_RESOURCE_H_
#define	_SYS_RESOURCE_H_

#include <sys/time.h>

/*
 * Process priority specifications to get/setpriority.
 */
#define	PRIO_MIN	(-20)
#define	PRIO_MAX	20

#define	PRIO_PROCESS	0
#define	PRIO_PGRP	1
#define	PRIO_USER	2

/*
 * Resource utilization information.
 */

#define	RUSAGE_SELF	0
#define	RUSAGE_CHILDREN	(-1)
#define	RUSAGE_THREAD	1

struct	rusage {
	struct timeval ru_utime;	/* user time used */
	struct timeval ru_stime;	/* system time used */
	long	ru_maxrss;		/* max resident set size */
#define	ru_first	ru_ixrss
	long	ru_ixrss;		/* integral shared text memory size */
	long	ru_idrss;		/* integral unshared data " */
	long	ru_isrss;		/* integral unshared stack " */
	long	ru_minflt;		/* page reclaims */
	long	ru_majflt;		/* page faults */
	long	ru_nswap;		/* swaps */
	long	ru_inblock;		/* block input operations */
	long	ru_oublock;		/* block output operations */
	long	ru_msgsnd;		/* messages sent */
	long	ru_msgrcv;		/* messages received */
	long	ru_nsignals;		/* signals received */
	long	ru_nvcsw;		/* voluntary context switches */
	long	ru_nivcsw;		/* involuntary " */
#define	ru_last		ru_nivcsw
};

/*
 * Resource limits
 */
#define	RLIMIT_CPU	0		/* cpu time in milliseconds */
#define	RLIMIT_FSIZE	1		/* maximum file size */
#define	RLIMIT_DATA	2		/* data size */
#define	RLIMIT_STACK	3		/* stack size */
#define	RLIMIT_CORE	4		/* core file size */
#define	RLIMIT_RSS	5		/* resident set size */
#define	RLIMIT_MEMLOCK	6		/* locked-in-memory address space */
#define	RLIMIT_NPROC	7		/* number of processes */
#define	RLIMIT_NOFILE	8		/* number of open files */

#define	RLIM_NLIMITS	9		/* number of resource limits */

#define	RLIM_INFINITY	(((rlim_t)1 << 63) - 1)
#define	RLIM_SAVED_MAX	RLIM_INFINITY
#define	RLIM_SAVED_CUR	RLIM_INFINITY

struct rlimit {
	rlim_t	rlim_cur;		/* current (soft) limit */
	rlim_t	rlim_max;		/* maximum value for rlim_cur */
};

#if __BSD_VISIBLE
/* Load average structure. */
struct loadavg {
	fixpt_t	ldavg[3];
	long	fscale;
};
#endif /* __BSD_VISIBLE */

#ifdef _KERNEL
extern struct loadavg averunnable;
struct process;
int	dosetrlimit(struct proc *, u_int, struct rlimit *);
int	donice(struct proc *, struct process *, int);
int	dogetrusage(struct proc *, int, struct rusage *);

#else
__BEGIN_DECLS
int	getpriority(int, id_t);
int	getrlimit(int, struct rlimit *);
int	getrusage(int, struct rusage *);
int	setpriority(int, id_t, int);
int	setrlimit(int, const struct rlimit *);
__END_DECLS

#endif	/* _KERNEL */
#endif	/* !_SYS_RESOURCE_H_ */
@


1.13
log
@Snapshots for all archs have been built, so remove the T32 code
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.12 2013/08/13 05:52:26 guenther Exp $	*/
d116 1
@


1.12
log
@Switch time_t, ino_t, clock_t, and struct kevent's ident and data
members to 64bit types.  Assign new syscall numbers for (almost
all) the syscalls that involve the affected types, including anything
with time_t, timeval, itimerval, timespec, rusage, dirent, stat,
or kevent arguments.  Add a d_off member to struct dirent and replace
getdirentries() with getdents(), thus immensely simplifying and
accelerating telldir/seekdir.  Build perl with -DBIG_TIME.

Bump the major on every single base library: the compat bits included
here are only good enough to make the transition; the T32 compat
option will be burned as soon as we've reached the new world are
are happy with the snapshots for all architectures.

DANGER: ABI incompatibility.  Updating to this kernel requires extra
work or you won't be able to login: install a snapshot instead.

Much assistance in fixing userland issues from deraadt@@ and tedu@@
and build assistance from todd@@ and otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.11 2013/03/31 21:49:06 guenther Exp $	*/
a77 28
#ifdef _KERNEL
struct	rusage32 {
	struct timeval32 ru_utime;	/* user time used */
	struct timeval32 ru_stime;	/* system time used */
	long	ru_maxrss;		/* max resident set size */
	long	ru_ixrss;		/* integral shared text memory size */
	long	ru_idrss;		/* integral unshared data " */
	long	ru_isrss;		/* integral unshared stack " */
	long	ru_minflt;		/* page reclaims */
	long	ru_majflt;		/* page faults */
	long	ru_nswap;		/* swaps */
	long	ru_inblock;		/* block input operations */
	long	ru_oublock;		/* block output operations */
	long	ru_msgsnd;		/* messages sent */
	long	ru_msgrcv;		/* messages received */
	long	ru_nsignals;		/* signals received */
	long	ru_nvcsw;		/* voluntary context switches */
	long	ru_nivcsw;		/* involuntary " */
};
#define RUSAGE_TO_32(rup32, rup) {				\
	TIMEVAL_TO_32(&(rup32)->ru_utime, &(rup)->ru_utime);	\
	TIMEVAL_TO_32(&(rup32)->ru_stime, &(rup)->ru_stime);	\
	memcpy(&(rup32)->ru_maxrss, &(rup)->ru_maxrss,		\
	    offsetof(struct rusage, ru_nivcsw) -		\
	    offsetof(struct rusage, ru_maxrss) +		\
	    sizeof((rup32)->ru_nivcsw));			\
}
#endif
@


1.11
log
@Put parens about negative #define values.
Hide struct loadavg as non-standard.
<sys/cdefs.h> is already pulled in via <sys/time.h>, so don't do it again.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.10 2012/09/05 17:13:36 deraadt Exp $	*/
d78 28
@


1.10
log
@struct orlimit is only used by linux compat now, and can stop polluting
the system .h files
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.9 2010/11/02 10:51:06 kettenis Exp $	*/
d43 1
a43 1
#define	PRIO_MIN	-20
d55 1
a55 1
#define	RUSAGE_CHILDREN	-1
d103 1
d109 1
a117 2
#include <sys/cdefs.h>

@


1.9
log
@Include <sys/time.h> such that <sys/resource.h> becomes usable on its own as
required by POSIX X/Open extensions for quite a while now.

ok millert@@, guenther@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.8 2010/07/26 01:56:27 guenther Exp $	*/
a96 5

struct orlimit {
	int32_t	rlim_cur;		/* current (soft) limit */
	int32_t	rlim_max;		/* maximum value for rlim_cur */
};
@


1.8
log
@Correct the links between threads, processes, pgrps, and sessions,
so that the process-level stuff is to/from struct process and not
struct proc.  This fixes a bunch of problem cases in rthreads.
Based on earlier work by blambert and myself, but mostly written
at c2k10.

Tested by many: deraadt, sthen, krw, ray, and in snapshots
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.7 2003/12/11 23:02:30 millert Exp $	*/
d37 2
@


1.7
log
@Add id_t type as per POSIX and use it for [gs]etpriority(2).
OK henning@@ and deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.6 2003/12/11 22:55:22 millert Exp $	*/
d54 1
d114 1
d116 1
a116 1
int	donice(struct proc *, struct proc *, int);
@


1.6
log
@POSIX says rlim_t should be unsigned so make it u_quad_t.  Also add
POSIX-mandated RLIM_SAVED_MAX and RLIM_SAVED_CUR defines.  On OpenBSD
these are identical to RLIM_INFINITY as allowed by POSIX.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.5 2003/06/02 23:28:21 millert Exp $	*/
d120 1
a120 1
int	getpriority(int, int);
d123 1
a123 1
int	setpriority(int, int, int);
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.4 2002/03/14 01:27:14 millert Exp $	*/
d91 3
a93 1
#define	RLIM_INFINITY	(((u_quad_t)1 << 63) - 1)
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.3 1997/03/21 21:27:22 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.3
log
@Make struct rusage comments consistent between header file
and man page.  NetBSD PR #3367
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.2 1996/03/03 12:12:12 niklas Exp $	*/
d115 2
a116 2
int	dosetrlimit __P((struct proc *, u_int, struct rlimit *));
int	donice __P((struct proc *, struct proc *, int));
d122 5
a126 5
int	getpriority __P((int, int));
int	getrlimit __P((int, struct rlimit *));
int	getrusage __P((int, struct rusage *));
int	setpriority __P((int, int, int));
int	setrlimit __P((int, const struct rlimit *));
@


1.3.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.3 1997/03/21 21:27:22 millert Exp $	*/
d115 2
a116 2
int	dosetrlimit(struct proc *, u_int, struct rlimit *);
int	donice(struct proc *, struct proc *, int);
d122 5
a126 5
int	getpriority(int, int);
int	getrlimit(int, struct rlimit *);
int	getrusage(int, struct rusage *);
int	setpriority(int, int, int);
int	setrlimit(int, const struct rlimit *);
@


1.3.14.1
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d115 2
a116 2
int	dosetrlimit(struct proc *, u_int, struct rlimit *);
int	donice(struct proc *, struct proc *, int);
d122 5
a126 5
int	getpriority(int, int);
int	getrlimit(int, struct rlimit *);
int	getrusage(int, struct rusage *);
int	setpriority(int, int, int);
int	setrlimit(int, const struct rlimit *);
@


1.3.14.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: resource.h,v 1.3.14.1 2002/03/28 14:52:01 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.3.14.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d91 1
a91 3
#define	RLIM_INFINITY	(((rlim_t)1 << 63) - 1)
#define	RLIM_SAVED_MAX	RLIM_INFINITY
#define	RLIM_SAVED_CUR	RLIM_INFINITY
d118 1
a118 1
int	getpriority(int, id_t);
d121 1
a121 1
int	setpriority(int, id_t, int);
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d64 1
a64 1
	long	ru_ixrss;		/* integral shared memory size */
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: resource.h,v 1.13 1995/03/26 20:24:36 jtc Exp $	*/
d115 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
