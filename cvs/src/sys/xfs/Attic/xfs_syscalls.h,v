head	1.9;
access;
symbols
	OPENBSD_4_5:1.8.0.24
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.22
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.20
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.18
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	arla-20030805:1.1.1.2
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.5.0.10
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.6
	UBC:1.5.0.8
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.6
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2009.06.03.14.45.55;	author jj;	state dead;
branches;
next	1.8;

1.8
date	2003.08.12.10.11.56;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.12.07.53.47;	author hin;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.07.04.10.32;	author hin;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.11.14.26.53;	author art;	state Exp;
branches
	1.5.8.1;
next	1.4;

1.4
date	2000.03.03.00.54.58;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	99.04.30.01.59.01;	author art;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	98.08.31.05.13.29;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.08.30.16.47.22;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.03.32.59;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.12.07.43.49;	author hin;	state Exp;
branches;
next	;

1.3.4.1
date	2000.03.24.09.09.55;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2001.05.14.22.47.53;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2003.03.28.00.41.31;	author niklas;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2004.02.19.11.01.51;	author niklas;	state Exp;
branches;
next	;

1.5.8.1
date	2002.06.11.03.33.13;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@/*
 * Copyright (c) 1995, 1996, 1997, 1998, 1999 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* $arla: xfs_syscalls.h,v 1.29 2003/01/19 20:53:54 lha Exp $ */

#ifndef  __xfs_syscalls
#define  __xfs_syscalls

#include <xfs/xfs_common.h>
#include <xfs/xfs_message.h>

#include <xfs/afssysdefs.h>

struct sys_pioctl_args {
    syscallarg(int) operation;
    syscallarg(char *) a_pathP;
    syscallarg(int) a_opcode;
    syscallarg(struct ViceIoctl *) a_paramsP;
    syscallarg(int) a_followSymlinks;
};

#define NNPFS_FHMAXDATA 40

struct xfs_fhandle_t {
    u_short	len;
    u_short	pad;
    char	fhdata[NNPFS_FHMAXDATA];
};

struct xfs_fh_args {
    syscallarg(fsid_t) fsid;
    syscallarg(long)   fileid;
    syscallarg(long)   gen;
};

int xfs_install_syscalls(void);
int xfs_uninstall_syscalls(void);
int xfs_stat_syscalls(void);
xfs_pag_t xfs_get_pag(struct ucred *);

int xfs_setpag_call(struct ucred **ret_cred);
int xfs_pioctl_call(d_thread_t *proc,
		    struct sys_pioctl_args *args,
		    register_t *return_value);

int xfspioctl(syscall_d_thread_t *proc, void *varg, register_t *retval);

int xfs_setgroups(syscall_d_thread_t *p, void *varg, register_t *retval);

extern int (*old_setgroups_func)(syscall_d_thread_t *, void *, register_t *);
extern int xfs_syscall_num; /* The old syscall number */


#ifndef HAVE_KERNEL_SYS_LKMNOSYS
#define sys_lkmnosys nosys
#endif

#ifndef SYS_MAXSYSCALL
#define SYS_MAXSYSCALL nsysent
#endif

#endif				       /* __xfs_syscalls */
@


1.8
log
@fix GENERIC compilation.
@
text
@@


1.7
log
@Merge
@
text
@d42 1
a42 1
#include <afssysdefs.h>
@


1.6
log
@merge
@
text
@d34 1
a34 1
/* $Id: xfs_syscalls.h,v 1.5 2000/09/11 14:26:53 art Exp $ */
d42 1
a42 1
#include <xfs/afssysdefs.h>
d52 1
a52 1
#define XFS_FHMAXDATA 40
d57 1
a57 1
    char	fhdata[XFS_FHMAXDATA];
d72 1
a72 1
int xfs_pioctl_call(struct proc *proc,
d76 1
a76 1
int xfspioctl(struct proc *proc, void *varg, register_t *retval);
d78 1
a78 2
int xfs_setgroups (struct proc *p,
		   void *varg);
d80 1
a80 1
extern int (*old_setgroups_func)(struct proc *, void *);
@


1.5
log
@New xfs from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 *
 * 4. Neither the name of the Institute nor the names of its contributors
d34 1
a34 1
/* $Id: xfs_syscalls.h,v 1.23 2000/04/27 16:32:21 lha Exp $ */
d41 2
@


1.5.8.1
log
@Sync UBC branch to -current
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d39 1
a39 1
/* $Id: xfs_syscalls.h,v 1.5 2000/09/11 14:26:53 art Exp $ */
a45 2

#include <xfs/afssysdefs.h>
@


1.4
log
@$OpenBSD$
@
text
@a0 1
/* $OpenBSD: xfs_syscalls.h,v 1.3 1999/04/30 01:59:01 art Exp $ */
d39 1
a45 20
#ifdef HAVE_SYS_SYSCALLARGS_H
#include <sys/syscallargs.h>
#endif

/*
 * XXX
 */

#ifndef SCARG
#define SCARG(a, b) ((a)->b.datum)
#define syscallarg(x)   union { x datum; register_t pad; }
#endif

#ifndef syscallarg
#define syscallarg(x)   x
#endif

#ifndef HAVE_REGISTER_T
typedef int register_t;
#endif
d55 8
d72 1
a72 1
pag_t xfs_get_pag(struct ucred *);
d79 16
a94 1
int sys_xfspioctl(struct proc *proc, void *varg, register_t *retval);
@


1.3
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@d1 1
a39 1
/* $Id: xfs_syscalls.h,v 1.16 1999/03/27 04:16:47 assar Exp $ */
@


1.3.4.1
log
@Sync with -current
@
text
@a0 1
/* $OpenBSD$ */
d39 1
@


1.3.4.2
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a39 1
/* $Id: xfs_syscalls.h,v 1.5 2000/09/11 14:26:53 art Exp $ */
d46 20
a74 8
#define XFS_FHMAXDATA 40

struct xfs_fhandle_t {
    u_short	len;
    u_short	pad;
    char	fhdata[XFS_FHMAXDATA];
};

d84 1
a84 1
xfs_pag_t xfs_get_pag(struct ucred *);
d91 1
a91 16
int xfspioctl(struct proc *proc, void *varg, register_t *retval);

int xfs_setgroups (struct proc *p,
		   void *varg);

extern int (*old_setgroups_func)(struct proc *, void *);
extern int xfs_syscall_num; /* The old syscall number */


#ifndef HAVE_KERNEL_SYS_LKMNOSYS
#define sys_lkmnosys nosys
#endif

#ifndef SYS_MAXSYSCALL
#define SYS_MAXSYSCALL nsysent
#endif
@


1.3.4.3
log
@Sync the SMP branch with 3.3
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d39 1
a39 1
/* $Id$ */
a45 2

#include <xfs/afssysdefs.h>
@


1.3.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d34 1
a34 1
/* $arla: xfs_syscalls.h,v 1.29 2003/01/19 20:53:54 lha Exp $ */
d52 1
a52 1
#define NNPFS_FHMAXDATA 40
d57 1
a57 1
    char	fhdata[NNPFS_FHMAXDATA];
d72 1
a72 1
int xfs_pioctl_call(d_thread_t *proc,
d76 1
a76 1
int xfspioctl(syscall_d_thread_t *proc, void *varg, register_t *retval);
d78 2
a79 1
int xfs_setgroups(syscall_d_thread_t *p, void *varg, register_t *retval);
d81 1
a81 1
extern int (*old_setgroups_func)(syscall_d_thread_t *, void *, register_t *);
@


1.2
log
@indent the code and move around some includes, after discussion with Theo
@
text
@a0 1
/*	$OpenBSD: xfs_syscalls.h,v 1.1 1998/08/30 16:47:22 art Exp $	*/
d2 1
a2 1
 * Copyright (c) 1995, 1996, 1997 Kungliga Tekniska Högskolan
d39 1
a39 1
/* $KTH: xfs_syscalls.h,v 1.2 1998/01/21 01:03:57 mho Exp $ */
d41 2
a42 2
#ifndef  _XFS_XFS_SYSCALLS_H_
#define  _XFS_XFS_SYSCALLS_H_
d44 18
a61 4
int xfs_install_syscalls __P((void));
int xfs_uninstall_syscalls __P((void));
int xfs_stat_syscalls __P((void));
pag_t xfs_get_pag __P((struct ucred *));
d63 2
d66 28
@


1.1
log
@xfs - a filesystem using a user-land cache manager. Designed for AFS.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 2
a43 2
#ifndef  __xfs_syscalls
#define  __xfs_syscalls
d45 4
a48 4
int xfs_install_syscalls(void);
int xfs_uninstall_syscalls(void);
int xfs_stat_syscalls(void);
pag_t xfs_get_pag(struct ucred *);
d50 1
a50 1
#endif				       /* __xfs_syscalls */
@


1.1.1.1
log
@Import of xfs from arla-0.35.7
@
text
@d1 1
d3 1
a3 1
 * Copyright (c) 1995, 1996, 1997, 1998, 1999 Kungliga Tekniska Högskolan
d18 6
a23 1
 * 3. Neither the name of the Institute nor the names of its contributors
d40 1
a40 1
/* $Id: xfs_syscalls.h,v 1.1.1.1 2002/06/05 17:24:11 hin Exp $ */
a44 27
#include <xfs/xfs_common.h>
#include <xfs/xfs_message.h>

#include <xfs/afssysdefs.h>

struct sys_pioctl_args {
    syscallarg(int) operation;
    syscallarg(char *) a_pathP;
    syscallarg(int) a_opcode;
    syscallarg(struct ViceIoctl *) a_paramsP;
    syscallarg(int) a_followSymlinks;
};

#define XFS_FHMAXDATA 40

struct xfs_fhandle_t {
    u_short	len;
    u_short	pad;
    char	fhdata[XFS_FHMAXDATA];
};

struct xfs_fh_args {
    syscallarg(fsid_t) fsid;
    syscallarg(long)   fileid;
    syscallarg(long)   gen;
};

d48 1
a48 23
xfs_pag_t xfs_get_pag(struct ucred *);

int xfs_setpag_call(struct ucred **ret_cred);
int xfs_pioctl_call(struct proc *proc,
		    struct sys_pioctl_args *args,
		    register_t *return_value);

int xfspioctl(struct proc *proc, void *varg, register_t *retval);

int xfs_setgroups (struct proc *p,
		   void *varg);

extern int (*old_setgroups_func)(struct proc *, void *);
extern int xfs_syscall_num; /* The old syscall number */


#ifndef HAVE_KERNEL_SYS_LKMNOSYS
#define sys_lkmnosys nosys
#endif

#ifndef SYS_MAXSYSCALL
#define SYS_MAXSYSCALL nsysent
#endif
@


1.1.1.2
log
@Import xfs from arla-current as of 5 Aug 2003.

ok deraadt@@
@
text
@d34 1
a34 1
/* $arla: xfs_syscalls.h,v 1.29 2003/01/19 20:53:54 lha Exp $ */
d42 1
a42 1
#include <afssysdefs.h>
d52 1
a52 1
#define NNPFS_FHMAXDATA 40
d57 1
a57 1
    char	fhdata[NNPFS_FHMAXDATA];
d72 1
a72 1
int xfs_pioctl_call(d_thread_t *proc,
d76 1
a76 1
int xfspioctl(syscall_d_thread_t *proc, void *varg, register_t *retval);
d78 2
a79 1
int xfs_setgroups(syscall_d_thread_t *p, void *varg, register_t *retval);
d81 1
a81 1
extern int (*old_setgroups_func)(syscall_d_thread_t *, void *, register_t *);
@


