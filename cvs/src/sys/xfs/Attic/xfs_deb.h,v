head	1.8;
access;
symbols
	OPENBSD_4_5:1.7.0.24
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.22
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.20
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.18
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	arla-20030805:1.1.1.2
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.5.0.10
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.6
	UBC:1.5.0.8
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.6
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2009.06.03.14.45.55;	author jj;	state dead;
branches;
next	1.7;

1.7
date	2003.08.12.07.53.47;	author hin;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.07.04.10.32;	author hin;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.11.14.26.51;	author art;	state Exp;
branches
	1.5.8.1;
next	1.4;

1.4
date	2000.03.03.00.54.58;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	99.04.30.01.59.00;	author art;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	98.08.31.05.13.22;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.08.30.16.47.20;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.03.32.59;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.12.07.43.51;	author hin;	state Exp;
branches;
next	;

1.3.4.1
date	2000.03.24.09.09.54;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2001.05.14.22.47.51;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2003.03.28.00.41.30;	author niklas;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2004.02.19.11.01.46;	author niklas;	state Exp;
branches;
next	;

1.5.8.1
date	2002.06.11.03.33.13;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@/*
 * Copyright (c) 1995, 1996, 1997 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* $arla: xfs_deb.h,v 1.11 2002/09/07 10:45:59 lha Exp $ */

#ifndef _xfs_deb_h
#define _xfs_deb_h

#include <xfs/xfs_debug.h>

#define HAVE_XDEBDEV
#define HAVE_XDEBMSG
#define HAVE_XDEBDNLC
#define HAVE_XDEBNODE
#define HAVE_XDEBVNOPS
#define HAVE_XDEBVFOPS
#define HAVE_XDEBLKM
#define HAVE_XDEBSYS
#define HAVE_XDEBMEM
#define HAVE_XDEBSYS

extern unsigned int xfsdeb;

#ifdef NNPFS_DEBUG
#define NNPFSDEB(mask, args) do { if (mask&xfsdeb) printf args; } while (0)
#else
#define NNPFSDEB(mask, args) do { ; } while (0)
#endif

#endif				       /* _xfs_deb_h */
@


1.7
log
@Merge
@
text
@@


1.6
log
@merge
@
text
@d34 1
a34 1
/* $Id: xfs_deb.h,v 1.5 2000/09/11 14:26:51 art Exp $ */
d54 2
a55 2
#ifdef XFS_DEBUG
#define XFSDEB(mask, args) do { if (mask&xfsdeb) printf args; } while (0)
d57 1
a57 1
#define XFSDEB(mask, args) do { ; } while (0)
@


1.5
log
@New xfs from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 *
 * 4. Neither the name of the Institute nor the names of its contributors
d34 1
a34 1
/* $Id: xfs_deb.h,v 1.9 1998/12/22 13:16:19 lha Exp $ */
@


1.5.8.1
log
@Sync UBC branch to -current
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d39 1
a39 1
/* $Id: xfs_deb.h,v 1.5 2000/09/11 14:26:51 art Exp $ */
@


1.4
log
@$OpenBSD$
@
text
@a0 1
/* $OpenBSD: xfs_deb.h,v 1.3 1999/04/30 01:59:00 art Exp $ */
d39 1
@


1.3
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@d1 1
a39 1
/* $Id: xfs_deb.h,v 1.9 1998/12/22 13:16:19 lha Exp $ */
@


1.3.4.1
log
@Sync with -current
@
text
@a0 1
/* $OpenBSD$ */
d39 1
@


1.3.4.2
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a39 1
/* $Id: xfs_deb.h,v 1.5 2000/09/11 14:26:51 art Exp $ */
@


1.3.4.3
log
@Sync the SMP branch with 3.3
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d39 1
a39 1
/* $Id$ */
@


1.3.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d34 1
a34 1
/* $arla: xfs_deb.h,v 1.11 2002/09/07 10:45:59 lha Exp $ */
d54 2
a55 2
#ifdef NNPFS_DEBUG
#define NNPFSDEB(mask, args) do { if (mask&xfsdeb) printf args; } while (0)
d57 1
a57 1
#define NNPFSDEB(mask, args) do { ; } while (0)
@


1.2
log
@indent the code and move around some includes, after discussion with Theo
@
text
@a0 1
/*	$OpenBSD: xfs_deb.h,v 1.1 1998/08/30 16:47:20 art Exp $	*/
d39 1
a39 2
#ifndef _XFS_XFS_DEB_H_
#define _XFS_XFS_DEB_H_
d41 2
a42 11
/* masks */
#define XDEBANY		0xffffffff
#define XDEBDEV		0x00000001
#define XDEBMSG		0x00000002
#define XDEBDNLC	0x00000004
#define XDEBNODE	0x00000008
#define XDEBVNOPS	0x00000010
#define XDEBVFOPS	0x00000020
#define XDEBLKM         0x00000040
#define XDEBSYS	        0x00000080
#define XDEBMEM		0x00000100
d44 1
a44 1
extern int xfsdeb;
d46 14
a59 1
#ifdef DEBUG
d65 1
a65 1
#endif
@


1.1
log
@xfs - a filesystem using a user-land cache manager. Designed for AFS.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 2
a41 2
#ifndef _xfs_deb_h
#define _xfs_deb_h
d63 1
a63 1
#endif				       /* _xfs_deb_h */
@


1.1.1.1
log
@Import of xfs from arla-0.35.7
@
text
@d1 1
d18 6
a23 1
 * 3. Neither the name of the Institute nor the names of its contributors
a39 2
/* $Id: xfs_deb.h,v 1.1.1.1 2002/06/05 17:24:11 hin Exp $ */

d43 11
a53 12
#include <xfs/xfs_debug.h>

#define HAVE_XDEBDEV
#define HAVE_XDEBMSG
#define HAVE_XDEBDNLC
#define HAVE_XDEBNODE
#define HAVE_XDEBVNOPS
#define HAVE_XDEBVFOPS
#define HAVE_XDEBLKM
#define HAVE_XDEBSYS
#define HAVE_XDEBMEM
#define HAVE_XDEBSYS
d55 1
a55 1
extern unsigned int xfsdeb;
d57 1
a57 1
#ifdef XFS_DEBUG
@


1.1.1.2
log
@Import xfs from arla-current as of 5 Aug 2003.

ok deraadt@@
@
text
@d34 1
a34 1
/* $arla: xfs_deb.h,v 1.11 2002/09/07 10:45:59 lha Exp $ */
d54 2
a55 2
#ifdef NNPFS_DEBUG
#define NNPFSDEB(mask, args) do { if (mask&xfsdeb) printf args; } while (0)
d57 1
a57 1
#define NNPFSDEB(mask, args) do { ; } while (0)
@


