head	1.8;
access;
symbols
	OPENBSD_4_5:1.7.0.24
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.22
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.20
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.18
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	arla-20030805:1.1.1.2
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.5.0.10
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.6
	UBC:1.5.0.8
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.6
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2009.06.03.14.45.55;	author jj;	state dead;
branches;
next	1.7;

1.7
date	2003.08.12.07.53.47;	author hin;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.07.04.10.32;	author hin;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.11.14.26.51;	author art;	state Exp;
branches
	1.5.8.1;
next	1.4;

1.4
date	2000.03.03.00.54.58;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	99.04.30.01.58.59;	author art;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	98.08.31.05.13.21;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.08.30.16.47.20;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.03.32.58;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.12.07.43.51;	author hin;	state Exp;
branches;
next	;

1.3.4.1
date	2000.03.24.09.09.54;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2001.05.14.22.47.51;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2003.03.28.00.41.30;	author niklas;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2004.02.19.11.01.45;	author niklas;	state Exp;
branches;
next	;

1.5.8.1
date	2002.06.11.03.33.13;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@/*
 * Copyright (c) 1995, 1996, 1997, 1998, 1999 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* $arla: xfs_common.h,v 1.19 2002/12/18 12:32:10 lha Exp $ */

#ifndef _xfs_common_h
#define _xfs_common_h

#if defined(MALLOC_DECLARE)
MALLOC_DECLARE(M_NNPFS);
MALLOC_DECLARE(M_NNPFS_NODE);
MALLOC_DECLARE(M_NNPFS_LINK);
MALLOC_DECLARE(M_NNPFS_MSG);
#elif !defined(M_NNPFS)
#define M_NNPFS M_TEMP
#define M_NNPFS_NODE M_TEMP
#define M_NNPFS_LINK M_TEMP
#define M_NNPFS_MSG M_TEMP
#endif


#ifdef NNPFS_DEBUG
void *xfs_alloc(u_int size, xfs_malloc_type type);
void xfs_free(void *, u_int size, xfs_malloc_type type);
#else
#ifdef __osf__
#define xfs_alloc(a,t) malloc((a), BUCKETINDEX(a), t, M_WAITOK)
#else
#define xfs_alloc(a,t) malloc((a), t, M_WAITOK)
#endif
#define xfs_free(a, size,t) free(a, t)
#endif /* NNPFS_DEBUG */

int xfs_suser(d_thread_t *p);

#ifndef HAVE_KERNEL_MEMCPY
void *
memcpy (void *s1, const void *s2, size_t n);
#endif

const char *
xfs_devtoname_r (dev_t dev, char *buf, size_t sz);

#ifndef HAVE_KERNEL_STRLCPY
size_t
strlcpy (char *dst, const char *src, size_t dst_sz);
#endif

#endif /* _xfs_common_h */
@


1.7
log
@Merge
@
text
@@


1.6
log
@merge
@
text
@d34 1
a34 1
/* $Id: xfs_common.h,v 1.1.1.1 2002/06/07 03:32:58 hin Exp $ */
d40 9
a48 3
MALLOC_DECLARE(M_XFS);
#elif !defined(M_XFS)
#define M_XFS M_TEMP
d51 4
a54 3
#ifdef XFS_DEBUG
void *xfs_alloc(u_int size);
void xfs_free(void *, u_int size);
d57 1
a57 1
#define xfs_alloc(a) malloc((a), BUCKETINDEX(a), M_XFS, M_WAITOK)
d59 1
a59 1
#define xfs_alloc(a) malloc((a), M_XFS, M_WAITOK)
d61 2
a62 2
#define xfs_free(a, size) free(a, M_XFS)
#endif /* XFS_DEBUG */
d64 1
a64 1
int xfs_suser(struct proc *p);
@


1.5
log
@New xfs from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 *
 * 4. Neither the name of the Institute nor the names of its contributors
d34 1
a34 1
/* $Id: xfs_common.h,v 1.12 1999/11/27 05:19:46 assar Exp $ */
d66 5
@


1.5.8.1
log
@Sync UBC branch to -current
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d39 1
a39 1
/* $Id: xfs_common.h,v 1.5 2000/09/11 14:26:51 art Exp $ */
a70 5

#ifndef HAVE_KERNEL_STRLCPY
size_t
strlcpy (char *dst, const char *src, size_t dst_sz);
#endif
@


1.4
log
@$OpenBSD$
@
text
@a0 1
/* $OpenBSD: xfs_common.h,v 1.3 1999/04/30 01:58:59 art Exp $ */
d2 1
a2 1
 * Copyright (c) 1995, 1996, 1997 Kungliga Tekniska Högskolan
d39 1
d44 6
d55 1
a55 1
#define xfs_alloc(a) malloc((a), BUCKETINDEX(a), M_TEMP, M_WAITOK)
d57 1
a57 1
#define xfs_alloc(a) malloc((a), M_TEMP, M_WAITOK)
d59 1
a59 1
#define xfs_free(a, size) free(a, M_TEMP)
d61 10
@


1.3
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@d1 1
a39 1
/* $Id: xfs_common.h,v 1.7 1998/11/02 01:51:14 assar Exp $ */
@


1.3.4.1
log
@Sync with -current
@
text
@a0 1
/* $OpenBSD$ */
d39 1
@


1.3.4.2
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
d3 1
a3 1
 * Copyright (c) 1995, 1996, 1997, 1998, 1999 Kungliga Tekniska Högskolan
a39 1
/* $Id: xfs_common.h,v 1.5 2000/09/11 14:26:51 art Exp $ */
a43 6
#if defined(MALLOC_DECLARE)
MALLOC_DECLARE(M_XFS);
#elif !defined(M_XFS)
#define M_XFS M_TEMP
#endif

d49 1
a49 1
#define xfs_alloc(a) malloc((a), BUCKETINDEX(a), M_XFS, M_WAITOK)
d51 1
a51 1
#define xfs_alloc(a) malloc((a), M_XFS, M_WAITOK)
d53 1
a53 1
#define xfs_free(a, size) free(a, M_XFS)
a54 10

int xfs_suser(struct proc *p);

#ifndef HAVE_KERNEL_MEMCPY
void *
memcpy (void *s1, const void *s2, size_t n);
#endif

const char *
xfs_devtoname_r (dev_t dev, char *buf, size_t sz);
@


1.3.4.3
log
@Sync the SMP branch with 3.3
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d39 1
a39 1
/* $Id$ */
a70 5

#ifndef HAVE_KERNEL_STRLCPY
size_t
strlcpy (char *dst, const char *src, size_t dst_sz);
#endif
@


1.3.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d34 1
a34 1
/* $arla: xfs_common.h,v 1.19 2002/12/18 12:32:10 lha Exp $ */
d40 3
a42 9
MALLOC_DECLARE(M_NNPFS);
MALLOC_DECLARE(M_NNPFS_NODE);
MALLOC_DECLARE(M_NNPFS_LINK);
MALLOC_DECLARE(M_NNPFS_MSG);
#elif !defined(M_NNPFS)
#define M_NNPFS M_TEMP
#define M_NNPFS_NODE M_TEMP
#define M_NNPFS_LINK M_TEMP
#define M_NNPFS_MSG M_TEMP
d45 3
a47 4

#ifdef NNPFS_DEBUG
void *xfs_alloc(u_int size, xfs_malloc_type type);
void xfs_free(void *, u_int size, xfs_malloc_type type);
d50 1
a50 1
#define xfs_alloc(a,t) malloc((a), BUCKETINDEX(a), t, M_WAITOK)
d52 1
a52 1
#define xfs_alloc(a,t) malloc((a), t, M_WAITOK)
d54 2
a55 2
#define xfs_free(a, size,t) free(a, t)
#endif /* NNPFS_DEBUG */
d57 1
a57 1
int xfs_suser(d_thread_t *p);
@


1.2
log
@indent the code and move around some includes, after discussion with Theo
@
text
@a0 1
/*	$OpenBSD: xfs_common.h,v 1.1 1998/08/30 16:47:20 art Exp $	*/
d2 1
a2 1
 * Copyright (c) 1995, 1996, 1997, 1998 Kungliga Tekniska Högskolan
d39 1
a39 1
/* $KTH: xfs_common.h,v 1.5 1998/07/13 20:36:36 art Exp $ */
d41 2
a42 2
#ifndef _XFS_XFS_COMMON_H_
#define _XFS_XFS_COMMON_H_
d44 6
a49 5
#include <sys/malloc.h>

#ifdef DEBUG
void *xfs_alloc __P((u_int size));
void xfs_free __P((void *, u_int size));
d51 1
a51 2
#define xfs_alloc(s) malloc((s), M_TEMP, M_WAITOK) /* XXX - what kind? */
#define xfs_free(p, s) free((p), M_TEMP)
d53 2
d56 1
a56 2
#define RCSID(x)
#endif
@


1.1
log
@xfs - a filesystem using a user-land cache manager. Designed for AFS.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 2
a43 2
#ifndef _xfs_common_h
#define _xfs_common_h
d48 2
a49 2
void *xfs_alloc(u_int size);
void xfs_free(void *, u_int size);
d56 1
a56 2

#endif				       /* _xfs_common_h */
@


1.1.1.1
log
@Import of xfs from arla-0.35.7
@
text
@d1 1
d3 1
a3 1
 * Copyright (c) 1995, 1996, 1997, 1998, 1999 Kungliga Tekniska Högskolan
d18 6
a23 1
 * 3. Neither the name of the Institute nor the names of its contributors
d40 1
a40 1
/* $Id: xfs_common.h,v 1.1.1.1 2002/06/05 17:24:11 hin Exp $ */
d45 1
a45 5
#if defined(MALLOC_DECLARE)
MALLOC_DECLARE(M_XFS);
#elif !defined(M_XFS)
#define M_XFS M_TEMP
#endif
d47 1
a47 1
#ifdef XFS_DEBUG
d51 2
a52 13
#ifdef __osf__
#define xfs_alloc(a) malloc((a), BUCKETINDEX(a), M_XFS, M_WAITOK)
#else
#define xfs_alloc(a) malloc((a), M_XFS, M_WAITOK)
#endif
#define xfs_free(a, size) free(a, M_XFS)
#endif /* XFS_DEBUG */

int xfs_suser(struct proc *p);

#ifndef HAVE_KERNEL_MEMCPY
void *
memcpy (void *s1, const void *s2, size_t n);
d55 1
a55 7
const char *
xfs_devtoname_r (dev_t dev, char *buf, size_t sz);

#ifndef HAVE_KERNEL_STRLCPY
size_t
strlcpy (char *dst, const char *src, size_t dst_sz);
#endif
d57 1
a57 1
#endif /* _xfs_common_h */
@


1.1.1.2
log
@Import xfs from arla-current as of 5 Aug 2003.

ok deraadt@@
@
text
@d34 1
a34 1
/* $arla: xfs_common.h,v 1.19 2002/12/18 12:32:10 lha Exp $ */
d40 3
a42 9
MALLOC_DECLARE(M_NNPFS);
MALLOC_DECLARE(M_NNPFS_NODE);
MALLOC_DECLARE(M_NNPFS_LINK);
MALLOC_DECLARE(M_NNPFS_MSG);
#elif !defined(M_NNPFS)
#define M_NNPFS M_TEMP
#define M_NNPFS_NODE M_TEMP
#define M_NNPFS_LINK M_TEMP
#define M_NNPFS_MSG M_TEMP
d45 3
a47 4

#ifdef NNPFS_DEBUG
void *xfs_alloc(u_int size, xfs_malloc_type type);
void xfs_free(void *, u_int size, xfs_malloc_type type);
d50 1
a50 1
#define xfs_alloc(a,t) malloc((a), BUCKETINDEX(a), t, M_WAITOK)
d52 1
a52 1
#define xfs_alloc(a,t) malloc((a), t, M_WAITOK)
d54 2
a55 2
#define xfs_free(a, size,t) free(a, t)
#endif /* NNPFS_DEBUG */
d57 1
a57 1
int xfs_suser(d_thread_t *p);
@


