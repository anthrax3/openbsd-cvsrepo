head	1.7;
access;
symbols
	OPENBSD_4_5:1.6.0.22
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.20
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.18
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.16
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.14
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.3.0.18
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.16
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.14
	OPENBSD_2_8:1.3.0.12
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.10
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.8
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3;
locks; strict;
comment	@ * @;


1.7
date	2009.06.03.14.45.55;	author jj;	state dead;
branches;
next	1.6;

1.6
date	2003.09.28.04.33.44;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.07.04.10.32;	author hin;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.19;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.08.31.05.13.25;	author art;	state Exp;
branches
	1.3.8.1
	1.3.18.1;
next	1.2;

1.2
date	98.08.30.17.35.42;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.08.30.16.47.21;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.03.32.59;	author hin;	state Exp;
branches;
next	;

1.3.8.1
date	2002.03.28.15.02.48;	author niklas;	state Exp;
branches;
next	1.3.8.2;

1.3.8.2
date	2004.02.19.11.01.47;	author niklas;	state Exp;
branches;
next	;

1.3.18.1
date	2002.06.11.03.33.13;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@/*	$OpenBSD: xfs_extern.h,v 1.6 2003/09/28 04:33:44 millert Exp $	*/
/*
 * Copyright (c) 1998 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 *
 * 4. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _XFS_XFS_EXTERN_H_
#define _XFS_XFS_EXTERN_H_

#ifdef _KERNEL

int xfs_devopen(dev_t dev, int flags, int devtype, struct proc * p);
int xfs_devclose(dev_t dev, int flags, int devtype, struct proc * p);
int xfs_devread(dev_t dev, struct uio * uiop, int ioflag);
int xfs_devwrite(dev_t dev, struct uio *uiop, int ioflag);
int xfs_devioctl(dev_t dev, u_long cmd, caddr_t data, int flags,
		      struct proc * p);
int xfs_devpoll(dev_t dev, int events, struct proc * p);

#endif /* _KERNEL */

#endif
@


1.6
log
@Missing xfs_devpoll proto.  You would think with all that HAVE_FOO
crap the protos would be done for you.  Apparently not...
@
text
@d1 1
a1 1
/*	$OpenBSD: xfs_extern.h,v 1.5 2002/06/07 04:10:32 hin Exp $	*/
@


1.5
log
@merge
@
text
@d1 1
a1 1
/*	$OpenBSD: xfs_extern.h,v 1.1.1.1 2002/06/07 03:32:59 hin Exp $	*/
d51 1
a51 1
int xfs_devselect(dev_t dev, int which, struct proc * p);
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: xfs_extern.h,v 1.3 1998/08/31 05:13:25 art Exp $	*/
@


1.3
log
@indent the code and move around some includes, after discussion with Theo
@
text
@d1 1
a1 1
/*	$OpenBSD: xfs_extern.h,v 1.2 1998/08/30 17:35:42 art Exp $	*/
d45 7
a51 7
int xfs_devopen __P((dev_t dev, int flags, int devtype, struct proc * p));
int xfs_devclose __P((dev_t dev, int flags, int devtype, struct proc * p));
int xfs_devread __P((dev_t dev, struct uio * uiop, int ioflag));
int xfs_devwrite __P((dev_t dev, struct uio *uiop, int ioflag));
int xfs_devioctl __P((dev_t dev, u_long cmd, caddr_t data, int flags,
		      struct proc * p));
int xfs_devselect __P((dev_t dev, int which, struct proc * p));
@


1.3.18.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: xfs_extern.h,v 1.3 1998/08/31 05:13:25 art Exp $	*/
d45 7
a51 7
int xfs_devopen(dev_t dev, int flags, int devtype, struct proc * p);
int xfs_devclose(dev_t dev, int flags, int devtype, struct proc * p);
int xfs_devread(dev_t dev, struct uio * uiop, int ioflag);
int xfs_devwrite(dev_t dev, struct uio *uiop, int ioflag);
int xfs_devioctl(dev_t dev, u_long cmd, caddr_t data, int flags,
		      struct proc * p);
int xfs_devselect(dev_t dev, int which, struct proc * p);
@


1.3.8.1
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d45 7
a51 7
int xfs_devopen(dev_t dev, int flags, int devtype, struct proc * p);
int xfs_devclose(dev_t dev, int flags, int devtype, struct proc * p);
int xfs_devread(dev_t dev, struct uio * uiop, int ioflag);
int xfs_devwrite(dev_t dev, struct uio *uiop, int ioflag);
int xfs_devioctl(dev_t dev, u_long cmd, caddr_t data, int flags,
		      struct proc * p);
int xfs_devselect(dev_t dev, int which, struct proc * p);
@


1.3.8.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d51 1
a51 1
int xfs_devpoll(dev_t dev, int events, struct proc * p);
@


1.2
log
@oops, forgot some Id-tags and copyrights
@
text
@d1 1
a1 1
/*	$OpenBSD: xfs_extern.h,v 1.1 1998/08/30 16:47:21 art Exp $	*/
d40 2
a41 2
#ifndef _XFS_XFS_EXTERN_H
#define _XFS_XFS_EXTERN_H
@


1.1
log
@xfs - a filesystem using a user-land cache manager. Designed for AFS.
@
text
@d1 39
a39 1
/*	$OpenBSD$	*/
@


1.1.1.1
log
@Import of xfs from arla-0.35.7
@
text
@d1 3
a3 41
/*	$OpenBSD: xfs_extern.h,v 1.4 2002/03/14 01:27:19 millert Exp $	*/
/*
 * Copyright (c) 1998 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 *
 * 4. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _XFS_XFS_EXTERN_H_
#define _XFS_XFS_EXTERN_H_
d7 7
a13 7
int xfs_devopen(dev_t dev, int flags, int devtype, struct proc * p);
int xfs_devclose(dev_t dev, int flags, int devtype, struct proc * p);
int xfs_devread(dev_t dev, struct uio * uiop, int ioflag);
int xfs_devwrite(dev_t dev, struct uio *uiop, int ioflag);
int xfs_devioctl(dev_t dev, u_long cmd, caddr_t data, int flags,
		      struct proc * p);
int xfs_devselect(dev_t dev, int which, struct proc * p);
@


