head	1.29;
access;
symbols
	OPENBSD_4_1:1.28.0.2
	OPENBSD_4_1_BASE:1.28
	OPENBSD_4_0:1.27.0.6
	OPENBSD_4_0_BASE:1.27
	OPENBSD_3_9:1.27.0.4
	OPENBSD_3_9_BASE:1.27
	OPENBSD_3_8:1.27.0.2
	OPENBSD_3_8_BASE:1.27
	OPENBSD_3_7:1.26.0.4
	OPENBSD_3_7_BASE:1.26
	OPENBSD_3_6:1.26.0.2
	OPENBSD_3_6_BASE:1.26
	SMP_SYNC_A:1.24
	SMP_SYNC_B:1.24
	OPENBSD_3_5:1.23.0.2
	OPENBSD_3_5_BASE:1.23
	OPENBSD_3_4:1.22.0.2
	OPENBSD_3_4_BASE:1.22
	UBC_SYNC_A:1.22
	OPENBSD_3_3:1.20.0.2
	OPENBSD_3_3_BASE:1.20
	OPENBSD_3_2:1.19.0.2
	OPENBSD_3_2_BASE:1.19
	OPENBSD_3_1:1.18.0.2
	OPENBSD_3_1_BASE:1.18
	UBC_SYNC_B:1.19
	UBC:1.16.0.4
	UBC_BASE:1.16
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.6
	OPENBSD_2_8:1.11.0.4
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	SMP:1.10.0.4
	SMP_BASE:1.10
	kame_19991208:1.10
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10;
locks; strict;
comment	@ * @;


1.29
date	2007.05.28.23.10.10;	author beck;	state dead;
branches;
next	1.28;

1.28
date	2006.09.22.15.30.44;	author pedro;	state Exp;
branches;
next	1.27;

1.27
date	2005.06.17.20.42.31;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2004.07.13.21.06.33;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2004.07.09.23.56.17;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	2004.05.28.18.31.12;	author tedu;	state Exp;
branches;
next	1.23;

1.23
date	2004.01.14.05.26.56;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2003.05.11.19.45.43;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2003.04.30.22.03.23;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2003.01.30.03.32.44;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2002.07.06.19.22.43;	author nordin;	state Exp;
branches;
next	1.18;

1.18
date	2002.03.14.01.26.50;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2002.03.14.00.44.20;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2001.09.21.15.32.43;	author art;	state Exp;
branches
	1.16.4.1;
next	1.15;

1.15
date	2001.09.05.23.42.34;	author art;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.26.04.14.26;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2001.05.16.21.24.00;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.16.17.17.06;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2000.05.01.23.12.29;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	99.09.21.22.46.09;	author kstailey;	state Exp;
branches
	1.10.4.1;
next	1.9;

1.9
date	99.09.17.22.15.35;	author kstailey;	state Exp;
branches;
next	1.8;

1.8
date	99.09.17.15.04.47;	author kstailey;	state Exp;
branches;
next	1.7;

1.7
date	99.09.17.13.42.35;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	99.09.17.12.14.59;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	99.09.15.20.42.27;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	99.09.15.18.38.02;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	99.09.14.01.07.01;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	99.09.12.14.35.21;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	99.09.12.14.19.58;	author kstailey;	state Exp;
branches;
next	;

1.10.4.1
date	2001.05.14.22.04.58;	author niklas;	state Exp;
branches;
next	1.10.4.2;

1.10.4.2
date	2001.07.04.10.39.33;	author niklas;	state Exp;
branches;
next	1.10.4.3;

1.10.4.3
date	2001.10.31.03.11.46;	author nate;	state Exp;
branches;
next	1.10.4.4;

1.10.4.4
date	2002.03.28.11.28.06;	author niklas;	state Exp;
branches;
next	1.10.4.5;

1.10.4.5
date	2003.03.27.23.53.47;	author niklas;	state Exp;
branches;
next	1.10.4.6;

1.10.4.6
date	2003.05.13.19.21.27;	author ho;	state Exp;
branches;
next	1.10.4.7;

1.10.4.7
date	2004.02.19.10.51.29;	author niklas;	state Exp;
branches;
next	1.10.4.8;

1.10.4.8
date	2004.06.05.23.12.34;	author niklas;	state Exp;
branches;
next	;

1.16.4.1
date	2002.06.11.03.28.08;	author art;	state Exp;
branches;
next	1.16.4.2;

1.16.4.2
date	2002.10.29.00.30.51;	author art;	state Exp;
branches;
next	1.16.4.3;

1.16.4.3
date	2003.05.19.21.52.09;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Maintaining a broken compatibility layer for a broken OS is not a productive
activity for anyone. Bye bye COMPAT_NETBSD. ok tedu@@, deraadt@@, and many others
in the hackathon room.
@
text
@/*	$OpenBSD: netbsd_syscallargs.h,v 1.28 2006/09/22 15:30:44 pedro Exp $	*/

/*
 * System call argument lists.
 *
 * DO NOT EDIT-- this file is automatically generated.
 * created from;	OpenBSD: syscalls.master,v 1.26 2006/09/22 15:29:57 pedro Exp 
 */

#ifdef	syscallarg
#undef	syscallarg
#endif

#define	syscallarg(x)							\
	union {								\
		register_t pad;						\
		struct { x datum; } le;					\
		struct {						\
			int8_t pad[ (sizeof (register_t) < sizeof (x))	\
				? 0					\
				: sizeof (register_t) - sizeof (x)];	\
			x datum;					\
		} be;							\
	}

struct netbsd_sys_open_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
	syscallarg(int) mode;
};

struct compat_43_netbsd_sys_creat_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct netbsd_sys_link_args {
	syscallarg(char *) path;
	syscallarg(char *) link;
};

struct netbsd_sys_unlink_args {
	syscallarg(char *) path;
};

struct netbsd_sys_chdir_args {
	syscallarg(char *) path;
};

struct netbsd_sys_mknod_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
	syscallarg(dev_t) dev;
};

struct netbsd_sys_chmod_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct netbsd_sys_chown_args {
	syscallarg(char *) path;
	syscallarg(uid_t) uid;
	syscallarg(gid_t) gid;
};

struct netbsd_sys_unmount_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
};

struct netbsd_sys_access_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
};

struct netbsd_sys_chflags_args {
	syscallarg(char *) path;
	syscallarg(u_int) flags;
};

struct compat_43_netbsd_sys_stat_args {
	syscallarg(char *) path;
	syscallarg(struct stat43 *) ub;
};

struct compat_43_netbsd_sys_lstat_args {
	syscallarg(char *) path;
	syscallarg(struct stat43 *) ub;
};

struct netbsd_sys_revoke_args {
	syscallarg(char *) path;
};

struct netbsd_sys_symlink_args {
	syscallarg(char *) path;
	syscallarg(char *) link;
};

struct netbsd_sys_readlink_args {
	syscallarg(char *) path;
	syscallarg(char *) buf;
	syscallarg(size_t) count;
};

struct netbsd_sys_execve_args {
	syscallarg(char *) path;
	syscallarg(char **) argp;
	syscallarg(char **) envp;
};

struct netbsd_sys_chroot_args {
	syscallarg(char *) path;
};

struct netbsd_sys_rename_args {
	syscallarg(char *) from;
	syscallarg(char *) to;
};

struct compat_43_netbsd_sys_truncate_args {
	syscallarg(char *) path;
	syscallarg(long) length;
};

struct netbsd_sys_mkfifo_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct netbsd_sys_mkdir_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct netbsd_sys_rmdir_args {
	syscallarg(char *) path;
};

struct netbsd_sys_stat_args {
	syscallarg(char *) path;
	syscallarg(struct stat35 *) ub;
};

struct netbsd_sys_lstat_args {
	syscallarg(char *) path;
	syscallarg(struct stat35 *) ub;
};

struct netbsd_sys_pathconf_args {
	syscallarg(char *) path;
	syscallarg(int) name;
};

struct netbsd_sys_truncate_args {
	syscallarg(char *) path;
	syscallarg(int) pad;
	syscallarg(off_t) length;
};

struct netbsd_sys_fdatasync_args {
	syscallarg(int) fd;
};

struct netbsd_sys_getdents_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(size_t) count;
};

struct netbsd_sys_lchmod_args {
	syscallarg(const char *) path;
	syscallarg(netbsd_mode_t) mode;
};

struct netbsd_sys_lutimes_args {
	syscallarg(const char *) path;
	syscallarg(const struct timeval *) tptr;
};

struct netbsd_sys___stat13_args {
	syscallarg(char *) path;
	syscallarg(struct netbsd_stat *) ub;
};

struct netbsd_sys___fstat13_args {
	syscallarg(int) fd;
	syscallarg(struct netbsd_stat *) ub;
};

struct netbsd_sys___lstat13_args {
	syscallarg(char *) path;
	syscallarg(struct netbsd_stat *) ub;
};

struct netbsd_sys___sigaction14_args {
	syscallarg(int) signum;
	syscallarg(const struct netbsd_sigaction *) nsa;
	syscallarg(struct netbsd_sigaction *) osa;
};

struct netbsd_sys___sigpending14_args {
	syscallarg(netbsd_sigset_t *) set;
};

struct netbsd_sys___sigprocmask14_args {
	syscallarg(int) how;
	syscallarg(const netbsd_sigset_t *) set;
	syscallarg(netbsd_sigset_t *) oset;
};

struct netbsd_sys___sigsuspend14_args {
	syscallarg(const netbsd_sigset_t *) set;
};

struct netbsd_sys___sigreturn14_args {
	syscallarg(struct netbsd_sigcontext *) sigcntxp;
};

struct netbsd_sys___getcwd_args {
	syscallarg(char *) bufp;
	syscallarg(size_t) length;
};

/*
 * System call prototypes.
 */

int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	netbsd_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	sys_wait4(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_creat(struct proc *, void *, register_t *);
int	netbsd_sys_link(struct proc *, void *, register_t *);
int	netbsd_sys_unlink(struct proc *, void *, register_t *);
int	netbsd_sys_chdir(struct proc *, void *, register_t *);
int	sys_fchdir(struct proc *, void *, register_t *);
int	netbsd_sys_mknod(struct proc *, void *, register_t *);
int	netbsd_sys_chmod(struct proc *, void *, register_t *);
int	netbsd_sys_chown(struct proc *, void *, register_t *);
int	sys_obreak(struct proc *, void *, register_t *);
int	compat_25_sys_getfsstat(struct proc *, void *, register_t *);
int	sys_lseek(struct proc *, void *, register_t *);
int	sys_getpid(struct proc *, void *, register_t *);
int	sys_mount(struct proc *, void *, register_t *);
int	netbsd_sys_unmount(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	sys_geteuid(struct proc *, void *, register_t *);
#ifdef PTRACE
int	sys_ptrace(struct proc *, void *, register_t *);
#else
#endif
int	sys_recvmsg(struct proc *, void *, register_t *);
int	sys_sendmsg(struct proc *, void *, register_t *);
int	sys_recvfrom(struct proc *, void *, register_t *);
int	sys_accept(struct proc *, void *, register_t *);
int	sys_getpeername(struct proc *, void *, register_t *);
int	sys_getsockname(struct proc *, void *, register_t *);
int	netbsd_sys_access(struct proc *, void *, register_t *);
int	netbsd_sys_chflags(struct proc *, void *, register_t *);
int	sys_fchflags(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	sys_kill(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_stat(struct proc *, void *, register_t *);
int	sys_getppid(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_lstat(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	sys_opipe(struct proc *, void *, register_t *);
int	sys_getegid(struct proc *, void *, register_t *);
int	sys_profil(struct proc *, void *, register_t *);
#ifdef KTRACE
int	sys_ktrace(struct proc *, void *, register_t *);
#else
#endif
int	sys_sigaction(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
int	sys_sigprocmask(struct proc *, void *, register_t *);
int	sys_getlogin(struct proc *, void *, register_t *);
int	sys_setlogin(struct proc *, void *, register_t *);
#ifdef ACCOUNTING
int	sys_acct(struct proc *, void *, register_t *);
#else
#endif
int	sys_sigpending(struct proc *, void *, register_t *);
int	sys_osigaltstack(struct proc *, void *, register_t *);
int	sys_ioctl(struct proc *, void *, register_t *);
int	sys_reboot(struct proc *, void *, register_t *);
int	netbsd_sys_revoke(struct proc *, void *, register_t *);
int	netbsd_sys_symlink(struct proc *, void *, register_t *);
int	netbsd_sys_readlink(struct proc *, void *, register_t *);
int	netbsd_sys_execve(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	netbsd_sys_chroot(struct proc *, void *, register_t *);
int	sys_fstat(struct proc *, void *, register_t *);
int	compat_43_sys_getkerninfo(struct proc *, void *, register_t *);
int	compat_43_sys_getpagesize(struct proc *, void *, register_t *);
int	compat_25_sys_omsync(struct proc *, void *, register_t *);
int	sys_vfork(struct proc *, void *, register_t *);
int	sys_sbrk(struct proc *, void *, register_t *);
int	sys_sstk(struct proc *, void *, register_t *);
int	sys_mmap(struct proc *, void *, register_t *);
int	sys_ovadvise(struct proc *, void *, register_t *);
int	sys_munmap(struct proc *, void *, register_t *);
int	sys_mprotect(struct proc *, void *, register_t *);
int	sys_madvise(struct proc *, void *, register_t *);
int	sys_mincore(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	sys_getpgrp(struct proc *, void *, register_t *);
int	sys_setpgid(struct proc *, void *, register_t *);
int	sys_setitimer(struct proc *, void *, register_t *);
int	compat_43_sys_wait(struct proc *, void *, register_t *);
int	compat_25_sys_swapon(struct proc *, void *, register_t *);
int	sys_getitimer(struct proc *, void *, register_t *);
int	compat_43_sys_gethostname(struct proc *, void *, register_t *);
int	compat_43_sys_sethostname(struct proc *, void *, register_t *);
int	compat_43_sys_getdtablesize(struct proc *, void *, register_t *);
int	sys_dup2(struct proc *, void *, register_t *);
int	sys_fcntl(struct proc *, void *, register_t *);
int	sys_select(struct proc *, void *, register_t *);
int	sys_fsync(struct proc *, void *, register_t *);
int	sys_setpriority(struct proc *, void *, register_t *);
int	sys_socket(struct proc *, void *, register_t *);
int	sys_connect(struct proc *, void *, register_t *);
int	sys_accept(struct proc *, void *, register_t *);
int	sys_getpriority(struct proc *, void *, register_t *);
int	compat_43_sys_send(struct proc *, void *, register_t *);
int	compat_43_sys_recv(struct proc *, void *, register_t *);
int	sys_sigreturn(struct proc *, void *, register_t *);
int	sys_bind(struct proc *, void *, register_t *);
int	sys_setsockopt(struct proc *, void *, register_t *);
int	sys_listen(struct proc *, void *, register_t *);
int	compat_43_sys_sigvec(struct proc *, void *, register_t *);
int	compat_43_sys_sigblock(struct proc *, void *, register_t *);
int	compat_43_sys_sigsetmask(struct proc *, void *, register_t *);
int	sys_sigsuspend(struct proc *, void *, register_t *);
int	compat_43_sys_sigstack(struct proc *, void *, register_t *);
#ifdef MSG_COMPAT
int	compat_43_sys_recvmsg(struct proc *, void *, register_t *);
#else
#endif
#ifdef MSG_COMPAT
int	compat_43_sys_sendmsg(struct proc *, void *, register_t *);
#else
#endif
int	sys_gettimeofday(struct proc *, void *, register_t *);
int	sys_getrusage(struct proc *, void *, register_t *);
int	sys_getsockopt(struct proc *, void *, register_t *);
int	sys_readv(struct proc *, void *, register_t *);
int	sys_writev(struct proc *, void *, register_t *);
int	sys_settimeofday(struct proc *, void *, register_t *);
int	sys_fchown(struct proc *, void *, register_t *);
int	sys_fchmod(struct proc *, void *, register_t *);
#ifdef MSG_COMPAT
int	compat_43_sys_recvfrom(struct proc *, void *, register_t *);
#else
#endif
int	sys_setreuid(struct proc *, void *, register_t *);
int	sys_setregid(struct proc *, void *, register_t *);
int	netbsd_sys_rename(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_truncate(struct proc *, void *, register_t *);
int	compat_43_sys_ftruncate(struct proc *, void *, register_t *);
int	sys_flock(struct proc *, void *, register_t *);
int	netbsd_sys_mkfifo(struct proc *, void *, register_t *);
int	sys_sendto(struct proc *, void *, register_t *);
int	sys_shutdown(struct proc *, void *, register_t *);
int	sys_socketpair(struct proc *, void *, register_t *);
int	netbsd_sys_mkdir(struct proc *, void *, register_t *);
int	netbsd_sys_rmdir(struct proc *, void *, register_t *);
int	sys_utimes(struct proc *, void *, register_t *);
int	sys_adjtime(struct proc *, void *, register_t *);
int	compat_43_sys_getpeername(struct proc *, void *, register_t *);
int	compat_43_sys_gethostid(struct proc *, void *, register_t *);
int	compat_43_sys_sethostid(struct proc *, void *, register_t *);
int	compat_43_sys_getrlimit(struct proc *, void *, register_t *);
int	compat_43_sys_setrlimit(struct proc *, void *, register_t *);
int	compat_43_sys_killpg(struct proc *, void *, register_t *);
int	sys_setsid(struct proc *, void *, register_t *);
int	sys_quotactl(struct proc *, void *, register_t *);
int	compat_43_sys_quota(struct proc *, void *, register_t *);
int	compat_43_sys_getsockname(struct proc *, void *, register_t *);
#if defined(NFSCLIENT) || defined(NFSSERVER)
int	sys_nfssvc(struct proc *, void *, register_t *);
#else
#endif
int	compat_43_sys_getdirentries(struct proc *, void *, register_t *);
int	compat_25_sys_statfs(struct proc *, void *, register_t *);
int	compat_25_sys_fstatfs(struct proc *, void *, register_t *);
#if defined(NFSCLIENT) || defined(NFSSERVER)
int	sys_getfh(struct proc *, void *, register_t *);
#else
#endif
int	compat_09_sys_getdomainname(struct proc *, void *, register_t *);
int	compat_09_sys_setdomainname(struct proc *, void *, register_t *);
int	compat_09_sys_uname(struct proc *, void *, register_t *);
int	sys_sysarch(struct proc *, void *, register_t *);
#if defined(SYSVSEM) && !defined(alpha)
int	compat_10_sys_semsys(struct proc *, void *, register_t *);
#else
#endif
#if defined(SYSVMSG) && !defined(alpha)
int	compat_10_sys_msgsys(struct proc *, void *, register_t *);
#else
#endif
#if defined(SYSVSHM) && !defined(alpha)
int	compat_10_sys_shmsys(struct proc *, void *, register_t *);
#else
#endif
int	sys_pread(struct proc *, void *, register_t *);
int	sys_pwrite(struct proc *, void *, register_t *);
int	sys_setgid(struct proc *, void *, register_t *);
int	sys_setegid(struct proc *, void *, register_t *);
int	sys_seteuid(struct proc *, void *, register_t *);
int	netbsd_sys_stat(struct proc *, void *, register_t *);
int	sys_fstat(struct proc *, void *, register_t *);
int	netbsd_sys_lstat(struct proc *, void *, register_t *);
int	netbsd_sys_pathconf(struct proc *, void *, register_t *);
int	sys_fpathconf(struct proc *, void *, register_t *);
int	sys_swapctl(struct proc *, void *, register_t *);
int	sys_getrlimit(struct proc *, void *, register_t *);
int	sys_setrlimit(struct proc *, void *, register_t *);
int	sys_getdirentries(struct proc *, void *, register_t *);
int	sys_mmap(struct proc *, void *, register_t *);
int	sys_lseek(struct proc *, void *, register_t *);
int	netbsd_sys_truncate(struct proc *, void *, register_t *);
int	sys_ftruncate(struct proc *, void *, register_t *);
int	sys___sysctl(struct proc *, void *, register_t *);
int	sys_mlock(struct proc *, void *, register_t *);
int	sys_munlock(struct proc *, void *, register_t *);
int	sys_futimes(struct proc *, void *, register_t *);
int	sys_getpgid(struct proc *, void *, register_t *);
int	sys_xfspioctl(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
#ifdef LKM
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
#else	/* !LKM */
#endif	/* !LKM */
#ifdef SYSVSEM
int	compat_23_sys___semctl(struct proc *, void *, register_t *);
int	sys_semget(struct proc *, void *, register_t *);
int	sys_semop(struct proc *, void *, register_t *);
#else
#endif
#ifdef SYSVMSG
int	compat_23_sys_msgctl(struct proc *, void *, register_t *);
int	sys_msgget(struct proc *, void *, register_t *);
int	sys_msgsnd(struct proc *, void *, register_t *);
int	sys_msgrcv(struct proc *, void *, register_t *);
#else
#endif
#ifdef SYSVSHM
int	sys_shmat(struct proc *, void *, register_t *);
int	compat_23_sys_shmctl(struct proc *, void *, register_t *);
int	sys_shmdt(struct proc *, void *, register_t *);
int	sys_shmget(struct proc *, void *, register_t *);
#else
#endif
int	sys_clock_gettime(struct proc *, void *, register_t *);
int	sys_clock_settime(struct proc *, void *, register_t *);
int	sys_clock_getres(struct proc *, void *, register_t *);
int	sys_nanosleep(struct proc *, void *, register_t *);
int	netbsd_sys_fdatasync(struct proc *, void *, register_t *);
int	netbsd_sys_getdents(struct proc *, void *, register_t *);
int	sys_minherit(struct proc *, void *, register_t *);
int	netbsd_sys_lchmod(struct proc *, void *, register_t *);
int	sys_lchown(struct proc *, void *, register_t *);
int	netbsd_sys_lutimes(struct proc *, void *, register_t *);
int	sys_msync(struct proc *, void *, register_t *);
int	netbsd_sys___stat13(struct proc *, void *, register_t *);
int	netbsd_sys___fstat13(struct proc *, void *, register_t *);
int	netbsd_sys___lstat13(struct proc *, void *, register_t *);
int	sys_sigaltstack(struct proc *, void *, register_t *);
int	netbsd_sys___vfork14(struct proc *, void *, register_t *);
int	sys_getsid(struct proc *, void *, register_t *);
#ifdef KTRACE
#else
#endif
int	sys_preadv(struct proc *, void *, register_t *);
int	sys_pwritev(struct proc *, void *, register_t *);
int	netbsd_sys___sigaction14(struct proc *, void *, register_t *);
int	netbsd_sys___sigpending14(struct proc *, void *, register_t *);
int	netbsd_sys___sigprocmask14(struct proc *, void *, register_t *);
int	netbsd_sys___sigsuspend14(struct proc *, void *, register_t *);
int	netbsd_sys___sigreturn14(struct proc *, void *, register_t *);
int	netbsd_sys___getcwd(struct proc *, void *, register_t *);
int	sys_issetugid(struct proc *, void *, register_t *);
@


1.28
log
@regen
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.27
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.25 2005/06/17 20:39:14 millert Exp 
a418 7
#ifdef LFS
int	lfs_bmapv(struct proc *, void *, register_t *);
int	lfs_markv(struct proc *, void *, register_t *);
int	lfs_segclean(struct proc *, void *, register_t *);
int	lfs_segwait(struct proc *, void *, register_t *);
#else
#endif
@


1.26
log
@regen after stat/mode_t/nlink_t changes
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.24 2004/07/13 21:04:29 millert Exp 
a441 1
int	sys_undelete(struct proc *, void *, register_t *);
@


1.25
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.23 2004/07/09 23:52:02 millert Exp 
d143 1
a143 1
	syscallarg(struct stat *) ub;
d148 1
a148 1
	syscallarg(struct stat *) ub;
@


1.24
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.22 2004/05/28 18:28:14 tedu Exp 
d84 1
a84 1
	syscallarg(struct ostat *) ub;
d89 1
a89 1
	syscallarg(struct ostat *) ub;
@


1.23
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.21 2004/01/14 05:23:25 tedu Exp 
d285 1
d287 2
@


1.22
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.20 2003/05/11 19:45:18 deraadt Exp 
a196 5
struct netbsd_sys___sigaltstack14_args {
	syscallarg(const struct netbsd_sigaltstack *) nss;
	syscallarg(struct netbsd_sigaltstack *) oss;
};

d287 1
a287 1
int	sys_sigaltstack(struct proc *, void *, register_t *);
d491 1
a491 1
int	netbsd_sys___sigaltstack14(struct proc *, void *, register_t *);
@


1.21
log
@Regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.19 2003/04/30 22:02:56 miod Exp 
d320 1
a320 1
int	sys_swapon(struct proc *, void *, register_t *);
@


1.20
log
@regen now that setreuid/setregid have moved out of compat and into kern
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.18 2003/01/30 03:29:49 millert Exp 
d304 1
a304 1
int	sys_omsync(struct proc *, void *, register_t *);
@


1.19
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.17 2002/07/06 19:14:20 nordin Exp 
d365 2
a366 2
int	compat_43_sys_setreuid(struct proc *, void *, register_t *);
int	compat_43_sys_setregid(struct proc *, void *, register_t *);
@


1.18
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_syscallargs.h,v 1.17 2002/03/14 00:44:20 miod Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.16 2002/03/14 00:42:25 miod Exp 
a417 5
#ifdef NTP
int	sys_ntp_gettime(struct proc *, void *, register_t *);
int	sys_ntp_adjtime(struct proc *, void *, register_t *);
#else
#endif
@


1.17
log
@Regen after syscall changes (option PTRACE)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d235 24
a258 24
int	sys_exit	__P((struct proc *, void *, register_t *));
int	sys_fork	__P((struct proc *, void *, register_t *));
int	sys_read	__P((struct proc *, void *, register_t *));
int	sys_write	__P((struct proc *, void *, register_t *));
int	netbsd_sys_open	__P((struct proc *, void *, register_t *));
int	sys_close	__P((struct proc *, void *, register_t *));
int	sys_wait4	__P((struct proc *, void *, register_t *));
int	compat_43_netbsd_sys_creat	__P((struct proc *, void *, register_t *));
int	netbsd_sys_link	__P((struct proc *, void *, register_t *));
int	netbsd_sys_unlink	__P((struct proc *, void *, register_t *));
int	netbsd_sys_chdir	__P((struct proc *, void *, register_t *));
int	sys_fchdir	__P((struct proc *, void *, register_t *));
int	netbsd_sys_mknod	__P((struct proc *, void *, register_t *));
int	netbsd_sys_chmod	__P((struct proc *, void *, register_t *));
int	netbsd_sys_chown	__P((struct proc *, void *, register_t *));
int	sys_obreak	__P((struct proc *, void *, register_t *));
int	compat_25_sys_getfsstat	__P((struct proc *, void *, register_t *));
int	sys_lseek	__P((struct proc *, void *, register_t *));
int	sys_getpid	__P((struct proc *, void *, register_t *));
int	sys_mount	__P((struct proc *, void *, register_t *));
int	netbsd_sys_unmount	__P((struct proc *, void *, register_t *));
int	sys_setuid	__P((struct proc *, void *, register_t *));
int	sys_getuid	__P((struct proc *, void *, register_t *));
int	sys_geteuid	__P((struct proc *, void *, register_t *));
d260 1
a260 1
int	sys_ptrace	__P((struct proc *, void *, register_t *));
d263 18
a280 18
int	sys_recvmsg	__P((struct proc *, void *, register_t *));
int	sys_sendmsg	__P((struct proc *, void *, register_t *));
int	sys_recvfrom	__P((struct proc *, void *, register_t *));
int	sys_accept	__P((struct proc *, void *, register_t *));
int	sys_getpeername	__P((struct proc *, void *, register_t *));
int	sys_getsockname	__P((struct proc *, void *, register_t *));
int	netbsd_sys_access	__P((struct proc *, void *, register_t *));
int	netbsd_sys_chflags	__P((struct proc *, void *, register_t *));
int	sys_fchflags	__P((struct proc *, void *, register_t *));
int	sys_sync	__P((struct proc *, void *, register_t *));
int	sys_kill	__P((struct proc *, void *, register_t *));
int	compat_43_netbsd_sys_stat	__P((struct proc *, void *, register_t *));
int	sys_getppid	__P((struct proc *, void *, register_t *));
int	compat_43_netbsd_sys_lstat	__P((struct proc *, void *, register_t *));
int	sys_dup	__P((struct proc *, void *, register_t *));
int	sys_opipe	__P((struct proc *, void *, register_t *));
int	sys_getegid	__P((struct proc *, void *, register_t *));
int	sys_profil	__P((struct proc *, void *, register_t *));
d282 1
a282 1
int	sys_ktrace	__P((struct proc *, void *, register_t *));
d285 60
a344 60
int	sys_sigaction	__P((struct proc *, void *, register_t *));
int	sys_getgid	__P((struct proc *, void *, register_t *));
int	sys_sigprocmask	__P((struct proc *, void *, register_t *));
int	sys_getlogin	__P((struct proc *, void *, register_t *));
int	sys_setlogin	__P((struct proc *, void *, register_t *));
int	sys_acct	__P((struct proc *, void *, register_t *));
int	sys_sigpending	__P((struct proc *, void *, register_t *));
int	sys_sigaltstack	__P((struct proc *, void *, register_t *));
int	sys_ioctl	__P((struct proc *, void *, register_t *));
int	sys_reboot	__P((struct proc *, void *, register_t *));
int	netbsd_sys_revoke	__P((struct proc *, void *, register_t *));
int	netbsd_sys_symlink	__P((struct proc *, void *, register_t *));
int	netbsd_sys_readlink	__P((struct proc *, void *, register_t *));
int	netbsd_sys_execve	__P((struct proc *, void *, register_t *));
int	sys_umask	__P((struct proc *, void *, register_t *));
int	netbsd_sys_chroot	__P((struct proc *, void *, register_t *));
int	sys_fstat	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getkerninfo	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getpagesize	__P((struct proc *, void *, register_t *));
int	sys_omsync	__P((struct proc *, void *, register_t *));
int	sys_vfork	__P((struct proc *, void *, register_t *));
int	sys_sbrk	__P((struct proc *, void *, register_t *));
int	sys_sstk	__P((struct proc *, void *, register_t *));
int	sys_mmap	__P((struct proc *, void *, register_t *));
int	sys_ovadvise	__P((struct proc *, void *, register_t *));
int	sys_munmap	__P((struct proc *, void *, register_t *));
int	sys_mprotect	__P((struct proc *, void *, register_t *));
int	sys_madvise	__P((struct proc *, void *, register_t *));
int	sys_mincore	__P((struct proc *, void *, register_t *));
int	sys_getgroups	__P((struct proc *, void *, register_t *));
int	sys_setgroups	__P((struct proc *, void *, register_t *));
int	sys_getpgrp	__P((struct proc *, void *, register_t *));
int	sys_setpgid	__P((struct proc *, void *, register_t *));
int	sys_setitimer	__P((struct proc *, void *, register_t *));
int	compat_43_sys_wait	__P((struct proc *, void *, register_t *));
int	sys_swapon	__P((struct proc *, void *, register_t *));
int	sys_getitimer	__P((struct proc *, void *, register_t *));
int	compat_43_sys_gethostname	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sethostname	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getdtablesize	__P((struct proc *, void *, register_t *));
int	sys_dup2	__P((struct proc *, void *, register_t *));
int	sys_fcntl	__P((struct proc *, void *, register_t *));
int	sys_select	__P((struct proc *, void *, register_t *));
int	sys_fsync	__P((struct proc *, void *, register_t *));
int	sys_setpriority	__P((struct proc *, void *, register_t *));
int	sys_socket	__P((struct proc *, void *, register_t *));
int	sys_connect	__P((struct proc *, void *, register_t *));
int	sys_accept	__P((struct proc *, void *, register_t *));
int	sys_getpriority	__P((struct proc *, void *, register_t *));
int	compat_43_sys_send	__P((struct proc *, void *, register_t *));
int	compat_43_sys_recv	__P((struct proc *, void *, register_t *));
int	sys_sigreturn	__P((struct proc *, void *, register_t *));
int	sys_bind	__P((struct proc *, void *, register_t *));
int	sys_setsockopt	__P((struct proc *, void *, register_t *));
int	sys_listen	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sigvec	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sigblock	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sigsetmask	__P((struct proc *, void *, register_t *));
int	sys_sigsuspend	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sigstack	__P((struct proc *, void *, register_t *));
d346 1
a346 1
int	compat_43_sys_recvmsg	__P((struct proc *, void *, register_t *));
d350 1
a350 1
int	compat_43_sys_sendmsg	__P((struct proc *, void *, register_t *));
d353 8
a360 8
int	sys_gettimeofday	__P((struct proc *, void *, register_t *));
int	sys_getrusage	__P((struct proc *, void *, register_t *));
int	sys_getsockopt	__P((struct proc *, void *, register_t *));
int	sys_readv	__P((struct proc *, void *, register_t *));
int	sys_writev	__P((struct proc *, void *, register_t *));
int	sys_settimeofday	__P((struct proc *, void *, register_t *));
int	sys_fchown	__P((struct proc *, void *, register_t *));
int	sys_fchmod	__P((struct proc *, void *, register_t *));
d362 1
a362 1
int	compat_43_sys_recvfrom	__P((struct proc *, void *, register_t *));
d365 24
a388 24
int	compat_43_sys_setreuid	__P((struct proc *, void *, register_t *));
int	compat_43_sys_setregid	__P((struct proc *, void *, register_t *));
int	netbsd_sys_rename	__P((struct proc *, void *, register_t *));
int	compat_43_netbsd_sys_truncate	__P((struct proc *, void *, register_t *));
int	compat_43_sys_ftruncate	__P((struct proc *, void *, register_t *));
int	sys_flock	__P((struct proc *, void *, register_t *));
int	netbsd_sys_mkfifo	__P((struct proc *, void *, register_t *));
int	sys_sendto	__P((struct proc *, void *, register_t *));
int	sys_shutdown	__P((struct proc *, void *, register_t *));
int	sys_socketpair	__P((struct proc *, void *, register_t *));
int	netbsd_sys_mkdir	__P((struct proc *, void *, register_t *));
int	netbsd_sys_rmdir	__P((struct proc *, void *, register_t *));
int	sys_utimes	__P((struct proc *, void *, register_t *));
int	sys_adjtime	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getpeername	__P((struct proc *, void *, register_t *));
int	compat_43_sys_gethostid	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sethostid	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getrlimit	__P((struct proc *, void *, register_t *));
int	compat_43_sys_setrlimit	__P((struct proc *, void *, register_t *));
int	compat_43_sys_killpg	__P((struct proc *, void *, register_t *));
int	sys_setsid	__P((struct proc *, void *, register_t *));
int	sys_quotactl	__P((struct proc *, void *, register_t *));
int	compat_43_sys_quota	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getsockname	__P((struct proc *, void *, register_t *));
d390 1
a390 1
int	sys_nfssvc	__P((struct proc *, void *, register_t *));
d393 3
a395 3
int	compat_43_sys_getdirentries	__P((struct proc *, void *, register_t *));
int	compat_25_sys_statfs	__P((struct proc *, void *, register_t *));
int	compat_25_sys_fstatfs	__P((struct proc *, void *, register_t *));
d397 1
a397 1
int	sys_getfh	__P((struct proc *, void *, register_t *));
d400 4
a403 4
int	compat_09_sys_getdomainname	__P((struct proc *, void *, register_t *));
int	compat_09_sys_setdomainname	__P((struct proc *, void *, register_t *));
int	compat_09_sys_uname	__P((struct proc *, void *, register_t *));
int	sys_sysarch	__P((struct proc *, void *, register_t *));
d405 1
a405 1
int	compat_10_sys_semsys	__P((struct proc *, void *, register_t *));
d409 1
a409 1
int	compat_10_sys_msgsys	__P((struct proc *, void *, register_t *));
d413 1
a413 1
int	compat_10_sys_shmsys	__P((struct proc *, void *, register_t *));
d416 2
a417 2
int	sys_pread	__P((struct proc *, void *, register_t *));
int	sys_pwrite	__P((struct proc *, void *, register_t *));
d419 2
a420 2
int	sys_ntp_gettime	__P((struct proc *, void *, register_t *));
int	sys_ntp_adjtime	__P((struct proc *, void *, register_t *));
d423 3
a425 3
int	sys_setgid	__P((struct proc *, void *, register_t *));
int	sys_setegid	__P((struct proc *, void *, register_t *));
int	sys_seteuid	__P((struct proc *, void *, register_t *));
d427 27
a453 27
int	lfs_bmapv	__P((struct proc *, void *, register_t *));
int	lfs_markv	__P((struct proc *, void *, register_t *));
int	lfs_segclean	__P((struct proc *, void *, register_t *));
int	lfs_segwait	__P((struct proc *, void *, register_t *));
#else
#endif
int	netbsd_sys_stat	__P((struct proc *, void *, register_t *));
int	sys_fstat	__P((struct proc *, void *, register_t *));
int	netbsd_sys_lstat	__P((struct proc *, void *, register_t *));
int	netbsd_sys_pathconf	__P((struct proc *, void *, register_t *));
int	sys_fpathconf	__P((struct proc *, void *, register_t *));
int	sys_swapctl	__P((struct proc *, void *, register_t *));
int	sys_getrlimit	__P((struct proc *, void *, register_t *));
int	sys_setrlimit	__P((struct proc *, void *, register_t *));
int	sys_getdirentries	__P((struct proc *, void *, register_t *));
int	sys_mmap	__P((struct proc *, void *, register_t *));
int	sys_lseek	__P((struct proc *, void *, register_t *));
int	netbsd_sys_truncate	__P((struct proc *, void *, register_t *));
int	sys_ftruncate	__P((struct proc *, void *, register_t *));
int	sys___sysctl	__P((struct proc *, void *, register_t *));
int	sys_mlock	__P((struct proc *, void *, register_t *));
int	sys_munlock	__P((struct proc *, void *, register_t *));
int	sys_undelete	__P((struct proc *, void *, register_t *));
int	sys_futimes	__P((struct proc *, void *, register_t *));
int	sys_getpgid	__P((struct proc *, void *, register_t *));
int	sys_xfspioctl	__P((struct proc *, void *, register_t *));
int	sys_poll	__P((struct proc *, void *, register_t *));
d455 10
a464 10
int	sys_lkmnosys	__P((struct proc *, void *, register_t *));
int	sys_lkmnosys	__P((struct proc *, void *, register_t *));
int	sys_lkmnosys	__P((struct proc *, void *, register_t *));
int	sys_lkmnosys	__P((struct proc *, void *, register_t *));
int	sys_lkmnosys	__P((struct proc *, void *, register_t *));
int	sys_lkmnosys	__P((struct proc *, void *, register_t *));
int	sys_lkmnosys	__P((struct proc *, void *, register_t *));
int	sys_lkmnosys	__P((struct proc *, void *, register_t *));
int	sys_lkmnosys	__P((struct proc *, void *, register_t *));
int	sys_lkmnosys	__P((struct proc *, void *, register_t *));
d468 3
a470 3
int	compat_23_sys___semctl	__P((struct proc *, void *, register_t *));
int	sys_semget	__P((struct proc *, void *, register_t *));
int	sys_semop	__P((struct proc *, void *, register_t *));
d474 4
a477 4
int	compat_23_sys_msgctl	__P((struct proc *, void *, register_t *));
int	sys_msgget	__P((struct proc *, void *, register_t *));
int	sys_msgsnd	__P((struct proc *, void *, register_t *));
int	sys_msgrcv	__P((struct proc *, void *, register_t *));
d481 23
a503 23
int	sys_shmat	__P((struct proc *, void *, register_t *));
int	compat_23_sys_shmctl	__P((struct proc *, void *, register_t *));
int	sys_shmdt	__P((struct proc *, void *, register_t *));
int	sys_shmget	__P((struct proc *, void *, register_t *));
#else
#endif
int	sys_clock_gettime	__P((struct proc *, void *, register_t *));
int	sys_clock_settime	__P((struct proc *, void *, register_t *));
int	sys_clock_getres	__P((struct proc *, void *, register_t *));
int	sys_nanosleep	__P((struct proc *, void *, register_t *));
int	netbsd_sys_fdatasync	__P((struct proc *, void *, register_t *));
int	netbsd_sys_getdents	__P((struct proc *, void *, register_t *));
int	sys_minherit	__P((struct proc *, void *, register_t *));
int	netbsd_sys_lchmod	__P((struct proc *, void *, register_t *));
int	sys_lchown	__P((struct proc *, void *, register_t *));
int	netbsd_sys_lutimes	__P((struct proc *, void *, register_t *));
int	sys_msync	__P((struct proc *, void *, register_t *));
int	netbsd_sys___stat13	__P((struct proc *, void *, register_t *));
int	netbsd_sys___fstat13	__P((struct proc *, void *, register_t *));
int	netbsd_sys___lstat13	__P((struct proc *, void *, register_t *));
int	netbsd_sys___sigaltstack14	__P((struct proc *, void *, register_t *));
int	netbsd_sys___vfork14	__P((struct proc *, void *, register_t *));
int	sys_getsid	__P((struct proc *, void *, register_t *));
d507 9
a515 9
int	sys_preadv	__P((struct proc *, void *, register_t *));
int	sys_pwritev	__P((struct proc *, void *, register_t *));
int	netbsd_sys___sigaction14	__P((struct proc *, void *, register_t *));
int	netbsd_sys___sigpending14	__P((struct proc *, void *, register_t *));
int	netbsd_sys___sigprocmask14	__P((struct proc *, void *, register_t *));
int	netbsd_sys___sigsuspend14	__P((struct proc *, void *, register_t *));
int	netbsd_sys___sigreturn14	__P((struct proc *, void *, register_t *));
int	netbsd_sys___getcwd	__P((struct proc *, void *, register_t *));
int	sys_issetugid	__P((struct proc *, void *, register_t *));
@


1.16
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.15 2001/09/21 15:31:59 art Exp 
d259 1
d261 2
@


1.16.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_syscallargs.h,v 1.16 2001/09/21 15:32:43 art Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.16 2002/03/14 00:42:25 miod Exp 
d235 43
a277 46
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	netbsd_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	sys_wait4(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_creat(struct proc *, void *, register_t *);
int	netbsd_sys_link(struct proc *, void *, register_t *);
int	netbsd_sys_unlink(struct proc *, void *, register_t *);
int	netbsd_sys_chdir(struct proc *, void *, register_t *);
int	sys_fchdir(struct proc *, void *, register_t *);
int	netbsd_sys_mknod(struct proc *, void *, register_t *);
int	netbsd_sys_chmod(struct proc *, void *, register_t *);
int	netbsd_sys_chown(struct proc *, void *, register_t *);
int	sys_obreak(struct proc *, void *, register_t *);
int	compat_25_sys_getfsstat(struct proc *, void *, register_t *);
int	sys_lseek(struct proc *, void *, register_t *);
int	sys_getpid(struct proc *, void *, register_t *);
int	sys_mount(struct proc *, void *, register_t *);
int	netbsd_sys_unmount(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	sys_geteuid(struct proc *, void *, register_t *);
#ifdef PTRACE
int	sys_ptrace(struct proc *, void *, register_t *);
#else
#endif
int	sys_recvmsg(struct proc *, void *, register_t *);
int	sys_sendmsg(struct proc *, void *, register_t *);
int	sys_recvfrom(struct proc *, void *, register_t *);
int	sys_accept(struct proc *, void *, register_t *);
int	sys_getpeername(struct proc *, void *, register_t *);
int	sys_getsockname(struct proc *, void *, register_t *);
int	netbsd_sys_access(struct proc *, void *, register_t *);
int	netbsd_sys_chflags(struct proc *, void *, register_t *);
int	sys_fchflags(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	sys_kill(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_stat(struct proc *, void *, register_t *);
int	sys_getppid(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_lstat(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	sys_opipe(struct proc *, void *, register_t *);
int	sys_getegid(struct proc *, void *, register_t *);
int	sys_profil(struct proc *, void *, register_t *);
d279 1
a279 1
int	sys_ktrace(struct proc *, void *, register_t *);
d282 60
a341 60
int	sys_sigaction(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
int	sys_sigprocmask(struct proc *, void *, register_t *);
int	sys_getlogin(struct proc *, void *, register_t *);
int	sys_setlogin(struct proc *, void *, register_t *);
int	sys_acct(struct proc *, void *, register_t *);
int	sys_sigpending(struct proc *, void *, register_t *);
int	sys_sigaltstack(struct proc *, void *, register_t *);
int	sys_ioctl(struct proc *, void *, register_t *);
int	sys_reboot(struct proc *, void *, register_t *);
int	netbsd_sys_revoke(struct proc *, void *, register_t *);
int	netbsd_sys_symlink(struct proc *, void *, register_t *);
int	netbsd_sys_readlink(struct proc *, void *, register_t *);
int	netbsd_sys_execve(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	netbsd_sys_chroot(struct proc *, void *, register_t *);
int	sys_fstat(struct proc *, void *, register_t *);
int	compat_43_sys_getkerninfo(struct proc *, void *, register_t *);
int	compat_43_sys_getpagesize(struct proc *, void *, register_t *);
int	sys_omsync(struct proc *, void *, register_t *);
int	sys_vfork(struct proc *, void *, register_t *);
int	sys_sbrk(struct proc *, void *, register_t *);
int	sys_sstk(struct proc *, void *, register_t *);
int	sys_mmap(struct proc *, void *, register_t *);
int	sys_ovadvise(struct proc *, void *, register_t *);
int	sys_munmap(struct proc *, void *, register_t *);
int	sys_mprotect(struct proc *, void *, register_t *);
int	sys_madvise(struct proc *, void *, register_t *);
int	sys_mincore(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	sys_getpgrp(struct proc *, void *, register_t *);
int	sys_setpgid(struct proc *, void *, register_t *);
int	sys_setitimer(struct proc *, void *, register_t *);
int	compat_43_sys_wait(struct proc *, void *, register_t *);
int	sys_swapon(struct proc *, void *, register_t *);
int	sys_getitimer(struct proc *, void *, register_t *);
int	compat_43_sys_gethostname(struct proc *, void *, register_t *);
int	compat_43_sys_sethostname(struct proc *, void *, register_t *);
int	compat_43_sys_getdtablesize(struct proc *, void *, register_t *);
int	sys_dup2(struct proc *, void *, register_t *);
int	sys_fcntl(struct proc *, void *, register_t *);
int	sys_select(struct proc *, void *, register_t *);
int	sys_fsync(struct proc *, void *, register_t *);
int	sys_setpriority(struct proc *, void *, register_t *);
int	sys_socket(struct proc *, void *, register_t *);
int	sys_connect(struct proc *, void *, register_t *);
int	sys_accept(struct proc *, void *, register_t *);
int	sys_getpriority(struct proc *, void *, register_t *);
int	compat_43_sys_send(struct proc *, void *, register_t *);
int	compat_43_sys_recv(struct proc *, void *, register_t *);
int	sys_sigreturn(struct proc *, void *, register_t *);
int	sys_bind(struct proc *, void *, register_t *);
int	sys_setsockopt(struct proc *, void *, register_t *);
int	sys_listen(struct proc *, void *, register_t *);
int	compat_43_sys_sigvec(struct proc *, void *, register_t *);
int	compat_43_sys_sigblock(struct proc *, void *, register_t *);
int	compat_43_sys_sigsetmask(struct proc *, void *, register_t *);
int	sys_sigsuspend(struct proc *, void *, register_t *);
int	compat_43_sys_sigstack(struct proc *, void *, register_t *);
d343 1
a343 1
int	compat_43_sys_recvmsg(struct proc *, void *, register_t *);
d347 1
a347 1
int	compat_43_sys_sendmsg(struct proc *, void *, register_t *);
d350 8
a357 8
int	sys_gettimeofday(struct proc *, void *, register_t *);
int	sys_getrusage(struct proc *, void *, register_t *);
int	sys_getsockopt(struct proc *, void *, register_t *);
int	sys_readv(struct proc *, void *, register_t *);
int	sys_writev(struct proc *, void *, register_t *);
int	sys_settimeofday(struct proc *, void *, register_t *);
int	sys_fchown(struct proc *, void *, register_t *);
int	sys_fchmod(struct proc *, void *, register_t *);
d359 1
a359 1
int	compat_43_sys_recvfrom(struct proc *, void *, register_t *);
d362 24
a385 24
int	compat_43_sys_setreuid(struct proc *, void *, register_t *);
int	compat_43_sys_setregid(struct proc *, void *, register_t *);
int	netbsd_sys_rename(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_truncate(struct proc *, void *, register_t *);
int	compat_43_sys_ftruncate(struct proc *, void *, register_t *);
int	sys_flock(struct proc *, void *, register_t *);
int	netbsd_sys_mkfifo(struct proc *, void *, register_t *);
int	sys_sendto(struct proc *, void *, register_t *);
int	sys_shutdown(struct proc *, void *, register_t *);
int	sys_socketpair(struct proc *, void *, register_t *);
int	netbsd_sys_mkdir(struct proc *, void *, register_t *);
int	netbsd_sys_rmdir(struct proc *, void *, register_t *);
int	sys_utimes(struct proc *, void *, register_t *);
int	sys_adjtime(struct proc *, void *, register_t *);
int	compat_43_sys_getpeername(struct proc *, void *, register_t *);
int	compat_43_sys_gethostid(struct proc *, void *, register_t *);
int	compat_43_sys_sethostid(struct proc *, void *, register_t *);
int	compat_43_sys_getrlimit(struct proc *, void *, register_t *);
int	compat_43_sys_setrlimit(struct proc *, void *, register_t *);
int	compat_43_sys_killpg(struct proc *, void *, register_t *);
int	sys_setsid(struct proc *, void *, register_t *);
int	sys_quotactl(struct proc *, void *, register_t *);
int	compat_43_sys_quota(struct proc *, void *, register_t *);
int	compat_43_sys_getsockname(struct proc *, void *, register_t *);
d387 1
a387 1
int	sys_nfssvc(struct proc *, void *, register_t *);
d390 3
a392 3
int	compat_43_sys_getdirentries(struct proc *, void *, register_t *);
int	compat_25_sys_statfs(struct proc *, void *, register_t *);
int	compat_25_sys_fstatfs(struct proc *, void *, register_t *);
d394 1
a394 1
int	sys_getfh(struct proc *, void *, register_t *);
d397 4
a400 4
int	compat_09_sys_getdomainname(struct proc *, void *, register_t *);
int	compat_09_sys_setdomainname(struct proc *, void *, register_t *);
int	compat_09_sys_uname(struct proc *, void *, register_t *);
int	sys_sysarch(struct proc *, void *, register_t *);
d402 1
a402 1
int	compat_10_sys_semsys(struct proc *, void *, register_t *);
d406 1
a406 1
int	compat_10_sys_msgsys(struct proc *, void *, register_t *);
d410 1
a410 1
int	compat_10_sys_shmsys(struct proc *, void *, register_t *);
d413 2
a414 2
int	sys_pread(struct proc *, void *, register_t *);
int	sys_pwrite(struct proc *, void *, register_t *);
d416 2
a417 2
int	sys_ntp_gettime(struct proc *, void *, register_t *);
int	sys_ntp_adjtime(struct proc *, void *, register_t *);
d420 3
a422 3
int	sys_setgid(struct proc *, void *, register_t *);
int	sys_setegid(struct proc *, void *, register_t *);
int	sys_seteuid(struct proc *, void *, register_t *);
d424 27
a450 27
int	lfs_bmapv(struct proc *, void *, register_t *);
int	lfs_markv(struct proc *, void *, register_t *);
int	lfs_segclean(struct proc *, void *, register_t *);
int	lfs_segwait(struct proc *, void *, register_t *);
#else
#endif
int	netbsd_sys_stat(struct proc *, void *, register_t *);
int	sys_fstat(struct proc *, void *, register_t *);
int	netbsd_sys_lstat(struct proc *, void *, register_t *);
int	netbsd_sys_pathconf(struct proc *, void *, register_t *);
int	sys_fpathconf(struct proc *, void *, register_t *);
int	sys_swapctl(struct proc *, void *, register_t *);
int	sys_getrlimit(struct proc *, void *, register_t *);
int	sys_setrlimit(struct proc *, void *, register_t *);
int	sys_getdirentries(struct proc *, void *, register_t *);
int	sys_mmap(struct proc *, void *, register_t *);
int	sys_lseek(struct proc *, void *, register_t *);
int	netbsd_sys_truncate(struct proc *, void *, register_t *);
int	sys_ftruncate(struct proc *, void *, register_t *);
int	sys___sysctl(struct proc *, void *, register_t *);
int	sys_mlock(struct proc *, void *, register_t *);
int	sys_munlock(struct proc *, void *, register_t *);
int	sys_undelete(struct proc *, void *, register_t *);
int	sys_futimes(struct proc *, void *, register_t *);
int	sys_getpgid(struct proc *, void *, register_t *);
int	sys_xfspioctl(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
d452 10
a461 10
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
d465 3
a467 3
int	compat_23_sys___semctl(struct proc *, void *, register_t *);
int	sys_semget(struct proc *, void *, register_t *);
int	sys_semop(struct proc *, void *, register_t *);
d471 4
a474 4
int	compat_23_sys_msgctl(struct proc *, void *, register_t *);
int	sys_msgget(struct proc *, void *, register_t *);
int	sys_msgsnd(struct proc *, void *, register_t *);
int	sys_msgrcv(struct proc *, void *, register_t *);
d478 23
a500 23
int	sys_shmat(struct proc *, void *, register_t *);
int	compat_23_sys_shmctl(struct proc *, void *, register_t *);
int	sys_shmdt(struct proc *, void *, register_t *);
int	sys_shmget(struct proc *, void *, register_t *);
#else
#endif
int	sys_clock_gettime(struct proc *, void *, register_t *);
int	sys_clock_settime(struct proc *, void *, register_t *);
int	sys_clock_getres(struct proc *, void *, register_t *);
int	sys_nanosleep(struct proc *, void *, register_t *);
int	netbsd_sys_fdatasync(struct proc *, void *, register_t *);
int	netbsd_sys_getdents(struct proc *, void *, register_t *);
int	sys_minherit(struct proc *, void *, register_t *);
int	netbsd_sys_lchmod(struct proc *, void *, register_t *);
int	sys_lchown(struct proc *, void *, register_t *);
int	netbsd_sys_lutimes(struct proc *, void *, register_t *);
int	sys_msync(struct proc *, void *, register_t *);
int	netbsd_sys___stat13(struct proc *, void *, register_t *);
int	netbsd_sys___fstat13(struct proc *, void *, register_t *);
int	netbsd_sys___lstat13(struct proc *, void *, register_t *);
int	netbsd_sys___sigaltstack14(struct proc *, void *, register_t *);
int	netbsd_sys___vfork14(struct proc *, void *, register_t *);
int	sys_getsid(struct proc *, void *, register_t *);
d504 9
a512 9
int	sys_preadv(struct proc *, void *, register_t *);
int	sys_pwritev(struct proc *, void *, register_t *);
int	netbsd_sys___sigaction14(struct proc *, void *, register_t *);
int	netbsd_sys___sigpending14(struct proc *, void *, register_t *);
int	netbsd_sys___sigprocmask14(struct proc *, void *, register_t *);
int	netbsd_sys___sigsuspend14(struct proc *, void *, register_t *);
int	netbsd_sys___sigreturn14(struct proc *, void *, register_t *);
int	netbsd_sys___getcwd(struct proc *, void *, register_t *);
int	sys_issetugid(struct proc *, void *, register_t *);
@


1.16.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_syscallargs.h,v 1.16.4.1 2002/06/11 03:28:08 art Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.17 2002/07/06 19:14:20 nordin Exp 
d418 5
@


1.16.4.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.20 2003/05/11 19:45:18 deraadt Exp 
d304 1
a304 1
int	compat_25_sys_omsync(struct proc *, void *, register_t *);
d320 1
a320 1
int	compat_25_sys_swapon(struct proc *, void *, register_t *);
d365 2
a366 2
int	sys_setreuid(struct proc *, void *, register_t *);
int	sys_setregid(struct proc *, void *, register_t *);
@


1.15
log
@sync
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.13 2001/05/16 21:24:01 millert Exp 
a140 16
struct netbsd_sys_pread_args {
	syscallarg(int) fd;
	syscallarg(void *) buf;
	syscallarg(size_t) nbyte;
	syscallarg(int) pad;
	syscallarg(off_t) offset;
};

struct netbsd_sys_pwrite_args {
	syscallarg(int) fd;
	syscallarg(const void *) buf;
	syscallarg(size_t) nbyte;
	syscallarg(int) pad;
	syscallarg(off_t) offset;
};

a201 16
struct netbsd_sys_preadv_args {
	syscallarg(int) fd;
	syscallarg(const struct iovec *) iovp;
	syscallarg(int) iovcnt;
	syscallarg(int) pad;
	syscallarg(off_t) offset;
};

struct netbsd_sys_pwritev_args {
	syscallarg(int) fd;
	syscallarg(const struct iovec *) iovp;
	syscallarg(int) iovcnt;
	syscallarg(int) pad;
	syscallarg(off_t) offset;
};

d413 2
a414 2
int	netbsd_sys_pread	__P((struct proc *, void *, register_t *));
int	netbsd_sys_pwrite	__P((struct proc *, void *, register_t *));
d504 2
a505 2
int	netbsd_sys_preadv	__P((struct proc *, void *, register_t *));
int	netbsd_sys_pwritev	__P((struct proc *, void *, register_t *));
@


1.14
log
@sync
@
text
@d190 1
a190 1
	syscallarg(mode_t) mode;
d374 1
d376 3
a379 2
#ifdef TRACE
int	sys_vtrace	__P((struct proc *, void *, register_t *));
d390 1
d392 2
d544 1
@


1.13
log
@Missed conversion of sys___osemctl, sys_omsgctl, sys_oshmctl, to compat_23
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.12 2001/05/16 17:14:38 millert Exp 
d10 15
a24 1
#define	syscallarg(x)	union { x datum; register_t pad; }
@


1.12
log
@regen for COMPAT_2{3,5}
@
text
@d478 1
a478 1
int	sys___osemctl	__P((struct proc *, void *, register_t *));
d484 1
a484 1
int	sys_omsgctl	__P((struct proc *, void *, register_t *));
d492 1
a492 1
int	sys_oshmctl	__P((struct proc *, void *, register_t *));
@


1.11
log
@sys_semconfig goes foom
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.11 2000/05/01 23:10:58 deraadt Exp 
d269 1
a269 1
int	sys_ogetfsstat	__P((struct proc *, void *, register_t *));
d404 2
a405 2
int	sys_ostatfs	__P((struct proc *, void *, register_t *));
int	sys_ofstatfs	__P((struct proc *, void *, register_t *));
@


1.10
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.10 1999/09/21 22:45:07 kstailey Exp 
a480 1
int	sys_semconfig	__P((struct proc *, void *, register_t *));
@


1.10.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_syscallargs.h,v 1.11 2000/05/01 23:12:29 deraadt Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.11 2000/05/01 23:10:58 deraadt Exp 
d481 1
@


1.10.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_syscallargs.h,v 1.10.4.1 2001/05/14 22:04:58 niklas Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.12 2001/05/16 17:14:38 millert Exp 
d269 1
a269 1
int	compat_25_sys_getfsstat	__P((struct proc *, void *, register_t *));
d404 2
a405 2
int	compat_25_sys_statfs	__P((struct proc *, void *, register_t *));
int	compat_25_sys_fstatfs	__P((struct proc *, void *, register_t *));
d478 1
a478 1
int	compat_23_sys___semctl	__P((struct proc *, void *, register_t *));
d484 1
a484 1
int	compat_23_sys_msgctl	__P((struct proc *, void *, register_t *));
d492 1
a492 1
int	compat_23_sys_shmctl	__P((struct proc *, void *, register_t *));
@


1.10.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_syscallargs.h,v 1.10.4.2 2001/07/04 10:39:33 niklas Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.15 2001/09/21 15:31:59 art Exp 
d10 1
a10 15
#ifdef	syscallarg
#undef	syscallarg
#endif

#define	syscallarg(x)							\
	union {								\
		register_t pad;						\
		struct { x datum; } le;					\
		struct {						\
			int8_t pad[ (sizeof (register_t) < sizeof (x))	\
				? 0					\
				: sizeof (register_t) - sizeof (x)];	\
			x datum;					\
		} be;							\
	}
d127 16
d176 1
a176 1
	syscallarg(netbsd_mode_t) mode;
d204 16
a359 1
#ifdef MSG_COMPAT
a360 3
#else
#endif
#ifdef MSG_COMPAT
d362 2
a373 1
#ifdef MSG_COMPAT
a374 2
#else
#endif
d426 2
a427 2
int	sys_pread	__P((struct proc *, void *, register_t *));
int	sys_pwrite	__P((struct proc *, void *, register_t *));
d517 2
a518 2
int	sys_preadv	__P((struct proc *, void *, register_t *));
int	sys_pwritev	__P((struct proc *, void *, register_t *));
a524 1
int	sys_issetugid	__P((struct proc *, void *, register_t *));
@


1.10.4.4
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.16 2002/03/14 00:42:25 miod Exp 
d235 43
a277 46
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	netbsd_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	sys_wait4(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_creat(struct proc *, void *, register_t *);
int	netbsd_sys_link(struct proc *, void *, register_t *);
int	netbsd_sys_unlink(struct proc *, void *, register_t *);
int	netbsd_sys_chdir(struct proc *, void *, register_t *);
int	sys_fchdir(struct proc *, void *, register_t *);
int	netbsd_sys_mknod(struct proc *, void *, register_t *);
int	netbsd_sys_chmod(struct proc *, void *, register_t *);
int	netbsd_sys_chown(struct proc *, void *, register_t *);
int	sys_obreak(struct proc *, void *, register_t *);
int	compat_25_sys_getfsstat(struct proc *, void *, register_t *);
int	sys_lseek(struct proc *, void *, register_t *);
int	sys_getpid(struct proc *, void *, register_t *);
int	sys_mount(struct proc *, void *, register_t *);
int	netbsd_sys_unmount(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	sys_geteuid(struct proc *, void *, register_t *);
#ifdef PTRACE
int	sys_ptrace(struct proc *, void *, register_t *);
#else
#endif
int	sys_recvmsg(struct proc *, void *, register_t *);
int	sys_sendmsg(struct proc *, void *, register_t *);
int	sys_recvfrom(struct proc *, void *, register_t *);
int	sys_accept(struct proc *, void *, register_t *);
int	sys_getpeername(struct proc *, void *, register_t *);
int	sys_getsockname(struct proc *, void *, register_t *);
int	netbsd_sys_access(struct proc *, void *, register_t *);
int	netbsd_sys_chflags(struct proc *, void *, register_t *);
int	sys_fchflags(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	sys_kill(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_stat(struct proc *, void *, register_t *);
int	sys_getppid(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_lstat(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	sys_opipe(struct proc *, void *, register_t *);
int	sys_getegid(struct proc *, void *, register_t *);
int	sys_profil(struct proc *, void *, register_t *);
d279 1
a279 1
int	sys_ktrace(struct proc *, void *, register_t *);
d282 60
a341 60
int	sys_sigaction(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
int	sys_sigprocmask(struct proc *, void *, register_t *);
int	sys_getlogin(struct proc *, void *, register_t *);
int	sys_setlogin(struct proc *, void *, register_t *);
int	sys_acct(struct proc *, void *, register_t *);
int	sys_sigpending(struct proc *, void *, register_t *);
int	sys_sigaltstack(struct proc *, void *, register_t *);
int	sys_ioctl(struct proc *, void *, register_t *);
int	sys_reboot(struct proc *, void *, register_t *);
int	netbsd_sys_revoke(struct proc *, void *, register_t *);
int	netbsd_sys_symlink(struct proc *, void *, register_t *);
int	netbsd_sys_readlink(struct proc *, void *, register_t *);
int	netbsd_sys_execve(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	netbsd_sys_chroot(struct proc *, void *, register_t *);
int	sys_fstat(struct proc *, void *, register_t *);
int	compat_43_sys_getkerninfo(struct proc *, void *, register_t *);
int	compat_43_sys_getpagesize(struct proc *, void *, register_t *);
int	sys_omsync(struct proc *, void *, register_t *);
int	sys_vfork(struct proc *, void *, register_t *);
int	sys_sbrk(struct proc *, void *, register_t *);
int	sys_sstk(struct proc *, void *, register_t *);
int	sys_mmap(struct proc *, void *, register_t *);
int	sys_ovadvise(struct proc *, void *, register_t *);
int	sys_munmap(struct proc *, void *, register_t *);
int	sys_mprotect(struct proc *, void *, register_t *);
int	sys_madvise(struct proc *, void *, register_t *);
int	sys_mincore(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	sys_getpgrp(struct proc *, void *, register_t *);
int	sys_setpgid(struct proc *, void *, register_t *);
int	sys_setitimer(struct proc *, void *, register_t *);
int	compat_43_sys_wait(struct proc *, void *, register_t *);
int	sys_swapon(struct proc *, void *, register_t *);
int	sys_getitimer(struct proc *, void *, register_t *);
int	compat_43_sys_gethostname(struct proc *, void *, register_t *);
int	compat_43_sys_sethostname(struct proc *, void *, register_t *);
int	compat_43_sys_getdtablesize(struct proc *, void *, register_t *);
int	sys_dup2(struct proc *, void *, register_t *);
int	sys_fcntl(struct proc *, void *, register_t *);
int	sys_select(struct proc *, void *, register_t *);
int	sys_fsync(struct proc *, void *, register_t *);
int	sys_setpriority(struct proc *, void *, register_t *);
int	sys_socket(struct proc *, void *, register_t *);
int	sys_connect(struct proc *, void *, register_t *);
int	sys_accept(struct proc *, void *, register_t *);
int	sys_getpriority(struct proc *, void *, register_t *);
int	compat_43_sys_send(struct proc *, void *, register_t *);
int	compat_43_sys_recv(struct proc *, void *, register_t *);
int	sys_sigreturn(struct proc *, void *, register_t *);
int	sys_bind(struct proc *, void *, register_t *);
int	sys_setsockopt(struct proc *, void *, register_t *);
int	sys_listen(struct proc *, void *, register_t *);
int	compat_43_sys_sigvec(struct proc *, void *, register_t *);
int	compat_43_sys_sigblock(struct proc *, void *, register_t *);
int	compat_43_sys_sigsetmask(struct proc *, void *, register_t *);
int	sys_sigsuspend(struct proc *, void *, register_t *);
int	compat_43_sys_sigstack(struct proc *, void *, register_t *);
d343 1
a343 1
int	compat_43_sys_recvmsg(struct proc *, void *, register_t *);
d347 1
a347 1
int	compat_43_sys_sendmsg(struct proc *, void *, register_t *);
d350 8
a357 8
int	sys_gettimeofday(struct proc *, void *, register_t *);
int	sys_getrusage(struct proc *, void *, register_t *);
int	sys_getsockopt(struct proc *, void *, register_t *);
int	sys_readv(struct proc *, void *, register_t *);
int	sys_writev(struct proc *, void *, register_t *);
int	sys_settimeofday(struct proc *, void *, register_t *);
int	sys_fchown(struct proc *, void *, register_t *);
int	sys_fchmod(struct proc *, void *, register_t *);
d359 1
a359 1
int	compat_43_sys_recvfrom(struct proc *, void *, register_t *);
d362 24
a385 24
int	compat_43_sys_setreuid(struct proc *, void *, register_t *);
int	compat_43_sys_setregid(struct proc *, void *, register_t *);
int	netbsd_sys_rename(struct proc *, void *, register_t *);
int	compat_43_netbsd_sys_truncate(struct proc *, void *, register_t *);
int	compat_43_sys_ftruncate(struct proc *, void *, register_t *);
int	sys_flock(struct proc *, void *, register_t *);
int	netbsd_sys_mkfifo(struct proc *, void *, register_t *);
int	sys_sendto(struct proc *, void *, register_t *);
int	sys_shutdown(struct proc *, void *, register_t *);
int	sys_socketpair(struct proc *, void *, register_t *);
int	netbsd_sys_mkdir(struct proc *, void *, register_t *);
int	netbsd_sys_rmdir(struct proc *, void *, register_t *);
int	sys_utimes(struct proc *, void *, register_t *);
int	sys_adjtime(struct proc *, void *, register_t *);
int	compat_43_sys_getpeername(struct proc *, void *, register_t *);
int	compat_43_sys_gethostid(struct proc *, void *, register_t *);
int	compat_43_sys_sethostid(struct proc *, void *, register_t *);
int	compat_43_sys_getrlimit(struct proc *, void *, register_t *);
int	compat_43_sys_setrlimit(struct proc *, void *, register_t *);
int	compat_43_sys_killpg(struct proc *, void *, register_t *);
int	sys_setsid(struct proc *, void *, register_t *);
int	sys_quotactl(struct proc *, void *, register_t *);
int	compat_43_sys_quota(struct proc *, void *, register_t *);
int	compat_43_sys_getsockname(struct proc *, void *, register_t *);
d387 1
a387 1
int	sys_nfssvc(struct proc *, void *, register_t *);
d390 3
a392 3
int	compat_43_sys_getdirentries(struct proc *, void *, register_t *);
int	compat_25_sys_statfs(struct proc *, void *, register_t *);
int	compat_25_sys_fstatfs(struct proc *, void *, register_t *);
d394 1
a394 1
int	sys_getfh(struct proc *, void *, register_t *);
d397 4
a400 4
int	compat_09_sys_getdomainname(struct proc *, void *, register_t *);
int	compat_09_sys_setdomainname(struct proc *, void *, register_t *);
int	compat_09_sys_uname(struct proc *, void *, register_t *);
int	sys_sysarch(struct proc *, void *, register_t *);
d402 1
a402 1
int	compat_10_sys_semsys(struct proc *, void *, register_t *);
d406 1
a406 1
int	compat_10_sys_msgsys(struct proc *, void *, register_t *);
d410 1
a410 1
int	compat_10_sys_shmsys(struct proc *, void *, register_t *);
d413 2
a414 2
int	sys_pread(struct proc *, void *, register_t *);
int	sys_pwrite(struct proc *, void *, register_t *);
d416 2
a417 2
int	sys_ntp_gettime(struct proc *, void *, register_t *);
int	sys_ntp_adjtime(struct proc *, void *, register_t *);
d420 3
a422 3
int	sys_setgid(struct proc *, void *, register_t *);
int	sys_setegid(struct proc *, void *, register_t *);
int	sys_seteuid(struct proc *, void *, register_t *);
d424 27
a450 27
int	lfs_bmapv(struct proc *, void *, register_t *);
int	lfs_markv(struct proc *, void *, register_t *);
int	lfs_segclean(struct proc *, void *, register_t *);
int	lfs_segwait(struct proc *, void *, register_t *);
#else
#endif
int	netbsd_sys_stat(struct proc *, void *, register_t *);
int	sys_fstat(struct proc *, void *, register_t *);
int	netbsd_sys_lstat(struct proc *, void *, register_t *);
int	netbsd_sys_pathconf(struct proc *, void *, register_t *);
int	sys_fpathconf(struct proc *, void *, register_t *);
int	sys_swapctl(struct proc *, void *, register_t *);
int	sys_getrlimit(struct proc *, void *, register_t *);
int	sys_setrlimit(struct proc *, void *, register_t *);
int	sys_getdirentries(struct proc *, void *, register_t *);
int	sys_mmap(struct proc *, void *, register_t *);
int	sys_lseek(struct proc *, void *, register_t *);
int	netbsd_sys_truncate(struct proc *, void *, register_t *);
int	sys_ftruncate(struct proc *, void *, register_t *);
int	sys___sysctl(struct proc *, void *, register_t *);
int	sys_mlock(struct proc *, void *, register_t *);
int	sys_munlock(struct proc *, void *, register_t *);
int	sys_undelete(struct proc *, void *, register_t *);
int	sys_futimes(struct proc *, void *, register_t *);
int	sys_getpgid(struct proc *, void *, register_t *);
int	sys_xfspioctl(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
d452 10
a461 10
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
int	sys_lkmnosys(struct proc *, void *, register_t *);
d465 3
a467 3
int	compat_23_sys___semctl(struct proc *, void *, register_t *);
int	sys_semget(struct proc *, void *, register_t *);
int	sys_semop(struct proc *, void *, register_t *);
d471 4
a474 4
int	compat_23_sys_msgctl(struct proc *, void *, register_t *);
int	sys_msgget(struct proc *, void *, register_t *);
int	sys_msgsnd(struct proc *, void *, register_t *);
int	sys_msgrcv(struct proc *, void *, register_t *);
d478 23
a500 23
int	sys_shmat(struct proc *, void *, register_t *);
int	compat_23_sys_shmctl(struct proc *, void *, register_t *);
int	sys_shmdt(struct proc *, void *, register_t *);
int	sys_shmget(struct proc *, void *, register_t *);
#else
#endif
int	sys_clock_gettime(struct proc *, void *, register_t *);
int	sys_clock_settime(struct proc *, void *, register_t *);
int	sys_clock_getres(struct proc *, void *, register_t *);
int	sys_nanosleep(struct proc *, void *, register_t *);
int	netbsd_sys_fdatasync(struct proc *, void *, register_t *);
int	netbsd_sys_getdents(struct proc *, void *, register_t *);
int	sys_minherit(struct proc *, void *, register_t *);
int	netbsd_sys_lchmod(struct proc *, void *, register_t *);
int	sys_lchown(struct proc *, void *, register_t *);
int	netbsd_sys_lutimes(struct proc *, void *, register_t *);
int	sys_msync(struct proc *, void *, register_t *);
int	netbsd_sys___stat13(struct proc *, void *, register_t *);
int	netbsd_sys___fstat13(struct proc *, void *, register_t *);
int	netbsd_sys___lstat13(struct proc *, void *, register_t *);
int	netbsd_sys___sigaltstack14(struct proc *, void *, register_t *);
int	netbsd_sys___vfork14(struct proc *, void *, register_t *);
int	sys_getsid(struct proc *, void *, register_t *);
d504 9
a512 9
int	sys_preadv(struct proc *, void *, register_t *);
int	sys_pwritev(struct proc *, void *, register_t *);
int	netbsd_sys___sigaction14(struct proc *, void *, register_t *);
int	netbsd_sys___sigpending14(struct proc *, void *, register_t *);
int	netbsd_sys___sigprocmask14(struct proc *, void *, register_t *);
int	netbsd_sys___sigsuspend14(struct proc *, void *, register_t *);
int	netbsd_sys___sigreturn14(struct proc *, void *, register_t *);
int	netbsd_sys___getcwd(struct proc *, void *, register_t *);
int	sys_issetugid(struct proc *, void *, register_t *);
@


1.10.4.5
log
@Sync the SMP branch with 3.3
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.18 2003/01/30 03:29:49 millert Exp 
d365 2
a366 2
int	sys_setreuid(struct proc *, void *, register_t *);
int	sys_setregid(struct proc *, void *, register_t *);
d418 5
@


1.10.4.6
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_syscallargs.h,v 1.10.4.5 2003/03/27 23:53:47 niklas Exp $	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.20 2003/05/11 19:45:18 deraadt Exp 
d304 1
a304 1
int	compat_25_sys_omsync(struct proc *, void *, register_t *);
d320 1
a320 1
int	compat_25_sys_swapon(struct proc *, void *, register_t *);
@


1.10.4.7
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.21 2004/01/14 05:23:25 tedu Exp 
d197 5
d292 1
a292 1
int	sys_osigaltstack(struct proc *, void *, register_t *);
d496 1
a496 1
int	sys_sigaltstack(struct proc *, void *, register_t *);
@


1.10.4.8
log
@Merge with the trunk
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.22 2004/05/28 18:28:14 tedu Exp 
a284 1
#ifdef ACCOUNTING
a285 2
#else
#endif
@


1.9
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.9 1999/09/17 22:14:09 kstailey Exp 
d415 1
a415 1
int	sys_semsys	__P((struct proc *, void *, register_t *));
d419 1
a419 1
int	sys_msgsys	__P((struct proc *, void *, register_t *));
@


1.8
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.8 1999/09/17 15:03:18 kstailey Exp 
d12 115
d143 21
d185 1
a185 1
	syscallarg(const char *) path;
d195 1
a195 1
	syscallarg(const char *) path;
d257 1
a257 1
int	sys_open	__P((struct proc *, void *, register_t *));
d260 4
a263 4
int	compat_43_sys_creat	__P((struct proc *, void *, register_t *));
int	sys_link	__P((struct proc *, void *, register_t *));
int	sys_unlink	__P((struct proc *, void *, register_t *));
int	sys_chdir	__P((struct proc *, void *, register_t *));
d265 3
a267 3
int	sys_mknod	__P((struct proc *, void *, register_t *));
int	sys_chmod	__P((struct proc *, void *, register_t *));
int	sys_chown	__P((struct proc *, void *, register_t *));
d273 1
a273 1
int	sys_unmount	__P((struct proc *, void *, register_t *));
d284 2
a285 2
int	sys_access	__P((struct proc *, void *, register_t *));
int	sys_chflags	__P((struct proc *, void *, register_t *));
d289 1
a289 1
int	sys_stat	__P((struct proc *, void *, register_t *));
d291 1
a291 1
int	sys_lstat	__P((struct proc *, void *, register_t *));
d310 4
a313 4
int	sys_revoke	__P((struct proc *, void *, register_t *));
int	sys_symlink	__P((struct proc *, void *, register_t *));
int	sys_readlink	__P((struct proc *, void *, register_t *));
int	sys_execve	__P((struct proc *, void *, register_t *));
d315 1
a315 1
int	sys_chroot	__P((struct proc *, void *, register_t *));
d377 2
a378 2
int	sys_rename	__P((struct proc *, void *, register_t *));
int	compat_43_sys_truncate	__P((struct proc *, void *, register_t *));
d381 1
a381 1
int	sys_mkfifo	__P((struct proc *, void *, register_t *));
d385 2
a386 2
int	sys_mkdir	__P((struct proc *, void *, register_t *));
int	sys_rmdir	__P((struct proc *, void *, register_t *));
d443 1
a443 1
int	sys_stat	__P((struct proc *, void *, register_t *));
d445 2
a446 2
int	sys_lstat	__P((struct proc *, void *, register_t *));
int	sys_pathconf	__P((struct proc *, void *, register_t *));
d454 1
a454 1
int	sys_truncate	__P((struct proc *, void *, register_t *));
@


1.7
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.7 1999/09/17 13:41:29 kstailey Exp 
d38 10
d369 1
d371 1
@


1.6
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.6 1999/09/17 12:13:47 kstailey Exp 
d28 4
d356 1
@


1.5
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.5 1999/09/15 20:41:16 kstailey Exp 
d12 16
d54 16
d276 2
d365 2
@


1.4
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.4 1999/09/15 18:36:38 kstailey Exp 
d12 6
d318 1
@


1.3
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.3 1999/09/14 01:05:25 kstailey Exp 
d42 10
d319 1
d326 2
@


1.2
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.2 1999/09/12 14:34:18 kstailey Exp 
d27 19
d308 1
d313 3
@


1.1
log
@regen
@
text
@d7 1
a7 1
 * created from;	OpenBSD: syscalls.master,v 1.1 1999/09/12 14:15:17 kstailey Exp 
a282 12
#ifdef SYSVSEM
int	sys___semctl	__P((struct proc *, void *, register_t *));
#else
#endif
#ifdef SYSVSHM
int	sys_shmctl	__P((struct proc *, void *, register_t *));
#else
#endif
#ifdef SYSVMSG
int	sys_msgctl	__P((struct proc *, void *, register_t *));
#else
#endif
@

