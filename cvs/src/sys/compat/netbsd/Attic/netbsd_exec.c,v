head	1.13;
access;
symbols
	OPENBSD_4_1:1.12.0.6
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.4
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.10.0.12
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.10
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.8
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.6
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.10
	UBC:1.10.0.2
	UBC_BASE:1.10
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.8
	OPENBSD_2_8:1.6.0.6
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.2
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5;
locks; strict;
comment	@ * @;


1.13
date	2007.05.28.23.10.10;	author beck;	state dead;
branches;
next	1.12;

1.12
date	2006.01.19.17.54.54;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.15.00.22.42;	author tedu;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.06.19.53.17;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.09.21.15.55.08;	author art;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.21.15.44.10;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.11.23.21.14;	author art;	state Exp;
branches;
next	1.6;

1.6
date	99.11.10.15.55.22;	author mickey;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	99.09.26.11.07.32;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	99.09.19.16.16.49;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	99.09.19.13.59.22;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	99.09.17.22.14.09;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	99.09.12.14.15.16;	author kstailey;	state Exp;
branches;
next	;

1.6.2.1
date	2001.10.31.03.11.46;	author nate;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2001.11.13.21.05.48;	author niklas;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2004.06.05.23.12.34;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Maintaining a broken compatibility layer for a broken OS is not a productive
activity for anyone. Bye bye COMPAT_NETBSD. ok tedu@@, deraadt@@, and many others
in the hackathon room.
@
text
@/*	$OpenBSD: netbsd_exec.c,v 1.12 2006/01/19 17:54:54 mickey Exp $	 */
/*	$NetBSD: svr4_exec.c,v 1.16 1995/10/14 20:24:20 christos Exp $	 */

/*
 * Copyright (c) 1994 Christos Zoulas
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>
#include <sys/signalvar.h>
#include <sys/malloc.h>
#include <sys/exec.h>
#include <sys/exec_elf.h>
#include <sys/exec_olf.h>

#include <sys/mman.h>
#include <uvm/uvm_extern.h>

#include <machine/cpu.h>
#include <machine/reg.h>

#include <compat/netbsd/netbsd_util.h>
#include <compat/netbsd/netbsd_syscall.h>
#include <compat/netbsd/netbsd_exec.h>
#include <compat/netbsd/netbsd_signal.h>

#include <machine/netbsd_machdep.h>

#ifdef _KERN_DO_ELF64

extern char netbsd_sigcode[], netbsd_esigcode[];
extern struct sysent netbsd_sysent[];
#ifdef SYSCALL_DEBUG
extern char *netbsd_syscallnames[];
#endif

struct emul emul_netbsd_elf64 = {
	"netbsd",
	NULL,
	netbsd_sendsig,
	NETBSD_SYS_syscall,
	NETBSD_SYS_MAXSYSCALL,
	netbsd_sysent,
#ifdef SYSCALL_DEBUG
	netbsd_syscallnames,
#else
	NULL,
#endif
	ELF_AUX_ENTRIES * sizeof(Aux64Info),
	elf64_copyargs,
	setregs,
	exec_elf64_fixup,
	netbsd_sigcode,
	netbsd_esigcode,
};

int
netbsd_elf64_probe(p, epp, itp, pos, os)
	struct proc *p;
	struct exec_package *epp;
	char *itp;
	u_long *pos;
	u_int8_t *os;
{
	Elf64_Ehdr *eh = epp->ep_hdr;
	char *bp;
	int error;
	size_t len;

	if (elf64_os_pt_note(p, epp, eh, "NetBSD\0", 7, 4))
		return (EINVAL);

	if (itp) {
		if ((error = emul_find(p, NULL, netbsd_emul_path, itp, &bp, 0)))
			return (error);
		if ((error = copystr(bp, itp, MAXPATHLEN, &len)))
			return (error);
		free(bp, M_TEMP);
	}
	epp->ep_emul = &emul_netbsd_elf64;
	*pos = ELF64_NO_ADDR;
	if (*os == OOS_NULL)
		*os = OOS_NETBSD;
	return (0);
}

#endif /* _KERN_DO_ELF64 */
@


1.12
log
@redo (w/ proper changes everywhere ;):
take interp[MAXPATHLEN] off the stack.  from mickey, ok otto
while here, switch above from malloc to pool, remove stupid casts
tedu@@ miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.11 2004/04/15 00:22:42 tedu Exp $	 */
@


1.11
log
@rework access to emulations slightly in an effort to both merge and
separate exec format from emulation.  consistent naming of freebsd emuls.
not much in the way of functional changes yet.
testing and ok deraadt@@ and others along the way.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.10 2001/11/06 19:53:17 miod Exp $	 */
d97 1
a97 1
	if (itp[0]) {
@


1.10
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.9 2001/09/21 15:55:08 art Exp $	 */
d61 1
a61 1
struct emul emul_elf64_netbsd = {
d104 1
a104 1
	epp->ep_emul = &emul_elf64_netbsd;
@


1.9
log
@Unnecessary wrapper.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.8 2001/09/21 15:44:10 art Exp $	 */
d41 1
a41 1
#include <vm/vm.h>
@


1.8
log
@Save some space on the stack for AuxInfo. Dynamic binaries now have the correct argv.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.7 2001/08/11 23:21:14 art Exp $	 */
a54 3
static void *netbsd_elf64_copyargs __P((struct exec_package *,
		struct ps_strings *, void *, void *));

d74 1
a74 1
	netbsd_elf64_copyargs,
a79 15

static void *
netbsd_elf64_copyargs(pack, arginfo, stack, argp)
	struct exec_package *pack;
	struct ps_strings *arginfo;
	void *stack;
	void *argp;
{
	AuxInfo *a;

	if (!(a = (AuxInfo *)elf64_copyargs(pack, arginfo, stack, argp)))
		return (NULL);

	return (a);
}
@


1.7
log
@Unnecessary and redundant includes.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.6 1999/11/10 15:55:22 mickey Exp $	 */
d76 1
a76 1
	0,
@


1.6
log
@include syscallnames only if compiling w/ SYSCALL_DEBUG.
was already so for native and sunos, the rest was just
wasting space on it. niels@@ millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.5 1999/09/26 11:07:32 kstailey Exp $	 */
a41 2
#include <vm/vm_param.h>
#include <vm/vm_map.h>
@


1.6.2.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.6 1999/11/10 15:55:22 mickey Exp $	 */
d42 2
d57 3
d78 2
a79 2
	ELF_AUX_ENTRIES * sizeof(Aux64Info),
	elf64_copyargs,
d85 15
@


1.6.2.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	 */
d41 1
a41 1
#include <uvm/uvm_extern.h>
@


1.6.2.3
log
@Merge with the trunk
@
text
@d61 1
a61 1
struct emul emul_netbsd_elf64 = {
d104 1
a104 1
	epp->ep_emul = &emul_netbsd_elf64;
@


1.5
log
@netbsd_sendsig() + supporting code
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.4 1999/09/19 16:16:49 kstailey Exp $	 */
d62 1
d64 1
a64 1

d73 1
d75 3
@


1.4
log
@improved OS brand PT_NOTE detection
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.3 1999/09/19 13:59:22 kstailey Exp $	 */
a46 3
#if 0
#include <machine/netbsd_machdep.h>
#endif
d51 5
d57 2
a58 2
static void *netbsd_copyargs __P((struct exec_package *, struct ps_strings *,
			       void *, void *));
d60 1
a60 1
extern char sigcode[], esigcode[];
d64 1
d68 1
a68 1
	sendsig,
d74 1
a74 1
	netbsd_copyargs,
d77 2
a78 2
	sigcode,
	esigcode,
d82 1
a82 1
netbsd_copyargs(pack, arginfo, stack, argp)
d92 1
d125 2
@


1.3
log
@use PT_NOTE to identify NetBSD ELF64 binaries
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.2 1999/09/17 22:14:09 kstailey Exp $	 */
d101 1
a101 1
	char *bp, *brand;
d105 2
a107 3
	brand = elf64_check_brand(eh);
	if (brand == NULL || strcmp(brand, "NetBSD"))
		return (EINVAL);
@


1.2
log
@alternate path
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_exec.c,v 1.1 1999/09/12 14:15:16 kstailey Exp $	 */
d100 2
a101 1
	char *bp;
d105 4
@


1.1
log
@Add COMPAT_NETBSD.  Currently only works for ELF64.  Many missing system calls.
@
text
@d1 1
a1 1
/*	$OpenBSD$	 */
a57 1
const char netbsd_emul_path[] = "/emul/netbsd";
@

