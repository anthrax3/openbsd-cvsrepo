head	1.10;
access;
symbols
	OPENBSD_4_1:1.9.0.8
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.6
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.4
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.7
	UBC:1.4.0.4
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.4
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	2007.05.28.23.10.10;	author beck;	state dead;
branches;
next	1.9;

1.9
date	2005.05.26.00.33.45;	author pedro;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.28.00;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.08.23.15.39.31;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.50;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.12.18.41.20;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.05.23.38.28;	author art;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2001.01.15.11.39.36;	author art;	state Exp;
branches;
next	1.2;

1.2
date	99.09.15.21.00.10;	author kstailey;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	99.09.15.20.41.16;	author kstailey;	state Exp;
branches;
next	;

1.2.4.1
date	2001.05.14.22.04.56;	author niklas;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2001.10.31.03.11.46;	author nate;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2002.03.06.02.07.08;	author niklas;	state Exp;
branches;
next	1.2.4.4;

1.2.4.4
date	2002.03.28.11.28.06;	author niklas;	state Exp;
branches;
next	1.2.4.5;

1.2.4.5
date	2003.03.27.23.53.47;	author niklas;	state Exp;
branches;
next	1.2.4.6;

1.2.4.6
date	2003.06.07.11.00.36;	author ho;	state Exp;
branches;
next	;

1.4.4.1
date	2002.06.11.03.28.08;	author art;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	2002.10.29.00.30.51;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Maintaining a broken compatibility layer for a broken OS is not a productive
activity for anyone. Bye bye COMPAT_NETBSD. ok tedu@@, deraadt@@, and many others
in the hackathon room.
@
text
@/*	$OpenBSD: netbsd_getdents.c,v 1.9 2005/05/26 00:33:45 pedro Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)vfs_vnops.c	8.14 (Berkeley) 6/15/95
 *	@@(#)vfs_syscalls.c	8.42 (Berkeley) 7/31/95
 */

#include <sys/param.h>
#include <sys/file.h>
#include <sys/mount.h>
#include <sys/proc.h>
#include <sys/uio.h>
#include <sys/vnode.h>
#include <sys/stat.h>

#include <compat/netbsd/netbsd_types.h>
#include <compat/netbsd/netbsd_signal.h>
#include <compat/netbsd/netbsd_syscallargs.h>

static int netbsd_vn_readdir(struct file *, char *, int, u_int, int *,
	struct proc *, off_t **, int *);

static int
netbsd_vn_readdir(fp, buf, segflg, count, done, p, cookies, ncookies)
	struct file *fp;
	char *buf;
	int segflg, *done, *ncookies;
	u_int count;
	struct proc *p;
	off_t **cookies;
{
	struct vnode *vp = (struct vnode *)fp->f_data;
	struct iovec aiov;
	struct uio auio;
	int error, eofflag;

	if (vp->v_type != VDIR)
		return (EINVAL);
	aiov.iov_base = buf;
	aiov.iov_len = count;
	auio.uio_iov = &aiov;
	auio.uio_iovcnt = 1;
	auio.uio_rw = UIO_READ;
	auio.uio_segflg = segflg;
	auio.uio_procp = p;
	auio.uio_resid = count;
	vn_lock(vp, LK_EXCLUSIVE | LK_RETRY, p);
	auio.uio_offset = fp->f_offset;
	error = VOP_READDIR(vp, &auio, fp->f_cred, &eofflag, ncookies,
		    (u_long **)cookies); /* XXX 32-bit? */
	fp->f_offset = auio.uio_offset;
	VOP_UNLOCK(vp, 0, p);
	if (error)
		return (error);
	*done = count - auio.uio_resid;
	return error;
}

/*
 * Read a block of directory entries in a file system independent format.
 */
int
netbsd_sys_getdents(p, v, retval)
	struct proc *p;
	void *v;
	register_t *retval;
{
	register struct netbsd_sys_getdents_args /* {
		syscallarg(int) fd;
		syscallarg(char *) buf;
		syscallarg(size_t) count;
	} */ *uap = v;
	struct file *fp;
	int error, done;

	if ((error = getvnode(p->p_fd, SCARG(uap, fd), &fp)) != 0)
		return (error);
	if ((fp->f_flag & FREAD) == 0) {
		error = EBADF;
		goto bad;
	}
	error = netbsd_vn_readdir(fp, SCARG(uap, buf), UIO_USERSPACE,
			SCARG(uap, count), &done, p, 0, 0);
	*retval = done;
bad:
	FRELE(fp);
	return (error);
}

@


1.9
log
@RIP stackable filesystems, ok marius@@ tedu@@, discussed with deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.8 2003/06/02 23:28:00 millert Exp $	*/
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.7 2002/08/23 15:39:31 art Exp $	*/
a68 1
unionread:
a86 53

#ifdef UNION
{
	extern int (**union_vnodeop_p)(void *);
	extern struct vnode *union_dircache(struct vnode *);

	if (count == auio.uio_resid && (vp->v_op == union_vnodeop_p)) {
		struct vnode *lvp;

		lvp = union_dircache(vp);
		if (lvp != NULLVP) {
			struct vattr va;

			/*
			 * If the directory is opaque,
			 * then don't show lower entries
			 */
			error = VOP_GETATTR(vp, &va, fp->f_cred, p);
			if (va.va_flags & OPAQUE) {
				vput(lvp);
				lvp = NULL;
			}
		}
		
		if (lvp != NULLVP) {
			error = VOP_OPEN(lvp, FREAD, fp->f_cred, p);
			if (error) {
				vput(lvp);
				return (error);
			}
			VOP_UNLOCK(lvp, 0, p);
			fp->f_data = (caddr_t) lvp;
			fp->f_offset = 0;
			error = vn_close(vp, FREAD, fp->f_cred, p);
			if (error)
				return (error);
			vp = lvp;
			goto unionread;
		}
	}
}
#endif /* UNION */

	if (count == auio.uio_resid && (vp->v_flag & VROOT) &&
	    (vp->v_mount->mnt_flag & MNT_UNION)) {
		struct vnode *tvp = vp;
		vp = vp->v_mount->mnt_vnodecovered;
		VREF(vp);
		fp->f_data = (caddr_t) vp;
		fp->f_offset = 0;
		vrele(tvp);
		goto unionread;
	}
@


1.7
log
@Cleanup change. Since almost all callers (except one) of getvnode did a FREF
on the returned file, do the FREF inside getvnode so that people can't
get away with avoiding FREF and FRELE.

Eyeballed by various people.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.6 2002/03/14 01:26:50 millert Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.5 2002/02/12 18:41:20 art Exp $	*/
d168 4
a171 3
	if ((fp->f_flag & FREAD) == 0)
		return (EBADF);
	FREF(fp);
d175 1
@


1.5
log
@More FREF/FRELE protection. This time all users of getvnode.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.4 2001/09/05 23:38:28 art Exp $	*/
d56 2
a57 2
static int netbsd_vn_readdir __P((struct file *, char *, int, u_int, int *,
	struct proc *, off_t **, int *));
d95 2
a96 2
	extern int (**union_vnodeop_p) __P((void *));
	extern struct vnode *union_dircache __P((struct vnode *));
@


1.4
log
@Will need netbsd_types.h very soon.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.3 2001/01/15 11:39:36 art Exp $	*/
d170 1
d174 1
@


1.4.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.4 2001/09/05 23:38:28 art Exp $	*/
d56 2
a57 2
static int netbsd_vn_readdir(struct file *, char *, int, u_int, int *,
	struct proc *, off_t **, int *);
d95 2
a96 2
	extern int (**union_vnodeop_p)(void *);
	extern struct vnode *union_dircache(struct vnode *);
a169 1
	FREF(fp);
a172 1
	FRELE(fp);
@


1.4.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.4.4.1 2002/06/11 03:28:08 art Exp $	*/
d168 3
a170 4
	if ((fp->f_flag & FREAD) == 0) {
		error = EBADF;
		goto bad;
	}
a173 1
bad:
@


1.3
log
@Unbreak UNION code.
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.2 1999/09/15 21:00:10 kstailey Exp $	*/
d52 1
@


1.2
log
@tag + copyright
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 1
d121 1
a121 1
			VOP_UNLOCK(lvp, 0);
@


1.2.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.3 2001/01/15 11:39:36 art Exp $	*/
a49 1
#include <sys/stat.h>
d120 1
a120 1
			VOP_UNLOCK(lvp, 0, p);
@


1.2.4.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.2.4.1 2001/05/14 22:04:56 niklas Exp $	*/
a51 1
#include <compat/netbsd/netbsd_types.h>
@


1.2.4.3
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a169 1
	FREF(fp);
a172 1
	FRELE(fp);
@


1.2.4.4
log
@Merge in -current from about a week ago
@
text
@d56 2
a57 2
static int netbsd_vn_readdir(struct file *, char *, int, u_int, int *,
	struct proc *, off_t **, int *);
d95 2
a96 2
	extern int (**union_vnodeop_p)(void *);
	extern struct vnode *union_dircache(struct vnode *);
@


1.2.4.5
log
@Sync the SMP branch with 3.3
@
text
@d168 3
a170 4
	if ((fp->f_flag & FREAD) == 0) {
		error = EBADF;
		goto bad;
	}
a173 1
bad:
@


1.2.4.6
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: netbsd_getdents.c,v 1.2.4.5 2003/03/27 23:53:47 niklas Exp $	*/
d20 5
a24 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1
log
@getdents(2)
@
text
@d1 43
@

