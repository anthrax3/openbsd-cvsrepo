head	1.7;
access;
symbols
	OPENBSD_5_9:1.6.0.4
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.16
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.14
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.34
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.32
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.28
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.30
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.26
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.24
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.22
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.20
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.18
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.16
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.14
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.3.0.20
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.18
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.16
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.14
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.12
	OPENBSD_2_8:1.3.0.10
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.6
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.03.02.15.41.48;	author naddy;	state dead;
branches;
next	1.6;
commitid	ZfNt0OHZhMg52abA;

1.6
date	2015.01.19.23.30.20;	author guenther;	state Exp;
branches;
next	1.5;
commitid	jUAtDCK37g8NbVh3;

1.5
date	2011.04.05.22.54.31;	author pirofti;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.27.07.30.36;	author ish;	state Exp;
branches;
next	1.3;

1.3
date	99.02.10.08.02.38;	author deraadt;	state Exp;
branches
	1.3.6.1
	1.3.16.1;
next	1.2;

1.2
date	96.04.17.05.24.03;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.19;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.19;	author deraadt;	state Exp;
branches;
next	;

1.3.6.1
date	2003.03.27.23.53.47;	author niklas;	state Exp;
branches;
next	;

1.3.16.1
date	2003.05.19.21.52.09;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@remove the Linux emulation code, no longer referenced by anything
@
text
@/*	$OpenBSD: linux_socketcall.h,v 1.6 2015/01/19 23:30:20 guenther Exp $	*/
/*	$NetBSD: linux_socketcall.h,v 1.1 1995/02/28 23:26:05 fvdl Exp $	*/

/*
 * Copyright (c) 1995 Frank van der Linden
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed for the NetBSD Project
 *      by Frank van der Linden
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _LINUX_SOCKETCALL_H_
#define _LINUX_SOCKETCALL_H_

/*
 * Values passed to the Linux socketcall() syscall, determining the actual
 * action to take.
 */
#define LINUX_SYS_socket	1
#define LINUX_SYS_bind		2
#define LINUX_SYS_connect	3
#define LINUX_SYS_listen	4
#define LINUX_SYS_accept	5
#define LINUX_SYS_getsockname	6
#define LINUX_SYS_getpeername	7
#define LINUX_SYS_socketpair	8
#define LINUX_SYS_send		9
#define LINUX_SYS_recv		10
#define LINUX_SYS_sendto	11
#define LINUX_SYS_recvfrom	12
#define LINUX_SYS_shutdown	13
#define LINUX_SYS_setsockopt	14
#define LINUX_SYS_getsockopt	15
#define LINUX_SYS_sendmsg	16
#define LINUX_SYS_recvmsg	17

/*
 * Structures for the arguments of the different system calls. This looks
 * a little better than copyin() of all values one by one.
 */
struct linux_socket_args {
	int domain;
	int type;
	int protocol;
};

struct linux_bind_args {
	int s;
	struct linux_sockaddr *name;
	int namelen;
};

struct linux_connect_args {
	int s;
	struct linux_sockaddr *name;
	int namelen;
};

struct linux_listen_args {
	int s;
	int backlog;
};

struct linux_accept_args {
	int s;
	struct sockaddr *addr;
	int *namelen;
};

struct linux_getsockname_args {
	int s;
	struct sockaddr *addr;
	int *namelen;
};

struct linux_getpeername_args {
	int s;
	struct sockaddr *addr;
	int *namelen;
};

struct linux_socketpair_args {
	int domain;
	int type;	
	int protocol;
	int *rsv;
};

struct linux_send_args {
	int s;
	void *msg;
	int len;
	int flags;
};

struct linux_recv_args {
	int s;
	void *msg;
	int len;
	int flags;
};

struct linux_sendto_args {
	int s;
	void *msg;
	int len;
	int flags;
	struct linux_sockaddr *to;
	int tolen;
};

struct linux_recvfrom_args {
	int s;
	void *buf;
	int len;
	int flags;
	struct sockaddr *from;	
	int *fromlen;
};

struct linux_shutdown_args {
	int s;
	int how;
};

struct linux_getsockopt_args {
	int s;
	int level;
	int optname;
	void *optval;
	int *optlen;
};

struct linux_setsockopt_args {
	int s;
	int level;
	int optname;
	void *optval;
	int optlen;
};

struct linux_sendmsg_args {
	int s;
	struct msghdr *msg;
	int flags;
};

struct linux_recvmsg_args {
	int s;
	struct msghdr *msg;
	int flags;
};

#endif /* _LINUX_SOCKETCALL_H_ */
@


1.6
log
@Prefer linux_sockaddr over osockaddr, so the latter can go away.
sys_socket() supports SOCK_{CLOEXEC,NONBLOCK} now, so build on that.
doaccept() supports the non-inheriting-of-O_NONBLOCK, so build on that.
Merge compat_sys_{accept,send,recv}() into their only callers.
Lie a little and use struct sockaddr in the linux socket syscall args when
 it's a return argument to avoid a bunch a casts.
Delete many other unnecessary sockaddr casts

verified with a curl Linux binary
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_socketcall.h,v 1.5 2011/04/05 22:54:31 pirofti Exp $	*/
@


1.5
log
@Unify header sentinel names.
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_socketcall.h,v 1.4 2002/11/27 07:30:36 ish Exp $	*/
d72 1
a72 1
	struct osockaddr *name;
d78 1
a78 1
	struct osockaddr *name;
d95 1
a95 1
	struct osockaddr *addr;
d131 1
a131 1
	struct osockaddr *to;
d140 1
a140 1
	struct osockaddr *from;	
@


1.4
log
@do address translation for for socket syscalls that pass addresses in
or out - this allows linux programs that use IPv6 to work (not ipv4
mapped addresses though)
- from NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_socketcall.h,v 1.3 1999/02/10 08:02:38 deraadt Exp $	*/
d35 2
a36 2
#ifndef _LINUX_SOCKETCALL_H
#define _LINUX_SOCKETCALL_H
d177 1
a177 1
#endif /* _LINUX_SOCKETCALL_H */
@


1.3
log
@linux sendmsg/recvmsg
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_socketcall.h,v 1.2 1996/04/17 05:24:03 mickey Exp $	*/
d72 1
a72 1
	struct sockaddr *name;
d78 1
a78 1
	struct sockaddr *name;
d95 1
a95 1
	struct sockaddr *addr;
d131 1
a131 1
	struct sockaddr *to;
d140 1
a140 1
	struct sockaddr *from;	
@


1.3.16.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d72 1
a72 1
	struct osockaddr *name;
d78 1
a78 1
	struct osockaddr *name;
d95 1
a95 1
	struct osockaddr *addr;
d131 1
a131 1
	struct osockaddr *to;
d140 1
a140 1
	struct osockaddr *from;	
@


1.3.6.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d72 1
a72 1
	struct osockaddr *name;
d78 1
a78 1
	struct osockaddr *name;
d95 1
a95 1
	struct osockaddr *addr;
d131 1
a131 1
	struct osockaddr *to;
d140 1
a140 1
	struct osockaddr *from;	
@


1.2
log
@Good fixes and changes from latest Net.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d57 2
d163 12
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
