head	1.82;
access;
symbols
	OPENBSD_5_9:1.81.0.4
	OPENBSD_5_9_BASE:1.81
	OPENBSD_5_8:1.81.0.6
	OPENBSD_5_8_BASE:1.81
	OPENBSD_5_7:1.81.0.2
	OPENBSD_5_7_BASE:1.81
	OPENBSD_5_6:1.80.0.6
	OPENBSD_5_6_BASE:1.80
	OPENBSD_5_5:1.80.0.4
	OPENBSD_5_5_BASE:1.80
	OPENBSD_5_4:1.76.0.6
	OPENBSD_5_4_BASE:1.76
	OPENBSD_5_3:1.76.0.4
	OPENBSD_5_3_BASE:1.76
	OPENBSD_5_2:1.76.0.2
	OPENBSD_5_2_BASE:1.76
	OPENBSD_5_1_BASE:1.71
	OPENBSD_5_1:1.71.0.2
	OPENBSD_5_0:1.66.0.2
	OPENBSD_5_0_BASE:1.66
	OPENBSD_4_9:1.58.0.2
	OPENBSD_4_9_BASE:1.58
	OPENBSD_4_8:1.56.0.2
	OPENBSD_4_8_BASE:1.56
	OPENBSD_4_7:1.54.0.8
	OPENBSD_4_7_BASE:1.54
	OPENBSD_4_6:1.54.0.10
	OPENBSD_4_6_BASE:1.54
	OPENBSD_4_5:1.54.0.6
	OPENBSD_4_5_BASE:1.54
	OPENBSD_4_4:1.54.0.4
	OPENBSD_4_4_BASE:1.54
	OPENBSD_4_3:1.54.0.2
	OPENBSD_4_3_BASE:1.54
	OPENBSD_4_2:1.53.0.2
	OPENBSD_4_2_BASE:1.53
	OPENBSD_4_1:1.52.0.10
	OPENBSD_4_1_BASE:1.52
	OPENBSD_4_0:1.52.0.8
	OPENBSD_4_0_BASE:1.52
	OPENBSD_3_9:1.52.0.6
	OPENBSD_3_9_BASE:1.52
	OPENBSD_3_8:1.52.0.4
	OPENBSD_3_8_BASE:1.52
	OPENBSD_3_7:1.52.0.2
	OPENBSD_3_7_BASE:1.52
	OPENBSD_3_6:1.51.0.2
	OPENBSD_3_6_BASE:1.51
	SMP_SYNC_A:1.50
	SMP_SYNC_B:1.50
	OPENBSD_3_5:1.48.0.4
	OPENBSD_3_5_BASE:1.48
	OPENBSD_3_4:1.48.0.2
	OPENBSD_3_4_BASE:1.48
	UBC_SYNC_A:1.40
	OPENBSD_3_3:1.39.0.2
	OPENBSD_3_3_BASE:1.39
	OPENBSD_3_2:1.37.0.2
	OPENBSD_3_2_BASE:1.37
	OPENBSD_3_1:1.36.0.2
	OPENBSD_3_1_BASE:1.36
	UBC_SYNC_B:1.38
	UBC:1.32.0.4
	UBC_BASE:1.32
	OPENBSD_3_0:1.32.0.2
	OPENBSD_3_0_BASE:1.32
	OPENBSD_2_9_BASE:1.28
	OPENBSD_2_9:1.28.0.2
	OPENBSD_2_8:1.25.0.2
	OPENBSD_2_8_BASE:1.25
	OPENBSD_2_7:1.22.0.2
	OPENBSD_2_7_BASE:1.22
	SMP:1.14.0.2
	SMP_BASE:1.14
	kame_19991208:1.14
	OPENBSD_2_6:1.13.0.8
	OPENBSD_2_6_BASE:1.13
	OPENBSD_2_5:1.13.0.6
	OPENBSD_2_5_BASE:1.13
	OPENBSD_2_4:1.13.0.4
	OPENBSD_2_4_BASE:1.13
	OPENBSD_2_3:1.13.0.2
	OPENBSD_2_3_BASE:1.13
	OPENBSD_2_2:1.11.0.2
	OPENBSD_2_2_BASE:1.11
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.82
date	2016.03.02.15.41.48;	author naddy;	state dead;
branches;
next	1.81;
commitid	ZfNt0OHZhMg52abA;

1.81
date	2014.09.01.05.13.21;	author doug;	state Exp;
branches;
next	1.80;
commitid	SLapLeLVwWfyTUNP;

1.80
date	2013.11.03.13.56.03;	author pirofti;	state Exp;
branches;
next	1.79;

1.79
date	2013.10.25.05.10.33;	author guenther;	state Exp;
branches;
next	1.78;

1.78
date	2013.10.25.04.52.16;	author guenther;	state Exp;
branches;
next	1.77;

1.77
date	2013.08.13.05.54.10;	author guenther;	state Exp;
branches;
next	1.76;

1.76
date	2012.06.19.11.35.56;	author pirofti;	state Exp;
branches;
next	1.75;

1.75
date	2012.06.19.11.32.40;	author pirofti;	state Exp;
branches;
next	1.74;

1.74
date	2012.06.08.14.29.58;	author pirofti;	state Exp;
branches;
next	1.73;

1.73
date	2012.05.23.19.48.26;	author pirofti;	state Exp;
branches;
next	1.72;

1.72
date	2012.05.23.11.12.46;	author pirofti;	state Exp;
branches;
next	1.71;

1.71
date	2011.12.14.08.33.54;	author robert;	state Exp;
branches;
next	1.70;

1.70
date	2011.11.25.10.10.05;	author robert;	state Exp;
branches;
next	1.69;

1.69
date	2011.09.19.22.49.57;	author pirofti;	state Exp;
branches;
next	1.68;

1.68
date	2011.09.19.14.33.40;	author pirofti;	state Exp;
branches;
next	1.67;

1.67
date	2011.09.18.02.26.28;	author pirofti;	state Exp;
branches;
next	1.66;

1.66
date	2011.07.14.23.33.09;	author matthew;	state Exp;
branches;
next	1.65;

1.65
date	2011.07.09.00.11.28;	author deraadt;	state Exp;
branches;
next	1.64;

1.64
date	2011.07.08.19.19.59;	author tedu;	state Exp;
branches;
next	1.63;

1.63
date	2011.07.08.05.03.42;	author matthew;	state Exp;
branches;
next	1.62;

1.62
date	2011.07.07.06.17.06;	author pirofti;	state Exp;
branches;
next	1.61;

1.61
date	2011.07.07.01.21.22;	author tedu;	state Exp;
branches;
next	1.60;

1.60
date	2011.04.05.15.46.10;	author pirofti;	state Exp;
branches;
next	1.59;

1.59
date	2011.04.04.21.53.50;	author pirofti;	state Exp;
branches;
next	1.58;

1.58
date	2011.02.11.21.41.46;	author pirofti;	state Exp;
branches;
next	1.57;

1.57
date	2011.02.10.12.00.01;	author pirofti;	state Exp;
branches;
next	1.56;

1.56
date	2010.06.30.21.54.35;	author guenther;	state Exp;
branches;
next	1.55;

1.55
date	2010.05.23.11.37.30;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	2007.11.27.18.05.59;	author art;	state Exp;
branches;
next	1.53;

1.53
date	2007.05.29.03.28.13;	author tedu;	state Exp;
branches;
next	1.52;

1.52
date	2004.10.27.13.24.19;	author niklas;	state Exp;
branches;
next	1.51;

1.51
date	2004.07.09.23.56.03;	author millert;	state Exp;
branches;
next	1.50;

1.50
date	2004.05.28.18.31.12;	author tedu;	state Exp;
branches;
next	1.49;

1.49
date	2004.04.05.00.01.34;	author tedu;	state Exp;
branches;
next	1.48;

1.48
date	2003.09.04.02.57.44;	author tedu;	state Exp;
branches;
next	1.47;

1.47
date	2003.09.01.14.01.10;	author fgsch;	state Exp;
branches;
next	1.46;

1.46
date	2003.08.15.14.03.23;	author fgsch;	state Exp;
branches;
next	1.45;

1.45
date	2003.08.14.18.50.50;	author fgsch;	state Exp;
branches;
next	1.44;

1.44
date	2003.08.14.18.35.57;	author fgsch;	state Exp;
branches;
next	1.43;

1.43
date	2003.08.02.18.37.11;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2003.07.23.17.42.39;	author tedu;	state Exp;
branches;
next	1.41;

1.41
date	2003.07.03.00.01.20;	author tedu;	state Exp;
branches;
next	1.40;

1.40
date	2003.05.10.17.55.56;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2002.10.30.20.11.27;	author millert;	state Exp;
branches;
next	1.38;

1.38
date	2002.10.28.03.39.30;	author fgsch;	state Exp;
branches;
next	1.37;

1.37
date	2002.06.05.19.43.44;	author jasoni;	state Exp;
branches;
next	1.36;

1.36
date	2002.03.14.01.26.50;	author millert;	state Exp;
branches;
next	1.35;

1.35
date	2002.03.14.00.44.20;	author miod;	state Exp;
branches;
next	1.34;

1.34
date	2002.02.04.20.06.16;	author provos;	state Exp;
branches;
next	1.33;

1.33
date	2002.02.04.20.04.52;	author provos;	state Exp;
branches;
next	1.32;

1.32
date	2001.08.26.04.14.26;	author deraadt;	state Exp;
branches
	1.32.4.1;
next	1.31;

1.31
date	2001.07.04.20.01.40;	author jasoni;	state Exp;
branches;
next	1.30;

1.30
date	2001.07.03.21.56.45;	author jasoni;	state Exp;
branches;
next	1.29;

1.29
date	2001.07.03.15.32.56;	author jasoni;	state Exp;
branches;
next	1.28;

1.28
date	2001.04.02.21.44.46;	author niklas;	state Exp;
branches;
next	1.27;

1.27
date	2001.01.29.07.24.18;	author jasoni;	state Exp;
branches;
next	1.26;

1.26
date	2000.12.22.07.34.50;	author jasoni;	state Exp;
branches;
next	1.25;

1.25
date	2000.07.07.02.14.05;	author jasoni;	state Exp;
branches;
next	1.24;

1.24
date	2000.06.07.14.23.07;	author niklas;	state Exp;
branches;
next	1.23;

1.23
date	2000.06.07.13.37.56;	author niklas;	state Exp;
branches;
next	1.22;

1.22
date	2000.04.12.04.23.05;	author jasoni;	state Exp;
branches;
next	1.21;

1.21
date	2000.04.04.05.32.17;	author jasoni;	state Exp;
branches;
next	1.20;

1.20
date	2000.03.28.06.36.29;	author jasoni;	state Exp;
branches;
next	1.19;

1.19
date	2000.03.27.22.38.44;	author jasoni;	state Exp;
branches;
next	1.18;

1.18
date	2000.03.18.21.39.16;	author ian;	state Exp;
branches;
next	1.17;

1.17
date	2000.03.13.08.18.56;	author jasoni;	state Exp;
branches;
next	1.16;

1.16
date	2000.03.08.03.36.22;	author jasoni;	state Exp;
branches;
next	1.15;

1.15
date	2000.02.28.13.30.52;	author jasoni;	state Exp;
branches;
next	1.14;

1.14
date	99.12.06.19.37.49;	author aaron;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	97.12.10.11.55.32;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	97.11.13.18.37.58;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	97.07.28.10.21.36;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	97.07.28.10.19.39;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	97.07.27.21.02.00;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.04.14.11.16.27;	author graichen;	state Exp;
branches;
next	1.7;

1.7
date	96.08.02.20.35.22;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.05.22.12.01.49;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.04.28.07.53.16;	author etheisen;	state Exp;
branches;
next	1.4;

1.4
date	96.04.17.05.24.06;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	95.12.19.15.41.05;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.04.47.22;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.19;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.19;	author deraadt;	state Exp;
branches;
next	;

1.14.2.1
date	2000.03.02.07.04.34;	author niklas;	state Exp;
branches;
next	1.14.2.2;

1.14.2.2
date	2000.03.24.09.09.03;	author niklas;	state Exp;
branches;
next	1.14.2.3;

1.14.2.3
date	2001.05.14.22.04.51;	author niklas;	state Exp;
branches;
next	1.14.2.4;

1.14.2.4
date	2001.10.31.03.11.46;	author nate;	state Exp;
branches;
next	1.14.2.5;

1.14.2.5
date	2002.03.06.02.07.08;	author niklas;	state Exp;
branches;
next	1.14.2.6;

1.14.2.6
date	2002.03.28.11.28.06;	author niklas;	state Exp;
branches;
next	1.14.2.7;

1.14.2.7
date	2003.03.27.23.53.47;	author niklas;	state Exp;
branches;
next	1.14.2.8;

1.14.2.8
date	2003.05.13.19.21.26;	author ho;	state Exp;
branches;
next	1.14.2.9;

1.14.2.9
date	2004.02.19.10.51.29;	author niklas;	state Exp;
branches;
next	1.14.2.10;

1.14.2.10
date	2004.06.05.23.12.34;	author niklas;	state Exp;
branches;
next	;

1.32.4.1
date	2002.06.11.03.28.08;	author art;	state Exp;
branches;
next	1.32.4.2;

1.32.4.2
date	2002.10.29.00.30.51;	author art;	state Exp;
branches;
next	1.32.4.3;

1.32.4.3
date	2003.05.19.21.52.09;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.82
log
@remove the Linux emulation code, no longer referenced by anything
@
text
@/*	$OpenBSD: linux_syscallargs.h,v 1.81 2014/09/01 05:13:21 doug Exp $	*/

/*
 * System call argument lists.
 *
 * DO NOT EDIT-- this file is automatically generated.
 * created from	OpenBSD: syscalls.master,v 1.76 2014/09/01 05:09:53 doug Exp 
 */

#ifdef	syscallarg
#undef	syscallarg
#endif

#define	syscallarg(x)							\
	union {								\
		register_t pad;						\
		struct { x datum; } le;					\
		struct {						\
			int8_t pad[ (sizeof (register_t) < sizeof (x))	\
				? 0					\
				: sizeof (register_t) - sizeof (x)];	\
			x datum;					\
		} be;							\
	}

struct linux_sys_open_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
	syscallarg(int) mode;
};

struct linux_sys_waitpid_args {
	syscallarg(int) pid;
	syscallarg(int *) status;
	syscallarg(int) options;
};

struct linux_sys_creat_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct linux_sys_unlink_args {
	syscallarg(char *) path;
};

struct linux_sys_execve_args {
	syscallarg(char *) path;
	syscallarg(char **) argp;
	syscallarg(char **) envp;
};

struct linux_sys_chdir_args {
	syscallarg(char *) path;
};

struct linux_sys_time_args {
	syscallarg(linux_time_t *) t;
};

struct linux_sys_mknod_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
	syscallarg(int) dev;
};

struct linux_sys_chmod_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct linux_sys_lchown16_args {
	syscallarg(char *) path;
	syscallarg(int) uid;
	syscallarg(int) gid;
};

struct linux_sys_break_args {
	syscallarg(char *) nsize;
};

struct linux_sys_lseek_args {
	syscallarg(int) fd;
	syscallarg(long) offset;
	syscallarg(int) whence;
};

struct linux_sys_mount_args {
	syscallarg(char *) specialfile;
	syscallarg(char *) dir;
	syscallarg(char *) filesystemtype;
	syscallarg(long) rwflag;
	syscallarg(void *) data;
};

struct linux_sys_umount_args {
	syscallarg(char *) specialfile;
};

struct linux_sys_alarm_args {
	syscallarg(unsigned int) secs;
};

struct linux_sys_utime_args {
	syscallarg(char *) path;
	syscallarg(struct linux_utimbuf *) times;
};

struct linux_sys_access_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
};

struct linux_sys_nice_args {
	syscallarg(int) incr;
};

struct linux_sys_kill_args {
	syscallarg(int) pid;
	syscallarg(int) signum;
};

struct linux_sys_rename_args {
	syscallarg(char *) from;
	syscallarg(char *) to;
};

struct linux_sys_mkdir_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct linux_sys_rmdir_args {
	syscallarg(char *) path;
};

struct linux_sys_times_args {
	syscallarg(struct linux_tms *) tms;
};

struct linux_sys_brk_args {
	syscallarg(char *) nsize;
};

struct linux_sys_signal_args {
	syscallarg(int) sig;
	syscallarg(linux_handler_t) handler;
};

struct linux_sys_ioctl_args {
	syscallarg(int) fd;
	syscallarg(u_long) com;
	syscallarg(caddr_t) data;
};

struct linux_sys_fcntl_args {
	syscallarg(int) fd;
	syscallarg(int) cmd;
	syscallarg(void *) arg;
};

struct linux_sys_oldolduname_args {
	syscallarg(struct linux_oldold_utsname *) up;
};

struct linux_sys_sigaction_args {
	syscallarg(int) signum;
	syscallarg(struct linux_old_sigaction *) nsa;
	syscallarg(struct linux_old_sigaction *) osa;
};

struct linux_sys_sigsetmask_args {
	syscallarg(linux_old_sigset_t) mask;
};

struct linux_sys_setreuid16_args {
	syscallarg(int) ruid;
	syscallarg(int) euid;
};

struct linux_sys_setregid16_args {
	syscallarg(int) rgid;
	syscallarg(int) egid;
};

struct linux_sys_sigsuspend_args {
	syscallarg(caddr_t) restart;
	syscallarg(int) oldmask;
	syscallarg(int) mask;
};

struct linux_sys_sigpending_args {
	syscallarg(linux_old_sigset_t *) mask;
};

struct linux_sys_sethostname_args {
	syscallarg(char *) hostname;
	syscallarg(u_int) len;
};

struct linux_sys_setrlimit_args {
	syscallarg(u_int) which;
	syscallarg(struct linux_rlimit *) rlp;
};

struct linux_sys_getrlimit_args {
	syscallarg(u_int) which;
	syscallarg(struct linux_rlimit *) rlp;
};

struct linux_sys_getrusage_args {
	syscallarg(int) who;
	syscallarg(struct linux_rusage *) rusage;
};

struct linux_sys_gettimeofday_args {
	syscallarg(struct linux_timeval *) tp;
	syscallarg(struct timezone *) tzp;
};

struct linux_sys_oldselect_args {
	syscallarg(struct linux_select *) lsp;
};

struct linux_sys_symlink_args {
	syscallarg(char *) path;
	syscallarg(char *) to;
};

struct linux_sys_readlink_args {
	syscallarg(char *) name;
	syscallarg(char *) buf;
	syscallarg(int) count;
};

struct linux_sys_swapon_args {
	syscallarg(char *) name;
};

struct linux_sys_readdir_args {
	syscallarg(int) fd;
	syscallarg(caddr_t) dent;
	syscallarg(unsigned int) count;
};

struct linux_sys_mmap_args {
	syscallarg(struct linux_mmap *) lmp;
};

struct linux_sys_truncate_args {
	syscallarg(char *) path;
	syscallarg(long) length;
};

struct linux_sys_ftruncate_args {
	syscallarg(int) fd;
	syscallarg(long) length;
};

struct linux_sys_fchown16_args {
	syscallarg(int) fd;
	syscallarg(int) uid;
	syscallarg(int) gid;
};

struct linux_sys_statfs_args {
	syscallarg(char *) path;
	syscallarg(struct linux_statfs *) sp;
};

struct linux_sys_fstatfs_args {
	syscallarg(int) fd;
	syscallarg(struct linux_statfs *) sp;
};

struct linux_sys_ioperm_args {
	syscallarg(unsigned int) lo;
	syscallarg(unsigned int) hi;
	syscallarg(int) val;
};

struct linux_sys_socketcall_args {
	syscallarg(int) what;
	syscallarg(void *) args;
};

struct linux_sys_setitimer_args {
	syscallarg(u_int) which;
	syscallarg(struct linux_itimerval *) itv;
	syscallarg(struct linux_itimerval *) oitv;
};

struct linux_sys_getitimer_args {
	syscallarg(u_int) which;
	syscallarg(struct linux_itimerval *) itv;
};

struct linux_sys_stat_args {
	syscallarg(char *) path;
	syscallarg(struct linux_stat *) sp;
};

struct linux_sys_lstat_args {
	syscallarg(char *) path;
	syscallarg(struct linux_stat *) sp;
};

struct linux_sys_fstat_args {
	syscallarg(int) fd;
	syscallarg(struct linux_stat *) sp;
};

struct linux_sys_olduname_args {
	syscallarg(struct linux_old_utsname *) up;
};

struct linux_sys_iopl_args {
	syscallarg(int) level;
};

struct linux_sys_wait4_args {
	syscallarg(int) pid;
	syscallarg(int *) status;
	syscallarg(int) options;
	syscallarg(struct linux_rusage *) rusage;
};

struct linux_sys_sysinfo_args {
	syscallarg(struct linux_sysinfo *) sysinfo;
};

struct linux_sys_ipc_args {
	syscallarg(int) what;
	syscallarg(int) a1;
	syscallarg(int) a2;
	syscallarg(int) a3;
	syscallarg(caddr_t) ptr;
};

struct linux_sys_sigreturn_args {
	syscallarg(struct linux_sigcontext *) scp;
};

struct linux_sys_clone_args {
	syscallarg(int) flags;
	syscallarg(void *) stack;
	syscallarg(void *) parent_tidptr;
	syscallarg(void *) tls;
	syscallarg(void *) child_tidptr;
};

struct linux_sys_setdomainname_args {
	syscallarg(char *) name;
	syscallarg(int) len;
};

struct linux_sys_uname_args {
	syscallarg(struct linux_utsname *) up;
};

struct linux_sys_modify_ldt_args {
	syscallarg(int) func;
	syscallarg(void *) ptr;
	syscallarg(size_t) bytecount;
};

struct linux_sys_mprotect_args {
	syscallarg(caddr_t) addr;
	syscallarg(int) len;
	syscallarg(int) prot;
};

struct linux_sys_sigprocmask_args {
	syscallarg(int) how;
	syscallarg(linux_old_sigset_t *) set;
	syscallarg(linux_old_sigset_t *) oset;
};

struct linux_sys_getpgid_args {
	syscallarg(int) pid;
};

struct linux_sys_personality_args {
	syscallarg(int) per;
};

struct linux_sys_llseek_args {
	syscallarg(int) fd;
	syscallarg(u_int32_t) ohigh;
	syscallarg(u_int32_t) olow;
	syscallarg(caddr_t) res;
	syscallarg(int) whence;
};

struct linux_sys_getdents_args {
	syscallarg(int) fd;
	syscallarg(void *) dirent;
	syscallarg(unsigned) count;
};

struct linux_sys_select_args {
	syscallarg(int) nfds;
	syscallarg(fd_set *) readfds;
	syscallarg(fd_set *) writefds;
	syscallarg(fd_set *) exceptfds;
	syscallarg(struct linux_timeval *) timeout;
};

struct linux_sys_fdatasync_args {
	syscallarg(int) fd;
};

struct linux_sys___sysctl_args {
	syscallarg(struct linux___sysctl *) lsp;
};

struct linux_sys_sched_setparam_args {
	syscallarg(linux_pid_t) pid;
	syscallarg(const struct linux_sched_param *) sp;
};

struct linux_sys_sched_getparam_args {
	syscallarg(linux_pid_t) pid;
	syscallarg(struct linux_sched_param *) sp;
};

struct linux_sys_sched_setscheduler_args {
	syscallarg(linux_pid_t) pid;
	syscallarg(int) policy;
	syscallarg(const struct linux_sched_param *) sp;
};

struct linux_sys_sched_getscheduler_args {
	syscallarg(linux_pid_t) pid;
};

struct linux_sys_sched_get_priority_max_args {
	syscallarg(int) policy;
};

struct linux_sys_sched_get_priority_min_args {
	syscallarg(int) policy;
};

struct linux_sys_nanosleep_args {
	syscallarg(const struct linux_timespec *) rqtp;
	syscallarg(struct linux_timespec *) rmtp;
};

struct linux_sys_mremap_args {
	syscallarg(void *) old_address;
	syscallarg(size_t) old_size;
	syscallarg(size_t) new_size;
	syscallarg(long) flags;
};

struct linux_sys_setresuid16_args {
	syscallarg(u_int16_t) ruid;
	syscallarg(u_int16_t) euid;
	syscallarg(u_int16_t) suid;
};

struct linux_sys_getresuid16_args {
	syscallarg(u_int16_t *) ruid;
	syscallarg(u_int16_t *) euid;
	syscallarg(u_int16_t *) suid;
};

struct linux_sys_setresgid16_args {
	syscallarg(u_int16_t) rgid;
	syscallarg(u_int16_t) egid;
	syscallarg(u_int16_t) sgid;
};

struct linux_sys_getresgid16_args {
	syscallarg(u_int16_t *) rgid;
	syscallarg(u_int16_t *) egid;
	syscallarg(u_int16_t *) sgid;
};

struct linux_sys_prctl_args {
	syscallarg(int) option;
	syscallarg(unsigned long) arg2;
	syscallarg(unsigned long) arg3;
	syscallarg(unsigned long) arg4;
	syscallarg(unsigned long) arg5;
};

struct linux_sys_rt_sigreturn_args {
	syscallarg(struct linux_rt_sigframe *) sfp;
};

struct linux_sys_rt_sigaction_args {
	syscallarg(int) signum;
	syscallarg(struct linux_sigaction *) nsa;
	syscallarg(struct linux_sigaction *) osa;
	syscallarg(size_t) sigsetsize;
};

struct linux_sys_rt_sigprocmask_args {
	syscallarg(int) how;
	syscallarg(const linux_sigset_t *) set;
	syscallarg(linux_sigset_t *) oset;
	syscallarg(size_t) sigsetsize;
};

struct linux_sys_rt_sigpending_args {
	syscallarg(linux_sigset_t *) set;
	syscallarg(size_t) sigsetsize;
};

struct linux_sys_rt_sigsuspend_args {
	syscallarg(linux_sigset_t *) unewset;
	syscallarg(size_t) sigsetsize;
};

struct linux_sys_pread_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(size_t) nbyte;
	syscallarg(linux_off_t) offset;
};

struct linux_sys_pwrite_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(size_t) nbyte;
	syscallarg(linux_off_t) offset;
};

struct linux_sys_chown16_args {
	syscallarg(char *) path;
	syscallarg(int) uid;
	syscallarg(int) gid;
};

struct linux_sys_sigaltstack_args {
	syscallarg(const struct linux_sigaltstack *) nss;
	syscallarg(struct linux_sigaltstack *) oss;
};

struct linux_sys_ugetrlimit_args {
	syscallarg(u_int) which;
	syscallarg(struct linux_rlimit *) rlp;
};

struct linux_sys_mmap2_args {
	syscallarg(unsigned long) addr;
	syscallarg(size_t) len;
	syscallarg(int) prot;
	syscallarg(int) flags;
	syscallarg(int) fd;
	syscallarg(linux_off_t) offset;
};

struct linux_sys_truncate64_args {
	syscallarg(char *) path;
	syscallarg(off_t) length;
};

struct linux_sys_ftruncate64_args {
	syscallarg(int) fd;
	syscallarg(off_t) length;
};

struct linux_sys_stat64_args {
	syscallarg(char *) path;
	syscallarg(struct linux_stat64 *) sp;
};

struct linux_sys_lstat64_args {
	syscallarg(char *) path;
	syscallarg(struct linux_stat64 *) sp;
};

struct linux_sys_fstat64_args {
	syscallarg(int) fd;
	syscallarg(struct linux_stat64 *) sp;
};

struct linux_sys_chown_args {
	syscallarg(char *) path;
	syscallarg(uid_t) uid;
	syscallarg(gid_t) gid;
};

struct linux_sys_setfsuid_args {
	syscallarg(uid_t) uid;
};

struct linux_sys_getdents64_args {
	syscallarg(int) fd;
	syscallarg(void *) dirent;
	syscallarg(unsigned) count;
};

struct linux_sys_fcntl64_args {
	syscallarg(u_int) fd;
	syscallarg(u_int) cmd;
	syscallarg(void *) arg;
};

struct linux_sys_futex_args {
	syscallarg(int *) uaddr;
	syscallarg(int) op;
	syscallarg(int) val;
	syscallarg(const struct linux_timespec *) timeout;
	syscallarg(int *) uaddr2;
	syscallarg(int) val3;
};

struct linux_sys_set_thread_area_args {
	syscallarg(struct l_segment_descriptor *) desc;
};

struct linux_sys_get_thread_area_args {
	syscallarg(struct l_segment_descriptor *) desc;
};

struct linux_sys_set_tid_address_args {
	syscallarg(void *) tidptr;
};

struct linux_sys_clock_gettime_args {
	syscallarg(clockid_t) which;
	syscallarg(struct linux_timespec *) tp;
};

struct linux_sys_clock_getres_args {
	syscallarg(clockid_t) which;
	syscallarg(struct linux_timespec *) tp;
};

struct linux_sys_statfs64_args {
	syscallarg(char *) path;
	syscallarg(struct linux_statfs64 *) sp;
};

struct linux_sys_fstatfs64_args {
	syscallarg(int) fd;
	syscallarg(struct linux_statfs64 *) sp;
};

struct linux_sys_tgkill_args {
	syscallarg(int) tgid;
	syscallarg(int) tid;
	syscallarg(int) sig;
};

struct linux_sys_set_robust_list_args {
	syscallarg(struct linux_robust_list_head *) head;
	syscallarg(size_t) len;
};

struct linux_sys_get_robust_list_args {
	syscallarg(int) pid;
	syscallarg(struct linux_robust_list_head **) head;
	syscallarg(size_t *) len;
};

struct linux_sys_pipe2_args {
	syscallarg(int *) fdp;
	syscallarg(int) flags;
};

/*
 * System call prototypes.
 */

int	sys_nosys(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	linux_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	linux_sys_waitpid(struct proc *, void *, register_t *);
int	linux_sys_creat(struct proc *, void *, register_t *);
int	sys_link(struct proc *, void *, register_t *);
int	linux_sys_unlink(struct proc *, void *, register_t *);
int	linux_sys_execve(struct proc *, void *, register_t *);
int	linux_sys_chdir(struct proc *, void *, register_t *);
int	linux_sys_time(struct proc *, void *, register_t *);
int	linux_sys_mknod(struct proc *, void *, register_t *);
int	linux_sys_chmod(struct proc *, void *, register_t *);
int	linux_sys_lchown16(struct proc *, void *, register_t *);
int	linux_sys_break(struct proc *, void *, register_t *);
int	linux_sys_ostat(struct proc *, void *, register_t *);
int	linux_sys_lseek(struct proc *, void *, register_t *);
int	linux_sys_getpid(struct proc *, void *, register_t *);
int	linux_sys_mount(struct proc *, void *, register_t *);
int	linux_sys_umount(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	linux_sys_getuid(struct proc *, void *, register_t *);
#ifdef PTRACE
int	linux_sys_ptrace(struct proc *, void *, register_t *);
#else
#endif
int	linux_sys_alarm(struct proc *, void *, register_t *);
int	linux_sys_ofstat(struct proc *, void *, register_t *);
int	linux_sys_pause(struct proc *, void *, register_t *);
int	linux_sys_utime(struct proc *, void *, register_t *);
int	linux_sys_stty(struct proc *, void *, register_t *);
int	linux_sys_gtty(struct proc *, void *, register_t *);
int	linux_sys_access(struct proc *, void *, register_t *);
int	linux_sys_nice(struct proc *, void *, register_t *);
int	linux_sys_ftime(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	linux_sys_kill(struct proc *, void *, register_t *);
int	linux_sys_rename(struct proc *, void *, register_t *);
int	linux_sys_mkdir(struct proc *, void *, register_t *);
int	linux_sys_rmdir(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	sys_pipe(struct proc *, void *, register_t *);
int	linux_sys_times(struct proc *, void *, register_t *);
int	linux_sys_prof(struct proc *, void *, register_t *);
int	linux_sys_brk(struct proc *, void *, register_t *);
int	sys_setgid(struct proc *, void *, register_t *);
int	linux_sys_getgid(struct proc *, void *, register_t *);
int	linux_sys_signal(struct proc *, void *, register_t *);
int	sys_geteuid(struct proc *, void *, register_t *);
int	sys_getegid(struct proc *, void *, register_t *);
#ifdef ACCOUNTING
int	sys_acct(struct proc *, void *, register_t *);
#else
#endif
int	linux_sys_phys(struct proc *, void *, register_t *);
int	linux_sys_lock(struct proc *, void *, register_t *);
int	linux_sys_ioctl(struct proc *, void *, register_t *);
int	linux_sys_fcntl(struct proc *, void *, register_t *);
int	linux_sys_mpx(struct proc *, void *, register_t *);
int	sys_setpgid(struct proc *, void *, register_t *);
int	linux_sys_ulimit(struct proc *, void *, register_t *);
int	linux_sys_oldolduname(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	sys_chroot(struct proc *, void *, register_t *);
int	linux_sys_ustat(struct proc *, void *, register_t *);
int	sys_dup2(struct proc *, void *, register_t *);
int	sys_getppid(struct proc *, void *, register_t *);
int	sys_getpgrp(struct proc *, void *, register_t *);
int	sys_setsid(struct proc *, void *, register_t *);
int	linux_sys_sigaction(struct proc *, void *, register_t *);
int	linux_sys_siggetmask(struct proc *, void *, register_t *);
int	linux_sys_sigsetmask(struct proc *, void *, register_t *);
int	linux_sys_setreuid16(struct proc *, void *, register_t *);
int	linux_sys_setregid16(struct proc *, void *, register_t *);
int	linux_sys_sigsuspend(struct proc *, void *, register_t *);
int	linux_sys_sigpending(struct proc *, void *, register_t *);
int	linux_sys_sethostname(struct proc *, void *, register_t *);
int	linux_sys_setrlimit(struct proc *, void *, register_t *);
int	linux_sys_getrlimit(struct proc *, void *, register_t *);
int	linux_sys_getrusage(struct proc *, void *, register_t *);
int	linux_sys_gettimeofday(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	linux_sys_oldselect(struct proc *, void *, register_t *);
int	linux_sys_symlink(struct proc *, void *, register_t *);
int	linux_sys_lstat(struct proc *, void *, register_t *);
int	linux_sys_readlink(struct proc *, void *, register_t *);
int	linux_sys_swapon(struct proc *, void *, register_t *);
int	sys_reboot(struct proc *, void *, register_t *);
int	linux_sys_readdir(struct proc *, void *, register_t *);
int	linux_sys_mmap(struct proc *, void *, register_t *);
int	sys_munmap(struct proc *, void *, register_t *);
int	linux_sys_truncate(struct proc *, void *, register_t *);
int	linux_sys_ftruncate(struct proc *, void *, register_t *);
int	sys_fchmod(struct proc *, void *, register_t *);
int	linux_sys_fchown16(struct proc *, void *, register_t *);
int	sys_getpriority(struct proc *, void *, register_t *);
int	sys_setpriority(struct proc *, void *, register_t *);
int	sys_profil(struct proc *, void *, register_t *);
int	linux_sys_statfs(struct proc *, void *, register_t *);
int	linux_sys_fstatfs(struct proc *, void *, register_t *);
#ifdef __i386__
int	linux_sys_ioperm(struct proc *, void *, register_t *);
#else
int	linux_sys_ioperm(struct proc *, void *, register_t *);
#endif
int	linux_sys_socketcall(struct proc *, void *, register_t *);
int	linux_sys_klog(struct proc *, void *, register_t *);
int	linux_sys_setitimer(struct proc *, void *, register_t *);
int	linux_sys_getitimer(struct proc *, void *, register_t *);
int	linux_sys_stat(struct proc *, void *, register_t *);
int	linux_sys_lstat(struct proc *, void *, register_t *);
int	linux_sys_fstat(struct proc *, void *, register_t *);
int	linux_sys_olduname(struct proc *, void *, register_t *);
#ifdef __i386__
int	linux_sys_iopl(struct proc *, void *, register_t *);
#else
int	linux_sys_iopl(struct proc *, void *, register_t *);
#endif
int	linux_sys_vhangup(struct proc *, void *, register_t *);
int	linux_sys_idle(struct proc *, void *, register_t *);
int	linux_sys_vm86old(struct proc *, void *, register_t *);
int	linux_sys_wait4(struct proc *, void *, register_t *);
int	linux_sys_swapoff(struct proc *, void *, register_t *);
int	linux_sys_sysinfo(struct proc *, void *, register_t *);
int	linux_sys_ipc(struct proc *, void *, register_t *);
int	sys_fsync(struct proc *, void *, register_t *);
int	linux_sys_sigreturn(struct proc *, void *, register_t *);
int	linux_sys_clone(struct proc *, void *, register_t *);
int	linux_sys_setdomainname(struct proc *, void *, register_t *);
int	linux_sys_uname(struct proc *, void *, register_t *);
#ifdef __i386__
int	linux_sys_modify_ldt(struct proc *, void *, register_t *);
#else
int	linux_sys_modify_ldt(struct proc *, void *, register_t *);
#endif
int	linux_sys_adjtimex(struct proc *, void *, register_t *);
int	linux_sys_mprotect(struct proc *, void *, register_t *);
int	linux_sys_sigprocmask(struct proc *, void *, register_t *);
int	linux_sys_create_module(struct proc *, void *, register_t *);
int	linux_sys_init_module(struct proc *, void *, register_t *);
int	linux_sys_delete_module(struct proc *, void *, register_t *);
int	linux_sys_get_kernel_syms(struct proc *, void *, register_t *);
int	linux_sys_quotactl(struct proc *, void *, register_t *);
int	linux_sys_getpgid(struct proc *, void *, register_t *);
int	sys_fchdir(struct proc *, void *, register_t *);
int	linux_sys_bdflush(struct proc *, void *, register_t *);
int	linux_sys_sysfs(struct proc *, void *, register_t *);
int	linux_sys_personality(struct proc *, void *, register_t *);
int	linux_sys_afs_syscall(struct proc *, void *, register_t *);
int	linux_sys_setfsuid(struct proc *, void *, register_t *);
int	linux_sys_getfsuid(struct proc *, void *, register_t *);
int	linux_sys_llseek(struct proc *, void *, register_t *);
int	linux_sys_getdents(struct proc *, void *, register_t *);
int	linux_sys_select(struct proc *, void *, register_t *);
int	sys_flock(struct proc *, void *, register_t *);
int	sys_msync(struct proc *, void *, register_t *);
int	sys_readv(struct proc *, void *, register_t *);
int	sys_writev(struct proc *, void *, register_t *);
int	sys_getsid(struct proc *, void *, register_t *);
int	linux_sys_fdatasync(struct proc *, void *, register_t *);
int	linux_sys___sysctl(struct proc *, void *, register_t *);
int	sys_mlock(struct proc *, void *, register_t *);
int	sys_munlock(struct proc *, void *, register_t *);
int	linux_sys_mlockall(struct proc *, void *, register_t *);
int	linux_sys_munlockall(struct proc *, void *, register_t *);
int	linux_sys_sched_setparam(struct proc *, void *, register_t *);
int	linux_sys_sched_getparam(struct proc *, void *, register_t *);
int	linux_sys_sched_setscheduler(struct proc *, void *, register_t *);
int	linux_sys_sched_getscheduler(struct proc *, void *, register_t *);
int	linux_sys_sched_yield(struct proc *, void *, register_t *);
int	linux_sys_sched_get_priority_max(struct proc *, void *, register_t *);
int	linux_sys_sched_get_priority_min(struct proc *, void *, register_t *);
int	linux_sys_sched_rr_get_interval(struct proc *, void *, register_t *);
int	linux_sys_nanosleep(struct proc *, void *, register_t *);
int	linux_sys_mremap(struct proc *, void *, register_t *);
int	linux_sys_setresuid16(struct proc *, void *, register_t *);
int	linux_sys_getresuid16(struct proc *, void *, register_t *);
int	linux_sys_vm86(struct proc *, void *, register_t *);
int	linux_sys_query_module(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
int	linux_sys_nfsservctl(struct proc *, void *, register_t *);
int	linux_sys_setresgid16(struct proc *, void *, register_t *);
int	linux_sys_getresgid16(struct proc *, void *, register_t *);
int	linux_sys_prctl(struct proc *, void *, register_t *);
int	linux_sys_rt_sigreturn(struct proc *, void *, register_t *);
int	linux_sys_rt_sigaction(struct proc *, void *, register_t *);
int	linux_sys_rt_sigprocmask(struct proc *, void *, register_t *);
int	linux_sys_rt_sigpending(struct proc *, void *, register_t *);
int	linux_sys_rt_sigtimedwait(struct proc *, void *, register_t *);
int	linux_sys_rt_queueinfo(struct proc *, void *, register_t *);
int	linux_sys_rt_sigsuspend(struct proc *, void *, register_t *);
int	linux_sys_pread(struct proc *, void *, register_t *);
int	linux_sys_pwrite(struct proc *, void *, register_t *);
int	linux_sys_chown16(struct proc *, void *, register_t *);
int	sys___getcwd(struct proc *, void *, register_t *);
int	linux_sys_capget(struct proc *, void *, register_t *);
int	linux_sys_capset(struct proc *, void *, register_t *);
int	linux_sys_sigaltstack(struct proc *, void *, register_t *);
int	linux_sys_sendfile(struct proc *, void *, register_t *);
int	linux_sys_getpmsg(struct proc *, void *, register_t *);
int	linux_sys_putpmsg(struct proc *, void *, register_t *);
int	sys_vfork(struct proc *, void *, register_t *);
int	linux_sys_ugetrlimit(struct proc *, void *, register_t *);
int	linux_sys_mmap2(struct proc *, void *, register_t *);
int	linux_sys_truncate64(struct proc *, void *, register_t *);
int	linux_sys_ftruncate64(struct proc *, void *, register_t *);
int	linux_sys_stat64(struct proc *, void *, register_t *);
int	linux_sys_lstat64(struct proc *, void *, register_t *);
int	linux_sys_fstat64(struct proc *, void *, register_t *);
int	linux_sys_lchown(struct proc *, void *, register_t *);
int	linux_sys_getuid(struct proc *, void *, register_t *);
int	linux_sys_getgid(struct proc *, void *, register_t *);
int	sys_geteuid(struct proc *, void *, register_t *);
int	sys_getegid(struct proc *, void *, register_t *);
int	sys_setreuid(struct proc *, void *, register_t *);
int	sys_setregid(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	linux_sys_fchown(struct proc *, void *, register_t *);
int	sys_setresuid(struct proc *, void *, register_t *);
int	sys_getresuid(struct proc *, void *, register_t *);
int	sys_setresgid(struct proc *, void *, register_t *);
int	sys_getresgid(struct proc *, void *, register_t *);
int	linux_sys_chown(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	sys_setgid(struct proc *, void *, register_t *);
int	linux_sys_setfsuid(struct proc *, void *, register_t *);
int	linux_sys_setfsgid(struct proc *, void *, register_t *);
int	linux_sys_pivot_root(struct proc *, void *, register_t *);
int	linux_sys_mincore(struct proc *, void *, register_t *);
int	sys_madvise(struct proc *, void *, register_t *);
int	linux_sys_getdents64(struct proc *, void *, register_t *);
int	linux_sys_fcntl64(struct proc *, void *, register_t *);
int	linux_sys_gettid(struct proc *, void *, register_t *);
int	linux_sys_setxattr(struct proc *, void *, register_t *);
int	linux_sys_lsetxattr(struct proc *, void *, register_t *);
int	linux_sys_fsetxattr(struct proc *, void *, register_t *);
int	linux_sys_getxattr(struct proc *, void *, register_t *);
int	linux_sys_lgetxattr(struct proc *, void *, register_t *);
int	linux_sys_fgetxattr(struct proc *, void *, register_t *);
int	linux_sys_listxattr(struct proc *, void *, register_t *);
int	linux_sys_llistxattr(struct proc *, void *, register_t *);
int	linux_sys_flistxattr(struct proc *, void *, register_t *);
int	linux_sys_removexattr(struct proc *, void *, register_t *);
int	linux_sys_lremovexattr(struct proc *, void *, register_t *);
int	linux_sys_fremovexattr(struct proc *, void *, register_t *);
int	linux_sys_futex(struct proc *, void *, register_t *);
int	linux_sys_set_thread_area(struct proc *, void *, register_t *);
int	linux_sys_get_thread_area(struct proc *, void *, register_t *);
int	linux_sys_fadvise64(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
int	linux_sys_epoll_create(struct proc *, void *, register_t *);
int	linux_sys_epoll_ctl(struct proc *, void *, register_t *);
int	linux_sys_epoll_wait(struct proc *, void *, register_t *);
int	linux_sys_set_tid_address(struct proc *, void *, register_t *);
int	linux_sys_clock_gettime(struct proc *, void *, register_t *);
int	linux_sys_clock_getres(struct proc *, void *, register_t *);
int	linux_sys_statfs64(struct proc *, void *, register_t *);
int	linux_sys_fstatfs64(struct proc *, void *, register_t *);
int	linux_sys_tgkill(struct proc *, void *, register_t *);
int	linux_sys_set_robust_list(struct proc *, void *, register_t *);
int	linux_sys_get_robust_list(struct proc *, void *, register_t *);
int	linux_sys_epoll_pwait(struct proc *, void *, register_t *);
int	linux_sys_eventfd(struct proc *, void *, register_t *);
int	linux_sys_eventfd2(struct proc *, void *, register_t *);
int	linux_sys_epoll_create1(struct proc *, void *, register_t *);
int	linux_sys_pipe2(struct proc *, void *, register_t *);
@


1.81
log
@sync generated files
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.80
log
@Regenerate.

a.out removal led to linux_sys_uselib being obsoleted.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.74 2013/10/25 05:10:03 guenther Exp 
@


1.79
log
@Regen
@
text
@a235 4
struct linux_sys_uselib_args {
	syscallarg(char *) path;
};

a759 1
int	linux_sys_uselib(struct proc *, void *, register_t *);
@


1.78
log
@regen
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.73 2013/10/25 04:51:39 guenther Exp 
a99 4
struct linux_sys_stime_args {
	syscallarg(linux_time_t *) t;
};

a698 1
int	linux_sys_stime(struct proc *, void *, register_t *);
a757 1
int	sys_settimeofday(struct proc *, void *, register_t *);
@


1.77
log
@regen
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.72 2013/08/13 05:52:22 guenther Exp 
d142 1
a142 1
	syscallarg(struct times *) tms;
d215 10
d295 11
d333 1
a333 1
	syscallarg(struct rusage *) rusage;
d337 1
a337 1
	syscallarg(struct linux_sys_sysinfo_args *) sysinfo;
d414 1
a414 1
	syscallarg(struct timeval *) timeout;
d453 5
d634 1
a634 1
	syscallarg(struct l_timespec *) tp;
d639 1
a639 1
	syscallarg(struct l_timespec *) tp;
d761 2
a762 2
int	sys_getrusage(struct proc *, void *, register_t *);
int	t32_sys_gettimeofday(struct proc *, void *, register_t *);
d792 2
a793 2
int	sys_setitimer(struct proc *, void *, register_t *);
int	sys_getitimer(struct proc *, void *, register_t *);
d858 1
a858 1
int	t32_sys_nanosleep(struct proc *, void *, register_t *);
@


1.76
log
@Regenerate.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.70 2012/06/19 11:31:39 pirofti Exp 
d736 1
a736 1
int	sys_gettimeofday(struct proc *, void *, register_t *);
d832 1
a832 1
int	sys_nanosleep(struct proc *, void *, register_t *);
@


1.75
log
@Regenerate.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.69 2012/06/08 14:28:23 pirofti Exp 
d626 6
d918 1
@


1.74
log
@Regenerate
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.68 2012/05/23 19:47:02 pirofti Exp 
d904 3
d914 4
@


1.73
log
@Regenerate.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.67 2012/05/23 11:08:57 pirofti Exp 
d886 1
@


1.72
log
@Regenerate.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.66 2011/12/14 08:33:18 robert Exp 
d621 5
d907 1
@


1.71
log
@regen
@
text
@d616 5
d901 1
@


1.70
log
@implement chown(2) in compat_linux which is needed by some antivirus software

ok pirofti@@
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.64 2011/09/19 22:49:37 pirofti Exp 
d461 8
@


1.69
log
@Regenerate after pipe2.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.63 2011/09/19 14:33:14 pirofti Exp 
d553 6
@


1.68
log
@Regenerate after syscall expansion.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.62 2011/09/18 02:23:18 pirofti Exp 
d613 5
d884 1
@


1.67
log
@Regenerate after the futex commit.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.61 2011/07/14 23:32:08 matthew Exp 
@


1.66
log
@sync
@
text
@d571 9
d602 11
d869 1
d877 2
@


1.65
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.60 2011/07/09 00:10:52 deraadt Exp 
@


1.64
log
@regen syscalls
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.59 2011/07/08 19:19:20 tedu Exp 
d234 4
d690 1
a690 1
int	compat_25_sys_swapon(struct proc *, void *, register_t *);
@


1.63
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.58 2011/07/08 05:01:27 matthew Exp 
d335 5
d728 1
a728 1
int	compat_09_sys_setdomainname(struct proc *, void *, register_t *);
@


1.62
log
@Regenerate.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.57 2011/07/07 06:15:47 pirofti Exp 
a140 4
struct linux_sys_pipe_args {
	syscallarg(int *) pfds;
};

d633 1
a633 1
int	linux_sys_pipe(struct proc *, void *, register_t *);
@


1.61
log
@regen syscalls
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.56 2011/07/07 01:19:39 tedu Exp 
@


1.60
log
@Regenerate -- linux_sys_set_tid_address().
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.54 2011/04/04 21:50:41 pirofti Exp 
d82 6
d204 5
d253 5
d611 1
a611 1
int	compat_43_sys_lseek(struct proc *, void *, register_t *);
d672 1
a672 1
int	compat_43_sys_sethostname(struct proc *, void *, register_t *);
d682 1
a682 1
int	compat_43_sys_lstat(struct proc *, void *, register_t *);
d691 1
a691 1
int	compat_43_sys_ftruncate(struct proc *, void *, register_t *);
@


1.59
log
@Regenerate -- linux_sys_[g|s]et_thread_area().
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.53 2011/02/11 21:40:04 pirofti Exp 
d318 3
d558 4
d832 1
@


1.58
log
@Regenerate.
@
text
@d547 8
d821 2
@


1.57
log
@Regenerate.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.51 2010/06/30 21:54:12 guenther Exp 
d330 6
d704 1
a704 1
int	sys_mprotect(struct proc *, void *, register_t *);
@


1.56
log
@Merge from NetBSD: "Linux's getsid(2) does in fact return a pid,
not a pointer."  So just use the native implementation.
ok deraadt@@
@
text
@d541 10
d809 2
@


1.55
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.50 2007/05/29 03:28:01 tedu Exp 
a365 4
struct linux_sys_getsid_args {
	syscallarg(int) pid;
};

d710 1
a710 1
int	linux_sys_getsid(struct proc *, void *, register_t *);
@


1.54
log
@regen
@
text
@@


1.53
log
@regen
@
text
@@


1.52
log
@regen
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.49 2004/10/27 13:23:38 niklas Exp 
a484 5
struct linux_sys_getcwd_args {
	syscallarg(char *) bufp;
	syscallarg(size_t) length;
};

d750 1
a750 1
int	linux_sys_getcwd(struct proc *, void *, register_t *);
@


1.51
log
@regen
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.48 2004/07/09 23:52:02 millert Exp 
d775 2
a776 2
int	linux_sys_setreuid(struct proc *, void *, register_t *);
int	linux_sys_setregid(struct proc *, void *, register_t *);
@


1.50
log
@regen
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.47 2004/05/28 18:28:14 tedu Exp 
@


1.49
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.46 2004/04/05 00:01:12 tedu Exp 
d608 1
d610 2
@


1.48
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.45 2003/09/04 02:57:22 tedu Exp 
d788 1
a788 1
int	linux_sys_madvise(struct proc *, void *, register_t *);
@


1.47
log
@regen.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.44 2003/09/01 14:00:23 fgsch Exp 
d791 12
@


1.46
log
@regen.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.43 2003/08/15 14:02:22 fgsch Exp 
d791 1
@


1.45
log
@regen.. again. sorry.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.42 2003/08/14 18:50:13 fgsch Exp 
a549 4
struct linux_sys_exit_group_args {
	syscallarg(int) rval;
};

d791 1
a791 1
int	linux_sys_exit_group(struct proc *, void *, register_t *);
@


1.44
log
@regen.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.41 2003/08/14 18:34:15 fgsch Exp 
d550 4
d795 1
a795 1
int	sys_exit(struct proc *, void *, register_t *);
@


1.43
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.40 2003/08/02 18:37:06 deraadt Exp 
d791 1
@


1.42
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.39 2003/07/23 17:42:09 tedu Exp 
d514 5
d763 1
a763 1
int	sys_ftruncate(struct proc *, void *, register_t *);
@


1.41
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.38 2003/07/03 00:00:04 tedu Exp 
d297 4
@


1.40
log
@Regen
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.37 2003/05/10 17:53:57 miod Exp 
d494 9
@


1.39
log
@regen
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.36 2002/10/30 20:10:48 millert Exp 
d626 1
a626 1
int	sys_swapon(struct proc *, void *, register_t *);
@


1.38
log
@getdents64 support, based on FreeBSD.
thanks to jpmk@@fibertel.com.ar for providing a testbed; jasoni ok.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.35 2002/10/28 03:35:53 fgsch Exp 
d410 9
a418 3
	syscallarg(uid_t) ruid;
	syscallarg(uid_t) euid;
	syscallarg(uid_t) suid;
d422 3
a424 3
	syscallarg(gid_t) rgid;
	syscallarg(gid_t) egid;
	syscallarg(gid_t) sgid;
d428 3
a430 3
	syscallarg(gid_t *) rgid;
	syscallarg(gid_t *) egid;
	syscallarg(gid_t *) sgid;
a515 6
struct linux_sys_getresuid_args {
	syscallarg(uid_t *) ruid;
	syscallarg(uid_t *) euid;
	syscallarg(uid_t *) suid;
};

d716 1
a716 1
int	linux_sys_getresuid(struct proc *, void *, register_t *);
d759 4
a762 4
int	linux_sys_setresuid(struct proc *, void *, register_t *);
int	linux_sys_getresuid(struct proc *, void *, register_t *);
int	linux_sys_setresgid(struct proc *, void *, register_t *);
int	linux_sys_getresgid(struct proc *, void *, register_t *);
@


1.37
log
@regen
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.34 2002/06/05 19:43:25 jasoni Exp 
d518 6
@


1.36
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_syscallargs.h,v 1.35 2002/03/14 00:44:20 miod Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.33 2002/03/14 00:42:25 miod Exp 
d550 1
a550 1
int	sys_getpid(struct proc *, void *, register_t *);
d554 1
a554 1
int	sys_getuid(struct proc *, void *, register_t *);
d580 1
a580 1
int	sys_getgid(struct proc *, void *, register_t *);
d744 2
a745 2
int	sys_getuid(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
@


1.35
log
@Regen after syscall changes (option PTRACE)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d530 26
a555 26
int	sys_nosys	__P((struct proc *, void *, register_t *));
int	sys_exit	__P((struct proc *, void *, register_t *));
int	sys_fork	__P((struct proc *, void *, register_t *));
int	sys_read	__P((struct proc *, void *, register_t *));
int	sys_write	__P((struct proc *, void *, register_t *));
int	linux_sys_open	__P((struct proc *, void *, register_t *));
int	sys_close	__P((struct proc *, void *, register_t *));
int	linux_sys_waitpid	__P((struct proc *, void *, register_t *));
int	linux_sys_creat	__P((struct proc *, void *, register_t *));
int	sys_link	__P((struct proc *, void *, register_t *));
int	linux_sys_unlink	__P((struct proc *, void *, register_t *));
int	linux_sys_execve	__P((struct proc *, void *, register_t *));
int	linux_sys_chdir	__P((struct proc *, void *, register_t *));
int	linux_sys_time	__P((struct proc *, void *, register_t *));
int	linux_sys_mknod	__P((struct proc *, void *, register_t *));
int	linux_sys_chmod	__P((struct proc *, void *, register_t *));
int	linux_sys_lchown16	__P((struct proc *, void *, register_t *));
int	linux_sys_break	__P((struct proc *, void *, register_t *));
int	linux_sys_ostat	__P((struct proc *, void *, register_t *));
int	compat_43_sys_lseek	__P((struct proc *, void *, register_t *));
int	sys_getpid	__P((struct proc *, void *, register_t *));
int	linux_sys_mount	__P((struct proc *, void *, register_t *));
int	linux_sys_umount	__P((struct proc *, void *, register_t *));
int	sys_setuid	__P((struct proc *, void *, register_t *));
int	sys_getuid	__P((struct proc *, void *, register_t *));
int	linux_sys_stime	__P((struct proc *, void *, register_t *));
d557 1
a557 1
int	linux_sys_ptrace	__P((struct proc *, void *, register_t *));
d560 74
a633 74
int	linux_sys_alarm	__P((struct proc *, void *, register_t *));
int	linux_sys_ofstat	__P((struct proc *, void *, register_t *));
int	linux_sys_pause	__P((struct proc *, void *, register_t *));
int	linux_sys_utime	__P((struct proc *, void *, register_t *));
int	linux_sys_stty	__P((struct proc *, void *, register_t *));
int	linux_sys_gtty	__P((struct proc *, void *, register_t *));
int	linux_sys_access	__P((struct proc *, void *, register_t *));
int	linux_sys_nice	__P((struct proc *, void *, register_t *));
int	linux_sys_ftime	__P((struct proc *, void *, register_t *));
int	sys_sync	__P((struct proc *, void *, register_t *));
int	linux_sys_kill	__P((struct proc *, void *, register_t *));
int	linux_sys_rename	__P((struct proc *, void *, register_t *));
int	linux_sys_mkdir	__P((struct proc *, void *, register_t *));
int	linux_sys_rmdir	__P((struct proc *, void *, register_t *));
int	sys_dup	__P((struct proc *, void *, register_t *));
int	linux_sys_pipe	__P((struct proc *, void *, register_t *));
int	linux_sys_times	__P((struct proc *, void *, register_t *));
int	linux_sys_prof	__P((struct proc *, void *, register_t *));
int	linux_sys_brk	__P((struct proc *, void *, register_t *));
int	sys_setgid	__P((struct proc *, void *, register_t *));
int	sys_getgid	__P((struct proc *, void *, register_t *));
int	linux_sys_signal	__P((struct proc *, void *, register_t *));
int	sys_geteuid	__P((struct proc *, void *, register_t *));
int	sys_getegid	__P((struct proc *, void *, register_t *));
int	sys_acct	__P((struct proc *, void *, register_t *));
int	linux_sys_phys	__P((struct proc *, void *, register_t *));
int	linux_sys_lock	__P((struct proc *, void *, register_t *));
int	linux_sys_ioctl	__P((struct proc *, void *, register_t *));
int	linux_sys_fcntl	__P((struct proc *, void *, register_t *));
int	linux_sys_mpx	__P((struct proc *, void *, register_t *));
int	sys_setpgid	__P((struct proc *, void *, register_t *));
int	linux_sys_ulimit	__P((struct proc *, void *, register_t *));
int	linux_sys_oldolduname	__P((struct proc *, void *, register_t *));
int	sys_umask	__P((struct proc *, void *, register_t *));
int	sys_chroot	__P((struct proc *, void *, register_t *));
int	linux_sys_ustat	__P((struct proc *, void *, register_t *));
int	sys_dup2	__P((struct proc *, void *, register_t *));
int	sys_getppid	__P((struct proc *, void *, register_t *));
int	sys_getpgrp	__P((struct proc *, void *, register_t *));
int	sys_setsid	__P((struct proc *, void *, register_t *));
int	linux_sys_sigaction	__P((struct proc *, void *, register_t *));
int	linux_sys_siggetmask	__P((struct proc *, void *, register_t *));
int	linux_sys_sigsetmask	__P((struct proc *, void *, register_t *));
int	linux_sys_setreuid16	__P((struct proc *, void *, register_t *));
int	linux_sys_setregid16	__P((struct proc *, void *, register_t *));
int	linux_sys_sigsuspend	__P((struct proc *, void *, register_t *));
int	linux_sys_sigpending	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sethostname	__P((struct proc *, void *, register_t *));
int	linux_sys_setrlimit	__P((struct proc *, void *, register_t *));
int	linux_sys_getrlimit	__P((struct proc *, void *, register_t *));
int	sys_getrusage	__P((struct proc *, void *, register_t *));
int	sys_gettimeofday	__P((struct proc *, void *, register_t *));
int	sys_settimeofday	__P((struct proc *, void *, register_t *));
int	sys_getgroups	__P((struct proc *, void *, register_t *));
int	sys_setgroups	__P((struct proc *, void *, register_t *));
int	linux_sys_oldselect	__P((struct proc *, void *, register_t *));
int	linux_sys_symlink	__P((struct proc *, void *, register_t *));
int	compat_43_sys_lstat	__P((struct proc *, void *, register_t *));
int	linux_sys_readlink	__P((struct proc *, void *, register_t *));
int	linux_sys_uselib	__P((struct proc *, void *, register_t *));
int	sys_swapon	__P((struct proc *, void *, register_t *));
int	sys_reboot	__P((struct proc *, void *, register_t *));
int	linux_sys_readdir	__P((struct proc *, void *, register_t *));
int	linux_sys_mmap	__P((struct proc *, void *, register_t *));
int	sys_munmap	__P((struct proc *, void *, register_t *));
int	linux_sys_truncate	__P((struct proc *, void *, register_t *));
int	compat_43_sys_ftruncate	__P((struct proc *, void *, register_t *));
int	sys_fchmod	__P((struct proc *, void *, register_t *));
int	linux_sys_fchown16	__P((struct proc *, void *, register_t *));
int	sys_getpriority	__P((struct proc *, void *, register_t *));
int	sys_setpriority	__P((struct proc *, void *, register_t *));
int	sys_profil	__P((struct proc *, void *, register_t *));
int	linux_sys_statfs	__P((struct proc *, void *, register_t *));
int	linux_sys_fstatfs	__P((struct proc *, void *, register_t *));
d635 1
a635 1
int	linux_sys_ioperm	__P((struct proc *, void *, register_t *));
d637 1
a637 1
int	linux_sys_ioperm	__P((struct proc *, void *, register_t *));
d639 8
a646 8
int	linux_sys_socketcall	__P((struct proc *, void *, register_t *));
int	linux_sys_klog	__P((struct proc *, void *, register_t *));
int	sys_setitimer	__P((struct proc *, void *, register_t *));
int	sys_getitimer	__P((struct proc *, void *, register_t *));
int	linux_sys_stat	__P((struct proc *, void *, register_t *));
int	linux_sys_lstat	__P((struct proc *, void *, register_t *));
int	linux_sys_fstat	__P((struct proc *, void *, register_t *));
int	linux_sys_olduname	__P((struct proc *, void *, register_t *));
d648 1
a648 1
int	linux_sys_iopl	__P((struct proc *, void *, register_t *));
d650 1
a650 1
int	linux_sys_iopl	__P((struct proc *, void *, register_t *));
d652 12
a663 12
int	linux_sys_vhangup	__P((struct proc *, void *, register_t *));
int	linux_sys_idle	__P((struct proc *, void *, register_t *));
int	linux_sys_vm86old	__P((struct proc *, void *, register_t *));
int	linux_sys_wait4	__P((struct proc *, void *, register_t *));
int	linux_sys_swapoff	__P((struct proc *, void *, register_t *));
int	linux_sys_sysinfo	__P((struct proc *, void *, register_t *));
int	linux_sys_ipc	__P((struct proc *, void *, register_t *));
int	sys_fsync	__P((struct proc *, void *, register_t *));
int	linux_sys_sigreturn	__P((struct proc *, void *, register_t *));
int	linux_sys_clone	__P((struct proc *, void *, register_t *));
int	compat_09_sys_setdomainname	__P((struct proc *, void *, register_t *));
int	linux_sys_uname	__P((struct proc *, void *, register_t *));
d665 1
a665 1
int	linux_sys_modify_ldt	__P((struct proc *, void *, register_t *));
d667 1
a667 1
int	linux_sys_modify_ldt	__P((struct proc *, void *, register_t *));
d669 98
a766 98
int	linux_sys_adjtimex	__P((struct proc *, void *, register_t *));
int	sys_mprotect	__P((struct proc *, void *, register_t *));
int	linux_sys_sigprocmask	__P((struct proc *, void *, register_t *));
int	linux_sys_create_module	__P((struct proc *, void *, register_t *));
int	linux_sys_init_module	__P((struct proc *, void *, register_t *));
int	linux_sys_delete_module	__P((struct proc *, void *, register_t *));
int	linux_sys_get_kernel_syms	__P((struct proc *, void *, register_t *));
int	linux_sys_quotactl	__P((struct proc *, void *, register_t *));
int	linux_sys_getpgid	__P((struct proc *, void *, register_t *));
int	sys_fchdir	__P((struct proc *, void *, register_t *));
int	linux_sys_bdflush	__P((struct proc *, void *, register_t *));
int	linux_sys_sysfs	__P((struct proc *, void *, register_t *));
int	linux_sys_personality	__P((struct proc *, void *, register_t *));
int	linux_sys_afs_syscall	__P((struct proc *, void *, register_t *));
int	linux_sys_setfsuid	__P((struct proc *, void *, register_t *));
int	linux_sys_getfsuid	__P((struct proc *, void *, register_t *));
int	linux_sys_llseek	__P((struct proc *, void *, register_t *));
int	linux_sys_getdents	__P((struct proc *, void *, register_t *));
int	linux_sys_select	__P((struct proc *, void *, register_t *));
int	sys_flock	__P((struct proc *, void *, register_t *));
int	sys_msync	__P((struct proc *, void *, register_t *));
int	sys_readv	__P((struct proc *, void *, register_t *));
int	sys_writev	__P((struct proc *, void *, register_t *));
int	linux_sys_getsid	__P((struct proc *, void *, register_t *));
int	linux_sys_fdatasync	__P((struct proc *, void *, register_t *));
int	linux_sys___sysctl	__P((struct proc *, void *, register_t *));
int	sys_mlock	__P((struct proc *, void *, register_t *));
int	sys_munlock	__P((struct proc *, void *, register_t *));
int	linux_sys_mlockall	__P((struct proc *, void *, register_t *));
int	linux_sys_munlockall	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_setparam	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_getparam	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_setscheduler	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_getscheduler	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_yield	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_get_priority_max	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_get_priority_min	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_rr_get_interval	__P((struct proc *, void *, register_t *));
int	sys_nanosleep	__P((struct proc *, void *, register_t *));
int	linux_sys_mremap	__P((struct proc *, void *, register_t *));
int	linux_sys_setresuid16	__P((struct proc *, void *, register_t *));
int	linux_sys_getresuid	__P((struct proc *, void *, register_t *));
int	linux_sys_vm86	__P((struct proc *, void *, register_t *));
int	linux_sys_query_module	__P((struct proc *, void *, register_t *));
int	sys_poll	__P((struct proc *, void *, register_t *));
int	linux_sys_nfsservctl	__P((struct proc *, void *, register_t *));
int	linux_sys_setresgid16	__P((struct proc *, void *, register_t *));
int	linux_sys_getresgid16	__P((struct proc *, void *, register_t *));
int	linux_sys_prctl	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_sigreturn	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_sigaction	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_sigprocmask	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_sigpending	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_sigtimedwait	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_queueinfo	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_sigsuspend	__P((struct proc *, void *, register_t *));
int	linux_sys_pread	__P((struct proc *, void *, register_t *));
int	linux_sys_pwrite	__P((struct proc *, void *, register_t *));
int	linux_sys_chown16	__P((struct proc *, void *, register_t *));
int	linux_sys_getcwd	__P((struct proc *, void *, register_t *));
int	linux_sys_capget	__P((struct proc *, void *, register_t *));
int	linux_sys_capset	__P((struct proc *, void *, register_t *));
int	linux_sys_sigaltstack	__P((struct proc *, void *, register_t *));
int	linux_sys_sendfile	__P((struct proc *, void *, register_t *));
int	linux_sys_getpmsg	__P((struct proc *, void *, register_t *));
int	linux_sys_putpmsg	__P((struct proc *, void *, register_t *));
int	sys_vfork	__P((struct proc *, void *, register_t *));
int	linux_sys_ugetrlimit	__P((struct proc *, void *, register_t *));
int	linux_sys_mmap2	__P((struct proc *, void *, register_t *));
int	linux_sys_truncate64	__P((struct proc *, void *, register_t *));
int	sys_ftruncate	__P((struct proc *, void *, register_t *));
int	linux_sys_stat64	__P((struct proc *, void *, register_t *));
int	linux_sys_lstat64	__P((struct proc *, void *, register_t *));
int	linux_sys_fstat64	__P((struct proc *, void *, register_t *));
int	linux_sys_lchown	__P((struct proc *, void *, register_t *));
int	sys_getuid	__P((struct proc *, void *, register_t *));
int	sys_getgid	__P((struct proc *, void *, register_t *));
int	sys_geteuid	__P((struct proc *, void *, register_t *));
int	sys_getegid	__P((struct proc *, void *, register_t *));
int	linux_sys_setreuid	__P((struct proc *, void *, register_t *));
int	linux_sys_setregid	__P((struct proc *, void *, register_t *));
int	sys_getgroups	__P((struct proc *, void *, register_t *));
int	sys_setgroups	__P((struct proc *, void *, register_t *));
int	linux_sys_fchown	__P((struct proc *, void *, register_t *));
int	linux_sys_setresuid	__P((struct proc *, void *, register_t *));
int	linux_sys_getresuid	__P((struct proc *, void *, register_t *));
int	linux_sys_setresgid	__P((struct proc *, void *, register_t *));
int	linux_sys_getresgid	__P((struct proc *, void *, register_t *));
int	linux_sys_chown	__P((struct proc *, void *, register_t *));
int	sys_setuid	__P((struct proc *, void *, register_t *));
int	sys_setgid	__P((struct proc *, void *, register_t *));
int	linux_sys_setfsuid	__P((struct proc *, void *, register_t *));
int	linux_sys_setfsgid	__P((struct proc *, void *, register_t *));
int	linux_sys_pivot_root	__P((struct proc *, void *, register_t *));
int	linux_sys_mincore	__P((struct proc *, void *, register_t *));
int	linux_sys_madvise	__P((struct proc *, void *, register_t *));
int	linux_sys_getdents64	__P((struct proc *, void *, register_t *));
int	linux_sys_fcntl64	__P((struct proc *, void *, register_t *));
@


1.34
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.32 2002/02/04 20:04:52 provos Exp 
d556 1
d558 2
@


1.33
log
@fcntl64 support; okay deraadt@@
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.30 2001/07/03 21:56:26 jasoni Exp 
@


1.32
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.31 2001/07/04 19:59:47 jasoni Exp 
d518 6
@


1.32.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_syscallargs.h,v 1.32 2001/08/26 04:14:26 deraadt Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.34 2002/06/05 19:43:25 jasoni Exp 
a519 6
struct linux_sys_fcntl64_args {
	syscallarg(u_int) fd;
	syscallarg(u_int) cmd;
	syscallarg(void *) arg;
};

d524 101
a624 104
int	sys_nosys(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	linux_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	linux_sys_waitpid(struct proc *, void *, register_t *);
int	linux_sys_creat(struct proc *, void *, register_t *);
int	sys_link(struct proc *, void *, register_t *);
int	linux_sys_unlink(struct proc *, void *, register_t *);
int	linux_sys_execve(struct proc *, void *, register_t *);
int	linux_sys_chdir(struct proc *, void *, register_t *);
int	linux_sys_time(struct proc *, void *, register_t *);
int	linux_sys_mknod(struct proc *, void *, register_t *);
int	linux_sys_chmod(struct proc *, void *, register_t *);
int	linux_sys_lchown16(struct proc *, void *, register_t *);
int	linux_sys_break(struct proc *, void *, register_t *);
int	linux_sys_ostat(struct proc *, void *, register_t *);
int	compat_43_sys_lseek(struct proc *, void *, register_t *);
int	linux_sys_getpid(struct proc *, void *, register_t *);
int	linux_sys_mount(struct proc *, void *, register_t *);
int	linux_sys_umount(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	linux_sys_getuid(struct proc *, void *, register_t *);
int	linux_sys_stime(struct proc *, void *, register_t *);
#ifdef PTRACE
int	linux_sys_ptrace(struct proc *, void *, register_t *);
#else
#endif
int	linux_sys_alarm(struct proc *, void *, register_t *);
int	linux_sys_ofstat(struct proc *, void *, register_t *);
int	linux_sys_pause(struct proc *, void *, register_t *);
int	linux_sys_utime(struct proc *, void *, register_t *);
int	linux_sys_stty(struct proc *, void *, register_t *);
int	linux_sys_gtty(struct proc *, void *, register_t *);
int	linux_sys_access(struct proc *, void *, register_t *);
int	linux_sys_nice(struct proc *, void *, register_t *);
int	linux_sys_ftime(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	linux_sys_kill(struct proc *, void *, register_t *);
int	linux_sys_rename(struct proc *, void *, register_t *);
int	linux_sys_mkdir(struct proc *, void *, register_t *);
int	linux_sys_rmdir(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	linux_sys_pipe(struct proc *, void *, register_t *);
int	linux_sys_times(struct proc *, void *, register_t *);
int	linux_sys_prof(struct proc *, void *, register_t *);
int	linux_sys_brk(struct proc *, void *, register_t *);
int	sys_setgid(struct proc *, void *, register_t *);
int	linux_sys_getgid(struct proc *, void *, register_t *);
int	linux_sys_signal(struct proc *, void *, register_t *);
int	sys_geteuid(struct proc *, void *, register_t *);
int	sys_getegid(struct proc *, void *, register_t *);
int	sys_acct(struct proc *, void *, register_t *);
int	linux_sys_phys(struct proc *, void *, register_t *);
int	linux_sys_lock(struct proc *, void *, register_t *);
int	linux_sys_ioctl(struct proc *, void *, register_t *);
int	linux_sys_fcntl(struct proc *, void *, register_t *);
int	linux_sys_mpx(struct proc *, void *, register_t *);
int	sys_setpgid(struct proc *, void *, register_t *);
int	linux_sys_ulimit(struct proc *, void *, register_t *);
int	linux_sys_oldolduname(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	sys_chroot(struct proc *, void *, register_t *);
int	linux_sys_ustat(struct proc *, void *, register_t *);
int	sys_dup2(struct proc *, void *, register_t *);
int	sys_getppid(struct proc *, void *, register_t *);
int	sys_getpgrp(struct proc *, void *, register_t *);
int	sys_setsid(struct proc *, void *, register_t *);
int	linux_sys_sigaction(struct proc *, void *, register_t *);
int	linux_sys_siggetmask(struct proc *, void *, register_t *);
int	linux_sys_sigsetmask(struct proc *, void *, register_t *);
int	linux_sys_setreuid16(struct proc *, void *, register_t *);
int	linux_sys_setregid16(struct proc *, void *, register_t *);
int	linux_sys_sigsuspend(struct proc *, void *, register_t *);
int	linux_sys_sigpending(struct proc *, void *, register_t *);
int	compat_43_sys_sethostname(struct proc *, void *, register_t *);
int	linux_sys_setrlimit(struct proc *, void *, register_t *);
int	linux_sys_getrlimit(struct proc *, void *, register_t *);
int	sys_getrusage(struct proc *, void *, register_t *);
int	sys_gettimeofday(struct proc *, void *, register_t *);
int	sys_settimeofday(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	linux_sys_oldselect(struct proc *, void *, register_t *);
int	linux_sys_symlink(struct proc *, void *, register_t *);
int	compat_43_sys_lstat(struct proc *, void *, register_t *);
int	linux_sys_readlink(struct proc *, void *, register_t *);
int	linux_sys_uselib(struct proc *, void *, register_t *);
int	sys_swapon(struct proc *, void *, register_t *);
int	sys_reboot(struct proc *, void *, register_t *);
int	linux_sys_readdir(struct proc *, void *, register_t *);
int	linux_sys_mmap(struct proc *, void *, register_t *);
int	sys_munmap(struct proc *, void *, register_t *);
int	linux_sys_truncate(struct proc *, void *, register_t *);
int	compat_43_sys_ftruncate(struct proc *, void *, register_t *);
int	sys_fchmod(struct proc *, void *, register_t *);
int	linux_sys_fchown16(struct proc *, void *, register_t *);
int	sys_getpriority(struct proc *, void *, register_t *);
int	sys_setpriority(struct proc *, void *, register_t *);
int	sys_profil(struct proc *, void *, register_t *);
int	linux_sys_statfs(struct proc *, void *, register_t *);
int	linux_sys_fstatfs(struct proc *, void *, register_t *);
d626 1
a626 1
int	linux_sys_ioperm(struct proc *, void *, register_t *);
d628 1
a628 1
int	linux_sys_ioperm(struct proc *, void *, register_t *);
d630 8
a637 8
int	linux_sys_socketcall(struct proc *, void *, register_t *);
int	linux_sys_klog(struct proc *, void *, register_t *);
int	sys_setitimer(struct proc *, void *, register_t *);
int	sys_getitimer(struct proc *, void *, register_t *);
int	linux_sys_stat(struct proc *, void *, register_t *);
int	linux_sys_lstat(struct proc *, void *, register_t *);
int	linux_sys_fstat(struct proc *, void *, register_t *);
int	linux_sys_olduname(struct proc *, void *, register_t *);
d639 1
a639 1
int	linux_sys_iopl(struct proc *, void *, register_t *);
d641 1
a641 1
int	linux_sys_iopl(struct proc *, void *, register_t *);
d643 12
a654 12
int	linux_sys_vhangup(struct proc *, void *, register_t *);
int	linux_sys_idle(struct proc *, void *, register_t *);
int	linux_sys_vm86old(struct proc *, void *, register_t *);
int	linux_sys_wait4(struct proc *, void *, register_t *);
int	linux_sys_swapoff(struct proc *, void *, register_t *);
int	linux_sys_sysinfo(struct proc *, void *, register_t *);
int	linux_sys_ipc(struct proc *, void *, register_t *);
int	sys_fsync(struct proc *, void *, register_t *);
int	linux_sys_sigreturn(struct proc *, void *, register_t *);
int	linux_sys_clone(struct proc *, void *, register_t *);
int	compat_09_sys_setdomainname(struct proc *, void *, register_t *);
int	linux_sys_uname(struct proc *, void *, register_t *);
d656 1
a656 1
int	linux_sys_modify_ldt(struct proc *, void *, register_t *);
d658 1
a658 1
int	linux_sys_modify_ldt(struct proc *, void *, register_t *);
d660 98
a757 98
int	linux_sys_adjtimex(struct proc *, void *, register_t *);
int	sys_mprotect(struct proc *, void *, register_t *);
int	linux_sys_sigprocmask(struct proc *, void *, register_t *);
int	linux_sys_create_module(struct proc *, void *, register_t *);
int	linux_sys_init_module(struct proc *, void *, register_t *);
int	linux_sys_delete_module(struct proc *, void *, register_t *);
int	linux_sys_get_kernel_syms(struct proc *, void *, register_t *);
int	linux_sys_quotactl(struct proc *, void *, register_t *);
int	linux_sys_getpgid(struct proc *, void *, register_t *);
int	sys_fchdir(struct proc *, void *, register_t *);
int	linux_sys_bdflush(struct proc *, void *, register_t *);
int	linux_sys_sysfs(struct proc *, void *, register_t *);
int	linux_sys_personality(struct proc *, void *, register_t *);
int	linux_sys_afs_syscall(struct proc *, void *, register_t *);
int	linux_sys_setfsuid(struct proc *, void *, register_t *);
int	linux_sys_getfsuid(struct proc *, void *, register_t *);
int	linux_sys_llseek(struct proc *, void *, register_t *);
int	linux_sys_getdents(struct proc *, void *, register_t *);
int	linux_sys_select(struct proc *, void *, register_t *);
int	sys_flock(struct proc *, void *, register_t *);
int	sys_msync(struct proc *, void *, register_t *);
int	sys_readv(struct proc *, void *, register_t *);
int	sys_writev(struct proc *, void *, register_t *);
int	linux_sys_getsid(struct proc *, void *, register_t *);
int	linux_sys_fdatasync(struct proc *, void *, register_t *);
int	linux_sys___sysctl(struct proc *, void *, register_t *);
int	sys_mlock(struct proc *, void *, register_t *);
int	sys_munlock(struct proc *, void *, register_t *);
int	linux_sys_mlockall(struct proc *, void *, register_t *);
int	linux_sys_munlockall(struct proc *, void *, register_t *);
int	linux_sys_sched_setparam(struct proc *, void *, register_t *);
int	linux_sys_sched_getparam(struct proc *, void *, register_t *);
int	linux_sys_sched_setscheduler(struct proc *, void *, register_t *);
int	linux_sys_sched_getscheduler(struct proc *, void *, register_t *);
int	linux_sys_sched_yield(struct proc *, void *, register_t *);
int	linux_sys_sched_get_priority_max(struct proc *, void *, register_t *);
int	linux_sys_sched_get_priority_min(struct proc *, void *, register_t *);
int	linux_sys_sched_rr_get_interval(struct proc *, void *, register_t *);
int	sys_nanosleep(struct proc *, void *, register_t *);
int	linux_sys_mremap(struct proc *, void *, register_t *);
int	linux_sys_setresuid16(struct proc *, void *, register_t *);
int	linux_sys_getresuid(struct proc *, void *, register_t *);
int	linux_sys_vm86(struct proc *, void *, register_t *);
int	linux_sys_query_module(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
int	linux_sys_nfsservctl(struct proc *, void *, register_t *);
int	linux_sys_setresgid16(struct proc *, void *, register_t *);
int	linux_sys_getresgid16(struct proc *, void *, register_t *);
int	linux_sys_prctl(struct proc *, void *, register_t *);
int	linux_sys_rt_sigreturn(struct proc *, void *, register_t *);
int	linux_sys_rt_sigaction(struct proc *, void *, register_t *);
int	linux_sys_rt_sigprocmask(struct proc *, void *, register_t *);
int	linux_sys_rt_sigpending(struct proc *, void *, register_t *);
int	linux_sys_rt_sigtimedwait(struct proc *, void *, register_t *);
int	linux_sys_rt_queueinfo(struct proc *, void *, register_t *);
int	linux_sys_rt_sigsuspend(struct proc *, void *, register_t *);
int	linux_sys_pread(struct proc *, void *, register_t *);
int	linux_sys_pwrite(struct proc *, void *, register_t *);
int	linux_sys_chown16(struct proc *, void *, register_t *);
int	linux_sys_getcwd(struct proc *, void *, register_t *);
int	linux_sys_capget(struct proc *, void *, register_t *);
int	linux_sys_capset(struct proc *, void *, register_t *);
int	linux_sys_sigaltstack(struct proc *, void *, register_t *);
int	linux_sys_sendfile(struct proc *, void *, register_t *);
int	linux_sys_getpmsg(struct proc *, void *, register_t *);
int	linux_sys_putpmsg(struct proc *, void *, register_t *);
int	sys_vfork(struct proc *, void *, register_t *);
int	linux_sys_ugetrlimit(struct proc *, void *, register_t *);
int	linux_sys_mmap2(struct proc *, void *, register_t *);
int	linux_sys_truncate64(struct proc *, void *, register_t *);
int	sys_ftruncate(struct proc *, void *, register_t *);
int	linux_sys_stat64(struct proc *, void *, register_t *);
int	linux_sys_lstat64(struct proc *, void *, register_t *);
int	linux_sys_fstat64(struct proc *, void *, register_t *);
int	linux_sys_lchown(struct proc *, void *, register_t *);
int	linux_sys_getuid(struct proc *, void *, register_t *);
int	linux_sys_getgid(struct proc *, void *, register_t *);
int	sys_geteuid(struct proc *, void *, register_t *);
int	sys_getegid(struct proc *, void *, register_t *);
int	linux_sys_setreuid(struct proc *, void *, register_t *);
int	linux_sys_setregid(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	linux_sys_fchown(struct proc *, void *, register_t *);
int	linux_sys_setresuid(struct proc *, void *, register_t *);
int	linux_sys_getresuid(struct proc *, void *, register_t *);
int	linux_sys_setresgid(struct proc *, void *, register_t *);
int	linux_sys_getresgid(struct proc *, void *, register_t *);
int	linux_sys_chown(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	sys_setgid(struct proc *, void *, register_t *);
int	linux_sys_setfsuid(struct proc *, void *, register_t *);
int	linux_sys_setfsgid(struct proc *, void *, register_t *);
int	linux_sys_pivot_root(struct proc *, void *, register_t *);
int	linux_sys_mincore(struct proc *, void *, register_t *);
int	linux_sys_madvise(struct proc *, void *, register_t *);
int	linux_sys_getdents64(struct proc *, void *, register_t *);
int	linux_sys_fcntl64(struct proc *, void *, register_t *);
@


1.32.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_syscallargs.h,v 1.32.4.1 2002/06/11 03:28:08 art Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.35 2002/10/28 03:35:53 fgsch Exp 
a517 6
};

struct linux_sys_getdents64_args {
	syscallarg(int) fd;
	syscallarg(void *) dirent;
	syscallarg(unsigned) count;
@


1.32.4.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.37 2003/05/10 17:53:57 miod Exp 
d410 3
a412 9
	syscallarg(u_int16_t) ruid;
	syscallarg(u_int16_t) euid;
	syscallarg(u_int16_t) suid;
};

struct linux_sys_getresuid16_args {
	syscallarg(u_int16_t *) ruid;
	syscallarg(u_int16_t *) euid;
	syscallarg(u_int16_t *) suid;
d416 3
a418 3
	syscallarg(u_int16_t) rgid;
	syscallarg(u_int16_t) egid;
	syscallarg(u_int16_t) sgid;
d422 3
a424 3
	syscallarg(u_int16_t *) rgid;
	syscallarg(u_int16_t *) egid;
	syscallarg(u_int16_t *) sgid;
d510 6
d626 1
a626 1
int	compat_25_sys_swapon(struct proc *, void *, register_t *);
d716 1
a716 1
int	linux_sys_getresuid16(struct proc *, void *, register_t *);
d759 4
a762 4
int	sys_setresuid(struct proc *, void *, register_t *);
int	sys_getresuid(struct proc *, void *, register_t *);
int	sys_setresgid(struct proc *, void *, register_t *);
int	sys_getresgid(struct proc *, void *, register_t *);
@


1.31
log
@sync
@
text
@d10 15
a24 1
#define	syscallarg(x)	union { x datum; register_t pad; }
@


1.30
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.30 2001/07/03 21:56:26 jasoni Exp 
a325 4
struct linux_sys_setfsuid_args {
	syscallarg(uid_t) uid;
};

a400 6
struct linux_sys_getresuid_args {
	syscallarg(uid_t *) ruid;
	syscallarg(uid_t *) euid;
	syscallarg(uid_t *) suid;
};

d496 10
d720 24
@


1.29
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.29 2001/07/03 15:32:34 jasoni Exp 
d411 1
a411 1
struct linux_sys_setresgid_args {
d417 1
a417 1
struct linux_sys_getresgid_args {
d692 2
a693 2
int	linux_sys_setresgid	__P((struct proc *, void *, register_t *));
int	linux_sys_getresgid	__P((struct proc *, void *, register_t *));
@


1.28
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.28 2001/04/02 21:43:11 niklas Exp 
d58 1
a58 1
struct linux_sys_lchown_args {
d164 1
a164 1
struct linux_sys_setreuid_args {
d169 1
a169 1
struct linux_sys_setregid_args {
d228 1
a228 1
struct linux_sys_fchown_args {
d399 1
a399 1
struct linux_sys_setresuid_args {
d465 1
a465 1
struct linux_sys_chown_args {
d526 1
a526 1
int	linux_sys_lchown	__P((struct proc *, void *, register_t *));
d580 2
a581 2
int	linux_sys_setreuid	__P((struct proc *, void *, register_t *));
int	linux_sys_setregid	__P((struct proc *, void *, register_t *));
d605 1
a605 1
int	linux_sys_fchown	__P((struct proc *, void *, register_t *));
d686 1
a686 1
int	linux_sys_setresuid	__P((struct proc *, void *, register_t *));
d704 1
a704 1
int	linux_sys_chown	__P((struct proc *, void *, register_t *));
@


1.27
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.27 2001/01/29 07:23:54 jasoni Exp 
d297 5
d362 28
@


1.26
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.26 2000/12/22 07:34:02 jasoni Exp 
d683 1
a683 1
int	linux_sys_ftruncate64	__P((struct proc *, void *, register_t *));
@


1.25
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.25 2000/07/07 02:13:40 jasoni Exp 
d451 20
@


1.24
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.24 2000/06/07 14:11:38 niklas Exp 
d475 1
d483 1
d485 1
d488 2
d492 1
d501 1
d509 2
d513 1
d515 1
d519 1
d561 1
d564 1
d574 1
d576 3
d580 2
d585 1
d591 1
d593 1
d596 5
d603 2
d606 1
d621 10
d635 2
d638 1
d641 1
d646 2
d653 2
d656 3
d661 6
@


1.23
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.22 2000/04/12 04:22:40 jasoni Exp 
d443 5
d606 1
@


1.22
log
@sync
@
text
@d184 10
d443 5
d515 2
a516 2
int	compat_43_sys_setrlimit	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getrlimit	__P((struct proc *, void *, register_t *));
d602 1
@


1.21
log
@sync.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.21 2000/04/04 05:31:50 jasoni Exp 
d311 4
d556 2
@


1.20
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.20 2000/03/28 06:35:57 jasoni Exp 
d404 14
d576 2
@


1.19
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.19 2000/03/27 22:38:12 jasoni Exp 
d376 4
d557 1
@


1.18
log
@Sync.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.18 2000/03/18 21:36:02 ian Exp 
d406 5
d558 1
@


1.17
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.17 2000/03/13 08:18:30 jasoni Exp 
d553 1
@


1.16
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.16 2000/03/08 03:35:29 jasoni Exp 
d376 24
d548 4
@


1.15
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.15 2000/02/28 13:29:30 jasoni Exp 
d156 2
a157 2
	syscallarg(struct linux_sigaction *) nsa;
	syscallarg(struct linux_sigaction *) osa;
d161 1
a161 1
	syscallarg(linux_sigset_t) mask;
d181 1
a181 1
	syscallarg(linux_sigset_t *) mask;
d299 2
a300 2
	syscallarg(linux_sigset_t *) set;
	syscallarg(linux_sigset_t *) oset;
@


1.14
log
@Regen.
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.13 1997/12/10 11:55:28 deraadt Exp 
d58 1
a58 1
struct linux_sys_chown_args {
d352 30
d402 1
a402 1
int	linux_sys_chown	__P((struct proc *, void *, register_t *));
d519 6
@


1.14.2.1
log
@Sync with -current
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.15 2000/02/28 13:29:30 jasoni Exp 
d58 1
a58 1
struct linux_sys_lchown_args {
a351 30
struct linux_sys_setresuid_args {
	syscallarg(uid_t) ruid;
	syscallarg(uid_t) euid;
	syscallarg(uid_t) suid;
};

struct linux_sys_getresuid_args {
	syscallarg(uid_t *) ruid;
	syscallarg(uid_t *) euid;
	syscallarg(uid_t *) suid;
};

struct linux_sys_setresgid_args {
	syscallarg(gid_t) rgid;
	syscallarg(gid_t) egid;
	syscallarg(gid_t) sgid;
};

struct linux_sys_getresgid_args {
	syscallarg(gid_t *) rgid;
	syscallarg(gid_t *) egid;
	syscallarg(gid_t *) sgid;
};

struct linux_sys_chown_args {
	syscallarg(char *) path;
	syscallarg(int) uid;
	syscallarg(int) gid;
};

d372 1
a372 1
int	linux_sys_lchown	__P((struct proc *, void *, register_t *));
a488 6
int	linux_sys_setresuid	__P((struct proc *, void *, register_t *));
int	linux_sys_getresuid	__P((struct proc *, void *, register_t *));
int	sys_poll	__P((struct proc *, void *, register_t *));
int	linux_sys_setresgid	__P((struct proc *, void *, register_t *));
int	linux_sys_getresgid	__P((struct proc *, void *, register_t *));
int	linux_sys_chown	__P((struct proc *, void *, register_t *));
@


1.14.2.2
log
@Sync with -current
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.18 2000/03/18 21:36:02 ian Exp 
d156 2
a157 2
	syscallarg(struct linux_old_sigaction *) nsa;
	syscallarg(struct linux_old_sigaction *) osa;
d161 1
a161 1
	syscallarg(linux_old_sigset_t) mask;
d181 1
a181 1
	syscallarg(linux_old_sigset_t *) mask;
d299 2
a300 2
	syscallarg(linux_old_sigset_t *) set;
	syscallarg(linux_old_sigset_t *) oset;
a375 24
struct linux_sys_rt_sigaction_args {
	syscallarg(int) signum;
	syscallarg(struct linux_sigaction *) nsa;
	syscallarg(struct linux_sigaction *) osa;
	syscallarg(size_t) sigsetsize;
};

struct linux_sys_rt_sigprocmask_args {
	syscallarg(int) how;
	syscallarg(const linux_sigset_t *) set;
	syscallarg(linux_sigset_t *) oset;
	syscallarg(size_t) sigsetsize;
};

struct linux_sys_rt_sigpending_args {
	syscallarg(linux_sigset_t *) set;
	syscallarg(size_t) sigsetsize;
};

struct linux_sys_rt_sigsuspend_args {
	syscallarg(linux_sigset_t *) unewset;
	syscallarg(size_t) sigsetsize;
};

a523 4
int	linux_sys_rt_sigaction	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_sigprocmask	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_sigpending	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_sigsuspend	__P((struct proc *, void *, register_t *));
a524 1
int	sys_vfork	__P((struct proc *, void *, register_t *));
@


1.14.2.3
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_syscallargs.h,v 1.28 2001/04/02 21:44:46 niklas Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.28 2001/04/02 21:43:11 niklas Exp 
a183 10
struct linux_sys_setrlimit_args {
	syscallarg(u_int) which;
	syscallarg(struct linux_rlimit *) rlp;
};

struct linux_sys_getrlimit_args {
	syscallarg(u_int) which;
	syscallarg(struct linux_rlimit *) rlp;
};

a286 5
struct linux_sys_clone_args {
	syscallarg(int) flags;
	syscallarg(void *) stack;
};

a310 4
struct linux_sys_setfsuid_args {
	syscallarg(uid_t) uid;
};

a344 28
struct linux_sys_sched_setparam_args {
	syscallarg(linux_pid_t) pid;
	syscallarg(const struct linux_sched_param *) sp;
};

struct linux_sys_sched_getparam_args {
	syscallarg(linux_pid_t) pid;
	syscallarg(struct linux_sched_param *) sp;
};

struct linux_sys_sched_setscheduler_args {
	syscallarg(linux_pid_t) pid;
	syscallarg(int) policy;
	syscallarg(const struct linux_sched_param *) sp;
};

struct linux_sys_sched_getscheduler_args {
	syscallarg(linux_pid_t) pid;
};

struct linux_sys_sched_get_priority_max_args {
	syscallarg(int) policy;
};

struct linux_sys_sched_get_priority_min_args {
	syscallarg(int) policy;
};

a375 4
struct linux_sys_rt_sigreturn_args {
	syscallarg(struct linux_rt_sigframe *) sfp;
};

a399 14
struct linux_sys_pread_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(size_t) nbyte;
	syscallarg(linux_off_t) offset;
};

struct linux_sys_pwrite_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(size_t) nbyte;
	syscallarg(linux_off_t) offset;
};

a405 35
struct linux_sys_getcwd_args {
	syscallarg(char *) bufp;
	syscallarg(size_t) length;
};

struct linux_sys_sigaltstack_args {
	syscallarg(const struct linux_sigaltstack *) nss;
	syscallarg(struct linux_sigaltstack *) oss;
};

struct linux_sys_ugetrlimit_args {
	syscallarg(u_int) which;
	syscallarg(struct linux_rlimit *) rlp;
};

struct linux_sys_truncate64_args {
	syscallarg(char *) path;
	syscallarg(off_t) length;
};

struct linux_sys_stat64_args {
	syscallarg(char *) path;
	syscallarg(struct linux_stat64 *) sp;
};

struct linux_sys_lstat64_args {
	syscallarg(char *) path;
	syscallarg(struct linux_stat64 *) sp;
};

struct linux_sys_fstat64_args {
	syscallarg(int) fd;
	syscallarg(struct linux_stat64 *) sp;
};

a427 1
int	linux_sys_ostat	__P((struct proc *, void *, register_t *));
a434 1
int	linux_sys_ptrace	__P((struct proc *, void *, register_t *));
a435 1
int	linux_sys_ofstat	__P((struct proc *, void *, register_t *));
a437 2
int	linux_sys_stty	__P((struct proc *, void *, register_t *));
int	linux_sys_gtty	__P((struct proc *, void *, register_t *));
a439 1
int	linux_sys_ftime	__P((struct proc *, void *, register_t *));
a447 1
int	linux_sys_prof	__P((struct proc *, void *, register_t *));
a454 2
int	linux_sys_phys	__P((struct proc *, void *, register_t *));
int	linux_sys_lock	__P((struct proc *, void *, register_t *));
a456 1
int	linux_sys_mpx	__P((struct proc *, void *, register_t *));
a457 1
int	linux_sys_ulimit	__P((struct proc *, void *, register_t *));
a460 1
int	linux_sys_ustat	__P((struct proc *, void *, register_t *));
d473 2
a474 2
int	linux_sys_setrlimit	__P((struct proc *, void *, register_t *));
int	linux_sys_getrlimit	__P((struct proc *, void *, register_t *));
a501 1
int	linux_sys_ioperm	__P((struct proc *, void *, register_t *));
a503 1
int	linux_sys_klog	__P((struct proc *, void *, register_t *));
a512 1
int	linux_sys_iopl	__P((struct proc *, void *, register_t *));
a513 3
int	linux_sys_vhangup	__P((struct proc *, void *, register_t *));
int	linux_sys_idle	__P((struct proc *, void *, register_t *));
int	linux_sys_vm86old	__P((struct proc *, void *, register_t *));
a514 2
int	linux_sys_swapoff	__P((struct proc *, void *, register_t *));
int	linux_sys_sysinfo	__P((struct proc *, void *, register_t *));
a517 1
int	linux_sys_clone	__P((struct proc *, void *, register_t *));
a522 1
int	linux_sys_modify_ldt	__P((struct proc *, void *, register_t *));
a523 1
int	linux_sys_adjtimex	__P((struct proc *, void *, register_t *));
a525 5
int	linux_sys_create_module	__P((struct proc *, void *, register_t *));
int	linux_sys_init_module	__P((struct proc *, void *, register_t *));
int	linux_sys_delete_module	__P((struct proc *, void *, register_t *));
int	linux_sys_get_kernel_syms	__P((struct proc *, void *, register_t *));
int	linux_sys_quotactl	__P((struct proc *, void *, register_t *));
a527 2
int	linux_sys_bdflush	__P((struct proc *, void *, register_t *));
int	linux_sys_sysfs	__P((struct proc *, void *, register_t *));
a528 3
int	linux_sys_afs_syscall	__P((struct proc *, void *, register_t *));
int	linux_sys_setfsuid	__P((struct proc *, void *, register_t *));
int	linux_sys_getfsuid	__P((struct proc *, void *, register_t *));
a540 10
int	linux_sys_mlockall	__P((struct proc *, void *, register_t *));
int	linux_sys_munlockall	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_setparam	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_getparam	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_setscheduler	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_getscheduler	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_yield	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_get_priority_max	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_get_priority_min	__P((struct proc *, void *, register_t *));
int	linux_sys_sched_rr_get_interval	__P((struct proc *, void *, register_t *));
a544 2
int	linux_sys_vm86	__P((struct proc *, void *, register_t *));
int	linux_sys_query_module	__P((struct proc *, void *, register_t *));
a545 1
int	linux_sys_nfsservctl	__P((struct proc *, void *, register_t *));
a547 2
int	linux_sys_prctl	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_sigreturn	__P((struct proc *, void *, register_t *));
a550 2
int	linux_sys_rt_sigtimedwait	__P((struct proc *, void *, register_t *));
int	linux_sys_rt_queueinfo	__P((struct proc *, void *, register_t *));
a551 2
int	linux_sys_pread	__P((struct proc *, void *, register_t *));
int	linux_sys_pwrite	__P((struct proc *, void *, register_t *));
a552 7
int	linux_sys_getcwd	__P((struct proc *, void *, register_t *));
int	linux_sys_capget	__P((struct proc *, void *, register_t *));
int	linux_sys_capset	__P((struct proc *, void *, register_t *));
int	linux_sys_sigaltstack	__P((struct proc *, void *, register_t *));
int	linux_sys_sendfile	__P((struct proc *, void *, register_t *));
int	linux_sys_getpmsg	__P((struct proc *, void *, register_t *));
int	linux_sys_putpmsg	__P((struct proc *, void *, register_t *));
a553 7
int	linux_sys_ugetrlimit	__P((struct proc *, void *, register_t *));
int	linux_sys_mmap2	__P((struct proc *, void *, register_t *));
int	linux_sys_truncate64	__P((struct proc *, void *, register_t *));
int	sys_ftruncate	__P((struct proc *, void *, register_t *));
int	linux_sys_stat64	__P((struct proc *, void *, register_t *));
int	linux_sys_lstat64	__P((struct proc *, void *, register_t *));
int	linux_sys_fstat64	__P((struct proc *, void *, register_t *));
@


1.14.2.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_syscallargs.h,v 1.14.2.3 2001/05/14 22:04:51 niklas Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.31 2001/07/04 19:59:47 jasoni Exp 
d10 1
a10 15
#ifdef	syscallarg
#undef	syscallarg
#endif

#define	syscallarg(x)							\
	union {								\
		register_t pad;						\
		struct { x datum; } le;					\
		struct {						\
			int8_t pad[ (sizeof (register_t) < sizeof (x))	\
				? 0					\
				: sizeof (register_t) - sizeof (x)];	\
			x datum;					\
		} be;							\
	}
d58 1
a58 1
struct linux_sys_lchown16_args {
d164 1
a164 1
struct linux_sys_setreuid16_args {
d169 1
a169 1
struct linux_sys_setregid16_args {
d228 1
a228 1
struct linux_sys_fchown16_args {
d326 4
d399 1
a399 1
struct linux_sys_setresuid16_args {
d405 7
a411 1
struct linux_sys_setresgid16_args {
d417 1
a417 1
struct linux_sys_getresgid16_args {
d465 1
a465 1
struct linux_sys_chown16_args {
a505 10
struct linux_sys_getresuid_args {
	syscallarg(uid_t *) ruid;
	syscallarg(uid_t *) euid;
	syscallarg(uid_t *) suid;
};

struct linux_sys_setfsuid_args {
	syscallarg(uid_t) uid;
};

d526 1
a526 1
int	linux_sys_lchown16	__P((struct proc *, void *, register_t *));
d580 2
a581 2
int	linux_sys_setreuid16	__P((struct proc *, void *, register_t *));
int	linux_sys_setregid16	__P((struct proc *, void *, register_t *));
d605 1
a605 1
int	linux_sys_fchown16	__P((struct proc *, void *, register_t *));
d686 1
a686 1
int	linux_sys_setresuid16	__P((struct proc *, void *, register_t *));
d692 2
a693 2
int	linux_sys_setresgid16	__P((struct proc *, void *, register_t *));
int	linux_sys_getresgid16	__P((struct proc *, void *, register_t *));
d704 1
a704 1
int	linux_sys_chown16	__P((struct proc *, void *, register_t *));
a719 24
int	linux_sys_lchown	__P((struct proc *, void *, register_t *));
int	sys_getuid	__P((struct proc *, void *, register_t *));
int	sys_getgid	__P((struct proc *, void *, register_t *));
int	sys_geteuid	__P((struct proc *, void *, register_t *));
int	sys_getegid	__P((struct proc *, void *, register_t *));
int	linux_sys_setreuid	__P((struct proc *, void *, register_t *));
int	linux_sys_setregid	__P((struct proc *, void *, register_t *));
int	sys_getgroups	__P((struct proc *, void *, register_t *));
int	sys_setgroups	__P((struct proc *, void *, register_t *));
int	linux_sys_fchown	__P((struct proc *, void *, register_t *));
int	linux_sys_setresuid	__P((struct proc *, void *, register_t *));
int	linux_sys_getresuid	__P((struct proc *, void *, register_t *));
int	linux_sys_setresgid	__P((struct proc *, void *, register_t *));
int	linux_sys_getresgid	__P((struct proc *, void *, register_t *));
int	linux_sys_chown	__P((struct proc *, void *, register_t *));
int	sys_setuid	__P((struct proc *, void *, register_t *));
int	sys_setgid	__P((struct proc *, void *, register_t *));
int	linux_sys_setfsuid	__P((struct proc *, void *, register_t *));
int	linux_sys_setfsgid	__P((struct proc *, void *, register_t *));
int	linux_sys_pivot_root	__P((struct proc *, void *, register_t *));
int	linux_sys_mincore	__P((struct proc *, void *, register_t *));
int	linux_sys_madvise	__P((struct proc *, void *, register_t *));
int	linux_sys_getdents64	__P((struct proc *, void *, register_t *));
int	linux_sys_fcntl64	__P((struct proc *, void *, register_t *));
@


1.14.2.5
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.32 2002/02/04 20:04:52 provos Exp 
a517 6
};

struct linux_sys_fcntl64_args {
	syscallarg(u_int) fd;
	syscallarg(u_int) cmd;
	syscallarg(void *) arg;
@


1.14.2.6
log
@Merge in -current from about a week ago
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.33 2002/03/14 00:42:25 miod Exp 
d530 101
a630 104
int	sys_nosys(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	linux_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	linux_sys_waitpid(struct proc *, void *, register_t *);
int	linux_sys_creat(struct proc *, void *, register_t *);
int	sys_link(struct proc *, void *, register_t *);
int	linux_sys_unlink(struct proc *, void *, register_t *);
int	linux_sys_execve(struct proc *, void *, register_t *);
int	linux_sys_chdir(struct proc *, void *, register_t *);
int	linux_sys_time(struct proc *, void *, register_t *);
int	linux_sys_mknod(struct proc *, void *, register_t *);
int	linux_sys_chmod(struct proc *, void *, register_t *);
int	linux_sys_lchown16(struct proc *, void *, register_t *);
int	linux_sys_break(struct proc *, void *, register_t *);
int	linux_sys_ostat(struct proc *, void *, register_t *);
int	compat_43_sys_lseek(struct proc *, void *, register_t *);
int	sys_getpid(struct proc *, void *, register_t *);
int	linux_sys_mount(struct proc *, void *, register_t *);
int	linux_sys_umount(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	linux_sys_stime(struct proc *, void *, register_t *);
#ifdef PTRACE
int	linux_sys_ptrace(struct proc *, void *, register_t *);
#else
#endif
int	linux_sys_alarm(struct proc *, void *, register_t *);
int	linux_sys_ofstat(struct proc *, void *, register_t *);
int	linux_sys_pause(struct proc *, void *, register_t *);
int	linux_sys_utime(struct proc *, void *, register_t *);
int	linux_sys_stty(struct proc *, void *, register_t *);
int	linux_sys_gtty(struct proc *, void *, register_t *);
int	linux_sys_access(struct proc *, void *, register_t *);
int	linux_sys_nice(struct proc *, void *, register_t *);
int	linux_sys_ftime(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	linux_sys_kill(struct proc *, void *, register_t *);
int	linux_sys_rename(struct proc *, void *, register_t *);
int	linux_sys_mkdir(struct proc *, void *, register_t *);
int	linux_sys_rmdir(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	linux_sys_pipe(struct proc *, void *, register_t *);
int	linux_sys_times(struct proc *, void *, register_t *);
int	linux_sys_prof(struct proc *, void *, register_t *);
int	linux_sys_brk(struct proc *, void *, register_t *);
int	sys_setgid(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
int	linux_sys_signal(struct proc *, void *, register_t *);
int	sys_geteuid(struct proc *, void *, register_t *);
int	sys_getegid(struct proc *, void *, register_t *);
int	sys_acct(struct proc *, void *, register_t *);
int	linux_sys_phys(struct proc *, void *, register_t *);
int	linux_sys_lock(struct proc *, void *, register_t *);
int	linux_sys_ioctl(struct proc *, void *, register_t *);
int	linux_sys_fcntl(struct proc *, void *, register_t *);
int	linux_sys_mpx(struct proc *, void *, register_t *);
int	sys_setpgid(struct proc *, void *, register_t *);
int	linux_sys_ulimit(struct proc *, void *, register_t *);
int	linux_sys_oldolduname(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	sys_chroot(struct proc *, void *, register_t *);
int	linux_sys_ustat(struct proc *, void *, register_t *);
int	sys_dup2(struct proc *, void *, register_t *);
int	sys_getppid(struct proc *, void *, register_t *);
int	sys_getpgrp(struct proc *, void *, register_t *);
int	sys_setsid(struct proc *, void *, register_t *);
int	linux_sys_sigaction(struct proc *, void *, register_t *);
int	linux_sys_siggetmask(struct proc *, void *, register_t *);
int	linux_sys_sigsetmask(struct proc *, void *, register_t *);
int	linux_sys_setreuid16(struct proc *, void *, register_t *);
int	linux_sys_setregid16(struct proc *, void *, register_t *);
int	linux_sys_sigsuspend(struct proc *, void *, register_t *);
int	linux_sys_sigpending(struct proc *, void *, register_t *);
int	compat_43_sys_sethostname(struct proc *, void *, register_t *);
int	linux_sys_setrlimit(struct proc *, void *, register_t *);
int	linux_sys_getrlimit(struct proc *, void *, register_t *);
int	sys_getrusage(struct proc *, void *, register_t *);
int	sys_gettimeofday(struct proc *, void *, register_t *);
int	sys_settimeofday(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	linux_sys_oldselect(struct proc *, void *, register_t *);
int	linux_sys_symlink(struct proc *, void *, register_t *);
int	compat_43_sys_lstat(struct proc *, void *, register_t *);
int	linux_sys_readlink(struct proc *, void *, register_t *);
int	linux_sys_uselib(struct proc *, void *, register_t *);
int	sys_swapon(struct proc *, void *, register_t *);
int	sys_reboot(struct proc *, void *, register_t *);
int	linux_sys_readdir(struct proc *, void *, register_t *);
int	linux_sys_mmap(struct proc *, void *, register_t *);
int	sys_munmap(struct proc *, void *, register_t *);
int	linux_sys_truncate(struct proc *, void *, register_t *);
int	compat_43_sys_ftruncate(struct proc *, void *, register_t *);
int	sys_fchmod(struct proc *, void *, register_t *);
int	linux_sys_fchown16(struct proc *, void *, register_t *);
int	sys_getpriority(struct proc *, void *, register_t *);
int	sys_setpriority(struct proc *, void *, register_t *);
int	sys_profil(struct proc *, void *, register_t *);
int	linux_sys_statfs(struct proc *, void *, register_t *);
int	linux_sys_fstatfs(struct proc *, void *, register_t *);
d632 1
a632 1
int	linux_sys_ioperm(struct proc *, void *, register_t *);
d634 1
a634 1
int	linux_sys_ioperm(struct proc *, void *, register_t *);
d636 8
a643 8
int	linux_sys_socketcall(struct proc *, void *, register_t *);
int	linux_sys_klog(struct proc *, void *, register_t *);
int	sys_setitimer(struct proc *, void *, register_t *);
int	sys_getitimer(struct proc *, void *, register_t *);
int	linux_sys_stat(struct proc *, void *, register_t *);
int	linux_sys_lstat(struct proc *, void *, register_t *);
int	linux_sys_fstat(struct proc *, void *, register_t *);
int	linux_sys_olduname(struct proc *, void *, register_t *);
d645 1
a645 1
int	linux_sys_iopl(struct proc *, void *, register_t *);
d647 1
a647 1
int	linux_sys_iopl(struct proc *, void *, register_t *);
d649 12
a660 12
int	linux_sys_vhangup(struct proc *, void *, register_t *);
int	linux_sys_idle(struct proc *, void *, register_t *);
int	linux_sys_vm86old(struct proc *, void *, register_t *);
int	linux_sys_wait4(struct proc *, void *, register_t *);
int	linux_sys_swapoff(struct proc *, void *, register_t *);
int	linux_sys_sysinfo(struct proc *, void *, register_t *);
int	linux_sys_ipc(struct proc *, void *, register_t *);
int	sys_fsync(struct proc *, void *, register_t *);
int	linux_sys_sigreturn(struct proc *, void *, register_t *);
int	linux_sys_clone(struct proc *, void *, register_t *);
int	compat_09_sys_setdomainname(struct proc *, void *, register_t *);
int	linux_sys_uname(struct proc *, void *, register_t *);
d662 1
a662 1
int	linux_sys_modify_ldt(struct proc *, void *, register_t *);
d664 1
a664 1
int	linux_sys_modify_ldt(struct proc *, void *, register_t *);
d666 98
a763 98
int	linux_sys_adjtimex(struct proc *, void *, register_t *);
int	sys_mprotect(struct proc *, void *, register_t *);
int	linux_sys_sigprocmask(struct proc *, void *, register_t *);
int	linux_sys_create_module(struct proc *, void *, register_t *);
int	linux_sys_init_module(struct proc *, void *, register_t *);
int	linux_sys_delete_module(struct proc *, void *, register_t *);
int	linux_sys_get_kernel_syms(struct proc *, void *, register_t *);
int	linux_sys_quotactl(struct proc *, void *, register_t *);
int	linux_sys_getpgid(struct proc *, void *, register_t *);
int	sys_fchdir(struct proc *, void *, register_t *);
int	linux_sys_bdflush(struct proc *, void *, register_t *);
int	linux_sys_sysfs(struct proc *, void *, register_t *);
int	linux_sys_personality(struct proc *, void *, register_t *);
int	linux_sys_afs_syscall(struct proc *, void *, register_t *);
int	linux_sys_setfsuid(struct proc *, void *, register_t *);
int	linux_sys_getfsuid(struct proc *, void *, register_t *);
int	linux_sys_llseek(struct proc *, void *, register_t *);
int	linux_sys_getdents(struct proc *, void *, register_t *);
int	linux_sys_select(struct proc *, void *, register_t *);
int	sys_flock(struct proc *, void *, register_t *);
int	sys_msync(struct proc *, void *, register_t *);
int	sys_readv(struct proc *, void *, register_t *);
int	sys_writev(struct proc *, void *, register_t *);
int	linux_sys_getsid(struct proc *, void *, register_t *);
int	linux_sys_fdatasync(struct proc *, void *, register_t *);
int	linux_sys___sysctl(struct proc *, void *, register_t *);
int	sys_mlock(struct proc *, void *, register_t *);
int	sys_munlock(struct proc *, void *, register_t *);
int	linux_sys_mlockall(struct proc *, void *, register_t *);
int	linux_sys_munlockall(struct proc *, void *, register_t *);
int	linux_sys_sched_setparam(struct proc *, void *, register_t *);
int	linux_sys_sched_getparam(struct proc *, void *, register_t *);
int	linux_sys_sched_setscheduler(struct proc *, void *, register_t *);
int	linux_sys_sched_getscheduler(struct proc *, void *, register_t *);
int	linux_sys_sched_yield(struct proc *, void *, register_t *);
int	linux_sys_sched_get_priority_max(struct proc *, void *, register_t *);
int	linux_sys_sched_get_priority_min(struct proc *, void *, register_t *);
int	linux_sys_sched_rr_get_interval(struct proc *, void *, register_t *);
int	sys_nanosleep(struct proc *, void *, register_t *);
int	linux_sys_mremap(struct proc *, void *, register_t *);
int	linux_sys_setresuid16(struct proc *, void *, register_t *);
int	linux_sys_getresuid(struct proc *, void *, register_t *);
int	linux_sys_vm86(struct proc *, void *, register_t *);
int	linux_sys_query_module(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
int	linux_sys_nfsservctl(struct proc *, void *, register_t *);
int	linux_sys_setresgid16(struct proc *, void *, register_t *);
int	linux_sys_getresgid16(struct proc *, void *, register_t *);
int	linux_sys_prctl(struct proc *, void *, register_t *);
int	linux_sys_rt_sigreturn(struct proc *, void *, register_t *);
int	linux_sys_rt_sigaction(struct proc *, void *, register_t *);
int	linux_sys_rt_sigprocmask(struct proc *, void *, register_t *);
int	linux_sys_rt_sigpending(struct proc *, void *, register_t *);
int	linux_sys_rt_sigtimedwait(struct proc *, void *, register_t *);
int	linux_sys_rt_queueinfo(struct proc *, void *, register_t *);
int	linux_sys_rt_sigsuspend(struct proc *, void *, register_t *);
int	linux_sys_pread(struct proc *, void *, register_t *);
int	linux_sys_pwrite(struct proc *, void *, register_t *);
int	linux_sys_chown16(struct proc *, void *, register_t *);
int	linux_sys_getcwd(struct proc *, void *, register_t *);
int	linux_sys_capget(struct proc *, void *, register_t *);
int	linux_sys_capset(struct proc *, void *, register_t *);
int	linux_sys_sigaltstack(struct proc *, void *, register_t *);
int	linux_sys_sendfile(struct proc *, void *, register_t *);
int	linux_sys_getpmsg(struct proc *, void *, register_t *);
int	linux_sys_putpmsg(struct proc *, void *, register_t *);
int	sys_vfork(struct proc *, void *, register_t *);
int	linux_sys_ugetrlimit(struct proc *, void *, register_t *);
int	linux_sys_mmap2(struct proc *, void *, register_t *);
int	linux_sys_truncate64(struct proc *, void *, register_t *);
int	sys_ftruncate(struct proc *, void *, register_t *);
int	linux_sys_stat64(struct proc *, void *, register_t *);
int	linux_sys_lstat64(struct proc *, void *, register_t *);
int	linux_sys_fstat64(struct proc *, void *, register_t *);
int	linux_sys_lchown(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
int	sys_geteuid(struct proc *, void *, register_t *);
int	sys_getegid(struct proc *, void *, register_t *);
int	linux_sys_setreuid(struct proc *, void *, register_t *);
int	linux_sys_setregid(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	linux_sys_fchown(struct proc *, void *, register_t *);
int	linux_sys_setresuid(struct proc *, void *, register_t *);
int	linux_sys_getresuid(struct proc *, void *, register_t *);
int	linux_sys_setresgid(struct proc *, void *, register_t *);
int	linux_sys_getresgid(struct proc *, void *, register_t *);
int	linux_sys_chown(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	sys_setgid(struct proc *, void *, register_t *);
int	linux_sys_setfsuid(struct proc *, void *, register_t *);
int	linux_sys_setfsgid(struct proc *, void *, register_t *);
int	linux_sys_pivot_root(struct proc *, void *, register_t *);
int	linux_sys_mincore(struct proc *, void *, register_t *);
int	linux_sys_madvise(struct proc *, void *, register_t *);
int	linux_sys_getdents64(struct proc *, void *, register_t *);
int	linux_sys_fcntl64(struct proc *, void *, register_t *);
@


1.14.2.7
log
@Sync the SMP branch with 3.3
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.36 2002/10/30 20:10:48 millert Exp 
d410 3
a412 9
	syscallarg(u_int16_t) ruid;
	syscallarg(u_int16_t) euid;
	syscallarg(u_int16_t) suid;
};

struct linux_sys_getresuid16_args {
	syscallarg(u_int16_t *) ruid;
	syscallarg(u_int16_t *) euid;
	syscallarg(u_int16_t *) suid;
d416 3
a418 3
	syscallarg(u_int16_t) rgid;
	syscallarg(u_int16_t) egid;
	syscallarg(u_int16_t) sgid;
d422 3
a424 3
	syscallarg(u_int16_t *) rgid;
	syscallarg(u_int16_t *) egid;
	syscallarg(u_int16_t *) sgid;
d510 6
a519 6
struct linux_sys_getdents64_args {
	syscallarg(int) fd;
	syscallarg(void *) dirent;
	syscallarg(unsigned) count;
};

d550 1
a550 1
int	linux_sys_getpid(struct proc *, void *, register_t *);
d554 1
a554 1
int	linux_sys_getuid(struct proc *, void *, register_t *);
d580 1
a580 1
int	linux_sys_getgid(struct proc *, void *, register_t *);
d710 1
a710 1
int	linux_sys_getresuid16(struct proc *, void *, register_t *);
d744 2
a745 2
int	linux_sys_getuid(struct proc *, void *, register_t *);
int	linux_sys_getgid(struct proc *, void *, register_t *);
d753 4
a756 4
int	sys_setresuid(struct proc *, void *, register_t *);
int	sys_getresuid(struct proc *, void *, register_t *);
int	sys_setresgid(struct proc *, void *, register_t *);
int	sys_getresgid(struct proc *, void *, register_t *);
@


1.14.2.8
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_syscallargs.h,v 1.14.2.7 2003/03/27 23:53:47 niklas Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.37 2003/05/10 17:53:57 miod Exp 
d626 1
a626 1
int	compat_25_sys_swapon(struct proc *, void *, register_t *);
@


1.14.2.9
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.45 2003/09/04 02:57:22 tedu Exp 
a298 4
struct linux_sys_sysinfo_args {
	syscallarg(struct linux_sys_sysinfo_args *) sysinfo;
};

a495 9
struct linux_sys_mmap2_args {
	syscallarg(unsigned long) addr;
	syscallarg(size_t) len;
	syscallarg(int) prot;
	syscallarg(int) flags;
	syscallarg(int) fd;
	syscallarg(linux_off_t) offset;
};

a500 5
struct linux_sys_ftruncate64_args {
	syscallarg(int) fd;
	syscallarg(off_t) length;
};

d745 1
a745 1
int	linux_sys_ftruncate64(struct proc *, void *, register_t *);
a772 14
int	linux_sys_setxattr(struct proc *, void *, register_t *);
int	linux_sys_lsetxattr(struct proc *, void *, register_t *);
int	linux_sys_fsetxattr(struct proc *, void *, register_t *);
int	linux_sys_getxattr(struct proc *, void *, register_t *);
int	linux_sys_lgetxattr(struct proc *, void *, register_t *);
int	linux_sys_fgetxattr(struct proc *, void *, register_t *);
int	linux_sys_listxattr(struct proc *, void *, register_t *);
int	linux_sys_llistxattr(struct proc *, void *, register_t *);
int	linux_sys_flistxattr(struct proc *, void *, register_t *);
int	linux_sys_removexattr(struct proc *, void *, register_t *);
int	linux_sys_lremovexattr(struct proc *, void *, register_t *);
int	linux_sys_fremovexattr(struct proc *, void *, register_t *);
int	linux_sys_fadvise64(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
@


1.14.2.10
log
@Merge with the trunk
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.47 2004/05/28 18:28:14 tedu Exp 
a607 1
#ifdef ACCOUNTING
a608 2
#else
#endif
d788 1
a788 1
int	sys_madvise(struct proc *, void *, register_t *);
@


1.13
log
@sync
@
text
@d1 2
d80 4
d380 1
@


1.12
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.12 1997/11/13 18:35:27 deraadt Exp 
d480 1
@


1.11
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.11 1997/07/28 10:21:31 deraadt Exp 
a326 6
struct linux_sys_msync_args {
	syscallarg(caddr_t) addr;
	syscallarg(int) len;
	syscallarg(int) fl;
};

d472 1
a472 1
int	linux_sys_msync	__P((struct proc *, void *, register_t *));
@


1.10
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.10 1997/07/28 10:19:35 deraadt Exp 
d345 1
a345 1
struct sys_mremap_args {
d486 1
a486 1
int	sys_mremap	__P((struct proc *, void *, register_t *));
@


1.9
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.9 1997/07/27 21:01:37 deraadt Exp 
d345 1
a345 1
struct mremap_args {
d486 1
a486 1
int	mremap	__P((struct proc *, void *, register_t *));
@


1.8
log
@#34 - linux_sys_nice from NetBSD
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.7 1996/05/22 12:01:51 deraadt Exp 
d345 7
d486 1
@


1.7
log
@Added Makefiles to build stuff from syscalls.master in some emulations.
Regenerated derived files from various syscalls.master files. Added $OpenBSD$.
@
text
@a0 2
/*	$OpenBSD$	*/

d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.5 1996/04/28 07:38:24 etheisen Exp 
d92 4
d377 1
@


1.6
log
@sync
@
text
@d1 2
@


1.5
log
@Reran makesyscalls.sh for addition of Linux dummy mount/umount() syscalls.
Fixed OpenBSD tag damage during previous checkin.
@
text
@d329 12
d469 5
@


1.4
log
@Good fixes and changes from latest Net.
@
text
@a0 1
/*	$OpenBSD$	*/
d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.15 1995/12/18 14:35:10 fvdl Exp 
d66 12
d353 2
@


1.3
log
@from fvdl; add msync(), readv() and writev()
@
text
@d1 1
@


1.2
log
@update from netbsd
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.14 1995/12/09 04:01:47 mycroft Exp 
d311 6
d440 3
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.13 1995/10/07 06:27:15 mycroft Exp 
d317 1
a317 1
int	linux_sys_fork	__P((struct proc *, void *, register_t *));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
