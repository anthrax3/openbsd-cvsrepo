head	1.10;
access;
symbols
	OPENBSD_5_9:1.9.0.18
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.20
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.12
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.16
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.38
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.36
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.32
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.34
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.30
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.28
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.26
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.24
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.22
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.20
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.18
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.16
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.14
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.12
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.10
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.8
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.4
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2016.03.02.15.41.48;	author naddy;	state dead;
branches;
next	1.9;
commitid	ZfNt0OHZhMg52abA;

1.9
date	2011.04.05.22.54.31;	author pirofti;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.01.26.50;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.09.14.15.22;	author niklas;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2001.07.27.06.10.38;	author csapuntz;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.07.14.11.38;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.08.03.35.29;	author jasoni;	state Exp;
branches;
next	1.3;

1.3
date	97.06.02.09.42.13;	author deraadt;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	96.04.17.05.24.00;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.19;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.19;	author deraadt;	state Exp;
branches;
next	;

1.3.12.1
date	2000.03.24.09.09.03;	author niklas;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2001.05.14.22.04.49;	author niklas;	state Exp;
branches;
next	1.3.12.3;

1.3.12.3
date	2001.10.31.03.11.46;	author nate;	state Exp;
branches;
next	1.3.12.4;

1.3.12.4
date	2002.03.28.11.28.06;	author niklas;	state Exp;
branches;
next	;

1.7.4.1
date	2002.06.11.03.28.08;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@remove the Linux emulation code, no longer referenced by anything
@
text
@/*	$OpenBSD: linux_signal.h,v 1.9 2011/04/05 22:54:31 pirofti Exp $	*/
/* 	$NetBSD: linux_signal.h,v 1.4 1995/08/27 20:51:51 fvdl Exp $	*/

/*
 * Copyright (c) 1995 Frank van der Linden
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed for the NetBSD Project
 *      by Frank van der Linden
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _LINUX_SIGNAL_H_
#define _LINUX_SIGNAL_H_

#define LINUX_SIGHUP	 1
#define LINUX_SIGINT	 2
#define LINUX_SIGQUIT	 3
#define LINUX_SIGILL	 4
#define LINUX_SIGTRAP	 5
#define LINUX_SIGABRT	 6
#define LINUX_SIGIOT	 6
#define LINUX_SIGBUS	 7
#define LINUX_SIGFPE	 8
#define LINUX_SIGKILL	 9
#define LINUX_SIGUSR1	10
#define LINUX_SIGSEGV	11
#define LINUX_SIGUSR2	12
#define LINUX_SIGPIPE	13
#define LINUX_SIGALRM	14
#define LINUX_SIGTERM	15
#define LINUX_SIGSTKFLT	16
#define LINUX_SIGCHLD	17
#define LINUX_SIGCONT	18
#define LINUX_SIGSTOP	19
#define LINUX_SIGTSTP	20
#define LINUX_SIGTTIN	21
#define LINUX_SIGTTOU	22
#define LINUX_SIGURG	23
#define LINUX_SIGXCPU	24
#define LINUX_SIGXFSZ	25
#define LINUX_SIGVTALRM	26
#define LINUX_SIGPROF	27
#define LINUX_SIGWINCH	28
#define LINUX_SIGIO	29
#define LINUX_SIGPWR	30
#define LINUX_SIGUNUSED	31
#define LINUX_NSIG	32

#define LINUX__NSIG 		64
#define LINUX__NSIG_BPW		32
#define LINUX__NSIG_WORDS	(LINUX__NSIG / LINUX__NSIG_BPW)

#define LINUX_SIG_BLOCK		0
#define LINUX_SIG_UNBLOCK	1
#define LINUX_SIG_SETMASK	2

typedef u_long	linux_old_sigset_t;
typedef struct {
	u_long sig[LINUX__NSIG_WORDS];
} linux_sigset_t;

typedef void	(*linux_handler_t)(int);

struct linux_old_sigaction {
	linux_handler_t		sa__handler;
	linux_old_sigset_t	sa_mask;
	u_long			sa_flags;
	void			(*sa_restorer)(void);
};

struct linux_sigaction {
	linux_handler_t		sa__handler;
	u_long			sa_flags;
	void			(*sa_restorer)(void);
	linux_sigset_t		sa_mask;
};

/* sa_flags */
#define LINUX_SA_NOCLDSTOP	0x00000001
#define LINUX_SA_SIGINFO	0x00000004
#define LINUX_SA_ONSTACK	0x08000000
#define LINUX_SA_RESTART	0x10000000
#define LINUX_SA_INTERRUPT	0x20000000
#define LINUX_SA_NOMASK		0x40000000
#define LINUX_SA_ONESHOT	0x80000000
#define LINUX_SA_ALLBITS	0xf8000001

struct linux_sigaltstack {
	void	*ss_sp;
	int	ss_flags;
	size_t	ss_size;
};

/* ss_flags */
#define LINUX_SS_ONSTACK	0x00000001
#define LINUX_SS_DISABLE	0x00000002

extern int bsd_to_linux_sig[];
extern int linux_to_bsd_sig[];

void linux_old_to_bsd_sigset(const linux_old_sigset_t *, sigset_t *);
void bsd_to_linux_old_sigset(const sigset_t *, linux_old_sigset_t *);

void linux_old_extra_to_bsd_sigset(const linux_old_sigset_t *,
    const unsigned long *, sigset_t *);
void bsd_to_linux_old_extra_sigset(const sigset_t *,
    linux_old_sigset_t *, unsigned long *);

void linux_to_bsd_sigset(const linux_sigset_t *, sigset_t *);
void bsd_to_linux_sigset(const sigset_t *, linux_sigset_t *);

void linux_old_to_bsd_sigaction(struct linux_old_sigaction *, 
    struct sigaction *);
void bsd_to_linux_old_sigaction(struct sigaction *, 
    struct linux_old_sigaction *);

void linux_to_bsd_sigaction(struct linux_sigaction *,
    struct sigaction *);
void bsd_to_linux_sigaction(struct sigaction *,
    struct linux_sigaction *);

int  linux_to_bsd_signal (int, int *);
int  bsd_to_linux_signal (int, int *);

#endif /* !_LINUX_SIGNAL_H_ */
@


1.9
log
@Unify header sentinel names.
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_signal.h,v 1.8 2002/03/14 01:26:50 millert Exp $	*/
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_signal.h,v 1.7 2001/08/09 14:15:22 niklas Exp $	*/
d35 2
a36 2
#ifndef _LINUX_SIGNAL_H
#define _LINUX_SIGNAL_H
d148 1
a148 1
#endif /* !_LINUX_SIGNAL_H */
@


1.7
log
@Correct linux-compat sigaltstack implementation.
Helps HotSpot Java VMs a bit, but not totally.  I can at least run javac
on J2SE 1.4beta with good results, but anything that uses swing seems to
fail on something else.
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_signal.h,v 1.6 2001/07/27 06:10:38 csapuntz Exp $	*/
d85 1
a85 1
typedef void	(*linux_handler_t) __P((int));
d91 1
a91 1
	void			(*sa_restorer) __P((void));
d97 1
a97 1
	void			(*sa_restorer) __P((void));
d124 2
a125 2
void linux_old_to_bsd_sigset __P((const linux_old_sigset_t *, sigset_t *));
void bsd_to_linux_old_sigset __P((const sigset_t *, linux_old_sigset_t *));
d127 17
a143 17
void linux_old_extra_to_bsd_sigset __P((const linux_old_sigset_t *,
    const unsigned long *, sigset_t *));
void bsd_to_linux_old_extra_sigset __P((const sigset_t *,
    linux_old_sigset_t *, unsigned long *));

void linux_to_bsd_sigset __P((const linux_sigset_t *, sigset_t *));
void bsd_to_linux_sigset __P((const sigset_t *, linux_sigset_t *));

void linux_old_to_bsd_sigaction __P((struct linux_old_sigaction *, 
    struct sigaction *));
void bsd_to_linux_old_sigaction __P((struct sigaction *, 
    struct linux_old_sigaction *));

void linux_to_bsd_sigaction __P((struct linux_sigaction *,
    struct sigaction *));
void bsd_to_linux_sigaction __P((struct sigaction *,
    struct linux_sigaction *));
@


1.7.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_signal.h,v 1.7 2001/08/09 14:15:22 niklas Exp $	*/
d85 1
a85 1
typedef void	(*linux_handler_t)(int);
d91 1
a91 1
	void			(*sa_restorer)(void);
d97 1
a97 1
	void			(*sa_restorer)(void);
d124 2
a125 2
void linux_old_to_bsd_sigset(const linux_old_sigset_t *, sigset_t *);
void bsd_to_linux_old_sigset(const sigset_t *, linux_old_sigset_t *);
d127 17
a143 17
void linux_old_extra_to_bsd_sigset(const linux_old_sigset_t *,
    const unsigned long *, sigset_t *);
void bsd_to_linux_old_extra_sigset(const sigset_t *,
    linux_old_sigset_t *, unsigned long *);

void linux_to_bsd_sigset(const linux_sigset_t *, sigset_t *);
void bsd_to_linux_sigset(const sigset_t *, linux_sigset_t *);

void linux_old_to_bsd_sigaction(struct linux_old_sigaction *, 
    struct sigaction *);
void bsd_to_linux_old_sigaction(struct sigaction *, 
    struct linux_old_sigaction *);

void linux_to_bsd_sigaction(struct linux_sigaction *,
    struct sigaction *);
void bsd_to_linux_sigaction(struct sigaction *,
    struct linux_sigaction *);
@


1.6
log
@

Convert array lookups to function calls that are bounds checked
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_signal.h,v 1.5 2000/06/07 14:11:38 niklas Exp $	*/
d116 4
@


1.5
log
@Implement sigaltstack
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_signal.h,v 1.4 2000/03/08 03:35:29 jasoni Exp $	*/
d140 3
@


1.4
log
@Add support for the new sigset_t and sigaction.
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_signal.h,v 1.3 1997/06/02 09:42:13 deraadt Exp $	*/
d69 1
d93 1
d110 6
@


1.3
log
@rename sa_handler to sa__handler
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_signal.h,v 1.2 1996/04/17 05:24:00 mickey Exp $	*/
d71 4
d79 5
a83 1
typedef u_long	linux_sigset_t;
d86 6
d93 4
a96 4
	linux_handler_t	sa__handler;
	linux_sigset_t	sa_mask;
	u_long		sa_flags;
	void		(*sa_restorer) __P((void));
d101 1
d107 1
d111 21
@


1.3.12.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a70 4
#define LINUX__NSIG 		64
#define LINUX__NSIG_BPW		32
#define LINUX__NSIG_WORDS	(LINUX__NSIG / LINUX__NSIG_BPW)

d75 1
a75 5
typedef u_long	linux_old_sigset_t;
typedef struct {
	u_long sig[LINUX__NSIG_WORDS];
} linux_sigset_t;

a77 6
struct linux_old_sigaction {
	linux_handler_t		sa__handler;
	linux_old_sigset_t	sa_mask;
	u_long			sa_flags;
	void			(*sa_restorer) __P((void));
};
d79 4
a82 4
	linux_handler_t		sa__handler;
	u_long			sa_flags;
	void			(*sa_restorer) __P((void));
	linux_sigset_t		sa_mask;
a86 1
#define LINUX_SA_SIGINFO	0x00000004
a91 1
#define LINUX_SA_ALLBITS	0xf8000001
a94 21

void linux_old_to_bsd_sigset __P((const linux_old_sigset_t *, sigset_t *));
void bsd_to_linux_old_sigset __P((const sigset_t *, linux_old_sigset_t *));

void linux_old_extra_to_bsd_sigset __P((const linux_old_sigset_t *,
    const unsigned long *, sigset_t *));
void bsd_to_linux_old_extra_sigset __P((const sigset_t *,
    linux_old_sigset_t *, unsigned long *));

void linux_to_bsd_sigset __P((const linux_sigset_t *, sigset_t *));
void bsd_to_linux_sigset __P((const sigset_t *, linux_sigset_t *));

void linux_old_to_bsd_sigaction __P((struct linux_old_sigaction *, 
    struct sigaction *));
void bsd_to_linux_old_sigaction __P((struct sigaction *, 
    struct linux_old_sigaction *));

void linux_to_bsd_sigaction __P((struct linux_sigaction *,
    struct sigaction *));
void bsd_to_linux_sigaction __P((struct sigaction *,
    struct linux_sigaction *));
@


1.3.12.2
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_signal.h,v 1.5 2000/06/07 14:11:38 niklas Exp $	*/
a68 1
#define LINUX_SIGUNUSED	31
a91 1

a107 6

struct linux_sigaltstack {
	void	*ss_sp;
	int	ss_flags;
	size_t	ss_size;
};
@


1.3.12.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_signal.h,v 1.3.12.2 2001/05/14 22:04:49 niklas Exp $	*/
a116 4
/* ss_flags */
#define LINUX_SS_ONSTACK	0x00000001
#define LINUX_SS_DISABLE	0x00000002

a139 3

int  linux_to_bsd_signal (int, int *);
int  bsd_to_linux_signal (int, int *);
@


1.3.12.4
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d85 1
a85 1
typedef void	(*linux_handler_t)(int);
d91 1
a91 1
	void			(*sa_restorer)(void);
d97 1
a97 1
	void			(*sa_restorer)(void);
d124 2
a125 2
void linux_old_to_bsd_sigset(const linux_old_sigset_t *, sigset_t *);
void bsd_to_linux_old_sigset(const sigset_t *, linux_old_sigset_t *);
d127 17
a143 17
void linux_old_extra_to_bsd_sigset(const linux_old_sigset_t *,
    const unsigned long *, sigset_t *);
void bsd_to_linux_old_extra_sigset(const sigset_t *,
    linux_old_sigset_t *, unsigned long *);

void linux_to_bsd_sigset(const linux_sigset_t *, sigset_t *);
void bsd_to_linux_sigset(const sigset_t *, linux_sigset_t *);

void linux_old_to_bsd_sigaction(struct linux_old_sigaction *, 
    struct sigaction *);
void bsd_to_linux_old_sigaction(struct sigaction *, 
    struct linux_old_sigaction *);

void linux_to_bsd_sigaction(struct linux_sigaction *,
    struct sigaction *);
void bsd_to_linux_sigaction(struct sigaction *,
    struct linux_sigaction *);
@


1.2
log
@Good fixes and changes from latest Net.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d79 1
a79 1
	linux_handler_t	sa_handler;
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
