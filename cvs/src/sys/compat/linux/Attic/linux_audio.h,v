head	1.4;
access;
symbols
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	UBC_SYNC_A:1.4
	UBC_SYNC_B:1.4
	SMP:1.4.0.2
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	98.04.26.21.22.27;	author provos;	state dead;
branches;
next	1.3;

1.3
date	96.09.16.15.34.28;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.04.18.21.21.38;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.03.08.23.43.03;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@use osscompat for audio emulation.
@
text
@/*	$OpenBSD: linux_audio.h,v 1.3 1996/09/16 15:34:28 mickey Exp $	*/

#define LINUX_IOCPARM_MASK    0x7f            /* parameters must be < 128 bytes */
#define LINUX_IOC_VOID        0x00000000      /* no parameters */
#define LINUX_IOC_IN          0x40000000      /* copy in parameters */
#define LINUX_IOC_OUT         0x80000000      /* copy out parameters */
#define LINUX_IOC_INOUT       (LINUX_IOC_IN | LINUX_IOC_OUT)
#define	_LINUX_IOCTL(w,x,y,z) ((int)((w)|(((z)&LINUX_IOCPARM_MASK)<<16)|((x)<<8)|(y)))
#if 0
#define _LINUX_IO(x,y)        _LINUX_IOCTL(LINUX_IOC_VOID, x, y, 0)
#endif
#define _LINUX_IOR(x,y,t)     _LINUX_IOCTL(LINUX_IOC_OUT, x, y, sizeof(t))
#define _LINUX_IOW(x,y,t)     _LINUX_IOCTL(LINUX_IOC_IN, x, y, sizeof(t))
#define _LINUX_IOWR(x,y,t)    _LINUX_IOCTL(LINUX_IOC_INOUT, x, y, sizeof(t))

#define	LINUX_SNDCTL_DSP_RESET		_LINUX_IO('P', 0)
#define	LINUX_SNDCTL_DSP_SYNC		_LINUX_IO('P', 1)
#define	LINUX_SNDCTL_DSP_SPEED		_LINUX_IOWR('P', 2, int)
#define	LINUX_SNDCTL_DSP_STEREO		_LINUX_IOWR('P', 3, int)
#define	LINUX_SNDCTL_DSP_GETBLKSIZE	_LINUX_IOWR('P', 4, int)
#define	LINUX_SNDCTL_DSP_SETFMT		_LINUX_IOWR('P', 5, int)
#define	LINUX_SNDCTL_DSP_WRITE_CHANNELS	_LINUX_IOWR('P', 6, int)
#define	LINUX_SNDCTL_DSP_POST		_LINUX_IO('P', 8)
#define	LINUX_SNDCTL_DSP_SETFRAGMENT	_LINUX_IOWR('P', 10, int)
#define	LINUX_SNDCTL_DSP_GETFMTS	_LINUX_IOR('P', 11, int)

#define	LINUX_AFMT_QUERY		0x00000000	/* Return current fmt */
#define	LINUX_AFMT_MU_LAW		0x00000001
#define	LINUX_AFMT_A_LAW		0x00000002
#define	LINUX_AFMT_IMA_ADPCM		0x00000004
#define	LINUX_AFMT_U8			0x00000008
#define	LINUX_AFMT_S16_LE		0x00000010	/* Little endian signed 16 */
#define	LINUX_AFMT_S16_BE		0x00000020	/* Big endian signed 16 */
#define	LINUX_AFMT_S8			0x00000040
#define	LINUX_AFMT_U16_LE		0x00000080	/* Little endian U16 */
#define	LINUX_AFMT_U16_BE		0x00000100	/* Big endian U16 */
#define	LINUX_AFMT_MPEG			0x00000200	/* MPEG (2) audio */
#define LINUX_IOCPARM_MASK    0x7f            /* parameters must be < 128 bytes */
#define LINUX_IOC_VOID        0x00000000      /* no parameters */
#define LINUX_IOC_IN          0x40000000      /* copy in parameters */
#define LINUX_IOC_OUT         0x80000000      /* copy out parameters */
#define LINUX_IOC_INOUT       (LINUX_IOC_IN | LINUX_IOC_OUT)
#define	_LINUX_IOCTL(w,x,y,z) ((int)((w)|(((z)&LINUX_IOCPARM_MASK)<<16)|((x)<<8)|(y)))
#if 0
#define _LINUX_IO(x,y)        _LINUX_IOCTL(LINUX_IOC_VOID, x, y, 0)
#endif
#define _LINUX_IOR(x,y,t)     _LINUX_IOCTL(LINUX_IOC_OUT, x, y, sizeof(t))
#define _LINUX_IOW(x,y,t)     _LINUX_IOCTL(LINUX_IOC_IN, x, y, sizeof(t))
#define _LINUX_IOWR(x,y,t)    _LINUX_IOCTL(LINUX_IOC_INOUT, x, y, sizeof(t))

#define	LINUX_SNDCTL_DSP_RESET		_LINUX_IO('P', 0)
#define	LINUX_SNDCTL_DSP_SYNC		_LINUX_IO('P', 1)
#define	LINUX_SNDCTL_DSP_SPEED		_LINUX_IOWR('P', 2, int)
#define	LINUX_SNDCTL_DSP_STEREO		_LINUX_IOWR('P', 3, int)
#define	LINUX_SNDCTL_DSP_GETBLKSIZE	_LINUX_IOWR('P', 4, int)
#define	LINUX_SNDCTL_DSP_SETFMT		_LINUX_IOWR('P', 5, int)
#define	LINUX_SNDCTL_DSP_POST		_LINUX_IO('P', 8)
#define	LINUX_SNDCTL_DSP_SETFRAGMENT	_LINUX_IOWR('P', 10, int)
#define	LINUX_SNDCTL_DSP_GETFMTS	_LINUX_IOR('P', 11, int)

#define	LINUX_AFMT_QUERY		0x00000000	/* Return current fmt */
#define	LINUX_AFMT_MU_LAW		0x00000001
#define	LINUX_AFMT_A_LAW		0x00000002
#define	LINUX_AFMT_IMA_ADPCM		0x00000004
#define	LINUX_AFMT_U8			0x00000008
#define	LINUX_AFMT_S16_LE		0x00000010	/* Little endian signed 16 */
#define	LINUX_AFMT_S16_BE		0x00000020	/* Big endian signed 16 */
#define	LINUX_AFMT_S8			0x00000040
#define	LINUX_AFMT_U16_LE		0x00000080	/* Little endian U16 */
#define	LINUX_AFMT_U16_BE		0x00000100	/* Big endian U16 */
#define	LINUX_AFMT_MPEG			0x00000200	/* MPEG (2) audio */
@


1.3
log
@the linux realaudio doesn't work on netbsd under emulation.
from netbsd-pr port-i386/2581 <sommerfeld@@orchard.medford.ma.us>
@
text
@d1 1
a1 1
/*	$OpenBSD: linux_audio.h,v 1.2 1996/04/18 21:21:38 niklas Exp $	*/
@


1.2
log
@Merge of NetBSD 960317
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d22 1
@


1.1
log
@From NetBSD:
linux compatibility changes.
@
text
@d1 36
@
