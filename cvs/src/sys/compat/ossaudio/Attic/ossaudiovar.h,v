head	1.7;
access;
symbols
	OPENBSD_5_7:1.5.0.24
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.28
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.26
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.22
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.20
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.18
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.16
	OPENBSD_5_0:1.5.0.14
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.12
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.10
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.6
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.3.0.38
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.36
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.34
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.32
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.30
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.28
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.26
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.24
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.22
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.20
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.18
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.16
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.14
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.12
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.10
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.8
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.2
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OSSAUDIO10:1.1.1.1
	OSSAUDIO:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.04.22.20.29.56;	author ratchov;	state dead;
branches;
next	1.6;
commitid	esXugUjr2iRPCC8W;

1.6
date	2015.04.19.08.37.32;	author ratchov;	state Exp;
branches;
next	1.5;
commitid	unw3OnGpzw8vZhb9;

1.5
date	2008.06.26.05.42.14;	author ray;	state Exp;
branches;
next	1.4;

1.4
date	2008.04.12.22.53.20;	author jakemsr;	state Exp;
branches;
next	1.3;

1.3
date	99.11.20.18.52.00;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	98.04.26.22.15.45;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	98.04.26.21.39.10;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.04.26.21.39.10;	author provos;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Remove forgotten empty files, from miod, thanks
@
text
@@


1.6
log
@Remove emulation of oss audio ioctls from linux emulation.

ok armani, guenther, sthen
@
text
@@


1.5
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@a0 163
/*	$OpenBSD: ossaudiovar.h,v 1.4 2008/04/12 22:53:20 jakemsr Exp $	*/
/*	$NetBSD: ossaudiovar.h,v 1.4 1997/10/16 16:49:40 augustss Exp $	*/

/*
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

struct oss_sys_ioctl_args {
	syscallarg(int) fd;
	syscallarg(u_long) com;
	syscallarg(caddr_t) data;
};

#define OSS_IOCPARM_MASK    0x7f            /* parameters must be < 128 bytes */
#define OSS_IOC_VOID        0x00000000      /* no parameters */
#define OSS_IOC_IN          0x40000000      /* copy in parameters */
#define OSS_IOC_OUT         0x80000000      /* copy out parameters */
#define OSS_IOC_INOUT       (OSS_IOC_IN | OSS_IOC_OUT)
#define	_OSS_IOCTL(w,x,y,z) ((u_long)((w)|(((z)&OSS_IOCPARM_MASK)<<16)|((x)<<8)|(y)))
#define _OSS_IO(x,y)        _OSS_IOCTL(OSS_IOC_VOID, x, y, 0)
#define _OSS_IOR(x,y,t)     _OSS_IOCTL(OSS_IOC_OUT, x, y, sizeof(t))
#define _OSS_IOW(x,y,t)     _OSS_IOCTL(OSS_IOC_IN, x, y, sizeof(t))
#define _OSS_IOWR(x,y,t)    _OSS_IOCTL(OSS_IOC_INOUT, x, y, sizeof(t))

#define	OSS_SNDCTL_DSP_RESET		_OSS_IO  ('P', 0)
#define	OSS_SNDCTL_DSP_SYNC		_OSS_IO  ('P', 1)
#define	OSS_SNDCTL_DSP_SPEED		_OSS_IOWR('P', 2, int)
#define	OSS_SOUND_PCM_READ_RATE		_OSS_IOR ('P', 2, int)
#define	OSS_SNDCTL_DSP_STEREO		_OSS_IOWR('P', 3, int)
#define	OSS_SNDCTL_DSP_GETBLKSIZE	_OSS_IOWR('P', 4, int)
#define	OSS_SNDCTL_DSP_SETFMT		_OSS_IOWR('P', 5, int)
#define	OSS_SOUND_PCM_READ_BITS		_OSS_IOR ('P', 5, int)
#define	OSS_SNDCTL_DSP_CHANNELS		_OSS_IOWR('P', 6, int)
#define	OSS_SOUND_PCM_READ_CHANNELS	_OSS_IOR ('P', 6, int)
#define OSS_SOUND_PCM_WRITE_FILTER	_OSS_IOWR('P', 7, int)
#define OSS_SOUND_PCM_READ_FILTER	_OSS_IOR ('P', 7, int)
#define	OSS_SNDCTL_DSP_POST		_OSS_IO  ('P', 8)
#define OSS_SNDCTL_DSP_SUBDIVIDE	_OSS_IOWR('P', 9, int)
#define	OSS_SNDCTL_DSP_SETFRAGMENT	_OSS_IOWR('P', 10, int)
#define	OSS_SNDCTL_DSP_GETFMTS		_OSS_IOR ('P', 11, int)
#define OSS_SNDCTL_DSP_GETOSPACE	_OSS_IOR ('P',12, struct oss_audio_buf_info)
#define OSS_SNDCTL_DSP_GETISPACE	_OSS_IOR ('P',13, struct oss_audio_buf_info)
#define OSS_SNDCTL_DSP_NONBLOCK		_OSS_IO  ('P',14)
#define OSS_SNDCTL_DSP_GETCAPS		_OSS_IOR ('P',15, int)
# define OSS_DSP_CAP_REVISION		0x000000ff
# define OSS_DSP_CAP_DUPLEX		0x00000100
# define OSS_DSP_CAP_REALTIME		0x00000200
# define OSS_DSP_CAP_BATCH		0x00000400
# define OSS_DSP_CAP_COPROC		0x00000800
# define OSS_DSP_CAP_TRIGGER		0x00001000
# define OSS_DSP_CAP_MMAP		0x00002000
#define OSS_SNDCTL_DSP_GETTRIGGER	_OSS_IOR ('P', 16, int)
#define OSS_SNDCTL_DSP_SETTRIGGER	_OSS_IOW ('P', 16, int)
# define OSS_PCM_ENABLE_INPUT		0x00000001
# define OSS_PCM_ENABLE_OUTPUT		0x00000002
#define OSS_SNDCTL_DSP_GETIPTR		_OSS_IOR ('P', 17, struct oss_count_info)
#define OSS_SNDCTL_DSP_GETOPTR		_OSS_IOR ('P', 18, struct oss_count_info)
#define OSS_SNDCTL_DSP_MAPINBUF		_OSS_IOR ('P', 19, struct oss_buffmem_desc)
#define OSS_SNDCTL_DSP_MAPOUTBUF	_OSS_IOR ('P', 20, struct oss_buffmem_desc)
#define OSS_SNDCTL_DSP_SETSYNCRO	_OSS_IO  ('P', 21)
#define OSS_SNDCTL_DSP_SETDUPLEX	_OSS_IO  ('P', 22)
#define OSS_SNDCTL_DSP_PROFILE		_OSS_IOW ('P', 23, int)
#define OSS_SNDCTL_DSP_GETODELAY	_OSS_IOR ('P', 24, int)
#define	  OSS_APF_NORMAL		0	/* Normal applications */
#define	  OSS_APF_NETWORK		1	/* "external" delays */
#define   OSS_APF_CPUINTENS		2	/* CPU delays */

#define	OSS_AFMT_QUERY			0x00000000	/* Return current fmt */
#define	OSS_AFMT_MU_LAW			0x00000001
#define	OSS_AFMT_A_LAW			0x00000002
#define	OSS_AFMT_IMA_ADPCM		0x00000004
#define	OSS_AFMT_U8			0x00000008
#define	OSS_AFMT_S16_LE			0x00000010	/* Little endian signed 16 */
#define	OSS_AFMT_S16_BE			0x00000020	/* Big endian signed 16 */
#define	OSS_AFMT_S8			0x00000040
#define	OSS_AFMT_U16_LE			0x00000080	/* Little endian U16 */
#define	OSS_AFMT_U16_BE			0x00000100	/* Big endian U16 */
#define	OSS_AFMT_MPEG			0x00000200	/* MPEG (2) audio */

/* Mixer defines */
#define OSS_SOUND_MIXER_FIRST		0
#define OSS_SOUND_MIXER_NRDEVICES	17

#define OSS_SOUND_MIXER_VOLUME		0
#define OSS_SOUND_MIXER_BASS		1
#define OSS_SOUND_MIXER_TREBLE		2
#define OSS_SOUND_MIXER_SYNTH		3
#define OSS_SOUND_MIXER_PCM		4
#define OSS_SOUND_MIXER_SPEAKER		5
#define OSS_SOUND_MIXER_LINE		6
#define OSS_SOUND_MIXER_MIC		7
#define OSS_SOUND_MIXER_CD		8
#define OSS_SOUND_MIXER_IMIX		9
#define OSS_SOUND_MIXER_ALTPCM		10
#define OSS_SOUND_MIXER_RECLEV		11
#define OSS_SOUND_MIXER_IGAIN		12
#define OSS_SOUND_MIXER_OGAIN		13
#define OSS_SOUND_MIXER_LINE1		14
#define OSS_SOUND_MIXER_LINE2		15
#define OSS_SOUND_MIXER_LINE3		16

#define OSS_SOUND_MIXER_RECSRC		0xff
#define OSS_SOUND_MIXER_DEVMASK		0xfe
#define OSS_SOUND_MIXER_RECMASK		0xfd
#define OSS_SOUND_MIXER_CAPS		0xfc
#define  OSS_SOUND_CAP_EXCL_INPUT	1
#define OSS_SOUND_MIXER_STEREODEVS	0xfb

#define OSS_MIXER_READ(dev)		_OSS_IOR('M', dev, int)

#define OSS_SOUND_MIXER_READ_RECSRC	OSS_MIXER_READ(OSS_SOUND_MIXER_RECSRC)
#define OSS_SOUND_MIXER_READ_DEVMASK	OSS_MIXER_READ(OSS_SOUND_MIXER_DEVMASK)
#define OSS_SOUND_MIXER_READ_RECMASK	OSS_MIXER_READ(OSS_SOUND_MIXER_RECMASK)
#define OSS_SOUND_MIXER_READ_STEREODEVS	OSS_MIXER_READ(OSS_SOUND_MIXER_STEREODEVS)
#define OSS_SOUND_MIXER_READ_CAPS	OSS_MIXER_READ(OSS_SOUND_MIXER_CAPS)

#define OSS_MIXER_WRITE(dev)		_OSS_IOW('M', dev, int)
#define OSS_MIXER_WRITE_R(dev)		_OSS_IOWR('M', dev, int)

#define OSS_SOUND_MIXER_WRITE_RECSRC	OSS_MIXER_WRITE(OSS_SOUND_MIXER_RECSRC)
#define OSS_SOUND_MIXER_WRITE_R_RECSRC	OSS_MIXER_WRITE_R(OSS_SOUND_MIXER_RECSRC)

#define OSS_GET_DEV(com) ((com) & 0xff)

struct oss_audio_buf_info {
	int fragments;
	int fragstotal;
	int fragsize;
	int bytes;
};

struct oss_count_info {
	int bytes;
	int blocks;
	int ptr;
};

struct oss_buffmem_desc {
	unsigned int *buffer;
	int size;
};
@


1.4
log
@bring in changes as found in libossaudio

ok ratchov@@, brad@@ a while ago (except SETTRIGGER parts, which changed
recently in libossaudio)
@
text
@d1 1
a1 1
/*	$OpenBSD: ossaudiovar.h,v 1.3 1999/11/20 18:52:00 espie Exp $	*/
a15 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.3
log
@ioctl arguments are u_long.
Replaces `undefined' code with `defined' behavior...

gcc 2.96 performs switch cases range analysis, warns about unreachable
cases, and weeds them out.

In

switch(i) {
case VALUE:
}

VALUE is first coerced into the type of i.  If i is signed, VALUE is
unsigned and exceeds i range, you lose... the result of the conversion
is undefined.
@
text
@d1 1
a1 1
/*	$OpenBSD: ossaudiovar.h,v 1.2 1998/04/26 22:15:45 provos Exp $	*/
d92 1
@


1.2
log
@$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d48 1
a48 1
#define	_OSS_IOCTL(w,x,y,z) ((int)((w)|(((z)&OSS_IOCPARM_MASK)<<16)|((x)<<8)|(y)))
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@2nd try: compat ossaudio from NetBSD mostly by
Lennart Augustsson <augustss@@cs.chalmers.se>
@
text
@@
