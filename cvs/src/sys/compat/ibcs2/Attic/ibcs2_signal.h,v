head	1.7;
access;
symbols
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.4
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.5.0.30
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.28
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.26
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.24
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.22
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.20
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.18
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.16
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.22
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.20
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.12
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2010.07.01.17.30.27;	author tedu;	state dead;
branches;
next	1.6;

1.6
date	2009.06.01.20.11.38;	author weingart;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.50;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.06.02.09.42.09;	author deraadt;	state Exp;
branches
	1.4.12.1
	1.4.22.1;
next	1.3;

1.3
date	96.08.02.20.35.09;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.05.07.08.49.01;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.16;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.16;	author deraadt;	state Exp;
branches;
next	;

1.4.12.1
date	2002.03.28.11.28.06;	author niklas;	state Exp;
branches;
next	;

1.4.22.1
date	2002.06.11.03.28.08;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@another day, another compat gets removed.  today is ibcs2's turn
@
text
@/*	$OpenBSD: ibcs2_signal.h,v 1.6 2009/06/01 20:11:38 weingart Exp $	*/
/*	$NetBSD: ibcs2_signal.h,v 1.8 1996/05/03 17:05:28 christos Exp $	*/

/*
 * Copyright (c) 1994, 1995 Scott Bartram
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Scott Bartram.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef	_IBCS2_SIGNAL_H
#define	_IBCS2_SIGNAL_H

#define IBCS2_SIGHUP		1
#define IBCS2_SIGINT		2
#define IBCS2_SIGQUIT		3
#define IBCS2_SIGILL		4
#define IBCS2_SIGTRAP		5
#define IBCS2_SIGIOT		6
#define IBCS2_SIGABRT		6
#define IBCS2_SIGEMT		7
#define IBCS2_SIGFPE		8
#define IBCS2_SIGKILL		9
#define IBCS2_SIGBUS		10
#define IBCS2_SIGSEGV		11
#define IBCS2_SIGSYS		12
#define IBCS2_SIGPIPE		13
#define IBCS2_SIGALRM		14
#define IBCS2_SIGTERM		15
#define IBCS2_SIGUSR1		16
#define IBCS2_SIGUSR2		17
#define IBCS2_SIGCLD		18
#define IBCS2_SIGPWR		19
#define IBCS2_SIGWINCH		20
#define IBCS2_SIGPOLL		22
#define IBCS2_NSIG		32

/*
 * SCO-specific
 */
#define IBCS2_SIGSTOP		23
#define IBCS2_SIGTSTP		24
#define IBCS2_SIGCONT		25
#define IBCS2_SIGTTIN		26
#define IBCS2_SIGTTOU		27
#define IBCS2_SIGVTALRM		28
#define IBCS2_SIGPROF		29

#define IBCS2_SIGNO_MASK	0x00FF
#define IBCS2_SIGNAL_MASK	0x0000
#define IBCS2_SIGSET_MASK	0x0100
#define IBCS2_SIGHOLD_MASK	0x0200
#define IBCS2_SIGRELSE_MASK	0x0400
#define IBCS2_SIGIGNORE_MASK	0x0800
#define IBCS2_SIGPAUSE_MASK	0x1000

#define IBCS2_SIGNO(x)		((x) & IBCS2_SIGNO_MASK)
#define IBCS2_SIGCALL(x)	((x) & ~IBCS2_SIGNO_MASK)

#define IBCS2_SIG_DFL		(void(*)(int))	0
#define IBCS2_SIG_ERR		(void(*)(int))	-1
#define IBCS2_SIG_IGN		(void(*)(int))	1
#define IBCS2_SIG_HOLD		(void(*)(int))	2

#define IBCS2_SIG_SETMASK	0
#define IBCS2_SIG_BLOCK		1
#define IBCS2_SIG_UNBLOCK	2

typedef long	ibcs2_sigset_t;
typedef void	(*ibcs2_sig_t)(int);

struct ibcs2_sigaction {
	ibcs2_sig_t	sa__handler;
	ibcs2_sigset_t	sa_mask;
	int		sa_flags;
};

/* sa_flags */
#define IBCS2_SA_NOCLDSTOP	1

void ibcs2_sendsig(sig_t, int, int, u_long, int, union sigval);

#endif /* _IBCS2_SIGNAL_H */
@


1.6
log
@Move ibcs2_sendsig into compat.  Quit poluting machdep.

Ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_signal.h,v 1.5 2002/03/14 01:26:50 millert Exp $	*/
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_signal.h,v 1.4 1997/06/02 09:42:09 deraadt Exp $	*/
d104 1
a104 1
extern int bsd_to_ibcs2_sig[];
@


1.4
log
@rename sa_handler to sa__handler
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_signal.h,v 1.3 1996/08/02 20:35:09 niklas Exp $	*/
d83 4
a86 4
#define IBCS2_SIG_DFL		(void(*) __P((int)))	0
#define IBCS2_SIG_ERR		(void(*) __P((int)))	-1
#define IBCS2_SIG_IGN		(void(*) __P((int)))	1
#define IBCS2_SIG_HOLD		(void(*) __P((int)))	2
d93 1
a93 1
typedef void	(*ibcs2_sig_t) __P((int));
@


1.4.22.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_signal.h,v 1.4 1997/06/02 09:42:09 deraadt Exp $	*/
d83 4
a86 4
#define IBCS2_SIG_DFL		(void(*)(int))	0
#define IBCS2_SIG_ERR		(void(*)(int))	-1
#define IBCS2_SIG_IGN		(void(*)(int))	1
#define IBCS2_SIG_HOLD		(void(*)(int))	2
d93 1
a93 1
typedef void	(*ibcs2_sig_t)(int);
@


1.4.12.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d83 4
a86 4
#define IBCS2_SIG_DFL		(void(*)(int))	0
#define IBCS2_SIG_ERR		(void(*)(int))	-1
#define IBCS2_SIG_IGN		(void(*)(int))	1
#define IBCS2_SIG_HOLD		(void(*)(int))	2
d93 1
a93 1
typedef void	(*ibcs2_sig_t)(int);
@


1.3
log
@Added Makefiles to build stuff from syscalls.master in some emulations.
Regenerated derived files from various syscalls.master files. Added $OpenBSD$.
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_signal.h,v 1.8 1996/05/03 17:05:28 christos Exp $	*/
d96 1
a96 1
	ibcs2_sig_t	sa_handler;
@


1.2
log
@sync with 0504; mostly proto changes (some svr4 ioctl changes)
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: ibcs2_signal.h,v 1.7 1995/08/14 02:26:01 mycroft Exp $	*/
d82 4
a85 4
#define IBCS2_SIG_DFL		(void(*)())0
#define IBCS2_SIG_ERR		(void(*)())-1
#define IBCS2_SIG_IGN		(void(*)())1
#define IBCS2_SIG_HOLD		(void(*)())2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
