head	1.13;
access;
symbols
	OPENBSD_4_7:1.12.0.8
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.10
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.6
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.4
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.2
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.11.0.14
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.12
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.10
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.8
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.10
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.8
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.10
	UBC:1.9.0.4
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.8
	OPENBSD_2_8:1.7.0.6
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.4
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.2
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.12
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.10
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.8
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.6
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2010.07.01.17.30.27;	author tedu;	state dead;
branches;
next	1.12;

1.12
date	2007.11.27.18.05.59;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2004.07.09.23.55.31;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.14.01.26.50;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.08.26.04.14.26;	author deraadt;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2001.05.16.05.05.10;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.11.20.18.52.00;	author espie;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	99.06.07.07.18.35;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.08.02.21.57.56;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.08.02.20.35.13;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.01.08.19.31.08;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.06.17.22.45;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.17;	author deraadt;	state Exp;
branches;
next	;

1.7.2.1
date	2001.07.04.10.39.19;	author niklas;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2001.10.31.03.11.46;	author nate;	state Exp;
branches;
next	1.7.2.3;

1.7.2.3
date	2002.03.28.11.28.06;	author niklas;	state Exp;
branches;
next	;

1.9.4.1
date	2002.06.11.03.28.08;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@another day, another compat gets removed.  today is ibcs2's turn
@
text
@/*	$OpenBSD: ibcs2_syscallargs.h,v 1.12 2007/11/27 18:05:59 art Exp $	*/

/*
 * System call argument lists.
 *
 * DO NOT EDIT-- this file is automatically generated.
 * created from	OpenBSD: syscalls.master,v 1.8 2002/03/14 03:16:03 millert Exp 
 */

#ifdef	syscallarg
#undef	syscallarg
#endif

#define	syscallarg(x)							\
	union {								\
		register_t pad;						\
		struct { x datum; } le;					\
		struct {						\
			int8_t pad[ (sizeof (register_t) < sizeof (x))	\
				? 0					\
				: sizeof (register_t) - sizeof (x)];	\
			x datum;					\
		} be;							\
	}

struct ibcs2_sys_read_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(u_int) nbytes;
};

struct ibcs2_sys_open_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
	syscallarg(int) mode;
};

struct ibcs2_sys_waitsys_args {
	syscallarg(int) a1;
	syscallarg(int) a2;
	syscallarg(int) a3;
};

struct ibcs2_sys_creat_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct ibcs2_sys_unlink_args {
	syscallarg(char *) path;
};

struct ibcs2_sys_execv_args {
	syscallarg(char *) path;
	syscallarg(char **) argp;
};

struct ibcs2_sys_chdir_args {
	syscallarg(char *) path;
};

struct ibcs2_sys_time_args {
	syscallarg(ibcs2_time_t *) tp;
};

struct ibcs2_sys_mknod_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
	syscallarg(int) dev;
};

struct ibcs2_sys_chmod_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct ibcs2_sys_chown_args {
	syscallarg(char *) path;
	syscallarg(int) uid;
	syscallarg(int) gid;
};

struct ibcs2_sys_stat_args {
	syscallarg(char *) path;
	syscallarg(struct ibcs2_stat *) st;
};

struct ibcs2_sys_mount_args {
	syscallarg(char *) special;
	syscallarg(char *) dir;
	syscallarg(int) flags;
	syscallarg(int) fstype;
	syscallarg(char *) data;
	syscallarg(int) len;
};

struct ibcs2_sys_umount_args {
	syscallarg(char *) name;
};

struct ibcs2_sys_setuid_args {
	syscallarg(int) uid;
};

struct ibcs2_sys_stime_args {
	syscallarg(long *) timep;
};

struct ibcs2_sys_alarm_args {
	syscallarg(unsigned) sec;
};

struct ibcs2_sys_fstat_args {
	syscallarg(int) fd;
	syscallarg(struct ibcs2_stat *) st;
};

struct ibcs2_sys_utime_args {
	syscallarg(char *) path;
	syscallarg(struct ibcs2_utimbuf *) buf;
};

struct ibcs2_sys_access_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
};

struct ibcs2_sys_nice_args {
	syscallarg(int) incr;
};

struct ibcs2_sys_statfs_args {
	syscallarg(char *) path;
	syscallarg(struct ibcs2_statfs *) buf;
	syscallarg(int) len;
	syscallarg(int) fstype;
};

struct ibcs2_sys_kill_args {
	syscallarg(int) pid;
	syscallarg(int) signo;
};

struct ibcs2_sys_fstatfs_args {
	syscallarg(int) fd;
	syscallarg(struct ibcs2_statfs *) buf;
	syscallarg(int) len;
	syscallarg(int) fstype;
};

struct ibcs2_sys_pgrpsys_args {
	syscallarg(int) type;
	syscallarg(caddr_t) dummy;
	syscallarg(int) pid;
	syscallarg(int) pgid;
};

struct ibcs2_sys_times_args {
	syscallarg(struct tms *) tp;
};

struct ibcs2_sys_plock_args {
	syscallarg(int) cmd;
};

struct ibcs2_sys_setgid_args {
	syscallarg(int) gid;
};

struct ibcs2_sys_sigsys_args {
	syscallarg(int) sig;
	syscallarg(ibcs2_sig_t) fp;
};

struct ibcs2_sys_msgsys_args {
	syscallarg(int) which;
	syscallarg(int) a2;
	syscallarg(int) a3;
	syscallarg(int) a4;
	syscallarg(int) a5;
	syscallarg(int) a6;
};

struct ibcs2_sys_sysi86_args {
	syscallarg(int) cmd;
	syscallarg(int) arg;
};

struct ibcs2_sys_shmsys_args {
	syscallarg(int) which;
	syscallarg(int) a2;
	syscallarg(int) a3;
	syscallarg(int) a4;
};

struct ibcs2_sys_semsys_args {
	syscallarg(int) which;
	syscallarg(int) a2;
	syscallarg(int) a3;
	syscallarg(int) a4;
	syscallarg(int) a5;
};

struct ibcs2_sys_ioctl_args {
	syscallarg(int) fd;
	syscallarg(int) cmd;
	syscallarg(caddr_t) data;
};

struct ibcs2_sys_uadmin_args {
	syscallarg(int) cmd;
	syscallarg(int) func;
	syscallarg(caddr_t) data;
};

struct ibcs2_sys_utssys_args {
	syscallarg(int) a1;
	syscallarg(int) a2;
	syscallarg(int) flag;
};

struct ibcs2_sys_execve_args {
	syscallarg(char *) path;
	syscallarg(char **) argp;
	syscallarg(char **) envp;
};

struct ibcs2_sys_fcntl_args {
	syscallarg(int) fd;
	syscallarg(int) cmd;
	syscallarg(char *) arg;
};

struct ibcs2_sys_ulimit_args {
	syscallarg(int) cmd;
	syscallarg(int) newlimit;
};

struct ibcs2_sys_rmdir_args {
	syscallarg(char *) path;
};

struct ibcs2_sys_mkdir_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct ibcs2_sys_getdents_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(int) nbytes;
};

struct ibcs2_sys_sysfs_args {
	syscallarg(int) cmd;
	syscallarg(caddr_t) d1;
	syscallarg(char *) buf;
};

struct ibcs2_sys_getmsg_args {
	syscallarg(int) fd;
	syscallarg(struct ibcs2_stropts *) ctl;
	syscallarg(struct ibcs2_stropts *) dat;
	syscallarg(int *) flags;
};

struct ibcs2_sys_putmsg_args {
	syscallarg(int) fd;
	syscallarg(struct ibcs2_stropts *) ctl;
	syscallarg(struct ibcs2_stropts *) dat;
	syscallarg(int) flags;
};

struct ibcs2_sys_symlink_args {
	syscallarg(char *) path;
	syscallarg(char *) link;
};

struct ibcs2_sys_lstat_args {
	syscallarg(char *) path;
	syscallarg(struct ibcs2_stat *) st;
};

struct ibcs2_sys_readlink_args {
	syscallarg(char *) path;
	syscallarg(char *) buf;
	syscallarg(int) count;
};

struct xenix_sys_rdchk_args {
	syscallarg(int) fd;
};

struct xenix_sys_chsize_args {
	syscallarg(int) fd;
	syscallarg(long) size;
};

struct xenix_sys_ftime_args {
	syscallarg(struct xenix_timeb *) tp;
};

struct xenix_sys_nap_args {
	syscallarg(int) millisec;
};

struct ibcs2_sys_eaccess_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
};

struct ibcs2_sys_sigaction_args {
	syscallarg(int) signum;
	syscallarg(struct ibcs2_sigaction *) nsa;
	syscallarg(struct ibcs2_sigaction *) osa;
};

struct ibcs2_sys_sigprocmask_args {
	syscallarg(int) how;
	syscallarg(ibcs2_sigset_t *) set;
	syscallarg(ibcs2_sigset_t *) oset;
};

struct ibcs2_sys_sigpending_args {
	syscallarg(ibcs2_sigset_t *) mask;
};

struct ibcs2_sys_sigsuspend_args {
	syscallarg(ibcs2_sigset_t *) mask;
};

struct ibcs2_sys_getgroups_args {
	syscallarg(int) gidsetsize;
	syscallarg(ibcs2_gid_t *) gidset;
};

struct ibcs2_sys_setgroups_args {
	syscallarg(int) gidsetsize;
	syscallarg(ibcs2_gid_t *) gidset;
};

struct ibcs2_sys_sysconf_args {
	syscallarg(int) name;
};

struct ibcs2_sys_pathconf_args {
	syscallarg(char *) path;
	syscallarg(int) name;
};

struct ibcs2_sys_fpathconf_args {
	syscallarg(int) fd;
	syscallarg(int) name;
};

struct ibcs2_sys_rename_args {
	syscallarg(char *) from;
	syscallarg(char *) to;
};

/*
 * System call prototypes.
 */

int	sys_nosys(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	ibcs2_sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	ibcs2_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	ibcs2_sys_waitsys(struct proc *, void *, register_t *);
int	ibcs2_sys_creat(struct proc *, void *, register_t *);
int	sys_link(struct proc *, void *, register_t *);
int	ibcs2_sys_unlink(struct proc *, void *, register_t *);
int	ibcs2_sys_execv(struct proc *, void *, register_t *);
int	ibcs2_sys_chdir(struct proc *, void *, register_t *);
int	ibcs2_sys_time(struct proc *, void *, register_t *);
int	ibcs2_sys_mknod(struct proc *, void *, register_t *);
int	ibcs2_sys_chmod(struct proc *, void *, register_t *);
int	ibcs2_sys_chown(struct proc *, void *, register_t *);
int	sys_obreak(struct proc *, void *, register_t *);
int	ibcs2_sys_stat(struct proc *, void *, register_t *);
int	compat_43_sys_lseek(struct proc *, void *, register_t *);
int	sys_getpid(struct proc *, void *, register_t *);
int	ibcs2_sys_mount(struct proc *, void *, register_t *);
int	ibcs2_sys_umount(struct proc *, void *, register_t *);
int	ibcs2_sys_setuid(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	ibcs2_sys_stime(struct proc *, void *, register_t *);
int	ibcs2_sys_alarm(struct proc *, void *, register_t *);
int	ibcs2_sys_fstat(struct proc *, void *, register_t *);
int	ibcs2_sys_pause(struct proc *, void *, register_t *);
int	ibcs2_sys_utime(struct proc *, void *, register_t *);
int	ibcs2_sys_access(struct proc *, void *, register_t *);
int	ibcs2_sys_nice(struct proc *, void *, register_t *);
int	ibcs2_sys_statfs(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	ibcs2_sys_kill(struct proc *, void *, register_t *);
int	ibcs2_sys_fstatfs(struct proc *, void *, register_t *);
int	ibcs2_sys_pgrpsys(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	sys_opipe(struct proc *, void *, register_t *);
int	ibcs2_sys_times(struct proc *, void *, register_t *);
int	ibcs2_sys_plock(struct proc *, void *, register_t *);
int	ibcs2_sys_setgid(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
int	ibcs2_sys_sigsys(struct proc *, void *, register_t *);
#ifdef SYSVMSG
int	ibcs2_sys_msgsys(struct proc *, void *, register_t *);
#else
#endif
int	ibcs2_sys_sysi86(struct proc *, void *, register_t *);
#ifdef SYSVSHM
int	ibcs2_sys_shmsys(struct proc *, void *, register_t *);
#else
#endif
#ifdef SYSVSEM
int	ibcs2_sys_semsys(struct proc *, void *, register_t *);
#else
#endif
int	ibcs2_sys_ioctl(struct proc *, void *, register_t *);
int	ibcs2_sys_uadmin(struct proc *, void *, register_t *);
int	ibcs2_sys_utssys(struct proc *, void *, register_t *);
int	ibcs2_sys_execve(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	sys_chroot(struct proc *, void *, register_t *);
int	ibcs2_sys_fcntl(struct proc *, void *, register_t *);
int	ibcs2_sys_ulimit(struct proc *, void *, register_t *);
int	ibcs2_sys_rmdir(struct proc *, void *, register_t *);
int	ibcs2_sys_mkdir(struct proc *, void *, register_t *);
int	ibcs2_sys_getdents(struct proc *, void *, register_t *);
int	ibcs2_sys_sysfs(struct proc *, void *, register_t *);
int	ibcs2_sys_getmsg(struct proc *, void *, register_t *);
int	ibcs2_sys_putmsg(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
int	ibcs2_sys_symlink(struct proc *, void *, register_t *);
int	ibcs2_sys_lstat(struct proc *, void *, register_t *);
int	ibcs2_sys_readlink(struct proc *, void *, register_t *);
int	sys_sigreturn(struct proc *, void *, register_t *);
int	xenix_sys_rdchk(struct proc *, void *, register_t *);
int	xenix_sys_chsize(struct proc *, void *, register_t *);
int	xenix_sys_ftime(struct proc *, void *, register_t *);
int	xenix_sys_nap(struct proc *, void *, register_t *);
int	sys_select(struct proc *, void *, register_t *);
int	ibcs2_sys_eaccess(struct proc *, void *, register_t *);
int	ibcs2_sys_sigaction(struct proc *, void *, register_t *);
int	ibcs2_sys_sigprocmask(struct proc *, void *, register_t *);
int	ibcs2_sys_sigpending(struct proc *, void *, register_t *);
int	ibcs2_sys_sigsuspend(struct proc *, void *, register_t *);
int	ibcs2_sys_getgroups(struct proc *, void *, register_t *);
int	ibcs2_sys_setgroups(struct proc *, void *, register_t *);
int	ibcs2_sys_sysconf(struct proc *, void *, register_t *);
int	ibcs2_sys_pathconf(struct proc *, void *, register_t *);
int	ibcs2_sys_fpathconf(struct proc *, void *, register_t *);
int	ibcs2_sys_rename(struct proc *, void *, register_t *);
@


1.12
log
@regen
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.11
log
@regen
@
text
@@


1.10
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_syscallargs.h,v 1.9 2001/08/26 04:14:26 deraadt Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.7 1999/06/07 07:17:47 deraadt Exp 
@


1.9
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d365 44
a408 44
int	sys_nosys	__P((struct proc *, void *, register_t *));
int	sys_exit	__P((struct proc *, void *, register_t *));
int	sys_fork	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_read	__P((struct proc *, void *, register_t *));
int	sys_write	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_open	__P((struct proc *, void *, register_t *));
int	sys_close	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_waitsys	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_creat	__P((struct proc *, void *, register_t *));
int	sys_link	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_unlink	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_execv	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_chdir	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_time	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_mknod	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_chmod	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_chown	__P((struct proc *, void *, register_t *));
int	sys_obreak	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_stat	__P((struct proc *, void *, register_t *));
int	compat_43_sys_lseek	__P((struct proc *, void *, register_t *));
int	sys_getpid	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_mount	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_umount	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_setuid	__P((struct proc *, void *, register_t *));
int	sys_getuid	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_stime	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_alarm	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_fstat	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_pause	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_utime	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_access	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_nice	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_statfs	__P((struct proc *, void *, register_t *));
int	sys_sync	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_kill	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_fstatfs	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_pgrpsys	__P((struct proc *, void *, register_t *));
int	sys_dup	__P((struct proc *, void *, register_t *));
int	sys_opipe	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_times	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_plock	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_setgid	__P((struct proc *, void *, register_t *));
int	sys_getgid	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_sigsys	__P((struct proc *, void *, register_t *));
d410 1
a410 1
int	ibcs2_sys_msgsys	__P((struct proc *, void *, register_t *));
d413 1
a413 1
int	ibcs2_sys_sysi86	__P((struct proc *, void *, register_t *));
d415 1
a415 1
int	ibcs2_sys_shmsys	__P((struct proc *, void *, register_t *));
d419 1
a419 1
int	ibcs2_sys_semsys	__P((struct proc *, void *, register_t *));
d422 35
a456 35
int	ibcs2_sys_ioctl	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_uadmin	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_utssys	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_execve	__P((struct proc *, void *, register_t *));
int	sys_umask	__P((struct proc *, void *, register_t *));
int	sys_chroot	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_fcntl	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_ulimit	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_rmdir	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_mkdir	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_getdents	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_sysfs	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_getmsg	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_putmsg	__P((struct proc *, void *, register_t *));
int	sys_poll	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_symlink	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_lstat	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_readlink	__P((struct proc *, void *, register_t *));
int	sys_sigreturn	__P((struct proc *, void *, register_t *));
int	xenix_sys_rdchk	__P((struct proc *, void *, register_t *));
int	xenix_sys_chsize	__P((struct proc *, void *, register_t *));
int	xenix_sys_ftime	__P((struct proc *, void *, register_t *));
int	xenix_sys_nap	__P((struct proc *, void *, register_t *));
int	sys_select	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_eaccess	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_sigaction	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_sigprocmask	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_sigpending	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_sigsuspend	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_getgroups	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_setgroups	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_sysconf	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_pathconf	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_fpathconf	__P((struct proc *, void *, register_t *));
int	ibcs2_sys_rename	__P((struct proc *, void *, register_t *));
@


1.9.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_syscallargs.h,v 1.9 2001/08/26 04:14:26 deraadt Exp $	*/
d365 44
a408 44
int	sys_nosys(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	ibcs2_sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	ibcs2_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	ibcs2_sys_waitsys(struct proc *, void *, register_t *);
int	ibcs2_sys_creat(struct proc *, void *, register_t *);
int	sys_link(struct proc *, void *, register_t *);
int	ibcs2_sys_unlink(struct proc *, void *, register_t *);
int	ibcs2_sys_execv(struct proc *, void *, register_t *);
int	ibcs2_sys_chdir(struct proc *, void *, register_t *);
int	ibcs2_sys_time(struct proc *, void *, register_t *);
int	ibcs2_sys_mknod(struct proc *, void *, register_t *);
int	ibcs2_sys_chmod(struct proc *, void *, register_t *);
int	ibcs2_sys_chown(struct proc *, void *, register_t *);
int	sys_obreak(struct proc *, void *, register_t *);
int	ibcs2_sys_stat(struct proc *, void *, register_t *);
int	compat_43_sys_lseek(struct proc *, void *, register_t *);
int	sys_getpid(struct proc *, void *, register_t *);
int	ibcs2_sys_mount(struct proc *, void *, register_t *);
int	ibcs2_sys_umount(struct proc *, void *, register_t *);
int	ibcs2_sys_setuid(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	ibcs2_sys_stime(struct proc *, void *, register_t *);
int	ibcs2_sys_alarm(struct proc *, void *, register_t *);
int	ibcs2_sys_fstat(struct proc *, void *, register_t *);
int	ibcs2_sys_pause(struct proc *, void *, register_t *);
int	ibcs2_sys_utime(struct proc *, void *, register_t *);
int	ibcs2_sys_access(struct proc *, void *, register_t *);
int	ibcs2_sys_nice(struct proc *, void *, register_t *);
int	ibcs2_sys_statfs(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	ibcs2_sys_kill(struct proc *, void *, register_t *);
int	ibcs2_sys_fstatfs(struct proc *, void *, register_t *);
int	ibcs2_sys_pgrpsys(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	sys_opipe(struct proc *, void *, register_t *);
int	ibcs2_sys_times(struct proc *, void *, register_t *);
int	ibcs2_sys_plock(struct proc *, void *, register_t *);
int	ibcs2_sys_setgid(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
int	ibcs2_sys_sigsys(struct proc *, void *, register_t *);
d410 1
a410 1
int	ibcs2_sys_msgsys(struct proc *, void *, register_t *);
d413 1
a413 1
int	ibcs2_sys_sysi86(struct proc *, void *, register_t *);
d415 1
a415 1
int	ibcs2_sys_shmsys(struct proc *, void *, register_t *);
d419 1
a419 1
int	ibcs2_sys_semsys(struct proc *, void *, register_t *);
d422 35
a456 35
int	ibcs2_sys_ioctl(struct proc *, void *, register_t *);
int	ibcs2_sys_uadmin(struct proc *, void *, register_t *);
int	ibcs2_sys_utssys(struct proc *, void *, register_t *);
int	ibcs2_sys_execve(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	sys_chroot(struct proc *, void *, register_t *);
int	ibcs2_sys_fcntl(struct proc *, void *, register_t *);
int	ibcs2_sys_ulimit(struct proc *, void *, register_t *);
int	ibcs2_sys_rmdir(struct proc *, void *, register_t *);
int	ibcs2_sys_mkdir(struct proc *, void *, register_t *);
int	ibcs2_sys_getdents(struct proc *, void *, register_t *);
int	ibcs2_sys_sysfs(struct proc *, void *, register_t *);
int	ibcs2_sys_getmsg(struct proc *, void *, register_t *);
int	ibcs2_sys_putmsg(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
int	ibcs2_sys_symlink(struct proc *, void *, register_t *);
int	ibcs2_sys_lstat(struct proc *, void *, register_t *);
int	ibcs2_sys_readlink(struct proc *, void *, register_t *);
int	sys_sigreturn(struct proc *, void *, register_t *);
int	xenix_sys_rdchk(struct proc *, void *, register_t *);
int	xenix_sys_chsize(struct proc *, void *, register_t *);
int	xenix_sys_ftime(struct proc *, void *, register_t *);
int	xenix_sys_nap(struct proc *, void *, register_t *);
int	sys_select(struct proc *, void *, register_t *);
int	ibcs2_sys_eaccess(struct proc *, void *, register_t *);
int	ibcs2_sys_sigaction(struct proc *, void *, register_t *);
int	ibcs2_sys_sigprocmask(struct proc *, void *, register_t *);
int	ibcs2_sys_sigpending(struct proc *, void *, register_t *);
int	ibcs2_sys_sigsuspend(struct proc *, void *, register_t *);
int	ibcs2_sys_getgroups(struct proc *, void *, register_t *);
int	ibcs2_sys_setgroups(struct proc *, void *, register_t *);
int	ibcs2_sys_sysconf(struct proc *, void *, register_t *);
int	ibcs2_sys_pathconf(struct proc *, void *, register_t *);
int	ibcs2_sys_fpathconf(struct proc *, void *, register_t *);
int	ibcs2_sys_rename(struct proc *, void *, register_t *);
@


1.8
log
@regen after removing compatopts
@
text
@d10 15
a24 1
#define	syscallarg(x)	union { x datum; register_t pad; }
@


1.7
log
@ioctl arguments are u_long.
Replaces `undefined' code with `defined' behavior...

gcc 2.96 performs switch cases range analysis, warns about unreachable
cases, and weeds them out.

In

switch(i) {
case VALUE:
}

VALUE is first coerced into the type of i.  If i is signed, VALUE is
unsigned and exceeds i range, you lose... the result of the conversion
is undefined.
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_syscallargs.h,v 1.6 1999/06/07 07:18:35 deraadt Exp $	*/
d192 1
a192 1
	syscallarg(u_long) cmd;
@


1.7.2.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_syscallargs.h,v 1.7 1999/11/20 18:52:00 espie Exp $	*/
d192 1
a192 1
	syscallarg(int) cmd;
@


1.7.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_syscallargs.h,v 1.7.2.1 2001/07/04 10:39:19 niklas Exp $	*/
d10 1
a10 15
#ifdef	syscallarg
#undef	syscallarg
#endif

#define	syscallarg(x)							\
	union {								\
		register_t pad;						\
		struct { x datum; } le;					\
		struct {						\
			int8_t pad[ (sizeof (register_t) < sizeof (x))	\
				? 0					\
				: sizeof (register_t) - sizeof (x)];	\
			x datum;					\
		} be;							\
	}
@


1.7.2.3
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d365 44
a408 44
int	sys_nosys(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	ibcs2_sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	ibcs2_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	ibcs2_sys_waitsys(struct proc *, void *, register_t *);
int	ibcs2_sys_creat(struct proc *, void *, register_t *);
int	sys_link(struct proc *, void *, register_t *);
int	ibcs2_sys_unlink(struct proc *, void *, register_t *);
int	ibcs2_sys_execv(struct proc *, void *, register_t *);
int	ibcs2_sys_chdir(struct proc *, void *, register_t *);
int	ibcs2_sys_time(struct proc *, void *, register_t *);
int	ibcs2_sys_mknod(struct proc *, void *, register_t *);
int	ibcs2_sys_chmod(struct proc *, void *, register_t *);
int	ibcs2_sys_chown(struct proc *, void *, register_t *);
int	sys_obreak(struct proc *, void *, register_t *);
int	ibcs2_sys_stat(struct proc *, void *, register_t *);
int	compat_43_sys_lseek(struct proc *, void *, register_t *);
int	sys_getpid(struct proc *, void *, register_t *);
int	ibcs2_sys_mount(struct proc *, void *, register_t *);
int	ibcs2_sys_umount(struct proc *, void *, register_t *);
int	ibcs2_sys_setuid(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	ibcs2_sys_stime(struct proc *, void *, register_t *);
int	ibcs2_sys_alarm(struct proc *, void *, register_t *);
int	ibcs2_sys_fstat(struct proc *, void *, register_t *);
int	ibcs2_sys_pause(struct proc *, void *, register_t *);
int	ibcs2_sys_utime(struct proc *, void *, register_t *);
int	ibcs2_sys_access(struct proc *, void *, register_t *);
int	ibcs2_sys_nice(struct proc *, void *, register_t *);
int	ibcs2_sys_statfs(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	ibcs2_sys_kill(struct proc *, void *, register_t *);
int	ibcs2_sys_fstatfs(struct proc *, void *, register_t *);
int	ibcs2_sys_pgrpsys(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	sys_opipe(struct proc *, void *, register_t *);
int	ibcs2_sys_times(struct proc *, void *, register_t *);
int	ibcs2_sys_plock(struct proc *, void *, register_t *);
int	ibcs2_sys_setgid(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
int	ibcs2_sys_sigsys(struct proc *, void *, register_t *);
d410 1
a410 1
int	ibcs2_sys_msgsys(struct proc *, void *, register_t *);
d413 1
a413 1
int	ibcs2_sys_sysi86(struct proc *, void *, register_t *);
d415 1
a415 1
int	ibcs2_sys_shmsys(struct proc *, void *, register_t *);
d419 1
a419 1
int	ibcs2_sys_semsys(struct proc *, void *, register_t *);
d422 35
a456 35
int	ibcs2_sys_ioctl(struct proc *, void *, register_t *);
int	ibcs2_sys_uadmin(struct proc *, void *, register_t *);
int	ibcs2_sys_utssys(struct proc *, void *, register_t *);
int	ibcs2_sys_execve(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	sys_chroot(struct proc *, void *, register_t *);
int	ibcs2_sys_fcntl(struct proc *, void *, register_t *);
int	ibcs2_sys_ulimit(struct proc *, void *, register_t *);
int	ibcs2_sys_rmdir(struct proc *, void *, register_t *);
int	ibcs2_sys_mkdir(struct proc *, void *, register_t *);
int	ibcs2_sys_getdents(struct proc *, void *, register_t *);
int	ibcs2_sys_sysfs(struct proc *, void *, register_t *);
int	ibcs2_sys_getmsg(struct proc *, void *, register_t *);
int	ibcs2_sys_putmsg(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
int	ibcs2_sys_symlink(struct proc *, void *, register_t *);
int	ibcs2_sys_lstat(struct proc *, void *, register_t *);
int	ibcs2_sys_readlink(struct proc *, void *, register_t *);
int	sys_sigreturn(struct proc *, void *, register_t *);
int	xenix_sys_rdchk(struct proc *, void *, register_t *);
int	xenix_sys_chsize(struct proc *, void *, register_t *);
int	xenix_sys_ftime(struct proc *, void *, register_t *);
int	xenix_sys_nap(struct proc *, void *, register_t *);
int	sys_select(struct proc *, void *, register_t *);
int	ibcs2_sys_eaccess(struct proc *, void *, register_t *);
int	ibcs2_sys_sigaction(struct proc *, void *, register_t *);
int	ibcs2_sys_sigprocmask(struct proc *, void *, register_t *);
int	ibcs2_sys_sigpending(struct proc *, void *, register_t *);
int	ibcs2_sys_sigsuspend(struct proc *, void *, register_t *);
int	ibcs2_sys_getgroups(struct proc *, void *, register_t *);
int	ibcs2_sys_setgroups(struct proc *, void *, register_t *);
int	ibcs2_sys_sysconf(struct proc *, void *, register_t *);
int	ibcs2_sys_pathconf(struct proc *, void *, register_t *);
int	ibcs2_sys_fpathconf(struct proc *, void *, register_t *);
int	ibcs2_sys_rename(struct proc *, void *, register_t *);
@


1.6
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d192 1
a192 1
	syscallarg(int) cmd;
@


1.5
log
@Regen
@
text
@d1 2
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.5 1996/08/02 21:55:17 niklas Exp 
d389 1
a389 1
int	sys_pipe	__P((struct proc *, void *, register_t *));
@


1.4
log
@Added Makefiles to build stuff from syscalls.master in some emulations.
Regenerated derived files from various syscalls.master files. Added $OpenBSD$.
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.4 1996/08/02 20:20:28 niklas Exp 
a255 6
};

struct sys_poll_args {
	syscallarg(struct pollfd *) fds;
	syscallarg(unsigned long) nfds;
	syscallarg(int) timeout;
@


1.3
log
@from netbsd; Correct name of sysi86 function
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.8 1996/01/07 06:09:43 mycroft Exp 
d258 3
a260 3
struct ibcs2_sys_poll_args {
	syscallarg(struct ibcs2_pollfd *) fds;
	syscallarg(long) nfds;
d426 1
a426 1
int	ibcs2_sys_poll	__P((struct proc *, void *, register_t *));
@


1.2
log
@from netbsd; Added support for sysi86 and eaccess syscalls
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.6 1995/10/07 06:26:56 mycroft Exp 
d168 1
a168 1
struct ibcs2_sysi86_args {
d403 1
a403 1
int	ibcs2_sysi86	__P((struct proc *, void *, register_t *));
@


1.1
log
@Initial revision
@
text
@d168 5
d297 5
d403 1
d436 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
