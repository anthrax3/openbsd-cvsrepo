head	1.8;
access;
symbols
	OPENBSD_4_7:1.7.0.28
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.30
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.26
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.24
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.22
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.20
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.18
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.16
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.14
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.12
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.10
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.8
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.6
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.4
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.12
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.10
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.6.0.8
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.6
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2010.07.01.17.30.27;	author tedu;	state dead;
branches;
next	1.7;

1.7
date	2003.01.30.03.29.49;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.30.05.27.08;	author brad;	state Exp;
branches
	1.6.8.1;
next	1.5;

1.5
date	97.01.23.16.22.57;	author niklas;	state Exp;
branches
	1.5.14.1;
next	1.4;

1.4
date	97.01.23.16.12.19;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.08.02.20.35.10;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.05.07.08.49.03;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.16;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.16;	author deraadt;	state Exp;
branches;
next	;

1.5.14.1
date	2001.05.14.22.04.32;	author niklas;	state Exp;
branches;
next	1.5.14.2;

1.5.14.2
date	2003.03.27.23.53.47;	author niklas;	state Exp;
branches;
next	;

1.6.8.1
date	2003.05.19.21.52.09;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@another day, another compat gets removed.  today is ibcs2's turn
@
text
@/*	$OpenBSD: ibcs2_socksys.c,v 1.7 2003/01/30 03:29:49 millert Exp $	*/
/*	$NetBSD: ibcs2_socksys.c,v 1.7 1996/10/13 00:46:51 christos Exp $	*/

/*
 * Copyright (c) 1994, 1995 Scott Bartram
 * Copyright (c) 1994 Arne H Juul
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>
#include <sys/file.h>
#include <sys/filedesc.h>
#include <sys/ioctl.h>
#include <sys/termios.h>
#include <sys/tty.h>
#include <sys/socket.h>
#include <sys/mount.h>
#include <net/if.h>

#include <sys/syscallargs.h>

#include <compat/ibcs2/ibcs2_socksys.h>
#include <compat/ibcs2/ibcs2_util.h>

/*
 * iBCS2 socksys calls.
 */

struct ibcs2_socksys_args {
	int     fd;
	int     magic;
	caddr_t argsp;
};

int
ibcs2_socksys(p, v, retval)
	register struct proc *p;
	void *v;
	register_t *retval;
{
	register struct ibcs2_socksys_args *uap = v;
	int error;
	int realargs[7]; /* 1 for command, 6 for recvfrom */
      
	/*
	 * SOCKET should only be legal on /dev/socksys.
	 * GETIPDOMAINNAME should only be legal on /dev/socksys ?
	 * The others are (and should be) only legal on sockets.
	 */

	error = copyin(uap->argsp, (caddr_t)realargs, sizeof(realargs));
	if (error)
		return error;
	DPRINTF(("ibcs2_socksys: %08x %08x %08x %08x %08x %08x %08x\n",
	       realargs[0], realargs[1], realargs[2], realargs[3], 
	       realargs[4], realargs[5], realargs[6]));
	switch (realargs[0]) {
	case SOCKSYS_ACCEPT:
		return sys_accept(p, realargs + 1, retval);
	case SOCKSYS_BIND:
		return sys_bind(p, realargs + 1, retval);
	case SOCKSYS_CONNECT:
		return sys_connect(p, realargs + 1, retval);
	case SOCKSYS_GETPEERNAME:
		return sys_getpeername(p, realargs + 1, retval);
	case SOCKSYS_GETSOCKNAME:
		return sys_getsockname(p, realargs + 1, retval);
	case SOCKSYS_GETSOCKOPT:
		return sys_getsockopt(p, realargs + 1, retval);
	case SOCKSYS_LISTEN:
		return sys_listen(p, realargs + 1, retval);
	case SOCKSYS_RECV:
		realargs[5] = realargs[6] = 0;
		/* FALLTHROUGH */
	case SOCKSYS_RECVFROM:
		return sys_recvfrom(p, realargs + 1, retval);
	case SOCKSYS_SEND:
		realargs[5] = realargs[6] = 0;
		/* FALLTHROUGH */
	case SOCKSYS_SENDTO:
		return sys_sendto(p, realargs + 1, retval);
	case SOCKSYS_SETSOCKOPT:
		return sys_setsockopt(p, realargs + 1, retval);
	case SOCKSYS_SHUTDOWN:
		return sys_shutdown(p, realargs + 1, retval);
	case SOCKSYS_SOCKET:
		return sys_socket(p, realargs + 1, retval);
	case SOCKSYS_SELECT:
		return sys_select(p, realargs + 1, retval);
	case SOCKSYS_GETIPDOMAIN:
		return compat_09_sys_getdomainname(p, realargs + 1, retval);
	case SOCKSYS_SETIPDOMAIN:
		return compat_09_sys_setdomainname(p, realargs + 1, retval);
	case SOCKSYS_ADJTIME:
		return sys_adjtime(p, realargs + 1, retval);
	case SOCKSYS_SETREUID:
		return sys_setreuid(p, realargs + 1, retval);
	case SOCKSYS_SETREGID:
		return sys_setregid(p, realargs + 1, retval);
	case SOCKSYS_GETTIME:
		return sys_gettimeofday(p, realargs + 1, retval);
	case SOCKSYS_SETTIME:
		return sys_settimeofday(p, realargs + 1, retval);
	case SOCKSYS_GETITIMER:
		return sys_getitimer(p, realargs + 1, retval);
	case SOCKSYS_SETITIMER:
		return sys_setitimer(p, realargs + 1, retval);

	default:
		printf("socksys unknown %08x %08x %08x %08x %08x %08x %08x\n",
                       realargs[0], realargs[1], realargs[2], realargs[3], 
                       realargs[4], realargs[5], realargs[6]);
		return EINVAL;
	}
	/* NOTREACHED */
}
@


1.7
log
@Bring back setreuid(2) and setregid(2) as first class syscalls
(but still implemented via setres[ug]id(2)).  Basically this just
moves them from COMPAT_43 into kern_prot.c.  Also fixes a typo in my
old implementation.  The userland portion will follow in a few days.
deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_socksys.c,v 1.6 2000/08/30 05:27:08 brad Exp $	*/
@


1.6
log
@remove duplicate inclusion of sys/ioctl.h
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_socksys.c,v 1.5 1997/01/23 16:22:57 niklas Exp $	*/
d118 1
a118 1
		return compat_43_sys_setreuid(p, realargs + 1, retval);
d120 1
a120 1
		return compat_43_sys_setregid(p, realargs + 1, retval);
@


1.6.8.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d118 1
a118 1
		return sys_setreuid(p, realargs + 1, retval);
d120 1
a120 1
		return sys_setregid(p, realargs + 1, retval);
@


1.5
log
@Sync with NetBSD 970118, missed...
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_socksys.c,v 1.3 1996/08/02 20:35:10 niklas Exp $	*/
a37 1
#include <sys/ioctl.h>
a39 1

@


1.5.14.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_socksys.c,v 1.6 2000/08/30 05:27:08 brad Exp $	*/
d38 1
d41 1
@


1.5.14.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d118 1
a118 1
		return sys_setreuid(p, realargs + 1, retval);
d120 1
a120 1
		return sys_setregid(p, realargs + 1, retval);
@


1.4
log
@Sync with NetBSD 970118
@
text
@d2 1
a2 1
/*	$NetBSD: ibcs2_socksys.c,v 1.4 1996/05/03 17:05:29 christos Exp $	*/
d134 2
a135 2
		    realargs[0], realargs[1], realargs[2], realargs[3], 
		    realargs[4], realargs[5], realargs[6]);
@


1.3
log
@Added Makefiles to build stuff from syscalls.master in some emulations.
Regenerated derived files from various syscalls.master files. Added $OpenBSD$.
@
text
@d1 1
a1 1
/*	$OpenBSD: ibcs2_socksys.c,v 1.4 1996/05/03 17:05:29 christos Exp $	*/
d134 2
a135 2
                       realargs[0], realargs[1], realargs[2], realargs[3], 
                       realargs[4], realargs[5], realargs[6]);
@


1.2
log
@sync with 0504; mostly proto changes (some svr4 ioctl changes)
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 2
d29 1
d38 1
d41 3
d58 1
a58 1
ibcs2_socksys(p, uap, retval)
d60 1
a60 1
	register struct ibcs2_socksys_args *uap;
d63 1
a63 2
	register struct filedesc *fdp = p->p_fd;
	register struct file *fp;
d73 2
a74 1
	if (error = copyin(uap->argsp, (caddr_t)realargs, sizeof(realargs)))
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
