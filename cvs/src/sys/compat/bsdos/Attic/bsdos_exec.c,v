head	1.6;
access;
symbols
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.32
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.30
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.28
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.26
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.24
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.22
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.20
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.18
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.16
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.14
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.12
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.10
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.8
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.2
	UBC_BASE:1.4
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.2
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.1.0.10
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2010.07.05.22.20.22;	author tedu;	state dead;
branches;
next	1.5;

1.5
date	2009.03.05.19.52.23;	author kettenis;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.06.19.53.17;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.08.22.25.24;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	99.11.10.15.55.13;	author mickey;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	97.09.02.08.54.12;	author downsj;	state Exp;
branches;
next	;

1.2.2.1
date	2001.05.14.22.04.14;	author niklas;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.11.13.21.05.47;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove compat_bsdos support
@
text
@/*	$OpenBSD: bsdos_exec.c,v 1.5 2009/03/05 19:52:23 kettenis Exp $	*/

/*
 * Copyright (c) 1993, 1994 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>
#include <sys/signalvar.h>
#include <sys/malloc.h>
#include <sys/vnode.h>
#include <sys/core.h>
#include <sys/exec.h>
#include <sys/resourcevar.h>
#include <uvm/uvm_extern.h>

#if 0
#include <machine/bsdos_machdep.h>
#endif

#include <compat/bsdos/bsdos_exec.h>
#include <compat/bsdos/bsdos_syscall.h>

extern struct sysent bsdos_sysent[];
#ifdef SYSCALL_DEBUG
extern char *bsdos_syscallnames[];
#endif

extern char sigcode[], esigcode[];

struct emul emul_bsdos = {
	"bsdos",
	NULL,
	sendsig,
	BSDOS_SYS_syscall,
	BSDOS_SYS_MAXSYSCALL,
	bsdos_sysent,
#ifdef SYSCALL_DEBUG
	bsdos_syscallnames,
#else
	NULL,
#endif
	0,
	copyargs,
	setregs,
	NULL,
	coredump_trad,
	sigcode,
	esigcode,
};

/*
 * exec_aout_makecmds(): Check if it's an a.out-format executable.
 *
 * Given a proc pointer and an exec package pointer, see if the referent
 * of the epp is in a.out format.  First check 'standard' magic numbers for
 * this architecture.  If that fails, try a cpu-dependent hook.
 *
 * This function, in the former case, or the hook, in the latter, is
 * responsible for creating a set of vmcmds which can be used to build
 * the process's vm space and inserting them into the exec package.
 */

int
exec_bsdos_aout_makecmds(p, epp)
	struct proc *p;
	struct exec_package *epp;
{
	u_long midmag, magic;
	u_short mid;
	int error = ENOEXEC;
	struct exec *execp = epp->ep_hdr;

	if (epp->ep_hdrvalid < sizeof(struct exec))
		return ENOEXEC;

	midmag = ntohl(execp->a_midmag);
	mid = (midmag >> 16) & 0xffff;
	magic = midmag & 0xffff;

	if (magic == 0) {
		magic = (execp->a_midmag & 0xffff);
		mid = MID_BSDOS;
	}

	midmag = mid << 16 | magic;

	switch (midmag) {
	case (MID_BSDOS << 16) | ZMAGIC:
		/*
		 * 386BSD's ZMAGIC format:
		 */
		error = exec_aout_prep_oldzmagic(p, epp);
		break;
	case (MID_BSDOS << 16) | QMAGIC:
		/*
		 * BSDI's QMAGIC format:
		 * same as new ZMAGIC format, but with different magic number.
		 */
		error = exec_aout_prep_zmagic(p, epp);
		break;
	case (MID_BSDOS << 16) | NMAGIC:
		/*
		 * BSDI's NMAGIC format:
		 * same as NMAGIC format, but with different magic number
		 * and with text starting at 0.
		 */
		error = exec_aout_prep_oldnmagic(p, epp);
		break;
	case (MID_BSDOS << 16) | OMAGIC:
		/*
		 * BSDI's OMAGIC format:
		 * same as OMAGIC format, but with different magic number
		 * and with text starting at 0.
		 */
		error = exec_aout_prep_oldomagic(p, epp);
		break;
	}
	if (error == 0)
		epp->ep_emul = &emul_bsdos;
	else
		kill_vmcmds(&epp->ep_vmcmds);

	return error;
}
@


1.5
log
@Make ELF platforms generate ELF core dumps.  Somewhat based on code from
NetBSD.

ok kurt@@, drahn@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: bsdos_exec.c,v 1.4 2001/11/06 19:53:17 miod Exp $	*/
@


1.4
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: bsdos_exec.c,v 1.3 2000/06/08 22:25:24 niklas Exp $	*/
d39 1
d74 1
@


1.3
log
@Add explicit inclusions of signalvar.h to files actually using syms defined
there but relying on an indirect inclusion
@
text
@d1 1
a1 1
/*	$OpenBSD: bsdos_exec.c,v 1.3 2000/06/08 21:12:11 niklas Exp $	*/
d41 1
a41 1
#include <vm/vm.h>
@


1.2
log
@include syscallnames only if compiling w/ SYSCALL_DEBUG.
was already so for native and sunos, the rest was just
wasting space on it. niels@@ millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: bsdos_exec.c,v 1.1 1997/09/02 08:54:12 downsj Exp $	*/
d36 1
a54 1
extern void sendsig __P((sig_t, int, int, u_long, int, union sigval));
@


1.2.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: bsdos_exec.c,v 1.3 2000/06/08 22:25:24 niklas Exp $	*/
a35 1
#include <sys/signalvar.h>
d54 1
@


1.2.2.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
#include <uvm/uvm_extern.h>
@


1.1
log
@New COMPAT_BSDOS framework.  Needs a lot more work (syscalls missing,
syscall differences missing, machine dependant), but is still worth switching
to because it offers /emul support and shows up as a `real' emulation.
@
text
@d1 1
a1 1
/*	$OpenBSD: bsdos_exec.c,v 1.4 1996/08/31 09:24:00 pefo Exp $	*/
d50 1
d52 1
d64 1
d66 3
@

