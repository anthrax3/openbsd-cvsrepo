head	1.23;
access;
symbols
	OPENBSD_4_7:1.22.0.8
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.10
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.6
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.4
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.2
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.19.0.14
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.19.0.12
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.19.0.10
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.19.0.8
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.6
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.4
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.2
	OPENBSD_3_6_BASE:1.19
	SMP_SYNC_A:1.18
	SMP_SYNC_B:1.18
	OPENBSD_3_5:1.17.0.4
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	UBC_SYNC_A:1.17
	OPENBSD_3_3:1.16.0.2
	OPENBSD_3_3_BASE:1.16
	OPENBSD_3_2:1.15.0.4
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.2
	OPENBSD_3_1_BASE:1.15
	UBC_SYNC_B:1.15
	UBC:1.13.0.4
	UBC_BASE:1.13
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.10
	OPENBSD_2_8:1.11.0.8
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.6
	OPENBSD_2_7_BASE:1.11
	SMP:1.11.0.4
	SMP_BASE:1.11
	kame_19991208:1.11
	OPENBSD_2_6:1.11.0.2
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.10.0.6
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.4
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.23
date	2010.07.02.19.57.53;	author tedu;	state dead;
branches;
next	1.22;

1.22
date	2008.01.05.00.38.13;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2008.01.05.00.36.13;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2007.11.27.18.05.59;	author art;	state Exp;
branches;
next	1.19;

1.19
date	2004.07.09.23.56.33;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2004.05.28.18.31.12;	author tedu;	state Exp;
branches;
next	1.17;

1.17
date	2003.05.11.19.45.44;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2003.01.30.03.32.44;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.14.01.26.50;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.03.14.00.44.20;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2001.08.26.04.14.27;	author deraadt;	state Exp;
branches
	1.13.4.1;
next	1.12;

1.12
date	2001.05.16.05.05.09;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	99.06.07.07.18.36;	author deraadt;	state Exp;
branches
	1.11.4.1;
next	1.10;

1.10
date	98.03.23.07.16.28;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	98.03.23.06.54.13;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.11.13.18.38.07;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.07.28.09.53.21;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.01.26.23.54.02;	author downsj;	state Exp;
branches;
next	1.5;

1.5
date	96.08.25.12.21.40;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.08.02.21.57.58;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.08.02.20.35.32;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.04.18.21.21.46;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.22;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.22;	author deraadt;	state Exp;
branches;
next	;

1.11.4.1
date	2001.07.04.10.39.43;	author niklas;	state Exp;
branches;
next	1.11.4.2;

1.11.4.2
date	2001.10.31.03.11.46;	author nate;	state Exp;
branches;
next	1.11.4.3;

1.11.4.3
date	2002.03.28.11.28.06;	author niklas;	state Exp;
branches;
next	1.11.4.4;

1.11.4.4
date	2003.03.27.23.53.48;	author niklas;	state Exp;
branches;
next	1.11.4.5;

1.11.4.5
date	2003.05.13.19.21.27;	author ho;	state Exp;
branches;
next	1.11.4.6;

1.11.4.6
date	2004.06.05.23.12.35;	author niklas;	state Exp;
branches;
next	;

1.13.4.1
date	2002.06.11.03.28.08;	author art;	state Exp;
branches;
next	1.13.4.2;

1.13.4.2
date	2003.05.19.21.52.09;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.23
log
@remove sunos compat files
@
text
@/*	$OpenBSD: sunos_syscallargs.h,v 1.22 2008/01/05 00:38:13 miod Exp $	*/

/*
 * System call argument lists.
 *
 * DO NOT EDIT-- this file is automatically generated.
 * created from	OpenBSD: syscalls.master,v 1.17 2008/01/05 00:36:13 miod Exp 
 */

#ifdef	syscallarg
#undef	syscallarg
#endif

#define	syscallarg(x)							\
	union {								\
		register_t pad;						\
		struct { x datum; } le;					\
		struct {						\
			int8_t pad[ (sizeof (register_t) < sizeof (x))	\
				? 0					\
				: sizeof (register_t) - sizeof (x)];	\
			x datum;					\
		} be;							\
	}

struct sunos_sys_open_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
	syscallarg(int) mode;
};

struct sunos_sys_wait4_args {
	syscallarg(int) pid;
	syscallarg(int *) status;
	syscallarg(int) options;
	syscallarg(struct rusage *) rusage;
};

struct sunos_sys_creat_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
};

struct sunos_sys_execv_args {
	syscallarg(char *) path;
	syscallarg(char **) argp;
};

struct sunos_sys_mknod_args {
	syscallarg(char *) path;
	syscallarg(int) mode;
	syscallarg(int) dev;
};

struct sunos_sys_ostime_args {
	syscallarg(int) time;
};

struct sunos_sys_ptrace_args {
	syscallarg(int) req;
	syscallarg(pid_t) pid;
	syscallarg(caddr_t) addr;
	syscallarg(int) data;
	syscallarg(char *) addr2;
};

struct sunos_sys_access_args {
	syscallarg(char *) path;
	syscallarg(int) flags;
};

struct sunos_sys_stat_args {
	syscallarg(char *) path;
	syscallarg(struct stat43 *) ub;
};

struct sunos_sys_lstat_args {
	syscallarg(char *) path;
	syscallarg(struct stat43 *) ub;
};

struct sunos_sys_otimes_args {
	syscallarg(struct tms *) tp;
};

struct sunos_sys_mctl_args {
	syscallarg(caddr_t) addr;
	syscallarg(int) len;
	syscallarg(int) func;
	syscallarg(void *) arg;
};

struct sunos_sys_ioctl_args {
	syscallarg(int) fd;
	syscallarg(u_long) com;
	syscallarg(caddr_t) data;
};

struct sunos_sys_reboot_args {
	syscallarg(int) howto;
	syscallarg(char *) bootstr;
};

struct sunos_sys_execve_args {
	syscallarg(char *) path;
	syscallarg(char **) argp;
	syscallarg(char **) envp;
};

struct sunos_sys_mmap_args {
	syscallarg(caddr_t) addr;
	syscallarg(size_t) len;
	syscallarg(int) prot;
	syscallarg(int) flags;
	syscallarg(int) fd;
	syscallarg(long) pos;
};

struct sunos_sys_setpgrp_args {
	syscallarg(int) pid;
	syscallarg(int) pgid;
};

struct sunos_sys_fcntl_args {
	syscallarg(int) fd;
	syscallarg(int) cmd;
	syscallarg(void *) arg;
};

struct sunos_sys_setsockopt_args {
	syscallarg(int) s;
	syscallarg(int) level;
	syscallarg(int) name;
	syscallarg(caddr_t) val;
	syscallarg(int) valsize;
};

struct sunos_sys_sigvec_args {
	syscallarg(int) signum;
	syscallarg(struct sigvec *) nsv;
	syscallarg(struct sigvec *) osv;
};

struct sunos_sys_sigreturn_args {
	syscallarg(struct sigcontext *) sigcntxp;
};

struct sunos_sys_getrlimit_args {
	syscallarg(u_int) which;
	syscallarg(struct orlimit *) rlp;
};

struct sunos_sys_setrlimit_args {
	syscallarg(u_int) which;
	syscallarg(struct orlimit *) rlp;
};

struct sunos_sys_nfssvc_args {
	syscallarg(int) fd;
};

struct sunos_sys_statfs_args {
	syscallarg(char *) path;
	syscallarg(struct sunos_statfs *) buf;
};

struct sunos_sys_fstatfs_args {
	syscallarg(int) fd;
	syscallarg(struct sunos_statfs *) buf;
};

struct sunos_sys_unmount_args {
	syscallarg(char *) path;
};

struct sunos_sys_quotactl_args {
	syscallarg(int) cmd;
	syscallarg(char *) special;
	syscallarg(int) uid;
	syscallarg(caddr_t) addr;
};

struct sunos_sys_exportfs_args {
	syscallarg(char *) path;
	syscallarg(char *) ex;
};

struct sunos_sys_mount_args {
	syscallarg(char *) type;
	syscallarg(char *) dir;
	syscallarg(int) flags;
	syscallarg(caddr_t) data;
};

struct sunos_sys_ustat_args {
	syscallarg(int) dev;
	syscallarg(struct sunos_ustat *) buf;
};

struct sunos_sys_auditsys_args {
	syscallarg(char *) record;
};

struct sunos_sys_getdents_args {
	syscallarg(int) fd;
	syscallarg(char *) buf;
	syscallarg(int) nbytes;
};

struct sunos_sys_fchroot_args {
	syscallarg(int) fd;
};

struct sunos_sys_sigpending_args {
	syscallarg(int *) mask;
};

struct sunos_sys_sysconf_args {
	syscallarg(int) name;
};

struct sunos_sys_uname_args {
	syscallarg(struct sunos_utsname *) name;
};

/*
 * System call prototypes.
 */

int	sys_nosys(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	sunos_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	sunos_sys_wait4(struct proc *, void *, register_t *);
int	sunos_sys_creat(struct proc *, void *, register_t *);
int	sys_link(struct proc *, void *, register_t *);
int	sys_unlink(struct proc *, void *, register_t *);
int	sunos_sys_execv(struct proc *, void *, register_t *);
int	sys_chdir(struct proc *, void *, register_t *);
int	sunos_sys_mknod(struct proc *, void *, register_t *);
int	sys_chmod(struct proc *, void *, register_t *);
int	sys_lchown(struct proc *, void *, register_t *);
int	sys_obreak(struct proc *, void *, register_t *);
int	compat_43_sys_lseek(struct proc *, void *, register_t *);
int	sys_getpid(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	sunos_sys_ostime(struct proc *, void *, register_t *);
#ifdef PTRACE
int	sunos_sys_ptrace(struct proc *, void *, register_t *);
#else
#endif
int	sunos_sys_access(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	sys_kill(struct proc *, void *, register_t *);
int	sunos_sys_stat(struct proc *, void *, register_t *);
int	sunos_sys_lstat(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	sys_opipe(struct proc *, void *, register_t *);
int	sunos_sys_otimes(struct proc *, void *, register_t *);
int	sys_profil(struct proc *, void *, register_t *);
int	sys_setgid(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
#ifdef ACCOUNTING
int	sys_acct(struct proc *, void *, register_t *);
#else
#endif
int	sunos_sys_mctl(struct proc *, void *, register_t *);
int	sunos_sys_ioctl(struct proc *, void *, register_t *);
int	sunos_sys_reboot(struct proc *, void *, register_t *);
int	sys_symlink(struct proc *, void *, register_t *);
int	sys_readlink(struct proc *, void *, register_t *);
int	sunos_sys_execve(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	sys_chroot(struct proc *, void *, register_t *);
int	compat_43_sys_fstat(struct proc *, void *, register_t *);
int	compat_43_sys_getpagesize(struct proc *, void *, register_t *);
int	sys_msync(struct proc *, void *, register_t *);
int	sys_vfork(struct proc *, void *, register_t *);
int	sys_sbrk(struct proc *, void *, register_t *);
int	sys_sstk(struct proc *, void *, register_t *);
int	sunos_sys_mmap(struct proc *, void *, register_t *);
int	sys_munmap(struct proc *, void *, register_t *);
int	sys_mprotect(struct proc *, void *, register_t *);
int	sys_madvise(struct proc *, void *, register_t *);
int	sunos_sys_vhangup(struct proc *, void *, register_t *);
int	sys_mincore(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	sys_getpgrp(struct proc *, void *, register_t *);
int	sunos_sys_setpgrp(struct proc *, void *, register_t *);
int	sys_setitimer(struct proc *, void *, register_t *);
int	compat_25_sys_swapon(struct proc *, void *, register_t *);
int	sys_getitimer(struct proc *, void *, register_t *);
int	compat_43_sys_gethostname(struct proc *, void *, register_t *);
int	compat_43_sys_sethostname(struct proc *, void *, register_t *);
int	compat_43_sys_getdtablesize(struct proc *, void *, register_t *);
int	sys_dup2(struct proc *, void *, register_t *);
int	sunos_sys_fcntl(struct proc *, void *, register_t *);
int	sys_select(struct proc *, void *, register_t *);
int	sys_fsync(struct proc *, void *, register_t *);
int	sys_setpriority(struct proc *, void *, register_t *);
int	sys_socket(struct proc *, void *, register_t *);
int	sys_connect(struct proc *, void *, register_t *);
int	compat_43_sys_accept(struct proc *, void *, register_t *);
int	sys_getpriority(struct proc *, void *, register_t *);
int	compat_43_sys_send(struct proc *, void *, register_t *);
int	compat_43_sys_recv(struct proc *, void *, register_t *);
int	sys_bind(struct proc *, void *, register_t *);
int	sunos_sys_setsockopt(struct proc *, void *, register_t *);
int	sys_listen(struct proc *, void *, register_t *);
int	sunos_sys_sigvec(struct proc *, void *, register_t *);
int	compat_43_sys_sigblock(struct proc *, void *, register_t *);
int	compat_43_sys_sigsetmask(struct proc *, void *, register_t *);
int	sys_sigsuspend(struct proc *, void *, register_t *);
int	compat_43_sys_sigstack(struct proc *, void *, register_t *);
int	compat_43_sys_recvmsg(struct proc *, void *, register_t *);
int	compat_43_sys_sendmsg(struct proc *, void *, register_t *);
int	sys_gettimeofday(struct proc *, void *, register_t *);
int	sys_getrusage(struct proc *, void *, register_t *);
int	sys_getsockopt(struct proc *, void *, register_t *);
int	sys_readv(struct proc *, void *, register_t *);
int	sys_writev(struct proc *, void *, register_t *);
int	sys_settimeofday(struct proc *, void *, register_t *);
int	sys_fchown(struct proc *, void *, register_t *);
int	sys_fchmod(struct proc *, void *, register_t *);
int	compat_43_sys_recvfrom(struct proc *, void *, register_t *);
int	sys_setreuid(struct proc *, void *, register_t *);
int	sys_setregid(struct proc *, void *, register_t *);
int	sys_rename(struct proc *, void *, register_t *);
int	compat_43_sys_truncate(struct proc *, void *, register_t *);
int	compat_43_sys_ftruncate(struct proc *, void *, register_t *);
int	sys_flock(struct proc *, void *, register_t *);
int	sys_sendto(struct proc *, void *, register_t *);
int	sys_shutdown(struct proc *, void *, register_t *);
int	sys_socketpair(struct proc *, void *, register_t *);
int	sys_mkdir(struct proc *, void *, register_t *);
int	sys_rmdir(struct proc *, void *, register_t *);
int	sys_utimes(struct proc *, void *, register_t *);
int	sunos_sys_sigreturn(struct proc *, void *, register_t *);
int	sys_adjtime(struct proc *, void *, register_t *);
int	compat_43_sys_getpeername(struct proc *, void *, register_t *);
int	compat_43_sys_gethostid(struct proc *, void *, register_t *);
int	sunos_sys_getrlimit(struct proc *, void *, register_t *);
int	sunos_sys_setrlimit(struct proc *, void *, register_t *);
int	compat_43_sys_killpg(struct proc *, void *, register_t *);
int	compat_43_sys_getsockname(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
#ifdef NFSSERVER
int	sunos_sys_nfssvc(struct proc *, void *, register_t *);
#else
#endif
int	sys_getdirentries(struct proc *, void *, register_t *);
int	sunos_sys_statfs(struct proc *, void *, register_t *);
int	sunos_sys_fstatfs(struct proc *, void *, register_t *);
int	sunos_sys_unmount(struct proc *, void *, register_t *);
#ifdef NFSCLIENT
int	async_daemon(struct proc *, void *, register_t *);
int	sys_getfh(struct proc *, void *, register_t *);
#else
#endif
int	compat_09_sys_getdomainname(struct proc *, void *, register_t *);
int	compat_09_sys_setdomainname(struct proc *, void *, register_t *);
int	sunos_sys_quotactl(struct proc *, void *, register_t *);
int	sunos_sys_exportfs(struct proc *, void *, register_t *);
int	sunos_sys_mount(struct proc *, void *, register_t *);
int	sunos_sys_ustat(struct proc *, void *, register_t *);
#ifdef SYSVSEM
int	compat_10_sys_semsys(struct proc *, void *, register_t *);
#else
#endif
#ifdef SYSVMSG
int	compat_10_sys_msgsys(struct proc *, void *, register_t *);
#else
#endif
#ifdef SYSVSHM
int	compat_10_sys_shmsys(struct proc *, void *, register_t *);
#else
#endif
int	sunos_sys_auditsys(struct proc *, void *, register_t *);
int	sunos_sys_getdents(struct proc *, void *, register_t *);
int	sys_setsid(struct proc *, void *, register_t *);
int	sys_fchdir(struct proc *, void *, register_t *);
int	sunos_sys_fchroot(struct proc *, void *, register_t *);
int	sunos_sys_sigpending(struct proc *, void *, register_t *);
int	sys_setpgid(struct proc *, void *, register_t *);
int	sys_pathconf(struct proc *, void *, register_t *);
int	sys_fpathconf(struct proc *, void *, register_t *);
int	sunos_sys_sysconf(struct proc *, void *, register_t *);
int	sunos_sys_uname(struct proc *, void *, register_t *);
@


1.22
log
@regen
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.21
log
@Mark vadvise(2) as obsolete and remove its implementation, so instead of
returning EINVAL, you'll get ENOSYS. No serious code has used this system
call in at least fifteen years.

The libc stub will be removed at the next major crank time.

ok henning@@ deraadt@@ krw@@ toby@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sunos_syscallargs.h,v 1.20 2007/11/27 18:05:59 art Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.16 2004/07/09 23:52:02 millert Exp 
@


1.20
log
@regen
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a285 1
int	sys_ovadvise(struct proc *, void *, register_t *);
@


1.19
log
@regen
@
text
@@


1.18
log
@regen
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.15 2004/05/28 18:28:14 tedu Exp 
d74 1
a74 1
	syscallarg(struct ostat *) ub;
d79 1
a79 1
	syscallarg(struct ostat *) ub;
@


1.17
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.14 2003/05/11 19:45:18 deraadt Exp 
d267 1
d269 2
@


1.16
log
@regen now that setreuid/setregid have moved out of compat and into kern
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.13 2003/01/30 03:29:49 millert Exp 
d294 1
a294 1
int	sys_swapon(struct proc *, void *, register_t *);
@


1.15
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: sunos_syscallargs.h,v 1.14 2002/03/14 00:44:20 miod Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.12 2002/03/14 00:42:25 miod Exp 
d329 2
a330 2
int	compat_43_sys_setreuid(struct proc *, void *, register_t *);
int	compat_43_sys_setregid(struct proc *, void *, register_t *);
@


1.14
log
@Regen after syscall changes (option PTRACE)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d230 22
a251 22
int	sys_nosys	__P((struct proc *, void *, register_t *));
int	sys_exit	__P((struct proc *, void *, register_t *));
int	sys_fork	__P((struct proc *, void *, register_t *));
int	sys_read	__P((struct proc *, void *, register_t *));
int	sys_write	__P((struct proc *, void *, register_t *));
int	sunos_sys_open	__P((struct proc *, void *, register_t *));
int	sys_close	__P((struct proc *, void *, register_t *));
int	sunos_sys_wait4	__P((struct proc *, void *, register_t *));
int	sunos_sys_creat	__P((struct proc *, void *, register_t *));
int	sys_link	__P((struct proc *, void *, register_t *));
int	sys_unlink	__P((struct proc *, void *, register_t *));
int	sunos_sys_execv	__P((struct proc *, void *, register_t *));
int	sys_chdir	__P((struct proc *, void *, register_t *));
int	sunos_sys_mknod	__P((struct proc *, void *, register_t *));
int	sys_chmod	__P((struct proc *, void *, register_t *));
int	sys_lchown	__P((struct proc *, void *, register_t *));
int	sys_obreak	__P((struct proc *, void *, register_t *));
int	compat_43_sys_lseek	__P((struct proc *, void *, register_t *));
int	sys_getpid	__P((struct proc *, void *, register_t *));
int	sys_setuid	__P((struct proc *, void *, register_t *));
int	sys_getuid	__P((struct proc *, void *, register_t *));
int	sunos_sys_ostime	__P((struct proc *, void *, register_t *));
d253 1
a253 1
int	sunos_sys_ptrace	__P((struct proc *, void *, register_t *));
d256 94
a349 94
int	sunos_sys_access	__P((struct proc *, void *, register_t *));
int	sys_sync	__P((struct proc *, void *, register_t *));
int	sys_kill	__P((struct proc *, void *, register_t *));
int	sunos_sys_stat	__P((struct proc *, void *, register_t *));
int	sunos_sys_lstat	__P((struct proc *, void *, register_t *));
int	sys_dup	__P((struct proc *, void *, register_t *));
int	sys_opipe	__P((struct proc *, void *, register_t *));
int	sunos_sys_otimes	__P((struct proc *, void *, register_t *));
int	sys_profil	__P((struct proc *, void *, register_t *));
int	sys_setgid	__P((struct proc *, void *, register_t *));
int	sys_getgid	__P((struct proc *, void *, register_t *));
int	sys_acct	__P((struct proc *, void *, register_t *));
int	sunos_sys_mctl	__P((struct proc *, void *, register_t *));
int	sunos_sys_ioctl	__P((struct proc *, void *, register_t *));
int	sunos_sys_reboot	__P((struct proc *, void *, register_t *));
int	sys_symlink	__P((struct proc *, void *, register_t *));
int	sys_readlink	__P((struct proc *, void *, register_t *));
int	sunos_sys_execve	__P((struct proc *, void *, register_t *));
int	sys_umask	__P((struct proc *, void *, register_t *));
int	sys_chroot	__P((struct proc *, void *, register_t *));
int	compat_43_sys_fstat	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getpagesize	__P((struct proc *, void *, register_t *));
int	sys_msync	__P((struct proc *, void *, register_t *));
int	sys_vfork	__P((struct proc *, void *, register_t *));
int	sys_sbrk	__P((struct proc *, void *, register_t *));
int	sys_sstk	__P((struct proc *, void *, register_t *));
int	sunos_sys_mmap	__P((struct proc *, void *, register_t *));
int	sys_ovadvise	__P((struct proc *, void *, register_t *));
int	sys_munmap	__P((struct proc *, void *, register_t *));
int	sys_mprotect	__P((struct proc *, void *, register_t *));
int	sys_madvise	__P((struct proc *, void *, register_t *));
int	sunos_sys_vhangup	__P((struct proc *, void *, register_t *));
int	sys_mincore	__P((struct proc *, void *, register_t *));
int	sys_getgroups	__P((struct proc *, void *, register_t *));
int	sys_setgroups	__P((struct proc *, void *, register_t *));
int	sys_getpgrp	__P((struct proc *, void *, register_t *));
int	sunos_sys_setpgrp	__P((struct proc *, void *, register_t *));
int	sys_setitimer	__P((struct proc *, void *, register_t *));
int	sys_swapon	__P((struct proc *, void *, register_t *));
int	sys_getitimer	__P((struct proc *, void *, register_t *));
int	compat_43_sys_gethostname	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sethostname	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getdtablesize	__P((struct proc *, void *, register_t *));
int	sys_dup2	__P((struct proc *, void *, register_t *));
int	sunos_sys_fcntl	__P((struct proc *, void *, register_t *));
int	sys_select	__P((struct proc *, void *, register_t *));
int	sys_fsync	__P((struct proc *, void *, register_t *));
int	sys_setpriority	__P((struct proc *, void *, register_t *));
int	sys_socket	__P((struct proc *, void *, register_t *));
int	sys_connect	__P((struct proc *, void *, register_t *));
int	compat_43_sys_accept	__P((struct proc *, void *, register_t *));
int	sys_getpriority	__P((struct proc *, void *, register_t *));
int	compat_43_sys_send	__P((struct proc *, void *, register_t *));
int	compat_43_sys_recv	__P((struct proc *, void *, register_t *));
int	sys_bind	__P((struct proc *, void *, register_t *));
int	sunos_sys_setsockopt	__P((struct proc *, void *, register_t *));
int	sys_listen	__P((struct proc *, void *, register_t *));
int	sunos_sys_sigvec	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sigblock	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sigsetmask	__P((struct proc *, void *, register_t *));
int	sys_sigsuspend	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sigstack	__P((struct proc *, void *, register_t *));
int	compat_43_sys_recvmsg	__P((struct proc *, void *, register_t *));
int	compat_43_sys_sendmsg	__P((struct proc *, void *, register_t *));
int	sys_gettimeofday	__P((struct proc *, void *, register_t *));
int	sys_getrusage	__P((struct proc *, void *, register_t *));
int	sys_getsockopt	__P((struct proc *, void *, register_t *));
int	sys_readv	__P((struct proc *, void *, register_t *));
int	sys_writev	__P((struct proc *, void *, register_t *));
int	sys_settimeofday	__P((struct proc *, void *, register_t *));
int	sys_fchown	__P((struct proc *, void *, register_t *));
int	sys_fchmod	__P((struct proc *, void *, register_t *));
int	compat_43_sys_recvfrom	__P((struct proc *, void *, register_t *));
int	compat_43_sys_setreuid	__P((struct proc *, void *, register_t *));
int	compat_43_sys_setregid	__P((struct proc *, void *, register_t *));
int	sys_rename	__P((struct proc *, void *, register_t *));
int	compat_43_sys_truncate	__P((struct proc *, void *, register_t *));
int	compat_43_sys_ftruncate	__P((struct proc *, void *, register_t *));
int	sys_flock	__P((struct proc *, void *, register_t *));
int	sys_sendto	__P((struct proc *, void *, register_t *));
int	sys_shutdown	__P((struct proc *, void *, register_t *));
int	sys_socketpair	__P((struct proc *, void *, register_t *));
int	sys_mkdir	__P((struct proc *, void *, register_t *));
int	sys_rmdir	__P((struct proc *, void *, register_t *));
int	sys_utimes	__P((struct proc *, void *, register_t *));
int	sunos_sys_sigreturn	__P((struct proc *, void *, register_t *));
int	sys_adjtime	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getpeername	__P((struct proc *, void *, register_t *));
int	compat_43_sys_gethostid	__P((struct proc *, void *, register_t *));
int	sunos_sys_getrlimit	__P((struct proc *, void *, register_t *));
int	sunos_sys_setrlimit	__P((struct proc *, void *, register_t *));
int	compat_43_sys_killpg	__P((struct proc *, void *, register_t *));
int	compat_43_sys_getsockname	__P((struct proc *, void *, register_t *));
int	sys_poll	__P((struct proc *, void *, register_t *));
d351 1
a351 1
int	sunos_sys_nfssvc	__P((struct proc *, void *, register_t *));
d354 4
a357 4
int	sys_getdirentries	__P((struct proc *, void *, register_t *));
int	sunos_sys_statfs	__P((struct proc *, void *, register_t *));
int	sunos_sys_fstatfs	__P((struct proc *, void *, register_t *));
int	sunos_sys_unmount	__P((struct proc *, void *, register_t *));
d359 2
a360 2
int	async_daemon	__P((struct proc *, void *, register_t *));
int	sys_getfh	__P((struct proc *, void *, register_t *));
d363 6
a368 6
int	compat_09_sys_getdomainname	__P((struct proc *, void *, register_t *));
int	compat_09_sys_setdomainname	__P((struct proc *, void *, register_t *));
int	sunos_sys_quotactl	__P((struct proc *, void *, register_t *));
int	sunos_sys_exportfs	__P((struct proc *, void *, register_t *));
int	sunos_sys_mount	__P((struct proc *, void *, register_t *));
int	sunos_sys_ustat	__P((struct proc *, void *, register_t *));
d370 1
a370 1
int	compat_10_sys_semsys	__P((struct proc *, void *, register_t *));
d374 1
a374 1
int	compat_10_sys_msgsys	__P((struct proc *, void *, register_t *));
d378 1
a378 1
int	compat_10_sys_shmsys	__P((struct proc *, void *, register_t *));
d381 11
a391 11
int	sunos_sys_auditsys	__P((struct proc *, void *, register_t *));
int	sunos_sys_getdents	__P((struct proc *, void *, register_t *));
int	sys_setsid	__P((struct proc *, void *, register_t *));
int	sys_fchdir	__P((struct proc *, void *, register_t *));
int	sunos_sys_fchroot	__P((struct proc *, void *, register_t *));
int	sunos_sys_sigpending	__P((struct proc *, void *, register_t *));
int	sys_setpgid	__P((struct proc *, void *, register_t *));
int	sys_pathconf	__P((struct proc *, void *, register_t *));
int	sys_fpathconf	__P((struct proc *, void *, register_t *));
int	sunos_sys_sysconf	__P((struct proc *, void *, register_t *));
int	sunos_sys_uname	__P((struct proc *, void *, register_t *));
@


1.13
log
@sync
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.11 1999/06/07 07:17:48 deraadt Exp 
d252 1
d254 2
@


1.13.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sunos_syscallargs.h,v 1.13 2001/08/26 04:14:27 deraadt Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.12 2002/03/14 00:42:25 miod Exp 
d230 117
a346 120
int	sys_nosys(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	sunos_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	sunos_sys_wait4(struct proc *, void *, register_t *);
int	sunos_sys_creat(struct proc *, void *, register_t *);
int	sys_link(struct proc *, void *, register_t *);
int	sys_unlink(struct proc *, void *, register_t *);
int	sunos_sys_execv(struct proc *, void *, register_t *);
int	sys_chdir(struct proc *, void *, register_t *);
int	sunos_sys_mknod(struct proc *, void *, register_t *);
int	sys_chmod(struct proc *, void *, register_t *);
int	sys_lchown(struct proc *, void *, register_t *);
int	sys_obreak(struct proc *, void *, register_t *);
int	compat_43_sys_lseek(struct proc *, void *, register_t *);
int	sys_getpid(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	sunos_sys_ostime(struct proc *, void *, register_t *);
#ifdef PTRACE
int	sunos_sys_ptrace(struct proc *, void *, register_t *);
#else
#endif
int	sunos_sys_access(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	sys_kill(struct proc *, void *, register_t *);
int	sunos_sys_stat(struct proc *, void *, register_t *);
int	sunos_sys_lstat(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	sys_opipe(struct proc *, void *, register_t *);
int	sunos_sys_otimes(struct proc *, void *, register_t *);
int	sys_profil(struct proc *, void *, register_t *);
int	sys_setgid(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
int	sys_acct(struct proc *, void *, register_t *);
int	sunos_sys_mctl(struct proc *, void *, register_t *);
int	sunos_sys_ioctl(struct proc *, void *, register_t *);
int	sunos_sys_reboot(struct proc *, void *, register_t *);
int	sys_symlink(struct proc *, void *, register_t *);
int	sys_readlink(struct proc *, void *, register_t *);
int	sunos_sys_execve(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	sys_chroot(struct proc *, void *, register_t *);
int	compat_43_sys_fstat(struct proc *, void *, register_t *);
int	compat_43_sys_getpagesize(struct proc *, void *, register_t *);
int	sys_msync(struct proc *, void *, register_t *);
int	sys_vfork(struct proc *, void *, register_t *);
int	sys_sbrk(struct proc *, void *, register_t *);
int	sys_sstk(struct proc *, void *, register_t *);
int	sunos_sys_mmap(struct proc *, void *, register_t *);
int	sys_ovadvise(struct proc *, void *, register_t *);
int	sys_munmap(struct proc *, void *, register_t *);
int	sys_mprotect(struct proc *, void *, register_t *);
int	sys_madvise(struct proc *, void *, register_t *);
int	sunos_sys_vhangup(struct proc *, void *, register_t *);
int	sys_mincore(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	sys_getpgrp(struct proc *, void *, register_t *);
int	sunos_sys_setpgrp(struct proc *, void *, register_t *);
int	sys_setitimer(struct proc *, void *, register_t *);
int	sys_swapon(struct proc *, void *, register_t *);
int	sys_getitimer(struct proc *, void *, register_t *);
int	compat_43_sys_gethostname(struct proc *, void *, register_t *);
int	compat_43_sys_sethostname(struct proc *, void *, register_t *);
int	compat_43_sys_getdtablesize(struct proc *, void *, register_t *);
int	sys_dup2(struct proc *, void *, register_t *);
int	sunos_sys_fcntl(struct proc *, void *, register_t *);
int	sys_select(struct proc *, void *, register_t *);
int	sys_fsync(struct proc *, void *, register_t *);
int	sys_setpriority(struct proc *, void *, register_t *);
int	sys_socket(struct proc *, void *, register_t *);
int	sys_connect(struct proc *, void *, register_t *);
int	compat_43_sys_accept(struct proc *, void *, register_t *);
int	sys_getpriority(struct proc *, void *, register_t *);
int	compat_43_sys_send(struct proc *, void *, register_t *);
int	compat_43_sys_recv(struct proc *, void *, register_t *);
int	sys_bind(struct proc *, void *, register_t *);
int	sunos_sys_setsockopt(struct proc *, void *, register_t *);
int	sys_listen(struct proc *, void *, register_t *);
int	sunos_sys_sigvec(struct proc *, void *, register_t *);
int	compat_43_sys_sigblock(struct proc *, void *, register_t *);
int	compat_43_sys_sigsetmask(struct proc *, void *, register_t *);
int	sys_sigsuspend(struct proc *, void *, register_t *);
int	compat_43_sys_sigstack(struct proc *, void *, register_t *);
int	compat_43_sys_recvmsg(struct proc *, void *, register_t *);
int	compat_43_sys_sendmsg(struct proc *, void *, register_t *);
int	sys_gettimeofday(struct proc *, void *, register_t *);
int	sys_getrusage(struct proc *, void *, register_t *);
int	sys_getsockopt(struct proc *, void *, register_t *);
int	sys_readv(struct proc *, void *, register_t *);
int	sys_writev(struct proc *, void *, register_t *);
int	sys_settimeofday(struct proc *, void *, register_t *);
int	sys_fchown(struct proc *, void *, register_t *);
int	sys_fchmod(struct proc *, void *, register_t *);
int	compat_43_sys_recvfrom(struct proc *, void *, register_t *);
int	compat_43_sys_setreuid(struct proc *, void *, register_t *);
int	compat_43_sys_setregid(struct proc *, void *, register_t *);
int	sys_rename(struct proc *, void *, register_t *);
int	compat_43_sys_truncate(struct proc *, void *, register_t *);
int	compat_43_sys_ftruncate(struct proc *, void *, register_t *);
int	sys_flock(struct proc *, void *, register_t *);
int	sys_sendto(struct proc *, void *, register_t *);
int	sys_shutdown(struct proc *, void *, register_t *);
int	sys_socketpair(struct proc *, void *, register_t *);
int	sys_mkdir(struct proc *, void *, register_t *);
int	sys_rmdir(struct proc *, void *, register_t *);
int	sys_utimes(struct proc *, void *, register_t *);
int	sunos_sys_sigreturn(struct proc *, void *, register_t *);
int	sys_adjtime(struct proc *, void *, register_t *);
int	compat_43_sys_getpeername(struct proc *, void *, register_t *);
int	compat_43_sys_gethostid(struct proc *, void *, register_t *);
int	sunos_sys_getrlimit(struct proc *, void *, register_t *);
int	sunos_sys_setrlimit(struct proc *, void *, register_t *);
int	compat_43_sys_killpg(struct proc *, void *, register_t *);
int	compat_43_sys_getsockname(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
d348 1
a348 1
int	sunos_sys_nfssvc(struct proc *, void *, register_t *);
d351 4
a354 4
int	sys_getdirentries(struct proc *, void *, register_t *);
int	sunos_sys_statfs(struct proc *, void *, register_t *);
int	sunos_sys_fstatfs(struct proc *, void *, register_t *);
int	sunos_sys_unmount(struct proc *, void *, register_t *);
d356 2
a357 2
int	async_daemon(struct proc *, void *, register_t *);
int	sys_getfh(struct proc *, void *, register_t *);
d360 6
a365 6
int	compat_09_sys_getdomainname(struct proc *, void *, register_t *);
int	compat_09_sys_setdomainname(struct proc *, void *, register_t *);
int	sunos_sys_quotactl(struct proc *, void *, register_t *);
int	sunos_sys_exportfs(struct proc *, void *, register_t *);
int	sunos_sys_mount(struct proc *, void *, register_t *);
int	sunos_sys_ustat(struct proc *, void *, register_t *);
d367 1
a367 1
int	compat_10_sys_semsys(struct proc *, void *, register_t *);
d371 1
a371 1
int	compat_10_sys_msgsys(struct proc *, void *, register_t *);
d375 1
a375 1
int	compat_10_sys_shmsys(struct proc *, void *, register_t *);
d378 11
a388 11
int	sunos_sys_auditsys(struct proc *, void *, register_t *);
int	sunos_sys_getdents(struct proc *, void *, register_t *);
int	sys_setsid(struct proc *, void *, register_t *);
int	sys_fchdir(struct proc *, void *, register_t *);
int	sunos_sys_fchroot(struct proc *, void *, register_t *);
int	sunos_sys_sigpending(struct proc *, void *, register_t *);
int	sys_setpgid(struct proc *, void *, register_t *);
int	sys_pathconf(struct proc *, void *, register_t *);
int	sys_fpathconf(struct proc *, void *, register_t *);
int	sunos_sys_sysconf(struct proc *, void *, register_t *);
int	sunos_sys_uname(struct proc *, void *, register_t *);
@


1.13.4.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.14 2003/05/11 19:45:18 deraadt Exp 
d294 1
a294 1
int	compat_25_sys_swapon(struct proc *, void *, register_t *);
d329 2
a330 2
int	sys_setreuid(struct proc *, void *, register_t *);
int	sys_setregid(struct proc *, void *, register_t *);
@


1.12
log
@regen after removing compatopts
@
text
@d10 15
a24 1
#define	syscallarg(x)	union { x datum; register_t pad; }
@


1.11
log
@sync
@
text
@@


1.11.4.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunos_syscallargs.h,v 1.11 1999/06/07 07:18:36 deraadt Exp $	*/
@


1.11.4.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: sunos_syscallargs.h,v 1.11.4.1 2001/07/04 10:39:43 niklas Exp $	*/
d10 1
a10 15
#ifdef	syscallarg
#undef	syscallarg
#endif

#define	syscallarg(x)							\
	union {								\
		register_t pad;						\
		struct { x datum; } le;					\
		struct {						\
			int8_t pad[ (sizeof (register_t) < sizeof (x))	\
				? 0					\
				: sizeof (register_t) - sizeof (x)];	\
			x datum;					\
		} be;							\
	}
@


1.11.4.3
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.12 2002/03/14 00:42:25 miod Exp 
d230 117
a346 120
int	sys_nosys(struct proc *, void *, register_t *);
int	sys_exit(struct proc *, void *, register_t *);
int	sys_fork(struct proc *, void *, register_t *);
int	sys_read(struct proc *, void *, register_t *);
int	sys_write(struct proc *, void *, register_t *);
int	sunos_sys_open(struct proc *, void *, register_t *);
int	sys_close(struct proc *, void *, register_t *);
int	sunos_sys_wait4(struct proc *, void *, register_t *);
int	sunos_sys_creat(struct proc *, void *, register_t *);
int	sys_link(struct proc *, void *, register_t *);
int	sys_unlink(struct proc *, void *, register_t *);
int	sunos_sys_execv(struct proc *, void *, register_t *);
int	sys_chdir(struct proc *, void *, register_t *);
int	sunos_sys_mknod(struct proc *, void *, register_t *);
int	sys_chmod(struct proc *, void *, register_t *);
int	sys_lchown(struct proc *, void *, register_t *);
int	sys_obreak(struct proc *, void *, register_t *);
int	compat_43_sys_lseek(struct proc *, void *, register_t *);
int	sys_getpid(struct proc *, void *, register_t *);
int	sys_setuid(struct proc *, void *, register_t *);
int	sys_getuid(struct proc *, void *, register_t *);
int	sunos_sys_ostime(struct proc *, void *, register_t *);
#ifdef PTRACE
int	sunos_sys_ptrace(struct proc *, void *, register_t *);
#else
#endif
int	sunos_sys_access(struct proc *, void *, register_t *);
int	sys_sync(struct proc *, void *, register_t *);
int	sys_kill(struct proc *, void *, register_t *);
int	sunos_sys_stat(struct proc *, void *, register_t *);
int	sunos_sys_lstat(struct proc *, void *, register_t *);
int	sys_dup(struct proc *, void *, register_t *);
int	sys_opipe(struct proc *, void *, register_t *);
int	sunos_sys_otimes(struct proc *, void *, register_t *);
int	sys_profil(struct proc *, void *, register_t *);
int	sys_setgid(struct proc *, void *, register_t *);
int	sys_getgid(struct proc *, void *, register_t *);
int	sys_acct(struct proc *, void *, register_t *);
int	sunos_sys_mctl(struct proc *, void *, register_t *);
int	sunos_sys_ioctl(struct proc *, void *, register_t *);
int	sunos_sys_reboot(struct proc *, void *, register_t *);
int	sys_symlink(struct proc *, void *, register_t *);
int	sys_readlink(struct proc *, void *, register_t *);
int	sunos_sys_execve(struct proc *, void *, register_t *);
int	sys_umask(struct proc *, void *, register_t *);
int	sys_chroot(struct proc *, void *, register_t *);
int	compat_43_sys_fstat(struct proc *, void *, register_t *);
int	compat_43_sys_getpagesize(struct proc *, void *, register_t *);
int	sys_msync(struct proc *, void *, register_t *);
int	sys_vfork(struct proc *, void *, register_t *);
int	sys_sbrk(struct proc *, void *, register_t *);
int	sys_sstk(struct proc *, void *, register_t *);
int	sunos_sys_mmap(struct proc *, void *, register_t *);
int	sys_ovadvise(struct proc *, void *, register_t *);
int	sys_munmap(struct proc *, void *, register_t *);
int	sys_mprotect(struct proc *, void *, register_t *);
int	sys_madvise(struct proc *, void *, register_t *);
int	sunos_sys_vhangup(struct proc *, void *, register_t *);
int	sys_mincore(struct proc *, void *, register_t *);
int	sys_getgroups(struct proc *, void *, register_t *);
int	sys_setgroups(struct proc *, void *, register_t *);
int	sys_getpgrp(struct proc *, void *, register_t *);
int	sunos_sys_setpgrp(struct proc *, void *, register_t *);
int	sys_setitimer(struct proc *, void *, register_t *);
int	sys_swapon(struct proc *, void *, register_t *);
int	sys_getitimer(struct proc *, void *, register_t *);
int	compat_43_sys_gethostname(struct proc *, void *, register_t *);
int	compat_43_sys_sethostname(struct proc *, void *, register_t *);
int	compat_43_sys_getdtablesize(struct proc *, void *, register_t *);
int	sys_dup2(struct proc *, void *, register_t *);
int	sunos_sys_fcntl(struct proc *, void *, register_t *);
int	sys_select(struct proc *, void *, register_t *);
int	sys_fsync(struct proc *, void *, register_t *);
int	sys_setpriority(struct proc *, void *, register_t *);
int	sys_socket(struct proc *, void *, register_t *);
int	sys_connect(struct proc *, void *, register_t *);
int	compat_43_sys_accept(struct proc *, void *, register_t *);
int	sys_getpriority(struct proc *, void *, register_t *);
int	compat_43_sys_send(struct proc *, void *, register_t *);
int	compat_43_sys_recv(struct proc *, void *, register_t *);
int	sys_bind(struct proc *, void *, register_t *);
int	sunos_sys_setsockopt(struct proc *, void *, register_t *);
int	sys_listen(struct proc *, void *, register_t *);
int	sunos_sys_sigvec(struct proc *, void *, register_t *);
int	compat_43_sys_sigblock(struct proc *, void *, register_t *);
int	compat_43_sys_sigsetmask(struct proc *, void *, register_t *);
int	sys_sigsuspend(struct proc *, void *, register_t *);
int	compat_43_sys_sigstack(struct proc *, void *, register_t *);
int	compat_43_sys_recvmsg(struct proc *, void *, register_t *);
int	compat_43_sys_sendmsg(struct proc *, void *, register_t *);
int	sys_gettimeofday(struct proc *, void *, register_t *);
int	sys_getrusage(struct proc *, void *, register_t *);
int	sys_getsockopt(struct proc *, void *, register_t *);
int	sys_readv(struct proc *, void *, register_t *);
int	sys_writev(struct proc *, void *, register_t *);
int	sys_settimeofday(struct proc *, void *, register_t *);
int	sys_fchown(struct proc *, void *, register_t *);
int	sys_fchmod(struct proc *, void *, register_t *);
int	compat_43_sys_recvfrom(struct proc *, void *, register_t *);
int	compat_43_sys_setreuid(struct proc *, void *, register_t *);
int	compat_43_sys_setregid(struct proc *, void *, register_t *);
int	sys_rename(struct proc *, void *, register_t *);
int	compat_43_sys_truncate(struct proc *, void *, register_t *);
int	compat_43_sys_ftruncate(struct proc *, void *, register_t *);
int	sys_flock(struct proc *, void *, register_t *);
int	sys_sendto(struct proc *, void *, register_t *);
int	sys_shutdown(struct proc *, void *, register_t *);
int	sys_socketpair(struct proc *, void *, register_t *);
int	sys_mkdir(struct proc *, void *, register_t *);
int	sys_rmdir(struct proc *, void *, register_t *);
int	sys_utimes(struct proc *, void *, register_t *);
int	sunos_sys_sigreturn(struct proc *, void *, register_t *);
int	sys_adjtime(struct proc *, void *, register_t *);
int	compat_43_sys_getpeername(struct proc *, void *, register_t *);
int	compat_43_sys_gethostid(struct proc *, void *, register_t *);
int	sunos_sys_getrlimit(struct proc *, void *, register_t *);
int	sunos_sys_setrlimit(struct proc *, void *, register_t *);
int	compat_43_sys_killpg(struct proc *, void *, register_t *);
int	compat_43_sys_getsockname(struct proc *, void *, register_t *);
int	sys_poll(struct proc *, void *, register_t *);
d348 1
a348 1
int	sunos_sys_nfssvc(struct proc *, void *, register_t *);
d351 4
a354 4
int	sys_getdirentries(struct proc *, void *, register_t *);
int	sunos_sys_statfs(struct proc *, void *, register_t *);
int	sunos_sys_fstatfs(struct proc *, void *, register_t *);
int	sunos_sys_unmount(struct proc *, void *, register_t *);
d356 2
a357 2
int	async_daemon(struct proc *, void *, register_t *);
int	sys_getfh(struct proc *, void *, register_t *);
d360 6
a365 6
int	compat_09_sys_getdomainname(struct proc *, void *, register_t *);
int	compat_09_sys_setdomainname(struct proc *, void *, register_t *);
int	sunos_sys_quotactl(struct proc *, void *, register_t *);
int	sunos_sys_exportfs(struct proc *, void *, register_t *);
int	sunos_sys_mount(struct proc *, void *, register_t *);
int	sunos_sys_ustat(struct proc *, void *, register_t *);
d367 1
a367 1
int	compat_10_sys_semsys(struct proc *, void *, register_t *);
d371 1
a371 1
int	compat_10_sys_msgsys(struct proc *, void *, register_t *);
d375 1
a375 1
int	compat_10_sys_shmsys(struct proc *, void *, register_t *);
d378 11
a388 11
int	sunos_sys_auditsys(struct proc *, void *, register_t *);
int	sunos_sys_getdents(struct proc *, void *, register_t *);
int	sys_setsid(struct proc *, void *, register_t *);
int	sys_fchdir(struct proc *, void *, register_t *);
int	sunos_sys_fchroot(struct proc *, void *, register_t *);
int	sunos_sys_sigpending(struct proc *, void *, register_t *);
int	sys_setpgid(struct proc *, void *, register_t *);
int	sys_pathconf(struct proc *, void *, register_t *);
int	sys_fpathconf(struct proc *, void *, register_t *);
int	sunos_sys_sysconf(struct proc *, void *, register_t *);
int	sunos_sys_uname(struct proc *, void *, register_t *);
@


1.11.4.4
log
@Sync the SMP branch with 3.3
@
text
@d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.13 2003/01/30 03:29:49 millert Exp 
d329 2
a330 2
int	sys_setreuid(struct proc *, void *, register_t *);
int	sys_setregid(struct proc *, void *, register_t *);
@


1.11.4.5
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: sunos_syscallargs.h,v 1.11.4.4 2003/03/27 23:53:48 niklas Exp $	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.14 2003/05/11 19:45:18 deraadt Exp 
d294 1
a294 1
int	compat_25_sys_swapon(struct proc *, void *, register_t *);
@


1.11.4.6
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.15 2004/05/28 18:28:14 tedu Exp 
a266 1
#ifdef ACCOUNTING
a267 2
#else
#endif
@


1.10
log
@regen
@
text
@d1 2
d7 1
a7 1
 * created from	OpenBSD: syscalls.master,v 1.10 1998/03/23 07:12:40 millert Exp 
d245 1
a245 1
int	sys_pipe	__P((struct proc *, void *, register_t *));
@


1.9
log
@Emulate otimes(2)
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.8 1997/11/13 18:35:29 deraadt Exp 
d39 2
a40 2
struct sunos_sys_stime_args {
	syscallarg(time_t *) tp;
d235 1
a235 1
int	sunos_sys_stime	__P((struct proc *, void *, register_t *));
@


1.8
log
@sync
@
text
@d66 4
d244 1
@


1.7
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.7 1997/07/28 09:53:13 deraadt Exp 
a89 6
struct sunos_sys_omsync_args {
	syscallarg(caddr_t) addr;
	syscallarg(size_t) len;
	syscallarg(int) flags;
};

d254 1
a254 1
int	sunos_sys_omsync	__P((struct proc *, void *, register_t *));
@


1.6
log
@Regen.
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.6 1997/01/26 23:52:03 downsj Exp 
d39 4
d237 1
@


1.5
log
@sync
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.5 1996/08/25 12:19:58 deraadt Exp 
d227 1
a227 1
int	sys_chown	__P((struct proc *, void *, register_t *));
@


1.4
log
@Regen
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.4 1996/08/02 21:55:22 niklas Exp 
d80 6
d250 1
a250 1
int	sys_execve	__P((struct proc *, void *, register_t *));
@


1.3
log
@Added Makefiles to build stuff from syscalls.master in some emulations.
Regenerated derived files from various syscalls.master files. Added $OpenBSD$.
@
text
@d5 1
a5 1
 * created from	OpenBSD: syscalls.master,v 1.3 1996/08/02 20:20:31 niklas Exp 
a131 6
};

struct sys_poll_args {
	syscallarg(struct pollfd *) fds;
	syscallarg(unsigned long) nfds;
	syscallarg(int) timeout;
@


1.2
log
@Merge of NetBSD 960317
@
text
@d5 1
a5 1
 * created from	OpenBSD
d134 3
a136 3
struct sunos_sys_poll_args {
	syscallarg(struct sunos_pollfd *) fds;
	syscallarg(long) nfds;
d326 1
a326 1
int	sunos_sys_poll	__P((struct proc *, void *, register_t *));
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
 * created from	NetBSD: syscalls.master,v 1.32 1995/10/07 06:27:35 mycroft Exp 
d100 6
d277 1
a277 1
int	sys_fcntl	__P((struct proc *, void *, register_t *));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
