head	1.20;
access;
symbols
	OPENBSD_4_2:1.19.0.12
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.19.0.10
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.19.0.8
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.19.0.6
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.4
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.2
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.18.0.2
	OPENBSD_3_6_BASE:1.18
	SMP_SYNC_A:1.17
	SMP_SYNC_B:1.17
	OPENBSD_3_5:1.16.0.2
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.13
	OPENBSD_3_3:1.13.0.2
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.11.0.6
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.12
	UBC:1.11.0.4
	UBC_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.7.0.8
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.6
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.4
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.8
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.20
date	2007.11.25.11.23.33;	author deraadt;	state dead;
branches;
next	1.19;

1.19
date	2004.09.16.13.57.47;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2004.07.13.21.04.29;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2004.05.03.17.38.48;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2004.02.27.17.36.16;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2004.01.28.01.39.39;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.24.22.45.33;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2003.01.30.03.29.49;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.07.14.09.20.24;	author mdw;	state Exp;
branches;
next	1.11;

1.11
date	2001.08.19.18.35.49;	author art;	state Exp;
branches
	1.11.4.1;
next	1.10;

1.10
date	2001.08.19.18.29.02;	author art;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.16.17.14.38;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.23.05.48.04;	author csapuntz;	state Exp;
branches;
next	1.7;

1.7
date	99.05.22.21.22.33;	author weingart;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	97.05.30.09.40.57;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.05.22.12.01.44;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.03.03.05.26.21;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.02.26.23.26.48;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.04.46.58;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.12;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.12;	author deraadt;	state Exp;
branches;
next	;

1.7.4.1
date	2001.05.14.22.04.17;	author niklas;	state Exp;
branches;
next	1.7.4.2;

1.7.4.2
date	2001.07.04.10.39.13;	author niklas;	state Exp;
branches;
next	1.7.4.3;

1.7.4.3
date	2001.10.31.03.11.45;	author nate;	state Exp;
branches;
next	1.7.4.4;

1.7.4.4
date	2003.03.27.23.53.47;	author niklas;	state Exp;
branches;
next	1.7.4.5;

1.7.4.5
date	2004.02.19.10.51.28;	author niklas;	state Exp;
branches;
next	1.7.4.6;

1.7.4.6
date	2004.06.05.23.12.34;	author niklas;	state Exp;
branches;
next	;

1.11.4.1
date	2002.10.29.00.30.51;	author art;	state Exp;
branches;
next	1.11.4.2;

1.11.4.2
date	2003.05.19.21.51.44;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Get rid of the kernel 'libcompat' framework, and instead use conf/files to
decide which files must be pulled into the kernel.  Also conditionalize
the pulling of those files based on the COMPAT_* options.
@
text
@#	$OpenBSD: Makefile,v 1.19 2004/09/16 13:57:47 miod Exp $
#	$NetBSD: Makefile,v 1.8 1996/05/18 15:52:19 christos Exp $

LIB=	compat
NOPIC=

MACHINE=	${XMACHINE}
MACHINE_ARCH=	${XMACHINE_ARCH}

.PATH:	${COMPATDIR}

SRCS=	compat_exec.c compat_util.c compat_dir.c compat_vm.c \
	kern_exit_43.c kern_ipc_23.c kern_ipc_35.c kern_info_09.c \
	kern_info_43.c kern_resource_43.c kern_sig_43.c tty_43.c \
	uipc_syscalls_43.c vfs_syscalls_25.c vfs_syscalls_35.c \
	vfs_syscalls_43.c vm_43.c

# really, all machines where sizeof(int) != sizeof(long)
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != "amd64") && \
    (${MACHINE_ARCH} != "mips64") && (${MACHINE_ARCH} != "sparc64")
SRCS+=	kern_ipc_10.c 
.endif

install:

.include <bsd.lib.mk>
@


1.19
log
@No kern_ipc_10 on mips64.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2004/07/13 21:04:29 millert Exp $
@


1.18
log
@Change mode_t and nlink_t from 16bit to 32bit.  This allows us to
use mode_t in syscalls.master and to use mode_t in more places in
the kernel.  It also makes lint much more useful on kernel code.

I've also added a placeholder for st_birthtime to make a UFS2 import
easier at some future date.

Requested by and OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2004/05/03 17:38:48 millert Exp $
d20 1
a20 1
    (${MACHINE_ARCH} != "sparc64")
@


1.17
log
@POSIX says the length parameter for semop(2) and shmget(2) should be size_t.
Create new syscalls with the correct parameters and add compat versions
for the old ones under COMPAT_35.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2004/02/27 17:36:16 deraadt Exp $
d15 2
a16 1
	uipc_syscalls_43.c vfs_syscalls_25.c vfs_syscalls_43.c vm_43.c
@


1.16
log
@change amd64's MACHINE_ARCH from x86_64 to amd64.  There are many many
reasons for this, quite a few of them technical, and not all of them
in response to Intel's broken ia32e crud.  The gcc toolchain stays at
x86_64 for now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2004/01/28 01:39:39 mickey Exp $
d13 3
a15 3
	kern_exit_43.c kern_ipc_23.c kern_info_09.c kern_info_43.c \
	kern_resource_43.c kern_sig_43.c tty_43.c uipc_syscalls_43.c \
	vfs_syscalls_25.c vfs_syscalls_43.c vm_43.c
@


1.15
log
@an amd64 arch support.
hacked by art@@ from netbsd sources and then later debugged
by me into the shape where it can host itself.
no bootloader yet as needs redoing from the
recent advanced i386 sources (anyone? ;)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2003/06/24 22:45:33 espie Exp $
d18 1
a18 1
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != "x86_64") && \
@


1.14
log
@a.out emulation for dynamic binaries: intercept the right system calls
so that they look in /emul/a.out first. This allows a.out's ld.so to
find its own libraries without interfering with ELF at all.

Many comments from various people. okay deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2003/01/30 03:29:49 millert Exp $
d18 2
a19 1
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != "sparc64")
@


1.13
log
@Bring back setreuid(2) and setregid(2) as first class syscalls
(but still implemented via setres[ug]id(2)).  Basically this just
moves them from COMPAT_43 into kern_prot.c.  Also fixes a typo in my
old implementation.  The userland portion will follow in a few days.
deraadt@@ OK
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2002/07/14 09:20:24 mdw Exp $
d12 2
a13 2
SRCS=	compat_exec.c compat_util.c compat_dir.c compat_vm.c kern_exit_43.c \
	kern_ipc_23.c kern_info_09.c kern_info_43.c \
@


1.12
log
@More glue needed for cross-compilation
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2001/08/19 18:35:49 art Exp $
d13 1
a13 1
	kern_ipc_23.c kern_info_09.c kern_info_43.c kern_prot_43.c \
@


1.11
log
@correct the logic.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2001/08/19 18:29:02 art Exp $
d6 3
@


1.11.4.1
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2001/08/19 18:35:49 art Exp $
a5 3

MACHINE=	${XMACHINE}
MACHINE_ARCH=	${XMACHINE_ARCH}
@


1.11.4.2
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
d13 1
a13 1
	kern_ipc_23.c kern_info_09.c kern_info_43.c \
@


1.10
log
@$%&@@#!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2001/05/16 17:14:38 millert Exp $
d15 1
a15 1
.if (${MACHINE_ARCH} != "alpha") || (${MACHINE_ARCH} != "sparc64")
@


1.9
log
@Create COMPAT_25 and move ogetfsstat, ostatfs and ostatfs into it.
Create COMPAT_23 and move __osemctl, omsgctl, oshmctl there.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2001/01/23 05:48:04 csapuntz Exp $
d15 1
a15 1
.if (${MACHINE_ARCH} != "alpha")
@


1.8
log
@

SunOS, IBCS2, Linux, and SVR4 all require translations of directory entries
from OpenBSD format to their respective native formats.

A lot of common code here for interfacing with OpenBSD VOP_READDIR. Most
of this code and logic has been moved to common/compat_dir.c

When reading a portion of the directory, the compatibility layer registers
a callback which is passed an OpenBSD-style dirent and the cookie/offset.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1999/05/22 21:22:33 weingart Exp $
d10 3
a12 2
	kern_info_09.c kern_info_43.c kern_prot_43.c kern_resource_43.c \
	kern_sig_43.c tty_43.c uipc_syscalls_43.c vfs_syscalls_43.c vm_43.c
d14 1
a14 1
# really, all machines were sizeof(int) != sizeof(long)
@


1.7
log
@Add new vm_swap code for dynamic swap.  From netbsd, munged some by me, and
others.   syscall commit pending.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1997/05/30 09:40:57 niklas Exp $
d9 1
a9 1
SRCS=	compat_exec.c compat_util.c compat_vm.c kern_exit_43.c \
@


1.7.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2001/01/23 05:48:04 csapuntz Exp $
d9 1
a9 1
SRCS=	compat_exec.c compat_util.c compat_dir.c compat_vm.c kern_exit_43.c \
@


1.7.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7.4.1 2001/05/14 22:04:17 niklas Exp $
d10 2
a11 3
	kern_ipc_23.c kern_info_09.c kern_info_43.c kern_prot_43.c \
	kern_resource_43.c kern_sig_43.c tty_43.c uipc_syscalls_43.c \
	vfs_syscalls_25.c vfs_syscalls_43.c vm_43.c
d13 1
a13 1
# really, all machines where sizeof(int) != sizeof(long)
@


1.7.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7.4.2 2001/07/04 10:39:13 niklas Exp $
d15 1
a15 1
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != "sparc64")
@


1.7.4.4
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD$
a6 3
MACHINE=	${XMACHINE}
MACHINE_ARCH=	${XMACHINE_ARCH}

d10 1
a10 1
	kern_ipc_23.c kern_info_09.c kern_info_43.c \
@


1.7.4.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d12 2
a13 2
SRCS=	compat_exec.c compat_util.c compat_dir.c compat_vm.c \
	kern_exit_43.c kern_ipc_23.c kern_info_09.c kern_info_43.c \
d18 1
a18 2
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != "x86_64") && \
    (${MACHINE_ARCH} != "sparc64")
@


1.7.4.6
log
@Merge with the trunk
@
text
@d13 3
a15 3
	kern_exit_43.c kern_ipc_23.c kern_ipc_35.c kern_info_09.c \
	kern_info_43.c kern_resource_43.c kern_sig_43.c tty_43.c \
	uipc_syscalls_43.c vfs_syscalls_25.c vfs_syscalls_43.c vm_43.c
d18 1
a18 1
.if (${MACHINE_ARCH} != "alpha") && (${MACHINE_ARCH} != "amd64") && \
@


1.6
log
@Build nicely when $S is absolute
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1996/05/22 12:01:44 deraadt Exp $
d9 3
a11 3
SRCS=	compat_exec.c compat_util.c kern_exit_43.c kern_info_09.c \
	kern_info_43.c kern_prot_43.c kern_resource_43.c kern_sig_43.c \
	tty_43.c uipc_syscalls_43.c vfs_syscalls_43.c vm_43.c
@


1.5
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1996/02/26 23:26:48 niklas Exp $
d7 1
a7 3
CPPFLAGS=	${COMPATCPPFLAGS:S/-I./-I${COMPATREL}./g}

.PATH:	${COMPATREL}${COMPATDIR}
@


1.4
log
@Makefiles seemed to be broken a bit, i don't even
know how it happens to work still ... probably nobody rebuilt libcompat.a.
Fron NetBSD: kern_info_*.c, seemed to be a bug fix.
@
text
@d2 1
a2 1
#	$NetBSD: Makefile,v 1.7 1996/02/05 01:58:28 christos Exp $
d11 1
a11 1
SRCS=	compat_util.c kern_exit_43.c kern_info_09.c \
@


1.3
log
@From NetBSD: update to 960217 sources
@
text
@d1 1
a1 1
#	$OpenBSD$
d7 1
a7 1
CPPFLAGS=	${COMPATCPPFLAGS:S@@-I.@@-I${COMPATREL}.@@g}
@


1.2
log
@update from netbsd
@
text
@d1 2
a2 1
#	$NetBSD: Makefile,v 1.4 1995/10/20 00:34:15 cgd Exp $
d7 2
d11 1
a11 4
CC=	${COMPATCC}
CFLAGS=	${COMPATCFLAGS:S@@-I.@@-I${COMPATREL}.@@g}

SRCS=	compat_tty.c compat_util.c kern_exit_43.c kern_info_09.c \
d13 1
a13 1
	uipc_syscalls_43.c vfs_syscalls_43.c
a20 1

@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: Makefile,v 1.3 1995/06/28 03:00:20 cgd Exp $
d9 1
a9 1
CFLAGS+= ${COMPATCFLAGS:S@@-I.@@-I${COMPATREL}.@@g}
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
