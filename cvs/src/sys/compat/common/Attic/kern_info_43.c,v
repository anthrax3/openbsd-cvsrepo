head	1.17;
access;
symbols
	OPENBSD_4_9:1.15.0.32
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.30
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.26
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.28
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.24
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.22
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.20
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.18
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.16
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.14
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.12
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.10
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.8
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.6
	OPENBSD_3_6_BASE:1.15
	SMP_SYNC_A:1.15
	SMP_SYNC_B:1.15
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	UBC_SYNC_A:1.13
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.12
	UBC:1.11.0.2
	UBC_BASE:1.11
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.12
	OPENBSD_2_8:1.9.0.10
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.8
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.6
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.4
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.2
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.8.0.4
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.6
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.4
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2011.07.07.01.23.56;	author tedu;	state dead;
branches;
next	1.16;

1.16
date	2011.03.12.04.54.28;	author guenther;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.15.20.32.15;	author tedu;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.02.23.27.59;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2003.05.12.18.54.29;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.14.20.31.31;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.06.19.53.17;	author miod;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2001.06.27.04.58.41;	author art;	state Exp;
branches;
next	1.9;

1.9
date	99.02.26.04.09.47;	author art;	state Exp;
branches
	1.9.6.1;
next	1.8;

1.8
date	98.02.22.22.00.11;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.05.23.08.32.22;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.05.22.12.01.45;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.03.03.05.26.23;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.02.26.23.26.52;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.02.02.23.25.15;	author etheisen;	state Exp;
branches;
next	1.2;

1.2
date	96.02.02.22.45.44;	author etheisen;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.12;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.12;	author deraadt;	state Exp;
branches;
next	;

1.9.6.1
date	2001.07.04.10.39.14;	author niklas;	state Exp;
branches;
next	1.9.6.2;

1.9.6.2
date	2001.11.13.21.05.47;	author niklas;	state Exp;
branches;
next	1.9.6.3;

1.9.6.3
date	2002.03.28.11.28.05;	author niklas;	state Exp;
branches;
next	1.9.6.4;

1.9.6.4
date	2003.05.16.00.29.41;	author niklas;	state Exp;
branches;
next	1.9.6.5;

1.9.6.5
date	2003.06.07.11.00.36;	author ho;	state Exp;
branches;
next	1.9.6.6;

1.9.6.6
date	2004.02.19.10.51.28;	author niklas;	state Exp;
branches;
next	;

1.11.2.1
date	2002.06.11.03.28.07;	author art;	state Exp;
branches;
next	1.11.2.2;

1.11.2.2
date	2003.05.19.21.51.44;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.17
log
@remove old files
@
text
@/*	$OpenBSD: kern_info_43.c,v 1.16 2011/03/12 04:54:28 guenther Exp $	*/
/*	$NetBSD: kern_info_43.c,v 1.5 1996/02/04 02:02:22 christos Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)subr_xxx.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/filedesc.h>
#include <sys/kernel.h>
#include <sys/vnode.h>
#include <sys/proc.h>
#include <sys/file.h>
#include <sys/socket.h>
#include <sys/socketvar.h>
#include <sys/stat.h>
#include <sys/ioctl.h>
#include <sys/fcntl.h>
#include <sys/malloc.h>
#include <sys/syslog.h>
#include <sys/unistd.h>
#include <sys/resourcevar.h>
#include <uvm/uvm_extern.h>
#include <sys/sysctl.h>

#include <sys/mount.h>
#include <sys/syscallargs.h>

int
compat_43_sys_getdtablesize(p, v, retval)
	struct proc *p;
	void *v;
	register_t *retval;
{

	*retval = min((int)p->p_rlimit[RLIMIT_NOFILE].rlim_cur, maxfiles);
	return (0);
}


/* ARGSUSED */
int
compat_43_sys_gethostid(p, v, retval)
	struct proc *p;
	void *v;
	register_t *retval;
{

	*(int32_t *)retval = hostid;
	return (0);
}


/*ARGSUSED*/
int
compat_43_sys_gethostname(p, v, retval)
	struct proc *p;
	void *v;
	register_t *retval;
{
	struct compat_43_sys_gethostname_args /* {
		syscallarg(char *) hostname;
		syscallarg(u_int) len;
	} */ *uap = v;
	int name;
	size_t sz;

	name = KERN_HOSTNAME;
	sz = SCARG(uap, len);
	return (kern_sysctl(&name, 1, SCARG(uap, hostname), &sz, 0, 0, p));
}

#define	KINFO_PROC		(0<<8)
#define	KINFO_RT		(1<<8)
#define	KINFO_VNODE		(2<<8)
#define	KINFO_FILE		(3<<8)
#define	KINFO_METER		(4<<8)
#define	KINFO_LOADAVG		(5<<8)
#define	KINFO_CLOCKRATE		(6<<8)
#define	KINFO_BSDI_SYSINFO	(101<<8)


/*
 * The string data is appended to the end of the bsdi_si structure during
 * copyout. The "char *" offsets in the bsdi_si struct are relative to the
 * base of the bsdi_si struct. 
 */
struct bsdi_si {
        char    *machine;
        char    *cpu_model;
        long    ncpu;
        long    cpuspeed;
        long    hwflags;
        u_long  physmem;
        u_long  usermem;
        u_long  pagesize;

        char    *ostype;
        char    *osrelease;
        long    os_revision;
        long    posix1_version;
        char    *version;

        long    hz;
        long    profhz;
        int     ngroups_max;
        long    arg_max;
        long    open_max;
        long    child_max;

        struct  timeval boottime;
        char    *hostname;
};

/* Non-standard BSDI extension - only present on their 4.3 net-2 releases */
#define       KINFO_BSDI_SYSINFO      (101<<8)

/*
 * XXX this is bloat, but I hope it's better here than on the potentially
 * limited kernel stack...  -Peter
 */

struct {      
	char    *bsdi_machine;          /* "i386" on BSD/386 */
	char    *pad0;
	long    pad1;
	long    pad2;
	long    pad3;
	u_long  pad4;
	u_long  pad5;
	u_long  pad6;

	char    *bsdi_ostype;           /* "BSD/386" on BSD/386 */
	char    *bsdi_osrelease;        /* "1.1" on BSD/386 */
	long    pad7;   
	long    pad8;
	char    *pad9;

	long    pad10;
	long    pad11;  
	int     pad12;
	long    pad13; 
	quad_t  pad14; 
	long    pad15;

	struct  timeval pad16;
	/* we dont set this, because BSDI's uname used gethostname() instead */
	char    *bsdi_hostname;         /* hostname on BSD/386 */

	/* the actual string data is appended here */

} bsdi_si;
/*
 * this data is appended to the end of the bsdi_si structure during copyout.
 * The "char *" offsets are relative to the base of the bsdi_si struct.
 * This contains "OpenBSD\01.2-BUILT-nnnnnn\0i386\0", and these strings
 * should not exceed the length of the buffer here... (or else!! :-)
 */
char bsdi_strings[80];        /* It had better be less than this! */

int
compat_43_sys_getkerninfo(p, v, retval)
	struct proc *p;
	void *v;
	register_t *retval;
{
	register struct compat_43_sys_getkerninfo_args /* {
		syscallarg(int) op;
		syscallarg(char *) where;
		syscallarg(int *) size;
		syscallarg(int) arg;
	} */ *uap = v;
	int error, name[5];
	size_t size;

	extern char machine[];

	if (SCARG(uap, size) && (error = copyin((caddr_t)SCARG(uap, size),
	    (caddr_t)&size, sizeof(size))))
		return (error);

	switch (SCARG(uap, op) & 0xff00) {

	case KINFO_RT:
		name[0] = PF_ROUTE;
		name[1] = 0;
		name[2] = (SCARG(uap, op) & 0xff0000) >> 16;
		name[3] = SCARG(uap, op) & 0xff;
		name[4] = SCARG(uap, arg);
		error =
		    net_sysctl(name, 5, SCARG(uap, where), &size, NULL, 0, p);
		break;

	case KINFO_VNODE:
		name[0] = KERN_VNODE;
		error =
		    kern_sysctl(name, 1, SCARG(uap, where), &size, NULL, 0, p);
		break;

	case KINFO_FILE:
		name[0] = KERN_FILE;
		error =
		    kern_sysctl(name, 1, SCARG(uap, where), &size, NULL, 0, p);
		break;

	case KINFO_METER:
		name[0] = VM_METER;
		error =
		    uvm_sysctl(name, 1, SCARG(uap, where), &size, NULL, 0, p);
		break;

	case KINFO_LOADAVG:
		name[0] = VM_LOADAVG;
		error =
		    uvm_sysctl(name, 1, SCARG(uap, where), &size, NULL, 0, p);
		break;

	case KINFO_CLOCKRATE:
		name[0] = KERN_CLOCKRATE;
		error =
		    kern_sysctl(name, 1, SCARG(uap, where), &size, NULL, 0, p);
		break;

	case KINFO_BSDI_SYSINFO: { 
		/*
		 * this is pretty crude, but it's just enough for uname()
		 * from BSDI's 1.x libc to work.
		 */

		u_int needed;
		u_int left;
		char *s;

		bzero((char *)&bsdi_si, sizeof(bsdi_si));
		bzero(bsdi_strings, sizeof(bsdi_strings));

		s = bsdi_strings;

		bsdi_si.bsdi_ostype = ((char *)(s - bsdi_strings)) +
				       sizeof(bsdi_si);
		strlcpy(s, ostype, bsdi_strings + sizeof bsdi_strings - s);
		s += strlen(s) + 1;

		bsdi_si.bsdi_osrelease = ((char *)(s - bsdi_strings)) +
					  sizeof(bsdi_si);
		strlcpy(s, osrelease, bsdi_strings + sizeof bsdi_strings - s);
		s += strlen(s) + 1;

		bsdi_si.bsdi_machine = ((char *)(s - bsdi_strings)) +
					sizeof(bsdi_si);
		strlcpy(s, machine, bsdi_strings + sizeof bsdi_strings - s);
		s += strlen(s) + 1;

		needed = sizeof(bsdi_si) + (s - bsdi_strings);

		if (SCARG(uap, where) == NULL) {
			/* process is asking how much buffer to supply.. */
			size = needed;
			error = 0;
			break;
		}

		/* if too much buffer supplied, trim it down */
		if (size > needed)
			size = needed;

		/* how much of the buffer is remaining */
		left = size;

		if ((error = copyout((char *)&bsdi_si, SCARG(uap, where), 
		    left)) != 0)
			break;

		/* is there any point in continuing? */
		if (left > sizeof(bsdi_si))
			left -= sizeof(bsdi_si);
		else
			break;

		error = copyout(&bsdi_strings, SCARG(uap, where) +
				sizeof(bsdi_si), left);

		break;
	}

	default:
		return (EOPNOTSUPP);
	}
	if (error)
		return (error);
	*retval = size;
	if (SCARG(uap, size))
		error = copyout((caddr_t)&size, (caddr_t)SCARG(uap, size),
		    sizeof(size));
	return (error);
}


/* ARGSUSED */
int
compat_43_sys_sethostid(p, v, retval)
	struct proc *p;
	void *v;
	register_t *retval;
{
	struct compat_43_sys_sethostid_args /* {
		syscallarg(int32_t) hostid;
	} */ *uap = v;
	int error;

	if ((error = suser(p, 0)) != 0)
		return (error);
	hostid = SCARG(uap, hostid);
	return (0);
}


/* ARGSUSED */
int
compat_43_sys_sethostname(p, v, retval)
	struct proc *p;
	void *v;
	register_t *retval;
{
	struct compat_43_sys_sethostname_args *uap = v;
	int name;
	int error;

	if ((error = suser(p, 0)) != 0)
		return (error);
	name = KERN_HOSTNAME;
	return (kern_sysctl(&name, 1, 0, 0, SCARG(uap, hostname),
			    SCARG(uap, len), p));
}
@


1.16
log
@Replace the old, broken KERN_PROC ABI and its matching functions
in libkvm with the stable-ABI versions that are currently named
KERN_PROC2, kvm_get{proc,argv,envv}2().  The latter names and symbols
will continue to be supported for a few releases.

Committing now that they ports people have had a couple releases
to update pkgs that usd the old functions
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.15 2003/08/15 20:32:15 tedu Exp $	*/
@


1.15
log
@change arguments to suser.  suser now takes the process, and a flags
argument.  old cred only calls user suser_ucred.  this will allow future
work to more flexibly implement the idea of a root process.  looks like
something i saw in freebsd, but a little different.
use of suser_ucred vs suser in file system code should be looked at again,
for the moment semantics remain unchanged.
review and input from art@@  testing and further review miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.14 2003/06/02 23:27:59 millert Exp $	*/
a225 8
		break;

	case KINFO_PROC:
		name[0] = KERN_PROC;
		name[1] = SCARG(uap, op) & 0xff;
		name[2] = SCARG(uap, arg);
		error =
		    kern_sysctl(name, 3, SCARG(uap, where), &size, NULL, 0, p);
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.13 2003/05/12 18:54:29 deraadt Exp $	*/
d347 1
a347 1
	if ((error = suser(p->p_ucred, &p->p_acflag)) != 0)
d365 1
a365 1
	if ((error = suser(p->p_ucred, &p->p_acflag)) != 0)
@


1.13
log
@strlcpy; tedu ok
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.12 2002/03/14 20:31:31 mickey Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.12
log
@remove ambiguity in version,ostype,osversion,osrelease and their constanity, they are and declarre 'em accordingly also removing private externies of those
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.11 2001/11/06 19:53:17 miod Exp $	*/
d281 1
a281 1
		strcpy(s, ostype);
d286 1
a286 1
		strcpy(s, osrelease);
d291 1
a291 1
		strcpy(s, machine);
@


1.11
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.10 2001/06/27 04:58:41 art Exp $	*/
d208 1
a208 1
	extern char ostype[], osrelease[], machine[];
@


1.11.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.11 2001/11/06 19:53:17 miod Exp $	*/
d208 1
a208 1
	extern char machine[];
@


1.11.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d281 1
a281 1
		strlcpy(s, ostype, bsdi_strings + sizeof bsdi_strings - s);
d286 1
a286 1
		strlcpy(s, osrelease, bsdi_strings + sizeof bsdi_strings - s);
d291 1
a291 1
		strlcpy(s, machine, bsdi_strings + sizeof bsdi_strings - s);
@


1.10
log
@Remove old vm.
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.9 1999/02/26 04:09:47 art Exp $	*/
d55 1
a55 1
#include <vm/vm.h>
@


1.9
log
@vm_sysctl -> uvm_sysctl for uvm
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.8 1998/02/22 22:00:11 niklas Exp $	*/
a248 1
#if defined(UVM)
a249 3
#else		    
		    vm_sysctl(name, 1, SCARG(uap, where), &size, NULL, 0, p);
#endif
a254 1
#if defined(UVM)
a255 3
#else
		    vm_sysctl(name, 1, SCARG(uap, where), &size, NULL, 0, p);
#endif
@


1.9.6.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.9 1999/02/26 04:09:47 art Exp $	*/
d249 1
d251 3
d259 1
d261 3
@


1.9.6.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d55 1
a55 1
#include <uvm/uvm_extern.h>
@


1.9.6.3
log
@Merge in -current from about a week ago
@
text
@d208 1
a208 1
	extern char machine[];
@


1.9.6.4
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d281 1
a281 1
		strlcpy(s, ostype, bsdi_strings + sizeof bsdi_strings - s);
d286 1
a286 1
		strlcpy(s, osrelease, bsdi_strings + sizeof bsdi_strings - s);
d291 1
a291 1
		strlcpy(s, machine, bsdi_strings + sizeof bsdi_strings - s);
@


1.9.6.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.9.6.4 2003/05/16 00:29:41 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.9.6.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d347 1
a347 1
	if ((error = suser(p, 0)) != 0)
d365 1
a365 1
	if ((error = suser(p, 0)) != 0)
@


1.8
log
@unused var decl removed
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.7 1996/05/23 08:32:22 deraadt Exp $	*/
d249 3
d253 1
d259 3
d263 1
@


1.7
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.6 1996/05/22 12:01:45 deraadt Exp $	*/
d208 1
a208 1
	extern char ostype[], osrelease[], version[], machine[];
@


1.6
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: kern_info_43.c,v 1.4 1996/02/26 23:26:52 niklas Exp $	*/
a229 59
		break;


	case KINFO_BSDI_SYSINFO:
		{
			size_t len;
			struct bsdi_si *usi =
			    (struct bsdi_si *) SCARG(uap, where);
			struct bsdi_si ksi;
			char *us = (char *) &usi[1];
			extern struct timeval boottime;
			extern char ostype[], osrelease[], machine[],
			    hostname[], cpu_model[], version[];

			if (usi == NULL) {
				size = sizeof(ksi) +
				    strlen(ostype) + strlen(cpu_model) +
				    strlen(osrelease) + strlen(machine) +
				    strlen(version) + strlen(hostname) + 6;
				error = 0;
				break;
			}

#define COPY(fld)							\
			ksi.fld = us - (u_long) usi;			\
			if ((error = copyoutstr(fld, us, 1024, &len)) != 0)\
				return error;				\
			us += len

			COPY(machine);
			COPY(cpu_model);
			ksi.ncpu = 1;			/* XXX */
			ksi.cpuspeed = 40;		/* XXX */
			ksi.hwflags = 0;		/* XXX */
			ksi.physmem = ctob(physmem);
			ksi.usermem = ctob(physmem);	/* XXX */
			ksi.pagesize = PAGE_SIZE;

			COPY(ostype);
			COPY(osrelease);
			ksi.os_revision = NetBSD;	/* XXX */
			ksi.posix1_version = _POSIX_VERSION;
			COPY(version);			/* XXX */

			ksi.hz = hz;
			ksi.profhz = profhz;
			ksi.ngroups_max = NGROUPS_MAX;
			ksi.arg_max = ARG_MAX;
			ksi.open_max = OPEN_MAX;
			ksi.child_max = CHILD_MAX;

			ksi.boottime = boottime;
			COPY(hostname);

			size = (us - (char *) &usi[1]) + sizeof(ksi);

			if ((error = copyout(&ksi, usi, sizeof(ksi))) != 0)
				return error;
		}
@


1.5
log
@Makefiles seemed to be broken a bit, i don't even
know how it happens to work still ... probably nobody rebuilt libcompat.a.
Fron NetBSD: kern_info_*.c, seemed to be a bug fix.
@
text
@d112 34
d230 59
@


1.4
log
@From NetBSD: update to 960217 sources
@
text
@d1 2
a2 4
/*	$Id: kern_info_43.c,v 1.3 1996/02/02 23:25:15 etheisen Exp $ */

/*	$OpenBSD$	*/
/*	$NetBSD: kern_info_43.c,v 1.4 1996/02/04 02:02:22 christos Exp $	*/
d98 1
d101 2
a102 2
	return (kern_sysctl(&name, 1, SCARG(uap, hostname), &SCARG(uap, len),
			    0, 0, p));
@


1.3
log
@Wrap long lines.
@
text
@d1 1
a1 1
/*	$Id: kern_info_43.c,v 1.2 1996/02/02 22:45:44 etheisen Exp $ */
d3 2
a4 1
/*	$NetBSD: kern_info_43.c,v 1.3 1995/10/07 06:26:24 mycroft Exp $	*/
d103 1
a103 1
	    0, 0));
d318 1
a318 1
	if (error = suser(p->p_ucred, &p->p_acflag))
d336 1
a336 1
	if (error = suser(p->p_ucred, &p->p_acflag))
d340 1
a340 1
	    SCARG(uap, len)));
@


1.2
log
@Added code to handle BSDI's 4.3 net-2 funky uname call.  Netscape was using
this to determine system name.  Failure of this call caused netscape to
print "uname() failed" on app startup.  Also affected netscape mail headers
and http sysname.  Code taken from FreeBSD with minor mods.  Good work
guys.  Let the world, or at the very least, netscape, know that you use
OpenBSD.  Include COMPAT_43 in kernel config to enable functionality.
@
text
@d1 1
a1 1
/*	$Id$ */
d245 2
a246 1
		bsdi_si.bsdi_ostype = ((char *)(s - bsdi_strings)) + sizeof(bsdi_si);
d250 2
a251 1
		bsdi_si.bsdi_osrelease = ((char *)(s - bsdi_strings)) + sizeof(bsdi_si);
d255 2
a256 1
		bsdi_si.bsdi_machine = ((char *)(s - bsdi_strings)) + sizeof(bsdi_si);
d276 2
a277 1
		if ((error = copyout((char *)&bsdi_si, SCARG(uap, where), left)) != 0)
d286 2
a287 2
		error = copyout(&bsdi_strings, SCARG(uap, where) + sizeof(bsdi_si),
				left);
@


1.1
log
@Initial revision
@
text
@d1 2
d113 46
d174 2
d229 58
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
