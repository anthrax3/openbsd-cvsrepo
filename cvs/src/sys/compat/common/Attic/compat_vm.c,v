head	1.6;
access;
symbols
	OPENBSD_4_9:1.5.0.14
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.12
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.8
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.10
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.6
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.1.0.20
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.18
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.16
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.1
	UBC:1.1.0.14
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.12
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.10
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2011.07.09.00.10.52;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2007.11.28.13.10.28;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.06.21.08.06;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.10.17.53.56;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.29.19.52.30;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	99.05.22.21.22.33;	author weingart;	state Exp;
branches
	1.1.4.1
	1.1.14.1;
next	;

1.1.4.1
date	2003.05.13.19.21.26;	author ho;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2004.02.19.10.51.28;	author niklas;	state Exp;
branches;
next	;

1.1.14.1
date	2003.05.19.21.51.44;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove COMPAT_25.  The one piece moved by COMPAT_LINUX moves there.
ok guenther
@
text
@/*	$OpenBSD: compat_vm.c,v 1.5 2007/11/28 13:10:28 deraadt Exp $	*/
/*	$NetBSD: vm_12.c,v 1.8 1997/10/20 22:05:22 thorpej Exp $	*/

/*
 * Copyright (c) 1997 Matthew R. Green
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mount.h>		/* needed for next include! */
#include <sys/syscallargs.h>

#include <sys/swap.h>
#include <sys/mman.h>

int
compat_25_sys_swapon(p, v, retval)
	struct proc *p;
	void *v;
	register_t *retval;
{
	struct sys_swapctl_args ua;
	struct compat_25_sys_swapon_args /* {
		syscallarg(const char *) name;
	} */ *uap = v;

	SCARG(&ua, cmd) = SWAP_ON;
	SCARG(&ua, arg) = (void *)SCARG(uap, name);
	SCARG(&ua, misc) = 0;	/* priority */
	return (sys_swapctl(p, &ua, retval));
}
@


1.5
log
@compat_25_sys_omsync is unused
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_vm.c,v 1.4 2003/08/06 21:08:06 millert Exp $	*/
@


1.4
log
@Remove some double semicolons (hmm, do two semis equal a maxi?).
I've skipped the GNU stuff for now.  From Patrick Latifi.
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_vm.c,v 1.3 2003/05/10 17:53:56 miod Exp $	*/
a54 18
}

int
compat_25_sys_omsync(p, v, retval)
	struct proc *p;
	void *v;
	register_t *retval;
{
	struct sys_msync_args ua;
	struct compat_25_sys_omsync_args /* {
		syscallarg(caddr_t) addr;
		syscallarg(size_t) len;
	} */ *uap = v;

	SCARG(&ua, addr) = SCARG(uap, addr);
	SCARG(&ua, len) = SCARG(uap, len);
	SCARG(&ua, flags) = MS_SYNC | MS_INVALIDATE;
	return (sys_msync(p, &ua, retval));
@


1.3
log
@Deprecate the swapon system call and move it to COMPAT_25 land, since swapctl
has been introduced for this release.

ok deraadt@@ weingart@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_vm.c,v 1.2 2003/04/29 19:52:30 miod Exp $	*/
d69 2
a70 2
	SCARG(&ua, addr) = SCARG(uap, addr);;
	SCARG(&ua, len) = SCARG(uap, len);;
@


1.2
log
@Deprecate omsync syscall, and only enable it if COMPAT_25 is required.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_vm.c,v 1.1 1999/05/22 21:22:33 weingart Exp $	*/
d41 1
a41 1
sys_swapon(p, v, retval)
d47 1
a47 1
	struct sys_swapon_args /* {
@


1.1
log
@Add new vm_swap code for dynamic swap.  From netbsd, munged some by me, and
others.   syscall commit pending.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d58 1
a58 1
sys_omsync(p, v, retval)
d64 1
a64 1
	struct sys_omsync_args /* {
@


1.1.14.1
log
@sync
@
text
@d41 1
a41 1
compat_25_sys_swapon(p, v, retval)
d47 1
a47 1
	struct compat_25_sys_swapon_args /* {
d58 1
a58 1
compat_25_sys_omsync(p, v, retval)
d64 1
a64 1
	struct compat_25_sys_omsync_args /* {
@


1.1.4.1
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_vm.c,v 1.1 1999/05/22 21:22:33 weingart Exp $	*/
d41 1
a41 1
compat_25_sys_swapon(p, v, retval)
d47 1
a47 1
	struct compat_25_sys_swapon_args /* {
d58 1
a58 1
compat_25_sys_omsync(p, v, retval)
d64 1
a64 1
	struct compat_25_sys_omsync_args /* {
@


1.1.4.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d69 2
a70 2
	SCARG(&ua, addr) = SCARG(uap, addr);
	SCARG(&ua, len) = SCARG(uap, len);
@


