head	1.6;
access;
symbols
	OPENBSD_4_7:1.5.0.32
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.34
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.30
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.28
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.26
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.24
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.22
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.20
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.18
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.16
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.8
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2010.06.30.20.39.28;	author tedu;	state dead;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.50;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.06.13.38.36;	author ericj;	state Exp;
branches
	1.4.8.1;
next	1.3;

1.3
date	2000.08.04.15.47.55;	author ericj;	state Exp;
branches;
next	1.2;

1.2
date	96.08.02.20.35.26;	author niklas;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	95.10.18.08.52.20;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.20;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2001.05.14.22.05.07;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2002.03.28.11.28.06;	author niklas;	state Exp;
branches;
next	;

1.4.8.1
date	2002.06.11.03.28.08;	author art;	state Exp;
branches;
next	;


desc
@@


1.6
log
@delete osf1 compat files
@
text
@/* 	$OpenBSD: osf1_ioctl.c,v 1.5 2002/03/14 01:26:50 millert Exp $ */
/*	$NetBSD: osf1_ioctl.c,v 1.11 1999/05/05 01:51:33 cgd Exp $	*/

/*
 * Copyright (c) 1999 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/ioctl.h>
#include <sys/termios.h>
#include <sys/mount.h>
#include <sys/syscallargs.h>

#include <compat/osf1/osf1.h>
#include <compat/osf1/osf1_syscallargs.h>

#ifdef SYSCALL_DEBUG
extern int scdebug;
#endif

int osf1_ioctl_f(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
int osf1_ioctl_i(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
int osf1_ioctl_t(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
int osf1_ioctl_m(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);

int
osf1_sys_ioctl(p, v, retval)
	struct proc *p;
	void *v;
	register_t *retval;
{
	struct osf1_sys_ioctl_args *uap = v;
	struct sys_ioctl_args a;
	int op, dir, group, cmd, len;
#ifdef SYSCALL_DEBUG
	char *dirstr;
#endif

	op = SCARG(uap, com);
	dir = op & OSF1_IOC_DIRMASK;
	group = OSF1_IOCGROUP(op);
	cmd = OSF1_IOCCMD(op);
	len = OSF1_IOCPARM_LEN(op);

	switch (dir) {
	case OSF1_IOC_VOID:
		dir = IOC_VOID;
#ifdef SYSCALL_DEBUG
		dirstr = "none";
#endif
		break;
	case OSF1_IOC_OUT:
		dir = IOC_OUT;
#ifdef SYSCALL_DEBUG
		dirstr = "out";
#endif
		break;
	case OSF1_IOC_IN:
		dir = IOC_IN;
#ifdef SYSCALL_DEBUG
		dirstr = "in";
#endif
		break;
	case OSF1_IOC_INOUT:
		dir = IOC_INOUT;
#ifdef SYSCALL_DEBUG
		dirstr = "in-out";
#endif
		break;
	default:
		return (EINVAL);
		break;
	}
#ifdef SYSCALL_DEBUG
	if (scdebug)
		printf(
		    "OSF/1 IOCTL: group = %c, cmd = %d, len = %d, dir = %s\n",
		    group, cmd, len, dirstr);
#endif

	SCARG(&a, fd) = SCARG(uap, fd);
	SCARG(&a, com) = SCARG(uap, com) & 0xffffffff;		/* XXX */
	SCARG(&a, data) = SCARG(uap, data);
	switch (group) {
	case 'f':
		return osf1_ioctl_f(p, &a, retval, cmd, dir, len);
	case 'i':
		return osf1_ioctl_i(p, &a, retval, cmd, dir, len);
	case 't':
		return osf1_ioctl_t(p, &a, retval, cmd, dir, len);
	case 'm':
		return osf1_ioctl_m(p, &a, retval, cmd, dir, len); 
	default:
		return (ENOTTY);
	}
}

int
osf1_ioctl_f(p, uap, retval, cmd, dir, len)
	struct proc *p;
	struct sys_ioctl_args *uap;
	register_t *retval;
	int cmd;
	int dir;
	int len;
{

	switch (cmd) {
	case 1:				/* OSF/1 FIOCLEX */
	case 2:				/* OSF/1 FIONCLEX */
	case 123:			/* OSF/1 FIOGETOWN */
	case 124:			/* OSF/1 FIOSETOWN */
	case 125:			/* OSF/1 FIOASYNC */
	case 126:			/* OSF/1 FIONBIO */
	case 127:			/* OSF/1 FIONREAD */
		/* same as in OpenBSD */
		break;
		
	default:
		return (ENOTTY);
	}

	return sys_ioctl(p, uap, retval);
}

/*
 * Mag Tape ioctl's
 */
int
osf1_ioctl_m(p, uap, retval, cmd, dir, len)
	struct proc *p;
	struct sys_ioctl_args *uap;
	register_t *retval;
	int cmd;
	int dir;
	int len;
{
	switch (cmd) {
	case 1:				/* OSF/1 MTIOCTOP (XXX) */
	case 2:				/* OSF/1 MTIOCGET (XXX) */
		/* same as in OpenBSD */
		break;
	default:
		return (ENOTTY);
	}

	return sys_ioctl(p, uap, retval);
}

int
osf1_ioctl_i(p, uap, retval, cmd, dir, len)
	struct proc *p;
	struct sys_ioctl_args *uap;
	register_t *retval;
	int cmd;
	int dir;
	int len;
{

	switch (cmd) {
	case 12:			/* OSF/1 SIOCSIFADDR */
	case 14:			/* OSF/1 SIOCSIFDSTADDR */
	case 16:			/* OSF/1 SIOCSIFFLAGS (XXX) */
	case 17:			/* OSF/1 SIOCGIFFLAGS (XXX) */
	case 19:			/* OSF/1 SIOCSIFBRDADDR */
	case 22:			/* OSF/1 SIOCSIFNETMASK */
	case 23:			/* OSF/1 SIOCGIFMETRIC */
	case 24:			/* OSF/1 SIOCSIFMETRIC */
	case 25:			/* OSF/1 SIOCDIFADDR */
	case 33:			/* OSF/1 SIOCGIFADDR */
	case 34:			/* OSF/1 SIOCGIFDSTADDR */
	case 35:			/* OSF/1 SIOCGIFBRDADDR */
	case 37:			/* OSF/1 SIOCGIFNETMASK */
		/* same as in OpenBSD */
		break;

	default:
		return (ENOTTY);
	}

	return sys_ioctl(p, uap, retval);
}

int
osf1_ioctl_t(p, uap, retval, cmd, dir, len)
	struct proc *p;
	struct sys_ioctl_args *uap;
	register_t *retval;
	int cmd;
	int dir;
	int len;
{

	switch (cmd) {
#ifdef COMPAT_43
	case 8:				/* OSF/1 COMPAT_43 TIOCGETP (XXX) */
	case 9:				/* OSF/1 COMPAT_43 TIOCSETP (XXX) */
#endif
	case 19:			/* OSF/1 TIOCGETA (XXX) */
	case 20:			/* OSF/1 TIOCSETA (XXX) */
	case 21:			/* OSF/1 TIOCSETAW (XXX) */
	case 22:			/* OSF/1 TIOCSETAF (XXX) */
	case 26:			/* OSF/1 TIOCGETD (XXX) */
	case 27:			/* OSF/1 TIOCSETD (XXX) */
	case 97:			/* OSF/1 TIOCSCTTY */
	case 103:			/* OSF/1 TIOCSWINSZ */
	case 104:			/* OSF/1 TIOCGWINSZ */
		/* same as in OpenBSD */
		break;
		
	default:
		return (ENOTTY);
	}

	return sys_ioctl(p, uap, retval);
}
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/* 	$OpenBSD: osf1_ioctl.c,v 1.4 2000/09/06 13:38:36 ericj Exp $ */
@


1.4
log
@add mag tape ioctl emulation; from freebsd. Other cleanup.
@
text
@d1 1
a1 1
/* 	$OpenBSD: osf1_ioctl.c,v 1.3 2000/08/04 15:47:55 ericj Exp $ */
d75 8
a82 8
int osf1_ioctl_f	__P((struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len));
int osf1_ioctl_i	__P((struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len));
int osf1_ioctl_t	__P((struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len));
int osf1_ioctl_m 	__P((struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len));
@


1.4.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/* 	$OpenBSD: osf1_ioctl.c,v 1.4 2000/09/06 13:38:36 ericj Exp $ */
d75 8
a82 8
int osf1_ioctl_f(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
int osf1_ioctl_i(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
int osf1_ioctl_t(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
int osf1_ioctl_m(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
@


1.3
log
@
Merge in NetBSD changes. This now works for most statically compiled osf1
bins. Shared osf1 libs don't work quite yet.
@
text
@d1 1
a1 1
/* 	$OpenBSD$ */
d75 1
a75 1
static int osf1_ioctl_f	__P((struct proc *p, struct sys_ioctl_args *nuap,
d77 1
a77 1
static int osf1_ioctl_i	__P((struct proc *p, struct sys_ioctl_args *nuap,
d79 3
a81 1
static int osf1_ioctl_t	__P((struct proc *p, struct sys_ioctl_args *nuap,
d149 2
d156 1
a156 1
static int
d174 1
a174 1
		/* same as in NetBSD */
d184 25
a208 1
static int
d232 1
a232 1
		/* same as in NetBSD */
d242 1
a242 1
static int
d266 1
a266 1
		/* same as in NetBSD */
@


1.2
log
@Added Makefiles to build stuff from syscalls.master in some emulations.
Regenerated derived files from various syscalls.master files. Added $OpenBSD$.
@
text
@d1 32
a32 2
/*	$OpenBSD: osf1_ioctl.c,v 1.3 1995/10/07 06:27:19 mycroft Exp $	*/
/*	$NetBSD: osf1_ioctl.c,v 1.3 1995/10/07 06:27:19 mycroft Exp $	*/
a64 1

d67 2
d75 3
a77 14
#define OSF1_IOCPARM_MASK	0x1fff	/* parameter length, at most 13 bits */
#define	OSF1_IOCPARM_LEN(x)	(((x) >> 16) & OSF1_IOCPARM_MASK)
#define	OSF1_IOCGROUP(x)	(((x) >> 8) & 0xff)

#define	OSF1_IOCPARM_MAX	NBPG		/* max size of ioctl */
#define	OSF1_IOC_VOID		0x20000000	/* no parameters */
#define	OSF1_IOC_OUT		0x40000000	/* copy out parameters */
#define	OSF1_IOC_IN		0x80000000	/* copy in parameters */
#define	OSF1_IOC_INOUT		(OSF1_IOC_IN|OSF1_IOC_OUT)
#define	OSF1_IOC_DIRMASK	0xe0000000	/* mask for IN/OUT/VOID */

#define OSF1_IOCCMD(x)		((x) & 0xff)

int osf1_ioctl_i	__P((struct proc *p, struct sys_ioctl_args *nuap,
d79 1
a79 1
int osf1_ioctl_t	__P((struct proc *p, struct sys_ioctl_args *nuap,
d88 2
a89 10
	struct osf1_sys_ioctl_args /* {
		syscallarg(int) fd;
		syscallarg(int) com;
		syscallarg(caddr_t) data;
	} */ *uap = v;
	struct sys_ioctl_args /* {
		syscallarg(int) fd;
		syscallarg(u_long) com;
		syscallarg(caddr_t) data;
	} */ a;
d138 1
a138 1
	SCARG(&a, com) = SCARG(uap, com);
d141 2
d152 29
a180 1
int
d183 1
a183 5
	struct sys_ioctl_args /* {
		syscallarg(int) fd;
		syscallarg(int) com;
		syscallarg(caddr_t) data;
	} */ *uap;
d214 1
a214 1
int
d217 1
a217 5
	struct sys_ioctl_args /* {
		syscallarg(int) fd;
		syscallarg(int) com;
		syscallarg(caddr_t) data;
	} */ *uap;
@


1.2.16.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 2
a2 32
/* 	$OpenBSD: osf1_ioctl.c,v 1.4 2000/09/06 13:38:36 ericj Exp $ */
/*	$NetBSD: osf1_ioctl.c,v 1.11 1999/05/05 01:51:33 cgd Exp $	*/

/*
 * Copyright (c) 1999 Christopher G. Demetriou.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
d35 1
a37 2

#include <compat/osf1/osf1.h>
d44 13
a56 2
int osf1_ioctl_f	__P((struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len));
a60 2
int osf1_ioctl_m 	__P((struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len));
d68 10
a77 2
	struct osf1_sys_ioctl_args *uap = v;
	struct sys_ioctl_args a;
d126 1
a126 1
	SCARG(&a, com) = SCARG(uap, com) & 0xffffffff;		/* XXX */
a128 2
	case 'f':
		return osf1_ioctl_f(p, &a, retval, cmd, dir, len);
a132 28
	case 'm':
		return osf1_ioctl_m(p, &a, retval, cmd, dir, len); 
	default:
		return (ENOTTY);
	}
}

int
osf1_ioctl_f(p, uap, retval, cmd, dir, len)
	struct proc *p;
	struct sys_ioctl_args *uap;
	register_t *retval;
	int cmd;
	int dir;
	int len;
{

	switch (cmd) {
	case 1:				/* OSF/1 FIOCLEX */
	case 2:				/* OSF/1 FIONCLEX */
	case 123:			/* OSF/1 FIOGETOWN */
	case 124:			/* OSF/1 FIOSETOWN */
	case 125:			/* OSF/1 FIOASYNC */
	case 126:			/* OSF/1 FIONBIO */
	case 127:			/* OSF/1 FIONREAD */
		/* same as in OpenBSD */
		break;
		
a135 26

	return sys_ioctl(p, uap, retval);
}

/*
 * Mag Tape ioctl's
 */
int
osf1_ioctl_m(p, uap, retval, cmd, dir, len)
	struct proc *p;
	struct sys_ioctl_args *uap;
	register_t *retval;
	int cmd;
	int dir;
	int len;
{
	switch (cmd) {
	case 1:				/* OSF/1 MTIOCTOP (XXX) */
	case 2:				/* OSF/1 MTIOCGET (XXX) */
		/* same as in OpenBSD */
		break;
	default:
		return (ENOTTY);
	}

	return sys_ioctl(p, uap, retval);
d141 5
a145 1
	struct sys_ioctl_args *uap;
d166 1
a166 1
		/* same as in OpenBSD */
d179 5
a183 1
	struct sys_ioctl_args *uap;
d204 1
a204 1
		/* same as in OpenBSD */
@


1.2.16.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/* 	$OpenBSD$ */
d75 8
a82 8
int osf1_ioctl_f(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
int osf1_ioctl_i(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
int osf1_ioctl_t(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
int osf1_ioctl_m(struct proc *p, struct sys_ioctl_args *nuap,
			    register_t *retval, int cmd, int dir, int len);
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
