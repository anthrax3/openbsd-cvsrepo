head	1.18;
access;
symbols
	OPENBSD_4_9:1.17.0.22
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.20
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.16
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.18
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.14
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.12
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.10
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.8
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.17.0.6
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.4
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.2
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.16.0.8
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.6
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.4
	OPENBSD_3_6_BASE:1.16
	SMP_SYNC_A:1.16
	SMP_SYNC_B:1.16
	OPENBSD_3_5:1.16.0.2
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.15.0.8
	OPENBSD_3_4_BASE:1.15
	UBC_SYNC_A:1.15
	OPENBSD_3_3:1.15.0.6
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.4
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.2
	OPENBSD_3_1_BASE:1.15
	UBC_SYNC_B:1.15
	UBC:1.12.0.2
	UBC_BASE:1.12
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.9.0.8
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.6
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.4
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.8.0.10
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.8
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.6
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.4
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2011.07.04.23.01.33;	author tedu;	state dead;
branches;
next	1.17;

1.17
date	2005.11.21.18.16.38;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2003.09.23.16.51.12;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.14.01.26.51;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.02.08.19.34.16;	author art;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.08.13.53.27;	author art;	state Exp;
branches;
next	1.12;

1.12
date	2001.10.26.12.03.27;	author art;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2001.05.14.12.38.48;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2001.03.01.20.54.32;	author provos;	state Exp;
branches;
next	1.9;

1.9
date	99.07.13.15.17.53;	author provos;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	97.02.13.19.45.20;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.08.01.00.50.53;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.04.21.22.18.23;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.04.18.21.21.28;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.04.17.05.24.19;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.02.26.23.31.59;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.04.47.35;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.23;	author deraadt;	state Exp;
branches;
next	;

1.9.4.1
date	2001.05.14.22.05.27;	author niklas;	state Exp;
branches;
next	1.9.4.2;

1.9.4.2
date	2001.07.04.10.39.46;	author niklas;	state Exp;
branches;
next	1.9.4.3;

1.9.4.3
date	2001.10.31.03.11.47;	author nate;	state Exp;
branches;
next	1.9.4.4;

1.9.4.4
date	2002.03.06.02.07.08;	author niklas;	state Exp;
branches;
next	1.9.4.5;

1.9.4.5
date	2002.03.28.11.28.07;	author niklas;	state Exp;
branches;
next	1.9.4.6;

1.9.4.6
date	2004.02.19.10.51.29;	author niklas;	state Exp;
branches;
next	;

1.12.2.1
date	2002.06.11.03.28.09;	author art;	state Exp;
branches;
next	;


desc
@@


1.18
log
@remove all the compat svr4 files
@
text
@/*	$OpenBSD: svr4_net.c,v 1.17 2005/11/21 18:16:38 millert Exp $	 */
/*	$NetBSD: svr4_net.c,v 1.12 1996/09/07 12:40:51 mycroft Exp $	 */

/*
 * Copyright (c) 1994 Christos Zoulas
 * All rights reserved.
 *
 * Redistribution ast use in source ast binary forms, with or without
 * modification, are permitted provided that the following costitions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of costitions ast the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of costitions ast the following disclaimer in the
 *    documentation ast/or other materials provided with the distribution.
 * 3. The name of the author may not be used to estorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Emulate /dev/{udp,tcp,...}
 */

#include <sys/param.h>
#include <sys/kernel.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/malloc.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/file.h>
#include <sys/filedesc.h>
#include <sys/selinfo.h>
#include <sys/socket.h>
#include <sys/socketvar.h>
#include <sys/protosw.h>
#include <sys/domain.h>
#include <net/if.h>
#include <netinet/in.h>
#include <sys/proc.h>
#include <sys/vnode.h>
#include <sys/device.h>
#include <sys/conf.h>


#include <compat/svr4/svr4_types.h>
#include <compat/svr4/svr4_util.h>
#include <compat/svr4/svr4_signal.h>
#include <compat/svr4/svr4_syscallargs.h>
#include <compat/svr4/svr4_ioctl.h>
#include <compat/svr4/svr4_stropts.h>
#include <compat/svr4/svr4_socket.h>

/*
 * Device minor numbers
 */
enum {
	dev_arp			= 26,
	dev_icmp		= 27,
	dev_ip			= 28,
	dev_tcp			= 35,
	dev_udp			= 36,
	dev_rawip		= 37,
	dev_unix_dgram		= 38,
	dev_unix_stream		= 39,
	dev_unix_ord_stream	= 40
};

int svr4_netattach(int);

static int svr4_soo_close(struct file *fp, struct proc *p);

static struct fileops svr4_netops = {
	soo_read, soo_write, soo_ioctl, soo_poll, soo_kqfilter,
	soo_stat, svr4_soo_close
};


/*
 * Used by new config, but we don't need it.
 */
int
svr4_netattach(n)
	int n;
{
	return 0;
}


int
svr4_netopen(dev, flag, mode, p)
	dev_t dev;
	int flag;
	int mode;
	struct proc *p;
{
	int type, protocol;
	int fd;
	struct file *fp;
	struct socket *so;
	int error;
	int family;

	DPRINTF(("netopen("));

	if (p->p_dupfd >= 0)
		return ENODEV;

	switch (minor(dev)) {
	case dev_udp:
		family = AF_INET;
		type = SOCK_DGRAM;
		protocol = IPPROTO_UDP;
		DPRINTF(("udp, "));
		break;

	case dev_tcp:
		family = AF_INET;
		type = SOCK_STREAM;
		protocol = IPPROTO_TCP;
		DPRINTF(("tcp, "));
		break;

	case dev_ip:
	case dev_rawip:
		family = AF_INET;
		type = SOCK_RAW;
		protocol = IPPROTO_IP;
		DPRINTF(("ip, "));
		break;

	case dev_icmp:
		family = AF_INET;
		type = SOCK_RAW;
		protocol = IPPROTO_ICMP;
		DPRINTF(("icmp, "));
		break;

	case dev_unix_dgram:
		family = AF_UNIX;
		type = SOCK_DGRAM;
		protocol = 0;
		DPRINTF(("unix-dgram, "));
		break;

	case dev_unix_stream:
	case dev_unix_ord_stream:
		family = AF_UNIX;
		type = SOCK_STREAM;
		protocol = 0;
		DPRINTF(("unix-stream, "));
		break;

	default:
		DPRINTF(("%d);\n", minor(dev)));
		return EOPNOTSUPP;
	}

	if ((error = falloc(p, &fp, &fd)) != 0)
		return (error);

	if ((error = socreate(family, &so, type, protocol)) != 0) {
		DPRINTF(("socreate error %d\n", error));
		fdremove(p->p_fd, fd);
		closef(fp, p);
		return error;
	}

	fp->f_flag = FREAD|FWRITE;
	fp->f_type = DTYPE_SOCKET;
	fp->f_ops = &svr4_netops;

	fp->f_data = (caddr_t)so;
	(void) svr4_stream_get(fp);

	DPRINTF(("ok);\n"));

	p->p_dupfd = fd;
	FILE_SET_MATURE(fp);
	return ENXIO;
}

static int
svr4_soo_close(fp, p)
	struct file *fp;
	struct proc *p;
{
	struct socket *so = (struct socket *) fp->f_data;
	svr4_delete_socket(p, fp);
	free(so->so_internal, M_NETADDR);
	return soo_close(fp, p);
}

struct svr4_strm *
svr4_stream_get(fp)
	struct file *fp;
{
	struct socket *so;
	struct svr4_strm *st;

	if (fp == NULL || fp->f_type != DTYPE_SOCKET)
		return NULL;

	so = (struct socket *) fp->f_data;

	if (so->so_internal)
		return so->so_internal;

	/* Allocate a new one. */
	fp->f_ops = &svr4_netops;
	st = malloc(sizeof(struct svr4_strm), M_NETADDR, M_WAITOK);
	st->s_family = so->so_proto->pr_domain->dom_family;
	st->s_cmd = ~0;
	st->s_afd = -1;
	so->so_internal = st;

	return st;
}
@


1.17
log
@Move contents of sys/select.h to sys/selinfo.h in preparation for a
userland-visible sys/select.h.  Consistent with what Net and Free do.
OK deraadt@@, tested with full ports build by naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.16 2003/09/23 16:51:12 millert Exp $	 */
@


1.16
log
@Replace select backends with poll backends.  selscan() and pollscan()
now call the poll backend.  With this change we implement greater
poll(2) functionality instead of emulating it via the select backend.
Adapted from NetBSD and including some changes from FreeBSD.
Tested by many, deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.15 2002/03/14 01:26:51 millert Exp $	 */
d44 1
a44 1
#include <sys/select.h>
@


1.15
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.14 2002/02/08 19:34:16 art Exp $	 */
d85 1
a85 1
	soo_read, soo_write, soo_ioctl, soo_select, soo_kqfilter,
@


1.14
log
@Opps. unbreak.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.13 2002/02/08 13:53:27 art Exp $	 */
d80 1
a80 1
int svr4_netattach __P((int));
d82 1
a82 1
static int svr4_soo_close __P((struct file *fp, struct proc *p));
@


1.13
log
@- Rename FILE_{,UN}USE to FREF and FRELE. USE is a bad verb and we don't have
  the same semantics as NetBSD anyway, so it's good to avoid name collissions.
- Always fdremove before freeing the file, not the other way around.
- falloc FREFs the file.
- have FILE_SET_MATURE FRELE the file (It feels like a good ortogonality to
  falloc FREFing the file).
- Use closef as much as possible instead of ffree in error paths of
  falloc:ing functions. closef is much more careful with the fd and can
  deal with the fd being forcibly closed by dup2. Also try to avoid
  manually calling *fo_close when closef can do that for us (this makes
  some error paths mroe complicated (sys_socketpair and sys_pipe), but
  others become simpler (sys_open)).
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.12 2001/10/26 12:03:27 art Exp $	 */
d176 1
a176 1
		closef(fp);
@


1.12
log
@ - every new fd created by falloc() is marked as larval and should not be used
   any anyone. Every caller of falloc matures the fd when it's usable.
 - Since every lookup in the fd table must now check this flag and all of
   them do the same thing, move all the necessary checks into a function -
   fd_getfile.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.11 2001/05/14 12:38:48 art Exp $	 */
d176 1
a176 1
		ffree(fp);
@


1.12.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.12 2001/10/26 12:03:27 art Exp $	 */
d80 1
a80 1
int svr4_netattach(int);
d82 1
a82 1
static int svr4_soo_close(struct file *fp, struct proc *p);
d176 1
a176 1
		closef(fp, p);
@


1.11
log
@Add a fo_stat member to struct fileops. Used soon.
Also add a stat function for kqueue from FreeBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.10 2001/03/01 20:54:32 provos Exp $	 */
d190 1
@


1.10
log
@port kqueue changes from freebsd, plus all required openbsd glue.
okay deraadt@@, millert@@
from jlemon@@freebsd.org:
extend kqueue down to the device layer, backwards compatible approach
suggested by peter@@freebsd.org
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.9 1999/07/13 15:17:53 provos Exp $	 */
d86 1
a86 1
	svr4_soo_close
@


1.9
log
@introduce fdremove() to mark a file descriptor as unused. fdremove makes
sure that the fd_freefile hints stay in sync, otherwise free file
descriptors might not be overlooked by fdalloc(); ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.8 1997/02/13 19:45:20 niklas Exp $	 */
d85 2
a86 1
	soo_read, soo_write, soo_ioctl, soo_select, svr4_soo_close
@


1.9.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.10 2001/03/01 20:54:32 provos Exp $	 */
d85 1
a85 2
	soo_read, soo_write, soo_ioctl, soo_select, soo_kqfilter,
	svr4_soo_close
@


1.9.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.9.4.1 2001/05/14 22:05:27 niklas Exp $	 */
d86 1
a86 1
	soo_stat, svr4_soo_close
@


1.9.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.9.4.2 2001/07/04 10:39:46 niklas Exp $	 */
a189 1
	FILE_SET_MATURE(fp);
@


1.9.4.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	 */
d176 1
a176 1
		closef(fp, p);
@


1.9.4.5
log
@Merge in -current from about a week ago
@
text
@d80 1
a80 1
int svr4_netattach(int);
d82 1
a82 1
static int svr4_soo_close(struct file *fp, struct proc *p);
@


1.9.4.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d85 1
a85 1
	soo_read, soo_write, soo_ioctl, soo_poll, soo_kqfilter,
@


1.8
log
@Merge of NetBSD 970211
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.7 1996/08/01 00:50:53 niklas Exp $	 */
d174 1
a174 1
		p->p_fd->fd_ofiles[fd] = 0;
@


1.7
log
@Merge of NetBSD 0722
@
text
@d1 2
a2 2
/*	$OpenBSD: svr4_net.c,v 1.6 1996/04/21 22:18:23 deraadt Exp $	 */
/*	$NetBSD: svr4_net.c,v 1.9 1996/04/11 12:52:41 christos Exp $	 */
d223 1
@


1.6
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.4 1996/04/17 05:24:19 mickey Exp $	 */
d47 2
a112 1
	struct svr4_strm *st;
a182 5
	st = malloc(sizeof(struct svr4_strm), M_NETADDR, M_WAITOK);
	/* XXX: This is unused; ask for a field and make this legal */
	st->s_family = family;
	so->so_internal = st;
	st->s_cmd = ~0;
d184 2
d201 25
@


1.5
log
@Merge of NetBSD 960317
@
text
@d2 1
a2 1
/*	$NetBSD: svr4_net.c,v 1.8 1996/03/30 22:41:02 christos Exp $	 */
d61 1
a61 1
#include <compat/svr4/svr4_conf.h>
d67 9
a75 5
	dev_arp		= 26,
	dev_icmp	= 27,
	dev_ip		= 28,
	dev_tcp		= 35,
	dev_udp		= 36
d110 1
d120 1
d127 1
d134 2
d142 1
d148 15
d171 1
a171 1
	if ((error = socreate(AF_INET, &so, type, protocol)) != 0) {
d184 1
d200 1
@


1.4
log
@Good fixes and changes from latest Net.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_net.c,v 1.3 1996/02/26 23:31:59 niklas Exp $	 */
d61 1
@


1.3
log
@From NetBSD: update to 960217 sources
@
text
@d1 2
a2 2
/*	$OpenBSD$	 */
/*	$NetBSD: svr4_net.c,v 1.6 1996/02/04 02:01:07 christos Exp $	 */
d52 1
d75 1
a75 1
static int svr4_netclose __P((struct file *fp, struct proc *p));
d78 1
a78 1
	soo_read, soo_write, soo_ioctl, soo_select, svr4_netclose
d168 1
a168 1
svr4_netclose(fp, p)
@


1.2
log
@update from netbsd
@
text
@d1 2
a2 1
/*	$NetBSD: svr4_net.c,v 1.5 1995/10/14 20:24:38 christos Exp $	 */
d157 1
a157 1
	so->so_tpcb = (caddr_t) st;
d172 1
a172 1
	free((char *) so->so_tpcb, M_NETADDR);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: svr4_net.c,v 1.4 1994/12/14 20:20:26 mycroft Exp $	 */
d70 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
