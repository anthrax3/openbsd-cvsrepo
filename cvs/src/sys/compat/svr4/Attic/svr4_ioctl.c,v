head	1.13;
access;
symbols
	OPENBSD_4_9:1.12.0.34
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.32
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.28
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.30
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.26
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.24
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.22
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.20
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.18
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.16
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.14
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.12
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.10
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.8
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.6
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.4
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.11
	UBC:1.9.0.2
	UBC_BASE:1.9
	OPENBSD_3_0:1.8.0.6
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.4
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.7.0.12
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.10
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.8
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.6
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.4
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.2
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.6.0.6
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.4
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2011.07.04.23.01.33;	author tedu;	state dead;
branches;
next	1.12;

1.12
date	2002.11.06.09.57.18;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.14.01.26.51;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.13.19.08.06;	author art;	state Exp;
branches;
next	1.9;

1.9
date	2001.10.26.12.03.27;	author art;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2000.08.29.02.22.13;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	97.11.04.07.45.34;	author niklas;	state Exp;
branches
	1.7.10.1;
next	1.6;

1.6
date	96.08.01.00.50.52;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.04.21.22.18.20;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.04.17.05.24.17;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.02.26.23.31.57;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.04.47.31;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.23;	author deraadt;	state Exp;
branches;
next	;

1.7.10.1
date	2001.05.14.22.05.25;	author niklas;	state Exp;
branches;
next	1.7.10.2;

1.7.10.2
date	2001.10.31.03.11.47;	author nate;	state Exp;
branches;
next	1.7.10.3;

1.7.10.3
date	2002.03.06.02.07.08;	author niklas;	state Exp;
branches;
next	1.7.10.4;

1.7.10.4
date	2002.03.28.11.28.07;	author niklas;	state Exp;
branches;
next	1.7.10.5;

1.7.10.5
date	2003.03.27.23.53.48;	author niklas;	state Exp;
branches;
next	;

1.9.2.1
date	2002.06.11.03.28.08;	author art;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2003.05.19.21.52.09;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.13
log
@remove all the compat svr4 files
@
text
@/*	$OpenBSD: svr4_ioctl.c,v 1.12 2002/11/06 09:57:18 niklas Exp $	 */
/*	$NetBSD: svr4_ioctl.c,v 1.16 1996/04/11 12:54:41 christos Exp $	 */

/*
 * Copyright (c) 1994 Christos Zoulas
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/proc.h>
#include <sys/systm.h>
#include <sys/file.h>
#include <sys/filedesc.h>
#include <sys/ioctl.h>
#include <sys/termios.h>
#include <sys/tty.h>
#include <sys/socket.h>
#include <sys/mount.h>
#include <net/if.h>
#include <sys/malloc.h>

#include <sys/syscallargs.h>

#include <compat/svr4/svr4_types.h>
#include <compat/svr4/svr4_util.h>
#include <compat/svr4/svr4_signal.h>
#include <compat/svr4/svr4_syscallargs.h>
#include <compat/svr4/svr4_stropts.h>
#include <compat/svr4/svr4_ioctl.h>
#include <compat/svr4/svr4_jioctl.h>
#include <compat/svr4/svr4_termios.h>
#include <compat/svr4/svr4_ttold.h>
#include <compat/svr4/svr4_filio.h>
#include <compat/svr4/svr4_sockio.h>

#ifdef DEBUG_SVR4
static void svr4_decode_cmd(u_long, char *, char *, int *, int *);
/*
 * Decode an ioctl command symbolically
 */
static void
svr4_decode_cmd(cmd, dir, c, num, argsiz)
	u_long		  cmd;
	char		 *dir, *c;
	int		 *num, *argsiz;
{
	if (cmd & SVR4_IOC_VOID)
		*dir++ = 'V';
	if (cmd & SVR4_IOC_IN)
		*dir++ = 'R';
	if (cmd & SVR4_IOC_OUT)
		*dir++ = 'W';
	*dir = '\0';
	if (cmd & SVR4_IOC_INOUT)
		*argsiz = (cmd >> 16) & 0xff;
	else
		*argsiz = -1;

	*c = (cmd >> 8) & 0xff;
	*num = cmd & 0xff;
}
#endif

int
svr4_sys_ioctl(p, v, retval)
	register struct proc *p;
	void *v;
	register_t *retval;
{
	struct svr4_sys_ioctl_args *uap = v;
	struct file	*fp;
	struct filedesc	*fdp;
	u_long		 cmd;
	int (*fun)(struct file *, struct proc *, register_t *,
			int, u_long, caddr_t);
	int error = 0;
#ifdef DEBUG_SVR4
	char		 dir[4];
	char		 c;
	int		 num;
	int		 argsiz;

	svr4_decode_cmd(SCARG(uap, com), dir, &c, &num, &argsiz);

	uprintf("svr4_ioctl(%d, _IO%s(%c, %d, %d), %p);\n", SCARG(uap, fd),
	    dir, c, num, argsiz, SCARG(uap, data));
#endif
	fdp = p->p_fd;
	cmd = SCARG(uap, com);

	if ((fp = fd_getfile(fdp, SCARG(uap, fd))) == NULL)
		return EBADF;

	if ((fp->f_flag & (FREAD | FWRITE)) == 0)
		return EBADF;

	switch (cmd & 0xff00) {
	case SVR4_tIOC:
		fun = svr4_ttold_ioctl;
		break;

	case SVR4_TIOC:
		fun = svr4_term_ioctl;
		break;

	case SVR4_STR:
		fun = svr4_stream_ioctl;
		break;

	case SVR4_FIOC:
		fun = svr4_fil_ioctl;
		break;

	case SVR4_SIOC:
		fun = svr4_sock_ioctl;
		break;

	case SVR4_jIOC:
		fun = svr4_jerq_ioctl;
		break;

	case SVR4_XIOC:
		/* We do not support those */
		error = EINVAL;
		goto out;

	default:
		DPRINTF(("Unimplemented ioctl %lx\n", cmd));
		error = 0;	/* XXX: really ENOSYS */
		goto out;
	}
	FREF(fp);
	error = (*fun)(fp, p, retval, SCARG(uap, fd), cmd, SCARG(uap, data));
	FRELE(fp);
out:
	return (error);
}
@


1.12
log
@maintain refcnt correctly, ok art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.11 2002/03/14 01:26:51 millert Exp $	 */
@


1.11
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.10 2002/02/13 19:08:06 art Exp $	 */
d154 1
d156 1
a157 1
	FRELE(fp);
@


1.10
log
@More FREF/FRELE on relevant places. Now, only sys_mmap and a bunch of ioctl functions in sys/compat are left.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.9 2001/10/26 12:03:27 art Exp $	 */
d59 1
a59 1
static void svr4_decode_cmd __P((u_long, char *, char *, int *, int *));
d96 2
a97 2
	int (*fun) __P((struct file *, struct proc *, register_t *,
			int, u_long, caddr_t));
@


1.9
log
@ - every new fd created by falloc() is marked as larval and should not be used
   any anyone. Every caller of falloc matures the fd when it's usable.
 - Since every lookup in the fd table must now check this flag and all of
   them do the same thing, move all the necessary checks into a function -
   fd_getfile.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.8 2000/08/29 02:22:13 brad Exp $	 */
d98 1
d146 2
a147 1
		return (EINVAL);
d151 2
a152 1
		return (0);	/* XXX: really ENOSYS */
d154 4
a157 1
	return (*fun)(fp, p, retval, SCARG(uap, fd), cmd, SCARG(uap, data));
@


1.9.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.9 2001/10/26 12:03:27 art Exp $	 */
d59 1
a59 1
static void svr4_decode_cmd(u_long, char *, char *, int *, int *);
d96 2
a97 3
	int (*fun)(struct file *, struct proc *, register_t *,
			int, u_long, caddr_t);
	int error = 0;
d145 1
a145 2
		error = EINVAL;
		goto out;
d149 1
a149 2
		error = 0;	/* XXX: really ENOSYS */
		goto out;
d151 1
a151 4
	error = (*fun)(fp, p, retval, SCARG(uap, fd), cmd, SCARG(uap, data));
out:
	FRELE(fp);
	return (error);
@


1.9.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	 */
a153 1
	FREF(fp);
d155 1
a156 1
out:
@


1.8
log
@remove duplicate inclusion of sys/ioctl.h
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.7 1997/11/04 07:45:34 niklas Exp $	 */
d112 1
a112 2
	if ((u_int)SCARG(uap, fd) >= fdp->fd_nfiles ||
	    (fp = fdp->fd_ofiles[SCARG(uap, fd)]) == NULL)
@


1.7
log
@Add SVR4 jioctl stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.6 1996/08/01 00:50:52 niklas Exp $	 */
a39 1
#include <sys/ioctl.h>
@


1.7.10.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.8 2000/08/29 02:22:13 brad Exp $	 */
d40 1
@


1.7.10.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.7.10.1 2001/05/14 22:05:25 niklas Exp $	 */
d112 2
a113 1
	if ((fp = fd_getfile(fdp, SCARG(uap, fd))) == NULL)
@


1.7.10.3
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	 */
a97 1
	int error = 0;
d145 1
a145 2
		error = EINVAL;
		goto out;
d149 1
a149 2
		error = 0;	/* XXX: really ENOSYS */
		goto out;
d151 1
a151 4
	error = (*fun)(fp, p, retval, SCARG(uap, fd), cmd, SCARG(uap, data));
out:
	FRELE(fp);
	return (error);
@


1.7.10.4
log
@Merge in -current from about a week ago
@
text
@d59 1
a59 1
static void svr4_decode_cmd(u_long, char *, char *, int *, int *);
d96 2
a97 2
	int (*fun)(struct file *, struct proc *, register_t *,
			int, u_long, caddr_t);
@


1.7.10.5
log
@Sync the SMP branch with 3.3
@
text
@a153 1
	FREF(fp);
d155 1
a156 1
out:
@


1.6
log
@Merge of NetBSD 0722
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.5 1996/04/21 22:18:20 deraadt Exp $	 */
d53 1
d141 4
d147 1
a147 1
		return EINVAL;
d151 1
a151 1
		return 0;	/* XXX: really ENOSYS */
@


1.5
log
@partial sync with netbsd 960418, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_ioctl.c,v 1.4 1996/04/17 05:24:17 mickey Exp $	 */
d106 2
a107 2
	printf("svr4_ioctl(%d, _IO%s(%c, %d, %d), %p);\n", SCARG(uap, fd),
	       dir, c, num, argsiz, SCARG(uap, data));
d120 1
a120 1
  	case SVR4_tIOC:
d139 4
@


1.4
log
@Good fixes and changes from latest Net.
@
text
@d1 2
a2 2
/*	$OpenBSD: svr4_ioctl.c,v 1.3 1996/02/26 23:31:57 niklas Exp $	 */
/*	$NetBSD: svr4_ioctl.c,v 1.15 1996/03/30 22:37:57 christos Exp $	 */
d96 2
d120 3
a122 2
	case SVR4_tIOC:
		return svr4_ttoldioctl(fp, cmd, SCARG(uap, data), p, retval);
d125 2
a126 1
		return svr4_termioctl(fp, cmd, SCARG(uap, data), p, retval);
d129 2
a130 1
		return svr4_streamioctl(fp, cmd, SCARG(uap, data), p, retval);
d133 2
a134 1
		return svr4_filioctl(fp, cmd, SCARG(uap, data), p, retval);
d137 2
a138 1
		return svr4_sockioctl(fp, cmd, SCARG(uap, data), p, retval);
d144 1
@


1.3
log
@From NetBSD: update to 960217 sources
@
text
@d1 2
a2 2
/*	$OpenBSD$	 */
/*	$NetBSD: svr4_ioctl.c,v 1.14 1996/02/10 00:48:08 christos Exp $	 */
d134 1
a134 1
		DPRINTF(("Unimplemented ioctl %x\n", cmd));
@


1.2
log
@update from netbsd
@
text
@d1 2
a2 1
/*	$NetBSD: svr4_ioctl.c,v 1.13 1995/10/14 20:24:27 christos Exp $	 */
d104 2
a105 2
	printf("svr4_ioctl(%d, _IO%s(%c, %d, %d), %x);\n", SCARG(uap, fd),
	       dir, c, num, argsiz, (unsigned int) SCARG(uap, data));
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: svr4_ioctl.c,v 1.12 1995/10/07 06:27:41 mycroft Exp $	 */
d58 1
d62 1
a62 1
void
d104 1
a104 1
	       dir, c, num, argsiz, SCARG(uap, data));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
