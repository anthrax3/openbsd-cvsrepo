head	1.18;
access;
symbols
	OPENBSD_4_9:1.17.0.8
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.6
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.4
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.16.0.4
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.2
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.15.0.10
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.8
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.6
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.4
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.2
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.14.0.16
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.14
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.12
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_5:1.14.0.10
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.8
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.14.0.6
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.4
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	UBC_SYNC_B:1.14
	UBC:1.13.0.2
	UBC_BASE:1.13
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.4
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.4
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.2
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.7.0.6
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.4
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.2
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.5.0.6
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2011.07.04.23.01.33;	author tedu;	state dead;
branches;
next	1.17;

1.17
date	2009.03.05.19.52.24;	author kettenis;	state Exp;
branches;
next	1.16;

1.16
date	2008.06.12.04.32.59;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2006.01.19.17.54.56;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2002.03.14.01.26.51;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2001.11.06.19.53.18;	author miod;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2001.09.19.13.28.43;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2001.08.11.23.21.14;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.23.16.33.20;	author brad;	state Exp;
branches;
next	1.9;

1.9
date	99.11.10.15.55.23;	author mickey;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	99.09.10.20.08.13;	author art;	state Exp;
branches;
next	1.7;

1.7
date	98.03.06.22.05.47;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	98.02.22.01.07.58;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.09.13.17.09.53;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.08.31.09.24.05;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	96.08.02.20.35.37;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.04.47.29;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.23;	author deraadt;	state Exp;
branches;
next	;

1.9.2.1
date	2001.05.14.22.05.24;	author niklas;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2001.10.31.03.11.47;	author nate;	state Exp;
branches;
next	1.9.2.3;

1.9.2.3
date	2001.11.13.21.05.48;	author niklas;	state Exp;
branches;
next	1.9.2.4;

1.9.2.4
date	2002.03.28.11.28.07;	author niklas;	state Exp;
branches;
next	;

1.13.2.1
date	2002.06.11.03.28.08;	author art;	state Exp;
branches;
next	;


desc
@@


1.18
log
@remove all the compat svr4 files
@
text
@/*	$OpenBSD: svr4_exec.c,v 1.17 2009/03/05 19:52:24 kettenis Exp $	 */
/*	$NetBSD: svr4_exec.c,v 1.16 1995/10/14 20:24:20 christos Exp $	 */

/*
 * Copyright (c) 1994 Christos Zoulas
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/proc.h>
#include <sys/malloc.h>
#include <sys/namei.h>
#include <sys/vnode.h>
#include <sys/core.h>
#include <sys/exec.h>
#include <sys/exec_elf.h>
#include <sys/exec_olf.h>

#include <sys/mman.h>
#include <uvm/uvm_extern.h>

#include <machine/cpu.h>
#include <machine/reg.h>
#include <machine/svr4_machdep.h>

#include <compat/svr4/svr4_util.h>
#include <compat/svr4/svr4_syscall.h>
#include <compat/svr4/svr4_exec.h>
#include <compat/svr4/svr4_errno.h>

static void *svr4_copyargs(struct exec_package *, struct ps_strings *,
			       void *, void *);

const char svr4_emul_path[] = "/emul/svr4";
extern char svr4_sigcode[], svr4_esigcode[];
extern struct sysent svr4_sysent[];
#ifdef SYSCALL_DEBUG
extern char *svr4_syscallnames[];
#endif

struct emul emul_svr4 = {
	"svr4",
	native_to_svr4_errno,
	svr4_sendsig,
	SVR4_SYS_syscall,
	SVR4_SYS_MAXSYSCALL,
	svr4_sysent,
#ifdef SYSCALL_DEBUG
	svr4_syscallnames,
#else
	NULL,
#endif
	SVR4_AUX_ARGSIZ,
	svr4_copyargs,
	setregs,
	exec_elf32_fixup,
	coredump_trad,
	svr4_sigcode,
	svr4_esigcode,
};

static void *
svr4_copyargs(pack, arginfo, stack, argp)
	struct exec_package *pack;
	struct ps_strings *arginfo;
	void *stack;
	void *argp;
{
	AuxInfo *a;

	if (!(a = (AuxInfo *)elf32_copyargs(pack, arginfo, stack, argp)))
		return (NULL);
#ifdef SVR4_COMPAT_SOLARIS2
	if (pack->ep_emul_arg) {
		a->au_id = AUX_sun_uid;
		a->au_v = p->p_ucred->cr_uid;
		a++;

		a->au_id = AUX_sun_ruid;
		a->au_v = p->p_cred->ruid;
		a++;

		a->au_id = AUX_sun_gid;
		a->au_v = p->p_ucred->cr_gid;
		a++;

		a->au_id = AUX_sun_rgid;
		a->au_v = p->p_cred->rgid;
		a++;
	}
#endif
	return (a);
}

int
svr4_elf_probe(p, epp, itp, pos, os)
	struct proc *p;
	struct exec_package *epp;
	char *itp;
	u_long *pos;
	u_int8_t *os;
{
	char *bp;
	int error;
	size_t len;

	if (!(emul_svr4.e_flags & EMUL_ENABLED))
		return (ENOEXEC);

	if (itp) {
		if ((error = emul_find(p, NULL, svr4_emul_path, itp, &bp, 0)))
			return (error);
		if ((error = copystr(bp, itp, MAXPATHLEN, &len)))
			return (error);
		free(bp, M_TEMP);
	}
	epp->ep_emul = &emul_svr4;
	*pos = SVR4_INTERP_ADDR;
	if (*os == OOS_NULL)
		*os = OOS_SVR4;
	return (0);
}
@


1.17
log
@Make ELF platforms generate ELF core dumps.  Somewhat based on code from
NetBSD.

ok kurt@@, drahn@@, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.16 2008/06/12 04:32:59 miod Exp $	 */
@


1.16
log
@Do not attempt to recognize foreign ELF binaries if emulation is disabled;
also recognize modern Linux binaries without branding, but with a ``GNU''
ABI note.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.15 2006/01/19 17:54:56 mickey Exp $	 */
d38 1
d81 1
@


1.15
log
@redo (w/ proper changes everywhere ;):
take interp[MAXPATHLEN] off the stack.  from mickey, ok otto
while here, switch above from malloc to pool, remove stupid casts
tedu@@ miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.14 2002/03/14 01:26:51 millert Exp $	 */
d128 3
@


1.14
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.13 2001/11/06 19:53:18 miod Exp $	 */
d129 1
a129 1
	if (itp[0]) {
@


1.13
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.12 2001/09/19 13:28:43 art Exp $	 */
d54 2
a55 2
static void *svr4_copyargs __P((struct exec_package *, struct ps_strings *,
			       void *, void *));
@


1.13.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.13 2001/11/06 19:53:18 miod Exp $	 */
d54 2
a55 2
static void *svr4_copyargs(struct exec_package *, struct ps_strings *,
			       void *, void *);
@


1.12
log
@Unify elf32 and elf64 code with macros. This forced a renaming
of a few functions from elf32.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.11 2001/08/11 23:21:14 art Exp $	 */
d43 1
a43 1
#include <vm/vm.h>
@


1.11
log
@Unnecessary and redundant includes.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.10 2000/08/23 16:33:20 brad Exp $	 */
d79 1
a79 1
	exec_elf_fixup,
d93 1
a93 1
	if (!(a = (AuxInfo *)elf_copyargs(pack, arginfo, stack, argp)))
@


1.10
log
@svr4_error -> native_to_svr4_errno
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.9 1999/11/10 15:55:23 mickey Exp $	 */
a43 2
#include <vm/vm_param.h>
#include <vm/vm_map.h>
@


1.9
log
@include syscallnames only if compiling w/ SYSCALL_DEBUG.
was already so for native and sunos, the rest was just
wasting space on it. niels@@ millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.8 1999/09/10 20:08:13 art Exp $	 */
d54 1
a59 1
extern int svr4_error[];
d68 1
a68 1
	svr4_error,
@


1.9.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.10 2000/08/23 16:33:20 brad Exp $	 */
a53 1
#include <compat/svr4/svr4_errno.h>
d59 1
d68 1
a68 1
	native_to_svr4_errno,
@


1.9.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.9.2.1 2001/05/14 22:05:24 niklas Exp $	 */
d44 2
d81 1
a81 1
	exec_elf32_fixup,
d95 1
a95 1
	if (!(a = (AuxInfo *)elf32_copyargs(pack, arginfo, stack, argp)))
@


1.9.2.3
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	 */
d43 1
a43 1
#include <uvm/uvm_extern.h>
@


1.9.2.4
log
@Merge in -current from about a week ago
@
text
@d54 2
a55 2
static void *svr4_copyargs(struct exec_package *, struct ps_strings *,
			       void *, void *);
@


1.8
log
@include sys/exec.h (which includes machine/exec.h) before sys/exec_elf.h
to get the define for _KERN_DO_ELF
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.7 1998/03/06 22:05:47 niklas Exp $	 */
d62 1
d64 1
d73 1
d75 3
@


1.7
log
@Just set the OS tag if it is not already set
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.6 1998/02/22 01:07:58 niklas Exp $	 */
d38 1
a48 1
#include <machine/exec.h>
@


1.6
log
@Remember OS tag when running Linux or SVR4 ELF files.  KNF.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.5 1996/09/13 17:09:53 niklas Exp $	 */
d134 2
a135 1
	*os = OOS_SVR4;
@


1.5
log
@Heh Per, SVR4 wants to load the ELF interpreter too, sometimes :-)
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.4 1996/08/31 09:24:05 pefo Exp $	 */
d39 1
d89 2
a90 2
	if (!(a = (AuxInfo *) elf_copyargs(pack, arginfo, stack, argp)))
		return NULL;
d110 1
a110 1
	return a;
d114 1
a114 1
svr4_elf_probe(p, epp, itp, pos)
d119 1
d127 1
a127 1
			return error;
d129 1
a129 1
			return error;
d134 2
a135 1
	return 0;
@


1.4
log
@Cleanup exec
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.3 1996/08/02 20:35:37 niklas Exp $	 */
d74 1
a74 1
	NULL,
@


1.3
log
@Added Makefiles to build stuff from syscalls.master in some emulations.
Regenerated derived files from various syscalls.master files. Added $OpenBSD$.
@
text
@d1 1
a1 1
/*	$OpenBSD: svr4_exec.c,v 1.16 1995/10/14 20:24:20 christos Exp $	 */
d74 1
@


1.2
log
@update from netbsd
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: svr4_exec.c,v 1.15 1995/06/24 20:29:19 christos Exp $	 */
a84 1
	struct elf_args *ap;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

