head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.4
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.12.0.4
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.9.0.36
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.30
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.32
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.24
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.28
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.26
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.22
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.20
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.18
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.16
	OPENBSD_5_0:1.9.0.14
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.12
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.10
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.6
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.8
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.4
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.2
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.7.0.18
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.4
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2017.04.14.20.46.31;	author bluhm;	state Exp;
branches;
next	1.12;
commitid	00hB28wQPwG5Ysk0;

1.12
date	2017.01.29.19.58.47;	author bluhm;	state Exp;
branches;
next	1.11;
commitid	3e3CkrbYekyVOcxy;

1.11
date	2017.01.25.17.34.31;	author bluhm;	state Exp;
branches;
next	1.10;
commitid	pVtptbHA3yk4jSpN;

1.10
date	2017.01.04.04.56.24;	author dlg;	state Exp;
branches;
next	1.9;
commitid	OWwrUHDwnT4PcuTU;

1.9
date	2008.04.18.06.42.20;	author djm;	state Exp;
branches;
next	1.8;

1.8
date	2007.12.14.18.33.40;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.23.28.13;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.12.14.41.07;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.27.11;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.09.07.03.40;	author angelos;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	97.02.05.15.48.22;	author deraadt;	state Exp;
branches
	1.3.14.1;
next	1.2;

1.2
date	96.03.03.22.30.27;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.10;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.10;	author deraadt;	state Exp;
branches;
next	;

1.3.14.1
date	2001.07.04.10.54.30;	author niklas;	state Exp;
branches;
next	1.3.14.2;

1.3.14.2
date	2002.03.28.14.56.45;	author niklas;	state Exp;
branches;
next	1.3.14.3;

1.3.14.3
date	2003.03.28.00.06.54;	author niklas;	state Exp;
branches;
next	1.3.14.4;

1.3.14.4
date	2003.06.07.11.06.08;	author ho;	state Exp;
branches;
next	;

1.4.4.1
date	2002.06.11.03.31.36;	author art;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	2003.05.19.22.40.40;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Pass down the address family through the pr_input calls.  This
allows to simplify code used for both IPv4 and IPv6.
OK mikeb@@ deraadt@@
@
text
@/*	$OpenBSD: igmp_var.h,v 1.12 2017/01/29 19:58:47 bluhm Exp $	*/
/*	$NetBSD: igmp_var.h,v 1.9 1996/02/13 23:41:31 christos Exp $	*/

/*
 * Copyright (c) 1988 Stephen Deering.
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Stephen Deering of Stanford University.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)igmp_var.h	8.1 (Berkeley) 7/19/93
 */

#ifndef _NETINET_IGMP_VAR_H_
#define _NETINET_IGMP_VAR_H_

/*
 * Internet Group Management Protocol (IGMP),
 * implementation-specific definitions.
 *
 * Written by Steve Deering, Stanford, May 1988.
 * Modified by Rosen Sharma, Stanford, Aug 1994.
 * Modified by Bill Fenner, Xerox PARC, Feb 1995.
 *
 * MULTICAST 1.3
 */

struct igmpstat {
	u_long	igps_rcv_total;		/* total IGMP messages received */
	u_long	igps_rcv_tooshort;	/* received with too few bytes */
	u_long	igps_rcv_badsum;	/* received with bad checksum */
	u_long	igps_rcv_queries;	/* received membership queries */
	u_long	igps_rcv_badqueries;	/* received invalid queries */
	u_long	igps_rcv_reports;	/* received membership reports */
	u_long	igps_rcv_badreports;	/* received invalid reports */
	u_long	igps_rcv_ourreports;	/* received reports for our groups */
	u_long	igps_snd_reports;	/* sent membership reports */
};

/*
 * Names for IGMP sysctl objects
 */
#define IGMPCTL_STATS		1	/* IGMP statistics */
#define IGMPCTL_MAXID		2

#define IGMPCTL_NAMES { \
	{ 0, 0 }, \
	{ "stats",	CTLTYPE_STRUCT } \
}

#define IGMPCTL_VARS { \
	NULL \
}

#ifdef _KERNEL

#include <sys/percpu.h>

enum igmpstat_counters {
	igps_rcv_total,		/* total IGMP messages received */
	igps_rcv_tooshort,	/* received with too few bytes */
	igps_rcv_badsum,	/* received with bad checksum */
	igps_rcv_queries,	/* received membership queries */
	igps_rcv_badqueries,	/* received invalid queries */
	igps_rcv_reports,	/* received membership reports */
	igps_rcv_badreports,	/* received invalid reports */
	igps_rcv_ourreports,	/* received reports for our groups */
	igps_snd_reports,	/* sent membership reports */
	igps_ncounters
};

extern struct cpumem *igmpcounters;

static inline void
igmpstat_inc(enum igmpstat_counters c)
{
	counters_inc(igmpcounters, c);
}

/*
 * Macro to compute a random timer value between 1 and (IGMP_MAX_REPORTING_
 * DELAY * countdown frequency).  We assume that the routine random()
 * is defined somewhere (and that it returns a positive number).
 */
#define	IGMP_RANDOM_DELAY(X)	(arc4random_uniform(X) + 1)

void	igmp_init(void);
int	igmp_input(struct mbuf **, int *, int, int);
void	igmp_joingroup(struct in_multi *);
void	igmp_leavegroup(struct in_multi *);
void	igmp_fasttimo(void);
void	igmp_slowtimo(void);
int	igmp_sysctl(int *, u_int, void *, size_t *, void *, size_t);
#endif /* _KERNEL */
#endif /* _NETINET_IGMP_VAR_H_ */
@


1.12
log
@Change the IPv4 pr_input function to the way IPv6 is implemented,
to get rid of struct ip6protosw and some wrapper functions.  It is
more consistent to have less different structures.  The divert_input
functions cannot be called anyway, so remove them.
OK visa@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.11 2017/01/25 17:34:31 bluhm Exp $	*/
d113 1
a113 1
int	igmp_input(struct mbuf **, int *, int);
@


1.11
log
@Since raw_input() and route_input() are gone from pr_input, we can
make the variable parameters of the protocol input functions fixed.
Also add the proto to make it similar to IPv6.
OK mpi@@ guenther@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.10 2017/01/04 04:56:24 dlg Exp $	*/
d113 1
a113 1
void	igmp_input(struct mbuf *, int, int);
@


1.10
log
@convert igmp_stat into per-cpu counters

it follows the same pattern used in previous conversions.

from Dimitris Papastamos (thank you).

ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.9 2008/04/18 06:42:20 djm Exp $	*/
d113 1
a113 1
void	igmp_input(struct mbuf *, ...);
@


1.9
log
@use arc4random_uniform() for random number requests that are not a
power of two.

use arc4random_bytes() when requesting more than a word of PRNG
output.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.8 2007/12/14 18:33:40 deraadt Exp $	*/
d81 23
a103 1
extern struct igmpstat igmpstat;
@


1.8
log
@add sysctl entry points into various network layers, in particular to
provide netstat(1) with data it needs;  ok claudio reyk
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.7 2003/06/02 23:28:13 millert Exp $	*/
d88 1
a88 1
#define	IGMP_RANDOM_DELAY(X)	(arc4random() % (X) + 1)
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.6 2003/02/12 14:41:07 jason Exp $	*/
d65 15
d96 1
@


1.6
log
@Remove commons; inspired by netbsd.
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.5 2002/03/14 01:27:11 millert Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.4 2001/06/09 07:03:40 angelos Exp $	*/
d70 1
a70 1
struct igmpstat igmpstat;
@


1.4
log
@Inclusion protection.
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.3 1997/02/05 15:48:22 deraadt Exp $	*/
d79 6
a84 6
void	igmp_init __P((void));
void	igmp_input __P((struct mbuf *, ...));
void	igmp_joingroup __P((struct in_multi *));
void	igmp_leavegroup __P((struct in_multi *));
void	igmp_fasttimo __P((void));
void	igmp_slowtimo __P((void));
@


1.4.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.4 2001/06/09 07:03:40 angelos Exp $	*/
d79 6
a84 6
void	igmp_init(void);
void	igmp_input(struct mbuf *, ...);
void	igmp_joingroup(struct in_multi *);
void	igmp_leavegroup(struct in_multi *);
void	igmp_fasttimo(void);
void	igmp_slowtimo(void);
@


1.4.4.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d70 1
a70 1
extern struct igmpstat igmpstat;
@


1.3
log
@use arc4random()
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 3
d85 2
a86 1
#endif
@


1.3.14.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.3 1997/02/05 15:48:22 deraadt Exp $	*/
a42 3
#ifndef _NETINET_IGMP_VAR_H_
#define _NETINET_IGMP_VAR_H_

d82 1
a82 2
#endif /* _KERNEL */
#endif /* _NETINET_IGMP_VAR_H_ */
@


1.3.14.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d79 6
a84 6
void	igmp_init(void);
void	igmp_input(struct mbuf *, ...);
void	igmp_joingroup(struct in_multi *);
void	igmp_leavegroup(struct in_multi *);
void	igmp_fasttimo(void);
void	igmp_slowtimo(void);
@


1.3.14.3
log
@Sync the SMP branch with 3.3
@
text
@d70 1
a70 1
extern struct igmpstat igmpstat;
@


1.3.14.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: igmp_var.h,v 1.3.14.3 2003/03/28 00:06:54 niklas Exp $	*/
d20 5
a24 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2
log
@From NetBSD: 960217 merge
@
text
@d74 1
a74 1
#define	IGMP_RANDOM_DELAY(X)	(random() % (X) + 1)
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: igmp_var.h,v 1.8 1995/05/31 06:08:24 mycroft Exp $	*/
d77 1
a77 1
void	igmp_input __P((struct mbuf *, int));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
