head	1.6;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	UBC_SYNC_A:1.6
	UBC_SYNC_B:1.6
	SMP:1.5.0.6
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.6
date	2000.02.28.23.13.07;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	99.02.17.18.10.24;	author deraadt;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	97.07.11.23.38.00;	author provos;	state Exp;
branches;
next	1.3;

1.3
date	97.06.21.00.09.20;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.02.24.14.06.44;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	97.02.20.01.08.08;	author deraadt;	state Exp;
branches;
next	;

1.5.6.1
date	2000.03.02.07.04.42;	author niklas;	state dead;
branches;
next	;


desc
@@


1.6
log
@move crypto code
@
text
@/*	$OpenBSD: ip_sha1.h,v 1.5 1999/02/17 18:10:24 deraadt Exp $	*/

/*
 * SHA-1 in C
 * By Steve Reid <steve@@edmweb.com>
 * 100% Public Domain
 */

#ifndef _SHA1_H_
#define _SHA1_H_

typedef struct {
	u_int32_t	state[5];
	u_int32_t	count[2];  
	unsigned char	buffer[64];
} SHA1_CTX;
  
void SHA1Transform __P((u_int32_t state[5], unsigned char buffer[64]));
void SHA1Init __P((SHA1_CTX* context));
void SHA1Update __P((SHA1_CTX* context, unsigned char* data, unsigned int len));
void SHA1Final __P((unsigned char digest[20], SHA1_CTX* context));

#endif /* _SHA1_H_ */
@


1.5
log
@indent
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_sha1.h,v 1.4 1997/07/11 23:38:00 provos Exp $	*/
@


1.5.6.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_sha1.h,v 1.5 1999/02/17 18:10:24 deraadt Exp $	*/
@


1.4
log
@put old esp/ah and new esp/ah in different files.
generalised way of handling transforms.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_sha1.h,v 1.3 1997/06/21 00:09:20 deraadt Exp $	*/
d4 4
a7 4
SHA-1 in C
By Steve Reid <steve@@edmweb.com>
100% Public Domain
*/
d13 3
a15 3
    u_int32_t state[5];
    u_int32_t count[2];  
    unsigned char buffer[64];
d18 4
a21 4
void SHA1Transform(u_int32_t state[5], unsigned char buffer[64]);
void SHA1Init(SHA1_CTX* context);
void SHA1Update(SHA1_CTX* context, unsigned char* data, unsigned int len);
void SHA1Final(unsigned char digest[20], SHA1_CTX* context);
@


1.3
log
@u_int32_t changes, need testing
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_sha1.h,v 1.2 1997/02/24 14:06:44 niklas Exp $	*/
d9 3
d22 2
@


1.2
log
@OpenBSD tags + some prototyping police
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d10 2
a11 2
    unsigned long state[5];
    unsigned long count[2];  
d15 1
a15 1
void SHA1Transform(unsigned long state[5], unsigned char buffer[64]);
@


1.1
log
@IPSEC package by John Ioannidis and Angelos D. Keromytis. Written in
Greece. From ftp.funet.fi:/pub/unix/security/net/ip/BSDipsec.tar.gz
@
text
@d1 2
@
