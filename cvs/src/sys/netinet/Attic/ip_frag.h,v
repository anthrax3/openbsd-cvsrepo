head	1.16;
access;
symbols
	SMP_SYNC_A:1.16
	SMP_SYNC_B:1.16
	UBC_SYNC_A:1.16
	UBC_SYNC_B:1.16
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_9:1.15.0.2
	OPENBSD_2_8:1.12.0.4
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	SMP:1.10.0.2
	SMP_BASE:1.10
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.4
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.7.0.4
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.2
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4;
locks; strict;
comment	@ * @;


1.16
date	2001.05.30.02.12.31;	author deraadt;	state dead;
branches;
next	1.15;

1.15
date	2001.04.08.20.30.05;	author smart;	state Exp;
branches;
next	1.14;

1.14
date	2001.04.07.01.06.28;	author fgsch;	state Exp;
branches;
next	1.13;

1.13
date	2001.01.17.04.47.14;	author fgsch;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.13.23.40.18;	author kjell;	state Exp;
branches
	1.12.4.1;
next	1.11;

1.11
date	2000.02.16.22.34.19;	author kjell;	state Exp;
branches;
next	1.10;

1.10
date	2000.02.01.19.29.58;	author kjell;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	99.12.15.05.20.22;	author kjell;	state Exp;
branches;
next	1.8;

1.8
date	99.02.05.05.58.51;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	98.02.17.01.39.04;	author dgregor;	state Exp;
branches;
next	1.6;

1.6
date	98.01.26.04.10.41;	author dgregor;	state Exp;
branches;
next	1.5;

1.5
date	97.02.11.22.23.22;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.10.08.07.33.27;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.07.18.05.01.03;	author dm;	state Exp;
branches;
next	1.2;

1.2
date	96.05.10.21.38.17;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	96.01.25.05.41.44;	author dm;	state Exp;
branches;
next	;

1.10.2.1
date	2000.02.20.11.57.26;	author niklas;	state Exp;
branches;
next	1.10.2.2;

1.10.2.2
date	2001.05.14.22.40.10;	author niklas;	state Exp;
branches;
next	1.10.2.3;

1.10.2.3
date	2001.07.04.10.54.46;	author niklas;	state dead;
branches;
next	;

1.12.4.1
date	2001.04.18.01.02.44;	author jason;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@/*	$OpenBSD: ip_frag.h,v 1.15 2001/04/08 20:30:05 smart Exp $	*/

/*
 * Copyright (C) 1993-2000 by Darren Reed.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that this notice is preserved and due credit is given
 * to the original author and the contributors.
 *
 * @@(#)ip_frag.h	1.5 3/24/96
 * $IPFilter: ip_frag.h,v 2.4.2.3 2001/04/06 12:31:20 darrenr Exp $
 */

#ifndef	__IP_FRAG_H__
#define	__IP_FRAG_H__

#define	IPFT_SIZE	257

typedef	struct	ipfr	{
	struct	ipfr	*ipfr_next, *ipfr_prev;
	void	*ipfr_data;
	struct	in_addr	ipfr_src;
	struct	in_addr	ipfr_dst;
	void	*ipfr_ifp;
	u_short	ipfr_id;
	u_char	ipfr_p;
	u_char	ipfr_tos;
	u_short	ipfr_off;
	u_char	ipfr_ttl;
	u_char	ipfr_seen0;
	frentry_t *ipfr_rule;
} ipfr_t;


typedef	struct	ipfrstat {
	u_long	ifs_exists;	/* add & already exists */
	u_long	ifs_nomem;
	u_long	ifs_new;
	u_long	ifs_hits;
	u_long	ifs_expire;
	u_long	ifs_inuse;
	struct	ipfr	**ifs_table;
	struct	ipfr	**ifs_nattab;
} ipfrstat_t;

#define	IPFR_CMPSZ	(offsetof(ipfr_t, ipfr_off) - \
			 offsetof(ipfr_t, ipfr_src))

extern	int	fr_ipfrttl;
extern	int	fr_frag_lock;
extern	ipfrstat_t	*ipfr_fragstats __P((void));
extern	int	ipfr_newfrag __P((ip_t *, fr_info_t *, u_int));
extern	int	ipfr_nat_newfrag __P((ip_t *, fr_info_t *, u_int, struct nat *));
extern	nat_t	*ipfr_nat_knownfrag __P((ip_t *, fr_info_t *));
extern	frentry_t *ipfr_knownfrag __P((ip_t *, fr_info_t *));
extern	void	ipfr_forget __P((void *));
extern	void	ipfr_unload __P((void));
extern	void	ipfr_fragexpire __P((void));

#if     (BSD >= 199306) || SOLARIS || defined(__sgi)
# if defined(SOLARIS2) && (SOLARIS2 < 7)
extern	void	ipfr_slowtimer __P((void));
# else
extern	void	ipfr_slowtimer __P((void *));
# endif
#else
extern	int	ipfr_slowtimer __P((void));
#endif /* (BSD >= 199306) || SOLARIS */

#endif	/* __IP_FRAG_H__ */
@


1.15
log
@Typo.  __IP_FIL_H__ -> __IP_FRAG_H__
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_frag.h,v 1.14 2001/04/07 01:06:28 fgsch Exp $	*/
@


1.14
log
@Partial update to IPF 3.4.17; this fixes the *VERY* serious fragment
caching bug recently discussed in the ipfilter list.

People using IPF is urged to sync with these changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_frag.h,v 1.13 2001/01/17 04:47:14 fgsch Exp $	*/
d70 1
a70 1
#endif	/* __IP_FIL_H__ */
@


1.13
log
@IPF 3.4.15. (IPv6 not working yet).

Note: before building the userland part you need to do make includes.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d11 1
a11 1
 * $IPFilter: ip_frag.h,v 2.4.2.2 2000/11/10 13:10:54 darrenr Exp $
d29 2
a30 1
	u_short	ipfr_ttl;
d46 2
a47 1
#define	IPFR_CMPSZ	(4 + 4 + 2 + 1 + 1)
@


1.12
log
@Import of Darren Reed's IPFilter 3.3.11. See sbin/ipf/HISTORY for detailed
changelog. Documentation changes are now way behind. Volunteers?
@
text
@d4 1
a4 1
 * Copyright (C) 1993-1998 by Darren Reed.
d11 1
a11 1
 * $IPFilter: ip_frag.h,v 2.2 1999/08/06 06:26:38 darrenr Exp $
d24 1
d48 1
d56 1
d66 1
a66 1
#endif
@


1.12.4.1
log
@Pull in patch
Fix (fgsch):
fix ipf fragment caching bug
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_frag.h,v 1.12 2000/03/13 23:40:18 kjell Exp $	*/
d28 1
a28 2
	u_char	ipfr_ttl;
	u_char	ipfr_seen0;
d44 1
a44 2
#define	IPFR_CMPSZ	(offsetof(ipfr_t, ipfr_off) - \
			offsetof(ipfr_t, ipfr_src))
@


1.11
log
@Import IPFilter 3.3.9. Primarily, bugfixes since 3.3.8. See sbin/ipf/HISTORY
for details.
@
text
@@


1.10
log
@Update to IPFilter 3.3.8. Man pages still to go. See sbin/ipf/HISTORY
for details.
@
text
@@


1.10.2.1
log
@Merge in recent code from the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_frag.h,v 1.11 2000/02/16 22:34:19 kjell Exp $	*/
@


1.10.2.2
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_frag.h,v 1.15 2001/04/08 20:30:05 smart Exp $	*/
d4 1
a4 1
 * Copyright (C) 1993-2000 by Darren Reed.
d11 1
a11 1
 * $IPFilter: ip_frag.h,v 2.4.2.3 2001/04/06 12:31:20 darrenr Exp $
a23 1
	void	*ipfr_ifp;
d28 1
a28 2
	u_char	ipfr_ttl;
	u_char	ipfr_seen0;
d44 1
a44 2
#define	IPFR_CMPSZ	(offsetof(ipfr_t, ipfr_off) - \
			 offsetof(ipfr_t, ipfr_src))
a46 1
extern	int	fr_frag_lock;
a53 1
extern	void	ipfr_fragexpire __P((void));
d63 1
a63 1
#endif /* (BSD >= 199306) || SOLARIS */
d65 1
a65 1
#endif	/* __IP_FRAG_H__ */
@


1.10.2.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_frag.h,v 1.10.2.2 2001/05/14 22:40:10 niklas Exp $	*/
@


1.9
log
@Import of Darren Reed's IPFilter 3.3.4, including OpenBSD patches.

Many, many enhancements and improvements, including new in-kernel
proxies, enhancements to logging, and many bugfixes.

Note: Man pages have not yet been re-converted to mdoc.
@
text
@d1 2
a2 1
/* $OpenBSD$ */
d11 1
a11 1
 * $Id: ip_frag.h,v 2.2 1999/08/06 06:26:38 darrenr Exp $
@


1.8
log
@ipf 3.2.10; work by kjell
@
text
@d1 1
a1 1
/*       $OpenBSD: ip_frag.h,v 1.7 1998/02/17 01:39:04 dgregor Exp $       */
d10 1
a10 1
 * $Id: ip_frag.h,v 1.7 1998/02/17 01:39:04 dgregor Exp $
d28 1
a28 1
	u_char	ipfr_pass;
d47 2
a48 2
extern	int	ipfr_newfrag __P((ip_t *, fr_info_t *, int));
extern	int	ipfr_nat_newfrag __P((ip_t *, fr_info_t *, int, struct nat *));
d50 1
a50 1
extern	int	ipfr_knownfrag __P((ip_t *, fr_info_t *));
d55 1
d57 3
d63 1
@


1.7
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*       $OpenBSD$       */
d3 1
a3 1
 * Copyright (C) 1993-1997 by Darren Reed.
d10 1
a10 1
 * $Id: ip_frag.h,v 1.6 1998/01/26 04:10:41 dgregor Exp $
@


1.6
log
@IPF 3.2.3
@
text
@d1 1
d10 1
a10 1
 * $Id: ip_frag.h,v 2.0.2.12 1997/10/23 14:56:01 darrenr Exp $
@


1.5
log
@IPF 1.3.7
@
text
@a0 1
/*	$OpenBSD$	*/
d2 1
a2 1
 * (C)opyright 1993, 1994, 1995 by Darren Reed.
d9 1
a9 1
 * Id: ip_frag.h,v 2.0.1.1 1997/01/09 15:14:43 darrenr Exp
d12 1
a12 1
#ifndef	__IP_FRAG_H_
d19 1
d39 1
d44 14
a57 6
extern ipfrstat_t *ipfr_fragstats __P((void));
extern int	ipfr_newfrag __P((ip_t *, fr_info_t *, int));
extern int	ipfr_knownfrag __P((ip_t *, fr_info_t *));
# ifdef	_KERNEL
extern void	ipfr_unload __P((void));
# endif
@


1.4
log
@Prototype & Stylistic fixes for high -W gcc levels
@
text
@d1 1
d10 1
a10 1
 * $OpenBSD: ip_frag.h,v 1.3 1996/07/18 05:01:03 dm Exp $
@


1.3
log
@ipfilter 3.1.0
@
text
@d9 1
a9 1
 * $Id: ip_frag.h,v 1.2 1996/07/04 13:15:41 darrenr Exp $
d42 3
a44 2
extern ipfrstat_t *ipfr_fragstats();
extern int ipfr_newfrag(), ipfr_knownfrag();
d46 1
a46 1
extern void ipfr_unload();
@


1.2
log
@ipfilter 3.0.4
@
text
@d9 1
a28 5
#if defined(__STDC__) || defined(__GNUC__)
#define	SIOCGFRST	_IOR('r', 76, struct ipfrstat)
#else
#define	SIOCGFRST	_IOR(r, 76, struct ipfrstat)
#endif
@


1.1
log
@IP filter 3.0.1
@
text
@d8 1
a8 1
 * @@(#)ip_frag.h	1.3 1/12/96
a20 1
	u_short	ipfr_ttl;
d23 2
@
