head	1.10;
access;
symbols
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	UBC_SYNC_A:1.10
	UBC_SYNC_B:1.10
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	SMP:1.5.0.2
	SMP_BASE:1.5
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	2001.05.30.02.12.36;	author deraadt;	state dead;
branches;
next	1.9;

1.9
date	2001.01.17.04.47.15;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.05.05.35.27;	author kjell;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.13.23.40.18;	author kjell;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.16.22.34.19;	author kjell;	state Exp;
branches;
next	1.5;

1.5
date	2000.02.01.19.29.59;	author kjell;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	99.12.15.05.20.23;	author kjell;	state Exp;
branches;
next	1.3;

1.3
date	99.02.05.05.58.54;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	98.02.17.01.39.06;	author dgregor;	state Exp;
branches;
next	1.1;

1.1
date	98.01.26.04.10.45;	author dgregor;	state Exp;
branches;
next	;

1.5.2.1
date	2000.02.20.11.57.28;	author niklas;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2000.03.24.09.09.37;	author niklas;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2001.05.14.22.40.13;	author niklas;	state Exp;
branches;
next	1.5.2.4;

1.5.2.4
date	2001.07.04.10.54.57;	author niklas;	state dead;
branches;
next	;


desc
@@


1.10
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@/*	$OpenBSD: ip_proxy.h,v 1.9 2001/01/17 04:47:15 fgsch Exp $	*/

/*
 * Copyright (C) 1997-2000 by Darren Reed.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that this notice is preserved and due credit is given
 * to the original author and the contributors.
 *
 * $IPFilter: ip_proxy.h,v 2.8.2.4 2000/12/02 00:15:03 darrenr Exp $
 */

#ifndef	__IP_PROXY_H__
#define	__IP_PROXY_H__

#ifndef SOLARIS
#define SOLARIS (defined(sun) && (defined(__svr4__) || defined(__SVR4)))
#endif

#ifndef	APR_LABELLEN
#define	APR_LABELLEN	16
#endif
#define	AP_SESS_SIZE	53

struct	nat;
struct	ipnat;

typedef	struct	ap_tcp {
	u_short	apt_sport;	/* source port */
	u_short	apt_dport;	/* destination port */
	short	apt_sel[2];	/* {seq,ack}{off,min} set selector */
	short	apt_seqoff[2];	/* sequence # difference */
	tcp_seq	apt_seqmin[2];	/* don't change seq-off until after this */
	short	apt_ackoff[2];	/* sequence # difference */
	tcp_seq	apt_ackmin[2];	/* don't change seq-off until after this */
	u_char	apt_state[2];	/* connection state */
} ap_tcp_t;

typedef	struct	ap_udp {
	u_short	apu_sport;	/* source port */
	u_short	apu_dport;	/* destination port */
} ap_udp_t;

typedef	struct ap_session {
	struct	aproxy	*aps_apr;
	union {
		struct	ap_tcp	apu_tcp;
		struct	ap_udp	apu_udp;
	} aps_un;
	u_int	aps_flags;
	U_QUAD_T aps_bytes;	/* bytes sent */
	U_QUAD_T aps_pkts;	/* packets sent */
	void	*aps_nat;	/* pointer back to nat struct */
	void	*aps_data;	/* private data */
	int	aps_p;		/* protocol */
	int	aps_psiz;	/* size of private data */
	struct	ap_session	*aps_hnext;
	struct	ap_session	*aps_next;
} ap_session_t;

#define	aps_sport	aps_un.apu_tcp.apt_sport
#define	aps_dport	aps_un.apu_tcp.apt_dport
#define	aps_sel		aps_un.apu_tcp.apt_sel
#define	aps_seqoff	aps_un.apu_tcp.apt_seqoff
#define	aps_seqmin	aps_un.apu_tcp.apt_seqmin
#define	aps_state	aps_un.apu_tcp.apt_state
#define	aps_ackoff	aps_un.apu_tcp.apt_ackoff
#define	aps_ackmin	aps_un.apu_tcp.apt_ackmin


typedef	struct	aproxy	{
	struct	aproxy	*apr_next;
	char	apr_label[APR_LABELLEN];	/* Proxy label # */
	u_char	apr_p;		/* protocol */
	int	apr_ref;	/* +1 per rule referencing it */
	int	apr_flags;
	int	(* apr_init) __P((void));
	void	(* apr_fini) __P((void));
	int	(* apr_new) __P((fr_info_t *, ip_t *,
				 ap_session_t *, struct nat *));
	int	(* apr_inpkt) __P((fr_info_t *, ip_t *,
				   ap_session_t *, struct nat *));
	int	(* apr_outpkt) __P((fr_info_t *, ip_t *,
				    ap_session_t *, struct nat *));
} aproxy_t;

#define	APR_DELETE	1

#define	APR_ERR(x)	(((x) & 0xffff) << 16)
#define	APR_EXIT(x)	(((x) >> 16) & 0xffff)
#define	APR_INC(x)	((x) & 0xffff)

#define	FTP_BUFSZ	160
/*
 * For the ftp proxy.
 */
typedef struct  ftpside {
	char	*ftps_rptr;
	char	*ftps_wptr;
	u_32_t	ftps_seq;
	u_32_t	ftps_len;
	int	ftps_junk;
	char	ftps_buf[FTP_BUFSZ];
} ftpside_t;

typedef struct  ftpinfo {
	u_int   	ftp_passok;
	ftpside_t	ftp_side[2];
} ftpinfo_t;

/*
 * Real audio proxy structure and #defines
 */
typedef	struct	{
	int	rap_seenpna;
	int	rap_seenver;
	int	rap_version;
	int	rap_eos;	/* End Of Startup */
	int	rap_gotid;
	int	rap_gotlen;
	int	rap_mode;
	int	rap_sdone;
	u_short	rap_plport;
	u_short	rap_prport;
	u_short	rap_srport;
	char	rap_svr[19];
	u_32_t	rap_sbf;	/* flag to indicate which of the 19 bytes have
				 * been filled
				 */
	tcp_seq	rap_sseq;
} raudio_t;

#define	RA_ID_END	0
#define	RA_ID_UDP	1
#define	RA_ID_ROBUST	7

#define	RAP_M_UDP	1
#define	RAP_M_ROBUST	2
#define	RAP_M_TCP	4
#define	RAP_M_UDP_ROBUST	(RAP_M_UDP|RAP_M_ROBUST)


extern	ap_session_t	*ap_sess_tab[AP_SESS_SIZE];
extern	ap_session_t	*ap_sess_list;
extern	aproxy_t	ap_proxies[];
extern	int		ippr_ftp_pasvonly;

extern	int	appr_add __P((aproxy_t *));
extern	int	appr_del __P((aproxy_t *));
extern	int	appr_init __P((void));
extern	void	appr_unload __P((void));
extern	int	appr_ok __P((ip_t *, tcphdr_t *, struct ipnat *));
extern	void	appr_free __P((aproxy_t *));
extern	void	aps_free __P((ap_session_t *));
extern	int	appr_check __P((ip_t *, fr_info_t *, struct nat *));
extern	aproxy_t	*appr_match __P((u_int, char *));

#endif /* __IP_PROXY_H__ */
@


1.9
log
@IPF 3.4.15. (IPv6 not working yet).

Note: before building the userland part you need to do make includes.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.8
log
@Update to ipf 3.3.12. Most fixes relate to hardening of
in-kernel ftp proxy. See sbin/ipf/HISTORY for details.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_proxy.h,v 1.7 2000/03/13 23:40:18 kjell Exp $	*/
d4 1
a4 1
 * Copyright (C) 1997-1998 by Darren Reed.
d10 1
a10 1
 * $IPFilter: ip_proxy.h,v 2.1.2.3 2000/03/15 13:58:15 darrenr Exp $
d59 1
a59 1
} ap_session_t ;
d72 1
d89 3
d93 1
d97 9
d107 2
a108 1
	u_int   ftp_passok;
d146 1
d148 2
@


1.7
log
@Import of Darren Reed's IPFilter 3.3.11. See sbin/ipf/HISTORY for detailed
changelog. Documentation changes are now way behind. Volunteers?
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d10 1
a10 1
 * $IPFilter: ip_proxy.h,v 2.1.2.2 2000/02/22 11:41:15 darrenr Exp $
d88 7
@


1.6
log
@Import IPFilter 3.3.9. Primarily, bugfixes since 3.3.8. See sbin/ipf/HISTORY
for details.
@
text
@d10 1
a10 1
 * $IPFilter: ip_proxy.h,v 2.1.2.1 1999/09/19 12:18:20 darrenr Exp $
d77 1
d126 1
@


1.5
log
@Update to IPFilter 3.3.8. Man pages still to go. See sbin/ipf/HISTORY
for details.
@
text
@@


1.5.2.1
log
@Merge in recent code from the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_proxy.h,v 1.6 2000/02/16 22:34:19 kjell Exp $	*/
@


1.5.2.2
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d10 1
a10 1
 * $IPFilter: ip_proxy.h,v 2.1.2.2 2000/02/22 11:41:15 darrenr Exp $
a76 1
	void	(* apr_fini) __P((void));
a124 1
extern	void	appr_unload __P((void));
@


1.5.2.3
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_proxy.h,v 1.9 2001/01/17 04:47:15 fgsch Exp $	*/
d4 1
a4 1
 * Copyright (C) 1997-2000 by Darren Reed.
d10 1
a10 1
 * $IPFilter: ip_proxy.h,v 2.8.2.4 2000/12/02 00:15:03 darrenr Exp $
d59 1
a59 1
} ap_session_t;
a71 1
	struct	aproxy	*apr_next;
a87 21
#define	APR_ERR(x)	(((x) & 0xffff) << 16)
#define	APR_EXIT(x)	(((x) >> 16) & 0xffff)
#define	APR_INC(x)	((x) & 0xffff)

#define	FTP_BUFSZ	160
/*
 * For the ftp proxy.
 */
typedef struct  ftpside {
	char	*ftps_rptr;
	char	*ftps_wptr;
	u_32_t	ftps_seq;
	u_32_t	ftps_len;
	int	ftps_junk;
	char	ftps_buf[FTP_BUFSZ];
} ftpside_t;

typedef struct  ftpinfo {
	u_int   	ftp_passok;
	ftpside_t	ftp_side[2];
} ftpinfo_t;
a123 1
extern	int		ippr_ftp_pasvonly;
a124 2
extern	int	appr_add __P((aproxy_t *));
extern	int	appr_del __P((aproxy_t *));
@


1.5.2.4
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_proxy.h,v 1.5.2.3 2001/05/14 22:40:13 niklas Exp $	*/
@


1.4
log
@Import of Darren Reed's IPFilter 3.3.4, including OpenBSD patches.

Many, many enhancements and improvements, including new in-kernel
proxies, enhancements to logging, and many bugfixes.

Note: Man pages have not yet been re-converted to mdoc.
@
text
@d1 2
a2 1
/* $OpenBSD$ */
d10 1
a10 1
 * $Id: ip_proxy.h,v 2.1.2.1 1999/09/19 12:18:20 darrenr Exp $
@


1.3
log
@ipf 3.2.10; work by kjell
@
text
@d1 1
a1 1
/*       $OpenBSD: ip_proxy.h,v 1.2 1998/02/17 01:39:06 dgregor Exp $       */
d9 1
a9 1
 * $Id: ip_proxy.h,v 1.2 1998/02/17 01:39:06 dgregor Exp $
a44 3
	struct	in_addr	aps_src;	/* source IP# */
	struct	in_addr	aps_dst;	/* destination IP# */
	u_char	aps_p;		/* protocol */
a48 1
	u_int	aps_hv;
d54 1
d75 3
a77 2
	int	(* apr_init) __P((fr_info_t *, ip_t *,
				   ap_session_t *, struct nat *));
d87 32
d123 3
a125 2
extern	int	ap_ok __P((ip_t *, tcphdr_t *, struct ipnat *));
extern	void	ap_free __P((aproxy_t *));
d127 2
a128 4
extern	int	ap_check __P((ip_t *, fr_info_t *, struct nat *));
extern	aproxy_t	*ap_match __P((u_char, char *));
extern	int	ap_fixseqack __P((fr_info_t *, ip_t *, ap_session_t *, int inc));
     
a130 8








@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*       $OpenBSD$       */
d3 1
a3 1
 * Copyright (C) 1997 by Darren Reed.
d9 1
a9 1
 * $Id: ip_proxy.h,v 1.1 1998/01/26 04:10:45 dgregor Exp $
d30 1
a30 1
	short	apt_sel;	/* seqoff/after set selector */
d32 3
a34 1
	tcp_seq	apt_after[2];	/* don't change seq-off until after this */
d52 1
d54 3
a56 3
	QUAD_T	aps_bytes;	/* bytes sent */
	QUAD_T	aps_pkts;	/* packets sent */
	u_long	aps_tout;	/* time left before expiring */
d59 1
d67 1
a67 1
#define	aps_after	aps_un.apu_tcp.apt_after
d69 2
d78 1
a78 1
	int	(* apr_init) __P((fr_info_t *, ip_t *, tcphdr_t *,
d80 1
a80 1
	int	(* apr_inpkt) __P((fr_info_t *, ip_t *, tcphdr_t *,
d82 1
a82 1
	int	(* apr_outpkt) __P((fr_info_t *, ip_t *, tcphdr_t *,
d90 1
a93 1
extern	void	ap_unload __P((void));
d96 1
a96 1
extern	int	ap_check __P((ip_t *, tcphdr_t *, fr_info_t *, struct nat *));
d98 2
a99 1
extern	void	ap_expire __P((void));
d102 8
@


1.1
log
@IPF 3.2.3
@
text
@d1 1
d9 1
a9 1
 * $Id: ip_proxy.h,v 2.0.2.10.2.1 1997/11/27 09:33:27 darrenr Exp $
@
