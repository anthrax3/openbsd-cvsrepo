head	1.24;
access;
symbols
	OPENBSD_6_2:1.24.0.4
	OPENBSD_6_2_BASE:1.24
	OPENBSD_6_1:1.23.0.10
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.23.0.8
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.23.0.2
	OPENBSD_5_9_BASE:1.23
	OPENBSD_5_8:1.23.0.4
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.22.0.2
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.21.0.4
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.20.0.40
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.36
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.34
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.32
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.30
	OPENBSD_5_0:1.20.0.28
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.26
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.24
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.20
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.22
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.18
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.20.0.16
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.20.0.14
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.20.0.12
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.20.0.10
	OPENBSD_4_1_BASE:1.20
	OPENBSD_4_0:1.20.0.8
	OPENBSD_4_0_BASE:1.20
	OPENBSD_3_9:1.20.0.6
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.20.0.4
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.20.0.2
	OPENBSD_3_7_BASE:1.20
	OPENBSD_3_6:1.19.0.2
	OPENBSD_3_6_BASE:1.19
	SMP_SYNC_A:1.18
	SMP_SYNC_B:1.18
	OPENBSD_3_5:1.18.0.4
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.12.0.4
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.10.0.6
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.12
	UBC:1.10.0.4
	UBC_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.6
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	SMP:1.7.0.2
	SMP_BASE:1.7
	kame_19991208:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.24
date	2017.05.18.11.38.07;	author mpi;	state Exp;
branches;
next	1.23;
commitid	mqqGdyckz9daEuFf;

1.23
date	2015.03.14.03.38.52;	author jsg;	state Exp;
branches;
next	1.22;
commitid	p4LJxGKbi0BU2cG6;

1.22
date	2014.11.20.14.51.42;	author krw;	state Exp;
branches;
next	1.21;
commitid	dOUqRDzYiPQXkCLL;

1.21
date	2014.03.11.19.45.28;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2004.09.24.15.02.43;	author markus;	state Exp;
branches;
next	1.19;

1.19
date	2004.07.15.15.27.22;	author markus;	state Exp;
branches;
next	1.18;

1.18
date	2003.06.09.10.12.52;	author itojun;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.09.07.40.25;	author itojun;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.23.28.14;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.05.29.00.35.18;	author itojun;	state Exp;
branches;
next	1.14;

1.14
date	2003.05.14.01.12.27;	author jason;	state Exp;
branches;
next	1.13;

1.13
date	2003.03.30.22.23.34;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.09.16.26.11;	author itojun;	state Exp;
branches;
next	1.11;

1.11
date	2002.06.07.16.18.02;	author itojun;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.08.03.53.46;	author angelos;	state Exp;
branches
	1.10.4.1;
next	1.9;

1.9
date	2001.06.05.02.31.36;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.14.04.41.39;	author itojun;	state Exp;
branches;
next	1.7;

1.7
date	2000.02.07.06.09.09;	author itojun;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	99.12.08.06.50.20;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	99.07.02.20.39.07;	author cmetz;	state Exp;
branches;
next	1.4;

1.4
date	99.01.11.02.01.35;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	98.11.17.19.23.01;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.22.30.44;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.12;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.12;	author deraadt;	state Exp;
branches;
next	;

1.7.2.1
date	2001.05.14.22.40.14;	author niklas;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2001.07.04.10.55.04;	author niklas;	state Exp;
branches;
next	1.7.2.3;

1.7.2.3
date	2003.03.28.00.06.54;	author niklas;	state Exp;
branches;
next	1.7.2.4;

1.7.2.4
date	2003.05.13.19.36.17;	author ho;	state Exp;
branches;
next	1.7.2.5;

1.7.2.5
date	2003.05.16.00.29.44;	author niklas;	state Exp;
branches;
next	1.7.2.6;

1.7.2.6
date	2003.06.07.11.06.08;	author ho;	state Exp;
branches;
next	1.7.2.7;

1.7.2.7
date	2004.02.19.10.57.24;	author niklas;	state Exp;
branches;
next	;

1.10.4.1
date	2002.06.11.03.31.37;	author art;	state Exp;
branches;
next	1.10.4.2;

1.10.4.2
date	2002.10.29.00.36.47;	author art;	state Exp;
branches;
next	1.10.4.3;

1.10.4.3
date	2003.05.19.22.40.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Merge the content of <netinet/tcpip.h> and <netinet6/tcpipv6.h> in
<netinet/tcp_debug.h>.

The IPv6 variant was always included and the IPv4 version is not
present on all systems.

Most of the offending ports are already fixed, thanks to sthen@@!
@
text
@/*	$OpenBSD: tcp_debug.c,v 1.23 2015/03/14 03:38:52 jsg Exp $	*/
/*	$NetBSD: tcp_debug.c,v 1.10 1996/02/13 23:43:36 christos Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)COPYRIGHT	1.1 (NRL) 17 January 1995
 *
 * NRL grants permission for redistribution and use in source and binary
 * forms, with or without modification, of the software and documentation
 * created at NRL provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgements:
 * 	This product includes software developed by the University of
 * 	California, Berkeley and its contributors.
 * 	This product includes software developed at the Information
 * 	Technology Division, US Naval Research Laboratory.
 * 4. Neither the name of the NRL nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THE SOFTWARE PROVIDED BY NRL IS PROVIDED BY NRL AND CONTRIBUTORS ``AS
 * IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL NRL OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation
 * are those of the authors and should not be interpreted as representing
 * official policies, either expressed or implied, of the US Naval
 * Research Laboratory (NRL).
 */

#ifdef TCPDEBUG
/* load symbolic names */
#define	PRUREQUESTS
#define	TCPSTATES
#define	TCPTIMERS
#define	TANAMES
#endif

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mbuf.h>
#include <sys/socket.h>
#include <sys/protosw.h>

#include <net/route.h>

#include <netinet/in.h>
#include <netinet/in_systm.h>
#include <netinet/ip.h>
#include <netinet/in_pcb.h>
#include <netinet/ip_var.h>
#include <netinet/tcp.h>
#include <netinet/tcp_timer.h>
#include <netinet/tcp_var.h>
#include <netinet/tcp_debug.h>
#include <netinet/tcp_fsm.h>

#ifdef INET6
#include <netinet/ip6.h>
#endif /* INET6 */

#ifdef TCPDEBUG
int	tcpconsdebug = 0;
#endif

struct	tcp_debug tcp_debug[TCP_NDEBUG];
int	tcp_debx;

/*
 * Tcp debug routines
 */
void
tcp_trace(short act, short ostate, struct tcpcb *tp, caddr_t headers,
   int req, int len)
{
#ifdef TCPDEBUG
	tcp_seq seq, ack;
	int flags;
#endif
	struct tcp_debug *td = &tcp_debug[tcp_debx++];
	struct tcpiphdr *ti = (struct tcpiphdr *)headers;
	struct tcphdr *th;
#ifdef INET6
	struct tcpipv6hdr *ti6 = (struct tcpipv6hdr *)ti;
#endif

	if (tcp_debx == TCP_NDEBUG)
		tcp_debx = 0;
	td->td_time = iptime();
	td->td_act = act;
	td->td_ostate = ostate;
	td->td_tcb = (caddr_t)tp;
	if (tp)
		td->td_cb = *tp;
	else
		bzero((caddr_t)&td->td_cb, sizeof (*tp));
	switch (tp->pf) {
#ifdef INET6
	case PF_INET6:
		if (ti6) {
			th = &ti6->ti6_t;
			td->td_ti6 = *ti6;
			td->td_ti6.ti6_plen = len;
		} else
			bzero(&td->td_ti6, sizeof(struct tcpipv6hdr));
		break;
#endif /* INET6 */
	case PF_INET:
		if (ti) {
			th = &ti->ti_t;
			td->td_ti = *ti;
			td->td_ti.ti_len = len;
		} else
			bzero(&td->td_ti, sizeof(struct tcpiphdr));
		break;
	default:
		return;
	}

	td->td_req = req;
#ifdef TCPDEBUG
	if (tcpconsdebug == 0)
		return;
	if (tp)
		printf("%x %s:", tp, tcpstates[ostate]);
	else
		printf("???????? ");
	printf("%s ", tanames[act]);
	switch (act) {

	case TA_INPUT:
	case TA_OUTPUT:
	case TA_DROP:
		if (ti == 0)
			break;
		seq = th->th_seq;
		ack = th->th_ack;
		if (act == TA_OUTPUT) {
			seq = ntohl(seq);
			ack = ntohl(ack);
		}
		if (len)
			printf("[%x..%x)", seq, seq+len);
		else
			printf("%x", seq);
		printf("@@%x, urp=%x", ack, th->th_urp);
		flags = th->th_flags;
		if (flags) {
			char *cp = "<";
#define pf(f) { if (th->th_flags&TH_##f) { printf("%s%s", cp, "f"); cp = ","; } }
			pf(SYN); pf(ACK); pf(FIN); pf(RST); pf(PUSH); pf(URG);
			printf(">");
		}
		break;

	case TA_USER:
		printf("%s", prurequests[req&0xff]);
		if ((req & 0xff) == PRU_SLOWTIMO)
			printf("<%s>", tcptimers[req>>8]);
		break;
	}
	if (tp)
		printf(" -> %s", tcpstates[tp->t_state]);
	/* print out internal state of tp !?! */
	printf("\n");
	if (tp == 0)
		return;
	printf("\trcv_(nxt,wnd,up) (%x,%x,%x) snd_(una,nxt,max) (%x,%x,%x)\n",
	    tp->rcv_nxt, tp->rcv_wnd, tp->rcv_up, tp->snd_una, tp->snd_nxt,
	    tp->snd_max);
	printf("\tsnd_(wl1,wl2,wnd) (%x,%x,%x)\n",
	    tp->snd_wl1, tp->snd_wl2, tp->snd_wnd);
#endif /* TCPDEBUG */
}
@


1.23
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.22 2014/11/20 14:51:42 krw Exp $	*/
a94 1
#include <netinet/tcpip.h>
@


1.22
log
@Yet more #include de-duplication.

ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.21 2014/03/11 19:45:28 guenther Exp $	*/
a85 1
#include <net/if.h>
@


1.21
log
@lint is gone, and the 'lint' conditional was never in the implementation
namespace, so stop changing behavior when it's #defined

ok beck@@ krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.20 2004/09/24 15:02:43 markus Exp $	*/
a100 3
#ifndef INET
#include <netinet/in.h>
#endif
@


1.20
log
@pass segment size to userland; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.19 2004/07/15 15:27:22 markus Exp $	*/
a193 1
#ifndef lint
a196 1
#endif
@


1.19
log
@tcp_trace() expects short, not int; ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.18 2003/06/09 10:12:52 itojun Exp $	*/
d148 1
d157 1
@


1.18
log
@typo (need to check ti6 instead of ti)
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.17 2003/06/09 07:40:25 itojun Exp $	*/
d118 2
a119 6
tcp_trace(act, ostate, tp, headers, req, len)
	short act, ostate;
	struct tcpcb *tp;
	caddr_t headers;
	int req;
	int len;
@


1.17
log
@backout following:
>use m_pulldown not m_pullup2.  fix some bugs in IPv6 tcp_trace().

PR 3283 fixed (confirmed)
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.16 2003/06/02 23:28:14 millert Exp $	*/
d149 1
a149 1
		if (ti) {
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.15 2003/05/29 00:35:18 itojun Exp $	*/
d112 1
a112 1
int	tcp_debx = 0;
d118 1
a118 1
tcp_trace(act, ostate, tp, m, req, len)
d121 1
a121 1
	struct mbuf *m;
d129 2
a130 3
	caddr_t headers;
	struct tcp_debug *td;
	struct tcpiphdr *ti;
a135 1
	td = &tcp_debug[tcp_debx++];
a137 10

	if (m)
		headers = mtod(m, caddr_t);
	else
		headers = NULL;
	ti = (struct tcpiphdr *)headers;
#ifdef INET6
	ti6 = (struct tcpipv6hdr *)headers;
#endif

d149 1
a149 1
		if (ti6) {
@


1.15
log
@use m_pulldown not m_pullup2.  fix some bugs in IPv6 tcp_trace().
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.14 2003/05/14 01:12:27 jason Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.14
log
@remove the last of the MI commons
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.13 2003/03/30 22:23:34 tedu Exp $	*/
d116 1
a116 1
int	tcp_debx;
d122 1
a122 1
tcp_trace(act, ostate, tp, headers, req, len)
d125 1
a125 1
	caddr_t headers;
d133 3
a135 2
	struct tcp_debug *td = &tcp_debug[tcp_debx++];
	struct tcpiphdr *ti = (struct tcpiphdr *)headers;
d141 1
d144 10
d165 1
a165 1
		if (ti) {
@


1.13
log
@let this compile with TCPDEBUG

ok millert@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.12 2002/06/09 16:26:11 itojun Exp $	*/
d114 4
@


1.12
log
@whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.11 2002/06/07 16:18:02 itojun Exp $	*/
d87 1
d102 1
@


1.11
log
@avoid is_ipv6 construct.  a step towards IPv4-less kernel
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.10 2001/06/08 03:53:46 angelos Exp $	*/
d37 1
a37 1
 * 
d41 1
a41 1
 * 
d56 1
a56 1
 * 
d68 1
a68 1
 * 
@


1.10
log
@Cut down on include files.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.9 2001/06/05 02:31:36 deraadt Exp $	*/
d144 1
d146 1
a146 1
	if (tp->pf == PF_INET6) {
d150 1
a150 1
		} else {
d152 1
a152 2
		}
	} else
d154 1
a154 1
	{
d158 1
a158 1
		} else {
d160 3
a162 1
		}
@


1.10.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.10 2001/06/08 03:53:46 angelos Exp $	*/
a143 1
	switch (tp->pf) {
d145 1
a145 1
	case PF_INET6:
d149 1
a149 1
		} else
d151 2
a152 1
		break;
d154 1
a154 1
	case PF_INET:
d158 1
a158 1
		} else
d160 1
a160 3
		break;
	default:
		return;
@


1.10.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.10.4.1 2002/06/11 03:31:37 art Exp $	*/
d37 1
a37 1
 *
d41 1
a41 1
 *
d56 1
a56 1
 *
d68 1
a68 1
 *
@


1.10.4.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a86 1
#include <sys/protosw.h>
a100 1
#include <netinet/tcp_fsm.h>
a111 4

struct	tcp_debug tcp_debug[TCP_NDEBUG];
int	tcp_debx;

@


1.9
log
@repair copyright notices for NRL & cmetz; cmetz
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.8 2000/04/14 04:41:39 itojun Exp $	*/
a86 3
#include <sys/socketvar.h>
#include <sys/protosw.h>
#include <sys/errno.h>
a96 2
#include <netinet/tcp_fsm.h>
#include <netinet/tcp_seq.h>
@


1.8
log
@make "option TCPDEBUG" kernel compile.
PR1186 from "Robert Mooney" <rjmooney@@atl.mediaone.net>.
(printf format change is not bringed in - i'm unsure about it)
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.7 2000/02/07 06:09:09 itojun Exp $	*/
d36 37
a72 1
 *	@@(#)tcp_debug.c	8.1 (Berkeley) 6/10/93
a73 12

/*
%%% portions-copyright-nrl-95
Portions of this software are Copyright 1995-1998 by Randall Atkinson,
Ronald Lee, Daniel McDonald, Bao Phan, and Chris Winters. All Rights
Reserved. All rights under this copyright have been assigned to the US
Naval Research Laboratory (NRL). The NRL Copyright Notice and License
Agreement Version 1.1 (January 17, 1995) applies to these portions of the
software.
You should have received a copy of the license with this software. If you
didn't get a copy, you may request one from <license@@ipv6.nrl.navy.mil>.
*/
@


1.7
log
@fix include file path related to ip6.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.6 1999/12/08 06:50:20 itojun Exp $	*/
d110 1
a111 1
	struct tcphdr *th;
d133 3
a135 1
	} else {
a142 6
#else /* INET6 */
	if (ti)
		td->td_ti = *ti;
	else
		bzero((caddr_t)&td->td_ti, sizeof (*ti));
#endif /* INET6 */
d175 1
a175 1
#define pf(f) { if (th->th_flags&TH_/**/f) { printf("%s%s", cp, "f"); cp = ","; } }
@


1.7.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.8 2000/04/14 04:41:39 itojun Exp $	*/
d110 1
a111 1
#ifdef INET6
d133 1
a133 3
	} else
#endif /* INET6 */
	{
d141 6
d179 1
a179 1
#define pf(f) { if (th->th_flags&TH_##f) { printf("%s%s", cp, "f"); cp = ","; } }
@


1.7.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.7.2.1 2001/05/14 22:40:14 niklas Exp $	*/
d36 1
a36 37
 *	@@(#)COPYRIGHT	1.1 (NRL) 17 January 1995
 * 
 * NRL grants permission for redistribution and use in source and binary
 * forms, with or without modification, of the software and documentation
 * created at NRL provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgements:
 * 	This product includes software developed by the University of
 * 	California, Berkeley and its contributors.
 * 	This product includes software developed at the Information
 * 	Technology Division, US Naval Research Laboratory.
 * 4. Neither the name of the NRL nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THE SOFTWARE PROVIDED BY NRL IS PROVIDED BY NRL AND CONTRIBUTORS ``AS
 * IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL NRL OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * The views and conclusions contained in the software and documentation
 * are those of the authors and should not be interpreted as representing
 * official policies, either expressed or implied, of the US Naval
 * Research Laboratory (NRL).
d39 12
d63 3
d76 2
@


1.7.2.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
 *
d41 1
a41 1
 *
d56 1
a56 1
 *
d68 1
a68 1
 *
a143 1
	switch (tp->pf) {
d145 1
a145 1
	case PF_INET6:
d149 1
a149 1
		} else
d151 2
a152 1
		break;
d154 1
a154 1
	case PF_INET:
d158 1
a158 1
		} else
d160 1
a160 3
		break;
	default:
		return;
@


1.7.2.4
log
@Sync the SMP branch to -current. This includes moving to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.7.2.3 2003/03/28 00:06:54 niklas Exp $	*/
a86 1
#include <sys/protosw.h>
a100 1
#include <netinet/tcp_fsm.h>
@


1.7.2.5
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a113 4

struct	tcp_debug tcp_debug[TCP_NDEBUG];
int	tcp_debx;

@


1.7.2.6
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.7.2.5 2003/05/16 00:29:44 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
d116 1
a116 1
int	tcp_debx = 0;
d122 1
a122 1
tcp_trace(act, ostate, tp, m, req, len)
d125 1
a125 1
	struct mbuf *m;
d133 2
a134 3
	caddr_t headers;
	struct tcp_debug *td;
	struct tcpiphdr *ti;
a139 1
	td = &tcp_debug[tcp_debx++];
a141 10

	if (m)
		headers = mtod(m, caddr_t);
	else
		headers = NULL;
	ti = (struct tcpiphdr *)headers;
#ifdef INET6
	ti6 = (struct tcpipv6hdr *)headers;
#endif

d153 1
a153 1
		if (ti6) {
@


1.7.2.7
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d112 1
a112 1
int	tcp_debx;
d118 1
a118 1
tcp_trace(act, ostate, tp, headers, req, len)
d121 1
a121 1
	caddr_t headers;
d129 3
a131 2
	struct tcp_debug *td = &tcp_debug[tcp_debx++];
	struct tcpiphdr *ti = (struct tcpiphdr *)headers;
d137 1
d140 10
@


1.6
log
@bring in KAME IPv6 code, dated 19991208.
replaces NRL IPv6 layer.  reuses NRL pcb layer.  no IPsec-on-v6 support.
see sys/netinet6/{TODO,IMPLEMENTATION} for more details.

GENERIC configuration should work fine as before.  GENERIC.v6 works fine
as well, but you'll need KAME userland tools to play with IPv6 (will be
bringed into soon).
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.5 1999/07/02 20:39:07 cmetz Exp $	*/
d87 1
a87 1
#include <netinet6/ip6.h>
@


1.5
log
@Significant cleanups in the way TCP is made to handle multiple network
protocols.

"struct tcpiphdr" is now gone from much of the code, as are separate pointers
for ti and ti6. The result is fewer variables, which is generally a good thing.

Simple if(is_ipv6) ... else ... tests are gone in favor of a
switch(protocol family), which allows future new protocols to be added easily.
This also makes it possible for someone so inclined to re-implement TUBA (TCP
over CLNP?) and do it right instead of the kluged way it was done in 4.4.

The TCP header template is now referenced through a mbuf rather than done
through a data pointer and dtom()ed as needed. This is partly because dtom() is
evil and partly because max_linkhdr + IPv6 + TCP + MSS/TS/SACK opts won't fit
inside a packet header mbuf, so we need to grab a cluster for that (which the
code now does, if needed).
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.4 1999/01/11 02:01:35 deraadt Exp $	*/
d84 4
a87 2
#include <netinet6/ipv6.h>
#include <netinet6/in6.h>
@


1.4
log
@netinet merge of NRL stuff. some indent and shrinkage needed; NRL/cmetz
@
text
@d1 1
a1 1
/*	$OpenBSD: tcp_debug.c,v 1.3 1998/11/17 19:23:01 provos Exp $	*/
d95 1
a95 1
tcp_trace(act, ostate, tp, ti, req, len)
d98 1
a98 1
	struct tcpiphdr *ti;
d107 1
@


1.3
log
@NewReno, SACK and FACK support for TCP, adapted from code for BSDI
by Hari Balakrishnan (hari@@lcs.mit.edu), Tom Henderson (tomh@@cs.berkeley.edu)
and Venkat Padmanabhan (padmanab@@cs.berkeley.edu) as part of the
Daedalus research group at the University of California,
(http://daedalus.cs.berkeley.edu). [I was able to do this on time spent
at the Center for Information Technology Integration (citi.umich.edu)]
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d39 12
d83 5
d95 1
a95 1
tcp_trace(act, ostate, tp, ti, req)
d100 1
d104 1
a104 1
	int len, flags;
d107 4
d122 17
d143 2
d161 2
a162 3
		seq = ti->ti_seq;
		ack = ti->ti_ack;
		len = ti->ti_len;
a165 1
			len = ntohs((u_int16_t)len);
a166 2
		if (act == TA_OUTPUT)
			len -= sizeof (struct tcphdr);
d171 2
a172 2
		printf("@@%x, urp=%x", ack, ti->ti_urp);
		flags = ti->ti_flags;
d176 1
a176 1
#define pf(f) { if (ti->ti_flags&TH_/**/f) { printf("%s%s", cp, "f"); cp = ","; } }
@


1.2
log
@From NetBSD: 960217 merge
@
text
@@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: tcp_debug.c,v 1.9 1995/04/13 06:36:32 cgd Exp $	*/
d84 1
d87 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
