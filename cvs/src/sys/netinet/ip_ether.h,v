head	1.22;
access;
symbols
	OPENBSD_6_2:1.22.0.4
	OPENBSD_6_2_BASE:1.22
	OPENBSD_6_1:1.21.0.4
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.18.0.12
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.6
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.8
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.4
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.17.0.8
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.4
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.16.0.2
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.8
	OPENBSD_5_0:1.15.0.6
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.4
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.2
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.14.0.8
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.10
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.6
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.4
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.2
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.13.0.22
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.20
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.18
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.16
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.14
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.12
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.10
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.13
	SMP_SYNC_B:1.13
	OPENBSD_3_5:1.13.0.8
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.6
	OPENBSD_3_4_BASE:1.13
	UBC_SYNC_A:1.13
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.13
	UBC:1.11.0.4
	UBC_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.2
	SMP_BASE:1.3
	kame_19991208:1.2;
locks; strict;
comment	@ * @;


1.22
date	2017.04.14.20.46.31;	author bluhm;	state Exp;
branches;
next	1.21;
commitid	00hB28wQPwG5Ysk0;

1.21
date	2017.03.07.23.35.06;	author jca;	state Exp;
branches;
next	1.20;
commitid	PgAFt411fYnb1Ztm;

1.20
date	2017.01.29.19.58.47;	author bluhm;	state Exp;
branches;
next	1.19;
commitid	3e3CkrbYekyVOcxy;

1.19
date	2017.01.25.17.34.31;	author bluhm;	state Exp;
branches;
next	1.18;
commitid	pVtptbHA3yk4jSpN;

1.18
date	2014.07.14.12.18.30;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	2OCwVynZCRfrPdg3;

1.17
date	2013.01.14.23.06.10;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2012.05.12.12.58.16;	author mpf;	state Exp;
branches;
next	1.15;

1.15
date	2010.05.11.09.36.07;	author claudio;	state Exp;
branches;
next	1.14;

1.14
date	2007.12.14.18.33.41;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.09.16.26.10;	author itojun;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.14.01.27.11;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.25.05.11.58;	author angelos;	state Exp;
branches
	1.11.4.1;
next	1.10;

1.10
date	2001.06.09.07.03.42;	author angelos;	state Exp;
branches;
next	1.9;

1.9
date	2001.02.03.21.38.39;	author jason;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.03.19.45.04;	author jason;	state Exp;
branches;
next	1.7;

1.7
date	2001.02.02.08.28.21;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.01.20.19.24;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2001.02.01.20.14.27;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.09.02.47.19;	author angelos;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.21.03.40.31;	author angelos;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	99.10.29.02.00.23;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	99.10.28.03.08.34;	author angelos;	state Exp;
branches;
next	;

1.3.2.1
date	2001.05.14.22.40.09;	author niklas;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.07.04.10.54.43;	author niklas;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2002.03.28.14.56.45;	author niklas;	state Exp;
branches;
next	1.3.2.4;

1.3.2.4
date	2003.03.28.00.06.54;	author niklas;	state Exp;
branches;
next	;

1.11.4.1
date	2002.06.11.03.31.36;	author art;	state Exp;
branches;
next	1.11.4.2;

1.11.4.2
date	2002.10.29.00.36.47;	author art;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Pass down the address family through the pr_input calls.  This
allows to simplify code used for both IPv4 and IPv6.
OK mikeb@@ deraadt@@
@
text
@/*	$OpenBSD: ip_ether.h,v 1.21 2017/03/07 23:35:06 jca Exp $ */
/*
 * The author of this code is Angelos D. Keromytis (angelos@@adk.gr)
 *
 * This code was written by Angelos D. Keromytis in October 1999.
 *
 * Copyright (C) 1999-2001 Angelos D. Keromytis.
 *
 * Permission to use, copy, and modify this software with or without fee
 * is hereby granted, provided that this entire notice is included in
 * all copies of any software which is or includes a copy or
 * modification of this software.
 * You may use this code under the GNU public license if you so wish. Please
 * contribute changes back to the authors under this freer than GPL license
 * so that we may further the use of strong encryption without limitations to
 * all.
 *
 * THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTY. IN PARTICULAR, NONE OF THE AUTHORS MAKES ANY
 * REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE
 * MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
 * PURPOSE.
 */

#ifndef _NETINET_IP_ETHER_H_
#define _NETINET_IP_ETHER_H_

/*
 * Ethernet-inside-IP processing.
 */

struct etheripstat {
	u_int64_t	etherips_hdrops;	/* packet shorter than header shows */
	u_int64_t	etherips_qfull;		/* bridge queue full, packet dropped */
	u_int64_t	etherips_noifdrops;	/* no interface/bridge information */
	u_int64_t	etherips_pdrops;	/* packet dropped due to policy */
	u_int64_t	etherips_adrops;	/* all other drops */
	u_int64_t	etherips_ipackets;	/* total input packets */
	u_int64_t	etherips_opackets;	/* total output packets */
	u_int64_t	etherips_ibytes;	/* input bytes */
	u_int64_t	etherips_obytes;	/* output bytes */
};

struct etherip_header {
#if BYTE_ORDER == LITTLE_ENDIAN
	u_int		eip_res:4;	/* reserved */
	u_int		eip_ver:4;	/* version */
#endif
#if BYTE_ORDER == BIG_ENDIAN
	u_int		eip_ver:4;	/* version */
	u_int		eip_res:4;	/* reserved */
#endif
	u_int8_t	eip_pad;	/* required padding byte */
} __packed;

#define ETHERIP_VERSION		0x03

/*
 * Names for Ether-IP sysctl objects
 */
#define	ETHERIPCTL_ALLOW	1	/* accept incoming EtherIP packets */
#define	ETHERIPCTL_STATS	2	/* etherip stats */
#define	ETHERIPCTL_MAXID	3

#define ETHERIPCTL_NAMES { \
	{ 0, 0 }, \
	{ "allow", CTLTYPE_INT }, \
	{ "stats", CTLTYPE_STRUCT }, \
}

#ifdef _KERNEL
struct tdb;

int	etherip_output(struct mbuf *, struct tdb *, struct mbuf **, int);
int	etherip_input(struct mbuf **, int *, int, int);
int	etherip_sysctl(int *, u_int, void *, size_t *, void *, size_t);

extern int etherip_allow;
extern struct etheripstat etheripstat;
#endif /* _KERNEL */
#endif /* _NETINET_IP_ETHER_H_ */
@


1.21
log
@Rename struct etheripstat members for consistency, move them all to 64bits

Will make transition to percpu counters easier.  ok bluhm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.20 2017/01/29 19:58:47 bluhm Exp $ */
d75 1
a75 1
int	etherip_input(struct mbuf **, int *, int);
@


1.20
log
@Change the IPv4 pr_input function to the way IPv6 is implemented,
to get rid of struct ip6protosw and some wrapper functions.  It is
more consistent to have less different structures.  The divert_input
functions cannot be called anyway, so remove them.
OK visa@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.19 2017/01/25 17:34:31 bluhm Exp $ */
d33 9
a41 9
	u_int32_t	etherip_hdrops;		/* packet shorter than header shows */
	u_int32_t	etherip_qfull;		/* bridge queue full, packet dropped */
	u_int32_t	etherip_noifdrops;	/* no interface/bridge information */
	u_int32_t	etherip_pdrops;		/* packet dropped due to policy */
	u_int32_t	etherip_adrops;         /* all other drops */
	u_int32_t	etherip_ipackets;	/* total input packets */
	u_int32_t	etherip_opackets;	/* total output packets */
	u_int64_t	etherip_ibytes;		/* input bytes */
	u_int64_t	etherip_obytes;		/* output bytes */
@


1.19
log
@Since raw_input() and route_input() are gone from pr_input, we can
make the variable parameters of the protocol input functions fixed.
Also add the proto to make it similar to IPv6.
OK mpi@@ guenther@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.18 2014/07/14 12:18:30 deraadt Exp $ */
d75 1
a75 4
void	etherip_input(struct mbuf *, int, int);
#ifdef INET6
int	etherip_input6(struct mbuf **, int *, int);
#endif
@


1.18
log
@In the next step, stop accepting the nibble-swapped protocol for 5.6.
This completes the transition.  A cvs log and diff will tell the story
of why we went through this.
with david.dahlberg@@fkie.fraunhofer.de and claudio
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.17 2013/01/14 23:06:10 deraadt Exp $ */
d75 1
a75 1
void	etherip_input(struct mbuf *, ...);
@


1.17
log
@after OpenBSD requested a etherip rev 3 to solve a byte order weakness, and
worked with them to define a specific format, ietf quietly changed their
mind and did something different.
First step of transitioning over two release -- accept both types, but
continue sending old format.
pointed out by david.dahlberg@@fkie.fraunhofer.de
ok claudio
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.16 2012/05/12 12:58:16 mpf Exp $ */
d46 1
a46 1
	u_int		eip_oldver:4;	/* reserved */
d51 1
a51 1
	u_int		eip_oldver:4;	/* reserved */
@


1.16
log
@Fix tcpdump for etherip packets.
bpf_mtap() needs to be called without the etherip_header.
Idea to use a forward declaration for struct tdb by claudio.
OK claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.15 2010/05/11 09:36:07 claudio Exp $ */
d45 10
a54 5
	u_int8_t	eip_ver;		/* version/reserved */
	u_int8_t	eip_pad;		/* required padding byte */
};
#define ETHERIP_VER_VERS_MASK	0x0f
#define ETHERIP_VER_RSVD_MASK	0xf0
@


1.15
log
@Massiv cleanup of the gif(4) mess. Move encapsulation into gif_output()
where it is not necessary to guess protocols by looking at the first nibble.
in_gif_output() will encapsulate the packet but not send it. Because of
etherip support and the way the bridge works a minimal hack is needed in
gif_start() to ensure that the bridged packets are encapsulated as well.
This actually started with the idea to add MPLS support but that turned out
to be not as simple as in the gre(4) case.
Tested by myself (IP, IPv6, etherip, MPLS), sthen@@ (IP, IPv6), naddy (IPv6)
OK sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.14 2007/12/14 18:33:41 deraadt Exp $ */
d67 2
@


1.14
log
@add sysctl entry points into various network layers, in particular to
provide netstat(1) with data it needs;  ok claudio reyk
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.13 2002/06/09 16:26:10 itojun Exp $ */
d67 5
@


1.13
log
@whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.12 2002/03/14 01:27:11 millert Exp $ */
d57 2
a58 1
#define ETHERIPCTL_MAXID	2
d63 1
@


1.12
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.11 2001/06/25 05:11:58 angelos Exp $ */
d3 1
a3 1
 * The author of this code is Angelos D. Keromytis (angelos@@adk.gr) 
d8 1
a8 1
 *	
d12 1
a12 1
 * modification of this software. 
@


1.11
log
@Copyright.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.10 2001/06/09 07:03:42 angelos Exp $ */
d65 1
a65 1
int	etherip_sysctl __P((int *, u_int, void *, size_t *, void *, size_t));
@


1.11.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.11 2001/06/25 05:11:58 angelos Exp $ */
d65 1
a65 1
int	etherip_sysctl(int *, u_int, void *, size_t *, void *, size_t);
@


1.11.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.11.4.1 2002/06/11 03:31:36 art Exp $ */
d3 1
a3 1
 * The author of this code is Angelos D. Keromytis (angelos@@adk.gr)
d8 1
a8 1
 *
d12 1
a12 1
 * modification of this software.
@


1.10
log
@Inclusion protection.
@
text
@d1 1
a1 2
/*	$OpenBSD: ip_ether.h,v 1.9 2001/02/03 21:38:39 jason Exp $ */

d7 1
a7 1
 * Copyright (C) 1999, by Angelos D. Keromytis.
d9 1
a9 1
 * Permission to use, copy, and modify this software without fee
@


1.9
log
@- define and use EtherIP version 3 (2 byte padded header instead of the
single byte header used in V2), and drop support for V2.
- that done, remove some of the buffer copies that were used as alignment shims
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.8 2001/02/03 19:45:04 jason Exp $ */
d26 3
d70 2
a71 1
#endif
@


1.8
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.7 2001/02/02 08:28:21 jason Exp $ */
d43 2
a44 1
	u_int8_t	eip_ver;
d49 1
a49 1
#define ETHERIP_VERSION		0x02
@


1.7
log
@a quick checkpoint:
- add a struct etherip_header (will make switching protocol versions a bit easier and give a base for aligning things correctly)
- fix the version/reserved field checking for good this time
- don't need to m_copydata to grab the first byte of an mbuf that you know has t
hat byte
- m_adj() instead of homebrew
- fix M_MCAST/M_BCAST setting (cut/pasto)
- if_imcasts was being updated on the wrong interface
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.6 2001/02/01 20:19:24 jason Exp $ */
d30 10
a39 11
struct etheripstat
{
    u_int32_t	etherip_hdrops;		/* packet shorter than header shows */
    u_int32_t	etherip_qfull;		/* bridge queue full, packet dropped */
    u_int32_t   etherip_noifdrops;	/* no interface/bridge information */
    u_int32_t	etherip_pdrops;		/* packet dropped due to policy */
    u_int32_t   etherip_adrops;         /* all other drops */
    u_int32_t	etherip_ipackets;	/* total input packets */
    u_int32_t	etherip_opackets;	/* total output packets */
    u_int64_t   etherip_ibytes;		/* input bytes */
    u_int64_t   etherip_obytes;		/* output bytes */
@


1.6
log
@grr, don't forget to change the reserved field to the upper 4 bits of the header.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.5 2001/02/01 20:14:27 jason Exp $ */
d43 6
a49 2
#define ETHERIP_VERSION_MASK	0x0f
#define ETHERIP_RSVD_MASK	0xf0
@


1.5
log
@according to the draft-housley-etherip-01, the version is in the low order
4 bits of the header
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.4 2001/01/09 02:47:19 angelos Exp $ */
d45 1
@


1.4
log
@Define version number for EtherIP protocol (soon to become RFC).
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.3 2000/01/21 03:40:31 angelos Exp $ */
d43 2
a44 1
#define ETHERIP_VERSION          0x2
@


1.3
log
@Fix comment.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.2 1999/10/29 02:00:23 angelos Exp $ */
d42 2
@


1.3.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.9 2001/02/03 21:38:39 jason Exp $ */
d30 11
a40 10
struct etheripstat {
	u_int32_t	etherip_hdrops;		/* packet shorter than header shows */
	u_int32_t	etherip_qfull;		/* bridge queue full, packet dropped */
	u_int32_t	etherip_noifdrops;	/* no interface/bridge information */
	u_int32_t	etherip_pdrops;		/* packet dropped due to policy */
	u_int32_t	etherip_adrops;         /* all other drops */
	u_int32_t	etherip_ipackets;	/* total input packets */
	u_int32_t	etherip_opackets;	/* total output packets */
	u_int64_t	etherip_ibytes;		/* input bytes */
	u_int64_t	etherip_obytes;		/* output bytes */
a41 9

struct etherip_header {
	u_int8_t	eip_ver;		/* version/reserved */
	u_int8_t	eip_pad;		/* required padding byte */
};
#define ETHERIP_VER_VERS_MASK	0x0f
#define ETHERIP_VER_RSVD_MASK	0xf0

#define ETHERIP_VERSION		0x03
@


1.3.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 2
a2 1
/*	$OpenBSD$ */
d8 1
a8 1
 * Copyright (C) 1999-2001 Angelos D. Keromytis.
d10 1
a10 1
 * Permission to use, copy, and modify this software with or without fee
a25 3
#ifndef _NETINET_IP_ETHER_H_
#define _NETINET_IP_ETHER_H_

d67 1
a67 2
#endif /* _KERNEL */
#endif /* _NETINET_IP_ETHER_H_ */
@


1.3.2.3
log
@Merge in -current from roughly a week ago
@
text
@d65 1
a65 1
int	etherip_sysctl(int *, u_int, void *, size_t *, void *, size_t);
@


1.3.2.4
log
@Sync the SMP branch with 3.3
@
text
@d3 1
a3 1
 * The author of this code is Angelos D. Keromytis (angelos@@adk.gr)
d8 1
a8 1
 *
d12 1
a12 1
 * modification of this software.
@


1.2
log
@Queue on the bridge interface.
@
text
@d1 1
a1 1
/*	$OpenBSD: ip_ether.h,v 1.1 1999/10/28 03:08:34 angelos Exp $ */
d44 1
a44 1
 * Names for IP4 sysctl objects
@


1.1
log
@Add Ethernet-IP encapsulation handling.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d32 5
d39 2
a40 6
    u_int32_t	etherip_hdrops;		/* packet shorter than header shows */
    u_int32_t   etherip_adrops;         /* all other drops */
    u_int32_t	etherip_qfull;
    u_int64_t   etherip_ibytes;
    u_int64_t   etherip_obytes;
    u_int32_t	etherip_pdrops;		/* packet dropped due to policy */
@

