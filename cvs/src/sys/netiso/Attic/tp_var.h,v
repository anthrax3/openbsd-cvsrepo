head	1.4;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.1.0.26
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.24
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.22
	OPENBSD_2_8:1.1.0.20
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.18
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.16
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2004.07.15.12.10.46;	author henning;	state dead;
branches;
next	1.3;

1.3
date	2002.03.14.03.16.12;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.27.12;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.03.04.10.36.47;	author mickey;	state Exp;
branches
	1.1.16.1
	1.1.26.1;
next	;

1.1.16.1
date	2002.03.28.14.57.38;	author niklas;	state Exp;
branches;
next	;

1.1.26.1
date	2002.06.11.03.31.38;	author art;	state Exp;
branches;
next	;


desc
@@


1.4
log
@bye bye netiso, you won't be missed
ok millert deraadt
@
text
@/*	$OpenBSD: tp_var.h,v 1.3 2002/03/14 03:16:12 millert Exp $	*/
/*	$NetBSD: tp_var.h,v 1.1 1996/02/13 22:12:29 christos Exp $	*/

/*
 * Copyright (c) 1995 Christos Zoulas.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Christos Zoulas.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifdef _KERNEL
struct isopcb;
struct mbuf;
struct sockaddr_iso;
struct tp_pcb;
struct sockaddr_in;
struct iso_addr;
struct tp_conn_param;
struct tp_event;
struct inpcb;
struct route;
struct pklcd;
struct sockaddr;
struct x25_packet;
struct in_addr;


/* tp_cons.c */
int tpcons_pcbconnect(void *, struct mbuf *);
void *tpcons_ctlinput(int, struct sockaddr *, void *);
void tpcons_input(struct mbuf *, ...);
int tpcons_output(struct mbuf *, ...);
int tpcons_output_dg(struct mbuf *, ...);

/* tp_driver.c */
int tp_driver(struct tp_pcb *, struct tp_event *);

/* tp_emit.c */
int tp_emit(int, struct tp_pcb *, SeqNum, u_int, struct mbuf *);
int tp_error_emit(int, u_long, struct sockaddr_iso *,
		  struct sockaddr_iso *, struct mbuf *, int,
		  struct tp_pcb *, caddr_t, 
		  int (*) (struct mbuf *, ...));

/* tp_inet.c */
void in_getsufx(void *, u_short *, caddr_t, int);
void in_putsufx(void *, caddr_t, int, int);
void in_recycle_tsuffix(void *);
void in_putnetaddr(void *, struct sockaddr *, int);
int in_cmpnetaddr(void *, struct sockaddr *, int);
void in_getnetaddr(void *, struct mbuf *, int);
int tpip_mtu(void *);
int tpip_output(struct mbuf *, ...);
int tpip_output_dg(struct mbuf *, ...);
void tpip_input(struct mbuf *, ...);
void tpin_quench(struct inpcb *, int);
void *tpip_ctlinput(int, struct sockaddr *, void *);
void tpin_abort(struct inpcb *, int);
void dump_inaddr(struct sockaddr_in *);

/* tp_input.c */
struct mbuf    *tp_inputprep(struct mbuf *);
void tp_input(struct mbuf *, ...);
int tp_headersize(int, struct tp_pcb *);

/* tp_iso.c */
void iso_getsufx(void *, u_short *, caddr_t, int);
void iso_putsufx(void *, caddr_t, int, int);
void iso_recycle_tsuffix(void *);
void iso_putnetaddr(void *, struct sockaddr *, int);
int iso_cmpnetaddr(void *, struct sockaddr *, int);
void iso_getnetaddr(void *, struct mbuf *, int);
int tpclnp_mtu(void *);
int tpclnp_output(struct mbuf *, ...);
int tpclnp_output_dg(struct mbuf *, ...);
void tpclnp_input(struct mbuf *, ...);
void iso_rtchange(struct isopcb *);
void tpiso_decbit(struct isopcb *);
void tpiso_quench(struct isopcb *);
void *tpclnp_ctlinput(int, struct sockaddr *, void *);
void tpclnp_ctlinput1(int, struct iso_addr *);
void tpiso_abort(struct isopcb *);
void tpiso_reset(struct isopcb *);

/* tp_meas.c */
void Tpmeas(u_int, u_int, struct timeval *, u_int, u_int, u_int);

/* tp_output.c */
int tp_consistency(struct tp_pcb *, u_int, struct tp_conn_param *);
int tp_ctloutput(int, struct socket *, int, int, struct mbuf **);

/* tp_pcb.c */
void tp_init(void);
void tp_soisdisconnecting(struct socket *);
void tp_soisdisconnected(struct tp_pcb *);
void tp_freeref(RefNum);
u_long tp_getref(struct tp_pcb *);
int tp_set_npcb(struct tp_pcb *);
int tp_attach(struct socket *, long);
void tp_detach(struct tp_pcb *);
int tp_tselinuse(int, caddr_t, struct sockaddr_iso *, int);
int tp_pcbbind(void *, struct mbuf *);

/* tp_subr.c */
int tp_goodXack(struct tp_pcb *, SeqNum);
void tp_rtt_rtv(struct tp_pcb *);
int tp_goodack(struct tp_pcb *, u_int, SeqNum, u_int);
int tp_sbdrop(struct tp_pcb *, SeqNum);
void tp_send(struct tp_pcb *);
int tp_packetize(struct tp_pcb *, struct mbuf *, int);
int tp_stash(struct tp_pcb *, struct tp_event *);
void tp_rsyflush(struct tp_pcb *);
void tp_rsyset(struct tp_pcb *);
void tpsbcheck(struct tp_pcb *, int);

/* tp_subr2.c */
void tp_local_credit(struct tp_pcb *);
int tp_protocol_error(struct tp_event *, struct tp_pcb *);
void tp_drain(void);
void tp_indicate(int, struct tp_pcb *, u_short);
void tp_getoptions(struct tp_pcb *);
void tp_recycle_tsuffix(void *);
void tp_quench(struct inpcb *, int);
void tp_netcmd(struct tp_pcb *, int);
int tp_mask_to_num(u_char);
void tp_mss(struct tp_pcb *, int);
int tp_route_to(struct mbuf *, struct tp_pcb *, caddr_t);
void tp0_stash(struct tp_pcb *, struct tp_event *);
void tp0_openflow(struct tp_pcb *);
int tp_setup_perf(struct tp_pcb *);
void dump_addr(struct sockaddr *);
void Dump_buf(caddr_t, int);

/* tp_timer.c */
void tp_timerinit(void);
void tp_etimeout(struct tp_pcb *, int, int);
void tp_euntimeout(struct tp_pcb *, int);
void tp_slowtimo(void);
void tp_data_retrans(struct tp_pcb *);
void tp_fasttimo(void);
void tp_ctimeout(struct tp_pcb *, int, int);
void tp_ctimeout_MIN(struct tp_pcb *, int, int);
void tp_cuntimeout(struct tp_pcb *, int);

/* tp_trace.c */
void tpTrace(struct tp_pcb *, u_int, u_int, u_int, u_int, u_int,
		     u_int);

/* tp_usrreq.c */
void dump_mbuf(struct mbuf *, char *);
int tp_rcvoob(struct tp_pcb *, struct socket *, struct mbuf *,
		     int *, int);
int tp_sendoob(struct tp_pcb *, struct socket *, struct mbuf *, int *);
int tp_usrreq(struct socket *, int, struct mbuf *, struct mbuf *,
		     struct mbuf *);
void tp_ltrace(struct socket *, struct uio *);
int tp_confirm(struct tp_pcb *);
int tp_snd_control(struct mbuf *, struct socket *, struct mbuf **);

#ifdef TPCONS
/* if_cons.c */
void nibble_copy(char *, unsigned, char *, unsigned, int);
int nibble_match(char *, unsigned, char *, unsigned, int);
void cons_init(void);
int tp_incoming(struct mbuf *, void *);
int cons_tpinput(struct mbuf *, void *);
int cons_connect(struct isopcb *);
void *cons_ctlinput(int, struct sockaddr *, void *);
int find_error_reason(struct x25_packet *);
#endif

#endif
@


1.3
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: tp_var.h,v 1.2 2002/03/14 01:27:12 millert Exp $	*/
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: tp_var.h,v 1.1 1996/03/04 10:36:47 mickey Exp $	*/
d62 4
a65 4
int tp_error_emit __P((int, u_long, struct sockaddr_iso *,
		       struct sockaddr_iso *, struct mbuf *, int,
		       struct tp_pcb *, caddr_t, 
		       int (*) (struct mbuf *, ...)));
@


1.1
log
@Initial commit of NetBSD 960217 netiso.
all the rest is the fixes to the import by Niklas.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d51 5
a55 5
int tpcons_pcbconnect __P((void *, struct mbuf *));
void *tpcons_ctlinput __P((int, struct sockaddr *, void *));
void tpcons_input __P((struct mbuf *, ...));
int tpcons_output __P((struct mbuf *, ...));
int tpcons_output_dg __P((struct mbuf *, ...));
d58 1
a58 1
int tp_driver   __P((struct tp_pcb *, struct tp_event *));
d61 1
a61 1
int tp_emit __P((int, struct tp_pcb *, SeqNum, u_int, struct mbuf *));
d68 14
a81 14
void in_getsufx  __P((void *, u_short *, caddr_t, int));
void in_putsufx __P((void *, caddr_t, int, int));
void in_recycle_tsuffix __P((void *));
void in_putnetaddr __P((void *, struct sockaddr *, int));
int in_cmpnetaddr __P((void *, struct sockaddr *, int));
void in_getnetaddr __P((void *, struct mbuf *, int));
int tpip_mtu    __P((void *));
int tpip_output __P((struct mbuf *, ...));
int tpip_output_dg __P((struct mbuf *, ...));
void tpip_input __P((struct mbuf *, ...));
void tpin_quench __P((struct inpcb *, int));
void *tpip_ctlinput __P((int, struct sockaddr *, void *));
void tpin_abort __P((struct inpcb *, int));
void dump_inaddr __P((struct sockaddr_in *));
d84 3
a86 3
struct mbuf    *tp_inputprep __P((struct mbuf *));
void tp_input   __P((struct mbuf *, ...));
int tp_headersize __P((int, struct tp_pcb *));
d89 17
a105 17
void iso_getsufx __P((void *, u_short *, caddr_t, int));
void iso_putsufx __P((void *, caddr_t, int, int));
void iso_recycle_tsuffix __P((void *));
void iso_putnetaddr __P((void *, struct sockaddr *, int));
int iso_cmpnetaddr __P((void *, struct sockaddr *, int));
void iso_getnetaddr __P((void *, struct mbuf *, int));
int tpclnp_mtu  __P((void *));
int tpclnp_output __P((struct mbuf *, ...));
int tpclnp_output_dg __P((struct mbuf *, ...));
void tpclnp_input __P((struct mbuf *, ...));
void iso_rtchange __P((struct isopcb *));
void tpiso_decbit __P((struct isopcb *));
void tpiso_quench __P((struct isopcb *));
void *tpclnp_ctlinput __P((int, struct sockaddr *, void *));
void tpclnp_ctlinput1 __P((int, struct iso_addr *));
void tpiso_abort __P((struct isopcb *));
void tpiso_reset __P((struct isopcb *));
d108 1
a108 1
void Tpmeas __P((u_int, u_int, struct timeval *, u_int, u_int, u_int));
d111 2
a112 2
int tp_consistency __P((struct tp_pcb *, u_int, struct tp_conn_param *));
int tp_ctloutput __P((int, struct socket *, int, int, struct mbuf **));
d115 10
a124 10
void tp_init    __P((void));
void tp_soisdisconnecting __P((struct socket *));
void tp_soisdisconnected __P((struct tp_pcb *));
void tp_freeref __P((RefNum));
u_long tp_getref __P((struct tp_pcb *));
int tp_set_npcb __P((struct tp_pcb *));
int tp_attach   __P((struct socket *, long));
void tp_detach  __P((struct tp_pcb *));
int tp_tselinuse __P((int, caddr_t, struct sockaddr_iso *, int));
int tp_pcbbind  __P((void *, struct mbuf *));
d127 10
a136 10
int tp_goodXack __P((struct tp_pcb *, SeqNum));
void tp_rtt_rtv __P((struct tp_pcb *));
int tp_goodack  __P((struct tp_pcb *, u_int, SeqNum, u_int));
int tp_sbdrop   __P((struct tp_pcb *, SeqNum));
void tp_send    __P((struct tp_pcb *));
int tp_packetize __P((struct tp_pcb *, struct mbuf *, int));
int tp_stash    __P((struct tp_pcb *, struct tp_event *));
void tp_rsyflush __P((struct tp_pcb *));
void tp_rsyset   __P((struct tp_pcb *));
void tpsbcheck   __P((struct tp_pcb *, int));
d139 16
a154 16
void tp_local_credit __P((struct tp_pcb *));
int tp_protocol_error __P((struct tp_event *, struct tp_pcb *));
void tp_drain   __P((void));
void tp_indicate __P((int, struct tp_pcb *, u_short));
void tp_getoptions __P((struct tp_pcb *));
void tp_recycle_tsuffix __P((void *));
void tp_quench  __P((struct inpcb *, int));
void tp_netcmd   __P((struct tp_pcb *, int));
int tp_mask_to_num __P((u_char));
void tp_mss     __P((struct tp_pcb *, int));
int tp_route_to __P((struct mbuf *, struct tp_pcb *, caddr_t));
void tp0_stash  __P((struct tp_pcb *, struct tp_event *));
void tp0_openflow __P((struct tp_pcb *));
int tp_setup_perf __P((struct tp_pcb *));
void dump_addr   __P((struct sockaddr *));
void Dump_buf    __P((caddr_t, int));
d157 9
a165 9
void tp_timerinit __P((void));
void tp_etimeout __P((struct tp_pcb *, int, int));
void tp_euntimeout __P((struct tp_pcb *, int));
void tp_slowtimo __P((void));
void tp_data_retrans __P((struct tp_pcb *));
void tp_fasttimo __P((void));
void tp_ctimeout __P((struct tp_pcb *, int, int));
void tp_ctimeout_MIN __P((struct tp_pcb *, int, int));
void tp_cuntimeout __P((struct tp_pcb *, int));
d168 2
a169 2
void tpTrace    __P((struct tp_pcb *, u_int, u_int, u_int, u_int, u_int,
		     u_int));
d172 9
a180 9
void dump_mbuf  __P((struct mbuf *, char *));
int tp_rcvoob   __P((struct tp_pcb *, struct socket *, struct mbuf *,
		     int *, int));
int tp_sendoob  __P((struct tp_pcb *, struct socket *, struct mbuf *, int *));
int tp_usrreq   __P((struct socket *, int, struct mbuf *, struct mbuf *,
		     struct mbuf *));
void tp_ltrace   __P((struct socket *, struct uio *));
int tp_confirm  __P((struct tp_pcb *));
int tp_snd_control __P((struct mbuf *, struct socket *, struct mbuf **));
d184 8
a191 8
void nibble_copy __P((char *, unsigned, char *, unsigned, int));
int nibble_match __P((char *, unsigned, char *, unsigned, int));
void cons_init __P((void));
int tp_incoming __P((struct mbuf *, void *));
int cons_tpinput __P((struct mbuf *, void *));
int cons_connect __P((struct isopcb *));
void *cons_ctlinput __P((int, struct sockaddr *, void *));
int find_error_reason __P((struct x25_packet *));
@


1.1.26.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: tp_var.h,v 1.1 1996/03/04 10:36:47 mickey Exp $	*/
d51 5
a55 5
int tpcons_pcbconnect(void *, struct mbuf *);
void *tpcons_ctlinput(int, struct sockaddr *, void *);
void tpcons_input(struct mbuf *, ...);
int tpcons_output(struct mbuf *, ...);
int tpcons_output_dg(struct mbuf *, ...);
d58 1
a58 1
int tp_driver(struct tp_pcb *, struct tp_event *);
d61 5
a65 5
int tp_emit(int, struct tp_pcb *, SeqNum, u_int, struct mbuf *);
int tp_error_emit(int, u_long, struct sockaddr_iso *,
		  struct sockaddr_iso *, struct mbuf *, int,
		  struct tp_pcb *, caddr_t, 
		  int (*) (struct mbuf *, ...));
d68 14
a81 14
void in_getsufx(void *, u_short *, caddr_t, int);
void in_putsufx(void *, caddr_t, int, int);
void in_recycle_tsuffix(void *);
void in_putnetaddr(void *, struct sockaddr *, int);
int in_cmpnetaddr(void *, struct sockaddr *, int);
void in_getnetaddr(void *, struct mbuf *, int);
int tpip_mtu(void *);
int tpip_output(struct mbuf *, ...);
int tpip_output_dg(struct mbuf *, ...);
void tpip_input(struct mbuf *, ...);
void tpin_quench(struct inpcb *, int);
void *tpip_ctlinput(int, struct sockaddr *, void *);
void tpin_abort(struct inpcb *, int);
void dump_inaddr(struct sockaddr_in *);
d84 3
a86 3
struct mbuf    *tp_inputprep(struct mbuf *);
void tp_input(struct mbuf *, ...);
int tp_headersize(int, struct tp_pcb *);
d89 17
a105 17
void iso_getsufx(void *, u_short *, caddr_t, int);
void iso_putsufx(void *, caddr_t, int, int);
void iso_recycle_tsuffix(void *);
void iso_putnetaddr(void *, struct sockaddr *, int);
int iso_cmpnetaddr(void *, struct sockaddr *, int);
void iso_getnetaddr(void *, struct mbuf *, int);
int tpclnp_mtu(void *);
int tpclnp_output(struct mbuf *, ...);
int tpclnp_output_dg(struct mbuf *, ...);
void tpclnp_input(struct mbuf *, ...);
void iso_rtchange(struct isopcb *);
void tpiso_decbit(struct isopcb *);
void tpiso_quench(struct isopcb *);
void *tpclnp_ctlinput(int, struct sockaddr *, void *);
void tpclnp_ctlinput1(int, struct iso_addr *);
void tpiso_abort(struct isopcb *);
void tpiso_reset(struct isopcb *);
d108 1
a108 1
void Tpmeas(u_int, u_int, struct timeval *, u_int, u_int, u_int);
d111 2
a112 2
int tp_consistency(struct tp_pcb *, u_int, struct tp_conn_param *);
int tp_ctloutput(int, struct socket *, int, int, struct mbuf **);
d115 10
a124 10
void tp_init(void);
void tp_soisdisconnecting(struct socket *);
void tp_soisdisconnected(struct tp_pcb *);
void tp_freeref(RefNum);
u_long tp_getref(struct tp_pcb *);
int tp_set_npcb(struct tp_pcb *);
int tp_attach(struct socket *, long);
void tp_detach(struct tp_pcb *);
int tp_tselinuse(int, caddr_t, struct sockaddr_iso *, int);
int tp_pcbbind(void *, struct mbuf *);
d127 10
a136 10
int tp_goodXack(struct tp_pcb *, SeqNum);
void tp_rtt_rtv(struct tp_pcb *);
int tp_goodack(struct tp_pcb *, u_int, SeqNum, u_int);
int tp_sbdrop(struct tp_pcb *, SeqNum);
void tp_send(struct tp_pcb *);
int tp_packetize(struct tp_pcb *, struct mbuf *, int);
int tp_stash(struct tp_pcb *, struct tp_event *);
void tp_rsyflush(struct tp_pcb *);
void tp_rsyset(struct tp_pcb *);
void tpsbcheck(struct tp_pcb *, int);
d139 16
a154 16
void tp_local_credit(struct tp_pcb *);
int tp_protocol_error(struct tp_event *, struct tp_pcb *);
void tp_drain(void);
void tp_indicate(int, struct tp_pcb *, u_short);
void tp_getoptions(struct tp_pcb *);
void tp_recycle_tsuffix(void *);
void tp_quench(struct inpcb *, int);
void tp_netcmd(struct tp_pcb *, int);
int tp_mask_to_num(u_char);
void tp_mss(struct tp_pcb *, int);
int tp_route_to(struct mbuf *, struct tp_pcb *, caddr_t);
void tp0_stash(struct tp_pcb *, struct tp_event *);
void tp0_openflow(struct tp_pcb *);
int tp_setup_perf(struct tp_pcb *);
void dump_addr(struct sockaddr *);
void Dump_buf(caddr_t, int);
d157 9
a165 9
void tp_timerinit(void);
void tp_etimeout(struct tp_pcb *, int, int);
void tp_euntimeout(struct tp_pcb *, int);
void tp_slowtimo(void);
void tp_data_retrans(struct tp_pcb *);
void tp_fasttimo(void);
void tp_ctimeout(struct tp_pcb *, int, int);
void tp_ctimeout_MIN(struct tp_pcb *, int, int);
void tp_cuntimeout(struct tp_pcb *, int);
d168 2
a169 2
void tpTrace(struct tp_pcb *, u_int, u_int, u_int, u_int, u_int,
		     u_int);
d172 9
a180 9
void dump_mbuf(struct mbuf *, char *);
int tp_rcvoob(struct tp_pcb *, struct socket *, struct mbuf *,
		     int *, int);
int tp_sendoob(struct tp_pcb *, struct socket *, struct mbuf *, int *);
int tp_usrreq(struct socket *, int, struct mbuf *, struct mbuf *,
		     struct mbuf *);
void tp_ltrace(struct socket *, struct uio *);
int tp_confirm(struct tp_pcb *);
int tp_snd_control(struct mbuf *, struct socket *, struct mbuf **);
d184 8
a191 8
void nibble_copy(char *, unsigned, char *, unsigned, int);
int nibble_match(char *, unsigned, char *, unsigned, int);
void cons_init(void);
int tp_incoming(struct mbuf *, void *);
int cons_tpinput(struct mbuf *, void *);
int cons_connect(struct isopcb *);
void *cons_ctlinput(int, struct sockaddr *, void *);
int find_error_reason(struct x25_packet *);
@


1.1.16.1
log
@Merge in -current from roughly a week ago
@
text
@d51 5
a55 5
int tpcons_pcbconnect(void *, struct mbuf *);
void *tpcons_ctlinput(int, struct sockaddr *, void *);
void tpcons_input(struct mbuf *, ...);
int tpcons_output(struct mbuf *, ...);
int tpcons_output_dg(struct mbuf *, ...);
d58 1
a58 1
int tp_driver(struct tp_pcb *, struct tp_event *);
d61 5
a65 5
int tp_emit(int, struct tp_pcb *, SeqNum, u_int, struct mbuf *);
int tp_error_emit(int, u_long, struct sockaddr_iso *,
		  struct sockaddr_iso *, struct mbuf *, int,
		  struct tp_pcb *, caddr_t, 
		  int (*) (struct mbuf *, ...));
d68 14
a81 14
void in_getsufx(void *, u_short *, caddr_t, int);
void in_putsufx(void *, caddr_t, int, int);
void in_recycle_tsuffix(void *);
void in_putnetaddr(void *, struct sockaddr *, int);
int in_cmpnetaddr(void *, struct sockaddr *, int);
void in_getnetaddr(void *, struct mbuf *, int);
int tpip_mtu(void *);
int tpip_output(struct mbuf *, ...);
int tpip_output_dg(struct mbuf *, ...);
void tpip_input(struct mbuf *, ...);
void tpin_quench(struct inpcb *, int);
void *tpip_ctlinput(int, struct sockaddr *, void *);
void tpin_abort(struct inpcb *, int);
void dump_inaddr(struct sockaddr_in *);
d84 3
a86 3
struct mbuf    *tp_inputprep(struct mbuf *);
void tp_input(struct mbuf *, ...);
int tp_headersize(int, struct tp_pcb *);
d89 17
a105 17
void iso_getsufx(void *, u_short *, caddr_t, int);
void iso_putsufx(void *, caddr_t, int, int);
void iso_recycle_tsuffix(void *);
void iso_putnetaddr(void *, struct sockaddr *, int);
int iso_cmpnetaddr(void *, struct sockaddr *, int);
void iso_getnetaddr(void *, struct mbuf *, int);
int tpclnp_mtu(void *);
int tpclnp_output(struct mbuf *, ...);
int tpclnp_output_dg(struct mbuf *, ...);
void tpclnp_input(struct mbuf *, ...);
void iso_rtchange(struct isopcb *);
void tpiso_decbit(struct isopcb *);
void tpiso_quench(struct isopcb *);
void *tpclnp_ctlinput(int, struct sockaddr *, void *);
void tpclnp_ctlinput1(int, struct iso_addr *);
void tpiso_abort(struct isopcb *);
void tpiso_reset(struct isopcb *);
d108 1
a108 1
void Tpmeas(u_int, u_int, struct timeval *, u_int, u_int, u_int);
d111 2
a112 2
int tp_consistency(struct tp_pcb *, u_int, struct tp_conn_param *);
int tp_ctloutput(int, struct socket *, int, int, struct mbuf **);
d115 10
a124 10
void tp_init(void);
void tp_soisdisconnecting(struct socket *);
void tp_soisdisconnected(struct tp_pcb *);
void tp_freeref(RefNum);
u_long tp_getref(struct tp_pcb *);
int tp_set_npcb(struct tp_pcb *);
int tp_attach(struct socket *, long);
void tp_detach(struct tp_pcb *);
int tp_tselinuse(int, caddr_t, struct sockaddr_iso *, int);
int tp_pcbbind(void *, struct mbuf *);
d127 10
a136 10
int tp_goodXack(struct tp_pcb *, SeqNum);
void tp_rtt_rtv(struct tp_pcb *);
int tp_goodack(struct tp_pcb *, u_int, SeqNum, u_int);
int tp_sbdrop(struct tp_pcb *, SeqNum);
void tp_send(struct tp_pcb *);
int tp_packetize(struct tp_pcb *, struct mbuf *, int);
int tp_stash(struct tp_pcb *, struct tp_event *);
void tp_rsyflush(struct tp_pcb *);
void tp_rsyset(struct tp_pcb *);
void tpsbcheck(struct tp_pcb *, int);
d139 16
a154 16
void tp_local_credit(struct tp_pcb *);
int tp_protocol_error(struct tp_event *, struct tp_pcb *);
void tp_drain(void);
void tp_indicate(int, struct tp_pcb *, u_short);
void tp_getoptions(struct tp_pcb *);
void tp_recycle_tsuffix(void *);
void tp_quench(struct inpcb *, int);
void tp_netcmd(struct tp_pcb *, int);
int tp_mask_to_num(u_char);
void tp_mss(struct tp_pcb *, int);
int tp_route_to(struct mbuf *, struct tp_pcb *, caddr_t);
void tp0_stash(struct tp_pcb *, struct tp_event *);
void tp0_openflow(struct tp_pcb *);
int tp_setup_perf(struct tp_pcb *);
void dump_addr(struct sockaddr *);
void Dump_buf(caddr_t, int);
d157 9
a165 9
void tp_timerinit(void);
void tp_etimeout(struct tp_pcb *, int, int);
void tp_euntimeout(struct tp_pcb *, int);
void tp_slowtimo(void);
void tp_data_retrans(struct tp_pcb *);
void tp_fasttimo(void);
void tp_ctimeout(struct tp_pcb *, int, int);
void tp_ctimeout_MIN(struct tp_pcb *, int, int);
void tp_cuntimeout(struct tp_pcb *, int);
d168 2
a169 2
void tpTrace(struct tp_pcb *, u_int, u_int, u_int, u_int, u_int,
		     u_int);
d172 9
a180 9
void dump_mbuf(struct mbuf *, char *);
int tp_rcvoob(struct tp_pcb *, struct socket *, struct mbuf *,
		     int *, int);
int tp_sendoob(struct tp_pcb *, struct socket *, struct mbuf *, int *);
int tp_usrreq(struct socket *, int, struct mbuf *, struct mbuf *,
		     struct mbuf *);
void tp_ltrace(struct socket *, struct uio *);
int tp_confirm(struct tp_pcb *);
int tp_snd_control(struct mbuf *, struct socket *, struct mbuf **);
d184 8
a191 8
void nibble_copy(char *, unsigned, char *, unsigned, int);
int nibble_match(char *, unsigned, char *, unsigned, int);
void cons_init(void);
int tp_incoming(struct mbuf *, void *);
int cons_tpinput(struct mbuf *, void *);
int cons_connect(struct isopcb *);
void *cons_ctlinput(int, struct sockaddr *, void *);
int find_error_reason(struct x25_packet *);
@


