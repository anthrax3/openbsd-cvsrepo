head	1.7;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2004.07.15.12.10.45;	author henning;	state dead;
branches;
next	1.6;

1.6
date	2003.06.02.23.28.18;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.15.01.20.04;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.12;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.19.06.37.38;	author itojun;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	96.03.04.10.35.43;	author mickey;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	95.10.18.08.53.16;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.16;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2001.05.14.22.40.22;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2002.03.28.14.57.37;	author niklas;	state Exp;
branches;
next	1.2.16.3;

1.2.16.3
date	2003.06.07.11.06.10;	author ho;	state Exp;
branches;
next	;

1.3.6.1
date	2002.06.11.03.31.38;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@bye bye netiso, you won't be missed
ok millert deraadt
@
text
@/*	$OpenBSD: iso_var.h,v 1.6 2003/06/02 23:28:18 millert Exp $	*/
/*	$NetBSD: iso_var.h,v 1.8 1996/02/13 22:10:32 christos Exp $	*/

/*-
 * Copyright (c) 1988, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)iso_var.h	8.1 (Berkeley) 6/10/93
 */

/***********************************************************
		Copyright IBM Corporation 1987

                      All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in
supporting documentation, and that the name of IBM not be
used in advertising or publicity pertaining to distribution of the
software without specific, written prior permission.

IBM DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
IBM BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/
#ifndef _NETISO_ISO_VAR_H_
#define _NETISO_ISO_VAR_H_
/*
 * ARGO Project, Computer Sciences Dept., University of Wisconsin - Madison
 */

/*
 *	Interface address, iso version. One of these structures is
 *	allocated for each interface with an osi address. The ifaddr
 *	structure conatins the protocol-independent part
 *	of the structure, and is assumed to be first.
 */
struct iso_ifaddr {
	struct ifaddr   ia_ifa;	/* protocol-independent info */
#define ia_ifp		ia_ifa.ifa_ifp
#define	ia_flags	ia_ifa.ifa_flags
	int             ia_snpaoffset;
	                TAILQ_ENTRY(iso_ifaddr) ia_list;	/* list of iso addresses */
	struct sockaddr_iso ia_addr;	/* reserve space for interface name */
	struct sockaddr_iso ia_dstaddr;	/* reserve space for broadcast addr */
#define	ia_broadaddr	ia_dstaddr
	struct sockaddr_iso ia_sockmask;	/* reserve space for general
						 * netmask */
};

struct iso_aliasreq {
	char            ifra_name[IFNAMSIZ];	/* if name, e.g. "en0" */
	struct sockaddr_iso ifra_addr;
	struct sockaddr_iso ifra_dstaddr;
	struct sockaddr_iso ifra_mask;
	int             ifra_snpaoffset;
};

struct iso_ifreq {
	char            ifr_name[IFNAMSIZ];	/* if name, e.g. "en0" */
	struct sockaddr_iso ifr_Addr;
};

/*
 *	Given a pointer to an iso_ifaddr (ifaddr),
 *	return a pointer to the addr as a sockaddr_iso
 */
#define	IA_SIS(ia) (&(((struct iso_ifaddr *)(ia))->ia_addr))

#define	SIOCDIFADDR_ISO	_IOW('i',25, struct iso_ifreq)	/* delete IF addr */
#define	SIOCAIFADDR_ISO	_IOW('i',26, struct iso_aliasreq)	/* add/chg IFalias */
#define	SIOCGIFADDR_ISO	_IOWR('i',33, struct iso_ifreq)	/* get ifnet address */
#define	SIOCGIFDSTADDR_ISO _IOWR('i',34, struct iso_ifreq)	/* get dst address */
#define	SIOCGIFNETMASK_ISO _IOWR('i',37, struct iso_ifreq)	/* get dst address */

/*
 * This stuff should go in if.h or if_llc.h or someplace else,
 * but for now . . .
 */

struct llc_etherhdr {
	char            dst[6];
	char            src[6];
	char            len[2];
	char            llc_dsap;
	char            llc_ssap;
	char            llc_ui_byte;
};

struct snpa_hdr {
	struct ifnet   *snh_ifp;
	char            snh_dhost[6];
	char            snh_shost[6];
	short           snh_flags;
};
#ifdef _KERNEL
TAILQ_HEAD(iso_ifaddrhead, iso_ifaddr);
struct iso_ifaddrhead iso_ifaddr;	/* linked list of iso address ifaces */
struct ifqueue  clnlintrq;	/* clnl packet input queue */
struct afhash;
struct llinfo_llc;

/* iso.c */
int iso_addrmatch1(struct iso_addr *, struct iso_addr *);
int iso_addrmatch(struct sockaddr_iso *, struct sockaddr_iso *);
int iso_netmatch(struct sockaddr_iso *, struct sockaddr_iso *);
u_long iso_hashchar(caddr_t, int);
int iso_hash(struct sockaddr_iso *, struct afhash *);
int iso_netof(struct iso_addr *, caddr_t);
int iso_control(struct socket *, u_long, caddr_t, struct ifnet *);
void iso_ifscrub(struct ifnet *, struct iso_ifaddr *);
int iso_ifinit(struct ifnet *, struct iso_ifaddr *, struct sockaddr_iso *, int);
struct ifaddr *iso_ifwithidi(struct sockaddr *);
int iso_ck_addr(struct iso_addr *);
int iso_eqtype(struct iso_addr *, struct iso_addr *);
struct iso_ifaddr *iso_localifa(struct sockaddr_iso *);
int iso_nlctloutput(int, int, caddr_t, struct mbuf *);
void dump_isoaddr(struct sockaddr_iso *);

/* iso_chksum.c */
int iso_check_csum(struct mbuf *, int);
void iso_gen_csum(struct mbuf *, int, int);
int m_datalen(struct mbuf *);
int m_compress(struct mbuf *, struct mbuf **);

/* iso_snpac.c */
void llc_rtrequest(int, struct rtentry *, struct rt_addrinfo *);
void iso_setmcasts(struct ifnet *, int);
int iso_snparesolve(struct ifnet *, struct sockaddr_iso *,
			 caddr_t, int *);
void snpac_free(struct llinfo_llc *);
int snpac_add(struct ifnet *, struct iso_addr *, caddr_t, int,
		   u_short, int);
int snpac_ioctl(struct socket *, u_long, caddr_t);
void snpac_logdefis(struct rtentry *);
void snpac_age(void *);
int snpac_ownmulti(caddr_t, u_int);
void snpac_flushifp(struct ifnet *);
void snpac_rtrequest(int, struct iso_addr *, struct iso_addr *,
			 struct iso_addr *, int, struct rtentry **);
void snpac_addrt(struct ifnet *, struct iso_addr *, struct iso_addr *,
	             struct iso_addr *);
#endif /* _KERNEL */
#endif /* _NETISO_ISO_VAR_H_ */
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: iso_var.h,v 1.5 2002/03/15 01:20:04 millert Exp $	*/
@


1.5
log
@Cosmetic changes only, primarily making comments line up nicely after the
__P removal.
@
text
@d1 1
a1 1
/*	$OpenBSD: iso_var.h,v 1.4 2002/03/14 01:27:12 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: iso_var.h,v 1.3 2001/01/19 06:37:38 itojun Exp $	*/
d147 1
a147 2
int iso_ifinit(struct ifnet *, struct iso_ifaddr *, struct sockaddr_iso *,
		    int );
@


1.3
log
@pull post-4.4BSD change to sys/net/route.c from BSD/OS 4.2 (UCB copyrighted).

have sys/net/route.c:rtrequest1(), which takes rt_addrinfo * as the argument.
pass rt_addrinfo all the way down to rtrequest, and ifa->ifa_rtrequest.
3rd arg of ifa->ifa_rtrequest is now rt_addrinfo * instead of sockaddr *
(almost noone is using it anyways).

benefit: the follwoing command now works.  previously we need two route(8)
invocations, "add" then "change".
# route add -inet6 default ::1 -ifp gif0

remove unsafe typecast in rtrequest(), from rtentry * to sockaddr *.  it was
introduced by 4.3BSD-reno and never corrected.

XXX is eon_rtrequest() change correct regarding to 3rd arg?
eon_rtrequest() and rtrequest() were incorrect since 4.3BSD-reno,
so i do not have correct answer in the source code.
someone with more clue about netiso-over-ip, please help.
@
text
@d1 1
a1 1
/*	$OpenBSD: iso_var.h,v 1.2 1996/03/04 10:35:43 mickey Exp $	*/
d139 16
a154 16
int iso_addrmatch1 __P((struct iso_addr *, struct iso_addr *));
int iso_addrmatch __P((struct sockaddr_iso *, struct sockaddr_iso *));
int iso_netmatch __P((struct sockaddr_iso *, struct sockaddr_iso *));
u_long iso_hashchar __P((caddr_t, int));
int iso_hash __P((struct sockaddr_iso *, struct afhash *));
int iso_netof __P((struct iso_addr *, caddr_t));
int iso_control __P((struct socket *, u_long, caddr_t, struct ifnet *));
void iso_ifscrub __P((struct ifnet *, struct iso_ifaddr *));
int iso_ifinit __P((struct ifnet *, struct iso_ifaddr *, struct sockaddr_iso *,
		    int ));
struct ifaddr *iso_ifwithidi __P((struct sockaddr *));
int iso_ck_addr __P((struct iso_addr *));
int iso_eqtype __P((struct iso_addr *, struct iso_addr *));
struct iso_ifaddr *iso_localifa __P((struct sockaddr_iso *));
int iso_nlctloutput __P((int, int, caddr_t, struct mbuf *));
void dump_isoaddr __P((struct sockaddr_iso *));
d157 4
a160 4
int iso_check_csum __P((struct mbuf *, int));
void iso_gen_csum __P((struct mbuf *, int, int));
int m_datalen __P((struct mbuf *));
int m_compress __P((struct mbuf *, struct mbuf **));
d163 16
a178 16
void llc_rtrequest __P((int, struct rtentry *, struct rt_addrinfo *));
void iso_setmcasts __P((struct ifnet *, int));
int iso_snparesolve __P((struct ifnet *, struct sockaddr_iso *,
			 caddr_t, int *));
void snpac_free __P((struct llinfo_llc *));
int snpac_add __P((struct ifnet *, struct iso_addr *, caddr_t, int,
		   u_short, int));
int snpac_ioctl __P((struct socket *, u_long, caddr_t));
void snpac_logdefis __P((struct rtentry *));
void snpac_age __P((void *));
int snpac_ownmulti __P((caddr_t, u_int));
void snpac_flushifp __P((struct ifnet *));
void snpac_rtrequest __P((int, struct iso_addr *, struct iso_addr *,
			 struct iso_addr *, int, struct rtentry **));
void snpac_addrt __P((struct ifnet *, struct iso_addr *, struct iso_addr *,
	             struct iso_addr *));
@


1.3.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: iso_var.h,v 1.3 2001/01/19 06:37:38 itojun Exp $	*/
d139 16
a154 15
int iso_addrmatch1(struct iso_addr *, struct iso_addr *);
int iso_addrmatch(struct sockaddr_iso *, struct sockaddr_iso *);
int iso_netmatch(struct sockaddr_iso *, struct sockaddr_iso *);
u_long iso_hashchar(caddr_t, int);
int iso_hash(struct sockaddr_iso *, struct afhash *);
int iso_netof(struct iso_addr *, caddr_t);
int iso_control(struct socket *, u_long, caddr_t, struct ifnet *);
void iso_ifscrub(struct ifnet *, struct iso_ifaddr *);
int iso_ifinit(struct ifnet *, struct iso_ifaddr *, struct sockaddr_iso *, int);
struct ifaddr *iso_ifwithidi(struct sockaddr *);
int iso_ck_addr(struct iso_addr *);
int iso_eqtype(struct iso_addr *, struct iso_addr *);
struct iso_ifaddr *iso_localifa(struct sockaddr_iso *);
int iso_nlctloutput(int, int, caddr_t, struct mbuf *);
void dump_isoaddr(struct sockaddr_iso *);
d157 4
a160 4
int iso_check_csum(struct mbuf *, int);
void iso_gen_csum(struct mbuf *, int, int);
int m_datalen(struct mbuf *);
int m_compress(struct mbuf *, struct mbuf **);
d163 16
a178 16
void llc_rtrequest(int, struct rtentry *, struct rt_addrinfo *);
void iso_setmcasts(struct ifnet *, int);
int iso_snparesolve(struct ifnet *, struct sockaddr_iso *,
			 caddr_t, int *);
void snpac_free(struct llinfo_llc *);
int snpac_add(struct ifnet *, struct iso_addr *, caddr_t, int,
		   u_short, int);
int snpac_ioctl(struct socket *, u_long, caddr_t);
void snpac_logdefis(struct rtentry *);
void snpac_age(void *);
int snpac_ownmulti(caddr_t, u_int);
void snpac_flushifp(struct ifnet *);
void snpac_rtrequest(int, struct iso_addr *, struct iso_addr *,
			 struct iso_addr *, int, struct rtentry **);
void snpac_addrt(struct ifnet *, struct iso_addr *, struct iso_addr *,
	             struct iso_addr *);
@


1.2
log
@Initial commit of NetBSD 960217 netiso.
all the rest is the fixes to the import by Niklas.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d163 1
a163 1
void llc_rtrequest __P((int, struct rtentry *, struct sockaddr *));
@


1.2.16.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: iso_var.h,v 1.3 2001/01/19 06:37:38 itojun Exp $	*/
d163 1
a163 1
void llc_rtrequest __P((int, struct rtentry *, struct rt_addrinfo *));
@


1.2.16.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d139 16
a154 15
int iso_addrmatch1(struct iso_addr *, struct iso_addr *);
int iso_addrmatch(struct sockaddr_iso *, struct sockaddr_iso *);
int iso_netmatch(struct sockaddr_iso *, struct sockaddr_iso *);
u_long iso_hashchar(caddr_t, int);
int iso_hash(struct sockaddr_iso *, struct afhash *);
int iso_netof(struct iso_addr *, caddr_t);
int iso_control(struct socket *, u_long, caddr_t, struct ifnet *);
void iso_ifscrub(struct ifnet *, struct iso_ifaddr *);
int iso_ifinit(struct ifnet *, struct iso_ifaddr *, struct sockaddr_iso *, int);
struct ifaddr *iso_ifwithidi(struct sockaddr *);
int iso_ck_addr(struct iso_addr *);
int iso_eqtype(struct iso_addr *, struct iso_addr *);
struct iso_ifaddr *iso_localifa(struct sockaddr_iso *);
int iso_nlctloutput(int, int, caddr_t, struct mbuf *);
void dump_isoaddr(struct sockaddr_iso *);
d157 4
a160 4
int iso_check_csum(struct mbuf *, int);
void iso_gen_csum(struct mbuf *, int, int);
int m_datalen(struct mbuf *);
int m_compress(struct mbuf *, struct mbuf **);
d163 16
a178 16
void llc_rtrequest(int, struct rtentry *, struct rt_addrinfo *);
void iso_setmcasts(struct ifnet *, int);
int iso_snparesolve(struct ifnet *, struct sockaddr_iso *,
			 caddr_t, int *);
void snpac_free(struct llinfo_llc *);
int snpac_add(struct ifnet *, struct iso_addr *, caddr_t, int,
		   u_short, int);
int snpac_ioctl(struct socket *, u_long, caddr_t);
void snpac_logdefis(struct rtentry *);
void snpac_age(void *);
int snpac_ownmulti(caddr_t, u_int);
void snpac_flushifp(struct ifnet *);
void snpac_rtrequest(int, struct iso_addr *, struct iso_addr *,
			 struct iso_addr *, int, struct rtentry **);
void snpac_addrt(struct ifnet *, struct iso_addr *, struct iso_addr *,
	             struct iso_addr *);
@


1.2.16.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: iso_var.h,v 1.2.16.2 2002/03/28 14:57:37 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: iso_var.h,v 1.7 1995/06/13 07:13:35 mycroft Exp $	*/
d44 2
a45 2
Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
d47 1
a47 1
both that copyright notice and this permission notice appear in 
d50 1
a50 1
software without specific, written prior permission.  
d61 2
a62 1

d68 1
a68 1
 *	Interface address, iso version. One of these structures is 
d74 1
a74 1
	struct ifaddr		ia_ifa;		/* protocol-independent info */
d77 4
a80 4
	int					ia_snpaoffset;
	TAILQ_ENTRY(iso_ifaddr) ia_list;	/* list of iso addresses */
	struct	sockaddr_iso ia_addr;	/* reserve space for interface name */
	struct	sockaddr_iso ia_dstaddr; /* reserve space for broadcast addr */
d82 2
a83 1
	struct	sockaddr_iso ia_sockmask; /* reserve space for general netmask */
d86 6
a91 6
struct	iso_aliasreq {
	char	ifra_name[IFNAMSIZ];		/* if name, e.g. "en0" */
	struct	sockaddr_iso ifra_addr;
	struct	sockaddr_iso ifra_dstaddr;
	struct	sockaddr_iso ifra_mask;
	int	ifra_snpaoffset;
d94 3
a96 3
struct	iso_ifreq {
	char	ifr_name[IFNAMSIZ];		/* if name, e.g. "en0" */
	struct	sockaddr_iso ifr_Addr;
d106 1
a106 1
#define	SIOCAIFADDR_ISO	_IOW('i',26, struct iso_aliasreq)/* add/chg IFalias */
d108 2
a109 2
#define	SIOCGIFDSTADDR_ISO _IOWR('i',34, struct iso_ifreq) /* get dst address */
#define	SIOCGIFNETMASK_ISO _IOWR('i',37, struct iso_ifreq) /* get dst address */
d117 6
a122 6
	char dst[6];
	char src[6];
	char len[2];
	char llc_dsap;
	char llc_ssap;
	char llc_ui_byte;
d126 4
a129 4
	struct	ifnet *snh_ifp;
	char	snh_dhost[6];
	char	snh_shost[6];
	short	snh_flags;
d133 46
a178 3
struct iso_ifaddrhead	iso_ifaddr;	/* linked list of iso address ifaces */
struct iso_ifaddr	*iso_localifa();	/* linked list of iso address ifaces */
struct ifqueue 		clnlintrq;		/* clnl packet input queue */
d180 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
