head	1.5;
access;
symbols
	OPENBSD_4_9:1.4.0.12
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.10
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.8
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2011.07.04.20.35.35;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2008.04.08.14.46.45;	author thib;	state Exp;
branches;
next	1.3;

1.3
date	2007.12.09.20.54.01;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.02.20.49.08;	author pedro;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.02.20.25.09;	author pedro;	state Exp;
branches;
next	;


desc
@@


1.5
log
@move the specfs code to a place people can see it; ok guenther thib krw
@
text
@/*	$OpenBSD: spec_subr.c,v 1.4 2008/04/08 14:46:45 thib Exp $	*/

/*
 * Copyright (c) 2006 Pedro Martelletto <pedro@@ambientworks.net>
 * Copyright (c) 2006 Thordur Bjornsson <thib@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/vnode.h>
#include <sys/malloc.h>
#include <sys/conf.h>
#include <sys/stat.h>

#include <miscfs/specfs/specdev.h>

#ifdef	CLONE_DEBUG
#define	DNPRINTF(m...)	do { printf(m);  } while (0)
#else
#define	DNPRINTF(m...)	/* nothing */
#endif

int
spec_open_clone(struct vop_open_args *ap)
{
	struct vnode *cvp, *vp = ap->a_vp;
	struct cloneinfo *cip;
	int error, i;

	DNPRINTF("cloning vnode\n");

	for (i = 1; i < sizeof(vp->v_specbitmap) * NBBY; i++)
		if (isclr(vp->v_specbitmap, i)) {
			setbit(vp->v_specbitmap, i);
			break;
		}

	if (i == sizeof(vp->v_specbitmap) * NBBY)
		return (EBUSY); /* too many open instances */

	error = cdevvp(makedev(major(vp->v_rdev), i), &cvp);
	if (error)
		return (error); /* out of vnodes */

	VOP_UNLOCK(vp, 0, ap->a_p);

	error = cdevsw[major(vp->v_rdev)].d_open(cvp->v_rdev, ap->a_mode,
	    S_IFCHR, ap->a_p);

	vn_lock(vp, LK_EXCLUSIVE | LK_RETRY, ap->a_p);

	if (error) {
		 clrbit(vp->v_specbitmap, i);
		 return (error); /* device open failed */
	}

	cvp->v_flag |= VCLONE;

	cip = malloc(sizeof(struct cloneinfo), M_TEMP, M_WAITOK);
	cip->ci_data = vp->v_data;
	cip->ci_vp = cvp;

	cvp->v_specparent = vp;
	vp->v_flag |= VCLONED;
	vp->v_data = cip;

	DNPRINTF("clone of vnode %p is vnode %p\n", vp, cvp);

	return (0); /* device cloned */
}

int
spec_close_clone(struct vop_close_args *ap)
{
	struct vnode *pvp, *vp = ap->a_vp;
	int error;

	error = cdevsw[major(vp->v_rdev)].d_close(vp->v_rdev, ap->a_fflag,
	    S_IFCHR, ap->a_p);
	if (error)
		return (error); /* device close failed */

	pvp = vp->v_specparent; /* get parent device */
	clrbit(pvp->v_specbitmap, minor(vp->v_rdev));
	vrele(pvp);

	return (0); /* clone closed */
}
@


1.4
log
@bring cloning up too date; Munge it so it will work with atleast
oga@@'s upcoming DRM changes and too some degree ratchov@@'s audio
work. It still works for bpf's though.

Parts from ratchov@@; fstat(1) parts from Pedro Martelletto;
tested by many, ok'ed by a few;
"get going with cloning" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: spec_subr.c,v 1.3 2007/12/09 20:54:01 jmc Exp $	*/
@


1.3
log
@update pedro's email address, at his request;
@
text
@d1 1
a1 1
/*	$OpenBSD: spec_subr.c,v 1.2 2006/06/02 20:49:08 pedro Exp $	*/
d28 6
d41 2
a51 3
	printf("spec_open_clone(): cloning device (%d, %d) for pid %u\n",
	    major(vp->v_rdev), minor(vp->v_rdev), curproc->p_pid);

d68 2
d78 1
a78 2
	printf("spec_open_clone(): new minor for cloned device is %d\n",
	    minor(cvp->v_rdev));
d96 1
a96 3

	printf("spec_close_clone(): freeing minor %d of dev %d for"
	    " pid %u\n", minor(vp->v_rdev), major(vp->v_rdev), curproc->p_pid);
@


1.2
log
@Add some comments in the return endpoints
@
text
@d1 1
a1 1
/*	$OpenBSD: spec_subr.c,v 1.1 2006/06/02 20:25:09 pedro Exp $	*/
d4 1
a4 1
 * Copyright (c) 2006 Pedro Martelletto <pedro@@openbsd.org>
@


1.1
log
@Add a clonable devices implementation. Hacked along with thib@@, input
from krw@@ and toby@@, subliminal prodding from dlg@@, okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 1
a42 1
		return (EBUSY);
d60 1
a60 1
		 return (error);
d86 1
a86 1
		return (error);
d94 1
a94 1
	return (0);
@

