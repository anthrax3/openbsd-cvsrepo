head	1.6;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.3.0.10
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	SMP:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3;
locks; strict;
comment	@ * @;


1.6
date	2003.02.24.01.17.38;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2002.06.04.00.00.55;	author nordin;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.08;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.17.20.25.54;	author provos;	state Exp;
branches
	1.3.6.1
	1.3.10.1;
next	1.2;

1.2
date	2000.06.17.17.32.26;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.17.17.16.05;	author provos;	state Exp;
branches;
next	;

1.3.6.1
date	2001.05.14.22.32.56;	author niklas;	state Exp;
branches;
next	1.3.6.2;

1.3.6.2
date	2002.03.29.23.31.57;	author niklas;	state Exp;
branches;
next	1.3.6.3;

1.3.6.3
date	2003.03.28.00.00.20;	author niklas;	state dead;
branches;
next	;

1.3.10.1
date	2002.06.11.03.30.21;	author art;	state Exp;
branches;
next	1.3.10.2;

1.3.10.2
date	2003.05.19.22.36.12;	author tedu;	state dead;
branches;
next	;


desc
@@


1.6
log
@Remove tcfs until this entire licensing mess is cleaned up.  This is
ANOTHER case of a developer having ignored licenses when importing code.
@
text
@/*	$OpenBSD: tcfs.h,v 1.5 2002/06/04 00:00:55 nordin Exp $	*/
/*
 * Copyright 2000 The TCFS Project at http://tcfs.dia.unisa.it/
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the authors may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef _TCFS_H_
#define _TCFS_H_

#include <miscfs/tcfs/tcfs_mount.h>

#ifdef _KERNEL
/*
 * A cache of vnode references
 */
struct tcfs_node {
	LIST_ENTRY(tcfs_node)	tcfs_hash;	/* Hash list */
	struct vnode	        *tcfs_lowervp;	/* VREFed once */
	struct vnode		*tcfs_vnode;	/* Back pointer */
};

extern int tcfs_node_create(struct mount *mp, struct vnode *target, struct vnode **vpp, int lockit);

#define	MOUNTTOTCFSMOUNT(mp) ((struct tcfs_mount *)((mp)->mnt_data))
#define	VTOTCFS(vp) ((struct tcfs_node *)(vp)->v_data)
#define	TCFSTOV(xp) ((xp)->tcfs_vnode)
#ifdef TCFS_DIAGNOSTIC
extern struct vnode *tcfs_checkvp(struct vnode *vp, char *fil, int lno);
#define	TCFSVPTOLOWERVP(vp) tcfs_checkvp((vp), __FILE__, __LINE__)
#else
#define	TCFSVPTOLOWERVP(vp) (VTOTCFS(vp)->tcfs_lowervp)
#endif

#define TCFS_VP2UKT(vp) ((MOUNTTOTCFSMOUNT(((vp)->v_mount)))->tcfs_uid_kt)
#define TCFS_VP2GKT(vp) ((MOUNTTOTCFSMOUNT(((vp)->v_mount)))->tcfs_gid_kt)

#define tcfs_fhtovp ((int (*)(struct mount *, struct fid *, \
	struct vnode **))eopnotsupp)
#define tcfs_vptofh ((int (*)(struct vnode *, struct fid *))eopnotsupp)

extern int (**tcfs_vnodeop_p)(void *);
extern struct vfsops tcfs_vfsops;

int tcfs_init(struct vfsconf *);

#define BLOCKSIZE       1024
#define SBLOCKSIZE         8

int     tcfs_bypass(void *);
int     tcfs_open(void *);
int     tcfs_getattr(void *);
int     tcfs_setattr(void *);
int     tcfs_inactive(void *);
int     tcfs_reclaim(void *);
int     tcfs_print(void *);
int     tcfs_strategy(void *);
int     tcfs_bwrite(void *);
int     tcfs_lock(void *);
int     tcfs_unlock(void *);
int     tcfs_islocked(void *);
int     tcfs_read(void *);
int     tcfs_readdir(void *);
int     tcfs_write(void *);
int     tcfs_create(void *);
int     tcfs_mknod(void *);
int     tcfs_mkdir(void *);
int     tcfs_link(void *);
int     tcfs_symlink(void *);
int     tcfs_rename(void *);
int     tcfs_lookup(void *);

void *tcfs_getukey(struct ucred *, struct proc *, struct vnode *);
void *tcfs_getpkey(struct ucred *, struct proc *, struct vnode *);
void *tcfs_getgkey(struct ucred *, struct proc *, struct vnode *);
int tcfs_checkukey(struct ucred *, struct proc *, struct vnode *);
int tcfs_checkpkey(struct ucred *, struct proc *, struct vnode *);
int tcfs_checkgkey(struct ucred *, struct proc *, struct vnode *);
int     tcfs_exec_cmd(struct tcfs_mount*, struct tcfs_args *);
int     tcfs_init_mp(struct tcfs_mount*, struct tcfs_args *);
int     tcfs_set_status(struct tcfs_mount *, struct tcfs_args *, int);
 
#define TCFS_CHECK_AKEY(c,p,v) (\
        tcfs_checkukey((c),(p),(v)) || \
        tcfs_checkpkey((c),(p),(v)) || \
        tcfs_checkgkey((c),(p),(v)) )

#endif /* _KERNEL */
#endif /* _TCFS_H_ */
@


1.5
log
@Remove unused #define. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs.h,v 1.4 2002/03/14 01:27:08 millert Exp $	*/
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs.h,v 1.3 2000/06/17 20:25:54 provos Exp $	*/
a68 7

#define ABS(a)          ((a)>=0?(a):(-a))

/*      variabili esterne       */


/*      prototyphes             */
@


1.3
log
@some KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs.h,v 1.2 2000/06/17 17:32:26 provos Exp $	*/
d43 1
a43 1
extern int tcfs_node_create __P((struct mount *mp, struct vnode *target, struct vnode **vpp, int lockit));
d49 1
a49 1
extern struct vnode *tcfs_checkvp __P((struct vnode *vp, char *fil, int lno));
d58 3
a60 3
#define tcfs_fhtovp ((int (*) __P((struct mount *, struct fid *, \
	struct vnode **)))eopnotsupp)
#define tcfs_vptofh ((int (*) __P((struct vnode *, struct fid *)))eopnotsupp)
d62 1
a62 1
extern int (**tcfs_vnodeop_p) __P((void *));
d65 1
a65 1
int tcfs_init __P((struct vfsconf *));
d77 22
a98 22
int     tcfs_bypass __P((void *));
int     tcfs_open __P((void *));
int     tcfs_getattr __P((void *));
int     tcfs_setattr __P((void *));
int     tcfs_inactive __P((void *));
int     tcfs_reclaim __P((void *));
int     tcfs_print __P((void *));
int     tcfs_strategy __P((void *));
int     tcfs_bwrite __P((void *));
int     tcfs_lock __P((void *));
int     tcfs_unlock __P((void *));
int     tcfs_islocked __P((void *));
int     tcfs_read __P((void *));
int     tcfs_readdir __P((void *));
int     tcfs_write __P((void *));
int     tcfs_create __P((void *));
int     tcfs_mknod __P((void *));
int     tcfs_mkdir __P((void *));
int     tcfs_link __P((void *));
int     tcfs_symlink __P((void *));
int     tcfs_rename __P((void *));
int     tcfs_lookup __P((void *));
@


1.3.10.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs.h,v 1.3 2000/06/17 20:25:54 provos Exp $	*/
d43 1
a43 1
extern int tcfs_node_create(struct mount *mp, struct vnode *target, struct vnode **vpp, int lockit);
d49 1
a49 1
extern struct vnode *tcfs_checkvp(struct vnode *vp, char *fil, int lno);
d58 3
a60 3
#define tcfs_fhtovp ((int (*)(struct mount *, struct fid *, \
	struct vnode **))eopnotsupp)
#define tcfs_vptofh ((int (*)(struct vnode *, struct fid *))eopnotsupp)
d62 1
a62 1
extern int (**tcfs_vnodeop_p)(void *);
d65 1
a65 1
int tcfs_init(struct vfsconf *);
d70 29
a98 22
int     tcfs_bypass(void *);
int     tcfs_open(void *);
int     tcfs_getattr(void *);
int     tcfs_setattr(void *);
int     tcfs_inactive(void *);
int     tcfs_reclaim(void *);
int     tcfs_print(void *);
int     tcfs_strategy(void *);
int     tcfs_bwrite(void *);
int     tcfs_lock(void *);
int     tcfs_unlock(void *);
int     tcfs_islocked(void *);
int     tcfs_read(void *);
int     tcfs_readdir(void *);
int     tcfs_write(void *);
int     tcfs_create(void *);
int     tcfs_mknod(void *);
int     tcfs_mkdir(void *);
int     tcfs_link(void *);
int     tcfs_symlink(void *);
int     tcfs_rename(void *);
int     tcfs_lookup(void *);
@


1.3.10.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs.h,v 1.3.10.1 2002/06/11 03:30:21 art Exp $	*/
@


1.3.6.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs.h,v 1.3 2000/06/17 20:25:54 provos Exp $	*/
@


1.3.6.2
log
@tcfs got skipped by cvs for some reason
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs.h,v 1.3.6.1 2001/05/14 22:32:56 niklas Exp $	*/
d43 1
a43 1
extern int tcfs_node_create(struct mount *mp, struct vnode *target, struct vnode **vpp, int lockit);
d49 1
a49 1
extern struct vnode *tcfs_checkvp(struct vnode *vp, char *fil, int lno);
d58 3
a60 3
#define tcfs_fhtovp ((int (*)(struct mount *, struct fid *, \
	struct vnode **))eopnotsupp)
#define tcfs_vptofh ((int (*)(struct vnode *, struct fid *))eopnotsupp)
d62 1
a62 1
extern int (**tcfs_vnodeop_p)(void *);
d65 1
a65 1
int tcfs_init(struct vfsconf *);
d77 22
a98 22
int     tcfs_bypass(void *);
int     tcfs_open(void *);
int     tcfs_getattr(void *);
int     tcfs_setattr(void *);
int     tcfs_inactive(void *);
int     tcfs_reclaim(void *);
int     tcfs_print(void *);
int     tcfs_strategy(void *);
int     tcfs_bwrite(void *);
int     tcfs_lock(void *);
int     tcfs_unlock(void *);
int     tcfs_islocked(void *);
int     tcfs_read(void *);
int     tcfs_readdir(void *);
int     tcfs_write(void *);
int     tcfs_create(void *);
int     tcfs_mknod(void *);
int     tcfs_mkdir(void *);
int     tcfs_link(void *);
int     tcfs_symlink(void *);
int     tcfs_rename(void *);
int     tcfs_lookup(void *);
@


1.3.6.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs.h,v 1.3.6.2 2002/03/29 23:31:57 niklas Exp $	*/
@


1.2
log
@BSD copyright + tags
@
text
@d1 1
a1 1
/*	$OpenBSD: mbuf.h,v 1.17 2000/06/12 17:24:26 itojun Exp $	*/
d28 4
a31 3
#ifndef _TCFS_MOUNT_H_
#include "tcfs_mount.h"
#endif
d116 1
a116 2


@


1.1
log
@initial import of tcfs.
@
text
@d1 27
@

