head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.6
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.4
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.11.0.6
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.4
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.08.30.16.45.54;	author natano;	state Exp;
branches;
next	1.11;
commitid	bR1BHPSoghZ5Wk7v;

1.11
date	2015.03.14.03.38.51;	author jsg;	state Exp;
branches;
next	1.10;
commitid	p4LJxGKbi0BU2cG6;

1.10
date	2014.12.03.23.00.49;	author deraadt;	state Exp;
branches;
next	1.9;
commitid	ZqHULu3B2nYeJuZU;

1.9
date	2014.11.18.02.37.31;	author tedu;	state Exp;
branches;
next	1.8;
commitid	Z1vcFtHO8wRH0yRt;

1.8
date	2014.09.14.14.17.26;	author jsg;	state Exp;
branches;
next	1.7;
commitid	uzzBR7hz9ncd4O6G;

1.7
date	2014.07.12.18.43.52;	author tedu;	state Exp;
branches;
next	1.6;
commitid	FE3DG5cICjyI4jWx;

1.6
date	2013.10.07.18.15.21;	author syl;	state Exp;
branches;
next	1.5;

1.5
date	2013.10.07.18.11.25;	author syl;	state Exp;
branches;
next	1.4;

1.4
date	2013.10.07.18.09.58;	author syl;	state Exp;
branches;
next	1.3;

1.3
date	2013.10.07.18.04.53;	author syl;	state Exp;
branches;
next	1.2;

1.2
date	2013.08.10.00.12.45;	author syl;	state Exp;
branches;
next	1.1;

1.1
date	2013.06.03.15.50.56;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Use struct stat for storing attributes in fusebufs, because using struct
vattr in userspace is suboptimal as some related helpers are not
available, e.g. VATTR_NULL() and IFTOVT(). The conversion is now done in
the kernel where it belongs. As a side effect the <sys/vnode.h> include
can be removed from libfuse.

tweaks and ok guenther
@
text
@/* $OpenBSD: fusebuf.c,v 1.11 2015/03/14 03:38:51 jsg Exp $ */
/*
 * Copyright (c) 2012-2013 Sylvestre Gallon <ccna.syl@@gmail.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/kernel.h>
#include <sys/malloc.h>
#include <sys/pool.h>
#include <sys/stat.h>
#include <sys/statvfs.h>
#include <sys/systm.h>
#include <sys/vnode.h>
#include <sys/fusebuf.h>

#include "fusefs_node.h"
#include "fusefs.h"

struct fusebuf *
fb_setup(size_t len, ino_t ino, int op, struct proc *p)
{
	struct fusebuf *fbuf;

	fbuf = pool_get(&fusefs_fbuf_pool, PR_WAITOK | PR_ZERO);
	fbuf->fb_len = len;
	fbuf->fb_err = 0;
	arc4random_buf(&fbuf->fb_uuid, sizeof fbuf->fb_uuid);
	fbuf->fb_type = op;
	fbuf->fb_ino = ino;
	if (len == 0)
		fbuf->fb_dat = NULL;
	else
		fbuf->fb_dat = (uint8_t *)malloc(len, M_FUSEFS,
		    M_WAITOK | M_ZERO);

	return (fbuf);
}

int
fb_queue(dev_t dev, struct fusebuf *fbuf)
{
	int error = 0;

	fuse_device_queue_fbuf(dev, fbuf);

	if ((error = tsleep(fbuf, PWAIT, "fuse msg", TSLEEP_TIMEOUT * hz))) {
		fuse_device_cleanup(dev, fbuf);
		return (error);
	}

	return (fbuf->fb_err);
}

void
fb_delete(struct fusebuf *fbuf)
{
	if (fbuf != NULL) {
		free(fbuf->fb_dat, M_FUSEFS, 0);
		pool_put(&fusefs_fbuf_pool, fbuf);
	}
}
@


1.11
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: fusebuf.c,v 1.10 2014/12/03 23:00:49 deraadt Exp $ */
d22 1
@


1.10
log
@use arc4random_buf() instead of (r << 32) | r; discussed with matthew
@
text
@d1 1
a1 1
/* $OpenBSD: fusebuf.c,v 1.9 2014/11/18 02:37:31 tedu Exp $ */
a20 1
#include <sys/mount.h>
@


1.9
log
@move arc4random prototype to systm.h. more appropriate for most code
to include that than rdnvar.h. ok deraadt dlg
@
text
@d1 1
a1 1
/* $OpenBSD: fusebuf.c,v 1.8 2014/09/14 14:17:26 jsg Exp $ */
d39 1
a39 1
	fbuf->fb_uuid = ((uint64_t)arc4random() << 32 | arc4random());
@


1.8
log
@remove uneeded proc.h includes
ok mpi@@ kspillner@@
@
text
@d1 1
a1 1
/* $OpenBSD: fusebuf.c,v 1.7 2014/07/12 18:43:52 tedu Exp $ */
a26 2

#include <dev/rndvar.h>
@


1.7
log
@add a size argument to free. will be used soon, but for now default to 0.
after discussions with beck deraadt kettenis.
@
text
@d1 1
a1 1
/* $OpenBSD: fusebuf.c,v 1.6 2013/10/07 18:15:21 syl Exp $ */
a22 1
#include <sys/proc.h>
@


1.6
log
@Introduce fb_delete() helper and use it in FUSE code.
@
text
@d1 1
a1 1
/* $OpenBSD: fusebuf.c,v 1.5 2013/10/07 18:11:25 syl Exp $ */
d73 1
a73 1
		free(fbuf->fb_dat, M_FUSEFS);
@


1.5
log
@Use full 64-bit UUIDs in FUSE.

Thanks to Pedro Martelletto.
@
text
@d1 1
a1 1
/* $OpenBSD: fusebuf.c,v 1.4 2013/10/07 18:09:58 syl Exp $ */
d20 1
d67 9
@


1.4
log
@Allocate fb_dat in fb_setup(9)
@
text
@d1 1
a1 1
/* $OpenBSD: fusebuf.c,v 1.3 2013/10/07 18:04:53 syl Exp $ */
d41 1
a41 1
	fbuf->fb_uuid = arc4random();
@


1.3
log
@Rework fuseread() and fusewrite().
@
text
@d1 1
a1 1
/* $OpenBSD: fusebuf.c,v 1.2 2013/08/10 00:12:45 syl Exp $ */
d44 5
@


1.2
log
@Remove debug printfs.
@
text
@d1 1
a1 1
/* $OpenBSD: fusebuf.c,v 1.1 2013/06/03 15:50:56 tedu Exp $ */
a43 1
	fbuf->fb_resid = -1;
@


1.1
log
@add a bunch of files for ISC-licensed FUSE support. ok beck deraadt
from Sylvestre Gallon ccna.syl gmail.com. Many thanks to Sylvestre for
all the hard work.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a32 6
#ifdef	FUSE_DEBUG
#define	DPRINTF(fmt, arg...)	printf("fuse ipc: " fmt, ##arg)
#else
#define	DPRINTF(fmt, arg...)
#endif

a44 2

	DPRINTF("create unique %lu\n", fbuf->fb_uuid);
@

