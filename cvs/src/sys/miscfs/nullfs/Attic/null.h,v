head	1.15;
access;
symbols
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.11
	UBC:1.10.0.18
	UBC_BASE:1.10
	OPENBSD_3_0:1.10.0.16
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.14
	OPENBSD_2_8:1.10.0.12
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.10
	OPENBSD_2_7_BASE:1.10
	SMP:1.10.0.8
	SMP_BASE:1.10
	kame_19991208:1.10
	OPENBSD_2_6:1.10.0.6
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.4
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.2
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.9.0.2
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2005.05.26.00.38.50;	author pedro;	state dead;
branches;
next	1.14;

1.14
date	2003.08.14.07.46.39;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.02.23.28.10;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2003.05.12.21.00.39;	author tedu;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.14.01.27.08;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	98.08.06.19.34.38;	author csapuntz;	state Exp;
branches
	1.10.8.1
	1.10.18.1;
next	1.9;

1.9
date	98.03.01.17.18.01;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	98.03.01.17.01.24;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	97.11.06.05.58.39;	author csapuntz;	state Exp;
branches;
next	1.6;

1.6
date	97.10.06.20.20.28;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.10.06.15.19.06;	author csapuntz;	state Exp;
branches;
next	1.4;

1.4
date	97.04.10.17.23.14;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.05.22.12.04.35;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.02.27.07.58.01;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.00;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.00;	author deraadt;	state Exp;
branches;
next	;

1.10.8.1
date	2002.03.28.15.02.00;	author niklas;	state Exp;
branches;
next	1.10.8.2;

1.10.8.2
date	2003.05.16.00.29.43;	author niklas;	state Exp;
branches;
next	1.10.8.3;

1.10.8.3
date	2003.06.07.11.06.05;	author ho;	state Exp;
branches;
next	1.10.8.4;

1.10.8.4
date	2004.02.19.10.57.20;	author niklas;	state Exp;
branches;
next	;

1.10.18.1
date	2002.06.11.03.30.20;	author art;	state Exp;
branches;
next	1.10.18.2;

1.10.18.2
date	2003.05.19.22.35.54;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.15
log
@bye bye, rest in attic ad infinitum, amen
@
text
@/*	$OpenBSD: null.h,v 1.14 2003/08/14 07:46:39 mickey Exp $ */
/*	$NetBSD: null.h,v 1.13 2001/11/07 04:56:09 enami Exp $	*/

/*
 * Copyright (c) 1999 National Aeronautics & Space Administration
 * All rights reserved.
 *
 * This software was written by William Studenmund of the
 * Numerical Aerospace Simulation Facility, NASA Ames Research Center.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the National Aeronautics & Space Administration
 *    nor the names of its contributors may be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NATIONAL AERONAUTICS & SPACE ADMINISTRATION
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE ADMINISTRATION OR CONTRIB-
 * UTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software donated to Berkeley by
 * Jan-Simon Pendry.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: Id: lofs.h,v 1.8 1992/05/30 10:05:43 jsp Exp
 *	@@(#)null.h	8.2 (Berkeley) 1/21/94
 */

#include <miscfs/genfs/layer.h>

struct null_args {
	struct	layer_args	la;	/* generic layerfs args */
};
#define	nulla_target	la.target
#define	nulla_export	la.export

#ifdef _KERNEL
struct null_mount {
	struct	layer_mount	lm;	/* generic layerfs mount stuff */
};
#define	nullm_vfs		lm.layerm_vfs
#define	nullm_rootvp		lm.layerm_rootvp
#define	nullm_export		lm.layerm_export
#define	nullm_flags		lm.layerm_flags
#define	nullm_size		lm.layerm_size
#define	nullm_tag		lm.layerm_tag
#define	nullm_bypass		lm.layerm_bypass
#define	nullm_alloc		lm.layerm_alloc
#define	nullm_vnodeop_p		lm.layerm_vnodeop_p
#define	nullm_node_hashtbl	lm.layerm_node_hashtbl
#define	nullm_node_hash		lm.layerm_node_hash
#define	nullm_hashlock		lm.layerm_hashlock

/*
 * A cache of vnode references
 */
struct null_node {
	struct	layer_node	ln;
};
#define	null_hash	ln.layer_hash
#define	null_lowervp	ln.layer_lowervp
#define	null_vnode	ln.layer_vnode
#define	null_flags	ln.layer_flags

int	null_node_create(struct mount *, struct vnode *,
	    struct vnode **, int);

#define	MOUNTTONULLMOUNT(mp) ((struct null_mount *)((mp)->mnt_data))
#define	VTONULL(vp) ((struct null_node *)(vp)->v_data)
#define	NULLTOV(xp) ((xp)->null_vnode)
#ifdef NULLFS_DIAGNOSTIC
struct vnode *layer_checkvp(struct vnode *, char *, int);
#define	NULLVPTOLOWERVP(vp) layer_checkvp((vp), __FILE__, __LINE__)
#else
#define	NULLVPTOLOWERVP(vp) (VTONULL(vp)->null_lowervp)
#endif

extern int (**nullfs_vnodeop_p)(void *);
extern const struct vfsops nullfs_vfsops;

int nullfs_init(struct vfsconf *);

#endif /* _KERNEL */
@


1.14
log
@constify vfsops; tedu@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: null.h,v 1.13 2003/06/02 23:28:10 millert Exp $ */
@


1.13
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: null.h,v 1.12 2003/05/12 21:00:39 tedu Exp $ */
d122 1
a122 1
extern struct vfsops nullfs_vfsops;
@


1.12
log
@most of the fixes for nullfs.  use the new common layer stuff in genfs.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d52 1
a52 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.11
log
@First round of __P removal in sys
@
text
@d1 35
a35 2
/*	$OpenBSD: null.h,v 1.10 1998/08/06 19:34:38 csapuntz Exp $	*/
/*	$NetBSD: null.h,v 1.7 1996/05/17 20:53:11 gwr Exp $	*/
d76 2
d79 1
a79 1
	char		*target;	/* Target of loopback  */
d81 2
d84 1
d86 1
a86 2
	struct mount	*nullm_vfs;
	struct vnode	*nullm_rootvp;	/* Reference to root null_node */
d88 12
a100 1
#ifdef _KERNEL
d105 1
a105 3
	LIST_ENTRY(null_node)	null_hash;	/* Hash list */
	struct vnode	        *null_lowervp;	/* VREFed once */
	struct vnode		*null_vnode;	/* Back pointer */
d107 4
d112 2
a113 1
extern int null_node_create(struct mount *mp, struct vnode *target, struct vnode **vpp, int lockit);
d119 2
a120 2
extern struct vnode *null_checkvp(struct vnode *vp, char *fil, int lno);
#define	NULLVPTOLOWERVP(vp) null_checkvp((vp), __FILE__, __LINE__)
d125 2
a126 2
extern int (**null_vnodeop_p)(void *);
extern struct vfsops null_vfsops;
a128 2
int null_bypass(void *);

@


1.10
log
@

Rename vop_revoke, vn_bwrite, vop_noislocked, vop_nolock, vop_nounlock
to be vop_generic_revoke, vop_generic_bwrite, vop_generic_islocked,
vop_generic_lock and vop_generic_unlock.

Create vop_generic_abortop and propogate change to all file systems.

Fix PR/371.

Get rid of locking in NULLFS (should be mostly unnecessary now except for
forced unmounts).
@
text
@d1 1
a1 1
/*	$OpenBSD: null.h,v 1.9 1998/03/01 17:18:01 niklas Exp $	*/
d62 1
a62 1
extern int null_node_create __P((struct mount *mp, struct vnode *target, struct vnode **vpp, int lockit));
d68 1
a68 1
extern struct vnode *null_checkvp __P((struct vnode *vp, char *fil, int lno));
d74 1
a74 1
extern int (**null_vnodeop_p) __P((void *));
d77 2
a78 2
int nullfs_init __P((struct vfsconf *));
int null_bypass __P((void *));
@


1.10.18.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: null.h,v 1.10 1998/08/06 19:34:38 csapuntz Exp $	*/
d62 1
a62 1
extern int null_node_create(struct mount *mp, struct vnode *target, struct vnode **vpp, int lockit);
d68 1
a68 1
extern struct vnode *null_checkvp(struct vnode *vp, char *fil, int lno);
d74 1
a74 1
extern int (**null_vnodeop_p)(void *);
d77 2
a78 2
int nullfs_init(struct vfsconf *);
int null_bypass(void *);
@


1.10.18.2
log
@sync
@
text
@d1 2
a2 35
/*	$OpenBSD$ */
/*	$NetBSD: null.h,v 1.13 2001/11/07 04:56:09 enami Exp $	*/

/*
 * Copyright (c) 1999 National Aeronautics & Space Administration
 * All rights reserved.
 *
 * This software was written by William Studenmund of the
 * Numerical Aerospace Simulation Facility, NASA Ames Research Center.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the National Aeronautics & Space Administration
 *    nor the names of its contributors may be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NATIONAL AERONAUTICS & SPACE ADMINISTRATION
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE ADMINISTRATION OR CONTRIB-
 * UTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
a42 2
#include <miscfs/genfs/layer.h>

d44 1
a44 1
	struct	layer_args	la;	/* generic layerfs args */
a45 2
#define	nulla_target	la.target
#define	nulla_export	la.export
a46 1
#ifdef _KERNEL
d48 2
a49 1
	struct	layer_mount	lm;	/* generic layerfs mount stuff */
a50 12
#define	nullm_vfs		lm.layerm_vfs
#define	nullm_rootvp		lm.layerm_rootvp
#define	nullm_export		lm.layerm_export
#define	nullm_flags		lm.layerm_flags
#define	nullm_size		lm.layerm_size
#define	nullm_tag		lm.layerm_tag
#define	nullm_bypass		lm.layerm_bypass
#define	nullm_alloc		lm.layerm_alloc
#define	nullm_vnodeop_p		lm.layerm_vnodeop_p
#define	nullm_node_hashtbl	lm.layerm_node_hashtbl
#define	nullm_node_hash		lm.layerm_node_hash
#define	nullm_hashlock		lm.layerm_hashlock
d52 1
d57 3
a59 1
	struct	layer_node	ln;
a60 4
#define	null_hash	ln.layer_hash
#define	null_lowervp	ln.layer_lowervp
#define	null_vnode	ln.layer_vnode
#define	null_flags	ln.layer_flags
d62 1
a62 2
int	null_node_create(struct mount *, struct vnode *,
	    struct vnode **, int);
d68 2
a69 2
struct vnode *layer_checkvp(struct vnode *, char *, int);
#define	NULLVPTOLOWERVP(vp) layer_checkvp((vp), __FILE__, __LINE__)
d74 2
a75 2
extern int (**nullfs_vnodeop_p)(void *);
extern struct vfsops nullfs_vfsops;
d78 2
@


1.10.8.1
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d62 1
a62 1
extern int null_node_create(struct mount *mp, struct vnode *target, struct vnode **vpp, int lockit);
d68 1
a68 1
extern struct vnode *null_checkvp(struct vnode *vp, char *fil, int lno);
d74 1
a74 1
extern int (**null_vnodeop_p)(void *);
d77 2
a78 2
int nullfs_init(struct vfsconf *);
int null_bypass(void *);
@


1.10.8.2
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d1 2
a2 35
/*	$OpenBSD$ */
/*	$NetBSD: null.h,v 1.13 2001/11/07 04:56:09 enami Exp $	*/

/*
 * Copyright (c) 1999 National Aeronautics & Space Administration
 * All rights reserved.
 *
 * This software was written by William Studenmund of the
 * Numerical Aerospace Simulation Facility, NASA Ames Research Center.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the National Aeronautics & Space Administration
 *    nor the names of its contributors may be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NATIONAL AERONAUTICS & SPACE ADMINISTRATION
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE ADMINISTRATION OR CONTRIB-
 * UTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
a42 2
#include <miscfs/genfs/layer.h>

d44 1
a44 1
	struct	layer_args	la;	/* generic layerfs args */
a45 2
#define	nulla_target	la.target
#define	nulla_export	la.export
a46 1
#ifdef _KERNEL
d48 2
a49 1
	struct	layer_mount	lm;	/* generic layerfs mount stuff */
a50 12
#define	nullm_vfs		lm.layerm_vfs
#define	nullm_rootvp		lm.layerm_rootvp
#define	nullm_export		lm.layerm_export
#define	nullm_flags		lm.layerm_flags
#define	nullm_size		lm.layerm_size
#define	nullm_tag		lm.layerm_tag
#define	nullm_bypass		lm.layerm_bypass
#define	nullm_alloc		lm.layerm_alloc
#define	nullm_vnodeop_p		lm.layerm_vnodeop_p
#define	nullm_node_hashtbl	lm.layerm_node_hashtbl
#define	nullm_node_hash		lm.layerm_node_hash
#define	nullm_hashlock		lm.layerm_hashlock
d52 1
d57 3
a59 1
	struct	layer_node	ln;
a60 4
#define	null_hash	ln.layer_hash
#define	null_lowervp	ln.layer_lowervp
#define	null_vnode	ln.layer_vnode
#define	null_flags	ln.layer_flags
d62 1
a62 2
int	null_node_create(struct mount *, struct vnode *,
	    struct vnode **, int);
d68 2
a69 2
struct vnode *layer_checkvp(struct vnode *, char *, int);
#define	NULLVPTOLOWERVP(vp) layer_checkvp((vp), __FILE__, __LINE__)
d74 2
a75 2
extern int (**nullfs_vnodeop_p)(void *);
extern struct vfsops nullfs_vfsops;
d78 2
@


1.10.8.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: null.h,v 1.10.8.2 2003/05/16 00:29:43 niklas Exp $ */
d52 5
a56 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.10.8.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d122 1
a122 1
extern const struct vfsops nullfs_vfsops;
@


1.9
log
@Use __alpha__ and __mips__ instead of alpha & arc
@
text
@d1 1
a1 1
/*	$OpenBSD: null.h,v 1.8 1998/03/01 17:01:24 niklas Exp $	*/
a59 6
	unsigned int		null_flags;	/* locking, etc. */
#ifdef DIAGNOSTIC
	pid_t			null_pid;	/* who's locking it? */
	caddr_t			null_lockpc; /* their return addr */
	caddr_t			null_lockpc2; /* their return addr^2 */
#endif
a60 15

#if !defined(__GNUC__) || __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 5)
#define RETURN_PC(frameno) (void *)0
#else
/* Some architectures can just get the current frame's return address */
#if defined(__alpha__) || defined(__mips__)
#define RETURN_PC(frameno) (frameno ? 0 : __builtin_return_address(frameno))
#else
#define RETURN_PC(frameno) __builtin_return_address(frameno)
#endif
#endif

#define NULL_WANTED	0x01
#define NULL_LOCKED	0x02
#define NULL_LLOCK	0x04
@


1.8
log
@mips and alpha GCC does not unwind the stack beyond the current frame
@
text
@d1 1
a1 1
/*	$OpenBSD: null.h,v 1.7 1997/11/06 05:58:39 csapuntz Exp $	*/
d72 1
a72 1
#if defined(alpha) || defined(arc)
@


1.7
log
@Updates for VFS Lite 2 + soft update.
@
text
@d1 1
a1 1
/*	$OpenBSD: null.h,v 1.6 1997/10/06 20:20:28 deraadt Exp $	*/
d68 1
a68 3
/* XXX - __builtin_return_address() broken on alpha due to gcc bug */
#if defined(__alpha__) || !defined(__GNUC__) || __GNUC__ < 2 || \
	(__GNUC__ == 2 && __GNUC_MINOR__ < 5)
d71 4
d76 1
@


1.6
log
@back out vfs lite2 till after 2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: null.h,v 1.4 1997/04/10 17:23:14 millert Exp $	*/
d95 3
a97 1
void nullfs_init __P((void));
@


1.5
log
@VFS Lite2 Changes
@
text
@d95 1
a95 3
int nullfs_init __P((struct vfsconf *));
int null_bypass __P((void *));

@


1.4
log
@Don't use gcc builtin __builtin_return_address(frameno) on
alpha, it crashes the kernel.  This is a work around until
gcc is fixed.  NetBSD PR#3471 fix from Ross Harvey <ross@@teraflop.com>
@
text
@d1 1
a1 1
/*	$OpenBSD: null.h,v 1.3 1996/05/22 12:04:35 deraadt Exp $	*/
d95 3
a97 1
void nullfs_init __P((void));
@


1.3
log
@latest locking changes from jtk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d68 2
a69 1
#if !defined(__GNUC__) || __GNUC__ < 2 || \
@


1.2
log
@From NetBSD: update to 960217 sources
@
text
@d2 1
a2 1
/*	$NetBSD: null.h,v 1.5 1996/02/09 22:40:26 christos Exp $	*/
d60 6
d68 12
a79 1
extern int null_node_create __P((struct mount *mp, struct vnode *target, struct vnode **vpp));
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: null.h,v 1.4 1995/03/29 22:08:24 briggs Exp $	*/
d74 1
a74 1
extern int (**null_vnodeop_p)();
d76 3
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

