head	1.11;
access;
symbols
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.20
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.18
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.16
	OPENBSD_2_8:1.6.0.14
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.12
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.10
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.8
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2005.05.26.00.38.50;	author pedro;	state dead;
branches;
next	1.10;

1.10
date	2003.08.14.07.46.40;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.23.28.11;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.12.21.45.35;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.27.08;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.11.06.05.58.51;	author csapuntz;	state Exp;
branches
	1.6.10.1
	1.6.20.1;
next	1.5;

1.5
date	97.10.06.21.04.48;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.10.06.15.19.16;	author csapuntz;	state Exp;
branches;
next	1.3;

1.3
date	97.08.01.05.58.57;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.02.27.08.08.59;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.53.03;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.53.03;	author deraadt;	state Exp;
branches;
next	;

1.6.10.1
date	2002.03.28.15.02.01;	author niklas;	state Exp;
branches;
next	1.6.10.2;

1.6.10.2
date	2003.05.16.00.29.43;	author niklas;	state Exp;
branches;
next	1.6.10.3;

1.6.10.3
date	2003.06.07.11.06.06;	author ho;	state Exp;
branches;
next	1.6.10.4;

1.6.10.4
date	2004.02.19.10.57.20;	author niklas;	state Exp;
branches;
next	;

1.6.20.1
date	2002.06.11.03.30.21;	author art;	state Exp;
branches;
next	1.6.20.2;

1.6.20.2
date	2003.05.19.22.36.12;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.11
log
@bye bye, rest in attic ad infinitum, amen
@
text
@/*	$OpenBSD: union.h,v 1.10 2003/08/14 07:46:40 mickey Exp $	*/
/*	$NetBSD: union.h,v 1.13 2002/09/21 18:09:31 christos Exp $	*/

/*
 * Copyright (c) 1994 The Regents of the University of California.
 * Copyright (c) 1994 Jan-Simon Pendry.
 * All rights reserved.
 *
 * This code is derived from software donated to Berkeley by
 * Jan-Simon Pendry.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)union.h	8.9 (Berkeley) 12/10/94
 */

struct union_args {
	char		*target;	/* Target of loopback  */
	int		mntflags;	/* Options on the mount */
};

#define UNMNT_ABOVE	0x0001		/* Target appears below mount point */
#define UNMNT_BELOW	0x0002		/* Target appears below mount point */
#define UNMNT_REPLACE	0x0003		/* Target replaces mount point */
#define UNMNT_OPMASK	0x0003

#define UNMNT_BITS "\177\20" \
    "b\00above\0b\01below\0b\02replace"

struct union_mount {
	struct vnode	*um_uppervp;
	struct vnode	*um_lowervp;
	struct ucred	*um_cred;	/* Credentials of user calling mount */
	int		um_cmode;	/* cmask from mount process */
	int		um_op;		/* Operation mode */
};

#ifdef _KERNEL

/*
 * DEFDIRMODE is the mode bits used to create a shadow directory.
 */
#define	UN_DIRMODE	(S_IRWXU|S_IRWXG|S_IRWXO)
#define	UN_FILEMODE	(S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH)

/*
 * A cache of vnode references
 */
struct union_node {
	LIST_ENTRY(union_node)	un_cache;	/* Hash chain */
	struct vnode		*un_vnode;	/* Back pointer */
	struct vnode	        *un_uppervp;	/* overlaying object */
	struct vnode	        *un_lowervp;	/* underlying object */
	struct vnode		*un_dirvp;	/* Parent dir of uppervp */
	struct vnode		*un_pvp;	/* Parent vnode */
	char			*un_path;	/* saved component name */
	int			un_hash;	/* saved un_path hash value */
	int			un_openl;	/* # of opens on lowervp */
	unsigned int		un_flags;
	struct vnode		**un_dircache;	/* cached union stack */
	off_t			un_uppersz;	/* size of upper object */
	off_t			un_lowersz;	/* size of lower object */
#ifdef DIAGNOSTIC
	pid_t			un_pid;
#endif
};

#define UN_WANTED	0x01
#define UN_LOCKED	0x02
#define UN_ULOCK	0x04		/* Upper node is locked */
#define UN_KLOCK	0x08		/* Keep upper node locked on vput */
#define UN_CACHED	0x10		/* In union cache */
#define UN_DRAINING	0x20		/* upper node lock is draining */
#define UN_DRAINED	0x40		/* upper node lock is drained */

extern int union_allocvp(struct vnode **, struct mount *,
				struct vnode *, struct vnode *,
				struct componentname *, struct vnode *,
				struct vnode *, int);
extern int union_copyfile(struct vnode *, struct vnode *,
					struct ucred *, struct proc *);
extern int union_copyup(struct union_node *, int, struct ucred *,
				struct proc *);
extern void union_diruncache(struct union_node *);
extern int union_dowhiteout(struct union_node *, struct ucred *,
					struct proc *);
extern int union_mkshadow(struct union_mount *, struct vnode *,
				struct componentname *, struct vnode **);
extern int union_mkwhiteout(struct union_mount *, struct vnode *,
				struct componentname *, char *);
extern int union_vn_create(struct vnode **, struct union_node *,
				struct proc *);
extern int union_cn_close(struct vnode *, int, struct ucred *,
				struct proc *);
extern void union_removed_upper(struct union_node *un);
extern struct vnode *union_lowervp(struct vnode *);
extern void union_newlower(struct union_node *, struct vnode *);
extern void union_newupper(struct union_node *, struct vnode *);
extern void union_newsize(struct vnode *, off_t, off_t);

#define	MOUNTTOUNIONMOUNT(mp) ((struct union_mount *)((mp)->mnt_data))
#define	VTOUNION(vp) ((struct union_node *)(vp)->v_data)
#define	UNIONTOV(un) ((un)->un_vnode)
#define	LOWERVP(vp) (VTOUNION(vp)->un_lowervp)
#define	UPPERVP(vp) (VTOUNION(vp)->un_uppervp)
#define OTHERVP(vp) (UPPERVP(vp) ? UPPERVP(vp) : LOWERVP(vp))

extern int (**union_vnodeop_p)(void *);
extern const struct vfsops union_vfsops;

int union_init(struct vfsconf *);
int union_freevp(struct vnode *);

#endif /* _KERNEL */
@


1.10
log
@constify vfsops; tedu@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: union.h,v 1.9 2003/06/02 23:28:11 millert Exp $	*/
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: union.h,v 1.8 2003/05/12 21:45:35 tedu Exp $	*/
d131 1
a131 1
extern struct vfsops union_vfsops;
@


1.8
log
@fix up locking and some issues with union.  derived from netbsd
@
text
@d1 1
a1 1
/*	$OpenBSD: union.h,v 1.7 2002/03/14 01:27:08 millert Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.7
log
@First round of __P removal in sys
@
text
@d1 2
a2 2
/*	$OpenBSD: union.h,v 1.6 1997/11/06 05:58:51 csapuntz Exp $	*/
/*	$NetBSD: union.h,v 1.9 1996/02/09 22:41:08 christos Exp $	*/
a42 2
struct vfsconf;

d53 3
d69 2
a70 2
#define UN_DIRMODE	(S_IRWXU|S_IRWXG|S_IRWXO)
#define UN_FILEMODE	(S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH)
d99 2
@


1.6
log
@Updates for VFS Lite 2 + soft update.
@
text
@d1 1
a1 1
/*	$OpenBSD: union.h,v 1.5 1997/10/06 21:04:48 deraadt Exp $	*/
d99 1
a99 1
extern int union_allocvp __P((struct vnode **, struct mount *,
d102 21
a122 21
				struct vnode *, int));
extern int union_copyfile __P((struct vnode *, struct vnode *,
					struct ucred *, struct proc *));
extern int union_copyup __P((struct union_node *, int, struct ucred *,
				struct proc *));
extern void union_diruncache __P((struct union_node *));
extern int union_dowhiteout __P((struct union_node *, struct ucred *,
					struct proc *));
extern int union_mkshadow __P((struct union_mount *, struct vnode *,
				struct componentname *, struct vnode **));
extern int union_mkwhiteout __P((struct union_mount *, struct vnode *,
				struct componentname *, char *));
extern int union_vn_create __P((struct vnode **, struct union_node *,
				struct proc *));
extern int union_cn_close __P((struct vnode *, int, struct ucred *,
				struct proc *));
extern void union_removed_upper __P((struct union_node *un));
extern struct vnode *union_lowervp __P((struct vnode *));
extern void union_newlower __P((struct union_node *, struct vnode *));
extern void union_newupper __P((struct union_node *, struct vnode *));
extern void union_newsize __P((struct vnode *, off_t, off_t));
d131 1
a131 1
extern int (**union_vnodeop_p) __P((void *));
d134 2
a135 2
int union_init __P((struct vfsconf *));
int union_freevp __P((struct vnode *));
@


1.6.20.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: union.h,v 1.6 1997/11/06 05:58:51 csapuntz Exp $	*/
d99 1
a99 1
extern int union_allocvp(struct vnode **, struct mount *,
d102 21
a122 21
				struct vnode *, int);
extern int union_copyfile(struct vnode *, struct vnode *,
					struct ucred *, struct proc *);
extern int union_copyup(struct union_node *, int, struct ucred *,
				struct proc *);
extern void union_diruncache(struct union_node *);
extern int union_dowhiteout(struct union_node *, struct ucred *,
					struct proc *);
extern int union_mkshadow(struct union_mount *, struct vnode *,
				struct componentname *, struct vnode **);
extern int union_mkwhiteout(struct union_mount *, struct vnode *,
				struct componentname *, char *);
extern int union_vn_create(struct vnode **, struct union_node *,
				struct proc *);
extern int union_cn_close(struct vnode *, int, struct ucred *,
				struct proc *);
extern void union_removed_upper(struct union_node *un);
extern struct vnode *union_lowervp(struct vnode *);
extern void union_newlower(struct union_node *, struct vnode *);
extern void union_newupper(struct union_node *, struct vnode *);
extern void union_newsize(struct vnode *, off_t, off_t);
d131 1
a131 1
extern int (**union_vnodeop_p)(void *);
d134 2
a135 2
int union_init(struct vfsconf *);
int union_freevp(struct vnode *);
@


1.6.20.2
log
@sync
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: union.h,v 1.13 2002/09/21 18:09:31 christos Exp $	*/
d43 2
a54 3
#define UNMNT_BITS "\177\20" \
    "b\00above\0b\01below\0b\02replace"

d68 2
a69 2
#define	UN_DIRMODE	(S_IRWXU|S_IRWXG|S_IRWXO)
#define	UN_FILEMODE	(S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH)
a97 2
#define UN_DRAINING	0x20		/* upper node lock is draining */
#define UN_DRAINED	0x40		/* upper node lock is drained */
@


1.6.10.1
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d99 1
a99 1
extern int union_allocvp(struct vnode **, struct mount *,
d102 21
a122 21
				struct vnode *, int);
extern int union_copyfile(struct vnode *, struct vnode *,
					struct ucred *, struct proc *);
extern int union_copyup(struct union_node *, int, struct ucred *,
				struct proc *);
extern void union_diruncache(struct union_node *);
extern int union_dowhiteout(struct union_node *, struct ucred *,
					struct proc *);
extern int union_mkshadow(struct union_mount *, struct vnode *,
				struct componentname *, struct vnode **);
extern int union_mkwhiteout(struct union_mount *, struct vnode *,
				struct componentname *, char *);
extern int union_vn_create(struct vnode **, struct union_node *,
				struct proc *);
extern int union_cn_close(struct vnode *, int, struct ucred *,
				struct proc *);
extern void union_removed_upper(struct union_node *un);
extern struct vnode *union_lowervp(struct vnode *);
extern void union_newlower(struct union_node *, struct vnode *);
extern void union_newupper(struct union_node *, struct vnode *);
extern void union_newsize(struct vnode *, off_t, off_t);
d131 1
a131 1
extern int (**union_vnodeop_p)(void *);
d134 2
a135 2
int union_init(struct vfsconf *);
int union_freevp(struct vnode *);
@


1.6.10.2
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d2 1
a2 1
/*	$NetBSD: union.h,v 1.13 2002/09/21 18:09:31 christos Exp $	*/
d43 2
a54 3
#define UNMNT_BITS "\177\20" \
    "b\00above\0b\01below\0b\02replace"

d68 2
a69 2
#define	UN_DIRMODE	(S_IRWXU|S_IRWXG|S_IRWXO)
#define	UN_FILEMODE	(S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH)
a97 2
#define UN_DRAINING	0x20		/* upper node lock is draining */
#define UN_DRAINED	0x40		/* upper node lock is drained */
@


1.6.10.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: union.h,v 1.6.10.2 2003/05/16 00:29:43 niklas Exp $	*/
d20 5
a24 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.6.10.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d131 1
a131 1
extern const struct vfsops union_vfsops;
@


1.5
log
@back out vfs lite2 till after 2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: union.h,v 1.3 1997/08/01 05:58:57 millert Exp $	*/
d43 2
d134 1
a134 1
void union_init __P((void));
@


1.4
log
@VFS Lite2 Changes
@
text
@a42 2
struct vfsconf;

d132 1
a132 1
int union_init __P((struct vfsconf *));
@


1.3
log
@From NetBSD (mycroft):
    Eliminate bogus uses of V{READ,WRITE,EXEC}.  Use S_I[RWX]{USR,GRP,OTH}
    where appropriate.
@
text
@d1 1
a1 1
/*	$OpenBSD: union.h,v 1.2 1996/02/27 08:08:59 niklas Exp $	*/
d43 2
d134 1
a134 1
void union_init __P((void));
@


1.2
log
@From NetBSD: update to 960217 sources
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d66 2
a67 4
#define VRWXMODE (VREAD|VWRITE|VEXEC)
#define VRWMODE (VREAD|VWRITE)
#define UN_DIRMODE ((VRWXMODE)|(VRWXMODE>>3)|(VRWXMODE>>6))
#define UN_FILEMODE ((VRWMODE)|(VRWMODE>>3)|(VRWMODE>>6))
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: union.h,v 1.8 1995/05/30 18:55:28 mycroft Exp $	*/
d131 1
a131 1
extern int (**union_vnodeop_p)();
d133 4
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
