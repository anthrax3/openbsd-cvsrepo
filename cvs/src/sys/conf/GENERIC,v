head	1.244;
access;
symbols
	OPENBSD_6_1:1.241.0.4
	OPENBSD_6_1_BASE:1.241
	OPENBSD_6_0:1.229.0.4
	OPENBSD_6_0_BASE:1.229
	OPENBSD_5_9:1.224.0.2
	OPENBSD_5_9_BASE:1.224
	OPENBSD_5_8:1.219.0.4
	OPENBSD_5_8_BASE:1.219
	OPENBSD_5_7:1.215.0.2
	OPENBSD_5_7_BASE:1.215
	OPENBSD_5_6:1.210.0.4
	OPENBSD_5_6_BASE:1.210
	OPENBSD_5_5:1.207.0.4
	OPENBSD_5_5_BASE:1.207
	OPENBSD_5_4:1.197.0.2
	OPENBSD_5_4_BASE:1.197
	OPENBSD_5_3:1.193.0.2
	OPENBSD_5_3_BASE:1.193
	OPENBSD_5_2:1.188.0.2
	OPENBSD_5_2_BASE:1.188
	OPENBSD_5_1_BASE:1.185
	OPENBSD_5_1:1.185.0.2
	OPENBSD_5_0:1.182.0.2
	OPENBSD_5_0_BASE:1.182
	OPENBSD_4_9:1.171.0.2
	OPENBSD_4_9_BASE:1.171
	OPENBSD_4_8:1.162.0.2
	OPENBSD_4_8_BASE:1.162
	OPENBSD_4_7:1.152.0.2
	OPENBSD_4_7_BASE:1.152
	OPENBSD_4_6:1.145.0.4
	OPENBSD_4_6_BASE:1.145
	OPENBSD_4_5:1.143.0.2
	OPENBSD_4_5_BASE:1.143
	OPENBSD_4_4:1.141.0.2
	OPENBSD_4_4_BASE:1.141
	OPENBSD_4_3:1.139.0.2
	OPENBSD_4_3_BASE:1.139
	OPENBSD_4_2:1.134.0.2
	OPENBSD_4_2_BASE:1.134
	OPENBSD_4_1:1.125.0.4
	OPENBSD_4_1_BASE:1.125
	OPENBSD_4_0:1.125.0.2
	OPENBSD_4_0_BASE:1.125
	OPENBSD_3_9:1.123.0.2
	OPENBSD_3_9_BASE:1.123
	OPENBSD_3_8:1.119.0.2
	OPENBSD_3_8_BASE:1.119
	OPENBSD_3_7:1.113.0.2
	OPENBSD_3_7_BASE:1.113
	OPENBSD_3_6:1.109.0.2
	OPENBSD_3_6_BASE:1.109
	SMP_SYNC_A:1.107
	SMP_SYNC_B:1.107
	OPENBSD_3_5:1.103.0.2
	OPENBSD_3_5_BASE:1.103
	OPENBSD_3_4:1.95.0.2
	OPENBSD_3_4_BASE:1.95
	UBC_SYNC_A:1.95
	OPENBSD_3_3:1.93.0.2
	OPENBSD_3_3_BASE:1.93
	OPENBSD_3_2:1.91.0.2
	OPENBSD_3_2_BASE:1.91
	OPENBSD_3_1:1.86.0.2
	OPENBSD_3_1_BASE:1.86
	UBC_SYNC_B:1.91
	UBC:1.85.0.4
	UBC_BASE:1.85
	OPENBSD_3_0:1.85.0.2
	OPENBSD_3_0_BASE:1.85
	OPENBSD_2_9_BASE:1.71
	OPENBSD_2_9:1.71.0.2
	OPENBSD_2_8:1.66.0.2
	OPENBSD_2_8_BASE:1.66
	OPENBSD_2_7:1.65.0.2
	OPENBSD_2_7_BASE:1.65
	SMP:1.61.0.2
	SMP_BASE:1.61
	kame_19991208:1.58
	OPENBSD_2_6:1.57.0.2
	OPENBSD_2_6_BASE:1.57
	OPENBSD_2_5:1.47.0.2
	OPENBSD_2_5_BASE:1.47
	OPENBSD_2_4:1.35.0.2
	OPENBSD_2_4_BASE:1.35
	OPENBSD_2_3:1.27.0.2
	OPENBSD_2_3_BASE:1.27
	OPENBSD_2_2:1.25.0.2
	OPENBSD_2_2_BASE:1.25
	OPENBSD_2_1:1.15.0.2
	OPENBSD_2_1_BASE:1.15
	OPENBSD_2_0:1.11.0.2
	OPENBSD_2_0_BASE:1.11;
locks; strict;
comment	@# @;


1.244
date	2017.05.27.08.02.40;	author claudio;	state Exp;
branches;
next	1.243;
commitid	K3HTnnPNec6uTnyH;

1.243
date	2017.04.20.14.23.53;	author visa;	state Exp;
branches;
next	1.242;
commitid	fBQX1gcKQYg63kIa;

1.242
date	2017.04.08.20.53.54;	author naddy;	state Exp;
branches;
next	1.241;
commitid	5nXibhdU6hrKwqlc;

1.241
date	2017.03.29.03.11.22;	author deraadt;	state Exp;
branches;
next	1.240;
commitid	vhKfsdQBLhmIor94;

1.240
date	2017.02.21.16.08.33;	author phessler;	state Exp;
branches;
next	1.239;
commitid	D08dtpCw9D6akw3c;

1.239
date	2017.01.25.00.48.36;	author phessler;	state Exp;
branches;
next	1.238;
commitid	1Cj4DouLpNLBnglZ;

1.238
date	2017.01.17.20.35.49;	author rzalamena;	state Exp;
branches;
next	1.237;
commitid	dYr1xsNeFsQyeEUG;

1.237
date	2016.12.22.11.04.44;	author rzalamena;	state Exp;
branches;
next	1.236;
commitid	T2qzeepA7r1EGy1x;

1.236
date	2016.11.29.09.08.34;	author mpi;	state Exp;
branches;
next	1.235;
commitid	yUJbDchhkVm6F1HA;

1.235
date	2016.09.18.14.28.05;	author deraadt;	state Exp;
branches;
next	1.234;
commitid	jG8VZuxIYy3qe4Ce;

1.234
date	2016.09.16.19.13.17;	author jasper;	state Exp;
branches;
next	1.233;
commitid	aag1XqKQQN6pS0l5;

1.233
date	2016.09.04.09.22.28;	author mpi;	state Exp;
branches;
next	1.232;
commitid	jBolvsPoQ0BaYiLs;

1.232
date	2016.09.03.14.20.25;	author phessler;	state Exp;
branches;
next	1.231;
commitid	m9T2f1BYzcUNRKPY;

1.231
date	2016.09.01.10.06.32;	author goda;	state Exp;
branches;
next	1.230;
commitid	53X2QcUepPKjCjvt;

1.230
date	2016.07.26.18.27.42;	author tedu;	state Exp;
branches;
next	1.229;
commitid	HTsyuKG8gq9nP35e;

1.229
date	2016.07.25.19.52.56;	author deraadt;	state Exp;
branches;
next	1.228;
commitid	SKJd8VyGOLxZLj1g;

1.228
date	2016.07.23.14.52.39;	author tedu;	state Exp;
branches;
next	1.227;
commitid	QhJnjtITMn9PUFA3;

1.227
date	2016.04.25.19.05.09;	author tedu;	state Exp;
branches;
next	1.226;
commitid	Fg6T92pUr8Vf3k9U;

1.226
date	2016.03.24.07.18.11;	author mpi;	state Exp;
branches;
next	1.225;
commitid	sBmrPR1TjkQE7Ytk;

1.225
date	2016.02.25.20.27.16;	author deraadt;	state Exp;
branches;
next	1.224;
commitid	YkEZWTDisqDTWhf3;

1.224
date	2016.01.06.08.07.30;	author benno;	state Exp;
branches;
next	1.223;
commitid	e2685QmwLmMvm7ZH;

1.223
date	2015.12.03.12.42.03;	author goda;	state Exp;
branches;
next	1.222;
commitid	FFhJyNTOYvvsqwUi;

1.222
date	2015.10.24.10.52.05;	author reyk;	state Exp;
branches;
next	1.221;
commitid	PvSfHvj4AhI0uuuE;

1.221
date	2015.10.23.15.10.53;	author claudio;	state Exp;
branches;
next	1.220;
commitid	g17gxjQh9N9egLbB;

1.220
date	2015.08.10.20.35.36;	author sthen;	state Exp;
branches;
next	1.219;
commitid	0x9a3BXbR9OBwbps;

1.219
date	2015.07.31.00.16.53;	author benno;	state Exp;
branches;
next	1.218;
commitid	WVgbMT99WV0jUKrC;

1.218
date	2015.07.20.22.16.41;	author rzalamena;	state Exp;
branches;
next	1.217;
commitid	yaHvJbufOxtjWSFd;

1.217
date	2015.07.17.22.52.29;	author tedu;	state Exp;
branches;
next	1.216;
commitid	OOrGfFHYAn65M2qc;

1.216
date	2015.03.12.23.54.15;	author sthen;	state Exp;
branches;
next	1.215;
commitid	b9eYBB2RaqZspsjq;

1.215
date	2015.03.04.14.36.19;	author jsg;	state Exp;
branches;
next	1.214;
commitid	vWQg7Jqqsp3Qyl2H;

1.214
date	2015.01.21.02.23.14;	author guenther;	state Exp;
branches;
next	1.213;
commitid	z0tt692wWLCZ7FbG;

1.213
date	2014.10.09.03.36.32;	author tedu;	state Exp;
branches;
next	1.212;
commitid	5aim8XjT50Pph6wl;

1.212
date	2014.10.01.10.08.29;	author mpi;	state Exp;
branches;
next	1.211;
commitid	H2YI4nUd6WXupaiB;

1.211
date	2014.08.18.14.35.37;	author tedu;	state Exp;
branches;
next	1.210;
commitid	XPIDMP1szUxHmQ6u;

1.210
date	2014.07.29.12.57.08;	author deraadt;	state Exp;
branches;
next	1.209;
commitid	DLawjkzGjDKVAxZW;

1.209
date	2014.04.19.10.07.44;	author henning;	state Exp;
branches;
next	1.208;

1.208
date	2014.03.05.18.59.13;	author chris;	state Exp;
branches;
next	1.207;

1.207
date	2014.02.22.07.20.39;	author jsg;	state Exp;
branches;
next	1.206;

1.206
date	2013.12.14.23.28.02;	author espie;	state Exp;
branches;
next	1.205;

1.205
date	2013.11.01.13.54.45;	author syl;	state Exp;
branches;
next	1.204;

1.204
date	2013.10.21.12.07.47;	author reyk;	state Exp;
branches;
next	1.203;

1.203
date	2013.10.13.10.10.01;	author reyk;	state Exp;
branches;
next	1.202;

1.202
date	2013.10.01.06.57.25;	author dlg;	state Exp;
branches;
next	1.201;

1.201
date	2013.09.28.22.02.04;	author dlg;	state Exp;
branches;
next	1.200;

1.200
date	2013.08.17.10.08.34;	author bluhm;	state Exp;
branches;
next	1.199;

1.199
date	2013.08.14.05.28.04;	author guenther;	state Exp;
branches;
next	1.198;

1.198
date	2013.08.07.22.00.29;	author naddy;	state Exp;
branches;
next	1.197;

1.197
date	2013.07.11.05.50.41;	author jsg;	state Exp;
branches;
next	1.196;

1.196
date	2013.04.15.15.32.19;	author jsing;	state Exp;
branches;
next	1.195;

1.195
date	2013.03.14.11.18.37;	author mpi;	state Exp;
branches;
next	1.194;

1.194
date	2013.03.01.21.06.04;	author guenther;	state Exp;
branches;
next	1.193;

1.193
date	2013.01.31.23.30.40;	author miod;	state Exp;
branches;
next	1.192;

1.192
date	2012.09.19.17.50.17;	author yasuoka;	state Exp;
branches;
next	1.191;

1.191
date	2012.09.05.17.41.13;	author deraadt;	state Exp;
branches;
next	1.190;

1.190
date	2012.08.23.06.12.49;	author deraadt;	state Exp;
branches;
next	1.189;

1.189
date	2012.07.26.15.52.28;	author otto;	state Exp;
branches;
next	1.188;

1.188
date	2012.07.16.12.02.45;	author jasper;	state Exp;
branches;
next	1.187;

1.187
date	2012.06.21.06.49.26;	author guenther;	state Exp;
branches;
next	1.186;

1.186
date	2012.02.15.04.50.23;	author deraadt;	state Exp;
branches;
next	1.185;

1.185
date	2012.02.09.04.46.57;	author deraadt;	state Exp;
branches;
next	1.184;

1.184
date	2011.10.06.20.49.28;	author deraadt;	state Exp;
branches;
next	1.183;

1.183
date	2011.08.21.20.19.56;	author matthieu;	state Exp;
branches;
next	1.182;

1.182
date	2011.08.03.18.45.34;	author deraadt;	state Exp;
branches;
next	1.181;

1.181
date	2011.07.09.05.46.26;	author matthew;	state Exp;
branches;
next	1.180;

1.180
date	2011.07.09.00.47.18;	author henning;	state Exp;
branches;
next	1.179;

1.179
date	2011.07.08.18.45.47;	author yasuoka;	state Exp;
branches;
next	1.178;

1.178
date	2011.07.08.15.09.32;	author jsg;	state Exp;
branches;
next	1.177;

1.177
date	2011.07.04.20.43.46;	author thib;	state Exp;
branches;
next	1.176;

1.176
date	2011.07.02.15.52.25;	author thib;	state Exp;
branches;
next	1.175;

1.175
date	2011.04.06.11.17.32;	author deraadt;	state Exp;
branches;
next	1.174;

1.174
date	2011.04.05.18.51.25;	author thib;	state Exp;
branches;
next	1.173;

1.173
date	2011.04.04.12.44.10;	author deraadt;	state Exp;
branches;
next	1.172;

1.172
date	2011.03.02.01.58.56;	author deraadt;	state Exp;
branches;
next	1.171;

1.171
date	2011.02.15.07.14.45;	author deraadt;	state Exp;
branches;
next	1.170;

1.170
date	2011.01.19.21.37.03;	author thib;	state Exp;
branches;
next	1.169;

1.169
date	2011.01.07.17.50.42;	author bluhm;	state Exp;
branches;
next	1.168;

1.168
date	2010.10.18.15.01.21;	author claudio;	state Exp;
branches;
next	1.167;

1.167
date	2010.09.24.14.13.47;	author sobrado;	state Exp;
branches;
next	1.166;

1.166
date	2010.09.24.12.46.09;	author dlg;	state Exp;
branches;
next	1.165;

1.165
date	2010.09.22.13.03.48;	author claudio;	state Exp;
branches;
next	1.164;

1.164
date	2010.09.20.07.18.03;	author deraadt;	state Exp;
branches;
next	1.163;

1.163
date	2010.08.13.12.31.33;	author phessler;	state Exp;
branches;
next	1.162;

1.162
date	2010.08.08.17.18.11;	author deraadt;	state Exp;
branches;
next	1.161;

1.161
date	2010.07.21.07.13.06;	author dlg;	state Exp;
branches;
next	1.160;

1.160
date	2010.07.01.20.24.04;	author thib;	state Exp;
branches;
next	1.159;

1.159
date	2010.07.01.01.53.35;	author deraadt;	state Exp;
branches;
next	1.158;

1.158
date	2010.06.29.21.28.37;	author reyk;	state Exp;
branches;
next	1.157;

1.157
date	2010.05.26.03.26.59;	author deraadt;	state Exp;
branches;
next	1.156;

1.156
date	2010.05.07.13.16.18;	author claudio;	state Exp;
branches;
next	1.155;

1.155
date	2010.04.30.11.06.16;	author claudio;	state Exp;
branches;
next	1.154;

1.154
date	2010.03.22.21.02.57;	author kettenis;	state Exp;
branches;
next	1.153;

1.153
date	2010.03.18.21.18.22;	author otto;	state Exp;
branches;
next	1.152;

1.152
date	2010.03.07.03.55.01;	author deraadt;	state Exp;
branches;
next	1.151;

1.151
date	2010.01.11.10.29.16;	author mcbride;	state Exp;
branches;
next	1.150;

1.150
date	2009.11.09.03.16.07;	author deraadt;	state Exp;
branches;
next	1.149;

1.149
date	2009.08.26.00.37.17;	author thib;	state Exp;
branches;
next	1.148;

1.148
date	2009.08.25.16.16.34;	author jsg;	state Exp;
branches;
next	1.147;

1.147
date	2009.08.13.15.04.20;	author dlg;	state Exp;
branches;
next	1.146;

1.146
date	2009.08.09.12.47.23;	author dlg;	state Exp;
branches;
next	1.145;

1.145
date	2009.06.03.14.45.54;	author jj;	state Exp;
branches;
next	1.144;

1.144
date	2009.05.06.18.21.23;	author stevesk;	state Exp;
branches;
next	1.143;

1.143
date	2008.11.02.01.05.25;	author pedro;	state Exp;
branches;
next	1.142;

1.142
date	2008.09.09.14.04.09;	author henning;	state Exp;
branches;
next	1.141;

1.141
date	2008.07.28.08.29.50;	author jmc;	state Exp;
branches;
next	1.140;

1.140
date	2008.03.16.19.42.57;	author otto;	state Exp;
branches;
next	1.139;

1.139
date	2008.01.05.17.33.28;	author mbalmer;	state Exp;
branches;
next	1.138;

1.138
date	2007.11.28.12.25.39;	author deraadt;	state Exp;
branches;
next	1.137;

1.137
date	2007.11.27.17.23.23;	author deraadt;	state Exp;
branches;
next	1.136;

1.136
date	2007.11.25.16.14.10;	author marco;	state Exp;
branches;
next	1.135;

1.135
date	2007.11.25.10.18.25;	author deraadt;	state Exp;
branches;
next	1.134;

1.134
date	2007.06.15.23.01.42;	author deraadt;	state Exp;
branches;
next	1.133;

1.133
date	2007.06.05.08.08.46;	author henning;	state Exp;
branches;
next	1.132;

1.132
date	2007.06.02.01.58.17;	author marco;	state Exp;
branches;
next	1.131;

1.131
date	2007.05.28.22.26.03;	author todd;	state Exp;
branches;
next	1.130;

1.130
date	2007.05.27.01.50.37;	author todd;	state Exp;
branches;
next	1.129;

1.129
date	2007.05.26.19.54.24;	author todd;	state Exp;
branches;
next	1.128;

1.128
date	2007.04.30.18.46.32;	author pedro;	state Exp;
branches;
next	1.127;

1.127
date	2007.04.17.15.16.12;	author millert;	state Exp;
branches;
next	1.126;

1.126
date	2007.03.19.14.33.28;	author dlg;	state Exp;
branches;
next	1.125;

1.125
date	2006.08.03.16.13.24;	author mbalmer;	state Exp;
branches;
next	1.124;

1.124
date	2006.06.14.06.18.55;	author mbalmer;	state Exp;
branches;
next	1.123;

1.123
date	2005.12.12.20.39.36;	author miod;	state Exp;
branches;
next	1.122;

1.122
date	2005.12.06.20.18.57;	author pedro;	state Exp;
branches;
next	1.121;

1.121
date	2005.11.24.12.08.16;	author pedro;	state Exp;
branches;
next	1.120;

1.120
date	2005.10.05.17.32.22;	author norby;	state Exp;
branches;
next	1.119;

1.119
date	2005.06.08.04.52.45;	author henning;	state Exp;
branches;
next	1.118;

1.118
date	2005.06.07.02.48.21;	author henning;	state Exp;
branches;
next	1.117;

1.117
date	2005.05.26.00.33.45;	author pedro;	state Exp;
branches;
next	1.116;

1.116
date	2005.05.24.02.45.17;	author reyk;	state Exp;
branches;
next	1.115;

1.115
date	2005.05.22.21.15.18;	author pedro;	state Exp;
branches;
next	1.114;

1.114
date	2005.03.30.07.41.30;	author deraadt;	state Exp;
branches;
next	1.113;

1.113
date	2005.01.14.14.51.27;	author mcbride;	state Exp;
branches;
next	1.112;

1.112
date	2004.11.28.23.39.45;	author canacar;	state Exp;
branches;
next	1.111;

1.111
date	2004.11.24.18.53.15;	author deraadt;	state Exp;
branches;
next	1.110;

1.110
date	2004.11.24.00.23.15;	author deraadt;	state Exp;
branches;
next	1.109;

1.109
date	2004.07.31.21.27.31;	author brad;	state Exp;
branches;
next	1.108;

1.108
date	2004.07.15.12.11.36;	author henning;	state Exp;
branches;
next	1.107;

1.107
date	2004.05.28.08.16.23;	author grange;	state Exp;
branches;
next	1.106;

1.106
date	2004.05.27.20.48.46;	author tedu;	state Exp;
branches;
next	1.105;

1.105
date	2004.05.03.17.41.22;	author millert;	state Exp;
branches;
next	1.104;

1.104
date	2004.04.10.08.33.54;	author mcbride;	state Exp;
branches;
next	1.103;

1.103
date	2004.03.02.01.13.13;	author deraadt;	state Exp;
branches;
next	1.102;

1.102
date	2004.02.10.21.20.17;	author millert;	state Exp;
branches;
next	1.101;

1.101
date	2004.02.10.01.30.13;	author millert;	state Exp;
branches;
next	1.100;

1.100
date	2004.01.26.17.18.18;	author deraadt;	state Exp;
branches;
next	1.99;

1.99
date	2004.01.18.21.46.53;	author beck;	state Exp;
branches;
next	1.98;

1.98
date	2004.01.07.20.54.35;	author tedu;	state Exp;
branches;
next	1.97;

1.97
date	2003.10.21.22.09.30;	author deraadt;	state Exp;
branches;
next	1.96;

1.96
date	2003.10.17.21.04.58;	author mcbride;	state Exp;
branches;
next	1.95;

1.95
date	2003.05.14.14.24.43;	author itojun;	state Exp;
branches;
next	1.94;

1.94
date	2003.05.13.06.06.39;	author tedu;	state Exp;
branches;
next	1.93;

1.93
date	2003.02.28.21.29.08;	author tedu;	state Exp;
branches;
next	1.92;

1.92
date	2002.11.29.18.25.23;	author mickey;	state Exp;
branches;
next	1.91;

1.91
date	2002.09.26.21.44.37;	author deraadt;	state Exp;
branches;
next	1.90;

1.90
date	2002.09.23.04.37.33;	author deraadt;	state Exp;
branches;
next	1.89;

1.89
date	2002.07.06.19.14.20;	author nordin;	state Exp;
branches;
next	1.88;

1.88
date	2002.05.16.21.28.16;	author provos;	state Exp;
branches;
next	1.87;

1.87
date	2002.05.16.18.54.21;	author deraadt;	state Exp;
branches;
next	1.86;

1.86
date	2002.03.14.00.42.25;	author miod;	state Exp;
branches;
next	1.85;

1.85
date	2001.09.17.17.04.27;	author art;	state Exp;
branches
	1.85.4.1;
next	1.84;

1.84
date	2001.08.09.14.32.59;	author deraadt;	state Exp;
branches;
next	1.83;

1.83
date	2001.08.08.15.15.28;	author jjbg;	state Exp;
branches;
next	1.82;

1.82
date	2001.07.06.17.40.35;	author angelos;	state Exp;
branches;
next	1.81;

1.81
date	2001.07.05.16.51.32;	author jjbg;	state Exp;
branches;
next	1.80;

1.80
date	2001.06.27.05.12.24;	author art;	state Exp;
branches;
next	1.79;

1.79
date	2001.06.25.23.02.53;	author provos;	state Exp;
branches;
next	1.78;

1.78
date	2001.06.25.20.48.13;	author provos;	state Exp;
branches;
next	1.77;

1.77
date	2001.06.25.04.31.50;	author kjell;	state Exp;
branches;
next	1.76;

1.76
date	2001.05.30.02.12.22;	author deraadt;	state Exp;
branches;
next	1.75;

1.75
date	2001.05.17.00.58.00;	author pvalchev;	state Exp;
branches;
next	1.74;

1.74
date	2001.05.16.17.14.39;	author millert;	state Exp;
branches;
next	1.73;

1.73
date	2001.05.16.05.07.51;	author millert;	state Exp;
branches;
next	1.72;

1.72
date	2001.05.04.03.33.32;	author deraadt;	state Exp;
branches;
next	1.71;

1.71
date	2001.04.09.20.40.49;	author deraadt;	state Exp;
branches;
next	1.70;

1.70
date	2001.04.09.10.29.59;	author art;	state Exp;
branches;
next	1.69;

1.69
date	2001.03.08.03.37.16;	author itojun;	state Exp;
branches;
next	1.68;

1.68
date	2001.01.05.05.13.46;	author angelos;	state Exp;
branches;
next	1.67;

1.67
date	2000.12.31.00.15.22;	author angelos;	state Exp;
branches;
next	1.66;

1.66
date	2000.10.13.04.21.14;	author itojun;	state Exp;
branches;
next	1.65;

1.65
date	2000.04.26.19.08.23;	author chris;	state Exp;
branches;
next	1.64;

1.64
date	2000.03.22.18.08.12;	author provos;	state Exp;
branches;
next	1.63;

1.63
date	2000.03.17.10.25.20;	author angelos;	state Exp;
branches;
next	1.62;

1.62
date	2000.03.02.10.50.29;	author art;	state Exp;
branches;
next	1.61;

1.61
date	2000.01.09.22.00.16;	author itojun;	state Exp;
branches
	1.61.2.1;
next	1.60;

1.60
date	2000.01.08.04.34.37;	author angelos;	state Exp;
branches;
next	1.59;

1.59
date	99.12.30.19.09.58;	author provos;	state Exp;
branches;
next	1.58;

1.58
date	99.10.29.05.15.27;	author angelos;	state Exp;
branches;
next	1.57;

1.57
date	99.10.06.05.25.27;	author millert;	state Exp;
branches;
next	1.56;

1.56
date	99.10.03.21.26.02;	author niklas;	state Exp;
branches;
next	1.55;

1.55
date	99.10.01.22.36.32;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	99.09.29.14.13.33;	author art;	state Exp;
branches;
next	1.53;

1.53
date	99.09.29.00.01.49;	author angelos;	state Exp;
branches;
next	1.52;

1.52
date	99.07.06.20.41.54;	author cmetz;	state Exp;
branches;
next	1.51;

1.51
date	99.07.01.23.10.39;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	99.06.08.01.30.13;	author provos;	state Exp;
branches;
next	1.49;

1.49
date	99.05.27.23.52.03;	author art;	state Exp;
branches;
next	1.48;

1.48
date	99.04.20.22.35.30;	author provos;	state Exp;
branches;
next	1.47;

1.47
date	99.04.11.19.47.10;	author niklas;	state Exp;
branches;
next	1.46;

1.46
date	99.04.07.07.20.31;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	99.04.07.06.45.39;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	99.03.30.00.19.05;	author niklas;	state Exp;
branches;
next	1.43;

1.43
date	99.02.28.06.52.05;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	99.02.24.22.36.42;	author angelos;	state Exp;
branches;
next	1.41;

1.41
date	98.12.04.21.52.24;	author downsj;	state Exp;
branches;
next	1.40;

1.40
date	98.11.25.06.12.38;	author millert;	state Exp;
branches;
next	1.39;

1.39
date	98.11.19.18.27.02;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	98.11.19.01.57.03;	author provos;	state Exp;
branches;
next	1.37;

1.37
date	98.11.18.17.09.45;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	98.11.17.19.29.52;	author provos;	state Exp;
branches;
next	1.35;

1.35
date	98.09.19.20.03.18;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	98.09.01.23.52.38;	author art;	state Exp;
branches;
next	1.33;

1.33
date	98.08.24.05.27.27;	author millert;	state Exp;
branches;
next	1.32;

1.32
date	98.06.08.17.28.11;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	98.05.20.05.07.30;	author gene;	state Exp;
branches;
next	1.30;

1.30
date	98.05.06.23.04.42;	author gene;	state Exp;
branches;
next	1.29;

1.29
date	98.04.26.21.14.08;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	98.04.25.04.32.03;	author gene;	state Exp;
branches;
next	1.27;

1.27
date	98.02.15.00.38.20;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	97.11.05.01.58.52;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	97.09.24.23.03.54;	author mickey;	state Exp;
branches;
next	1.24;

1.24
date	97.09.02.04.04.12;	author downsj;	state Exp;
branches;
next	1.23;

1.23
date	97.07.01.23.13.16;	author provos;	state Exp;
branches;
next	1.22;

1.22
date	97.06.25.10.28.48;	author downsj;	state Exp;
branches;
next	1.21;

1.21
date	97.06.23.19.04.27;	author kstailey;	state Exp;
branches;
next	1.20;

1.20
date	97.06.23.17.35.49;	author kstailey;	state Exp;
branches;
next	1.19;

1.19
date	97.06.23.02.34.37;	author gene;	state Exp;
branches;
next	1.18;

1.18
date	97.06.21.01.59.44;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	97.06.02.04.40.23;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	97.05.29.19.24.27;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	97.04.17.07.24.08;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	97.04.14.05.12.45;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	97.01.15.07.06.12;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	97.01.13.23.32.16;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	96.09.20.06.44.45;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	96.08.31.01.58.49;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.08.29.07.40.24;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.08.16.10.17.13;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	96.08.11.20.47.56;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.08.11.20.45.40;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.07.29.21.01.11;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	96.07.27.11.31.00;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.07.15.15.17.43;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.06.29.19.17.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.06.23.12.15.04;	author deraadt;	state Exp;
branches;
next	;

1.61.2.1
date	2000.03.24.09.09.04;	author niklas;	state Exp;
branches;
next	1.61.2.2;

1.61.2.2
date	2001.05.14.22.06.47;	author niklas;	state Exp;
branches;
next	1.61.2.3;

1.61.2.3
date	2001.07.04.10.39.54;	author niklas;	state Exp;
branches;
next	1.61.2.4;

1.61.2.4
date	2001.10.31.03.11.47;	author nate;	state Exp;
branches;
next	1.61.2.5;

1.61.2.5
date	2002.03.28.11.43.03;	author niklas;	state Exp;
branches;
next	1.61.2.6;

1.61.2.6
date	2003.03.27.23.53.48;	author niklas;	state Exp;
branches;
next	1.61.2.7;

1.61.2.7
date	2003.05.16.00.29.41;	author niklas;	state Exp;
branches;
next	1.61.2.8;

1.61.2.8
date	2004.02.19.10.51.29;	author niklas;	state Exp;
branches;
next	1.61.2.9;

1.61.2.9
date	2004.06.05.23.12.35;	author niklas;	state Exp;
branches;
next	;

1.85.4.1
date	2002.06.11.03.28.26;	author art;	state Exp;
branches;
next	1.85.4.2;

1.85.4.2
date	2002.10.29.00.30.52;	author art;	state Exp;
branches;
next	1.85.4.3;

1.85.4.3
date	2003.05.19.21.53.00;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.244
log
@Kill option KEY, it is a useless knob, nobody uses pfkeyv2 without IPSEC or
tcp md5. OK mpi@@
@
text
@#	$OpenBSD: GENERIC,v 1.243 2017/04/20 14:23:53 visa Exp $
#
#	Machine-independent option; used by all architectures for their
#	GENERIC kernel

option		DDB		# in-kernel debugger
#option		DDBPROF		# ddb(4) based profiling
#option		DDBCTF		# DDB support for CTF
#option		DDB_SAFE_CONSOLE # allow break into ddb during boot
#makeoptions	DEBUG=""	# do not compile full symbol table
#makeoptions	PROF="-pg"	# build profiled kernel
#option		GPROF		# kernel profiling, kgmon(8)
option		DIAGNOSTIC	# internal consistency checks
option		KTRACE		# system call tracing, a la ktrace(1)
option		ACCOUNTING	# acct(2) process accounting
option		KMEMSTATS	# collect malloc(9) statistics
option		PTRACE		# ptrace(2) system call
#option		WITNESS		# witness(4) lock checker

#option		KVA_GUARDPAGES	# slow virtual address recycling (+ guarding)
option		POOL_DEBUG	# pool corruption detection
#option		VFSLCKDEBUG	# VFS locking checks

option		CRYPTO		# Cryptographic framework

option		SYSVMSG		# System V-like message queues
option		SYSVSEM		# System V-like semaphores
option		SYSVSHM		# System V-like memory sharing

option		UVM_SWAP_ENCRYPT# support encryption of pages going to swap

option		FFS		# UFS
option		FFS2		# UFS2
option		FFS_SOFTUPDATES	# Soft updates
option		UFS_DIRHASH	# hash large directories
option		QUOTA		# UFS quotas
option		EXT2FS		# Second Extended Filesystem
option		MFS		# memory file system
option		NFSCLIENT	# Network File System client
option		NFSSERVER	# Network File System server
option		CD9660		# ISO 9660 + Rock Ridge file system
option		UDF		# UDF (DVD) file system
option		MSDOSFS		# MS-DOS file system
option		FIFO		# FIFOs; RECOMMENDED
#option		TMPFS		# efficient memory file system
option		FUSE		# FUSE

option		SOCKET_SPLICE	# Socket Splicing for TCP and UDP
option		TCP_SACK	# Selective Acknowledgements for TCP
option		TCP_ECN		# Explicit Congestion Notification for TCP
option		TCP_SIGNATURE	# TCP MD5 Signatures, for BGP routing sessions
#option		TCP_FACK	# Forward Acknowledgements for TCP

option		ART		# Allotment Routing Table
option		INET6		# IPv6
option		IPSEC		# IPsec
option		PPP_BSDCOMP	# PPP BSD compression
option		PPP_DEFLATE
option		PIPEX		# Ppp IP EXtension, for npppd
option		MROUTING	# Multicast router
option		MPLS		# Multi-Protocol Label Switching
#option		BFD		# Bi-directional Forwarding Detection

#mpath0		at root		# SCSI Multipathing
#scsibus*	at mpath?
#emc*		at scsibus?
#hds*		at scsibus?
#rdac*		at scsibus?
#sym*		at scsibus?

softraid0	at root		# Software RAID
scsibus*	at softraid?

vscsi0		at root		# Userland backed Virtual SCSI
scsibus*	at vscsi?

pseudo-device	pf		# packet filter
pseudo-device	pflog		# pf log if
pseudo-device	pfsync		# pf sync if
pseudo-device	pflow		# pflow export if
pseudo-device	enc		# option IPSEC needs the encapsulation interface

pseudo-device	pty	16	# initial number of pseudo-terminals
pseudo-device	nmea	1	# NMEA 0183 line discipline
pseudo-device	msts	1	# MSTS line discipline
pseudo-device	endrun	1	# EndRun line discipline
pseudo-device	vnd	4	# vnode disk devices
pseudo-device	ksyms	1	# kernel symbols device

# clonable devices
pseudo-device	bpfilter	# packet filter
pseudo-device	bridge		# network bridging support
pseudo-device	carp		# CARP protocol support
pseudo-device	etherip		# EtherIP (RFC 3378)
pseudo-device	gif		# IPv[46] over IPv[46] tunnel (RFC1933)
pseudo-device	gre		# GRE encapsulation interface
pseudo-device	loop		# network loopback
pseudo-device	mpe		# MPLS PE interface
pseudo-device	mpw		# MPLS pseudowire support
pseudo-device	pair		# Virtual Ethernet interface pair
pseudo-device	ppp		# PPP
pseudo-device	pppoe		# PPP over Ethernet (RFC 2516)
pseudo-device	pppx		# PPP multiplexer
pseudo-device	sppp	1	# Sync PPP/HDLC
pseudo-device	trunk		# Trunking support
pseudo-device	tun		# network tunneling over tty (tun & tap)
pseudo-device	vether		# Virtual ethernet
pseudo-device	vxlan		# Virtual extensible LAN
pseudo-device	vlan		# IEEE 802.1Q VLAN
pseudo-device	switch		# Switch

pseudo-device	bio	1	# ioctl multiplexing device

pseudo-device	fuse		# fuse device

option		BOOT_CONFIG	# add support for boot -c
@


1.243
log
@Add option to compile witness(4).
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.242 2017/04/08 20:53:54 naddy Exp $
a56 1
#option		KEY		# PF_KEY (implied by IPSEC)
@


1.242
log
@re-enable POOL_DEBUG after the release; ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.241 2017/03/29 03:11:22 deraadt Exp $
d18 1
@


1.241
log
@POOL_DEBUG off for release
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.240 2017/02/21 16:08:33 phessler Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection
@


1.240
log
@temporarily disable BFD, to not block work on unlocking the socket layer.

requested by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.239 2017/01/25 00:48:36 phessler Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection
@


1.239
log
@enable BFD

OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.238 2017/01/17 20:35:49 rzalamena Exp $
d62 1
a62 1
option		BFD		# Bi-directional Forwarding Detection
@


1.238
log
@Enable switch(4).

ok jca@@, reyk@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.237 2016/12/22 11:04:44 rzalamena Exp $
d62 1
a62 1
#option		BFD		# Bi-directional Forwarding Detection
@


1.237
log
@Remove PIM support from the multicast stack.

ok mpi@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.236 2016/11/29 09:08:34 mpi Exp $
d110 1
a110 1
#pseudo-device	switch		# Switch
@


1.236
log
@Build kernel with DEBUG=-g by default.

This will allow us to extract type informations from DWARF2 sections.  It
also makes developer life easier as debug information are now included in
every object.

Resulting kernels will be stripped using strip(1) instead of ld(1).

Kernel build time increases by approximately 10%.  However it is still
possible to disable this by defining DEBUG="".

ok kettenis@@, bluhm@@, natano@@, jasper@@, reyk@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.235 2016/09/18 14:28:05 deraadt Exp $
a60 1
#option		PIM		# Protocol Independent Multicast
@


1.235
log
@option INSECURE is obsolete
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.234 2016/09/16 19:13:17 jasper Exp $
d10 1
a10 1
#makeoptions	DEBUG="-g"	# compile full symbol table
@


1.234
log
@teach ddb(4) about CTF. currently it only loads the CTF and uses it on amd64
to lookup the number of function parameters. however having this basic
facility allows us to expand it's usage.

currently hidden behind the (disabled) DDBCTF kernel option as some of the
required tools are not available in base yet. in addition to that one
also needs recent bootblocks that load the .SUNW_ctf kernel section.

discussed with mpi@@ over many a cider and ale in cambridge
feedback and ok guenther@@ mpi@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.233 2016/09/04 09:22:28 mpi Exp $
a4 2

#option		INSECURE	# default to secure
@


1.233
log
@Introduce Dynamic Profiling, a ddb(4) based & gprof compatible kernel
profiling framework.

Code patching is used to enable probes when entering functions.  The
probes will call a mcount()-like function to match the behavior of a
GPROF kernel.

Currently only available on amd64 and guarded under DDBPROF.  Support
for other archs will follow soon.

A new sysctl knob, ddb.console, need to be set to 1 in securelevel 0
to be able to use this feature.

Inputs and ok guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.232 2016/09/03 14:20:25 phessler Exp $
d10 1
@


1.232
log
@Add in the (disabled) kernel glue for BFD

OK claudio@@, henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.231 2016/09/01 10:06:32 goda Exp $
d9 1
@


1.231
log
@Import switch(4), an in-kernel OpenFlow switch which can work alone.
switch(4) currently supports OpenFlow 1.3.5.
Currently, it's disabled by the kernel config.

With help from yasuoka@@ reyk@@ jsg@@.

ok deraadt@@ yasuoka@@ reyk@@ henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.230 2016/07/26 18:27:42 tedu Exp $
d63 1
@


1.230
log
@pool debug dance, part deux
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.229 2016/07/25 19:52:56 deraadt Exp $
d110 1
@


1.229
log
@disable tmpfs because it receives zero maintainance.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.228 2016/07/23 14:52:39 tedu Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection
@


1.228
log
@do the pool debug release dance. ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.227 2016/04/25 19:05:09 tedu Exp $
d44 1
a44 1
option		TMPFS		# efficient memory file system
@


1.227
log
@unlink systrace from the build. pledge is the glorious future that awaits.
the rest of systrace to be deleted in a serious of followup commits.
ok from larger openbsd developer community
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.226 2016/03/24 07:18:11 mpi Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection
@


1.226
log
@Enable ART.

Leave the define for the moment, this will be changed as soon as we're
confident enough.

"it must be a 3-line diff" krw@@

ok bluhm@@, mikeb@@, dlg@@, reyk@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.225 2016/02/25 20:27:16 deraadt Exp $
a88 1
pseudo-device	systrace 1	# system call tracing device
@


1.225
log
@activate POOL_DEBUG during -current; miod
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.224 2016/01/06 08:07:30 benno Exp $
d53 1
@


1.224
log
@deactivate POOL_DEBUG for release
ok deraadt, jsg
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.223 2015/12/03 12:42:03 goda Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection
@


1.223
log
@Implement etherip(4) driver

This commit is not removing the existing EtherIP part of gif(4) and
it keeps EtherIP of gif(4) working.

ok jbg@@ sthen@@ mpi@@ reyk@@ yasuoka@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.222 2015/10/24 10:52:05 reyk Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection
@


1.222
log
@Add pair(4), a vether-based virtual Ethernet driver to interconnect
rdomains and bridges on the local system.  This can be used to route
through local rdomains, to create L2 devices (like trunks) between
them, and many other things.

Discussed with many, with input from mpi@@
OK sthen@@ phessler@@ yasuoka@@ mikeb@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.221 2015/10/23 15:10:53 claudio Exp $
d94 1
@


1.221
log
@Allocate a new major for tap(4) also note that pseudo-device tun is for tap
as well. OK dlg@@ mpi@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.220 2015/08/10 20:35:36 sthen Exp $
d99 1
@


1.220
log
@turn POOL_DEBUG back on
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.219 2015/07/31 00:16:53 benno Exp $
d104 1
a104 1
pseudo-device	tun		# network tunneling over tty
@


1.219
log
@As usual, turn off POOL_DEBUG for the release.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.218 2015/07/20 22:16:41 rzalamena Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection
@


1.218
log
@Implemented MPLS pseudowire (mpw(4)) to be used with VPLS and VPWS.

ok mpi@@, claudio@@.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.217 2015/07/17 22:52:29 tedu Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection
@


1.217
log
@remove obsolete INET kernel option
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.216 2015/03/12 23:54:15 sthen Exp $
d98 1
@


1.216
log
@we're tagged for release; turn POOL_DEBUG back on. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.215 2015/03/04 14:36:19 jsg Exp $
d53 1
a53 2
option		INET		# IP + ICMP + TCP + UDP
option		INET6		# IPv6 (needs INET)
@


1.215
log
@disable POOL_DEBUG for release
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.214 2015/01/21 02:23:14 guenther Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection
@


1.214
log
@Delete option COMPAT_43: support for pre-sa_len binaries has been obsolete
for a couple decades.  Keep the OSIOCGIFCONF ioctl to support COMPAT_LINUX
but move the rest of the Linux-specific ioctl() handling into linux_socket.c
This lets struct osockaddr finally move from sys/socket.h to protocols/talkd.h

ok krw@@ deraadt@@ mpi@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.213 2014/10/09 03:36:32 tedu Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection
@


1.213
log
@remove LKM
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.212 2014/10/01 10:08:29 mpi Exp $
a29 2

option		COMPAT_43	# Kernel compatibility with 4.3BSD
@


1.212
log
@sl(4) is no more, thanks for all the fish!
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.211 2014/08/18 14:35:37 tedu Exp $
a31 2

option		LKM		# loadable kernel modules
@


1.211
log
@pool debug back on
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.210 2014/07/29 12:57:08 deraadt Exp $
a105 1
pseudo-device	sl		# CSLIP
@


1.210
log
@disable POOL_DEBUG for release
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.209 2014/04/19 10:07:44 henning Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection
@


1.209
log
@-option ALTQ
ALTQ has served us well for years and was extremely important not just for
us, but for the entire bandwidth management arena. Back when we got altq,
the subject was not yet well researched and understood, which is why altq
is the framework with pluggable schedulers it is. Kenjiro Cho (kjc@@) did an
amazing job there.
Now, more than 10 years later, we do have a good understanding and can use
a simpler framework with just one priority queueing and one bandwidth
shaping mechanism each - the new queueing subsystem. Last not least because
it is incredibly painful to maintain both in parallel, it is time for altq
to depart. Farewell, thanks for many years of good service. Everybody
using any form of "not just fifo" queueing owes Kenjiro a lot. At least
buy him a beer when you meet him.
And, allow me this personal note, thanks Kenjiro, working with you on the
topic has always been a great pleasure and I learned a lot from you. Thanks!
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.207 2014/02/22 07:20:39 jsg Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection
@


1.208
log
@re-enable POOL_DEBUG
@
text
@a57 1
option		ALTQ		# ALTQ base
@


1.207
log
@disable POOL_DEBUG for release
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.206 2013/12/14 23:28:02 espie Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection
@


1.206
log
@enable tmpfs so it gets tested some more.
okay kettenis@@, martin@@, beck@@, krw@@, tedu@@, millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.205 2013/11/01 13:54:45 syl Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection
@


1.205
log
@enable fuse.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.204 2013/10/21 12:07:47 reyk Exp $
d48 1
@


1.204
log
@enable vxlan(4). ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.203 2013/10/13 10:10:01 reyk Exp $
d48 1
d115 2
@


1.203
log
@Import vxlan(4), the virtual extensible local area network tunnel
interface.  VXLAN is a UDP-based tunnelling protocol for overlaying
virtualized layer 2 networks over layer 3 networks. The implementation
is based on draft-mahalingam-dutt-dcops-vxlan-04 and has been tested
with other implementations in the wild.

put it in deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.202 2013/10/01 06:57:25 dlg Exp $
d110 1
a110 1
#pseudo-device	vxlan		# Virtual extensible LAN
@


1.202
log
@as predicted, problems have been found with mpath. disabling it while they
get figured out.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.201 2013/09/28 22:02:04 dlg Exp $
d110 1
@


1.201
log
@enable mpath, rdac, and sym to see what will happen.

discussed with and ok deraadt. we expect a problem will appear which will
cause it to be disabled again, but unless we try this we wont see the
problems.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.200 2013/08/17 10:08:34 bluhm Exp $
d67 2
a68 2
mpath0		at root		# SCSI Multipathing
scsibus*	at mpath?
d71 2
a72 2
rdac*		at scsibus?
sym*		at scsibus?
@


1.200
log
@Fix comment, socket splice can also do UDP now.  Fix white spaces.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.199 2013/08/14 05:28:04 guenther Exp $
d67 6
a72 2
#mpath0		at root		# SCSI Multipathing
#scsibus*	at mpath?
@


1.199
log
@The last user of the old __tfork() was updated to the current one,
so COMPAT_O51 can go.  The complete ABI role means COMPAT_O53 can
be removed as well.

ok jsing@@ tedu@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.198 2013/08/07 22:00:29 naddy Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection 
d49 1
a49 1
option		SOCKET_SPLICE	# Socket Splicing for TCP
d91 1
a91 1
pseudo-device	bpfilter 	# packet filter
d100 1
a100 1
pseudo-device	pppx 		# PPP multiplexer
d106 1
a106 1
pseudo-device	vlan 		# IEEE 802.1Q VLAN 
@


1.198
log
@re-enable POOL_DEBUG after release; ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.197 2013/07/11 05:50:41 jsg Exp $
a31 2
option		COMPAT_O51	# Kernel compatibility with OpenBSD 5.1
option		COMPAT_O53	# Kernel compatibility with OpenBSD 5.3
@


1.197
log
@disable POOL_DEBUG for release
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.196 2013/04/15 15:32:19 jsing Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection 
@


1.196
log
@Add an f_mntfromspec member to struct statfs, which specifies the name of
the special provided when the mount was requested. This may be the same as
the special that was actually used for the mount (e.g. in the case of a
device node) or it may be different (e.g. in the case of a DUID).

Whilst here, change f_ctime to a 64 bit type and remove the pointless
f_spare members.

Compatibility goo courtesy of guenther@@

ok krw@@ millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.195 2013/03/14 11:18:37 mpi Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection 
@


1.195
log
@tedu faith(4), suggested by todd@@ some weeks ago after a submission by
dhill.

ok krw@@, mikeb@@, tedu@@ (implicit)
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.194 2013/03/01 21:06:04 guenther Exp $
d33 1
@


1.194
log
@Antici

pation: back to -current
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.193 2013/01/31 23:30:40 miod Exp $
a107 3

# for IPv6
#pseudo-device	faith	1	# IPv[46] tcp relay translation i/f
@


1.193
log
@welcome to 5.3-BETA
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.192 2012/09/19 17:50:17 yasuoka Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection 
@


1.192
log
@cleanup around the pipex.  naming style, delete or update comments.
no functional changes.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.191 2012/09/05 17:41:13 deraadt Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection 
@


1.191
log
@COMPAT_O48 can be turned off; ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.190 2012/08/23 06:12:49 deraadt Exp $
d63 1
a63 1
option		PIPEX		# Pppac IP EXtension, for npppd
@


1.190
log
@kill nnpfs dead
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.189 2012/07/26 15:52:28 otto Exp $
a31 1
option		COMPAT_O48	# Kernel compatibility with OpenBSD 4.8
@


1.189
log
@now that we are current again, enable POOL_DEBUG
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.188 2012/07/16 12:02:45 jasper Exp $
a43 1
#option		NNPFS		# NNPFS filesystem
@


1.188
log
@As usual, turn off POOL_DEBUG for the release.  Note that POOL_DEBUG is
not the same as it was in 4.9 or earlier.  In either case you can turn
it on again using sysctl kern.pool_debug=1 -- but if POOL_DEBUG is not
enabled you only get a subset of the strict checks.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.187 2012/06/21 06:49:26 guenther Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection 
@


1.187
log
@Actually enabling the __tfork compat code would be a Good Thing
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.186 2012/02/15 04:50:23 deraadt Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection 
@


1.186
log
@re-enable POOL_DEBUG for -current
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.185 2012/02/09 04:46:57 deraadt Exp $
d33 1
@


1.185
log
@As usual, turn off POOL_DEBUG for the release.  Note that POOL_DEBUG is
not the same as it was in 4.9 or earlier.  In either case you can turn
it on again using sysctl kern.pool_debug=1 -- but if POOL_DEBUG is not
enabled you only get a subset of the strict checks.
prodded by david
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.184 2011/10/06 20:49:28 deraadt Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection 
@


1.184
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.183 2011/08/21 20:19:56 matthieu Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection 
@


1.183
log
@Re-enable POOL_DEBUG. requested by deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.181 2011/07/09 05:46:26 matthew Exp $
a88 1
pseudo-device	ccd	4	# concatenated disk devices
@


1.182
log
@As usual, turn off POOL_DEBUG for the release.  Note that POOL_DEBUG is
not the same as it was in 4.9 or earlier.  In either case you can turn
it on again using sysctl kern.pool_debug=1 -- but if POOL_DEBUG is not
enabled you only get a subset of the strict checks.
ok kettenis miod beck
@
text
@d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection 
@


1.181
log
@Fix up previous diff: use COMPAT_O48 instead of COMPAT_48, add option
to GENERIC, wrap compat_o48_sys_getdirentries() with an appropriate
#ifdef, and use struct compat_o48_sys_getdirentries_args instead of
struct sys_getdirentries_args.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.180 2011/07/09 00:47:18 henning Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection 
@


1.180
log
@begone, fucking rotten appletalk shit. ok room
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.179 2011/07/08 18:45:47 yasuoka Exp $
d32 1
@


1.179
log
@this also must be included my previous commit.  sorry.

Include PIPEX in kernel by default.  And add new sysctl variable
`net.pipex.enable' to enable PIPEX.   By default, pipex is disabled
and it will not process packets from wire.  Update man pages and
update HOWTO_PIPEX_NPPPD.txt for testers.

discussed with dlg@@, ok deraadt@@ mcbride@@ claudio@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.178 2011/07/08 15:09:32 jsg Exp $
a60 1
#option		NETATALK	# AppleTalk
@


1.178
log
@do 1.174 correctly and remove (commented out) option PORTAL
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.177 2011/07/04 20:43:46 thib Exp $
d64 1
a64 1
#option		PIPEX		# Pppac IP EXtension, for npppd
d103 1
a103 1
#pseudo-device	pppx 		# PPP multiplexer
@


1.177
log
@Disable NNPFS;

A purdy OpenAFS port is being worked on and everybody hates
having to touch files inside nnpfs/ so it is going to go away
real soon.

ok deraadt@@, beck@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.176 2011/07/02 15:52:25 thib Exp $
a48 1
#option		PORTAL		# dynamically created filesystem objects
@


1.176
log
@rename VFSDEBUG to VFLCKDEBUG;

prompted by tedu@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.175 2011/04/06 11:17:32 deraadt Exp $
d42 1
a42 1
option		NNPFS		# NNPFS filesystem
@


1.175
log
@POOL_DEBUG has nothing to do with portalfs
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.174 2011/04/05 18:51:25 thib Exp $
d21 1
a21 1
#option		VFSDEBUG	# VFS locking checks
@


1.174
log
@Remove portalfs.

While it is a terribly cool idea, it's just awful and since noone has stepped
up to the plate to keep it up with the current vop state, retire it to the
attic.

ok krw@@, deraadt@@, guenther@@, miod@@.
comments from jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.172 2011/03/02 01:58:56 deraadt Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection 
@


1.173
log
@COMPAT_O47 (kernel getpeereid, which was replaced by libc getpeereid)
can go away
ok guenther
@
text
@d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection 
@


1.172
log
@enable POOL_DEBUG again since we are not in release
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.171 2011/02/15 07:14:45 deraadt Exp $
a31 1
option		COMPAT_O47	# Compatibility with OpenBSD 4.7
@


1.171
log
@move us to real 4.9
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.170 2011/01/19 21:37:03 thib Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection 
@


1.170
log
@group filesystems together

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.169 2011/01/07 17:50:42 bluhm Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection 
@


1.169
log
@Add socket option SO_SPLICE to splice together two TCP sockets.
The data received on the source socket will automatically be sent
on the drain socket.  This allows to write relay daemons with zero
data copy.
ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.168 2010/10/18 15:01:21 claudio Exp $
a43 7

option		SOCKET_SPLICE	# Socket Splicing for TCP
option		TCP_SACK	# Selective Acknowledgements for TCP
option		TCP_ECN		# Explicit Congestion Notification for TCP
option		TCP_SIGNATURE	# TCP MD5 Signatures, for BGP routing sessions
#option		TCP_FACK	# Forward Acknowledgements for TCP

a45 1

d51 6
@


1.168
log
@There is no reason to not include MPLS and mpe(4) in GENERIC. Makes my
life a lot easier. Sure deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.167 2010/09/24 14:13:47 sobrado Exp $
d45 1
@


1.167
log
@use a better description for the vnd(4) entry on this file.

ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.166 2010/09/24 12:46:09 dlg Exp $
d70 1
a70 1
#option		MPLS		# Multi-Protocol Label Switching
d103 1
a103 1
#pseudo-device	mpe		# MPLS PE interface
@


1.166
log
@vscsi lives once more!
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.165 2010/09/22 13:03:48 claudio Exp $
d91 1
a91 1
pseudo-device	vnd	4	# paging to files
@


1.165
log
@Add a new interface pppx(4) -- the ppp multiplexer to be used with npppd
and pipex. pppx(4) creates an interface whenever a session is created
so that altq and pf can work on these.
Started by dlg@@ debugged and made usable by myself
OK dlg@@ yasuoka@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.164 2010/09/20 07:18:03 deraadt Exp $
d78 2
a79 2
#vscsi0		at root		# Userland backed Virtual SCSI
#scsibus*	at vscsi?
@


1.164
log
@Move getpeereid(2) into COMPAT_O47.  In 4.8 and onwards it is library
code using socket options.
ok matthew
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.163 2010/08/13 12:31:33 phessler Exp $
d106 1
@


1.163
log
@now that we are at -current again, re-enable POOL_DEBUG

"go ahead" kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.162 2010/08/08 17:18:11 deraadt Exp $
d32 1
@


1.162
log
@we ship releases with POOL_DEBUG off.  post-release, turn it back on.
POOL_DEBUG is for development safety (catches our bugs early), but this
particular safety comes off for release.
reminded by miod
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.161 2010/07/21 07:13:06 dlg Exp $
d20 1
a20 1
#option		POOL_DEBUG	# pool corruption detection 
@


1.161
log
@disable vscsi until we actually have something that uses it (like iscsid),
and until matthew@@ is happy with it.

suggested by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.160 2010/07/01 20:24:04 thib Exp $
d20 1
a20 1
option		POOL_DEBUG	# pool corruption detection 
@


1.160
log
@garbage collect the now unused PAGEFASTRECYCLE option.

ok deraadt@@, david@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.159 2010/07/01 01:53:35 deraadt Exp $
d77 2
a78 2
vscsi0		at root		# Userland backed Virtual SCSI
scsibus*	at vscsi?
@


1.159
log
@turn off COMPAT_O43
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.158 2010/06/29 21:28:37 reyk Exp $
a18 1
#option		PAGEFASTRECYCLE	# fast physical page recycling
@


1.158
log
@Replace enc(4) with a new implementation as a cloner device.  We still
create enc0 by default, but it is possible to add additional enc
interfaces.  This will be used later to allow alternative encs per
policy or to have an enc per rdomain when IPsec becomes rdomain-aware.

manpage bits ok jmc@@
input from henning@@ deraadt@@ toby@@ naddy@@
ok henning@@ claudio@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.156 2010/05/07 13:16:18 claudio Exp $
a32 1
option		COMPAT_O43	# and OpenBSD 4.3
@


1.157
log
@PAGEFASTRECYCLE does not exist as an option after uvm_pmemrange; it is
implied.
@
text
@d86 1
a86 1
pseudo-device	enc	1	# option IPSEC needs the encapsulation interface
@


1.156
log
@order the network pseudo-devices by name. Move pppoe and sppp into that list.
OK kettenis, krw, dlg
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.155 2010/04/30 11:06:16 claudio Exp $
d19 1
a19 1
option		PAGEFASTRECYCLE	# fast physical page recycling
@


1.155
log
@Add commented MPLS and mpe(4) entries.
OK sthen, jsg
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.154 2010/03/22 21:02:57 kettenis Exp $
a85 1
pseudo-device	sppp	1	# Sync PPP/HDLC
d104 1
d106 1
d108 2
d111 1
a112 3
pseudo-device	trunk		# Trunking support
pseudo-device	vether		# Virtual ethernet
#pseudo-device	mpe		# MPLS PE interface
a116 1
pseudo-device	pppoe	1	# PPP over Ethernet (RFC 2516)
@


1.154
log
@Enable PAGEFASTRECYCLE.

ok deraadt@@, ariane@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.153 2010/03/18 21:18:22 otto Exp $
d71 1
d111 1
@


1.153
log
@enable POOL_DEBUG
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.152 2010/03/07 03:55:01 deraadt Exp $
d19 1
a19 1
#option		PAGEFASTRECYCLE	# fast physical page recycling 
@


1.152
log
@we disable POOL_DEBUG for releases.  Reminded by mpf
After release, someone please remind us to turn it on again.  It helps
find bugs.  We just don't want people to get hosed too much during
release.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.151 2010/01/11 10:29:16 mcbride Exp $
d21 1
a21 1
#option		POOL_DEBUG	# pool corruption detection 
@


1.151
log
@Add PIPEX option, disabled by default for now.

ok deraadt yasuoka
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.150 2009/11/09 03:16:07 deraadt Exp $
d21 1
a21 1
option		POOL_DEBUG	# pool corruption detection 
@


1.150
log
@vether(4) is a virtual ethernet device driver which can be used
so that a bridge-etherip-tunnel host can join into the bridge itself.
It is ridiculous that this capability was missing from our network
stack portfolio, considering we have bgp and ospf daemons...
discussed at length with claudio
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.149 2009/08/26 00:37:17 thib Exp $
d68 1
@


1.149
log
@add commented out options for PAGEFASTRECYCLE, KVA_GUARDPAGES, shuffle VFSDEBUG
around and add POOL_DEBUG as an enabled option, removing the define from subr_pool.c.

comments & ok deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.148 2009/08/25 16:16:34 jsg Exp $
d108 1
@


1.148
log
@Remove support for packet mode of Metricom Ricochet radios.
It currently doesn't compile and this is unlikely to change
as there are many alternatives now since we no longer live
in the early 1990s and Metricom went bankrupt some time ago.

ok many @@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.147 2009/08/13 15:04:20 dlg Exp $
d19 5
a53 1
#option		VFSDEBUG	# VFS debugging
@


1.147
log
@wire vscsi up to a cdev

for claudio@@ ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.146 2009/08/09 12:47:23 dlg Exp $
a81 1
#pseudo-device	strip	1	# Starmode Radio IP interface
@


1.146
log
@add mpath(4), a driver that steals paths to scsi devices if it
thinks they could be available via multiple paths. those stolen
devices are then made available via mpath(4).

this is the minimum amount of code to implement the stealing. it
is generally broken and very brittle, so it is currently disabled.

it is going in so i can work on it in the tree.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.144 2009/05/06 18:21:23 stevesk Exp $
d72 3
@


1.145
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d67 3
@


1.144
log
@endrun(4) - EndRun Technologies native time-of-day message timedelta
sensor.  Based on msts(4).  Tested with Praecis Ct
(http://www.endruntechnologies.com/network-time-source.htm).

help and feedback mbalmer
'no problem with this sensor going in' deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.143 2008/11/02 01:05:25 pedro Exp $
d39 1
a39 1
option		XFS		# xfs filesystem
@


1.143
log
@Disable portalfs until it is fixed, okay deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.142 2008/09/09 14:04:09 henning Exp $
d81 1
@


1.142
log
@actually enable pflow
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.141 2008/07/28 08:29:50 jmc Exp $
d54 1
a54 1
option		PORTAL		# dynamically created filesystem objects
@


1.141
log
@reinstate a comment whacked in -r1.138; ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.140 2008/03/16 19:42:57 otto Exp $
d73 1
@


1.140
log
@Widen some struct statfs fields to support large filesystem stata
and add some to be able to support statvfs(2). Do the compat dance
to provide backward compatibility.  ok thib@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.139 2008/01/05 17:33:28 mbalmer Exp $
d27 1
a27 1
option		COMPAT_43	# and 4.3BSD
@


1.139
log
@Add support for the Meinberg Standard Time String format that all Meinberg
radio clocks can transmit over serial ports.  This is implemented as a
line discipline similar to nmea(4) and provides a timedelta sensor.

See http://www.meinberg.de/english/specs/timestr.htm for details on the
MSTS format.

ldattach(8) is extended to support the "msts" line discipline and two stopbits
(which some radio clocks, e.g. the C51 use).  Do a "make includes" before your
next system build.

Initially from Maurice Janssen based on nmea(4).  "go for it" deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.138 2007/11/28 12:25:39 deraadt Exp $
d28 1
@


1.138
log
@COMPAT_{23,25,35} should not be used directly
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.137 2007/11/27 17:23:23 deraadt Exp $
d78 1
@


1.137
log
@TCP_COMPAT_42 was last used in 1997.  Kill it.
ok millert
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.136 2007/11/25 16:14:10 marco Exp $
a26 3
#option		COMPAT_23	# Kernel compatibility with OpenBSD 2.3,
#option		COMPAT_25	# 2.5,
#option		COMPAT_35	# 3.5,
@


1.136
log
@Re-enable softraid.  Tested on virtually all platforms by many people.
Thanks!

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.135 2007/11/25 10:18:25 deraadt Exp $
a30 1
#option		TCP_COMPAT_42	# TCP bug compatibility with 4.2BSD
@


1.135
log
@turn off COMPAT_35; ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.134 2007/06/15 23:01:42 deraadt Exp $
d70 2
a71 2
#softraid0	at root		# Software RAID
#scsibus*	at softraid?
@


1.134
log
@disable softraid (because sr_boot_assembly->readdisklabel->readdoslabel->biowait)
is what happens on late-cold architectures.  something else has to be fixed
first before that is permitted, i guess.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.133 2007/06/05 08:08:46 henning Exp $
d29 1
a29 1
option		COMPAT_35	# 3.5,
@


1.133
log
@IPX is about to go away, remove commented out IPX options in GENERIC and
ipx related files (doesn't compile anyway)
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.132 2007/06/02 01:58:17 marco Exp $
d70 2
a71 2
softraid0	at root		# Software RAID
scsibus*	at softraid?
@


1.132
log
@Enable softraid so that people can start testing it.

Note: this is a work in progress! this is under active development and
      things will change.

prompted and ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.131 2007/05/28 22:26:03 todd Exp $
a63 2
#option		IPX		# IPX+SPX
#option		IPXIP		# IPX tunneling over IP
@


1.131
log
@bio for all archs, ok krw@@ kettenis@@ sounds good marco@@ go for it deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.130 2007/05/27 01:50:37 todd Exp $
d72 2
a73 2
#softraid0	at root		# Software RAID
#scsibus*	at softraid?
@


1.130
log
@back out bio, breaks dlg's sparc64 v215
prompted by/ok dlg@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.129 2007/05/26 19:54:24 todd Exp $
d106 1
@


1.129
log
@prodded by marco, enable bio everywhere
grudgingly ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.128 2007/04/30 18:46:32 pedro Exp $
a105 1
pseudo-device	bio	1	# ioctl multiplexing device
@


1.128
log
@Enable FFS2, okay deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.127 2007/04/17 15:16:12 millert Exp $
d106 1
@


1.127
log
@Add commented out entry for FFS2
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.126 2007/03/19 14:33:28 dlg Exp $
d36 1
a36 1
#option		FFS2		# UFS2
@


1.126
log
@attach softraid to the root of the device tree in a machine independant
way, rather than requiring some glue in each machines mainbus probe.

it is still commented out.

based on a discussion with miod@@ ok marco@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.124 2006/06/14 06:18:55 mbalmer Exp $
d36 1
@


1.125
log
@Remove the tb(4) line discipline and manual page.  I found no man pages
referencing tb(4).

ok deraadt
@
text
@d71 3
@


1.124
log
@enable the NMEA 0183 line discipline in GENERIC. see nmea(4) for details.

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.123 2005/12/12 20:39:36 miod Exp $
a78 1
pseudo-device	tb	1	# tablet line discipline
@


1.123
log
@Only include PROCFS on kernels which have either COMPAT_LINUX or COMPAT_SVR4,
otherwise it's just a waste of bytes.
ok deraadt@@ mickey@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.122 2005/12/06 20:18:57 pedro Exp $
d80 1
@


1.122
log
@Remove fdescfs
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.121 2005/11/24 12:08:16 pedro Exp $
a56 1
option		PROCFS		# /proc
@


1.121
log
@Remove kernfs, okay deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.120 2005/10/05 17:32:22 norby Exp $
a54 1
option		FDESC		# /dev/fd
@


1.120
log
@Add multicast routing to GENERIC.

It is now possible to enable multicast routing in the kernel with
the sysctl option net.inet.ip.mforwarding=1

Based on intial work by msf@@

help claudio@@
ok claudio@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.119 2005/06/08 04:52:45 henning Exp $
a56 1
#option		KERNFS		# /kern
@


1.119
log
@-#option                NS              # XNS
-#option                NSIP            # XNS tunneling over IP
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.118 2005/06/07 02:48:21 henning Exp $
d71 1
a71 1
#option		MROUTING	# Multicast router
@


1.118
log
@remove commented-out CCITT option
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.117 2005/05/26 00:33:45 pedro Exp $
a65 2
#option		NS		# XNS
#option		NSIP		# XNS tunneling over IP
@


1.117
log
@RIP stackable filesystems, ok marius@@ tedu@@, discussed with deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.116 2005/05/24 02:45:17 reyk Exp $
a70 1
#option		CCITT,LLC,HDLC	# X.25
@


1.116
log
@initial import of a trunking (link aggregation and link failover)
implementation. it currently supports round robin mode with link state
checking, additional modes will be added later.

ok brad@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.115 2005/05/22 21:15:18 pedro Exp $
a59 4
# layer filesystems
#option		NULLFS		# loopback file system
#option		UMAPFS		# NULLFS + uid and gid remapping
#option		UNION		# union file system
@


1.115
log
@add option VFSDEBUG, disabled by default
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.114 2005/03/30 07:41:30 deraadt Exp $
d106 1
@


1.114
log
@enable UDF in GENERIC
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.113 2005/01/14 14:51:27 mcbride Exp $
d51 1
@


1.113
log
@Add kernel support for Protocol Independant Multicast (PIM)
Information: http://netweb.usc.edu/pim/

From Pavlin Radoslavov <pavlin@@icir.org>

ok deraadt@@ brad@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.112 2004/11/28 23:39:45 canacar Exp $
d52 1
@


1.112
log
@In kernel pppoe client, a simple IPv4 only implementation.
Initial porting from NetBSD by David Berghoff.
Modified/simplified to match our sppp implementation.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.111 2004/11/24 18:53:15 deraadt Exp $
d77 1
@


1.111
log
@nothing really uses kernfs anymore, and in general it is unsafe since the
way that it interacts with the buffer cache can result in non-atomic data
ok most people
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.110 2004/11/24 00:23:15 deraadt Exp $
d106 2
@


1.110
log
@disable the layer filesystems by default; ok lots of people
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.109 2004/07/31 21:27:31 brad Exp $
d55 1
a55 1
option		KERNFS		# /kern
@


1.109
log
@remove GATEWAY and IPFORWARDING option knobs, use the sysctl.

ok mcbride@@ miod@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.108 2004/07/15 12:11:36 henning Exp $
d59 3
a61 3
option		NULLFS		# loopback file system
option		UMAPFS		# NULLFS + uid and gid remapping
option		UNION		# union file system
@


1.108
log
@remove commented-out netiso stuff
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.107 2004/05/28 08:16:23 grange Exp $
a62 1
#option		GATEWAY		# packet forwarding
@


1.107
log
@bpf device cloning.
Now to have more bpf devices just add device nodes in /dev,
no need to recompile kernel anymore.

Code from form@@pdp-11.org.ru, some help from markus@@.
ok markus@@ canacar@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.106 2004/05/27 20:48:46 tedu Exp $
a72 2
#option		ISO,TPIP	# OSI
#option		EON		# OSI tunneling over IP
@


1.106
log
@make acct(2) optional with ACCOUNTING
ok art@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.105 2004/05/03 17:41:22 millert Exp $
a83 1
pseudo-device	bpfilter 8	# packet filter
d96 1
@


1.105
log
@Add COMPAT_35
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.104 2004/04/10 08:33:54 mcbride Exp $
d15 1
@


1.104
log
@Make it more obvious that you don't have to modify the counts on clonable
devices anymore.

ok deraadt@@ henning@@ krw@@ millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.103 2004/03/02 01:13:13 deraadt Exp $
d28 1
@


1.103
log
@disable COMPAT_25; ok miod millert
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.102 2004/02/10 21:20:17 millert Exp $
a81 1
pseudo-device	loop	2	# network loopback
a82 2
pseudo-device	sl	2	# CSLIP
pseudo-device	ppp	2	# PPP
a83 1
pseudo-device	tun	2	# network tunneling over tty
a84 3
pseudo-device	bridge	2	# network bridging support
pseudo-device	vlan 	2	# IEEE 802.1Q VLAN 
pseudo-device	gre	1	# GRE encapsulation interface
a85 1
pseudo-device	carp	2	# CARP protocol support
d94 11
a105 1
pseudo-device	gif	4	# IPv[46] over IPv[46] tunnel (RFC1933)
@


1.102
log
@Decrease the initial number of ptys from 64 to 16.  If the systems
needs more it will allocate them on demand.  OK deraadt@@ beck@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.101 2004/02/10 01:30:13 millert Exp $
d27 1
a27 1
option		COMPAT_25	# 2.5,
@


1.101
log
@Adjust comment now that number of ptys is dynamic.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.100 2004/01/26 17:18:18 deraadt Exp $
d95 1
a95 1
pseudo-device	pty	64	# initial number of pseudo-terminals
@


1.100
log
@TCP_SIGNATURE enabled by default
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.99 2004/01/18 21:46:53 beck Exp $
d95 1
a95 1
pseudo-device	pty	64	# pseudo-terminals
@


1.99
log
@clean out #ifdef horror show in xfs_dev-bsd.c and enable XFS in GENERIC.
ok deraadt@@, todd@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.98 2004/01/07 20:54:35 tedu Exp $
d43 1
a44 1
#option		TCP_SIGNATURE	# TCP MD5 Signatures, for BGP routing sessions
@


1.98
log
@dirhash is good to go.  ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.97 2003/10/21 22:09:30 deraadt Exp $
d39 1
a39 1
#option		XFS		# xfs filesystem
@


1.97
log
@2 carp not 4
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.96 2003/10/17 21:04:58 mcbride Exp $
d35 1
@


1.96
log
@Common Address Redundancy Protocol

Allows multiple hosts to share an IP address, providing high availability
and load balancing.

Based on code by mickey@@, with additional help from markus@@
and Marco_Pfatschbacher@@genua.de

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.95 2003/05/14 14:24:43 itojun Exp $
d92 1
a92 1
pseudo-device	carp	4	# CARP protocol support
@


1.95
log
@make PULLDOWN_TEST codepath the default (has been default for a long time).
markus ok
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.94 2003/05/13 06:06:39 tedu Exp $
d92 1
@


1.94
log
@turn layer fs back on.  nullfs at least is very solid, and union isn't too
bad.  suggested by deraadt and naddy
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.93 2003/02/28 21:29:08 tedu Exp $
a63 1
option		PULLDOWN_TEST	# use m_pulldown for IPv6 packet parsing
@


1.93
log
@do not entice people into playing with broken fs

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.92 2002/11/29 18:25:23 mickey Exp $
d55 4
a58 4
# layer filesystems.  not yet functional
#option		NULLFS		# loopback file system
#option		UMAPFS		# NULLFS + uid and gid remapping
#option		UNION		# union file system
@


1.92
log
@expose state table changes
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.91 2002/09/26 21:44:37 deraadt Exp $
a52 1
option		NULLFS		# loopback file system
d55 4
a58 2
option		UMAPFS		# NULLFS + uid and gid remapping
option		UNION		# union file system
@


1.91
log
@renable sppp and lmc, now free
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.90 2002/09/23 04:37:33 deraadt Exp $
d78 3
a80 2
pseudo-device	pf	1	# packet filter
pseudo-device	pflog	1	# pf log if
@


1.90
log
@turn off sppp, lmc, and cz until various licenses on those components are
resolved.  sorry -- i've been warning people for some time that i would
start to take this stance.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.89 2002/07/06 19:14:20 nordin Exp $
d84 1
a84 1
#pseudo-device	sppp	1	# Sync PPP/HDLC
@


1.89
log
@Remove kernel support for NTP. ok deraadt@@ and tholo@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.88 2002/05/16 21:28:16 provos Exp $
d84 1
a84 1
pseudo-device	sppp	1	# Sync PPP/HDLC
@


1.88
log
@systrace pseudo-device okay deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.87 2002/05/16 18:54:21 deraadt Exp $
a6 2

option		NTP		# hooks supporting the Network Time Protocol
@


1.87
log
@put TCP_ECN into the kernel
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.86 2002/03/14 00:42:25 miod Exp $
d99 1
@


1.86
log
@Turn the ptrace(2) syscall into a kernel compile option, option PTRACE in
your kernel configuration file.
By default, GENERIC will enable this.

When PTRACE is not enabled, several ptrace-like features of the procfs
filesystem will be disabled as well (namely, the ability to read and write
any process' registers, as well as attching, single stepping and detaching
to/from processes).

This should help paranoid people build better sandboxens, and us to build
smaller ramdisks.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.85 2001/09/17 17:04:27 art Exp $
d43 1
@


1.85
log
@No need to define TIMEZONE and DST to 0 here, param.c does that automagically.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.84 2001/08/09 14:32:59 deraadt Exp $
d18 1
@


1.85.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.85 2001/09/17 17:04:27 art Exp $
a17 1
option		PTRACE		# ptrace(2) system call
a41 1
option		TCP_ECN		# Explicit Congestion Notification for TCP
a96 1
pseudo-device	systrace 1	# system call tracing device
@


1.85.4.2
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.85.4.1 2002/06/11 03:28:26 art Exp $
d7 2
@


1.85.4.3
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
d53 1
a55 2
# layer filesystems
option		NULLFS		# loopback file system
d63 1
d78 2
a79 3
pseudo-device	pf		# packet filter
pseudo-device	pflog		# pf log if
pseudo-device	pfsync		# pf sync if
@


1.84
log
@change a maze of altq options into just "altq" for the base+red+cbq, and
then altq_* for each of the other * experimental options.  and.. enable
it by default in GENERIC.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.83 2001/08/08 15:15:28 jjbg Exp $
a7 2
option		TIMEZONE=0	# time zone to adjust RTC time by
option		DST=0		# daylight saving time used by RTC
@


1.83
log
@IPCOMP removal. deraadt@@ ok.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.82 2001/07/06 17:40:35 angelos Exp $
d63 1
@


1.82
log
@"option IPSEC needs the enc interface"
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.81 2001/07/05 16:51:32 jjbg Exp $
a77 1
#option		IPCOMP		# IPComp, requires IPsec
@


1.81
log
@IPComp. Turned off by default in GENERIC.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.80 2001/06/27 05:12:24 art Exp $
d88 1
a88 1
pseudo-device	enc	1	# IPSEC needs the encapsulation interface
@


1.80
log
@SWAPPAGER and DEVPAGER are distant memories from the past.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.79 2001/06/25 23:02:53 provos Exp $
d78 1
@


1.79
log
@we need only one pflog now
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.78 2001/06/25 20:48:13 provos Exp $
a10 3

option		SWAPPAGER	# paging; REQUIRED
option		DEVPAGER	# mmap() of devices
@


1.78
log
@first stab at packet logging for pf.  inspired by late night dreams of art.
we just pass drop and passed packets to different pseudo interface that
can be listened to with bpf.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.77 2001/06/25 04:31:50 kjell Exp $
d83 1
a83 1
pseudo-device	pflog	2	# pf log if
@


1.77
log
@move pf hooks to sys/conf/GENERIC
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.76 2001/05/30 02:12:22 deraadt Exp $
d83 1
@


1.76
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.75 2001/05/17 00:58:00 pvalchev Exp $
d82 1
@


1.75
log
@It's Daylight Saving Time, not Savings.  Fix comments.
Discussed with pjanzen@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.74 2001/05/16 17:14:39 millert Exp $
a77 2
option		IPFILTER	# IP packet filter for security
option		IPFILTER_LOG	# use /dev/ipl to log IPF
@


1.74
log
@Create COMPAT_25 and move ogetfsstat, ostatfs and ostatfs into it.
Create COMPAT_23 and move __osemctl, omsgctl, oshmctl there.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.73 2001/05/16 05:07:51 millert Exp $
d9 1
a9 1
option		DST=0		# daylight savings time used by RTC
@


1.73
log
@kill COMPAT_{09,10,11} kernel options.  We still need kern_info_09.c and kern_ipc_10.c for other compat modules.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.72 2001/05/04 03:33:32 deraadt Exp $
d32 3
a34 1
option		COMPAT_43	# Kernel compatibility with  4.3BSD
@


1.72
log
@vlan in GENERIC (ti(4) now has an issue, jason will deal)
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.71 2001/04/09 20:40:49 deraadt Exp $
d32 1
a32 4
#option		COMPAT_09	# Kernel compatibility with NetBSD 0.9,
#option		COMPAT_10	# NetBSD 1.0,
option		COMPAT_11	# NetBSD 1.1,
option		COMPAT_43	# and 4.3BSD
@


1.71
log
@FFS_SOFTUPDATES in sys/conf/GENERIC
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.70 2001/04/09 10:29:59 art Exp $
d89 1
a89 1
pseudo-device	sppp		# Sync PPP/HDLC
d92 3
a101 3
pseudo-device	bridge	2	# network bridging support
#pseudo-device	vlan 	2	# IEEE 802.1Q VLAN 
pseudo-device	gre	1	# GRE encapsulation interface
@


1.70
log
@LFS is not an option right now.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.69 2001/03/08 03:37:16 itojun Exp $
d41 1
@


1.69
log
@move gif* and faith* into sys/conf/GENERIC.  deraadt and angelos ok
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.68 2001/01/05 05:13:46 angelos Exp $
a41 1
#option		LFS		# log-structured file system
@


1.68
log
@Add commented-out MROUTING option (for completeness) -- (james@@oaktree.co.uk)
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.67 2000/12/31 00:15:22 angelos Exp $
d102 4
@


1.67
log
@Up the number of gif interfaces, we just need one enc interface.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.66 2000/10/13 04:21:14 itojun Exp $
d83 1
@


1.66
log
@enable PULLDOWN_TEST, and use m_pulldown for IPv6 packet parsing.
this will make it easier for IPv6 code to cope with uncontinuous packet
header on the mbuf (without this, ep interface on i386 chokes during IPv6
ND process).

should affect IPv6 only.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.65 2000/04/26 19:08:23 chris Exp $
d90 1
a90 1
pseudo-device	enc	4	# IPSEC needs the encapsulation interface
@


1.65
log
@pseudo-device vlan (commented out for now)
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.64 2000/03/22 18:08:12 provos Exp $
d68 1
@


1.64
log
@make UVM_SWAP_ENCRYPT default, still need to enable via sysctl
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.63 2000/03/17 10:25:20 angelos Exp $
d98 1
@


1.63
log
@Cryptographic services framework, and software "device driver". The
idea is to support various cryptographic hardware accelerators (which
may be (detachable) cards, secondary/tertiary/etc processors,
software crypto, etc). Supports session migration between crypto
devices. What it doesn't (yet) support:
 - multiple instances of the same algorithm used in the same session
 - use of multiple crypto drivers in the same session
 - asymmetric crypto

No support for a userland device yet.

IPsec code path modified to allow for asynchronous cryptography
(callbacks used in both input and output processing). Some unrelated
code simplification done in the process (especially for AH).

Development of this code kindly supported by Network Security
Technologies (NSTI). The code was writen mostly in Greece, and is
being committed from Montreal.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.62 2000/03/02 10:50:29 art Exp $
d30 1
a30 1
#option		UVM_SWAP_ENCRYPT# support encryption of pages going to swap
@


1.62
log
@Add an option DDB_SAFE_CONSOLE that defaults db_console to 1.
In many cases, setting db_console in /etc/rc is too late.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.61 2000/01/09 22:00:16 itojun Exp $
d23 2
@


1.61
log
@add INET6 into conf/GENERIC.
add pseudo-devices for IPv6 into arch/*/conf/GENERIC.
nuke arch/*/conf/GENERIC.v6.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.60 2000/01/08 04:34:37 angelos Exp $
d16 1
@


1.61.2.1
log
@Sync with -current
@
text
@d1 1
a1 1
#	$OpenBSD$
a15 1
#option		DDB_SAFE_CONSOLE # allow break into ddb during boot
a22 2
option		CRYPTO		# Cryptographic framework

d27 1
a27 1
option		UVM_SWAP_ENCRYPT# support encryption of pages going to swap
@


1.61.2.2
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.71 2001/04/09 20:40:49 deraadt Exp $
a40 1
option		FFS_SOFTUPDATES	# Soft updates
d42 1
a67 1
option		PULLDOWN_TEST	# use m_pulldown for IPv6 packet parsing
a81 1
#option		MROUTING	# Multicast router
d89 1
a89 1
pseudo-device	enc	1	# IPSEC needs the encapsulation interface
a97 1
#pseudo-device	vlan 	2	# IEEE 802.1Q VLAN 
a98 4

# for IPv6
pseudo-device	gif	4	# IPv[46] over IPv[46] tunnel (RFC1933)
#pseudo-device	faith	1	# IPv[46] tcp relay translation i/f
@


1.61.2.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.61.2.2 2001/05/14 22:06:47 niklas Exp $
d9 1
a9 1
option		DST=0		# daylight saving time used by RTC
d12 3
d32 3
a34 2
#option		COMPAT_23	# Kernel compatibility with OpenBSD 2.3,
option		COMPAT_25	# 2.5,
d79 2
a84 2
pseudo-device	pf	1	# packet filter
pseudo-device	pflog	1	# pf log if
d89 1
a89 1
pseudo-device	sppp	1	# Sync PPP/HDLC
a91 3
pseudo-device	bridge	2	# network bridging support
pseudo-device	vlan 	2	# IEEE 802.1Q VLAN 
pseudo-device	gre	1	# GRE encapsulation interface
d99 3
@


1.61.2.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.61.2.3 2001/07/04 10:39:54 niklas Exp $
d8 2
a62 1
option		ALTQ		# ALTQ base
d87 1
a87 1
pseudo-device	enc	1	# option IPSEC needs the encapsulation interface
@


1.61.2.5
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
#	$OpenBSD$
a17 1
option		PTRACE		# ptrace(2) system call
@


1.61.2.6
log
@Sync the SMP branch with 3.3
@
text
@d8 2
a42 1
option		TCP_ECN		# Explicit Congestion Notification for TCP
d54 1
d57 2
a58 4
# layer filesystems.  not yet functional
#option		NULLFS		# loopback file system
#option		UMAPFS		# NULLFS + uid and gid remapping
#option		UNION		# union file system
d79 2
a80 3
pseudo-device	pf		# packet filter
pseudo-device	pflog		# pf log if
pseudo-device	pfsync		# pf sync if
a97 1
pseudo-device	systrace 1	# system call tracing device
@


1.61.2.7
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d55 4
a58 4
# layer filesystems
option		NULLFS		# loopback file system
option		UMAPFS		# NULLFS + uid and gid remapping
option		UNION		# union file system
d64 1
@


1.61.2.8
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a34 1
option		UFS_DIRHASH	# hash large directories
d38 1
a38 1
option		XFS		# xfs filesystem
a41 1
option		TCP_SIGNATURE	# TCP MD5 Signatures, for BGP routing sessions
d43 1
a91 1
pseudo-device	carp	2	# CARP protocol support
@


1.61.2.9
log
@Merge with the trunk
@
text
@a14 1
option		ACCOUNTING	# acct(2) process accounting
d27 1
a27 2
#option		COMPAT_25	# 2.5,
option		COMPAT_35	# 3.5,
d82 4
d87 1
d89 3
d93 1
d95 1
a95 1
pseudo-device	pty	16	# initial number of pseudo-terminals
a101 12
# clonable devices
pseudo-device	bpfilter 	# packet filter
pseudo-device	bridge		# network bridging support
pseudo-device	carp		# CARP protocol support
pseudo-device	gif		# IPv[46] over IPv[46] tunnel (RFC1933)
pseudo-device	gre		# GRE encapsulation interface
pseudo-device	loop		# network loopback
pseudo-device	ppp		# PPP
pseudo-device	sl		# CSLIP
pseudo-device	tun		# network tunneling over tty
pseudo-device	vlan 		# IEEE 802.1Q VLAN 

d103 1
@


1.60
log
@gre(4) interface in GENERIC
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.59 1999/12/30 19:09:58 provos Exp $
d64 1
@


1.59
log
@insert commented UVM_SWAP_ENCRYPTION
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.58 1999/10/29 05:15:27 angelos Exp $
d94 1
@


1.58
log
@Up the number of enc interfaces.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.57 1999/10/06 05:25:27 millert Exp $
d26 2
@


1.57
log
@Put TCP_SACK back in as it is not turned on by default anyway.
That way, users who want it can turn it on via sysctl.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.56 1999/10/03 21:26:02 niklas Exp $
d83 1
a83 1
pseudo-device	enc	1	# IPSEC needs the encapsulation interface
@


1.56
log
@Remove commented out sample of SHMMAXPGS setting with machine-specific
comment.  People should read options.4 for such info anyhow, not this file.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.55 1999/10/01 22:36:32 deraadt Exp $
d42 1
a42 1
#option		TCP_SACK	# Selective Acknowledgements for TCP
@


1.55
log
@SACK is not bug-free yet; off for 2.6
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.54 1999/09/29 14:13:33 art Exp $
a25 1
#option		SHMMAXPGS=1024	# 1024 pages is the default
@


1.54
log
@commented out profiling options
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.53 1999/09/29 00:01:49 angelos Exp $
d43 1
a43 1
option		TCP_SACK	# Selective Acknowledgements for TCP
@


1.53
log
@Add option NETATALK (commented out).
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.52 1999/07/06 20:41:54 cmetz Exp $
d17 2
@


1.52
log
@Added TCP_SIGNATURE option.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.51 1999/07/01 23:10:39 deraadt Exp $
d69 1
@


1.51
log
@lmc driver; ported by chris@@dqc.org
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.50 1999/06/08 01:30:13 provos Exp $
d43 1
@


1.50
log
@disable TCP_FACK for now
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.49 1999/05/27 23:52:03 art Exp $
d78 1
@


1.49
log
@remove the NO_KMEMSTATS hack from sys/malloc.h
add KMEMSTATS to GENERIC to keep old behavior
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.48 1999/04/20 22:35:30 provos Exp $
d42 1
a42 1
option		TCP_FACK	# Forward Acknowledgements for TCP
@


1.48
log
@renable TCP_SACK and TCP_FACK again. if you have problems direct flaims
to me.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.47 1999/04/11 19:47:10 niklas Exp $
d19 1
@


1.47
log
@Reenable IPSEC now that it is off by default, but can be enabled via sysctl
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.46 1999/04/07 07:20:31 deraadt Exp $
d40 2
a41 2
#option		TCP_SACK	# Selective Acknowledgements for TCP
#option		TCP_FACK	# Forward Acknowledgements for TCP
@


1.46
log
@and enc is not default either
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.45 1999/04/07 06:45:39 deraadt Exp $
d59 1
a59 1
#option		IPSEC		# IPsec
d78 1
a78 1
#pseudo-device	enc	1	# IPSEC needs the encryption device
@


1.45
log
@disable IPSEC by default
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.44 1999/03/30 00:19:05 niklas Exp $
d78 1
a78 1
pseudo-device	enc	1	# encryption device
@


1.44
log
@make option IPSEC imply option KEY
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.43 1999/02/28 06:52:05 deraadt Exp $
d59 1
a59 1
option		IPSEC		# IPsec
@


1.43
log
@support bridging by default
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.42 1999/02/24 22:36:42 angelos Exp $
d60 1
a60 1
option		KEY		# PF_KEY
@


1.42
log
@Add option KEY in GENERIC, and update files.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.41 1998/12/04 21:52:24 downsj Exp $
d86 1
@


1.41
log
@Disable TCP_SACK and TCP_FACK until such time as they don't cause connection
problems between different revisions of OpenBSD.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.40 1998/11/25 06:12:38 millert Exp $
d60 1
@


1.40
log
@Re-enable TCP_SACK/TCP_FACK now that it works on alpha
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.39 1998/11/19 18:27:02 deraadt Exp $
d40 2
a41 2
option		TCP_SACK	# Selective Acknowledgements for TCP
option		TCP_FACK	# Forward Acknowledgements for TCP
@


1.39
log
@disable FACK/SACK again; they still panic alphas.  Sorry Niels, but you have to do better...
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.38 1998/11/19 01:57:03 provos Exp $
d40 2
a41 2
#option		TCP_SACK	# Selective Acknowledgements for TCP
#option		TCP_FACK	# Forward Acknowledgements for TCP
@


1.38
log
@reenable SACK and FACK
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.37 1998/11/18 17:09:45 deraadt Exp $
d40 2
a41 2
option		TCP_SACK	# Selective Acknowledgements for TCP
option		TCP_FACK	# Forward Acknowledgements for TCP
@


1.37
log
@disable SACK/FACK until provos learns how to write code which does not do unaligned accesses
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.36 1998/11/17 19:29:52 provos Exp $
d40 2
a41 2
#option		TCP_SACK	# Selective Acknowledgements for TCP
#option		TCP_FACK	# Forward Acknowledgements for TCP
@


1.36
log
@enable TCP_SACK and TCP_FACK by default
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.35 1998/09/19 20:03:18 deraadt Exp $
d40 2
a41 2
option		TCP_SACK	# Selective Acknowledgements for TCP
option		TCP_FACK	# Forward Acknowledgements for TCP
@


1.35
log
@kill COMPAT_09 and COMPAT_10
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.34 1998/09/01 23:52:38 art Exp $
d39 3
@


1.34
log
@add a commented out XFS option
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.33 1998/08/24 05:27:27 millert Exp $
d25 2
a26 2
option		COMPAT_09	# Kernel compatibility with NetBSD 0.9,
option		COMPAT_10	# NetBSD 1.0,
@


1.33
log
@add ksyms to GENERIC.  Since DDB is already there this is safe.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.32 1998/06/08 17:28:11 deraadt Exp $
d38 1
a38 1

@


1.32
log
@makeoptions
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.31 1998/05/20 05:07:30 gene Exp $
d81 1
@


1.31
log
@Enable NTP again now that mickey has solved the pentium timer problem.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.30 1998/05/06 23:04:42 gene Exp $
d16 1
a16 1
#makeoption	DEBUG="-g"	# compile full symbol table
@


1.30
log
@Comment out NTP for now as it seems to expose a bug in the use of performance
timers on the Pentium.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.29 1998/04/26 21:14:08 millert Exp $
d10 1
a10 1
#option		NTP		# hooks supporting the Network Time Protocol
@


1.29
log
@typo
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.28 1998/04/25 04:32:03 gene Exp $
d10 1
a10 1
option		NTP		# hooks supporting the Network Time Protocol
@


1.28
log
@Add option NTP to the standard set of things built into the kernel.
Adds minimal bloat vs. functionallity.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.27 1998/02/15 00:38:20 deraadt Exp $
d10 1
a10 1
option		NTP		# hooks supporint the Network Time Protocol
@


1.27
log
@provide an lo1 for the netmask hack
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.26 1997/11/05 01:58:52 deraadt Exp $
d10 1
@


1.26
log
@noone cares about the strip driver
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.25 1997/09/24 23:03:54 mickey Exp $
d68 1
a68 1
pseudo-device	loop	1	# network loopback
@


1.25
log
@correct PORTAL comment; kstailey@@
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.24 1997/09/02 04:04:12 downsj Exp $
d74 1
a74 1
pseudo-device	strip	1	# Starmode Radio IP interface
@


1.24
log
@Remove COMPAT_NOMID, it should never have been here in the first place.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.23 1997/07/01 23:13:16 provos Exp $
d48 1
a48 1
option		PORTAL		# create sockets with open(2)
@


1.23
log
@only need one encap device now
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.22 1997/06/25 10:28:48 downsj Exp $
d24 1
a24 2
option		COMPAT_NOMID	# compatibility with 386BSD, BSDI, NetBSD 0.8,
option		COMPAT_09	# NetBSD 0.9,
@


1.22
log
@..and EXT2FS for all.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.21 1997/06/23 19:04:27 kstailey Exp $
d74 1
a74 1
pseudo-device	enc	4	# encryption device
@


1.21
log
@activate IPFILTER_LOG
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.20 1997/06/23 17:35:49 kstailey Exp $
d36 1
@


1.20
log
@IPFILTER_LOG should be a kernel option
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.19 1997/06/23 02:34:37 gene Exp $
d64 1
a64 1
#option		IPFILTER_LOG	# use /dev/ipl	XXX - still in ip_fil_compat.h
@


1.19
log
@Add option PPP_BSDCOMP and PPP_DEFLATE
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.18 1997/06/21 01:59:44 deraadt Exp $
d64 1
@


1.18
log
@4 strips? there is no need for that
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.17 1997/06/02 04:40:23 deraadt Exp $
d64 2
@


1.17
log
@add strip
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.16 1997/05/29 19:24:27 deraadt Exp $
d71 1
a71 1
pseudo-device	strip	4	# Starmode Radio IP interface
@


1.16
log
@add ipsec by default
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.15 1997/04/17 07:24:08 deraadt Exp $
d70 2
a71 1
pseudo-device	enc		4	# encryption device
@


1.15
log
@not all ports use rd, duh
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.14 1997/04/14 05:12:45 deraadt Exp $
d55 1
d70 1
@


1.14
log
@rd pdev
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.13 1997/01/15 07:06:12 mickey Exp $
a73 1
pseudo-device	rd	2	# ramdisk (don't remove ;)
@


1.13
log
@add IPXIP option commented out, explanation.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.12 1997/01/13 23:32:16 niklas Exp $
d74 1
@


1.12
log
@Add a commented out option NSIP with explanation
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.11 1996/09/20 06:44:45 deraadt Exp $
d58 1
@


1.11
log
@do not fool people into thinking VNODEPAGER is an option; netbsd pr#2757, erik@@aarhus1.uni-c.dk
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.10 1996/08/31 01:58:49 deraadt Exp $
d56 1
@


1.10
log
@disable TCP_COMPAT_42 by default
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.9 1996/08/29 07:40:24 deraadt Exp $
a11 1
option		VNODEPAGER	# mmap() of files
@


1.9
log
@random
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.8 1996/08/16 10:17:13 mickey Exp $
d30 1
a30 1
option		TCP_COMPAT_42	# TCP bug compatibility with 4.2BSD
@


1.8
log
@note ipx
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.7 1996/08/11 20:47:56 deraadt Exp $
a72 2

pseudo-device	rnd		# random data source
@


1.7
log
@default to INSECURE
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.6 1996/08/11 20:45:40 deraadt Exp $
d57 1
@


1.6
log
@disable LFS
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.5 1996/07/29 21:01:11 downsj Exp $
d6 1
a6 1
option		INSECURE	# insecure; allow /dev/mem writing for X
@


1.5
log
@Comment out all obscure networking support; XNS, in particular, is very
busted and crashes people's machines when using ppp.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.4 1996/07/27 11:31:00 deraadt Exp $
d36 1
a36 1
option		LFS		# log-structured file system
@


1.4
log
@BOOT_CONFIG for all arch, not just i386
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.3 1996/07/15 15:17:43 mickey Exp $
d56 4
a59 4
option		NS		# XNS
option		ISO,TPIP	# OSI
option		EON		# OSI tunneling over IP
option		CCITT,LLC,HDLC	# X.25
@


1.3
log
@add rnd device.
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.2 1996/06/29 19:17:12 deraadt Exp $
d62 10
a71 10
pseudo-device	loop	1		# network loopback
pseudo-device	bpfilter 8		# packet filter
pseudo-device	sl	2		# CSLIP
pseudo-device	ppp	2		# PPP
pseudo-device	tun	2		# network tunneling over tty

pseudo-device	pty	64		# pseudo-terminals
pseudo-device	tb	1		# tablet line discipline
pseudo-device	vnd	4		# paging to files
pseudo-device	ccd	4		# concatenated disk devices
d73 3
a75 1
pseudo-device	rnd			# random data source
@


1.2
log
@option not options
@
text
@d1 1
a1 1
#	$OpenBSD: GENERIC,v 1.1 1996/06/23 12:15:04 deraadt Exp $
d72 2
@


1.1
log
@GENERIC to be included by arch/XXX/conf/GENERIC; this includes all MI options & pseudo-devices
@
text
@d1 1
a1 1
#	$OpenBSD$
d3 1
a3 1
#	Machine-independent options; used by all architectures for their
d6 1
a6 1
options		INSECURE	# insecure; allow /dev/mem writing for X
d8 2
a9 2
options		TIMEZONE=0	# time zone to adjust RTC time by
options		DST=0		# daylight savings time used by RTC
d11 50
a60 50
options		SWAPPAGER	# paging; REQUIRED
options		VNODEPAGER	# mmap() of files
options		DEVPAGER	# mmap() of devices

options		DDB		# in-kernel debugger
#makeoptions	DEBUG="-g"	# compile full symbol table
options		DIAGNOSTIC	# internal consistency checks
options		KTRACE		# system call tracing, a la ktrace(1)

options		SYSVMSG		# System V-like message queues
options		SYSVSEM		# System V-like semaphores
options		SYSVSHM		# System V-like memory sharing
#options	SHMMAXPGS=1024	# 1024 pages is the default

options		COMPAT_NOMID	# compatibility with 386BSD, BSDI, NetBSD 0.8,
options		COMPAT_09	# NetBSD 0.9,
options		COMPAT_10	# NetBSD 1.0,
options		COMPAT_11	# NetBSD 1.1,
options		COMPAT_43	# and 4.3BSD
options		TCP_COMPAT_42	# TCP bug compatibility with 4.2BSD

options		LKM		# loadable kernel modules

options		FFS		# UFS
options		QUOTA		# UFS quotas
options		LFS		# log-structured file system
options		MFS		# memory file system


options		NFSCLIENT	# Network File System client
options		NFSSERVER	# Network File System server

options		CD9660		# ISO 9660 + Rock Ridge file system
options		MSDOSFS		# MS-DOS file system
options		FDESC		# /dev/fd
options		FIFO		# FIFOs; RECOMMENDED
options		KERNFS		# /kern
options		NULLFS		# loopback file system
options		PORTAL		# create sockets with open(2)
options		PROCFS		# /proc
options		UMAPFS		# NULLFS + uid and gid remapping
options		UNION		# union file system

#options	GATEWAY		# packet forwarding
options		INET		# IP + ICMP + TCP + UDP
options		NS		# XNS
options		ISO,TPIP	# OSI
options		EON		# OSI tunneling over IP
options		CCITT,LLC,HDLC	# X.25
options		IPFILTER	# IP packet filter for security
@
