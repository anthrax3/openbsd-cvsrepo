head	1.7;
access;
symbols
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.22
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2007.06.06.10.05.48;	author henning;	state dead;
branches;
next	1.6;

1.6
date	2003.06.02.23.28.16;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.14.02.02.56;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.12;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.07.23.20.37.20;	author mickey;	state Exp;
branches
	1.3.12.1
	1.3.22.1;
next	1.2;

1.2
date	96.10.26.09.34.50;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.08.16.09.15.59;	author mickey;	state Exp;
branches;
next	;

1.3.12.1
date	2002.03.28.14.57.37;	author niklas;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2003.05.16.00.29.45;	author niklas;	state Exp;
branches;
next	1.3.12.3;

1.3.12.3
date	2003.06.07.11.06.09;	author ho;	state Exp;
branches;
next	;

1.3.22.1
date	2002.06.11.03.31.38;	author art;	state Exp;
branches;
next	1.3.22.2;

1.3.22.2
date	2003.05.19.22.41.16;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@bye bye
most of the IPX removal work done @@ calgary airport
@
text
@/*	$OpenBSD: ipx_if.h,v 1.6 2003/06/02 23:28:16 millert Exp $	*/

/*-
 *
 * Copyright (c) 1996 Michael Shalayeff
 * Copyright (c) 1995, Mike Mitchell
 * Copyright (c) 1984, 1985, 1986, 1987, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 *	@@(#)ipx_if.h
 *
 * from FreeBSD Id: ipx_if.h,v 1.5 1995/11/24 12:25:05 bde Exp
 */

#ifndef _NETIPX_IPX_IF_H_
#define	_NETIPX_IPX_IF_H_

/*
 * Interface address.  One of these structures
 * is allocated for each interface with an internet address.
 * The ifaddr structure contains the protocol-independent part
 * of the structure and is assumed to be first.
 */

struct ipx_ifaddr {
	struct	ifaddr ia_ifa;		/* protocol-independent info */
#define	ia_ifp		ia_ifa.ifa_ifp
#define	ia_flags	ia_ifa.ifa_flags
	TAILQ_ENTRY(ipx_ifaddr)	ia_list;/* list of IPX addresses */
	struct	sockaddr_ipx ia_addr;	/* reserve space for my address */
	struct	sockaddr_ipx ia_dstaddr;/* space for my broadcast address */
#define ia_broadaddr	ia_dstaddr
	struct	sockaddr_ipx ia_netmask;/* space for my network mask */
};

struct	ipx_aliasreq {
	char	ifra_name[IFNAMSIZ];		/* if name, e.g. "en0" */
	struct	sockaddr_ipx ifra_addr;
	struct	sockaddr_ipx ifra_dstaddr;
#define ifra_broadaddr ifra_dstaddr
};
/*
 * Given a pointer to an ipx_ifaddr (ifaddr),
 * return a pointer to the addr as a sockadd_ipx.
 */

#define	IA_SIPX(ia) (&(((struct ipx_ifaddr *)(ia))->ia_addr))

#define IPX_ETHERTYPE_8023	0x0001	/* Ethernet_802.3 */
#define IPX_ETHERTYPE_8022	0x0004	/* Ethernet_802.2 */
#define	IPX_ETHERTYPE_SNAP	0x0005	/* Ethernet_SNAP, internal use only */
#define	IPX_ETHERTYPE_8022TR	0x0011	/* Ethernet_802.2 w/ trailers */
#define IPX_ETHERTYPE_II	0x8137	/* Ethernet_II */
#define IPX_ETHERTYPE_IPX	IPX_ETHERTYPE_II

#ifdef	IPXIP
struct ipxip_req {
	struct sockaddr rq_ipx;	/* must be ipx format destination */
	struct sockaddr rq_ip;	/* must be ip format gateway */
	u_int16_t	rq_flags;
};
#endif

#ifdef	_KERNEL
TAILQ_HEAD(ipx_ifaddrhead, ipx_ifaddr);
extern struct	ifqueue	ipxintrq;	/* IPX input packet queue */
extern struct	ipx_ifaddrhead ipx_ifaddr;

struct ipx_ifaddr *
	ipx_iaonnetof(struct ipx_addr *dst);
int	ipx_ifinit(struct ifnet *ifp, struct ipx_ifaddr *ia,
			struct sockaddr_ipx *sipx, int scrub);
void	ipx_ifscrub(struct ifnet *ifp, struct ipx_ifaddr *ia);
#endif

#endif /* !_NETIPX_IPX_IF_H_ */
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_if.h,v 1.5 2003/05/14 02:02:56 itojun Exp $	*/
@


1.5
log
@move ETHERTYPE_xx declarations to <net/ethertypes.h>.  meets netbsd practice.
deraadt ok
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_if.h,v 1.4 2002/03/14 01:27:12 millert Exp $	*/
d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_if.h,v 1.3 1997/07/23 20:37:20 mickey Exp $	*/
d77 6
a82 6
#define ETHERTYPE_8023	0x0001	/* Ethernet_802.3 */
#define ETHERTYPE_8022	0x0004	/* Ethernet_802.2 */
#define	ETHERTYPE_SNAP	0x0005	/* Ethernet_SNAP, internal use only */
#define	ETHERTYPE_8022TR 0x0011	/* Ethernet_802.2 w/ trailers */
#define ETHERTYPE_II	0x8137	/* Ethernet_II */
#define ETHERTYPE_IPX	ETHERTYPE_II
@


1.3
log
@define ETHERTYPE_IPX
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_if.h,v 1.2 1996/10/26 09:34:50 mickey Exp $	*/
d98 4
a101 4
	ipx_iaonnetof __P((struct ipx_addr *dst));
int	ipx_ifinit __P((struct ifnet *ifp, struct ipx_ifaddr *ia,
			struct sockaddr_ipx *sipx, int scrub));
void	ipx_ifscrub __P((struct ifnet *ifp, struct ipx_ifaddr *ia));
@


1.3.22.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_if.h,v 1.3 1997/07/23 20:37:20 mickey Exp $	*/
d98 4
a101 4
	ipx_iaonnetof(struct ipx_addr *dst);
int	ipx_ifinit(struct ifnet *ifp, struct ipx_ifaddr *ia,
			struct sockaddr_ipx *sipx, int scrub);
void	ipx_ifscrub(struct ifnet *ifp, struct ipx_ifaddr *ia);
@


1.3.22.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d77 6
a82 6
#define IPX_ETHERTYPE_8023	0x0001	/* Ethernet_802.3 */
#define IPX_ETHERTYPE_8022	0x0004	/* Ethernet_802.2 */
#define	IPX_ETHERTYPE_SNAP	0x0005	/* Ethernet_SNAP, internal use only */
#define	IPX_ETHERTYPE_8022TR	0x0011	/* Ethernet_802.2 w/ trailers */
#define IPX_ETHERTYPE_II	0x8137	/* Ethernet_II */
#define IPX_ETHERTYPE_IPX	IPX_ETHERTYPE_II
@


1.3.12.1
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d98 4
a101 4
	ipx_iaonnetof(struct ipx_addr *dst);
int	ipx_ifinit(struct ifnet *ifp, struct ipx_ifaddr *ia,
			struct sockaddr_ipx *sipx, int scrub);
void	ipx_ifscrub(struct ifnet *ifp, struct ipx_ifaddr *ia);
@


1.3.12.2
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d77 6
a82 6
#define IPX_ETHERTYPE_8023	0x0001	/* Ethernet_802.3 */
#define IPX_ETHERTYPE_8022	0x0004	/* Ethernet_802.2 */
#define	IPX_ETHERTYPE_SNAP	0x0005	/* Ethernet_SNAP, internal use only */
#define	IPX_ETHERTYPE_8022TR	0x0011	/* Ethernet_802.2 w/ trailers */
#define IPX_ETHERTYPE_II	0x8137	/* Ethernet_II */
#define IPX_ETHERTYPE_IPX	IPX_ETHERTYPE_II
@


1.3.12.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_if.h,v 1.3.12.2 2003/05/16 00:29:45 niklas Exp $	*/
d18 5
a22 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2
log
@remove my CVS tag.
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_if.h,v 1.1 1996/08/16 09:15:59 mickey Exp $	*/
d82 1
@


1.1
log
@initial commit of Free's netipx w/ some changes.
ip<-->ipx encapsulations does not work still.
spx suspected to do too.
@
text
@d1 1
a1 2
/*	$OpenBSD$	*/
/*	$NOWHERE: ipx_if.h,v 1.2 1996/05/07 09:49:41 mickey Exp $	*/
@
