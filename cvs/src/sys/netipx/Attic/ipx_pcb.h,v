head	1.7;
access;
symbols
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.3.0.24
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.22
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2007.06.06.10.05.48;	author henning;	state dead;
branches;
next	1.6;

1.6
date	2003.06.02.23.28.16;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.03.16.12;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.12;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.11.25.08.20.00;	author mickey;	state Exp;
branches
	1.3.14.1
	1.3.24.1;
next	1.2;

1.2
date	96.10.26.09.34.53;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.08.16.09.16.01;	author mickey;	state Exp;
branches;
next	;

1.3.14.1
date	2002.03.28.14.57.37;	author niklas;	state Exp;
branches;
next	1.3.14.2;

1.3.14.2
date	2003.06.07.11.06.09;	author ho;	state Exp;
branches;
next	;

1.3.24.1
date	2002.06.11.03.31.38;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@bye bye
most of the IPX removal work done @@ calgary airport
@
text
@/*	$OpenBSD: ipx_pcb.h,v 1.6 2003/06/02 23:28:16 millert Exp $	*/

/*-
 *
 * Copyright (c) 1996 Michael Shalayeff
 * Copyright (c) 1995, Mike Mitchell
 * Copyright (c) 1984, 1985, 1986, 1987, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)ipx_pcb.h
 *
 * from FreeBSD Id: ipx_pcb.h,v 1.5 1995/11/24 12:25:10 bde Exp
 */

#ifndef _NETIPX_IPX_PCB_H_
#define	_NETIPX_IPX_PCB_H_

/*
 * IPX protocol interface control block.
 */
struct ipxpcb {
	LIST_ENTRY(ipxpcb)	ipxp_hash;
	CIRCLEQ_ENTRY(ipxpcb)	ipxp_queue;
	struct	ipxpcbtable	*ipxp_table;	/* back pointer to the table */
	struct	socket		*ipxp_socket;	/* back pointer to socket */
	struct	ipx_addr	ipxp_faddr;	/* destination address */
	struct	ipx_addr	ipxp_laddr;	/* socket's address */
#define ipxp_lport ipxp_laddr.ipx_port
#define ipxp_fport ipxp_faddr.ipx_port
	caddr_t	ipxp_ppcb;		/* protocol specific stuff */
	struct	route ipxp_route;	/* routing information */
	struct	ipx_addr ipxp_lastdst;	/* validate cached route for dg socks*/
	u_long	ipxp_notify_param;	/* extra info passed via ipx_pcbnotify*/
	u_short	ipxp_flags;
	u_char	ipxp_dpt;		/* default packet type for ipx_output */
	u_char	ipxp_rpt;		/* last received packet type by ipx_input() */
};

struct ipxpcbtable {
	CIRCLEQ_HEAD(, ipxpcb)	ipxpt_queue;
	LIST_HEAD(ipxppcbhead, ipxpcb) *ipxpt_hashtbl;
	u_long		ipxpt_hash;
	u_int16_t	ipxpt_lport;
};

/* possible flags */

#define IPXP_IN_ABORT	0x1	/* calling abort through socket */
#define IPXP_RAWIN	0x2	/* show headers on input */
#define IPXP_RAWOUT	0x4	/* show header on output */
#define IPXP_ALL_PACKETS 0x8	/* Turn off higher proto processing */

#define	IPX_WILDCARD	1

#define	sotoipxpcb(so)		((struct ipxpcb *)((so)->so_pcb))

/*
 * Nominal space allocated to a IPX socket.
 */
#define	IPXSNDQ		16384
#define	IPXRCVQ		40960

#ifdef _KERNEL
extern struct ipxpcbtable ipxcbtable, ipxrawcbtable;	/* head of list */

void	ipx_pcbinit(struct ipxpcbtable *, int);
int	ipx_pcballoc(struct socket *so, struct ipxpcbtable *head);
int	ipx_pcbbind(struct ipxpcb *ipxp, struct mbuf *nam);
int	ipx_pcbconnect(struct ipxpcb *ipxp, struct mbuf *nam);
void	ipx_pcbdetach(struct ipxpcb *ipxp);
void	ipx_pcbdisconnect(struct ipxpcb *ipxp);
struct ipxpcb *ipx_pcblookup(struct ipx_addr *faddr, int lport, int wildp);
void	ipx_pcbnotify(struct ipx_addr *dst, int errno,
	    void (*notify)(struct ipxpcb *), long param);
void	ipx_setpeeraddr(struct ipxpcb *ipxp, struct mbuf *nam);
void	ipx_setsockaddr(struct ipxpcb *ipxp, struct mbuf *nam);
#endif

#endif /* !_NETIPX_IPX_PCB_H_ */
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_pcb.h,v 1.5 2002/03/14 03:16:12 millert Exp $	*/
@


1.5
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_pcb.h,v 1.4 2002/03/14 01:27:12 millert Exp $	*/
d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_pcb.h,v 1.3 1996/11/25 08:20:00 mickey Exp $	*/
d100 3
a102 4
struct ipxpcb *
	ipx_pcblookup(struct ipx_addr *faddr, int lport, int wildp);
void	ipx_pcbnotify __P((struct ipx_addr *dst, int errno,
			   void (*notify)(struct ipxpcb *), long param));
@


1.3
log
@sysctl entries;
control ipx {send,recv} queues size
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_pcb.h,v 1.2 1996/10/26 09:34:53 mickey Exp $	*/
d94 6
a99 6
void	ipx_pcbinit __P((struct ipxpcbtable *, int));
int	ipx_pcballoc __P((struct socket *so, struct ipxpcbtable *head));
int	ipx_pcbbind __P((struct ipxpcb *ipxp, struct mbuf *nam));
int	ipx_pcbconnect __P((struct ipxpcb *ipxp, struct mbuf *nam));
void	ipx_pcbdetach __P((struct ipxpcb *ipxp));
void	ipx_pcbdisconnect __P((struct ipxpcb *ipxp));
d101 1
a101 1
	ipx_pcblookup __P((struct ipx_addr *faddr, int lport, int wildp));
d104 2
a105 2
void	ipx_setpeeraddr __P((struct ipxpcb *ipxp, struct mbuf *nam));
void	ipx_setsockaddr __P((struct ipxpcb *ipxp, struct mbuf *nam));
@


1.3.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_pcb.h,v 1.3 1996/11/25 08:20:00 mickey Exp $	*/
d94 12
a105 11
void	ipx_pcbinit(struct ipxpcbtable *, int);
int	ipx_pcballoc(struct socket *so, struct ipxpcbtable *head);
int	ipx_pcbbind(struct ipxpcb *ipxp, struct mbuf *nam);
int	ipx_pcbconnect(struct ipxpcb *ipxp, struct mbuf *nam);
void	ipx_pcbdetach(struct ipxpcb *ipxp);
void	ipx_pcbdisconnect(struct ipxpcb *ipxp);
struct ipxpcb *ipx_pcblookup(struct ipx_addr *faddr, int lport, int wildp);
void	ipx_pcbnotify(struct ipx_addr *dst, int errno,
	    void (*notify)(struct ipxpcb *), long param);
void	ipx_setpeeraddr(struct ipxpcb *ipxp, struct mbuf *nam);
void	ipx_setsockaddr(struct ipxpcb *ipxp, struct mbuf *nam);
@


1.3.14.1
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d94 12
a105 11
void	ipx_pcbinit(struct ipxpcbtable *, int);
int	ipx_pcballoc(struct socket *so, struct ipxpcbtable *head);
int	ipx_pcbbind(struct ipxpcb *ipxp, struct mbuf *nam);
int	ipx_pcbconnect(struct ipxpcb *ipxp, struct mbuf *nam);
void	ipx_pcbdetach(struct ipxpcb *ipxp);
void	ipx_pcbdisconnect(struct ipxpcb *ipxp);
struct ipxpcb *ipx_pcblookup(struct ipx_addr *faddr, int lport, int wildp);
void	ipx_pcbnotify(struct ipx_addr *dst, int errno,
	    void (*notify)(struct ipxpcb *), long param);
void	ipx_setpeeraddr(struct ipxpcb *ipxp, struct mbuf *nam);
void	ipx_setsockaddr(struct ipxpcb *ipxp, struct mbuf *nam);
@


1.3.14.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_pcb.h,v 1.3.14.1 2002/03/28 14:57:37 niklas Exp $	*/
d18 5
a22 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2
log
@remove my CVS tag.
@
text
@d1 1
a1 1
/*	$OpenBSD: ipx_pcb.h,v 1.1 1996/08/16 09:16:01 mickey Exp $	*/
d88 2
a89 2
#define	IPXSNDQ		2048
#define	IPXRCVQ		2048
@


1.1
log
@initial commit of Free's netipx w/ some changes.
ip<-->ipx encapsulations does not work still.
spx suspected to do too.
@
text
@d1 1
a1 2
/*	$OpenBSD$	*/
/*	$NOWHERE: ipx_pcb.h,v 1.2 1996/05/07 09:49:47 mickey Exp $	*/
@
