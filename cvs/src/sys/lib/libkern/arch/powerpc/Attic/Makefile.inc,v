head	1.14;
access;
symbols
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.8
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.8
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.6
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.8.0.4
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.2
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	powerpc_1:1.1.1.1;
locks; strict;
comment	@# @;


1.14
date	2007.11.25.18.25.35;	author deraadt;	state dead;
branches;
next	1.13;

1.13
date	2007.05.04.22.24.34;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2005.07.20.23.06.44;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2005.07.20.19.39.39;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.01.17.00.31;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.11.11.16.32.48;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	2001.07.09.04.24.29;	author mickey;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2000.12.18.18.40.47;	author provos;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.16.19.56.55;	author millert;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	99.11.09.04.18.30;	author rahnds;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	98.09.25.04.20.44;	author rahnds;	state Exp;
branches;
next	1.3;

1.3
date	97.11.04.19.08.15;	author chuck;	state Exp;
branches;
next	1.2;

1.2
date	96.12.28.06.17.46;	author rahnds;	state Exp;
branches;
next	1.1;

1.1
date	96.12.21.20.39.26;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.39.26;	author rahnds;	state Exp;
branches;
next	;

1.5.2.1
date	2001.05.14.22.32.51;	author niklas;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2001.10.31.03.26.30;	author nate;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2003.03.28.00.41.27;	author niklas;	state Exp;
branches;
next	1.5.2.4;

1.5.2.4
date	2003.06.07.11.03.42;	author ho;	state Exp;
branches;
next	;

1.6.2.1
date	2000.12.19.22.58.40;	author jason;	state Exp;
branches;
next	;

1.8.4.1
date	2003.05.19.21.53.42;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@#	$OpenBSD: Makefile.inc,v 1.13 2007/05/04 22:24:34 deraadt Exp $
#	$NetBSD: Makefile.inc,v 1.6 1994/10/26 06:39:03 cgd Exp $

CFLAGS	+= -D_KERNEL

SRCS+=	__main.c __eabi.c \
	imax.c imin.c lmax.c lmin.c max.c min.c ulmax.c ulmin.c \
	memchr.c memcmp.c memset.c \
	bcmp.c ffs.c strcmp.c strlcat.c strlcpy.c \
	strlen.c strncmp.c \
	strncpy.c scanc.c skpc.c \
	memcpy.c random.c strncasecmp.c

OBJS+=	bzero.o
CLEANFILES+=	bzero.o

bzero.o: ${KERNDIR}/memset.c
	@@echo "${COMPILE.c} -DBZERO ${KERNDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -DBZERO ${KERNDIR}/memset.c  -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
				 
bzero.po: ${KERNDIR}/memset.c
	@@echo "${COMPILE.c} -DBZERO ${KERNDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -DBZERO ${KERNDIR}/memset.c  -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
				 
@


1.13
log
@more locc() dies
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 2005/07/20 23:06:44 deraadt Exp $
@


1.12
log
@not needed
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 2005/07/20 19:39:39 deraadt Exp $
d11 1
a11 1
	strncpy.c scanc.c skpc.c locc.c \
@


1.11
log
@add moddi3, needed by new libz
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 2003/06/01 17:00:31 deraadt Exp $
d12 1
a12 1
	memcpy.c random.c strncasecmp.c moddi3.c
@


1.10
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2002/11/11 16:32:48 drahn Exp $
d12 1
a12 4
	memcpy.c random.c strncasecmp.c
#	bcopy.c htolel.c letohl.c htoles.c letohs.c copystr.c \

#	copyinstr.c copyoutstr.c copystr.c copyin.c copyout.c \
@


1.9
log
@powerpc uses memset for bzero, do this for profiled version also.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2001/07/09 04:24:29 mickey Exp $
d9 1
a9 1
	bcmp.c ffs.c strcat.c strcmp.c strcpy.c strlcat.c strlcpy.c \
@


1.8
log
@remove unused files, build bzero off of memset
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2000/12/18 18:40:47 provos Exp $
d21 6
@


1.8.4.1
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
a20 6
	@@echo "${COMPILE.c} -DBZERO ${KERNDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -DBZERO ${KERNDIR}/memset.c  -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
				 
bzero.po: ${KERNDIR}/memset.c
@


1.7
log
@strlcat and strlcpy into libkern.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 2000/06/16 19:56:55 millert Exp $
d9 1
a9 1
	bcmp.c bzero.c ffs.c strcat.c strcmp.c strcpy.c strlcat.c strlcpy.c \
d11 1
a11 1
	strncpy.c scanc.c skpc.c locc.c htonl.c htons.c ntohl.c ntohs.c \
d16 10
@


1.6
log
@Pull memcmp() into libkern.  Also, use asm version of memset() on m68k.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 1999/11/09 04:18:30 rahnds Exp $
d9 2
a10 1
	bcmp.c bzero.c ffs.c strcat.c strcmp.c strcpy.c strlen.c strncmp.c \
@


1.6.2.1
log
@Pull in patch from current:
Errata (013):
Procfs contained numerous overflows, which could lead an intruder to root
permissions.  Procfs is NOT enabled by default in OpenBSD.
Fix (provos):
- strlcat and strlcpy into libkern.
- calculate length and allocate buffer for status. work by deraadt@@ and me
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2000/12/18 18:40:47 provos Exp $
d9 1
a9 2
	bcmp.c bzero.c ffs.c strcat.c strcmp.c strcpy.c strlcat.c strlcpy.c \
	strlen.c strncmp.c \
@


1.5
log
@add memset to list of files to build.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 1998/09/25 04:20:44 rahnds Exp $
d8 1
a8 1
	memset.c memchr.c \
@


1.5.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2000/12/18 18:40:47 provos Exp $
d8 2
a9 3
	memchr.c memcmp.c memset.c \
	bcmp.c bzero.c ffs.c strcat.c strcmp.c strcpy.c strlcat.c strlcpy.c \
	strlen.c strncmp.c \
@


1.5.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5.2.1 2001/05/14 22:32:51 niklas Exp $
d9 1
a9 1
	bcmp.c ffs.c strcat.c strcmp.c strcpy.c strlcat.c strlcpy.c \
d11 1
a11 1
	strncpy.c scanc.c skpc.c locc.c \
a15 10

OBJS+=	bzero.o
CLEANFILES+=	bzero.o

bzero.o: ${KERNDIR}/memset.c
	@@echo "${COMPILE.c} -DBZERO ${KERNDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -DBZERO ${KERNDIR}/memset.c  -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
				 
@


1.5.2.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD$
a20 6
	@@echo "${COMPILE.c} -DBZERO ${KERNDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -DBZERO ${KERNDIR}/memset.c  -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
				 
bzero.po: ${KERNDIR}/memset.c
@


1.5.2.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5.2.3 2003/03/28 00:41:27 niklas Exp $
d9 1
a9 1
	bcmp.c ffs.c strcmp.c strlcat.c strlcpy.c \
@


1.4
log
@add missing function from libkern, strncasecmp()
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 1997/11/04 19:08:15 chuck Exp $
d8 1
a8 1
	memchr.c \
@


1.3
log
@add memchr to libkern
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 1996/12/28 06:17:46 rahnds Exp $
d11 1
a11 1
	memcpy.c random.c
@


1.2
log
@Adding OpenBSD tags to files.
@
text
@d1 1
a1 1
#	$OpenBSD:$
d8 1
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Check-in of powerpc kernel support.
NOTE: This will not work until the other pieces are checked in.
This is primarily the NetBSD powerpc port, with modifications
to support ELF.
@
text
@@
