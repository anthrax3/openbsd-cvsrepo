head	1.8;
access;
symbols
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.30
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.28
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.26
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.24
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.22
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.7.0.20
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.18
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.16
	OPENBSD_2_8:1.7.0.14
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.12
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.10
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.8
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.6
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.4
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.2
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.5.0.6
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5;
locks; strict;
comment	@# @;


1.8
date	2004.08.11.10.24.27;	author pefo;	state dead;
branches;
next	1.7;

1.7
date	98.03.01.16.10.22;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	97.11.07.15.57.16;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.07.30.20.19.06;	author pefo;	state Exp;
branches;
next	1.4;

1.4
date	96.07.18.16.56.55;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	96.05.18.09.43.37;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	96.05.15.08.24.15;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	95.11.06.21.15.54;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@move to mips64
@
text
@/*	$OpenBSD: bcmp.S,v 1.7 1998/03/01 16:10:22 niklas Exp $	*/

#include "DEFS.h"


/*
 * bcmp(s1, s2, n)
 */
LEAF(bcmp)
	.set	noreorder
	blt	a2, 16, smallcmp	# is it worth any trouble?
	xor	v0, a0, a1		# compare low two bits of addresses
	and	v0, v0, 3
	subu	a3, zero, a1		# compute # bytes to word align address
	bne	v0, zero, unalignedcmp	# not possible to align addresses
	and	a3, a3, 3

	beq	a3, zero, 1f
	subu	a2, a2, a3		# subtract from remaining count
	move	v0, v1			# init v0,v1 so unmodified bytes match
	LWHI	v0, 0(a0)		# read 1, 2, or 3 bytes
	LWHI	v1, 0(a1)
	addu	a1, a1, a3
	bne	v0, v1, nomatch
	addu	a0, a0, a3
1:
	and	a3, a2, ~3		# compute number of whole words left
	subu	a2, a2, a3		#   which has to be >= (16-3) & ~3
	addu	a3, a3, a0		# compute ending address
2:
	lw	v0, 0(a0)		# compare words
	lw	v1, 0(a1)
	addu	a0, a0, 4
	bne	v0, v1, nomatch
	addu	a1, a1, 4
	bne	a0, a3, 2b
	nop
	b	smallcmp		# finish remainder
	nop
unalignedcmp:
	beq	a3, zero, 2f
	subu	a2, a2, a3		# subtract from remaining count
	addu	a3, a3, a0		# compute ending address
1:
	lbu	v0, 0(a0)		# compare bytes until a1 word aligned
	lbu	v1, 0(a1)
	addu	a0, a0, 1
	bne	v0, v1, nomatch
	addu	a1, a1, 1
	bne	a0, a3, 1b
	nop
2:
	and	a3, a2, ~3		# compute number of whole words left
	subu	a2, a2, a3		#   which has to be >= (16-3) & ~3
	addu	a3, a3, a0		# compute ending address
3:
	LWHI	v0, 0(a0)		# compare words a0 unaligned, a1 aligned
	LWLO	v0, 3(a0)
	lw	v1, 0(a1)
	addu	a0, a0, 4
	bne	v0, v1, nomatch
	addu	a1, a1, 4
	bne	a0, a3, 3b
	nop
smallcmp:
	ble	a2, zero, match
	addu	a3, a2, a0		# compute ending address
1:
	lbu	v0, 0(a0)
	lbu	v1, 0(a1)
	addu	a0, a0, 1
	bne	v0, v1, nomatch
	addu	a1, a1, 1
	bne	a0, a3, 1b
	nop
match:
	j	ra
	 move	v0, zero
nomatch:
	j	ra
	li	v0, 1
END(bcmp)
@


1.7
log
@Use correct comment syntax for RCS Ids
@
text
@d1 1
a1 1
/*	$OpenBSD: bcmp.S,v 1.6 1997/11/07 15:57:16 niklas Exp $	*/
@


1.6
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD$
@


1.5
log
@Cleanup of endian and abi call stuff.
@
text
@d1 2
@


1.4
log
@Add macros to handle endian issues.
@
text
@a2 1
	.set	noreorder
d8 1
d19 2
a20 3
/*XXX FIXME Endian dependent */
	LWLO	v0, 0(a0)		# read 1, 2, or 3 bytes
	LWLO	v1, 0(a1)
d55 2
a56 3
/*XXX FIXME Endian dependent */
	LWLO	v0, 0(a0)		# compare words a0 unaligned, a1 aligned
	LWHI	v0, 3(a0)
d79 1
a79 1
	 li	v0, 1
@


1.3
log
@Added missing '.set noreorder' directive
@
text
@d20 2
a21 2
	lwr	v0, 0(a0)		# read 1, 2, or 3 bytes
	lwr	v1, 0(a1)
d57 2
a58 2
	lwr	v0, 0(a0)		# compare words a0 unaligned, a1 aligned
	lwl	v0, 3(a0)
@


1.2
log
@Now uses libkern instead of locore functions.
@
text
@d3 2
@


1.1
log
@libkern pica stuff
@
text
@d17 1
d54 1
@

