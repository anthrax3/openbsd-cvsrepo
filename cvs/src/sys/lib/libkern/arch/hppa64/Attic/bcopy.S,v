head	1.9;
access;
symbols
	OPENBSD_5_9:1.8.0.10
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.12
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.12
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2016.05.11.21.52.51;	author deraadt;	state dead;
branches;
next	1.8;
commitid	VpgRpYXqYSJy4P7J;

1.8
date	2013.06.14.12.45.55;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.14.12.40.25;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2013.06.11.20.06.18;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.27.21.02.38;	author kettenis;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.27.12.32.32;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.19.10.51.01;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.14.13.53.16;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.20.16.51.52;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.9
log
@remove hppa64 port, which we never got going beyond broken single users.
hppa reverse-stack gives us a valuable test case, but most developers don't
have a 2nd one to proceed further with this.
ok kettenis
@
text
@/* This is a generated file. DO NOT EDIT. */
/*
 * Generated from:
 *
 *	OpenBSD: bcopy.m4
 */
/*
 * Copyright (c) 1999,2004 Michael Shalayeff
 * All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
 * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */


#undef _LOCORE
#define _LOCORE
#include <machine/asm.h>
#include <machine/frame.h>


LEAF_ENTRY(bcopy)
	copy	%arg0, %ret0
	copy	%arg1, %arg0
	copy	%ret0, %arg1
ALTENTRY(memmove)
	cmpb,*>,n %arg0, %arg1, $bcopy.reverse
ALTENTRY(memcpy)
	copy	%arg0, %ret0
	
	cmpib,*>=,n 15, %arg2, $bcopy_f.byte

	extrd,u	%arg1, 63, 2, %r20
	extrd,u	%arg0, 63, 2, %r19
	add	%arg2, %r19, %arg2
	cmpb,*<> %r20, %r19, $bcopy_f.unaligned
	depd	%r0, 63, 2, %arg1
	
	addi	-16, %arg2, %arg2
$bcopy_f.loop16a
	ldw	 32(%sr0, %arg1), %r0
	ldw,ma	4(%sr0, %arg1), %r22
	ldw,ma	4(%sr0, %arg1), %r21
	ldw,ma	4(%sr0, %arg1), %r20
	ldw,ma	4(%sr0, %arg1), %r19
	stby,b,m %r22, 4(%sr0, %arg0)
	stw,ma	%r21, 4(%sr0, %arg0)
	stw,ma	%r20, 4(%sr0, %arg0)
	addib,*>= -16, %arg2, $bcopy_f.loop16a
	stw,ma	%r19, 4(%sr0, %arg0)

	addib,*<,n 12, %arg2, $bcopy_f.cleanup
$bcopy_f.word
	ldw,ma	4(%sr0, %arg1), %r22
	addib,*>= -4, %arg2, $bcopy_f.word
	stw,ma	%r22, 4(%sr0, %arg0)

$bcopy_f.cleanup
	addib,*=,n 4, %arg2, $bcopy_f.done
	ldw	0(%sr0, %arg1), %r22
	add	%arg0, %arg2, %arg0
	b	$bcopy_f.done
	stby,e	%r22, 0(%sr0, %arg0)

$bcopy_f.unaligned
	sub,*>=	%r19, %r20, %r21
	ldw,ma	4(%sr0, %arg1), %ret1
	depd,z	%r21, 60, 61, %r22
	mtsar	%r22
	
	addi	-16, %arg2, %arg2
$bcopy_f.loop16u
	ldw	 32(%sr0, %arg1), %r0
	ldw,ma	4(%sr0, %arg1), %r22
	ldw,ma	4(%sr0, %arg1), %r21
	ldw,ma	4(%sr0, %arg1), %r20
	ldw,ma	4(%sr0, %arg1), %r19
	shrpw	%ret1, %r22, %sar, %r31
	stby,b,m %r31, 4(%sr0, %arg0)
	shrpw	%r22, %r21, %sar, %r31
	stw,ma	%r31, 4(%sr0, %arg0)
	shrpw	%r21, %r20, %sar, %r31
	stw,ma	%r31, 4(%sr0, %arg0)
	shrpw	%r20, %r19, %sar, %r31
	stw,ma	%r31, 4(%sr0, %arg0)
	addib,*>= -16, %arg2, $bcopy_f.loop16u
	copy	%r19, %ret1

	addib,*<,n 12, %arg2, $bcopy_f.cleanup_un
$bcopy_f.word_un
	ldw,ma	4(%sr0, %arg1), %r22
	shrpw	%ret1, %r22, %sar, %r21
	addib,*< -4, %arg2, $bcopy_f.cleanup1_un
	stw,ma	%r21, 4(%sr0, %arg0)
	ldw,ma	4(%sr0, %arg1), %ret1
	shrpw	%r22, %ret1, %sar, %r21
	addib,*>= -4, %arg2, $bcopy_f.word_un
	stw,ma	%r21, 4(%sr0, %arg0)

$bcopy_f.cleanup_un
	addib,*<=,n 4, %arg2, $bcopy_f.done
	mfctl	%sar, %r19
	add	%arg0, %arg2, %arg0
	extrd,u	%r19, 60, 2, %r19
	sub,*<=	%arg2, %r19, %r0
	ldw,ma	4(%sr0, %arg1), %r22
	shrpw	%ret1, %r22, %sar, %r21
	b	$bcopy_f.done
	stby,e	%r21, 0(%sr0, %arg0)

$bcopy_f.cleanup1_un
	b	$bcopy_f.cleanup_un
	copy	%r22, %ret1

$bcopy_f.byte
	cmpb,*>=,n %r0, %arg2, $bcopy_f.done
$bcopy_f.byte_loop
	ldbs,ma	1(%sr0, %arg1), %r22
	addib,*<> -1, %arg2, $bcopy_f.byte_loop
	stbs,ma	%r22, 1(%sr0, %arg0)
$bcopy_f.done

	bv	%r0(%rp)
	nop
$bcopy.reverse
	copy	%arg0, %ret0
	add	%arg1, %arg2, %arg1
	add	%arg0, %arg2, %arg0


$bcopy_r.byte
	cmpb,*>=,n %r0, %arg2, $bcopy_r.done
$bcopy_r.byte_loop
	ldbs,mb	-1(%sr0, %arg1), %r22
	addib,*<> -1, %arg2, $bcopy_r.byte_loop
	stbs,mb	%r22, -1(%sr0, %arg0)
$bcopy_r.done

	bv	%r0(%rp)
	nop
EXIT(bcopy)

	.end
@


1.8
log
@regen
@
text
@@


1.7
log
@regen
@
text
@a31 1
ALTENTRY(ovbcopy)
@


1.6
log
@regen
@
text
@d39 1
d136 1
@


1.5
log
@Regen.
@
text
@d31 2
a32 2
LEAF_ENTRY(memcpy)
ALTENTRY(memmove)
d36 3
a38 3
ALTENTRY(ovbcopy)
ALTENTRY(bcopy)
	cmpb,*>,n %arg1, %arg0, $bcopy.reverse
d42 2
a43 2
	extrd,u	%arg0, 63, 2, %r20
	extrd,u	%arg1, 63, 2, %r19
d46 1
a46 1
	depd	%r0, 63, 2, %arg0
d50 8
a57 8
	ldw	 32(%sr0, %arg0), %r0
	ldw,ma	4(%sr0, %arg0), %r22
	ldw,ma	4(%sr0, %arg0), %r21
	ldw,ma	4(%sr0, %arg0), %r20
	ldw,ma	4(%sr0, %arg0), %r19
	stby,b,m %r22, 4(%sr0, %arg1)
	stw,ma	%r21, 4(%sr0, %arg1)
	stw,ma	%r20, 4(%sr0, %arg1)
d59 1
a59 1
	stw,ma	%r19, 4(%sr0, %arg1)
d63 1
a63 1
	ldw,ma	4(%sr0, %arg0), %r22
d65 1
a65 1
	stw,ma	%r22, 4(%sr0, %arg1)
d69 2
a70 2
	ldw	0(%sr0, %arg0), %r22
	add	%arg1, %arg2, %arg1
d72 1
a72 1
	stby,e	%r22, 0(%sr0, %arg1)
d76 1
a76 1
	ldw,ma	4(%sr0, %arg0), %ret1
d82 5
a86 5
	ldw	 32(%sr0, %arg0), %r0
	ldw,ma	4(%sr0, %arg0), %r22
	ldw,ma	4(%sr0, %arg0), %r21
	ldw,ma	4(%sr0, %arg0), %r20
	ldw,ma	4(%sr0, %arg0), %r19
d88 1
a88 1
	stby,b,m %r31, 4(%sr0, %arg1)
d90 1
a90 1
	stw,ma	%r31, 4(%sr0, %arg1)
d92 1
a92 1
	stw,ma	%r31, 4(%sr0, %arg1)
d94 1
a94 1
	stw,ma	%r31, 4(%sr0, %arg1)
d100 1
a100 1
	ldw,ma	4(%sr0, %arg0), %r22
d103 2
a104 2
	stw,ma	%r21, 4(%sr0, %arg1)
	ldw,ma	4(%sr0, %arg0), %ret1
d107 1
a107 1
	stw,ma	%r21, 4(%sr0, %arg1)
d112 1
a112 1
	add	%arg1, %arg2, %arg1
d115 1
a115 1
	ldw,ma	4(%sr0, %arg0), %r22
d118 1
a118 1
	stby,e	%r21, 0(%sr0, %arg1)
d127 1
a127 1
	ldbs,ma	1(%sr0, %arg0), %r22
d129 1
a129 1
	stbs,ma	%r22, 1(%sr0, %arg1)
d135 1
a136 1
	add	%arg1, %arg2, %arg1
d142 1
a142 1
	ldbs,mb	-1(%sr0, %arg0), %r22
d144 1
a144 1
	stbs,mb	%r22, -1(%sr0, %arg1)
d149 1
a149 1
EXIT(memcpy)
@


1.4
log
@Regen.
@
text
@d51 7
a57 7
	ldws,ma	4(%sr0, %arg0), %r22
	ldws,ma	4(%sr0, %arg0), %r21
	ldws,ma	4(%sr0, %arg0), %r20
	ldws,ma	4(%sr0, %arg0), %r19
	stbys,b,m %r22, 4(%sr0, %arg1)
	stws,ma	%r21, 4(%sr0, %arg1)
	stws,ma	%r20, 4(%sr0, %arg1)
d59 1
a59 1
	stws,ma	%r19, 4(%sr0, %arg1)
d63 1
a63 1
	ldws,ma	4(%sr0, %arg0), %r22
d65 1
a65 1
	stws,ma	%r22, 4(%sr0, %arg1)
d69 1
a69 1
	ldws	0(%sr0, %arg0), %r22
d72 1
a72 1
	stbys,e	%r22, 0(%sr0, %arg1)
d76 1
a76 1
	ldwm	4(%sr0, %arg0), %ret1
d83 12
a94 12
	ldws,ma	4(%sr0, %arg0), %r22
	ldws,ma	4(%sr0, %arg0), %r21
	ldws,ma	4(%sr0, %arg0), %r20
	ldws,ma	4(%sr0, %arg0), %r19
	vshd	%ret1, %r22, %r31
	stbys,b,m %r31, 4(%sr0, %arg1)
	vshd	%r22, %r21, %r31
	stws,ma	%r31, 4(%sr0, %arg1)
	vshd	%r21, %r20, %r31
	stws,ma	%r31, 4(%sr0, %arg1)
	vshd	%r20, %r19, %r31
	stws,ma	%r31, 4(%sr0, %arg1)
d100 2
a101 2
	ldws,ma	4(%sr0, %arg0), %r22
	vshd	%ret1, %r22, %r21
d103 3
a105 3
	stws,ma	%r21, 4(%sr0, %arg1)
	ldws,ma	4(%sr0, %arg0), %ret1
	vshd	%r22, %ret1, %r21
d107 1
a107 1
	stws,ma	%r21, 4(%sr0, %arg1)
d115 2
a116 2
	ldws,ma	4(%sr0, %arg0), %r22
	vshd	%ret1, %r22, %r21
d118 1
a118 1
	stbys,e	%r21, 0(%sr0, %arg1)
@


1.3
log
@Regen.
@
text
@d33 1
a33 1
	copy	%arg0, %r22
d35 1
a35 2
	copy	%r22, %arg1
	copy	%arg0, %ret0
d38 1
a38 1
	comb,>,n %arg1, %arg0, $bcopy.reverse
d40 1
a40 1
	comib,>=,n 15, %arg2, $bcopy_f.byte
d45 1
a45 1
	comb,<> %r20, %r19, $bcopy_f.unaligned
d58 1
a58 1
	addib,>= -16, %arg2, $bcopy_f.loop16a
d61 1
a61 1
	addib,<,n 12, %arg2, $bcopy_f.cleanup
d64 1
a64 1
	addib,>= -4, %arg2, $bcopy_f.word
d68 1
a68 1
	addib,=,n 4, %arg2, $bcopy_f.done
d75 1
a75 1
	sub,>=	%r19, %r20, %r21
d77 1
a77 1
	zdep	%r21, 28, 29, %r22
d95 1
a95 1
	addib,>= -16, %arg2, $bcopy_f.loop16u
d98 1
a98 1
	addib,<,n 12, %arg2, $bcopy_f.cleanup_un
d102 1
a102 1
	addib,<	-4, %arg2, $bcopy_f.cleanup1_un
d106 1
a106 1
	addib,>= -4, %arg2, $bcopy_f.word_un
d110 1
a110 1
	addib,<=,n 4, %arg2, $bcopy_f.done
d113 2
a114 2
	extru	%r19, 28, 2, %r19
	sub,<=	%arg2, %r19, %r0
d125 1
a125 1
	comb,>=,n %r0, %arg2, $bcopy_f.done
d128 1
a128 1
	addib,<> -1, %arg2, $bcopy_f.byte_loop
d140 1
a140 1
	comb,>=,n %r0, %arg2, $bcopy_r.done
d143 1
a143 1
	addib,<> -1, %arg2, $bcopy_r.byte_loop
@


1.2
log
@Regen.
@
text
@d43 2
a44 2
	extrd	%arg0, 63, 2, %r20
	extrd	%arg1, 63, 2, %r19
@


1.1
log
@Catch up with dismantled libkern.
@
text
@d43 2
a44 2
	extru	%arg0, 31, 2, %r20
	extru	%arg1, 31, 2, %r19
d47 1
a47 1
	dep	%r0, 31, 2, %arg0
@

