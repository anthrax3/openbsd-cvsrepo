head	1.18;
access;
symbols
	OPENBSD_4_2:1.17.0.18
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.17.0.16
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.14
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.12
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.10
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.17.0.8
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.17.0.6
	OPENBSD_3_6_BASE:1.17
	SMP_SYNC_A:1.17
	SMP_SYNC_B:1.17
	OPENBSD_3_5:1.17.0.4
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	UBC_SYNC_A:1.16
	OPENBSD_3_3:1.16.0.2
	OPENBSD_3_3_BASE:1.16
	OPENBSD_3_2:1.15.0.2
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.14.0.8
	OPENBSD_3_1_BASE:1.14
	UBC_SYNC_B:1.15
	UBC:1.14.0.6
	UBC_BASE:1.14
	OPENBSD_3_0:1.14.0.4
	OPENBSD_3_0_BASE:1.14
	OPENBSD_2_9_BASE:1.14
	OPENBSD_2_9:1.14.0.2
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	SMP:1.7.0.4
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	hp-mach:1.1.1.1
	mickey:1.1.1;
locks; strict;
comment	@# @;


1.18
date	2007.11.25.18.25.35;	author deraadt;	state dead;
branches;
next	1.17;

1.17
date	2003.06.01.17.00.30;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2003.01.28.22.55.53;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	2002.09.15.09.49.01;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2000.12.29.19.04.41;	author mickey;	state Exp;
branches
	1.14.6.1;
next	1.13;

1.13
date	2000.12.18.18.40.45;	author provos;	state Exp;
branches;
next	1.12;

1.12
date	2000.07.02.01.05.11;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2000.06.29.16.39.47;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2000.06.29.16.30.26;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2000.06.16.19.56.54;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.25.15.28.23;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	99.05.19.17.10.51;	author mickey;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	99.04.20.21.08.51;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	98.07.20.18.17.15;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	98.06.24.18.02.17;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	98.06.24.14.42.40;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.06.23.19.39.01;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.18.56.53;	author mickey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.06.23.18.56.53;	author mickey;	state Exp;
branches;
next	;

1.7.4.1
date	2001.05.14.22.32.49;	author niklas;	state Exp;
branches;
next	1.7.4.2;

1.7.4.2
date	2003.03.28.00.41.27;	author niklas;	state Exp;
branches;
next	1.7.4.3;

1.7.4.3
date	2003.06.07.11.03.41;	author ho;	state Exp;
branches;
next	;

1.14.6.1
date	2002.10.29.00.36.45;	author art;	state Exp;
branches;
next	1.14.6.2;

1.14.6.2
date	2003.05.19.21.53.42;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.18
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@#	$OpenBSD: Makefile.inc,v 1.17 2003/06/01 17:00:30 deraadt Exp $

SRCS+=	__main.c imax.c imin.c lmax.c lmin.c max.c min.c ulmax.c ulmin.c \
	random.c ashrdi3.c divdi3.c strncpy.c strncmp.c strcmp.c memchr.c \
	memcmp.c memset.c strlen.c strlcpy.c strlcat.c \
	skpc.c strncasecmp.c \
	bcmp.c scanc.c ffs.c

SRCS+=	milli.S
OBJS+=	bzero.o

SRCS+=	bcopy.S spcopy.S
CLEANFILES+=	bcopy.S spcopy.S bzero.o

bzero.o: ${KERNDIR}/memset.c
	@@echo "${COMPILE.c} -DBZERO ${KERNDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -DBZERO ${KERNDIR}/memset.c  -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

bzero.po: ${KERNDIR}/memset.c
	@@echo "${COMPILE.c} -p -DBZERO ${KERNDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -p -DBZERO ${KERNDIR}/memset.c  -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

bcopy.S: ${M}/bcopy.m4
	@@echo 'building ${.TARGET} from ${.ALLSRC}'
	@@m4 -DNAME=bcopy ${.ALLSRC} > ${.TARGET}

spcopy.S: ${M}/bcopy.m4
	@@echo 'building ${.TARGET} from ${.ALLSRC}'
	@@m4 -DNAME=spcopy ${.ALLSRC} > ${.TARGET}
@


1.17
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.16 2003/01/28 22:55:53 mickey Exp $
@


1.16
log
@add a rule to built bzero.po as well
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.15 2002/09/15 09:49:01 mickey Exp $
d5 2
a6 2
	memcmp.c memset.c strlen.c strcpy.c strlcpy.c strlcat.c \
	strcat.c skpc.c strncasecmp.c \
@


1.15
log
@use mi strlcpy here as well
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 2000/12/29 19:04:41 mickey Exp $
d18 7
a24 1
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
@


1.14
log
@import strlcpy from libc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 2000/12/18 18:40:45 provos Exp $
d5 1
a5 1
	memcmp.c memset.c strlen.c strcpy.c strlcat.c \
d9 1
a9 1
SRCS+=	milli.S strlcpy.S
@


1.14.6.1
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 2000/12/29 19:04:41 mickey Exp $
d5 1
a5 1
	memcmp.c memset.c strlen.c strcpy.c strlcpy.c strlcat.c \
d9 1
a9 1
SRCS+=	milli.S
@


1.14.6.2
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
d18 1
a18 7
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

bzero.po: ${KERNDIR}/memset.c
	@@echo "${COMPILE.c} -p -DBZERO ${KERNDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -p -DBZERO ${KERNDIR}/memset.c  -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
@


1.13
log
@strlcat and strlcpy into libkern.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 2000/07/02 01:05:11 mickey Exp $
d5 1
a5 1
	memcmp.c memset.c strlen.c strcpy.c strlcat.c strlcpy.c \
d9 1
a9 1
SRCS+=	milli.S
@


1.12
log
@use ffs.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 2000/06/29 16:39:47 mickey Exp $
d5 2
a6 1
	memcmp.c memset.c strlen.c strcpy.c strcat.c skpc.c strncasecmp.c \
@


1.11
log
@bcmp.S bye-bye; use generic bcmp.c version which is as good as this one
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 2000/06/29 16:30:26 mickey Exp $
d6 1
a6 1
	bcmp.c scanc.c
d8 1
a8 1
SRCS+=	milli.S ffs.S
@


1.10
log
@fix building bzero out of memset.c; from miod@@
(that makefile:kerndir fix was needed to build the kernel ;)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2000/06/16 19:56:54 millert Exp $
d6 1
a6 1
	scanc.c
d8 1
a8 1
SRCS+=	milli.S bcmp.S ffs.S
@


1.9
log
@Pull memcmp() into libkern.  Also, use asm version of memset() on m68k.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2000/04/25 15:28:23 mickey Exp $
d14 3
a16 3
bzero.o: ${.CURDIR}/memset.c
	@@echo "${COMPILE.c} -DBZERO ${.CURDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -DBZERO ${.CURDIR}/memset.c  -o ${.TARGET}.o
@


1.8
log
@screw .S version memset does same job...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 1999/05/19 17:10:51 mickey Exp $
d5 2
a6 1
	memset.c strlen.c strcpy.c strcat.c skpc.c strncasecmp.c scanc.c
@


1.7
log
@bcopy() and space-space bcopy()
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 1999/04/20 21:08:51 mickey Exp $
d7 2
a8 1
SRCS+=	milli.S bzero.S bcmp.S ffs.S
d11 7
a17 1
CLEANFILES+=	bcopy.S spcopy.S
@


1.7.4.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 2000/12/29 19:04:41 mickey Exp $
d5 1
a5 3
	memcmp.c memset.c strlen.c strcpy.c strlcat.c \
	strcat.c skpc.c strncasecmp.c \
	bcmp.c scanc.c ffs.c
d7 1
a7 2
SRCS+=	milli.S strlcpy.S
OBJS+=	bzero.o
d10 1
a10 7
CLEANFILES+=	bcopy.S spcopy.S bzero.o

bzero.o: ${KERNDIR}/memset.c
	@@echo "${COMPILE.c} -DBZERO ${KERNDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -DBZERO ${KERNDIR}/memset.c  -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
@


1.7.4.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD$
d5 1
a5 1
	memcmp.c memset.c strlen.c strcpy.c strlcpy.c strlcat.c \
d9 1
a9 1
SRCS+=	milli.S
d18 1
a18 7
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

bzero.po: ${KERNDIR}/memset.c
	@@echo "${COMPILE.c} -p -DBZERO ${KERNDIR}/memset.c -o ${.TARGET}"
	@@${COMPILE.c} -p -DBZERO ${KERNDIR}/memset.c  -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
@


1.7.4.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7.4.2 2003/03/28 00:41:27 niklas Exp $
d5 2
a6 2
	memcmp.c memset.c strlen.c strlcpy.c strlcat.c \
	skpc.c strncasecmp.c \
@


1.6
log
@add memset()
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 1998/07/20 18:17:15 mickey Exp $
d7 12
a18 1
SRCS+=	milli.S bzero.S bcopy.S bcmp.S ffs.S
@


1.5
log
@more functions
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 1998/06/24 18:02:17 mickey Exp $
d5 1
a5 1
	strlen.c strcpy.c strcat.c skpc.c strncasecmp.c scanc.c
@


1.4
log
@add bcmp()
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 1998/06/24 14:42:40 mickey Exp $
d4 2
a5 1
	random.c ashrdi3.c divdi3.c strncpy.c
@


1.3
log
@some more files for libkern (/boot uses it's own Makefile for this)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 1998/06/23 19:39:01 mickey Exp $
d6 1
a6 1
SRCS+=	milli.S bzero.S bcopy.S ffs.S
@


1.2
log
@use HP version
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1.1.1 1998/06/23 18:56:53 mickey Exp $
d4 1
a4 1
	random.c ashrdi3.c divdi3.c
d6 1
a6 1
SRCS+=	milli.S
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 1
a4 6
	random.c ashrdi3.c

# `source' files built from m4 source
SRCS+=	divU.S divI.S
SRCS+=	remU.S remI.S
SRCS+=	mulU.S mulI.S
d6 1
@


1.1.1.1
log
@initial import
@
text
@@
