head	1.20;
access;
symbols
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.18.0.10
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.8
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.6
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.4
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.2
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.17.0.2
	OPENBSD_3_6_BASE:1.17
	SMP_SYNC_A:1.17
	SMP_SYNC_B:1.17
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.14.0.6
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.14.0.4
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.13.0.16
	OPENBSD_3_1_BASE:1.13
	UBC_SYNC_B:1.14
	UBC:1.13.0.14
	UBC_BASE:1.13
	OPENBSD_3_0:1.13.0.12
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_9:1.13.0.10
	OPENBSD_2_8:1.13.0.8
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.13.0.6
	OPENBSD_2_7_BASE:1.13
	SMP:1.13.0.4
	SMP_BASE:1.13
	kame_19991208:1.13
	OPENBSD_2_6:1.13.0.2
	OPENBSD_2_6_BASE:1.13
	OPENBSD_2_5:1.12.0.6
	OPENBSD_2_5_BASE:1.12
	OPENBSD_2_4:1.12.0.4
	OPENBSD_2_4_BASE:1.12
	OPENBSD_2_3:1.12.0.2
	OPENBSD_2_3_BASE:1.12
	OPENBSD_2_2:1.10.0.4
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.10.0.2
	OPENBSD_2_1_BASE:1.10
	OPENBSD_2_0:1.9.0.2
	OPENBSD_2_0_BASE:1.9
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.20
date	2007.11.25.18.25.33;	author deraadt;	state dead;
branches;
next	1.19;

1.19
date	2007.05.04.22.14.37;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2004.11.28.07.20.25;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	2004.05.07.14.42.27;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2004.05.06.01.12.05;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2004.02.03.10.47.19;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2002.09.06.22.59.58;	author art;	state Exp;
branches;
next	1.13;

1.13
date	99.05.21.15.01.39;	author mickey;	state Exp;
branches
	1.13.4.1
	1.13.14.1;
next	1.12;

1.12
date	98.03.18.20.47.04;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	97.11.30.21.30.12;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	96.10.31.00.43.07;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	96.08.10.21.41.14;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.06.16.01.14.20;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.05.22.12.06.38;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.05.10.21.27.31;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.05.01.15.18.44;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.04.17.05.03.07;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.02.29.13.27.47;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.04.57.19;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.48;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.48;	author deraadt;	state Exp;
branches;
next	;

1.13.4.1
date	2003.03.28.00.41.27;	author niklas;	state Exp;
branches;
next	1.13.4.2;

1.13.4.2
date	2004.02.19.10.57.18;	author niklas;	state Exp;
branches;
next	1.13.4.3;

1.13.4.3
date	2004.06.05.23.13.03;	author niklas;	state Exp;
branches;
next	;

1.13.14.1
date	2002.10.29.00.36.45;	author art;	state Exp;
branches;
next	;


desc
@@


1.20
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@#	$OpenBSD: Makefile,v 1.19 2007/05/04 22:14:37 deraadt Exp $

LIB=	kern
NOPIC=

MACHINE=	${XMACHINE}
MACHINE_ARCH=	${XMACHINE_ARCH}

M=	${.CURDIR}/arch/${MACHINE_ARCH}

CPPFLAGS=	-I$M ${KERNCPPFLAGS}

.if exists ($M/Makefile.inc)
.PATH:	$M
.include "$M/Makefile.inc"
.endif

.if (${MACHINE_ARCH} != "alpha" && ${MACHINE} != "sgi" && \
    ${MACHINE_ARCH} != "sparc64") && ${MACHINE} != "amd64" && \
    ${MACHINE} != "hppa64"
# Quad support
SRCS+=	adddi3.c anddi3.c ashldi3.c ashrdi3.c cmpdi2.c divdi3.c iordi3.c \
	lshldi3.c lshrdi3.c moddi3.c muldi3.c negdi2.c notdi2.c qdivrem.c \
	subdi3.c  ucmpdi2.c udivdi3.c umoddi3.c xordi3.c
.endif

# Other stuff
SRCS+=	getsn.c srandom.c strchr.c

# Files to clean up
CLEANFILES+= lib${LIB}.o lib${LIB}.po

# mcount cannot be compiled with profiling
mcount.po: mcount.o
	cp mcount.o mcount.po

install:

.include <bsd.lib.mk>

lib${LIB}.o:: ${OBJS}
	@@echo building standard ${LIB} library
	@@rm -f lib${LIB}.o
	@@${LD} -r -o lib${LIB}.o `${LORDER} ${OBJS} | tsort`

POBJS+=	${OBJS:.o=.po} mcount.po
lib${LIB}.po:: ${POBJS}
	@@echo building profiled ${LIB} library
	@@rm -f lib${LIB}.po
	@@${LD} -r -o lib${LIB}.po `${LORDER} ${POBJS} | tsort`
@


1.19
log
@move bcd tables to the only place that uses them (the unused mcd driver);
ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2004/11/28 07:20:25 mickey Exp $
@


1.18
log
@a tiny hppa64 bit
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2004/05/07 14:42:27 millert Exp $
d28 1
a28 1
SRCS+=	getsn.c srandom.c bcd.c strchr.c
@


1.17
log
@Replace RSA-derived md5 code with code derived from Colin Plumb's PD version.
This moves md5.c out of libkern and into sys/crypto where it belongs (as
requested by markus@@).  Note that md5.c is still mandatory (dev/rnd.c uses it).
Verified with IPsec + hmac-md5 and tcp md5sig. OK henning@@ and hshoexer@@
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.16 2004/05/06 01:12:05 deraadt Exp $
#	$NetBSD: Makefile,v 1.31 1996/08/10 04:01:31 mycroft Exp $
d19 2
a20 1
    ${MACHINE_ARCH} != "sparc64") && ${MACHINE} != "amd64"
@


1.16
log
@add back strchr/strrchr; from dhartmei
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2004/02/03 10:47:19 mickey Exp $
d28 1
a28 1
SRCS+=	md5.c getsn.c srandom.c bcd.c strchr.c
@


1.15
log
@no quad stuff on amd64 either; from art@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2002/09/06 22:59:58 art Exp $
d28 1
a28 1
SRCS+=	md5.c getsn.c srandom.c bcd.c
@


1.14
log
@Remove 64-bit gcc emulation stuff. We're not using it.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 1999/05/21 15:01:39 mickey Exp $
d20 1
a20 1
    ${MACHINE_ARCH} != "sparc64")
@


1.13
log
@use right lorder; niklas@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1998/03/18 20:47:04 mickey Exp $
d19 2
a20 1
.if (${MACHINE_ARCH} != "alpha" && ${MACHINE} != "sgi")
@


1.13.4.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD$
d19 1
a19 2
.if (${MACHINE_ARCH} != "alpha" && ${MACHINE} != "sgi" && \
    ${MACHINE_ARCH} != "sparc64")
@


1.13.4.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d20 1
a20 1
    ${MACHINE_ARCH} != "sparc64") && ${MACHINE} != "amd64"
@


1.13.4.3
log
@Merge with the trunk
@
text
@d28 1
a28 1
SRCS+=	getsn.c srandom.c bcd.c strchr.c
@


1.13.14.1
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 1999/05/21 15:01:39 mickey Exp $
d19 1
a19 2
.if (${MACHINE_ARCH} != "alpha" && ${MACHINE} != "sgi" && \
    ${MACHINE_ARCH} != "sparc64")
@


1.12
log
@pass MACHINE{,_ARCH} into libkern/Makefile so cross-build works
no 64bit math for sgi (;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1997/11/30 21:30:12 mickey Exp $
d43 1
a43 1
	@@${LD} -r -o lib${LIB}.o `lorder ${OBJS} | tsort`
d49 1
a49 1
	@@${LD} -r -o lib${LIB}.po `lorder ${POBJS} | tsort`
@


1.11
log
@add bcd<-->bin conversions; from freebsd
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1996/10/31 00:43:07 niklas Exp $
d7 3
d19 1
a19 1
.if (${MACHINE_ARCH} != "alpha")
@


1.10
log
@Merge NetBSD/Alpha 961020
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1996/08/10 21:41:14 deraadt Exp $
d24 1
a24 1
SRCS+=	md5.c getsn.c srandom.c
@


1.9
log
@srandom() seeds random() at boottime
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile,v 1.8 1996/06/16 01:14:20 deraadt Exp $
#	$NetBSD: Makefile,v 1.27 1996/05/10 21:27:32 scottr Exp $
d7 1
a7 1
DIR=	${KERNREL}${KERNDIR}
d9 1
a9 2
CPPFLAGS=	-I${DIR}/arch/${MACHINE_ARCH} \
		${KERNCPPFLAGS:S@@-I.@@-I${KERNREL}.@@g}
d11 3
a13 3
.if exists (${DIR}/arch/${MACHINE_ARCH}/Makefile.inc)
.PATH:	${DIR}/arch/${MACHINE_ARCH}
.include "${DIR}/arch/${MACHINE_ARCH}/Makefile.inc"
a15 2
.PATH: ${DIR}

d26 1
@


1.8
log
@add getsn(char *buf, int len)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1996/05/22 12:06:38 deraadt Exp $
d27 1
a27 1
SRCS+=	md5.c getsn.c
@


1.7
log
@make depend work
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1996/05/10 21:27:31 deraadt Exp $
d27 1
a27 1
SRCS+=	md5.c
@


1.6
log
@clean better
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile,v 1.4 1996/04/17 05:03:07 mickey Exp $
#	$NetBSD: Makefile,v 1.26 1996/04/18 02:14:48 cgd Exp $
@


1.5
log
@switch on _KERNEL to pull in correct headers
@
text
@d29 2
@


1.4
log
@Add MD5 routines to be used by anyone in the kernel.
Moved from dev/rnd.c
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile,v 1.3 1996/02/29 13:27:47 niklas Exp $
#	$NetBSD: Makefile,v 1.25 1996/02/02 20:34:38 mycroft Exp $
d10 1
a10 1
		${KERNCPPFLAGS:S/-D_KERNEL//:S@@-I.@@-I${KERNREL}.@@g}
@


1.3
log
@From NetBSD: Merge with NetBSD 960217
@
text
@d1 1
a1 1
#	$OpenBSD$
d27 1
a27 1
SRCS+=	
@


1.2
log
@update from netbsd
@
text
@d1 2
a2 1
#	$NetBSD: Makefile,v 1.24 1995/10/20 01:10:06 cgd Exp $
d7 1
a7 1
DIR=${KERNREL}${KERNDIR}
d9 2
a10 3
CC=	${KERNCC}
CFLAGS=	-I${DIR}/arch/${MACHINE_ARCH} \
	${KERNCFLAGS:S/-D_KERNEL//:S@@-I.@@-I${KERNREL}.@@g}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: Makefile,v 1.23 1995/10/07 09:56:54 mycroft Exp $
d8 4
a17 4

CC = ${KERNCC}
CFLAGS += -I${DIR}/arch/${MACHINE_ARCH} \
	${KERNCFLAGS:S/-D_KERNEL//:S@@-I.@@-I${KERNREL}.@@g}
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

