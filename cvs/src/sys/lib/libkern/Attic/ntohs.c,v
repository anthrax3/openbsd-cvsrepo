head	1.6;
access;
symbols
	OPENBSD_4_2:1.5.0.12
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.10
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.8
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.34
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.32
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.30
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.28
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.26
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.24
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.22
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2007.11.25.18.25.34;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2004.11.28.07.23.41;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.07.00.38.32;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.11.27.19.51.42;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.07.27.42;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.50;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.50;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@/*
 * Written by J.T. Conklin <jtc@@netbsd.org>.
 * Public domain.
 */

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: ntohs.c,v 1.5 2004/11/28 07:23:41 mickey Exp $";
#endif /* LIBC_SCCS and not lint */

#include <sys/types.h>
#include <machine/endian.h>

#undef ntohs

u_int16_t
ntohs(u_int16_t x)
{
#if BYTE_ORDER == LITTLE_ENDIAN
	u_char *s = (u_char *) &x;
	return (u_int16_t)(s[0] << 8 | s[1]);
#else
	return x;
#endif
}
@


1.5
log
@sync from libc
@
text
@d7 1
a7 1
static char *rcsid = "$OpenBSD: ntohs.c,v 1.7 2002/02/19 19:39:36 millert Exp $";
@


1.4
log
@ansi and some missing protos
@
text
@a0 3
/*	$OpenBSD: ntohs.c,v 1.3 1996/11/27 19:51:42 niklas Exp $	*/
/*	$NetBSD: ntohs.c,v 1.5.6.1 1996/05/29 23:48:11 cgd Exp $	*/

d7 2
a8 2
static char *rcsid = "$NetBSD: ntohs.c,v 1.5.6.1 1996/05/29 23:48:11 cgd Exp $";
#endif
@


1.3
log
@short and long are now u_int16_t and u_int32_t
@
text
@d1 1
a1 1
/*	$OpenBSD: ntohs.c,v 1.5.6.1 1996/05/29 23:48:11 cgd Exp $	*/
d19 1
a19 2
ntohs(x)
	u_int16_t x;
@


1.2
log
@64 bit clean
@
text
@d1 1
d18 1
a18 1
unsigned short
d20 1
a20 1
	unsigned short x;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: ntohs.c,v 1.5 1995/10/07 09:26:39 mycroft Exp $	*/
d9 1
a9 1
static char *rcsid = "$NetBSD: ntohs.c,v 1.5 1995/10/07 09:26:39 mycroft Exp $";
d23 1
a23 1
	return s[0] << 8 | s[1];
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
