head	1.7;
access;
symbols
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.18
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.16
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.14
	OPENBSD_2_8:1.5.0.12
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.10
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.8
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.6
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2003.12.16.23.57.48;	author millert;	state dead;
branches;
next	1.6;

1.6
date	2002.03.12.00.26.30;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.09.08.04.07.49;	author millert;	state Exp;
branches
	1.5.8.1
	1.5.16.1
	1.5.18.1;
next	1.4;

1.4
date	98.09.08.03.32.04;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.05.30.02.20.54;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	97.11.07.15.57.51;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	97.02.06.02.56.54;	author downsj;	state Exp;
branches;
next	;

1.5.8.1
date	2002.03.28.15.02.00;	author niklas;	state Exp;
branches;
next	1.5.8.2;

1.5.8.2
date	2004.02.19.10.57.19;	author niklas;	state dead;
branches;
next	;

1.5.16.1
date	2002.03.13.15.54.29;	author jason;	state Exp;
branches;
next	;

1.5.18.1
date	2002.06.11.03.30.09;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to zlib 1.2.1
@
text
@/*	$OpenBSD: infutil.h,v 1.6 2002/03/12 00:26:30 millert Exp $	*/
/* infutil.h -- types and macros common to blocks and codes
 * Copyright (C) 1995-2002 Mark Adler
 * For conditions of distribution and use, see copyright notice in zlib.h 
 */

/* WARNING: this file should *not* be used by applications. It is
   part of the implementation of the compression library and is
   subject to change. Applications should only use zlib.h.
 */

#ifndef _INFUTIL_H
#define _INFUTIL_H

typedef enum {
      TYPE,     /* get type bits (3, including end bit) */
      LENS,     /* get lengths for stored */
      STORED,   /* processing stored block */
      TABLE,    /* get table lengths */
      BTREE,    /* get bit lengths tree for a dynamic block */
      DTREE,    /* get length, distance trees for a dynamic block */
      CODES,    /* processing fixed or dynamic block */
      DRY,      /* output remaining window bytes */
      DONE,     /* finished last block, done */
      BAD}      /* got a data error--stuck here */
inflate_block_mode;

/* inflate blocks semi-private state */
struct inflate_blocks_state {

  /* mode */
  inflate_block_mode  mode;     /* current inflate_block mode */

  /* mode dependent information */
  union {
    uInt left;          /* if STORED, bytes left to copy */
    struct {
      uInt table;               /* table lengths (14 bits) */
      uInt index;               /* index into blens (or border) */
      uIntf *blens;             /* bit lengths of codes */
      uInt bb;                  /* bit length tree depth */
      inflate_huft *tb;         /* bit length decoding tree */
    } trees;            /* if DTREE, decoding info for trees */
    struct {
      inflate_codes_statef 
         *codes;
    } decode;           /* if CODES, current state */
  } sub;                /* submode */
  uInt last;            /* true if this block is the last block */

  /* mode independent information */
  uInt bitk;            /* bits in bit buffer */
  uLong bitb;           /* bit buffer */
  inflate_huft *hufts;  /* single malloc for tree space */
  Bytef *window;        /* sliding window */
  Bytef *end;           /* one byte after sliding window */
  Bytef *read;          /* window read pointer */
  Bytef *write;         /* window write pointer */
  check_func checkfn;   /* check function */
  uLong check;          /* check on output */

};


/* defines for inflate input/output */
/*   update pointers and return */
#define UPDBITS {s->bitb=b;s->bitk=k;}
#define UPDIN {z->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;}
#define UPDOUT {s->write=q;}
#define UPDATE {UPDBITS UPDIN UPDOUT}
#define LEAVE {UPDATE return inflate_flush(s,z,r);}
/*   get bytes and bits */
#define LOADIN {p=z->next_in;n=z->avail_in;b=s->bitb;k=s->bitk;}
#define NEEDBYTE {if(n)r=Z_OK;else LEAVE}
#define NEXTBYTE (n--,*p++)
#define NEEDBITS(j) {while(k<(j)){NEEDBYTE;b|=((uLong)NEXTBYTE)<<k;k+=8;}}
#define DUMPBITS(j) {b>>=(j);k-=(j);}
/*   output bytes */
#define WAVAIL (uInt)(q<s->read?s->read-q-1:s->end-q)
#define LOADOUT {q=s->write;m=(uInt)WAVAIL;}
#define WRAP {if(q==s->end&&s->read!=s->window){q=s->window;m=(uInt)WAVAIL;}}
#define FLUSH {UPDOUT r=inflate_flush(s,z,r); LOADOUT}
#define NEEDOUT {if(m==0){WRAP if(m==0){FLUSH WRAP if(m==0) LEAVE}}r=Z_OK;}
#define OUTBYTE(a) {*q++=(Byte)(a);m--;}
/*   load local pointers */
#define LOAD {LOADIN LOADOUT}

/* masks for lower bits (size given to avoid silly warnings with Visual C++) */
extern uInt inflate_mask[17];

/* copy as much as possible from the sliding window to the output area */
extern int inflate_flush OF((
    inflate_blocks_statef *,
    z_streamp ,
    int));

struct internal_state      {int dummy;}; /* for buggy compilers */

#endif
@


1.6
log
@Update to zlib-1.1.4
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.5
log
@Let's commit the correct files, shall we.  This is the real zlib-1.1.3...
@
text
@d1 1
d3 1
a3 1
 * Copyright (C) 1995-1998 Mark Adler
@


1.5.18.1
log
@Sync UBC branch to -current
@
text
@a0 1
/*	$OpenBSD$	*/
d2 1
a2 1
 * Copyright (C) 1995-2002 Mark Adler
@


1.5.8.1
log
@Merge in -current from roughly a week ago
@
text
@a0 1
/*	$OpenBSD$	*/
d2 1
a2 1
 * Copyright (C) 1995-2002 Mark Adler
@


1.5.8.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: infutil.h,v 1.5.8.1 2002/03/28 15:02:00 niklas Exp $	*/
@


1.5.16.1
log
@Pull in patch from current:
Fix (millert):
Update to zlib-1.1.4
@
text
@a0 1
/*	$OpenBSD: infutil.h,v 1.6 2002/03/12 00:26:30 millert Exp $	*/
d2 1
a2 1
 * Copyright (C) 1995-2002 Mark Adler
@


1.4
log
@Update from zlib-1.1.3.  These should really just be references to ../../../lib/libz/*
@
text
@d2 1
a2 1
 * Copyright (C) 1995-1996 Mark Adler
a43 2
      inflate_huft *tl;
      inflate_huft *td;         /* trees to free */
d53 1
@


1.3
log
@more const here and there; so would benefit everyone
@
text
@a0 2
/*	$OpenBSD: infutil.h,v 1.2 1997/11/07 15:57:51 niklas Exp $	*/

d89 1
a89 1
extern const uInt inflate_mask[17];
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d91 1
a91 1
extern uInt inflate_mask[17];
@


1.1
log
@Add libz and make libsa aware of it.  From NetBSD.
@
text
@d1 2
@
