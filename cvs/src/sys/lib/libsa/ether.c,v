head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.10
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.12
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.8
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.4
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.46
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.42
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.40
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.38
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.36
	OPENBSD_5_0:1.7.0.34
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.32
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.30
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.26
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.28
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.24
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.22
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.20
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.18
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.26
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.24
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.22
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.5.0.20
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.18
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.16
	OPENBSD_2_8:1.5.0.14
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.12
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.10
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.8
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.6
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.4
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2014.11.19.20.28.56;	author miod;	state Exp;
branches;
next	1.9;
commitid	F3EvOaAgKQy5tMAq;

1.9
date	2014.11.19.19.59.39;	author miod;	state Exp;
branches;
next	1.8;
commitid	aTSyJA1RRBImiKka;

1.8
date	2014.07.13.15.31.20;	author mpi;	state Exp;
branches;
next	1.7;
commitid	7SdCoErqwI9qHMpK;

1.7
date	2003.08.11.06.23.09;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.01.17.00.32;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.02.23.20.32.23;	author niklas;	state Exp;
branches
	1.5.10.1;
next	1.4;

1.4
date	96.12.08.15.15.49;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.10.16.14.18.36;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.09.23.14.18.52;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.57;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.57;	author deraadt;	state Exp;
branches;
next	;

1.5.10.1
date	2003.06.07.11.03.42;	author ho;	state Exp;
branches;
next	1.5.10.2;

1.5.10.2
date	2004.02.19.10.57.19;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Sprinkle const whenever possible.
@
text
@/*	$OpenBSD: ether.c,v 1.9 2014/11/19 19:59:39 miod Exp $	*/
/*	$NetBSD: ether.c,v 1.8 1996/10/13 02:29:00 christos Exp $	*/

/*
 * Copyright (c) 1992 Regents of the University of California.
 * All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * @@(#) Header: net.c,v 1.9 93/08/06 19:32:15 leres Exp  (LBL)
 */

#include <sys/param.h>
#include <sys/socket.h>

#include <net/if.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>
#include <netinet/ip.h>

#include "stand.h"
#include "net.h"
#include "netif.h"

/* Caller must leave room for ethernet header in front!! */
ssize_t
sendether(struct iodesc *d, void *pkt, size_t len, u_char *dea, int etype)
{
	ssize_t n;
	struct ether_header *eh;

#ifdef ETHER_DEBUG
	if (debug)
		printf("sendether: called\n");
#endif

	eh = (struct ether_header *)pkt - 1;
	len += sizeof(*eh);

	MACPY(d->myea, eh->ether_shost);		/* by byte */
	MACPY(dea, eh->ether_dhost);			/* by byte */
	eh->ether_type = htons(etype);

	n = netif_put(d, eh, len);
	if (n < 0 || (size_t)n < sizeof(*eh))
		return (-1);

	n -= sizeof(*eh);
	return (n);
}

/*
 * Get a packet of any Ethernet type, with our address or
 * the broadcast address.  Save the Ether type in arg 5.
 * NOTE: Caller must leave room for the Ether header.
 */
ssize_t
readether(struct iodesc *d, void *pkt, size_t len, time_t tleft,
    u_int16_t *etype)
{
	ssize_t n;
	struct ether_header *eh;

#ifdef ETHER_DEBUG
	if (debug)
		printf("readether: called\n");
#endif

	eh = (struct ether_header *)pkt - 1;
	len += sizeof(*eh);

	n = netif_get(d, eh, len, tleft);
	if (n < 0 || (size_t)n < sizeof(*eh))
		return (-1);

	/* Validate Ethernet address. */
	if (bcmp(d->myea, eh->ether_dhost, 6) != 0 &&
	    bcmp(bcea, eh->ether_dhost, 6) != 0) {
#ifdef ETHER_DEBUG
		if (debug)
			printf("readether: not ours (ea=%s)\n",
			    ether_sprintf(eh->ether_dhost));
#endif
		return (-1);
	}
	*etype = ntohs(eh->ether_type);

	n -= sizeof(*eh);
	return (n);
}

/*
 * Convert Ethernet address to printable (loggable) representation.
 */
static const char digits[] = "0123456789abcdef";
const char *
ether_sprintf(const u_char *ap)
{
	int i;
	static char etherbuf[18];
	char *cp = etherbuf;

	for (i = 0; i < 6; i++) {
		*cp++ = digits[*ap >> 4];
		*cp++ = digits[*ap++ & 0xf];
		*cp++ = ':';
	}
	*--cp = 0;
	return (etherbuf);
}
@


1.9
log
@Ansify.
@
text
@d1 1
a1 1
/*	$OpenBSD: ether.c,v 1.8 2014/07/13 15:31:20 mpi Exp $	*/
d126 3
a128 3
static char digits[] = "0123456789abcdef";
char *
ether_sprintf(u_char *ap)
@


1.8
log
@Stop using old n_long and n_short types.
@
text
@d1 1
a1 1
/*	$OpenBSD: ether.c,v 1.7 2003/08/11 06:23:09 deraadt Exp $	*/
d58 1
a58 6
sendether(d, pkt, len, dea, etype)
	struct iodesc *d;
	void *pkt;
	size_t len;
	u_char *dea;
	int etype;
d60 2
a61 2
ssize_t n;
struct ether_header *eh;
d89 2
a90 6
readether(d, pkt, len, tleft, etype)
struct iodesc *d;
void *pkt;
size_t len;
	time_t tleft;
u_int16_t *etype;
d92 2
a93 2
ssize_t n;
struct ether_header *eh;
@


1.7
log
@ansification and knf and protos
@
text
@d1 1
a1 1
/*	$OpenBSD: ether.c,v 1.6 2003/06/01 17:00:32 deraadt Exp $	*/
a49 1
#include <netinet/in_systm.h>
@


1.6
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
/*	$OpenBSD: ether.c,v 1.5 1998/02/23 20:32:23 niklas Exp $	*/
d66 2
a67 2
	register ssize_t n;
	register struct ether_header *eh;
d96 3
a98 3
	register struct iodesc *d;
	register void *pkt;
	register size_t len;
d100 1
a100 1
	register u_int16_t *etype;
d102 2
a103 2
	register ssize_t n;
	register struct ether_header *eh;
d138 1
a138 2
ether_sprintf(ap)
        register u_char *ap;
d140 1
a140 1
	register int i;
d142 1
a142 1
	register char *cp = etherbuf;
@


1.5
log
@strong signedness typing a version of egcs I tried months ago wanted
me to fix.  I am not sure these are necessary for gas 2.8 but I figure I
would commit them anyhow.
@
text
@d1 1
a1 1
/*	$OpenBSD: ether.c,v 1.4 1996/12/08 15:15:49 niklas Exp $	*/
d70 1
a70 1
 	if (debug)
d106 1
a106 1
 	if (debug)
@


1.5.10.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ether.c,v 1.5 1998/02/23 20:32:23 niklas Exp $	*/
d70 1
a70 1
	if (debug)
d106 1
a106 1
	if (debug)
@


1.5.10.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d66 2
a67 2
ssize_t n;
struct ether_header *eh;
d96 3
a98 3
struct iodesc *d;
void *pkt;
size_t len;
d100 1
a100 1
u_int16_t *etype;
d102 2
a103 2
ssize_t n;
struct ether_header *eh;
d138 2
a139 1
ether_sprintf(u_char *ap)
d141 1
a141 1
	int i;
d143 1
a143 1
	char *cp = etherbuf;
@


1.4
log
@Merge to NetBSD 961207
@
text
@d1 1
a1 1
/*	$OpenBSD: ether.c,v 1.3 1996/10/16 14:18:36 mickey Exp $	*/
d82 1
a82 1
	if (n == -1 || n < sizeof(*eh))
d114 1
a114 1
	if (n == -1 || n < sizeof(*eh))
d141 1
a141 1
	register i;
@


1.3
log
@remove unneeded include <string.h>
@
text
@d1 2
a2 2
/*	$OpenBSD: ether.c,v 1.2 1996/09/23 14:18:52 mickey Exp $	*/
/*	$NetBSD: ether.c,v 1.6 1995/09/14 23:45:25 pk Exp $	*/
d123 1
a123 1
				ether_sprintf(eh->ether_dhost));
@


1.2
log
@add OpenBSD tag.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a44 1
#include <string.h>
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
