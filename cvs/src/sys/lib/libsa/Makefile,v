head	1.28;
access;
symbols
	OPENBSD_6_1_BASE:1.28
	OPENBSD_6_0:1.28.0.4
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.2
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.26.0.6
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.25.0.4
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.24.0.8
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.24.0.4
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.24.0.2
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.22.0.30
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.28
	OPENBSD_5_0:1.22.0.26
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.24
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.22
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.18
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.20
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.16
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.14
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.12
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.10
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.22.0.8
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.22.0.6
	OPENBSD_4_0_BASE:1.22
	OPENBSD_3_9:1.22.0.4
	OPENBSD_3_9_BASE:1.22
	OPENBSD_3_8:1.22.0.2
	OPENBSD_3_8_BASE:1.22
	OPENBSD_3_7:1.21.0.8
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.21.0.6
	OPENBSD_3_6_BASE:1.21
	SMP_SYNC_A:1.21
	SMP_SYNC_B:1.21
	OPENBSD_3_5:1.21.0.4
	OPENBSD_3_5_BASE:1.21
	OPENBSD_3_4:1.21.0.2
	OPENBSD_3_4_BASE:1.21
	UBC_SYNC_A:1.20
	OPENBSD_3_3:1.20.0.10
	OPENBSD_3_3_BASE:1.20
	OPENBSD_3_2:1.20.0.8
	OPENBSD_3_2_BASE:1.20
	OPENBSD_3_1:1.20.0.6
	OPENBSD_3_1_BASE:1.20
	UBC_SYNC_B:1.20
	UBC:1.20.0.4
	UBC_BASE:1.20
	OPENBSD_3_0:1.20.0.2
	OPENBSD_3_0_BASE:1.20
	OPENBSD_2_9_BASE:1.19
	OPENBSD_2_9:1.19.0.20
	OPENBSD_2_8:1.19.0.18
	OPENBSD_2_8_BASE:1.19
	OPENBSD_2_7:1.19.0.16
	OPENBSD_2_7_BASE:1.19
	SMP:1.19.0.14
	SMP_BASE:1.19
	kame_19991208:1.19
	OPENBSD_2_6:1.19.0.12
	OPENBSD_2_6_BASE:1.19
	OPENBSD_2_5:1.19.0.10
	OPENBSD_2_5_BASE:1.19
	OPENBSD_2_4:1.19.0.8
	OPENBSD_2_4_BASE:1.19
	OPENBSD_2_3:1.19.0.6
	OPENBSD_2_3_BASE:1.19
	OPENBSD_2_2:1.19.0.4
	OPENBSD_2_2_BASE:1.19
	OPENBSD_2_1:1.19.0.2
	OPENBSD_2_1_BASE:1.19
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.28
date	2015.11.16.19.33.52;	author miod;	state Exp;
branches;
next	1.27;
commitid	5gnqUR6VheSiU9SF;

1.27
date	2015.09.18.13.42.31;	author miod;	state Exp;
branches;
next	1.26;
commitid	ZDpEheHNR6QmrQfv;

1.26
date	2014.11.19.20.01.33;	author miod;	state Exp;
branches;
next	1.25;
commitid	9VZgPwegRuvi9VC1;

1.25
date	2014.07.13.09.26.08;	author jasper;	state Exp;
branches;
next	1.24;
commitid	Cnjup0HpCIRrcQ6o;

1.24
date	2013.01.01.18.49.33;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2013.01.01.00.58.25;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2005.05.24.22.25.46;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2003.06.01.17.00.32;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2001.06.23.01.47.39;	author drahn;	state Exp;
branches;
next	1.19;

1.19
date	97.05.05.14.32.18;	author millert;	state Exp;
branches
	1.19.14.1;
next	1.18;

1.18
date	97.04.13.21.44.46;	author weingart;	state Exp;
branches;
next	1.17;

1.17
date	97.04.02.04.57.34;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	97.02.17.12.26.20;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	97.02.16.14.52.00;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	97.02.06.22.57.03;	author downsj;	state Exp;
branches;
next	1.13;

1.13
date	97.02.06.14.22.32;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	97.02.06.07.05.48;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	97.02.06.06.46.57;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	97.02.06.02.56.44;	author downsj;	state Exp;
branches;
next	1.9;

1.9
date	96.12.08.15.15.44;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	96.10.16.12.46.32;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	96.10.15.09.41.54;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	96.09.23.14.18.44;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.09.20.14.20.23;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.09.18.13.56.08;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	95.12.26.17.46.26;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.07.03.27.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.56;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.56;	author deraadt;	state Exp;
branches;
next	;

1.19.14.1
date	2001.07.04.10.49.02;	author niklas;	state Exp;
branches;
next	1.19.14.2;

1.19.14.2
date	2003.06.07.11.03.42;	author ho;	state Exp;
branches;
next	;


desc
@@


1.28
log
@Replace unbounded gets() in libsa with getln() which takes a buffer size,
and convert all gets() users.
ok deraadt@@
@
text
@#	$OpenBSD: Makefile,v 1.27 2015/09/18 13:42:31 miod Exp $
#	$NetBSD: Makefile,v 1.13 1996/10/02 16:19:51 ws Exp $

LIB=	sa

DIR=${SAREL}${SADIR}

.PATH: ${DIR}

#DEBUGFLAGS= -DBOOTP_DEBUG -DNETIF_DEBUG -DETHER_DEBUG -DNFS_DEBUG -DRPC_DEBUG -DRARP_DEBUG -DDEBUG -DPARANOID -Wall
#DEBUGFLAGS= -Wall
AFLAGS+=${XAFLAGS}
CFLAGS+=${XCFLAGS} -D_STANDALONE -DCOMPAT_UFS $(DEBUGFLAGS) -I${DIR} -I${DIR}/../..
#
# Needed for alpha and macppc
CFLAGS+=$(EXTRACFLAGS)

.if defined(USE_LOADFILE)
SRCS+= loadfile.c
.endif

.if defined(SA_ZLIB)
CPPFLAGS+= -D__INTERNAL_LIBSA_CREAD
.endif

# stand routines
SRCS+=	alloc.c memcpy.c exit.c getfile.c getchar.c getln.c globals.c \
	printf.c putchar.c snprintf.c strerror.c strcmp.c memset.c memcmp.c \
	strncpy.c strncmp.c strchr.c

# math from libkern
SRCS+=	divdi3.c qdivrem.c
.PATH:	${DIR}/../../lib/libkern

# io routines
SRCS+=	close.c closeall.c dev.c disklabel.c dkcksum.c cons.c ioctl.c \
	lseek.c open.c nullfs.c read.c stat.c fstat.c write.c readdir.c

# boot filesystems
SRCS+=	ufs.c cd9660.c

.if defined(SA_ZLIB)
SRCS+=	cread.c
.endif

.if !defined(NO_NET)
SRCS+=	nfs.c

# network routines
SRCS+=	arp.c ether.c in_cksum.c net.c netif.c netudp.c rpc.c

# network info services:
SRCS+=	bootp.c rarp.c bootparam.c

.else
# C flags
CFLAGS+=-DNO_NET
.endif


NOPROFILE=
NOPIC=
OBJMACHINE=

install:

.include <bsd.lib.mk>
@


1.27
log
@Remove orphaned files.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2014/11/19 20:01:33 miod Exp $
d27 1
a27 1
SRCS+=	alloc.c memcpy.c exit.c getfile.c getchar.c gets.c globals.c \
@


1.26
log
@Move {recv,send}udp() out of net.c into their own file; to be used shortly.
Add the new files to the few md libsa builds which require it.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2014/07/13 09:26:08 jasper Exp $
a37 3

# unix device
# SRCS+=	unixdev.c
@


1.25
log
@move putchar() into libsa

"sure" miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2013/01/01 18:49:33 miod Exp $
d53 1
a53 1
SRCS+=	arp.c ether.c in_cksum.c net.c netif.c rpc.c
@


1.24
log
@Remove libsa exec.c, not used by anything anymore; all boot blocks now use
loadfile or a derivative of.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2013/01/01 00:58:25 miod Exp $
d27 2
a28 2
SRCS+=	alloc.c memcpy.c exit.c getfile.c gets.c globals.c \
	printf.c snprintf.c strerror.c strcmp.c memset.c memcmp.c \
@


1.23
log
@Remove unused XCPPFLAGS.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2005/05/24 22:25:46 millert Exp $
d27 1
a27 1
SRCS+=	alloc.c memcpy.c exit.c exec.c getfile.c gets.c globals.c \
@


1.22
log
@-ansi considered harmful, even in comments
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2003/06/01 17:00:32 deraadt Exp $
d15 1
a15 1
# Needed for PowerPC
a16 1
CPPFLAGS+=${XCPPFLAGS}
@


1.21
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2001/06/23 01:47:39 drahn Exp $
d11 1
a11 1
#DEBUGFLAGS= -ansi -pedantic -Wall
@


1.20
log
@Add MI loadfile support, from NetBSD
This is currently only used on powerpc, but may be looked
at for other architectures.
Piece of the support to have kernel symbols on powerpc.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 1997/05/05 14:32:18 millert Exp $
d28 3
a30 2
SRCS+=	alloc.c memcpy.c exit.c exec.c getfile.c gets.c globals.c printf.c \
	strerror.c strcmp.c memset.c memcmp.c strncpy.c strncmp.c strchr.c
@


1.19
log
@Add strchr.c
@
text
@d19 4
@


1.19.14.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@a18 4
.if defined(USE_LOADFILE)
SRCS+= loadfile.c
.endif

@


1.19.14.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19.14.1 2001/07/04 10:49:02 niklas Exp $
d28 2
a29 3
SRCS+=	alloc.c memcpy.c exit.c exec.c getfile.c gets.c globals.c \
	printf.c snprintf.c strerror.c strcmp.c memset.c memcmp.c \
	strncpy.c strncmp.c strchr.c
@


1.18
log
@Nuke i386 specific stuff.  Not needed anymore.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 1997/04/02 04:57:34 mickey Exp $
d24 2
a25 2
SRCS+=	alloc.c memcpy.c exit.c exec.c getfile.c gets.c globals.c \
	printf.c strerror.c strcmp.c memset.c memcmp.c strncpy.c strncmp.c
@


1.17
log
@no more arch/i386/stand/libsa/Makefile.inc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 1997/02/17 12:26:20 mickey Exp $
a58 5
.if ${MACHINE_ARCH}=="i386"
CFLAGS+=-I${DIR}/../../arch/${MACHINE_ARCH}/stand/libsa
.PATH: ${DIR}/../../arch/${MACHINE_ARCH}/stand/libsa
.include "${DIR}/../../arch/${MACHINE_ARCH}/stand/libsa/Makefile.inc"
.endif
@


1.16
log
@no unixdev by dafault
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 1997/02/16 14:52:00 mickey Exp $
a20 5
.endif

.if ${MACHINE_ARCH}=="i386"
.PATH: ${DIR}/../../arch/${MACHINE_ARCH}/stand
.include "${DIR}/../../arch/${MACHINE_ARCH}/stand/Makefile.inc"
@


1.15
log
@test/debug device, readdir->Makefile
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 1997/02/06 22:57:03 downsj Exp $
d41 1
a41 1
SRCS+=	unixdev.c
@


1.14
log
@* remove reference to non-existant fat.c.
* make cread.c work with libz again.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 1997/02/06 14:22:32 mickey Exp $
d38 4
a41 1
	lseek.c open.c nullfs.c read.c stat.c fstat.c write.c
@


1.13
log
@remove net/zlib.c (use -lz now)
export NO_NET and SA_ZLIB to the Makefile (from Makefile.inc)
add -p printf flag (tiny code) just for gcc -Wall
import latest alloc.c from netbsd
text    data    bss     dec     hex
400     8       0       408     198
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1997/02/06 07:05:48 mickey Exp $
d41 1
a41 1
SRCS+=	ufs.c cd9660.c fat.c
@


1.12
log
@need -I for zlib.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1997/02/06 06:46:57 mickey Exp $
d37 1
a37 1
SRCS+=	close.c closeall.c dev.c disklabel.c dkcksum.c ioctl.c \
a44 3
SRCS+=	zlib.c
.PATH:	${DIR}/../../net
CFLAGS+=-DNO_DEFALTE -I${DIR}/../../net
@


1.11
log
@add strncmp
use net/zlib.c
do not compile some files w/ NO_NET
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1997/02/06 02:56:44 downsj Exp $
d47 1
a47 1
CFLAGS+=-DNO_DEFALTE
@


1.10
log
@Add libz and make libsa aware of it.  From NetBSD.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1996/12/08 15:15:44 niklas Exp $
d30 5
a34 1
	printf.c strerror.c strcmp.c memset.c memcmp.c strncpy.c
d39 4
d45 3
d51 2
a54 1
.endif
d59 10
a68 2
# boot filesystems
SRCS+=	ufs.c nfs.c cd9660.c
@


1.9
log
@Merge to NetBSD 961207
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1996/10/16 12:46:32 mickey Exp $
d19 4
d35 3
@


1.8
log
@cleanup, add new files
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile,v 1.7 1996/10/15 09:41:54 mickey Exp $
#	$NetBSD: Makefile,v 1.10 1995/10/01 06:00:32 phil Exp $
d10 1
a10 1
#DEBUGFLAGS= -DNETIF_DEBUG -DETHER_DEBUG -DNFS_DEBUG -DRPC_DEBUG -DRARP_DEBUG -DDEBUG -DPARANOID -Wall
d14 3
d41 1
a41 1
SRCS+=	ufs.c nfs.c
@


1.7
log
@zlib need this
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1996/09/23 14:18:44 mickey Exp $
d16 4
a19 2
all:
	echo ${S}/arch/${MACHINE_ARCH}/stand/Makefile.inc
d22 2
a23 2
SRCS+=	alloc.c bcopy.c memcpy.c exit.c exec.c getfile.c gets.c globals.c \
	printf.c strerror.c strcmp.c memset.c
@


1.6
log
@add OpenBSD tag.
@
text
@d1 1
a1 1
#	$OpenBSD$
d16 3
d21 1
a21 1
	printf.c strerror.c strcmp.c
@


1.5
log
@fix makefiles. cleanup, addopt for boot.
@
text
@d1 1
@


1.4
log
@we need this.
@
text
@d11 3
a13 1
CFLAGS+=-DSTANDALONE -DCOMPAT_UFS $(DEBUGFLAGS) -I${DIR} -I${DIR}/../..
@


1.3
log
@put memcpy into libsa
@
text
@d15 1
a15 1
	printf.c strerror.c
@


1.2
log
@shrink bootblocks by splitting libsa contents into more files. from
waldi@@moacs.indiv.nl.net, netbsd pr#1817
@
text
@d14 1
a14 1
SRCS+=	alloc.c bcopy.c exit.c exec.c getfile.c gets.c globals.c \
@


1.1
log
@Initial revision
@
text
@d18 2
a19 2
SRCS+=	close.c dev.c disklabel.c ioctl.c lseek.c open.c read.c \
	stat.c write.c
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
