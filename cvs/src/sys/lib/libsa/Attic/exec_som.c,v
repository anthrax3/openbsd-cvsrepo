head	1.4;
access;
symbols
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	UBC_SYNC_A:1.4
	UBC_SYNC_B:1.4
	SMP:1.4.0.2;
locks; strict;
comment	@ * @;


1.4
date	98.07.17.17.18.03;	author mickey;	state dead;
branches;
next	1.3;

1.3
date	98.07.14.17.17.54;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.07.14.15.22.27;	author mickey;	state dead;
branches;
next	1.1;

1.1
date	98.07.14.15.21.43;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@there will be no exec_som
@
text
@/*	$OpenBSD: exec_som.c,v 1.3 1998/07/14 17:17:54 mickey Exp $	*/

/*
 * Copyright (c) 1998 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include "libsa.h"
#include <machine/exec.h>
#include <lib/libsa/exec.h>

int
som_probe(fd, hdr)
	int fd;
	union x_header *hdr;
{
	return !SOM_BADMAGIC(&hdr->x_som);
}


int
som_load(fd, xp)
	int fd;
	register struct x_param *xp;
{
	register struct som_filehdr *xf = &xp->xp_hdr->x_som;
	struct som_exec_auxhdr x;

	if (lseek(fd, xf->aux_header_location, SEEK_SET) < 0 ||
	    read (fd, &x, sizeof(x)) != sizeof(x)) {
		if (!errno)
			errno = EIO;
		return -1;
	}

	xp->xp_entry = x.exec_entry;

	xp->text.size = hppa_round_page(x.exec_tsize);
	xp->data.size = hppa_round_page(x.exec_dsize);
	xp->bss.size = x.exec_bsize;
	xp->sym.size = xf->symbol_total *
		sizeof(struct som_symbol_dictionary_record);
	xp->str.size = xf->symbol_strings_size;

	xp->text.foff = x.exec_tfile;
	xp->data.foff = x.exec_dfile;
	xp->bss.foff = 0;
	if (xf->symbol_total) {
		xp->sym.foff = xf->symbol_location;
		xp->str.foff = xf->symbol_strings_location;
	}

	xp->text.addr = x.exec_tmem;
	xp->data.addr = x.exec_dmem;
	xp->bss.addr = xp->data.addr + x.exec_dsize;
	xp->sym.addr = xp->bss.addr + xp->bss.size;
	xp->str.addr = xp->sym.addr + xp->sym.size;

	return 0;
}
@


1.3
log
@add HP SOM support
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.2
log
@oops
@
text
@d1 2
d4 27
a30 18
 * Copyright 1996 1995 by Open Software Foundation, Inc.   
 *              All Rights Reserved 
 *  
 * Permission to use, copy, modify, and distribute this software and 
 * its documentation for any purpose and without fee is hereby granted, 
 * provided that the above copyright notice appears in all copies and 
 * that both the copyright notice and this permission notice appear in 
 * supporting documentation. 
 *  
 * OSF DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE 
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
 * FOR A PARTICULAR PURPOSE. 
 *  
 * IN NO EVENT SHALL OSF BE LIABLE FOR ANY SPECIAL, INDIRECT, OR 
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM 
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN ACTION OF CONTRACT, 
 * NEGLIGENCE, OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION 
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. 
d33 4
a36 1
#include <sys/exec_som.h>
d39 3
a41 1
som_recog(struct file *fp, objfmt_t ofmt, void *hdr)
d43 1
a43 4
    struct header *filehdr = *(struct header **)hdr;
    
    return (filehdr->system_id == CPU_PA_RISC1_0 ||
	    filehdr->system_id == CPU_PA_RISC1_1);
d46 1
d48 3
a50 1
som_load(struct file *fp, objfmt_t ofmt, void *hdr)
d52 34
a85 41
    struct loader_info *lp = &ofmt->info;
    struct header filehdr;
    struct som_exec_auxhdr x;
    register int	result;

    /*
     * first read in the hp file header, there is a pointer to the "exec"
     * structure in the header.
     */

    result = read_file(fp, 0, (vm_offset_t)&filehdr, sizeof(filehdr)); 
    if (result)
	return (result);

    /*
     * now read in the hp800 equivalent of an exec structure
     */

    result = read_file(fp, (vm_offset_t)filehdr.aux_header_location,
		       (vm_offset_t)&x, sizeof(x));
    if (result)
	return (result);

    lp->text_start  = x.exec_tmem;
    lp->text_size   = round_page(x.exec_tsize);
    lp->text_offset = x.exec_tfile;
    lp->data_start  = x.exec_dmem;
    lp->data_size   = round_page(x.exec_dsize);
    lp->data_offset = x.exec_dfile;
    lp->bss_size    = x.exec_bsize;

    lp->entry_1 = x.exec_flags;
    lp->entry_2 = filehdr.presumed_dp;

    lp->sym_offset[0] = 0;
    lp->sym_size[0] = 0;

    lp->str_offset = 0;
    lp->str_size = 0;
    
    return 0;
a86 1

@


1.1
log
@HP object file formats
@
text
@@

