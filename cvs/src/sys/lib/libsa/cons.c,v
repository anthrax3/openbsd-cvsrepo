head	1.14;
access;
symbols
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.26
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.22
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.24
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.16
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.20
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.18
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.14
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.12
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.10
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.8
	OPENBSD_5_0:1.14.0.6
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.4
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.13.0.8
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.10
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.6
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.4
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.2
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.11.0.18
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.16
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.14
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.28
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.26
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.24
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.9.0.22
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.20
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.18
	OPENBSD_2_8:1.9.0.16
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.14
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.12
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.10
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.8
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.6
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.4
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3;
locks; strict;
comment	@ * @;


1.14
date	2010.05.09.15.30.28;	author jsg;	state Exp;
branches;
next	1.13;

1.13
date	2008.01.23.16.37.55;	author jsing;	state Exp;
branches;
next	1.12;

1.12
date	2007.09.10.17.29.02;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2003.08.11.06.23.09;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.23.28.09;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.08.13.14.18.09;	author niklas;	state Exp;
branches
	1.9.12.1;
next	1.8;

1.8
date	97.08.12.21.28.39;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	97.08.07.11.32.19;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	97.08.04.20.31.21;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	97.07.17.23.26.07;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	97.07.14.22.03.09;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.04.26.17.50.08;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	97.04.02.04.59.22;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.10.23.09.02.53;	author mickey;	state Exp;
branches;
next	;

1.9.12.1
date	2003.06.07.11.03.42;	author ho;	state Exp;
branches;
next	1.9.12.2;

1.9.12.2
date	2004.02.19.10.57.19;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.14
log
@shuffle an extern around so gcc4 doesn't whinge about incomplete types
as suggested by miod.

ok miod@@
@
text
@/*	$OpenBSD: cons.c,v 1.13 2008/01/23 16:37:55 jsing Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * form: OpenBSD: cons.c,v 1.7 1996/04/21 22:19:48
 * from: OpenBSD: cninit.c,v 1.2 1996/03/30 02:03:45
 * from: Utah $Hdr: cons.c 1.7 92/01/21$
 *
 *	@@(#)cons.c	8.2 (Berkeley) 1/12/94
 */

#include <sys/param.h>
#include "stand.h"
#include <dev/cons.h>

extern struct consdev constab[];

void
cninit(void)
{
	struct consdev *cp;

	/*
	 * Collect information about all possible consoles
	 * and find the one with highest priority
	 */
	for (cp = constab; cp->cn_probe; cp++) {
		(*cp->cn_probe)(cp);
		if (cp->cn_pri != CN_DEAD &&
		    (cn_tab == NULL || cp->cn_pri > cn_tab->cn_pri))
			cn_tab = cp;
	}
	/*
	 * No console, we can handle it
	 */
	if ((cp = cn_tab) == NULL)
		return;
	/*
	 * Turn on console
	 */
	(*cp->cn_init)(cp);
}

int
cnset(dev_t dev)
{
	struct consdev *cp;

	/*
	 * Look for the specified console device and use it.
	 */
	for (cp = constab; cp->cn_probe; cp++) {
		if (major(cp->cn_dev) == major(dev)) {
			/* short-circuit noop */
			if (cp == cn_tab && cp->cn_dev == dev)
				return (0);
			if (cp->cn_pri != CN_DEAD) {
				cn_tab = cp;
				cp->cn_dev = dev;
				/* Turn it on.  */
				(*cp->cn_init)(cp);
				return (0);
			}
			break;
		}
	}
	return (1);
}

int
cngetc(void)
{
	if (cn_tab == NULL)
		return (0);
	return ((*cn_tab->cn_getc)(cn_tab->cn_dev));
}

void
cnputc(int c)
{
	if (cn_tab != NULL && c) {
		(*cn_tab->cn_putc)(cn_tab->cn_dev, c);
		if (c == '\n')
			(*cn_tab->cn_putc)(cn_tab->cn_dev, '\r');
	}
}

int
cnischar(void)
{
	if (cn_tab != NULL)
		return ((*cn_tab->cn_getc)(cn_tab->cn_dev|0x80));
	return 0;
}
@


1.13
log
@Cleanup cn_pri. Change constants to more meaningful names, rather than
the hp300 related ones currently in use. CN_NORMAL becomes CN_LOWPRI,
CN_INTERNAL becomes CN_MIDPRI and CN_REMOTE becomes CN_HIGHPRI.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.12 2007/09/10 17:29:02 miod Exp $	*/
d46 2
@


1.12
log
@Make function pointer calls look all alike; from Holger Mikolon.
No change in generated code.
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.11 2003/08/11 06:23:09 deraadt Exp $	*/
d58 1
a58 1
		if (cp->cn_pri > CN_DEAD &&
d86 1
a86 1
			if (cp->cn_pri > CN_DEAD) {
@


1.11
log
@ansification and knf and protos
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.10 2003/06/02 23:28:09 millert Exp $	*/
d90 1
a90 1
				(cp->cn_init)(cp);
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.9 1997/08/13 14:18:09 niklas Exp $	*/
d48 1
a48 1
cninit()
d50 1
a50 1
	register struct consdev *cp;
d74 1
a74 2
cnset(dev)
	dev_t dev;
d100 1
a100 1
cngetc()
d108 1
a108 2
cnputc(c)
	register int c;
d118 1
a118 1
cnischar()
d122 1
a122 2
	else
		return 0;
@


1.9
log
@Add console switching logic
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.8 1997/08/12 21:28:39 mickey Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.9.12.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.9 1997/08/13 14:18:09 niklas Exp $	*/
d20 5
a24 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.9.12.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d48 1
a48 1
cninit(void)
d50 1
a50 1
	struct consdev *cp;
d74 2
a75 1
cnset(dev_t dev)
d101 1
a101 1
cngetc(void)
d109 2
a110 1
cnputc(int c)
d120 1
a120 1
cnischar(void)
d124 2
a125 1
	return 0;
@


1.8
log
@new, like dev/cninit.c+cons.c
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d75 27
@


1.7
log
@grammar
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.6 1997/08/04 20:31:21 mickey Exp $	*/
d4 7
a10 2
 * Copyright (c) 1996 Michael Shalayeff
 * All rights reserved.
d22 5
a26 3
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d28 3
a30 3
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
d40 5
d47 2
a48 1
#include <sys/types.h>
a49 1
#include "stand.h"
d51 4
a54 2
static const struct consw *console = &consw[0];
int consdev;
d56 9
a64 11
int
cons_probe()
{
	int i, f = 0;
	consdev = CN_NORMAL;
	for (i = 0; i < ncons; i++) {
		if ((consw[i].cn_probe)() != 0) {
			if (f == 0)
				f++, console = &consw[i];
			printf("%s present\n", consw[i].name);
		}
d66 9
a74 4
	if (!f)	/* not found */
		printf("no console detected, ");
	printf("using %s console\n", console->name);
	return 1;
d77 2
a78 3
char *
ttyname(fd)
	int fd;
d80 3
a82 4
	if (fd)
		return "(not a tty)";
	else
		return console->name;
d86 2
a87 2
putc(c)
	int	c;
d89 5
a93 1
	(*console->cn_putc)(c);
d97 1
a97 1
getc()
d99 4
a102 7
	return (*console->cn_getc)();
}

int
ischar()
{
	return (*console->cn_ischar)();
a103 1

@


1.6
log
@do consdev
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.5 1997/07/17 23:26:07 mickey Exp $	*/
d55 1
a55 1
		printf("no any console detected, ");
@


1.5
log
@i love that const
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.4 1997/07/14 22:03:09 mickey Exp $	*/
d35 2
d40 1
d46 1
@


1.4
log
@nicer include
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.3 1997/04/26 17:50:08 mickey Exp $	*/
d37 1
a37 1
static struct consw *console = &consw[0];
@


1.3
log
@boot.conf support
ttyname function in cons.c
rdonly var 'tty' to view tty settings
serial console soon
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.2 1997/04/02 04:59:22 mickey Exp $	*/
d35 1
a35 1
#include <stand.h>
@


1.2
log
@add dumb probe routine
@
text
@d1 1
a1 1
/*	$OpenBSD: cons.c,v 1.1 1996/10/23 09:02:53 mickey Exp $	*/
d37 1
a37 1
struct consw *console = &consw[0];
d42 1
a42 1
	int i;
d44 3
a46 1
		if ((consw[i].cn_probe)() != 0)
d48 1
d50 2
d54 10
@


1.1
log
@introduce multiconsoles.
add btochs macro.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 12
@
