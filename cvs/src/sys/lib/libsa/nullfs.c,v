head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.56
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.54
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.50
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.52
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.44
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.48
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.46
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.42
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.40
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.38
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.36
	OPENBSD_5_0:1.7.0.34
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.32
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.30
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.26
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.28
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.24
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.22
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.20
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.18
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.30
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.28
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.26
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.24
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.22
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.20
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2003.08.11.06.23.09;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.28.09;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.01.17.00.33;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.05.04.22.41.24;	author millert;	state Exp;
branches
	1.4.14.1;
next	1.3;

1.3
date	97.02.16.14.39.38;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.09.23.14.19.00;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.12.07.03.27.43;	author deraadt;	state Exp;
branches;
next	;

1.4.14.1
date	2003.06.07.11.03.42;	author ho;	state Exp;
branches;
next	1.4.14.2;

1.4.14.2
date	2004.02.19.10.57.19;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@ansification and knf and protos
@
text
@/*	$OpenBSD: nullfs.c,v 1.6 2003/06/02 23:28:09 millert Exp $	*/
/*	$NetBSD: open.c,v 1.9 1995/09/19 09:16:52 thorpej Exp $	*/

/*-
 * Copyright (c) 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * The Mach Operating System project at Carnegie-Mellon University.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)open.c	8.1 (Berkeley) 6/11/93
 *
 *
 * Copyright (c) 1989, 1990, 1991 Carnegie Mellon University
 * All Rights Reserved.
 *
 * Author: Alessandro Forin
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include "stand.h"

/*
 * Null filesystem
 */
int
null_open(char *path, struct open_file *f)
{
	return EIO;
}

int
null_close(struct open_file *f)
{
	return 0;
}

ssize_t
null_read(struct open_file *f, void *buf, size_t size, size_t *resid)
{
	return EIO;
}

ssize_t
null_write(struct open_file *f, void *buf, size_t size, size_t *resid)
{
	return EIO;
}

off_t
null_seek(struct open_file *f, off_t offset, int where)
{
	errno = EIO;
	return -1;
}

int
null_stat(struct open_file *f, struct stat *sb)
{
	return EIO;
}

#ifndef NO_READDIR
int
null_readdir(struct open_file *f, char *name)
{
	return EIO;
}
#endif
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: nullfs.c,v 1.5 2003/06/01 17:00:33 deraadt Exp $	*/
d70 1
a70 1
null_open (char *path, struct open_file *f)
d82 1
a82 1
null_read (struct open_file *f, void *buf, size_t size, size_t *resid)
d88 1
a88 1
null_write (struct open_file *f, void *buf, size_t size, size_t *resid)
d94 1
a94 1
null_seek (struct open_file *f, off_t offset, int where)
d101 1
a101 1
null_stat (struct open_file *f, struct stat *sb)
d108 1
a108 1
null_readdir (struct open_file *f, char *name)
@


1.5
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
/*	$OpenBSD: nullfs.c,v 1.4 1997/05/04 22:41:24 millert Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@Make null_read() and null_write() consistent with their prototypes.
@
text
@d1 1
a1 1
/*	$OpenBSD: nullfs.c,v 1.3 1997/02/16 14:39:38 mickey Exp $	*/
d40 1
a40 1
 *  
d46 1
a46 1
 * 
d52 1
a52 1
 * 
d56 1
a56 1
 * 
d58 1
a58 1
 * 
d63 1
a63 1
 * 
@


1.4.14.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: nullfs.c,v 1.4 1997/05/04 22:41:24 millert Exp $	*/
d19 5
a23 1
 * 3. Neither the name of the University nor the names of its contributors
d40 1
a40 1
 *
d46 1
a46 1
 *
d52 1
a52 1
 *
d56 1
a56 1
 *
d58 1
a58 1
 *
d63 1
a63 1
 *
@


1.4.14.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d70 1
a70 1
null_open(char *path, struct open_file *f)
d82 1
a82 1
null_read(struct open_file *f, void *buf, size_t size, size_t *resid)
d88 1
a88 1
null_write(struct open_file *f, void *buf, size_t size, size_t *resid)
d94 1
a94 1
null_seek(struct open_file *f, off_t offset, int where)
d101 1
a101 1
null_stat(struct open_file *f, struct stat *sb)
d108 1
a108 1
null_readdir(struct open_file *f, char *name)
@


1.3
log
@opendir, readdir, closedir (define NO_READDIR, if none required)
minor fix in cd9660
only ufs working, all the others are on the list....
@
text
@d1 1
a1 1
/*	$OpenBSD: nullfs.c,v 1.2 1996/09/23 14:19:00 mickey Exp $	*/
d85 1
a85 1
int
d91 1
a91 1
int
@


1.2
log
@add OpenBSD tag.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d73 2
a74 1
int	null_open (char *path, struct open_file *f)
d76 1
a76 2
	errno  = EIO;
	return -1;
d79 2
a80 1
int	null_close(struct open_file *f)
d85 2
a86 1
ssize_t	null_read (struct open_file *f, void *buf, size_t size, size_t *resid)
d88 7
a94 2
	errno = EIO;
	return -1;
d97 2
a98 1
ssize_t	null_write (struct open_file *f, void *buf, size_t size, size_t *resid)
d104 2
a105 1
off_t	null_seek (struct open_file *f, off_t offset, int where)
d107 1
a107 2
	errno = EIO;
	return -1;
d110 3
a112 1
int	null_stat (struct open_file *f, struct stat *sb)
d114 1
a114 2
	errno = EIO;
	return -1;
d116 1
@


1.1
log
@shrink bootblocks by splitting libsa contents into more files. from
waldi@@moacs.indiv.nl.net, netbsd pr#1817
@
text
@d1 1
@
