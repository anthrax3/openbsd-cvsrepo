head	1.16;
access;
symbols
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.15.0.6
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.22
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.20
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.18
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.16
	OPENBSD_5_0:1.11.0.14
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.12
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.10
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.6
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.8
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.4
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.2
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.10.0.20
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.18
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.16
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.14
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.8
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.9
	UBC:1.8.0.6
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.2
	SMP_BASE:1.3
	kame_19991208:1.1;
locks; strict;
comment	@ * @;


1.16
date	2017.02.05.16.04.14;	author jca;	state Exp;
branches;
next	1.15;
commitid	2R0NOjEDy2jGtnjL;

1.15
date	2015.03.14.03.38.52;	author jsg;	state Exp;
branches;
next	1.14;
commitid	p4LJxGKbi0BU2cG6;

1.14
date	2014.09.08.06.24.13;	author jsg;	state Exp;
branches;
next	1.13;
commitid	ZqXwxwmeo3l29NOg;

1.13
date	2014.06.03.13.32.24;	author mpi;	state Exp;
branches;
next	1.12;
commitid	2Ufy37wyO5neufOK;

1.12
date	2013.10.17.16.27.45;	author bluhm;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.11.19.00.50;	author mcbride;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.14.14.24.44;	author itojun;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.30.04.08.05;	author itojun;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.22.01.40.40;	author itojun;	state Exp;
branches
	1.8.6.1;
next	1.7;

1.7
date	2001.02.21.17.22.05;	author itojun;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.16.15.57.58;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	2001.02.16.08.48.05;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.16.08.22.04;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.07.06.09.09;	author itojun;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	99.12.10.10.04.27;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	99.12.08.06.50.20;	author itojun;	state Exp;
branches;
next	;

1.3.2.1
date	2001.05.14.22.40.16;	author niklas;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2003.03.28.00.41.29;	author niklas;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2003.05.16.00.29.44;	author niklas;	state Exp;
branches;
next	;

1.8.6.1
date	2002.06.11.03.31.37;	author art;	state Exp;
branches;
next	1.8.6.2;

1.8.6.2
date	2003.05.19.22.27.25;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Use percpu counters for ip6stat

Try to follow the existing examples.  Some notes:
- don't implement counters_dec() yet, which could be used in two
  similar chunks of code.  Let's see if there are more users first.
- stop incrementing IPv6-specific mbuf stats, IPv4 has no equivalent.

Input from mpi@@, ok bluhm@@ mpi@@
@
text
@/*	$OpenBSD: dest6.c,v 1.15 2015/03/14 03:38:52 jsg Exp $	*/
/*	$KAME: dest6.c,v 1.25 2001/02/22 01:39:16 itojun Exp $	*/

/*
 * Copyright (C) 1995, 1996, 1997, and 1998 WIDE Project.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mbuf.h>
#include <sys/domain.h>
#include <sys/protosw.h>
#include <sys/socket.h>
#include <sys/errno.h>
#include <sys/time.h>
#include <sys/kernel.h>

#include <netinet/in.h>
#include <netinet/ip6.h>
#include <netinet6/ip6_var.h>
#include <netinet/icmp6.h>

/*
 * Destination options header processing.
 */
int
dest6_input(struct mbuf **mp, int *offp, int proto)
{
	struct mbuf *m = *mp;
	int off = *offp, dstoptlen, optlen;
	struct ip6_dest *dstopts;
	u_int8_t *opt;

	/* validation of the length of the header */
	IP6_EXTHDR_GET(dstopts, struct ip6_dest *, m, off, sizeof(*dstopts));
	if (dstopts == NULL)
		return IPPROTO_DONE;
	dstoptlen = (dstopts->ip6d_len + 1) << 3;

	IP6_EXTHDR_GET(dstopts, struct ip6_dest *, m, off, dstoptlen);
	if (dstopts == NULL)
		return IPPROTO_DONE;
	off += dstoptlen;
	dstoptlen -= sizeof(struct ip6_dest);
	opt = (u_int8_t *)dstopts + sizeof(struct ip6_dest);

	/* search header for all options. */
	for (optlen = 0; dstoptlen > 0; dstoptlen -= optlen, opt += optlen) {
		if (*opt != IP6OPT_PAD1 &&
		    (dstoptlen < IP6OPT_MINLEN || *(opt + 1) + 2 > dstoptlen)) {
			ip6stat_inc(ip6s_toosmall);
			goto bad;
		}

		switch (*opt) {
		case IP6OPT_PAD1:
			optlen = 1;
			break;
		case IP6OPT_PADN:
			optlen = *(opt + 1) + 2;
			break;
		default:		/* unknown option */
			optlen = ip6_unknown_opt(opt, m,
			    opt - mtod(m, u_int8_t *));
			if (optlen == -1)
				return (IPPROTO_DONE);
			optlen += 2;
			break;
		}
	}

	*offp = off;
	return (dstopts->ip6d_nxt);

  bad:
	m_freem(m);
	return (IPPROTO_DONE);
}
@


1.15
log
@Remove some includes include-what-you-use claims don't
have any direct symbols used.  Tested for indirect use by compiling
amd64/i386/sparc64 kernels.

ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.14 2014/09/08 06:24:13 jsg Exp $	*/
d76 1
a76 1
			ip6stat.ip6s_toosmall++;
@


1.14
log
@remove uneeded route.h includes
ok miod@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.13 2014/06/03 13:32:24 mpi Exp $	*/
a41 2

#include <net/if.h>
@


1.13
log
@Do not include <sys/malloc.h> where it is not needed.
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.12 2013/10/17 16:27:45 bluhm Exp $	*/
a43 1
#include <net/route.h>
@


1.12
log
@The header file netinet/in_var.h included netinet6/in6_var.h.  This
created a bunch of useless dependencies.  Remove this implicit
inclusion and do an explicit #include <netinet6/in6_var.h> when it
is needed.
OK mpi@@ henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.11 2008/06/11 19:00:50 mcbride Exp $	*/
a34 1
#include <sys/malloc.h>
@


1.11
log
@ANSIfy to sync with KAME. From Karl Sjodahl <dunceor@@gmail.com>.

ok todd deraadt naddy bluhm
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.10 2003/05/14 14:24:44 itojun Exp $	*/
a47 1
#include <netinet/in_var.h>
@


1.10
log
@make PULLDOWN_TEST codepath the default (has been default for a long time).
markus ok
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.9 2002/05/30 04:08:05 itojun Exp $	*/
d57 1
a57 3
dest6_input(mp, offp, proto)
	struct mbuf **mp;
	int *offp, proto;
@


1.9
log
@minor KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.8 2001/02/22 01:40:40 itojun Exp $	*/
a66 4
#ifndef PULLDOWN_TEST
	IP6_EXTHDR_CHECK(m, off, sizeof(*dstopts), IPPROTO_DONE);
	dstopts = (struct ip6_dest *)(mtod(m, caddr_t) + off);
#else
a69 1
#endif
a71 4
#ifndef PULLDOWN_TEST
	IP6_EXTHDR_CHECK(m, off, dstoptlen, IPPROTO_DONE);
	dstopts = (struct ip6_dest *)(mtod(m, caddr_t) + off);
#else
a74 1
#endif
@


1.8
log
@be more more picky about ip6 destopt parsing.  sync with kame
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.7 2001/02/21 17:22:05 itojun Exp $	*/
d105 4
a108 3
			if ((optlen = ip6_unknown_opt(opt, m,
						      opt-mtod(m, u_int8_t *))) == -1)
				return(IPPROTO_DONE);
@


1.8.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.8 2001/02/22 01:40:40 itojun Exp $	*/
d105 3
a107 4
			optlen = ip6_unknown_opt(opt, m,
			    opt - mtod(m, u_int8_t *));
			if (optlen == -1)
				return (IPPROTO_DONE);
@


1.8.6.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d67 4
d74 1
d77 4
d84 1
@


1.7
log
@make validation code more strict for ND6/dest6 variable length headers.
check duplicated nd6_ifinfo table initialization in a better way.
sync with kame
@
text
@d1 2
a2 2
/*	$OpenBSD: dest6.c,v 1.6 2001/02/16 15:57:58 itojun Exp $	*/
/*	$KAME: dest6.c,v 1.24 2001/02/21 16:12:35 itojun Exp $	*/
d91 2
a92 1
		if (*opt != IP6OPT_PAD1 && dstoptlen < IP6OPT_MINLEN) {
@


1.6
log
@cosmetic/whitespace sync with kame
@
text
@d1 2
a2 2
/*	$OpenBSD: dest6.c,v 1.5 2001/02/16 08:48:05 itojun Exp $	*/
/*	$KAME: dest6.c,v 1.23 2001/01/23 13:32:26 itojun Exp $	*/
d91 6
a96 1
		switch(*opt) {
a100 4
			if (dstoptlen < IP6OPT_MINLEN) {
				ip6stat.ip6s_toosmall++;
				goto bad;
			}
a103 4
			if (dstoptlen < IP6OPT_MINLEN) {
				ip6stat.ip6s_toosmall++;
				goto bad;
			}
@


1.5
log
@sync whitespace/comment with kame.  to help merge tasks
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.4 2001/02/16 08:22:04 itojun Exp $	*/
d92 20
a111 20
		 case IP6OPT_PAD1:
			 optlen = 1;
			 break;
		 case IP6OPT_PADN:
			 if (dstoptlen < IP6OPT_MINLEN) {
				 ip6stat.ip6s_toosmall++;
				 goto bad;
			 }
			 optlen = *(opt + 1) + 2;
			 break;
		 default:		/* unknown option */
			 if (dstoptlen < IP6OPT_MINLEN) {
				 ip6stat.ip6s_toosmall++;
				 goto bad;
			 }
			 if ((optlen = ip6_unknown_opt(opt, m,
						       opt-mtod(m, u_int8_t *))) == -1)
				 return(IPPROTO_DONE);
			 optlen += 2;
			 break;
d116 1
a116 1
	return(dstopts->ip6d_nxt);
@


1.4
log
@kill register declarations.  to sync with kame better.
@
text
@d1 2
a2 1
/*	$OpenBSD: dest6.c,v 1.3 2000/02/07 06:09:09 itojun Exp $	*/
d7 1
a7 1
 * 
d19 1
a19 1
 * 
d120 1
a120 1
	return(IPPROTO_DONE);
@


1.3
log
@fix include file path related to ip6.
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.2 1999/12/10 10:04:27 angelos Exp $	*/
d60 1
a60 1
	register struct mbuf *m = *mp;
@


1.3.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 2
/*	$OpenBSD: dest6.c,v 1.8 2001/02/22 01:40:40 itojun Exp $	*/
/*	$KAME: dest6.c,v 1.25 2001/02/22 01:39:16 itojun Exp $	*/
d6 1
a6 1
 *
d18 1
a18 1
 *
d60 1
a60 1
	struct mbuf *m = *mp;
d90 21
a110 19
		if (*opt != IP6OPT_PAD1 &&
		    (dstoptlen < IP6OPT_MINLEN || *(opt + 1) + 2 > dstoptlen)) {
			ip6stat.ip6s_toosmall++;
			goto bad;
		}

		switch (*opt) {
		case IP6OPT_PAD1:
			optlen = 1;
			break;
		case IP6OPT_PADN:
			optlen = *(opt + 1) + 2;
			break;
		default:		/* unknown option */
			if ((optlen = ip6_unknown_opt(opt, m,
						      opt-mtod(m, u_int8_t *))) == -1)
				return(IPPROTO_DONE);
			optlen += 2;
			break;
d115 1
a115 1
	return (dstopts->ip6d_nxt);
d119 1
a119 1
	return (IPPROTO_DONE);
@


1.3.2.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d105 3
a107 4
			optlen = ip6_unknown_opt(opt, m,
			    opt - mtod(m, u_int8_t *));
			if (optlen == -1)
				return (IPPROTO_DONE);
@


1.3.2.3
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d67 4
d74 1
d77 4
d84 1
@


1.2
log
@Remove remaining unnecessary ifdefs (itojun will hate me for this :-)
@
text
@d1 1
a1 1
/*	$OpenBSD: dest6.c,v 1.1 1999/12/08 06:50:20 itojun Exp $	*/
d48 1
a48 1
#include <netinet6/ip6.h>
d50 1
a50 1
#include <netinet6/icmp6.h>
@


1.1
log
@bring in KAME IPv6 code, dated 19991208.
replaces NRL IPv6 layer.  reuses NRL pcb layer.  no IPsec-on-v6 support.
see sys/netinet6/{TODO,IMPLEMENTATION} for more details.

GENERIC configuration should work fine as before.  GENERIC.v6 works fine
as well, but you'll need KAME userland tools to play with IPv6 (will be
bringed into soon).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a48 3
#if !(defined(__FreeBSD__) && __FreeBSD__ >= 3) && !defined(__OpenBSD__)
#include <netinet6/in6_pcb.h>
#endif
@

