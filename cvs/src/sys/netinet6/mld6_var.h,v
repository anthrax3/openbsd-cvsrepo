head	1.6;
access;
symbols
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.34
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.30
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.32
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.24
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.28
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.26
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.22
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.20
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.18
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.16
	OPENBSD_5_0:1.6.0.14
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.12
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.10
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.6
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.8
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.2
	SMP_BASE:1.2
	kame_19991208:1.1;
locks; strict;
comment	@ * @;


1.6
date	2008.04.18.06.42.20;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.11.02.54.02;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.27.12;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.16.08.48.06;	author itojun;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2000.01.08.04.49.22;	author deraadt;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	99.12.08.06.50.23;	author itojun;	state Exp;
branches;
next	;

1.2.2.1
date	2001.05.14.22.40.19;	author niklas;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2002.03.28.14.56.46;	author niklas;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2004.02.19.10.57.25;	author niklas;	state Exp;
branches;
next	;

1.3.6.1
date	2002.06.11.03.31.37;	author art;	state Exp;
branches;
next	;


desc
@@


1.6
log
@use arc4random_uniform() for random number requests that are not a
power of two.

use arc4random_bytes() when requesting more than a word of PRNG
output.

ok deraadt@@
@
text
@/*	$OpenBSD: mld6_var.h,v 1.5 2003/06/11 02:54:02 itojun Exp $	*/
/*	$KAME: mld6_var.h,v 1.4 2000/03/25 07:23:54 sumikawa Exp $	*/

/*
 * Copyright (C) 1998 WIDE Project.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _NETINET6_MLD6_VAR_H_
#define _NETINET6_MLD6_VAR_H_

#ifdef _KERNEL

#define MLD_RANDOM_DELAY(X)	(arc4random_uniform(X) + 1)

/*
 * States for MLD stop-listening processing
 */
#define MLD_OTHERLISTENER			0
#define MLD_IREPORTEDLAST			1

void	mld6_init(void);
void	mld6_input(struct mbuf *, int);
void	mld6_start_listening(struct in6_multi *);
void	mld6_stop_listening(struct in6_multi *);
void	mld6_fasttimeo(void);
#endif /* _KERNEL */

#endif /* _NETINET6_MLD6_VAR_H_ */
@


1.5
log
@- sync up MLD declaration with RFC3542 (s/MLD6/MLD/)
- routing header declaration with RFC3542
  (note: sizeof(ip6_rthdr0) has changed!)
  also, sync up with RFC2460 routing header definition (no "strict" source
  routing mode any more)

part of advanced API update (RFC2292 -> 3542).

markus, todd, millert, henning ok
@
text
@d1 1
a1 1
/*	$OpenBSD: mld6_var.h,v 1.4 2002/03/14 01:27:12 millert Exp $	*/
d38 1
a38 1
#define MLD_RANDOM_DELAY(X)	(arc4random() % (X) + 1)
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: mld6_var.h,v 1.3 2001/02/16 08:48:06 itojun Exp $	*/
d38 1
a38 1
#define MLD6_RANDOM_DELAY(X) (arc4random() % (X) + 1)
d43 2
a44 2
#define MLD6_OTHERLISTENER			0
#define MLD6_IREPORTEDLAST			1
@


1.3
log
@sync whitespace/comment with kame.  to help merge tasks
@
text
@d1 1
a1 1
/*	$OpenBSD: mld6_var.h,v 1.2 2000/01/08 04:49:22 deraadt Exp $	*/
d46 5
a50 5
void	mld6_init __P((void));
void	mld6_input __P((struct mbuf *, int));
void	mld6_start_listening __P((struct in6_multi *));
void	mld6_stop_listening __P((struct in6_multi *));
void	mld6_fasttimeo __P((void));
@


1.3.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: mld6_var.h,v 1.3 2001/02/16 08:48:06 itojun Exp $	*/
d46 5
a50 5
void	mld6_init(void);
void	mld6_input(struct mbuf *, int);
void	mld6_start_listening(struct in6_multi *);
void	mld6_stop_listening(struct in6_multi *);
void	mld6_fasttimeo(void);
@


1.2
log
@use arc4random() instead of random for two reasons.
1) on some architectures, random() should only be used by the scheduler
   (ie. statintr() because it is uniformly distributed
2) arc4random() is actually strong, random() is not at all
@
text
@d1 2
a2 1
/*	$OpenBSD: mld6_var.h,v 1.1 1999/12/08 06:50:23 itojun Exp $	*/
d7 1
a7 1
 * 
d19 1
a19 1
 * 
d33 2
a34 2
#ifndef _NETINET6_MLD6_VAR_H_ 
#define _NETINET6_MLD6_VAR_H_ 
@


1.2.2.1
log
@merge in approximately 2.9 into SMP branch
@
text
@d1 1
a1 2
/*	$OpenBSD: mld6_var.h,v 1.3 2001/02/16 08:48:06 itojun Exp $	*/
/*	$KAME: mld6_var.h,v 1.4 2000/03/25 07:23:54 sumikawa Exp $	*/
d6 1
a6 1
 *
d18 1
a18 1
 *
d32 2
a33 2
#ifndef _NETINET6_MLD6_VAR_H_
#define _NETINET6_MLD6_VAR_H_
@


1.2.2.2
log
@Merge in -current from roughly a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 5
a50 5
void	mld6_init(void);
void	mld6_input(struct mbuf *, int);
void	mld6_start_listening(struct in6_multi *);
void	mld6_stop_listening(struct in6_multi *);
void	mld6_fasttimeo(void);
@


1.2.2.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d38 1
a38 1
#define MLD_RANDOM_DELAY(X)	(arc4random() % (X) + 1)
d43 2
a44 2
#define MLD_OTHERLISTENER			0
#define MLD_IREPORTEDLAST			1
@


1.1
log
@bring in KAME IPv6 code, dated 19991208.
replaces NRL IPv6 layer.  reuses NRL pcb layer.  no IPsec-on-v6 support.
see sys/netinet6/{TODO,IMPLEMENTATION} for more details.

GENERIC configuration should work fine as before.  GENERIC.v6 works fine
as well, but you'll need KAME userland tools to play with IPv6 (will be
bringed into soon).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
#define MLD6_RANDOM_DELAY(X) (random() % (X) + 1)
@

