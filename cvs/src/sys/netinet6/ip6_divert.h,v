head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.12
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2017.03.13.20.18.21;	author claudio;	state Exp;
branches;
next	1.6;
commitid	ZsxSSZJSFxZH81LL;

1.6
date	2017.02.09.15.32.56;	author jca;	state Exp;
branches;
next	1.5;
commitid	fXr0qQRRcc8oQZmX;

1.5
date	2014.07.10.03.17.59;	author lteo;	state Exp;
branches;
next	1.4;
commitid	baLHEMMpirACq25p;

1.4
date	2014.04.23.14.43.14;	author florian;	state Exp;
branches;
next	1.3;

1.3
date	2013.10.25.02.53.31;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2012.10.21.13.06.03;	author benno;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.05.20.50.14;	author michele;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Move PRU_ATTACH out of the pr_usrreq functions into pr_attach.
Attach is quite a different thing to the other PRU functions and
this should make locking a bit simpler. This also removes the ugly
hack on how proto was passed to the attach function.
OK bluhm@@ and mpi@@ on a previous version
@
text
@/*      $OpenBSD: ip6_divert.h,v 1.6 2017/02/09 15:32:56 jca Exp $ */

/*
 * Copyright (c) 2009 Michele Marchetto <michele@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _IP6_DIVERT_H_
#define _IP6_DIVERT_H_

struct div6stat {
	u_long	divs_ipackets;	/* total input packets */
	u_long	divs_noport;	/* no socket on port */
	u_long	divs_fullsock;	/* not delivered, input socket full */
	u_long	divs_opackets;	/* total output packets */
	u_long	divs_errors;	/* generic errors */
};

/*
 * Names for divert sysctl objects
 */
#define	DIVERT6CTL_RECVSPACE	1	/* receive buffer space */
#define	DIVERT6CTL_SENDSPACE	2	/* send buffer space */
#define	DIVERT6CTL_STATS	3	/* divert statistics */
#define	DIVERT6CTL_MAXID	4

#define	DIVERT6CTL_NAMES { \
	{ 0, 0 }, \
	{ "recvspace",	CTLTYPE_INT }, \
	{ "sendspace",	CTLTYPE_INT }, \
	{ "stats",	CTLTYPE_STRUCT } \
}

#define	DIVERT6CTL_VARS { \
	NULL, \
	&divert6_recvspace, \
	&divert6_sendspace, \
	NULL \
}

#ifdef _KERNEL

#include <sys/percpu.h>

enum div6stat_counters {
	div6s_ipackets,
	div6s_noport,
	div6s_fullsock,
	div6s_opackets,
	div6s_errors,
	div6s_ncounters,
};

extern struct cpumem *div6counters;

static inline void
div6stat_inc(enum div6stat_counters c)
{
	counters_inc(div6counters, c);
}

extern struct	inpcbtable	divb6table;

void	 divert6_init(void);
int	 divert6_input(struct mbuf **, int *, int);
int	 divert6_packet(struct mbuf *, int, u_int16_t);
int	 divert6_sysctl(int *, u_int, void *, size_t *, void *, size_t);
int	 divert6_usrreq(struct socket *,
	    int, struct mbuf *, struct mbuf *, struct mbuf *, struct proc *);
int	 divert6_attach(struct socket *, int);
#endif /* _KERNEL */

#endif /* _IP6_DIVERT_H_ */
@


1.6
log
@percpu counters for divert(4) stats

ok dlg@@
@
text
@d1 1
a1 1
/*      $OpenBSD: ip6_divert.h,v 1.5 2014/07/10 03:17:59 lteo Exp $ */
d81 1
@


1.5
log
@Simplify the way divert(4) sends packets to userspace: Instead of
unnecessarily allocating an mbuf tag to store the divert port, just pass
the divert port directly to divert_packet() or divert6_packet() as an
argument.

includes a style fix pointed out by bluhm@@
ok bluhm@@ henning@@ reyk@@
@
text
@d1 1
a1 1
/*      $OpenBSD: ip6_divert.h,v 1.4 2014/04/23 14:43:14 florian Exp $ */
d53 20
a73 1
extern struct	div6stat		div6stat;
@


1.4
log
@No need for vargs here.
While there move declaration of divert{,6}_output() to .c as it's a
private function. Also switch first two args to make it more like
similar functions (both suggested by mpi@@).
Input/OK mpi@@, OK lteo@@
@
text
@d1 1
a1 1
/*      $OpenBSD: ip6_divert.h,v 1.3 2013/10/25 02:53:31 deraadt Exp $ */
d58 1
a58 1
int	 divert6_packet(struct mbuf *, int);
@


1.3
log
@prettier #ifdef _KERNEL, more like other files
(basically, if they are easier to compare visually for namespace
issues, they they are easier to compare ....  period!)
@
text
@d1 1
a1 1
/*      $OpenBSD: ip6_divert.h,v 1.2 2012/10/21 13:06:03 benno Exp $ */
a58 1
int	 divert6_output(struct mbuf *, ...);
@


1.2
log
@Add the IP_DIVERTFL socket option on divert(4) sockets to control
which packets (as in direction) of the traffic will be diverted
through the divert socket.
ok claudio@@, henning@@
@
text
@d1 1
a1 1
/*      $OpenBSD: ip6_divert.h,v 1.1 2009/11/05 20:50:14 michele Exp $ */
d63 1
a64 1
#endif /* _KERNEL */
@


1.1
log
@IPv6 support for divert sockets.

tested by phessler@@ pyr@@
ok claudio@@
"go ahead" deraadt@@
@
text
@d1 1
a1 1
/*      $OpenBSD$ */
d58 1
a58 1
void	 divert6_packet(struct mbuf *, int);
@

