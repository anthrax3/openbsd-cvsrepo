head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.6
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2002.12.16.09.18.05;	author kjc;	state dead;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.26;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.27.05.28.35;	author kjc;	state Exp;
branches
	1.1.2.1
	1.1.6.1;
next	;

1.1.2.1
date	2002.03.28.11.26.45;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.03.27.22.28.24;	author niklas;	state dead;
branches;
next	;

1.1.6.1
date	2002.06.11.03.27.42;	author art;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2003.05.19.21.50.54;	author tedu;	state dead;
branches;
next	;


desc
@@


1.3
log
@switchover to pf-based altq.
 - remove files which are no longer used, or we don't have plans to support
   in pf in the near future.
 - remove altq ioctl related stuff.
 - convert the PRIQ, HFSC and RIO modules to pf-based altq.
   (these are not enabled in GENERIC, CDNR is not converted yet.)
@
text
@/*	$OpenBSD: altq_conf.h,v 1.2 2002/03/14 01:26:26 millert Exp $	*/
/*	$KAME: altq_conf.h,v 1.6 2001/01/29 19:59:09 itojun Exp $	*/

/*
 * Copyright (C) 1998-2000
 *	Sony Computer Science Laboratories Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY SONY CSL AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL SONY CSL OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef _ALTQ_ALTQ_CONF_H_
#define	_ALTQ_ALTQ_CONF_H_

#ifdef _KERNEL

#include <sys/param.h>
#include <sys/conf.h>
#include <sys/kernel.h>

#if (__FreeBSD_version > 300000)
#define	ALTQ_KLD
#endif

#ifdef ALTQ_KLD
#include <sys/module.h>
#endif

#ifndef dev_decl
#ifdef __STDC__
#define	dev_decl(n,t)	d_ ## t ## _t n ## t
#else
#define	dev_decl(n,t)	d_/**/t/**/_t n/**/t
#endif
#endif

#if defined(__NetBSD__) || defined(__OpenBSD__)
typedef int d_open_t(dev_t, int, int, struct proc *);
typedef int d_close_t(dev_t, int, int, struct proc *);
typedef int d_ioctl_t(dev_t, u_long, caddr_t, int, struct proc *);

#define	noopen	(dev_type_open((*))) enodev
#define	noclose	(dev_type_close((*))) enodev
#define	noioctl	(dev_type_ioctl((*))) enodev
#endif /* __NetBSD__ || __OpenBSD__ */

#if defined(__OpenBSD__)
int altqopen(dev_t, int, int, struct proc *);
int altqclose(dev_t, int, int, struct proc *);
int altqioctl(dev_t, u_long, caddr_t, int, struct proc *);
#endif

/*
 * altq queueing discipline switch structure
 */
struct altqsw {
        char		*d_name;
	d_open_t	*d_open;
	d_close_t	*d_close;
	d_ioctl_t	*d_ioctl;
};

#define	altqdev_decl(n) \
	dev_decl(n,open); dev_decl(n,close); dev_decl(n,ioctl)

#ifdef ALTQ_KLD

struct altq_module_data {
	int	type;		/* discipline type */
	int	ref;		/* reference count */
	struct	altqsw *altqsw; /* discipline functions */
};

#define	ALTQ_MODULE(name, type, devsw)					\
static struct altq_module_data name##_moddata = { type, 0, devsw };	\
									\
moduledata_t name##_mod = {						\
    #name,								\
    altq_module_handler,						\
    &name##_moddata							\
};									\
DECLARE_MODULE(name, name##_mod, SI_SUB_DRIVERS, SI_ORDER_MIDDLE+96)

void altq_module_incref(int);
void altq_module_declref(int);
int altq_module_handler(module_t, int, void *);

#endif /* ALTQ_KLD */

#endif /* _KERNEL */
#endif /* _ALTQ_ALTQ_CONF_H_ */
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: altq_conf.h,v 1.1 2001/06/27 05:28:35 kjc Exp $	*/
@


1.1
log
@import ALTQ, alternate queueing support, from KAME.
ALTQ allows to switch various queueing disciplines on output network
interfaces.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d55 3
a57 3
typedef int d_open_t __P((dev_t, int, int, struct proc *));
typedef int d_close_t __P((dev_t, int, int, struct proc *));
typedef int d_ioctl_t __P((dev_t, u_long, caddr_t, int, struct proc *));
d65 3
a67 3
int altqopen __P((dev_t, int, int, struct proc *));
int altqclose __P((dev_t, int, int, struct proc *));
int altqioctl __P((dev_t, u_long, caddr_t, int, struct proc *));
d101 3
a103 3
void altq_module_incref __P((int));
void altq_module_declref __P((int));
int altq_module_handler __P((module_t, int, void *));
@


1.1.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: altq_conf.h,v 1.1 2001/06/27 05:28:35 kjc Exp $	*/
d55 3
a57 3
typedef int d_open_t(dev_t, int, int, struct proc *);
typedef int d_close_t(dev_t, int, int, struct proc *);
typedef int d_ioctl_t(dev_t, u_long, caddr_t, int, struct proc *);
d65 3
a67 3
int altqopen(dev_t, int, int, struct proc *);
int altqclose(dev_t, int, int, struct proc *);
int altqioctl(dev_t, u_long, caddr_t, int, struct proc *);
d101 3
a103 3
void altq_module_incref(int);
void altq_module_declref(int);
int altq_module_handler(module_t, int, void *);
@


1.1.6.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: altq_conf.h,v 1.1.6.1 2002/06/11 03:27:42 art Exp $	*/
@


1.1.2.1
log
@Merge in -current from about a week ago
@
text
@d55 3
a57 3
typedef int d_open_t(dev_t, int, int, struct proc *);
typedef int d_close_t(dev_t, int, int, struct proc *);
typedef int d_ioctl_t(dev_t, u_long, caddr_t, int, struct proc *);
d65 3
a67 3
int altqopen(dev_t, int, int, struct proc *);
int altqclose(dev_t, int, int, struct proc *);
int altqioctl(dev_t, u_long, caddr_t, int, struct proc *);
d101 3
a103 3
void altq_module_incref(int);
void altq_module_declref(int);
int altq_module_handler(module_t, int, void *);
@


1.1.2.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: altq_conf.h,v 1.1.2.1 2002/03/28 11:26:45 niklas Exp $	*/
@


