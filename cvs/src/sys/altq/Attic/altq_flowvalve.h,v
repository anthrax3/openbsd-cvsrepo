head	1.2;
access;
symbols
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_2:1.1.0.10
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.1
	UBC:1.1.0.6
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.2
date	2002.12.16.09.18.05;	author kjc;	state dead;
branches;
next	1.1;

1.1
date	2001.06.27.05.28.35;	author kjc;	state Exp;
branches
	1.1.2.1
	1.1.6.1;
next	;

1.1.2.1
date	2003.03.27.22.28.25;	author niklas;	state dead;
branches;
next	;

1.1.6.1
date	2003.05.19.21.50.54;	author tedu;	state dead;
branches;
next	;


desc
@@


1.2
log
@switchover to pf-based altq.
 - remove files which are no longer used, or we don't have plans to support
   in pf in the near future.
 - remove altq ioctl related stuff.
 - convert the PRIQ, HFSC and RIO modules to pf-based altq.
   (these are not enabled in GENERIC, CDNR is not converted yet.)
@
text
@/*	$OpenBSD: altq_flowvalve.h,v 1.1 2001/06/27 05:28:35 kjc Exp $	*/
/*	$KAME: altq_flowvalve.h,v 1.4 2000/12/14 08:12:46 thorpej Exp $	*/

/*
 * Copyright (C) 1998-2000
 *	Sony Computer Science Laboratories Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY SONY CSL AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL SONY CSL OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _ALTQ_ALTQ_FLOWVALVE_H_
#define	_ALTQ_ALTQ_FLOWVALVE_H_

#ifdef _KERNEL

/* fv_flow structure to define a unique address pair */
struct fv_flow {
	int flow_af;		/* address family */
	union {
		struct {
			struct in_addr ip_src;
			struct in_addr ip_dst;
		} _ip;
#ifdef INET6
		struct {
			struct in6_addr ip6_src;
			struct in6_addr ip6_dst;
		} _ip6;
#endif
	} flow_un;
};

#define	flow_ip		flow_un._ip
#define	flow_ip6	flow_un._ip6

/* flowvalve entry */
struct fve {
	TAILQ_ENTRY(fve) fve_lru;	/* for LRU list */

	enum fv_state { Green, Red } fve_state;

	int	fve_p;			/* scaled average drop rate */
	int	fve_f;			/* scaled average fraction */
	int	fve_count;		/* counter to update f */
	u_int	fve_ifseq;		/* ifseq at the last update of f */
	struct timeval	fve_lastdrop;	/* timestamp of the last drop */

	struct fv_flow fve_flow;	/* unique address pair */
};

/* flowvalve structure */
struct flowvalve {
	u_int	fv_ifseq;	/* packet sequence number */
	int	fv_flows;	/* number of valid flows in the flowlist */
	int	fv_pthresh;	/* drop rate threshold */

	TAILQ_HEAD(fv_flowhead, fve) fv_flowlist;		/* LRU list */

	struct fve *fv_fves;	/* pointer to the allocated fves */

	int	*fv_p2ftab;	/* drop rate to fraction table */

	struct {
		u_int	pass;		/* # of packets that have the fve
					   but aren't predropped */
		u_int	predrop;	/* # of packets predropped */
		u_int	alloc;		/* # of fves assigned */
		u_int	escape;		/* # of fves escaped */
	} fv_stats;
};

#endif /* _KERNEL */

#endif /* _ALTQ_ALTQ_FLOWVALVE_H_ */
@


1.1
log
@import ALTQ, alternate queueing support, from KAME.
ALTQ allows to switch various queueing disciplines on output network
interfaces.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1.6.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: altq_flowvalve.h,v 1.1 2001/06/27 05:28:35 kjc Exp $	*/
@


1.1.2.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: altq_flowvalve.h,v 1.1 2001/06/27 05:28:35 kjc Exp $	*/
@


