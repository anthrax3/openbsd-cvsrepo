head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.54
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.50
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.52
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.44
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.48
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.46
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.42
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.40
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.38
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.36
	OPENBSD_5_0:1.8.0.34
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.32
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.30
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.26
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.28
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.24
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.22
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.20
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.18
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.10
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.8
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	SMP:1.4.0.2
	SMP_BASE:1.4
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2003.06.02.23.27.55;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.13.22.25.33;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.44;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2000.02.21.17.08.37;	author art;	state Exp;
branches
	1.5.10.1;
next	1.4;

1.4
date	2000.01.31.16.06.59;	author art;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	97.08.08.08.27.33;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.08.11.05.35.20;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.47;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.47;	author deraadt;	state Exp;
branches;
next	;

1.4.2.1
date	2000.02.21.22.29.04;	author niklas;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2002.03.28.10.57.11;	author niklas;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2003.05.16.00.29.40;	author niklas;	state Exp;
branches;
next	1.4.2.4;

1.4.2.4
date	2003.06.07.11.14.44;	author ho;	state Exp;
branches;
next	;

1.5.10.1
date	2002.06.11.03.38.17;	author art;	state Exp;
branches;
next	1.5.10.2;

1.5.10.2
date	2003.05.19.21.46.33;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@/*	$OpenBSD: memreg.h,v 1.7 2003/05/13 22:25:33 miod Exp $	*/
/*	$NetBSD: memreg.h,v 1.4 1996/03/31 22:52:13 pk Exp $ */

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)memreg.h	8.1 (Berkeley) 6/11/93
 */

/*
 * Sun-4c memory error register.
 * The register is a single word.
 */
extern volatile u_int	*par_err_reg;	/* virtual address; NULL if not yet mapped */

/*
 * Bits in parity error register.
 * The register is cleared when read, except for the test and enable bits.
 */
#define	PER_ERR		0x80	/* a parity error occurred */
#define	PER_MULTI	0x40	/* more than one occurred */
#define	PER_TEST	0x20	/* test (invert parity) */
#define	PER_ENABLE	0x10	/* enable parity error reports */
#define	PER_BYTE0	0x08	/* error occurred in byte 0 (bits 31..24) */
#define	PER_BYTE1	0x04	/* error occurred in byte 1 (bits 23..16) */
#define	PER_BYTE2	0x02	/* error occurred in byte 2 (bits 15..8) */
#define	PER_BYTE3	0x01	/* error occurred in byte 3 (bits 7..0) */

#define	PER_BITS "\20\10ERR\7MULTI\6TEST\5ENABLE\4BYTE0\3BYTE1\2BYTE2\1BYTE3"



/*
 * sun4m ...
 */
struct trapframe;
void memerr4_4c(unsigned, u_int, u_int, u_int, u_int, struct trapframe *);
void memerr4m(unsigned, u_int, u_int, struct trapframe *);
void viking_memerr(unsigned, u_int, u_int, struct trapframe *);
void hypersparc_memerr(unsigned, u_int, u_int, struct trapframe *);
@


1.7
log
@Nuke a few simple commons.
@
text
@d1 1
a1 1
/*	$OpenBSD: memreg.h,v 1.6 2002/03/14 01:26:44 millert Exp $	*/
d25 1
a25 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: memreg.h,v 1.5 2000/02/21 17:08:37 art Exp $	*/
d52 1
a52 1
volatile u_int	*par_err_reg;	/* virtual address; NULL if not yet mapped */
@


1.5
log
@The last pieces of hypersparc support.
 - Split get_faultstatus into get_syncflt and get_asyncflt.
 - Get the syncflt status before setting up the trap frame and put the
   results in cpuinfo.syncfltdump (related to the next change).
 - unlock the sfsr/sfva after reading from ASI_SRMMUFP (it gets locked if
   the translation fails).
 - + other interface changes and cleanups.
 (most work from NetBSD).
@
text
@d1 1
a1 1
/*	$OpenBSD: memreg.h,v 1.4 2000/01/31 16:06:59 art Exp $	*/
d75 4
a78 4
void memerr4_4c __P((unsigned, u_int, u_int, u_int, u_int, struct trapframe *));
void memerr4m __P((unsigned, u_int, u_int, struct trapframe *));
void viking_memerr __P((unsigned, u_int, u_int, struct trapframe *));
void hypersparc_memerr __P((unsigned, u_int, u_int, struct trapframe *));
@


1.5.10.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: memreg.h,v 1.5 2000/02/21 17:08:37 art Exp $	*/
d75 4
a78 4
void memerr4_4c(unsigned, u_int, u_int, u_int, u_int, struct trapframe *);
void memerr4m(unsigned, u_int, u_int, struct trapframe *);
void viking_memerr(unsigned, u_int, u_int, struct trapframe *);
void hypersparc_memerr(unsigned, u_int, u_int, struct trapframe *);
@


1.5.10.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d52 1
a52 1
extern volatile u_int	*par_err_reg;	/* virtual address; NULL if not yet mapped */
@


1.4
log
@Clean up memerr*. (from NetBSD)
@
text
@d1 1
a1 1
/*	$OpenBSD: memreg.h,v 1.3 1997/08/08 08:27:33 downsj Exp $	*/
d76 3
a78 3
void memerr4m __P((unsigned, u_int, u_int, u_int, u_int, struct trapframe *));
void viking_memerr __P((unsigned, u_int, u_int, u_int, u_int, struct trapframe *));
void hypersparc_memerr __P((unsigned, u_int, u_int, u_int, u_int, struct trapframe *));
@


1.4.2.1
log
@sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD: memreg.h,v 1.5 2000/02/21 17:08:37 art Exp $	*/
d76 3
a78 3
void memerr4m __P((unsigned, u_int, u_int, struct trapframe *));
void viking_memerr __P((unsigned, u_int, u_int, struct trapframe *));
void hypersparc_memerr __P((unsigned, u_int, u_int, struct trapframe *));
@


1.4.2.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d75 4
a78 4
void memerr4_4c(unsigned, u_int, u_int, u_int, u_int, struct trapframe *);
void memerr4m(unsigned, u_int, u_int, struct trapframe *);
void viking_memerr(unsigned, u_int, u_int, struct trapframe *);
void hypersparc_memerr(unsigned, u_int, u_int, struct trapframe *);
@


1.4.2.3
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d52 1
a52 1
extern volatile u_int	*par_err_reg;	/* virtual address; NULL if not yet mapped */
@


1.4.2.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: memreg.h,v 1.4.2.3 2003/05/16 00:29:40 niklas Exp $	*/
d25 5
a29 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.3
log
@Mostly sync to NetBSD-current 970804.

GENERIC currently compiles and runs; some devices (isp) are not complete and
not yet enabled.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d75 1
d77 2
@


1.2
log
@netbsd port, now we merge our changes back in
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: memreg.h,v 1.2 1994/11/20 20:54:33 deraadt Exp $ */
d51 1
a51 1
volatile int	*par_err_reg;	/* virtual address; NULL if not yet mapped */
d67 8
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
