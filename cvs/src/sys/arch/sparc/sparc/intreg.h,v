head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.26
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.22
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.24
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.16
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.20
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.18
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.14
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.12
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.10
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.8
	OPENBSD_5_0:1.11.0.6
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.4
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.8.0.12
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.4
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.10
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2010.07.10.19.32.25;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2010.07.06.20.40.01;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2009.04.10.20.53.54;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2006.05.29.20.40.01;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.19.21.30.20;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.27.55;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.44;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.21.17.08.36;	author art;	state Exp;
branches
	1.4.10.1;
next	1.3;

1.3
date	97.08.08.08.27.19;	author downsj;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	96.08.11.05.35.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.47;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.47;	author deraadt;	state Exp;
branches;
next	;

1.3.12.1
date	2000.02.21.22.29.03;	author niklas;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2002.03.28.10.57.10;	author niklas;	state Exp;
branches;
next	1.3.12.3;

1.3.12.3
date	2003.06.07.11.14.44;	author ho;	state Exp;
branches;
next	;

1.4.10.1
date	2002.06.11.03.38.16;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@sun4e (i.e. SPARCengine 1e) support. This platform is a mix between sun4 and
sun4c, as it has a sun4c OpenPROM but a sun4 8KB pagesize. VME devices are
not supported yet.
ok deraadt@@
@
text
@/*	$OpenBSD: intreg.h,v 1.10 2010/07/06 20:40:01 miod Exp $	*/
/*	$NetBSD: intreg.h,v 1.6 1997/07/22 20:19:10 pk Exp $ */

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)intreg.h	8.1 (Berkeley) 6/11/93
 */

#include <sparc/sparc/vaddrs.h>

#if defined(SUN4) || defined(SUN4C) || defined(SUN4E)

/*
 * sun4c interrupt enable register.
 *
 * The register is a single byte.  C code must use the intreg_set_44c and
 * intreg_clr_44c functions found in locore.s.
 *
 * The register's physical address is defined here as the register
 * must be mapped early in the boot process (otherwise NMI handling
 * will fail).
 */
#define	INT_ENABLE_REG_PHYSADR_44C	0xf5000000
#define	INT_ENABLE_REG_PHYSADR_4E	0xea000000

/*
 * Bits in interrupt enable register.  Software interrupt requests must
 * be cleared in software.  This is done in locore.s.  The ALLIE bit must
 * be cleared to clear asynchronous memory error (level 15) interrupts.
 */
#define	IE_L14		0x80	/* enable level 14 (counter 1) interrupts */
#define	IE_L10		0x20	/* enable level 10 (counter 0) interrupts */
#define	IE_L8		0x10	/* enable level 8 interrupts */
#define	IE_L6		0x08	/* request software level 6 interrupt */
#define	IE_L4		0x04	/* request software level 4 interrupt */
#define	IE_L1		0x02	/* request software level 1 interrupt */
#define	IE_ALLIE	0x01	/* enable interrupts */

#ifndef _LOCORE
void	intreg_set_44c(int);	/* set given bits */
void	intreg_clr_44c(int);	/* clear given bits */
#endif

#endif /* SUN4 || SUN4C || SUN4E */

#if defined(SUN4M)

/*
 * Interrupt Control Registers, located in IO space.
 * (mapped to `locore' for now..)
 * There are two sets of interrupt registers called `Processor Interrupts'
 * and `System Interrupts'. The `Processor' set corresponds to the 15
 * interrupt levels as seen by the CPU. The `System' set corresponds to
 * a set of devices supported by the implementing chip-set.
 *
 * Briefly, the ICR_PI_* are per-processor interrupts; the ICR_SI_* are
 * system-wide interrupts, and the ICR_ITR selects the processor to get
 * the system's interrupts.
 */
#define ICR_PI_PEND		(PI_INTR_VA + 0x0)
#define ICR_PI_CLR		(PI_INTR_VA + 0x4)
#define ICR_PI_SET		(PI_INTR_VA + 0x8)
#define ICR_SI_PEND		(SI_INTR_VA)
#define ICR_SI_MASK		(SI_INTR_VA + 0x4)
#define ICR_SI_CLR		(SI_INTR_VA + 0x8)
#define ICR_SI_SET		(SI_INTR_VA + 0xc)
#define ICR_ITR			(SI_INTR_VA + 0x10)

/*
 * Bits in interrupt registers.  Software interrupt requests must
 * be cleared in software.  This is done in locore.s.
 * There are separate registers for reading pending interrupts and
 * setting/clearing (software) interrupts.
 */
#define PINTR_SINTRLEV(n)	(1 << (16 + (n)))
#define PINTR_IC		0x8000		/* Level 15 clear */

#define SINTR_MA		0x80000000	/* Mask All interrupts */
#define SINTR_ME		0x40000000	/* Module Error (async) */
#define SINTR_I			0x20000000	/* MSI (MBus-SBus) */
#define SINTR_M			0x10000000	/* ECC Memory controller */
#define SINTR_V			0x08000000	/* VME Async error */
#define SINTR_RSVD2		0x07800000
#define SINTR_F			0x00400000	/* Floppy */
#define SINTR_MI		0x00200000	/* Module interrupt */
#define SINTR_VI		0x00100000	/* Video (Supersparc only) */
#define SINTR_T			0x00080000	/* Level 10 counter */
#define SINTR_SC		0x00040000	/* SCSI */
#define SINTR_A			0x00020000	/* Audio/ISDN */
#define SINTR_E			0x00010000	/* Ethernet */
#define SINTR_S			0x00008000	/* Serial port */
#define SINTR_K			0x00004000	/* Keyboard/mouse */
#define SINTR_SBUSMASK		0x00003f80	/* SBus */
#define SINTR_SBUS(n)		(1 << (7+(n)-1))
#define SINTR_VMEMASK		0x0000007f	/* VME */
#define SINTR_VME(n)		(1 << ((n)-1))
#define SINTR_BITS		"\020" \
				"\01VME0\02VME1\03VME2\04VME3\05VME4\06VME5" \
				"\07VME6\010SBUS0\011SBUS1\012SBUS2\013SBUS3" \
				"\014SBUS4\015SBUS5\016SBUS6\017K\020S\021E" \
				"\022A\023SC\024T\025VI\065MI\027F" \
				"\034V\035M\036I\037ME\040MA"

#ifndef _LOCORE
void	intreg_clr_4m(int);
void	intreg_set_4m(int);
#endif

#endif	/* SUN4M */
@


1.10
log
@Having common ienab_bic() and ienab_bis() entry points for sun4/4c and sun4m
is stupid, since the bits in the interrupt enable register are completely
different between 4/4c and 4m.

Instead, provide distinct, explicit function names to handle the interrupt
enable register.
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.h,v 1.9 2009/04/10 20:53:54 miod Exp $	*/
d46 1
a46 1
#if defined(SUN4) || defined(SUN4C)
d58 2
a59 1
#define	INT_ENABLE_REG_PHYSADR	0xf5000000	/* phys addr in IOspace */
d79 1
a79 1
#endif /* SUN4 || SUN4C */
@


1.9
log
@generic soft interrupts support for sparc. Soft interrupt handlers are now
kept in a separate intrhand array, with their own enable bits so that
soft interrupts sharing the same level only get invoked if really triggered.
Inspired by NetBSD with significant changes.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.h,v 1.8 2006/05/29 20:40:01 miod Exp $	*/
d46 2
d51 2
a52 2
 * The register is a single byte.  C code must use the ienab_bis and
 * ienab_bic functions found in locore.s.
d74 2
a75 2
void	ienab_bis(int bis);	/* set given bits */
void	ienab_bic(int bic);	/* clear given bits */
d78 2
a80 8
#ifdef notyet
#define IENAB_SYS	((_MAXNBPG * _MAXNCPU) + 0xc)
#define IENAB_P0	0x0008
#define IENAB_P1	0x1008
#define IENAB_P2	0x2008
#define IENAB_P3	0x3008
#endif /* notyet */
#endif
a81 1
#if defined(SUN4M)
d138 4
d143 1
a143 1
#endif
@


1.8
log
@Convert NetBSD new-style %b strings to old-style.
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.h,v 1.7 2005/04/19 21:30:20 miod Exp $	*/
a62 8
#ifdef solbourne
#define	IE_L14		14
#define	IE_L10		10
#define	IE_L8		8
#define	IE_L6		6
#define	IE_L4		4
#define	IE_L1		1
#else
a69 1
#endif
@


1.7
log
@As a late birthday present, a preliminary port to the Solbourne IDT systems
(S3000, S4000 and S4000DX).

Currently limited to diskless and serial console, and userland has issues.
Things will get better in the near future.
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.h,v 1.6 2003/06/02 23:27:55 millert Exp $	*/
d145 6
a150 4
#define SINTR_BITS		"\177\020" \
				"f\0\7VME\0f\7\7SBUS\0b\16K\0b\17S\0b\20E\0" \
				"b\21A\0b\22SC\0b\23T\0b\24VI\0b\25MI\0"     \
				"b\26F\0b\33V\0b\34M\0b\35I\0b\36ME\0b\37MA\0"
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.h,v 1.5 2002/03/14 01:26:44 millert Exp $	*/
d63 8
d78 1
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.h,v 1.4 2000/02/21 17:08:36 art Exp $	*/
d25 1
a25 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@The last pieces of hypersparc support.
 - Split get_faultstatus into get_syncflt and get_asyncflt.
 - Get the syncflt status before setting up the trap frame and put the
   results in cpuinfo.syncfltdump (related to the next change).
 - unlock the sfsr/sfva after reading from ASI_SRMMUFP (it gets locked if
   the translation fails).
 - + other interface changes and cleanups.
 (most work from NetBSD).
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.h,v 1.3 1997/08/08 08:27:19 downsj Exp $	*/
d76 2
a77 2
void	ienab_bis __P((int bis));	/* set given bits */
void	ienab_bic __P((int bic));	/* clear given bits */
@


1.4.10.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.h,v 1.4 2000/02/21 17:08:36 art Exp $	*/
d76 2
a77 2
void	ienab_bis(int bis);	/* set given bits */
void	ienab_bic(int bic);	/* clear given bits */
@


1.3
log
@Mostly sync to NetBSD-current 970804.

GENERIC currently compiles and runs; some devices (isp) are not complete and
not yet enabled.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d140 5
@


1.3.12.1
log
@sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.h,v 1.4 2000/02/21 17:08:36 art Exp $	*/
a139 5
#define SINTR_BITS		"\177\020" \
				"f\0\7VME\0f\7\7SBUS\0b\16K\0b\17S\0b\20E\0" \
				"b\21A\0b\22SC\0b\23T\0b\24VI\0b\25MI\0"     \
				"b\26F\0b\33V\0b\34M\0b\35I\0b\36ME\0b\37MA\0"

@


1.3.12.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d76 2
a77 2
void	ienab_bis(int bis);	/* set given bits */
void	ienab_bic(int bic);	/* clear given bits */
@


1.3.12.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: intreg.h,v 1.3.12.2 2002/03/28 10:57:10 niklas Exp $	*/
d25 5
a29 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.2
log
@netbsd port, now we merge our changes back in
@
text
@d1 2
a2 1
/*	$NetBSD: intreg.h,v 1.5 1996/03/31 23:03:39 pk Exp $ */
d125 2
a126 1
#define SINTR_RSVD2		0x0f800000
d128 2
a129 2
#define SINTR_RSVD3		0x00200000
#define SINTR_V			0x00100000	/* Video (Supersparc only) */
d132 1
a132 1
#define SINTR_RSVD4		0x00020000
d137 3
a139 2
#define SINTR_SBUS(n)		(((n) << 7) & 0x00003f80)
#define SINTR_RSVD5		0x0000007f
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: intreg.h,v 1.3 1995/06/25 21:34:28 pk Exp $ */
d47 2
d74 1
a74 1
#ifndef LOCORE
d80 10
a89 1
#define	ICR_REG_PHYSADR	0x71e00000	/* XXX - phys addr in IOspace */
d97 4
d102 9
a110 7
#define ICR_PI_PEND		(IE_reg_addr + 0x0)
#define ICR_PI_CLR		(IE_reg_addr + 0x4)
#define ICR_PI_SET		(IE_reg_addr + 0x8)
#define ICR_SI_PEND		(IE_reg_addr + 0x1000)
#define ICR_SI_MASK		(IE_reg_addr + 0x1004)
#define ICR_SI_CLR		(IE_reg_addr + 0x1008)
#define ICR_SI_SET		(IE_reg_addr + 0x100c)
d117 1
a117 1
#define PINTR_SOFTINTR(n)	((n)) << 16)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
