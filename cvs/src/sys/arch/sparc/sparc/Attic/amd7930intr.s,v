head	1.13;
access;
symbols
	OPENBSD_6_0:1.12.0.20
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.16
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.18
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.10
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.14
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.12
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.8
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.6
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.4
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.2
	OPENBSD_5_0:1.11.0.4
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.10.0.6
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.4
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.9.0.18
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.16
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.14
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.12
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.10
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.8
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.6
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.4
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.5.0.6
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.7
	UBC:1.5.0.4
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.10
	OPENBSD_2_8:1.4.0.8
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.6
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.4
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.13
date	2016.09.01.09.23.42;	author tedu;	state dead;
branches;
next	1.12;
commitid	Q2PxaFNhqAe0Wmla;

1.12
date	2011.09.03.20.04.04;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2010.08.17.20.05.08;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2009.04.10.20.53.54;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2004.09.29.07.35.13;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.27.55;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.08.11.12.14.39;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.28.03.51.19;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.10.10.34.44;	author art;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	99.04.22.18.43.50;	author art;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	97.09.17.06.47.15;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.08.11.05.35.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.45;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.45;	author deraadt;	state Exp;
branches;
next	;

1.4.4.1
date	2001.07.04.10.23.34;	author niklas;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	2003.03.27.23.49.26;	author niklas;	state Exp;
branches;
next	1.4.4.3;

1.4.4.3
date	2003.06.07.11.14.44;	author ho;	state Exp;
branches;
next	;

1.5.4.1
date	2002.06.11.03.38.16;	author art;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2002.10.29.00.28.10;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Celebrate OpenBSD 6.0 release by retiring the sparc port.
You've served us well, good friend, but now it's time to rest.
ok deraadt
@
text
@/*	$OpenBSD: amd7930intr.s,v 1.12 2011/09/03 20:04:04 miod Exp $	*/
/*	$NetBSD: amd7930intr.s,v 1.10 1997/03/11 01:03:07 pk Exp $	*/
/*
 * Copyright (c) 1995 Rolf Grossmann.
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)bsd_audiointr.s	8.1 (Berkeley) 6/11/93
 */

#ifndef AUDIO_C_HANDLER
#include "assym.h"
#include <machine/param.h>
#include <sparc/sparc/intreg.h>
#include <machine/psl.h>
#include <machine/asm.h>

#include <dev/ic/am7930reg.h>

/*
 * Note the following code hardcodes soft interrupt level 4, instead of
 * picking the actual bits from the softintr cookie. We don't have enough
 * free registers to be able to pick it easily, anyway; it's just not
 * worth doing.
 */

#define AUDIO_SET_SWINTR_4C				\
	sethi	%hi(INTRREG_VA), %l5;			\
	ldub	[%l5 + %lo(INTRREG_VA)], %l6;		\
	or	%l6, IE_L4, %l6;			\
	stb	%l6, [%l5 + %lo(INTRREG_VA)]

! raise(0,IPL_AUSOFT)	! NOTE: CPU#0 and IPL_AUSOFT=4
#define AUDIO_SET_SWINTR_4M				\
	sethi	%hi(1 << (16 + 4)), %l5;		\
	set	ICR_PI_SET, %l6;			\
	st	%l5, [%l6]

/* set software interrupt */
#if (defined(SUN4) || defined(SUN4C)) && !defined(SUN4M)
#define AUDIO_SET_SWINTR	AUDIO_SET_SWINTR_4C
#elif !(defined(SUN4) || defined(SUN4C)) && defined(SUN4M)
#define AUDIO_SET_SWINTR	AUDIO_SET_SWINTR_4M
#else
#define AUDIO_SET_SWINTR				\
	sethi	%hi(_C_LABEL(cputyp)), %l5;		\
	ld	[%l5 + %lo(_C_LABEL(cputyp))], %l5;	\
	cmp	%l5, CPU_SUN4M;				\
	be	8f;					\
	AUDIO_SET_SWINTR_4C;				\
	ba,a	9f;					\
8:							\
	AUDIO_SET_SWINTR_4M;				\
9:
#endif

#define R_amd	%l2
#define R_data	%l3
#define R_end	%l4

	.seg	"data"
	.align	8
savepc:
	.word	0

	.seg	"text"
	.align	4
	.global _C_LABEL(amd7930_trap)
	.global	_C_LABEL(auiop)

_C_LABEL(amd7930_trap):
	sethi	%hi(savepc), %l7
	st	%l2, [%l7 + %lo(savepc)]

	! tally interrupt
	sethi	%hi(_C_LABEL(uvmexp)+V_INTR), %l7
	ld	[%l7 + %lo(_C_LABEL(uvmexp)+V_INTR)], %l6
	inc	%l6
	st	%l6, [%l7 + %lo(_C_LABEL(uvmexp)+V_INTR)]
	sethi	%hi(_C_LABEL(auiop)), %l7
	ld	[%l7 + %lo(_C_LABEL(auiop))], %l7

	ldd	[%l7 + AU_COUNT], %l2
	inccc	%l3
	addx	%l2, 0, %l2
	std	%l2, [%l7 + AU_COUNT]

	ld	[%l7 + AU_AMD], R_amd
	ldub    [R_amd + AM7930_DREG_IR], %g0	! clear interrupt

	! receive incoming data
	ld	[%l7 + AU_RDATA], R_data
	ld	[%l7 + AU_REND], R_end

	cmp	R_data, 0			! if (d && d <= e)
	be	1f
	cmp	R_data, R_end
	bgu	1f
	 nop

	ldub	[R_amd + AM7930_DREG_BBRB], %l6	! *d = amd->bbrb
	stb	%l6, [ R_data ]
	cmp	R_data, R_end
	inc	R_data				! au->au_rdata++
	bne	1f				! if (d == e)
	 st	R_data, [%l7 + AU_RDATA]

	ld	[%l7 + AU_SWIH], %l5
	mov	1, %l6
	st	%l6, [%l5 + SIH_PENDING]
	AUDIO_SET_SWINTR

1:
	! write outgoing data
	ld	[%l7 + AU_PDATA], R_data
	ld	[%l7 + AU_PEND], R_end

	cmp	R_data, 0			! if (d && d <= e)
	be	2f
	cmp	R_data, R_end
	bgu	2f
	 nop

	ldub	[ R_data ], %l6			! amd->bbtb = *d
	stb	%l6, [ R_amd + AM7930_DREG_BBTB ]

	cmp	R_data, R_end
	inc	R_data				! au->au_pdata++
	bne	2f				! if (d == e)
	 st	R_data, [%l7 + AU_PDATA]

	ld	[%l7 + AU_SWIH], %l5
	mov	1, %l6
	st	%l6, [%l5 + SIH_PENDING]
	AUDIO_SET_SWINTR

2:
	/*
	 * Restore psr -- note: psr delay honored by pc restore loads.
	 */
	mov	%l0, %psr
	sethi	%hi(savepc), %l7
	ld	[%l7 + %lo(savepc)], %l2
	jmp	%l1
	rett	%l2
#endif /* !AUDIO_C_HANDLER */
@


1.12
log
@Switch the sparc audioamd(4) code to the MI driver; tested on SPARCclassic
with and without option AUDIO_C_HANDLER.
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.11 2010/08/17 20:05:08 miod Exp $	*/
@


1.11
log
@Make sure fast trap handlers correctly invoke soft interrupts by marking
them explicitely pending before triggering the softintr; I am ashamed I did
not notice this when changing the soft interrupt code 18 months ago.
Noticed by claudio@@ and beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.10 2009/04/10 20:53:54 miod Exp $	*/
d51 2
d122 1
a122 1
	ldub    [R_amd + AMD_IR], %g0		! clear interrupt
d134 1
a134 1
	ldub	[R_amd + AMD_BBRB], %l6		! *d = amd->bbrb
d158 1
a158 1
	stb	%l6, [ R_amd + AMD_BBTB ]
@


1.10
log
@generic soft interrupts support for sparc. Soft interrupt handlers are now
kept in a separate intrhand array, with their own enable bits so that
soft interrupts sharing the same level only get invoked if really triggered.
Inspired by NetBSD with significant changes.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.9 2004/09/29 07:35:13 miod Exp $	*/
d139 3
d163 3
@


1.9
log
@Switch sparc to evcount; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.8 2003/06/02 23:27:55 millert Exp $	*/
d50 7
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.7 2002/08/11 12:14:39 art Exp $	*/
d107 4
a110 3
	ld	[%l7 + AU_EVCNT], %l6
	inc	%l6
	st	%l6, [%l7 + AU_EVCNT]
@


1.7
log
@Use _C_LABEL for c labels.
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.6 2002/04/28 03:51:19 art Exp $	*/
d25 1
a25 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@Rename all PIL_* constants to IPL_* to match other archs and make them
usable in MD code in the future.
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.5 2001/05/10 10:34:44 art Exp $	*/
d53 1
d74 2
a75 2
	sethi	%hi(_cputyp), %l5;			\
	ld	[%l5 + %lo(_cputyp)], %l5;		\
d96 2
a97 2
	.global _amd7930_trap
	.global	_auiop
d99 1
a99 1
_amd7930_trap:
d104 2
a105 2
	sethi	%hi(_uvmexp+V_INTR), %l7
	ld	[%l7 + %lo(_uvmexp+V_INTR)], %l6
d107 3
a109 3
	st	%l6, [%l7 + %lo(_uvmexp+V_INTR)]
	sethi	%hi(_auiop), %l7
	ld	[%l7 + %lo(_auiop)], %l7
@


1.5
log
@UVM is no longer optional on sparc.
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.4 1999/04/22 18:43:50 art Exp $	*/
d60 1
a60 1
! raise(0,PIL_AUSOFT)	! NOTE: CPU#0 and PIL_AUSOFT=4
@


1.5.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.5 2001/05/10 10:34:44 art Exp $	*/
d60 1
a60 1
! raise(0,IPL_AUSOFT)	! NOTE: CPU#0 and IPL_AUSOFT=4
@


1.5.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.5.4.1 2002/06/11 03:38:16 art Exp $	*/
a52 1
#include <machine/asm.h>
d73 2
a74 2
	sethi	%hi(_C_LABEL(cputyp)), %l5;		\
	ld	[%l5 + %lo(_C_LABEL(cputyp))], %l5;	\
d95 2
a96 2
	.global _C_LABEL(amd7930_trap)
	.global	_C_LABEL(auiop)
d98 1
a98 1
_C_LABEL(amd7930_trap):
d103 2
a104 2
	sethi	%hi(_C_LABEL(uvmexp)+V_INTR), %l7
	ld	[%l7 + %lo(_C_LABEL(uvmexp)+V_INTR)], %l6
d106 3
a108 3
	st	%l6, [%l7 + %lo(_C_LABEL(uvmexp)+V_INTR)]
	sethi	%hi(_C_LABEL(auiop)), %l7
	ld	[%l7 + %lo(_C_LABEL(auiop))], %l7
@


1.4
log
@UVM fixes, cnt -> uvmexp
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.3 1997/09/17 06:47:15 downsj Exp $	*/
a102 1
#if defined(UVM)
a106 6
#else
	sethi	%hi(_cnt+V_INTR), %l7
	ld	[%l7 + %lo(_cnt+V_INTR)], %l6
	inc	%l6
	st	%l6, [%l7 + %lo(_cnt+V_INTR)]
#endif
@


1.4.4.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.4 1999/04/22 18:43:50 art Exp $	*/
d103 1
d108 6
@


1.4.4.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a52 1
#include <machine/asm.h>
d60 1
a60 1
! raise(0,IPL_AUSOFT)	! NOTE: CPU#0 and IPL_AUSOFT=4
d73 2
a74 2
	sethi	%hi(_C_LABEL(cputyp)), %l5;		\
	ld	[%l5 + %lo(_C_LABEL(cputyp))], %l5;	\
d95 2
a96 2
	.global _C_LABEL(amd7930_trap)
	.global	_C_LABEL(auiop)
d98 1
a98 1
_C_LABEL(amd7930_trap):
d103 2
a104 2
	sethi	%hi(_C_LABEL(uvmexp)+V_INTR), %l7
	ld	[%l7 + %lo(_C_LABEL(uvmexp)+V_INTR)], %l6
d106 3
a108 3
	st	%l6, [%l7 + %lo(_C_LABEL(uvmexp)+V_INTR)]
	sethi	%hi(_C_LABEL(auiop)), %l7
	ld	[%l7 + %lo(_C_LABEL(auiop))], %l7
@


1.4.4.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: amd7930intr.s,v 1.4.4.2 2003/03/27 23:49:26 niklas Exp $	*/
d25 5
a29 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.3
log
@NETBSD_CURRENT_970916.  Lot's just ID changes, since changes don't apply to
us.  Includes some pmap changes, for which I don't have the original commit
message(s) handy.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d103 6
d113 1
a113 1

@


1.2
log
@netbsd port, now we merge our changes back in
@
text
@d1 2
d50 1
d52 31
a82 2
/* XXX this goes in a header file -- currently, it's hidden in locore.s */
#define INTREG_ADDR 0xf8002000
d135 1
a135 4
	sethi	%hi(INTREG_ADDR), %l5
	ldub	[%l5 + %lo(INTREG_ADDR)], %l6
	or	%l6, IE_L4, %l6
	stb	%l6, [%l5 + %lo(INTREG_ADDR)]	!    set software interrupt
d156 1
a156 4
	sethi	%hi(INTREG_ADDR), %l5
	ldub	[%l5 + %lo(INTREG_ADDR)], %l6
	or	%l6, IE_L4, %l6
	stb	%l6, [%l5 + %lo(INTREG_ADDR)]	!    set software interrupt
@


1.1
log
@Initial revision
@
text
@d47 1
a47 4
#ifndef LOCORE
#define LOCORE
#endif
#include "assym.s"
d95 1
a95 1
	
d102 1
a102 1
	
d118 1
a118 1
	
d126 1
a126 1
	
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
