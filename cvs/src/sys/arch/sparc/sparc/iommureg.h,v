head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.78
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.74
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.76
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.68
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.72
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.70
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.66
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.64
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.62
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.60
	OPENBSD_5_0:1.6.0.58
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.56
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.54
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.50
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.52
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.48
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.46
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.44
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.42
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.40
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.38
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.36
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.34
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.32
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.30
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.28
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.26
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.24
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.22
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.20
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.6.0.18
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.16
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.14
	OPENBSD_2_8:1.6.0.12
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.10
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.8
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.6
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	98.05.10.21.11.53;	author art;	state Exp;
branches;
next	1.5;

1.5
date	98.04.30.06.27.17;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	98.02.11.01.27.29;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	97.09.17.06.47.17;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.08.08.08.27.22;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.08.11.05.35.13;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Nicer fix to the problems on different sun4m machines.

from NetBSD-current 980505
@
text
@/*	$OpenBSD: iommureg.h,v 1.5 1998/04/30 06:27:17 deraadt Exp $	*/
/*	$NetBSD: iommureg.h,v 1.5 1998/05/04 23:16:59 pk Exp $	*/

/*
 * Copyright (c) 1996
 * 	The President and Fellows of Harvard College. All rights reserved.
 * Copyright (c) 1995 	Paul Kranenburg
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Aaron Brown and
 *	Harvard University.
 *	This product includes software developed by Paul Kranenburg.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

struct iommureg {
	u_int32_t	io_cr;		/* IOMMU control register */
	u_int32_t	io_bar;		/* IOMMU PTE base register */
	u_int32_t	io_fill1[3];
	u_int32_t	io_flashclear;	/* Flush all TLB entries */
	u_int32_t	io_flushpage;	/* Flush page from TLB */
};

#define IOMMU_CTL_IMPL		0xf0000000
#define IOMMU_CTL_VER		0x0f000000
#define IOMMU_CTL_RSVD1		0x00ffffe0
#define IOMMU_CTL_RANGE		0x0000001c
#define IOMMU_CTL_RANGESHFT	2
#define IOMMU_CTL_RSVD2		0x00000002
#define IOMMU_CTL_ME		0x00000001

#define IOMMU_BAR_IBA		0xfffffc00
#define IOMMU_BAR_IBASHFT	10

/* Flushpage fields */
#define IOMMU_FLPG_VADDR	0xfffff000
#define IOMMU_FLUSH_MASK	0xfffff000

/*
 * A few empty cycles after touching the IOMMU registers seems to
 * avoid utter lossage on some machines (SS4s & SS5s) where our caller
 * would see some of its local (`%lx') registers trashed.
 */
#define IOMMU_FLUSHPAGE(sc, va)	do {				\
	(sc)->sc_reg->io_flushpage = (va) & IOMMU_FLUSH_MASK;	\
	__asm("nop;nop;nop;");					\
} while (0);
#define IOMMU_FLUSHALL(sc)	do {				\
	(sc)->sc_reg->io_flashclear = 0;			\
	__asm("nop;nop;nop;");					\
} while (0)

/* to pte.h ? */
typedef u_int32_t iopte_t;

#define IOPTE_PPN	0xffffff00	/* PA<35:12> */
#define IOPTE_C		0x00000080 	/* cacheable */
#define IOPTE_W		0x00000004	/* writeable */
#define IOPTE_V		0x00000002	/* valid */
#define IOPTE_WAZ	0x00000001	/* must write as zero */

#define IOPTE_PPNSHFT	8		/* shift to get ppn from IOPTE */
#define IOPTE_PPNPASHFT	4		/* shift to get pa from ioppn */

#define IOPTE_BITS "\20\10C\3W\2V\1WAZ"

@


1.5
log
@iommu flushing workaround is only needed on MS2 machines, apparently
@
text
@d1 2
a2 2
/*	$OpenBSD: iommureg.h,v 1.4 1998/02/11 01:27:29 marc Exp $	*/
/*	$NetBSD: iommureg.h,v 1.3 1997/09/14 19:16:04 pk Exp $ */
d64 2
a65 3
 * On SS4/SS5 machines, read something back from the IOMMU control
 * space after writing to a flush register to drain write buffers (?).
 * This seems to avoid utter lossage on these machines where our caller
d70 1
a70 2
	if (cpuinfo.cpu_type == CPUTYP_MS2)			\
		(*(volatile u_int32_t *)&(sc)->sc_reg->io_bar);	\
d74 1
a74 2
	if (cpuinfo.cpu_type == CPUTYP_MS2)			\
		(*(volatile u_int32_t *)&(sc)->sc_reg->io_bar);	\
@


1.4
log
@From NetBSD: sun4m anti crash code in IOMMU_FLUSH{PAGE,ALL}
@
text
@d1 1
a1 1
/*	$OpenBSD: iommureg.h,v 1.3 1997/09/17 06:47:17 downsj Exp $	*/
d64 3
a66 3
 * Read something back from the IOMMU control space after writing
 * to a flush register to drain write buffers (?).   This seems to
 * avoid utter lossage on some machines (SS4s & SS5s) where our caller
d71 2
a72 1
	(*(volatile u_int32_t *)&(sc)->sc_reg->io_bar);		\
d76 2
a77 1
	(*(volatile u_int32_t *)&(sc)->sc_reg->io_bar);		\
@


1.3
log
@NETBSD_CURRENT_970916.  Lot's just ID changes, since changes don't apply to
us.  Includes some pmap changes, for which I don't have the original commit
message(s) handy.
@
text
@d1 1
a1 1
/*	$OpenBSD: iommureg.h,v 1.2 1997/08/08 08:27:22 downsj Exp $	*/
d63 6
d71 1
d75 1
@


1.2
log
@Mostly sync to NetBSD-current 970804.

GENERIC currently compiles and runs; some devices (isp) are not complete and
not yet enabled.
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: iommureg.h,v 1.2 1996/05/16 15:57:18 abrown Exp $ */
a45 11
	u_int32_t	io_fill2[0x1000-28];
	u_int32_t	io_afsr;	/* Asynchronous Fault Status */
	u_int32_t	io_afar;	/* Asynchronous Fault Address */
	u_int32_t	io_sbuscfg0;	/* Sbus configuration control */
	u_int32_t	io_sbuscfg1;
	u_int32_t	io_sbuscfg2;
	u_int32_t	io_sbuscfg3;
	u_int32_t	io_mfsr;	/* Memory Fault Status */
	u_int32_t	io_mfar;	/* Memory Fault Address */
	u_int32_t	io_fill3[0x1000-32];
	u_int32_t	io_mid;		/* it might be mud */
@


1.1
log
@netbsd port, now we merge our changes back in
@
text
@d1 1
@
