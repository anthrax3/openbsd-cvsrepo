head	1.13;
access;
symbols
	OPENBSD_6_0:1.13.0.8
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.4
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.12.0.6
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.12
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.8
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.6
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.8
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.6
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.6.0.4
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.8
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.2
	SMP_BASE:1.4
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@# @;


1.13
date	2015.01.15.19.06.32;	author schwarze;	state Exp;
branches;
next	1.12;
commitid	dven8mWEy4wx3j1c;

1.12
date	2013.10.20.07.40.42;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2013.09.29.21.30.50;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2010.03.06.16.16.43;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.31.19.20.05;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.06.21.45.33;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.07.07.45.12;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.05.00.02.32;	author miod;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2001.09.21.14.14.10;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.03.20.04.30;	author pjanzen;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	99.07.08.22.56.10;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.05.23.14.11.30;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	97.09.17.10.46.21;	author downsj;	state Exp;
branches;
next	;

1.4.2.1
date	2001.10.31.03.07.57;	author nate;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2003.03.27.23.49.26;	author niklas;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2003.06.07.11.14.44;	author ho;	state Exp;
branches;
next	;

1.6.4.1
date	2003.05.19.21.46.33;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.13
log
@remove .Tn; from Jan Stary <hans at stare dot cz>
@
text
@.\"	$OpenBSD: installboot.8,v 1.12 2013/10/20 07:40:42 jmc Exp $
.\"	$NetBSD: installboot.8,v 1.1 1995/09/30 21:32:14 pk Exp $
.\"
.\" Copyright (c) 1995 Paul Kranenburg
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Paul Kranenburg.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: October 20 2013 $
.Dt INSTALLBOOT 8 sparc
.Os
.Sh NAME
.Nm installboot
.Nd install a bootstrap on an FFS filesystem partition
.Sh SYNOPSIS
.Nm installboot
.Op Fl hnv
.Op Fl a Ar karch
.Ar boot
.Ar bootxx
.Ar device
.Sh DESCRIPTION
.Nm installboot
prepares an FFS filesystem partition for boot-strapping from the PROM.
The sparc bootblocks are split into two parts: a small first-stage program that
is written into the superblock area in a partition
.Po
and hence is limited in size to SBSIZE - DEV_BSIZE bytes
.Pc ,
and a second-stage program that resides in the filesystem proper.
The first-stage program is loaded into memory by the PROM.
After it receives control, it loads the second stage program from a set of
filesystem block numbers that have been hard-coded into it by the
.Nm installboot
program.
The second-stage boot program uses the device driver interface to
the PROM and the stand-alone filesystem code in
.Dq libsa.a
to locate and load the kernel.
The second-stage boot program and the prototype code for the
first-stage bootprogram can be found in
.Pa /usr/mdec/boot
and
.Pa /usr/mdec/bootxx
respectively.
The second-stage program commonly resides in the root directory as
.Pa /boot .
The utility
.Pa /usr/mdec/binstall
can be used to properly copy the second-stage bootprogram to its destination.
This script takes care of post-processing
that is required on non-Openboot machines.
.Pp
The options are as follows:
.Bl -tag -width flag
.It Fl a Ar karch
Set the machine architecture.
The argument
.Ar karch
can be one of
.Dq sun4 ,
.Dq sun4c
or
.Dq sun4m .
Sun 4c models with Openboot PROMs need the header to be present,
while Sun 4 systems with the
.Dq old monitor
interface require the header to be stripped off.
This is normally taken care of by
.Nm installboot
automatically, but it's useful when preparing a bootable filesystem for
another system.
.It Fl h
Leave the a.out header on the installed
.Ar bootxx
program.
This option has been superseded by the
.Fl a Ar karch
option.
.It Fl n
Do not actually write anything on the disk.
.It Fl v
Verbose mode.
.El
.Pp
The arguments are:
.Bl -tag -width bootxx
.It Ar boot
The name of the second-stage boot program in the file system
where the first-stage boot program is to be installed.
.It Ar bootxx
The name of the prototype file for the first stage boot program.
.It Ar device
The name of the raw device in which the first-stage boot program
is to be installed.
This should correspond to the block device on which the file system containing
.Ar boot
is mounted.
.El
.Sh EXAMPLES
The following command will install the first-stage bootblocks in the
root filesystem
.Pq assumed to be mounted on Dq sd0a
using the file
.Pa /boot
as the second-level boot program:
.Bd -literal -offset indent
# installboot /boot /usr/mdec/bootxx /dev/rsd0a
.Ed
.Sh SEE ALSO
.Xr disklabel 8 ,
.Xr init 8
.Sh HISTORY
The
.Nm installboot
first appeared in
.Nx 1.1 .
@


1.12
log
@catch up with elf(5)/stab(5) removal;
ok miod
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.11 2013/09/29 21:30:50 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: September 29 2013 $
d74 2
a75 3
This script takes care of post-processing that is required on
.Pf non- Tn Openboot
machines.
d88 2
a89 3
Sun 4c models with
.Tn Openboot
PROMs need the header to be present, while Sun 4 systems with the
@


1.11
log
@various fixes to sync usage() with SYNOPSIS, and make these pages a bit
more consistent;

feedback/ok miod
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.10 2010/03/06 16:16:43 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: March 6 2010 $
d99 1
a99 3
Leave the
.Xr a.out 5
header on the installed
@


1.10
log
@remove the (now inaccurate) note about not being able to run
installboot on a mounted partition;

from J.C. Roberts
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.9 2007/05/31 19:20:05 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: May 31 2007 $
d40 1
a40 1
.Op Fl nvh
d116 1
a116 1
the name of the second-stage boot program in the file system
d119 1
a119 1
the name of the prototype file for the first stage boot program.
d121 1
a121 1
the name of the raw device in which the first-stage boot program
d135 1
a135 1
installboot /boot /usr/mdec/bootxx /dev/rsd0a
@


1.9
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.8 2003/06/06 21:45:33 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate$
a144 11
.Sh BUGS
.Nm installboot
requires simultaneous access to the mounted file system and
the raw device, but that is not allowed with the kernel
.Dv securelevel
variable set to a value greater than zero
.Pq the default ,
so
.Nm installboot
only works in single-user mode
.Pq or insecure mode - see Xr init 8 .
@


1.8
log
@- section reorder
- new sentence, new line
- some macro fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.7 2003/02/07 07:45:12 jmc Exp $
d32 1
a32 1
.Dd September 29, 1995
@


1.7
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.6 2001/10/05 00:02:32 miod Exp $
d54 3
a56 3
The first-stage program is loaded into memory by the PROM. After it receives
control, it loads the second stage program from a set of filesystem block
numbers that have been hard-coded into it by the
d58 2
a59 1
program. The second-stage boot program uses the device driver interface to
d68 2
a69 2
respectively. The second-stage program commonly resides in the root directory
as
d73 2
a74 3
can be used to properly copy the second-stage bootprogram to its
destination. This script takes care of post-processing that is required
on
d81 2
a82 1
Set the machine architecture. The argument
d93 2
a94 2
interface require the header to be stripped off. This is normally taken
care of by
d103 2
a104 1
program. This option has been superseded by the
d122 2
a123 2
is to be installed.  This should correspond to the block device
on which the file system containing
d137 8
a155 8
.Sh SEE ALSO
.Xr disklabel 8 ,
.Xr init 8
.Sh HISTORY
The
.Nm installboot
first appeared in
.Nx 1.1 .
@


1.6
log
@Sync fixes with sparc64.
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.5 2001/09/21 14:14:10 mickey Exp $
d47 1
a47 1
prepares a FFS filesystem partition for boot-strapping from the PROM.
@


1.6.4.1
log
@sync
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d47 1
a47 1
prepares an FFS filesystem partition for boot-strapping from the PROM.
@


1.5
log
@grammar fixens; from Kaspar Toomik <kaspar@@anisakis.org>, pr2077
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.4 2000/01/03 20:04:30 pjanzen Exp $
d94 1
a94 1
.Nm
d136 1
a136 1
.Nm
d151 1
a151 1
.Nm
d153 1
a153 1
.Nx 1.1
@


1.4
log
@.Sh "SEE ALSO" -> .Sh SEE ALSO
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.3 1999/07/08 22:56:10 deraadt Exp $
d54 1
a54 1
The first-stage program is loaded into memory by the PROM. After it receiving
d72 1
a72 1
can be used to properly copy the a second-stage bootprogram to its
@


1.4.2.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.4 2000/01/03 20:04:30 pjanzen Exp $
d54 1
a54 1
The first-stage program is loaded into memory by the PROM. After it receives
d72 1
a72 1
can be used to properly copy the second-stage bootprogram to its
d94 1
a94 1
.Nm installboot
d136 1
a136 1
.Nm installboot
d151 1
a151 1
.Nm installboot
d153 1
a153 1
.Nx 1.1 .
@


1.4.2.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d47 1
a47 1
prepares an FFS filesystem partition for boot-strapping from the PROM.
@


1.4.2.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.4.2.2 2003/03/27 23:49:26 niklas Exp $
d54 3
a56 3
The first-stage program is loaded into memory by the PROM.
After it receives control, it loads the second stage program from a set of
filesystem block numbers that have been hard-coded into it by the
d58 1
a58 2
program.
The second-stage boot program uses the device driver interface to
d67 2
a68 2
respectively.
The second-stage program commonly resides in the root directory as
d72 3
a74 2
can be used to properly copy the second-stage bootprogram to its destination.
This script takes care of post-processing that is required on
d81 1
a81 2
Set the machine architecture.
The argument
d92 2
a93 2
interface require the header to be stripped off.
This is normally taken care of by
d102 1
a102 2
program.
This option has been superseded by the
d120 2
a121 2
is to be installed.
This should correspond to the block device on which the file system containing
a134 8
.Sh SEE ALSO
.Xr disklabel 8 ,
.Xr init 8
.Sh HISTORY
The
.Nm installboot
first appeared in
.Nx 1.1 .
d146 8
@


1.3
log
@flesh out .Dt
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.2 1999/05/23 14:11:30 aaron Exp $
d146 1
a146 1
.Sh "SEE ALSO"
@


1.2
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: installboot.8,v 1.1 1997/09/17 10:46:21 downsj Exp $
d33 1
a33 1
.Dt INSTALLBOOT 8
@


1.1
log
@Reorganizaed bootblocks.  Builds like hp300 now.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d34 1
a34 1
.Os 
@

