head	1.12;
access;
symbols
	OPENBSD_6_0:1.11.0.14
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.10
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.12
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.4
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.8
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.30
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.28
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.26
	OPENBSD_5_0:1.10.0.24
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.22
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.20
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.16
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.18
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.14
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.12
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.10
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.8
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.8.0.14
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.12
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.10
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.8
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.8
	UBC:1.6.0.8
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.6
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.12
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.09.01.09.23.42;	author tedu;	state dead;
branches;
next	1.11;
commitid	Q2PxaFNhqAe0Wmla;

1.11
date	2013.03.28.17.30.45;	author martynas;	state Exp;
branches;
next	1.10;

1.10
date	2006.01.10.00.04.04;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.24.20.46.48;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.08.11.12.13.16;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.14.04.23.33;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.17.17.44.38;	author deraadt;	state Exp;
branches
	1.6.8.1;
next	1.5;

1.5
date	2000.10.16.14.25.05;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.08.08.08.26.07;	author downsj;	state Exp;
branches
	1.4.12.1;
next	1.3;

1.3
date	96.08.11.05.34.45;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.24.16.51.49;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.42;	author deraadt;	state Exp;
branches;
next	;

1.4.12.1
date	2001.05.14.21.37.12;	author niklas;	state Exp;
branches;
next	1.4.12.2;

1.4.12.2
date	2002.03.06.02.04.46;	author niklas;	state Exp;
branches;
next	1.4.12.3;

1.4.12.3
date	2003.03.27.23.49.25;	author niklas;	state Exp;
branches;
next	;

1.6.8.1
date	2002.06.11.03.38.16;	author art;	state Exp;
branches;
next	1.6.8.2;

1.6.8.2
date	2002.10.29.00.28.10;	author art;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Celebrate OpenBSD 6.0 release by retiring the sparc port.
You've served us well, good friend, but now it's time to rest.
ok deraadt
@
text
@/*	$OpenBSD: cdefs.h,v 1.11 2013/03/28 17:30:45 martynas Exp $	*/

/*
 * Written by J.T. Conklin <jtc@@wimsey.com> 01/17/95.
 * Public domain.
 */

#ifndef	_MACHINE_CDEFS_H_
#define	_MACHINE_CDEFS_H_

#define __strong_alias(alias,sym)			\
	__asm__(".global " __STRING(alias) " ; "	\
	    __STRING(alias) " = " __STRING(sym))
#define __weak_alias(alias,sym)				\
	__asm__(".weak " __STRING(alias) " ; "		\
	    __STRING(alias) " = " __STRING(sym))
#define __warn_references(sym,msg)			\
	__asm__(".section .gnu.warning." __STRING(sym)	\
	    " ; .ascii \"" msg "\" ; .text")

#endif /* !_MACHINE_CDEFS_H_ */
@


1.11
log
@Add __strong_alias macros for all architectures to be able to alias
another symbol without weak attribute.  To be used in libc and libm
soon.  Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.10 2006/01/10 00:04:04 millert Exp $	*/
@


1.10
log
@Remove duplicate _C_LABEL define.  OK miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.9 2005/11/24 20:46:48 deraadt Exp $	*/
d11 3
a13 5
#if defined(lint)
#define __indr_reference(sym,alias)	__lint_equal__(sym,alias)
#define __warn_references(sym,msg)
#define __weak_alias(alias,sym)		__lint_equal__(sym,alias)
#elif defined(__GNUC__) && defined(__STDC__)
a19 1
#endif
@


1.9
log
@add lint-specific hacks.  at the same time, clean out a lot of ancient
cruft for old compilers and environments.  there may be a 2nd round of
polishing after this; ok miod and others
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.8 2002/08/11 12:13:16 art Exp $	*/
a9 2

#define _C_LABEL(x)	_STRING(_ ## x)
@


1.8
log
@Prepare for ELF.
@
text
@d1 1
a1 2
/*	$OpenBSD: cdefs.h,v 1.7 2002/02/14 04:23:33 fgsch Exp $	*/
/*	$NetBSD: cdefs.h,v 1.3 1996/12/27 20:51:31 pk Exp $	*/
a10 1
#ifdef __STDC__
a11 3
#else
#define _C_LABEL(x)	_STRING(_/**/x)
#endif
d13 2
a14 19
#if defined(__GNUC__) && defined(__STDC__)
#ifdef __ELF__
#define __weak_alias(alias,sym)		\
    __asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define __warn_references(sym,msg)	\
    __asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")

#else
#define __indr_reference(sym,alias)	\
	__asm__(".stabs \"_" #alias "\",11,0,0,0");	\
	__asm__(".stabs \"_" #sym "\",1,0,0,0")
#define __warn_references(sym,msg)	\
	__asm__(".stabs \"" msg "\",30,0,0,0");		\
	__asm__(".stabs \"_" #sym "\",1,0,0,0")
#define __weak_alias(alias,sym)		\
	__asm__(".weak _" #alias "; _" #alias "= _" __STRING(sym))
#endif /* __ELF__ */
#else
#define __indr_reference(sym,alias)
d16 8
a23 1
#define __weak_alias(alias,sym)
@


1.7
log
@__weak_alias() support.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.6 2000/10/17 17:44:38 deraadt Exp $	*/
d18 8
a25 2
#ifdef __GNUC__
#ifdef __STDC__
d34 1
a34 10
#else
#define __indr_reference(sym,alias)	\
	__asm__(".stabs \"_/**/alias\",11,0,0,0");	\
	__asm__(".stabs \"_/**/sym\",1,0,0,0")
#define __warn_references(sym,msg)	\
	__asm__(".stabs msg,30,0,0,0");			\
	__asm__(".stabs \"_/**/sym\",1,0,0,0")
#define __weak_alias(alias,sym)		\
	__asm__(".weak _/**/alias; _/**/alias = _/**/sym")
#endif
@


1.6
log
@damn it, i have had it with this untested weak shit
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.4 1997/08/08 08:26:07 downsj Exp $	*/
d26 2
d35 2
d41 1
@


1.6.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.6 2000/10/17 17:44:38 deraadt Exp $	*/
a25 2
#define __weak_alias(alias,sym)		\
	__asm__(".weak _" #alias "; _" #alias "= _" __STRING(sym))
a32 2
#define __weak_alias(alias,sym)		\
	__asm__(".weak _/**/alias; _/**/alias = _/**/sym")
a36 1
#define __weak_alias(alias,sym)
@


1.6.8.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.6.8.1 2002/06/11 03:38:16 art Exp $	*/
d18 2
a19 8
#if defined(__GNUC__) && defined(__STDC__)
#ifdef __ELF__
#define __weak_alias(alias,sym)		\
    __asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define __warn_references(sym,msg)	\
    __asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")

#else
d28 10
a37 1
#endif /* __ELF__ */
@


1.5
log
@re-add weak sparc support; d@@
@
text
@a25 2
#define __weak_alias(alias,sym)	\
	__asm__(".weak _" #alias "; _" #alias "= _" __STRING(sym))
a32 2
#define __weak_alias(alias,sym)	\
	__asm__(".weak _/**/alias; _/**/alias = _/**/sym")
a36 1
#define	__weak_alias(alias,sym)
@


1.4
log
@Mostly sync to NetBSD-current 970804.

GENERIC currently compiles and runs; some devices (isp) are not complete and
not yet enabled.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d26 2
d35 2
d41 1
@


1.4.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.6 2000/10/17 17:44:38 deraadt Exp $	*/
@


1.4.12.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a25 2
#define __weak_alias(alias,sym)		\
	__asm__(".weak _" #alias "; _" #alias "= _" __STRING(sym))
a32 2
#define __weak_alias(alias,sym)		\
	__asm__(".weak _/**/alias; _/**/alias = _/**/sym")
a36 1
#define __weak_alias(alias,sym)
@


1.4.12.3
log
@Sync the SMP branch with 3.3
@
text
@d18 2
a19 8
#if defined(__GNUC__) && defined(__STDC__)
#ifdef __ELF__
#define __weak_alias(alias,sym)		\
    __asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define __warn_references(sym,msg)	\
    __asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")

#else
d28 10
a37 1
#endif /* __ELF__ */
@


1.3
log
@netbsd port, now we merge our changes back in
@
text
@d1 2
a2 1
/*	$NetBSD: cdefs.h,v 1.2 1995/03/23 20:10:48 jtc Exp $	*/
d34 3
@


1.2
log
@Provide empty __warn_references() when we are not running GCC
@
text
@a32 2
#else
#define	__warn_references(sym,msg)	/* nothing */
@


1.1
log
@Initial revision
@
text
@d33 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
