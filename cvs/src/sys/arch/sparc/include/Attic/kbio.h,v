head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_1:1.4.0.24
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.4.0.22
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.20
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.12
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2002.08.12.10.44.04;	author miod;	state dead;
branches;
next	1.4;

1.4
date	97.08.08.08.26.28;	author downsj;	state Exp;
branches
	1.4.12.1
	1.4.22.1;
next	1.3;

1.3
date	96.08.11.05.34.52;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.10.18.18.08.28;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.43;	author deraadt;	state Exp;
branches;
next	;

1.4.12.1
date	2003.03.27.23.49.25;	author niklas;	state dead;
branches;
next	;

1.4.22.1
date	2002.10.29.00.28.10;	author art;	state dead;
branches;
next	;


desc
@@


1.5
log
@Convert sparc console code from rcons and pseudo-devices to rasops and wscons.
For most framebuffers it is faster.

Other changes include:
o 24 bit support in tcx(4) for the S24 framebuffer
o accelerated cgsix(4) text console
o new cgtwelve(4) driver for the GS framebuffer
o improved serial driver code
o better keyboard support

The following framebuffers have not been tested but should work: cgfour,
cgeight and cgfourteen

These changes will require XF4 changes, to use Xwsfb instead of Xsun*, to be
commited later today.

Most of the work by me during the LSM and the week after, with code borrowed
from jason@@, NetBSD (new serial code), and feedback from mickey@@. Work on
pnozz(4) done by millert@@
@
text
@/*	$OpenBSD: kbio.h,v 1.4 1997/08/08 08:26:28 downsj Exp $	*/
/*	$NetBSD: kbio.h,v 1.4 1995/05/10 16:07:27 pk Exp $ */

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)kbio.h	8.1 (Berkeley) 6/11/93
 */

/*
 * The following is a minimal emulation of Sun's `kio' structures
 * and related operations necessary to make X11 happy (i.e., make it
 * compile, and make old X11 binaries run).
 */

/*
 * The kiockey structure apparently gets and/or sets keyboard mappings.
 * It seems to be kind of useless, but X11 uses it (according to the
 * comments) to figure out when a Sun 386i has a type-4 keyboard but
 * claims to have a type-3 keyboard.  We need just enough to cause the
 * appropriate ioctl to return the appropriate magic value.
 *
 * KIOCGETKEY fills in kio_entry from kio_station.  Not sure what tablemask
 * is for; X sets it before the call, so it is not an output, but we do not
 * care anyway.  KIOCSDIRECT is supposed to tell the kernel whether to send
 * keys to the console or to X; we just send them to X whenever the keyboard
 * is open at all.  (XXX may need to change this later)
 *
 * Keyboard commands and types are defined in kbd.h as they are actually
 * real hardware commands and type numbers.
 */
struct okiockey { /* Out-dated key translation structure */
	int	kio_tablemask;	/* whatever */
	u_char	kio_station;	/* key number */
	u_char	kio_entry;	/* HOLE if not present */
	char	kio_text[10];	/* the silly escape sequences (unsupported) */
};

struct kiockey {
	int	kio_tablemask;	/* whatever */
	u_char	kio_station;	/* key number */
	u_short	kio_entry;	/* HOLE if not present */
	char	kio_text[10];	/* the silly escape sequences (unsupported) */
};

/*
 * Values for kio_tablemask. These determine which table to read/modify
 * in KIOC[SG]KEY ioctls. Currently, we only have "non-shift" and "shift"
 * tables.
 */
#define KIOC_NOMASK	0x0
#define KIOC_CAPSMASK	0x1
#define KIOC_SHIFTMASK	0xe
#define KIOC_CTRLMASK	0x30
#define KIOC_ALTGMASK	0x200
#define KIOC_NUMLMASK	0x800

#define	HOLE	0x302		/* value for kio_entry to say `really type 3' */

#define	KIOCTRANS	_IOW('k', 0, int)	/* set translation mode */
			/* (we only accept TR_UNTRANS_EVENT) */
#define	KIOCGETKEY	_IOWR('k', 2, struct okiockey) /* fill in kio_entry */
#define	KIOCGTRANS	_IOR('k', 5, int)	/* get translation mode */
#define	KIOCCMD		_IOW('k', 8, int)	/* X uses this to ring bell */
#define	KIOCTYPE	_IOR('k', 9, int)	/* get keyboard type */
#define	KIOCSDIRECT	_IOW('k', 10, int)	/* keys to console? */
#define KIOCSKEY	_IOW('k', 12, struct kiockey) /* set xlat mode */
#define KIOCGKEY	_IOWR('k', 13, struct kiockey) /* get xlat mode */
#define	KIOCLAYOUT	_IOR('k', 20, int)	/* get keyboard layout */
#define	KIOCSLED	_IOW('k', 14, char)	/* set LED state */
#define	KIOCGLED	_IOR('k', 15, char)	/* get LED state */

#define	TR_NONE			0	/* X compat, unsupported */
#define	TR_ASCII		1	/* X compat, unsupported */
#define	TR_EVENT		2	/* X compat, unsupported */
#define	TR_UNTRANS_EVENT	3
@


1.4
log
@Mostly sync to NetBSD-current 970804.

GENERIC currently compiles and runs; some devices (isp) are not complete and
not yet enabled.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.4.12.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: kbio.h,v 1.4 1997/08/08 08:26:28 downsj Exp $	*/
@


1.4.22.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: kbio.h,v 1.4 1997/08/08 08:26:28 downsj Exp $	*/
@


1.3
log
@netbsd port, now we merge our changes back in
@
text
@d1 1
@


1.2
log
@pretty
@
text
@d69 1
a69 1
struct okiockey {	/* Out-dated key translation structure */
d88 6
a93 6
#define	KIOC_NOMASK	0x0
#define	KIOC_CAPSMASK	0x1
#define	KIOC_SHIFTMASK	0xe
#define	KIOC_CTRLMASK	0x30
#define	KIOC_ALTGMASK	0x200
#define	KIOC_NUMLMASK	0x800
d104 2
a105 2
#define	KIOCSKEY	_IOW('k', 12, struct kiockey)	/* set xlat mode */
#define	KIOCGKEY	_IOWR('k', 13, struct kiockey)	/* get xlat mode */
@


1.1
log
@Initial revision
@
text
@d69 1
a69 1
struct okiockey { /* Out-dated key translation structure */
d88 6
a93 6
#define KIOC_NOMASK	0x0
#define KIOC_CAPSMASK	0x1
#define KIOC_SHIFTMASK	0xe
#define KIOC_CTRLMASK	0x30
#define KIOC_ALTGMASK	0x200
#define KIOC_NUMLMASK	0x800
d104 2
a105 2
#define KIOCSKEY	_IOW('k', 12, struct kiockey) /* set xlat mode */
#define KIOCGKEY	_IOWR('k', 13, struct kiockey) /* get xlat mode */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
