head	1.18;
access;
symbols
	OPENBSD_6_0:1.18.0.26
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.22
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.24
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.16
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.20
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.18
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.14
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.12
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.10
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.8
	OPENBSD_5_0:1.18.0.6
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.4
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.18.0.2
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.17.0.12
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.14
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.10
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.8
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.6
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.4
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.17.0.2
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.16.0.2
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.7
	UBC:1.4.0.2
	UBC_BASE:1.4
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2010.05.15.15.27.16;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2006.12.03.16.38.13;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2006.03.12.22.53.01;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2006.03.12.22.17.48;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2005.03.23.17.16.36;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2005.03.07.16.44.52;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.29.22.07.39;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.28.17.05.35;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.23.27.54;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.14.01.51.03;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2002.11.06.21.06.22;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.20.11.17.56;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.12.10.44.04;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.43;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.01.12.13.46;	author art;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	97.08.08.08.26.18;	author downsj;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	96.08.11.05.34.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.43;	author deraadt;	state Exp;
branches;
next	;

1.3.12.1
date	2001.11.13.21.04.17;	author niklas;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2002.03.28.10.57.10;	author niklas;	state Exp;
branches;
next	1.3.12.3;

1.3.12.3
date	2003.03.27.23.49.25;	author niklas;	state Exp;
branches;
next	1.3.12.4;

1.3.12.4
date	2003.05.16.00.29.40;	author niklas;	state Exp;
branches;
next	1.3.12.5;

1.3.12.5
date	2003.06.07.11.14.43;	author ho;	state Exp;
branches;
next	1.3.12.6;

1.3.12.6
date	2004.02.19.10.49.58;	author niklas;	state Exp;
branches;
next	;

1.4.2.1
date	2002.06.11.03.38.16;	author art;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2002.10.29.00.28.10;	author art;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2003.05.19.21.46.32;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Make fb_pfour_id() take a volatile pointer as argument.
@
text
@/*	$OpenBSD: fbvar.h,v 1.17 2006/12/03 16:38:13 miod Exp $	*/
/*	$NetBSD: fbvar.h,v 1.9 1997/07/07 23:31:30 pk Exp $ */

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)fbvar.h	8.1 (Berkeley) 6/11/93
 */

/*
 * Common frame buffer variables.
 * All framebuffer softc structures must start with such a structure.
 */
struct sunfb {
	struct	device sf_dev;		/* base device */

	int	sf_width;
	int	sf_height;
	int	sf_depth;
	int	sf_linebytes;

	int	sf_fbsize;		/* sf_height * sf_linebytes */

	int	*sf_crowp, *sf_ccolp;	/* PROM cursor position */

	int	sf_flags;
#define	FB_PFOUR	0x00000001	/* indicates a P4 fb */
	volatile u_int32_t* sf_pfour;	/* P4 register when applicable */

	struct	rasops_info sf_ro;

	struct	wsscreen_descr sf_wsd;
	struct	wsscreen_list sf_wsl;
	struct	wsscreen_descr *sf_scrlist[1];
	int	sf_nscreens;
};

/*
 * Selected framebuffer node on OBP systems if k/d console.
 */
extern int fbnode;

void	fb_setsize(struct sunfb*, int, int, int, int, int);
void	fbwscons_init(struct sunfb *, int);
void	fbwscons_console_init(struct sunfb *, int);
void	fbwscons_setcolormap(struct sunfb *,
    void (*)(void *, u_int, u_int8_t, u_int8_t, u_int8_t));
void	fbwscons_attach(struct sunfb *, struct wsdisplay_accessops *, int);

#if defined(SUN4)
int	fb_pfour_id(volatile void *);
void	fb_pfour_burner(void *, u_int, u_int);
#endif
@


1.17
log
@Clean frame buffer attachment code:
- There is no need to check for buses config(8) will not let us attach to
- Better P4 bus logic, which does not need to abuse device flags
- Do not bother trying to print a meaningful device description when it is
  not connected to sbus.
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.16 2006/03/12 22:53:01 miod Exp $	*/
d85 1
a85 1
int	fb_pfour_id(void *);
@


1.16
log
@Previous fix was half-done, move the wsscreen_list array into the softc
as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.14 2005/03/23 17:16:36 miod Exp $	*/
a44 7
 * Frame buffer device flags.
 */

#define	FB_PFOUR	0x00010000	/* indicates fb is a pfour fb */
#define FB_USERMASK	(0)		/* flags that the user can set */

/*
d61 1
@


1.15
log
@When attaching a wsdisplay, the wsscreen_list structure can not be on the
stack; found the hard way by Stefano <stefano@@merlinobbs.net>.
@
text
@d74 1
@


1.14
log
@Move the alloc_screen, free_screen and show_screen wsdisplay accessops to
the common frame buffer code, rather than duplicating it in every driver.
No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.13 2005/03/07 16:44:52 miod Exp $	*/
d73 1
@


1.13
log
@Do not bother passing the blanking routine to fbwscons_console_init(),
as fbwscons_attach() can find it on its own.
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.12 2004/11/29 22:07:39 miod Exp $	*/
d73 1
d90 1
a90 2
int	fb_pfour_get_video(struct sunfb *);
void	fb_pfour_set_video(struct sunfb *, int);
@


1.12
log
@Move the struct wsscreen_descr from a per-driver global to a per-instance
field of the sunfb structure. This allows multiple instances of the same driver,
but with different resolutions (such as a couple of vigra or a TGX cgsix and
a TGX+ cgsix) to use distinct wsscreen_descr structures featuring different
resolution information.

Doing this allows more wsscreen_descr fiddling inside the sparc* fb api,
and results in some code shrinkage (about 4KB on sparc GENERIC).
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.11 2003/06/28 17:05:35 miod Exp $	*/
d82 1
a82 2
void	fbwscons_console_init(struct sunfb *, int,
    void (*)(void *, u_int, u_int));
@


1.11
log
@Sync sparc fb API with the sparc64 changes (fbwscons_init takes flags, and
the sunfb structure keeps pointer to the prom cursor coordinates).
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.10 2003/06/02 23:27:54 millert Exp $	*/
d71 2
d82 1
a82 1
void	fbwscons_console_init(struct sunfb *, struct wsscreen_descr *, int,
d86 1
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.9 2003/05/14 01:51:03 fgsch Exp $	*/
d64 2
@


1.9
log
@remove unneeded FB_FORCELOW; miod@@ agreed.
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.8 2002/11/06 21:06:22 miod Exp $	*/
d25 1
a25 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@- always initialize colormaps, even if the frame buffer is non console; this
  helps if the ramdac does not get initialized (idea from jason@@)
- only register a shutdown hook for the frame buffers which need it, if this
  is the console frame buffer. Otherwise this is just a waste of time.
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.7 2002/09/20 11:17:56 fgsch Exp $	*/
d53 1
a53 3
#define FB_FORCELOW	0x00000001	/* run 24 bit fb in 8 bit mode */
					/* or cg12 in 1 bit mode */
#define FB_USERMASK	(0xffff)	/* flags that the user can set */
@


1.7
log
@Support to run the 24 bit fb in 8 bit mode or cg12 in 1 bit mode
via flags, using 0x0001.
miod@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.5 2002/03/14 01:26:43 millert Exp $	*/
a84 1
    void (*)(void *, u_int, u_int8_t, u_int8_t, u_int8_t),
d86 2
@


1.6
log
@Convert sparc console code from rcons and pseudo-devices to rasops and wscons.
For most framebuffers it is faster.

Other changes include:
o 24 bit support in tcx(4) for the S24 framebuffer
o accelerated cgsix(4) text console
o new cgtwelve(4) driver for the GS framebuffer
o improved serial driver code
o better keyboard support

The following framebuffers have not been tested but should work: cgfour,
cgeight and cgfourteen

These changes will require XF4 changes, to use Xwsfb instead of Xsun*, to be
commited later today.

Most of the work by me during the LSM and the week after, with code borrowed
from jason@@, NetBSD (new serial code), and feedback from mickey@@. Work on
pnozz(4) done by millert@@
@
text
@a49 2
 *
 * XXX add flags to run 24 bit framebuffers in 8 bit mode if possible?
d53 3
a55 1
#define FB_USERMASK	(0)		/* flags that the user can set */
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.4 2001/11/01 12:13:46 art Exp $	*/
d49 3
a51 2
 * Frame buffer variables.  All frame buffer drivers must provide the
 * following in order to participate.
d54 2
a55 17
#ifdef RASTERCONSOLE
#include <dev/rcons/rcons.h>
#endif

struct fbdriver {
	/* device unblank function (force kernel output to display) */
	void	(*fbd_unblank)(struct device *);
	int	(*fbd_open)(dev_t, int, int, struct proc *);
	int	(*fbd_close)(dev_t, int, int, struct proc *);
	int	(*fbd_ioctl)(dev_t, u_long, caddr_t, int, struct proc *);
	paddr_t	(*fbd_mmap)(dev_t, off_t, int);
#ifdef notyet
	void	(*fbd_wrrop)();		/* `write region' rasterop */
	void	(*fbd_cprop)();		/* `copy region' rasterop */
	void	(*fbd_clrop)();		/* `clear region' rasterop */
#endif
};
d57 6
a62 5
struct fbdevice {
	int	fb_major;		/* XXX */
	struct	fbtype fb_type;		/* what it says */
	caddr_t	fb_pixels;		/* display RAM */
	int	fb_linebytes;		/* bytes per display line */
d64 4
a67 2
	struct	fbdriver *fb_driver;	/* pointer to driver */
	struct	device *fb_device;	/* parameter for fbd_unblank */
d69 1
a69 4
	int	fb_flags;		/* misc. flags */
#define	FB_FORCE	0x00000001	/* force device into /dev/fb */
#define	FB_PFOUR	0x00010000	/* indicates fb is a pfour fb */
#define FB_USERMASK	(FB_FORCE)	/* flags that the user can set */
d71 2
a72 1
	volatile u_int32_t *fb_pfour;	/* pointer to pfour register */
d74 1
a74 4
#ifdef RASTERCONSOLE
	/* Raster console emulator state */
	struct	rconsole fb_rcons;
#endif
d77 10
a86 7
void	fb_attach(struct fbdevice *, int);
void	fb_setsize(struct fbdevice *, int, int, int, int, int);
#ifdef RASTERCONSOLE
void	fbrcons_init(struct fbdevice *);
int	fbrcons_rows(void);
int	fbrcons_cols(void);
#endif
d90 2
a91 2
int	fb_pfour_get_video(struct fbdevice *);
void	fb_pfour_set_video(struct fbdevice *, int);
@


1.4
log
@Change d_mmap in struct cdevsw from:
        int     (*d_mmap)       __P((dev_t, int, int));
to:
	paddr_t	(*d_mmap)	__P((dev_t, off_t, int));

This allows us to mmap devices past 4GB offsets.
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.3 1997/08/08 08:26:18 downsj Exp $	*/
d59 5
a63 5
	void	(*fbd_unblank) __P((struct device *));
	int	(*fbd_open) __P((dev_t, int, int, struct proc *));
	int	(*fbd_close) __P((dev_t, int, int, struct proc *));
	int	(*fbd_ioctl) __P((dev_t, u_long, caddr_t, int, struct proc *));
	paddr_t	(*fbd_mmap) __P((dev_t, off_t, int));
d93 2
a94 2
void	fb_attach __P((struct fbdevice *, int));
void	fb_setsize __P((struct fbdevice *, int, int, int, int, int));
d96 3
a98 3
void	fbrcons_init __P((struct fbdevice *));
int	fbrcons_rows __P((void));
int	fbrcons_cols __P((void));
d102 3
a104 3
int	fb_pfour_id __P((void *));
int	fb_pfour_get_video __P((struct fbdevice *));
void	fb_pfour_set_video __P((struct fbdevice *, int));
@


1.4.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.4 2001/11/01 12:13:46 art Exp $	*/
d59 5
a63 5
	void	(*fbd_unblank)(struct device *);
	int	(*fbd_open)(dev_t, int, int, struct proc *);
	int	(*fbd_close)(dev_t, int, int, struct proc *);
	int	(*fbd_ioctl)(dev_t, u_long, caddr_t, int, struct proc *);
	paddr_t	(*fbd_mmap)(dev_t, off_t, int);
d93 2
a94 2
void	fb_attach(struct fbdevice *, int);
void	fb_setsize(struct fbdevice *, int, int, int, int, int);
d96 3
a98 3
void	fbrcons_init(struct fbdevice *);
int	fbrcons_rows(void);
int	fbrcons_cols(void);
d102 3
a104 3
int	fb_pfour_id(void *);
int	fb_pfour_get_video(struct fbdevice *);
void	fb_pfour_set_video(struct fbdevice *, int);
@


1.4.2.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.4.2.1 2002/06/11 03:38:16 art Exp $	*/
d49 2
a50 1
 * Frame buffer device flags.
d53 17
a69 4
#define	FB_PFOUR	0x00010000	/* indicates fb is a pfour fb */
#define FB_FORCELOW	0x00000001	/* run 24 bit fb in 8 bit mode */
					/* or cg12 in 1 bit mode */
#define FB_USERMASK	(0xffff)	/* flags that the user can set */
d71 5
a75 6
/*
 * Common frame buffer variables.
 * All framebuffer softc structures must start with such a structure.
 */
struct sunfb {
	struct	device sf_dev;		/* base device */
d77 2
a78 4
	int	sf_width;
	int	sf_height;
	int	sf_depth;
	int	sf_linebytes;
d80 4
a83 1
	int	sf_fbsize;		/* sf_height * sf_linebytes */
d85 1
a85 2
	int	sf_flags;
	volatile u_int32_t* sf_pfour;	/* P4 register when applicable */
d87 4
a90 1
	struct	rasops_info sf_ro;
d93 7
a99 10
/*
 * Selected framebuffer node on OBP systems if k/d console.
 */
extern int fbnode;

void	fb_setsize(struct sunfb*, int, int, int, int, int);
void	fbwscons_init(struct sunfb *, int);
void	fbwscons_console_init(struct sunfb *, struct wsscreen_descr *, int,
    void (*)(void *, u_int, u_int8_t, u_int8_t, u_int8_t),
    void (*)(void *, u_int, u_int));
d103 2
a104 2
int	fb_pfour_get_video(struct sunfb *);
void	fb_pfour_set_video(struct sunfb *, int);
@


1.4.2.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d53 3
a55 1
#define FB_USERMASK	(0)		/* flags that the user can set */
d85 1
a86 2
void	fbwscons_setcolormap(struct sunfb *,
    void (*)(void *, u_int, u_int8_t, u_int8_t, u_int8_t));
@


1.3
log
@Mostly sync to NetBSD-current 970804.

GENERIC currently compiles and runs; some devices (isp) are not complete and
not yet enabled.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 1
a63 1
	int	(*fbd_mmap) __P((dev_t, int, int));
@


1.3.12.1
log
@Merge in -current
@
text
@d63 1
a63 1
	paddr_t	(*fbd_mmap) __P((dev_t, off_t, int));
@


1.3.12.2
log
@Merge in -current from about a week ago
@
text
@d59 5
a63 5
	void	(*fbd_unblank)(struct device *);
	int	(*fbd_open)(dev_t, int, int, struct proc *);
	int	(*fbd_close)(dev_t, int, int, struct proc *);
	int	(*fbd_ioctl)(dev_t, u_long, caddr_t, int, struct proc *);
	paddr_t	(*fbd_mmap)(dev_t, off_t, int);
d93 2
a94 2
void	fb_attach(struct fbdevice *, int);
void	fb_setsize(struct fbdevice *, int, int, int, int, int);
d96 3
a98 3
void	fbrcons_init(struct fbdevice *);
int	fbrcons_rows(void);
int	fbrcons_cols(void);
d102 3
a104 3
int	fb_pfour_id(void *);
int	fb_pfour_get_video(struct fbdevice *);
void	fb_pfour_set_video(struct fbdevice *, int);
@


1.3.12.3
log
@Sync the SMP branch with 3.3
@
text
@d49 2
a50 1
 * Frame buffer device flags.
d53 17
a69 11
#define	FB_PFOUR	0x00010000	/* indicates fb is a pfour fb */
#define FB_FORCELOW	0x00000001	/* run 24 bit fb in 8 bit mode */
					/* or cg12 in 1 bit mode */
#define FB_USERMASK	(0xffff)	/* flags that the user can set */

/*
 * Common frame buffer variables.
 * All framebuffer softc structures must start with such a structure.
 */
struct sunfb {
	struct	device sf_dev;		/* base device */
d71 5
a75 4
	int	sf_width;
	int	sf_height;
	int	sf_depth;
	int	sf_linebytes;
d77 2
a78 1
	int	sf_fbsize;		/* sf_height * sf_linebytes */
d80 4
a83 2
	int	sf_flags;
	volatile u_int32_t* sf_pfour;	/* P4 register when applicable */
d85 6
a90 1
	struct	rasops_info sf_ro;
d93 7
a99 11
/*
 * Selected framebuffer node on OBP systems if k/d console.
 */
extern int fbnode;

void	fb_setsize(struct sunfb*, int, int, int, int, int);
void	fbwscons_init(struct sunfb *, int);
void	fbwscons_console_init(struct sunfb *, struct wsscreen_descr *, int,
    void (*)(void *, u_int, u_int));
void	fbwscons_setcolormap(struct sunfb *,
    void (*)(void *, u_int, u_int8_t, u_int8_t, u_int8_t));
d103 2
a104 2
int	fb_pfour_get_video(struct sunfb *);
void	fb_pfour_set_video(struct sunfb *, int);
@


1.3.12.4
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d53 3
a55 1
#define FB_USERMASK	(0)		/* flags that the user can set */
@


1.3.12.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: fbvar.h,v 1.3.12.4 2003/05/16 00:29:40 niklas Exp $	*/
d25 5
a29 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.3.12.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a63 2

	int	*sf_crowp, *sf_ccolp;	/* PROM cursor position */
@


1.2
log
@netbsd port, now we merge our changes back in
@
text
@d1 2
a2 1
/*	$NetBSD: fbvar.h,v 1.7 1996/02/27 22:09:39 thorpej Exp $ */
d97 2
d100 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: fbvar.h,v 1.5 1995/10/08 01:40:25 pk Exp $ */
d79 7
d92 1
a92 1
void	fbattach __P((struct fbdevice *));
d96 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
