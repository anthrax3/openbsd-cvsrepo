head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.34
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.30
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.32
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.24
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.28
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.26
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.22
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.20
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.18
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.16
	OPENBSD_5_0:1.5.0.14
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.12
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.10
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.6
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.1.0.24
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.3
	UBC:1.1.0.22
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.20
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.18
	OPENBSD_2_8:1.1.0.16
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.12
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.10
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2008.06.26.05.42.13;	author ray;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.06.19.42.47;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.01.20.55.14;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.12.10.44.04;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	97.08.08.08.25.32;	author downsj;	state Exp;
branches
	1.1.12.1
	1.1.22.1;
next	;

1.1.12.1
date	2003.03.27.23.49.25;	author niklas;	state Exp;
branches;
next	1.1.12.2;

1.1.12.2
date	2003.06.07.11.14.43;	author ho;	state Exp;
branches;
next	;

1.1.22.1
date	2002.10.29.00.28.10;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@/*	$OpenBSD: tcxreg.h,v 1.4 2003/06/06 19:42:47 miod Exp $	*/
/*	$NetBSD: tcxreg.h,v 1.1 1996/06/19 13:17:35 pk Exp $ */

/*
 *  Copyright (c) 1996 The NetBSD Foundation, Inc.
 *  All rights reserved.
 *
 *  This code is derived from software contributed to The NetBSD Foundation
 *  by Paul Kranenburg.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *  1. Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 *  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 *  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 *  PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * A TCX is composed of numerous groups of control registers, all with TLAs:
 *	DHC - ???
 *	TEC - transform engine control?
 *	THC - TEC Hardware Configuration
 *	ROM - a 128Kbyte ROM with who knows what in it.
 *	STIP - ???
 *	RSTIP - Raw ???
 *	BLIT - ???
 *	RBLIT - Raw ???
 *	ALT - ???
 *	colormap - see below
 *	frame buffer memory (video RAM)
 *	possible other stuff
 *
 */
#define TCX_REG_DFB8	0
#define TCX_REG_DFB24	1
#define TCX_REG_STIP	2
#define TCX_REG_BLIT	3
#define TCX_REG_RDFB32	4
#define TCX_REG_RSTIP	5
#define TCX_REG_RBLIT	6
#define TCX_REG_TEC	7
#define TCX_REG_CMAP	8
#define TCX_REG_THC	9
#define TCX_REG_ROM	10
#define TCX_REG_DHC	11
#define TCX_REG_ALT	12

#define TCX_NREG	13


/*
 * The layout of the THC.
 */
struct tcx_thc {
	u_int32_t	thc_config;
	u_int32_t	thc_xxx1[31];
	u_int32_t	thc_sensebus;
	u_int32_t	thc_xxx2[3];
	u_int32_t	thc_delay;
	u_int32_t	thc_strapping;
	u_int32_t	thc_xxx3[1];
	u_int32_t	thc_linecount;
	u_int32_t	thc_xxx4[478];
	u_int32_t	thc_hcmisc;
	u_int32_t	thc_xxx5[56];
	u_int32_t	thc_cursoraddr;
	u_int32_t	thc_cursorAdata[32];
	u_int32_t	thc_cursorBdata[32];

};

/* cursor x/y position for 'off' */
#define	THC_CURSOFF		((65536-32) | ((65536-32) << 16))

/* bits in thc_config ??? */
#define THC_CFG_FBID		0xf0000000	/* id mask */
#define THC_CFG_FBID_SHIFT	28
#define THC_CFG_SENSE		0x07000000	/* sense mask */
#define THC_CFG_SENSE_SHIFT	24
#define THC_CFG_REV		0x00f00000	/* revision mask */
#define THC_CFG_REV_SHIFT	20
#define THC_CFG_RST		0x00008000	/* reset */

/* bits in thc_hcmisc */
#define	THC_MISC_OPENFLG	0x80000000	/* open flag (what's that?) */
#define	THC_MISC_SWERR_EN	0x20000000	/* enable SW error interrupt */
#define	THC_MISC_VSYNC_LEVEL	0x08000000	/* vsync level when disabled */
#define	THC_MISC_HSYNC_LEVEL	0x04000000	/* hsync level when disabled */
#define	THC_MISC_VSYNC_DISABLE	0x02000000	/* vsync disable */
#define	THC_MISC_HSYNC_DISABLE	0x01000000	/* hsync disable */
#define	THC_MISC_RESET		0x00001000	/* reset */
#define	THC_MISC_VIDEN		0x00000400	/* video enable */
#define	THC_MISC_SYNC		0x00000200	/* not sure what ... */
#define	THC_MISC_VSYNC		0x00000100	/* ... these really are */
#define	THC_MISC_SYNCEN		0x00000080	/* sync enable */
#define	THC_MISC_CURSRES	0x00000040	/* cursor resolution */
#define	THC_MISC_INTEN		0x00000020	/* v.retrace intr enable */
#define	THC_MISC_INTR		0x00000010	/* intr pending / ack */
#define	THC_MISC_DACWAIT	0x0000000f	/* cycles before transfer */

/*
 * Partial description of TEC.
 */
struct tcx_tec {
	u_int32_t	tec_config;	/* what's in it? */
	u_int32_t	tec_xxx0[35];
	u_int32_t	tec_delay;	/* */
#define TEC_DELAY_SYNC		0x00000f00
#define TEC_DELAY_WR_F		0x000000c0	/* wr falling */
#define TEC_DELAY_WR_R		0x00000030	/* wr rising */
#define TEC_DELAY_SOE_F		0x0000000c	/* soe falling */
#define TEC_DELAY_SOE_S		0x00000003	/* soe sclk */
	u_int32_t	tec_strapping;	/* */
#define TEC_STRAP_FIFO_LIMIT	0x00f00000
#define TEC_STRAP_CACHE_EN	0x00010000
#define TEC_STRAP_ZERO_OFFSET	0x00008000
#define TEC_STRAP_REFRSH_DIS	0x00004000
#define TEC_STRAP_REF_LOAD	0x00001000
#define TEC_STRAP_REFRSH_PERIOD	0x000003ff
	u_int32_t	tec_hcmisc;	/* */
	u_int32_t	tec_linecount;	/* */
	u_int32_t	tec_hss;	/* */
	u_int32_t	tec_hse;	/* */
	u_int32_t	tec_hds;	/* */
	u_int32_t	tec_hsedvs;	/* */
	u_int32_t	tec_hde;	/* */
	u_int32_t	tec_vss;	/* */
	u_int32_t	tec_vse;	/* */
	u_int32_t	tec_vds;	/* */
	u_int32_t	tec_vde;	/* */
};
@


1.4
log
@Do not bother taking care of the frame buffer flags in the softc, if the
driver does not use any. Basically this changes all drivers but those that
can handle a P4 card.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcxreg.h,v 1.3 2002/10/01 20:55:14 miod Exp $	*/
a18 7
 *  3. All advertising materials mentioning features or use of this software
 *     must display the following acknowledgement:
 *         This product includes software developed by the NetBSD
 *         Foundation, Inc. and its contributors.
 *  4. Neither the name of The NetBSD Foundation nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
@


1.3
log
@Do not enable the code that makes use of the vertical retrace interrupt
to update the colormap, as it causes _some_ machines to freeze solid;
could not be reproduced here, thanks to Thomas Koellmann (koellmann
at gmx dot net) for reporting this problem and testing this change.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcxreg.h,v 1.2 2002/08/12 10:44:04 miod Exp $	*/
a38 5

/*
 * User flags for tcx.
 */
#define	TCX_INTR		0x00000002	/* use retrace interrupt */
@


1.2
log
@Convert sparc console code from rcons and pseudo-devices to rasops and wscons.
For most framebuffers it is faster.

Other changes include:
o 24 bit support in tcx(4) for the S24 framebuffer
o accelerated cgsix(4) text console
o new cgtwelve(4) driver for the GS framebuffer
o improved serial driver code
o better keyboard support

The following framebuffers have not been tested but should work: cgfour,
cgeight and cgfourteen

These changes will require XF4 changes, to use Xwsfb instead of Xsun*, to be
commited later today.

Most of the work by me during the LSM and the week after, with code borrowed
from jason@@, NetBSD (new serial code), and feedback from mickey@@. Work on
pnozz(4) done by millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tcxreg.h,v 1.1 1997/08/08 08:25:32 downsj Exp $	*/
d39 5
@


1.1
log
@Mostly sync to NetBSD-current 970804.

GENERIC currently compiles and runs; some devices (isp) are not complete and
not yet enabled.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d3 2
a4 1
/* 
d7 1
a7 1
 * 
d10 1
a10 1
 * 
d26 1
a26 1
 * 
d38 1
a38 1
 */ 
d77 14
a90 14
	u_int	thc_config;
	u_int	thc_xxx1[31];
	u_int	thc_sensebus;
	u_int	thc_xxx2[3];
	u_int	thc_delay;
	u_int	thc_strapping;
	u_int	thc_xxx3[1];
	u_int	thc_linecount;
	u_int	thc_xxx4[478];
	u_int	thc_hcmisc;
	u_int	thc_xxx5[56];
	u_int	thc_cursoraddr;
	u_int	thc_cursorAdata[32];
	u_int	thc_cursorBdata[32];
d93 4
d113 1
a113 3
#define	THC_MISC_XXX1		0x00ffe000	/* unused */
#define	THC_MISC_RESET		0x00001000	/* ??? */
#define	THC_MISC_XXX2		0x00000800	/* unused */
d120 2
a121 2
#define	THC_MISC_INTR		0x00000010	/* intr pending / ack bit */
#define	THC_MISC_DACWAIT	0x0000000f	/* ??? */
d127 3
a129 3
	u_int	tec_config;	/* what's in it? */
	u_int	tec_xxx0[35];
	u_int	tec_delay;	/* */
d131 5
a135 5
#define TEC_DELAY_WR_F		0x000000c0
#define TEC_DELAY_WR_R		0x00000030
#define TEC_DELAY_SOE_F		0x0000000c
#define TEC_DELAY_SOE_S		0x00000003
	u_int	tec_strapping;	/* */
d142 11
a152 11
	u_int	tec_hcmisc;	/* */
	u_int	tec_linecount;	/* */
	u_int	tec_hss;	/* */
	u_int	tec_hse;	/* */
	u_int	tec_hds;	/* */
	u_int	tec_hsedvs;	/* */
	u_int	tec_hde;	/* */
	u_int	tec_vss;	/* */
	u_int	tec_vse;	/* */
	u_int	tec_vds;	/* */
	u_int	tec_vde;	/* */
a153 1

@


1.1.12.1
log
@Sync the SMP branch with 3.3
@
text
@d3 1
a3 2

/*
d6 1
a6 1
 *
d9 1
a9 1
 *
d25 1
a25 1
 *
d37 1
a37 6
 */

/*
 * User flags for tcx.
 */
#define	TCX_INTR		0x00000002	/* use retrace interrupt */
d76 14
a89 14
	u_int32_t	thc_config;
	u_int32_t	thc_xxx1[31];
	u_int32_t	thc_sensebus;
	u_int32_t	thc_xxx2[3];
	u_int32_t	thc_delay;
	u_int32_t	thc_strapping;
	u_int32_t	thc_xxx3[1];
	u_int32_t	thc_linecount;
	u_int32_t	thc_xxx4[478];
	u_int32_t	thc_hcmisc;
	u_int32_t	thc_xxx5[56];
	u_int32_t	thc_cursoraddr;
	u_int32_t	thc_cursorAdata[32];
	u_int32_t	thc_cursorBdata[32];
a91 4

/* cursor x/y position for 'off' */
#define	THC_CURSOFF		((65536-32) | ((65536-32) << 16))

d108 3
a110 1
#define	THC_MISC_RESET		0x00001000	/* reset */
d117 2
a118 2
#define	THC_MISC_INTR		0x00000010	/* intr pending / ack */
#define	THC_MISC_DACWAIT	0x0000000f	/* cycles before transfer */
d124 3
a126 3
	u_int32_t	tec_config;	/* what's in it? */
	u_int32_t	tec_xxx0[35];
	u_int32_t	tec_delay;	/* */
d128 5
a132 5
#define TEC_DELAY_WR_F		0x000000c0	/* wr falling */
#define TEC_DELAY_WR_R		0x00000030	/* wr rising */
#define TEC_DELAY_SOE_F		0x0000000c	/* soe falling */
#define TEC_DELAY_SOE_S		0x00000003	/* soe sclk */
	u_int32_t	tec_strapping;	/* */
d139 11
a149 11
	u_int32_t	tec_hcmisc;	/* */
	u_int32_t	tec_linecount;	/* */
	u_int32_t	tec_hss;	/* */
	u_int32_t	tec_hse;	/* */
	u_int32_t	tec_hds;	/* */
	u_int32_t	tec_hsedvs;	/* */
	u_int32_t	tec_hde;	/* */
	u_int32_t	tec_vss;	/* */
	u_int32_t	tec_vse;	/* */
	u_int32_t	tec_vds;	/* */
	u_int32_t	tec_vde;	/* */
d151 1
@


1.1.12.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: tcxreg.h,v 1.1.12.1 2003/03/27 23:49:25 niklas Exp $	*/
d39 5
@


1.1.22.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: tcxreg.h,v 1.1 1997/08/08 08:25:32 downsj Exp $	*/
d3 1
a3 2

/*
d6 1
a6 1
 *
d9 1
a9 1
 *
d25 1
a25 1
 *
d37 1
a37 6
 */

/*
 * User flags for tcx.
 */
#define	TCX_INTR		0x00000002	/* use retrace interrupt */
d76 14
a89 14
	u_int32_t	thc_config;
	u_int32_t	thc_xxx1[31];
	u_int32_t	thc_sensebus;
	u_int32_t	thc_xxx2[3];
	u_int32_t	thc_delay;
	u_int32_t	thc_strapping;
	u_int32_t	thc_xxx3[1];
	u_int32_t	thc_linecount;
	u_int32_t	thc_xxx4[478];
	u_int32_t	thc_hcmisc;
	u_int32_t	thc_xxx5[56];
	u_int32_t	thc_cursoraddr;
	u_int32_t	thc_cursorAdata[32];
	u_int32_t	thc_cursorBdata[32];
a91 4

/* cursor x/y position for 'off' */
#define	THC_CURSOFF		((65536-32) | ((65536-32) << 16))

d108 3
a110 1
#define	THC_MISC_RESET		0x00001000	/* reset */
d117 2
a118 2
#define	THC_MISC_INTR		0x00000010	/* intr pending / ack */
#define	THC_MISC_DACWAIT	0x0000000f	/* cycles before transfer */
d124 3
a126 3
	u_int32_t	tec_config;	/* what's in it? */
	u_int32_t	tec_xxx0[35];
	u_int32_t	tec_delay;	/* */
d128 5
a132 5
#define TEC_DELAY_WR_F		0x000000c0	/* wr falling */
#define TEC_DELAY_WR_R		0x00000030	/* wr rising */
#define TEC_DELAY_SOE_F		0x0000000c	/* soe falling */
#define TEC_DELAY_SOE_S		0x00000003	/* soe sclk */
	u_int32_t	tec_strapping;	/* */
d139 11
a149 11
	u_int32_t	tec_hcmisc;	/* */
	u_int32_t	tec_linecount;	/* */
	u_int32_t	tec_hss;	/* */
	u_int32_t	tec_hse;	/* */
	u_int32_t	tec_hds;	/* */
	u_int32_t	tec_hsedvs;	/* */
	u_int32_t	tec_hde;	/* */
	u_int32_t	tec_vss;	/* */
	u_int32_t	tec_vse;	/* */
	u_int32_t	tec_vds;	/* */
	u_int32_t	tec_vde;	/* */
d151 1
@


