head	1.8;
access;
symbols
	OPENBSD_4_5:1.7.0.12
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.10
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.8
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.3.0.22
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2009.04.15.06.54.44;	author oga;	state dead;
branches;
next	1.7;

1.7
date	2006.06.02.20.00.54;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.29.07.35.11;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.30.01.12.29;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.43;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.08.08.08.25.08;	author downsj;	state Exp;
branches
	1.3.12.1
	1.3.22.1;
next	1.2;

1.2
date	96.06.21.21.37.37;	author chuck;	state Exp;
branches;
next	1.1;

1.1
date	96.06.21.15.38.40;	author chuck;	state Exp;
branches;
next	;

1.3.12.1
date	2002.03.28.10.57.10;	author niklas;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2003.03.27.23.49.25;	author niklas;	state Exp;
branches;
next	;

1.3.22.1
date	2002.06.11.03.38.16;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Remove en(4) (no manpage present, no none removed), and the midway.c glue code
for it.

It is very unlikely this still compiles, the hardware is dead. It isn't in any
arch's config file. the sparc sbus code is even commented out in files.sparc.

Not to mention that the code is fucking appauling, doesn't even know that sparc
got bus.h ages ago, still uses vtophys(), defines all types of functions to
arch-specific hacks.

I will miss the bitchy comments, though...

As a note to other drivers: this is the fate that awaits you if you screw up my
ctags on commonly used functions.

"you have my ok" claudio@@, "zap zap zap" deraadt@@

If i've missed any bits, please remove them.
@
text
@/*	$OpenBSD: if_en_sbus.c,v 1.7 2006/06/02 20:00:54 miod Exp $	*/
/*	$NetBSD: if_en_sbus.c,v 1.4 1997/05/24 20:16:22 pk Exp $	*/

/*
 *
 * Copyright (c) 1996 Charles D. Cranor and Washington University.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Charles D. Cranor and
 *	Washington University.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *
 * i f _ e n _ s b u s . c  
 *
 * author: Chuck Cranor <chuck@@ccrc.wustl.edu>
 * started: spring, 1996.
 *
 * SBUS glue for the eni155s card.
 */

#include <sys/param.h>
#include <sys/types.h>
#include <sys/device.h>
#include <sys/mbuf.h>
#include <sys/socket.h>
#include <sys/socketvar.h>

#include <net/if.h>

#include <machine/autoconf.h>
#include <machine/cpu.h>

#include <sparc/dev/sbusvar.h>

#include <dev/ic/midwayreg.h>
#include <dev/ic/midwayvar.h>


/*
 * local structures
 */

struct en_sbus_softc {
  /* bus independent stuff */
  struct en_softc esc;		/* includes "device" structure */

  /* sbus glue */
  struct intrhand sc_ih;	/* interrupt vectoring */
};

/*
 * local defines (SBUS specific stuff)
 */

#define EN_IPL 5

/*
 * prototypes
 */

static	int en_sbus_match(struct device *, void *, void *);
static	void en_sbus_attach(struct device *, struct device *, void *);

/*
 * SBUS autoconfig attachments
 */

struct cfattach en_sbus_ca = {
    sizeof(struct en_sbus_softc), en_sbus_match, en_sbus_attach,
};

/***********************************************************************/

/*
 * autoconfig stuff
 */

static int en_sbus_match(parent, match, aux)

struct device *parent;
void *match;
void *aux;

{
  struct cfdata *cf = match;
  struct confargs *ca = aux;
  register struct romaux *ra = &ca->ca_ra;

  if (strcmp("ENI-155s", ra->ra_name))
    return 0;
  if (ca->ca_bustype == BUS_SBUS)
    return (1);
  
  return 0;
}


static void en_sbus_attach(parent, self, aux)

struct device *parent, *self;
void *aux;

{
  struct en_softc *sc = (void *)self;
  struct en_sbus_softc *scs = (void *)self;
  struct confargs *ca = aux;
  int lcv, iplcode;

  printf("\n");

  if (CPU_ISSUN4M) {
    printf("%s: sun4m DMA not supported yet\n", sc->sc_dev.dv_xname);
    return;
  }

  sc->en_base = (caddr_t) mapiodev(ca->ca_ra.ra_reg, 0, 4*1024*1024);

  if (ca->ca_ra.ra_nintr == 1) {
    sc->ipl = ca->ca_ra.ra_intr[0].int_pri;
  } else {
    printf("%s: claims to be at the following IPLs: ", sc->sc_dev.dv_xname);
    iplcode = 0;
    for (lcv = 0 ; lcv < ca->ca_ra.ra_nintr ; lcv++) {
      printf("%d ", ca->ca_ra.ra_intr[lcv].int_pri);
      if (EN_IPL == ca->ca_ra.ra_intr[lcv].int_pri)
        iplcode = lcv;
    }
    if (!iplcode) {
      printf("%s: can't find the IPL we want (%d)\n", sc->sc_dev.dv_xname,
		EN_IPL);
      return;
    }
    printf("\n%s: we choose IPL %d\n", sc->sc_dev.dv_xname, EN_IPL);
    sc->ipl = iplcode;
  }
  scs->sc_ih.ih_fun = en_intr;
  scs->sc_ih.ih_arg = sc;
  intr_establish(EN_IPL, &scs->sc_ih, IPL_NET, self->dv_xname);

  /*
   * done SBUS specific stuff
   */

  en_attach(sc);

}
@


1.7
log
@sbus_establish() and the associated linked list in the sbus softc is now only
used to store a per-device reset callback, for use in sbusreset(). Except
sbusreset() has never, ever, been used since Torek's sbus code went in.
Time to recycle those wasted bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_sbus.c,v 1.6 2004/09/29 07:35:11 miod Exp $	*/
@


1.6
log
@Switch sparc to evcount; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_sbus.c,v 1.5 2002/04/30 01:12:29 art Exp $	*/
a72 1
  struct sbusdev sc_sd;		/* sbus device */
@


1.5
log
@Fix an ancient problem in how sparc interrupts are handled.

There are many interrupt handlers that assume that they don't need to do
any spl protection in their code because the interrupt of some level can't
be interrupted by an interrupt of the same level. The problem is that some
interrupt handlers have hardware levels that are lower then their "software"
levels.

Fix this by adding an additional field to struct intrhand that specifies which
"software" level an interrupt handler has and blocks that level while handling
the interrupt. This new field is initialized in intr_establish which gets
an additional argument (which can be -1 meaning that the interrupt handler
doesn't need to block any additional level).

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_sbus.c,v 1.4 2002/03/14 01:26:43 millert Exp $	*/
d164 1
a164 1
  intr_establish(EN_IPL, &scs->sc_ih, IPL_NET);
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_sbus.c,v 1.3 1997/08/08 08:25:08 downsj Exp $	*/
d164 1
a164 1
  intr_establish(EN_IPL, &scs->sc_ih);
@


1.3
log
@Mostly sync to NetBSD-current 970804.

GENERIC currently compiles and runs; some devices (isp) are not complete and
not yet enabled.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d87 2
a88 2
static	int en_sbus_match __P((struct device *, void *, void *));
static	void en_sbus_attach __P((struct device *, struct device *, void *));
@


1.3.22.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_en_sbus.c,v 1.3 1997/08/08 08:25:08 downsj Exp $	*/
d87 2
a88 2
static	int en_sbus_match(struct device *, void *, void *);
static	void en_sbus_attach(struct device *, struct device *, void *);
d164 1
a164 1
  intr_establish(EN_IPL, &scs->sc_ih, IPL_NET);
@


1.3.12.1
log
@Merge in -current from about a week ago
@
text
@d87 2
a88 2
static	int en_sbus_match(struct device *, void *, void *);
static	void en_sbus_attach(struct device *, struct device *, void *);
@


1.3.12.2
log
@Sync the SMP branch with 3.3
@
text
@d164 1
a164 1
  intr_establish(EN_IPL, &scs->sc_ih, IPL_NET);
@


1.2
log
@use correct copyright
@
text
@d1 2
a2 1
/*	$OpenBSD: if_en_sbus.c,v 1.1 1996/06/21 15:38:40 chuck Exp $	*/
d142 1
a142 2
  sc->en_base = (caddr_t) mapiodev(ca->ca_ra.ra_reg, 0, 4*1024*1024,
        ca->ca_bustype);
@


1.1
log
@sbus glue for "en" ATM device (only works on sun4c due to lack of support
for IOMMU)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d5 1
a5 1
 * Copyright (c) 1996 Charles D. Cranor
d18 2
a19 1
 *      This product includes software developed by Charles D. Cranor.
@
