head	1.11;
access;
symbols
	OPENBSD_6_0:1.10.0.42
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.38
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.40
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.32
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.36
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.34
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.30
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.28
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.26
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.24
	OPENBSD_5_0:1.10.0.22
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.20
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.18
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.14
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.16
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.12
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.10
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.8
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.9.0.6
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.4
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.7
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.10
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.4
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.11
date	2016.09.01.09.23.41;	author tedu;	state dead;
branches;
next	1.10;
commitid	Q2PxaFNhqAe0Wmla;

1.10
date	2006.06.02.20.00.54;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2004.09.29.07.35.11;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.18.40.59;	author jason;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.11.03.11.22;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.03.15.59;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.11.16.28.43;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.11.00.11.41;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.05.17.32.20;	author jason;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	99.06.07.20.58.22;	author jason;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	99.06.06.04.48.24;	author jason;	state Exp;
branches;
next	;

1.2.4.1
date	2001.10.31.03.07.56;	author nate;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2002.03.06.02.04.46;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2002.03.28.10.57.10;	author niklas;	state Exp;
branches;
next	1.2.4.4;

1.2.4.4
date	2003.03.27.23.49.25;	author niklas;	state Exp;
branches;
next	1.2.4.5;

1.2.4.5
date	2003.06.07.11.14.42;	author ho;	state Exp;
branches;
next	;

1.3.4.1
date	2002.01.31.22.55.21;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.06.11.03.38.16;	author art;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2002.10.29.00.28.09;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Celebrate OpenBSD 6.0 release by retiring the sparc port.
You've served us well, good friend, but now it's time to rest.
ok deraadt
@
text
@/*	$OpenBSD: cs4231var.h,v 1.10 2006/06/02 20:00:54 miod Exp $	*/

/*
 * Copyright (c) 1999 Jason L. Wright (jason@@thought.net)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Driver for CS4231 based audio found in some sun4m systems
 */

/*
 * List of device memory allocations (see cs4231_malloc/cs4231_free).
 */
struct cs_dma {
	struct cs_dma *next;
	caddr_t addr;		/* cpu address */
	caddr_t addr_dva;	/* hardware address */
	size_t size;
};

struct cs_volume {
	u_int8_t	left;
	u_int8_t	right;
};

struct cs_channel {
	void		(*cs_intr)(void *);	/* interrupt handler */
	void		*cs_arg;		/* interrupt arg */
	struct cs_dma	*cs_curdma;		/* current dma block */
	u_int32_t	cs_cnt;			/* current block count */
	u_int32_t	cs_blksz;		/* current block size */
	u_int32_t	cs_segsz;		/* current segment size */
	int		cs_locked;		/* channel locked? */
};

struct cs4231_softc {
	struct	device sc_dev;		/* base device */
	struct	intrhand sc_ih;		/* hardware interrupt vectoring */
	struct	cs4231_regs *sc_regs;	/* CS4231/APC registers */
	int	sc_node;		/* which sbus node */
	int	sc_burst;		/* XXX: DMA burst size in effect */
	int	sc_open;		/* already open? */

	struct cs_channel sc_playback, sc_capture;

	char		sc_mute[9];	/* which devs are muted */
	u_int8_t	sc_out_port;	/* output port */
	u_int8_t	sc_in_port;	/* input port */
	struct	cs_volume sc_volume[9];	/* software volume */
	struct	cs_volume sc_adc;	/* adc volume */

	int sc_format_bits;
	int sc_speed_bits;
	int sc_precision;
	int sc_need_commit;
	int sc_channels;
	struct cs_dma	*sc_dmas;	/* dma list */
	struct cs_dma	*sc_nowplaying;
};
@


1.10
log
@sbus_establish() and the associated linked list in the sbus softc is now only
used to store a per-device reset callback, for use in sbusreset(). Except
sbusreset() has never, ever, been used since Torek's sbus code went in.
Time to recycle those wasted bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.9 2004/09/29 07:35:11 miod Exp $	*/
@


1.9
log
@Switch sparc to evcount; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.8 2003/06/02 18:40:59 jason Exp $	*/
a59 1
	struct	sbusdev sc_sd;		/* sbus device */
@


1.8
log
@nuke my clause 3 & 4 (and a couple jointly (c) with Theo).
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.7 2002/09/11 03:11:22 jason Exp $	*/
a62 1
	struct	evcnt sc_intrcnt;	/* statistics */
@


1.7
log
@update from sparc64 version:
-fix several stupid bugs
-get encoding setup correct
-add support for capture
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.6 2002/03/14 03:15:59 millert Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Jason L. Wright
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.6
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.5 2002/01/11 16:28:43 jason Exp $	*/
d53 10
a71 1
	int	sc_locked;		/* locked? */
d73 1
a73 4
	void	(*sc_rintr)(void *);	/* input completion intr handler */
	void *	sc_rarg;		/* arg for sc_rintr() */
	void	(*sc_pintr)(void *);	/* output completion intr handler */
	void *	sc_parg;		/* arg for sc_pintr() */
d77 1
d79 1
a85 3
	u_int32_t	sc_blksz;
	u_int32_t	sc_playcnt;
	u_int32_t	sc_playsegsz;
@


1.5
log
@Remove last nights interrupt handling hack and do it right:
* check the qualify the intr pending bits with the enable bits
* enable/disable the cs4231 IEN bit in the pin control register
* move the cs4231 (not dma) interrupt handling to the general interrupt processing
[This properly allows for sharing with, eg. magma]
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.4 2002/01/11 00:11:41 jason Exp $	*/
d64 1
a64 1
	void	(*sc_rintr)(void*);	/* input completion intr handler */
d66 1
a66 1
	void	(*sc_pintr)(void*);	/* output completion intr handler */
@


1.4
log
@Only check for playback interrupts if we're actually expecting them.
(This fixes the crash in pr2212, but the magma still doesn't want to
talk to the world... looks like oscillator problems).
[Many thanks to John Baker <jdbaker@@blkbox.com> for donating a MAGMA board
for testing]
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.3 2001/10/05 17:32:20 jason Exp $	*/
d56 1
a56 1
	struct	intrhand sc_hwih;	/* hardware interrupt vectoring */
a80 1
	int		sc_playing;	/* currently playing */
@


1.3
log
@unnecessary softc element
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.2 1999/06/07 20:58:22 jason Exp $	*/
d81 1
@


1.3.4.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.5 2002/01/11 16:28:43 jason Exp $	*/
d56 1
a56 1
	struct	intrhand sc_ih;		/* hardware interrupt vectoring */
@


1.3.4.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.3.4.1 2002/01/31 22:55:21 niklas Exp $	*/
d64 1
a64 1
	void	(*sc_rintr)(void *);	/* input completion intr handler */
d66 1
a66 1
	void	(*sc_pintr)(void *);	/* output completion intr handler */
@


1.3.4.3
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.3.4.2 2002/06/11 03:38:16 art Exp $	*/
a52 10
struct cs_channel {
	void		(*cs_intr)(void *);	/* interrupt handler */
	void		*cs_arg;		/* interrupt arg */
	struct cs_dma	*cs_curdma;		/* current dma block */
	u_int32_t	cs_cnt;			/* current block count */
	u_int32_t	cs_blksz;		/* current block size */
	u_int32_t	cs_segsz;		/* current segment size */
	int		cs_locked;		/* channel locked? */
};

d62 1
d64 4
a67 1
	struct cs_channel sc_playback, sc_capture;
a70 1
	u_int8_t	sc_in_port;	/* input port */
a71 1
	struct	cs_volume sc_adc;	/* adc volume */
d78 3
@


1.2
log
@Better support for changing volume levels, muting, and switching output
ports on the fly.
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.1 1999/06/06 04:48:24 jason Exp $	*/
a56 1
	struct	intrhand sc_swih;	/* software interrupt vectoring */
@


1.2.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.2 1999/06/07 20:58:22 jason Exp $	*/
d57 1
@


1.2.4.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d56 1
a56 1
	struct	intrhand sc_ih;		/* hardware interrupt vectoring */
@


1.2.4.3
log
@Merge in -current from about a week ago
@
text
@d64 1
a64 1
	void	(*sc_rintr)(void *);	/* input completion intr handler */
d66 1
a66 1
	void	(*sc_pintr)(void *);	/* output completion intr handler */
@


1.2.4.4
log
@Sync the SMP branch with 3.3
@
text
@a52 10
struct cs_channel {
	void		(*cs_intr)(void *);	/* interrupt handler */
	void		*cs_arg;		/* interrupt arg */
	struct cs_dma	*cs_curdma;		/* current dma block */
	u_int32_t	cs_cnt;			/* current block count */
	u_int32_t	cs_blksz;		/* current block size */
	u_int32_t	cs_segsz;		/* current segment size */
	int		cs_locked;		/* channel locked? */
};

d62 1
d64 4
a67 1
	struct cs_channel sc_playback, sc_capture;
a70 1
	u_int8_t	sc_in_port;	/* input port */
a71 1
	struct	cs_volume sc_adc;	/* adc volume */
d78 3
@


1.2.4.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cs4231var.h,v 1.2.4.4 2003/03/27 23:49:25 niklas Exp $	*/
d15 5
@


1.1
log
@First cut at SUNW,CS4231 audio driver (ss4/ss5).  This driver is output-only
at the moment.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d70 1
a70 1
	char	mute[9];		/* which devs are muted */
@

