head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.54
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.50
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.52
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.44
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.48
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.46
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.42
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.40
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.38
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.36
	OPENBSD_5_0:1.12.0.34
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.32
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.30
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.26
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.28
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.24
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.22
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.20
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.18
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.16
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.12
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.10
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.9.0.8
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.11
	UBC:1.9.0.6
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.4
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_8:1.8.0.10
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.8
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.6
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.4
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7;
locks; strict;
comment	@ * @;


1.12
date	2003.06.02.18.40.59;	author jason;	state Exp;
branches;
next	1.11;

1.11
date	2002.08.08.03.32.00;	author jason;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.03.20.01.36;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.30.07.17.07;	author jason;	state Exp;
branches
	1.9.6.1;
next	1.8;

1.8
date	99.01.07.03.14.42;	author jason;	state Exp;
branches
	1.8.6.1;
next	1.7;

1.7
date	98.09.15.22.36.21;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	98.09.04.05.59.19;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	98.09.01.20.04.16;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	98.08.28.19.06.48;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	98.08.26.05.00.53;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	98.07.05.09.25.55;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.07.04.07.57.52;	author deraadt;	state Exp;
branches;
next	;

1.8.6.1
date	2001.05.14.21.37.03;	author niklas;	state Exp;
branches;
next	1.8.6.2;

1.8.6.2
date	2003.03.27.23.49.25;	author niklas;	state Exp;
branches;
next	1.8.6.3;

1.8.6.3
date	2003.06.07.11.14.42;	author ho;	state Exp;
branches;
next	;

1.9.6.1
date	2002.06.11.03.38.15;	author art;	state Exp;
branches;
next	1.9.6.2;

1.9.6.2
date	2002.10.29.00.28.09;	author art;	state Exp;
branches;
next	;


desc
@@


1.12
log
@nuke my clause 3 & 4 (and a couple jointly (c) with Theo).
@
text
@/*	$OpenBSD: bereg.h,v 1.11 2002/08/08 03:32:00 jason Exp $	*/

/*
 * Copyright (c) 1998 Theo de Raadt and Jason L. Wright.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * BE Global registers
 */
struct be_bregs {
	volatile u_int32_t xif_cfg;		/* XIF config */
	volatile u_int32_t _unused[63];		/* reserved */
	volatile u_int32_t stat;		/* status, clear on read */
	volatile u_int32_t imask;		/* interrupt mask */
	volatile u_int32_t _unused2[64];	/* reserved */
	volatile u_int32_t tx_swreset;		/* tx software reset */
	volatile u_int32_t tx_cfg;		/* tx config */
	volatile u_int32_t ipkt_gap1;		/* inter-packet gap 1 */
	volatile u_int32_t ipkt_gap2;		/* inter-packet gap 2 */
	volatile u_int32_t attempt_limit;	/* tx attempt limit */
	volatile u_int32_t stime;		/* tx slot time */
	volatile u_int32_t preamble_len;	/* size of tx preamble */
	volatile u_int32_t preamble_pattern;	/* pattern for tx preamble */
	volatile u_int32_t tx_sframe_delim;	/* tx delimiter */
	volatile u_int32_t jsize;		/* jam length */
	volatile u_int32_t tx_pkt_max;		/* tx max pkt size */
	volatile u_int32_t tx_pkt_min;		/* tx min pkt size */
	volatile u_int32_t peak_attempt;	/* count of tx peak attempts */
	volatile u_int32_t dt_ctr;		/* tx defer timer */
	volatile u_int32_t nc_ctr;		/* tx normal collision cntr */
	volatile u_int32_t fc_ctr;		/* tx first-collision cntr */
	volatile u_int32_t ex_ctr;		/* tx excess-collision cntr */
	volatile u_int32_t lt_ctr;		/* tx late-collision cntr */
	volatile u_int32_t rand_seed;		/* tx random number seed */
	volatile u_int32_t tx_smachine;		/* tx state machine */
	volatile u_int32_t _unused3[44];	/* reserved */
	volatile u_int32_t rx_swreset;		/* rx software reset */
	volatile u_int32_t rx_cfg;		/* rx config register */
	volatile u_int32_t rx_pkt_max;		/* rx max pkt size */
	volatile u_int32_t rx_pkt_min;		/* rx min pkt size */
	volatile u_int32_t mac_addr2;		/* ethernet address 2 (MSB) */
	volatile u_int32_t mac_addr1;		/* ethernet address 1 */
	volatile u_int32_t mac_addr0;		/* ethernet address 0 (LSB) */
	volatile u_int32_t fr_ctr;		/* rx frame receive cntr */
	volatile u_int32_t gle_ctr;		/* rx giant-len error cntr */
	volatile u_int32_t unale_ctr;		/* rx unaligned error cntr */
	volatile u_int32_t rcrce_ctr;		/* rx CRC error cntr */
	volatile u_int32_t rx_smachine;		/* rx state machine */
	volatile u_int32_t rx_cvalid;		/* rx code violation */
	volatile u_int32_t _unused4;		/* reserved */
	volatile u_int32_t htable3;		/* hash table 3 */
	volatile u_int32_t htable2;		/* hash table 2 */
	volatile u_int32_t htable1;		/* hash table 1 */
	volatile u_int32_t htable0;		/* hash table 0 */
	volatile u_int32_t afilter2;		/* address filter 2 */
	volatile u_int32_t afilter1;		/* address filter 1 */
	volatile u_int32_t afilter0;		/* address filter 0 */
	volatile u_int32_t afilter_mask;	/* address filter mask */
};

/* be_bregs.xif_cfg: XIF config. */
#define BE_BR_XCFG_ODENABLE	0x00000001	/* output driver enable */
#define BE_BR_XCFG_RESV		0x00000002	/* reserved, write as 1 */
#define BE_BR_XCFG_MLBACK	0x00000004	/* loopback-mode mii enable */
#define BE_BR_XCFG_SMODE	0x00000008	/* enable serial mode */

/* be_bregs.stat: status, clear on read. */
#define BE_BR_STAT_GOTFRAME	0x00000001	/* received a frame */
#define BE_BR_STAT_RCNTEXP	0x00000002	/* rx frame cntr expired */
#define BE_BR_STAT_ACNTEXP	0x00000004	/* align-error cntr expired */
#define BE_BR_STAT_CCNTEXP	0x00000008	/* crc-error cntr expired */
#define BE_BR_STAT_LCNTEXP	0x00000010	/* length-error cntr expired */
#define BE_BR_STAT_RFIFOVF	0x00000020	/* rx fifo overflow */
#define BE_BR_STAT_CVCNTEXP	0x00000040	/* code-violation cntr exprd */
#define BE_BR_STAT_SENTFRAME	0x00000100	/* transmitted a frame */
#define BE_BR_STAT_TFIFO_UND	0x00000200	/* tx fifo underrun */
#define BE_BR_STAT_MAXPKTERR	0x00000400	/* max-packet size error */
#define BE_BR_STAT_NCNTEXP	0x00000800	/* normal-collision cntr exp */
#define BE_BR_STAT_ECNTEXP	0x00001000	/* excess-collision cntr exp */
#define BE_BR_STAT_LCCNTEXP	0x00002000	/* late-collision cntr exp */
#define BE_BR_STAT_FCNTEXP	0x00004000	/* first-collision cntr exp */
#define BE_BR_STAT_DTIMEXP	0x00008000	/* defer-timer expired */

#define BE_BR_STAT_BITS		"\20\1RX\2RCNT\3ACNT\4CCNT\5LCNT\6RFIFO\7CVCNT\11TX\12TFIFO\13TMAXPKT\14NCNT\15ECNT\16LCCNT\17ECNT\20DTIME"

/* be_bregs.imask: interrupt mask. */
#define BE_BR_IMASK_GOTFRAME	0x00000001	/* received a frame */
#define BE_BR_IMASK_RCNTEXP	0x00000002	/* rx frame cntr expired */
#define BE_BR_IMASK_ACNTEXP	0x00000004	/* align-error cntr expired */
#define BE_BR_IMASK_CCNTEXP	0x00000008	/* crc-error cntr expired */
#define BE_BR_IMASK_LCNTEXP	0x00000010	/* length-error cntr expired */
#define BE_BR_IMASK_RFIFOVF	0x00000020	/* rx fifo overflow */
#define BE_BR_IMASK_CVCNTEXP	0x00000040	/* code-violation cntr exprd */
#define BE_BR_IMASK_SENTFRAME	0x00000100	/* transmitted a frame */
#define BE_BR_IMASK_TFIFO_UND	0x00000200	/* tx fifo underrun */
#define BE_BR_IMASK_MAXPKTERR	0x00000400	/* max-packet size error */
#define BE_BR_IMASK_NCNTEXP	0x00000800	/* normal-collision cntr exp */
#define BE_BR_IMASK_ECNTEXP	0x00001000	/* excess-collision cntr exp */
#define BE_BR_IMASK_LCCNTEXP	0x00002000	/* late-collision cntr exp */
#define BE_BR_IMASK_FCNTEXP	0x00004000	/* first-collision cntr exp */
#define BE_BR_IMASK_DTIMEXP	0x00008000	/* defer-timer expired */

/* be_bregs.tx_cfg: tx config. */
#define BE_BR_TXCFG_ENABLE	0x00000001	/* enable the transmitter */
#define BE_BR_TXCFG_FIFO	0x00000010	/* default tx fthresh */
#define BE_BR_TXCFG_SMODE	0x00000020	/* enable slow transmit mode */
#define BE_BR_TXCFG_CIGN	0x00000040	/* ignore tx collisions */
#define BE_BR_TXCFG_FCSOFF	0x00000080	/* do not emit fcs */
#define BE_BR_TXCFG_DBACKOFF	0x00000100	/* disable backoff */
#define BE_BR_TXCFG_FULLDPLX	0x00000200	/* enable full-duplex */

/* be_bregs.rx_cfg: rx config. */
#define BE_BR_RXCFG_ENABLE	0x00000001	/* enable the receiver */
#define BE_BR_RXCFG_FIFO	0x0000000e	/* default rx fthresh */
#define BE_BR_RXCFG_PSTRIP	0x00000020	/* pad byte strip enable */
#define BE_BR_RXCFG_PMISC	0x00000040	/* enable promiscous mode */
#define BE_BR_RXCFG_DERR	0x00000080	/* disable error checking */
#define BE_BR_RXCFG_DCRCS	0x00000100	/* disable crc stripping */
#define BE_BR_RXCFG_ME		0x00000200	/* receive packets for me */
#define BE_BR_RXCFG_PGRP	0x00000400	/* enable promisc group mode */
#define BE_BR_RXCFG_HENABLE	0x00000800	/* enable hash filter */
#define BE_BR_RXCFG_AENABLE	0x00001000	/* enable address filter */

/*
 * BE Channel registers
 */
struct be_cregs {
	volatile u_int32_t ctrl;		/* control */
	volatile u_int32_t stat;		/* status */
	volatile u_int32_t rxds;		/* rx descriptor ring ptr */
	volatile u_int32_t txds;		/* tx descriptor ring ptr */
	volatile u_int32_t rimask;		/* rx interrupt mask */
	volatile u_int32_t timask;		/* tx interrupt mask */
	volatile u_int32_t qmask;		/* qec error interrupt mask */
	volatile u_int32_t bmask;		/* be error interrupt mask */
	volatile u_int32_t rxwbufptr;		/* local memory rx write ptr */
	volatile u_int32_t rxrbufptr;		/* local memory rx read ptr */
	volatile u_int32_t txwbufptr;		/* local memory tx write ptr */
	volatile u_int32_t txrbufptr;		/* local memory tx read ptr */
	volatile u_int32_t ccnt;		/* collision counter */
};

/* be_cregs.ctrl: control. */
#define	BE_CR_CTRL_TWAKEUP	0x00000001	/* tx dma wakeup */

/* be_cregs.stat: status. */
#define BE_CR_STAT_BERROR	0x80000000	/* be error */
#define BE_CR_STAT_TXIRQ	0x00200000	/* tx interrupt */
#define BE_CR_STAT_TXDERR	0x00080000	/* tx descriptor is bad */
#define BE_CR_STAT_TXLERR	0x00040000	/* tx late error */
#define BE_CR_STAT_TXPERR	0x00020000	/* tx parity error */
#define BE_CR_STAT_TXSERR	0x00010000	/* tx sbus error ack */
#define BE_CR_STAT_RXIRQ	0x00000020	/* rx interrupt */
#define BE_CR_STAT_RXDROP	0x00000010	/* rx packet dropped */
#define BE_CR_STAT_RXSMALL	0x00000008	/* rx buffer too small */
#define BE_CR_STAT_RXLERR	0x00000004	/* rx late error */
#define BE_CR_STAT_RXPERR	0x00000002	/* rx parity error */
#define BE_CR_STAT_RXSERR	0x00000001	/* rx sbus error ack */

/*
 * All bits except rxirq/txirq
 */
#define	BE_CR_STAT_ERRORS	\
			(BE_CR_STAT_BERROR |				\
			 BE_CR_STAT_TXDERR | BE_CR_STAT_TXLERR |	\
			 BE_CR_STAT_TXPERR | BE_CR_STAT_TXSERR |	\
			 BE_CR_STAT_RXDROP | BE_CR_STAT_RXSMALL |	\
			 BE_CR_STAT_RXLERR | BE_CR_STAT_RXPERR |	\
			 BE_CR_STAT_RXSERR)

#define	BE_CR_STAT_BITS		\
    "\20\1RXS\2RXP\3RXL\4RXSMALL\5RXDROP\6RX\21TXS\22TXP\23TXL\24TXD\26TX\40BE"

/* be_cregs.qmask: qec error interrupt mask. */
#define BE_CR_QMASK_TXDERR	0x00080000	/* tx descriptor is bad */
#define BE_CR_QMASK_TXLERR	0x00040000	/* tx late error */
#define BE_CR_QMASK_TXPERR	0x00020000	/* tx parity error */
#define BE_CR_QMASK_TXSERR	0x00010000	/* tx sbus error ack */
#define BE_CR_QMASK_RXDROP	0x00000010	/* rx packet dropped */
#define BE_CR_QMASK_RXSMALL	0x00000008	/* rx buffer too small */
#define BE_CR_QMASK_RXLERR	0x00000004	/* rx late error */
#define BE_CR_QMASK_RXPERR	0x00000002	/* rx parity error */
#define BE_CR_QMASK_RXSERR	0x00000001	/* rx sbus error ack */

/*
 * BE Transceiver registers
 */
struct be_tregs {
	volatile u_int32_t	tcvr_pal;	/* transceiver pal */
	volatile u_int32_t	mgmt_pal;	/* management pal */
};

/* be_tregs.tcvr_pal: transceiver pal */
#define	TCVR_PAL_SERIAL		0x00000001	/* serial mode enable */
#define TCVR_PAL_EXTLBACK	0x00000002	/* external loopback */
#define TCVR_PAL_MSENSE		0x00000004	/* media sense */
#define TCVR_PAL_LTENABLE	0x00000008	/* link test enable */
#define TCVR_PAL_LTSTATUS	0x00000010	/* link test status: p1 only */

/* be_tregs.mgmt_pal: management pal */
#define MGMT_PAL_DCLOCK		0x00000001	/* data clock strobe */
#define MGMT_PAL_OENAB		0x00000002	/* output enable */
#define MGMT_PAL_MDIO		0x00000004	/* MDIO data/attached */
#define MGMT_PAL_EXT_MDIO	MGMT_PAL_MDIO	/* external mdio */
#define MGMT_PAL_TIMEO		0x00000008	/* tx enable timeout error */
#define MGMT_PAL_INT_MDIO	MGMT_PAL_TIMEO	/* internal mdio */

/*
 * BE receive descriptor
 */
struct be_rxd {
	volatile u_int32_t rx_flags;		/* rx descriptor flags */
	volatile u_int32_t rx_addr;		/* rx buffer address */
};

#define BE_RXD_OWN		0x80000000	/* ownership: 1=hw, 0=sw */
#define BE_RXD_UPDATE		0x10000000	/* being updated? */
#define BE_RXD_LENGTH		0x00001fff	/* packet length */

/*
 * BE transmit descriptor
 */
struct be_txd {
	volatile u_int32_t tx_flags;		/* tx descriptor flags */
	volatile u_int32_t tx_addr;		/* tx buffer address */
};

#define BE_TXD_OWN		0x80000000	/* ownership: 1=hw, 0=sw */
#define BE_TXD_SOP		0x40000000	/* start of packet marker */
#define BE_TXD_EOP		0x20000000	/* end of packet marker */
#define BE_TXD_UPDATE		0x10000000	/* being updated? */
#define BE_TXD_LENGTH		0x00001fff	/* packet length */

/* Buffer and Ring sizes: fixed ring size */
#define BE_TX_RING_MAXSIZE	256		/* maximum tx ring size */
#define BE_RX_RING_MAXSIZE	256		/* maximum rx ring size */
#define BE_TX_RING_SIZE		32		/* power of 2, <= MAXSIZE */
#define BE_RX_RING_SIZE		32		/* power of 2, <= MAXSIZE */
#define BE_PKT_BUF_SZ		2048
#define	BE_TX_HIGH_WATER	27		/* enable tx interrupt */
#define	BE_TX_LOW_WATER		5		/* disable tx interrupt */

#define	BE_TX_RING_MAXMASK	(BE_TX_RING_MAXSIZE-1)
#define	BE_RX_RING_MAXMASK	(BE_RX_RING_MAXSIZE-1)
#define	BE_TX_RING_MASK		(BE_TX_RING_SIZE-1)
#define	BE_RX_RING_MASK		(BE_RX_RING_SIZE-1)

/*
 * BE descriptor rings
 */
struct be_desc {
	struct be_rxd be_rxd[BE_RX_RING_MAXSIZE];
	struct be_txd be_txd[BE_TX_RING_MAXSIZE];
};

/*
 * BE packet buffers
 */
struct be_bufs {
	char	rx_buf[BE_RX_RING_SIZE][BE_PKT_BUF_SZ];
	char	tx_buf[BE_TX_RING_SIZE][BE_PKT_BUF_SZ];
};

#define	MC_POLY_BE		0x04c11db7UL	/* mcast crc, big endian */
#define	MC_POLY_LE		0xedb88320UL	/* mcast crc, little endian */

/* PHY addresses */
#define BE_PHY_EXTERNAL		0
#define BE_PHY_INTERNAL		1

/* Transceiver types */
#define BE_TCVR_NONE		0
#define BE_TCVR_INTERNAL	1
#define BE_TCVR_EXTERNAL	2

#define BE_TCVR_READ_INVALID	0xff000000

#define BE_NEGOTIATE_MAXTICKS	16

#define PHY_BMCR		0x00	/* Basic Mode Control Register */
#define PHY_BMSR		0x01	/* Basic Mode Status Register */

/*
 * Basic Mode Control Register (BMCR)
 */
#define PHY_BMCR_RESET		0x8000	/* Software reset		*/
#define PHY_BMCR_LOOPBACK	0x4000	/* Lookback enable		*/
#define PHY_BMCR_SPEED		0x2000	/* 1=100Mb, 0=10Mb		*/
#define PHY_BMCR_ANE		0x1000	/* Auto-Negiation enable	*/
#define PHY_BMCR_PDOWN		0x0800	/* power down the chip		*/
#define PHY_BMCR_ISOLATE	0x0400	/* Isolate the chip		*/
#define PHY_BMCR_RAN		0x0200	/* Restart autonegotiation	*/
#define PHY_BMCR_DUPLEX		0x0100	/* 1=full, 0=half		*/
#define PHY_BMCR_COLLISONTEST	0x0080	/* Create collisions on TX	*/

/*
 * Basic Mode Status Register (BMSR)
 */
#define PHY_BMSR_100BASET4	0x8000	/* 100BaseT4 capable?		*/
#define PHY_BMSR_100BASETX_FULL	0x4000	/* 100BaseTX full duplex cap?	*/
#define PHY_BMSR_100BASETX_HALF	0x2000	/* 100BaseTX half duplex cap?	*/
#define PHY_BMSR_10BASET_FULL	0x1000	/* 10BaseT full duplex cap?	*/
#define PHY_BMSR_10BASET_HALF	0x0800	/* 10BaseT half duplex cap?	*/
#define PHY_BMSR_ANCOMPLETE	0x0020	/* auto-negotiation complete?	*/
#define PHY_BMSR_REMOTEFAULT	0x0010	/* Fault condition seen?	*/
#define PHY_BMSR_ANC		0x0008	/* Can auto-negotiate?		*/
#define PHY_BMSR_LINKSTATUS	0x0004	/* Link established?		*/
#define PHY_BMSR_JABBER		0x0002	/* Jabber detected?		*/
#define PHY_BMSR_EXTENDED	0x0001	/* Extended registers?		*/
@


1.11
log
@Completely rework transmit interrupt handling:
- try to handle tx ring reclaim in bestart()
- if we pass over the high water mark, enable TX interrupts
- disable them again when the low water mark is passed
Thanks to mickey@@ for enduring 4 versions of this =)
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.10 2002/06/03 20:01:36 deraadt Exp $	*/
a14 2
 * 3. The name of the authors may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.10
log
@spell transceiver correctly
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.9 2001/01/30 07:17:07 jason Exp $	*/
d263 2
@


1.9
log
@- take advantage of the fact that qe's and be's require qec's and move
some common functionality into qec's driver (rx and tx frame fetching)
- avoid modulus operations
- some style
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.8 1999/01/07 03:14:42 jason Exp $	*/
d209 1
a209 1
 * BE Tranceiver registers
d212 1
a212 1
	volatile u_int32_t	tcvr_pal;	/* tranceiver pal */
d216 1
a216 1
/* be_tregs.tcvr_pal: tranceiver pal */
d292 1
a292 1
/* Tranceiver types */
@


1.9.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.9 2001/01/30 07:17:07 jason Exp $	*/
d209 1
a209 1
 * BE Transceiver registers
d212 1
a212 1
	volatile u_int32_t	tcvr_pal;	/* transceiver pal */
d216 1
a216 1
/* be_tregs.tcvr_pal: transceiver pal */
d292 1
a292 1
/* Transceiver types */
@


1.9.6.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.9.6.1 2002/06/11 03:38:15 art Exp $	*/
a262 2
#define	BE_TX_HIGH_WATER	27		/* enable tx interrupt */
#define	BE_TX_LOW_WATER		5		/* disable tx interrupt */
@


1.8
log
@Take advantage of kernel printf %b
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.7 1998/09/15 22:36:21 jason Exp $	*/
d260 2
a261 2
#define BE_TX_RING_SIZE		32
#define BE_RX_RING_SIZE		32
d263 5
@


1.8.6.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.9 2001/01/30 07:17:07 jason Exp $	*/
d260 2
a261 2
#define BE_TX_RING_SIZE		32		/* power of 2, <= MAXSIZE */
#define BE_RX_RING_SIZE		32		/* power of 2, <= MAXSIZE */
a262 5

#define	BE_TX_RING_MAXMASK	(BE_TX_RING_MAXSIZE-1)
#define	BE_RX_RING_MAXMASK	(BE_RX_RING_MAXSIZE-1)
#define	BE_TX_RING_MASK		(BE_TX_RING_SIZE-1)
#define	BE_RX_RING_MASK		(BE_RX_RING_SIZE-1)
@


1.8.6.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d209 1
a209 1
 * BE Transceiver registers
d212 1
a212 1
	volatile u_int32_t	tcvr_pal;	/* transceiver pal */
d216 1
a216 1
/* be_tregs.tcvr_pal: transceiver pal */
a262 2
#define	BE_TX_HIGH_WATER	27		/* enable tx interrupt */
#define	BE_TX_LOW_WATER		5		/* disable tx interrupt */
d292 1
a292 1
/* Transceiver types */
@


1.8.6.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.8.6.2 2003/03/27 23:49:25 niklas Exp $	*/
d15 2
@


1.7
log
@multicast support + a little KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.6 1998/09/04 05:59:19 jason Exp $	*/
d107 2
d182 14
@


1.6
log
@ifmedia-fy qec+be
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.5 1998/09/01 20:04:16 jason Exp $	*/
d263 3
@


1.5
log
@o sun4c supported now
o added collision counters
o general improvements
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.4 1998/08/28 19:06:48 jason Exp $	*/
d297 4
a300 4
#define PHY_BMSR_100BASETX_FULL	0x4000	/* 100BaseTX full duplex?	*/
#define PHY_BMSR_100BASETX_HALF	0x2000	/* 100BaseTX half duplex?	*/
#define PHY_BMSR_10BASET_FULL	0x1000	/* 10BaseT full duplex?		*/
#define PHY_BMSR_10BASET_HALF	0x0800	/* 10BaseT half duplex?		*/
@


1.4
log
@o added link negotiation
o sun4c support (XXX: will be revised)
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.3 1998/08/26 05:00:53 jason Exp $	*/
d244 2
a245 2
#define BE_TX_RING_SIZE		16
#define BE_RX_RING_SIZE		16
@


1.3
log
@First cut at qec+be support.  Works in 10mbit/half duplex mode.
Removed qec+be dependency on stp2002.
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.2 1998/07/05 09:25:55 deraadt Exp $	*/
d244 2
a245 2
#define BE_TX_RING_SIZE		BE_TX_RING_MAXSIZE
#define BE_RX_RING_SIZE		BE_RX_RING_MAXSIZE
d274 2
@


1.2
log
@basic chip setup
@
text
@d1 1
a1 1
/*	$OpenBSD: bereg.h,v 1.1 1998/07/04 07:57:52 deraadt Exp $	*/
d4 2
a5 1
 * Copyright (c) 1998 Theo de Raadt.  All rights reserved.
d15 1
a15 1
 * 3. The name of the author may not be used to endorse or promote products
d18 1
a18 1
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
d21 1
a21 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
d30 3
d34 110
a143 110
	volatile u_int32_t xif_cfg;          /* XIF config register */
	volatile u_int32_t _unused[63];      /* Reserved... */
	volatile u_int32_t status;           /* Status register, clear on read */
	volatile u_int32_t imask;            /* Interrupt mask register */
	volatile u_int32_t _unused2[64];     /* Reserved... */
	volatile u_int32_t tx_swreset;       /* Transmitter software reset */
	volatile u_int32_t tx_cfg;           /* Transmitter config register */
	volatile u_int32_t ipkt_gap1;        /* Inter-packet gap 1 */
	volatile u_int32_t ipkt_gap2;        /* Inter-packet gap 2 */
	volatile u_int32_t attempt_limit;    /* Transmit attempt limit */
	volatile u_int32_t stime;            /* Transmit slot time */
	volatile u_int32_t preamble_len;     /* Size of transmit preamble */
	volatile u_int32_t preamble_pattern; /* Pattern for transmit preamble */
	volatile u_int32_t tx_sframe_delim;  /* Transmit delimiter */
	volatile u_int32_t jsize;            /* Toe jam... */
	volatile u_int32_t tx_pkt_max;       /* Transmit max pkt size */
	volatile u_int32_t tx_pkt_min;       /* Transmit min pkt size */
	volatile u_int32_t peak_attempt;     /* Count of transmit peak attempts */
	volatile u_int32_t dt_ctr;           /* Transmit defer timer */
	volatile u_int32_t nc_ctr;           /* Transmit normal-collision counter */
	volatile u_int32_t fc_ctr;           /* Transmit first-collision counter */
	volatile u_int32_t ex_ctr;           /* Transmit excess-collision counter */
	volatile u_int32_t lt_ctr;           /* Transmit late-collision counter */
	volatile u_int32_t rand_seed;        /* Transmit random number seed */
	volatile u_int32_t tx_smachine;      /* Transmit state machine */
	volatile u_int32_t _unused3[44];     /* Reserved */
	volatile u_int32_t rx_swreset;       /* Receiver software reset */
	volatile u_int32_t rx_cfg;           /* Receiver config register */
	volatile u_int32_t rx_pkt_max;       /* Receive max pkt size */
	volatile u_int32_t rx_pkt_min;       /* Receive min pkt size */
	volatile u_int32_t mac_addr2;        /* Ether address register 2 */
	volatile u_int32_t mac_addr1;        /* Ether address register 1 */
	volatile u_int32_t mac_addr0;        /* Ether address register 0 */
	volatile u_int32_t fr_ctr;           /* Receive frame receive counter */
	volatile u_int32_t gle_ctr;          /* Receive giant-length error counter */
	volatile u_int32_t unale_ctr;        /* Receive unaligned error counter */
	volatile u_int32_t rcrce_ctr;        /* Receive CRC error counter */
	volatile u_int32_t rx_smachine;      /* Receiver state machine */
	volatile u_int32_t rx_cvalid;        /* Receiver code violation */
	volatile u_int32_t _unused4;         /* Reserved... */
	volatile u_int32_t htable3;          /* Hash table 3 */
	volatile u_int32_t htable2;          /* Hash table 2 */
	volatile u_int32_t htable1;          /* Hash table 1 */
	volatile u_int32_t htable0;          /* Hash table 0 */
	volatile u_int32_t afilter2;         /* Address filter 2 */
	volatile u_int32_t afilter1;         /* Address filter 1 */
	volatile u_int32_t afilter0;         /* Address filter 0 */
	volatile u_int32_t afilter_mask;     /* Address filter mask */
};

/* BE XIF config register. */
#define BE_XCFG_ODENABLE   0x00000001 /* Output driver enable */
#define BE_XCFG_RESV       0x00000002 /* Reserved, write always as 1 */
#define BE_XCFG_MLBACK     0x00000004 /* Loopback-mode MII enable */
#define BE_XCFG_SMODE      0x00000008 /* Enable serial mode */

/* BE status register. */
#define BE_STAT_GOTFRAME   0x00000001 /* Received a frame */
#define BE_STAT_RCNTEXP    0x00000002 /* Receive frame counter expired */
#define BE_STAT_ACNTEXP    0x00000004 /* Align-error counter expired */
#define BE_STAT_CCNTEXP    0x00000008 /* CRC-error counter expired */
#define BE_STAT_LCNTEXP    0x00000010 /* Length-error counter expired */
#define BE_STAT_RFIFOVF    0x00000020 /* Receive FIFO overflow */
#define BE_STAT_CVCNTEXP   0x00000040 /* Code-violation counter expired */
#define BE_STAT_SENTFRAME  0x00000100 /* Transmitted a frame */
#define BE_STAT_TFIFO_UND  0x00000200 /* Transmit FIFO underrun */
#define BE_STAT_MAXPKTERR  0x00000400 /* Max-packet size error */
#define BE_STAT_NCNTEXP    0x00000800 /* Normal-collision counter expired */
#define BE_STAT_ECNTEXP    0x00001000 /* Excess-collision counter expired */
#define BE_STAT_LCCNTEXP   0x00002000 /* Late-collision counter expired */
#define BE_STAT_FCNTEXP    0x00004000 /* First-collision counter expired */
#define BE_STAT_DTIMEXP    0x00008000 /* Defer-timer expired */

/* BE interrupt mask register. */
#define BE_IMASK_GOTFRAME  0x00000001 /* Received a frame */
#define BE_IMASK_RCNTEXP   0x00000002 /* Receive frame counter expired */
#define BE_IMASK_ACNTEXP   0x00000004 /* Align-error counter expired */
#define BE_IMASK_CCNTEXP   0x00000008 /* CRC-error counter expired */
#define BE_IMASK_LCNTEXP   0x00000010 /* Length-error counter expired */
#define BE_IMASK_RFIFOVF   0x00000020 /* Receive FIFO overflow */
#define BE_IMASK_CVCNTEXP  0x00000040 /* Code-violation counter expired */
#define BE_IMASK_SENTFRAME 0x00000100 /* Transmitted a frame */
#define BE_IMASK_TFIFO_UND 0x00000200 /* Transmit FIFO underrun */
#define BE_IMASK_MAXPKTERR 0x00000400 /* Max-packet size error */
#define BE_IMASK_NCNTEXP   0x00000800 /* Normal-collision counter expired */
#define BE_IMASK_ECNTEXP   0x00001000 /* Excess-collision counter expired */
#define BE_IMASK_LCCNTEXP  0x00002000 /* Late-collision counter expired */
#define BE_IMASK_FCNTEXP   0x00004000 /* First-collision counter expired */
#define BE_IMASK_DTIMEXP   0x00008000 /* Defer-timer expired */

/* BE transmit config register. */
#define BE_TXCFG_ENABLE    0x00000001 /* Enable the transmitter */
#define BE_TXCFG_FIFO      0x00000010 /* Default tx fthresh... */
#define BE_TXCFG_SMODE     0x00000020 /* Enable slow transmit mode */
#define BE_TXCFG_CIGN      0x00000040 /* Ignore transmit collisions */
#define BE_TXCFG_FCSOFF    0x00000080 /* Do not emit FCS */
#define BE_TXCFG_DBACKOFF  0x00000100 /* Disable backoff */
#define BE_TXCFG_FULLDPLX  0x00000200 /* Enable full-duplex */

/* BE receive config register. */
#define BE_RXCFG_ENABLE    0x00000001 /* Enable the receiver */
#define BE_RXCFG_FIFO      0x0000000e /* Default rx fthresh... */
#define BE_RXCFG_PSTRIP    0x00000020 /* Pad byte strip enable */
#define BE_RXCFG_PMISC     0x00000040 /* Enable promiscous mode */
#define BE_RXCFG_DERR      0x00000080 /* Disable error checking */
#define BE_RXCFG_DCRCS     0x00000100 /* Disable CRC stripping */
#define BE_RXCFG_ME        0x00000200 /* Receive packets addressed to me */
#define BE_RXCFG_PGRP      0x00000400 /* Enable promisc group mode */
#define BE_RXCFG_HENABLE   0x00000800 /* Enable the hash filter */
#define BE_RXCFG_AENABLE   0x00001000 /* Enable the address filter */
d145 3
d149 13
a161 13
	volatile u_int32_t ctrl;       /* Control */
	volatile u_int32_t stat;       /* Status */
	volatile u_int32_t rxds;       /* RX descriptor ring ptr */
	volatile u_int32_t txds;       /* TX descriptor ring ptr */
	volatile u_int32_t rimask;     /* RX Interrupt Mask */
	volatile u_int32_t timask;     /* TX Interrupt Mask */
	volatile u_int32_t qmask;      /* QEC Error Interrupt Mask */
	volatile u_int32_t bmask;      /* BE Error Interrupt Mask */
	volatile u_int32_t rxwbufptr;  /* Local memory rx write ptr */
	volatile u_int32_t rxrbufptr;  /* Local memory rx read ptr */
	volatile u_int32_t txwbufptr;  /* Local memory tx write ptr */
	volatile u_int32_t txrbufptr;  /* Local memory tx read ptr */
	volatile u_int32_t ccnt;       /* Collision Counter */
d164 31
d196 2
a197 2
	u_int32_t	tcvr_pal;
	u_int32_t	mgmt_pal;
d200 18
d219 2
a220 2
	u_int32_t rx_flags;
	u_int32_t rx_addr;
d223 3
a225 3
#define RXD_OWN      0x80000000 /* Ownership. */
#define RXD_UPDATE   0x10000000 /* Being Updated? */
#define RXD_LENGTH   0x000007ff /* Packet Length. */
d227 3
d231 2
a232 2
	u_int32_t tx_flags;
	u_int32_t tx_addr;
d235 12
a246 5
#define TXD_OWN      0x80000000 /* Ownership. */
#define TXD_SOP      0x40000000 /* Start Of Packet */
#define TXD_EOP      0x20000000 /* End Of Packet */
#define TXD_UPDATE   0x10000000 /* Being Updated? */
#define TXD_LENGTH   0x000007ff /* Packet Length. */
d248 7
d256 7
d264 8
d273 1
a273 4
#define TX_RING_MAXSIZE   256
#define RX_RING_MAXSIZE   256
#define TX_RING_SIZE      256
#define RX_RING_SIZE      256
d275 2
a276 5
#define SUN4C_PKT_BUF_SZ        1546
#define SUN4C_RX_BUFF_SIZE      SUN4C_PKT_BUF_SZ
#define SUN4C_TX_BUFF_SIZE      SUN4C_PKT_BUF_SZ
#define SUN4C_RX_RING_SIZE      16
#define SUN4C_TX_RING_SIZE      16
d278 12
a289 4
struct be_desc {
	struct be_rxd be_rxd[RX_RING_MAXSIZE];
	struct be_txd be_txd[TX_RING_MAXSIZE];
};
d291 14
a304 5
struct be_bufs {
	char	tx_buf[SUN4C_TX_RING_SIZE][SUN4C_TX_BUFF_SIZE];
	char	pad[2];
	char	rx_buf[SUN4C_RX_RING_SIZE][SUN4C_RX_BUFF_SIZE];
};
@


1.1
log
@map registers of the qec+be 100mbit card
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d80 61
d149 1
a149 1
	volatile u_int32_t bmask;      /* BigMAC Error Interrupt Mask */
d160 45
@

