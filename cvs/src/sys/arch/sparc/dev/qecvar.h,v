head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.6
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.4
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.11.0.32
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.36
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.34
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.30
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.28
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.26
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.24
	OPENBSD_5_0:1.11.0.22
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.20
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.18
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.14
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.16
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.12
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.10
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.8
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.6
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.4
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.8.0.6
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.7.0.8
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.6
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.4
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5;
locks; strict;
comment	@ * @;


1.12
date	2015.03.29.10.59.47;	author mpi;	state Exp;
branches;
next	1.11;
commitid	5gSSQiWXj4PXfvMR;

1.11
date	2006.06.02.20.00.54;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.15.54.22;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.14.01.26.43;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.30.07.17.07;	author jason;	state Exp;
branches
	1.8.6.1;
next	1.7;

1.7
date	99.07.05.21.55.09;	author deraadt;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	98.11.02.05.50.59;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	98.10.19.05.41.20;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	98.08.26.00.57.07;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	98.07.04.07.57.01;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	98.07.04.07.07.22;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.07.04.01.27.55;	author deraadt;	state Exp;
branches;
next	;

1.7.4.1
date	2001.05.14.21.37.08;	author niklas;	state Exp;
branches;
next	1.7.4.2;

1.7.4.2
date	2002.03.28.10.57.10;	author niklas;	state Exp;
branches;
next	1.7.4.3;

1.7.4.3
date	2003.06.07.11.14.43;	author ho;	state Exp;
branches;
next	;

1.8.6.1
date	2002.06.11.03.38.16;	author art;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Convert qe(4) et be(4) to if_input().

Tested by miod@@, thanks!
@
text
@/*	$OpenBSD: qecvar.h,v 1.11 2006/06/02 20:00:54 miod Exp $	*/

/*
 * Copyright (c) 1998 Theo de Raadt and Jason L. Wright.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

struct qec_softc {
	struct	device	sc_dev;		/* us as a device */
	struct	qecregs	*sc_regs;	/* QEC registers */
	int		sc_node;	/* PROM node ID */
	int		sc_burst;	/* DVMA burst size in effect */
	int		sc_bufsiz;	/* Size of buffer */
	int		sc_pri;		/* interrupt priority */
	int		sc_nchannels;	/* number of channels on board */
	int		sc_nrange;	/* number of ranges */
	struct	rom_range *sc_range;	/* array of ranges */
	void		*sc_paddr;

	/*
	 * For use by children:
	 */
	u_int32_t	sc_msize;	/* qec buffer offset per channel */
	u_int32_t	sc_rsize;	/* qec buffer size for receive */
};

void	qec_reset(struct qec_softc *);
int	qec_put(u_int8_t *, struct mbuf *);
struct mbuf *qec_get(u_int8_t *, int);
@


1.11
log
@sbus_establish() and the associated linked list in the sbus softc is now only
used to store a per-device reset callback, for use in sbusreset(). Except
sbusreset() has never, ever, been used since Torek's sbus code went in.
Time to recycle those wasted bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.10 2003/06/02 15:54:22 deraadt Exp $	*/
d49 1
a49 1
struct mbuf *qec_get(struct ifnet *, u_int8_t *, int);
@


1.10
log
@some license cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.9 2002/03/14 01:26:43 millert Exp $	*/
a29 1
	struct	sbusdev	sc_sd;		/* sbus device */
@


1.9
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.8 2001/01/30 07:17:07 jason Exp $	*/
a14 2
 * 3. The name of the authors may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.8
log
@- take advantage of the fact that qe's and be's require qec's and move
some common functionality into qec's driver (rx and tx frame fetching)
- avoid modulus operations
- some style
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.7 1999/07/05 21:55:09 deraadt Exp $	*/
d50 3
a52 3
void	qec_reset __P((struct qec_softc *));
int	qec_put __P((u_int8_t *, struct mbuf *));
struct mbuf *qec_get __P((struct ifnet *, u_int8_t *, int));
@


1.8.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.8 2001/01/30 07:17:07 jason Exp $	*/
d50 3
a52 3
void	qec_reset(struct qec_softc *);
int	qec_put(u_int8_t *, struct mbuf *);
struct mbuf *qec_get(struct ifnet *, u_int8_t *, int);
@


1.7
log
@calculate ca_offset correctly
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.6 1998/11/02 05:50:59 jason Exp $	*/
d51 2
@


1.7.4.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.8 2001/01/30 07:17:07 jason Exp $	*/
a50 2
int	qec_put __P((u_int8_t *, struct mbuf *));
struct mbuf *qec_get __P((struct ifnet *, u_int8_t *, int));
@


1.7.4.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 3
a52 3
void	qec_reset(struct qec_softc *);
int	qec_put(u_int8_t *, struct mbuf *);
struct mbuf *qec_get(struct ifnet *, u_int8_t *, int);
@


1.7.4.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.7.4.2 2002/03/28 10:57:10 niklas Exp $	*/
d15 2
@


1.6
log
@First step at unifying qe & be drivers:
o qe & be drivers now only access qec globals directly at interrupt time
o more initialization done in qec_reset
o qe & be drivers handle the qec internal buffer identically
o nuked unused variables
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.5 1998/10/19 05:41:20 jason Exp $	*/
d41 1
@


1.5
log
@Support for the qec+qe (SBus QuadEthernet board)
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.4 1998/08/26 00:57:07 jason Exp $	*/
d31 9
a39 10
	struct	device sc_dev;		/* us as a device */
	struct	sbusdev sc_sd;		/* sbus device */
	struct	qecregs *sc_regs;	/* QEC registers */
	int	sc_node;		/* PROM node ID */
	int	sc_burst;		/* DVMA burst size in effect */
	caddr_t	sc_buffer;		/* VA of the buffer we provide */
	int	sc_bufsiz;		/* Size of buffer */
	int	sc_nrange;		/* number of ranges */
	int	sc_pri;
	int	sc_nchannels;		/* number of channels on board */
d41 6
@


1.4
log
@o Fix up address ranges
o Added qec_translate for translating addresses of prom children
o Added qec_reset to do a generic reset of the card
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.3 1998/07/04 07:57:01 deraadt Exp $	*/
d39 2
@


1.3
log
@no need for counting attachments
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.2 1998/07/04 07:07:22 deraadt Exp $	*/
d4 2
a5 1
 * Copyright (c) 1998 Theo de Raadt.  All rights reserved.
d15 1
a15 1
 * 3. The name of the author may not be used to endorse or promote products
d18 1
a18 1
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
d21 1
a21 1
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
d31 2
a32 2
	struct device sc_dev;		/* us as a device */
	struct sbusdev sc_sd;		/* sbus device */
d38 2
d41 2
@


1.2
log
@add qec register info
@
text
@d1 1
a1 1
/*	$OpenBSD: qecvar.h,v 1.1 1998/07/04 01:27:55 deraadt Exp $	*/
a36 1
	int	nattached;		/* number of attached devices */
@


1.1
log
@add support for qec; same basic thing as lebuffer
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d32 1
a32 1
	u_int	sc_rev;			/* revision */
a38 1

@

