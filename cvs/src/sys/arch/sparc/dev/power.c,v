head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.38
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.34
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.36
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.28
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.32
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.30
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.26
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.24
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.22
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.20
	OPENBSD_5_0:1.10.0.18
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.16
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.14
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.10
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.12
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.8
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.6
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.9.0.8
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.6
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.4
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.14
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.12
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.10
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.4
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2007.07.01.19.07.45;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2005.07.08.12.34.36;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.23.17.12.24;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.13.22.25.30;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.43;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.05.05.07.08.03;	author deraadt;	state Exp;
branches
	1.5.4.1
	1.5.14.1;
next	1.4;

1.4
date	97.08.08.08.25.22;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.06.22.22.45.34;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.06.22.22.32.38;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.08.11.05.34.25;	author deraadt;	state Exp;
branches;
next	;

1.5.4.1
date	2002.03.28.10.57.10;	author niklas;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2003.05.16.00.29.40;	author niklas;	state Exp;
branches;
next	;

1.5.14.1
date	2002.06.11.03.38.16;	author art;	state Exp;
branches;
next	1.5.14.2;

1.5.14.2
date	2003.05.19.21.46.32;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Use mapiodev() instead of mapdev() when applicable. This is just syntactic
sugar.
@
text
@/*	$OpenBSD: power.c,v 1.9 2005/07/08 12:34:36 miod Exp $	*/
/*	$NetBSD: power.c,v 1.2 1996/05/16 15:56:56 abrown Exp $ */

/*
 * Copyright (c) 1996
 *	The President and Fellows of Harvard College. All rights reserved.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by Aaron Brown and
 *	Harvard University.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Harvard University
 *	and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/param.h>
#include <sys/device.h>
#include <sys/kernel.h>
#include <sys/systm.h>

#include <machine/autoconf.h>

#include <sparc/dev/power.h>

void	powerattach(struct device *, struct device *, void *);
int	powermatch(struct device *, void *, void *);

struct cfattach power_ca = {
	sizeof(struct device), powermatch, powerattach
};

struct cfdriver power_cd = {
	NULL, "power", DV_DULL
};

static char power_attached = 0;
volatile u_char *power_reg;

/*
 * This is the driver for the "power" register available on some Sun4m
 * machines. This allows the machine to remove power automatically when
 * shutdown or halted or whatever.
 */

int
powermatch(struct device *parent, void *vcf, void *aux)
{
	struct confargs *ca = aux;

	if (CPU_ISSUN4M) {
		if (strcmp("power", ca->ca_ra.ra_name) == 0)
			return (1);
	}

	return (0);
}

/* ARGSUSED */
void
powerattach(struct device *parent, struct device *self, void *aux)
{
	struct confargs *ca = aux;
	struct romaux *ra = &ca->ca_ra;

	power_reg = mapiodev(ra->ra_reg, 0, sizeof(long));

	power_attached = 1;

	printf("\n");
}

void
auxio_powerdown()
{
	if (power_attached) {
		*POWER_REG |= POWER_OFF;
		DELAY(1000000);
	}
}
@


1.9
log
@Partially revert r1.8 - we do not want to match on the SPARCbook auxio2
registers, after all.
@
text
@d1 1
a1 1
/*	$OpenBSD: power.c,v 1.8 2005/03/23 17:12:24 miod Exp $	*/
d93 1
a93 1
	power_reg = mapdev(ra->ra_reg, 0, 0, sizeof(long));
@


1.8
log
@Match power on the SPARCbook's auxio2, but prefer tctrl poweroff if
both power0 and tctrl0 are configured.

This allows installation media to poweroff quickly on SPARCbooks.
@
text
@d1 1
a1 1
/*	$OpenBSD: power.c,v 1.7 2003/05/13 22:25:30 miod Exp $	*/
d79 1
a79 3
		/* Tadpole SPARCbooks provide the power register as "auxio2" */
		if (strcmp("power", ca->ca_ra.ra_name) == 0 ||
		    strcmp("auxio2", ca->ca_ra.ra_name) == 0)
@


1.7
log
@Nuke a few simple commons.
@
text
@d1 1
a1 1
/*	$OpenBSD: power.c,v 1.6 2002/03/14 01:26:43 millert Exp $	*/
d53 2
a54 2
static int powermatch(struct device *, void *, void *);
static void powerattach(struct device *, struct device *, void *);
d73 2
a74 4
static int
powermatch(parent, vcf, aux)
	struct device *parent;
	void *aux, *vcf;
d76 1
a76 1
	register struct confargs *ca = aux;
d78 6
a83 2
	if (CPU_ISSUN4M)
		return (strcmp("power", ca->ca_ra.ra_name) == 0);
d89 2
a90 4
static void
powerattach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
d103 1
a103 1
powerdown()
d105 1
a105 1
	if (power_attached)
d107 2
a108 1
	DELAY(1000000);
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: power.c,v 1.5 1999/05/05 07:08:03 deraadt Exp $	*/
d65 1
@


1.5
log
@delay in power-off; minoura@@dale.makoto.hauN.org
@
text
@d1 1
a1 1
/*	$OpenBSD: power.c,v 1.4 1997/08/08 08:25:22 downsj Exp $	*/
d53 2
a54 2
static int powermatch __P((struct device *, void *, void *));
static void powerattach __P((struct device *, struct device *, void *));
@


1.5.14.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: power.c,v 1.5 1999/05/05 07:08:03 deraadt Exp $	*/
d53 2
a54 2
static int powermatch(struct device *, void *, void *);
static void powerattach(struct device *, struct device *, void *);
@


1.5.14.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a64 1
volatile u_char *power_reg;
@


1.5.4.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d53 2
a54 2
static int powermatch(struct device *, void *, void *);
static void powerattach(struct device *, struct device *, void *);
@


1.5.4.2
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@a64 1
volatile u_char *power_reg;
@


1.4
log
@Mostly sync to NetBSD-current 970804.

GENERIC currently compiles and runs; some devices (isp) are not complete and
not yet enabled.
@
text
@d1 1
a1 1
/*	$OpenBSD: power.c,v 1.3 1997/06/22 22:45:34 downsj Exp $	*/
d106 1
@


1.3
log
@Fix comment.
@
text
@d1 1
a1 1
/*	$OpenBSD: power.c,v 1.2 1997/06/22 22:32:38 downsj Exp $	*/
d94 1
a94 1
	power_reg = mapdev(ra->ra_reg, 0, 0, sizeof(long), ca->ca_bustype);
@


1.2
log
@Allow powerdown() to be blindly called on machines with no power device.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a69 2
 *
 * XXX: this capability is not utilized in the current kernel.
@


1.1
log
@netbsd port, now we merge our changes back in
@
text
@d1 1
a41 1
 * $Id: power.c,v 1.2 1996/05/16 15:56:56 abrown Exp $
d64 2
d98 2
d106 2
a107 1
	*POWER_REG |= POWER_OFF;
@
