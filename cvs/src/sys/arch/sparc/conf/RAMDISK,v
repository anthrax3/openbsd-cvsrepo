head	1.81;
access;
symbols
	OPENBSD_6_0:1.81.0.4
	OPENBSD_6_0_BASE:1.81
	OPENBSD_5_9:1.81.0.2
	OPENBSD_5_9_BASE:1.81
	OPENBSD_5_8:1.80.0.4
	OPENBSD_5_8_BASE:1.80
	OPENBSD_5_7:1.79.0.2
	OPENBSD_5_7_BASE:1.79
	OPENBSD_5_6:1.75.0.12
	OPENBSD_5_6_BASE:1.75
	OPENBSD_5_5:1.75.0.10
	OPENBSD_5_5_BASE:1.75
	OPENBSD_5_4:1.75.0.6
	OPENBSD_5_4_BASE:1.75
	OPENBSD_5_3:1.75.0.4
	OPENBSD_5_3_BASE:1.75
	OPENBSD_5_2:1.75.0.2
	OPENBSD_5_2_BASE:1.75
	OPENBSD_5_1_BASE:1.73
	OPENBSD_5_1:1.73.0.4
	OPENBSD_5_0:1.73.0.2
	OPENBSD_5_0_BASE:1.73
	OPENBSD_4_9:1.71.0.4
	OPENBSD_4_9_BASE:1.71
	OPENBSD_4_8:1.71.0.2
	OPENBSD_4_8_BASE:1.71
	OPENBSD_4_7:1.66.0.2
	OPENBSD_4_7_BASE:1.66
	OPENBSD_4_6:1.65.0.8
	OPENBSD_4_6_BASE:1.65
	OPENBSD_4_5:1.65.0.4
	OPENBSD_4_5_BASE:1.65
	OPENBSD_4_4:1.65.0.2
	OPENBSD_4_4_BASE:1.65
	OPENBSD_4_3:1.63.0.2
	OPENBSD_4_3_BASE:1.63
	OPENBSD_4_2:1.62.0.2
	OPENBSD_4_2_BASE:1.62
	OPENBSD_4_1:1.60.0.2
	OPENBSD_4_1_BASE:1.60
	OPENBSD_4_0:1.58.0.2
	OPENBSD_4_0_BASE:1.58
	OPENBSD_3_9:1.57.0.2
	OPENBSD_3_9_BASE:1.57
	OPENBSD_3_8:1.56.0.2
	OPENBSD_3_8_BASE:1.56
	OPENBSD_3_7:1.53.0.2
	OPENBSD_3_7_BASE:1.53
	OPENBSD_3_6:1.51.0.4
	OPENBSD_3_6_BASE:1.51
	SMP_SYNC_A:1.51
	SMP_SYNC_B:1.51
	OPENBSD_3_5:1.51.0.2
	OPENBSD_3_5_BASE:1.51
	OPENBSD_3_4:1.46.0.2
	OPENBSD_3_4_BASE:1.46
	UBC_SYNC_A:1.43
	OPENBSD_3_3:1.39.0.2
	OPENBSD_3_3_BASE:1.39
	OPENBSD_3_2:1.35.0.2
	OPENBSD_3_2_BASE:1.35
	OPENBSD_3_1:1.29.0.6
	OPENBSD_3_1_BASE:1.29
	UBC_SYNC_B:1.35
	UBC:1.29.0.4
	UBC_BASE:1.29
	OPENBSD_3_0:1.29.0.2
	OPENBSD_3_0_BASE:1.29
	OPENBSD_2_9_BASE:1.23
	OPENBSD_2_9:1.23.0.8
	OPENBSD_2_8:1.23.0.6
	OPENBSD_2_8_BASE:1.23
	OPENBSD_2_7:1.23.0.4
	OPENBSD_2_7_BASE:1.23
	SMP:1.23.0.2
	SMP_BASE:1.23
	kame_19991208:1.23
	OPENBSD_2_6:1.22.0.2
	OPENBSD_2_6_BASE:1.22
	OPENBSD_2_5:1.20.0.2
	OPENBSD_2_5_BASE:1.20
	OPENBSD_2_4:1.17.0.2
	OPENBSD_2_4_BASE:1.17
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6;
locks; strict;
comment	@# @;


1.81
date	2015.09.06.16.39.44;	author miod;	state Exp;
branches;
next	1.80;
commitid	y4iE0J9dbVbqtaIT;

1.80
date	2015.07.17.22.52.29;	author tedu;	state Exp;
branches;
next	1.79;
commitid	OOrGfFHYAn65M2qc;

1.79
date	2015.01.21.20.05.29;	author miod;	state Exp;
branches;
next	1.78;
commitid	1djeMjSC32kaL5ef;

1.78
date	2015.01.11.14.56.23;	author miod;	state Exp;
branches;
next	1.77;
commitid	af9SBfsClTE5xQme;

1.77
date	2014.11.22.22.48.38;	author miod;	state Exp;
branches;
next	1.76;
commitid	lw1qpLaP6fJz4gKy;

1.76
date	2014.10.10.05.43.35;	author deraadt;	state Exp;
branches;
next	1.75;
commitid	eyBTAcDp3o260Uyq;

1.75
date	2012.07.22.18.30.16;	author deraadt;	state Exp;
branches;
next	1.74;

1.74
date	2012.04.19.21.10.11;	author deraadt;	state Exp;
branches;
next	1.73;

1.73
date	2011.07.04.22.53.53;	author tedu;	state Exp;
branches;
next	1.72;

1.72
date	2011.06.29.20.52.09;	author matthew;	state Exp;
branches;
next	1.71;

1.71
date	2010.07.10.19.32.20;	author miod;	state Exp;
branches;
next	1.70;

1.70
date	2010.07.03.03.59.17;	author krw;	state Exp;
branches;
next	1.69;

1.69
date	2010.07.02.19.57.15;	author tedu;	state Exp;
branches;
next	1.68;

1.68
date	2010.06.07.20.46.21;	author miod;	state Exp;
branches;
next	1.67;

1.67
date	2010.04.19.10.42.04;	author dcoppa;	state Exp;
branches;
next	1.66;

1.66
date	2009.07.28.12.47.34;	author deraadt;	state Exp;
branches;
next	1.65;

1.65
date	2008.07.02.14.01.35;	author todd;	state Exp;
branches;
next	1.64;

1.64
date	2008.06.08.20.37.39;	author deraadt;	state Exp;
branches;
next	1.63;

1.63
date	2008.03.06.08.23.49;	author deraadt;	state Exp;
branches;
next	1.62;

1.62
date	2007.05.29.09.54.03;	author sobrado;	state Exp;
branches;
next	1.61;

1.61
date	2007.05.01.15.22.23;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	2006.12.10.16.14.20;	author miod;	state Exp;
branches;
next	1.59;

1.59
date	2006.12.09.20.06.46;	author miod;	state Exp;
branches;
next	1.58;

1.58
date	2006.06.26.22.16.23;	author miod;	state Exp;
branches;
next	1.57;

1.57
date	2005.12.06.20.18.57;	author pedro;	state Exp;
branches;
next	1.56;

1.56
date	2005.07.08.12.36.36;	author miod;	state Exp;
branches;
next	1.55;

1.55
date	2005.05.01.07.54.42;	author david;	state Exp;
branches;
next	1.54;

1.54
date	2005.04.14.20.15.58;	author brad;	state Exp;
branches;
next	1.53;

1.53
date	2005.01.10.06.42.42;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2004.09.16.09.14.04;	author mickey;	state Exp;
branches;
next	1.51;

1.51
date	2004.03.12.06.04.01;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2004.03.09.15.24.27;	author miod;	state Exp;
branches;
next	1.49;

1.49
date	2004.03.01.10.08.21;	author miod;	state Exp;
branches;
next	1.48;

1.48
date	2004.01.20.21.18.50;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	2004.01.04.00.29.50;	author deraadt;	state Exp;
branches;
next	1.46;

1.46
date	2003.06.18.17.40.31;	author miod;	state Exp;
branches;
next	1.45;

1.45
date	2003.06.17.21.21.31;	author miod;	state Exp;
branches;
next	1.44;

1.44
date	2003.05.25.21.55.44;	author miod;	state Exp;
branches;
next	1.43;

1.43
date	2003.05.14.01.13.48;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2003.05.14.01.07.22;	author miod;	state Exp;
branches;
next	1.41;

1.41
date	2003.05.13.22.45.11;	author miod;	state Exp;
branches;
next	1.40;

1.40
date	2003.05.13.17.24.10;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2003.03.09.22.41.54;	author miod;	state Exp;
branches;
next	1.38;

1.38
date	2003.03.06.21.48.24;	author miod;	state Exp;
branches;
next	1.37;

1.37
date	2003.03.05.14.34.39;	author miod;	state Exp;
branches;
next	1.36;

1.36
date	2003.01.31.22.00.22;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2002.09.20.11.17.55;	author fgsch;	state Exp;
branches;
next	1.34;

1.34
date	2002.08.31.10.47.18;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2002.08.30.09.31.33;	author miod;	state Exp;
branches;
next	1.32;

1.32
date	2002.08.21.22.18.29;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2002.08.12.10.44.03;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2002.07.28.01.39.14;	author krw;	state Exp;
branches;
next	1.29;

1.29
date	2001.10.09.21.35.45;	author deraadt;	state Exp;
branches
	1.29.4.1;
next	1.28;

1.28
date	2001.06.27.05.46.27;	author art;	state Exp;
branches;
next	1.27;

1.27
date	2001.06.23.19.46.59;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2001.05.17.00.57.59;	author pvalchev;	state Exp;
branches;
next	1.25;

1.25
date	2001.05.16.09.06.37;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2001.05.10.10.34.41;	author art;	state Exp;
branches;
next	1.23;

1.23
date	99.10.29.14.14.27;	author art;	state Exp;
branches
	1.23.2.1;
next	1.22;

1.22
date	99.06.23.17.02.06;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	99.04.18.19.27.34;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	99.03.05.02.55.34;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	99.02.16.21.30.21;	author art;	state Exp;
branches;
next	1.18;

1.18
date	99.01.06.03.37.46;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	98.10.19.05.43.30;	author jason;	state Exp;
branches;
next	1.16;

1.16
date	98.09.21.23.16.31;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	98.09.16.23.13.53;	author jason;	state Exp;
branches;
next	1.14;

1.14
date	98.09.10.17.34.31;	author jason;	state Exp;
branches;
next	1.13;

1.13
date	98.07.20.06.06.27;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	98.07.10.19.20.06;	author jason;	state Exp;
branches;
next	1.11;

1.11
date	98.04.30.06.12.56;	author jason;	state Exp;
branches;
next	1.10;

1.10
date	98.02.26.10.50.21;	author johns;	state Exp;
branches;
next	1.9;

1.9
date	98.02.26.08.05.50;	author jason;	state Exp;
branches;
next	1.8;

1.8
date	97.09.17.06.47.03;	author downsj;	state Exp;
branches;
next	1.7;

1.7
date	97.06.06.00.07.55;	author grr;	state Exp;
branches;
next	1.6;

1.6
date	97.05.25.22.56.42;	author grr;	state Exp;
branches;
next	1.5;

1.5
date	97.05.25.08.20.29;	author grr;	state Exp;
branches;
next	1.4;

1.4
date	97.05.16.01.08.52;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.05.16.01.07.45;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.05.14.21.52.55;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	97.05.14.20.42.52;	author deraadt;	state Exp;
branches;
next	;

1.23.2.1
date	2001.07.04.10.23.14;	author niklas;	state Exp;
branches;
next	1.23.2.2;

1.23.2.2
date	2001.10.31.03.07.56;	author nate;	state Exp;
branches;
next	1.23.2.3;

1.23.2.3
date	2003.03.27.23.49.24;	author niklas;	state Exp;
branches;
next	1.23.2.4;

1.23.2.4
date	2003.05.16.00.29.40;	author niklas;	state Exp;
branches;
next	1.23.2.5;

1.23.2.5
date	2003.06.07.11.14.42;	author ho;	state Exp;
branches;
next	1.23.2.6;

1.23.2.6
date	2004.02.19.10.49.57;	author niklas;	state Exp;
branches;
next	1.23.2.7;

1.23.2.7
date	2004.06.05.23.10.57;	author niklas;	state Exp;
branches;
next	;

1.29.4.1
date	2002.10.29.00.28.09;	author art;	state Exp;
branches;
next	1.29.4.2;

1.29.4.2
date	2003.05.19.21.46.32;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.81
log
@qlw fits
@
text
@#	$OpenBSD: RAMDISK,v 1.80 2015/07/17 22:52:29 tedu Exp $

machine		sparc
maxusers	4

option		TIMEZONE=0
option		DST=0
option		SMALL_KERNEL
option		NO_PROPOLICE
option		BOOT_CONFIG

option		RAMDISK_HOOKS		# 16384+size(bsd) < RELOC(boot,bootxx)
option		MINIROOTSIZE=4000

option		FFS
option		CD9660
option		INET6
option		NFSCLIENT

option		WSEMUL_SUN	# provide sun terminal emulation; required
option		WSEMUL_NO_VT100	# do not provide vt100 terminal emulation

option		SUN4		# sun4/100, sun4/200, sun4/300
option		SUN4C		# sun4c - SS1, 1+, 2, ELC, SLC, IPC, IPX, etc.
option		SUN4E		# sun4e - SPARCengine 1E
option		SUN4M		# sun4m - SS10, SS20, Classic, etc.

config		bsd root on rd0a

mainbus0	at root
cpu0		at mainbus0

sbus0		at mainbus0			# sun4c and sun4e
obio0		at mainbus0			# sun4 and sun4m
vmes0		at mainbus0			# sun4
vmel0		at mainbus0			# sun4
iommu0		at mainbus0			# sun4m
sbus0		at iommu0			# sun4m

auxreg*		at mainbus0			# sun4c and sun4e
auxreg*		at obio0			# sun4m
power0		at obio0			# sun4m

# Mostek clock found on 4/300, sun4c, and sun4m systems.
# The Mostek clock NVRAM is the "eeprom" on sun4/300 systems.
clock0		at mainbus0			# sun4c and sun4e
clock0		at obio0			# sun4m
clock0		at obio0 addr 0xf2000000	# sun4/300
oclock0		at obio0 addr 0xf3000000	# sun4/100 and sun4/200

memreg0		at mainbus0			# sun4c and sun4e
memreg0		at obio0			# sun4m
memreg0		at obio0 addr 0xf4000000	# sun4

eccmemctl0 at mainbus0				# sun4m

timer0		at mainbus0			# sun4c and sun4e
timer0		at obio0			# sun4m
timer0		at obio0 addr 0xef000000	# sun4/300

eeprom0		at obio0 addr 0xf2000000	# sun4/100 and sun4/200

# Zilog 8530 serial chips.  Each has two-channels.
# zs0 is ttya and ttyb.  zs1 is the keyboard and mouse.
zs0		at mainbus0			# sun4c and sun4e
zs0		at obio0			# sun4m
zs0		at obio0 addr 0xf1000000 level 12 # sun4
zs1		at mainbus0			# sun4c and sun4e
zs1		at obio0			# sun4m
zs1		at obio0 addr 0xf0000000 level 12 # sun4
zs2		at obio0 addr 0xe0000000 level 12 # sun4/300

zstty*		at zs?
zskbd*		at zs?
wskbd*		at zskbd?

xbox*		at sbus?			# SBus Expansion box
sbus*		at xbox?

# The flags on the esp entries below work around deficiencies in the driver:
#	bits 0-7:  disable disconnect/reselect for the corresponding target
#	bits 8-15: disable synch negotiation for target [bit-8]
#	Note: targets 4-7 have disconnect/reselect enabled on the premise
#	      that tape devices normally have one of these targets. Tape
#	      devices should be allowed to disconnect for the SCSI bus
#	      to operate acceptably.

# sun4/300 SCSI - an NCR53c94 or equivalent behind
# an LSI Logic DMA controller
dma0		at obio0 addr 0xfa001000 level 4 # sun4/300
esp0		at obio0 addr 0xfa000000 level 4 flags 0x00ff000f

# sun4c or sun4m SCSI - an NCR53c94 or equivalent behind
# specialized DMA glue
dma0		at sbus0			# on-board SCSI
esp0		at sbus0 flags 0x00ff000f	# sun4c and sun4e
esp0		at dma0 flags 0x00ff000f	# sun4m

# FSBE/S SCSI - an NCR53c94 or equivalent behind
dma*		at sbus?			# SBus SCSI
esp*		at sbus? flags 0x00ff000f	# two flavours
esp*		at dma? flags 0x00ff000f	# depending on model

#sun4c, sun4e, sun4m
qlw*		at sbus?
#qla*		at sbus?

ledma0		at sbus?			# sun4m on-board
le0		at ledma0
ledma*		at sbus?			# Anteres sbus
le*		at ledma?

lebuffer0	at sbus0			# sun4m SBus
lebuffer*	at sbus?			# sun4m SBus
le0		at lebuffer0
le*		at lebuffer?

# sun4/300 and sun4c Ethernet - an AMD 7990 LANCE
le0		at sbus0			# sun4c/sun4e on-board
le*		at sbus?
le0		at obio0 addr 0xf9000000 level 6 # sun4/300

# sun4/100 and sun4/200 Ethernet - an Intel 82586 on-board
# or on a Multibus/VME card.
ie0		at obio0 addr 0xf6000000 level 6 # sun4/100 and sun4/200
ie1		at vmes0 addr 0xffe88000 level 5 vect 0x75
ie2		at vmes0 addr 0xff31ff02 level 5 vect 0x76
ie3		at vmes0 addr 0xff35ff02 level 5 vect 0x77
ie4		at vmes0 addr 0xff2dff02 level 5 vect 0x7c

hme*		at sbus?
qec*		at sbus?
qe*		at qec?
be*		at qec?
gem*		at sbus?

gentbi*		at mii?				# Generic 1000BASE-X ten-bit PHY
nsphy*		at mii?				# NS and compatible PHYs
qsphy*		at mii?				# Quality Semi QS6612 PHYs
luphy*		at mii?				# Lucent LU6612 PHY
ukphy*		at mii?

# Xylogics 753 or 7053 VME SMD disk controllers and disks, found
# on sun4 systems.
xdc0		at vmel0 addr 0xffffee80 level 3 vect 0x44
xdc1		at vmel0 addr 0xffffee90 level 3 vect 0x45
xdc2		at vmel0 addr 0xffffeea0 level 3 vect 0x46
xdc3		at vmel0 addr 0xffffeeb0 level 3 vect 0x47
xd*		at xdc?

# Xylogics 451 or 451 VME SMD disk controllers and disks, found
# on sun4 systems.
xyc0		at vmes0 addr 0xffffee40 level 3 vect 0x48
xyc1		at vmes0 addr 0xffffee48 level 3 vect 0x49
xy*		at xyc?

# NCR5380-based "Sun SCSI 3" VME SCSI controller.
# This driver has several flags which may be enabled by OR'ing
# the values and using the "flags" directive.  Valid flags are:
#	0x01		Use DMA (may be polled)
#	0x02		Use DMA completion interrupts
#	0x04		Allow disconnect/reselect
si0		at vmes0 addr 0xff200000 level 3 vect 0x40 flags 0x01

# NCR5380-based "SCSI Weird" on-board SCSI interface found
# on sun4/100 systems.  The flags are the same as the "si"
# controller.  Note, while DMA is enabled by default, only
# polled DMA works at this time, and reselects do not work
# on this particular controller.
sw0		at obio0 addr 0xfa000000 level 3 flags 0x01

bwtwo0		at sbus0			# sun4c on-board
bwtwo*		at sbus?			# sun4c and sun4m
bwtwo0		at obio0 addr 0xfd000000 level 4 # sun4/200
bwtwo0		at obio0 addr 0xfb300000 level 4 # sun4/100 and sun4/300 P4
wsdisplay*	at bwtwo?
cgtwo0		at vmes0 addr 0xff400000 level 4 vect 0xa8
wsdisplay*	at cgtwo?
cgthree*	at sbus?
wsdisplay*	at cgthree?
cgfour0		at obio0 addr 0xfb300000 level 4 # sun4/100 and sun4/300 P4
wsdisplay*	at cgfour?
cgsix0		at sbus?
cgsix*		at sbus?
cgsix0		at obio0 addr 0xfb000000 level 4 # sun4/100 and sun4/300 P4
wsdisplay*	at cgsix?
cgeight0	at obio0 addr 0xfb300000 level 4 # sun4/100 and sun4/300 P4
wsdisplay*	at cgeight?
tcx*		at sbus?
wsdisplay*	at tcx?
cgfourteen0	at obio0 addr 0x9c000000 flags 0x0001	# sun4m
cgfourteen1	at obio0 addr 0x90000000 flags 0x0001	# sun4m
wsdisplay*	at cgfourteen?
cgtwelve*	at sbus?
wsdisplay*	at cgtwelve?
zx*		at sbus?
wsdisplay*	at zx?
vigra*		at sbus?
wsdisplay*	at vigra?
pninek0		at sbus?
btcham0		at obio?
wsdisplay*	at pninek?
pnozz0		at sbus?
wsdisplay*	at pnozz?
tvtwo*		at sbus?
wsdisplay*	at tvtwo?
agten*		at sbus?
wsdisplay*	at agten?
mgx*		at sbus?
wsdisplay*	at mgx?
rfx*		at sbus?
wsdisplay*	at rfx?

scsibus*	at scsi?
sd*		at scsibus?
#st*		at scsibus?
cd*		at scsibus?

fdc0		at mainbus0			# sun4c controller
fdc0		at obio0			# sun4m controller
fd*		at fdc0

pseudo-device	rd 1
pseudo-device	loop 1
pseudo-device	bpfilter 1
pseudo-device	vlan
@


1.80
log
@remove obsolete INET kernel option
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.79 2015/01/21 20:05:29 miod Exp $
d103 4
@


1.79
log
@By popular demand, put NFS, ipv6 and vlan support in sparc installation media.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.78 2015/01/11 14:56:23 miod Exp $
a16 1
option		INET
@


1.78
log
@Unbreak sun4
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.77 2014/11/22 22:48:38 miod Exp $
d18 2
d223 1
@


1.77
log
@Driver for the ECC memory controller found on some sun4m (ss20), so that
recoverable memory errors no longer panic the kernel.
From NetBSD but the manual page.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.76 2014/10/10 05:43:35 deraadt Exp $
d69 1
a69 1
zs1		at obio0 addr 0xf0000000 level 1 # sun4
@


1.76
log
@Significant unification of RAMDISK* config files, making them diffable.
This makes it easier to remove components not required to do an install,
and subsequently add other desireable components ...
In snapshots (in various forks) for about a week.
Do some upgrades and installs, please.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.75 2012/07/22 18:30:16 deraadt Exp $
d53 2
@


1.75
log
@remove a few things to make this fit again; with miod
@
text
@d1 1
a1 2
#	$OpenBSD: RAMDISK,v 1.74 2012/04/19 21:10:11 deraadt Exp $
#	$NetBSD: GENERIC,v 1.28.2.1 1996/07/02 23:55:22 jtc Exp $
a2 1
# Machine architecture; required by config(8)
d4 1
d6 5
a10 2
# maxusers means mostly "let's get small" in terms of kernel malloc's
maxusers	2
d12 1
a12 2
# the size for MINIROOTSIZE must insure: 16384+size(bsd) < RELOC(boot,bootxx)
option		RAMDISK_HOOKS
d15 3
a17 1
#option		DDB		# need this to see what's happening
d19 2
a20 2
option		TIMEZONE=0	# time zone to adjust RTC time by
option		DST=0		# daylight saving time used by RTC
a21 12
option		SMALL_KERNEL
option		NO_PROPOLICE
option		FFS		# UFS
#option		NFSCLIENT	# Network File System client
option		CD9660		# ISO 9660 + Rock Ridge file system
option		INET		# IP + ICMP + TCP + UDP
#option		INET6		# IPv6 (needs INET)
option		BOOT_CONFIG	# add support for boot -c
#option		CRYPTO		# Cryptographic framework

# Options for variants of the Sun SPARC architecture.
# At least one is required.
d27 1
a27 8
#option		MMU_3L		# 3-level MMU on sun4/400

#option		KGDB		# support for kernel gdb
#option		KGDBDEV=0xc01	# kgdb device number (dev_t)
#option		KGDBRATE=38400	# baud rate

option		WSEMUL_SUN	# provide sun terminal emulation; required
option		WSEMUL_NO_VT100	# do not provide vt100 terminal emulation
d29 2
a30 2
# Generic swap; second partition of root disk or network.
config		bsd	root on rd0a
d32 10
a41 22
# Main bus and CPU .. all systems.
mainbus0 at root
cpu0	at mainbus0

# Bus types found on SPARC systems.
sbus0	at mainbus0				# sun4c and sun4e
obio0	at mainbus0				# sun4 and sun4m
vmes0	at mainbus0				# sun4
vmel0	at mainbus0				# sun4
iommu0	at mainbus0				# sun4m
sbus0	at iommu0				# sun4m

#audioamd0 at mainbus0				# sun4c
#audioamd0 at obio0				# sun4m
#audioamd0 at sbus0				# sun4m
#audio*	at audioamd?

auxreg*	at mainbus0				# sun4c and sun4e
auxreg*	at obio0				# sun4m

# Power status and control register found on Sun4m systems
power0	at obio0
d45 14
a58 21
clock0	at mainbus0				# sun4c and sun4e
clock0	at obio0				# sun4m
clock0	at obio0 addr 0xf2000000		# sun4/300

# Intersil clock found on 4/100 and 4/200 systems.
oclock0	at obio0 addr 0xf3000000		# sun4/100 and sun4/200

# Memory error registers.
memreg0	at mainbus0				# sun4c and sun4e
memreg0	at obio0				# sun4m
memreg0	at obio0 addr 0xf4000000		# sun4

# Timer chip found on 4/300, sun4c, and sun4m systems.
timer0	at mainbus0				# sun4c and sun4e
timer0	at obio0				# sun4m
timer0	at obio0 addr 0xef000000		# sun4/300

# EEPROM found on 4/100 and 4/200 systems.  Note that the 4/300
# doesn't use this driver; the `EEPROM' is in the NVRAM on the
# Mostek clock chip on 4/300 systems.
eeprom0	at obio0 addr 0xf2000000		# sun4/100 and sun4/200
d62 16
a77 19
zs0	at mainbus0					# sun4c and sun4e
zs0	at obio0					# sun4m
zs0	at obio0 addr 0xf1000000 level 12		# sun4
zs1	at mainbus0					# sun4c and sun4e
zs1	at obio0					# sun4m
zs1	at obio0 addr 0xf0000000 level 12		# sun4
zs2	at obio0 addr 0xe0000000 level 12		# sun4/300

zstty* at zs?
zskbd* at zs?
wskbd* at zskbd?

# SUNW,xbox SBus Expansion Subsystem
xbox*	at sbus?					# SBus Expansion box
sbus*	at xbox?

#
# Note the flags on the esp entries below, that work around
# deficiencies in the current driver:
a83 1
#
d87 2
a88 2
dma0	at obio0 addr 0xfa001000 level 4		# sun4/300
esp0	at obio0 addr 0xfa000000 level 4 flags 0x00ff000f
d92 3
a94 3
dma0	at sbus0					# on-board SCSI
esp0	at sbus0 flags 0x00ff000f			# sun4c and sun4e
esp0	at dma0 flags 0x00ff000f			# sun4m
d97 13
a109 15
dma*	at sbus?					# SBus SCSI
esp*	at sbus? flags 0x00ff000f			# two flavours
esp*	at dma? flags 0x00ff000f			# depending on model

# sun4m Ethernet - an AMD 7990 LANCE behind specialized DMA glue
ledma0	at sbus?					# sun4m on-board
le0	at ledma0					#
ledma*	at sbus?					# Anteres sbus
le*	at ledma?					#

# Additional SBus LANCE devices - glued on by lebuffer
lebuffer0	at sbus0				# sun4m SBus
lebuffer*	at sbus?				# sun4m SBus
le0	at lebuffer0					#
le*	at lebuffer?					#
d112 3
a114 4
le0	at sbus0					# sun4c/sun4e on-board
le*	at sbus?

le0	at obio0 addr 0xf9000000 level 6		# sun4/300
d118 17
a134 23
ie0	at obio0 addr 0xf6000000 level 6		# sun4/100 and sun4/200

ie1	at vmes0 addr 0xffe88000 level 5 vect 0x75
ie2	at vmes0 addr 0xff31ff02 level 5 vect 0x76
ie3	at vmes0 addr 0xff35ff02 level 5 vect 0x77
ie4	at vmes0 addr 0xff2dff02 level 5 vect 0x7c

# HappyMeal ethernet
hme*	at sbus?
# Media Independent Interface (mii) drivers (required for hme)
gentbi*	at mii?				# Generic 1000BASE-X ten-bit PHY
nsphy*	at mii?				# NS and compatible PHYs
qsphy*	at mii?				# Quality Semi QS6612 PHYs
luphy*	at mii?				# Lucent LU6612 PHY
ukphy*	at mii?

# Quad-ethernet glue device, and sub-devices
qec*	at sbus?
qe*	at qec?
be*	at qec?

# Gigabit ethernet
gem*	at sbus?
d138 5
a142 5
xdc0	at vmel0 addr 0xffffee80 level 3 vect 0x44
xdc1	at vmel0 addr 0xffffee90 level 3 vect 0x45
xdc2	at vmel0 addr 0xffffeea0 level 3 vect 0x46
xdc3	at vmel0 addr 0xffffeeb0 level 3 vect 0x47
xd*	at xdc?
d146 3
a148 18
xyc0	at vmes0 addr 0xffffee40 level 3 vect 0x48
xyc1	at vmes0 addr 0xffffee48 level 3 vect 0x49
xy*	at xyc?

# Sun PCMCIA bridge
#stp*	at sbus?
#pcmcia* at stp?

# PCMCIA controller found on Tadpole SPARCbook
#tslot*	at sbus?
#pcmcia* at tslot?

# PCMCIA devices
#wi*	at pcmcia?		# WaveLAN IEEE 802.11DS
#an*	at pcmcia?		# Aironet IEEE 802.11DS
#ne*	at pcmcia?		# NE2000-compat ethernet
#ep*	at pcmcia?		# PCMCIA based 3C5xx ethernet
#com*	at pcmcia?		# PCMCIA modems/serial ports
d152 1
a152 3
# the values and using the "flags" directive.
# Valid flags are:
#
d156 1
a156 5
#
# E.g. the following would enable DMA, interrupts, and reselect:
# si0	at vmes0 addr 0xff200000 level 3 vect 0x40 flags 0x07
#
si0	at vmes0 addr 0xff200000 level 3 vect 0x40 flags 0x01
d163 1
a163 1
sw0	at obio0 addr 0xfa000000 level 3 flags 0x01
d165 22
a186 40
# Sun "bwtwo" black and white framebuffer, found on sun4, sun4c, and sun4m
# systems.
bwtwo0	at sbus0				# sun4c on-board
bwtwo*	at sbus?				# sun4c and sun4m
bwtwo0	at obio0 addr 0xfd000000 level 4	# sun4/200
bwtwo0	at obio0 addr 0xfb300000 level 4	# sun4/100 and sun4/300 P4
wsdisplay* at bwtwo?

# Sun "cgtwo" VME color framebuffer.
cgtwo0	at vmes0 addr 0xff400000 level 4 vect 0xa8
wsdisplay* at cgtwo?

# Sun "cgthree" SBus color framebuffer.
cgthree* at sbus?
wsdisplay* at cgthree?

# Sun "cgfour" color framebuffer.
cgfour0	at obio0 addr 0xfb300000 level 4	# sun4/100 and sun4/300 P4
wsdisplay* at cgfour?

# Sun "cgsix" accelerated color framebuffer.
cgsix0	at sbus?
cgsix*	at sbus?
cgsix0	at obio0 addr 0xfb000000 level 4	# sun4/100 and sun4/300 P4
wsdisplay* at cgsix?

# Sun "cgeight" 24-bit framebuffer.
cgeight0 at obio0 addr 0xfb300000 level 4	# sun4/100 and sun4/300 P4
wsdisplay* at cgeight?

# Sun "tcx" accelerated color framebuffer.
tcx*	at sbus?
wsdisplay* at tcx?

# Sun "cgfourteen" accelerated 24-bit framebuffer.
cgfourteen0 at obio0 addr 0x9c000000 flags 0x0001	# sun4m
cgfourteen1 at obio0 addr 0x90000000 flags 0x0001	# sun4m
wsdisplay* at cgfourteen?

# Sun "cgtwelve" (GS) accelerated 24-bit framebuffer.
d188 31
a218 57
wsdisplay* at cgtwelve?

# Sun "leo" (ZX) accelerated 24-bit framebuffer.
zx*	at sbus?
wsdisplay* at zx?

# Vigra VS10 or VS12 framebuffer.
vigra*	at sbus?
wsdisplay* at vigra?

# Weitek P9000 found on Tadpole SPARCbook 3, with external ``Chameleon'' RAMDAC
pninek0	at sbus?
btcham0	at obio?
wsdisplay* at pninek?

# Weitek P9100 found on Tadpole SPARCbook 3GS/3GX/3TX/3XP
pnozz0	at sbus?
wsdisplay* at pnozz?

# Parallax XVideo and PowerVideo
tvtwo* at sbus?
wsdisplay* at tvtwo?

# Fujitsu AG-10e framebuffer.
agten* at sbus?
wsdisplay* at agten?

# Southland Media Systems MGX/MGXPlus framebuffer.
mgx* at sbus?
wsdisplay* at mgx?

# Vitec/Connectware/AP&D RasterFlex framebuffer series.
rfx* at sbus?
wsdisplay* at rfx?

# SCSI bus layer.  SCSI devices attach to the SCSI bus, which attaches
# to the underlying hardware controller.

# These entries find devices on all SCSI busses and assign
# unit numers dynamically.
scsibus* at scsi?
sd*	at scsibus?		# SCSI disks
#st*	at scsibus?		# SCSI tapes
cd*	at scsibus?		# SCSI CD-ROMs
#ch*	at scsibus?		# SCSI changer devices
#uk*	at scsibus?		# unknown SCSI devices

# Floppy controller and drive found on SPARCstations.
fdc0	at mainbus0				# sun4c controller
fdc0	at obio0				# sun4m controller
fd*	at fdc0					# the drive itself

pseudo-device	rd	2
pseudo-device	loop	1	# network loopback
pseudo-device	bpfilter 1	# packet filter
#pseudo-device	pty	4	# pseudo-terminals
#pseudo-device	bio	1	# ioctl multiplexing device
@


1.74
log
@shrink
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.73 2011/07/04 22:53:53 tedu Exp $
d27 1
a27 1
option		CRYPTO		# Cryptographic framework
d317 1
a317 1
st*	at scsibus?		# SCSI tapes
@


1.73
log
@remove compat_svr4 support.  ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.72 2011/06/29 20:52:09 matthew Exp $
d319 1
a319 1
ch*	at scsibus?		# SCSI changer devices
d331 1
a331 1
pseudo-device	bio	1	# ioctl multiplexing device
@


1.72
log
@Replace all instances of "scsibus* at hba?" with a single "scsibus* at
scsi?" rule, similar to how ethernet PHY drivers attach at mii.

Discussed on icb.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.71 2010/07/10 19:32:20 miod Exp $
a40 2

#option		COMPAT_SVR4	# compatibility with SVR4 binaries
@


1.71
log
@sun4e (i.e. SPARCengine 1e) support. This platform is a mix between sun4 and
sun4c, as it has a sun4c OpenPROM but a sun4 8KB pagesize. VME devices are
not supported yet.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.70 2010/07/03 03:59:17 krw Exp $
a313 3
scsibus* at esp?
scsibus* at si?
scsibus* at sw?
d317 1
@


1.70
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.69 2010/07/02 19:57:15 tedu Exp $
d33 1
d55 1
a55 1
sbus0	at mainbus0				# sun4c
d67 1
a67 1
auxreg*	at mainbus0				# sun4c
d75 1
a75 1
clock0	at mainbus0				# sun4c
d83 1
a83 1
memreg0	at mainbus0				# sun4c
d88 1
a88 1
timer0	at mainbus0				# sun4c
d99 1
a99 1
zs0	at mainbus0					# sun4c
d102 1
a102 1
zs1	at mainbus0					# sun4c
d134 1
a134 1
esp0	at sbus0 flags 0x00ff000f			# sun4c
d155 1
a155 1
le0	at sbus0					# sun4c on-board
@


1.69
log
@remove support for compat_sunos (and m68k4k).  ok deraadt guenther
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.68 2010/06/07 20:46:21 miod Exp $
a322 1
#ss*	at scsibus?		# SCSI scanners
@


1.68
log
@Sync with GENERIC and SUN4.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.67 2010/04/19 10:42:04 dcoppa Exp $
a40 2
# Options for SPARCstation hardware
#option		COMPAT_SUNOS	# compatibility with SunOS binaries
@


1.67
log
@Add missing bits for complete softraid support to sparc/sparc64
ramdisks.

OK marco@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.66 2009/07/28 12:47:34 deraadt Exp $
d81 1
a81 2
oclock0	at obio0 addr 0xf3000000		# sun4/200
oclock0	at obio0 addr 0x03000000		# sun4/100
d86 1
a86 2
memreg0	at obio0 addr 0xf4000000		# sun4/200 and sun4/300
memreg0	at obio0 addr 0x04000000		# sun4/100
d96 1
a96 2
eeprom0	at obio0 addr 0xf2000000		# sun4/200
eeprom0	at obio0 addr 0x02000000		# sun4/100
d102 1
a102 2
zs0	at obio0 addr 0xf1000000 level 12		# sun4/200 and sun4/300
zs0	at obio0 addr 0x01000000 level 12		# sun4/100
d105 1
a105 2
zs1	at obio0 addr 0xf0000000 level 12		# sun4/200 and sun4/300
zs1	at obio0 addr 0x00000000 level 12		# sun4/100
d163 1
a163 2
ie0	at obio0 addr 0xf6000000 level 6		# sun4/200 on-board
ie0	at obio0 addr 0x06000000 level 6		# sun4/100 on-board
d235 1
a235 1
sw0	at obio0 addr 0x0a000000 level 3 flags 0x01
d242 1
a242 2
bwtwo0	at obio0 addr 0xfb300000 level 4	# sun4/300 in P4 slot
bwtwo0	at obio0 addr 0x0b300000 level 4	# sun4/100 in P4 slot
d254 1
a254 2
cgfour0	at obio0 addr 0xfb300000 level 4	# sun4/300 P4
cgfour0	at obio0 addr 0x0b300000 level 4	# sun4/100 P4
d260 1
a260 2
cgsix0	at obio0 addr 0xfb000000 level 4	# sun4/300 P4
cgsix0	at obio0 addr 0x0b000000 level 4	# sun4/100 P4
d264 1
a264 2
cgeight0 at obio0 addr 0xfb300000 level 4	# sun4/300 P4
cgeight0 at obio0 addr 0x0b300000 level 4	# sun4/100 P4
@


1.66
log
@gem(4) + gentbi(4) do fit; requested by brad
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.65 2008/07/02 14:01:35 todd Exp $
d27 1
@


1.65
log
@add bio & bioctl
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.64 2008/06/08 20:37:39 deraadt Exp $
d178 1
d182 1
d188 3
@


1.64
log
@alpha/conf/RAMDISK
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.63 2008/03/06 08:23:49 deraadt Exp $
d341 1
a341 1

@


1.63
log
@Change ramdisk filesystem size from 4352 to 4000 blocks, so that
bsd.rd does not overlap the boot code... this problem is starting to
feel familiar.. tested by myself and claudio
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.62 2007/05/29 09:54:03 sobrado Exp $
a23 1
#option		FIFO		# FIFOs; RECOMMENDED
@


1.62
log
@use the right capitalization for `SBus'

ok jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.61 2007/05/01 15:22:23 deraadt Exp $
d12 1
a12 1
option		MINIROOTSIZE=4352
@


1.61
log
@RAMDISK kernels do not need DIAGNOSTIC
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.60 2006/12/10 16:14:20 miod Exp $
d251 1
a251 1
# Sun "cgthree" Sbus color framebuffer.
@


1.60
log
@Allow ``flags 0'' to work to disable DMA for si(4) and sw(4) - it would get
ignored previously.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.59 2006/12/09 20:06:46 miod Exp $
a20 1
option		DIAGNOSTIC	# internal consistency checks
@


1.59
log
@Do not make sun terminal emulation selected by the wsemul_sun frame buffer
attribute anymore; remove it and use option WSEMUL_SUN instead, which gets
added to all sparc* kernels.

While there, do not compile vt100 emulation on sparc* kernels, this saves 16+
KB of text.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.58 2006/06/26 22:16:23 miod Exp $
d230 1
a230 2
# By default, DMA is enabled in the driver.
si0	at vmes0 addr 0xff200000 level 3 vect 0x40
d237 1
a237 1
sw0	at obio0 addr 0x0a000000 level 3
@


1.58
log
@Enable wide targets on FAS366 esp; note that this changes the way esp
user-controllable device flags are parsed, be sure to rerun config(8) on your
next kernel compile.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.57 2005/12/06 20:18:57 pedro Exp $
d45 3
@


1.57
log
@Remove fdescfs
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.56 2005/07/08 12:36:36 miod Exp $
d133 1
a133 1
esp0	at obio0 addr 0xfa000000 level 4 flags 0xff0f	#
d138 2
a139 2
esp0	at sbus0 flags 0xff0f				# sun4c
esp0	at dma0 flags 0xff0f				# sun4m
d143 2
a144 2
esp*	at sbus? flags 0xff0f				# two flavours
esp*	at dma? flags 0xff0f				# depending on model
@


1.56
log
@Allow more than one auxio device to attach, and attach both SPARCbook auxio
registers. However, those are handled specifically since they do not have
the same meaning as the regular sun4c/sun4m auxio register.

A specific auxregbisc() function is provided for explicit sparcbook operation.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.55 2005/05/01 07:54:42 david Exp $
a24 1
#option		FDESC		# /dev/fd
@


1.55
log
@spacing; ok miod@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.54 2005/04/14 20:15:58 brad Exp $
d67 2
a68 2
auxreg0	at mainbus0				# sun4c
auxreg0	at obio0				# sun4m
@


1.54
log
@+luphy
@
text
@d1 2
a2 2
# 	$OpenBSD: RAMDISK,v 1.53 2005/01/10 06:42:42 deraadt Exp $
# 	$NetBSD: GENERIC,v 1.28.2.1 1996/07/02 23:55:22 jtc Exp $
@


1.53
log
@ledma*,  and le* at ledma? will help with anteres units; miod ok
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.52 2004/09/16 09:14:04 mickey Exp $
d180 1
@


1.52
log
@cleanup deafult locators (blah ?); please check that your most hated architecture is still fluffy (;
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.51 2004/03/12 06:04:01 deraadt Exp $
d150 2
@


1.51
log
@commented pcmcia stuff
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.50 2004/03/09 15:24:27 miod Exp $
d112 3
a114 3
zstty* at zs? channel ?
zskbd* at zs? channel ?
wskbd* at zskbd? console ?
d176 2
a177 2
nsphy*	at mii? phy ?				# NS and compatible PHYs
qsphy*	at mii? phy ?				# Quality Semi QS6612 PHYs
d190 1
a190 1
xd*	at xdc? drive ?
d196 1
a196 1
xy*	at xyc? drive ?
d200 1
a200 1
#pcmcia* at stp? socket ?
d204 1
a204 1
#pcmcia* at tslot? socket ?
d207 5
a211 5
#wi*	at pcmcia? function ?			# WaveLAN IEEE 802.11DS
#an*	at pcmcia? function ?			# Aironet IEEE 802.11DS
#ne*	at pcmcia? function ?			# NE2000-compat ethernet
#ep*	at pcmcia? function ?			# PCMCIA based 3C5xx ethernet
#com*	at pcmcia? function ?			# PCMCIA modems/serial ports
d323 6
a328 6
sd*	at scsibus? target ? lun ?		# SCSI disks
st*	at scsibus? target ? lun ?		# SCSI tapes
cd*	at scsibus? target ? lun ?		# SCSI CD-ROMs
ch*	at scsibus? target ? lun ?		# SCSI changer devices
#ss*	at scsibus? target ? lun ?		# SCSI scanners
#uk*	at scsibus? target ? lun ?		# unknown SCSI devices
@


1.50
log
@Typos
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.49 2004/03/01 10:08:21 miod Exp $
d197 15
@


1.49
log
@rfx fits on the installation media.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.48 2004/01/20 21:18:50 deraadt Exp $
d275 1
a275 1
# Weitex P9000 found on Tadpole SPARCbook 3, with external ``Chameleon'' RAMDAC
@


1.48
log
@do not put INET6 here, we want bsd.rd that fits
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.47 2004/01/04 00:29:50 deraadt Exp $
d295 4
@


1.47
log
@put INET6, rtsol, and ping6 onto media where it fits.  install.sub changes
which begin to enable use of this will follow at a later time.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.46 2003/06/18 17:40:31 miod Exp $
d28 1
a28 1
option		INET6		# IPv6 (needs INET)
@


1.46
log
@Rename p9k to pninek, since device base names with digits are confusing;
per deraadt@@'s request.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.45 2003/06/17 21:21:31 miod Exp $
d28 1
@


1.45
log
@New driver and wsdisplay type for the Weitek Power9000 and Brooktree Bt445
combination, found on the Tadpole SPARCbook 3 only (later model use the
Power9100 and are already supported).

Untested for lack of hardware and volunteers, but carefully crafted; if it
does not work out of the box, this should be a good starting point.

"worth having in the tree" millert@@
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.44 2003/05/25 21:55:44 miod Exp $
d275 1
a275 1
p9k0	at sbus?
d277 1
a277 1
wsdisplay* at p9k?
@


1.44
log
@mgx fits on the floppies, so add it as well.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.43 2003/05/14 01:13:48 miod Exp $
d274 6
a279 1
# Weitek p9100 found on Tadpole 3GS/3GX
@


1.43
log
@
No more flags either for those frame buffer drivers.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.42 2003/05/14 01:07:22 miod Exp $
d285 4
@


1.42
log
@zs driver on sparc does not take flags anymore since 10 months, so don't
mention any.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.41 2003/05/13 22:45:11 miod Exp $
d254 1
a254 1
tcx*	at sbus? flags 0x0001
d263 1
a263 1
cgtwelve*	at sbus? flags 0x0001
@


1.41
log
@Add option NO_PROPOLICE, which explicitely disables the use of the propolice
stack protection when building kernels. Intended to be used on installation
media, with tight space constraints - currently, only added where
SMALL_KERNEL was already defined.

Not thoroughly tested, but requested by deraadt.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.40 2003/05/13 17:24:10 miod Exp $
d103 2
a104 2
zs0	at obio0 addr 0xf1000000 level 12 flags 0x103	# sun4/200 and sun4/300
zs0	at obio0 addr 0x01000000 level 12 flags 0x103	# sun4/100
d107 3
a109 3
zs1	at obio0 addr 0xf0000000 level 12 flags 0x103	# sun4/200 and sun4/300
zs1	at obio0 addr 0x00000000 level 12 flags 0x103	# sun4/100
zs2	at obio0 addr 0xe0000000 level 12 flags 0x103	# sun4/300
@


1.40
log
@Make the "slot" and "offset" locators for sbus drivers optional in
configuration lines.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.39 2003/03/09 22:41:54 miod Exp $
d20 1
@


1.39
log
@zx fits on the floppies.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.38 2003/03/06 21:48:24 miod Exp $
d62 1
a62 1
#audioamd0 at sbus0 slot ? offset ?		# sun4m
d115 1
a115 1
xbox*	at sbus? slot ? offset ?			# SBus Expansion box
d136 2
a137 2
dma0	at sbus0 slot ? offset ?			# on-board SCSI
esp0	at sbus0 slot ? offset ? flags 0xff0f		# sun4c
d141 2
a142 2
dma*	at sbus? slot ? offset ?			# SBus SCSI
esp*	at sbus? slot ? offset ? flags 0xff0f		# two flavours
d146 1
a146 1
ledma0	at sbus? slot ? offset ?			# sun4m on-board
d150 2
a151 2
lebuffer0	at sbus0 slot ? offset ?		# sun4m SBus
lebuffer*	at sbus? slot ? offset ?		# sun4m SBus
d156 2
a157 2
le0	at sbus0 slot ? offset ?			# sun4c on-board
le*	at sbus? slot ? offset ?
d172 1
a172 1
hme*	at sbus? slot ? offset ?
d178 1
a178 1
qec*	at sbus? slot ? offset ?
d220 2
a221 2
bwtwo0	at sbus0 slot ? offset ?		# sun4c on-board
bwtwo*	at sbus? slot ? offset ?		# sun4c and sun4m
d232 1
a232 1
cgthree* at sbus? slot ? offset ?
d241 2
a242 2
cgsix0	at sbus? slot ? offset ?
cgsix*	at sbus? slot ? offset ?
d253 1
a253 1
tcx*	at sbus? slot ? offset ? flags 0x0001
d262 1
a262 1
cgtwelve*	at sbus? slot ? offset ? flags 0x0001
d266 1
a266 1
zx*	at sbus? slot ? offset ?
d270 1
a270 1
vigra*	at sbus? slot ? offset ?
d274 1
a274 1
pnozz0	at sbus? slot ? offset ?
d278 1
a278 1
tvtwo* at sbus? slot ? offset ?
d282 1
a282 1
agten* at sbus? slot ? offset ?
@


1.38
log
@Premiliminary driver for the Fujitsu AG-10e SBus frame buffer.
It will currently only work in 8bit mode, and without using the i128
acceleration features (but that's a good start for 3.3).

Written initially in november 2002, but it took some time in experiments
until I realized the ramdac had to be fed values shifted left by 16 bits in
order to work as intended, for no good reason.

So, I am now officially founding a ``RAMDAC Hater's Club''. Feel free to
apply.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.37 2003/03/05 14:34:39 miod Exp $
d264 4
@


1.37
log
@Driver for the Parallax XVideo and PowerVideo frame buffers.

Currently limited to dump frame buffer operation, the acceleration features
will be used later...

Code by me, tests on real hardware by Paul Weissmann.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.36 2003/01/31 22:00:22 miod Exp $
d276 4
@


1.36
log
@Various typos; Andrey Matveev
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.35 2002/09/20 11:17:55 fgsch Exp $
d272 4
@


1.35
log
@Support to run the 24 bit fb in 8 bit mode or cg12 in 1 bit mode
via flags, using 0x0001.
miod@@ ok.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.33 2002/08/30 09:31:33 miod Exp $
d29 1
a29 1
# Options for variants of the Sun SPARC architecure.
@


1.34
log
@Driver for the Vigra VS10 and VS12 SBus framebuffers, and possibly more from
this series.
Thanks to Andrey Smagin (andrey at smagin dot com) for providing a VS10 card.
@
text
@d253 1
a253 1
tcx*	at sbus? slot ? offset ?
d257 2
a258 2
cgfourteen0 at obio0 addr 0x9c000000		# sun4m
cgfourteen1 at obio0 addr 0x90000000		# sun4m
d262 1
a262 1
cgtwelve*	at sbus? slot ? offset ?
@


1.33
log
@Add pnozz and wsdisplay at pnozz for Tadpole users. Spotted by millert@@
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.32 2002/08/21 22:18:29 miod Exp $
d264 4
@


1.32
log
@Recognize both VSIMM slots, and allow one cgfourteen to attach to each
of them.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.31 2002/08/12 10:44:03 miod Exp $
d264 4
@


1.31
log
@Convert sparc console code from rcons and pseudo-devices to rasops and wscons.
For most framebuffers it is faster.

Other changes include:
o 24 bit support in tcx(4) for the S24 framebuffer
o accelerated cgsix(4) text console
o new cgtwelve(4) driver for the GS framebuffer
o improved serial driver code
o better keyboard support

The following framebuffers have not been tested but should work: cgfour,
cgeight and cgfourteen

These changes will require XF4 changes, to use Xwsfb instead of Xsun*, to be
commited later today.

Most of the work by me during the LSM and the week after, with code borrowed
from jason@@, NetBSD (new serial code), and feedback from mickey@@. Work on
pnozz(4) done by millert@@
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.30 2002/07/28 01:39:14 krw Exp $
d257 2
a258 1
cgfourteen0	at obio0			# sun4m
@


1.30
log
@Add 'option NFSCLIENT' to macppc RAMDISK.

Delete (comment out) 'option NFSCLIENT' in sparc, sparc64, and sun3
RAMDISKs.

This brings the presence of /sbin/mount_nfs in the boot image and the
presence of NFSCLIENT in the RAMDISK kernel into alignment. Except for
sparc64 which will now have mount_nfs removed from the boot image to
save space.

mvme88k RAMDISK did not need to be adjusted as it only *looks* like it
does not have NFSCLIENT. It actually includes the system GENERIC.

Investigation for inconsistancies prompted by todd@@.

This solution recommended by deraadt@@.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.29 2001/10/09 21:35:45 deraadt Exp $
a41 1
option		RASTERCONSOLE	# fast rasterop console
d110 4
d219 1
a219 3
# systems.  If your sun4 system has a cgfour installed in the P4 slot,
# the P4 entries for "bwtwo" will attach to the overlay plane of the
# "cgfour".
d225 1
d227 1
a227 1
# Sun "cgtwo" VME color framebuffer
d229 1
d231 1
a231 2
# Sun "cgthree" Sbus color framebuffer
cgthree0 at sbus? slot ? offset ?
d233 1
a233 2
#cgthree0 at obio? slot ? offset ?		# sun4m
#cgthree* at obio? slot ? offset ?		# sun4m
d235 1
a235 2
# Sun "cgfour" color framebuffer with overlay plane.  See above comment
# regarding overlay plane.
d238 1
d245 1
d247 1
a247 1
# Sun "cgeight" 24-bit framebuffer
d250 1
a252 1
tcx0	at sbus? slot ? offset ?
d254 1
d258 5
a283 1
pseudo-device	kbd		# Sun keyboard
@


1.29
log
@no more NBUF=
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.28 2001/06/27 05:46:27 art Exp $
d22 1
a22 1
option		NFSCLIENT	# Network File System client
@


1.29.4.1
log
@sync to -current
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.29 2001/10/09 21:35:45 deraadt Exp $
d22 1
a22 1
#option		NFSCLIENT	# Network File System client
d42 1
a110 4
zstty* at zs? channel ?
zskbd* at zs? channel ?
wskbd* at zskbd? console ?

d216 3
a218 1
# systems.
a223 1
wsdisplay* at bwtwo?
d225 1
a225 1
# Sun "cgtwo" VME color framebuffer.
a226 1
wsdisplay* at cgtwo?
d228 2
a229 1
# Sun "cgthree" Sbus color framebuffer.
d231 2
a232 1
wsdisplay* at cgthree?
d234 2
a235 1
# Sun "cgfour" color framebuffer.
a237 1
wsdisplay* at cgfour?
a243 1
wsdisplay* at cgsix?
d245 1
a245 1
# Sun "cgeight" 24-bit framebuffer.
a247 1
wsdisplay* at cgeight?
d250 2
a251 2
tcx*	at sbus? slot ? offset ? flags 0x0001
wsdisplay* at tcx?
d254 1
a254 15
cgfourteen0 at obio0 addr 0x9c000000 flags 0x0001	# sun4m
cgfourteen1 at obio0 addr 0x90000000 flags 0x0001	# sun4m
wsdisplay* at cgfourteen?

# Sun "cgtwelve" (GS) accelerated 24-bit framebuffer.
cgtwelve*	at sbus? slot ? offset ? flags 0x0001
wsdisplay* at cgtwelve?

# Vigra VS10 or VS12 framebuffer.
vigra*	at sbus? slot ? offset ?
wsdisplay* at vigra?

# Weitek p9100 found on Tadpole 3GS/3GX
pnozz0	at sbus? slot ? offset ?
wsdisplay* at pnozz?
d276 1
@


1.29.4.2
log
@sync
@
text
@d1 1
a1 1
# 	$OpenBSD$
a19 1
option		NO_PROPOLICE
d29 1
a29 1
# Options for variants of the Sun SPARC architecture.
d62 1
a62 1
#audioamd0 at sbus0				# sun4m
d102 2
a103 2
zs0	at obio0 addr 0xf1000000 level 12		# sun4/200 and sun4/300
zs0	at obio0 addr 0x01000000 level 12		# sun4/100
d106 3
a108 3
zs1	at obio0 addr 0xf0000000 level 12		# sun4/200 and sun4/300
zs1	at obio0 addr 0x00000000 level 12		# sun4/100
zs2	at obio0 addr 0xe0000000 level 12		# sun4/300
d115 1
a115 1
xbox*	at sbus?					# SBus Expansion box
d136 2
a137 2
dma0	at sbus0					# on-board SCSI
esp0	at sbus0 flags 0xff0f				# sun4c
d141 2
a142 2
dma*	at sbus?					# SBus SCSI
esp*	at sbus? flags 0xff0f				# two flavours
d146 1
a146 1
ledma0	at sbus?					# sun4m on-board
d150 2
a151 2
lebuffer0	at sbus0				# sun4m SBus
lebuffer*	at sbus?				# sun4m SBus
d156 2
a157 2
le0	at sbus0					# sun4c on-board
le*	at sbus?
d172 1
a172 1
hme*	at sbus?
d178 1
a178 1
qec*	at sbus?
d220 2
a221 2
bwtwo0	at sbus0				# sun4c on-board
bwtwo*	at sbus?				# sun4c and sun4m
d232 1
a232 1
cgthree* at sbus?
d241 2
a242 2
cgsix0	at sbus?
cgsix*	at sbus?
d253 1
a253 1
tcx*	at sbus?
d262 1
a262 1
cgtwelve*	at sbus?
a264 4
# Sun "leo" (ZX) accelerated 24-bit framebuffer.
zx*	at sbus?
wsdisplay* at zx?

d266 1
a266 1
vigra*	at sbus?
d270 1
a270 1
pnozz0	at sbus?
a271 8

# Parallax XVideo and PowerVideo
tvtwo* at sbus?
wsdisplay* at tvtwo?

# Fujitsu AG-10e framebuffer.
agten* at sbus?
wsdisplay* at agten?
@


1.28
log
@UVM is no longer an option.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.27 2001/06/23 19:46:59 deraadt Exp $
a8 2
# force default minimum number of buffers and dependents
option		NBUF=16
@


1.27
log
@no more kernfs
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.26 2001/05/17 00:57:59 pvalchev Exp $
a20 1
option		UVM		# UVM virtual memory system ; required
@


1.26
log
@It's Daylight Saving Time, not Savings.  Fix comments.
Discussed with pjanzen@@
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.25 2001/05/16 09:06:37 deraadt Exp $
a28 1
option		KERNFS		# /kern
@


1.25
log
@use SMALL_KERNEL option
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.24 2001/05/10 10:34:41 art Exp $
d19 1
a19 1
option		DST=0		# daylight savings time used by RTC
@


1.24
log
@UVM is no longer optional on sparc.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.23 1999/10/29 14:14:27 art Exp $
d22 1
@


1.23
log
@Use UVM by default on sparc.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.22 1999/06/23 17:02:06 deraadt Exp $
d21 1
a21 1
option		UVM		# UVM virtual memory system
@


1.23.2.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.23 1999/10/29 14:14:27 art Exp $
d19 1
a19 1
option		DST=0		# daylight saving time used by RTC
d21 1
a21 1
option		SMALL_KERNEL
d28 1
@


1.23.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.23.2.1 2001/07/04 10:23:14 niklas Exp $
d9 2
@


1.23.2.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
# 	$OpenBSD$
d22 1
a22 1
#option		NFSCLIENT	# Network File System client
d29 1
a29 1
# Options for variants of the Sun SPARC architecture.
d42 1
a110 4
zstty* at zs? channel ?
zskbd* at zs? channel ?
wskbd* at zskbd? console ?

d216 3
a218 1
# systems.
a223 1
wsdisplay* at bwtwo?
d225 1
a225 1
# Sun "cgtwo" VME color framebuffer.
a226 1
wsdisplay* at cgtwo?
d228 2
a229 1
# Sun "cgthree" Sbus color framebuffer.
d231 2
a232 1
wsdisplay* at cgthree?
d234 2
a235 1
# Sun "cgfour" color framebuffer.
a237 1
wsdisplay* at cgfour?
a243 1
wsdisplay* at cgsix?
d245 1
a245 1
# Sun "cgeight" 24-bit framebuffer.
a247 1
wsdisplay* at cgeight?
d250 2
a251 2
tcx*	at sbus? slot ? offset ? flags 0x0001
wsdisplay* at tcx?
d254 1
a254 27
cgfourteen0 at obio0 addr 0x9c000000 flags 0x0001	# sun4m
cgfourteen1 at obio0 addr 0x90000000 flags 0x0001	# sun4m
wsdisplay* at cgfourteen?

# Sun "cgtwelve" (GS) accelerated 24-bit framebuffer.
cgtwelve*	at sbus? slot ? offset ? flags 0x0001
wsdisplay* at cgtwelve?

# Sun "leo" (ZX) accelerated 24-bit framebuffer.
zx*	at sbus? slot ? offset ?
wsdisplay* at zx?

# Vigra VS10 or VS12 framebuffer.
vigra*	at sbus? slot ? offset ?
wsdisplay* at vigra?

# Weitek p9100 found on Tadpole 3GS/3GX
pnozz0	at sbus? slot ? offset ?
wsdisplay* at pnozz?

# Parallax XVideo and PowerVideo
tvtwo* at sbus? slot ? offset ?
wsdisplay* at tvtwo?

# Fujitsu AG-10e framebuffer.
agten* at sbus? slot ? offset ?
wsdisplay* at agten?
d276 1
@


1.23.2.4
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@a19 1
option		NO_PROPOLICE
d62 1
a62 1
#audioamd0 at sbus0				# sun4m
d102 2
a103 2
zs0	at obio0 addr 0xf1000000 level 12		# sun4/200 and sun4/300
zs0	at obio0 addr 0x01000000 level 12		# sun4/100
d106 3
a108 3
zs1	at obio0 addr 0xf0000000 level 12		# sun4/200 and sun4/300
zs1	at obio0 addr 0x00000000 level 12		# sun4/100
zs2	at obio0 addr 0xe0000000 level 12		# sun4/300
d115 1
a115 1
xbox*	at sbus?					# SBus Expansion box
d136 2
a137 2
dma0	at sbus0					# on-board SCSI
esp0	at sbus0 flags 0xff0f				# sun4c
d141 2
a142 2
dma*	at sbus?					# SBus SCSI
esp*	at sbus? flags 0xff0f				# two flavours
d146 1
a146 1
ledma0	at sbus?					# sun4m on-board
d150 2
a151 2
lebuffer0	at sbus0				# sun4m SBus
lebuffer*	at sbus?				# sun4m SBus
d156 2
a157 2
le0	at sbus0					# sun4c on-board
le*	at sbus?
d172 1
a172 1
hme*	at sbus?
d178 1
a178 1
qec*	at sbus?
d220 2
a221 2
bwtwo0	at sbus0				# sun4c on-board
bwtwo*	at sbus?				# sun4c and sun4m
d232 1
a232 1
cgthree* at sbus?
d241 2
a242 2
cgsix0	at sbus?
cgsix*	at sbus?
d253 1
a253 1
tcx*	at sbus?
d262 1
a262 1
cgtwelve*	at sbus?
d266 1
a266 1
zx*	at sbus?
d270 1
a270 1
vigra*	at sbus?
d274 1
a274 1
pnozz0	at sbus?
d278 1
a278 1
tvtwo* at sbus?
d282 1
a282 1
agten* at sbus?
@


1.23.2.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.23.2.4 2003/05/16 00:29:40 niklas Exp $
a284 4

# Southland Media Systems MGX/MGXPlus framebuffer.
mgx* at sbus?
wsdisplay* at mgx?
@


1.23.2.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
# 	$OpenBSD$
a27 1
#option		INET6		# IPv6 (needs INET)
d274 1
a274 6
# Weitex P9000 found on Tadpole SPARCbook 3, with external ``Chameleon'' RAMDAC
pninek0	at sbus?
btcham0	at obio?
wsdisplay* at pninek?

# Weitek P9100 found on Tadpole SPARCbook 3GS/3GX/3TX/3XP
@


1.23.2.7
log
@Merge with the trunk
@
text
@a197 15
# Sun PCMCIA bridge
#stp*	at sbus?
#pcmcia* at stp? socket ?

# PCMCIA controller found on Tadpole SPARCbook
#tslot*	at sbus?
#pcmcia* at tslot? socket ?

# PCMCIA devices
#wi*	at pcmcia? function ?			# WaveLAN IEEE 802.11DS
#an*	at pcmcia? function ?			# Aironet IEEE 802.11DS
#ne*	at pcmcia? function ?			# NE2000-compat ethernet
#ep*	at pcmcia? function ?			# PCMCIA based 3C5xx ethernet
#com*	at pcmcia? function ?			# PCMCIA modems/serial ports

d275 1
a275 1
# Weitek P9000 found on Tadpole SPARCbook 3, with external ``Chameleon'' RAMDAC
a294 4

# Vitec/Connectware/AP&D RasterFlex framebuffer series.
rfx* at sbus?
wsdisplay* at rfx?
@


1.22
log
@no reason for audio on the RAMDISK
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.21 1999/04/18 19:27:34 deraadt Exp $
d21 1
a21 2
option		SWAPPAGER	# paging; REQUIRED
option		DEVPAGER	# mmap() of devices
@


1.21
log
@xbox fits in the RAMDISK
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.20 1999/03/05 02:55:34 deraadt Exp $
d65 4
a68 4
audioamd0 at mainbus0				# sun4c
audioamd0 at obio0				# sun4m
audioamd0 at sbus0 slot ? offset ?		# sun4m
audio*	at audioamd?
@


1.20
log
@room for few more devices
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.19 1999/02/16 21:30:21 art Exp $
d115 4
d146 2
a147 3
# sun4m Ethernet - an AMD 7990 LANCE behind
# specialized DMA glue
ledma0	at sbus0 slot ? offset ?			# sun4m on-board
d151 3
a153 1
lebuffer*	at sbus0 slot ? offset ?		# sun4m SBus
d179 1
a179 1
qec*	at sbus0 slot ? offset ?
@


1.19
log
@Start using new pipe code
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.18 1999/01/06 03:37:46 deraadt Exp $
d67 1
d162 5
a177 5
ie1	at vmes0 addr 0xffe88000 level 5 vect 0x75
ie2	at vmes0 addr 0xff31ff02 level 5 vect 0x76
ie3	at vmes0 addr 0xff35ff02 level 5 vect 0x77
ie4	at vmes0 addr 0xff2dff02 level 5 vect 0x7c

d247 7
@


1.18
log
@support lebuffer devices on sparc ramdisk
@
text
@d1 1
a1 1
# 	$OpenBSD: RAMDISK,v 1.17 1998/10/19 05:43:30 jason Exp $
a272 1
options		OLD_PIPE		# XXX nbpg botch
@


1.17
log
@qec+qe support & OpenBSD tags for everyone
@
text
@d1 1
a1 1
# 	$OpenBSD$
d146 3
a148 3
# Additional SBus LANCE devices - glued on by lebuffer (not yet implemented)
#lebuffer*	at sbus0 slot ? offset ?		# sun4m SBus
#le*	at lebuffer?					#
@


1.16
log
@no slip, add bpf
@
text
@d1 1
d166 5
@


1.15
log
@Attempt to make clear the dependence of hme->phys and phys->hme
@
text
@a261 1
#pseudo-device	strip	1	# radio clock
d264 2
a265 5
pseudo-device	sl	2	# CSLIP
# pseudo-device	ppp	2	# PPP
pseudo-device	pty	4	# pseudo-terminals
#pseudo-device	ccd	4	# concatenated disk devices

@


1.14
log
@Modified to use mii layer for hme
@
text
@d162 1
a162 2

# Media Independent Interface (mii) drivers
@


1.13
log
@no need for NMBCLUSTERS; noted by fries
@
text
@d163 4
@


1.12
log
@Add build support for hme
@
text
@a9 2
# this should only waste 64K vs. 512K, but hopefully enough for ftp et.al.
option		NMBCLUSTERS=32
@


1.11
log
@Updated sparc audio
@
text
@d162 3
@


1.10
log
@Backout of cpu init changes, breaks on sun4m currently..
@
text
@d68 1
@


1.9
log
@updated to reflect cpu initialization
@
text
@d56 1
@


1.8
log
@NETBSD_CURRENT_970916.  Lot's just ID changes, since changes don't apply to
us.  Includes some pmap changes, for which I don't have the original commit
message(s) handy.
@
text
@a55 1
cpu0	at mainbus0
@


1.7
log
@tweaks to make the ramdisk kernel smaller and also reduce the vm requirements, since vm & pm aren't much different in the install environment
@
text
@d66 2
a67 2
audio0	at mainbus0				# sun4c
audio0	at obio0				# sun4m
@


1.6
log
@commit updated ramdisk stuff, even if it's not going into release
@
text
@d5 7
a11 1
maxusers	32
d17 2
d28 1
a28 1
option		FDESC		# /dev/fd
d261 2
a262 2
pseudo-device	ppp	2	# PPP
pseudo-device	pty	64	# pseudo-terminals
@


1.5
log
@make a ramdisk optimally sized to fit below 0x340000 and still have a few free blocks, .../sparc/stand/boot/Makefile still needs to be un-reverted to make the corresponding bootblocks though
@
text
@d9 1
a9 1
option		MINIROOTSIZE=4480
@


1.4
log
@shrink
@
text
@d7 1
d9 1
a9 1
option		MINIROOTSIZE=4096
@


1.3
log
@shrink
@
text
@d20 1
a20 1
option		FIFO		# FIFOs; RECOMMENDED
@


1.2
log
@working bsd.rd; without vi for now
@
text
@d39 2
a40 2
option		COMPAT_SUNOS	# compatibility with SunOS binaries
option		COMPAT_SVR4	# compatibility with SVR4 binaries
d239 2
a240 2
ss*	at scsibus? target ? lun ?		# SCSI scanners
uk*	at scsibus? target ? lun ?		# unknown SCSI devices
@


1.1
log
@kernel for ramdisks
@
text
@d8 1
a8 1
option		MINIROOTSIZE=2048
@

