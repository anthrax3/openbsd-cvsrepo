head	1.4;
access;
symbols
	OPENBSD_6_0:1.3.0.12
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2016.09.01.09.23.41;	author tedu;	state dead;
branches;
next	1.3;
commitid	Q2PxaFNhqAe0Wmla;

1.3
date	2014.02.25.21.26.44;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2014.01.01.08.02.09;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2014.01.01.07.54.15;	author miod;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Celebrate OpenBSD 6.0 release by retiring the sparc port.
You've served us well, good friend, but now it's time to rest.
ok deraadt
@
text
@/*	$OpenBSD: ld.script,v 1.3 2014/02/25 21:26:44 miod Exp $	*/

/*
 * Copyright (c) 2013 Mark Kettenis <kettenis@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

OUTPUT_FORMAT("elf32-sparc")
OUTPUT_ARCH(sparc)
ENTRY(start)

PHDRS
{
	text PT_LOAD;
	data PT_LOAD;
	openbsd_randomize 0x65a3dbe6; /* PT_OPENBSD_RANDOMIZE */
}

SECTIONS
{
	. = 0xF8004000;
	.text :
	{
		*(.text)
		PROVIDE(etext = ABSOLUTE(.));
	} :text
	.rodata :
	{
		*(.rodata*)
	}
	. = ALIGN(0x2000);
	.data :
	{
		PROVIDE(__data_start = ABSOLUTE(.));
		*(.data)
	} :data
	.openbsd.randomdata :
	{
		*(.openbsd.randomdata)
	} :data :openbsd_randomize
	PROVIDE(edata = ABSOLUTE(.));
	.bss :
	{
		*(.bss)
		/* . = ALIGN(64 / 8); */
	} :data
	PROVIDE(end = ABSOLUTE(.));
}
@


1.3
log
@Put edata after the .openbsd.randomdata phdr, to prevent the former's contents
from being bzeroed when locore bzeros what it thinks is the bss.
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.2 2014/01/01 08:02:09 miod Exp $	*/
@


1.2
log
@fix header to get symbols loaded correctly
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.1 2014/01/01 07:54:15 miod Exp $	*/
a46 1
		PROVIDE(edata = ABSOLUTE(.));
d52 1
@


1.1
log
@Add a linker script to force the .openbsd.randomdata section to be put after
.data, so that it will not get mapped read-only by pmap_bootstrap().
@
text
@d1 1
a1 1
/*	$OpenBSD: ld.script,v 1.5 2013/12/28 19:27:35 kettenis Exp $	*/
d19 1
a19 1
OUTPUT_FORMAT("elf32-big")
@

