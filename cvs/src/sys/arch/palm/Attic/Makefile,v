head	1.5;
access;
symbols
	OPENBSD_5_3:1.4.0.10
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.8
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.03.25.17.22.11;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2010.11.12.17.11.44;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2010.11.03.20.08.03;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.31.22.21.44;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.05.01.22.11;	author marex;	state Exp;
branches;
next	;


desc
@@


1.5
log
@the unused palm code goes away.
@
text
@#	$OpenBSD: Makefile,v 1.4 2010/11/12 17:11:44 deraadt Exp $

S=	${.CURDIR}/../..
KFILE=	GENERIC
.if exists(conf/GENERIC.MP)
KFILE=	GENERIC.MP
.endif
TDIRS=	${_arch} include pci isa eisa
TAGS=	${.CURDIR}/tags

NOPROG=
NOMAN=
SUBDIR=

# config the fattest kernel we can find into a temporary dir
# to create a Makefile.  Then use make to pull some variables
# out and push them into the sub-shell to expand the paths,
# and finally run ctags.
tags::
	TDIR=`mktemp -d /tmp/_tagXXXXXXXXXX` || exit 1; \
	eval "S=${S}" && \
	config -s ${S} -b $${TDIR} ${.CURDIR}/conf/${KFILE} && \
	eval "_arch=\"`make -V _arch -f $${TDIR}/Makefile`\"" && \
	eval "_mach=\"`make -V _mach -f $${TDIR}/Makefile`\"" && \
	eval "_machdir=\$S/arch/$${_mach}" && \
	eval "_archdir=\$S/arch/$${_arch}" && \
	eval "HFILES=\"`find $S \( -path $S/'arch' -o -path $S/stand -o -path $S/lib/libsa -o -path $S'/lib/libkern/arch' \) -prune -o -name '*.h'; find $${_machdir} $${_archdir} $S/lib/libkern/arch/$${_mach} \( -name boot -o -name stand \) -prune -o -name '*.h'`\"" && \
	eval "SFILES=\"`make -V SFILES -f $${TDIR}/Makefile`\"" && \
	eval "CFILES=\"`make -V CFILES -f $${TDIR}/Makefile`\"" && \
	eval "AFILES=\"`make -V AFILES -f $${TDIR}/Makefile`\"" && \
	ctags -wd -f ${TAGS} $${CFILES} $${HFILES} && \
	egrep "^[_A-Z]*ENTRY[_A-Z]*\(.*\)" $${SFILES} $${AFILES} | \
	    sed "s;\\([^:]*\\):\\([^(]*\\)(\\([^, )]*\\)\\(.*\\);\\3	\\1	/^\\2(\\3\\4$$/;" \
	    >> ${TAGS} && \
	sort -o ${TAGS} ${TAGS} && \
	rm -rf $${TDIR}

links:
	-for i in conf ${TDIRS}; do \
	    (cd $$i && rm -f tags; ln -s tags tags); done

obj:	_SUBDIRUSE

.include <bsd.prog.mk>
@


1.4
log
@Push all potential (as in, all system MI not utilized by the bootblocks)
.h files into the ctags run as well to bring #define's and structs and
such into scope.  Problem reported by thib
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2010/11/03 20:08:03 deraadt Exp $
@


1.3
log
@no need to specify the -t flag to ctags
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2010/05/31 22:21:44 deraadt Exp $
d27 1
d31 1
a31 1
	ctags -wd -f ${TAGS} $${CFILES} && \
@


1.2
log
@Completely rewrite the tags file creation process.  use config(8) against
a fat kernel (GERERIC or GENERIC.MP) into a temporary dir, then extract some
variables using make -V, and after some more singing and dancing use this
full and (more) correct list of files with ctags.  Don't read this code.
ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2007/10/22 01:26:31 deraadt Exp $
d30 1
a30 1
	ctags -wdt -f ${TAGS} $${CFILES} && \
@


1.1
log
@Palm: initial commit of sys/arch/palm

OK deraadt@@
@
text
@d1 1
a1 2
# 	$OpenBSD: Makefile,v 1.3 2005/05/06 02:20:24 uwe Exp $
#	$NetBSD: Makefile,v 1.1 2001/06/12 08:32:46 chris Exp $
d3 33
a35 26
# Makefile for palm tags file and boot blocks

S=${.CURDIR}/../..
.include "$S/kern/Make.tags.inc"

NOPROG=	noprog
NOMAN=	noman

TPALM=		$S/arch/palm/tags

SPALM=		$S/arch/palm/include/*.h \
		$S/arch/palm/palm/*.[ch] $S/arch/arm/arm/*.[ch] \
		$S/arch/arm/include/*.h $S/arch/arm/mainbus/*.[ch] \
		$S/arch/arm/sa11x0/*.[ch] $S/arch/arm/xscale/*.[ch]
APALM=		$S/arch/palm/palm/*.S $S/arch/arm/arm/*.S \
		$S/arch/arm/mainbus/*.S $S/arch/arm/xscale/*.S

# Directories in which to place tags links
DPALM=	include palm

tags:
	-ctags -wdtf ${TPALM} ${SPALM} ${COMM}
	egrep "^ENTRY(.*)|^ALTENTRY(.*)" ${APALM} | \
	    sed "s;\([^:]*\):\([^(]*\)(\([^, )]*\)\(.*\);\3	\1	/^\2(\3\4$$/;" \
	    >> ${TPALM}
	sort -o ${TPALM} ${TPALM}
d38 2
a39 2
	-for i in ${DPALM}; do \
	    (cd $$i && { rm -f tags; ln -s ${TPALM} tags; }) done
@

