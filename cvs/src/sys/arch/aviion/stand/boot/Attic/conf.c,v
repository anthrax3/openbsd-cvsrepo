head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2015.12.01.07.50.04;	author deraadt;	state dead;
branches;
next	1.3;
commitid	Rh8AZFtVMVCiwPts;

1.3
date	2014.08.21.14.24.08;	author mpi;	state Exp;
branches;
next	1.2;
commitid	5eFitDmQJIvEdtoI;

1.2
date	2013.10.17.16.30.07;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.08.21.55.20;	author miod;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Send Aviion to same place as Nova II
discussed with jsg
@
text
@/*	$OpenBSD: conf.c,v 1.3 2014/08/21 14:24:08 mpi Exp $ */

#include <sys/types.h>
#include <netinet/in.h>

#include <stand.h>
#include <ufs.h>
#include <nfs.h>

struct fs_ops file_system[] = {
	{ ufs_open, ufs_close, ufs_read, ufs_write, ufs_seek, ufs_stat },
	{ nfs_open, nfs_close, nfs_read, nfs_write, nfs_seek, nfs_stat }
};
int nfsys = sizeof(file_system) / sizeof(file_system[0]);

extern int sdstrategy(void *, int, daddr32_t, size_t, void *, size_t *);
extern int sdopen(struct open_file *, ...);
extern int sdclose(struct open_file *);

extern int net_strategy(void *, int, daddr32_t, size_t, void *, size_t *);
extern int net_open(struct open_file *, ...);
extern int net_close(struct open_file *);

struct devsw devsw[] = {
	{ "sd", sdstrategy, sdopen, sdclose,  noioctl },
	{ "inen", net_strategy, net_open, net_close, noioctl }
};
int ndevs = sizeof(devsw) / sizeof(devsw[0]);

extern struct netif_driver le_driver;

struct netif_driver *netif_drivers[] = {
	&le_driver
};
int n_netif_drivers = sizeof(netif_drivers) / sizeof(netif_drivers[0]);

/* XXX */
int netif_debug;
int debug;
int errno;
@


1.3
log
@Kill the remaining <netinet/in_systm.h> inclusion!
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 2013/10/17 16:30:07 miod Exp $ */
@


1.2
log
@Merge old netboot le(4) code into new boot, to allow for a kernel to be loaded
from the network, with symbols. This will be useful to load bsd.rd on systems
with the 3MB bootfile limit in the stupid PROM. Crank version to 0.4.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1 2013/10/08 21:55:20 miod Exp $ */
a4 1
#include <netinet/in_systm.h>
@


1.1
log
@Early stages of a working disk bootloader for OpenBSD/aviion.
Currently limited to oosiop(4) controllers, and thus models 4600 and 530.
There are some rough edges to polish to avoid manual interaction (kernel
currently can't figure its boot device when booted from disk), but the hard
(and hair-pulling) work is over.
And we can have kernel symbols again!
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1 2006/05/16 22:48:18 miod Exp $ */
d9 1
d12 2
a13 1
	{ ufs_open, ufs_close, ufs_read, ufs_write, ufs_seek, ufs_stat }
d21 4
d27 8
d36 1
a36 1
int	ndevs = sizeof(devsw) / sizeof(devsw[0]);
a38 1
#if 0
a40 1
#endif
@

