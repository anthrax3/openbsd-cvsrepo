head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4;
locks; strict;
comment	@ * @;


1.5
date	2015.12.01.07.50.05;	author deraadt;	state dead;
branches;
next	1.4;
commitid	Rh8AZFtVMVCiwPts;

1.4
date	2014.02.24.20.15.37;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2014.01.04.10.49.21;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2013.10.10.21.22.07;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.08.21.55.21;	author miod;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Send Aviion to same place as Nova II
discussed with jsg
@
text
@/*	$OpenBSD: exec.c,v 1.4 2014/02/24 20:15:37 miod Exp $	*/


/*-
 * Copyright (c) 1982, 1986, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * 	@@(#)boot.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>
#include <sys/reboot.h>
#include <machine/prom.h>

#include "stand.h"
#include "libsa.h"

#include <lib/libsa/loadfile.h>

#define	BOOT_MAGIC	0x6274ef2e	/* need to match locore.S */

/*ARGSUSED*/
void
exec(char *file, const char *args, uint bootdev, uint bootunit, uint bootlun,
    uint bootpart)
{
	u_long marks[MARK_MAX];
	int rc;
	void (*entry)(const char *, uint, uint, uint, uint, uint, uint);

	marks[MARK_START] = 0;
	rc = loadfile(file, marks, LOAD_KERNEL | COUNT_KERNEL);
	if (rc != 0)
		return;

	entry = (void(*)(const char *, uint, uint, uint, uint, uint, uint))
	    marks[MARK_START];
	(*entry)(args, bootdev, bootunit, bootlun, BOOT_MAGIC + 1,
	    bootpart, marks[MARK_END]);

	printf("exec: kernel returned!\n");
}
@


1.4
log
@/etc/random.seed support in da bootblockz.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.c,v 1.3 2014/01/04 10:49:21 miod Exp $	*/
@


1.3
log
@Add rnddata[] placeholders to make these boot blocks build again.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.c,v 1.2 2013/10/10 21:22:07 miod Exp $	*/
a42 2

char   rnddata[BOOTRANDOM_MAX];		/* XXX dummy */
@


1.2
log
@Misc cleanups and small fixes. Boot controller/unit/lun information passed
to the kernel will now match the device the kernel is loaded from, not the
device the boot blocks are loaded from (this allows one to netboot the
boot blocks to boot a kernel from a local disk).
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.c,v 1.1 2013/10/08 21:55:21 miod Exp $	*/
d43 2
@


1.1
log
@Early stages of a working disk bootloader for OpenBSD/aviion.
Currently limited to oosiop(4) controllers, and thus models 4600 and 530.
There are some rough edges to polish to avoid manual interaction (kernel
currently can't figure its boot device when booted from disk), but the hard
(and hair-pulling) work is over.
And we can have kernel symbols again!
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_aout.c,v 1.2 2006/05/20 22:40:46 miod Exp $	*/
d44 1
a44 1
#define	SYM_MAGIC	0x6274ef2e
d48 2
a49 1
exec(char *file, const char *args, int bootdev, int bootunit, int bootpart)
d53 1
a53 1
	void (*entry)(const char *, int, int, int, int, int);
d60 4
a63 3
	entry =
	    (void(*)(const char *, int, int, int, int, int))marks[MARK_START];
	(*entry)(args, bootdev, bootunit, bootpart, SYM_MAGIC, marks[MARK_END]);
@

