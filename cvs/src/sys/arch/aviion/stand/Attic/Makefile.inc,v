head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.2.0.30
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.28
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.26
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.24
	OPENBSD_5_0:1.2.0.22
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.20
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.18
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.12
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2015.12.01.07.50.04;	author deraadt;	state dead;
branches;
next	1.4;
commitid	Rh8AZFtVMVCiwPts;

1.4
date	2013.10.08.21.55.20;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2013.09.28.21.59.38;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.20.22.38.32;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.16.22.48.16;	author miod;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Send Aviion to same place as Nova II
discussed with jsg
@
text
@#	$OpenBSD: Makefile.inc,v 1.4 2013/10/08 21:55:20 miod Exp $

MDEC_DIR?=	/usr/mdec

CWARNFLAGS=	-Wall -Werror -fno-stack-protector

HOSTCFLAGS+=	${CWARNFLAGS}
CFLAGS+=	${CWARNFLAGS} -mmemcpy
CFLAGS+=	-fno-builtin-printf -fno-builtin-putchar -fno-builtin-vprintf

# Load addresses for bootstrap code
# This should work on 8MB machines, if each bootstrap code fits in 60KB
# (not 64!)
STAGE1_RELOC=0x7c0000
STAGE2_RELOC=0x7d0000
@


1.4
log
@Early stages of a working disk bootloader for OpenBSD/aviion.
Currently limited to oosiop(4) controllers, and thus models 4600 and 530.
There are some rough edges to polish to avoid manual interaction (kernel
currently can't figure its boot device when booted from disk), but the hard
(and hair-pulling) work is over.
And we can have kernel symbols again!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 2013/09/28 21:59:38 miod Exp $
@


1.3
log
@belatedly adjust to gcc 3 and ELF
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 2006/05/20 22:38:32 miod Exp $
d5 4
a8 1
CFLAGS+=	-Wall -Werror -fno-stack-protector -mmemcpy
a9 1

@


1.2
log
@Lower load address 128KB, to cope with the PROM data area on 8MB machines.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2006/05/16 22:48:16 miod Exp $
d6 2
@


1.1
log
@Network bootloader for AV400 series, will load a native kernel. Still some
rough edges to sort out, but enough to successfully boot a kernel.
Will not work on series 530 yet.
@
text
@d1 1
a1 1
#	$OpenBSD$
d8 1
a8 1
# This will work on 8MB machines, if each bootstrap code fits in 60KB
d10 2
a11 2
STAGE1_RELOC=0x7e0000
STAGE2_RELOC=0x7f0000
@

