head	1.4;
access;
symbols
	OPENBSD_5_4:1.2.0.30
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.28
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.26
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.24
	OPENBSD_5_0:1.2.0.22
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.20
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.18
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.12
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2013.10.17.16.30.08;	author miod;	state dead;
branches;
next	1.3;

1.3
date	2013.09.28.21.59.39;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.20.22.38.33;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.16.22.48.18;	author miod;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge old netboot le(4) code into new boot, to allow for a kernel to be loaded
from the network, with symbols. This will be useful to load bsd.rd on systems
with the 3MB bootfile limit in the stupid PROM. Crank version to 0.4.
@
text
@/*	$OpenBSD: crt.c,v 1.3 2013/09/28 21:59:39 miod Exp $ */

#include <sys/types.h>
#include <machine/prom.h>

#include "stand.h"

extern void netboot(const char *, int, int, int);

/*
 * This is the boot code entry point.
 * Note that we do not bother to set r31, and use the default value supplied
 * by the PROM, which is the top of memory, minus the PROM data area (usually
 * 128KB).
 */
void
start(const char *args, int dev, int unit, int part)
{
	extern int edata, end;

	/* 
	 * This code enables the SFU1 and is used for single stage 
	 * bootstraps or the first stage of a two stage bootstrap.
	 * Do not use any low register to enable the SFU1. This wipes out
	 * the args.  Not cool at all... r25 seems free. 
	 */
	asm("	ldcr	%%r25,%%cr1" ::: "r25");
	asm("	clr	%r25,%r25,1<3>"); /* bit 3 is SFU1D */
	asm("	stcr	%r25,%cr1");

	memset(&edata, 0, ((int)&end - (int)&edata));

	netboot(args, dev, unit, part);
	_rtt();
	/* NOTREACHED */
}

void
__main()
{
}
@


1.3
log
@belatedly adjust to gcc 3 and ELF
@
text
@d1 1
a1 1
/*	$OpenBSD: crt.c,v 1.2 2006/05/20 22:38:33 miod Exp $ */
@


1.2
log
@Lower load address 128KB, to cope with the PROM data area on 8MB machines.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt.c,v 1.1 2006/05/16 22:48:18 miod Exp $ */
d27 3
a29 4
	asm("|	enable SFU1");
	asm("	ldcr	r25,cr1" ::: "r25");
	asm("	clr	r25,r25,1<3>"); /* bit 3 is SFU1D */
	asm("	stcr	r25,cr1");
@


1.1
log
@Network bootloader for AV400 series, will load a native kernel. Still some
rough edges to sort out, but enough to successfully boot a kernel.
Will not work on series 530 yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt.c,v 1.5 2003/10/02 13:24:39 miod Exp $ */
d10 6
@

