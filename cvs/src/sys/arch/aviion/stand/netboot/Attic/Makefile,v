head	1.5;
access;
symbols
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.26
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.24
	OPENBSD_5_0:1.1.0.22
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.20
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.18
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.14
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.16
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.12
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.10
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.8
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.6
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.4
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.2
	OPENBSD_4_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.10.17.16.30.08;	author miod;	state dead;
branches;
next	1.4;

1.4
date	2013.10.08.21.55.22;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2013.09.28.21.59.39;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.21.14.46.18;	author pascal;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.16.22.48.18;	author miod;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Merge old netboot le(4) code into new boot, to allow for a kernel to be loaded
from the network, with symbols. This will be useful to load bsd.rd on systems
with the 3MB bootfile limit in the stupid PROM. Crank version to 0.4.
@
text
@#	$OpenBSD: Makefile,v 1.4 2013/10/08 21:55:22 miod Exp $

SIZE?=	size

S=	${.CURDIR}/../../../..
DEFS=	-DSUN_BOOTPARAMS 
#DEFS+=	-DNETIF_DEBUG
INCPATH=-I${.CURDIR} -I${.CURDIR}/../libsa -I${.CURDIR}/../libprom \
	-I${S} -I${S}/lib/libsa
CFLAGS+=${DEFS} ${INCPATH} ${COPTS}
CLEANFILES+=netboot netboot.aout

.include "${S}/arch/aviion/stand/Makefile.inc"
.include "${S}/arch/aviion/stand/libprom/Makefile.inc"
.include "${S}/arch/aviion/stand/libsa/Makefile.inc"
.include "${S}/arch/aviion/stand/libz/Makefile.inc"

# Keep crt.c first in the object list for ld's sake.
SRCS=   crt.c boot.c conf.c devopen.c dev_net.c if_le.c version.c
OBJS=  ${SRCS:S/.c/.o/g}
LIBS=	${LIBSA} ${LIBPROM} ${LIBZ}
LDFLAGS+= -N -Ttext ${STAGE2_RELOC} -e start
NOPIE=

all:	netboot.aout

netboot: netboot.aout a2coff
	${DESTDIR}${MDEC_DIR}/a2coff netboot.aout netboot

netboot.aout: ${OBJS} ${LIBS}
	${LD} ${LDFLAGS} -o $@@ ${OBJS} ${LIBS} `${CC} -print-libgcc-file-name`
	@@${SIZE} $@@

a2coff:	${DESTDIR}${MDEC_DIR}/a2coff
	cd ${S}/arch/aviion/stand/a2coff && ${MAKE} && ${MAKE} install

install: netboot
	${INSTALL} ${INSTALL_COPY} -o ${LIBOWN} -g ${LIBGRP} -m ${LIBMODE} \
	  netboot ${DESTDIR}${MDEC_DIR}/netboot

.include <bsd.prog.mk>
@


1.4
log
@Early stages of a working disk bootloader for OpenBSD/aviion.
Currently limited to oosiop(4) controllers, and thus models 4600 and 530.
There are some rough edges to polish to avoid manual interaction (kernel
currently can't figure its boot device when booted from disk), but the hard
(and hair-pulling) work is over.
And we can have kernel symbols again!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2013/09/28 21:59:39 miod Exp $
@


1.3
log
@belatedly adjust to gcc 3 and ELF
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2012/08/21 14:46:18 pascal Exp $
d31 1
a31 1
	${LD} ${LDFLAGS} -o $@@ ${OBJS} ${LIBS} `cc -print-libgcc-file-name`
@


1.2
log
@Add NOPIE= bits for sys/arch/*/stand to ensure that bootblocks will always be
built with -fno-pie.  This gets the hairiest part of PIE out of the way ...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2006/05/16 22:48:18 miod Exp $
d22 1
a22 1
LDFLAGS+= -N -T ${STAGE2_RELOC} 
d30 2
a31 3
netboot.aout: ${OBJS} ${SINGLE} ${LIBS}
	${LD} ${LDFLAGS} -o $@@ \
		${SINGLE} ${OBJS} ${LIBS} `cc -print-libgcc-file-name`
@


1.1
log
@Network bootloader for AV400 series, will load a native kernel. Still some
rough edges to sort out, but enough to successfully boot a kernel.
Will not work on series 530 yet.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2005/09/11 13:36:00 deraadt Exp $
d23 1
@

