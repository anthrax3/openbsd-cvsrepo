head	1.9;
access;
symbols
	OPENBSD_5_8:1.8.0.8
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.12
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.12
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2
	AV400_20060509:1.1.1.1
	miod:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.12.01.07.50.03;	author deraadt;	state dead;
branches;
next	1.8;
commitid	Rh8AZFtVMVCiwPts;

1.8
date	2014.05.08.22.17.33;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2011.10.09.17.01.34;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2010.04.24.18.46.55;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2010.04.24.18.44.27;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2010.04.21.19.33.47;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.20.22.53.24;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.21.12.22.02;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.09.18.13.53;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.05.09.18.13.53;	author miod;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Send Aviion to same place as Nova II
discussed with jsg
@
text
@/*	$OpenBSD: mainbus.c,v 1.8 2014/05/08 22:17:33 miod Exp $ */
/*
 * Copyright (c) 1998 Steve Murphree, Jr.
 * Copyright (c) 2004, Miodrag Vallat.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/reboot.h>
#include <sys/conf.h>
#include <sys/device.h>
#include <sys/disklabel.h>
#include <sys/extent.h>

#include <uvm/uvm_extern.h>

#include <machine/autoconf.h>
#include <machine/board.h>
#include <machine/bus.h>
#include <machine/cmmu.h>
#include <machine/cpu.h>
#include <machine/prom.h>

void	mainbus_attach(struct device *, struct device *, void *);
int 	mainbus_match(struct device *, void *, void *);
int	mainbus_print(void *, const char *);
int	mainbus_scan(struct device *, void *, void *);

/*
 * bus_space routines for 1:1 obio mappings
 */

int	mainbus_map(bus_space_tag_t, bus_addr_t, bus_size_t, int,
	    bus_space_handle_t *);
void	mainbus_unmap(bus_space_tag_t, bus_space_handle_t, bus_size_t);
int	mainbus_subregion(bus_space_tag_t, bus_space_handle_t, bus_size_t,
	    bus_size_t, bus_space_handle_t *);
void	*mainbus_vaddr(bus_space_tag_t, bus_space_handle_t);

const struct aviion_bus_space_tag mainbus_bustag = {
	._space_map = mainbus_map,
	._space_unmap = mainbus_unmap,
	._space_subregion = mainbus_subregion,
	._space_vaddr = mainbus_vaddr,
	._space_read_1 = generic_space_read_1,
	._space_write_1 = generic_space_write_1,
	._space_read_2 = generic_space_read_2,
	._space_write_2 = generic_space_write_2,
	._space_read_4 = generic_space_read_4,
	._space_write_4 = generic_space_write_4,
	._space_read_raw_2 = generic_space_read_raw_2,
	._space_write_raw_2 = generic_space_write_raw_2,
	._space_read_raw_4 = generic_space_read_raw_4,
	._space_write_raw_4 = generic_space_write_raw_4,
};

/*
 * Obio (internal IO) space is mapped 1:1 (see pmap_bootstrap() for details).
 */

int
mainbus_map(bus_space_tag_t tag, bus_addr_t addr, bus_size_t size, int flags,
    bus_space_handle_t *ret)
{
	*ret = (bus_space_handle_t)addr;
	return 0;
}

void
mainbus_unmap(bus_space_tag_t tag, bus_space_handle_t handle, bus_size_t size)
{
	/* nothing to do */
}

int
mainbus_subregion(bus_space_tag_t tag, bus_space_handle_t handle,
    bus_addr_t offset, bus_size_t size, bus_space_handle_t *ret)
{
	*ret = handle + offset;
	return (0);
}

void *
mainbus_vaddr(bus_space_tag_t tag, bus_space_handle_t handle)
{
	return (void *)handle;
}

/*
 * Configuration glue
 */

struct cfattach mainbus_ca = {
	sizeof(struct device), mainbus_match, mainbus_attach
};

struct cfdriver mainbus_cd = {
	NULL, "mainbus", DV_DULL
};

int
mainbus_match(struct device *parent, void *cf, void *args)
{
	return (mainbus_cd.cd_ndevs == 0);
}

void
mainbus_attach(struct device *parent, struct device *self, void *args)
{
	extern void cpu_setup_secondary_processors(void);
	extern char cpu_model[];

	printf(": %s, cpuid 0x%04x", cpu_model, cpuid);
	printf("\n");

	/*
	 * Display cpu/mmu details for the main processor.
	 */
	cpu_configuration_print(1);

#ifdef MULTIPROCESSOR
	/*
	 * Let secondary processors initialize further and print
	 * their configuration information now.
	 */
	cpu_setup_secondary_processors();
#endif

	(void)config_search(mainbus_scan, self, args);
}

int
mainbus_scan(struct device *parent, void *child, void *args)
{
	struct cfdata *cf = child;
	struct confargs oca;

	oca.ca_iot = &mainbus_bustag;
	oca.ca_paddr = (paddr_t)cf->cf_loc[0];
	oca.ca_offset = (paddr_t)-1;
	oca.ca_ipl = (u_int)-1;

	if ((*cf->cf_attach->ca_match)(parent, cf, &oca) == 0)
		return (0);

	config_attach(parent, cf, &oca, mainbus_print);
	return (1);
}

int
mainbus_print(void *args, const char *bus)
{
	struct confargs *ca = args;

	if (ca->ca_paddr != (paddr_t)-1)
		printf(" addr 0x%08lx", ca->ca_paddr);
	return (UNCONF);
}
@


1.8
log
@Format string fixes for m88k; remove -Wno-format from the m88k kernels.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.7 2011/10/09 17:01:34 miod Exp $ */
@


1.7
log
@Rework secondary processor initialization. cmmu initialization is now
performed much earlier in the processor startup.
No visible change, paves the way for the much important diff three commits
from here.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.6 2010/04/24 18:46:55 miod Exp $ */
d177 1
a177 1
		printf(" addr 0x%08x", ca->ca_paddr);
@


1.6
log
@SMP support for models 4600 and 530, adapted from the MVME188 code. Models
4000 and 4300 will need more work, because they don't have as many distinct
software interrupt sources as required by this implementation, so a
different IPI scheme will be necessary.

Tested on dual-processor 4625 (AV530 family) and single processor 4300
(AV400 family).
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.5 2010/04/24 18:44:27 miod Exp $ */
d144 2
a145 2
	 * Let secondary processor initialize further and print their
	 * configuration information now.
@


1.5
log
@Replace heuristics used to figure out which model we are running on, and
trust the cpuid value returned by the prom itself (verified against
/usr/opt/sdk/include/sys/dg_sys_info.h on a DG-UX filesystem).
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.4 2010/04/21 19:33:47 miod Exp $ */
d131 1
d141 8
@


1.4
log
@More reworking of interrupt handling and VME support, and rename various
board-specific defines to prevent any risk of collision. This also adds
clock support for AV530 family, and timecounter support (cio code sync'ed
with mvme88k). And various bugs fixed in the process.

This is enough to get models 4600 and 530 to run multiuser with a Hawk
Ethernet VME card (the onboard Ethernet is not supported yet, coming soon).
There is no way to share a disk with DG/UX yet, the kernel (and fdisk(8))
needs to become aware of its ways.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.3 2010/04/20 22:53:24 miod Exp $ */
d133 1
a133 3
	printf(": %s, cpuid 0x%x", cpu_model, cpuid);
	if (sysid != -1)
		printf(", sysid %x", sysid);
@


1.3
log
@Add bus_dma and oosiop(4), as found on the AV530 family. Tested on model 4605.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.2 2006/05/21 12:22:02 miod Exp $ */
d39 1
a131 1
	extern int32_t cpuid, sysid;
@


1.2
log
@Move common definitions shared by the various 88100-based designs to their
own header file, and slowly make most of the code board-independent. No
functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.1.1.1 2006/05/09 18:13:53 miod Exp $ */
d53 1
a53 3
int	mainbus_map(bus_addr_t, bus_size_t, int, bus_space_handle_t *);
void	mainbus_unmap(bus_space_handle_t, bus_size_t);
int	mainbus_subregion(bus_space_handle_t, bus_size_t, bus_size_t,
d55 4
a58 1
void	*mainbus_vaddr(bus_space_handle_t);
d61 14
a74 4
	mainbus_map,
	mainbus_unmap,
	mainbus_subregion,
	mainbus_vaddr
d82 1
a82 1
mainbus_map(bus_addr_t addr, bus_size_t size, int flags,
d90 1
a90 1
mainbus_unmap(bus_space_handle_t handle, bus_size_t size)
d96 2
a97 2
mainbus_subregion(bus_space_handle_t handle, bus_addr_t offset,
    bus_size_t size, bus_space_handle_t *ret)
d104 1
a104 1
mainbus_vaddr(bus_space_handle_t handle)
@


1.1
log
@Enter OpenBSD/aviion, a port to the m88k-based Data General AViiON workstations. Currently restricted to diskless serial console, tested on AV410 only; many thanks to Chris Tribo for documentation and testing.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.18 2005/12/11 21:45:31 miod Exp $ */
a42 2

#include <machine/av400.h>
@


1.1.1.1
log
@Oops, correct import this time.
@
text
@@
