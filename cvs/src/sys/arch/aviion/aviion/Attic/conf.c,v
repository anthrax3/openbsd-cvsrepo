head	1.21;
access;
symbols
	OPENBSD_5_8:1.19.0.6
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.2
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.17.0.8
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.6
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.16.0.2
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.15.0.4
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.2
	OPENBSD_5_0:1.14.0.4
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.2
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	AV400_20060509:1.1.1.1
	miod:1.1.1;
locks; strict;
comment	@ * @;


1.21
date	2015.12.01.07.50.03;	author deraadt;	state dead;
branches;
next	1.20;
commitid	Rh8AZFtVMVCiwPts;

1.20
date	2015.10.23.15.10.52;	author claudio;	state Exp;
branches;
next	1.19;
commitid	g17gxjQh9N9egLbB;

1.19
date	2014.10.09.04.10.03;	author tedu;	state Exp;
branches;
next	1.18;
commitid	Db8IHIncfKM3SDX9;

1.18
date	2014.10.09.03.59.58;	author tedu;	state Exp;
branches;
next	1.17;
commitid	I0KLtD9aVxAdm6aW;

1.17
date	2013.06.03.17.33.58;	author tedu;	state Exp;
branches;
next	1.16;

1.16
date	2012.08.23.06.12.49;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2011.10.06.20.49.27;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2011.01.14.19.04.08;	author jasper;	state Exp;
branches;
next	1.13;

1.13
date	2010.11.22.21.10.45;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2010.09.23.05.02.14;	author claudio;	state Exp;
branches;
next	1.11;

1.11
date	2010.07.03.03.59.16;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.09.15.25.32;	author jsing;	state Exp;
branches;
next	1.9;

1.9
date	2009.08.13.15.04.20;	author dlg;	state Exp;
branches;
next	1.8;

1.8
date	2009.06.03.14.45.51;	author jj;	state Exp;
branches;
next	1.7;

1.7
date	2009.01.25.17.30.48;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.14.20.49.48;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2008.04.08.14.31.54;	author claudio;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.28.22.26.03;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.27.01.50.36;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.26.19.54.24;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.25.15.54.13;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.04.25.15.54.13;	author miod;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Send Aviion to same place as Nova II
discussed with jsg
@
text
@/*	$OpenBSD: conf.c,v 1.20 2015/10/23 15:10:52 claudio Exp $	*/

/*-
 * Copyright (c) 1991 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *      @@(#)conf.c	7.9 (Berkeley) 5/28/91
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/vnode.h>

#include <machine/conf.h>

#include "bpfilter.h"
#include "cd.h"
#include "ch.h"
#include "dart.h"
#include "ksyms.h"
#include "nvram.h"
#include "pf.h"
#include "bio.h"
#include "pty.h"
#include "rd.h"
#include "sd.h"
#include "st.h"
#include "systrace.h"
#include "tun.h"
#include "uk.h"
#include "vme.h"
#include "vnd.h"
#include "vscsi.h"
#include "pppx.h"
#include "fuse.h"

struct bdevsw	bdevsw[] =
{
	bdev_notdef(),			/* 0 */
	bdev_notdef(),			/* 1 */
	bdev_notdef(),			/* 2 */
	bdev_swap_init(1,sw),		/* 3: swap pseudo-device */
	bdev_disk_init(NSD,sd),		/* 4: SCSI disk */
	bdev_tape_init(NST,st),		/* 5: SCSI tape */
	bdev_disk_init(NCD,cd),		/* 6: SCSI CD-ROM */
	bdev_disk_init(NRD,rd),		/* 7: ramdisk */
	bdev_disk_init(NVND,vnd),	/* 8: vnode disk driver */
	bdev_notdef(),			/* 9: was: concatenated disk driver */
	bdev_notdef(),			/* 10 */
	bdev_notdef(),			/* 11 */
	bdev_notdef(),			/* 12 */
	bdev_notdef(),			/* 13 */
	bdev_notdef(),			/* 14 */
	bdev_notdef(),			/* 15 */
	bdev_notdef(),			/* 16 */
	bdev_notdef(),			/* 17 */
	bdev_notdef(),			/* 18 */
};
int	nblkdev = nitems(bdevsw);

struct cdevsw	cdevsw[] =
{
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_ctty_init(1,ctty),		/* 1: controlling terminal */
	cdev_mm_init(1,mm),		/* 2: /dev/{null,mem,kmem,...} */
	cdev_notdef(),			/* 3 was /dev/drum */
	cdev_tty_init(NPTY,pts),	/* 4: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 5: pseudo-tty master */
	cdev_log_init(1,log),		/* 6: /dev/klog */
	cdev_notdef(),			/* 7 */
	cdev_disk_init(NSD,sd),		/* 8: SCSI disk */
	cdev_disk_init(NCD,cd),		/* 9: SCSI CD-ROM */
	cdev_mm_init(NNVRAM,nvram),	/* 10: /dev/nvramX */
	cdev_notdef(),			/* 11: */
	cdev_tty_init(NDART,dart),	/* 12: on-board serial (tty[ab]) */
	cdev_notdef(),			/* 13 */
	cdev_notdef(),			/* 14 */
	cdev_notdef(),			/* 15 */
	cdev_notdef(),			/* 16 */
	cdev_notdef(),			/* 17: was: concatenated disk */
	cdev_disk_init(NRD,rd),		/* 18: ramdisk disk */
	cdev_disk_init(NVND,vnd),	/* 19: vnode disk */
	cdev_tape_init(NST,st),		/* 20: SCSI tape */
	cdev_fd_init(1,filedesc),	/* 21: file descriptor pseudo-dev */
	cdev_bpf_init(NBPFILTER,bpf),	/* 22: berkeley packet filter */
	cdev_tun_init(NTUN,tun),	/* 23: network tunnel */
	cdev_notdef(),			/* 24 was LKM */
	cdev_notdef(),			/* 25 */
	cdev_notdef(),			/* 26: XD disk */
	cdev_notdef(),			/* 27 */
	cdev_notdef(),			/* 28: lp */
	cdev_notdef(),			/* 29: lptwo */
	cdev_mm_init(NVME,vme),		/* 30: /dev/vme* */
	cdev_notdef(),			/* 31: old /dev/vmelX */
	cdev_notdef(),			/* 32: old /dev/vmesX */
	cdev_notdef(),			/* 33 */
	cdev_notdef(),			/* 34 */
	cdev_notdef(),			/* 35 */
	cdev_notdef(),			/* 36 */
	cdev_notdef(),			/* 37 */
	cdev_notdef(),			/* 38 */
	cdev_pf_init(NPF,pf),		/* 39: packet filter */
	cdev_random_init(1,random),	/* 40: random data source */
	cdev_uk_init(NUK,uk),		/* 41 */
	cdev_notdef(),			/* 42 */
	cdev_ksyms_init(NKSYMS,ksyms),	/* 43: Kernel symbols device */
	cdev_ch_init(NCH,ch),		/* 44: SCSI autochanger */
	cdev_fuse_init(NFUSE,fuse),	/* 45: fuse */
	cdev_notdef(),			/* 46 */
	cdev_notdef(),			/* 47 */
	cdev_notdef(),			/* 48 */
	cdev_bio_init(NBIO,bio),	/* 49: ioctl tunnel */
	cdev_systrace_init(NSYSTRACE,systrace),	/* 50 system call tracing */
	cdev_notdef(),			/* 51 */
	cdev_ptm_init(NPTY,ptm),	/* 52: pseudo-tty ptm device */
	cdev_vscsi_init(NVSCSI,vscsi),	/* 53: vscsi */
	cdev_disk_init(1,diskmap),	/* 54: disk mapper */
	cdev_pppx_init(NPPPX,pppx),	/* 55: pppx */
	cdev_tun_init(NTUN,tap),	/* 56: Ethernet network tunnel */
};
int	nchrdev = nitems(cdevsw);

int	mem_no = 2;	/* major device number of memory special file */

/*
 * Swapdev is a fake device implemented
 * in sw.c used only internally to get to swstrategy.
 * It cannot be provided to the users, because the
 * swstrategy routine munches the b_dev and b_blkno entries
 * before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines. Instead, /dev/drum is
 * provided as a character (raw) device.
 */
dev_t	swapdev = makedev(3, 0);

/*
 * Returns true if dev is /dev/mem or /dev/kmem.
 */
int
iskmemdev(dev)
	dev_t dev;
{

	return (major(dev) == mem_no && minor(dev) < 2);
}

/*
 * Returns true if dev is /dev/zero.
 */
int
iszerodev(dev)
	dev_t dev;
{

	return (major(dev) == mem_no && minor(dev) == 12);
}

dev_t
getnulldev()
{
	return makedev(mem_no, 2);
}

int chrtoblktbl[] = {
	/*VCHR*/	/*VBLK*/
	/*  0 */	NODEV,
	/*  1 */	NODEV,
	/*  2 */	NODEV,
	/*  3 */	NODEV,
	/*  4 */	NODEV,
	/*  5 */	NODEV,
	/*  6 */	NODEV,
	/*  7 */	NODEV,
	/*  8 */	4,	/* sd */
	/*  9 */	6,	/* cd */
	/* 10 */	NODEV,
	/* 11 */	NODEV,
	/* 12 */	NODEV,
	/* 13 */	NODEV,
	/* 14 */	NODEV,
	/* 15 */	NODEV,
	/* 16 */	NODEV,
	/* 17 */	NODEV,
	/* 18 */	7,	/* rd */
	/* 19 */	8,	/* vnd */
	/* 20 */	5,	/* st */
};
int nchrtoblktbl = nitems(chrtoblktbl);

#include <dev/cons.h>

#define dartcnpollc	nullcnpollc
cons_decl(dart);

struct	consdev constab[] = {
#if NDART > 0
	cons_init(dart),
#endif
	{ 0 },
};
@


1.20
log
@Allocate a new major for tap(4) also note that pseudo-device tun is for tap
as well. OK dlg@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19 2014/10/09 04:10:03 tedu Exp $	*/
@


1.19
log
@mechanical translation of dev_lkm_dummy() to dev_notdef()
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 2014/10/09 03:59:58 tedu Exp $	*/
d146 1
@


1.18
log
@remove LKM devices
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17 2013/06/03 17:33:58 tedu Exp $	*/
d79 6
a84 6
	bdev_lkm_dummy(),		/* 13 */
	bdev_lkm_dummy(),		/* 14 */
	bdev_lkm_dummy(),		/* 15 */
	bdev_lkm_dummy(),		/* 16 */
	bdev_lkm_dummy(),		/* 17 */
	bdev_lkm_dummy(),		/* 18 */
d123 6
a128 6
	cdev_lkm_dummy(),		/* 33 */
	cdev_lkm_dummy(),		/* 34 */
	cdev_lkm_dummy(),		/* 35 */
	cdev_lkm_dummy(),		/* 36 */
	cdev_lkm_dummy(),		/* 37 */
	cdev_lkm_dummy(),		/* 38 */
@


1.17
log
@more fuse in more places. credit: miod
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.16 2012/08/23 06:12:49 deraadt Exp $	*/
d114 1
a114 1
	cdev_lkm_init(NLKM,lkm),	/* 24: loadable module driver */
a190 1
	/* XXXX This needs to be dynamic for LKMs. */
@


1.16
log
@kill nnpfs dead
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 2011/10/06 20:49:27 deraadt Exp $	*/
d62 1
d135 1
a135 1
	cdev_notdef(),			/* 45 */
@


1.15
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14 2011/01/14 19:04:08 jasper Exp $	*/
a61 4
#ifdef NNPFS
#include <nnpfs/nnnpfs.h>
cdev_decl(nnpfs_dev);
#endif
a139 3
#ifdef NNPFS
	cdev_nnpfs_init(NNNPFS,nnpfs_dev),	/* 51: nnpfs communication device */
#else
a140 1
#endif
@


1.14
log
@- use nitems()

"doesn't hurt" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.13 2010/11/22 21:10:45 miod Exp $	*/
a43 1
#include "ccd.h"
d78 1
a78 1
	bdev_disk_init(NCCD,ccd),	/* 9: concatenated disk driver */
d110 1
a110 1
	cdev_disk_init(NCCD,ccd),	/* 17: concatenated disk */
d217 1
a217 1
	/* 17 */	9,	/* ccd */
@


1.13
log
@Remove old comment about constab[] being eventually generated by config(8).
This has never happened and this wouldn't make much sense on anything but
hp300, if at all, nowadays.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 2010/09/23 05:02:14 claudio Exp $	*/
d90 1
a90 1
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);
d155 1
a155 1
int	nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);
d223 1
a223 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.12
log
@Add pppx(4) to the cdevs of the remaining archs.
OK dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.11 2010/07/03 03:59:16 krw Exp $	*/
a224 6
/*
 * This entire table could be autoconfig()ed but that would mean that
 * the kernel's idea of the console would be out of sync with that of
 * the standalone boot.  I think it best that they both use the same
 * known algorithm unless we see a pressing need otherwise.
 */
@


1.11
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.10 2010/06/09 15:25:32 jsing Exp $	*/
d62 1
d153 1
@


1.10
log
@Wire up device nodes for disk mapper.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.8 2009/06/03 14:45:51 jj Exp $	*/
a54 1
#include "ss.h"
d135 1
a135 1
	cdev_ss_init(NSS,ss),		/* 42 */
@


1.9
log
@wire vscsi up to a cdev

for claudio@@ ok deraadt@@
@
text
@d152 1
@


1.8
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.7 2009/01/25 17:30:48 miod Exp $	*/
d62 1
d151 1
@


1.7
log
@Remove /dev/drum and related code.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.6 2008/05/14 20:49:48 miod Exp $	*/
d62 3
a64 3
#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
d144 2
a145 2
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),	/* 51: xfs communication device */
@


1.6
log
@Fix more chrtoblktbl[] sloppyness, and add proper block st nodes to *ppc and
sgi.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 2008/04/08 14:31:54 claudio Exp $	*/
d96 1
a96 1
	cdev_swap_init(1,sw),		/* 3: /dev/drum (swap pseudo-device) */
@


1.5
log
@Split the cdev makro for bpftun into two seperate definitions. tun(4) and
bpf(4) are different enough so that the split makes sense -- this is necessary
to make bpf(4) cloneable.
requested deraadt@@, OK thib@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 2007/05/28 22:26:03 todd Exp $	*/
d205 2
a206 2
	/*  8 */	4,	/* SCSI disk */
	/*  9 */	6,	/* SCSI CD-ROM */
d214 4
a217 10
	/* 17 */	NODEV,
	/* 18 */	7,	/* ram disk */
	/* 19 */	8,	/* vnode disk */
	/* 20 */	NODEV,
	/* 21 */	NODEV,
	/* 22 */	NODEV,
	/* 23 */	NODEV,
	/* 24 */	NODEV,
	/* 25 */	NODEV,
	/* 26 */	10,	/* XD disk */
@


1.4
log
@bio for all archs, ok krw@@ kettenis@@ sounds good marco@@ go for it deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 2007/05/27 01:50:36 todd Exp $	*/
d115 2
a116 2
	cdev_bpftun_init(NBPFILTER,bpf),/* 22: berkeley packet filter */
	cdev_bpftun_init(NTUN,tun),	/* 23: network tunnel */
@


1.3
log
@back out bio, breaks dlg's sparc64 v215
prompted by/ok dlg@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 2007/05/26 19:54:24 todd Exp $	*/
d51 1
d100 1
a100 1
	cdev_notdef(),			/* 7: /dev/sramX */
d142 1
a142 1
	cdev_notdef(),			/* 49 */
@


1.2
log
@prodded by marco, enable bio everywhere
grudgingly ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1.1.1 2006/04/25 15:54:13 miod Exp $	*/
a50 1
#include "bio.h"
d99 1
a99 1
	cdev_bio_init(NBIO,bio),	/* 7: ioctl tunnel */
@


1.1
log
@Enter OpenBSD/aviion, a port to the m88k-based Data General AViiON workstations. Currently restricted to diskless serial console, tested on AV410 only; many thanks to Chris Tribo for documentation and testing.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.30 2004/02/10 01:31:21 millert Exp $	*/
d51 1
d100 1
a100 1
	cdev_notdef(),			/* 7: /dev/sramX */
@


1.1.1.1
log
@Oops, correct import this time.
@
text
@@
