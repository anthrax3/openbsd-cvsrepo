head	1.32;
access;
symbols
	OPENBSD_5_9:1.30.0.2
	OPENBSD_5_9_BASE:1.30
	OPENBSD_5_8:1.29.0.6
	OPENBSD_5_8_BASE:1.29
	OPENBSD_5_7:1.29.0.2
	OPENBSD_5_7_BASE:1.29
	OPENBSD_5_6:1.25.0.6
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.25.0.4
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.23.0.2
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.22.0.2
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.21.0.4
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.2
	OPENBSD_5_0:1.18.0.4
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.2
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.15.0.2
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.4
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.11.0.2
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.32
date	2016.05.11.21.52.50;	author deraadt;	state dead;
branches;
next	1.31;
commitid	VpgRpYXqYSJy4P7J;

1.31
date	2016.04.25.20.09.14;	author tedu;	state Exp;
branches;
next	1.30;
commitid	43yo2G4zZOY9ab4i;

1.30
date	2015.10.23.15.10.52;	author claudio;	state Exp;
branches;
next	1.29;
commitid	g17gxjQh9N9egLbB;

1.29
date	2014.12.11.19.44.17;	author tedu;	state Exp;
branches;
next	1.28;
commitid	jUSAZlQ30WF1ESM9;

1.28
date	2014.10.09.04.10.03;	author tedu;	state Exp;
branches;
next	1.27;
commitid	Db8IHIncfKM3SDX9;

1.27
date	2014.10.09.03.59.59;	author tedu;	state Exp;
branches;
next	1.26;
commitid	I0KLtD9aVxAdm6aW;

1.26
date	2014.08.20.06.14.42;	author mikeb;	state Exp;
branches;
next	1.25;
commitid	qXFkosC6o9cv78HT;

1.25
date	2013.11.04.14.11.29;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2013.08.20.14.27.27;	author ajacoutot;	state Exp;
branches;
next	1.23;

1.23
date	2013.06.03.15.54.47;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2012.08.23.06.12.49;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2011.10.06.20.49.28;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2011.09.22.21.51.24;	author jsing;	state Exp;
branches;
next	1.19;

1.19
date	2011.09.22.13.50.30;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2011.01.14.19.04.08;	author jasper;	state Exp;
branches;
next	1.17;

1.17
date	2010.11.19.20.55.48;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2010.09.23.05.02.14;	author claudio;	state Exp;
branches;
next	1.15;

1.15
date	2010.07.03.03.59.16;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.09.15.25.32;	author jsing;	state Exp;
branches;
next	1.13;

1.13
date	2009.08.13.15.04.20;	author dlg;	state Exp;
branches;
next	1.12;

1.12
date	2009.06.03.14.45.51;	author jj;	state Exp;
branches;
next	1.11;

1.11
date	2009.01.25.17.30.48;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.12.20.03.48;	author mglocker;	state Exp;
branches;
next	1.9;

1.9
date	2008.05.14.20.49.48;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2008.04.20.16.47.17;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2008.04.08.14.31.54;	author claudio;	state Exp;
branches;
next	1.6;

1.6
date	2007.05.28.22.26.03;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2007.05.27.01.50.36;	author todd;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.26.19.54.24;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.31.22.41.38;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2005.07.31.06.39.07;	author dlg;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.01.10.40.47;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.32
log
@remove hppa64 port, which we never got going beyond broken single users.
hppa reverse-stack gives us a valuable test case, but most developers don't
have a 2nd one to proceed further with this.
ok kettenis
@
text
@/*	$OpenBSD: conf.c,v 1.31 2016/04/25 20:09:14 tedu Exp $	*/

/*-
 * Copyright (c) 1991 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *     @@(#)conf.c	7.9 (Berkeley) 5/28/91
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/vnode.h>

#include <machine/conf.h>

#include "vnd.h"
#include "rd.h"
#include "sd.h"
#include "st.h"
#include "cd.h"
#include "ch.h"
#include "uk.h"
#include "wd.h"
bdev_decl(wd);
cdev_decl(wd);
#if 0
#include "fd.h"
#else
#define NFD 0
#endif
bdev_decl(fd);
cdev_decl(fd);

struct bdevsw   bdevsw[] =
{
	bdev_swap_init(1,sw),		/*  0: swap pseudo-device */
	bdev_notdef(),			/*  1: was: concatenated disk driver */
	bdev_disk_init(NVND,vnd),	/*  2: vnode disk driver */
	bdev_disk_init(NRD,rd),		/*  3: RAM disk */
	bdev_disk_init(NSD,sd),		/*  4: SCSI disk */
	bdev_tape_init(NST,st),		/*  5: SCSI tape */
	bdev_disk_init(NCD,cd),		/*  6: SCSI CD-ROM */
	bdev_disk_init(NFD,fd),		/*  7: floppy drive */
	bdev_disk_init(NWD,wd),		/*  8: ST506 drive */
	bdev_notdef(),			/*  9: */
	bdev_notdef(),			/* 10: */
	bdev_notdef(),			/* 11: */
	bdev_notdef(),			/* 12: */
	bdev_notdef(),			/* 13: */
	bdev_notdef(),			/* 14: */
};
int	nblkdev = nitems(bdevsw);

#include "audio.h"
#include "video.h"
#include "bio.h"
#include "pty.h"
#include "wsdisplay.h"
#include "wskbd.h"
#include "wsmouse.h"
#include "wsmux.h"

#include "bpfilter.h"
#include "tun.h"

#include "ksyms.h"

#include "lpt.h"
cdev_decl(lpt);

#include "com.h"
cdev_decl(com);

#include "pf.h"

#include "hotplug.h"
#include "vscsi.h"
#include "pppx.h"

#ifdef USER_PCICONF
#include "pci.h"
cdev_decl(pci);
#endif

#include "usb.h"
#include "uhid.h"
#include "ugen.h"
#include "ulpt.h"
#include "ucom.h"

#include "fuse.h"

struct cdevsw   cdevsw[] =
{
	cdev_cn_init(1,cn),		/*  0: virtual console */
	cdev_ctty_init(1,ctty),		/*  1: controlling terminal */
	cdev_mm_init(1,mm),		/*  2: /dev/{null,mem,kmem,...} */
	cdev_notdef(),			/*  3 was /dev/drum */
	cdev_tty_init(NPTY,pts),	/*  4: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/*  5: pseudo-tty master */
	cdev_log_init(1,log),		/*  6: /dev/klog */
	cdev_notdef(),			/*  7: was: concatenated disk */
	cdev_disk_init(NVND,vnd),	/*  8: vnode disk driver */
	cdev_disk_init(NRD,rd),		/*  9: RAM disk */
	cdev_disk_init(NSD,sd),		/* 10: SCSI disk */
	cdev_tape_init(NST,st),		/* 11: SCSI tape */
	cdev_disk_init(NCD,cd),		/* 12: SCSI cd-rom */
	cdev_ch_init(NCH,ch),		/* 13: SCSI changer */
	cdev_notdef(),			/* 14: */
	cdev_uk_init(NUK,uk),		/* 15: SCSI unknown */
	cdev_fd_init(1,filedesc),	/* 16: file descriptor pseudo-device */
	cdev_bpf_init(NBPFILTER,bpf),	/* 17: Berkeley packet filter */
	cdev_tun_init(NTUN,tun),	/* 18: network tunnel */
	cdev_notdef(),			/* 19: was LKM */
	cdev_random_init(1,random),	/* 20: random generator */
	cdev_pf_init(NPF,pf),		/* 21: packet filter */
	cdev_tty_init(1,pdc),		/* 22: PDC device */
	cdev_tty_init(NCOM,com),	/* 23: RS232 */
	cdev_disk_init(NFD,fd),		/* 24: floppy drive */
	cdev_ksyms_init(NKSYMS,ksyms),	/* 25: Kernel symbols device */
	cdev_lpt_init(NLPT,lpt),	/* 26: parallel printer */
	cdev_wsdisplay_init(NWSDISPLAY,	/* 27: workstation console */
	    wsdisplay),
	cdev_mouse_init(NWSKBD,wskbd),	/* 28: keyboards */
	cdev_mouse_init(NWSMOUSE,wsmouse), /* 29: mice */
	cdev_mouse_init(NWSMUX,wsmux),	/* 30: mux */
#ifdef USER_PCICONF
	cdev_pci_init(NPCI,pci),	/* 31: PCI user */
#else
	cdev_notdef(),			/* 31: */
#endif
	cdev_notdef(),			/* 32 */
	cdev_video_init(NVIDEO,video),	/* 33: generic video I/O */
	cdev_notdef(),			/* 34 */
	cdev_audio_init(NAUDIO,audio),	/* 35: /dev/audio */
	cdev_notdef(),			/* 36: was: /dev/crypto */
	cdev_bio_init(NBIO,bio),	/* 37: ioctl tunnel */
	cdev_ptm_init(NPTY,ptm),	/* 38: pseudo-tty ptm device */
	cdev_disk_init(NWD,wd),		/* 39: ST506 disk */
	cdev_usb_init(NUSB,usb),	/* 40: USB controller */
	cdev_usbdev_init(NUHID,uhid),	/* 41: USB generic HID */
	cdev_usbdev_init(NUGEN,ugen),	/* 42: USB generic driver */
	cdev_ulpt_init(NULPT,ulpt),	/* 43: USB printers */
	cdev_notdef(),			/* 44: was urio */
	cdev_tty_init(NUCOM,ucom),	/* 45: USB tty */
	cdev_notdef(),			/* 46: was USB scanners */
	cdev_hotplug_init(NHOTPLUG,hotplug), /* 47: devices hot plugging */
	cdev_notdef(),			/* 48: */
	cdev_notdef(),			/* 49: */
	cdev_notdef(),			/* 50: */
	cdev_notdef(),			/* 51: */
	cdev_notdef(),			/* 52: */
	cdev_notdef(),			/* 53: */
	cdev_vscsi_init(NVSCSI,vscsi),	/* 54: vscsi */
	cdev_notdef(),
	cdev_disk_init(1,diskmap),	/* 56: disk mapper */
	cdev_pppx_init(NPPPX,pppx),	/* 57: pppx */
	cdev_fuse_init(NFUSE,fuse),	/* 58: fuse */
	cdev_tun_init(NTUN,tap),	/* 59: Ethernet network tunnel */
};
int nchrdev = nitems(cdevsw);

int mem_no = 2;		/* major device number of memory special file */

/*
 * Swapdev is a fake device implemented
 * in sw.c used only internally to get to swstrategy.
 * It cannot be provided to the users, because the
 * swstrategy routine munches the b_dev and b_blkno entries
 * before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines. Instead, /dev/drum is
 * provided as a character (raw) device.
 */
dev_t   swapdev = makedev(0, 0);

int chrtoblktbl[] = {
	/*VCHR*/	/*VBLK*/
	/*  0 */	NODEV,
	/*  1 */	NODEV,
	/*  2 */	NODEV,
	/*  3 */	NODEV,
	/*  4 */	NODEV,
	/*  5 */	NODEV,
	/*  6 */	NODEV,
	/*  7 */	NODEV,
	/*  8 */	2,		/* vnd */
	/*  9 */	3,		/* rd */
	/* 10 */	4,		/* sd */
	/* 11 */	5,		/* st */
	/* 12 */	6,		/* cd */
	/* 13 */	NODEV,
	/* 14 */	NODEV,
	/* 15 */	NODEV,
	/* 16 */	NODEV,
	/* 17 */	NODEV,
	/* 18 */	NODEV,
	/* 19 */	NODEV,
	/* 20 */	NODEV,
	/* 21 */	NODEV,
	/* 22 */	NODEV,
	/* 23 */	NODEV,
	/* 24 */	7,		/* fd */
	/* 25 */	NODEV,
	/* 26 */	NODEV,
	/* 27 */	NODEV,
	/* 28 */	NODEV,
	/* 29 */	NODEV,
	/* 30 */	NODEV,
	/* 31 */	NODEV,
	/* 32 */	NODEV,
	/* 33 */	NODEV,
	/* 34 */	NODEV,
	/* 35 */	NODEV,
	/* 36 */	NODEV,
	/* 37 */	NODEV,
	/* 38 */	NODEV,
	/* 39 */	8,		/* wd */
};
int nchrtoblktbl = nitems(chrtoblktbl);

/*
 * Returns true if dev is /dev/zero.
 */
int
iszerodev(dev_t dev)
{
	return (major(dev) == mem_no && minor(dev) == 12);
}

dev_t
getnulldev(void)
{
	return makedev(mem_no, 2);
}

/*
 * Returns true if dev is /dev/mem or /dev/kmem.
 */
int
iskmemdev(dev_t dev)
{
	return (major(dev) == mem_no && minor(dev) < 2);
}
@


1.31
log
@remove systrace
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.30 2015/10/23 15:10:52 claudio Exp $	*/
@


1.30
log
@Allocate a new major for tap(4) also note that pseudo-device tun is for tap
as well. OK dlg@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.29 2014/12/11 19:44:17 tedu Exp $	*/
a102 1
#include "systrace.h"
d159 1
a159 1
	cdev_notdef(),
d161 1
a161 1
	cdev_systrace_init(NSYSTRACE,systrace),	/* 34: system call tracing */
@


1.29
log
@dragonflybsd has added a urio driver. conservation of urios requires
that we delete ours, which isn't actually useful.
ok mpi sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.28 2014/10/09 04:10:03 tedu Exp $	*/
d187 1
@


1.28
log
@mechanical translation of dev_lkm_dummy() to dev_notdef()
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.27 2014/10/09 03:59:59 tedu Exp $	*/
a116 1
#include "urio.h"
d172 1
a172 1
	cdev_urio_init(NURIO,urio),	/* 44: USB Diamond Rio 500 */
@


1.27
log
@remove LKM devices
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.26 2014/08/20 06:14:42 mikeb Exp $	*/
d72 6
a77 6
	bdev_lkm_dummy(),		/*  9: */
	bdev_lkm_dummy(),		/* 10: */
	bdev_lkm_dummy(),		/* 11: */
	bdev_lkm_dummy(),		/* 12: */
	bdev_lkm_dummy(),		/* 13: */
	bdev_lkm_dummy(),		/* 14: */
d177 6
a182 6
	cdev_lkm_dummy(),		/* 48: */
	cdev_lkm_dummy(),		/* 49: */
	cdev_lkm_dummy(),		/* 50: */
	cdev_lkm_dummy(),		/* 51: */
	cdev_lkm_dummy(),		/* 52: */
	cdev_lkm_dummy(),		/* 53: */
@


1.26
log
@unlink crypto(4) pseudo device from the architecture dependant character
device tables and kernel config files.  ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.25 2013/11/04 14:11:29 deraadt Exp $	*/
d143 1
a143 1
	cdev_lkm_init(NLKM,lkm),	/* 19: loadable module driver */
a204 1
	/* XXXX This needs to be dynamic for LKMs. */
@


1.25
log
@remove iop(4) driver.  it is entirely unmaintained and supports something
which basically doesn't exist at all.
reminded about it by brad
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.24 2013/08/20 14:27:27 ajacoutot Exp $	*/
a89 1
#include "inet.h"
d165 1
a165 1
	cdev_crypto_init(NCRYPTO,crypto), /* 36: /dev/crypto */
@


1.24
log
@Remove uscanner(4). It was disabled in GENERIC more than 2.5 years ago.
No regression has been reported since libusb became the prefered
solution to work with USB scanners.

req. by mpi@@
ok ian@@ mpi@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.23 2013/06/03 15:54:47 tedu Exp $	*/
a120 1
#include "bthub.h"
d185 1
a185 1
	cdev_bthub_init(NBTHUB,bthub),	/* 55: bthub */
@


1.23
log
@changes for isc fuse support. not enabled. ok beck deraadt.
from Sylvestre Gallon ccna.syl gmail.com
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.22 2012/08/23 06:12:49 deraadt Exp $	*/
a119 1
#include "uscanner.h"
d177 1
a177 1
	cdev_usbdev_init(NUSCANNER,uscanner), /* 46: USB scanners */
@


1.22
log
@kill nnpfs dead
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.21 2011/10/06 20:49:28 deraadt Exp $	*/
d123 1
d190 1
@


1.21
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 2011/09/22 21:51:24 jsing Exp $	*/
a88 4
#ifdef NNPFS
#include <nnpfs/nnnpfs.h>
cdev_decl(nnpfs_dev);
#endif
a162 3
#ifdef NNPFS
	cdev_nnpfs_init(NNNPFS,nnpfs_dev),	/* 32: nnpfs communication device */
#else
a163 1
#endif
@


1.20
log
@Ansify functions definitions.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19 2011/09/22 13:50:30 deraadt Exp $	*/
a42 1
#include "ccd.h"
d64 1
a64 1
	bdev_disk_init(NCCD,ccd),	/*  1: concatenated disk driver */
d137 1
a137 1
	cdev_disk_init(NCCD,ccd),	/*  7: concatenated disk */
d223 1
a223 1
	/*  7 */	1,		/* ccd */
@


1.19
log
@Start removing some tiny irrelevant differences between hppa64 and hppa
so that important differences can be spotted easier.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 2011/01/14 19:04:08 jasper Exp $	*/
d264 1
a264 2
iszerodev(dev)
	dev_t dev;
d270 1
a270 1
getnulldev()
d279 1
a279 2
iskmemdev(dev)
	dev_t dev;
@


1.18
log
@- use nitems()

"doesn't hurt" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17 2010/11/19 20:55:48 miod Exp $	*/
d73 6
a78 7
					/*  9: */
	bdev_lkm_dummy(),
	bdev_lkm_dummy(),
	bdev_lkm_dummy(),
	bdev_lkm_dummy(),
	bdev_lkm_dummy(),
	bdev_lkm_dummy(),
a128 1

d145 1
a145 1
	cdev_notdef(),			/* 14 */
d166 1
a166 1
	cdev_notdef(),
@


1.17
log
@Sync MAKEDEV against conf.c, and both against GENERIC.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.16 2010/09/23 05:02:14 claudio Exp $	*/
d81 1
a81 1
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);
d201 1
a201 1
int nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);
d260 1
a260 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.16
log
@Add pppx(4) to the cdevs of the remaining archs.
OK dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 2010/07/03 03:59:16 krw Exp $	*/
d111 1
a111 1

d120 11
d182 18
a199 9
	cdev_lkm_dummy(),		/* 40 */
	cdev_lkm_dummy(),		/* 41 */
	cdev_lkm_dummy(),		/* 42 */
	cdev_lkm_dummy(),		/* 43 */
	cdev_lkm_dummy(),		/* 44 */
	cdev_lkm_dummy(),		/* 45 */
	cdev_vscsi_init(NVSCSI,vscsi),	/* 46: vscsi */
	cdev_disk_init(1,diskmap),	/* 47: disk mapper */
	cdev_pppx_init(NPPPX,pppx),	/* 48: pppx */
@


1.15
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14 2010/06/09 15:25:32 jsing Exp $	*/
d113 1
d179 1
@


1.14
log
@Wire up device nodes for disk mapper.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 2009/06/03 14:45:51 jj Exp $	*/
a49 1
#include "ss.h"
d135 1
a135 1
	cdev_ss_init(NSS,ss),		/* 14: SCSI scanner */
@


1.13
log
@wire vscsi up to a cdev

for claudio@@ ok deraadt@@
@
text
@d178 1
a178 1
	
@


1.12
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.11 2009/01/25 17:30:48 miod Exp $	*/
d113 2
d171 8
a178 6
	cdev_lkm_dummy(),
	cdev_lkm_dummy(),
	cdev_lkm_dummy(),
	cdev_lkm_dummy(),
	cdev_lkm_dummy(),
	cdev_lkm_dummy(),
@


1.11
log
@Remove /dev/drum and related code.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.10 2008/06/12 20:03:48 mglocker Exp $	*/
d92 3
a94 3
#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
d157 2
a158 2
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),	/* 32: xfs communication device */
@


1.10
log
@Enable /dev/video* for all USB capable archs.  MAKEDEV bits will follow
shortly.

OK todd@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.9 2008/05/14 20:49:48 miod Exp $	*/
d123 1
a123 1
	cdev_swap_init(1,sw),		/*  3: /dev/drum (swap pseudo-device) */
@


1.9
log
@Fix more chrtoblktbl[] sloppyness, and add proper block st nodes to *ppc and
sgi.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.8 2008/04/20 16:47:17 kettenis Exp $	*/
d85 1
d162 1
a162 1
	cdev_notdef(),			/* 33: ALTQ (deprecated) */
@


1.8
log
@Sync console handling with hppa port:

Delay switching to the real serial console until we attach the serial device.
The variety of different serial devices is just too big to make a decision up
front.  This should make the second serial port on four-digit B/C/J-class
workstation work as a serial console too.

Last bit isn't true yet; the code to support com @@ ssio isn't there yet on
hppa64.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.7 2008/04/08 14:31:54 claudio Exp $	*/
d200 6
a205 6
	/*  7 */	1,
	/*  8 */	2,
	/*  9 */	3,
	/* 10 */	4,
	/* 11 */	5,
	/* 12 */	6,
d217 1
a217 1
	/* 24 */	7,
d232 1
a232 1
	/* 39 */	NODEV,
@


1.7
log
@Split the cdev makro for bpftun into two seperate definitions. tun(4) and
bpf(4) are different enough so that the split makes sense -- this is necessary
to make bpf(4) cloneable.
requested deraadt@@, OK thib@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.6 2007/05/28 22:26:03 todd Exp $	*/
a260 18

#include <dev/cons.h>

cons_decl(pdc);
cons_decl(ws);
cons_decl(com);

struct  consdev constab[] = {
	cons_init(pdc),		/* XXX you'd better leave it here for pdc.c */
#if NWSDISPLAY1 > 0
	cons_init(ws),
#endif
#if NCOM1 > 0
	cons_init(com),
#endif
	{ 0 }
};

@


1.6
log
@bio for all archs, ok krw@@ kettenis@@ sounds good marco@@ go for it deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 2007/05/27 01:50:36 todd Exp $	*/
d136 2
a137 2
	cdev_bpftun_init(NBPFILTER,bpf),/* 17: Berkeley packet filter */
	cdev_bpftun_init(NTUN,tun),	/* 18: network tunnel */
@


1.5
log
@back out bio, breaks dlg's sparc64 v215
prompted by/ok dlg@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 2007/05/26 19:54:24 todd Exp $	*/
d85 1
d165 1
a165 1
	cdev_notdef(),			/* 37 */
@


1.4
log
@prodded by marco, enable bio everywhere
grudgingly ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 2005/12/31 22:41:38 miod Exp $	*/
a84 1
#include "bio.h"
d164 1
a164 1
	cdev_bio_init(NBIO,bio),	/* 37: ioctl tunnel */
@


1.3
log
@Nuke unused cdev_wscons_init() macro.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 2005/07/31 06:39:07 dlg Exp $	*/
d85 1
d165 1
a165 1
	cdev_notdef(),			/* 37 */
@


1.2
log
@remove the config glue between the /dev entry for ses and its driver

sure deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1 2005/04/01 10:40:47 mickey Exp $	*/
a82 6

/* open, close, read, write, ioctl, tty, mmap */
#define cdev_wscons_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	dev_init(c,n,write), dev_init(c,n,ioctl), dev_init(c,n,stop), \
	dev_init(c,n,tty), ttpoll, dev_init(c,n,mmap) }
@


1.1
log
@small batch early bottling hppa64 port
matured in mighty ukrainian oak for 23 months
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a50 1
#include "ses.h"
d170 1
a170 1
	cdev_ses_init(NSES,ses),	/* 37: SCSI SES/SAF-TE */
@

