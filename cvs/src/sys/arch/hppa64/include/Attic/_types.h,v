head	1.19;
access;
symbols
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.8
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.10.0.4
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.4
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.8
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.1.0.6
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.19
date	2016.05.11.21.52.50;	author deraadt;	state dead;
branches;
next	1.18;
commitid	VpgRpYXqYSJy4P7J;

1.18
date	2015.09.26.16.01.00;	author guenther;	state Exp;
branches;
next	1.17;
commitid	7hXtG92g49YWbJA4;

1.17
date	2014.03.19.05.14.13;	author guenther;	state Exp;
branches;
next	1.16;

1.16
date	2013.12.18.16.41.01;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2013.07.13.17.28.36;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2013.07.05.19.46.27;	author guenther;	state Exp;
branches;
next	1.13;

1.13
date	2013.07.04.13.57.40;	author otto;	state Exp;
branches;
next	1.12;

1.12
date	2013.07.04.05.19.41;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2012.11.05.19.39.34;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2011.11.15.17.12.14;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2011.11.10.23.15.11;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.08.03.40.32;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2011.09.08.02.47.13;	author guenther;	state Exp;
branches;
next	1.6;

1.6
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.24.21.27.57;	author kettenis;	state Exp;
branches;
next	1.4;

1.4
date	2008.07.21.20.50.54;	author martynas;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.16.17.27.30;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.15.01.56.46;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.06.18.50.08;	author millert;	state Exp;
branches;
next	;


desc
@@


1.19
log
@remove hppa64 port, which we never got going beyond broken single users.
hppa reverse-stack gives us a valuable test case, but most developers don't
have a 2nd one to proceed further with this.
ok kettenis
@
text
@/*	$OpenBSD: _types.h,v 1.18 2015/09/26 16:01:00 guenther Exp $	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)types.h	8.3 (Berkeley) 1/5/94
 *	@@(#)ansi.h	8.2 (Berkeley) 1/4/94
 */

#ifndef _MACHINE__TYPES_H_
#define _MACHINE__TYPES_H_

#if defined(_KERNEL)
typedef struct label_t {
	long	val[20];
} label_t;
#endif

/*
 * _ALIGN(p) rounds p (pointer or byte index) up to a correctly-aligned
 * value for all data types (int, long, ...).   The result is an
 * unsigned long and must be cast to any desired pointer type.
 *
 * _ALIGNED_POINTER is a boolean macro that checks whether an address
 * is valid to fetch data elements of type t from on this architecture.
 * This does not reflect the optimal alignment, just the possibility
 * (within reasonable limits).
 */
#define	_ALIGNBYTES		7
#define	_STACKALIGNBYTES	_ALIGNBYTES
#define	_ALIGN(p)		(((unsigned long)(p) + _ALIGNBYTES) & ~_ALIGNBYTES)
#define	_ALIGNED_POINTER(p,t)	((((unsigned long)(p)) & (sizeof(t) - 1)) == 0)

typedef unsigned long		hppa_hpa_t;	/* XXX */
typedef unsigned long		hppa_spa_t;	/* XXX */
typedef unsigned int		pa_space_t;	/* XXX */

/* 7.18.1.1 Exact-width integer types */
typedef	signed char		__int8_t;
typedef	unsigned char		__uint8_t;
typedef	short			__int16_t;
typedef	unsigned short		__uint16_t;
typedef	int			__int32_t;
typedef	unsigned int		__uint32_t;
typedef	long long		__int64_t;
typedef	unsigned long long	__uint64_t;

/* 7.18.1.2 Minimum-width integer types */
typedef	__int8_t		__int_least8_t;
typedef	__uint8_t		__uint_least8_t;
typedef	__int16_t		__int_least16_t;
typedef	__uint16_t		__uint_least16_t;
typedef	__int32_t		__int_least32_t;
typedef	__uint32_t		__uint_least32_t;
typedef	__int64_t		__int_least64_t;
typedef	__uint64_t		__uint_least64_t;

/* 7.18.1.3 Fastest minimum-width integer types */
typedef	__int32_t		__int_fast8_t;
typedef	__uint32_t		__uint_fast8_t;
typedef	__int32_t		__int_fast16_t;
typedef	__uint32_t		__uint_fast16_t;
typedef	__int32_t		__int_fast32_t;
typedef	__uint32_t		__uint_fast32_t;
typedef	__int64_t		__int_fast64_t;
typedef	__uint64_t		__uint_fast64_t;
#define	__INT_FAST8_MIN		INT32_MIN
#define	__INT_FAST16_MIN	INT32_MIN
#define	__INT_FAST32_MIN	INT32_MIN
#define	__INT_FAST64_MIN	INT64_MIN
#define	__INT_FAST8_MAX		INT32_MAX
#define	__INT_FAST16_MAX	INT32_MAX
#define	__INT_FAST32_MAX	INT32_MAX
#define	__INT_FAST64_MAX	INT64_MAX
#define	__UINT_FAST8_MAX	UINT32_MAX
#define	__UINT_FAST16_MAX	UINT32_MAX
#define	__UINT_FAST32_MAX	UINT32_MAX
#define	__UINT_FAST64_MAX	UINT64_MAX

/* 7.18.1.4 Integer types capable of holding object pointers */
typedef	long			__intptr_t;
typedef	unsigned long		__uintptr_t;

/* 7.18.1.5 Greatest-width integer types */
typedef	__int64_t		__intmax_t;
typedef	__uint64_t		__uintmax_t;

/* Register size */
typedef long			__register_t;

/* VM system types */
typedef unsigned long		__vaddr_t;
typedef unsigned long		__paddr_t;
typedef unsigned long		__vsize_t;
typedef unsigned long		__psize_t;

/* Standard system types */
typedef double			__double_t;
typedef float			__float_t;
typedef long			__ptrdiff_t;
typedef	unsigned long		__size_t;
typedef	long			__ssize_t;
typedef	__builtin_va_list	__va_list;

/* Wide character support types */
#ifndef __cplusplus
typedef	int			__wchar_t;
#endif
typedef int			__wint_t;
typedef	int			__rune_t;
typedef	void *			__wctrans_t;
typedef	void *			__wctype_t;

#endif	/* _MACHINE__TYPES_H_ */
@


1.18
log
@lint is dead and C99 may be old enough to drive a car: delete LONGLONG
comments

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.17 2014/03/19 05:14:13 guenther Exp $	*/
@


1.17
log
@It's safe to assumed 'signed' exists
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.16 2013/12/18 16:41:01 deraadt Exp $	*/
a69 1
/* LONGLONG */
a70 1
/* LONGLONG */
@


1.16
log
@Provide MI symbol _STACKALIGNBYTES
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.15 2013/07/13 17:28:36 deraadt Exp $	*/
d64 1
a64 1
typedef	__signed char		__int8_t;
@


1.15
log
@unify register_t to long on all platforms
ok miod kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.14 2013/07/05 19:46:27 guenther Exp $	*/
d54 3
a56 2
#define	_ALIGNBYTES	7
#define	_ALIGN(p)	(((unsigned long)(p) + _ALIGNBYTES) & ~_ALIGNBYTES)
@


1.14
log
@Take II, this time without flubbing off_t: : move several internal
type definitions that are the same across all archs from
<machine/_types.h> to <sys/_types.h>

ok deraadt@@ kettenis@@ otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.13 2013/07/04 13:57:40 otto Exp $	*/
d115 1
a115 1
typedef __int64_t		__register_t;
@


1.13
log
@backout previous; off_t must be signed and there might be other C++ API
breakage lurking; ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.11 2012/11/05 19:39:34 miod Exp $	*/
a123 2
typedef int			__clock_t;
typedef int			__clockid_t;
a125 1
typedef long long		__off_t;
a128 2
typedef	int			__time_t;
typedef int			__timer_t;
@


1.12
log
@To ease future changes, move several internal type definitions that are
the same across all archs from <machine/_types.h> to <sys/_types.h>

ok deraadt@@
@
text
@d124 2
d128 1
d132 2
@


1.11
log
@unifdef -D __HAVE_TIMECOUNTER
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.10 2011/11/15 17:12:14 deraadt Exp $	*/
a123 2
typedef int			__clock_t;
typedef int			__clockid_t;
a125 1
typedef long long		__off_t;
a128 2
typedef	int			__time_t;
typedef int			__timer_t;
@


1.10
log
@label_t is the kernel setjmp buffer.  It should simply be an array of
the right type, noone will ever fiddle with the internals.
discussed with jsing
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.9 2011/11/10 23:15:11 deraadt Exp $	*/
a143 3

/* Feature test macros */
#define __HAVE_TIMECOUNTER
@


1.9
log
@Eliminate more useless differences between hppa and hppa64
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.8 2011/09/08 03:40:32 guenther Exp $	*/
d39 2
a40 6
typedef struct label_t {		/* XXX longs?? */
	int	lbl_rp;
	int	lbl_sp;
	int	lbl_s[17];
	int	lbl_ss[1];
	double	lbl_sf[10];	/* hp800:fr12-fr15, hp700:fr12-fr21 */
@


1.8
log
@Provide namespace-safe alignment macros in <machine/_types.h>, with
compat names kept in <machine/param.h>.  In <sys/socket.h>, pull
in <sys/_types.h> instead of the namespace polluting <machine/param.h>
and completely eliminate __CMSG_ALIGN, replaced by _ALIGN

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.7 2011/09/08 02:47:13 guenther Exp $	*/
d39 1
a39 1
typedef struct label_t {
d119 1
a119 1
typedef long			__register_t;
@


1.7
log
@Make the INT_FAST*_{MIN,MAX} macros match the types they're defined to.
Since the underlying types of the int_fast types are set by machine/_types.h,
put internal macros in that same file and define the exposed
INT_FAST*_{MIN,MAX} macros from those.

ok millert@@, kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.6 2011/03/23 16:54:35 pirofti Exp $	*/
d47 14
@


1.6
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.5 2010/07/24 21:27:57 kettenis Exp $	*/
d83 12
@


1.5
log
@Switch hppa64 to timecounters.
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.4 2008/07/21 20:50:54 martynas Exp $	*/
d35 2
a36 2
#ifndef _HPPA64__TYPES_H_
#define _HPPA64__TYPES_H_
d126 1
a126 1
#endif	/* _HPPA64__TYPES_H_ */
@


1.4
log
@- add proper double_t and float_t definitions for each arch
- math.h shouldn't define FLT_EVAL_METHOD, but float.h should (per
C99).  remove from math.h, and add proper definitions in float.h
ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.3 2007/05/16 17:27:30 art Exp $	*/
d122 3
@


1.3
log
@The world of __HAVEs and __HAVE_NOTs is reducing. All architectures
have cpu_info now, so kill the option.

eyeballed by jsg@@ and grange@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.2 2007/05/15 01:56:46 deraadt Exp $	*/
d104 2
@


1.2
log
@kill __HAVE_DEVICE_REGISTER by requiring all architectures to have a
device_register() function -- even if it does nothing.  reduces the
cpp-based blather different between architectures
idea ok'd by miod; tested on all architectures (except a few miod will
need to cleanup because he has them)
@
text
@d1 1
a1 1
/*	$OpenBSD: _types.h,v 1.1 2006/01/06 18:50:08 millert Exp $	*/
a119 3

/* Feature test macros */
#define __HAVE_CPUINFO
@


1.1
log
@Merge machine/ansi.h and machine/types.h into machine/_types.h and
rename the types using the __ protected namespace (e.g. __size_t).
Idea from FreeBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a121 1
#define __HAVE_DEVICE_REGISTER
@

