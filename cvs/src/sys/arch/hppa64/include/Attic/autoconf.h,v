head	1.4;
access;
symbols
	OPENBSD_5_9:1.3.0.18
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.16
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.24
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.22
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.18
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.20
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.16
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.14
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.12
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.10
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2016.05.11.21.52.50;	author deraadt;	state dead;
branches;
next	1.3;
commitid	VpgRpYXqYSJy4P7J;

1.3
date	2011.04.07.13.13.01;	author jsing;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.22.01.38.09;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.01.10.40.48;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove hppa64 port, which we never got going beyond broken single users.
hppa reverse-stack gives us a valuable test case, but most developers don't
have a 2nd one to proceed further with this.
ok kettenis
@
text
@/*	$OpenBSD: autoconf.h,v 1.3 2011/04/07 13:13:01 jsing Exp $	*/

/*
 * Copyright (c) 2005 Michael Shalayeff
 * All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
 * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <machine/bus.h>
#include <machine/pdc.h>

struct confargs {
	const char	*ca_name;	/* device name/description */
	struct iodc_data ca_type;	/* iodc-specific type descrition */
	bus_space_tag_t	ca_iot;		/* io tag */
	bus_dma_tag_t	ca_dmatag;	/* DMA tag */
	hppa_hpa_t	ca_hpa;		/* module HPA */
	u_int		ca_hpasz;	/* module HPA size (if avail) */
	int		ca_mod;		/* this module */
}; 

/* this is used for hppa_knownmodules table
 * describing known to this port modules,
 * system boards, cpus, fpus and busses
 */
struct hppa_mod_info {
	int	mi_type;
	int	mi_sv;
	const char *mi_name;
};

extern void (*cold_hook)(int);
#define	HPPA_COLD_COLD	0
#define	HPPA_COLD_HOT	1   
#define	HPPA_COLD_OFF	2

struct device;

const char *hppa_mod_info(int, int);
void	pdc_scan(struct device *, struct confargs *);
int	mbprint(void *, const char *);

int	cpu_intr_findirq(void);
void	*cpu_intr_map(void *v, int pri, int irq, int (*handler)(void *),
	    void *arg, const char *name);
void	*cpu_intr_establish(int pri, int irq, int (*handler)(void *),
	    void *arg, const char *name);
int	clock_intr(void *);

void	dumpconf(void);
@


1.3
log
@Initial interrupt handling implementation for hppa64.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.1 2005/04/01 10:40:48 mickey Exp $	*/
@


1.2
log
@devices scan for the early new hppa64 machines.
match on product id as well as names in correspondent drivers.
chain pluto later in case it shows up too early...
@
text
@d54 7
@


1.1
log
@small batch early bottling hppa64 port
matured in mighty ukrainian oak for 23 months
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d30 1
d51 1
a51 1
void	pdc_patscan(struct device *, struct confargs *, int);
@

