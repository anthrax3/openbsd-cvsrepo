head	1.21;
access;
symbols
	OPENBSD_5_9:1.20.0.10
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.12
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.4
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.8
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.6
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.2
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.17.0.4
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.2
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.2
	OPENBSD_5_0:1.14.0.2
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.12.0.4
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.2
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.11.0.6
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.8
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.4
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.2
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.21
date	2016.05.11.21.52.50;	author deraadt;	state dead;
branches;
next	1.20;
commitid	VpgRpYXqYSJy4P7J;

1.20
date	2013.03.26.05.04.10;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2013.03.25.17.46.24;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2013.03.23.16.12.22;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2012.07.02.18.02.31;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2011.11.10.23.14.13;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2011.09.08.03.40.32;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2011.05.03.21.00.23;	author kettenis;	state Exp;
branches;
next	1.13;

1.13
date	2011.04.07.15.45.17;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2010.07.01.04.20.38;	author jsing;	state Exp;
branches;
next	1.11;

1.11
date	2008.04.27.17.48.10;	author martin;	state Exp;
branches;
next	1.10;

1.10
date	2008.04.20.11.53.11;	author kettenis;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.28.21.02.49;	author thib;	state Exp;
branches;
next	1.8;

1.8
date	2006.08.12.17.54.38;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.19.01.47.23;	author martin;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.13.01.56.43;	author martin;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.28.20.13.08;	author martin;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.26.18.35.45;	author martin;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.12.23.05.05;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2005.07.31.15.31.13;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.01.10.40.48;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.21
log
@remove hppa64 port, which we never got going beyond broken single users.
hppa reverse-stack gives us a valuable test case, but most developers don't
have a 2nd one to proceed further with this.
ok kettenis
@
text
@/*	$OpenBSD: param.h,v 1.20 2013/03/26 05:04:10 deraadt Exp $	*/

/*
 * Copyright (c) 1988-1994, The University of Utah and
 * the Computer Systems Laboratory at the University of Utah (CSL).
 * All rights reserved.
 *
 * Permission to use, copy, modify and distribute this software is hereby
 * granted provided that (1) source code retains these copyright, permission,
 * and disclaimer notices, and (2) redistributions including binaries
 * reproduce the notices in supporting documentation, and (3) all advertising
 * materials mentioning features or use of this software display the following
 * acknowledgement: ``This product includes software developed by the
 * Computer Systems Laboratory at the University of Utah.''
 *
 * THE UNIVERSITY OF UTAH AND CSL ALLOW FREE USE OF THIS SOFTWARE IN ITS "AS
 * IS" CONDITION.  THE UNIVERSITY OF UTAH AND CSL DISCLAIM ANY LIABILITY OF
 * ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * CSL requests users of this software to return to csl-dist@@cs.utah.edu any
 * improvements that they make and grant CSL redistribution rights.
 */

#ifndef	_MACHINE_PARAM_H_
#define	_MACHINE_PARAM_H_

#ifdef _KERNEL
#include <machine/cpu.h>
#include <machine/intr.h>
#endif

#define	_MACHINE	hppa64
#define	MACHINE		"hppa64"
#define	_MACHINE_ARCH	hppa64
#define	MACHINE_ARCH	"hppa64"
#define	MID_MACHINE	MID_HPPA20

#define	PAGE_SHIFT	12
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

#define	KERNBASE	0x00000000		/* start of kernel virtual */

#ifdef _KERNEL

#define	NBPG		PAGE_SIZE		/* bytes/page */
#define	PGSHIFT		PAGE_SHIFT		/* LOG2(NBPG) */
#define	PGOFSET		PAGE_MASK		/* byte offset into page */

#define	UPAGES		5			/* pages of u-area */
#define	USPACE		(UPAGES * PAGE_SIZE)	/* total size of u-area */
#define	USPACE_ALIGN	0			/* u-area alignment 0-none */

#define	NMBCLUSTERS	4096			/* map size, max cluster allocation */

#ifndef	MSGBUFSIZE
#define	MSGBUFSIZE	(2 * PAGE_SIZE)		/* default message buffer size */
#endif

/*
 * Maximum size of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MAX_DEFAULT	((128 * 1024 * 1024) >> PAGE_SHIFT)

#endif /* _KERNEL */

#define	MACHINE_STACK_GROWS_UP	1		/* stack grows to higher addresses */
#define	__SWAP_BROKEN

#endif /* _MACHINE_PARAM_H_ */
@


1.20
log
@PGSHIFT and PGOFSET are now contained inside the kernel namespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2013/03/25 17:46:24 deraadt Exp $	*/
@


1.19
log
@ALIGNBYTES/ALIGN/ALIGNED_POINTER can move to the MI file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18 2013/03/23 16:12:22 deraadt Exp $	*/
a40 2
#define	PGSHIFT		PAGE_SHIFT		/* LOG2(NBPG) */
#define	PGOFSET		PAGE_MASK		/* byte offset into page */
d47 2
@


1.18
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 2012/07/02 18:02:31 deraadt Exp $	*/
a36 4

#define	ALIGNBYTES		_ALIGNBYTES
#define	ALIGN(p)		_ALIGN(p)
#define	ALIGNED_POINTER(p,t)	_ALIGNED_POINTER(p,t)
@


1.17
log
@Does not need to pull in "the world" either
ok jsing
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2011/11/10 23:14:13 deraadt Exp $	*/
d3 1
a3 1
/* 
a21 2
 *
 * 	Utah $Hdr: param.h 1.18 94/12/16$
d24 3
a31 4
/*
 * Machine dependent constants for PA-RISC.
 */

a41 2
#define	PAGE_SIZE	4096
#define	PAGE_MASK	(PAGE_SIZE-1)
d43 4
d48 1
a48 3
#define	NBPG		4096		/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */
#define	PGSHIFT		12		/* LOG2(NBPG) */
d50 1
a50 1
#define	KERNBASE	0x00000000	/* start of kernel virtual */
d52 1
a52 4
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define	DEV_BSIZE	(1 << DEV_BSHIFT)
#define BLKDEV_IOSIZE	2048
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */
d54 3
a56 1
#define	MACHINE_STACK_GROWS_UP	1	/* stack grows to higher addresses */
d58 1
a58 2
#define	USPACE		(5 * NBPG)	/* pages for user struct and kstack */
#define	USPACE_ALIGN	(0)		/* u-area alignment 0-none */
d61 1
a61 1
#define	MSGBUFSIZE	2*NBPG		/* default message buffer size */
d65 1
a65 6
 * Constants related to network buffer management.
 */
#define	NMBCLUSTERS	4096		/* map size, max cluster allocation */

/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
a67 1
#define	NKMEMPAGES_MIN_DEFAULT	((8 * 1024 * 1024) >> PAGE_SHIFT)
d70 1
a70 3
/* pages ("clicks") (4096 bytes) to disk blocks */
#define	ctod(x)		((x) << (PAGE_SHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PAGE_SHIFT - DEV_BSHIFT))
d72 2
a73 2
#define	btodb(x)	((x) >> DEV_BSHIFT)
#define	dbtob(x)	((x) << DEV_BSHIFT)
d75 1
a75 1
#define	__SWAP_BROKEN
@


1.16
log
@setting COM_FREQ here is very wrong
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 2011/09/08 03:40:32 guenther Exp $	*/
d26 1
d29 1
@


1.15
log
@Provide namespace-safe alignment macros in <machine/_types.h>, with
compat names kept in <machine/param.h>.  In <sys/socket.h>, pull
in <sys/_types.h> instead of the namespace polluting <machine/param.h>
and completely eliminate __CMSG_ALIGN, replaced by _ALIGN

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 2011/05/03 21:00:23 kettenis Exp $	*/
a84 4

#ifndef _LOCORE
#define	COM_FREQ	7372800
#endif
@


1.14
log
@We need a little more room for out kernel stack, at least for now.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 2011/04/07 15:45:17 miod Exp $	*/
d39 3
a41 8
/*
 * Round p (pointer or byte index) up to a correctly-aligned value for all
 * data types (int, long, ...).   The result is u_long and must be cast to
 * any desired pointer type.
 */
#define	ALIGNBYTES	7
#define	ALIGN(p)	(((u_long)(p) + ALIGNBYTES) &~ ALIGNBYTES)
#define	ALIGNED_POINTER(p,t) ((((u_long)(p)) & (sizeof(t) - 1)) == 0)
@


1.13
log
@Make sure the ALIGN() macro uses u_long on all platforms for consistency, and
update the comment block accordingly.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 2010/07/01 04:20:38 jsing Exp $	*/
d65 1
a65 1
#define	USPACE		(4 * NBPG)	/* pages for user struct and kstack */
@


1.12
log
@Pull in atomic.h and intr.h.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 2008/04/27 17:48:10 martin Exp $	*/
d41 1
a41 1
 * data types (int, long, ...).   The result is u_int and must be cast to
@


1.11
log
@replace ctob/btoc by ptoa/atop
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 2008/04/20 11:53:11 kettenis Exp $	*/
d27 1
@


1.10
log
@Sync console handling with hppa port:

Delay switching to the real serial console until we attach the serial device.
The variety of different serial devices is just too big to make a decision up
front.  This should make the second serial port on four-digit B/C/J-class
workstation work as a serial console too.

Last bit isn't true yet; the code to support com @@ ssio isn't there yet on
hppa64.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 2007/05/28 21:02:49 thib Exp $	*/
a85 4

/* pages to bytes */
#define	ctob(x)		((x) << PAGE_SHIFT)
#define	btoc(x)		(((x) + PAGE_MASK) >> PAGE_SHIFT)
@


1.9
log
@Move the MSIZE, MCLSHIFT, MCLBYTES and the MCLOFSET
mbuf constants from MD param.h to MI param.h.
Besides being the same on every arch, things will
most probly break if any arch has different values
then the others.

The NMBCLUSTERS constants needs to be MD though;

ok miod@@,krw@@,claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8 2006/08/12 17:54:38 krw Exp $	*/
a94 2
#define	CONADDR	conaddr
#define	CONUNIT	conunit
a95 2
extern hppa_hpa_t conaddr;
extern int conunit;
@


1.8
log
@Make all DEV_BSIZE definitions consistant by using (1 << DEV_BSHIFT)
in the six cases using "512".

As DEV_BSHIFT is always 9, this should be a no-op.

"no objections" miod@@ "I can't see any problem doing this." pedro@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7 2006/03/19 01:47:23 martin Exp $	*/
a72 4
 * MCLBYTES must be no larger than the software page size, and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
a73 4
#define	MSIZE		256		/* size of an mbuf */
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)	/* large enough for ether MTU */
#define	MCLOFSET	(MCLBYTES - 1)
@


1.7
log
@remove unused bdbtofsb(bn) macro

found by drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.6 2005/12/13 01:56:43 martin Exp $	*/
a56 1
#define	DEV_BSIZE	512
d58 1
@


1.6
log
@nuke unused BTOPKERNBASE define

pointed out by miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.5 2005/11/28 20:13:08 martin Exp $	*/
a100 8

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))
@


1.5
log
@use atop(), remove last traces of Mach macros from hppa and hppa64
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.4 2005/10/26 18:35:45 martin Exp $	*/
a55 1
#define	BTOPKERNBASE	((u_long)KERNBASE >> PAGE_SHIFT)
@


1.4
log
@no more hppa_round_page() and hppa_trunc_page() macros

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.3 2005/09/12 23:05:05 miod Exp $	*/
a109 6

/*
 * Mach derived conversion macros
 */
#define btop(x)		((unsigned long)(x) >> PAGE_SHIFT)
#define ptob(x)		((unsigned long)(x) << PAGE_SHIFT)
@


1.3
log
@Change the NKMEMPAGES range to 4-64MB for 32bit arches, and 8-128MB for 64bit
arches; except on sparc where the range is 4-8 for !sun4m and 4-64 for sun4m,
selected at runtime.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.2 2005/07/31 15:31:13 miod Exp $	*/
a113 3
#define hppa_round_page(x)	((((unsigned long)(x)) + NBPG - 1) & ~(NBPG-1))
#define hppa_trunc_page(x)	((unsigned long)(x) & ~(NBPG-1))

@


1.2
log
@Get rid of unused SINCR and SSIZE constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.1 2005/04/01 10:40:48 mickey Exp $	*/
d89 2
a90 2
#define	NKMEMPAGES_MIN_DEFAULT	((4 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((64 * 1024 * 1024) >> PAGE_SHIFT)
@


1.1
log
@small batch early bottling hppa64 port
matured in mighty ukrainian oak for 23 months
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a63 3

#define	SSIZE		(4)		/* initial stack size/NBPG */
#define	SINCR		(1)		/* increment of stack/NBPG */
@

