head	1.4;
access;
symbols
	OPENBSD_5_9:1.3.0.10
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.30
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.28
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.26
	OPENBSD_5_0:1.2.0.24
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.22
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.20
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.16
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.18
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.14
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.12
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.10
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.8
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2016.05.11.21.52.50;	author deraadt;	state dead;
branches;
next	1.3;
commitid	VpgRpYXqYSJy4P7J;

1.3
date	2013.03.28.17.30.45;	author martynas;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.24.20.46.45;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.01.10.40.48;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove hppa64 port, which we never got going beyond broken single users.
hppa reverse-stack gives us a valuable test case, but most developers don't
have a 2nd one to proceed further with this.
ok kettenis
@
text
@/*	$OpenBSD: cdefs.h,v 1.3 2013/03/28 17:30:45 martynas Exp $	*/

/*
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#ifndef _MACHINE_CDEFS_H_
#define	_MACHINE_CDEFS_H_

#define	__strong_alias(alias,sym)					\
	__asm__(".export " __STRING(alias) ", entry\n\t.global "	\
	    __STRING(alias) "\n\t" __STRING(alias) " = " __STRING(sym))
#define	__weak_alias(alias,sym)						\
	__asm__(".export " __STRING(alias) ", entry\n\t.weak "		\
	    __STRING(alias) "\n\t" __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)					\
	__asm__(".section .gnu.warning." __STRING(sym)			\
	    "\n\t.ascii \"" msg "\"\n\t.text")

#endif /* !_MACHINE_CDEFS_H_ */
@


1.3
log
@Add __strong_alias macros for all architectures to be able to alias
another symbol without weak attribute.  To be used in libc and libm
soon.  Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.2 2005/11/24 20:46:45 deraadt Exp $	*/
@


1.2
log
@add lint-specific hacks.  at the same time, clean out a lot of ancient
cruft for old compilers and environments.  there may be a 2nd round of
polishing after this; ok miod and others
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.1 2005/04/01 10:40:48 mickey Exp $	*/
d33 2
a34 7
#if defined(lint)
#define __indr_reference(sym,alias)	__lint_equal__(sym,alias)
#define __warn_references(sym,msg)
#define __weak_alias(alias,sym)		__lint_equal__(sym,alias)
#elif defined(__GNUC__) && defined(__STDC__)
#define	__weak_alias(alias,sym)					\
	__asm__(".export " __STRING(alias) ", entry\n\t.weak "	\
d36 5
a40 2
#define	__warn_references(sym,msg)				\
	__asm__(".section .gnu.warning." __STRING(sym)		\
a41 1
#endif
@


1.1
log
@small batch early bottling hppa64 port
matured in mighty ukrainian oak for 23 months
@
text
@d1 1
a1 2
/*	$OpenBSD$	*/
/*	$NetBSD: cdefs.h,v 1.5 1996/10/12 18:08:12 cgd Exp $	*/
d33 12
a44 4
#define	__weak_alias(alias,sym)						\
    __asm__(".export " __STRING(alias) ", entry\n\t.weak " __STRING(alias) "\n\t" __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)					\
    __asm__(".section .gnu.warning." __STRING(sym) "\n\t.ascii \"" msg "\"\n\t.text")
@

