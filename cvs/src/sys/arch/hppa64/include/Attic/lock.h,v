head	1.7;
access;
symbols
	OPENBSD_5_9:1.6.0.10
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.12
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.8
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.6
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.8
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.10
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.6
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.4
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.2
	OPENBSD_4_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.05.11.21.52.50;	author deraadt;	state dead;
branches;
next	1.6;
commitid	VpgRpYXqYSJy4P7J;

1.6
date	2013.05.21.20.05.30;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.05.15.06.10;	author jsing;	state Exp;
branches;
next	1.4;

1.4
date	2011.06.24.12.49.06;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.01.04.20.38;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.06.15.07.41;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.7
log
@remove hppa64 port, which we never got going beyond broken single users.
hppa reverse-stack gives us a valuable test case, but most developers don't
have a 2nd one to proceed further with this.
ok kettenis
@
text
@/*	$OpenBSD: lock.h,v 1.6 2013/05/21 20:05:30 tedu Exp $	*/

/* public domain */

#ifndef	_MACHINE_LOCK_H_
#define	_MACHINE_LOCK_H_

#include <machine/atomic.h>

#endif	/* _MACHINE_LOCK_H_ */
@


1.6
log
@remove unused cpu_lock code (where it is truly unused). it is not
part of the future we have planned. middling ok from a few
@
text
@d1 1
a1 1
/*	$OpenBSD: lock.h,v 1.5 2012/06/05 15:06:10 jsing Exp $	*/
@


1.5
log
@As specified in PA RISC 2.0 errata, the 16-byte alignment restriction does
not apply if the coherent operation cache control completer is specified
for the ldcw/ldcd instruction. As a result, remove the alignment
requirement and add the necessary completer.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lock.h,v 1.2 2010/07/01 04:20:38 jsing Exp $	*/
a8 39

typedef volatile u_int __cpu_simple_lock_t;

#define	__SIMPLELOCK_LOCKED	0
#define	__SIMPLELOCK_UNLOCKED	1

static __inline__ void
__cpu_simple_lock_init(__cpu_simple_lock_t *l)
{
	*l = __SIMPLELOCK_UNLOCKED;
}

static __inline__ void
__cpu_simple_lock(__cpu_simple_lock_t *l)
{
	volatile u_int old;

	do {
		__asm__ __volatile__
		    ("ldcw,co %1, %0" : "=r" (old), "=m" (l) : "m" (l));
	} while (old != __SIMPLELOCK_UNLOCKED);
}

static __inline__ int
__cpu_simple_lock_try(__cpu_simple_lock_t *l)
{
	volatile u_int old;

	__asm__ __volatile__
	    ("ldcw,co %1, %0" : "=r" (old), "=m" (l) : "m" (l));

	return (old == __SIMPLELOCK_UNLOCKED);
}

static __inline__ void
__cpu_simple_unlock(__cpu_simple_lock_t *l)
{
	*l = __SIMPLELOCK_UNLOCKED;
}
@


1.4
log
@When reading the value from a simple lock, we do not need to ldcws into a
__cpu_simple_lock_t - gcc most likely ignores the alignment for a stack
variable anyway. Also remove unnecessary initialisation.

ok kettenis@@ miod@@
@
text
@d10 1
a10 1
typedef volatile u_int __cpu_simple_lock_t __attribute__((__aligned__(16)));
d28 1
a28 1
		    ("ldcw %1, %0" : "=r" (old), "=m" (l) : "m" (l));
d38 1
a38 1
	    ("ldcw %1, %0" : "=r" (old), "=m" (l) : "m" (l));
@


1.3
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d24 1
a24 1
	__cpu_simple_lock_t old;
a26 1
		old = __SIMPLELOCK_LOCKED;
d35 1
a35 1
	__cpu_simple_lock_t old = __SIMPLELOCK_LOCKED;
@


1.2
log
@Pull in atomic.h and intr.h.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lock.h,v 1.1 2007/10/06 15:07:41 kettenis Exp $	*/
d5 2
a6 2
#ifndef	_HPPA64_LOCK_H_
#define	_HPPA64_LOCK_H_
d50 1
a50 1
#endif	/* _HPPA64_LOCK_H_ */
@


1.1
log
@Provide <machine/lock.h> on hppa64 too.
@
text
@d1 1
a1 1
/*	$OpenBSD: lock.h,v 1.1 2007/05/01 18:56:30 miod Exp $	*/
d7 2
@

