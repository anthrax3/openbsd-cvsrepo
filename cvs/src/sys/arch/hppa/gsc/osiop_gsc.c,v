head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.46
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.44
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.40
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.42
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.34
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.38
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.36
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.32
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.30
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.28
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.26
	OPENBSD_5_0:1.12.0.24
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.22
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.20
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.16
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.18
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.14
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.12
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.10
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.8
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.6
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.4
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.8
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.6
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.4
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC:1.5.0.2
	UBC_SYNC_A:1.5
	SMP:1.3.0.4
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3;
locks; strict;
comment	@ * @;


1.12
date	2005.12.13.23.13.45;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2004.03.12.00.04.57;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.13.21.28.19;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2004.02.13.21.09.42;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2003.10.31.18.32.43;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.07.19.47.33;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.19.21.32.18;	author krw;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.06.22.01.43;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.29.01.11.00;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.25.07.22.01;	author jason;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2003.01.08.05.20.35;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.08.02.11.38;	author krw;	state Exp;
branches;
next	;

1.3.4.1
date	2003.05.13.19.41.03;	author ho;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2003.06.07.11.11.36;	author ho;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2004.02.19.10.48.40;	author niklas;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2004.06.05.23.10.48;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.12
log
@remove ad clause that got copied from older versions of the files; pto by jsg@@
@
text
@/*	$OpenBSD: osiop_gsc.c,v 1.11 2004/03/12 00:04:57 miod Exp $	*/
/*	$NetBSD: osiop_gsc.c,v 1.6 2002/10/02 05:17:50 thorpej Exp $	*/

/*
 * Copyright (c) 2001 Matt Fredette.  All rights reserved.
 * Copyright (c) 2001 Izumi Tsutsui.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * Copyright (c) 1998 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/buf.h>
#include <sys/malloc.h>

#include <scsi/scsi_all.h>
#include <scsi/scsiconf.h>

#include <machine/cpu.h>
#include <machine/intr.h>
#include <machine/iomod.h>
#include <machine/autoconf.h>
#include <machine/bus.h>

#include <dev/ic/osiopreg.h>
#include <dev/ic/osiopvar.h>

#include <hppa/dev/cpudevs.h>
#include <hppa/gsc/gscbusvar.h>
/* #include <hppa/hppa/machdep.h> */

#define	OSIOP_GSC_RESET		0x0000
#define	OSIOP_GSC_OFFSET	0x0100

int osiop_gsc_match(struct device *, void *, void *);
void osiop_gsc_attach(struct device *, struct device *, void *);
int osiop_gsc_intr(void *);

struct cfattach osiop_gsc_ca = {
	sizeof(struct osiop_softc), osiop_gsc_match, osiop_gsc_attach
};

int
osiop_gsc_match(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct gsc_attach_args *ga = aux;

	if (ga->ga_type.iodc_type != HPPA_TYPE_FIO ||
	    ga->ga_type.iodc_sv_model != HPPA_FIO_GSCSI)
		return 0;

	return 1;
}

void
osiop_gsc_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct osiop_softc *sc = (void *)self;
	struct gsc_attach_args *ga = aux;
	bus_space_handle_t ioh;

	sc->sc_bst = ga->ga_iot;
	sc->sc_dmat = ga->ga_dmatag;
	if (bus_space_map(sc->sc_bst, ga->ga_hpa,
	    OSIOP_GSC_OFFSET + OSIOP_NREGS, 0, &ioh))
		panic("osiop_gsc_attach: couldn't map I/O ports");
	if (bus_space_subregion(sc->sc_bst, ioh, 
	    OSIOP_GSC_OFFSET, OSIOP_NREGS, &sc->sc_reg))
		panic("osiop_gsc_attach: couldn't get chip ports");

	sc->sc_clock_freq = ga->ga_ca.ca_pdc_iodc_read->filler2[14] / 1000000;
	if (!sc->sc_clock_freq)
		sc->sc_clock_freq = 50;

	sc->sc_dcntl = OSIOP_DCNTL_EA;
	/* XXX set burst mode to 8 words (32 bytes) */
	sc->sc_ctest7 = OSIOP_CTEST7_CDIS;
	sc->sc_dmode = OSIOP_DMODE_BL8; /* | OSIOP_DMODE_FC2 */
	sc->sc_flags = 0;
	sc->sc_id = 7;	/* XXX */

	/*
	 * Reset the SCSI subsystem.
	 */
	bus_space_write_1(sc->sc_bst, ioh, OSIOP_GSC_RESET, 0);
	DELAY(1000);

	/*
	 * Call common attachment
	 */
#ifdef OSIOP_DEBUG
	{
		extern int osiop_debug;
		osiop_debug = -1;
	}
#endif /* OSIOP_DEBUG */
	osiop_attach(sc);

	(void)gsc_intr_establish((struct gsc_softc *)parent,
	    ga->ga_irq, IPL_BIO, osiop_gsc_intr, sc, sc->sc_dev.dv_xname);
}

/*
 * interrupt handler
 */
int
osiop_gsc_intr(arg)
	void *arg;
{
	struct osiop_softc *sc = arg;
	u_int8_t istat;

	/* This is potentially nasty, since the IRQ is level triggered... */
	if (sc->sc_flags & OSIOP_INTSOFF)
		return (0);

	istat = osiop_read_1(sc, OSIOP_ISTAT);

	if ((istat & (OSIOP_ISTAT_SIP | OSIOP_ISTAT_DIP)) == 0)
		return (0);

	/* Save interrupt details for the back-end interrupt handler */
	sc->sc_sstat0 = osiop_read_1(sc, OSIOP_SSTAT0);
	sc->sc_istat = istat;
	/*
	 * Per page 4-18 of the LSI 53C710 Technical Manual,
	 * "insert a delay equivalent to 12 BCLK periods between
	 * the reads [of DSTAT and SSTAT0] to ensure that the
	 * interrupts clear properly." 1 BCLK = 40ns. Pg. 6-10.
	 */
	DELAY(25);
	sc->sc_dstat = osiop_read_1(sc, OSIOP_DSTAT);

	/* Deal with the interrupt */
	osiop_intr(sc);

#ifdef USELEDS
	ledctl(PALED_DISK, 0, 0);
#endif

	return (1);
}
@


1.11
log
@Preliminary port of NetBSD oosiop driver, for NCR53C700 chips, as commonly
encountered on the oldest hppa machines.

Currently compiled in, but disabled, in the kernel, until it is stable
enough - right now read access are fine, but writes eventually time out
and do not complete.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.10 2004/02/13 21:28:19 mickey Exp $	*/
d42 1
a42 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
@


1.10
log
@order irq,pri args to gsc_intr_establish() the way less confusing compared to other trolley busses around ...
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.9 2004/02/13 21:09:42 mickey Exp $	*/
d82 1
a82 1
#define OSIOP_GSC_RESET         0x0000
d101 1
a101 2
	    (ga->ga_type.iodc_sv_model != HPPA_FIO_GSCSI /* &&
	     ga->ga_type.iodc_sv_model != HPPA_FIO_SCSI   */))
d119 1
a119 1
			  OSIOP_GSC_OFFSET + OSIOP_NREGS, 0, &ioh))
d122 1
a122 1
				OSIOP_GSC_OFFSET, OSIOP_NREGS, &sc->sc_reg))
d129 4
a132 11
	if (ga->ga_ca.ca_type.iodc_sv_model == HPPA_FIO_GSCSI) {
		sc->sc_dcntl = OSIOP_DCNTL_EA;
		/* XXX set burst mode to 8 words (32 bytes) */
		sc->sc_ctest7 = OSIOP_CTEST7_CDIS;
		sc->sc_dmode = OSIOP_DMODE_BL8; /* | OSIOP_DMODE_FC2 */
	} else {
		sc->sc_dcntl = 0;
		sc->sc_ctest7 = 0;
		sc->sc_dmode = 0; /* | OSIOP_DMODE_FC2 */
	}

@


1.9
log
@as i continuously fail to make osiop drive 700 chip disable it for now
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.8 2003/10/31 18:32:43 mickey Exp $	*/
d161 2
a162 2
	(void)gsc_intr_establish((struct gsc_softc *)parent, IPL_BIO,
	    ga->ga_irq, osiop_gsc_intr, sc, sc->sc_dev.dv_xname);
@


1.8
log
@ifdef USELEDS on ledctl(); from hellmuth.michaelis@@t-online.de
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.7 2003/08/07 19:47:33 mickey Exp $	*/
d101 2
a102 2
	    (ga->ga_type.iodc_sv_model != HPPA_FIO_GSCSI &&
	     ga->ga_type.iodc_sv_model != HPPA_FIO_SCSI))
@


1.7
log
@make all intr_establish take the same last arg for name
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.6 2003/05/19 21:32:18 krw Exp $	*/
d199 1
d201 1
@


1.6
log
@Put required delays between reading DSTAT and SSTAT0 registers. Add new ones
where required and modify existing ones to use a consistant delay(25).

From NetBSD with minor mods.

ok mickey@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.5 2003/05/06 22:01:43 mickey Exp $	*/
d162 1
a162 1
				 ga->ga_irq, osiop_gsc_intr, sc, &sc->sc_dev);
@


1.5
log
@allow programming dma block bus transaction length on 710 and set to 8 words for hppa/osiop; krw@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.4 2003/03/29 01:11:00 mickey Exp $	*/
d191 1
a191 1
	 * interrupts clear properly."
d193 1
a193 1
	DELAY(100);
@


1.4
log
@try to blink
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.3 2003/01/25 07:22:01 jason Exp $	*/
a130 1
		sc->sc_ctest7 = 0; /* | OSIOP_CTEST7_TT1 */
d132 3
d136 1
d138 1
a138 1
		sc->sc_dcntl = 0;
d142 1
a142 1
	sc->sc_id = 7;
@


1.3
log
@De-"register"
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.2 2003/01/08 05:20:35 mickey Exp $	*/
d196 1
a196 2
	/* Blink the LED. */
	/* hp700_led_blink(HP700_LED_DISK); */
@


1.3.4.1
log
@Sync the SMP branch to -current.
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.3 2003/01/25 07:22:01 jason Exp $	*/
d131 1
a132 3
		/* XXX set burst mode to 8 words (32 bytes) */
		sc->sc_ctest7 = OSIOP_CTEST7_CDIS;
		sc->sc_dmode = OSIOP_DMODE_BL8; /* | OSIOP_DMODE_FC2 */
d134 1
a135 2
		sc->sc_ctest7 = 0;
		sc->sc_dmode = 0; /* | OSIOP_DMODE_FC2 */
d139 1
a139 1
	sc->sc_id = 7;	/* XXX */
d196 2
a197 1
	ledctl(PALED_DISK, 0, 0);
@


1.3.4.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: osiop_gsc.c,v 1.3.4.1 2003/05/13 19:41:03 ho Exp $	*/
d191 1
a191 1
	 * interrupts clear properly." 1 BCLK = 40ns. Pg. 6-10.
d193 1
a193 1
	DELAY(25);
@


1.3.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d162 1
a162 1
	    ga->ga_irq, osiop_gsc_intr, sc, sc->sc_dev.dv_xname);
a198 1
#ifdef USELEDS
a199 1
#endif
@


1.3.4.4
log
@Merge with the trunk
@
text
@d82 1
a82 1
#define	OSIOP_GSC_RESET		0x0000
d101 2
a102 1
	    ga->ga_type.iodc_sv_model != HPPA_FIO_GSCSI)
d120 1
a120 1
	    OSIOP_GSC_OFFSET + OSIOP_NREGS, 0, &ioh))
d123 1
a123 1
	    OSIOP_GSC_OFFSET, OSIOP_NREGS, &sc->sc_reg))
d130 11
a140 4
	sc->sc_dcntl = OSIOP_DCNTL_EA;
	/* XXX set burst mode to 8 words (32 bytes) */
	sc->sc_ctest7 = OSIOP_CTEST7_CDIS;
	sc->sc_dmode = OSIOP_DMODE_BL8; /* | OSIOP_DMODE_FC2 */
d161 2
a162 2
	(void)gsc_intr_establish((struct gsc_softc *)parent,
	    ga->ga_irq, IPL_BIO, osiop_gsc_intr, sc, sc->sc_dev.dv_xname);
@


1.2
log
@better osiop at gsc attachment and kill dead siop from files.hppa
@
text
@d1 1
a1 1
/*	$OpenBSD: siop_gsc.c,v 1.1 1998/11/04 17:01:35 mickey Exp $	*/
d113 2
a114 2
	register struct osiop_softc *sc = (void *)self;
	register struct gsc_attach_args *ga = aux;
@


1.1
log
@Merry Christmas Mickey!

First cut at osiop driver (LSI Logic/Symbios/NCR 53C710). For hppa
only at the moment.

Functional for the most part, but there are known problems:

1) SCSI_CHECK/REQUEST_SENSE not handled at all - simply returns a
zero'ed scsi_sense_data buffer. As a result all osiop sc_link's are
created with the ADEV_NODOORLOCK quirk to suppress PREVENT_ALLOW
commands from being issued (and failing) during probe.

2) Sync negotiation (wide is not supported on this chip) needs to be
validated due to some ominous comments in the source about being valid
only for the 33Mhz Zeus board.

3) Probe message needs fixing/completion to issue useful info. See 2).

4) Timeout/hangs occur under heavy load, e.g. make builds.

From NetBSD.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a29 3

/*	$OpenBSD: siop_gsc.c,v 1.1 1998/11/04 17:01:35 mickey Exp $	*/

d89 2
a90 4
struct cfattach osiop_ca = {
	sizeof(struct osiop_softc),
    	osiop_gsc_match,
	osiop_gsc_attach
a98 2
	bus_space_handle_t ioh;
	int rv = 1;
d105 1
a105 7
	if (bus_space_map(ga->ga_iot, ga->ga_hpa, 
			  OSIOP_GSC_OFFSET + OSIOP_NREGS, 0, &ioh))
		return 0;


	bus_space_unmap(ga->ga_iot, ioh, OSIOP_GSC_OFFSET + OSIOP_NREGS);
	return rv;
@

