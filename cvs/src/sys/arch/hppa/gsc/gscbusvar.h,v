head	1.14;
access;
symbols
	OPENBSD_6_1:1.14.0.28
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.24
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.20
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.22
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.14
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.18
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.16
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.12
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.10
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.8
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.6
	OPENBSD_5_0:1.14.0.4
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.2
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.13.0.26
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.22
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.24
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.20
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.18
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.16
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.14
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.12
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.10
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.8
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.13
	SMP_SYNC_B:1.13
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.4.0.2
	UBC_BASE:1.4
	OPENBSD_3_0:1.3.0.12
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.10
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.8
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.6
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.14
date	2010.11.28.20.09.40;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.07.18.24.19;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2004.02.13.21.28.19;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2003.08.07.19.47.33;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.07.17.38.51;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.18.23.52.45;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.17.21.54.25;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.03.15.53;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.31;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.02.24.05;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.02.04.03.57;	author mickey;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	99.08.16.02.48.39;	author mickey;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	99.02.25.21.07.49;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.11.04.17.05.15;	author mickey;	state Exp;
branches;
next	;

1.3.4.1
date	2001.12.05.00.39.10;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.03.06.00.57.22;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2002.03.28.10.07.19;	author niklas;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2003.03.27.23.26.53;	author niklas;	state Exp;
branches;
next	1.3.4.5;

1.3.4.5
date	2003.05.13.19.41.03;	author ho;	state Exp;
branches;
next	1.3.4.6;

1.3.4.6
date	2004.02.19.10.48.39;	author niklas;	state Exp;
branches;
next	1.3.4.7;

1.3.4.7
date	2004.06.05.23.10.48;	author niklas;	state Exp;
branches;
next	;

1.4.2.1
date	2002.06.11.03.35.36;	author art;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2003.05.19.21.49.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Remove unused gscbus bus_dma_tag_t.
@
text
@/*	$OpenBSD: gscbusvar.h,v 1.13 2004/04/07 18:24:19 mickey Exp $	*/

/*
 * Copyright (c) 1998-2004 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

struct gscbus_ic {
	enum {gsc_unknown = 0, gsc_lasi, gsc_wax, gsc_asp} gsc_type;
	void *gsc_dv;
	volatile void *gsc_base;
};

struct gsc_attach_args {
	struct confargs ga_ca;
#define	ga_name		ga_ca.ca_name
#define	ga_iot		ga_ca.ca_iot
#define	ga_dp		ga_ca.ca_dp
#define	ga_type		ga_ca.ca_type
#define	ga_hpa		ga_ca.ca_hpa
#define	ga_hpamask	ga_ca.ca_hpamask
#define	ga_dmatag	ga_ca.ca_dmatag
#define	ga_irq		ga_ca.ca_irq
#define	ga_pdc_iodc_read	ga_ca.ca_pdc_iodc_read
	struct gscbus_ic *ga_ic;	/* IC pointer */
}; 

struct gsc_softc {
	struct  device sc_dev;
	void *sc_ih;

	bus_space_tag_t sc_iot;
	struct gscbus_ic *sc_ic;
};

void *gsc_intr_establish(struct gsc_softc *sc, int irq, int pri,
    int (*handler)(void *v), void *arg, const char *name);
void gsc_intr_disestablish(struct gsc_softc *sc, void *v);
int gsc_intr(void *);

int gscprint(void *, const char *);
@


1.13
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.12 2004/02/13 21:28:19 mickey Exp $	*/
a54 1
	struct hppa_bus_dma_tag sc_dmatag;
@


1.12
log
@order irq,pri args to gsc_intr_establish() the way less confusing compared to other trolley busses around ...
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.11 2003/08/07 19:47:33 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2003 Michael Shalayeff
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d19 8
a26 7
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.11
log
@make all intr_establish take the same last arg for name
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.10 2003/04/07 17:38:51 mickey Exp $	*/
d62 1
a62 1
void *gsc_intr_establish(struct gsc_softc *sc, int pri, int irq,
@


1.10
log
@remove dead stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.9 2002/12/18 23:52:45 mickey Exp $	*/
d63 1
a63 1
    int (*handler)(void *v), void *arg, struct device *name);
@


1.9
log
@newer machines use phantom bus to attach lasi and other bus adapters.
oledr machines did not have a real device for the phantom bus port.
change the device scanning technique to both include a full device path
in the attach_args and do proper shifting in the pdc_scanbus() and
add a device for the newer machines as well as use a newer device
mapping (path to hpa) available on newer firmware versions, where
old (hversion-dependant) is not available.
tested on 712,715/33,c110, miod@@ ok, weissmandude -- testing
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.8 2002/12/17 21:54:25 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
a52 9
struct gscbus_intr {
	int pri;
	int (*handler)(void *);
	void *arg;
	void *softc;
	void *cpuiv;
	struct evcnt evcnt;
};

a59 4

	/* interrupt vectors */
	struct gscbus_intr sc_intrvs[32];
	u_int32_t sc_intrmask;
d63 1
a63 2
			 int (*handler)(void *v), void *arg,
			 struct device *name);
a67 1

@


1.8
log
@real interrupts/spl framework.
tested on 712/* 715/100, 715/33 which main cpu/bus types.
miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.7 2002/03/14 03:15:53 millert Exp $	*/
d43 1
a43 1
#define	ga_mod		ga_ca.ca_mod
@


1.7
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.6 2002/03/14 01:26:31 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Michael Shalayeff
d36 1
a36 5

	void (*gsc_intr_establish)(void *v, u_int32_t mask);
	void (*gsc_intr_disestablish)(void *v, u_int32_t mask);
	u_int32_t (*gsc_intr_check)(void *v);
	void (*gsc_intr_ack)(void *v, u_int32_t mask);
d57 2
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.5 2002/02/16 02:24:05 mickey Exp $	*/
d77 3
a79 3
void *gsc_intr_establish __P((struct gsc_softc *sc, int pri, int irq,
			       int (*handler)(void *v), void *arg,
			       struct device *name));
@


1.5
log
@need ca_pdc_iodc_read from some devices to got their params
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.4 2001/12/02 04:03:57 mickey Exp $	*/
d37 4
a40 4
	void (*gsc_intr_establish) __P((void *v, u_int32_t mask));
	void (*gsc_intr_disestablish) __P((void *v, u_int32_t mask));
	u_int32_t (*gsc_intr_check) __P((void *v));
	void (*gsc_intr_ack) __P((void *v, u_int32_t mask));
d59 1
a59 1
	int (*handler) __P((void *));
d78 1
a78 1
			       int (*handler) __P((void *v)), void *arg,
d80 2
a81 2
void gsc_intr_disestablish __P((struct gsc_softc *sc, void *v));
int gsc_intr __P((void *));
d83 1
a83 1
int gscprint __P((void *, const char *));
@


1.4
log
@allow to configure devices on particular bus offsets
to be able to attach units to them.
main reason is the secondary gsc busses on add-on cards
which stick 'emselves in the front.
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.3 1999/08/16 02:48:39 mickey Exp $	*/
d53 1
a53 1
/*#define	ga_pdc_iodc_read	ga_ca.ca_pdc_iodc_read */
@


1.4.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.4 2001/12/02 04:03:57 mickey Exp $	*/
d37 4
a40 4
	void (*gsc_intr_establish)(void *v, u_int32_t mask);
	void (*gsc_intr_disestablish)(void *v, u_int32_t mask);
	u_int32_t (*gsc_intr_check)(void *v);
	void (*gsc_intr_ack)(void *v, u_int32_t mask);
d53 1
a53 1
#define	ga_pdc_iodc_read	ga_ca.ca_pdc_iodc_read
d59 1
a59 1
	int (*handler)(void *);
d77 5
a81 5
void *gsc_intr_establish(struct gsc_softc *sc, int pri, int irq,
			 int (*handler)(void *v), void *arg,
			 struct device *name);
void gsc_intr_disestablish(struct gsc_softc *sc, void *v);
int gsc_intr(void *);
d83 1
a83 1
int gscprint(void *, const char *);
@


1.4.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1998-2003 Michael Shalayeff
d36 5
a40 1
	volatile void *gsc_base;
d47 1
a47 1
#define	ga_dp		ga_ca.ca_dp
d57 7
d71 4
d78 2
a79 1
    int (*handler)(void *v), void *arg, struct device *name);
d84 1
@


1.3
log
@evcnt count the interrupts, also optimize diagnostic printing
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.2 1999/02/25 21:07:49 mickey Exp $	*/
d50 1
@


1.3.4.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.3 1999/08/16 02:48:39 mickey Exp $	*/
a49 1
#define	ga_hpamask	ga_ca.ca_hpamask
@


1.3.4.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d53 1
a53 1
#define	ga_pdc_iodc_read	ga_ca.ca_pdc_iodc_read
@


1.3.4.3
log
@Merge in -current from about a week ago
@
text
@d37 4
a40 4
	void (*gsc_intr_establish)(void *v, u_int32_t mask);
	void (*gsc_intr_disestablish)(void *v, u_int32_t mask);
	u_int32_t (*gsc_intr_check)(void *v);
	void (*gsc_intr_ack)(void *v, u_int32_t mask);
d59 1
a59 1
	int (*handler)(void *);
d77 5
a81 5
void *gsc_intr_establish(struct gsc_softc *sc, int pri, int irq,
			 int (*handler)(void *v), void *arg,
			 struct device *name);
void gsc_intr_disestablish(struct gsc_softc *sc, void *v);
int gsc_intr(void *);
d83 1
a83 1
int gscprint(void *, const char *);
@


1.3.4.4
log
@Sync the SMP branch with 3.3
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
d36 5
a40 1
	volatile void *gsc_base;
d47 1
a47 1
#define	ga_dp		ga_ca.ca_dp
a60 2
	void *softc;
	void *cpuiv;
@


1.3.4.5
log
@Sync the SMP branch to -current.
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.3.4.4 2003/03/27 23:26:53 niklas Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2003 Michael Shalayeff
d53 9
d69 4
d76 2
a77 1
    int (*handler)(void *v), void *arg, struct device *name);
d82 1
@


1.3.4.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 1
a63 1
    int (*handler)(void *v), void *arg, const char *name);
@


1.3.4.7
log
@Merge with the trunk
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2004 Michael Shalayeff
d15 5
d24 7
a30 8
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
d62 1
a62 1
void *gsc_intr_establish(struct gsc_softc *sc, int irq, int pri,
@


1.2
log
@chipset-independant irq establishing/handling code; dummy dma stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: gscbusvar.h,v 1.1 1998/11/04 17:05:15 mickey Exp $	*/
d78 1
a78 1
			       const char *name));
@


1.1
log
@GSC bus attachment
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 4
a40 5
	void *(*gsc_intr_establish) __P((struct gscbus_ic *ic, int pri,
					 int (*handler) __P((void *)), void *,
					 const char *));
	void (*gsc_intr_disestablish) __P((void *v));
	int (*gsc_intack) __P((void *v));
d45 7
a51 5
#define	ga_name	ga_ca.ca_name
#define	ga_iot	ga_ca.ca_iot
#define	ga_mod	ga_ca.ca_mod
#define	ga_type	ga_ca.ca_type
#define	ga_hpa	ga_ca.ca_hpa
d56 7
d65 1
d69 5
d76 8
a83 6
#define	gsc_intr_establish(ic,pri,h,c,s) \
	((ic)->gsc_intr_establish((ic), (pri), (h), (c), (s)))
#define	gsc_intr_disestablish(ic,v) \
	(ic)->gsc_intr_disestablish((ic), (v))
#define	gsc_intr_intack(ic,v) \
	((ic)->gsc_intr_disestablish((ic), (v)))
@

