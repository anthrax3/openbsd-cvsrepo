head	1.21;
access;
symbols
	OPENBSD_6_0:1.21.0.38
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.34
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.36
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.28
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.32
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.30
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.21.0.26
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.21.0.24
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.22
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.20
	OPENBSD_5_0:1.21.0.18
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.21.0.16
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.21.0.14
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.21.0.10
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.21.0.12
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.8
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.21.0.6
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.4
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.2
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.20.0.10
	OPENBSD_4_1_BASE:1.20
	OPENBSD_4_0:1.20.0.8
	OPENBSD_4_0_BASE:1.20
	OPENBSD_3_9:1.20.0.6
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.20.0.4
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.20.0.2
	OPENBSD_3_7_BASE:1.20
	OPENBSD_3_6:1.19.0.2
	OPENBSD_3_6_BASE:1.19
	SMP_SYNC_A:1.19
	SMP_SYNC_B:1.19
	OPENBSD_3_5:1.18.0.2
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	UBC_SYNC_A:1.15
	OPENBSD_3_3:1.15.0.2
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.14
	UBC:1.8.0.10
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.8
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.6
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	SMP:1.7.0.2
	SMP_BASE:1.7
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.21
date	2007.07.15.19.25.49;	author kettenis;	state Exp;
branches;
next	1.20;

1.20
date	2004.09.19.17.50.30;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	2004.04.07.18.24.19;	author mickey;	state Exp;
branches;
next	1.18;

1.18
date	2004.02.13.21.28.19;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	2003.08.14.19.17.12;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	2003.08.07.19.47.33;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	2003.01.25.07.22.01;	author jason;	state Exp;
branches;
next	1.14;

1.14
date	2002.09.03.22.56.34;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.06.06.35.02;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.14.01.26.31;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.05.04.09.41;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.03.01.47.54;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.25.21.46.40;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.13.14.39.59;	author mickey;	state Exp;
branches
	1.8.10.1;
next	1.7;

1.7
date	99.12.17.06.41.06;	author mickey;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	99.12.17.06.28.16;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	99.08.16.02.48.39;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	99.07.08.18.24.06;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	99.02.25.19.31.56;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.11.23.03.16.28;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.09.30.04.45.46;	author mickey;	state Exp;
branches;
next	;

1.7.2.1
date	2000.03.24.09.07.28;	author niklas;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2002.03.06.00.57.22;	author niklas;	state Exp;
branches;
next	1.7.2.3;

1.7.2.3
date	2002.03.28.10.07.19;	author niklas;	state Exp;
branches;
next	1.7.2.4;

1.7.2.4
date	2003.03.27.23.26.53;	author niklas;	state Exp;
branches;
next	1.7.2.5;

1.7.2.5
date	2004.02.19.10.48.39;	author niklas;	state Exp;
branches;
next	1.7.2.6;

1.7.2.6
date	2004.06.05.23.10.48;	author niklas;	state Exp;
branches;
next	;

1.8.10.1
date	2002.01.31.22.55.09;	author niklas;	state Exp;
branches;
next	1.8.10.2;

1.8.10.2
date	2002.06.11.03.35.36;	author art;	state Exp;
branches;
next	1.8.10.3;

1.8.10.3
date	2002.10.29.00.28.02;	author art;	state Exp;
branches;
next	1.8.10.4;

1.8.10.4
date	2003.05.19.21.49.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Delay switching to the real serial console until we attach the serial device.
The variety of different serial devices is just too big to make a decision up
front.  This should make the second serial port on four-digit B/C/J-class
workstation work as a serial console too.

ok miod@@
@
text
@/*	$OpenBSD: com_gsc.c,v 1.20 2004/09/19 17:50:30 mickey Exp $	*/

/*
 * Copyright (c) 1998-2003 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/tty.h>

#include <machine/bus.h>
#include <machine/intr.h>
#include <machine/iomod.h>
#include <machine/autoconf.h>

#include <dev/ic/comreg.h>
#include <dev/ic/comvar.h>

#include <hppa/dev/cpudevs.h>
#include <hppa/gsc/gscbusvar.h>

#define COM_GSC_FREQ	7372800

struct com_gsc_regs {
	u_int8_t reset;
};

int	com_gsc_probe(struct device *, void *, void *);
void	com_gsc_attach(struct device *, struct device *, void *);

struct cfattach com_gsc_ca = {
	sizeof(struct com_softc), com_gsc_probe, com_gsc_attach
};

int
com_gsc_probe(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct gsc_attach_args *ga = aux;

	if (ga->ga_type.iodc_type != HPPA_TYPE_FIO ||
	    (ga->ga_type.iodc_sv_model != HPPA_FIO_GRS232 &&
	     ga->ga_type.iodc_sv_model != HPPA_FIO_RS232 &&
	     ga->ga_type.iodc_sv_model != HPPA_FIO_GRJ16))
		return (0);

	return (1);
	/* HOZER comprobe1(ga->ga_iot, ga->ga_hpa + IOMOD_DEVOFFSET); */
}

void
com_gsc_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct com_softc *sc = (void *)self;
	struct gsc_attach_args *ga = aux;

	sc->sc_iot = ga->ga_iot;
	sc->sc_iobase = (bus_addr_t)ga->ga_hpa;
	if (ga->ga_type.iodc_sv_model != HPPA_FIO_GRJ16)
		sc->sc_iobase += IOMOD_DEVOFFSET;

	if (bus_space_map(sc->sc_iot, sc->sc_iobase, COM_NPORTS,
	    0, &sc->sc_ioh)) {
		printf(": cannot map io space\n");
		return;
	}

	if (PAGE0->mem_cons.pz_class == PCL_DUPLEX &&
	    PAGE0->mem_cons.pz_hpa == ga->ga_hpa) {
		bus_space_unmap(sc->sc_iot, sc->sc_ioh, COM_NPORTS);
		comcnattach(sc->sc_iot, sc->sc_iobase, comdefaultrate,
		    COM_GSC_FREQ, comconscflag);
	}

	sc->sc_frequency = COM_GSC_FREQ;
	com_attach_subr(sc);

	sc->sc_ih = gsc_intr_establish((struct gsc_softc *)parent,
	    ga->ga_irq, IPL_TTY, comintr, sc, sc->sc_dev.dv_xname);
}
@


1.20
log
@do not blindly assume console has been mapped
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.19 2004/04/07 18:24:19 mickey Exp $	*/
d45 2
a81 2
	struct com_gsc_regs *regs;
	int rj16 = 0;
a82 1
	sc->sc_frequency = COM_FREQ;
a86 2
	else
		rj16++;
d88 1
a88 3
	if (sc->sc_iobase == CONADDR && comconsioh)
		sc->sc_ioh = comconsioh;
	else if (bus_space_map(sc->sc_iot, sc->sc_iobase, COM_NPORTS,
d94 5
a98 4
	regs = (struct com_gsc_regs *)ga->ga_hpa;
	if (!rj16 && sc->sc_iobase != CONADDR) {
		/*regs->reset = 0xd0;*/
		DELAY(1000);
d101 1
@


1.19
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.18 2004/02/13 21:28:19 mickey Exp $	*/
d91 1
a91 1
	if (sc->sc_iobase == CONADDR)
@


1.18
log
@order irq,pri args to gsc_intr_establish() the way less confusing compared to other trolley busses around ...
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.17 2003/08/14 19:17:12 mickey Exp $	*/
d19 8
a26 7
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF MIND,
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.17
log
@attach at teleshare serial ports as well. need dsp microcode for a functional mudem now
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.16 2003/08/07 19:47:33 mickey Exp $	*/
d106 2
a107 2
	sc->sc_ih = gsc_intr_establish((struct gsc_softc *)parent, IPL_TTY,
	    ga->ga_irq, comintr, sc, sc->sc_dev.dv_xname);
@


1.16
log
@make all intr_establish take the same last arg for name
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.15 2003/01/25 07:22:01 jason Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d64 2
a65 1
	     (ga->ga_type.iodc_sv_model != HPPA_FIO_RS232)))
d80 1
a82 1
	sc->sc_iobase = (bus_addr_t)ga->ga_hpa + IOMOD_DEVOFFSET;
d84 6
d99 1
a99 1
	if (sc->sc_iobase != CONADDR) {
a108 1

@


1.15
log
@De-"register"
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.14 2002/09/03 22:56:34 mickey Exp $	*/
d105 1
a105 1
				       ga->ga_irq, comintr, sc, &sc->sc_dev);
@


1.14
log
@forgot to set up the sc_frequency (;
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.13 2002/06/06 06:35:02 mickey Exp $	*/
d65 1
a65 1
	register struct gsc_attach_args *ga = aux;
@


1.13
log
@do not say duh to the cereal
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.12 2002/03/14 01:26:31 millert Exp $	*/
d85 1
@


1.12
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.11 2002/02/05 04:09:41 mickey Exp $	*/
d97 1
a97 1
		regs->reset = 0xd0;
@


1.11
log
@do not comprobe() that hoses it
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.10 2002/02/03 01:47:54 mickey Exp $	*/
d53 2
a54 2
int	com_gsc_probe __P((struct device *, void *, void *));
void	com_gsc_attach __P((struct device *, struct device *, void *));
@


1.10
log
@better space map
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.9 2002/01/25 21:46:40 mickey Exp $	*/
d70 1
a70 1
		return 0;
d72 2
a73 1
	return comprobe1(ga->ga_iot, ga->ga_hpa + IOMOD_DEVOFFSET);
@


1.9
log
@offset to com regs is just a common iomod offset, accomodate for com console
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.8 2000/03/13 14:39:59 mickey Exp $	*/
d88 2
a89 2
	else if (bus_space_map(sc->sc_iot, ga->ga_hpa + IOMOD_DEVOFFSET,
	    COM_NPORTS, 0, &sc->sc_ioh)) {
@


1.8
log
@and he said 'this must die, Die, DIEcvs -d cvs.openbsd.org:/cvs diff com_gsc.ccvs -d cvs.openbsd.org:/cvs diff com_gsc.c' and it died
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.7 1999/12/17 06:41:06 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Michael Shalayeff
d26 2
a27 2
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
a48 1
#define	COMGSC_OFFSET	0x800
d72 1
a72 1
	return comprobe1(ga->ga_iot, ga->ga_hpa + COMGSC_OFFSET);
d80 3
a82 2
	register struct com_softc *sc = (void *)self;
	register struct gsc_attach_args *ga = aux;
d84 1
a84 2
	sc->sc_hwflags = 0;
	sc->sc_swflags = 0;
d86 13
a98 7
	sc->sc_ioh = ga->ga_hpa + COMGSC_OFFSET;
	sc->sc_iobase = (bus_addr_t)ga->ga_hpa + COMGSC_OFFSET;

#if notyet
	*(volatile u_int8_t *)ga->ga_hpa = 0xd0;	/* reset */
	DELAY(1000);
#endif
d100 1
a100 1
	/* com_attach_subr(sc); TODO */
@


1.8.10.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.9 2002/01/25 21:46:40 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
d26 2
a27 2
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF MIND,
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
d49 1
d73 1
a73 1
	return comprobe1(ga->ga_iot, ga->ga_hpa + IOMOD_DEVOFFSET);
d81 2
a82 3
	struct com_softc *sc = (void *)self;
	struct gsc_attach_args *ga = aux;
	struct com_gsc_regs *regs;
d84 2
a85 1
	sc->sc_iobase = (bus_addr_t)ga->ga_hpa + IOMOD_DEVOFFSET;
d87 7
a93 13
	if (sc->sc_iobase == CONADDR)
		sc->sc_ioh = comconsioh;
	else if (bus_space_map(sc->sc_iot, ga->ga_hpa + IOMOD_DEVOFFSET,
	    COM_NPORTS, 0, &sc->sc_ioh)) {
		printf(": cannot map io space\n");
		return;
	}

	regs = (struct com_gsc_regs *)ga->ga_hpa;
	if (sc->sc_iobase != CONADDR) {
		regs->reset = 0xd0;
		DELAY(1000);
	}
d95 1
a95 1
	com_attach_subr(sc);
@


1.8.10.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.8.10.1 2002/01/31 22:55:09 niklas Exp $	*/
d53 2
a54 2
int	com_gsc_probe(struct device *, void *, void *);
void	com_gsc_attach(struct device *, struct device *, void *);
d70 1
a70 1
		return (0);
d72 1
a72 2
	return (1);
	/* HOZER comprobe1(ga->ga_iot, ga->ga_hpa + IOMOD_DEVOFFSET); */
d88 2
a89 2
	else if (bus_space_map(sc->sc_iot, sc->sc_iobase, COM_NPORTS,
	    0, &sc->sc_ioh)) {
d96 1
a96 1
		/*regs->reset = 0xd0;*/
@


1.8.10.3
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.8.10.2 2002/06/11 03:35:36 art Exp $	*/
a84 1
	sc->sc_frequency = COM_FREQ;
@


1.8.10.4
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d65 1
a65 1
	struct gsc_attach_args *ga = aux;
@


1.7
log
@screw it really bad
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.6 1999/12/17 06:28:16 mickey Exp $	*/
a41 2

#include <dev/isa/isavar.h>	/* this must die, Die, DIE!!!! */
@


1.7.2.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 2
@


1.7.2.2
log
@Merge in trunk
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
d26 2
a27 2
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF MIND,
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
d49 1
d71 1
a71 1
		return (0);
d73 1
a73 2
	return (1);
	/* HOZER comprobe1(ga->ga_iot, ga->ga_hpa + IOMOD_DEVOFFSET); */
d81 2
a82 3
	struct com_softc *sc = (void *)self;
	struct gsc_attach_args *ga = aux;
	struct com_gsc_regs *regs;
d84 2
a85 1
	sc->sc_iobase = (bus_addr_t)ga->ga_hpa + IOMOD_DEVOFFSET;
d87 7
a93 13
	if (sc->sc_iobase == CONADDR)
		sc->sc_ioh = comconsioh;
	else if (bus_space_map(sc->sc_iot, sc->sc_iobase, COM_NPORTS,
	    0, &sc->sc_ioh)) {
		printf(": cannot map io space\n");
		return;
	}

	regs = (struct com_gsc_regs *)ga->ga_hpa;
	if (sc->sc_iobase != CONADDR) {
		regs->reset = 0xd0;
		DELAY(1000);
	}
d95 1
a95 1
	com_attach_subr(sc);
@


1.7.2.3
log
@Merge in -current from about a week ago
@
text
@d53 2
a54 2
int	com_gsc_probe(struct device *, void *, void *);
void	com_gsc_attach(struct device *, struct device *, void *);
@


1.7.2.4
log
@Sync the SMP branch with 3.3
@
text
@d65 1
a65 1
	struct gsc_attach_args *ga = aux;
a84 1
	sc->sc_frequency = COM_FREQ;
d97 1
a97 1
		/*regs->reset = 0xd0;*/
@


1.7.2.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2003 Michael Shalayeff
d15 5
d69 1
a69 2
	     ga->ga_type.iodc_sv_model != HPPA_FIO_RS232 &&
	     ga->ga_type.iodc_sv_model != HPPA_FIO_GRJ16))
a83 1
	int rj16 = 0;
d86 1
a87 6
	sc->sc_iobase = (bus_addr_t)ga->ga_hpa;
	if (ga->ga_type.iodc_sv_model != HPPA_FIO_GRJ16)
		sc->sc_iobase += IOMOD_DEVOFFSET;
	else
		rj16++;

d97 1
a97 1
	if (!rj16 && sc->sc_iobase != CONADDR) {
d105 1
a105 1
	    ga->ga_irq, comintr, sc, sc->sc_dev.dv_xname);
d107 1
@


1.7.2.6
log
@Merge with the trunk
@
text
@d19 7
a25 8
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
d106 2
a107 2
	sc->sc_ih = gsc_intr_establish((struct gsc_softc *)parent,
	    ga->ga_irq, IPL_TTY, comintr, sc, sc->sc_dev.dv_xname);
@


1.6
log
@break the attaching intentionally until i figure put how to screw the dev/ic/com.c enough to do this attachment for hppa port
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.5 1999/08/16 02:48:39 mickey Exp $	*/
d42 2
@


1.5
log
@evcnt count the interrupts, also optimize diagnostic printing
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.4 1999/07/08 18:24:06 mickey Exp $	*/
d95 1
a95 1
	com_attach_subr(sc);
@


1.4
log
@right
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.3 1999/02/25 19:31:56 mickey Exp $	*/
d98 1
a98 2
				       ga->ga_irq, comintr, sc,
				       sc->sc_dev.dv_xname);
@


1.3
log
@establish irq after MI attach call, some cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.2 1998/11/23 03:16:28 mickey Exp $	*/
d66 5
a70 7
	register struct confargs *ca = aux;
	bus_space_handle_t ioh;
	int rv;

	if (ca->ca_type.iodc_type != HPPA_TYPE_FIO ||
	    (ca->ca_type.iodc_sv_model != HPPA_FIO_GRS232 &&
	     (ca->ca_type.iodc_sv_model != HPPA_FIO_RS232)))
d73 1
a73 5
	if (bus_space_map(ca->ca_iot, ca->ca_hpa, IOMOD_HPASIZE, 0, &ioh))
		return 0;
	rv = comprobe1(ca->ca_iot, ioh + COMGSC_OFFSET);
	bus_space_unmap(ca->ca_iot, ioh, IOMOD_HPASIZE);
	return rv;
d86 2
a88 7
	sc->sc_iot = ga->ga_iot;

	if (bus_space_map(sc->sc_iot, ga->ga_hpa, IOMOD_HPASIZE,
			  0, &sc->sc_ioh))
		panic ("com_gsc_attach: mapping io space");
	/* sc->sc_regs = (void *)sc->sc_ioh; */
	sc->sc_ioh += COMGSC_OFFSET;
d90 2
a91 2
#if 0
	r->reset = 0;
@


1.2
log
@interrupt now
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.1 1998/09/30 04:45:46 mickey Exp $	*/
d49 5
a56 1

d77 1
a77 2

	rv = comprobe1(ca->ca_iot, ioh | IOMOD_DEVOFFSET);
d92 2
a93 2
	sc->sc_iobase = (bus_addr_t)ga->ga_hpa;
	sc->sc_iot = HPPA_BUS_TAG_SET_BYTE(ga->ga_iot);
d95 1
a95 1
	if (bus_space_map(sc->sc_iot, sc->sc_iobase, IOMOD_HPASIZE,
d98 2
d101 4
a104 2
	sc->sc_ih = gsc_intr_establish(ga->ga_ic, IPL_TTY, comintr, sc,
				       sc->sc_dev.dv_xname);
a105 1
	sc->sc_ioh |= IOMOD_DEVOFFSET;
d107 4
@


1.1
log
@they must be here
@
text
@d1 1
a1 1
/*	$OpenBSD: com_gsc.c,v 1.1 1998/09/29 06:56:45 mickey Exp $	*/
d47 1
d84 2
a85 2
	struct com_softc *sc = (void *)self;
	struct confargs *ca = aux;
d89 2
a90 2
	sc->sc_iobase = (bus_addr_t)ca->ca_hpa;
	sc->sc_iot = ca->ca_iot;
d92 2
a93 1
	if (bus_space_map(ca->ca_iot, ca->ca_hpa, COM_NPORTS, 0, &sc->sc_ioh))
d96 3
a101 1

@

