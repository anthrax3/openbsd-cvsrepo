head	1.23;
access;
symbols
	OPENBSD_4_3:1.19.0.6
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.4
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.19.0.2
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.18.0.2
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.8.0.2
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	UBC:1.2.0.6
	UBC_SYNC_A:1.2
	SMP:1.2.0.4
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@ * @;


1.23
date	2008.07.16.16.32.08;	author miod;	state dead;
branches;
next	1.22;

1.22
date	2008.06.26.05.42.10;	author ray;	state Exp;
branches;
next	1.21;

1.21
date	2008.03.21.17.12.42;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2008.03.21.17.10.46;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2006.12.05.21.28.02;	author otto;	state Exp;
branches;
next	1.18;

1.18
date	2006.07.20.16.45.51;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	2006.07.20.10.46.02;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	2006.05.29.20.25.29;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2005.05.12.16.21.47;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2005.05.09.05.09.22;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2005.05.06.18.05.06;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2005.05.06.17.52.31;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2005.05.06.17.43.17;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.04.20.07.26;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2005.05.04.18.01.01;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2005.02.22.19.42.44;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2004.07.26.14.06.12;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2004.07.21.16.24.27;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2004.03.16.07.51.22;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.26.06.20.19;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.27.15.32.39;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.16.01.43.17;	author miod;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2003.01.31.22.50.19;	author miod;	state Exp;
branches;
next	;

1.2.4.1
date	2003.06.07.11.11.36;	author ho;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2004.02.19.10.48.39;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2004.06.05.23.10.48;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Implement pckbc_xt_translation() in gsckbc. Thus, we can attach pckbd instead of
gsckbd; the former will cause a proper translation page to be selected by
the keyboard.

Because of this, we no longer depend on the page the keyboard is left in
by the PDC (page 2 for all machines but the PrecisionBook, which is in
page 3), and there is no longer any need to use separate keyboard maps.
@
text
@/*	$OpenBSD: gsckbdmap.c,v 1.22 2008/06/26 05:42:10 ray Exp $	*/

/*
 * THIS FILE IS AUTOMAGICALLY GENERATED.  DO NOT EDIT.
 *
 * generated by:
 *	OpenBSD: makemap.awk,v 1.6 2005/05/12 16:21:23 miod Exp 
 * generated from:
 */
/*	OpenBSD: wskbdmap_mfii.c,v 1.35 2008/03/21 17:10:46 miod Exp  */
/*	$NetBSD: wskbdmap_mfii.c,v 1.15 2000/05/19 16:40:04 drochner Exp $	*/

/*
 * PLEASE DO NOT FORGET TO REGEN
 *	sys/arch/hppa/gsc/gsckbdmap.c
 *	sys/dev/usb/ukbdmap.c
 * AFTER ANY CHANGES TO THIS FILE!
 */

/*-
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Juergen Hannken-Illjes.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <dev/wscons/wsksymdef.h>
#include <dev/wscons/wsksymvar.h>
#include <hppa/gsc/gsckbdmap.h>

#define KC(n) KS_KEYCODE(n)

static const keysym_t gsckbd_keydesc_us[] = {
/*  pos      command		normal		shifted */
/* initially KC(160),	KS_AudioMute,	*/
/* initially KC(174),	KS_AudioLower,	*/
/* initially KC(176),	KS_AudioRaise,	*/
/* initially KC(219),	KS_Meta_L,	*/
/* initially KC(220),	KS_Meta_R,	*/
/* initially KC(221),	KS_Menu,	*/
    KC(1),	KS_Cmd_Screen8,	KS_f9,
    KC(3),	KS_Cmd_Screen4,	KS_f5,
    KC(4),	KS_Cmd_Screen2,	KS_f3,
    KC(5),	KS_Cmd_Screen0,	KS_f1,
    KC(6),	KS_Cmd_Screen1,	KS_f2,
    KC(7),	KS_Cmd_Screen11,KS_f12,
    KC(9),	KS_Cmd_Screen9,	KS_f10,
    KC(10),	KS_Cmd_Screen7,	KS_f8,
    KC(11),	KS_Cmd_Screen5,	KS_f6,
    KC(12),	KS_Cmd_Screen3,	KS_f4,
    KC(13),	KS_Tab,
    KC(14),	KS_grave,	KS_asciitilde,
    KC(17),	KS_Cmd2,	KS_Alt_L,
    KC(18),	KS_Shift_L,
    KC(20),	KS_Cmd1,	KS_Control_L,
    KC(21),	KS_q,
    KC(22),	KS_1,		KS_exclam,
    KC(26),	KS_z,
    KC(27),	KS_s,
    KC(28),	KS_a,
    KC(29),	KS_w,
    KC(30),	KS_2,		KS_at,
    KC(33),	KS_c,
    KC(34),	KS_x,
    KC(35),	KS_d,
    KC(36),	KS_e,
    KC(37),	KS_4,		KS_dollar,
    KC(38),	KS_3,		KS_numbersign,
    KC(41),	KS_space,
    KC(42),	KS_v,
    KC(43),	KS_f,
    KC(44),	KS_t,
    KC(45),	KS_r,
    KC(46),	KS_5,		KS_percent,
    KC(49),	KS_n,
    KC(50),	KS_b,
    KC(51),	KS_h,
    KC(52),	KS_g,
    KC(53),	KS_y,
    KC(54),	KS_6,		KS_asciicircum,
    KC(58),	KS_m,
    KC(59),	KS_j,
    KC(60),	KS_u,
    KC(61),	KS_7,		KS_ampersand,
    KC(62),	KS_8,		KS_asterisk,
    KC(65),	KS_comma,	KS_less,
    KC(66),	KS_k,
    KC(67),	KS_i,
    KC(68),	KS_o,
    KC(69),	KS_0,		KS_parenright,
    KC(70),	KS_9,		KS_parenleft,
    KC(73),	KS_period,	KS_greater,
    KC(74),	KS_slash,	KS_question,
    KC(75),	KS_l,
    KC(76),	KS_semicolon,	KS_colon,
    KC(77),	KS_p,
    KC(78),	KS_minus,	KS_underscore,
    KC(82),	KS_apostrophe,	KS_quotedbl,
    KC(84),	KS_bracketleft,	KS_braceleft,
    KC(85),	KS_equal,	KS_plus,
    KC(88),	KS_Caps_Lock,
    KC(89),	KS_Shift_R,
    KC(90),	KS_Return,
    KC(91),	KS_bracketright,KS_braceright,
    KC(93),	KS_backslash,	KS_bar,
    KC(102),	KS_Cmd_ResetEmul,KS_Delete,
    KC(105),	KS_KP_End,	KS_KP_1,
    KC(107),	KS_KP_Left,	KS_KP_4,
    KC(108),	KS_KP_Home,	KS_KP_7,
    KC(112),	KS_KP_Insert,	KS_KP_0,
    KC(113),	KS_Cmd_KbdReset,KS_KP_Delete,
    KC(114),	KS_KP_Down,	KS_KP_2,
    KC(115),	KS_KP_Begin,	KS_KP_5,
    KC(116),	KS_KP_Right,	KS_KP_6,
    KC(117),	KS_KP_Up,	KS_KP_8,
    KC(118),	KS_Cmd_Debugger,KS_Escape,
    KC(119),	KS_Num_Lock,
    KC(120),	KS_Cmd_Screen10,KS_f11,
    KC(121),	KS_KP_Add,
    KC(122),	KS_KP_Next,	KS_KP_3,
    KC(123),	KS_KP_Subtract,
    KC(124),	KS_KP_Multiply,
    KC(125),	KS_KP_Prior,	KS_KP_9,
    KC(126),	KS_Hold_Screen,
    KC(127),	KS_Pause,	/*Break*/
    KC(131),	KS_Cmd_Screen6,	KS_f7,
    KC(145),	KS_Cmd2,	KS_Alt_R,	KS_Multi_key,
    KC(148),	KS_Cmd1,	KS_Control_R,
    KC(202),	KS_KP_Divide,
    KC(218),	KS_KP_Enter,
    KC(233),	KS_End,
    KC(235),	KS_Left,
    KC(236),	KS_Home,
    KC(240),	KS_Insert,
    KC(242),	KS_Down,
    KC(244),	KS_Right,
    KC(245),	KS_Up,
    KC(250),	KS_Cmd_ScrollFwd,KS_Next,
    KC(252),	KS_Print_Screen,
    KC(253),	KS_Cmd_ScrollBack,KS_Prior,
    KC(241),	KS_Delete
};

static const keysym_t gsckbd_keydesc_precisionbook[] = {
/*  pos      command		normal		shifted */
    KC(7),   KS_Cmd_Screen0,	KS_f1,
    KC(15),  KS_Cmd_Screen1,	KS_f2,
    KC(23),  KS_Cmd_Screen2,	KS_f3,
    KC(31),  KS_Cmd_Screen3,	KS_f4,
    KC(39),  KS_Cmd_Screen4,	KS_f5,
    KC(47),  KS_Cmd_Screen5,	KS_f6,
    KC(55),  KS_Cmd_Screen6,	KS_f7,
    KC(63),  KS_Cmd_Screen7,	KS_f8,
    KC(71),  KS_Cmd_Screen8,	KS_f9,
    KC(79),  KS_Cmd_Screen9,	KS_f10,
    KC(86),  KS_Cmd_Screen10,	KS_f11,
    KC(94),  KS_Cmd_Screen11,	KS_f12,
    KC(8),   KS_Cmd_Debugger,	KS_Escape,
    KC(87),			KS_Print_Screen,
    KC(92),			KS_backslash,	KS_bar,
    KC(96),			KS_KP_Down,	KS_KP_2,
    KC(95),			KS_Hold_Screen,
    KC(97),			KS_KP_Left,	KS_KP_4,
    KC(98),			KS_Pause, /* Break */
    KC(99),			KS_KP_Up,	KS_KP_8,
    KC(100),			KS_KP_Delete,	KS_KP_Decimal,
    KC(101),			KS_KP_End,	KS_KP_1,
    KC(103),			KS_KP_Insert,	KS_KP_0,
    KC(106),			KS_KP_Right,	KS_KP_6,
    KC(109),			KS_KP_Next,	KS_KP_3,
    KC(110),			KS_KP_Home,	KS_KP_7,
    KC(111),			KS_KP_Prior,	KS_KP_9,
    KC(20),			KS_Caps_Lock,
    KC(17),  KS_Cmd1,		KS_Control_L,
    KC(88),  KS_Cmd1,		KS_Control_R,
    KC(25),  KS_Cmd2,		KS_Alt_L,
    KC(57),  KS_Cmd2,		KS_Alt_R,	KS_Multi_key,
    KC(139),			KS_Meta_L,
    KC(140),			KS_Meta_R,
};

#if !defined(WSKBD_NO_INTL_LAYOUTS)

static const keysym_t gsckbd_keydesc_de[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_dead_circumflex,KS_dead_abovering,
    KC(21),	KS_q,		KS_Q,		KS_at,
    KC(26),	KS_y,
    KC(30),	KS_2,		KS_quotedbl,	KS_twosuperior,
    KC(38),	KS_3,		KS_section,	KS_threesuperior,
    KC(53),	KS_z,
    KC(54),	KS_6,		KS_ampersand,
    KC(58),	KS_m,		KS_M,		KS_mu,
    KC(61),	KS_7,		KS_slash,	KS_braceleft,
    KC(62),	KS_8,		KS_parenleft,	KS_bracketleft,
    KC(65),	KS_comma,	KS_semicolon,
    KC(69),	KS_0,		KS_equal,	KS_braceright,
    KC(70),	KS_9,		KS_parenright,	KS_bracketright,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
    KC(76),	KS_odiaeresis,
    KC(78),	KS_ssharp,	KS_question,	KS_backslash,
    KC(82),	KS_adiaeresis,
    KC(84),	KS_udiaeresis,
    KC(85),	KS_dead_acute,	KS_dead_grave,
    KC(91),	KS_plus,	KS_asterisk,	KS_dead_tilde,
    KC(93),	KS_numbersign,	KS_apostrophe,
    KC(97),	KS_less,	KS_greater,	KS_bar,		KS_brokenbar,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_de_nodead[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_asciicircum,	KS_degree,
    KC(85),	KS_apostrophe,	KS_grave,
    KC(91),	KS_plus,	KS_asterisk,	KS_asciitilde,
};

static const keysym_t gsckbd_keydesc_dk[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_onehalf,	KS_paragraph,
    KC(30),	KS_2,		KS_quotedbl,	KS_at,
    KC(37),	KS_4,		KS_currency,	KS_dollar,
    KC(38),	KS_3,		KS_numbersign,	KS_sterling,
    KC(54),	KS_6,		KS_ampersand,
    KC(61),	KS_7,		KS_slash,	KS_braceleft,
    KC(62),	KS_8,		KS_parenleft,	KS_bracketleft,
    KC(65),	KS_comma,	KS_semicolon,
    KC(69),	KS_0,		KS_equal,	KS_braceright,
    KC(70),	KS_9,		KS_parenright,	KS_bracketright,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
    KC(76),	KS_ae,
    KC(78),	KS_plus,	KS_question,
    KC(82),	KS_oslash,
    KC(84),	KS_aring,
    KC(85),	KS_dead_acute,	KS_dead_grave,	KS_bar,
    KC(91),	KS_dead_diaeresis,KS_dead_circumflex,KS_dead_tilde,
    KC(93),	KS_apostrophe,	KS_asterisk,
    KC(97),	KS_less,	KS_greater,	KS_backslash,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_dk_nodead[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(85),	KS_apostrophe,	KS_grave,	KS_bar,
    KC(91),	KS_diaeresis,	KS_asciicircum,	KS_asciitilde,
};

static const keysym_t gsckbd_keydesc_sv[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_section,	KS_onehalf,
    KC(76),	KS_odiaeresis,
    KC(78),	KS_plus,	KS_question,	KS_backslash,
    KC(82),	KS_adiaeresis,
    KC(91),	KS_dead_diaeresis,KS_dead_circumflex,KS_dead_tilde,
    KC(97),	KS_less,	KS_greater,	KS_bar,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_sv_nodead[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(85),	KS_apostrophe,	KS_grave,	KS_bar,
    KC(91),	KS_diaeresis,	KS_asciicircum,	KS_asciitilde,
};

static const keysym_t gsckbd_keydesc_no[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_bar,		KS_paragraph,
    KC(76),	KS_oslash,
    KC(82),	KS_ae,
    KC(85),	KS_backslash,	KS_dead_grave,	KS_dead_acute,
    KC(91),	KS_dead_diaeresis,KS_dead_circumflex,KS_dead_tilde,
    KC(97),	KS_less,	KS_greater,
};

static const keysym_t gsckbd_keydesc_no_nodead[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(85),	KS_backslash,	KS_grave,	KS_acute,
    KC(91),	KS_diaeresis,	KS_asciicircum,	KS_asciitilde,
};

static const keysym_t gsckbd_keydesc_fr[] = {
/*  pos	     normal		shifted		altgr		shift-altgr */
    KC(14),	KS_twosuperior,
    KC(21),	KS_a,
    KC(22),	KS_ampersand,	KS_1,
    KC(26),	KS_w,
    KC(28),	KS_q,
    KC(29),	KS_z,
    KC(30),	KS_eacute,	KS_2,		KS_asciitilde,
    KC(37),	KS_apostrophe,	KS_4,		KS_braceleft,
    KC(38),	KS_quotedbl,	KS_3,		KS_numbersign,
    KC(46),	KS_parenleft,	KS_5,		KS_bracketleft,
    KC(54),	KS_minus,	KS_6,		KS_bar,
    KC(58),	KS_comma,	KS_question,
    KC(61),	KS_egrave,	KS_7,		KS_grave,
    KC(62),	KS_underscore,	KS_8,		KS_backslash,
    KC(65),	KS_semicolon,	KS_period,
    KC(69),	KS_agrave,	KS_0,		KS_at,
    KC(70),	KS_ccedilla,	KS_9,		KS_asciicircum,
    KC(73),	KS_colon,	KS_slash,
    KC(74),	KS_exclam,	KS_section,
    KC(76),	KS_m,
    KC(78),	KS_parenright,	KS_degree,	KS_bracketright,
    KC(82),	KS_ugrave,	KS_percent,
    KC(84),	KS_dead_circumflex,KS_dead_diaeresis,
    KC(85),	KS_equal,	KS_plus,	KS_braceright,
    KC(91),	KS_dollar,	KS_sterling,	KS_currency,
    KC(93),	KS_asterisk,	KS_mu,
    KC(97),	KS_less,	KS_greater,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_it[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_backslash,	KS_bar,
    KC(30),	KS_2,		KS_quotedbl,	KS_twosuperior,
    KC(38),	KS_3,		KS_sterling,	KS_threesuperior,
    KC(46),	KS_5,		KS_percent,
    KC(54),	KS_6,		KS_ampersand,
    KC(61),	KS_7,		KS_slash,
    KC(62),	KS_8,		KS_parenleft,
    KC(65),	KS_comma,	KS_semicolon,
    KC(69),	KS_0,		KS_equal,
    KC(70),	KS_9,		KS_parenright,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
    KC(76),	KS_ograve,	KS_Ccedilla,	KS_at,
    KC(78),	KS_apostrophe,	KS_question,
    KC(82),	KS_agrave,	KS_degree,	KS_numbersign,
    KC(84),	KS_egrave,	KS_eacute,	KS_braceleft,	KS_bracketleft,
    KC(85),	KS_igrave,	KS_asciicircum,
    KC(91),	KS_plus,	KS_asterisk,	KS_braceright,	KS_bracketright,
    KC(93),	KS_ugrave,	KS_section,
    KC(97),	KS_less,	KS_greater,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_uk[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_grave,	KS_grave,	KS_agrave,	KS_agrave,
    KC(22),	KS_1,		KS_exclam,	KS_plusminus,	KS_exclamdown,
    KC(30),	KS_2,		KS_quotedbl,	KS_twosuperior,	KS_cent,
    KC(37),	KS_4,		KS_dollar,	KS_acute,	KS_currency,
    KC(38),	KS_3,		KS_sterling,	KS_threesuperior,
    KC(46),	KS_5,		KS_percent,	KS_mu,		KS_yen,
    KC(54),	KS_6,		KS_asciicircum,	KS_paragraph,
    KC(61),	KS_7,		KS_ampersand,	KS_periodcentered,KS_brokenbar,
    KC(62),	KS_8,		KS_asterisk,	KS_cedilla,	KS_ordfeminine,
    KC(69),	KS_0,		KS_parenright,	KS_masculine,	KS_copyright,
    KC(70),	KS_9,		KS_parenleft,	KS_onesuperior,	KS_diaeresis,
    KC(78),	KS_minus,	KS_underscore,	KS_hyphen,	KS_ssharp,
    KC(82),	KS_apostrophe,	KS_at,		KS_section,	KS_Agrave,
    KC(85),	KS_equal,	KS_plus,	KS_onehalf,	KS_guillemotleft,
    KC(93),	KS_numbersign,	KS_asciitilde,	KS_sterling,	KS_thorn,
    KC(97),	KS_backslash,	KS_bar,		KS_Udiaeresis,
};

static const keysym_t gsckbd_keydesc_jp[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
/* initially KC(112),	KS_Hiragana_Katakana,	*/
/* initially KC(115),	KS_backslash,	KS_underscore,	*/
/* initially KC(121),	KS_Henkan,	*/
/* initially KC(123),	KS_Muhenkan,	*/
/* initially KC(125),	KS_backslash,	KS_bar,	*/
    KC(14),	KS_Zenkaku_Hankaku,/*replacegrave/tilde*/
    KC(30),	KS_2,		KS_quotedbl,
    KC(54),	KS_6,		KS_ampersand,
    KC(61),	KS_7,		KS_apostrophe,
    KC(62),	KS_8,		KS_parenleft,
    KC(69),	KS_0,
    KC(70),	KS_9,		KS_parenright,
    KC(76),	KS_semicolon,	KS_plus,
    KC(78),	KS_minus,	KS_equal,
    KC(82),	KS_colon,	KS_asterisk,
    KC(84),	KS_at,		KS_grave,
    KC(85),	KS_asciicircum,	KS_asciitilde,
    KC(91),	KS_bracketleft,	KS_braceleft,
    KC(93),	KS_bracketright,KS_braceright,
};

static const keysym_t gsckbd_keydesc_es[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_degree,	KS_ordfeminine,	KS_backslash,
    KC(22),	KS_1,		KS_exclam,	KS_bar,
    KC(30),	KS_2,		KS_quotedbl,	KS_at,
    KC(37),	KS_4,		KS_dollar,	KS_asciitilde,
    KC(38),	KS_3,		KS_periodcentered,KS_numbersign,
    KC(54),	KS_6,		KS_ampersand,
    KC(61),	KS_7,		KS_slash,
    KC(62),	KS_8,		KS_parenleft,
    KC(65),	KS_comma,	KS_semicolon,
    KC(69),	KS_0,		KS_equal,
    KC(70),	KS_9,		KS_parenright,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
    KC(76),	KS_ntilde,
    KC(78),	KS_apostrophe,	KS_question,
    KC(82),	KS_dead_acute,	KS_dead_diaeresis,KS_braceleft,
    KC(84),	KS_dead_grave,	KS_dead_circumflex,KS_bracketleft,
    KC(85),	KS_exclamdown,	KS_questiondown,
    KC(91),	KS_plus,	KS_asterisk,	KS_bracketright,
    KC(93),	KS_ccedilla,	KS_Ccedilla,	KS_braceright,
    KC(97),	KS_less,	KS_greater,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_lt[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_grave,	KS_asciitilde,
    KC(21),	KS_L7_aogonek,	KS_L7_Aogonek,
    KC(22),	KS_exclam,	KS_1,		KS_at,
    KC(29),	KS_L7_zcaron,	KS_L7_Zcaron,
    KC(30),	KS_minus,	KS_2,		KS_underscore,
    KC(34),	KS_L7_umacron,	KS_L7_Umacron,
    KC(36),	KS_e,		KS_E,		KS_currency,
    KC(37),	KS_semicolon,	KS_4,		KS_dollar,
    KC(38),	KS_slash,	KS_3,		KS_numbersign,
    KC(41),	KS_space,	KS_space,	KS_nobreakspace,
    KC(43),	KS_L7_scaron,	KS_L7_Scaron,
    KC(46),	KS_colon,	KS_5,		KS_paragraph,
    KC(54),	KS_comma,	KS_6,		KS_asciicircum,
    KC(61),	KS_period,	KS_7,		KS_ampersand,
    KC(62),	KS_equal,	KS_8,		KS_asterisk,
    KC(65),	KS_L7_ccaron,	KS_L7_Ccaron,	KS_L7_dbllow9quot,
    KC(69),	KS_bracketright,KS_0,		KS_parenright,
    KC(70),	KS_bracketleft,	KS_9,		KS_parenleft,
    KC(73),	KS_f,		KS_F,		KS_L7_leftdblquot,
    KC(74),	KS_L7_eogonek,	KS_L7_Eogonek,	KS_backslash,
    KC(76),	KS_L7_uogonek,	KS_L7_Uogonek,
    KC(78),	KS_question,	KS_plus,	KS_apostrophe,
    KC(82),	KS_L7_edot,	KS_L7_Edot,	KS_quotedbl,
    KC(84),	KS_L7_iogonek,	KS_L7_Iogonek,	KS_braceleft,
    KC(85),	KS_x,		KS_X,		KS_percent,
    KC(91),	KS_w,		KS_W,		KS_braceright,
    KC(93),	KS_q,		KS_Q,		KS_bar,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_be[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_twosuperior,	KS_threesuperior,
    KC(21),	KS_a,
    KC(22),	KS_ampersand,	KS_1,		KS_bar,
    KC(26),	KS_w,
    KC(28),	KS_q,
    KC(29),	KS_z,
    KC(30),	KS_eacute,	KS_2,		KS_at,
    KC(37),	KS_apostrophe,	KS_4,
    KC(38),	KS_quotedbl,	KS_3,		KS_numbersign,
    KC(46),	KS_parenleft,	KS_5,
    KC(54),	KS_section,	KS_6,		KS_asciicircum,
    KC(58),	KS_comma,	KS_question,
    KC(61),	KS_egrave,	KS_7,
    KC(62),	KS_exclam,	KS_8,
    KC(65),	KS_semicolon,	KS_period,
    KC(69),	KS_agrave,	KS_0,		KS_braceright,
    KC(70),	KS_ccedilla,	KS_9,		KS_braceleft,
    KC(73),	KS_colon,	KS_slash,
    KC(74),	KS_equal,	KS_plus,	KS_asciitilde,
    KC(76),	KS_m,
    KC(78),	KS_parenright,	KS_degree,
    KC(82),	KS_ugrave,	KS_percent,	KS_acute,
    KC(84),	KS_dead_circumflex,KS_dead_diaeresis,KS_bracketleft,
    KC(85),	KS_minus,	KS_underscore,
    KC(91),	KS_dollar,	KS_asterisk,	KS_bracketright,
    KC(93),	KS_mu,		KS_sterling,	KS_grave,
    KC(97),	KS_less,	KS_greater,	KS_backslash,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};


static const keysym_t gsckbd_keydesc_us_dvorak[] = {
/*  pos      command		normal		shifted */
    KC(21),	KS_apostrophe,	KS_quotedbl,
    KC(26),	KS_semicolon,	KS_colon,
    KC(27),	KS_o,
    KC(29),	KS_comma,	KS_less,
    KC(33),	KS_j,
    KC(34),	KS_q,
    KC(35),	KS_e,
    KC(36),	KS_period,	KS_greater,
    KC(42),	KS_k,
    KC(43),	KS_u,
    KC(44),	KS_y,
    KC(45),	KS_p,
    KC(49),	KS_b,
    KC(50),	KS_x,
    KC(51),	KS_d,
    KC(52),	KS_i,
    KC(53),	KS_f,
    KC(59),	KS_h,
    KC(60),	KS_g,
    KC(65),	KS_w,
    KC(66),	KS_t,
    KC(67),	KS_c,
    KC(68),	KS_r,
    KC(73),	KS_v,
    KC(74),	KS_z,
    KC(75),	KS_n,
    KC(76),	KS_s,
    KC(77),	KS_l,
    KC(78),	KS_bracketleft,	KS_braceleft,
    KC(82),	KS_minus,	KS_underscore,
    KC(84),	KS_slash,	KS_question,
    KC(85),	KS_bracketright,KS_braceright,
    KC(91),	KS_equal,	KS_plus,
};

static const keysym_t gsckbd_keydesc_swapctrlcaps[] = {
/*  pos      command		normal		shifted */
    KC(20),	KS_Caps_Lock,
    KC(88),	KS_Cmd1,	KS_Control_L,
};

static const keysym_t gsckbd_keydesc_iopener[] = {
/*  pos      command		normal		shifted */
    KC(1),	KS_Cmd_Screen7,	KS_f8,
    KC(3),	KS_Cmd_Screen3,	KS_f4,
    KC(4),	KS_Cmd_Screen1,	KS_f2,
    KC(5),	KS_Cmd_Debugger,KS_Escape,
    KC(6),	KS_Cmd_Screen0,	KS_f1,
    KC(7),	KS_f11,
    KC(9),	KS_Cmd_Screen8,	KS_f9,
    KC(10),	KS_Cmd_Screen6,	KS_f7,
    KC(11),	KS_Cmd_Screen4,	KS_f5,
    KC(12),	KS_Cmd_Screen2,	KS_f3,
    KC(120),	KS_Cmd_Screen9,	KS_f10,
    KC(131),	KS_Cmd_Screen5,	KS_f6,
};

static const keysym_t gsckbd_keydesc_ru[] = {
/*  pos      normal		shifted		altgr			shift-altgr */
    KC(21),	KS_q,		KS_Q,		KS_Cyrillic_ishort,KS_Cyrillic_ISHORT,
    KC(26),	KS_z,		KS_Z,		KS_Cyrillic_ya,	KS_Cyrillic_YA,
    KC(27),	KS_s,		KS_S,		KS_Cyrillic_yeru,KS_Cyrillic_YERU,
    KC(28),	KS_a,		KS_A,		KS_Cyrillic_ef,	KS_Cyrillic_EF,
    KC(29),	KS_w,		KS_W,		KS_Cyrillic_tse,KS_Cyrillic_TSE,
    KC(33),	KS_c,		KS_C,		KS_Cyrillic_es,	KS_Cyrillic_ES,
    KC(34),	KS_x,		KS_X,		KS_Cyrillic_che,KS_Cyrillic_CHE,
    KC(35),	KS_d,		KS_D,		KS_Cyrillic_ve,	KS_Cyrillic_VE,
    KC(36),	KS_e,		KS_E,		KS_Cyrillic_u,	KS_Cyrillic_U,
    KC(42),	KS_v,		KS_V,		KS_Cyrillic_em,	KS_Cyrillic_EM,
    KC(43),	KS_f,		KS_F,		KS_Cyrillic_a,	KS_Cyrillic_A,
    KC(44),	KS_t,		KS_T,		KS_Cyrillic_ie,	KS_Cyrillic_IE,
    KC(45),	KS_r,		KS_R,		KS_Cyrillic_ka,	KS_Cyrillic_KA,
    KC(49),	KS_n,		KS_N,		KS_Cyrillic_te,	KS_Cyrillic_TE,
    KC(50),	KS_b,		KS_B,		KS_Cyrillic_i,	KS_Cyrillic_I,
    KC(51),	KS_h,		KS_H,		KS_Cyrillic_er,	KS_Cyrillic_ER,
    KC(52),	KS_g,		KS_G,		KS_Cyrillic_pe,	KS_Cyrillic_PE,
    KC(53),	KS_y,		KS_Y,		KS_Cyrillic_en,	KS_Cyrillic_EN,
    KC(54),	KS_6,		KS_asciicircum,	KS_6,		KS_comma,
    KC(58),	KS_m,		KS_M,		KS_Cyrillic_ssighn,KS_Cyrillic_SSIGHN,
    KC(59),	KS_j,		KS_J,		KS_Cyrillic_o,	KS_Cyrillic_O,
    KC(60),	KS_u,		KS_U,		KS_Cyrillic_ge,	KS_Cyrillic_GE,
    KC(61),	KS_7,		KS_ampersand,	KS_7,		KS_period,
    KC(65),	KS_comma,	KS_less,	KS_Cyrillic_be,	KS_Cyrillic_BE,
    KC(66),	KS_k,		KS_K,		KS_Cyrillic_el,	KS_Cyrillic_EL,
    KC(67),	KS_i,		KS_I,		KS_Cyrillic_sha,KS_Cyrillic_SHA,
    KC(68),	KS_o,		KS_O,		KS_Cyrillic_scha,KS_Cyrillic_SCHA,
    KC(73),	KS_period,	KS_greater,	KS_Cyrillic_yu,	KS_Cyrillic_YU,
    KC(74),	KS_slash,	KS_question,	KS_Cyrillic_yo,	KS_Cyrillic_YO,
    KC(75),	KS_l,		KS_L,		KS_Cyrillic_de,	KS_Cyrillic_DE,
    KC(76),	KS_semicolon,	KS_colon,	KS_Cyrillic_zhe,KS_Cyrillic_ZHE,
    KC(77),	KS_p,		KS_P,		KS_Cyrillic_ze,	KS_Cyrillic_ZE,
    KC(82),	KS_apostrophe,	KS_quotedbl,	KS_Cyrillic_e,	KS_Cyrillic_E,
    KC(84),	KS_bracketleft,	KS_braceleft,	KS_Cyrillic_ha,	KS_Cyrillic_HA,
    KC(91),	KS_bracketright,KS_braceright,	KS_Cyrillic_hsighn,KS_Cyrillic_HSIGHN,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_ua[] = {
/*  pos      normal		shifted		altgr			shift-altgr */
    KC(14),	KS_grave,	KS_asciitilde,	KS_Cyrillic_gheukr,KS_Cyrillic_GHEUKR,
    KC(21),	KS_q,		KS_Q,		KS_Cyrillic_ishort,KS_Cyrillic_ISHORT,
    KC(26),	KS_z,		KS_Z,		KS_Cyrillic_ya,	KS_Cyrillic_YA,
    KC(27),	KS_s,		KS_S,		KS_Cyrillic_yeru,KS_Cyrillic_YERU,
    KC(28),	KS_a,		KS_A,		KS_Cyrillic_ef,	KS_Cyrillic_EF,
    KC(29),	KS_w,		KS_W,		KS_Cyrillic_tse,KS_Cyrillic_TSE,
    KC(33),	KS_c,		KS_C,		KS_Cyrillic_es,	KS_Cyrillic_ES,
    KC(34),	KS_x,		KS_X,		KS_Cyrillic_che,KS_Cyrillic_CHE,
    KC(35),	KS_d,		KS_D,		KS_Cyrillic_ve,	KS_Cyrillic_VE,
    KC(36),	KS_e,		KS_E,		KS_Cyrillic_u,	KS_Cyrillic_U,
    KC(42),	KS_v,		KS_V,		KS_Cyrillic_em,	KS_Cyrillic_EM,
    KC(43),	KS_f,		KS_F,		KS_Cyrillic_a,	KS_Cyrillic_A,
    KC(44),	KS_t,		KS_T,		KS_Cyrillic_ie,	KS_Cyrillic_IE,
    KC(45),	KS_r,		KS_R,		KS_Cyrillic_ka,	KS_Cyrillic_KA,
    KC(49),	KS_n,		KS_N,		KS_Cyrillic_te,	KS_Cyrillic_TE,
    KC(50),	KS_b,		KS_B,		KS_Cyrillic_i,	KS_Cyrillic_I,
    KC(51),	KS_h,		KS_H,		KS_Cyrillic_er,	KS_Cyrillic_ER,
    KC(52),	KS_g,		KS_G,		KS_Cyrillic_pe,	KS_Cyrillic_PE,
    KC(53),	KS_y,		KS_Y,		KS_Cyrillic_en,	KS_Cyrillic_EN,
    KC(54),	KS_6,		KS_asciicircum,	KS_6,		KS_comma,
    KC(58),	KS_m,		KS_M,		KS_Cyrillic_ssighn,KS_Cyrillic_SSIGHN,
    KC(59),	KS_j,		KS_J,		KS_Cyrillic_o,	KS_Cyrillic_O,
    KC(60),	KS_u,		KS_U,		KS_Cyrillic_ge,	KS_Cyrillic_GE,
    KC(61),	KS_7,		KS_ampersand,	KS_7,		KS_period,
    KC(65),	KS_comma,	KS_less,	KS_Cyrillic_be,	KS_Cyrillic_BE,
    KC(66),	KS_k,		KS_K,		KS_Cyrillic_el,	KS_Cyrillic_EL,
    KC(67),	KS_i,		KS_I,		KS_Cyrillic_sha,KS_Cyrillic_SHA,
    KC(68),	KS_o,		KS_O,		KS_Cyrillic_scha,KS_Cyrillic_SCHA,
    KC(73),	KS_period,	KS_greater,	KS_Cyrillic_yu,	KS_Cyrillic_YU,
    KC(74),	KS_slash,	KS_question,	KS_Cyrillic_yo,	KS_Cyrillic_YO,
    KC(75),	KS_l,		KS_L,		KS_Cyrillic_de,	KS_Cyrillic_DE,
    KC(76),	KS_semicolon,	KS_colon,	KS_Cyrillic_zhe,KS_Cyrillic_ZHE,
    KC(77),	KS_p,		KS_P,		KS_Cyrillic_ze,	KS_Cyrillic_ZE,
    KC(78),	KS_minus,	KS_underscore,	KS_Cyrillic_iukr,KS_Cyrillic_IUKR,
    KC(82),	KS_apostrophe,	KS_quotedbl,	KS_Cyrillic_e,	KS_Cyrillic_E,
    KC(84),	KS_bracketleft,	KS_braceleft,	KS_Cyrillic_ha,	KS_Cyrillic_HA,
    KC(85),	KS_equal,	KS_plus,	KS_Cyrillic_yeukr,KS_Cyrillic_YEUKR,
    KC(91),	KS_bracketright,KS_braceright,	KS_Cyrillic_hsighn,KS_Cyrillic_HSIGHN,
    KC(93),	KS_backslash,	KS_bar,		KS_Cyrillic_yi,	KS_Cyrillic_YI,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_sg[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_section,	KS_degree,	KS_dead_abovering,
    KC(22),	KS_1,		KS_plus,	KS_bar,
    KC(26),	KS_y,
    KC(30),	KS_2,		KS_quotedbl,	KS_at,
    KC(36),	KS_e,		KS_E,		KS_currency,
    KC(37),	KS_4,		KS_ccedilla,
    KC(38),	KS_3,		KS_asterisk,	KS_numbersign,
    KC(53),	KS_z,
    KC(54),	KS_6,		KS_ampersand,	KS_notsign,
    KC(61),	KS_7,		KS_slash,	KS_brokenbar,
    KC(62),	KS_8,		KS_parenleft,	KS_cent,
    KC(65),	KS_comma,	KS_semicolon,
    KC(69),	KS_0,		KS_equal,
    KC(70),	KS_9,		KS_parenright,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
    KC(76),	KS_odiaeresis,	KS_eacute,
    KC(78),	KS_apostrophe,	KS_question,	KS_dead_acute,
    KC(82),	KS_adiaeresis,	KS_agrave,	KS_braceleft,
    KC(84),	KS_udiaeresis,	KS_egrave,	KS_bracketleft,
    KC(85),	KS_dead_circumflex,KS_dead_grave,KS_dead_tilde,
    KC(91),	KS_dead_diaeresis,KS_exclam,	KS_bracketright,
    KC(93),	KS_dollar,	KS_sterling,	KS_braceright,
    KC(97),	KS_less,	KS_greater,	KS_backslash,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_sg_nodead[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(78),	KS_apostrophe,	KS_question,	KS_acute,
    KC(85),	KS_asciicircum,	KS_grave,	KS_asciitilde,
    KC(91),	KS_diaeresis,	KS_exclam,	KS_bracketright,
};

static const keysym_t gsckbd_keydesc_sf[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(76),	KS_eacute,	KS_odiaeresis,
    KC(82),	KS_agrave,	KS_adiaeresis,	KS_braceleft,
    KC(84),	KS_egrave,	KS_udiaeresis,	KS_bracketleft,
};

static const keysym_t gsckbd_keydesc_pt[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_backslash,	KS_bar,
    KC(30),	KS_2,		KS_quotedbl,	KS_at,
    KC(38),	KS_3,		KS_numbersign,	KS_sterling,
    KC(54),	KS_6,		KS_ampersand,
    KC(61),	KS_7,		KS_slash,	KS_braceleft,
    KC(62),	KS_8,		KS_parenleft,	KS_bracketleft,
    KC(65),	KS_comma,	KS_semicolon,
    KC(69),	KS_0,		KS_equal,	KS_braceright,
    KC(70),	KS_9,		KS_parenright,	KS_bracketright,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
    KC(76),	KS_ccedilla,	KS_Ccedilla,
    KC(78),	KS_apostrophe,	KS_question,
    KC(82),	KS_masculine,	KS_ordfeminine,
    KC(84),	KS_plus,	KS_asterisk,
    KC(85),	KS_less,	KS_greater,
    KC(91),	KS_dead_acute,	KS_dead_grave,
    KC(93),	KS_dead_tilde,	KS_dead_circumflex,
    KC(97),	KS_less,	KS_greater,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_la[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_bar,		KS_degree,	KS_notsign,
    KC(21),	KS_q,		KS_Q,		KS_at,
    KC(22),	KS_1,		KS_exclam,
    KC(30),	KS_2,		KS_quotedbl,
    KC(38),	KS_3,		KS_numbersign,
    KC(54),	KS_6,		KS_ampersand,
    KC(61),	KS_7,		KS_slash,
    KC(62),	KS_8,		KS_parenleft,
    KC(65),	KS_comma,	KS_semicolon,
    KC(69),	KS_0,		KS_equal,
    KC(70),	KS_9,		KS_parenright,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
    KC(76),	KS_ntilde,
    KC(78),	KS_apostrophe,	KS_question,	KS_backslash,
    KC(82),	KS_braceleft,	KS_bracketleft,	KS_dead_circumflex,
    KC(84),	KS_dead_acute,	KS_dead_diaeresis,
    KC(85),	KS_questiondown,KS_exclamdown,
    KC(91),	KS_plus,	KS_asterisk,	KS_asciitilde,
    KC(93),	KS_braceright,	KS_bracketright,KS_dead_grave,
    KC(97),	KS_less,	KS_greater,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_br[] = {
/*  pos      normal		shifted         altgr           shift-altgr */
/* initially KC(115),	KS_slash,	KS_question,	KS_degree,	*/
    KC(14),	KS_apostrophe,	KS_quotedbl,
    KC(22),	KS_1,		KS_exclam,	KS_onesuperior,
    KC(30),	KS_2,		KS_at,		KS_twosuperior,
    KC(37),	KS_4,		KS_dollar,	KS_sterling,
    KC(38),	KS_3,		KS_numbersign,	KS_threesuperior,
    KC(46),	KS_5,		KS_percent,	KS_cent,
    KC(54),	KS_6,		KS_dead_diaeresis,KS_notsign,
    KC(74),	KS_semicolon,	KS_colon,
    KC(76),	KS_ccedilla,	KS_Ccedilla,
    KC(82),	KS_dead_tilde,	KS_dead_circumflex,
    KC(84),	KS_dead_acute,	KS_dead_grave,
    KC(85),	KS_equal,	KS_plus,	KS_section,
    KC(91),	KS_bracketleft,	KS_braceleft,	KS_ordfeminine,
    KC(93),	KS_bracketright,KS_braceright,	KS_masculine,
    KC(97),	KS_backslash,	KS_bar,
    KC(113),	KS_KP_Delete,	KS_KP_Decimal,
};

static const keysym_t gsckbd_keydesc_tr[] = {
/*  pos      normal		shifted         altgr           shift-altgr */
    KC(14),	KS_quotedbl,	KS_eacute,
    KC(21),	KS_q,		KS_Q,		KS_at,
    KC(30),	KS_2,		KS_apostrophe,	KS_sterling,
    KC(37),	KS_4,		KS_plus,	KS_dollar,
    KC(38),	KS_3,		KS_asciicircum,	KS_numbersign,
    KC(46),	KS_5,		KS_percent,	KS_onehalf,
    KC(54),	KS_6,		KS_ampersand,
    KC(61),	KS_7,		KS_slash,	KS_braceleft,
    KC(62),	KS_8,		KS_parenleft,	KS_bracketleft,
    KC(65),	KS_odiaeresis,	KS_Odiaeresis,
    KC(67),	KS_L5_idotless,	KS_I,
    KC(69),	KS_0,		KS_equal,	KS_braceright,
    KC(70),	KS_9,		KS_parenright,	KS_bracketright,
    KC(73),	KS_ccedilla,	KS_Ccedilla,
    KC(74),	KS_period,	KS_colon,
    KC(76),	KS_L5_scedilla,	KS_L5_Scedilla,	KS_dead_acute,
    KC(78),	KS_asterisk,	KS_question,	KS_backslash,
    KC(82),	KS_i,		KS_L5_Idotabove,
    KC(84),	KS_L5_gbreve,	KS_L5_Gbreve,	KS_dead_diaeresis,
    KC(85),	KS_minus,	KS_underscore,
    KC(91),	KS_udiaeresis,	KS_Udiaeresis,	KS_asciitilde,
    KC(93),	KS_comma,	KS_semicolon,	KS_dead_grave,
    KC(97),	KS_less,	KS_greater,	KS_bar,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_tr_nodead[] = {
/*  pos      normal		shifted         altgr           shift-altgr */
    KC(76),	KS_L5_scedilla,	KS_L5_Scedilla,	KS_apostrophe,
    KC(84),	KS_L5_gbreve,	KS_L5_Gbreve,
    KC(93),	KS_comma,	KS_semicolon,	KS_grave,
};

static const keysym_t gsckbd_keydesc_pl[] = {
/*  pos      normal		shifted         altgr           shift-altgr */
    KC(26),	KS_z,		KS_Z,		KS_L2_zdotabove,KS_L2_Zdotabove,
    KC(27),	KS_s,		KS_S,		KS_L2_sacute,	KS_L2_Sacute,
    KC(28),	KS_a,		KS_A,		KS_L2_aogonek,	KS_L2_Aogonek,
    KC(33),	KS_c,		KS_C,		KS_L2_cacute,	KS_L2_Cacute,
    KC(34),	KS_x,		KS_X,		KS_L2_zacute,	KS_L2_Zacute,
    KC(36),	KS_e,		KS_E,		KS_L2_eogonek,	KS_L2_Eogonek,
    KC(49),	KS_n,		KS_N,		KS_L2_nacute,	KS_L2_Nacute,
    KC(68),	KS_o,		KS_O,		KS_oacute,	KS_Oacute,
    KC(75),	KS_l,		KS_L,		KS_L2_lstroke,	KS_L2_Lstroke,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_hu[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_0,		KS_section,
    KC(21),	KS_q,		KS_Q,		KS_backslash,
    KC(22),	KS_1,		KS_apostrophe,	KS_asciitilde,
    KC(26),	KS_y,		KS_Y,		KS_greater,
    KC(29),	KS_w,		KS_W,KS_bar,
    KC(30),	KS_2,		KS_quotedbl,
    KC(33),	KS_c,		KS_C,		KS_ampersand,
    KC(34),	KS_x,		KS_X,		KS_numbersign,
    KC(37),	KS_4,		KS_exclam,
    KC(38),	KS_3,		KS_plus,	KS_asciicircum,
    KC(42),	KS_v,		KS_V,		KS_at,
    KC(43),	KS_f,		KS_F,		KS_bracketleft,
    KC(46),	KS_5,		KS_percent,
    KC(49),	KS_n,		KS_N,		KS_braceright,
    KC(50),	KS_b,		KS_B,		KS_braceleft,
    KC(52),	KS_g,		KS_G,		KS_bracketright,
    KC(53),	KS_z,		KS_Z,
    KC(54),	KS_6,		KS_slash,
    KC(59),	KS_j,		KS_J,		KS_iacute,
    KC(61),	KS_7,		KS_equal,KS_grave,
    KC(62),	KS_8,		KS_parenleft,
    KC(65),	KS_comma,	KS_question,	KS_semicolon,
    KC(67),	KS_i,		KS_I,		KS_iacute,
    KC(69),	KS_odiaeresis,	KS_Odiaeresis,
    KC(70),	KS_9,		KS_parenright,	KS_acute,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,	KS_asterisk,
    KC(76),	KS_eacute,	KS_Eacute,	KS_dollar,
    KC(78),	KS_udiaeresis,	KS_Udiaeresis,
    KC(82),	KS_aacute,	KS_Aacute,	KS_ssharp,
    KC(84),	KS_odoubleacute,KS_Odoubleacute,KS_division,
    KC(85),	KS_oacute,	KS_Oacute,
    KC(91),	KS_uacute,	KS_Uacute,	KS_multiply,
    KC(93),	KS_udoubleacute,KS_Udoubleacute,KS_currency,
    KC(97),	KS_iacute,	KS_Iacute,	KS_less,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_si[]=
{
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_cedilla,	KS_diaeresis,
    KC(21),	KS_q,		KS_Q,		KS_backslash,
    KC(22),	KS_1,		KS_exclam,	KS_asciitilde,
    KC(26),	KS_y,		KS_Y,
    KC(29),	KS_w,		KS_W,		KS_bar,
    KC(30),	KS_2,		KS_quotedbl,	KS_L2_caron,
    KC(37),	KS_4,		KS_dollar,	KS_L2_breve,
    KC(38),	KS_3,		KS_numbersign,	KS_asciicircum,
    KC(42),	KS_v,		KS_V,		KS_at,
    KC(43),	KS_f,		KS_F,		KS_bracketleft,
    KC(46),	KS_5,		KS_percent,	KS_degree,
    KC(49),	KS_n,		KS_N,		KS_braceright,
    KC(50),	KS_b,		KS_B,		KS_braceleft,
    KC(52),	KS_g,		KS_G,		KS_bracketright,
    KC(53),	KS_z,		KS_Z,
    KC(54),	KS_6,		KS_ampersand,	KS_L2_ogonek,
    KC(58),	KS_m,		KS_M,		KS_section,
    KC(61),	KS_7,		KS_slash,	KS_grave,
    KC(62),	KS_8,		KS_parenleft,	KS_L2_dotabove,
    KC(65),	KS_comma,	KS_semicolon,
    KC(66),	KS_k,		KS_K,		KS_L2_lstroke,
    KC(69),	KS_0,		KS_equal,	KS_L2_dblacute,
    KC(70),	KS_9,		KS_parenright,	KS_acute,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
    KC(75),	KS_l,		KS_L,		KS_L2_Lstroke,
    KC(76),	KS_L2_ccaron,	KS_L2_Ccaron,
    KC(78),	KS_apostrophe,	KS_question,	KS_diaeresis,
    KC(82),	KS_L2_cacute,	KS_L2_Cacute,	KS_ssharp,
    KC(84),	KS_L2_scaron,	KS_L2_Scaron,	KS_division,
    KC(85),	KS_plus,	KS_asterisk,	KS_cedilla,
    KC(91),	KS_L2_dstroke,	KS_L2_Dstroke,	KS_multiply,
    KC(93),	KS_L2_zcaron,	KS_L2_Zcaron,	KS_currency,
    KC(97),	KS_less,	KS_greater,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_cf[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_numbersign,	KS_bar,		KS_backslash,
    KC(22),	KS_1,		KS_exclam,	KS_plusminus,
    KC(30),	KS_2,		KS_quotedbl,	KS_at,
    KC(37),	KS_4,		KS_dollar,	KS_cent,
    KC(38),	KS_3,		KS_slash,	KS_sterling,
    KC(46),	KS_5,		KS_percent,	KS_diaeresis,
    KC(54),	KS_6,		KS_question,	KS_macron,
    KC(58),	KS_m,		KS_M,		KS_mu,
    KC(61),	KS_7,		KS_ampersand,	KS_brokenbar,
    KC(62),	KS_8,		KS_asterisk,	KS_twosuperior,
    KC(65),	KS_comma,	KS_apostrophe,	KS_hyphen,
    KC(68),	KS_o,		KS_O,		KS_section,
    KC(69),	KS_0,		KS_parenright,	KS_onequarter,
    KC(70),	KS_9,		KS_parenleft,	KS_threesuperior,
    KC(73),	KS_period,	KS_period,
    KC(74),	KS_eacute,	KS_Eacute,	KS_dead_acute,
    KC(76),	KS_semicolon,	KS_colon,	KS_asciitilde,
    KC(77),	KS_p,		KS_P,		KS_paragraph,
    KC(78),	KS_minus,	KS_underscore,	KS_onehalf,
    KC(82),	KS_dead_grave,	KS_dead_grave,	KS_braceleft,
    KC(84),	KS_dead_circumflex,KS_dead_circumflex,KS_bracketleft,
    KC(85),	KS_equal,	KS_plus,	KS_threequarters,
    KC(91),	KS_dead_cedilla,KS_dead_diaeresis,KS_bracketright,
    KC(93),	KS_less,	KS_greater,	KS_braceright,
    KC(97),	KS_guillemotleft,KS_guillemotright,KS_degree,
    KC(145),	KS_Mode_switch,KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_cf_nodead[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(74),	KS_eacute,	KS_Eacute,	KS_acute,
    KC(82),	KS_grave,	KS_grave,	KS_braceleft,
    KC(84),	KS_asciicircum,KS_asciicircum,KS_bracketleft,
    KC(91),	KS_cedilla,	KS_diaeresis,	KS_bracketright,
};

static const keysym_t gsckbd_keydesc_lv[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(26),	KS_z,		KS_Z,		KS_L7_zcaron,	KS_L7_Zcaron,
    KC(27),	KS_s,		KS_S,		KS_L7_scaron,	KS_L7_Scaron,
    KC(28),	KS_a,		KS_A,		KS_L7_amacron,	KS_L7_Amacron,
    KC(33),	KS_c,		KS_C,		KS_L7_ccaron,	KS_L7_Ccaron,
    KC(36),	KS_e,		KS_E,		KS_L7_emacron,	KS_L7_Emacron,
    KC(49),	KS_n,		KS_N,		KS_L7_ncedilla,	KS_L7_Ncedilla,
    KC(52),	KS_g,		KS_G,		KS_L7_gcedilla,	KS_L7_Gcedilla,
    KC(60),	KS_u,		KS_U,		KS_L7_umacron,	KS_L7_Umacron,
    KC(66),	KS_k,		KS_K,		KS_L7_kcedilla,	KS_L7_Kcedilla,
    KC(67),	KS_i,		KS_I,		KS_L7_imacron,	KS_L7_Imacron,
    KC(68),	KS_o,		KS_O,		KS_L7_omacron,	KS_L7_Omacron,
    KC(75),	KS_l,		KS_L,		KS_L7_lcedilla,	KS_L7_Lcedilla,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_nl[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(14),	KS_at,		KS_section,	KS_notsign,
    KC(22),	KS_1,		KS_exclam,	KS_onesuperior,
    KC(26),	KS_z,		KS_Z,		KS_guillemotleft,
    KC(27),	KS_s,		KS_S,		KS_ssharp,
    KC(30),	KS_2,		KS_quotedbl,	KS_twosuperior,
    KC(33),	KS_c,		KS_C,		KS_cent,
    KC(34),	KS_x,		KS_X,		KS_guillemotright,
    KC(37),	KS_4,		KS_dollar,	KS_onequarter,
    KC(38),	KS_3,		KS_numbersign,	KS_threesuperior,
    KC(45),	KS_r,		KS_R,		KS_paragraph,
    KC(46),	KS_5,		KS_percent,	KS_onehalf,
    KC(54),	KS_6,		KS_ampersand,	KS_threequarters,
    KC(58),	KS_m,		KS_M,		KS_mu,
    KC(61),	KS_7,		KS_underscore,	KS_sterling,
    KC(62),	KS_8,		KS_parenleft,	KS_braceleft,
    KC(65),	KS_comma,	KS_semicolon,
    KC(69),	KS_0,		KS_apostrophe,
    KC(70),	KS_9,		KS_parenright,	KS_braceright,
    KC(73),	KS_period,	KS_colon,	KS_periodcentered,
    KC(74),	KS_minus,	KS_equal,
    KC(76),	KS_plus,	KS_plusminus,
    KC(78),	KS_slash,	KS_question,	KS_backslash,
    KC(82),	KS_dead_acute,	KS_dead_grave,
    KC(84),	KS_dead_diaeresis,KS_dead_circumflex,
    KC(85),	KS_degree,	KS_dead_tilde,	KS_dead_cedilla,
    KC(91),	KS_asterisk,	KS_bar,
    KC(93),	KS_less,	KS_greater,
    KC(97),	KS_bracketright,KS_bracketleft,	KS_brokenbar,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

static const keysym_t gsckbd_keydesc_nl_nodead[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(82),	KS_apostrophe,	KS_grave,
    KC(84),	KS_quotedbl,	KS_asciicircum,
    KC(85),	KS_degree,	KS_asciitilde,	KS_cedilla,
};

#endif	/* WSKBD_NO_INTL_LAYOUTS */

#define KBD_MAP(name, base, map) \
			{ name, base, sizeof(map)/sizeof(keysym_t), map }

const struct wscons_keydesc gsckbd_keydesctab[] = {
	KBD_MAP(KB_US,			0,	gsckbd_keydesc_us),
#if !defined(WSKBD_NO_INTL_LAYOUTS)
	KBD_MAP(KB_DE,			KB_US,	gsckbd_keydesc_de),
	KBD_MAP(KB_DE | KB_NODEAD,	KB_DE,	gsckbd_keydesc_de_nodead),
	KBD_MAP(KB_FR,			KB_US,	gsckbd_keydesc_fr),
	KBD_MAP(KB_DK,			KB_US,	gsckbd_keydesc_dk),
	KBD_MAP(KB_DK | KB_NODEAD,	KB_DK,	gsckbd_keydesc_dk_nodead),
	KBD_MAP(KB_IT,			KB_US,	gsckbd_keydesc_it),
	KBD_MAP(KB_UK,			KB_US,	gsckbd_keydesc_uk),
	KBD_MAP(KB_JP,			KB_US,	gsckbd_keydesc_jp),
	KBD_MAP(KB_SV,			KB_DK,	gsckbd_keydesc_sv),
	KBD_MAP(KB_SV | KB_NODEAD,	KB_SV,	gsckbd_keydesc_sv_nodead),
	KBD_MAP(KB_NO,			KB_DK,	gsckbd_keydesc_no),
	KBD_MAP(KB_NO | KB_NODEAD,	KB_NO,	gsckbd_keydesc_no_nodead),
	KBD_MAP(KB_US | KB_DVORAK,	KB_US,	gsckbd_keydesc_us_dvorak),
	KBD_MAP(KB_US | KB_SWAPCTRLCAPS, KB_US,	gsckbd_keydesc_swapctrlcaps),
	KBD_MAP(KB_US | KB_IOPENER,	KB_US,	gsckbd_keydesc_iopener),
	KBD_MAP(KB_JP | KB_SWAPCTRLCAPS, KB_JP,	gsckbd_keydesc_swapctrlcaps),
	KBD_MAP(KB_FR | KB_SWAPCTRLCAPS, KB_FR,	gsckbd_keydesc_swapctrlcaps),
	KBD_MAP(KB_BE | KB_SWAPCTRLCAPS, KB_BE,	gsckbd_keydesc_swapctrlcaps),
	KBD_MAP(KB_US | KB_DVORAK | KB_SWAPCTRLCAPS,	KB_US | KB_DVORAK,
		gsckbd_keydesc_swapctrlcaps),
	KBD_MAP(KB_US | KB_IOPENER | KB_SWAPCTRLCAPS,	KB_US | KB_IOPENER,
		gsckbd_keydesc_swapctrlcaps),
	KBD_MAP(KB_ES,			KB_US,	gsckbd_keydesc_es),
	KBD_MAP(KB_BE,			KB_US,	gsckbd_keydesc_be),
	KBD_MAP(KB_RU,			KB_US,	gsckbd_keydesc_ru),
	KBD_MAP(KB_UA,			KB_US,	gsckbd_keydesc_ua),
	KBD_MAP(KB_SG,			KB_US,	gsckbd_keydesc_sg),
	KBD_MAP(KB_SG | KB_NODEAD,	KB_SG,	gsckbd_keydesc_sg_nodead),
	KBD_MAP(KB_SF,			KB_SG,	gsckbd_keydesc_sf),
	KBD_MAP(KB_SF | KB_NODEAD,	KB_SF,	gsckbd_keydesc_sg_nodead),
	KBD_MAP(KB_PT,			KB_US,	gsckbd_keydesc_pt),
	KBD_MAP(KB_LT,			KB_US,	gsckbd_keydesc_lt),
	KBD_MAP(KB_LA,			KB_US,	gsckbd_keydesc_la),
	KBD_MAP(KB_BR,			KB_US,	gsckbd_keydesc_br),
	KBD_MAP(KB_TR,			KB_US,	gsckbd_keydesc_tr),
	KBD_MAP(KB_TR | KB_NODEAD,	KB_TR,	gsckbd_keydesc_tr_nodead),
	KBD_MAP(KB_PL,			KB_US,	gsckbd_keydesc_pl),
	KBD_MAP(KB_HU,			KB_US,	gsckbd_keydesc_hu),
	KBD_MAP(KB_SI,			KB_US,	gsckbd_keydesc_si),
	KBD_MAP(KB_CF,			KB_US, 	gsckbd_keydesc_cf),
	KBD_MAP(KB_CF | KB_NODEAD,	KB_CF,	gsckbd_keydesc_cf_nodead),
	KBD_MAP(KB_LV,			KB_US,	gsckbd_keydesc_lv),
	KBD_MAP(KB_NL,			KB_US, 	gsckbd_keydesc_nl),
	KBD_MAP(KB_NL | KB_NODEAD,	KB_NL,	gsckbd_keydesc_nl_nodead),
#endif	/* WSKBD_NO_INTL_LAYOUTS */
	KBD_MAP(KB_US | KB_MACHDEP,	KB_US,	gsckbd_keydesc_precisionbook),
	{0, 0, 0, 0}
};

#undef KBD_MAP
#undef KC
@


1.22
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gsckbdmap.c,v 1.21 2008/03/21 17:12:42 miod Exp $	*/
@


1.21
log
@regen
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a34 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.20
log
@Add option WSKBD_NO_INTL_LAYOUTS to prevent inclusion of international
keyboard layouts, instead of having SMALL_KERNEL imply this on alpha.
No functional change.

ok deraadt@@
@
text
@d10 1
a10 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.34 2006/12/05 21:27:07 otto Exp  */
@


1.19
log
@regen
@
text
@d212 1
a212 1
#if !defined(SMALL_KERNEL) || !defined(__alpha__)
d985 1
a985 1
#endif	/* SMALL_KERNEL */
d992 1
a992 1
#if !defined(SMALL_KERNEL) || !defined(__alpha__)
d1037 1
a1037 1
#endif	/* SMALL_KERNEL */
@


1.18
log
@regen
@
text
@d10 1
a10 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.33 2006/07/20 16:45:05 mickey Exp  */
d945 40
d1035 2
@


1.17
log
@regen
@
text
@d10 1
a10 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.32 2006/07/20 10:44:40 mickey Exp  */
d930 13
a942 13
    KC(14),	KS_Mode_switch,	KS_Multi_key,	KS_Mode_switch,	KS_Multi_key,
    KC(26),	KS_z,		KS_Z,		KS_L7_zcaron,KS_L7_Zcaron,
    KC(27),	KS_s,		KS_S,		KS_L7_scaron,KS_L7_Scaron,
    KC(28),	KS_a,		KS_A,		KS_L7_amacron,KS_L7_Amacron,
    KC(33),	KS_c,		KS_C,		KS_L7_ccaron,KS_L7_Ccaron,
    KC(36),	KS_e,		KS_E,		KS_L7_emacron,KS_L7_Emacron,
    KC(49),	KS_n,		KS_N,		KS_L7_ncedilla,KS_L7_Ncedilla,
    KC(52),	KS_g,		KS_G,		KS_L7_gcedilla,KS_L7_Gcedilla,
    KC(60),	KS_u,		KS_U,		KS_L7_umacron,KS_L7_Umacron,
    KC(66),	KS_k,		KS_K,		KS_L7_kcedilla,KS_L7_Kcedilla,
    KC(67),	KS_i,		KS_I,		KS_L7_imacron,KS_L7_Imacron,
    KC(76),	KS_l,		KS_L,		KS_L7_lcedilla,KS_L7_Lcedilla,
    KC(145),	KS_Multi_key,
@


1.16
log
@Regen (although this does not change anything for these keyboards).
@
text
@d10 1
a10 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.31 2006/05/29 20:23:13 miod Exp  */
d928 17
d994 1
@


1.15
log
@Regen
@
text
@d10 1
a10 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.30 2005/05/09 05:08:57 miod Exp  */
d65 3
@


1.14
log
@Regen
@
text
@d7 1
a7 1
 *	OpenBSD: makemap.awk,v 1.5 2005/05/09 05:07:25 miod Exp 
d73 1
a73 1
    KC(7),	KS_Cmd_Screen11,	KS_f12,
d84 1
a84 1
    KC(22),	KS_1,	KS_exclam,
d89 1
a89 1
    KC(30),	KS_2,	KS_at,
d94 2
a95 2
    KC(37),	KS_4,	KS_dollar,
    KC(38),	KS_3,	KS_numbersign,
d101 1
a101 1
    KC(46),	KS_5,	KS_percent,
d107 1
a107 1
    KC(54),	KS_6,	KS_asciicircum,
d111 2
a112 2
    KC(61),	KS_7,	KS_ampersand,
    KC(62),	KS_8,	KS_asterisk,
d117 2
a118 2
    KC(69),	KS_0,	KS_parenright,
    KC(70),	KS_9,	KS_parenleft,
d131 1
a131 1
    KC(91),	KS_bracketright,	KS_braceright,
d133 1
a133 1
    KC(102),	KS_Cmd_ResetEmul,	KS_Delete,
d138 1
a138 1
    KC(113),	KS_Cmd_KbdReset,	KS_KP_Delete,
d143 1
a143 1
    KC(118),	KS_Cmd_Debugger,	KS_Escape,
d145 1
a145 1
    KC(120),	KS_Cmd_Screen10,	KS_f11,
d152 1
a152 1
    KC(127),	KS_Pause,	/*	Break	*/
d165 1
a165 1
    KC(250),	KS_Cmd_ScrollFwd,	KS_Next,
d167 1
a167 1
    KC(253),	KS_Cmd_ScrollBack,	KS_Prior,
d214 1
a214 1
    KC(21),	KS_q,	KS_Q,	KS_at,
d216 2
a217 2
    KC(30),	KS_2,	KS_quotedbl,	KS_twosuperior,
    KC(38),	KS_3,	KS_section,	KS_threesuperior,
d219 4
a222 4
    KC(54),	KS_6,	KS_ampersand,
    KC(58),	KS_m,	KS_M,	KS_mu,
    KC(61),	KS_7,	KS_slash,	KS_braceleft,
    KC(62),	KS_8,	KS_parenleft,	KS_bracketleft,
d224 2
a225 2
    KC(69),	KS_0,	KS_equal,	KS_braceright,
    KC(70),	KS_9,	KS_parenright,	KS_bracketright,
d235 1
a235 1
    KC(97),	KS_less,	KS_greater,	KS_bar,	KS_brokenbar,
d249 6
a254 6
    KC(30),	KS_2,	KS_quotedbl,	KS_at,
    KC(37),	KS_4,	KS_currency,	KS_dollar,
    KC(38),	KS_3,	KS_numbersign,	KS_sterling,
    KC(54),	KS_6,	KS_ampersand,
    KC(61),	KS_7,	KS_slash,	KS_braceleft,
    KC(62),	KS_8,	KS_parenleft,	KS_bracketleft,
d256 2
a257 2
    KC(69),	KS_0,	KS_equal,	KS_braceright,
    KC(70),	KS_9,	KS_parenright,	KS_bracketright,
d265 1
a265 1
    KC(91),	KS_dead_diaeresis,	KS_dead_circumflex,	KS_dead_tilde,
d283 1
a283 1
    KC(91),	KS_dead_diaeresis,	KS_dead_circumflex,	KS_dead_tilde,
d296 1
a296 1
    KC(14),	KS_bar,	KS_paragraph,
d300 1
a300 1
    KC(91),	KS_dead_diaeresis,	KS_dead_circumflex,	KS_dead_tilde,
d318 5
a322 5
    KC(30),	KS_eacute,	KS_2,	KS_asciitilde,
    KC(37),	KS_apostrophe,	KS_4,	KS_braceleft,
    KC(38),	KS_quotedbl,	KS_3,	KS_numbersign,
    KC(46),	KS_parenleft,	KS_5,	KS_bracketleft,
    KC(54),	KS_minus,	KS_6,	KS_bar,
d324 2
a325 2
    KC(61),	KS_egrave,	KS_7,	KS_grave,
    KC(62),	KS_underscore,	KS_8,	KS_backslash,
d327 2
a328 2
    KC(69),	KS_agrave,	KS_0,	KS_at,
    KC(70),	KS_ccedilla,	KS_9,	KS_asciicircum,
d334 1
a334 1
    KC(84),	KS_dead_circumflex,	KS_dead_diaeresis,
d345 6
a350 6
    KC(30),	KS_2,	KS_quotedbl,	KS_twosuperior,
    KC(38),	KS_3,	KS_sterling,	KS_threesuperior,
    KC(46),	KS_5,	KS_percent,
    KC(54),	KS_6,	KS_ampersand,
    KC(61),	KS_7,	KS_slash,
    KC(62),	KS_8,	KS_parenleft,
d352 2
a353 2
    KC(69),	KS_0,	KS_equal,
    KC(70),	KS_9,	KS_parenright,
d370 10
a379 10
    KC(22),	KS_1,	KS_exclam,	KS_plusminus,	KS_exclamdown,
    KC(30),	KS_2,	KS_quotedbl,	KS_twosuperior,	KS_cent,
    KC(37),	KS_4,	KS_dollar,	KS_acute,	KS_currency,
    KC(38),	KS_3,	KS_sterling,	KS_threesuperior,
    KC(46),	KS_5,	KS_percent,	KS_mu,	KS_yen,
    KC(54),	KS_6,	KS_asciicircum,	KS_paragraph,
    KC(61),	KS_7,	KS_ampersand,	KS_periodcentered,	KS_brokenbar,
    KC(62),	KS_8,	KS_asterisk,	KS_cedilla,	KS_ordfeminine,
    KC(69),	KS_0,	KS_parenright,	KS_masculine,	KS_copyright,
    KC(70),	KS_9,	KS_parenleft,	KS_onesuperior,	KS_diaeresis,
d381 1
a381 1
    KC(82),	KS_apostrophe,	KS_at,	KS_section,	KS_Agrave,
d384 1
a384 1
    KC(97),	KS_backslash,	KS_bar,	KS_Udiaeresis,
d394 5
a398 5
    KC(14),	KS_Zenkaku_Hankaku,	/*	replace	grave/tilde	*/
    KC(30),	KS_2,	KS_quotedbl,
    KC(54),	KS_6,	KS_ampersand,
    KC(61),	KS_7,	KS_apostrophe,
    KC(62),	KS_8,	KS_parenleft,
d400 1
a400 1
    KC(70),	KS_9,	KS_parenright,
d404 1
a404 1
    KC(84),	KS_at,	KS_grave,
d407 1
a407 1
    KC(93),	KS_bracketright,	KS_braceright,
d413 7
a419 7
    KC(22),	KS_1,	KS_exclam,	KS_bar,
    KC(30),	KS_2,	KS_quotedbl,	KS_at,
    KC(37),	KS_4,	KS_dollar,	KS_asciitilde,
    KC(38),	KS_3,	KS_periodcentered,	KS_numbersign,
    KC(54),	KS_6,	KS_ampersand,
    KC(61),	KS_7,	KS_slash,
    KC(62),	KS_8,	KS_parenleft,
d421 2
a422 2
    KC(69),	KS_0,	KS_equal,
    KC(70),	KS_9,	KS_parenright,
d427 2
a428 2
    KC(82),	KS_dead_acute,	KS_dead_diaeresis,	KS_braceleft,
    KC(84),	KS_dead_grave,	KS_dead_circumflex,	KS_bracketleft,
d440 1
a440 1
    KC(22),	KS_exclam,	KS_1,	KS_at,
d442 1
a442 1
    KC(30),	KS_minus,	KS_2,	KS_underscore,
d444 3
a446 3
    KC(36),	KS_e,	KS_E,	KS_currency,
    KC(37),	KS_semicolon,	KS_4,	KS_dollar,
    KC(38),	KS_slash,	KS_3,	KS_numbersign,
d449 4
a452 4
    KC(46),	KS_colon,	KS_5,	KS_paragraph,
    KC(54),	KS_comma,	KS_6,	KS_asciicircum,
    KC(61),	KS_period,	KS_7,	KS_ampersand,
    KC(62),	KS_equal,	KS_8,	KS_asterisk,
d454 3
a456 3
    KC(69),	KS_bracketright,	KS_0,	KS_parenright,
    KC(70),	KS_bracketleft,	KS_9,	KS_parenleft,
    KC(73),	KS_f,	KS_F,	KS_L7_leftdblquot,
d462 3
a464 3
    KC(85),	KS_x,	KS_X,	KS_percent,
    KC(91),	KS_w,	KS_W,	KS_braceright,
    KC(93),	KS_q,	KS_Q,	KS_bar,
d472 1
a472 1
    KC(22),	KS_ampersand,	KS_1,	KS_bar,
d476 1
a476 1
    KC(30),	KS_eacute,	KS_2,	KS_at,
d478 1
a478 1
    KC(38),	KS_quotedbl,	KS_3,	KS_numbersign,
d480 1
a480 1
    KC(54),	KS_section,	KS_6,	KS_asciicircum,
d485 2
a486 2
    KC(69),	KS_agrave,	KS_0,	KS_braceright,
    KC(70),	KS_ccedilla,	KS_9,	KS_braceleft,
d492 1
a492 1
    KC(84),	KS_dead_circumflex,	KS_dead_diaeresis,	KS_bracketleft,
d495 1
a495 1
    KC(93),	KS_mu,	KS_sterling,	KS_grave,
d534 1
a534 1
    KC(85),	KS_bracketright,	KS_braceright,
d549 1
a549 1
    KC(5),	KS_Cmd_Debugger,	KS_Escape,
d562 23
a584 23
    KC(21),	KS_q,	KS_Q,	KS_Cyrillic_ishort,	KS_Cyrillic_ISHORT,
    KC(26),	KS_z,	KS_Z,	KS_Cyrillic_ya,	KS_Cyrillic_YA,
    KC(27),	KS_s,	KS_S,	KS_Cyrillic_yeru,	KS_Cyrillic_YERU,
    KC(28),	KS_a,	KS_A,	KS_Cyrillic_ef,	KS_Cyrillic_EF,
    KC(29),	KS_w,	KS_W,	KS_Cyrillic_tse,	KS_Cyrillic_TSE,
    KC(33),	KS_c,	KS_C,	KS_Cyrillic_es,	KS_Cyrillic_ES,
    KC(34),	KS_x,	KS_X,	KS_Cyrillic_che,	KS_Cyrillic_CHE,
    KC(35),	KS_d,	KS_D,	KS_Cyrillic_ve,	KS_Cyrillic_VE,
    KC(36),	KS_e,	KS_E,	KS_Cyrillic_u,	KS_Cyrillic_U,
    KC(42),	KS_v,	KS_V,	KS_Cyrillic_em,	KS_Cyrillic_EM,
    KC(43),	KS_f,	KS_F,	KS_Cyrillic_a,	KS_Cyrillic_A,
    KC(44),	KS_t,	KS_T,	KS_Cyrillic_ie,	KS_Cyrillic_IE,
    KC(45),	KS_r,	KS_R,	KS_Cyrillic_ka,	KS_Cyrillic_KA,
    KC(49),	KS_n,	KS_N,	KS_Cyrillic_te,	KS_Cyrillic_TE,
    KC(50),	KS_b,	KS_B,	KS_Cyrillic_i,	KS_Cyrillic_I,
    KC(51),	KS_h,	KS_H,	KS_Cyrillic_er,	KS_Cyrillic_ER,
    KC(52),	KS_g,	KS_G,	KS_Cyrillic_pe,	KS_Cyrillic_PE,
    KC(53),	KS_y,	KS_Y,	KS_Cyrillic_en,	KS_Cyrillic_EN,
    KC(54),	KS_6,	KS_asciicircum,	KS_6,	KS_comma,
    KC(58),	KS_m,	KS_M,	KS_Cyrillic_ssighn,	KS_Cyrillic_SSIGHN,
    KC(59),	KS_j,	KS_J,	KS_Cyrillic_o,	KS_Cyrillic_O,
    KC(60),	KS_u,	KS_U,	KS_Cyrillic_ge,	KS_Cyrillic_GE,
    KC(61),	KS_7,	KS_ampersand,	KS_7,	KS_period,
d586 3
a588 3
    KC(66),	KS_k,	KS_K,	KS_Cyrillic_el,	KS_Cyrillic_EL,
    KC(67),	KS_i,	KS_I,	KS_Cyrillic_sha,	KS_Cyrillic_SHA,
    KC(68),	KS_o,	KS_O,	KS_Cyrillic_scha,	KS_Cyrillic_SCHA,
d591 3
a593 3
    KC(75),	KS_l,	KS_L,	KS_Cyrillic_de,	KS_Cyrillic_DE,
    KC(76),	KS_semicolon,	KS_colon,	KS_Cyrillic_zhe,	KS_Cyrillic_ZHE,
    KC(77),	KS_p,	KS_P,	KS_Cyrillic_ze,	KS_Cyrillic_ZE,
d596 1
a596 1
    KC(91),	KS_bracketright,	KS_braceright,	KS_Cyrillic_hsighn,	KS_Cyrillic_HSIGHN,
d602 24
a625 24
    KC(14),	KS_grave,	KS_asciitilde,	KS_Cyrillic_gheukr,	KS_Cyrillic_GHEUKR,
    KC(21),	KS_q,	KS_Q,	KS_Cyrillic_ishort,	KS_Cyrillic_ISHORT,
    KC(26),	KS_z,	KS_Z,	KS_Cyrillic_ya,	KS_Cyrillic_YA,
    KC(27),	KS_s,	KS_S,	KS_Cyrillic_yeru,	KS_Cyrillic_YERU,
    KC(28),	KS_a,	KS_A,	KS_Cyrillic_ef,	KS_Cyrillic_EF,
    KC(29),	KS_w,	KS_W,	KS_Cyrillic_tse,	KS_Cyrillic_TSE,
    KC(33),	KS_c,	KS_C,	KS_Cyrillic_es,	KS_Cyrillic_ES,
    KC(34),	KS_x,	KS_X,	KS_Cyrillic_che,	KS_Cyrillic_CHE,
    KC(35),	KS_d,	KS_D,	KS_Cyrillic_ve,	KS_Cyrillic_VE,
    KC(36),	KS_e,	KS_E,	KS_Cyrillic_u,	KS_Cyrillic_U,
    KC(42),	KS_v,	KS_V,	KS_Cyrillic_em,	KS_Cyrillic_EM,
    KC(43),	KS_f,	KS_F,	KS_Cyrillic_a,	KS_Cyrillic_A,
    KC(44),	KS_t,	KS_T,	KS_Cyrillic_ie,	KS_Cyrillic_IE,
    KC(45),	KS_r,	KS_R,	KS_Cyrillic_ka,	KS_Cyrillic_KA,
    KC(49),	KS_n,	KS_N,	KS_Cyrillic_te,	KS_Cyrillic_TE,
    KC(50),	KS_b,	KS_B,	KS_Cyrillic_i,	KS_Cyrillic_I,
    KC(51),	KS_h,	KS_H,	KS_Cyrillic_er,	KS_Cyrillic_ER,
    KC(52),	KS_g,	KS_G,	KS_Cyrillic_pe,	KS_Cyrillic_PE,
    KC(53),	KS_y,	KS_Y,	KS_Cyrillic_en,	KS_Cyrillic_EN,
    KC(54),	KS_6,	KS_asciicircum,	KS_6,	KS_comma,
    KC(58),	KS_m,	KS_M,	KS_Cyrillic_ssighn,	KS_Cyrillic_SSIGHN,
    KC(59),	KS_j,	KS_J,	KS_Cyrillic_o,	KS_Cyrillic_O,
    KC(60),	KS_u,	KS_U,	KS_Cyrillic_ge,	KS_Cyrillic_GE,
    KC(61),	KS_7,	KS_ampersand,	KS_7,	KS_period,
d627 3
a629 3
    KC(66),	KS_k,	KS_K,	KS_Cyrillic_el,	KS_Cyrillic_EL,
    KC(67),	KS_i,	KS_I,	KS_Cyrillic_sha,	KS_Cyrillic_SHA,
    KC(68),	KS_o,	KS_O,	KS_Cyrillic_scha,	KS_Cyrillic_SCHA,
d632 4
a635 4
    KC(75),	KS_l,	KS_L,	KS_Cyrillic_de,	KS_Cyrillic_DE,
    KC(76),	KS_semicolon,	KS_colon,	KS_Cyrillic_zhe,	KS_Cyrillic_ZHE,
    KC(77),	KS_p,	KS_P,	KS_Cyrillic_ze,	KS_Cyrillic_ZE,
    KC(78),	KS_minus,	KS_underscore,	KS_Cyrillic_iukr,	KS_Cyrillic_IUKR,
d638 3
a640 3
    KC(85),	KS_equal,	KS_plus,	KS_Cyrillic_yeukr,	KS_Cyrillic_YEUKR,
    KC(91),	KS_bracketright,	KS_braceright,	KS_Cyrillic_hsighn,	KS_Cyrillic_HSIGHN,
    KC(93),	KS_backslash,	KS_bar,	KS_Cyrillic_yi,	KS_Cyrillic_YI,
d647 1
a647 1
    KC(22),	KS_1,	KS_plus,	KS_bar,
d649 4
a652 4
    KC(30),	KS_2,	KS_quotedbl,	KS_at,
    KC(36),	KS_e,	KS_E,	KS_currency,
    KC(37),	KS_4,	KS_ccedilla,
    KC(38),	KS_3,	KS_asterisk,	KS_numbersign,
d654 3
a656 3
    KC(54),	KS_6,	KS_ampersand,	KS_notsign,
    KC(61),	KS_7,	KS_slash,	KS_brokenbar,
    KC(62),	KS_8,	KS_parenleft,	KS_cent,
d658 2
a659 2
    KC(69),	KS_0,	KS_equal,
    KC(70),	KS_9,	KS_parenright,
d666 2
a667 2
    KC(85),	KS_dead_circumflex,KS_dead_grave,	KS_dead_tilde,
    KC(91),	KS_dead_diaeresis,	KS_exclam,	KS_bracketright,
d690 5
a694 5
    KC(30),	KS_2,	KS_quotedbl,	KS_at,
    KC(38),	KS_3,	KS_numbersign,	KS_sterling,
    KC(54),	KS_6,	KS_ampersand,
    KC(61),	KS_7,	KS_slash,	KS_braceleft,
    KC(62),	KS_8,	KS_parenleft,	KS_bracketleft,
d696 2
a697 2
    KC(69),	KS_0,	KS_equal,	KS_braceright,
    KC(70),	KS_9,	KS_parenright,	KS_bracketright,
d713 8
a720 8
    KC(14),	KS_bar,	KS_degree,	KS_notsign,
    KC(21),	KS_q,	KS_Q,	KS_at,
    KC(22),	KS_1,	KS_exclam,
    KC(30),	KS_2,	KS_quotedbl,
    KC(38),	KS_3,	KS_numbersign,
    KC(54),	KS_6,	KS_ampersand,
    KC(61),	KS_7,	KS_slash,
    KC(62),	KS_8,	KS_parenleft,
d722 2
a723 2
    KC(69),	KS_0,	KS_equal,
    KC(70),	KS_9,	KS_parenright,
d730 1
a730 1
    KC(85),	KS_questiondown,	KS_exclamdown,
d741 6
a746 6
    KC(22),	KS_1,	KS_exclam,	KS_onesuperior,
    KC(30),	KS_2,	KS_at,	KS_twosuperior,
    KC(37),	KS_4,	KS_dollar,	KS_sterling,
    KC(38),	KS_3,	KS_numbersign,	KS_threesuperior,
    KC(46),	KS_5,	KS_percent,	KS_cent,
    KC(54),	KS_6,	KS_dead_diaeresis,	KS_notsign,
d753 1
a753 1
    KC(93),	KS_bracketright,	KS_braceright,	KS_masculine,
d761 8
a768 8
    KC(21),	KS_q,	KS_Q,	KS_at,
    KC(30),	KS_2,	KS_apostrophe,	KS_sterling,
    KC(37),	KS_4,	KS_plus,	KS_dollar,
    KC(38),	KS_3,	KS_asciicircum,	KS_numbersign,
    KC(46),	KS_5,	KS_percent,	KS_onehalf,
    KC(54),	KS_6,	KS_ampersand,
    KC(61),	KS_7,	KS_slash,	KS_braceleft,
    KC(62),	KS_8,	KS_parenleft,	KS_bracketleft,
d771 2
a772 2
    KC(69),	KS_0,	KS_equal,	KS_braceright,
    KC(70),	KS_9,	KS_parenright,	KS_bracketright,
d777 1
a777 1
    KC(82),	KS_i,	KS_L5_Idotabove,
d795 9
a803 9
    KC(26),	KS_z,	KS_Z,	KS_L2_zdotabove,KS_L2_Zdotabove,
    KC(27),	KS_s,	KS_S,	KS_L2_sacute,	KS_L2_Sacute,
    KC(28),	KS_a,	KS_A,	KS_L2_aogonek,	KS_L2_Aogonek,
    KC(33),	KS_c,	KS_C,	KS_L2_cacute,	KS_L2_Cacute,
    KC(34),	KS_x,	KS_X,	KS_L2_zacute,	KS_L2_Zacute,
    KC(36),	KS_e,	KS_E,	KS_L2_eogonek,	KS_L2_Eogonek,
    KC(49),	KS_n,	KS_N,	KS_L2_nacute,	KS_L2_Nacute,
    KC(68),	KS_o,	KS_O,	KS_oacute,	KS_Oacute,
    KC(75),	KS_l,	KS_L,	KS_L2_lstroke,	KS_L2_Lstroke,
d809 21
a829 21
    KC(14),	KS_0,	KS_section,
    KC(21),	KS_q,	KS_Q,	KS_backslash,
    KC(22),	KS_1,	KS_apostrophe,	KS_asciitilde,
    KC(26),	KS_y,	KS_Y,	KS_greater,
    KC(29),	KS_w,	KS_W,KS_bar,
    KC(30),	KS_2,	KS_quotedbl,
    KC(33),	KS_c,	KS_C,	KS_ampersand,
    KC(34),	KS_x,	KS_X,	KS_numbersign,
    KC(37),	KS_4,	KS_exclam,
    KC(38),	KS_3,	KS_plus,	KS_asciicircum,
    KC(42),	KS_v,	KS_V,	KS_at,
    KC(43),	KS_f,	KS_F,	KS_bracketleft,
    KC(46),	KS_5,	KS_percent,
    KC(49),	KS_n,	KS_N,	KS_braceright,
    KC(50),	KS_b,	KS_B,	KS_braceleft,
    KC(52),	KS_g,	KS_G,	KS_bracketright,
    KC(53),	KS_z,	KS_Z,
    KC(54),	KS_6,	KS_slash,
    KC(59),	KS_j,	KS_J,	KS_iacute,
    KC(61),	KS_7,	KS_equal,KS_grave,
    KC(62),	KS_8,	KS_parenleft,
d831 1
a831 1
    KC(67),	KS_i,	KS_I,	KS_iacute,
d833 1
a833 1
    KC(70),	KS_9,	KS_parenright,	KS_acute,
d839 1
a839 1
    KC(84),	KS_odoubleacute,	KS_Odoubleacute,	KS_division,
d842 1
a842 1
    KC(93),	KS_udoubleacute,	KS_Udoubleacute,	KS_currency,
d851 18
a868 18
    KC(21),	KS_q,	KS_Q,	KS_backslash,
    KC(22),	KS_1,	KS_exclam,	KS_asciitilde,
    KC(26),	KS_y,	KS_Y,
    KC(29),	KS_w,	KS_W,	KS_bar,
    KC(30),	KS_2,	KS_quotedbl,	KS_L2_caron,
    KC(37),	KS_4,	KS_dollar,	KS_L2_breve,
    KC(38),	KS_3,	KS_numbersign,	KS_asciicircum,
    KC(42),	KS_v,	KS_V,	KS_at,
    KC(43),	KS_f,	KS_F,	KS_bracketleft,
    KC(46),	KS_5,	KS_percent,	KS_degree,
    KC(49),	KS_n,	KS_N,	KS_braceright,
    KC(50),	KS_b,	KS_B,	KS_braceleft,
    KC(52),	KS_g,	KS_G,	KS_bracketright,
    KC(53),	KS_z,	KS_Z,
    KC(54),	KS_6,	KS_ampersand,	KS_L2_ogonek,
    KC(58),	KS_m,	KS_M,	KS_section,
    KC(61),	KS_7,	KS_slash,	KS_grave,
    KC(62),	KS_8,	KS_parenleft,	KS_L2_dotabove,
d870 3
a872 3
    KC(66),	KS_k,	KS_K,	KS_L2_lstroke,
    KC(69),	KS_0,	KS_equal,	KS_L2_dblacute,
    KC(70),	KS_9,	KS_parenright,	KS_acute,
d875 1
a875 1
    KC(75),	KS_l,	KS_L,	KS_L2_Lstroke,
d889 10
a898 10
    KC(14),	KS_numbersign,	KS_bar,	KS_backslash,
    KC(22),	KS_1,	KS_exclam,	KS_plusminus,
    KC(30),	KS_2,	KS_quotedbl,	KS_at,
    KC(37),	KS_4,	KS_dollar,	KS_cent,
    KC(38),	KS_3,	KS_slash,	KS_sterling,
    KC(46),	KS_5,	KS_percent,	KS_diaeresis,
    KC(54),	KS_6,	KS_question,	KS_macron,
    KC(58),	KS_m,	KS_M,	KS_mu,
    KC(61),	KS_7,	KS_ampersand,	KS_brokenbar,
    KC(62),	KS_8,	KS_asterisk,	KS_twosuperior,
d900 3
a902 3
    KC(68),	KS_o,	KS_O,	KS_section,
    KC(69),	KS_0,	KS_parenright,	KS_onequarter,
    KC(70),	KS_9,	KS_parenleft,	KS_threesuperior,
d906 1
a906 1
    KC(77),	KS_p,	KS_P,	KS_paragraph,
d909 1
a909 1
    KC(84),	KS_dead_circumflex,KS_dead_circumflex,	KS_bracketleft,
d911 1
a911 1
    KC(91),	KS_dead_cedilla,KS_dead_diaeresis,	KS_bracketright,
d913 1
a913 1
    KC(97),	KS_guillemotleft,KS_guillemotright,	KS_degree,
d921 1
a921 1
    KC(84),	KS_asciicircum,KS_asciicircum,	KS_bracketleft,
@


1.13
log
@regen
@
text
@d4 1
a4 1
 * THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
d6 2
d10 1
a10 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.29 2005/05/06 17:51:41 mickey Exp  */
d13 7
d65 19
a83 1
    KC(118),	KS_Cmd_Debugger,	KS_Escape,
d85 4
d90 5
d96 5
a100 1
    KC(37),	KS_4,	KS_dollar,
d102 5
d108 3
d113 2
a114 13
    KC(70),	KS_9,	KS_parenleft,
    KC(69),	KS_0,	KS_parenright,
    KC(78),	KS_minus,	KS_underscore,
    KC(85),	KS_equal,	KS_plus,
    KC(102),	KS_Cmd_ResetEmul,	KS_Delete,
    KC(13),	KS_Tab,
    KC(21),	KS_q,
    KC(29),	KS_w,
    KC(36),	KS_e,
    KC(45),	KS_r,
    KC(44),	KS_t,
    KC(53),	KS_y,
    KC(60),	KS_u,
d117 6
d124 2
d127 4
a131 15
    KC(90),	KS_Return,
    KC(20),	KS_Cmd1,	KS_Control_L,
    KC(28),	KS_a,
    KC(27),	KS_s,
    KC(35),	KS_d,
    KC(43),	KS_f,
    KC(52),	KS_g,
    KC(51),	KS_h,
    KC(59),	KS_j,
    KC(66),	KS_k,
    KC(75),	KS_l,
    KC(76),	KS_semicolon,	KS_colon,
    KC(82),	KS_apostrophe,	KS_quotedbl,
    KC(14),	KS_grave,	KS_asciitilde,
    KC(18),	KS_Shift_L,
d133 3
a135 27
    KC(26),	KS_z,
    KC(34),	KS_x,
    KC(33),	KS_c,
    KC(42),	KS_v,
    KC(50),	KS_b,
    KC(49),	KS_n,
    KC(58),	KS_m,
    KC(65),	KS_comma,	KS_less,
    KC(73),	KS_period,	KS_greater,
    KC(74),	KS_slash,	KS_question,
    KC(89),	KS_Shift_R,
    KC(124),	KS_KP_Multiply,
    KC(17),	KS_Cmd2,	KS_Alt_L,
    KC(41),	KS_space,
    KC(88),	KS_Caps_Lock,
    KC(5),	KS_Cmd_Screen0,	KS_f1,
    KC(6),	KS_Cmd_Screen1,	KS_f2,
    KC(4),	KS_Cmd_Screen2,	KS_f3,
    KC(12),	KS_Cmd_Screen3,	KS_f4,
    KC(3),	KS_Cmd_Screen4,	KS_f5,
    KC(11),	KS_Cmd_Screen5,	KS_f6,
    KC(131),	KS_Cmd_Screen6,	KS_f7,
    KC(10),	KS_Cmd_Screen7,	KS_f8,
    KC(1),	KS_Cmd_Screen8,	KS_f9,
    KC(9),	KS_Cmd_Screen9,	KS_f10,
    KC(119),	KS_Num_Lock,
    KC(126),	KS_Hold_Screen,
d137 3
a139 4
    KC(117),	KS_KP_Up,	KS_KP_8,
    KC(125),	KS_KP_Prior,	KS_KP_9,
    KC(123),	KS_KP_Subtract,
    KC(107),	KS_KP_Left,	KS_KP_4,
d142 4
a146 2
    KC(105),	KS_KP_End,	KS_KP_1,
    KC(114),	KS_KP_Down,	KS_KP_2,
d148 4
a151 4
    KC(112),	KS_KP_Insert,	KS_KP_0,
    KC(113),	KS_KP_Delete,	KS_KP_Decimal,
    KC(120),	KS_Cmd_Screen10,	KS_f11,
    KC(7),	KS_Cmd_Screen11,	KS_f12,
d153 2
a154 1
    KC(218),	KS_KP_Enter,
a155 1
    KC(252),	KS_Print_Screen,
d157 3
a159 4
    KC(145),	KS_Cmd2,	KS_Alt_R,	KS_Multi_key,
#if 0
    KC(254),	KS_Cmd_ResetClose,	/*	CTL-Break	*/
#endif
d161 3
d165 2
a167 10
    KC(235),	KS_Left,
    KC(244),	KS_Right,
    KC(233),	KS_End,
    KC(242),	KS_Down,
    KC(250),	KS_Cmd_ScrollFwd,	KS_Next,
    KC(240),	KS_Insert,
    KC(113),	KS_Cmd_KbdReset,	KS_KP_Delete,
/* initially KC(219),	KS_Meta_L,	*/
/* initially KC(220),	KS_Meta_R,	*/
/* initially KC(221),	KS_Menu,	*/
d213 3
d218 1
d220 1
d223 2
d226 3
a228 1
    KC(69),	KS_0,	KS_equal,	KS_braceright,
d230 2
a232 3
    KC(21),	KS_q,	KS_Q,	KS_at,
    KC(53),	KS_z,
    KC(84),	KS_udiaeresis,
a233 3
    KC(76),	KS_odiaeresis,
    KC(82),	KS_adiaeresis,
    KC(14),	KS_dead_circumflex,KS_dead_abovering,
a234 5
    KC(26),	KS_y,
    KC(58),	KS_m,	KS_M,	KS_mu,
    KC(65),	KS_comma,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
d241 1
a243 1
    KC(14),	KS_asciicircum,	KS_degree,
d248 1
d250 1
a251 1
    KC(37),	KS_4,	KS_currency,	KS_dollar,
d255 2
d258 3
a260 1
    KC(69),	KS_0,	KS_equal,	KS_braceright,
d262 2
a264 1
    KC(84),	KS_aring,
a265 3
    KC(76),	KS_ae,
    KC(82),	KS_oslash,
    KC(14),	KS_onehalf,	KS_paragraph,
a266 3
    KC(65),	KS_comma,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
d279 2
d282 1
a283 3
    KC(76),	KS_odiaeresis,
    KC(82),	KS_adiaeresis,
    KC(14),	KS_section,	KS_onehalf,
d296 3
a300 3
    KC(76),	KS_oslash,
    KC(82),	KS_ae,
    KC(14),	KS_bar,	KS_paragraph,
d312 2
d315 3
d319 1
a320 1
    KC(37),	KS_apostrophe,	KS_4,	KS_braceleft,
d323 1
d326 2
d329 3
a331 1
    KC(69),	KS_agrave,	KS_0,	KS_at,
d333 2
a335 3
    KC(21),	KS_a,
    KC(29),	KS_z,
    KC(84),	KS_dead_circumflex,	KS_dead_diaeresis,
a336 4
    KC(28),	KS_q,
    KC(76),	KS_m,
    KC(82),	KS_ugrave,	KS_percent,
    KC(14),	KS_twosuperior,
a337 5
    KC(26),	KS_w,
    KC(58),	KS_comma,	KS_question,
    KC(65),	KS_semicolon,	KS_period,
    KC(73),	KS_colon,	KS_slash,
    KC(74),	KS_exclam,	KS_section,
d344 1
d351 2
d354 3
a356 1
    KC(69),	KS_0,	KS_equal,
d358 2
a360 1
    KC(84),	KS_egrave,	KS_eacute,	KS_braceleft,	KS_bracketleft,
d362 1
a362 7
    KC(76),	KS_ograve,	KS_Ccedilla,	KS_at,
    KC(82),	KS_agrave,	KS_degree,	KS_numbersign,
    KC(14),	KS_backslash,	KS_bar,
    KC(93),	KS_ugrave,	KS_section,
    KC(65),	KS_comma,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
d369 1
d372 1
a373 1
    KC(37),	KS_4,	KS_dollar,	KS_acute,	KS_currency,
d378 1
a379 1
    KC(69),	KS_0,	KS_parenright,	KS_masculine,	KS_copyright,
d381 1
a382 2
    KC(82),	KS_apostrophe,	KS_at,	KS_section,	KS_Agrave,
    KC(14),	KS_grave,	KS_grave,	KS_agrave,	KS_agrave,
d389 6
d399 1
d401 1
a401 1
    KC(69),	KS_0,
d403 2
a405 1
    KC(84),	KS_at,	KS_grave,
a406 3
    KC(76),	KS_semicolon,	KS_plus,
    KC(82),	KS_colon,	KS_asterisk,
    KC(14),	KS_Zenkaku_Hankaku,	/*	replace	grave/tilde	*/
a407 5
/* initially KC(112),	KS_Hiragana_Katakana,	*/
/* initially KC(115),	KS_backslash,	KS_underscore,	*/
/* initially KC(121),	KS_Henkan,	*/
/* initially KC(123),	KS_Muhenkan,	*/
/* initially KC(125),	KS_backslash,	KS_bar,	*/
d412 1
d415 1
a416 1
    KC(37),	KS_4,	KS_dollar,	KS_asciitilde,
d420 2
d423 3
a425 1
    KC(69),	KS_0,	KS_equal,
d427 2
a429 1
    KC(84),	KS_dead_grave,	KS_dead_circumflex,	KS_bracketleft,
a430 3
    KC(76),	KS_ntilde,
    KC(82),	KS_dead_acute,	KS_dead_diaeresis,	KS_braceleft,
    KC(14),	KS_degree,	KS_ordfeminine,	KS_backslash,
a431 3
    KC(65),	KS_comma,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
d438 2
d441 1
d443 3
d447 2
a448 1
    KC(37),	KS_semicolon,	KS_4,	KS_dollar,
d453 2
d456 3
a458 1
    KC(69),	KS_bracketright,	KS_0,	KS_parenright,
d460 2
a462 4
    KC(21),	KS_L7_aogonek,	KS_L7_Aogonek,
    KC(29),	KS_L7_zcaron,	KS_L7_Zcaron,
    KC(36),	KS_e,	KS_E,	KS_currency,
    KC(84),	KS_L7_iogonek,	KS_L7_Iogonek,	KS_braceleft,
a463 4
    KC(43),	KS_L7_scaron,	KS_L7_Scaron,
    KC(76),	KS_L7_uogonek,	KS_L7_Uogonek,
    KC(82),	KS_L7_edot,	KS_L7_Edot,	KS_quotedbl,
    KC(14),	KS_grave,	KS_asciitilde,
a464 5
    KC(34),	KS_L7_umacron,	KS_L7_Umacron,
    KC(65),	KS_L7_ccaron,	KS_L7_Ccaron,	KS_L7_dbllow9quot,
    KC(73),	KS_f,	KS_F,	KS_L7_leftdblquot,
    KC(74),	KS_L7_eogonek,	KS_L7_Eogonek,	KS_backslash,
    KC(41),	KS_space,	KS_space,	KS_nobreakspace,
d470 2
d473 3
d477 1
a478 1
    KC(37),	KS_apostrophe,	KS_4,
d481 1
d484 2
d487 3
a489 1
    KC(69),	KS_agrave,	KS_0,	KS_braceright,
d491 2
a493 3
    KC(21),	KS_a,
    KC(29),	KS_z,
    KC(84),	KS_dead_circumflex,	KS_dead_diaeresis,	KS_bracketleft,
a494 4
    KC(28),	KS_q,
    KC(76),	KS_m,
    KC(82),	KS_ugrave,	KS_percent,	KS_acute,
    KC(14),	KS_twosuperior,	KS_threesuperior,
a495 5
    KC(26),	KS_w,
    KC(58),	KS_comma,	KS_question,
    KC(65),	KS_semicolon,	KS_period,
    KC(73),	KS_colon,	KS_slash,
    KC(74),	KS_equal,	KS_plus,	KS_asciitilde,
a502 2
    KC(78),	KS_bracketleft,	KS_braceleft,
    KC(85),	KS_bracketright,	KS_braceright,
d504 2
d507 3
d511 3
d515 4
a518 1
    KC(44),	KS_y,
d520 1
d522 2
d526 4
d531 2
d534 1
a535 19
    KC(27),	KS_o,
    KC(35),	KS_e,
    KC(43),	KS_u,
    KC(52),	KS_i,
    KC(51),	KS_d,
    KC(59),	KS_h,
    KC(66),	KS_t,
    KC(75),	KS_n,
    KC(76),	KS_s,
    KC(82),	KS_minus,	KS_underscore,
    KC(26),	KS_semicolon,	KS_colon,
    KC(34),	KS_q,
    KC(33),	KS_j,
    KC(42),	KS_k,
    KC(50),	KS_x,
    KC(49),	KS_b,
    KC(65),	KS_w,
    KC(73),	KS_v,
    KC(74),	KS_z,
d546 3
d551 4
a554 1
    KC(4),	KS_Cmd_Screen1,	KS_f2,
d556 1
a556 2
    KC(3),	KS_Cmd_Screen3,	KS_f4,
    KC(11),	KS_Cmd_Screen4,	KS_f5,
a557 5
    KC(10),	KS_Cmd_Screen6,	KS_f7,
    KC(1),	KS_Cmd_Screen7,	KS_f8,
    KC(9),	KS_Cmd_Screen8,	KS_f9,
    KC(120),	KS_Cmd_Screen9,	KS_f10,
    KC(7),	KS_f11,
a561 2
    KC(54),	KS_6,	KS_asciicircum,	KS_6,	KS_comma,
    KC(61),	KS_7,	KS_ampersand,	KS_7,	KS_period,
d563 3
d567 3
d571 3
d575 4
a578 1
    KC(44),	KS_t,	KS_T,	KS_Cyrillic_ie,	KS_Cyrillic_IE,
d580 3
d584 3
d589 4
d594 1
a596 21
    KC(28),	KS_a,	KS_A,	KS_Cyrillic_ef,	KS_Cyrillic_EF,
    KC(27),	KS_s,	KS_S,	KS_Cyrillic_yeru,	KS_Cyrillic_YERU,
    KC(35),	KS_d,	KS_D,	KS_Cyrillic_ve,	KS_Cyrillic_VE,
    KC(43),	KS_f,	KS_F,	KS_Cyrillic_a,	KS_Cyrillic_A,
    KC(52),	KS_g,	KS_G,	KS_Cyrillic_pe,	KS_Cyrillic_PE,
    KC(51),	KS_h,	KS_H,	KS_Cyrillic_er,	KS_Cyrillic_ER,
    KC(59),	KS_j,	KS_J,	KS_Cyrillic_o,	KS_Cyrillic_O,
    KC(66),	KS_k,	KS_K,	KS_Cyrillic_el,	KS_Cyrillic_EL,
    KC(75),	KS_l,	KS_L,	KS_Cyrillic_de,	KS_Cyrillic_DE,
    KC(76),	KS_semicolon,	KS_colon,	KS_Cyrillic_zhe,	KS_Cyrillic_ZHE,
    KC(82),	KS_apostrophe,	KS_quotedbl,	KS_Cyrillic_e,	KS_Cyrillic_E,
    KC(26),	KS_z,	KS_Z,	KS_Cyrillic_ya,	KS_Cyrillic_YA,
    KC(34),	KS_x,	KS_X,	KS_Cyrillic_che,	KS_Cyrillic_CHE,
    KC(33),	KS_c,	KS_C,	KS_Cyrillic_es,	KS_Cyrillic_ES,
    KC(42),	KS_v,	KS_V,	KS_Cyrillic_em,	KS_Cyrillic_EM,
    KC(50),	KS_b,	KS_B,	KS_Cyrillic_i,	KS_Cyrillic_I,
    KC(49),	KS_n,	KS_N,	KS_Cyrillic_te,	KS_Cyrillic_TE,
    KC(58),	KS_m,	KS_M,	KS_Cyrillic_ssighn,	KS_Cyrillic_SSIGHN,
    KC(65),	KS_comma,	KS_less,	KS_Cyrillic_be,	KS_Cyrillic_BE,
    KC(73),	KS_period,	KS_greater,	KS_Cyrillic_yu,	KS_Cyrillic_YU,
    KC(74),	KS_slash,	KS_question,	KS_Cyrillic_yo,	KS_Cyrillic_YO,
d602 1
a602 4
    KC(54),	KS_6,	KS_asciicircum,	KS_6,	KS_comma,
    KC(61),	KS_7,	KS_ampersand,	KS_7,	KS_period,
    KC(78),	KS_minus,	KS_underscore,	KS_Cyrillic_iukr,	KS_Cyrillic_IUKR,
    KC(85),	KS_equal,	KS_plus,	KS_Cyrillic_yeukr,	KS_Cyrillic_YEUKR,
d604 3
d608 3
d612 3
d616 4
a619 1
    KC(44),	KS_t,	KS_T,	KS_Cyrillic_ie,	KS_Cyrillic_IE,
d621 3
d625 3
d630 4
d635 2
d638 1
a639 12
    KC(28),	KS_a,	KS_A,	KS_Cyrillic_ef,	KS_Cyrillic_EF,
    KC(27),	KS_s,	KS_S,	KS_Cyrillic_yeru,	KS_Cyrillic_YERU,
    KC(35),	KS_d,	KS_D,	KS_Cyrillic_ve,	KS_Cyrillic_VE,
    KC(43),	KS_f,	KS_F,	KS_Cyrillic_a,	KS_Cyrillic_A,
    KC(52),	KS_g,	KS_G,	KS_Cyrillic_pe,	KS_Cyrillic_PE,
    KC(51),	KS_h,	KS_H,	KS_Cyrillic_er,	KS_Cyrillic_ER,
    KC(59),	KS_j,	KS_J,	KS_Cyrillic_o,	KS_Cyrillic_O,
    KC(66),	KS_k,	KS_K,	KS_Cyrillic_el,	KS_Cyrillic_EL,
    KC(75),	KS_l,	KS_L,	KS_Cyrillic_de,	KS_Cyrillic_DE,
    KC(76),	KS_semicolon,	KS_colon,	KS_Cyrillic_zhe,	KS_Cyrillic_ZHE,
    KC(82),	KS_apostrophe,	KS_quotedbl,	KS_Cyrillic_e,	KS_Cyrillic_E,
    KC(14),	KS_grave,	KS_asciitilde,	KS_Cyrillic_gheukr,	KS_Cyrillic_GHEUKR,
a640 10
    KC(26),	KS_z,	KS_Z,	KS_Cyrillic_ya,	KS_Cyrillic_YA,
    KC(34),	KS_x,	KS_X,	KS_Cyrillic_che,	KS_Cyrillic_CHE,
    KC(33),	KS_c,	KS_C,	KS_Cyrillic_es,	KS_Cyrillic_ES,
    KC(42),	KS_v,	KS_V,	KS_Cyrillic_em,	KS_Cyrillic_EM,
    KC(50),	KS_b,	KS_B,	KS_Cyrillic_i,	KS_Cyrillic_I,
    KC(49),	KS_n,	KS_N,	KS_Cyrillic_te,	KS_Cyrillic_TE,
    KC(58),	KS_m,	KS_M,	KS_Cyrillic_ssighn,	KS_Cyrillic_SSIGHN,
    KC(65),	KS_comma,	KS_less,	KS_Cyrillic_be,	KS_Cyrillic_BE,
    KC(73),	KS_period,	KS_greater,	KS_Cyrillic_yu,	KS_Cyrillic_YU,
    KC(74),	KS_slash,	KS_question,	KS_Cyrillic_yo,	KS_Cyrillic_YO,
d646 1
d648 1
d650 2
d653 1
a653 1
    KC(37),	KS_4,	KS_ccedilla,
d657 2
d660 3
a662 1
    KC(69),	KS_0,	KS_equal,
d664 2
a666 3
    KC(36),	KS_e,	KS_E,	KS_currency,
    KC(53),	KS_z,
    KC(84),	KS_udiaeresis,	KS_egrave,	KS_bracketleft,
a667 3
    KC(76),	KS_odiaeresis,	KS_eacute,
    KC(82),	KS_adiaeresis,	KS_agrave,	KS_braceleft,
    KC(14),	KS_section,	KS_degree,	KS_dead_abovering,
a668 4
    KC(26),	KS_y,
    KC(65),	KS_comma,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
d677 1
a677 1
    KC(91),	KS_diaeresis,	KS_exclam,	KS_bracketright
d682 2
a684 2
    KC(76),	KS_eacute,	KS_odiaeresis,
    KC(82),	KS_agrave,	KS_adiaeresis,	KS_braceleft
d689 1
d695 2
d698 3
a700 1
    KC(69),	KS_0,	KS_equal,	KS_braceright,
d702 2
a704 1
    KC(84),	KS_plus,	KS_asterisk,
a705 3
    KC(76),	KS_ccedilla,	KS_Ccedilla,
    KC(82),	KS_masculine,	KS_ordfeminine,
    KC(14),	KS_backslash,	KS_bar,
a706 3
    KC(65),	KS_comma,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
d713 2
d721 2
d724 3
a726 1
    KC(69),	KS_0,	KS_equal,
d728 2
a730 2
    KC(21),	KS_q,	KS_Q,	KS_at,
    KC(84),	KS_dead_acute,	KS_dead_diaeresis,
a731 3
    KC(76),	KS_ntilde,
    KC(82),	KS_braceleft,	KS_bracketleft,	KS_dead_circumflex,
    KC(14),	KS_bar,	KS_degree,	KS_notsign,
a732 3
    KC(65),	KS_comma,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
d739 2
d743 1
a744 1
    KC(37),	KS_4,	KS_dollar,	KS_sterling,
d747 4
a751 1
    KC(84),	KS_dead_acute,	KS_dead_grave,
a752 3
    KC(76),	KS_ccedilla,	KS_Ccedilla,
    KC(82),	KS_dead_tilde,	KS_dead_circumflex,
    KC(14),	KS_apostrophe,	KS_quotedbl,
d754 1
a754 1
    KC(74),	KS_semicolon,	KS_colon,
a755 2
    KC(97),	KS_backslash,	KS_bar,
/* initially KC(115),	KS_slash,	KS_question,	KS_degree,	*/
d760 2
d763 1
a764 1
    KC(37),	KS_4,	KS_plus,	KS_dollar,
d769 3
d773 3
a775 1
    KC(69),	KS_0,	KS_equal,	KS_braceright,
d777 2
a779 3
    KC(21),	KS_q,	KS_Q,	KS_at,
    KC(67),	KS_L5_idotless,	KS_I,
    KC(84),	KS_L5_gbreve,	KS_L5_Gbreve,	KS_dead_diaeresis,
a780 3
    KC(76),	KS_L5_scedilla,	KS_L5_Scedilla,	KS_dead_acute,
    KC(82),	KS_i,	KS_L5_Idotabove,
    KC(14),	KS_quotedbl,	KS_eacute,
a781 3
    KC(65),	KS_odiaeresis,	KS_Odiaeresis,
    KC(73),	KS_ccedilla,	KS_Ccedilla,
    KC(74),	KS_period,	KS_colon,
d788 1
a789 1
    KC(76),	KS_L5_scedilla,	KS_L5_Scedilla,	KS_apostrophe,
d795 5
d801 1
a802 2
    KC(28),	KS_a,	KS_A,	KS_L2_aogonek,	KS_L2_Aogonek,
    KC(27),	KS_s,	KS_S,	KS_L2_sacute,	KS_L2_Sacute,
a803 4
    KC(26),	KS_z,	KS_Z,	KS_L2_zdotabove,KS_L2_Zdotabove,
    KC(34),	KS_x,	KS_X,	KS_L2_zacute,	KS_L2_Zacute,
    KC(33),	KS_c,	KS_C,	KS_L2_cacute,	KS_L2_Cacute,
    KC(49),	KS_n,	KS_N,	KS_L2_nacute,	KS_L2_Nacute,
d809 2
d812 2
d815 3
d819 2
a820 1
    KC(37),	KS_4,	KS_exclam,
d822 4
d827 1
d830 3
d834 3
a836 1
    KC(69),	KS_odiaeresis,	KS_Odiaeresis,
d838 2
a840 5
    KC(21),	KS_q,	KS_Q,	KS_backslash,
    KC(29),	KS_w,	KS_W,KS_bar,
    KC(53),	KS_z,	KS_Z,
    KC(67),	KS_i,	KS_I,	KS_iacute,
    KC(84),	KS_odoubleacute,	KS_Odoubleacute,	KS_division,
a841 6
    KC(43),	KS_f,	KS_F,	KS_bracketleft,
    KC(52),	KS_g,	KS_G,	KS_bracketright,
    KC(59),	KS_j,	KS_J,	KS_iacute,
    KC(76),	KS_eacute,	KS_Eacute,	KS_dollar,
    KC(82),	KS_aacute,	KS_Aacute,	KS_ssharp,
    KC(14),	KS_0,	KS_section,
a842 9
    KC(26),	KS_y,	KS_Y,	KS_greater,
    KC(34),	KS_x,	KS_X,	KS_numbersign,
    KC(33),	KS_c,	KS_C,	KS_ampersand,
    KC(42),	KS_v,	KS_V,	KS_at,
    KC(50),	KS_b,	KS_B,	KS_braceleft,
    KC(49),	KS_n,	KS_N,	KS_braceright,
    KC(65),	KS_comma,	KS_question,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,	KS_asterisk,
d850 2
d853 2
d856 1
d858 2
a859 1
    KC(37),	KS_4,	KS_dollar,	KS_L2_breve,
d861 4
d866 1
d869 3
d873 4
a876 1
    KC(69),	KS_0,	KS_equal,	KS_L2_dblacute,
d878 2
a880 4
    KC(21),	KS_q,	KS_Q,	KS_backslash,
    KC(29),	KS_w,	KS_W,	KS_bar,
    KC(53),	KS_z,	KS_Z,
    KC(84),	KS_L2_scaron,	KS_L2_Scaron,	KS_division,
a881 7
    KC(43),	KS_f,	KS_F,	KS_bracketleft,
    KC(52),	KS_g,	KS_G,	KS_bracketright,
    KC(66),	KS_k,	KS_K,	KS_L2_lstroke,
    KC(75),	KS_l,	KS_L,	KS_L2_Lstroke,
    KC(76),	KS_L2_ccaron,	KS_L2_Ccaron,
    KC(82),	KS_L2_cacute,	KS_L2_Cacute,	KS_ssharp,
    KC(14),	KS_cedilla,	KS_diaeresis,
a882 8
    KC(26),	KS_y,	KS_Y,
    KC(42),	KS_v,	KS_V,	KS_at,
    KC(50),	KS_b,	KS_B,	KS_braceleft,
    KC(49),	KS_n,	KS_N,	KS_braceright,
    KC(58),	KS_m,	KS_M,	KS_section,
    KC(65),	KS_comma,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
d889 1
d892 1
a893 1
    KC(37),	KS_4,	KS_dollar,	KS_cent,
d896 1
d899 3
d903 4
a906 1
    KC(69),	KS_0,	KS_parenright,	KS_onequarter,
d908 2
a910 3
    KC(68),	KS_o,	KS_O,	KS_section,
    KC(77),	KS_p,	KS_P,	KS_paragraph,
    KC(84),	KS_dead_circumflex,KS_dead_circumflex,	KS_bracketleft,
a911 3
    KC(76),	KS_semicolon,	KS_colon,	KS_asciitilde,
    KC(82),	KS_dead_grave,	KS_dead_grave,	KS_braceleft,
    KC(14),	KS_numbersign,	KS_bar,	KS_backslash,
a912 4
    KC(58),	KS_m,	KS_M,	KS_mu,
    KC(65),	KS_comma,	KS_apostrophe,	KS_hyphen,
    KC(73),	KS_period,	KS_period,
    KC(74),	KS_eacute,	KS_Eacute,	KS_dead_acute,
d919 2
a922 2
    KC(82),	KS_grave,	KS_grave,	KS_braceleft,
    KC(74),	KS_eacute,	KS_Eacute,	KS_acute,
@


1.12
log
@regen
@
text
@d166 1
a166 1
static const keysym_t pckbd_keydesc_precisionbook[] = {
d970 1
a970 1
	KBD_MAP(KB_US | KB_MACHDEP,	KB_US,	pckbd_keydesc_precisionbook),
@


1.11
log
@regen
@
text
@d8 1
a8 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.28 2005/05/06 17:40:32 mickey Exp  */
d898 2
a899 2
    KC(84),	KS_dead_circumflex,	KS_dead_circumflex,	KS_bracketleft,
    KC(91),	KS_dead_cedilla,	KS_dead_diaeresis,	KS_bracketright,
d908 2
a909 2
    KC(97),	KS_guillemotleft,	KS_guillemotright,	KS_degree,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
d912 1
a912 1
const struct keysym_t gsckbd_keydesc_cf_nodead[] = {
d914 1
a914 1
    KC(84),	KS_circumflex,	KS_circumflex,	KS_bracketleft,
@


1.10
log
@Regen
@
text
@d8 1
a8 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.27 2005/05/04 18:00:30 miod Exp  */
d882 38
d967 2
@


1.9
log
@Regen
@
text
@a494 37
static const keysym_t gsckbd_keydesc_us_declk[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(118),	KS_grave,	KS_asciitilde,	/*	replace	escape	*/
    KC(14),	KS_less,	KS_greater,	/*	replace	grave/tilde	*/
/* initially KC(143),	KS_Multi_key,	left	compose	*/
    KC(148),	KS_Multi_key,	/*	right	compose,	replace	right	control	*/
    KC(120),	KS_Cmd_Debugger,	KS_Escape,	/*	replace	F11	*/
/* initially KC(189),	KS_f13,	*/
/* initially KC(190),	KS_f14,	*/
/* initially KC(191),	KS_Help,	*/
/* initially KC(192),	KS_Execute,	*/
/* initially KC(193),	KS_f17,	*/
    KC(126),	KS_f19,	/*	replace	scroll	lock	*/
    KC(127),	KS_f20,	/*	replace	break	*/
    KC(119),	KS_KP_F1,	/*	replace	num	lock	*/
    KC(202),	KS_KP_F2,	/*	replace	divide	*/
    KC(124),	KS_KP_F3,	/*	replace	multiply	*/
    KC(123),	KS_KP_F4,	/*	replace	subtract	*/

    /* keypad is numbers only - no num lock */
    KC(108),	KS_KP_7,
    KC(117),	KS_KP_8,
    KC(125),	KS_KP_9,
    KC(107),	KS_KP_4,
    KC(115),	KS_KP_5,
    KC(116),	KS_KP_6,
    KC(105),	KS_KP_1,
    KC(114),	KS_KP_2,
    KC(122),	KS_KP_3,
    KC(112),	KS_KP_0,
    KC(113),	KS_KP_Decimal,

/* initially KC(206),	KS_KP_Subtract,	*/
    KC(121),	KS_KP_Separator,	/*	replace	add	*/
    KC(236),	KS_Find,	/*	replace	home	*/
    KC(233),	KS_Select,	/*	replace	end	*/
};
a901 1
	KBD_MAP(KB_US | KB_DECLK,	KB_US,	gsckbd_keydesc_us_declk),
@


1.8
log
@regen
@
text
@d8 1
a8 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.26 2005/02/22 19:41:44 mickey Exp  */
a340 1
    KC(37),	KS_4,	KS_dollar,
a722 1
    KC(37),	KS_4,	KS_dollar,
a747 1
    KC(37),	KS_4,	KS_dollar,
@


1.7
log
@Regen
@
text
@d8 1
a8 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.25 2004/07/26 14:05:59 miod Exp  */
d278 1
a278 1
    KC(14),	KS_paragraph,	KS_onehalf,
@


1.6
log
@regen
@
text
@d8 1
a8 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.24 2004/07/09 19:07:45 miod Exp  */
d471 1
a471 1
    KC(54),	KS_currency,	KS_6,	KS_asciicircum,
d484 2
a485 2
    KC(82),	KS_ugrave,	KS_percent,	KS_section,
    KC(14),	KS_twosuperior,
@


1.5
log
@Regen.
@
text
@d8 1
a8 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.23 2004/03/16 07:50:26 miod Exp  */
d204 2
d922 2
d929 1
d970 1
@


1.4
log
@regen
@
text
@d8 1
a8 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.22 2003/09/25 23:38:23 mickey Exp  */
d880 40
d927 1
a927 1
	KBD_MAP(KB_FR,			KB_US,  gsckbd_keydesc_fr),
d940 4
a943 4
	KBD_MAP(KB_US | KB_IOPENER, KB_US,	gsckbd_keydesc_iopener),
	KBD_MAP(KB_JP | KB_SWAPCTRLCAPS, KB_JP, gsckbd_keydesc_swapctrlcaps),
	KBD_MAP(KB_FR | KB_SWAPCTRLCAPS, KB_FR, gsckbd_keydesc_swapctrlcaps),
	KBD_MAP(KB_BE | KB_SWAPCTRLCAPS, KB_BE, gsckbd_keydesc_swapctrlcaps),
d964 1
@


1.3
log
@regen
@
text
@d8 1
a8 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.21 2003/01/04 13:40:08 maja Exp  */
d840 40
d923 1
@


1.2
log
@Regen
@
text
@d163 39
a201 1
    KC(241),	KS_Delete,
d883 1
@


1.2.4.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: gsckbdmap.c,v 1.2 2003/02/16 01:43:17 miod Exp $	*/
d163 1
a163 39
    KC(241),	KS_Delete
};

static const keysym_t pckbd_keydesc_precisionbook[] = {
/*  pos      command		normal		shifted */
    KC(7),   KS_Cmd_Screen0,	KS_f1,
    KC(15),  KS_Cmd_Screen1,	KS_f2,
    KC(23),  KS_Cmd_Screen2,	KS_f3,
    KC(31),  KS_Cmd_Screen3,	KS_f4,
    KC(39),  KS_Cmd_Screen4,	KS_f5,
    KC(47),  KS_Cmd_Screen5,	KS_f6,
    KC(55),  KS_Cmd_Screen6,	KS_f7,
    KC(63),  KS_Cmd_Screen7,	KS_f8,
    KC(71),  KS_Cmd_Screen8,	KS_f9,
    KC(79),  KS_Cmd_Screen9,	KS_f10,
    KC(86),  KS_Cmd_Screen10,	KS_f11,
    KC(94),  KS_Cmd_Screen11,	KS_f12,
    KC(8),   KS_Cmd_Debugger,	KS_Escape,
    KC(87),			KS_Print_Screen,
    KC(92),			KS_backslash,	KS_bar,
    KC(96),			KS_KP_Down,	KS_KP_2,
    KC(95),			KS_Hold_Screen,
    KC(97),			KS_KP_Left,	KS_KP_4,
    KC(98),			KS_Pause, /* Break */
    KC(99),			KS_KP_Up,	KS_KP_8,
    KC(100),			KS_KP_Delete,	KS_KP_Decimal,
    KC(101),			KS_KP_End,	KS_KP_1,
    KC(103),			KS_KP_Insert,	KS_KP_0,
    KC(106),			KS_KP_Right,	KS_KP_6,
    KC(109),			KS_KP_Next,	KS_KP_3,
    KC(110),			KS_KP_Home,	KS_KP_7,
    KC(111),			KS_KP_Prior,	KS_KP_9,
    KC(20),			KS_Caps_Lock,
    KC(17),  KS_Cmd1,		KS_Control_L,
    KC(88),  KS_Cmd1,		KS_Control_R,
    KC(25),  KS_Cmd2,		KS_Alt_L,
    KC(57),  KS_Cmd2,		KS_Alt_R,	KS_Multi_key,
    KC(139),			KS_Meta_L,
    KC(140),			KS_Meta_R,
a844 1
	KBD_MAP(KB_US | KB_MACHDEP,	KB_US,	pckbd_keydesc_precisionbook),
@


1.2.4.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d8 1
a8 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.22 2003/09/25 23:38:23 mickey Exp  */
a839 40
static const keysym_t gsckbd_keydesc_hu[] = {
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(22),	KS_1,	KS_apostrophe,	KS_asciitilde,
    KC(30),	KS_2,	KS_quotedbl,
    KC(38),	KS_3,	KS_plus,	KS_asciicircum,
    KC(37),	KS_4,	KS_exclam,
    KC(46),	KS_5,	KS_percent,
    KC(54),	KS_6,	KS_slash,
    KC(61),	KS_7,	KS_equal,KS_grave,
    KC(62),	KS_8,	KS_parenleft,
    KC(70),	KS_9,	KS_parenright,	KS_acute,
    KC(69),	KS_odiaeresis,	KS_Odiaeresis,
    KC(78),	KS_udiaeresis,	KS_Udiaeresis,
    KC(85),	KS_oacute,	KS_Oacute,
    KC(21),	KS_q,	KS_Q,	KS_backslash,
    KC(29),	KS_w,	KS_W,KS_bar,
    KC(53),	KS_z,	KS_Z,
    KC(67),	KS_i,	KS_I,	KS_iacute,
    KC(84),	KS_odoubleacute,	KS_Odoubleacute,	KS_division,
    KC(91),	KS_uacute,	KS_Uacute,	KS_multiply,
    KC(43),	KS_f,	KS_F,	KS_bracketleft,
    KC(52),	KS_g,	KS_G,	KS_bracketright,
    KC(59),	KS_j,	KS_J,	KS_iacute,
    KC(76),	KS_eacute,	KS_Eacute,	KS_dollar,
    KC(82),	KS_aacute,	KS_Aacute,	KS_ssharp,
    KC(14),	KS_0,	KS_section,
    KC(93),	KS_udoubleacute,	KS_Udoubleacute,	KS_currency,
    KC(26),	KS_y,	KS_Y,	KS_greater,
    KC(34),	KS_x,	KS_X,	KS_numbersign,
    KC(33),	KS_c,	KS_C,	KS_ampersand,
    KC(42),	KS_v,	KS_V,	KS_at,
    KC(50),	KS_b,	KS_B,	KS_braceleft,
    KC(49),	KS_n,	KS_N,	KS_braceright,
    KC(65),	KS_comma,	KS_question,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,	KS_asterisk,
    KC(97),	KS_iacute,	KS_Iacute,	KS_less,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

a882 1
	KBD_MAP(KB_HU,			KB_US,	gsckbd_keydesc_hu),
@


1.2.4.3
log
@Merge with the trunk
@
text
@d8 1
a8 1
/*	OpenBSD: wskbdmap_mfii.c,v 1.23 2004/03/16 07:50:26 miod Exp  */
a879 40
static const keysym_t gsckbd_keydesc_si[]=
{
/*  pos      normal		shifted		altgr		shift-altgr */
    KC(22),	KS_1,	KS_exclam,	KS_asciitilde,
    KC(30),	KS_2,	KS_quotedbl,	KS_L2_caron,
    KC(38),	KS_3,	KS_numbersign,	KS_asciicircum,
    KC(37),	KS_4,	KS_dollar,	KS_L2_breve,
    KC(46),	KS_5,	KS_percent,	KS_degree,
    KC(54),	KS_6,	KS_ampersand,	KS_L2_ogonek,
    KC(61),	KS_7,	KS_slash,	KS_grave,
    KC(62),	KS_8,	KS_parenleft,	KS_L2_dotabove,
    KC(70),	KS_9,	KS_parenright,	KS_acute,
    KC(69),	KS_0,	KS_equal,	KS_L2_dblacute,
    KC(78),	KS_apostrophe,	KS_question,	KS_diaeresis,
    KC(85),	KS_plus,	KS_asterisk,	KS_cedilla,
    KC(21),	KS_q,	KS_Q,	KS_backslash,
    KC(29),	KS_w,	KS_W,	KS_bar,
    KC(53),	KS_z,	KS_Z,
    KC(84),	KS_L2_scaron,	KS_L2_Scaron,	KS_division,
    KC(91),	KS_L2_dstroke,	KS_L2_Dstroke,	KS_multiply,
    KC(43),	KS_f,	KS_F,	KS_bracketleft,
    KC(52),	KS_g,	KS_G,	KS_bracketright,
    KC(66),	KS_k,	KS_K,	KS_L2_lstroke,
    KC(75),	KS_l,	KS_L,	KS_L2_Lstroke,
    KC(76),	KS_L2_ccaron,	KS_L2_Ccaron,
    KC(82),	KS_L2_cacute,	KS_L2_Cacute,	KS_ssharp,
    KC(14),	KS_cedilla,	KS_diaeresis,
    KC(93),	KS_L2_zcaron,	KS_L2_Zcaron,	KS_currency,
    KC(26),	KS_y,	KS_Y,
    KC(42),	KS_v,	KS_V,	KS_at,
    KC(50),	KS_b,	KS_B,	KS_braceleft,
    KC(49),	KS_n,	KS_N,	KS_braceright,
    KC(58),	KS_m,	KS_M,	KS_section,
    KC(65),	KS_comma,	KS_semicolon,
    KC(73),	KS_period,	KS_colon,
    KC(74),	KS_minus,	KS_underscore,
    KC(97),	KS_less,	KS_greater,
    KC(145),	KS_Mode_switch,	KS_Multi_key,
};

d887 1
a887 1
	KBD_MAP(KB_FR,			KB_US,	gsckbd_keydesc_fr),
d900 4
a903 4
	KBD_MAP(KB_US | KB_IOPENER,	KB_US,	gsckbd_keydesc_iopener),
	KBD_MAP(KB_JP | KB_SWAPCTRLCAPS, KB_JP,	gsckbd_keydesc_swapctrlcaps),
	KBD_MAP(KB_FR | KB_SWAPCTRLCAPS, KB_FR,	gsckbd_keydesc_swapctrlcaps),
	KBD_MAP(KB_BE | KB_SWAPCTRLCAPS, KB_BE,	gsckbd_keydesc_swapctrlcaps),
a923 1
	KBD_MAP(KB_SI,			KB_US,	gsckbd_keydesc_si),
@


1.1
log
@Enter gsckbc, a driver for the ps/2-like input device ports found on many
hppa machines, and gsckbd, a driver for the ps/2-like keyboard.

Both are derived from pckbc and pckbd, but the differences in port wiring and
keyboard behaviour prevented the creation of a thin pckbc wrapper.

Currently, only us and uk keyboard layouts are provided.

The adventurous person can enable gsckb[cd], wsdisplay at sti and wskbd,
but this will only work correctly on machines featuring a modern-prom sti
graphics device, and a ps/2 keyboard port.
@
text
@d2 1
d4 9
a12 1
 * Copyright (c) 2003, Miodrag Vallat.
d15 3
d26 7
d34 10
a43 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
a44 1
 *
d56 473
a528 106
    KC(1),   KS_Cmd_Screen8,	KS_f9,
    KC(3),   KS_Cmd_Screen4,	KS_f5,
    KC(4),   KS_Cmd_Screen2,	KS_f3,
    KC(5),   KS_Cmd_Screen0,	KS_f1,
    KC(6),   KS_Cmd_Screen1,	KS_f2,
    KC(7),   KS_Cmd_Screen11,	KS_f12,
    KC(9),   KS_Cmd_Screen9,	KS_f10,
    KC(10),  KS_Cmd_Screen7,	KS_f8,
    KC(11),  KS_Cmd_Screen5,	KS_f6,
    KC(12),  KS_Cmd_Screen3,	KS_f4,
    KC(13),			KS_Tab,
    KC(14),			KS_grave,	KS_asciitilde,
    KC(17),  KS_Cmd2,		KS_Alt_L,
    KC(18),			KS_Shift_L,
    KC(20),  KS_Cmd1,		KS_Control_L,
    KC(21),			KS_q,
    KC(22),			KS_1,		KS_exclam,
    KC(26),			KS_z,
    KC(27),			KS_s,
    KC(28),			KS_a,
    KC(29),			KS_w,
    KC(30),			KS_2,		KS_at,
    KC(33),			KS_c,
    KC(34),			KS_x,
    KC(35),			KS_d,
    KC(36),			KS_e,
    KC(37),			KS_4,		KS_dollar,
    KC(38),			KS_3,		KS_numbersign,
    KC(41),			KS_space,
    KC(42),			KS_v,
    KC(43),			KS_f,
    KC(44),			KS_t,
    KC(45),			KS_r,
    KC(46),			KS_5,		KS_percent,
    KC(49),			KS_n,
    KC(50),			KS_b,
    KC(51),			KS_h,
    KC(52),			KS_g,
    KC(53),			KS_y,
    KC(54),			KS_6,		KS_asciicircum,
    KC(58),			KS_m,
    KC(59),			KS_j,
    KC(60),			KS_u,
    KC(61),			KS_7,		KS_ampersand,
    KC(62),			KS_8,		KS_asterisk,
    KC(65),			KS_comma,	KS_less,
    KC(66),			KS_k,
    KC(67),			KS_i,
    KC(68),			KS_o,
    KC(69),			KS_0,		KS_parenright,
    KC(70),			KS_9,		KS_parenleft,
    KC(73),			KS_period,	KS_greater,
    KC(74),			KS_slash,	KS_question,
    KC(75),			KS_l,
    KC(76),			KS_semicolon,	KS_colon,
    KC(77),			KS_p,
    KC(78),			KS_minus,	KS_underscore,
    KC(82),			KS_apostrophe,	KS_quotedbl,
    KC(84),			KS_bracketleft,	KS_braceleft,
    KC(85),			KS_equal,	KS_plus,
    KC(88),			KS_Caps_Lock,
    KC(89),			KS_Shift_R,
    KC(90),			KS_Return,
    KC(91),			KS_bracketright,KS_braceright,
    KC(93),			KS_backslash,	KS_bar,
    KC(102), KS_Cmd_ResetEmul,	KS_Delete, /* Backspace */
    KC(105),			KS_KP_End,	KS_KP_1,
    KC(107),			KS_KP_Left,	KS_KP_4,
    KC(108),			KS_KP_Home,	KS_KP_7,
    KC(112),			KS_KP_Insert,	KS_KP_0,
    KC(113), KS_Cmd_KbdReset,	KS_KP_Delete,	KS_KP_Decimal,
    KC(114),			KS_KP_Down,	KS_KP_2,
    KC(115),			KS_KP_Begin,	KS_KP_5,
    KC(116),			KS_KP_Right,	KS_KP_6,
    KC(117),			KS_KP_Up,	KS_KP_8,
    KC(118), KS_Cmd_Debugger,	KS_Escape,
    KC(119),			KS_Num_Lock,
    KC(120), KS_Cmd_Screen10,	KS_f11,
    KC(121),			KS_KP_Add,
    KC(122),			KS_KP_Next,	KS_KP_3,
    KC(123),			KS_KP_Subtract,
    KC(124),			KS_KP_Multiply,
    KC(125),			KS_KP_Prior,	KS_KP_9,
    KC(126),			KS_Hold_Screen,
    KC(127),			KS_Pause, /* Break */
    KC(131), KS_Cmd_Screen6,	KS_f7,
    KC(145), KS_Cmd2,		KS_Alt_R,	KS_Multi_key,
    KC(148), KS_Cmd1,		KS_Control_R,
    KC(202),			KS_KP_Divide,
    KC(218),			KS_KP_Enter,
    KC(233),			KS_End,
    KC(235),			KS_Left,
    KC(236),			KS_Home,
    KC(240),			KS_Insert,
    KC(241),			KS_Delete,
    KC(242),			KS_Down,
    KC(244),			KS_Right,
    KC(245),			KS_Up,
    KC(250), KS_Cmd_ScrollFwd,	KS_Next,
    /*
     * Print Screen produces E0 12 E0 7C when pressed, then E0 7C E0 12 when
     * depressed. Ignore the E0 12 code and recognize on E0 7C.
     */
    KC(252),			KS_Print_Screen,
    KC(253), KS_Cmd_ScrollBack,	KS_Prior,
    KC(254), KS_Cmd_ResetClose, /* CTL-Break */
d533 197
a729 2
    KC(20),			KS_Caps_Lock,
    KC(88),  KS_Cmd1,		KS_Control_L,
d732 68
a799 7
static const keysym_t gsckbd_keydesc_uk[] = {
    KC(14),			KS_grave,	KS_notsign,
    KC(30),			KS_2,		KS_quotedbl,
    KC(38),			KS_3,		KS_sterling,
    KC(82),			KS_apostrophe,	KS_at,
    KC(93),			KS_numbersign,	KS_asciitilde,
    KC(97),			KS_backslash,	KS_bar,
d807 6
d814 7
d822 23
d847 3
@

