head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.10
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.6
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.4
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.15.0.10
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.14
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.12
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.8
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.6
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.4
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.2
	OPENBSD_5_0:1.14.0.6
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.4
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.12
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.8
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.6
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.7.0.6
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.4
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.16
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.14
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.6.0.12
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.10
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.8
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.6
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.2
	SMP_BASE:1.6
	kame_19991208:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.16
date	2015.05.05.02.13.46;	author guenther;	state Exp;
branches;
next	1.15;
commitid	dNPv28CJI5BxtRGW;

1.15
date	2011.11.10.22.48.13;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2010.07.01.05.33.32;	author jsing;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.29.20.30.32;	author guenther;	state Exp;
branches;
next	1.12;

1.12
date	2009.07.29.18.31.11;	author kettenis;	state Exp;
branches;
next	1.11;

1.11
date	2007.07.29.20.15.56;	author kettenis;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.26.20.04.37;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2004.06.08.22.00.25;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.07.18.24.19;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2003.01.29.20.57.00;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2000.01.12.07.24.35;	author mickey;	state Exp;
branches
	1.6.2.1
	1.6.12.1;
next	1.5;

1.5
date	99.11.25.18.28.06;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	99.06.22.18.01.12;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	99.04.20.19.46.22;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	99.02.25.17.36.53;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.07.07.21.32.43;	author mickey;	state Exp;
branches;
next	;

1.6.2.1
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2004.06.05.23.10.49;	author niklas;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2004.06.10.11.40.23;	author niklas;	state Exp;
branches;
next	;

1.6.12.1
date	2003.05.19.21.49.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.16
log
@emul_native is only used for kernel threads which can't dump core, so
delete coredump_trad(), uvm_coredump(), cpu_coredump(), struct md_coredump,
and various #includes that are superfluous.

This leaves compat_linux processes without a coredump callback.  If that
ability is desired, someone should update it to use coredump_elf32() and
verify the results...

ok kettenis@@
@
text
@/*	$OpenBSD: pcb.h,v 1.15 2011/11/10 22:48:13 deraadt Exp $	*/

/*
 * Copyright (c) 1999-2004 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_PCB_H_
#define _MACHINE_PCB_H_

#include <machine/fpu.h>
#include <machine/reg.h>

struct pcb {
	struct hppa_fpstate *pcb_fpstate;	/* not in the trapframe */

	u_int32_t	pcb_ksp;		/* kernel sp for ctxsw */
	u_int32_t	pcb_onfault;		/* SW copy fault handler */
	pa_space_t	pcb_space;		/* copy pmap_space, for asm's sake */
};

#endif /* _MACHINE_PCB_H_ */
@


1.15
log
@mindless unification with hppa64; remove meaningless differences before
attacking the complicated stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.14 2010/07/01 05:33:32 jsing Exp $	*/
a41 6

struct md_coredump {
	struct reg md_reg;
	struct fpreg md_fpreg;
}; 

@


1.14
log
@Create a struct to store FP state and include a pointer to the CPU that
currently holds the FPU context for this process. This will be soon used
to implement FPU shootdowns on multiprocessor kernels.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.13 2010/06/29 20:30:32 guenther Exp $	*/
a28 1

d38 3
a40 3
	u_int		pcb_ksp;	/* kernel sp for ctxsw */
	u_int		pcb_onfault;	/* SW copy fault handler */
	pa_space_t	pcb_space;	/* copy pmap_space, for asm's sake */
@


1.13
log
@Remove COMPAT_HPUX.  No one wanted to support it and its fewmets were
blocking other cleanups
ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.12 2009/07/29 18:31:11 kettenis Exp $	*/
d33 1
d37 1
a37 1
	struct fpreg	*pcb_fpregs;	/* not in the trapframe */
@


1.12
log
@Get rid of non-equivalent aliases of the pcb by moving the fpu state out
of the pcb and using the p_addr member of 'struct proc' to calculate the
address of the kernel stack when switching to virtual mode after taking a trap.
Remove the now unecessary cache flushes; they're actually harmful since they
create non-equivalent aliases.  This seems to fix the memory corruption we
have been observing from time to time.

This diff does not rename fpu_curpcb, which is now somewhat incorrectly named.
I hope to change things back again as soon as we are able to map the pcb 1:1.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.11 2007/07/29 20:15:56 kettenis Exp $	*/
a40 5

	/* things used for hpux emulation */
	void		*pcb_sigreturn;
	u_int		pcb_srcookie;
	u_int		pcb_sclen;
@


1.11
log
@Seperate members of "struct pcb" that are accessed using physical addresses
from thos that are exclusively accessed using virtual addresses and add
padding between them to make sure they don't share a cache line.  Fixes
random crashes on at least PA-8700 and PA-7200 based machines.  Without this,
the PA-7200 based C110 wouldn't stay up long enough to do an install.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.10 2005/03/26 20:04:37 mickey Exp $	*/
d36 1
a36 13
	u_int64_t pcb_fpregs[HPPA_NFPREGS+1];	/* not in the trapframe */
	vaddr_t		pcb_uva;	/* KVA for U-area */

	/*
	 * The members above are primarily accessed by there physical
	 * address, wheras the members below are accessed exclusively
	 * by there virtual address.  Unfortunately this structure
	 * ends up being non-equivalently mapped, which will cause
	 * data corruption if those members share a cache line.  Since
	 * the maximum cache line size is 64 bytes, adding 64 bytes of
	 * padding makes sure that will never happen.
	 */
	u_char		pcb_pad[64];
@


1.10
log
@md parts for hpux_compa code; some problems w/ signals delivery still exist
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.9 2004/06/08 22:00:25 mickey Exp $	*/
d37 14
a52 2
	vaddr_t		pcb_uva;	/* KVA for U-area */
	u_int		pcb_ksp;	/* kernel sp for ctxsw */
@


1.9
log
@always create a stack frame in cpu_switch() and put a stub
for doing page idle zeroing.
store the kernele stack pointer into pcb instead of trapframe
for debuggers doing stack traces; from kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.8 2004/04/07 18:24:19 mickey Exp $	*/
d37 9
a45 4
	u_int pcb_onfault;		/* SW copy fault handler */
	pa_space_t pcb_space;		/* copy pmap_space, for asm's sake */
	vaddr_t pcb_uva;		/* KVA for U-area */
	u_int pcb_ksp;			/* kernel sp for ctxsw */
@


1.8
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.7 2003/01/29 20:57:00 mickey Exp $	*/
d40 1
@


1.7
log
@save fpregs in coredump
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.6 2000/01/12 07:24:35 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1999-2000 Michael Shalayeff
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.6
log
@kill pcb_upaddrs, one more fpreg (for fpemu)
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.5 1999/11/25 18:28:06 mickey Exp $	*/
d49 1
@


1.6.12.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a48 1
	struct fpreg md_fpreg;
@


1.6.2.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a48 1
	struct fpreg md_fpreg;
@


1.6.2.2
log
@Merge with the trunk
@
text
@d4 1
a4 1
 * Copyright (c) 1999-2004 Michael Shalayeff
d15 5
@


1.6.2.3
log
@sync with head, make i386 __HAVE_CPUINFO
@
text
@a39 1
	u_int pcb_ksp;			/* kernel sp for ctxsw */
@


1.5
log
@new pcb and frame layouts
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.4 1999/06/22 18:01:12 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1999 Michael Shalayeff
d41 1
a41 2
	u_int64_t pcb_fpregs[HPPA_NFPREGS];	/* not in the trapframe */
	paddr_t pcb_upaddrs[UPAGES];	/* cached PAs for the U-area */
@


1.4
log
@this change somehow escaped the fpregs commit
@
text
@d1 33
a33 1
/*	$OpenBSD: pcb.h,v 1.3 1999/04/20 19:46:22 mickey Exp $	*/
d41 3
a43 3
	struct trapframe pcb_tf;
	u_int64_t pcb_fpregs[HPPA_NFPREGS];	/* not included above */
	int (*pcb_onfault) __P((void));	/* SW copy fault handler */
d45 1
@


1.3
log
@add onfault handler and cache the space id into pcb; better coredump
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.2 1999/02/25 17:36:53 mickey Exp $	*/
d10 1
a10 1
	/* would be nice to align to cache line size here XXX */
@


1.2
log
@flesh pcb out
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.1 1998/07/07 21:32:43 mickey Exp $	*/
d3 4
d10 3
a14 1

d16 1
a16 1
	struct  trapframe md_tf;
d19 2
@


1.1
log
@more includes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d5 1
a5 1
	int i;
@

