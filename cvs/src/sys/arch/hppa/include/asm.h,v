head	1.18;
access;
symbols
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.14
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.10
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.12
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.4
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.8
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.6
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.16.0.8
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.6
	OPENBSD_5_0:1.16.0.4
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.15.0.24
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.20
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.22
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.18
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.16
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.14
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.12
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.10
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.8
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.6
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.4
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.2
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.13
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.8
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.13
	UBC:1.12.0.6
	UBC_BASE:1.12
	OPENBSD_3_0:1.12.0.4
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.10.0.4
	OPENBSD_2_7_BASE:1.10
	SMP:1.10.0.2
	SMP_BASE:1.10
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3;
locks; strict;
comment	@ * @;


1.18
date	2013.03.28.17.41.04;	author martynas;	state Exp;
branches;
next	1.17;

1.17
date	2012.09.02.20.30.13;	author kettenis;	state Exp;
branches;
next	1.16;

1.16
date	2010.10.01.05.02.19;	author guenther;	state Exp;
branches;
next	1.15;

1.15
date	2005.01.23.16.28.29;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2003.07.15.18.15.41;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.20.03.27.09;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2001.03.29.02.15.57;	author mickey;	state Exp;
branches
	1.12.6.1;
next	1.11;

1.11
date	2000.06.15.17.00.37;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2000.01.12.00.14.19;	author mickey;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	99.09.18.20.41.16;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	99.08.14.03.21.26;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	99.04.20.19.25.02;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	99.01.16.07.58.32;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	98.12.23.17.49.55;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	98.11.23.03.28.22;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	98.08.29.01.11.05;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.07.07.21.32.37;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.27.01.16.44;	author mickey;	state Exp;
branches;
next	;

1.10.2.1
date	2001.04.18.16.06.17;	author niklas;	state Exp;
branches;
next	1.10.2.2;

1.10.2.2
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	1.10.2.3;

1.10.2.3
date	2004.02.19.10.48.40;	author niklas;	state Exp;
branches;
next	;

1.12.6.1
date	2002.06.11.03.35.37;	author art;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Add STRONG_ALIAS macros to be used from assembly code in libc and
libm.  While at it, remove now unused workarounds for lint.
Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@/*	$OpenBSD: asm.h,v 1.17 2012/09/02 20:30:13 kettenis Exp $	*/

/* 
 * Copyright (c) 1990,1991,1994 The University of Utah and
 * the Computer Systems Laboratory (CSL).  All rights reserved.
 *
 * Permission to use, copy, modify and distribute this software is hereby
 * granted provided that (1) source code retains these copyright, permission,
 * and disclaimer notices, and (2) redistributions including binaries
 * reproduce the notices in supporting documentation, and (3) all advertising
 * materials mentioning features or use of this software display the following
 * acknowledgement: ``This product includes software developed by the
 * Computer Systems Laboratory at the University of Utah.''
 *
 * THE UNIVERSITY OF UTAH AND CSL ALLOW FREE USE OF THIS SOFTWARE IN ITS "AS
 * IS" CONDITION.  THE UNIVERSITY OF UTAH AND CSL DISCLAIM ANY LIABILITY OF
 * ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * CSL requests users of this software to return to csl-dist@@cs.utah.edu any
 * improvements that they make and grant CSL redistribution rights.
 *
 *	Utah $Hdr: asm.h 1.8 94/12/14$
 */

#ifndef _MACHINE_ASM_H_
#define _MACHINE_ASM_H_

/*
 *	hppa assembler definitions
 */

/*
 * Hardware General Registers
 */
r0	.reg	%r0
r1	.reg	%r1
r2	.reg	%r2
r3	.reg	%r3
r4	.reg	%r4
r5	.reg	%r5
r6	.reg	%r6
r7	.reg	%r7
r8	.reg	%r8
r9	.reg	%r9
r10	.reg	%r10
r11	.reg	%r11
r12	.reg	%r12
r13	.reg	%r13
r14	.reg	%r14
r15	.reg	%r15
r16	.reg	%r16
r17	.reg	%r17
r18	.reg	%r18
r19	.reg	%r19
r20	.reg	%r20
r21	.reg	%r21
r22	.reg	%r22
r23	.reg	%r23
r24	.reg	%r24
r25	.reg	%r25
r26	.reg	%r26
r27	.reg	%r27
r28	.reg	%r28
r29	.reg	%r29
r30	.reg	%r30
r31	.reg	%r31

/*
 * Hardware Space Registers
 */
sr0	.reg	%sr0
sr1	.reg	%sr1
sr2	.reg	%sr2
sr3	.reg	%sr3
sr4	.reg	%sr4
sr5	.reg	%sr5
sr6	.reg	%sr6
sr7	.reg	%sr7

/*
 * Hardware Floating Point Registers
 */
fr0	.reg	%fr0
fr1	.reg	%fr1
fr2	.reg	%fr2
fr3	.reg	%fr3
fr4	.reg	%fr4
fr5	.reg	%fr5
fr6	.reg	%fr6
fr7	.reg	%fr7
fr8	.reg	%fr8
fr9	.reg	%fr9
fr10	.reg	%fr10
fr11	.reg	%fr11
fr12	.reg	%fr12
fr13	.reg	%fr13
fr14	.reg	%fr14
fr15	.reg	%fr15
fr16	.reg	%fr16
fr17	.reg	%fr17
fr18	.reg	%fr18
fr19	.reg	%fr19
fr20	.reg	%fr20
fr21	.reg	%fr21
fr22	.reg	%fr22
fr23	.reg	%fr23
fr24	.reg	%fr24
fr25	.reg	%fr25
fr26	.reg	%fr26
fr27	.reg	%fr27
fr28	.reg	%fr28
fr29	.reg	%fr29
fr30	.reg	%fr30
fr31	.reg	%fr31

/*
 * Hardware Control Registers
 */
cr0	.reg	%cr0
cr8	.reg	%cr8
cr9	.reg	%cr9
cr10	.reg	%cr10
cr11	.reg	%cr11
cr12	.reg	%cr12
cr13	.reg	%cr13
cr14	.reg	%cr14
cr15	.reg	%cr15
cr16	.reg	%cr16
cr17	.reg	%cr17
cr18	.reg	%cr18
cr19	.reg	%cr19
cr20	.reg	%cr20
cr21	.reg	%cr21
cr22	.reg	%cr22
cr23	.reg	%cr23
cr24	.reg	%cr24
cr25	.reg	%cr25
cr26	.reg	%cr26
cr27	.reg	%cr27
cr28	.reg	%cr28
cr29	.reg	%cr29
cr30	.reg	%cr30
cr31	.reg	%cr31

rctr	.reg	%cr0
pidr1	.reg	%cr8
pidr2	.reg	%cr9
ccr	.reg	%cr10
sar	.reg	%cr11
pidr3	.reg	%cr12
pidr4	.reg	%cr13
iva	.reg	%cr14
eiem	.reg	%cr15
itmr	.reg	%cr16
pcsq	.reg	%cr17
pcoq	.reg	%cr18
iir	.reg	%cr19
isr	.reg	%cr20
ior	.reg	%cr21
ipsw	.reg	%cr22
eirr	.reg	%cr23
tr0	.reg	%cr24
vtop	.reg	%cr25
tr1	.reg	%cr25
tr2	.reg	%cr26
tr3	.reg	%cr27
tr4	.reg	%cr28
tr5	.reg	%cr29
tr6	.reg	%cr30
tr7	.reg	%cr31

/*
 * Calling Convention
 */
rp	.reg	%r2
arg3	.reg	%r23
arg2	.reg	%r24
arg1	.reg	%r25
arg0	.reg	%r26
dp	.reg	%r27
ret0	.reg	%r28
ret1	.reg	%r29
sl	.reg	%r29
sp	.reg	%r30

/*
 * Temporary registers
 */
t1	.reg	%r22
t2	.reg	%r21
t3	.reg	%r20
t4	.reg	%r19

/*
 * Temporary space registers
 */
ts1	.reg	%sr2

/*
 * Space Registers - SW Conventions
 */
sret	.reg	%sr1	; return value
sarg	.reg	%sr1	; argument

/*
 * Floating Point Registers - SW Conventions
 */
farg0	.reg	%fr5
farg1	.reg	%fr6
farg2	.reg	%fr7
farg3	.reg	%fr8
fret	.reg	%fr4

/*
 * Temporary floating point registers
 */
tf1	.reg	%fr11
tf2	.reg	%fr10
tf3	.reg	%fr9
tf4	.reg	%fr8

#ifdef __STDC__
#define	__CONCAT(a,b)	a ## b
#else
#define	__CONCAT(a,b)	a/**/b
#endif

#ifdef PROF
#define	_PROF_PROLOGUE !\
1:						!\
	stw	rp, HPPA_FRAME_CRP(sr0,sp)	!\
	stw	arg0, HPPA_FRAME_ARG(0)(sr0,sp)	!\
	stw	arg1, HPPA_FRAME_ARG(1)(sr0,sp)	!\
	stw	arg2, HPPA_FRAME_ARG(2)(sr0,sp)	!\
	stw	arg3, HPPA_FRAME_ARG(3)(sr0,sp)	!\
	ldo	HPPA_FRAME_SIZE(sp), sp		!\
	copy	rp, arg0			!\
	bl	2f, arg1			!\
	depi	0, 31, 2, arg1			!\
2:						!\
	bl	_mcount, rp			!\
	 ldo	1b - 2b(arg1), arg1		!\
	ldo	-HPPA_FRAME_SIZE(sp), sp	!\
	ldw	HPPA_FRAME_ARG(3)(sr0,sp), arg3	!\
	ldw	HPPA_FRAME_ARG(2)(sr0,sp), arg2	!\
	ldw	HPPA_FRAME_ARG(1)(sr0,sp), arg1	!\
	ldw	HPPA_FRAME_ARG(0)(sr0,sp), arg0	!\
	ldw	HPPA_FRAME_CRP(sr0,sp) ,rp
#else
#define	_PROF_PROLOGUE
#endif

#define	LEAF_ENTRY(x) ! .text ! .align	4	!\
	.export	x, entry ! .label x ! .proc	!\
	.callinfo frame=0,no_calls,save_rp	!\
	.entry ! _PROF_PROLOGUE

#define	ENTRY(x,n) ! .text ! .align 4			!\
	.export	x, entry ! .label x ! .proc		!\
	.callinfo frame=n,calls, save_rp, save_sp	!\
	.entry ! _PROF_PROLOGUE

#define ALTENTRY(x) ! .export x, entry ! .label  x
#define EXIT(x) ! .exit ! .procend ! .size   x, .-x

#define	BSS(n,s)	! .data ! .label n ! .comm s

#define STRONG_ALIAS(alias,sym) ! .global alias ! .set alias, sym
#define WEAK_ALIAS(alias,sym) ! .weak alias ! .set alias, sym

#endif /* _MACHINE_ASM_H_ */
@


1.17
log
@Make profiling actually work on hppa.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.16 2010/10/01 05:02:19 guenther Exp $	*/
d268 1
@


1.16
log
@Provide a WEAK_ALIAS macro in <machine/asm.h> for the few platforms
that didn't already have one, and then immediately use it in libc's
SYS.h

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.15 2005/01/23 16:28:29 mickey Exp $	*/
d230 19
a248 5
	stw rp, HPPA_FRAME_CRP(sr0,sp)	!\
	ldil L%_mcount,r1		!\
	ble R%_mcount(sr0,r1)		!\
	ldo HPPA_FRAME_SIZE(sp),sp	!\
	ldw HPPA_FRAME_CRP(sr0,sp),rp
@


1.15
log
@generate .size for asm objects too (and kill *end labels)
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.14 2003/07/15 18:15:41 mickey Exp $	*/
d253 2
@


1.14
log
@hptmask goes away as a register and frees one tmp cr
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.13 2002/05/20 03:27:09 mickey Exp $	*/
d250 1
a250 1
#define EXIT(x) ! .exit ! .procend
@


1.13
log
@define BSS() macro to allocate vars in the .bss like other archs do
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.12 2001/03/29 02:15:57 mickey Exp $	*/
a161 1
hptmask	.reg	%cr24
@


1.12
log
@define leaf_entry, better entry
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.11 2000/06/15 17:00:37 mickey Exp $	*/
d252 2
@


1.12.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.12 2001/03/29 02:15:57 mickey Exp $	*/
a251 2

#define	BSS(n,s)	! .data ! .label n ! .comm s
@


1.11
log
@more dr0 definitions for pcxs/pcxt
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.10 2000/01/12 00:14:19 mickey Exp $	*/
d22 1
a22 1
 * 	Utah $Hdr: asm.h 1.8 94/12/14$
a228 25
/*
 * Standard space and subspace definitions.
 */
	.SPACE	$TEXT$,0
/*	.subspa $FIRST$,	QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=4 */
	.subspa $MILLICODE$,	QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=8
	.subspa $LIT$,		QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=16
	.subspa $CODE$,		QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=24,CODE_ONLY
/*	.subspa	$UNWIND$MILLICODE$,QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=64
	.subspa	$UNWIND$,	QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=72
	.subspa	$RECOVER$,	QUAD=0,ALIGN=4,ACCESS=0x2c,SORT=80
*/

/*
 * additional code subspaces should have ALIGN=8 for an interspace BV
 */
	.SPACE $PRIVATE$,1
/*	.subspa $GLOBAL$,	QUAD=1,ALIGN=8,ACCESS=0x1f,SORT=8 */
/*	.subspa $SHORTDATA$,	QUAD=1,ALIGN=8,ACCESS=0x1f,SORT=16 */
	.subspa $DATA$,		QUAD=1,ALIGN=8,ACCESS=0x1f,SORT=24
	.import $global$, data
/*	.subspa	$PFA_COUNTER$,	QUAD=1,ALIGN=4,ACCESS=0x1f,SORT=72 */
	.subspa $BSS$,		QUAD=1,ALIGN=8,ACCESS=0x1f,SORT=80,ZERO


d240 12
a251 18
#define	ENTRY(x)		!\
	.space	.text		!\
	.subspa $CODE$		!\
	/* XXX broken gas 2.7.1 .align	4 */	!\
	.export	x, entry	!\
	.label	x               !\
	.proc			!\
	.callinfo calls		!\
	.entry			!\
	_PROF_PROLOGUE

#define ALTENTRY(x)		!\
	.export x, entry	!\
	.label  x

#define EXIT(x)		!\
	.exit		!\
	.procend
@


1.10
log
@note about broken gas and align, some tabs vs spaces too
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.9 1999/09/18 20:41:16 mickey Exp $	*/
a171 10

/*
 * CPU-secific additional control registers
 */
#define	dtlb_reg	8
#define	dtlb_size_even	26
#define	dtlb_size_odd	27
#define	itlb_reg	9
#define	itlb_size_even	24
#define	itlb_size_odd	25
@


1.10.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.12 2001/03/29 02:15:57 mickey Exp $	*/
d22 1
a22 1
 *	Utah $Hdr: asm.h 1.8 94/12/14$
d174 10
d239 25
d275 18
a292 12
#define	LEAF_ENTRY(x) ! .text ! .align	4	!\
	.export	x, entry ! .label x ! .proc	!\
	.callinfo frame=0,no_calls,save_rp	!\
	.entry ! _PROF_PROLOGUE

#define	ENTRY(x,n) ! .text ! .align 4			!\
	.export	x, entry ! .label x ! .proc		!\
	.callinfo frame=n,calls, save_rp, save_sp	!\
	.entry ! _PROF_PROLOGUE

#define ALTENTRY(x) ! .export x, entry ! .label  x
#define EXIT(x) ! .exit ! .procend
@


1.10.2.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a251 2

#define	BSS(n,s)	! .data ! .label n ! .comm s
@


1.10.2.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d162 1
@


1.9
log
@clean unused stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.8 1999/08/14 03:21:26 mickey Exp $	*/
d259 1
a259 1
	.import $global$
d277 3
a279 2
	.subspa	$code$		!\
	.export	x,entry		!\
d287 1
a287 1
	.export x,entry         !\
d290 2
a291 2
#define EXIT(x)			!\
	.exit                   !\
@


1.8
log
@bigger stack frame size
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.7 1999/04/20 19:25:02 mickey Exp $	*/
a232 39
/*
 * Frame offsets to procedure status save and return areas
 */
#define FM_PSP  -4
#define FM_EP   -8
#define FM_CLUP	-12
#define FM_SL	-16
#define FM_CRP	-20
#define FM_ERP	-24
#define FM_ESR4	-28
#define FM_EDP	-32
#define FM_SIZE	48

/*
 * frame must be rounded to double word
 */
#define FR_ROUND 8

#define NARGS		12
#define ARG_SIZE	(NARGS*4)

/*
 * Offsets from sp/previous_sp for access to procedure arguments
 * A maximum of four args may be passed in registers.
 */
#define VA_ARG0	-FM_SIZE-4
#define VA_ARG1	-FM_SIZE-8
#define VA_ARG2	-FM_SIZE-12
#define VA_ARG3	-FM_SIZE-16

#define VA_ARG4		-FM_SIZE-20
#define VA_ARG5		-FM_SIZE-24
#define VA_ARG6		-FM_SIZE-28
#define VA_ARG7		-FM_SIZE-32
#define VA_ARG8		-FM_SIZE-36
#define VA_ARG9		-FM_SIZE-40
#define VA_ARG10	-FM_SIZE-44
#define VA_ARG11	-FM_SIZE-48

d266 5
a270 5
	stw rp, FM_CRP(sr0,sp)	!\
	ldil L%_mcount,r1	!\
	ble R%_mcount(sr0,r1)	!\
	ldo FM_SIZE(sp),sp	!\
	ldw FM_CRP(sr0,sp),rp
@


1.7
log
@proper entry/exit; no place for va_args12-13
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.6 1999/01/16 07:58:32 mickey Exp $	*/
d244 1
a244 1
#define FM_SIZE	32
@


1.6
log
@clean up subspaces somewhat
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.5 1998/12/23 17:49:55 mickey Exp $	*/
a270 2
#define VA_ARG12	-FM_SIZE-52
#define VA_ARG13	-FM_SIZE-56
d315 1
a315 1
	.space	$text$		!\
a328 2
	bv,n    r0(rp)          !\
	nop			!\
@


1.5
log
@this is to shutup binutils
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.4 1998/11/23 03:28:22 mickey Exp $	*/
a27 3
/* this is to shutup binutils */
#define	BFD_SUBSPA_BUG

d284 1
a284 2
#ifndef	BFD_SUBSPA_BUG
	.subspa $FIRST$,	QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=4
d287 2
a288 2
	.subspa $CODE$,		QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=24
	.subspa	$UNWIND$MILLICODE$,QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=64
d291 1
a291 1
#endif
d297 2
a298 3
#ifndef	BFD_SUBSPA_BUG
	.subspa $GLOBAL$,	QUAD=1,ALIGN=8,ACCESS=0x1f,SORT=8
	.subspa $SHORTDATA$,	QUAD=1,ALIGN=8,ACCESS=0x1f,SORT=16
a299 1
#endif
d301 1
a301 2
#ifndef	BFD_SUBSPA_BUG
	.subspa	$PFA_COUNTER$,	QUAD=1,ALIGN=4,ACCESS=0x1f,SORT=72
a302 1
#endif
d322 1
a322 1
	.callinfo no_calls	!\
@


1.4
log
@proper m-include protection, some minor cleanups
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.3 1998/08/29 01:11:05 mickey Exp $	*/
d27 3
@


1.3
log
@fix entry/exit macros
add profiling support
s/ptov/hptmask/
fix comments
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.2 1998/07/07 21:32:37 mickey Exp $	*/
d25 2
a26 2
#ifndef _HPPA_ASM_H_
#define _HPPA_ASM_H_
a31 6
/* 
 * Roundup() - rounds up x to next multiple of y
 */

#define roundup(x, y) ((((x) + ((y) - 1)) / (y)) * (y))

d341 1
a341 1
#endif /* _HPPA_ASM_H_ */
@


1.2
log
@more includes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d25 3
d29 1
a29 1
 *	hp800 assembler definitions
d168 1
a168 1
ptov	.reg	%cr24
d180 10
a240 1
 * (should use genassym to get these offsets)
d280 6
d317 9
d327 3
a329 6
/* XXX need profiling versions */

#else
#define ENTRY(x)		\
/**/	.space	$TEXT$		!\
	.subspa	$CODE$		!\
d334 2
a335 1
	.entry
d337 2
a338 2
#define ALTENTRY(x)             \
/**/    .export x,entry         !\
d341 3
a343 2
#define EXIT(x)                 \
/**/    bv,n    r0(rp)          !\
d347 1
a347 2
#endif

@


1.1
log
@hmm, how could i miss this one?
@
text
@d1 2
@

