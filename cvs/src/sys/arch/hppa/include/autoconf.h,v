head	1.23;
access;
symbols
	OPENBSD_6_2:1.23.0.32
	OPENBSD_6_2_BASE:1.23
	OPENBSD_6_1:1.23.0.30
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.23.0.26
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.23.0.22
	OPENBSD_5_9_BASE:1.23
	OPENBSD_5_8:1.23.0.24
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.16
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.23.0.20
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.23.0.18
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.23.0.14
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.23.0.12
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.23.0.10
	OPENBSD_5_2_BASE:1.23
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.8
	OPENBSD_5_0:1.23.0.6
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.23.0.4
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.23.0.2
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.22.0.10
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.12
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.8
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.6
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.4
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.21.0.10
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.8
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.6
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.21.0.4
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.21.0.2
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.20.0.2
	OPENBSD_3_6_BASE:1.20
	SMP_SYNC_A:1.20
	SMP_SYNC_B:1.20
	OPENBSD_3_5:1.19.0.4
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.19.0.2
	OPENBSD_3_4_BASE:1.19
	UBC_SYNC_A:1.18
	OPENBSD_3_3:1.17.0.2
	OPENBSD_3_3_BASE:1.17
	OPENBSD_3_2:1.15.0.4
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.2
	OPENBSD_3_1_BASE:1.15
	UBC_SYNC_B:1.15
	UBC:1.11.0.2
	UBC_BASE:1.11
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.10
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.8
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.6
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.4
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.23
date	2010.04.29.13.48.29;	author jsing;	state Exp;
branches;
next	1.22;

1.22
date	2007.05.27.16.36.07;	author kettenis;	state Exp;
branches;
next	1.21;

1.21
date	2004.09.15.20.11.29;	author mickey;	state Exp;
branches;
next	1.20;

1.20
date	2004.04.07.18.24.19;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	2003.08.07.19.47.33;	author mickey;	state Exp;
branches;
next	1.18;

1.18
date	2003.03.29.01.08.15;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	2002.12.18.23.52.45;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	2002.12.17.21.54.25;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.16.01.13.42;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2002.03.14.03.15.53;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.14.01.26.32;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.12.06.42.26;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2001.12.02.04.03.57;	author mickey;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2001.05.05.22.33.42;	author art;	state Exp;
branches;
next	1.9;

1.9
date	99.08.16.02.48.40;	author mickey;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	99.08.14.03.22.07;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	99.04.20.19.52.20;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	99.02.25.17.28.58;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	99.01.11.18.15.26;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	98.12.29.21.54.12;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	98.11.23.03.29.50;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.10.30.19.15.29;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.07.07.21.32.38;	author mickey;	state Exp;
branches;
next	;

1.9.4.1
date	2001.07.04.10.16.09;	author niklas;	state Exp;
branches;
next	1.9.4.2;

1.9.4.2
date	2001.12.05.00.39.10;	author niklas;	state Exp;
branches;
next	1.9.4.3;

1.9.4.3
date	2002.03.06.00.57.22;	author niklas;	state Exp;
branches;
next	1.9.4.4;

1.9.4.4
date	2002.03.28.10.27.10;	author niklas;	state Exp;
branches;
next	1.9.4.5;

1.9.4.5
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	1.9.4.6;

1.9.4.6
date	2003.05.13.19.41.04;	author ho;	state Exp;
branches;
next	1.9.4.7;

1.9.4.7
date	2004.02.19.10.48.40;	author niklas;	state Exp;
branches;
next	1.9.4.8;

1.9.4.8
date	2004.06.05.23.10.49;	author niklas;	state Exp;
branches;
next	;

1.11.2.1
date	2002.06.11.03.35.37;	author art;	state Exp;
branches;
next	1.11.2.2;

1.11.2.2
date	2003.05.19.21.49.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Currently pdc_scanbus() scans in reverse, which results in physical CPU0
attaching as cpu1 and physical CPU1 attaching as cpu0. Split the device
scan into two parts - the first pass scans forward and attaches memory
and CPUs, whilst the second pass scans in reverse attaching the
remaining devices, thus preserving current semantics.

Found the hard way whilst trying to spin up the secondary CPU on my j6750.

ok miod@@ kettenis@@
@
text
@/*	$OpenBSD: autoconf.h,v 1.21 2004/09/15 20:11:29 mickey Exp $	*/

/*
 * Copyright (c) 1998-2004 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <machine/bus.h>
#include <machine/pdc.h>

struct confargs {
	const char	*ca_name;	/* device name/description */
	bus_space_tag_t	ca_iot;		/* io tag */
	bus_dma_tag_t	ca_dmatag;	/* DMA tag */
	struct device_path ca_dp;	/* device_path as found by pdc_scan */
	hppa_hpa_t	ca_hpa;		/* module HPA */
	u_int		ca_hpasz;	/* module HPA size (if avail) */
	hppa_hpa_t	ca_hpamask;	/* mask for modules on the bus */
	int		ca_irq;		/* module IRQ */
	struct iodc_data ca_type;	/* iodc-specific type descrition */
	struct pdc_iodc_read *ca_pdc_iodc_read;
	int		ca_naddrs;	/* number of valid addr ents */
	struct {
		hppa_hpa_t addr;
		u_int	size;
	}		ca_addrs[16];	/* 16 is ought to be enough */

}; 

#define	hppacf_off	cf_loc[0]
#define	hppacf_irq	cf_loc[1]

/* this is used for hppa_knownmodules table
 * describing known to this port modules,
 * system boards, cpus, fpus and busses
 */
struct hppa_mod_info {
	int	mi_type;
	int	mi_sv;
	const char *mi_name;
};

extern void (*cold_hook)(int);
#define	HPPA_COLD_COLD	0
#define	HPPA_COLD_HOT	1   
#define	HPPA_COLD_OFF	2

struct device;

const char *hppa_mod_info(int, int);
void	pdc_scanbus(struct device *, struct confargs *, int, hppa_hpa_t hpa,
	    int);
int	mbprint(void *, const char *);
int	mbsubmatch(struct device *, void *, void *);
int	cpu_intr_findirq(void);
void	*cpu_intr_map(void *v, int pri, int irq, int (*handler)(void *),
	    void *arg, const char *name);
void	*cpu_intr_establish(int pri, int irq, int (*handler)(void *),
	    void *arg, const char *name);
int	clock_intr(void *);

void	dumpconf(void);
@


1.22
log
@Dynamically allocate irq's for pci devices on elroy(4).

ok martin@@
@
text
@d72 2
a73 1
void	pdc_scanbus(struct device *, struct confargs *, int, hppa_hpa_t hpa);
@


1.21
log
@scan cpu bus manually for some machines do not support that in prom
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.20 2004/04/07 18:24:19 mickey Exp $	*/
d75 1
@


1.20
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.19 2003/08/07 19:47:33 mickey Exp $	*/
d72 1
a72 1
void	pdc_scanbus(struct device *, struct confargs *, int);
@


1.19
log
@make all intr_establish take the same last arg for name
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.18 2003/03/29 01:08:15 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Michael Shalayeff
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d19 8
a26 7
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.18
log
@fetch the device address list for where supported; say 16 addresses is ought to be enough for every case. dim off the disk led amongst the other lights
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.17 2002/12/18 23:52:45 mickey Exp $	*/
d80 1
a80 1
	    void *arg, struct device *dv);
d82 1
a82 1
	    void *arg, struct device *dv);
@


1.17
log
@newer machines use phantom bus to attach lasi and other bus adapters.
oledr machines did not have a real device for the phantom bus port.
change the device scanning technique to both include a full device path
in the attach_args and do proper shifting in the pdc_scanbus() and
add a device for the newer machines as well as use a newer device
mapping (path to hpa) available on newer firmware versions, where
old (hversion-dependant) is not available.
tested on 712,715/33,c110, miod@@ ok, weissmandude -- testing
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.16 2002/12/17 21:54:25 mickey Exp $	*/
d39 1
a40 1
	struct iodc_data ca_type;	/* iodc-specific type descrition */
d42 1
a43 1
	bus_dma_tag_t	ca_dmatag;	/* DMA tag */
d45 1
d47 6
@


1.16
log
@real interrupts/spl framework.
tested on 712/* 715/100, 715/33 which main cpu/bus types.
miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.15 2002/03/16 01:13:42 mickey Exp $	*/
d39 1
a39 1
	int		ca_mod;		/* module number on the bus */
d69 1
a69 1
void	pdc_scanbus(struct device *, struct confargs *, int bus, int);
@


1.15
log
@separate out interrupt handling stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.14 2002/03/14 03:15:53 millert Exp $	*/
d72 4
a75 3
void	*cpu_intr_establish(int pri, int, int (*handler)(void *),
	    void *arg, struct device *name);
void	cpu_intr(struct trapframe *frame);
@


1.14
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.13 2002/03/14 01:26:32 millert Exp $	*/
d74 1
@


1.13
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.12 2002/02/12 06:42:26 mickey Exp $	*/
d72 2
a73 2
void	*cpu_intr_establish __P((int pri, int, int (*handler)(void *),
				void *arg, struct device *name));
@


1.12
log
@support 712's programmable power switch, no interrupt yet
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.11 2001/12/02 04:03:57 mickey Exp $	*/
d61 1
a61 1
extern void (*cold_hook) __P((int));
d68 5
a72 5
const char *hppa_mod_info __P((int, int));
void	pdc_scanbus __P((struct device *, struct confargs *, int bus, int));
int	mbprint __P((void *, const char *));
int	mbsubmatch __P((struct device *, void *, void *));
void	*cpu_intr_establish __P((int pri, int, int (*handler) __P((void *)),
d74 1
a74 1
int	clock_intr __P((void *));
d76 1
a76 1
void	dumpconf	__P((void));
@


1.11
log
@allow to configure devices on particular bus offsets
to be able to attach units to them.
main reason is the secondary gsc busses on add-on cards
which stick 'emselves in the front.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.10 2001/05/05 22:33:42 art Exp $	*/
d60 5
@


1.11.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.11 2001/12/02 04:03:57 mickey Exp $	*/
a60 5
extern void (*cold_hook)(int);
#define	HPPA_COLD_COLD	0
#define	HPPA_COLD_HOT	1   
#define	HPPA_COLD_OFF	2

d63 7
a69 8
const char *hppa_mod_info(int, int);
void	pdc_scanbus(struct device *, struct confargs *, int bus, int);
int	mbprint(void *, const char *);
int	mbsubmatch(struct device *, void *, void *);
void	*cpu_intr_establish(int pri, int, int (*handler)(void *),
	    void *arg, struct device *name);
void	cpu_intr(struct trapframe *frame);
int	clock_intr(void *);
d71 1
a71 1
void	dumpconf(void);
@


1.11.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d39 2
a40 2
	bus_dma_tag_t	ca_dmatag;	/* DMA tag */
	struct device_path ca_dp;	/* device_path as found by pdc_scan */
a41 1
	u_int		ca_hpasz;	/* module HPA size (if avail) */
d43 1
a44 1
	struct iodc_data ca_type;	/* iodc-specific type descrition */
a45 6
	int		ca_naddrs;	/* number of valid addr ents */
	struct {
		hppa_hpa_t addr;
		u_int	size;
	}		ca_addrs[16];	/* 16 is ought to be enough */

d69 1
a69 1
void	pdc_scanbus(struct device *, struct confargs *, int);
d72 3
a74 4
void	*cpu_intr_map(void *v, int pri, int irq, int (*handler)(void *),
	    void *arg, struct device *dv);
void	*cpu_intr_establish(int pri, int irq, int (*handler)(void *),
	    void *arg, struct device *dv);
@


1.10
log
@Rename configure() to cpu_configure().
Move it from cpu_startup() to main().
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.9 1999/08/16 02:48:40 mickey Exp $	*/
d42 1
d48 2
a49 1
#define	hppacf_irq	cf_loc[0]
@


1.9
log
@evcnt count the interrupts, also optimize diagnostic printing
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.8 1999/08/14 03:22:07 mickey Exp $	*/
a68 1
void	configure	__P((void));
@


1.9.4.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.9 1999/08/16 02:48:40 mickey Exp $	*/
d69 1
@


1.9.4.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.9.4.1 2001/07/04 10:16:09 niklas Exp $	*/
a41 1
	hppa_hpa_t	ca_hpamask;	/* mask for modules on the bus */
d47 1
a47 2
#define	hppacf_off	cf_loc[0]
#define	hppacf_irq	cf_loc[1]
@


1.9.4.3
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a59 5

extern void (*cold_hook) __P((int));
#define	HPPA_COLD_COLD	0
#define	HPPA_COLD_HOT	1   
#define	HPPA_COLD_OFF	2
@


1.9.4.4
log
@Merge in -current from about a week ago
@
text
@d61 1
a61 1
extern void (*cold_hook)(int);
d68 7
a74 8
const char *hppa_mod_info(int, int);
void	pdc_scanbus(struct device *, struct confargs *, int bus, int);
int	mbprint(void *, const char *);
int	mbsubmatch(struct device *, void *, void *);
void	*cpu_intr_establish(int pri, int, int (*handler)(void *),
	    void *arg, struct device *name);
void	cpu_intr(struct trapframe *frame);
int	clock_intr(void *);
d76 1
a76 1
void	dumpconf(void);
@


1.9.4.5
log
@Sync the SMP branch with 3.3
@
text
@d39 1
a39 1
	struct device_path ca_dp;	/* device_path as found by pdc_scan */
d69 1
a69 1
void	pdc_scanbus(struct device *, struct confargs *, int);
d72 3
a74 4
void	*cpu_intr_map(void *v, int pri, int irq, int (*handler)(void *),
	    void *arg, struct device *dv);
void	*cpu_intr_establish(int pri, int irq, int (*handler)(void *),
	    void *arg, struct device *dv);
@


1.9.4.6
log
@Sync the SMP branch to -current.
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.9.4.5 2003/03/27 23:26:54 niklas Exp $	*/
a38 1
	bus_dma_tag_t	ca_dmatag;	/* DMA tag */
d40 1
a41 1
	u_int		ca_hpasz;	/* module HPA size (if avail) */
d43 1
a44 1
	struct iodc_data ca_type;	/* iodc-specific type descrition */
a45 6
	int		ca_naddrs;	/* number of valid addr ents */
	struct {
		hppa_hpa_t addr;
		u_int	size;
	}		ca_addrs[16];	/* 16 is ought to be enough */

@


1.9.4.7
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d80 1
a80 1
	    void *arg, const char *name);
d82 1
a82 1
	    void *arg, const char *name);
@


1.9.4.8
log
@Merge with the trunk
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2004 Michael Shalayeff
d15 5
d24 7
a30 8
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
@


1.8
log
@clock_intr() proto
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.7 1999/04/20 19:52:20 mickey Exp $	*/
d66 1
a66 1
				void *arg, const char *name));
@


1.7
log
@all the devices info is now in one table
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.6 1999/02/25 17:28:58 mickey Exp $	*/
d67 1
@


1.6
log
@support irq on mainbus
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.5 1999/01/11 18:15:26 mickey Exp $	*/
a48 9
/* this is used for hppa_knownboards table
 * describing known to this port boards
 */
struct hppa_board_info {
	int	bi_id;
	char	*bi_label;
	char	*bi_name;
};

d50 2
a51 1
 * describing known to this port modules
@


1.5
log
@pass dmatag in confargs
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.4 1998/12/29 21:54:12 mickey Exp $	*/
d43 1
d47 2
d72 2
a73 1
int	cpu_intr_establish __P((int pri, int (*handler) __P((void *)),
@


1.4
log
@help MI code
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.3 1998/11/23 03:29:50 mickey Exp $	*/
d42 1
@


1.3
log
@cpu_intr_establish() proto
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.2 1998/10/30 19:15:29 mickey Exp $	*/
d34 1
@


1.2
log
@populate futher w/ structs and function declarations
@
text
@d1 1
a1 1
/*	$OpenBSD: autoconf.h,v 1.1 1998/07/07 21:32:38 mickey Exp $	*/
d67 2
@


1.1
log
@more includes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d3 29
d33 34
a66 1
struct pdc_tod;
a69 2
void	pdc_iodc __P((int (*)__P((void)), int, ...));

@

