head	1.46;
access;
symbols
	OPENBSD_6_1:1.46.0.4
	OPENBSD_6_1_BASE:1.46
	OPENBSD_6_0:1.45.0.14
	OPENBSD_6_0_BASE:1.45
	OPENBSD_5_9:1.45.0.10
	OPENBSD_5_9_BASE:1.45
	OPENBSD_5_8:1.45.0.12
	OPENBSD_5_8_BASE:1.45
	OPENBSD_5_7:1.45.0.4
	OPENBSD_5_7_BASE:1.45
	OPENBSD_5_6:1.45.0.8
	OPENBSD_5_6_BASE:1.45
	OPENBSD_5_5:1.45.0.6
	OPENBSD_5_5_BASE:1.45
	OPENBSD_5_4:1.45.0.2
	OPENBSD_5_4_BASE:1.45
	OPENBSD_5_3:1.42.0.4
	OPENBSD_5_3_BASE:1.42
	OPENBSD_5_2:1.42.0.2
	OPENBSD_5_2_BASE:1.42
	OPENBSD_5_1_BASE:1.41
	OPENBSD_5_1:1.41.0.2
	OPENBSD_5_0:1.40.0.2
	OPENBSD_5_0_BASE:1.40
	OPENBSD_4_9:1.39.0.2
	OPENBSD_4_9_BASE:1.39
	OPENBSD_4_8:1.38.0.2
	OPENBSD_4_8_BASE:1.38
	OPENBSD_4_7:1.37.0.8
	OPENBSD_4_7_BASE:1.37
	OPENBSD_4_6:1.37.0.10
	OPENBSD_4_6_BASE:1.37
	OPENBSD_4_5:1.37.0.6
	OPENBSD_4_5_BASE:1.37
	OPENBSD_4_4:1.37.0.4
	OPENBSD_4_4_BASE:1.37
	OPENBSD_4_3:1.37.0.2
	OPENBSD_4_3_BASE:1.37
	OPENBSD_4_2:1.36.0.2
	OPENBSD_4_2_BASE:1.36
	OPENBSD_4_1:1.33.0.4
	OPENBSD_4_1_BASE:1.33
	OPENBSD_4_0:1.33.0.2
	OPENBSD_4_0_BASE:1.33
	OPENBSD_3_9:1.31.0.2
	OPENBSD_3_9_BASE:1.31
	OPENBSD_3_8:1.26.0.2
	OPENBSD_3_8_BASE:1.26
	OPENBSD_3_7:1.25.0.2
	OPENBSD_3_7_BASE:1.25
	OPENBSD_3_6:1.24.0.2
	OPENBSD_3_6_BASE:1.24
	SMP_SYNC_A:1.22
	SMP_SYNC_B:1.22
	OPENBSD_3_5:1.21.0.4
	OPENBSD_3_5_BASE:1.21
	OPENBSD_3_4:1.21.0.2
	OPENBSD_3_4_BASE:1.21
	UBC_SYNC_A:1.21
	OPENBSD_3_3:1.19.0.4
	OPENBSD_3_3_BASE:1.19
	OPENBSD_3_2:1.19.0.2
	OPENBSD_3_2_BASE:1.19
	OPENBSD_3_1:1.18.0.2
	OPENBSD_3_1_BASE:1.18
	UBC_SYNC_B:1.19
	UBC:1.14.0.2
	UBC_BASE:1.14
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.9.0.4
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	SMP:1.8.0.2
	SMP_BASE:1.8
	kame_19991208:1.7
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.46
date	2016.09.03.14.25.27;	author bluhm;	state Exp;
branches;
next	1.45;
commitid	9KYyCUntEsgBdw9n;

1.45
date	2013.03.26.05.04.10;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2013.03.25.17.46.24;	author deraadt;	state Exp;
branches;
next	1.43;

1.43
date	2013.03.23.16.12.22;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2012.06.26.16.18.14;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2011.09.08.03.40.32;	author guenther;	state Exp;
branches;
next	1.40;

1.40
date	2011.04.07.15.45.17;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2010.10.26.17.24.34;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	2010.06.29.20.30.32;	author guenther;	state Exp;
branches;
next	1.37;

1.37
date	2007.09.22.09.57.40;	author martin;	state Exp;
branches;
next	1.36;

1.36
date	2007.07.15.19.25.49;	author kettenis;	state Exp;
branches;
next	1.35;

1.35
date	2007.07.01.12.19.27;	author kettenis;	state Exp;
branches;
next	1.34;

1.34
date	2007.07.01.12.14.13;	author kettenis;	state Exp;
branches;
next	1.33;

1.33
date	2006.08.12.17.54.38;	author krw;	state Exp;
branches;
next	1.32;

1.32
date	2006.03.19.01.47.23;	author martin;	state Exp;
branches;
next	1.31;

1.31
date	2005.12.22.00.37.25;	author marco;	state Exp;
branches;
next	1.30;

1.30
date	2005.12.21.23.26.05;	author marco;	state Exp;
branches;
next	1.29;

1.29
date	2005.12.13.01.56.43;	author martin;	state Exp;
branches;
next	1.28;

1.28
date	2005.11.28.20.13.08;	author martin;	state Exp;
branches;
next	1.27;

1.27
date	2005.10.26.18.35.44;	author martin;	state Exp;
branches;
next	1.26;

1.26
date	2005.07.31.15.31.12;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2004.09.14.22.13.50;	author mickey;	state Exp;
branches;
next	1.24;

1.24
date	2004.08.06.22.31.30;	author mickey;	state Exp;
branches;
next	1.23;

1.23
date	2004.06.28.14.36.59;	author mickey;	state Exp;
branches;
next	1.22;

1.22
date	2004.04.19.22.55.49;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2003.04.16.07.26.07;	author mickey;	state Exp;
branches;
next	1.20;

1.20
date	2003.03.29.00.59.32;	author mickey;	state Exp;
branches;
next	1.19;

1.19
date	2002.08.03.19.00.34;	author mickey;	state Exp;
branches;
next	1.18;

1.18
date	2002.02.08.23.24.08;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	2002.02.01.08.47.43;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	2002.01.25.21.25.55;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.10.01.26.49;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2001.12.05.01.57.14;	author provos;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2001.11.30.17.45.06;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.07.06.02.07.41;	author provos;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.05.20.56.37;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2001.02.16.19.17.24;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2000.02.22.20.08.16;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	99.12.17.01.58.46;	author mickey;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	99.10.26.16.20.43;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	99.09.18.19.01.56;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	99.08.25.14.59.16;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	99.08.14.03.42.16;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	99.04.20.19.45.16;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.10.30.19.28.13;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.19.45.25;	author mickey;	state Exp;
branches;
next	;

1.8.2.1
date	2000.03.02.07.04.28;	author niklas;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2001.04.18.16.06.26;	author niklas;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2001.07.04.10.16.10;	author niklas;	state Exp;
branches;
next	1.8.2.4;

1.8.2.4
date	2001.10.31.02.52.47;	author nate;	state Exp;
branches;
next	1.8.2.5;

1.8.2.5
date	2001.12.05.00.39.10;	author niklas;	state Exp;
branches;
next	1.8.2.6;

1.8.2.6
date	2002.03.06.00.57.22;	author niklas;	state Exp;
branches;
next	1.8.2.7;

1.8.2.7
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	1.8.2.8;

1.8.2.8
date	2003.05.13.19.41.04;	author ho;	state Exp;
branches;
next	1.8.2.9;

1.8.2.9
date	2004.06.05.23.10.49;	author niklas;	state Exp;
branches;
next	;

1.14.2.1
date	2002.01.31.22.55.09;	author niklas;	state Exp;
branches;
next	1.14.2.2;

1.14.2.2
date	2002.06.11.03.35.37;	author art;	state Exp;
branches;
next	1.14.2.3;

1.14.2.3
date	2002.10.29.00.28.03;	author art;	state Exp;
branches;
next	1.14.2.4;

1.14.2.4
date	2003.05.19.21.49.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.46
log
@Increase the number of mbufs on most architectures.  This is based
on a guess how much memory a typical machine has.  If the value is
too high, users may run out of kernel memory.  Then we will have
to adjust this again.
OK claudio@@ deraadt@@
@
text
@/*	$OpenBSD: param.h,v 1.45 2013/03/26 05:04:10 deraadt Exp $	*/

/*
 * Copyright (c) 1988-1994, The University of Utah and
 * the Computer Systems Laboratory at the University of Utah (CSL).
 * All rights reserved.
 *
 * Permission to use, copy, modify and distribute this software is hereby
 * granted provided that (1) source code retains these copyright, permission,
 * and disclaimer notices, and (2) redistributions including binaries
 * reproduce the notices in supporting documentation, and (3) all advertising
 * materials mentioning features or use of this software display the following
 * acknowledgement: ``This product includes software developed by the
 * Computer Systems Laboratory at the University of Utah.''
 *
 * THE UNIVERSITY OF UTAH AND CSL ALLOW FREE USE OF THIS SOFTWARE IN ITS "AS
 * IS" CONDITION.  THE UNIVERSITY OF UTAH AND CSL DISCLAIM ANY LIABILITY OF
 * ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * CSL requests users of this software to return to csl-dist@@cs.utah.edu any
 * improvements that they make and grant CSL redistribution rights.
 */

#ifndef	_MACHINE_PARAM_H_
#define	_MACHINE_PARAM_H_

#ifdef _KERNEL
#include <machine/cpu.h>
#include <machine/intr.h>
#endif

#define	_MACHINE	hppa
#define	MACHINE		"hppa"
#define	_MACHINE_ARCH	hppa
#define	MACHINE_ARCH	"hppa"
#define	MID_MACHINE	MID_HPUX800

#define	PAGE_SHIFT	12
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

#define	KERNBASE	0x00000000		/* start of kernel virtual */

#ifdef _KERNEL

#define	NBPG		PAGE_SIZE		/* bytes/page */
#define	PGSHIFT		PAGE_SHIFT		/* LOG2(PAGE_SIZE) */
#define	PGOFSET		PAGE_MASK		/* byte offset into page */

#define	UPAGES		4			/* pages of u-area */
#define	USPACE		(UPAGES * PAGE_SIZE)	/* total size of u-area */
#define	USPACE_ALIGN	0			/* u-area alignment 0-none */

#define	NMBCLUSTERS	(4 * 1024)		/* max cluster allocation */

#ifndef	MSGBUFSIZE
#define	MSGBUFSIZE	(2 * PAGE_SIZE)		/* default message buffer size */
#endif

/*
 * Maximum size of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MAX_DEFAULT	((128 * 1024 * 1024) >> PAGE_SHIFT)

#endif /* _KERNEL */

#define	MACHINE_STACK_GROWS_UP	1		/* stack grows to higher addresses */
#define	__SWAP_BROKEN

#endif /* _MACHINE_PARAM_H_ */
@


1.45
log
@PGSHIFT and PGOFSET are now contained inside the kernel namespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.44 2013/03/25 17:46:24 deraadt Exp $	*/
d54 1
a54 1
#define	NMBCLUSTERS	4096			/* map size, max cluster allocation */
@


1.44
log
@ALIGNBYTES/ALIGN/ALIGNED_POINTER can move to the MI file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.43 2013/03/23 16:12:22 deraadt Exp $	*/
a40 2
#define	PGSHIFT		PAGE_SHIFT		/* LOG2(PAGE_SIZE) */
#define	PGOFSET		PAGE_MASK		/* byte offset into page */
d47 2
@


1.43
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.42 2012/06/26 16:18:14 deraadt Exp $	*/
a36 4

#define	ALIGNBYTES		_ALIGNBYTES
#define	ALIGN(p)		_ALIGN(p)
#define	ALIGNED_POINTER(p,t)	_ALIGNED_POINTER(p,t)
@


1.42
log
@param.h (like landisk and alpha before) was still trying to include too
much of the kernel world when it did not need to
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.42 2012/06/26 16:12:44 deraadt Exp $	*/
d3 1
a3 1
/* 
a21 2
 *
 * 	Utah $Hdr: param.h 1.18 94/12/16$
d24 3
a31 4
/*
 * Machine dependent constants for PA-RISC.
 */

a41 2
#define	PAGE_SIZE	4096
#define	PAGE_MASK	(PAGE_SIZE-1)
d43 4
d48 1
a48 3
#define	NBPG		4096		/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */
#define	PGSHIFT		12		/* LOG2(NBPG) */
d50 1
a50 1
#define	KERNBASE	0x00000000	/* start of kernel virtual */
d52 1
a52 4
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define	DEV_BSIZE	(1 << DEV_BSHIFT)
#define BLKDEV_IOSIZE	2048
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */
d54 3
a56 1
#define	MACHINE_STACK_GROWS_UP	1	/* stack grows to higher addresses */
d58 1
a58 2
#define	USPACE		(4 * NBPG)	/* pages for user struct and kstack */
#define	USPACE_ALIGN	(0)		/* u-area alignment 0-none */
d61 1
a61 1
#define	MSGBUFSIZE	2*NBPG		/* default message buffer size */
d65 1
a65 6
 * Constants related to network buffer management.
 */
#define	NMBCLUSTERS	4096		/* map size, max cluster allocation */

/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
a67 1
#define	NKMEMPAGES_MIN_DEFAULT	((4 * 1024 * 1024) >> PAGE_SHIFT)
d70 1
a70 3
/* pages ("clicks") (4096 bytes) to disk blocks */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))
d72 2
a73 2
#define	btodb(x)	((x) >> DEV_BSHIFT)
#define	dbtob(x)	((x) << DEV_BSHIFT)
d75 1
a75 1
#define	__SWAP_BROKEN
@


1.41
log
@Provide namespace-safe alignment macros in <machine/_types.h>, with
compat names kept in <machine/param.h>.  In <sys/socket.h>, pull
in <sys/_types.h> instead of the namespace polluting <machine/param.h>
and completely eliminate __CMSG_ALIGN, replaced by _ALIGN

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.40 2011/04/07 15:45:17 miod Exp $	*/
d26 1
d29 1
@


1.40
log
@Make sure the ALIGN() macro uses u_long on all platforms for consistency, and
update the comment block accordingly.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.39 2010/10/26 17:24:34 deraadt Exp $	*/
d39 3
a41 8
/*
 * Round p (pointer or byte index) up to a correctly-aligned value for all
 * data types (int, long, ...).   The result is u_long and must be cast to
 * any desired pointer type.
 */
#define	ALIGNBYTES	7
#define	ALIGN(p)	(((u_long)(p) + ALIGNBYTES) &~ ALIGNBYTES)
#define	ALIGNED_POINTER(p,t) ((((u_long)(p)) & (sizeof(t) - 1)) == 0)
@


1.39
log
@thib missed this architecture when he did all the other architectures;
ok thib jsing
--
Move the MSIZE, MCLSHIFT, MCLBYTES and the MCLOFSET
mbuf constants from MD param.h to MI param.h.
Besides being the same on every arch, things will
most probly break if any arch has different values
then the others.

The NMBCLUSTERS constants needs to be MD though;

ok miod@@,krw@@,claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.38 2010/06/29 20:30:32 guenther Exp $	*/
d41 1
a41 1
 * data types (int, long, ...).   The result is u_int and must be cast to
@


1.38
log
@Remove COMPAT_HPUX.  No one wanted to support it and its fewmets were
blocking other cleanups
ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.37 2007/09/22 09:57:40 martin Exp $	*/
a73 4
 * MCLBYTES must be no larger than the software page size, and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
a74 4
#define	MSIZE		256		/* size of an mbuf */
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)	/* large enough for ether MTU */
#define	MCLOFSET	(MCLBYTES - 1)
@


1.37
log
@replace even more ctob and btoc with ptoa and atop respectively plus
uvm_extern.h where needed
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.36 2007/07/15 19:25:49 kettenis Exp $	*/
a97 12

#ifdef _KERNEL
#ifdef COMPAT_HPUX
/*
 * Constants/macros for HPUX multiple mapping of user address space.
 * Pages in the first 256Mb are mapped in at every 256Mb segment.
 */
#define HPMMMASK	0xF0000000
#define ISHPMMADDR(v)	0		/* XXX ...jef */
#define HPMMBASEADDR(v)	((unsigned)(v) & ~HPMMMASK)
#endif
#endif
@


1.36
log
@Delay switching to the real serial console until we attach the serial device.
The variety of different serial devices is just too big to make a decision up
front.  This should make the second serial port on four-digit B/C/J-class
workstation work as a serial console too.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.34 2007/07/01 12:14:13 kettenis Exp $	*/
a94 4

/* pages to bytes */
#define	ctob(x)		((x) << PGSHIFT)
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)
@


1.35
log
@Oops!  Revert previous commit.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.33 2006/08/12 17:54:38 krw Exp $	*/
a111 8
#endif

#ifndef _LOCORE
#define	CONADDR	conaddr
#define	CONUNIT	conunit
#define	COM_FREQ	7372800
extern hppa_hpa_t conaddr;
extern int conunit;
@


1.34
log
@Add PDC_IO.
@
text
@d113 8
@


1.33
log
@Make all DEV_BSIZE definitions consistant by using (1 << DEV_BSHIFT)
in the six cases using "512".

As DEV_BSHIFT is always 9, this should be a no-op.

"no objections" miod@@ "I can't see any problem doing this." pedro@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.32 2006/03/19 01:47:23 martin Exp $	*/
a111 8
#endif

#ifndef _LOCORE
#define	CONADDR	conaddr
#define	CONUNIT	conunit
#define	COM_FREQ	7372800
extern hppa_hpa_t conaddr;
extern int conunit;
@


1.32
log
@remove unused bdbtofsb(bn) macro

found by drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.31 2005/12/22 00:37:25 marco Exp $	*/
a57 1
#define	DEV_BSIZE	512
d59 1
@


1.31
log
@Bad commit, breaks hppa64.  Prompted by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.30 2005/12/21 23:26:05 marco Exp $	*/
a101 8

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))
@


1.30
log
@Add MACHINE_STACK_ALIGN define.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.29 2005/12/13 01:56:43 martin Exp $	*/
a63 1
#define MACHINE_STACK_ALIGN	64	/* per ABI stacks must be 64 aligned */
@


1.29
log
@nuke unused BTOPKERNBASE define

pointed out by miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.28 2005/11/28 20:13:08 martin Exp $	*/
d64 1
@


1.28
log
@use atop(), remove last traces of Mach macros from hppa and hppa64
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.27 2005/10/26 18:35:44 martin Exp $	*/
a56 1
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
@


1.27
log
@no more hppa_round_page() and hppa_trunc_page() macros

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.26 2005/07/31 15:31:12 miod Exp $	*/
a110 6

/*
 * Mach derived conversion macros
 */
#define btop(x)		((unsigned long)(x) >> PGSHIFT)
#define ptob(x)		((unsigned long)(x) << PGSHIFT)
@


1.26
log
@Get rid of unused SINCR and SSIZE constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.25 2004/09/14 22:13:50 mickey Exp $	*/
a114 3
#define hppa_round_page(x)	((((unsigned long)(x)) + NBPG - 1) & ~(NBPG-1))
#define hppa_trunc_page(x)	((unsigned long)(x) & ~(NBPG-1))

@


1.25
log
@higher max kmem default and mark swap broken
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.24 2004/08/06 22:31:30 mickey Exp $	*/
a64 3

#define	SSIZE		(4)		/* initial stack size/NBPG */
#define	SINCR		(1)		/* increment of stack/NBPG */
@


1.24
log
@provide md USPACE_ALIGN zero on all but mips; deradat@@ pefo@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.23 2004/06/28 14:36:59 mickey Exp $	*/
d94 1
a94 1
#define	NKMEMPAGES_MAX_DEFAULT	((64 * 1024 * 1024) >> PAGE_SHIFT)
d143 2
@


1.23
log
@do not cast explicitly to unsigned; found by otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.22 2004/04/19 22:55:49 deraadt Exp $	*/
d70 1
@


1.22
log
@remove the GATEWAY junk thingy; at the same time, select a new fat
cluster value that noone will really need to crank.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 2003/04/16 07:26:07 mickey Exp $	*/
d96 2
a97 2
#define	ctod(x)	((x)<<(PGSHIFT-DEV_BSHIFT))
#define	dtoc(x)	((x)>>(PGSHIFT-DEV_BSHIFT))
d100 2
a101 2
#define	ctob(x)	((x)<<PGSHIFT)
#define	btoc(x)	(((unsigned)(x)+(NBPG-1))>>PGSHIFT)
d103 2
a104 2
#define	btodb(bytes)	((unsigned)(bytes) >> DEV_BSHIFT)
#define	dbtob(db)	((unsigned)(db) << DEV_BSHIFT)
@


1.21
log
@half the uspace seems to be very much enough
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2003/03/29 00:59:32 mickey Exp $	*/
d86 1
a86 3
#ifndef NMBCLUSTERS
#define	NMBCLUSTERS	(2048)		/* cl map size: 1MB */
#endif
@


1.20
log
@nothing uses UADDR
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2002/08/03 19:00:34 mickey Exp $	*/
d69 1
a69 3
#define	USHIFT		(3)		/* log2(UPAGES) */
#define	UPAGES		(1<<USHIFT)	/* pages of u-area */
#define	USPACE		(UPAGES * NBPG)	/* pages for user struct and kstack */
@


1.19
log
@u could get a little higher
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18 2002/02/08 23:24:08 mickey Exp $	*/
a68 1
#define	UADDR		0x7fff7000	/* u-area lives here */
@


1.18
log
@com freq is 7372800, which "normal" * 4 and is discovered by
Enrik Berkhan <Enrik.Berkhan@@planb.de> .
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 2002/02/01 08:47:43 mickey Exp $	*/
d69 1
a69 1
#define	UADDR		0x7ffe6000	/* u-area lives here */
@


1.17
log
@redefine COM_FREQ to 7.272727MHz
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2002/01/25 21:25:55 mickey Exp $	*/
d142 1
a142 1
#define	COM_FREQ	7272727
@


1.16
log
@define CONADDR and CONUNIT
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 2002/01/10 01:26:49 mickey Exp $	*/
d142 1
@


1.15
log
@larger SSIZE and smaller NKMEMPAGES_MIN_DEFAULT
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 2001/12/05 01:57:14 provos Exp $	*/
d139 6
@


1.14
log
@make nkmempages dynamic based on memory. okay art@@ from netbsd:
date: 2000/02/11 19:22:52;  author: thorpej;
Add some very simple code to auto-size the kmem_map.  We take the
amount of physical memory, divide it by 4, and then allow machine
dependent code to place upper and lower bounds on the size.  Export
the computed value to userspace via the new "vm.nkmempages" sysctl.

NKMEMCLUSTERS is now deprecated and will generate an error if you
attempt to use it.  The new option, should you choose to use it,
is called NKMEMPAGES, and two new options NKMEMPAGES_MIN and
NKMEMPAGES_MAX allow the user to configure the bounds in the kernel
config file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 2001/11/30 17:45:06 miod Exp $	*/
d66 1
a66 1
#define	SSIZE		(1)		/* initial stack size/NBPG */
d97 1
a97 1
#define	NKMEMPAGES_MIN_DEFAULT	((8 * 1024 * 1024) >> PAGE_SHIFT)
@


1.14.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2002/01/25 21:25:55 mickey Exp $	*/
d66 1
a66 1
#define	SSIZE		(4)		/* initial stack size/NBPG */
d97 1
a97 1
#define	NKMEMPAGES_MIN_DEFAULT	((4 * 1024 * 1024) >> PAGE_SHIFT)
a138 6
#ifndef _LOCORE
#define	CONADDR	conaddr
#define	CONUNIT	conunit
extern hppa_hpa_t conaddr;
extern int conunit;
#endif
@


1.14.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14.2.1 2002/01/31 22:55:09 niklas Exp $	*/
a141 1
#define	COM_FREQ	7372800
@


1.14.2.3
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14.2.2 2002/06/11 03:35:37 art Exp $	*/
d69 1
a69 1
#define	UADDR		0x7fff7000	/* u-area lives here */
@


1.14.2.4
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d69 4
a72 1
#define	USPACE		(4 * NBPG)	/* pages for user struct and kstack */
@


1.13
log
@Remove some definitions which do not make sense for non-m68k platforms.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 2001/07/06 02:07:41 provos Exp $	*/
d94 2
a95 1
 * Size of kernel malloc arena in logical pages
d97 2
a98 3
#ifndef NKMEMCLUSTERS
#define	NKMEMCLUSTERS	(16 * 1024 * 1024 / PAGE_SIZE)
#endif
@


1.12
log
@change MSIZE to 256, okay @@deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 2001/05/05 20:56:37 art Exp $	*/
a54 4

#define	SEGSHIFT	(PGSHIFT + (PGSHIFT-PTESHIFT))	/* LOG2(NBSEG) */
#define NBSEG		(1 << SEGSHIFT)	/* bytes/segment (quadrant) */
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */
@


1.11
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 2001/02/16 19:17:24 mickey Exp $	*/
d89 1
a89 1
#define	MSIZE		128		/* size of an mbuf */
@


1.10
log
@import some alphaizm for the db_elf's sake
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 2000/02/22 20:08:16 mickey Exp $	*/
a69 4
#define	CLSIZE		1
#define	CLSIZELOG2	0

/* NOTE: SSIZE, SINCR and UPAGES must be multiples of CLSIZE */
d84 1
a84 1
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
d98 1
a98 1
 * Size of kernel malloc arena in CLBYTES-sized logical pages
d101 1
a101 1
#define	NKMEMCLUSTERS	(16 * 1024 * 1024 / CLBYTES)
@


1.9
log
@blah, blah, blah, msgbuf
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8 1999/12/17 01:58:46 mickey Exp $	*/
d46 1
@


1.8
log
@define constants for PAGE_{SIZE,MASK,SHIFT}
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7 1999/10/26 16:20:43 mickey Exp $	*/
d80 4
@


1.8.2.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a79 4

#ifndef	MSGBUFSIZE
#define	MSGBUFSIZE	2*NBPG		/* default message buffer size */
#endif
@


1.8.2.2
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 2001/02/16 19:17:24 mickey Exp $	*/
a45 1
#define	ALIGNED_POINTER(p,t) ((((u_long)(p)) & (sizeof(t) - 1)) == 0)
@


1.8.2.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8.2.2 2001/04/18 16:06:26 niklas Exp $	*/
d70 4
d88 1
a88 1
 * MCLBYTES must be no larger than the software page size, and,
d102 1
a102 1
 * Size of kernel malloc arena in logical pages
d105 1
a105 1
#define	NKMEMCLUSTERS	(16 * 1024 * 1024 / PAGE_SIZE)
@


1.8.2.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8.2.3 2001/07/04 10:16:10 niklas Exp $	*/
d89 1
a89 1
#define	MSIZE		256		/* size of an mbuf */
@


1.8.2.5
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8.2.4 2001/10/31 02:52:47 nate Exp $	*/
d55 4
@


1.8.2.6
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d66 1
a66 1
#define	SSIZE		(4)		/* initial stack size/NBPG */
d94 1
a94 2
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
d96 3
a98 2
#define	NKMEMPAGES_MIN_DEFAULT	((4 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((64 * 1024 * 1024) >> PAGE_SHIFT)
a138 7
#ifndef _LOCORE
#define	CONADDR	conaddr
#define	CONUNIT	conunit
#define	COM_FREQ	7372800
extern hppa_hpa_t conaddr;
extern int conunit;
#endif
@


1.8.2.7
log
@Sync the SMP branch with 3.3
@
text
@d69 1
a69 1
#define	UADDR		0x7fff7000	/* u-area lives here */
@


1.8.2.8
log
@Sync the SMP branch to -current.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8.2.7 2003/03/27 23:26:54 niklas Exp $	*/
d69 4
a72 1
#define	USPACE		(4 * NBPG)	/* pages for user struct and kstack */
@


1.8.2.9
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d86 3
a88 1
#define	NMBCLUSTERS	4096		/* map size, max cluster allocation */
@


1.7
log
@higher the kmem limit; fix up the nmbclusters
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.6 1999/09/18 19:01:56 mickey Exp $	*/
d46 4
@


1.6
log
@machine is hppa
define UPAGES through USHIFT
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.5 1999/08/25 14:59:16 mickey Exp $	*/
d89 1
a89 5
#ifdef GATEWAY
#define	NMBCLUSTERS	(1024)		/* cl map size: 1MB */
#else
#define	NMBCLUSTERS	(512)		/* cl map size: 0.5MB */
#endif
d96 1
a96 1
#define	NKMEMCLUSTERS	(8192*1024/CLBYTES)
@


1.5
log
@n+1 approximation step for the user space constants
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.4 1999/08/14 03:42:16 mickey Exp $	*/
d33 2
a34 2
#define	_MACHINE	hp700
#define MACHINE		"hp700"
d73 2
a74 1
#define	UPAGES		(4)		/* pages of u-area */
@


1.4
log
@s/STACK_GROWS_UP/MACHINE_STACK_GROWS_UP/
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.3 1999/04/20 19:45:16 mickey Exp $	*/
d72 3
a74 3
#define	UADDR		0xC1000000	/* u-area lives here */
#define	UPAGES		(2)		/* pages of u-area */
#define	USPACE		(UPAGES * NBPG)	/* pages for user struct */
@


1.3
log
@define UADDR; change alignment to 8 bytes
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.2 1998/10/30 19:28:13 mickey Exp $	*/
d63 1
a63 1
#define	STACK_GROWS_UP	1		/* stack grows to higher addresses */
@


1.2
log
@cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.1 1998/06/23 19:45:25 mickey Exp $	*/
d44 1
a44 1
#define	ALIGNBYTES	3
d72 1
@


1.1
log
@some includes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d30 1
a30 1
 * Machine dependent constants for PA-RISC (1.1).
a49 1
#define	NPTEPG		(1 << (PGSHIFT-PTESHIFT))
d98 1
a98 1
#define	NKMEMCLUSTERS	(1024*1024/CLBYTES)
d109 2
a110 6
#define LABELOFFSET	0

#define	btodb(bytes)	 		/* calculates (bytes / DEV_BSIZE) */ \
	((unsigned)(bytes) >> DEV_BSHIFT)
#define	dbtob(db)			/* calculates (db * DEV_BSIZE) */ \
	((unsigned)(db) << DEV_BSHIFT)
a124 2
#define hppa_btop(x)		((unsigned long)(x) >> PGSHIFT)
#define hppa_ptob(x)		((unsigned long)(x) << PGSHIFT)
d126 2
a127 1
#include <machine/intr.h>
a129 3

#define	DELAY(n)	{ register int N = (n); while (--N > 0); }

@

