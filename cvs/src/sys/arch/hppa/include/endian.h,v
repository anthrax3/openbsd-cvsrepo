head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.10
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.6
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.11.0.14
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.10
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.8
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.6
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.10.0.22
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.20
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.16
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.18
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.14
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.12
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.10
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.8
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.6
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.7.0.14
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.12
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.10
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.8
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.6
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.7.0.4
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.2
	SMP_BASE:1.4
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2014.07.12.16.25.08;	author guenther;	state Exp;
branches;
next	1.11;
commitid	r9gXh8PA6rI3P7q2;

1.11
date	2011.03.11.15.17.08;	author pirofti;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.13.00.35.23;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2004.06.28.14.37.54;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.07.18.24.19;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.29.20.28.54;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.29.06.13.14;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.02.20.45.21;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.02.22.08.55;	author mickey;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	99.05.10.16.02.08;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	98.12.05.17.29.50;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.19.45.21;	author mickey;	state Exp;
branches;
next	;

1.4.2.1
date	2001.04.18.16.06.23;	author niklas;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2001.07.04.10.16.09;	author niklas;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2004.06.05.23.10.49;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Tackle the endian.h mess.  Make it so that:
 * you can #include <sys/endian.h> instead of <machine/endian.h>,
   and ditto <endian.h>  (fixes code that pulls in <sys/endian.h> first)

 * those will always export the symbols that POSIX specified for
   <endian.h>, including the new {be,le}{16,32,64}toh() set.  c.f.
	http://austingroupbugs.net/view.php?id=162

   if __BSD_VISIBLE then you also get the symbols that our <machine/endian.h>
   currently exports (ntohs, NTOHS, dlg's bemtoh*, etc)

 * when doing POSIX compiles (not __BSD_VISIBLE), then <netinet/in.h> and
   <arpa/inet.h> will *stop* exporting the extra symbols like BYTE_ORDER
   and betoh*

ok deraadt@@
@
text
@/*	$OpenBSD: endian.h,v 1.11 2011/03/11 15:17:08 pirofti Exp $	*/

/*
 * Copyright (c) 1998-2004 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_ENDIAN_H_
#define	_MACHINE_ENDIAN_H_

#define	_BYTE_ORDER _BIG_ENDIAN
#define	__STRICT_ALIGNMENT

#ifndef __FROM_SYS__ENDIAN
#include <sys/endian.h>
#endif

#endif /* !_MACHINE_ENDIAN_H_ */
@


1.11
log
@Use _MACHINE_ENDIAN_H_ for this is The Right Thing To Do.

Okay guenther@@, millert@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.10 2005/12/13 00:35:23 millert Exp $	*/
d33 3
d37 1
a37 2

#define	__STRICT_ALIGNMENT
@


1.10
log
@First step in include files overhaul.  Use __FOO_VISIBLE (as defined
in sys/cdefs.h) instead of _FOO_SOURCE.  Also fix several namespace
pollution issues, including the byte order defines.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.9 2004/06/28 14:37:54 mickey Exp $	*/
d29 2
a30 2
#ifndef _HPPA_ENDIAN_H_
#define	_HPPA_ENDIAN_H_
d37 1
a37 1
#endif /* !_HPPA_ENDIAN_H_ */
@


1.9
log
@live happy w/ generic byte swapping macros
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.8 2004/04/07 18:24:19 mickey Exp $	*/
d32 1
a32 1
#define	BYTE_ORDER	BIG_ENDIAN
@


1.8
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.7 2001/06/29 20:28:54 mickey Exp $	*/
d29 2
a30 55
#ifndef _MACHINE_ENDIAN_H_
#define	_MACHINE_ENDIAN_H_

#ifdef __GNUC__

#define __swap64md(x) ({					\
	u_int64_t __swap64md_x = (x);				\
								\
	(u_int64_t)__swap32md(__swap64md_x >> 32) |		\
	(u_int64_t)__swap32md(__swap64md_x & 0xffffffff) << 32;	\
})

#define	__swap32md(x) ({			\
	register u_int32_t __swap32md_x;	\
						\
	__asm  ("extru	%1, 7,8,%%r19\n\t"	\
		"shd	%1,%1,8,%0\n\t"		\
		"dep	%0,15,8,%0\n\t"		\
		"dep	%%r19,31,8,%0"		\
		: "=&r" (__swap32md_x)		\
		: "r" (x) : "r19");		\
	__swap32md_x;				\
})

#if 1
/*
 * Use generic C version because w/ asm inline below
 * gcc inserts extra "extru r,31,16,r" to convert
 * to 16 bit entity, which produces overhead we don't need.
 * Besides, gcc does swap16 same way by itself.
 */
#define	__swap16md(x)	__swap16gen(x)
#else
#define	__swap16md(x) ({						\
	register u_int16_t __swap16md_x;				\
									\
	__asm  ("extru	%1,23,8,%0\n\t"					\
		"dep	%1,23,8,%0"					\
	       : "=&r" (__swap16md_x) : "r" (x));			\
	__swap16md_x;							\
})
#endif

#define __swap64md(x) ({						\
	u_int64_t __swap64md_x = (x);					\
									\
	(u_int64_t)__swap32md(__swap64md_x >> 32) |			\
	    (u_int64_t)__swap32md(__swap64md_x & 0xffffffff) << 32;	\
})

/* Tell sys/endian.h we have MD variants of the swap macros.  */
#define MD_SWAP

#endif /* __GNUC__ */

d37 1
a37 1
#endif /* !_MACHINE_ENDIAN_H_ */
@


1.7
log
@spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.6 2001/06/29 06:13:14 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2001 Michael Shalayeff
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d19 8
a26 7
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.6
log
@implement __swap64md
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.5 2001/03/02 20:45:21 jason Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2000 Michael Shalayeff
d66 7
a72 7
#define	__swap16md(x) ({			\
	register u_int16_t __swap16md_x;	\
						\
	__asm  ("extru	%1,23,8,%0\n\t"		\
		"dep	%1,23,8,%0"		\
	       : "=&r" (__swap16md_x) : "r" (x));\
	__swap16md_x;				\
d75 7
@


1.5
log
@add #define __STRICT_ALIGNMENT
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.4 2000/02/02 22:08:55 mickey Exp $	*/
d37 7
@


1.4
log
@MD swap macros
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.3 1999/05/10 16:02:08 espie Exp $	*/
d77 2
@


1.4.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.5 2001/03/02 20:45:21 jason Exp $	*/
a76 2

#define	__STRICT_ALIGNMENT
@


1.4.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.4.2.1 2001/04/18 16:06:23 niklas Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2001 Michael Shalayeff
a37 7
#define __swap64md(x) ({					\
	u_int64_t __swap64md_x = (x);				\
								\
	(u_int64_t)__swap32md(__swap64md_x >> 32) |		\
	(u_int64_t)__swap32md(__swap64md_x & 0xffffffff) << 32;	\
})

d59 7
a65 7
#define	__swap16md(x) ({						\
	register u_int16_t __swap16md_x;				\
									\
	__asm  ("extru	%1,23,8,%0\n\t"					\
		"dep	%1,23,8,%0"					\
	       : "=&r" (__swap16md_x) : "r" (x));			\
	__swap16md_x;							\
a67 7

#define __swap64md(x) ({						\
	u_int64_t __swap64md_x = (x);					\
									\
	(u_int64_t)__swap32md(__swap64md_x >> 32) |			\
	    (u_int64_t)__swap32md(__swap64md_x & 0xffffffff) << 32;	\
})
@


1.4.2.3
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1998-2004 Michael Shalayeff
d15 5
d24 7
a30 8
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
@


1.3
log
@Use symbolic define for BYTE_ORDER.

(don't forget that cpp is `lazy':
#define A B
#define B value
#if A == value

works, since A isn't extended before it's needed, by which time B is known)
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.2 1998/12/05 17:29:50 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Michael Shalayeff
d38 10
a47 7
#define	__swap32md(x) ({						\
	register u_int32_t __swap32md_x, __swap32md_t;			\
									\
	__asm ("shd %2,%2,8,%0 ! dep %0,15,8,%0 ! shd %%r0,%2,16,%1 !"	\
	       "extru %2,7,8,%0 ! dep %1,23,8,%0"			\
	       : "=r" (__swap32md_x), "=r" (__swap32md_t) : "r" (x));	\
	__swap32md_x;							\
d50 16
a65 6
#define	__swap16md(x) ({						\
	register u_int16_t __swap16md_x = (x);				\
									\
	__asm ("shd %0,%0,24,%0 ! extru %0,15,8,%0 ! dep %%r0,15,16,%0"	\
	       : "=r" (__swap16md_x));					\
	__swap16md_x;							\
d67 1
d70 1
a70 1
/* #define MD_SWAP */
@


1.2
log
@MD swapX macros, not enabled yet
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.1 1998/06/23 19:45:21 mickey Exp $	*/
d61 1
a61 1
#define	BYTE_ORDER	4321
@


1.1
log
@some includes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1987, 1991 Regents of the University of California.
d17 3
a19 5
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
d21 10
a30 13
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)endian.h	7.10 (Berkeley) 5/7/93
d33 27
a59 2
#ifndef _HPPA_ENDIAN_H_
#define	_HPPA_ENDIAN_H_
d64 1
a64 1
#endif /* !_HPPA_ENDIAN_H_ */
@

