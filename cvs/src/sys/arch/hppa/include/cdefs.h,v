head	1.10;
access;
symbols
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.18
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.14
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.12
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.9.0.6
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.8.0.24
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.22
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.20
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.16
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.18
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.14
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.12
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.7.0.14
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.12
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.10
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.8
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.6
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.7
	UBC:1.3.0.6
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.1.0.12
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.10
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.8
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2013.03.28.17.30.45;	author martynas;	state Exp;
branches;
next	1.9;

1.9
date	2011.11.10.23.15.11;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.24.20.46.45;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.08.29.01.15.21;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.28.22.30.42;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.03.18.54.26;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2002.08.03.03.05.11;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.29.01.44.53;	author mickey;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2001.03.27.09.24.46;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.19.45.19;	author mickey;	state Exp;
branches
	1.1.8.1;
next	;

1.1.8.1
date	2001.04.18.16.06.19;	author niklas;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	;

1.3.6.1
date	2002.10.29.00.28.03;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Add __strong_alias macros for all architectures to be able to alias
another symbol without weak attribute.  To be used in libc and libm
soon.  Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@/*	$OpenBSD: cdefs.h,v 1.9 2011/11/10 23:15:11 deraadt Exp $	*/

/*
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#ifndef _MACHINE_CDEFS_H_
#define	_MACHINE_CDEFS_H_

#define	__strong_alias(alias,sym)					\
	__asm__(".export " __STRING(alias) ", entry\n\t.global "	\
	    __STRING(alias) "\n\t" __STRING(alias) " = " __STRING(sym))
#define	__weak_alias(alias,sym)						\
	__asm__(".export " __STRING(alias) ", entry\n\t.weak "		\
	    __STRING(alias) "\n\t" __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)					\
	__asm__(".section .gnu.warning." __STRING(sym)			\
	    "\n\t.ascii \"" msg "\"\n\t.text")

#endif /* !_MACHINE_CDEFS_H_ */
@


1.9
log
@Eliminate more useless differences between hppa and hppa64
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.8 2005/11/24 20:46:45 deraadt Exp $	*/
d33 2
a34 7
#if defined(lint)
#define __indr_reference(sym,alias)	__lint_equal__(sym,alias)
#define __warn_references(sym,msg)
#define __weak_alias(alias,sym)		__lint_equal__(sym,alias)
#elif defined(__GNUC__) && defined(__STDC__)
#define	__weak_alias(alias,sym)					\
	__asm__(".export " __STRING(alias) ", entry\n\t.weak "	\
d36 5
a40 2
#define	__warn_references(sym,msg)				\
	__asm__(".section .gnu.warning." __STRING(sym)		\
a41 1
#endif
@


1.8
log
@add lint-specific hacks.  at the same time, clean out a lot of ancient
cruft for old compilers and environments.  there may be a 2nd round of
polishing after this; ok miod and others
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.7 2002/08/29 01:15:21 mickey Exp $	*/
d40 1
a40 1
	__STRING(alias) "\n\t" __STRING(alias) " = " __STRING(sym))
@


1.7
log
@soft line breaks do not work always, just nl and tab instead, prettier too
@
text
@d1 1
a1 2
/*	$OpenBSD: cdefs.h,v 1.6 2002/08/28 22:30:42 mickey Exp $	*/
/*	$NetBSD: cdefs.h,v 1.5 1996/10/12 18:08:12 cgd Exp $	*/
d33 12
a44 4
#define	__weak_alias(alias,sym)						\
    __asm__(".export " __STRING(alias) ", entry\n\t.weak " __STRING(alias) "\n\t" __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)					\
    __asm__(".section .gnu.warning." __STRING(sym) "\n\t.ascii \"" msg "\"\n\t.text")
@


1.6
log
@do not forget to export the weak alias, proper line continuation
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.5 2002/08/03 18:54:26 mickey Exp $	*/
d35 1
a35 1
    __asm__(".export " __STRING(alias) ", entry ! .weak " __STRING(alias) " ! " __STRING(alias) " = " __STRING(sym))
d37 1
a37 1
    __asm__(".section .gnu.warning." __STRING(sym) " ! .ascii \"" msg "\" ; .text")
@


1.5
log
@we do not use _c_label() even
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.4 2002/08/03 03:05:11 fgsch Exp $	*/
d35 1
a35 1
    __asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
d37 1
a37 1
    __asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")
@


1.4
log
@- don't use unexistant as(1) .weakext pseudo; found by todd@@
- remove unused code.
mickey@@ ok.

libc cross-compiling (i386->hppa) reported to work now.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.3 2001/03/29 01:44:53 mickey Exp $	*/
a32 2

#define	_C_LABEL(x)	_STRING(x)
@


1.3
log
@steal alpha cdefs.h for we lack out own anyway
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.8 2001/01/16 00:08:53 art Exp $	*/
a35 4
#ifdef __ELF__

#ifdef __STDC__

a39 24

#else /* !__STDC__ */

#define	__weak_alias(alias,sym)						\
    __asm__(".weak alias ; alias = sym")
#define	__warn_references(sym,msg)					\
    __asm__(".section .gnu.warning.sym ; .ascii msg ; .text")

#endif /* !__STDC__ */

#else /* !__ELF__ */

/*
 * We don't support indirect references and don't do anything with warnings.
 */

#ifdef __STDC__
#define	__weak_alias(alias,sym)		__asm__(".weakext " __STRING(alias) ", " __STRING(sym))
#else /* !__STDC__ */
#define	__weak_alias(alias,sym)		__asm__(".weakext alias, sym")
#endif /* !__STDC__ */
#define	__warn_references(sym,msg)	/* nothing */

#endif /* !__ELF__ */
@


1.3.6.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.3 2001/03/29 01:44:53 mickey Exp $	*/
d34 13
d48 1
a48 1
    __asm__(".export " __STRING(alias) ", entry\n\t.weak " __STRING(alias) "\n\t" __STRING(alias) " = " __STRING(sym))
d50 18
a67 1
    __asm__(".section .gnu.warning." __STRING(sym) "\n\t.ascii \"" msg "\"\n\t.text")
@


1.2
log
@__weak_alias, __warn_references, __indr_reference are unimplemented now; from d@@
@
text
@d1 2
a2 1
/*	$OpenBSD: cdefs.h,v 1.1 1998/06/23 19:45:19 mickey Exp $	*/
d5 1
a5 1
 * Copyright (c) 1995 Carnegie-Mellon University.
d36 32
a67 5
#if 0
#define	__weak_alias(alias,sym)
#define	__indr_reference(sym,msg)
#define	__warn_references(sym,msg)
#endif
@


1.1
log
@some includes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d35 5
a39 2
#define	__indr_references(sym,msg)	/* nothing */
#define	__warn_references(sym,msg)	/* nothing */
@


1.1.8.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 2
/*	$OpenBSD: cdefs.h,v 1.3 2001/03/29 01:44:53 mickey Exp $	*/
/*	$NetBSD: cdefs.h,v 1.5 1996/10/12 18:08:12 cgd Exp $	*/
d4 1
a4 1
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
d35 1
a35 29
#ifdef __ELF__

#ifdef __STDC__

#define	__weak_alias(alias,sym)						\
    __asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)					\
    __asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")

#else /* !__STDC__ */

#define	__weak_alias(alias,sym)						\
    __asm__(".weak alias ; alias = sym")
#define	__warn_references(sym,msg)					\
    __asm__(".section .gnu.warning.sym ; .ascii msg ; .text")

#endif /* !__STDC__ */

#else /* !__ELF__ */

/*
 * We don't support indirect references and don't do anything with warnings.
 */

#ifdef __STDC__
#define	__weak_alias(alias,sym)		__asm__(".weakext " __STRING(alias) ", " __STRING(sym))
#else /* !__STDC__ */
#define	__weak_alias(alias,sym)		__asm__(".weakext alias, sym")
#endif /* !__STDC__ */
a36 2

#endif /* !__ELF__ */
@


1.1.8.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d34 13
d48 1
a48 1
    __asm__(".export " __STRING(alias) ", entry\n\t.weak " __STRING(alias) "\n\t" __STRING(alias) " = " __STRING(sym))
d50 18
a67 1
    __asm__(".section .gnu.warning." __STRING(sym) "\n\t.ascii \"" msg "\"\n\t.text")
@


