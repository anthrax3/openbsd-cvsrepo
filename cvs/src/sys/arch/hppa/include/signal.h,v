head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.8
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.6
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.10
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.12
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.4
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.8
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.7.0.22
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.20
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.16
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.18
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.14
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.12
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.10
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.8
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.6
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.4
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.5.0.6
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.4
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.18
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.16
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.14
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.12
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.10
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.8
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.05.10.18.39.44;	author deraadt;	state Exp;
branches;
next	1.11;
commitid	qfOifNidEGDB2jL1;

1.11
date	2013.04.01.17.18.20;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2012.12.02.07.03.31;	author guenther;	state Exp;
branches;
next	1.9;

1.9
date	2011.11.14.14.29.53;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.08.14.20.17;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.14.21.46.30;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.03.01.03.11;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.04.16.39.24;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.18.15.57.47;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.06.19.39.20;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.19.45.27;	author mickey;	state Exp;
branches
	1.1.8.1
	1.1.18.1;
next	;

1.1.8.1
date	2002.03.06.00.57.22;	author niklas;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2003.06.07.11.11.36;	author ho;	state Exp;
branches;
next	1.1.8.3;

1.1.8.3
date	2004.02.19.10.48.40;	author niklas;	state Exp;
branches;
next	1.1.8.4;

1.1.8.4
date	2004.06.05.23.10.49;	author niklas;	state Exp;
branches;
next	;

1.1.18.1
date	2002.06.11.03.35.37;	author art;	state Exp;
branches;
next	;


desc
@@


1.12
log
@SROP mitigation.  sendsig() stores a (per-process ^ &sigcontext) cookie
inside the sigcontext.  sigreturn(2) checks syscall entry was from the
exact PC addr in the (per-process ASLR) sigtramp, verifies the cookie,
and clears it to prevent sigcontext reuse.
not yet tested on landisk, sparc, *88k, socppc.
ok kettenis
@
text
@/*	$OpenBSD: signal.h,v 1.11 2013/04/01 17:18:20 deraadt Exp $	*/

/* 
 * Copyright (c) 1994, The University of Utah and
 * the Computer Systems Laboratory at the University of Utah (CSL).
 * All rights reserved.
 *
 * Permission to use, copy, modify and distribute this software is hereby
 * granted provided that (1) source code retains these copyright, permission,
 * and disclaimer notices, and (2) redistributions including binaries
 * reproduce the notices in supporting documentation, and (3) all advertising
 * materials mentioning features or use of this software display the following
 * acknowledgement: ``This product includes software developed by the
 * Computer Systems Laboratory at the University of Utah.''
 *
 * THE UNIVERSITY OF UTAH AND CSL ALLOW FREE USE OF THIS SOFTWARE IN ITS "AS
 * IS" CONDITION.  THE UNIVERSITY OF UTAH AND CSL DISCLAIM ANY LIABILITY OF
 * ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * CSL requests users of this software to return to csl-dist@@cs.utah.edu any
 * improvements that they make and grant CSL redistribution rights.
 *
 * 	Utah $Hdr: signal.h 1.3 94/12/16$
 */

#ifndef	_MACHINE_SIGNAL_H_
#define	_MACHINE_SIGNAL_H_

#include <sys/cdefs.h>

/*
 * Machine-dependent signal definitions
 */

typedef int sig_atomic_t;

#ifdef _KERNEL
#include <machine/trap.h>
#endif

#if __BSD_VISIBLE || __XPG_VISIBLE >= 420
/*
 * Information pushed on stack when a signal is delivered.
 * This is used by the kernel to restore state following
 * execution of the signal handler.  It is also made available
 * to the handler to allow it to restore state properly if
 * a non-standard exit is performed.
 */
struct	sigcontext {
	unsigned long	__sc_unused;
	long		sc_mask;	/* signal mask to restore XXX should be int */
	unsigned long	sc_ps;		/* psl to restore */
	unsigned long	sc_fp;		/* fp to restore */
	unsigned long	sc_pcoqh;	/* pc offset queue (head) to restore */
	unsigned long	sc_pcoqt;	/* pc offset queue (tail) to restore */
	unsigned long	sc_resv[2];
	unsigned long	sc_regs[32];
	unsigned long	sc_fpregs[64];
	long		sc_cookie;
};
#endif /* __BSD_VISIBLE || __XPG_VISIBLE >= 420 */
#endif  /* !_MACHINE_SIGNAL_H_ */
@


1.11
log
@Do not expose the trap T_* values to userland, since they invade the
namespace a bit much.  These are the names for the value encoded in
core.c_ucode or siginfo.si_trapno, but userland never looks directly
and only cares about the abstract signal code.
ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.10 2012/12/02 07:03:31 guenther Exp $	*/
d51 1
a51 1
	unsigned long	sc_mask;	/* signal mask to restore */
d59 1
@


1.10
log
@Determine whether we're currently on the alternative signal stack
dynamically, by comparing the stack pointer against the altstack
base and size, so that you get the correct answer if you longjmp
out of the signal handler, as tested by regress/sys/kern/stackjmp/.
Also, fix alt stack handling on vax, where it was completely broken.

Testing and corrections by miod@@, krw@@, tobiasu@@, pirofti@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.9 2011/11/14 14:29:53 deraadt Exp $	*/
d37 1
a37 1
#if __BSD_VISIBLE
@


1.9
log
@merge various differences between hppa and hppa64
ok jsing
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.8 2011/03/23 16:54:35 pirofti Exp $	*/
d50 1
a50 1
	unsigned long	sc_onstack;	/* sigstack state to restore */
@


1.8
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.7 2006/01/08 14:20:17 millert Exp $	*/
d50 9
a58 9
	unsigned	sc_onstack;	/* sigstack state to restore */
	unsigned	sc_mask;	/* signal mask to restore */
	unsigned	sc_ps;		/* psl to restore */
	unsigned	sc_fp;		/* fp to restore */
	unsigned	sc_pcoqh;	/* pc offset queue (head) to restore */
	unsigned	sc_pcoqt;	/* pc offset queue (tail) to restore */
	unsigned	sc_resv[2];
	unsigned	sc_regs[32];
	unsigned	sc_fpregs[64];
@


1.7
log
@Expose struct sigcontext, struct sigstat and struct sigaltstack for XPG4.2
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.6 2005/12/14 21:46:30 millert Exp $	*/
d26 2
a27 2
#ifndef	_HPPA_SIGNAL_H_
#define	_HPPA_SIGNAL_H_
d61 1
a61 1
#endif  /* !_HPPA_SIGNAL_H_ */
@


1.6
log
@convert _FOO_SOURCE -> __FOO_VISIBLE in machine.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.5 2004/04/03 01:03:11 mickey Exp $	*/
d39 1
d41 1
d60 1
a60 1
#endif  /* __BSD_VISIBLE */
@


1.5
log
@make it look more like the other archs
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.4 2003/08/04 16:39:24 mickey Exp $	*/
d29 2
d37 1
a37 1
#ifndef _ANSI_SOURCE
d58 1
a58 1
#endif  /* !_ANSI_SOURCE */
@


1.4
log
@make 'em all unsigned
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.3 2003/05/18 15:57:47 mickey Exp $	*/
d26 3
d35 2
a36 3
#ifndef _POSIX_SOURCE
#include <machine/trap.h>	/* codes for SIGILL, SIGFPE */
#endif
d56 2
@


1.3
log
@save the fpu state for the signal handler. this is essential
as the fpu regs can be used by the gcc even for non-fpu
means and data copying.
rearrange the sigcontext a bit to include only the general
registers that are needed restoring upon return and thus
less waste of space and make up some space for the fpu regs.

ALL software that used the signal context on the stack
needs at least rebuilding now. a new snap has bin built as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.2 2002/02/06 19:39:20 mickey Exp $	*/
d44 9
a52 9
	int	sc_onstack;		/* sigstack state to restore */
	int	sc_mask;		/* signal mask to restore */
	int	sc_ps;			/* psl to restore */
	int	sc_fp;			/* fp to restore */
	int	sc_pcoqh;		/* pc offset queue (head) to restore */
	int	sc_pcoqt;		/* pc offset queue (tail) to restore */
	int	sc_resv[2];
	int	sc_regs[32];
	int	sc_fpregs[64];
@


1.2
log
@implement signal delivery; based on fredette@@'s work
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.1 1998/06/23 19:45:27 mickey Exp $	*/
a46 1
	int	sc_sp;			/* sp to restore */
d50 3
a52 2
	int	sc_resv[5];
	int	sc_tf[64];
@


1.1
log
@some includes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 1
a48 2
	int	sc_ap;			/* ap to restore */
	int	sc_pcsqh;		/* pc space queue (head) to restore */
a49 1
	int	sc_pcsqt;		/* pc space queue (tail) to restore */
d51 2
a52 1
	int	sc_ps;			/* psl to restore */
@


1.1.18.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.1 1998/06/23 19:45:27 mickey Exp $	*/
a45 1
	int	sc_ps;			/* psl to restore */
d48 2
d51 1
d53 1
a53 2
	int	sc_resv[5];
	int	sc_tf[64];
@


1.1.8.1
log
@Merge in trunk
@
text
@a45 1
	int	sc_ps;			/* psl to restore */
d48 2
d51 1
d53 1
a53 2
	int	sc_resv[5];
	int	sc_tf[64];
@


1.1.8.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.1.8.1 2002/03/06 00:57:22 niklas Exp $	*/
d47 1
d51 2
a52 3
	int	sc_resv[2];
	int	sc_regs[32];
	int	sc_fpregs[64];
@


1.1.8.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 9
a52 9
	unsigned	sc_onstack;	/* sigstack state to restore */
	unsigned	sc_mask;	/* signal mask to restore */
	unsigned	sc_ps;		/* psl to restore */
	unsigned	sc_fp;		/* fp to restore */
	unsigned	sc_pcoqh;	/* pc offset queue (head) to restore */
	unsigned	sc_pcoqt;	/* pc offset queue (tail) to restore */
	unsigned	sc_resv[2];
	unsigned	sc_regs[32];
	unsigned	sc_fpregs[64];
@


1.1.8.4
log
@Merge with the trunk
@
text
@a25 3
#ifndef	_HPPA_SIGNAL_H_
#define	_HPPA_SIGNAL_H_

d32 3
a34 2
#ifndef _ANSI_SOURCE
#include <machine/trap.h>
a53 2
#endif  /* !_ANSI_SOURCE */
#endif  /* !_HPPA_SIGNAL_H_ */
@


