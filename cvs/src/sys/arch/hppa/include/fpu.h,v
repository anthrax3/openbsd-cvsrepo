head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.26
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.24
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.20
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.22
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.14
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.18
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.16
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.12
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.10
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.8
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2011.01.08.23.02.04;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.02.00.00.45;	author jsing;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.01.05.33.32;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.29.04.03.22;	author jsing;	state Exp;
branches;
next	;


desc
@@


1.4
log
@forward decl struct proc
@
text
@/*	$OpenBSD: fpu.h,v 1.3 2010/07/02 00:00:45 jsing Exp $	*/

/*
 * Copyright (c) 2010 Joel Sing <jsing@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _MACHINE_FPU_H_
#define _MACHINE_FPU_H_

#include <machine/cpu.h>
#include <machine/reg.h>

struct hppa_fpstate {
	struct fpreg hfp_regs;
	volatile struct cpu_info *hfp_cpu;	/* CPU which FPU state is on. */
};

struct proc;

void	fpu_proc_flush(struct proc *);
void	fpu_proc_save(struct proc *);
void	fpu_cpu_save(int);

#endif /* _MACHINE_FPU_H_ */
@


1.3
log
@Implement FPU shootdowns for hppa multiprocessor kernels. There are still
some subtle bugs however these can be fixed in tree.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.h,v 1.2 2010/07/01 05:33:32 jsing Exp $	*/
d29 2
@


1.2
log
@Create a struct to store FP state and include a pointer to the CPU that
currently holds the FPU context for this process. This will be soon used
to implement FPU shootdowns on multiprocessor kernels.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d32 1
@


1.1
log
@Factor out code used to save and flushe process FPU context.

ok kettenis@@
@
text
@d22 9
a31 1
void	fpu_proc_flush(struct proc *);
@

