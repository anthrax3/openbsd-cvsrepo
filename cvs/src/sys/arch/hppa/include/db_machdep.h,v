head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.6
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.2
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.18.0.6
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.8
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.4
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.17.0.12
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.8
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.6
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.4
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.2
	OPENBSD_5_0:1.16.0.4
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.15.0.22
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.18
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.20
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.16
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.14
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.12
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.10
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.8
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.6
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.14.0.2
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.9.0.6
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.4
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.9
	UBC:1.6.0.2
	UBC_BASE:1.6
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.20
date	2016.04.27.11.10.48;	author mpi;	state Exp;
branches;
next	1.19;
commitid	57btDderNGPG4fjG;

1.19
date	2016.02.27.13.08.06;	author mpi;	state Exp;
branches;
next	1.18;
commitid	hnv9KfQtxhCytAnd;

1.18
date	2014.03.16.20.31.46;	author guenther;	state Exp;
branches;
next	1.17;

1.17
date	2011.11.14.14.29.53;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2010.11.27.19.57.23;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2005.04.19.15.23.07;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2005.01.06.21.08.44;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.06.20.34.07;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2005.01.06.19.52.05;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2004.06.17.00.34.58;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2004.04.07.18.24.19;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2002.10.07.15.32.37;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.15.21.44.18;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.32;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.06.19.53.14;	author miod;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2001.02.16.19.20.13;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.19.43.46;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	99.08.14.03.31.50;	author mickey;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	99.04.20.19.29.12;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.12.05.17.38.34;	author mickey;	state Exp;
branches;
next	;

1.3.4.1
date	2001.04.18.16.06.21;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2001.11.13.21.00.51;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2002.03.28.10.27.10;	author niklas;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	1.3.4.5;

1.3.4.5
date	2004.06.05.23.10.49;	author niklas;	state Exp;
branches;
next	;

1.6.2.1
date	2002.06.11.03.35.37;	author art;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2002.10.29.00.28.03;	author art;	state Exp;
branches;
next	;


desc
@@


1.20
log
@G/C DDB_REGS.
@
text
@/*	$OpenBSD: db_machdep.h,v 1.19 2016/02/27 13:08:06 mpi Exp $	*/

/*
 * Copyright (c) 1998-2005 Michael Shalayeff
 * All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
 * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef	_MACHINE_DB_MACHDEP_H_
#define	_MACHINE_DB_MACHDEP_H_

#include <uvm/uvm_extern.h>

/* types the generic ddb module needs */
typedef	vaddr_t db_addr_t;
typedef	long db_expr_t;

typedef struct trapframe db_regs_t;
extern db_regs_t	ddb_regs;

#define	PC_REGS(regs)	((db_addr_t)(regs)->tf_iioq_head)
#define	SET_PC_REGS(regs, value)					\
do {									\
	(regs)->tf_iioq_tail = 4 +					\
	    ((regs)->tf_iioq_head = (value));				\
} while (0)

/* Breakpoint related definitions */
#define	BKPT_INST	0x00010000	/* break 0,8 */
#define	BKPT_SIZE	sizeof(int)
#define	BKPT_SET(inst)	BKPT_INST

#define	IS_BREAKPOINT_TRAP(type, code) ((type) == T_IBREAK)
#define	IS_WATCHPOINT_TRAP(type, code) ((type) == T_DBREAK)

#define	FIXUP_PC_AFTER_BREAK(regs) ((regs)->tf_iioq_head -= sizeof(int))

#define DB_VALID_BREAKPOINT(addr) db_valid_breakpoint(addr)

static __inline int inst_call(u_int ins) {
	return (ins & 0xfc00e000) == 0xe8000000 ||
	       (ins & 0xfc00e000) == 0xe8004000 ||
	       (ins & 0xfc000000) == 0xe4000000;
}
static __inline int inst_branch(u_int ins) {
	return (ins & 0xf0000000) == 0xe0000000 ||
	       (ins & 0xf0000000) == 0xc0000000 ||
	       (ins & 0xf0000000) == 0xa0000000 ||
	       (ins & 0xf0000000) == 0x80000000;
}
static __inline int inst_return(u_int ins) {
	return (ins & 0xfc00e000) == 0xe800c000 ||
	       (ins & 0xfc000000) == 0xe0000000;
}
static __inline int inst_trap_return(u_int ins)	{
	return (ins & 0xfc001fc0) == 0x00000ca0;
}

#if 0
#define db_clear_single_step(r)	((r)->tf_flags &= ~(PSL_Z))
#define db_set_single_step(r)	((r)->tf_flags |= (PSL_Z))
#else
#define	SOFTWARE_SSTEP		1
#define	SOFTWARE_SSTEP_EMUL	1

static __inline db_addr_t
next_instr_address(db_addr_t addr, int b) {
	return (addr + 4);
}

#define	branch_taken(ins,pc,f,regs)	branch_taken1(ins, pc, regs)
static __inline db_addr_t
branch_taken1(int ins, db_addr_t pc, db_regs_t *regs) {
	return (pc);
}

#endif

int db_valid_breakpoint(db_addr_t);
int db_ktrap(int, int, db_regs_t *);

#endif /* _MACHINE_DB_MACHDEP_H_ */
@


1.19
log
@Rename kdb_trap() into db_ktrap().

The goal is to include it in the list of functions that must not be
instrumented.  All ddb(8) functions should be in this list and have
their names start with 'db_'.

ok visa@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.18 2014/03/16 20:31:46 guenther Exp $	*/
a30 1
#define	DDB_REGS	(&ddb_regs)
@


1.18
log
@DDB supports ELF symbols are all archs, and it's always the same as the
native size, so eliminate the #defines.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.17 2011/11/14 14:29:53 deraadt Exp $	*/
d92 1
a92 1
int kdb_trap(int, int, db_regs_t *);
@


1.17
log
@merge various differences between hppa and hppa64
ok jsing
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.16 2010/11/27 19:57:23 miod Exp $	*/
a23 3

#define	DB_ELF_SYMBOLS
#define	DB_ELFSIZE	32
@


1.16
log
@Remove ddb single-step load and store counters. Most platforms do not
implement them, and they are of questionable usefulness.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.15 2005/04/19 15:23:07 miod Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2004 Michael Shalayeff
d7 3
a9 8
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d11 7
a17 11
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
@


1.15
log
@No more a.out symbols support in ddb.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.14 2005/01/06 21:08:44 miod Exp $	*/
a73 12
}
static __inline int inst_load(u_int ins) {
	return (ins & 0xf0000000) == 0x40000000 ||
	       (ins & 0xf4000200) == 0x24000000 ||
	       (ins & 0xfc000200) == 0x0c000000 ||
	       (ins & 0xfc001fc0) != 0x0c0011c0;
}
static __inline int inst_store(u_int ins) {
	return (ins & 0xf0000000) == 0x60000000 ||	/* st */
	       (ins & 0xf4000200) == 0x24000200 ||	/* fst/cst */
	       (ins & 0xfc000200) == 0x0c000200 ||	/* stby */
	       (ins & 0xfc0003c0) == 0x0c0001c0;	/* ldcw */
@


1.14
log
@A really working SET_PC_REGS(); ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.13 2005/01/06 20:34:07 mickey Exp $	*/
a33 1
#define	DB_AOUT_SYMBOLS
@


1.13
log
@undo moronic french breakage
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.12 2005/01/06 19:52:05 espie Exp $	*/
d47 5
@


1.12
log
@SET_PC_REGS, tested by miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.11 2004/06/17 00:34:58 mickey Exp $	*/
a46 1
#define	SET_PC_REGS(regs, value) (regs)->tf_iioq_head = (unsigned)(value)
@


1.11
log
@ldcw does a store too
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.10 2004/04/07 18:24:19 mickey Exp $	*/
d47 1
@


1.10
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.9 2002/10/07 15:32:37 mickey Exp $	*/
d78 4
a81 3
	return (ins & 0xf0000000) == 0x60000000 ||
	       (ins & 0xf4000200) == 0x24000200 ||
	       (ins & 0xfc000200) == 0x0c000200;
@


1.9
log
@s/PSW_/PSL_/ to match other archs
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.8 2002/03/15 21:44:18 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d19 8
a26 7
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.8
log
@rewrite a pmap to use multilevel page tables.
lower 12 bits contain the perms, no unused bits left,
but a couple for off-tlb use (as the ref implemented now).
do not use the hvt, which might get some use later
if proven to speed thigs up, tlb handlers would po
another dozen of insns though, but if that's worth its...
move on the data seg and map kernel text rdonly (idea form fredette),
since all of the page0 mods done before that we are all fine
except for some viper fluff, but later w/ that.
this also picks up a bit more of ddb magic for bpt and ss.
tlb handlers can use a little bit more of attention,
but things, visually, seem to be much faster already, --
sorry, no benchmarks for now.

* effort sponsored in part by the `henry st. old ale house'
* and mr.pete and mr.lee in particular in thier generous entrirety.
* the proj took a little more that 72man*h as it was expected,
* but within murhy's law estimations.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.7 2002/03/14 01:26:32 millert Exp $	*/
d95 2
a96 2
#define db_clear_single_step(r)	((r)->tf_flags &= ~(PSW_Z))
#define db_set_single_step(r)	((r)->tf_flags |= (PSW_Z))
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.6 2001/11/06 19:53:14 miod Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Michael Shalayeff
d38 1
d57 2
a58 2
#define	IS_BREAKPOINT_TRAP(type, code) 1
#define	IS_WATCHPOINT_TRAP(type, code) 0
d94 19
a112 2
#define db_clear_single_step(r)	((r)->tf_flags |= 0)
#define db_set_single_step(r)	((r)->tf_flags |= 0)
@


1.6
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.5 2001/02/16 19:20:13 mickey Exp $	*/
d96 2
a97 2
int db_valid_breakpoint __P((db_addr_t));
int kdb_trap __P((int, int, db_regs_t *));
@


1.6.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.6 2001/11/06 19:53:14 miod Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
a37 1
#define	DB_AOUT_SYMBOLS
d56 2
a57 2
#define	IS_BREAKPOINT_TRAP(type, code) ((type) == T_IBREAK)
#define	IS_WATCHPOINT_TRAP(type, code) ((type) == T_DBREAK)
d93 2
a94 6
#if 0
#define db_clear_single_step(r)	((r)->tf_flags &= ~(PSW_Z))
#define db_set_single_step(r)	((r)->tf_flags |= (PSW_Z))
#else
#define	SOFTWARE_SSTEP		1
#define	SOFTWARE_SSTEP_EMUL	1
d96 2
a97 15
static __inline db_addr_t
next_instr_address(db_addr_t addr, int b) {
	return (addr + 4);
}

#define	branch_taken(ins,pc,f,regs)	branch_taken1(ins, pc, regs)
static __inline db_addr_t
branch_taken1(int ins, db_addr_t pc, db_regs_t *regs) {
	return (pc);
}

#endif

int db_valid_breakpoint(db_addr_t);
int kdb_trap(int, int, db_regs_t *);
@


1.6.2.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.6.2.1 2002/06/11 03:35:37 art Exp $	*/
d95 2
a96 2
#define db_clear_single_step(r)	((r)->tf_flags &= ~(PSL_Z))
#define db_set_single_step(r)	((r)->tf_flags |= (PSL_Z))
@


1.5
log
@db_elf definitions
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.4 2000/04/06 19:43:46 todd Exp $	*/
d36 1
a36 1
#include <vm/vm.h>
@


1.4
log
@add vm/vm.h for prototypes; from mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.3 1999/08/14 03:31:50 mickey Exp $	*/
d37 3
@


1.3
log
@proper breakpoint instruction
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.2 1999/04/20 19:29:12 mickey Exp $	*/
d35 2
@


1.3.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.5 2001/02/16 19:20:13 mickey Exp $	*/
a34 5

#include <vm/vm.h>

#define	DB_ELF_SYMBOLS
#define	DB_ELFSIZE	32
@


1.3.4.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d36 1
a36 1
#include <uvm/uvm_extern.h>
@


1.3.4.3
log
@Merge in -current from about a week ago
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
a37 1
#define	DB_AOUT_SYMBOLS
d56 2
a57 2
#define	IS_BREAKPOINT_TRAP(type, code) ((type) == T_IBREAK)
#define	IS_WATCHPOINT_TRAP(type, code) ((type) == T_DBREAK)
d93 2
a94 6
#if 0
#define db_clear_single_step(r)	((r)->tf_flags &= ~(PSW_Z))
#define db_set_single_step(r)	((r)->tf_flags |= (PSW_Z))
#else
#define	SOFTWARE_SSTEP		1
#define	SOFTWARE_SSTEP_EMUL	1
d96 2
a97 15
static __inline db_addr_t
next_instr_address(db_addr_t addr, int b) {
	return (addr + 4);
}

#define	branch_taken(ins,pc,f,regs)	branch_taken1(ins, pc, regs)
static __inline db_addr_t
branch_taken1(int ins, db_addr_t pc, db_regs_t *regs) {
	return (pc);
}

#endif

int db_valid_breakpoint(db_addr_t);
int kdb_trap(int, int, db_regs_t *);
@


1.3.4.4
log
@Sync the SMP branch with 3.3
@
text
@d95 2
a96 2
#define db_clear_single_step(r)	((r)->tf_flags &= ~(PSL_Z))
#define db_set_single_step(r)	((r)->tf_flags |= (PSL_Z))
@


1.3.4.5
log
@Merge with the trunk
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2004 Michael Shalayeff
d15 5
d24 7
a30 8
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
@


1.2
log
@uvm names and definitions
@
text
@d1 1
a1 1
/*	$OpenBSD: db_machdep.h,v 1.1 1998/12/05 17:38:34 mickey Exp $	*/
d47 1
a47 1
#define	BKPT_INST	0x00000000	/* break 0,0 */
@


1.1
log
@some db_machdep.h
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
typedef	vm_offset_t db_addr_t;
d44 1
a44 1
#define	PC_REGS(regs)	((db_addr_t)(regs)->iioq_head)
d54 1
a54 1
#define	FIXUP_PC_AFTER_BREAK(regs) ((regs)->tf_regs[FRAME_PC] -= sizeof(int))
d88 2
a89 2
#define db_clear_single_step(r)	((r)->flags |= 0)
#define db_set_single_step(r)	((r)->flags |= 0)
@

