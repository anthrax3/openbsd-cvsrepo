head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.48
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.50
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.46
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.42
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.44
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.36
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.40
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.38
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.34
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.32
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.30
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.28
	OPENBSD_5_0:1.12.0.26
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.24
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.22
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.18
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.20
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.16
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.14
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.12
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.10
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.8
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.11.0.2
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.10.0.2
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.9.0.6
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.4
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.16
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.14
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.8.0.12
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.10
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.6
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.4
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.2
	SMP_BASE:1.8
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.12
date	2005.05.26.04.34.52;	author kettenis;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.17.20.47.40;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2004.04.07.18.24.20;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.17.21.54.25;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.10.20.05.39;	author mickey;	state Exp;
branches
	1.8.2.1
	1.8.12.1;
next	1.7;

1.7
date	2000.01.17.00.02.12;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	99.09.18.20.39.55;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	99.05.03.15.40.27;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	99.05.02.03.41.45;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	99.02.17.20.40.32;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.08.29.01.22.36;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.19.45.28;	author mickey;	state Exp;
branches;
next	;

1.8.2.1
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2004.06.05.23.10.49;	author niklas;	state Exp;
branches;
next	;

1.8.12.1
date	2003.05.19.21.49.42;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Implement PT_STEP for hppa.
ok mickey@@
@
text
@/*	$OpenBSD: trap.h,v 1.11 2005/01/17 20:47:40 mickey Exp $	*/

/*
 * Copyright (c) 1999-2004 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef	_MACHINE_TRAP_H_
#define	_MACHINE_TRAP_H_

/*
 * This is PA-RISC trap types per 1.1 specs, see .c files for references.
 */
#define	T_NONEXIST	0	/* invalid interrupt vector */
#define	T_HPMC		1	/* high priority machine check */
#define	T_POWERFAIL	2	/* power failure */
#define	T_RECOVERY	3	/* recovery counter */
#define	T_INTERRUPT	4	/* external interrupt */
#define	T_LPMC		5	/* low-priority machine check */
#define	T_ITLBMISS	6	/* instruction TLB miss fault */
#define	T_IPROT		7	/* instruction protection */
#define	T_ILLEGAL	8	/* Illegal instruction */
#define	T_IBREAK	9	/* break instruction */
#define	T_PRIV_OP	10	/* privileged operation */
#define	T_PRIV_REG	11	/* privileged register */
#define	T_OVERFLOW	12	/* overflow */
#define	T_CONDITION	13	/* conditional */
#define	T_EXCEPTION	14	/* assist exception */
#define	T_DTLBMISS	15	/* data TLB miss */
#define	T_ITLBMISSNA	16	/* ITLB non-access miss */
#define	T_DTLBMISSNA	17	/* DTLB non-access miss */
#define	T_DPROT		18	/* data protection/rights/alignment <7100 */
#define	T_DBREAK	19	/* data break */
#define	T_TLB_DIRTY	20	/* TLB dirty bit */
#define	T_PAGEREF	21	/* page reference */
#define	T_EMULATION	22	/* assist emulation */
#define	T_HIGHERPL	23	/* higher-privelege transfer */
#define	T_LOWERPL	24	/* lower-privilege transfer */
#define	T_TAKENBR	25	/* taken branch */
#define	T_DATACC	26	/* data access rights >=7100 */
#define	T_DATAPID	27	/* data protection ID >=7100 */
#define	T_DATALIGN	28	/* unaligned data ref */
#define	T_PERFMON	29	/* performance monitor interrupt */
#define	T_IDEBUG	30	/* debug SFU interrupt */
#define	T_DDEBUG	31	/* debug SFU interrupt */

/*
 * Reserved range for traps is 0-63, place user flag at 6th bit
 */
#define	T_USER_POS	25
#define	T_USER		(1 << (31 - T_USER_POS))

/*
 * Various trap frame flags.
 */
#define	TFF_LAST_POS	0
#define	TFF_ITLB_POS	1
#define	TFF_SYS_POS	2
#define	TFF_INTR_POS	3

#define	TFF_LAST	(1 << (31 - TFF_LAST_POS))
#define	TFF_ITLB	(1 << (31 - TFF_ITLB_POS))
#define	TFF_SYS		(1 << (31 - TFF_SYS_POS))
#define	TFF_INTR	(1 << (31 - TFF_INTR_POS))

/*
 * Define this for pretty printings of trapflags.
 */
#define	T_BITS	"\020\07user\036intr\037itlb\040last"

/*
 * These are break instruction entry points.
 */
/* im5 */
#define	HPPA_BREAK_KERNEL	0
/* im13 */
#define HPPA_BREAK_SS		4
#define	HPPA_BREAK_KGDB		5
#define	HPPA_BREAK_GET_PSW	9
#define	HPPA_BREAK_SET_PSW	10
#define	HPPA_BREAK_SPLLOWER	11

/*
 * break instruction decoding.
 */
#define	break5(i)	((i) & 0x1f)
#define	break13(i)	(((i) >> 13) & 0x1fff)

#endif	/* _MACHINE_TRAP_H_ */
@


1.11
log
@proper fault address selection (list all possible pc-based traps)
@
text
@d1 1
a1 1
/*	$OpenBSD: trap.h,v 1.10 2004/04/07 18:24:20 mickey Exp $	*/
d98 1
@


1.10
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: trap.h,v 1.9 2002/12/17 21:54:25 mickey Exp $	*/
d64 3
@


1.9
log
@real interrupts/spl framework.
tested on 712/* 715/100, 715/33 which main cpu/bus types.
miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: trap.h,v 1.8 2000/02/10 20:05:39 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1999 Michael Shalayeff
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.8
log
@clkf_intr() implementation, better clkf_usermode()
@
text
@d1 1
a1 1
/*	$OpenBSD: trap.h,v 1.7 2000/01/17 00:02:12 mickey Exp $	*/
d103 1
a111 1

@


1.8.12.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a102 1
#define	HPPA_BREAK_SPLLOWER	11
d111 1
@


1.8.2.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a102 1
#define	HPPA_BREAK_SPLLOWER	11
d111 1
@


1.8.2.2
log
@Merge with the trunk
@
text
@d4 1
a4 1
 * Copyright (c) 1999-2004 Michael Shalayeff
d15 5
@


1.7
log
@add syscall frame flag
@
text
@d1 1
a1 1
/*	$OpenBSD: trap.h,v 1.6 1999/09/18 20:39:55 mickey Exp $	*/
d82 1
d87 1
d90 1
a90 1
 * Definre this for pretty printings of trapflags.
d92 1
a92 1
#define	T_BITS	"\020\07user\037itlb\040last"
@


1.6
log
@rewrite
add some more trap flags and fix T_USER wrt the pa1.1 specs
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d81 1
d85 1
@


1.5
log
@remove some more of mklinux cruft
@
text
@d1 1
a1 1
/*	$OpenBSD: trap.h,v 1.4 1999/05/02 03:41:45 mickey Exp $	*/
d3 2
a4 3
/* 
 * Copyright (c) 1988-1994, The University of Utah and
 * the Computer Systems Laboratory at the University of Utah (CSL).
d7 13
a19 16
 * Permission to use, copy, modify and distribute this software is hereby
 * granted provided that (1) source code retains these copyright, permission,
 * and disclaimer notices, and (2) redistributions including binaries
 * reproduce the notices in supporting documentation, and (3) all advertising
 * materials mentioning features or use of this software display the following
 * acknowledgement: ``This product includes software developed by the
 * Computer Systems Laboratory at the University of Utah.''
 *
 * THE UNIVERSITY OF UTAH AND CSL ALLOW FREE USE OF THIS SOFTWARE IN ITS "AS
 * IS" CONDITION.  THE UNIVERSITY OF UTAH AND CSL DISCLAIM ANY LIABILITY OF
 * ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * CSL requests users of this software to return to csl-dist@@cs.utah.edu any
 * improvements that they make and grant CSL redistribution rights.
 *
 * 	Utah $Hdr: trap.h 1.6 94/12/16$
d21 11
a31 2
 * 	Utah $Hdr: break.h 1.10 94/12/14$
 *	Author: Bob Wheeler, University of Utah CSL
d34 2
a35 2
#ifndef _MACHINE_TRAP_H_
#define _MACHINE_TRAP_H_
d38 31
a68 34
 * Trap type values
 * also known in trap.c for name strings
 */

#define	T_NONEXIST	0
#define	T_HPMC		1
#define	T_POWERFAIL	2
#define	T_RECOVERY	3
#define	T_INTERRUPT	4
#define	T_LPMC		5
#define	T_ITLBMISS	6
#define	T_IPROT		7
#define	T_ILLEGAL	8
#define	T_IBREAK	9
#define	T_PRIV_OP	10
#define	T_PRIV_REG	11
#define	T_OVERFLOW	12
#define	T_CONDITION	13
#define	T_EXCEPTION	14
#define	T_DTLBMISS	15
#define	T_ITLBMISSNA	16
#define	T_DTLBMISSNA	17
#define	T_DPROT		18
#define	T_DBREAK       	19
#define	T_TLB_DIRTY	20
#define	T_PAGEREF	21
#define	T_EMULATION	22
#define	T_HIGHERPL	23
#define	T_LOWERPL	24
#define	T_TAKENBR	25

#define	T_DATACC	26	/* 7100 */
#define	T_DATAPID	27	/* 7100 */
#define	T_DATALIGN	28	/* 7100 */
d70 5
a74 1
#define	T_USER		0x20	/* user-mode flag or'ed with type */
d76 5
a80 1
/*  Values for break instructions */
d82 2
a83 3
/* values for the im5 field of the break instruction */
#define	HPPA_BREAK_KERNEL	0
#define	HPPA_BREAK_MAYDEBUG	31	/* Reserved for Mayfly debugger. */
d85 4
a88 11
/* values for the im13 field of the break instruction */
#define	HPPA_BREAK_PDC_DUMP  		2
#define	HPPA_BREAK_KERNTRACE		3
#define	HPPA_BREAK_MACH_DEBUGGER	4
#define	HPPA_BREAK_KGDB			5
#define	HPPA_BREAK_KERNPRINT		6
#define	HPPA_BREAK_IVA			7
#define	HPPA_BREAK_PDC_IODC_CALL	8
#define	HPPA_BREAK_GDB			8	/* Standard GDB breakpoint.  */
#define	HPPA_BREAK_GET_PSW		9
#define	HPPA_BREAK_SET_PSW		10
d91 1
a91 1
 * Tear apart a break instruction to find its type.
d93 6
a98 2
#define	break5(x)	((x) & 0x1F)
#define	break13(x)	(((x) >> 13) & 0x1FFF)
d101 1
a101 1
 * Trace debugging.
d103 4
a106 4
#define	HPPA_TRACE_OFF	0
#define	HPPA_TRACE_JUMP      -1
#define	HPPA_TRACE_SUSPEND   -2
#define	HPPA_TRACE_RESUME    -3
a107 1
#endif /* _MACHINE_TRAP_H_ */
@


1.4
log
@new {s,g}et_psw()
@
text
@d1 1
a1 1
/*	$OpenBSD: trap.h,v 1.3 1999/02/17 20:40:32 mickey Exp $	*/
a66 3

#define	T_ICS_OVFL	30	/* SW: interrupt stack overflow */
#define	T_KS_OVFL	31	/* SW: kernel stack overflow */
@


1.3
log
@join
@
text
@d1 1
a1 1
/*	$OpenBSD: trap.h,v 1.2 1998/08/29 01:22:36 mickey Exp $	*/
d88 2
@


1.2
log
@m-include protection
better trap names
remove garbage
@
text
@d1 1
a1 1
/*	$OpenBSD: trap.h,v 1.1 1998/06/23 19:45:28 mickey Exp $	*/
d24 3
d72 30
@


1.1
log
@some includes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d26 3
d35 9
a43 9
#define	T_HPMACH_CHK	1
#define	T_POW_FAIL	2
#define	T_RECOV_CTR	3
#define	T_EXT_INTP	4
#define	T_LPMACH_CHK	5
#define	T_IPGFT		6
#define	T_IMEM_PROT	7
#define	T_UNIMPL_INST	8
#define	T_BRK_INST	9
d46 8
a53 8
#define	T_OVFLO		12
#define	T_COND		13
#define	T_EXCEP		14
#define	T_DPGFT		15
#define	T_IPGFT_NA	16
#define	T_DPGFT_NA	17
#define	T_DMEM_PROT	18
#define	T_DMEM_BREAK	19
d55 9
a63 9
#define	T_VIO_REF	21
#define	T_EMULAT	22
#define	T_HPRIV_XFR	23
#define	T_LPRIV_XFR	24
#define	T_TAKEN_BR	25

#define	T_DMEM_ACC	26	/* 7100 */
#define	T_DMEM_PID	27	/* 7100 */
#define	T_DMEM_UNALIGN	28	/* 7100 */
d70 1
a70 8
/* definitions for <sys/signal.h> */
#define	    ILL_PRIVREG_FAULT	0x4
#define	    ILL_UNIMPL_INST	0x8
#define     ILL_PRIV_OP		0x10
#define     ILL_PRIV_REG	0x11
#define     ILL_OVFLO		0x12
#define     ILL_COND		0x13
#define     ILL_EXCEP		0x14
@

