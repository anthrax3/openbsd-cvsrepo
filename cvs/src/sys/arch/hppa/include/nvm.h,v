head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.76
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.72
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.74
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.66
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.70
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.68
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.64
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.62
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.60
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.58
	OPENBSD_5_0:1.2.0.56
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.54
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.52
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.48
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.50
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.46
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.44
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.42
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.40
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.38
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.36
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.34
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.32
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.30
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.28
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.26
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.24
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.22
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.16
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.6
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	98.11.23.03.28.22;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.19.45.24;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.2
log
@proper m-include protection, some minor cleanups
@
text
@/*	$OpenBSD: nvm.h,v 1.1 1998/06/23 19:45:24 mickey Exp $	*/

/* 
 * Copyright (c) 1990, 1994 The University of Utah and
 * the Computer Systems Laboratory at the University of Utah (CSL).
 * All rights reserved.
 *
 * Permission to use, copy, modify and distribute this software is hereby
 * granted provided that (1) source code retains these copyright, permission,
 * and disclaimer notices, and (2) redistributions including binaries
 * reproduce the notices in supporting documentation, and (3) all advertising
 * materials mentioning features or use of this software display the following
 * acknowledgement: ``This product includes software developed by the
 * Computer Systems Laboratory at the University of Utah.''
 *
 * THE UNIVERSITY OF UTAH AND CSL ALLOW FREE USE OF THIS SOFTWARE IN ITS "AS
 * IS" CONDITION.  THE UNIVERSITY OF UTAH AND CSL DISCLAIM ANY LIABILITY OF
 * ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * CSL requests users of this software to return to csl-dist@@cs.utah.edu any
 * improvements that they make and grant CSL redistribution rights.
 *
 * 	Utah $Hdr: nvm.h 1.4 94/12/14$
 *	Author: Jeff Forys, University of Utah CSL
 */

#ifndef _MACHINE_NVM_H_
#define	_MACHINE_NVM_H_

/*
 * The PDC provides access to Non-Volatile Memory (NVM).  If this
 * is implemented (it's HVERSION dependent), the first 256 bytes
 * are formatted as follows:
 *
 *	0x000	+----------------------------+
 *		| Implementation information |
 *	0x024	+----------------------------+
 *		|                            |
 *		|      IPL information       |
 *		|                            |
 *	0x080	+----------------------------+
 *		|                            |
 *		|                            |
 *		|    OS Panic information    |
 *		|                            |
 *		|                            |
 *	0x100	+----------------------------+
 *
 * It appears that there are at least 256 bytes of NVM, and only
 * the "OS Panic information" is not architected.  This means that
 * we can use locations 0x80 - 0xFF for saving information across
 * boots (e.g. boot flags and boot device).  I think we should use
 * the higher portions of this space first, to avoid conflicting
 * with possible future HP-PA plans for the NVM.
 *
 * The PDC requires that NVM be read/written to in word multiples.
 */

/*
 * Boot flags and boot device (0xF4 - 0xFF).
 */

#define	NVM_BOOTDATA	0xF4		/* location of bootdata in NVM */
#define	NVM_BOOTMAGIC	0xACCEDE	/* magic used for bootdata cksum */
#define	NVM_BOOTCKSUM(bd) \
	((unsigned int) NVM_BOOTMAGIC + (bd).flags + (bd).device)

struct bootdata {
	unsigned int cksum;		/* NVM_BOOTMAGIC + flags + device */
	unsigned int flags;		/* boot flags */
	unsigned int device;		/* boot device */
};

#endif	/* _MACHINE_NVM_H_ */
@


1.1
log
@some includes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d27 2
a28 2
#ifndef _NVM_
#define	_NVM_
d74 1
a74 1
#endif	/* _NVM_ */
@

