head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.2
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.4.0.28
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.24
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.20
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.22
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.14
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.18
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.16
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.12
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.10
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.8
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2017.09.08.05.36.51;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	uRv5pa9QDlZaYgwD;

1.4
date	2011.01.14.13.20.06;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.14.13.09.45;	author jsing;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.02.00.00.45;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.21.15.24.29;	author jsing;	state Exp;
branches;
next	;


desc
@@


1.5
log
@If you use sys/param.h, you don't need sys/types.h
@
text
@/*	$OpenBSD: ipi.c,v 1.4 2011/01/14 13:20:06 jsing Exp $	*/

/*
 * Copyright (c) 2010 Joel Sing <jsing@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/mutex.h>

#include <machine/cpu.h>
#include <machine/cpufunc.h>
#include <machine/fpu.h>
#include <machine/iomod.h>
#include <machine/intr.h>
#include <machine/mutex.h>
#include <machine/reg.h>

void hppa_ipi_nop(void);
void hppa_ipi_halt(void);
void hppa_ipi_fpu_save(void);
void hppa_ipi_fpu_flush(void);

void (*ipifunc[HPPA_NIPI])(void) =
{
	hppa_ipi_nop,
	hppa_ipi_halt,
	hppa_ipi_fpu_save,
	hppa_ipi_fpu_flush
};

void
hppa_ipi_init(struct cpu_info *ci)
{
	/* Initialise IPIs for given CPU. */
	mtx_init(&ci->ci_ipi_mtx, IPL_IPI);
	ci->ci_mask |= (1 << 30);
}

int
hppa_ipi_intr(void *arg)
{
	struct cpu_info *ci = curcpu();
	u_long ipi_pending;
	int bit = 0;

	/* Handle an IPI. */
	mtx_enter(&ci->ci_ipi_mtx);
	ipi_pending = ci->ci_ipi;
	ci->ci_ipi = 0;
	mtx_leave(&ci->ci_ipi_mtx);

	while (ipi_pending) {
		if (ipi_pending & (1L << bit))
			(*ipifunc[bit])();
		ipi_pending &= ~(1L << bit);
		bit++;
	}

	return 1;
}

int
hppa_ipi_send(struct cpu_info *ci, u_long ipi)
{
	struct iomod *cpu;

	if (!(ci->ci_flags & CPUF_RUNNING))
		return -1;

	mtx_enter(&ci->ci_ipi_mtx);
	ci->ci_ipi |= (1L << ipi);
	asm volatile ("sync" ::: "memory");
	mtx_leave(&ci->ci_ipi_mtx);

	/* Send an IPI to the specified CPU by triggering EIR{1} (irq 30). */
	cpu = (struct iomod *)(ci->ci_hpa);
	cpu->io_eir = 1;
	asm volatile ("sync" ::: "memory");

	return 0;
}

int
hppa_ipi_broadcast(u_long ipi)
{
	CPU_INFO_ITERATOR cii;
	struct cpu_info *ci;
	int count = 0;

	CPU_INFO_FOREACH(cii, ci)
		if (ci != curcpu() && (ci->ci_flags & CPUF_RUNNING))
			if (hppa_ipi_send(ci, ipi))
				count++;

	return count;	
}

void
hppa_ipi_nop(void)
{
}

void
hppa_ipi_halt(void)
{
	/* Turn off interrupts and halt CPU. */
	SCHED_ASSERT_UNLOCKED();
	hppa_intr_disable();
	curcpu()->ci_flags &= ~CPUF_RUNNING;

	for (;;) ;
}

void
hppa_ipi_fpu_save(void)
{
	fpu_cpu_save(1);
}

void
hppa_ipi_fpu_flush(void)
{
	fpu_cpu_save(0);
}
@


1.4
log
@Implement a function to broadcast IPIs to all running CPUs.

ok kettenis@@ deraadt@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ipi.c,v 1.2 2010/07/02 00:00:45 jsing Exp $	*/
a19 1
#include <sys/types.h>
@


1.3
log
@Provide an IPI to halt a CPU.

ok kettenis@@ deraadt@@ miod@@
@
text
@d97 15
@


1.2
log
@Implement FPU shootdowns for hppa multiprocessor kernels. There are still
some subtle bugs however these can be fixed in tree.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d33 1
d40 1
d100 11
@


1.1
log
@Add support for IPIs on hppa.

ok kettenis@@
@
text
@d1 2
d19 1
d26 1
d33 2
d38 3
a40 1
	hppa_ipi_nop
d98 12
@

