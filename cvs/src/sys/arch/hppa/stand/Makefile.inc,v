head	1.22;
access;
symbols
	OPENBSD_6_2_BASE:1.22
	OPENBSD_6_1:1.21.0.4
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.20.0.2
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.19.0.12
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.14
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.6
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.10
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.8
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.4
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.2
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.17.0.20
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.18
	OPENBSD_5_0:1.17.0.16
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.14
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.12
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.8
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.10
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.6
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.4
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.14.0.8
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.6
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.4
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.2
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.10.0.2
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.8
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.6
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.4
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.2
	SMP_BASE:1.6
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	mickey-boot:1.1.1.1
	mickey:1.1.1;
locks; strict;
comment	@# @;


1.22
date	2017.07.25.13.32.14;	author robert;	state Exp;
branches;
next	1.21;
commitid	4ug2LPpW6jX7EOsH;

1.21
date	2016.11.06.16.04.20;	author tb;	state Exp;
branches;
next	1.20;
commitid	tupV2UpHQlnB6RWH;

1.20
date	2016.07.04.18.01.44;	author guenther;	state Exp;
branches;
next	1.19;
commitid	MDAws5Y7do6cFWlq;

1.19
date	2012.08.31.16.13.20;	author pascal;	state Exp;
branches;
next	1.18;

1.18
date	2012.08.21.14.46.18;	author pascal;	state Exp;
branches;
next	1.17;

1.17
date	2008.03.04.22.33.03;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2007.11.26.10.26.02;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2007.11.26.10.01.42;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2005.12.30.02.03.49;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2004.07.13.21.03.37;	author marc;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.30.06.02.27;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2003.03.28.22.40.47;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2002.12.08.17.08.32;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.02.09.00.23;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.15.21.22.50;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2000.10.03.23.24.52;	author mickey;	state Exp;
branches
	1.7.8.1;
next	1.6;

1.6
date	99.12.23.04.11.56;	author mickey;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	99.04.20.20.15.13;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	98.10.30.19.46.42;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	98.06.30.13.07.46;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.06.27.02.59.20;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.18.46.40;	author mickey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.06.23.18.46.40;	author mickey;	state Exp;
branches;
next	;

1.6.2.1
date	2001.04.18.16.06.52;	author niklas;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2002.03.28.10.31.03;	author niklas;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	1.6.2.4;

1.6.2.4
date	2003.05.13.19.41.04;	author ho;	state Exp;
branches;
next	;

1.7.8.1
date	2002.06.11.03.35.38;	author art;	state Exp;
branches;
next	1.7.8.2;

1.7.8.2
date	2003.05.19.21.43.13;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.22
log
@change -Os to -Oz all around the tree

clang optimizes better for size with -Oz so use that as a default to avoid
overflowing the ramdisk floppies. gcc now accepts -Oz as an alias for -Os.

ok kettenis@@
@
text
@#	$OpenBSD: Makefile.inc,v 1.21 2016/11/06 16:04:20 tb Exp $

CFLAGS=${DEBUG} -Oz -Wall -Werror
CPPFLAGS+=-I${S} -I. -I${.CURDIR}
SACFLAGS=-nostdinc -fno-builtin -D_STANDALONE -I${STANDIR}/libsa
SACFLAGS+=-mdisable-fpregs -mfast-indirect-calls -mpa-risc-1-1
SACFLAGS+=-fno-stack-protector
#DEBUGFLAGS=-DDEBUG
#DEBUGFLAGS+=-DPDCDEBUG
#DEBUGFLAGS+=-DLIFDEBUG
#DEBUGFLAGS+=-DEXEC_DEBUG
#DEBUGFLAGS+=-DALLOC_TRACE
LINKADDR=0xf80000
LOADADDR=0xf80000
HEAP_LIMIT=0xff8000
CLEANFILES+=	machine

.if !make(clean) && !make(cleandir) && !make(includes) && !make(libdep) && \
    !make(sadep) && !make(salibdir) && !make(obj) && \
    (${MACHINE} == "hppa" && !(defined(PROG) && ${PROG} == "mkboot"))
.BEGIN:
	@@([ -h machine ] || ln -s $(S)/arch/hppa/include machine)
.endif

.if exists(${STANDIR}/libsa/libsa.a)
LIBSA=${STANDIR}/libsa/libsa.a
.else
LIBSA=${STANDIR}/libsa/${__objdir}/libsa.a
.endif
.if exists(${STANDIR}/libz/libz.a)
LIBZ=${STANDIR}/libz/libz.a
.else
LIBZ=${STANDIR}/libz/${__objdir}/libz.a
.endif
.if exists(${STANDIR}/mkboot/mkboot)
MKBOOT=${STANDIR}/mkboot/mkboot
.else
MKBOOT=${STANDIR}/mkboot/${__objdir}/mkboot
.endif

BINDIR=	/usr/mdec
@


1.21
log
@Do not create machine@@ symlinks in obj as root during includes:, but
defer their creation to later, so that they are owned by BUILDUSER.
This eliminates the last root-owned files in obj/ from 'make build'.
In addition, place a MACHINE == hppa test in hppa/stand/Makefile.inc
to avoid creating bogus symlinks on all other archs.

joint work with & ok natano, "let's try it" deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.20 2016/07/04 18:01:44 guenther Exp $
d3 1
a3 1
CFLAGS=${DEBUG} -Os -Wall -Werror
@


1.20
log
@DEBUGLIBS has been broken since the gcc4 switch, so delete it.  CFLAGS
contains -g by default anyway

problem noted by Edgar Pettijohn (edgar (at) pettijohn-web.com)
ok millert@@ kettenis@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.19 2012/08/31 16:13:20 pascal Exp $
d18 3
a20 1
.if !make(libdep) && !make(sadep) && !make(salibdir) && !make(obj) && !(defined(PROG) && ${PROG} == "mkboot")
@


1.19
log
@Kill NOPIE and NOPIE_FLAGS in hppa/stand.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.18 2012/08/21 14:46:18 pascal Exp $
a16 1
DEBUGLIBS=	no
@


1.18
log
@Add NOPIE= bits for sys/arch/*/stand to ensure that bootblocks will always be
built with -fno-pie.  This gets the hairiest part of PIE out of the way ...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.17 2008/03/04 22:33:03 deraadt Exp $
a3 1
CFLAGS+=${NOPIE_FLAGS}
@


1.17
log
@Move bootblocks to just under 16MB instead of just under 8MB, because
bsd.rd has grown to that point, as discovered by sthen.  Discussed with
Miod and Kettenis, and re-tested to work by sthen
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.16 2007/11/26 10:26:02 deraadt Exp $
d4 1
@


1.16
log
@few more dribbles of LIBKERN cleanup
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.15 2007/11/26 10:01:42 deraadt Exp $
d13 3
a15 3
LINKADDR=0x780000
LOADADDR=0x780000
HEAP_LIMIT=0x7f8000
@


1.15
log
@More LIBKERN bits that go away
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 2005/12/30 02:03:49 millert Exp $
d19 1
a19 1
.if !make(libdep) && !make(sadep) && !make(salibdir) && !make(kernlibdir) && !make(obj) && !(defined(PROG) && ${PROG} == "mkboot")
@


1.14
log
@Now that errno.h and sys/errno.h are separate header files there is no
need to use the -Derrno=errno workaround added when __errno() was
introduced.  OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 2004/07/13 21:03:37 marc Exp $
a27 5
.endif
.if exists(${STANDIR}/libkern/libkern.a)
LIBKERN=${STANDIR}/libkern/libkern.a
.else
LIBKERN=${STANDIR}/libkern/${__objdir}/libkern.a
@


1.13
log
@errno changes, lib major version bumps, and general flag day
To build you must:
cd /usr/src && make obj && make includes
cd lib/libc && make depend && make && NOMAN=1 sudo make install
cd /usr/src && make build
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 2003/04/30 06:02:27 mickey Exp $
d4 1
a4 1
CPPFLAGS+=-I${S} -I. -I${.CURDIR} -Derrno=errno
@


1.12
log
@now that we use less memory we can push the boot a little higher (to help some ramdisk kernels beathe better. also always compile for 1.1 -- no reason in 1.0 restriction
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 2003/03/28 22:40:47 mickey Exp $
d4 1
a4 1
CPPFLAGS+=-I${S} -I. -I${.CURDIR}
@


1.11
log
@s/SADIR/STANDIR/ to avoid conflict w/ the libsa; install raw boot as well as cooked
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 2002/12/08 17:08:32 mickey Exp $
d6 1
a6 1
SACFLAGS+=-mdisable-fpregs -mfast-indirect-calls -mpa-risc-1-0
d13 3
a15 3
LINKADDR=0x700000
LOADADDR=0x700000
HEAP_LIMIT=0x7c0000
@


1.10
log
@put the -fno-stack-protector into a proper place
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2002/12/02 09:00:23 miod Exp $
d5 1
a5 1
SACFLAGS=-nostdinc -fno-builtin -D_STANDALONE -I${SADIR}/libsa
d24 2
a25 2
.if exists(${SADIR}/libsa/libsa.a)
LIBSA=${SADIR}/libsa/libsa.a
d27 1
a27 1
LIBSA=${SADIR}/libsa/${__objdir}/libsa.a
d29 2
a30 2
.if exists(${SADIR}/libkern/libkern.a)
LIBKERN=${SADIR}/libkern/libkern.a
d32 1
a32 1
LIBKERN=${SADIR}/libkern/${__objdir}/libkern.a
d34 2
a35 2
.if exists(${SADIR}/libz/libz.a)
LIBZ=${SADIR}/libz/libz.a
d37 1
a37 1
LIBZ=${SADIR}/libz/${__objdir}/libz.a
d39 2
a40 2
.if exists(${SADIR}/mkboot/mkboot)
MKBOOT=${SADIR}/mkboot/mkboot
d42 1
a42 1
MKBOOT=${SADIR}/mkboot/${__objdir}/mkboot
@


1.9
log
@Import propolice (http://www.trl.ibm.com/projects/security/ssp), a stack
attack protection scheme, into gcc.

This protection is enabled by default. It can be turned off by using the
-fno-stack-protector flag.

Code by Hiroaki Etoh (etoh at jp dot ibm dot com); work on openbsd-specific
integration by fgsch@@, deraadt@@ and myself; tests by fgsch@@, naddy@@ and
myself; beer drinking by myself.

Please note that system upgrades with this new code will require a new
libc and ld.so to be build and installed before the propolice-enabled
compiler can be installed.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2002/03/15 21:22:50 mickey Exp $
a3 1
CFLAGS+=	-fno-stack-protector
d7 1
@


1.8
log
@build really really small
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2000/10/03 23:24:52 mickey Exp $
d4 1
@


1.7
log
@do not build debug libs, ovewriting a possible setting in the mk.conf
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 1999/12/23 04:11:56 mickey Exp $
d3 1
a3 1
CFLAGS=${DEBUG} -O2 -g -Wall -Werror
@


1.7.8.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2000/10/03 23:24:52 mickey Exp $
d3 1
a3 1
CFLAGS=${DEBUG} -Os -Wall -Werror
@


1.7.8.2
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
d5 2
a6 3
SACFLAGS=-nostdinc -fno-builtin -D_STANDALONE -I${STANDIR}/libsa
SACFLAGS+=-mdisable-fpregs -mfast-indirect-calls -mpa-risc-1-1
SACFLAGS+=-fno-stack-protector
d12 3
a14 3
LINKADDR=0x780000
LOADADDR=0x780000
HEAP_LIMIT=0x7f8000
d23 2
a24 2
.if exists(${STANDIR}/libsa/libsa.a)
LIBSA=${STANDIR}/libsa/libsa.a
d26 1
a26 1
LIBSA=${STANDIR}/libsa/${__objdir}/libsa.a
d28 2
a29 2
.if exists(${STANDIR}/libkern/libkern.a)
LIBKERN=${STANDIR}/libkern/libkern.a
d31 1
a31 1
LIBKERN=${STANDIR}/libkern/${__objdir}/libkern.a
d33 2
a34 2
.if exists(${STANDIR}/libz/libz.a)
LIBZ=${STANDIR}/libz/libz.a
d36 1
a36 1
LIBZ=${STANDIR}/libz/${__objdir}/libz.a
d38 2
a39 2
.if exists(${STANDIR}/mkboot/mkboot)
MKBOOT=${STANDIR}/mkboot/mkboot
d41 1
a41 1
MKBOOT=${STANDIR}/mkboot/${__objdir}/mkboot
@


1.6
log
@disable all debugs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 1999/04/20 20:15:13 mickey Exp $
d16 1
@


1.6.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2000/10/03 23:24:52 mickey Exp $
a15 1
DEBUGLIBS=	no
@


1.6.2.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
#	$OpenBSD$
d3 1
a3 1
CFLAGS=${DEBUG} -Os -Wall -Werror
@


1.6.2.3
log
@Sync the SMP branch with 3.3
@
text
@a6 1
SACFLAGS+=-fno-stack-protector
@


1.6.2.4
log
@Sync the SMP branch to -current.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6.2.3 2003/03/27 23:26:54 niklas Exp $
d5 2
a6 2
SACFLAGS=-nostdinc -fno-builtin -D_STANDALONE -I${STANDIR}/libsa
SACFLAGS+=-mdisable-fpregs -mfast-indirect-calls -mpa-risc-1-1
d13 3
a15 3
LINKADDR=0x780000
LOADADDR=0x780000
HEAP_LIMIT=0x7f8000
d24 2
a25 2
.if exists(${STANDIR}/libsa/libsa.a)
LIBSA=${STANDIR}/libsa/libsa.a
d27 1
a27 1
LIBSA=${STANDIR}/libsa/${__objdir}/libsa.a
d29 2
a30 2
.if exists(${STANDIR}/libkern/libkern.a)
LIBKERN=${STANDIR}/libkern/libkern.a
d32 1
a32 1
LIBKERN=${STANDIR}/libkern/${__objdir}/libkern.a
d34 2
a35 2
.if exists(${STANDIR}/libz/libz.a)
LIBZ=${STANDIR}/libz/libz.a
d37 1
a37 1
LIBZ=${STANDIR}/libz/${__objdir}/libz.a
d39 2
a40 2
.if exists(${STANDIR}/mkboot/mkboot)
MKBOOT=${STANDIR}/mkboot/mkboot
d42 1
a42 1
MKBOOT=${STANDIR}/mkboot/${__objdir}/mkboot
@


1.5
log
@move load address to 0x700000, so we fit w/ ramdisk
heap limit on 0xc0000
remove networking stuff
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 1998/10/30 19:46:42 mickey Exp $
d7 1
a7 1
DEBUGFLAGS=-DDEBUG
d10 2
a11 2
DEBUGFLAGS+=-DEXEC_DEBUG
# DEBUGFLAGS+=-DALLOC_TRACE
@


1.4
log
@some more debugs for now
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 1998/06/30 13:07:46 mickey Exp $
d5 1
a5 1
SACFLAGS=-nostdinc -fno-builtin
a6 1
SACFLAGS+=-D_STANDALONE -I${SADIR}/libsa
d8 2
a9 2
DEBUGFLAGS+=-DPDCDEBUG
DEBUGFLAGS+=-DLIFDEBUG
d12 3
a14 6
# DEBUGFLAGS+=-DBOOTP_DEBUG -DNETIF_DEBUG -DETHER_DEBUG
# DEBUGFLAGS+=-DNFS_DEBUG -DRPC_DEBUG -DRARP_DEBUG
LINKADDR=0x500000
LOADADDR=0x500000
HEAP_LIMIT=0x600000
#ROM_SIZE=32768
a42 1
# NO_NET=no_net
@


1.3
log
@nuke custom build rules
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 1998/06/27 02:59:20 mickey Exp $
d3 1
a3 1
CFLAGS=${DEBUG} -O2 -Wall -Werror
d9 2
@


1.2
log
@gen boot.lif automagically
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1.1.1 1998/06/23 18:46:40 mickey Exp $
d9 1
a9 1
# DEBUGFLAGS+=-DEXEC_DEBUG
a23 18
.if 0
.if $(CC) != $(HOSTCC)
.S.o .s.o:
	@@echo "${CPP} ${CPPFLAGS} ${CFLAGS:M-[ID]*} ${AINC} ${.IMPSRC} | \
	${AS} -o ${.TARGET}"
	@@${CPP} ${CPPFLAGS} ${CFLAGS:M-[ID]*} ${AINC} ${.IMPSRC} | \
	${AS} -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

.c.o:
	${CC} -S ${CFLAGS} ${CPPFLAGS} ${CFLAGS:M-[ID]*} ${.IMPSRC}
	${AS} $*.s -o ${.TARGET}.o
	@@rm $*.s
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
.endif
.endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD$
d24 1
d41 1
a41 1

d56 5
@


1.1.1.1
log
@ok, it boots, include and libkern to come
@
text
@@
