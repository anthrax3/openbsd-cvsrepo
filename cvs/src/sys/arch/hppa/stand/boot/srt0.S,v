head	1.11;
access;
symbols
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.22
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.18
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.20
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.12
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.16
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.14
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.10
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.8
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.6
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.10.0.24
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.22
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.18
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.20
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.16
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.14
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.12
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.10
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.10
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.8
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.6
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.7.0.4
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.10
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.8
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.6
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.4
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	mickey-boot:1.1.1.1
	mickey:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2011.04.17.09.49.48;	author kettenis;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.07.00.21.51;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2004.04.07.18.24.20;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.19.08.19.45;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.16.23.57.35;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	99.05.06.02.29.56;	author mickey;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	99.04.20.20.04.05;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	99.01.25.21.53.31;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	98.08.29.01.54.25;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.07.20.18.40.30;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.18.46.41;	author mickey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.06.23.18.46.41;	author mickey;	state Exp;
branches;
next	;

1.6.4.1
date	2001.07.04.10.16.13;	author niklas;	state Exp;
branches;
next	1.6.4.2;

1.6.4.2
date	2003.06.07.11.11.36;	author ho;	state Exp;
branches;
next	1.6.4.3;

1.6.4.3
date	2004.06.05.23.10.49;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Tweak the behaviour of boot(8) on hppa.  Normal boots now will give you a
chance to interrupt the boot procedure before booting the default kernel,
just like (most) of our other hardware platforms.  Interactive boots, where
you interrupt the firmware boot procedure and answer "Y" to the
"Interact with IPL?" question will now wait for human intervention at the
boot> prompt (without a timeout).  Should reduce frustration when trying to
boot an alternative kernel.

ok deraadt@@, miod@@, jsing@@, todd@@
@
text
@/*	$OpenBSD: srt0.S,v 1.10 2005/04/07 00:21:51 mickey Exp $	*/

/*
 * Copyright (c) 1998-2004 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * Copyright 1996 1995 by Open Software Foundation, Inc.   
 *              All Rights Reserved 
 *  
 * Permission to use, copy, modify, and distribute this software and 
 * its documentation for any purpose and without fee is hereby granted, 
 * provided that the above copyright notice appears in all copies and 
 * that both the copyright notice and this permission notice appear in 
 * supporting documentation. 
 *  
 * OSF DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE 
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
 * FOR A PARTICULAR PURPOSE. 
 *  
 * IN NO EVENT SHALL OSF BE LIABLE FOR ANY SPECIAL, INDIRECT, OR 
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM 
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN ACTION OF CONTRACT, 
 * NEGLIGENCE, OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION 
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. 
 * 
 */
;
; Copyright (c) 1990 mt Xinu, Inc.  All rights reserved.
; Copyright (c) 1990 University of Utah.  All rights reserved.
;
; This file may be freely distributed in any form as long as
; this copyright notice is included.
; THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
; IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
; WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
;
;	Utah $Hdr: srt0.c 1.3 94/12/13$
;

#define	_LOCORE
#include <machine/asm.h>
#include <machine/cpu.h>
#include <machine/iomod.h>

/*
 * This is the ending of the begin
 */
ENTRY(begin,0)

	blr	%r0,%r5			; Get address of 'boff' into 'r5',
	ldo	begin-boff(%r5),%r5	;   and subtract to get 'begin'.
boff
	ldil	L%RELOC,%r4
	ldo	R%RELOC(%r4),%r4
	ldo	start-begin(%r4),%rp
	ldil	L%edata,%r3
	ldo	R%edata(%r3),%r3	; Get address of edata.
	ldil	L%begin,%r1
	ldo	R%begin(%r1),%r1	; Get address of begin
	sub	%r3,%r1,%r3		; Subtract to get # of bytes to copy
copyloop				; do
	ldwm	4(%r5),%r1		;   *r4++ = *r5++;
	addib,>= -4,%r3,copyloop	; while (--r3 >= 0);
	stwm	%r1,4(%r4)

	; here we zero the .bss
	ldil	L%__bss_start, %r4
	ldo	R%__bss_start(%r4), %r4
	ldil	L%__bss_end, %r3
	ldo	R%__bss_end(%r3), %r3
zeroloop
	combf,<,n %r3,%r4, zeroloop	; while (r4 < r3);
	stwm	%r0,4(%r4)		;	*r4++ = 0;

	ldil	L%$global$,%dp
	ldo	R%$global$(%dp),%dp
	ldil	L%start,%r1
	ldo	R%start(%r1),%r1
	sub	%dp,%r1,%dp		; Subtract to get difference
	add	%rp,%dp,%dp		;   and relocate it.

;
; We have relocated ourself to RELOC.  If we are running on a machine
; with separate instruction and data caches, we must flush our data
; cache before trying to execute the code starting at rp.
;
	ldil	L%RELOC,%r22		; Set %t1 to start of relocated code.
	ldo	R%RELOC(%r22),%r22
	ldil	L%edata,%r21		; Set r21 to address of edata
	ldo	R%edata(%r21),%r21
	ldil	L%begin,%r1		; set %r1 to address of begin
	ldo	R%begin(%r1),%r1
	sub	%r21,%r1,%r21		; Subtract to get length
	mtsp	%r0,%sr0		; Set sr0 to kernel space.
	ldo	-1(%r21),%r21
	fdc	%r21(0,%r22)
loop	addib,>,n -16,%r21,loop		; Decrement by cache line size (16).
	fdc	%r21(%sr0,%r22)
	fdc	0(%sr0,%r22)		; Flush first word at addr to handle
	sync				;   arbitrary cache line boundary.
	nop				; Prevent prefetching.
	nop
	nop
	nop
	nop
	nop
	nop
	bv	0(rp)
	nop
EXIT(begin)				/* jump to relocated code */

start
	ldil	L%HEAP_LIMIT, %sp
	ldo	R%HEAP_LIMIT(%sp), %sp

	comb,=	%r0, %r26, call_boot
	nop
	.import	boottimeout, data
	ldil	L%boottimeout, %r22
	stw	%r0, R%boottimeout(%r22)

call_boot
	b	boot			; Call boot(),
	copy	%r0, arg0		; use default boot device
	nop

/*
 * rtt - restart the box
 */
LEAF_ENTRY(_rtt)
	ldil    L%HPPA_LBCAST, %r25
	ldi     CMD_RESET, %r26
	stw     %r26,R%iomod_command(%r25)
forever                                 ; Loop until bus reset takes effect.
	b,n     forever

	bv	0(rp)
	ldo     -48(sp),sp
EXIT(_rtt)

	.end
@


1.10
log
@64bit-friendly pdc.h and iomod.h and correspondent changes elsewhere
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.9 2004/04/07 18:24:20 mickey Exp $	*/
d138 7
a144 3
	.import	bootprompt, data
	ldil	L%bootprompt, t1
	stw	r26, R%bootprompt(t1)
@


1.9
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.8 2003/05/19 08:19:45 mickey Exp $	*/
d63 2
a65 1
#include <machine/asm.h>
d149 1
a149 1
	ldil    L%LBCAST_ADDR, %r25
@


1.8
log
@say to skip the interactive part should the pdc say so
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.7 2001/05/16 23:57:35 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Michael Shalayeff
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d19 8
a26 7
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.7
log
@entry,leaf_entry proper
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.6 1999/05/06 02:29:56 mickey Exp $	*/
d141 3
@


1.6
log
@cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.5 1999/04/20 20:04:05 mickey Exp $	*/
d73 1
a73 1
ENTRY(begin)
d148 1
a148 1
ENTRY(_rtt)
@


1.6.4.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.6 1999/05/06 02:29:56 mickey Exp $	*/
d73 1
a73 1
ENTRY(begin,0)
d148 1
a148 1
LEAF_ENTRY(_rtt)
@


1.6.4.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.6.4.1 2001/07/04 10:16:13 niklas Exp $	*/
a140 3
	.import	bootprompt, data
	ldil	L%bootprompt, t1
	stw	r26, R%bootprompt(t1)
@


1.6.4.3
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1998-2004 Michael Shalayeff
d15 5
d24 7
a30 8
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
@


1.5
log
@cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.4 1999/01/25 21:53:31 mickey Exp $	*/
d85 1
a85 1
	sub	%r3,%r1,%r3		; Subtract to get # to bytes to copy
d123 2
a124 2
	fdc	%r21(0,%r22)
	fdc	0(0,%r22)		; Flush first word at addr to handle
@


1.4
log
@call diskless kernel "bsd" so it would be loaded even we have
problems w/ kbd on PDC console device.
remove neva-gonna-b-there stuff from conf.c
some improvements to srt0.S code, use constants defined in machine/ files.
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.3 1998/08/29 01:54:25 mickey Exp $	*/
d92 4
a95 3
	ldil	L%end, %r3		; the end of all
	ldil	L%__bss_start, %r4	; .bss is here
	sub	%r3,%r4,%r3
d97 1
a97 1
	addib,>= -4,%r3,zeroloop	; while (--r3 >= 0);
d133 2
d138 2
a139 3
	ldil	L%stack_base,%sp
	ldo	R%stack_base(%sp),%sp
	dep	%r0,31,6,%sp		;   and ensure maximum alignment.	
d143 1
d155 1
a157 5

	.SPACE	$PRIVATE$
	.EXPORT	$global$
$global$
	.WORD	0
@


1.3
log
@general cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.2 1998/07/20 18:40:30 mickey Exp $	*/
d4 29
a67 1

d71 1
d73 1
a73 1
	ENTRY(begin)
d92 1
a92 1
	ldil	L%end, %r3		; the end af all
d132 1
a132 1
	EXIT(begin)			/* jump to relocated code */
d139 1
a140 1
	b,n	boot			; Call boot(),
d145 2
a146 1
	ENTRY(_rtt)
d148 1
a148 2
	ldil    L%LBCAST_ADDR, %r25
	stw     %r26,R%48(%r25)		; iomod->io_command
d153 1
a153 1
	EXIT(_rtt)
a155 1
;	.SUBSPA	$GLOBAL$
@


1.2
log
@real reboot on exit()
@
text
@d1 1
a1 1
/*	$OpenBSD: srt0.S,v 1.1.1.1 1998/06/23 18:46:41 mickey Exp $	*/
a23 3
/*
 * pmk1.1
 */
a36 4
;
; Startup code for standalone HP700 system.
;

d89 1
a89 1
	mtsp	%r0,%sr0			; Set sr0 to kernel space.
d110 1
d117 3
a119 3
	ldi     CMD_RESET,r26
	ldil    L%LBCAST_ADDR,r25
	stw     r26,R%48(r25)		; iomod->io_command
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 2
a45 1
#include <sys/reboot.h>
d47 1
a47 10
;
; Define our Stack Unwind spaces/variables.
;
	.SPACE	$TEXT$
;	.SUBSPA	$UNWIND_START$,QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=56
	.EXPORT	$UNWIND_START
$UNWIND_START
;	.SUBSPA	$UNWIND_END$,QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=73
	.EXPORT	$UNWIND_END
$UNWIND_END
d49 3
a52 25
	.space  $PRIVATE$
	.subspa $DATA$
	.import howto,data
	.import rstaddr,data
	.import stack_base,data

;
; Execution begins here.
;
; We are called by the PDC as:
;
;	begin(interactive, endaddr)
;
; Where:
;
;	interactive - 0 if not interactive, 1 if interactive.
;
	.SPACE	$TEXT$
;	.SUBSPA	$FIRST$
	.EXPORT	begin,entry
	.IMPORT	boot,code
	.IMPORT	pdc_init,code
	.IMPORT	end,DATA

begin
d110 1
a110 2
	bv	%r0(%rp)		; Jump to relocated start
	stw	%rp,rstaddr-$global$(%dp) ;   saving address for _rtt.
d117 1
a117 2
;	bl	pdc_init,%rp		; Initialize PDC and related variables
;	ldo	64(%sp),%sp		;   and push our first stack frame.
d119 9
a127 48
	b	boot			; Call boot(),
	ldw	rstaddr-$global$(%dp),%rp ;   a return will go back to start().

;
; rtt - restart boot device selection (after ^C, etc).
;
	.IMPORT	howto,DATA
	.IMPORT	rstaddr,DATA
	.EXPORT	_rtt
_rtt
	ldi	RB_ASKNAME+RB_SINGLE,%r1     ; Restarts get RB_SINGLE|RB_ASKNAME
	stw	%r1,howto-$global$(%dp)		;   and save in 'howto'.
	ldw	rstaddr-$global$(%dp),%rp	; Load restart address into 'rp'
	bv,n	%r0(%rp)			;   and branch to it.
	or	%r0,%r0,%r0
#if 0
	.EXPORT	execute,entry
	.IMPORT	pdc,DATA
	.PROC
	.CALLINFO
	.ENTRY
execute	
	mtsm	%r0			; Disable traps and interrupts.
	mtctl	%r0,%cr17		; Clear two-level IIA Space Queue
	mtctl	%r0,%cr17		;    effectively setting kernel space.
	mtctl	%arg0,%cr18		; Stuff entry point into head of IIA
	ldo	4(%arg0),%arg0		;    Offset Queue, and entry point + 4
	mtctl	%arg0,%cr18		;    into tail of IIA Offset Queue.
	ldi	0x9,%arg0		; Set PSW Q & I bits (collect intrpt
	mtctl	%arg0,%ipsw		;    state, allow external intrpts).
	copy	%arg2,%arg0
	.EXIT
	rfi				; Begin execution of kernel.
	nop
	.PROCEND

	.export getdp
getdp	.proc
	.callinfo

	bv	0(%rp)
	or	%dp,%r0,%ret0

	.procend

	.export getsp
getsp	.proc
	.callinfo
d129 2
a130 2
	bv	0(%rp)
	or	%sp,%r0,%ret0
a131 2
	.procend
#endif
@


1.1.1.1
log
@ok, it boots, include and libkern to come
@
text
@@
