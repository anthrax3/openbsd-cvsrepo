head	1.27;
access;
symbols
	OPENBSD_6_2_BASE:1.27
	OPENBSD_6_1:1.27.0.4
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.25.0.2
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.24.0.8
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.24.0.10
	OPENBSD_5_8_BASE:1.24
	OPENBSD_5_7:1.24.0.2
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.24.0.6
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.24.0.4
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.23.0.4
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.23.0.2
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.21.0.6
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.4
	OPENBSD_5_0:1.21.0.2
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.20.0.14
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.12
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.8
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.10
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.6
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.20.0.4
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.20.0.2
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.19.0.4
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.19.0.2
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.18.0.14
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.12
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.10
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.8
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.18.0.6
	OPENBSD_3_6_BASE:1.18
	SMP_SYNC_A:1.18
	SMP_SYNC_B:1.18
	OPENBSD_3_5:1.18.0.4
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	UBC_SYNC_A:1.17
	OPENBSD_3_3:1.16.0.2
	OPENBSD_3_3_BASE:1.16
	OPENBSD_3_2:1.10.0.12
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.10
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.11
	UBC:1.10.0.8
	UBC_BASE:1.10
	OPENBSD_3_0:1.10.0.6
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.4
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.4
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.2
	SMP_BASE:1.9
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	mickey-boot:1.1.1.1
	mickey:1.1.1;
locks; strict;
comment	@# @;


1.27
date	2016.11.27.01.36.30;	author deraadt;	state Exp;
branches;
next	1.26;
commitid	QJqhxaJ9laUvMi1I;

1.26
date	2016.07.30.03.25.48;	author guenther;	state Exp;
branches;
next	1.25;
commitid	HVbAtwruDlJazNH2;

1.25
date	2016.03.30.06.38.45;	author jmc;	state Exp;
branches;
next	1.24;
commitid	LN9ijdk9SEnzWAbM;

1.24
date	2013.08.16.08.16.45;	author otto;	state Exp;
branches;
next	1.23;

1.23
date	2012.08.31.16.13.20;	author pascal;	state Exp;
branches;
next	1.22;

1.22
date	2012.08.21.14.46.18;	author pascal;	state Exp;
branches;
next	1.21;

1.21
date	2011.07.09.15.27.11;	author jsing;	state Exp;
branches;
next	1.20;

1.20
date	2007.11.26.08.36.49;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2006.10.30.18.28.57;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.19.00.03.51;	author david;	state Exp;
branches;
next	1.17;

1.17
date	2003.03.28.22.40.47;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	2003.01.27.23.56.44;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2003.01.16.19.13.05;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2002.12.19.00.28.54;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2002.12.18.14.06.05;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2002.12.18.01.20.41;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2002.10.24.19.27.15;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2000.05.31.19.56.51;	author mickey;	state Exp;
branches
	1.10.8.1;
next	1.9;

1.9
date	99.12.23.02.42.23;	author mickey;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	99.07.08.20.11.52;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	99.04.20.20.08.27;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	99.04.20.20.05.22;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	99.01.25.21.53.31;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	98.09.29.07.14.52;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	98.08.29.01.49.26;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.06.27.02.59.21;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.18.46.41;	author mickey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.06.23.18.46.41;	author mickey;	state Exp;
branches;
next	;

1.9.2.1
date	2001.04.18.16.06.53;	author niklas;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	1.9.2.3;

1.9.2.3
date	2003.05.13.19.41.04;	author ho;	state Exp;
branches;
next	1.9.2.4;

1.9.2.4
date	2004.02.19.10.48.40;	author niklas;	state Exp;
branches;
next	;

1.10.8.1
date	2002.10.29.00.28.03;	author art;	state Exp;
branches;
next	1.10.8.2;

1.10.8.2
date	2003.05.19.21.43.13;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.27
log
@ashldi3 is now needed
@
text
@#	$OpenBSD: Makefile,v 1.26 2016/07/30 03:25:48 guenther Exp $

MAN=	boot.8
MANSUBDIR=hppa
S	=${.CURDIR}/../../../..
CLEANFILES+=	boot.gdb boot.map boot.lif

.if ${MACHINE} == "hppa"
PROG=	boot
SRCS=	srt0.S exec.c conf.c

.PATH:	${S}/stand/boot
SRCS+=	bootarg.c boot.c vars.c cmd.c 

.PATH:	${S}/lib/libkern/arch/hppa ${S}/lib/libkern
SRCS+=	milli.S ashldi3.c ashrdi3.c memcmp.c memcpy.c memset.c \
	moddi3.c muldi3.c qdivrem.c strcmp.c strlcpy.c strlen.c \
	strncmp.c strncpy.c divdi3.c

LD?=	ld
LDFLAGS+=-Bstatic -nostartfiles -nostdlib -N -Ttext $(LINKADDR) -nopie -znorelro
LDFLAGS+=-T ${.CURDIR}/ld.script -Map boot.map
SIZE?=	size
STRIP?=	strip
STANDIR=${.CURDIR}/..
CRTBEGIN=
CRTEND=
LINKS=	${BINDIR}/boot.lif ${BINDIR}/sdboot \
	${BINDIR}/boot.lif ${BINDIR}/stboot \
	${BINDIR}/boot.lif ${BINDIR}/xxboot

LDADD=	${LIBSA} ${LIBZ}
DPADD=	${LIBSA} ${LIBZ}

all:	boot.lif

realinstall:
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m ${BINMODE} \
	    boot ${DESTDIR}${BINDIR}
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m ${BINMODE} \
	    boot.lif ${DESTDIR}${BINDIR}

# probably we should check for 256k limit for ISL
boot.lif:	${PROG} ${ADDBOOT}
	-@@cp ${PROG} ${PROG}.gdb
	${STRIP} ${PROG}
	${MKBOOT} -v ${PROG} ${ADDBOOT} boot.lif

${PROG}: $(OBJS) $(DPADD)
	$(LD) $(LDFLAGS) -o $(PROG) $(OBJS) $(LDADD)
	@@${SIZE} $(PROG)
.else
NOPROG=
.endif

.include <bsd.prog.mk>

CPPFLAGS+=${DEBUGFLAGS} -DRELOC=${LOADADDR} -DHEAP_LIMIT=${HEAP_LIMIT}
CFLAGS+=$(SACFLAGS)
CFLAGS+=-fno-pie
AFLAGS+=-fno-pie
@


1.26
log
@Prep for relro: make sure it's off for any non-PIE stand/ program

ok millert@@ kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2016/03/30 06:38:45 jmc Exp $
d16 3
a18 2
SRCS+=	milli.S ashrdi3.c memcmp.c memcpy.c memset.c moddi3.c muldi3.c \
	qdivrem.c strcmp.c strlcpy.c strlen.c strncmp.c strncpy.c divdi3.c
@


1.25
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2013/08/16 08:16:45 otto Exp $
d20 1
a20 1
LDFLAGS+=-Bstatic -nostartfiles -nostdlib -N -Ttext $(LINKADDR) -nopie
@


1.24
log
@divdi3 is needed with big time_t
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2012/08/31 16:13:20 pascal Exp $
a4 1
MLINKS=	boot.8 boot.conf.5
@


1.23
log
@Kill NOPIE and NOPIE_FLAGS in hppa/stand.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2012/08/21 14:46:18 pascal Exp $
d18 1
a18 1
	qdivrem.c strcmp.c strlcpy.c strlen.c strncmp.c strncpy.c
@


1.22
log
@Add NOPIE= bits for sys/arch/*/stand to ensure that bootblocks will always be
built with -fno-pie.  This gets the hairiest part of PIE out of the way ...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2011/07/09 15:27:11 jsing Exp $
d21 1
a21 1
LDFLAGS+=-Bstatic -nostartfiles -nostdlib -N -Ttext $(LINKADDR)
d60 2
a61 2
CFLAGS+=${NOPIE_FLAGS}
AFLAGS+=${NOPIE_FLAGS}
@


1.21
log
@Unbreak hppa boot(8) after zlib update.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2006/10/30 18:28:57 jmc Exp $
d60 2
@


1.20
log
@adjust to libkern changes (and pretty .PATH logic); parts from maja
@
text
@d17 2
a18 2
SRCS+=	milli.S ashrdi3.c memcmp.c memcpy.c memset.c muldi3.c \
	strcmp.c strlcpy.c strlen.c strncmp.c strncpy.c
@


1.19
log
@install boot.conf as a section 5 page, not section 8;

from mikolaj kucharski;
ok mk deraadt krw
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2003/07/19 00:03:51 david Exp $
d11 9
a19 1
SRCS=	srt0.S exec.c boot.c cmd.c vars.c bootarg.c conf.c
d32 2
a33 4
LDADD=	${LIBSA} ${LIBZ} ${LIBKERN}
DPADD=	${LIBSA} ${LIBZ} ${LIBKERN}

.PATH:	${S}/stand/boot
@


1.18
log
@don't specify the leading "/" in MANSUBDIR (otherwise "//" occurs)
ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2003/03/28 22:40:47 mickey Exp $
d5 1
a5 1
MLINKS=	boot.8 boot.conf.8
@


1.17
log
@s/SADIR/STANDIR/ to avoid conflict w/ the libsa; install raw boot as well as cooked
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2003/01/27 23:56:44 miod Exp $
d4 1
a4 1
MANSUBDIR=/hppa
@


1.16
log
@Do not clean too far.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2003/01/16 19:13:05 mickey Exp $
d17 1
a17 1
SADIR=	${.CURDIR}/..
d32 2
@


1.15
log
@do not include the bsd into the lif, make links in the mdec
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2002/12/19 00:28:54 mickey Exp $
d7 1
a7 1
CLEANFILES+=	boot.gdb boot.map boot.lif bsd
@


1.14
log
@do not plan for DISKLESS; cross out CRTBEGIN and CRTEND
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2002/12/18 14:06:05 miod Exp $
d20 3
d31 3
a33 5
.if exists(${.CURDIR}/../../compile/GENERIC/bsd)
bsd: ${.CURDIR}/../../compile/GENERIC/bsd
	gzip -9 -c ${.CURDIR}/../../compile/GENERIC/bsd > bsd
ADDBOOT+=bsd
.endif
@


1.13
log
@Dammit Theo, I told you to fix the typo before commiting!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2002/12/18 01:20:41 deraadt Exp $
d18 2
a26 6

#.if exists(${.CURDIR}/../../compile/DISKLESS/bsd)
#bsd: ${.CURDIR}/../../compile/DISKLESS/bsd
#	gzip -9 -c ${.CURDIR}/../../compile/DISKLESS/bsd > bsd
#ADDBOOT+=bsd
#.endif
@


1.12
log
@make boot.lif use GENERIC
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2002/10/24 19:27:15 mickey Exp $
d33 1
a33 1
bsd: ${.CURDIR}/../../compile/GENERIC_PIE/bsd
@


1.11
log
@use loadfile
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2000/05/31 19:56:51 mickey Exp $
a25 1
# enable this when SHEPHERD dies
d32 3
a34 3
.if exists(${.CURDIR}/../../compile/SHEPHERD_PIE/bsd)
bsd: ${.CURDIR}/../../compile/SHEPHERD_PIE/bsd
	gzip -9 -c ${.CURDIR}/../../compile/SHEPHERD_PIE/bsd > bsd
@


1.10
log
@build mans all the time, cleanfiles always the same
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1999/12/23 02:42:23 mickey Exp $
d11 1
a11 1
SRCS=	srt0.S boot.c cmd.c vars.c bootarg.c conf.c
d16 1
@


1.10.8.1
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2000/05/31 19:56:51 mickey Exp $
d11 1
a11 1
SRCS=	srt0.S exec.c boot.c cmd.c vars.c bootarg.c conf.c
a15 1
STRIP?=	strip
@


1.10.8.2
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
d7 1
a7 1
CLEANFILES+=	boot.gdb boot.map boot.lif
d17 1
a17 6
STANDIR=${.CURDIR}/..
CRTBEGIN=
CRTEND=
LINKS=	${BINDIR}/boot.lif ${BINDIR}/sdboot \
	${BINDIR}/boot.lif ${BINDIR}/stboot \
	${BINDIR}/boot.lif ${BINDIR}/xxboot
d26 12
a37 5
realinstall:
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m ${BINMODE} \
	    boot ${DESTDIR}${BINDIR}
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m ${BINMODE} \
	    boot.lif ${DESTDIR}${BINDIR}
@


1.9
log
@clean some more files
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1999/07/08 20:11:52 deraadt Exp $
d3 7
a15 4
MAN=	boot.8
MANSUBDIR=/hppa
MLINKS=	boot.8 boot.conf.8
S	=${.CURDIR}/../../../..
a16 1
CLEANFILES+=	boot.gdb boot.map boot.lif bsd
d28 1
a28 1
#	gzip -9c ${.CURDIR}/../../compile/DISKLESS/bsd > bsd
d34 1
a34 1
	gzip -9c ${.CURDIR}/../../compile/SHEPHERD_PIE/bsd > bsd
d47 3
@


1.9.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2000/05/31 19:56:51 mickey Exp $
a2 7
MAN=	boot.8
MANSUBDIR=/hppa
MLINKS=	boot.8 boot.conf.8
S	=${.CURDIR}/../../../..
CLEANFILES+=	boot.gdb boot.map boot.lif bsd

.if ${MACHINE} == "hppa"
d9 4
d14 1
d26 1
a26 1
#	gzip -9 -c ${.CURDIR}/../../compile/DISKLESS/bsd > bsd
d32 1
a32 1
	gzip -9 -c ${.CURDIR}/../../compile/SHEPHERD_PIE/bsd > bsd
a44 3
.else
NOPROG=
.endif
@


1.9.2.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD$
d7 1
a7 1
CLEANFILES+=	boot.gdb boot.map boot.lif
d11 1
a11 1
SRCS=	srt0.S exec.c boot.c cmd.c vars.c bootarg.c conf.c
a15 1
STRIP?=	strip
a16 5
CRTBEGIN=
CRTEND=
LINKS=	${BINDIR}/boot.lif ${BINDIR}/sdboot \
	${BINDIR}/boot.lif ${BINDIR}/stboot \
	${BINDIR}/boot.lif ${BINDIR}/xxboot
d25 12
a36 3
realinstall:
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m ${BINMODE} \
	    boot.lif ${DESTDIR}${BINDIR}
@


1.9.2.3
log
@Sync the SMP branch to -current.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9.2.2 2003/03/27 23:26:54 niklas Exp $
d17 1
a17 1
STANDIR=${.CURDIR}/..
a31 2
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m ${BINMODE} \
	    boot ${DESTDIR}${BINDIR}
@


1.9.2.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 1
a4 1
MANSUBDIR=hppa
@


1.8
log
@install into man8/arch subdirs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1999/04/20 20:08:27 mickey Exp $
d14 1
a14 1
CLEANFILES+=	boot.lif bsd
@


1.7
log
@fix previous commit blowup:
generate link map for a meanwhile
use special kernel config while in developmet
pass HEAP_LIMIT into CPPFLAGS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1999/04/20 20:05:22 mickey Exp $
d10 1
@


1.6
log
@Makefile
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1999/01/25 21:53:31 mickey Exp $
a4 2
#AFLAGS+=-Wa,-R
# AFLAGS+=-Wa,-a
a7 1
#LDFLAGS+=-O -N -S -H -R$(LINKADDR) -e begin -t
@


1.5
log
@call diskless kernel "bsd" so it would be loaded even we have
problems w/ kbd on PDC console device.
remove neva-gonna-b-there stuff from conf.c
some improvements to srt0.S code, use constants defined in machine/ files.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1998/09/29 07:14:52 mickey Exp $
d9 1
a9 1
LDFLAGS+=-T ${.CURDIR}/ld.script
d25 10
a34 3
.if exists(${.CURDIR}/../../compile/DISKLESS/bsd)
bsd: ${.CURDIR}/../../compile/DISKLESS/bsd
	gzip -9c ${.CURDIR}/../../compile/DISKLESS/bsd > bsd
d50 1
a50 1
CPPFLAGS+=${DEBUGFLAGS} -DRELOC=$(LOADADDR)
@


1.4
log
@update config
include (gzipped) diskless kernel if compiled in LIF volume
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1998/08/29 01:49:26 mickey Exp $
d26 3
a28 3
diskless: ${.CURDIR}/../../compile/DISKLESS/bsd
	gzip -9c ${.CURDIR}/../../compile/DISKLESS/bsd > diskless
ADDBOOT+=diskless
d31 1
d33 1
@


1.3
log
@add kernel to LIF volume in case we have DISKLESS built
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1998/06/27 02:59:21 mickey Exp $
d27 1
a27 1
	cp ${.CURDIR}/../../compile/DISKLESS/bsd diskless
@


1.2
log
@gen boot.lif automagically
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.1.1 1998/06/23 18:46:41 mickey Exp $
d16 1
a16 1
CLEANFILES+=	boot.lif
d25 9
a33 2
boot.lif:	${PROG}
	${MKBOOT} -v ${PROG} boot.lif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD$
d16 1
d22 5
@


1.1.1.1
log
@ok, it boots, include and libkern to come
@
text
@@
