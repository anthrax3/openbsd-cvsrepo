head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.22
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.18
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.20
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.12
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.16
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.32
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.30
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.26
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.28
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.24
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.22
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.20
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.18
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.14
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.12
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.10
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.8
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.6
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	mickey-boot:1.1.1.1
	mickey:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2011.03.13.00.13.52;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.08.11.06.51.45;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2003.04.30.23.03.55;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.29.22.38.50;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2003.01.14.11.40.18;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.32;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.20.20.01.01;	author mickey;	state Exp;
branches
	1.3.4.1
	1.3.14.1;
next	1.2;

1.2
date	98.09.29.07.30.59;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.18.46.42;	author mickey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.06.23.18.46.42;	author mickey;	state Exp;
branches;
next	;

1.3.4.1
date	2002.03.28.10.31.03;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2003.05.13.19.41.04;	author ho;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2004.02.19.10.48.41;	author niklas;	state Exp;
branches;
next	;

1.3.14.1
date	2002.06.11.03.35.38;	author art;	state Exp;
branches;
next	1.3.14.2;

1.3.14.2
date	2003.05.19.21.43.13;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Change daddr_t to daddr32_t.  The bootblocks on our architectures only
do 32-bit block spanning.  If later on we get some that can/should do
64-bit, that can be done now using daddr64_t (but of course, we are taking
this step to finalize the daddr_t 64-bit conversion).
ok miod krw
@
text
@/*	$OpenBSD: dev_hppa.h,v 1.8 2003/08/11 06:51:45 mickey Exp $	*/


#define IOPGSHIFT	11
#define	IONBPG		(1 << IOPGSHIFT)
#define IOPGOFSET	(IONBPG - 1)

struct disklabel;
struct hppa_dev {
	dev_t	bootdev;
	struct pz_device *pz_dev;	/* device descriptor */
	daddr32_t fsoff;			/* offset to the file system */
	daddr32_t	last_blk;		/* byte offset for last read blk */
	size_t	last_read;		/* amount read last time */
	struct disklabel *label;
	/* buffer to cache data (aligned properly) */
	char	*buf;
	char	ua_buf[IODC_IOSIZ + IODC_MINIOSIZ];
};

#ifdef PDCDEBUG
#define	DEVPATH_PRINT(dp) \
	printf("%x, %d.%d.%d.%d.%d.%d, 0x%x, %x.%x.%x.%x.%x.%x\n", \
	       (dp)->dp_flags, (dp)->dp_bc[0], (dp)->dp_bc[1], (dp)->dp_bc[2], \
	       (dp)->dp_bc[3], (dp)->dp_bc[4], (dp)->dp_bc[5], (dp)->dp_mod, \
	       (dp)->dp_layers[0], (dp)->dp_layers[1], (dp)->dp_layers[2], \
	       (dp)->dp_layers[3], (dp)->dp_layers[4], (dp)->dp_layers[5]);
#define	PZDEV_PRINT(dp) \
	printf("devpath={%x, %d.%d.%d.%d.%d.%d, 0x%x, %x.%x.%x.%x.%x.%x}," \
	       "\n\thpa=%p, spa=%p, io=%p, class=%u\n", \
	       (dp)->pz_flags, (dp)->pz_bc[0], (dp)->pz_bc[1], (dp)->pz_bc[2], \
	       (dp)->pz_bc[3], (dp)->pz_bc[4], (dp)->pz_bc[5], (dp)->pz_mod, \
	       (dp)->pz_layers[0], (dp)->pz_layers[1], (dp)->pz_layers[2], \
	       (dp)->pz_layers[3], (dp)->pz_layers[4], (dp)->pz_layers[5], \
	       (dp)->pz_hpa, (dp)->pz_spa, (dp)->pz_iodc_io, (dp)->pz_class);
#endif

extern pdcio_t pdc;
extern int pdcbuf[];			/* PDC returns, pdc.c */

int iodc_rw(char *, u_int, u_int, int func, struct pz_device *);
const char *dk_disklabel(struct hppa_dev *dp, struct disklabel *label);

@


1.8
log
@a few strict protos
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_hppa.h,v 1.7 2003/04/30 23:03:55 mickey Exp $	*/
d12 2
a13 2
	daddr_t fsoff;			/* offset to the file system */
	daddr_t	last_blk;		/* byte offset for last read blk */
@


1.7
log
@do not be hungry for buffers and allocate lower than a max (for iodc io)
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_hppa.h,v 1.6 2003/04/29 22:38:50 mickey Exp $	*/
d42 2
@


1.6
log
@some cleanup and redo ct as lf (just different dev type). saves some memory
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_hppa.h,v 1.6 2003/04/29 22:27:07 mickey Exp $	*/
d18 1
a18 2
	char	ua_buf[IODC_MAXIOSIZ + IODC_MINIOSIZ];

@


1.5
log
@during the open store the partition offset and do subsequent io relative to that offset, allows reading kernel from scsi disk
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_hppa.h,v 1.4 2002/03/14 01:26:32 millert Exp $	*/
a40 1
extern struct  pz_device ctdev;		/* cartridge tape (boot) device path */
a42 1

@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_hppa.h,v 1.3 1999/04/20 20:01:01 mickey Exp $	*/
d12 1
@


1.3
log
@fix different alignment problems
correct PDC/IODC call formats
factor some more code out to the dev_hppa.c routines
basically boot on many more machine by now
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_hppa.h,v 1.2 1998/09/29 07:30:59 mickey Exp $	*/
d42 1
a42 1
int iodc_rw __P((char *, u_int, u_int, int func, struct pz_device *));
@


1.3.14.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_hppa.h,v 1.3 1999/04/20 20:01:01 mickey Exp $	*/
d42 1
a42 1
int iodc_rw(char *, u_int, u_int, int func, struct pz_device *);
@


1.3.14.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a11 1
	daddr_t fsoff;			/* offset to the file system */
d17 2
a18 1
	char	ua_buf[IODC_IOSIZ + IODC_MINIOSIZ];
d40 1
d43 1
@


1.3.4.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 1
a42 1
int iodc_rw(char *, u_int, u_int, int func, struct pz_device *);
@


1.3.4.2
log
@Sync the SMP branch with 3.3
@
text
@a11 1
	daddr_t fsoff;			/* offset to the file system */
@


1.3.4.3
log
@Sync the SMP branch to -current.
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_hppa.h,v 1.3.4.2 2003/03/27 23:26:54 niklas Exp $	*/
d18 2
a19 1
	char	ua_buf[IODC_IOSIZ + IODC_MINIOSIZ];
d41 1
d44 1
@


1.3.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a41 2
const char *dk_disklabel(struct hppa_dev *dp, struct disklabel *label);

@


1.2
log
@sync; fixes; cleanup
get rid of those obscuring commands
use device finger/mapper, thus rewrite devopen
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_hppa.h,v 1.1.1.1 1998/06/23 18:46:42 mickey Exp $	*/
d4 3
a6 6
#define MINIOSIZ	64		/* minimum buffer size for IODC call */
#define MAXIOSIZ	(64 * 1024)	/* maximum buffer size for IODC call */
#define IONBPG		(2 * 1024)	/* page alignment for I/O buffers */
#define IOPGSHIFT	11		/* LOG2(IONBPG) */
#define IOPGOFSET	(IONBPG-1)	/* byte offset into I/O buffer */
#define	BTIOSIZ		(8 * 1024)	/* size of boot device I/O buffer */
d14 4
a17 1
	char	buf[BTIOSIZ+MINIOSIZ];	/* will be used for unaligned io */
a18 1
	struct disklabel *label;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a2 23
struct hppa_dev {
	dev_t	bootdev;

	struct disklabel label;
};

#define CN_HPA		PAGE0->mem_cons.pz_hpa
#define CN_SPA		PAGE0->mem_cons.pz_spa
#define CN_LAYER	PAGE0->mem_cons.pz_layers
#define CN_IODC		PAGE0->mem_cons.pz_iodc_io
#define CN_CLASS	PAGE0->mem_cons.pz_class

#define KY_HPA		PAGE0->mem_kbd.pz_hpa
#define KY_SPA		PAGE0->mem_kbd.pz_spa
#define KY_LAYER	PAGE0->mem_kbd.pz_layers
#define KY_IODC		PAGE0->mem_kbd.pz_iodc_io
#define KY_CLASS	PAGE0->mem_kbd.pz_class

#define BT_HPA		PAGE0->mem_boot.pz_hpa    
#define BT_SPA		PAGE0->mem_boot.pz_spa    
#define BT_LAYER	PAGE0->mem_boot.pz_layers 
#define BT_IODC		PAGE0->mem_boot.pz_iodc_io
#define BT_CLASS	PAGE0->mem_boot.pz_class
a5 2
#define	BTIOSIZ		(8 * 1024)	/* size of boot device I/O buffer */

d9 12
d22 16
a37 2
#define ANYSLOT	(-1)
#define NOSLOT	(-2)
d39 1
a39 1
extern char btbuf[];
@


1.1.1.1
log
@ok, it boots, include and libkern to come
@
text
@@
