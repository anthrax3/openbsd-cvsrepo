head	1.14;
access;
symbols
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.22
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.18
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.20
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.12
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.16
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.14
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.10
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.8
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.6
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.4
	OPENBSD_5_0:1.14.0.2
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.13.0.28
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.26
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.22
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.24
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.20
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.18
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.16
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.14
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.12
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.10
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.8
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.13
	SMP_SYNC_B:1.13
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.10
	UBC:1.7.0.12
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.10
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.8
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.6
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.4
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.2
	SMP_BASE:1.7
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	mickey-boot:1.1.1.1
	mickey:1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2011.03.13.00.13.52;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.07.18.24.20;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.17.12.15.51;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2003.04.16.07.20.50;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.09.01.46.08;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.14.01.26.32;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.02.09.36.43;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	99.12.23.04.07.47;	author mickey;	state Exp;
branches
	1.7.2.1
	1.7.12.1;
next	1.6;

1.6
date	99.05.06.02.26.15;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	98.09.29.07.22.45;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	98.07.13.03.52.12;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	98.07.13.03.36.01;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	98.07.08.19.31.13;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.06.23.18.46.42;	author mickey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.06.23.18.46.42;	author mickey;	state Exp;
branches;
next	;

1.7.2.1
date	2002.03.06.00.59.52;	author niklas;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2002.03.28.10.31.03;	author niklas;	state Exp;
branches;
next	1.7.2.3;

1.7.2.3
date	2003.03.27.23.26.54;	author niklas;	state Exp;
branches;
next	1.7.2.4;

1.7.2.4
date	2003.05.13.19.41.04;	author ho;	state Exp;
branches;
next	1.7.2.5;

1.7.2.5
date	2004.06.05.23.10.49;	author niklas;	state Exp;
branches;
next	;

1.7.12.1
date	2002.06.11.03.35.38;	author art;	state Exp;
branches;
next	1.7.12.2;

1.7.12.2
date	2002.10.29.00.28.03;	author art;	state Exp;
branches;
next	1.7.12.3;

1.7.12.3
date	2003.05.19.21.43.13;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Change daddr_t to daddr32_t.  The bootblocks on our architectures only
do 32-bit block spanning.  If later on we get some that can/should do
64-bit, that can be done now using daddr64_t (but of course, we are taking
this step to finalize the daddr_t 64-bit conversion).
ok miod krw
@
text
@/*	$OpenBSD: libsa.h,v 1.13 2004/04/07 18:24:20 mickey Exp $	*/

/*
 * Copyright (c) 1998-2004 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <lib/libsa/stand.h>

#define	EXEC_ELF
#define	EXEC_SOM

#define	DEFAULT_KERNEL_ADDRESS	0

extern dev_t bootdev;

void pdc_init(void);
struct pz_device;
struct pz_device *pdc_findev(int, int);

int iodcstrategy(void *, int, daddr32_t, size_t, void *, size_t *);

int ctopen(struct open_file *, ...);
int ctclose(struct open_file *);

int dkopen(struct open_file *, ...);
int dkclose(struct open_file *);

int lfopen(struct open_file *, ...);
int lfstrategy(void *, int, daddr32_t, size_t, void *, size_t *);
int lfclose(struct open_file *);

void ite_probe(struct consdev *);
void ite_init(struct consdev *);
int ite_getc(dev_t);
void ite_putc(dev_t, int);
void ite_pollc(dev_t, int);

void machdep(void);
void devboot(dev_t, char *);
void fcacheall(void);
void run_loadfile(u_long *marks, int howto);

int lif_open(char *path, struct open_file *f);
int lif_close(struct open_file *f);
int lif_read(struct open_file *f, void *buf, size_t size, size_t *resid);
int lif_write(struct open_file *f, void *buf, size_t size, size_t *resid);
off_t lif_seek(struct open_file *f, off_t offset, int where);
int lif_stat(struct open_file *f, struct stat *sb);
int lif_readdir(struct open_file *f, char *name);

union x_header;
struct x_param;
int som_probe(int, union x_header *);
int som_load(int, struct x_param *);
int som_ldsym(int, struct x_param *);

extern int debug;

#define	MACHINE_CMD	cmd_machine	/* we have hppa specific commands */
@


1.13
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.12 2003/04/17 12:15:51 mickey Exp $	*/
d42 1
a42 1
int iodcstrategy(void *, int, daddr_t, size_t, void *, size_t *);
d51 1
a51 1
int lfstrategy(void *, int, daddr_t, size_t, void *, size_t *);
@


1.12
log
@new boots
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.11 2003/04/16 07:20:50 mickey Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Michael Shalayeff
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d19 8
a26 7
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.11
log
@clean some spaces and registers and other fluff
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.10 2002/07/09 01:46:08 mickey Exp $	*/
d67 1
@


1.10
log
@no offset
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.9 2002/03/14 01:26:32 millert Exp $	*/
a35 1
/* #define	EXEC_ECOFF */
d68 7
a74 9
int     lif_open(char *path, struct open_file *f);
int     lif_close(struct open_file *f);
int     lif_read(struct open_file *f, void *buf,
                size_t size, size_t *resid);
int     lif_write(struct open_file *f, void *buf,
		size_t size, size_t *resid);
off_t   lif_seek(struct open_file *f, off_t offset, int where);
int     lif_stat(struct open_file *f, struct stat *sb);
int     lif_readdir(struct open_file *f, char *name);
d78 3
a80 3
int	som_probe(int, union x_header *);
int	som_load(int, struct x_param *);
int	som_ldsym(int, struct x_param *);
@


1.9
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.8 2002/03/02 09:36:43 miod Exp $	*/
d39 1
a39 1
#define	DEFAULT_KERNEL_ADDRESS	0x12000
@


1.8
log
@Add machine specific commands to the bootblocks, to let the user display
and change the console and keyboard settings; and devise a manual page for
it, with lots of loot borrowed from the i386 version.

These commands have been extensively tested on 712, 715, and 720, although
your mileage may vary and scary warnings may appear in the manual page in
the future.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.7 1999/12/23 04:07:47 mickey Exp $	*/
d43 1
a43 1
void pdc_init __P((void));
d45 1
a45 1
struct pz_device *pdc_findev __P((int, int));
d47 1
a47 1
int iodcstrategy __P((void *, int, daddr_t, size_t, void *, size_t *));
d49 2
a50 2
int ctopen __P((struct open_file *, ...));
int ctclose __P((struct open_file *));
d52 26
a77 26
int dkopen __P((struct open_file *, ...));
int dkclose __P((struct open_file *));

int lfopen __P((struct open_file *, ...));
int lfstrategy __P((void *, int, daddr_t, size_t, void *, size_t *));
int lfclose __P((struct open_file *));

void ite_probe __P((struct consdev *));
void ite_init __P((struct consdev *));
int ite_getc __P((dev_t));
void ite_putc __P((dev_t, int));
void ite_pollc __P((dev_t, int));

void machdep __P((void));
void devboot __P((dev_t, char *));
void fcacheall __P((void));

int     lif_open __P((char *path, struct open_file *f));
int     lif_close __P((struct open_file *f));
int     lif_read __P((struct open_file *f, void *buf,
                size_t size, size_t *resid));
int     lif_write __P((struct open_file *f, void *buf,
		size_t size, size_t *resid));
off_t   lif_seek __P((struct open_file *f, off_t offset, int where));
int     lif_stat __P((struct open_file *f, struct stat *sb));
int     lif_readdir __P((struct open_file *f, char *name));
d81 3
a83 3
int	som_probe __P((int, union x_header *));
int	som_load __P((int, struct x_param *));
int	som_ldsym __P((int, struct x_param *));
@


1.7
log
@add hp som file support protos
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.6 1999/05/06 02:26:15 mickey Exp $	*/
d86 2
@


1.7.12.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.7 1999/12/23 04:07:47 mickey Exp $	*/
d43 1
a43 1
void pdc_init(void);
d45 1
a45 1
struct pz_device *pdc_findev(int, int);
d47 1
a47 1
int iodcstrategy(void *, int, daddr_t, size_t, void *, size_t *);
d49 2
a50 2
int ctopen(struct open_file *, ...);
int ctclose(struct open_file *);
d52 26
a77 26
int dkopen(struct open_file *, ...);
int dkclose(struct open_file *);

int lfopen(struct open_file *, ...);
int lfstrategy(void *, int, daddr_t, size_t, void *, size_t *);
int lfclose(struct open_file *);

void ite_probe(struct consdev *);
void ite_init(struct consdev *);
int ite_getc(dev_t);
void ite_putc(dev_t, int);
void ite_pollc(dev_t, int);

void machdep(void);
void devboot(dev_t, char *);
void fcacheall(void);

int     lif_open(char *path, struct open_file *f);
int     lif_close(struct open_file *f);
int     lif_read(struct open_file *f, void *buf,
                size_t size, size_t *resid);
int     lif_write(struct open_file *f, void *buf,
		size_t size, size_t *resid);
off_t   lif_seek(struct open_file *f, off_t offset, int where);
int     lif_stat(struct open_file *f, struct stat *sb);
int     lif_readdir(struct open_file *f, char *name);
d81 3
a83 3
int	som_probe(int, union x_header *);
int	som_load(int, struct x_param *);
int	som_ldsym(int, struct x_param *);
a85 2

#define	MACHINE_CMD	cmd_machine	/* we have hppa specific commands */
@


1.7.12.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.7.12.1 2002/06/11 03:35:38 art Exp $	*/
d39 1
a39 1
#define	DEFAULT_KERNEL_ADDRESS	0
@


1.7.12.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d36 1
a67 1
void run_loadfile(u_long *marks, int howto);
d69 9
a77 7
int lif_open(char *path, struct open_file *f);
int lif_close(struct open_file *f);
int lif_read(struct open_file *f, void *buf, size_t size, size_t *resid);
int lif_write(struct open_file *f, void *buf, size_t size, size_t *resid);
off_t lif_seek(struct open_file *f, off_t offset, int where);
int lif_stat(struct open_file *f, struct stat *sb);
int lif_readdir(struct open_file *f, char *name);
d81 3
a83 3
int som_probe(int, union x_header *);
int som_load(int, struct x_param *);
int som_ldsym(int, struct x_param *);
@


1.7.2.1
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a85 2

#define	MACHINE_CMD	cmd_machine	/* we have hppa specific commands */
@


1.7.2.2
log
@Merge in -current from about a week ago
@
text
@d43 1
a43 1
void pdc_init(void);
d45 1
a45 1
struct pz_device *pdc_findev(int, int);
d47 1
a47 1
int iodcstrategy(void *, int, daddr_t, size_t, void *, size_t *);
d49 2
a50 2
int ctopen(struct open_file *, ...);
int ctclose(struct open_file *);
d52 26
a77 26
int dkopen(struct open_file *, ...);
int dkclose(struct open_file *);

int lfopen(struct open_file *, ...);
int lfstrategy(void *, int, daddr_t, size_t, void *, size_t *);
int lfclose(struct open_file *);

void ite_probe(struct consdev *);
void ite_init(struct consdev *);
int ite_getc(dev_t);
void ite_putc(dev_t, int);
void ite_pollc(dev_t, int);

void machdep(void);
void devboot(dev_t, char *);
void fcacheall(void);

int     lif_open(char *path, struct open_file *f);
int     lif_close(struct open_file *f);
int     lif_read(struct open_file *f, void *buf,
                size_t size, size_t *resid);
int     lif_write(struct open_file *f, void *buf,
		size_t size, size_t *resid);
off_t   lif_seek(struct open_file *f, off_t offset, int where);
int     lif_stat(struct open_file *f, struct stat *sb);
int     lif_readdir(struct open_file *f, char *name);
d81 3
a83 3
int	som_probe(int, union x_header *);
int	som_load(int, struct x_param *);
int	som_ldsym(int, struct x_param *);
@


1.7.2.3
log
@Sync the SMP branch with 3.3
@
text
@d39 1
a39 1
#define	DEFAULT_KERNEL_ADDRESS	0
@


1.7.2.4
log
@Sync the SMP branch to -current.
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.7.2.3 2003/03/27 23:26:54 niklas Exp $	*/
d36 1
a67 1
void run_loadfile(u_long *marks, int howto);
d69 9
a77 7
int lif_open(char *path, struct open_file *f);
int lif_close(struct open_file *f);
int lif_read(struct open_file *f, void *buf, size_t size, size_t *resid);
int lif_write(struct open_file *f, void *buf, size_t size, size_t *resid);
off_t lif_seek(struct open_file *f, off_t offset, int where);
int lif_stat(struct open_file *f, struct stat *sb);
int lif_readdir(struct open_file *f, char *name);
d81 3
a83 3
int som_probe(int, union x_header *);
int som_load(int, struct x_param *);
int som_ldsym(int, struct x_param *);
@


1.7.2.5
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1998-2004 Michael Shalayeff
d15 5
d24 7
a30 8
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
@


1.6
log
@add lif_* prototypes
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.5 1998/09/29 07:22:45 mickey Exp $	*/
d37 1
a37 1
/* #define	EXEC_SOM */
d79 5
@


1.5
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.4 1998/07/13 03:52:12 mickey Exp $	*/
d68 11
@


1.4
log
@since i blew up prev commit msg, here it is:
upgrade to new coming stand/exec framework
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.2 1998/07/08 19:31:13 mickey Exp $	*/
d41 2
d44 4
a47 1
void getbinfo __P((void));
a48 1
int ctstrategy __P((void *, int, daddr_t, size_t, void *, size_t *));
a50 1
int ctioctl __P((struct open_file *, u_long, void *));
a51 1
int dkstrategy __P((void *, int, daddr_t, size_t, void *, size_t *));
d54 4
a57 1
int dkioctl __P((struct open_file *, u_long, void *));
a67 1
void sync_caches __P((void));
@


1.3
log
@libsa/itecons.c
@
text
@a1 1
/*	$NOWHERE: libsa.h,v 2.2 1998/06/22 19:34:47 mickey Exp $	*/
@


1.2
log
@define DEFAULT_KERNEL_ADDRESS for MI boot.c
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.1.1.1 1998/06/23 18:46:42 mickey Exp $	*/
d35 4
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d35 2
@


1.1.1.1
log
@ok, it boots, include and libkern to come
@
text
@@
