head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.14
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.12
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.8
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.10
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.6
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.6
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.4
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.7.0.26
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.22
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.24
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.20
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.18
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.16
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.14
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.12
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.10
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.8
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC:1.4.0.2
	UBC_SYNC_A:1.3
	SMP:1.3.0.2;
locks; strict;
comment	@ * @;


1.13
date	2013.12.28.02.51.07;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2012.06.26.16.18.45;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2011.04.17.09.49.48;	author kettenis;	state Exp;
branches;
next	1.10;

1.10
date	2010.12.06.22.51.45;	author jasper;	state Exp;
branches;
next	1.9;

1.9
date	2010.12.06.22.11.01;	author jasper;	state Exp;
branches;
next	1.8;

1.8
date	2010.12.06.18.44.49;	author jasper;	state Exp;
branches;
next	1.7;

1.7
date	2004.06.14.00.32.31;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.07.18.24.20;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.11.06.51.45;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.19.08.19.45;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.17.12.15.51;	author mickey;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2003.04.15.18.07.32;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.28.22.42.26;	author mickey;	state Exp;
branches;
next	;

1.3.2.1
date	2003.05.12.19.55.40;	author ho;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2003.06.07.11.11.36;	author ho;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2004.02.19.10.48.41;	author niklas;	state Exp;
branches;
next	1.3.2.4;

1.3.2.4
date	2004.06.05.23.10.49;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Try to load entropy data from disk:/etc/random.seed, and additionally
use a MD-supplied random function.  Then, insert this into the ELF
openbsd.randomdata of the kernel, so that it has entropy right from
the start.  Some help from jsing for the softraid aspects.
Also tested by phessler
@
text
@/*	$OpenBSD: cdboot.c,v 1.12 2012/06/26 16:18:45 deraadt Exp $	*/

/*
 * Copyright (c) 2003 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/reboot.h>
#include <sys/stat.h>
#include <libsa.h>
#include <lib/libsa/cd9660.h>
#include <lib/libsa/loadfile.h>
#include <dev/cons.h>
#include <machine/pdc.h>
#include <machine/cpu.h>
#include <stand/boot/bootarg.h>
#include "dev_hppa.h"
#include "cmd.h"

dev_t bootdev;
int debug = 1;
int boottimeout = 5;

struct fs_ops file_system[] = {
	{ cd9660_open, cd9660_close, cd9660_read, cd9660_write, cd9660_seek,
	  cd9660_stat, cd9660_readdir },
};
int nfsys = nitems(file_system);

struct devsw devsw[] = {
	{ "dk",	iodcstrategy, dkopen, dkclose, noioctl },
};
int	ndevs = nitems(devsw);

struct consdev	constab[] = {
	{ ite_probe, ite_init, ite_getc, ite_putc },
	{ NULL }
};
struct consdev *cn_tab;

typedef void (*startfuncp)(int, int, int, int, int, int, caddr_t)
    __attribute__ ((noreturn));

char   rnddata[BOOTRANDOM_MAX];		/* XXX dummy */

void
boot(dev_t dev)
{
	u_long marks[MARK_MAX];
	char path[128];

	pdc_init();
	cninit();
	devboot(dev, path);
	strncpy(path + strlen(path), ":/bsd.rd", 9);
	printf(">> OpenBSD/" MACHINE " CDBOOT 0.2\n"
	    "booting %s: ", path);

	marks[MARK_START] = (u_long)DEFAULT_KERNEL_ADDRESS;
	if (!loadfile(path, marks, LOAD_KERNEL)) {
		marks[MARK_END] = ALIGN(marks[MARK_END] -
		    (u_long)DEFAULT_KERNEL_ADDRESS);
		fcacheall();

		__asm("mtctl %r0, %cr17");
		__asm("mtctl %r0, %cr17");
		(*(startfuncp)(marks[MARK_ENTRY]))((int)pdc, 0, bootdev,
		    marks[MARK_END], BOOTARG_APIVER, BOOTARG_LEN,
		    (caddr_t)BOOTARG_OFF);
		/* not reached */
	}
}
@


1.12
log
@do not assume that sys/param.h is pulling in the world; pull in what is
needed by hand.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.11 2011/04/17 09:49:48 kettenis Exp $	*/
d65 2
@


1.11
log
@Tweak the behaviour of boot(8) on hppa.  Normal boots now will give you a
chance to interrupt the boot procedure before booting the default kernel,
just like (most) of our other hardware platforms.  Interactive boots, where
you interrupt the firmware boot procedure and answer "Y" to the
"Interact with IPL?" question will now wait for human intervention at the
boot> prompt (without a timeout).  Should reduce frustration when trying to
boot an alternative kernel.

ok deraadt@@, miod@@, jsing@@, todd@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.10 2010/12/06 22:51:45 jasper Exp $	*/
d37 1
@


1.10
log
@- properly remove NENTS now after fixing the fallout.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.9 2010/12/06 22:11:01 jasper Exp $	*/
d43 1
a43 1
int bootprompt = 1;
d75 1
a75 1
	printf(">> OpenBSD/" MACHINE " CDBOOT 0.1\n"
@


1.9
log
@- partially revert previous NENTS removal for arches which got busted.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.8 2010/12/06 18:44:49 jasper Exp $	*/
d49 1
a49 1
int nfsys = NENTS(file_system);
d54 1
a54 1
int	ndevs = NENTS(devsw);
@


1.8
log
@- drop NENTS(), which was yet another copy of nitems().
no binary change


ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.7 2004/06/14 00:32:31 deraadt Exp $	*/
d49 1
a49 1
int nfsys = nitems(file_system);
d54 1
a54 1
int	ndevs = nitems(devsw);
@


1.7
log
@de-__P
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.6 2004/04/07 18:24:20 mickey Exp $	*/
d49 1
a49 1
int nfsys = NENTS(file_system);
d54 1
a54 1
int	ndevs = NENTS(devsw);
@


1.6
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.5 2003/08/11 06:51:45 mickey Exp $	*/
d62 1
a62 1
typedef void (*startfuncp) __P((int, int, int, int, int, int, caddr_t))
@


1.5
log
@a few strict protos
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.4 2003/05/19 08:19:45 mickey Exp $	*/
a14 17
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d16 11
@


1.4
log
@say to skip the interactive part should the pdc say so
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.3 2003/04/17 12:15:51 mickey Exp $	*/
d45 1
d72 1
a72 2
boot(dev)
	dev_t	dev;
@


1.3
log
@new boots
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.2 2003/04/15 18:07:32 mickey Exp $	*/
d48 1
@


1.3.2.1
log
@Add new file to SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.3.2.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.3.2.1 2003/05/12 19:55:40 ho Exp $	*/
a47 1
int bootprompt = 1;
@


1.3.2.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a44 1
#include "cmd.h"
d71 2
a72 1
boot(dev_t dev)
@


1.3.2.4
log
@Merge with the trunk
@
text
@d15 17
a32 11
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
@


1.2
log
@rearrange devsw to place dk in the beginning. necessary glue hookups in cdboot
@
text
@d1 1
a1 1
/*	$OpenBSD: cdboot.c,v 1.1 2003/03/28 22:42:26 mickey Exp $	*/
d40 1
d42 3
a45 1
char path[128];
d66 3
d73 3
d83 13
a95 1
	exec(path, (void *)DEFAULT_KERNEL_ADDRESS, 0);
@


1.1
log
@a small boot for a cd
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d39 2
d42 20
a61 3
char kernel[] = "/bsd";

extern	const char version[];
d64 2
a65 2
boot(bootdev)
	dev_t	bootdev;
d67 6
a72 4
	machdep();

	printf(">> OpenBSD/" MACHINE " BOOT %s\n"
	    "booting %s: ", version, kernel);
d74 1
a74 1
	exec(kernel, (void *)DEFAULT_KERNEL_ADDRESS, 0);
@

