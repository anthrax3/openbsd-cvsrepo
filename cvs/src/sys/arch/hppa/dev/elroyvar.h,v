head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.28
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.24
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.26
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.18
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.22
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.20
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.16
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.14
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.12
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2009.08.22.02.54.50;	author mk;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.17.14.51.21;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.27.16.36.07;	author kettenis;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.21.22.43.38;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Constify the what/name parameter of pci_intr_establish().

Tested by myself, sthen, oga, kettenis, and jasper.
Input from sthen and jasper.

ok kettenis

(Manpage follows shortly.)
@
text
@/*	$OpenBSD: elroyvar.h,v 1.3 2007/06/17 14:51:21 kettenis Exp $	*/

/*
 * Copyright (c) 2005 Michael Shalayeff
 * All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
 * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <machine/pdc.h>

struct elroy_softc {
	struct  device sc_dv;

	int sc_ver;
	hppa_hpa_t sc_hpa;
	bus_space_tag_t sc_bt;
	bus_space_handle_t sc_bh;
	bus_dma_tag_t sc_dmat;
	volatile struct elroy_regs *sc_regs;
	bus_addr_t sc_iobase;

	u_int32_t sc_imr;
	int sc_nints;
	int *sc_irq;

	struct pdc_pat_pci_rt *sc_int_tbl;
	int sc_int_tbl_sz;

	struct hppa_pci_chipset_tag sc_pc;
	struct hppa_bus_space_tag sc_iot;
	struct hppa_bus_space_tag sc_memt;
	char sc_memexname[20];
	struct extent *sc_memex;
	struct hppa_bus_dma_tag sc_dmatag;
};

void apic_attach(struct elroy_softc *sc);
int apic_intr(void *v);
int apic_intr_map(struct pci_attach_args *pa, pci_intr_handle_t *ihp);
const char *apic_intr_string(void *v, pci_intr_handle_t ih);
void *apic_intr_establish(void *v, pci_intr_handle_t ih, int pri,
    int (*handler)(void *), void *arg, const char *name);
void apic_intr_disestablish(void *v, void *cookie);

void elroy_write32(volatile u_int32_t *p, u_int32_t v);
u_int32_t elroy_read32(volatile u_int32_t *p);
@


1.3
log
@Get interrupt information from PDC and use it to program the IO SAPIC.
Needed to make edge triggered interrupts work.
@
text
@d1 1
a1 1
/*	$OpenBSD: elroyvar.h,v 1.2 2007/05/27 16:36:07 kettenis Exp $	*/
d53 1
a53 1
    int (*handler)(void *), void *arg, char *name);
@


1.2
log
@Dynamically allocate irq's for pci devices on elroy(4).

ok martin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: elroyvar.h,v 1.1 2007/05/21 22:43:38 kettenis Exp $	*/
d20 2
d26 1
d36 3
@


1.1
log
@Import code to support the Elroy chip from hppa64 and make it actually work.
Still a bit of a hack, but it makes the onboard devices work.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d32 1
@

