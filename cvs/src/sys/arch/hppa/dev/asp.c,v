head	1.14;
access;
symbols
	OPENBSD_6_1:1.14.0.50
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.46
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.42
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.44
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.36
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.40
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.38
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.34
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.32
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.30
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.28
	OPENBSD_5_0:1.14.0.26
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.24
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.22
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.18
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.20
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.16
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.14
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.12
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.10
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.8
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.6
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.13
	SMP_SYNC_B:1.13
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.10.0.2
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.7
	UBC:1.5.0.12
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.10
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.8
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.6
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.2
	SMP_BASE:1.5
	kame_19991208:1.4
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.14
date	2005.06.09.18.01.36;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.07.18.24.19;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.08.20.48.39;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2003.04.08.20.37.39;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.18.09.40.40;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.18.23.52.45;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.17.21.54.20;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2002.04.22.01.48.37;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.31;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2000.02.09.05.04.22;	author mickey;	state Exp;
branches
	1.5.2.1
	1.5.12.1;
next	1.4;

1.4
date	99.11.26.17.59.55;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	99.07.16.17.53.06;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	99.05.05.02.19.02;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.11.23.02.55.43;	author mickey;	state Exp;
branches;
next	;

1.5.2.1
date	2002.03.28.10.07.19;	author niklas;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2003.03.27.23.26.53;	author niklas;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2003.05.13.19.41.03;	author ho;	state Exp;
branches;
next	1.5.2.4;

1.5.2.4
date	2004.06.05.23.10.47;	author niklas;	state Exp;
branches;
next	;

1.5.12.1
date	2002.06.11.03.35.36;	author art;	state Exp;
branches;
next	1.5.12.2;

1.5.12.2
date	2003.05.19.21.49.41;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@it appears asp occupies more space than intially thought and
audio wraps off the edge making troubles.
make sure gsc attachment follows the amsk from the parents
and also extend the asp's range to a full 512m.
found by Graham Gower <graham.gower@@gmail.com> on 735
testing by miod@@ on 715
@
text
@/*	$OpenBSD: asp.c,v 1.13 2004/04/07 18:24:19 mickey Exp $	*/

/*
 * Copyright (c) 1998-2003 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * References:
 *
 * 1. Cobra/Coral I/O Subsystem External Reference Specification
 *    Hewlett-Packard
 *
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/reboot.h>

#include <machine/bus.h>
#include <machine/iomod.h>
#include <machine/autoconf.h>
#include <machine/cpufunc.h>

#include <hppa/dev/cpudevs.h>
#include <hppa/dev/viper.h>

#include <hppa/gsc/gscbusvar.h>

struct asp_hwr {
	u_int8_t asp_reset;
	u_int8_t asp_resv[31];
	u_int8_t asp_version;
	u_int8_t asp_resv1[15];
	u_int8_t asp_scsidsync;
	u_int8_t asp_resv2[15];
	u_int8_t asp_error;
};

struct asp_trs {
	u_int32_t asp_irr;
	u_int32_t asp_imr;
	u_int32_t asp_ipr;
	u_int32_t asp_icr;
	u_int32_t asp_iar;
	u_int32_t asp_resv[3];
	u_int8_t  asp_cled;
	u_int8_t  asp_resv1[3];
	struct {
		u_int		:20,
			asp_spu	: 3,	/* SPU ID board jumper */
#define	ASP_SPUCOBRA	0
#define	ASP_SPUCORAL	1
#define	ASP_SPUBUSH	2
#define	ASP_SPUHARDBALL	3
#define	ASP_SPUSCORPIO	4
#define	ASP_SPUCORAL2	5
			asp_sw	: 1,	/* front switch is normal */
			asp_clk : 1,	/* SCSI clock is doubled */
			asp_lan : 2,	/* LAN iface selector */
#define	ASP_LANINVAL	0
#define	ASP_LANAUI	1
#define	ASP_LANTHIN	2
#define	ASP_LANMISS	3
			asp_lanf: 1,	/* LAN AUI fuse is ok */
			asp_spwr: 1,	/* SCSI power ok */
			asp_scsi: 3;	/* SCSI ctrl ID */
	} _asp_ios;
#define	asp_spu		_asp_ios.asp_spu
#define	asp_sw		_asp_ios.asp_sw
#define	asp_clk		_asp_ios.asp_clk
#define	asp_lan		_asp_ios.asp_lan
#define	asp_lanf	_asp_ios.asp_lanf
#define	asp_spwr	_asp_ios.asp_spwr
#define	asp_scsi	_asp_ios.asp_scsi
};

const struct asp_spus_tag {
	char	name[12];
	int	ledword;
} asp_spus[] = {
	{ "Cobra", 0 },
	{ "Coral", 0 },
	{ "Bushmaster", 0 },
	{ "Hardball", 1 },
	{ "Scorpio", 0 },
	{ "Coral II", 1 },
	{ "#6", 0 },
	{ "#7", 0 }
};

struct asp_softc {
	struct  device sc_dev;
	struct gscbus_ic sc_ic;

	volatile struct asp_hwr *sc_hw;
	volatile struct asp_trs *sc_trs;
};

#define	ASP_IOMASK	0xfe000000
/* ASP "Primary Controller" HPA */
#define	ASP_CHPA	0xF0800000

int	aspmatch(struct device *, void *, void *);
void	aspattach(struct device *, struct device *, void *);

struct cfattach asp_ca = {
	sizeof(struct asp_softc), aspmatch, aspattach
};

struct cfdriver asp_cd = {
	NULL, "asp", DV_DULL
};

int
aspmatch(parent, cfdata, aux)   
	struct device *parent;
	void *cfdata;
	void *aux;
{
	struct confargs *ca = aux;
	/* struct cfdata *cf = cfdata; */

	if (ca->ca_type.iodc_type != HPPA_TYPE_BHA ||
	    ca->ca_type.iodc_sv_model != HPPA_BHA_ASP)
		return 0;

	return 1;
}

void
aspattach(parent, self, aux)
	struct device *parent;
	struct device *self;
	void *aux;
{
	register struct confargs *ca = aux;
	register struct asp_softc *sc = (struct asp_softc *)self;
	struct gsc_attach_args ga;
	bus_space_handle_t ioh;
	register u_int32_t irr;
	register int s;

	if (bus_space_map(ca->ca_iot, ca->ca_hpa, IOMOD_HPASIZE, 0, &ioh)) {
		printf(": can't map IO space\n");
		return;
	}

	sc->sc_trs = (struct asp_trs *)ASP_CHPA;
	sc->sc_hw = (struct asp_hwr *)ca->ca_hpa;

#ifdef USELEDS
	machine_ledaddr = &sc->sc_trs->asp_cled;
	machine_ledword = asp_spus[sc->sc_trs->asp_spu].ledword;
#endif

	/* reset ASP */
	/* sc->sc_hw->asp_reset = 1; */
	/* delay(400000); */

	s = splhigh();
	viper_setintrwnd(1 << ca->ca_irq);

	sc->sc_trs->asp_imr = ~0;
	irr = sc->sc_trs->asp_irr;
	sc->sc_trs->asp_imr = 0;
	splx(s);

	printf (": %s rev %d, lan %d scsi %d\n",
	    asp_spus[sc->sc_trs->asp_spu].name, sc->sc_hw->asp_version,
	    sc->sc_trs->asp_lan, sc->sc_trs->asp_scsi);

	sc->sc_ic.gsc_type = gsc_asp;
	sc->sc_ic.gsc_dv = sc;
	sc->sc_ic.gsc_base = sc->sc_trs;

	ga.ga_ca = *ca;	/* clone from us */
	ga.ga_dp.dp_bc[0] = ga.ga_dp.dp_bc[1];
	ga.ga_dp.dp_bc[1] = ga.ga_dp.dp_bc[2];
	ga.ga_dp.dp_bc[2] = ga.ga_dp.dp_bc[3];
	ga.ga_dp.dp_bc[3] = ga.ga_dp.dp_bc[4];
	ga.ga_dp.dp_bc[4] = ga.ga_dp.dp_bc[5];
	ga.ga_dp.dp_bc[5] = ga.ga_dp.dp_mod;
	ga.ga_dp.dp_mod = 0;
	ga.ga_hpamask = ASP_IOMASK;
	ga.ga_name = "gsc";
	ga.ga_ic = &sc->sc_ic;
	config_found(self, &ga, gscprint);
}
@


1.13
log
@update copyright; miod@@ is fine w/ files where he holds it too
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.12 2003/04/08 20:48:39 mickey Exp $	*/
d122 1
a122 1
#define	ASP_IOMASK	0xfff00000
@


1.12
log
@just wate that debug altogether
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.11 2003/04/08 20:37:39 miod Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d19 8
a26 7
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF MIND,
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.11
log
@Make dmesg prettier if attachment fails and no option DEBUG
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.10 2003/02/18 09:40:40 miod Exp $	*/
d171 1
a171 5
#ifdef DEBUG
		printf("aspattach: can't map IO space\n");
#else
		printf("\n");
#endif
@


1.10
log
@Let kernels compile without DDB, USELEDS, and DIAGNOSTIC.
For future intallation media.
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.9 2002/12/18 23:52:45 mickey Exp $	*/
d173 2
@


1.9
log
@newer machines use phantom bus to attach lasi and other bus adapters.
oledr machines did not have a real device for the phantom bus port.
change the device scanning technique to both include a full device path
in the attach_args and do proper shifting in the pdc_scanbus() and
add a device for the newer machines as well as use a newer device
mapping (path to hpa) available on newer firmware versions, where
old (hversion-dependant) is not available.
tested on 712,715/33,c110, miod@@ ok, weissmandude -- testing
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.8 2002/12/17 21:54:20 mickey Exp $	*/
d180 1
d183 1
@


1.8
log
@real interrupts/spl framework.
tested on 712/* 715/100, 715/33 which main cpu/bus types.
miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.7 2002/04/22 01:48:37 mickey Exp $	*/
d204 7
@


1.7
log
@do not forget to set the hpamask
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.6 2002/03/14 01:26:31 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998,1999 Michael Shalayeff
a140 5
void asp_intr_establish(void *v, u_int32_t mask);
void asp_intr_disestablish(void *v, u_int32_t mask);
u_int32_t asp_intr_check(void *v);
void asp_intr_ack(void *v, u_int32_t mask);

d201 1
a201 4
	sc->sc_ic.gsc_intr_establish = asp_intr_establish;
	sc->sc_ic.gsc_intr_disestablish = asp_intr_disestablish;
	sc->sc_ic.gsc_intr_check = asp_intr_check;
	sc->sc_ic.gsc_intr_ack = asp_intr_ack;
a207 44
}

void
asp_intr_establish(v, mask)
	void *v;
	u_int32_t mask;
{
	register struct asp_softc *sc = v;

	sc->sc_trs->asp_imr |= mask;
}

void
asp_intr_disestablish(v, mask)
	void *v;
	u_int32_t mask;
{
	register struct asp_softc *sc = v;

	sc->sc_trs->asp_imr &= ~mask;
}

u_int32_t
asp_intr_check(v)
	void *v;
{
	register struct asp_softc *sc = v;
	register u_int32_t irr, imr;

	imr = sc->sc_trs->asp_imr;
	irr = sc->sc_trs->asp_irr;
	sc->sc_trs->asp_imr = imr & ~irr;

	return irr;
}

void
asp_intr_ack(v, mask)
	void *v;
	u_int32_t mask;
{
	register struct asp_softc *sc = v;

	sc->sc_trs->asp_imr |= mask;
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.5 2000/02/09 05:04:22 mickey Exp $	*/
d126 1
d212 1
@


1.5
log
@heartbeat -- yeah we have a patch for that
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.4 1999/11/26 17:59:55 mickey Exp $	*/
d129 2
a130 2
int	aspmatch __P((struct device *, void *, void *));
void	aspattach __P((struct device *, struct device *, void *));
d140 4
a143 4
void asp_intr_establish __P((void *v, u_int32_t mask));
void asp_intr_disestablish __P((void *v, u_int32_t mask));
u_int32_t asp_intr_check __P((void *v));
void asp_intr_ack __P((void *v, u_int32_t mask));
@


1.5.12.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.5 2000/02/09 05:04:22 mickey Exp $	*/
a125 1
#define	ASP_IOMASK	0xfff00000
d129 2
a130 2
int	aspmatch(struct device *, void *, void *);
void	aspattach(struct device *, struct device *, void *);
d140 4
a143 4
void asp_intr_establish(void *v, u_int32_t mask);
void asp_intr_disestablish(void *v, u_int32_t mask);
u_int32_t asp_intr_check(void *v);
void asp_intr_ack(void *v, u_int32_t mask);
a210 1
	ga.ga_hpamask = ASP_IOMASK;
@


1.5.12.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
d141 5
d176 3
a178 1
		printf(": can't map IO space\n");
a184 1
#ifdef USELEDS
a186 1
#endif
d206 4
a209 1
	sc->sc_ic.gsc_base = sc->sc_trs;
a211 7
	ga.ga_dp.dp_bc[0] = ga.ga_dp.dp_bc[1];
	ga.ga_dp.dp_bc[1] = ga.ga_dp.dp_bc[2];
	ga.ga_dp.dp_bc[2] = ga.ga_dp.dp_bc[3];
	ga.ga_dp.dp_bc[3] = ga.ga_dp.dp_bc[4];
	ga.ga_dp.dp_bc[4] = ga.ga_dp.dp_bc[5];
	ga.ga_dp.dp_bc[5] = ga.ga_dp.dp_mod;
	ga.ga_dp.dp_mod = 0;
d216 44
@


1.5.2.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d129 2
a130 2
int	aspmatch(struct device *, void *, void *);
void	aspattach(struct device *, struct device *, void *);
d140 4
a143 4
void asp_intr_establish(void *v, u_int32_t mask);
void asp_intr_disestablish(void *v, u_int32_t mask);
u_int32_t asp_intr_check(void *v);
void asp_intr_ack(void *v, u_int32_t mask);
@


1.5.2.2
log
@Sync the SMP branch with 3.3
@
text
@d4 1
a4 1
 * Copyright (c) 1998-2002 Michael Shalayeff
a125 1
#define	ASP_IOMASK	0xfff00000
d140 5
a183 1
#ifdef USELEDS
a185 1
#endif
d205 4
a208 1
	sc->sc_ic.gsc_base = sc->sc_trs;
a210 8
	ga.ga_dp.dp_bc[0] = ga.ga_dp.dp_bc[1];
	ga.ga_dp.dp_bc[1] = ga.ga_dp.dp_bc[2];
	ga.ga_dp.dp_bc[2] = ga.ga_dp.dp_bc[3];
	ga.ga_dp.dp_bc[3] = ga.ga_dp.dp_bc[4];
	ga.ga_dp.dp_bc[4] = ga.ga_dp.dp_bc[5];
	ga.ga_dp.dp_bc[5] = ga.ga_dp.dp_mod;
	ga.ga_dp.dp_mod = 0;
	ga.ga_hpamask = ASP_IOMASK;
d214 44
@


1.5.2.3
log
@Sync the SMP branch to -current.
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.5.2.2 2003/03/27 23:26:53 niklas Exp $	*/
d171 3
a173 1
		printf(": can't map IO space\n");
@


1.5.2.4
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1998-2003 Michael Shalayeff
d15 5
d24 7
a30 8
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
@


1.4
log
@print asp spu type in text
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.3 1999/07/16 17:53:06 mickey Exp $	*/
d49 1
a73 3
#define	ASP_LEDDATA	1
#define	ASP_LEDSTROBE	2
#define	ASP_LEDPULSE	8
d104 12
a115 3
static const char asp_spus[][12] = {
	"Cobra", "Coral", "Bushmaster", "Hardball", "Scorpio", "Coral II",
	"#6", "#7"
d122 2
a123 3
	struct asp_hwr volatile *sc_hw;
	struct asp_trs volatile *sc_trs;
	u_int8_t sc_leds;
d184 2
a185 1
	sc->sc_leds = 0;
d199 3
a201 2
	printf (": %s rev %d, lan %d scsi %d\n", asp_spus[sc->sc_trs->asp_spu],
	    sc->sc_hw->asp_version, sc->sc_trs->asp_lan, sc->sc_trs->asp_scsi);
a214 17

#ifdef USELEDS
void
heartbeat(int on)
{
	register struct asp_softc *sc;

	sc = asp_cd.cd_devs[0];
	if (asp_cd.cd_ndevs && sc) {
		register u_int8_t r = sc->sc_leds ^= ASP_LEDPULSE, b;
		for (b = 0x80; b; b >>= 1) {
			sc->sc_trs->asp_cled = (r & b)? 1 : 0;
			sc->sc_trs->asp_cled = ASP_LEDSTROBE | (r & b)? 1 : 0;
		}
	}
}
#endif
@


1.3
log
@do not reset, helps the serial console
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.2 1999/05/05 02:19:02 mickey Exp $	*/
d26 2
a27 2
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
d106 5
d192 2
a193 2
	printf (": rev %d, spu %d, lan %d, scsi %d\n", sc->sc_hw->asp_version,
		sc->sc_trs->asp_spu,sc->sc_trs->asp_lan, sc->sc_trs->asp_scsi);
@


1.2
log
@don't use much of bus.h here, no need
@
text
@d1 1
a1 1
/*	$OpenBSD: asp.c,v 1.1 1998/11/23 02:55:43 mickey Exp $	*/
d33 8
d176 2
a177 2
	sc->sc_hw->asp_reset = 1;
	delay(400000);
@


1.1
log
@some GSC bus adapters; WAX is not ready yet
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1998 Michael Shalayeff
d43 1
d47 9
a55 2
struct asp_softc {
	struct  device sc_dv;
d57 40
a96 3
	bus_space_tag_t sc_iot;
	bus_space_handle_t sc_ioh;
	bus_space_handle_t sc_cioh;
d98 2
d102 2
d107 1
a107 1
/* ASP "Primary Controller" definitions */
a108 13
#define	ASP_IRR		0x000
#define	ASP_IMR		0x004
#define	ASP_IPR		0x008
#define	ASP_LEDS	0x020
#define		ASP_LED_DATA	0x01
#define		ASP_LED_STROBE	0x02
#define		ASP_LED_PULSE	0x08

/* ASP registers definitions */
#define	ASP_RESET	0x000
#define	ASP_VERSION	0x020
#define	ASP_DSYNC	0x030
#define	ASP_ERROR	0x040
a120 1
void asp_intr_attach __P((void *v, u_int in));
a133 1
	bus_space_handle_t ioh;
a138 5
	if (bus_space_map(ca->ca_iot, ca->ca_hpa, IOMOD_HPASIZE, 0, &ioh))
		return 0;

	bus_space_unmap(ca->ca_iot, ioh, IOMOD_HPASIZE);

d151 13
a163 1
	u_int ver;
a165 8
	sc->sc_iot = ca->ca_iot;
	if (bus_space_map(sc->sc_iot, ca->ca_hpa, IOMOD_HPASIZE, 0,
			  &sc->sc_ioh))
		panic("aspattach: unable to map bus space");

	if (bus_space_map(sc->sc_iot, ASP_CHPA, IOMOD_HPASIZE, 0,
			  &sc->sc_cioh))
		panic("aspattach: unable to map bus space");
d168 2
a169 1
	bus_space_write_1(sc->sc_iot, sc->sc_ioh, ASP_RESET, 1);
d171 10
a180 3
	ver = bus_space_read_4(sc->sc_iot, sc->sc_ioh, ASP_VERSION);
	printf(": hpa 0x%x, rev %d\n", ca->ca_hpa,
	       (ver & 0xf0) >> 4, ver & 0xf);
a183 1
	sc->sc_ic.gsc_intr_attach = asp_intr_attach;
d202 2
a203 2
	if (sc) {
		register u_int8_t r = sc->sc_leds ^= ASP_LED_PULSE, b;
d205 2
a206 4
			bus_space_write_1(sc->sc_iot, sc->sc_cioh, ASP_LEDS,
					  (r & b)? 1 : 0);
			bus_space_write_1(sc->sc_iot, sc->sc_cioh, ASP_LEDS,
					  ASP_LED_STROBE | ((r & b)? 1 : 0));
a212 17
asp_intr_attach(v, irq)
	void *v;
	u_int irq;
{
	register struct asp_softc *sc = v;
	int s;

	s = splhigh();
	cpu_setintrwnd(1 << irq);

	bus_space_write_4(sc->sc_iot, sc->sc_cioh, ASP_IMR, ~0);
	bus_space_read_4 (sc->sc_iot, sc->sc_cioh, ASP_IRR);
	bus_space_write_4(sc->sc_iot, sc->sc_cioh, ASP_IMR, 0);
	splx(s);
}

void
d219 1
a219 2
	mask |= bus_space_read_4(sc->sc_iot, sc->sc_cioh, ASP_IMR);
	bus_space_write_4(sc->sc_iot, sc->sc_cioh, ASP_IMR, mask);
d229 1
a229 2
	mask &= ~bus_space_read_4(sc->sc_iot, sc->sc_cioh, ASP_IMR);
	bus_space_write_4(sc->sc_iot, sc->sc_cioh, ASP_IMR, mask);
d237 1
a237 1
	register u_int32_t mask, imr;
d239 3
a241 3
	imr = bus_space_read_4(sc->sc_iot, sc->sc_cioh, ASP_IMR);
	mask = bus_space_read_4(sc->sc_iot, sc->sc_cioh, ASP_IRR);
	bus_space_write_4(sc->sc_iot, sc->sc_cioh, ASP_IMR, imr & ~mask);
d243 1
a243 1
	return mask;
d253 1
a253 2
	mask |= bus_space_read_4(sc->sc_iot, sc->sc_cioh, ASP_IMR);
	bus_space_write_4(sc->sc_iot, sc->sc_cioh, ASP_IMR, mask);
@

