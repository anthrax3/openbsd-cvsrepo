head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.42
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.38
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.36
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.34
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.32
	OPENBSD_5_0:1.6.0.30
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.28
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.26
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.22
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.24
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.20
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.18
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.16
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.14
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.12
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.22
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.16
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.6
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.1.0.8
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.6
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	mvme88kport:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.03.18.22.36.35;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2004.04.24.19.51.47;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2004.01.05.20.08.01;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2003.10.11.22.08.57;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.04.16.36.15;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	98.12.15.05.52.30;	author smurph;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	97.03.03.19.32.05;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.03.19.32.05;	author rahnds;	state Exp;
branches;
next	;

1.2.6.1
date	2003.06.07.11.13.16;	author ho;	state Exp;
branches;
next	1.2.6.2;

1.2.6.2
date	2004.02.19.10.49.06;	author niklas;	state Exp;
branches;
next	1.2.6.3;

1.2.6.3
date	2004.06.05.23.09.49;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: clreg.h,v 1.6 2004/04/24 19:51:47 miod Exp $ */

/* Copyright (c) 1998 Steve Murphree, Jr.
 * Copyright (c) 1995 Dale Rahn. All rights reserved.
 *
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#define	CL_COR7		0x0007
#define	CL_LIVR		0x0009
#define	CL_COR1		0x0010
#define	CL_IER		0x0011
#define	CL_STCR		0x0012
#define	CL_CCR		0x0013
#define	CL_COR5		0x0014
#define	CL_COR4		0x0015
#define	CL_COR3		0x0016
#define	CL_COR2		0x0017
#define	CL_COR6		0x0018
#define	CL_DMABSTS	0x0019
#define	CL_CSR		0x001a
#define	CL_CMR		0x001b
#define	CL_SCHR4	0x001c
#define	CL_SCHR3	0x001d
#define	CL_SCHR2	0x001e
#define	CL_SCHR1	0x001f
#define	CL_SCRH		0x0022
#define	CL_SCRL		0x0023

#define	CL_RTPR		0x0024
#define	CL_RTPRH	0x0024
#define	CL_RTPRL	0x0025

#define	CL_LICR		0x0026
#define	CL_LNXT		0x002e
#define	CL_RFOC		0x0030

#define	CL_TCBADRU	0x0038
#define	CL_TCBADRL	0x003a
#define	CL_RCBADRU	0x003c
#define	CL_RCBADRL	0x003e
#define	CL_ARBADRU	0x0040
#define	CL_ARBARDL	0x0042
#define	CL_BRBADRU	0x0044
#define	CL_BRBADRL	0x0046
#define	CL_BRBCNT	0x0048
#define	CL_ARBCNT	0x004a

#define	CL_BRBSTS	0x004e
#define	CL_ARBSTS	0x004f

#define	CL_ATBADR	0x0050
#define	CL_ATBADRU	0x0050
#define	CL_ATBADRL	0x0052
#define	CL_BTBADR	0x0054
#define	CL_BTBADRU	0x0054
#define	CL_BTBADRL	0x0056

#define	CL_BTBCNT	0x0058
#define	CL_ATBCNT	0x005a

#define	CL_BTBSTS	0x005e
#define	CL_ATBSTS	0x005f

#define	CL_TFTC		0x0080
#define	CL_GFRCR	0x0081
#define	CL_REOIR	0x0084
#define	CL_TEOIR	0x0085
#define	CL_MEOIR	0x0086

#define	CL_RISR		0x0088
#define	CL_RISRH	0x0088
#define	CL_RISRL	0x0089

#define	CL_TISR		0x008a
#define	CL_MISR		0x008b
#define	CL_BERCNT	0x008e
#define	CL_TCOR		0x00c0
#define	CL_TBPR		0x00c3
#define	CL_RCOR		0x00c8
#define	CL_RBPR		0x00cb
#define	CL_CPSR		0x00d6
#define	CL_TPR		0x00da
#define	CL_MSVR_RTS	0x00de
#define	CL_MSVR_DTR	0x00df
#define	CL_TPILR	0x00e0
#define	CL_RPILR	0x00e1
#define	CL_STK		0x00e2
#define	CL_MPILR	0x00e3
#define	CL_TIR		0x00ec
#define	CL_RIR		0x00ed
#define	CL_CAR		0x00ee
#define	CL_MIR		0x00ef
#define	CL_DMR		0x00f6
#define	CL_RDR		0x00f8
#define	CL_TDR		0x00f8

#define CD2400_SIZE		0x200

/*
 * Cirrus chip base address on the mvme1x7 boards.
 */
#define CD2400_BASE_ADDR	0xfff45000
#define CD2400_SECONDARY_ADDR	0xfff45200
@


1.6
log
@Preliminary switch to an mvme88k bus_space world. Not all drivers have been
converted yet, and they rely upon some linear mappings provided by bus_space.

In order to not impact performance, almost all the bus_space accesses go
through macros and inline functions. This currently restricts us to D16 and
D32 access modes, which are selected at compilation time. Since there are no
plans to support D8 vme devices in the future, this is acceptable for now.

This makes the "len" locator for vme devices go away, and allows to simplify
some code which was using the pcctwo device, and will now directly access
hardware which is known to exist, rather than wait until the device is
attached.

While there, try to enforce more interrupt vector number checks, since these
changes pointed out that dart(4) had been working correctly so far by sheer
luck only.
@
text
@d1 1
a1 1
/*	$OpenBSD: clreg.h,v 1.5 2004/01/05 20:08:01 miod Exp $ */
@


1.5
log
@Support for the second set of serial ports on the M8120 (untested)
@
text
@d1 1
a1 1
/*	$OpenBSD: clreg.h,v 1.4 2003/10/11 22:08:57 miod Exp $ */
d30 20
a49 132
struct clreg {
	volatile u_char anon1[0x7];
	volatile u_char cl_cor7;			/* 0x07 */
	volatile u_char anon2[0x1];
	volatile u_char cl_livr;			/* 0x09 */
	volatile u_char  anon3[0x6];
	volatile u_char cl_cor1;			/* 0x10 */
	volatile u_char cl_ier;				/* 0x11 */
	volatile u_char cl_stcr;			/* 0x12 */
	volatile u_char cl_ccr;				/* 0x13 */
	volatile u_char cl_cor5;			/* 0x14 */
	volatile u_char cl_cor4;			/* 0x15 */
	volatile u_char cl_cor3;			/* 0x16 */
	volatile u_char cl_cor2;			/* 0x17 */
	volatile u_char cl_cor6;			/* 0x18 */
	volatile u_char cl_dmabsts;			/* 0x19 */
	volatile u_char cl_csr;				/* 0x1a */
	volatile u_char cl_cmr;				/* 0x1b */
	volatile u_char cl_schr4;			/* 0x1c */
	volatile u_char cl_schr3;			/* 0x1d */
	volatile u_char cl_schr2;			/* 0x1e */
	volatile u_char cl_schr1;			/* 0x1f */
	volatile u_char anon5[0x2];
	volatile u_char cl_scrh;			/* 0x22 */
	volatile u_char cl_scrl;			/* 0x23 */
#define cl_rtpr rtpr.rtpr_rtpr
#define cl_rtprh rtpr.hl.rtpr_rtprh
#define cl_rtprl rtpr.hl.rtpr_rtprl
	union {
		volatile u_short rtpr_rtpr;		/* 0x24 */
		struct {
			volatile u_char rtpr_rtprh;	/* 0x24 */
			volatile u_char rtpr_rtprl;	/* 0x25 */
		}hl;
	}rtpr;
	volatile u_char cl_licr;			/* 0x26 */
	volatile u_char anon6[0x7];
	volatile u_char cl_lnxt;			/* 0x2e */
	volatile u_char anon7[0x1];
	volatile u_char cl_rfoc;			/* 0x30 */
	volatile u_char anon8[0x7];
	volatile u_short cl_tcbadru;			/* 0x38 */
	volatile u_short cl_tcbadrl;			/* 0x3a */
	volatile u_short cl_rcbadru;			/* 0x3c */
	volatile u_short cl_rcbadrl;			/* 0x3e */
	volatile u_short cl_arbadru;			/* 0x40 */
	volatile u_short cl_arbadrl;			/* 0x42 */
	volatile u_short cl_brbadru;			/* 0x44 */
	volatile u_short cl_brbadrl;			/* 0x46 */
	volatile u_short cl_brbcnt;			/* 0x48 */
	volatile u_short cl_arbcnt;			/* 0x4a */
	volatile u_char anoni[0x2];
	volatile u_char cl_brbsts;			/* 0x4e */
	volatile u_char cl_arbsts;			/* 0x4f */
#define cl_atbadr  atbadr.atbadr
#define cl_atbadru atbadr.hl.atbadru
#define cl_atbadrl atbadr.hl.atbadrl
	union {
		struct {
			volatile u_short atbadru;	/* 0x50 */
			volatile u_short atbadrl;	/* 0x52 */
		}hl;
		volatile u_long atbadr;			/* 0x50 */
	}atbadr;
#define cl_btbadr  btbadr.btbadr
#define cl_btbadru btbadr.hl.btbadru
#define cl_btbadrl btbadr.hl.btbadrl
	union {
		struct {
			volatile u_short btbadru;	/* 0x54 */
			volatile u_short btbadrl;	/* 0x56 */
		}hl;
		volatile u_long btbadr;			/* 0x54 */
	}btbadr;
	volatile u_short cl_btbcnt;			/* 0x58 */
	volatile u_short cl_atbcnt;			/* 0x5a */
	volatile u_char anono[0x2];
	volatile u_char cl_btbsts;			/* 0x5e */
	volatile u_char cl_atbsts;			/* 0x5f */
	volatile u_char anonp[0x20];
	volatile u_char cl_tftc;			/* 0x80 */
	volatile u_char cl_gfrcr;			/* 0x81 */
	volatile u_char anonq[0x2];
	volatile u_char cl_reoir;			/* 0x84 */
	volatile u_char cl_teoir;			/* 0x85 */
	volatile u_char cl_meoir;			/* 0x86 */
	volatile u_char anonr[0x1];
#define cl_risr risr.risr_risr
#define cl_risrl risr.hl.risr_risrl
#define cl_risrh risr.hl.risr_risrh
	union {
		volatile u_short risr_risr;		/* 0x88 */
		struct {
			volatile u_char risr_risrh;	/* 0x88 */
			volatile u_char risr_risrl;	/* 0x89 */
		}hl;
	}risr;
	volatile u_char cl_tisr;			/* 0x8a */
	volatile u_char cl_misr;			/* 0x8b */
	volatile u_char anons[0x2];
	volatile u_char cl_bercnt;			/* 0x8e */
	volatile u_char anont[0x31];
	volatile u_char cl_tcor;			/* 0xc0 */
	volatile u_char anonu[0x2];
	volatile u_char cl_tbpr;			/* 0xc3 */
	volatile u_char anonv[0x4];
	volatile u_char cl_rcor;			/* 0xc8 */
	volatile u_char anonw[0x2];
	volatile u_char cl_rbpr;			/* 0xcb */
	volatile u_char anonx[0xa];
	volatile u_char cl_cpsr;			/* 0xd6 */
	volatile u_char anony[0x3];
	volatile u_char cl_tpr;				/* 0xda */
	volatile u_char anonz[0x3];
	volatile u_char cl_msvr_rts;			/* 0xde */
	volatile u_char cl_msvr_dtr;			/* 0xdf */
	volatile u_char cl_tpilr;			/* 0xe0 */
	volatile u_char cl_rpilr;			/* 0xe1 */
	volatile u_char cl_stk;				/* 0xe2 */
	volatile u_char cl_mpilr;			/* 0xe3 */
	volatile u_char anonA[0x8];
	volatile u_char cl_tir;				/* 0xec */
	volatile u_char cl_rir;				/* 0xed */
	volatile u_char cl_car;				/* 0xee */
	volatile u_char cl_mir;				/* 0xef */
	volatile u_char anonB[0x6];
	volatile u_char cl_dmr;				/* 0xf6 */
	volatile u_char anonC[0x1];
#define cl_rdr cl_tdr
	volatile u_char cl_tdr;				/* 0xf8 */
	volatile u_char anonD[7];
};
d51 67
@


1.4
log
@Nuke trailing whitespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: clreg.h,v 1.3 2003/06/04 16:36:15 deraadt Exp $ */
d170 1
@


1.3
log
@more term 3 & 4 from various developers, with permission of course
@
text
@d1 1
a1 1
/*	$OpenBSD: clreg.h,v 1.2 1998/12/15 05:52:30 smurph Exp $ */
d3 1
a3 1
/* Copyright (c) 1998 Steve Murphree, Jr. 
d6 1
a6 1
 *   
d28 1
a28 1
 */  
@


1.2
log
@Commit for the first real OpenBSD mvme88k port.
@
text
@d1 2
a2 1
/*	$OpenBSD: bugio.c,v 1.1 1997/03/03 19:32:04 rahnds Exp $ */
d15 1
a15 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *   This product includes software developed by Dale Rahn.
 * 4. The name of the author may not be used to endorse or promote products
@


1.2.6.1
log
@Sync SMP branch to -current
@
text
@d1 1
a1 2
/*	$OpenBSD$ */

d14 4
a17 1
 * 3. The name of the author may not be used to endorse or promote products
@


1.2.6.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d3 1
a3 1
/* Copyright (c) 1998 Steve Murphree, Jr.
d6 1
a6 1
 *
d28 1
a28 1
 */
a169 1
#define CD2400_SECONDARY_ADDR	0xfff45200
@


1.2.6.3
log
@Merge with the trunk
@
text
@d30 132
a161 20
#define	CL_COR7		0x0007
#define	CL_LIVR		0x0009
#define	CL_COR1		0x0010
#define	CL_IER		0x0011
#define	CL_STCR		0x0012
#define	CL_CCR		0x0013
#define	CL_COR5		0x0014
#define	CL_COR4		0x0015
#define	CL_COR3		0x0016
#define	CL_COR2		0x0017
#define	CL_COR6		0x0018
#define	CL_DMABSTS	0x0019
#define	CL_CSR		0x001a
#define	CL_CMR		0x001b
#define	CL_SCHR4	0x001c
#define	CL_SCHR3	0x001d
#define	CL_SCHR2	0x001e
#define	CL_SCHR1	0x001f
#define	CL_SCRH		0x0022
#define	CL_SCRL		0x0023
a162 67
#define	CL_RTPR		0x0024
#define	CL_RTPRH	0x0024
#define	CL_RTPRL	0x0025

#define	CL_LICR		0x0026
#define	CL_LNXT		0x002e
#define	CL_RFOC		0x0030

#define	CL_TCBADRU	0x0038
#define	CL_TCBADRL	0x003a
#define	CL_RCBADRU	0x003c
#define	CL_RCBADRL	0x003e
#define	CL_ARBADRU	0x0040
#define	CL_ARBARDL	0x0042
#define	CL_BRBADRU	0x0044
#define	CL_BRBADRL	0x0046
#define	CL_BRBCNT	0x0048
#define	CL_ARBCNT	0x004a

#define	CL_BRBSTS	0x004e
#define	CL_ARBSTS	0x004f

#define	CL_ATBADR	0x0050
#define	CL_ATBADRU	0x0050
#define	CL_ATBADRL	0x0052
#define	CL_BTBADR	0x0054
#define	CL_BTBADRU	0x0054
#define	CL_BTBADRL	0x0056

#define	CL_BTBCNT	0x0058
#define	CL_ATBCNT	0x005a

#define	CL_BTBSTS	0x005e
#define	CL_ATBSTS	0x005f

#define	CL_TFTC		0x0080
#define	CL_GFRCR	0x0081
#define	CL_REOIR	0x0084
#define	CL_TEOIR	0x0085
#define	CL_MEOIR	0x0086

#define	CL_RISR		0x0088
#define	CL_RISRH	0x0088
#define	CL_RISRL	0x0089

#define	CL_TISR		0x008a
#define	CL_MISR		0x008b
#define	CL_BERCNT	0x008e
#define	CL_TCOR		0x00c0
#define	CL_TBPR		0x00c3
#define	CL_RCOR		0x00c8
#define	CL_RBPR		0x00cb
#define	CL_CPSR		0x00d6
#define	CL_TPR		0x00da
#define	CL_MSVR_RTS	0x00de
#define	CL_MSVR_DTR	0x00df
#define	CL_TPILR	0x00e0
#define	CL_RPILR	0x00e1
#define	CL_STK		0x00e2
#define	CL_MPILR	0x00e3
#define	CL_TIR		0x00ec
#define	CL_RIR		0x00ed
#define	CL_CAR		0x00ee
#define	CL_MIR		0x00ef
#define	CL_DMR		0x00f6
#define	CL_RDR		0x00f8
#define	CL_TDR		0x00f8
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
/* $NetBSD$ */
/*
d33 4
a36 4
	volatile u_char	anon1[0x7];
	volatile u_char	cl_cor7;		/* 0x07 */	
	volatile u_char	anon2[0x1];
	volatile u_char	cl_livr;	/* 0x09 */	
d38 19
a56 19
	volatile u_char	cl_cor1;		/* 0x10 */	
	volatile u_char	cl_ier;		/* 0x11 */	
	volatile u_char  cl_stcr;	/* 0x12 */
	volatile u_char	cl_ccr;		/* 0x13 */	
	volatile u_char	cl_cor5;		/* 0x14 */	
	volatile u_char	cl_cor4;		/* 0x15 */	
	volatile u_char	cl_cor3;		/* 0x16 */	
	volatile u_char	cl_cor2;		/* 0x17 */	
	volatile u_char	cl_cor6;		/* 0x18 */	
	volatile u_char	cl_dmabsts;	/* 0x19 */	
	volatile u_char	cl_csr;		/* 0x1a */	
	volatile u_char	cl_cmr;		/* 0x1b */	
	volatile u_char  cl_schr4;	/* 0x1c */
	volatile u_char  cl_schr3;	/* 0x1d */
	volatile u_char  cl_schr2;	/* 0x1e */
	volatile u_char  cl_schr1;	/* 0x1f */
	volatile u_char	anon5[0x2];
	volatile u_char  cl_scrh;	/* 0x22 */
	volatile u_char  cl_scrl;	/* 0x23 */
d61 1
a61 1
		volatile u_short	rtpr_rtpr;	/* 0x24 */	
d63 2
a64 2
			volatile u_char	rtpr_rtprh;	/* 0x24 */	
			volatile u_char	rtpr_rtprl;	/* 0x25 */	
d67 19
a85 19
	volatile u_char	cl_licr;	/* 0x26 */	
	volatile u_char	anon6[0x7];
	volatile u_char	cl_lnxt;	/* 0x2e */	
	volatile u_char	anon7[0x1];
	volatile u_char	cl_rfoc;	/* 0x30 */	
	volatile u_char	anon8[0x7];
	volatile u_short	cl_tcbadru;	/* 0x38 */	
	volatile u_short	cl_tcbadrl;	/* 0x3a */	
	volatile u_short	cl_rcbadru;	/* 0x3c */	
	volatile u_short	cl_rcbadrl;	/* 0x3e */	
	volatile u_short	cl_arbadru;	/* 0x40 */	
	volatile u_short	cl_arbadrl;	/* 0x42 */	
	volatile u_short	cl_brbadru;	/* 0x44 */	
	volatile u_short	cl_brbadrl;	/* 0x46 */	
	volatile u_short	cl_brbcnt;	/* 0x48 */	
	volatile u_short	cl_arbcnt;	/* 0x4a */	
	volatile u_char	anoni[0x2];
	volatile u_char	cl_brbsts;	/* 0x4e */	
	volatile u_char	cl_arbsts;	/* 0x4f */	
d91 2
a92 2
			volatile u_short	atbadru;	/* 0x50 */	
			volatile u_short	atbadrl;	/* 0x52 */	
d94 1
a94 1
		volatile u_long	atbadr;	/* 0x50 */	
d101 2
a102 2
			volatile u_short	btbadru;	/* 0x54 */	
			volatile u_short	btbadrl;	/* 0x56 */	
d104 1
a104 1
		volatile u_long	btbadr;	/* 0x54 */	
d106 13
a118 13
	volatile u_short	cl_btbcnt;	/* 0x58 */	
	volatile u_short	cl_atbcnt;	/* 0x5a */	
	volatile u_char	anono[0x2];
	volatile u_char	cl_btbsts;	/* 0x5e */	
	volatile u_char	cl_atbsts;	/* 0x5f */	
	volatile u_char	anonp[0x20];
	volatile u_char	cl_tftc;	/* 0x80 */	
	volatile u_char	cl_gfrcr;	/* 0x81 */	
	volatile u_char	anonq[0x2];
	volatile u_char	cl_reoir;	/* 0x84 */	
	volatile u_char	cl_teoir;	/* 0x85 */	
	volatile u_char	cl_meoir;	/* 0x86 */	
	volatile u_char	anonr[0x1];
d123 1
a123 1
		volatile u_short	risr_risr;	/* 0x88 */	
d125 2
a126 2
			volatile u_char	risr_risrh;	/* 0x88 */	
			volatile u_char	risr_risrl;	/* 0x89 */	
d129 31
a159 31
	volatile u_char	cl_tisr;	/* 0x8a */	
	volatile u_char	cl_misr;	/* 0x8b */	
	volatile u_char	anons[0x2];
	volatile u_char	cl_bercnt;	/* 0x8e */	
	volatile u_char	anont[0x31];
	volatile u_char	cl_tcor;	/* 0xc0 */	
	volatile u_char	anonu[0x2];
	volatile u_char	cl_tbpr;	/* 0xc3 */	
	volatile u_char	anonv[0x4];
	volatile u_char	cl_rcor;	/* 0xc8 */	
	volatile u_char	anonw[0x2];
	volatile u_char	cl_rbpr;	/* 0xcb */	
	volatile u_char	anonx[0xa];
	volatile u_char	cl_cpsr;	/* 0xd6 */	
	volatile u_char	anony[0x3];
	volatile u_char	cl_tpr;		/* 0xda */	
	volatile u_char	anonz[0x3];
	volatile u_char	cl_msvr_rts;	/* 0xde */	
	volatile u_char	cl_msvr_dtr;	/* 0xdf */	
	volatile u_char	cl_tpilr;	/* 0xe0 */	
	volatile u_char	cl_rpilr;	/* 0xe1 */	
	volatile u_char	cl_stk;		/* 0xe2 */	
	volatile u_char	cl_mpilr;	/* 0xe3 */	
	volatile u_char	anonA[0x8];
	volatile u_char	cl_tir;		/* 0xec */	
	volatile u_char	cl_rir;		/* 0xed */	
	volatile u_char	cl_car;		/* 0xee */	
	volatile u_char	cl_mir;		/* 0xef */	
	volatile u_char	anonB[0x6];
	volatile u_char	cl_dmr;		/* 0xf6 */	
	volatile u_char	anonC[0x1];
d161 2
a162 2
	volatile u_char	cl_tdr;		/* 0xf8 */	
	volatile u_char	anonD[7];
@


1.1.1.1
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@@
