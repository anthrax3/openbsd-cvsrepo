head	1.15;
access;
symbols
	OPENBSD_5_5:1.14.0.18
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.14
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.12
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.10
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.8
	OPENBSD_5_0:1.14.0.6
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.4
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.13.0.12
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.14
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.10
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.8
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.6
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.4
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.2
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.12.0.2
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.11.0.8
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.6
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.4
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.1.0.8
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.6
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	mvme88kport:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.14;

1.14
date	2010.06.26.23.24.43;	author guenther;	state Exp;
branches;
next	1.13;

1.13
date	2006.11.16.23.21.56;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2006.05.08.14.36.10;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2004.07.30.19.02.06;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2004.04.24.19.51.48;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.14.20.50.48;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2003.10.05.20.27.48;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.07.06.56;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.39;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.07.23.45.51;	author miod;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	2000.03.26.23.32.00;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.05.29.04.41.44;	author smurph;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	98.12.15.05.52.30;	author smurph;	state Exp;
branches;
next	1.1;

1.1
date	97.03.03.19.32.04;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.03.19.32.04;	author rahnds;	state Exp;
branches;
next	;

1.3.4.1
date	2001.04.18.16.10.56;	author niklas;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.03.28.10.36.02;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2003.06.07.11.13.16;	author ho;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2004.02.19.10.49.06;	author niklas;	state Exp;
branches;
next	1.3.4.5;

1.3.4.5
date	2004.06.05.23.09.49;	author niklas;	state Exp;
branches;
next	;

1.5.6.1
date	2002.06.11.03.37.09;	author art;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: memc.c,v 1.14 2010/06/26 23:24:43 guenther Exp $ */

/*
 * Copyright (c) 1995 Theo de Raadt
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * MEMC/MCECC chips
 * these chips are rather similar in appearance except that the MEMC
 * does parity while the MCECC does ECC.
 */
#include <sys/param.h>
#include <sys/conf.h>
#include <sys/ioctl.h>
#include <sys/proc.h>
#include <sys/tty.h>
#include <sys/uio.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/syslog.h>
#include <sys/fcntl.h>
#include <sys/device.h>

#include <machine/autoconf.h>
#include <machine/cpu.h>

#include <dev/cons.h>

#include <mvme88k/dev/memcreg.h>

struct memcsoftc {
	struct device	sc_dev;
	struct memcreg *sc_memc;
	struct intrhand	sc_ih;
};

void memcattach(struct device *, struct device *, void *);
int  memcmatch(struct device *, void *, void *);

struct cfattach memc_ca = {
	sizeof(struct memcsoftc), memcmatch, memcattach
};

struct cfdriver memc_cd = {
	NULL, "memc", DV_DULL
};

#if 0
int memcintr(void *);
#endif

int
memcmatch(parent, vcf, args)
	struct device *parent;
	void *vcf, *args;
{
	struct confargs *ca = args;
	struct memcreg *memc = (struct memcreg *)ca->ca_paddr;

	if (badaddr((vaddr_t)memc, 4))
		return (0);
	if (memc->memc_chipid==MEMC_CHIPID || memc->memc_chipid==MCECC_CHIPID)
		return (1);
	return (0);
}

void
memcattach(parent, self, args)
	struct device *parent, *self;
	void *args;
{
	struct confargs *ca = args;
	struct memcsoftc *sc = (struct memcsoftc *)self;

	sc->sc_memc = (struct memcreg *)ca->ca_paddr;

	printf(": %s rev %d",
	    (sc->sc_memc->memc_chipid == MEMC_CHIPID) ? "MEMC040" : "MCECC",
	    sc->sc_memc->memc_chiprev);

#if 0
	sc->sc_ih.ih_fn = memcintr;
	sc->sc_ih.ih_arg = 0;
	sc->sc_ih.ih_wantframe = 1;
	sc->sc_ih.ih_ipl = 7;
	mcintr_establish(xxx, &sc->sc_ih, self->dv_xname);
#endif

	switch (sc->sc_memc->memc_chipid) {
	case MEMC_CHIPID:
		break;
	case MCECC_CHIPID:
		break;
	}

	printf("\n");
}

#if 0
int
memcintr(eframe)
	void *eframe;
{
	return (0);
}
#endif
@


1.14
log
@Don't #include <sys/user.h> into files that don't need the stuff
it defines.  In some cases, this means pulling in uvm.h or pcb.h
instead, but most of the inclusions were just noise.  Tested on
alpha, amd64, armish, hppa, i386, macpcc, sgi, sparc64, and vax,
mostly by krw and naddy.
ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.13 2006/11/16 23:21:56 miod Exp $ */
@


1.13
log
@Ratibibugle struct frame and <machine/frame.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.12 2006/05/08 14:36:10 miod Exp $ */
a36 1
#include <sys/user.h>
@


1.12
log
@Replace gazillions of badvaddr() or badwordaddr() calls with badaddr() calls.
With a few prototype declarations shuffling, this finally allows
<machine/locore.h> to die.
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.11 2004/07/30 19:02:06 miod Exp $ */
d71 1
a71 1
int memcintr(struct frame *frame);
@


1.11
log
@Move evcount structures inside struct intrhand, this makes more sense and
gives us more counters in the process.

Also clean up intrhand structures and usage, especially move them to SLISTs.
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.10 2004/04/24 19:51:48 miod Exp $ */
d82 1
a82 1
	if (badvaddr((vaddr_t)memc, 4))
@


1.10
log
@Preliminary switch to an mvme88k bus_space world. Not all drivers have been
converted yet, and they rely upon some linear mappings provided by bus_space.

In order to not impact performance, almost all the bus_space accesses go
through macros and inline functions. This currently restricts us to D16 and
D32 access modes, which are selected at compilation time. Since there are no
plans to support D8 vme devices in the future, this is acceptable for now.

This makes the "len" locator for vme devices go away, and allows to simplify
some code which was using the pcctwo device, and will now directly access
hardware which is known to exist, rather than wait until the device is
attached.

While there, try to enforce more interrupt vector number checks, since these
changes pointed out that dart(4) had been working correctly so far by sheer
luck only.
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.9 2004/01/14 20:50:48 miod Exp $ */
d108 1
a108 1
	mcintr_establish(xxx, &sc->sc_ih);
@


1.9
log
@Do not fill more than the first three fields of cfdriver structures unless
necessary. No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.8 2003/10/05 20:27:48 miod Exp $ */
a54 1
	void *		sc_vaddr;
d70 3
a72 1
/*int memcintr(struct frame *frame);*/
d80 1
a80 1
	struct memcreg *memc = (struct memcreg *)ca->ca_vaddr;
d97 1
a97 5
	/*
	 * since we know ourself to land in intiobase land,
	 * we must adjust our address
	 */
	sc->sc_memc = (struct memcreg *)ca->ca_vaddr;
@


1.8
log
@Kill vm_offset_t and vm_size_t, in favor of the [pv]addr_t and [pv]size_t
typedefs.
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.7 2003/06/02 07:06:56 deraadt Exp $ */
d68 1
a68 1
	NULL, "memc", DV_DULL, 0
@


1.7
log
@licence cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.6 2002/03/14 01:26:39 millert Exp $ */
d81 1
a81 1
	if (badvaddr((vm_offset_t)memc, 4))
@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.5 2001/03/07 23:45:51 miod Exp $ */
a14 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed under OpenBSD by
 *	Theo de Raadt for Willowglen Singapore.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.5
log
@Fix interrupt handler registration and prototypes.
While there, some warning hunting.
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.4 2000/03/26 23:32:00 deraadt Exp $ */
d66 2
a67 2
void memcattach __P((struct device *, struct device *, void *));
int  memcmatch __P((struct device *, void *, void *));
d77 1
a77 1
/*int memcintr __P((struct frame *frame));*/
@


1.5.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.5 2001/03/07 23:45:51 miod Exp $ */
d66 2
a67 2
void memcattach(struct device *, struct device *, void *);
int  memcmatch(struct device *, void *, void *);
d77 1
a77 1
/*int memcintr(struct frame *frame);*/
@


1.4
log
@callout.h is gone
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.3 1999/05/29 04:41:44 smurph Exp $ */
d51 2
d54 1
a54 1
#include <machine/autoconf.h>
a83 1
	struct cfdata *cf = vcf;
d87 1
a87 1
	if (badvaddr(memc, 4))
d115 1
a116 1
	sc->sc_ih.ih_wantframe = 1;
d130 4
a133 3
/*int
memcintr(frame)
	struct frame *frame;
d136 2
a137 1
}*/
@


1.3
log
@Added vme bus device drivers. MVME328, MVME376, MVME332
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.2 1998/12/15 05:52:30 smurph Exp $ */
a45 1
#include <sys/callout.h>
@


1.3.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.5 2001/03/07 23:45:51 miod Exp $ */
d46 1
d52 1
a52 1

a53 2
#include <machine/cpu.h>

d83 1
d87 1
a87 1
	if (badvaddr((vm_offset_t)memc, 4))
d115 1
a116 1
	sc->sc_ih.ih_ipl = 7;
d130 3
a132 4
#if 0
int
memcintr(eframe)
	void *eframe;
d135 1
a135 2
}
#endif
@


1.3.4.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d66 2
a67 2
void memcattach(struct device *, struct device *, void *);
int  memcmatch(struct device *, void *, void *);
d77 1
a77 1
/*int memcintr(struct frame *frame);*/
@


1.3.4.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.3.4.2 2002/03/28 10:36:02 niklas Exp $ */
d15 6
@


1.3.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d68 1
a68 1
	NULL, "memc", DV_DULL
d81 1
a81 1
	if (badvaddr((vaddr_t)memc, 4))
@


1.3.4.5
log
@Merge with the trunk
@
text
@d55 1
d71 1
a71 3
#if 0
int memcintr(struct frame *frame);
#endif
d79 1
a79 1
	struct memcreg *memc = (struct memcreg *)ca->ca_paddr;
d96 5
a100 1
	sc->sc_memc = (struct memcreg *)ca->ca_paddr;
@


1.2
log
@Commit for the first real OpenBSD mvme88k port.
@
text
@d1 1
a1 1
/*	$OpenBSD: memc.c,v 1.4 1996/06/11 10:15:13 deraadt Exp $ */
d87 1
a87 1
	if (badvaddr(memc, 1))
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD$ */
d17 2
a18 1
 *      This product includes software developed by Theo de Raadt
d35 3
a37 5
 * MEMC chip
 * XXX:
 * the databooks say that you should only ever access the higher-numbered
 * MEMC chip's control & status registers. this is strange. I disobey the
 * rules, hopefully there won't be any spanking.
d60 1
a60 1
	caddr_t		sc_vaddr;
d68 2
a69 3
struct cfdriver memccd = {
	NULL, "memc", memcmatch, memcattach,
	DV_DULL, sizeof(struct memcsoftc), 0
d72 6
d87 1
a87 1
	if (badvaddr(memc, 4) || memc->memc_chipid != MEMC_CHIPID)
d89 3
a91 1
	return (1);
d106 1
a106 1
	sc->sc_memc = (struct memcreg *)sc->sc_vaddr;
d108 3
a110 1
	printf(": rev %d, unsupported\n", sc->sc_memc->memc_chiprev);
d113 5
a117 5
	sc->sc_nmiih.ih_fn = memcabort;
	sc->sc_nmiih.ih_arg = 0;
	sc->sc_nmiih.ih_ipl = 7;
	sc->sc_nmiih.ih_wantframe = 1;
	mcintr_establish(xxx, &sc->sc_nmiih);
d119 9
d129 7
@


1.1.1.1
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@@
