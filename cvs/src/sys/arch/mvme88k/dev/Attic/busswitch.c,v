head	1.7;
access;
symbols
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	UBC_SYNC_A:1.7
	UBC_SYNC_B:1.7
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2001.12.19.04.02.25;	author smurph;	state dead;
branches;
next	1.6;

1.6
date	2001.12.16.23.49.46;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.12.13.08.55.51;	author smurph;	state dead;
branches;
next	1.4;

1.4
date	2001.03.09.05.44.38;	author smurph;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.08.00.03.13;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.01.03.38.13;	author smurph;	state Exp;
branches;
next	1.1;

1.1
date	99.09.27.18.43.22;	author smurph;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.04.18.16.10.53;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2002.03.06.02.04.44;	author niklas;	state dead;
branches;
next	;


desc
@@


1.7
log
@bus switch name shortened.  Added register definitons and functionality.
@
text
@/*	$OpenBSD: busswitch.c,v 1.6 2001/12/16 23:49:46 miod Exp $ */

/*
 * Copyright (c) 1999 Steve Murphree, Jr.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed under OpenBSD by
 *	Theo de Raadt for Willowglen Singapore.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/kernel.h>
#include <sys/ioctl.h>
#include <sys/device.h>
#include <sys/systm.h>
#include <sys/uio.h>
#include <sys/malloc.h>
#include <machine/psl.h>
#include <machine/autoconf.h>
#include <machine/bugio.h>
#include <machine/cpu.h>
#include <machine/mioctl.h>
#include <machine/vmparam.h>

#include <mvme88k/dev/busswitchreg.h>

struct busswitchsoftc {
	struct device		sc_dev;
	void *		sc_paddr;
	void *		sc_vaddr;
	int		sc_len;
   struct busswitchreg * sc_busswitch;
};

void	busswitchattach	__P((struct device *, struct device *, void *));
int	busswitchmatch __P((struct device *, void *, void *));

struct cfattach busswitch_ca = { 
        sizeof(struct busswitchsoftc), busswitchmatch, busswitchattach
}; 
 
struct cfdriver busswitch_cd = {
        NULL, "busswitch", DV_DULL, 0
};

int busswitch_print __P((void *args, const char *bus));
int busswitch_scan __P((struct device *parent, void *child, void *args));

int
busswitchmatch(parent, vcf, args)
	struct device *parent;
	void *vcf, *args;
{
	struct confargs *ca = args;
   struct busswitchreg *busswitch;
   /* Don't match if wrong cpu */
	if (cputyp != CPU_197) return (0);
	
   busswitch = (struct busswitchreg *)(IIOV(ca->ca_paddr));
	if (badvaddr((vm_offset_t)busswitch, 4) <= 0){
	    printf("==> busswitch: failed address check.\n");
	    return (0);
	}
	return (1);
}

void
busswitchattach(parent, self, args)
	struct device *parent, *self;
	void *args;
{
	struct confargs *ca = args;
	struct busswitchsoftc	*sc = (struct busswitchsoftc *)self;

	sc->sc_paddr = ca->ca_paddr;
	sc->sc_vaddr = ca->ca_vaddr;

	/*
   printf(": rev %d\n", sc->sc_busswitch->chiprev);
   */
   printf(": rev %d\n", 0);
}

int
busswitch_print(args, bus)
	void *args;
	const char *bus;
{
	struct confargs *ca = args;

	if (ca->ca_offset != -1)
		printf(" offset 0x%x", ca->ca_offset);
	if (ca->ca_ipl > 0)
		printf(" ipl %d", ca->ca_ipl);
	return (UNCONF);
}

int
busswitch_scan(parent, child, args)
	struct device *parent;
	void *child, *args;
{
	struct cfdata *cf = child;
	struct busswitchsoftc *sc = (struct busswitchsoftc *)parent;
	struct confargs oca;

	if (parent->dv_cfdata->cf_driver->cd_indirect) {
		printf(" indirect devices not supported\n");
		return 0;
	}

	bzero(&oca, sizeof oca);
	oca.ca_offset = cf->cf_loc[0];
	oca.ca_ipl = cf->cf_loc[1];
	if (((int)oca.ca_offset != -1) && ISIIOVA(sc->sc_vaddr + oca.ca_offset)) {
		oca.ca_vaddr = sc->sc_vaddr + oca.ca_offset;
		oca.ca_paddr = sc->sc_paddr + oca.ca_offset;
	} else {
		oca.ca_vaddr = (void *)-1;
		oca.ca_paddr = (void *)-1;
	}
	oca.ca_bustype = BUS_BUSSWITCH;
	oca.ca_master = (void *)sc->sc_busswitch;
	oca.ca_name = cf->cf_driver->cd_name;
	if ((*cf->cf_attach->ca_match)(parent, cf, &oca) == 0)
		return (0);
	config_attach(parent, cf, &oca, busswitch_print);
	return (1);
}

@


1.6
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: busswitch.c,v 1.4 2001/03/09 05:44:38 smurph Exp $ */
@


1.5
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@@


1.4
log
@kernel will compile with -Werror.  Added intr.h
@
text
@d1 1
a1 1
/*	$OpenBSD: busswitch.c,v 1.3 2001/03/08 00:03:13 miod Exp $ */
@


1.3
log
@Some warning hunting.
Define new include files for convenience, for use by drivers who can
attach either to pcctwo or syscon, or need bug console routines.
@
text
@d1 1
a1 1
/*	$OpenBSD: busswitch.c,v 1.2 2001/02/01 03:38:13 smurph Exp $ */
d131 3
a133 3
      printf(" indirect devices not supported\n");
      return 0;
   }
@


1.2
log
@Major changes to get MVME188 working.  More header and code cleanups.  The
kernel is tested on MVME188A/2P256 and MVME188A/1P64.
@
text
@d1 1
a1 1
/*	$OpenBSD: busswitch.c,v 1.1 1999/09/27 18:43:22 smurph Exp $ */
d69 3
a76 1
	struct cfdata *cf = vcf;
d83 1
a83 1
	if (badvaddr(busswitch, 4) <= 0){
a127 1
	struct confargs *ca = args;
@


1.1
log
@adding support for MVME188 and MVME197.  Plus 32bit if_ie.
@
text
@d1 1
a1 1
/*	$OpenBSD: busswitch.c,v 1.0 1999/06/16 03:26:27 smurph Exp $ */
d137 1
a137 1
	if ((oca.ca_offset != (void*)-1) && ISIIOVA(sc->sc_vaddr + oca.ca_offset)) {
@


1.1.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: busswitch.c,v 1.4 2001/03/09 05:44:38 smurph Exp $ */
a68 3
int busswitch_print __P((void *args, const char *bus));
int busswitch_scan __P((struct device *parent, void *child, void *args));

d74 1
d81 1
a81 1
	if (badvaddr((vm_offset_t)busswitch, 4) <= 0){
d126 1
d130 3
a132 3
		printf(" indirect devices not supported\n");
		return 0;
	}
d137 1
a137 1
	if (((int)oca.ca_offset != -1) && ISIIOVA(sc->sc_vaddr + oca.ca_offset)) {
@


1.1.4.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD: busswitch.c,v 1.1.4.1 2001/04/18 16:10:53 niklas Exp $ */
@


