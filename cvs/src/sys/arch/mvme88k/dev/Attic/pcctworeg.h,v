head	1.10;
access;
symbols
	OPENBSD_5_5:1.9.0.22
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.18
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.16
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.14
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.12
	OPENBSD_5_0:1.9.0.10
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.8
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.6
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.8.0.12
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.8
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.6.0.10
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.4.0.2
	UBC_BASE:1.4
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.6
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.1.0.8
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.6
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	mvme88kport:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.9;

1.9
date	2009.03.04.19.35.52;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2006.04.27.20.19.28;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.24.19.51.48;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.14.21.34.39;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.12.22.19.17.51;	author smurph;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.16.23.49.46;	author miod;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2001.12.13.08.55.51;	author smurph;	state Exp;
branches;
next	1.2;

1.2
date	98.12.15.05.52.30;	author smurph;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	97.03.03.19.32.04;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.03.19.32.04;	author rahnds;	state Exp;
branches;
next	;

1.2.6.1
date	2002.03.06.02.04.44;	author niklas;	state Exp;
branches;
next	1.2.6.2;

1.2.6.2
date	2004.06.05.23.09.49;	author niklas;	state Exp;
branches;
next	;

1.4.2.1
date	2002.01.31.22.55.17;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: pcctworeg.h,v 1.9 2009/03/04 19:35:52 miod Exp $ */

/*
 * Memory map for PCC2 chip found in MVME1x7 boards.
 *
 * PCCchip2 control and status register can be accessed as bytes (8 bits),
 * two-bytes (16 bits), or four-bytes (32 bits).
 */

#define	PCC2_BASE		0xfff42000
#define PCC2_SIZE		0x0040

#define	PCCTWO_CHIPID		0x0000
#define	PCCTWO_CHIPREV		0x0001
#define	PCCTWO_GENCTL		0x0002
#define	PCCTWO_VECBASE		0x0003
#define	PCCTWO_T1CMP		0x0004
#define	PCCTWO_T1COUNT		0x0008
#define	PCCTWO_T2CMP		0x000c
#define	PCCTWO_T2COUNT		0x0010
#define	PCCTWO_PSCALECNT	0x0014
#define	PCCTWO_PSCALEADJ	0x0015
#define	PCCTWO_T2CTL		0x0016
#define	PCCTWO_T1CTL		0x0017
#define	PCCTWO_GPIO_ICR		0x0018
#define	PCCTWO_GPIO_PCR		0x0019
#define	PCCTWO_T2ICR		0x001a
#define	PCCTWO_T1ICR		0x001b
#define	PCCTWO_SCCERR		0x001c
#define	PCCTWO_SCCICR		0x001d
#define	PCCTWO_SCCTX		0x001e
#define	PCCTWO_SCCRX		0x001f
#define	PCCTWO_SCCMOIACK	0x0023
#define	PCCTWO_SCCTXIACK	0x0025
#define	PCCTWO_SCCRXIACK	0x0027
#define	PCCTWO_IEERR		0x0028
#define	PCCTWO_IEICR		0x002a
#define	PCCTWO_IEBERR		0x002b
#define	PCCTWO_SCSIERR		0x002c
#define	PCCTWO_SCSIICR		0x002f
#define	PCCTWO_PRTICR		0x0030
#define	PCCTWO_PTRFICR		0x0031
#define	PCCTWO_PTRSICR		0x0032
#define	PCCTWO_PTRPICR		0x0033
#define	PCCTWO_PRTBICR		0x0034
#define	PCCTWO_PRTSTATUS	0x0036
#define	PCCTWO_PRTCTL		0x0037
#define	PCCTWO_SPEED		0x0038
#define	PCCTWO_PRTDATA		0x003a
/* The following registers are not valid on MVME197 */
#define	PCCTWO_IPL		0x003e
#define	PCCTWO_MASK		0x003f

#define PCC2_ID			0x20	/* value at CHIPID */

/* General Control Register */
#define PCC2_DR0		0x80
#define PCC2_C040		0x04
#define PCC2_MIEN		0x02
#define PCC2_FAST		0x01

/* Top 4 bits of the PCC2 VBR. Will be the top 4 bits of the vector */
#define	PCC2_VECT		0x50

/* Bottom 4 bits of the vector returned during IACK cycle */
#define PCC2V_PPBUSY		0x00 				/* lowest */
#define PCC2V_PPPE		0x01
#define PCC2V_PPSELECT		0x02
#define PCC2V_PPFAULT		0x03
#define PCC2V_PPACK		0x04
#define PCC2V_SCSI		0x05
#define PCC2V_IEFAIL		0x06
#define PCC2V_IE		0x07
#define PCC2V_TIMER2		0x08
#define PCC2V_TIMER1		0x09
#define PCC2V_GPIO		0x0a
#define PCC2V_SCC_RXE		0x0c
#define PCC2V_SCC_M		(PCC2V_SCC_RXE + 1)
#define PCC2V_SCC_TX		(PCC2V_SCC_M + 1)
#define PCC2V_SCC_RX		(PCC2V_SCC_TX + 1)

/*
 * Vaddrs for interrupt mask and pri registers
 */
extern u_int8_t *volatile pcc2intr_mask;
extern u_int8_t *volatile pcc2intr_ipl;

/*
 * We lock off our interrupt vector at 0x50.
 */
#define PCC2_VECBASE		0x50
#define PCC2_NVEC		0x10

#define PCC2_TCTL_CEN		0x01
#define PCC2_TCTL_COC		0x02
#define PCC2_TCTL_COVF		0x04
#define PCC2_TCTL_OVF		0xf0
#define PCC2_TCTL_OVF_SHIFT	4

#define PCC2_GPIO_PLTY		0x80
#define PCC2_GPIO_EL		0x40

#define PCC2_GPIOCR_OE		0x2
#define PCC2_GPIOCR_O		0x1

#define PCC2_SCC_AVEC		0x08

#define PCC2_SC_INHIBIT		(0 << 6)
#define PCC2_SC_SNOOP		(1 << 6)
#define PCC2_SC_INVAL		(2 << 6)
#define PCC2_SC_RESV		(3 << 6)

#define pcc2_timer_us2lim(us)	(us)		/* timer increments in "us" */

#define PCC2_IRQ_IPL		0x07
#define PCC2_IRQ_ICLR		0x08
#define PCC2_IRQ_IEN		0x10
#define PCC2_IRQ_INT		0x20

/* Tick Timer Interrupt Control Register */
#define PCC2_TTIRQ_INT		0x20
#define PCC2_TTIRQ_IEN		0x10
#define PCC2_TTIRQ_ICLR		0x08
#define PCC2_TTIRQ_IL		0x07		/* mask for IL2-IL0 */

#define PCC2_IEERR_SCLR		0x01

#define PCC2_GENCTL_FAST	0x01
#define PCC2_GENCTL_IEN		0x02
#define PCC2_GENCTL_C040	0x03
@


1.9
log
@When handling clock interrupts, check the overflow counter to know how many
times hardclock() needs to be invoked; fixes clock drift found on 197DP
with SMP kernels.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcctworeg.h,v 1.8 2006/04/27 20:19:28 miod Exp $ */
@


1.8
log
@Adjust sizes for the mandatory 1:1 mappings created in pmap_bootstrap().
Saves up to 12KB of no longer necessary page tables.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcctworeg.h,v 1.7 2004/04/24 19:51:48 miod Exp $ */
d98 1
@


1.7
log
@Preliminary switch to an mvme88k bus_space world. Not all drivers have been
converted yet, and they rely upon some linear mappings provided by bus_space.

In order to not impact performance, almost all the bus_space accesses go
through macros and inline functions. This currently restricts us to D16 and
D32 access modes, which are selected at compilation time. Since there are no
plans to support D8 vme devices in the future, this is acceptable for now.

This makes the "len" locator for vme devices go away, and allows to simplify
some code which was using the pcctwo device, and will now directly access
hardware which is known to exist, rather than wait until the device is
attached.

While there, try to enforce more interrupt vector number checks, since these
changes pointed out that dart(4) had been working correctly so far by sheer
luck only.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcctworeg.h,v 1.6 2002/01/14 21:34:39 miod Exp $ */
d10 1
a10 1
#define	PCC2_BASE		0x00042000
@


1.6
log
@volatile police.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcctworeg.h,v 1.5 2001/12/22 19:17:51 smurph Exp $ */
d4 1
a4 1
 * Memory map for PCC2 chip found in mvme1x7 boards.
d10 2
a11 57
struct pcctworeg {
	volatile u_char     pcc2_chipid;
	volatile u_char     pcc2_chiprev;
	volatile u_char     pcc2_genctl;
	volatile u_char     pcc2_vecbase;	/* irq vector base */
	volatile u_long     pcc2_t1cmp;		/* timer1 compare */
	volatile u_long     pcc2_t1count;	/* timer1 count */
	volatile u_long     pcc2_t2cmp;		/* timer2 compare */
	volatile u_long     pcc2_t2count;	/* timer2 count */
	volatile u_char     pcc2_pscalecnt;	/* timer prescaler counter */
	volatile u_char     pcc2_pscaleadj;	/* timer prescaler adjust */
	volatile u_char     pcc2_t2ctl;		/* timer2 ctrl reg */
	volatile u_char     pcc2_t1ctl;		/* timer1 ctrl reg */
	volatile u_char     pcc2_gpioirq;	/* gpio irq */
	volatile u_char     pcc2_gpio;		/* gpio i/o */
	volatile u_char     pcc2_t2irq;
	volatile u_char     pcc2_t1irq;
	volatile u_char     pcc2_sccerr;
	volatile u_char     pcc2_sccirq;
	volatile u_char     pcc2_scctx;
	volatile u_char     pcc2_sccrx;
	volatile u_char     :8;
	volatile u_char     :8;
	volatile u_char     :8;
	volatile u_char     pcc2_sccmoiack;
	volatile u_char     :8;
	volatile u_char     pcc2_scctxiack;
	volatile u_char     :8;
	volatile u_char     pcc2_sccrxiack;
	volatile u_char     pcc2_ieerr;
	volatile u_char     :8;
	volatile u_char     pcc2_ieirq;
	volatile u_char     pcc2_iefailirq;
	volatile u_char     pcc2_ncrerr;
	volatile u_char     :8;
	volatile u_char     :8;
	volatile u_char     pcc2_ncrirq;
	volatile u_char     pcc2_prtairq;
	volatile u_char     pcc2_prtfirq;
	volatile u_char     pcc2_prtsirq;
	volatile u_char     pcc2_prtpirq;
	volatile u_char     pcc2_prtbirq;
	volatile u_char     :8;
	volatile u_char     pcc2_prtstat;
	volatile u_char     pcc2_prtctl;
	volatile u_short    pcc2_speed;		/* DO NOT USE */
	volatile u_short    pcc2_prtdat;
	volatile u_short    :16;
	/* The following regs are not valid on MVME197 */
	volatile u_char     pcc2_ipl;
	volatile u_char     pcc2_mask;
};
#define PCC2_PCC2CHIP_OFF	0x42000
#define PCC2_CHIPID		0x20
#define PCC2_BASE_ADDR		0xFFF42000		/* base address */
#define PCC2_SIZE		0x1000			/* size */
#define PCC2_CHIP_REV		0x00
d13 40
a52 1
/* General  Control Register */
d54 3
a62 1

d66 15
a80 16
#define PPBSY			0x00 				/* lowest */
#define PPSE			0x01
#define PPSEL			0x02
#define PPFLT			0x03
#define PPACK			0x04
#define SCSIIRQ			0x05
#define LANCERR			0x06
#define LANCIRQ			0x07
#define TIMER1IRQ		0x08
#define TIMER2IRQ		0x09
#define GPIOIRQ			0x0a
#define SRXEIRQ			0x0c
#define SMOIRQ			0x0d
#define STxIRQ			0x0e
#define SRxIRQ			0x0f

d85 2
a86 8
extern u_char *volatile pcc2intr_mask;
extern u_char *volatile pcc2intr_ipl;

/*
 * points to system's PCCTWO. This is not active until the pcctwo0
 * device has been attached.
 */
extern struct pcctworeg *sys_pcc2;
d92 1
a92 15
#define PCC2_NVEC		16

/*
 * Vectors we use
 */
#define PCC2V_NCR		0x05
#define PCC2V_IEFAIL		0x06
#define PCC2V_IE		0x07
#define PCC2V_TIMER2		0x08
#define PCC2V_TIMER1		0x09
#define PCC2V_GPIO		0x0a
#define PCC2V_SCC_RXE		0x0c
#define PCC2V_SCC_M		0x0d
#define PCC2V_SCC_TX		0x0e
#define PCC2V_SCC_RX		0x0f
a98 5
#define	PCC2_TICTL_CEN			0x01
#define PCC2_TICTL_COC			0x02
#define PCC2_TICTL_COVF			0x04
#define PCC2_TTCTL_OVF_MASK		(1 << 4)	/* overflow bits mask */

d106 5
a110 4
#define PCC2_SCCRX_INHIBIT	(0 << 6)
#define PCC2_SCCRX_SNOOP	(1 << 6)
#define PCC2_SCCRX_INVAL	(2 << 6)
#define PCC2_SCCRX_RESV		(3 << 6)
d120 4
a123 5

#define PCC2_TTIRQ_INT			0x20
#define PCC2_TTIRQ_IEN			0x10
#define PCC2_TTIRQ_ICLR			0x08
#define PCC2_TTIRQ_IL			0x07		/* mask for IL2-IL0 */
a129 5

#define PCC2_SC_INHIBIT		(0 << 6)
#define PCC2_SC_SNOOP		(1 << 6)
#define PCC2_SC_INVAL		(2 << 6)
#define PCC2_SC_RESV		(3 << 6)
@


1.5
log
@MVME917 documentation comment.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcctworeg.h,v 1.4 2001/12/16 23:49:46 miod Exp $ */
d100 2
a101 2
extern volatile u_char *pcc2intr_mask;
extern volatile u_char *pcc2intr_ipl;
@


1.4
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcctworeg.h,v 1.2 1998/12/15 05:52:30 smurph Exp $ */
d58 1
@


1.4.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: pcctworeg.h,v 1.6 2002/01/14 21:34:39 miod Exp $ */
a57 1
	/* The following regs are not valid on MVME197 */
d99 2
a100 2
extern u_char *volatile pcc2intr_mask;
extern u_char *volatile pcc2intr_ipl;
@


1.3
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@a57 1
	/* The following regs are not valid on MVME197 */
@


1.2
log
@Commit for the first real OpenBSD mvme88k port.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcctworeg.h,v 1.3 1996/04/28 11:03:28 deraadt Exp $ */
d58 1
@


1.2.6.1
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a57 1
	/* The following regs are not valid on MVME197 */
d99 2
a100 2
extern u_char *volatile pcc2intr_mask;
extern u_char *volatile pcc2intr_ipl;
@


1.2.6.2
log
@Merge with the trunk
@
text
@d4 1
a4 1
 * Memory map for PCC2 chip found in MVME1x7 boards.
d10 57
a66 2
#define	PCC2_BASE		0x00042000
#define PCC2_SIZE		0x0040
d68 1
a68 40
#define	PCCTWO_CHIPID		0x0000
#define	PCCTWO_CHIPREV		0x0001
#define	PCCTWO_GENCTL		0x0002
#define	PCCTWO_VECBASE		0x0003
#define	PCCTWO_T1CMP		0x0004
#define	PCCTWO_T1COUNT		0x0008
#define	PCCTWO_T2CMP		0x000c
#define	PCCTWO_T2COUNT		0x0010
#define	PCCTWO_PSCALECNT	0x0014
#define	PCCTWO_PSCALEADJ	0x0015
#define	PCCTWO_T2CTL		0x0016
#define	PCCTWO_T1CTL		0x0017
#define	PCCTWO_GPIO_ICR		0x0018
#define	PCCTWO_GPIO_PCR		0x0019
#define	PCCTWO_T2ICR		0x001a
#define	PCCTWO_T1ICR		0x001b
#define	PCCTWO_SCCERR		0x001c
#define	PCCTWO_SCCICR		0x001d
#define	PCCTWO_SCCTX		0x001e
#define	PCCTWO_SCCRX		0x001f
#define	PCCTWO_SCCMOIACK	0x0023
#define	PCCTWO_SCCTXIACK	0x0025
#define	PCCTWO_SCCRXIACK	0x0027
#define	PCCTWO_IEERR		0x0028
#define	PCCTWO_IEICR		0x002a
#define	PCCTWO_IEBERR		0x002b
#define	PCCTWO_SCSIERR		0x002c
#define	PCCTWO_SCSIICR		0x002f
#define	PCCTWO_PRTICR		0x0030
#define	PCCTWO_PTRFICR		0x0031
#define	PCCTWO_PTRSICR		0x0032
#define	PCCTWO_PTRPICR		0x0033
#define	PCCTWO_PRTBICR		0x0034
#define	PCCTWO_PRTSTATUS	0x0036
#define	PCCTWO_PRTCTL		0x0037
#define	PCCTWO_SPEED		0x0038
#define	PCCTWO_PRTDATA		0x003a
/* The following registers are not valid on MVME197 */
#define	PCCTWO_IPL		0x003e
#define	PCCTWO_MASK		0x003f
a69 3
#define PCC2_ID			0x20	/* value at CHIPID */

/* General Control Register */
d76 1
d80 16
a95 15
#define PCC2V_PPBUSY		0x00 				/* lowest */
#define PCC2V_PPPE		0x01
#define PCC2V_PPSELECT		0x02
#define PCC2V_PPFAULT		0x03
#define PCC2V_PPACK		0x04
#define PCC2V_SCSI		0x05
#define PCC2V_IEFAIL		0x06
#define PCC2V_IE		0x07
#define PCC2V_TIMER2		0x08
#define PCC2V_TIMER1		0x09
#define PCC2V_GPIO		0x0a
#define PCC2V_SCC_RXE		0x0c
#define PCC2V_SCC_M		(PCC2V_SCC_RXE + 1)
#define PCC2V_SCC_TX		(PCC2V_SCC_M + 1)
#define PCC2V_SCC_RX		(PCC2V_SCC_TX + 1)
d100 8
a107 2
extern u_int8_t *volatile pcc2intr_mask;
extern u_int8_t *volatile pcc2intr_ipl;
d113 15
a127 1
#define PCC2_NVEC		0x10
d134 5
d146 4
a149 5

#define PCC2_SC_INHIBIT		(0 << 6)
#define PCC2_SC_SNOOP		(1 << 6)
#define PCC2_SC_INVAL		(2 << 6)
#define PCC2_SC_RESV		(3 << 6)
d159 5
a163 4
#define PCC2_TTIRQ_INT		0x20
#define PCC2_TTIRQ_IEN		0x10
#define PCC2_TTIRQ_ICLR		0x08
#define PCC2_TTIRQ_IL		0x07		/* mask for IL2-IL0 */
d170 5
@


1.1
log
@Initial revision
@
text
@d1 2
d10 50
a59 48
struct pcc2reg {
	volatile u_char		pcc2_chipid;
	volatile u_char		pcc2_chiprev;
	volatile u_char		pcc2_gcr;
	volatile u_char		pcc2_vbr;		/* vector base reg. */
	volatile u_long		pcc2_t1cmp;		/* timer1 compare reg */
	volatile u_long		pcc2_t1cntr;		/* timer1 counter reg */
	volatile u_long		pcc2_t2cmp;		/* timer2 compare reg */
	volatile u_long		pcc2_t2cntr;		/* timer2 counter reg */
	volatile u_char		pcc2_pscntreg;		/* prescalar count reg */
	volatile u_char		pcc2_psclkadj;		/* clock adjust reg */
	volatile u_char		pcc2_t2ctl;		/* timer2 control */
	volatile u_char		pcc2_t1ctl;		/* timer1 control */
	volatile u_char		pcc2_gpiirq;		/* GPIO intr ctl */
	volatile u_char		pcc2_gpiopctl;		/* GPIO pin control */ 
	volatile u_char		pcc2_t2irq;		/* Timer2 intr ctl */
	volatile u_char		pcc2_t1irq;		/* Timer1 intr ctl */
	volatile u_char		pcc2_sccerrstat;	/* SCC error status */
	volatile u_char		pcc2_sccmoirq;		/* Modem intr control */
	volatile u_char		pcc2_scctxirq;		/* Tx intr control */
	volatile u_char		pcc2_sccrxirq;		/* Rx intr control */
	volatile u_int		:24;
	volatile u_char		pcc2_sccmopiack;	/* modem PIACK */
	volatile u_char		:8;
	volatile u_char		pcc2_scctxpiack;	/* Tx PIACK */
	volatile u_char		:8;
	volatile u_char		pcc2_sccrxpiack;	/* Rx PIACK */
	volatile u_char		pcc2_lancerrstat;	/* LANC error status */
	volatile u_char		:8;
	volatile u_char		pcc2_lancirq;		/* LANC intr control */
	volatile u_char		pcc2_lancerrirq;	/* LANC err intr ctl */
	volatile u_char		pcc2_scsierrstat;	/* SCSI err status */
	volatile u_char		:8;
	volatile u_char		:8;
	volatile u_char		pcc2_scsiirq;		/* SCSI intr control */
	volatile u_char		pcc2_packirq;		/* printer ACK intr */
	volatile u_char		pcc2_pfltirq;		/* printer FAULT intr */
	volatile u_char		pcc2_pselirq;		/* printer SEL intr */
	volatile u_char		pcc2_ppeirq;		/* printer PE intr */
	volatile u_char		pcc2_pbusyirq;		/* printer BUSY intr */
	volatile u_char		:8;
	volatile u_char		pcc2_pstat;		/* printer status reg */
	volatile u_char		pcc2_pctl;		/* printer port ctl */
	volatile u_short	pcc2_chipspeed;		/* chip speed (factory testing only) */
	volatile u_short	pcc2_pdata;		/* printer data */
	volatile u_int		:16;
	volatile u_char		pcc2_ipl;		/* interrupt IPL */
	volatile u_char		pcc2_imask;		/* intr mask level */
d61 2
a62 9

/*
 * Vaddrs for interrupt mask and pri registers
 */
extern volatile u_char *pcc2intr_mask;
extern volatile u_char *pcc2intr_ipl;

extern volatile struct pcc2reg *pcc2addr;

a64 2

#define PCC2_CHIP_ID		0x20
d95 1
d97 1
a97 1
 * Timer control regs
d99 33
d138 11
a148 1
/* GPIO interrupt control */
d150 6
a155 12
#define PCC2_GPIIRQ_PLTY		0x80
#define PCC2_GPIIRQ_EL			0x40
#define PCC2_GPIIRQ_INT			0x20
#define PCC2_GPIIRQ_IEN			0x10
#define PCC2_GPIIRQ_ICLR		0x08
#define PCC2_GPIIRQ_IL			0x07		/* IL2-IL0 */

/* GPIO Pin Control Register */

#define PCC2_GPIOPCTL_GPI		0x04
#define PCC2_GPIOPCTL_GPOE		0x02
#define PCC2_GPIOPCTL_GPO		0x01
d164 1
a164 29
/* SCC Error Status Register */

#define PCC2_SCCERRSTAT_RTRY		0x10
#define PCC2_SCCERRSTAT_PRTY		0x08
#define PCC2_SCCERRSTAT_EXT		0x04
#define PCC2_SCCERRSTAT_LTO		0x02
#define PCC2_SCCERRSTAT_SCLR		0x01

/* SCC Modem Interrupt Control Register */

#define PCC2_SCCMOIRQ_IRQ		0x20
#define PCC2_SCCMOIRQ_IEN		0x10
#define PCC2_SCCMOIRQ_AVEC		0x08
#define PCC2_SCCMOIRQ_IL		0x07		/* int level mask */

/* SCC Tx Interrupt Control Register */

#define PCC2_SCCTXIRQ_IRQ		0x20
#define PCC2_SCCTXIRQ_IEN		0x10
#define PCC2_SCCTXIRQ_AVEC		0x08
#define PCC2_SCCTXIRQ_IL		0x07

/* SCC Tx Interrupt Control Register */

#define PCC2_SCCRXIRQ_SNOOP		(1 << 6)
#define PCC2_SCCRXIRQ_IRQ		0x20
#define PCC2_SCCRXIRQ_IEN		0x10
#define PCC2_SCCRXIRQ_AVEC		0x08
#define PCC2_SCCRXIRQ_IL		0x07
d166 8
a173 18
/* SCSI Interrupt Control Register */

#define PCC2_SCSIIRQ_IEN		0x10

/* Interrupt Priority Level Register */

#define PCC2_IPL_IPL			0x07

/* Interrupt Mask Level Register */

#define PCC2_IMASK_MSK			0x07

#define PCC2_IRQ_IPL		0x07
#define PCC2_IRQ_ICLR		0x08
#define PCC2_IRQ_IEN		0x10
#define PCC2_IRQ_INT		0x20

#define PCC2_IEERR_SCLR		0x01
@


1.1.1.1
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@@
