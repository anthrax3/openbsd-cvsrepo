head	1.14;
access;
symbols
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.11
	UBC:1.9.0.2
	UBC_BASE:1.9
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	SMP:1.3.0.2;
locks; strict;
comment	@ * @;


1.14
date	2003.12.26.10.41.43;	author miod;	state dead;
branches;
next	1.13;

1.13
date	2003.10.05.20.27.48;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.02.23.27.52;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.14.01.26.39;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.22.18.45.35;	author smurph;	state Exp;
branches;
next	1.9;

1.9
date	2001.12.16.23.49.46;	author miod;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2001.12.13.08.55.51;	author smurph;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.06.19.53.15;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.23.02.50.25;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.26.02.37.07;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.14.21.30.35;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.09.05.44.39;	author smurph;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2001.03.07.23.47.20;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.07.01.57.56;	author miod;	state Exp;
branches;
next	;

1.3.2.1
date	2001.04.18.16.11.03;	author niklas;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.07.04.10.19.57;	author niklas;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2001.10.31.03.01.18;	author nate;	state Exp;
branches;
next	1.3.2.4;

1.3.2.4
date	2001.11.13.21.04.14;	author niklas;	state Exp;
branches;
next	1.3.2.5;

1.3.2.5
date	2002.03.06.02.04.44;	author niklas;	state Exp;
branches;
next	1.3.2.6;

1.3.2.6
date	2002.03.28.10.36.02;	author niklas;	state Exp;
branches;
next	1.3.2.7;

1.3.2.7
date	2003.06.07.11.13.17;	author ho;	state Exp;
branches;
next	1.3.2.8;

1.3.2.8
date	2004.02.19.10.49.06;	author niklas;	state dead;
branches;
next	;

1.9.2.1
date	2002.01.31.22.55.18;	author niklas;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2002.06.11.03.37.10;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Merge the attachment part and the real work part of the SCSI drivers in
one file per driver.
@
text
@/*	$OpenBSD: sshdma.c,v 1.13 2003/10/05 20:27:48 miod Exp $	*/

/*
 * Copyright (c) 1996 Nivas Madhur
 * Copyright (c) 1995 Theo de Raadt
 * Copyright (c) 1994 Michael L. Hitch
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dma.c
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/device.h>

#include <uvm/uvm_extern.h>
#include <uvm/uvm_pmap.h>

#include <machine/autoconf.h>
#include <machine/board.h>
#include <machine/mmu.h>
#include <machine/pmap.h>

#include <scsi/scsi_all.h>
#include <scsi/scsiconf.h>

#include <mvme88k/dev/sshreg.h>
#include <mvme88k/dev/sshvar.h>

#include "pcctwo.h"
#if NPCCTWO > 0
#include <mvme88k/dev/pcctwofunc.h>
#include <mvme88k/dev/pcctworeg.h>
#endif

int	afscmatch(struct device *, void *, void *);
void	afscattach(struct device *, struct device *, void *);

int	afscprint(void *auxp, char *);
int	sshintr(struct ssh_softc *);
int	afsc_dmaintr(void *);
void	sshinitialize(struct ssh_softc *);

struct scsi_adapter afsc_scsiswitch = {
	ssh_scsicmd,
	ssh_minphys,
	0,			/* no lun support */
	0,			/* no lun support */
};

struct scsi_device afsc_scsidev = {
	NULL,		/* use default error handler */
	NULL,		/* do not have a start function */
	NULL,		/* have no async handler */
	NULL,		/* Use default done routine */
};

struct cfattach ssh_ca = {
        sizeof(struct ssh_softc), afscmatch, afscattach,
};

struct cfdriver ssh_cd = {
        NULL, "ssh", DV_DULL, 0
};

int
afscmatch(pdp, vcf, args)
	struct device *pdp;
	void *vcf, *args;
{
	struct confargs *ca = args;

	if (badvaddr((vaddr_t)IIOV(ca->ca_vaddr), 4)) {
	    return(0);
	}

	return (1);
}

void
afscattach(parent, self, auxp)
	struct device *parent, *self;
	void *auxp;
{
	struct ssh_softc *sc = (struct ssh_softc *)self;
	struct confargs *ca = auxp;
	ssh_regmap_p rp;
	int tmp;
	extern int cpuspeed;

	sc->sc_sshp = rp = ca->ca_vaddr;

	/*
	 * ssh uses sc_clock_freq to define the dcntl & ctest7 reg values
	 * (was 0x0221, but i added SSH_CTEST7_SC0 for snooping control)
	 * XXX does the clock frequency change for the 33MHz processors?
	 */
	sc->sc_clock_freq = cpuspeed * 2;
	sc->sc_dcntl = SSH_DCNTL_EA;
/*X*/	if (sc->sc_clock_freq <= 25)
/*X*/		sc->sc_dcntl |= (2 << 6);
/*X*/	else if (sc->sc_clock_freq <= 37)
/*X*/		sc->sc_dcntl |= (1 << 6);
/*X*/	else if (sc->sc_clock_freq <= 50)
/*X*/		sc->sc_dcntl |= (0 << 6);
/*X*/	else
/*X*/		sc->sc_dcntl |= (3 << 6);

	sc->sc_ctest0 = SSH_CTEST0_BTD | SSH_CTEST0_EAN;

	/*
	 * MVME187 doesn't implement snooping...
	 */
	sc->sc_ctest7 = SSH_CTEST7_TT1;

	sc->sc_link.adapter_softc = sc;
	sc->sc_link.adapter_target = 7;		/* XXXX should ask ROM */
	sc->sc_link.adapter = &afsc_scsiswitch;
	sc->sc_link.device = &afsc_scsidev;
	sc->sc_link.openings = 1;

	sc->sc_ih.ih_fn = afsc_dmaintr;
	sc->sc_ih.ih_arg = sc;
	sc->sc_ih.ih_wantframe = 0;
	sc->sc_ih.ih_ipl = ca->ca_ipl;

	sshinitialize(sc);

	switch (ca->ca_bustype) {
#if NPCCTWO > 0
	case BUS_PCCTWO:
	    {
		/*
		 * Disable caching for the softc. Actually, I want
		 * to disable cache for acb structures, but they are
		 * part of softc, and I am disabling the entire softc
		 * just in case.
		 */

		struct pcctworeg *pcc2 = (struct pcctworeg *)ca->ca_master;

		pmap_cache_ctrl(pmap_kernel(), trunc_page((vaddr_t)sc),
		    round_page((vaddr_t)sc + sizeof(*sc)), CACHE_INH);

		pcctwointr_establish(PCC2V_NCR, &sc->sc_ih);
		/* enable interrupts at ca_ipl */
		pcc2->pcc2_ncrirq = ca->ca_ipl | PCC2_IRQ_IEN;
		break;
	    }
#endif
	}

	evcnt_attach(&sc->sc_dev, "intr", &sc->sc_intrcnt);

	/*
	 * attach all scsi units on us, watching for boot device
	 * (see dk_establish).
	 */
	tmp = bootpart;
	if (ca->ca_paddr != bootaddr)
		bootpart = -1;          /* invalid flag to dk_establish */
	config_found(self, &sc->sc_link, scsiprint);
	bootpart = tmp;             /* restore old value */
}
/*
 * print diag if pnp is NULL else just extra
 */
int
afscprint(auxp, pnp)
	void *auxp;
	char *pnp;
{
	if (pnp == NULL)
		return (UNCONF);
	return (QUIET);
}

int
afsc_dmaintr(arg)
	void *arg;
{
	struct ssh_softc *sc = arg;

	ssh_regmap_p rp;
	u_char	istat;

	rp = sc->sc_sshp;
	istat = rp->ssh_istat;
	if ((istat & (SSH_ISTAT_SIP | SSH_ISTAT_DIP)) == 0)
		return (0);
	if ((rp->ssh_sien | rp->ssh_dien) == 0)
		return (0);	/* no interrupts enabled */

	/*
	 * 53c710 manual recommends reading dstat and sstat0 at least
	 * 12 clk cycles apart if reading as bytes (which is what
	 * pcc2 permits). Stick in a 1us delay between accessing dstat and
	 * sstat0 below.
	 *
	 * save interrupt status, DMA status, and SCSI status 0
	 * (may need to deal with stacked interrupts?)
	 */
	sc->sc_istat = istat;
	if (istat & SSH_ISTAT_SIP) {
		sc->sc_sstat0 = rp->ssh_sstat0;
	}
	if (istat & SSH_ISTAT_DIP) {
		delay(3);
		sc->sc_dstat = rp->ssh_dstat;
	}
	sshintr(sc);
	sc->sc_intrcnt.ev_count++;
	return (1);
}

#ifdef XXX_CD_DEBUG /* XXXsmurph What is afsccd ?? */
void
afsc_dump()
{
	int i;

	for (i = 0; i < afsccd.cd_ndevs; ++i)
		if (afsccd.cd_devs[i])
			ssh_dump(afsccd.cd_devs[i]);
}
#endif
@


1.13
log
@Kill vm_offset_t and vm_size_t, in favor of the [pv]addr_t and [pv]size_t
typedefs.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.12 2003/06/02 23:27:52 millert Exp $	*/
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.11 2002/03/14 01:26:39 millert Exp $	*/
d86 2
a87 2
};    
 
d89 2
a90 2
        NULL, "ssh", DV_DULL, 0 
}; 
d99 1
a99 1
	if (badvaddr((vm_offset_t)IIOV(ca->ca_vaddr), 4)) {
d167 3
a169 4
		
		pmap_cache_ctrl(pmap_kernel(), trunc_page((vm_offset_t)sc),
			round_page((vm_offset_t)sc + sizeof(*sc)),
			CACHE_INH);
d186 1
a186 1
	if (ca->ca_paddr != bootaddr) 
@


1.11
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.10 2001/12/22 18:45:35 smurph Exp $	*/
d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.10
log
@Correct badvaddr() usage.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.9 2001/12/16 23:49:46 miod Exp $	*/
d66 2
a67 2
int	afscmatch	__P((struct device *, void *, void *));
void	afscattach	__P((struct device *, struct device *, void *));
d69 4
a72 4
int	afscprint	__P((void *auxp, char *));
int	sshintr		__P((struct ssh_softc *));
int	afsc_dmaintr	__P((void *));
void	sshinitialize	__P((struct ssh_softc *));
@


1.9
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.7 2001/11/06 19:53:15 miod Exp $	*/
a101 1
	int ret;
d103 1
a103 2
	if ((ret = badvaddr((vm_offset_t)IIOV(ca->ca_vaddr), 4)) <=0){
	    printf("==> ssh: failed address check returning %ld.\n", ret);
a176 1
/*		intr_establish(PCC2_VECT + SCSIIRQ, &sc->sc_ih);*/
a178 1
/*		pcc2->pcc2_scsiirq = ca->ca_ipl | PCC2_SCSIIRQ_IEN;*/
@


1.9.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.10 2001/12/22 18:45:35 smurph Exp $	*/
d102 1
d104 2
a105 1
	if (badvaddr((vm_offset_t)IIOV(ca->ca_vaddr), 4)) {
d179 1
d182 1
@


1.9.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.9.2.1 2002/01/31 22:55:18 niklas Exp $	*/
d66 2
a67 2
int	afscmatch(struct device *, void *, void *);
void	afscattach(struct device *, struct device *, void *);
d69 4
a72 4
int	afscprint(void *auxp, char *);
int	sshintr(struct ssh_softc *);
int	afsc_dmaintr(void *);
void	sshinitialize(struct ssh_softc *);
@


1.8
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@d69 4
a72 4
int     afscprint       __P((void *auxp, char *));
int     sshintr         __P((struct ssh_softc *));
int     afsc_dmaintr    __P((void *));
void    sshinitialize   __P((struct ssh_softc *));
d89 1
a89 1
	sizeof(struct ssh_softc), afscmatch, afscattach,
d91 1
a91 1

d93 1
a93 1
	NULL, "ssh", DV_DULL, 0 
d98 2
a99 2
struct device *pdp;
void *vcf, *args;
d102 1
d104 3
a106 2
	if (badvaddr((vm_offset_t)IIOV(ca->ca_vaddr), 4)) {
		return (0);
d114 2
a115 2
struct device *parent, *self;
void *auxp;
d131 1
a131 1
	sc->sc_dcntl = SSH_DCNTL_EA;   
d134 1
a134 2
/*X*/
	else if (sc->sc_clock_freq <= 37)
d136 1
a136 2
/*X*/
	else if (sc->sc_clock_freq <= 50)
d138 1
a138 2
/*X*/
	else
d164 21
a184 19
		{
			/*
			 * Disable caching for the softc. Actually, I want
			 * to disable cache for acb structures, but they are
			 * part of softc, and I am disabling the entire softc
			 * just in case.
			 */

			struct pcctworeg *pcc2 = (struct pcctworeg *)ca->ca_master;

			pmap_cache_ctrl(pmap_kernel(), trunc_page((vm_offset_t)sc),
					round_page((vm_offset_t)sc + sizeof(*sc)),
					CACHE_INH);

			pcctwointr_establish(PCC2V_NCR, &sc->sc_ih);
			/* enable interrupts at ca_ipl */
			pcc2->pcc2_ncrirq = ca->ca_ipl | PCC2_IRQ_IEN;
			break;
		}
d195 2
a196 2
	if (ca->ca_paddr != bootaddr)
		bootpart = -1;		/* invalid flag to dk_establish */
d198 1
a198 1
	bootpart = tmp;		    /* restore old value */
d205 2
a206 2
void *auxp;
char *pnp;
d215 1
a215 1
void *arg;
d220 1
a220 1
	u_char  istat;
@


1.7
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.6 2001/09/23 02:50:25 miod Exp $	*/
d69 4
a72 4
int	afscprint	__P((void *auxp, char *));
int	sshintr		__P((struct ssh_softc *));
int	afsc_dmaintr	__P((void *));
void	sshinitialize	__P((struct ssh_softc *));
d89 1
a89 1
        sizeof(struct ssh_softc), afscmatch, afscattach,
d91 1
a91 1
 
d93 1
a93 1
        NULL, "ssh", DV_DULL, 0 
d98 2
a99 2
	struct device *pdp;
	void *vcf, *args;
a101 1
	int ret;
d103 2
a104 3
	if ((ret = badvaddr((vm_offset_t)IIOV(ca->ca_vaddr), 4)) <=0){
	    printf("==> ssh: failed address check returning %ld.\n", ret);
	    return(0);
d112 2
a113 2
	struct device *parent, *self;
	void *auxp;
d129 1
a129 1
	sc->sc_dcntl = SSH_DCNTL_EA;
d132 2
a133 1
/*X*/	else if (sc->sc_clock_freq <= 37)
d135 2
a136 1
/*X*/	else if (sc->sc_clock_freq <= 50)
d138 2
a139 1
/*X*/	else
d165 19
a183 21
	    {
		/*
		 * Disable caching for the softc. Actually, I want
		 * to disable cache for acb structures, but they are
		 * part of softc, and I am disabling the entire softc
		 * just in case.
		 */

		struct pcctworeg *pcc2 = (struct pcctworeg *)ca->ca_master;
		
		pmap_cache_ctrl(pmap_kernel(), trunc_page((vm_offset_t)sc),
			round_page((vm_offset_t)sc + sizeof(*sc)),
			CACHE_INH);

		pcctwointr_establish(PCC2V_NCR, &sc->sc_ih);
/*		intr_establish(PCC2_VECT + SCSIIRQ, &sc->sc_ih);*/
		/* enable interrupts at ca_ipl */
		pcc2->pcc2_ncrirq = ca->ca_ipl | PCC2_IRQ_IEN;
/*		pcc2->pcc2_scsiirq = ca->ca_ipl | PCC2_SCSIIRQ_IEN;*/
		break;
	    }
d194 2
a195 2
	if (ca->ca_paddr != bootaddr) 
		bootpart = -1;          /* invalid flag to dk_establish */
d197 1
a197 1
	bootpart = tmp;             /* restore old value */
d204 2
a205 2
	void *auxp;
	char *pnp;
d214 1
a214 1
	void *arg;
d219 1
a219 1
	u_char	istat;
@


1.6
log
@Don't redefine pmap_kernel() locally.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.5 2001/08/26 02:37:07 miod Exp $	*/
a45 2
#include <vm/vm.h>
#include <vm/pmap.h>
d47 1
@


1.5
log
@Add prototypes, fix compilation warnings, random style fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.4 2001/06/14 21:30:35 miod Exp $	*/
a65 3

extern struct pmap	kernel_pmap_store;
#define	pmap_kernel()		(&kernel_pmap_store)
@


1.4
log
@Big cleanup of VM issues:
o get rid of m88k_foo macros when there is an mi foo macro
o remove the ability, for the pmap module, to handle a native mmu page
  size different from the vm module page size. This allows some
  optimizations in pmap.c
o remove dead stuff from <machine/vmparam.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.3 2001/03/09 05:44:39 smurph Exp $	*/
d46 1
d48 1
@


1.3
log
@kernel will compile with -Werror.  Added intr.h
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.2 2001/03/07 23:47:20 miod Exp $	*/
d176 2
a177 2
		pmap_cache_ctrl(pmap_kernel(), M88K_TRUNC_PAGE((vm_offset_t)sc),
			M88K_ROUND_PAGE((vm_offset_t)sc + sizeof(*sc)),
@


1.3.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.3 2001/03/09 05:44:39 smurph Exp $	*/
@


1.3.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.3.2.1 2001/04/18 16:11:03 niklas Exp $	*/
d176 2
a177 2
		pmap_cache_ctrl(pmap_kernel(), trunc_page((vm_offset_t)sc),
			round_page((vm_offset_t)sc + sizeof(*sc)),
@


1.3.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.3.2.2 2001/07/04 10:19:57 niklas Exp $	*/
a45 1
#include <vm/vm.h>
a46 1
#include <uvm/uvm_extern.h>
d64 3
@


1.3.2.4
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 2
a48 1
#include <uvm/uvm_pmap.h>
@


1.3.2.5
log
@Merge in trunk
@
text
@d102 1
d104 2
a105 1
	if (badvaddr((vm_offset_t)IIOV(ca->ca_vaddr), 4)) {
d179 1
d182 1
@


1.3.2.6
log
@Merge in -current from about a week ago
@
text
@d66 2
a67 2
int	afscmatch(struct device *, void *, void *);
void	afscattach(struct device *, struct device *, void *);
d69 4
a72 4
int	afscprint(void *auxp, char *);
int	sshintr(struct ssh_softc *);
int	afsc_dmaintr(void *);
void	sshinitialize(struct ssh_softc *);
@


1.3.2.7
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.3.2.6 2002/03/28 10:36:02 niklas Exp $	*/
d18 5
a22 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.3.2.8
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.3.2.7 2003/06/07 11:13:17 ho Exp $	*/
@


1.2
log
@Remove 68k-isms, fix interrupt handler prototypes, warning hunting.
@
text
@d1 1
a1 1
/*	$OpenBSD: sshdma.c,v 1.1 2001/03/07 01:57:56 miod Exp $	*/
d72 1
a72 1
int	sshintr	__P((struct ssh_softc *));
d74 1
@


1.1
log
@Change siop name to ssh, as per mvme68k, to prevent conflict with the
other siop driver. Change siop-related defines to ssh-related defines
everywhere.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d45 8
a54 4
#include <machine/autoconf.h>
#if defined(MVME187)
#include <machine/board.h>
#endif /* MVME187 */
a55 1
#if defined(MVME187)
d58 1
a58 8
#else
#include <mvme68k/dev/sshreg.h>
#include <mvme68k/dev/sshvar.h>
#endif /* defined(MVME187) */

#if !defined(MVME187)
#include "mc.h"
#endif /* MVME187 */
a59 4

#if NMC > 0
#include <mvme68k/dev/mcreg.h>
#endif
d61 1
a61 1
#if defined(MVME187)
a62 3
#else
#include <mvme68k/dev/pcctworeg.h>
#endif /* defined(MVME187) */
a64 4
#if defined(MVME187)
#include "machine/mmu.h"
#endif /* defined(MVME187) */

d73 1
a73 1
int	afsc_dmaintr	__P((struct ssh_softc *));
a101 1
	struct cfdata *cf = vcf;
d105 1
a105 1
	if ((ret = badvaddr(IIOV(ca->ca_vaddr), 4)) <=0){
a131 5
#ifdef MVME177
	/* XXX this is a guess! */
	if (cputyp == CPU_177)
		sc->sc_clock_freq = cpuspeed;
#endif
a143 1
#ifdef MVME187
a147 3
#else
	sc->sc_ctest7 = SSH_CTEST7_SNOOP | SSH_CTEST7_TT1 | SSH_CTEST7_STD;
#endif /* MVME187 */
d157 1
a162 10
#if NMC > 0
	case BUS_MC:
	    {
		struct mcreg *mc = (struct mcreg *)ca->ca_master;

		mcintr_establish(MCV_NCR, &sc->sc_ih);
		mc->mc_ncrirq = ca->ca_ipl | MC_IRQ_IEN;
		break;
	    }
#endif
a165 1
#if defined(MVME187)
d178 1
a178 1
#endif
d215 2
a216 2
afsc_dmaintr(sc)
	struct ssh_softc *sc;
d218 2
@

