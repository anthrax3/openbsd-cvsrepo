head	1.8;
access;
symbols
	OPENBSD_4_2:1.7.0.14
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.12
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.10
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.8
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.6
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2007.12.27.23.17.53;	author miod;	state dead;
branches;
next	1.7;

1.7
date	2004.07.30.19.02.06;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.24.19.51.48;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.16.23.36.48;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2003.10.11.22.08.57;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.14.21.34.39;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.01.03.38.15;	author smurph;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	99.09.27.18.43.25;	author smurph;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.04.18.16.11.05;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2002.03.06.02.04.44;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2004.02.19.10.49.06;	author niklas;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2004.06.05.23.09.49;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2002.01.31.22.55.18;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Make the mvme188 interrupt handling closer to the aviion interrupt handling:
non-VME syscon interrupt sources will now use their own intrhand array,
and interrupt sources will be enabled in the arbiter as interrupt handlers
are registered. This allows VME devices to use the whole 256 interrupts range.
@
text
@/*	$OpenBSD: sysconreg.h,v 1.7 2004/07/30 19:02:06 miod Exp $ */

/*
 * Copyright (c) 2004, Miodrag Vallat.
 * Copyright (c) 1999 Steve Murphree, Jr.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Map syscon interrupts a la PCC2
 */
#define	SYSCON_VECT	0x50
#define	SYSCON_NVEC	0x10

#define SYSCV_ABRT	0x02
#define SYSCV_SYSF	0x03
#define SYSCV_ACF 	0x04
#define SYSCV_SCC 	0x05
#define SYSCV_TIMER4    0x06
#define SYSCV_TIMER3    0x07
#define SYSCV_TIMER2    0x08
#define SYSCV_TIMER1    0x09

int sysconintr_establish(int, struct intrhand *, const char *);
@


1.7
log
@Move evcount structures inside struct intrhand, this makes more sense and
gives us more counters in the process.

Also clean up intrhand structures and usage, especially move them to SLISTs.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysconreg.h,v 1.6 2004/04/24 19:51:48 miod Exp $ */
@


1.6
log
@Preliminary switch to an mvme88k bus_space world. Not all drivers have been
converted yet, and they rely upon some linear mappings provided by bus_space.

In order to not impact performance, almost all the bus_space accesses go
through macros and inline functions. This currently restricts us to D16 and
D32 access modes, which are selected at compilation time. Since there are no
plans to support D8 vme devices in the future, this is acceptable for now.

This makes the "len" locator for vme devices go away, and allows to simplify
some code which was using the pcctwo device, and will now directly access
hardware which is known to exist, rather than wait until the device is
attached.

While there, try to enforce more interrupt vector number checks, since these
changes pointed out that dart(4) had been working correctly so far by sheer
luck only.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysconreg.h,v 1.5 2004/04/16 23:36:48 miod Exp $ */
d45 1
a45 1
int sysconintr_establish(int, struct intrhand *);
@


1.5
log
@Bounds check PCC2 and SYSCON interrupt vectors.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysconreg.h,v 1.4 2003/10/11 22:08:57 miod Exp $ */
d4 24
a27 5
 * Memory map for SYSCON found in mvme188 board set.
 * No specific chips are found here like the PCCTWO
 * on MVME1x7. All chips are included in this one
 * map/device so that devices don't run rampant in
 * the config files.  I may change this later XXX smurph.
a29 38
#include <machine/board.h>

struct sysconreg {
	unsigned int *volatile ien0;
	unsigned int *volatile ien1;
	unsigned int *volatile ien2;
	unsigned int *volatile ien3;
	unsigned int *volatile ienall;
	unsigned int *volatile ist;
	unsigned int *volatile setswi;
	unsigned int *volatile clrswi;
	unsigned int *volatile istate;
	unsigned int *volatile clrint;
	unsigned char *volatile global0;
	unsigned char *volatile global1;
	unsigned char *volatile global2;
	unsigned char *volatile global3;
	unsigned int *volatile ucsr;
	unsigned int *volatile glbres;
	unsigned int *volatile ccsr;
	unsigned int *volatile error;
	unsigned int *volatile pcnfa;
	unsigned int *volatile pcnfb;
	unsigned int *volatile extad;
	unsigned int *volatile extam;
	unsigned int *volatile whoami;
	unsigned int *volatile wmad;
	unsigned int *volatile rmad;
	unsigned int *volatile wvad;
	unsigned int *volatile rvad;
	unsigned int *volatile cio_portc;
	unsigned int *volatile cio_portb;
	unsigned int *volatile cio_porta;
	unsigned int *volatile cio_ctrl;
};

extern struct sysconreg *sys_syscon;

d36 10
a45 8
#define SYSCV_ABRT	0x52
#define SYSCV_SYSF	0x53
#define SYSCV_ACF 	0x54
#define SYSCV_SCC 	0x55
#define SYSCV_TIMER4    0x56
#define SYSCV_TIMER3    0x57
#define SYSCV_TIMER2    0x58
#define SYSCV_TIMER1    0x59
@


1.4
log
@Nuke trailing whitespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysconreg.h,v 1.3 2002/01/14 21:34:39 miod Exp $ */
d50 1
a50 1
 * Vectors we use
d52 3
a62 2


@


1.3
log
@volatile police.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysconreg.h,v 1.2 2001/02/01 03:38:15 smurph Exp $ */
d5 1
a5 1
 * No specific chips are found here like the PCCTWO 
d7 1
a7 1
 * map/device so that devices don't run rampant in 
d20 2
a21 2
	unsigned int *volatile setswi; 
	unsigned int *volatile clrswi; 
d45 1
a45 1
}; 
@


1.2
log
@Major changes to get MVME188 working.  More header and code cleanups.  The
kernel is tested on MVME188A/2P256 and MVME188A/1P64.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysconreg.h,v 1.1 1999/09/27 18:43:25 smurph Exp $ */
d14 31
a44 31
	volatile unsigned int *ien0;
	volatile unsigned int *ien1;
	volatile unsigned int *ien2;
	volatile unsigned int *ien3;
	volatile unsigned int *ienall;
	volatile unsigned int *ist;
	volatile unsigned int *setswi; 
	volatile unsigned int *clrswi; 
	volatile unsigned int *istate;
	volatile unsigned int *clrint;
	volatile unsigned char *global0;
	volatile unsigned char *global1;
	volatile unsigned char *global2;
	volatile unsigned char *global3;
	volatile unsigned int *ucsr;
	volatile unsigned int *glbres;
	volatile unsigned int *ccsr;
	volatile unsigned int *error;
	volatile unsigned int *pcnfa;
	volatile unsigned int *pcnfb;
	volatile unsigned int *extad;
	volatile unsigned int *extam;
	volatile unsigned int *whoami;
	volatile unsigned int *wmad;
	volatile unsigned int *rmad;
	volatile unsigned int *wvad;
	volatile unsigned int *rvad;
	volatile unsigned int *cio_portc;
	volatile unsigned int *cio_portb;
	volatile unsigned int *cio_porta;
	volatile unsigned int *cio_ctrl;
@


1.2.6.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: sysconreg.h,v 1.3 2002/01/14 21:34:39 miod Exp $ */
d14 31
a44 31
	unsigned int *volatile ien0;
	unsigned int *volatile ien1;
	unsigned int *volatile ien2;
	unsigned int *volatile ien3;
	unsigned int *volatile ienall;
	unsigned int *volatile ist;
	unsigned int *volatile setswi; 
	unsigned int *volatile clrswi; 
	unsigned int *volatile istate;
	unsigned int *volatile clrint;
	unsigned char *volatile global0;
	unsigned char *volatile global1;
	unsigned char *volatile global2;
	unsigned char *volatile global3;
	unsigned int *volatile ucsr;
	unsigned int *volatile glbres;
	unsigned int *volatile ccsr;
	unsigned int *volatile error;
	unsigned int *volatile pcnfa;
	unsigned int *volatile pcnfb;
	unsigned int *volatile extad;
	unsigned int *volatile extam;
	unsigned int *volatile whoami;
	unsigned int *volatile wmad;
	unsigned int *volatile rmad;
	unsigned int *volatile wvad;
	unsigned int *volatile rvad;
	unsigned int *volatile cio_portc;
	unsigned int *volatile cio_portb;
	unsigned int *volatile cio_porta;
	unsigned int *volatile cio_ctrl;
@


1.1
log
@adding support for MVME188 and MVME197.  Plus 32bit if_ie.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysconreg.h,v 1.0 1999/06/14 05:52:30 smurph Exp $ */
d14 31
a44 31
   volatile unsigned int *ien0;
   volatile unsigned int *ien1;
   volatile unsigned int *ien2;
   volatile unsigned int *ien3;
   volatile unsigned int *ienall;
   volatile unsigned int *ist;
   volatile unsigned int *setswi; 
   volatile unsigned int *clrswi; 
   volatile unsigned int *istate;
   volatile unsigned int *clrint;
   volatile unsigned char *global0;
   volatile unsigned char *global1;
   volatile unsigned char *global2;
   volatile unsigned char *global3;
   volatile unsigned int *ucsr;
   volatile unsigned int *glbres;
   volatile unsigned int *ccsr;
   volatile unsigned int *error;
   volatile unsigned int *pcnfa;
   volatile unsigned int *pcnfb;
   volatile unsigned int *extad;
   volatile unsigned int *extam;
   volatile unsigned int *whoami;
   volatile unsigned int *wmad;
   volatile unsigned int *rmad;
   volatile unsigned int *wvad;
   volatile unsigned int *rvad;
   volatile unsigned int *cio_portc;
   volatile unsigned int *cio_portb;
   volatile unsigned int *cio_porta;
   volatile unsigned int *cio_ctrl;
d52 4
a55 4
#define SYSCV_ABRT 		0x110
#define SYSCV_SYSF 		0x111
#define SYSCV_ACF 		0x112
#define SYSCV_SCC 		0x55
@


1.1.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysconreg.h,v 1.2 2001/02/01 03:38:15 smurph Exp $ */
d14 31
a44 31
	volatile unsigned int *ien0;
	volatile unsigned int *ien1;
	volatile unsigned int *ien2;
	volatile unsigned int *ien3;
	volatile unsigned int *ienall;
	volatile unsigned int *ist;
	volatile unsigned int *setswi; 
	volatile unsigned int *clrswi; 
	volatile unsigned int *istate;
	volatile unsigned int *clrint;
	volatile unsigned char *global0;
	volatile unsigned char *global1;
	volatile unsigned char *global2;
	volatile unsigned char *global3;
	volatile unsigned int *ucsr;
	volatile unsigned int *glbres;
	volatile unsigned int *ccsr;
	volatile unsigned int *error;
	volatile unsigned int *pcnfa;
	volatile unsigned int *pcnfb;
	volatile unsigned int *extad;
	volatile unsigned int *extam;
	volatile unsigned int *whoami;
	volatile unsigned int *wmad;
	volatile unsigned int *rmad;
	volatile unsigned int *wvad;
	volatile unsigned int *rvad;
	volatile unsigned int *cio_portc;
	volatile unsigned int *cio_portb;
	volatile unsigned int *cio_porta;
	volatile unsigned int *cio_ctrl;
d52 4
a55 4
#define SYSCV_ABRT	0x52
#define SYSCV_SYSF	0x53
#define SYSCV_ACF 	0x54
#define SYSCV_SCC 	0x55
@


1.1.4.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d14 31
a44 31
	unsigned int *volatile ien0;
	unsigned int *volatile ien1;
	unsigned int *volatile ien2;
	unsigned int *volatile ien3;
	unsigned int *volatile ienall;
	unsigned int *volatile ist;
	unsigned int *volatile setswi; 
	unsigned int *volatile clrswi; 
	unsigned int *volatile istate;
	unsigned int *volatile clrint;
	unsigned char *volatile global0;
	unsigned char *volatile global1;
	unsigned char *volatile global2;
	unsigned char *volatile global3;
	unsigned int *volatile ucsr;
	unsigned int *volatile glbres;
	unsigned int *volatile ccsr;
	unsigned int *volatile error;
	unsigned int *volatile pcnfa;
	unsigned int *volatile pcnfb;
	unsigned int *volatile extad;
	unsigned int *volatile extam;
	unsigned int *volatile whoami;
	unsigned int *volatile wmad;
	unsigned int *volatile rmad;
	unsigned int *volatile wvad;
	unsigned int *volatile rvad;
	unsigned int *volatile cio_portc;
	unsigned int *volatile cio_portb;
	unsigned int *volatile cio_porta;
	unsigned int *volatile cio_ctrl;
@


1.1.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d5 1
a5 1
 * No specific chips are found here like the PCCTWO
d7 1
a7 1
 * map/device so that devices don't run rampant in
d20 2
a21 2
	unsigned int *volatile setswi;
	unsigned int *volatile clrswi;
d45 1
a45 1
};
@


1.1.4.4
log
@Merge with the trunk
@
text
@d4 5
a8 24
 * Copyright (c) 2004, Miodrag Vallat.
 * Copyright (c) 1999 Steve Murphree, Jr.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
d11 38
d50 1
a50 1
 * Map syscon interrupts a la PCC2
d52 8
a59 2
#define	SYSCON_VECT	0x50
#define	SYSCON_NVEC	0x10
a60 8
#define SYSCV_ABRT	0x02
#define SYSCV_SYSF	0x03
#define SYSCV_ACF 	0x04
#define SYSCV_SCC 	0x05
#define SYSCV_TIMER4    0x06
#define SYSCV_TIMER3    0x07
#define SYSCV_TIMER2    0x08
#define SYSCV_TIMER1    0x09
a61 1
int sysconintr_establish(int, struct intrhand *);
@


