head	1.13;
access;
symbols
	OPENBSD_5_5:1.12.0.14
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.10
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.8
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.6
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.4
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.10.0.8
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.4
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.6
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.2
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.9.0.4
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.2
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.5.0.8
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.6
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.4
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.12
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	SMP:1.3.0.4
	UBC_SYNC_B:1.3
	UBC:1.3.0.2
	UBC_BASE:1.3;
locks; strict;
comment	@ * @;


1.13
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.12;

1.12
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.11;

1.11
date	2011.01.02.17.55.27;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2009.02.16.23.03.33;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2007.12.15.19.34.35;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2007.12.04.23.45.52;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.27.20.21.19;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2006.04.27.20.19.31;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.02.08.35.00;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.16.20.52.19;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.19.05.06.26;	author smurph;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2001.12.16.23.49.46;	author miod;	state dead;
branches;
next	1.1;

1.1
date	2001.12.13.08.55.51;	author smurph;	state Exp;
branches;
next	;

1.3.4.1
date	2004.02.19.10.49.07;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: mvme197.h,v 1.12 2011/03/23 16:54:36 pirofti Exp $ */
/*
 * Copyright (c) 1996 Nivas Madhur
 * Copyright (c) 1999 Steve Murphree, Jr.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Nivas Madhur.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
/*
 * Mach Operating System
 * Copyright (c) 1991 Carnegie Mellon University
 * Copyright (c) 1991 OMRON Corporation
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 */
#ifndef _MACHINE_MVME197_H_
#define _MACHINE_MVME197_H_

#define	ECDM_BASE	0xfff01100	/* not what the doc says... */

#define	FLASH_START	0xff800000	/* start of flash memory area */
#define	FLASH_SIZE	0x00400000
#define BUG197_START	0xfff80000	/* start of BUG PROM (in OBIO) */
#define BUG197_SIZE	0x00040000
#define OBIO197_START	0xfff00000	/* start of local IO */
#define OBIO197_SIZE	0x000d0000	/* size of obio space */

#define M197_ILEVEL	0xfff00064	/* interrupt priority level */
#define M197_IMASK	0xfff00065	/* interrupt mask level */
#define M197_ISRC	0xfff0006f	/* interrupt SRC */
#define M197_IACK	0xfff00100	/* interrupt ACK base */

#ifdef _KERNEL
void	m197_broadcast_complex_ipi(int, u_int32_t, u_int32_t);
void	m197_send_complex_ipi(int, cpuid_t, u_int32_t, u_int32_t);
void	m197_send_ipi(int, cpuid_t);
#endif

#endif	/* _MACHINE_MVME197_H_ */
@


1.12
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme197.h,v 1.11 2011/01/02 17:55:27 miod Exp $ */
@


1.11
log
@Figure out how much L2 cache is available on 88410-blessed designs, and
report it in dmesg.
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme197.h,v 1.10 2009/02/16 23:03:33 miod Exp $ */
d46 2
a47 2
#ifndef __MACHINE_MVME197_H__
#define __MACHINE_MVME197_H__
d69 1
a69 1
#endif	/* __MACHINE_MVME197_H__ */
@


1.10
log
@More 88110 SMP work. Contains, horribly entangled:
- dma_cachectl() split into a ``local cpu only'' and ``all cpus'', and an ipi
  to broadcast ``local dma_cachectl'' is added.
- cpu_info fields are rearranged, to have the 88100-specific information
  and the 88110-specific information overlap, and has many more 88110
  ugly things.
- more ipi handling in the 197-specific area. Since it is not possible to
  have the second processor receive any hardware interrupt (selection
  is done on a level basis via ISEL, and we definitely do not want the
  main cpu to lose interrupts), the best we can do is to inflict ourselves
  a soft interrupt for late ipi processing. It gets used for softclock and
  hardclock on the secondary processor, but since the soft interrupt
  dispatcher doesn't have an exception frame, we have to remember parts
  of it to build a fake clockframe from the soft ipi handler (ugly but
  works).

This now lets GENERIC.MP run a few userland binaries before bugs trigger.
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme197.h,v 1.9 2007/12/15 19:34:35 miod Exp $ */
d48 2
@


1.9
log
@Since the 88110 can not invalidate a particular tlb entry, do not stack
invalidate tlb ipis, and turn them into simple ``handle once'' ipis.
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme197.h,v 1.8 2007/12/04 23:45:52 miod Exp $ */
d62 1
@


1.8
log
@Work in progress SMP code for 88110 processor using the BusSwitch chip as
an IPI facility, for MVME197DP.

It's still missing a few remote cache IPIs and IPI do not seem to be reliably
triggered on remote processors at the moment (but this could be a problem
on the board I am currently testing on), at least it will boot multiuser
using only cpu0 to schedule processes.
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme197.h,v 1.7 2006/04/27 20:21:19 miod Exp $ */
d63 1
@


1.7
log
@<machine/mvme1x7.h> is not really used anymore, remove it.
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme197.h,v 1.6 2006/04/27 20:19:31 miod Exp $ */
d60 4
@


1.6
log
@Adjust sizes for the mandatory 1:1 mappings created in pmap_bootstrap().
Saves up to 12KB of no longer necessary page tables.
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme197.h,v 1.5 2004/08/02 08:35:00 miod Exp $ */
a59 2

#include <machine/mvme1x7.h>
@


1.5
log
@More include files cleaning:
- move MAX_CPUS constant to <machine/cpu.h>
- do not include <machine/board.h> unless needed. In fact, remove this file
  entirely on mvme88k, and include <machine/mvme*.h> on a
  compiling-for-this-board basis
- keep MAX_CMMUS constant private to the m8820x code
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme197.h,v 1.4 2003/09/16 20:52:19 miod Exp $ */
d49 6
a54 4
#define	FLASH_START	0xFF800000	/* start of flash memory area */
#define	FLASH_SIZE	0x003FFFFF
#define BUG197_START	0xFFF80000	/* start of BUG PROM (in OBIO) */
#define BUG197_SIZE	0x0003FFFF
d56 4
a59 4
#define M197_ILEVEL	0xFFF00064	/* interrupt priority level */
#define M197_IMASK	0xFFF00065	/* interrupt mask level */
#define M197_ISRC	0xFFF0006F	/* interrupt SRC */
#define M197_IACK	0xFFF00100	/* interrupt ACK base */
@


1.4
log
@Remove unused material from include files, as well as the annoying U() macro
which is only used to obfuscate things.

Doing this points out that the BUG memory is not at the same address on
187 and 197 (the 197 BUG is inside obio), so provide distinct constants,
and treat 187 and 197 slightly differently in pmap_bootstrap(). However, we
now need to map the 197 flash memory as well...

While there, simplify and constify pmap_table_build() and its associated data.
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme197.h,v 1.3 2001/12/19 05:06:26 smurph Exp $ */
a48 5
/*
 *      MVME197 CPU board constants - derived from Luna88k
 *      This file is included from <machine/board.h>
 */

d58 2
@


1.3
log
@board.h overhaul.  split definitions by arch.
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme197.h,v 1.1 2001/12/13 08:55:51 smurph Exp $ */
d48 1
d50 2
a51 2
 *      VME187 CPU board constants - derived from Luna88k
 *      This file is include from <machine/board.h>
d54 4
a57 15
/*
 * Something to put append a 'U' to a long constant if it's C so that
 * it'll be unsigned in both ANSI and traditional.
 */
#ifndef UDEFINED
#if defined(_LOCORE)
#	define U(num)	num
#else
#  if defined(__STDC__)
#	define U(num)	num ## U
#  else
#	define U(num)	num/**/U
#  endif
#endif
#endif
d59 4
a62 4
#define M197_ILEVEL	U(0xFFF00064)	/* interrupt priority level */
#define M197_IMASK	U(0xFFF00065)	/* interrupt mask level */
#define M197_ISRC	U(0xFFF0006F)	/* interrupt SRC */
#define M197_IACK	U(0xFFF00100)	/* interrupt ACK base */
d64 1
a64 1
#endif __MACHINE_MVME197_H__
@


1.3.4.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d48 4
d54 2
a55 2
 *      MVME197 CPU board constants - derived from Luna88k
 *      This file is included from <machine/board.h>
d57 11
d69 4
a72 9
#define	FLASH_START	0xFF800000	/* start of flash memory area */
#define	FLASH_SIZE	0x003FFFFF
#define BUG197_START	0xFFF80000	/* start of BUG PROM (in OBIO) */
#define BUG197_SIZE	0x0003FFFF

#define M197_ILEVEL	0xFFF00064	/* interrupt priority level */
#define M197_IMASK	0xFFF00065	/* interrupt mask level */
#define M197_ISRC	0xFFF0006F	/* interrupt SRC */
#define M197_IACK	0xFFF00100	/* interrupt ACK base */
d74 1
a74 1
#endif	/* __MACHINE_MVME197_H__ */
@


1.2
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@@


1.1
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@d1 1
a1 1
/*	$OpenBSD: mvme187.h,v 1.4 2001/03/07 23:37:17 miod Exp $ */
@

