head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.34
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.30
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.28
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.26
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.24
	OPENBSD_5_0:1.4.0.22
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.20
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.18
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.14
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.16
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.12
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.10
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.8
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.6
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	SMP:1.1.0.8
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	UBC_SYNC_B:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	UBC:1.1.0.2;
locks; strict;
comment	@ * @;


1.5
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.4;

1.4
date	2006.04.27.20.13.44;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.15.21.36.00;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.16.17.34.49;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.28.15.17.09;	author miod;	state Exp;
branches
	1.1.2.1
	1.1.8.1;
next	;

1.1.2.1
date	2002.06.11.03.37.10;	author art;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.05.19.21.45.53;	author tedu;	state Exp;
branches;
next	;

1.1.8.1
date	2003.05.13.19.41.06;	author ho;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2004.06.05.23.09.49;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: conf.h,v 1.4 2006/04/27 20:13:44 miod Exp $	*/
/*
 * Copyright (c) 2002, Miodrag Vallat.
 * All rights reserved.
 *
 * Permission to redistribute, use, copy, and modify this software
 * is hereby granted without fee, provided that the following
 * conditions are met:
 *
 * 1. This entire notice is included in all source code copies of any
 *    software which is or includes a copy or modification of this
 *    software.
 * 2. The name of the author may not be used to endorse or promote
 *    products derived from this software without specific prior
 *    written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/conf.h>

#define	mmread	mmrw
#define	mmwrite	mmrw
cdev_decl(mm);

cdev_decl(vmel);
cdev_decl(vmes);

cdev_decl(nvram);

#define	sramread  sramrw
#define	sramwrite sramrw
cdev_decl(sram);

cdev_decl(bugtty);
cdev_decl(cl);
cdev_decl(dart);
cdev_decl(vx);
@


1.4
log
@Manage a local copy of the MVME188 nvram and update the real data when
necessary; allow opening /dev/nvram0 on MVME188 again (but no mmap).
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.3 2004/04/15 21:36:00 miod Exp $	*/
@


1.3
log
@Since *ramread and *ramwrite are the same code, really, factorize them a la
memread/memwrite.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.2 2003/04/16 17:34:49 miod Exp $	*/
a38 2
#define	nvramread  nvramrw
#define	nvramwrite nvramrw
@


1.2
log
@Clarify license terms.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.1 2002/04/28 15:17:09 miod Exp $	*/
d39 2
d42 3
@


1.1
log
@Use the prototypes defined via cdev_decl() macros, instead of rolling our
own; thus fix a lot of foo_open(), foo_close() and foo_ioctl() prototypes
in the process.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 * without fee is hereby granted, provided that the following
@


1.1.8.1
log
@Sync the SMP branch to -current.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.h,v 1.1 2002/04/28 15:17:09 miod Exp $	*/
d7 1
a7 1
 * is hereby granted without fee, provided that the following
@


1.1.8.2
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a38 2
#define	nvramread  nvramrw
#define	nvramwrite nvramrw
a39 3

#define	sramread  sramrw
#define	sramwrite sramrw
@


1.1.2.1
log
@Sync UBC branch to -current
@
text
@@


1.1.2.2
log
@sync
@
text
@d7 1
a7 1
 * is hereby granted without fee, provided that the following
@


