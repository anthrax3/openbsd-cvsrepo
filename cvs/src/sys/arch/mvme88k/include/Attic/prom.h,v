head	1.22;
access;
symbols
	OPENBSD_5_5:1.21.0.6
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.21.0.2
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.20.0.2
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.19.0.6
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.4
	OPENBSD_5_0:1.19.0.2
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.18.0.2
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.17.0.12
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.8
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.10
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.6
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.4
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.16.0.6
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.4
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.2
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.15.0.2
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.14.0.6
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.4
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.2
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.13
	SMP_SYNC_B:1.13
	OPENBSD_3_5:1.13.0.2
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.8.0.4
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.4.0.8
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.6
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.4
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.1.1.1.0.8
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.6
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	mvme88kport:1.1.1.1;
locks; strict;
comment	@ * @;


1.22
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.21;

1.21
date	2013.05.14.20.30.47;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2012.11.25.14.10.47;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.18;

1.18
date	2010.12.23.20.05.08;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2007.12.15.19.35.52;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2006.05.16.22.51.28;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2005.12.11.21.45.31;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2004.08.02.14.38.40;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2004.01.26.19.24.03;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2003.10.11.22.08.57;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.01.19.14.04;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.04.04.11.37;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.05.22.11.40;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.12.12.03.02;	author heko;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2001.06.29.21.52.05;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.15.19.50.38;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.14.20.25.24;	author smurph;	state Exp;
branches;
next	1.4;

1.4
date	99.05.29.04.41.45;	author smurph;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	99.02.09.06.36.27;	author smurph;	state Exp;
branches;
next	1.2;

1.2
date	98.12.15.04.45.50;	author smurph;	state Exp;
branches;
next	1.1;

1.1
date	97.03.03.19.31.50;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.03.19.31.50;	author rahnds;	state Exp;
branches;
next	;

1.4.4.1
date	2001.04.18.16.11.25;	author niklas;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	2001.07.04.10.20.05;	author niklas;	state Exp;
branches;
next	1.4.4.3;

1.4.4.3
date	2001.10.31.03.01.19;	author nate;	state Exp;
branches;
next	1.4.4.4;

1.4.4.4
date	2002.03.06.02.04.44;	author niklas;	state Exp;
branches;
next	1.4.4.5;

1.4.4.5
date	2003.06.07.11.13.17;	author ho;	state Exp;
branches;
next	1.4.4.6;

1.4.4.6
date	2004.02.19.10.49.07;	author niklas;	state Exp;
branches;
next	;

1.8.4.1
date	2002.06.11.03.37.10;	author art;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: prom.h,v 1.21 2013/05/14 20:30:47 miod Exp $ */
/*
 * Copyright (c) 1998 Steve Murphree, Jr.
 * Copyright (c) 1996 Nivas Madhur
 * Copyright (c) 1995 Theo de Raadt
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef _MACHINE_PROM_H_
#define _MACHINE_PROM_H_

/* BUG trap vector */
#define	MVMEPROM_VECTOR		496

#define MVMEPROM_INCHR		0x00
#define MVMEPROM_INSTAT		0x01
#define MVMEPROM_INLN		0x02
#define MVMEPROM_READSTR	0x03
#define MVMEPROM_READLN		0x04
#define MVMEPROM_DSKRD		0x10
#define MVMEPROM_DSKWR		0x11
#define MVMEPROM_DSKCFIG	0x12
#define MVMEPROM_DSKFMT		0x14
#define MVMEPROM_DSKCTRL	0x15
#define MVMEPROM_NETCFIG	0x1a
#define MVMEPROM_NETFOPEN	0x1b
#define MVMEPROM_NETFREAD	0x1c
#define MVMEPROM_NETCTRL	0x1d
#define MVMEPROM_OUTCHR		0x20
#define MVMEPROM_OUTSTR		0x21
#define MVMEPROM_OUTSTRCRLF	0x22
#define MVMEPROM_WRITE		0x23
#define MVMEPROM_WRITELN	0x24
#define	MVMEPROM_OUTCRLF	0x26	/* not implemented on MVME181? */
#define MVMEPROM_DELAY		0x43
#define MVMEPROM_RTC_RD		0x53
#define MVMEPROM_EXIT		0x63
#define MVMEPROM_GETBRDID	0x70
#define MVMEPROM_ENVIRON	0x71
#define	MVMEPROM_FORKMPU	0x100

#define	NETCFIG_READ		1
#define	NETCFIG_WRITE		2
#define	NETCFIG_STORE		4

#define NETCTRLCMD_INITIALIZE	0
#define NETCTRLCMD_GETETHER	1
#define NETCTRLCMD_XMIT		2
#define NETCTRLCMD_RECV		3
#define NETCTRLCMD_FLUSH	4
#define NETCTRLCMD_RESET	5

#define ENVIRONCMD_WRITE	1
#define ENVIRONCMD_READ		2
#define ENVIRONTYPE_EOL		0
#define ENVIRONTYPE_START	1
#define ENVIRONTYPE_DISKBOOT	2
#define ENVIRONTYPE_ROMBOOT	3
#define ENVIRONTYPE_NETBOOT	4
#define ENVIRONTYPE_MEMSIZE	5

#define	FORKMPU_NOT_IDLE	-1
#define	FORKMPU_BAD_ADDRESS	-2
#define	FORKMPU_NO_MPU		-3

#ifndef LOCORE
struct mvmeprom_netcfig {
	u_char	ctrl;
	u_char	dev;
	u_short	status;
	u_long	ncp_addr;
	u_long	dcp_addr;
	u_long	flags;
};

struct mvmeprom_ncp {
	u_long	magic;
#define	NETCFIG_MAGIC	0x12301983
	u_long	node_memory_address;
	u_long	boot_load_address;
	u_long	boot_start_address;
	u_long	boot_start_delay;
	u_long	boot_length;
	u_long	boot_offset;
	u_long	trace_buffer_address;
	u_long	client_ip;
	u_long	server_ip;
	u_long	subnet_mask;
	u_long	broadcast_mask;
	u_long	gateway_ip;
	u_char	bootp_retry;
	u_char	tftp_retry;
	char	rarp_control;
	char	update_control;
	char	filename[64];
	char	commandline[64];
};

struct mvmeprom_netctrl {
	u_char	ctrl;
	u_char	dev;
	u_short	status;
	u_long	cmd;
	u_long	addr;
	u_long	len;
	u_long	flags;
};

struct mvmeprom_netfopen {
	u_char	ctrl;
	u_char	dev;
	u_short	status;
	char	filename[64];
};

struct mvmeprom_netfread {
	u_char	ctrl;
	u_char	dev;
	u_short	status;
	u_long	addr;
	u_short	bytes;
	u_short	blk;
	u_long	timeout;
};

struct prom_environ_hdr {
	u_char	type;
	u_char	len;
};

struct mvmeprom_brdid {
	u_long	eye_catcher;
	u_char	rev;
	u_char	month;
	u_char	day;
	u_char	year;
	u_short	size;
	u_short	rsv1;
	u_short	model;
	u_char	suffix[2];
	u_short	options;
	u_char	family;
	u_char	cpu;
	u_short	ctrlun;
	u_short	devlun;
	u_short	devtype;
	u_short	devnum;
	u_long	bug;
	u_char	version[4];
	u_char	serial[12];		/* SBC serial number */
	u_char	id[16];			/* SBC id */
	u_char	pwa[16];		/* printed wiring assembly number */
	u_char	speed[4];		/* cpu speed */
	u_char	etheraddr[6];		/* mac address, all zero if no ether */
	u_char	fill[2];
	u_char	scsiid[2];		/* local SCSI id */
	u_char	sysid[8];		/* system id - nothing on mvme187 */
	u_char	brd1_pwb[8];		/* memory board 1 pwb */
	u_char	brd1_serial[8];		/* memory board 1 serial */
	u_char	brd2_pwb[8];		/* memory board 2 pwb */
	u_char	brd2_serial[8];		/* memory board 2 serial */
	u_char	reserved[153];
	u_char	cksum[1];
};

struct mvmeprom_time {
        u_char	year_BCD;
        u_char	month_BCD;
        u_char	day_BCD;
        u_char	wday_BCD;
        u_char	hour_BCD;
        u_char	min_BCD;
        u_char	sec_BCD;
        u_char	cal_BCD;
};

struct mvmeprom_dskio {
	u_char	ctrl_lun;
	u_char	dev_lun;
	u_short	status;
	void	*pbuffer;
	u_long	blk_num;
	u_short	blk_cnt;
	u_char	flag;
#define BUG_FILE_MARK	0x80
#define IGNORE_FILENUM	0x02
#define END_OF_FILE	0x01
	u_char	addr_mod;
};
#define MVMEPROM_BLOCK_SIZE	256

#endif	/* _LOCORE */

#ifndef RB_NOSYM
#define RB_NOSYM 0x4000
#endif
#endif /* _MACHINE_PROM_H_ */
@


1.21
log
@Older BUG version do not implement the `out cr/lf' BUG system call, and, worse,
do not return from it, for extra fun. The good thing is that the existing
kernel console code logic issueing \n as \r\n works nicely with the regular
BUG output routines, so there was no reason to use this particular BUG routine
in the first place.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.20 2012/11/25 14:10:47 miod Exp $ */
@


1.20
log
@Recognize a wrong network configuration which would cause tftpboot to
apparently freeze, and in any case fail to load anything; if this happens,
tell the user what to do and return to the BUG (altering the configuration
from tftpboot itself doesn't seem to have any effect, unfortunately).
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.19 2011/03/23 16:54:36 pirofti Exp $ */
d55 1
a55 1
#define	MVMEPROM_OUTCRLF	0x26
@


1.19
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.18 2010/12/23 20:05:08 miod Exp $ */
d46 1
d63 5
d69 4
d88 32
@


1.18
log
@The exception vector page on m88k systems has always been the same page as
the one used by the firmware, which (at least on mvme88k) is at address zero.

This is unfortunate, since this means that NULL pointer dereferences in the
kernel are not caught, and writes cause havoc.

This behaviour was necessary to be able to use the PROM system call interface
during early bootstrap, without having to disassemble the VBR page and
update branches - which use pc-relative displacement - if we were to use
a different VBR address.

On mvme88k, change this and actually set up two VBR pages: one, over the PROM
page (except for the system call vectors), and another one in the kernel
image (which will be mapped read-only). We'll run with the PROM page until
the end of autoconf, and then switch to the kernel one, and unmap all the
PROM below it.

As a bonus, the final kernel page can use optimized data access fault
handlers, which do not have to check for faults caused by badaddr(), since
badaddr() is only used during device probe on buses which do not support
hotplug.

There are a few infrastructure collateral damage on aviion and luna88k, but
these ports do not change their behaviour yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.17 2007/12/15 19:35:52 miod Exp $ */
d30 2
a31 2
#ifndef __MACHINE_PROM_H__
#define __MACHINE_PROM_H__
d176 1
a176 1
#endif /* __MACHINE_PROM_H__ */
@


1.17
log
@All MVME BUG manuals concur on SR3 being the only register needing to be
preserved across BUG calls, but on the other hand the last 16 traps need to
be restored to BUG values, not only trap #496.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.16 2006/05/16 22:51:28 miod Exp $ */
a169 2

extern unsigned long bugvec[32], sysbugvec[32];	/* BUG trap vector copies */
@


1.16
log
@Cleanup of mvme88k standalone code, with rewritten startup code with
fewer assembly statements and much less magic, a few display artefacts
removed, and private definitions moved out of the main prom.h.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.15 2005/12/11 21:45:31 miod Exp $ */
d171 1
a171 1
extern unsigned long bugvec[2], sysbugvec[2];	/* BUG trap vector copies */
@


1.15
log
@Work in progress SMP code; mvme88k boards can spin up secondary CPUs,
kernel boots single user. Still a lot of polishing and bugfixing to do.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.14 2004/08/02 14:38:40 miod Exp $ */
a170 14
struct mvmeprom_args {
        u_int	dev_lun;
        u_int	ctrl_lun;
        u_int	flags;
        u_int	ctrl_addr;
        u_int	entry;
        u_int	conf_blk;
        char	*arg_start;
        char	*arg_end;
	char	*nbarg_start;
	char	*nbarg_end;
	u_int	cputyp;
};

a173 11

#define MVMEPROM_REG_DEVLUN	"r2"
#define MVMEPROM_REG_CTRLLUN	"r3"
#define MVMEPROM_REG_FLAGS	"r4"
#define MVMEPROM_REG_CTRLADDR	"r5"
#define MVMEPROM_REG_ENTRY	"r6"
#define MVMEPROM_REG_CONFBLK	"r7"
#define MVMEPROM_REG_ARGSTART	"r8"
#define MVMEPROM_REG_ARGEND	"r9"
#define MVMEPROM_REG_NBARGSTART	"r10"
#define MVMEPROM_REG_NBARGEND	"r11"
@


1.14
log
@Fun with the BUG:
- add the board's suffix to the machine description if there is one;
- recognize BUG version < 5 on MVME188, which don't provide a CNFG block.
in this case we'll assume 20MHz for now, until we can parse the ENV data block
correctly...
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.13 2004/01/26 19:24:03 miod Exp $ */
d72 4
@


1.13
log
@A few more BUG syscall definitions and structures. Fix (not used yet)
mvmeprom_netctrl definition while there.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.12 2003/10/11 22:08:57 miod Exp $ */
d115 1
a115 1
	u_short	suffix;
@


1.12
log
@Nuke trailing whitespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.11 2003/09/01 19:14:04 miod Exp $ */
a40 2
#define MVMEPROM_OUTCHR		0x20
#define MVMEPROM_OUTSTR		0x21
d46 2
d49 1
d74 2
a75 1
struct prom_netctrl {
a76 1
	u_char	ctrl;
d82 17
@


1.11
log
@Prevent userland from invoking BUG system calls, by saving the initial BUG
trap vector contents, putting the bugtrap() stub in place, and switching
back and forth between them when the kernel needs to invoke BUG functions.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.10 2003/06/04 04:11:37 deraadt Exp $ */
d112 1
a112 1
	u_char	fill[2];		
@


1.10
log
@more term 3 and 4 changes
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.9 2002/03/05 22:11:40 miod Exp $ */
d33 3
d163 1
a163 1
#endif
d165 1
a165 3
#define MVMEPROM_CALL(x)	\
	__asm__ __volatile__ ( __CONCAT("or r9,r0,",__STRING(x)) ); \
	__asm__ __volatile__ ("tb0 0,r0,496")
@


1.9
log
@Kill prom stuff duplicates from bugio.[ch].
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.8 2001/08/12 12:03:02 heko Exp $ */
d16 1
a16 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Theo de Raadt
 * 4. The name of the author may not be used to endorse or promote products
@


1.8
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.7 2001/06/29 21:52:05 miod Exp $ */
d49 1
d53 1
d59 1
d167 1
a167 1
	__asm__ __volatile__ ("tb0 0,r0,496");
@


1.8.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.8 2001/08/12 12:03:02 heko Exp $ */
a48 1
#define MVMEPROM_OUTSTR		0x21
a51 1
#define	MVMEPROM_OUTCRLF	0x26
a56 1
#define	MVMEPROM_FORKMPU	0x100
d164 1
a164 1
	__asm__ __volatile__ ("tb0 0,r0,496")
@


1.7
log
@Give RB_NOSYM a non-conflicting value here too.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.6 2001/01/15 19:50:38 deraadt Exp $ */
d180 1
a180 1
#endif __MACHINE_PROM_H__
@


1.6
log
@__asm__ and __volatile__
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.5 2001/01/14 20:25:24 smurph Exp $ */
d178 1
a178 1
#define RB_NOSYM 0x400
@


1.5
log
@Complete move to UVM virtual memory system.  More header fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.4 1999/05/29 04:41:45 smurph Exp $ */
d163 2
a164 2
	asm volatile ( __CONCAT("or r9,r0,",__STRING(x)) ); \
	asm volatile ("tb0 0,r0,496");
@


1.4
log
@Added vme bus device drivers. MVME328, MVME376, MVME332
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.3 1999/02/09 06:36:27 smurph Exp $ */
d33 2
d180 1
a180 1

@


1.4.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.6 2001/01/15 19:50:38 deraadt Exp $ */
a32 2
#ifndef __MACHINE_PROM_H__
#define __MACHINE_PROM_H__
d161 2
a162 2
	__asm__ __volatile__ ( __CONCAT("or r9,r0,",__STRING(x)) ); \
	__asm__ __volatile__ ("tb0 0,r0,496");
d178 1
a178 1
#endif __MACHINE_PROM_H__
@


1.4.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.4.4.1 2001/04/18 16:11:25 niklas Exp $ */
d178 1
a178 1
#define RB_NOSYM 0x4000
@


1.4.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.4.4.2 2001/07/04 10:20:05 niklas Exp $ */
d180 1
a180 1
#endif /* __MACHINE_PROM_H__ */
@


1.4.4.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a48 1
#define MVMEPROM_OUTSTR		0x21
a51 1
#define	MVMEPROM_OUTCRLF	0x26
a56 1
#define	MVMEPROM_FORKMPU	0x100
d164 1
a164 1
	__asm__ __volatile__ ("tb0 0,r0,496")
@


1.4.4.5
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.4.4.4 2002/03/06 02:04:44 niklas Exp $ */
d16 4
a19 1
 * 3. The name of the author may not be used to endorse or promote products
@


1.4.4.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a32 3
/* BUG trap vector */
#define	MVMEPROM_VECTOR		496

d38 2
a44 2
#define MVMEPROM_NETFOPEN	0x1b
#define MVMEPROM_NETFREAD	0x1c
a45 1
#define MVMEPROM_OUTCHR		0x20
d70 2
a71 1
struct mvmeprom_netctrl {
a72 1
	u_char	dev;
a79 17
struct mvmeprom_netfopen {
	u_char	ctrl;
	u_char	dev;
	u_short	status;
	char	filename[64];
};

struct mvmeprom_netfread {
	u_char	ctrl;
	u_char	dev;
	u_short	status;
	u_long	addr;
	u_short	bytes;
	u_short	blk;
	u_long	timeout;
};

d109 1
a109 1
	u_char	fill[2];
d160 1
a160 1
extern unsigned long bugvec[2], sysbugvec[2];	/* BUG trap vector copies */
d162 3
a164 1
#endif	/* _LOCORE */
@


1.3
log
@Added kernel support for user debugging.  Fixed file ID's
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.1 1998/12/15 06:02:55 smurph Exp $ */
d101 15
a115 13

	/*
	 * XXX: I have seen no documentation for these!
	 *
	 * The following (appears to) exist only on the MVME162 and
	 * upwards. We should figure out what the other fields are.
	 */
	u_char	xx1[16];
	u_char	xx2[4];
	u_char	longname[12];
	u_char	xx3[16];
	u_char	speed[4];
	u_char	xx4[12];
@


1.2
log
@Commit for the first real OpenBSD mvme88k kernel.
@
text
@d1 1
a1 2
/*	$NetBSD$ */

d3 1
@


1.1
log
@Initial revision
@
text
@d151 3
d161 16
@


1.1.1.1
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@@
