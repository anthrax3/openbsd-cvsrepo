head	1.25;
access;
symbols
	OPENBSD_5_5:1.24.0.6
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.24.0.2
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.21.0.8
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.6
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.4
	OPENBSD_5_0:1.21.0.2
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.20.0.8
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.6
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.4
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.19.0.6
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.4
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.2
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.18.0.6
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.18.0.4
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.2
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.17.0.2
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.16.0.4
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.2
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.15.0.2
	OPENBSD_3_6_BASE:1.15
	SMP_SYNC_A:1.15
	SMP_SYNC_B:1.15
	OPENBSD_3_5:1.14.0.2
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.12.0.4
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.9
	UBC:1.6.0.2
	UBC_BASE:1.6
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	SMP:1.2.0.2;
locks; strict;
comment	@ * @;


1.25
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.24;

1.24
date	2013.06.16.14.49.49;	author kettenis;	state Exp;
branches;
next	1.23;

1.23
date	2013.05.17.22.51.59;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2013.05.17.22.40.01;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.20;

1.20
date	2009.03.15.20.39.53;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2007.12.27.23.17.55;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2006.03.13.19.43.21;	author brad;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.12.20.53.22;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2004.12.24.22.50.30;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2004.04.26.12.34.05;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2004.01.08.14.29.45;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2003.10.11.22.08.57;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2003.01.13.20.12.16;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2003.01.04.02.14.45;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2003.01.03.23.17.42;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.29.07.35.20;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.01.26.39;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.10.23.15.05;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.16.23.49.46;	author miod;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2001.12.13.08.55.51;	author smurph;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.21.19.04.52;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.26.14.31.07;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.16.00.05.24;	author miod;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.03.09.05.44.40;	author smurph;	state Exp;
branches;
next	;

1.2.2.1
date	2001.04.18.16.11.21;	author niklas;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.10.31.03.01.19;	author nate;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2001.12.05.00.39.12;	author niklas;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2002.03.06.02.04.44;	author niklas;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	2002.03.28.10.36.02;	author niklas;	state Exp;
branches;
next	1.2.2.6;

1.2.2.6
date	2003.03.27.23.32.18;	author niklas;	state Exp;
branches;
next	1.2.2.7;

1.2.2.7
date	2004.02.19.10.49.07;	author niklas;	state Exp;
branches;
next	1.2.2.8;

1.2.2.8
date	2004.06.05.23.09.50;	author niklas;	state Exp;
branches;
next	;

1.6.2.1
date	2002.06.11.03.37.10;	author art;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2003.05.19.21.45.53;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: intr.h,v 1.24 2013/06/16 14:49:49 kettenis Exp $	*/
/*
 * Copyright (C) 2000 Steve Murphree, Jr.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 * Copyright (c) 1996 Nivas Madhur
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _MACHINE_INTR_H_
#define _MACHINE_INTR_H_

/*
 * IPL levels.
 * We use 6 as IPL_HIGH so that abort can be programmed at 7 so that
 * it is always possible to break into the system unless interrupts
 * are disabled.
 */

#define IPL_NONE	0
#define IPL_SOFTINT	1
#define IPL_BIO		2
#define IPL_NET		3
#define IPL_TTY		5
#define IPL_VM		5
#define IPL_CLOCK	5
#define IPL_STATCLOCK	5
#define	IPL_SCHED	5
#define IPL_HIGH	6
#define IPL_NMI		7
#define IPL_ABORT	7

#define	NIPLS		8

#define	IPL_MPSAFE	0	/* no "mpsafe" interrupts */

#if defined(_KERNEL) && !defined(_LOCORE)

#include <sys/evcount.h>

struct intrhand {
	SLIST_ENTRY(intrhand) ih_link;
	int	(*ih_fn)(void *);
	void	*ih_arg;
	int	ih_ipl;
	int	ih_wantframe;
	struct evcount ih_count;
};

int	intr_establish(int, struct intrhand *, const char *);
int	intr_findvec(int, int, int);

/*
 * There are 256 possible VME interrupt vectors on a mvme88k platform
 * (although some systems use VME vectors for onboard devices).
 * Use either vmeintr_establish() or intr_establish() to register a handler
 * for the given vector. Vector number is used to index into the
 * intr_handlers[] table.
 */
#define	NVMEINTR	256
typedef SLIST_HEAD(, intrhand) intrhand_t;
extern intrhand_t intr_handlers[NVMEINTR];

/*
 * Currently registered VME interrupt vectors for a given IPL, if they
 * are unique. Used to help the MVME181 and MVME188 interrupt handlers when
 * they fail to complete the VME interrupt acknowledge cycle to get the
 * interrupt vector number.
 */
extern u_int vmevec_hints[NIPLS];

/* Interrupt masks (MVME181, MVME188) */
extern u_int32_t int_mask_val[NIPLS];

/*
 * Logical values for non-VME interrupt sources on boards with dedicated
 * interrupt controllers (MVME181, MVME188). Not all sources may be available
 * on a given board.
 */

#define	INTSRC_ABORT	1	/* abort button */
#define	INTSRC_ACFAIL	2	/* AC failure */
#define	INTSRC_SYSFAIL	3	/* system failure */
#define	INTSRC_PARERR	4	/* memory parity error */
#define	INTSRC_CIO	5	/* Z8536 */
#define	INTSRC_DTIMER	6	/* MC68692 timer interrupt */
#define	INTSRC_DUART	7	/* MC68692 serial interrupt */
#define	INTSRC_VME	8	/* up to seven VME interrupt levels */

#endif /* _KERNEL && !_LOCORE */

#include <m88k/intr.h>

#endif /* _MACHINE_INTR_H_ */
@


1.24
log
@Add IPL_MPSAFE for some architectures that I missed in the first round.

pointed out by & ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.23 2013/05/17 22:51:59 miod Exp $	*/
@


1.23
log
@Preliminary support for MVME180 and MVME181 boards. On-board serial ports
and VME controller are supported; tod chip isn't supported yet (coming soon).
MVME236 memory boards are not supported and won't likely be (unless I get my
hands on one).

MVME181-1 boots multiuser (slowly) with MVME328 SCSI and MVME376 Ethernet
despite only having 8MB of memory onboard.

MVME180 untested; might need tweaking to get MVME SCSI and Ethernet boards
supported.

Many thanks to Matti Nummi for lending me an MVME181 board.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.22 2013/05/17 22:40:01 miod Exp $	*/
d91 2
@


1.22
log
@Move interrupt-related defines from <machine/cpu.h> to <machine/intr.h>.
No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.21 2011/03/23 16:54:36 pirofti Exp $	*/
d81 2
a82 2
#define IPL_TTY		3
#define IPL_VM		3
@


1.21
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.20 2009/03/15 20:39:53 miod Exp $	*/
d28 38
d91 55
@


1.20
log
@Generic softinterrupt support for m88k based platforms, adapted from arm
with different locking mechanism. 88110 soft ipi are replaced with an
ipi callback which is checked upon return from exception (it can not be kept
as a softintr, as the generic softinterrupt code doesn't have per-cpu
pending softintr queues).
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.19 2007/12/27 23:17:55 miod Exp $	*/
d29 2
a30 2
#ifndef _MVME88K_INTR_H_
#define _MVME88K_INTR_H_
d56 1
a56 1
#endif /* _MVME88K_INTR_H_ */
@


1.19
log
@Make the mvme188 interrupt handling closer to the aviion interrupt handling:
non-VME syscon interrupt sources will now use their own intrhand array,
and interrupt sources will be enabled in the arbiter as interrupt handlers
are registered. This allows VME devices to use the whole 256 interrupts range.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.18 2006/03/13 19:43:21 brad Exp $	*/
d40 1
a40 2
#define IPL_SOFTCLOCK	1
#define IPL_SOFTNET	1
@


1.18
log
@remove IPL_IMP.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.17 2005/10/12 20:53:22 miod Exp $	*/
d52 2
@


1.17
log
@Define IPL_SCHED and spslsched(), matching the statclock level.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.16 2004/12/24 22:50:30 miod Exp $	*/
a43 1
#define IPL_IMP		3
@


1.16
log
@{e,}intr{cnt,names} bye-bye.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.15 2004/04/26 12:34:05 miod Exp $	*/
d49 1
@


1.15
log
@Start factorizing luna88k and mvme88k common parts.
For now, include files only.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.14 2004/01/08 14:29:45 miod Exp $	*/
a30 30
/*
 * INTERRUPT STAT levels.  for 'systat vmstat'
 * intrcnt and friends are defined in locore.S
 * XXX smurph
 */

#ifndef _LOCORE

#define M88K_NIRQ	12

#define M88K_SPUR_IRQ	0
#define M88K_LEVEL1_IRQ	1
#define M88K_LEVEL2_IRQ	2
#define M88K_LEVEL3_IRQ	3
#define M88K_LEVEL4_IRQ	4
#define M88K_LEVEL5_IRQ	5
#define M88K_LEVEL6_IRQ	6
#define M88K_LEVEL7_IRQ	7
/*
 * We keep track of these separately, but
 * they will be reflected with the above also.
 */
#define M88K_CLK_IRQ	8
#define M88K_SCLK_IRQ	9
#define M88K_PCLK_IRQ	10
#define M88K_NMI_IRQ	11

extern int intrcnt[M88K_NIRQ];

#endif
@


1.14
log
@Some splfoo() have raise-if-lower semantics; so introduce raiseipl() which
never lowers current spl value, and use it where appropriate.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.13 2003/10/11 22:08:57 miod Exp $	*/
d83 1
a83 50
#ifdef _KERNEL
#ifndef _LOCORE
unsigned setipl(unsigned level);
unsigned raiseipl(unsigned level);
int spl0(void);

/* needs major cleanup - XXX nivas */

/* SPL asserts */
#ifdef DIAGNOSTIC
/*
 * Although this function is implemented in MI code, it must be in this MD
 * header because we don't want this header to include MI includes.
 */
void splassert_fail(int, int, const char *);
extern int splassert_ctl;
void splassert_check(int, const char *);
#define splassert(__wantipl) do {			\
	if (__predict_false(splassert_ctl > 0)) {	\
		splassert_check(__wantipl, __func__);	\
	}						\
} while (0)
#else
#define	splassert(wantipl)	do { /* nothing */ } while (0)
#endif

#endif /* _LOCORE */

#define spl1()		setipl(1)
#define spl2()		setipl(2)
#define spl3()		setipl(3)
#define spl4()		setipl(4)
#define spl5()		setipl(5)
#define spl6()		setipl(6)
#define spl7()		setipl(7)

#define splnone			spl0
#define spllowersoftclock()	setipl(IPL_SOFTCLOCK)
#define splsoftclock()		setipl(IPL_SOFTCLOCK)
#define splsoftnet()		setipl(IPL_SOFTNET)
#define splbio()		raiseipl(IPL_BIO)
#define splnet()		raiseipl(IPL_NET)
#define spltty()		raiseipl(IPL_TTY)
#define splclock()		raiseipl(IPL_CLOCK)
#define splstatclock()		raiseipl(IPL_STATCLOCK)
#define splimp()		raiseipl(IPL_IMP)
#define splvm()			raiseipl(IPL_VM)
#define splhigh()		setipl(IPL_HIGH)

#define splx(x)		((x) ? setipl((x)) : spl0())
a84 1
#endif /* _KERNEL */
@


1.13
log
@Nuke trailing whitespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.12 2003/01/13 20:12:16 miod Exp $	*/
d86 1
a110 5
#if 0
spl0 is a function by itself. I really am serious about the clean up
above...
#define spl0()		spln(0)
#endif /* 0 */
d123 7
a129 7
#define splbio()		setipl(IPL_BIO)
#define splnet()		setipl(IPL_NET)
#define spltty()		setipl(IPL_TTY)
#define splclock()		setipl(IPL_CLOCK)
#define splstatclock()		setipl(IPL_STATCLOCK)
#define splimp()		setipl(IPL_IMP)
#define splvm()			setipl(IPL_VM)
@


1.12
log
@Clean up ipl handling: be sure to always return valid levels in getipl(),
and check input level in setipl() if DIAGNOSTIC.

Doing this pointed out an horrible bug where exception frames would refer
to the saved ipl at the time the exception was processed, but would not
save it before, and the joys of stack values would make it a correct value
90% of the time. Of course, bad things could happen when restoring the
``saved'' ipl...
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.11 2003/01/04 02:14:45 miod Exp $	*/
d49 2
a50 2
/* 
 * We keep track of these separately, but   
d60 1
a60 1
#endif 
@


1.11
log
@Don't define splassert goo if _LOCORE
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.10 2003/01/03 23:17:42 miod Exp $	*/
a85 3
#ifdef DDB
unsigned db_setipl(unsigned level);
#endif 
a136 5

#ifdef DDB
#define db_splx(x)	db_setipl((x))
#define db_splhigh()    db_setipl(IPL_HIGH)
#endif /* DDB */
@


1.10
log
@splassert support for m88k
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.9 2002/04/29 07:35:20 miod Exp $	*/
a89 1
#endif /* _LOCORE */
d110 2
@


1.9
log
@Define placeholders for art's splassert() debugging stuff on all arches.
Currently as no-ops everywhere.

ok art@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.8 2002/03/14 01:26:39 millert Exp $	*/
d95 16
a110 1
#define	splassert(wantipl)	/* nothing */
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.7 2002/02/10 23:15:05 deraadt Exp $	*/
d93 3
@


1.7
log
@spelling
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.6 2001/12/16 23:49:46 miod Exp $	*/
d85 1
a85 1
unsigned setipl __P((unsigned level));
d87 1
a87 1
unsigned db_setipl __P((unsigned level));
d89 1
a89 1
int spl0 __P((void));
@


1.6
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.4 2001/11/21 19:04:52 miod Exp $	*/
d50 1
a50 1
 * We keep track of these seperately, but   
@


1.6.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.6 2001/12/16 23:49:46 miod Exp $	*/
d50 1
a50 1
 * We keep track of these separately, but   
d85 1
a85 1
unsigned setipl(unsigned level);
d87 1
a87 1
unsigned db_setipl(unsigned level);
d89 1
a89 1
int spl0(void);
a92 3

/* SPL asserts */
#define	splassert(wantipl)	/* nothing */
@


1.6.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d86 3
d90 1
d95 1
a95 18
#ifdef DIAGNOSTIC
/*
 * Although this function is implemented in MI code, it must be in this MD
 * header because we don't want this header to include MI includes.
 */
void splassert_fail(int, int, const char *);
extern int splassert_ctl;
void splassert_check(int, const char *);
#define splassert(__wantipl) do {			\
	if (__predict_false(splassert_ctl > 0)) {	\
		splassert_check(__wantipl, __func__);	\
	}						\
} while (0)
#else
#define	splassert(wantipl)	do { /* nothing */ } while (0)
#endif

#endif /* _LOCORE */
d124 5
@


1.5
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@d74 1
d76 1
a76 1
#define IPL_IMP		4
d117 1
a117 1
#define splvm()			setipl(IPL_IMP)
@


1.4
log
@Lower splvm() level, after discussing with art.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.3 2001/08/26 14:31:07 miod Exp $	*/
a73 1
#define IPL_IMP		3
d75 1
a75 1
#define IPL_VM		3
d116 1
a116 1
#define splvm()			setipl(IPL_VM)
@


1.3
log
@Add prototypes, fix compilation warnings, random style fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.2 2001/03/16 00:05:24 miod Exp $	*/
d76 1
a78 1
#define IPL_VM		6
a79 1
#define IPL_SCHED	6
a118 1
#define splsched()		setipl(IPL_SCHED)
@


1.2
log
@More function prototypes.
Move badwordaddr() to a macro.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.1 2001/03/09 05:44:40 smurph Exp $	*/
d87 1
a87 1
#if DDB
d124 1
a124 1
#if DDB
@


1.2.2.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.2 2001/03/16 00:05:24 miod Exp $	*/
@


1.2.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.2.2.1 2001/04/18 16:11:21 niklas Exp $	*/
d87 1
a87 1
#ifdef DDB
d124 1
a124 1
#ifdef DDB
@


1.2.2.3
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.2.2.2 2001/10/31 03:01:19 nate Exp $	*/
a75 1
#define IPL_VM		3
d78 1
d80 1
d120 1
@


1.2.2.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 1
a50 1
 * We keep track of these separately, but   
@


1.2.2.5
log
@Merge in -current from about a week ago
@
text
@d85 1
a85 1
unsigned setipl(unsigned level);
d87 1
a87 1
unsigned db_setipl(unsigned level);
d89 1
a89 1
int spl0(void);
@


1.2.2.6
log
@Sync the SMP branch with 3.3
@
text
@d86 3
d90 1
a93 20
/* SPL asserts */
#ifdef DIAGNOSTIC
/*
 * Although this function is implemented in MI code, it must be in this MD
 * header because we don't want this header to include MI includes.
 */
void splassert_fail(int, int, const char *);
extern int splassert_ctl;
void splassert_check(int, const char *);
#define splassert(__wantipl) do {			\
	if (__predict_false(splassert_ctl > 0)) {	\
		splassert_check(__wantipl, __func__);	\
	}						\
} while (0)
#else
#define	splassert(wantipl)	do { /* nothing */ } while (0)
#endif

#endif /* _LOCORE */

d121 5
@


1.2.2.7
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d49 2
a50 2
/*
 * We keep track of these separately, but
d60 1
a60 1
#endif
a85 1
unsigned raiseipl(unsigned level);
d110 5
d127 7
a133 7
#define splbio()		raiseipl(IPL_BIO)
#define splnet()		raiseipl(IPL_NET)
#define spltty()		raiseipl(IPL_TTY)
#define splclock()		raiseipl(IPL_CLOCK)
#define splstatclock()		raiseipl(IPL_STATCLOCK)
#define splimp()		raiseipl(IPL_IMP)
#define splvm()			raiseipl(IPL_VM)
@


1.2.2.8
log
@Merge with the trunk
@
text
@d83 5
a87 1
#include <m88k/intr.h>
d89 46
@


1.1
log
@kernel will compile with -Werror.  Added intr.h
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.2 2000/07/06 15:25:04 ho Exp $	*/
a83 1
#ifndef ASSEMBLER
d85 1
d91 1
a91 1
#endif /* ASSEMBLER */
@

