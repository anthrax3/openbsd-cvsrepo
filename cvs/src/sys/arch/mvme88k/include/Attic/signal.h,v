head	1.15;
access;
symbols
	OPENBSD_5_5:1.14.0.42
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.38
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.36
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.34
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.32
	OPENBSD_5_0:1.14.0.30
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.28
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.26
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.22
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.24
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.20
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.18
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.16
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.14
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.12
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.10
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.8
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.6
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.4
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.2
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.9.0.8
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.8.0.2
	UBC_BASE:1.8
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.10
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.8
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.6
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	mvme88kport:1.1.1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	first_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.14;

1.14
date	2004.04.26.14.31.11;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.26.12.34.05;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.13.17.15.07;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2004.01.12.23.55.10;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.12.21.33.15;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.12.20.06.20.26;	author smurph;	state Exp;
branches;
next	1.8;

1.8
date	2001.12.16.23.49.46;	author miod;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2001.12.13.08.55.51;	author smurph;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.12.12.03.02;	author heko;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.14.20.25.24;	author smurph;	state Exp;
branches;
next	1.4;

1.4
date	99.02.09.06.36.27;	author smurph;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	97.03.03.20.21.16;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	97.03.03.19.07.47;	author rahnds;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.10.54.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.10.54.21;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.03.03.19.31.17;	author rahnds;	state Exp;
branches;
next	;

1.4.6.1
date	2001.04.18.16.11.27;	author niklas;	state Exp;
branches;
next	1.4.6.2;

1.4.6.2
date	2001.10.31.03.01.19;	author nate;	state Exp;
branches;
next	1.4.6.3;

1.4.6.3
date	2002.03.06.02.04.44;	author niklas;	state Exp;
branches;
next	1.4.6.4;

1.4.6.4
date	2004.02.19.10.49.07;	author niklas;	state Exp;
branches;
next	1.4.6.5;

1.4.6.5
date	2004.06.05.23.09.50;	author niklas;	state Exp;
branches;
next	;

1.8.2.1
date	2002.01.31.22.55.18;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/* $OpenBSD: signal.h,v 1.14 2004/04/26 14:31:11 miod Exp $ */
/* public domain */
#include <m88k/signal.h>
@


1.14
log
@Fix RCSID
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.13
log
@Start factorizing luna88k and mvme88k common parts.
For now, include files only.
@
text
@d1 1
a1 1
/* $OpenBSD */
@


1.12
log
@During signal delivery, force the sigframe to be on an 8 byte boundary.
This removes the need for extra padding in struct sigcontext.
@
text
@d1 3
a3 56
/*	$OpenBSD: signal.h,v 1.11 2004/01/12 23:55:10 miod Exp $ */
/*
 * Copyright (c) 1996 Nivas Madhur
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Nivas Madhur.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef __MACHINE_SIGNAL_H__
#define __MACHINE_SIGNAL_H__

#include <machine/reg.h>

typedef int sig_atomic_t;

/*
 * Information pushed on stack when a signal is delivered.
 * This is used by the kernel to restore state following
 * execution of the signal handler. It is also made available
 * to the handler to allow it to restore state properly if
 * a non-standard exit is performed.
 *
 * All machines must have an sc_onstack and sc_mask.
 */
struct  sigcontext {
        int     sc_onstack;             /* sigstack state to restore */
        int     sc_mask;                /* signal mask to restore */
	/* begin machine dependent portion */
	struct reg sc_regs;
};

#endif /* __MACHINE_SIGNAL_H__ */
@


1.11
log
@Use a struct reg in struct sigcontext, rather than an unsorted pot-pourri
of registers. This also makes signal and sigreturn much simpler.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.10 2004/01/12 21:33:15 miod Exp $ */
a53 3

	/* XXX this structure needs to be a multiple of 8 bytes for now */
	int	sc_pad;
@


1.10
log
@Shrink the reg structure, for it to only contain registers (eh), and make
the remaining fielhs only available in struct trapframe.

This has the additional benefit of preventing smarty-pants from altering
the frame a bit too easily from ddb, at the expense of a few ugly casts in
ddb.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.9 2001/12/20 06:20:26 smurph Exp $ */
d36 2
d53 1
a53 37
	int	sc_regs[32];
#define	sc_sp	sc_regs[31]
	int	sc_ps;
	int	sc_fpsr;
	int	sc_fpcr;
	int	sc_xip;
	int	sc_nip;
	int	sc_fip;
	int	sc_ssbr;
#define sc_duap	sc_ssbr	/* mc88110 */
	int	sc_dmt0;
#define sc_dsr	sc_dmt0	/* mc88110 */
	int	sc_dmd0;
#define sc_dlar	sc_dmd0	/* mc88110 */
	int	sc_dma0;
#define sc_dpar	sc_dma0	/* mc88110 */
	int	sc_dmt1;
#define sc_isr	sc_dmt1	/* mc88110 */
	int	sc_dmd1;
#define sc_ilar	sc_dmd1	/* mc88110 */
	int	sc_dma1;
#define sc_ipar	sc_dma1	/* mc88110 */
	int	sc_dmt2;
#define sc_isap sc_dmt2	/* mc88110 */
	int	sc_dmd2;
#define sc_dsap sc_dmd2	/* mc88110 */
	int	sc_dma2;
#define sc_iuap sc_dma2	/* mc88110 */
	int	sc_fpecr;
	int	sc_fphs1;
	int	sc_fpls1;
	int	sc_fphs2;
	int	sc_fpls2;
	int	sc_fppt;
	int	sc_fprh;
	int	sc_fprl;
	int	sc_fpit;
@


1.9
log
@MC88110 header modifications.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.8 2001/12/16 23:49:46 miod Exp $ */
d32 1
d35 1
d53 3
a58 3
	int	sc_ps;
	int	sc_fpsr;
	int	sc_fpcr;
d88 3
a90 1
	int	sc_xxxx;	/* pad to double word boundary */
d92 1
@


1.8
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.6 2001/08/12 12:03:02 heko Exp $ */
d58 1
d60 1
d62 1
d64 1
d66 1
d68 1
d70 1
d72 1
d74 1
d76 1
d86 1
a86 1
	int	sc_xxxx;	/* padd to double word boundary */
@


1.8.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.9 2001/12/20 06:20:26 smurph Exp $ */
a57 1
#define sc_duap	sc_ssbr	/* mc88110 */
a58 1
#define sc_dsr	sc_dmt0	/* mc88110 */
a59 1
#define sc_dlar	sc_dmd0	/* mc88110 */
a60 1
#define sc_dpar	sc_dma0	/* mc88110 */
a61 1
#define sc_isr	sc_dmt1	/* mc88110 */
a62 1
#define sc_ilar	sc_dmd1	/* mc88110 */
a63 1
#define sc_ipar	sc_dma1	/* mc88110 */
a64 1
#define sc_isap sc_dmt2	/* mc88110 */
a65 1
#define sc_dsap sc_dmd2	/* mc88110 */
a66 1
#define sc_iuap sc_dma2	/* mc88110 */
d76 1
a76 1
	int	sc_xxxx;	/* pad to double word boundary */
@


1.7
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@a57 1
#define sc_duap	sc_ssbr	/* mc88110 */
a58 1
#define sc_dsr	sc_dmt0	/* mc88110 */
a59 1
#define sc_dlar	sc_dmd0	/* mc88110 */
a60 1
#define sc_dpar	sc_dma0	/* mc88110 */
a61 1
#define sc_isr	sc_dmt1	/* mc88110 */
a62 1
#define sc_ilar	sc_dmd1	/* mc88110 */
a63 1
#define sc_ipar	sc_dma1	/* mc88110 */
a64 1
#define sc_isap sc_dmt2	/* mc88110 */
a65 1
#define sc_dsap sc_dmd2	/* mc88110 */
a66 1
#define sc_iuap sc_dma2	/* mc88110 */
d76 1
a76 1
	int	sc_xxxx;	/* pad to double word boundary */
@


1.6
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.5 2001/01/14 20:25:24 smurph Exp $ */
d58 1
d60 1
d62 1
d64 1
d66 1
d68 1
d70 1
d72 1
d74 1
d76 1
d86 1
a86 1
	int	sc_xxxx;	/* padd to double word boundary */
@


1.5
log
@Complete move to UVM virtual memory system.  More header fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.4 1999/02/09 06:36:27 smurph Exp $ */
d78 1
a78 1
#endif __MACHINE_SIGNAL_H__
@


1.4
log
@Added kernel support for user debugging.  Fixed file ID's
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.1 1998/12/15 04:45:50 smurph Exp $ */
d32 2
d78 1
@


1.4.6.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.5 2001/01/14 20:25:24 smurph Exp $ */
a31 2
#ifndef __MACHINE_SIGNAL_H__
#define __MACHINE_SIGNAL_H__
a75 1
#endif __MACHINE_SIGNAL_H__
@


1.4.6.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.4.6.1 2001/04/18 16:11:27 niklas Exp $ */
d78 1
a78 1
#endif /* __MACHINE_SIGNAL_H__ */
@


1.4.6.3
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a57 1
#define sc_duap	sc_ssbr	/* mc88110 */
a58 1
#define sc_dsr	sc_dmt0	/* mc88110 */
a59 1
#define sc_dlar	sc_dmd0	/* mc88110 */
a60 1
#define sc_dpar	sc_dma0	/* mc88110 */
a61 1
#define sc_isr	sc_dmt1	/* mc88110 */
a62 1
#define sc_ilar	sc_dmd1	/* mc88110 */
a63 1
#define sc_ipar	sc_dma1	/* mc88110 */
a64 1
#define sc_isap sc_dmt2	/* mc88110 */
a65 1
#define sc_dsap sc_dmd2	/* mc88110 */
a66 1
#define sc_iuap sc_dma2	/* mc88110 */
d76 1
a76 1
	int	sc_xxxx;	/* pad to double word boundary */
@


1.4.6.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a31 1

a33 3

#include <machine/reg.h>

d49 38
a86 1
	struct reg sc_regs;
a87 1

@


1.4.6.5
log
@Merge with the trunk
@
text
@d1 56
a56 3
/* $OpenBSD$ */
/* public domain */
#include <m88k/signal.h>
@


1.3
log
@Cleanup after import. This also seems to bring up the current version.
@
text
@d1 1
@


1.2
log
@This is a remove to get rid of the old mvme88k port which was incomplete
to replace it with a working version. The kernel compiles and works
at least.  The new version will be imported shortly.
@
text
@d1 30
a30 2
/* Stolen from SVR4 (/usr/include/sys/signal.h) */

d73 1
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@initial 88k import; code by nivas and based on mach luna88k
@
text
@@


1.1.1.2
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@d1 2
a2 30
/*
 * Copyright (c) 1996 Nivas Madhur
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Nivas Madhur.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
a44 1
	int	sc_xxxx;	/* padd to double word boundary */
@
