head	1.6;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	UBC_SYNC_A:1.6
	UBC_SYNC_B:1.6
	OPENBSD_3_0:1.5.0.14
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.12
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.10
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.8
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.6
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	mvme88kport:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	first_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2002.01.12.16.34.13;	author miod;	state dead;
branches;
next	1.5;

1.5
date	99.02.09.06.36.27;	author smurph;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	98.12.15.04.45.50;	author smurph;	state Exp;
branches;
next	1.3;

1.3
date	97.03.03.20.21.07;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	97.03.03.19.07.39;	author rahnds;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.10.54.24;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.10.54.24;	author deraadt;	state Exp;
branches;
next	;

1.5.6.1
date	2002.03.06.02.04.44;	author niklas;	state dead;
branches;
next	;


desc
@@


1.6
log
@Not used.
@
text
@/*	$OpenBSD: pcctworeg.h,v 1.5 1999/02/09 06:36:27 smurph Exp $ */
/*
 * Memory map for PCC2 chip found in mvme1x7 boards.
 *
 * PCCchip2 control and status register can be accessed as bytes (8 bits),
 * two-bytes (16 bits), or four-bytes (32 bits).
 */

struct pcc2reg {
	volatile u_char		pcc2_chipid;
	volatile u_char		pcc2_chiprev;
	volatile u_char		pcc2_gcr;
	volatile u_char		pcc2_vbr;		/* vector base reg. */
	volatile u_long		pcc2_t1cmp;		/* timer1 compare reg */
	volatile u_long		pcc2_t1cntr;		/* timer1 counter reg */
	volatile u_long		pcc2_t2cmp;		/* timer2 compare reg */
	volatile u_long		pcc2_t2cntr;		/* timer2 counter reg */
	volatile u_char		pcc2_pscntreg;		/* prescalar count reg */
	volatile u_char		pcc2_psclkadj;		/* clock adjust reg */
	volatile u_char		pcc2_t2ctl;		/* timer2 control */
	volatile u_char		pcc2_t1ctl;		/* timer1 control */
	volatile u_char		pcc2_gpiirq;		/* GPIO intr ctl */
	volatile u_char		pcc2_gpiopctl;		/* GPIO pin control */ 
	volatile u_char		pcc2_t2irq;		/* Timer2 intr ctl */
	volatile u_char		pcc2_t1irq;		/* Timer1 intr ctl */
	volatile u_char		pcc2_sccerrstat;	/* SCC error status */
	volatile u_char		pcc2_sccmoirq;		/* Modem intr control */
	volatile u_char		pcc2_scctxirq;		/* Tx intr control */
	volatile u_char		pcc2_sccrxirq;		/* Rx intr control */
	volatile u_int		:24;
	volatile u_char		pcc2_sccmopiack;	/* modem PIACK */
	volatile u_char		:8;
	volatile u_char		pcc2_scctxpiack;	/* Tx PIACK */
	volatile u_char		:8;
	volatile u_char		pcc2_sccrxpiack;	/* Rx PIACK */
	volatile u_char		pcc2_lancerrstat;	/* LANC error status */
	volatile u_char		:8;
	volatile u_char		pcc2_lancirq;		/* LANC intr control */
	volatile u_char		pcc2_lancerrirq;	/* LANC err intr ctl */
	volatile u_char		pcc2_scsierrstat;	/* SCSI err status */
	volatile u_char		:8;
	volatile u_char		:8;
	volatile u_char		pcc2_scsiirq;		/* SCSI intr control */
	volatile u_char		pcc2_packirq;		/* printer ACK intr */
	volatile u_char		pcc2_pfltirq;		/* printer FAULT intr */
	volatile u_char		pcc2_pselirq;		/* printer SEL intr */
	volatile u_char		pcc2_ppeirq;		/* printer PE intr */
	volatile u_char		pcc2_pbusyirq;		/* printer BUSY intr */
	volatile u_char		:8;
	volatile u_char		pcc2_pstat;		/* printer status reg */
	volatile u_char		pcc2_pctl;		/* printer port ctl */
	volatile u_short	pcc2_chipspeed;		/* chip speed (factory testing only) */
	volatile u_short	pcc2_pdata;		/* printer data */
	volatile u_int		:16;
	volatile u_char		pcc2_ipl;		/* interrupt IPL */
	volatile u_char		pcc2_imask;		/* intr mask level */
};

/*
 * Vaddrs for interrupt mask and pri registers
 */
extern volatile u_char *pcc2intr_mask;
extern volatile u_char *pcc2intr_ipl;

extern volatile struct pcc2reg *pcc2addr;

#define PCC2_BASE_ADDR		0xFFF42000		/* base address */
#define PCC2_SIZE		0x1000			/* size */

#define PCC2_CHIP_ID		0x20
#define PCC2_CHIP_REV		0x00

/* General  Control Register */

#define PCC2_DR0		0x80
#define PCC2_C040		0x04
#define PCC2_MIEN		0x02
#define PCC2_FAST		0x01

/* Top 4 bits of the PCC2 VBR. Will be the top 4 bits of the vector */

#define	PCC2_VECT		0x50

/* Bottom 4 bits of the vector returned during IACK cycle */
#define PPBSY			0x00 				/* lowest */
#define PPSE			0x01
#define PPSEL			0x02
#define PPFLT			0x03
#define PPACK			0x04
#define SCSIIRQ			0x05
#define LANCERR			0x06
#define LANCIRQ			0x07
#define TIMER1IRQ		0x08
#define TIMER2IRQ		0x09
#define GPIOIRQ			0x0a
#define SRXEIRQ			0x0c
#define SMOIRQ			0x0d
#define STxIRQ			0x0e
#define SRxIRQ			0x0f

/*
 * Timer control regs
 */

#define	PCC2_TICTL_CEN			0x01
#define PCC2_TICTL_COC			0x02
#define PCC2_TICTL_COVF			0x04
#define PCC2_TTCTL_OVF_MASK		(1 << 4)	/* overflow bits mask */

/* GPIO interrupt control */

#define PCC2_GPIIRQ_PLTY		0x80
#define PCC2_GPIIRQ_EL			0x40
#define PCC2_GPIIRQ_INT			0x20
#define PCC2_GPIIRQ_IEN			0x10
#define PCC2_GPIIRQ_ICLR		0x08
#define PCC2_GPIIRQ_IL			0x07		/* IL2-IL0 */

/* GPIO Pin Control Register */

#define PCC2_GPIOPCTL_GPI		0x04
#define PCC2_GPIOPCTL_GPOE		0x02
#define PCC2_GPIOPCTL_GPO		0x01

/* Tick Timer Interrupt Control Register */

#define PCC2_TTIRQ_INT			0x20
#define PCC2_TTIRQ_IEN			0x10
#define PCC2_TTIRQ_ICLR			0x08
#define PCC2_TTIRQ_IL			0x07		/* mask for IL2-IL0 */

/* SCC Error Status Register */

#define PCC2_SCCERRSTAT_RTRY		0x10
#define PCC2_SCCERRSTAT_PRTY		0x08
#define PCC2_SCCERRSTAT_EXT		0x04
#define PCC2_SCCERRSTAT_LTO		0x02
#define PCC2_SCCERRSTAT_SCLR		0x01

/* SCC Modem Interrupt Control Register */

#define PCC2_SCCMOIRQ_IRQ		0x20
#define PCC2_SCCMOIRQ_IEN		0x10
#define PCC2_SCCMOIRQ_AVEC		0x08
#define PCC2_SCCMOIRQ_IL		0x07		/* int level mask */

/* SCC Tx Interrupt Control Register */

#define PCC2_SCCTXIRQ_IRQ		0x20
#define PCC2_SCCTXIRQ_IEN		0x10
#define PCC2_SCCTXIRQ_AVEC		0x08
#define PCC2_SCCTXIRQ_IL		0x07

/* SCC Tx Interrupt Control Register */

#define PCC2_SCCRXIRQ_SNOOP		(1 << 6)
#define PCC2_SCCRXIRQ_IRQ		0x20
#define PCC2_SCCRXIRQ_IEN		0x10
#define PCC2_SCCRXIRQ_AVEC		0x08
#define PCC2_SCCRXIRQ_IL		0x07

/* SCSI Interrupt Control Register */

#define PCC2_SCSIIRQ_IEN		0x10

/* Interrupt Priority Level Register */

#define PCC2_IPL_IPL			0x07

/* Interrupt Mask Level Register */

#define PCC2_IMASK_MSK			0x07

#define PCC2_IRQ_IPL		0x07
#define PCC2_IRQ_ICLR		0x08
#define PCC2_IRQ_IEN		0x10
#define PCC2_IRQ_INT		0x20

#define PCC2_IEERR_SCLR		0x01
@


1.5
log
@Added kernel support for user debugging.  Fixed file ID's
@
text
@d1 1
a1 1
/*	$OpenBSD: pcctworeg.h,v 1.1 1998/12/15 06:02:55 smurph Exp $ */
@


1.5.6.1
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD: pcctworeg.h,v 1.5 1999/02/09 06:36:27 smurph Exp $ */
@


1.4
log
@Commit for the first real OpenBSD mvme88k kernel.
@
text
@d1 1
@


1.3
log
@Cleanup after import. This also seems to bring up the current version.
@
text
@a0 2
/*	$NetBSD$ */

d2 1
a2 16
 * Copyright (c) 1995 Theo de Raadt
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Theo de Raadt
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d4 2
a5 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d8 1
a8 5
/*
 * MVME1x7/16x PCC2 chip: sort of a confused mish-mash of the MC in the 162
 * and the PCC in the 147
 */
struct pcctworeg {
d11 45
a55 47
	volatile u_char		pcc2_genctl;
	volatile u_char		pcc2_vecbase;	/* irq vector base */
	volatile u_long		pcc2_t1cmp;	/* timer1 compare */
	volatile u_long		pcc2_t1count;	/* timer1 count */
	volatile u_long		pcc2_t2cmp;	/* timer2 compare */
	volatile u_long		pcc2_t2count;	/* timer2 count */
	volatile u_char		pcc2_pscalecnt;	/* timer prescaler counter */
	volatile u_char		pcc2_pscaleadj;	/* timer prescaler adjust */
	volatile u_char		pcc2_t2ctl;	/* timer2 ctrl reg */
	volatile u_char		pcc2_t1ctl;	/* timer1 ctrl reg */
	volatile u_char		pcc2_gpioirq;	/* gpio irq */
	volatile u_char		pcc2_gpio;	/* gpio i/o */
	volatile u_char		pcc2_t2irq;
	volatile u_char		pcc2_t1irq;
	volatile u_char		pcc2_sccerr;
	volatile u_char		pcc2_sccirq;
	volatile u_char		pcc2_scctx;
	volatile u_char		pcc2_sccrx;
	volatile u_char		:8;
	volatile u_char		:8;
	volatile u_char		:8;
	volatile u_char		pcc2_sccmoiack;
	volatile u_char		:8;
	volatile u_char		pcc2_scctxiack;
	volatile u_char		:8;
	volatile u_char		pcc2_sccrxiack;
	volatile u_char		pcc2_ieerr;
	volatile u_char		:8;
	volatile u_char		pcc2_iectl;
	volatile u_char		pcc2_ieirq;
	volatile u_char		pcc2_ncrerr;
	volatile u_char		:8;
	volatile u_char		:8;
	volatile u_char		pcc2_ncrirq;
	volatile u_char		pcc2_prtairq;
	volatile u_char		pcc2_prtfirq;
	volatile u_char		pcc2_prtsirq;
	volatile u_char		pcc2_prtpirq;
	volatile u_char		pcc2_prtbirq;
	volatile u_char		:8;
	volatile u_char		pcc2_prtstat;
	volatile u_char		pcc2_prtctl;
	volatile u_short	pcc2_speed;	/* DO NOT USE */
	volatile u_short	pcc2_prtdat;
	volatile u_short	:16;
	volatile u_char		pcc2_ipl;
	volatile u_char		pcc2_mask;
a56 3
#define PCC2_PCC2CHIP_ADDR	0xFFF42000
#define PCC2_PCC2CHIP_OFF	0x42000
#define PCC2_CHIPID		0x20
d59 1
a59 3
 * points to system's PCCTWO. This is not active until the pcctwo0
 * device has been attached. After that, it gives the virtual address
 * at which the PCCTWO can be accessed.
d61 38
a98 1
extern struct pcctworeg *sys_pcc2;
d101 1
a101 1
 * We lock off our interrupt vector at 0x50.
a102 2
#define PCC2_VECBASE		0x50
#define PCC2_NVEC		12
d104 66
a169 26
/*
 * Vectors we use
 */
#define PCC2V_NCR		0x05
#define PCC2V_IE_ERR		0x06
#define PCC2V_IE		0x07
#define PCC2V_TIMER2		0x08
#define PCC2V_TIMER1		0x09
#define PCC2V_GPIO		0x0A

#define PCC2_TCTL_CEN		0x01
#define PCC2_TCTL_COC		0x02
#define PCC2_TCTL_COVF		0x04
#define PCC2_TCTL_OVF		0xf0

#define PCC2_GPIO_PLTY		0x80
#define PCC2_GPIO_EL		0x40

#define PCC2_GPIOCR_OE		0x2
#define PCC2_GPIOCR_O		0x1

#define PCC2_SCC_AVEC		0x08
#define PCC2_SCCRX_INHIBIT	(0 << 6)
#define PCC2_SCCRX_SNOOP	(1 << 6)
#define PCC2_SCCRX_INVAL	(2 << 6)
#define PCC2_SCCRX_RESV		(3 << 6)
d171 1
a171 1
#define pcc2_timer_us2lim(us)	(us)		/* timer increments in "us" */
d178 1
a178 8
#define PCC2_GENCTL_FAST	0x01
#define PCC2_GENCTL_IEN		0x02
#define PCC2_GENCTL_C040	0x03

#define PCC2_SC_INHIBIT		(0 << 6)
#define PCC2_SC_SNOOP		(1 << 6)
#define PCC2_SC_INVAL		(2 << 6)
#define PCC2_SC_RESV		(3 << 6)
@


1.2
log
@This is a remove to get rid of the old mvme88k port which was incomplete
to replace it with a working version. The kernel compiles and works
at least.  The new version will be imported shortly.
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@initial 88k import; code by nivas and based on mach luna88k
@
text
@@
