head	1.16;
access;
symbols
	OPENBSD_3_8:1.15.0.6
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.4
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.2
	OPENBSD_3_6_BASE:1.15
	SMP_SYNC_A:1.15
	SMP_SYNC_B:1.15
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.10.0.8
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	UBC_SYNC_B:1.10
	UBC:1.9.0.2
	UBC_BASE:1.9
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.16
date	2005.10.13.19.48.36;	author miod;	state dead;
branches;
next	1.15;

1.15
date	2004.04.26.14.31.11;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.26.12.34.05;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.25.17.34.24;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2003.10.05.20.25.08;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.16.20.52.19;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.14.01.26.39;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.12.19.07.04.41;	author smurph;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2001.12.16.23.49.46;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.13.08.55.51;	author smurph;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.26.14.31.07;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.04.08.09.23;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.07.23.37.15;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.15.19.50.38;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.14.20.25.23;	author smurph;	state Exp;
branches;
next	1.1;

1.1
date	99.09.27.20.46.17;	author smurph;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.04.18.16.11.15;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2001.10.31.03.01.18;	author nate;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2002.03.06.02.04.44;	author niklas;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2002.03.28.10.36.02;	author niklas;	state Exp;
branches;
next	1.1.4.5;

1.1.4.5
date	2004.02.19.10.49.07;	author niklas;	state Exp;
branches;
next	1.1.4.6;

1.1.4.6
date	2004.06.05.23.09.50;	author niklas;	state Exp;
branches;
next	;

1.9.2.1
date	2002.06.11.03.37.10;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Merge <machine/cpu_number.h> into <machine/cpu.h>, preparing for intrusive
changes.
@
text
@/* $OpenBSD: cpu_number.h,v 1.15 2004/04/26 14:31:11 miod Exp $ */
/* public domain */
#include <m88k/cpu_number.h>
@


1.15
log
@Fix RCSID
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.14
log
@Start factorizing luna88k and mvme88k common parts.
For now, include files only.
@
text
@d1 3
a3 95
/*	$OpenBSD: cpu_number.h,v 1.12 2003/10/05 20:25:08 miod Exp $	*/

/*
 * Mach Operating System
 * Copyright (c) 1993-1992 Carnegie Mellon University
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie Mellon
 * the rights to redistribute these changes.
 */

#ifndef	_M88K_CPU_NUMBER_
#define _M88K_CPU_NUMBER_

#ifdef	_KERNEL
#ifndef _LOCORE
#include <machine/param.h>

static unsigned cpu_number(void);

static __inline__ unsigned cpu_number(void)
{
	unsigned cpu;

	/* XXX what about 197DP? */
	if (brdtyp != BRD_188)
		return 0;

	__asm__ ("ldcr %0, cr18" : "=r" (cpu));
	return (cpu & 3);
}
#endif /* _LOCORE */
#endif /* _KERNEL */
#endif /* _M88K_CPU_NUMBER_ */
 * Mach Operating System
 * Copyright (c) 1993-1992 Carnegie Mellon University
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie Mellon
 * the rights to redistribute these changes.
 */

#ifndef	_M88K_CPU_NUMBER_
#define _M88K_CPU_NUMBER_

#ifdef	_KERNEL
#ifndef _LOCORE

static unsigned cpu_number(void);

static __inline__ unsigned cpu_number(void)
{
	unsigned cpu;

	__asm__ __volatile__ ("ldcr %0, cr18" : "=r" (cpu));
	return (cpu & 3);
}

#endif /* _LOCORE */
#endif /* _KERNEL */
#endif /* _M88K_CPU_NUMBER_ */
@


1.13
log
@Simplify cpu_number() - adding a shortcut depending upon the board type
actually slows things down in every case.
@
text
@d34 48
@


1.12
log
@De-register
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu_number.h,v 1.11 2003/09/16 20:52:19 miod Exp $	*/
a33 1
#include <machine/param.h>
d41 1
a41 5
	/* XXX what about 197DP? */
	if (brdtyp != BRD_188)
		return 0;

	__asm__ ("ldcr %0, cr18" : "=r" (cpu));
d44 1
@


1.11
log
@Remove unused material from include files, as well as the annoying U() macro
which is only used to obfuscate things.

Doing this points out that the BUG memory is not at the same address on
187 and 197 (the 197 BUG is inside obio), so provide distinct constants,
and treat 187 and 197 slightly differently in pmap_bootstrap(). However, we
now need to map the 197 flash memory as well...

While there, simplify and constify pmap_table_build() and its associated data.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu_number.h,v 1.10 2002/03/14 01:26:39 millert Exp $	*/
d3 1
a3 1
/* 
d7 1
a7 1
 * 
d13 1
a13 1
 * 
d17 1
a17 1
 * 
d19 1
a19 1
 * 
d24 2
a25 2
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon 
d31 1
a31 1
 
d40 1
a40 1
	register unsigned cpu;
@


1.10
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu_number.h,v 1.9 2001/12/19 07:04:41 smurph Exp $	*/
a34 1
extern unsigned number_cpus;
d41 5
a45 1
	if (brdtyp != BRD_188 || number_cpus == 1) return 0;
@


1.9
log
@Introduce brdtyp and change what cputyp means.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu_number.h,v 1.8 2001/12/16 23:49:46 miod Exp $	*/
d37 1
a37 1
static unsigned cpu_number __P((void));
@


1.9.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu_number.h,v 1.9 2001/12/19 07:04:41 smurph Exp $	*/
d37 1
a37 1
static unsigned cpu_number(void);
@


1.8
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu_number.h,v 1.6 2001/08/26 14:31:07 miod Exp $	*/
d42 1
a42 2

	if (cputyp != CPU_188 || number_cpus == 1) return 0;
@


1.7
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@d42 2
a43 1
	if (brdtyp != BRD_188 || number_cpus == 1) return 0;
@


1.6
log
@Add prototypes, fix compilation warnings, random style fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu_number.h,v 1.5 2001/07/04 08:09:23 niklas Exp $	*/
d42 1
a42 2

	if (cputyp != CPU_188 || number_cpus == 1) return 0;
@


1.5
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 1
a42 1
	extern int cputyp;
@


1.4
log
@Inclusion from assembly code is detected with _LOCORE, no more fancy symbols.
@
text
@d1 2
@


1.3
log
@__asm__ and __volatile__
@
text
@d30 2
a31 2
#ifdef	KERNEL
#ifndef ASSEMBLER
d35 1
a35 1
static __inline__ unsigned cpu_number(void);
d45 2
a46 2
#endif /* ASSEMBLER */
#endif /* KERNEL */
@


1.2
log
@Complete move to UVM virtual memory system.  More header fixes.
@
text
@d42 1
a42 1
	asm("ldcr %0, cr18" : "=r" (cpu));
@


1.1
log
@Adding support for MVME188 and MVME197
@
text
@d31 1
a33 1
#define cpu_number() 0
d35 3
a37 3
#if 0 /* This seems to not work correctly. Hmm.... smurph */
unsigned cpu_number(void);
static inline unsigned cpu_number(void)
d39 2
a40 2
	unsigned cpu;
   extern int cputyp;
d42 1
a42 2
   asm("ldcr %0, cr18" : "=r" (cpu));
	asm("clr  %0, %0, 0<4>" : "=r" (cpu));
d45 1
a45 1
#endif /* 0 */
@


1.1.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d30 1
a30 2
#ifdef	_KERNEL
#ifndef _LOCORE
d33 1
d35 3
a37 3
static unsigned cpu_number __P((void));

static __inline__ unsigned cpu_number(void)
d39 2
a40 2
	register unsigned cpu;
	extern int cputyp;
d42 2
a43 1
	__asm__ ("ldcr %0, cr18" : "=r" (cpu));
d46 2
a47 2
#endif /* _LOCORE */
#endif /* _KERNEL */
@


1.1.4.2
log
@Sync the SMP branch to something just after 3.0
@
text
@a0 2
/*	$OpenBSD$	*/

d40 1
a40 1

@


1.1.4.3
log
@Merge in trunk
@
text
@d42 2
a43 1
	if (brdtyp != BRD_188 || number_cpus == 1) return 0;
@


1.1.4.4
log
@Merge in -current from about a week ago
@
text
@d37 1
a37 1
static unsigned cpu_number(void);
@


1.1.4.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d3 1
a3 1
/*
d7 1
a7 1
 *
d13 1
a13 1
 *
d17 1
a17 1
 *
d19 1
a19 1
 *
d24 2
a25 2
 *
 * any improvements or extensions that they make and grant Carnegie Mellon
d31 1
a31 1

d35 1
d41 2
a42 6
	unsigned cpu;

	/* XXX what about 197DP? */
	if (brdtyp != BRD_188)
		return 0;

@


1.1.4.6
log
@Merge with the trunk
@
text
@d1 51
a51 3
/* $OpenBSD$ */
/* public domain */
#include <m88k/cpu_number.h>
@


