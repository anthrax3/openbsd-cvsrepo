head	1.16;
access;
symbols
	OPENBSD_5_5:1.15.0.42
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.38
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.36
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.34
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.32
	OPENBSD_5_0:1.15.0.30
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.28
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.26
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.22
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.24
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.20
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.18
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.16
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.14
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.12
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.10
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.8
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.6
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.4
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.2
	OPENBSD_3_6_BASE:1.15
	SMP_SYNC_A:1.15
	SMP_SYNC_B:1.15
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.10
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.8
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.6
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.12
	UBC:1.12.0.4
	UBC_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.9.0.8
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.6
	OPENBSD_2_7_BASE:1.9
	SMP:1.9.0.4
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.8.0.6
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.4
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	mvme88kport:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	first_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.15;

1.15
date	2004.04.26.14.31.11;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.26.12.34.05;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.03.21.09.01;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2001.08.12.12.03.02;	author heko;	state Exp;
branches;
next	1.11;

1.11
date	2001.03.02.20.45.21;	author jason;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.14.20.25.23;	author smurph;	state Exp;
branches;
next	1.9;

1.9
date	99.05.10.16.02.13;	author espie;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	97.11.09.23.05.11;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	97.06.25.12.52.10;	author grr;	state Exp;
branches;
next	1.6;

1.6
date	97.06.25.12.32.51;	author downsj;	state Exp;
branches;
next	1.5;

1.5
date	97.04.04.03.05.32;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.03.03.20.20.58;	author rahnds;	state Exp;
branches;
next	1.3;

1.3
date	97.03.03.19.07.28;	author rahnds;	state dead;
branches;
next	1.2;

1.2
date	96.11.25.13.11.28;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.10.54.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.10.54.21;	author deraadt;	state Exp;
branches;
next	;

1.9.4.1
date	2001.04.18.16.11.16;	author niklas;	state Exp;
branches;
next	1.9.4.2;

1.9.4.2
date	2001.10.31.03.01.18;	author nate;	state Exp;
branches;
next	1.9.4.3;

1.9.4.3
date	2003.06.07.11.13.17;	author ho;	state Exp;
branches;
next	1.9.4.4;

1.9.4.4
date	2004.06.05.23.09.50;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/* $OpenBSD: endian.h,v 1.15 2004/04/26 14:31:11 miod Exp $ */
/* public domain */
#include <m88k/endian.h>
@


1.15
log
@Fix RCSID
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.14
log
@Start factorizing luna88k and mvme88k common parts.
For now, include files only.
@
text
@d1 1
a1 1
/* $OpenBSD */
@


1.13
log
@terms 3 & 4 cleanup based on "terms" file
@
text
@d1 3
a3 36
/*	$OpenBSD: endian.h,v 1.12 2001/08/12 12:03:02 heko Exp $ */

/*-
 * Copyright (c) 1997 Niklas Hallqvist.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef __MVME88K_ENDIAN_H__
#define __MVME88K_ENDIAN_H__

#define BYTE_ORDER BIG_ENDIAN
#include <sys/endian.h>

#define	__STRICT_ALIGNMENT

#endif /* __MVME88K_ENDIAN_H__ */

@


1.12
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.11 2001/03/02 20:45:21 jason Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Niklas Hallqvist.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.11
log
@add #define __STRICT_ALIGNMENT
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.10 2001/01/14 20:25:23 smurph Exp $ */
d40 1
a40 1
#endif __MVME88K_ENDIAN_H__
@


1.10
log
@Complete move to UVM virtual memory system.  More header fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.9 1999/05/10 16:02:13 espie Exp $ */
d37 2
@


1.9
log
@Use symbolic define for BYTE_ORDER.

(don't forget that cpp is `lazy':
#define A B
#define B value
#if A == value

works, since A isn't extended before it's needed, by which time B is known)
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.8 1997/11/09 23:05:11 niklas Exp $ */
d32 2
a33 2
#ifndef _MVME88K_ENDIAN_H_
#define _MVME88K_ENDIAN_H_
d38 2
a39 1
#endif /* _MVME88K_ENDIAN_H_ */
@


1.9.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.11 2001/03/02 20:45:21 jason Exp $ */
d32 2
a33 2
#ifndef __MVME88K_ENDIAN_H__
#define __MVME88K_ENDIAN_H__
d38 1
a38 4
#define	__STRICT_ALIGNMENT

#endif __MVME88K_ENDIAN_H__

@


1.9.4.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.9.4.1 2001/04/18 16:11:16 niklas Exp $ */
d40 1
a40 1
#endif /* __MVME88K_ENDIAN_H__ */
@


1.9.4.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.9.4.2 2001/10/31 03:01:18 nate Exp $ */
d14 5
@


1.9.4.4
log
@Merge with the trunk
@
text
@d1 36
a36 3
/* $OpenBSD$ */
/* public domain */
#include <m88k/endian.h>
@


1.8
log
@New endian.h design.  All architectures now use a common file for the bulk
part.  Some ports can optimize the swap operations.  This also means the
general API is extended with swap16, swap32, htobe16, htobe32, betoh16,
betoh32, htole16, htole32, letoh16 and letoh32.
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.7 1997/08/08 08:26:15 downsj Exp $ */
d35 1
a35 1
#define BYTE_ORDER 4321
@


1.7
log
@Include usage notes in the rest of the endian.h files for consistancy.
@
text
@d1 4
a4 3
/*
 * Copyright (c) 1987, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
d16 3
a18 57
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)endian.h	8.1 (Berkeley) 6/11/93
 *      $Id: endian.h,v 1.6 1997/06/25 12:32:51 downsj Exp $
 */

#ifndef _ENDIAN_H_
#define	_ENDIAN_H_

/*
 * Define the order of 32-bit words in 64-bit words.
 */
#define _QUAD_HIGHWORD 0
#define _QUAD_LOWWORD 1

#ifndef _POSIX_SOURCE
/*
 * Definitions for byte order, according to byte significance from low
 * address to high.
 */

#define	LITTLE_ENDIAN	1234	/* LSB first: i386, vax */
#define	BIG_ENDIAN	4321	/* MSB first: 68000, 88000 ibm, net */
#define	PDP_ENDIAN	3412	/* LSB first in word, MSW first in long */

#define	BYTE_ORDER	BIG_ENDIAN

#include <sys/cdefs.h>

typedef u_int32_t in_addr_t;
typedef u_int16_t in_port_t;

__BEGIN_DECLS
u_int32_t	htonl __P((u_int32_t));
u_int16_t	htons __P((u_int16_t));
u_int32_t	ntohl __P((u_int32_t));
u_int16_t	ntohs __P((u_int16_t));
__END_DECLS

/*
 * Macros for network/external number representation conversion.
d20 10
a29 6
 * The way this works is that HTONS(x) modifies x and *can't* be used as
 * and rvalue i.e.  foo=HTONS(bar) is wrong.  Likewise x=htons(x) should
 * never be used where HTONS(x) will serve i.e. foo=htons(foo) is wrong.
 * Failing to observe these rule will result in code that appears to work
 * and probably does work, but generates gcc warnings on architectures
 * where the macros are used to optimize away an unneeded conversion.
a30 10
#if BYTE_ORDER == BIG_ENDIAN && !defined(lint)
#define	ntohl(x)	(x)
#define	ntohs(x)	(x)
#define	htonl(x)	(x)
#define	htons(x)	(x)

#define	NTOHL(x)	(void)(x)
#define	NTOHS(x)	(void)(x)
#define	HTONL(x)	(void)(x)
#define	HTONS(x)	(void)(x)
d32 2
a33 1
#else
d35 2
a36 4
#define	NTOHL(x)	(x) = ntohl((u_long)x)
#define	NTOHS(x)	(x) = ntohs((u_short)x)
#define	HTONL(x)	(x) = htonl((u_long)x)
#define	HTONS(x)	(x) = htons((u_short)x)
d38 1
a38 3
#endif
#endif /* ! _POSIX_SOURCE */
#endif /* !_ENDIAN_H_ */
@


1.6
log
@Big endian HTON?() macros should be (void)(x).
@
text
@d34 1
a34 1
 *      $Id: endian.h,v 1.5 1997/04/04 03:05:32 millert Exp $
d72 7
@


1.5
log
@Define in_addr_t and in_port_t everywhere but use u_intXX_t for
htonl and friends.
@
text
@d34 1
a34 1
 *      $Id: endian.h,v 1.4 1997/03/03 20:20:58 rahnds Exp $
d79 4
a82 4
#define	NTOHL(x)	(x)
#define	NTOHS(x)	(x)
#define	HTONL(x)	(x)
#define	HTONS(x)	(x)
d86 5
a90 4
#define	NTOHL(x)	(x) = ntohl((u_int32_t)x)
#define	NTOHS(x)	(x) = ntohs((u_int16_t)x)
#define	HTONL(x)	(x) = htonl((u_int32_t)x)
#define	HTONS(x)	(x) = htons((u_int16_t)x)
@


1.4
log
@Cleanup after import. This also seems to bring up the current version.
@
text
@d34 1
a34 1
 *      $Id: endian.h,v 1.1.1.1 1995/10/18 10:54:21 deraadt Exp $
d60 3
d64 4
a67 4
unsigned long	htonl __P((unsigned long));
unsigned short	htons __P((unsigned short));
unsigned long	ntohl __P((unsigned long));
unsigned short	ntohs __P((unsigned short));
d86 4
a89 4
#define	NTOHL(x)	(x) = ntohl((u_long)x)
#define	NTOHS(x)	(x) = ntohs((u_short)x)
#define	HTONL(x)	(x) = htonl((u_long)x)
#define	HTONS(x)	(x) = htons((u_short)x)
@


1.3
log
@This is a remove to get rid of the old mvme88k port which was incomplete
to replace it with a working version. The kernel compiles and works
at least.  The new version will be imported shortly.
@
text
@a0 2
/*	$OpenBSD: endian.h,v 1.2 1996/11/25 13:11:28 niklas Exp $	*/

d34 1
d54 1
a54 1
#define	PDP_ENDIAN	3412	/* LSB first in word, MSW first in int32_t */
d61 4
a64 4
u_int32_t	htonl __P((u_int32_t));
u_int16_t	htons __P((u_int16_t));
u_int32_t	ntohl __P((u_int32_t));
u_int16_t	ntohs __P((u_int16_t));
d83 4
a86 4
#define	NTOHL(x)	(x) = ntohl((u_int32_t)x)
#define	NTOHS(x)	(x) = ntohs((u_int16_t)x)
#define	HTONL(x)	(x) = htonl((u_int32_t)x)
#define	HTONS(x)	(x) = htons((u_int16_t)x)
@


1.2
log
@htons et al. works on explicit 16- and 32-bit quantities and not the
machine dependent "short" and "long" integer.  Correct and enhance manpage.
Change all short and longs to u_int16_t and u_int32_t, respectively.
OpenBSD RCSIds
@
text
@d1 1
a1 1
/*	$OpenBSD: endian.h,v 1.2 1996/04/21 22:17:40 deraadt Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 2
a35 1
 *      $Id: endian.h,v 1.3 1994/05/27 09:00:49 glass Exp $
d55 1
a55 1
#define	PDP_ENDIAN	3412	/* LSB first in word, MSW first in long */
d62 4
a65 4
unsigned long	htonl __P((unsigned long));
unsigned short	htons __P((unsigned short));
unsigned long	ntohl __P((unsigned long));
unsigned short	ntohs __P((unsigned short));
d84 4
a87 4
#define	NTOHL(x)	(x) = ntohl((u_long)x)
#define	NTOHS(x)	(x) = ntohs((u_short)x)
#define	HTONL(x)	(x) = htonl((u_long)x)
#define	HTONS(x)	(x) = htons((u_short)x)
@


1.1.1.1
log
@initial 88k import; code by nivas and based on mach luna88k
@
text
@@
