head	1.44;
access;
symbols
	OPENBSD_5_5:1.43.0.4
	OPENBSD_5_5_BASE:1.43
	OPENBSD_5_4:1.42.0.2
	OPENBSD_5_4_BASE:1.42
	OPENBSD_5_3:1.40.0.18
	OPENBSD_5_3_BASE:1.40
	OPENBSD_5_2:1.40.0.16
	OPENBSD_5_2_BASE:1.40
	OPENBSD_5_1_BASE:1.40
	OPENBSD_5_1:1.40.0.14
	OPENBSD_5_0:1.40.0.12
	OPENBSD_5_0_BASE:1.40
	OPENBSD_4_9:1.40.0.10
	OPENBSD_4_9_BASE:1.40
	OPENBSD_4_8:1.40.0.8
	OPENBSD_4_8_BASE:1.40
	OPENBSD_4_7:1.40.0.4
	OPENBSD_4_7_BASE:1.40
	OPENBSD_4_6:1.40.0.6
	OPENBSD_4_6_BASE:1.40
	OPENBSD_4_5:1.40.0.2
	OPENBSD_4_5_BASE:1.40
	OPENBSD_4_4:1.39.0.4
	OPENBSD_4_4_BASE:1.39
	OPENBSD_4_3:1.39.0.2
	OPENBSD_4_3_BASE:1.39
	OPENBSD_4_2:1.38.0.6
	OPENBSD_4_2_BASE:1.38
	OPENBSD_4_1:1.38.0.4
	OPENBSD_4_1_BASE:1.38
	OPENBSD_4_0:1.38.0.2
	OPENBSD_4_0_BASE:1.38
	OPENBSD_3_9:1.37.0.2
	OPENBSD_3_9_BASE:1.37
	OPENBSD_3_8:1.36.0.6
	OPENBSD_3_8_BASE:1.36
	OPENBSD_3_7:1.36.0.4
	OPENBSD_3_7_BASE:1.36
	OPENBSD_3_6:1.36.0.2
	OPENBSD_3_6_BASE:1.36
	SMP_SYNC_A:1.36
	SMP_SYNC_B:1.36
	OPENBSD_3_5:1.34.0.2
	OPENBSD_3_5_BASE:1.34
	OPENBSD_3_4:1.30.0.2
	OPENBSD_3_4_BASE:1.30
	UBC_SYNC_A:1.27
	OPENBSD_3_3:1.27.0.6
	OPENBSD_3_3_BASE:1.27
	OPENBSD_3_2:1.27.0.4
	OPENBSD_3_2_BASE:1.27
	OPENBSD_3_1:1.27.0.2
	OPENBSD_3_1_BASE:1.27
	UBC_SYNC_B:1.27
	UBC:1.26.0.2
	UBC_BASE:1.26
	OPENBSD_3_0:1.21.0.2
	OPENBSD_3_0_BASE:1.21
	OPENBSD_2_9:1.15.0.2
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_8:1.11.0.4
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	SMP:1.10.0.4
	SMP_BASE:1.10
	kame_19991208:1.10
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	mvme88kport:1.1.1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	first_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.44
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.43;

1.43
date	2013.11.02.23.06.18;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2013.05.17.22.51.59;	author miod;	state Exp;
branches;
next	1.41;

1.41
date	2013.03.23.16.12.25;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2008.09.19.20.18.01;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2008.01.13.20.18.54;	author miod;	state Exp;
branches;
next	1.38;

1.38
date	2006.07.07.19.36.52;	author miod;	state Exp;
branches;
next	1.37;

1.37
date	2005.11.27.23.48.44;	author miod;	state Exp;
branches;
next	1.36;

1.36
date	2004.04.26.12.34.05;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2004.04.19.22.55.49;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2004.01.19.17.18.13;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2004.01.13.23.24.59;	author miod;	state Exp;
branches;
next	1.32;

1.32
date	2004.01.13.21.27.03;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2003.10.08.19.10.05;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2003.08.10.07.26.33;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2003.08.01.07.47.00;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2003.06.02.23.27.52;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2002.03.14.01.26.39;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2001.12.19.07.04.41;	author smurph;	state Exp;
branches
	1.26.2.1;
next	1.25;

1.25
date	2001.12.16.23.49.46;	author miod;	state Exp;
branches;
next	1.24;

1.24
date	2001.12.13.08.55.51;	author smurph;	state Exp;
branches;
next	1.23;

1.23
date	2001.12.05.01.57.15;	author provos;	state Exp;
branches;
next	1.22;

1.22
date	2001.11.30.17.45.07;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2001.09.28.20.46.09;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2001.08.23.08.47.32;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2001.07.06.02.07.42;	author provos;	state Exp;
branches;
next	1.18;

1.18
date	2001.05.13.02.37.29;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2001.05.10.22.46.43;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2001.05.05.20.56.46;	author art;	state Exp;
branches;
next	1.15;

1.15
date	2001.03.09.05.44.40;	author smurph;	state Exp;
branches;
next	1.14;

1.14
date	2001.03.07.23.50.35;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2001.02.01.03.38.18;	author smurph;	state Exp;
branches;
next	1.12;

1.12
date	2001.01.14.20.25.24;	author smurph;	state Exp;
branches;
next	1.11;

1.11
date	2000.02.22.19.27.55;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	99.09.27.20.46.18;	author smurph;	state Exp;
branches
	1.10.4.1;
next	1.9;

1.9
date	99.05.29.04.41.45;	author smurph;	state Exp;
branches;
next	1.8;

1.8
date	99.02.09.06.36.27;	author smurph;	state Exp;
branches;
next	1.7;

1.7
date	98.12.15.04.45.50;	author smurph;	state Exp;
branches;
next	1.6;

1.6
date	98.08.18.21.18.47;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.03.03.20.21.06;	author rahnds;	state Exp;
branches;
next	1.4;

1.4
date	97.03.03.19.07.37;	author rahnds;	state dead;
branches;
next	1.3;

1.3
date	97.02.28.22.57.38;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.12.11.11.12.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.10.54.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.10.54.21;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.03.03.19.31.22;	author rahnds;	state Exp;
branches;
next	;

1.10.4.1
date	2000.03.02.07.04.31;	author niklas;	state Exp;
branches;
next	1.10.4.2;

1.10.4.2
date	2001.04.18.16.11.23;	author niklas;	state Exp;
branches;
next	1.10.4.3;

1.10.4.3
date	2001.07.04.10.20.04;	author niklas;	state Exp;
branches;
next	1.10.4.4;

1.10.4.4
date	2001.10.31.03.01.19;	author nate;	state Exp;
branches;
next	1.10.4.5;

1.10.4.5
date	2001.12.05.00.39.12;	author niklas;	state Exp;
branches;
next	1.10.4.6;

1.10.4.6
date	2002.03.06.02.04.44;	author niklas;	state Exp;
branches;
next	1.10.4.7;

1.10.4.7
date	2002.03.28.10.36.02;	author niklas;	state Exp;
branches;
next	1.10.4.8;

1.10.4.8
date	2003.06.07.11.13.17;	author ho;	state Exp;
branches;
next	1.10.4.9;

1.10.4.9
date	2004.02.19.10.49.07;	author niklas;	state Exp;
branches;
next	1.10.4.10;

1.10.4.10
date	2004.06.05.23.09.50;	author niklas;	state Exp;
branches;
next	;

1.26.2.1
date	2002.06.11.03.37.10;	author art;	state Exp;
branches;
next	;


desc
@@


1.44
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: param.h,v 1.43 2013/11/02 23:06:18 miod Exp $ */

/*
 * Copyright (c) 1999 Steve Murphree, Jr.
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1982, 1986, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef	_MACHINE_PARAM_H_
#define	_MACHINE_PARAM_H_

#define	_MACHINE       mvme88k
#define	MACHINE        "mvme88k"

#include <m88k/param.h>

/*
 * The Bug uses the bottom 64KB. The kernel will allocate PTEs to map this
 * space, but the kernel must be linked with a start address past these 64KB.
 */
#define	KERNBASE	0x00000000	/* start of kernel virtual */
#define	KERNTEXTOFF	0x00080000	/* start of kernel text */

#if defined(_KERNEL) || defined(_STANDALONE)
#if !defined(_LOCORE)
extern int brdtyp;
#endif

/*
 * Values for the brdtyp variable.
 */
#define BRD_180		0x180
#define BRD_181		0x181
#define BRD_187		0x187
#define BRD_188		0x188
#define BRD_197		0x197
#define BRD_8120	0x8120

#endif	/* _KERNEL || _STANDALONE */

#endif /* _MACHINE_PARAM_H_ */
@


1.43
log
@Link m88k kernels on a BATC boundary.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.42 2013/05/17 22:51:59 miod Exp $ */
@


1.42
log
@Preliminary support for MVME180 and MVME181 boards. On-board serial ports
and VME controller are supported; tod chip isn't supported yet (coming soon).
MVME236 memory boards are not supported and won't likely be (unless I get my
hands on one).

MVME181-1 boots multiuser (slowly) with MVME328 SCSI and MVME376 Ethernet
despite only having 8MB of memory onboard.

MVME180 untested; might need tweaking to get MVME SCSI and Ethernet boards
supported.

Many thanks to Matti Nummi for lending me an MVME181 board.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.41 2013/03/23 16:12:25 deraadt Exp $ */
d51 1
a51 1
#define	KERNTEXTOFF	0x00010000	/* start of kernel text */
@


1.41
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.40 2008/09/19 20:18:01 miod Exp $ */
d61 2
@


1.40
log
@Perform the mvme197 latency timer reprogramming in the boot blocks, in
addition to the kernel, and unconditionnaly handle all busswitch revision 1
based boards as horribly broken, even with 50MHz clocks.

Based on an report of an early 50MHz 197LE board being unable to boot,
due to memory corruption.
@
text
@d1 2
a2 1
/*	$OpenBSD: param.h,v 1.39 2008/01/13 20:18:54 miod Exp $ */
a35 4
 *
 * from: Utah $Hdr: machparam.h 1.11 89/08/14$
 *
 *	@@(#)param.h	7.8 (Berkeley) 6/28/91
d38 2
a39 2
#ifndef _MACHINE_PARAM_H_
#define _MACHINE_PARAM_H_
d41 2
a42 2
#define  _MACHINE       mvme88k
#define  MACHINE        "mvme88k"
d50 1
a50 1
#define KERNBASE	0x00000000	/* start of kernel virtual */
d67 2
a68 1
#endif /* !_MACHINE_PARAM_H_ */
@


1.39
log
@Remove unused cpumod variable.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.38 2006/07/07 19:36:52 miod Exp $ */
d56 1
a56 1
#ifdef   _KERNEL
d69 1
a69 1
#endif	/* _KERNEL */
@


1.38
log
@Get rid of the fixed iomap for device mappings, and allocated va ranges
off kernel_map whenever necessary.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.37 2005/11/27 23:48:44 miod Exp $ */
a58 1
extern int cpumod;
a67 7

/*
 * Values for the cpumod variable.
 */
#define MOD_LE		0x01
#define MOD_SP		0x02
#define MOD_DP		0x03
@


1.37
log
@Hide a few things from _LOCORE.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.36 2004/04/26 12:34:05 miod Exp $ */
a54 6

/*
 * IO space
 */

#define	IOMAP_SIZE	0x01000000	/* roughly 0xff000000 - 0xffffffff */
@


1.36
log
@Start factorizing luna88k and mvme88k common parts.
For now, include files only.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.35 2004/04/19 22:55:49 deraadt Exp $ */
d63 1
d83 1
@


1.35
log
@remove the GATEWAY junk thingy; at the same time, select a new fat
cluster value that noone will really need to crank.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.34 2004/01/19 17:18:13 miod Exp $ */
d40 1
a43 6
#ifdef _KERNEL
#ifndef _LOCORE
#include <machine/cpu.h>
#endif	/* _LOCORE */
#endif

a45 11
#define  _MACHINE_ARCH  m88k
#define  MACHINE_ARCH   "m88k"
#define  MID_MACHINE    MID_M88K

/*
 * Round p (pointer or byte index) down to a correctly-aligned value
 * for all data types (int, long, ...).   The result is u_int and
 * must be cast to any desired pointer type. ALIGN() is used for
 * aligning stack, which needs to be on a double word boundary for
 * 88k.
 */
d47 1
a47 13
#define  ALIGNBYTES		15		/* 64 bit alignment */
#define  ALIGN(p)		(((u_int)(p) + ALIGNBYTES) & ~ALIGNBYTES)
#define  ALIGNED_POINTER(p,t)	((((u_long)(p)) & (sizeof(t)-1)) == 0)

#define NBPG		(1 << PGSHIFT)	/* bytes/page */
#define PGOFSET		(NBPG-1)	/* byte offset into page */
#define PGSHIFT		12		/* LOG2(NBPG) */

#define	PAGE_SHIFT	12
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

#define NPTEPG		(PAGE_SIZE / (sizeof(pt_entry_t)))
a55 13
#define DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define DEV_BSIZE	(1 << DEV_BSHIFT)
#define BLKDEV_IOSIZE	2048
#define MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */

#define SSIZE		1		/* initial stack size/NBPG */
#define SINCR		1		/* increment of stack/NBPG */

#define UPAGES		3		/* pages of u-area */
#define USPACE		(UPAGES * NBPG)

#define UADDR		0xeee00000	/* address of u */

a61 47
/*
 * Constants related to network buffer management.
 * MCLBYTES must be no larger than the software page size, and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
 */
#define MSIZE		256		/* size of an mbuf */
#define MCLSHIFT	11		/* convert bytes to m_buf clusters */
#define MCLBYTES	(1 << MCLSHIFT)	/* size of a m_buf cluster */
#define MCLOFSET	(MCLBYTES - 1)	/* offset within a m_buf cluster */
#define NMBCLUSTERS	512		/* map size, max cluster allocation */

/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((4 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((4 * 1024 * 1024) >> PAGE_SHIFT)

#define MSGBUFSIZE	PAGE_SIZE

/* pages ("clicks") to disk blocks */
#define ctod(x)			((x) << (PGSHIFT - DEV_BSHIFT))
#define dtoc(x)			((x) >> (PGSHIFT - DEV_BSHIFT))

/* pages to bytes */
#define ctob(x)			((x) << PGSHIFT)
#define btoc(x)			(((x) + PGOFSET) >> PGSHIFT)

/* bytes to disk blocks */
#define btodb(x)		((x) >> DEV_BSHIFT)
#define dbtob(x)		((x) << DEV_BSHIFT)

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define bdbtofsb(bn)		((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))

/*
 * Get interrupt glue.
 */
#include <machine/intr.h>

a62 4
extern void delay(int);
#define  DELAY(x)             delay(x)

extern int cputyp;
a75 6
 * Values for the cputyp variable.
 */
#define CPU_88100	0x100
#define CPU_88110	0x110

/*
a82 2


@


1.34
log
@``3 pages of u-area ought to be enough for everybody''
(deraadt wanted 2, I wanted 4, actually...)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.33 2004/01/13 23:24:59 miod Exp $ */
a113 5

#ifndef NMBCLUSTERS
#ifdef   GATEWAY
#define NMBCLUSTERS	1024		/* map size, max cluster allocation */
#else
a114 2
#endif
#endif
@


1.33
log
@Get rid of more unused useless broken invalid constant laughable values.

Also shrink iomap to a more reasonable value for now.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.32 2004/01/13 21:27:03 miod Exp $ */
d92 1
a92 1
#define UPAGES		8		/* pages of u-area */
@


1.32
log
@Get rid of old MID binary compatibility. This has been a lifesaver back when
the toolchain was in limbo, but now that we have a solid enough in-tree
toolchain, this makes no sense. Plus the libc back then was full of bugs...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.31 2003/10/08 19:10:05 miod Exp $ */
d78 2
a79 3
 * 187 Bug uses the bottom 64k. We allocate ptes to map this into the
 * kernel. But when we link the kernel, we tell it to start linking
 * past this 64k.
d95 7
a101 9
#define UADDR		0xEEE00000	/* address of u */
#define UVPN		(UADDR>>PGSHIFT)	/* virtual page number of u */
#define KERNELSTACK	(UADDR+UPAGES*NBPG)	/* top of kernel stack */

#define PHYSIO_MAP_START	0xEEF00000
#define PHYSIO_MAP_SIZE		0x00100000
#define IOMAP_MAP_START		0xEF000000	/* VME etc */
#define IOMAP_SIZE		0x018F0000
#define NIOPMAP			32
@


1.31
log
@delay() is actually a void function.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.30 2003/08/10 07:26:33 miod Exp $ */
a53 2
/* Older value for MID_MACHINE */
#define	OLD_MID_MACHINE	151
@


1.30
log
@No need to bring <machine/psl.h> from <machine/param.h>, this adds unnecessary
pollution. Makes warnings in binutils compilation disappear...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.29 2003/08/01 07:47:00 miod Exp $ */
d163 1
a163 1
extern int delay(int);
@


1.29
log
@Do not use hardcoded values for constants which are in fact computed from other
constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.28 2003/06/02 23:27:52 millert Exp $ */
a159 1
#include <machine/psl.h>
@


1.28
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.27 2002/03/14 01:26:39 millert Exp $ */
d69 1
a69 1
#define NBPG		4096		/* bytes/page */
d77 1
a77 1
#define NPTEPG		(PAGE_SIZE / (sizeof(u_int)))
d82 1
a82 1
 * past this 64k. How does this change KERNBASE? XXX
d84 2
a86 4
#define KERNBASE	0x0		/* start of kernel virtual */
#define BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)

#define DEV_BSIZE	512
d88 2
a89 1
#define BLKDEV_IOSIZE	2048		/* Should this be changed? XXX */
a93 1
#define USPACE		ctob(UPAGES)
d96 2
a139 1
#define dtob(x)			((x) << DEV_BSHIFT)
d143 1
d145 3
a147 7
/* bytes to pages */
#define btoc(x)			(((unsigned)(x) + PAGE_MASK) >> PGSHIFT)

#define btodb(bytes)         /* calculates (bytes / DEV_BSIZE) */ \
	((unsigned)(bytes) >> DEV_BSHIFT)
#define dbtob(db)            /* calculates (db * DEV_BSIZE) */ \
	((unsigned)(db) << DEV_BSHIFT)
@


1.27
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.26 2001/12/19 07:04:41 smurph Exp $ */
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.26
log
@Introduce brdtyp and change what cputyp means.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.25 2001/12/16 23:49:46 miod Exp $ */
d172 1
a172 1
extern int delay __P((int));
@


1.26.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.26 2001/12/19 07:04:41 smurph Exp $ */
d172 1
a172 1
extern int delay(int);
@


1.25
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.23 2001/12/05 01:57:15 provos Exp $ */
d176 1
d181 8
d191 9
a199 4
#define CPU_187		0x187
#define CPU_188		0x188
#define CPU_197		0x197
#define CPU_8120	0x8120
@


1.24
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@a175 1
extern int brdtyp;
a179 8
 * Values for the brdtyp variable.
 */
#define BRD_187		0x187
#define BRD_188		0x188
#define BRD_197		0x197
#define BRD_8120	0x8120

/*
d182 4
a185 9
#define CPU_88100	0x100
#define CPU_88110	0x110

/*
 * Values for the cpumod variable.
 */
#define MOD_LE		0x01
#define MOD_SP		0x02
#define MOD_DP		0x03
@


1.23
log
@make nkmempages dynamic based on memory. okay art@@ from netbsd:
date: 2000/02/11 19:22:52;  author: thorpej;
Add some very simple code to auto-size the kmem_map.  We take the
amount of physical memory, divide it by 4, and then allow machine
dependent code to place upper and lower bounds on the size.  Export
the computed value to userspace via the new "vm.nkmempages" sysctl.

NKMEMCLUSTERS is now deprecated and will generate an error if you
attempt to use it.  The new option, should you choose to use it,
is called NKMEMPAGES, and two new options NKMEMPAGES_MIN and
NKMEMPAGES_MAX allow the user to configure the bounds in the kernel
config file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.22 2001/11/30 17:45:07 miod Exp $ */
d176 1
d181 8
d191 9
a199 4
#define CPU_187		0x187
#define CPU_188		0x188
#define CPU_197		0x197
#define CPU_8120	0x8120
@


1.22
log
@Remove some definitions which do not make sense for non-m68k platforms.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 2001/09/28 20:46:09 miod Exp $ */
d133 5
a137 5
 * Size of kernel malloc arena in logical pages
 */ 
#ifndef NKMEMCLUSTERS
#define NKMEMCLUSTERS	(4096*1024/PAGE_SIZE)
#endif
@


1.21
log
@More cleaning, some style changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2001/08/23 08:47:32 miod Exp $ */
a42 1
 *	$Id: param.h,v 1.20 2001/08/23 08:47:32 miod Exp $
a81 4

#define SEGSHIFT	22		/* LOG2(NBSEG) */
#define NBSEG		(1 << SEGSHIFT)	/* bytes/segment */
#define SEGOFSET	(NBSEG - 1)	/* byte offset into segment */
@


1.20
log
@Provide temporary compatibility with old machine ID binaries for some time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2001/07/06 02:07:42 provos Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.19 2001/07/06 02:07:42 provos Exp $
a50 1
#include <machine/psl.h>
d82 1
a82 1
#define NPTEPG		(NBPG/(sizeof(u_int)))
d84 3
a86 3
#define NBSEG		(1<<22)		/* bytes/segment */
#define SEGOFSET	(NBSEG-1)	/* byte offset into segment */
#define SEGSHIFT	22	/* LOG2(NBSEG) */
d144 1
a144 1
#define MSGBUFSIZE	4096
d147 3
a149 3
#define ctod(x)			((x)<<(PGSHIFT-DEV_BSHIFT))
#define dtoc(x)			((x)>>(PGSHIFT-DEV_BSHIFT))
#define dtob(x)			((x)<<DEV_BSHIFT)
d152 1
a152 1
#define ctob(x)			((x)<<PGSHIFT)
d155 1
a155 1
#define btoc(x)			(((unsigned)(x)+(NBPG-1))>>PGSHIFT)
d171 1
a171 1
 * Mach derived conversion macros
a172 3
#define mvme88k_btop(x)		((unsigned)(x) >> PGSHIFT)
#define mvme88k_ptob(x)		((unsigned)(x) << PGSHIFT)

a173 4

/*
 * Get interrupt glue.
 */
a178 1
#endif
a179 1
#ifdef _KERNEL
d183 1
d191 1
@


1.19
log
@change MSIZE to 256, okay @@deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18 2001/05/13 02:37:29 millert Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.18 2001/05/13 02:37:29 millert Exp $
d60 2
@


1.18
log
@PAGE_MASK is (PAGE_SIZE - 1), *not* (PAGE_SHIFT - 1)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 2001/05/10 22:46:43 miod Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.17 2001/05/10 22:46:43 miod Exp $
d123 1
a123 1
#define MSIZE		128		/* size of an mbuf */
@


1.17
log
@Provide PAGE_{MASK,SHIFT,SIZE} constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2001/05/05 20:56:46 art Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.16 2001/05/05 20:56:46 art Exp $
d79 1
a79 1
#define	PAGE_MASK	(PAGE_SHIFT - 1)
@


1.16
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 2001/03/09 05:44:40 smurph Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.15 2001/03/09 05:44:40 smurph Exp $
a72 1
#ifndef NBPG
a73 1
#endif /* NBPG */
d76 5
@


1.15
log
@kernel will compile with -Werror.  Added intr.h
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 2001/03/07 23:50:35 miod Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.14 2001/03/07 23:50:35 miod Exp $
a97 4
#define CLSIZE		1
#define CLSIZELOG2	0

/* NOTE: SSIZE, SINCR and UPAGES must be multiples of CLSIZE */
d115 1
a115 1
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
d134 1
a134 1
 * Size of kernel malloc arena in CLBYTES-sized logical pages
d137 1
a137 1
#define NKMEMCLUSTERS	(4096*1024/CLBYTES)
@


1.14
log
@Include <machine/cpu.h> for non-locore code.
This makes sure code including <machine/param.h> will get prototypes
for setsoftXXX macros - there is code in the tree which depends on this.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 2001/02/01 03:38:18 smurph Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.13 2001/02/01 03:38:18 smurph Exp $
d175 7
@


1.13
log
@Major changes to get MVME188 working.  More header and code cleanups.  The
kernel is tested on MVME188A/2P256 and MVME188A/1P64.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 2001/01/14 20:25:24 smurph Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.12 2001/01/14 20:25:24 smurph Exp $
d48 7
a175 2
#include <machine/psl.h>

d177 1
@


1.12
log
@Complete move to UVM virtual memory system.  More header fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 2000/02/22 19:27:55 deraadt Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.11 2000/02/22 19:27:55 deraadt Exp $
d62 3
a64 3
#define  ALIGNBYTES           15	/* 64 bit alignment */
#define  ALIGN(p)             (((u_int)(p) + ALIGNBYTES) & ~ALIGNBYTES)
#define  ALIGNED_POINTER(p,t) ((((u_long)(p)) & (sizeof(t)-1)) == 0)
d66 2
a67 2
#ifndef  NBPG
#define  NBPG                 4096     /* bytes/page */
d69 7
a75 7
#define  PGOFSET              (NBPG-1) /* byte offset into page */
#define  PGSHIFT              12       /* LOG2(NBPG) */
#define  NPTEPG               (NBPG/(sizeof(u_int)))

#define  NBSEG                (1<<22)  /* bytes/segment */
#define  SEGOFSET             (NBSEG-1)/* byte offset into segment */
#define  SEGSHIFT             22       /* LOG2(NBSEG) */
d83 2
a84 2
#define  KERNBASE             0x0      /* start of kernel virtual */
#define  BTOPKERNBASE         ((u_long)KERNBASE >> PGSHIFT)
d86 4
a89 4
#define  DEV_BSIZE            512
#define  DEV_BSHIFT           9        /* log2(DEV_BSIZE) */
#define  BLKDEV_IOSIZE        2048     /* Should this be changed? XXX */
#define  MAXPHYS              (64 * 1024)	/* max raw I/O transfer size */
d91 2
a92 2
#define  CLSIZE               1
#define  CLSIZELOG2           0
d95 14
a108 14
#define  SSIZE                1        /* initial stack size/NBPG */
#define  SINCR                1        /* increment of stack/NBPG */
#define  USPACE               ctob(UPAGES)

#define  UPAGES               4                    /* pages of u-area */
#define  UADDR                0xEEE00000	         /* address of u */
#define  UVPN                 (UADDR>>PGSHIFT)     /* virtual page number of u */
#define  KERNELSTACK          (UADDR+UPAGES*NBPG)  /* top of kernel stack */

#define  PHYSIO_MAP_START     0xEEF00000
#define  PHYSIO_MAP_SIZE      0x00100000
#define  IOMAP_MAP_START      0xEF000000 /* VME etc */
#define  IOMAP_SIZE           0x018F0000
#define  NIOPMAP              32
d117 4
a120 4
#define  MSIZE		128		/* size of an mbuf */
#define  MCLSHIFT	11		/* convert bytes to m_buf clusters */
#define  MCLBYTES	(1 << MCLSHIFT)	/* size of a m_buf cluster */
#define  MCLOFSET	(MCLBYTES - 1)	/* offset within a m_buf cluster */
d122 1
a122 1
#ifndef  NMBCLUSTERS
d124 1
a124 1
#define  NMBCLUSTERS          1024     /* map size, max cluster allocation */
d126 1
a126 1
#define  NMBCLUSTERS          512      /* map size, max cluster allocation */
d133 2
a134 2
#ifndef  NKMEMCLUSTERS
#define  NKMEMCLUSTERS        (4096*1024/CLBYTES)
d140 3
a142 3
#define  ctod(x)              ((x)<<(PGSHIFT-DEV_BSHIFT))
#define  dtoc(x)              ((x)>>(PGSHIFT-DEV_BSHIFT))
#define  dtob(x)              ((x)<<DEV_BSHIFT)
d145 1
a145 1
#define  ctob(x)              ((x)<<PGSHIFT)
d148 1
a148 1
#define  btoc(x)              (((unsigned)(x)+(NBPG-1))>>PGSHIFT)
d150 1
a150 1
#define  btodb(bytes)         /* calculates (bytes / DEV_BSIZE) */ \
d152 1
a152 1
#define  dbtob(db)            /* calculates (db * DEV_BSIZE) */ \
d161 1
a161 1
#define  bdbtofsb(bn)         ((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))
d166 2
a167 2
#define  mvme88k_btop(x)      ((unsigned)(x) >> PGSHIFT)
#define  mvme88k_ptob(x)      ((unsigned)(x) << PGSHIFT)
d182 4
a185 3
#define  CPU_187              0x187
#define  CPU_188              0x188
#define  CPU_197              0x197
@


1.11
log
@enlarge msgbuf, somewhat line netbsd did
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 1999/09/27 20:46:18 smurph Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.10 1999/09/27 20:46:18 smurph Exp $
d117 5
a121 4
#define  MSIZE                128      /* size of an mbuf */
#define  MCLBYTES             1024
#define  MCLSHIFT             10
#define  MCLOFSET             (MCLBYTES - 1)
@


1.10
log
@Adding support for MVME188 and MVME197
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 1999/05/29 04:41:45 smurph Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.9 1999/05/29 04:41:45 smurph Exp $
d135 2
@


1.10.4.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d43 1
a43 1
 *	$Id$
a134 2

#define MSGBUFSIZE	4096
@


1.10.4.2
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 2001/03/09 05:44:40 smurph Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.15 2001/03/09 05:44:40 smurph Exp $
a47 7
#ifdef _KERNEL
#ifndef _LOCORE
#include <machine/cpu.h>
#include <machine/psl.h>
#endif	/* _LOCORE */
#endif

d62 3
a64 3
#define  ALIGNBYTES		15		/* 64 bit alignment */
#define  ALIGN(p)		(((u_int)(p) + ALIGNBYTES) & ~ALIGNBYTES)
#define  ALIGNED_POINTER(p,t)	((((u_long)(p)) & (sizeof(t)-1)) == 0)
d66 2
a67 2
#ifndef NBPG
#define NBPG		4096		/* bytes/page */
d69 7
a75 7
#define PGOFSET		(NBPG-1)	/* byte offset into page */
#define PGSHIFT		12		/* LOG2(NBPG) */
#define NPTEPG		(NBPG/(sizeof(u_int)))

#define NBSEG		(1<<22)		/* bytes/segment */
#define SEGOFSET	(NBSEG-1)	/* byte offset into segment */
#define SEGSHIFT	22	/* LOG2(NBSEG) */
d83 2
a84 2
#define KERNBASE	0x0		/* start of kernel virtual */
#define BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
d86 4
a89 4
#define DEV_BSIZE	512
#define DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define BLKDEV_IOSIZE	2048		/* Should this be changed? XXX */
#define MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */
d91 2
a92 2
#define CLSIZE		1
#define CLSIZELOG2	0
d95 14
a108 14
#define SSIZE		1		/* initial stack size/NBPG */
#define SINCR		1		/* increment of stack/NBPG */
#define USPACE		ctob(UPAGES)

#define UPAGES		8		/* pages of u-area */
#define UADDR		0xEEE00000	/* address of u */
#define UVPN		(UADDR>>PGSHIFT)	/* virtual page number of u */
#define KERNELSTACK	(UADDR+UPAGES*NBPG)	/* top of kernel stack */

#define PHYSIO_MAP_START	0xEEF00000
#define PHYSIO_MAP_SIZE		0x00100000
#define IOMAP_MAP_START		0xEF000000	/* VME etc */
#define IOMAP_SIZE		0x018F0000
#define NIOPMAP			32
d117 5
a121 6
#define MSIZE		128		/* size of an mbuf */
#define MCLSHIFT	11		/* convert bytes to m_buf clusters */
#define MCLBYTES	(1 << MCLSHIFT)	/* size of a m_buf cluster */
#define MCLOFSET	(MCLBYTES - 1)	/* offset within a m_buf cluster */

#ifndef NMBCLUSTERS
d123 1
a123 1
#define NMBCLUSTERS	1024		/* map size, max cluster allocation */
d125 1
a125 1
#define NMBCLUSTERS	512		/* map size, max cluster allocation */
d132 2
a133 2
#ifndef NKMEMCLUSTERS
#define NKMEMCLUSTERS	(4096*1024/CLBYTES)
d139 3
a141 3
#define ctod(x)			((x)<<(PGSHIFT-DEV_BSHIFT))
#define dtoc(x)			((x)>>(PGSHIFT-DEV_BSHIFT))
#define dtob(x)			((x)<<DEV_BSHIFT)
d144 1
a144 1
#define ctob(x)			((x)<<PGSHIFT)
d147 1
a147 1
#define btoc(x)			(((unsigned)(x)+(NBPG-1))>>PGSHIFT)
d149 1
a149 1
#define btodb(bytes)         /* calculates (bytes / DEV_BSIZE) */ \
d151 1
a151 1
#define dbtob(db)            /* calculates (db * DEV_BSIZE) */ \
d160 1
a160 1
#define bdbtofsb(bn)		((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))
d165 2
a166 2
#define mvme88k_btop(x)		((unsigned)(x) >> PGSHIFT)
#define mvme88k_ptob(x)		((unsigned)(x) << PGSHIFT)
a169 5
/*
 * Get interrupt glue.
 */
#include <machine/intr.h>

a170 1
extern int delay __P((int));
d181 3
a183 4
#define CPU_187		0x187
#define CPU_188		0x188
#define CPU_197		0x197
#define CPU_8120	0x8120
@


1.10.4.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10.4.2 2001/04/18 16:11:23 niklas Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.10.4.2 2001/04/18 16:11:23 niklas Exp $
d73 1
d75 1
a77 5

#define	PAGE_SHIFT	12
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

d98 4
d119 1
a119 1
 * MCLBYTES must be no larger than the software page size, and,
d138 1
a138 1
 * Size of kernel malloc arena in logical pages
d141 1
a141 1
#define NKMEMCLUSTERS	(4096*1024/PAGE_SIZE)
@


1.10.4.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10.4.3 2001/07/04 10:20:04 niklas Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.10.4.3 2001/07/04 10:20:04 niklas Exp $
d51 1
a59 2
/* Older value for MID_MACHINE */
#define	OLD_MID_MACHINE	151
d81 1
a81 1
#define NPTEPG		(PAGE_SIZE / (sizeof(u_int)))
d83 3
a85 3
#define SEGSHIFT	22		/* LOG2(NBSEG) */
#define NBSEG		(1 << SEGSHIFT)	/* bytes/segment */
#define SEGOFSET	(NBSEG - 1)	/* byte offset into segment */
d123 1
a123 1
#define MSIZE		256		/* size of an mbuf */
d143 1
a143 1
#define MSGBUFSIZE	PAGE_SIZE
d146 3
a148 3
#define ctod(x)			((x) << (PGSHIFT - DEV_BSHIFT))
#define dtoc(x)			((x) >> (PGSHIFT - DEV_BSHIFT))
#define dtob(x)			((x) << DEV_BSHIFT)
d151 1
a151 1
#define ctob(x)			((x) << PGSHIFT)
d154 1
a154 1
#define btoc(x)			(((unsigned)(x) + PAGE_MASK) >> PGSHIFT)
d170 8
a179 1
#include <machine/psl.h>
d185 1
d187 1
a190 1

a197 1

@


1.10.4.5
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10.4.4 2001/10/31 03:01:19 nate Exp $ */
d43 1
d83 4
@


1.10.4.6
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d133 5
a137 5
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((4 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((4 * 1024 * 1024) >> PAGE_SHIFT)
a175 1
extern int brdtyp;
a179 8
 * Values for the brdtyp variable.
 */
#define BRD_187		0x187
#define BRD_188		0x188
#define BRD_197		0x197
#define BRD_8120	0x8120

/*
d182 4
a185 9
#define CPU_88100	0x100
#define CPU_88110	0x110

/*
 * Values for the cpumod variable.
 */
#define MOD_LE		0x01
#define MOD_SP		0x02
#define MOD_DP		0x03
@


1.10.4.7
log
@Merge in -current from about a week ago
@
text
@d172 1
a172 1
extern int delay(int);
@


1.10.4.8
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10.4.7 2002/03/28 10:36:02 niklas Exp $ */
d20 5
a24 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.10.4.9
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d54 2
d69 1
a69 1
#define NBPG		(1 << PGSHIFT)	/* bytes/page */
d77 1
a77 1
#define NPTEPG		(PAGE_SIZE / (sizeof(pt_entry_t)))
d80 3
a82 2
 * The Bug uses the bottom 64KB. The kernel will allocate PTEs to map this
 * space, but the kernel must be linked with a start address past these 64KB.
a83 2
#define KERNBASE	0x00000000	/* start of kernel virtual */
#define	KERNTEXTOFF	0x00010000	/* start of kernel text */
d85 4
d90 1
a90 2
#define DEV_BSIZE	(1 << DEV_BSHIFT)
#define BLKDEV_IOSIZE	2048
d95 1
d97 10
a106 10
#define UPAGES		3		/* pages of u-area */
#define USPACE		(UPAGES * NBPG)

#define UADDR		0xeee00000	/* address of u */

/*
 * IO space
 */

#define	IOMAP_SIZE	0x01000000	/* roughly 0xff000000 - 0xffffffff */
d140 1
a143 1
#define btoc(x)			(((x) + PGOFSET) >> PGSHIFT)
d145 7
a151 3
/* bytes to disk blocks */
#define btodb(x)		((x) >> DEV_BSHIFT)
#define dbtob(x)		((x) << DEV_BSHIFT)
d164 1
d168 1
a168 1
extern void delay(int);
@


1.10.4.10
log
@Merge with the trunk
@
text
@a39 1

d43 6
d51 3
d55 21
a75 1
#include <m88k/param.h>
d84 13
d103 54
d158 4
d175 6
d188 2
@


1.9
log
@Added vme bus device drivers. MVME328, MVME376, MVME332
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8 1999/02/09 06:36:27 smurph Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.8 1999/02/09 06:36:27 smurph Exp $
d48 5
a52 5
#define	_MACHINE 	mvme88k
#define	MACHINE 	"mvme88k"
#define	_MACHINE_ARCH	m88k
#define	MACHINE_ARCH	"m88k"
#define	MID_MACHINE	MID_M88K
d62 3
a64 3
#define ALIGNBYTES	15	/* 64 bit alignment */
#define	ALIGN(p)		(((u_int)(p) + ALIGNBYTES) & ~ALIGNBYTES)
#define ALIGNED_POINTER(p,t)	((((u_long)(p)) & (sizeof(t)-1)) == 0)
d66 2
a67 2
#ifndef NBPG
#define	NBPG		4096		/* bytes/page */
d69 7
a75 7
#define	PGOFSET		(NBPG-1)	/* byte offset into page */
#define	PGSHIFT		12		/* LOG2(NBPG) */
#define	NPTEPG		(NBPG/(sizeof(u_int)))

#define NBSEG		(1<<22)		/* bytes/segment */
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */
#define	SEGSHIFT	22		/* LOG2(NBSEG) */
d83 2
a84 2
#define	KERNBASE	0x0		/* start of kernel virtual */
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
d86 4
a89 4
#define	DEV_BSIZE	512
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define BLKDEV_IOSIZE	2048		/* Should this be changed? XXX */
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */
d91 2
a92 2
#define	CLSIZE		1
#define	CLSIZELOG2	0
d95 14
a108 14
#define	SSIZE		1		/* initial stack size/NBPG */
#define	SINCR		1		/* increment of stack/NBPG */
#define USPACE		ctob(UPAGES)

#define	UPAGES		4		/* pages of u-area */
#define	UADDR		0xEEE00000	/* address of u */
#define	UVPN		(UADDR>>PGSHIFT)/* virtual page number of u */
#define	KERNELSTACK	(UADDR+UPAGES*NBPG)	/* top of kernel stack */

#define PHYSIO_MAP_START 	0xEEF00000
#define PHYSIO_MAP_SIZE  	0x00100000
#define IOMAP_MAP_START		0xEF000000 /* VME etc */
#define IOMAP_SIZE		0x018F0000
#define NIOPMAP			32
d117 7
a123 7
#define	MSIZE		128		/* size of an mbuf */
#define	MCLBYTES	1024
#define	MCLSHIFT	10
#define	MCLOFSET	(MCLBYTES - 1)
#ifndef NMBCLUSTERS
#ifdef GATEWAY
#define	NMBCLUSTERS	1024		/* map size, max cluster allocation */
d125 1
a125 1
#define	NMBCLUSTERS	512		/* map size, max cluster allocation */
d132 2
a133 2
#ifndef NKMEMCLUSTERS
#define	NKMEMCLUSTERS	(4096*1024/CLBYTES)
d137 3
a139 3
#define	ctod(x)	((x)<<(PGSHIFT-DEV_BSHIFT))
#define	dtoc(x)	((x)>>(PGSHIFT-DEV_BSHIFT))
#define	dtob(x)	((x)<<DEV_BSHIFT)
d142 1
a142 1
#define	ctob(x)	((x)<<PGSHIFT)
d145 1
a145 1
#define	btoc(x)	(((unsigned)(x)+(NBPG-1))>>PGSHIFT)
d147 1
a147 1
#define	btodb(bytes)	 		/* calculates (bytes / DEV_BSIZE) */ \
d149 1
a149 1
#define	dbtob(db)			/* calculates (db * DEV_BSIZE) */ \
d158 1
a158 1
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))
d163 2
a164 2
#define mvme88k_btop(x)	((unsigned)(x) >> PGSHIFT)
#define mvme88k_ptob(x)	((unsigned)(x) << PGSHIFT)
d168 2
a169 2
#ifdef _KERNEL
#define	DELAY(x)	delay(x)
d179 3
a181 3
#define CPU_187		0x187
#define CPU_188		0x188
#define CPU_197		0x197
d183 2
@


1.8
log
@Added kernel support for user debugging.  Fixed file ID's
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.1 1998/12/15 06:02:55 smurph Exp $ */
d43 1
a43 1
 *	$Id: param.h,v 1.7 1998/12/15 04:45:50 smurph Exp $
d99 1
a99 1
#define	UPAGES		3		/* pages of u-area */
@


1.7
log
@Commit for the first real OpenBSD mvme88k kernel.
@
text
@d1 1
d3 1
d43 1
a43 1
 *	$Id: param.h,v 1.6 1998/08/18 21:18:47 millert Exp $
d48 1
a48 1
#define	_MACHINE 	"mvme88k"
d50 1
a50 1
#define	_MACHINE_ARCH	"m88k"
a60 2
/*#define ALIGNBYTES	(sizeof(int) - 1)*/
#define ALIGNBYTES	15
d62 1
a62 4
/* Stack alignment upon a double word boundary proves deadly */
#define DOUBLE_ALIGN 1
#ifdef DOUBLE_ALIGN
/*#define	ALIGN(p)	(((u_int)(p) + (sizeof(double) - 1)) & ~(sizeof(double) - 1))*/
d64 1
a64 3
#else /* 16 byte alignment works */
#define	ALIGN(p) (((u_int)(p) + ((sizeof(double)*2) - 1)) & ~((sizeof(double)*2) - 1))
#endif
d123 2
a125 2
#else
#define	NMBCLUSTERS	256		/* map size, max cluster allocation */
d133 1
a133 1
#define	NKMEMCLUSTERS	(3072*1024/CLBYTES)
@


1.6
log
@add mvme88k_btop() and mvme88k_ptob() macros for consistency with other ports
@
text
@d41 1
a41 1
 *	$Id: param.h,v 1.5 1997/03/03 20:21:06 rahnds Exp $
d46 5
a50 3
#define	MACHINE		"m88k"
#define MACHINE_ARCH	"m88k"
#define MID_MACHINE	MID_M88K
d53 1
a53 1
 * Round p (pointer or byte index) up to a correctly-aligned value
d59 11
a69 2
#define ALIGNBYTES	(sizeof(int) - 1)
#define	ALIGN(p)	(((u_int)(p) + (sizeof(double) - 1)) & ~(sizeof(double) - 1))
d185 2
@


1.5
log
@Cleanup after import. This also seems to bring up the current version.
@
text
@d41 1
a41 1
 *	$Id: param.h,v 1.1.1.2 1997/03/03 19:31:22 rahnds Exp $
d153 7
@


1.4
log
@This is a remove to get rid of the old mvme88k port which was incomplete
to replace it with a working version. The kernel compiles and works
at least.  The new version will be imported shortly.
@
text
@a0 2
/*	$OpenBSD: param.h,v 1.3 1997/02/28 22:57:38 niklas Exp $	*/

d39 3
d46 1
a46 5
/*
 * Machine dependent constants for mvme88k
 */
#define	MACHINE		"mvme88k"
#define	_MACHINE	mvme88k
a47 1
#define _MACHINE_ARCH	m88k
d53 3
a55 1
 * must be cast to any desired pointer type.
d58 1
a58 1
#define	ALIGN(p)	(((u_int)(p) + (sizeof(int) - 1)) &~ (sizeof(int) - 1))
d94 1
a94 1
#define	UADDR		0xFFEE0000	/* address of u */
d98 6
d112 2
a113 2
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)
a129 2
#define MAXPARTITIONS	16

d155 2
a156 42
#ifdef JUNK
/*
 * Mach derived conversion macros
 */
#define m88k_round_seg(x)	((((unsigned)(x)) + NBSEG - 1) & ~(NBSEG-1))
#define m88k_trunc_seg(x)	((unsigned)(x) & ~(NBSEG-1))
#define m88k_round_page(x)	((((unsigned)(x)) + NBPG - 1) & ~(NBPG-1))
#define m88k_trunc_page(x)	((unsigned)(x) & ~(NBPG-1))
#define m88k_btos(x)		((unsigned)(x) >> SEGSHIFT)
#define m88k_stob(x)		((unsigned)(x) << SEGSHIFT)
#define m88k_btop(x)		((unsigned)(x) >> PGSHIFT)
#define m88k_ptob(x)		((unsigned)(x) << PGSHIFT)

/*
 * spl functions; all but spl0 are done in-line
 */
#include <machine/psl.h>

#define _debug_spl(s) \
({ \
        register int _spl_r; \
\
        asm __volatile ("clrl %0; movew sr,%0; movew %1,sr" : \
                "&=d" (_spl_r) : "di" (s)); \
	if ((_spl_r&PSL_IPL) > (s&PSL_IPL)) \
		printf ("%s:%d:spl(%d) ==> spl(%d)!!\n",__FILE__,__LINE__, \
		    ((PSL_IPL&_spl_r)>>8), ((PSL_IPL&s)>>8)); \
        _spl_r; \
})

#define _spl_no_check(s) \
({ \
        register int _spl_r; \
\
        asm __volatile ("clrl %0; movew sr,%0; movew %1,sr" : \
                "&=d" (_spl_r) : "di" (s)); \
        _spl_r; \
})
#if defined (DEBUG)
#define _spl _debug_spl
#else
#define _spl _spl_no_check
a158 23
/* spl0 requires checking for software interrupts */
#define spl1()	_spl(PSL_S|PSL_IPL1)
#define spl2()	_spl(PSL_S|PSL_IPL2)
#define spl3()	_spl(PSL_S|PSL_IPL3)
#define spl4()	_spl(PSL_S|PSL_IPL4)
#define spl5()	_spl(PSL_S|PSL_IPL5)
#define spl6()	_spl(PSL_S|PSL_IPL6)
#define spl7()	_spl(PSL_S|PSL_IPL7)


#define splnone()	spl0()
#define splsoftclock()	spl1()
#define splnet()	spl1()
#define splbio()	spl3()
#define splimp()	spl3()
#define spltty()	spl4()
#define splclock()	spl6()
#define splstatclock()	spl6()
#define splvm()		spl6()
#define splhigh()	spl7()
#define splsched()	spl7()
#endif /* JUNK */

d160 2
a161 1
#define	DELAY(x)	delay(x)
d163 4
a166 1

@


1.3
log
@Add missing _MACHINE & _MACHINE_ARCH defines + some RCS Ids
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.2
log
@MCLSHIFT=11, and calc MCLBYTES in such terms. found by pefo
@
text
@d1 2
a40 3
 *
 *	@@(#)param.h	7.8 (Berkeley) 6/28/91
 *	$Id: param.h,v 1.1.1.1 1995/10/18 10:54:21 deraadt Exp $
d46 1
a46 1
 * Machine dependent constants for amiga
d48 2
a49 1
#define	MACHINE		"m88k"
d51 1
@


1.1
log
@Initial revision
@
text
@d41 1
a41 1
 *	$Id: param.h,v 1.12 1994/06/04 11:59:26 chopps Exp $
d107 2
a108 2
#define	MCLBYTES	1024
#define	MCLSHIFT	10
@


1.1.1.1
log
@initial 88k import; code by nivas and based on mach luna88k
@
text
@@


1.1.1.2
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@d41 1
a41 1
 *	$Id: param.h,v 1.2 1996/04/02 12:36:29 build Exp build $
d46 3
d56 1
a56 3
 * must be cast to any desired pointer type. ALIGN() is used for
 * aligning stack, which needs to be on a double word boundary for
 * 88k.
d59 1
a59 1
#define	ALIGN(p)	(((u_int)(p) + (sizeof(double) - 1)) & ~(sizeof(double) - 1))
d95 1
a95 1
#define	UADDR		0xEEE00000	/* address of u */
a98 6
#define PHYSIO_MAP_START 	0xEEF00000
#define PHYSIO_MAP_SIZE  	0x00100000
#define IOMAP_MAP_START		0xEF000000 /* VME etc */
#define IOMAP_SIZE		0x018F0000
#define NIOPMAP			32

d125 2
d152 67
a222 8
#ifdef _KERNEL
extern int cputyp;
extern int cpumod;
#endif
/*
 * Values for the cputyp variable.
 */
#define CPU_187		0x187
@
