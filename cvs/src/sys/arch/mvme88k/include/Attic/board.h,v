head	1.23;
access;
symbols
	OPENBSD_5_5:1.22.0.6
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	SMP_SYNC_A:1.20
	SMP_SYNC_B:1.20
	OPENBSD_3_5:1.20.0.2
	OPENBSD_3_5_BASE:1.20
	OPENBSD_3_4:1.15.0.6
	OPENBSD_3_4_BASE:1.15
	UBC_SYNC_A:1.15
	OPENBSD_3_3:1.15.0.4
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.2
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.14.0.4
	OPENBSD_3_1_BASE:1.14
	UBC_SYNC_B:1.15
	UBC:1.14.0.2
	UBC_BASE:1.14
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.6.0.8
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.6
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.4
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	mvme88kport:1.1.1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	first_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.23
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.22;

1.22
date	2013.05.17.22.46.27;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2004.08.02.08.35.00;	author miod;	state dead;
branches;
next	1.20;

1.20
date	2004.01.19.17.21.23;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2003.11.09.00.32.00;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2003.10.11.22.08.57;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2003.09.28.16.01.11;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2003.09.16.20.52.19;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.04.00.09.08;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2001.12.19.05.06.26;	author smurph;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2001.12.16.23.49.46;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.12.13.08.55.51;	author smurph;	state Exp;
branches;
next	1.11;

1.11
date	2001.08.26.14.31.07;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2001.08.12.12.03.02;	author heko;	state Exp;
branches;
next	1.9;

1.9
date	2001.03.07.23.37.15;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.01.03.38.17;	author smurph;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.14.20.25.23;	author smurph;	state Exp;
branches;
next	1.6;

1.6
date	99.09.27.20.46.17;	author smurph;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	99.05.29.04.41.45;	author smurph;	state Exp;
branches;
next	1.4;

1.4
date	99.02.09.06.36.25;	author smurph;	state Exp;
branches;
next	1.3;

1.3
date	97.03.03.20.20.49;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	97.03.03.19.07.21;	author rahnds;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.10.54.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.10.54.21;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.03.03.19.31.23;	author rahnds;	state Exp;
branches;
next	;

1.6.4.1
date	2001.04.18.16.11.13;	author niklas;	state Exp;
branches;
next	1.6.4.2;

1.6.4.2
date	2001.10.31.03.01.18;	author nate;	state Exp;
branches;
next	1.6.4.3;

1.6.4.3
date	2002.03.06.02.04.44;	author niklas;	state Exp;
branches;
next	1.6.4.4;

1.6.4.4
date	2003.03.27.23.32.18;	author niklas;	state Exp;
branches;
next	1.6.4.5;

1.6.4.5
date	2004.02.19.10.49.07;	author niklas;	state Exp;
branches;
next	;

1.14.2.1
date	2002.06.11.03.37.10;	author art;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: board.h,v 1.22 2013/05/17 22:46:27 miod Exp $	*/
/*
 * Copyright (c) 2013, Miodrag Vallat
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef	_MACHINE_BOARD_H_
#define	_MACHINE_BOARD_H_

#if !defined(_LOCORE)

struct cmmu_p;
struct intrhand;
struct mvmeprom_brdid;
struct pmap_table;

struct board {
	void		(*bootstrap)(void);
	vaddr_t		(*memsize)(void);
	int		(*cpuspeed)(const struct mvmeprom_brdid *);
	void		(*reboot)(int);
	int		(*is_syscon)(void);

	void		(*intr)(struct trapframe *);
	int		(*nmi)(struct trapframe *);		/* 88110 */
	void		(*nmi_wrapup)(struct trapframe *);	/* 88110 */

	u_int		(*getipl)(void);
	u_int		(*setipl)(u_int);
	u_int		(*raiseipl)(u_int);

	int		(*intsrc_available)(u_int, int);
	void		(*intsrc_enable)(u_int, int);
	void		(*intsrc_disable)(u_int, int);
	int		(*intsrc_establish)(u_int, struct intrhand *,
			    const char *);
	void		(*intsrc_disestablish)(u_int, struct intrhand *);

	void		(*init_clocks)(void);
	void		(*delay)(int);

	u_int		(*init_vme)(const char *);

#ifdef	MULTIPROCESSOR
	void		(*send_ipi)(int, cpuid_t);
	void		(*smp_setup)(struct cpu_info *);
#endif

	const struct pmap_table *ptable;
	const struct cmmu_p *cmmu;
};

#define	BOARD_PROTOS(b) \
void	m##b##_bootstrap(void); \
vaddr_t	m##b##_memsize(void); \
int	m##b##_cpuspeed(const struct mvmeprom_brdid *); \
void	m##b##_reboot(int); \
int	m##b##_is_syscon(void); \
void	m##b##_intr(struct trapframe *); \
int	m##b##_nmi(struct trapframe *); \
void	m##b##_nmi_wrapup(struct trapframe *); \
u_int	m##b##_getipl(void); \
u_int	m##b##_setipl(u_int); \
u_int	m##b##_raiseipl(u_int); \
int	m##b##_intsrc_available(u_int, int); \
void	m##b##_intsrc_enable(u_int, int); \
void	m##b##_intsrc_disable(u_int, int); \
int	m##b##_intsrc_establish(u_int, struct intrhand *, const char *); \
void	m##b##_intsrc_disestablish(u_int, struct intrhand *); \
void	m##b##_init_clocks(void); \
u_int	m##b##_init_vme(const char *); \
void	m##b##_delay(int); \
void	m##b##_send_ipi(int, cpuid_t); \
void	m##b##_smp_setup(struct cpu_info *)

BOARD_PROTOS(181);
BOARD_PROTOS(187);
BOARD_PROTOS(188);
BOARD_PROTOS(197);
BOARD_PROTOS(1x7);

extern const struct board board_mvme181;
extern const struct board board_mvme187;
extern const struct board board_mvme188;
extern const struct board board_mvme197le;
extern const struct board board_mvme197spdp;

extern const struct board *platform;

#define	md_interrupt_func(f)	platform->intr(f)
#define	md_nmi_func(f)		platform->nmi(f)
#define	md_nmi_wrapup_func(f)	platform->nmi_wrapup(f)

#endif	/* _LOCORE */
#endif	/* _MACHINE_BOARD_H_ */
@


1.22
log
@Replace the bunch of md_* function pointers with a `struct board' containing
function pointers for all the board-specific code.

Add a bunch of `struct board' methods to cover most, if not all, of the
`per-board' logic. This allows most of the md drivers to be cleaned up and
no longer need to embed board-specific knowledge.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.9 2011/01/02 13:40:07 miod Exp $	*/
@


1.21
log
@More include files cleaning:
- move MAX_CPUS constant to <machine/cpu.h>
- do not include <machine/board.h> unless needed. In fact, remove this file
  entirely on mvme88k, and include <machine/mvme*.h> on a
  compiling-for-this-board basis
- keep MAX_CMMUS constant private to the m8820x code
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.20 2004/01/19 17:21:23 miod Exp $ */
d3 1
a3 2
 * Copyright (c) 1996 Nivas Madhur
 * All rights reserved.
a12 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Nivas Madhur.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
d15 10
a24 10
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
a25 15
/*
 * Mach Operating System
 * Copyright (c) 1991 Carnegie Mellon University
 * Copyright (c) 1991 OMRON Corporation
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 */
#ifndef __MACHINE_BOARD_H__
#define __MACHINE_BOARD_H__
d27 31
a57 2
#define MAX_CPUS	4	/* maximum number of CPUs */
#define MAX_CMMUS	8	/* maximum number of CMMUs */
d59 2
a60 1
#define MAXPHYSMEM	0x30000000	/* maximum physical memory (768MB) */
d62 1
a62 1
/* Board-dependent definitions */
d64 3
a66 11
#if defined(MVME187) || defined(MVME197)
#include <machine/mvme1x7.h>
#endif
#ifdef MVME187
#include <machine/mvme187.h>
#endif
#ifdef MVME188
#include <machine/mvme188.h>
#endif
#ifdef MVME197
#include <machine/mvme197.h>
d69 47
a115 1
#endif /* __MACHINE_BOARD_H__ */
@


1.20
log
@Get rid of a few useless defines, as well as a few duplicated ones; and
move 8820x-only definitions to the adequate header.

Also crank MAXPHYSMEM to a more realistic value.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.19 2003/11/09 00:32:00 miod Exp $ */
@


1.19
log
@Typos; Jonathan Gray
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.18 2003/10/11 22:08:57 miod Exp $ */
a46 24
/*
 *      VME187 CPU board constants - derived from Luna88k
 */

#define MAX_CPUS	4	/* no. of CPUs */
#define MAX_CMMUS	8	/* 2 CMMUs per CPU - 1 data and 1 code */

#define SYSV_BASE	0x00000000	/* system virtual base */

#define MAXU_ADDR	0x40000000	/* size of user virtual space */
#define MAXPHYSMEM	0x10000000	/* max physical memory */

#define VMEA16		0xFFFF0000	/* VMEbus A16 */
#define VMEA16_SIZE	0x0000EFFF	/* VMEbus A16 size */
#define VMEA32D16    	0xFF000000	/* VMEbus A32/D16 */
#define VMEA32D16_SIZE	0x007FFFFF	/* VMEbus A32/D16 size */


/* These need to be here because of the way m18x_cmmu.c
   handles the CMMU's. */
#define CMMU_SIZE	0x1000

#define SBC_CMMU_I	0xFFF77000 	/* Single Board Computer code CMMU */
#define SBC_CMMU_D	0xFFF7F000 	/* Single Board Computer data CMMU */
d48 2
a49 8
#define VME_CMMU_I0	0xFFF7E000 	/* MVME188 code CMMU 0 */
#define VME_CMMU_I1	0xFFF7D000 	/* MVME188 code CMMU 1 */
#define VME_CMMU_I2	0xFFF7B000 	/* MVME188 code CMMU 2 */
#define VME_CMMU_I3	0xFFF77000 	/* MVME188 code CMMU 3 */
#define VME_CMMU_D0	0xFFF6F000 	/* MVME188 data CMMU 0 */
#define VME_CMMU_D1	0xFFF5F000 	/* MVME188 data CMMU 1 */
#define VME_CMMU_D2	0xFFF3F000 	/* MVME188 data CMMU 2 */
#define VME_CMMU_D3	0xFFF7F000 	/* MVME188 data CMMU 3 */
d51 1
a51 13
/* These are the hardware exceptions. */
#define INT_BIT		0x1		/* interrupt exception		*/
#define IACC_BIT	0x2		/* instruction access exception	*/
#define DACC_BIT	0x4		/* data access exception	*/
#define MACC_BIT	0x8		/* misaligned access exception	*/
#define UOPC_BIT	0x10		/* unimplemented opcode exception*/
#define PRIV_BIT	0x20		/* privilege violation exception*/
#define BND_BIT		0x40		/* bounds check violation	*/
#define IDE_BIT		0x80		/* illegal integer divide	*/
#define IOV_BIT		0x100		/* integer overflow exception	*/
#define ERR_BIT		0x200		/* error exception		*/
#define FPUP_BIT	0x400		/* FPU precise exception	*/
#define FPUI_BIT	0x800		/* FPU imprecise exception	*/
d53 1
a53 1
/* machine dependent definitions */
@


1.18
log
@Nuke trailing whitespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.17 2003/09/28 16:01:11 miod Exp $ */
d95 1
a95 1
/* machine dependant definitions */
@


1.17
log
@Remove duplicate CMMU address definitions.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.16 2003/09/16 20:52:19 miod Exp $ */
d65 1
a65 1
/* These need to be here because of the way m18x_cmmu.c 
d102 1
a102 1
#endif 
@


1.16
log
@Remove unused material from include files, as well as the annoying U() macro
which is only used to obfuscate things.

Doing this points out that the BUG memory is not at the same address on
187 and 197 (the 197 BUG is inside obio), so provide distinct constants,
and treat 187 and 197 slightly differently in pmap_bootstrap(). However, we
now need to map the 197 flash memory as well...

While there, simplify and constify pmap_table_build() and its associated data.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.15 2002/06/04 00:09:08 deraadt Exp $ */
a68 2
#ifndef CMMU_DEFS
#define CMMU_DEFS
a79 1
#endif /* CMMU_DEFS */
@


1.15
log
@spelling; raj@@cerias.purdue.edu
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.14 2001/12/19 05:06:26 smurph Exp $ */
a50 13
/*
 * Something to put append a 'U' to a long constant if it's C so that
 * it'll be unsigned in both ANSI and traditional.
 */
#if defined(_LOCORE)
#define U(num)	num
#elif defined(__STDC__)
#define U(num)	num ## U
#else
#define U(num)	num/**/U
#endif
#define UDEFINED

d54 1
a54 1
#define SYSV_BASE	U(0x00000000)	/* system virtual base */
d56 2
a57 2
#define MAXU_ADDR	U(0x40000000)	/* size of user virtual space */
#define MAXPHYSMEM	U(0x10000000)	/* max physical memory */
d59 4
a62 4
#define VMEA16		U(0xFFFF0000)	/* VMEbus A16 */
#define VMEA16_SIZE	U(0x0000EFFF)	/* VMEbus A16 size */
#define VMEA32D16    	U(0xFF000000)	/* VMEbus A32/D16 */
#define VMEA32D16_SIZE	U(0x007FFFFF)	/* VMEbus A32/D16 size */
d71 2
a72 2
#define SBC_CMMU_I	U(0xFFF77000) 	/* Single Board Computer code CMMU */
#define SBC_CMMU_D	U(0xFFF7F000) 	/* Single Board Computer data CMMU */
d74 8
a81 8
#define VME_CMMU_I0	U(0xFFF7E000) 	/* MVME188 code CMMU 0 */
#define VME_CMMU_I1	U(0xFFF7D000) 	/* MVME188 code CMMU 1 */
#define VME_CMMU_I2	U(0xFFF7B000) 	/* MVME188 code CMMU 2 */
#define VME_CMMU_I3	U(0xFFF77000) 	/* MVME188 code CMMU 3 */
#define VME_CMMU_D0	U(0xFFF6F000) 	/* MVME188 data CMMU 0 */
#define VME_CMMU_D1	U(0xFFF5F000) 	/* MVME188 data CMMU 1 */
#define VME_CMMU_D2	U(0xFFF3F000) 	/* MVME188 data CMMU 2 */
#define VME_CMMU_D3	U(0xFFF7F000) 	/* MVME188 data CMMU 3 */
a113 2


@


1.14
log
@board.h overhaul.  split definitions by arch.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.13 2001/12/16 23:49:46 miod Exp $ */
d103 1
a103 1
#define PRIV_BIT	0x20		/* priviledge violation exception*/
@


1.14.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.14 2001/12/19 05:06:26 smurph Exp $ */
d103 1
a103 1
#define PRIV_BIT	0x20		/* privilege violation exception*/
@


1.13
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.11 2001/08/26 14:31:07 miod Exp $ */
d111 2
d116 3
a118 1

d121 3
@


1.12
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@a110 2
/* machine dependant definitions */

d114 1
a114 3
#ifdef MVME187
#include <machine/mvme187.h>
#endif 
a117 3
#ifdef MVME197
#include <machine/mvme197.h>
#endif 
@


1.11
log
@Add prototypes, fix compilation warnings, random style fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.10 2001/08/12 12:03:02 heko Exp $ */
d111 2
d116 3
a118 1

d122 3
@


1.10
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.9 2001/03/07 23:37:15 miod Exp $ */
d56 3
a58 1
#	define U(num)	num
d60 1
a60 5
#  if defined(__STDC__)
#	define U(num)	num ## U
#  else
#	define U(num)	num/**/U
#  endif
@


1.9
log
@Inclusion from assembly code is detected with _LOCORE, no more fancy symbols.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.8 2001/02/01 03:38:17 smurph Exp $ */
d121 1
a121 1
#endif __MACHINE_BOARD_H__
@


1.8
log
@Major changes to get MVME188 working.  More header and code cleanups.  The
kernel is tested on MVME188A/2P256 and MVME188A/1P64.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.7 2001/01/14 20:25:23 smurph Exp $ */
d55 1
a55 1
#if defined(ASSEMBLER)
@


1.7
log
@Complete move to UVM virtual memory system.  More header fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.6 1999/09/27 20:46:17 smurph Exp $ */
d66 2
a67 2
#define MAX_CPUS	4		/* no. of CPUs */
#define MAX_CMMUS	8		/* 2 CMMUs per CPU - 1 data and 1 code */
d69 1
a69 1
#define SYSV_BASE			U(0x00000000) 	/* system virtual base */
d71 2
a72 2
#define MAXU_ADDR			U(0x40000000) 	/* size of user virtual space */
#define MAXPHYSMEM		U(0x10000000) 	/* max physical memory */
d74 3
a76 3
#define VMEA16				U(0xFFFF0000)	/* VMEbus A16 */
#define VMEA16_SIZE		U(0x0000EFFF)	/* VMEbus A16 size */
#define VMEA32D16    	U(0xFF000000)  /* VMEbus A32/D16 */
d82 1
a82 1
#define CMMU_SIZE			0x1000
d86 2
a87 2
#define SBC_CMMU_I		U(0xFFF77000) 	/* Single Board Computer code CMMU */
#define SBC_CMMU_D		U(0xFFF7F000) 	/* Single Board Computer data CMMU */
d89 8
a96 8
#define VME_CMMU_I0		U(0xFFF7E000) 	/* MVME188 code CMMU 0 */
#define VME_CMMU_I1		U(0xFFF7D000) 	/* MVME188 code CMMU 1 */
#define VME_CMMU_I2		U(0xFFF7B000) 	/* MVME188 code CMMU 2 */
#define VME_CMMU_I3		U(0xFFF77000) 	/* MVME188 code CMMU 3 */
#define VME_CMMU_D0		U(0xFFF6F000) 	/* MVME188 data CMMU 0 */
#define VME_CMMU_D1		U(0xFFF5F000) 	/* MVME188 data CMMU 1 */
#define VME_CMMU_D2		U(0xFFF3F000) 	/* MVME188 data CMMU 2 */
#define VME_CMMU_D3		U(0xFFF7F000) 	/* MVME188 data CMMU 3 */
d100 12
a111 12
#define INT_BIT      0x1		/* interrupt exception		*/
#define IACC_BIT     0x2		/* instruction access exception	*/
#define DACC_BIT     0x4		/* data access exception	*/
#define MACC_BIT     0x8		/* misaligned access exception	*/
#define UOPC_BIT     0x10		/* unimplemented opcode exception*/
#define PRIV_BIT     0x20		/* priviledge violation exception*/
#define BND_BIT      0x40		/* bounds check violation	*/
#define IDE_BIT      0x80		/* illegal integer divide	*/
#define IOV_BIT      0x100		/* integer overflow exception	*/
#define ERR_BIT      0x200		/* error exception		*/
#define FPUP_BIT     0x400		/* FPU precise exception	*/
#define FPUI_BIT     0x800		/* FPU imprecise exception	*/
@


1.6
log
@Adding support for MVME188 and MVME197
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.5 1999/05/29 04:41:45 smurph Exp $ */
d45 2
a46 2
#ifndef _MACHINE_BOARD_H
#define _MACHINE_BOARD_H
d121 1
a121 1
#endif /* _MACHINE_BOARD_H */
@


1.6.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.9 2001/03/07 23:37:15 miod Exp $ */
d45 2
a46 2
#ifndef __MACHINE_BOARD_H__
#define __MACHINE_BOARD_H__
d55 1
a55 1
#if defined(_LOCORE)
d66 2
a67 2
#define MAX_CPUS	4	/* no. of CPUs */
#define MAX_CMMUS	8	/* 2 CMMUs per CPU - 1 data and 1 code */
d69 1
a69 1
#define SYSV_BASE	U(0x00000000)	/* system virtual base */
d71 2
a72 2
#define MAXU_ADDR	U(0x40000000)	/* size of user virtual space */
#define MAXPHYSMEM	U(0x10000000)	/* max physical memory */
d74 3
a76 3
#define VMEA16		U(0xFFFF0000)	/* VMEbus A16 */
#define VMEA16_SIZE	U(0x0000EFFF)	/* VMEbus A16 size */
#define VMEA32D16    	U(0xFF000000)	/* VMEbus A32/D16 */
d82 1
a82 1
#define CMMU_SIZE	0x1000
d86 2
a87 2
#define SBC_CMMU_I	U(0xFFF77000) 	/* Single Board Computer code CMMU */
#define SBC_CMMU_D	U(0xFFF7F000) 	/* Single Board Computer data CMMU */
d89 8
a96 8
#define VME_CMMU_I0	U(0xFFF7E000) 	/* MVME188 code CMMU 0 */
#define VME_CMMU_I1	U(0xFFF7D000) 	/* MVME188 code CMMU 1 */
#define VME_CMMU_I2	U(0xFFF7B000) 	/* MVME188 code CMMU 2 */
#define VME_CMMU_I3	U(0xFFF77000) 	/* MVME188 code CMMU 3 */
#define VME_CMMU_D0	U(0xFFF6F000) 	/* MVME188 data CMMU 0 */
#define VME_CMMU_D1	U(0xFFF5F000) 	/* MVME188 data CMMU 1 */
#define VME_CMMU_D2	U(0xFFF3F000) 	/* MVME188 data CMMU 2 */
#define VME_CMMU_D3	U(0xFFF7F000) 	/* MVME188 data CMMU 3 */
d100 12
a111 12
#define INT_BIT		0x1		/* interrupt exception		*/
#define IACC_BIT	0x2		/* instruction access exception	*/
#define DACC_BIT	0x4		/* data access exception	*/
#define MACC_BIT	0x8		/* misaligned access exception	*/
#define UOPC_BIT	0x10		/* unimplemented opcode exception*/
#define PRIV_BIT	0x20		/* priviledge violation exception*/
#define BND_BIT		0x40		/* bounds check violation	*/
#define IDE_BIT		0x80		/* illegal integer divide	*/
#define IOV_BIT		0x100		/* integer overflow exception	*/
#define ERR_BIT		0x200		/* error exception		*/
#define FPUP_BIT	0x400		/* FPU precise exception	*/
#define FPUI_BIT	0x800		/* FPU imprecise exception	*/
d121 1
a121 1
#endif __MACHINE_BOARD_H__
@


1.6.4.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.6.4.1 2001/04/18 16:11:13 niklas Exp $ */
d56 1
a56 3
#define U(num)	num
#elif defined(__STDC__)
#define U(num)	num ## U
d58 5
a62 1
#define U(num)	num/**/U
d121 1
a121 1
#endif /* __MACHINE_BOARD_H__ */
@


1.6.4.3
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a110 2
/* machine dependant definitions */

d114 1
a114 3
#ifdef MVME187
#include <machine/mvme187.h>
#endif 
a116 3
#endif
#ifdef MVME197
#include <machine/mvme197.h>
@


1.6.4.4
log
@Sync the SMP branch with 3.3
@
text
@d103 1
a103 1
#define PRIV_BIT	0x20		/* privilege violation exception*/
@


1.6.4.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d47 29
a76 2
#define MAX_CPUS	4	/* maximum number of CPUs */
#define MAX_CMMUS	8	/* maximum number of CMMUs */
d78 3
a80 1
#define MAXPHYSMEM	0x30000000	/* maximum physical memory (768MB) */
d82 30
a111 1
/* Board-dependent definitions */
d118 1
a118 1
#endif
d127 2
@


1.5
log
@Added vme bus device drivers. MVME328, MVME376, MVME332
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.4 1999/02/09 06:36:25 smurph Exp $ */
d64 1
d66 2
a67 2
#define MAX_CPUS	1		/* no. of CPUs */
#define MAX_CMMUS	2		/* 2 CMMUs - 1 data and 1 code */
a73 12
#define BUGROM_START		U(0xFF800000)	/* start of BUG PROM */
#define BUGROM_SIZE		U(0x003FFFFF)	/* size of BUG PROM */
#define SRAM_START		U(0xFFE00000)	/* start of sram used by bug */
#define SRAM_SIZE			U(0x0001FFFF)	/* size of sram */
#define OBIO_START		U(0xFFF00000)	/* start of local IO */
#define OBIO_SIZE			U(0x000EFFFF)	/* size of obio space */

#define INT_PRI_LEVEL	U(0xFFF4203E)	/* interrupt priority level */
#define INT_MASK_LEVEL	U(0xFFF4203F)	/* interrupt mask level */

#define LOCAL_IO_DEVS	U(0xFFF00000)	/* local IO devices */

a78 16
#define PCC2_ADDR			U(0xFFF42000)	/* PCCchip2 Regs */
#define MEM_CTLR			U(0xFFF43000)	/* MEMC040 mem controller */
#define SCC_ADDR			U(0xFFF45000) 	/* Cirrus Chip */
#define LANCE_ADDR		U(0xFFF46000) 	/* 82596CA */
#define SCSI_ADDR			U(0xFFF47000) 	/* NCR 710 address */
#define NCR710_SIZE		U(0x00000040) 	/* NCR 710 size */
#define MK48T08_ADDR		U(0xFFFC0000) 	/* BBRAM, TOD */

#define	TOD_CAL_CTL		U(0xFFFC1FF8) 	/* calendar control register */
#define TOD_CAL_SEC		U(0xFFFC1FF9) 	/* seconds */
#define TOD_CAL_MIN		U(0xFFFC1FFA) 	/* minutes */
#define TOD_CAL_HOUR		U(0xFFFC1FFB) 	/* hours */
#define TOD_CAL_DOW		U(0xFFFC1FFC) 	/* Day Of the Week */
#define TOD_CAL_DAY		U(0xFFFC1FFD) 	/* days */
#define TOD_CAL_MON		U(0xFFFC1FFE) 	/* months */
#define TOD_CAL_YEAR		U(0xFFFC1FFF) 	/* years */
d80 2
a81 2
#define CMMU_I				U(0xFFF77000) 	/* CMMU instruction  */
#define CMMU_D				U(0xFFF7F000) 	/* CMMU data */
d84 37
d122 2
@


1.4
log
@Added kernel support for user debugging.  Fixed file ID's
@
text
@d1 1
a1 1
/*	$OpenBSD: board.h,v 1.1 1998/12/15 04:45:50 smurph Exp $ */
d65 1
a65 1
#define	MAX_CPUS	1		/* no. of CPUs */
d68 1
a68 1
#define	SYSV_BASE	U(0x00000000) 	/* system virtual base */
d70 2
a71 2
#define	MAXU_ADDR	U(0x40000000) 	/* size of user virtual space */
#define MAXPHYSMEM	U(0x10000000) 	/* max physical memory */
d73 6
a78 6
#define BUGROM_START	U(0xFF800000)	/* start of BUG PROM */
#define BUGROM_SIZE	U(0x003FFFFF)	/* size of BUG PROM */
#define SRAM_START	U(0xFFE00000)	/* start of sram used by bug */
#define SRAM_SIZE	U(0x0001FFFF)	/* size of sram */
#define OBIO_START	U(0xFFF00000)	/* start of local IO */
#define OBIO_SIZE	U(0x000EFFFF)	/* size of obio space */
a83 1
#define VMEA16		U(0xFFFF0000)	/* VMEbus A16 */
d85 25
a109 40
#define	PCC2_ADDR	U(0xFFF42000)	/* PCCchip2 Regs */
#define	MEM_CTLR	U(0xFFF43000)	/* MEMC040 mem controller */
#define SCC_ADDR	U(0xFFF45000) 	/* Cirrus Chip */
#define LANCE_ADDR	U(0xFFF46000) 	/* 82596CA */
#define SCSI_ADDR	U(0xFFF47000) 	/* NCR 710 address */
#define NCR710_SIZE	U(0x00000040) 	/* NCR 710 size */
#define MK48T08_ADDR	U(0xFFFC0000) 	/* BBRAM, TOD */

#define	TOD_CAL_CTL	U(0xFFFC1FF8) 	/* calendar control register */
#define TOD_CAL_SEC	U(0xFFFC1FF9) 	/* seconds */
#define TOD_CAL_MIN	U(0xFFFC1FFA) 	/* minutes */
#define TOD_CAL_HOUR	U(0xFFFC1FFB) 	/* hours */
#define TOD_CAL_DOW	U(0xFFFC1FFC) 	/* Day Of the Week */
#define TOD_CAL_DAY	U(0xFFFC1FFD) 	/* days */
#define TOD_CAL_MON	U(0xFFFC1FFE) 	/* months */
#define TOD_CAL_YEAR	U(0xFFFC1FFF) 	/* years */

#define CMMU_I		U(0xFFF77000) 	/* CMMU instruction  */
#define CMMU_D		U(0xFFF7F000) 	/* CMMU data */
#define CMMU_SIZE	0x1000

#if 0
/* interrupt vectors */

#define PPBSY		0x50		/* printer port busy */
#define PPPE		0x51		/* printer port PE   */
#define PPSEL		0x52		/* printer port select */
#define PPFLT		0x53		/* printer port fault */
#define PPACK		0x54		/* printer port ack */
#define SCSIIRQ		0x55		/* SCSI IRQ */
#define LANCERR		0x56		/* LANC ERR */
#define LANCIRQ		0x57		/* LANC IRQ */
#define TIMER2IRQ	0x58		/* Tick Timer 2 vec */
#define TIMER1IRQ	0x59		/* Tick Timer 1 vec */
#define GPIOIRQ		0x5A		/* GPIO IRQ */
#define SRXEXIRQ	0x5C		/* Serial RX Exception IRQ */
#define SRMIRQ		0x5D		/* Serial Modem IRQ */
#define STXIRQ		0x5E		/* Serial TX IRQ */
#define SRXIRQ		0x5F		/* Serial RX IRQ */
#endif /* 0 */
@


1.3
log
@Cleanup after import. This also seems to bring up the current version.
@
text
@d1 1
@


1.2
log
@This is a remove to get rid of the old mvme88k port which was incomplete
to replace it with a working version. The kernel compiles and works
at least.  The new version will be imported shortly.
@
text
@d1 43
d72 6
a77 5
#define IO_SPACE_START	U(0xFFF00000)	/* start of local IO */
#define IO_SPACE_END	U(0xFFFFFFFF)	/* end of io space */

#define ILLADDRESS	U(0x0F000000)	/* any faulty address */
#define PROM_ADDR	U(0xFF800000) 	/* PROM */
d85 1
a85 1
#define	PCC_ADDR	U(0xFFF42000)	/* PCCchip2 Regs */
d90 1
d104 1
d106 1
d124 1
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@initial 88k import; code by nivas and based on mach luna88k
@
text
@@


1.1.1.2
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@a0 43
/*
 * Copyright (c) 1996 Nivas Madhur
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Nivas Madhur.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
/*
 * Mach Operating System
 * Copyright (c) 1991 Carnegie Mellon University
 * Copyright (c) 1991 OMRON Corporation
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 */
d29 5
a33 6
#define BUGROM_START	U(0xFF800000)	/* start of BUG PROM */
#define BUGROM_SIZE	U(0x003FFFFF)	/* size of BUG PROM */
#define SRAM_START	U(0xFFE00000)	/* start of sram used by bug */
#define SRAM_SIZE	U(0x0001FFFF)	/* size of sram */
#define OBIO_START	U(0xFFF00000)	/* start of local IO */
#define OBIO_SIZE	U(0x000EFFFF)	/* size of obio space */
d41 1
a41 1
#define	PCC2_ADDR	U(0xFFF42000)	/* PCCchip2 Regs */
a45 1
#define NCR710_SIZE	U(0x00000040) 	/* NCR 710 size */
a58 1
#define CMMU_SIZE	0x1000
a59 1
#if 0
a76 1
#endif /* 0 */
@
