head	1.17;
access;
symbols
	OPENBSD_5_5:1.16.0.42
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.38
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.36
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.34
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.32
	OPENBSD_5_0:1.16.0.30
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.28
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.26
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.22
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.24
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.20
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.18
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.16
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.14
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.12
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.10
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.8
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.6
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.4
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.2
	OPENBSD_3_6_BASE:1.16
	SMP_SYNC_A:1.16
	SMP_SYNC_B:1.16
	OPENBSD_3_5:1.14.0.2
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.12.0.8
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.12
	UBC:1.11.0.2
	UBC_BASE:1.11
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.8
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.6
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	mvme88kport:1.1.1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	first_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.16;

1.16
date	2004.04.26.14.31.11;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2004.04.26.12.34.05;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2003.10.11.22.08.57;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2003.09.26.19.04.28;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.12.20.06.33.16;	author smurph;	state Exp;
branches;
next	1.11;

1.11
date	2001.12.16.23.49.46;	author miod;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2001.12.13.08.55.51;	author smurph;	state Exp;
branches;
next	1.9;

1.9
date	2001.07.01.23.26.35;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2001.03.09.05.44.40;	author smurph;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.07.23.37.17;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.12.08.16.23;	author smurph;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.06.15.25.04;	author ho;	state Exp;
branches;
next	1.4;

1.4
date	99.02.09.06.36.27;	author smurph;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	97.03.03.20.21.12;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	97.03.03.19.07.43;	author rahnds;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.10.54.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.10.54.21;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.03.03.19.31.14;	author rahnds;	state Exp;
branches;
next	;

1.4.6.1
date	2001.04.18.16.11.26;	author niklas;	state Exp;
branches;
next	1.4.6.2;

1.4.6.2
date	2001.07.04.10.20.05;	author niklas;	state Exp;
branches;
next	1.4.6.3;

1.4.6.3
date	2002.03.06.02.04.44;	author niklas;	state Exp;
branches;
next	1.4.6.4;

1.4.6.4
date	2004.02.19.10.49.07;	author niklas;	state Exp;
branches;
next	1.4.6.5;

1.4.6.5
date	2004.06.05.23.09.50;	author niklas;	state Exp;
branches;
next	;

1.11.2.1
date	2002.01.31.22.55.18;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/* $OpenBSD: psl.h,v 1.16 2004/04/26 14:31:11 miod Exp $ */
/* public domain */
#include <m88k/psl.h>
@


1.16
log
@Fix RCSID
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.15
log
@Start factorizing luna88k and mvme88k common parts.
For now, include files only.
@
text
@d1 1
a1 1
/* $OpenBSD */
@


1.14
log
@Nuke trailing whitespace.
@
text
@d1 3
a3 93
/*	$OpenBSD: psl.h,v 1.13 2003/09/26 19:04:28 miod Exp $ */
/*
 * Copyright (c) 1996 Nivas Madhur
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Nivas Madhur.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
/*
 * Mach Operating System
 * Copyright (c) 1991 Carnegie Mellon University
 * Copyright (c) 1991 OMRON Corporation
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 */

#ifndef __M88K_PSL_H__
#define __M88K_PSL_H__

/*
 * 88100 control registers
 */

/*
 * processor identification register (PID)
 */
#define PID_ARN		0x0000FF00U	/* architectural revision number */
#define PID_VN		0x000000FEU	/* version number */
#define PID_MC		0x00000001U	/* master/checker */

/*
 * processor status register
 */

#define PSR_MODE	0x80000000U	/* supervisor/user mode */
#define PSR_BO		0x40000000U	/* byte-ordering 0:big 1:little */
#define PSR_SER		0x20000000U	/* 88110 serial mode */
#define PSR_C		0x10000000U	/* carry */
#define PSR_SGN		0x04000000U	/* 88110 Signed Immediate mode */
#define PSR_SRM		0x02000000U	/* 88110 Serialize Memory */
#define PSR_TRACE	0x00800000U	/* 88110 hardware trace */
#define PSR_SFD		0x000003E0U	/* SFU disable */
#define PSR_SFD2	0x00000010U	/* 88110 SFU2 (Graphics) disable */
#define PSR_SFD1	0x00000008U	/* SFU1 (FPU) disable */
#define PSR_MXM		0x00000004U	/* misaligned access enable */
#define PSR_IND		0x00000002U	/* interrupt disable */
#define PSR_SFRZ	0x00000001U	/* shadow freeze */

#define PSR_SUPERVISOR	(PSR_MODE | PSR_SFD)
#define PSR_USER	(PSR_SFD)
#define PSR_SET_BY_USER	(PSR_BO | PSR_SER | PSR_C | PSR_MXM)

#define FIP_V		0x00000002U	/* valid */
#define FIP_E		0x00000001U	/* exception */
#define FIP_ADDR	0xFFFFFFFCU	/* address mask */
#define NIP_V		0x00000002U	/* valid */
#define NIP_E		0x00000001U	/* exception */
#define NIP_ADDR	0xFFFFFFFCU	/* address mask */
#define XIP_V		0x00000002U	/* valid */
#define XIP_E		0x00000001U	/* exception */
#define XIP_ADDR	0xFFFFFFFCU	/* address mask */

#endif /* __M88K_PSL_H__ */

@


1.13
log
@Death to bitfields, this time "struct psr".
Also clean <machine/psl.h> contents while there.
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.12 2001/12/20 06:33:16 smurph Exp $ */
d49 1
a49 1
/* 
@


1.12
log
@MC88110 Processor Status Register definitions.
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.11 2001/12/16 23:49:46 miod Exp $ */
d45 3
a47 2
#ifndef __M88K_M88100_PSL_H__
#define __M88K_M88100_PSL_H__
a76 4
/*
 *	This is used in ext_int() and hard_clock().
 */
#define PSR_IPL		0x00001000	/* for basepri */
a81 22
#ifndef	_LOCORE
struct psr {
    unsigned
	psr_mode: 1,
	psr_bo  : 1,
	psr_ser : 1, /* mc88110 */
	psr_c   : 1,
	        : 1,
	psr_sgn : 1, /* mc88110 */
	psr_srm : 1, /* mc88110 */
	        : 1,
	psr_trc	: 1, /* mc88110 */
		:13,
	psr_sfd : 5,
	psr_sfd2: 1, /* mc88110 */
	psr_sfd1: 1,
	psr_mxm : 1,
	psr_ind : 1,
	psr_sfrz: 1;
};
#endif 

d92 1
a92 1
#endif /* __M88K_M88100_PSL_H__ */
@


1.11
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.9 2001/07/01 23:26:35 miod Exp $ */
d62 1
d65 1
a65 1
#define PSR_SER		0x20000000U	/* serial mode */
d67 5
a71 1
#define PSR_SFD		0x000003F0U	/* SFU disable */
d90 1
a90 1
	psr_ser : 1,
d92 8
a99 2
	        :18,
	psr_sfd : 6,
@


1.11.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.12 2001/12/20 06:33:16 smurph Exp $ */
a61 1

d64 1
a64 1
#define PSR_SER		0x20000000U	/* 88110 serial mode */
d66 1
a66 5
#define PSR_SGN		0x04000000U	/* 88110 Signed Immediate mode */
#define PSR_SRM		0x02000000U	/* 88110 Serialize Memory */
#define PSR_TRACE	0x00800000U	/* 88110 hardware trace */
#define PSR_SFD		0x000003E0U	/* SFU disable */
#define PSR_SFD2	0x00000010U	/* 88110 SFU2 (Graphics) disable */
d85 1
a85 1
	psr_ser : 1, /* mc88110 */
d87 2
a88 8
	        : 1,
	psr_sgn : 1, /* mc88110 */
	psr_srm : 1, /* mc88110 */
	        : 1,
	psr_trc	: 1, /* mc88110 */
		:13,
	psr_sfd : 5,
	psr_sfd2: 1, /* mc88110 */
@


1.10
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@a61 1

d64 1
a64 1
#define PSR_SER		0x20000000U	/* 88110 serial mode */
d66 1
a66 5
#define PSR_SGN		0x04000000U	/* 88110 Signed Immediate mode */
#define PSR_SRM		0x02000000U	/* 88110 Serialize Memory */
#define PSR_TRACE	0x00800000U	/* 88110 hardware trace */
#define PSR_SFD		0x000003E0U	/* SFU disable */
#define PSR_SFD2	0x00000010U	/* 88110 SFU2 (Graphics) disable */
d85 1
a85 1
	psr_ser : 1, /* mc88110 */
d87 2
a88 8
	        : 1,
	psr_sgn : 1, /* mc88110 */
	psr_srm : 1, /* mc88110 */
	        : 1,
	psr_trc	: 1, /* mc88110 */
		:13,
	psr_sfd : 5,
	psr_sfd2: 1, /* mc88110 */
@


1.9
log
@Misc cleaning.
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.8 2001/03/09 05:44:40 smurph Exp $ */
d62 1
d65 1
a65 1
#define PSR_SER		0x20000000U	/* serial mode */
d67 5
a71 1
#define PSR_SFD		0x000003F0U	/* SFU disable */
d90 1
a90 1
	psr_ser : 1,
d92 8
a99 2
	        :18,
	psr_sfd : 6,
@


1.8
log
@kernel will compile with -Werror.  Added intr.h
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.7 2001/03/07 23:37:17 miod Exp $ */
a61 1
#ifndef PSR_MODE
a62 1
#endif
a67 1
#ifndef PSR_MXM
a68 2
#endif
#ifndef PSR_IND
a69 2
#endif
#ifndef PSR_SFRZ
a70 1
#endif
a74 9
#define PSR_IPL_LOG	12		/* = log2(PSR_IPL) */

#define PSR_MODE_LOG	31		/* = log2(PSR_MODE) */
#define PSR_BO_LOG	30		/* = log2(PSR_BO) */
#define PSR_SER_LOG	29		/* = log2(PSR_SER) */
#define PSR_SFD1_LOG	3		/* = log2(PSR_SFD1) */
#define PSR_MXM_LOG	2		/* = log2(PSR_MXM) */
#define PSR_IND_LOG	1		/* = log2(PSR_IND) */
#define PSR_SFRZ_LOG	0		/* = log2(PSR_SFRZ) */
@


1.7
log
@Inclusion from assembly code is detected with _LOCORE, no more fancy symbols.
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.6 2001/02/12 08:16:23 smurph Exp $ */
a46 92

/*
 * INTERRUPT STAT levels.  for 'systat vmstat'
 * intrcnt and friends are defined in locore.S
 * XXX smurph
 */
#ifndef _LOCORE

#define M88K_NIRQ	12

#define M88K_SPUR_IRQ	0
#define M88K_LEVEL1_IRQ	1
#define M88K_LEVEL2_IRQ	2
#define M88K_LEVEL3_IRQ	3
#define M88K_LEVEL4_IRQ	4
#define M88K_LEVEL5_IRQ	5
#define M88K_LEVEL6_IRQ	6
#define M88K_LEVEL7_IRQ	7
/* 
 * We keep track of these seperately, but   
 * they will be reflected with the above also.
 */
#define M88K_CLK_IRQ	8
#define M88K_SCLK_IRQ	9
#define M88K_PCLK_IRQ	10
#define M88K_NMI_IRQ	11

extern int intrcnt[M88K_NIRQ];

#endif 


/* needs major cleanup - XXX nivas */

#ifndef _LOCORE
unsigned setipl __P((unsigned));
#endif

#if 0
spl0 is a function by itself. I really am serious about the clean up
above...
#define spl0()		spln(0)
#else
#ifndef _LOCORE
int spl0 __P((void));
#endif
#endif /* 0 */
#define spl1()		setipl(1)
#define spl2()		setipl(2)
#define spl3()		setipl(3)
#define spl4()		setipl(4)
#define spl5()		setipl(5)
#define spl6()		setipl(6)
#define spl7()		setipl(7)

/*
 * IPL levels.
 * We use 6 as IPL_HIGH so that abort can be programmed at 7 so that
 * it is always possible to break into the system unless interrupts
 * are disabled.
 */

#define IPL_NONE	0
#define IPL_SOFTCLOCK	1
#define IPL_SOFTNET	1
#define IPL_BIO		2
#define IPL_NET		3
#define IPL_TTY		3
#define IPL_CLOCK	5
#define IPL_STATCLOCK	5
#define IPL_IMP		6
#define IPL_VM		6
#define IPL_HIGH	6
#define IPL_SCHED	6
#define IPL_NMI		7
#define IPL_ABORT	7

#define splnone			spl0
#define spllowersoftclock()	setipl(IPL_SOFTCLOCK)
#define splsoftclock()		setipl(IPL_SOFTCLOCK)
#define splsoftnet()		setipl(IPL_SOFTNET)
#define splbio()		setipl(IPL_BIO)
#define splnet()		setipl(IPL_NET)
#define spltty()		setipl(IPL_TTY)
#define splclock()		setipl(IPL_CLOCK)
#define splstatclock()		setipl(IPL_STATCLOCK)
#define splimp()		setipl(IPL_IMP)
#define splvm()			setipl(IPL_VM)
#define splhigh()		setipl(IPL_HIGH)
#define splsched()		setipl(IPL_SCHED)

#define splx(x)		((x) ? setipl((x)) : spl0())
@


1.6
log
@correct buginstat(), statclock now working for '188, systat vmstat now works,
serial driver for '188 working better.
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.5 2000/07/06 15:25:04 ho Exp $ */
d81 4
d89 4
d189 1
a189 1
#ifndef	ASSEMBLER
@


1.5
log
@Add spllowersoftclock(), same as splsoftclock(). (art@@ ok)
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.4 1999/02/09 06:36:27 smurph Exp $ */
d47 31
@


1.4
log
@Added kernel support for user debugging.  Fixed file ID's
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.1 1998/12/15 06:02:55 smurph Exp $ */
d85 13
a97 12
#define splnone		spl0
#define splsoftclock()	setipl(IPL_SOFTCLOCK)
#define splsoftnet()	setipl(IPL_SOFTNET)
#define splbio()	setipl(IPL_BIO)
#define splnet()	setipl(IPL_NET)
#define spltty()	setipl(IPL_TTY)
#define splclock()	setipl(IPL_CLOCK)
#define splstatclock()	setipl(IPL_STATCLOCK)
#define splimp()	setipl(IPL_IMP)
#define splvm()		setipl(IPL_VM)
#define splhigh()	setipl(IPL_HIGH)
#define splsched()	setipl(IPL_SCHED)
@


1.4.6.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.8 2001/03/09 05:44:40 smurph Exp $ */
d48 52
d149 1
a149 1
#ifndef	_LOCORE
@


1.4.6.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: psl.h,v 1.4.6.1 2001/04/18 16:11:26 niklas Exp $ */
d62 1
d64 1
d70 1
d72 2
d75 2
d78 1
d83 9
@


1.4.6.3
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a61 1

d64 1
a64 1
#define PSR_SER		0x20000000U	/* 88110 serial mode */
d66 1
a66 5
#define PSR_SGN		0x04000000U	/* 88110 Signed Immediate mode */
#define PSR_SRM		0x02000000U	/* 88110 Serialize Memory */
#define PSR_TRACE	0x00800000U	/* 88110 hardware trace */
#define PSR_SFD		0x000003E0U	/* SFU disable */
#define PSR_SFD2	0x00000010U	/* 88110 SFU2 (Graphics) disable */
d85 1
a85 1
	psr_ser : 1, /* mc88110 */
d87 2
a88 8
	        : 1,
	psr_sgn : 1, /* mc88110 */
	psr_srm : 1, /* mc88110 */
	        : 1,
	psr_trc	: 1, /* mc88110 */
		:13,
	psr_sfd : 5,
	psr_sfd2: 1, /* mc88110 */
@


1.4.6.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d45 2
d48 1
a48 4
#ifndef __M88K_PSL_H__
#define __M88K_PSL_H__

/*
d76 4
d85 22
d117 1
a117 1
#endif /* __M88K_PSL_H__ */
@


1.4.6.5
log
@Merge with the trunk
@
text
@d1 93
a93 3
/* $OpenBSD$ */
/* public domain */
#include <m88k/psl.h>
@


1.3
log
@Cleanup after import. This also seems to bring up the current version.
@
text
@d1 1
d114 1
d116 1
d122 1
d124 2
d127 2
d130 1
a130 1

@


1.2
log
@This is a remove to get rid of the old mvme88k port which was incomplete
to replace it with a working version. The kernel compiles and works
at least.  The new version will be imported shortly.
@
text
@d1 43
d49 3
d53 8
a60 19
#define spl1()		spln(1)
#define spl2()		spln(2)
#define spl3()		spln(3)
#define spl4()		spln(4)
#define spl5()		spln(5)
#define spl6()		spln(6)
#define spl7()		spln(7)

#define splnone()	spln(0)
#define splsoftclock()	spln(1)
#define splnet()	spln(1)
#define splbio()	spln(3)
#define splimp()	spln(3)
#define spltty()	spln(4)
#define splclock()	spln(6)
#define splstatclock()	spln(6)
#define splvm()		spln(6)
#define splhigh()	spln(7)
#define splsched()	spln(7)
d62 36
a97 1
#define splx(x)		spln(x)
d168 1
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@initial 88k import; code by nivas and based on mach luna88k
@
text
@@


1.1.1.2
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@a0 43
/*
 * Copyright (c) 1996 Nivas Madhur
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Nivas Madhur.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
/*
 * Mach Operating System
 * Copyright (c) 1991 Carnegie Mellon University
 * Copyright (c) 1991 OMRON Corporation
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 */
a5 3
#if 0
spl0 is a function by itself. I really am serious about the clean up
above...
d7 19
a25 8
#endif /* 0 */
#define spl1()		setipl(1)
#define spl2()		setipl(2)
#define spl3()		setipl(3)
#define spl4()		setipl(4)
#define spl5()		setipl(5)
#define spl6()		setipl(6)
#define spl7()		setipl(7)
d27 1
a27 36
/*
 * IPL levels.
 * We use 6 as IPL_HIGH so that abort can be programmed at 7 so that
 * it is always possible to break into the system unless interrupts
 * are disabled.
 */

#define IPL_NONE	0
#define IPL_SOFTCLOCK	1
#define IPL_SOFTNET	1
#define IPL_BIO		2
#define IPL_NET		3
#define IPL_TTY		3
#define IPL_CLOCK	5
#define IPL_STATCLOCK	5
#define IPL_IMP		6
#define IPL_VM		6
#define IPL_HIGH	6
#define IPL_SCHED	6
#define IPL_NMI		7
#define IPL_ABORT	7

#define splnone		spl0
#define splsoftclock()	setipl(IPL_SOFTCLOCK)
#define splsoftnet()	setipl(IPL_SOFTNET)
#define splbio()	setipl(IPL_BIO)
#define splnet()	setipl(IPL_NET)
#define spltty()	setipl(IPL_TTY)
#define splclock()	setipl(IPL_CLOCK)
#define splstatclock()	setipl(IPL_STATCLOCK)
#define splimp()	setipl(IPL_IMP)
#define splvm()		setipl(IPL_VM)
#define splhigh()	setipl(IPL_HIGH)
#define splsched()	setipl(IPL_SCHED)

#define splx(x)		((x) ? setipl((x)) : spl0())
a97 1

@
