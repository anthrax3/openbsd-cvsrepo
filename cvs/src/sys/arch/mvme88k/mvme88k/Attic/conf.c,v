head	1.49;
access;
symbols
	OPENBSD_5_5:1.48.0.6
	OPENBSD_5_5_BASE:1.48
	OPENBSD_5_4:1.48.0.2
	OPENBSD_5_4_BASE:1.48
	OPENBSD_5_3:1.47.0.2
	OPENBSD_5_3_BASE:1.47
	OPENBSD_5_2:1.46.0.4
	OPENBSD_5_2_BASE:1.46
	OPENBSD_5_1_BASE:1.46
	OPENBSD_5_1:1.46.0.2
	OPENBSD_5_0:1.44.0.4
	OPENBSD_5_0_BASE:1.44
	OPENBSD_4_9:1.44.0.2
	OPENBSD_4_9_BASE:1.44
	OPENBSD_4_8:1.41.0.2
	OPENBSD_4_8_BASE:1.41
	OPENBSD_4_7:1.39.0.2
	OPENBSD_4_7_BASE:1.39
	OPENBSD_4_6:1.38.0.4
	OPENBSD_4_6_BASE:1.38
	OPENBSD_4_5:1.37.0.4
	OPENBSD_4_5_BASE:1.37
	OPENBSD_4_4:1.36.0.2
	OPENBSD_4_4_BASE:1.36
	OPENBSD_4_3:1.34.0.4
	OPENBSD_4_3_BASE:1.34
	OPENBSD_4_2:1.34.0.2
	OPENBSD_4_2_BASE:1.34
	OPENBSD_4_1:1.31.0.4
	OPENBSD_4_1_BASE:1.31
	OPENBSD_4_0:1.31.0.2
	OPENBSD_4_0_BASE:1.31
	OPENBSD_3_9:1.30.0.10
	OPENBSD_3_9_BASE:1.30
	OPENBSD_3_8:1.30.0.8
	OPENBSD_3_8_BASE:1.30
	OPENBSD_3_7:1.30.0.6
	OPENBSD_3_7_BASE:1.30
	OPENBSD_3_6:1.30.0.4
	OPENBSD_3_6_BASE:1.30
	SMP_SYNC_A:1.30
	SMP_SYNC_B:1.30
	OPENBSD_3_5:1.30.0.2
	OPENBSD_3_5_BASE:1.30
	OPENBSD_3_4:1.26.0.2
	OPENBSD_3_4_BASE:1.26
	UBC_SYNC_A:1.25
	OPENBSD_3_3:1.24.0.2
	OPENBSD_3_3_BASE:1.24
	OPENBSD_3_2:1.23.0.2
	OPENBSD_3_2_BASE:1.23
	OPENBSD_3_1:1.20.0.6
	OPENBSD_3_1_BASE:1.20
	UBC_SYNC_B:1.23
	UBC:1.20.0.4
	UBC_BASE:1.20
	OPENBSD_3_0:1.20.0.2
	OPENBSD_3_0_BASE:1.20
	OPENBSD_2_9:1.15.0.2
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_8:1.13.0.2
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.12.0.6
	OPENBSD_2_7_BASE:1.12
	SMP:1.12.0.4
	SMP_BASE:1.12
	kame_19991208:1.12
	OPENBSD_2_6:1.12.0.2
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.8.0.2
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	mvme88kport:1.1.1.1
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4;
locks; strict;
comment	@ * @;


1.49
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.48;

1.48
date	2013.06.03.17.33.58;	author tedu;	state Exp;
branches;
next	1.47;

1.47
date	2012.08.23.06.12.49;	author deraadt;	state Exp;
branches;
next	1.46;

1.46
date	2011.10.06.20.49.28;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	2011.10.06.19.50.59;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2011.01.14.19.04.08;	author jasper;	state Exp;
branches;
next	1.43;

1.43
date	2010.11.22.21.10.45;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2010.09.23.05.02.14;	author claudio;	state Exp;
branches;
next	1.41;

1.41
date	2010.07.03.03.59.17;	author krw;	state Exp;
branches;
next	1.40;

1.40
date	2010.06.09.15.25.33;	author jsing;	state Exp;
branches;
next	1.39;

1.39
date	2009.08.13.15.04.20;	author dlg;	state Exp;
branches;
next	1.38;

1.38
date	2009.06.03.14.45.52;	author jj;	state Exp;
branches;
next	1.37;

1.37
date	2009.01.25.17.30.49;	author miod;	state Exp;
branches;
next	1.36;

1.36
date	2008.05.14.20.49.48;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2008.04.08.14.31.54;	author claudio;	state Exp;
branches;
next	1.34;

1.34
date	2007.05.28.22.26.03;	author todd;	state Exp;
branches;
next	1.33;

1.33
date	2007.05.27.01.50.36;	author todd;	state Exp;
branches;
next	1.32;

1.32
date	2007.05.26.19.54.24;	author todd;	state Exp;
branches;
next	1.31;

1.31
date	2006.05.02.21.43.09;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2004.02.10.01.31.21;	author millert;	state Exp;
branches;
next	1.29;

1.29
date	2004.01.20.10.34.24;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	2003.09.26.06.58.04;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2003.09.23.16.51.11;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2003.06.02.23.27.52;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2003.05.14.00.20.37;	author tedu;	state Exp;
branches;
next	1.24;

1.24
date	2002.12.05.02.49.55;	author kjc;	state Exp;
branches;
next	1.23;

1.23
date	2002.07.10.22.08.47;	author mickey;	state Exp;
branches;
next	1.22;

1.22
date	2002.05.16.21.11.16;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2002.04.28.15.17.09;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2001.09.28.02.53.13;	author mickey;	state Exp;
branches
	1.20.4.1;
next	1.19;

1.19
date	2001.08.23.22.33.23;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2001.08.06.22.34.44;	author mickey;	state Exp;
branches;
next	1.17;

1.17
date	2001.06.27.06.56.29;	author kjc;	state Exp;
branches;
next	1.16;

1.16
date	2001.06.25.03.20.09;	author kjell;	state Exp;
branches;
next	1.15;

1.15
date	2001.03.12.22.57.30;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2001.03.08.00.03.30;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2000.09.26.14.03.54;	author art;	state Exp;
branches;
next	1.12;

1.12
date	99.09.27.19.13.21;	author smurph;	state Exp;
branches
	1.12.4.1;
next	1.11;

1.11
date	99.05.29.04.41.46;	author smurph;	state Exp;
branches;
next	1.10;

1.10
date	99.02.09.06.36.28;	author smurph;	state Exp;
branches;
next	1.9;

1.9
date	98.12.15.05.11.01;	author smurph;	state Exp;
branches;
next	1.8;

1.8
date	98.09.25.09.20.53;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	97.03.03.20.21.31;	author rahnds;	state Exp;
branches;
next	1.6;

1.6
date	97.03.03.19.08.00;	author rahnds;	state dead;
branches;
next	1.5;

1.5
date	96.10.19.13.26.10;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.08.29.09.26.19;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.07.15.14.57.04;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.05.04.18.50.53;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.12.32.19;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.03.19.32.29;	author rahnds;	state Exp;
branches;
next	;

1.12.4.1
date	2001.04.18.16.11.30;	author niklas;	state Exp;
branches;
next	1.12.4.2;

1.12.4.2
date	2001.07.04.10.20.08;	author niklas;	state Exp;
branches;
next	1.12.4.3;

1.12.4.3
date	2001.10.31.03.01.19;	author nate;	state Exp;
branches;
next	1.12.4.4;

1.12.4.4
date	2003.03.27.23.32.18;	author niklas;	state Exp;
branches;
next	1.12.4.5;

1.12.4.5
date	2003.05.16.00.29.39;	author niklas;	state Exp;
branches;
next	1.12.4.6;

1.12.4.6
date	2003.06.07.11.13.17;	author ho;	state Exp;
branches;
next	1.12.4.7;

1.12.4.7
date	2004.02.19.10.49.07;	author niklas;	state Exp;
branches;
next	1.12.4.8;

1.12.4.8
date	2004.06.05.23.09.50;	author niklas;	state Exp;
branches;
next	;

1.20.4.1
date	2002.06.11.03.37.10;	author art;	state Exp;
branches;
next	1.20.4.2;

1.20.4.2
date	2002.10.29.00.28.07;	author art;	state Exp;
branches;
next	1.20.4.3;

1.20.4.3
date	2003.05.19.21.45.53;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.49
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: conf.c,v 1.48 2013/06/03 17:33:58 tedu Exp $	*/

/*-
 * Copyright (c) 1991 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *      @@(#)conf.c	7.9 (Berkeley) 5/28/91
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/vnode.h>

#include <machine/conf.h>

#include "bio.h"
#include "pty.h"
#include "bpfilter.h"
#include "tun.h"
#include "vnd.h"
#include "rd.h"
#include "cd.h"
#include "ch.h"
#include "sd.h"
#include "st.h"
#include "uk.h"

#include "ksyms.h"

#include "sram.h"
#include "nvram.h"
#include "vmel.h"
#include "vmes.h"
#include "dart.h"
#include "cl.h"
#include "vx.h"

#ifdef notyet
#include "xd.h"
bdev_decl(xd);
cdev_decl(xd);
#endif /* notyet */

#ifdef notyet
#include "flash.h"
cdev_decl(flash);
#endif /* notyet */

/* open, close, write, ioctl */
#define	cdev_lp_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	dev_init(c,n,write), dev_init(c,n,ioctl), (dev_type_stop((*))) enodev, \
	0, seltrue, (dev_type_mmap((*))) enodev }

/* open, close, ioctl, mmap, ioctl */
#define	cdev_mdev_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	dev_init(c,n,write), dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, (dev_type_poll((*))) enodev, \
	dev_init(c,n,mmap) }

#if notyet
#include "lp.h"
cdev_decl(lp);
#include "lptwo.h"
cdev_decl(lptwo);
#endif /* notyet */

#include "pf.h"

#include "systrace.h"

#include "vscsi.h"
#include "pppx.h"
#include "fuse.h"

struct bdevsw	bdevsw[] =
{
	bdev_notdef(),			/* 0 */
	bdev_notdef(),			/* 1 */
	bdev_notdef(),			/* 2 */
	bdev_swap_init(1,sw),		/* 3: swap pseudo-device */
	bdev_disk_init(NSD,sd),		/* 4: SCSI disk */
	bdev_tape_init(NST,st),		/* 5: SCSI tape */
	bdev_disk_init(NCD,cd),		/* 6: SCSI CD-ROM */
	bdev_disk_init(NRD,rd),		/* 7: ramdisk */
	bdev_disk_init(NVND,vnd),	/* 8: vnode disk driver */
	bdev_notdef(),			/* 9: was: concatenated disk driver */
#if notyet
	bdev_disk_init(NXD,xd),		/* 10: XD disk */
#else
	bdev_notdef(),			/* 10 */
#endif /* notyet */
	bdev_notdef(),			/* 11 */
	bdev_notdef(),			/* 12 */
	bdev_lkm_dummy(),		/* 13 */
	bdev_lkm_dummy(),		/* 14 */
	bdev_lkm_dummy(),		/* 15 */
	bdev_lkm_dummy(),		/* 16 */
	bdev_lkm_dummy(),		/* 17 */
	bdev_lkm_dummy(),		/* 18 */
};
int	nblkdev = nitems(bdevsw);

struct cdevsw	cdevsw[] =
{
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_ctty_init(1,ctty),		/* 1: controlling terminal */
	cdev_mm_init(1,mm),		/* 2: /dev/{null,mem,kmem,...} */
	cdev_notdef(),			/* 3 was /dev/drum */
	cdev_tty_init(NPTY,pts),	/* 4: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 5: pseudo-tty master */
	cdev_log_init(1,log),		/* 6: /dev/klog */
	cdev_mdev_init(NSRAM,sram),	/* 7: /dev/sramX */
	cdev_disk_init(NSD,sd),		/* 8: SCSI disk */
	cdev_disk_init(NCD,cd),		/* 9: SCSI CD-ROM */
	cdev_mdev_init(NNVRAM,nvram),	/* 10: /dev/nvramX */
#ifdef notyet
	cdev_mdev_init(NFLASH,flash),	/* 11: /dev/flashX */
#else
	cdev_notdef(),			/* 11: */
#endif /* notyet */
	cdev_tty_init(NDART,dart),	/* 12: MVME188 serial (tty[a-b]) */
	cdev_tty_init(NCL,cl),		/* 13: CL-CD1400 serial (tty0[0-3]) */
	cdev_notdef(),			/* 14 */
	cdev_tty_init(NVX,vx),		/* 15: MVME332XT serial/lpt ttyv[0-7][a-i] */
	cdev_notdef(),			/* 16 */
	cdev_notdef(),			/* 17: was: concatenated disk */
	cdev_disk_init(NRD,rd),		/* 18: ramdisk disk */
	cdev_disk_init(NVND,vnd),	/* 19: vnode disk */
	cdev_tape_init(NST,st),		/* 20: SCSI tape */
	cdev_fd_init(1,filedesc),	/* 21: file descriptor pseudo-dev */
	cdev_bpf_init(NBPFILTER,bpf),	/* 22: berkeley packet filter */
	cdev_tun_init(NTUN,tun),	/* 23: network tunnel */
	cdev_lkm_init(NLKM,lkm),	/* 24: loadable module driver */
	cdev_notdef(),			/* 25 */
#ifdef notyet
	cdev_disk_init(NXD,xd),		/* 26: XD disk */
#else
	cdev_notdef(),			/* 26: XD disk */
#endif /* notyet */
	cdev_notdef(),			/* 27 */
#ifdef notyet
	cdev_lp_init(NLP,lp),		/* 28: lp */
	cdev_lp_init(NLPTWO,lptwo),	/* 29: lptwo */
#else
	cdev_notdef(),			/* 28: lp */
	cdev_notdef(),			/* 29: lptwo */
#endif /* notyet */
	cdev_notdef(),			/* 30 */
	cdev_mdev_init(NVMEL,vmel),	/* 31: /dev/vmelX */
	cdev_mdev_init(NVMES,vmes),	/* 32: /dev/vmesX */
	cdev_lkm_dummy(),		/* 33 */
	cdev_lkm_dummy(),		/* 34 */
	cdev_lkm_dummy(),		/* 35 */
	cdev_lkm_dummy(),		/* 36 */
	cdev_lkm_dummy(),		/* 37 */
	cdev_lkm_dummy(),		/* 38 */
	cdev_pf_init(NPF,pf),		/* 39: packet filter */
	cdev_random_init(1,random),	/* 40: random data source */
	cdev_uk_init(NUK,uk),		/* 41 */
	cdev_notdef(),			/* 42 */
	cdev_ksyms_init(NKSYMS,ksyms),	/* 43: Kernel symbols device */
	cdev_ch_init(NCH,ch),		/* 44: SCSI autochanger */
	cdev_fuse_init(NFUSE,fuse),	/* 45: fuse */
	cdev_notdef(),			/* 46 */
	cdev_notdef(),			/* 47 */
	cdev_notdef(),			/* 48 */
	cdev_bio_init(NBIO,bio),	/* 49: ioctl tunnel */
	cdev_systrace_init(NSYSTRACE,systrace),	/* 50 system call tracing */
	cdev_notdef(),			/* 51 */
	cdev_ptm_init(NPTY,ptm),	/* 52: pseudo-tty ptm device */
	cdev_vscsi_init(NVSCSI,vscsi),	/* 53: vscsi */
	cdev_disk_init(1,diskmap),	/* 54: disk mapper */
	cdev_pppx_init(NPPPX,pppx),	/* 55: pppx */
};
int	nchrdev = nitems(cdevsw);

int	mem_no = 2;	/* major device number of memory special file */

/*
 * Swapdev is a fake device implemented
 * in sw.c used only internally to get to swstrategy.
 * It cannot be provided to the users, because the
 * swstrategy routine munches the b_dev and b_blkno entries
 * before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines. Instead, /dev/drum is
 * provided as a character (raw) device.
 */
dev_t	swapdev = makedev(3, 0);

/*
 * Returns true if dev is /dev/mem or /dev/kmem.
 */
int
iskmemdev(dev)
	dev_t dev;
{

	return (major(dev) == mem_no && minor(dev) < 2);
}

/*
 * Returns true if dev is /dev/zero.
 */
int
iszerodev(dev)
	dev_t dev;
{

	return (major(dev) == mem_no && minor(dev) == 12);
}

dev_t
getnulldev()
{
	return makedev(mem_no, 2);
}

int chrtoblktbl[] = {
	/* XXXX This needs to be dynamic for LKMs. */
	/*VCHR*/	/*VBLK*/
	/*  0 */	NODEV,
	/*  1 */	NODEV,
	/*  2 */	NODEV,
	/*  3 */	NODEV,
	/*  4 */	NODEV,
	/*  5 */	NODEV,
	/*  6 */	NODEV,
	/*  7 */	NODEV,
	/*  8 */	4,	/* sd */
	/*  9 */	6,	/* cd */
	/* 10 */	NODEV,
	/* 11 */	NODEV,
	/* 12 */	NODEV,
	/* 13 */	NODEV,
	/* 14 */	NODEV,
	/* 15 */	NODEV,
	/* 16 */	NODEV,
	/* 17 */	NODEV,
	/* 18 */	7,	/* rd */
	/* 19 */	8,	/* vnd */
	/* 20 */	5,	/* st */
	/* 21 */	NODEV,
	/* 22 */	NODEV,
	/* 23 */	NODEV,
	/* 24 */	NODEV,
	/* 25 */	NODEV,
	/* 26 */	10,	/* xd */
};
int nchrtoblktbl = nitems(chrtoblktbl);

#include <dev/cons.h>

#define clcnpollc	nullcnpollc
cons_decl(cl);
#define dartcnpollc	nullcnpollc
cons_decl(dart);

struct	consdev constab[] = {
#if NDART > 0
	cons_init(dart),
#endif
#if NCL > 0
	cons_init(cl),
#endif
	{ 0 },
};
@


1.48
log
@more fuse in more places. credit: miod
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.47 2012/08/23 06:12:49 deraadt Exp $	*/
@


1.47
log
@kill nnpfs dead
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.46 2011/10/06 20:49:28 deraadt Exp $	*/
d102 1
d192 1
a192 1
	cdev_notdef(),			/* 45 */
@


1.46
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.45 2011/10/06 19:50:59 deraadt Exp $	*/
a54 4
#ifdef NNPFS
#include <nnpfs/nnnpfs.h>
cdev_decl(nnpfs_dev);
#endif
a196 3
#ifdef NNPFS
	cdev_nnpfs_init(NNNPFS,nnpfs_dev),	/* 51: nnpfs communication device */
#else
a197 1
#endif
@


1.45
log
@An #ifdef without a #else in the middle of an indexed array is bad.
ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.44 2011/01/14 19:04:08 jasper Exp $	*/
a47 1
#include "ccd.h"
d118 1
a118 1
	bdev_disk_init(NCCD,ccd),	/* 9: concatenated disk driver */
d158 1
a158 1
	cdev_disk_init(NCCD,ccd),	/* 17: concatenated disk */
d274 1
a274 1
	/* 17 */	9,	/* ccd */
@


1.44
log
@- use nitems()

"doesn't hurt" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.43 2010/11/22 21:10:45 miod Exp $	*/
d122 2
@


1.43
log
@Remove old comment about constab[] being eventually generated by config(8).
This has never happened and this wouldn't make much sense on anything but
hp300, if at all, nowadays.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.42 2010/09/23 05:02:14 claudio Exp $	*/
d132 1
a132 1
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);
d210 1
a210 1
int	nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);
d284 1
a284 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.42
log
@Add pppx(4) to the cdevs of the remaining archs.
OK dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.41 2010/07/03 03:59:17 krw Exp $	*/
a285 6
/*
 * This entire table could be autoconfig()ed but that would mean that
 * the kernel's idea of the console would be out of sync with that of
 * the standalone boot.  I think it best that they both use the same
 * known algorithm unless we see a pressing need otherwise.
 */
@


1.41
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.40 2010/06/09 15:25:33 jsing Exp $	*/
d106 1
d208 1
@


1.40
log
@Wire up device nodes for disk mapper.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.38 2009/06/03 14:45:52 jj Exp $	*/
a52 1
#include "ss.h"
d190 1
a190 1
	cdev_ss_init(NSS,ss),		/* 42 */
@


1.39
log
@wire vscsi up to a cdev

for claudio@@ ok deraadt@@
@
text
@d207 1
@


1.38
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.37 2009/01/25 17:30:49 miod Exp $	*/
d106 2
d206 1
@


1.37
log
@Remove /dev/drum and related code.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.36 2008/05/14 20:49:48 miod Exp $	*/
d57 3
a59 3
#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
d198 2
a199 2
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),	/* 51: xfs communication device */
@


1.36
log
@Fix more chrtoblktbl[] sloppyness, and add proper block st nodes to *ppc and
sgi.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.35 2008/04/08 14:31:54 claudio Exp $	*/
d137 1
a137 1
	cdev_swap_init(1,sw),		/* 3: /dev/drum (swap pseudo-device) */
@


1.35
log
@Split the cdev makro for bpftun into two seperate definitions. tun(4) and
bpf(4) are different enough so that the split makes sense -- this is necessary
to make bpf(4) cloneable.
requested deraadt@@, OK thib@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.34 2007/05/28 22:26:03 todd Exp $	*/
d259 2
a260 2
	/*  8 */	4,	/* SCSI disk */
	/*  9 */	6,	/* SCSI CD-ROM */
d268 4
a271 4
	/* 17 */	NODEV,
	/* 18 */	7,	/* ram disk */
	/* 19 */	8,	/* vnode disk */
	/* 20 */	NODEV,
d277 1
a277 1
	/* 26 */	10,	/* XD disk */
@


1.34
log
@bio for all archs, ok krw@@ kettenis@@ sounds good marco@@ go for it deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.33 2007/05/27 01:50:36 todd Exp $	*/
d160 2
a161 2
	cdev_bpftun_init(NBPFILTER,bpf),/* 22: berkeley packet filter */
	cdev_bpftun_init(NTUN,tun),	/* 23: network tunnel */
@


1.33
log
@back out bio, breaks dlg's sparc64 v215
prompted by/ok dlg@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.32 2007/05/26 19:54:24 todd Exp $	*/
d43 1
d196 1
a196 1
	cdev_notdef(),			/* 49 */
@


1.32
log
@prodded by marco, enable bio everywhere
grudgingly ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.31 2006/05/02 21:43:09 miod Exp $	*/
a42 1
#include "bio.h"
d151 1
a151 1
	cdev_bio_init(NBIO,bio),	/* 14: ioctl tunnel */
@


1.31
log
@Wave goodbye to bugtty on mvme88k as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.30 2004/02/10 01:31:21 millert Exp $	*/
d43 1
d152 1
a152 1
	cdev_notdef(),			/* 14 */
@


1.30
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.29 2004/01/20 10:34:24 deraadt Exp $	*/
a67 1
#include "bugtty.h"
d151 1
a151 1
	cdev_tty_init(NBUGTTY,bugtty),	/* 14: BUGtty (ttyB) */
a287 2
#define bugttycnpollc	nullcnpollc
cons_decl(bugtty);
a298 3
#endif
#if NBUGTTY > 0
	cons_init(bugtty),
@


1.29
log
@let XFS compile; miod ok
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.28 2003/09/26 06:58:04 miod Exp $	*/
d203 1
@


1.28
log
@Add majors and devsw entries for the missing scsi devices on mvme*8k.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.27 2003/09/23 16:51:11 millert Exp $	*/
d58 1
a58 1
#cdev_decl(xfs_dev);
d199 1
a199 1
	cde_xfs_init(NXFS,xfs_dev),	/* 51: xfs communication device */
@


1.27
log
@Replace select backends with poll backends.  selscan() and pollscan()
now call the poll backend.  With this change we implement greater
poll(2) functionality instead of emulating it via the select backend.
Adapted from NetBSD and including some changes from FreeBSD.
Tested by many, deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.26 2003/06/02 23:27:52 millert Exp $	*/
d48 2
d52 1
d54 1
a54 2
#include "cd.h"
#include "rd.h"
d134 11
a144 11
	cdev_cn_init(1,cn),              /* 0: virtual console */
	cdev_ctty_init(1,ctty),          /* 1: controlling terminal */
	cdev_mm_init(1,mm),              /* 2: /dev/{null,mem,kmem,...} */
	cdev_swap_init(1,sw),            /* 3: /dev/drum (swap pseudo-device) */
	cdev_tty_init(NPTY,pts),         /* 4: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),         /* 5: pseudo-tty master */
	cdev_log_init(1,log),            /* 6: /dev/klog */
	cdev_mdev_init(NSRAM,sram),      /* 7: /dev/sramX */
	cdev_disk_init(NSD,sd),          /* 8: SCSI disk */
	cdev_disk_init(NCD,cd),          /* 9: SCSI CD-ROM */
	cdev_mdev_init(NNVRAM,nvram),    /* 10: /dev/nvramX */
d146 1
a146 1
	cdev_mdev_init(NFLASH,flash),    /* 11: /dev/flashX */
d148 1
a148 1
	cdev_notdef(),                   /* 11: */
d150 14
a163 14
	cdev_tty_init(NDART,dart),       /* 12: MVME188 serial (tty[a-b]) */
	cdev_tty_init(NCL,cl),           /* 13: CL-CD1400 serial (tty0[0-3]) */
	cdev_tty_init(NBUGTTY,bugtty),   /* 14: BUGtty (ttyB) */
	cdev_tty_init(NVX,vx),           /* 15: MVME332XT serial/lpt ttyv[0-7][a-i] */
	cdev_notdef(),                   /* 16 */
	cdev_disk_init(NCCD,ccd),        /* 17: concatenated disk */
	cdev_disk_init(NRD,rd),          /* 18: ramdisk disk */
	cdev_disk_init(NVND,vnd),        /* 19: vnode disk */
	cdev_tape_init(NST,st),          /* 20: SCSI tape */
	cdev_fd_init(1,filedesc),        /* 21: file descriptor pseudo-dev */
	cdev_bpftun_init(NBPFILTER,bpf), /* 22: berkeley packet filter */
	cdev_bpftun_init(NTUN,tun),      /* 23: network tunnel */
	cdev_lkm_init(NLKM,lkm),         /* 24: loadable module driver */
	cdev_notdef(),                   /* 25 */
d165 1
a165 1
	cdev_disk_init(NXD,xd),          /* 26: XD disk */
d167 1
a167 1
	cdev_notdef(),                   /* 26: XD disk */
d169 1
a169 1
	cdev_notdef(),                   /* 27 */
d171 5
a175 5
	cdev_lp_init(NLP,lp),            /* 28: lp */
	cdev_lp_init(NLPTWO,lptwo),      /* 29: lptwo */
#else                      
	cdev_notdef(),                   /* 28: lp */
	cdev_notdef(),                   /* 29: lptwo */
d177 20
a196 20
	cdev_notdef(),                   /* 30 */
	cdev_mdev_init(NVMEL,vmel),      /* 31: /dev/vmelX */
	cdev_mdev_init(NVMES,vmes),      /* 32: /dev/vmesX */
	cdev_lkm_dummy(),                /* 33 */
	cdev_lkm_dummy(),                /* 34 */
	cdev_lkm_dummy(),                /* 35 */
	cdev_lkm_dummy(),                /* 36 */
	cdev_lkm_dummy(),                /* 37 */
	cdev_lkm_dummy(),                /* 38 */
	cdev_pf_init(NPF,pf),		 /* 39: packet filter */
	cdev_random_init(1,random),	 /* 40: random data source */
	cdev_notdef(),                   /* 41 */
	cdev_notdef(),                   /* 42 */
	cdev_ksyms_init(NKSYMS,ksyms),	 /* 43: Kernel symbols device */
	cdev_notdef(),                   /* 44 */
	cdev_notdef(),                   /* 45 */
	cdev_notdef(),                   /* 46 */
	cdev_notdef(),                   /* 47 */
	cdev_notdef(),                   /* 48 */
	cdev_notdef(),                   /* 49 */
d199 1
a199 1
	cde_xfs_init(NXFS,xfs_dev),      /* 51: xfs communication device */
d201 1
a201 1
	cdev_notdef(),                   /* 51 */
d206 1
a206 1
int	mem_no = 2; 	/* major device number of memory special file */
d258 2
a259 2
	/*  8 */	4,    /* SCSI disk */
	/*  9 */	6,    /* SCSI CD-ROM */
d268 2
a269 2
	/* 18 */	7,    /* ram disk */
	/* 19 */	8,    /* vnode disk */
d276 1
a276 1
	/* 26 */	10,   /* XD disk */
@


1.26
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.25 2003/05/14 00:20:37 tedu Exp $	*/
d90 1
a90 1
	(dev_type_stop((*))) enodev, 0, (dev_type_select((*))) enodev, \
@


1.25
log
@add {b,c}devsw_lookup convenience functions.
move chrtoblk and blktochr into MI code.
tested on several archs and ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.24 2002/12/05 02:49:55 kjc Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.24
log
@remove altq entries.
altq is merged into pf and handled through pf.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.23 2002/07/10 22:08:47 mickey Exp $	*/
d249 1
a249 1
static int chrtoblktbl[] = {
d280 1
a280 36

/*
 * Convert a character device number to a block device number.
 */
dev_t
chrtoblk(dev)
	dev_t dev;
{
	int blkmaj;

	if (major(dev) >= nchrdev ||
	    major(dev) >= sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]))
		return (NODEV);
	blkmaj = chrtoblktbl[major(dev)];
	if (blkmaj == NODEV)
		return (NODEV);
	return (makedev(blkmaj, minor(dev)));
}

/*
 * Convert a character device number to a block device number.
 */
dev_t
blktochr(dev)
	dev_t dev;
{
	int blkmaj = major(dev);
	int i;

	if (blkmaj >= nblkdev)
		return (NODEV);
	for (i = 0; i < sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]); i++)
		if (blkmaj == chrtoblktbl[i])
			return (makedev(i, minor(dev)));
	return (NODEV);
}
@


1.23
log
@proper cdev_decl(ksyms), fix ksyms's broken functions
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.22 2002/05/16 21:11:16 miod Exp $	*/
a105 2
#include <altq/altqconf.h>

a204 1
	cdev_altq_init(NALTQ,altq),	 /* 52: ALTQ control interface */
@


1.22
log
@Add systrace support to all the remaining architectures.

Tested by various people on various platforms, I'm willing to fix any
breakage this causes.

ok niels@@ deraadt@@ and mickey@@ (after his comments were applied)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.21 2002/04/28 15:17:09 miod Exp $	*/
a62 1
cdev_decl(ksyms);
@


1.21
log
@Use the prototypes defined via cdev_decl() macros, instead of rolling our
own; thus fix a lot of foo_open(), foo_close() and foo_ioctl() prototypes
in the process.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 2001/09/28 02:53:13 mickey Exp $	*/
d109 2
d202 1
a202 1
	cdev_notdef(),                   /* 50 */
@


1.20
log
@move cdev_decl(pf) into it's proper place, kill cdev_decl(ipl) at the same time
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19 2001/08/23 22:33:23 miod Exp $	*/
a42 1
#include <sys/conf.h>
d45 2
a79 7
#define mmread  mmrw
#define mmwrite mmrw
cdev_decl(mm);
cdev_decl(sram);
cdev_decl(nvram);
cdev_decl(vmel);
cdev_decl(vmes);
a84 5
cdev_decl(dart);
cdev_decl(cl);
cdev_decl(bugtty);
cdev_decl(vx);

d120 1
a120 1
	bdev_notdef(),			/* 9 */
d286 1
a286 1
int
d327 5
a331 1
#define dartcnpollc      nullcnpollc
a332 4
#define clcnpollc      nullcnpollc
cons_decl(cl);
#define bugttycnpollc      nullcnpollc
cons_decl(bugtty);
@


1.20.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 2001/09/28 02:53:13 mickey Exp $	*/
d43 1
a45 2
#include <machine/conf.h>

d79 7
d91 5
a119 2
#include "systrace.h"

d131 1
a131 1
	bdev_disk_init(NCCD,ccd),	/* 9: concatenated disk driver */
d211 1
a211 1
	cdev_systrace_init(NSYSTRACE,systrace),	/* 50 system call tracing */
d297 1
a297 1
dev_t
d338 5
a342 1
#define bugttycnpollc	nullcnpollc
a343 4
#define clcnpollc	nullcnpollc
cons_decl(cl);
#define dartcnpollc	nullcnpollc
cons_decl(dart);
@


1.20.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20.4.1 2002/06/11 03:37:10 art Exp $	*/
d63 1
@


1.20.4.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d106 2
d207 1
d252 1
a252 1
int chrtoblktbl[] = {
d283 36
a318 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.19
log
@Vacuum cleanup. Half of this is now in <sys/conf.h>, the other half is
unneeded.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 2001/08/06 22:34:44 mickey Exp $	*/
a116 1
cdev_decl(pf);
@


1.18
log
@remove vm_conf.h; art@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17 2001/06/27 06:56:29 kjc Exp $	*/
d46 7
a52 2
int	ttselect	__P((dev_t, int, struct proc *));

a53 3
bdev_decl(st);
#include "sd.h"
bdev_decl(sd);
a54 1
bdev_decl(cd);
a55 3
#include "vnd.h"
#include "ccd.h"
bdev_decl(rd);
d57 15
d73 1
a73 3
#if notyet
#include "ch.h"
bdev_decl(ch);
d76 1
a78 37
#include "vnd.h"
bdev_decl(vnd);

#ifdef LKM
int	lkmenodev();
#else
#define	lkmenodev	enodev
#endif

struct bdevsw	bdevsw[] =
{
	bdev_notdef(),			/* 0 */
	bdev_notdef(),			/* 1 */
	bdev_notdef(),			/* 2 */
	bdev_swap_init(1,sw),		/* 3: swap pseudo-device */
	bdev_disk_init(NSD,sd),		/* 4: SCSI disk */
	bdev_tape_init(NST,st),		/* 5: SCSI tape */
	bdev_disk_init(NCD,cd),		/* 6: SCSI CD-ROM */
	bdev_disk_init(NRD,rd),		/* 7: ramdisk */
	bdev_disk_init(NVND,vnd),	/* 8: vnode disk driver */
	bdev_notdef(),			/* 9 */
#if notyet
	bdev_disk_init(NXD,xd),		/* 10: XD disk */
#endif /* notyet */
	bdev_notdef(),			/* 11 */
	bdev_notdef(),			/* 12 */
	bdev_lkm_dummy(),		/* 13 */
	bdev_lkm_dummy(),		/* 14 */
	bdev_lkm_dummy(),		/* 15 */
	bdev_lkm_dummy(),		/* 16 */
	bdev_lkm_dummy(),		/* 17 */
	bdev_lkm_dummy(),		/* 18 */
};
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);

cdev_decl(cn);
cdev_decl(ctty);
a81 2

#include "sram.h"
a82 2

#include "nvram.h"
a83 2

#include "vmel.h"
a84 2

#include "vmes.h"
d86 1
a86 2

#if notyet
a90 11
#include "pty.h"
#define ptstty		ptytty
#define	ptsioctl	ptyioctl
cdev_decl(pts);
#define ptctty		ptytty
#define	ptcioctl	ptyioctl
cdev_decl(ptc);
cdev_decl(log);
cdev_decl(fd);

#include "dart.h"
a91 2

#include "cl.h"
a92 2

#include "bugtty.h"
a93 2

#include "vx.h"
a115 30
cdev_decl(st);
cdev_decl(sd);
cdev_decl(cd);
cdev_decl(xd);
cdev_decl(rd);
cdev_decl(vnd);

dev_decl(filedesc,open);

#include "bpfilter.h"
cdev_decl(bpf);

#include "tun.h"
cdev_decl(tun);

#ifdef XFS
#include <xfs/nxfs.h>
#cdev_decl(xfs_dev);
#endif

#include "ksyms.h"
cdev_decl(ksyms);

#ifdef LKM
#define NLKM 1
#else
#define NLKM 0
#endif


d119 1
a119 1
cdev_decl(lkm);
d121 25
a145 1
#include <altq/altqconf.h>
d160 1
a160 2

#if notyet
d170 1
a170 1
	cdev_notdef(),                   /* 17: concatenated disk */
d179 1
a179 1
#if notyet
d185 1
a185 1
#if notyet
d201 1
a201 1
	cdev_pf_init(NPF,pf),		/* 39: packet filter */
d218 1
a218 1
	cdev_altq_init(NALTQ,altq),	/* 52: ALTQ control interface */
@


1.17
log
@add the ALTQ device to the rest of the architectures.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.16 2001/06/25 03:20:09 kjell Exp $	*/
a47 1
bdev_decl(sw);
a106 1
cdev_decl(sw);
@


1.16
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 2001/03/12 22:57:30 miod Exp $	*/
d204 2
d278 1
@


1.15
log
@/dev/ksyms support.

Declare random source device - makes ssh work on mvme88k at last.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14 2001/03/08 00:03:30 miod Exp $	*/
d198 3
a200 5
#ifdef IPFILTER
#define NIPF 1
#else
#define NIPF 0
#endif
d259 1
a259 1
	cdev_gen_ipf(NIPF,ipl),          /* 39: IP filter */
@


1.14
log
@Some warning hunting.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.13 2000/09/26 14:03:54 art Exp $	*/
d189 3
d262 1
a262 1
	cdev_notdef(),                   /* 40 */
d265 1
a265 1
	cdev_notdef(),                   /* 43 */
@


1.13
log
@Implement getnulldev that returns the dev_t for "/dev/null".
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 1999/09/27 19:13:21 smurph Exp $	*/
d294 1
d305 1
d354 1
@


1.12
log
@Added to support MVME188 and MVME197
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.11 1999/05/29 04:41:46 smurph Exp $	*/
d309 6
@


1.12.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 2001/03/12 22:57:30 miod Exp $	*/
a188 3
#include "ksyms.h"
cdev_decl(ksyms);

d259 1
a259 1
	cdev_random_init(1,random),	 /* 40: random data source */
d262 1
a262 1
	cdev_ksyms_init(NKSYMS,ksyms),	 /* 43: Kernel symbols device */
a293 1
int
a303 1
int
a310 6
dev_t
getnulldev()
{
	return makedev(mem_no, 2);
}

a345 1
int
@


1.12.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12.4.1 2001/04/18 16:11:30 niklas Exp $	*/
d198 5
a202 3

#include "pf.h"
cdev_decl(pf);
a205 2
#include <altq/altqconf.h>

d261 1
a261 1
	cdev_pf_init(NPF,pf),		/* 39: packet filter */
a277 1
	cdev_altq_init(NALTQ,altq),	/* 52: ALTQ control interface */
@


1.12.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12.4.2 2001/07/04 10:20:08 niklas Exp $	*/
d46 5
a50 6
#include "pty.h"
#include "bpfilter.h"
#include "tun.h"
#include "vnd.h"
#include "ccd.h"
#include "ch.h"
d52 1
a52 1
#include "st.h"
d54 1
d56 3
a59 6
#ifdef XFS
#include <xfs/nxfs.h>
#cdev_decl(xfs_dev);
#endif
#include "ksyms.h"
cdev_decl(ksyms);
d61 3
a63 10
#include "sram.h"
#include "nvram.h"
#include "vmel.h"
#include "vmes.h"
#include "dart.h"
#include "cl.h"
#include "bugtty.h"
#include "vx.h"

#ifdef notyet
a65 1
cdev_decl(xd);
d68 37
d108 3
d112 2
d115 2
d118 2
d121 2
a122 1
#ifdef notyet
d127 11
d139 2
d142 2
d145 2
d169 30
d200 3
a205 26
struct bdevsw	bdevsw[] =
{
	bdev_notdef(),			/* 0 */
	bdev_notdef(),			/* 1 */
	bdev_notdef(),			/* 2 */
	bdev_swap_init(1,sw),		/* 3: swap pseudo-device */
	bdev_disk_init(NSD,sd),		/* 4: SCSI disk */
	bdev_tape_init(NST,st),		/* 5: SCSI tape */
	bdev_disk_init(NCD,cd),		/* 6: SCSI CD-ROM */
	bdev_disk_init(NRD,rd),		/* 7: ramdisk */
	bdev_disk_init(NVND,vnd),	/* 8: vnode disk driver */
	bdev_notdef(),			/* 9 */
#if notyet
	bdev_disk_init(NXD,xd),		/* 10: XD disk */
#endif /* notyet */
	bdev_notdef(),			/* 11 */
	bdev_notdef(),			/* 12 */
	bdev_lkm_dummy(),		/* 13 */
	bdev_lkm_dummy(),		/* 14 */
	bdev_lkm_dummy(),		/* 15 */
	bdev_lkm_dummy(),		/* 16 */
	bdev_lkm_dummy(),		/* 17 */
	bdev_lkm_dummy(),		/* 18 */
};
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);

d219 2
a220 1
#ifdef notyet
d230 1
a230 1
	cdev_disk_init(NCCD,ccd),        /* 17: concatenated disk */
d239 1
a239 1
#ifdef notyet
d245 1
a245 1
#ifdef notyet
d261 1
a261 1
	cdev_pf_init(NPF,pf),		 /* 39: packet filter */
d278 1
a278 1
	cdev_altq_init(NALTQ,altq),	 /* 52: ALTQ control interface */
@


1.12.4.4
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 1
a45 2
#include <machine/conf.h>

d62 1
d79 7
d91 5
d118 1
a118 1
#include "systrace.h"
d131 1
a131 1
	bdev_disk_init(NCCD,ccd),	/* 9: concatenated disk driver */
d211 1
a211 1
	cdev_systrace_init(NSYSTRACE,systrace),	/* 50 system call tracing */
d217 1
d297 1
a297 1
dev_t
d338 5
a342 1
#define bugttycnpollc	nullcnpollc
a343 4
#define clcnpollc	nullcnpollc
cons_decl(cl);
#define dartcnpollc	nullcnpollc
cons_decl(dart);
@


1.12.4.5
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d249 1
a249 1
int chrtoblktbl[] = {
d280 36
a315 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.12.4.6
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12.4.5 2003/05/16 00:29:39 niklas Exp $	*/
d15 5
a19 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.12.4.7
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a47 2
#include "rd.h"
#include "cd.h"
a49 1
#include "ss.h"
d51 2
a52 1
#include "uk.h"
d56 1
a56 1
cdev_decl(xfs_dev);
d90 1
a90 1
	(dev_type_stop((*))) enodev, 0, (dev_type_poll((*))) enodev, \
d132 11
a142 11
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_ctty_init(1,ctty),		/* 1: controlling terminal */
	cdev_mm_init(1,mm),		/* 2: /dev/{null,mem,kmem,...} */
	cdev_swap_init(1,sw),		/* 3: /dev/drum (swap pseudo-device) */
	cdev_tty_init(NPTY,pts),	/* 4: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 5: pseudo-tty master */
	cdev_log_init(1,log),		/* 6: /dev/klog */
	cdev_mdev_init(NSRAM,sram),	/* 7: /dev/sramX */
	cdev_disk_init(NSD,sd),		/* 8: SCSI disk */
	cdev_disk_init(NCD,cd),		/* 9: SCSI CD-ROM */
	cdev_mdev_init(NNVRAM,nvram),	/* 10: /dev/nvramX */
d144 1
a144 1
	cdev_mdev_init(NFLASH,flash),	/* 11: /dev/flashX */
d146 1
a146 1
	cdev_notdef(),			/* 11: */
d148 14
a161 14
	cdev_tty_init(NDART,dart),	/* 12: MVME188 serial (tty[a-b]) */
	cdev_tty_init(NCL,cl),		/* 13: CL-CD1400 serial (tty0[0-3]) */
	cdev_tty_init(NBUGTTY,bugtty),	/* 14: BUGtty (ttyB) */
	cdev_tty_init(NVX,vx),		/* 15: MVME332XT serial/lpt ttyv[0-7][a-i] */
	cdev_notdef(),			/* 16 */
	cdev_disk_init(NCCD,ccd),	/* 17: concatenated disk */
	cdev_disk_init(NRD,rd),		/* 18: ramdisk disk */
	cdev_disk_init(NVND,vnd),	/* 19: vnode disk */
	cdev_tape_init(NST,st),		/* 20: SCSI tape */
	cdev_fd_init(1,filedesc),	/* 21: file descriptor pseudo-dev */
	cdev_bpftun_init(NBPFILTER,bpf),/* 22: berkeley packet filter */
	cdev_bpftun_init(NTUN,tun),	/* 23: network tunnel */
	cdev_lkm_init(NLKM,lkm),	/* 24: loadable module driver */
	cdev_notdef(),			/* 25 */
d163 1
a163 1
	cdev_disk_init(NXD,xd),		/* 26: XD disk */
d165 1
a165 1
	cdev_notdef(),			/* 26: XD disk */
d167 1
a167 1
	cdev_notdef(),			/* 27 */
d169 5
a173 5
	cdev_lp_init(NLP,lp),		/* 28: lp */
	cdev_lp_init(NLPTWO,lptwo),	/* 29: lptwo */
#else
	cdev_notdef(),			/* 28: lp */
	cdev_notdef(),			/* 29: lptwo */
d175 20
a194 20
	cdev_notdef(),			/* 30 */
	cdev_mdev_init(NVMEL,vmel),	/* 31: /dev/vmelX */
	cdev_mdev_init(NVMES,vmes),	/* 32: /dev/vmesX */
	cdev_lkm_dummy(),		/* 33 */
	cdev_lkm_dummy(),		/* 34 */
	cdev_lkm_dummy(),		/* 35 */
	cdev_lkm_dummy(),		/* 36 */
	cdev_lkm_dummy(),		/* 37 */
	cdev_lkm_dummy(),		/* 38 */
	cdev_pf_init(NPF,pf),		/* 39: packet filter */
	cdev_random_init(1,random),	/* 40: random data source */
	cdev_uk_init(NUK,uk),		/* 41 */
	cdev_ss_init(NSS,ss),		/* 42 */
	cdev_ksyms_init(NKSYMS,ksyms),	/* 43: Kernel symbols device */
	cdev_ch_init(NCH,ch),		/* 44: SCSI autochanger */
	cdev_notdef(),			/* 45 */
	cdev_notdef(),			/* 46 */
	cdev_notdef(),			/* 47 */
	cdev_notdef(),			/* 48 */
	cdev_notdef(),			/* 49 */
d197 1
a197 1
	cdev_xfs_init(NXFS,xfs_dev),	/* 51: xfs communication device */
d199 1
a199 1
	cdev_notdef(),			/* 51 */
d204 1
a204 1
int	mem_no = 2;	/* major device number of memory special file */
d256 2
a257 2
	/*  8 */	4,	/* SCSI disk */
	/*  9 */	6,	/* SCSI CD-ROM */
d266 2
a267 2
	/* 18 */	7,	/* ram disk */
	/* 19 */	8,	/* vnode disk */
d274 1
a274 1
	/* 26 */	10,	/* XD disk */
@


1.12.4.8
log
@Merge with the trunk
@
text
@a202 1
	cdev_ptm_init(NPTY,ptm),	/* 52: pseudo-tty ptm device */
@


1.11
log
@Added vme bus device drivers. MVME328, MVME376, MVME332
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.10 1999/02/09 06:36:28 smurph Exp $	*/
d137 3
a139 4
#if notyet
#include "zs.h"
cdev_decl(zs);
#endif /* notyet */
d205 11
a215 11
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_ctty_init(1,ctty),		/* 1: controlling terminal */
	cdev_mm_init(1,mm),		/* 2: /dev/{null,mem,kmem,...} */
	cdev_swap_init(1,sw),		/* 3: /dev/drum (swap pseudo-device) */
	cdev_tty_init(NPTY,pts),	/* 4: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 5: pseudo-tty master */
	cdev_log_init(1,log),		/* 6: /dev/klog */
	cdev_mdev_init(NSRAM,sram),	/* 7: /dev/sramX */
	cdev_disk_init(NSD,sd),		/* 8: SCSI disk */
	cdev_disk_init(NCD,cd),		/* 9: SCSI CD-ROM */
	cdev_mdev_init(NNVRAM,nvram),	/* 10: /dev/nvramX */
d218 1
a218 2
	cdev_mdev_init(NFLASH,flash),	/* 11: /dev/flashX */
	cdev_tty_init(NZS,zs),		/* 12: SCC serial (tty[a-d]) */
d220 1
a220 2
	cdev_notdef(),			/* 11: */
	cdev_notdef(),			/* 12: SCC serial (tty[a-d]) */
d222 14
a235 13
	cdev_tty_init(NCL,cl),		/* 13: CL-CD1400 serial (tty0[0-3]) */
	cdev_tty_init(NBUGTTY,bugtty),	/* 14: BUGtty (ttyB) */
	cdev_tty_init(NVX,vx),			/* 15: MVME332XT serial/lpt ttyv[0-7][a-i] */
	cdev_notdef(),			/* 16 */
	cdev_notdef(),			/* 17: concatenated disk */
	cdev_disk_init(NRD,rd),		/* 18: ramdisk disk */
	cdev_disk_init(NVND,vnd),	/* 19: vnode disk */
	cdev_tape_init(NST,st),		/* 20: SCSI tape */
	cdev_fd_init(1,filedesc),	/* 21: file descriptor pseudo-dev */
	cdev_bpftun_init(NBPFILTER,bpf),/* 22: berkeley packet filter */
	cdev_bpftun_init(NTUN,tun),	/* 23: network tunnel */
	cdev_lkm_init(NLKM,lkm),	/* 24: loadable module driver */
	cdev_notdef(),			/* 25 */
d237 1
a237 1
	cdev_disk_init(NXD,xd),		/* 26: XD disk */
d239 1
a239 1
	cdev_notdef(),			/* 26: XD disk */
d241 1
a241 1
	cdev_notdef(),			/* 27 */
d243 2
a244 2
	cdev_lp_init(NLP,lp),		/* 28: lp */
	cdev_lp_init(NLPTWO,lptwo),	/* 29: lptwo */
d246 2
a247 2
	cdev_notdef(),			/* 28: lp */
	cdev_notdef(),			/* 29: lptwo */
d249 21
a269 21
	cdev_notdef(),			/* 30 */
	cdev_mdev_init(NVMEL,vmel),	/* 31: /dev/vmelX */
	cdev_mdev_init(NVMES,vmes),	/* 32: /dev/vmesX */
	cdev_lkm_dummy(),		/* 33 */
	cdev_lkm_dummy(),		/* 34 */
	cdev_lkm_dummy(),		/* 35 */
	cdev_lkm_dummy(),		/* 36 */
	cdev_lkm_dummy(),		/* 37 */
	cdev_lkm_dummy(),		/* 38 */
	cdev_gen_ipf(NIPF,ipl),         /* 39: IP filter */
	cdev_notdef(),			/* 40 */
	cdev_notdef(),			/* 41 */
	cdev_notdef(),			/* 42 */
	cdev_notdef(),			/* 43 */
	cdev_notdef(),			/* 44 */
	cdev_notdef(),			/* 45 */
	cdev_notdef(),			/* 46 */
	cdev_notdef(),			/* 47 */
	cdev_notdef(),			/* 48 */
	cdev_notdef(),			/* 49 */
	cdev_notdef(),			/* 50 */
d271 1
a271 1
	cde_xfs_init(NXFS,xfs_dev),	/* 51: xfs communication device */
d273 1
a273 1
	cdev_notdef(),			/* 51 */
d322 2
a323 2
	/*  8 */	4,		/* SCSI disk */
	/*  9 */	6,		/* SCSI CD-ROM */
d332 2
a333 2
	/* 18 */	7,		/* ram disk */
	/* 19 */	8,		/* vnode disk */
d340 1
a340 1
	/* 26 */	10,		/* XD disk */
d386 2
a387 2
#define zscnpollc      nullcnpollc
cons_decl(zs);
d394 2
a395 2
#if NZS > 0
	cons_init(zs),
@


1.10
log
@Added kernel support for user debugging.  Fixed file ID's
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.28 1995/04/19 22:37:27 mycroft Exp $	*/
a109 1
#if 1 /*notyet*/
a114 1
#endif
a115 1
#if notyet
d122 1
d147 3
d196 6
a212 1
#if 1
a213 3
#else
	cdev_notdef(),			/* 7: */
#endif /* notyet */
a215 1
#if 1
a216 3
#else
	cdev_notdef(),			/* 10: */
#endif /* notyet */
d227 1
a227 1
	cdev_notdef(),			/* 15 */
d247 1
a247 1
#else
a251 1
#if notyet
a253 4
#else /* notyet */
	cdev_notdef(),			/* 31: /dev/vmelX */
	cdev_notdef(),			/* 32: /dev/vmesX */
#endif /* notyet */
d260 1
a260 1
	cdev_notdef(),			/* 39 */
@


1.9
log
@Commit for the first working mvme88k port.
@
text
@d1 1
a1 1
/*	$NetBSD: conf.c,v 1.28 1995/04/19 22:37:27 mycroft Exp $	*/
@


1.8
log
@o xfs is in the house (thanks art, for getting me started)
o all but vax are major 51
@
text
@d55 5
d86 1
a86 1
	bdev_notdef(),			/* 7 */
d110 1
a110 1
#if notyet
d114 5
a124 3
#include "nvram.h"
cdev_decl(nvram);

d173 1
d206 1
a206 1
#if notyet
d208 2
a209 2
#else /* notyet */
	cdev_notdef(),			/* 7: /dev/sramX */
d213 6
a219 1
	cdev_mdev_init(NNVRAM,nvram),	/* 10: /dev/nvramX */
d223 1
a223 2
	cdev_notdef(),			/* 10 */
	cdev_notdef(),			/* 11 */
d231 1
a231 1
	cdev_notdef(),			/* 18 */
d340 1
a340 1
	/* 18 */	NODEV,
@


1.7
log
@Cleanup after import. This also seems to bring up the current version.
@
text
@d176 5
d254 17
@


1.6
log
@This is a remove to get rid of the old mvme88k port which was incomplete
to replace it with a working version. The kernel compiles and works
at least.  The new version will be imported shortly.
@
text
@d66 6
a101 1
#if notyet
a102 1
#endif /* notyet */
d135 1
a137 1
#endif /* notyet */
d168 2
a175 2
cdev_decl(random);

a187 1
#if notyet
a188 1
#endif /* notyet */
d195 2
d204 5
a209 1
#endif /* notyet */
d217 1
a217 1
	cdev_fd_init(1,fd),		/* 21: file descriptor pseudo-dev */
d224 2
d231 3
d239 3
a248 1
	cdev_random_init(1,random),	/* 39: random data source */
d332 18
@


1.5
log
@random device is permanent now.
@
text
@@


1.4
log
@rnd -> random
@
text
@a169 1
#include "random.h"
d233 1
a233 1
	cdev_random_init(NRANDOM,random), /* 39: random data source */
@


1.3
log
@add rnd driver
@
text
@d170 2
a171 2
#include "rnd.h"
cdev_decl(rnd);
d234 1
a234 1
	cdev_rnd_init(NRND,rnd),	/* 39: random data source */
@


1.2
log
@remove #ifndef LKM, since that stuff already in sys/conf.h,
add lkmenodev prototype.
@
text
@d170 3
d234 1
@


1.1
log
@moved from m88k directory
@
text
@a65 6
#ifdef LKM
int	lkmenodev();
#else
#define	lkmenodev	enodev
#endif

@


1.1.1.1
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@d102 1
d104 1
a136 1
#endif /* notyet */
d139 1
a169 2
dev_decl(filedesc,open);

d188 1
d190 1
a196 2
#else /* notyet */
	cdev_notdef(),			/* 7: /dev/sramX */
d204 1
a204 4
#else
	cdev_notdef(),			/* 10 */
	cdev_notdef(),			/* 11 */
	cdev_notdef(),			/* 12: SCC serial (tty[a-d]) */
a205 1
	cdev_tty_init(NCL,cl),		/* 13: CL-CD1400 serial (tty0[0-3]) */
d213 1
a213 1
	cdev_fd_init(1,filedesc),	/* 21: file descriptor pseudo-dev */
a219 2
#else
	cdev_notdef(),			/* 26: XD disk */
a224 3
#else
	cdev_notdef(),			/* 28: lp */
	cdev_notdef(),			/* 29: lptwo */
a229 3
#else /* notyet */
	cdev_notdef(),			/* 31: /dev/vmelX */
	cdev_notdef(),			/* 32: /dev/vmesX */
a319 18
}

/*
 * Convert a character device number to a block device number.
 */
dev_t
blktochr(dev)
	dev_t dev;
{
	int blkmaj = major(dev);
	int i;

	if (blkmaj >= nblkdev)
		return (NODEV);
	for (i = 0; i < sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]); i++)
		if (blkmaj == chrtoblktbl[i])
			return (makedev(i, minor(dev)));
	return (NODEV);
@
