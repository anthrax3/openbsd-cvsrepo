head	1.9;
access;
symbols
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	UBC_SYNC_A:1.9
	UBC_SYNC_B:1.9
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.4
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	mvme88kport:1.1.1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2001.05.20.05.51.21;	author miod;	state dead;
branches;
next	1.8;

1.8
date	2001.04.10.01.12.39;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2001.02.01.03.38.20;	author smurph;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.12.07.29.26;	author smurph;	state Exp;
branches;
next	1.5;

1.5
date	99.09.27.19.13.22;	author smurph;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	99.02.09.06.36.28;	author smurph;	state Exp;
branches;
next	1.3;

1.3
date	97.03.03.20.21.34;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	97.03.03.19.08.04;	author rahnds;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.12.32.22;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.03.19.32.33;	author rahnds;	state Exp;
branches;
next	;

1.5.4.1
date	2001.04.18.16.11.33;	author niklas;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2001.07.04.10.20.12;	author niklas;	state dead;
branches;
next	;


desc
@@


1.9
log
@Replace genassym.c with a .cf one; also remove unused defines.
@
text
@/*	$OpenBSD: genassym.c,v 1.8 2001/04/10 01:12:39 miod Exp $	*/
/*
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)genassym.c	7.8 (Berkeley) 5/7/91
 *	$Id: genassym.c,v 1.8 2001/04/10 01:12:39 miod Exp $
 */

#include <sys/param.h>
#include <sys/buf.h>
#include <sys/time.h>
#include <sys/proc.h>
#include <sys/mbuf.h>
#include <sys/msgbuf.h>
#include <machine/cpu.h>
#include <machine/trap.h>
#include <machine/psl.h>
#include <machine/vmparam.h>
#include <sys/syscall.h>
#include <sys/user.h>

#define pair(TOKEN, ELEMENT) \
    printf("#define " TOKEN " %u\n", (unsigned)(ELEMENT))

#define int_offset_of_element(ELEMENT) (((unsigned)&(ELEMENT))/sizeof(int))

main()
{
	register struct proc *p = (struct proc *)0;
	struct m88100_saved_state *ss = (struct m88100_saved_state *) 0;
	struct pcb *pcb = (struct pcb *)0;
	struct m88100_pcb *ks = (struct m88100_pcb *)0;

	printf("#ifndef __GENASSYM_INCLUDED\n");
	printf("#define __GENASSYM_INCLUDED 1\n\n");

	printf("#define\tP_FORW %d\n", &p->p_forw);
	printf("#define\tP_BACK %d\n", &p->p_back);
	printf("#define\tP_ADDR %d\n", &p->p_addr);
	printf("#define\tP_STAT %d\n", &p->p_stat);
	printf("#define\tP_WCHAN %d\n", &p->p_wchan);
	printf("#define\tSRUN %d\n", SRUN);
	printf("#define\tUPAGES %d\n", UPAGES);
	printf("#define\tUSIZE %d\n", USPACE);
	printf("#define\tNBPG %d\n", NBPG);

	printf("#define\tPCB_ONFAULT %d\n", &pcb->pcb_onfault);

	printf("#define\tPCB_USER_STATE %d\n", &pcb->user_state);

	printf("#define\tSYS_exit %d\n", SYS_exit);
	printf("#define\tSYS_sigreturn %d\n", SYS_sigreturn);
	
	pair("EF_R0",	int_offset_of_element(ss->r[0]));
	pair("EF_R31",	int_offset_of_element(ss->r[31]));
	pair("EF_FPSR",	int_offset_of_element(ss->fpsr));
	pair("EF_FPCR",	int_offset_of_element(ss->fpcr));
	pair("EF_EPSR",	int_offset_of_element(ss->epsr));
	pair("EF_SXIP",	int_offset_of_element(ss->sxip));
	pair("EF_SFIP",	int_offset_of_element(ss->sfip));
	pair("EF_EXIP",	int_offset_of_element(ss->sxip)); /* MVME197 */
	pair("EF_EFIP",	int_offset_of_element(ss->sfip)); /* MVME197 */
	pair("EF_SNIP",	int_offset_of_element(ss->snip));
	pair("EF_SSBR",	int_offset_of_element(ss->ssbr));
	pair("EF_DMT0",	int_offset_of_element(ss->dmt0));
	pair("EF_DMD0",	int_offset_of_element(ss->dmd0));
	pair("EF_DMA0",	int_offset_of_element(ss->dma0));
	pair("EF_DMT1",	int_offset_of_element(ss->dmt1));
	pair("EF_DMD1",	int_offset_of_element(ss->dmd1));
	pair("EF_DMA1",	int_offset_of_element(ss->dma1));
	pair("EF_DMT2",	int_offset_of_element(ss->dmt2));
	pair("EF_DMD2",	int_offset_of_element(ss->dmd2));
	pair("EF_DMA2",	int_offset_of_element(ss->dma2));
	pair("EF_FPECR",int_offset_of_element(ss->fpecr));
	pair("EF_FPCR",	int_offset_of_element(ss->fpcr)); /* MVME197 */
	pair("EF_FPSR",	int_offset_of_element(ss->fpsr)); /* MVME197 */
	pair("EF_FPHS1",int_offset_of_element(ss->fphs1));
	pair("EF_FPLS1",int_offset_of_element(ss->fpls1));
	pair("EF_FPHS2",int_offset_of_element(ss->fphs2));
	pair("EF_FPLS2",int_offset_of_element(ss->fpls2));
	pair("EF_FPPT",	int_offset_of_element(ss->fppt));
	pair("EF_FPRH",	int_offset_of_element(ss->fprh));
	pair("EF_FPRL",	int_offset_of_element(ss->fprl));
	pair("EF_FPIT",	int_offset_of_element(ss->fpit));
	pair("EF_VECTOR",int_offset_of_element(ss->vector));
	pair("EF_MASK",	int_offset_of_element(ss->mask));
	pair("EF_MODE",	int_offset_of_element(ss->mode));

	pair("EF_RET",	int_offset_of_element(ss->scratch1));
	pair("EF_IPFSR",int_offset_of_element(ss->ipfsr));
	pair("EF_DPFSR",int_offset_of_element(ss->dpfsr));
	pair("EF_DSR",  int_offset_of_element(ss->dsr)); /* MVME197 */
	pair("EF_DLAR", int_offset_of_element(ss->dlar)); /* MVME197 */
	pair("EF_DPAR", int_offset_of_element(ss->dpar)); /* MVME197 */
	pair("EF_ISR",  int_offset_of_element(ss->dsr)); /* MVME197 */
	pair("EF_ILAR", int_offset_of_element(ss->ilar)); /* MVME197 */
	pair("EF_IPAR", int_offset_of_element(ss->ipar)); /* MVME197 */
	pair("EF_SRX",  int_offset_of_element(ss->dpfsr));
	pair("EF_CPU",  int_offset_of_element(ss->cpu)); /* cpu number */
	pair("EF_NREGS",sizeof(*ss)/sizeof(int));

/* end MVME197 only */

	/* make a sanity check */
	if (sizeof(*ss) & 7)
	{
		/* 
		 * This contortion using write instead of fputs(stderr)
		 * is necessary because we can't include stdio.h in here.
		 */
		static char buf[] = 
	  "Exception frame not a multiple of double words\n";
		write(2 /* stderr */,buf,sizeof(buf));
		exit(1);
	}
	pair("SIZEOF_EF", sizeof(*ss));

	pair("PCB_PC", int_offset_of_element(ks->pcb_pc) * 4);
	pair("PCB_IPL",	int_offset_of_element(ks->pcb_ipl) * 4);
	pair("PCB_R14", int_offset_of_element(ks->pcb_r14) * 4);
	pair("PCB_R15",	int_offset_of_element(ks->pcb_r15) * 4);
	pair("PCB_R16",	int_offset_of_element(ks->pcb_r16) * 4);
	pair("PCB_R17",	int_offset_of_element(ks->pcb_r17) * 4);
	pair("PCB_R18",	int_offset_of_element(ks->pcb_r18) * 4);
	pair("PCB_R19",	int_offset_of_element(ks->pcb_r19) * 4);
	pair("PCB_R20",	int_offset_of_element(ks->pcb_r20) * 4);
	pair("PCB_R21",	int_offset_of_element(ks->pcb_r21) * 4);
	pair("PCB_R22",	int_offset_of_element(ks->pcb_r22) * 4);
	pair("PCB_R23",	int_offset_of_element(ks->pcb_r23) * 4);
	pair("PCB_R24",	int_offset_of_element(ks->pcb_r24) * 4);
	pair("PCB_R25",	int_offset_of_element(ks->pcb_r25) * 4);
	pair("PCB_R26",	int_offset_of_element(ks->pcb_r26) * 4);
	pair("PCB_R27",	int_offset_of_element(ks->pcb_r27) * 4);
	pair("PCB_R28",	int_offset_of_element(ks->pcb_r28) * 4);
	pair("PCB_R29",	int_offset_of_element(ks->pcb_r29) * 4);
	pair("PCB_R30",	int_offset_of_element(ks->pcb_r30) * 4);
	pair("PCB_SP",	int_offset_of_element(ks->pcb_sp) * 4);

	printf("\n#endif /* __GENASSYM_INCLUDED */\n");
	exit(0);
}
@


1.8
log
@Get rid of unnecessary symbols.
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.7 2001/02/01 03:38:20 smurph Exp $	*/
d35 1
a35 1
 *	$Id: genassym.c,v 1.7 2001/02/01 03:38:20 smurph Exp $
@


1.7
log
@Major changes to get MVME188 working.  More header and code cleanups.  The
kernel is tested on MVME188A/2P256 and MVME188A/1P64.
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.6 2001/01/12 07:29:26 smurph Exp $	*/
d35 1
a35 1
 *	$Id: genassym.c,v 1.6 2001/01/12 07:29:26 smurph Exp $
a37 4
#ifndef KERNEL
#define KERNEL
#endif /* KERNEL */

a48 4
#include <vm/vm.h>
#ifdef UVM
#include <uvm/uvm_extern.h>
#endif 
a59 9
#ifdef UVM
	register struct uvmexp *uvm = (struct uvmexp *)0;
#else
	register struct vmmeter *vm = (struct vmmeter *)0;
#endif 
	register struct user *up = (struct user *)0;
	register struct rusage *rup = (struct rusage *)0;
	struct vmspace *vms = (struct vmspace *)0;
	pmap_t pmap = (pmap_t)0;
a62 2
	register unsigned i;

a67 1
	printf("#define\tP_VMSPACE %d\n", &p->p_vmspace);
a68 1
	printf("#define\tP_PRIORITY %d\n", &p->p_priority);
a71 10
#if 1
	printf("#define\tVM_PMAP %d\n", &vms->vm_pmap);
#else 
	printf("#define\tVM_PMAP %d\n", &vms->vm_map.pmap);
#endif 
#ifdef UVM
	printf("#define\tUVMEXP_INTRS %d\n", &uvm->intrs);
#else
	printf("#define\tV_INTR %d\n", &vm->v_intr);
#endif
a72 1
	printf("#define\tPGSHIFT %d\n", PGSHIFT);
a75 2
	printf("#define\tU_PROF %d\n", &up->u_stats.p_prof);
	printf("#define\tU_PROFSCALE %d\n", &up->u_stats.p_prof.pr_scale);
a76 1
	printf("#define\tSIZEOF_PCB %d\n", sizeof(struct pcb));
a80 1
	printf("#define\tSYS_execve %d\n", SYS_execve);
@


1.6
log
@Update vm interface to MACHIN_NEW_NONCONTIG.  Fix compile warning in pcctwo.c
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.5 1999/09/27 19:13:22 smurph Exp $	*/
d35 1
a35 1
 *	$Id: genassym.c,v 1.5 1999/09/27 19:13:22 smurph Exp $
d139 1
a139 1
	pair("EF_FPECR",	int_offset_of_element(ss->fpecr));
d142 4
a145 4
	pair("EF_FPHS1",	int_offset_of_element(ss->fphs1));
	pair("EF_FPLS1",	int_offset_of_element(ss->fpls1));
	pair("EF_FPHS2",	int_offset_of_element(ss->fphs2));
	pair("EF_FPLS2",	int_offset_of_element(ss->fpls2));
d150 1
a150 1
	pair("EF_VECTOR",	int_offset_of_element(ss->vector));
d157 9
a165 8
	pair("EF_DSR",int_offset_of_element(ss->dsr)); /* MVME197 */
	pair("EF_DLAR",int_offset_of_element(ss->dlar)); /* MVME197 */
	pair("EF_DPAR",int_offset_of_element(ss->dpar)); /* MVME197 */
	pair("EF_ISR",int_offset_of_element(ss->dsr)); /* MVME197 */
	pair("EF_ILAR",int_offset_of_element(ss->ilar)); /* MVME197 */
	pair("EF_IPAR",int_offset_of_element(ss->ipar)); /* MVME197 */
	pair("EF_SRX",int_offset_of_element(ss->dpfsr));
	pair("EF_NREGS",	sizeof(*ss)/sizeof(int));
@


1.5
log
@Added to support MVME188 and MVME197
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.4 1999/02/09 06:36:28 smurph Exp $	*/
d35 1
a35 1
 *	$Id: genassym.c,v 1.4 1999/02/09 06:36:28 smurph Exp $
d54 3
d68 3
d72 1
d93 1
a93 1
	
d95 6
d102 1
a102 1
	
@


1.5.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.8 2001/04/10 01:12:39 miod Exp $	*/
d35 1
a35 1
 *	$Id: genassym.c,v 1.8 2001/04/10 01:12:39 miod Exp $
d38 4
d53 1
d65 5
d73 2
d80 1
d82 1
d86 4
d91 1
d95 2
d98 1
d103 1
d126 1
a126 1
	pair("EF_FPECR",int_offset_of_element(ss->fpecr));
d129 4
a132 4
	pair("EF_FPHS1",int_offset_of_element(ss->fphs1));
	pair("EF_FPLS1",int_offset_of_element(ss->fpls1));
	pair("EF_FPHS2",int_offset_of_element(ss->fphs2));
	pair("EF_FPLS2",int_offset_of_element(ss->fpls2));
d137 1
a137 1
	pair("EF_VECTOR",int_offset_of_element(ss->vector));
d144 8
a151 9
	pair("EF_DSR",  int_offset_of_element(ss->dsr)); /* MVME197 */
	pair("EF_DLAR", int_offset_of_element(ss->dlar)); /* MVME197 */
	pair("EF_DPAR", int_offset_of_element(ss->dpar)); /* MVME197 */
	pair("EF_ISR",  int_offset_of_element(ss->dsr)); /* MVME197 */
	pair("EF_ILAR", int_offset_of_element(ss->ilar)); /* MVME197 */
	pair("EF_IPAR", int_offset_of_element(ss->ipar)); /* MVME197 */
	pair("EF_SRX",  int_offset_of_element(ss->dpfsr));
	pair("EF_CPU",  int_offset_of_element(ss->cpu)); /* cpu number */
	pair("EF_NREGS",sizeof(*ss)/sizeof(int));
@


1.5.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.5.4.1 2001/04/18 16:11:33 niklas Exp $	*/
d35 1
a35 1
 *	$Id: genassym.c,v 1.5.4.1 2001/04/18 16:11:33 niklas Exp $
@


1.4
log
@Added kernel support for user debugging.  Fixed file ID's
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.28 1995/04/19 22:37:27 smurph Exp $	*/
d35 1
a35 1
 *	$Id: genassym.c,v 1.3 1997/03/03 20:21:34 rahnds Exp $
d113 2
d127 2
d144 7
d152 2
@


1.3
log
@Cleanup after import. This also seems to bring up the current version.
@
text
@d1 1
d35 1
a35 1
 *	$Id: genassym.c,v 1.1.1.1 1997/03/03 19:32:33 rahnds Exp $
@


1.2
log
@This is a remove to get rid of the old mvme88k port which was incomplete
to replace it with a working version. The kernel compiles and works
at least.  The new version will be imported shortly.
@
text
@d34 1
a34 1
 *	$Id: genassym.c,v 1.1 1995/10/18 12:32:22 deraadt Exp $
d43 1
d70 2
a76 4
	printf("#ifdef ASSEMBLER\n"
		"#define NEWLINE \\\\ \n"
	"#endif\n");	

d91 2
d99 2
d137 2
d154 22
@


1.1
log
@moved from m88k directory
@
text
@d34 1
a34 1
 *	$Id: genassym.c,v 1.1.1.1 1995/10/18 10:54:25 deraadt Exp $
@


1.1.1.1
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@d34 1
a34 1
 *	$Id: genassym.c,v 1.3 1996/08/02 02:44:17 build Exp build $
a42 1
#include <sys/time.h>
a68 2
	struct m88100_pcb *ks = (struct m88100_pcb *)0;

d74 4
a91 2
	printf("#define\tUSIZE %d\n", USPACE);
	printf("#define\tNBPG %d\n", NBPG);
a97 2
	printf("#define\tPCB_USER_STATE %d\n", &pcb->user_state);

a133 2
	pair("EF_IPFSR",int_offset_of_element(ss->ipfsr));
	pair("EF_DPFSR",int_offset_of_element(ss->dpfsr));
a148 22

	pair("PCB_PC", int_offset_of_element(ks->pcb_pc) * 4);
	pair("PCB_IPL",	int_offset_of_element(ks->pcb_ipl) * 4);
	pair("PCB_R14", int_offset_of_element(ks->pcb_r14) * 4);
	pair("PCB_R15",	int_offset_of_element(ks->pcb_r15) * 4);
	pair("PCB_R16",	int_offset_of_element(ks->pcb_r16) * 4);
	pair("PCB_R17",	int_offset_of_element(ks->pcb_r17) * 4);
	pair("PCB_R18",	int_offset_of_element(ks->pcb_r18) * 4);
	pair("PCB_R19",	int_offset_of_element(ks->pcb_r19) * 4);
	pair("PCB_R20",	int_offset_of_element(ks->pcb_r20) * 4);
	pair("PCB_R21",	int_offset_of_element(ks->pcb_r21) * 4);
	pair("PCB_R22",	int_offset_of_element(ks->pcb_r22) * 4);
	pair("PCB_R23",	int_offset_of_element(ks->pcb_r23) * 4);
	pair("PCB_R24",	int_offset_of_element(ks->pcb_r24) * 4);
	pair("PCB_R25",	int_offset_of_element(ks->pcb_r25) * 4);
	pair("PCB_R26",	int_offset_of_element(ks->pcb_r26) * 4);
	pair("PCB_R27",	int_offset_of_element(ks->pcb_r27) * 4);
	pair("PCB_R28",	int_offset_of_element(ks->pcb_r28) * 4);
	pair("PCB_R29",	int_offset_of_element(ks->pcb_r29) * 4);
	pair("PCB_R30",	int_offset_of_element(ks->pcb_r30) * 4);
	pair("PCB_SP",	int_offset_of_element(ks->pcb_sp) * 4);

@
