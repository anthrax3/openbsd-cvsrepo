head	1.27;
access;
symbols
	OPENBSD_5_5:1.26.0.6
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.26.0.2
	OPENBSD_5_4_BASE:1.26
	OPENBSD_5_3:1.25.0.10
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.25.0.8
	OPENBSD_5_2_BASE:1.25
	OPENBSD_5_1_BASE:1.25
	OPENBSD_5_1:1.25.0.6
	OPENBSD_5_0:1.25.0.4
	OPENBSD_5_0_BASE:1.25
	OPENBSD_4_9:1.25.0.2
	OPENBSD_4_9_BASE:1.25
	OPENBSD_4_8:1.23.0.18
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.23.0.12
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.23.0.16
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.23.0.14
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.23.0.10
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.23.0.8
	OPENBSD_4_3_BASE:1.23
	OPENBSD_4_2:1.23.0.6
	OPENBSD_4_2_BASE:1.23
	OPENBSD_4_1:1.23.0.4
	OPENBSD_4_1_BASE:1.23
	OPENBSD_4_0:1.23.0.2
	OPENBSD_4_0_BASE:1.23
	OPENBSD_3_9:1.21.0.4
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.21.0.2
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.20.0.4
	OPENBSD_3_7_BASE:1.20
	OPENBSD_3_6:1.20.0.2
	OPENBSD_3_6_BASE:1.20
	SMP_SYNC_A:1.18
	SMP_SYNC_B:1.18
	OPENBSD_3_5:1.17.0.2
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.14.0.8
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.14.0.6
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.4
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	UBC_SYNC_B:1.14
	UBC:1.12.0.2
	UBC_BASE:1.12
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.4
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.27
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.26;

1.26
date	2013.05.17.22.46.28;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2011.01.02.13.40.07;	author miod;	state Exp;
branches;
next	1.24;

1.24
date	2010.12.31.21.38.08;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2006.05.06.16.59.28;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2006.04.27.20.19.31;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2005.04.27.14.07.38;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2004.08.02.08.35.00;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2004.07.25.11.06.43;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2004.05.19.14.30.53;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.05.20.07.03;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2003.10.11.22.08.57;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2003.09.16.20.52.22;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2001.12.22.09.49.39;	author smurph;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.22.07.35.43;	author smurph;	state Exp;
branches;
next	1.12;

1.12
date	2001.12.19.07.04.42;	author smurph;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2001.12.16.23.49.47;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.13.08.55.52;	author smurph;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.06.19.53.15;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.11.20.05.24;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.26.14.31.12;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.04.08.09.24;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.14.21.30.46;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.09.05.44.42;	author smurph;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.08.00.03.31;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.01.03.38.22;	author smurph;	state Exp;
branches;
next	1.1;

1.1
date	99.09.27.19.13.24;	author smurph;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.04.18.16.11.40;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2001.07.04.10.20.21;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2001.10.31.03.01.20;	author nate;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2001.11.13.21.04.15;	author niklas;	state Exp;
branches;
next	1.1.4.5;

1.1.4.5
date	2002.03.06.02.04.45;	author niklas;	state Exp;
branches;
next	1.1.4.6;

1.1.4.6
date	2004.02.19.10.49.08;	author niklas;	state Exp;
branches;
next	1.1.4.7;

1.1.4.7
date	2004.06.05.23.09.51;	author niklas;	state Exp;
branches;
next	;

1.12.2.1
date	2002.01.31.22.55.19;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.27
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: pmap_table.c,v 1.26 2013/05/17 22:46:28 miod Exp $	*/

/*
 * Mach Operating System
 * Copyright (c) 1993-1992 Carnegie Mellon University
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie Mellon
 * the rights to redistribute these changes.
 */

#include <sys/param.h>
#include <sys/systm.h>

#include <uvm/uvm_extern.h>

#include <machine/board.h>
#include <machine/pmap_table.h>

const struct pmap_table *
pmap_table_build()
{
	return platform->ptable;
}
@


1.26
log
@Replace the bunch of md_* function pointers with a `struct board' containing
function pointers for all the board-specific code.

Add a bunch of `struct board' methods to cover most, if not all, of the
`per-board' logic. This allows most of the md drivers to be cleaned up and
no longer need to embed board-specific knowledge.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.25 2011/01/02 13:40:07 miod Exp $	*/
@


1.25
log
@Kill pmap_table_t typedef.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.24 2010/12/31 21:38:08 miod Exp $	*/
d34 1
a36 42
#define	R	UVM_PROT_R
#define	RW	UVM_PROT_RW
#define	CW	CACHE_WT
#define	CI	CACHE_INH
#define	CG	CACHE_GLOBAL

#ifdef MVME187
#include <machine/mvme187.h>
const struct pmap_table
m187_board_table[] = {
	{ BUG187_START,		BUG187_SIZE,	RW, CI },
#if 0	/* mapped by the hardcoded BATC entries */
	{ OBIO187_START,	OBIO187_SIZE,	RW, CI },
#endif
	{ 0, 0xffffffff, 0, 0 },
};
#endif

#ifdef MVME188
#include <machine/mvme188.h>
const struct pmap_table
m188_board_table[] = {
	{ MVME188_EPROM,	MVME188_EPROM_SIZE, RW, CI },
#if 0	/* mapped by the hardcoded BATC entries */
	{ MVME188_UTILITY,	MVME188_UTILITY_SIZE, RW, CI },
#endif
	{ 0, 0xffffffff, 0, 0 },
};
#endif

#ifdef MVME197
#include <machine/mvme197.h>
const struct pmap_table
m197_board_table[] = {
	/* We need flash 1:1 mapped to access the 88410 chip underneath */
	{ FLASH_START,		FLASH_SIZE,	RW, CI },
	{ OBIO197_START,	OBIO197_SIZE,	RW, CI },
	/* No need to mention BUG here - it is contained inside OBIO */
	{ 0, 0xffffffff, 0, 0 },
};
#endif

d40 1
a40 17
	switch (brdtyp) {
#ifdef MVME187
	case BRD_187:
	case BRD_8120:
		return m187_board_table;
#endif
#ifdef MVME188
	case BRD_188:
		return m188_board_table;
#endif
#ifdef MVME197
	case BRD_197:
		return m197_board_table;
#endif
	default:
		return NULL;	/* silence warning */
	}
@


1.24
log
@Massive overhauling of the m88k pmap, though I can't pretend it's a new pmap
since a large part of the structures and logic remains.

Since m88k has separate supervisor/user spaces, we can map physical memory 1:1
in supervisor space, and have the kernel virtual address space start from the
end of physical memory.

This allows us to switch to __HAVE_PMAP_DIRECT. And to get rid of the double
mapped sdt, since now their virtual and physical addresses will always match.

The upper bound of the kernel virtual memory space is now platform dependent,
until the code which relies upon some hardware devices being mapped 1:1 in
supervisor mode is updated to no longer require this (this is mainly a PITA on
luna88k, where onboard devices start at 0x40000000, leaving only 1GB of KVA at
the moment - still much better than the previous 512MB).

Tested on mvme88k only (187, 188, 197LE, 197DP). Other platforms ought to
work, aviion will be checked shortly and fixed if necessary. No known
OpenBSD/luna88k system in working condition at the moment.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.23 2006/05/06 16:59:28 miod Exp $	*/
a33 1
#include <machine/cmmu.h>
d44 1
a44 1
const pmap_table_entry
d56 1
a56 1
const pmap_table_entry
d68 1
a68 1
const pmap_table_entry
d78 2
a79 2
pmap_table_t
pmap_table_build(void)
@


1.23
log
@On 88100-based systems, take the two hardwired BATC into account in
pmap_extract(), and do not bother creating regular page table mappings
for obio regions which are covered by these BATC entries.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.22 2006/04/27 20:19:31 miod Exp $	*/
a42 1
/*  phys_start, virt_start, size, prot, cacheability */
d47 1
a47 1
	{ BUG187_START,		BUG187_START,	BUG187_SIZE,	RW, CI },
d49 1
a49 1
	{ OBIO187_START,	OBIO187_START,	OBIO187_SIZE,	RW, CI },
d51 1
a51 1
	{ 0, 0, 0xffffffff, 0, 0 },
d59 1
a59 1
	{ MVME188_EPROM,	MVME188_EPROM,	MVME188_EPROM_SIZE, RW, CI },
d61 1
a61 1
	{ MVME188_UTILITY,	MVME188_UTILITY, MVME188_UTILITY_SIZE, RW, CI },
d63 1
a63 1
	{ 0, 0, 0xffffffff, 0, 0 },
d72 2
a73 2
	{ FLASH_START,		FLASH_START,	FLASH_SIZE,	RW, CI },
	{ OBIO197_START,	OBIO197_START,	OBIO197_SIZE,	RW, CI },
d75 1
a75 1
	{ 0, 0, 0xffffffff, 0, 0 },
@


1.22
log
@Adjust sizes for the mandatory 1:1 mappings created in pmap_bootstrap().
Saves up to 12KB of no longer necessary page tables.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.21 2005/04/27 14:07:38 miod Exp $	*/
d49 1
d51 1
d61 1
d63 1
@


1.21
log
@Always include <uvm/uvm_extern.h> before <machine/cmmu.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.20 2004/08/02 08:35:00 miod Exp $	*/
d37 2
a38 2
#define	R	VM_PROT_READ
#define	RW	(VM_PROT_READ | VM_PROT_WRITE)
d48 2
a49 2
	{ BUG187_START, BUG187_START, round_page(BUG187_SIZE), RW, CI },
	{ OBIO_START  , OBIO_START  , round_page(OBIO_SIZE)  , RW, CI },
d58 2
a59 2
	{ MVME188_UTILITY, MVME188_UTILITY,
	    round_page(MVME188_UTILITY_SIZE), RW, CI },
d68 3
a70 2
	{ FLASH_START, FLASH_START, round_page(FLASH_SIZE), RW, CI },
	{ OBIO_START , OBIO_START , round_page(OBIO_SIZE) , RW, CI },
@


1.20
log
@More include files cleaning:
- move MAX_CPUS constant to <machine/cpu.h>
- do not include <machine/board.h> unless needed. In fact, remove this file
  entirely on mvme88k, and include <machine/mvme*.h> on a
  compiling-for-this-board basis
- keep MAX_CMMUS constant private to the m8820x code
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.19 2004/07/25 11:06:43 miod Exp $	*/
d31 3
a34 1
#include <uvm/uvm_extern.h>
@


1.19
log
@Merge luna88k and mvme88k pmap. The pmap will now assume that the memory
below the kernel text is reserved for the PROM, instead of using fixed
(but different) values between luna88k and mvme88k.

Tested on mvme88k by myself, on luna88k by aoyama@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.18 2004/05/19 14:30:53 miod Exp $	*/
a30 1
#include <machine/board.h>
d43 1
d53 1
d63 1
@


1.18
log
@No need to force a kernel mapping for the sram, the sram driver will do it
if necessary.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.17 2004/01/05 20:07:03 miod Exp $	*/
a30 1
#include <sys/types.h>
@


1.17
log
@Stop masquerading the M8120 (no-slot MVME187) as a real MVME187, and keep
its value in brdtyp.

Compensate by checking for BRD_8120 everywhere BRD_187 was checked.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.16 2003/10/11 22:08:57 miod Exp $	*/
a47 1
	{ SRAM_START  , SRAM_START  , round_page(SRAM_SIZE)  , RW, CG },
@


1.16
log
@Nuke trailing whitespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.15 2003/09/16 20:52:22 miod Exp $	*/
d79 1
@


1.15
log
@Remove unused material from include files, as well as the annoying U() macro
which is only used to obfuscate things.

Doing this points out that the BUG memory is not at the same address on
187 and 197 (the 197 BUG is inside obio), so provide distinct constants,
and treat 187 and 197 slightly differently in pmap_bootstrap(). However, we
now need to map the 197 flash memory as well...

While there, simplify and constify pmap_table_build() and its associated data.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.14 2001/12/22 09:49:39 smurph Exp $	*/
d3 1
a3 1
/* 
d7 1
a7 1
 * 
d13 1
a13 1
 * 
d17 1
a17 1
 * 
d19 1
a19 1
 * 
d24 2
a25 2
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon 
d52 1
a52 1
#endif 
d61 1
a61 1
#endif 
d71 1
a71 1
#endif 
d73 1
a73 1
pmap_table_t 
d80 1
a80 1
#endif 
d84 1
a84 1
#endif 
d88 1
a88 1
#endif 
@


1.14
log
@masive cmmu overhaul.  function pointers now control cmmu functionality
instead of case statements based on cpu type.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.13 2001/12/22 07:35:43 smurph Exp $	*/
d33 1
a33 1
#include <machine/cmmu.h>		/* CMMU stuff */
d35 1
a35 1
#include <machine/pmap_table.h>		/* pmap_table.h*/
d37 5
a41 5
#define R VM_PROT_READ
#define RW VM_PROT_READ|VM_PROT_WRITE
#define CW CACHE_WT
#define CI CACHE_INH
#define CG CACHE_GLOBAL
a42 2
#undef VEQR_ADDR
#define VEQR_ADDR 0
d45 6
a50 5
static pmap_table_entry m187_board_table[] = {
	{ BUGROM_START, BUGROM_START, BUGROM_SIZE, RW, CI},
	{ SRAM_START  , SRAM_START  , SRAM_SIZE  , RW, CG},
	{ OBIO_START  , OBIO_START  , OBIO_SIZE  , RW, CI},
	{ 0           , 0           , 0xffffffff , 0 , 0},
d55 5
a59 3
static pmap_table_entry m188_board_table[] = {
	{ MVME188_UTILITY, MVME188_UTILITY, MVME188_UTILITY_SIZE, RW, CI},
	{ 0           , 0           , 0xffffffff , 0,  0},
d64 6
a69 4
static pmap_table_entry m197_board_table[] = {
	{ BUGROM_START, BUGROM_START, BUGROM_SIZE, RW, CI},
	{ OBIO_START  , OBIO_START  , OBIO_SIZE  , RW, CI},
	{ 0           , 0           , 0xffffffff , 0 , 0},
d74 1
a74 2
pmap_table_build(endoftext)
	unsigned endoftext;
a75 3
	unsigned int i;
	pmap_table_t bt, pbt;

d79 1
a79 2
		bt = m187_board_table;
		break;
d83 1
a83 2
		bt = m188_board_table;
		break;
d87 1
a87 2
		bt = m197_board_table;
		break;
d89 2
a91 9

	/* round off all entries to nearest segment */
	pbt = bt;
	for (i = 0; pbt->size != 0xffffffff; i++) {
		if (pbt->size>0)
			pbt->size = (pbt->size + PAGE_MASK) & ~PAGE_MASK;
		pbt++;
	}
	return bt;
@


1.13
log
@rename m882xx.h to m8820x.h
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.12 2001/12/19 07:04:42 smurph Exp $	*/
d33 1
a33 2
#include <sys/param.h>
#include <machine/m8820x.h>		/* CMMU stuff */
@


1.12
log
@Introduce brdtyp and change what cputyp means.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.11 2001/12/16 23:49:47 miod Exp $	*/
d34 1
a34 1
#include <machine/m882xx.h>		/* CMMU stuff */
@


1.12.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.14 2001/12/22 09:49:39 smurph Exp $	*/
d33 2
a34 1
#include <machine/cmmu.h>		/* CMMU stuff */
@


1.11
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.9 2001/11/06 19:53:15 miod Exp $	*/
a65 1
	{ SRAM_START  , SRAM_START  , SRAM_SIZE  , RW, CG},
d78 1
a78 1
	switch (cputyp) {
d80 1
a80 1
	case CPU_187:
d85 1
a85 1
	case CPU_188:
d90 1
a90 1
	case CPU_197:
@


1.10
log
@Support for MVME197 completed.  Fix SPL defs.
@
text
@d34 1
a34 1
#include <machine/cmmu.h>		/* CMMU stuff */
d66 1
d79 1
a79 1
	switch (brdtyp) {
d81 1
a81 1
	case BRD_187:
d86 1
a86 1
	case BRD_188:
d91 1
a91 1
	case BRD_197:
@


1.9
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.8 2001/09/11 20:05:24 miod Exp $	*/
d34 1
a34 1
#include <machine/m882xx.h>		/* CMMU stuff */
a65 1
	{ SRAM_START  , SRAM_START  , SRAM_SIZE  , RW, CG},
d78 1
a78 1
	switch (cputyp) {
d80 1
a80 1
	case CPU_187:
d85 1
a85 1
	case CPU_188:
d90 1
a90 1
	case CPU_197:
@


1.8
log
@Don't include <vm/vm_kern.h> if you don't need foo_map.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.7 2001/08/26 14:31:12 miod Exp $	*/
d35 1
a35 1
#include <vm/vm.h>
@


1.7
log
@Add prototypes, fix compilation warnings, random style fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_table.c,v 1.6 2001/07/04 08:09:24 niklas Exp $	*/
a35 1
#include <vm/vm_kern.h>			/* vm/vm_kern.h */
@


1.6
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a95 3
	default:
		panic("pmap_table_build: Unknown CPU type.");
		/* NOT REACHED */
@


1.5
log
@Big cleanup of VM issues:
o get rid of m88k_foo macros when there is an mi foo macro
o remove the ability, for the pmap module, to handle a native mmu page
  size different from the vm module page size. This allows some
  optimizations in pmap.c
o remove dead stuff from <machine/vmparam.h>
@
text
@d1 2
@


1.4
log
@kernel will compile with -Werror.  Added intr.h
@
text
@a38 1
#define C CACHE_DFL
a41 2
#define PAGE M88K_PGBYTES
#define SEG M88K_SGBYTES
d103 1
a103 1
			pbt->size = (pbt->size + M88K_PGBYTES-1) & ~(M88K_PGBYTES-1);
@


1.3
log
@Some warning hunting.
@
text
@d27 2
d76 1
a76 1
unsigned endoftext;
@


1.2
log
@Major changes to get MVME188 working.  More header and code cleanups.  The
kernel is tested on MVME188A/2P256 and MVME188A/1P64.
@
text
@a75 1
	extern int kernelstart;
@


1.1
log
@Added to support MVME188 and MVME197
@
text
@a43 3
#define M188_UTILITY		U(0xFF000000)
#define M188_UTILITY_SIZE	U(0x01000000)
#if 0 
a45 2
#endif 

d49 4
a52 4
   { BUGROM_START, BUGROM_START, BUGROM_SIZE, RW, CI},
   { SRAM_START  , SRAM_START  , SRAM_SIZE  , RW, CG},
   { OBIO_START  , OBIO_START  , OBIO_SIZE  , RW, CI},
   { 0           , 0           , 0xffffffff , 0 , 0},
d58 2
a59 4
   { MVME188_UTILITY, MVME188_UTILITY, MVME188_UTILITY_SIZE, RW, CI},
   { 0           , VEQR_ADDR   , 0/*filled in later*/, RW, CG},
   { 0           , 0           , 0/*filled in later*/, RW, CG},
   { 0           , 0           , 0xffffffff , 0,  0},
d65 4
a68 4
   { BUGROM_START, BUGROM_START, BUGROM_SIZE, RW, CI},
   { SRAM_START  , SRAM_START  , SRAM_SIZE  , RW, CG},
   { OBIO_START  , OBIO_START  , OBIO_SIZE  , RW, CG},
   { 0           , 0           , 0xffffffff , 0 , 0},
d72 3
a74 1
pmap_table_t pmap_table_build(unsigned memory_size)
d76 3
a78 3
   extern int kernelstart;
   unsigned int i;
   pmap_table_t bt, pbt;
d80 1
a80 1
   switch (cputyp) {
d82 3
a84 3
      case CPU_187:
         bt = m187_board_table;
         break;
d87 3
a89 6
      case CPU_188:
         bt = m188_board_table;
         /* fill in the veqr map entry */
         m188_board_table[1].size = memory_size;
         m188_board_table[2].size = (unsigned)&kernelstart;
         break;
d92 17
a108 18
      case CPU_197:
         bt = m197_board_table;
         break;
#endif 
   default:
      panic("pmap_table_build: Unknown CPU type.");
      /* NOT REACHED */
   }
   
   /* round off all entries to nearest segment */
   pbt = bt;
   for (i = 0; pbt->size != 0xffffffff; i++){
      if (pbt->size>0)
         pbt->size = (pbt->size + M88K_PGBYTES-1) & ~(M88K_PGBYTES-1);
      pbt++;
   }

   return bt;
@


1.1.4.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@a26 2
#include <sys/param.h>
#include <sys/systm.h>
d44 3
d49 2
d54 4
a57 4
	{ BUGROM_START, BUGROM_START, BUGROM_SIZE, RW, CI},
	{ SRAM_START  , SRAM_START  , SRAM_SIZE  , RW, CG},
	{ OBIO_START  , OBIO_START  , OBIO_SIZE  , RW, CI},
	{ 0           , 0           , 0xffffffff , 0 , 0},
d63 4
a66 2
	{ MVME188_UTILITY, MVME188_UTILITY, MVME188_UTILITY_SIZE, RW, CI},
	{ 0           , 0           , 0xffffffff , 0,  0},
d72 4
a75 4
	{ BUGROM_START, BUGROM_START, BUGROM_SIZE, RW, CI},
	{ SRAM_START  , SRAM_START  , SRAM_SIZE  , RW, CG},
	{ OBIO_START  , OBIO_START  , OBIO_SIZE  , RW, CI},
	{ 0           , 0           , 0xffffffff , 0 , 0},
d79 1
a79 3
pmap_table_t 
pmap_table_build(endoftext)
	unsigned endoftext;
d81 3
a83 2
	unsigned int i;
	pmap_table_t bt, pbt;
d85 1
a85 1
	switch (cputyp) {
d87 3
a89 3
	case CPU_187:
		bt = m187_board_table;
		break;
d92 6
a97 3
	case CPU_188:
		bt = m188_board_table;
		break;
d100 18
a117 17
	case CPU_197:
		bt = m197_board_table;
		break;
#endif 
	default:
		panic("pmap_table_build: Unknown CPU type.");
		/* NOT REACHED */
	}

	/* round off all entries to nearest segment */
	pbt = bt;
	for (i = 0; pbt->size != 0xffffffff; i++) {
		if (pbt->size>0)
			pbt->size = (pbt->size + M88K_PGBYTES-1) & ~(M88K_PGBYTES-1);
		pbt++;
	}
	return bt;
@


1.1.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d39 1
d43 2
d106 1
a106 1
			pbt->size = (pbt->size + PAGE_MASK) & ~PAGE_MASK;
@


1.1.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@a0 2
/*	$OpenBSD$	*/

d34 1
d94 3
@


1.1.4.4
log
@Merge in -current
@
text
@d35 1
a35 1
#include <uvm/uvm_extern.h>
@


1.1.4.5
log
@Merge in trunk
@
text
@d33 2
a34 1
#include <machine/cmmu.h>		/* CMMU stuff */
d66 1
d79 1
a79 1
	switch (brdtyp) {
d81 1
a81 1
	case BRD_187:
d86 1
a86 1
	case BRD_188:
d91 1
a91 1
	case BRD_197:
@


1.1.4.6
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d3 1
a3 1
/*
d7 1
a7 1
 *
d13 1
a13 1
 *
d17 1
a17 1
 *
d19 1
a19 1
 *
d24 2
a25 2
 *
 * any improvements or extensions that they make and grant Carnegie Mellon
d33 1
a33 1
#include <machine/cmmu.h>
d35 1
a35 1
#include <machine/pmap_table.h>
d37 5
a41 5
#define	R	VM_PROT_READ
#define	RW	(VM_PROT_READ | VM_PROT_WRITE)
#define	CW	CACHE_WT
#define	CI	CACHE_INH
#define	CG	CACHE_GLOBAL
d43 2
d47 5
a51 6
const pmap_table_entry
m187_board_table[] = {
	{ BUG187_START, BUG187_START, round_page(BUG187_SIZE), RW, CI },
	{ SRAM_START  , SRAM_START  , round_page(SRAM_SIZE)  , RW, CG },
	{ OBIO_START  , OBIO_START  , round_page(OBIO_SIZE)  , RW, CI },
	{ 0, 0, 0xffffffff, 0, 0 },
d53 1
a53 1
#endif
d56 3
a58 5
const pmap_table_entry
m188_board_table[] = {
	{ MVME188_UTILITY, MVME188_UTILITY,
	    round_page(MVME188_UTILITY_SIZE), RW, CI },
	{ 0, 0, 0xffffffff, 0, 0 },
d60 1
a60 1
#endif
d63 4
a66 6
const pmap_table_entry
m197_board_table[] = {
	{ FLASH_START, FLASH_START, round_page(FLASH_SIZE), RW, CI },
	{ OBIO_START , OBIO_START , round_page(OBIO_SIZE) , RW, CI },
	/* No need to mention BUG here - it is contained inside OBIO */
	{ 0, 0, 0xffffffff, 0, 0 },
d68 1
a68 1
#endif
d70 3
a72 2
pmap_table_t
pmap_table_build(void)
d74 3
d80 3
a82 3
	case BRD_8120:
		return m187_board_table;
#endif
d85 3
a87 2
		return m188_board_table;
#endif
d90 11
a100 4
		return m197_board_table;
#endif
	default:
		return NULL;	/* silence warning */
d102 1
@


1.1.4.7
log
@Merge with the trunk
@
text
@d48 1
@


