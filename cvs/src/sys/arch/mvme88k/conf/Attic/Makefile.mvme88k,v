head	1.82;
access;
symbols
	OPENBSD_5_5:1.81.0.4
	OPENBSD_5_5_BASE:1.81
	OPENBSD_5_4:1.78.0.2
	OPENBSD_5_4_BASE:1.78
	OPENBSD_5_3:1.76.0.2
	OPENBSD_5_3_BASE:1.76
	OPENBSD_5_2:1.74.0.4
	OPENBSD_5_2_BASE:1.74
	OPENBSD_5_1_BASE:1.74
	OPENBSD_5_1:1.74.0.2
	OPENBSD_5_0:1.73.0.2
	OPENBSD_5_0_BASE:1.73
	OPENBSD_4_9:1.70.0.2
	OPENBSD_4_9_BASE:1.70
	OPENBSD_4_8:1.67.0.2
	OPENBSD_4_8_BASE:1.67
	OPENBSD_4_7:1.47.0.2
	OPENBSD_4_7_BASE:1.47
	OPENBSD_4_6:1.45.0.6
	OPENBSD_4_6_BASE:1.45
	OPENBSD_4_5:1.45.0.2
	OPENBSD_4_5_BASE:1.45
	OPENBSD_4_4:1.44.0.2
	OPENBSD_4_4_BASE:1.44
	OPENBSD_4_3:1.43.0.2
	OPENBSD_4_3_BASE:1.43
	OPENBSD_4_2:1.40.0.2
	OPENBSD_4_2_BASE:1.40
	OPENBSD_4_1:1.39.0.4
	OPENBSD_4_1_BASE:1.39
	OPENBSD_4_0:1.39.0.2
	OPENBSD_4_0_BASE:1.39
	OPENBSD_3_9:1.37.0.2
	OPENBSD_3_9_BASE:1.37
	OPENBSD_3_8:1.36.0.6
	OPENBSD_3_8_BASE:1.36
	OPENBSD_3_7:1.36.0.4
	OPENBSD_3_7_BASE:1.36
	OPENBSD_3_6:1.36.0.2
	OPENBSD_3_6_BASE:1.36
	SMP_SYNC_A:1.34
	SMP_SYNC_B:1.34
	OPENBSD_3_5:1.31.0.2
	OPENBSD_3_5_BASE:1.31
	OPENBSD_3_4:1.28.0.2
	OPENBSD_3_4_BASE:1.28
	UBC_SYNC_A:1.25
	OPENBSD_3_3:1.23.0.2
	OPENBSD_3_3_BASE:1.23
	OPENBSD_3_2:1.21.0.2
	OPENBSD_3_2_BASE:1.21
	OPENBSD_3_1:1.19.0.2
	OPENBSD_3_1_BASE:1.19
	UBC_SYNC_B:1.21
	UBC:1.16.0.2
	UBC_BASE:1.16
	OPENBSD_3_0:1.14.0.2
	OPENBSD_3_0_BASE:1.14
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	SMP:1.7.0.4
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	mvme88kport:1.1.1.1;
locks; strict;
comment	@# @;


1.82
date	2014.03.18.22.36.35;	author miod;	state dead;
branches;
next	1.81;

1.81
date	2013.11.02.23.42.12;	author miod;	state Exp;
branches;
next	1.80;

1.80
date	2013.11.02.23.06.18;	author miod;	state Exp;
branches;
next	1.79;

1.79
date	2013.10.15.19.23.29;	author guenther;	state Exp;
branches;
next	1.78;

1.78
date	2013.06.23.20.33.51;	author miod;	state Exp;
branches;
next	1.77;

1.77
date	2013.03.30.07.25.20;	author tedu;	state Exp;
branches;
next	1.76;

1.76
date	2013.01.05.11.20.56;	author miod;	state Exp;
branches;
next	1.75;

1.75
date	2012.08.22.16.58.26;	author pascal;	state Exp;
branches;
next	1.74;

1.74
date	2011.11.08.18.41.34;	author matthieu;	state Exp;
branches;
next	1.73;

1.73
date	2011.07.07.22.28.18;	author guenther;	state Exp;
branches;
next	1.72;

1.72
date	2011.07.06.02.08.05;	author tedu;	state Exp;
branches;
next	1.71;

1.71
date	2011.04.15.02.41.28;	author guenther;	state Exp;
branches;
next	1.70;

1.70
date	2010.12.30.18.49.31;	author deraadt;	state Exp;
branches;
next	1.69;

1.69
date	2010.12.02.20.57.08;	author deraadt;	state Exp;
branches;
next	1.68;

1.68
date	2010.12.02.04.35.02;	author deraadt;	state Exp;
branches;
next	1.67;

1.67
date	2010.06.01.23.49.23;	author deraadt;	state Exp;
branches;
next	1.66;

1.66
date	2010.05.28.14.27.08;	author guenther;	state Exp;
branches;
next	1.65;

1.65
date	2010.05.25.21.15.27;	author deraadt;	state Exp;
branches;
next	1.64;

1.64
date	2010.05.25.17.27.55;	author deraadt;	state Exp;
branches;
next	1.63;

1.63
date	2010.05.25.15.05.01;	author deraadt;	state Exp;
branches;
next	1.62;

1.62
date	2010.05.25.02.35.02;	author deraadt;	state Exp;
branches;
next	1.61;

1.61
date	2010.05.24.23.19.22;	author deraadt;	state Exp;
branches;
next	1.60;

1.60
date	2010.05.24.19.58.51;	author deraadt;	state Exp;
branches;
next	1.59;

1.59
date	2010.05.24.14.59.16;	author deraadt;	state Exp;
branches;
next	1.58;

1.58
date	2010.04.28.15.31.33;	author deraadt;	state Exp;
branches;
next	1.57;

1.57
date	2010.04.27.16.54.54;	author deraadt;	state Exp;
branches;
next	1.56;

1.56
date	2010.04.27.06.46.26;	author deraadt;	state Exp;
branches;
next	1.55;

1.55
date	2010.04.27.05.07.29;	author deraadt;	state Exp;
branches;
next	1.54;

1.54
date	2010.04.27.05.05.21;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2010.04.27.04.31.47;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2010.04.27.03.37.38;	author deraadt;	state Exp;
branches;
next	1.51;

1.51
date	2010.04.26.22.21.15;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2010.04.26.22.11.37;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	2010.04.26.20.50.17;	author deraadt;	state Exp;
branches;
next	1.48;

1.48
date	2010.04.26.18.58.30;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	2009.10.19.19.46.56;	author guenther;	state Exp;
branches;
next	1.46;

1.46
date	2009.08.09.23.04.49;	author miod;	state Exp;
branches;
next	1.45;

1.45
date	2009.01.11.21.02.03;	author pirofti;	state Exp;
branches;
next	1.44;

1.44
date	2008.04.12.21.04.17;	author miod;	state Exp;
branches;
next	1.43;

1.43
date	2007.11.30.07.52.06;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2007.11.25.18.25.29;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2007.11.25.11.23.33;	author deraadt;	state Exp;
branches;
next	1.40;

1.40
date	2007.07.30.16.23.33;	author thib;	state Exp;
branches;
next	1.39;

1.39
date	2006.07.27.05.58.11;	author miod;	state Exp;
branches;
next	1.38;

1.38
date	2006.05.04.19.24.12;	author miod;	state Exp;
branches;
next	1.37;

1.37
date	2005.09.06.19.21.57;	author miod;	state Exp;
branches;
next	1.36;

1.36
date	2004.07.13.09.47.06;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2004.07.02.13.58.17;	author miod;	state Exp;
branches;
next	1.34;

1.34
date	2004.04.29.19.54.36;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2004.04.29.14.33.27;	author miod;	state Exp;
branches;
next	1.32;

1.32
date	2004.04.05.19.17.25;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2003.12.21.16.03.34;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	2003.10.11.22.08.55;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2003.10.01.20.39.38;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2003.08.30.21.15.59;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2003.07.22.19.39.50;	author otto;	state Exp;
branches;
next	1.26;

1.26
date	2003.05.23.22.16.16;	author tedu;	state Exp;
branches;
next	1.25;

1.25
date	2003.05.13.22.45.10;	author miod;	state Exp;
branches;
next	1.24;

1.24
date	2003.05.13.06.12.43;	author tedu;	state Exp;
branches;
next	1.23;

1.23
date	2002.12.25.21.10.26;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2002.12.02.09.00.24;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2002.08.09.20.24.43;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2002.06.22.14.05.51;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2002.02.19.01.53.30;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2001.12.24.23.12.14;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2001.12.22.18.22.38;	author smurph;	state Exp;
branches;
next	1.16;

1.16
date	2001.12.16.23.49.43;	author miod;	state Exp;
branches
	1.16.2.1;
next	1.15;

1.15
date	2001.12.13.20.32.56;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.26.14.31.36;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2001.07.15.13.10.49;	author assar;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.20.05.50.43;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2001.03.15.23.59.14;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2001.03.07.23.34.39;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.13.05.18.58;	author smurph;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.03.00.54.52;	author todd;	state Exp;
branches;
next	1.7;

1.7
date	99.09.27.21.30.11;	author smurph;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	99.09.27.21.21.15;	author smurph;	state Exp;
branches;
next	1.5;

1.5
date	98.12.15.06.02.55;	author smurph;	state Exp;
branches;
next	1.4;

1.4
date	98.09.15.04.01.22;	author smurph;	state Exp;
branches;
next	1.3;

1.3
date	97.09.15.02.40.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.05.24.03.02.28;	author rahnds;	state Exp;
branches;
next	1.1;

1.1
date	97.03.03.19.31.53;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.03.19.31.53;	author rahnds;	state Exp;
branches;
next	;

1.7.4.1
date	2000.03.24.09.08.13;	author niklas;	state Exp;
branches;
next	1.7.4.2;

1.7.4.2
date	2001.04.18.16.10.49;	author niklas;	state Exp;
branches;
next	1.7.4.3;

1.7.4.3
date	2001.07.04.10.19.50;	author niklas;	state Exp;
branches;
next	1.7.4.4;

1.7.4.4
date	2001.10.31.03.01.18;	author nate;	state Exp;
branches;
next	1.7.4.5;

1.7.4.5
date	2002.03.06.01.08.05;	author niklas;	state Exp;
branches;
next	1.7.4.6;

1.7.4.6
date	2003.03.27.23.32.17;	author niklas;	state Exp;
branches;
next	1.7.4.7;

1.7.4.7
date	2003.05.16.00.29.39;	author niklas;	state Exp;
branches;
next	1.7.4.8;

1.7.4.8
date	2003.06.07.11.13.16;	author ho;	state Exp;
branches;
next	1.7.4.9;

1.7.4.9
date	2004.02.19.10.49.06;	author niklas;	state Exp;
branches;
next	1.7.4.10;

1.7.4.10
date	2004.06.05.23.09.48;	author niklas;	state Exp;
branches;
next	;

1.16.2.1
date	2002.01.31.22.55.17;	author niklas;	state Exp;
branches;
next	1.16.2.2;

1.16.2.2
date	2002.06.11.03.37.09;	author art;	state Exp;
branches;
next	1.16.2.3;

1.16.2.3
date	2002.10.29.00.28.07;	author art;	state Exp;
branches;
next	1.16.2.4;

1.16.2.4
date	2003.05.19.21.45.52;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.82
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@#	$OpenBSD: Makefile.mvme88k,v 1.81 2013/11/02 23:42:12 miod Exp $

# For instructions on building kernels consult the config(8) and options(4)
# manual pages.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
# DEBUG is set to -g by config if debugging is requested (config -g).
# PROF is set to -pg by config if profiling is requested (config -p).

.include <bsd.own.mk>

SIZE?=	size
STRIP?=	strip

# source tree is located via $S relative to the compilation directory
.ifndef S
S!=	cd ../../../..; pwd
.endif

_machdir?=	$S/arch/${_mach}
_archdir?=	$S/arch/${_arch}

INCLUDES=	-nostdinc -I$S -I. -I$S/arch
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -D__${_mach}__ -MD -MP
CWARNFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-main -Wno-uninitialized -Wno-format \
		-Wstack-larger-than-2047

CMACHFLAGS=	-mno-check-zero-division -mmemcpy
CMACHFLAGS+=	-fno-builtin-printf -fno-builtin-snprintf \
		-fno-builtin-vsnprintf -fno-builtin-log \
		-fno-builtin-log2 -fno-builtin-malloc ${NOPIE_FLAGS}
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif

COPTS?=		-O2
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS} ${PIPE}
AFLAGS=		-D_LOCORE -x assembler-with-cpp ${CWARNFLAGS} ${CMACHFLAGS}
LINKFLAGS=	-T ${_machdir}/conf/ld.script \
		-Ttext 0x80000 -e __start -X -N --warn-common -nopie

.if ${IDENT:M-DDDB_STRUCT}
DB_STRUCTINFO=	db_structinfo.h
.else
DB_STRUCTINFO=
.endif

HOSTCC?=	${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}
HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<

NORMAL_C_NOP=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<

%OBJS

%CFILES

%SFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_HEAD=	locore.o param.o ioconf.o
SYSTEM_OBJ=	${SYSTEM_HEAD} ${OBJS}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	@@rm -f $@@
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_HEAD} vers.o $${OBJS}'; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_HEAD} vers.o ${OBJS}
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@

DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
STRIPFLAGS=	-g -x
SYSTEM_LD_TAIL+=; \
		echo mv $@@ $@@.gdb; rm -f $@@.gdb; mv $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} -o $@@ $@@.gdb; \
		${STRIP} ${STRIPFLAGS} -o $@@ $@@.gdb
.else
LINKFLAGS+=	-S -x
.endif

%LOAD

# cc's -MD puts the source and output paths in the dependency file;
# since those are temp files here we need to fix it up.  It also
# puts the file in /tmp, so we use -MF to put it in the current
# directory as assym.P and then generate assym.d from it with a
# good target name
assym.h: $S/kern/genassym.sh Makefile \
	 ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf
	cat ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} -MF assym.P > assym.h.tmp
	sed '1s/.*/assym.h: \\/' assym.P > assym.d
	sort -u assym.h.tmp > assym.h

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C}

mcount.o: $S/lib/libkern/mcount.c Makefile
	${NORMAL_C_NOP}

ioconf.o: ioconf.c
	${NORMAL_C}

vers.o: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c

clean::
	rm -f eddep *bsd *bsd.gdb tags *.[dio] [a-z]*.s \
	    [Ee]rrs linterrs assym.h ${DB_STRUCTINFO}

lint:
	@@lint -hbxncez -Dvolatile= ${CPPFLAGS} -UKGDB \
	    ${CFILES} ioconf.c param.c | \
	    grep -v 'static function .* unused'

depend:
	@@touch $@@

tags:
	@@echo "see $S/kern/Makefile for tags"

db_structinfo.h: $S/ddb/db_structinfo.c $S/ddb/parse_structinfo.pl
	${CC} ${CFLAGS} ${CPPFLAGS} -MT $@@ -gstabs -c $S/ddb/db_structinfo.c
	objdump -g db_structinfo.o | perl $S/ddb/parse_structinfo.pl > $@@
	rm -f db_structinfo.o

locore.o: ${_machdir}/${_mach}/locore.S assym.h
eh.o m88100_fp.o mutex.o process.o subr.o: assym.h

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif

# pull in the dependency information
.if !empty(DB_STRUCTINFO) && !exists(${DB_STRUCTINFO})
 ${SYSTEM_OBJ}: ${DB_STRUCTINFO}
.endif
.ifnmake clean
. for o in ${SYSTEM_OBJ} assym.h ${DB_STRUCTINFO}
.  if exists(${o:R}.d)
.   include "${o:R}.d"
.  elif exists($o)
    .PHONY: $o
.  endif
. endfor
.endif

%RULES
@


1.81
log
@Use a linker script to align .data to a BATC boundary as well, so that no
DBATC may span over parts of .rodata.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.80 2013/11/02 23:06:18 miod Exp $
@


1.80
log
@Link m88k kernels on a BATC boundary.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.79 2013/10/15 19:23:29 guenther Exp $
d41 2
a42 1
LINKFLAGS=	-Ttext 0x80000 -e __start -X -N --warn-common -nopie
@


1.79
log
@Rewrite the awk script that generates the data for option DDB_STRUCT:
 - switch to perl for better data structures and (thus) speed
 - fix a couple glitches in the interpretation of the stabs output
 - compress the strings by putting them in one big array and overlaying
   suffixes
 - all sizes and offsets are <64k, so use u_short for them
This results in ~60% reduction in the resulting text size and it now
takes less than a second to create on fast platforms.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.78 2013/06/23 20:33:51 miod Exp $
d41 1
a41 1
LINKFLAGS=	-Ttext 0x10000 -e __start -X -N --warn-common -nopie
@


1.78
log
@Stop using -traditional-cpp on gcc3/4 platforms.

Add CWARNFLAGS to the command line when using -xassembler-with-cpp. We are
mostly interested in -Werror here.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.77 2013/03/30 07:25:20 tedu Exp $
d135 1
a135 1
db_structinfo.h: $S/ddb/db_structinfo.c $S/ddb/parse_structinfo.awk
d137 1
a137 1
	objdump -g db_structinfo.o | awk -f $S/ddb/parse_structinfo.awk > $@@
@


1.77
log
@reorder include search directories. cuts lookups by quite a bit.
ok deraadt miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.76 2013/01/05 11:20:56 miod Exp $
d40 1
a40 1
AFLAGS=		-D_LOCORE -x assembler-with-cpp -traditional-cpp ${CMACHFLAGS}
@


1.76
log
@Switch m88k ports to ELF.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.75 2012/08/22 16:58:26 pascal Exp $
d24 1
a24 1
INCLUDES=	-nostdinc -I. -I$S -I$S/arch
@


1.75
log
@Build the kernel with -fno-pie.  Just getting Ms out of my tree; this will be
cleaned up later.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.74 2011/11/08 18:41:34 matthieu Exp $
d41 1
a41 1
LINKFLAGS=	-Ttext 0x10000 -e start
a68 1
# Kernel is linked as a ZMAGIC executable, with start at 10020
d80 1
a80 1
STRIPFLAGS=	-g
d86 1
a86 1
LINKFLAGS+=	-x
@


1.74
log
@Garbage collect now unused MKDEP definitions. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.73 2011/07/07 22:28:18 guenther Exp $
d33 1
a33 1
		-fno-builtin-log2 -fno-builtin-malloc 
@


1.73
log
@The drahn memorial bad kernel build fix: prevent blood pressure
spikes in other developers by making it so that removal of a .d
file without removing the corresponding object will result in the
latter being treated as out of date.

ok beck@@ art@@ drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.72 2011/07/06 02:08:05 tedu Exp $
a12 1
MKDEP?=	mkdep
@


1.72
log
@make clean should clean .d files, so as to leave a fresh canvas.
ok beck deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.71 2011/04/15 02:41:28 guenther Exp $
d162 5
a166 3
. for o in ${SYSTEM_OBJ:.o=.d} assym.d ${DB_STRUCTINFO:.h=.d}
.  if exists($o)
.   include "$o"
@


1.71
log
@Convert the kernel Makefiles to autogenerate dependencies during compilation
using the -MD option to cc, with -MP, -MT, and -MF where needed, converting
"make depend" to a no-op.  This increases parallelism for those using "make -j"
and keeps the dependencies up to date with each compilation automatically.

sparc and vax users will need to rebuild gcc with support for the
-M[PTF] options before config'ing with this diff.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.70 2010/12/30 18:49:31 deraadt Exp $
d123 1
a123 1
	rm -f eddep *bsd *bsd.gdb tags *.[io] [a-z]*.s \
@


1.70
log
@If genassym fails, sort on the pipeline will indicate no error resulting
in some grief.  Split this out.
From Vladimir Kirillov
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.69 2010/12/02 20:57:08 deraadt Exp $
d26 1
a26 1
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -D__${_mach}__
d72 2
a73 1
SYSTEM_DEP=	Makefile ${SYSTEM_HEAD} ${OBJS}
d93 5
d101 2
a102 1
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} > assym.h.tmp
d131 3
a136 14
AFILES=	${_machdir}/${_mach}/locore.S
depend:: .depend
.depend: ${AFILES} param.c ioconf.c ${CFILES} ${SFILES} assym.h ${DB_STRUCTINFO}
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${AFILES}
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
.if !empty(SFILES)
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
.endif
	cat ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf | \
	    sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} ${CPPFLAGS}
	@@sed -e 's/.*\.o: /assym.h: /' -e 's/\/tmp\/genassym_c.[^ ]*//' \
	    < assym.dep >> .depend
	@@rm -f assym.dep

d138 1
a138 1
	${CC} ${CFLAGS} ${CPPFLAGS} -gstabs -c $S/ddb/db_structinfo.c
d155 12
@


1.69
log
@After the most recent change, make it possible to make -j again.  The
early MD and late MI files must be split up so that vers.o can sneak
between.  Issue spotted by bluhm, repair discussed with miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.68 2010/12/02 04:35:02 deraadt Exp $
d95 2
a96 3
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} | \
	    sort -u > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h
@


1.68
log
@move vers.o to before the other objects, so that it is not linked last.
having it linked last is bad (on at least i386 and amd64) because the lapic
is mapped over the start of the data segment -- savecore(8) then reads the
version string for a fixed buffer space, and reads into the lapic area
causing unintended side-effects (at least on Intel X5570 and X5680)
found by pedro, discussed with kettenis and mpf and miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.67 2010/06/01 23:49:23 deraadt Exp $
d71 2
a72 2
SYSTEM_OBJ=	locore.o param.o ioconf.o vers.o ${OBJS}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
d74 2
a75 2
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}'; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ}
@


1.67
log
@use --warn-common for linking (some arch's will show new warnings), and
prefer binutils-compatible options in STRIPFLAGS (now that our non-binutils
strip(1) can handle them too)
ok drahn; miod kettenis (for parts)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.66 2010/05/28 14:27:08 guenther Exp $
d71 1
a71 1
SYSTEM_OBJ=	locore.o param.o ioconf.o ${OBJS}
d74 2
a75 2
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
@


1.66
log
@${PARAM} is now included in ${CPPFLAGS}, so stop passing it separately
to genassym.sh

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.65 2010/05/25 21:15:27 deraadt Exp $
a42 1
STRIPFLAGS=	-d
d81 1
@


1.65
log
@eh.S includes eh_common.S to make eh.o; fix this dependency
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.64 2010/05/25 17:27:55 deraadt Exp $
d95 1
a95 1
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} | \
@


1.64
log
@The _arch and _mach variables now come from config(8), decreasing even further
the differences between these files.  You will need a newer config(8) binary
to be able to build kernels.
ok kettenis miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.63 2010/05/25 15:05:01 deraadt Exp $
d148 1
a148 1
eh_common.o m88100_fp.o mutex.o process.o subr.o: assym.h
@


1.63
log
@Hand-list the two-step assym.h -> .[Ss] -> .o dependencies.  The
result: kernels built without 'make depend'-provided information
(ie. the .depend file) are more likely to have their *.[Ss] file
compilations track changes to *.h files.

The "*.o: assym.h" dependencies listed are gotten from reading the
.depend output --- from the biggest kernel possible (ie. GENERIC.MP).
When an architecture changes in a substantial way (new .[sS] files),
the list should be updated in the prettiest way possible.

This is not encouraging people to skip 'make depend'; other issues are
not resolved and may be solved later with a change guenther is working
on.  You can still screwed really easily, so continue running make
depend as config tells you.

Idea from a discussion with drahn
ok drahn, kettenis likes the idea too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.62 2010/05/25 02:35:02 deraadt Exp $
a21 2
_mach?=		mvme88k
_arch?=		m88k
@


1.62
log
@${SRCS} is only used once, and fits onto the line where it is used
idea that came out of discussion with drahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.61 2010/05/24 23:19:22 deraadt Exp $
d150 1
a150 1
	${NORMAL_S}
@


1.61
log
@give up on -Wvariable-decl
delete the archaic links: target which is easily misused
handle special .[sS] files in a portable way
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.60 2010/05/24 19:58:51 deraadt Exp $
a130 1
SRCS=	${AFILES} param.c ioconf.c ${CFILES} ${SFILES}
d132 1
a132 1
.depend: ${SRCS} assym.h param.c ${DB_STRUCTINFO}
@


1.60
log
@use the same idiom for stripping gdb kernels.  This relies on strip -o
support for the non-binutils architectures (and that diff is coming..)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.59 2010/05/24 14:59:16 deraadt Exp $
d31 1
a31 1
		-Wstack-larger-than-2047 -Wvariable-decl
a61 5
PROFILE_C=	${CC} -S -c ${CFLAGS} ${CPPFLAGS} $<; \
		sed -e s/_mcount/mcount/ -e s/subrmcount/subr_mcount/ <$*.s | \
		${AS} -o $@@; \
		rm -f $*.s

d120 1
a120 1
	    [Ee]rrs linterrs makelinks assym.h ${DB_STRUCTINFO}
d130 2
a131 11
links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink makelinks

SRCS=	\
	param.c ioconf.c ${CFILES} ${SFILES}

d134 1
@


1.59
log
@Reduce differences between the Makefile.* files for all architectures.
ok various people, tested by fewer people, tested by me on 15.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.58 2010/04/28 15:31:33 deraadt Exp $
d90 3
a92 2
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
@


1.58
log
@clean up more more subtle and stupid differences between the various
Makefile.* files
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.57 2010/04/27 16:54:54 deraadt Exp $
d15 1
a15 1
STRIP?= strip
d28 3
a30 3
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -D${_mach} -Dm88k
CWARNFLAGS=	-Wall -Werror -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main -Wstrict-prototypes \
d32 5
a36 2
CMACHFLAGS=	-mno-check-zero-division -mmemcpy \
		-fno-builtin-printf -fno-builtin-log
d40 1
d43 1
a43 1
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE ${CMACHFLAGS}
d54 3
a56 9
HOSTED_CPPFLAGS?=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS?=	${CFLAGS}

### CPU configuration

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.
a61 2
HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<

d123 1
a123 1
	rm -f eddep *bsd bsd.gdb tags *.[io] [a-z]*.s \
d127 1
a127 1
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
d129 1
a129 2
	    grep -v 'struct/union .* never defined' | \
	    grep -v 'possible pointer alignment problem'
@


1.57
log
@Unifity CPPFLAGS= (using ${_mach}), SYSTEM_LD_TAIL= (always on one line),
and SRCS= (common files always after the \)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.56 2010/04/27 06:46:26 deraadt Exp $
d56 1
a56 1
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
d144 2
a145 2
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink
@


1.56
log
@shorten preamble
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.55 2010/04/27 05:07:29 deraadt Exp $
d28 1
a28 1
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -Dmvme88k -Dm88k
d88 1
a88 1
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@;
d147 2
a148 1
SRCS=	param.c ioconf.c ${CFILES} ${SFILES}
@


1.55
log
@noone needs comments about QUOTA and TRACE
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.54 2010/04/27 05:05:21 deraadt Exp $
d3 2
a4 9
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/mvme88k/conf/``machineid''
# after which you should do
#	config machineid
# Machine generic makefile changes should be made in
#	/sys/arch/mvme88k/conf/Makefile.mvme88k
# after which config should be rerun for all machines of that type.
@


1.54
log
@over the years we have moved to a machine+architectures scheme that has
two directories.  in reality, because of how we place files, it has four:
.../arch/A, .../arch/A/A, .../arch/M, and .../arch/M/M
formalize this A/A and M/M scheme directly in the Makefiles, which makes
them a lot more similar
drahn likes the idea a lot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.53 2010/04/27 04:31:47 deraadt Exp $
a14 4
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas

@


1.53
log
@use -f assymp.dep again; worked out with miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.52 2010/04/27 03:37:38 deraadt Exp $
d177 1
a177 1
locore.o: ${_machdir}/mvme88k/locore.S assym.h
@


1.52
log
@alpha/conf/Makefile.alpha
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.51 2010/04/26 22:21:15 deraadt Exp $
d167 1
a167 2
	    sh $S/kern/genassym.sh ${MKDEP} ${CFLAGS} ${CPPFLAGS} | \
	    sort -u > assym.dep
@


1.51
log
@even cleaner mach/arch/machdir/archdir
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.50 2010/04/26 22:11:37 deraadt Exp $
a176 14

# depend on root or device configuration
autoconf.o conf.o: Makefile

# depend on network or filesystem configuration
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile
if_tun.o if_loop.o if_ethersubr.o: Makefile
in_proto.o: Makefile

# depend on maxusers
assym.h machdep.o: Makefile

# depend on CPU configuration
locore.o machdep.o: Makefile
@


1.50
log
@next step towards unification:  make all the genassym chunks handle both
arch and machine dependent files (and add the missing files)
ok miod drahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.49 2010/04/26 20:50:17 deraadt Exp $
a33 1
_machdir?=	$S/arch/mvme88k
d35 2
a36 1
_archdir?=	$S/arch/m88k
@


1.49
log
@next unification step: move all MD naming _mach, _machdir, _arch, and _archdir
ok miod drahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.48 2010/04/26 18:58:30 deraadt Exp $
d113 5
a117 3
assym.h: $S/kern/genassym.sh ${_archdir}/m88k/genassym.cf Makefile
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${_archdir}/m88k/genassym.cf > assym.h.tmp && \
d166 3
a168 2
	sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS} < ${_archdir}/m88k/genassym.cf
@


1.48
log
@first step of unification: spaces at end of lines; comments, etc.
ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.47 2009/10/19 19:46:56 guenther Exp $
d32 5
a36 2
MVME88K=	$S/arch/mvme88k
M88K=		$S/arch/m88k
d113 1
a113 1
assym.h: $S/kern/genassym.sh ${M88K}/m88k/genassym.cf Makefile
d115 1
a115 1
	    ${PARAM} < ${M88K}/m88k/genassym.cf > assym.h.tmp && \
d165 1
a165 1
	    ${CPPFLAGS} < ${M88K}/m88k/genassym.cf
d189 1
a189 1
locore.o: ${MVME88K}/mvme88k/locore.S assym.h
@


1.47
log
@Correct a target name so that we don't rebuild vers.o (and then
bsd) unless some other object has changed.  Rebuild and reinstall
in /usr/src/usr.sbin/config/ after updating!

"I like it" deraadt@@
@
text
@d1 2
a2 4
#	$OpenBSD: Makefile.mvme88k,v 1.46 2009/08/09 23:04:49 miod Exp $
#
# Makefile for OpenBSD
#
d8 1
a8 1
#	 config machineid
@


1.46
log
@Introduce option DDB_STRUCT. Kernels compiled with this option (except on
a few arches where toolchain limitations apply) will embed some symbolic
information about the various structs used within the kernel, and have
new ddb commands allowing struct display and some useful information
gathering. Kernel rodata increase varies accross platforms from ~150KB to
~300KB.
This option is not enabled by default.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.45 2009/01/11 21:02:03 pirofti Exp $
d130 1
a130 1
newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
@


1.45
log
@Fix a sed bug in the makefile's depend target.

What happened was that the output of mkdep was fed to a sed expression
that trimmed a bit more than required and also failed to work when
attempting to do make depend with pcc.

Example:

genassym_c.o: /tmp/genassym.whatever ../../../../../sys/param.h \

was changed to:

assym.h: \

but what was intended was:

assym.h: ../../../../../sys/param.h \

For the pcc -M output things were a bit different and after the make
depend the genassym entry would still remain and make would fail. This
affected all platforms except amd64 and sgi.

Okay miod@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.44 2008/04/12 21:04:17 miod Exp $
d53 6
d136 1
a136 1
		[Ee]rrs linterrs makelinks assym.h
d158 1
a158 1
.depend: ${SRCS} assym.h param.c
d168 5
@


1.44
log
@Compile kernels with -Wvariable-decl (except on arches with ipmi, for now).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.43 2007/11/30 07:52:06 miod Exp $
d159 2
a160 1
	@@sed -e 's/.*\.o:.* /assym.h: /' < assym.dep >> .depend
@


1.43
log
@Define NORMAL_C_NOP everywhere.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.42 2007/11/25 18:25:29 deraadt Exp $
d41 1
a41 1
		-Wstack-larger-than-2047
@


1.42
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.41 2007/11/25 11:23:33 deraadt Exp $
d64 1
@


1.41
log
@Get rid of the kernel 'libcompat' framework, and instead use conf/files to
decide which files must be pulled into the kernel.  Also conditionalize
the pulling of those files based on the COMPAT_* options.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.40 2007/07/30 16:23:33 thib Exp $
a58 8
### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
.ifndef PROF
LIBKERN=	${KERNLIB}
.else
LIBKERN=	${KERNLIB_PROF}
.endif

d86 1
a86 1
SYSTEM_OBJ=	locore.o param.o ioconf.o ${OBJS} ${LIBKERN}
d116 3
@


1.40
log
@Shuffle the order in which we look for header files, when doing
kernel builds locally this doesnt change much but over NFS this
cuts about 12% of the build time on my setup (i386).

OK miod@@, deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.39 2006/07/27 05:58:11 miod Exp $
a66 8
### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
.ifndef PROF
LIBCOMPAT=	${COMPATLIB}
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif

d94 1
a94 2
SYSTEM_OBJ=	locore.o \
		param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
@


1.39
log
@Compile all kernels with -Wstack-usage-larger-than-2047, now that all
offending code has been taken out and shot. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.38 2006/05/04 19:24:12 miod Exp $
d37 1
a37 1
INCLUDES=	-nostdinc -I. -I$S/arch -I$S
@


1.38
log
@Now that .S files have proper dependencies, do not hardcode dependencies
on assym.h in Makefile, especially since some files have been renamed...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.37 2005/09/06 19:21:57 miod Exp $
d40 2
a41 1
		-Wno-uninitialized -Wno-format -Wno-main -Wstrict-prototypes
@


1.37
log
@Remove misleading NCPUS (hardcoded) option. From the SMP tree.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.36 2004/07/13 09:47:06 miod Exp $
a186 2
process.o locore_asm_routines.o eh.o: assym.h
m88110_mmu.o m88110_fp.o  m88100_fp.o : assym.h
@


1.36
log
@Remove compiler options workarounds for savectx breakage.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.35 2004/07/02 13:58:17 miod Exp $
a56 5

# syntaxic sugar for 187, which does not exist with multiple processors
.if (${IDENT:M-DMVME187} != "" && ${IDENT:M-DNCPUS} == "")
CPPFLAGS+=	-DNCPUS=1
.endif
@


1.35
log
@Disable a -O2 specific optimization which causes kern_fork (and probably other
files) to be miscompiled, until the problem is fixed in the compiler.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.34 2004/04/29 19:54:36 miod Exp $
d46 1
a46 1
COPTS?=		-O2 -fno-rerun-cse-after-loop
@


1.34
log
@Repair depend phase
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.33 2004/04/29 14:33:27 miod Exp $
d46 1
a46 1
COPTS?=		-O2
@


1.33
log
@Continue factorizing m88k common code, this time files in <arch>/<arch>
which were copied verbatim from mvme88k to luna88k.

This requires backing out syntactic sugar in mvme88k kernel configuration
files which would deduct the required processor types from the board models,
as the common code only depends upon the M88100 and M88110 defines.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.32 2004/04/05 19:17:25 miod Exp $
d175 1
a175 1
	    ${CPPFLAGS} < ${MVME88K}/mvme88k/genassym.cf
@


1.32
log
@Switch mvme88k to -O2 optimization by default.
(the perl chunk discussed with millert@@ and pushed upstream)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.31 2003/12/21 16:03:34 espie Exp $
d35 1
d58 1
a58 8
.if (${IDENT:M-DMVME187} != "" || ${IDENT:M-DMVME188} != "")
CPPFLAGS+=	-DM88100
.endif
.if (${IDENT:M-DMVME197} != "")
CPPFLAGS+=	-DM88110
.endif

# syntaxic sugar for 187, which do not exist with multiple processors
d126 1
a126 1
assym.h: $S/kern/genassym.sh ${MVME88K}/mvme88k/genassym.cf Makefile
d128 1
a128 1
	    ${PARAM} < ${MVME88K}/mvme88k/genassym.cf > assym.h.tmp && \
@


1.31
log
@-fno-builtin-* finally tested
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.30 2003/10/11 22:08:55 miod Exp $
d45 1
a45 1
COPTS?=		-O1
@


1.30
log
@Nuke trailing whitespace.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.29 2003/10/01 20:39:38 miod Exp $
d40 2
a41 1
CMACHFLAGS=	-mno-check-zero-division -mmemcpy
@


1.29
log
@Compile kernel and bootblocks with -mmemcpy, to get rid of libgcc dependancy.
Also, honor default compilation options in stand/ whenever possible.

This requires an up-to-date compiler, but it's not exactly like many people
are going to be affected by this change...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.28 2003/08/30 21:15:59 miod Exp $
d174 1
a174 1
.depend: ${SRCS} assym.h param.c 
d186 3
a188 3
 
# depend on network or filesystem configuration 
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile 
d195 1
a195 1
# depend on CPU configuration 
@


1.28
log
@Compile kernels with -mno-check-zero-division. Saves two pages, and things
will go wrong anyway, should the kernel divide by zero...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.27 2003/07/22 19:39:50 otto Exp $
d40 1
a40 1
CMACHFLAGS=	-mno-check-zero-division
d44 1
a44 1
COPTS?=		-O
d116 1
a116 2
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o \
		`${CC} -print-libgcc-file-name`
@


1.27
log
@Fix .depend generation for assym.h. Resolves PR 1154.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.26 2003/05/23 22:16:16 tedu Exp $
d40 1
@


1.26
log
@move swapgeneric to truly generic code.  tested on many archs by miod and mickey.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.25 2003/05/13 22:45:10 miod Exp $
d179 4
@


1.25
log
@Add option NO_PROPOLICE, which explicitely disables the use of the propolice
stack protection when building kernels. Intended to be used on installation
media, with tight space constraints - currently, only added where
SMALL_KERNEL was already defined.

Not thoroughly tested, but requested by deraadt.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.24 2003/05/13 06:12:43 tedu Exp $
d156 1
a156 1
	    ${CFILES} ${MVME88K}/mvme88k/swapgeneric.c ioconf.c param.c | \
@


1.24
log
@remove -fno-stack-protector (enable propolice)
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.23 2002/12/25 21:10:26 miod Exp $
d40 3
@


1.23
log
@No need to define FOO?=foo for AS, CC, CPP and LD, as they are always already
set from <sys.mk>
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.22 2002/12/02 09:00:24 miod Exp $
a39 1
CMACHFLAGS=	-fno-stack-protector
@


1.22
log
@Import propolice (http://www.trl.ibm.com/projects/security/ssp), a stack
attack protection scheme, into gcc.

This protection is enabled by default. It can be turned off by using the
-fno-stack-protector flag.

Code by Hiroaki Etoh (etoh at jp dot ibm dot com); work on openbsd-specific
integration by fgsch@@, deraadt@@ and myself; tests by fgsch@@, naddy@@ and
myself; beer drinking by myself.

Please note that system upgrades with this new code will require a new
libc and ld.so to be build and installed before the propolice-enabled
compiler can be installed.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.21 2002/08/09 20:24:43 miod Exp $
a25 4
AS?= 	as
CC?=    cc
CPP?=   cpp
LD?=    ld
@


1.21
log
@Add an explicit dependancy of assym.h to Makefile.
This makes sure it will be regenerated if you run config(8) again.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.20 2002/06/22 14:05:51 millert Exp $
d44 1
a44 1
CMACHFLAGS=
@


1.20
log
@Add ${PIPE} to CFLAGS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.19 2002/02/19 01:53:30 deraadt Exp $
d133 1
a133 1
assym.h: $S/kern/genassym.sh ${MVME88K}/mvme88k/genassym.cf
@


1.19
log
@proper dependencies on assym.h
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.18 2001/12/24 23:12:14 miod Exp $
d46 1
a46 1
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS}
@


1.18
log
@Harmonize and complete wrt cross-compilation.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.17 2001/12/22 18:22:38 smurph Exp $
d195 2
@


1.17
log
@Put miod's Makefile hack to define M88100 and M88110 back in.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.16 2001/12/16 23:49:43 miod Exp $
a32 1
TOUCH?=	touch
a49 1
TOUCHFLAGS=	-f -c
@


1.16
log
@Revert the mvme88k to 20011212. Recent changes had not been merged correctly,
and I am fed up with dissecting diffs to put back code that disappeared.
This will likely be fixed shortly.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.14 2001/08/26 14:31:36 miod Exp $
d56 14
@


1.16.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.18 2001/12/24 23:12:14 miod Exp $
d33 1
d51 1
a55 14

### CPU configuration

.if (${IDENT:M-DMVME187} != "" || ${IDENT:M-DMVME188} != "")
CPPFLAGS+=	-DM88100
.endif
.if (${IDENT:M-DMVME197} != "")
CPPFLAGS+=	-DM88110
.endif

# syntaxic sugar for 187, which do not exist with multiple processors
.if (${IDENT:M-DMVME187} != "" && ${IDENT:M-DNCPUS} == "")
CPPFLAGS+=	-DNCPUS=1
.endif
@


1.16.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.16.2.1 2002/01/31 22:55:17 niklas Exp $
a194 2
process.o locore_asm_routines.o eh.o: assym.h
m88110_mmu.o m88110_fp.o  m88100_fp.o : assym.h
@


1.16.2.3
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.16.2.2 2002/06/11 03:37:09 art Exp $
d46 1
a46 1
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS} ${PIPE}
d133 1
a133 1
assym.h: $S/kern/genassym.sh ${MVME88K}/mvme88k/genassym.cf Makefile
@


1.16.2.4
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD$
d26 4
d44 1
a44 3
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif
@


1.15
log
@Add magic to the kernel Makefile to remove the need to explicitely put
the processor type in the configuration files, if you specify a board type.
Also, some syntaxic sugar for the MVME187 case as well.
@
text
@a56 14
### CPU configuration

.if (${IDENT:M-DMVME187} != "" || ${IDENT:M-DMVME188} != "")
CPPFLAGS+=	-DM88100
.endif
.if (${IDENT:M-DMVME197} != "")
CPPFLAGS+=	-DM88110
.endif

# syntaxic sugar for 187, which do not exist with multiple processors
.if (${IDENT:M-DMVME187} != "" && ${IDENT:M-DNCPUS} == "")
CPPFLAGS+=	-DNCPUS=1
.endif

@


1.14
log
@We can now compile kernels with -Werror.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.13 2001/07/15 13:10:49 assar Exp $
d56 14
@


1.13
log
@add install target
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.12 2001/05/20 05:50:43 miod Exp $
d43 2
a44 2
CWARNFLAGS=	-Wall -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main # -Wstrict-prototypes
@


1.12
log
@Generate assym from a genassym.cf file instead of a C program.
Rename the generated file to assym.h.
Minor cleanup.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.11 2001/03/15 23:59:14 miod Exp $
d24 2
d186 12
@


1.11
log
@Be more cross-compiler friendly.
Run mkdep on genassym.c.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.10 2001/03/07 23:34:39 miod Exp $
d40 2
a41 2
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmvme88k -Dm88k
CDIAGFLAGS=	-Wall -Wmissing-prototypes \
d44 3
a46 2
CFLAGS=		${DEBUG} -O ${CDIAGFLAGS} ${CMACHFLAGS} ${COPTS}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE
a76 5
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

a77 1
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<
d103 2
a104 1
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o -L. -lgcc -lgcc
d119 4
a122 10
assym.s: genassym
	./genassym >assym.s

genassym: genassym.o
	${HOSTCC} -o $@@ genassym.o

genassym.o: ${MVME88K}/mvme88k/genassym.c
	${HOSTED_C}
#	${HOSTCC} -static ${INCLUDES} -I$S/sys ${IDENT} ${PARAM} \
#	  -Dmvme88k -Dm88k -o genassym ${MVME88K}/mvme88k/genassym.c
d129 1
a129 1
	${NORMAL_C_C}
d140 1
a140 1
		[Ee]rrs linterrs makelinks assym.s genassym genassym.o
d160 1
d162 1
a162 1
.depend: ${SRCS} assym.s param.c 
a166 3
	${MKDEP} -a ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} \
	    ${MVME88K}/mvme88k/genassym.c

d177 1
a177 1
genassym.o machdep.o: Makefile
d182 1
a182 1
locore.o: ${MVME88K}/mvme88k/locore.S assym.s
@


1.10
log
@General cleanup in the kernel compilation process, sync style with
other ports, add warning flags.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.9 2001/01/13 05:18:58 smurph Exp $
d50 3
a52 3
HOSTCC=	${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}
d126 7
a132 3
genassym:
	${HOSTCC} -static ${INCLUDES} -I$S/sys ${IDENT} ${PARAM} \
	  -Dmvme88k -Dm88k -o genassym ${MVME88K}/mvme88k/genassym.c
d150 1
a150 1
		[Ee]rrs linterrs makelinks assym.s genassym
d176 2
@


1.9
log
@Booting kernel with MACHINE_NEW_NONCONTIG.  UVM code added but not working.
New stand config.  Lots of header fixes.  Can now cross-compile i386->m88k.
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile.mvme88k,v 1.8 2000/03/03 00:54:52 todd Exp $
#	@@(#)Makefile.hp300	7.10 (Berkeley) 6/27/91
a20 1

d24 2
a25 3
AS?= 	as ${DEBUG}
AWK?=	awk
CC?=    cc ${DEBUG}
d28 1
a28 1
TOUCH?=	touch -f -c
d31 1
d33 3
a35 2
.ifndef HOSTCC
HOSTCC=cc
d37 1
d39 14
a52 10
# source tree is located via $S relative to the compilation directory
S=	../../../..
MVME88K=	../..

INCLUDES= -I. -I$S/arch -I$S -I$S/sys 
.if defined(DESTDIR)
INCLUDES+= -nostdinc -idirafter ${DESTDIR}/usr/include
.endif
CPPFLAGS=	${INCLUDES} ${IDENT} -DKERNEL -D_KERNEL -Dmvme88k -Dm88k
CFLAGS=	-O ${DEBUG} #-Werror
d75 8
a82 2
NORMAL_C=	${CC} -c ${CFLAGS} ${CPPFLAGS} ${PROF} $<
NORMAL_C_C=	${CC} -c ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} $<
d84 1
a84 2
DRIVER_C=	${CC} -c ${CFLAGS} ${CPPFLAGS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} $<
a90 3
NORMAL_S=	${CC} -E ${CFLAGS} ${CPPFLAGS} $< | ${AS} -o $@@
NORMAL_S_C=	${CC} -E ${CFLAGS} ${CPPFLAGS} ${PARAM} $< | ${AS} -o $@@

d95 2
d103 2
a104 2
SYSTEM_OBJ=	locore.o ${OBJS} param.o ioconf.o \
		${LIBKERN} ${LIBCOMPAT}
d106 9
a114 11
SYSTEM_LD_HEAD=	@@echo loading $@@; rm -f $@@
SYSTEM_LD=	-@@if [ X${DEBUG} = X-g ]; \
		then strip=-X; \
		else strip=-x; \
		fi; \
		echo ${LD} $$strip -Ttext 0x10000 -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} $$strip -Ttext 0x10000 -e start ${LINKFLAGS} -o $@@ \
			${SYSTEM_OBJ} vers.o -L. -lgcc -lgcc

SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@; \
		[ X${DEBUG} = X-g ] && { \
d116 4
a119 1
		echo ${STRIP} -d $@@; ${STRIP} -d $@@; } || true
d127 6
a132 2
	${HOSTCC} -static ${INCLUDES} ${IDENT} ${PARAM} -Dmvme88k -Dm88k \
	    -o genassym ${MVME88K}/mvme88k/genassym.c
d134 2
a135 4
assym.h: $S/kern/genassym.sh ${MVME68K}/mvme68k/genassym.cf
	sh $S/kern/genassym.sh ${HOSTCC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${MVME88K}/mvme88k/genassym.cf > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h
d137 2
a138 1
vers.o:	newvers
d145 2
a146 2
	rm -f eddep *bsd bsd.gdb tags *.o locore.i \
		[a-z]*.s [Ee]rrs errs linterrs makelinks
d148 3
a150 7
realclean::
	rm -f eddep *bsd bsd.gdb tags *.o locore.i .depend \
		[a-z]*.s [Ee]rrs errs linterrs makelinks

lint: /tmp param.c
	@@lint -hbxn -DGENERIC -Dvolatile= ${CFLAGS} ${CPPFLAGS} ${PARAM} -UKGDB \
	    ${CFILES} ${MVME88K}/mvme88k/swapgeneric.c ioconf.c param.c| \
d154 19
a172 3
locore.o: assym.s ${MVME88K}/mvme88k/eh.S ${MVME88K}/mvme88k/locore.S 
locore.o: machine/trap.h machine/psl.h machine/cpu.h
	${CPP} -DLOCORE ${CPPFLAGS} ${MVME88K}/mvme88k/locore.S | ${AS} -o locore.o
d188 2
a189 25
depend:: .depend
.depend: assym.s param.c 
	mkdep ${CFLAGS} ${CPPFLAGS} ${CFILES} ioconf.c param.c
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} ${MVME88K}/mvme88k/genassym.c

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink

tags:
	@@echo "see $S/kern/Makefile for tags"

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C_C}

ioconf.o: ioconf.c
	${NORMAL_C}
@


1.8
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.7 1999/09/27 21:30:11 smurph Exp $
d105 1
a105 1
			${SYSTEM_OBJ} vers.o -lgcc -lgcc
d133 4
@


1.7
log
@oops!
@
text
@d1 1
a2 1
#	$Id: Makefile.mvme88k,v 1.6 1999/09/27 21:21:15 smurph Exp $
@


1.7.4.1
log
@Sync with -current
@
text
@a0 1
#	$OpenBSD$
d2 1
@


1.7.4.2
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 2
a2 1
#	$OpenBSD: Makefile.mvme88k,v 1.11 2001/03/15 23:59:14 miod Exp $
d22 1
d26 3
a28 2
AS?= 	as
CC?=    cc
d31 1
a31 1
MKDEP?=	mkdep
d34 4
a37 1
TOUCH?=	touch
d40 6
a45 2
.ifndef S
S!=	cd ../../../..; pwd
d47 2
a48 16
MVME88K=	$S/arch/mvme88k

INCLUDES=	-nostdinc -I. -I$S/arch -I$S
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmvme88k -Dm88k
CDIAGFLAGS=	-Wall -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main # -Wstrict-prototypes
CMACHFLAGS=
CFLAGS=		${DEBUG} -O ${CDIAGFLAGS} ${CMACHFLAGS} ${COPTS}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE
LINKFLAGS=	-Ttext 0x10000 -e start
STRIPFLAGS=	-d
TOUCHFLAGS=	-f -c

HOSTCC?=	${CC}
HOSTED_CPPFLAGS?=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS?=	${CFLAGS}
d71 2
a72 5
NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
d74 2
a75 4
NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<

HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<
d82 3
a88 2
%SFILES

d95 2
a96 2
SYSTEM_OBJ=	locore.o \
		param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
d98 11
a108 9
SYSTEM_LD_HEAD=	@@rm -f $@@
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o -L. -lgcc -lgcc
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@;

DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
SYSTEM_LD_TAIL+=; \
d110 1
a110 4
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
.else
LINKFLAGS+=	-x
.endif
d117 8
a124 2
genassym: genassym.o
	${HOSTCC} -o $@@ genassym.o
d126 1
a126 14
genassym.o: ${MVME88K}/mvme88k/genassym.c
	${HOSTED_C}
#	${HOSTCC} -static ${INCLUDES} -I$S/sys ${IDENT} ${PARAM} \
#	  -Dmvme88k -Dm88k -o genassym ${MVME88K}/mvme88k/genassym.c

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C_C}

ioconf.o: ioconf.c
	${NORMAL_C}
d133 2
a134 2
	rm -f eddep *bsd bsd.gdb tags *.[io] [a-z]*.s \
		[Ee]rrs linterrs makelinks assym.s genassym genassym.o
d136 3
a138 3
lint:
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
	    ${CFILES} ${MVME88K}/mvme88k/swapgeneric.c ioconf.c param.c | \
d142 3
a144 21
tags:
	@@echo "see $S/kern/Makefile for tags"

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink

SRCS=	param.c ioconf.c ${CFILES} ${SFILES}
depend:: .depend
.depend: ${SRCS} assym.s param.c 
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
.if !empty(SFILES)
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
.endif
	${MKDEP} -a ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} \
	    ${MVME88K}/mvme88k/genassym.c

d160 25
a184 2
locore.o: ${MVME88K}/mvme88k/locore.S assym.s
	${NORMAL_S}
@


1.7.4.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.7.4.2 2001/04/18 16:10:49 niklas Exp $
d40 2
a41 2
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -Dmvme88k -Dm88k
CWARNFLAGS=	-Wall -Wmissing-prototypes \
d44 2
a45 3
COPTS?=		-O
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE ${CMACHFLAGS}
d76 5
d82 1
d108 1
a108 2
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o \
		`${CC} -print-libgcc-file-name`
d123 10
a132 4
assym.h: $S/kern/genassym.sh ${MVME88K}/mvme88k/genassym.cf
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${MVME88K}/mvme88k/genassym.cf > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h
d139 1
a139 1
	${NORMAL_C}
d150 1
a150 1
		[Ee]rrs linterrs makelinks assym.h
a169 1

d171 1
a171 1
.depend: ${SRCS} assym.h param.c 
d176 3
d189 1
a189 1
assym.h machdep.o: Makefile
d194 1
a194 1
locore.o: ${MVME88K}/mvme88k/locore.S assym.h
@


1.7.4.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.7.4.3 2001/07/04 10:19:50 niklas Exp $
a23 2
.include <bsd.own.mk>

d41 2
a42 2
CWARNFLAGS=	-Wall -Werror -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main -Wstrict-prototypes
a183 12

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif
@


1.7.4.5
log
@Merge in trunk
@
text
@d1 1
a1 1
#	$OpenBSD$
d33 1
d51 1
a56 14
### CPU configuration

.if (${IDENT:M-DMVME187} != "" || ${IDENT:M-DMVME188} != "")
CPPFLAGS+=	-DM88100
.endif
.if (${IDENT:M-DMVME197} != "")
CPPFLAGS+=	-DM88110
.endif

# syntaxic sugar for 187, which do not exist with multiple processors
.if (${IDENT:M-DMVME187} != "" && ${IDENT:M-DNCPUS} == "")
CPPFLAGS+=	-DNCPUS=1
.endif

a182 2
process.o locore_asm_routines.o eh.o: assym.h
m88110_mmu.o m88110_fp.o  m88100_fp.o : assym.h
@


1.7.4.6
log
@Sync the SMP branch with 3.3
@
text
@d26 4
d44 1
a44 1
CMACHFLAGS=	-fno-stack-protector
d46 1
a46 1
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS} ${PIPE}
d133 1
a133 1
assym.h: $S/kern/genassym.sh ${MVME88K}/mvme88k/genassym.cf Makefile
@


1.7.4.7
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d40 1
a40 3
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif
@


1.7.4.8
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.mvme88k,v 1.7.4.7 2003/05/16 00:29:39 niklas Exp $
d156 1
a156 1
	    ${CFILES} ioconf.c param.c | \
@


1.7.4.9
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
#	$OpenBSD$
a39 2
CMACHFLAGS=	-mno-check-zero-division -mmemcpy \
		-fno-builtin-printf -fno-builtin-log
d43 1
a43 1
COPTS?=		-O1
d115 2
a116 1
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
d174 1
a174 1
.depend: ${SRCS} assym.h param.c
a178 4
	sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS} < ${MVME88K}/mvme88k/genassym.cf
	@@sed -e 's/.*\.o:.* /assym.h: /' < assym.dep >> .depend
	@@rm -f assym.dep
d182 3
a184 3

# depend on network or filesystem configuration
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile
d191 1
a191 1
# depend on CPU configuration
@


1.7.4.10
log
@Merge with the trunk
@
text
@a34 1
M88K=		$S/arch/m88k
d45 1
a45 1
COPTS?=		-O2
d57 8
a64 1
# syntaxic sugar for 187, which does not exist with multiple processors
d132 1
a132 1
assym.h: $S/kern/genassym.sh ${M88K}/m88k/genassym.cf Makefile
d134 1
a134 1
	    ${PARAM} < ${M88K}/m88k/genassym.cf > assym.h.tmp && \
d181 1
a181 1
	    ${CPPFLAGS} < ${M88K}/m88k/genassym.cf
@


1.6
log
@Some cleaning...
@
text
@d2 1
a2 1
#	$Id: Makefile.mvme88k,v 1.5 1998/12/15 06:02:55 smurph Exp $
a102 1
		
@


1.5
log
@Commint for the first real mvme88k OpendBSD
@
text
@d2 1
a2 1
#	$Id: Makefile.mvme88k,v 1.4 1998/09/15 04:01:22 smurph Exp $
d103 2
a104 1
		echo ${LD} $$strip -Ttext 0x10000 -o $@@ ${SYSTEM_OBJ} vers.o; \
d134 1
a134 1
	rm -f eddep *bsd bsd.gdb tags *.o locore.i \
@


1.4
log
@Stuff
@
text
@d2 1
a2 1
#	$Id: Makefile.mvme88k,v 1.3 1997/09/15 02:40:32 deraadt Exp $
d4 1
a4 1
# Makefile for NetBSD
d25 9
a33 8
DESTDIR=/usr/cross/mvme88k
DESTBIN=${DESTDIR}/usr/m88k-unknown-openbsd2.2/bin
AS=     ${DESTBIN}/as ${DEBUG}
AWK=	awk
CC=     ${DESTBIN}/gcc ${DEBUG}
CPP=    cpp
LD=     ${DESTBIN}/ld
TOUCH=	touch -f -c
d103 3
a105 3
		echo ${LD} $$strip -Ttext 0x10000 -o $@@ ${SYSTEM_OBJ} libgcc.a vers.o; \
		${LD} $$strip -Ttext 0x10000 -e start -o $@@ ${SYSTEM_OBJ} \
			libgcc.a vers.o
d107 1
a107 1
SYSTEM_LD_TAIL=	@@size $@@; chmod 755 $@@; \
d110 1
a110 1
		echo strip -d $@@; strip -d $@@; } || true
d121 5
d161 1
a161 1
.depend: assym.s param.c vnode_if.h
@


1.3
log
@kill Locore.c
@
text
@d2 1
a2 1
#	$Id: Makefile.mvme88k,v 1.2 1997/05/24 03:02:28 rahnds Exp $
d25 3
a27 1
AS=     as ${DEBUG}
d29 1
a29 1
CC=     cc ${DEBUG}
d31 1
a31 1
LD=     ld
@


1.2
log
@mvme88k will not make release, but just as well make the source as close as
possible.
@
text
@d2 1
a2 1
#	$Id: Makefile.mvme88k,v 1.1.1.1 1997/03/03 19:31:53 rahnds Exp $
d130 1
a130 2
	    ${MVME88K}/mvme88k/Locore.c ${CFILES} ${MVME88K}/mvme88k/swapgeneric.c \
	    ioconf.c param.c| \
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
#	$Id: Makefile.mvme88k,v 1.3 1995/09/21 03:58:10 build Exp build $
a112 1
	cp assym.s ${.CURDIR}/../../include
@


1.1.1.1
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@@
