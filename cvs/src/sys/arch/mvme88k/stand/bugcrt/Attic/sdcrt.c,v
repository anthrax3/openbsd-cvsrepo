head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_4:1.2.0.14
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.12
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.10
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.6
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.0.10
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.8
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.6
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2003.10.01.22.50.56;	author miod;	state dead;
branches;
next	1.2;

1.2
date	2001.01.13.05.19.01;	author smurph;	state Exp;
branches;
next	1.1;

1.1
date	98.12.15.06.12.50;	author smurph;	state Exp;
branches
	1.1.6.1;
next	;

1.1.6.1
date	2001.04.18.16.11.48;	author niklas;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2004.02.19.10.49.09;	author niklas;	state dead;
branches;
next	;


desc
@@


1.3
log
@Unused bits.
@
text
@/*	$OpenBSD: sdcrt.c,v 1.2 2001/01/13 05:19:01 smurph Exp $ */

/* 
 * This is the startup file for the second stage bootstrap. (bootsd) 
 * It does *not* includes code to enable the SFU1.
 */

#include <sys/types.h>
#include <machine/prom.h>

struct mvmeprom_args bugargs = { 1 };		/* not BSS */

	asm (".text");
	/* pseudo reset vector */
	asm (STACK_ASM_OP);	/* initial sp value */
	asm (".long _start");	/* initial ip value */
start()
{
	register int dev_lun asm (MVMEPROM_REG_DEVLUN);
	register int ctrl_lun asm (MVMEPROM_REG_CTRLLUN);
	register int flags asm (MVMEPROM_REG_FLAGS);
	register int ctrl_addr asm (MVMEPROM_REG_CTRLADDR);
	register int entry asm (MVMEPROM_REG_ENTRY);
	register int conf_blk asm (MVMEPROM_REG_CONFBLK);
	register char *arg_start asm (MVMEPROM_REG_ARGSTART);
	register char *arg_end asm (MVMEPROM_REG_ARGEND);
	register char *nbarg_start asm (MVMEPROM_REG_NBARGSTART);
	register char *nbarg_end asm (MVMEPROM_REG_NBARGEND);
	extern int edata, end;
	struct mvmeprom_brdid *id, *mvmeprom_brdid();

	bugargs.dev_lun = dev_lun;
	bugargs.ctrl_lun = ctrl_lun;
	bugargs.flags = flags;
	bugargs.ctrl_addr = ctrl_addr;
	bugargs.entry = entry;
	bugargs.conf_blk = conf_blk;
	bugargs.arg_start = arg_start;
	bugargs.arg_end = arg_end;
	bugargs.nbarg_start = nbarg_start;
	bugargs.nbarg_end = nbarg_end;
	*bugargs.arg_end = 0;

	memset(&edata, 0, ((int)&end - (int)&edata));

	id = mvmeprom_brdid();
	bugargs.cputyp = id->model;

	main();
	mvmeprom_return();
	/* NOTREACHED */
}

__main()
{
}

void
bugexec(addr)

void (*addr)();

{
	register int dev_lun asm (MVMEPROM_REG_DEVLUN);
	register int ctrl_lun asm (MVMEPROM_REG_CTRLLUN);
	register int flags asm (MVMEPROM_REG_FLAGS);
	register int ctrl_addr asm (MVMEPROM_REG_CTRLADDR);
	register int entry asm (MVMEPROM_REG_ENTRY);
	register int conf_blk asm (MVMEPROM_REG_CONFBLK);
	register char *arg_start asm (MVMEPROM_REG_ARGSTART);
	register char *arg_end asm (MVMEPROM_REG_ARGEND);

	dev_lun = bugargs.dev_lun;
	ctrl_lun = bugargs.ctrl_lun;
	flags = bugargs.flags;
	ctrl_addr = bugargs.ctrl_addr;
	entry = bugargs.entry;
	conf_blk = bugargs.conf_blk;
	arg_start = bugargs.arg_start;
	arg_end = bugargs.arg_end;

	(*addr)();
	printf("bugexec: 0x%x returned!\n", addr);

	_rtt();
}

@


1.2
log
@Booting kernel with MACHINE_NEW_NONCONTIG.  UVM code added but not working.
New stand config.  Lots of header fixes.  Can now cross-compile i386->m88k.
@
text
@d1 1
a1 1
/*	$OpenBSD: sdcrt.c,v 1.1 1998/12/15 06:12:50 smurph Exp $ */
@


1.1
log
@Added sdcrt.c to make bootxx and bootsd work.
@
text
@d1 7
a7 1
/*	$OpenBSD: bugcrt.c,v 1.3 1998/08/22 09:16:47 smurph Exp $ */
d15 2
a16 2
	asm (".long 0x003f0000"); /* initial sp value */
	asm (".long _start");     /* initial ip value */
@


1.1.6.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 7
/*	$OpenBSD: sdcrt.c,v 1.2 2001/01/13 05:19:01 smurph Exp $ */

/* 
 * This is the startup file for the second stage bootstrap. (bootsd) 
 * It does *not* includes code to enable the SFU1.
 */

d9 2
a10 2
	asm (STACK_ASM_OP);	/* initial sp value */
	asm (".long _start");	/* initial ip value */
@


1.1.6.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD: sdcrt.c,v 1.1.6.1 2001/04/18 16:11:48 niklas Exp $ */
@


