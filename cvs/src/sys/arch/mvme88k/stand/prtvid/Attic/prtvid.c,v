head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.34
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.30
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.28
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.26
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.24
	OPENBSD_5_0:1.5.0.22
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.20
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.18
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.14
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.16
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.12
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.30
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.28
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.26
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.24
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.22
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.20
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.18
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.16
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.14
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.12
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.10
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.8
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.1.1.0.6
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	mvme88kport:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.03.18.22.36.37;	author miod;	state dead;
branches;
next	1.5;

1.5
date	2006.05.18.06.11.15;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.16.22.52.26;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.27.15.23.46;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	98.08.22.08.49.17;	author smurph;	state Exp;
branches;
next	1.1;

1.1
date	97.03.03.19.30.39;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.03.19.30.39;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: prtvid.c,v 1.5 2006/05/18 06:11:15 miod Exp $ */

/*
 * Copyright (c) 1995 Dale Rahn <drahn@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <stdio.h>
#include <stdlib.h>

#include "vid.h"

void	swabcfg(struct cfg *);
void	swabvid(struct vid *);

int
main(argc, argv)
	int argc;
	char *argv[];
{
	struct vid *pvid;
	struct cfg *pcfg;

	pvid = (struct vid *) malloc(sizeof (struct vid));

	fread(pvid, sizeof(struct vid), 1, stdin);

	if (BYTE_ORDER != BIG_ENDIAN)
		swabvid(pvid);

	printf("vid_id		%s	%lx\n", pvid->vid_id,
	    (char *)&(pvid->vid_id[4]) - (char *)pvid);
	printf("vid_oss		%x	%lx\n", pvid->vid_oss,
	    (char *)&(pvid->vid_oss) - (char *)pvid);
	printf("vid_osl		%x	%lx\n", pvid->vid_osl,
	    (char *)&(pvid->vid_osl) - (char *)pvid);
	printf("vid_osa_u	%x	%lx\n", pvid->vid_osa_u,
	    (char *)&(pvid->vid_osa_u) - (char *)pvid);
	printf("vid_osa_l	%x	%lx\n", pvid->vid_osa_l,
	    (char *)&(pvid->vid_osa_l) - (char *)pvid);
	printf("vid_vd 		%s	%lx\n", pvid->vid_vd,
	    (char *)&(pvid->vid_vd) - (char *)pvid);
	printf("vid_cas		%x	%lx\n", pvid->vid_cas,
	    (char *)&(pvid->vid_cas) - (char *)pvid);
	printf("vid_cal		%x	%lx\n", pvid->vid_cal,
	    (char *)&(pvid->vid_cal) - (char *)pvid);
	printf("vid_moto	%s	%lx\n", pvid->vid_mot,
	    (char *)&(pvid->vid_mot[0]) - (char *)pvid);

	free(pvid);

	pcfg = (struct cfg *) malloc(sizeof(struct cfg));

	fread(pcfg, sizeof(struct cfg), 1, stdin);

	if (BYTE_ORDER != BIG_ENDIAN)
		swabcfg(pcfg);

	printf("cfg_atm		%x	%lx\n", pcfg->cfg_atm,
	    (char *)&(pcfg->cfg_atm) - (char *)(pcfg));
	printf("cfg_prm		%x	%lx\n", pcfg->cfg_prm,
	    (char *)&(pcfg->cfg_prm) - (char *)(pcfg));
	printf("cfg_atw		%x	%lx\n", pcfg->cfg_atw,
	    (char *)&(pcfg->cfg_atw) - (char *)(pcfg));
	printf("cfg_rec		%x	%lx\n",(int)pcfg->cfg_rec,
	    (char *)&(pcfg->cfg_rec) - (char *)(pcfg));
	printf("cfg_spt		%x	%lx\n", pcfg->cfg_spt,
	    (char *)&(pcfg->cfg_spt) - (char *)(pcfg));
	printf("cfg_hds		%x	%lx\n", pcfg->cfg_hds,
	    (char *)&(pcfg->cfg_hds) - (char *)(pcfg));
	printf("cfg_trk		%x	%lx\n", pcfg->cfg_trk,
	    (char *)&(pcfg->cfg_trk) - (char *)(pcfg));
	printf("cfg_ilv		%x	%lx\n", pcfg->cfg_ilv,
	    (char *)&(pcfg->cfg_ilv) - (char *)(pcfg));
	printf("cfg_sof		%x	%lx\n", pcfg->cfg_sof,
	    (char *)&(pcfg->cfg_sof) - (char *)(pcfg));
	printf("cfg_psm		%x	%lx\n", pcfg->cfg_psm,
	    (char *)&(pcfg->cfg_psm) - (char *)(pcfg));
	printf("cfg_shd		%x	%lx\n", pcfg->cfg_shd,
	    (char *)&(pcfg->cfg_shd) - (char *)(pcfg));
	printf("cfg_pcom	%x	%lx\n", pcfg->cfg_pcom,
	    (char *)&(pcfg->cfg_pcom) - (char *)(pcfg));
	printf("cfg_ssr 	%x	%lx\n", pcfg->cfg_ssr,
	    (char *)&(pcfg->cfg_ssr) - (char *)(pcfg));
	printf("cfg_rwcc	%x	%lx\n", pcfg->cfg_rwcc,
	    (char *)&(pcfg->cfg_rwcc) - (char *)(pcfg));
	printf("cfg_ecc 	%x	%lx\n", pcfg->cfg_ecc,
	    (char *)&(pcfg->cfg_ecc) - (char *)(pcfg));
	printf("cfg_eatm	%x	%lx\n", pcfg->cfg_eatm,
	    (char *)&(pcfg->cfg_eatm) - (char *)(pcfg));
	printf("cfg_eprm	%x	%lx\n", pcfg->cfg_eprm,
	    (char *)&(pcfg->cfg_eprm) - (char *)(pcfg));
	printf("cfg_eatw	%x	%lx\n", pcfg->cfg_eatw,
	    (char *)&(pcfg->cfg_eatw) - (char *)(pcfg));
	printf("cfg_gpb1	%x	%lx\n", pcfg->cfg_gpb1,
	    (char *)&(pcfg->cfg_gpb1) - (char *)(pcfg));
	printf("cfg_gpb2	%x	%lx\n", pcfg->cfg_gpb2,
	    (char *)&(pcfg->cfg_gpb2) - (char *)(pcfg));
	printf("cfg_gpb3	%x	%lx\n", pcfg->cfg_gpb3,
	    (char *)&(pcfg->cfg_gpb3) - (char *)(pcfg));
	printf("cfg_gpb4	%x	%lx\n", pcfg->cfg_gpb4,
	    (char *)&(pcfg->cfg_gpb4) - (char *)(pcfg));
	printf("cfg_ssc		%x	%lx\n", pcfg->cfg_ssc,
	    (char *)&(pcfg->cfg_ssc) - (char *)(pcfg));
	printf("cfg_runit	%x	%lx\n", pcfg->cfg_runit,
	    (char *)&(pcfg->cfg_runit) - (char *)(pcfg));
	printf("cfg_rsvc1	%x	%lx\n", pcfg->cfg_rsvc1,
	    (char *)&(pcfg->cfg_rsvc1) - (char *)(pcfg));
	printf("cfg_rsvc2	%x	%lx\n", pcfg->cfg_rsvc2,
	    (char *)&(pcfg->cfg_rsvc2) - (char *)(pcfg));

	return (0);
}

void
swabvid(pvid)
	struct vid *pvid;
{
	swap32(pvid->vid_oss);
	swap16(pvid->vid_osl);
	swap16(pvid->vid_osa_u);
	swap16(pvid->vid_osa_l);
	swap32(pvid->vid_cas);
}

void
swabcfg(pcfg)
	struct cfg *pcfg;
{
	printf("swapping cfg\n");

	swap16(pcfg->cfg_atm);
	swap16(pcfg->cfg_prm);
	swap16(pcfg->cfg_atm);
	swap16(pcfg->cfg_rec);
	swap16(pcfg->cfg_trk);
	swap16(pcfg->cfg_psm);
	swap16(pcfg->cfg_shd);
	swap16(pcfg->cfg_pcom);
	swap16(pcfg->cfg_rwcc);
	swap16(pcfg->cfg_ecc);
	swap16(pcfg->cfg_eatm);
	swap16(pcfg->cfg_eprm);
	swap16(pcfg->cfg_eatw);
	swap16(pcfg->cfg_rsvc1);
	swap16(pcfg->cfg_rsvc2);
}
@


1.5
log
@Use standard swap16() and swap32() functions instead of abusing <db.h> to get
similar M_xx_SWAP().
@
text
@d1 1
a1 1
/*	$OpenBSD: prtvid.c,v 1.4 2006/05/16 22:52:26 miod Exp $ */
@


1.4
log
@Nuke whitespace at EOL
@
text
@d1 1
a1 1
/*	$OpenBSD: prtvid.c,v 1.3 2004/12/27 15:23:46 drahn Exp $ */
d20 2
a21 2
#define __DBINTERFACE_PRIVATE
#include <db.h>
d24 4
d42 1
a42 1
	printf("vid_id		%s	%x\n", pvid->vid_id,
d44 1
a44 1
	printf("vid_oss		%x	%x\n", pvid->vid_oss,
d46 1
a46 1
	printf("vid_osl		%x	%x\n", pvid->vid_osl,
d48 1
a48 1
	printf("vid_osa_u	%x	%x\n", pvid->vid_osa_u,
d50 1
a50 1
	printf("vid_osa_l	%x	%x\n", pvid->vid_osa_l,
d52 1
a52 1
	printf("vid_vd 		%x	%x\n", pvid->vid_vd,
d54 1
a54 1
	printf("vid_cas		%x	%x\n", pvid->vid_cas,
d56 1
a56 1
	printf("vid_cal		%x	%x\n", pvid->vid_cal,
d58 1
a58 1
	printf("vid_moto	%s	%x\n", pvid->vid_mot,
d70 1
a70 1
	printf("cfg_atm		%x	%x\n", pcfg->cfg_atm,
d72 1
a72 1
	printf("cfg_prm		%x	%x\n", pcfg->cfg_prm,
d74 1
a74 1
	printf("cfg_atw		%x	%x\n", pcfg->cfg_atw,
d76 1
a76 1
	printf("cfg_rec		%x	%x\n",(long)pcfg->cfg_rec,
d78 1
a78 1
	printf("cfg_spt		%x	%x\n", pcfg->cfg_spt,
d80 1
a80 1
	printf("cfg_hds		%x	%x\n", pcfg->cfg_hds,
d82 1
a82 1
	printf("cfg_trk		%x	%x\n", pcfg->cfg_trk,
d84 1
a84 1
	printf("cfg_ilv		%x	%x\n", pcfg->cfg_ilv,
d86 1
a86 1
	printf("cfg_sof		%x	%x\n", pcfg->cfg_sof,
d88 1
a88 1
	printf("cfg_psm		%x	%x\n", pcfg->cfg_psm,
d90 1
a90 1
	printf("cfg_shd		%x	%x\n", pcfg->cfg_shd,
d92 1
a92 1
	printf("cfg_pcom	%x	%x\n", pcfg->cfg_pcom,
d94 1
a94 1
	printf("cfg_ssr 	%x	%x\n", pcfg->cfg_ssr,
d96 1
a96 1
	printf("cfg_rwcc	%x	%x\n", pcfg->cfg_rwcc,
d98 1
a98 1
	printf("cfg_ecc 	%x	%x\n", pcfg->cfg_ecc,
d100 1
a100 1
	printf("cfg_eatm	%x	%x\n", pcfg->cfg_eatm,
d102 1
a102 1
	printf("cfg_eprm	%x	%x\n", pcfg->cfg_eprm,
d104 1
a104 1
	printf("cfg_eatw	%x	%x\n", pcfg->cfg_eatw,
d106 1
a106 1
	printf("cfg_gpb1	%x	%x\n", pcfg->cfg_gpb1,
d108 1
a108 1
	printf("cfg_gpb2	%x	%x\n", pcfg->cfg_gpb2,
d110 1
a110 1
	printf("cfg_gpb3	%x	%x\n", pcfg->cfg_gpb3,
d112 1
a112 1
	printf("cfg_gpb4	%x	%x\n", pcfg->cfg_gpb4,
d114 1
a114 1
	printf("cfg_ssc		%x	%x\n", pcfg->cfg_ssc,
d116 1
a116 1
	printf("cfg_runit	%x	%x\n", pcfg->cfg_runit,
d118 1
a118 1
	printf("cfg_rsvc1	%x	%x\n", pcfg->cfg_rsvc1,
d120 1
a120 1
	printf("cfg_rsvc2	%x	%x\n", pcfg->cfg_rsvc2,
d122 2
d126 1
d130 5
a134 5
	M_32_SWAP(pvid->vid_oss);
	M_16_SWAP(pvid->vid_osl);
	M_16_SWAP(pvid->vid_osa_u);
	M_16_SWAP(pvid->vid_osa_l);
	M_32_SWAP(pvid->vid_cas);
d137 1
d143 15
a157 15
	M_16_SWAP(pcfg->cfg_atm);
	M_16_SWAP(pcfg->cfg_prm);
	M_16_SWAP(pcfg->cfg_atm);
	M_16_SWAP(pcfg->cfg_rec);
	M_16_SWAP(pcfg->cfg_trk);
	M_16_SWAP(pcfg->cfg_psm);
	M_16_SWAP(pcfg->cfg_shd);
	M_16_SWAP(pcfg->cfg_pcom);
	M_16_SWAP(pcfg->cfg_rwcc);
	M_16_SWAP(pcfg->cfg_ecc);
	M_16_SWAP(pcfg->cfg_eatm);
	M_16_SWAP(pcfg->cfg_eprm);
	M_16_SWAP(pcfg->cfg_eatw);
	M_16_SWAP(pcfg->cfg_rsvc1);
	M_16_SWAP(pcfg->cfg_rsvc2);
@


1.3
log
@Finally put copyrights on files I wrote _long_ ago. prodded by miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: prtvid.c,v 1.2 1998/08/22 08:49:17 smurph Exp $ */
d48 1
a48 1
	printf("vid_vd 		%x	%x\n", pvid->vid_vd, 
@


1.2
log
@Fixed display error.
@
text
@d1 18
a18 1
/*	$OpenBSD:	$ */
@


1.1
log
@Initial revision
@
text
@d1 1
d31 1
a31 1
	printf("vid_vd %x\n",
@


1.1.1.1
log
@Third try at importing the mvme88k port. This is a working kernel
from nivas.
Userland and compiler still need to be worked on.
Make certain what directory the import is done from.
@
text
@@
