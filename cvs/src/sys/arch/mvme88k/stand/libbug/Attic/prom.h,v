head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.10
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.8
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.4
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.1.0.14
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.12
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.10
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.8
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.03.18.22.36.36;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2013.01.05.11.20.56;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2012.11.25.14.08.14;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2012.07.05.04.23.33;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.07.21.35.35;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.04.08.09.28;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	98.08.22.07.39.56;	author smurph;	state Exp;
branches
	1.1.8.1;
next	;

1.1.8.1
date	2001.10.31.03.01.20;	author nate;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2004.02.19.10.49.09;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: prom.h,v 1.6 2013/01/05 11:20:56 miod Exp $	*/
/*
 * Copyright (c) 2006, 2010, Miodrag Vallat.
 * Copyright (c) 1998 Steve Murphree, Jr.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#define MVMEPROM_CALL(x)						\
	__asm__ __volatile__ ("or %%r9,%%r0," __STRING(x) "; tb0 0,%%r0,496" \
	    :::	"r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8",		\
	        "r9", "r10", "r11", "r12", "r13", "memory")
@


1.6
log
@Switch m88k ports to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.5 2012/11/25 14:08:14 miod Exp $	*/
@


1.5
log
@Sync register clobber information in MVMEPROM_CALL() with those used in the
kernel (in dev/bugio.c)
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.4 2012/07/05 04:23:33 guenther Exp $	*/
d29 1
a29 1
	__asm__ __volatile__ ("or r9,r0," __STRING(x) "; tb0 0,r0,496"	\
@


1.4
log
@Concatenating strings doesn't require __CONCAT() (and must not in standard C)

ok miod@@
@
text
@d1 26
a26 1
/*	$OpenBSD: prom.h,v 1.3 2003/09/07 21:35:35 miod Exp $	*/
d28 4
a31 3
#define MVMEPROM_CALL(x) \
	__asm__ __volatile__ ("or r9,r0," __STRING(x)); \
	__asm__ __volatile__ ("tb0 0,r0,496")
@


1.3
log
@Oops, use the local MVMEPROM_CALL(), rather than the one which used to be
in <machine/prom.h> -- code in stand/ does not need a specific context to
invoke the BUG functions.
@
text
@d1 1
a1 1
/*	$OpenBSD: prom.h,v 1.2 2001/07/04 08:09:28 niklas Exp $	*/
d4 1
a4 1
	__asm__ __volatile__ (__CONCAT("or r9,r0,", __STRING(x))); \
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d3 3
a5 3
#define MVMEPROM_CALL(x)	\
	asm volatile ( __CONCAT("or r9,r0," __STRING(x)) ); \
	asm volatile ("tb0 0,r0,496");
@


1.1
log
@new libbug.
@
text
@d1 2
@


1.1.8.1
log
@Sync the SMP branch to something just after 3.0
@
text
@a0 2
/*	$OpenBSD$	*/

@


1.1.8.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d3 3
a5 3
#define MVMEPROM_CALL(x) \
	__asm__ __volatile__ (__CONCAT("or r9,r0,", __STRING(x))); \
	__asm__ __volatile__ ("tb0 0,r0,496")
@


