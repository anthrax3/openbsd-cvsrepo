head	1.6;
access;
symbols
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.0.16
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.12
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.10
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2005.08.14.12.51.22;	author miod;	state dead;
branches;
next	1.5;

1.5
date	2002.08.09.21.28.09;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.34;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.15.01.43.14;	author millert;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2001.01.15.19.50.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	97.07.06.07.46.25;	author downsj;	state Exp;
branches
	1.1.12.1;
next	;

1.1.12.1
date	2001.04.18.16.09.59;	author niklas;	state Exp;
branches;
next	1.1.12.2;

1.1.12.2
date	2001.07.04.10.18.13;	author niklas;	state Exp;
branches;
next	1.1.12.3;

1.1.12.3
date	2002.03.28.10.34.04;	author niklas;	state Exp;
branches;
next	1.1.12.4;

1.1.12.4
date	2003.03.27.23.28.43;	author niklas;	state Exp;
branches;
next	;

1.3.4.1
date	2002.06.11.03.36.06;	author art;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.10.29.00.28.05;	author art;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove the inline cache and TLB primitives - we don't use them at this point,
they do not cover the HP MMU for hp300, and they do not cover 040+060 kernels
(which share all cache operations) efficiently.
@
text
@/*	$OpenBSD: cacheops_60.h,v 1.5 2002/08/09 21:28:09 mickey Exp $	*/
/*	$NetBSD: cacheops_60.h,v 1.1 1997/06/02 20:26:43 leo Exp $	*/

/*-
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Leo Weppelman
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Invalidate entire TLB.
 */
void TBIA_60(void);
extern __inline__ void
TBIA_60()
{
	__asm __volatile (" .word 0xf518" ); /*  pflusha */
}

/*
 * Invalidate any TLB entry for given VA (TB Invalidate Single)
 */
void TBIS_60(vaddr_t);
extern __inline__ void
TBIS_60(va)
	vaddr_t	va;
{
	register vaddr_t	r_va __asm("a0") = va;
	int	tmp;

	__asm __volatile (" movc   %1, dfc;"	/* select supervisor	*/
			  " .word 0xf508;"	/* pflush a0@@		*/
			  " moveq  %3, %1;"	/* select user		*/
			  " movc   %1, dfc;"
			  " .word 0xf508;"	/* pflush a0@@		*/
			  " movc   cacr,%1;"
			  " orl    %4,%1;"
			  " movc   %1,cacr" : "=d" (tmp) :
			  "0" (FC_SUPERD), "a" (r_va), "i" (FC_USERD),
			  "i" (IC60_CABC));
}

/*
 * Invalidate supervisor side of TLB
 */
void TBIAS_60(void);
extern __inline__ void
TBIAS_60()
{
	int	tmp;
	/*
	 * Cannot specify supervisor/user on pflusha, so we flush all
	 */
	__asm __volatile (" .word 0xf518;"
			  " movc  cacr,%0;"
			  " orl   %1,%0;"
			  " movc  %0,cacr" /* clear all branch cache entries */
			  : "=d" (tmp) : "i" (IC60_CABC) );
}

/*
 * Invalidate user side of TLB
 */
void TBIAU_60(void);
extern __inline__ void
TBIAU_60()
{
	int	tmp;
	/*
	 * Cannot specify supervisor/user on pflusha, so we flush all
	 */
	__asm __volatile (" .word 0xf518;"
			  " movc  cacr,%0;"
			  " orl   %1,%0;"
			  " movc  %0,cacr" /* clear all branch cache entries */
			  : "=d" (tmp) : "i" (IC60_CUBC) );
}

/*
 * Invalidate instruction cache
 */
void ICIA_60(void);
extern __inline__ void
ICIA_60()
{
	/* inva ic (also clears branch cache) */
	__asm __volatile (" .word 0xf498;");
}

void ICPA_60(void);
extern __inline__ void
ICPA_60()
{
	/* inva ic (also clears branch cache) */
	__asm __volatile (" .word 0xf498;");
}

/*
 * Invalidate data cache.
 */
void DCIA_60(void);
extern __inline__ void
DCIA_60()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCIS_60(void);
extern __inline__ void
DCIS_60()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCIU_60(void);
extern __inline__ void
DCIU_60()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCIAS_60(paddr_t);
extern __inline__ void
DCIAS_60(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf468;" : : "a" (r_pa)); /* cpushl dc,a0@@ */
}

void PCIA_60(void);
extern __inline__ void
PCIA_60()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCFA_60(void);
extern __inline__ void
DCFA_60()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

/* invalidate instruction physical cache line */
void ICPL_60(paddr_t);
extern __inline__ void
ICPL_60(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf488;" : : "a" (r_pa)); /* cinvl ic,a0@@ */
}

/* invalidate instruction physical cache page */
void ICPP_60(paddr_t);
extern __inline__ void
ICPP_60(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf490;" : : "a" (r_pa)); /* cinvp ic,a0@@ */
}

/* invalidate data physical cache line */
void DCPL_60(paddr_t);
extern __inline__ void
DCPL_60(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf448;" : : "a" (r_pa)); /* cinvl dc,a0@@ */
}

/* invalidate data physical cache page */
void DCPP_60(paddr_t);
extern __inline__ void
DCPP_60(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf450;" : : "a" (r_pa)); /* cinvp dc,a0@@ */
}

/* invalidate data physical all */
void DCPA_60(void);
extern __inline__ void
DCPA_60()
{
	__asm __volatile (" .word 0xf458;"); /* cinva dc */
}

/* data cache flush line */
void DCFL_60(paddr_t);
extern __inline__ void
DCFL_60(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf468;" : : "a" (r_pa)); /* cpushl dc,a0@@ */
}

/* data cache flush page */
void DCFP_60(paddr_t);
extern __inline__ void
DCFP_60(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf470;" : : "a" (r_pa)); /* cpushp dc,a0@@ */
}
@


1.5
log
@typo
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_60.h,v 1.4 2002/03/14 01:26:34 millert Exp $	*/
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_60.h,v 1.3 2001/05/15 01:43:14 millert Exp $	*/
d202 1
a202 1
	paddr_t	va;
@


1.3
log
@Replace vm_offset_t with vaddr_t and paddr_t as appropriate.
NetBSD used as a guide.
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_60.h,v 1.2 2001/01/15 19:50:38 deraadt Exp $	*/
d43 1
a43 1
void TBIA_60 __P((void));
d53 1
a53 1
void TBIS_60 __P((vaddr_t));
d76 1
a76 1
void TBIAS_60 __P((void));
d94 1
a94 1
void TBIAU_60 __P((void));
d112 1
a112 1
void ICIA_60 __P((void));
d120 1
a120 1
void ICPA_60 __P((void));
d131 1
a131 1
void DCIA_60 __P((void));
d138 1
a138 1
void DCIS_60 __P((void));
d145 1
a145 1
void DCIU_60 __P((void));
d152 1
a152 1
void DCIAS_60 __P((paddr_t));
d162 1
a162 1
void PCIA_60 __P((void));
d169 1
a169 1
void DCFA_60 __P((void));
d177 1
a177 1
void ICPL_60 __P((paddr_t));
d188 1
a188 1
void ICPP_60 __P((paddr_t));
d199 1
a199 1
void DCPL_60 __P((paddr_t));
d210 1
a210 1
void DCPP_60 __P((paddr_t));
d221 1
a221 1
void DCPA_60 __P((void));
d229 1
a229 1
void DCFL_60 __P((paddr_t));
d240 1
a240 1
void DCFP_60 __P((paddr_t));
@


1.3.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_60.h,v 1.3 2001/05/15 01:43:14 millert Exp $	*/
d43 1
a43 1
void TBIA_60(void);
d53 1
a53 1
void TBIS_60(vaddr_t);
d76 1
a76 1
void TBIAS_60(void);
d94 1
a94 1
void TBIAU_60(void);
d112 1
a112 1
void ICIA_60(void);
d120 1
a120 1
void ICPA_60(void);
d131 1
a131 1
void DCIA_60(void);
d138 1
a138 1
void DCIS_60(void);
d145 1
a145 1
void DCIU_60(void);
d152 1
a152 1
void DCIAS_60(paddr_t);
d162 1
a162 1
void PCIA_60(void);
d169 1
a169 1
void DCFA_60(void);
d177 1
a177 1
void ICPL_60(paddr_t);
d188 1
a188 1
void ICPP_60(paddr_t);
d199 1
a199 1
void DCPL_60(paddr_t);
d210 1
a210 1
void DCPP_60(paddr_t);
d221 1
a221 1
void DCPA_60(void);
d229 1
a229 1
void DCFL_60(paddr_t);
d240 1
a240 1
void DCFP_60(paddr_t);
@


1.3.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_60.h,v 1.3.4.1 2002/06/11 03:36:06 art Exp $	*/
d202 1
a202 1
	paddr_t	pa;
@


1.2
log
@__asm__ and __volatile__
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_60.h,v 1.1 1997/07/06 07:46:25 downsj Exp $	*/
d53 1
a53 1
void TBIS_60 __P((vm_offset_t));
d56 1
a56 1
	vm_offset_t	va;
d58 1
a58 1
	register vm_offset_t	r_va __asm("a0") = va;
d152 1
a152 1
void DCIAS_60 __P((vm_offset_t));
d154 2
a155 2
DCIAS_60(va)
	vm_offset_t	va;
d157 1
a157 1
	register vm_offset_t	r_va __asm("a0") = va;
d159 1
a159 1
	__asm __volatile (" .word 0xf468;" : : "a" (r_va)); /* cpushl dc,a0@@ */
d177 1
a177 1
void ICPL_60 __P((vm_offset_t));
d179 2
a180 2
ICPL_60(va)
	vm_offset_t	va;
d182 1
a182 1
	register vm_offset_t	r_va __asm("a0") = va;
d184 1
a184 1
	__asm __volatile (" .word 0xf488;" : : "a" (r_va)); /* cinvl ic,a0@@ */
d188 1
a188 1
void ICPP_60 __P((vm_offset_t));
d190 2
a191 2
ICPP_60(va)
	vm_offset_t	va;
d193 1
a193 1
	register vm_offset_t	r_va __asm("a0") = va;
d195 1
a195 1
	__asm __volatile (" .word 0xf490;" : : "a" (r_va)); /* cinvp ic,a0@@ */
d199 1
a199 1
void DCPL_60 __P((vm_offset_t));
d201 2
a202 2
DCPL_60(va)
	vm_offset_t	va;
d204 1
a204 1
	register vm_offset_t	r_va __asm("a0") = va;
d206 1
a206 1
	__asm __volatile (" .word 0xf448;" : : "a" (r_va)); /* cinvl dc,a0@@ */
d210 1
a210 1
void DCPP_60 __P((vm_offset_t));
d212 2
a213 2
DCPP_60(va)
	vm_offset_t	va;
d215 1
a215 1
	register vm_offset_t	r_va __asm("a0") = va;
d217 1
a217 1
	__asm __volatile (" .word 0xf450;" : : "a" (r_va)); /* cinvp dc,a0@@ */
d229 1
a229 1
void DCFL_60 __P((vm_offset_t));
d231 2
a232 2
DCFL_60(va)
	vm_offset_t	va;
d234 1
a234 1
	register vm_offset_t	r_va __asm("a0") = va;
d236 1
a236 1
	__asm __volatile (" .word 0xf468;" : : "a" (r_va)); /* cpushl dc,a0@@ */
d240 1
a240 1
void DCFP_60 __P((vm_offset_t));
d242 2
a243 2
DCFP_60(va)
	vm_offset_t	va;
d245 1
a245 1
	register vm_offset_t	r_va __asm("a0") = va;
d247 1
a247 1
	__asm __volatile (" .word 0xf470;" : : "a" (r_va)); /* cpushp dc,a0@@ */
@


1.1
log
@Sync with NetBSD changes, 970415 - 970705.

This includes a new asm.h, as well as even more code abstracted from hp300.
These changes are likely to break ports that don't know about them; hp300
runs at the moment.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
extern inline void
d54 1
a54 1
extern inline void
d77 1
a77 1
extern inline void
d95 1
a95 1
extern inline void
d113 1
a113 1
extern inline void
d121 1
a121 1
extern inline void
d132 1
a132 1
extern inline void
d139 1
a139 1
extern inline void
d146 1
a146 1
extern inline void
d153 1
a153 1
extern inline void
d163 1
a163 1
extern inline void
d170 1
a170 1
extern inline void
d178 1
a178 1
extern inline void
d189 1
a189 1
extern inline void
d200 1
a200 1
extern inline void
d211 1
a211 1
extern inline void
d222 1
a222 1
extern inline void
d230 1
a230 1
extern inline void
d241 1
a241 1
extern inline void
@


1.1.12.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_60.h,v 1.2 2001/01/15 19:50:38 deraadt Exp $	*/
d44 1
a44 1
extern __inline__ void
d54 1
a54 1
extern __inline__ void
d77 1
a77 1
extern __inline__ void
d95 1
a95 1
extern __inline__ void
d113 1
a113 1
extern __inline__ void
d121 1
a121 1
extern __inline__ void
d132 1
a132 1
extern __inline__ void
d139 1
a139 1
extern __inline__ void
d146 1
a146 1
extern __inline__ void
d153 1
a153 1
extern __inline__ void
d163 1
a163 1
extern __inline__ void
d170 1
a170 1
extern __inline__ void
d178 1
a178 1
extern __inline__ void
d189 1
a189 1
extern __inline__ void
d200 1
a200 1
extern __inline__ void
d211 1
a211 1
extern __inline__ void
d222 1
a222 1
extern __inline__ void
d230 1
a230 1
extern __inline__ void
d241 1
a241 1
extern __inline__ void
@


1.1.12.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_60.h,v 1.1.12.1 2001/04/18 16:09:59 niklas Exp $	*/
d53 1
a53 1
void TBIS_60 __P((vaddr_t));
d56 1
a56 1
	vaddr_t	va;
d58 1
a58 1
	register vaddr_t	r_va __asm("a0") = va;
d152 1
a152 1
void DCIAS_60 __P((paddr_t));
d154 2
a155 2
DCIAS_60(pa)
	paddr_t	pa;
d157 1
a157 1
	register paddr_t	r_pa __asm("a0") = pa;
d159 1
a159 1
	__asm __volatile (" .word 0xf468;" : : "a" (r_pa)); /* cpushl dc,a0@@ */
d177 1
a177 1
void ICPL_60 __P((paddr_t));
d179 2
a180 2
ICPL_60(pa)
	paddr_t	pa;
d182 1
a182 1
	register paddr_t	r_pa __asm("a0") = pa;
d184 1
a184 1
	__asm __volatile (" .word 0xf488;" : : "a" (r_pa)); /* cinvl ic,a0@@ */
d188 1
a188 1
void ICPP_60 __P((paddr_t));
d190 2
a191 2
ICPP_60(pa)
	paddr_t	pa;
d193 1
a193 1
	register paddr_t	r_pa __asm("a0") = pa;
d195 1
a195 1
	__asm __volatile (" .word 0xf490;" : : "a" (r_pa)); /* cinvp ic,a0@@ */
d199 1
a199 1
void DCPL_60 __P((paddr_t));
d201 2
a202 2
DCPL_60(pa)
	paddr_t	va;
d204 1
a204 1
	register paddr_t	r_pa __asm("a0") = pa;
d206 1
a206 1
	__asm __volatile (" .word 0xf448;" : : "a" (r_pa)); /* cinvl dc,a0@@ */
d210 1
a210 1
void DCPP_60 __P((paddr_t));
d212 2
a213 2
DCPP_60(pa)
	paddr_t	pa;
d215 1
a215 1
	register paddr_t	r_pa __asm("a0") = pa;
d217 1
a217 1
	__asm __volatile (" .word 0xf450;" : : "a" (r_pa)); /* cinvp dc,a0@@ */
d229 1
a229 1
void DCFL_60 __P((paddr_t));
d231 2
a232 2
DCFL_60(pa)
	paddr_t	pa;
d234 1
a234 1
	register paddr_t	r_pa __asm("a0") = pa;
d236 1
a236 1
	__asm __volatile (" .word 0xf468;" : : "a" (r_pa)); /* cpushl dc,a0@@ */
d240 1
a240 1
void DCFP_60 __P((paddr_t));
d242 2
a243 2
DCFP_60(pa)
	paddr_t	pa;
d245 1
a245 1
	register paddr_t	r_pa __asm("a0") = pa;
d247 1
a247 1
	__asm __volatile (" .word 0xf470;" : : "a" (r_pa)); /* cpushp dc,a0@@ */
@


1.1.12.3
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 1
a43 1
void TBIA_60(void);
d53 1
a53 1
void TBIS_60(vaddr_t);
d76 1
a76 1
void TBIAS_60(void);
d94 1
a94 1
void TBIAU_60(void);
d112 1
a112 1
void ICIA_60(void);
d120 1
a120 1
void ICPA_60(void);
d131 1
a131 1
void DCIA_60(void);
d138 1
a138 1
void DCIS_60(void);
d145 1
a145 1
void DCIU_60(void);
d152 1
a152 1
void DCIAS_60(paddr_t);
d162 1
a162 1
void PCIA_60(void);
d169 1
a169 1
void DCFA_60(void);
d177 1
a177 1
void ICPL_60(paddr_t);
d188 1
a188 1
void ICPP_60(paddr_t);
d199 1
a199 1
void DCPL_60(paddr_t);
d210 1
a210 1
void DCPP_60(paddr_t);
d221 1
a221 1
void DCPA_60(void);
d229 1
a229 1
void DCFL_60(paddr_t);
d240 1
a240 1
void DCFP_60(paddr_t);
@


1.1.12.4
log
@Sync the SMP branch with 3.3
@
text
@d202 1
a202 1
	paddr_t	pa;
@


