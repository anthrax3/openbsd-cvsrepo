head	1.4;
access;
symbols
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.6
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.0.16
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.12
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.10
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2005.08.14.12.51.22;	author miod;	state dead;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.34;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.15.19.50.37;	author deraadt;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	97.07.06.07.46.23;	author downsj;	state Exp;
branches
	1.1.12.1;
next	;

1.1.12.1
date	2001.04.18.16.09.58;	author niklas;	state Exp;
branches;
next	1.1.12.2;

1.1.12.2
date	2002.03.28.10.34.04;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2002.06.11.03.36.06;	author art;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove the inline cache and TLB primitives - we don't use them at this point,
they do not cover the HP MMU for hp300, and they do not cover 040+060 kernels
(which share all cache operations) efficiently.
@
text
@/*	$OpenBSD: cacheops_20.h,v 1.3 2002/03/14 01:26:34 millert Exp $	*/
/*	$NetBSD: cacheops_20.h,v 1.1 1997/06/02 20:26:39 leo Exp $	*/

/*-
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Leo Weppelman
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Invalidate entire TLB.
 */
void TBIA_20(void);
extern __inline__ void
TBIA_20()
{
	__asm __volatile (" pflusha");
}

/*
 * Invalidate any TLB entry for given VA (TB Invalidate Single)
 */
void TBIS_20(void *);
extern __inline__ void
TBIS_20(va)
	void	*va;
{

	__asm __volatile (" pflushs	#0,#0,%0@@" : : "a" (va) );
}

/*
 * Invalidate supervisor side of TLB
 */
void TBIAS_20(void);
extern __inline__ void
TBIAS_20()
{
	__asm __volatile (" pflushs #4,#4");
}

/*
 * Invalidate user side of TLB
 */
void TBIAU_20(void);
extern __inline__ void
TBIAU_20()
{
	__asm __volatile (" pflushs #0,#4;");
}

/*
 * Invalidate instruction cache
 */
void ICIA_20(void);
extern __inline__ void
ICIA_20()
{
	__asm __volatile (" movc %0,cacr;" : : "d" (IC_CLEAR));
}

void ICPA_20(void);
extern __inline__ void
ICPA_20()
{
	__asm __volatile (" movc %0,cacr;" : : "d" (IC_CLEAR));
}

/*
 * Invalidate data cache.
 * NOTE: we do not flush 68030/20 on-chip cache as there are no aliasing
 * problems with DC_WA.  The only cases we have to worry about are context
 * switch and TLB changes, both of which are handled "in-line" in resume
 * and TBI*.
 */
#define	DCIA_20()
#define	DCIS_20()
#define	DCIU_20()
#define	DCIAS_20()

void PCIA_20(void);
extern __inline__ void
PCIA_20()
{
	__asm __volatile (" movc %0,cacr;" : : "d" (DC_CLEAR));
}
@


1.3
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_20.h,v 1.2 2001/01/15 19:50:37 deraadt Exp $	*/
@


1.2
log
@__asm__ and __volatile__
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_20.h,v 1.1 1997/07/06 07:46:23 downsj Exp $	*/
d43 1
a43 1
void TBIA_20 __P((void));
d53 1
a53 1
void TBIS_20 __P((void *));
d65 1
a65 1
void TBIAS_20 __P((void));
d75 1
a75 1
void TBIAU_20 __P((void));
d85 1
a85 1
void ICIA_20 __P((void));
d92 1
a92 1
void ICPA_20 __P((void));
d111 1
a111 1
void PCIA_20 __P((void));
@


1.2.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_20.h,v 1.2 2001/01/15 19:50:37 deraadt Exp $	*/
d43 1
a43 1
void TBIA_20(void);
d53 1
a53 1
void TBIS_20(void *);
d65 1
a65 1
void TBIAS_20(void);
d75 1
a75 1
void TBIAU_20(void);
d85 1
a85 1
void ICIA_20(void);
d92 1
a92 1
void ICPA_20(void);
d111 1
a111 1
void PCIA_20(void);
@


1.1
log
@Sync with NetBSD changes, 970415 - 970705.

This includes a new asm.h, as well as even more code abstracted from hp300.
These changes are likely to break ports that don't know about them; hp300
runs at the moment.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
extern inline void
d54 1
a54 1
extern inline void
d66 1
a66 1
extern inline void
d76 1
a76 1
extern inline void
d86 1
a86 1
extern inline void
d93 1
a93 1
extern inline void
d112 1
a112 1
extern inline void
@


1.1.12.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_20.h,v 1.2 2001/01/15 19:50:37 deraadt Exp $	*/
d44 1
a44 1
extern __inline__ void
d54 1
a54 1
extern __inline__ void
d66 1
a66 1
extern __inline__ void
d76 1
a76 1
extern __inline__ void
d86 1
a86 1
extern __inline__ void
d93 1
a93 1
extern __inline__ void
d112 1
a112 1
extern __inline__ void
@


1.1.12.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 1
a43 1
void TBIA_20(void);
d53 1
a53 1
void TBIS_20(void *);
d65 1
a65 1
void TBIAS_20(void);
d75 1
a75 1
void TBIAU_20(void);
d85 1
a85 1
void ICIA_20(void);
d92 1
a92 1
void ICPA_20(void);
d111 1
a111 1
void PCIA_20(void);
@


