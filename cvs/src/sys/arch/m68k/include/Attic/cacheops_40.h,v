head	1.5;
access;
symbols
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.0.16
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.12
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.10
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2005.08.14.12.51.22;	author miod;	state dead;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.34;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.15.01.43.14;	author millert;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2001.01.15.19.50.37;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	97.07.06.07.46.24;	author downsj;	state Exp;
branches
	1.1.12.1;
next	;

1.1.12.1
date	2001.04.18.16.09.58;	author niklas;	state Exp;
branches;
next	1.1.12.2;

1.1.12.2
date	2001.07.04.10.18.13;	author niklas;	state Exp;
branches;
next	1.1.12.3;

1.1.12.3
date	2002.03.28.10.34.04;	author niklas;	state Exp;
branches;
next	;

1.3.4.1
date	2002.06.11.03.36.06;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove the inline cache and TLB primitives - we don't use them at this point,
they do not cover the HP MMU for hp300, and they do not cover 040+060 kernels
(which share all cache operations) efficiently.
@
text
@/*	$OpenBSD: cacheops_40.h,v 1.4 2002/03/14 01:26:34 millert Exp $	*/
/*	$NetBSD: cacheops_40.h,v 1.1 1997/06/02 20:26:41 leo Exp $	*/

/*-
 * Copyright (c) 1997 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Leo Weppelman
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Invalidate entire TLB.
 */
void TBIA_40(void);
extern __inline__ void
TBIA_40()
{
	__asm __volatile (" .word 0xf518" ); /*  pflusha */
}

/*
 * Invalidate any TLB entry for given VA (TB Invalidate Single)
 */
void TBIS_40(vaddr_t);
extern __inline__ void
TBIS_40(va)
	vaddr_t	va;
{
	register vaddr_t	r_va __asm("a0") = va;
	int	tmp;

	__asm __volatile (" movc   %1, dfc;"	/* select supervisor	*/
			  " .word 0xf508;"	/* pflush a0@@		*/
			  " moveq  %3, %1;"	/* select user		*/
			  " movc   %1, dfc;"
			  " .word 0xf508;" : "=d" (tmp) :
			  "0" (FC_SUPERD), "a" (r_va), "i" (FC_USERD));
}

/*
 * Invalidate supervisor side of TLB
 */
void TBIAS_40(void);
extern __inline__ void
TBIAS_40()
{
	/*
	 * Cannot specify supervisor/user on pflusha, so we flush all
	 */
	__asm __volatile (" .word 0xf518;");
}

/*
 * Invalidate user side of TLB
 */
void TBIAU_40(void);
extern __inline__ void
TBIAU_40()
{
	/*
	 * Cannot specify supervisor/user on pflusha, so we flush all
	 */
	__asm __volatile (" .word 0xf518;");
}

/*
 * Invalidate instruction cache
 */
void ICIA_40(void);
extern __inline__ void
ICIA_40()
{
	__asm __volatile (" .word 0xf498;"); /* cinva ic */
}

void ICPA_40(void);
extern __inline__ void
ICPA_40()
{
	__asm __volatile (" .word 0xf498;"); /* cinva ic */
}

/*
 * Invalidate data cache.
 */
void DCIA_40(void);
extern __inline__ void
DCIA_40()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCIS_40(void);
extern __inline__ void
DCIS_40()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCIU_40(void);
extern __inline__ void
DCIU_40()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCIAS_40(paddr_t);
extern __inline__ void
DCIAS_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf468;" : : "a" (r_pa)); /* cpushl dc,a0@@ */
}

void PCIA_40(void);
extern __inline__ void
PCIA_40()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

void DCFA_40(void);
extern __inline__ void
DCFA_40()
{
	__asm __volatile (" .word 0xf478;"); /* cpusha dc */
}

/* invalidate instruction physical cache line */
void ICPL_40(paddr_t);
extern __inline__ void
ICPL_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf488;" : : "a" (r_pa)); /* cinvl ic,a0@@ */
}

/* invalidate instruction physical cache page */
void ICPP_40(paddr_t);
extern __inline__ void
ICPP_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf490;" : : "a" (r_pa)); /* cinvp ic,a0@@ */
}

/* invalidate data physical cache line */
void DCPL_40(paddr_t);
extern __inline__ void
DCPL_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf448;" : : "a" (r_pa)); /* cinvl dc,a0@@ */
}

/* invalidate data physical cache page */
void DCPP_40(paddr_t);
extern __inline__ void
DCPP_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf450;" : : "a" (r_pa)); /* cinvp dc,a0@@ */
}

/* invalidate data physical all */
void DCPA_40(void);
extern __inline__ void
DCPA_40()
{
	__asm __volatile (" .word 0xf458;"); /* cinva dc */
}

/* data cache flush line */
void DCFL_40(paddr_t);
extern __inline__ void
DCFL_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf468;" : : "a" (r_pa)); /* cpushl dc,a0@@ */
}

/* data cache flush page */
void DCFP_40(paddr_t);
extern __inline__ void
DCFP_40(pa)
	paddr_t	pa;
{
	register paddr_t	r_pa __asm("a0") = pa;

	__asm __volatile (" .word 0xf470;" : : "a" (r_pa)); /* cpushp dc,a0@@ */
}
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_40.h,v 1.3 2001/05/15 01:43:14 millert Exp $	*/
@


1.3
log
@Replace vm_offset_t with vaddr_t and paddr_t as appropriate.
NetBSD used as a guide.
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_40.h,v 1.2 2001/01/15 19:50:37 deraadt Exp $	*/
d43 1
a43 1
void TBIA_40 __P((void));
d53 1
a53 1
void TBIS_40 __P((vaddr_t));
d72 1
a72 1
void TBIAS_40 __P((void));
d85 1
a85 1
void TBIAU_40 __P((void));
d98 1
a98 1
void ICIA_40 __P((void));
d105 1
a105 1
void ICPA_40 __P((void));
d115 1
a115 1
void DCIA_40 __P((void));
d122 1
a122 1
void DCIS_40 __P((void));
d129 1
a129 1
void DCIU_40 __P((void));
d136 1
a136 1
void DCIAS_40 __P((paddr_t));
d146 1
a146 1
void PCIA_40 __P((void));
d153 1
a153 1
void DCFA_40 __P((void));
d161 1
a161 1
void ICPL_40 __P((paddr_t));
d172 1
a172 1
void ICPP_40 __P((paddr_t));
d183 1
a183 1
void DCPL_40 __P((paddr_t));
d194 1
a194 1
void DCPP_40 __P((paddr_t));
d205 1
a205 1
void DCPA_40 __P((void));
d213 1
a213 1
void DCFL_40 __P((paddr_t));
d224 1
a224 1
void DCFP_40 __P((paddr_t));
@


1.3.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_40.h,v 1.3 2001/05/15 01:43:14 millert Exp $	*/
d43 1
a43 1
void TBIA_40(void);
d53 1
a53 1
void TBIS_40(vaddr_t);
d72 1
a72 1
void TBIAS_40(void);
d85 1
a85 1
void TBIAU_40(void);
d98 1
a98 1
void ICIA_40(void);
d105 1
a105 1
void ICPA_40(void);
d115 1
a115 1
void DCIA_40(void);
d122 1
a122 1
void DCIS_40(void);
d129 1
a129 1
void DCIU_40(void);
d136 1
a136 1
void DCIAS_40(paddr_t);
d146 1
a146 1
void PCIA_40(void);
d153 1
a153 1
void DCFA_40(void);
d161 1
a161 1
void ICPL_40(paddr_t);
d172 1
a172 1
void ICPP_40(paddr_t);
d183 1
a183 1
void DCPL_40(paddr_t);
d194 1
a194 1
void DCPP_40(paddr_t);
d205 1
a205 1
void DCPA_40(void);
d213 1
a213 1
void DCFL_40(paddr_t);
d224 1
a224 1
void DCFP_40(paddr_t);
@


1.2
log
@__asm__ and __volatile__
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_40.h,v 1.1 1997/07/06 07:46:24 downsj Exp $	*/
d53 1
a53 1
void TBIS_40 __P((vm_offset_t));
d56 1
a56 1
	vm_offset_t	va;
d58 1
a58 1
	register vm_offset_t	r_va __asm("a0") = va;
d136 1
a136 1
void DCIAS_40 __P((vm_offset_t));
d138 2
a139 2
DCIAS_40(va)
	vm_offset_t	va;
d141 1
a141 1
	register vm_offset_t	r_va __asm("a0") = va;
d143 1
a143 1
	__asm __volatile (" .word 0xf468;" : : "a" (r_va)); /* cpushl dc,a0@@ */
d161 1
a161 1
void ICPL_40 __P((vm_offset_t));
d163 2
a164 2
ICPL_40(va)
	vm_offset_t	va;
d166 1
a166 1
	register vm_offset_t	r_va __asm("a0") = va;
d168 1
a168 1
	__asm __volatile (" .word 0xf488;" : : "a" (r_va)); /* cinvl ic,a0@@ */
d172 1
a172 1
void ICPP_40 __P((vm_offset_t));
d174 2
a175 2
ICPP_40(va)
	vm_offset_t	va;
d177 1
a177 1
	register vm_offset_t	r_va __asm("a0") = va;
d179 1
a179 1
	__asm __volatile (" .word 0xf490;" : : "a" (r_va)); /* cinvp ic,a0@@ */
d183 1
a183 1
void DCPL_40 __P((vm_offset_t));
d185 2
a186 2
DCPL_40(va)
	vm_offset_t	va;
d188 1
a188 1
	register vm_offset_t	r_va __asm("a0") = va;
d190 1
a190 1
	__asm __volatile (" .word 0xf448;" : : "a" (r_va)); /* cinvl dc,a0@@ */
d194 1
a194 1
void DCPP_40 __P((vm_offset_t));
d196 2
a197 2
DCPP_40(va)
	vm_offset_t	va;
d199 1
a199 1
	register vm_offset_t	r_va __asm("a0") = va;
d201 1
a201 1
	__asm __volatile (" .word 0xf450;" : : "a" (r_va)); /* cinvp dc,a0@@ */
d213 1
a213 1
void DCFL_40 __P((vm_offset_t));
d215 2
a216 2
DCFL_40(va)
	vm_offset_t	va;
d218 1
a218 1
	register vm_offset_t	r_va __asm("a0") = va;
d220 1
a220 1
	__asm __volatile (" .word 0xf468;" : : "a" (r_va)); /* cpushl dc,a0@@ */
d224 1
a224 1
void DCFP_40 __P((vm_offset_t));
d226 2
a227 2
DCFP_40(va)
	vm_offset_t	va;
d229 1
a229 1
	register vm_offset_t	r_va __asm("a0") = va;
d231 1
a231 1
	__asm __volatile (" .word 0xf470;" : : "a" (r_va)); /* cpushp dc,a0@@ */
@


1.1
log
@Sync with NetBSD changes, 970415 - 970705.

This includes a new asm.h, as well as even more code abstracted from hp300.
These changes are likely to break ports that don't know about them; hp300
runs at the moment.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
extern inline void
d54 1
a54 1
extern inline void
d73 1
a73 1
extern inline void
d86 1
a86 1
extern inline void
d99 1
a99 1
extern inline void
d106 1
a106 1
extern inline void
d116 1
a116 1
extern inline void
d123 1
a123 1
extern inline void
d130 1
a130 1
extern inline void
d137 1
a137 1
extern inline void
d147 1
a147 1
extern inline void
d154 1
a154 1
extern inline void
d162 1
a162 1
extern inline void
d173 1
a173 1
extern inline void
d184 1
a184 1
extern inline void
d195 1
a195 1
extern inline void
d206 1
a206 1
extern inline void
d214 1
a214 1
extern inline void
d225 1
a225 1
extern inline void
@


1.1.12.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_40.h,v 1.2 2001/01/15 19:50:37 deraadt Exp $	*/
d44 1
a44 1
extern __inline__ void
d54 1
a54 1
extern __inline__ void
d73 1
a73 1
extern __inline__ void
d86 1
a86 1
extern __inline__ void
d99 1
a99 1
extern __inline__ void
d106 1
a106 1
extern __inline__ void
d116 1
a116 1
extern __inline__ void
d123 1
a123 1
extern __inline__ void
d130 1
a130 1
extern __inline__ void
d137 1
a137 1
extern __inline__ void
d147 1
a147 1
extern __inline__ void
d154 1
a154 1
extern __inline__ void
d162 1
a162 1
extern __inline__ void
d173 1
a173 1
extern __inline__ void
d184 1
a184 1
extern __inline__ void
d195 1
a195 1
extern __inline__ void
d206 1
a206 1
extern __inline__ void
d214 1
a214 1
extern __inline__ void
d225 1
a225 1
extern __inline__ void
@


1.1.12.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: cacheops_40.h,v 1.1.12.1 2001/04/18 16:09:58 niklas Exp $	*/
d53 1
a53 1
void TBIS_40 __P((vaddr_t));
d56 1
a56 1
	vaddr_t	va;
d58 1
a58 1
	register vaddr_t	r_va __asm("a0") = va;
d136 1
a136 1
void DCIAS_40 __P((paddr_t));
d138 2
a139 2
DCIAS_40(pa)
	paddr_t	pa;
d141 1
a141 1
	register paddr_t	r_pa __asm("a0") = pa;
d143 1
a143 1
	__asm __volatile (" .word 0xf468;" : : "a" (r_pa)); /* cpushl dc,a0@@ */
d161 1
a161 1
void ICPL_40 __P((paddr_t));
d163 2
a164 2
ICPL_40(pa)
	paddr_t	pa;
d166 1
a166 1
	register paddr_t	r_pa __asm("a0") = pa;
d168 1
a168 1
	__asm __volatile (" .word 0xf488;" : : "a" (r_pa)); /* cinvl ic,a0@@ */
d172 1
a172 1
void ICPP_40 __P((paddr_t));
d174 2
a175 2
ICPP_40(pa)
	paddr_t	pa;
d177 1
a177 1
	register paddr_t	r_pa __asm("a0") = pa;
d179 1
a179 1
	__asm __volatile (" .word 0xf490;" : : "a" (r_pa)); /* cinvp ic,a0@@ */
d183 1
a183 1
void DCPL_40 __P((paddr_t));
d185 2
a186 2
DCPL_40(pa)
	paddr_t	pa;
d188 1
a188 1
	register paddr_t	r_pa __asm("a0") = pa;
d190 1
a190 1
	__asm __volatile (" .word 0xf448;" : : "a" (r_pa)); /* cinvl dc,a0@@ */
d194 1
a194 1
void DCPP_40 __P((paddr_t));
d196 2
a197 2
DCPP_40(pa)
	paddr_t	pa;
d199 1
a199 1
	register paddr_t	r_pa __asm("a0") = pa;
d201 1
a201 1
	__asm __volatile (" .word 0xf450;" : : "a" (r_pa)); /* cinvp dc,a0@@ */
d213 1
a213 1
void DCFL_40 __P((paddr_t));
d215 2
a216 2
DCFL_40(pa)
	paddr_t	pa;
d218 1
a218 1
	register paddr_t	r_pa __asm("a0") = pa;
d220 1
a220 1
	__asm __volatile (" .word 0xf468;" : : "a" (r_pa)); /* cpushl dc,a0@@ */
d224 1
a224 1
void DCFP_40 __P((paddr_t));
d226 2
a227 2
DCFP_40(pa)
	paddr_t	pa;
d229 1
a229 1
	register paddr_t	r_pa __asm("a0") = pa;
d231 1
a231 1
	__asm __volatile (" .word 0xf470;" : : "a" (r_pa)); /* cpushp dc,a0@@ */
@


1.1.12.3
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 1
a43 1
void TBIA_40(void);
d53 1
a53 1
void TBIS_40(vaddr_t);
d72 1
a72 1
void TBIAS_40(void);
d85 1
a85 1
void TBIAU_40(void);
d98 1
a98 1
void ICIA_40(void);
d105 1
a105 1
void ICPA_40(void);
d115 1
a115 1
void DCIA_40(void);
d122 1
a122 1
void DCIS_40(void);
d129 1
a129 1
void DCIU_40(void);
d136 1
a136 1
void DCIAS_40(paddr_t);
d146 1
a146 1
void PCIA_40(void);
d153 1
a153 1
void DCFA_40(void);
d161 1
a161 1
void ICPL_40(paddr_t);
d172 1
a172 1
void ICPP_40(paddr_t);
d183 1
a183 1
void DCPL_40(paddr_t);
d194 1
a194 1
void DCPP_40(paddr_t);
d205 1
a205 1
void DCPA_40(void);
d213 1
a213 1
void DCFL_40(paddr_t);
d224 1
a224 1
void DCFP_40(paddr_t);
@


