head	1.14;
access;
symbols
	OPENBSD_5_5:1.13.0.38
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.34
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.32
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.30
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.28
	OPENBSD_5_0:1.13.0.26
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.24
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.22
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.18
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.20
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.16
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.14
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.12
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.10
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.8
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.6
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.4
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.12.0.14
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.12
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.10
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.8
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.12
	UBC:1.11.0.2
	UBC_BASE:1.11
	OPENBSD_3_0:1.10.0.10
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.8
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.6
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.4
	OPENBSD_2_7_BASE:1.10
	SMP:1.10.0.2
	SMP_BASE:1.10
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.12
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.10
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.8
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.6
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.4
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2014.03.18.22.36.34;	author miod;	state dead;
branches;
next	1.13;

1.13
date	2005.05.01.09.55.49;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.14.01.26.35;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.06.19.53.14;	author miod;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2000.01.01.22.18.54;	author deraadt;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	97.03.21.00.36.39;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	97.01.19.13.53.11;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	97.01.19.03.58.35;	author briggs;	state Exp;
branches;
next	1.6;

1.6
date	97.01.13.11.51.13;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.05.09.22.30.10;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.04.21.22.17.49;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.19.06.18.15;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.03.21.00.07.42;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.00;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.00;	author deraadt;	state Exp;
branches;
next	;

1.10.2.1
date	2001.11.13.21.00.52;	author niklas;	state Exp;
branches;
next	1.10.2.2;

1.10.2.2
date	2002.03.28.10.34.04;	author niklas;	state Exp;
branches;
next	;

1.11.2.1
date	2002.06.11.03.36.06;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: db_interface.c,v 1.13 2005/05/01 09:55:49 miod Exp $	*/
/*	$NetBSD: db_interface.c,v 1.24 1997/02/18 22:27:32 gwr Exp $	*/

/* 
 * Mach Operating System
 * Copyright (c) 1992 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon 
 * the rights to redistribute these changes.
 */

/*
 * Interface to the "ddb" kernel debugger.
 */
#include <sys/param.h>
#include <sys/proc.h>
#include <sys/reboot.h>
#include <sys/systm.h> /* just for boothowto --eichin */

#include <uvm/uvm_extern.h>

#include <dev/cons.h>

#include <machine/trap.h>
#include <machine/db_machdep.h>

#include <ddb/db_command.h>
#include <ddb/db_var.h>
#include <ddb/db_sym.h>
#include <ddb/db_extern.h>


extern label_t	*db_recover;

int	db_active = 0;
db_regs_t	ddb_regs;

static void kdbprinttrap(int, int);

/*
 * Received keyboard interrupt sequence.
 */
void
kdb_kintr(regs)
	register db_regs_t *regs;
{
	if (db_active == 0 && (boothowto & RB_KDB)) {
		printf("\n\nkernel: keyboard interrupt\n");
		kdb_trap(-1, regs);
	}
}

/*
 * kdb_trap - field a TRACE or BPT trap
 * Return non-zero if we "handled" the trap.
 */
int
kdb_trap(type, regs)
	int	type;
	register db_regs_t *regs;
{

	switch (type) {
	case T_TRACE:		/* single-step */
	case T_BREAKPOINT:	/* breakpoint */
/*      case T_WATCHPOINT:*/
		break;
	case -1:
		break;
	default:
		if (!db_panic)
			return (0);

		kdbprinttrap(type, 0);
		if (db_recover != 0) {
			/* This will longjmp back to db_command_loop */
			db_error("Caught exception in ddb.\n");
			/*NOTREACHED*/
		}
		/*
		 * Tell caller "We did NOT handle the trap."
		 * Caller should panic or whatever.
		 */
		return (0);
	}

	/*
	 * We'd like to be on a separate debug stack here, but
	 * that's easier to do in locore.s before we get here.
	 * See sun3/locore.s:T_TRACE for stack switch code.
	 */

	ddb_regs = *regs;

	db_active++;
	cnpollc(TRUE);	/* set polling mode, unblank video */

	db_trap(type, 0);	/* where the work happens */

	cnpollc(FALSE);	/* resume interrupt mode */
	db_active--;

	*regs = ddb_regs;

	/*
	 * Indicate that single_step is for KDB.
	 * But lock out interrupts to prevent TRACE_KDB from setting the
	 * trace bit in the current SR (and trapping while exiting KDB).
	 */
	(void) splhigh();

	/*
	 * Tell caller "We HAVE handled the trap."
	 * Caller will return to locore and rte.
	 */
	return(1);
}

extern char *trap_type[];
extern int trap_types;

/*
 * Print trap reason.
 */
static void
kdbprinttrap(type, code)
	int	type, code;
{
	printf("kernel: ");
	if (type >= trap_types || type < 0)
		printf("type %d", type);
	else
		printf("%s", trap_type[type]);
	printf(" trap\n");
}

void
Debugger()
{
	__asm ("trap #15");
}

@


1.13
log
@Bring raise-only semantics to splsoft* on m68k and m88k, as done elsewhere.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.c,v 1.12 2002/03/14 01:26:35 millert Exp $	*/
@


1.12
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.c,v 1.11 2001/11/06 19:53:14 miod Exp $	*/
d128 1
a128 1
	(void) spl7();
@


1.11
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.c,v 1.10 2000/01/01 22:18:54 deraadt Exp $	*/
d56 1
a56 1
static void kdbprinttrap __P((int, int));
@


1.11.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.c,v 1.11 2001/11/06 19:53:14 miod Exp $	*/
d56 1
a56 1
static void kdbprinttrap(int, int);
@


1.10
log
@honour db_panic in kdb_trap()
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.c,v 1.9 1997/03/21 00:36:39 niklas Exp $	*/
d38 1
a38 1
#include <vm/vm.h>
@


1.10.2.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 1
a38 1
#include <uvm/uvm_extern.h>
@


1.10.2.2
log
@Merge in -current from about a week ago
@
text
@d56 1
a56 1
static void kdbprinttrap(int, int);
@


1.9
log
@NetBSD sync to sth like 970218
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.c,v 1.8 1997/01/19 13:53:11 niklas Exp $	*/
d46 1
d89 3
@


1.8
log
@From Gordon W Ross (NetBSD):
Use db_regs_t instead of struct mc68020_saved_state
@
text
@d1 2
a2 2
/*	$OpenBSD: db_interface.c,v 1.7 1997/01/19 03:58:35 briggs Exp $	*/
/*	$NetBSD: db_interface.c,v 1.23 1997/01/15 23:11:47 gwr Exp $	*/
d53 1
@


1.7
log
@asm -> __asm
@
text
@d1 2
a2 2
/*	$OpenBSD: db_interface.c,v 1.6 1997/01/13 11:51:13 niklas Exp $	*/
/*	$NetBSD: db_interface.c,v 1.22 1996/10/13 03:19:20 christos Exp $	*/
d61 1
a61 1
	register struct mc68020_saved_state *regs;
d76 1
a76 1
	register struct mc68020_saved_state *regs;
@


1.6
log
@Sync to 970110 NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: db_interface.c,v 1.4 1996/04/21 22:17:49 deraadt Exp $	*/
d153 1
a153 1
	asm ("trap #15");
@


1.5
log
@From NetBSD:
Prototype + -Wall fixes.
Clean up a few printf format strings.
Added an include for the sunos_sendsig prototype
Fix "prototype disagrees about inline" error.
@
text
@d2 1
a2 1
/*	$NetBSD: db_interface.c,v 1.20 1996/04/29 20:50:28 leo Exp $	*/
@


1.4
log
@partial sync with netbsd 960418, more to come
@
text
@d1 2
a2 2
/*	$OpenBSD: db_interface.c,v 1.2 1996/03/21 00:07:42 niklas Exp $	*/
/*	$NetBSD: db_interface.c,v 1.19 1996/03/16 18:45:44 mhitch Exp $	*/
d40 2
d45 5
d54 2
d59 1
d73 1
d138 1
@


1.3
log
@NetBSD 960317 merge
@
text
@d2 1
a2 1
/*	$NetBSD: db_interface.c,v 1.18 1996/02/22 23:23:23 gwr Exp $	*/
d138 1
a138 1
int
@


1.2
log
@From NetBSD: eliminate setjmp.h
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: db_interface.c,v 1.17 1996/02/09 21:51:39 gwr Exp $	*/
d31 1
a31 1
 * Interface to new debugger.
a42 1
short	exframesize[];
a45 1
int ddb_regs_ssp;	/* system stack pointer */
a66 1
	int fsize;
d82 4
d89 5
a93 1
	/* XXX - Should switch to kdb's own stack here. */
a96 6
	/* Get System Stack Pointer (SSP) */
	ddb_regs_ssp = (int)(&regs[1]);
	fsize = exframesize[regs->stkfmt];
	if (fsize > 0)
		ddb_regs_ssp += fsize;

a104 2
	/* Can't easily honor change in ssp.  Oh well. */

a112 8
#if 0
	if (!USERMODE(regs->sr) && (regs->sr & SR_T1) && (current_thread())) {
		current_thread()->pcb->pcb_flag |= TRACE_KDB;
	}
	if ((regs->sr & SR_T1) && (current_thread())) {
		current_thread()->pcb->flag |= TRACE_KDB;
	}
#endif
d114 4
a143 44
#if !defined(sun3) && !defined(amiga) && !defined(atari)

/*
 * Read bytes from kernel address space for debugger.
 * XXX - Each port should provide one of these...
 * (See arch/sun3/sun3/db_machdep.c for example.)
 */
void
db_read_bytes(addr, size, data)
	vm_offset_t	addr;
	register int	size;
	register char	*data;
{
	register char	*src;

	src = (char *)addr;
	while (--size >= 0)
		*data++ = *src++;
}

/*
 * Write bytes to kernel address space for debugger.
 * XXX - Each port should provide one of these...
 * (See arch/sun3/sun3/db_machdep.c for example.)
 */
void
db_write_bytes(addr, size, data)
	vm_offset_t	addr;
	register int	size;
	register char	*data;
{
	register char	*dst;

	int		oldmap0 = 0;
	int		oldmap1 = 0;
	vm_offset_t	addr1;
	extern char	etext;

	dst = (char *)addr;
	while (--size >= 0)
		*dst++ = *data++;

}
#endif	/* !defined(sun3) && !defined(amiga) && !defined(atari) */
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: db_interface.c,v 1.16 1995/06/09 20:03:05 leo Exp $	*/
a36 1
#include <setjmp.h>
d44 1
a44 1
extern jmp_buf	*db_recover;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
