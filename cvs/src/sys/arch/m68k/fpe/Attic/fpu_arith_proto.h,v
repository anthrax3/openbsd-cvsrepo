head	1.5;
access;
symbols
	OPENBSD_5_3:1.4.0.30
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.28
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.26
	OPENBSD_5_0:1.4.0.24
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.22
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.20
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.16
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.18
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.14
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.12
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.10
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.8
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.6
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.26
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.24
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.22
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2013.03.25.19.08.55;	author miod;	state dead;
branches;
next	1.4;

1.4
date	2006.01.16.22.08.26;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.34;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.05.29.21.05.14;	author niklas;	state Exp;
branches
	1.2.16.1
	1.2.26.1;
next	1.1;

1.1
date	95.12.14.04.53.03;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2002.03.28.10.34.04;	author niklas;	state Exp;
branches;
next	;

1.2.26.1
date	2002.06.11.03.36.06;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove the m68k FPU emulator; it was only used by the mac68k port which has been
lying in the Attic for quite awhile; none of the remaining m68k-based ports
support FPU-less systems; assuming my HP332 cpu board is in working condition,
give me memory boards for it to have at least 8MB and a chassis, and I'll
consider bringing this code back. But then, the 332 has an FPU socket, and
I'd rather write a new glue to use the MI softloat code (bug-free) than try
and fix the bugs in this.
@
text
@/*	$OpenBSD: fpu_arith_proto.h,v 1.4 2006/01/16 22:08:26 miod Exp $	*/
/*	$NetBSD: fpu_arith_proto.h,v 1.1 1995/11/03 04:47:00 briggs Exp $	*/

/*
 * Copyright (c) 1995  Ken Nakata
 *	All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the author nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)fpu_arith_proto.c	10/24/95
 */

#ifndef _FPU_ARITH_PROTO_H_
#define _FPU_ARITH_PROTO_H_

/*
 * Arithmetic functions - called from fpu_emul_arith().
 * Each of these may modify its inputs (f1,f2) and/or the temporary.
 * Each returns a pointer to the result and/or sets exceptions.
 */

/* fpu_add.c */
struct fpn *fpu_add(struct fpemu *fe);

/* fpu_div.c */
struct fpn *fpu_div(struct fpemu *fe);

/* fpu_getexp.c */
struct fpn *fpu_getexp(struct fpemu *fe);
struct fpn *fpu_getman(struct fpemu *fe);

/* fpu_int.c */
struct fpn *fpu_intrz(struct fpemu *fe);
struct fpn *fpu_int(struct fpemu *fe);

/* fpu_log.c */
struct fpn *fpu_log10(struct fpemu *fe);
struct fpn *fpu_log2(struct fpemu *fe);
struct fpn *fpu_logn(struct fpemu *fe);
struct fpn *fpu_lognp1(struct fpemu *fe);

/* fpu_mulc */
struct fpn *fpu_mul(struct fpemu *fe);

/* fpu_rem.c */
struct fpn *fpu_rem(struct fpemu *fe);
struct fpn *fpu_mod(struct fpemu *fe);

/* fpu_sqrt.c */
struct fpn *fpu_sqrt(struct fpemu *fe);

#endif /* _FPU_ARITH_PROTO_H_ */
@


1.4
log
@Sync m68k fpe code with NetBSD; but remove unimplemented opcodes stubs, so
that we trigger SIGILL instead of propagating false results.

Tested by martin@@ on Macintosh LCIII.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.3
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu_arith_proto.h,v 1.2 1996/05/29 21:05:14 niklas Exp $	*/
d45 1
a45 1
struct fpn * fpu_add(struct fpemu *fe);
d48 1
a48 7
struct fpn * fpu_div(struct fpemu *fe);

/* fpu_exp.c */
struct fpn * fpu_etox(struct fpemu *fe);
struct fpn * fpu_etoxm1(struct fpemu *fe);
struct fpn * fpu_tentox(struct fpemu *fe);
struct fpn * fpu_twotox(struct fpemu *fe);
d51 2
a52 8
struct fpn * fpu_getexp(struct fpemu *fe);
struct fpn * fpu_getman(struct fpemu *fe);

/* fpu_hyperb.c */
struct fpn * fpu_atanh(struct fpemu *fe);
struct fpn * fpu_cosh(struct fpemu *fe);
struct fpn * fpu_sinh(struct fpemu *fe);
struct fpn * fpu_tanh(struct fpemu *fe);
d55 2
a56 2
struct fpn * fpu_intrz(struct fpemu *fe);
struct fpn * fpu_int(struct fpemu *fe);
d59 4
a62 4
struct fpn * fpu_log10(struct fpemu *fe);
struct fpn * fpu_log2(struct fpemu *fe);
struct fpn * fpu_logn(struct fpemu *fe);
struct fpn * fpu_lognp1(struct fpemu *fe);
d65 1
a65 1
struct fpn * fpu_mul(struct fpemu *fe);
d68 2
a69 2
struct fpn * fpu_rem(struct fpemu *fe);
struct fpn * fpu_mod(struct fpemu *fe);
d72 1
a72 10
struct fpn * fpu_sqrt(struct fpemu *fe);

/* fpu_trig.c */
struct fpn * fpu_acos(struct fpemu *fe);
struct fpn * fpu_asin(struct fpemu *fe);
struct fpn * fpu_atan(struct fpemu *fe);
struct fpn * fpu_cos(struct fpemu *fe);
struct fpn * fpu_sin(struct fpemu *fe);
struct fpn * fpu_tan(struct fpemu *fe);
struct fpn * fpu_sincos(struct fpemu *fe, int regc);
@


1.2
log
@$OpenBSD$ additions
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu_arith_proto.h,v 1.1 1995/11/03 04:47:00 briggs Exp $	*/
d45 1
a45 1
struct fpn * fpu_add __P((struct fpemu *fe));
d48 1
a48 1
struct fpn * fpu_div __P((struct fpemu *fe));
d51 4
a54 4
struct fpn * fpu_etox __P((struct fpemu *fe));
struct fpn * fpu_etoxm1 __P((struct fpemu *fe));
struct fpn * fpu_tentox __P((struct fpemu *fe));
struct fpn * fpu_twotox __P((struct fpemu *fe));
d57 2
a58 2
struct fpn * fpu_getexp __P((struct fpemu *fe));
struct fpn * fpu_getman __P((struct fpemu *fe));
d61 4
a64 4
struct fpn * fpu_atanh __P((struct fpemu *fe));
struct fpn * fpu_cosh __P((struct fpemu *fe));
struct fpn * fpu_sinh __P((struct fpemu *fe));
struct fpn * fpu_tanh __P((struct fpemu *fe));
d67 2
a68 2
struct fpn * fpu_intrz __P((struct fpemu *fe));
struct fpn * fpu_int __P((struct fpemu *fe));
d71 4
a74 4
struct fpn * fpu_log10 __P((struct fpemu *fe));
struct fpn * fpu_log2 __P((struct fpemu *fe));
struct fpn * fpu_logn __P((struct fpemu *fe));
struct fpn * fpu_lognp1 __P((struct fpemu *fe));
d77 1
a77 1
struct fpn * fpu_mul __P((struct fpemu *fe));
d80 2
a81 2
struct fpn * fpu_rem __P((struct fpemu *fe));
struct fpn * fpu_mod __P((struct fpemu *fe));
d84 1
a84 1
struct fpn * fpu_sqrt __P((struct fpemu *fe));
d87 7
a93 7
struct fpn * fpu_acos __P((struct fpemu *fe));
struct fpn * fpu_asin __P((struct fpemu *fe));
struct fpn * fpu_atan __P((struct fpemu *fe));
struct fpn * fpu_cos __P((struct fpemu *fe));
struct fpn * fpu_sin __P((struct fpemu *fe));
struct fpn * fpu_tan __P((struct fpemu *fe));
struct fpn * fpu_sincos __P((struct fpemu *fe, int regc));
@


1.2.26.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu_arith_proto.h,v 1.2 1996/05/29 21:05:14 niklas Exp $	*/
d45 1
a45 1
struct fpn * fpu_add(struct fpemu *fe);
d48 1
a48 1
struct fpn * fpu_div(struct fpemu *fe);
d51 4
a54 4
struct fpn * fpu_etox(struct fpemu *fe);
struct fpn * fpu_etoxm1(struct fpemu *fe);
struct fpn * fpu_tentox(struct fpemu *fe);
struct fpn * fpu_twotox(struct fpemu *fe);
d57 2
a58 2
struct fpn * fpu_getexp(struct fpemu *fe);
struct fpn * fpu_getman(struct fpemu *fe);
d61 4
a64 4
struct fpn * fpu_atanh(struct fpemu *fe);
struct fpn * fpu_cosh(struct fpemu *fe);
struct fpn * fpu_sinh(struct fpemu *fe);
struct fpn * fpu_tanh(struct fpemu *fe);
d67 2
a68 2
struct fpn * fpu_intrz(struct fpemu *fe);
struct fpn * fpu_int(struct fpemu *fe);
d71 4
a74 4
struct fpn * fpu_log10(struct fpemu *fe);
struct fpn * fpu_log2(struct fpemu *fe);
struct fpn * fpu_logn(struct fpemu *fe);
struct fpn * fpu_lognp1(struct fpemu *fe);
d77 1
a77 1
struct fpn * fpu_mul(struct fpemu *fe);
d80 2
a81 2
struct fpn * fpu_rem(struct fpemu *fe);
struct fpn * fpu_mod(struct fpemu *fe);
d84 1
a84 1
struct fpn * fpu_sqrt(struct fpemu *fe);
d87 7
a93 7
struct fpn * fpu_acos(struct fpemu *fe);
struct fpn * fpu_asin(struct fpemu *fe);
struct fpn * fpu_atan(struct fpemu *fe);
struct fpn * fpu_cos(struct fpemu *fe);
struct fpn * fpu_sin(struct fpemu *fe);
struct fpn * fpu_tan(struct fpemu *fe);
struct fpn * fpu_sincos(struct fpemu *fe, int regc);
@


1.2.16.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d45 1
a45 1
struct fpn * fpu_add(struct fpemu *fe);
d48 1
a48 1
struct fpn * fpu_div(struct fpemu *fe);
d51 4
a54 4
struct fpn * fpu_etox(struct fpemu *fe);
struct fpn * fpu_etoxm1(struct fpemu *fe);
struct fpn * fpu_tentox(struct fpemu *fe);
struct fpn * fpu_twotox(struct fpemu *fe);
d57 2
a58 2
struct fpn * fpu_getexp(struct fpemu *fe);
struct fpn * fpu_getman(struct fpemu *fe);
d61 4
a64 4
struct fpn * fpu_atanh(struct fpemu *fe);
struct fpn * fpu_cosh(struct fpemu *fe);
struct fpn * fpu_sinh(struct fpemu *fe);
struct fpn * fpu_tanh(struct fpemu *fe);
d67 2
a68 2
struct fpn * fpu_intrz(struct fpemu *fe);
struct fpn * fpu_int(struct fpemu *fe);
d71 4
a74 4
struct fpn * fpu_log10(struct fpemu *fe);
struct fpn * fpu_log2(struct fpemu *fe);
struct fpn * fpu_logn(struct fpemu *fe);
struct fpn * fpu_lognp1(struct fpemu *fe);
d77 1
a77 1
struct fpn * fpu_mul(struct fpemu *fe);
d80 2
a81 2
struct fpn * fpu_rem(struct fpemu *fe);
struct fpn * fpu_mod(struct fpemu *fe);
d84 1
a84 1
struct fpn * fpu_sqrt(struct fpemu *fe);
d87 7
a93 7
struct fpn * fpu_acos(struct fpemu *fe);
struct fpn * fpu_asin(struct fpemu *fe);
struct fpn * fpu_atan(struct fpemu *fe);
struct fpn * fpu_cos(struct fpemu *fe);
struct fpn * fpu_sin(struct fpemu *fe);
struct fpn * fpu_tan(struct fpemu *fe);
struct fpn * fpu_sincos(struct fpemu *fe, int regc);
@


1.1
log
@from netbsd:
Still incomplete, but much more complete FPE from Ken Nakata
<kenn@@remus.rutgers.edu>.  This emulator does not yet emulate
the following functions:
        FSINH, FETOXM1, FTANH, FATAN, FASIN, FATANH, FSIN, FTAN,
        FETOX, FTWOTOX, FTENTOX, FCOSH, FACOS, FCOS, FSINCOS
It is sufficient, however, to allow programs like df, w, and newfs,
to run to completion with correct results.
Portions of this code were based on the sparc fpe and on initial
work by gwr.
@
text
@d1 1
@
