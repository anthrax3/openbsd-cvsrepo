head	1.9;
access;
symbols
	OPENBSD_5_3:1.8.0.28
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.26
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.24
	OPENBSD_5_0:1.8.0.22
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.20
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.18
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.14
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.16
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.12
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.5.0.32
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.30
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.28
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.26
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.24
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.22
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.20
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.18
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.5.0.16
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.14
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.12
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.10
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.8
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.6
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.9
date	2013.03.25.19.08.56;	author miod;	state dead;
branches;
next	1.8;

1.8
date	2006.06.11.20.43.28;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.30.21.23.23;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.16.22.08.26;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	99.01.11.05.11.33;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.01.13.11.51.05;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.05.09.22.20.45;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.02.27.11.03.20;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.14.04.53.09;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Remove the m68k FPU emulator; it was only used by the mac68k port which has been
lying in the Attic for quite awhile; none of the remaining m68k-based ports
support FPU-less systems; assuming my HP332 cpu board is in working condition,
give me memory boards for it to have at least 8MB and a chassis, and I'll
consider bringing this code back. But then, the 332 has an FPU socket, and
I'd rather write a new glue to use the MI softloat code (bug-free) than try
and fix the bugs in this.
@
text
@/*	$OpenBSD: fpu_fmovecr.c,v 1.8 2006/06/11 20:43:28 miod Exp $	*/
/*	$NetBSD: fpu_fmovecr.c,v 1.10 2003/07/15 02:43:09 lukem Exp $	*/

/*
 * Copyright (c) 1995  Ken Nakata
 *	All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the author nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)fpu_fmovecr.c	10/8/95
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <machine/frame.h>

#include <m68k/fpe/fpu_emulate.h>

/* XXX: quick consistency check */
#if (FP_1 != 0x40000)
Error you have to change this table when changing the mantissa size
#endif

static struct fpn constrom[] = {
    /* fp_class, fp_sign, fp_exp, fp_sticky, fp_mant[0] ... [2] */
    { FPC_NUM, 0, 1, 0, { 0x6487e, 0xd5110b46, 0x11a80000 } },
    { FPC_NUM, 0, -2, 0, { 0x4d104, 0xd427de7f, 0xbcc00000 } },
    { FPC_NUM, 0, 1, 0, { 0x56fc2, 0xa2c515da, 0x54d00000 } },
    { FPC_NUM, 0, 0, 0, { 0x5c551, 0xd94ae0bf, 0x85e00000 } },
    { FPC_NUM, 0, -2, 0, { 0x6f2de, 0xc549b943, 0x8ca80000 } },
    { FPC_ZERO, 0, 0, 0, { 0x0, 0x0, 0x0 } },
    { FPC_NUM, 0, -1, 0, { 0x58b90, 0xbfbe8e7b, 0xcd600000 } },
    { FPC_NUM, 0, 1, 0, { 0x49aec, 0x6eed5545, 0x60b80000 } },
    { FPC_NUM, 0, 0, 0, { 0x40000, 0x0, 0x0 } },
    { FPC_NUM, 0, 3, 0, { 0x50000, 0x0, 0x0 } },
    { FPC_NUM, 0, 6, 0, { 0x64000, 0x0, 0x0 } },
    { FPC_NUM, 0, 13, 0, { 0x4e200, 0x0, 0x0 } },
    { FPC_NUM, 0, 26, 0, { 0x5f5e1, 0x0, 0x0 } },
    { FPC_NUM, 0, 53, 0, { 0x470de, 0x4df82000, 0x0 } },
    { FPC_NUM, 0, 106, 0, { 0x4ee2d, 0x6d415b85, 0xacf00000 } },
    { FPC_NUM, 0, 212, 0, { 0x613c0, 0xfa4ffe7d, 0x36a80000 } },
    { FPC_NUM, 0, 425, 0, { 0x49dd2, 0x3e4c074c, 0x67000000 } },
    { FPC_NUM, 0, 850, 0, { 0x553f7, 0x5fdcefce, 0xf4700000 } },
    { FPC_NUM, 0, 1700, 0, { 0x718cd, 0x5753074, 0x8e380000 } },
    { FPC_NUM, 0, 3401, 0, { 0x64bb3, 0xac340ba8, 0x60b80000 } },
    { FPC_NUM, 0, 6803, 0, { 0x4f459, 0xdaee29ea, 0xef280000 } },
    { FPC_NUM, 0, 13606, 0, { 0x62302, 0x90145104, 0xbcd80000 } },
};

struct fpn *
fpu_const(fp, offset)
     struct fpn *fp;
     u_int offset;
{
    struct fpn *r;

#ifdef DEBUG
    if (fp == NULL) {
	panic("fpu_const: NULL pointer passed");
    }
#endif
    if (offset == 0) {
	r = &constrom[0];
    } else if (0xb <= offset && offset <= 0xe) {
	r = &constrom[offset - 0xb + 1];
    } else if (0x30 <= offset && offset <= 0x3f) {
	r = &constrom[offset - 0x30 + 6];
    } else {
	/* return 0.0 for anything else (incl. valid offset 0xf) */
	r = &constrom[5];
    }

    CPYFPN(fp, r);

    return fp;
}

int
fpu_emul_fmovecr(struct fpemu *fe, struct instruction *insn, int *typ)
{
    int dstreg, offset;
    u_int *fpreg;

    dstreg = (insn->is_word1 >> 7) & 0x7;
    offset = insn->is_word1 & 0x7F;
    fpreg = &(fe->fe_fpframe->fpf_regs[0]);

    (void)fpu_const(&fe->fe_f3, offset);
    (void)fpu_upd_fpsr(fe, &fe->fe_f3);
    fpu_implode(fe, &fe->fe_f3, FTYPE_EXT, &fpreg[dstreg * 3]);
#if DEBUG_FPE
    printf("  fpu_emul_fmovecr: result %08x,%08x,%08x to FP%d\n",
	   fpreg[dstreg * 3], fpreg[dstreg * 3 + 1], fpreg[dstreg * 3 + 2],
	   dstreg);
#endif
    return 0;
}
@


1.8
log
@Use bracketed include paths.
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu_fmovecr.c,v 1.7 2006/01/30 21:23:23 miod Exp $	*/
@


1.7
log
@Better siginfo field values for fpe failures.
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu_fmovecr.c,v 1.6 2006/01/16 22:08:26 miod Exp $	*/
d39 1
a39 1
#include "fpu_emulate.h"
@


1.6
log
@Sync m68k fpe code with NetBSD; but remove unimplemented opcodes stubs, so
that we trigger SIGILL instead of propagating false results.

Tested by martin@@ on Macintosh LCIII.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d101 1
a101 3
fpu_emul_fmovecr(fe, insn)
     struct fpemu *fe;
     struct instruction *insn;
@


1.5
log
@panic prints a newline for you, don't do it in the panic string
@
text
@d1 2
a2 2
/*	$OpenBSD: fpu_fmovecr.c,v 1.4 1997/01/13 11:51:05 niklas Exp $	*/
/*	$NetBSD: fpu_fmovecr.c,v 1.6 1996/10/13 03:19:13 christos Exp $	*/
d41 5
d47 23
a69 23
    /* fp_class, fp_sign, fp_exp, fp_sticky, fp_mant[0] ... [3] */
    { FPC_NUM, 0, 1, 0, { 0x6487e, 0xd5110b46, 0x11a80000, 0x0 } },
    { FPC_NUM, 0, -2, 0, { 0x4d104, 0xd427de7f, 0xbcc00000, 0x0 } },
    { FPC_NUM, 0, 1, 0, { 0x56fc2, 0xa2c515da, 0x54d00000, 0x0 } },
    { FPC_NUM, 0, 0, 0, { 0x5c551, 0xd94ae0bf, 0x85e00000, 0x0 } },
    { FPC_NUM, 0, -2, 0, { 0x6f2de, 0xc549b943, 0x8ca80000, 0x0 } },
    { FPC_ZERO, 0, 0, 0, { 0x0, 0x0, 0x0, 0x0 } },
    { FPC_NUM, 0, -1, 0, { 0x58b90, 0xbfbe8e7b, 0xcd600000, 0x0 } },
    { FPC_NUM, 0, 1, 0, { 0x49aec, 0x6eed5545, 0x60b80000, 0x0 } },
    { FPC_NUM, 0, 0, 0, { 0x40000, 0x0, 0x0, 0x0 } },
    { FPC_NUM, 0, 3, 0, { 0x50000, 0x0, 0x0, 0x0 } },
    { FPC_NUM, 0, 6, 0, { 0x64000, 0x0, 0x0, 0x0 } },
    { FPC_NUM, 0, 13, 0, { 0x4e200, 0x0, 0x0, 0x0 } },
    { FPC_NUM, 0, 26, 0, { 0x5f5e1, 0x0, 0x0, 0x0 } },
    { FPC_NUM, 0, 53, 0, { 0x470de, 0x4df82000, 0x0, 0x0 } },
    { FPC_NUM, 0, 106, 0, { 0x4ee2d, 0x6d415b85, 0xacf00000, 0x0 } },
    { FPC_NUM, 0, 212, 0, { 0x613c0, 0xfa4ffe7d, 0x36a80000, 0x0 } },
    { FPC_NUM, 0, 425, 0, { 0x49dd2, 0x3e4c074c, 0x67000000, 0x0 } },
    { FPC_NUM, 0, 850, 0, { 0x553f7, 0x5fdcefce, 0xf4700000, 0x0 } },
    { FPC_NUM, 0, 1700, 0, { 0x718cd, 0x5753074, 0x8e380000, 0x0 } },
    { FPC_NUM, 0, 3401, 0, { 0x64bb3, 0xac340ba8, 0x60b80000, 0x0 } },
    { FPC_NUM, 0, 6803, 0, { 0x4f459, 0xdaee29ea, 0xef280000, 0x0 } },
    { FPC_NUM, 0, 13606, 0, { 0x62302, 0x90145104, 0xbcd80000, 0x0 } },
d115 5
a119 5
    if (fpu_debug_level & DL_RESULT) {
	printf("  fpu_emul_fmovecr: result %08x,%08x,%08x to FP%d\n",
	       fpreg[dstreg * 3], fpreg[dstreg * 3 + 1], fpreg[dstreg * 3 + 2],
	       dstreg);
    }
@


1.4
log
@Sync to 970110 NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu_fmovecr.c,v 1.2 1996/02/27 11:03:20 niklas Exp $	*/
d76 1
a76 1
	panic("fpu_const: NULL pointer passed\n");
@


1.3
log
@From NetBSD:
Update for -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-uninitialized.
Bring back Step9 and fix an oversight from Ken Nakata <kenn@@remus.rutgers.edu>
@
text
@d2 1
a2 1
/*	$NetBSD: fpu_fmovecr.c,v 1.4 1996/04/30 11:52:22 briggs Exp $	*/
@


1.2
log
@From NetBSD: update to 960217 sources
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: fpu_fmovecr.c,v 1.3 1996/02/04 02:17:42 briggs Exp $	*/
d36 1
d43 22
a64 22
    { FPC_NUM, 0, 1, 0, 0x6487e, 0xd5110b46, 0x11a80000, 0x0 },
    { FPC_NUM, 0, -2, 0, 0x4d104, 0xd427de7f, 0xbcc00000, 0x0 },
    { FPC_NUM, 0, 1, 0, 0x56fc2, 0xa2c515da, 0x54d00000, 0x0 },
    { FPC_NUM, 0, 0, 0, 0x5c551, 0xd94ae0bf, 0x85e00000, 0x0 },
    { FPC_NUM, 0, -2, 0, 0x6f2de, 0xc549b943, 0x8ca80000, 0x0 },
    { FPC_ZERO, 0, 0, 0, 0x0, 0x0, 0x0, 0x0 },
    { FPC_NUM, 0, -1, 0, 0x58b90, 0xbfbe8e7b, 0xcd600000, 0x0 },
    { FPC_NUM, 0, 1, 0, 0x49aec, 0x6eed5545, 0x60b80000, 0x0 },
    { FPC_NUM, 0, 0, 0, 0x40000, 0x0, 0x0, 0x0 },
    { FPC_NUM, 0, 3, 0, 0x50000, 0x0, 0x0, 0x0 },
    { FPC_NUM, 0, 6, 0, 0x64000, 0x0, 0x0, 0x0 },
    { FPC_NUM, 0, 13, 0, 0x4e200, 0x0, 0x0, 0x0 },
    { FPC_NUM, 0, 26, 0, 0x5f5e1, 0x0, 0x0, 0x0 },
    { FPC_NUM, 0, 53, 0, 0x470de, 0x4df82000, 0x0, 0x0 },
    { FPC_NUM, 0, 106, 0, 0x4ee2d, 0x6d415b85, 0xacf00000, 0x0 },
    { FPC_NUM, 0, 212, 0, 0x613c0, 0xfa4ffe7d, 0x36a80000, 0x0 },
    { FPC_NUM, 0, 425, 0, 0x49dd2, 0x3e4c074c, 0x67000000, 0x0 },
    { FPC_NUM, 0, 850, 0, 0x553f7, 0x5fdcefce, 0xf4700000, 0x0 },
    { FPC_NUM, 0, 1700, 0, 0x718cd, 0x5753074, 0x8e380000, 0x0 },
    { FPC_NUM, 0, 3401, 0, 0x64bb3, 0xac340ba8, 0x60b80000, 0x0 },
    { FPC_NUM, 0, 6803, 0, 0x4f459, 0xdaee29ea, 0xef280000, 0x0 },
    { FPC_NUM, 0, 13606, 0, 0x62302, 0x90145104, 0xbcd80000, 0x0 },
a72 1
    int i;
d100 1
a100 1
    int dstreg, offset, sig;
@


1.1
log
@from netbsd:
Still incomplete, but much more complete FPE from Ken Nakata
<kenn@@remus.rutgers.edu>.  This emulator does not yet emulate
the following functions:
        FSINH, FETOXM1, FTANH, FATAN, FASIN, FATANH, FSIN, FTAN,
        FETOX, FTWOTOX, FTENTOX, FCOSH, FACOS, FCOS, FSINCOS
It is sufficient, however, to allow programs like df, w, and newfs,
to run to completion with correct results.
Portions of this code were based on the sparc fpe and on initial
work by gwr.
@
text
@d1 2
a2 1
/*	$NetBSD: fpu_fmovecr.c,v 1.2 1995/11/05 00:35:23 briggs Exp $	*/
d35 1
a35 1
#include <sys/types.h>
a36 2

#include <stddef.h>
@
