head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.2
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.9.0.4
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.4.0.20
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.18
	OPENBSD_5_0:1.4.0.16
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.14
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.12
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.8
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.10
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.6
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.3.0.4
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3;
locks; strict;
comment	@# @;


1.11
date	2016.11.28.16.42.45;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	vJRS4MFvsr5luWbc;

1.10
date	2016.07.30.03.25.48;	author guenther;	state Exp;
branches;
next	1.9;
commitid	HVbAtwruDlJazNH2;

1.9
date	2015.10.05.04.38.27;	author miod;	state Exp;
branches;
next	1.8;
commitid	KLcKyyhZNZUdbqsy;

1.8
date	2015.06.14.19.08.59;	author miod;	state Exp;
branches;
next	1.7;
commitid	25744nWduMnlhjPv;

1.7
date	2014.07.13.21.18.44;	author jasper;	state Exp;
branches;
next	1.6;
commitid	Y3LcLObEiHDZvy27;

1.6
date	2012.09.02.16.21.05;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2012.08.21.14.46.19;	author pascal;	state Exp;
branches;
next	1.4;

1.4
date	2007.11.25.18.25.32;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.08.20.03.32;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.08.18.05.30;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.08.17.46.56;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@need ashrdi3
@
text
@#	$OpenBSD: Makefile,v 1.10 2016/07/30 03:25:48 guenther Exp $

MAN=	xxboot.8

.if ${MACHINE} == "landisk"
PROG=	xxboot
SRCS=	pbr.S xxboot.S boot1.c
LDFLAGS=-nostdlib -Ttext 0x8c201000 -N -x -Bstatic -e start -nopie -znorelro

INSTALL_STRIP=

XXBOOT_SECTORS?= 15
XXBOOT_MAXSIZE?= (( ${XXBOOT_SECTORS} * 512 ))

CPPFLAGS+=-D_STANDALONE
CPPFLAGS+=-nostdinc -I${.OBJDIR} -I${.CURDIR}/.. -I${.CURDIR}/../../../..
CPPFLAGS+=-DLOADADDRESS=0x8ff00000 -DXXBOOT_SECTORS=${XXBOOT_SECTORS}
CFLAGS+=-m4-nofpu -fno-pie
AFLAGS+= -fno-pie

OBJCOPY?=objcopy

S=	${.CURDIR}/../../../..
SAREL=
.include "${S}/lib/libsa/Makefile.inc"
DPADD+= $(SALIB)
LDADD+= $(SALIB)

.PATH:	${S}/lib/libkern/arch/sh ${S}/lib/libkern
SRCS+=	strlen.c
SRCS+=	ashldi3.c ashrdi3.c sdivsi3.S udivsi3.S

${PROG}: ${OBJS} ${DPADD}
	${LD} -o ${PROG}.sym ${LDFLAGS} \
		-Map ${PROG}.map -cref ${OBJS} ${LDADD}
	${OBJCOPY} -O binary ${PROG}.sym ${PROG}
	@@ sz=$$(ls -ln ${PROG} | tr -s ' ' | cut -d' ' -f5); \
	if [ "$$sz" -gt "$$${XXBOOT_MAXSIZE}" ]; then \
		echo "### ${PROG} size $$sz is larger than ${XXBOOT_MAXSIZE}" >&2 \
		rm -f ${PROG}; \
		! :; \
	else \
		: pad to sector boundary; \
		pad=$$(( 512 - ( $$sz & 511 ) )); \
		[ $$pad = 512 ] || \
		    dd if=/dev/zero bs=1 count=$$pad >>${PROG} 2>/dev/null; \
		echo "${PROG} size $$sz, $$((${XXBOOT_MAXSIZE} - $$sz)) free"; \
	fi
.else
NOPROG=
.endif


.include <bsd.prog.mk>
@


1.10
log
@Prep for relro: make sure it's off for any non-PIE stand/ program

ok millert@@ kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2015/10/05 04:38:27 miod Exp $
d31 1
a31 1
SRCS+=	ashrdi3.c sdivsi3.S udivsi3.S
@


1.9
log
@No need to create {sd,wd}boot links to xxboot anymore.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2015/06/14 19:08:59 miod Exp $
d8 1
a8 1
LDFLAGS=-nostdlib -Ttext 0x8c201000 -N -x -Bstatic -e start -nopie
@


1.8
log
@Build required bits from libkern rather than importing them from libgcc.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2014/07/13 21:18:44 jasper Exp $
a6 2
LINKS=	${BINDIR}/xxboot ${BINDIR}/sdboot
LINKS+=	${BINDIR}/xxboot ${BINDIR}/wdboot
@


1.7
log
@fix even more trailing tabs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2012/09/02 16:21:05 deraadt Exp $
d21 1
d33 1
a33 3

LIBGCC!=${CC} -print-libgcc-file-name
LDADD+= $(LIBGCC)
@


1.6
log
@Cope with pie-by-default, if it ever happens; ok pascal
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2012/08/21 14:46:19 pascal Exp $
d7 2
a8 2
LINKS=	${BINDIR}/xxboot ${BINDIR}/sdboot 
LINKS+=	${BINDIR}/xxboot ${BINDIR}/wdboot 
@


1.5
log
@Add NOPIE= bits for sys/arch/*/stand to ensure that bootblocks will always be
built with -fno-pie.  This gets the hairiest part of PIE out of the way ...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2007/11/25 18:25:32 deraadt Exp $
d10 1
a10 2
LDFLAGS=-nostdlib -Ttext 0x8c201000 -N -x -Bstatic -e start
NOPIE=
d20 1
a20 1
CFLAGS+=-m4-nofpu
@


1.4
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2006/11/08 20:03:32 drahn Exp $
d11 1
@


1.3
log
@OBJCOPY should default to objcopy.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2006/11/08 18:05:30 deraadt Exp $
d30 2
a31 4
KERN_AS?=	library
.include "${S}/lib/libkern/Makefile.inc"
DPADD+= $(KERNLIB)
LDADD+= $(KERNLIB)
@


1.2
log
@fix LINKS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2006/11/08 17:46:56 deraadt Exp $
d21 2
@


1.1
log
@this is actually a primary bootblock (xxboot) not a secondary bootblock
(bootxx) thus disklabel -B will automatically pick it up now; ok drahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2006/10/11 17:19:06 drahn Exp $
d7 2
a8 1
LINKS=	sdboot wdboot
@

