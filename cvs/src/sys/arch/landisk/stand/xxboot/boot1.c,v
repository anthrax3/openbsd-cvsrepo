head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.26
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.22
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.18
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.20
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.12
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.16
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.14
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.10
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.8
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.6
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.4
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2011.04.10.12.21.07;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2011.03.13.00.13.53;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2010.12.06.22.51.46;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2010.12.06.22.11.01;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2010.12.06.18.44.49;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.26.05.42.11;	author ray;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.08.17.46.56;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Uninitialized local variable.
@
text
@/*	$OpenBSD: boot1.c,v 1.6 2011/03/13 00:13:53 deraadt Exp $	*/
/*	$NetBSD: boot1.c,v 1.1 2006/09/01 21:26:19 uwe Exp $	*/

/*-
 * Copyright (c) 2003 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by David Laight.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <lib/libsa/stand.h>
#include <lib/libsa/ufs.h>

#include <sys/disklabel.h>

#define	XSTR(x)	#x
#define	STR(x)	XSTR(x)

static uint32_t bios_sector;

const char *boot1(uint32_t *);
void putstr(const char *str);
int raise(int sig);
int blkdevstrategy(void *, int, daddr32_t, size_t, void *, size_t *);
int blkdevopen(struct open_file *, ...);
int blkdevclose(struct open_file *);


extern struct disklabel ptn_disklabel;

struct fs_ops file_system[] = {
	{ ufs_open, ufs_close, ufs_read, ufs_write, ufs_seek,
	  ufs_stat, ufs_readdir },
};
int nfsys = nitems(file_system);

struct devsw devsw[] = {
	{ "dk", blkdevstrategy, blkdevopen, blkdevclose, noioctl },
};
int     ndevs = nitems(devsw);

const char *
boot1(uint32_t *sector)
{
        struct stat sb;
	int fd = -1;

	bios_sector = *sector;

	putstr("\r\nOpenBSD/" MACHINE " Primary Bootstrap\r\n");

	do {
		/*
		 * Nothing at the start of the MBR partition, fallback on
		 * partition 'a' from the disklabel in this MBR partition.
		 */
		if (ptn_disklabel.d_magic != DISKMAGIC)
			break;
		if (ptn_disklabel.d_magic2 != DISKMAGIC)
			break;
		if (ptn_disklabel.d_partitions[0].p_fstype == FS_UNUSED)
			break;

		bios_sector = ptn_disklabel.d_partitions[0].p_offset;
		*sector = bios_sector;
		fd = open("boot", 0);
	} while (0);

	if (fd == -1 || fstat(fd, &sb) == -1)
		return "Can't open /boot.\r\n";

#if 0
	if (sb.st_size > SECONDARY_MAX_LOAD)
		return "/boot too large.\r\n";
#endif

	if (read(fd, (void *)LOADADDRESS, sb.st_size) != sb.st_size)
		return "/boot load failed.\r\n";

	if (*(uint32_t *)(LOADADDRESS + 4) != 0x20041110)
		return "Invalid /boot file format.\r\n";

	return 0;
}

int
blkdevopen(struct open_file *f, ...)
{
	return 0;
}
int
blkdevclose(struct open_file *f)
{
	return 0;
}

int
blkdevstrategy(void *devdata, int flag, daddr32_t dblk, size_t size, void *buf, size_t *rsize)
{

	if (flag != F_READ)
		return EROFS;

	if (size & (DEV_BSIZE - 1))
		return EINVAL;

	if (rsize)
		*rsize = size;

	if (size != 0 && readsects(0x40, bios_sector + dblk, buf,
				   size / DEV_BSIZE) != 0)
		return EIO;

	return 0;
}

/* ARGUSED */
int
raise(int sig)
{

	return 0;
}

void
twiddle(void)
{
	static int pos;

	putchar("|/-\\"[pos++ & 3]);
	putchar('\b');
}

int
devopen(struct open_file *f, const char *fname, char **file)
{
	*file = (char *)fname;
	f->f_flags |= F_NODEV;
	f->f_dev = &devsw[0];
	return (0);
}
@


1.6
log
@Change daddr_t to daddr32_t.  The bootblocks on our architectures only
do 32-bit block spanning.  If later on we get some that can/should do
64-bit, that can be done now using daddr64_t (but of course, we are taking
this step to finalize the daddr_t 64-bit conversion).
ok miod krw
@
text
@d1 1
a1 1
/*	$OpenBSD: boot1.c,v 1.5 2010/12/06 22:51:46 jasper Exp $	*/
d69 1
a69 1
	int fd;
@


1.5
log
@- properly remove NENTS now after fixing the fallout.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: boot1.c,v 1.4 2010/12/06 22:11:01 jasper Exp $	*/
d47 1
a47 1
int blkdevstrategy(void *, int, daddr_t, size_t, void *, size_t *);
d121 1
a121 1
blkdevstrategy(void *devdata, int flag, daddr_t dblk, size_t size, void *buf, size_t *rsize)
@


1.4
log
@- partially revert previous NENTS removal for arches which got busted.
@
text
@d1 1
a1 1
/*	$OpenBSD: boot1.c,v 1.3 2010/12/06 18:44:49 jasper Exp $	*/
d58 1
a58 1
int nfsys = NENTS(file_system);
d63 1
a63 1
int     ndevs = NENTS(devsw);
@


1.3
log
@- drop NENTS(), which was yet another copy of nitems().
no binary change


ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: boot1.c,v 1.2 2008/06/26 05:42:11 ray Exp $	*/
d58 1
a58 1
int nfsys = nitems(file_system);
d63 1
a63 1
int     ndevs = nitems(devsw);
@


1.2
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: boot1.c,v 1.1 2006/11/08 17:46:56 deraadt Exp $	*/
d58 1
a58 1
int nfsys = NENTS(file_system);
d63 1
a63 1
int     ndevs = NENTS(devsw);
@


1.1
log
@this is actually a primary bootblock (xxboot) not a secondary bootblock
(bootxx) thus disklabel -B will automatically pick it up now; ok drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: boot1.c,v 1.2 2006/10/11 17:18:10 drahn Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@

