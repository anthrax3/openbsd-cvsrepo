head	1.12;
access;
symbols
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.6
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.10
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.12
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.4
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.8
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.8
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.6
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.4
	OPENBSD_5_0:1.10.0.2
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.9.0.8
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.6
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.8.0.4
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.2
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	LANDISK_20061006:1.1.1.1
	miod:1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.06.14.12.48.49;	author dlg;	state Exp;
branches;
next	1.11;
commitid	6TdLVH9P3criH6gN;

1.11
date	2013.05.17.19.38.52;	author kettenis;	state Exp;
branches;
next	1.10;

1.10
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.9;

1.9
date	2009.03.15.19.40.40;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.26.05.42.11;	author ray;	state Exp;
branches;
next	1.7;

1.7
date	2007.11.30.08.19.40;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2007.05.16.19.38.21;	author thib;	state Exp;
branches;
next	1.5;

1.5
date	2006.11.21.21.04.46;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2006.11.21.21.01.51;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.21.21.01.35;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.20.17.54.05;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.06.21.16.15;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.10.06.21.16.15;	author miod;	state Exp;
branches;
next	;


desc
@@


1.12
log
@provide splraise on landisk

splraise is a wrapper around the sh _cpu_intr_raise(), and all the
splfoo macros are now defined as calling splraise(IPL_FOO).

tested on my landisk box
@
text
@/*	$OpenBSD: intr.h,v 1.11 2013/05/17 19:38:52 kettenis Exp $	*/
/*	$NetBSD: intr.h,v 1.1 2006/09/01 21:26:18 uwe Exp $	*/

/*-
 * Copyright (c) 2002 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_INTR_H_
#define _MACHINE_INTR_H_

#include <sh/intr.h>

/* Number of interrupt source */
#define _INTR_N		16

/* Interrupt priority levels */
#define	IPL_BIO		10	/* block I/O */
#define	IPL_AUDIO	IPL_BIO
#define	IPL_NET		11	/* network */
#define	IPL_TTY		12	/* terminal */
#define	IPL_VM		12
#define	IPL_CLOCK	14	/* clock */
#define	IPL_SCHED	14	/* scheduling */
#define	IPL_HIGH	15	/* everything */

#define	IPL_MPSAFE	0	/* no "mpsafe" interrupts */

#define	splraise(_ipl)		_cpu_intr_raise((_ipl) << 4)
#define	splsoftclock()		splraise(IPL_SOFTCLOCK)
#define	splsoftnet()		splraise(IPL_SOFTNET)
#define	splsoftserial()		splraise(IPL_SOFTSERIAL)
#define	splbio()		splraise(IPL_BIO)
#define	splnet()		splraise(IPL_NET)
#define	spltty()		splraise(IPL_TTY)
#define	splvm()			splraise(IPL_VM)
#define	splaudio()		splraise(IPL_AUDIO)
#define	splclock()		splraise(IPL_CLOCK)
#define	splstatclock()		splclock()
#define	splsched()		splraise(IPL_SCHED)
#define	splhigh()		_cpu_intr_suspend()
#define	spllock()		splhigh()

#define	spl0()			_cpu_intr_resume(IPL_NONE << 4)
#define	splx(x)			_cpu_intr_resume(x)

#ifdef DIAGNOSTIC
/*
 * Although this function is implemented in MI code, it must be in this MD
 * header because we don't want this header to include MI includes.
 */
void splassert_fail(int, int, const char *);
extern int splassert_ctl;
void splassert_check(int, const char *);
#define	splassert(__wantipl) \
do {									\
	if (splassert_ctl > 0) {					\
		splassert_check(__wantipl, __func__);			\
	}								\
} while (0)
#define splsoftassert(__wantipl) splassert(__wantipl)
#else
#define	splassert(wantipl)	do { /* nothing yet */ } while (0)
#define	splsoftassert(wantipl)	do { /* nothing yet */ } while (0)
#endif

void intr_init(void);
void *extintr_establish(int, int, int (*)(void *), void *, const char *);
void extintr_disestablish(void *ih);
void extintr_enable(void *ih);
void extintr_disable(void *ih);
void extintr_disable_by_num(int irq);

#endif /* !_MACHINE_INTR_H_ */
@


1.11
log
@Add a dummy IPL_MPSAFE definition.

ok miod@@, mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.10 2011/03/23 16:54:35 pirofti Exp $	*/
d50 10
a59 9
#define	splsoftclock()		_cpu_intr_raise(IPL_SOFTCLOCK << 4)
#define	splsoftnet()		_cpu_intr_raise(IPL_SOFTNET << 4)
#define	splsoftserial()		_cpu_intr_raise(IPL_SOFTSERIAL << 4)
#define	splbio()		_cpu_intr_raise(IPL_BIO << 4)
#define	splnet()		_cpu_intr_raise(IPL_NET << 4)
#define	spltty()		_cpu_intr_raise(IPL_TTY << 4)
#define	splvm()			_cpu_intr_raise(IPL_VM << 4)
#define	splaudio()		_cpu_intr_raise(IPL_AUDIO << 4)
#define	splclock()		_cpu_intr_raise(IPL_CLOCK << 4)
d61 1
a61 1
#define	splsched()		_cpu_intr_raise(IPL_SCHED << 4)
@


1.10
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.9 2009/03/15 19:40:40 miod Exp $	*/
d47 2
@


1.9
log
@Introduce splsoftassert(), similar to splassert() but for soft interrupt
levels. This will allow for platforms where soft interrupt levels do not
map to real hardware interrupt levels to have soft ipl values overlapping
hard ipl values without breaking spl asserts.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.8 2008/06/26 05:42:11 ray Exp $	*/
d30 2
a31 2
#ifndef _LANDISK_INTR_H_
#define _LANDISK_INTR_H_
d92 1
a92 1
#endif /* !_LANDISK_INTR_H_ */
@


1.8
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.7 2007/11/30 08:19:40 miod Exp $	*/
d79 1
d82 1
@


1.7
log
@Define IPL_VM on platforms which lack it.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.6 2007/05/16 19:38:21 thib Exp $	*/
a15 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.6
log
@forgot this one in my previous commit.

splassert_ctl defaults to 1 now, so dont wrap the checks for
splassert_ctl > 0 in __predict_false().

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.5 2006/11/21 21:04:46 miod Exp $	*/
d47 1
d50 1
a50 1
#define	IPL_AUDIO	13	/* serial */
d61 1
a61 1
#define	splvm()			spltty()
@


1.5
log
@Define IPL_SCHED.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.4 2006/11/21 21:01:51 miod Exp $	*/
d81 1
a81 1
	if (__predict_false(splassert_ctl > 0)) {			\
@


1.4
log
@splassert support.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.3 2006/11/21 21:01:35 miod Exp $	*/
d51 1
d64 1
a64 1
#define	splsched()		splclock()
@


1.3
log
@Don't bother using _cpu_intr_raise() for splhigh(), use _cpu_intr_suspend().
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.2 2006/11/20 17:54:05 drahn Exp $	*/
d70 15
d86 1
@


1.2
log
@goodbye splserial, hello splaudio.
@
text
@d1 1
a1 1
/*	$OpenBSD: intr.h,v 1.1.1.1 2006/10/06 21:16:15 miod Exp $	*/
d64 1
a64 1
#define	splhigh()		_cpu_intr_raise(IPL_HIGH << 4)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d49 1
a49 1
#define	IPL_SERIAL	13	/* serial */
d60 1
a60 1
#define	splserial()		_cpu_intr_raise(IPL_SERIAL << 4)
@


1.1.1.1
log
@Incomplete bits for an OpenBSD/landisk port to the I/O DATA USL-5P appliances,
mickey@@ has the other part.
@
text
@@
