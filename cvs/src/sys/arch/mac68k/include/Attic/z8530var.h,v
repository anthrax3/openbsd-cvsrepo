head	1.10;
access;
symbols
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.8
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.6
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.7.0.18
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.16
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.14
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.12
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.10
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.8
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.6
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.22
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.20
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_9_BASE:1.4
	NIKLAS_UNDEAD:1.4.0.16
	OPENBSD_2_8:1.4.0.14
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.12
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.10
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.8
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.6
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.4
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.10
date	2012.06.20.18.23.52;	author matthew;	state dead;
branches;
next	1.9;

1.9
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.8;

1.8
date	2009.03.15.20.40.25;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.25.18.32.10;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.27.49;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.35;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.11.30.06.10.38;	author gene;	state Exp;
branches
	1.4.10.1
	1.4.22.1;
next	1.3;

1.3
date	96.06.08.16.21.15;	author briggs;	state Exp;
branches;
next	1.2;

1.2
date	96.05.26.18.36.11;	author briggs;	state Exp;
branches;
next	1.1;

1.1
date	96.05.26.18.14.17;	author briggs;	state Exp;
branches;
next	;

1.4.10.1
date	2002.03.28.10.34.05;	author niklas;	state Exp;
branches;
next	1.4.10.2;

1.4.10.2
date	2003.06.07.11.13.14;	author ho;	state Exp;
branches;
next	;

1.4.22.1
date	2002.06.11.03.36.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@RIP mac68k.  No one loves you anymore.
@
text
@/*	$OpenBSD: z8530var.h,v 1.9 2011/03/23 16:54:36 pirofti Exp $	*/
/*	$NetBSD: z8530var.h,v 1.2 1996/06/07 10:27:19 briggs Exp $	*/

/*
 * Copyright (c) 1994 Gordon W. Ross
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)zsvar.h	8.1 (Berkeley) 6/11/93
 */

#ifndef _MACHINE_Z8530VAR_H_
#define _MACHINE_Z8530VAR_H_

#ifdef _KERNEL
#include <mac68k/dev/z8530sc.h>

/*
 * Clock source info structure, added here so xzs_chanstate works
 */
struct zsclksrc {
	long	clk;	/* clock rate, in MHz, present on signal line */
	int	flags;	/* Specifies how this source can be used
				(RTxC divided, RTxC BRG, PCLK BRG, TRxC divided)				and also if the source is "external" and if it
				is changeable (by an ioctl ex.). The
				source usage flags are used by the tty
				child. The other bits tell zsloadchannelregs
				if it should call an md signal source
				changing routine. ZSC_VARIABLE says if
				an ioctl should be able to change the
				clock rate.*/
};
#define ZSC_PCLK	0x01
#define	ZSC_RTXBRG	0x02
#define ZSC_RTXDIV	0x04
#define ZSC_TRXDIV	0x08
#define ZSC_VARIABLE	0x40
#define ZSC_EXTERN	0x80

#define	ZSC_BRG		0x03
#define	ZSC_DIV		0x0c

/*
 * These are the machine-dependent (extended) variants of
 * struct zs_chanstate and struct zsc_softc
 */
struct xzs_chanstate {
	/* machine-independent part (First!)*/
	struct zs_chanstate xzs_cs;
	/* machine-dependent extensions */
	int	cs_hwflags;
	int	cs_chip;		/* type of chip */
	/* Clock source info... */
	int 	cs_clock_count;		/* how many signal sources available */
	struct zsclksrc cs_clocks[4];	/* info on available signal sources */
	long	cs_cclk_flag;		/* flag for current clock source */
	long    cs_pclk_flag;		/* flag for pending clock source */
	int	cs_csource;		/* current source # */
	int	cs_psource;		/* pending source # */
};

struct zsc_softc {
	struct	device zsc_dev;		/* required first: base device */
	struct	zs_chanstate *zsc_cs[2];	/* channel A and B soft state */
	/* Machine-dependent part follows... */
	struct xzs_chanstate xzsc_xcs_store[2];
	void	*zsc_softih;
};

/*
 * Functions to read and write individual registers in a channel.
 * The ZS chip requires a 1.6 uSec. recovery time between accesses,
 * and the Sun3 hardware does NOT take care of this for you.
 * MacII hardware DOES dake care of the delay for us.
 */

u_char zs_read_reg(struct zs_chanstate *cs, u_char reg);
u_char zs_read_csr(struct zs_chanstate *cs);
u_char zs_read_data(struct zs_chanstate *cs);

void  zs_write_reg(struct zs_chanstate *cs, u_char reg, u_char val);
void  zs_write_csr(struct zs_chanstate *cs, u_char val);
void  zs_write_data(struct zs_chanstate *cs, u_char val);
#endif	/* _KERNEL */

/* XXX - Could define splzs() here instead of in psl.h */

/* Hook for MD ioctl support */
int	zsmdioctl (struct zs_chanstate *cs, u_long cmd, caddr_t data);
/* XXX - This is a bit gross... */
#define ZS_MD_IOCTL zsmdioctl(cs, cmd, data)

/* Callback for "external" clock sources */
void zsmd_setclock(struct zs_chanstate *cs);
#define ZS_MD_SETCLK(cs) zsmd_setclock(cs)
#endif	/* _KERNEL */
@


1.9
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.8 2009/03/15 20:40:25 miod Exp $	*/
@


1.8
log
@Generic softinterrupt code for m68k platforms, now copied from m88k.
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.7 2004/11/25 18:32:10 miod Exp $	*/
d45 2
a46 2
#ifndef _MAC68K_Z8530VAR_H_
#define _MAC68K_Z8530VAR_H_
@


1.7
log
@Move towards a more flexible and generic interrupt system, as well as better
zs behaviour.

From NetBSD; integration work by Martin Reindl
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.6 2003/06/02 23:27:49 millert Exp $	*/
d100 1
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.5 2002/03/14 01:26:35 millert Exp $	*/
d49 52
a100 2
#include <arch/mac68k/dev/z8530sc.h>
#include <arch/mac68k/dev/z8530tty.h>
d118 1
a118 16
/*
 * abort detection on console will now timeout after iterating on a loop
 * the following # of times. Cheep hack. Also, abort detection is turned
 * off after a timeout (i.e. maybe there's not a terminal hooked up).
 */
#define ZSABORT_DELAY 3000000

/*
 * How to request a "soft" interrupt.
 * This could be a macro if you like.
 */
#ifdef _KERNEL
void zsc_req_softint(struct zsc_softc *zsc);

/* Handle user request to enter kernel debugger. */
void	zs_abort(struct zstty_softc *zst);
d121 3
a123 6
int	zsmdioctl(struct tty *tp, u_long com, caddr_t data, int flag,
	    struct proc *p);

/* Clean up at end of tty attach */
void zstty_mdattach(struct zsc_softc *zsc, struct zstty_softc *zst,
	    struct zs_chanstate *cs, struct tty *tp);  
d127 1
a128 23

/*
 * Some warts needed by z8530tty.c -
 */
#define	ZSTTY_MAJOR 	12		/* XXX */
#undef	ZSTTY_DEF_CFLAG
#define	ZSTTY_DEF_CFLAG 	(CREAD | CS8 | HUPCL)

#define	ZSTTY_RAW_CFLAG (CS8 | CREAD | HUPCL )
#define	ZSTTY_RAW_IFLAG (IXANY | IMAXBEL)
#define	ZSTTY_RAW_LFLAG (ECHOE|ECHOKE|ECHOCTL)
#define	ZSTTY_RAW_OFLAG (ONLCR | OXTABS)
/* Above taken from looking at a tty after a stty raw */

/* Booter flags interface */
#define ZSMAC_RAW	0x01
#define ZSMAC_LOCALTALK	0x02

#ifdef _KERNEL
#define zsprintf printf
#endif	/* _KERNEL */

#endif	/* _MAC68K_Z8530VAR_H_ */
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.4 1997/11/30 06:10:38 gene Exp $	*/
d26 1
a26 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@Add multiple inclusion protection, clean up comments, and wrap with _KERNEL
where appropriate.  Note that this buys us notable speed boosts on a machine
as slow as the mac68k.
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.3 1996/06/08 16:21:15 briggs Exp $	*/
d63 7
a69 7
u_char zs_read_reg __P((struct zs_chanstate *cs, u_char reg));
u_char zs_read_csr __P((struct zs_chanstate *cs));
u_char zs_read_data __P((struct zs_chanstate *cs));

void  zs_write_reg __P((struct zs_chanstate *cs, u_char reg, u_char val));
void  zs_write_csr __P((struct zs_chanstate *cs, u_char val));
void  zs_write_data __P((struct zs_chanstate *cs, u_char val));
d84 1
a84 1
void zsc_req_softint __P((struct zsc_softc *zsc));
d87 1
a87 1
void	zs_abort __P((struct zstty_softc *zst));
d90 2
a91 2
int	zsmdioctl __P((struct tty *tp, u_long com, caddr_t data, int flag,
	    struct proc *p));
d94 2
a95 2
void zstty_mdattach __P((struct zsc_softc *zsc, struct zstty_softc *zst,
	    struct zs_chanstate *cs, struct tty *tp));  
d98 1
a98 1
void zsmd_setclock  __P((struct zs_chanstate *cs));
@


1.4.22.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.4 1997/11/30 06:10:38 gene Exp $	*/
d63 7
a69 7
u_char zs_read_reg(struct zs_chanstate *cs, u_char reg);
u_char zs_read_csr(struct zs_chanstate *cs);
u_char zs_read_data(struct zs_chanstate *cs);

void  zs_write_reg(struct zs_chanstate *cs, u_char reg, u_char val);
void  zs_write_csr(struct zs_chanstate *cs, u_char val);
void  zs_write_data(struct zs_chanstate *cs, u_char val);
d84 1
a84 1
void zsc_req_softint(struct zsc_softc *zsc);
d87 1
a87 1
void	zs_abort(struct zstty_softc *zst);
d90 2
a91 2
int	zsmdioctl(struct tty *tp, u_long com, caddr_t data, int flag,
	    struct proc *p);
d94 2
a95 2
void zstty_mdattach(struct zsc_softc *zsc, struct zstty_softc *zst,
	    struct zs_chanstate *cs, struct tty *tp);  
d98 1
a98 1
void zsmd_setclock(struct zs_chanstate *cs);
@


1.4.10.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d63 7
a69 7
u_char zs_read_reg(struct zs_chanstate *cs, u_char reg);
u_char zs_read_csr(struct zs_chanstate *cs);
u_char zs_read_data(struct zs_chanstate *cs);

void  zs_write_reg(struct zs_chanstate *cs, u_char reg, u_char val);
void  zs_write_csr(struct zs_chanstate *cs, u_char val);
void  zs_write_data(struct zs_chanstate *cs, u_char val);
d84 1
a84 1
void zsc_req_softint(struct zsc_softc *zsc);
d87 1
a87 1
void	zs_abort(struct zstty_softc *zst);
d90 2
a91 2
int	zsmdioctl(struct tty *tp, u_long com, caddr_t data, int flag,
	    struct proc *p);
d94 2
a95 2
void zstty_mdattach(struct zsc_softc *zsc, struct zstty_softc *zst,
	    struct zs_chanstate *cs, struct tty *tp);  
d98 1
a98 1
void zsmd_setclock(struct zs_chanstate *cs);
@


1.4.10.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.4.10.1 2002/03/28 10:34:05 niklas Exp $	*/
d26 5
a30 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.3
log
@Sync up with latest NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: z8530var.h,v 1.2 1996/05/26 18:36:11 briggs Exp $	*/
d49 4
d60 1
a60 1
 * MacII hardware DOES dake care of the delay for us. :-)
d70 1
d83 1
d99 1
d118 1
d120 3
@


1.2
log
@Add OpenBSD Id string.
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: z8530var.h,v 1.1 1996/05/18 18:54:45 briggs Exp $	*/
d106 4
@


1.1
log
@Sync with NetBSD-current.
@
text
@d1 1
@
