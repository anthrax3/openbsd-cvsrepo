head	1.23;
access;
symbols
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.4
	OPENBSD_5_0:1.22.0.2
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.21.0.20
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.21.0.18
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.21.0.14
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.21.0.16
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.12
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.21.0.10
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.8
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.6
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.21.0.4
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.2
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.20.0.2
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.19.0.10
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.8
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.6
	OPENBSD_3_6_BASE:1.19
	SMP_SYNC_A:1.19
	SMP_SYNC_B:1.19
	OPENBSD_3_5:1.19.0.4
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.19.0.2
	OPENBSD_3_4_BASE:1.19
	UBC_SYNC_A:1.18
	OPENBSD_3_3:1.18.0.6
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.18.0.4
	OPENBSD_3_2_BASE:1.18
	OPENBSD_3_1:1.18.0.2
	OPENBSD_3_1_BASE:1.18
	UBC_SYNC_B:1.18
	UBC:1.15.0.2
	UBC_BASE:1.15
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.10.0.8
	OPENBSD_2_9_BASE:1.10
	NIKLAS_UNDEAD:1.10.0.6
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	SMP:1.9.0.4
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.8.0.4
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.2
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.7.0.2
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.23
date	2012.06.20.18.23.52;	author matthew;	state dead;
branches;
next	1.22;

1.22
date	2011.03.23.16.54.36;	author pirofti;	state Exp;
branches;
next	1.21;

1.21
date	2006.06.11.20.48.13;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2005.09.12.23.05.05;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2003.06.02.23.27.49;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2002.03.14.01.26.35;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2002.01.10.22.25.40;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2001.12.20.19.02.28;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2001.12.05.01.57.15;	author provos;	state Exp;
branches
	1.15.2.1;
next	1.14;

1.14
date	2001.11.30.20.58.18;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2001.05.13.02.37.29;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.10.22.46.35;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.05.20.56.40;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2000.02.22.19.27.51;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	99.04.24.06.39.40;	author downsj;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	98.05.03.07.10.47;	author gene;	state Exp;
branches;
next	1.7;

1.7
date	97.11.30.06.12.31;	author gene;	state Exp;
branches;
next	1.6;

1.6
date	97.03.08.16.17.00;	author briggs;	state Exp;
branches;
next	1.5;

1.5
date	96.05.26.18.35.56;	author briggs;	state Exp;
branches;
next	1.4;

1.4
date	96.05.26.18.14.09;	author briggs;	state Exp;
branches;
next	1.3;

1.3
date	96.02.20.05.38.45;	author briggs;	state Exp;
branches;
next	1.2;

1.2
date	96.01.09.04.06.49;	author briggs;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.05;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.05;	author deraadt;	state Exp;
branches;
next	;

1.9.4.1
date	2000.03.02.07.04.30;	author niklas;	state Exp;
branches;
next	1.9.4.2;

1.9.4.2
date	2001.07.04.10.18.33;	author niklas;	state Exp;
branches;
next	1.9.4.3;

1.9.4.3
date	2001.12.05.00.39.11;	author niklas;	state Exp;
branches;
next	1.9.4.4;

1.9.4.4
date	2002.03.06.01.05.35;	author niklas;	state Exp;
branches;
next	1.9.4.5;

1.9.4.5
date	2002.03.28.10.34.05;	author niklas;	state Exp;
branches;
next	1.9.4.6;

1.9.4.6
date	2003.06.07.11.13.14;	author ho;	state Exp;
branches;
next	;

1.15.2.1
date	2002.01.31.22.55.13;	author niklas;	state Exp;
branches;
next	1.15.2.2;

1.15.2.2
date	2002.06.11.03.36.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.23
log
@RIP mac68k.  No one loves you anymore.
@
text
@/*	$OpenBSD: param.h,v 1.22 2011/03/23 16:54:36 pirofti Exp $	*/
/*	$NetBSD: param.h,v 1.28 1997/03/01 06:57:45 scottr Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
/*-
 * Copyright (C) 1993	Allen K. Briggs, Chris P. Caputo,
 *			Michael L. Finch, Bradley A. Grantham, and
 *			Lawrence A. Kesteloot
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the Alice Group.
 * 4. The names of the Alice Group or any of its members may not be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE ALICE GROUP ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE ALICE GROUP BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
/*
 * from: Utah $Hdr: machparam.h 1.11 89/08/14$
 *
 *	@@(#)param.h	7.8 (Berkeley) 6/28/91
 */

#ifndef _MACHINE_PARAM_H_
#define _MACHINE_PARAM_H_

/*
 * Machine dependent constants for Macintosh II-and-similar series.
 */
#define	_MACHINE	mac68k
#define	MACHINE		"mac68k"

#define	PAGE_SHIFT	12

#define	KERNBASE	0x00000000	/* start of kernel virtual */

#define	UPAGES		3  		/* pages of u-area */

#include <m68k/param.h>

#define MSGBUFSIZE	4096

#if defined(_KERNEL) && !defined(_LOCORE)
void	delay(unsigned);
#define DELAY(ms)	delay(ms)
#endif	/* _KERNEL && !_LOCORE */

#endif /* _MACHINE_PARAM_H_ */
@


1.22
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 2006/06/11 20:48:13 miod Exp $	*/
@


1.21
log
@Move common prototypes to <m68k/{cpu,param}.h> instead of incomplete
declarations in <machine/{cpu,param}.h> and elsewhere.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2005/09/12 23:05:05 miod Exp $	*/
d76 2
a77 2
#ifndef _MAC68K_PARAM_H_
#define _MAC68K_PARAM_H_
d100 1
a100 1
#endif /* _MAC68K_PARAM_H_ */
@


1.20
log
@Change the NKMEMPAGES range to 4-64MB for 32bit arches, and 8-128MB for 64bit
arches; except on sparc where the range is 4-8 for !sun4m and 4-64 for sun4m,
selected at runtime.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2003/06/02 23:27:49 millert Exp $	*/
a78 4
/* Pull in interrupt glue */
#include <machine/psl.h>
#include <machine/intr.h>

a84 2
#define	PGSHIFT		12		/* LOG2(NBPG) */

a85 2
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)
a91 2

#define	NPTEPG		(NBPG/(sizeof (pt_entry_t)))
@


1.19
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18 2002/03/14 01:26:35 millert Exp $	*/
a101 7

/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((3 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((3 * 1024 * 1024) >> PAGE_SHIFT)
@


1.18
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 2002/01/10 22:25:40 miod Exp $	*/
d21 1
a21 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.17
log
@Bring back pmap_motorola for mac68k.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2001/12/20 19:02:28 miod Exp $	*/
d117 1
a117 1
void	delay		__P((unsigned));
@


1.16
log
@Temporarily revert the pmap_motorola changes, as they may account for
some problems as well.
Requested by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 2001/12/05 01:57:15 provos Exp $	*/
a99 4

#define	SEGSHIFT	22		/* LOG2(NBSEG) */
#define NBSEG		(1 << SEGSHIFT)	/* bytes/segment */
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */
@


1.15
log
@make nkmempages dynamic based on memory. okay art@@ from netbsd:
date: 2000/02/11 19:22:52;  author: thorpej;
Add some very simple code to auto-size the kmem_map.  We take the
amount of physical memory, divide it by 4, and then allow machine
dependent code to place upper and lower bounds on the size.  Export
the computed value to userspace via the new "vm.nkmempages" sysctl.

NKMEMCLUSTERS is now deprecated and will generate an error if you
attempt to use it.  The new option, should you choose to use it,
is called NKMEMPAGES, and two new options NKMEMPAGES_MIN and
NKMEMPAGES_MAX allow the user to configure the bounds in the kernel
config file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 2001/11/30 20:58:18 miod Exp $	*/
d100 4
@


1.15.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 2002/01/10 22:25:40 miod Exp $	*/
@


1.15.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15.2.1 2002/01/31 22:55:13 niklas Exp $	*/
d117 1
a117 1
void	delay(unsigned);
@


1.14
log
@Switch to pmap_motorola.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 2001/05/13 02:37:29 millert Exp $	*/
d108 5
a112 5
 * Size of kernel malloc arena in logical pages
 */ 
#ifndef NKMEMCLUSTERS
#define	NKMEMCLUSTERS	(2048 * 1024 / PAGE_SIZE)
#endif
@


1.13
log
@PAGE_MASK is (PAGE_SIZE - 1), *not* (PAGE_SHIFT - 1)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 2001/05/10 22:46:35 miod Exp $	*/
a99 4

#define	SEGSHIFT	22		/* LOG2(NBSEG) */
#define NBSEG		(1 << SEGSHIFT)	/* bytes/segment */
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */
@


1.12
log
@Provide PAGE_{MASK,SHIFT,SIZE} constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 2001/05/05 20:56:40 art Exp $	*/
d97 1
a97 1
#define	PAGE_MASK	(PAGE_SHIFT - 1)
@


1.11
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 2000/02/22 19:27:51 deraadt Exp $	*/
d94 5
@


1.10
log
@enlarge msgbuf, somewhat line netbsd did
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 1999/04/24 06:39:40 downsj Exp $	*/
d107 1
a107 1
 * Size of kernel malloc arena in CLBYTES-sized logical pages
d110 1
a110 1
#define	NKMEMCLUSTERS	(2048 * 1024 / CLBYTES)
@


1.9
log
@Use the generic m68k param.h.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8 1998/05/03 07:10:47 gene Exp $	*/
d112 2
@


1.9.4.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a111 2

#define MSGBUFSIZE	4096
@


1.9.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9.4.1 2000/03/02 07:04:30 niklas Exp $	*/
a93 5

#define	PAGE_SHIFT	12
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

d107 1
a107 1
 * Size of kernel malloc arena in logical pages
d110 1
a110 1
#define	NKMEMCLUSTERS	(2048 * 1024 / PAGE_SIZE)
@


1.9.4.3
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9.4.2 2001/07/04 10:18:33 niklas Exp $	*/
d100 4
@


1.9.4.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d108 5
a112 5
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((3 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((3 * 1024 * 1024) >> PAGE_SHIFT)
@


1.9.4.5
log
@Merge in -current from about a week ago
@
text
@d117 1
a117 1
void	delay(unsigned);
@


1.9.4.6
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9.4.5 2002/03/28 10:34:05 niklas Exp $	*/
d21 5
a25 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.8
log
@* Deprecate macinfo.h pulling all relevant defines into cpu.h.
* Move interrupt glue and associated stuff out to intr.h
* Do some MIification.
This brings us a lot closer to looking like the other ports.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7 1997/11/30 06:12:31 gene Exp $	*/
d83 1
a83 1
#ifndef PSL_IPL
a84 3
#endif /* PSL_IPL */

/* Pull in interrupt glue */
a91 18
#define	_MACHINE_ARCH	m68k
#define	MACHINE_ARCH	"m68k"
#define	MID_MACHINE	MID_M68K

/*
 * Round p (pointer or byte index) up to a correctly-aligned value
 * for all data types (int, long, ...).   The result is u_int and
 * must be cast to any desired pointer type.
 *
 * ALIGNED_POINTER is a boolean macro that checks whether an address
 * is valid to fetch data elements of type t from on this architecture.
 * This does not reflect the optimal alignment, just the possibility
 * (within reasonable limits). 
 *
 */
#define ALIGNBYTES		(sizeof(int) - 1)
#define	ALIGN(p)		(((u_int)(p) + ALIGNBYTES) &~ ALIGNBYTES)
#define ALIGNED_POINTER(p,t)	((((u_long)(p)) & (sizeof(t)-1)) == 0)
d94 1
a94 3
#define	NBPG		(1 << PGSHIFT)	/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */
#define	NPTEPG		(NBPG/(sizeof (pt_entry_t)))
d100 1
a100 2
#define	KERNBASE	0x00000000	/* start of kernel virtual */
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
d102 1
a102 13
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define	DEV_BSIZE	(1 << DEV_BSHIFT)
#define BLKDEV_IOSIZE	2048
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */

#define	CLSIZELOG2	0
#define	CLSIZE		(1 << CLSIZELOG2)

/* NOTE: SSIZE, SINCR and UPAGES must be multiples of CLSIZE */
#define	SSIZE		1		/* initial stack size/NBPG */
#define	SINCR		1		/* increment of stack/NBPG */
#define	UPAGES		3  		/* pages of u-area */
#define USPACE		(UPAGES * NBPG)	/* total size of u-area */
d104 1
a104 21
/*
 * Constants related to network buffer management.
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
 */
#define	MSIZE		128		/* size of an mbuf */
#ifndef MCLSHIFT
#define MCLSHIFT        11              /* convert bytes to m_buf clusters */
#endif	/* MCLSHIFT */
#define MCLBYTES        (1 << MCLSHIFT) /* size of an m_buf cluster */
#define MCLOFSET        (MCLBYTES - 1)  /* offset within an m_buf cluster */

#ifndef NMBCLUSTERS
#ifdef GATEWAY
#define	NMBCLUSTERS	512		/* map size, max cluster allocation */
#else
#define	NMBCLUSTERS	256		/* map size, max cluster allocation */
#endif
#endif
a111 30

/* pages ("clicks") to disk blocks */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))

/* pages to bytes */
#define	ctob(x)		((x) << PGSHIFT)
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)

/* bytes to disk blocks */
#define	btodb(x)	((x) >> DEV_BSHIFT)
#define	dbtob(x)	((x) << DEV_BSHIFT)

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE / DEV_BSIZE))

/*
 * Mach derived conversion macros
 */
#define mac68k_round_page(x)	((((unsigned)(x)) + PGOFSET) & ~PGOFSET)
#define mac68k_trunc_page(x)	((unsigned)(x) & ~PGOFSET)
#define mac68k_btop(x)		((unsigned)(x) >> PGSHIFT)
#define mac68k_ptob(x)		((unsigned)(x) << PGSHIFT)

#include <machine/psl.h>
@


1.7
log
@Canonify the _*_H_ namespace appropriately.
Also, clean up comments and wrap with _KERNEL correctly.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.6 1997/03/08 16:17:00 briggs Exp $	*/
d86 3
@


1.6
log
@Sync with NetBSD of about 4 March.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.5 1996/05/26 18:35:56 briggs Exp $	*/
d80 2
a81 2
#ifndef _PARAM_MACHINE_
#define _PARAM_MACHINE_
d201 1
a201 1
#endif /* _PARAM_MACHINE_ */
@


1.5
log
@Add OpenBSD Id string.
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: param.h,v 1.26 1996/05/05 06:17:49 briggs Exp $	*/
d100 6
d107 3
a109 2
#define ALIGNBYTES	(sizeof(int) - 1)
#define	ALIGN(p)	(((u_int)(p) + ALIGNBYTES) &~ ALIGNBYTES)
d145 1
d147 1
@


1.4
log
@Sync with NetBSD-current.
@
text
@d1 1
@


1.3
log
@A few more things from NetBSD:
- Move spl stuff from param.h to psl.h.  Prototype delay() in param.h.
- param.h: Fix #includes.
- param.h: Move splimp to 2 and spltty to 1.
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.24 1996/02/17 14:50:40 briggs Exp $	*/
d79 2
a80 2
#ifndef _MACHINE_PARAM_H_
#define _MACHINE_PARAM_H_	1
d89 1
d91 1
d191 1
a191 1
#endif /* _MACHINE_PARAM_H_ */
@


1.2
log
@spltty shouldn't need to block serial hard interrupts--just soft.
splimp can drop, too.
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.21 1995/08/13 01:52:16 briggs Exp $	*/
d83 1
a83 1
#include "machine/psl.h"
d182 1
a182 44
/*
 * spl functions; all but spl0 are done in-line
 */

#define _spl(s) \
({ \
        register int _spl_r; \
\
        __asm __volatile ("clrl %0; movew sr,%0; movew %1,sr" : \
                "&=d" (_spl_r) : "di" (s)); \
        _spl_r; \
})

/* spl0 requires checking for software interrupts */
#define spl1()  _spl(PSL_S|PSL_IPL1)
#define spl2()  _spl(PSL_S|PSL_IPL2)
#define spl3()  _spl(PSL_S|PSL_IPL3)
#define spl4()  _spl(PSL_S|PSL_IPL4)
#define spl5()  _spl(PSL_S|PSL_IPL5)
#define spl6()  _spl(PSL_S|PSL_IPL6)
#define spl7()  _spl(PSL_S|PSL_IPL7)

/* These should be used for:
   1) ensuring mutual exclusion (why use processor level?)
   2) allowing faster devices to take priority

   Note that on the mac, most things are masked at spl1, almost
   everything at spl2, and everything but the panic switch and
   power at spl4.
 */
#define splsoftclock()  spl1()	/* disallow softclock */
#define splsoftnet()    spl1()	/* disallow network */
#define splclock()      spl1()	/* disallow clock interrupt */
#define spltty()        spl1()	/* disallow tty (softserial&adb) interrupts */
#define splbio()        spl2()	/* disallow block I/O */
#define splnet()        spl2()	/* disallow network */
#define splimp()        spl2()	/* disallow imput */
#define splhigh()       spl7()	/* disallow everything */
#define splsched()      spl7()	/* disallow scheduling */

#define splstatclock()  spl2()	/* This should be splclock... */

/* watch out for side effects */
#define splx(s)         ((s) & PSL_IPL ? _spl(s) : spl0())
d184 2
d187 1
@


1.1
log
@Initial revision
@
text
@d215 1
d218 1
a218 2
#define spltty()        spl4()	/* disallow tty interrupts (serial) */
#define splimp()        spl4()	/* disallow imput */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
