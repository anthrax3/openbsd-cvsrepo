head	1.10;
access;
symbols
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.7.0.14
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.12
	OPENBSD_3_6_BASE:1.7
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	OPENBSD_3_5:1.7.0.10
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.8
	OPENBSD_3_4_BASE:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.7
	UBC:1.6.0.22
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.20
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.18
	OPENBSD_2_9_BASE:1.6
	NIKLAS_UNDEAD:1.6.0.16
	OPENBSD_2_8:1.6.0.14
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.12
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.10
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.8
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2006.01.18.23.21.17;	author miod;	state dead;
branches;
next	1.9;

1.9
date	2006.01.04.20.39.05;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2005.08.07.14.43.53;	author martin;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.01.26.35;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.11.30.06.12.19;	author gene;	state Exp;
branches
	1.6.10.1
	1.6.22.1;
next	1.5;

1.5
date	97.11.11.22.42.27;	author gene;	state Exp;
branches;
next	1.4;

1.4
date	97.04.06.02.59.52;	author briggs;	state Exp;
branches;
next	1.3;

1.3
date	96.05.26.18.35.42;	author briggs;	state Exp;
branches;
next	1.2;

1.2
date	96.05.26.18.14.00;	author briggs;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.05;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.05;	author deraadt;	state Exp;
branches;
next	;

1.6.10.1
date	2002.03.28.10.34.05;	author niklas;	state Exp;
branches;
next	;

1.6.22.1
date	2002.06.11.03.36.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Factorize akbd and ams drivers between mac68k and macppc; while there, start
moving out common adb code as well, and merge adb_direct.c into adb.c to
simplify external header files.

No functional change; more cleanups to come.
@
text
@/*	$OpenBSD: adbsys.h,v 1.9 2006/01/04 20:39:05 miod Exp $	*/
/*	$NetBSD: adbsys.h,v 1.13 2000/02/14 07:01:48 scottr Exp $	*/

/*-
 * Copyright (C) 1993, 1994	Allen K. Briggs, Chris P. Caputo,
 *			Michael L. Finch, Bradley A. Grantham, and
 *			Lawrence A. Kesteloot
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the Alice Group.
 * 4. The names of the Alice Group or any of its members may not be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE ALICE GROUP ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE ALICE GROUP BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _ADBSYS_MACHINE_
#define _ADBSYS_MACHINE_

/* an ADB event */
typedef struct adb_event_s {
	int addr;			/* device address */
	int hand_id;			/* handler id */
	int def_addr;			/* default address */
	int byte_count;			/* number of bytes */
	unsigned char bytes[8];		/* bytes from register 0 */
	struct timeval timestamp;	/* time event was acquired */
	union {
		struct adb_keydata_s {
			int key;	/* ADB key code */
		} k;
		struct adb_mousedata_s {
			int dx;		/* mouse delta x */
			int dy;		/* mouse delta y */
			int buttons;	/* buttons (down << (buttonnum)) */
		} m;
	} u;				/* courtesy interpretation */
} adb_event_t;

	/* Interesting default addresses */
#define	ADBADDR_SECURE	1		/* Security dongles */
#define ADBADDR_MAP	2		/* Mapped devices (keyboards/pads) */
#define ADBADDR_REL	3		/* Relative positioning devices
					   (mice, trackballs/pads) */
#define ADBADDR_ABS	4		/* Absolute positioning devices
					   (graphics tablets) */
#define ADBADDR_DATATX	5
#define ADBADDR_RSRVD	6		/* Reserved by Apple */
#define ADBADDR_MISC	7		/* Miscellaneous appliances */
#define ADBADDR_DONGLE	ADBADDR_SECURE
#define ADBADDR_KBD	ADBADDR_MAP
#define ADBADDR_MS	ADBADDR_REL
#define ADBADDR_TABLET	ADBADDR_ABS
#define ADBADDR_MODEM	ADBADDR_DATATX


	/* Interesting keyboard handler IDs */
#define ADB_STDKBD	1
#define ADB_EXTKBD	2
#define ADB_ISOKBD	4
#define ADB_EXTISOKBD	5
#define ADB_KBDII	8
#define ADB_ISOKBDII	9
#define ADB_PBKBD	12
#define ADB_PBISOKBD	13
#define ADB_ADJKPD	14
#define ADB_ADJKBD	16
#define ADB_ADJISOKBD	17
#define ADB_ADJJAPKBD	18
#define ADB_PBEXTISOKBD	20
#define ADB_PBEXTJAPKBD	21
#define ADB_JPKBDII	22
#define ADB_PBEXTKBD	24
#define ADB_DESIGNKBD	27	/* XXX Needs to be verified XXX */
#define ADB_PBJPKBD	30
#define ADB_PBG4KBD	195
#define ADB_IBITISOKBD	196
#define ADB_PBG3JPKBD	201

	/* Interesting mouse handler IDs */
#define ADBMS_100DPI	1
#define ADBMS_200DPI	2
#define ADBMS_MSA3	3	/* Mouse Systems A3 Mouse */
#define ADBMS_EXTENDED	4	/* Extended mouse protocol */
#define ADBMS_USPEED	0x2f	/* MicroSpeed mouse */
#define ADBMS_UCONTOUR	0x66	/* Contour mouse */
#define ADBMS_TURBO	50	/* Kensington Turbo Mouse */

	/* Interesting tablet handler ID */
#define ADB_ARTPAD	58	/* WACOM ArtPad II tablet */

	/* Interesting miscellaneous handler ID */
#define ADB_POWERKEY	34	/* Sophisticated Circuits PowerKey */
				/* (intelligent power tap) */

#endif /* _ADBSYS_MACHINE_ */
@


1.9
log
@Import NetBSD's direct adb code on mac68k, switching to real keyboard and mouse
drivers, and to wscons as the console; a few parts borrowed from OpenBSD/macppc
as well.

Currently only working with displays configured in 1bpp or 8bpp modes; this
limitation will be worked on ASAP.

Tested by claudio@@ kettenis@@ martin@@ nick@@ and I on various models. X11 changes
coming soon.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.8
log
@a bunch more ADB handler IDs, will be necessary in the future

from NetBSD
@
text
@d1 2
a2 2
/*	$OpenBSD: adbsys.h,v 1.7 2002/03/14 01:26:35 millert Exp $	*/
/*	$NetBSD: adbsys.h,v 1.5 1996/05/05 14:34:07 briggs Exp $	*/
d37 2
a38 17
#ifndef _MAC68K_ADBSYS_H_
#define _MAC68K_ADBSYS_H_

#include <sys/time.h>
#include <sys/ioctl.h>

/* Handy visual constants */
#define ADB_MAX_HANDLERS	256
#define ADB_MAX_DEVS		16

/* Different ADB system types */
enum adb_system_e {
	MacIIADB,
	MacIIsiADB,
	MacPBADB};
extern enum adb_system_e adb_system_type;

d60 2
a61 9
/* Descriptor of a device on the ADB bus */
typedef struct adb_dev_s {
	int		addr;		/* current address */
	int		default_addr;	/* startup address */
	int		handler_id;	/* handler ID */
} adb_dev_t;

/* Interesting default addresses */
#define ADBADDR_SECURE	1		/* Security dongles */
d63 4
a66 2
#define ADBADDR_REL	3		/* Relative positioning devices */
#define ADBADDR_ABS	4		/* Absolute positioning devices */
d76 2
a77 1
/* Interesting keyboard handler IDs */
d96 3
d100 1
a100 1
/* Interesting mouse handler IDs */
d105 3
a107 2
#define ADBMS_USPEED	47	/* MicroSpeed mouse */
#define ADBMS_UCONTOUR	102	/* Contour mouse */
d109 1
a109 1
/* Interesting tablet handler ID */
d112 1
a112 1
/* Interesting miscellaneous handler ID */
d114 1
d116 1
a116 31
/* Get device info from ADB system */
typedef struct adb_devinfo_s {
	adb_dev_t	dev[ADB_MAX_DEVS];
	/* [addr].addr == -1 if none */ 
} adb_devinfo_t;
#define ADBIOC_DEVSINFO	_IOR('A', 128, adb_devinfo_t)


/* Event auto-repeat */
typedef struct adb_rptinfo_s {
	int delay_ticks;	/* ticks before repeat */
	int interval_ticks;	/* ticks between repeats */
} adb_rptinfo_t;
#define ADBIOC_GETREPEAT	_IOR('A', 130, adb_rptinfo_t)
#define ADBIOC_SETREPEAT	_IOW('A', 131, adb_rptinfo_t)


/* Reset and reinitialize */
#define ADBIOC_RESET		_IO('A', 132)

typedef struct adb_listencmd_s {
	int address;		/* device address */
	int reg;		/* register to which to send bytes */
	int bytecnt;		/* number of bytes */
	u_char bytes[8];	/* bytes */
} adb_listencmd_t;
#define ADBIOC_LISTENCMD	_IOW('A', 133, adb_listencmd_t)

void	adb_init(void);

#endif /* _MAC68K_ADBSYS_H_ */
@


1.7
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: adbsys.h,v 1.6 1997/11/30 06:12:19 gene Exp $	*/
d83 8
a90 3
#define ADBADDR_MAP	2
#define ADBADDR_REL	3
#define ADBADDR_ABS	4
d94 1
d96 1
a96 1
/* Interesting handler IDs */
d99 4
d104 13
d119 2
a120 1
#define ADBMS_EXTENDED	4
d122 7
@


1.6
log
@Canonify the _*_H_ namespace appropriately.
Also, clean up comments and wrap with _KERNEL correctly.
@
text
@d1 1
a1 1
/*	$OpenBSD: adbsys.h,v 1.5 1997/11/11 22:42:27 gene Exp $	*/
d127 1
a127 1
void	adb_init __P((void));
@


1.6.22.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: adbsys.h,v 1.6 1997/11/30 06:12:19 gene Exp $	*/
d127 1
a127 1
void	adb_init(void);
@


1.6.10.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d127 1
a127 1
void	adb_init(void);
@


1.5
log
@Pull in sys/time.h and sys/ioctl.h so things like dt (which apparently
expect this to happen) compile.
While I'm here, beautify and KNF this thing a bit and standardize the name
of the multiple inclusion macro.
@
text
@d1 1
a1 1
/*	$OpenBSD: adbsys.h,v 1.4 1997/04/06 02:59:52 briggs Exp $	*/
d37 2
a38 2
#ifndef _MACHINE_ADBSYS_H_
#define _MACHINE_ADBSYS_H_
d129 1
a129 1
#endif /* _MACHINE_ADBSYS_H_ */
@


1.4
log
@Eradicate #include <sys/*> from machine/*.h.  Prompting from Gene.
@
text
@d1 1
a1 1
/*	$OpenBSD: adbsys.h,v 1.3 1996/05/26 18:35:42 briggs Exp $	*/
d37 5
a41 2
#ifndef _ADBSYS_MACHINE_
#define _ADBSYS_MACHINE_
d45 1
a45 2
#define ADB_MAX_DEVS	16

d64 1
a64 1
		struct adb_keydata_s{
d67 1
a67 1
		struct adb_mousedata_s{
d75 2
a76 3

/* a device on the ADB */
typedef struct adb_dev_s{
d82 1
a82 2

	/* Interesting default addresses */
d90 1
a90 2

	/* Interesting handler IDs */
d99 2
a100 3

	/* Get device info from ADB system */
typedef struct adb_devinfo_s{
d102 1
a102 1
		/* [addr].addr == -1 if none */ 
d107 2
a108 2
	/* Event auto-repeat */
typedef struct adb_rptinfo_s{
d116 1
a116 1
	/* Reset and reinitialize */
d119 1
a119 2

typedef struct adb_listencmd_s{
d129 1
a129 1
#endif /* _ADBSYS_MACHINE_ */
@


1.3
log
@Add OpenBSD Id string.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a38 4

#include <sys/time.h>	/* timeval stuff */
#include <sys/ioctl.h>	/* ioctls */

@


1.2
log
@Sync with NetBSD-current.
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: adbsys.h,v 1.3 1994/12/03 23:34:28 briggs Exp $	*/
d36 2
d97 1
d100 2
d132 4
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
