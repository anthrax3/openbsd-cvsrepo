head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.12
	OPENBSD_5_0:1.3.0.10
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.8
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.6
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.6
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.4
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.1.0.8
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.6
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.06.20.18.23.51;	author matthew;	state dead;
branches;
next	1.3;

1.3
date	2009.03.29.21.53.52;	author sthen;	state Exp;
branches;
next	1.2;

1.2
date	2007.09.10.20.29.46;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.29.15.58.20;	author martin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@RIP mac68k.  No one loves you anymore.
@
text
@/*	$OpenBSD: if_sm_nubus.c,v 1.3 2009/03/29 21:53:52 sthen Exp $	*/
/*	$NetBSD: if_sm_nubus.c,v 1.2 2000/08/01 13:08:39 briggs Exp $	*/

/*
 * Copyright (c) 2000 Allen Briggs.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/device.h>
#include <sys/errno.h>
#include <sys/ioctl.h>
#include <sys/socket.h>
#include <sys/syslog.h>
#include <sys/systm.h>

#include <net/if.h>

#ifdef INET
#include <netinet/in.h>
#include <netinet/if_ether.h>
#endif

#include <machine/bus.h>
#include <machine/viareg.h>

#include <net/if_media.h>

#include <dev/mii/mii.h>
#include <dev/mii/miivar.h>

#include <dev/ic/smc91cxxreg.h>
#include <dev/ic/smc91cxxvar.h>

#include <mac68k/dev/nubus.h>

static int	sm_nubus_match(struct device *, void *, void *);
static void	sm_nubus_attach(struct device *, struct device *, void *);

struct cfattach sm_nubus_ca = {
	sizeof(struct smc91cxx_softc), sm_nubus_match, sm_nubus_attach
};

static int
sm_nubus_match(parent, cf, aux)
	struct device *parent;
	void *cf;
	void *aux;
{
	struct nubus_attach_args *na = (struct nubus_attach_args *) aux;
	bus_space_handle_t bsh;
	int rv;

	if (bus_space_map(na->na_tag,
	    NUBUS_SLOT2PA(na->slot), NBMEMSIZE, 0, &bsh))
		return (0);

	rv = 0;

	if (na->category == NUBUS_CATEGORY_NETWORK &&
	    na->type == NUBUS_TYPE_ETHERNET) {
		switch (na->drsw) {
	    	case NUBUS_DRSW_FOCUS:
	    	case NUBUS_DRSW_ASANTEF:
			rv = 1;
			break;
		default:
			rv = 0;
			break;
		}
	}

	bus_space_unmap(na->na_tag, bsh, NBMEMSIZE);

	return rv;
}

/*
 * Install interface into kernel networking data structures
 */
static void
sm_nubus_attach(parent, self, aux)
	struct device *parent, *self;
	void   *aux;
{
	struct smc91cxx_softc *smc = (struct smc91cxx_softc *) self;
	struct nubus_attach_args *na = (struct nubus_attach_args *)aux;
	bus_space_tag_t	bst = na->na_tag;
	bus_space_handle_t bsh, prom_bsh;
	u_int8_t myaddr[ETHER_ADDR_LEN];
	int i, success;
	char *cardtype;

	bst = na->na_tag;
	if (bus_space_map(bst, NUBUS_SLOT2PA(na->slot), NBMEMSIZE, 0, &bsh)) {
		printf(": can't map mem space.\n");
		return;
	}

	mac68k_bus_space_handle_swapped(bst, &bsh);

	smc->sc_bst = bst;
	smc->sc_bsh = bsh;

	cardtype = nubus_get_card_name(bst, bsh, na->fmt);

	success = 0;

	switch (na->drsw) {
	case NUBUS_DRSW_FOCUS:
		if (bus_space_subregion(bst, bsh, 0xFF8000, 0x20, &prom_bsh)) {
			printf(": can't map EEPROM space\n");
			break;
		}

		success = 1;
		break;
	case NUBUS_DRSW_ASANTEF:
		if (bus_space_subregion(bst, bsh, 0xFE0000, 0x20, &prom_bsh)) {
			printf(": can't map EEPROM space\n");
			break;
		}

		success = 1;
		break;
	}

	if (!success) {
		bus_space_unmap(bst, bsh, NBMEMSIZE);
		return;
	}
	for (i=0 ; i<6 ; i++) {
		myaddr[i] = bus_space_read_1(bst, prom_bsh, i*4);
	}

	smc->sc_flags |= SMC_FLAGS_ENABLED;

	printf(": %s", cardtype);

	smc91cxx_attach(smc, myaddr);

	add_nubus_intr(na->slot, IPL_NET, smc91cxx_intr, smc,
	    smc->sc_dev.dv_xname);
}
@


1.3
log
@make various strings ("can't map mem space" and similar) more consistent
between instances, saving space in the kernel. feedback from many (some
incorporated, some left for future work).

ok deraadt, kettenis, "why not" miod.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_nubus.c,v 1.2 2007/09/10 20:29:46 miod Exp $	*/
@


1.2
log
@Pass a real ipl level to add_nubus_intr(), and make sure the interrupt
handler is invoked with spl raised to the given level, otherwise all nubus
interrupts are processed at level 2.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_sm_nubus.c,v 1.1 2006/01/29 15:58:20 martin Exp $	*/
d118 1
a118 1
		printf(": failed to map memory space.\n");
d134 1
a134 1
			printf(": failed to map EEPROM space.\n");
d142 1
a142 1
			printf(": failed to map EEPROM space.\n");
@


1.1
log
@SMC91CXX NuBus hooks

from NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d164 2
a165 1
	add_nubus_intr(na->slot, smc91cxx_intr, smc, smc->sc_dev.dv_xname);
@

