head	1.6;
access;
symbols
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.24
	OPENBSD_5_0:1.5.0.22
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.20
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.18
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.14
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.16
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.12
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.10
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.8
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.3
	UBC:1.1.0.20
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.18
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.16
	OPENBSD_2_9_BASE:1.1
	NIKLAS_UNDEAD:1.1.0.14
	OPENBSD_2_8:1.1.0.12
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.10
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.8
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.06.20.18.23.51;	author matthew;	state dead;
branches;
next	1.5;

1.5
date	2006.06.24.13.23.27;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2004.12.15.06.48.24;	author martin;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.20.00.17.05;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.35;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.05.08.22.15.32;	author gene;	state Exp;
branches
	1.1.8.1
	1.1.20.1;
next	;

1.1.8.1
date	2002.03.28.10.34.04;	author niklas;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2003.03.27.23.28.43;	author niklas;	state Exp;
branches;
next	;

1.1.20.1
date	2002.06.11.03.36.18;	author art;	state Exp;
branches;
next	;


desc
@@


1.6
log
@RIP mac68k.  No one loves you anymore.
@
text
@/*	$OpenBSD: if_mcvar.h,v 1.5 2006/06/24 13:23:27 miod Exp $	*/
/*	$NetBSD: if_mcvar.h,v 1.8 2004/03/26 12:15:46 wiz Exp $	*/

/*-
 * Copyright (c) 1997 David Huang <khym@@azeotrope.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#define	MC_REGSPACING	16
#define	MC_REGSIZE	MACE_NREGS * MC_REGSPACING
#define	MACE_REG(x)	((x)*MC_REGSPACING)

#define	NIC_GET(sc, reg)	(bus_space_read_1((sc)->sc_regt,	\
				    (sc)->sc_regh, MACE_REG(reg)))

#define	NIC_PUT(sc, reg, val)	(bus_space_write_1((sc)->sc_regt,	\
				    (sc)->sc_regh, MACE_REG(reg), (val)))

#ifndef	MC_RXDMABUFS
#define	MC_RXDMABUFS	4
#endif
#if (MC_RXDMABUFS < 2)
#error Must have at least two buffers for DMA!
#endif

#define	MC_NPAGES	((MC_RXDMABUFS * 0x800 + PAGE_SIZE - 1) / PAGE_SIZE)

struct mc_rxframe {
	u_int8_t	rx_rcvcnt;
	u_int8_t	rx_rcvsts;
	u_int8_t	rx_rntpc;
	u_int8_t	rx_rcvcc;
	u_char		*rx_frame;
};

struct mc_softc {
	struct device	sc_dev;		/* base device glue */
	struct arpcom	sc_ethercom;	/* Ethernet common part */
#define	sc_if		sc_ethercom.ac_if

	struct mc_rxframe	sc_rxframe;
	u_int8_t	sc_biucc;
	u_int8_t	sc_fifocc;
	u_int8_t	sc_plscc;
	u_int8_t	sc_enaddr[6];
	u_int8_t	sc_pad[2];
	int		sc_havecarrier; /* carrier status */
	void		(*sc_bus_init)(struct mc_softc *);
	void		(*sc_putpacket)(struct mc_softc *, u_int);

	bus_space_tag_t		sc_regt;
	bus_space_handle_t	sc_regh;

	u_char		*sc_txbuf, *sc_rxbuf;
	paddr_t		sc_txbuf_phys, sc_rxbuf_phys;
	int		sc_tail;
	int		sc_rxset;
	int		sc_txset, sc_txseti;
};

int	mcsetup(struct mc_softc *, u_int8_t *);
void	mcintr(void *arg);
void	mc_rint(struct mc_softc *sc);
u_char	mc_get_enaddr(bus_space_tag_t t, bus_space_handle_t h,
		bus_size_t o, u_char *dst);
@


1.5
log
@Allocate ethernet buffers as uvm pages, and map them with pmap_enter_cache(),
instead of crossing fingers and expecting malloc() to return aligned and
contiguous memory.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_mcvar.h,v 1.4 2004/12/15 06:48:24 martin Exp $	*/
@


1.4
log
@sync with NetBSD but replace hand crafted crc logic with ether_crc32_le()

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_mcvar.h,v 1.3 2002/04/20 00:17:05 miod Exp $	*/
d75 1
a75 1
	int		sc_txbuf_phys, sc_rxbuf_phys;
@


1.3
log
@Get rid of "integrate" and "hide" bad taste modifiers, thus get non-DDB
kernels to compile.
@
text
@d1 2
a2 2
/*	$OpenBSD: if_mcvar.h,v 1.2 2002/03/14 01:26:35 millert Exp $	*/
/*	$NetBSD: if_mcvar.h,v 1.3 1997/12/07 17:47:48 scottr Exp $	*/
d5 1
a5 1
 * Copyright (c) 1997 David Huang <khym@@bga.com>
d46 1
a46 1
#define	MC_NPAGES	((MC_RXDMABUFS * 0x800 + NBPG - 1) / NBPG)
d85 1
a85 1
	    vm_offset_t o, u_char *dst);
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_mcvar.h,v 1.1 1998/05/08 22:15:32 gene Exp $	*/
a27 8

#ifdef DDB
#define	integrate
#define hide
#else
#define	integrate	static __inline
#define hide		static
#endif
@


1.1
log
@With the new psc framework, incorporate the driver for the AMD MACE ethernet
found on Quadra/Centris AV models.
Much of this done by Allen Briggs with porting to OpenBSD by me.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d76 2
a77 2
	void		(*sc_bus_init) __P((struct mc_softc *));
	void		(*sc_putpacket) __P((struct mc_softc *, u_int));
d89 5
a93 5
int	mcsetup __P((struct mc_softc *, u_int8_t *));
void	mcintr __P((void *arg));
void	mc_rint __P((struct mc_softc *sc));
u_char	mc_get_enaddr __P((bus_space_tag_t t, bus_space_handle_t h,
	    vm_offset_t o, u_char *dst));
@


1.1.20.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_mcvar.h,v 1.1 1998/05/08 22:15:32 gene Exp $	*/
d29 8
d76 2
a77 2
	void		(*sc_bus_init)(struct mc_softc *);
	void		(*sc_putpacket)(struct mc_softc *, u_int);
d89 5
a93 5
int	mcsetup(struct mc_softc *, u_int8_t *);
void	mcintr(void *arg);
void	mc_rint(struct mc_softc *sc);
u_char	mc_get_enaddr(bus_space_tag_t t, bus_space_handle_t h,
	    vm_offset_t o, u_char *dst);
@


1.1.8.1
log
@Merge in -current from about a week ago
@
text
@d76 2
a77 2
	void		(*sc_bus_init)(struct mc_softc *);
	void		(*sc_putpacket)(struct mc_softc *, u_int);
d89 5
a93 5
int	mcsetup(struct mc_softc *, u_int8_t *);
void	mcintr(void *arg);
void	mc_rint(struct mc_softc *sc);
u_char	mc_get_enaddr(bus_space_tag_t t, bus_space_handle_t h,
	    vm_offset_t o, u_char *dst);
@


1.1.8.2
log
@Sync the SMP branch with 3.3
@
text
@d29 8
@


