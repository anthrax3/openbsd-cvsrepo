head	1.10;
access;
symbols
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.26
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.24
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.22
	OPENBSD_2_9_BASE:1.4
	NIKLAS_UNDEAD:1.4.0.20
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	2006.01.09.20.51.48;	author miod;	state dead;
branches;
next	1.9;

1.9
date	2006.01.08.20.35.21;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2006.01.04.20.39.05;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2005.08.06.19.51.43;	author martin;	state Exp;
branches;
next	1.6;

1.6
date	2005.07.23.23.28.58;	author martin;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.35;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.03.08.16.16.52;	author briggs;	state Exp;
branches
	1.4.14.1
	1.4.26.1;
next	1.3;

1.3
date	96.11.23.21.45.51;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.08.10.21.37.44;	author briggs;	state Exp;
branches;
next	1.1;

1.1
date	96.05.26.19.02.06;	author briggs;	state Exp;
branches;
next	;

1.4.14.1
date	2002.03.28.10.34.04;	author niklas;	state Exp;
branches;
next	;

1.4.26.1
date	2002.06.11.03.36.18;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Ditch the grf frame buffer abstraction, and directly attach macfb to
either obio or nubus. No functional change, shaves a few more KB...
@
text
@/*	$OpenBSD: grf_subr.c,v 1.9 2006/01/08 20:35:21 miod Exp $	*/
/*	$NetBSD: grf_subr.c,v 1.6 1997/02/20 00:23:28 scottr Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Jason R. Thorpe.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/device.h>
#include <sys/systm.h>

#include <machine/bus.h>

#include <mac68k/dev/nubus.h>
#include <mac68k/dev/grfvar.h>

void
grf_establish(struct grfbus_softc *sc, struct grfmode *gm)
{
	struct grfbus_attach_args ga;

	/* Print hardware characteristics. */
	printf("%s: %d x %d, ", sc->sc_dev.dv_xname, gm->width, gm->height);
	if (gm->psize == 1)
		printf("monochrome\n");
	else
		printf("%d color\n", 1 << gm->psize);

	/* Attach grf semantics to the hardware. */
	ga.ga_name = "grf";
	bcopy(gm, &ga.ga_grfmode, sizeof(*gm));
	ga.ga_phys = sc->sc_basepa;
	(void)config_found(&sc->sc_dev, &ga, grfbusprint);
}

int
grfbusprint(aux, name)
	void *aux;
	const char *name;
{
	struct grfbus_attach_args *ga = aux;

	if (name)
		printf("%s at %s", ga->ga_name, name);

	return (UNCONF);
}
@


1.9
log
@Remove unused grf_softc members; do not keep temporary data in grf_softc
either, instead keep it on the stack or directly in attachment structures.
No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: grf_subr.c,v 1.8 2006/01/04 20:39:05 miod Exp $	*/
@


1.8
log
@Import NetBSD's direct adb code on mac68k, switching to real keyboard and mouse
drivers, and to wscons as the console; a few parts borrowed from OpenBSD/macppc
as well.

Currently only working with displays configured in 1bpp or 8bpp modes; this
limitation will be worked on ASAP.

Tested by claudio@@ kettenis@@ martin@@ nick@@ and I on various models. X11 changes
coming soon.
@
text
@d1 1
a1 1
/*	$OpenBSD: grf_subr.c,v 1.7 2005/08/06 19:51:43 martin Exp $	*/
d50 1
a50 2
grf_establish(sc)
	struct grfbus_softc *sc;
a51 1
	struct grfmode *gm = &sc->curr_mode;
d63 1
a63 1
	ga.ga_grfmode = gm;
@


1.7
log
@overhaul the grf driver:

- Simplify grfmv_phys() to work like grfiv_phys(), and eliminate the
  second argument to both, as we don't use it anyway.
- Handle fbbase and fboff consistently throughout.
- Eliminate grfaddr() by pulling it into grfmmap(), which is the
  only place it was used, previously.
- grfmap() now gets the physical address of the framebuffer from
  the appropriate driver, rather than try to compute it by itself.
  Be careful with aligning the base to a page address and increase
  the length of the mapped region appropriately.
- Store the PA of the framebuffer in the softc.  This eliminates the need
  for the sc_phys callback; we can just store the PA in the grfbus attach
  args, rather than a function pointer, which simplifies the code nicely.
- Disable Valkyrie interrupts on the Quadra 630
- New and improved console framebuffer initialization and autoconfig.  This
  resolves a great many issues, including Performa 58x interrupt handling
  and offset displays on some models.
- Remove unused grf ioctls
- Some KNF and other minor things

help and ok miod@@

from NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: grf_subr.c,v 1.6 2005/07/23 23:28:58 martin Exp $	*/
a44 1
#include <machine/grfioctl.h>
d50 1
a50 1
grf_establish(sc, sp, g_mode)
a51 2
	nubus_slot *sp;
	int (*g_mode)(struct grf_softc *, int, void *);
a65 1
	ga.ga_slot = sp;
a66 1
	ga.ga_mode = g_mode;
@


1.6
log
@vm_offset_t -> {vaddr_t, bus_addr_t}
@
text
@d1 1
a1 1
/*	$OpenBSD: grf_subr.c,v 1.5 2002/03/14 01:26:35 millert Exp $	*/
d51 1
a51 1
grf_establish(sc, sp, g_mode, g_phys)
a54 1
	caddr_t (*g_phys)(struct grf_softc *, vaddr_t);
d70 1
a71 1
	ga.ga_phys = g_phys;
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: grf_subr.c,v 1.4 1997/03/08 16:16:52 briggs Exp $	*/
d55 1
a55 1
	caddr_t (*g_phys)(struct grf_softc *, vm_offset_t);
@


1.4
log
@Sync with NetBSD of about 4 March.
@
text
@d1 1
a1 1
/*	$OpenBSD: grf_subr.c,v 1.3 1996/11/23 21:45:51 kstailey Exp $	*/
d54 2
a55 2
	int (*g_mode) __P((struct grf_softc *, int, void *));
	caddr_t (*g_phys) __P((struct grf_softc *, vm_offset_t));
@


1.4.26.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: grf_subr.c,v 1.4 1997/03/08 16:16:52 briggs Exp $	*/
d54 2
a55 2
	int (*g_mode)(struct grf_softc *, int, void *);
	caddr_t (*g_phys)(struct grf_softc *, vm_offset_t);
@


1.4.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d54 2
a55 2
	int (*g_mode)(struct grf_softc *, int, void *);
	caddr_t (*g_phys)(struct grf_softc *, vm_offset_t);
@


1.3
log
@added const to second parameter of cfprint_t routines
@
text
@d1 2
a2 2
/*	$OpenBSD: grf_subr.c,v 1.1 1996/05/26 19:02:06 briggs Exp $	*/
/*	$NetBSD: grf_subr.c,v 1.2 1996/08/04 06:03:56 scottr Exp $	*/
d44 1
@


1.2
log
@Sync with NetBSD.
@
text
@d78 1
a78 1
	char *name;
@


1.1
log
@Missed a few files in the previous updates.
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: grf_subr.c,v 1.1 1996/05/19 22:27:08 scottr Exp $	*/
d50 1
a50 1
grf_establish(sc, g_mode, g_phys)
d52 1
d69 1
a69 1
	ga.ga_slot = &sc->sc_slot;	/* XXX */
@
