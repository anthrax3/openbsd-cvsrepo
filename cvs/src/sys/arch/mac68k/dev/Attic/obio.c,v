head	1.8;
access;
symbols
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.16
	OPENBSD_5_0:1.7.0.14
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.12
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.10
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.8
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.4
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.10
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.8
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.6
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.5.0.16
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.26
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.24
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.22
	OPENBSD_2_9_BASE:1.4
	NIKLAS_UNDEAD:1.4.0.20
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2012.06.20.18.23.51;	author matthew;	state dead;
branches;
next	1.7;

1.7
date	2008.06.26.05.42.12;	author ray;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.21.18.52.28;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.35;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.03.12.13.36.58;	author briggs;	state Exp;
branches
	1.4.14.1
	1.4.26.1;
next	1.3;

1.3
date	97.03.08.16.16.57;	author briggs;	state Exp;
branches;
next	1.2;

1.2
date	97.01.24.01.35.36;	author briggs;	state Exp;
branches;
next	1.1;

1.1
date	96.05.26.19.02.08;	author briggs;	state Exp;
branches;
next	;

1.4.14.1
date	2002.03.28.10.34.05;	author niklas;	state Exp;
branches;
next	;

1.4.26.1
date	2002.06.11.03.36.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@RIP mac68k.  No one loves you anymore.
@
text
@/*	$OpenBSD: obio.c,v 1.7 2008/06/26 05:42:12 ray Exp $	*/
/*	$NetBSD: obio.c,v 1.7 1997/02/13 19:01:07 scottr Exp $	*/

/*
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to the NetBSD Foundation
 * by Jason R. Thorpe.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <machine/bus.h>

#include <mac68k/dev/obiovar.h>

static int	obio_match(struct device *, void *, void *);
static void	obio_attach(struct device *, struct device *, void *);
static int	obio_print(void *, const char *);
static int	obio_search(struct device *, void *, void *);

struct cfattach obio_ca = {
	sizeof(struct device), obio_match, obio_attach
};

struct cfdriver obio_cd = {
	NULL, "obio", DV_DULL
};

static int
obio_match(parent, vcf, aux)
	struct device *parent;
	void *vcf;
	void *aux;
{
	static int obio_matched = 0;

	/* Allow only one instance. */
	if (obio_matched)
		return (0);

	obio_matched = 1;
	return (1);
}

static void
obio_attach(parent, self, aux)
	struct device *parent;
	struct device *self;
	void *aux;
{
	printf("\n");

	/* Search for and attach children. */
	(void)config_search(obio_search, self, aux);
}

int
obio_print(args, name)
	void *args;
	const char *name;
{
	struct obio_attach_args *oa = (struct obio_attach_args *)args;

	if (oa->oa_addr != (-1))
		printf(" addr %x", oa->oa_addr);

	return (UNCONF);
}

int
obio_search(parent, vcf, aux)
	struct device *parent;
	void *vcf;
	void *aux;
{
	struct obio_attach_args oa;
	struct cfdata	*cf = (struct cfdata *) vcf;

	oa.oa_addr = cf->cf_loc[0];
	oa.oa_tag = MAC68K_BUS_SPACE_MEM;

	if ((*cf->cf_attach->ca_match)(parent, cf, &oa) > 0)
		config_attach(parent, cf, &oa, obio_print);

	return (0);
}
@


1.7
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: obio.c,v 1.6 2005/12/21 18:52:28 miod Exp $	*/
@


1.6
log
@Simplify obio stanzas and remove unused locators.
@
text
@d1 1
a1 1
/*	$OpenBSD: obio.c,v 1.5 2002/03/14 01:26:35 millert Exp $	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: obio.c,v 1.4 1997/03/12 13:36:58 briggs Exp $	*/
a111 2
	oa.oa_drq = cf->cf_loc[1];
	oa.oa_hsk = cf->cf_loc[2];
@


1.4
log
@Remove some more warnings left over from NetBSD's new config.
@
text
@d1 1
a1 1
/*	$OpenBSD: obio.c,v 1.3 1997/03/08 16:16:57 briggs Exp $	*/
d48 4
a51 4
static int	obio_match __P((struct device *, void *, void *));
static void	obio_attach __P((struct device *, struct device *, void *));
static int	obio_print __P((void *, const char *));
static int	obio_search __P((struct device *, void *, void *));
@


1.4.26.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: obio.c,v 1.4 1997/03/12 13:36:58 briggs Exp $	*/
d48 4
a51 4
static int	obio_match(struct device *, void *, void *);
static void	obio_attach(struct device *, struct device *, void *);
static int	obio_print(void *, const char *);
static int	obio_search(struct device *, void *, void *);
@


1.4.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d48 4
a51 4
static int	obio_match(struct device *, void *, void *);
static void	obio_attach(struct device *, struct device *, void *);
static int	obio_print(void *, const char *);
static int	obio_search(struct device *, void *, void *);
@


1.3
log
@Sync with NetBSD of about 4 March.
@
text
@d1 1
a1 1
/*	$OpenBSD: obio.c,v 1.2 1997/01/24 01:35:36 briggs Exp $	*/
d48 1
a48 1
static int	obio_match __P((struct device *, struct cfdata *, void *));
d51 1
a51 1
static int	obio_search __P((struct device *, struct cfdata *, void *));
d62 1
a62 1
obio_match(parent, cf, aux)
d64 1
a64 1
	struct cfdata *cf;
d103 1
a103 1
obio_search(parent, cf, aux)
d105 1
a105 1
	struct cfdata *cf;
d109 1
@


1.2
log
@Sync w/ NETBSD_CURRENT_971122.
@
text
@d1 2
a2 2
/*	$OpenBSD: obio.c,v 1.1 1996/05/26 19:02:08 briggs Exp $	*/
/*	$NetBSD: obio.c,v 1.5 1996/12/17 06:47:37 scottr Exp $	*/
d44 2
d86 1
a86 1
	(void) config_search(obio_search, self, aux);
d94 1
a94 1
	struct obio_attach_args *oa = (struct obio_attach_args *) args;
d96 2
a97 2
	if (oa->oa_addr)
		printf(" addr %p", oa->oa_addr);
d110 5
a114 1
	bzero(&oa, sizeof(oa));
d117 1
@


1.1
log
@Missed a few files in the previous updates.
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: obio.c,v 1.1 1996/05/05 06:17:07 briggs Exp $	*/
d5 1
a5 2
 * Copyright (c) 1994 Gordon W. Ross
 * Copyright (c) 1993 Adam Glass
d8 3
d21 5
a25 3
 *	This product includes software developed by Adam Glass and Gordon Ross.
 * 4. The name of the authors may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d27 11
a37 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d44 1
a44 2
#include <machine/autoconf.h>
#include <machine/pte.h>
d46 4
a49 2
static int  obio_match __P((struct device *, void *, void *));
static void obio_attach __P((struct device *, struct device *, void *));
d60 1
a60 1
obio_match(parent, vcf, aux)
d62 2
a63 1
	void *vcf, *aux;
d65 1
a65 1
	struct confargs *ca = aux;
d67 2
a68 1
	if (ca->ca_bustype != BUS_OBIO)
d70 3
a72 1
	return(1);
d83 29
a111 1
	(void) config_search(bus_scan, self, aux);
@
