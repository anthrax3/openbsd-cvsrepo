head	1.6;
access;
symbols
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.22
	OPENBSD_5_0:1.5.0.20
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.18
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.16
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.12
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.14
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.10
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.8
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.26
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.24
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.22
	OPENBSD_2_9_BASE:1.2
	NIKLAS_UNDEAD:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.14
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.6
date	2012.06.20.18.23.51;	author matthew;	state dead;
branches;
next	1.5;

1.5
date	2007.01.22.13.17.45;	author martin;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.26.21.21.24;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.35;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.03.25.04.58.44;	author briggs;	state Exp;
branches
	1.2.14.1
	1.2.26.1;
next	1.1;

1.1
date	97.03.08.16.16.53;	author briggs;	state Exp;
branches;
next	;

1.2.14.1
date	2002.03.28.10.34.04;	author niklas;	state Exp;
branches;
next	;

1.2.26.1
date	2002.06.11.03.36.18;	author art;	state Exp;
branches;
next	;


desc
@@


1.6
log
@RIP mac68k.  No one loves you anymore.
@
text
@/*	$OpenBSD: if_aevar.h,v 1.5 2007/01/22 13:17:45 martin Exp $	*/
/*	$NetBSD: if_aevar.h,v 1.10 2005/12/11 12:18:02 christos Exp $	*/

/*
 * Device driver for National Semiconductor DS8390/WD83C690 based ethernet
 * adapters.
 *
 * Copyright (c) 1994, 1995 Charles M. Hannum.  All rights reserved.
 *
 * Copyright (C) 1993, David Greenman.  This software may be used, modified,
 * copied, distributed, and sold, in both source and binary form provided that
 * the above copyright and these terms are retained.  Under no circumstances is
 * the author responsible for the proper functioning of this software, nor does
 * the author assume any responsibility for damages incurred with its use.
 */

int	ae_size_card_memory(bus_space_tag_t, bus_space_handle_t, int);
int	ae_test_mem(struct dp8390_softc *);
int	ae_write_mbuf(struct dp8390_softc *, struct mbuf *, int);
@


1.5
log
@use the MI DP8390 driver instead of rolling our own functions

from NetBSD
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.4
log
@More interrupt system cleaning and homogenization:
- switch all interrupt functions to an int (*)(void *) prototype.
- do not register dummy functions for all unhandled interrupts, instead
  let the dispatchers cope with NULL.
- add evcount interrupt counters.
@
text
@d1 2
a2 2
/*	$NetBSD: if_aevar.h,v 1.7 1997/03/19 08:04:40 scottr Exp $	*/
/*	$OpenBSD: if_aevar.h,v 1.3 2002/03/14 01:26:35 millert Exp $	*/
a14 2
 *
 * Adapted for MacBSD by Brad Parker <brad@@fcr.com>.
d17 3
a19 56
#define INTERFACE_NAME_LEN	32

/*
 * ae_softc: per line info and status
 */
struct ae_softc {
	struct device	sc_dev;
	bus_space_tag_t	sc_regt;	/* NIC register space tag */
	bus_space_handle_t sc_regh;	/* NIC register space handle */
	bus_space_tag_t	sc_buft;	/* Buffer space tag */
	bus_space_handle_t sc_bufh;	/* Buffer space handle */

	bus_size_t	sc_reg_map[16];	/* register map (offsets) */

/*	struct	intrhand sc_ih;	*/

	struct arpcom sc_arpcom;/* ethernet common */
	int	sc_flags;	/* interface flags, from config */

	char	type_str[INTERFACE_NAME_LEN];	/* type string */
	u_int	type;		/* interface type code */
	u_int	vendor;		/* interface vendor */
	u_int	use16bit;	/* use word-width transfers */
	u_int8_t cr_proto;	/* values always set in CR */

	int	mem_size;	/* total shared memory size */
	int	mem_ring;	/* start of RX ring-buffer (in smem) */

	u_short	txb_cnt;	/* Number of transmit buffers */
	u_short	txb_inuse;	/* Number of transmit buffers active */
	u_short	txb_new;	/* pointer to where new buffer will be added */
	u_short	txb_next_tx;	/* pointer to next buffer ready to xmit */
	u_short	txb_len[8];	/* buffered xmit buffer lengths */
	u_short	tx_page_start;	/* first page of TX buffer area */
	u_short	rec_page_start;	/* first page of RX ring-buffer */
	u_short	rec_page_stop;	/* last page of RX ring-buffer */
	u_short	next_packet;	/* pointer to next unread RX packet */
};

int	ae_size_card_memory(
	    bus_space_tag_t, bus_space_handle_t, int);

int	aesetup(struct ae_softc *);
int	aeintr(void *);
int	aeioctl(struct ifnet *, u_long, caddr_t);
void	aestart(struct ifnet *);
void	aewatchdog(struct ifnet *);
void	aereset(struct ae_softc *);
void	aeinit(struct ae_softc *);
void	aestop(struct ae_softc *);

void	aeread(struct ae_softc *, int, int);
struct mbuf *aeget(struct ae_softc *, int, int);

int	ae_put(struct ae_softc *, struct mbuf *, int);
void	ae_getmcaf(struct arpcom *, u_char *);
@


1.3
log
@First round of __P removal in sys
@
text
@d2 1
a2 1
/*	$OpenBSD: if_aevar.h,v 1.2 1997/03/25 04:58:44 briggs Exp $	*/
d62 1
a62 1
void	aeintr(void *, int);
@


1.2
log
@From scottr@@netbsd.org:
Several more changes to move us toward MI-ness:

 - Use more consistent and portable types in the softc.
 - Map registers using an array of bus_size_t offsets, and set up the
   mapping in the attach code (thanks to Jason Thorpe for suggesting
   this!).
 - Disable the ae-specific watchdog, which is no longer necessary in
   the general case.

Still remaining:  split out functions used to copy data to/from the
card, and retain a way to have a local driver name with the MI code.
@
text
@d2 1
a2 1
/*	$OpenBSD$	*/
d58 2
a59 2
int	ae_size_card_memory __P((
	    bus_space_tag_t, bus_space_handle_t, int));
d61 8
a68 8
int	aesetup __P((struct ae_softc *));
void	aeintr __P((void *, int));
int	aeioctl __P((struct ifnet *, u_long, caddr_t));
void	aestart __P((struct ifnet *));
void	aewatchdog __P((struct ifnet *));
void	aereset __P((struct ae_softc *));
void	aeinit __P((struct ae_softc *));
void	aestop __P((struct ae_softc *));
d70 2
a71 2
void	aeread __P((struct ae_softc *, int, int));
struct mbuf *aeget __P((struct ae_softc *, int, int));
d73 2
a74 2
int	ae_put __P((struct ae_softc *, struct mbuf *, int));
void	ae_getmcaf __P((struct arpcom *, u_char *));
@


1.2.26.1
log
@Sync UBC branch to -current
@
text
@d2 1
a2 1
/*	$OpenBSD: if_aevar.h,v 1.2 1997/03/25 04:58:44 briggs Exp $	*/
d58 2
a59 2
int	ae_size_card_memory(
	    bus_space_tag_t, bus_space_handle_t, int);
d61 8
a68 8
int	aesetup(struct ae_softc *);
void	aeintr(void *, int);
int	aeioctl(struct ifnet *, u_long, caddr_t);
void	aestart(struct ifnet *);
void	aewatchdog(struct ifnet *);
void	aereset(struct ae_softc *);
void	aeinit(struct ae_softc *);
void	aestop(struct ae_softc *);
d70 2
a71 2
void	aeread(struct ae_softc *, int, int);
struct mbuf *aeget(struct ae_softc *, int, int);
d73 2
a74 2
int	ae_put(struct ae_softc *, struct mbuf *, int);
void	ae_getmcaf(struct arpcom *, u_char *);
@


1.2.14.1
log
@Merge in -current from about a week ago
@
text
@d58 2
a59 2
int	ae_size_card_memory(
	    bus_space_tag_t, bus_space_handle_t, int);
d61 8
a68 8
int	aesetup(struct ae_softc *);
void	aeintr(void *, int);
int	aeioctl(struct ifnet *, u_long, caddr_t);
void	aestart(struct ifnet *);
void	aewatchdog(struct ifnet *);
void	aereset(struct ae_softc *);
void	aeinit(struct ae_softc *);
void	aestop(struct ae_softc *);
d70 2
a71 2
void	aeread(struct ae_softc *, int, int);
struct mbuf *aeget(struct ae_softc *, int, int);
d73 2
a74 2
int	ae_put(struct ae_softc *, struct mbuf *, int);
void	ae_getmcaf(struct arpcom *, u_char *);
@


1.1
log
@Sync with NetBSD of about 4 March.
@
text
@d1 2
a2 1
/*	$NetBSD: if_aevar.h,v 1.5 1997/02/28 08:56:07 scottr Exp $	*/
d31 2
d39 4
a42 6
	u_short	type;		/* interface type code */
	u_char	vendor;		/* interface vendor */
	u_char	regs_rev;	/* registers are reversed */
	u_char	use16bit;	/* use word-width transfers */

	u_char  cr_proto;	/* values always set in CR */
d47 9
a55 10
	u_char  txb_cnt;	/* Number of transmit buffers */
	u_char  txb_inuse;	/* number of transmit buffers active */

	u_char  txb_new;	/* pointer to where new buffer will be added */
	u_char  txb_next_tx;	/* pointer to next buffer ready to xmit */
	u_short txb_len[8];	/* buffered xmit buffer lengths */
	u_char  tx_page_start;	/* first page of TX buffer area */
	u_char  rec_page_start;	/* first page of RX ring-buffer */
	u_char  rec_page_stop;	/* last page of RX ring-buffer */
	u_char  next_packet;	/* pointer to next unread RX packet */
@
