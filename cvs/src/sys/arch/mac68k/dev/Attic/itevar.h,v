head	1.5;
access;
symbols
	OPENBSD_3_8:1.4.0.14
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.12
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.10
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.4
	UBC:1.2.0.26
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.24
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.22
	OPENBSD_2_9_BASE:1.2
	NIKLAS_UNDEAD:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.14
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2006.01.04.20.39.05;	author miod;	state dead;
branches;
next	1.4;

1.4
date	2002.06.11.05.13.37;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.35;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.04.08.04.41.27;	author briggs;	state Exp;
branches
	1.2.14.1
	1.2.26.1;
next	1.1;

1.1
date	96.05.26.19.02.07;	author briggs;	state Exp;
branches;
next	;

1.2.14.1
date	2002.03.28.10.34.05;	author niklas;	state Exp;
branches;
next	1.2.14.2;

1.2.14.2
date	2003.03.27.23.28.43;	author niklas;	state Exp;
branches;
next	;

1.2.26.1
date	2002.06.11.03.36.19;	author art;	state Exp;
branches;
next	1.2.26.2;

1.2.26.2
date	2002.10.29.00.28.05;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Import NetBSD's direct adb code on mac68k, switching to real keyboard and mouse
drivers, and to wscons as the console; a few parts borrowed from OpenBSD/macppc
as well.

Currently only working with displays configured in 1bpp or 8bpp modes; this
limitation will be worked on ASAP.

Tested by claudio@@ kettenis@@ martin@@ nick@@ and I on various models. X11 changes
coming soon.
@
text
@/*	$OpenBSD: itevar.h,v 1.4 2002/06/11 05:13:37 miod Exp $	*/
/*	$NetBSD: itevar.h,v 1.1 1996/05/05 06:16:49 briggs Exp $	*/

/*
 * Copyright (c) 1995 Allen Briggs.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Allen Briggs.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <machine/adbsys.h>

int	ite_intr(adb_event_t *event);
int	iteon(dev_t dev, int flags);
int	iteoff(dev_t dev, int flags);
void	itereset(void);

#ifndef CN_DEAD
#include <dev/cons.h>
#endif

void	itestop(struct tty * tp, int flag);
void	itestart(register struct tty * tp);
int	iteopen(dev_t dev, int mode, int devtype, struct proc * p);
int	iteclose(dev_t dev, int flag, int mode, struct proc * p);
int	iteread(dev_t dev, struct uio * uio, int flag);
int	itewrite(dev_t dev, struct uio * uio, int flag);
int	iteioctl(dev_t, int, caddr_t, int, struct proc *);
struct tty	*itetty(dev_t dev);

int	itecnprobe(struct consdev * cp);
int	itecninit(struct consdev * cp);
int	itecngetc(dev_t dev);
void	itecnputc(dev_t dev, int c);
@


1.4
log
@cnputc() routines are void, not int.
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.3 2002/03/14 01:26:35 millert Exp $	*/
@


1.3
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.2 1997/04/08 04:41:27 briggs Exp $	*/
d56 1
a56 1
int	itecnputc(dev_t dev, int c);
@


1.2
log
@Changes from Michael R. Zucca <mrz5149@@cs.rit.edu> for 16-bit and 32-bit
console support.
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.1 1996/05/26 19:02:07 briggs Exp $	*/
d35 4
a38 4
int	ite_intr __P((adb_event_t *event));
int	iteon __P((dev_t dev, int flags));
int	iteoff __P((dev_t dev, int flags));
void	itereset __P((void));
d44 13
a56 13
void	itestop __P((struct tty * tp, int flag));
void	itestart __P((register struct tty * tp));
int	iteopen __P((dev_t dev, int mode, int devtype, struct proc * p));
int	iteclose __P((dev_t dev, int flag, int mode, struct proc * p));
int	iteread __P((dev_t dev, struct uio * uio, int flag));
int	itewrite __P((dev_t dev, struct uio * uio, int flag));
int	iteioctl __P((dev_t, int, caddr_t, int, struct proc *));
struct tty	*itetty __P((dev_t dev));

int	itecnprobe __P((struct consdev * cp));
int	itecninit __P((struct consdev * cp));
int	itecngetc __P((dev_t dev));
int	itecnputc __P((dev_t dev, int c));
@


1.2.26.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.2 1997/04/08 04:41:27 briggs Exp $	*/
d35 4
a38 4
int	ite_intr(adb_event_t *event);
int	iteon(dev_t dev, int flags);
int	iteoff(dev_t dev, int flags);
void	itereset(void);
d44 13
a56 13
void	itestop(struct tty * tp, int flag);
void	itestart(register struct tty * tp);
int	iteopen(dev_t dev, int mode, int devtype, struct proc * p);
int	iteclose(dev_t dev, int flag, int mode, struct proc * p);
int	iteread(dev_t dev, struct uio * uio, int flag);
int	itewrite(dev_t dev, struct uio * uio, int flag);
int	iteioctl(dev_t, int, caddr_t, int, struct proc *);
struct tty	*itetty(dev_t dev);

int	itecnprobe(struct consdev * cp);
int	itecninit(struct consdev * cp);
int	itecngetc(dev_t dev);
int	itecnputc(dev_t dev, int c);
@


1.2.26.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: itevar.h,v 1.2.26.1 2002/06/11 03:36:19 art Exp $	*/
d56 1
a56 1
void	itecnputc(dev_t dev, int c);
@


1.2.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d35 4
a38 4
int	ite_intr(adb_event_t *event);
int	iteon(dev_t dev, int flags);
int	iteoff(dev_t dev, int flags);
void	itereset(void);
d44 13
a56 13
void	itestop(struct tty * tp, int flag);
void	itestart(register struct tty * tp);
int	iteopen(dev_t dev, int mode, int devtype, struct proc * p);
int	iteclose(dev_t dev, int flag, int mode, struct proc * p);
int	iteread(dev_t dev, struct uio * uio, int flag);
int	itewrite(dev_t dev, struct uio * uio, int flag);
int	iteioctl(dev_t, int, caddr_t, int, struct proc *);
struct tty	*itetty(dev_t dev);

int	itecnprobe(struct consdev * cp);
int	itecninit(struct consdev * cp);
int	itecngetc(dev_t dev);
int	itecnputc(dev_t dev, int c);
@


1.2.14.2
log
@Sync the SMP branch with 3.3
@
text
@d56 1
a56 1
void	itecnputc(dev_t dev, int c);
@


1.1
log
@Missed a few files in the previous updates.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 1
@
