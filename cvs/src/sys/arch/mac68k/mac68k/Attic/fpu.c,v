head	1.12;
access;
symbols
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	UBC_SYNC_A:1.12
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.12
	UBC:1.10.0.22
	UBC_BASE:1.10
	OPENBSD_3_0:1.10.0.20
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.18
	OPENBSD_2_9_BASE:1.10
	NIKLAS_UNDEAD:1.10.0.16
	OPENBSD_2_8:1.10.0.14
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.12
	OPENBSD_2_7_BASE:1.10
	SMP:1.10.0.10
	SMP_BASE:1.10
	kame_19991208:1.10
	OPENBSD_2_6:1.10.0.8
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.6
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.4
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.9.0.4
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2002.04.16.15.32.59;	author miod;	state dead;
branches;
next	1.11;

1.11
date	2002.03.14.01.26.36;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	98.02.14.09.22.38;	author gene;	state Exp;
branches
	1.10.10.1
	1.10.22.1;
next	1.9;

1.9
date	97.03.12.13.37.00;	author briggs;	state Exp;
branches;
next	1.8;

1.8
date	97.03.11.21.03.04;	author gene;	state Exp;
branches;
next	1.7;

1.7
date	97.01.24.01.35.45;	author briggs;	state Exp;
branches;
next	1.6;

1.6
date	97.01.19.03.58.05;	author briggs;	state Exp;
branches;
next	1.5;

1.5
date	96.10.14.01.15.52;	author briggs;	state Exp;
branches;
next	1.4;

1.4
date	96.06.23.16.00.35;	author briggs;	state Exp;
branches;
next	1.3;

1.3
date	96.05.26.18.36.18;	author briggs;	state Exp;
branches;
next	1.2;

1.2
date	96.05.26.18.14.23;	author briggs;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.07;	author deraadt;	state Exp;
branches;
next	;

1.10.10.1
date	2002.03.28.10.34.05;	author niklas;	state Exp;
branches;
next	1.10.10.2;

1.10.10.2
date	2003.03.27.23.28.44;	author niklas;	state dead;
branches;
next	;

1.10.22.1
date	2002.06.11.03.36.19;	author art;	state dead;
branches;
next	;


desc
@@


1.12
log
@Using a dull device to probe the FPU is ridiculous, replace it with an early
initialization.
While there, rework the cpu_model string creation so that it gets a more
useful content.
@
text
@/*	$OpenBSD: fpu.c,v 1.11 2002/03/14 01:26:36 millert Exp $	*/
/*	$NetBSD: fpu.c,v 1.23 1998/01/12 19:22:22 thorpej Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Gordon W. Ross.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Floating Point Unit (MC68881/882/040)
 * Probe for the FPU at autoconfig time.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/time.h>
#include <sys/kernel.h>
#include <sys/device.h>

#include <machine/psl.h>
#include <machine/cpu.h>
#include <machine/frame.h>

/*
 * FPU type; emulator uses FPU_NONE
 */
int     fputype;

extern int *nofault;

static int  fpu_match(struct device *, void *, void *);
static void fpu_attach(struct device *, struct device *, void *);
static int  fpu_probe(void);

struct cfattach fpu_ca = {
	sizeof(struct device), fpu_match, fpu_attach
};

struct cfdriver fpu_cd = {
	NULL, "fpu", DV_DULL, 0
};

static int
fpu_match(parent, vcf, aux)
	struct device *parent;
	void *vcf;
	void *aux;
{
	return 1;
}

static char *fpu_descr[] = {
#ifdef	FPU_EMULATE
	"emulator", 		/* 0 */
#else
	"no math support",	/* 0 */
#endif
	"mc68881",			/* 1 */
	"mc68882",			/* 2 */
	"mc68040",			/* 3 */
	"mc68060",			/* 4 */
	"unknown" };

static void
fpu_attach(parent, self, args)
	struct device *parent;
	struct device *self;
	void *args;
{
	char *descr;

	fputype = fpu_probe();
	if ((0 <= fputype) && (fputype <= 3))
		descr = fpu_descr[fputype];
	else
		descr = "unknown type";

	printf(" (%s)\n", descr);
}

static int
fpu_probe()
{
	/*
	 * A 68881 idle frame is 28 bytes and a 68882's is 60 bytes.
	 * We, of course, need to have enough room for either.
	 */
	int	fpframe[60 / sizeof(int)];
	label_t	faultbuf;
	u_char	b;

	nofault = (int *) &faultbuf;
	if (setjmp(&faultbuf)) {
		nofault = (int *) 0;
		return (FPU_NONE);
	}

	/*
	 * Synchronize FPU or cause a fault.
	 * This should leave the 881/882 in the IDLE state,
	 * state, so we can determine which we have by
	 * examining the size of the FP state frame
	 */
	asm("fnop");

	nofault = (int *) 0;

	/*
	 * Presumably, if we're an 040 and did not take exception
	 * above, we have an FPU.  Don't bother probing.
	 */
	if (mmutype == MMU_68040)
		return (FPU_68040);

	/*
	 * Presumably, this will not cause a fault--the fnop should
	 * have if this will.  We save the state in order to get the
	 * size of the frame.
	 */
	asm("movl %0, a0; fsave a0@@" : : "a" (fpframe) : "a0" );

	b = *((u_char *) fpframe + 1);

	/*
	 * Now, restore a NULL state to reset the FPU.
	 */
	fpframe[0] = fpframe[1] = 0;
	m68881_restore((struct fpframe *) fpframe);

	/*
	 * The size of a 68881 IDLE frame is 0x18
	 *         and a 68882 frame is 0x38
	 */
	if (b == 0x18)
		return (FPU_68881);
	if (b == 0x38)
		return (FPU_68882);

	/*
	 * If it's not one of the above, we have no clue what it is.
	 */
	return (FPU_UNKNOWN);
}
@


1.11
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.10 1998/02/14 09:22:38 gene Exp $	*/
@


1.10
log
@NetBSD sync: knf & __asm -> asm()
Pointed do not merge *_match() semantics as we haven't changed those.
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.9 1997/03/12 13:37:00 briggs Exp $	*/
d62 3
a64 3
static int  fpu_match __P((struct device *, void *, void *));
static void fpu_attach __P((struct device *, struct device *, void *));
static int  fpu_probe __P((void));
@


1.10.22.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.10 1998/02/14 09:22:38 gene Exp $	*/
@


1.10.10.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d62 3
a64 3
static int  fpu_match(struct device *, void *, void *);
static void fpu_attach(struct device *, struct device *, void *);
static int  fpu_probe(void);
@


1.10.10.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.10.10.1 2002/03/28 10:34:05 niklas Exp $	*/
@


1.9
log
@Remove some more warnings left over from NetBSD's new config.
@
text
@d1 2
a2 2
/*	$OpenBSD: fpu.c,v 1.8 1997/03/11 21:03:04 gene Exp $	*/
/*	$NetBSD: fpu.c,v 1.21 1996/12/16 16:17:16 scottr Exp $	*/
d30 2
a31 2
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
d135 1
a135 1
	__asm("fnop");
d151 1
a151 1
	__asm("movl %0, a0; fsave a0@@" : : "a" (fpframe) : "a0" );
@


1.8
log
@Second parameter of *match functions should be void (thank you ISA bus) and
*stop functions return int's under OpenBSD.  This cleans up a
bunch of compile-time warnings for the mac68k.
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.7 1997/01/24 01:35:45 briggs Exp $	*/
d75 1
a75 1
fpu_match(parent, cf, aux)
d77 1
a77 1
	void *cf;
@


1.7
log
@Sync w/ NETBSD_CURRENT_971122.
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.6 1997/01/19 03:58:05 briggs Exp $	*/
d62 1
a62 1
static int  fpu_match __P((struct device *, struct cfdata *, void *));
d77 1
a77 1
	struct cfdata *cf;
@


1.6
log
@asm -> __asm, inline -> __inline
@
text
@d1 2
a2 2
/*	$OpenBSD: fpu.c,v 1.5 1996/10/14 01:15:52 briggs Exp $	*/
/*	$NetBSD: fpu.c,v 1.16 1996/06/11 02:56:22 scottr Exp $	*/
d4 2
a5 2
/*
 * Copyright (c) 1995 Gordon W. Ross
d8 3
d19 1
a19 3
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 4. All advertising materials mentioning features or use of this software
d21 5
a25 1
 *      This product includes software developed by Gordon Ross
d27 11
a37 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d62 1
a62 1
static int  fpu_match __P((struct device *, void *, void *));
d75 4
a78 3
fpu_match(pdp, match, auxp)
	struct device	*pdp;
	void	*match, *auxp;
@


1.5
log
@From NetBSD--use m68k/cpu.h defines, rename fpu_type to fputype.
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.4 1996/06/23 16:00:35 briggs Exp $	*/
d128 1
a128 1
	asm("fnop");
d144 1
a144 1
	asm("movl %0, a0; fsave a0@@" : : "a" (fpframe) : "a0" );
@


1.4
log
@From scottr/NetBSD:
Fix bounds check for fpu description array.
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu.c,v 1.3 1996/05/26 18:36:18 briggs Exp $	*/
d49 5
a53 1
extern int fpu_type;
d85 2
a86 1
	"?" };
d96 3
a98 3
	fpu_type = fpu_probe();
	if ((0 <= fpu_type) && (fpu_type <= 3))
		descr = fpu_descr[fpu_type];
d119 1
a119 1
		return(0);
d136 2
a137 3
	if (mmutype == MMU_68040) {
		return 3;
	}
d158 4
a161 2
	if (b == 0x18) return 1;
	if (b == 0x38) return 2;
d166 1
a166 1
	return 4;
@


1.3
log
@Add OpenBSD Id string.
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: fpu.c,v 1.15 1996/05/05 17:19:04 briggs Exp $	*/
d92 1
a92 1
	if ((0 <= fpu_type) && (fpu_type <= 2))
@


1.2
log
@Sync with NetBSD-current.
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: fpu.c,v 1.10 1995/08/12 04:10:37 briggs Exp $	*/
a47 2
#include <setjmp.h>

d51 1
a51 1
extern int  matchbyname __P((struct device *, void *, void *));
d55 15
a69 3
struct cfdriver fpucd = {
	NULL, "fpu", matchbyname, fpu_attach,
	DV_DULL, sizeof(struct device), 0 };
a88 1
	int enab_reg;
d107 1
a107 1
	jmp_buf	faultbuf;
d111 1
a111 1
	if (setjmp(faultbuf)) {
d147 1
a147 1
	m68881_restore(fpframe);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
