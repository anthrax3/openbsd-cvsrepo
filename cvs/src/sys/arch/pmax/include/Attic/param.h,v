head	1.12;
access;
symbols
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	UBC_SYNC_A:1.12
	UBC_SYNC_B:1.12
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.14
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.12
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.10
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.8
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.6
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2001.06.24.23.48.20;	author deraadt;	state dead;
branches;
next	1.11;

1.11
date	2001.05.05.20.56.48;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2000.12.28.22.21.46;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2000.07.04.05.46.23;	author maja;	state Exp;
branches;
next	1.8;

1.8
date	97.06.10.14.19.01;	author graichen;	state Exp;
branches
	1.8.12.1
	1.8.14.1;
next	1.7;

1.7
date	97.01.13.10.32.00;	author graichen;	state Exp;
branches;
next	1.6;

1.6
date	96.12.22.15.22.22;	author graichen;	state Exp;
branches;
next	1.5;

1.5
date	96.12.22.15.18.16;	author graichen;	state Exp;
branches;
next	1.4;

1.4
date	96.12.11.11.12.59;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.09.29.11.36.33;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.09.15.21.12.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.30;	author deraadt;	state Exp;
branches;
next	;

1.8.12.1
date	2001.04.18.16.12.45;	author niklas;	state Exp;
branches;
next	1.8.12.2;

1.8.12.2
date	2001.07.04.10.21.26;	author niklas;	state dead;
branches;
next	;

1.8.14.1
date	2000.07.13.16.05.30;	author jason;	state Exp;
branches;
next	;


desc
@@


1.12
log
@bye bye, with prejudice
@
text
@/*	$OpenBSD: param.h,v 1.11 2001/05/05 20:56:48 art Exp $	*/
/*	$NetBSD: param.h,v 1.18 1997/02/26 01:45:41 jonathan Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department and Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * from: Utah Hdr: machparam.h 1.11 89/08/14
 *
 *	@@(#)param.h	8.1 (Berkeley) 6/10/93
 */

/*
 * Machine-dependent constants (VM, etc) common across MIPS cpus
 */

#include <machine/mips_param.h>

/*
 * Machine dependent constants for DEC Station 3100.
 */

#define	_MACHINE	pmax
#define	MACHINE		"pmax"
#define	_MACHINE_ARCH	mips
#define	MACHINE_ARCH	"mips"
#define	MID_MACHINE	MID_PMAX

#define	KERNBASE	0x80000000	/* start of kernel virtual */
#define KERNTEXTOFF	0x80030000	/* start of kernel text for kvm_mkdb */
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)

#define	DEV_BSIZE	512
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define BLKDEV_IOSIZE	2048
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */

#define	SSIZE		1		/* initial stack size/NBPG */
#define	SINCR		1		/* increment of stack/NBPG */

#define	UPAGES		2		/* pages of u-area */
#define	UADDR		(-0x3000)	/* address of u */
#define USPACE          (UPAGES*NBPG)   /* size of u-area in bytes */
#define	KERNELSTACK	(UADDR+UPAGES*NBPG)	/* top of kernel stack */

/*
 * Constants related to network buffer management.
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
 */
#define	MSIZE		128		/* size of an mbuf */
#ifndef MCLSHIFT

# define	MCLSHIFT	11      /* convert bytes to m_buf clusters */
                                        /* 2K cluster can hold Ether frame */
#endif  /* MCLSHIFT */

#define	MCLBYTES	(1 << MCLSHIFT)	/* size of a m_buf cluster */
#define	MCLOFSET	(MCLBYTES - 1)

#ifndef NMBCLUSTERS
#ifdef GATEWAY
#define	NMBCLUSTERS	2048		/* map size, max cluster allocation */
#else
#define	NMBCLUSTERS	1024		/* map size, max cluster allocation */
#endif
#endif

#define MSGBUFSIZE	NBPG

#ifdef _KERNEL
#ifndef _LOCORE
extern int cpuspeed;
#define	DELAY(n)	{ register int N = cpuspeed * (n); while (--N > 0); }
#endif
#endif /* !_KERNEL */
@


1.11
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 2000/12/28 22:21:46 miod Exp $	*/
@


1.10
log
@Define UADDR not as fixed address, but rather as what it really is:
a negative offset relative to the top of the adressing space.

This fixes the miscompilation problems in locore_r2000.S with binutils
2.10.

Tested by maja@@ and myself.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 2000/07/04 05:46:23 maja Exp $	*/
a70 4
#define	CLSIZE		1
#define	CLSIZELOG2	0

/* NOTE: SSIZE, SINCR and UPAGES must be multiples of CLSIZE */
@


1.9
log
@Make dmesg and /kern/msgbuf work on pmax. Thanks art@@ for help with mem.c. ok miod@@. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d79 1
a79 1
#define	UADDR		0xffffd000	/* address of u */
a80 1
#define	UVPN		(UADDR>>PGSHIFT)/* virtual page number of u */
@


1.8
log
@update the pmax specific stuff to NetBSD-current as of about 970608 - some
cosmetic things will follow together with an update to an exact NETBSD_CU-
RRENT_xxxxxx level
@
text
@d1 1
d108 2
@


1.8.12.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@a0 1
/*	$OpenBSD: param.h,v 1.10 2000/12/28 22:21:46 miod Exp $	*/
d78 1
a78 1
#define	UADDR		(-0x3000)	/* address of u */
d80 1
a106 2

#define MSGBUFSIZE	NBPG
@


1.8.12.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8.12.1 2001/04/18 16:12:45 niklas Exp $	*/
@


1.8.14.1
log
@Pull in patch from current:
Errata:
As originally shipped, the pmax port would fail to install due to /kern/msgbuf bugs.
Fix (maja):
Make dmesg and /kern/msgbuf work on pmax. Thanks art@@ for help with mem.c. ok miod
@@. -moj
@
text
@a0 1
/*	$OpenBSD: param.h,v 1.9 2000/07/04 05:46:23 maja Exp $	*/
a106 2

#define MSGBUFSIZE	NBPG
@


1.7
log
@<pmax/xxx> -> <machine/xxx>
<mips/xxx> -> <machine/xxx>
... plus missing files from arc
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.17 1996/05/20 10:50:52 jonathan Exp $	*/
d91 7
a97 2
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)	/* enough for whole Ethernet packet */
d99 1
@


1.6
log
@bring back all the local OpenBSD changes to the pmax tree since 961107

i hope that i did'nt break anything of the files required for the alpha
(in the dev dir) niklas :-)
@
text
@d49 1
a49 1
#include <pmax/mips_param.h>
@


1.5
log
@update the pmax stuff to NetBSD 961107 - this version i got somehow
compiled on my decstation 2100 (PLUTO) - but it will not fully work
out of the box - but i want to bring it into the tree because i get
my own pmax on 961228 - so that i have a good startpoint then :-)

all the OpenBSD changes to the pmax tree will follow in the next commit
@
text
@d91 2
a92 2
#define	MCLBYTES	2048		/* enough for whole Ethernet packet */
#define	MCLSHIFT	10
@


1.4
log
@MCLSHIFT=11, and calc MCLBYTES in such terms. found by pefo
@
text
@d91 2
a92 2
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)	/* enough for whole Ethernet packet */
@


1.3
log
@merge mips back into pmax; by graichen
@
text
@d91 2
a92 2
#define	MCLBYTES	2048		/* enough for whole Ethernet packet */
#define	MCLSHIFT	10
@


1.2
log
@sync to netbsd; for graichen
@
text
@d49 1
a49 1
#include <mips/mips_param.h>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.12 1995/07/23 20:11:55 jonathan Exp $	*/
d46 1
a46 1
 * Machine dependent constants for DEC Station 3100.
d48 2
a49 3
#define	MACHINE	     "pmax"
#define MACHINE_ARCH "mips"
#define MID_MACHINE  MID_PMAX
d52 1
a52 3
 * Round p (pointer or byte index) up to a correctly-aligned value for all
 * data types (int, long, ...).   The result is u_int and must be cast to
 * any desired pointer type.
a53 2
#define	ALIGNBYTES	7
#define	ALIGN(p)	(((u_int)(p) + ALIGNBYTES) &~ ALIGNBYTES)
d55 5
a59 8
#define	NBPG		4096		/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */
#define	PGSHIFT		12		/* LOG2(NBPG) */
#define	NPTEPG		(NBPG/4)

#define NBSEG		0x400000	/* bytes/segment */
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */
#define	SEGSHIFT	22		/* LOG2(NBSEG) */
d96 1
a96 1
#define	NMBCLUSTERS	512		/* map size, max cluster allocation */
d98 1
a98 1
#define	NMBCLUSTERS	256		/* map size, max cluster allocation */
a101 35
/*
 * Size of kernel malloc arena in CLBYTES-sized logical pages
 */ 
#ifndef NKMEMCLUSTERS
#define	NKMEMCLUSTERS	(512*1024/CLBYTES)
#endif

/* pages ("clicks") (4096 bytes) to disk blocks */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))

/* pages to bytes */
#define	ctob(x)		((x) << PGSHIFT)
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)

/* bytes to disk blocks */
#define	btodb(x)	((x) >> DEV_BSHIFT)
#define	dbtob(x)	((x) << DEV_BSHIFT)

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))

/*
 * Mach derived conversion macros
 */
#define pmax_round_page(x)	((((unsigned)(x)) + NBPG - 1) & ~(NBPG-1))
#define pmax_trunc_page(x)	((unsigned)(x) & ~(NBPG-1))
#define pmax_btop(x)		((unsigned)(x) >> PGSHIFT)
#define pmax_ptob(x)		((unsigned)(x) << PGSHIFT)

d103 2
a104 11
#ifndef LOCORE
extern int (*Mach_splnet) __P((void)), (*Mach_splbio) __P((void)),
	   (*Mach_splimp) __P((void)), (*Mach_spltty) __P((void)),
	   (*Mach_splclock) __P((void)), (*Mach_splstatclock) __P((void));
#define	splnet()	((*Mach_splnet)())
#define	splbio()	((*Mach_splbio)())
#define	splimp()	((*Mach_splimp)())
#define	spltty()	((*Mach_spltty)())
#define	splclock()	((*Mach_splclock)())
#define	splstatclock()	((*Mach_splstatclock)())
extern	int cpuspeed;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
