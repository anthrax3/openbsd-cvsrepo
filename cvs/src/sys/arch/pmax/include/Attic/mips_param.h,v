head	1.10;
access;
symbols
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	UBC_SYNC_A:1.10
	UBC_SYNC_B:1.10
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.8
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.6
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.4
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2001.06.24.23.48.19;	author deraadt;	state dead;
branches;
next	1.9;

1.9
date	2001.06.24.17.05.41;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.10.22.46.46;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.05.20.56.48;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.06.15.25.04;	author ho;	state Exp;
branches;
next	1.5;

1.5
date	99.03.28.19.09.17;	author deraadt;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	98.03.16.09.59.31;	author graichen;	state Exp;
branches;
next	1.3;

1.3
date	97.07.07.08.23.22;	author graichen;	state Exp;
branches;
next	1.2;

1.2
date	97.06.10.14.19.00;	author graichen;	state Exp;
branches;
next	1.1;

1.1
date	96.09.29.11.36.32;	author deraadt;	state Exp;
branches;
next	;

1.5.6.1
date	2001.04.18.16.12.44;	author niklas;	state Exp;
branches;
next	1.5.6.2;

1.5.6.2
date	2001.07.04.10.21.25;	author niklas;	state dead;
branches;
next	;


desc
@@


1.10
log
@bye bye, with prejudice
@
text
@/*	$NetBSD: mips_param.h,v 1.1 1996/05/19 17:52:18 jonathan Exp $	*/

#ifndef __MIPS_PARAM_H__
#define __MIPS_PARAM_H__

/*
 * Round p (pointer or byte index) up to a correctly-aligned value for all
 * data types (int, long, ...).   The result is u_int and must be cast to
 * any desired pointer type.
 */
#define	ALIGNBYTES	7
#define	ALIGN(p)	(((u_int)(p) + ALIGNBYTES) &~ ALIGNBYTES)
#define ALIGNED_POINTER(p,t)	((((u_long)(p)) & (sizeof(t)-1)) == 0)

#define	NBPG		4096		/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */
#define	PGSHIFT		12		/* LOG2(NBPG) */
#define	NPTEPG		(NBPG/4)

#define	PAGE_SHIFT	12
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SHIFT - 1)

#define NBSEG		0x400000	/* bytes/segment */
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */
#define	SEGSHIFT	22		/* LOG2(NBSEG) */

/*
 * Size of kernel malloc arena in logical pages
 */ 
#ifndef NKMEMCLUSTERS
#define	NKMEMCLUSTERS	(6*1024*1024/PAGE_SIZE)
#endif

/* pages ("clicks") (4096 bytes) to disk blocks */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))

/* pages to bytes */
#define	ctob(x)		((x) << PGSHIFT)
#define btoc(x)		(((x) + PGOFSET) >> PGSHIFT)

/* bytes to disk blocks */
#define	btodb(x)	((x) >> DEV_BSHIFT)
#define dbtob(x)	((x) << DEV_BSHIFT)

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))

/*
 * Mach derived conversion macros
 */
#define mips_round_page(x)	((((unsigned)(x)) + NBPG - 1) & ~(NBPG-1))
#define mips_trunc_page(x)	((unsigned)(x) & ~(NBPG-1))
#define mips_btop(x)		((unsigned)(x) >> PGSHIFT)
#define mips_ptob(x)		((unsigned)(x) << PGSHIFT)

#ifdef _KERNEL
#ifndef _LOCORE
typedef int spl_t;
extern spl_t splx __P((spl_t));
#define spllowersoftclock splsoftclock
extern spl_t splsoftnet __P((void)), splsoftclock __P((void));
extern spl_t splhigh __P((void));
extern spl_t spl0 __P((void));	/* XXX should not enable TC on 3min */

extern void setsoftnet __P((void)), clearsoftnet __P((void));
extern void setsoftclock __P((void)), clearsoftclock __P((void));


extern int (*Mach_splnet) __P((void)), (*Mach_splbio) __P((void)),
	   (*Mach_splimp) __P((void)), (*Mach_spltty) __P((void)),
	   (*Mach_splclock) __P((void)), (*Mach_splstatclock) __P((void)),
	   (*Mach_splnone) __P((void));
#define	splnet()	((*Mach_splnet)())
#define	splbio()	((*Mach_splbio)())
#define	splimp()	((*Mach_splimp)())
#define	splvm()		((*Mach_splimp)())
#define	spltty()	((*Mach_spltty)())
#define	splclock()	((*Mach_splclock)())
#define	splstatclock()	((*Mach_splstatclock)())

extern void wbflush __P ((void));		/* XXX */
extern void delay __P((int n));

#endif	/* _LOCORE */
#endif	/* _KERNEL */

#endif /* __MIPS_PARAM_H__ */
@


1.9
log
@Define splvm() for arches who don't already provide it, with the same
definition as splimp().
art@@ ok
@
text
@@


1.8
log
@Provide PAGE_{MASK,SHIFT,SIZE} constants.
@
text
@d83 1
@


1.7
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d20 4
@


1.6
log
@Add spllowersoftclock(), same as splsoftclock(). (art@@ ok)
@
text
@d25 1
a25 1
 * Size of kernel malloc arena in CLBYTES-sized logical pages
d28 1
a28 1
#define	NKMEMCLUSTERS	(6*1024*1024/CLBYTES)
@


1.5
log
@inclusion protection; fries
@
text
@d63 1
@


1.5.6.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@a62 1
#define spllowersoftclock splsoftclock
@


1.5.6.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@@


1.4
log
@raise NKMEMCLUSTERS a bit to avoid kernel crashes due to kvm shortage
on fat kerneles (often reported in the last time)
@
text
@d3 3
d87 2
@


1.3
log
@set a useful default for NKMEMCLUSTERS here so that we no longer need
to set it in the config file
@
text
@d25 1
a25 1
#define	NKMEMCLUSTERS	(4*1024*1024/CLBYTES)
@


1.2
log
@update the pmax specific stuff to NetBSD-current as of about 970608 - some
cosmetic things will follow together with an update to an exact NETBSD_CU-
RRENT_xxxxxx level
@
text
@d25 1
a25 1
#define	NKMEMCLUSTERS	(512*1024/CLBYTES)
@


1.1
log
@merge mips back into pmax; by graichen
@
text
@d10 1
@

