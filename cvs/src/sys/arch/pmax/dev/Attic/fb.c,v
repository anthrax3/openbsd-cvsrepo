head	1.8;
access;
symbols
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	UBC_SYNC_A:1.8
	UBC_SYNC_B:1.8
	OPENBSD_2_9:1.7.0.4
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	SMP:1.5.0.8
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.6
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2001.06.24.23.47.39;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2000.08.19.18.43.30;	author maja;	state Exp;
branches;
next	1.6;

1.6
date	2000.05.01.22.25.47;	author maja;	state Exp;
branches;
next	1.5;

1.5
date	98.05.09.21.29.43;	author millert;	state Exp;
branches
	1.5.8.1;
next	1.4;

1.4
date	97.06.10.14.18.46;	author graichen;	state Exp;
branches;
next	1.3;

1.3
date	96.12.22.15.17.30;	author graichen;	state Exp;
branches;
next	1.2;

1.2
date	96.09.15.21.12.21;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.26;	author deraadt;	state Exp;
branches;
next	;

1.5.8.1
date	2001.04.18.16.12.40;	author niklas;	state Exp;
branches;
next	1.5.8.2;

1.5.8.2
date	2001.07.04.10.20.50;	author niklas;	state dead;
branches;
next	;


desc
@@


1.8
log
@bye bye, with prejudice
@
text
@/*	$OpenBSD: fb.c,v 1.7 2000/08/19 18:43:30 maja Exp $	*/
/*	$NetBSD: fb.c,v 1.19 1997/05/24 08:19:50 jonathan Exp $	*/

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell and Rick Macklem.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)fb.c	8.1 (Berkeley) 6/10/93
 */

/* 
 *  devGraphics.c --
 *
 *     	This file contains machine-dependent routines for the graphics device.
 *
 *	Copyright (C) 1989 Digital Equipment Corporation.
 *	Permission to use, copy, modify, and distribute this software and
 *	its documentation for any purpose and without fee is hereby granted,
 *	provided that the above copyright notice appears in all copies.  
 *	Digital Equipment Corporation makes no representations about the
 *	suitability of this software for any purpose.  It is provided "as is"
 *	without express or implied warranty.
 *
 * from: Header: /sprite/src/kernel/dev/ds3100.md/RCS/devGraphics.c,
 *	v 9.2 90/02/13 22:16:24 shirriff Exp  SPRITE (DECWRL)";
 */

/*
 * This file has all the routines common to the various frame buffer drivers
 * including a generic ioctl routine. The pmax_fb structure is passed into the
 * routines and has device specifics stored in it.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/ioctl.h>
#include <sys/device.h>
#include <sys/poll.h>
#include <sys/tty.h>
#include <sys/time.h>
#include <sys/kernel.h>
#include <sys/ioctl.h>
#include <sys/file.h>
#include <sys/vnode.h>
#include <sys/errno.h>
#include <sys/proc.h>
#include <sys/mman.h>
#include <sys/syslog.h>

#include <vm/vm.h>
#include <miscfs/specfs/specdev.h>

#include <machine/autoconf.h>
#include <sys/conf.h>
#include <machine/conf.h>

#include <machine/cpuregs.h>		/* mips cached->uncached */
#include <machine/pmioctl.h>

#include <machine/fbio.h>
#include <machine/fbvar.h>
#include <pmax/dev/fbreg.h>
#include <pmax/dev/qvssvar.h>


#include <pmax/stand/dec_prom.h>

#include <pmax/pmax/cons.h>
#include <pmax/pmax/pmaxtype.h>

#include "rasterconsole.h"

#include "dz_ioasic.h"
#include "dz_ds.h"
#include "scc.h"
#include "dtop.h"

/*
 * This framebuffer driver is a generic driver for all supported
 * framebuffers on NetBSD/pmax.  The match and attach functions call
 * out to probe/init functions in subdrivers for each specific baseboard or
 * expansion  bus framebuffers. The driver softc are maintained here, as
 * are the handlers for user-level requests (open/ioctl/close).
 *
 * Hardware dependencies are handled by calls through the "fbdriver"
 * method table, which the subdriver 
 */

/* qvss/pm compatible and old 4.4bsd/pmax driver functions */

extern int pmax_boardtype;

extern void fbScreenInit __P (( struct fbinfo *fi));


#if (NDZ_DS > 0) || (NDZ_IOASIC > 0)
#include <machine/dc7085cons.h>
#include <pmax/dev/dzvar.h>
#endif

#if NDTOP > 0
#include <pmax/dev/dtopvar.h>
#endif

#if NSCC > 0
#include <pmax/tc/sccvar.h>
#endif

/*
 * LK-201 and successor keycode mapping 
*/
#include <pmax/dev/lk201var.h>

extern void rcons_connect __P((struct fbinfo *info));	/* XXX */

/*
 * The "blessed" framebuffer; the fb that gets
 * the qvss-style ring buffer of mouse/kbd events, and is used
 * for glass-tty fb console output.
 */
struct fbinfo *firstfi = NULL;

/*
 * The default cursor.
 */
u_short defCursor[32] = { 
/* plane A */ 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF,
	      0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF,
/* plane B */ 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF,
              0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF

};

 
/*
 * Pro-tem framebuffer pseudo-device driver
 */

#include <sys/device.h>
#include "fb.h"


static struct {
	struct fbinfo *cd_devs[NFB];
	int cd_ndevs;
} fbcd =   { {NULL}, 0} ;

void fbattach __P((int n));



/*
 * attach routine: required for pseudo-device
 */
void
fbattach(n)
	int n;
{
	/* allocate space  for n framebuffers... */
}

/*
 * Connect a framebuffer, described by a struct fbinfo, to the 
 * raster-console pseudo-device subsystem. )This would be done
 * with BStreams, if only we had them.)
 */
void
fbconnect (name, info, silent)
	char *name;
	struct fbinfo *info;
	int silent;
{
	int fbix;
	static int first = 1;

#ifndef FBDRIVER_DOES_ATTACH
	/*
	 * See if we've already configured this frame buffer;
	 * if not, find an "fb" pseudo-device entry for it.
	 */
	for (fbix = 0; fbix < fbcd.cd_ndevs; fbix++)
		if ((fbcd.cd_devs [fbix]->fi_type.fb_boardtype
		     == info -> fi_type.fb_boardtype)
		    && fbcd.cd_devs [fbix]->fi_unit == info -> fi_unit)
			goto got_it;
			
	if (fbcd.cd_ndevs >= NFB) {
		printf ("fb: more frame buffers probed than configured!\n");
		return;
	}

	fbix = fbcd.cd_ndevs++;
	fbcd.cd_devs [fbix] = info;
#endif /* FBDRIVER_DOES_ATTACH */

	/*
	 * If this is the first frame buffer we've seen, pass it to rcons.
	 */
	if (first) {
		extern dev_t cn_in_dev;	/* XXX rcons hackery */

		/* Only the first fb gets 4.4bsd/pmax style event ringbuffer */
		firstfi = info;
#if NRASTERCONSOLE > 0
		/*XXX*/ cn_in_dev = cn_tab->cn_dev; /*XXX*/ /* FIXME */
		rcons_connect (info);
#endif  /* NRASTERCONSOLE */
		first = 0;
	}

got_it:
	if (!silent)
		printf (" (%dx%dx%d)%s",
			info -> fi_type.fb_width,
			info -> fi_type.fb_height,
			info -> fi_type.fb_depth,
			(fbix ? ""
			 : ((cn_tab -> cn_pri == CN_REMOTE)
			    ? "" : " (console)")));
	return;
}


#include "fb_usrreq.c"	/* old pm-compatblie driver that supports X11R5 */


/*
 * Configure the keyboard/mouse based on machine type for turbochannel
 * display boards.
 */
int
tb_kbdmouseconfig(fi)
	struct fbinfo *fi;
{

	if (fi == NULL || fi->fi_glasstty == NULL) {
#if defined(DEBUG) || defined(DIAGNOSTIC)
		printf("tb_kbdmouseconfig: given non-console framebuffer\n");
#endif
		return 1;
	}

	switch (pmax_boardtype) {

#if (NDZ_DS > 0) || (NDZ_IOASIC > 0)
	case DS_PMAX:
	case DS_3MAX:
		fi->fi_glasstty->KBDPutc = dzPutc;
		fi->fi_glasstty->kbddev = makedev(DCDEV, DCKBD_PORT);
		break;
#endif	/* NDZ_DS || NDZ_IOASIC */

#if NSCC > 0
	case DS_3MIN:
	case DS_3MAXPLUS:
		fi->fi_glasstty->KBDPutc = sccPutc;
		fi->fi_glasstty->kbddev = makedev(SCCDEV, SCCKBD_PORT);
		break;
#endif /* NSCC */

#if NDTOP > 0
	case DS_MAXINE:
		fi->fi_glasstty->KBDPutc = dtopKBDPutc;
		fi->fi_glasstty->kbddev = makedev(DTOPDEV, DTOPKBD_PORT);
		break;
#endif	/* NDTOP */

	default:
		printf("Can't configure keyboard/mouse\n");
		return (1);
	};

	return (0);
}

/*
 * pre-rcons glass-tty emulator (stub)
 */
void
fbScreenInit(fi)
	struct fbinfo *fi;
{
	/* how to do this on rcons ? */
}
@


1.7
log
@Late in the release of OpenBSD/pmax 2.7 a conflict between the pmax
dc driver and the generic if_dc driver was found. The fix was to
change the pmax drivers name to dz instead. But this was only done
in a miminal way.

This commit will switch over and use the new dz driver.

-moj
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.6
log
@changed dc to dz to avoid conflict with if_dc. -moj
@
text
@d1 1
d129 1
a129 1
#include <pmax/dev/dcvar.h>
d279 1
a279 1
		fi->fi_glasstty->KBDPutc = dcPutc;
@


1.5
log
@#include <pmax/foo.h> -> #include <machine/foo.h>
@
text
@d103 2
a104 2
#include "dc_ioasic.h"
#include "dc_ds.h"
d126 1
a126 1
#if (NDC_DS > 0) || (NDC_IOASIC > 0)
d275 1
a275 1
#if (NDC_DS > 0) || (NDC_IOASIC > 0)
d281 1
a281 1
#endif	/* NDC_DS || NDC_IOASIC */
@


1.5.8.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@a0 1
/*	$OpenBSD: fb.c,v 1.7 2000/08/19 18:43:30 maja Exp $	*/
d103 2
a104 2
#include "dz_ioasic.h"
#include "dz_ds.h"
d126 1
a126 1
#if (NDZ_DS > 0) || (NDZ_IOASIC > 0)
d128 1
a128 1
#include <pmax/dev/dzvar.h>
d275 1
a275 1
#if (NDZ_DS > 0) || (NDZ_IOASIC > 0)
d278 1
a278 1
		fi->fi_glasstty->KBDPutc = dzPutc;
d281 1
a281 1
#endif	/* NDZ_DS || NDZ_IOASIC */
@


1.5.8.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: fb.c,v 1.5.8.1 2001/04/18 16:12:40 niklas Exp $	*/
@


1.4
log
@update the pmax specific stuff to NetBSD-current as of about 970608 - some
cosmetic things will follow together with an update to an exact NETBSD_CU-
RRENT_xxxxxx level
@
text
@d87 1
a87 1
#include <pmax/cpuregs.h>		/* mips cached->uncached */
@


1.3
log
@update the pmax stuff to NetBSD 961107 - this version i got somehow
compiled on my decstation 2100 (PLUTO) - but it will not fully work
out of the box - but i want to bring it into the tree because i get
my own pmax on 961228 - so that i have a good startpoint then :-)

all the OpenBSD changes to the pmax tree will follow in the next commit
@
text
@d1 1
a1 1
/*	$NetBSD: fb.c,v 1.18 1996/10/14 04:55:26 jonathan Exp $	*/
d103 2
a104 1
#include "dc.h"
d126 1
a126 1
#if NDC > 0
d275 1
a275 1
#if NDC > 0
d281 1
a281 1
#endif	/* NDC */
@


1.2
log
@sync to netbsd; for graichen
@
text
@d1 1
a1 1
/*	$NetBSD: fb.c,v 1.10.4.1 1996/08/13 08:32:18 jonathan Exp $	*/
d68 1
d87 1
a87 1
#include <machine/machConst.h>
d119 1
a119 3
void fbKbdEvent(), fbMouseEvent(), fbMouseButtons();
void fbBlitc __P((int c,  struct fbinfo *fi));
void fbPutc __P((dev_t dev, int c));
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: fb.c,v 1.9 1995/10/05 01:52:57 jonathan Exp $	*/
d83 3
d92 2
a93 1
/*#include <pmax/dev/lk201.h>*/
d100 1
a100 1
#include <rasterconsole.h>
d102 3
a104 3
#include <dc.h>
#include <scc.h>
#include <dtop.h>
d128 1
a128 2
extern int dcGetc(), dcparam();
extern void dcPutc();
d130 1
d132 1
a132 2
#include <pmax/dev/dtopreg.h>
extern void dtopKBDPutc();
d134 1
d136 1
a136 3
#include <pmax/dev/sccreg.h>
extern int sccGetc(), sccparam();
extern void sccPutc();
d139 4
a142 3
/* LK-201 and successor keycode mapping */
extern int kbdMapChar __P((int keycode));
extern void KBDReset __P(( dev_t dev, void (*putc) (dev_t, int) ));
d144 1
d147 1
a147 1
 * The blessed framebuffer; the fb that gets
d170 1
a170 1
#include <fb.h>
d178 2
d181 4
d189 1
d207 4
a210 2
	/* See if we've already configured this frame buffer; if not,
	   find a slot for it. */
d217 1
a217 1
	if (fbcd.cd_ndevs == NFB) {
d226 3
a228 1
	/* If this is the first frame buffer we've seen, pass it to rcons. */
d237 1
a237 6
#else /*  no raster console */
		printf("\n"); /* XXX flush out any prom output */
		fbScreenInit(firstfi);
		fbScroll(firstfi);
		cn_tab->cn_putc = fbPutc;
#endif  /*  no raster console */
d253 1
a253 3
#if 0
#include "new_fb.c"	/* new framebufer driver with no X support yet */
#else
a254 1
#endif
d274 1
d281 2
a282 1
#endif
d289 2
a290 1
#endif
d296 2
a297 1
#endif
d302 1
d306 3
a314 5

#if 0
/* Use 4.4bsd/pmax frambeuffer glass-tty for console output */
#include "fb-tty.c"
#endif
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
