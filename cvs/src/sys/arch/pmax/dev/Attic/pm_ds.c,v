head	1.6;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	UBC_SYNC_A:1.6
	UBC_SYNC_B:1.6
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.8
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2001.06.24.23.47.46;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2000.08.19.18.43.30;	author maja;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.01.22.25.47;	author maja;	state Exp;
branches;
next	1.3;

1.3
date	98.05.18.00.28.05;	author millert;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	97.06.10.14.18.48;	author graichen;	state Exp;
branches;
next	1.1;

1.1
date	96.12.22.15.17.35;	author graichen;	state Exp;
branches;
next	;

1.3.8.1
date	2001.04.18.16.12.40;	author niklas;	state Exp;
branches;
next	1.3.8.2;

1.3.8.2
date	2001.07.04.10.20.57;	author niklas;	state dead;
branches;
next	;


desc
@@


1.6
log
@bye bye, with prejudice
@
text
@/*	$OpenBSD: pm_ds.c,v 1.5 2000/08/19 18:43:30 maja Exp $	*/
/*	$NetBSD: pm_ds.c,v 1.4 1997/05/24 08:19:52 jonathan Exp $	*/

/*
 * Copyright 1996 The Board of Trustees of The Leland Stanford
 * Junior University. All Rights Reserved.
 *
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies.  Stanford University
 * makes no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without
 * express or implied warranty.
 *
 * this driver contributed by Jonathan Stone
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/types.h>
#include <sys/device.h>
#include <sys/tty.h>
#include <machine/autoconf.h>

#include <pmax/pmax/kn01.h>
#include <pmax/pmax/cons.h>

#include <sys/ioctl.h>
#include <machine/pmioctl.h>
#include <machine/fbio.h>
#include <machine/fbvar.h>

#include <pmax/dev/fbreg.h>
#include <machine/dc7085cons.h>		/* XXX */
#include <pmax/dev/pmvar.h>		/* XXX move */

#include "fb.h"
#include "pm.h"
#include "dz_ds.h"

#if 0
#if NDZ_DS == 0
pm needs dc device
#endif
#endif


extern int pminit __P((struct fbinfo *fi, int unit, int cold_console_flag));
int ds_pm_init __P ((struct fbinfo *fi, int unti, int cold_console_flag));

int pm_ds_match __P((struct device *, void *, void *));
void pm_ds_attach __P((struct device *, struct device *, void *));

/*
 * Define decstation pm front-end driver for autoconfig
 */
extern struct cfattach pm_ds_ca;
struct cfattach pm_ds_ca = {
	sizeof(struct device), pm_ds_match, pm_ds_attach
};

/* XXX pmvar.h */
extern struct fbuacces pmu;

/* static struct for cold console init */
struct fbinfo	pmfi;		/*XXX*/

/*
 * rcons methods and globals.
 */
extern struct pmax_fbtty pmfb;

/*
 * rcons methods and globals.
 */
extern struct pmax_fbtty pmfb;

/*
 * XXX
 * pmax raster-console infrastructure needs to reset the mouse, so
 * we need a driver callback.
 * pm framebuffers are only found in {dec,vax}station 3100s with dc7085s..
 * we hardcode an entry point.
 * XXX
 */
void dzPutc	__P((dev_t, int));		/* XXX */


/*
 * Intialize pm framebuffer as console while cold
 */
int
ds_pm_init (fi, unit, cold_console_flag)
	struct fbinfo *fi;
	int unit;
	int cold_console_flag;
{
	/* only have one pm, address &c hardcoded in pminit() */
	return (pminit(fi, unit, cold_console_flag));
}

int
pm_ds_match(parent, match, aux)
	struct device *parent;
	void *match;
	void *aux;
{
	struct confargs *ca = aux;
	caddr_t pmaddr = (caddr_t)ca->ca_addr;

	/* make sure that we're looking for this type of device. */
	if (strcmp(ca->ca_name, "pm") != 0)
		return (0);

	if (badaddr(pmaddr, 4))
		return (0);

	return (1);
}

void
pm_ds_attach(parent, self, aux)
	struct device *parent;
	struct device *self;
	void *aux;
{
	/*struct confargs *ca = aux;*/
	/*caddr_t pmaddr = (caddr_t)ca->ca_addr;*/

	if (!pminit(&pmfi, 0, 0))
		return;

	/* no interrupts for PM */
	/*BUS_INTR_ESTABLISH(ca, sccintr, self->dv_unit);*/
	printf("\n");
	return;
}


/*
 * pmax FB initialization.  This is abstracted out from pmattach() so
 * that a console framebuffer can be initialized early in boot.
 *
 * Compute cursor-chip address, raster address, depth, initialize
 * statically-allocated "softc", and pass to pmattach().
 */
int
pminit(fi, unit, cold_console_flag)
	struct fbinfo *fi;
	int unit;
	int cold_console_flag;
{
	/*
	 * If this device is being initialized as the console, malloc()
	 * is not yet up and we must use statically-allocated space.
	 */
	if (fi == NULL) {
		fi = &pmfi;	/* XXX */
	}
	/* cmap_bits set in MI back-end */


	/* Set address of frame buffer... */
	fi->fi_unit = unit;
	fi->fi_pixels = (caddr_t)MIPS_PHYS_TO_KSEG1(KN01_PHYS_FBUF_START);
	fi->fi_base = (caddr_t)MIPS_PHYS_TO_KSEG1(KN01_SYS_PCC);
	fi->fi_vdac = (caddr_t)MIPS_PHYS_TO_KSEG1(KN01_SYS_VDAC);

	/* check for no frame buffer */
	if (badaddr((char *)fi->fi_pixels, 4))
		return (0);

	/* Fill in the stuff that differs from monochrome to color. */
	if (*(volatile u_short *)MIPS_PHYS_TO_KSEG1(KN01_SYS_CSR) &
	    KN01_CSR_MONO) {
		fi->fi_type.fb_depth = 1;
	}
	else {
		fi->fi_type.fb_depth = 8;
	}

	/*
	 * Set mmap'able address of qvss-compatible user info structure.
	 *
	 * Must be in Uncached space since the fbuaccess structure is
	 * mapped into the user's address space uncached.
	 *
	 * XXX can go away when MI support for d_mmap entrypoints added.
	 */
	fi->fi_fbu = (struct fbuaccess *)
		MIPS_PHYS_TO_KSEG1(MIPS_KSEG0_TO_PHYS(&pmu));

	fi->fi_glasstty = &pmfb;

	fi->fi_glasstty = &pmfb;

	/*
	 * set putc/getc entry point
	 */
	fi->fi_glasstty->KBDPutc = dzPutc;	/* XXX */
	fi->fi_glasstty->kbddev = makedev(DCDEV, DCKBD_PORT);

	/* call back-end to initialize hardware and attach to rcons */
	return (pmattach(fi, unit, cold_console_flag));
}
@


1.5
log
@Late in the release of OpenBSD/pmax 2.7 a conflict between the pmax
dc driver and the generic if_dc driver was found. The fix was to
change the pmax drivers name to dz instead. But this was only done
in a miminal way.

This commit will switch over and use the new dz driver.

-moj
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.4
log
@changed dc to dz to avoid conflict with if_dc. -moj
@
text
@d1 1
d87 1
a87 1
void dcPutc	__P((dev_t, int));		/* XXX */
d201 1
a201 1
	fi->fi_glasstty->KBDPutc = dcPutc;	/* XXX */
@


1.3
log
@new cpureg.h from NetBSD plus modifications to use the changed macro names
@
text
@d39 1
a39 1
#include "dc_ds.h"
d42 1
a42 1
#if NDC_DS == 0
@


1.3.8.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@a0 1
/*	$OpenBSD: pm_ds.c,v 1.5 2000/08/19 18:43:30 maja Exp $	*/
d39 1
a39 1
#include "dz_ds.h"
d42 1
a42 1
#if NDZ_DS == 0
d86 1
a86 1
void dzPutc	__P((dev_t, int));		/* XXX */
d200 1
a200 1
	fi->fi_glasstty->KBDPutc = dzPutc;	/* XXX */
@


1.3.8.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_ds.c,v 1.3.8.1 2001/04/18 16:12:40 niklas Exp $	*/
@


1.2
log
@update the pmax specific stuff to NetBSD-current as of about 970608 - some
cosmetic things will follow together with an update to an exact NETBSD_CU-
RRENT_xxxxxx level
@
text
@d165 3
a167 3
	fi->fi_pixels = (caddr_t)MACH_PHYS_TO_UNCACHED(KN01_PHYS_FBUF_START);
	fi->fi_base = (caddr_t)MACH_PHYS_TO_UNCACHED(KN01_SYS_PCC);
	fi->fi_vdac = (caddr_t)MACH_PHYS_TO_UNCACHED(KN01_SYS_VDAC);
d174 1
a174 1
	if (*(volatile u_short *)MACH_PHYS_TO_UNCACHED(KN01_SYS_CSR) &
d191 1
a191 1
		MACH_PHYS_TO_UNCACHED(MACH_CACHED_TO_PHYS(&pmu));
@


1.1
log
@update the pmax stuff to NetBSD 961107 - this version i got somehow
compiled on my decstation 2100 (PLUTO) - but it will not fully work
out of the box - but i want to bring it into the tree because i get
my own pmax on 961228 - so that i have a good startpoint then :-)

all the OpenBSD changes to the pmax tree will follow in the next commit
@
text
@d1 1
a1 1
/*	$NetBSD: pm_ds.c,v 1.3 1996/10/23 02:34:23 mhitch Exp $	*/
d39 1
a39 1
#include "dc.h"
d42 1
a42 1
#if NDC == 0
d74 5
d192 2
@
