head	1.22;
access;
symbols
	SMP_SYNC_A:1.22
	SMP_SYNC_B:1.22
	UBC_SYNC_A:1.22
	UBC_SYNC_B:1.22
	OPENBSD_2_9:1.21.0.2
	OPENBSD_2_9_BASE:1.21
	OPENBSD_2_8:1.20.0.12
	OPENBSD_2_8_BASE:1.20
	OPENBSD_2_7:1.20.0.10
	OPENBSD_2_7_BASE:1.20
	SMP:1.20.0.8
	SMP_BASE:1.20
	kame_19991208:1.20
	OPENBSD_2_6:1.20.0.6
	OPENBSD_2_6_BASE:1.20
	OPENBSD_2_5:1.20.0.4
	OPENBSD_2_5_BASE:1.20
	OPENBSD_2_4:1.20.0.2
	OPENBSD_2_4_BASE:1.20
	OPENBSD_2_3:1.17.0.2
	OPENBSD_2_3_BASE:1.17
	OPENBSD_2_2:1.16.0.2
	OPENBSD_2_2_BASE:1.16
	OPENBSD_2_1:1.14.0.2
	OPENBSD_2_1_BASE:1.14
	OPENBSD_2_0:1.9.0.2
	OPENBSD_2_0_BASE:1.9
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.22
date	2001.06.24.23.47.27;	author deraadt;	state dead;
branches;
next	1.21;

1.21
date	2000.12.28.22.19.30;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	98.10.04.20.01.45;	author millert;	state Exp;
branches
	1.20.8.1;
next	1.19;

1.19
date	98.07.12.20.38.50;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	98.05.10.04.01.07;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	98.03.03.22.35.02;	author niklas;	state Exp;
branches;
next	1.16;

1.16
date	97.09.15.02.40.33;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	97.07.07.08.18.51;	author graichen;	state Exp;
branches;
next	1.14;

1.14
date	97.05.05.09.33.43;	author graichen;	state Exp;
branches;
next	1.13;

1.13
date	97.05.02.22.11.09;	author graichen;	state Exp;
branches;
next	1.12;

1.12
date	97.01.13.11.35.30;	author graichen;	state Exp;
branches;
next	1.11;

1.11
date	96.12.22.15.17.15;	author graichen;	state Exp;
branches;
next	1.10;

1.10
date	96.10.29.17.02.26;	author graichen;	state Exp;
branches;
next	1.9;

1.9
date	96.09.29.11.36.16;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	96.09.15.21.12.11;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.04.24.12.05.25;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	96.03.26.15.09.53;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.01.15.20.05.01;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	95.12.18.16.43.18;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.12.14.05.26.17;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.11.13.06.49.49;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.25;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.25;	author deraadt;	state Exp;
branches;
next	;

1.20.8.1
date	2001.04.18.16.12.32;	author niklas;	state Exp;
branches;
next	1.20.8.2;

1.20.8.2
date	2001.07.04.10.20.39;	author niklas;	state dead;
branches;
next	;


desc
@@


1.22
log
@bye bye, with prejudice
@
text
@#	$NetBSD: Makefile.pmax,v 1.37 1996/09/30 02:35:34 jonathan Exp $

# Makefile for OpenBSD
#
# This makefile is constructed from a machine description:
#	config ``machineid''
# Most changes should be made in the machine description
#	/sys/arch/pmax/conf/``machineid''
# after which you should do
#	config ``machineid''
# Machine generic makefile changes should be made in
#	/sys/arch/pmax/conf/Makefile.pmax
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas

# DEBUG is set to -g if debugging.
# PROF is set to -pg if profiling.

AS?=	as
CC?=	cc
MKDEP?=	mkdep
CPP?=	cpp
LD?=	ld
STRIP?=	strip
TOUCH?=	touch	

# source tree is located via $S relative to the compilation directory
.ifndef S
S!=	cd ../../../..; pwd
.endif
PMAX=	$S/arch/pmax
MIPS=	$S/arch/mips

INCLUDES=	-nostdinc -I. -I$S/arch -I$S
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Dpmax

# that is our goal to be up to date with i386 for instance ...
#CDIAGFLAGS=	-Werror -Wall -Wmissing-prototypes -Wstrict-prototypes \
#		-Wno-uninitialized -Wno-format -Wno-main
# ... and this we will use for now to get the kernel compiled
CDIAGFLAGS=	-Werror \
		-Wno-uninitialized -Wno-format -Wno-main

GP=		-G 0
CMACHFLAGS=	-mno-abicalls -mno-half-pic -mcpu=r3000 ${GP}

CFLAGS=		${DEBUG} -O ${CDIAGFLAGS} ${CMACHFLAGS} ${COPTS}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE
LINKFLAGS=	-N -Ttext 80030000 -e start ${GP}
STRIPFLAGS=	-d
TOUCHFLAGS=	-f -c

HOSTCC=	${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
.ifndef PROF
LIBKERN=	${KERNLIB}
.else
LIBKERN=	${KERNLIB_PROF}
.endif

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
.ifndef PROF
LIBCOMPAT=	${COMPATLIB}
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.

NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<

HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<

%OBJS

%CFILES

%SFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ=	locore.o fp.o locore_machdep.o \
		param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	@@rm -f $@@
SYSTEM_LD=	-@@if [ X${DEBUG} = X-g ]; \
		then strip=-X; \
		else strip=-x; \
		fi; \
		echo ${LD} ${LINKFLAGS} -o $@@ -e start \
			-T ${PMAX}/conf/ld.script '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ -e start -T ${PMAX}/conf/ld.script \
			${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL=	@@size $@@; chmod 755 $@@

DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
SYSTEM_LD_TAIL+=; \
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
.else
LINKFLAGS+=	-x
.endif

SYSTEM_LD_TAIL+=;\
		mv $@@ $@@.elf; \
		elf2aout $@@.elf $@@; \
		chmod 755 $@@

%LOAD

assym.h: $S/kern/genassym.sh ${PMAX}/pmax/genassym.cf
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${PMAX}/pmax/genassym.cf > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C_C}

ioconf.o: ioconf.c
	${NORMAL_C}

newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c


clean::
	rm -f eddep *bsd bsd.elf bsd.gdb tags *.[io] [a-z]*.s \
	    [Ee]rrs linterrs makelinks assym.h

lint:
	@@lint -hbxncez -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
	    ${CFILES} ${PMAX}/pmax/swapgeneric.c ioconf.c param.c | \
	    grep -v 'static function .* unused'

tags:
	@@echo "see $S/kern/Makefile for tags"

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink makelinks

SRCS=	${PMAX}/pmax/locore.S ${PMAX}/pmax/fp.S \
	${PMAX}/pmax/locore_machdep.S \
	param.c ioconf.c ${CFILES} ${SFILES}
depend:: .depend
.depend: ${SRCS} assym.h param.c
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${PMAX}/pmax/locore.S ${PMAX}/pmax/fp.S
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${PMAX}/pmax/locore_machdep.S 
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
.if ${SFILES} != ""
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
.endif

# depend on root or device configuration
autoconf.o conf.o: Makefile
 
# depend on network or filesystem configuration 
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile 
if.o if_tun.o if_loop.o if_ethersubr.o: Makefile
if_arp.o if_ether.o: Makefile
ip_input.o ip_output.o in_pcb.o in_proto.o: Makefile
tcp_subr.o tcp_timer.o tcp_output.o: Makefile

# depend on maxusers
machdep.o: Makefile

# depend on CPU configuration 
machdep.o mainbus.o trap.o: Makefile

locore.o: ${PMAX}/pmax/locore.S assym.h
	${NORMAL_S}

fp.o: ${PMAX}/pmax/fp.S assym.h
	${NORMAL_S}

locore_machdep.o: ${PMAX}/pmax/locore_machdep.S assym.h
	${NORMAL_S}

%RULES
@


1.21
log
@Alter compilation flags, since binutils have changed some of their default
settings between 2.7 and 2.10. Inspired by a similar NetBSD change.

Also, while I'm at it, add more -W stuff to CDIAGFLAGS
@
text
@@


1.20
log
@pmax kernels have problems with -O2 so use -O
@
text
@d46 2
a47 1
CDIAGFLAGS=	-Werror -Wno-main
d49 2
a50 1
CMACHFLAGS=	-mno-abicalls -mcpu=r3000
d54 1
a54 1
LINKFLAGS=	-N -Ttext 80030000 -e start
@


1.20.8.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d46 1
a46 2
CDIAGFLAGS=	-Werror \
		-Wno-uninitialized -Wno-format -Wno-main
d48 1
a48 2
GP=		-G 0
CMACHFLAGS=	-mno-abicalls -mno-half-pic -mcpu=r3000 ${GP}
d52 1
a52 1
LINKFLAGS=	-N -Ttext 80030000 -e start ${GP}
@


1.20.8.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@@


1.19
log
@reference ${PMAX} instead of assuming you can get to the source tree via ".."
@
text
@d50 1
a50 1
CFLAGS=		${DEBUG} -O2 ${CDIAGFLAGS} ${CMACHFLAGS} ${COPTS}
@


1.18
log
@1) It's a 'lun' not a 'slave'
2) 16 partitions
@
text
@d112 2
a113 2
			-T ../../conf/ld.script '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ -e start -T ../../conf/ld.script \
@


1.17
log
@Add -Wno-main for GCC 2.8
@
text
@d3 1
a3 1
# Makefile for NetBSD
d6 1
a6 1
#	config machineid
d10 1
a10 1
#	config machineid
d37 1
@


1.16
log
@kill Locore.c
@
text
@d42 2
a43 2
#CDIAGFLAGS=	-Werror -Wall -Wstrict-prototypes -Wno-uninitialized \
#		-Wno-format
d45 1
a45 1
CDIAGFLAGS=	-Werror
@


1.15
log
@only depend SFILES if there are some (to avoid a cc warning: no input files)
@
text
@d159 1
a159 2
	    ${CFILES} ${PMAX}/pmax/swapgeneric.c \
	    ioconf.c param.c | \
@


1.14
log
@@@echo -> echo
@
text
@d182 1
d184 1
@


1.13
log
@modernize the Makefile a bit (towards the i386 one) including changes
for genassym.sh
@
text
@d110 1
a110 1
		@@echo ${LD} ${LINKFLAGS} -o $@@ -e start \
@


1.12
log
@now also the pmax builds with the in-tree ld using an ld.script similar
to the arc
@
text
@d24 1
a25 1
LD=	ld
d27 2
d30 1
d34 1
a34 2
#S!=	cd ../../../..; pwd
S=	../../../..
d38 12
a49 3
INCLUDES=	-I. -I$S/arch -I$S -nostdinc
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -Dpmax
CFLAGS=		${DEBUG} -O2 -Werror -mno-abicalls -mcpu=r3000
d53 1
d55 1
a55 1
HOSTED_CC=	${CC}
d75 4
a78 2
# compile rules: rules are named ${TYPE}_${SUFFIX} where TYPE is NORMAL or
# HOSTED}, and SUFFIX is the file suffix, capitalized (e.g. C for a .c file).
d81 5
d87 1
d89 1
a89 1
HOSTED_C=	${HOSTED_CC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<
a105 2
#SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o ; \
#		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
d110 3
a112 3
		echo ${LD} $$strip -o $@@ -e start -T ../../conf/ld.script \
			'$${SYSTEM_OBJ}' vers.o; \
		${LD} $$strip -o $@@ -e start -T ../../conf/ld.script \
d133 4
a136 8
assym.h: genassym
	./genassym >assym.h

genassym: genassym.o
	${CC} -o $@@ genassym.o

genassym.o: $S/arch/pmax/pmax/genassym.c
	${CC} ${INCLUDES} ${IDENT} -D_KERNEL -Dpmax -c $<
d143 1
a143 1
	${NORMAL_C}
d154 2
a155 2
	rm -f eddep *netbsd netbsd.gdb tags *.[io] [a-z]*.s \
	    [Ee]rrs linterrs makelinks genassym genassym.o assym.h
d158 1
a158 1
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} -UKGDB \
d172 1
a172 1
	sh makelinks && rm -f dontlink
a182 3
	${MKDEP} -a ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} \
	    $S/arch/pmax/pmax/genassym.c

d188 5
a192 1
uipc_proto.o vfs_conf.o: Makefile 
d195 1
a195 1
genassym.o machdep.o: Makefile
a199 1

a201 1

@


1.11
log
@update the pmax stuff to NetBSD 961107 - this version i got somehow
compiled on my decstation 2100 (PLUTO) - but it will not fully work
out of the box - but i want to bring it into the tree because i get
my own pmax on 961228 - so that i have a good startpoint then :-)

all the OpenBSD changes to the pmax tree will follow in the next commit
@
text
@d25 1
a25 1
LD=	/usr/local/bin/ld
d86 10
a95 2
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o ; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
@


1.10
log
@bring the source tree a bit up to date with my local tree
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.pmax,v 1.29 1996/05/19 22:44:12 mhitch Exp $
a23 1
AS?=	as
a24 1
CPP?=	cpp
d26 2
a27 2
STRIP?=	strip -d
TOUCH?=	touch -f -c
d30 2
d33 2
a34 1
PMAX=	../..
d36 2
a37 2
INCLUDES=	-I. -I$S/arch -I$S
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Dpmax
d41 5
d63 2
a64 4
# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.
d67 1
a67 1
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
d69 1
a69 5
DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<
d82 1
a82 1
SYSTEM_OBJ=	locore.o fp.o \
d95 1
a95 1
		echo ${STRIP} $@@; ${STRIP} $@@
d102 1
a102 1
		/usr/local/bin/elf2aout $@@.elf $@@; \
d113 1
a113 1
genassym.o: ${S}/arch/pmax/pmax/genassym.c
d121 1
a121 1
	${NORMAL_C_C}
d136 2
a137 2
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
	    ${PMAX}/pmax/Locore.c ${CFILES} ${PMAX}/pmax/swapgeneric.c \
d153 1
d157 6
a162 4
	mkdep ${AFLAGS} ${CPPFLAGS} ${PMAX}/pmax/locore.S ${PMAX}/pmax/fp.S
	mkdep -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	mkdep -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
	mkdep -a ${CFLAGS} ${CPPFLAGS} ${PARAM} ${S}/arch/pmax/pmax/genassym.c
d181 1
d183 3
@


1.9
log
@merge mips back into pmax; by graichen
@
text
@d27 1
a27 1
LD?=	ld
d36 2
a37 2
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Dpmax ${GP}
CFLAGS=		${DEBUG} -O2 -Werror
d102 1
a102 1
		elf2aout $@@.elf $@@; \
d114 1
a114 1
	${NORMAL_C_C}
@


1.8
log
@sync to netbsd; for graichen
@
text
@d113 1
a113 1
genassym.o: ${S}/arch/mips/mips/genassym.c
d159 1
a159 1
	mkdep -a ${CFLAGS} ${CPPFLAGS} ${PARAM} ${S}/arch/mips/mips/genassym.c
@


1.7
log
@Add network config dependencies.
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.pmax,v 1.19 1996/01/14 21:06:54 thorpej Exp $
d3 1
a3 3
#	@@(#)Makefile.pmax	8.2 (Berkeley) 2/16/94
#
# Makefile for 4.4 BSD
d8 1
a8 1
#	/sys/arch/MACHINE/conf/``machineid''
d10 1
a10 1
#	 config machineid
d12 1
a12 1
#	/sys/arch/MACHINE/conf/Makefile.``machinetype''
d21 2
d24 6
a29 3
# DEBUG is set to -g by config if debugging is requested (config -g).
# PROF is set to -pg by config if profiling is requested (config -p).
TOUCH=	touch -f -c
d35 5
a39 8
INCLUDES= -I. -I$S/arch -I$S -I$S/sys
COPTS=	${INCLUDES} ${IDENT} -D_KERNEL -Dpmax -D__NetBSD__ ${GP}
CPPOPTS=${INCLUDES} ${IDENT} -D_KERNEL -Dpmax -D__NetBSD__
.ifdef DEBUG 
CFLAGS=	${DEBUG} -Werror -fno-builtin ${COPTS}
.else
CFLAGS= -O2 -Werror -fno-builtin ${COPTS}
.endif
a56 12
TARGET_MACHINE = pmax
TARGET_ARCH = mips
.if (${MACHINE} != pmax)
CC=	/usr/local/mips-dec-netbsd/bin/gcc
LD=	/usr/local/mips-dec-netbsd/bin/ld
AS=	/usr/local/mips-dec-netbsd/bin/as
AR=	/usr/local/mips-dec-netbsd/bin/ar
NM=	/usr/local/mips-dec-netbsd/bin/nm
LORDER=	NM=$(NM) sh ../../../../../../../usr.bin/lorder/lorder.sh.gnm
RANLIB=	/usr/local/mips-dec-netbsd/bin/ranlib
.endif

d62 2
a63 2
NORMAL_C=	${CC} -c ${CFLAGS} ${PROF} $<
NORMAL_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<
d65 2
a66 2
DRIVER_C=	${CC} -c ${CFLAGS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<
d68 2
a69 4
PROFILE_C=	${CC} -p -c ${COPTS} $<

NORMAL_S=	${AS} ${COPTS} $< -o $@@
NORMAL_S_C=	${AS}  ${COPTS} ${PARAM} $< -o $@@
d75 2
d82 2
a83 3
SYSTEM_OBJ=	locore.o fp.o ${OBJS} param.o ioconf.o ${LIBKERN} \
		${LIBCOMPAT}
#SYSTEM_DEP=	Makefile symbols.sort ${SYSTEM_OBJ} ${LIBKERN}
d85 18
a102 17
SYSTEM_LD_HEAD=	rm -f $@@
SYSTEM_LD=	-@@if [ X${DEBUG} = X-g ]; \
		then strip=-X; \
		else strip=-x; \
		fi; \
		echo ${LD} $$strip -N -o $@@ -e start -Ttext 80030000 \
			'$${SYSTEM_OBJ}' vers.o ; \
		${LD} $$strip -N -o $@@ -e start -Ttext 80030000 \
			${SYSTEM_OBJ} vers.o
#SYSTEM_LD_TAIL= @@echo rearranging symbols;\
#		symorder symbols.sort $@@;\
#SYSTEM_LD_TAIL=	@@size $@@; chmod 755 $@@; \
#		[ X${DEBUG} = X-g ] && { \
#		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
#		echo strip -d $@@; strip -d $@@; } || true
SYSTEM_LD_TAIL=	mv $@@ ${@@}.elf; \
		elf2aout ${@@}.elf $@@; \
d107 20
a126 1
newvers:
d128 2
a129 1
	${CC} $(CFLAGS) -c vers.c
d132 2
a133 2
	rm -f eddep *vmunix vmunix.gdb tags *.o locore.i [a-z]*.s \
		Errs errs linterrs makelinks genassym
d135 2
a136 2
lint: /tmp param.c
	@@lint -hbxn -DGENERIC -Dvolatile= ${COPTS} ${PARAM} -UKGDB \
d138 2
a139 1
	    ioconf.c param.c
d141 2
a142 33
symbols.sort: ${PMAX}/pmax/symbols.raw
	grep -v '^#' ${PMAX}/pmax/symbols.raw \
	    | sed 's/^	//' | sort -u > symbols.sort

locore.o: ${PMAX}/pmax/locore.S ${PMAX}/include/machAsmDefs.h \
	${PMAX}/include/machConst.h ${PMAX}/include/reg.h assym.h
	${CC} -c ${COPTS} ${PARAM} -DLOCORE ${PMAX}/pmax/locore.S

fp.o: ${PMAX}/pmax/fp.S ${PMAX}/include/machAsmDefs.h \
	${PMAX}/include/machConst.h ${PMAX}/include/reg.h assym.h
	${CC} -c ${COPTS} ${PARAM} -DLOCORE ${PMAX}/pmax/fp.S

# the following is necessary because autoconf.o depends on #if GENERIC
autoconf.o: Makefile

# the following are necessary because the files depend on the types of
# cpu's included in the system configuration
clock.o machdep.o autoconf.o conf.o: Makefile

# depend on network configuration
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile
if_tun.o if_loop.o if_ethersubr.o: Makefile
in_proto.o: Makefile

assym.h: genassym
	./genassym >assym.h

genassym: ${PMAX}/pmax/genassym.c
	cc ${INCLUDES} ${IDENT} ${PARAM} -o genassym ${PMAX}/pmax/genassym.c

depend: assym.h param.c
	mkdep ${COPTS} ${CFILES} ioconf.c param.c
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} ${PMAX}/pmax/genassym.c
d149 1
a149 1
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
d152 21
a172 5
tags:
	@@echo "see $S/kern/Makefile for tags"

ioconf.o: ioconf.c
	${CC} -c ${CFLAGS} ioconf.c
a173 3
param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .
d175 2
a176 2
param.o: param.c Makefile
	${CC} -c ${CFLAGS} ${PARAM} param.c
d178 2
a179 3
vers.o: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} -c vers.c
a181 3



@


1.6
log
@From NetBSD: vnode_if.[ch] made machine independent.
very usefull (for <sys/vnode.h> inclusion).
from the other side this is really machine independent ...
tested w/ i386, but should not cause errors w/ other arch's.
pls, test it (don't forget to reconfig kernel ;)
@
text
@d152 3
a154 1
uipc_proto.o vfs_conf.o: Makefile
@


1.5
log
@Remove vnode_if.[ch] during a "make clean", per PR#536 from
Dan Carosone <danielce@@ee.mu.oz.au>.
@
text
@d94 1
a94 1
SYSTEM_OBJ=	locore.o fp.o vnode_if.o ${OBJS} param.o ioconf.o ${LIBKERN} \
d125 1
a125 1
		vnode_if.[ch] Errs errs linterrs makelinks genassym
d160 1
a160 1
depend: assym.h param.c vnode_if.h
a187 5

vnode_if.c: $S/kern/vnode_if.sh $S/kern/vnode_if.src
	sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
vnode_if.h: $S/kern/vnode_if.sh $S/kern/vnode_if.src
	sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
@


1.4
log
@update from netbsd
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.pmax,v 1.18 1995/12/17 09:09:42 jonathan Exp $
d125 1
a125 1
		Errs errs linterrs makelinks genassym
@


1.3
log
@update from netbsd (verbatim)
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.pmax,v 1.17 1995/11/25 05:55:38 mellon Exp $
d59 1
a59 1
.if (${MACHINE_ARCH} != pmax)
@


1.2
log
@do not use -fno-builtin for kernels; the reasons why are manifold
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.pmax,v 1.16.2.2 1995/10/13 03:15:59 jonathan Exp $
d36 1
a36 1
CFLAGS=	${DEBUG} -Werror ${COPTS}
d38 1
a38 1
CFLAGS= -O2 -Werror ${COPTS}
d57 12
d158 1
a158 1
	${CC} ${INCLUDES} ${IDENT} ${PARAM} -o genassym ${PMAX}/pmax/genassym.c
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
CFLAGS=	${DEBUG} -Werror -fno-builtin ${COPTS}
d38 1
a38 1
CFLAGS= -O2 -Werror -fno-builtin ${COPTS}
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

