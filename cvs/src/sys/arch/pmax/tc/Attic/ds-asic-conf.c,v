head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	UBC_SYNC_B:1.5
	OPENBSD_2_9:1.4.0.20
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.14
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2001.06.24.23.49.01;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	96.12.22.15.19.02;	author graichen;	state Exp;
branches
	1.4.14.1;
next	1.3;

1.3
date	96.09.15.21.13.23;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.05.13.41.32;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.35;	author deraadt;	state Exp;
branches;
next	;

1.4.14.1
date	2001.07.04.10.22.09;	author niklas;	state dead;
branches;
next	;


desc
@@


1.5
log
@bye bye, with prejudice
@
text
@/*	$NetBSD: ds-asic-conf.c,v 1.6 1996/05/29 06:29:05 mhitch Exp $	*/

/*
 * Copyright (c) 1995 Jonathan Stone
 * All rights reserved.
 *
 * DECstation IO ASIC  subslot configuration
 */

#if 0
struct asic_slot {
	struct confargs	as_ca;
	u_int	as_bits;
	intr_handler_t	as_handler;
	void		*as_val;
};
#endif

/* Initial handler must be asic_intrnull or the ASIC newconf code panics */

struct asic_slot kn03_asic_slots[] =
{
	/*   name        slot  offset 		   addr intpri  */
	{ { "lance",	  0, (u_int) (3 * 0x40000), 0,KN03_LANCE_SLOT },
	    KN03_INTR_LANCE, asic_intrnull, (void*) KN03_LANCE_SLOT, },

	{ { "scc",	  1, (u_int) (4 * 0x40000), 0, KN03_SCC0_SLOT },
	    KN03_INTR_SCC_0, asic_intrnull, (void *)KN03_SCC0_SLOT, },

	{ { "scc",	  2, (u_int) (6 * 0x40000), 0, KN03_SCC1_SLOT },
	    KN03_INTR_SCC_1, asic_intrnull, (void *)KN03_SCC1_SLOT, },

	{ { "mc146818", 3, (u_int) (8* 0x40000),  0 /*XXX*/, 0 /*XXX*/},
	    0,               asic_intrnull, (void *)(long) 16 /*XXX*/, },

	{ { "asc",	  4, (u_int) (12* 0x40000), 0, KN03_SCSI_SLOT, },
	    0,               asic_intrnull, (void *)KN03_SCSI_SLOT, },

	{ { NULL, 0, 0, 0 }, 0, NULL, NULL }
};


struct asic_slot xine_asic_slots[] =
{
	{ { "lance",	   0, (u_int) (3 * 0x40000), 0, XINE_LANCE_SLOT },
	    XINE_INTR_LANCE, asic_intrnull, (void*) XINE_LANCE_SLOT, },

	{ { "scc",	   1, (u_int) (4 * 0x40000),  0, XINE_SCC0_SLOT },
	    XINE_INTR_SCC_0, asic_intrnull, (void *) XINE_SCC0_SLOT, },

	{ { "mc146818",    2, (u_int) (8* 0x40000), 0, 0},
	    0, asic_intrnull, (void *)(long) 16 /*XXX*/, },

	{ { "isdn",	   3, (u_int) (9 * 0x40000), 0, XINE_ISDN_SLOT },
	    0,		      asic_intrnull, (void *)(long) XINE_ISDN_SLOT, },

	{ { "dtop",	   4, (u_int) (10* 0x40000), 0, XINE_DTOP_SLOT },
	    0,		      asic_intrnull, (void *)(long) XINE_DTOP_SLOT, },

	{ { "fdc",	   5, (u_int) (11* 0x40000), 0, XINE_FLOPPY_SLOT },
	    0,		     asic_intrnull, (void *) (long)XINE_FLOPPY_SLOT, },

	{ { "asc",	   6, (u_int) (12* 0x40000), 0, XINE_SCSI_SLOT },
	    0 /*XINE_INTR_SCSI*/, asic_intrnull, (void*)XINE_SCSI_SLOT, },
#if 0
	{ { "frc",	   3, (u_int) (15* 0x40000), 0, XINE_SLOT_FRC },
	    0,		      asic_intrnull, (void *)(long) XINE_SLOT_FRC, },
#endif
	{ { NULL, 0, 0, }, 0, NULL, NULL }
};

/*
 * The 3MAX (KN02) doesn't even have an asic but for now,
 * configure its system slot as if it did.
 * Instead there's a 4 Mbyte "system" slot with eight 512 Kbyte subslots
 * for system devices:
 * 0=ROM, 1=(reserved), 2=CHKSYN, 3=ERRADDR, 4=DZ, 5=CLOCK, 6=CSR, 7=ROM1
 * These are mapped onto slot numbers as
 * tc0=1, tc1=1, tc2=2, unsed=3, unused=4, scsi=5, ether=6, dc=7
 */

struct asic_slot kn02_asic_slots[] = {
	/*   name        slot  offset 		   addr intpri  */
	{ { "dc",	   0,  (u_int) (4 * 0x80000), 0, 7 },
	    KN03_INTR_SCC_0, asic_intrnull, (void *) 7, },
	
	{ { "mc146818",  0, (u_int) (5 * 0x80000), 0, 0 },
	    0, 		    asic_intrnull, (void *) 16 /*XXX*/, },

	{ { NULL, 0, 0 },  0, NULL, NULL }
};


@


1.4
log
@update the pmax stuff to NetBSD 961107 - this version i got somehow
compiled on my decstation 2100 (PLUTO) - but it will not fully work
out of the box - but i want to bring it into the tree because i get
my own pmax on 961228 - so that i have a good startpoint then :-)

all the OpenBSD changes to the pmax tree will follow in the next commit
@
text
@@


1.4.14.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@@


1.3
log
@sync to netbsd; for graichen
@
text
@d1 1
a1 1
/*	$NetBSD: ds-asic-conf.c,v 1.5.4.1 1996/05/30 04:13:22 mhitch Exp $	*/
@


1.2
log
@update from netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: ds-asic-conf.c,v 1.4 1996/01/03 20:39:14 jonathan Exp $	*/
d23 2
a24 2
		/* name        slot  offset intpri  */
	{ { "lance",	  0, (u_int) (3 * 0x40000), KN03_LANCE_SLOT, },
d27 1
a27 1
	{ { "scc",	  1, (u_int) (4 * 0x40000), KN03_SCC0_SLOT, },
d30 1
a30 1
	{ { "scc",	  2, (u_int) (6 * 0x40000), KN03_SCC1_SLOT, },
d33 1
a33 1
	{ { "dallas_rtc", 3, (u_int) (8* 0x40000),  0 /*XXX*/, },
d36 1
a36 1
	{ { "asc",	  4, (u_int) (12* 0x40000), KN03_SCSI_SLOT, },
d45 2
a46 2
	{ { "lance",	   0, (u_int) (3 * 0x40000), KN03_LANCE_SLOT, },
	    KN03_INTR_LANCE, asic_intrnull, (void*) KN03_LANCE_SLOT, },
d48 2
a49 2
	{ { "scc",	   1, (u_int) (4 * 0x40000),  KN03_SCC0_SLOT, },
	    KN03_INTR_SCC_0, asic_intrnull, (void *)KN03_SCC0_SLOT, },
d51 1
a51 1
	{ { "dallas_rtc",  2, 0, (u_int) (8* 0x40000), },
d54 1
a54 1
	{ { "isdn",	   3, (u_int) (9 * 0x40000), XINE_ISDN_SLOT, },
d57 1
a57 1
	{ { "dtop",	   4, (u_int) (10* 0x40000), XINE_DTOP_SLOT, },
d60 1
a60 1
	{ { "fdc",	   5, (u_int) (11* 0x40000), XINE_FLOPPY_SLOT, },
d63 1
a63 1
	{ { "asc",	   6, (u_int) (12* 0x40000), XINE_SCSI_SLOT, },
d66 1
a66 1
	{ { "frc",	   3, (u_int) (15* 0x40000), XINE_SLOT_FRC, },
d83 2
a84 1
	{ { "dc",	   0,  (u_int) (4 * 0x80000), 7 },
d87 1
a87 1
	{ { "dallas_rtc",  0, (u_int) (5 * 0x80000), 0, },
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: ds-asic-conf.c,v 1.3 1995/10/09 01:45:29 jonathan Exp $	*/
d23 2
a24 1
	{ { "lance",	  0, KN03_LANCE_SLOT, (u_int) (3 * 0x40000), },
d27 1
a27 1
	{ { "scc",	  1, KN03_SCC0_SLOT, (u_int) (4 * 0x40000), },
d30 2
a31 2
	{ { "scc",	  2, KN03_SCC1_SLOT, (u_int) (6 * 0x40000), },
	    KN03_INTR_SCC_1, asic_intrnull, (void*)KN03_SCC1_SLOT, },
d33 2
a34 2
	{ { "dallas_rtc", 3,  0 /*XXX*/, (u_int) (8* 0x40000), },
	    0, asic_intrnull, (void *)(long) 16 /*XXX*/, },
d36 2
a37 2
	{ { "asc",	  4, KN03_SCSI_SLOT, (u_int) (12 * 0x40000), },
	    0, asic_intrnull, (void*)KN03_SCSI_SLOT, },
d42 1
a42 1
/* UNTESTED*/
d45 1
a45 1
	{ { "lance",	   0, KN03_LANCE_SLOT, (u_int) (3 * 0x40000), },
d48 1
a48 1
	{ { "scc",	   1, KN03_SCC0_SLOT,  (u_int) (4 * 0x40000), },
d54 2
a55 2
	{ { "isdn",	   3, XINE_ISDN_SLOT, (u_int) (9* 0x40000), },
	    0, asic_intrnull, (void *)(long) XINE_ISDN_SLOT, },
d57 2
a58 2
	{ { "dtop",	   4, XINE_DTOP_SLOT, (u_int) (10* 0x40000), },
	    0, asic_intrnull, (void *)(long) XINE_DTOP_SLOT, },
d60 2
a61 2
	{ { "fdc",	   5, XINE_FLOPPY_SLOT, (u_int) (11* 0x40000), },
	    0, asic_intrnull, (void *)(long) XINE_FLOPPY_SLOT, },
d63 1
a63 1
	{ { "asc",	   6, XINE_SCSI_SLOT, (u_int) (12 * 0x40000), },
d66 2
a67 2
	{ { "frc",   3, (u_int) XINE_SLOT_FRC, (15* 0x40000), },
	    0, asic_intrnull, (void *)(long) XINE_SLOT_FRC, },
d83 1
a83 1
	{ { "dc",	   0, 7, (u_int) (4 * 0x80000), },
d86 1
a86 1
	{ { "dallas_rtc",  0, 0, (u_int) (5 * 0x80000), },
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
