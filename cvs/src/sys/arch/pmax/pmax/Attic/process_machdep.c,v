head	1.9;
access;
symbols
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	UBC_SYNC_A:1.9
	UBC_SYNC_B:1.9
	OPENBSD_2_9:1.8.0.14
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.12
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.10
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.8
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.6
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.4
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.2
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2001.06.24.23.48.45;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	98.10.15.21.30.17;	author imp;	state Exp;
branches
	1.8.8.1;
next	1.7;

1.7
date	98.09.15.10.53.55;	author pefo;	state Exp;
branches;
next	1.6;

1.6
date	97.07.07.08.27.19;	author graichen;	state Exp;
branches;
next	1.5;

1.5
date	97.06.10.14.20.12;	author graichen;	state Exp;
branches;
next	1.4;

1.4
date	96.09.29.11.36.53;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.09.15.21.13.17;	author deraadt;	state dead;
branches;
next	1.2;

1.2
date	95.12.26.18.06.56;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.34;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.34;	author deraadt;	state Exp;
branches;
next	;

1.8.8.1
date	2001.07.04.10.21.52;	author niklas;	state dead;
branches;
next	;


desc
@@


1.9
log
@bye bye, with prejudice
@
text
@/*	$NetBSD: process_machdep.c,v 1.5 1996/03/20 01:30:49 jonathan Exp $	*/

/*
 * Copyright (c) 1994 Adam Glass   
 * Copyright (c) 1993 The Regents of the University of California.
 * Copyright (c) 1993 Jan-Simon Pendry
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Jan-Simon Pendry.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * From:
 *	Id: procfs_i386.c,v 4.1 1993/12/17 10:47:45 jsp Rel
 */

/*
 * This file may seem a bit stylized, but that so that it's easier to port.
 * Functions to be implemented here are:
 *
 * process_read_regs(proc, regs)
 *	Get the current user-visible register set from the process
 *	and copy it into the regs structure (<machine/reg.h>).
 *	The process is stopped at the time read_regs is called.
 *
 * process_write_regs(proc, regs)
 *	Update the current register set from the passed in regs
 *	structure.  Take care to avoid clobbering special CPU
 *	registers or privileged bits in the PSL.
 *	The process is stopped at the time write_regs is called.
 *
 * process_sstep(proc)
 *	Arrange for the process to trap after executing a single instruction.
 *
 * process_set_pc(proc)
 *	Set the process's program counter.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/time.h>
#include <sys/kernel.h>
#include <sys/proc.h>
#include <sys/user.h>
#include <sys/vnode.h>
#include <sys/ptrace.h>
#include <machine/psl.h>
#include <machine/reg.h>


int
process_read_regs(p, regs)
	struct proc *p;
	struct reg *regs;
{
	bcopy(p->p_md.md_regs, (caddr_t)regs, sizeof(struct reg));
	return (0);
}

int
process_write_regs(p, regs)
	struct proc *p;
	struct reg *regs;
{
	bcopy((caddr_t)regs, p->p_md.md_regs, sizeof(struct reg));
	/*
	 * XXX: is it safe to let users set system coprocessor regs?
	 * XXX: Clear to user set bits!!
	 */
	/*p->p_md.md_tf->tf_psr = psr | (regs->r_psr & PSR_ICC);*/
	return (0);
}

int
process_sstep(p, sstep)
	struct proc *p;
{
	/* XXX what are the correct semantics: sstep once, or forevermore? */
	if(sstep)
		cpu_singlestep(p);
	return (0);
}

int
process_set_pc(p, addr)
	struct proc *p;
	caddr_t addr;
{
	p->p_md.md_regs[PC] = (int)addr;
	return (0);
}

@


1.8
log
@
Back out PEFO's trap change.  It breaks everybody, it seems.
@
text
@@


1.8.8.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@@


1.7
log
@Real trapframe and no more __FORK_BRAINDAMAGE
@
text
@d116 1
a116 1
	p->p_md.md_regs->pc = (int)addr;
@


1.6
log
@missing change from the last NetBSD merge: mips_singlestep -> cpu_singlestep
@
text
@d116 1
a116 1
	p->p_md.md_regs[PC] = (int)addr;
@


1.5
log
@update the pmax specific stuff to NetBSD-current as of about 970608 - some
cosmetic things will follow together with an update to an exact NETBSD_CU-
RRENT_xxxxxx level
@
text
@d107 1
a107 1
		mips_singlestep(p);
@


1.4
log
@merge mips back into pmax; by graichen
@
text
@d105 1
a105 1
	/* XXX correct semantics: sstep once or forevermore? */
d107 1
a107 1
		cpu_singlestep(p);
@


1.3
log
@sync to netbsd; for graichen
@
text
@d1 1
a1 1
/*	$NetBSD: process_machdep.c,v 1.4 1995/12/20 02:00:34 jonathan Exp $	*/
a74 1

d93 4
a96 1
	/* FIXME: is it safe to let users set system coprocessor regs? */
d105 3
d116 1
@


1.2
log
@from netbsd:
Add support for ptrace PT_GETREGS and PT_SETREGS for NetBSD/pmax:
 * define PT_GETREGS and PT_SETREGS in pmax/include/ptrace.h
 * Flesh out the stubs in pmax/pmax/process_machdep.c to handle
   those requests.
 * Now that "struct reg" is actually used, remove the bogus
   #ifdef LANGUAGE_C around its definition, and redo pmax/include/reg.h
   so that the definitions needed by locore.S are in a separate file,
   pmax/include/regnum.h.
 * update locore.S to match.
@
text
@@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: process_machdep.c,v 1.3 1994/10/26 21:10:40 cgd Exp $	*/
d75 1
d78 1
d84 1
d93 3
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
