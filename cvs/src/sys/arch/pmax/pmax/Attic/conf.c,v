head	1.20;
access;
symbols
	SMP_SYNC_A:1.20
	SMP_SYNC_B:1.20
	UBC_SYNC_A:1.20
	UBC_SYNC_B:1.20
	OPENBSD_2_9:1.19.0.4
	OPENBSD_2_9_BASE:1.19
	OPENBSD_2_8:1.19.0.2
	OPENBSD_2_8_BASE:1.19
	OPENBSD_2_7:1.17.0.2
	OPENBSD_2_7_BASE:1.17
	SMP:1.16.0.6
	SMP_BASE:1.16
	kame_19991208:1.16
	OPENBSD_2_6:1.16.0.4
	OPENBSD_2_6_BASE:1.16
	OPENBSD_2_5:1.16.0.2
	OPENBSD_2_5_BASE:1.16
	OPENBSD_2_4:1.15.0.2
	OPENBSD_2_4_BASE:1.15
	OPENBSD_2_3:1.13.0.2
	OPENBSD_2_3_BASE:1.13
	OPENBSD_2_2:1.12.0.2
	OPENBSD_2_2_BASE:1.12
	OPENBSD_2_1:1.10.0.2
	OPENBSD_2_1_BASE:1.10
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2001.06.24.23.48.34;	author deraadt;	state dead;
branches;
next	1.19;

1.19
date	2000.09.26.14.03.54;	author art;	state Exp;
branches;
next	1.18;

1.18
date	2000.08.19.18.43.30;	author maja;	state Exp;
branches;
next	1.17;

1.17
date	2000.05.01.22.25.47;	author maja;	state Exp;
branches;
next	1.16;

1.16
date	98.11.09.05.40.00;	author millert;	state Exp;
branches
	1.16.6.1;
next	1.15;

1.15
date	98.09.25.09.20.54;	author todd;	state Exp;
branches;
next	1.14;

1.14
date	98.07.07.03.02.44;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	97.11.23.05.21.57;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	97.07.07.08.26.07;	author graichen;	state Exp;
branches;
next	1.11;

1.11
date	97.06.10.14.20.06;	author graichen;	state Exp;
branches;
next	1.10;

1.10
date	96.12.22.15.22.29;	author graichen;	state Exp;
branches;
next	1.9;

1.9
date	96.12.22.15.18.26;	author graichen;	state Exp;
branches;
next	1.8;

1.8
date	96.11.11.23.20.47;	author kstailey;	state Exp;
branches;
next	1.7;

1.7
date	96.10.19.13.26.12;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	96.09.15.21.13.05;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.08.29.09.26.25;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.15.14.57.06;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.02.21.12.53.52;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.01.07.07.41.09;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.32;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.32;	author deraadt;	state Exp;
branches;
next	;

1.16.6.1
date	2001.04.18.16.12.45;	author niklas;	state Exp;
branches;
next	1.16.6.2;

1.16.6.2
date	2001.07.04.10.21.36;	author niklas;	state dead;
branches;
next	;


desc
@@


1.20
log
@bye bye, with prejudice
@
text
@/*	$OpenBSD: conf.c,v 1.19 2000/09/26 14:03:54 art Exp $	*/
/*	$NetBSD: conf.c,v 1.23 1996/09/07 12:40:38 mycroft Exp $	*/

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)conf.c	8.2 (Berkeley) 11/14/93
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/conf.h>
#include <sys/vnode.h>

#include "vnd.h"
bdev_decl(sw);
#include "rz.h"
bdev_decl(rz);
#include "tz.h"
bdev_decl(tz);
#include "sd.h"
#include "st.h"
#include "ss.h"
#include "uk.h"
#include "ccd.h"
#include "rd.h"
bdev_decl(rd);

struct bdevsw	bdevsw[] =
{
	bdev_notdef(),			/* 0: SCSI disk */
	bdev_notdef(),			/* 1: vax ht */
	bdev_disk_init(NVND,vnd),	/* 2: vnode disk driver */
	bdev_notdef(),			/* 3: vax rk*/
	bdev_swap_init(1,sw),		/* 4: swap pseudo-device*/
	bdev_notdef(),			/* 5: vax tm */
	bdev_notdef(),			/* 6: vax ts */
	bdev_notdef(),			/* 7: vax mt */
	bdev_notdef(),			/* 8: vax tu */
	bdev_notdef(),			/* 9: ?? */
	bdev_notdef(),			/* 10: ut */
	bdev_notdef(),			/* 11: 11/730 idc */
	bdev_notdef(),			/* 12: rx */
	bdev_notdef(),			/* 13: uu */
	bdev_notdef(),			/* 14: rl */
	bdev_notdef(),			/* 15: tmscp */
	bdev_notdef(),			/* 16: cs */
	bdev_notdef(),			/* 17: md */
	bdev_tape_init(NST,st),		/* 18: st */
	bdev_disk_init(NSD,sd),		/* 19: sd */
	bdev_tape_init(NTZ, tz),	/* 20: tz */
	bdev_disk_init(NRZ,rz),		/* 21: ?? SCSI disk */ /*XXX*/
	bdev_disk_init(NRZ,rz),		/* 22: ?? old SCSI disk */ /*XXX*/
	bdev_notdef(),			/* 23: mscp */
	bdev_disk_init(NCCD,ccd),	/* 24: concatenated disk driver */
	bdev_disk_init(NRD,rd),		/* 25: ram disk driver */
};
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);

/*
 * Swapdev is a fake block device implemented  in sw.c and only used 
 * internally to get to swstrategy.  It cannot be provided to the
 * users, because the swstrategy routine munches the b_dev and b_blkno
 * entries before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines.   User access (e.g., for libkvm
 * and ps) is provided through the /dev/drum character (raw) device.
 */
dev_t	swapdev = makedev(4, 0);


cdev_decl(sw);
#define	mmread	mmrw
#define	mmwrite	mmrw
dev_type_read(mmrw);
cdev_decl(mm);
#include "pty.h"
#include "bpfilter.h"
#include "dtop.h"
cdev_decl(dtop);
#include "dz_ioasic.h"
#include "dz_ds.h"
cdev_decl(dz);
#include "scc.h"
cdev_decl(scc);
cdev_decl(rz);
cdev_decl(tz);
#include "rasterconsole.h"
cdev_decl(rcons);
#include "fb.h"
cdev_decl(fb);
#include "pm.h"
cdev_decl(pm);
#include "cfb.h"
cdev_decl(cfb);
#include "xcfb.h"
cdev_decl(xcfb);
#include "mfb.h"
cdev_decl(mfb);
cdev_decl(rd);
dev_decl(filedesc,open);

#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
#endif

#ifdef IPFILTER
#define NIPF 1
#else
#define NIPF 0
#endif

#if (NDZ_DS > 0) || (NDZ_IOASIC > 0)
# define NDZ 1
#else
# define NDZ 0
#endif

/* a framebuffer with an attached mouse: */
/* open, close, ioctl, poll, mmap */

/* dev_init(c,n,select) in cdev_fbm_init(c,n) should be dev_init(c,n,poll) */
/* see also dev/fb_userreq.c TTTTT */

#define	cdev_fbm_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) enodev, 0, dev_init(c,n,select), \
	dev_init(c,n,mmap) }


struct cdevsw	cdevsw[] =
{
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_swap_init(1,sw),		/* 1: /dev/drum (swap pseudo-device) */
	cdev_ctty_init(1,ctty),		/* 2: controlling terminal */
	cdev_mm_init(1,mm),		/* 3: /dev/{null,mem,kmem,...} */
        cdev_tty_init(NPTY,pts),        /* 4: pseudo-tty slave */
        cdev_ptc_init(NPTY,ptc),        /* 5: pseudo-tty master */
	cdev_log_init(1,log),		/* 6: /dev/klog */
	cdev_fd_init(1,filedesc),	/* 7: file descriptor pseudo-dev */
	cdev_notdef(),			/* 8: old 2100/3100 frame buffer */
	cdev_notdef(),			/* 9: old slot for SCSI disk */
	cdev_tape_init(NTZ,tz),		/* 10: SCSI tape */
	cdev_disk_init(NVND,vnd),	/* 11: vnode disk driver */
	cdev_bpftun_init(NBPFILTER,bpf),/* 12: Berkeley packet filter */
	cdev_notdef(),			/* 13: color frame buffer */
	cdev_notdef(),			/* 14: maxine color frame buffer */
	cdev_tty_init(NDTOP,dtop),	/* 15: desktop bus interface */
	cdev_tty_init(NDZ,dz),		/* 16: dc7085 serial interface */
	cdev_tty_init(NSCC,scc),	/* 17: scc 82530 serial interface */
	cdev_notdef(),			/* 18: mono frame buffer */
        cdev_notdef(),		        /* 19: mt */
	cdev_tty_init(NPTY,pts),	/* 20: pty slave  */
        cdev_ptc_init(NPTY,ptc),        /* 21: pty master */
	cdev_notdef(),			/* 22: dmf */
	cdev_notdef(),			/* 23: vax 730 idc */
	cdev_notdef(),			/* 24: dn-11 */

		/* 25-28 CSRG reserved to local sites, DEC sez: */
	cdev_notdef(),		/* 25: gpib */
	cdev_notdef(),		/* 26: lpa */
	cdev_notdef(),		/* 27: psi */
	cdev_notdef(),		/* 28: ib */
	cdev_notdef(),		/* 29: ad */
	cdev_notdef(),		/* 30: rx */
	cdev_notdef(),		/* 31: ik */
	cdev_notdef(),		/* 32: rl-11 */
	cdev_notdef(),		/* 33: dhu/dhv */
	cdev_notdef(),		/* 34: Vax Able dmz, mips dc  */
	cdev_notdef(),		/* 35: qv */
	cdev_notdef(),		/* 36: tmscp */
	cdev_notdef(),		/* 37: vs */
	cdev_notdef(),		/* 38: vax cn console */
	cdev_notdef(),		/* 39: lta */
	cdev_notdef(),		/* 40: crl (Venus, aka 8600 aka 11/790 console RL02) */
	cdev_notdef(),		/* 41: cs */
	cdev_notdef(),		/* 42: qd, Qdss, vcb02 */
	cdev_mm_init(1,mm),	/* 43: errlog (VMS-lookalike puke) */
	cdev_notdef(),		/* 44: dmb */
	cdev_notdef(),		/* 45:  vax ss, mips scc */
	cdev_tape_init(NST,st),	/* 46: st */
	cdev_disk_init(NSD,sd),	/* 47: sd */
	cdev_notdef(),		/* 48: Ultrix /dev/trace */
	cdev_notdef(),		/* 49: sm (sysV shm?) */
	cdev_notdef(),		/* 50 sg */
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev), /* 51: xfs communication device */
#else
	cdev_notdef(),		/* 51: sh tty */
#endif
	cdev_notdef(),		/* 52: its */
	cdev_notdef(),		/* 53: nodev */
	cdev_notdef(),		/* 54: nodev */
	cdev_tape_init(NTZ,tz),	/* 55: ultrix-compatible scsi tape (tz) */
	cdev_disk_init(NRZ,rz), /* 56: rz scsi, Ultrix gross coupling to PrestoServe driver */
	cdev_notdef(),		/* 57: nodev */
	cdev_notdef(),		/* 58: fc */
	cdev_notdef(),		/* 59: mscp, again Ultrix gross coupling to PrestoServe driver */
	cdev_notdef(),		/* 60: mscp, again Ultrix gross coupling to PrestoServe driver */
	cdev_notdef(),		/* 61: mscp, again Ultrix gross coupling to PrestoServe driver */
	cdev_notdef(),		/* 62: mscp, again Ultrix gross coupling to PrestoServe driver */
	cdev_notdef(),		/* 63: mscp, again Ultrix gross coupling to PrestoServe driver */
	cdev_notdef(),		/* 64: mscp, again Ultrix gross coupling to PrestoServe driver */
	cdev_notdef(),		/* 65: mscp, again Ultrix gross coupling to PrestoServe driver */
	cdev_notdef(),		/* 66: mscp, again Ultrix gross coupling to PrestoServe driver */
	cdev_notdef(),		/* 67: mscp, again Ultrix gross coupling to PrestoServe driver */
	cdev_notdef(),		/* 68: ld */
	cdev_notdef(),		/* 69: /dev/audit */
	cdev_notdef(),		/* 70: Mogul (nee' CMU) packetfilter */
	cdev_notdef(),		/* 71: xcons, mips Ultrix /dev/xcons virtual console nightmare */
	cdev_notdef(),		/* 72: xa */
	cdev_notdef(),		/* 73: utx */
	cdev_notdef(),		/* 74: sp */
	cdev_notdef(),		/* 75: pr Ultrix PrestoServe NVRAM pseudo-device control device */
	cdev_notdef(),		/* 76: ultrix disk shadowing */
	cdev_notdef(),		/* 77: ek */
	cdev_notdef(),		/* 78: msdup ? */
	cdev_notdef(),		/* 79: so-called multimedia audio A */
	cdev_notdef(),		/* 80: so-called multimedia audio B */
	cdev_notdef(),		/* 81: so-called multimedia video in */
	cdev_notdef(),		/* 82: so-called multimedia video out */
	cdev_notdef(),		/* 83: fd */
	cdev_notdef(),		/* 84: DTi */
	cdev_tty_init(NRASTERCONSOLE,rcons), /* 85: rcons pseudo-dev */
	cdev_fbm_init(NFB,fb),	/* 86: frame buffer pseudo-device */
	cdev_disk_init(NCCD,ccd),	/* 87: concatenated disk driver */
	cdev_random_init(1,random),     /* 88: random data source */
	cdev_uk_init(NUK,uk),           /* 89: unknown SCSI */
	cdev_ss_init(NSS,ss),           /* 90: SCSI scanner */
	cdev_gen_ipf(NIPF,ipl),		/* 91: ip filtering */
	cdev_disk_init(NRD,rd),		/* 92: ram disk driver */
};
int	nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);

int	mem_no = 2; 	/* major device number of memory special file */

/*
 * Routine that identifies /dev/mem and /dev/kmem.
 */
int
iskmemdev(dev)
	dev_t dev;
{

#ifdef COMPAT_BSD44
	return (major(dev) == 2 && minor(dev) < 2);
#else
	return (major(dev) == 3 && minor(dev) < 2);
#endif
}

/*
 * Returns true if dev is /dev/zero.
 */
int
iszerodev(dev)
	dev_t dev;
{

#ifdef COMPAT_BSD44
	return (major(dev) == 2 && minor(dev) == 12);
#else
	return (major(dev) == 3 && minor(dev) == 12);
#endif
}

dev_t
getnulldev()
{
	return makedev(3, 2);
}

static int chrtoblktbl[] =  {
	/* XXXX This needs to be dynamic for LKMs. */
	/*VCHR*/	/*VBLK*/
	/*  0 */	NODEV,
	/*  1 */	NODEV,
	/*  2 */	NODEV,
	/*  3 */	NODEV,
	/*  4 */	NODEV,
	/*  5 */	NODEV,
	/*  6 */	NODEV,
	/*  7 */	NODEV,
	/*  8 */	NODEV,
	/*  9 */	NODEV,
	/* 10 */	NODEV,
	/* 11 */	2,
	/* 12 */	NODEV,
	/* 13 */	NODEV,
	/* 14 */	NODEV,
	/* 15 */	NODEV,
	/* 16 */	NODEV,
	/* 17 */	NODEV,
	/* 18 */	NODEV,
	/* 19 */	NODEV,
	/* 20 */	NODEV,
	/* 21 */	NODEV,
	/* 22 */	NODEV,
	/* 23 */	NODEV,
	/* 24 */	NODEV,
	/* 25 */	NODEV,
	/* 26 */	NODEV,
	/* 27 */	NODEV,
	/* 28 */	NODEV,
	/* 29 */	NODEV,
	/* 30 */	NODEV,
	/* 31 */	NODEV,
	/* 32 */	NODEV,
	/* 33 */	NODEV,
	/* 34 */	NODEV,
	/* 35 */	NODEV,
	/* 36 */	NODEV,
	/* 37 */	NODEV,
	/* 38 */	NODEV,
	/* 39 */	NODEV,
	/* 40 */	NODEV,
	/* 41 */	NODEV,
	/* 42 */	NODEV,
	/* 43 */	NODEV,
	/* 44 */	NODEV,
	/* 45 */	NODEV,
	/* 46 */	NODEV,
	/* 47 */	19,		/* sd */
	/* 48 */	NODEV,
	/* 49 */	NODEV,
	/* 50 */	NODEV,
	/* 51 */	NODEV,
	/* 52 */	NODEV,
	/* 53 */	NODEV,
	/* 54 */	NODEV,
	/* 55 */	NODEV,
	/* 56 */	21,		/* 19 */ /* XXX rz, remapped to sd */
	/* 57 */	NODEV,
	/* 58 */	NODEV,
	/* 59 */	NODEV,
	/* 60 */	NODEV,
	/* 61 */	NODEV,
	/* 62 */	NODEV,
	/* 63 */	NODEV,
	/* 64 */	NODEV,
	/* 65 */	NODEV,
	/* 66 */	NODEV,
	/* 67 */	NODEV,
	/* 68 */	NODEV,
	/* 69 */	NODEV,
	/* 70 */	NODEV,
	/* 71 */	NODEV,
	/* 72 */	NODEV,
	/* 73 */	NODEV,
	/* 74 */	NODEV,
	/* 75 */	NODEV,
	/* 76 */	NODEV,
	/* 77 */	NODEV,
	/* 78 */	NODEV,
	/* 79 */	NODEV,
	/* 80 */	NODEV,
	/* 81 */	NODEV,
	/* 82 */	NODEV,
	/* 83 */	NODEV,
	/* 84 */	NODEV,
	/* 85 */	NODEV,
	/* 86 */	NODEV,
	/* 87 */	24,
	/* 88 */	NODEV,
	/* 89 */	NODEV,
	/* 90 */	NODEV,
	/* 91 */	NODEV,
	/* 92 */	25,		/* rd */
};

/*
 * Routine to convert from character to block device number.
 */
dev_t
chrtoblk(dev)
	dev_t dev;
{
	int blkmaj;

	if (major(dev) >= nchrdev || 
	    major(dev) > sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]))
		return (NODEV);
	blkmaj = chrtoblktbl[major(dev)];
	if (blkmaj == NODEV)
		return (NODEV);
	return (makedev(blkmaj, minor(dev)));
}

/*
 * Convert a character device number to a block device number.
 */
dev_t
blktochr(dev)
        dev_t dev;
{
        int blkmaj = major(dev);
        int i;

        if (blkmaj >= nblkdev)
                return (NODEV);
        for (i = 0; i < sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]); i++)
                if (blkmaj == chrtoblktbl[i])
                        return (makedev(i, minor(dev)));
        return (NODEV);
}
@


1.19
log
@Implement getnulldev that returns the dev_t for "/dev/null".
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 2000/08/19 18:43:30 maja Exp $	*/
@


1.18
log
@Late in the release of OpenBSD/pmax 2.7 a conflict between the pmax
dc driver and the generic if_dc driver was found. The fix was to
change the pmax drivers name to dz instead. But this was only done
in a miminal way.

This commit will switch over and use the new dz driver.

-moj
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d301 6
@


1.17
log
@changed dc to dz to avoid conflict with if_dc. -moj
@
text
@d1 1
d117 1
a117 1
cdev_decl(dc);
d185 1
a185 1
	cdev_tty_init(NDZ,dc),		/* 16: dc7085 serial interface */
@


1.16
log
@Add ramdisk support for pmax; untested but compiles
@
text
@d114 2
a115 2
#include "dc_ioasic.h"
#include "dc_ds.h"
d147 2
a148 2
#if (NDC_DS > 0) || (NDC_IOASIC > 0)
# define NDC 1
d150 1
a150 1
# define NDC 0
d184 1
a184 1
	cdev_tty_init(NDC,dc),		/* 16: dc7085 serial interface */
@


1.16.6.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@a0 1
/*	$OpenBSD: conf.c,v 1.19 2000/09/26 14:03:54 art Exp $	*/
d114 3
a116 3
#include "dz_ioasic.h"
#include "dz_ds.h"
cdev_decl(dz);
d147 2
a148 2
#if (NDZ_DS > 0) || (NDZ_IOASIC > 0)
# define NDZ 1
d150 1
a150 1
# define NDZ 0
d184 1
a184 1
	cdev_tty_init(NDZ,dz),		/* 16: dc7085 serial interface */
a299 6
}

dev_t
getnulldev()
{
	return makedev(3, 2);
@


1.16.6.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.16.6.1 2001/04/18 16:12:45 niklas Exp $	*/
@


1.15
log
@o xfs is in the house (thanks art, for getting me started)
o all but vax are major 51
@
text
@d60 2
d90 1
d133 1
d266 1
d393 5
@


1.14
log
@fix chrtoblk() so that it returne ENODEV for entries beyond the end of the table
@
text
@d132 5
d217 3
d221 1
@


1.13
log
@use MI cdev_decl(ipl)
@
text
@d390 2
a391 1
	if (major(dev) >= nchrdev)
@


1.12
log
@add ipl device (ipfilter) - i have to rework and cleanup conf.c and
MAKEDEV for the pmax soon !
@
text
@a131 1
cdev_decl(ipl);
@


1.11
log
@update the pmax specific stuff to NetBSD-current as of about 970608 - some
cosmetic things will follow together with an update to an exact NETBSD_CU-
RRENT_xxxxxx level
@
text
@d132 7
d251 3
a253 2
	cdev_uk_init(NUK,uk),           /* 98: unknown SCSI */
	cdev_ss_init(NSS,ss),           /* 99: SCSI scanner */
@


1.10
log
@bring back all the local OpenBSD changes to the pmax tree since 961107

i hope that i did'nt break anything of the files required for the alpha
(in the dev dir) niklas :-)
@
text
@d111 2
a112 1
#include "dc.h"
d132 5
@


1.9
log
@update the pmax stuff to NetBSD 961107 - this version i got somehow
compiled on my decstation 2100 (PLUTO) - but it will not fully work
out of the box - but i want to bring it into the tree because i get
my own pmax on 961228 - so that i have a good startpoint then :-)

all the OpenBSD changes to the pmax tree will follow in the next commit
@
text
@a49 1
bdev_decl(vnd);
a55 1
bdev_decl(sd);
d57 2
a58 1
bdev_decl(st);
a59 1
bdev_decl(ccd);
a101 1
cdev_decl(cn);
a102 2
cdev_decl(random);
cdev_decl(ctty);
a107 12
#define ptstty ptytty
#define ptsioctl ptyioctl
cdev_decl(pts);
#define ptctty ptytty
#define ptcioctl ptyioctl
cdev_decl(ptc);
cdev_decl(log);
cdev_decl(fd);
cdev_decl(sd);
cdev_decl(st);
cdev_decl(vnd);
cdev_decl(ccd);
a108 1
cdev_decl(bpf);
d238 2
@


1.8
log
@Updates for SCSI scanner and SCSI unknown devices.
Removed MI *dev_decl() stuff that is now in sys/conf.h
@
text
@d1 1
a1 1
/*	$NetBSD: conf.c,v 1.21.4.1 1996/08/13 07:58:43 jonathan Exp $	*/
a48 2
int	ttselect	__P((dev_t, int, struct proc *));

d50 1
d57 1
d59 1
a59 2
#include "ss.h"
#include "uk.h"
d61 1
a89 8

	bdev_lkm_dummy(),		/* 25 */
	bdev_lkm_dummy(),		/* 26 */
	bdev_lkm_dummy(),		/* 27 */
	bdev_lkm_dummy(),		/* 28 */
	bdev_lkm_dummy(),		/* 29 */
	bdev_lkm_dummy(),		/* 30 */

d104 1
d106 2
d113 7
d121 4
d126 1
d149 1
d151 4
a154 1
/* open, close, ioctl, select, mmap */
d165 1
a165 1
	cdev_cn_init(1,cn),		/* 0: virtual console */  /* (dz?) */
d255 1
a255 13

	cdev_lkm_dummy(),		/* 88 */
	cdev_lkm_dummy(),		/* 89 */
	cdev_lkm_init(NLKM,lkm),	/* 90: loadable module driver */
	cdev_lkm_dummy(),		/* 91 */
	cdev_lkm_dummy(),		/* 92 */
	cdev_lkm_dummy(),		/* 93 */
	cdev_lkm_dummy(),		/* 94 */
	cdev_lkm_dummy(),		/* 95 */
	cdev_lkm_dummy(),		/* 96 */
	cdev_random_init(1,random),	/* 97 */
	cdev_uk_init(NUK,uk),		/* 98: unknown SCSI */
	cdev_ss_init(NSS,ss),           /* 99: SCSI scanner */
d399 18
@


1.7
log
@random device is permanent now.
@
text
@a48 6
#ifndef LKM
#define	lkmenodev	enodev
#else
int	lkmenodev __P((void));
#endif

a51 1
bdev_decl(vnd);
a57 1
bdev_decl(sd);
d59 2
a60 1
bdev_decl(st);
a61 1
bdev_decl(ccd);
a111 1
cdev_decl(cn);
a112 2
cdev_decl(random);
cdev_decl(ctty);
a117 7
#define ptstty ptytty
#define ptsioctl ptyioctl
cdev_decl(pts);
#define ptctty ptytty
#define ptcioctl ptyioctl
cdev_decl(ptc);
cdev_decl(log);
a118 4
cdev_decl(sd);
cdev_decl(st);
cdev_decl(vnd);
cdev_decl(ccd);
a119 1
cdev_decl(bpf);
a141 8
#ifdef LKM
#define	NLKM	1
#else
#define	NLKM	0
#endif
cdev_decl(lkm);


d255 2
a256 1
	
@


1.6
log
@sync to netbsd; for graichen
@
text
@d122 1
d285 1
@


1.5
log
@rnd -> random
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 1996/07/15 14:57:06 mickey Exp $	*/
d49 6
d98 8
d162 8
a169 2
#include "random.h"
cdev_decl(random);
a181 8
/* open, close, read, ioctl */
cdev_decl(ipl);
#ifdef IPFILTER
#define NIPF 1
#else
#define NIPF 0
#endif

d184 1
a184 1
	cdev_cn_init(1,cn),		/* 0: virtual console */
d191 1
a191 1
	cdev_fd_init(1,fd),		/* 7: file descriptor pseudo-dev */
d274 11
a284 2
	cdev_gen_ipf(NIPF,ipl),	/* 88: IP filter log */
	cdev_random_init(NRANDOM,random);	/* 89: random data source */
@


1.4
log
@add rnd driver
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 1996/02/21 12:53:52 mickey Exp $	*/
d148 2
a149 2
#include "rnd.h"
cdev_decl(rnd);
d263 1
a263 1
	cdev_rnd_init(NRND,rnd);	/* 89: random data source */
@


1.3
log
@move cdev_gen_ipf() macro to the <sys/conf.h>, so the lkm
for ipl is possible and also, why it is in <machine/conf.c> while
it (ipl) is in <net/*> ???
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 1995/10/05 01:53:02 jonathan Exp $	*/
d148 2
d263 1
@


1.2
log
@created devices for the IP filter log on all architectures
@
text
@d1 1
a1 1
/*	$NetBSD: conf.c,v 1.20 1995/10/05 01:53:02 jonathan Exp $	*/
a161 5
#define	cdev_gen_ipf(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) nullop, 0, (dev_type_select((*))) enodev, \
	(dev_type_mmap((*))) enodev, 0 }
@


1.1
log
@Initial revision
@
text
@d160 13
d265 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
