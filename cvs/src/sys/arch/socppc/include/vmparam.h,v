head	1.13;
access;
symbols
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.8
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.4
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.12.0.6
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.13
date	2015.11.01.20.10.00;	author miod;	state Exp;
branches;
next	1.12;
commitid	sHllVPiKPJBfwmTJ;

1.12
date	2015.02.10.10.02.55;	author tedu;	state Exp;
branches;
next	1.11;
commitid	X8GpdpDRNqUOBsMT;

1.11
date	2014.10.09.04.01.27;	author tedu;	state Exp;
branches;
next	1.10;
commitid	wAdRwhtUH36R0JxT;

1.10
date	2014.10.09.03.59.59;	author tedu;	state Exp;
branches;
next	1.9;
commitid	I0KLtD9aVxAdm6aW;

1.9
date	2014.06.02.19.32.10;	author brad;	state Exp;
branches;
next	1.8;
commitid	ExBRxXzuxKlwnkQv;

1.8
date	2014.01.30.18.16.41;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2014.01.24.05.21.19;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2014.01.23.22.06.29;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2011.05.30.22.25.22;	author oga;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.03.21.38.49;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2010.12.15.05.30.19;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.13.21.54.15;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.10.12.02.21;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Remove the definition of USRTEXT. It has no relevance outside of the non-PIE
a.out world.
ok deraadt@@ kettenis@@
@
text
@/*	$OpenBSD: vmparam.h,v 1.12 2015/02/10 10:02:55 tedu Exp $	*/
/*	$NetBSD: vmparam.h,v 1.1 1996/09/30 16:34:38 ws Exp $	*/

/*-
 * Copyright (C) 1995, 1996 Wolfgang Solfrank.
 * Copyright (C) 1995, 1996 TooLs GmbH.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef MACHINE_VMPARAM_H
#define MACHINE_VMPARAM_H

#define	USRSTACK	VM_MAXUSER_ADDRESS

#ifndef	MAXTSIZ
#define	MAXTSIZ		(64*1024*1024)		/* max text size */
#endif

#ifndef	DFLDSIZ
#define	DFLDSIZ		(64*1024*1024)		/* default data size */
#endif

#ifndef	MAXDSIZ
#define	MAXDSIZ		(2UL*1024*1024*1024)	/* max data size */
#endif

#ifndef BRKSIZ
#define	BRKSIZ		MAXDSIZ			/* heap gap size */
#endif

#ifndef	DFLSSIZ
#define	DFLSSIZ		(2*1024*1024)		/* default stack size */
#endif

#ifndef	MAXSSIZ
#define	MAXSSIZ		(32*1024*1024)		/* max stack size */
#endif

#define STACKGAP_RANDOM	256*1024

/*
 * Size of shared memory map
 */
#ifndef	SHMMAXPGS
#define	SHMMAXPGS       8192			/* 32mb */
#endif

/*
 * Size of User Raw I/O map
 */
#define	USRIOSIZE	1024

/*
 * Would like to have MAX addresses = 0, but this doesn't (currently) work
 */
#define	VM_MIN_ADDRESS		((vaddr_t)PAGE_SIZE)
#define	VM_MAXUSER_ADDRESS	((vaddr_t)0xfffff000)
#define	VM_MAX_ADDRESS		VM_MAXUSER_ADDRESS
#define	VM_MIN_KERNEL_ADDRESS	((vaddr_t)(PPC_KERNEL_SR << ADDR_SR_SHIFT))

/* ppc_kvm_stolen is so that vm space can be stolen before vm is fully
 * initialized.
 */
extern vaddr_t ppc_kvm_stolen;
#define VM_KERN_ADDRESS_SIZE  (PPC_SEGMENT_LENGTH - (32 * 1024 * 1024))
#define	VM_MAX_KERNEL_ADDRESS	(VM_MIN_KERNEL_ADDRESS + VM_KERN_ADDRESS_SIZE)

#define	VM_PHYS_SIZE		(USRIOSIZE * PAGE_SIZE)

#define	VM_PHYSSEG_MAX		1
#define	VM_PHYSSEG_NOADD
#define	VM_PHYSSEG_STRAT	VM_PSTRAT_RANDOM

#endif
@


1.12
log
@increase min address to page size for all remaining min == 0 systems.
not necessary, but consistent with other platforms. ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.11 2014/10/09 04:01:27 tedu Exp $	*/
a37 1
#define	USRTEXT		PAGE_SIZE
@


1.11
log
@revert unintentional commit unrelated to LKM
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.10 2014/10/09 03:59:59 tedu Exp $	*/
d82 1
a82 1
#define	VM_MIN_ADDRESS		((vaddr_t)0)
@


1.10
log
@remove LKM devices
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.9 2014/06/02 19:32:10 brad Exp $	*/
d82 1
a82 1
#define	VM_MIN_ADDRESS		((vaddr_t)PAGE_SIZE)
@


1.9
log
@Bump DFLSSIZ to 2MB to match most of the other platforms.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.8 2014/01/30 18:16:41 miod Exp $	*/
d82 1
a82 1
#define	VM_MIN_ADDRESS		((vaddr_t)0)
@


1.8
log
@Move declaration of struct vm_page_md from <machine/vmparam.h> to
<machine/pmap.h> where it belongs, and compensate in <uvm/uvm_extern.h>
by including <uvm/uvm_pmap.h> before <uvm/uvm_page.h>. Tested on all
MACHINE_ARCH but amd64 and i386 (and hppa64).
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.7 2014/01/24 05:21:19 miod Exp $	*/
d58 1
a58 1
#define	DFLSSIZ		(1*1024*1024)		/* default stack size */
@


1.7
log
@Do not protect struct vm_page_md with defined(_KERNEL), for userland uvm
grovellers need to know it to be able to get the right size for struct
vm_page.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6 2014/01/23 22:06:29 miod Exp $	*/
a98 9

struct pv_entry;
struct vm_page_md {
	LIST_HEAD(,pte_desc) pv_list;
};

#define VM_MDPAGE_INIT(pg) do {                 \
	LIST_INIT(&((pg)->mdpage.pv_list)); 	\
} while (0)
@


1.6
log
@unifdef -D__HAVE_VM_PAGE_MD - no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.5 2011/05/30 22:25:22 oga Exp $	*/
a99 2
#ifdef _KERNEL

a107 3

#endif

@


1.5
log
@Remove the freelist member from vm_physseg

The new world order of pmemrange makes this data completely redundant
(being dealt with by the pmemrange constraints instead). Remove all code
that messes with the freelist.

While touching every caller of uvm_page_physload() anyway, add the flags
argument to all callers (all but one is 0 and that one already used
PHYSLOAD_DEVICE) and remove the macro magic to allow callers to continue
without it.

Should shrink the code a bit, as well.

matthew@@ pointed out some mistakes i'd made.
``freelist death, I like. Ok.' ariane@@
`I agree with the general direction, go ahead and i'll fix any fallout
shortly'' miod@@ (68k 88k and vax i could not check would build)
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.4 2011/03/03 21:38:49 ajacoutot Exp $	*/
a101 1
#define __HAVE_VM_PAGE_MD
@


1.4
log
@Crank MAXDSIZ up to 2G on macppc and socppc.

ok miod@@ drahn@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.3 2010/12/15 05:30:19 tedu Exp $	*/
a98 3

#define VM_NFREELIST		1
#define VM_FREELIST_DEFAULT	0
@


1.3
log
@oops, i forgot to check in the BRKSIZ define in uvm, but deraadt thinks
its better as a per arch MD define anyway.  all default to MAXDSIZ as before.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.2 2008/05/13 21:54:15 miod Exp $	*/
d50 1
a50 1
#define	MAXDSIZ		(512*1024*1024)		/* max data size */
@


1.2
log
@Memory is contiguous and non-expandable, so lower VM_PHYSSEG_MAX down to 1.
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.1 2008/05/10 12:02:21 kettenis Exp $	*/
d51 4
@


1.1
log
@OpenBSD/socppc, a port to the Thecus N1200, and potentially other Freescale
PowerPC SoC platforms that use u-boot as a bootloader.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d92 3
a94 3
#define	VM_PHYSSEG_MAX	32	/* actually we could have this many segments */
#define	VM_PHYSSEG_STRAT	VM_PSTRAT_BSEARCH
#define	VM_PHYSSEG_NOADD	/* can't add RAM after vm_mem_init */
@

