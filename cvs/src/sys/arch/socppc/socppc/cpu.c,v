head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.10
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.6
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.4.0.16
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.14
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.03.31.15.51.05;	author mpi;	state Exp;
branches;
next	1.8;
commitid	V6LJj7jikqpWX3RD;

1.8
date	2014.09.06.10.15.52;	author mpi;	state Exp;
branches;
next	1.7;
commitid	RzNS2F7j0UQHdMTX;

1.7
date	2014.03.29.18.09.30;	author guenther;	state Exp;
branches;
next	1.6;

1.6
date	2014.01.19.12.45.36;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2013.10.31.08.26.12;	author mpi;	state Exp;
branches;
next	1.4;

1.4
date	2009.09.02.20.29.39;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2009.08.27.20.42.02;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2009.02.17.21.35.56;	author kettenis;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.10.12.02.21;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Merge two versions of ppc_check_procid().

ok miod@@, kettenis@@ as part of a larger diff
@
text
@/*	$OpenBSD: cpu.c,v 1.8 2014/09/06 10:15:52 mpi Exp $	*/

/*
 * Copyright (c) 2008 Mark Kettenis
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <dev/rndvar.h>

#include <machine/autoconf.h>
#include <powerpc/hid.h>

#include <dev/ofw/openfirm.h>


struct cpu_info cpu_info[PPC_MAXPROCS] = { { NULL } }; /* XXX */

char cpu_model[] = "8347";
char machine[] = MACHINE;	/* cpu architecture */

int	cpu_match(struct device *, void *, void *);
void	cpu_attach(struct device *, struct device *, void *);

struct cfattach cpu_ca = {
	sizeof(struct device), cpu_match, cpu_attach
};

struct cfdriver cpu_cd = {
	NULL, "cpu", DV_DULL
};

int
cpu_match(struct device *parent, void *cfdata, void *aux)
{
	struct mainbus_attach_args *ma = aux;
	char buf[32];

	if (OF_getprop(ma->ma_node, "device_type", buf, sizeof(buf)) <= 0)
		return (0);

	if (strcmp(buf, "cpu") == 0)
		return (1);

	return (0);
}

void
cpu_attach(struct device *parent, struct device *self, void *aux)
{
	struct cpu_info *ci;
	u_int32_t hid0;

	ci = &cpu_info[0];
	ci->ci_cpuid = 0;
	ci->ci_intrdepth = -1;
	ci->ci_dev = self;

	printf(": %s\n", cpu_model);

	/* Enable data cache. */
	hid0 = ppc_mfhid0();
	if ((hid0 & HID0_DCE) == 0) {
		__asm volatile (
		    "sync; mtspr 1008,%0; mtspr 1008,%1"
		    :: "r" (hid0 | HID0_DCFI), "r" (hid0 | HID0_DCE));
	}

	/* Enable instruction cache. */
	hid0 = ppc_mfhid0();
	if ((hid0 & HID0_ICE) == 0) {
		__asm volatile (
		    "isync; mtspr 1008,%0; mtspr 1008,%1"
		    :: "r" (hid0 | HID0_ICFI), "r" (hid0 | HID0_ICE));
	}

	/* Select DOZE mode. */
	hid0 = ppc_mfhid0();
	hid0 &= ~(HID0_NAP | HID0_DOZE | HID0_SLEEP);
	hid0 |= HID0_DOZE | HID0_DPM;
	ppc_mthid0(hid0);
	ppc_cpuidle = 1;
}
@


1.8
log
@Rewrite cpu_idle & friends to not check and update the hid0 register
in the idle loop, in preparation for G5 support.

Only do a disable/enable interrupt dance if the running CPU supports a
sleep mode.

Fix entering ddb(8) from interrupt context by not modifying the return
address of the 'forced' trap frame.

While here, modify the existing logic to terminate prefetching of all
data streams if AltiVec is supported before setting the POW bit.

With inputs/explanations from drahn, looks ok to miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.c,v 1.7 2014/03/29 18:09:30 guenther Exp $	*/
a95 22
}

int ppc_proc_is_64b;
extern u_int32_t nop_inst;
struct patch {
	u_int32_t *s;
	u_int32_t *e;
};
extern struct patch nop32_start;

void
ppc_check_procid()
{
	u_int32_t *inst;
	struct patch *p;

	ppc_proc_is_64b = 0;
	for (p = &nop32_start; p->s; p++) {
		for (inst = p->s; inst < p->e; inst++)
			*inst = nop_inst;
		syncicache(p->s, (p->e - p->s) * sizeof(*p->e));
	}
@


1.7
log
@It's been a quarter century: we can assume volatile is present with that name.

ok dlg@@ mpi@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.c,v 1.6 2014/01/19 12:45:36 deraadt Exp $	*/
a28 2
extern u_int32_t	hid0_idle;

d93 1
a93 2
	hid0_idle = HID0_DOZE;
	hid0 |= HID0_DPM;
d95 1
@


1.6
log
@Initialize ci_randseed better using arc4random() + a trick.  Remove the
libkern srandom() API since it is not suitable for this use.
ok kettenis miod
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.c,v 1.5 2013/10/31 08:26:12 mpi Exp $	*/
d79 1
a79 1
		__asm __volatile (
d87 1
a87 1
		__asm __volatile (
@


1.5
log
@Add a header for various hardware implementation dependent register
(HID) definitions, from FreeBSD with tweaks, instead of defining
them in different places.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.c,v 1.4 2009/09/02 20:29:39 kettenis Exp $	*/
d22 1
a71 1
	ci->ci_randseed = 1;
@


1.4
log
@Attach devices to mainbus(4) based on information from the flattened device
tree.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.c,v 1.3 2009/08/27 20:42:02 miod Exp $	*/
d24 1
a26 9

#define HID0_DOZE	(1 << (31-8))
#define HID0_NAP	(1 << (31-9))
#define HID0_SLEEP	(1 << (31-10))
#define HID0_DPM	(1 << (31-11))
#define HID0_ICE	(1 << (31-16))
#define HID0_DCE	(1 << (31-17))
#define HID0_ICFI	(1 << (31-20))
#define HID0_DCFI	(1 << (31-21))
@


1.3
log
@Harmless sizeof ptr bug in ppc_check_procid(); ok drahn@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.c,v 1.2 2009/02/17 21:35:56 kettenis Exp $	*/
d23 4
d58 10
a67 1
	return (1);
@


1.2
log
@Declare cpu_model as an array instead of a pointer; makes sysctl hw.model
return a sensible value instead of an empty string.

tested by jasper@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.c,v 1.1 2008/05/10 12:02:21 kettenis Exp $	*/
d113 1
a113 1
		syncicache(p->s, (p->e - p->s) * sizeof(p->e));
@


1.1
log
@OpenBSD/socppc, a port to the Thecus N1200, and potentially other Freescale
PowerPC SoC platforms that use u-boot as a bootloader.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
char *cpu_model = "8347";
@

