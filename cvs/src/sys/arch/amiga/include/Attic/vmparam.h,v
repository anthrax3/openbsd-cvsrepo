head	1.20;
access;
symbols
	SMP_SYNC_A:1.20
	SMP_SYNC_B:1.20
	UBC_SYNC_A:1.20
	OPENBSD_3_2:1.19.0.4
	OPENBSD_3_2_BASE:1.19
	OPENBSD_3_1:1.19.0.2
	OPENBSD_3_1_BASE:1.19
	UBC_SYNC_B:1.19
	UBC:1.18.0.2
	UBC_BASE:1.18
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.6.0.12
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.10
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.8
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2002.12.31.16.35.38;	author miod;	state dead;
branches;
next	1.19;

1.19
date	2002.02.17.22.59.52;	author maja;	state Exp;
branches;
next	1.18;

1.18
date	2001.12.05.16.25.44;	author art;	state Exp;
branches
	1.18.2.1;
next	1.17;

1.17
date	2001.11.30.17.37.43;	author art;	state Exp;
branches;
next	1.16;

1.16
date	2001.09.22.18.00.06;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2001.08.15.21.22.29;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.13.00.12.38;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2001.08.12.20.06.03;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.27.06.19.44;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.06.00.45.48;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2001.05.05.20.56.33;	author art;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.15.15.18.36;	author art;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.27.20.25.04;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2000.05.27.19.42.49;	author art;	state Exp;
branches;
next	1.6;

1.6
date	98.03.26.14.20.11;	author niklas;	state Exp;
branches
	1.6.10.1;
next	1.5;

1.5
date	98.03.26.13.08.01;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	97.09.18.13.40.04;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.08.04.01.15.15;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.05.02.06.44.47;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.04;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.04;	author deraadt;	state Exp;
branches;
next	;

1.6.10.1
date	2001.04.18.16.02.19;	author niklas;	state Exp;
branches;
next	1.6.10.2;

1.6.10.2
date	2001.07.04.10.15.17;	author niklas;	state Exp;
branches;
next	1.6.10.3;

1.6.10.3
date	2001.10.31.02.52.45;	author nate;	state Exp;
branches;
next	1.6.10.4;

1.6.10.4
date	2001.12.05.00.39.09;	author niklas;	state Exp;
branches;
next	1.6.10.5;

1.6.10.5
date	2002.03.06.00.56.19;	author niklas;	state Exp;
branches;
next	1.6.10.6;

1.6.10.6
date	2003.03.27.23.19.18;	author niklas;	state dead;
branches;
next	;

1.18.2.1
date	2002.06.11.03.34.58;	author art;	state Exp;
branches;
next	1.18.2.2;

1.18.2.2
date	2003.05.19.21.49.39;	author tedu;	state dead;
branches;
next	;


desc
@@


1.20
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: vmparam.h,v 1.19 2002/02/17 22:59:52 maja Exp $	*/
/*	$NetBSD: vmparam.h,v 1.16 1997/07/12 16:18:36 perry Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1982, 1986, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * from: Utah $Hdr: vmparam.h 1.16 91/01/18$
 *
 *	@@(#)vmparam.h	7.3 (Berkeley) 5/7/91
 */
#ifndef _MACHINE_VMPARAM_H_
#define _MACHINE_VMPARAM_H_

#include <machine/pte.h>

/*
 * Machine dependent constants for amiga
 */
/*
 * USRTEXT is the start of the user text/data space, while USRSTACK
 * is the top (end) of the user stack.  LOWPAGES and HIGHPAGES are
 * the number of pages from the beginning of the P0 region to the
 * beginning of the text and from the beginning of the P1 region to the
 * beginning of the stack respectively.
 *
 * These are a mixture of i386, sun3 and hp settings.. 
 */

/* Sun settings. Still hope, that I might get sun3 binaries to work... */
#define	USRTEXT		(vm_offset_t)0x2000
#define	USRSTACK	(vm_offset_t)0x0E000000
#define	LOWPAGES	btoc(USRTEXT)

/*
 * Virtual memory related constants, all in bytes
 */

#ifndef MAXTSIZ
#define	MAXTSIZ		(6*1024*1024)		/* max text size */
#endif
#ifndef DFLDSIZ
#define	DFLDSIZ		(32*1024*1024)		/* initial data size limit */
#endif
#ifndef MAXDSIZ
#define	MAXDSIZ		(128*1024*1024)		/* max data size */
#endif
#ifndef	DFLSSIZ
#define	DFLSSIZ		(2*1024*1024)		/* initial stack size limit */
#endif
#ifndef	MAXSSIZ
#define	MAXSSIZ		(32*1024*1024)		/* max stack size */
#endif

/*
 * Sizes of the system and user portions of the system page table.
 */
#define	USRPTSIZE 	(1 * NPTEPG)	/* 16mb */

/*
 * PTEs for mapping user space into the kernel for phyio operations.
 * One page is enough to handle 16Mb of simultaneous raw IO operations.
 */
#ifndef USRIOSIZE
#define USRIOSIZE	(1 * NPTEPG)	/* 16mb */
#endif

/*
 * PTEs for system V style shared memory.
 * This is basically slop for kmempt which we actually allocate (malloc) from.
 */
#ifndef SHMMAXPGS
#define SHMMAXPGS	(1 * NPTEPG)	/* 16mb */
#endif

/*
 * The time for a process to be blocked before being very swappable.
 * This is a number of seconds which the system takes as being a non-trivial
 * amount of real time.  You probably shouldn't change this;
 * it is used in subtle ways (fractions and multiples of it are, that is, like
 * half of a ``long time'', almost a long time, etc.)
 * It is related to human patience and other factors which don't really
 * change over time.
 */
#define	MAXSLP 		20

/*
 * user/kernel map constants
 */
#define VM_MIN_ADDRESS		((vm_offset_t)0)
#define VM_MAXUSER_ADDRESS	((vm_offset_t)(USRSTACK))
#define VM_MAX_ADDRESS		((vm_offset_t)(0-(UPAGES*NBPG)))
#define VM_MIN_KERNEL_ADDRESS	((vm_offset_t)0)
#define VM_MAX_KERNEL_ADDRESS	((vm_offset_t)(0-NBPG))

/*
 * virtual sizes (bytes) for various kernel submaps
 */
#define VM_PHYS_SIZE		(USRIOSIZE*PAGE_SIZE)

#define VM_PHYSSEG_MAX		(16)
#define VM_PHYSSEG_STRAT	VM_PSTRAT_RANDOM
#define VM_PHYSSEG_NOADD	/* XXX this should be done right later */

/*
 * Allow supporting Zorro-II memory as lower priority:
 *
 *     - DEFAULT for Zorro-III memory (presumably 32 bit)
 *     - ZORROII for Zorro-II memory (16 bit, Zorro-II DMA)
 */
#define VM_NFREELIST		2
#define VM_FREELIST_DEFAULT	0
#define VM_FREELIST_ZORROII	1

/* 
 * pmap-specific data stored in the vm_physmem[] array.
 */   
#define __HAVE_PMAP_PHYSSEG
struct pmap_physseg { 
	struct pv_entry *pvent;         /* pv table for this seg */
	char *attrs;                    /* page attributes for this seg */
}; 

/*
 * number of kernel PT pages (initial only, can grow dynamically)
 */
#define VM_KERNEL_PT_PAGES	((vm_size_t)8)

#endif /* !_MACHINE_VMPARAM_H_ */
@


1.19
log
@Patch from Daniel Lucq <daniel@@lucq.org>

The patch allows you to change the value of NMBCLUSTERS, BUFCACHEPERCENT
and NKMEMPAGES using the config command, instead of recompiling the kernel.

This is the kernel part of the patch. I have compiled it on i386, sparc64,
alpha and macppc. -moj ok art@@ maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.18 2001/12/05 16:25:44 art Exp $	*/
@


1.18
log
@VM_KMEM_SIZE no longer needed.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.17 2001/11/30 17:37:43 art Exp $	*/
a131 1
#define VM_MBUF_SIZE		(NMBCLUSTERS*MCLBYTES)
@


1.18.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.18 2001/12/05 16:25:44 art Exp $	*/
d132 1
@


1.18.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.18.2.1 2002/06/11 03:34:58 art Exp $	*/
@


1.17
log
@Now that pmaps can have vm_page_md, make pmap_physseg optional.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.16 2001/09/22 18:00:06 miod Exp $	*/
a132 1
#define VM_KMEM_SIZE		(NKMEMCLUSTERS*PAGE_SIZE)
@


1.16
log
@Remove more old, dusty, unused defines.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.15 2001/08/15 21:22:29 miod Exp $	*/
d153 1
@


1.15
log
@There is no need to alter the MAX_KMAP and MAX_KMAPENT formulae for
this port.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.14 2001/08/13 00:12:38 miod Exp $	*/
a88 10
 * Default sizes of swap allocation chunks (see dmap.h).
 * The actual values may be changed in vminit() based on MAXDSIZ.
 * With MAXDSIZ of 16Mb and NDMAP of 38, dmmax will be 1024.
 * DMMIN should be at least ctod(1) so that vtod() works.
 * vminit() insures this.
 */
#define	DMMIN	32			/* smallest swap allocation */
#define	DMMAX	NBPG			/* largest potential swap allocation */

/*
a118 9

/*
 * A swapped in process is given a small amount of core without being bothered
 * by the page replacement algorithm.  Basically this says that if you are
 * swapped in you deserve some resources.  We protect the last SAFERSS
 * pages against paging and will just swap you out rather than paging you.
 */
#define	SAFERSS		4		/* nominal ``small'' resident set size
					   protected against replacement */
@


1.14
log
@SYSPTSIZE is orhpaned, so g/c the poor define.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.13 2001/08/12 20:06:03 miod Exp $	*/
a180 11

/*
 * XXX Override MI values for number of kernel maps and entries to statically
 * allocate, as we seem to lose hanging in high IPL with the MI values.
 */
#ifndef MAX_KMAP
#define MAX_KMAP	10
#endif
#ifndef MAX_KMAPENT
#define MAX_KMAPENT	500
#endif
@


1.13
log
@KUSER_AREA, BTOPUSRSTACK, P1PAGES are never used, so get rid of them.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.12 2001/06/27 06:19:44 art Exp $	*/
a100 2
/* SYSPTSIZE IS SILLY; IT SHOULD BE COMPUTED AT BOOT TIME */
#define	SYSPTSIZE	(2 * NPTEPG)	/* 16mb */
@


1.12
log
@MNN is no longer an option.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.11 2001/05/06 00:45:48 art Exp $	*/
d51 1
a51 1
 * Machine dependent constants for HP300
d67 1
a67 1
#define KUSER_AREA	(-UPAGES*NBPG)
@


1.11
log
@Update some comments wrt. the CLSIZE changes.
And remove that memory price comment from 1981. It is amusing, but also
confusing because the math in there is only correct on vax.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.10 2001/05/05 20:56:33 art Exp $	*/
a155 2

#define MACHINE_NEW_NONCONTIG
@


1.10
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.9 2000/12/15 15:18:36 art Exp $	*/
a136 11
 * Note that each process has at least UPAGES+CLSIZE pages which are not
 * paged anyways (this is currently 8+2=10 pages or 5k bytes), so this
 * number just means a swapped in process is given around 25k bytes.
 * Just for fun: current memory prices are 4600$ a megabyte on VAX (4/22/81),
 * so we loan each swapped in process memory worth 100$, or just admit
 * that we don't consider it worthwhile and swap it out to disk which costs
 * $30/mb or about $0.75.
 * Update: memory prices have changed recently (9/96). At the current
 * value of $6 per megabyte, we lend each swapped in process memory worth
 * $0.15, or just admit that we don't consider it worthwhile and swap it out
 * to disk which costs $0.20/MB, or just under half a cent.
@


1.9
log
@Grow the number of reserved pt pages.
Solves the 64MB problem. Somewhat based on NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.8 2000/05/27 20:25:04 art Exp $	*/
d165 2
a166 2
#define VM_KMEM_SIZE		(NKMEMCLUSTERS*CLBYTES)
#define VM_PHYS_SIZE		(USRIOSIZE*CLBYTES)
@


1.8
log
@vm freelist defines for UVM.
From NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.7 2000/05/27 19:42:49 art Exp $	*/
d195 1
a195 1
#define VM_KERNEL_PT_PAGES	((vm_size_t)2)		/* XXX: SYSPTSIZE */
@


1.7
log
@MACHINE_NEW_NONCONTIG code for amiga. Enabled by default.
Old contig and NONCONTIG code will no longer work.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6 1998/03/26 14:20:11 niklas Exp $	*/
d173 10
@


1.6
log
@typo in last commit
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.4 1997/09/18 13:40:04 niklas Exp $	*/
d167 14
@


1.6.10.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.9 2000/12/15 15:18:36 art Exp $	*/
a167 24
#define MACHINE_NEW_NONCONTIG

#define VM_PHYSSEG_MAX		(16)
#define VM_PHYSSEG_STRAT	VM_PSTRAT_RANDOM
#define VM_PHYSSEG_NOADD	/* XXX this should be done right later */

/*
 * Allow supporting Zorro-II memory as lower priority:
 *
 *     - DEFAULT for Zorro-III memory (presumably 32 bit)
 *     - ZORROII for Zorro-II memory (16 bit, Zorro-II DMA)
 */
#define VM_NFREELIST		2
#define VM_FREELIST_DEFAULT	0
#define VM_FREELIST_ZORROII	1

/* 
 * pmap-specific data stored in the vm_physmem[] array.
 */   
struct pmap_physseg { 
	struct pv_entry *pvent;         /* pv table for this seg */
	char *attrs;                    /* page attributes for this seg */
}; 

d171 1
a171 1
#define VM_KERNEL_PT_PAGES	((vm_size_t)8)
@


1.6.10.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6.10.1 2001/04/18 16:02:19 niklas Exp $	*/
d137 11
d165 4
a168 2
#define VM_KMEM_SIZE		(NKMEMCLUSTERS*PAGE_SIZE)
#define VM_PHYS_SIZE		(USRIOSIZE*PAGE_SIZE)
@


1.6.10.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6.10.2 2001/07/04 10:15:17 niklas Exp $	*/
d51 1
a51 1
 * Machine dependent constants for amiga
d67 1
a67 1

d89 10
d101 2
d133 9
d183 11
@


1.6.10.4
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6.10.3 2001/10/31 02:52:45 nate Exp $	*/
a152 1
#define __HAVE_PMAP_PHYSSEG
@


1.6.10.5
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d132 2
@


1.6.10.6
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6.10.5 2002/03/06 00:56:19 niklas Exp $	*/
@


1.5
log
@Amiga works more stably with the old MAX_KMAP* entries, besides they
are dynamic today anyhow.  I want to look into this a bit more after release
because this a bit XXX
@
text
@d180 1
a180 1
#ifdef MAX_KMAPENT
@


1.4
log
@Merge of NetBSD changes upto last week or so, with the exception of stand/
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.3 1996/08/04 01:15:15 niklas Exp $	*/
d172 12
@


1.3
log
@Do not mix differently signed entities in comparisons.
Remove unnecessary include.
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: vmparam.h,v 1.14 1996/04/21 21:13:23 veego Exp $	*/
d144 4
@


1.2
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d64 2
a65 2
#define	USRTEXT		0x2000
#define	USRSTACK	0x0E000000
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: vmparam.h,v 1.13 1994/10/26 02:06:47 cgd Exp $	*/
d79 1
a79 1
#define	MAXDSIZ		(32*1024*1024)		/* max data size */
d85 1
a85 1
#define	MAXSSIZ		MAXDSIZ			/* max stack size */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
