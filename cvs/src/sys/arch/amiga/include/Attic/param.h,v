head	1.23;
access;
symbols
	SMP_SYNC_A:1.23
	SMP_SYNC_B:1.23
	UBC_SYNC_A:1.23
	OPENBSD_3_2:1.22.0.4
	OPENBSD_3_2_BASE:1.22
	OPENBSD_3_1:1.22.0.2
	OPENBSD_3_1_BASE:1.22
	UBC_SYNC_B:1.22
	UBC:1.18.0.2
	UBC_BASE:1.18
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9:1.11.0.6
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.11.0.4
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	SMP:1.10.0.12
	SMP_BASE:1.10
	kame_19991208:1.10
	OPENBSD_2_6:1.10.0.10
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.8
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.6
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.4
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.23
date	2002.12.31.16.35.38;	author miod;	state dead;
branches;
next	1.22;

1.22
date	2002.03.25.19.41.03;	author niklas;	state Exp;
branches;
next	1.21;

1.21
date	2002.03.14.01.26.29;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2002.02.23.00.31.11;	author miod;	state Exp;
branches;
next	1.19;

1.19
date	2001.12.20.19.02.26;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2001.12.05.01.57.14;	author provos;	state Exp;
branches
	1.18.2.1;
next	1.17;

1.17
date	2001.11.30.21.00.57;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2001.08.28.09.19.03;	author jj;	state Exp;
branches;
next	1.15;

1.15
date	2001.06.14.07.45.28;	author jj;	state Exp;
branches;
next	1.14;

1.14
date	2001.05.13.02.37.28;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2001.05.10.22.46.29;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.05.20.56.33;	author art;	state Exp;
branches;
next	1.11;

1.11
date	2000.02.22.19.27.43;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	97.09.18.13.40.02;	author niklas;	state Exp;
branches
	1.10.12.1;
next	1.9;

1.9
date	97.09.17.17.44.05;	author downsj;	state Exp;
branches;
next	1.8;

1.8
date	97.01.16.09.25.58;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.05.04.09.29.50;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.05.02.06.44.45;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.03.30.22.18.27;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.03.24.17.31.36;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.02.06.09.24.03;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.01.31.21.11.26;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.04;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.04;	author deraadt;	state Exp;
branches;
next	;

1.10.12.1
date	2000.03.02.07.04.26;	author niklas;	state Exp;
branches;
next	1.10.12.2;

1.10.12.2
date	2001.07.04.10.15.16;	author niklas;	state Exp;
branches;
next	1.10.12.3;

1.10.12.3
date	2001.10.31.02.52.45;	author nate;	state Exp;
branches;
next	1.10.12.4;

1.10.12.4
date	2001.12.05.00.39.09;	author niklas;	state Exp;
branches;
next	1.10.12.5;

1.10.12.5
date	2002.03.06.00.56.19;	author niklas;	state Exp;
branches;
next	1.10.12.6;

1.10.12.6
date	2002.03.28.10.06.15;	author niklas;	state Exp;
branches;
next	1.10.12.7;

1.10.12.7
date	2003.03.27.23.19.18;	author niklas;	state dead;
branches;
next	;

1.18.2.1
date	2002.01.31.22.55.07;	author niklas;	state Exp;
branches;
next	1.18.2.2;

1.18.2.2
date	2002.06.11.03.34.58;	author art;	state Exp;
branches;
next	1.18.2.3;

1.18.2.3
date	2003.05.19.21.49.39;	author tedu;	state dead;
branches;
next	;


desc
@@


1.23
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: param.h,v 1.22 2002/03/25 19:41:03 niklas Exp $	*/
/*	$NetBSD: param.h,v 1.35 1997/07/10 08:22:36 veego Exp $	*/

/*
 * Copyright (c) 1988 University of Utah.
 * Copyright (c) 1982, 1986, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * from: Utah $Hdr: machparam.h 1.11 89/08/14$
 *
 *	@@(#)param.h	7.8 (Berkeley) 6/28/91
 */

#ifndef	_MACHINE_PARAM_H_
#define	_MACHINE_PARAM_H_

/*
 * Machine dependent constants for amiga
 */
#define	_MACHINE	amiga
#define	MACHINE		"amiga"

#define	PGSHIFT		13		/* LOG2(NBPG) */

#define	PAGE_SHIFT	13
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

#define	KERNBASE	0x00000000	/* start of kernel virtual */

#define	SEGSHIFT	24		/* LOG2(NBSEG) [68030 value] */
/* bytes/segment */
/* (256 * (1 << PGSHIFT)) == (1 << SEGSHIFT) */
#define NBSEG		((mmutype == MMU_68040) \
			    ? (32 * (1 << PGSHIFT)) : (256 * (1 << PGSHIFT)))
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */

#define	UPAGES		2		/* pages of u-area */

#include <m68k/param.h>

#define	NPTEPG		(NBPG/(sizeof (pt_entry_t)))

/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)

#define MSGBUFSIZE	8192

/*
 * spl functions; all are normally done in-line
 */
#include <machine/psl.h>

#ifdef _KERNEL
#ifndef	_LOCORE

#include <machine/cpu.h>

void delay(int);
void DELAY(int);
#endif	/* !_LOCORE */
#endif	/* _KERNEL */

#endif /* !_MACHINE_PARAM_H_ */
@


1.22
log
@revert the pmap stuff to 0221, so we can boot
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2001/12/20 19:02:26 miod Exp $	*/
@


1.21
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2002/02/23 00:31:11 miod Exp $	*/
d62 9
@


1.20
log
@Bring back pmap_motorola in service for amiga, too.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2001/12/20 19:02:26 miod Exp $	*/
d86 2
a87 2
void delay __P((int));
void DELAY __P((int));
@


1.19
log
@Temporarily revert the pmap_motorola changes, as they may account for
some problems as well.
Requested by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18 2001/12/05 01:57:14 provos Exp $	*/
a61 9

#define	SEGSHIFT	24		/* LOG2(NBSEG) [68030 value] */
/* bytes/segment */
/* (256 * (1 << PGSHIFT)) == (1 << SEGSHIFT) */
#define NBSEG		((mmutype == MMU_68040) \
			    ? (32 * (1 << PGSHIFT)) : (256 * (1 << PGSHIFT)))
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */

#define	UPAGES		2		/* pages of u-area */
@


1.18
log
@make nkmempages dynamic based on memory. okay art@@ from netbsd:
date: 2000/02/11 19:22:52;  author: thorpej;
Add some very simple code to auto-size the kmem_map.  We take the
amount of physical memory, divide it by 4, and then allow machine
dependent code to place upper and lower bounds on the size.  Export
the computed value to userspace via the new "vm.nkmempages" sysctl.

NKMEMCLUSTERS is now deprecated and will generate an error if you
attempt to use it.  The new option, should you choose to use it,
is called NKMEMPAGES, and two new options NKMEMPAGES_MIN and
NKMEMPAGES_MAX allow the user to configure the bounds in the kernel
config file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 2001/11/30 21:00:57 miod Exp $	*/
d62 9
@


1.18.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2001/12/20 19:02:26 miod Exp $	*/
a61 9

#define	SEGSHIFT	24		/* LOG2(NBSEG) [68030 value] */
/* bytes/segment */
/* (256 * (1 << PGSHIFT)) == (1 << SEGSHIFT) */
#define NBSEG		((mmutype == MMU_68040) \
			    ? (32 * (1 << PGSHIFT)) : (256 * (1 << PGSHIFT)))
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */

#define	UPAGES		2		/* pages of u-area */
@


1.18.2.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18.2.1 2002/01/31 22:55:07 niklas Exp $	*/
d95 2
a96 2
void delay(int);
void DELAY(int);
@


1.18.2.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.18.2.2 2002/06/11 03:34:58 art Exp $	*/
@


1.17
log
@Duplicates there, too.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2001/08/28 09:19:03 jj Exp $	*/
d68 2
a69 1
 * Size of kernel malloc arena in logical pages
d71 2
a72 3
#ifndef NKMEMCLUSTERS
#define	NKMEMCLUSTERS	(2048 * 1024 / PAGE_SIZE)
#endif
@


1.16
log
@Dont hardcode NKMEMCLUSTERS, calculate it to 256, as other m68ks do.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 2001/06/14 07:45:28 jj Exp $	*/
a61 9

#define	SEGSHIFT	24		/* LOG2(NBSEG) [68030 value] */
/* bytes/segment */
/* (256 * (1 << PGSHIFT)) == (1 << SEGSHIFT) */
#define NBSEG		((mmutype == MMU_68040) \
			    ? (32 * (1 << PGSHIFT)) : (256 * (1 << PGSHIFT)))
#define	SEGOFSET	(NBSEG-1)	/* byte offset into segment */

#define	UPAGES		2		/* pages of u-area */
@


1.15
log
@Same fix as miod did for sun3/vax, but for amiga too.
Need more includes for netinet-stuff to work.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 2001/05/13 02:37:28 millert Exp $	*/
d80 1
a80 1
#define	NKMEMCLUSTERS	(3072 * 1024 / PAGE_SIZE)
@


1.14
log
@PAGE_MASK is (PAGE_SIZE - 1), *not* (PAGE_SHIFT - 1)
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 2001/05/10 22:46:29 miod Exp $	*/
d92 3
@


1.13
log
@Provide PAGE_{MASK,SHIFT,SIZE} constants.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.12 2001/05/05 20:56:33 art Exp $	*/
d59 1
a59 1
#define	PAGE_MASK	(PAGE_SHIFT - 1)
@


1.12
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 2000/02/22 19:27:43 deraadt Exp $	*/
d56 5
@


1.11
log
@enlarge msgbuf, somewhat line netbsd did
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 1997/09/18 13:40:02 niklas Exp $	*/
d72 1
a72 1
 * Size of kernel malloc arena in CLBYTES-sized logical pages
d75 1
a75 1
#define	NKMEMCLUSTERS	(3072 * 1024 / CLBYTES)
@


1.10
log
@Merge of NetBSD changes upto last week or so, with the exception of stand/
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 1997/09/17 17:44:05 downsj Exp $	*/
d77 2
@


1.10.12.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a76 2

#define MSGBUFSIZE	8192
@


1.10.12.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10.12.1 2000/03/02 07:04:26 niklas Exp $	*/
a55 5

#define	PAGE_SHIFT	13
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

d72 1
a72 1
 * Size of kernel malloc arena in logical pages
d75 1
a75 1
#define	NKMEMCLUSTERS	(3072 * 1024 / PAGE_SIZE)
a86 3

#include <machine/cpu.h>

@


1.10.12.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10.12.2 2001/07/04 10:15:16 niklas Exp $	*/
d80 1
a80 1
#define	NKMEMCLUSTERS	(2048 * 1024 / PAGE_SIZE)
@


1.10.12.4
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10.12.3 2001/10/31 02:52:45 nate Exp $	*/
d62 9
@


1.10.12.5
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d68 1
a68 2
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
d70 3
a72 2
#define	NKMEMPAGES_MIN_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((2 * 1024 * 1024) >> PAGE_SHIFT)
@


1.10.12.6
log
@Merge in -current from about a week ago
@
text
@d86 2
a87 2
void delay(int);
void DELAY(int);
@


1.10.12.7
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10.12.6 2002/03/28 10:06:15 niklas Exp $	*/
@


1.9
log
@Double default NMBCLUSTERS settings.
@
text
@d1 2
a2 2
/*	$OpenBSD: param.h,v 1.8 1997/01/16 09:25:58 niklas Exp $	*/
/*	$NetBSD: param.h,v 1.30 1996/09/28 15:54:04 mhitch Exp $	*/
d45 3
a47 2
#ifndef _MACHINE_PARAM_H_
#define _MACHINE_PARAM_H_
a53 11
#define	_MACHINE_ARCH	m68k
#define	MACHINE_ARCH	"m68k"
#define	MID_MACHINE	MID_M68K

/*
 * Round p (pointer or byte index) up to a correctly-aligned value
 * for all data types (int, long, ...).   The result is u_int and
 * must be cast to any desired pointer type.
 */
#define ALIGNBYTES	(sizeof(int) - 1)
#define	ALIGN(p)	(((u_int)(p) + (sizeof(int) - 1)) &~ (sizeof(int) - 1))
a54 2
#define	NBPG		8192		/* bytes/page */
#define	PGOFSET		(NBPG-1)	/* byte offset into page */
d56 1
a56 1
#define	NPTEPG		(NBPG/(sizeof(u_int)))
d58 5
a62 1
#define NBSEG		((mmutype == MMU_68040) ? 32*NBPG : 2048*NBPG)	/* bytes/segment */
a63 1
#define	SEGSHIFT	24		/* LOG2(NBSEG) [68030 value] */
d65 1
a65 2
#define	KERNBASE	0x0		/* start of kernel virtual */
#define	BTOPKERNBASE	((u_long)KERNBASE >> PGSHIFT)
d67 1
a67 11
#define	DEV_BSIZE	512
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define BLKDEV_IOSIZE	2048
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */

#define	CLSIZE		1
#define	CLSIZELOG2	0

/* NOTE: SSIZE, SINCR and UPAGES must be multiples of CLSIZE */
#define	SSIZE		1		/* initial stack size/NBPG */
#define	SINCR		1		/* increment of stack/NBPG */
d69 1
a69 2
#define	UPAGES		2		/* pages of u-area */
#define USPACE		(UPAGES * NBPG)
d72 1
a72 5
 * Constants related to network buffer management.
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
a73 15
#define	MSIZE		128		/* size of an mbuf */
#define	MCLSHIFT	11
#define	MCLBYTES	(1 << MCLSHIFT)
#define	MCLOFSET	(MCLBYTES - 1)
#ifndef NMBCLUSTERS
#ifdef GATEWAY
#define	NMBCLUSTERS	1024		/* map size, max cluster allocation */
#else
#define	NMBCLUSTERS	512		/* map size, max cluster allocation */
#endif
#endif

/*
 * Size of kernel malloc arena in CLBYTES-sized logical pages
 */ 
d75 1
a75 1
#define	NKMEMCLUSTERS	(3072*1024/CLBYTES)
a77 30
/* pages ("clicks") to disk blocks */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))

/* pages to bytes */
#define	ctob(x)		((x) << PGSHIFT)
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)

/* bytes to disk blocks */
#define	btodb(x)	((x) >> DEV_BSHIFT)
#define	dbtob(x)	((x) << DEV_BSHIFT)

/*
 * Map a ``block device block'' to a file system block.
 * This should be device dependent, and should use the bsize
 * field from the disk label.
 * For now though just use DEV_BSIZE.
 */
#define	bdbtofsb(bn)	((bn) / (BLKDEV_IOSIZE/DEV_BSIZE))

/*
 * Mach derived conversion macros
 */
#define amiga_round_seg(x)	((((unsigned)(x)) + NBSEG - 1) & ~(NBSEG-1))
#define amiga_trunc_seg(x)	((unsigned)(x) & ~(NBSEG-1))
#define amiga_round_page(x)	((((unsigned)(x)) + NBPG - 1) & ~(NBPG-1))
#define amiga_trunc_page(x)	((unsigned)(x) & ~(NBPG-1))
#define amiga_btop(x)		((unsigned)(x) >> PGSHIFT)
#define amiga_ptob(x)		((unsigned)(x) << PGSHIFT)

d84 5
a88 5
#ifndef _LOCORE
void delay __P((u_int));
void DELAY __P((u_int));
#endif
#endif
@


1.8
log
@Sync to NetBSD 970110
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.5 1996/03/30 22:18:27 niklas Exp $	*/
d105 2
a107 2
#else
#define	NMBCLUSTERS	256		/* map size, max cluster allocation */
@


1.7
log
@Include psl.h to get spl* funcs
@
text
@d2 1
a2 1
/*	$NetBSD: param.h,v 1.29 1996/04/21 21:13:20 veego Exp $	*/
@


1.6
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d148 5
@


1.5
log
@From NetBSD: merge of 960317
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: param.h,v 1.28 1996/03/04 05:04:14 cgd Exp $	*/
d100 2
a101 2
#define	MCLBYTES	1024
#define	MCLSHIFT	10
a147 5
/*
 * spl functions; all are normally done in-line
 */
#include <machine/psl.h>

d149 3
a151 29

static __inline int
splraise(npsl)
	register int npsl;
{
        register int opsl;

        __asm __volatile ("clrl %0; movew sr,%0; movew %1,sr" : "&=d" (opsl) :
	    "di" (npsl));
        return opsl;
}

#ifdef IPL_REMAP_1

extern int isr_exter_ipl;
extern void walk_ipls __P((int, int));

static __inline int
splx(npsl)
	register int npsl;
{
        register int opsl;

        __asm __volatile ("clrl %0; movew sr,%0" : "=d" (opsl));
	if ((isr_exter_ipl << 8) > (npsl & PSL_IPL))
		walk_ipls(isr_exter_ipl, npsl);
        __asm __volatile("movew %0,sr" : : "di" (npsl));
        return opsl;
}
a152 68

#ifndef IPL_REMAP_2
#define splx splraise
#else

extern int walk_ipls __P((int));

static __inline int
splx(npsl)
	register int npsl;
{
        register int opsl;

	/* We should maybe have a flag telling if this is needed.  */
	opsl = walk_ipls(npsl);
        __asm __volatile("movew %0,sr" : : "di" (npsl));
        return opsl;
}

#endif

/*
 * Shortcuts
 */
#define spl1()	splraise(PSL_S|PSL_IPL1)
#define spl2()	splraise(PSL_S|PSL_IPL2)
#define spl3()	splraise(PSL_S|PSL_IPL3)
#define spl4()	splraise(PSL_S|PSL_IPL4)
#define spl5()	splraise(PSL_S|PSL_IPL5)
#define spl6()	splraise(PSL_S|PSL_IPL6)
#define spl7()  splraise(PSL_S|PSL_IPL7)

/*
 * Hardware interrupt masks
 */
#define splbio()	spl3()
#define splnet()	spl3()
#define spltty()	spl4()
#define splimp()	spl4()
#if defined(LEV6_DEFER) || defined(IPL_REMAP_1) || defined(IPL_REMAP_2)
#define splclock()	spl4()
#else
#define splclock()	spl6()
#endif
#define splstatclock()	splclock()

/*
 * Software interrupt masks
 *
 * NOTE: splsoftclock() is used by hardclock() to lower the priority from
 * clock to softclock before it calls softclock().
 */
#define splsoftclock()	splx(PSL_S|PSL_IPL1)
#define splsoftnet()	spl1()
#define splsofttty()	spl1()

/*
 * Miscellaneous
 */
#if defined(LEV6_DEFER) || defined(IPL_REMAP_1) || defined(IPL_REMAP_2)
#define splhigh()	spl4()
#else
#define splhigh()	spl7()
#endif
#define spl0()	splx(PSL_S|PSL_IPL0)

void delay __P((unsigned));
void DELAY __P((unsigned));
@


1.4
log
@The delay functions takes unsigned  arguments.
@
text
@d1 2
a2 1
/*	$NetBSD: param.h,v 1.26 1996/01/28 19:12:46 chopps Exp $	*/
d51 1
d53 3
a55 2
#define MACHINE_ARCH	"m68k"
#define MID_MACHINE	MID_M68K
@


1.3
log
@Added support for a new (well, I've run it locally for a year or two)
interrupt system which is a prerequisite for the Amiga ISA support.
It is described in amiga/amiga/README.ints, and is enabled by adding
an "options IPL_REMAP_1" in the kernel config file.  Along with this
change there is also some generic cleanup, like style polishing,
comment corrections, making sicallbacks operate in FIFO manner and
cleaning up the spl mess in param.h...
@
text
@d247 2
a248 2
void delay __P((int));
void DELAY __P((int));
@


1.2
log
@from netbsd: remove MAXPARTITIONS
@
text
@d150 1
a150 4
/*
 * point to the custom.intenar and custom.intenaw respectively.
 */
extern volatile unsigned short *amiga_intena_read, *amiga_intena_write;
d152 28
a179 26
#if 0
#define _debug_spl(s) \
({ \
        register int _spl_r; \
\
        __asm __volatile ("clrl %0; movew sr,%0; movew %1,sr" : \
                "&=d" (_spl_r) : "di" (s)); \
	if ((_spl_r&PSL_IPL) > ((s)&PSL_IPL)&&((s)&PSL_IPL)!=PSL_IPL1) \
		printf ("%s:%d:spl(%d) ==> spl(%d)!!\n",__FILE__,__LINE__, \
		    ((PSL_IPL&_spl_r)>>8), ((PSL_IPL&(s))>>8)); \
        _spl_r; \
})
#else
/*
 * Don't lower IPL below current IPL (unless new IPL is 6)
 */
#define _debug_spl(s) \
({ \
        register int _spl_r; \
\
        __asm __volatile ("clrl %0; movew sr,%0" : \
                "&=d" (_spl_r)); \
	if ((((s)&PSL_IPL) >= PSL_IPL6) || (_spl_r&PSL_IPL) < ((s)&PSL_IPL) || ((s)&PSL_IPL) <= PSL_IPL1) \
		__asm __volatile ("movew %0,sr" : : "di" (s)); \
        _spl_r; \
})
d182 2
a183 10
#define _spl_no_check(s) \
({ \
        register int _spl_r; \
\
        __asm __volatile ("clrl %0; movew sr,%0; movew %1,sr" : \
                "&=d" (_spl_r) : "di" (s)); \
        _spl_r; \
})
#if defined (DEBUGXX)		/* No workee */
#define _spl _debug_spl
d185 15
a199 1
#define _spl _spl_no_check
d202 10
a211 8
#define spl0()	_spl(PSL_S|PSL_IPL0)
#define spl1()	_spl(PSL_S|PSL_IPL1)
#define spl2()	_spl(PSL_S|PSL_IPL2)
#define spl3()	_spl(PSL_S|PSL_IPL3)
#define spl4()	_spl(PSL_S|PSL_IPL4)
#define spl5()	_spl(PSL_S|PSL_IPL5)
#define spl6()	_spl(PSL_S|PSL_IPL6)
#define spl7()	_spl(PSL_S|PSL_IPL7)
d213 3
a215 3
#define splnone()	spl0()
#define splsoftclock()	spl1()
#define splsoftnet()	spl1()
d220 3
a222 1
#ifndef LEV6_DEFER
d224 19
a242 2
#define splstatclock()	spl6()
#define splvm()		spl6()
a243 7
#define splsched()	spl7()
#else
#define splclock()	spl4()
#define splstatclock()	spl4()
#define splvm()		spl4()
#define splhigh()	spl4()
#define splsched()	spl4()
d245 1
a246 3
#define splx(s)         _spl_no_check(s)

#ifdef _KERNEL
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: param.h,v 1.25 1995/08/18 15:28:25 chopps Exp $	*/
a113 2

#define MAXPARTITIONS	16
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
