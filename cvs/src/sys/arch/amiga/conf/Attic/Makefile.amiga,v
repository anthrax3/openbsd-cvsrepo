head	1.35;
access;
symbols
	SMP_SYNC_A:1.35
	SMP_SYNC_B:1.35
	UBC_SYNC_A:1.35
	OPENBSD_3_2:1.32.0.2
	OPENBSD_3_2_BASE:1.32
	OPENBSD_3_1:1.30.0.2
	OPENBSD_3_1_BASE:1.30
	UBC_SYNC_B:1.32
	UBC:1.29.0.2
	UBC_BASE:1.29
	OPENBSD_3_0:1.27.0.2
	OPENBSD_3_0_BASE:1.27
	OPENBSD_2_9:1.25.0.4
	OPENBSD_2_9_BASE:1.25
	OPENBSD_2_8:1.25.0.2
	OPENBSD_2_8_BASE:1.25
	OPENBSD_2_7:1.24.0.12
	OPENBSD_2_7_BASE:1.24
	SMP:1.24.0.10
	SMP_BASE:1.24
	kame_19991208:1.24
	OPENBSD_2_6:1.24.0.8
	OPENBSD_2_6_BASE:1.24
	OPENBSD_2_5:1.24.0.6
	OPENBSD_2_5_BASE:1.24
	OPENBSD_2_4:1.24.0.4
	OPENBSD_2_4_BASE:1.24
	OPENBSD_2_3:1.24.0.2
	OPENBSD_2_3_BASE:1.24
	OPENBSD_2_2:1.22.0.2
	OPENBSD_2_2_BASE:1.22
	OPENBSD_2_1:1.20.0.2
	OPENBSD_2_1_BASE:1.20
	OPENBSD_2_0:1.16.0.2
	OPENBSD_2_0_BASE:1.16
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.35
date	2002.12.31.16.35.37;	author miod;	state dead;
branches;
next	1.34;

1.34
date	2002.12.25.21.10.26;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2002.12.02.09.00.22;	author miod;	state Exp;
branches;
next	1.32;

1.32
date	2002.08.09.20.24.43;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2002.06.22.14.05.51;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2001.12.24.23.12.14;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2001.12.14.08.51.17;	author miod;	state Exp;
branches
	1.29.2.1;
next	1.28;

1.28
date	2001.12.13.22.00.50;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2001.08.30.22.10.14;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2001.07.15.13.10.47;	author assar;	state Exp;
branches;
next	1.25;

1.25
date	2000.07.16.09.35.39;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	98.03.30.18.58.06;	author niklas;	state Exp;
branches
	1.24.10.1;
next	1.23;

1.23
date	98.03.03.22.34.45;	author niklas;	state Exp;
branches;
next	1.22;

1.22
date	97.09.18.13.39.39;	author niklas;	state Exp;
branches;
next	1.21;

1.21
date	97.09.15.02.40.25;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	97.03.27.15.50.12;	author niklas;	state Exp;
branches;
next	1.19;

1.19
date	97.03.27.11.52.07;	author niklas;	state Exp;
branches;
next	1.18;

1.18
date	97.02.21.11.17.38;	author niklas;	state Exp;
branches;
next	1.17;

1.17
date	97.01.16.09.23.38;	author niklas;	state Exp;
branches;
next	1.16;

1.16
date	96.08.19.00.15.51;	author niklas;	state Exp;
branches;
next	1.15;

1.15
date	96.06.02.18.55.43;	author niklas;	state Exp;
branches;
next	1.14;

1.14
date	96.05.31.08.01.33;	author niklas;	state Exp;
branches;
next	1.13;

1.13
date	96.05.29.10.14.44;	author niklas;	state Exp;
branches;
next	1.12;

1.12
date	96.05.28.10.42.43;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	96.04.24.12.05.09;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	96.03.30.22.18.10;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	96.03.26.15.09.39;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	96.02.24.20.40.51;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.02.24.20.35.46;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.01.15.22.15.13;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.01.15.20.04.48;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	95.12.30.08.20.02;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.11.13.06.49.45;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.11.13.03.53.37;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.54;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.54;	author deraadt;	state Exp;
branches;
next	;

1.24.10.1
date	2001.04.18.16.02.04;	author niklas;	state Exp;
branches;
next	1.24.10.2;

1.24.10.2
date	2001.10.31.02.52.45;	author nate;	state Exp;
branches;
next	1.24.10.3;

1.24.10.3
date	2002.03.06.00.56.18;	author niklas;	state Exp;
branches;
next	1.24.10.4;

1.24.10.4
date	2003.03.27.23.19.17;	author niklas;	state dead;
branches;
next	;

1.29.2.1
date	2002.01.31.22.55.06;	author niklas;	state Exp;
branches;
next	1.29.2.2;

1.29.2.2
date	2002.10.29.00.28.01;	author art;	state Exp;
branches;
next	1.29.2.3;

1.29.2.3
date	2003.05.19.21.49.38;	author tedu;	state dead;
branches;
next	;


desc
@@


1.35
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@#	$OpenBSD: Makefile.amiga,v 1.34 2002/12/25 21:10:26 miod Exp $
#	$NetBSD: Makefile.amiga,v 1.60 1997/07/23 10:19:42 is Exp $

# Makefile for OpenBSD
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/amiga/conf/``machineid''
# after which you should do
#	config machineid
# Machine generic makefile changes should be made in
#	/sys/arch/amiga/conf/Makefile.amiga
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas

# DEBUG is set to -g if debugging.
# PROF is set to -pg if profiling.

.include <bsd.own.mk>

MKDEP?=	mkdep
SIZE?=	size
STRIP?=	strip

# source tree is located via $S relative to the compilation directory
.ifndef S
S!=	cd ../../../..; pwd
.endif
AMIGA=	$S/arch/amiga
M68K=	$S/arch/m68k

INCLUDES=	-I. -I$S/arch -I$S -nostdinc
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL \
		-Dmc68020 -Damiga
CWARNFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main

.if empty(IDENT:M-DM68060)
CMACHFLAGS=	-m68020
.else
CMACHFLAGS=	-m68060 -Wa,-m68030
.endif
CMACHFLAGS+=	-msoft-float -fno-stack-protector

COPTS?=	-O2
CFLAGS=		${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS} ${PIPE}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE
LINKFLAGS=	-n -Ttext 0 -e start
STRIPFLAGS=	-d

HOSTCC?=	${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
.ifndef PROF
LIBKERN=	${KERNLIB}
.else
LIBKERN=	${KERNLIB_PROF}
.endif

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
.ifndef PROF
LIBCOMPAT=	${COMPATLIB}
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif

### for the Motorola 68040 Floating Point Software Product
.include "${M68K}/fpsp/Makefile.inc"

### for the Motorola 68060 Software Support Package
.include "${M68K}/060sp/Makefile.inc"

# compile rules: rules are named ${TYPE}_${SUFFIX} where TYPE is NORMAL or
# HOSTED}, and SUFFIX is the file suffix, capitalized (e.g. C for a .c file).

NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<

.SUFFIXES: .o .g

.g.o: ; echo This is a dummy rule and should not be executed.

NORMAL_G=	gspa < $< | gspahextoc > $*.c; \
		${CC} -c ${CFLAGS} ${CPPFLAGS} ${PROF} $*.c

%OBJS

%CFILES

%SFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ=	locore.o ${FPSP} ${060SP} \
		param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	@@rm -f $@@
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@

DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
SYSTEM_LD_TAIL+=; \
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
.else
LINKFLAGS+=	-S
.endif

%LOAD

assym.h: $S/kern/genassym.sh \
	 ${M68K}/m68k/genassym.cf ${AMIGA}/amiga/genassym.cf Makefile
	cat ${M68K}/m68k/genassym.cf ${AMIGA}/amiga/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} \
	    > assym.h.tmp && \
	mv -f assym.h.tmp assym.h

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C}

ioconf.o: ioconf.c
	${NORMAL_C}

newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c


clean:: cleankernel
cleankernel:
	rm -f eddep *bsd bsd.gdb tags *.[io] [a-z]*.s \
	    [Ee]rrs linterrs makelinks assym.h

lint:
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} -UKGDB \
	    ${CFILES} ${AMIGA}/amiga/swapgeneric.c ioconf.c param.c | \
	    grep -v 'static function .* unused'

tags:
	@@echo "see $S/kern/Makefile for tags"

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink

SRCS=	${AMIGA}/amiga/locore.s \
	param.c ioconf.c ${CFILES} ${SFILES}

depend:: .depend
.depend: ${SRCS} assym.h param.c
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${AMIGA}/amiga/locore.s
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
	sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	  ${CPPFLAGS} < ${AMIGA}/amiga/genassym.cf
	@@sed -e 's/.*\.o:.*\.c/assym.h:/' < assym.dep >> .depend
	@@rm -f assym.dep

# depend on root or device configuration
autoconf.o conf.o: Makefile
 
# depend on network or filesystem configuration 
uipc_proto.o vfs_conf.o: Makefile 

# depend on maxusers
machdep.o: Makefile

# depend on CPU configuration 
amiga_init.o locore.o pmap.o sys_machdep.o bzsc.o flsc.o sbic.o sfas.o: Makefile


locore.o: ${AMIGA}/amiga/locore.s assym.h
	${NORMAL_S}

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif

%RULES
@


1.34
log
@No need to define FOO?=foo for AS, CC, CPP and LD, as they are always already
set from <sys.mk>
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.33 2002/12/02 09:00:22 miod Exp $
@


1.33
log
@Import propolice (http://www.trl.ibm.com/projects/security/ssp), a stack
attack protection scheme, into gcc.

This protection is enabled by default. It can be turned off by using the
-fno-stack-protector flag.

Code by Hiroaki Etoh (etoh at jp dot ibm dot com); work on openbsd-specific
integration by fgsch@@, deraadt@@ and myself; tests by fgsch@@, naddy@@ and
myself; beer drinking by myself.

Please note that system upgrades with this new code will require a new
libc and ld.so to be build and installed before the propolice-enabled
compiler can be installed.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.32 2002/08/09 20:24:43 miod Exp $
a26 4
AS?=	as
CC?=	cc
CPP?=	cpp
LD?=	ld
@


1.32
log
@Add an explicit dependancy of assym.h to Makefile.
This makes sure it will be regenerated if you run config(8) again.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.31 2002/06/22 14:05:51 millert Exp $
d53 1
a53 1
CMACHFLAGS+=	-msoft-float
@


1.31
log
@Add ${PIPE} to CFLAGS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.30 2001/12/24 23:12:14 miod Exp $
d132 1
a132 1
	 ${M68K}/m68k/genassym.cf ${AMIGA}/amiga/genassym.cf
@


1.30
log
@Harmonize and complete wrt cross-compilation.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.29 2001/12/14 08:51:17 miod Exp $
d56 1
a56 1
CFLAGS=		${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS}
@


1.29
log
@Sync compilation flags definition accross m68k-based arches.
mvme68k still lacks some -Wfoo flags, until it is warnings clean.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.28 2001/12/13 22:00:50 miod Exp $
d27 1
d29 1
d32 1
a33 2
TOUCH?=	touch -f -c
COPTS?=	-O2
d55 1
d117 1
a117 1
SYSTEM_LD_TAIL=	@@size $@@; chmod 755 $@@
@


1.29.2.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.30 2001/12/24 23:12:14 miod Exp $
a26 1
AS?=	as
a27 1
CPP?=	cpp
a29 1
SIZE?=	size
d31 2
a53 1
COPTS?=	-O2
d115 1
a115 1
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@
@


1.29.2.2
log
@sync to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.29.2.1 2002/01/31 22:55:06 niklas Exp $
d56 1
a56 1
CFLAGS=		${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS} ${PIPE}
d132 1
a132 1
	 ${M68K}/m68k/genassym.cf ${AMIGA}/amiga/genassym.cf Makefile
@


1.29.2.3
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.29.2.2 2002/10/29 00:28:01 art Exp $
@


1.28
log
@Realistic COPTS handling. Plus it gets in sync with other m68k arches.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.27 2001/08/30 22:10:14 miod Exp $
d42 2
a43 2
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -Dmc68020 -Damiga

@


1.27
log
@Invoke genassym.sh with both m68k/m68k/genassym.cf and
machine/machine/genassym.cf files (poor man's inclusion).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.26 2001/07/15 13:10:47 assar Exp $
d32 1
d54 1
a54 1
CFLAGS=		${DEBUG} -O2 ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS}
@


1.26
log
@add install target
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.25 2000/07/16 09:35:39 espie Exp $
d38 1
d79 1
a79 1
.include "$S/arch/m68k/fpsp/Makefile.inc"
d82 1
a82 1
.include "$S/arch/m68k/060sp/Makefile.inc"
d128 5
a132 3
assym.h: ${AMIGA}/amiga/genassym.cf $S/kern/genassym.sh
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} \
	    < ${AMIGA}/amiga/genassym.cf > assym.h.tmp && \
@


1.25
log
@Consistent COPTS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.24 1998/03/30 18:58:06 niklas Exp $
d25 2
d196 12
@


1.24
log
@Get includes from the right place for .g compilations
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.23 1998/03/03 22:34:45 niklas Exp $
a29 1
COPTS?=	-O2
d50 1
a50 1
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${COPTS} ${CMACHFLAGS}
@


1.24.10.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.25 2000/07/16 09:35:39 espie Exp $
d30 1
d51 1
a51 1
CFLAGS=		${DEBUG} -O2 ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS}
@


1.24.10.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.24.10.1 2001/04/18 16:02:04 niklas Exp $
a24 2
.include <bsd.own.mk>

a35 1
M68K=	$S/arch/m68k
d76 1
a76 1
.include "${M68K}/fpsp/Makefile.inc"
d79 1
a79 1
.include "${M68K}/060sp/Makefile.inc"
d125 3
a127 5
assym.h: $S/kern/genassym.sh \
	 ${M68K}/m68k/genassym.cf ${AMIGA}/amiga/genassym.cf
	cat ${M68K}/m68k/genassym.cf ${AMIGA}/amiga/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} \
	    > assym.h.tmp && \
a193 12

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif
@


1.24.10.3
log
@Merge in trunk
@
text
@d1 1
a1 1
#	$OpenBSD$
a26 1
AS?=	as
a27 1
CPP?=	cpp
a29 1
SIZE?=	size
d31 1
d41 2
a42 2
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL \
		-Dmc68020 -Damiga
d53 1
a53 2
COPTS?=	-O2
CFLAGS=		${DEBUG} ${COPTS} ${CWARNFLAGS} ${CMACHFLAGS}
d114 1
a114 1
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@
@


1.24.10.4
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.24.10.3 2002/03/06 00:56:18 niklas Exp $
@


1.23
log
@Add -Wno-main for GCC 2.8
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.22 1997/09/18 13:39:39 niklas Exp $
d92 2
a93 1
NORMAL_G=	gspa < $< | gspahextoc > $*.c; ${CC} -c ${CFLAGS} ${PROF} $*.c
@


1.22
log
@Merge of NetBSD changes upto last week or so, with the exception of stand/
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.21 1997/09/15 02:40:25 deraadt Exp $
d42 1
a42 1
		-Wno-uninitialized -Wno-format
@


1.21
log
@kill Locore.c
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile.amiga,v 1.20 1997/03/27 15:50:12 niklas Exp $
#	$NetBSD: Makefile.amiga,v 1.52 1996/12/01 12:10:07 veego Exp $
d38 2
a39 2
INCLUDES=	-nostdinc -I. -I$S/arch -I$S
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmc68020 -Damiga
a85 5
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

a86 1
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<
d125 4
a128 4
assym.h: $S/kern/genassym.sh ${AMIGA}/amiga/genassym.cf
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${AMIGA}/amiga/genassym.cf > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h
d135 1
a135 1
	${NORMAL_C_C}
d145 2
a146 1
clean::
d148 1
a148 1
	    [Ee]rrs linterrs makelinks genassym genassym.o assym.h
d160 1
a160 1
	    sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
d162 2
a163 3
	    sort -u | comm -23 - dontlink | \
	    sed 's,../.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' \
	    > makelinks
d174 4
d186 1
a186 1
assym.h machdep.o: Makefile
@


1.20
log
@DOH!  Of course genassym.sh should be fed CC not HOSTCC,
that was the entire meaning of it... shoot me!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.19 1997/03/27 11:52:07 niklas Exp $
d157 1
a157 2
	    ${AMIGA}/amiga/Locore.c ${CFILES} ${AMIGA}/amiga/swapgeneric.c \
	    ioconf.c param.c | \
@


1.19
log
@Use genassym.sh
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.18 1997/02/21 11:17:38 niklas Exp $
d132 1
a132 1
	sh $S/kern/genassym.sh ${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} \
@


1.18
log
@Drop ${PARAM} from CPPFLAGS, add it to the HOSTED_C rule.
Use the NORMAL_C_C rule for building parma.o.  Put -nostdinc upfront in
INCLUDES.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.17 1997/01/16 09:23:38 niklas Exp $
d41 2
a42 2
CWARNFLAGS=	-Werror -Wall -Wstrict-prototypes -Wno-uninitialized \
		-Wno-format
a87 2
HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} ${PARAM} -c $<

d131 4
a134 8
assym.h: genassym
	./genassym >assym.h

genassym: genassym.o
	${HOSTCC} -o $@@ genassym.o

genassym.o: ${AMIGA}/amiga/genassym.c
	${HOSTED_C}
d166 1
a166 1
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
d168 3
a170 2
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
d175 1
a180 3
	${MKDEP} -a ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} \
	    ${AMIGA}/amiga/genassym.c

d189 1
a189 1
genassym.o machdep.o: Makefile
@


1.17
log
@Sync to NetBSD 970110
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.16 1996/08/19 00:15:51 niklas Exp $
d38 2
a39 2
INCLUDES=	-I. -I$S/arch -I$S -nostdinc
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -Dmc68020 -Damiga
d88 1
a88 1
HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<
d147 1
a147 1
	${NORMAL_C}
@


1.16
log
@Remove some dependencies on Makefile, an amiga is slow as it is..
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile.amiga,v 1.15 1996/06/02 18:55:43 niklas Exp $
#	$NetBSD: Makefile.amiga,v 1.45 1996/05/16 17:07:08 is Exp $
a24 1
AS?=	as
a25 1
CPP?=	cpp
d27 2
a28 1
STRIP?=	strip -d
d30 1
d33 4
a36 2
S=	../../../..
AMIGA=	../..
d38 2
a39 2
INCLUDES=	-I. -I$S/arch -I$S
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmc68020 -Damiga
d41 1
a41 1
CDIAGFLAGS=	-Werror -Wall -Wstrict-prototypes -Wno-uninitialized \
d45 1
a45 1
CMACHFLAGS=	-m68020 -msoft-float
d47 1
a47 1
CMACHFLAGS=	-m68060 -Wa,-m68030 -msoft-float
d49 1
d51 1
a51 1
CFLAGS=		${DEBUG} -O2 ${CDIAGFLAGS} ${CMACHFLAGS} ${COPTS}
d54 5
d82 2
a83 4
# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.
d88 2
d126 1
a126 1
		echo ${STRIP} $@@; ${STRIP} $@@
d128 1
a128 1
LINKFLAGS+=	-x
d137 1
a137 1
	${CC} -o $@@ genassym.o
d140 1
a140 1
	${NORMAL_C_C}
d147 1
a147 1
	${NORMAL_C_C}
d162 1
a162 1
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
d182 5
a186 4
	mkdep ${AFLAGS} ${CPPFLAGS} ${AMIGA}/amiga/locore.s
	mkdep -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	mkdep -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
	mkdep -a ${CFLAGS} ${CPPFLAGS} ${PARAM} ${AMIGA}/amiga/genassym.c
@


1.15
log
@Our gcc needs -Wno-format for kernel compiles when using -Wall -Werror
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.14 1996/05/31 08:01:33 niklas Exp $
d184 1
a184 3
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile 
if_tun.o if_loop.o if_ethersubr.o: Makefile
in_proto.o: Makefile
@


1.14
log
@-Wno-uninitialized is a good idea when doing -Wall -Werror
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.13 1996/05/29 10:14:44 niklas Exp $
d39 2
a40 1
CDIAGFLAGS=	-Werror -Wall -Wstrict-prototypes -Wno-uninitialized
@


1.13
log
@Merge of 960526 NetBSD
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.amiga,v 1.12 1996/05/28 10:42:43 niklas Exp $
d39 1
a39 1
CDIAGFLAGS=	-Werror -Wall -Wstrict-prototypes
@


1.12
log
@depend uses :: as operator
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile.amiga,v 1.10 1996/03/30 22:18:10 niklas Exp $
#	$NetBSD: Makefile.amiga,v 1.40 1996/03/15 20:09:52 is Exp $
d38 3
d42 1
a42 1
CFLAGS=		${DEBUG} -O2 -Werror -m68020 -msoft-float ${COPTS}
d44 1
a44 1
CFLAGS=		${DEBUG} -O2 -Werror -m68060 -msoft-float ${COPTS}
d47 1
d70 3
d104 1
a104 1
SYSTEM_OBJ=	locore.o ${FPSP} \
@


1.11
log
@Add network config dependencies.
@
text
@d164 1
a164 1
depend: .depend
@


1.10
log
@From NetBSD: merge of 960317
@
text
@d1 1
a1 1
#	$OpenBSD$
d176 3
a178 1
uipc_proto.o vfs_conf.o: Makefile 
@


1.9
log
@From NetBSD: vnode_if.[ch] made machine independent.
very usefull (for <sys/vnode.h> inclusion).
from the other side this is really machine independent ...
tested w/ i386, but should not cause errors w/ other arch's.
pls, test it (don't forget to reconfig kernel ;)
@
text
@d1 2
a2 1
#	$NetBSD: Makefile.amiga,v 1.37 1996/02/09 02:21:17 mycroft Exp $
d25 6
a30 7
AS=	as
AWK=	awk
CC=	cc
CPP=	cpp
LD=	ld
STRIP=	strip -d
TOUCH=	touch -f -c
d38 6
a43 1
CFLAGS=		${DEBUG} -O2 -Werror -mc68020 -msoft-float
d142 1
a142 1
	rm -f eddep *netbsd netbsd.gdb tags *.[io] [a-z]*.s \
@


1.8
log
@remove some trailing whitespace
@
text
@d93 1
a93 1
		vnode_if.o param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
a120 3
vnode_if.c vnode_if.h: $S/kern/vnode_if.sh $S/kern/vnode_if.src
	AWK="${AWK}" sh $S/kern/vnode_if.sh $S/kern/vnode_if.src

d137 1
a137 1
	rm -f eddep *netbsd netbsd.gdb tags vnode_if.[ch] *.[io] [a-z]*.s \
d158 1
a158 1
	vnode_if.c param.c ioconf.c ${CFILES} ${SFILES}
d160 1
a160 1
.depend: ${SRCS} assym.h vnode_if.h param.c
d162 1
a162 1
	mkdep -a ${CFLAGS} ${CPPFLAGS} vnode_if.c param.c ioconf.c ${CFILES}
@


1.7
log
@From NetBSD:
LOCORE -> _LOCORE
assym.s -> assym.h (Some ports did this already.)
Use `-traditional-cpp' when building .s and .S files.
Clone these, and fix many bugs.
Fix mkdep problems due to missing flags.
@
text
@d82 1
a82 1
  
d84 1
a84 1
  
@


1.6
log
@Don't feed ${DEBUG} to the assembler, it doesn't take those args
anyway.
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.amiga,v 1.31 1996/01/14 21:06:47 thorpej Exp $
d3 1
a3 3
#	@@(#)Makefile.hp300	7.10 (Berkeley) 6/27/91
#
# Makefile for 4.4 BSD
d8 1
a8 1
#	/sys/conf/``machineid''
d10 1
a10 1
#	 config machineid
d12 1
a12 1
#	/sys/conf/Makefile.``machinetype''
d21 2
a23 2
# DEBUG is set to -g by config if debugging is requested (config -g).
# PROF is set to -pg by config if profiling is requested (config -p).
d25 2
a26 1
CC=	cc ${DEBUG}
d28 2
a29 1
LD=	ld 
d36 5
a40 3
INCLUDES= -I. -I$S/arch -I$S -I$S/sys 
COPTS=	${INCLUDES} ${IDENT} -D_KERNEL -Dmc68020 -Damiga
CFLAGS=	-O -Werror -mc68020 -m68881 ${COPTS}
d66 2
a67 5
NORMAL_C=	${CC} -c ${CFLAGS} ${PROF} $<
NORMAL_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<

DRIVER_C=	${CC} -c ${CFLAGS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<
d69 2
a70 4
PROFILE_C=	${CC} -S -c ${COPTS} $<; \
		sed -e s/_mcount/mcount/ -e s/subrmcount/subr_mcount/ <$*.s | \
		${AS} -o $@@; \
		rm -f $*.s
d72 2
a73 2
NORMAL_S=	${CPP} ${COPTS} $< | ${AS} -o $@@
NORMAL_S_C=	${CPP} ${COPTS} ${PARAM} $< | ${AS} -o $@@
d82 1
a82 1

d84 2
d92 2
a93 2
SYSTEM_OBJ=	locore.o ${FPSP} vnode_if.o ${OBJS} param.o ioconf.o \
		${LIBKERN} ${LIBCOMPAT}
d95 9
a103 9
SYSTEM_LD_HEAD=	rm -f $@@
SYSTEM_LD=	-@@if [ X${DEBUG} = X-g ]; \
		then strip=-X; \
		else strip=-x; \
		fi; \
		echo ${LD} $$strip -n -T 0 -o $@@ -e start '$${SYSTEM_OBJ}' vers.o; \
		${LD} $$strip -n -T 0 -o $@@ -e start ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL=	@@size $@@; chmod 755 $@@; \
		[ X${DEBUG} = X-g ] && { \
d105 4
a108 1
		echo strip -d $@@; strip -d $@@; } || true
d112 11
a122 1
vers.o:	newvers
d124 3
a126 3
newvers:
	sh $S/conf/newvers.sh ${KERN_IDENT}
	${CC} $(CFLAGS) -c vers.c
d128 5
a132 3
clean::
	rm -f eddep *netbsd netbsd.gdb tags *.o locore.i [a-z]*.s \
		vnode_if.[ch] Errs errs linterrs makelinks genassym
d134 3
a136 17
lint: /tmp param.c
	@@lint -hbxn -DGENERIC -Dvolatile= ${COPTS} ${PARAM} -UKGDB \
	    ${AMIGA}/amiga/Locore.c ${CFILES} ${AMIGA}/amiga/swapgeneric.c \
	    ioconf.c param.c| \
	    grep -v 'struct/union .* never defined' | \
	    grep -v 'possible pointer alignment problem'

locore.o: assym.s ${AMIGA}/amiga/vectors.s ${AMIGA}/amiga/locore.s 
locore.o: machine/trap.h machine/psl.h machine/pte.h machine/cpu.h
	${CPP} -DLOCORE ${COPTS} ${AMIGA}/amiga/locore.s | ${AS} -o locore.o

# the following is necessary because autoconf.o depends on #if GENERIC
autoconf.o: Makefile

# the following are necessary because the files depend on the types of
# hp cpu's included in the system configuration
machdep.o sys_machdep.o pmap.o pmap_bootstrap.o trap.o dma.o:	Makefile
a137 2
# depend on network or filesystem configuration
uipc_proto.o vfs_conf.o locore.o:	Makefile
d139 3
a141 2
# depend on maxusers
assym.s: Makefile
d143 5
a147 2
assym.s: genassym
	./genassym >assym.s
d149 2
a150 7
genassym:
	${CC} -static ${INCLUDES} ${IDENT} ${PARAM} -Dmc68020 -Damiga \
	    -o genassym ${AMIGA}/amiga/genassym.c

depend: assym.s param.c vnode_if.h
	mkdep ${COPTS} ${CFILES} ioconf.c param.c
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} ${AMIGA}/amiga/genassym.c
d157 1
a157 1
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
d160 18
a177 2
tags:
	@@echo "see $S/kern/Makefile for tags"
d179 2
a180 2
ioconf.o: ioconf.c
	${CC} -c ${CFLAGS} ioconf.c
a181 3
param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .
d183 2
a184 4
param.o: param.c Makefile
	${CC} -c ${CFLAGS} ${PARAM} param.c
vnode_if.c vnode_if.h:	$S/kern/vnode_if.sh $S/kern/vnode_if.src
	AWK="${AWK}" sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
@


1.5
log
@Remove vnode_if.[ch] during a "make clean", per PR#536 from
Dan Carosone <danielce@@ee.mu.oz.au>.
@
text
@d26 1
a26 1
AS=	as ${DEBUG}
@


1.4
log
@from netbsd: remove -fno-builtin (pr#1727) from Bernd Ernesti
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.amiga,v 1.30 1995/12/27 08:22:54 chopps Exp $
d118 1
a118 1
		Errs errs linterrs makelinks genassym
@


1.3
log
@do not use -fno-builtin for kernels; the reasons why are manifold
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.amiga,v 1.28.2.1 1995/11/10 19:29:46 chopps Exp $
@


1.2
log
@update to netbsd
@
text
@d38 1
a38 1
CFLAGS=	-O -Werror -fno-builtin -mc68020 -m68881 ${COPTS}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.amiga,v 1.28 1995/10/09 15:23:25 chopps Exp $
d78 6
d151 1
a151 1
depend: assym.s param.c vnode_if.h grf_ultmscode.h
a176 5

grf_ultmscode.h: ${AMIGA}/dev/grf_ul.gsp
	gspa < ${AMIGA}/dev/grf_ul.gsp | gspahextoc > grf_ultmscode.h

grf_ul.o:	grf_ultmscode.h
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

