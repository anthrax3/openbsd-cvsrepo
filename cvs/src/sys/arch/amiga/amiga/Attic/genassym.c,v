head	1.9;
access;
symbols
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	UBC_SYNC_A:1.9
	UBC_SYNC_B:1.9
	SMP:1.9.0.2
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	97.03.27.11.52.06;	author niklas;	state dead;
branches;
next	1.8;

1.8
date	97.02.21.08.59.01;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	97.01.16.09.23.20;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.05.29.10.14.25;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.05.02.06.43.17;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.03.30.22.18.07;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.02.24.20.23.25;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.02.06.09.16.30;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.52;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.52;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Use genassym.sh
@
text
@/*	$OpenBSD: genassym.c,v 1.8 1997/02/21 08:59:01 niklas Exp $	*/
/*	$NetBSD: genassym.c,v 1.29 1996/12/17 07:32:55 is Exp $	*/

/*
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)genassym.c	7.8 (Berkeley) 5/7/91
 */

#include <stdio.h>
#include <sys/param.h>
#include <sys/buf.h>
#include <sys/proc.h>
#include <sys/mbuf.h>
#include <sys/msgbuf.h>
#include <sys/syscall.h>
#include <sys/user.h>

#include <vm/vm.h>

#include <machine/cpu.h>
#include <machine/trap.h>
#include <machine/psl.h>
#include <machine/reg.h>
#include <machine/vmparam.h>
#include <machine/pte.h>

#include <amiga/amiga/cia.h>
#include <amiga/amiga/isr.h>

int main __P((void));

int
main()
{
	register struct proc *p = (struct proc *)0;
	register struct vmmeter *vm = (struct vmmeter *)0;
	register struct user *up = (struct user *)0;
	struct frame *frame = NULL;
	struct vmspace *vms = (struct vmspace *)0;
	pmap_t pmap = (pmap_t)0;
	struct pcb *pcb = (struct pcb *)0;
	struct CIA *cia = (struct CIA *)0;
	struct isr *isr = (struct isr *)0;
	struct mdproc *mdproc = (struct mdproc *)0;

	printf("#define\tP_FORW %p\n", (void *)&p->p_forw);
	printf("#define\tP_BACK %p\n", (void *)&p->p_back);
	printf("#define\tP_VMSPACE %p\n", (void *)&p->p_vmspace);
	printf("#define\tP_ADDR %p\n", (void *)&p->p_addr);
	printf("#define\tP_PRIORITY %p\n", (void *)&p->p_priority);
	printf("#define\tP_STAT %p\n", (void *)&p->p_stat);
	printf("#define\tP_WCHAN %p\n", (void *)&p->p_wchan);
	printf("#define\tP_MD %p\n", (void *)&p->p_md);
	printf("#define\tP_PID %p\n", (void *)&p->p_pid);
	printf("#define\tMD_REGS %p\n", (void *)&mdproc->md_regs);
	printf("#define\tSRUN %d\n", SRUN);
	
	printf("#define\tPM_STCHG %p\n", (void *)&pmap->pm_stchanged);

	printf("#define\tVM_PMAP %p\n", (void *)&vms->vm_pmap);
	printf("#define\tV_INTR %p\n", (void *)&vm->v_intr);
	
	printf("#define\tUPAGES %d\n", UPAGES);
	printf("#define\tUSPACE %d\n", USPACE);
	printf("#define\tNBPG %d\n", NBPG);
	printf("#define\tPGSHIFT %d\n", PGSHIFT);
	printf("#define\tUSRSTACK %d\n", USRSTACK);

	printf("#define\tU_PROF %p\n", (void *)&up->u_stats.p_prof);
	printf("#define\tU_PROFSCALE %p\n",
				(void *)&up->u_stats.p_prof.pr_scale);
	printf("#define\tT_BUSERR %d\n", T_BUSERR);
	printf("#define\tT_ADDRERR %d\n", T_ADDRERR);
	printf("#define\tT_ILLINST %d\n", T_ILLINST);
	printf("#define\tT_ZERODIV %d\n", T_ZERODIV);
	printf("#define\tT_CHKINST %d\n", T_CHKINST);
	printf("#define\tT_TRAPVINST %d\n", T_TRAPVINST);
	printf("#define\tT_PRIVINST %d\n", T_PRIVINST);
	printf("#define\tT_TRACE %d\n", T_TRACE);
	printf("#define\tT_MMUFLT %d\n", T_MMUFLT);
	printf("#define\tT_FMTERR %d\n", T_FMTERR);
	printf("#define\tT_COPERR %d\n", T_COPERR);
	printf("#define\tT_FPERR %d\n", T_FPERR);
	printf("#define\tT_ASTFLT %d\n", T_ASTFLT);
	printf("#define\tT_TRAP15 %d\n", T_TRAP15);
	printf("#define\tPSL_S %d\n", PSL_S);
	printf("#define\tPSL_IPL7 %d\n", PSL_IPL7);
	printf("#define\tPSL_IPL %d\n", PSL_IPL);
	printf("#define\tPSL_LOWIPL %d\n", PSL_LOWIPL);
	printf("#define\tPSL_HIGHIPL %d\n", PSL_HIGHIPL);
	printf("#define\tPSL_USER %d\n", PSL_USER);
	printf("#define\tSPL1 %d\n", PSL_S | PSL_IPL1);
	printf("#define\tSPL2 %d\n", PSL_S | PSL_IPL2);
	printf("#define\tSPL3 %d\n", PSL_S | PSL_IPL3);
	printf("#define\tSPL4 %d\n", PSL_S | PSL_IPL4);
	printf("#define\tSPL5 %d\n", PSL_S | PSL_IPL5);
	printf("#define\tSPL6 %d\n", PSL_S | PSL_IPL6);
	printf("#define\tFC_USERD %d\n", FC_USERD);
	printf("#define\tFC_SUPERD %d\n", FC_SUPERD);
	printf("#define\tCACHE_ON %d\n", CACHE_ON);
	printf("#define\tCACHE_OFF %d\n", CACHE_OFF);
	printf("#define\tCACHE_CLR %d\n", CACHE_CLR);
	printf("#define\tIC_CLEAR %d\n", IC_CLEAR);
	printf("#define\tDC_CLEAR %d\n", DC_CLEAR);
	printf("#define\tCACHE40_ON %d\n", CACHE40_ON);
	printf("#define\tCACHE40_OFF %d\n", CACHE40_OFF);
	printf("#define\tCACHE60_ON %d\n", CACHE60_ON);
	printf("#define\tCACHE60_OFF %d\n", CACHE60_OFF);
	printf("#define\tIC60_CUBC %d\n", IC60_CUBC);
	printf("#define\tIC60_CABC %d\n", IC60_CABC);
	printf("#define\tPG_V %d\n", PG_V);
	printf("#define\tPG_NV %d\n", PG_NV);
	printf("#define\tPG_RO %d\n", PG_RO);
	printf("#define\tPG_RW %d\n", PG_RW);
	printf("#define\tPG_CI %d\n", PG_CI);
	printf("#define\tPG_PROT %d\n", PG_PROT);
	printf("#define\tPG_FRAME %d\n", PG_FRAME);
	printf("#define\tPCB_FLAGS %p\n", (void *)&pcb->pcb_flags);
	printf("#define\tPCB_PS %p\n", (void *)&pcb->pcb_ps);
	printf("#define\tPCB_USTP %p\n", (void *)&pcb->pcb_ustp);
	printf("#define\tPCB_USP %p\n", (void *)&pcb->pcb_usp);
	printf("#define\tPCB_REGS %p\n", (void *)pcb->pcb_regs);
	printf("#define\tPCB_CMAP2 %p\n", (void *)&pcb->pcb_cmap2);
	printf("#define\tPCB_ONFAULT %p\n", (void *)&pcb->pcb_onfault);
	printf("#define\tPCB_FPCTX %p\n", (void *)&pcb->pcb_fpregs);
	printf("#define\tSIZEOF_PCB %d\n", sizeof(struct pcb));

	printf("#define\tFR_SP %p\n", (void *)&frame->f_regs[15]);
	printf("#define\tFR_HW %p\n", (void *)&frame->f_sr);
	printf("#define\tFR_ADJ %p\n", (void *)&frame->f_stackadj);

	printf("#define\tSP %d\n", SP);
	printf("#define\tSYS_exit %d\n", SYS_exit);
	printf("#define\tSYS_execve %d\n", SYS_execve);
	printf("#define\tSYS_sigreturn %d\n", SYS_sigreturn);
	printf("#define\tCIAICR %p\n", (void *)&cia->icr);
	printf("#define\tAMIGA_68020 %ld\n", AMIGA_68020);
	printf("#define\tAMIGA_68030 %ld\n", AMIGA_68030);
	printf("#define\tAMIGA_68040 %ld\n", AMIGA_68040);
	printf("#define\tAMIGA_68060 %ld\n", AMIGA_68060);
	printf("#define\tISR_FORW %p\n", (void *)&isr->isr_forw);
	printf("#define\tISR_INTR %p\n", (void *)&isr->isr_intr);
	printf("#define\tISR_ARG %p\n", (void *)&isr->isr_arg);
	printf("#define\tMMU_68030 %d\n", MMU_68030);
	printf("#define\tMMU_68040 %d\n", MMU_68040);
	printf("#define\tMMU_68060 %d\n", MMU_68060);
	printf("#define\tMMU_68851 %d\n", MMU_68851);
	printf("#define\tCPU_68020 %d\n", CPU_68020);
	printf("#define\tCPU_68030 %d\n", CPU_68030);
	printf("#define\tCPU_68040 %d\n", CPU_68040);
	printf("#define\tCPU_68060 %d\n", CPU_68060);
#ifdef DRACO
	printf("#define\tDRACO %d\n", DRACO);
#endif

	exit(0);
}
@


1.8
log
@Add MMU_/CPU_ syms
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.7 1997/01/16 09:23:20 niklas Exp $	*/
@


1.7
log
@Sync to NetBSD 970110
@
text
@d1 1
a1 1
/*	$OpenBSD: genassym.c,v 1.6 1996/05/29 10:14:25 niklas Exp $	*/
d174 1
d176 6
@


1.6
log
@Merge of 960526 NetBSD
@
text
@d1 2
a2 2
/*	$OpenBSD: genassym.c,v 1.4 1996/03/30 22:18:07 niklas Exp $	*/
/*	$NetBSD: genassym.c,v 1.26 1996/05/09 20:30:37 is Exp $	*/
d39 1
a46 1
#include <sys/systm.h>
d137 4
@


1.5
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d2 1
a2 1
/*	$NetBSD: genassym.c,v 1.25 1996/04/21 21:07:01 veego Exp $	*/
d171 4
@


1.4
log
@From NetBSD: merge of 960317
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: genassym.c,v 1.24 1996/03/15 19:47:45 is Exp $	*/
d46 1
d60 3
a67 1
	register struct rusage *rup = (struct rusage *)0;
a71 1
	register unsigned i;
d76 10
a85 10
	printf("#define\tP_FORW %d\n", &p->p_forw);
	printf("#define\tP_BACK %d\n", &p->p_back);
	printf("#define\tP_VMSPACE %d\n", &p->p_vmspace);
	printf("#define\tP_ADDR %d\n", &p->p_addr);
	printf("#define\tP_PRIORITY %d\n", &p->p_priority);
	printf("#define\tP_STAT %d\n", &p->p_stat);
	printf("#define\tP_WCHAN %d\n", &p->p_wchan);
	printf("#define\tP_MD %d\n", &p->p_md);
	printf("#define\tP_PID %d\n", &p->p_pid);
	printf("#define\tMD_REGS %d\n", &mdproc->md_regs);
d88 1
a88 1
	printf("#define\tPM_STCHG %d\n", &pmap->pm_stchanged);
d90 2
a91 2
	printf("#define\tVM_PMAP %d\n", &vms->vm_pmap);
	printf("#define\tV_INTR %d\n", &vm->v_intr);
d99 3
a101 2
	printf("#define\tU_PROF %d\n", &up->u_stats.p_prof);
	printf("#define\tU_PROFSCALE %d\n", &up->u_stats.p_prof.pr_scale);
d144 8
a151 8
	printf("#define\tPCB_FLAGS %d\n", &pcb->pcb_flags);
	printf("#define\tPCB_PS %d\n", &pcb->pcb_ps);
	printf("#define\tPCB_USTP %d\n", &pcb->pcb_ustp);
	printf("#define\tPCB_USP %d\n", &pcb->pcb_usp);
	printf("#define\tPCB_REGS %d\n", pcb->pcb_regs);
	printf("#define\tPCB_CMAP2 %d\n", &pcb->pcb_cmap2);
	printf("#define\tPCB_ONFAULT %d\n", &pcb->pcb_onfault);
	printf("#define\tPCB_FPCTX %d\n", &pcb->pcb_fpregs);
d154 3
a156 3
	printf("#define\tFR_SP %d\n", &frame->f_regs[15]);
	printf("#define\tFR_HW %d\n", &frame->f_sr);
	printf("#define\tFR_ADJ %d\n", &frame->f_stackadj);
d162 8
a169 8
	printf("#define\tCIAICR %d\n", &cia->icr);
	printf("#define\tAMIGA_68020 %d\n", AMIGA_68020);
	printf("#define\tAMIGA_68030 %d\n", AMIGA_68030);
	printf("#define\tAMIGA_68040 %d\n", AMIGA_68040);
	printf("#define\tAMIGA_68060 %d\n", AMIGA_68060);
	printf("#define\tISR_FORW %d\n", &isr->isr_forw);
	printf("#define\tISR_INTR %d\n", &isr->isr_intr);
	printf("#define\tISR_ARG %d\n", &isr->isr_arg);
@


1.3
log
@From NetBSD: Don't define _KERNEL here.
@
text
@d1 2
a2 1
/*	$NetBSD: genassym.c,v 1.23 1996/02/02 19:42:08 mycroft Exp $	*/
d163 1
@


1.2
log
@Added support for a new (well, I've run it locally for a year or two)
interrupt system which is a prerequisite for the Amiga ISA support.
It is described in amiga/amiga/README.ints, and is enabled by adding
an "options IPL_REMAP_1" in the kernel config file.  Along with this
change there is also some generic cleanup, like style polishing,
comment corrections, making sicallbacks operate in FIFO manner and
cleaning up the spl mess in param.h...
@
text
@d1 1
a1 1
/*	$NetBSD: genassym.c,v 1.22 1995/08/18 15:27:32 chopps Exp $	*/
a37 2
#define _KERNEL

d43 5
a52 3
#include <sys/syscall.h>
#include <vm/vm.h>
#include <sys/user.h>
d54 1
@


1.1
log
@Initial revision
@
text
@d113 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
