head	1.4;
access;
symbols
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.26
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.24
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.22
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2002.12.31.16.35.36;	author miod;	state dead;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.28;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.04.12.49.12;	author niklas;	state Exp;
branches
	1.2.16.1
	1.2.26.1;
next	1.1;

1.1
date	95.10.18.08.49.52;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.52;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2002.03.28.10.06.14;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2003.03.27.23.19.16;	author niklas;	state dead;
branches;
next	;

1.2.26.1
date	2002.06.11.03.34.56;	author art;	state Exp;
branches;
next	1.2.26.2;

1.2.26.2
date	2003.05.19.21.49.37;	author tedu;	state dead;
branches;
next	;


desc
@@


1.4
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: cia.c,v 1.3 2002/03/14 01:26:28 millert Exp $	*/
/*	$NetBSD: cia.c,v 1.6 1995/02/12 19:34:17 chopps Exp $	*/

/*
 * Copyright (c) 1993 Markus Wild
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Markus Wild.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 *  this file provides an interface to CIA-generated interrupts.
 *  Since the interrupt control register of a CIA is cleared
 *  when it's read, it is essential that different interrupt
 *  sources are managed from one central handler, or interrupts
 *  can get lost. 
 *
 *  if you write a handler dealing with a yet unused interrupt
 *  bit (handler == not_used), enter your interrupt handler 
 *  in the appropriate table below. If your handler must poll
 *  for an interrupt flag to come active, *always* call
 *  dispatch_cia_ints() afterwards with bits in the mask
 *  register your code didn't already deal with. 
 */
#include <sys/types.h>
#include <sys/cdefs.h>
#include <amiga/amiga/cia.h>
#include "par.h"
#include "kbd.h"

struct cia_intr_dispatch {
  u_char	mask;
  void		(*handler)(int);
};

static void not_used(int);
void kbdintr(int);
void parintr(int);

/* handlers for CIA-A (IPL-2) */
static struct cia_intr_dispatch ciaa_ints[] = {
	{ CIA_ICR_TA,		not_used },
	{ CIA_ICR_TB,		not_used },
	{ CIA_ICR_ALARM,	not_used },
#if NKBD > 0
	{ CIA_ICR_SP,	kbdintr },
#else
	{ CIA_ICR_SP,	not_used },
#endif
#if NPAR > 0
	{ CIA_ICR_FLG,	parintr },
#else
	{ CIA_ICR_FLG,	not_used },
#endif
	{ 0,		0 },
};

/* handlers for CIA-B (IPL-6) */
static struct cia_intr_dispatch ciab_ints[] = {
	{ CIA_ICR_TA,	not_used },	/* used directly in locore.s */
	{ CIA_ICR_TB,	not_used },	/* "" */
	{ CIA_ICR_ALARM,	not_used },
	{ CIA_ICR_SP,	not_used },
	{ CIA_ICR_FLG,	not_used },
	{ 0,		0 },
};



void
dispatch_cia_ints(which, mask)
	int which;
	int mask;
{
	struct cia_intr_dispatch *disp;

	disp = (which == 0) ? ciaa_ints : ciab_ints;

	for (;disp->mask; disp++)
		if (mask & disp->mask)
			disp->handler(disp->mask);
}

void
ciaa_intr()
{
	dispatch_cia_ints (0, ciaa.icr);
}

/*
 * NOTE: ciab_intr() is *not* currently called. If you want to support
 * the FLG interrupt, which is used to indicate a disk-index
 * interrupt, you'll have to hack a call to ciab_intr() into
 * the lev6 interrupt handler in locore.s !
 */
void
ciab_intr()
{
	dispatch_cia_ints (1, ciab.icr);
}


static void
not_used (mask)
     int mask;
{
}
@


1.3
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cia.c,v 1.2 1996/06/04 12:49:12 niklas Exp $	*/
@


1.2
log
@$OpenBSD$ militia
@
text
@d1 1
a1 1
/*	$OpenBSD: cia.c,v 1.6 1995/02/12 19:34:17 chopps Exp $	*/
d55 1
a55 1
  void		(*handler) __P ((int));
d58 3
a60 3
static void not_used __P((int));
void kbdintr  __P((int));
void parintr  __P((int));
@


1.2.26.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cia.c,v 1.2 1996/06/04 12:49:12 niklas Exp $	*/
d55 1
a55 1
  void		(*handler)(int);
d58 3
a60 3
static void not_used(int);
void kbdintr(int);
void parintr(int);
@


1.2.26.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: cia.c,v 1.2.26.1 2002/06/11 03:34:56 art Exp $	*/
@


1.2.16.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d55 1
a55 1
  void		(*handler)(int);
d58 3
a60 3
static void not_used(int);
void kbdintr(int);
void parintr(int);
@


1.2.16.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: cia.c,v 1.2.16.1 2002/03/28 10:06:14 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
