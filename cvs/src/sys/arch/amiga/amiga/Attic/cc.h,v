head	1.7;
access;
symbols
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.22
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.20
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.18
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.16
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.14
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.12
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.10
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.8
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.6
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2002.12.31.16.35.36;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.28;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.09.18.13.39.33;	author niklas;	state Exp;
branches
	1.5.12.1
	1.5.22.1;
next	1.4;

1.4
date	96.06.04.12.48.15;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.05.02.06.43.13;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.01.14.16.05.24;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.51;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.51;	author deraadt;	state Exp;
branches;
next	;

1.5.12.1
date	2002.03.28.10.06.14;	author niklas;	state Exp;
branches;
next	1.5.12.2;

1.5.12.2
date	2003.03.27.23.19.16;	author niklas;	state dead;
branches;
next	;

1.5.22.1
date	2002.06.11.03.34.56;	author art;	state Exp;
branches;
next	1.5.22.2;

1.5.22.2
date	2003.05.19.21.49.37;	author tedu;	state dead;
branches;
next	;


desc
@@


1.7
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: cc.h,v 1.6 2002/03/14 01:26:28 millert Exp $	*/
/*	$NetBSD: cc.h,v 1.9 1997/06/23 23:46:24 is Exp $	*/

/*
 * Copyright (c) 1994 Christian E. Hopps
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christian E. Hopps.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#if ! defined (_CC_H)
#define _CC_H

#include <sys/queue.h>
#include <amiga/amiga/cc_registers.h>

#if ! defined (HIADDR)
#define HIADDR(x) (u_short)((((unsigned long)(x))>>16)&0xffff)
#endif 
#if ! defined (LOADDR)
#define LOADDR(x) (u_short)(((unsigned long)(x))&0xffff)
#endif

/* 
 * Audio stuff 
 */
typedef void (*handler_func_t)(int);

struct audio_channel {
	u_short 	play_count;
	short		isaudio;
	handler_func_t	handler;
};

#ifdef LEV6_DEFER
#define AUCC_MAXINT 3 
#define AUCC_ALLINTF (INTF_AUD0|INTF_AUD1|INTF_AUD2)
#else 
#define AUCC_MAXINT 4 
#define AUCC_ALLINTF (INTF_AUD0|INTF_AUD1|INTF_AUD2|INTF_AUD3)
#endif
/*
 * Define this one unconditionally; we may use AUD3 as slave channel
 * with LEV6_DEFER
 */
#define AUCC_ALLDMAF (DMAF_AUD0|DMAF_AUD1|DMAF_AUD2|DMAF_AUD3)

/*
 * Vertical blank iterrupt sever chains.
 */

struct vbl_node {
	LIST_ENTRY(vbl_node) link;
	short  priority;			/* Private. */
	short  flags;				/* Private. */
	void  (*function)(register void *);	/* put function pointer here */
	void   *data;				/* functions data. */
};

enum vbl_node_bits {
    VBLNB_OFF,		  /* don't call me right now. */
    VBLNB_TURNOFF,	  /* turn function off. */
};

enum vlb_node_flags {
    VBLNF_OFF = 1 << VBLNB_OFF,
    VBLNF_TURNOFF = 1 << VBLNB_TURNOFF,
};    

/*
 * Blitter stuff.
 */

#define BLT_SHIFT_MASK(shift) (0xf&shift)

#define MAKEBOOL(val) (val ? 1 : 0)

#define DMAADDR(lng) (u_long)(((0x7 & lng) << 16)|(lng & 0xffff))

#define MAKE_BLTCON0(shift_a, use_a, use_b, use_c, use_d, minterm) \
        ((0x0000) | (BLT_SHIFT_MASK(shift_a) << 12) | \
	 (use_a << 11) |  (use_b << 10) |  (use_c << 9) |  (use_d << 8) | \
	 (minterm))

#define MAKE_BLTCON1(shift_b, efe, ife, fc, desc)  \
        ((0x0000) | (BLT_SHIFT_MASK(shift_b) << 12) | (efe << 4) | \
	 (ife << 3) | (fc << 2) | (desc << 1))

/*
 * Copper stuff.
 */

typedef struct copper_list {
    union j {
	struct k {
	    u_short opcode;
	    u_short operand;
	} inst;
	u_long data;
    } cp;
} cop_t;

#define CI_MOVE(x)   (0x7ffe & x)
#define CI_WAIT(h,v) (((0x7f&v)<<8)|(0xfe&h)|(0x0001))
#define CI_SKIP(x)   (((0x7f&v)<<8)|(0xfe&h)|(0x0001))

#define CD_MOVE(x) (x)
#define CD_WAIT(x) (x & 0xfffe)
#define CD_SKIP(x) (x|0x0001)

#define CBUMP(c) (c++)

#define CMOVE(c,r,v) do { \
			    c->cp.data=((CI_MOVE(r)<<16)|(CD_MOVE(v))); \
		            CBUMP (c); \
		        } while(0)
#define CWAIT(c,h,v) do { \
			    c->cp.data=((CI_WAIT(h,v) << 16)|CD_WAIT(0xfffe)); \
		            CBUMP (c); \
		        } while(0)
#define CSKIP(c,h,v) do { \
			    c->cp.data=((CI_SKIP(h,v)<<16)|CD_SKIP(0xffff)); \
		            CBUMP (c); \
		        } while(0)
#define CEND(c) do { \
			    c->cp.data=0xfffffffe; \
		            CBUMP (c); \
		        } while(0)

/*
 * Chipmem allocator stuff.
 */

struct mem_node {
	CIRCLEQ_ENTRY(mem_node) link; 	
	CIRCLEQ_ENTRY(mem_node) free_link;
	u_long size;		/* size of memory following node. */
};

#define CM_BLOCKSIZE 0x4
#define CM_BLOCKMASK (~(CM_BLOCKSIZE - 1))
#define MNODES_MEM(mn) ((u_char *)(&mn[1]))
#define PREP_DMA_MEM(mem) (void *)((caddr_t)mem - CHIPMEMADDR)

vm_offset_t CHIPMEMADDR;
vm_offset_t chipmem_start;
vm_offset_t chipmem_end;
#define CHIPMEMBASE	(0x00000000)
#define CHIPMEMTOP	(0x00200000)
#define NCHIPMEMPG	btoc(CHIPMEMTOP - CHIPMEMBASE)

/*
 * Prototypes.
 */
void custom_chips_init(void);
/* vertical blank server chain */
void cc_init_vbl(void);
void add_vbl_function(struct vbl_node *, short, void *);
void remove_vbl_function(struct vbl_node *);
void turn_vbl_function_off(struct vbl_node *);
void turn_vbl_function_on(struct vbl_node *);
/* blitter */
void cc_init_blitter(void);
int is_blitter_busy(void);
void wait_blit(void);
void blitter_handler(void);
void do_blit(u_short);
void set_blitter_control(u_short, u_short);
void set_blitter_mods(u_short, u_short, u_short, u_short);
void set_blitter_masks(u_short, u_short);
void set_blitter_data(u_short, u_short, u_short);
void set_blitter_pointers(void *, void *, void *, void *);
/* copper */
void install_copper_list(cop_t *);
cop_t *find_copper_inst(cop_t *, u_short);
void cc_init_copper(void);
void copper_handler(void);
/* audio */
void cc_init_audio(void);
void play_sample(u_short, u_short *, u_short, u_short, u_short, u_long);
void audio_handler(void);
/* chipmem */
void cc_init_chipmem(void);
void * alloc_chipmem(u_long);
void free_chipmem(void *);
u_long avail_chipmem(int);
u_long sizeof_chipmem(void *);

void wait_tof(void);
void vbl_handler(void);
void *chipmem_steal(long);

#endif /* _CC_H */

@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: cc.h,v 1.5 1997/09/18 13:39:33 niklas Exp $	*/
@


1.5
log
@Merge of NetBSD changes upto last week or so, with the exception of stand/
@
text
@d1 1
a1 1
/*	$OpenBSD: cc.h,v 1.4 1996/06/04 12:48:15 niklas Exp $	*/
d50 1
a50 1
typedef void (*handler_func_t) __P((int));
d178 1
a178 1
void custom_chips_init __P((void));
d180 5
a184 5
void cc_init_vbl __P((void));
void add_vbl_function __P((struct vbl_node *, short, void *));
void remove_vbl_function __P((struct vbl_node *));
void turn_vbl_function_off __P((struct vbl_node *));
void turn_vbl_function_on __P((struct vbl_node *));
d186 10
a195 10
void cc_init_blitter __P((void));
int is_blitter_busy __P((void));
void wait_blit __P((void));
void blitter_handler __P((void));
void do_blit __P((u_short));
void set_blitter_control __P((u_short, u_short));
void set_blitter_mods __P((u_short, u_short, u_short, u_short));
void set_blitter_masks __P((u_short, u_short));
void set_blitter_data __P((u_short, u_short, u_short));
void set_blitter_pointers __P((void *, void *, void *, void *));
d197 4
a200 4
void install_copper_list __P((cop_t *));
cop_t *find_copper_inst __P((cop_t *, u_short));
void cc_init_copper __P((void));
void copper_handler __P((void));
d202 3
a204 3
void cc_init_audio __P((void));
void play_sample __P((u_short, u_short *, u_short, u_short, u_short, u_long));
void audio_handler __P((void));
d206 9
a214 9
void cc_init_chipmem __P((void));
void * alloc_chipmem __P((u_long));
void free_chipmem __P((void *));
u_long avail_chipmem __P((int));
u_long sizeof_chipmem __P((void *));

void wait_tof __P((void));
void vbl_handler __P((void));
void *chipmem_steal __P((long));
@


1.5.22.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cc.h,v 1.5 1997/09/18 13:39:33 niklas Exp $	*/
d50 1
a50 1
typedef void (*handler_func_t)(int);
d178 1
a178 1
void custom_chips_init(void);
d180 5
a184 5
void cc_init_vbl(void);
void add_vbl_function(struct vbl_node *, short, void *);
void remove_vbl_function(struct vbl_node *);
void turn_vbl_function_off(struct vbl_node *);
void turn_vbl_function_on(struct vbl_node *);
d186 10
a195 10
void cc_init_blitter(void);
int is_blitter_busy(void);
void wait_blit(void);
void blitter_handler(void);
void do_blit(u_short);
void set_blitter_control(u_short, u_short);
void set_blitter_mods(u_short, u_short, u_short, u_short);
void set_blitter_masks(u_short, u_short);
void set_blitter_data(u_short, u_short, u_short);
void set_blitter_pointers(void *, void *, void *, void *);
d197 4
a200 4
void install_copper_list(cop_t *);
cop_t *find_copper_inst(cop_t *, u_short);
void cc_init_copper(void);
void copper_handler(void);
d202 3
a204 3
void cc_init_audio(void);
void play_sample(u_short, u_short *, u_short, u_short, u_short, u_long);
void audio_handler(void);
d206 9
a214 9
void cc_init_chipmem(void);
void * alloc_chipmem(u_long);
void free_chipmem(void *);
u_long avail_chipmem(int);
u_long sizeof_chipmem(void *);

void wait_tof(void);
void vbl_handler(void);
void *chipmem_steal(long);
@


1.5.22.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: cc.h,v 1.5.22.1 2002/06/11 03:34:56 art Exp $	*/
@


1.5.12.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 1
a50 1
typedef void (*handler_func_t)(int);
d178 1
a178 1
void custom_chips_init(void);
d180 5
a184 5
void cc_init_vbl(void);
void add_vbl_function(struct vbl_node *, short, void *);
void remove_vbl_function(struct vbl_node *);
void turn_vbl_function_off(struct vbl_node *);
void turn_vbl_function_on(struct vbl_node *);
d186 10
a195 10
void cc_init_blitter(void);
int is_blitter_busy(void);
void wait_blit(void);
void blitter_handler(void);
void do_blit(u_short);
void set_blitter_control(u_short, u_short);
void set_blitter_mods(u_short, u_short, u_short, u_short);
void set_blitter_masks(u_short, u_short);
void set_blitter_data(u_short, u_short, u_short);
void set_blitter_pointers(void *, void *, void *, void *);
d197 4
a200 4
void install_copper_list(cop_t *);
cop_t *find_copper_inst(cop_t *, u_short);
void cc_init_copper(void);
void copper_handler(void);
d202 3
a204 3
void cc_init_audio(void);
void play_sample(u_short, u_short *, u_short, u_short, u_short, u_long);
void audio_handler(void);
d206 9
a214 9
void cc_init_chipmem(void);
void * alloc_chipmem(u_long);
void free_chipmem(void *);
u_long avail_chipmem(int);
u_long sizeof_chipmem(void *);

void wait_tof(void);
void vbl_handler(void);
void *chipmem_steal(long);
@


1.5.12.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: cc.h,v 1.5.12.1 2002/03/28 10:06:14 niklas Exp $	*/
@


1.4
log
@Cleanup for -Wall -Wstrict-prototypes
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: cc.h,v 1.7 1996/04/21 21:06:52 veego Exp $	*/
d47 24
a173 2

typedef void (*handler_func_t) __P((int));
@


1.3
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d151 1
a151 1
typedef int (*handler_func_t)();
@


1.2
log
@Add hooks for custom audio players.  This is the original untouched
kernel diffs from Tim Newsham <newsham@@hookomo.aloha.net> found in his
well-known audio LKM kit.
@
text
@d1 2
a2 1
/*	$NetBSD: cc.h,v 1.6 1994/10/26 02:01:37 cgd Exp $	*/
d189 5
@


1.1
log
@Initial revision
@
text
@d150 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
