head	1.8;
access;
symbols
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_2:1.6.0.16
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.14
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.6.0.12
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.10
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.8
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.6
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.2
	SMP_BASE:1.6
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3;
locks; strict;
comment	@# @;


1.8
date	2002.12.31.16.35.38;	author miod;	state dead;
branches;
next	1.7;

1.7
date	2002.12.02.09.00.22;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.12.15.29.06;	author espie;	state Exp;
branches
	1.6.2.1
	1.6.12.1;
next	1.5;

1.5
date	99.07.08.20.11.52;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	99.04.05.15.32.16;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	97.03.25.17.05.49;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	97.03.22.00.19.56;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	97.01.16.09.26.21;	author niklas;	state Exp;
branches;
next	;

1.6.2.1
date	2003.03.27.23.19.19;	author niklas;	state dead;
branches;
next	;

1.6.12.1
date	2003.05.19.21.49.40;	author tedu;	state dead;
branches;
next	;


desc
@@


1.8
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@#	$OpenBSD: Makefile,v 1.7 2002/12/02 09:00:22 miod Exp $

NOPROG=	installboot
MAN=installboot.8
MANSUBDIR=/amiga

.if ${MACHINE}== "amiga"

SUBDIR=aout2bb txlt libsa

AOUT2BB!=cd $(.CURDIR)/aout2bb; \
	printf "xxx:\n\techo \$${.OBJDIR}/aout2bb\n" | \
	${MAKE} -r -s -f - xxx | grep aout2bb

TXLT!=	cd $(.CURDIR)/txlt; \
	printf "xxx:\n\techo \$${.OBJDIR}/txlt\n" | \
	${MAKE} -r -s -f - xxx | grep txlt

OBJS=	configure.o main.o
OBJS+=	console.o xd.o

# libsa library replacements:
OBJS+=	alloc.o printf.o twiddle.o

# libkern replacements:
OBJS+=	bcopy.o ashrdi3.o muldi3.o

# machine language startup code:
OBJS+=	startit.o

SRCS=	installboot.sh configure.c main.c console.c xd.c twiddle.c
SRCS+=	bbstart.s libstubs.s alloc.s printf.s startit.s
SRCS+=	bcopy.s ashrdi3.s muldi3.s

CLEANFILES=	$(OBJS) $(BOOTBLOCKS) x.out xxstart.s f.out fdstart.s

S=		${.CURDIR}/../../../..
INCPATH=	-I${.CURDIR} -I${.CURDIR}/../.. -I${S} -I${S}/lib/libsa
COPTIM=		-O -fomit-frame-pointer -fno-function-cse -Wa,-l -m68060 \
		-Wa,-m68030
CFLAGS=		${COPTIM} ${INCPATH} ${DEFS}
CFLAGS+=	-fno-stack-protector
COPTS+=		-Wall -Wstrict-prototypes

BOOTBLOCKS=	xxboot # XXX  fdboot is too large at the moment.

.s.o:
	$(CC) $(CAFLAGS) $(COPTS) -x assembler-with-cpp -o $*.o -c $<

#libs:

.include "${.CURDIR}/libsa/Makefile.inc"
LIBSA=  ${SA_LIB}

# libstubs should really be a library, but we don't care for now.
LIBS=	${LIBSA} ${LIBKERN} libstubs.o

all: $(BOOTBLOCKS) installboot

$(OBJS): txlt

xxstart.s: bbstart.s
	cpp ${.CURDIR}/bbstart.s > $@@
	
fdstart.s: bbstart.s
	cpp -DAUTOLOAD=8192 ${.CURDIR}/bbstart.s > $@@

x.out: xxstart.o $(OBJS) $(LIBS)
	$(LD) $(LDFLAGS) -r -dc -e _start -o x.out xxstart.o $(OBJS) $(LIBS)
	size x.out

f.out: fdstart.o $(OBJS) $(LIBS)
	$(LD) $(LDFLAGS) -r -dc -e _start -o f.out fdstart.o $(OBJS) $(LIBS)
	size f.out


$(BOOTBLOCKS): aout2bb

xxboot: x.out
	rm -f $@@
	${AOUT2BB} x.out $@@ || nm -u x.out

fdboot: f.out
	rm -f $@@
	${AOUT2BB} -F f.out $@@ || nm -u f.out

clean::
	rm -f $(OBJS) fdstart.[os] xxstart.[os] f.out x.out installboot

install: all maninstall
	install -o $(BINOWN) -g $(BINGRP) $(BOOTBLOCKS) /usr/mdec
	install -o $(BINOWN) -g $(BINGRP) installboot /usr/sbin

ci:
	ci -l $(SRCS) Makefile

tar:
	(cd ..; tar \
		--exclude '*.o' --exclude RCS --exclude .depend \
		--exclude '*.out' --exclude fdstart.s --exclude xxstart.s \
		--exclude aout2bb/aout2bb --exclude libsa.a \
		-czvf boot.tar.gz boot)

test: xxtest fdtest

xxtest: xxboot
	dd if=$? of=/dev/rsd1e bs=8192 count=1

fdtest: fdboot
	dd if=$? of=/dev/rfd0a bs=8192 count=1

.endif

.include <bsd.prog.mk>
.include "Makefile.txlt"
@


1.7
log
@Import propolice (http://www.trl.ibm.com/projects/security/ssp), a stack
attack protection scheme, into gcc.

This protection is enabled by default. It can be turned off by using the
-fno-stack-protector flag.

Code by Hiroaki Etoh (etoh at jp dot ibm dot com); work on openbsd-specific
integration by fgsch@@, deraadt@@ and myself; tests by fgsch@@, naddy@@ and
myself; beer drinking by myself.

Please note that system upgrades with this new code will require a new
libc and ld.so to be build and installed before the propolice-enabled
compiler can be installed.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2000/02/12 15:29:06 espie Exp $
@


1.6
log
@Let manpages be built if !amiga
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1999/07/08 20:11:52 deraadt Exp $
d42 1
@


1.6.12.1
log
@sync
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2000/02/12 15:29:06 espie Exp $
@


1.6.2.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2000/02/12 15:29:06 espie Exp $
@


1.5
log
@install into man8/arch subdirs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1999/04/05 15:32:16 espie Exp $
d7 2
d110 2
@


1.4
log
@Missing subdir -> no obj link.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1997/03/25 17:05:49 niklas Exp $
d5 1
@


1.3
log
@Fixed obj-dir building, compacted the bootblock enough to fit (at least)
the HD one, floppy is still too large.  Added our BOOT_CONFIG -c option.
Some small style nits.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1997/03/22 00:19:56 niklas Exp $
d6 1
a6 1
SUBDIR=aout2bb txlt
@


1.2
log
@Make this build work with objdirs, at least as links
Still need work for plain obj dirs.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 1997/01/16 09:26:21 niklas Exp $
d8 7
a14 1
TXLT=txlt/txlt
d16 2
a17 2
OBJS = configure.o main.o
OBJS += console.o xd.o
d20 1
a20 1
OBJS += alloc.o printf.o twiddle.o
d23 1
a23 1
OBJS += bcopy.o bzero.o ashrdi3.o muldi3.o
d26 1
a26 1
OBJS += startit.o
d28 12
a39 12
SRCS = installboot.sh configure.c main.c console.c xd.c 
SRCS+= twiddle.c
SRCS+= bbstart.s libstubs.s alloc.s printf.s startit.s
SRCS+= bcopy.s bzero.c ashrdi3.s muldi3.s

CLEANFILES = $(OBJS) $(BOOTBLOCKS) x.out xxstart.s f.out fdstart.s

S=	${.CURDIR}/../../../..
INCPATH=-I${.CURDIR} -I${.CURDIR}/../.. -I${S} -I${S}/lib/libsa
COPTIM=	-O2 -fomit-frame-pointer -fno-function-cse -Wa,-l -m68060 -Wa,-m68030
CFLAGS = ${COPTIM} ${INCPATH} ${DEFS}
COPTS += -Wall -Wstrict-prototypes
d41 1
a41 1
BOOTBLOCKS=xxboot # XXX  fdboot is too large at the moment.
d44 1
a44 2
	$(CC) $(CAFLAGS) $(COPTS) -x assembler-with-cpp -o $*.o -c \
	    ${.CURDIR}/$*.s
d77 1
a77 1
	aout2bb/aout2bb x.out $@@ || nm -u x.out
d81 1
a81 1
	aout2bb/aout2bb -F f.out $@@ || nm -u f.out
@


1.1
log
@Sync to NetBSD 970110
@
text
@d1 1
a1 1
#	$OpenBSD$
d37 3
a39 1
.s.o: ; $(CC) $(CAFLAGS) $(COPTS) -x assembler-with-cpp -o $*.o -c $*.s
d54 1
a54 1
	cpp bbstart.s > $@@
d57 1
a57 1
	cpp -DAUTOLOAD=8192 bbstart.s > $@@
@
