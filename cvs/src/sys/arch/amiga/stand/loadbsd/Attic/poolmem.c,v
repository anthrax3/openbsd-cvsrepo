head	1.2;
access;
symbols
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_2:1.1.0.22
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.20
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.1
	UBC:1.1.0.18
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.16
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.14
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.12
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.10
	OPENBSD_2_7_BASE:1.1
	SMP:1.1.0.8
	SMP_BASE:1.1
	kame_19991208:1.1
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2002.12.31.16.35.39;	author miod;	state dead;
branches;
next	1.1;

1.1
date	98.08.13.21.08.16;	author espie;	state Exp;
branches
	1.1.8.1
	1.1.18.1;
next	;

1.1.8.1
date	2003.03.27.23.19.19;	author niklas;	state dead;
branches;
next	;

1.1.18.1
date	2003.05.19.21.49.40;	author tedu;	state dead;
branches;
next	;


desc
@@


1.2
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/* $OpenBSD: poolmem.c,v 1.1 1998/08/13 21:08:16 espie Exp $ */

/* This piece of code ensures that poolmem no longer runs. It is necessary
 * to kill poolmem before assessing the memory configuration, as this patch
 * tampers with exec memory lists

 From: Thomas Richter <thor@@math.TU-Berlin.DE>

The following is the "official" port structure of the PoolMem port. That's
what you get as result of a FindPort("PoolMem.rendezvous"):

struct PoolMemPort {
	struct MsgPort		pm_Port;
	UWORD			pm_Flags;          DO NOT CARE 
	ULONG			pm_DoNotTouch;
	void		      (*pm_RemoveProc)();  The important stuff 
};

Calling syntax is as follows:

	The remove procedure must be called with Exec in "Forbid" state,
	using register a0 as a pointer to the routine. Register a6 MUST be
	a pointer to the DosLibrary (purely for historical reasons).
	Register a5 MUST be a pointer to this port structure.
 */
 
#include <proto/exec.h>
#include <stdio.h>

extern struct DosLibrary *DOSBase;
void remove_poolmem(struct DosLibrary *db, struct MsgPort *mp);


void ensure_no_poolmem()
   {
   Forbid();
      {
      struct MsgPort *p = FindPort("PoolMem.rendezvous");
      if (p)
	 remove_poolmem(DOSBase, p);
		/* this will actually break the Forbid() */
	 puts("Poolmem detected (and removed)");
      }
   Permit();
   }

asm("
	.text
	.globl _remove_poolmem

_remove_poolmem:
        movem.l a0-a6/d0-d7,sp@@-		| save all regs
	move.l sp@@(64),a6			| DosBase
	move.l sp@@(68),a5			| PoolMemPort
	move.l  a5@@(40),a0		| Routine to call
	jsr  a0@@
	movem.l sp@@+,a0-a6/d0-d7		| restore all regs
	rts
");
@


1.1
log
@Make loadbsd aware of poolmem (mainly, kill poolmem before scanning the
memory list)
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.1.18.1
log
@sync
@
text
@d1 1
a1 1
/* $OpenBSD: poolmem.c,v 1.1 1998/08/13 21:08:16 espie Exp $ */
@


1.1.8.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/* $OpenBSD: poolmem.c,v 1.1 1998/08/13 21:08:16 espie Exp $ */
@


