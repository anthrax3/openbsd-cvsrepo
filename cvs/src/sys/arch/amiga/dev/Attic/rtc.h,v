head	1.6;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.12
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.10
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.8
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.2
	SMP_BASE:1.4
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2002.12.31.16.35.38;	author miod;	state dead;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.29;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.24.16.02.04;	author espie;	state Exp;
branches
	1.4.2.1
	1.4.12.1;
next	1.3;

1.3
date	97.09.18.13.39.59;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.05.02.06.44.25;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.01;	author deraadt;	state Exp;
branches;
next	;

1.4.2.1
date	2002.03.28.10.06.14;	author niklas;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2003.03.27.23.19.18;	author niklas;	state dead;
branches;
next	;

1.4.12.1
date	2002.06.11.03.34.58;	author art;	state Exp;
branches;
next	1.4.12.2;

1.4.12.2
date	2003.05.19.21.49.39;	author tedu;	state dead;
branches;
next	;


desc
@@


1.6
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: rtc.h,v 1.5 2002/03/14 01:26:29 millert Exp $	*/
/*	$NetBSD: rtc.h,v 1.5 1997/07/17 23:29:28 is Exp $	*/

/*
 * Copyright (c) 1994 Christian E. Hopps
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christian E. Hopps.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * information on A2000 clock from Harald Backert.
 * information on A3000 clock from Holger Emden.
 */
#ifndef _RTCVAR_H_
#define _RTCVAR_H_

/* this is a hook set by a clock driver for the configured realtime clock,
   returning plain current unix-time */

time_t (*gettod)(void);
int (*settod)(time_t);

struct rtclock2000 {
	u_int  :28, second2:4;	/* lower digit */
	u_int  :28, second1:4;	/* upper digit */
	u_int  :28, minute2:4;	/* lower digit */
	u_int  :28, minute1:4;	/* upper digit */
	u_int  :28, hour2:4;	/* lower digit */
	u_int  :28, hour1:4;	/* upper digit */
	u_int  :28, day2:4;	/* lower digit */
	u_int  :28, day1:4;	/* upper digit */
	u_int  :28, month2:4;	/* lower digit */
	u_int  :28, month1:4;	/* upper digit */
	u_int  :28, year2:4;	/* lower digit */
	u_int  :28, year1:4;	/* upper digit */
	u_int  :28, weekday:4;	/* weekday */
	u_int  :28, control1:4;	/* control-byte 1 */
	u_int  :28, control2:4;	/* control-byte 2 */  
	u_int  :28, control3:4;	/* control-byte 3 */
};

/*
 * commands written to control1, HOLD before reading the clock,
 * FREE after done reading.
 */

#define A2CONTROL1_HOLD		(1<<0)
#define A2CONTROL1_BUSY		(1<<1)
#define A2CONTROL3_24HMODE	(1<<2)
#define A2HOUR1_PM		(1<<2)

struct rtclock3000 {
	u_int  :28, second2:4;	/* 0x03  lower digit */
	u_int  :28, second1:4;	/* 0x07  upper digit */
	u_int  :28, minute2:4;	/* 0x0b  lower digit */
	u_int  :28, minute1:4;	/* 0x0f  upper digit */
	u_int  :28, hour2:4;	/* 0x13  lower digit */
	u_int  :28, hour1:4;	/* 0x17  upper digit */
	u_int  :28, weekday:4;	/* 0x1b */
	u_int  :28, day2:4;	/* 0x1f  lower digit */
	u_int  :28, day1:4;	/* 0x23  upper digit */
	u_int  :28, month2:4;	/* 0x27  lower digit */
	u_int  :28, month1:4;	/* 0x2b  upper digit */
	u_int  :28, year2:4;	/* 0x2f  lower digit */
	u_int  :28, year1:4;	/* 0x33  upper digit */
	u_int  :28, control1:4;	/* 0x37  control-byte 1 */
	u_int  :28, control2:4;	/* 0x3b  control-byte 2 */  
	u_int  :28, control3:4;	/* 0x3f  control-byte 3 */
};

#define A3CONTROL1_HOLD_CLOCK	0
#define A3CONTROL1_FREE_CLOCK	9

/* mode1 registers we use */
#define leapyear year2

#define A3BBC_SET_REG 	0xe0
#define A3BBC_WRITE_REG	0xc2
#define A3BBC_READ_REG	0xc3
#define A3NUM_BBC_REGS	12

/*
 * Our clock starts at 1/1/1970, but counts the years from 1900.
 */
#define	STARTOFTIME	1970
#define	CLOCK_BASE_YEAR	1900

#endif /* _RTCVAR_H_ */
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: rtc.h,v 1.4 2000/01/24 16:02:04 espie Exp $	*/
@


1.4
log
@Amiga HW clock code was not Y2K compliant.
Fix (from netbsd).
@
text
@d1 1
a1 1
/*	$OpenBSD: rtc.h,v 1.3 1997/09/18 13:39:59 niklas Exp $	*/
d42 2
a43 2
time_t (*gettod) __P((void));
int (*settod) __P((time_t));
@


1.4.12.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: rtc.h,v 1.4 2000/01/24 16:02:04 espie Exp $	*/
d42 2
a43 2
time_t (*gettod)(void);
int (*settod)(time_t);
@


1.4.12.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: rtc.h,v 1.4.12.1 2002/06/11 03:34:58 art Exp $	*/
@


1.4.2.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 2
a43 2
time_t (*gettod)(void);
int (*settod)(time_t);
@


1.4.2.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: rtc.h,v 1.4.2.1 2002/03/28 10:06:14 niklas Exp $	*/
@


1.3
log
@Merge of NetBSD changes upto last week or so, with the exception of stand/
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d95 3
@


1.2
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d2 1
a2 1
/*	$NetBSD: rtc.h,v 1.3 1996/04/21 21:12:19 veego Exp $	*/
d39 6
d58 1
a58 1
	u_int  :28, week:4;	/* week */
d101 3
a103 1
#define FEBRUARY	2
d105 1
a105 8
#define SECDAY		86400L
#define SECYR		(SECDAY * 365)


#define	leapyear(y)		((((y)%4)==0 && ((y)%100)!=0) || ((y)%400) == 0)
#define	range_test(n, l, h)	((n) < (l) || (n) > (h))
#define	days_in_year(a) 	(leapyear(a) ? 366 : 365)
#define	days_in_month(a) 	(month_days[(a) - 1])
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: rtc.h,v 1.2 1994/10/26 02:04:32 cgd Exp $	*/
d101 1
a101 1
#define	leapyear(y)		(((y)%4)==0 && ((y)%100)!=0 || ((y)%400) == 0)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
