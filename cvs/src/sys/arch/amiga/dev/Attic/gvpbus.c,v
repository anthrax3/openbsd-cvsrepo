head	1.7;
access;
symbols
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.5.0.24
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.22
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.20
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.18
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.14
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2002.12.31.16.35.37;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2002.03.14.01.26.29;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.01.16.09.24.32;	author niklas;	state Exp;
branches
	1.5.14.1
	1.5.24.1;
next	1.4;

1.4
date	96.11.23.21.45.18;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.05.02.06.44.00;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.04.21.22.15.18;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.58;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.58;	author deraadt;	state Exp;
branches;
next	;

1.5.14.1
date	2002.03.28.10.06.14;	author niklas;	state Exp;
branches;
next	1.5.14.2;

1.5.14.2
date	2003.03.27.23.19.17;	author niklas;	state dead;
branches;
next	;

1.5.24.1
date	2002.06.11.03.34.58;	author art;	state Exp;
branches;
next	1.5.24.2;

1.5.24.2
date	2003.05.19.21.49.38;	author tedu;	state dead;
branches;
next	;


desc
@@


1.7
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: gvpbus.c,v 1.6 2002/03/14 01:26:29 millert Exp $	*/
/*	$NetBSD: gvpbus.c,v 1.15 1996/12/23 09:10:12 veego Exp $	*/

/*
 * Copyright (c) 1994 Christian E. Hopps
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christian E. Hopps.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#include <sys/param.h>
#include <sys/device.h>
#include <sys/systm.h>
#include <amiga/amiga/device.h>
#include <amiga/dev/zbusvar.h>
#include <amiga/dev/gvpbusvar.h>

void gvpbusattach(struct device *, struct device *, void *);
int gvpbusmatch(struct device *, void *, void *);
int gvpbusprint(void *auxp, const char *); 

extern int sbic_no_dma;		/* Kludge for A1291 - mlh */

struct cfattach gvpbus_ca = {
	sizeof(struct device), gvpbusmatch, gvpbusattach
};

struct cfdriver gvpbus_cd = {
	NULL, "gvpbus", DV_DULL, NULL, 0
};

int
gvpbusmatch(pdp, match, auxp)
	struct device *pdp;
	void *match, *auxp;
{
	struct zbus_args *zap;

	zap = auxp;

	/*
	 * Check manufacturer and product id.
	 */
#if 0
	if (zap->manid == 2017 && (zap->prodid == 11 || zap->prodid == 2))
#else
	if (zap->manid == 2017 && zap->prodid == 11)
#endif
		return(1);
	return(0);
}

void
gvpbusattach(pdp, dp, auxp)
	struct device *pdp, *dp;
	void *auxp;
{
	struct zbus_args *zap;
	struct gvpbus_args ga;

	zap = auxp;
	bcopy(zap, &ga.zargs, sizeof(struct zbus_args));
	ga.flags = 0;
	
	/*
	 * grab secondary type (or fake it if we have a series I)
	 */
	if (zap->prodid != 9) {
		ga.prod = *((u_char *)zap->va + 0x8001) & 0xf8;
		if (*((u_char *)zap->va + 0x8001) & 0x01)
			ga.flags |= GVP_14MHZ;
	printf(": subprod %02x flags %02x", *((u_char *)zap->va + 0x8001), ga.flags);
#if 0
	} else {
		ga.prod = GVP_SERIESII;		/* really a series I */
		ga.flags |= GVP_NOBANK;
#endif
	}
	

	switch (ga.prod) {
	/* no scsi */
	case GVP_GFORCE_040:
	case GVP_GFORCE_030:
		ga.flags = GVP_IO;
		/*FALLTHROUGH*/
	case GVP_COMBO_R4:
	case GVP_COMBO_R3:
		ga.flags |= GVP_ACCEL;
		break;
	/* scsi */
	case GVP_A1291_SCSI:
		ga.flags |= GVP_SCSI | GVP_ACCEL;
		sbic_no_dma = 1;	/* Kludge !!!!!!! mlh */
		break;
	case GVP_GFORCE_040_SCSI:
		ga.flags |= GVP_SCSI | GVP_IO | GVP_ACCEL;
		break;
	case GVP_GFORCE_030_SCSI:
		ga.flags |= GVP_SCSI | GVP_IO | GVP_ACCEL | GVP_25BITDMA;
		break;
	case GVP_A530_SCSI:
	case GVP_COMBO_R4_SCSI:
		ga.flags |= GVP_SCSI | GVP_ACCEL | GVP_25BITDMA;
		if (ga.prod == GVP_COMBO_R4_SCSI)
			ga.flags ^= GVP_14MHZ;
		break;
	case GVP_COMBO_R3_SCSI:
		ga.flags |= GVP_SCSI | GVP_ACCEL | GVP_24BITDMA;
		ga.flags ^= GVP_14MHZ;
		break;
	case GVP_SERIESII:
		ga.flags |= GVP_SCSI | GVP_24BITDMA;
		break;
	/* misc */
	case GVP_IOEXTEND:
		ga.flags |= GVP_IO;
		break;
	default:
		printf(": unknown Series II %x", ga.prod);
	}
	printf("\n");
	/*
	 * attempt to configure the board.
	 */
	config_found(dp, &ga, gvpbusprint);
	/*
	 * eventually when io support is added we need to 
	 * configure that too.
	 */
}

int
gvpbusprint(auxp, pnp)
	void *auxp;
	const char *pnp;
{
	struct gvpbus_args *gap;

	gap = auxp;
	if (pnp == NULL)
		return(QUIET);
	/*
	 * doesn't support io yet.
	 */
	if (gap->prod == GVP_IOEXTEND) 
		printf("gio at %s", pnp);
	else
		printf("gtsc at %s", pnp);
	return(UNCONF);
}

@


1.6
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: gvpbus.c,v 1.5 1997/01/16 09:24:32 niklas Exp $	*/
@


1.5
log
@Sync to NetBSD 970110
@
text
@d1 1
a1 1
/*	$OpenBSD: gvpbus.c,v 1.4 1996/11/23 21:45:18 kstailey Exp $	*/
d40 3
a42 3
void gvpbusattach __P((struct device *, struct device *, void *));
int gvpbusmatch __P((struct device *, void *, void *));
int gvpbusprint __P((void *auxp, const char *)); 
@


1.5.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: gvpbus.c,v 1.5 1997/01/16 09:24:32 niklas Exp $	*/
d40 3
a42 3
void gvpbusattach(struct device *, struct device *, void *);
int gvpbusmatch(struct device *, void *, void *);
int gvpbusprint(void *auxp, const char *); 
@


1.5.24.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: gvpbus.c,v 1.5.24.1 2002/06/11 03:34:58 art Exp $	*/
@


1.5.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 3
a42 3
void gvpbusattach(struct device *, struct device *, void *);
int gvpbusmatch(struct device *, void *, void *);
int gvpbusprint(void *auxp, const char *); 
@


1.5.14.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: gvpbus.c,v 1.5.14.1 2002/03/28 10:06:14 niklas Exp $	*/
@


1.4
log
@added const to second parameter of cfprint_t routines
@
text
@d1 2
a2 2
/*	$OpenBSD: gvpbus.c,v 1.3 1996/05/02 06:44:00 niklas Exp $	*/
/*	$NetBSD: gvpbus.c,v 1.11 1996/04/21 21:11:36 veego Exp $	*/
@


1.3
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d1 1
a1 1
/*	$OpenBSD: gvpbus.c,v 1.2 1996/04/21 22:15:18 deraadt Exp $	*/
d42 1
a42 1
int gvpbusprint __P((void *auxp, char *));
d158 1
a158 1
	char *pnp;
@


1.2
log
@partial sync with netbsd 960418, more to come
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: gvpbus.c,v 1.10 1996/03/17 01:17:23 thorpej Exp $	*/
d35 1
a58 1
	struct cfdata *cdp = match;
a81 1
	u_char *idreg;
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: gvpbus.c,v 1.9 1995/08/18 15:27:54 chopps Exp $	*/
d40 1
a40 1
int gvpbusmatch __P((struct device *, struct cfdata *, void *));
d45 7
a51 3
struct cfdriver gvpbuscd = {
	NULL, "gvpbus", (cfmatch_t)gvpbusmatch, gvpbusattach, 
	DV_DULL, sizeof(struct device), NULL, 0 };
d54 1
a54 1
gvpbusmatch(pdp, cdp, auxp)
d56 1
a56 2
	struct cfdata *cdp;
	void *auxp;
d58 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
