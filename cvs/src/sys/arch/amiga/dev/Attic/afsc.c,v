head	1.10;
access;
symbols
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.8.0.24
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.22
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.20
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.18
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.16
	OPENBSD_2_7_BASE:1.8
	SMP:1.8.0.14
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.8.0.12
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.10
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.8
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.6
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.4
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2002.12.31.16.35.37;	author miod;	state dead;
branches;
next	1.9;

1.9
date	2002.03.14.01.26.28;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.01.18.12.26.21;	author niklas;	state Exp;
branches
	1.8.14.1
	1.8.24.1;
next	1.7;

1.7
date	97.01.16.09.23.42;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.11.23.21.45.05;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	96.05.02.06.43.32;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.04.21.22.14.56;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.03.30.22.18.12;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.01.31.22.58.57;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.55;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.55;	author deraadt;	state Exp;
branches;
next	;

1.8.14.1
date	2002.03.28.10.06.14;	author niklas;	state Exp;
branches;
next	1.8.14.2;

1.8.14.2
date	2003.03.27.23.19.17;	author niklas;	state dead;
branches;
next	;

1.8.24.1
date	2002.06.11.03.34.57;	author art;	state Exp;
branches;
next	1.8.24.2;

1.8.24.2
date	2003.05.19.21.49.38;	author tedu;	state dead;
branches;
next	;


desc
@@


1.10
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: afsc.c,v 1.9 2002/03/14 01:26:28 millert Exp $	*/
/*	$NetBSD: afsc.c,v 1.20 1996/12/23 09:09:49 veego Exp $	*/

/*
 * Copyright (c) 1994 Michael L. Hitch
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dma.c
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/device.h>
#include <scsi/scsi_all.h>
#include <scsi/scsiconf.h>
#include <machine/cpu.h>
#include <amiga/amiga/custom.h>
#include <amiga/amiga/cc.h>
#include <amiga/amiga/device.h>
#include <amiga/amiga/isr.h>
#include <amiga/dev/siopreg.h>
#include <amiga/dev/siopvar.h>
#include <amiga/dev/zbusvar.h>

void afscattach(struct device *, struct device *, void *);
int afscmatch(struct device *, void *, void *);
int afsc_dmaintr(void *);
#ifdef DEBUG
void afsc_dump(void);
#endif

struct scsi_adapter afsc_scsiswitch = {
	siop_scsicmd,
	siop_minphys,
	0,			/* no lun support */
	0,			/* no lun support */
};

struct scsi_device afsc_scsidev = {
	NULL,		/* use default error handler */
	NULL,		/* do not have a start functio */
	NULL,		/* have no async handler */
	NULL,		/* Use default done routine */
};


#ifdef DEBUG
#endif

struct cfattach afsc_ca = {
	sizeof(struct siop_softc), afscmatch, afscattach
};

struct cfdriver afsc_cd = {
	NULL, "afsc", DV_DULL, NULL, 0
};

struct cfattach aftsc_ca = {
	sizeof(struct siop_softc), afscmatch, afscattach
};

struct cfdriver aftsc_cd = {
	NULL, "aftsc", DV_DULL, NULL, 0
};

/*
 * if we are a Commodore Amiga A4091 or possibly an A4000T
 */
int
afscmatch(pdp, match, auxp)
	struct device *pdp;
	void *match, *auxp;
{
	struct zbus_args *zap;
	siop_regmap_p rp;
	u_long temp, scratch;

	zap = auxp;
	if (zap->manid == 514 && zap->prodid == 84)
		return(1);		/* It's an A4091 SCSI card */
	if (!is_a4000() || !matchname(auxp, "afsc"))
		return(0);		/* Not on an A4000 or not A4000T SCSI */
	rp = ztwomap(0xdd0040);
	if (badaddr((caddr_t)&rp->siop_scratch) || badaddr((caddr_t)&rp->siop_temp)) {
		return(0);
	}
	scratch = rp->siop_scratch;
	temp = rp->siop_temp;
	rp->siop_scratch = 0xdeadbeef;
	rp->siop_temp = 0xaaaa5555;
	if (rp->siop_scratch != 0xdeadbeef || rp->siop_temp != 0xaaaa5555)
		return(0);
	rp->siop_scratch = scratch;
	rp->siop_temp = temp;
	if (rp->siop_scratch != scratch || rp->siop_temp != temp)
		return(0);
	return(1);
}

void
afscattach(pdp, dp, auxp)
	struct device *pdp, *dp;
	void *auxp;
{
	struct siop_softc *sc;
	struct zbus_args *zap;
	siop_regmap_p rp;

	printf("\n");

	zap = auxp;

	sc = (struct siop_softc *)dp;
	if (zap->manid == 514 && zap->prodid == 84)
		sc->sc_siopp = rp = zap->va + 0x00800000;
	else
		sc->sc_siopp = rp = ztwomap(0xdd0040);

	/*
	 * CTEST7 = 80 [disable burst]
	 */
	sc->sc_clock_freq = 50;		/* Clock = 50Mhz */
	sc->sc_ctest7 = SIOP_CTEST7_CDIS;
	sc->sc_dcntl = SIOP_DCNTL_EA;

	sc->sc_link.adapter_softc = sc;
	sc->sc_link.adapter_target = 7;
	sc->sc_link.adapter = &afsc_scsiswitch;
	sc->sc_link.device = &afsc_scsidev;
	sc->sc_link.openings = 2;

	siopinitialize(sc);

	sc->sc_isr.isr_intr = afsc_dmaintr;
	sc->sc_isr.isr_arg = sc;
	sc->sc_isr.isr_ipl = 2;
	add_isr (&sc->sc_isr);

	/*
	 * attach all scsi units on us
	 */
	config_found(dp, &sc->sc_link, scsiprint);
}

int
afsc_dmaintr(arg)
	void *arg;
{
	struct siop_softc *sc = arg;
	siop_regmap_p rp;
	u_char istat;

	if (sc->sc_flags & SIOP_INTSOFF)
		return (0);	/* interrupts are not active */
	rp = sc->sc_siopp;
	istat = rp->siop_istat;
	if ((istat & (SIOP_ISTAT_SIP | SIOP_ISTAT_DIP)) == 0)
		return(0);
	/*
	 * save interrupt status, DMA status, and SCSI status 0
	 * (may need to deal with stacked interrupts?)
	 */
	sc->sc_sstat0 = rp->siop_sstat0;
	sc->sc_istat = istat;
	sc->sc_dstat = rp->siop_dstat;
	siopintr(sc);
	return(1);
}

#ifdef DEBUG
void
afsc_dump()
{
	int i;

	for (i = 0; i < afsc_cd.cd_ndevs; ++i)
		if (afsc_cd.cd_devs[i])
			siop_dump(afsc_cd.cd_devs[i]);
}
#endif
@


1.9
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: afsc.c,v 1.8 1997/01/18 12:26:21 niklas Exp $	*/
@


1.8
log
@Use scsiprint
@
text
@d1 1
a1 1
/*	$OpenBSD: afsc.c,v 1.7 1997/01/16 09:23:42 niklas Exp $	*/
d55 3
a57 3
void afscattach __P((struct device *, struct device *, void *));
int afscmatch __P((struct device *, void *, void *));
int afsc_dmaintr __P((void *));
d59 1
a59 1
void afsc_dump __P((void));
@


1.8.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: afsc.c,v 1.8 1997/01/18 12:26:21 niklas Exp $	*/
d55 3
a57 3
void afscattach(struct device *, struct device *, void *);
int afscmatch(struct device *, void *, void *);
int afsc_dmaintr(void *);
d59 1
a59 1
void afsc_dump(void);
@


1.8.24.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: afsc.c,v 1.8.24.1 2002/06/11 03:34:57 art Exp $	*/
@


1.8.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d55 3
a57 3
void afscattach(struct device *, struct device *, void *);
int afscmatch(struct device *, void *, void *);
int afsc_dmaintr(void *);
d59 1
a59 1
void afsc_dump(void);
@


1.8.14.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: afsc.c,v 1.8.14.1 2002/03/28 10:06:14 niklas Exp $	*/
@


1.7
log
@Sync to NetBSD 970110
@
text
@d1 1
a1 1
/*	$OpenBSD: afsc.c,v 1.6 1996/11/23 21:45:05 kstailey Exp $	*/
a54 1
int afscprint __P((void *auxp, const char *));
d172 1
a172 14
	config_found(dp, &sc->sc_link, afscprint);
}

/*
 * print diag if pnp is NULL else just extra
 */
int
afscprint(auxp, pnp)
	void *auxp;
	const char *pnp;
{
	if (pnp == NULL)
		return(UNCONF);
	return(QUIET);
@


1.6
log
@added const to second parameter of cfprint_t routines
@
text
@d1 2
a2 2
/*	$OpenBSD: afsc.c,v 1.5 1996/05/02 06:43:32 niklas Exp $	*/
/*	$NetBSD: afsc.c,v 1.14 1996/04/21 21:10:48 veego Exp $	*/
@


1.5
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d1 1
a1 1
/*	$OpenBSD: afsc.c,v 1.4 1996/04/21 22:14:56 deraadt Exp $	*/
d55 1
a55 1
int afscprint __P((void *auxp, char *));
d182 1
a182 1
	char *pnp;
@


1.4
log
@partial sync with netbsd 960418, more to come
@
text
@d1 2
a2 2
/*	$OpenBSD: afsc.c,v 1.3 1996/03/30 22:18:12 niklas Exp $	*/
/*	$NetBSD: afsc.c,v 1.13 1996/03/18 04:58:36 mhitch Exp $	*/
d46 1
d58 4
a61 2
int siopintr __P((struct siop_softc *));
int afsc_dmaintr __P((struct siop_softc *));
a104 1
	struct cfdata *cdp = match;
d115 1
a115 1
	if (badaddr(&rp->siop_scratch) || badaddr(&rp->siop_temp)) {
d190 2
a191 2
afsc_dmaintr(sc)
	struct siop_softc *sc;
d193 1
@


1.3
log
@From NetBSD: merge of 960317
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: afsc.c,v 1.11 1996/03/15 22:11:09 mhitch Exp $	*/
d56 1
a56 1
int afscmatch __P((struct device *, struct cfdata *, void *));
d78 15
a92 6
struct cfdriver afsccd = {
	NULL, "afsc", (cfmatch_t)afscmatch, afscattach, 
	DV_DULL, sizeof(struct siop_softc), NULL, 0 };
struct cfdriver aftsccd = {
	NULL, "aftsc", (cfmatch_t)afscmatch, afscattach, 
	DV_DULL, sizeof(struct siop_softc), NULL, 0 };
d98 1
a98 1
afscmatch(pdp, cdp, auxp)
d100 1
a100 2
	struct cfdata *cdp;
	void *auxp;
d102 1
d217 3
a219 3
	for (i = 0; i < afsccd.cd_ndevs; ++i)
		if (afsccd.cd_devs[i])
			siop_dump(afsccd.cd_devs[i]);
@


1.2
log
@from netbsd: fix typo (Ignatios Souvatzis)
@
text
@d1 2
a2 1
/*	$NetBSD: afsc.c,v 1.10 1996/01/28 19:23:24 chopps Exp $	*/
d82 1
a82 1
	NULL, "afsc", (cfmatch_t)afscmatch, afscattach, 
a102 3
#ifdef DEBUG
	printf("afscmatch: probing for A4000T\n");
#endif
a104 3
#ifdef DEBUG
		printf("afscmatch: A4000T probed bad address\n");
#endif
a110 4
#ifdef DEBUG
	printf("afscmatch: probe %x %x %x %x\n", scratch, temp,
	    rp->siop_scratch, rp->siop_temp);
#endif
d143 2
a144 1
	sc->sc_ctest7 = 0x80;		/* CDIS */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: afsc.c,v 1.9 1995/10/05 12:41:09 chopps Exp $	*/
d117 1
a117 1
	printf("afscmatch: probe %x %x %x %X\n", scratch, temp,
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
