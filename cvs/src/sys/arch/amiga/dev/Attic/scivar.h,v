head	1.4;
access;
symbols
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.26
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.24
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.22
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.20
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2002.12.31.16.35.38;	author miod;	state dead;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.29;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.05.02.06.44.29;	author niklas;	state Exp;
branches
	1.2.16.1
	1.2.26.1;
next	1.1;

1.1
date	95.10.18.08.50.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.01;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2002.03.28.10.06.14;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2003.03.27.23.19.18;	author niklas;	state dead;
branches;
next	;

1.2.26.1
date	2002.06.11.03.34.58;	author art;	state Exp;
branches;
next	1.2.26.2;

1.2.26.2
date	2003.05.19.21.49.39;	author tedu;	state dead;
branches;
next	;


desc
@@


1.4
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: scivar.h,v 1.3 2002/03/14 01:26:29 millert Exp $	*/
/*	$NetBSD: scivar.h,v 1.10 1996/04/28 06:41:01 mhitch Exp $	*/

/*
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Van Jacobson of Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)scivar.h	7.1 (Berkeley) 5/8/90
 */
#ifndef _SCIVAR_H_
#define _SCIVAR_H_

struct	sci_pending {
	TAILQ_ENTRY(sci_pending) link;
	struct scsi_xfer *xs;
};

struct sci_softc;

struct	sci_softc {
	struct	device sc_dev;
	struct	isr sc_isr;
	struct	scsi_link sc_link;	/* proto for sub devices */
	TAILQ_HEAD(,sci_pending) sc_xslist;
	struct	sci_pending sc_xsstore[8][8];
	struct	scsi_xfer *sc_xs;	/* transfer from high level code */

	volatile u_char	*sci_data;	/* r: Current data */
	volatile u_char	*sci_odata;	/* w: Out data */
	volatile u_char	*sci_icmd;	/* rw: Initiator command */
	volatile u_char	*sci_mode;	/* rw: Mode */
	volatile u_char	*sci_tcmd;	/* rw: Target command */
	volatile u_char	*sci_bus_csr;	/* r: Bus Status */
	volatile u_char	*sci_sel_enb;	/* w: Select enable */
	volatile u_char	*sci_csr;	/* r: Status */
	volatile u_char	*sci_dma_send;	/* w: Start dma send data */
	volatile u_char	*sci_idata;	/* r: Input data */
	volatile u_char	*sci_trecv;	/* w: Start dma receive, target */
	volatile u_char	*sci_iack;	/* r: Interrupt Acknowledge */
	volatile u_char	*sci_irecv;	/* w: Start dma receive, initiator */

	/* psuedo DMA transfer */
	int	(*dma_xfer_in)(struct sci_softc *, int, u_char *, int);
	/* psuedo DMA transfer */
	int	(*dma_xfer_out)(struct sci_softc *, int, u_char *, int);
	u_char	sc_flags;
	u_char	sc_lun;
	/* one for each target */
	struct syncpar {
	  u_char state;
	  u_char period, offset;
	} sc_sync[8];
	u_char	sc_slave;
	u_char	sc_scsi_addr;
	u_char	sc_stat[2];
	u_char	sc_msg[8];
};

/* sc_flags */
#define	SCI_IO		0x80	/* DMA I/O in progress */
#define	SCI_ALIVE	0x01	/* controller initialized */
#define SCI_SELECTED	0x04	/* bus is in selected state. Needed for
				   correct abort procedure. */

/* sync states */
#define SYNC_START	0	/* no sync handshake started */
#define SYNC_SENT	1	/* we sent sync request, no answer yet */
#define SYNC_DONE	2	/* target accepted our (or inferior) settings,
				   or it rejected the request and we stay async */

#define	PHASE		0x07		/* mask for psns/pctl phase */
#define	DATA_OUT_PHASE	0x00
#define	DATA_IN_PHASE	0x01
#define	CMD_PHASE	0x02
#define	STATUS_PHASE	0x03
#define	BUS_FREE_PHASE	0x04
#define	ARB_SEL_PHASE	0x05	/* Fuji chip combines arbitration with sel. */
#define	MESG_OUT_PHASE	0x06
#define	MESG_IN_PHASE	0x07

#define	MSG_CMD_COMPLETE	0x00
#define MSG_EXT_MESSAGE		0x01
#define	MSG_SAVE_DATA_PTR	0x02
#define	MSG_RESTORE_PTR		0x03
#define	MSG_DISCONNECT		0x04
#define	MSG_INIT_DETECT_ERROR	0x05
#define	MSG_ABORT		0x06
#define	MSG_REJECT		0x07
#define	MSG_NOOP		0x08
#define	MSG_PARITY_ERROR	0x09
#define	MSG_BUS_DEVICE_RESET	0x0C
#define	MSG_IDENTIFY		0x80
#define	MSG_IDENTIFY_DR		0xc0	/* (disconnect/reconnect allowed) */
#define	MSG_SYNC_REQ 		0x01


#define	STS_CHECKCOND	0x02	/* Check Condition (ie., read sense) */
#define	STS_CONDMET	0x04	/* Condition Met (ie., search worked) */
#define	STS_BUSY	0x08
#define	STS_INTERMED	0x10	/* Intermediate status sent */
#define	STS_EXT		0x80	/* Extended status valid */

/*
 * XXXX
 */
struct scsi_fmt_cdb {
	int len;		/* cdb length (in bytes) */
	u_char cdb[28];		/* cdb to use on next read/write */
};

struct buf;
struct scsi_xfer;

void sci_minphys(struct buf *);
int sci_scsicmd(struct scsi_xfer *);
void scireset(struct sci_softc *);

#endif /* _SCIVAR_H_ */
@


1.3
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: scivar.h,v 1.2 1996/05/02 06:44:29 niklas Exp $	*/
@


1.2
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d74 1
a74 1
	int	(*dma_xfer_in) __P((struct sci_softc *, int, u_char *, int));
d76 1
a76 1
	int	(*dma_xfer_out) __P((struct sci_softc *, int, u_char *, int));
d145 3
a147 3
void sci_minphys __P((struct buf *));
int sci_scsicmd __P((struct scsi_xfer *));
void scireset __P((struct sci_softc *));
@


1.2.26.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: scivar.h,v 1.2 1996/05/02 06:44:29 niklas Exp $	*/
d74 1
a74 1
	int	(*dma_xfer_in)(struct sci_softc *, int, u_char *, int);
d76 1
a76 1
	int	(*dma_xfer_out)(struct sci_softc *, int, u_char *, int);
d145 3
a147 3
void sci_minphys(struct buf *);
int sci_scsicmd(struct scsi_xfer *);
void scireset(struct sci_softc *);
@


1.2.26.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: scivar.h,v 1.2.26.1 2002/06/11 03:34:58 art Exp $	*/
@


1.2.16.1
log
@Merge in -current from about a week ago
@
text
@d74 1
a74 1
	int	(*dma_xfer_in)(struct sci_softc *, int, u_char *, int);
d76 1
a76 1
	int	(*dma_xfer_out)(struct sci_softc *, int, u_char *, int);
d145 3
a147 3
void sci_minphys(struct buf *);
int sci_scsicmd(struct scsi_xfer *);
void scireset(struct sci_softc *);
@


1.2.16.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: scivar.h,v 1.2.16.1 2002/03/28 10:06:14 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: scivar.h,v 1.8 1995/08/12 20:30:51 mycroft Exp $	*/
d49 1
d73 4
a76 3
	int	(*dma_xfer_in)();	/* psuedo DMA transfer */
	int	(*dma_xfer_out)();	/* psuedo DMA transfer */
	int	(*dma_intr)();		/* board-specific interrupt */
d100 1
a100 1
				   or it rejected the request and we stay async *
d145 1
a145 1
void sci_minphys __P((struct buf *bp));
d147 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
