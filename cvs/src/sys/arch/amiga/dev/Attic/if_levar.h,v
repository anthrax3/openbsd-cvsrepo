head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_2:1.4.0.26
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.24
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.4.0.22
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.20
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.12
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2002.12.31.16.35.37;	author miod;	state dead;
branches;
next	1.4;

1.4
date	97.09.18.13.39.56;	author niklas;	state Exp;
branches
	1.4.12.1
	1.4.22.1;
next	1.3;

1.3
date	96.05.09.22.40.01;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.05.02.06.44.07;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.49.59;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.59;	author deraadt;	state Exp;
branches;
next	;

1.4.12.1
date	2003.03.27.23.19.18;	author niklas;	state dead;
branches;
next	;

1.4.22.1
date	2003.05.19.21.49.39;	author tedu;	state dead;
branches;
next	;


desc
@@


1.5
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: if_levar.h,v 1.4 1997/09/18 13:39:56 niklas Exp $	*/
/*	$NetBSD: if_levar.h,v 1.5 1997/03/27 21:15:14 veego Exp $	*/

/*
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * LANCE and PCnet-ISA registers.
 */
struct lereg1 {
	u_int16_t ler1_rdp;	/* data port */
	u_int16_t ler1_rap;	/* register select port */
	/*
	 * The next two registers are only available on PCnet-ISA cards.
	 */
	u_int16_t ler1_reset;	/* reading this resets the PCnet-ISA */
	u_int16_t ler1_idp;	/* isa configuration port */
};

/*
 * Ethernet software status per interface.
 *
 * Each interface is referenced by a network interface structure,
 * arpcom.ac_if, which the routing code uses to locate the interface.
 * This structure contains the output queue for the interface, its address, ...
 */
struct le_softc {
	struct	am7990_softc sc_am7990;	/* glue to MI code */

	struct	isr sc_isr;
	struct	lereg1 *sc_r1;		/* LANCE registers */
};
@


1.4
log
@Merge of NetBSD changes upto last week or so, with the exception of stand/
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.4.22.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: if_levar.h,v 1.4 1997/09/18 13:39:56 niklas Exp $	*/
@


1.4.12.1
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: if_levar.h,v 1.4 1997/09/18 13:39:56 niklas Exp $	*/
@


1.3
log
@From NetBSD:
Changed struct ifnet to have a pointer to the softc of the underlying
device and a printable "external name" (name + unit number), thus eliminating
if_name and if_unit.  Updated interface to (*if_watchdog)() and (*if_start)()
to take a struct ifnet *, rather than a unit number.
@
text
@d2 1
a2 1
/*	$NetBSD: if_levar.h,v 1.3 1996/05/07 00:46:45 thorpej Exp $	*/
d38 1
a38 1
 * LANCE registers.
d41 7
a47 2
	u_short	ler1_rdp;	/* data port */
	u_short	ler1_rap;	/* register select port */
@


1.2
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d2 1
a2 1
/*	$NetBSD: if_levar.h,v 1.2 1996/04/21 21:11:48 veego Exp $	*/
d53 1
a53 34
	struct	device sc_dev;		/* base structure */
	struct	arpcom sc_arpcom;	/* Ethernet common part */

	void	(*sc_copytodesc)	/* Copy to descriptor */
			__P((struct le_softc *, void *, int, int));
	void	(*sc_copyfromdesc)	/* Copy from descriptor */
			__P((struct le_softc *, void *, int, int));
	void	(*sc_copytobuf)		/* Copy to buffer */
			__P((struct le_softc *, void *, int, int));
	void	(*sc_copyfrombuf)	/* Copy from buffer */
			__P((struct le_softc *, void *, int, int));
	void	(*sc_zerobuf)		/* and Zero bytes in buffer */
			__P((struct le_softc *, int, int));

	u_int16_t sc_conf3;		/* CSR3 value */

	void	*sc_mem;		/* base address of RAM -- CPU's view */
	u_long	sc_addr;		/* base address of RAM -- LANCE's view */
	u_long	sc_memsize;		/* size of RAM */

	int	sc_nrbuf;		/* number of receive buffers */
	int	sc_ntbuf;		/* number of transmit buffers */
	int	sc_last_rd;
	int	sc_first_td, sc_last_td, sc_no_td;

	int	sc_initaddr;
	int	sc_rmdaddr;
	int	sc_tmdaddr;
	int	sc_rbufaddr;
	int	sc_tbufaddr;

#ifdef LEDEBUG
	int	sc_debug;
#endif
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: if_levar.h,v 1.1 1995/09/30 17:18:22 chopps Exp $	*/
d56 10
a65 6
	void	(*sc_copytodesc)();	/* Copy to descriptor */
	void	(*sc_copyfromdesc)();	/* Copy from descriptor */

	void	(*sc_copytobuf)();	/* Copy to buffer */
	void	(*sc_copyfrombuf)();	/* Copy from buffer */
	void	(*sc_zerobuf)();	/* and Zero bytes in buffer */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
