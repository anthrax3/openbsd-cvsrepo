head	1.9;
access;
symbols
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.24
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.22
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.20
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.18
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.16
	OPENBSD_2_7_BASE:1.7
	SMP:1.7.0.14
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.12
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.10
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.8
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2002.12.31.16.35.38;	author miod;	state dead;
branches;
next	1.8;

1.8
date	2002.03.14.01.26.29;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.01.18.12.26.35;	author niklas;	state Exp;
branches
	1.7.14.1
	1.7.24.1;
next	1.6;

1.6
date	97.01.16.09.25.33;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.11.23.21.45.23;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.05.02.06.44.38;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.04.21.22.15.47;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.30.22.18.24;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.50.03;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.50.03;	author deraadt;	state Exp;
branches;
next	;

1.7.14.1
date	2002.03.28.10.06.15;	author niklas;	state Exp;
branches;
next	1.7.14.2;

1.7.14.2
date	2003.03.27.23.19.18;	author niklas;	state dead;
branches;
next	;

1.7.24.1
date	2002.06.11.03.34.58;	author art;	state Exp;
branches;
next	1.7.24.2;

1.7.24.2
date	2003.05.19.21.49.39;	author tedu;	state dead;
branches;
next	;


desc
@@


1.9
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: wesc.c,v 1.8 2002/03/14 01:26:29 millert Exp $	*/
/*	$NetBSD: wesc.c,v 1.19 1996/12/23 09:10:30 veego Exp $	*/

/*
 * Copyright (c) 1994 Michael L. Hitch
 * Copyright (c) 1982, 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dma.c
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/kernel.h>
#include <sys/device.h>
#include <scsi/scsi_all.h>
#include <scsi/scsiconf.h>
#include <amiga/amiga/custom.h>
#include <amiga/amiga/cc.h>
#include <amiga/amiga/device.h>
#include <amiga/amiga/isr.h>
#include <amiga/dev/siopreg.h>
#include <amiga/dev/siopvar.h>
#include <amiga/dev/zbusvar.h>

void wescattach(struct device *, struct device *, void *);
int wescmatch(struct device *, void *, void *);
int wesc_dmaintr(void *);
#ifdef DEBUG
void wesc_dump(void);
#endif

struct scsi_adapter wesc_scsiswitch = {
	siop_scsicmd,
	siop_minphys,
	0,			/* no lun support */
	0,			/* no lun support */
};

struct scsi_device wesc_scsidev = {
	NULL,		/* use default error handler */
	NULL,		/* do not have a start functio */
	NULL,		/* have no async handler */
	NULL,		/* Use default done routine */
};


#ifdef DEBUG
#endif

struct cfattach wesc_ca = {
	sizeof(struct siop_softc), wescmatch, wescattach
};

struct cfdriver wesc_cd = {
	NULL, "wesc", DV_DULL, NULL, 0
};

/*
 * if we are an MacroSystemsUS Warp Engine
 */
int
wescmatch(pdp, match, auxp)
	struct device *pdp;
	void *match, *auxp;
{
	struct zbus_args *zap;

	zap = auxp;
	if (zap->manid == 2203 && zap->prodid == 19)
		return(1);
	return(0);
}

void
wescattach(pdp, dp, auxp)
	struct device *pdp, *dp;
	void *auxp;
{
	struct siop_softc *sc;
	struct zbus_args *zap;
	siop_regmap_p rp;

	printf("\n");

	zap = auxp;

	sc = (struct siop_softc *)dp;
	sc->sc_siopp = rp = zap->va + 0x40000;

	/*
	 * CTEST7 = SC0, TT1
	 */
	sc->sc_clock_freq = 50;		/* Clock = 50Mhz */
	sc->sc_ctest7 = SIOP_CTEST7_SC0 | SIOP_CTEST7_TT1;
	sc->sc_dcntl = 0x00;

	sc->sc_link.adapter_softc = sc;
	sc->sc_link.adapter_target = 7;
	sc->sc_link.adapter = &wesc_scsiswitch;
	sc->sc_link.device = &wesc_scsidev;
	sc->sc_link.openings = 2;

	siopinitialize(sc);

	sc->sc_isr.isr_intr = wesc_dmaintr;
	sc->sc_isr.isr_arg = sc;
	sc->sc_isr.isr_ipl = 2;
	add_isr (&sc->sc_isr);

	/*
	 * attach all scsi units on us
	 */
	config_found(dp, &sc->sc_link, scsiprint);
}

int
wesc_dmaintr(arg)
	void *arg;
{
	struct siop_softc *sc = arg;
	siop_regmap_p rp;
	u_char istat;

	if (sc->sc_flags & SIOP_INTSOFF)
		return (0);	/* interrupts are not active */
	rp = sc->sc_siopp;
	istat = rp->siop_istat;
	if ((istat & (SIOP_ISTAT_SIP | SIOP_ISTAT_DIP)) == 0)
		return (0);
	/*
	 * save interrupt status, DMA status, and SCSI status 0
	 * (may need to deal with stacked interrupts?)
	 */
	sc->sc_sstat0 = rp->siop_sstat0;
	sc->sc_istat = istat;
	sc->sc_dstat = rp->siop_dstat;
	siopintr(sc);
	return(1);
}

#ifdef DEBUG
void
wesc_dump()
{
	int i;

	for (i = 0; i < wesc_cd.cd_ndevs; ++i)
		if (wesc_cd.cd_devs[i])
			siop_dump(wesc_cd.cd_devs[i]);
}
#endif
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: wesc.c,v 1.7 1997/01/18 12:26:35 niklas Exp $	*/
@


1.7
log
@Use scsiprint
@
text
@d1 1
a1 1
/*	$OpenBSD: wesc.c,v 1.6 1997/01/16 09:25:33 niklas Exp $	*/
d54 3
a56 3
void wescattach __P((struct device *, struct device *, void *));
int wescmatch __P((struct device *, void *, void *));
int wesc_dmaintr __P((void *));
d58 1
a58 1
void wesc_dump __P((void));
@


1.7.24.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: wesc.c,v 1.7 1997/01/18 12:26:35 niklas Exp $	*/
d54 3
a56 3
void wescattach(struct device *, struct device *, void *);
int wescmatch(struct device *, void *, void *);
int wesc_dmaintr(void *);
d58 1
a58 1
void wesc_dump(void);
@


1.7.24.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: wesc.c,v 1.7.24.1 2002/06/11 03:34:58 art Exp $	*/
@


1.7.14.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d54 3
a56 3
void wescattach(struct device *, struct device *, void *);
int wescmatch(struct device *, void *, void *);
int wesc_dmaintr(void *);
d58 1
a58 1
void wesc_dump(void);
@


1.7.14.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: wesc.c,v 1.7.14.1 2002/03/28 10:06:15 niklas Exp $	*/
@


1.6
log
@Sync to NetBSD 970110
@
text
@d1 1
a1 1
/*	$OpenBSD: wesc.c,v 1.5 1996/11/23 21:45:23 kstailey Exp $	*/
a53 1
int wescprint __P((void *auxp, const char *));
d142 1
a142 1
	config_found(dp, &sc->sc_link, wescprint);
a143 14

/*
 * print diag if pnp is NULL else just extra
 */
int
wescprint(auxp, pnp)
	void *auxp;
	const char *pnp;
{
	if (pnp == NULL)
		return(UNCONF);
	return(QUIET);
}

@


1.5
log
@added const to second parameter of cfprint_t routines
@
text
@d1 2
a2 2
/*	$OpenBSD: wesc.c,v 1.4 1996/05/02 06:44:38 niklas Exp $	*/
/*	$NetBSD: wesc.c,v 1.13 1996/04/21 21:12:42 veego Exp $	*/
@


1.4
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d1 1
a1 1
/*	$OpenBSD: wesc.c,v 1.3 1996/04/21 22:15:47 deraadt Exp $	*/
d54 1
a54 1
int wescprint __P((void *auxp, char *));
d152 1
a152 1
	char *pnp;
@


1.3
log
@partial sync with netbsd 960418, more to come
@
text
@d1 2
a2 2
/*	$OpenBSD: wesc.c,v 1.2 1996/03/30 22:18:24 niklas Exp $	*/
/*	$NetBSD: wesc.c,v 1.12 1996/03/17 01:17:55 thorpej Exp $	*/
d57 4
a60 1
int wesc_dmaintr __P((struct siop_softc *));
a95 1
	struct cfdata *cdp = match;
d161 2
a162 2
wesc_dmaintr(sc)
	struct siop_softc *sc;
d164 1
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: wesc.c,v 1.11 1996/03/15 22:11:19 mhitch Exp $	*/
d56 1
a56 1
int wescmatch __P((struct device *, struct cfdata *, void *));
d77 7
a83 3
struct cfdriver wesccd = {
	NULL, "wesc", (cfmatch_t)wescmatch, wescattach, 
	DV_DULL, sizeof(struct siop_softc), NULL, 0 };
d89 1
a89 1
wescmatch(pdp, cdp, auxp)
d91 1
a91 2
	struct cfdata *cdp;
	void *auxp;
d93 1
d188 3
a190 3
	for (i = 0; i < wesccd.cd_ndevs; ++i)
		if (wesccd.cd_devs[i])
			siop_dump(wesccd.cd_devs[i]);
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: wesc.c,v 1.10 1995/09/16 16:11:32 chopps Exp $	*/
d118 2
a119 1
	sc->sc_ctest7 = 0x22;		/* SC0 + TT1 */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
