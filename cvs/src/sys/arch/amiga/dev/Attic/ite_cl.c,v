head	1.7;
access;
symbols
	SMP_SYNC_A:1.7
	SMP_SYNC_B:1.7
	UBC_SYNC_A:1.7
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.6
	UBC:1.4.0.6
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	SMP:1.2.0.16
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2002.12.31.16.35.37;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2002.06.11.03.25.42;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.29;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.15.17.41.45;	author espie;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	2000.04.28.15.27.07;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	96.05.02.06.44.11;	author niklas;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	95.10.18.08.49.59;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.49.59;	author deraadt;	state Exp;
branches;
next	;

1.2.16.1
date	2001.04.18.16.02.13;	author niklas;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2002.03.28.10.06.14;	author niklas;	state Exp;
branches;
next	1.2.16.3;

1.2.16.3
date	2003.03.27.23.19.18;	author niklas;	state dead;
branches;
next	;

1.4.6.1
date	2002.06.11.03.34.58;	author art;	state Exp;
branches;
next	1.4.6.2;

1.4.6.2
date	2002.10.29.00.28.01;	author art;	state Exp;
branches;
next	1.4.6.3;

1.4.6.3
date	2003.05.19.21.49.39;	author tedu;	state dead;
branches;
next	;


desc
@@


1.7
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: ite_cl.c,v 1.6 2002/06/11 03:25:42 miod Exp $	*/
/*	$NetBSD: ite_cl.c,v 1.3.2.1 1999/06/28 23:22:17 perry Exp $	*/

/*
 * Copyright (c) 1995 Ezra Story
 * Copyright (c) 1995 Kari Mettinen
 * Copyright (c) 1994 Markus Wild
 * Copyright (c) 1994 Lutz Vieweg
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Lutz Vieweg.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   
 */

#include "grfcl.h"
#if NGRFCL > 0

#include <sys/param.h>
#include <sys/proc.h>
#include <sys/device.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/systm.h>
#include <dev/cons.h>
#include <machine/conf.h>
#include <machine/cpu.h>
#include <amiga/amiga/device.h>
#include <amiga/dev/grfioctl.h>
#include <amiga/dev/grfvar.h>
#include <amiga/dev/grf_clreg.h>
#include <amiga/dev/itevar.h>

#ifdef CL5426CONSOLE
int cl_console = 1;
#else
int cl_console = 0;
#endif

void cl_init(struct ite_softc *ip);
void cl_cursor(struct ite_softc *ip, int flag);
void cl_deinit(struct ite_softc *ip);
void cl_putc(struct ite_softc *ip, int c, int dy, int dx, int mode);
void cl_clear(struct ite_softc *ip, int sy, int sx, int h, int w);
void cl_scroll(struct ite_softc *ip, int sy, int sx, int count,
    int dir);


/*
 * Called to determine ite status.  Because the connection between the
 * console & ite in this driver is rather intimate, we return CN_DEAD
 * if the cl_console is not active.
 */
int
grfcl_cnprobe(void)
{
	static int done;
	int rv;

	if (cl_console && (done == 0))
		rv = CN_INTERNAL;
	else
		rv = CN_DEAD;

	done = 1;
	return(rv);
}

void
grfcl_iteinit(gp)
	struct grf_softc *gp;
{
	gp->g_iteinit = cl_init;
	gp->g_itedeinit = cl_deinit;
	gp->g_iteclear = cl_clear;
	gp->g_iteputc = cl_putc;
	gp->g_itescroll = cl_scroll;
	gp->g_itecursor = cl_cursor;
}

void
cl_init(ip)
	struct ite_softc *ip;
{
	struct grfcltext_mode *md;

	ip->priv = ip->grf->g_data;
	md = (struct grfcltext_mode *) ip->priv;

	ip->cols = md->cols;
	ip->rows = md->rows;
}


void
cl_cursor(ip, flag)
	struct ite_softc *ip;
	int flag;
{
	volatile u_char *ba = ip->grf->g_regkva;

    	switch (flag) {
    	case DRAW_CURSOR:
    	    	/*WCrt(ba, CRT_ID_CURSOR_START, & ~0x20); */
    	case MOVE_CURSOR:
    	    	flag = ip->curx + ip->cury * ip->cols;
    	    	WCrt(ba, CRT_ID_CURSOR_LOC_LOW, flag & 0xff);
    	    	WCrt(ba, CRT_ID_CURSOR_LOC_HIGH, flag >> 8);
		ip->cursorx = ip->curx;
		ip->cursory = ip->cury;
    	    	break;
    	case ERASE_CURSOR:
    	    	/*WCrt(ba, CRT_ID_CURSOR_START, | 0x20); */
    	case START_CURSOROPT:
    	case END_CURSOROPT:
    	default:
    	    	break;
    	}
}


void
cl_deinit(ip)
	struct ite_softc *ip;
{
	ip->flags &= ~ITE_INITED;
}


void
cl_putc(ip, c, dy, dx, mode)
	struct ite_softc *ip;
	int c;
	int dy;
	int dx;
	int mode;
{
	volatile unsigned char *ba = ip->grf->g_regkva;
	unsigned char *fb = ip->grf->g_fbkva;
	unsigned char attr;
	unsigned char *cp;

	if (ip->flags & ITE_INGRF)
		return;

#if 0
	attr =(unsigned char) ((mode & ATTR_INV) ? (0x70) : (0x07));
	if (mode & ATTR_UL)     attr  = 0x01;	/* ???????? */
	if (mode & ATTR_BOLD)   attr |= 0x08;
	if (mode & ATTR_BLINK)  attr |= 0x80;
#endif
	attr = 2;
	switch (mode & (ATTR_UL | ATTR_BLINK)) {
	case 0:
		break;
        case ATTR_UL:
		attr += 2;
		break;
	case ATTR_BLINK:
		attr += 4;
		break;
	case ATTR_BLINK | ATTR_UL:
		attr += 7;
		break;
	}
	if (mode & ATTR_BOLD)
		attr++;

	if (mode & ATTR_INV)
		attr <<= 4;

	cp = fb + ((dy * ip->cols) + dx);
	SetTextPlane(ba,0x00);
	*cp = (unsigned char) c;
	SetTextPlane(ba,0x01);
	*cp = attr;
}

void
cl_clear(ip, sy, sx, h, w)
	struct ite_softc *ip;
	int sy;
	int sx;
	int h;
	int w;
{
    	/* cl_clear and cl_scroll both rely on ite passing arguments
         * which describe continuous regions.  For a VT200 terminal,
         * this is safe behavior.
         */
    	unsigned char *src, *dst;
    	volatile unsigned char *ba = ip->grf->g_regkva;
    	int len;

	if (ip->flags & ITE_INGRF)
		return;

    	dst = ip->grf->g_fbkva + (sy * ip->cols) + sx;
    	src = dst + (ip->rows*ip->cols); 
    	len = w*h;

    	SetTextPlane(ba, 0x00);
    	bcopy(src, dst, len);
    	SetTextPlane(ba, 0x01);
    	bcopy(src, dst, len);
}

void
cl_scroll(ip, sy, sx, count, dir)
	struct ite_softc *ip;
	int sy;
	int sx;
	int count;
	int dir;
{
    	unsigned char *fb;
    	volatile unsigned char *ba = ip->grf->g_regkva;

	if (ip->flags & ITE_INGRF)
		return;

    	fb = ip->grf->g_fbkva + sy * ip->cols;
    	SetTextPlane(ba, 0x00);

    	switch (dir) {
    	case SCROLL_UP:
    	    	bcopy(fb, fb - (count * ip->cols), 
    	    	    (ip->bottom_margin + 1 - sy) * ip->cols);
    	    	break;
    	case SCROLL_DOWN:
    	    	bcopy(fb, fb + (count * ip->cols),
    	    	    (ip->bottom_margin + 1 - (sy + count)) * ip->cols);
    	    	break;
    	case SCROLL_RIGHT:
    	    	bcopy(fb+sx, fb+sx+count, ip->cols - (sx + count));
    	    	break;
    	case SCROLL_LEFT:
    	    	bcopy(fb+sx, fb+sx-count, ip->cols - sx);
    	    	break;
    	}

    	SetTextPlane(ba, 0x01);

    	switch (dir) {
    	case SCROLL_UP:
    	    	bcopy(fb, fb - (count * ip->cols), 
    	    	    (ip->bottom_margin + 1 - sy) * ip->cols);
    	    	break;
    	case SCROLL_DOWN:
    	    	bcopy(fb, fb + (count * ip->cols),
    	    	    (ip->bottom_margin + 1 - (sy + count)) * ip->cols);
    	    	break;
    	case SCROLL_RIGHT:
    	    	bcopy(fb+sx, fb+sx+count, ip->cols - (sx + count));
    	    	break;
    	case SCROLL_LEFT:
    	    	bcopy(fb+sx, fb+sx-count, ip->cols - sx);
    	    	break;
    	}
}
#endif /* NGRFCL */
@


1.6
log
@Include <sys/conf.h> from <machine/conf.h> like in other arches.  Changes
to come soon depend on this.
@
text
@d1 1
a1 1
/*	$OpenBSD: ite_cl.c,v 1.5 2002/03/14 01:26:29 millert Exp $	*/
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: ite_cl.c,v 1.4 2000/12/15 17:41:45 espie Exp $	*/
a40 1
#include <sys/conf.h>
d47 1
@


1.4
log
@ITE_INGRF checks needed, from NetBSD.
Reported by Lars Hecking.
@
text
@d1 1
a1 1
/*	$OpenBSD: ite_cl.c,v 1.3 2000/04/28 15:27:07 espie Exp $	*/
d61 7
a67 7
void cl_init __P((struct ite_softc *ip));
void cl_cursor __P((struct ite_softc *ip, int flag));
void cl_deinit __P((struct ite_softc *ip));
void cl_putc __P((struct ite_softc *ip, int c, int dy, int dx, int mode));
void cl_clear __P((struct ite_softc *ip, int sy, int sx, int h, int w));
void cl_scroll __P((struct ite_softc *ip, int sy, int sx, int count,
    int dir));
@


1.4.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ite_cl.c,v 1.4 2000/12/15 17:41:45 espie Exp $	*/
d61 7
a67 7
void cl_init(struct ite_softc *ip);
void cl_cursor(struct ite_softc *ip, int flag);
void cl_deinit(struct ite_softc *ip);
void cl_putc(struct ite_softc *ip, int c, int dy, int dx, int mode);
void cl_clear(struct ite_softc *ip, int sy, int sx, int h, int w);
void cl_scroll(struct ite_softc *ip, int sy, int sx, int count,
    int dir);
@


1.4.6.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ite_cl.c,v 1.4.6.1 2002/06/11 03:34:58 art Exp $	*/
d41 1
a47 1
#include <machine/conf.h>
@


1.4.6.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD: ite_cl.c,v 1.4.6.2 2002/10/29 00:28:01 art Exp $	*/
@


1.3
log
@Nicer ite3 console.
- sanitize the RGB swapping code,
- add limited color support, ala old vt220,
- nicer color scheme (whitish text, white bold, blue italic, red cursor...)
@
text
@d1 2
a2 2
/*	$OpenBSD: ite_cl.c,v 1.2 1996/05/02 06:44:11 niklas Exp $	*/
/*	$NetBSD: ite_cl.c,v 1.2 1996/04/21 21:11:57 veego Exp $	*/
d164 3
d216 3
d239 3
@


1.2
log
@Sync with NetBSD 9600430.  The port has gone over a major -Wall treat
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d164 1
d169 20
d194 1
a194 1
	*cp = (unsigned char) attr;
@


1.2.16.1
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 2
a2 2
/*	$OpenBSD: ite_cl.c,v 1.4 2000/12/15 17:41:45 espie Exp $	*/
/*	$NetBSD: ite_cl.c,v 1.3.2.1 1999/06/28 23:22:17 perry Exp $	*/
a163 4
	if (ip->flags & ITE_INGRF)
		return;

#if 0
a167 20
#endif
	attr = 2;
	switch (mode & (ATTR_UL | ATTR_BLINK)) {
	case 0:
		break;
        case ATTR_UL:
		attr += 2;
		break;
	case ATTR_BLINK:
		attr += 4;
		break;
	case ATTR_BLINK | ATTR_UL:
		attr += 7;
		break;
	}
	if (mode & ATTR_BOLD)
		attr++;

	if (mode & ATTR_INV)
		attr <<= 4;
d173 1
a173 1
	*cp = attr;
a191 3
	if (ip->flags & ITE_INGRF)
		return;

a211 3

	if (ip->flags & ITE_INGRF)
		return;
@


1.2.16.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d61 7
a67 7
void cl_init(struct ite_softc *ip);
void cl_cursor(struct ite_softc *ip, int flag);
void cl_deinit(struct ite_softc *ip);
void cl_putc(struct ite_softc *ip, int c, int dy, int dx, int mode);
void cl_clear(struct ite_softc *ip, int sy, int sx, int h, int w);
void cl_scroll(struct ite_softc *ip, int sy, int sx, int count,
    int dir);
@


1.2.16.3
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: ite_cl.c,v 1.2.16.2 2002/03/28 10:06:14 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
