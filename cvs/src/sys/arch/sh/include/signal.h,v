head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.6.0.12
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.14
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.6
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.10
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.20
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.18
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.16
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.12
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.14
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.10
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.8
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.6
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	SH_20061006:1.1.1.1
	miod:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.05.10.18.39.47;	author deraadt;	state Exp;
branches;
next	1.6;
commitid	qfOifNidEGDB2jL1;

1.6
date	2012.12.02.07.03.31;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2012.04.27.17.39.47;	author pirofti;	state Exp;
branches;
next	1.4;

1.4
date	2012.04.13.18.09.01;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.21.18.17.28;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2007.03.02.06.11.54;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.06.21.02.55;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.10.06.21.02.55;	author miod;	state Exp;
branches;
next	;


desc
@@


1.7
log
@SROP mitigation.  sendsig() stores a (per-process ^ &sigcontext) cookie
inside the sigcontext.  sigreturn(2) checks syscall entry was from the
exact PC addr in the (per-process ASLR) sigtramp, verifies the cookie,
and clears it to prevent sigcontext reuse.
not yet tested on landisk, sparc, *88k, socppc.
ok kettenis
@
text
@/*	$OpenBSD: signal.h,v 1.6 2012/12/02 07:03:31 guenther Exp $	*/
/*	$NetBSD: signal.h,v 1.12 2005/12/11 12:18:58 christos Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1989, 1991 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)signal.h	7.16 (Berkeley) 3/17/91
 */

#ifndef _SH_SIGNAL_H_
#define	_SH_SIGNAL_H_

#include <sys/cdefs.h>

typedef int sig_atomic_t;

#if __BSD_VISIBLE || __XPG_VISIBLE >= 420

/*
 * Information pushed on stack when a signal is delivered.
 * This is used by the kernel to restore state following
 * execution of the signal handler.  It is also made available
 * to the handler to allow it to restore state properly if
 * a non-standard exit is performed.
 */
struct sigcontext {
	int	sc_reg[21];
	int	sc_fpreg[34];

	long	sc_cookie;

	int	sc_expevt;	/* XXX should be above */
	int	sc_err;

	int	sc_mask;	/* signal mask to restore */
};

#endif	/* __BSD_VISIBLE || __XPG_VISIBLE >= 420 */
#endif	/* !_SH_SIGNAL_H_ */
@


1.6
log
@Determine whether we're currently on the alternative signal stack
dynamically, by comparing the stack pointer against the altstack
base and size, so that you get the correct answer if you longjmp
out of the signal handler, as tested by regress/sys/kern/stackjmp/.
Also, fix alt stack handling on vax, where it was completely broken.

Testing and corrections by miod@@, krw@@, tobiasu@@, pirofti@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.5 2012/04/27 17:39:47 pirofti Exp $	*/
d55 1
a55 1
	int	__sc_unused;
d60 1
a60 1
	unsigned int sc_mask;	/* signal mask to restore */
@


1.5
log
@Remove reg.h inclusion.

Missed by miod@@ in his previous commit. Now groff should build.

Okay miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.4 2012/04/13 18:09:01 miod Exp $	*/
d55 1
a55 1
	int	sc_onstack;	/* sigstack state to restore */
@


1.4
log
@Avoid horrible namespace pollution of <machine/signal.h> pulling in
<machine/reg.h> for the needs of struct sigcontext; said struct ought to
only use simple integer types.
Fixes build of groff on landisk.

ok pirofti@@ (who had a similar diff)
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.3 2011/11/21 18:17:28 deraadt Exp $	*/
a42 1
#include <sh/reg.h>
@


1.3
log
@only pull reg.h in when __BSD_VISIBLE || __XPG_VISIBLE >= 420, as
on m88k, which is another architecture with structs visible inside
sigcontext. for pirofti
ok miod guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.2 2007/03/02 06:11:54 miod Exp $	*/
d53 2
a54 2
	struct reg sc_reg;
	struct fpreg sc_fpreg;
@


1.2
log
@Move landisk to hardware floating point. At the moment the FPU context is
always saved upon context switches, as FPU registers are heavily used for
long long computations (don't ask). Gcc default to -m4.

Credits to drahn@@ otto@@ and deraadt@@ for feedback and help testing.

Upgrade procedure if you don't want to use the damn snapshots:
- build and install new kernel, reboot off it
- build new gcc, do not install it yet
- make includes
- install new gcc
- build and install lib/csu and lib/libc
- make build
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.1.1.1 2006/10/06 21:02:55 miod Exp $	*/
a38 1
#include <sh/reg.h>
d43 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d39 1
d52 2
a53 19
	int	sc_spc;
	int	sc_ssr;
	int	sc_pr;
	int	sc_r14;
	int	sc_r13;
	int	sc_r12;
	int	sc_r11;
	int	sc_r10;
	int	sc_r9;
	int	sc_r8;
	int	sc_r7;
	int	sc_r6;
	int	sc_r5;
	int	sc_r4;
	int	sc_r3;
	int	sc_r2;
	int	sc_r1;
	int	sc_r0;
	int	sc_r15;
@


1.1.1.1
log
@Preliminary bits for SuperH-based ports, based on NetBSD/sh3 codebase with
minor changes.
@
text
@@
