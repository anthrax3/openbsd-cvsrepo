head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.44
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.40
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.38
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.30
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.34
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.32
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.28
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.26
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.24
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.22
	OPENBSD_5_0:1.1.1.1.0.20
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.18
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.14
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.10
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.8
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.6
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.4
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	SH_20061006:1.1.1.1
	miod:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2006.10.06.21.02.55;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.10.06.21.02.55;	author miod;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/*	$OpenBSD$	*/
/*	$NetBSD: sh_opcode.h,v 1.3 2002/04/28 17:10:36 uch Exp $ */

typedef union {
	unsigned word;

#if _BYTE_ORDER == BIG_ENDIAN
	struct {
		unsigned op: 16;
	} oType;

	struct {
		unsigned op1: 4;
		unsigned n: 4;
		unsigned op2: 8;
	} nType;

	struct {
		unsigned op1: 4;
		unsigned m: 4;
		unsigned op2: 8;
	} mType;

	struct {
		unsigned op1: 4;
		unsigned n: 4;
		unsigned m: 4;
		unsigned op2: 4;
	} nmType;

	struct {
		unsigned op: 8;
		unsigned m: 4;
		unsigned d: 4;
	} mdType;

	struct {
		unsigned op: 8;
		unsigned n: 4;
		unsigned d: 4;
	} nd4Type;

	struct {
		unsigned op: 4;
		unsigned n: 4;
		unsigned m: 4;
		unsigned d: 4;
	} nmdType;

	struct {
		unsigned op: 8;
		unsigned d: 8;
	} dType;

	struct {
		unsigned op: 4;
		unsigned d: 12;
	} d12Type;

	struct {
		unsigned op: 4;
		unsigned n: 4;
		unsigned d: 8;
	} nd8Type;

	struct {
		unsigned op: 8;
		unsigned i: 8;
	} iType;

	struct {
		unsigned op: 4;
		unsigned n: 4;
		unsigned i: 8;
	} niType;
#endif
#if _BYTE_ORDER == LITTLE_ENDIAN
struct {
		unsigned op: 16;
	} oType;

	struct {
		unsigned op2: 8;
		unsigned n: 4;
		unsigned op1: 4;
	} nType;

	struct {
		unsigned op2: 8;
		unsigned m: 4;
		unsigned op1: 4;
	} mType;

	struct {
		unsigned op2: 4;
		unsigned m: 4;
		unsigned n: 4;
		unsigned op1: 4;
	} nmType;

	struct {
		unsigned d: 4;
		unsigned m: 4;
		unsigned op: 8;
	} mdType;

	struct {
		unsigned d: 4;
		unsigned n: 4;
		unsigned op: 8;
	} nd4Type;

	struct {
		unsigned d: 4;
		unsigned m: 4;
		unsigned n: 4;
		unsigned op: 4;
	} nmdType;

	struct {
		unsigned d: 8;
		unsigned op: 8;
	} dType;

	struct {
		unsigned d: 12;
		unsigned op: 4;
	} d12Type;

	struct {
		unsigned d: 8;
		unsigned n: 4;
		unsigned op: 4;
	} nd8Type;

	struct {
		unsigned i: 8;
		unsigned op: 8;
	} iType;

	struct {
		unsigned i: 8;
		unsigned n: 4;
		unsigned op: 4;
	} niType;
#endif
} InstFmt;

#define	OP_BF	0x8b
#define	OP_BFS	0x8f
#define	OP_BT	0x89
#define	OP_BTS	0x8d
#define	OP_BRA	0xa
#define	OP_BSR	0xb
#define	OP1_BRAF	0x0
#define	OP2_BRAF	0x23
#define	OP1_BSRF	0x0
#define	OP2_BSRF	0x03
#define	OP1_JMP	0x4
#define	OP2_JMP	0x2b
#define	OP1_JSR	0x4
#define	OP2_JSR	0x0b
#define	OP_RTS	0xffff
@


1.1.1.1
log
@Preliminary bits for SuperH-based ports, based on NetBSD/sh3 codebase with
minor changes.
@
text
@@
