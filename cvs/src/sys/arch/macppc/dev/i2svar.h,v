head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.6
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.22
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.18
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.20
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.12
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.16
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.14
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.10
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.8
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.6
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.4
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.6
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.3.0.12
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.10
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.8
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3;
locks; strict;
comment	@ * @;


1.9
date	2016.09.14.06.12.19;	author ratchov;	state Exp;
branches;
next	1.8;
commitid	pi1a9KN0itEngOc4;

1.8
date	2011.06.07.16.29.51;	author mpi;	state Exp;
branches;
next	1.7;

1.7
date	2011.05.05.18.54.23;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2010.02.26.21.53.43;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.29.00.04.14;	author jakemsr;	state Exp;
branches;
next	1.4;

1.4
date	2008.08.24.23.44.44;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.19.01.07.00;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.31.00.26.07;	author joris;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.26.17.57.20;	author joris;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Remove drain(), query_encoding(), mappage() and get_default_params()
methods from all audio drivers and from the audio_if structure as they
are never called.
@
text
@/*	$OpenBSD: i2svar.h,v 1.7 2011/05/05 18:54:23 jasper Exp $	*/

/*-
 * Copyright (c) 2001,2003 Tsubai Masanari.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#if !defined(I2S_H_INCLUDE)
#define I2S_H_INCLUDE

#define I2S_DMALIST_MAX		32
#define I2S_DMASEG_MAX		NBPG

struct i2s_dma {
	bus_dmamap_t map;
	caddr_t addr;
	bus_dma_segment_t segs[I2S_DMALIST_MAX];
	int nsegs;
	size_t size;
	struct i2s_dma *next;
};

struct i2s_softc {
	struct device sc_dev;
	int sc_flags;
	int sc_node;
	u_int sc_baseaddr;

	void (*sc_ointr)(void *);	/* dma completion intr handler */
	void *sc_oarg;			/* arg for sc_ointr() */
	int sc_opages;			/* # of output pages */

	void (*sc_iintr)(void *);	/* dma completion intr handler */
	void *sc_iarg;			/* arg for sc_iintr() */

	u_int sc_record_source;		/* recording source mask */
	u_int sc_output_mask;		/* output source mask */

	void (*sc_setvolume)(struct i2s_softc *, int, int);
	void (*sc_setbass)(struct i2s_softc *, int);
	void (*sc_settreble)(struct i2s_softc *, int);
	void (*sc_setinput)(struct i2s_softc *, int);

	u_char *sc_reg;
	void *sc_i2c;

	u_int sc_rate;
	u_int sc_vol_l;
	u_int sc_vol_r;
	u_int sc_bass;
	u_int sc_treble;
	u_int sc_mute;

	u_int sc_spkr;			/* amp mute gpio offset */
	u_int sc_hp;			/* headphone mute gpio offset */
	u_int sc_hp_detect;		/* headphone detect gpio */
	u_int sc_hp_active;
	u_int sc_line;			/* line out mute gpio offset */
	u_int sc_line_detect;		/* line detect gpio */
	u_int sc_line_active;
	u_int sc_hw_reset;		/* hw reset gpio */


	bus_dma_tag_t sc_dmat;
	dbdma_regmap_t *sc_odma;
	dbdma_regmap_t *sc_idma;
	struct dbdma_command *sc_odmacmd, *sc_odmap;
	struct dbdma_command *sc_idmacmd, *sc_idmap;
	dbdma_t sc_odbdma, sc_idbdma;

	struct i2s_dma *sc_dmas;
};

void i2s_attach(struct device *, struct i2s_softc *, struct confargs *);
int i2s_intr(void *);
int i2s_open(void *, int);
void i2s_close(void *);
int i2s_set_params(void *, int, int, struct audio_params *, struct audio_params *);
int i2s_round_blocksize(void *, int);
int i2s_halt_output(void *);
int i2s_halt_input(void *);
int i2s_set_port(void *, mixer_ctrl_t *);
int i2s_get_port(void *, mixer_ctrl_t *);
int i2s_query_devinfo(void *, mixer_devinfo_t *);
size_t i2s_round_buffersize(void *, int, size_t);
int i2s_get_props(void *);
int i2s_trigger_output(void *, void *, void *, int, void (*)(void *),
    void *, struct audio_params *);
int i2s_trigger_input(void *, void *, void *, int, void (*)(void *),
    void *, struct audio_params *);
int i2s_set_rate(struct i2s_softc *, int);
void i2s_gpio_init(struct i2s_softc *, int, struct device *);
void *i2s_allocm(void *, int, size_t, int, int);
int deq_reset(struct i2s_softc *);

#endif
@


1.8
log
@Make use of macobio_* methods to manage the i2s GPIOs, remove the customs
gpio_* methods and move the remaining global variables in the softc.

ok ratchov@@, krw@@
@
text
@a98 1
int i2s_query_encoding(void *, struct audio_encoding *);
a99 1
void i2s_get_default_params(struct audio_params *);
a106 1
paddr_t i2s_mappage(void *, void *, off_t, int);
@


1.7
log
@add support for muting the master channel on i2s based cards, this allows the
"mute" key on keyboards to function too.
tested by kettenis on aoa(4) and snapper(4) by me.

from Martin Pieuchot
ok kettenis@@ ratchov@@
@
text
@d1 1
a1 1
/*	$OpenBSD: i2svar.h,v 1.6 2010/02/26 21:53:43 jasper Exp $	*/
d74 10
@


1.6
log
@- remove double cvs id's
@
text
@d1 1
a1 1
/*	$OpenBSD: i2svar.h,v 1.5 2008/10/29 00:04:14 jakemsr Exp $	*/
d73 1
@


1.5
log
@
native default parameters for i2s devices instead of 8kHz
mulaw mono, which few can even do.

"Please just get this in." brad@@
@
text
@d1 1
a1 2
/*	$OpenBSD: i2svar.h,v 1.4 2008/08/24 23:44:44 todd Exp $	*/
/*	$Id: i2svar.h,v 1.4 2008/08/24 23:44:44 todd Exp $	*/
@


1.4
log
@o implement proper volume control table based on chipset docs
o attempt to make record work (but silence for now)
from drahn@@, ok maja@@, drahn@@
@
text
@d1 2
a2 2
/*	$OpenBSD: i2svar.h,v 1.3 2005/11/19 01:07:00 kettenis Exp $	*/
/*	$Id: i2svar.h,v 1.3 2005/11/19 01:07:00 kettenis Exp $	*/
d91 1
@


1.3
log
@oops
@
text
@d1 2
a2 2
/*	$OpenBSD: i2svar.h,v 1.2 2005/10/31 00:26:07 joris Exp $	*/
/*	$Id: i2svar.h,v 1.2 2005/10/31 00:26:07 joris Exp $	*/
d64 1
@


1.2
log
@- add needed bass & treble glue in i2s;
- add support for bass & treble in snapper;

ok drahn@@
@
text
@d1 2
a2 2
/*	$OpenBSD: i2svar.h,v 1.1 2005/10/26 17:57:20 joris Exp $	*/
/*	$Id: i2svar.h,v 1.1 2005/10/26 17:57:20 joris Exp $	*/
d49 1
@


1.1
log
@add an i2s framework, which can be reused in new audio drivers
for macppc, as most modern Apple machines have i2s-based audio.

also let snapper use i2s.c right away;

tested by Antoine Jacoutot, drahn@@ and kettenis@@
"yes, commit!" drahn@@, ok kettenis@@
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$Id: i2svar.h,v 1.1 2005/09/29 15:21:48 makoto Exp $	*/
d61 2
d70 2
@

