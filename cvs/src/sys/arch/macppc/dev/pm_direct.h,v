head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.18
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.16
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.12
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.14
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.6
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.10
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.8
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.4
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.12.0.6
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.4
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.11.0.18
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.16
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.12
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.14
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.10
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.8
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.6
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.4
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.2
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.4
	UBC:1.2.0.6
	UBC_BASE:1.2
	SMP:1.2.0.4
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.13
date	2012.09.02.08.16.40;	author mpi;	state Exp;
branches;
next	1.12;

1.12
date	2011.05.14.12.01.16;	author mpi;	state Exp;
branches;
next	1.11;

1.11
date	2007.02.18.19.33.48;	author gwk;	state Exp;
branches;
next	1.10;

1.10
date	2007.02.12.21.01.11;	author gwk;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.22.22.55.25;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2005.12.10.13.45.38;	author pedro;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.16.12.28.54;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.21.22.07.45;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.16.03.54.48;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.07.15.49.57;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.36;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.03.14.45.37;	author drahn;	state Exp;
branches
	1.2.4.1
	1.2.6.1;
next	1.1;

1.1
date	2001.09.01.15.50.00;	author drahn;	state Exp;
branches;
next	;

1.2.4.1
date	2001.10.31.03.01.15;	author nate;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2002.03.28.10.36.01;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2003.03.27.23.29.46;	author niklas;	state Exp;
branches;
next	1.2.4.4;

1.2.4.4
date	2004.02.19.10.49.03;	author niklas;	state Exp;
branches;
next	;

1.2.6.1
date	2002.06.11.03.36.34;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Bump the buffer size from 32 to 128 bytes, because some responses may
have 120 bytes of data. Diff by briggs@@NetBSD, pointed out by and ok miod@@
@
text
@/*	$OpenBSD: pm_direct.h,v 1.12 2011/05/14 12:01:16 mpi Exp $	*/
/*	$NetBSD: pm_direct.h,v 1.7 2005/01/07 04:59:58 briggs Exp $	*/

/*
 * Copyright (C) 1997 Takashi Hamada
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *  This product includes software developed by Takashi Hamada.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/* From: pm_direct.h 1.0 01/02/97 Takashi Hamada */
#ifndef _PM_DIRECT_H_
#define _PM_DIRECT_H_

/*
 * Public declarations that other routines may need.
 */

/* data structure of the command of the Power Manager */
typedef	struct	{
	short	command;	/* command of the Power Manager 	*/
	short	num_data;	/* number of data			*/
	char	*s_buf;		/* pointer to buffer for sending 	*/
	char	*r_buf;		/* pointer to buffer for receiving	*/
	char	data[128];	/* data buffer (is it too much?)	*/
				/* null command seen w/ 120 data bytes  */
}	PMData;

int	pmgrop(PMData *);
int	pm_adb_op(u_char *, void *, void *, int);
void	pm_adb_restart(void);
void	pm_adb_poweroff(void);
void	pm_intr(void);
void	pm_read_date_time(time_t *);
void	pm_set_date_time(time_t);

struct pmu_battery_info
{
	unsigned int flags;
	unsigned int cur_charge;
	unsigned int max_charge;
	signed   int draw;
	unsigned int voltage;
};

int pm_battery_info(int, struct pmu_battery_info *);

void pm_eject_pcmcia(int);
void pmu_fileserver_mode(int);

/* PMU commands */
#define PMU_RESET_ADB		0x00	/* Reset ADB */
#define PMU_POWER_OFF		0x7e	/* Turn Power off */
#define PMU_RESET_CPU		0xd0	/* Reset CPU */

#define PMU_SET_RTC		0x30	/* Set realtime clock */
#define PMU_READ_RTC		0x38	/* Read realtime clock */

#define PMU_WRITE_PRAM		0x32	/* Write PRAM */
#define PMU_READ_PRAM		0x3a	/* Read PRAM */

#define PMU_WRITE_NVRAM		0x33	/* Write NVRAM */
#define PMU_READ_NVRAM		0x3b	/* Read NVRAM */

#define PMU_EJECT_PCMCIA	0x4c	/* Eject PCMCIA slot */

#define PMU_SET_BRIGHTNESS	0x41	/* Set backlight brightness */
#define PMU_READ_BRIGHTNESS	0xd9	/* Read brightness button position */

#define PMU_POWER_EVENTS        0x8f    /* Send power-event commands to PMU */
#define PMU_SYSTEM_READY        0xdf    /* tell PMU we are awake */

#define PMU_SMART_BATTERY_STATE	0x6f	/* Read battery state */

#define PMU_I2C			0x9a	/* I2C */

/* Bits in PMU interrupt and interrupt mask bytes */
#define PMU_INT_ADB_AUTO	0x04	/* ADB autopoll, when PMU_INT_ADB */
#define PMU_INT_PCEJECT		0x04	/* PC-card eject buttons */
#define PMU_INT_SNDBRT		0x08	/* sound/brightness up/down buttons */
#define PMU_INT_ADB		0x10	/* ADB autopoll or reply data */
#define PMU_INT_BATTERY		0x20
#define PMU_INT_WAKEUP		0x40
#define PMU_INT_TICK		0x80	/* 1-second tick interrupt */
#define PMU_INT_ALL		0xff	/* Mask of all interrupts */

/* Bits to use with the PMU_POWER_CTRL0 command */
#define PMU_POW0_ON		0x80	/* OR this to power ON the device */
#define PMU_POW0_OFF		0x00	/* leave bit 7 to 0 to power it OFF */

/* Bits to use with the PMU_POWER_CTRL command */
#define PMU_POW_ON		0x80	/* OR this to power ON the device */
#define PMU_POW_OFF		0x00	/* leave bit 7 to 0 to power it OFF */
#define PMU_POW_BACKLIGHT	0x01	/* backlight power */
#define PMU_POW_CHARGER		0x02	/* battery charger power */
#define PMU_POW_IRLED		0x04	/* IR led power (on wallstreet) */
#define PMU_POW_MEDIABAY	0x08	/* media bay power (wallstreet/lombard ?) */

/* PMU PMU_POWER_EVENTS commands */
enum {
	PMU_PWR_GET_POWERUP_EVENTS      = 0x00,
	PMU_PWR_SET_POWERUP_EVENTS      = 0x01,
	PMU_PWR_CLR_POWERUP_EVENTS      = 0x02,
	PMU_PWR_GET_WAKEUP_EVENTS       = 0x03,
	PMU_PWR_SET_WAKEUP_EVENTS       = 0x04,
	PMU_PWR_CLR_WAKEUP_EVENTS       = 0x05,
};

/* PMU WAKE ON EVENTS */

#define PMU_WAKE_KEYB		0x01
#define PMU_WAKE_AC_LOSS	0x02
#define PMU_WAKE_AC_CHG		0x04
#define PMU_WAKE_LID		0x08
#define PMU_WAKE_RING		0x10

/* PMU Power Information */

#define PMU_PWR_AC_PRESENT	(1 << 0)
#define PMU_PWR_BATT_PRESENT	(1 << 2)

/* PMU I2C */
#define PMU_I2C_SIMPLE		0x00
#define PMU_I2C_NORMAL		0x01
#define PMU_I2C_COMBINED	0x02

#endif
@


1.12
log
@pm_* methods are always attached to a PMU, no need to check for hardware.

ok miod@@
@
text
@d1 2
a2 2
/*	$OpenBSD: pm_direct.h,v 1.11 2007/02/18 19:33:48 gwk Exp $	*/
/*	$NetBSD: pm_direct.h,v 1.5 1999/07/12 15:54:55 tsubai Exp $	*/
d47 2
a48 1
	char	data[32];	/* data buffer (is it too much?)	*/
@


1.11
log
@Correct yo-yo shutdowns:
Apparently some machines don't detect a clean (i.e. software initiated)
shutdown; and ignore the 'wake on AC loss' bit, meaning they wake up
immediatly after being told to shutdown e.g. via shutdown -hp.

So now we continue preserve the wake on AC loss behaivour, howerver if we
initiate a clean shutdown we clear this bit so that it the machine does not
immediately power back up again.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.10 2007/02/12 21:01:11 gwk Exp $	*/
a56 1
void	pm_setup_adb(void);
@


1.10
log
@Add cuda_fileserver_mode() and pmu_fileserver_mode() that enable the wake
on AC loss feature of the power management IC. Make this the default
behaviour when booting OpenBSD from now on.

This will only affect machines that have the power suddenly cut, Performing
a shutdown requesting power down will clear this mode and its then possible
to remove the power cord, and plug it back in without the machine comming
back on automatically.

Tested by myself, drahn
ok kettenis, drahn.
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.9 2005/12/22 22:55:25 miod Exp $	*/
d71 1
a71 1
void pmu_fileserver_mode(void);
@


1.9
log
@Remove orphaned adb/pmu stuff; ok hshoexer@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.8 2005/12/10 13:45:38 pedro Exp $	*/
d71 1
d130 8
@


1.8
log
@Just poll for PMU_INT_ADB_AUTO and PMU_INT_ADB interrupts when resetting
the device, should fix a huge delay attaching adb(4) on some boxes,
thanks to everyone who tested, okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.7 2005/11/16 12:28:54 kettenis Exp $	*/
a53 1
void	pm_check_adb_devices(int);
a69 5
int pm_read_nvram(int);
void pm_write_nvram(int, int);
int pm_read_brightness(void);
void pm_set_brightness(int);
void pm_init_brightness(void);
@


1.7
log
@Add support for the I2C controller on via-pmu.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.6 2005/10/21 22:07:45 kettenis Exp $	*/
d79 1
d112 1
@


1.6
log
@Clean up RTC code.
ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.5 2003/10/16 03:54:48 deraadt Exp $	*/
d101 2
d138 5
@


1.5
log
@spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.4 2002/06/07 15:49:57 miod Exp $	*/
d56 2
a57 2
void	pm_read_date_time(u_long *);
void	pm_set_date_time(u_long);
@


1.4
log
@Hand-editing diff file to remove a few chunks that you don't want to
commit now sucks. Especially when you accidentally delete an important
chunk.
Put a few more pm_xxx() prototypes there to unbreak compilation, 10x maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.3 2002/03/14 01:26:36 millert Exp $	*/
d137 1
a137 1
#endif 
@


1.3
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.2 2001/10/03 14:45:37 drahn Exp $	*/
d50 9
a58 5
int pmgrop(PMData *);
void pm_adb_restart(void);
void pm_adb_poweroff(void);
void pm_read_date_time(u_long *);
void pm_set_date_time(u_long);
@


1.2
log
@apm support for macppc. This is not fully implemented, sleep modes
and power event are not handled, however it is enough support
to poll the battery/AC/charging states of the system.
Code by Alexander Guy.
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.1 2001/09/01 15:50:00 drahn Exp $	*/
d50 5
a54 5
int pmgrop __P((PMData *));
void pm_adb_restart __P((void));
void pm_adb_poweroff __P((void));
void pm_read_date_time __P((u_long *));
void pm_set_date_time __P((u_long));
d65 1
a65 1
int pm_battery_info __P((int, struct pmu_battery_info *));
d67 6
a72 6
int pm_read_nvram __P((int));
void pm_write_nvram __P((int, int));
int pm_read_brightness __P((void));
void pm_set_brightness __P((int));
void pm_init_brightness __P((void));
void pm_eject_pcmcia __P((int));
@


1.2.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.2 2001/10/03 14:45:37 drahn Exp $	*/
d50 5
a54 9
int	pmgrop(PMData *);
int	pm_adb_op(u_char *, void *, void *, int);
void	pm_adb_restart(void);
void	pm_adb_poweroff(void);
void	pm_check_adb_devices(int);
void	pm_intr(void);
void	pm_read_date_time(u_long *);
void	pm_set_date_time(u_long);
void	pm_setup_adb(void);
d65 1
a65 1
int pm_battery_info(int, struct pmu_battery_info *);
d67 6
a72 6
int pm_read_nvram(int);
void pm_write_nvram(int, int);
int pm_read_brightness(void);
void pm_set_brightness(int);
void pm_init_brightness(void);
void pm_eject_pcmcia(int);
@


1.2.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.2.4.2
log
@Merge in -current from about a week ago
@
text
@d50 5
a54 5
int pmgrop(PMData *);
void pm_adb_restart(void);
void pm_adb_poweroff(void);
void pm_read_date_time(u_long *);
void pm_set_date_time(u_long);
d65 1
a65 1
int pm_battery_info(int, struct pmu_battery_info *);
d67 6
a72 6
int pm_read_nvram(int);
void pm_write_nvram(int, int);
int pm_read_brightness(void);
void pm_set_brightness(int);
void pm_init_brightness(void);
void pm_eject_pcmcia(int);
@


1.2.4.3
log
@Sync the SMP branch with 3.3
@
text
@d50 5
a54 9
int	pmgrop(PMData *);
int	pm_adb_op(u_char *, void *, void *, int);
void	pm_adb_restart(void);
void	pm_adb_poweroff(void);
void	pm_check_adb_devices(int);
void	pm_intr(void);
void	pm_read_date_time(u_long *);
void	pm_set_date_time(u_long);
void	pm_setup_adb(void);
@


1.2.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d137 1
a137 1
#endif
@


1.1
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/mac to macppc/dev
@
text
@d1 1
a1 1
/*	$OpenBSD: pm_direct.h,v 1.3 2001/07/04 08:38:52 niklas Exp $	*/
d34 2
d55 12
d95 2
d128 6
@

