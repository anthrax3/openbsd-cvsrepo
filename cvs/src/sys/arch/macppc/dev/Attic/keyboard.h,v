head	1.9;
access;
symbols
	OPENBSD_4_3:1.8.0.24
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.22
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.20
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.18
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.16
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.14
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.12
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.10
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.8
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.8
	UBC:1.1.0.6
	UBC_BASE:1.1
	SMP:1.1.0.4
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2008.07.16.16.34.34;	author miod;	state dead;
branches;
next	1.8;

1.8
date	2002.05.09.09.56.57;	author maja;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.30.01.21.56;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.29.23.07.28;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.29.15.16.44;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.28.13.55.58;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.27.22.06.11;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.27.21.48.12;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.01.15.50.00;	author drahn;	state Exp;
branches
	1.1.4.1
	1.1.6.1;
next	;

1.1.4.1
date	2001.10.31.03.01.15;	author nate;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.03.27.23.29.46;	author niklas;	state Exp;
branches;
next	;

1.1.6.1
date	2002.06.11.03.36.33;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@This file is long unused.
@
text
@/*	$OpenBSD: keyboard.h,v 1.8 2002/05/09 09:56:57 maja Exp $	*/
/*	$NetBSD: keyboard.h,v 1.1 1998/05/15 10:15:54 tsubai Exp $	*/

/*-
 * Copyright (C) 1993	Allen K. Briggs, Chris P. Caputo,
 *			Michael L. Finch, Bradley A. Grantham, and
 *			Lawrence A. Kesteloot
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the Alice Group.
 * 4. The names of the Alice Group or any of its members may not be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE ALICE GROUP ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE ALICE GROUP BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#define ADBK_LEFT	0x3B
#define ADBK_RIGHT	0x3C
#define ADBK_UP		0x3E
#define ADBK_DOWN	0x3D
#define ADBK_PGUP	0x74
#define ADBK_PGDN	0x79
#define ADBK_HOME	0x73
#define ADBK_END	0x77
#define ADBK_CONTROL	0x36
#define ADBK_FLOWER	0x37
#define ADBK_SHIFT	0x38
#define ADBK_CAPSLOCK	0x39
#define ADBK_OPTION	0x3A
#define ADBK_F		0x03
#define ADBK_O		0x1F
#define ADBK_P		0x23
#define ADBK_Q		0x0C
#define ADBK_V		0x09
#define ADBK_1		0x12
#define ADBK_2		0x13
#define ADBK_3		0x14
#define ADBK_4		0x15
#define ADBK_5		0x17
#define ADBK_6		0x16
#define ADBK_7		0x1A
#define ADBK_8		0x1C
#define ADBK_9		0x19
#define ADBK_0		0x1D

#define ADBK_KEYVAL(key)	((key) & 0x7f)
#define ADBK_PRESS(key)		(((key) & 0x80) == 0)
#define ADBK_KEYDOWN(key)	(key)
#define ADBK_KEYUP(key)		((key) | 0x80)
#define ADBK_MODIFIER(key)	((((key) & 0x7f) == ADBK_SHIFT) || \
				 (((key) & 0x7f) == ADBK_CONTROL) || \
				 (((key) & 0x7f) == ADBK_FLOWER) || \
				 (((key) & 0x7f) == ADBK_OPTION))

#ifndef KEYBOARD_ARRAY
extern unsigned char keyboard[128][4];
#else
unsigned char keyboard[128][4] = {
	  /* Scan code      Normal     Shifted     Controlled   XT */
	{ /*   0x00, */       'a',       'A',         0x01,	 30 },
	{ /*   0x01, */       's',       'S',         0x13,	 31 },
	{ /*   0x02, */       'd',       'D',         0x04,	 32 },
	{ /*   0x03, */       'f',       'F',         0x06,	 33 },
	{ /*   0x04, */       'h',       'H',         0x08,	 35 },
	{ /*   0x05, */       'g',       'G',         0x07,	 34 },
	{ /*   0x06, */       'z',       'Z',         0x1A,	 44 },
	{ /*   0x07, */       'x',       'X',         0x18,	 45 },
	{ /*   0x08, */       'c',       'C',         0x03,	 46 },
	{ /*   0x09, */       'v',       'V',         0x16,	 47 },
#ifdef FIX_SV_X_KBDBUG
	{ /*   0x0A, */      0x00,      0x00,         0x00,	 41 },
#else
	{ /*   0x0A, */      0x00,      0x00,         0x00,	 86 },
#endif
	{ /*   0x0B, */       'b',       'B',         0x02,	 48 },
	{ /*   0x0C, */       'q',       'Q',         0x11,	 16 },
	{ /*   0x0D, */       'w',       'W',         0x17,	 17 },
	{ /*   0x0E, */       'e',       'E',         0x05,	 18 },
	{ /*   0x0F, */       'r',       'R',         0x12,	 19 },
	{ /*   0x10, */       'y',       'Y',         0x19,	 21 },
	{ /*   0x11, */       't',       'T',         0x14,	 20 },
	{ /*   0x12, */       '1',       '!',         0x00,	  2 },
	{ /*   0x13, */       '2',       '@@',         0x00,	  3 },
	{ /*   0x14, */       '3',       '#',         0x00,	  4 },
	{ /*   0x15, */       '4',       '$',         0x00,	  5 },
	{ /*   0x16, */       '6',       '^',         0x1E,	  7 },
	{ /*   0x17, */       '5',       '%',         0x00,	  6 },
	{ /*   0x18, */       '=',       '+',         0x00,	 13 },
	{ /*   0x19, */       '9',       '(',         0x00,	 10 },
	{ /*   0x1A, */       '7',       '&',         0x00,	  8 },
	{ /*   0x1B, */       '-',       '_',         0x1F,	 12 },
	{ /*   0x1C, */       '8',       '*',         0x00,	  9 },
	{ /*   0x1D, */       '0',       ')',         0x00,	 11 },
	{ /*   0x1E, */       ']',       '}',         0x1D,	 27 },
	{ /*   0x1F, */       'o',       'O',         0x0F,	 24 },
	{ /*   0x20, */       'u',       'U',         0x15,	 22 },
	{ /*   0x21, */       '[',       '{',         0x1B,	 26 },
	{ /*   0x22, */       'i',       'I',         0x09,	 23 },
	{ /*   0x23, */       'p',       'P',         0x10,	 25 },
	{ /*   0x24, */      0x0D,      0x0D,         0x0D,	 28 },
	{ /*   0x25, */       'l',       'L',         0x0C,	 38 },
	{ /*   0x26, */       'j',       'J',         0x0A,	 36 },
	{ /*   0x27, */       '\'',      '"',         0x00,	 40 },
	{ /*   0x28, */       'k',       'K',         0x0B,	 37 },
	{ /*   0x29, */       ';',       ':',         0x00,	 39 },
	{ /*   0x2A, */      '\\',       '|',         0x1C,	 43 },
	{ /*   0x2B, */       ',',       '<',         0x00,	 51 },
	{ /*   0x2C, */       '/',       '?',         0x00,	 53 },
	{ /*   0x2D, */       'n',       'N',         0x0E,	 49 },
	{ /*   0x2E, */       'm',       'M',         0x0D,	 50 },
	{ /*   0x2F, */       '.',       '>',         0x00,	 52 },
	{ /*   0x30, */      0x09,      0x09,         0x09,	 15 },
	{ /*   0x31, */       ' ',       ' ',         0x00,	 57 },
#ifdef FIX_SV_X_KBDBUG
	{ /*   0x32, */       '`',       '~',         0x00,	 86 },
#else
	{ /*   0x32, */       '`',       '~',         0x00,	 41 },
#endif
	{ /*   0x33, */      0x7F,      0x7F,         0x7F,	211 }, /* Delete */
	{ /*   0x34, */      0x00,      0x00,         0x00,	105 }, /* MODE/KP_Enter */
	{ /*   0x35, */      0x1B,      0x1B,         0x1B,	  1 },
	{ /*   0x36, */      0x00,      0x00,         0x00,	 29 },
	{ /*   0x37, */      0x00,      0x00,         0x00,	219 },
	{ /*   0x38, */      0x00,      0x00,         0x00,	 42 },
	{ /*   0x39, */      0x00,      0x00,         0x00,	 58 },
	{ /*   0x3A, */      0x00,      0x00,         0x00,	 56 }, /* L Alt */
	{ /*   0x3B, */       'h',      0x00,         0x00,	203 },  /* Left */
	{ /*   0x3C, */       'l',      0x00,         0x00,	205 },  /* Right */
	{ /*   0x3D, */       'j',      0x00,         0x00,	208 },  /* Down */
	{ /*   0x3E, */       'k',      0x00,         0x00,	200 },  /* Up */
	{ /*   0x3F, */      0x00,      0x00,         0x00,	  0 }, /* Fn */
	{ /*   0x40, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x41, */       '.',       '.',         0x00,	 83 },
	{ /*   0x42, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x43, */       '*',       '*',         0x00,	 55 },
	{ /*   0x44, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x45, */       '+',       '+',         0x00,	 78 },
	{ /*   0x46, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x47, */      0x00,      0x00,         0x00,	 69 },
	{ /*   0x48, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x49, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4A, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4B, */       '/',       '/',         0x00,	181 },
	{ /*   0x4C, */      0x0D,      0x0D,         0x0D,	156 },
	{ /*   0x4D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4E, */       '-',       '-',         0x00,	 74 },
	{ /*   0x4F, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x50, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x51, */       '=',       '=',         0x00,	118 },
	{ /*   0x52, */       '0',       '0',         0x00,	 82 },
	{ /*   0x53, */       '1',       '1',         0x00,	 79 },
	{ /*   0x54, */       '2',       '2',         0x00,	 80 },
	{ /*   0x55, */       '3',       '3',         0x00,	 81 },
	{ /*   0x56, */       '4',       '4',         0x00,	 75 },
	{ /*   0x57, */       '5',       '5',         0x00,	 76 },
	{ /*   0x58, */       '6',       '6',         0x00,	 77 },
	{ /*   0x59, */       '7',       '7',         0x00,	 71 },
	{ /*   0x5A, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5B, */       '8',       '8',         0x00,	 72 },
	{ /*   0x5C, */       '9',       '9',         0x00,	 73 },
	{ /*   0x5D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5F, */      0x00,      0x00,         0x00,	 51 },
	{ /*   0x60, */      0x00,      0x00,         0x00,	 63 }, /* F5 */
	{ /*   0x61, */      0x00,      0x00,         0x00,	 64 }, /* F6 */
	{ /*   0x62, */      0x00,      0x00,         0x00,	 65 }, /* F7 */
	{ /*   0x63, */      0x00,      0x00,         0x00,	 61 }, /* F3 */
	{ /*   0x64, */      0x00,      0x00,         0x00,	 66 }, /* F8 */
	{ /*   0x65, */      0x00,      0x00,         0x00,	 67 }, /* F9 */
	{ /*   0x66, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x67, */      0x00,      0x00,         0x00,	 87 }, /* F11 */
	{ /*   0x68, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x69, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6A, */      0x00,      0x00,         0x00,	156 },
	{ /*   0x6B, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6C, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6D, */      0x00,      0x00,         0x00,	 68 }, /* F10 */
	{ /*   0x6E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6F, */      0x00,      0x00,         0x00,	 88 }, /* F12 */
	{ /*   0x70, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x71, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x72, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x73, */      0x00,      0x00,         0x00,	199 },
	{ /*   0x74, */      0x00,      0x00,         0x00,	201 },
	{ /*   0x75, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x76, */      0x00,      0x00,         0x00,	 62 }, /* F4 */
	{ /*   0x77, */      0x00,      0x00,         0x00,	207 },
	{ /*   0x78, */      0x00,      0x00,         0x00,	 60 }, /* F2 */
	{ /*   0x79, */      0x00,      0x00,         0x00,	209 },
	{ /*   0x7A, */      0x00,      0x00,         0x00,	 59 }, /* F1 */
	{ /*   0x7B, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7C, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7F, */      0x00,      0x00,         0x00,	  0 } /* pwr */
};
#endif /* KEYBOARD_ARRAY */
@


1.8
log
@Make the paragraph degree key on a swedish iBook keyboard work in X.
The only problem is that its switched with the less greater key.
Add an option FIX_SV_X_KBDBUG to fix that. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.7 2002/03/30 01:21:56 drahn Exp $	*/
@


1.7
log
@Use the extended keycodes to get real delete/pgup/pgdn/home/end.
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.6 2002/03/29 23:07:28 drahn Exp $	*/
d90 5
a94 1
	{ /*   0x0A, */      0x00,      0x00,         0x00,	  0 },
d134 3
d138 1
@


1.6
log
@add numlock, pgup, pgdn, home, end.
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.5 2002/03/29 15:16:44 drahn Exp $	*/
d131 1
a131 1
	{ /*   0x33, */      0x7F,      0x7F,         0x7F,	 14 }, /* Delete */
d195 2
a196 2
	{ /*   0x73, */      0x00,      0x00,         0x00,	 71 },
	{ /*   0x74, */      0x00,      0x00,         0x00,	 73 },
d199 1
a199 1
	{ /*   0x77, */      0x00,      0x00,         0x00,	 79 },
d201 1
a201 1
	{ /*   0x79, */      0x00,      0x00,         0x00,	 81 },
@


1.5
log
@Change lower enter key to be 'Mode_Switch' like it was before.
Add note for power button (not currently translated).
Meta_L vs Super_L is still an issue (CMD/Win key) o
CMD/Win key is Super_L not Meta_L, usb has this too.
Changing to RAW will change swap Meta and Alt (to what is printed on
key, not PC layout).
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.4 2002/03/28 13:55:58 drahn Exp $	*/
d119 1
a119 1
	{ /*   0x27, */       '\'',       '"',         0x00,	 40 },
d151 1
a151 1
	{ /*   0x47, */      0x00,      0x00,         0x00,	  0 },
d195 2
a196 2
	{ /*   0x73, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x74, */      0x00,      0x00,         0x00,	  0 },
d199 1
a199 1
	{ /*   0x77, */      0x00,      0x00,         0x00,	  0 },
d201 1
a201 1
	{ /*   0x79, */      0x00,      0x00,         0x00,	  0 },
@


1.4
log
@All US keys beside KPEQ and Mode_switch? (enter key on laptops) fixed.
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.3 2002/03/27 22:06:11 drahn Exp $	*/
d132 1
a132 1
	{ /*   0x34, */      0x00,      0x00,         0x00,	108 }, /* MODE/KP_Enter */
d207 1
a207 1
	{ /*   0x7F, */      0x00,      0x00,         0x00,	  0 }
@


1.3
log
@Indicate which keys translations are missing.
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.2 2002/03/27 21:48:12 drahn Exp $	*/
d132 1
a132 1
	{ /*   0x34, */      0x00,      0x00,         0x00,	  0 }, /* MODE/KP_Enter */
d135 1
a135 1
	{ /*   0x37, */      0x00,      0x00,         0x00,	 56 },
d138 1
a138 1
	{ /*   0x3A, */      0x00,      0x00,         0x00,	  0 }, /* L Alt */
d161 1
a161 1
	{ /*   0x51, */       '=',       '=',         0x00,	253 }, /*XT?*/
d176 6
a181 6
	{ /*   0x60, */      0x00,      0x00,         0x00,	  0 }, /* F5 */
	{ /*   0x61, */      0x00,      0x00,         0x00,	  0 }, /* F6 */
	{ /*   0x62, */      0x00,      0x00,         0x00,	  0 }, /* F7 */
	{ /*   0x63, */      0x00,      0x00,         0x00,	  0 }, /* F3 */
	{ /*   0x64, */      0x00,      0x00,         0x00,	  0 }, /* F8 */
	{ /*   0x65, */      0x00,      0x00,         0x00,	  0 }, /* F9 */
d183 1
a183 1
	{ /*   0x67, */      0x00,      0x00,         0x00,	  0 }, /* F11 */
d189 1
a189 1
	{ /*   0x6D, */      0x00,      0x00,         0x00,	  0 }, /* F10 */
d191 1
a191 1
	{ /*   0x6F, */      0x00,      0x00,         0x00,	  0 }, /* F12 */
d198 1
a198 1
	{ /*   0x76, */      0x00,      0x00,         0x00,	  0 }, /* F4 */
d200 1
a200 1
	{ /*   0x78, */      0x00,      0x00,         0x00,	  0 }, /* F2 */
d202 1
a202 1
	{ /*   0x7A, */      0x00,      0x00,         0x00,	  0 }, /* F1 */
@


1.2
log
@add WSDISPLAY_COMPAT_RAWKBD support for macppc, not complete yet, Fx keys
are missing in translation table. Not enabled yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.1 2001/09/01 15:50:00 drahn Exp $	*/
d132 1
a132 1
	{ /*   0x34, */      0x00,      0x00,         0x00,	  0 },
d138 1
a138 1
	{ /*   0x3A, */      0x00,      0x00,         0x00,	  0 },
d143 1
a143 1
	{ /*   0x3F, */      0x00,      0x00,         0x00,	  0 },
d176 6
a181 6
	{ /*   0x60, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x61, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x62, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x63, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x64, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x65, */      0x00,      0x00,         0x00,	  0 },
d183 1
a183 1
	{ /*   0x67, */      0x00,      0x00,         0x00,	  0 },
d189 1
a189 1
	{ /*   0x6D, */      0x00,      0x00,         0x00,	  0 },
d191 1
a191 1
	{ /*   0x6F, */      0x00,      0x00,         0x00,	  0 },
d198 1
a198 1
	{ /*   0x76, */      0x00,      0x00,         0x00,	  0 },
d200 1
a200 1
	{ /*   0x78, */      0x00,      0x00,         0x00,	  0 },
d202 1
a202 1
	{ /*   0x7A, */      0x00,      0x00,         0x00,	  0 },
@


1.1
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/mac to macppc/dev
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.2 2001/07/04 08:38:51 niklas Exp $	*/
d76 1
a76 1
extern unsigned char keyboard[128][3];
d78 130
a207 130
unsigned char keyboard[128][3] = {
		/* Scan code      Normal     Shifted     Controlled */
	{	/*   0x00, */       'a',       'A',         0x01 },
	{	/*   0x01, */       's',       'S',         0x13 },
	{	/*   0x02, */       'd',       'D',         0x04 },
	{	/*   0x03, */       'f',       'F',         0x06 },
	{	/*   0x04, */       'h',       'H',         0x08 },
	{	/*   0x05, */       'g',       'G',         0x07 },
	{	/*   0x06, */       'z',       'Z',         0x1A },
	{	/*   0x07, */       'x',       'X',         0x18 },
	{	/*   0x08, */       'c',       'C',         0x03 },
	{	/*   0x09, */       'v',       'V',         0x16 },
	{	/*   0x0A, */      0x00,      0x00,         0x00 },
	{	/*   0x0B, */       'b',       'B',         0x02 },
	{	/*   0x0C, */       'q',       'Q',         0x11 },
	{	/*   0x0D, */       'w',       'W',         0x17 },
	{	/*   0x0E, */       'e',       'E',         0x05 },
	{	/*   0x0F, */       'r',       'R',         0x12 },
	{	/*   0x10, */       'y',       'Y',         0x19 },
	{	/*   0x11, */       't',       'T',         0x14 },
	{	/*   0x12, */       '1',       '!',         0x00 },
	{	/*   0x13, */       '2',       '@@',         0x00 },
	{	/*   0x14, */       '3',       '#',         0x00 },
	{	/*   0x15, */       '4',       '$',         0x00 },
	{	/*   0x16, */       '6',       '^',         0x1E },
	{	/*   0x17, */       '5',       '%',         0x00 },
	{	/*   0x18, */       '=',       '+',         0x00 },
	{	/*   0x19, */       '9',       '(',         0x00 },
	{	/*   0x1A, */       '7',       '&',         0x00 },
	{	/*   0x1B, */       '-',       '_',         0x1F },
	{	/*   0x1C, */       '8',       '*',         0x00 },
	{	/*   0x1D, */       '0',       ')',         0x00 },
	{	/*   0x1E, */       ']',       '}',         0x1D },
	{	/*   0x1F, */       'o',       'O',         0x0F },
	{	/*   0x20, */       'u',       'U',         0x15 },
	{	/*   0x21, */       '[',       '{',         0x1B },
	{	/*   0x22, */       'i',       'I',         0x09 },
	{	/*   0x23, */       'p',       'P',         0x10 },
	{	/*   0x24, */      0x0D,      0x0D,         0x0D },
	{	/*   0x25, */       'l',       'L',         0x0C },
	{	/*   0x26, */       'j',       'J',         0x0A },
	{	/*   0x27, */      '\'',       '"',         0x00 },
	{	/*   0x28, */       'k',       'K',         0x0B },
	{	/*   0x29, */       ';',       ':',         0x00 },
	{	/*   0x2A, */      '\\',       '|',         0x1C },
	{	/*   0x2B, */       ',',       '<',         0x00 },
	{	/*   0x2C, */       '/',       '?',         0x00 },
	{	/*   0x2D, */       'n',       'N',         0x0E },
	{	/*   0x2E, */       'm',       'M',         0x0D },
	{	/*   0x2F, */       '.',       '>',         0x00 },
	{	/*   0x30, */      0x09,      0x09,         0x09 },
	{	/*   0x31, */       ' ',       ' ',         0x00 },
	{	/*   0x32, */       '`',       '~',         0x00 },
	{	/*   0x33, */      0x7F,      0x7F,         0x7F }, /* Delete */
	{	/*   0x34, */      0x00,      0x00,         0x00 },
	{	/*   0x35, */      0x1B,      0x1B,         0x1B },
	{	/*   0x36, */      0x00,      0x00,         0x00 },
	{	/*   0x37, */      0x00,      0x00,         0x00 },
	{	/*   0x38, */      0x00,      0x00,         0x00 },
	{	/*   0x39, */      0x00,      0x00,         0x00 },
	{	/*   0x3A, */      0x00,      0x00,         0x00 },
	{	/*   0x3B, */       'h',      0x00,         0x00 },  /* Left */
	{	/*   0x3C, */       'l',      0x00,         0x00 },  /* Right */
	{	/*   0x3D, */       'j',      0x00,         0x00 },  /* Down */
	{	/*   0x3E, */       'k',      0x00,         0x00 },  /* Up */
	{	/*   0x3F, */      0x00,      0x00,         0x00 },
	{	/*   0x40, */      0x00,      0x00,         0x00 },
	{	/*   0x41, */       '.',       '.',         0x00 },
	{	/*   0x42, */      0x00,      0x00,         0x00 },
	{	/*   0x43, */       '*',       '*',         0x00 },
	{	/*   0x44, */      0x00,      0x00,         0x00 },
	{	/*   0x45, */       '+',       '+',         0x00 },
	{	/*   0x46, */      0x00,      0x00,         0x00 },
	{	/*   0x47, */      0x00,      0x00,         0x00 },
	{	/*   0x48, */      0x00,      0x00,         0x00 },
	{	/*   0x49, */      0x00,      0x00,         0x00 },
	{	/*   0x4A, */      0x00,      0x00,         0x00 },
	{	/*   0x4B, */       '/',       '/',         0x00 },
	{	/*   0x4C, */      0x0D,      0x0D,         0x0D },
	{	/*   0x4D, */      0x00,      0x00,         0x00 },
	{	/*   0x4E, */       '-',       '-',         0x00 },
	{	/*   0x4F, */      0x00,      0x00,         0x00 },
	{	/*   0x50, */      0x00,      0x00,         0x00 },
	{	/*   0x51, */       '=',       '=',         0x00 },
	{	/*   0x52, */       '0',       '0',         0x00 },
	{	/*   0x53, */       '1',       '1',         0x00 },
	{	/*   0x54, */       '2',       '2',         0x00 },
	{	/*   0x55, */       '3',       '3',         0x00 },
	{	/*   0x56, */       '4',       '4',         0x00 },
	{	/*   0x57, */       '5',       '5',         0x00 },
	{	/*   0x58, */       '6',       '6',         0x00 },
	{	/*   0x59, */       '7',       '7',         0x00 },
	{	/*   0x5A, */      0x00,      0x00,         0x00 },
	{	/*   0x5B, */       '8',       '8',         0x00 },
	{	/*   0x5C, */       '9',       '9',         0x00 },
	{	/*   0x5D, */      0x00,      0x00,         0x00 },
	{	/*   0x5E, */      0x00,      0x00,         0x00 },
	{	/*   0x5F, */      0x00,      0x00,         0x00 },
	{	/*   0x60, */      0x00,      0x00,         0x00 },
	{	/*   0x61, */      0x00,      0x00,         0x00 },
	{	/*   0x62, */      0x00,      0x00,         0x00 },
	{	/*   0x63, */      0x00,      0x00,         0x00 },
	{	/*   0x64, */      0x00,      0x00,         0x00 },
	{	/*   0x65, */      0x00,      0x00,         0x00 },
	{	/*   0x66, */      0x00,      0x00,         0x00 },
	{	/*   0x67, */      0x00,      0x00,         0x00 },
	{	/*   0x68, */      0x00,      0x00,         0x00 },
	{	/*   0x69, */      0x00,      0x00,         0x00 },
	{	/*   0x6A, */      0x00,      0x00,         0x00 },
	{	/*   0x6B, */      0x00,      0x00,         0x00 },
	{	/*   0x6C, */      0x00,      0x00,         0x00 },
	{	/*   0x6D, */      0x00,      0x00,         0x00 },
	{	/*   0x6E, */      0x00,      0x00,         0x00 },
	{	/*   0x6F, */      0x00,      0x00,         0x00 },
	{	/*   0x70, */      0x00,      0x00,         0x00 },
	{	/*   0x71, */      0x00,      0x00,         0x00 },
	{	/*   0x72, */      0x00,      0x00,         0x00 },
	{	/*   0x73, */      0x00,      0x00,         0x00 },
	{	/*   0x74, */      0x00,      0x00,         0x00 },
	{	/*   0x75, */      0x00,      0x00,         0x00 },
	{	/*   0x76, */      0x00,      0x00,         0x00 },
	{	/*   0x77, */      0x00,      0x00,         0x00 },
	{	/*   0x78, */      0x00,      0x00,         0x00 },
	{	/*   0x79, */      0x00,      0x00,         0x00 },
	{	/*   0x7A, */      0x00,      0x00,         0x00 },
	{	/*   0x7B, */      0x00,      0x00,         0x00 },
	{	/*   0x7C, */      0x00,      0x00,         0x00 },
	{	/*   0x7D, */      0x00,      0x00,         0x00 },
	{	/*   0x7E, */      0x00,      0x00,         0x00 },
	{	/*   0x7F, */      0x00,      0x00,         0x00 }
@


1.1.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: keyboard.h,v 1.1 2001/09/01 15:50:00 drahn Exp $	*/
d76 1
a76 1
extern unsigned char keyboard[128][4];
d78 130
a207 138
unsigned char keyboard[128][4] = {
	  /* Scan code      Normal     Shifted     Controlled   XT */
	{ /*   0x00, */       'a',       'A',         0x01,	 30 },
	{ /*   0x01, */       's',       'S',         0x13,	 31 },
	{ /*   0x02, */       'd',       'D',         0x04,	 32 },
	{ /*   0x03, */       'f',       'F',         0x06,	 33 },
	{ /*   0x04, */       'h',       'H',         0x08,	 35 },
	{ /*   0x05, */       'g',       'G',         0x07,	 34 },
	{ /*   0x06, */       'z',       'Z',         0x1A,	 44 },
	{ /*   0x07, */       'x',       'X',         0x18,	 45 },
	{ /*   0x08, */       'c',       'C',         0x03,	 46 },
	{ /*   0x09, */       'v',       'V',         0x16,	 47 },
#ifdef FIX_SV_X_KBDBUG
	{ /*   0x0A, */      0x00,      0x00,         0x00,	 41 },
#else
	{ /*   0x0A, */      0x00,      0x00,         0x00,	 86 },
#endif
	{ /*   0x0B, */       'b',       'B',         0x02,	 48 },
	{ /*   0x0C, */       'q',       'Q',         0x11,	 16 },
	{ /*   0x0D, */       'w',       'W',         0x17,	 17 },
	{ /*   0x0E, */       'e',       'E',         0x05,	 18 },
	{ /*   0x0F, */       'r',       'R',         0x12,	 19 },
	{ /*   0x10, */       'y',       'Y',         0x19,	 21 },
	{ /*   0x11, */       't',       'T',         0x14,	 20 },
	{ /*   0x12, */       '1',       '!',         0x00,	  2 },
	{ /*   0x13, */       '2',       '@@',         0x00,	  3 },
	{ /*   0x14, */       '3',       '#',         0x00,	  4 },
	{ /*   0x15, */       '4',       '$',         0x00,	  5 },
	{ /*   0x16, */       '6',       '^',         0x1E,	  7 },
	{ /*   0x17, */       '5',       '%',         0x00,	  6 },
	{ /*   0x18, */       '=',       '+',         0x00,	 13 },
	{ /*   0x19, */       '9',       '(',         0x00,	 10 },
	{ /*   0x1A, */       '7',       '&',         0x00,	  8 },
	{ /*   0x1B, */       '-',       '_',         0x1F,	 12 },
	{ /*   0x1C, */       '8',       '*',         0x00,	  9 },
	{ /*   0x1D, */       '0',       ')',         0x00,	 11 },
	{ /*   0x1E, */       ']',       '}',         0x1D,	 27 },
	{ /*   0x1F, */       'o',       'O',         0x0F,	 24 },
	{ /*   0x20, */       'u',       'U',         0x15,	 22 },
	{ /*   0x21, */       '[',       '{',         0x1B,	 26 },
	{ /*   0x22, */       'i',       'I',         0x09,	 23 },
	{ /*   0x23, */       'p',       'P',         0x10,	 25 },
	{ /*   0x24, */      0x0D,      0x0D,         0x0D,	 28 },
	{ /*   0x25, */       'l',       'L',         0x0C,	 38 },
	{ /*   0x26, */       'j',       'J',         0x0A,	 36 },
	{ /*   0x27, */       '\'',      '"',         0x00,	 40 },
	{ /*   0x28, */       'k',       'K',         0x0B,	 37 },
	{ /*   0x29, */       ';',       ':',         0x00,	 39 },
	{ /*   0x2A, */      '\\',       '|',         0x1C,	 43 },
	{ /*   0x2B, */       ',',       '<',         0x00,	 51 },
	{ /*   0x2C, */       '/',       '?',         0x00,	 53 },
	{ /*   0x2D, */       'n',       'N',         0x0E,	 49 },
	{ /*   0x2E, */       'm',       'M',         0x0D,	 50 },
	{ /*   0x2F, */       '.',       '>',         0x00,	 52 },
	{ /*   0x30, */      0x09,      0x09,         0x09,	 15 },
	{ /*   0x31, */       ' ',       ' ',         0x00,	 57 },
#ifdef FIX_SV_X_KBDBUG
	{ /*   0x32, */       '`',       '~',         0x00,	 86 },
#else
	{ /*   0x32, */       '`',       '~',         0x00,	 41 },
#endif
	{ /*   0x33, */      0x7F,      0x7F,         0x7F,	211 }, /* Delete */
	{ /*   0x34, */      0x00,      0x00,         0x00,	105 }, /* MODE/KP_Enter */
	{ /*   0x35, */      0x1B,      0x1B,         0x1B,	  1 },
	{ /*   0x36, */      0x00,      0x00,         0x00,	 29 },
	{ /*   0x37, */      0x00,      0x00,         0x00,	219 },
	{ /*   0x38, */      0x00,      0x00,         0x00,	 42 },
	{ /*   0x39, */      0x00,      0x00,         0x00,	 58 },
	{ /*   0x3A, */      0x00,      0x00,         0x00,	 56 }, /* L Alt */
	{ /*   0x3B, */       'h',      0x00,         0x00,	203 },  /* Left */
	{ /*   0x3C, */       'l',      0x00,         0x00,	205 },  /* Right */
	{ /*   0x3D, */       'j',      0x00,         0x00,	208 },  /* Down */
	{ /*   0x3E, */       'k',      0x00,         0x00,	200 },  /* Up */
	{ /*   0x3F, */      0x00,      0x00,         0x00,	  0 }, /* Fn */
	{ /*   0x40, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x41, */       '.',       '.',         0x00,	 83 },
	{ /*   0x42, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x43, */       '*',       '*',         0x00,	 55 },
	{ /*   0x44, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x45, */       '+',       '+',         0x00,	 78 },
	{ /*   0x46, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x47, */      0x00,      0x00,         0x00,	 69 },
	{ /*   0x48, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x49, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4A, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4B, */       '/',       '/',         0x00,	181 },
	{ /*   0x4C, */      0x0D,      0x0D,         0x0D,	156 },
	{ /*   0x4D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4E, */       '-',       '-',         0x00,	 74 },
	{ /*   0x4F, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x50, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x51, */       '=',       '=',         0x00,	118 },
	{ /*   0x52, */       '0',       '0',         0x00,	 82 },
	{ /*   0x53, */       '1',       '1',         0x00,	 79 },
	{ /*   0x54, */       '2',       '2',         0x00,	 80 },
	{ /*   0x55, */       '3',       '3',         0x00,	 81 },
	{ /*   0x56, */       '4',       '4',         0x00,	 75 },
	{ /*   0x57, */       '5',       '5',         0x00,	 76 },
	{ /*   0x58, */       '6',       '6',         0x00,	 77 },
	{ /*   0x59, */       '7',       '7',         0x00,	 71 },
	{ /*   0x5A, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5B, */       '8',       '8',         0x00,	 72 },
	{ /*   0x5C, */       '9',       '9',         0x00,	 73 },
	{ /*   0x5D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5F, */      0x00,      0x00,         0x00,	 51 },
	{ /*   0x60, */      0x00,      0x00,         0x00,	 63 }, /* F5 */
	{ /*   0x61, */      0x00,      0x00,         0x00,	 64 }, /* F6 */
	{ /*   0x62, */      0x00,      0x00,         0x00,	 65 }, /* F7 */
	{ /*   0x63, */      0x00,      0x00,         0x00,	 61 }, /* F3 */
	{ /*   0x64, */      0x00,      0x00,         0x00,	 66 }, /* F8 */
	{ /*   0x65, */      0x00,      0x00,         0x00,	 67 }, /* F9 */
	{ /*   0x66, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x67, */      0x00,      0x00,         0x00,	 87 }, /* F11 */
	{ /*   0x68, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x69, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6A, */      0x00,      0x00,         0x00,	156 },
	{ /*   0x6B, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6C, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6D, */      0x00,      0x00,         0x00,	 68 }, /* F10 */
	{ /*   0x6E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6F, */      0x00,      0x00,         0x00,	 88 }, /* F12 */
	{ /*   0x70, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x71, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x72, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x73, */      0x00,      0x00,         0x00,	199 },
	{ /*   0x74, */      0x00,      0x00,         0x00,	201 },
	{ /*   0x75, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x76, */      0x00,      0x00,         0x00,	 62 }, /* F4 */
	{ /*   0x77, */      0x00,      0x00,         0x00,	207 },
	{ /*   0x78, */      0x00,      0x00,         0x00,	 60 }, /* F2 */
	{ /*   0x79, */      0x00,      0x00,         0x00,	209 },
	{ /*   0x7A, */      0x00,      0x00,         0x00,	 59 }, /* F1 */
	{ /*   0x7B, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7C, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7F, */      0x00,      0x00,         0x00,	  0 } /* pwr */
@


1.1.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1.4.2
log
@Sync the SMP branch with 3.3
@
text
@d76 1
a76 1
extern unsigned char keyboard[128][4];
d78 130
a207 138
unsigned char keyboard[128][4] = {
	  /* Scan code      Normal     Shifted     Controlled   XT */
	{ /*   0x00, */       'a',       'A',         0x01,	 30 },
	{ /*   0x01, */       's',       'S',         0x13,	 31 },
	{ /*   0x02, */       'd',       'D',         0x04,	 32 },
	{ /*   0x03, */       'f',       'F',         0x06,	 33 },
	{ /*   0x04, */       'h',       'H',         0x08,	 35 },
	{ /*   0x05, */       'g',       'G',         0x07,	 34 },
	{ /*   0x06, */       'z',       'Z',         0x1A,	 44 },
	{ /*   0x07, */       'x',       'X',         0x18,	 45 },
	{ /*   0x08, */       'c',       'C',         0x03,	 46 },
	{ /*   0x09, */       'v',       'V',         0x16,	 47 },
#ifdef FIX_SV_X_KBDBUG
	{ /*   0x0A, */      0x00,      0x00,         0x00,	 41 },
#else
	{ /*   0x0A, */      0x00,      0x00,         0x00,	 86 },
#endif
	{ /*   0x0B, */       'b',       'B',         0x02,	 48 },
	{ /*   0x0C, */       'q',       'Q',         0x11,	 16 },
	{ /*   0x0D, */       'w',       'W',         0x17,	 17 },
	{ /*   0x0E, */       'e',       'E',         0x05,	 18 },
	{ /*   0x0F, */       'r',       'R',         0x12,	 19 },
	{ /*   0x10, */       'y',       'Y',         0x19,	 21 },
	{ /*   0x11, */       't',       'T',         0x14,	 20 },
	{ /*   0x12, */       '1',       '!',         0x00,	  2 },
	{ /*   0x13, */       '2',       '@@',         0x00,	  3 },
	{ /*   0x14, */       '3',       '#',         0x00,	  4 },
	{ /*   0x15, */       '4',       '$',         0x00,	  5 },
	{ /*   0x16, */       '6',       '^',         0x1E,	  7 },
	{ /*   0x17, */       '5',       '%',         0x00,	  6 },
	{ /*   0x18, */       '=',       '+',         0x00,	 13 },
	{ /*   0x19, */       '9',       '(',         0x00,	 10 },
	{ /*   0x1A, */       '7',       '&',         0x00,	  8 },
	{ /*   0x1B, */       '-',       '_',         0x1F,	 12 },
	{ /*   0x1C, */       '8',       '*',         0x00,	  9 },
	{ /*   0x1D, */       '0',       ')',         0x00,	 11 },
	{ /*   0x1E, */       ']',       '}',         0x1D,	 27 },
	{ /*   0x1F, */       'o',       'O',         0x0F,	 24 },
	{ /*   0x20, */       'u',       'U',         0x15,	 22 },
	{ /*   0x21, */       '[',       '{',         0x1B,	 26 },
	{ /*   0x22, */       'i',       'I',         0x09,	 23 },
	{ /*   0x23, */       'p',       'P',         0x10,	 25 },
	{ /*   0x24, */      0x0D,      0x0D,         0x0D,	 28 },
	{ /*   0x25, */       'l',       'L',         0x0C,	 38 },
	{ /*   0x26, */       'j',       'J',         0x0A,	 36 },
	{ /*   0x27, */       '\'',      '"',         0x00,	 40 },
	{ /*   0x28, */       'k',       'K',         0x0B,	 37 },
	{ /*   0x29, */       ';',       ':',         0x00,	 39 },
	{ /*   0x2A, */      '\\',       '|',         0x1C,	 43 },
	{ /*   0x2B, */       ',',       '<',         0x00,	 51 },
	{ /*   0x2C, */       '/',       '?',         0x00,	 53 },
	{ /*   0x2D, */       'n',       'N',         0x0E,	 49 },
	{ /*   0x2E, */       'm',       'M',         0x0D,	 50 },
	{ /*   0x2F, */       '.',       '>',         0x00,	 52 },
	{ /*   0x30, */      0x09,      0x09,         0x09,	 15 },
	{ /*   0x31, */       ' ',       ' ',         0x00,	 57 },
#ifdef FIX_SV_X_KBDBUG
	{ /*   0x32, */       '`',       '~',         0x00,	 86 },
#else
	{ /*   0x32, */       '`',       '~',         0x00,	 41 },
#endif
	{ /*   0x33, */      0x7F,      0x7F,         0x7F,	211 }, /* Delete */
	{ /*   0x34, */      0x00,      0x00,         0x00,	105 }, /* MODE/KP_Enter */
	{ /*   0x35, */      0x1B,      0x1B,         0x1B,	  1 },
	{ /*   0x36, */      0x00,      0x00,         0x00,	 29 },
	{ /*   0x37, */      0x00,      0x00,         0x00,	219 },
	{ /*   0x38, */      0x00,      0x00,         0x00,	 42 },
	{ /*   0x39, */      0x00,      0x00,         0x00,	 58 },
	{ /*   0x3A, */      0x00,      0x00,         0x00,	 56 }, /* L Alt */
	{ /*   0x3B, */       'h',      0x00,         0x00,	203 },  /* Left */
	{ /*   0x3C, */       'l',      0x00,         0x00,	205 },  /* Right */
	{ /*   0x3D, */       'j',      0x00,         0x00,	208 },  /* Down */
	{ /*   0x3E, */       'k',      0x00,         0x00,	200 },  /* Up */
	{ /*   0x3F, */      0x00,      0x00,         0x00,	  0 }, /* Fn */
	{ /*   0x40, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x41, */       '.',       '.',         0x00,	 83 },
	{ /*   0x42, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x43, */       '*',       '*',         0x00,	 55 },
	{ /*   0x44, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x45, */       '+',       '+',         0x00,	 78 },
	{ /*   0x46, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x47, */      0x00,      0x00,         0x00,	 69 },
	{ /*   0x48, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x49, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4A, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4B, */       '/',       '/',         0x00,	181 },
	{ /*   0x4C, */      0x0D,      0x0D,         0x0D,	156 },
	{ /*   0x4D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x4E, */       '-',       '-',         0x00,	 74 },
	{ /*   0x4F, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x50, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x51, */       '=',       '=',         0x00,	118 },
	{ /*   0x52, */       '0',       '0',         0x00,	 82 },
	{ /*   0x53, */       '1',       '1',         0x00,	 79 },
	{ /*   0x54, */       '2',       '2',         0x00,	 80 },
	{ /*   0x55, */       '3',       '3',         0x00,	 81 },
	{ /*   0x56, */       '4',       '4',         0x00,	 75 },
	{ /*   0x57, */       '5',       '5',         0x00,	 76 },
	{ /*   0x58, */       '6',       '6',         0x00,	 77 },
	{ /*   0x59, */       '7',       '7',         0x00,	 71 },
	{ /*   0x5A, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5B, */       '8',       '8',         0x00,	 72 },
	{ /*   0x5C, */       '9',       '9',         0x00,	 73 },
	{ /*   0x5D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x5F, */      0x00,      0x00,         0x00,	 51 },
	{ /*   0x60, */      0x00,      0x00,         0x00,	 63 }, /* F5 */
	{ /*   0x61, */      0x00,      0x00,         0x00,	 64 }, /* F6 */
	{ /*   0x62, */      0x00,      0x00,         0x00,	 65 }, /* F7 */
	{ /*   0x63, */      0x00,      0x00,         0x00,	 61 }, /* F3 */
	{ /*   0x64, */      0x00,      0x00,         0x00,	 66 }, /* F8 */
	{ /*   0x65, */      0x00,      0x00,         0x00,	 67 }, /* F9 */
	{ /*   0x66, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x67, */      0x00,      0x00,         0x00,	 87 }, /* F11 */
	{ /*   0x68, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x69, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6A, */      0x00,      0x00,         0x00,	156 },
	{ /*   0x6B, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6C, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6D, */      0x00,      0x00,         0x00,	 68 }, /* F10 */
	{ /*   0x6E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x6F, */      0x00,      0x00,         0x00,	 88 }, /* F12 */
	{ /*   0x70, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x71, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x72, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x73, */      0x00,      0x00,         0x00,	199 },
	{ /*   0x74, */      0x00,      0x00,         0x00,	201 },
	{ /*   0x75, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x76, */      0x00,      0x00,         0x00,	 62 }, /* F4 */
	{ /*   0x77, */      0x00,      0x00,         0x00,	207 },
	{ /*   0x78, */      0x00,      0x00,         0x00,	 60 }, /* F2 */
	{ /*   0x79, */      0x00,      0x00,         0x00,	209 },
	{ /*   0x7A, */      0x00,      0x00,         0x00,	 59 }, /* F1 */
	{ /*   0x7B, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7C, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7D, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7E, */      0x00,      0x00,         0x00,	  0 },
	{ /*   0x7F, */      0x00,      0x00,         0x00,	  0 } /* pwr */
@


