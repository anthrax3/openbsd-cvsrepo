head	1.19;
access;
symbols
	OPENBSD_6_1:1.19.0.8
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.18.0.6
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.17.0.16
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.14
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.10
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.8
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.6
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.16
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.12
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.10
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.8
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.6
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.14.0.2
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.13.0.4
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.10.0.2
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.8
	UBC:1.3.0.6
	UBC_BASE:1.3
	SMP:1.3.0.4
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.19
date	2015.11.24.17.11.38;	author mpi;	state Exp;
branches;
next	1.18;
commitid	5gdEnqVoJuTuwdTu;

1.18
date	2014.12.22.02.26.53;	author tedu;	state Exp;
branches;
next	1.17;
commitid	2Ez9mHW0jDzojG4V;

1.17
date	2011.07.03.15.47.16;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	2009.10.13.19.33.16;	author pirofti;	state Exp;
branches;
next	1.15;

1.15
date	2006.06.19.22.42.33;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.31.05.37.13;	author jsg;	state Exp;
branches;
next	1.13;

1.13
date	2004.11.24.07.47.22;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.23.21.12.23;	author fgsch;	state Exp;
branches;
next	1.11;

1.11
date	2004.10.20.13.41.51;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2004.08.17.22.20.55;	author drahn;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.26.15.34.16;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	2002.09.15.09.01.58;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.15.02.05.09;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.09.11.00.27;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.09.03.47.23;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.36;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.19.20.18.57;	author miod;	state Exp;
branches
	1.3.4.1
	1.3.6.1;
next	1.2;

1.2
date	2001.09.10.12.55.59;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.01.15.50.00;	author drahn;	state Exp;
branches;
next	;

1.3.4.1
date	2001.10.31.03.01.15;	author nate;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.03.28.10.36.01;	author niklas;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	2003.03.27.23.29.46;	author niklas;	state Exp;
branches;
next	1.3.4.4;

1.3.4.4
date	2004.02.19.10.49.03;	author niklas;	state Exp;
branches;
next	;

1.3.6.1
date	2002.06.11.03.36.33;	author art;	state Exp;
branches;
next	1.3.6.2;

1.3.6.2
date	2002.10.29.00.28.06;	author art;	state Exp;
branches;
next	;


desc
@@


1.19
log
@You only need <net/if_dl.h> if you're using LLADDR() or a sockaddr_dl.
@
text
@/*	$OpenBSD: if_wi_obio.c,v 1.18 2014/12/22 02:26:53 tedu Exp $	*/

/*
 * Copyright (c) 1997, 1998, 1999
 *	Bill Paul <wpaul@@ctr.columbia.edu>.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Bill Paul.
 * 4. Neither the name of the author nor the names of any co-contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY Bill Paul AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL Bill Paul OR THE VOICES IN HIS HEAD
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 *
 *	From: if_wi.c,v 1.7 1999/07/04 14:40:22 wpaul Exp $
 */

/*
 * Lucent WaveLAN/IEEE 802.11 PCMCIA driver for OpenBSD.
 *
 * Originally written by Bill Paul <wpaul@@ctr.columbia.edu>
 * Electrical Engineering Department
 * Columbia University, New York City
 */
 /* 
  * modified for apple obio by Dale Rahn
  */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/timeout.h>
#include <sys/socket.h>
#include <sys/device.h>
#include <sys/tree.h>

#include <net/if.h>
#include <net/if_media.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>

#include <net80211/ieee80211.h>
#include <net80211/ieee80211_ioctl.h>
#include <net80211/ieee80211_var.h>

#include <machine/bus.h>
#include <machine/autoconf.h>

#include <dev/ic/if_wireg.h>
#include <dev/ic/if_wi_ieee.h>
#include <dev/ic/if_wivar.h>

int	wi_obio_match(struct device *, void *, void *);
void	wi_obio_attach(struct device *, struct device *, void *);
int	wi_obio_detach(struct device *, int);
int	wi_obio_activate(struct device *, int);
void	wi_obio_attach(struct device *, struct device *, void *);
int	wi_obio_enable(struct wi_softc *sc);
void	wi_obio_disable(struct wi_softc *sc);

struct wi_obio_softc {
	struct wi_softc sc_wi;
	u_int keywest;
};

struct cfattach wi_obio_ca = {
	sizeof (struct wi_obio_softc), wi_obio_match, wi_obio_attach,
	wi_obio_detach, wi_obio_activate
};


int
wi_obio_match(parent, match, aux)
	struct device *parent;
	void *match, *aux;
{
	struct confargs *ca = aux;

	if (strcmp(ca->ca_name, "radio") == 0 &&
	    ca->ca_nintr >= 4 && ca->ca_nreg >= 8) 
		return (1);
	return (0);
}

void
wi_obio_attach(parent, self, aux)
	struct device *parent, *self;
	void *aux;
{
	struct wi_obio_softc	*psc = (struct wi_obio_softc *)self;
	struct wi_softc		*sc = &psc->sc_wi;
	struct confargs		*ca = aux;

	printf(" irq %d:", ca->ca_intr[0]);

	sc->wi_btag = ca->ca_iot;
	ca->ca_reg[0] += ca->ca_baseaddr;
	if (bus_space_map(sc->wi_btag, ca->ca_reg[0], ca->ca_reg[1], 0, &sc->wi_bhandle)) {
		printf("can't map i/o space\n");
	}
	/* FSCKING hackery */
	psc->keywest = (u_int) mapiodev(0x80000000, 0x1d000);

	/* Establish the interrupt. */
	mac_intr_establish(parent, ca->ca_intr[0], IST_LEVEL, IPL_NET,
		wi_intr, psc, sc->sc_dev.dv_xname);

	/* Make sure interrupts are disabled. */
	CSR_WRITE_2(sc, WI_INT_EN, 0);
	CSR_WRITE_2(sc, WI_EVENT_ACK, 0xffff);

	wi_obio_enable(sc);

	printf("\n");
	wi_attach(sc, &wi_func_io);
}

int
wi_obio_detach(dev, flags)
	struct device *dev;
	int flags;
{
	struct wi_obio_softc *psc = (struct wi_obio_softc *)dev;
	struct wi_softc *sc = &psc->sc_wi;
	struct ifnet *ifp = &sc->sc_ic.ic_if;

	/*
	obio_io_unmap(psc->sc_pf, psc->sc_io_window);
	obio_io_free(psc->sc_pf, &psc->sc_pcioh);
	*/

	wi_obio_disable(sc);
	ether_ifdetach(ifp);
	if_detach(ifp);

	return (0);
}

int
wi_obio_activate(dev, act)
	struct device *dev;
	int act;
{
	struct wi_obio_softc *psc = (struct wi_obio_softc *)dev;
	struct wi_softc *sc = &psc->sc_wi;
	struct ifnet *ifp = &sc->sc_ic.ic_if;
	int s;

	s = splnet();
	switch (act) {
	case DVACT_DEACTIVATE:
		ifp->if_timer = 0;
		if (ifp->if_flags & IFF_RUNNING)
			wi_stop(sc);
		wi_obio_disable(sc);
		break;
	}
	splx(s);
	return (0);
}

/* THIS IS CRAP */

int
wi_obio_enable(sc)
	struct wi_softc *sc;
{
	struct wi_obio_softc *psc = (struct wi_obio_softc *)sc;
	const u_int keywest = psc->keywest;	/* XXX */
	const u_int fcr2 = keywest + 0x40;
	const u_int gpio = keywest + 0x6a;
	const u_int extint_gpio = keywest + 0x58;
	u_int x;

	x = in32rb(fcr2);
	x |= 0x4;
	out32rb(fcr2, x);

	/* Enable card slot. */
	out8(gpio + 0x0f, 5);
	delay(1000);
	out8(gpio + 0x0f, 4);
	delay(1000);

	x = in32rb(fcr2);
	x &= ~0x8000000;

	out32rb(fcr2, x);
	/* out8(gpio + 0x10, 4); */

	out8(extint_gpio + 0x0b, 0);
	out8(extint_gpio + 0x0a, 0x28);
	out8(extint_gpio + 0x0d, 0x28);
	out8(gpio + 0x0d, 0x28);
	out8(gpio + 0x0e, 0x28);
	out32rb(keywest + 0x1c000, 0);

	/* Initialize the card. */
	out32rb(keywest + 0x1a3e0, 0x41);
	x = in32rb(fcr2);
	x |= 0x8000000;
	out32rb(fcr2, x);

	return 0;
}

void
wi_obio_disable(sc)
	struct wi_softc *sc;
{
	struct wi_obio_softc *psc = (struct wi_obio_softc *)sc;
	const u_int keywest = psc->keywest;	/* XXX */
	const u_int fcr2 = keywest + 0x40;
	u_int x;

	x = in32rb(fcr2);
	x &= ~0x4;
	out32rb(fcr2, x);
	/* out8(gpio + 0x10, 0); */
}
@


1.18
log
@unifdef INET
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.17 2011/07/03 15:47:16 matthew Exp $	*/
a55 1
#include <net/if_dl.h>
@


1.17
log
@Remove config_activate() and DVACT_ACTIVATE.  PCMCIA's the only thing
that's ever used it, and it's long since been changed to use
DVACT_{QUIESCE,SUSPEND,RESUME} instead.

ok deraadt@@, dlg@@; miod@@ also agreed with this idea when I brought it
up a few weeks ago
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.16 2009/10/13 19:33:16 pirofti Exp $	*/
a58 1
#ifdef INET
a60 1
#endif
@


1.16
log
@Get rid of devact enum, substitute it with an int and coresponding defines.

This is needed for the addition of further suspend/resume actions.

Okay deraadt@@, marco@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.15 2006/06/19 22:42:33 miod Exp $	*/
a172 7
	case DVACT_ACTIVATE:
		wi_obio_enable(sc);
		printf("%s:", WI_PRT_ARG(sc));
		printf("\n");
		wi_init(sc);
		break;

@


1.15
log
@Be more strict in the probe routines and actually check ca_nintr and
ca_nreg are large enough for our greedy needs; tweaks and ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.14 2005/10/31 05:37:13 jsg Exp $	*/
d78 1
a78 1
int	wi_obio_activate(struct device *, enum devact);
d164 1
a164 1
	enum devact act;
@


1.14
log
@Move from arpcom to ieee80211com in wi softc.  This will be
required for net80211 support.
Updated version of a diff from dlg@@
similiar diff ok fgsch@@, ok dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.13 2004/11/24 07:47:22 deraadt Exp $	*/
d101 2
a102 1
	if (strcmp(ca->ca_name, "radio") == 0) 
@


1.13
log
@replace old net/if_ieee80211.h header with the net80211 ones, kernel part.
file missed by fgsch, did he miss any others?  grep helps
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.12 2004/11/23 21:12:23 fgsch Exp $	*/
d53 1
d66 1
d146 1
a146 1
	struct ifnet *ifp = &sc->sc_arpcom.ac_if;
d167 1
a167 1
	struct ifnet *ifp = &sc->sc_arpcom.ac_if;
@


1.12
log
@replace old net/if_ieee80211.h header with the net80211 ones, kernel part.
millert@@ mcbride@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.11 2004/10/20 13:41:51 deraadt Exp $	*/
d64 1
@


1.11
log
@put newline at right place during attach
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.10 2004/08/17 22:20:55 drahn Exp $	*/
d63 1
a63 1
#include <net/if_ieee80211.h>
@


1.10
log
@Use device name, not constant string, ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.9 2003/10/26 15:34:16 drahn Exp $	*/
d132 1
@


1.9
log
@Driver for PRISM 2.5/3 based (wifi) USB adapters. This is a work in progress,
it does not yet handle bulk data copies or hostap mode. Only one model
currently supported, however driver may support other PRISM based adapters.
ok millert@@ fgsch@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.8 2002/09/15 09:01:58 deraadt Exp $	*/
d124 1
a124 1
		wi_intr, psc, "wi_obio");
@


1.8
log
@backout premature
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.6 2002/07/09 11:00:27 fgsch Exp $	*/
d132 1
a132 1
	wi_attach(sc);
@


1.7
log
@KNF
@
text
@d90 1
d116 1
a116 2
	if (bus_space_map(sc->wi_btag, ca->ca_reg[0], ca->ca_reg[1], 0,
	    &sc->wi_bhandle)) {
d124 1
a124 1
	    wi_intr, psc, "wi_obio");
@


1.6
log
@move common declarations to if_wivar.h; mickey@@ and millert@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.5 2002/06/09 03:47:23 drahn Exp $	*/
a89 1

d115 2
a116 1
	if (bus_space_map(sc->wi_btag, ca->ca_reg[0], ca->ca_reg[1], 0, &sc->wi_bhandle)) {
d124 1
a124 1
		wi_intr, psc, "wi_obio");
@


1.5
log
@more arpcom ->sc_arpcom missing.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.4 2002/03/14 01:26:36 millert Exp $	*/
a78 6


int	wi_intr(void *);
int	wi_attach(struct wi_softc *);
void	wi_init(void *);
void	wi_stop(struct wi_softc *);
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.3 2001/09/19 20:18:57 miod Exp $	*/
d148 1
a148 1
	struct ifnet *ifp = &sc->arpcom.ac_if;
d169 1
a169 1
	struct ifnet *ifp = &sc->arpcom.ac_if;
@


1.3
log
@Fix a typo... and remove return; at the end of a void function.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.2 2001/09/10 12:55:59 drahn Exp $	*/
d72 5
a76 5
int	wi_obio_match		__P((struct device *, void *, void *));
void	wi_obio_attach	__P((struct device *, struct device *, void *));
int	wi_obio_detach	__P((struct device *, int));
int	wi_obio_activate	__P((struct device *, enum devact));
void	wi_obio_attach	__P((struct device *, struct device *, void *));
d81 4
a84 4
int	wi_intr			__P((void *));
int	wi_attach		__P((struct wi_softc *));
void	wi_init			__P((void *));
void	wi_stop			__P((struct wi_softc *));
@


1.3.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.3 2001/09/19 20:18:57 miod Exp $	*/
d72 5
a76 5
int	wi_obio_match(struct device *, void *, void *);
void	wi_obio_attach(struct device *, struct device *, void *);
int	wi_obio_detach(struct device *, int);
int	wi_obio_activate(struct device *, enum devact);
void	wi_obio_attach(struct device *, struct device *, void *);
d81 4
a84 4
int	wi_intr(void *);
int	wi_attach(struct wi_softc *);
void	wi_init(void *);
void	wi_stop(struct wi_softc *);
d148 1
a148 1
	struct ifnet *ifp = &sc->sc_arpcom.ac_if;
d169 1
a169 1
	struct ifnet *ifp = &sc->sc_arpcom.ac_if;
@


1.3.6.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.3.6.1 2002/06/11 03:36:33 art Exp $	*/
d79 6
@


1.3.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.3.4.2
log
@Merge in -current from about a week ago
@
text
@d72 5
a76 5
int	wi_obio_match(struct device *, void *, void *);
void	wi_obio_attach(struct device *, struct device *, void *);
int	wi_obio_detach(struct device *, int);
int	wi_obio_activate(struct device *, enum devact);
void	wi_obio_attach(struct device *, struct device *, void *);
d81 4
a84 4
int	wi_intr(void *);
int	wi_attach(struct wi_softc *);
void	wi_init(void *);
void	wi_stop(struct wi_softc *);
@


1.3.4.3
log
@Sync the SMP branch with 3.3
@
text
@d80 6
d148 1
a148 1
	struct ifnet *ifp = &sc->sc_arpcom.ac_if;
d169 1
a169 1
	struct ifnet *ifp = &sc->sc_arpcom.ac_if;
@


1.3.4.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d132 1
a132 1
	wi_attach(sc, &wi_func_io);
@


1.2
log
@Devices should not poke random memory, even hacked code which should be
calling another driver to turn on it's enables properly.
For now wi_obio will mapiodev the keywest enable region.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.1 2001/09/01 15:50:00 drahn Exp $	*/
d123 1
a123 1
		printf("cant' map i/o space\n");
a138 2
	return;

@


1.1
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/mac to macppc/dev
@
text
@d1 1
a1 1
/*	$OpenBSD: if_wi_obio.c,v 1.3 2001/07/09 03:30:20 mickey Exp $	*/
d88 1
d125 2
d200 2
a201 1
	const u_int keywest = 0x80000000;	/* XXX */
d243 2
a244 1
	const u_int keywest = 0x80000000;	/* XXX */
@

