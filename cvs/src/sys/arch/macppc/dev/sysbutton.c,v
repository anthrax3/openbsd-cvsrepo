head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.34
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.30
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.32
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.24
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.28
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.26
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.22
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.20
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.18
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.16
	OPENBSD_5_0:1.4.0.14
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.12
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.10
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.8
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2008.06.13.00.31.09;	author krw;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.24.16.02.40;	author gwk;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.23.15.25.58;	author gwk;	state Exp;
branches;
next	1.1;

1.1
date	2007.04.22.20.17.03;	author gwk;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Add some missing $OpenBSD$ tags.

ok drahn@@ gwk@@
@
text
@/*	$OpenBSD$	*/
/*
 * Copyright (c) 2007 Gordon Willem Klok <gwk@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>
#include <sys/device.h>

#include <ddb/db_var.h>
#include <dev/ofw/openfirm.h>

#include <machine/bus.h>
#include <machine/autoconf.h>

struct sysbutton_softc {
	struct device	sc_dev;
	int		sc_node;
	int 		sc_intr;
};

int sysbutton_match(struct device *, void *, void *);
void sysbutton_attach(struct device *, struct device *, void *);
int sysbutton_intr(void *);

struct cfattach sysbutton_ca = {
	sizeof(struct sysbutton_softc), sysbutton_match,
	sysbutton_attach
};

struct cfdriver sysbutton_cd = {
	NULL, "sysbutton", DV_DULL
};

int
sysbutton_match(struct device *parent, void *arg, void *aux)
{
	struct confargs *ca = aux;

	if (strcmp(ca->ca_name, "indicatorSwitch-gpio") == 0)
		return 1;

	return 0;
}

void
sysbutton_attach(struct device *parent, struct device *self, void *aux)
{
	struct sysbutton_softc *sc = (struct sysbutton_softc *)self;
	struct confargs *ca = aux;
	int intr[2];

	sc->sc_node = ca->ca_node;

	OF_getprop(sc->sc_node, "interrupts", intr, sizeof(intr));
	sc->sc_intr = intr[0];

	printf(": irq %d\n", sc->sc_intr);

	mac_intr_establish(parent, sc->sc_intr, IST_EDGE,
	    IPL_NONE, sysbutton_intr, sc, sc->sc_dev.dv_xname);
}

int
sysbutton_intr(void *v)
{

	/* 
	 * XXX: Holding this button causes an interrupt storm if
	 * ddb.console=0.
	 */
#ifdef DDB
	if (db_console)
		Debugger();
#endif

	return 1;
}
@


1.3
log
@Firmware lies! Switching from LEVEL to EDGE triggered interrupt prevents
storms.

ok kettenis
@
text
@d1 1
@


1.2
log
@iqg -> irq
spotted by miod
@
text
@d73 1
a73 1
	mac_intr_establish(parent, sc->sc_intr, IST_LEVEL,
@


1.1
log
@Add sysbutton a driver for the 'System identifier' button found on the
fornt panel of the xserve (the button with the triangle on it). This driver
will dump you into ddb at the press of a button if the ddb.console sysctl
is set. The bug still has one unresolved issue if ddb.console is not set
and you press and hold the button you will cause a interrupt storm that will
slow the system down. So if you keep your xserve near a toddler or you
yourself are a toddler you might want to consider disabling this device
remember buttons arn't toys.

ok deraadt.
@
text
@d71 1
a71 1
	printf(": irg %d\n", sc->sc_intr);
@

