head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.6
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.8
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.14.0.36
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.28
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.32
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.30
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.26
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.24
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.22
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.20
	OPENBSD_5_0:1.14.0.18
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.16
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.14
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.10
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.12
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.8
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.6
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.4
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.11.0.2
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.10
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.4
	UBC:1.1.0.6
	UBC_BASE:1.1
	SMP:1.1.0.4
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.16
date	2015.09.30.15.13.54;	author krw;	state Exp;
branches;
next	1.15;
commitid	OMEx1BwPjPTBoG4P;

1.15
date	2015.09.30.14.57.03;	author krw;	state Exp;
branches;
next	1.14;
commitid	DqSeHy1IhaIjFHPj;

1.14
date	2007.06.20.18.15.45;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2007.06.18.08.41.06;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2007.06.17.00.27.27;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2006.10.20.23.47.43;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2006.10.18.20.09.38;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2006.10.17.23.42.37;	author krw;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.04.00.52.55;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2006.07.01.16.50.33;	author krw;	state Exp;
branches;
next	1.6;

1.6
date	2006.06.26.23.11.31;	author krw;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.10.10.36.12;	author grange;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.15.09.01.58;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.15.02.02.43;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.36;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.01.15.49.06;	author drahn;	state Exp;
branches
	1.1.4.1
	1.1.6.1;
next	;

1.1.4.1
date	2001.10.31.03.01.15;	author nate;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2002.03.28.10.36.01;	author niklas;	state Exp;
branches;
next	;

1.1.6.1
date	2002.06.11.03.36.34;	author art;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2002.10.29.00.28.06;	author art;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Remove some trailing whitespace.
@
text
@/*	$OpenBSD: disklabel.h,v 1.15 2015/09/30 14:57:03 krw Exp $	*/

/*
 * Copyright (c) 1994 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_DISKLABEL_H_
#define _MACHINE_DISKLABEL_H_

#define	LABELSECTOR	1	/* sector containing label */
#define	LABELOFFSET	0	/* offset of label in sector */
#define	MAXPARTITIONS	16	/* number of partitions */

/* HFS/DPME */

/* partition map structure from Inside Macintosh: Devices, SCSI Manager
 * pp. 13-14.  The partition map always begins on physical block 1.
 *
 * With the exception of block 0, all blocks on the disk must belong to
 * exactly one partition.  The partition map itself belongs to a partition
 * of type `APPLE_PARTITION_MAP', and is not limited in size by anything
 * other than available disk space.  The partition map is not necessarily
 * the first partition listed.
 */
struct part_map_entry {
#define PART_ENTRY_MAGIC        0x504d
	u_int16_t       pmSig;          /* partition signature */
	u_int16_t       pmSigPad;       /* (reserved) */
	u_int32_t       pmMapBlkCnt;    /* number of blocks in partition map */
	u_int32_t       pmPyPartStart;  /* first physical block of partition */
	u_int32_t       pmPartBlkCnt;   /* number of blocks in partition */
	char            pmPartName[32]; /* partition name */
	char            pmPartType[32]; /* partition type */
	u_int32_t       pmLgDataStart;  /* first logical block of data area */
	u_int32_t       pmDataCnt;      /* number of blocks in data area */
	u_int32_t       pmPartStatus;   /* partition status information */
	u_int32_t       pmLgBootStart;  /* first logical block of boot code */
	u_int32_t       pmBootSize;     /* size of boot code, in bytes */
	u_int32_t       pmBootLoad;     /* boot code load address */
	u_int32_t       pmBootLoad2;    /* (reserved) */
	u_int32_t       pmBootEntry;    /* boot code entry point */
	u_int32_t       pmBootEntry2;   /* (reserved) */
	u_int32_t       pmBootCksum;    /* boot code checksum */
	char            pmProcessor[16]; /* processor type (e.g. "68020") */
	u_int8_t        pmBootArgs[128]; /* A/UX boot arguments */
	/* we do not index the disk image as an array,
	 * leave out the on disk padding
	 */
#if 0
	u_int8_t        pad[248];       /* pad to end of block */
#endif
};

#define PART_TYPE_DRIVER        "APPLE_DRIVER"
#define PART_TYPE_DRIVER43      "APPLE_DRIVER43"
#define PART_TYPE_DRIVERATA     "APPLE_DRIVER_ATA"
#define PART_TYPE_DRIVERIOKIT   "APPLE_DRIVER_IOKIT"
#define PART_TYPE_FWDRIVER      "APPLE_FWDRIVER"
#define PART_TYPE_FWB_COMPONENT "FWB DRIVER COMPONENTS"
#define PART_TYPE_FREE          "APPLE_FREE"
#define PART_TYPE_MAC           "APPLE_HFS"
#define PART_TYPE_OPENBSD       "OPENBSD"

#endif /* _MACHINE_DISKLABEL_H_ */
@


1.15
log
@Use consistant whitespace/comments for #define'ing LABELSECTOR,
LABELOFFSET and MAXPARTITIONS. Easier on the eye when scanning
through all these files. No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.14 2007/06/20 18:15:45 deraadt Exp $	*/
d43 2
a44 2
 * pp. 13-14.  The partition map always begins on physical block 1.  
 * 
d53 1
a53 1
	u_int16_t       pmSig;          /* partition signature */   
@


1.14
log
@b_cylinder does not need to be set on the callpath down into drivers.
cpu_disklabel can go away, since nothing anymore needs to use it; ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.13 2007/06/18 08:41:06 deraadt Exp $	*/
d36 3
a38 3
#define	LABELSECTOR	1		/* sector containing label */
#define	LABELOFFSET	0		/* offset of label in sector */
#define	MAXPARTITIONS	16		/* number of partitions */
@


1.13
log
@split out dpme disklabel reading, simplifying things significantly
and making it look a lot more like other architectures; tested by
myself and drahn and gwk
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.12 2007/06/17 00:27:27 deraadt Exp $	*/
a88 3

struct cpu_disklabel {
};
@


1.12
log
@significantly simplified disklabel infrastructure.  MBR handling becomes MI
to support hotplug media on most architectures.  disklabel setup and
verification done using new helper functions.  Disklabels must *always*
have a correct checksum now.  Same code paths are used to learn on-disk
location disklabels, to avoid new errors sneaking in.  Tested on almost all
cases, testing help from todd, kettenis, krw, otto, dlg, robert, gwk, drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.11 2006/10/20 23:47:43 krw Exp $	*/
a89 1

a90 2
	/* only store first entry and openbsd partition */
	struct part_map_entry macparts[2];
@


1.11
log
@Try again with local variable to avoid alignment issues.

"The dosparts member of cpu_disklabel was not used for any persistant
data. Eliminate it, and just use the data being read in while
processing MBR and EBR records.

Should be no functional change.

ok weingart@@ deraadt@@"
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.10 2006/10/18 20:09:38 deraadt Exp $	*/
a38 45
#define	RAW_PART	2		/* raw partition: ie. rsd0c */

/* MBR partition table */
#define	DOSBBSECTOR	0		/* MBR sector number */
#define	DOSPARTOFF	446		/* Offset of MBR partition table */
#define	NDOSPART	4		/* # of partitions in MBR */
#define	DOSMAGICOFF	510		/* Offset of magic number */
#define	DOSMAGIC	0xaa55		/* Actual magic number */
#define	MBRMAGIC	DOSMAGIC
#define DOSMBR_SIGNATURE MBRMAGIC
#define DOSMBR_SIGNATURE_OFF DOSMAGICOFF
#define	DOSACTIVE	0x80

struct dos_partition {
	u_int8_t	dp_flag;	/* default boot flag */
	u_int8_t	dp_shd;	/* start head, IsN't Always Meaningful */
	u_int8_t	dp_ssect;	/* start sector, INAM */
	u_int8_t	dp_scyl;	/* start cylinder, INAM */
	u_int8_t	dp_typ;		/* partition type */
	u_int8_t	dp_ehd;	/* end head, INAM */
	u_int8_t	dp_esect;	/* end sector, INAM */
	u_int8_t	dp_ecyl;	/* end cylinder, INAM */
	u_int32_t	dp_start;	/* absolute start sector number */
	u_int32_t	dp_size;	/* partition size in sectors */
};

/* Known DOS partition types. */
#define	DOSPTYP_UNUSED	0x00		/* Unused partition */
#define DOSPTYP_FAT12	0x01		/* 12-bit FAT */
#define DOSPTYP_FAT16S	0x04		/* 16-bit FAT, less than 32M */
#define DOSPTYP_EXTEND	0x05		/* Extended; contains sub-partitions */
#define DOSPTYP_FAT16B	0x06		/* 16-bit FAT, more than 32M */
#define DOSPTYP_FAT32	0x0b		/* 32-bit FAT */
#define DOSPTYP_FAT32L	0x0c		/* 32-bit FAT, LBA-mapped */
#define DOSPTYP_FAT16L	0x0e		/* 16-bit FAT, LBA-mapped */
#define DOSPTYP_EXTENDL 0x0f		/* Extended, LBA-mapped; contains sub-partitions */
#define DOSPTYP_ONTRACK	0x54
#define	DOSPTYP_LINUX	0x83		/* That other thing */
#define DOSPTYP_FREEBSD	0xa5		/* FreeBSD partition type */
#define DOSPTYP_OPENBSD	0xa6		/* OpenBSD partition type */
#define DOSPTYP_NETBSD	0xa9		/* NetBSD partition type */

/* Isolate the relevant bits to get sector and cylinder. */
#define	DPSECT(s)	((s) & 0x3f)
#define	DPCYL(c, s)	((c) + (((s) & 0xc0) << 2))
@


1.10
log
@back out disksubr changes ... since they violate strict alignment on
some architectures (kaboom); that will be fixed in the next iteration
hopefully!
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.8 2006/10/04 00:52:55 krw Exp $	*/
a136 1
	struct dos_partition dosparts[NDOSPART];
@


1.9
log
@The dosparts member of cpu_disklabel was not used for any persistant
data. Eliminate it, and just use the data being read in while
processing MBR and EBR records.

Should be no functional change.

ok weingart@@ deraadt@@
@
text
@d137 1
@


1.8
log
@Zap bad144 bad sector info in disklabels. Sparsely used if at all for
a few obsolete and easily replaced disk models. And didn't work anyway
according to Bob, who has tried.

ok beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.7 2006/07/01 16:50:33 krw Exp $	*/
a136 1
	struct dos_partition dosparts[NDOSPART];
@


1.7
log
@Eliminate redundant get_le() in favour of letoh32(). Add letoh32()
calls in alpha, hppa, hppa64 and mips63 when accessing the two DOS MBR
u_int32_t fields dp_size and dp_start.

No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.6 2006/06/26 23:11:31 krw Exp $	*/
a80 2
#include <sys/dkbad.h>

a139 1
	struct dkbad bad;
a140 2

#define DKBAD(x) ((x)->bad)
@


1.6
log
@Clean up some inconsistancies in definitions around DOS MBR code. No
functional change.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.5 2004/11/10 10:36:12 grange Exp $	*/
a85 14

static __inline u_int32_t get_le(void *);

static __inline u_int32_t
get_le(void *p)
{
	u_int8_t *_p = (u_int8_t *)p;
	u_int32_t x;
	x = _p[0];
	x |= _p[1] << 8;
	x |= _p[2] << 16;
	x |= _p[3] << 24;
	return x;
}
@


1.5
log
@Remove __cplusplus crud.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.4 2002/09/15 09:01:58 deraadt Exp $	*/
d53 10
a62 10
	unsigned char	dp_flag;	/* default boot flag */
	unsigned char	dp_shd;	/* start head, IsN't Always Meaningful */
	unsigned char	dp_ssect;	/* start sector, INAM */
	unsigned char	dp_scyl;	/* start cylinder, INAM */
	unsigned char	dp_typ;		/* partition type */
	unsigned char	dp_ehd;	/* end head, INAM */
	unsigned char	dp_esect;	/* end sector, INAM */
	unsigned char	dp_ecyl;	/* end cylinder, INAM */
	unsigned long	dp_start;	/* absolute start sector number */
	unsigned long	dp_size;	/* partition size in sectors */
d73 1
a73 1
#define DOSPTYP_FAT16C	0x0e		/* 16-bit FAT, CHS-mapped */
d87 1
a87 1
static __inline u_int32_t get_le(void *p);
d93 1
a93 1
	int x;
@


1.4
log
@backout premature
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.2 2002/03/14 01:26:36 millert Exp $	*/
a89 1
#ifdef __cplusplus
a90 4
#else
get_le(p)
	void *p;
#endif
@


1.3
log
@KNF
@
text
@d109 2
a110 2
 * pp. 13-14.  The partition map always begins on physical block 1.
 *
d118 20
a137 20
#define PART_ENTRY_MAGIC	0x504d
	u_int16_t	pmSig;		/* partition signature */
	u_int16_t	pmSigPad;	/* (reserved) */
	u_int32_t	pmMapBlkCnt;	/* number of blocks in partition map */
	u_int32_t	pmPyPartStart;	/* first physical block of partition */
	u_int32_t	pmPartBlkCnt;	/* number of blocks in partition */
	char		pmPartName[32];	/* partition name */
	char		pmPartType[32];	/* partition type */
	u_int32_t	pmLgDataStart;	/* first logical block of data area */
	u_int32_t	pmDataCnt;	/* number of blocks in data area */
	u_int32_t	pmPartStatus;	/* partition status information */
	u_int32_t	pmLgBootStart;	/* first logical block of boot code */
	u_int32_t	pmBootSize;	/* size of boot code, in bytes */
	u_int32_t	pmBootLoad;	/* boot code load address */
	u_int32_t	pmBootLoad2;	/* (reserved) */
	u_int32_t	pmBootEntry;	/* boot code entry point */
	u_int32_t	pmBootEntry2;	/* (reserved) */
	u_int32_t	pmBootCksum;	/* boot code checksum */
	char		pmProcessor[16]; /* processor type (e.g. "68020") */
	u_int8_t	pmBootArgs[128]; /* A/UX boot arguments */
d142 1
a142 1
	u_int8_t	pad[248];	/* pad to end of block */
d146 10
a155 9
#define PART_TYPE_DRIVER	"APPLE_DRIVER"
#define PART_TYPE_DRIVER43	"APPLE_DRIVER43"
#define PART_TYPE_DRIVERATA	"APPLE_DRIVER_ATA"
#define PART_TYPE_DRIVERIOKIT	"APPLE_DRIVER_IOKIT"
#define PART_TYPE_FWDRIVER	"APPLE_FWDRIVER"
#define PART_TYPE_FWB_COMPONENT	"FWB DRIVER COMPONENTS"
#define PART_TYPE_FREE		"APPLE_FREE"
#define PART_TYPE_MAC		"APPLE_HFS"
#define PART_TYPE_OPENBSD	"OPENBSD"
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.1 2001/09/01 15:49:06 drahn Exp $	*/
d109 2
a110 2
 * pp. 13-14.  The partition map always begins on physical block 1.  
 * 
d118 20
a137 20
#define PART_ENTRY_MAGIC        0x504d
	u_int16_t       pmSig;          /* partition signature */   
	u_int16_t       pmSigPad;       /* (reserved) */
	u_int32_t       pmMapBlkCnt;    /* number of blocks in partition map */
	u_int32_t       pmPyPartStart;  /* first physical block of partition */
	u_int32_t       pmPartBlkCnt;   /* number of blocks in partition */
	char            pmPartName[32]; /* partition name */
	char            pmPartType[32]; /* partition type */
	u_int32_t       pmLgDataStart;  /* first logical block of data area */
	u_int32_t       pmDataCnt;      /* number of blocks in data area */
	u_int32_t       pmPartStatus;   /* partition status information */
	u_int32_t       pmLgBootStart;  /* first logical block of boot code */
	u_int32_t       pmBootSize;     /* size of boot code, in bytes */
	u_int32_t       pmBootLoad;     /* boot code load address */
	u_int32_t       pmBootLoad2;    /* (reserved) */
	u_int32_t       pmBootEntry;    /* boot code entry point */
	u_int32_t       pmBootEntry2;   /* (reserved) */
	u_int32_t       pmBootCksum;    /* boot code checksum */
	char            pmProcessor[16]; /* processor type (e.g. "68020") */
	u_int8_t        pmBootArgs[128]; /* A/UX boot arguments */
d142 1
a142 1
	u_int8_t        pad[248];       /* pad to end of block */
d146 9
a154 10
#define PART_TYPE_DRIVER        "APPLE_DRIVER"
#define PART_TYPE_DRIVER43      "APPLE_DRIVER43"
#define PART_TYPE_DRIVERATA     "APPLE_DRIVER_ATA"
#define PART_TYPE_DRIVERIOKIT   "APPLE_DRIVER_IOKIT"
#define PART_TYPE_FWDRIVER      "APPLE_FWDRIVER"
#define PART_TYPE_FWB_COMPONENT "FWB DRIVER COMPONENTS"
#define PART_TYPE_FREE          "APPLE_FREE"
#define PART_TYPE_MAC           "APPLE_HFS"
#define PART_TYPE_OPENBSD       "OPENBSD"

@


1.1
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/include to macppc/include
Some files were not "moved" but wrapper files were created which include
the powerpc/include version.

Several of the powerpc/include files where changed to reflect that they
are POWERPC_* not MACHINE_*.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.15 2001/06/24 04:54:21 drahn Exp $	*/
d87 1
a87 1
static __inline u_int32_t get_le __P((void *p));
@


1.1.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.1 2001/09/01 15:49:06 drahn Exp $	*/
d87 1
a87 1
static __inline u_int32_t get_le(void *p);
@


1.1.6.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.1.6.1 2002/06/11 03:36:34 art Exp $	*/
@


1.1.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1.4.2
log
@Merge in -current from about a week ago
@
text
@d87 1
a87 1
static __inline u_int32_t get_le(void *p);
@


