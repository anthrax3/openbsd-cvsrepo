head	1.11;
access;
symbols
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.22
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.20
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.16
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.18
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.14
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.12
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.6.0.14
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.12
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.10
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	UBC_SYNC_A:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.6
	UBC:1.1.0.6
	UBC_BASE:1.1
	SMP:1.1.0.4
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2014.04.01.20.27.14;	author mpi;	state dead;
branches;
next	1.10;

1.10
date	2013.08.17.08.33.11;	author mpi;	state Exp;
branches;
next	1.9;

1.9
date	2011.04.15.20.52.56;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2005.12.17.07.31.26;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.09.14.01.11;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2002.09.15.09.01.58;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.15.02.02.43;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.08.20.02.50.43;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.03.15.55;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.36;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.01.15.49.06;	author drahn;	state Exp;
branches
	1.1.4.1
	1.1.6.1;
next	;

1.1.4.1
date	2001.10.31.03.01.16;	author nate;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2002.03.28.10.36.01;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2003.03.27.23.29.46;	author niklas;	state Exp;
branches;
next	;

1.1.6.1
date	2002.06.11.03.36.34;	author art;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2002.10.29.00.28.06;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Remove the almost unused abstraction around "struct firmware" and use
instead a single function ppc_mem_regions() required by the ppc pmap.

ok kettenis@@
@
text
@/*	$OpenBSD: powerpc.h,v 1.10 2013/08/17 08:33:11 mpi Exp $	*/
/*	$NetBSD: powerpc.h,v 1.1 1996/09/30 16:34:30 ws Exp $	*/

/*
 * Copyright (C) 1996 Wolfgang Solfrank.
 * Copyright (C) 1996 TooLs GmbH.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef	_MACHINE_POWERPC_H_
#define	_MACHINE_POWERPC_H_

struct mem_region {
	vaddr_t start;
	vsize_t size;
};

void mem_regions(struct mem_region **, struct mem_region **);

/*
 * These two functions get used solely in boot() in machdep.c.
 *
 * Not sure whether boot itself should be implementation dependent instead.	XXX
 */
typedef void (exit_f)(void) /*__attribute__((__noreturn__))*/ ;
typedef void (boot_f)(char *bootspec) /* __attribute__((__noreturn__))*/ ;
typedef void (vmon_f)(void);

/* firmware interface.
 * regardless of type of firmware used several items
 * are need from firmware to boot up.
 * these include:
 *	memory information
 *	vmsetup for firmware calls.
 *	default character print mechanism ???
 *	firmware exit (return)
 *	firmware boot (reset)
 *	vmon - tell firmware the bsd vm is active.
 */

typedef void (mem_regions_f)(struct mem_region **memp,
	struct mem_region **availp);

struct firmware {
	mem_regions_f	*mem_regions;
	exit_f		*exit;
	boot_f		*boot;
	vmon_f		*vmon;
	
#ifdef FW_HAS_PUTC
	boot_f		*putc;
#endif
};
extern  struct firmware *fw;
void install_extint(void (*handler) (void));
void ppc_intr_enable(int enable);
int ppc_intr_disable(void);

extern int intr_shared_edge;

struct dumpmem {
	vaddr_t         start;
	vsize_t         end;
};
extern struct dumpmem dumpmem[VM_PHYSSEG_MAX];
extern u_int ndumpmem;
extern vaddr_t dumpspace;
#endif	/* _MACHINE_POWERPC_H_ */
@


1.10
log
@Remove a bunch of unused variables and functions aging from the pre
powerpc -> macppc area.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.9 2011/04/15 20:52:56 deraadt Exp $	*/
@


1.9
log
@More than a decade ago, interrupt handlers on sparc started returning 0
(interrupt was not for me), 1 (positive interrupt was for me), or -1
(i am not sure...).  We have continued with this practice in as many
drivers as possible, throughout the tree.

This makes some of the architectures use that information in their
interrupt handler calling code -- if 1 is returned (and we know
this specific machine does not have edge-shared interrupts), we
finish servicing other possible handlers on the same pin.  If the
interrupt pin remains asserted (from a different device), we will
end up back in the interrupt servicing code of course... but this is
cheaper than calling all the chained interrupts on a pin.

This does of course count on shared level interrupts being properly
sorted by IPL.

There have been some concerns about starvation of drivers which
incorrectly return 1.  Those drivers should be hunted down so that
they return -1.

ok drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.8 2005/12/17 07:31:26 miod Exp $	*/
a78 2
int ppc_open_pci_bridge(void);
void ppc_close_pci_bridge(int);
@


1.8
log
@Get rid of deprecated vm_{offset,size}_t types for good, use {p,v}{addr,size}_t
instead; looked at millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.7 2005/10/09 14:01:11 drahn Exp $	*/
d84 2
@


1.7
log
@Nearly functional crashdump support for macppc. Because savecore
does not recognize the resulting crashdumps, the writing has been disabled.
Better here than in my forest of trees.
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.6 2002/09/15 09:01:58 deraadt Exp $	*/
d38 2
a39 2
	vm_offset_t start;
	vm_size_t size;
d87 1
a87 1
	vm_size_t       end;
@


1.6
log
@backout premature
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.4 2002/08/20 02:50:43 drahn Exp $	*/
d85 7
@


1.5
log
@KNF
@
text
@d73 1
a73 1

@


1.4
log
@Add a pseudo openfirmware console device for early debugging purposes
and to allow UKC to work properly. ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.3 2002/03/14 03:15:55 millert Exp $	*/
d73 1
a73 1
	
@


1.3
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.2 2002/03/14 01:26:36 millert Exp $	*/
a78 1
void ofwconprobe(void);
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.1 2001/09/01 15:49:06 drahn Exp $	*/
d82 1
a82 1
void install_extint __P((void (*handler) (void)));
@


1.1
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/include to macppc/include
Some files were not "moved" but wrapper files were created which include
the powerpc/include version.

Several of the powerpc/include files where changed to reflect that they
are POWERPC_* not MACHINE_*.
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.6 2001/06/29 06:07:09 drahn Exp $	*/
d42 1
a42 1
void mem_regions __P((struct mem_region **, struct mem_region **));
d49 3
a51 3
typedef void (exit_f) __P((void)) /*__attribute__((__noreturn__))*/ ;
typedef void (boot_f) __P((char *bootspec)) /* __attribute__((__noreturn__))*/ ;
typedef void (vmon_f) __P((void));
d65 2
a66 2
typedef void (mem_regions_f)__P((struct mem_region **memp,
	struct mem_region **availp));
d80 2
a81 2
int ppc_open_pci_bridge __P((void));
void ppc_close_pci_bridge __P((int));
d83 2
a84 2
void ppc_intr_enable __P((int enable));
int ppc_intr_disable __P((void));
@


1.1.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.1 2001/09/01 15:49:06 drahn Exp $	*/
d42 1
a42 1
void mem_regions(struct mem_region **, struct mem_region **);
d49 3
a51 3
typedef void (exit_f)(void) /*__attribute__((__noreturn__))*/ ;
typedef void (boot_f)(char *bootspec) /* __attribute__((__noreturn__))*/ ;
typedef void (vmon_f)(void);
d65 2
a66 2
typedef void (mem_regions_f)(struct mem_region **memp,
	struct mem_region **availp);
d80 5
a84 5
int ppc_open_pci_bridge(void);
void ppc_close_pci_bridge(int);
void install_extint(void (*handler) (void));
void ppc_intr_enable(int enable);
int ppc_intr_disable(void);
@


1.1.6.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.1.6.1 2002/06/11 03:36:34 art Exp $	*/
d79 1
@


1.1.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1.4.2
log
@Merge in -current from about a week ago
@
text
@d42 1
a42 1
void mem_regions(struct mem_region **, struct mem_region **);
d49 3
a51 3
typedef void (exit_f)(void) /*__attribute__((__noreturn__))*/ ;
typedef void (boot_f)(char *bootspec) /* __attribute__((__noreturn__))*/ ;
typedef void (vmon_f)(void);
d65 2
a66 2
typedef void (mem_regions_f)(struct mem_region **memp,
	struct mem_region **availp);
d80 5
a84 5
int ppc_open_pci_bridge(void);
void ppc_close_pci_bridge(int);
void install_extint(void (*handler) (void));
void ppc_intr_enable(int enable);
int ppc_intr_disable(void);
@


1.1.4.3
log
@Sync the SMP branch with 3.3
@
text
@d79 1
@


