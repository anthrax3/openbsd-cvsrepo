head	1.5;
access;
symbols
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.3.0.2
	UBC_BASE:1.3
	SMP:1.2.0.4
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2002.06.08.16.02.13;	author miod;	state dead;
branches;
next	1.4;

1.4
date	2002.03.14.03.15.56;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.06.19.53.15;	author miod;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2001.09.09.23.56.40;	author drahn;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2001.09.01.15.44.20;	author drahn;	state Exp;
branches;
next	;

1.2.4.1
date	2001.10.31.03.01.16;	author nate;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2001.11.13.21.00.53;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2002.03.28.10.36.01;	author niklas;	state Exp;
branches;
next	1.2.4.4;

1.2.4.4
date	2003.03.27.23.29.46;	author niklas;	state dead;
branches;
next	;

1.3.2.1
date	2002.06.11.03.36.34;	author art;	state dead;
branches;
next	;


desc
@@


1.5
log
@One ddb to rule them all.

Move the ddb files form macppc/macppc to powerpc/ddb, so that mvmeppc
can benefit from the better ddb that was in macppc.
db_interface.c is left as an md part.
@
text
@/*	$NetBSD: db_memrw.c,v 1.4 2001/05/18 20:38:27 matt Exp $	*/
/*	$OpenBSD: db_memrw.c,v 1.4 2002/03/14 03:15:56 millert Exp $	*/

/* 
 * Mach Operating System
 * Copyright (c) 1992 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon 
 * the rights to redistribute these changes.
 */

/*
 * Interface to the debugger for virtual memory read/write.
 * This is a simple version for kernels with writable text.
 * For an example of read-only kernel text, see the file:
 * sys/arch/sun3/sun3/db_memrw.c
 *
 * ALERT!  If you want to access device registers with a
 * specific size, then the read/write functions have to
 * make sure to do the correct sized pointer access.
 */

#include <sys/param.h>
#include <sys/proc.h>
#include <sys/systm.h>

#include <uvm/uvm_extern.h>

#include <machine/db_machdep.h>
#include <machine/pcb.h>

#include <ddb/db_access.h>

/*
 * Read bytes from kernel address space for debugger.
 */
void
db_read_bytes(addr, size, data)
	vaddr_t		addr;
	register size_t	size;
	register char	*data;
{
	register char	*src = (char *)addr;
	faultbuf env;
	faultbuf *old_onfault = curpcb->pcb_onfault;
	if (setfault(env)) {
		curpcb->pcb_onfault = old_onfault;
		return;
	}

	if (size == 4) {
		*((int *)data) = *((int *)src);
	} else if (size == 2) {
		*((short *)data) = *((short *)src);
	} else {
		while (size > 0) {
			--size;
			*data++ = *src++;
		}
	}
	curpcb->pcb_onfault = old_onfault;
}

/*
 * Write bytes to kernel address space for debugger.
 */
void
db_write_bytes(addr, size, data)
	vaddr_t		addr;
	register size_t	size;
	register char	*data;
{
	register char	*dst = (char *)addr;
	faultbuf env;
	faultbuf *old_onfault = curpcb->pcb_onfault;

	if (setfault(env)) {
		curpcb->pcb_onfault = old_onfault;
		return;
	}

	if (size == 4) {
		*((int *)dst) = *((int *)data);
	} else if (size == 2) {
		*((short *)dst) = *((short *)data);
	} else  {
		while (size > 0) {
			--size;
			*dst++ = *data++;
		}
	}
	syncicache((void *)addr, size);
	curpcb->pcb_onfault = old_onfault;
}

@


1.4
log
@Final __P removal plus some cosmetic fixups
@
text
@d2 1
a2 1
/*	$OpenBSD: db_memrw.c,v 1.3 2001/11/06 19:53:15 miod Exp $	*/
@


1.3
log
@Replace inclusion of <vm/foo.h> with the correct <uvm/bar.h> when necessary.
(Look ma, I might have broken the tree)
@
text
@d2 1
a2 1
/*	$OpenBSD: db_memrw.c,v 1.2 2001/09/09 23:56:40 drahn Exp $	*/
d61 1
a61 1
	register char	*src = (char*)addr;
d70 1
a70 1
		*((int*)data) = *((int*)src);
d72 1
a72 1
		*((short*)data) = *((short*)src);
d101 1
a101 1
		*((int*)dst) = *((int*)data);
d103 1
a103 1
		*((short*)dst) = *((short*)data);
@


1.3.2.1
log
@Sync UBC branch to -current
@
text
@d2 1
a2 1
/*	$OpenBSD: db_memrw.c,v 1.3 2001/11/06 19:53:15 miod Exp $	*/
@


1.2
log
@Protect debugger accesses with setfault. Should improve debugger usability,
need to verify that kernel exception code deals with this properly.
@
text
@d2 1
a2 1
/*	$OpenBSD: db_memrw.c,v 1.1 2001/09/01 15:44:20 drahn Exp $	*/
d45 1
a45 1
#include <vm/vm.h>
@


1.2.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d2 1
a2 1
/*	$OpenBSD$	*/
@


1.2.4.2
log
@Merge in -current
@
text
@d45 1
a45 1
#include <uvm/uvm_extern.h>
@


1.2.4.3
log
@Merge in -current from about a week ago
@
text
@d61 1
a61 1
	register char	*src = (char *)addr;
d70 1
a70 1
		*((int *)data) = *((int *)src);
d72 1
a72 1
		*((short *)data) = *((short *)src);
d101 1
a101 1
		*((int *)dst) = *((int *)data);
d103 1
a103 1
		*((short *)dst) = *((short *)data);
@


1.2.4.4
log
@Sync the SMP branch with 3.3
@
text
@d2 1
a2 1
/*	$OpenBSD: db_memrw.c,v 1.2.4.3 2002/03/28 10:36:01 niklas Exp $	*/
@


1.1
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/powerpc to macppc/macppc

This moves hardware specific files from the common directory to the
platform specific directory. This leaves common files.
With this change all of the debugger (db_) files have been moved to
the platform specific directory. The debugger should be reconsidered
and commonized.
@
text
@d2 1
a2 1
/*	$OpenBSD: db_memrw.c,v 1.3 2001/06/24 22:00:13 drahn Exp $	*/
d48 1
d62 6
d71 1
a71 4
		return;
	}

	if (size == 2) {
d73 5
a77 6
		return;
	}

	while (size > 0) {
		--size;
		*data++ = *src++;
d79 1
d92 2
d95 2
a96 2
	if (size == 4) {
		*((int*)dst) = *((int*)data);
d100 3
a102 1
	if (size == 2) {
d104 5
a108 6
		return;
	}

	while (size > 0) {
		--size;
		*dst++ = *data++;
d111 1
@

