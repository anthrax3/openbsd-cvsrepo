head	1.23;
access;
symbols
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.15.0.2
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.14.0.2
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.2
	OPENBSD_5_0:1.12.0.4
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.2
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.11.0.18
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.14
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.16
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.12
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.10
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.8
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.6
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.4
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.10.0.10
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.8
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.6
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.9
	UBC:1.2.0.2
	UBC_BASE:1.2
	SMP:1.1.0.4
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.23
date	2013.08.27.21.00.53;	author mpi;	state dead;
branches;
next	1.22;

1.22
date	2013.08.17.10.59.38;	author mpi;	state Exp;
branches;
next	1.21;

1.21
date	2013.08.17.09.15.47;	author mpi;	state Exp;
branches;
next	1.20;

1.20
date	2013.08.12.08.03.56;	author mpi;	state Exp;
branches;
next	1.19;

1.19
date	2013.06.04.02.29.32;	author mpi;	state Exp;
branches;
next	1.18;

1.18
date	2013.06.04.02.20.18;	author mpi;	state Exp;
branches;
next	1.17;

1.17
date	2013.06.04.02.16.14;	author mpi;	state Exp;
branches;
next	1.16;

1.16
date	2013.06.03.23.28.43;	author mpi;	state Exp;
branches;
next	1.15;

1.15
date	2012.08.30.21.54.13;	author mpi;	state Exp;
branches;
next	1.14;

1.14
date	2012.06.21.10.08.16;	author mpi;	state Exp;
branches;
next	1.13;

1.13
date	2012.01.29.14.20.42;	author mpi;	state Exp;
branches;
next	1.12;

1.12
date	2010.11.27.18.31.53;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2006.04.09.12.22.56;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2003.11.12.20.08.31;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2002.09.15.09.01.59;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.09.15.02.02.44;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.22.21.00.03;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.29.01.34.58;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.26.16.51.43;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.03.15.56;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.37;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.31.12.26.18;	author art;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.09.01.15.55.18;	author drahn;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.10.31.03.01.16;	author nate;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2001.11.13.21.00.53;	author niklas;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2002.03.28.10.36.01;	author niklas;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2003.03.27.23.29.46;	author niklas;	state Exp;
branches;
next	1.1.4.5;

1.1.4.5
date	2004.02.19.10.49.04;	author niklas;	state Exp;
branches;
next	;

1.2.2.1
date	2002.06.11.03.36.34;	author art;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2002.10.29.00.28.06;	author art;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Since we are no longer attaching radeondrm(4) to this driver there is
no reason to pretend being compatible with the MI vga layer.  So stop
using the vga_pci_bar interface and reduce the differences with the
sparc64 driver.
@
text
@/*	$OpenBSD: vgafbvar.h,v 1.22 2013/08/17 10:59:38 mpi Exp $	*/
/*	$NetBSD: vgavar.h,v 1.2 1996/11/23 06:06:43 cgd Exp $	*/

/*
 * Copyright (c) 1995, 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

struct vga_config {
	/*
	 * Filled in by front-ends.
	 */
	bus_space_tag_t		vc_memt;
	bus_space_handle_t	vc_memh;

	/* Colormap */
	u_char vc_cmap_red[256];
	u_char vc_cmap_green[256];
	u_char vc_cmap_blue[256];

	struct rasops_info	ri;

	bus_addr_t	membase;
	bus_size_t	memsize;

	bus_addr_t	mmiobase;
	bus_size_t	mmiosize;

	int vc_backlight_on;
	u_int vc_mode;
};

int	vgafb_cnattach(bus_space_tag_t, bus_space_tag_t, int, int);
int	vgafb_is_console(int);

void	vgafb_wsdisplay_attach(struct device *, struct vga_config *);
@


1.22
log
@Because vgafb(4) only match the console, no need for an additional check
when setting up multiple screens and don't clear the screen again at this
moment.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.21 2013/08/17 09:15:47 mpi Exp $	*/
@


1.21
log
@Merge vgafb_init() into vgafb_cnattach() now that it is not used anywhere
else and pass the RI_FULLCLEAR flag to rasops_init() instead of clearing
the region directly.  This also makes the console to be correctly restored
when exiting X.  Previously a line at the bottom of the screen was never
cleared.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.20 2013/08/12 08:03:56 mpi Exp $	*/
d58 1
a58 1
void	vgafb_wsdisplay_attach(struct device *, struct vga_config *, int);
@


1.20
log
@Match the framebuffer device against its OpenFirmware node in order
to share the console detection logic with sparc64 in radeondrm(4).

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.19 2013/06/04 02:29:32 mpi Exp $	*/
a57 2
void	vgafb_init(bus_space_tag_t, bus_space_tag_t,
	    struct vga_config *, u_int32_t, size_t);
@


1.19
log
@Add support for virtual consoles, based on previous work done by kettenis@@
for inteldrm(4).

ok miod@@, kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.18 2013/06/04 02:20:18 mpi Exp $	*/
d56 1
@


1.18
log
@Move function declaration where they belong.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.17 2013/06/04 02:16:14 mpi Exp $	*/
a51 1
	int nscreens;
@


1.17
log
@Do not pretend mapping the MMIO region when in fact we don't and
clean some related code.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.16 2013/06/03 23:28:43 mpi Exp $	*/
d56 2
a59 3
void	vgafb_wscons_attach(struct device *, struct vga_config *, int);
void	vgafb_wscons_console(struct vga_config *);
int	vgafb_cnattach(bus_space_tag_t, bus_space_tag_t, int, int);
a60 10
int	vgafbioctl(void *, u_long, caddr_t, int, struct proc *);
paddr_t	vgafbmmap(void *, off_t, int);
int	vgafb_ioctl(void *, u_long, caddr_t, int, struct proc *);
paddr_t	vgafb_mmap(void *, off_t, int);
int	vgafb_alloc_screen(void *v, const struct wsscreen_descr *type,
	    void **cookiep, int *curxp, int *curyp, long *attrp);
void	vgafb_free_screen(void *v, void *cookie);
int	vgafb_show_screen(void *v, void *cookie, int waitok,
	    void (*cb)(void *, int, int), void *cbarg);
void	vgafb_burn(void *v, u_int on, u_int flags);
@


1.16
log
@There's no reason to have a separate structure to hold and duplicate
the raster display data.  Simplify this by using only one pointer to
a struct rasops_info, the one in vga_config.

While here remove unused fields from vga_config.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.15 2012/08/30 21:54:13 mpi Exp $	*/
d35 3
a37 3
	bus_space_tag_t	vc_iot, vc_memt;
	bus_space_handle_t vc_memh, vc_mmioh;
	paddr_t		vc_paddr; /* physical address */
a42 5

	int	(*vc_ioctl)(void *, u_long,
		    caddr_t, int, struct proc *);
	paddr_t	(*vc_mmap)(void *, off_t, int);

d57 1
a57 1
	    struct vga_config *, u_int32_t, size_t, u_int32_t, size_t);
@


1.15
log
@Determine the memory and mmio regions based on previously initialzed BAR
structures and add the necessary glue to attach drm(4).

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.14 2012/06/21 10:08:16 mpi Exp $	*/
a42 9
	/*
	 * Private to back-end.
	 */
	int		vc_ncol, vc_nrow; /* screen width & height */
	int		vc_ccol, vc_crow; /* current cursor position */

	char		vc_so;		/* in standout mode? */
	char		vc_at;		/* normal attributes */
	char		vc_so_at;	/* standout attributes */
d48 1
a48 1
	struct rasops_info    dc_rinfo;       /* raster display data*/
@


1.14
log
@Only allow the memory and mmio regions to be mmap()'ed at their real
addresses, remove the magic value to uniformize access to the mmio and
doesn't map the unused pseudo-vga registers.

While here simplify the console attachement logic and removed some
unused global variables. Tested by matthieu@@ and myself on various
different G3 and G4 models.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.13 2012/01/29 14:20:42 mpi Exp $	*/
d31 1
a31 1
struct vgafb_config {
d71 3
a73 3
	    struct vgafb_config *, u_int32_t, size_t, u_int32_t, size_t);
void	vgafb_wscons_attach(struct device *, struct vgafb_config *, int);
void	vgafb_wscons_console(struct vgafb_config *);
d75 1
a75 2
void	vgafb_wsdisplay_attach(struct device *parent,
	    struct vgafb_config *vc, int console);
@


1.13
log
@Start cleaning vgafb(4) to be make it more like vga(4). Remove unused
function and move vgafb functions to there right place.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.12 2010/11/27 18:31:53 miod Exp $	*/
a34 1
	int vc_ofh; /* openfirmware handle */
d36 1
a36 1
	bus_space_handle_t vc_ioh_b, vc_ioh_c, vc_ioh_d, vc_memh, vc_mmioh;
d70 2
a71 3
void	vgafb_common_setup(bus_space_tag_t, bus_space_tag_t,
	    struct vgafb_config *, u_int32_t, size_t, u_int32_t, size_t,
	    u_int32_t, size_t);
d74 1
a74 2
void	vgafb_cnattach(bus_space_tag_t iot, bus_space_tag_t memt,
	    void *pc, int bus, int device, int function);
@


1.12
log
@Remove unused vgafb_cnprobe().
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.11 2006/04/09 12:22:56 matthieu Exp $	*/
a70 2
int	vgafb_common_probe(bus_space_tag_t, bus_space_tag_t,
	u_int32_t, size_t, u_int32_t, size_t, u_int32_t, size_t );
@


1.11
log
@On macppc and sparc64, if allowaperture=0 only allow mmap()-ing of
the framebuffer memory in WSDISPLAYIO_MODE_DUMBFB mode.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.10 2003/11/12 20:08:31 miod Exp $	*/
a77 1
void	vgafb_cnprobe(struct consdev *cp);
@


1.10
log
@Be sure to cast the wsdisplay accessops cookie into the adequate structure;
prevents wsconscfg from panic'ing the system.

Reported by ``kluxis''.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.9 2002/09/15 09:01:59 deraadt Exp $	*/
d68 1
@


1.9
log
@backout premature
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.7 2002/05/22 21:00:03 miod Exp $	*/
d67 1
@


1.8
log
@KNF
@
text
@d58 1
a58 1
	struct rasops_info    dc_rinfo;	/* raster display data*/
@


1.7
log
@- in the OpenFirmware console initialisation, check if the console device
has support for backlight control (laptops do, and probably machines with
a built-in monitor do as well).
- provide a function to set the screen brightness as well.
- use both changes above to add a screen blanker to the vgafb driver
- let the screen brightness and backlight be controlled via wsconsctl
- clean dust, KNF, and more symbolic names in the vgafb driver to make it
better readable

Initial code by myself, with some hacks from drahn@@ later.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.6 2002/04/29 01:34:58 drahn Exp $	*/
d58 1
a58 1
	struct rasops_info    dc_rinfo;       /* raster display data*/
@


1.6
log
@Change macppc vgafb from rcons to rasops, a faster color supporting virtual
terminal emulator for gfx console. tested by mattheiu, miod.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.5 2002/03/26 16:51:43 drahn Exp $	*/
a59 3
	bus_addr_t	iobase;
	bus_size_t	iosize;

d65 2
d90 1
@


1.5
log
@Only allow valid device PAs to be mmapped.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.4 2002/03/14 03:15:56 millert Exp $	*/
d57 2
a58 4
	#if 0
	struct raster   dc_raster;      /* raster description */
	#endif
	struct rcons    dc_rcons;       /* raster blitter control info */
@


1.4
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.3 2002/03/14 01:26:37 millert Exp $	*/
d62 8
a69 1
	
@


1.3
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.2 2001/10/31 12:26:18 art Exp $	*/
d84 2
a85 2
int	vgafb_show_screen __P((void *v, void *cookie, int waitok,
	    void (*cb)(void *, int, int), void *cbarg));
@


1.2
log
@Change the internal vc_mmap from returning int to paddr_t.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.1 2001/09/01 15:55:18 drahn Exp $	*/
d54 3
a56 3
	int	(*vc_ioctl) __P((void *, u_long,
		    caddr_t, int, struct proc *));
	paddr_t	(*vc_mmap) __P((void *, off_t, int));
d65 3
a67 3
int	vgafb_common_probe __P((bus_space_tag_t, bus_space_tag_t,
	u_int32_t, size_t, u_int32_t, size_t, u_int32_t, size_t ));
void	vgafb_common_setup __P((bus_space_tag_t, bus_space_tag_t,
d69 15
a83 15
	    u_int32_t, size_t));
void	vgafb_wscons_attach __P((struct device *, struct vgafb_config *, int));
void	vgafb_wscons_console __P((struct vgafb_config *));
void	vgafb_cnprobe __P((struct consdev *cp));
void	vgafb_cnattach __P((bus_space_tag_t iot, bus_space_tag_t memt,
	    void *pc, int bus, int device, int function));
void	vgafb_wsdisplay_attach __P((struct device *parent,
	    struct vgafb_config *vc, int console));
int	vgafbioctl __P((void *, u_long, caddr_t, int, struct proc *));
paddr_t	vgafbmmap __P((void *, off_t, int));
int	vgafb_ioctl __P((void *, u_long, caddr_t, int, struct proc *));
paddr_t	vgafb_mmap __P((void *, off_t, int));
int	vgafb_alloc_screen __P((void *v, const struct wsscreen_descr *type,
	    void **cookiep, int *curxp, int *curyp, long *attrp));
void	vgafb_free_screen __P((void *v, void *cookie));
d85 1
a85 1
	    void (*cb) __P((void *, int, int)), void *cbarg));
@


1.2.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.2 2001/10/31 12:26:18 art Exp $	*/
d54 7
a60 3
	int	(*vc_ioctl)(void *, u_long,
		    caddr_t, int, struct proc *);
	paddr_t	(*vc_mmap)(void *, off_t, int);
d62 1
a62 9
	struct rasops_info    dc_rinfo;       /* raster display data*/

	bus_addr_t	membase;
	bus_size_t	memsize;

	bus_addr_t	mmiobase;
	bus_size_t	mmiosize;

	int vc_backlight_on;
d65 3
a67 3
int	vgafb_common_probe(bus_space_tag_t, bus_space_tag_t,
	u_int32_t, size_t, u_int32_t, size_t, u_int32_t, size_t );
void	vgafb_common_setup(bus_space_tag_t, bus_space_tag_t,
d69 17
a85 18
	    u_int32_t, size_t);
void	vgafb_wscons_attach(struct device *, struct vgafb_config *, int);
void	vgafb_wscons_console(struct vgafb_config *);
void	vgafb_cnprobe(struct consdev *cp);
void	vgafb_cnattach(bus_space_tag_t iot, bus_space_tag_t memt,
	    void *pc, int bus, int device, int function);
void	vgafb_wsdisplay_attach(struct device *parent,
	    struct vgafb_config *vc, int console);
int	vgafbioctl(void *, u_long, caddr_t, int, struct proc *);
paddr_t	vgafbmmap(void *, off_t, int);
int	vgafb_ioctl(void *, u_long, caddr_t, int, struct proc *);
paddr_t	vgafb_mmap(void *, off_t, int);
int	vgafb_alloc_screen(void *v, const struct wsscreen_descr *type,
	    void **cookiep, int *curxp, int *curyp, long *attrp);
void	vgafb_free_screen(void *v, void *cookie);
int	vgafb_show_screen(void *v, void *cookie, int waitok,
	    void (*cb)(void *, int, int), void *cbarg);
void	vgafb_burn(void *v, u_int on, u_int flags);
@


1.2.2.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.2.2.1 2002/06/11 03:36:34 art Exp $	*/
@


1.1
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/pci to macppc/pci

The file pci_machdep.h was not moved in this conversion.
It needs to be check if it is correct that should be the only shared
powerpc/pci file. Or if that file too should be MD, or more files MI.
@
text
@d1 1
a1 1
/*	$OpenBSD: vgafbvar.h,v 1.3 2001/07/09 03:54:41 mickey Exp $	*/
d56 1
a56 1
	int	(*vc_mmap) __P((void *, off_t, int));
d78 1
a78 1
int	vgafbmmap __P((void *, off_t, int));
@


1.1.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1.4.2
log
@Merge in -current
@
text
@d56 1
a56 1
	paddr_t	(*vc_mmap) __P((void *, off_t, int));
d78 1
a78 1
paddr_t	vgafbmmap __P((void *, off_t, int));
@


1.1.4.3
log
@Merge in -current from about a week ago
@
text
@d54 3
a56 3
	int	(*vc_ioctl)(void *, u_long,
		    caddr_t, int, struct proc *);
	paddr_t	(*vc_mmap)(void *, off_t, int);
d65 3
a67 3
int	vgafb_common_probe(bus_space_tag_t, bus_space_tag_t,
	u_int32_t, size_t, u_int32_t, size_t, u_int32_t, size_t );
void	vgafb_common_setup(bus_space_tag_t, bus_space_tag_t,
d69 17
a85 17
	    u_int32_t, size_t);
void	vgafb_wscons_attach(struct device *, struct vgafb_config *, int);
void	vgafb_wscons_console(struct vgafb_config *);
void	vgafb_cnprobe(struct consdev *cp);
void	vgafb_cnattach(bus_space_tag_t iot, bus_space_tag_t memt,
	    void *pc, int bus, int device, int function);
void	vgafb_wsdisplay_attach(struct device *parent,
	    struct vgafb_config *vc, int console);
int	vgafbioctl(void *, u_long, caddr_t, int, struct proc *);
paddr_t	vgafbmmap(void *, off_t, int);
int	vgafb_ioctl(void *, u_long, caddr_t, int, struct proc *);
paddr_t	vgafb_mmap(void *, off_t, int);
int	vgafb_alloc_screen(void *v, const struct wsscreen_descr *type,
	    void **cookiep, int *curxp, int *curyp, long *attrp);
void	vgafb_free_screen(void *v, void *cookie);
int	vgafb_show_screen(void *v, void *cookie, int waitok,
	    void (*cb)(void *, int, int), void *cbarg);
@


1.1.4.4
log
@Sync the SMP branch with 3.3
@
text
@d57 4
d62 1
a62 9
	struct rasops_info    dc_rinfo;       /* raster display data*/

	bus_addr_t	membase;
	bus_size_t	memsize;

	bus_addr_t	mmiobase;
	bus_size_t	mmiosize;

	int vc_backlight_on;
a85 1
void	vgafb_burn(void *v, u_int on, u_int flags);
@


1.1.4.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a66 1
	int nscreens;
@


