head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.6
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.5.0.10
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.14
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.12
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.8
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.24
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.22
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.20
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.16
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.18
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.14
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.12
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.10
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.8
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.6
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.1
	OPENBSD_3_3:1.1.0.12
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.10
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.1
	UBC:1.1.0.6
	UBC_BASE:1.1
	SMP:1.1.0.4
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.03.14.20.52.41;	author miod;	state Exp;
branches;
next	1.5;
commitid	b7GHvl57Bcg5ZICf;

1.5
date	2011.11.19.16.15.11;	author mpi;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.26.19.55.47;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2003.10.16.04.30.09;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.01.17.00.36;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.01.15.39.02;	author drahn;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.10.31.03.01.16;	author nate;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.06.07.11.13.14;	author ho;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2004.02.19.10.49.04;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Allow for multiple concurrent devopen() calls, and fill the .readdir member
of fs_ops; makes the `ls' command finally work in the boot loader.
@
text
@/*	$OpenBSD: hfs.c,v 1.5 2011/11/19 16:15:11 mpi Exp $	*/
/*	$NetBSD: hfs.c,v 1.1 2000/11/14 11:25:35 tsubai Exp $	*/

/*-
 * Copyright (c) 2000 Tsubai Masanari.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <lib/libkern/libkern.h>
#include <lib/libsa/stand.h>

#include <openfirm.h>
#include <hfs.h>

static int OF_fd;	/* XXX */

int
hfs_open(char *path, struct open_file *f)
{
	int chosen;
	char bootpath[128], *cp;

	if ((chosen = OF_finddevice("/chosen")) == -1)
		return ENXIO;
	bzero(bootpath, sizeof bootpath);
	OF_getprop(chosen, "bootpath", bootpath, sizeof bootpath);

	cp = strrchr(bootpath, ',');
	if (cp == NULL)
		return ENXIO;

	strlcpy(cp + 1, path, bootpath + sizeof bootpath - (cp + 1));
	OF_fd = OF_open(bootpath);
	if (OF_fd == -1)
		return ENOENT;
	return 0;
}

int
hfs_close(struct open_file *f)
{
	OF_close(OF_fd);
	return 0;
}

int
hfs_read(struct open_file *f, void *start, size_t size, size_t *resid)
{
	int len;

	len = OF_read(OF_fd, start, size);
	if (len == -1)
		return EIO;
	size -= len;
	if (resid)
		*resid = size;
	return 0;
}

int
hfs_write(struct open_file *f, void *start, size_t size, size_t *resid)
{
	printf("hfs_write\n");
	return ENXIO;
}

off_t
hfs_seek(struct open_file *f, off_t offset, int where)
{
	switch (where) {
	case SEEK_SET:
		return OF_seek(OF_fd, offset);
	case SEEK_CUR:
	case SEEK_END:
	default:
		return -1;
	}
}

int
hfs_stat(struct open_file *f, struct stat *sb)
{
	return 0;
}

int
hfs_readdir(struct open_file *f, char *name)
{
	return ENXIO;
}
@


1.5
log
@Remove unused function forgotten during the switch to the interactive
bootloader and make use of strrchr() in hfs_open because we have it.

ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hfs.c,v 1.4 2005/09/26 19:55:47 kettenis Exp $	*/
d106 6
@


1.4
log
@Return EIO if reading fails.
ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hfs.c,v 1.3 2003/10/16 04:30:09 drahn Exp $	*/
a49 1
#ifdef HAVE_STAND_STRRCHR
a50 10
#else
	cp = bootpath;
	cp += strlen(bootpath);
	for (; *cp != ','; cp--) {
		if (cp == bootpath) {
			cp = NULL;
			break;
		}
	}
#endif
@


1.3
log
@There is no end to the ANSI/KNF journey.
@
text
@d1 1
a1 1
/*	$OpenBSD: hfs.c,v 1.3 2003/10/16 04:26:36 drahn Exp $	*/
d85 2
@


1.2
log
@strcpy/strcat/sprintf removal in all bootblocks.  various testing by
various people.  outside of some messy things in src/gnu, only one
thing in the main tree now violates this rule: bind
@
text
@d1 1
a1 1
/*	$OpenBSD: hfs.c,v 1.1 2001/09/01 15:39:02 drahn Exp $	*/
d40 1
a40 3
hfs_open(path, f)
	char *path;
	struct open_file *f;
d73 1
a73 2
hfs_close(f)
	struct open_file *f;
d80 1
a80 4
hfs_read(f, start, size, resid)
	struct open_file *f;
	void *start;
	size_t size, *resid;
d92 1
a92 4
hfs_write(f, start, size, resid)
	struct open_file *f;
	void *start;
	size_t size, *resid;
d99 1
a99 4
hfs_seek(f, offset, where)
	struct open_file *f;
	off_t offset;
	int where;
d112 1
a112 3
hfs_stat(f, sb)
	struct open_file *f;
	struct stat *sb;
@


1.1
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/stand to macppc/stand
@
text
@d1 1
a1 1
/*	$OpenBSD: hfs.c,v 1.1 2001/02/09 05:22:05 drahn Exp $	*/
a46 1

d56 1
a56 1
	cp += strlen (bootpath);
d67 1
a67 1
	strcpy(cp + 1, path);
a70 1

@


1.1.4.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1.4.2
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: hfs.c,v 1.1.4.1 2001/10/31 03:01:16 nate Exp $	*/
d47 1
d57 1
a57 1
	cp += strlen(bootpath);
d68 1
a68 1
	strlcpy(cp + 1, path, bootpath + sizeof bootpath - (cp + 1));
d72 1
@


1.1.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 3
a42 1
hfs_open(char *path, struct open_file *f)
d75 2
a76 1
hfs_close(struct open_file *f)
d83 4
a86 1
hfs_read(struct open_file *f, void *start, size_t size, size_t *resid)
d98 4
a101 1
hfs_write(struct open_file *f, void *start, size_t size, size_t *resid)
d108 4
a111 1
hfs_seek(struct open_file *f, off_t offset, int where)
d124 3
a126 1
hfs_stat(struct open_file *f, struct stat *sb)
@


