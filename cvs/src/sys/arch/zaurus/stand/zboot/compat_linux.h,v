head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.2
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.8.0.34
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.36
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.28
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.32
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.30
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.26
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.24
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.22
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.20
	OPENBSD_5_0:1.8.0.18
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.16
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.14
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.10
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.12
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.8
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.6
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.4
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.7.0.8
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.6
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.4
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4;
locks; strict;
comment	@ * @;


1.10
date	2016.03.02.15.14.44;	author naddy;	state Exp;
branches;
next	1.9;
commitid	VZuSg723VARujE8g;

1.9
date	2016.02.28.15.36.25;	author naddy;	state Exp;
branches;
next	1.8;
commitid	qGWfFRfAjpvYo3es;

1.8
date	2007.06.16.00.26.33;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2005.05.24.20.38.20;	author uwe;	state Exp;
branches;
next	1.6;

1.6
date	2005.05.12.05.10.30;	author uwe;	state Exp;
branches;
next	1.5;

1.5
date	2005.04.13.04.33.47;	author uwe;	state Exp;
branches;
next	1.4;

1.4
date	2005.01.24.22.20.33;	author uwe;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.10.21.50.54;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.10.21.10.57;	author uwe;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.10.00.25.03;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Disentangle the Zaurus bootstrap from compat/linux and move the
syscall definitions directly into compat_linux.h.

For consistency, always use the termios defines without LINUX_
prefix.

ok visa@@, help in getting this right from jsg@@
@
text
@/*	$OpenBSD: compat_linux.h,v 1.9 2016/02/28 15:36:25 naddy Exp $	*/

/*
 * Copyright (c) 2005 Uwe Stuehler <uwe@@bsdx.de>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/* This file must be included late, for redefinitions to take effect. */

#ifndef _LOCORE

#define	INT_LIMIT(x)		(~((x)1 << (sizeof(x)*8 - 1)))
#define	OFFSET_MAX		INT_LIMIT(long long)
#define	OFFT_OFFSET_MAX		INT_LIMIT(long)

#undef	O_RDONLY
#undef	O_WRONLY
#undef	O_RDWR
#undef	SEEK_SET
#undef	SEEK_CUR

#define O_RDONLY		0x0000
#define O_WRONLY		0x0001
#define O_RDWR			0x0002
#define SEEK_SET		0
#define SEEK_CUR		1

#define	LINUX_EOVERFLOW		75

struct linux_stat {
	unsigned short		lst_dev;
	unsigned short		pad1;
	unsigned long		lst_ino;
	unsigned short		lst_mode;
	unsigned short		lst_nlink;
	unsigned short		lst_uid;
	unsigned short		lst_gid;
	unsigned short		lst_rdev;
	unsigned short		pad2;
	long			lst_size;
	unsigned long		lst_blksize;
	unsigned long		lst_blocks;
	long			lst_atime;
	unsigned long		unused1;
	long			lst_mtime;
	unsigned long		unused2;
	long			lst_ctime;
	unsigned long		unused3;
	unsigned long		unused4;
	unsigned long		unused5;
};

struct termios {
	unsigned long		c_iflag;
	unsigned long		c_oflag;
	unsigned long		c_cflag;
	unsigned long		c_lflag;
	unsigned char		c_line;
	unsigned char		c_cc[19];
};

#define IGNBRK			0x0000001
#define BRKINT			0x0000002
#define PARMRK			0x0000008
#define ISTRIP			0x0000020
#define INLCR			0x0000040
#define IGNCR			0x0000080
#define ICRNL			0x0000100
#define IXON			0x0000400
#define IMAXBEL			0x0002000

#define OPOST			0x0000001

#define ISIG			0x00000001
#define ICANON			0x00000002
#define ECHO			0x00000008
#define ECHONL			0x00000040
#define IEXTEN			0x00008000

#define CBAUD			0x0000100f
#define B0			0x00000000
#define B50			0x00000001
#define B75			0x00000002
#define B110			0x00000003
#define B134			0x00000004
#define B150			0x00000005
#define B200			0x00000006
#define B300			0x00000007
#define B600			0x00000008
#define B1200			0x00000009
#define B1800			0x0000000a
#define B2400			0x0000000b
#define B4800			0x0000000c
#define B9600			0x0000000d
#define B19200			0x0000000e
#define B38400			0x0000000f
#define B57600			0x00001001
#define B115200			0x00001002
#define B230400			0x00001003

#define CSIZE			0x00000030
#define PARENB			0x00000100
#define CS8			0x00000030

#define TIOCGETA		(('T' << 8) | 1)
#define TIOCSETA		(('T' << 8) | 2)
#define TIOCSETAW		(('T' << 8) | 3)
#define TIOCSETAF		(('T' << 8) | 4)

#define TCSANOW			0
#define TCSADRAIN		1
#define TCSAFLUSH		2

typedef unsigned int speed_t;

void	cfmakeraw(struct termios *);
int	cfsetspeed(struct termios *, speed_t);
int	tcgetattr(int, struct termios *);
int	tcsetattr(int, int, struct termios *);

#endif /* !_LOCORE */

/* linux/asm/unistd.h */
#define __NR_SYSCALL_BASE	0x900000
#define __NR_exit		(__NR_SYSCALL_BASE+1)
#define __NR_read		(__NR_SYSCALL_BASE+3)
#define __NR_write		(__NR_SYSCALL_BASE+4)
#define __NR_open		(__NR_SYSCALL_BASE+5)
#define __NR_close		(__NR_SYSCALL_BASE+6)
#define __NR_time		(__NR_SYSCALL_BASE+13)
#define __NR_lseek32		(__NR_SYSCALL_BASE+19)
#define __NR_ioctl		(__NR_SYSCALL_BASE+54)
#define __NR_stat		(__NR_SYSCALL_BASE+106)
#define __NR_syscall		(__NR_SYSCALL_BASE+113)
#define __NR_select		(__NR_SYSCALL_BASE+142)

#undef	SYS_select
#define SYS_select		__NR_select
@


1.9
log
@fix a typoed ioctl name; ok millert@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_linux.h,v 1.8 2007/06/16 00:26:33 deraadt Exp $	*/
a22 6
#include <compat/linux/linux_types.h>
#include <compat/linux/linux_fcntl.h>
#include <compat/linux/linux_termios.h>
struct proc;
#include <compat/linux/linux_ioctl.h>

d33 3
a35 3
#define O_RDONLY		LINUX_O_RDONLY
#define O_WRONLY		LINUX_O_WRONLY
#define O_RDWR			LINUX_O_RDWR
d41 83
a123 29
#define termios			linux_termios

#define IMAXBEL			LINUX_IMAXBEL
#define IGNBRK			LINUX_IGNBRK
#define BRKINT			LINUX_BRKINT
#define PARMRK			LINUX_PARMRK
#define ISTRIP			LINUX_ISTRIP
#define INLCR			LINUX_INLCR
#define IGNCR			LINUX_IGNCR
#define ICRNL			LINUX_ICRNL
#define IXON			LINUX_IXON
#define OPOST			LINUX_OPOST
#define ECHO			LINUX_ECHO
#define ECHONL			LINUX_ECHONL
#define ICANON			LINUX_ICANON
#define ISIG			LINUX_ISIG
#define IEXTEN			LINUX_IEXTEN
#define CSIZE			LINUX_CSIZE
#define PARENB			LINUX_PARENB
#define CS8			LINUX_CS8

#define TIOCGETA		LINUX_TCGETS
#define TIOCSETA		LINUX_TCSETS
#define TIOCSETAW		LINUX_TCSETSW
#define TIOCSETAF		LINUX_TCSETSF

#define TCSANOW			LINUX_TCSANOW
#define TCSADRAIN		LINUX_TCSADRAIN
#define TCSAFLUSH		LINUX_TCSAFLUSH
a133 2
#include <compat/linux/linux_syscall.h>

d136 9
a144 10
#define __NR_exit		(__NR_SYSCALL_BASE+LINUX_SYS_exit)
#define __NR_read		(__NR_SYSCALL_BASE+LINUX_SYS_read)
#define __NR_write		(__NR_SYSCALL_BASE+LINUX_SYS_write)
#define __NR_open		(__NR_SYSCALL_BASE+LINUX_SYS_open)
#define __NR_close		(__NR_SYSCALL_BASE+LINUX_SYS_close)
#define __NR_time		(__NR_SYSCALL_BASE+LINUX_SYS_time)
#define __NR_lseek32		(__NR_SYSCALL_BASE+LINUX_SYS_lseek)
#define __NR_ioctl		(__NR_SYSCALL_BASE+LINUX_SYS_ioctl)
#define __NR_select		(__NR_SYSCALL_BASE+LINUX_SYS_select)
#define __NR_stat		(__NR_SYSCALL_BASE+LINUX_SYS_stat)
d146 1
@


1.8
log
@When EOVERFLOW was added, it broke the zaurus bootblocks
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_linux.h,v 1.7 2005/05/24 20:38:20 uwe Exp $	*/
d69 1
a69 1
#define TIOCSETA		LINUX_TCGETS
@


1.7
log
@bump to version 2.08, adding
- serial console support
- hard disk names hd0..hdN
earlier version tested by drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_linux.h,v 1.6 2005/05/12 05:10:30 uwe Exp $	*/
d45 1
a45 1
#define	EOVERFLOW		75
@


1.6
log
@Minimal terminal line discipline support to stop the boot timeout
after the first keystroke, as on other platforms.
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_linux.h,v 1.5 2005/04/13 04:33:47 uwe Exp $	*/
d35 1
d41 1
d77 2
d80 1
d86 2
d90 10
a99 10
#define __NR_exit		(__NR_SYSCALL_BASE+  1)
#define __NR_read		(__NR_SYSCALL_BASE+  3)
#define __NR_write		(__NR_SYSCALL_BASE+  4)
#define __NR_open		(__NR_SYSCALL_BASE+  5)
#define __NR_close		(__NR_SYSCALL_BASE+  6)
#define __NR_time		(__NR_SYSCALL_BASE+ 13)
#define __NR_lseek32		(__NR_SYSCALL_BASE+ 19)
#define __NR_ioctl		(__NR_SYSCALL_BASE+ 54)
#define __NR__new_select	(__NR_SYSCALL_BASE+142)
#define __NR_select		__NR__new_select /* XXX */
d103 1
a103 1
#define SYS_select		__NR__new_select
@


1.5
log
@boot when then timeout expires; prodded by drahn@@ dlg@@ and others
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_linux.h,v 1.4 2005/01/24 22:20:33 uwe Exp $	*/
a18 2
#ifndef _TEST

d22 1
d25 3
a27 1
#endif
d45 36
a93 11
#define linux__sys2(x)		#x
#define linux__sys1(x)		linux__sys2(x)
#define linux__syscall(name)	"swi\t" linux__sys1(__NR_##name) "\n\t"
#define linux__syscall_return(type, res)				\
	do {								\
		if ((unsigned long)(res) >= (unsigned long)(-125)) {	\
			errno = -(res);					\
			res = -1;					\
		}							\
		return (type) (res);					\
	} while (0)
a96 7

#else

#include <fcntl.h>
#include <unistd.h>

#endif /* _TEST */
@


1.4
log
@Pass boot arguments from zboot/zbsdmod to the loaded kernel, and cope
with 32-bit lseek() in zboot (make 'boot' and 'ls' work above 2G).
ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_linux.h,v 1.3 2005/01/10 21:50:54 deraadt Exp $	*/
d51 1
@


1.3
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: compat_linux.h,v 1.2 2005/01/10 21:10:57 uwe Exp $	*/
d28 4
d35 1
d40 3
d51 1
a51 1
#define __NR_lseek		(__NR_SYSCALL_BASE+ 19)
@


1.2
log
@OpenBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d48 2
a49 2
#define linux__sys2(x) 		#x
#define linux__sys1(x) 		linux__sys2(x)
d51 8
a58 8
#define linux__syscall_return(type, res)                                \
do {                                                                    \
        if ((unsigned long)(res) >= (unsigned long)(-125)) {            \
                errno = -(res);                                         \
                res = -1;                                               \
        }                                                               \
        return (type) (res);                                            \
} while (0)
@


1.1
log
@third generation boot blocks from the zaurus

  zaurus# stand/zboot/obj.i386.zaurus/zboot
  probing: ux0
  >> OpenBSD/zaurus BOOT 2.06
  boot> b
  b
  booting /dev/hda4:/bsd: [cross fingers here]

written by dragos at first, more work by drahn, and now increasingly
polished by uwe
@
text
@d1 2
@

