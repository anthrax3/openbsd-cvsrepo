head	1.15;
access;
symbols
	OPENBSD_6_0:1.14.0.4
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.12.0.4
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.10.0.8
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.4
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.8.0.22
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.20
	OPENBSD_5_0:1.8.0.18
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.16
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.14
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.10
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.12
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.8
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.6
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.4
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.6.0.6
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@.\" @;


1.15
date	2016.09.03.13.37.44;	author guenther;	state dead;
branches;
next	1.14;
commitid	6T3r4QcMFKe3Fo5T;

1.14
date	2015.11.01.21.26.48;	author jmc;	state Exp;
branches;
next	1.13;
commitid	WWHUg7NSwgnfw8Dy;

1.13
date	2015.09.10.15.16.44;	author schwarze;	state Exp;
branches;
next	1.12;
commitid	yPhLfPulVSum2r0H;

1.12
date	2015.06.22.18.31.49;	author jmc;	state Exp;
branches;
next	1.11;
commitid	lYMtLLSloWsX2kyP;

1.11
date	2014.07.20.19.33.54;	author tobias;	state Exp;
branches;
next	1.10;
commitid	3nI5A0z6WuBa0dGs;

1.10
date	2012.09.27.12.26.28;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2012.08.15.19.02.01;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.31.19.20.05;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.29.00.03.13;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.16.16.49.46;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2005.12.15.16.26.18;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.15.02.50.50;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.17.20.18.14;	author uwe;	state Exp;
branches;
next	1.2;

1.2
date	2005.07.15.09.12.04;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.19.23.09.40;	author uwe;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Retire zaurus, as it hasn't made the EABI jump and will be permanently broken
shortly when we use the hardware thread register in userland
@
text
@.\"	$OpenBSD: boot.8,v 1.14 2015/11/01 21:26:48 jmc Exp $
.\"
.\" Copyright (c) 1997-2001 Michael Shalayeff
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\"
.Dd $Mdocdate: November 1 2015 $
.Dt BOOT 8 zaurus
.Os
.Sh NAME
.Nm boot ,
.Nm boot.conf
.Nd zaurus-specific second-stage bootstrap
.Sh DESCRIPTION
The main purpose of this program is to load the system kernel while dealing
with the peculiarities of the zaurus machine.
.Pp
As described in
.Xr boot_zaurus 8 ,
this program is loaded by the primary bootstrap loader and provides a
convenient way to load the kernel.
This program acts as an enhanced boot monitor for zaurus systems, providing
a common interface for the kernel to start from.
.Pp
Basic operations include:
.Pp
.Bl -bullet -compact
.It
Detecting and switching between multiple consoles.
.It
Loading kernels from any device supported by the primary bootstrap loader.
.\" .It
.\" Loading kernels compressed by
.\" .Xr gzip 1 .
.It
Passing system parameters queried from the primary bootstrap loader to the
kernel.
.It
Providing an interactive command line.
.El
.Pp
The sequence of its operation is as follows: initialization,
parsing the configuration file, then an interactive command line.
While at the command line you have 5 seconds to type any commands, if needed.
If time expires, the kernel will be loaded according to
the current variable settings (see the
.Nm set
command).
Each time a kernel load fails, the timeout is increased by one second.
The sequence of
.Nm
operations is as follows:
.Bl -enum
.It
Probe for console devices, which includes the (default) LCD+Keyboard
console
.Pq Li cn0
and up to three serial consoles
.Pf ( Li com0
through
.Li com2 )
connected to the serial ports.
Display messages to the default console about the devices found.
.\" .It
.\" Detect memory.
.\" Conventional memory is detected by querying the BIOS.
.\" Extended memory is detected by probing page-by-page through the address
.\" space, rather than asking the BIOS; many BIOS's cannot report larger than
.\" 64M of memory.
.\" All memory found is reported to the default console device.
.It
Probe for disk devices, and select the first disk with an i386-compatible
MBR and a valid
.Ox
primary partition.
.It
If the file
.Pa /etc/boot.conf
exists on the root filesystem on the selected disk, open and parse it.
Lines beginning with the
.Sq #
character,
as well as whitespace at the beginning of lines,
are ignored.
The file may contain any commands
.Nm
accepts at the interactive prompt.
Though default settings usually suffice, they can be changed here.
.\" XXX CHECK_SKIP_CONF is not defined...
.\" .Pp
.\" .Pa boot.conf
.\" processing can be skipped by holding down either Control key as
.\" .Nm
.\" starts.
.It
The header line
.Pp
.Dl >> OpenBSD/zaurus BOOT [x.xx]
.Pp
is displayed to the active console, where
.Ar x.xx
is the version number of the
.Nm
program, followed by the
.Pp
.Dl boot>
.Pp
prompt, which means you are in interactive mode and may enter commands.
If you do not,
.Nm
will proceed to load the kernel with the current parameters after the
timeout period has expired.
.El
.Pp
By default,
.Nm
attempts to load the kernel executable
.Pa /bsd .
If it fails to find the kernel and no alternative kernel image has
been specified, the system will be unable to boot.
.Sh COMMANDS
The following commands are accepted at the
.Nm
prompt:
.Bl -tag -width shorten
.It boot Op Ar image Op Fl acds
Boots the kernel image specified by
.Ar image
with any options given.
Image specification consists of a pair
.Ar device : Ns Ar filename ;
either or both can be omitted (`:' is not needed if both are omitted),
in which case values from
.Nm
variables will be used.
.Pp
When selecting the
.Ar device
to boot from,
.Nm
makes no distinction between SCSI and IDE type drives;
they are detected as
.Sq hd
devices.
Therefore, to boot kernel
.Pa /bsd
from slice
.Sq a
on the first hard drive
.Pq irrespective of device type ,
specify
.Dq boot hd0a:/bsd .
.Pp
.Em Note:
Normally, the internal hard disk is designated by the
.Ar device
name
.Sq hd0 .
If a CF hard disk is present in the socket when the system starts,
the internal hard disk is instead designated by the prefix
.Sq hd1 ,
and
.Sq hd0
will access the CF hard disk.
.Bl -tag -width _a_
.It Fl a
Causes the kernel to ask for the
.Nm root
device to use.
.It Fl c
Causes the kernel to go into
.Xr boot_config 8
before performing
.Xr autoconf 4
procedures.
.It Fl d
Causes the kernel to drop into
.Xr ddb 4
at the earliest convenient point.
.It Fl s
Causes the kernel to boot single-user.
.El
.It clear
Clears the console screen.
This is useful if your bootstrap console doesn't scroll the screen
automatically when the cursor is in the bottom line.
.It echo Op Ar args
Displays
.Ar args
on the console device.
.It help
Prints a list of available commands and machine dependent
commands, if any.
.It ls Op Ar directory
Prints contents of the specified
.Ar directory
in long format including: attributes and file type, owner, group,
size, filename.
.It reboot
.\" Reboots the machine by initiating a warm boot procedure.
Returns control to the primary bootstrap loader.
.It set Op Ar varname Op Ar value
If invoked without arguments, prints a list of variables and their values.
If only
.Ar varname
is specified, displays contents of that variable.
If
.Ar varname
and
.Ar value
are both specified, sets that variable to the given value.
Variables include:
.Pp
.Bl -tag -compact -width boothow
.It Nm addr
Address at which to load the kernel.
.It Nm debug
Debug flag if
.Nm
was compiled with DEBUG defined.
.It Nm device
Boot device name (e.g.,
.\" .Li fd0a ,
.Li hd0a ) .
.It Nm howto
Options to pass to the loaded kernel.
.It Nm image
File name containing the kernel image.
.It Nm timeout
Number of seconds boot will wait for human intervention before
booting the default kernel image.
.It Nm tty
Active console device name (e.g.,
.Li cn0 ,
.Li com0 ,
.Li com1 ) .
.El
.It stty Op Ar device Op Ar speed
Displays or sets the
.Ar speed
for a console
.Ar device .
If changing the baudrate for the currently active console,
.Nm
offers you five seconds of grace time before committing the change
to allow you to change your terminal's speed to match.
If changing speed
.Em not
for the active console, the baudrate is set for the
.Em next
time you switch to a serial console.
.Pp
The default baudrate is 9600bps.
.It time
Displays system time and date.
.El
.Sh UPDATING BOOTBLOCKS
Since the bootblocks actually live in a Linux flash filesystem, a
rather obtuse method must currently be used to upgrade them.
.Pp
.Bl -enum -offset indent -compact
.It
Place
.Pa zboot
and
.Pa zbsdmod.o
onto an MS-DOS filesystem on a CF card, and then insert into the Zaurus.
.It
Remove power from the Zaurus.
.It
Unplug the battery.
.It
Start holding down the
.Sq b
and
.Sq d
keys.
.It
Wait 30 seconds, then re-insert the battery and power up the Zaurus.
.It
When you see text start to appear on the Zaurus, release the
.Sq b
and
.Sq d
keys.
.It
Login as root and perform the following steps:
.Bd -literal -offset indent
# mount /dev/mtdblock2 /tmp
# cp /mnt/cf/z* /tmp/home/etc/rc.d
# reboot
.Ed
.Pp
An SD card with an MS-DOS filesystem may be used instead, in which case
the Linux pathname will be
.Pa /mnt/card
instead of
.Pa /mnt/cf .
.El
.Sh FILES
.Bl -tag -width /usr/mdec/zbsdmod.o -compact
.It Pa /usr/mdec/zbsdmod.o
kernel module for the primary bootstrap loader that must be
loaded before the system bootstrap
.It Pa /usr/mdec/zboot
system bootstrap
.It Pa /etc/boot.conf
system bootstrap's startup file
.It Pa /bsd
kernel image
.It Pa /bsd.rd
kernel image for installation/recovery
.El
.Sh EXAMPLES
Boot the default kernel:
.Pp
.Dl boot> boot
.Pp
Remove the 5 second pause at boot-time permanently, causing
.Nm
to load the kernel immediately without prompting:
.Pp
.Dl # echo \&"boot\&" > /etc/boot.conf
.Pp
Use serial console.
A null modem cable should connect the specified serial port to a terminal.
Useful for debugging.
.Pp
.Dl boot> set tty com0
.Pp
Invoke the serial console at every boot:
.Pp
.Dl # echo \&"set tty com0\&" > /etc/boot.conf
.Pp
Boot the kernel named
.Pa /bsd
from the second hard disk in
.Dq User Kernel Configuration
mode (see
.Xr boot_config 8 ) .
This mechanism allows for the explicit enabling and disabling of devices
during the current boot sequence, as well as the modification
of device parameters.
Once booted, such changes can be made permanent by using
.Xr config 8 Ns 's
.Fl e
option.
.Pp
.Dl boot> boot hd1a:/bsd -c
.Sh SEE ALSO
.\" .Xr gzip 1 ,
.Xr autoconf 4 ,
.Xr ddb 4 ,
.Xr boot_config 8 ,
.Xr boot_zaurus 8 ,
.Xr fdisk 8 ,
.\" .Xr installboot 8 ,
.Xr reboot 8
.Sh HISTORY
This program was written by Michael Shalayeff for
.Ox 2.1 ,
and adapted to zaurus by Uwe Stuehler for
.Ox 3.7 .
.Sh BUGS
Non-IDE disks cannot be used to load /etc/boot.conf or
the kernel from them.
@


1.14
log
@replace "can not" with "cannot";
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.13 2015/09/10 15:16:44 schwarze Exp $
d28 1
a28 1
.Dd $Mdocdate: September 10 2015 $
@


1.13
log
@reduce .Nd to one line and kill .Tn while here
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.12 2015/06/22 18:31:49 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: June 22 2015 $
d386 1
a386 1
Non-IDE disks can not be used to load /etc/boot.conf or
@


1.12
log
@document that boot.conf can contain comments;
from tilo stritzky

thanks miod for help with the diff, and who also noted that
leading whitespace gets stripped too;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.11 2014/07/20 19:33:54 tobias Exp $
d28 1
a28 1
.Dd $Mdocdate: July 20 2014 $
d34 1
a34 2
.Nd
zaurus-specific second-stage bootstrap
@


1.11
log
@Merge cmd.c from zboot into boot, dropping "clear" command while at it.

With input from deraadt@@

okay jasper@@, uebayashi@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.10 2012/09/27 12:26:28 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: September 27 2012 $
d102 6
a107 1
This file may contain any commands
@


1.10
log
@remove the zlib rfc text: these pages already point to gzip(1), which
has the references, and the rfc is not that relevant anyway;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.9 2012/08/15 19:02:01 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: August 15 2012 $
d106 6
@


1.9
log
@use Lk for links;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.8 2007/05/31 19:20:05 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: May 31 2007 $
a369 6
.\" .Pp
.\" RFC 1950 describes the zlib library interface.
.\" .Pp
.\" The official home page for the version of zlib used in this
.\" operating system is at
.\" .Lk http://www.gzip.org/zlib/ .
@


1.8
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.7 2007/05/29 00:03:13 deraadt Exp $
d28 1
a28 1
.Dd $Mdocdate$
d374 2
a375 1
.\" operating system is at http://www.gzip.org/zlib/.
@


1.7
log
@remove support for many alternative kernel choices -- only try /bsd and
not the other stupid names.  that feature was retarded.  tested on a few
architectures by a few people
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.6 2005/12/16 16:49:46 jmc Exp $
d28 1
a28 1
.Dd September 1, 1997
@


1.6
log
@move the section on updating bootblocks into the man body
of the page;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.5 2005/12/15 16:26:18 jmc Exp $
d130 2
a131 7
If that fails, it will attempt to load
.Pa /obsd
and then
.Pa /bsd.old .
If it fails to find any of these files,
and no alternative kernel image has been specified,
the system will be unable to boot.
@


1.5
log
@tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.4 2005/12/15 02:50:50 deraadt Exp $
d273 43
a365 43
.Sh UPDATING BOOTBLOCKS
Since the bootblocks actually live in a Linux flash filesystem, a
rather obtuse method must currently be used to upgrade them.
.Pp
.Bl -enum -offset indent -compact
.It
Place
.Pa zboot
and
.Pa zbsdmod.o
onto an MS-DOS filesystem on a CF card, and then insert into the Zaurus.
.It
Remove power from the Zaurus.
.It
Unplug the battery.
.It
Start holding down the
.Sq b
and
.Sq d
keys.
.It
Wait 30 seconds, then re-insert the battery and power up the Zaurus.
.It
When you see text start to appear on the Zaurus, release the
.Sq b
and
.Sq d
keys.
.It
Login as root and perform the following steps:
.Bd -literal -offset indent
# mount /dev/mtdblock2 /tmp
# cp /mnt/cf/z* /tmp/home/etc/rc.d
# reboot
.Ed
.Pp
An SD card with an MS-DOS filesystem may be used instead, in which case
the Linux pathname will be
.Pa /mnt/card
instead of
.Pa /mnt/cf .
.El
@


1.4
log
@document horrific bootblock upgrade "procedure"
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.3 2005/09/17 20:18:14 uwe Exp $
d333 1
a333 1
onto an MSDOS filesystem on a CF card, and then insert into the Zaurus.
d337 1
a337 1
Unplug the battery
d339 5
a343 1
Start holding down the 'b' and 'd' keys.
d347 5
a351 2
When you see text start to appear on the Zaurus, release the 'b' and
'd' keys.
a353 2
.El
.Pp
d360 1
a360 1
A SD card with an MSDOS filesystem may be used instead, in which case
d365 1
@


1.3
log
@boot uses abstract 'hd' device names, and 'set tty' works
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.2 2005/07/15 09:12:04 jmc Exp $
d323 37
@


1.2
log
@- add /bsd.rd to FILES
- for amd64/i386 add /bsd.mp to FILES

ok tom@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.1 2005/04/19 23:09:40 uwe Exp $
d76 10
a85 10
.\" .It
.\" Probe for console devices, which includes the (default) PC VGA+Keyboard
.\" console
.\" .Pq Li pc0
.\" and up to four serial consoles
.\" .Pf ( Li com0
.\" through
.\" .Li com3 )
.\" connected to the serial ports.
.\" Display messages to the default console about the devices found.
d157 4
a160 14
.\" makes no distinction between SCSI and IDE type drives;
.\" they are detected as
.\" .Sq hd
.\" devices.
.\" Therefore, to boot kernel
.\" .Pa /bsd
.\" from slice
.\" .Sq a
.\" on the first hard drive
.\" .Pq irrespective of device type ,
.\" specify
.\" .Dq boot hd0a:/bsd .
makes no distinction between the type of drives;
the device name is passed directly to the primary bootstrap loader.
d165 4
a168 2
in the fourth primary partition on the first hard drive, specify
.Dq boot /dev/hda4:/bsd .
d173 2
a174 2
prefix
.Sq /dev/hda .
d177 1
a177 1
.Sq /dev/hdc ,
d179 1
a179 1
.Sq /dev/hda
a180 3
See also
.Sx BUGS ,
below.
d240 1
a240 3
.\" .Li hd0a ) .
.Li /dev/hda4 ,
.Li /dev/hdc1 ) .
d310 1
a310 1
from the fourth primary partition on the first hard disk in
d322 1
a322 2
.\" .Dl boot> boot hd1a:/bsd -c
.Dl boot> boot /dev/hda4:/bsd -c
d343 1
a343 4
Alternative console devices are not probed for and can not be
selected.
.Pp
Non-IDE disks do not get selected for loading /etc/boot.conf or
a344 5
.Pp
The
.Nm boot
command should accept abstract disk device names instead of
just forwarding the device name to the primary bootstrap.
@


1.1
log
@describe the zaurus boot(8) program; review/suggestions by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: boot.8,v 1.41 2005/02/18 15:26:23 robert Exp $
d297 2
@

