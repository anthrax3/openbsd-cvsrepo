head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.10
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.6
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.10.0.14
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.10
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.8
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.6
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.4
	OPENBSD_5_0:1.10.0.2
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.6.0.14
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.10
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.12
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.8
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.6
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2014.07.13.09.26.08;	author jasper;	state Exp;
branches;
next	1.11;
commitid	Cnjup0HpCIRrcQ6o;

1.11
date	2014.07.12.21.54.58;	author jasper;	state Exp;
branches;
next	1.10;
commitid	3HeD4LaLGiS22I3y;

1.10
date	2011.06.26.23.19.11;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2010.12.06.22.51.46;	author jasper;	state Exp;
branches;
next	1.8;

1.8
date	2010.12.06.22.11.01;	author jasper;	state Exp;
branches;
next	1.7;

1.7
date	2010.12.06.18.44.49;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2007.06.27.20.29.38;	author mk;	state Exp;
branches;
next	1.5;

1.5
date	2005.05.24.20.38.20;	author uwe;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.12.05.10.30;	author uwe;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.11.16.42.15;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.16.17.27.58;	author uwe;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.10.00.25.03;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@move putchar() into libsa

"sure" miod@@
@
text
@/*	$OpenBSD: devopen.c,v 1.11 2014/07/12 21:54:58 jasper Exp $	*/

/*
 * Copyright (c) 1996-1999 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/disklabel.h>
#include <dev/cons.h>
#include "libsa.h"
#include <stand/boot/cmd.h>

/* XXX use slot for 'rd' for 'hd' pseudo-device */
const char bdevs[][4] = {
	"wd", "", "fd", "", "sd", "st", "cd", "",
	"", "", "", "", "", "", "", "", "", "hd", ""

};
const int nbdevs = nitems(bdevs);

const char cdevs[][4] = {
	"cn", "", "", "", "", "", "", "",
	"", "", "", "", "com"
};
const int ncdevs = nitems(cdevs);

/* pass dev_t to the open routines */
int
devopen(struct open_file *f, const char *fname, char **file)
{
	struct devsw *dp = devsw;
	register int i, rc = 1;

	*file = (char *)fname;

#ifdef DEBUG
	if (debug)
		printf("devopen:");
#endif

	for (i = 0; i < ndevs && rc != 0; dp++, i++) {
#ifdef DEBUG
		if (debug)
			printf(" %s: ", dp->dv_name);
#endif
		if ((rc = (*dp->dv_open)(f, file)) == 0) {
			f->f_dev = dp;
			return 0;
		}
#ifdef DEBUG
		else if (debug)
			printf("%d", rc);
#endif

	}
#ifdef DEBUG
	if (debug)
		putchar('\n');
#endif

	if ((f->f_flags & F_NODEV) == 0)
		f->f_dev = dp;

	return rc;
}

void
devboot(dev_t bootdev, char *p)
{
	dev_t unit = 0;		/* XXX */

	*p++ = 'h';
	*p++ = 'd';
	*p++ = '0' + unit;
	*p++ = 'a';
	*p = '\0';
}

char ttyname_buf[8];

char *
ttyname(int fd)
{
	snprintf(ttyname_buf, sizeof ttyname_buf, "%s%d",
	    cdevs[major(cn_tab->cn_dev)], minor(cn_tab->cn_dev));

	return ttyname_buf;
}

dev_t
ttydev(char *name)
{
	int i, unit = -1;
	char *no = name + strlen(name) - 1;

	while (no >= name && *no >= '0' && *no <= '9')
		unit = (unit < 0 ? 0 : (unit * 10)) + *no-- - '0';
	if (no < name || unit < 0)
		return NODEV;
	for (i = 0; i < ncdevs; i++)
		if (strncmp(name, cdevs[i], no - name + 1) == 0)
			return (makedev(i, unit));
	return NODEV;
}
@


1.11
log
@move getchar() into libsa where applicable

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.10 2011/06/26 23:19:11 tedu Exp $	*/
a98 31
}

int pch_pos = 0;

void
putchar(int c)
{
	switch (c) {
	case '\177':	/* DEL erases */
		cnputc('\b');
		cnputc(' ');
	case '\b':
		cnputc('\b');
		if (pch_pos)
			pch_pos--;
		break;
	case '\t':
		do
			cnputc(' ');
		while (++pch_pos % 8);
		break;
	case '\n':
	case '\r':
		cnputc(c);
		pch_pos=0;
		break;
	default:
		cnputc(c);
		pch_pos++;
		break;
	}
@


1.10
log
@kill mcd dead.  ok krw matthew millert thib
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.9 2010/12/06 22:51:46 jasper Exp $	*/
a129 16
}

int
getchar(void)
{
	register int c = cngetc();

	if (c == '\r')
		c = '\n';

	if ((c < ' ' && c != '\n') || c == '\177')
		return c;

	putchar(c);

	return c;
@


1.9
log
@- properly remove NENTS now after fixing the fallout.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.8 2010/12/06 22:11:01 jasper Exp $	*/
d37 2
a38 2
	"wd", "", "fd", "", "sd", "st", "cd", "mcd",
	"", "", "", "", "", "", "", "scd", "", "hd", ""
@


1.8
log
@- partially revert previous NENTS removal for arches which got busted.
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.7 2010/12/06 18:44:49 jasper Exp $	*/
d41 1
a41 1
const int nbdevs = NENTS(bdevs);
d47 1
a47 1
const int ncdevs = NENTS(cdevs);
@


1.7
log
@- drop NENTS(), which was yet another copy of nitems().
no binary change


ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.6 2007/06/27 20:29:38 mk Exp $	*/
d41 1
a41 1
const int nbdevs = nitems(bdevs);
d47 1
a47 1
const int ncdevs = nitems(cdevs);
@


1.6
log
@wt(4) was removed a while ago, so don't support booting off it anoymore.

i386/amd64 was ok tom
zaurus ok drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.5 2005/05/24 20:38:20 uwe Exp $	*/
d41 1
a41 1
const int nbdevs = NENTS(bdevs);
d47 1
a47 1
const int ncdevs = NENTS(cdevs);
@


1.5
log
@bump to version 2.08, adding
- serial console support
- hard disk names hd0..hdN
earlier version tested by drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.4 2005/05/12 05:10:30 uwe Exp $	*/
d37 1
a37 1
	"wd", "", "fd", "wt", "sd", "st", "cd", "mcd",
@


1.4
log
@Minimal terminal line discipline support to stop the boot timeout
after the first keystroke, as on other platforms.
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.3 2005/05/11 16:42:15 deraadt Exp $	*/
a28 1
#include "libsa.h"
d32 1
a32 1

a34 2
extern int debug;

d45 1
a45 1
	"com", "", "", "", "pc"
a48 2
int getbootdev(dev_t, char *);

d89 2
a90 2
int
getbootdev(dev_t bootdev, char *p)
d92 1
a92 8
	char buf[DEV_BSIZE];
	struct dos_partition *dp;
	struct disklabel label;
	static int timeout = 10;
	char *s;
	int fd;
	int n;
	char *msg = "";
a93 6
	s = p;
	*p++ = '/';
	*p++ = 'd';
	*p++ = 'e';
	*p++ = 'v';
	*p++ = '/';
d96 2
a97 1
	*p++ = 'a' + (bootdev & 0xf); /* a - h */
a98 67

	/*
	 * Give disk devices some time to become ready when the first open
	 * fails.  Even when open succeeds the disk is sometimes not ready.
	 */
	if ((fd = uopen(s, O_RDONLY)) == -1 && errno == ENXIO) {
		int t;

		while (fd == -1 && timeout > 0) {
			timeout--;
			t = getsecs() + 1;
			while (getsecs() < t)
				;
			fd = uopen(s, O_RDONLY);
		}
		if (fd != -1) {
			t = getsecs() + 2;
			while (getsecs() < t)
				;
		}
	}
	if (fd == -1)
		return 0;

	/* Read the disk's MBR. */
	if (unixstrategy((void *)fd, F_READ, DOSBBSECTOR, DEV_BSIZE, buf,
	    &n) != 0 || n != DEV_BSIZE) {
		uclose(fd);
		return 0;
	}

	/* Find OpenBSD primary partition in the disk's MBR. */
	dp = (struct dos_partition *)&buf[DOSPARTOFF];
	for (n = 0; n < NDOSPART; n++)
		if (dp[n].dp_typ == DOSPTYP_OPENBSD)
			break;
	if (n == NDOSPART) {
		uclose(fd);
		return 0;
	}
	*p++ = '1' + n;
	*p = '\0';
	uclose(fd);

	/* Test if the OpenBSD partition has a valid disklabel. */
	if ((fd = uopen(s, O_RDONLY)) != -1) {
		if (unixstrategy((void *)fd, F_READ, LABELSECTOR,
		    DEV_BSIZE, buf, &n) == 0 && n == DEV_BSIZE)
			msg = getdisklabel(buf, &label);
		uclose(fd);
	}
	return msg == NULL;
}

void
devboot(dev_t bootdev, char *p)
{

	if (bootdev != 0 && getbootdev(bootdev, p))
		return;

	for (bootdev = 0; bootdev < 8; bootdev++)
		if (getbootdev(bootdev, p))
			return;

	/* fall-back to the previous default device */
	strlcpy(p, "/dev/hda4", sizeof cmd.bootdev);
a142 1
#ifndef _TEST
a143 1
#endif
@


1.3
log
@prettier; ok uwe
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.2 2005/04/16 17:27:58 uwe Exp $	*/
d34 2
d182 1
a182 1
	strlcpy(p, "/dev/hda4", 16);
d227 1
a227 1
#if 0
@


1.2
log
@Look for OpenBSD disklabel on the first eight hd devices, and after a
timeout retry to open the first device which wasn't immediately ready.

This should avoid the failures to read /etc/boot.conf that people have
been seeing, and makes it possible to install OpenBSD on any of the
four possible DOS MBR primary partitions.
@
text
@d1 1
a1 1
/*	$OpenBSD: devopen.c,v 1.1 2005/01/10 00:25:03 deraadt Exp $	*/
d121 1
d125 2
a126 1
			while (getsecs() < t);
d131 2
a132 1
			while (getsecs() < t);
@


1.1
log
@third generation boot blocks from the zaurus

  zaurus# stand/zboot/obj.i386.zaurus/zboot
  probing: ux0
  >> OpenBSD/zaurus BOOT 2.06
  boot> b
  b
  booting /dev/hda4:/bsd: [cross fingers here]

written by dragos at first, more work by drahn, and now increasingly
polished by uwe
@
text
@d1 1
a1 1
/*	$OpenBSD: dev_i386.c,v 1.29 2004/06/23 00:21:49 tom Exp $	*/
d31 1
d50 2
d92 73
d168 10
a177 2
	/* XXX */
	strlcpy(p, "/dev/hda4", 10);
@

