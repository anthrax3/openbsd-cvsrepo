head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.10
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.6
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.8
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.12
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.10
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.8
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.6
	OPENBSD_5_0:1.7.0.4
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.4.0.22
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.18
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.20
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.16
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.14
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.12
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2014.07.20.19.33.54;	author tobias;	state Exp;
branches;
next	1.8;
commitid	3nI5A0z6WuBa0dGs;

1.8
date	2013.12.28.02.53.04;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2010.12.06.22.51.46;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2010.12.06.22.11.01;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2010.12.06.18.44.49;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.24.20.38.20;	author uwe;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.09.14.09.20;	author uwe;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.10.21.50.54;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.10.00.25.03;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Merge cmd.c from zboot into boot, dropping "clear" command while at it.

With input from deraadt@@

okay jasper@@, uebayashi@@
@
text
@/*	$OpenBSD: conf.c,v 1.8 2013/12/28 02:53:04 deraadt Exp $	*/

/*
 * Copyright (c) 1996 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/param.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <libsa.h>
#include <lib/libsa/ufs.h>
#ifdef notdef
#include <lib/libsa/cd9660.h>
#include <lib/libsa/fat.h>
#include <lib/libsa/nfs.h>
#include <lib/libsa/tftp.h>
#include <lib/libsa/netif.h>
#endif
#include "unixdev.h"
#include <dev/cons.h>

const char version[] = "2.10";
int	debug = 1;

void (*zaurus_probe1[])(void) = {
	cninit
};
void (*zaurus_probe2[])(void) = {
	diskprobe
};

struct zaurus_boot_probes probe_list[] = {
	{ "probing", zaurus_probe1, nitems(zaurus_probe1) },
	{ "disk",    zaurus_probe2, nitems(zaurus_probe2) }
};
int nibprobes = nitems(probe_list);


void (*sa_cleanup)(void) = NULL;

struct fs_ops file_system[] = {
	{ ufs_open,    ufs_close,    ufs_read,    ufs_write,    ufs_seek,
	  ufs_stat,    ufs_readdir    },
#ifdef notdef
	{ fat_open,    fat_close,    fat_read,    fat_write,    fat_seek,
	  fat_stat,    fat_readdir    },
	{ nfs_open,    nfs_close,    nfs_read,    nfs_write,    nfs_seek,
	  nfs_stat,    nfs_readdir    },
	{ cd9660_open, cd9660_close, cd9660_read, cd9660_write, cd9660_seek,
	  cd9660_stat, cd9660_readdir },
#endif
#ifdef _TEST
	{ null_open,   null_close,   null_read,   null_write,   null_seek,
	  null_stat,   null_readdir   }
#endif
};
int nfsys = nitems(file_system);

struct devsw	devsw[] = {
	{ "UNIX", unixstrategy, unixopen, unixclose, unixioctl },
#if 0
	{ "TFTP", tftpstrategy, tftpopen, tftpclose, tftpioctl },
#endif
};
int ndevs = nitems(devsw);

#ifdef notdef
struct netif_driver	*netif_drivers[] = {
	NULL
};
int n_netif_drivers = nitems(netif_drivers);
#endif

struct consdev constab[] = {
	{ cn_probe, cn_init, cn_getc, cn_putc },
	{ com_probe, com_init, com_getc, com_putc },
	{ NULL }
};
struct consdev *cn_tab = constab;
@


1.8
log
@crank the version
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.7 2010/12/06 22:51:46 jasper Exp $	*/
d45 1
a45 1
const char version[] = "2.09";
@


1.7
log
@- properly remove NENTS now after fixing the fallout.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.6 2010/12/06 22:11:01 jasper Exp $	*/
d45 1
a45 1
const char version[] = "2.08";
@


1.6
log
@- partially revert previous NENTS removal for arches which got busted.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 2010/12/06 18:44:49 jasper Exp $	*/
d30 1
d56 2
a57 2
	{ "probing", zaurus_probe1, NENTS(zaurus_probe1) },
	{ "disk",    zaurus_probe2, NENTS(zaurus_probe2) }
d59 1
a59 1
int nibprobes = NENTS(probe_list);
d80 1
a80 1
int nfsys = NENTS(file_system);
d88 1
a88 1
int ndevs = NENTS(devsw);
d94 1
a94 1
int n_netif_drivers = NENTS(netif_drivers);
@


1.5
log
@- drop NENTS(), which was yet another copy of nitems().
no binary change


ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 2005/05/24 20:38:20 uwe Exp $	*/
d55 2
a56 2
	{ "probing", zaurus_probe1, nitems(zaurus_probe1) },
	{ "disk",    zaurus_probe2, nitems(zaurus_probe2) }
d58 1
a58 1
int nibprobes = nitems(probe_list);
d79 1
a79 1
int nfsys = nitems(file_system);
d87 1
a87 1
int ndevs = nitems(devsw);
d93 1
a93 1
int n_netif_drivers = nitems(netif_drivers);
@


1.4
log
@bump to version 2.08, adding
- serial console support
- hard disk names hd0..hdN
earlier version tested by drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 2005/05/09 14:09:20 uwe Exp $	*/
d55 2
a56 2
	{ "probing", zaurus_probe1, NENTS(zaurus_probe1) },
	{ "disk",    zaurus_probe2, NENTS(zaurus_probe2) }
d58 1
a58 1
int nibprobes = NENTS(probe_list);
d79 1
a79 1
int nfsys = NENTS(file_system);
d87 1
a87 1
int ndevs = NENTS(devsw);
d93 1
a93 1
int n_netif_drivers = NENTS(netif_drivers);
@


1.3
log
@Bump version to 2.07.  Since the initial version 2.06, symbol table
loading and a few workarounds have been added.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 2005/01/10 21:50:54 deraadt Exp $	*/
d41 1
a41 1
#include <lib/libsa/unixdev.h>
a42 3
#if 0
#include "debug.h"
#endif
d44 1
a44 2
const char version[] = "2.07";
#if 0
a45 1
#endif
a49 1
#if 0
a52 1
#endif
a55 1
#if 0
a56 1
#endif
d97 2
a98 1
	{ unix_probe, unix_init, unix_getc, unix_putc },
@


1.2
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1 2005/01/10 00:25:03 deraadt Exp $	*/
d47 1
a47 1
const char version[] = "2.06";
@


1.1
log
@third generation boot blocks from the zaurus

  zaurus# stand/zboot/obj.i386.zaurus/zboot
  probing: ux0
  >> OpenBSD/zaurus BOOT 2.06
  boot> b
  b
  booting /dev/hda4:/bsd: [cross fingers here]

written by dragos at first, more work by drahn, and now increasingly
polished by uwe
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.28 2004/03/19 13:48:19 tom Exp $	*/
d16 2
a17 2
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
d53 1
a53 1
        cninit
d57 1
a57 1
        diskprobe
d62 1
a62 1
        { "probing", zaurus_probe1, NENTS(zaurus_probe1) },
d64 1
a64 1
        { "disk",    zaurus_probe2, NENTS(zaurus_probe2) }
@

