head	1.20;
access;
symbols
	OPENBSD_6_0:1.19.0.46
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.42
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.44
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.36
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.40
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.38
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.34
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.32
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.30
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.28
	OPENBSD_5_0:1.19.0.26
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.24
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.22
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.18
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.19.0.20
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.16
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.14
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.12
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.10
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.19.0.8
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.19.0.6
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.19.0.4
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.2
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.17.0.2
	OPENBSD_3_7_BASE:1.17;
locks; strict;
comment	@ * @;


1.20
date	2016.09.03.13.37.43;	author guenther;	state dead;
branches;
next	1.19;
commitid	6T3r4QcMFKe3Fo5T;

1.19
date	2005.05.10.08.26.12;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2005.04.21.02.34.07;	author dlg;	state Exp;
branches;
next	1.17;

1.17
date	2005.01.31.02.22.17;	author uwe;	state Exp;
branches;
next	1.16;

1.16
date	2005.01.25.23.30.55;	author drahn;	state Exp;
branches;
next	1.15;

1.15
date	2005.01.18.22.18.11;	author drahn;	state Exp;
branches;
next	1.14;

1.14
date	2005.01.18.01.03.15;	author drahn;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.17.18.24.11;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2005.01.15.01.36.12;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.15.00.41.14;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2005.01.14.21.12.37;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2005.01.14.18.42.31;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	2005.01.14.16.39.15;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2005.01.14.01.26.44;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2005.01.14.01.12.20;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2005.01.14.00.53.12;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2005.01.14.00.39.55;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.14.00.24.35;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.14.00.04.50;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.13.23.33.37;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Retire zaurus, as it hasn't made the EABI jump and will be permanently broken
shortly when we use the hardware thread register in userland
@
text
@/* $OpenBSD: zaurus_kbdmap.h,v 1.19 2005/05/10 08:26:12 espie Exp $ */

/*
 * Copyright (c) 2005 Dale Rahn <drahn@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define KC(n) KS_KEYCODE(n)
#include <dev/wscons/wskbdraw.h>

static const keysym_t zkbd_keydesc_us[] = {
    KC(0),	KS_Control_L,
    KC(2),	KS_Tab,		KS_Tab,		KS_Caps_Lock,
    KC(3),	KS_Cmd_Screen1,	KS_f2,				/* Addr, */
    KC(4),	KS_Cmd_Screen0,	KS_f1,				/* Cal, */
    KC(5),	KS_Cmd_Screen2,	KS_f3,				/* Mail, */
    KC(6),	KS_Cmd_Screen3,	KS_f4,				/* Home, */
    KC(8),	KS_1,		KS_exclam,
    KC(9),	KS_2,		KS_quotedbl,
    KC(10),	KS_q,
    KC(11),	KS_w,		KS_W,		KS_asciicircum,
    KC(12),	KS_a,
    KC(13),	KS_z,
    KC(14),	KS_Cmd,		KS_Alt_L,
    KC(16),	KS_Cmd_BrightnessDown,	KS_3,	KS_numbersign,
    KC(17),	KS_Cmd_BrightnessUp,	KS_4,	KS_dollar,	
    KC(18),	KS_e,		KS_E,		KS_equal,
    KC(19),	KS_s,
    KC(20),	KS_d,		KS_D,		KS_grave,
    KC(21),	KS_x,
    /* KC(22),	^/t (right japanese) */
    KC(24),	KS_5,		KS_percent,
    KC(25),	KS_r,		KS_R,		KS_plus,
    KC(26),	KS_t,		KS_T,		KS_bracketleft,
    KC(27),	KS_f,		KS_F,		KS_backslash,
    KC(28),	KS_c,
    KC(29),	KS_minus,	KS_minus,	KS_at,
    KC(30),	KS_Cmd_Debugger,KS_Escape,	/* Cancel */
    KC(32),	KS_6,		KS_ampersand,
    KC(33),	KS_y,		KS_Y,		KS_bracketright,
    KC(34),	KS_g,		KS_G,		KS_semicolon,
    KC(35),	KS_v,
    KC(36),	KS_b,		KS_B,		KS_underscore,
    KC(37),	KS_space,
    KC(38),	KS_KP_Enter,	/* ok */
    KC(40),	KS_7,		KS_apostrophe,
    KC(41),	KS_8,		KS_parenleft,
    KC(42),	KS_u,		KS_U,		KS_braceleft,	
    KC(43),	KS_h,		KS_H,		KS_colon,
    KC(44),	KS_n,
    KC(45),	KS_comma,	KS_slash,	KS_less,
    KC(46),	KS_Cmd_Screen4,	KS_f5,				/* Menu, */
    KC(48),	KS_9,		KS_parenright,
    KC(49),	KS_i,		KS_I,		KS_braceright,
    KC(50),	KS_j,		KS_J,		KS_asterisk,
    KC(51),	KS_m,
    KC(52),	KS_period,	KS_question,	KS_greater,
    KC(54),	KS_KP_Left,	KS_KP_Left,	KS_Home, /* left, */
    KC(56),	KS_0,		KS_asciitilde,
    KC(57),	KS_o,
    KC(58),	KS_k,
    KC(59),	KS_l,		KS_L,		KS_bar,
    KC(61),	KS_KP_Up,	KS_KP_Up,	KS_Prior, /* up, */
    KC(62),	KS_KP_Down,	KS_KP_Down,	KS_Next, /* down, */
    KC(64),	KS_Delete,	KS_BackSpace,
    KC(65),	KS_p,
    KC(68),	KS_Return,
    KC(70),	KS_KP_Right,	KS_KP_Right,	KS_End, /* right, */
    KC(80),	KS_KP_Right, /* OK, (ext) */
    KC(81),	KS_KP_Down, /* tog left, */
    KC(83),	KS_Shift_R,
    KC(84),	KS_Shift_L,
    KC(88),	KS_KP_Left, /* cancel (ext), */
    KC(89),	KS_KP_Up, /* tog right, */
    KC(93),	KS_Mode_switch /* Fn */
};

#ifdef WSDISPLAY_COMPAT_RAWKBD
static const char xt_keymap[] = {
    /* KC(0), */	RAWKEY_Control_L,/* KS_Control_L, */
    /* KC(1), */	RAWKEY_Null, /* NC */
    /* KC(2), */	RAWKEY_Tab, /* KS_Tab,	KS_Tab,		KS_Caps_Lock, */
    /* KC(3), */	RAWKEY_f2, /* KS_Cmd_Screen1,	KS_f2,		Addr, */
    /* KC(4), */	RAWKEY_f1, /* KS_Cmd_Screen0,	KS_f1,		Cal, */
    /* KC(5), */	RAWKEY_f3, /* KS_Cmd_Screen2,	KS_f3,		Mail, */
    /* KC(6), */	RAWKEY_f4, /* KS_Cmd_Screen3,	KS_f4,		Home, */
    /* KC(7), */	RAWKEY_Null, /* NC */
    /* KC(8), */	RAWKEY_1, /* KS_1,		KS_exclam, */
    /* KC(9), */	RAWKEY_2, /* KS_2,		KS_quotedbl, */
    /* KC(10), */	RAWKEY_q, /* KS_q, */
    /* KC(11), */	RAWKEY_w, /* KS_w,	KS_W,	KS_asciicircum, */
    /* KC(12), */	RAWKEY_a, /* KS_a, */
    /* KC(13), */	RAWKEY_z, /* KS_z, */
    /* KC(14), */	RAWKEY_Alt_L, /* KS_Cmd,		KS_Alt_L, */
    /* KC(15), */	RAWKEY_Null, /* NC */
    /* KC(16), */	RAWKEY_3, /* KS_3,	KS_numbersign, */
    /* KC(17), */	RAWKEY_4, /* KS_4,	KS_dollar, */
    /* KC(18), */	RAWKEY_e, /* KS_e,	KS_E,		KS_equal, */
    /* KC(19), */	RAWKEY_s, /* KS_s, */
    /* KC(20), */	RAWKEY_d, /* KS_d,	KS_D,		KS_grave, */
    /* KC(21), */	RAWKEY_x, /* KS_x, */
    /* KC(22), */	RAWKEY_Null, /* ^/t (right japanese) */
    /* KC(23), */	RAWKEY_Null, /* NC */
    /* KC(24), */	RAWKEY_5, /* KS_5,	KS_percent, */
    /* KC(25), */	RAWKEY_r, /* KS_r,	KS_R,		KS_plus, */
    /* KC(26), */	RAWKEY_t, /* KS_t,	KS_T,		KS_bracketleft, */
    /* KC(27), */	RAWKEY_f, /* KS_f,		KS_F,		KS_backslash, */
    /* KC(28), */	RAWKEY_c, /* KS_c, */
    /* KC(29), */	RAWKEY_minus, /* KS_minus, KS_minus,	KS_at, */
    /* KC(30), */	RAWKEY_Escape, /* KS_Escape, Cancel */
    /* KC(31), */	RAWKEY_Null, /* NC */
    /* KC(32), */	RAWKEY_6, /* KS_6,		KS_ampersand, */
    /* KC(33), */	RAWKEY_y, /* KS_y,	KS_Y,	KS_bracketright, */
    /* KC(34), */	RAWKEY_g, /* KS_g,		KS_G,	KS_semicolon, */
    /* KC(35), */	RAWKEY_v, /* KS_v, */
    /* KC(36), */	RAWKEY_b, /* KS_b,	KS_B,	KS_underscore, */
    /* KC(37), */	RAWKEY_space, /* KS_space, */
    /* KC(38), */	RAWKEY_KP_Enter, /* KS_KP_Enter,	ok */
    /* KC(39), */	RAWKEY_Null, /* NC */
    /* KC(40), */	RAWKEY_7, /* KS_7,	KS_apostrophe, */
    /* KC(41), */	RAWKEY_8, /* KS_8,	KS_parenleft, */
    /* KC(42), */	RAWKEY_u, /* KS_u,	KS_U,		KS_braceleft,	 */
    /* KC(43), */	RAWKEY_h, /* KS_h,	KS_H,		KS_colon, */
    /* KC(44), */	RAWKEY_n, /* KS_n, */
    /* KC(45), */	RAWKEY_comma, /* KS_comma, KS_slash,	KS_less, */
    /* KC(46), */	RAWKEY_f5, /* KS_Cmd_Screen4,	KS_f5,		Menu, */
    /* KC(47), */	RAWKEY_Null, /* NC */
    /* KC(48), */	RAWKEY_9, /* KS_9,	KS_parenright, */
    /* KC(49), */	RAWKEY_i, /* KS_i,	KS_I,	KS_braceright, */
    /* KC(50), */	RAWKEY_j, /* KS_j,	KS_J,		KS_asterisk, */
    /* KC(51), */	RAWKEY_m, /* KS_m, */
    /* KC(52), */	RAWKEY_period, /* KS_period, KS_question, KS_greater, */
    /* KC(53), */	RAWKEY_Null, /* NC */
    /* KC(54), */	RAWKEY_Left, /* KS_KP_Left, left, */
    /* KC(55), */	RAWKEY_Null, /* NC */
    /* KC(56), */	RAWKEY_0, /* KS_0,	KS_asciitilde, */
    /* KC(57), */	RAWKEY_o, /* KS_o, */
    /* KC(58), */	RAWKEY_k, /* KS_k, */
    /* KC(59), */	RAWKEY_l, /* KS_l,	KS_L,		KS_bar, */
    /* KC(60), */	RAWKEY_Null, /* NC */
    /* KC(61), */	RAWKEY_Up, /* KS_KP_Up, up, */
    /* KC(62), */	RAWKEY_Down, /* KS_KP_Down, down, */
    /* KC(63), */	RAWKEY_Null, /* NC */
    /* KC(64), */	RAWKEY_BackSpace, /* KS_Delete,	KS_BackSpace, */
    /* KC(65), */	RAWKEY_p, /* KS_p, */
    /* KC(66), */	RAWKEY_Null, /* NC */
    /* KC(67), */	RAWKEY_Null, /* NC */
    /* KC(68), */	RAWKEY_Return, /* KS_Return, */
    /* KC(69), */	RAWKEY_Null, /* NC */
    /* KC(70), */	RAWKEY_Right, /* KS_KP_Right, right, */
    /* KC(71), */	RAWKEY_Null, /* NC */
    /* KC(72), */	RAWKEY_Null, /* NC */
    /* KC(73), */	RAWKEY_Null, /* NC */
    /* KC(74), */	RAWKEY_Null, /* NC */
    /* KC(75), */	RAWKEY_Null, /* NC */
    /* KC(76), */	RAWKEY_Null, /* NC */
    /* KC(77), */	RAWKEY_Null, /* NC */
    /* KC(78), */	RAWKEY_Null, /* NC */
    /* KC(79), */	RAWKEY_Null, /* NC */
    /* KC(80), */	RAWKEY_Right, /* KS_KP_Right, OK, (ext) */
    /* KC(81), */	RAWKEY_Down, /* KS_KP_Down, tog left, */
    /* KC(82), */	RAWKEY_Null, /* NC */
    /* KC(83), */	RAWKEY_Shift_R, /* KS_Shift_R, */
    /* KC(84), */	RAWKEY_Shift_L, /* KS_Shift_L, */
    /* KC(85), */	RAWKEY_Null, /* NC */
    /* KC(86), */	RAWKEY_Null, /* NC */
    /* KC(87), */	RAWKEY_Null, /* NC */
    /* KC(88), */	RAWKEY_Left, /* KS_KP_Left, cancel (ext), */
    /* KC(89), */	RAWKEY_Up, /* KS_KP_Up, tog right, */
    /* KC(90), */	RAWKEY_Null, /* NC */
    /* KC(91), */	RAWKEY_Null, /* NC */
    /* KC(92), */	RAWKEY_Null, /* NC */
    /* KC(93), */	RAWKEY_Alt_R, /* KS_Mode_switch Fn */
};
#endif

#define KBD_MAP(name, base, map) \
			{ name, base, sizeof(map)/sizeof(keysym_t), map }

static const struct wscons_keydesc zkbd_keydesctab[] = {
        KBD_MAP(KB_US,                  0,      zkbd_keydesc_us),
        {0, 0, 0, 0}
};

#undef KBD_MAP
#undef KC
@


1.19
log
@enter ddb thru alt-escape.
okay miod@@, uwe@@
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.18 2005/04/21 02:34:07 dlg Exp $ */
@


1.18
log
@provide pgup, pgdown, home and end by using fn with the arrow keys.

ok drahn@@ deraadt@@ uwe@@
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.17 2005/01/31 02:22:17 uwe Exp $ */
d49 1
a49 1
    KC(30),	KS_Escape, /* Cancel */
@


1.17
log
@Make LCD brightness adjustable by wsconsctl(1), and fix the base address
of scoop1 to make it work.
ok drahn@@
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.16 2005/01/25 23:30:55 drahn Exp $ */
d69 1
a69 1
    KC(54),	KS_KP_Left, /* left, */
d74 2
a75 2
    KC(61),	KS_KP_Up, /* up, */
    KC(62),	KS_KP_Down, /* down, */
d79 1
a79 1
    KC(70),	KS_KP_Right, /* right, */
@


1.16
log
@map Fn to something for now.
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.15 2005/01/18 22:18:11 drahn Exp $ */
d36 2
a37 2
    KC(16),	KS_Cmd_BrightnessUp,	KS_3,	KS_numbersign,
    KC(17),	KS_Cmd_BrightnessDown,	KS_4,	KS_dollar,	
@


1.15
log
@Better keys, now uses the wskbdraw.h header files defines.
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.14 2005/01/18 01:03:15 drahn Exp $ */
d184 1
a184 1
    /* KC(93), */	RAWKEY_Begin, /* KS_Mode_switch Fn */
@


1.14
log
@Nearly working RAWKEY support, needs a lot of cleaning, but getting there.
first portion of poll support. Shouldn't change std key input.
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.13 2005/01/17 18:24:11 deraadt Exp $ */
d20 1
d91 94
a184 94
    /* KC(0), */	86,/* KS_Control_L, */
    /* KC(1), */	 0, /* NC */
    /* KC(2), */	15, /* KS_Tab,	KS_Tab,		KS_Caps_Lock, */
    /* KC(3), */	60, /* KS_Cmd_Screen1,	KS_f2,		Addr, */
    /* KC(4), */	59, /* KS_Cmd_Screen0,	KS_f1,		Cal, */
    /* KC(5), */	61, /* KS_Cmd_Screen2,	KS_f3,		Mail, */
    /* KC(6), */	62, /* KS_Cmd_Screen3,	KS_f4,		Home, */
    /* KC(7), */	 0, /* NC */
    /* KC(8), */	 2, /* KS_1,		KS_exclam, */
    /* KC(9), */	 3, /* KS_2,		KS_quotedbl, */
    /* KC(10), */	16, /* KS_q, */
    /* KC(11), */	17, /* KS_w,	KS_W,		KS_asciicircum, */
    /* KC(12), */	30, /* KS_a, */
    /* KC(13), */	44, /* KS_z, */
    /* KC(14), */	56, /* KS_Cmd,		KS_Alt_L, */
    /* KC(15), */	 0, /* NC */
    /* KC(16), */	 4, /* KS_3,		KS_numbersign, */
    /* KC(17), */	 5, /* KS_4,		KS_dollar, */
    /* KC(18), */	18, /* KS_e,		KS_E,		KS_equal, */
    /* KC(19), */	31, /* KS_s, */
    /* KC(20), */	32, /* KS_d,		KS_D,		KS_grave, */
    /* KC(21), */	45, /* KS_x, */
    /* KC(22), */	 0, /* ^/t (right japanese) */
    /* KC(23), */	 0, /* NC */
    /* KC(24), */	 6, /* KS_5,		KS_percent, */
    /* KC(25), */	19, /* KS_r,		KS_R,		KS_plus, */
    /* KC(26), */	20, /* KS_t,	KS_T,		KS_bracketleft, */
    /* KC(27), */	33, /* KS_f,		KS_F,		KS_backslash, */
    /* KC(28), */	46, /* KS_c, */
    /* KC(29), */	74, /* KS_minus,	KS_minus,	KS_at, */
    /* KC(30), */	 1, /* KS_Escape, Cancel */
    /* KC(31), */	 0, /* NC */
    /* KC(32), */	 7, /* KS_6,		KS_ampersand, */
    /* KC(33), */	21, /* KS_y,	KS_Y,		KS_bracketright, */
    /* KC(34), */	34, /* KS_g,		KS_G,		KS_semicolon, */
    /* KC(35), */	47, /* KS_v, */
    /* KC(36), */	48, /* KS_b,	KS_B,		KS_underscore, */
    /* KC(37), */	57, /* KS_space, */
    /* KC(38), */	 0, /* KS_KP_Enter,	ok */
    /* KC(39), */	 0, /* NC */
    /* KC(40), */	 8, /* KS_7,	KS_apostrophe, */
    /* KC(41), */	 9, /* KS_8,	KS_parenleft, */
    /* KC(42), */	22, /* KS_u,	KS_U,		KS_braceleft,	 */
    /* KC(43), */	35, /* KS_h,	KS_H,		KS_colon, */
    /* KC(44), */	49, /* KS_n, */
    /* KC(45), */	51, /* KS_comma,	KS_slash,	KS_less, */
    /* KC(46), */	63, /* KS_Cmd_Screen4,	KS_f5,		Menu, */
    /* KC(47), */	 0, /* NC */
    /* KC(48), */	10, /* KS_9,	KS_parenright, */
    /* KC(49), */	23, /* KS_i,	KS_I,		KS_braceright, */
    /* KC(50), */	36, /* KS_j,	KS_J,		KS_asterisk, */
    /* KC(51), */	50, /* KS_m, */
    /* KC(52), */	52, /* KS_period,	KS_question,	KS_greater, */
    /* KC(53), */	 0, /* NC */
    /* KC(54), */	203, /* KS_KP_Left, left, */
    /* KC(55), */	 0, /* NC */
    /* KC(56), */	11, /* KS_0,		KS_asciitilde, */
    /* KC(57), */	24, /* KS_o, */
    /* KC(58), */	37, /* KS_k, */
    /* KC(59), */	38, /* KS_l,		KS_L,		KS_bar, */
    /* KC(60), */	 0, /* NC */
    /* KC(61), */	200, /* KS_KP_Up, up, */
    /* KC(62), */	208, /* KS_KP_Down, down, */
    /* KC(63), */	 0, /* NC */
    /* KC(64), */	221, /* KS_Delete,	KS_BackSpace, */
    /* KC(65), */	255, /* KS_p, */
    /* KC(66), */	 0, /* NC */
    /* KC(67), */	 0, /* NC */
    /* KC(68), */	156, /* KS_Return, */
    /* KC(69), */	 0, /* NC */
    /* KC(70), */	205, /* KS_KP_Right, right, */
    /* KC(71), */	 0, /* NC */
    /* KC(72), */	 0, /* NC */
    /* KC(73), */	 0, /* NC */
    /* KC(74), */	 0, /* NC */
    /* KC(75), */	 0, /* NC */
    /* KC(76), */	 0, /* NC */
    /* KC(77), */	 0, /* NC */
    /* KC(78), */	 0, /* NC */
    /* KC(79), */	 0, /* NC */
    /* KC(80), */	205, /* KS_KP_Right, OK, (ext) */
    /* KC(81), */	208, /* KS_KP_Down, tog left, */
    /* KC(82), */	 0, /* NC */
    /* KC(83), */	0, /* KS_Shift_R, */
    /* KC(84), */	0, /* KS_Shift_L, */
    /* KC(85), */	 0, /* NC */
    /* KC(86), */	 0, /* NC */
    /* KC(87), */	 0, /* NC */
    /* KC(88), */	203, /* KS_KP_Left, cancel (ext), */
    /* KC(89), */	200, /* KS_KP_Up, tog right, */
    /* KC(90), */	 0, /* NC */
    /* KC(91), */	 0, /* NC */
    /* KC(92), */	 0, /* NC */
    /* KC(93), */	56, /* KS_Mode_switch Fn */
@


1.13
log
@ALT-3/4 are brightness down/up (ALT for now, later Fn)
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.12 2005/01/15 01:36:12 deraadt Exp $ */
d87 99
@


1.12
log
@place ` (grave) at Fn-d which is a funny little dot (close enough)
fix []
make Fn-u and Fn-i be {} (close enough to what is shown there)
make the backside toggle return left/right (in the sense of closed lid)
and make OK return down and Cancel return up
this actually makes it possible to browse the net in lynx; for now
those mappings will suffice
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.11 2005/01/15 00:41:14 deraadt Exp $ */
d35 2
a36 2
    KC(16),	KS_3,		KS_numbersign,
    KC(17),	KS_4,		KS_dollar,
@


1.11
log
@swap < and >, spotted by drahn
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.10 2005/01/14 21:12:37 deraadt Exp $ */
d39 1
a39 1
    KC(20),	KS_d,
d44 1
a44 1
    KC(26),	KS_t,		KS_T,		KS_braceleft,
d50 1
a50 1
    KC(33),	KS_y,		KS_Y,		KS_braceright,
d58 1
a58 1
    KC(42),	KS_u,		KS_U,	
d64 1
a64 1
    KC(49),	KS_i,		KS_I,	
d79 2
a80 2
    KC(80),	KS_KP_Next, /* OK, (ext) */
    KC(81),	KS_KP_Prior, /* tog left, */
d83 2
a84 2
    KC(88),	KS_KP_Prior, /* cancel (ext), */
    KC(89),	KS_KP_Next, /* tog right, */
@


1.10
log
@define left-japanese character as an Alt key for now, so that
Alt-F# where # is 1-5 will do virtual screens.  The F# keys of
course are calendar, address, mail, home, menu... discussion with
drahn, help from miod.  It would be nice to use Fn-F# later on
but wscons needs modification for this
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.9 2005/01/14 18:42:31 drahn Exp $ */
d61 1
a61 1
    KC(45),	KS_comma,	KS_slash,	KS_greater,
d67 1
a67 1
    KC(52),	KS_period,	KS_question,	KS_less,
@


1.9
log
@clean up dmesg: '\n', speed up polling for 'rollover',
add F1-F5 for Cal, Addr, mail Home, Menu
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.8 2005/01/14 16:39:15 miod Exp $ */
d24 4
a27 4
    KC(3),	KS_f2,	/* Addr, */
    KC(4),	KS_f1,	/* Cal, */
    KC(5),	KS_f3,	/* Mail, */
    KC(6),	KS_f4,	/* Home, */
d34 1
a34 1
    /* KC(14),	US, (left japanese) */
d62 1
a62 1
    KC(46),	KS_f5,	/* Menu, */
@


1.8
log
@Minor KNF and tweaks, also interrupt at IPL_TTY rather than IPL_BIO.

ok drahn@@
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.7 2005/01/14 01:26:44 drahn Exp $ */
d24 4
a27 4
    /* KC(3),	Addr, */
    /* KC(4),	Cal, */
    /* KC(5),	Mail, */
    /* KC(6),	Home, */
d62 1
a62 1
    /* KC(46),	Menu, */
@


1.7
log
@Fix these.
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.6 2005/01/14 01:12:20 drahn Exp $ */
d31 1
a31 1
    KC(11),	KS_w,		 KS_W,		KS_asciicircum,
@


1.6
log
@Fix direction.
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.5 2005/01/14 00:53:12 drahn Exp $ */
d35 1
a35 1
    KC(16),	KS_3,		KS_ssharp,
d49 1
a49 1
    KC(32),	KS_6,	
@


1.5
log
@This should be mostly reasonable, most of the keys sane.
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.4 2005/01/14 00:39:55 drahn Exp $ */
d80 1
a80 1
    KC(81),	KS_KP_Next, /* tog left, */
d84 1
a84 1
    KC(89),	KS_KP_Prior, /* tog right, */
@


1.4
log
@Most (all?) of the keys.
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.3 2005/01/14 00:24:35 drahn Exp $ */
d23 1
a23 1
    KC(2),	KS_Tab,
d47 1
a47 1
    KC(29),	KS_minus,	KS_at,
d68 1
a68 1
    /* KC(54),	left, */
d73 2
a74 2
    /* KC(61),	up, */
    /* KC(62),	down, */
d78 3
a80 3
    /* KC(70),	right, */
    /* KC(80),	OK, (ext) */
    /* KC(81),	tog left, */
d83 2
a84 2
    /* KC(88),	cancel (ext), */
    /* KC(89),	tog right, */
@


1.3
log
@Support special 'Fn' keys, at least most of them.
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.2 2005/01/14 00:04:50 drahn Exp $ */
d28 2
a29 2
    KC(8),	KS_1,
    KC(9),	KS_2,
d35 2
a36 2
    KC(16),	KS_3,
    KC(17),	KS_4,
d42 1
a42 1
    KC(24),	KS_5,
d44 1
a44 1
    KC(26),	KS_t,		KS_T,		KS_parenleft,
d47 4
a50 4
    KC(29),	KS_minus,
    /* KC(30),	Cancel */
    KC(32),	KS_6,
    KC(33),	KS_y,		KS_Y,		KS_parenright,
d55 4
a58 4
    /* KC(38),	ok */
    KC(40),	KS_7,
    KC(41),	KS_8,
    KC(42),	KS_u,
d61 1
a61 1
    KC(45),	KS_slash,
d63 2
a64 2
    KC(48),	KS_9,
    KC(49),	KS_i,
d67 1
a67 1
    KC(52),	KS_question,
d69 1
a69 1
    KC(56),	KS_0,
@


1.2
log
@put the return key on the right key, Del not backspace, still needs altgr
@
text
@d1 1
a1 1
/* $OpenBSD: zaurus_kbdmap.h,v 1.1 2005/01/13 23:33:37 drahn Exp $ */
d31 1
a31 1
    KC(11),	KS_w,
d37 1
a37 2
    KC(18),	KS_e,
    KC(18),	KS_e,
d43 3
a45 3
    KC(25),	KS_r,
    KC(26),	KS_t,
    KC(27),	KS_f,
d50 2
a51 2
    KC(33),	KS_y,
    KC(34),	KS_g,
d53 1
a53 1
    KC(36),	KS_b,
d59 1
a59 1
    KC(43),	KS_h,
d65 1
a65 1
    KC(50),	KS_j,
d72 1
a72 1
    KC(59),	KS_l,
@


1.1
log
@Stage one of wscons support.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d34 1
d76 1
a76 1
    KC(64),	KS_BackSpace,
d78 1
a78 1
    /* KC(68),	US, (left japanese) */
a81 1
    KC(83),	KS_Return,
@

