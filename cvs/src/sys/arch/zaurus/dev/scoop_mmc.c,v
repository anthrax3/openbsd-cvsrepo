head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.28
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.24
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.26
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.18
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.22
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.20
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.16
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.14
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.12
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2009.09.03.21.40.29;	author marex;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.18.20.53.10;	author uwe;	state Exp;
branches;
next	;


desc
@@


1.2
log
@pxa2x0_mmc.c: allow passing detect GPIO from platform

OK drahn@@
@
text
@/*	$OpenBSD: scoop_mmc.c,v 1.1 2007/03/18 20:53:10 uwe Exp $	*/

/*
 * Copyright (c) 2007 Uwe Stuehler <uwe@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/* Attachment driver for pxammc(4) on Zaurus */

#include <sys/param.h>
#include <sys/device.h>
#include <sys/systm.h>

#include <dev/sdmmc/sdmmcreg.h>

#include <machine/machine_reg.h>

#include <arch/arm/xscale/pxammcvar.h>
#include <arch/zaurus/dev/zaurus_scoopvar.h>

int	scoop_mmc_match(struct device *, void *, void *);
void	scoop_mmc_attach(struct device *, struct device *, void *);

struct cfattach pxammc_scoop_ca = {
	sizeof(struct pxammc_softc), scoop_mmc_match,
	scoop_mmc_attach
};

u_int32_t scoop_mmc_get_ocr(void *);
int	  scoop_mmc_set_power(void *, u_int32_t);

int
scoop_mmc_match(struct device *parent, void *match, void *aux)
{
	return pxammc_match();
}

void
scoop_mmc_attach(struct device *parent, struct device *self, void *aux)
{
	struct pxammc_softc *sc = (struct pxammc_softc *)self;

	sc->tag.cookie = (void *)sc;
	sc->tag.get_ocr = scoop_mmc_get_ocr;
	sc->tag.set_power = scoop_mmc_set_power;

	sc->sc_gpio_detect = GPIO_MMC_DETECT;

	pxammc_attach(sc, aux);
}

u_int32_t
scoop_mmc_get_ocr(void *cookie)
{
	return MMC_OCR_3_2V_3_3V | MMC_OCR_3_3V_3_4V;
}

int
scoop_mmc_set_power(void *cookie, u_int32_t ocr)
{
	if (ISSET(ocr, MMC_OCR_3_2V_3_3V | MMC_OCR_3_3V_3_4V)) {
		scoop_set_sdmmc_power(1);
		return 0;
	} else if (ocr != 0) {
		printf("scoop_mmc_set_power: unsupported OCR (%#x)\n", ocr);
		return EINVAL;
	} else {
		scoop_set_sdmmc_power(0);
		return 0;
	}
}
@


1.1
log
@Support the PXA27x SD/SDIO/MMC controller on Zaurus

We use the suggested workaround for the problem E40 in the PXA27x errata
sheet. Unfortunately this limits the bus speed to 9.75Mhz.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d27 2
d57 2
@

