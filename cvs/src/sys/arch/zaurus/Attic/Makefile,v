head	1.10;
access;
symbols
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.8.0.8
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.10
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.10
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.8
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.6
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.18
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.20
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.16
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@# @;


1.10
date	2016.09.03.13.37.42;	author guenther;	state dead;
branches;
next	1.9;
commitid	6T3r4QcMFKe3Fo5T;

1.9
date	2016.05.31.18.37.04;	author tedu;	state Exp;
branches;
next	1.8;
commitid	sBYPGaH3LSicYd3U;

1.8
date	2013.12.08.14.46.39;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2013.03.26.19.43.01;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2010.11.12.17.11.44;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.03.20.08.03;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.31.22.21.44;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.06.02.20.24;	author uwe;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.10.00.25.45;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.31.00.04.35;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Retire zaurus, as it hasn't made the EABI jump and will be permanently broken
shortly when we use the hardware thread register in userland
@
text
@#	$OpenBSD: Makefile,v 1.9 2016/05/31 18:37:04 tedu Exp $

S=	${.CURDIR}/../..
KFILE=	GENERIC
.if exists(conf/GENERIC.MP)
KFILE=	GENERIC.MP
.endif
TDIRS=	${_arch} include
TAGS=	${.CURDIR}/tags

NOPROG=
NOMAN=
NOOBJ=
SUBDIR=	stand

# config the fattest kernel we can find into a temporary dir
# to create a Makefile.  Then use make to pull some variables
# out and push them into the sub-shell to expand the paths,
# and finally run ctags.
tags::
	TDIR=`mktemp -d /tmp/_tagXXXXXXXXXX` || exit 1; \
	eval "S=${S}" && \
	config -s ${S} -b $${TDIR} ${.CURDIR}/conf/${KFILE} && \
	eval "_arch=\"`make -V _arch -f $${TDIR}/Makefile`\"" && \
	eval "_mach=\"`make -V _mach -f $${TDIR}/Makefile`\"" && \
	eval "_machdir=\$S/arch/$${_mach}" && \
	eval "_archdir=\$S/arch/$${_arch}" && \
	eval "HFILES=\"`find $S \( -path $S/arch -o -path $S/stand -o -path $S/lib/libsa -o -path $S/lib/libkern/arch \) -prune -o -name '*.h'; find $${_machdir} $${_archdir} $S/lib/libkern/arch/$${_arch} \( -name boot -o -name stand \) -prune -o -name '*.h'`\"" && \
	eval "SFILES=\"`make -V SFILES -f $${TDIR}/Makefile`\"" && \
	eval "CFILES=\"`make -V CFILES -f $${TDIR}/Makefile`\"" && \
	eval "AFILES=\"`make -V AFILES -f $${TDIR}/Makefile`\"" && \
	ctags -wd -f ${TAGS} $${CFILES} $${HFILES} && \
	egrep "^[_A-Z]*ENTRY[_A-Z]*\(.*\)" $${SFILES} $${AFILES} | \
	    sed "s;\\([^:]*\\):\\([^(]*\\)(\\([^, )]*\\)\\(.*\\);\\3	\\1	/^\\2(\\3\\4$$/;" \
	    >> ${TAGS} && \
	sort -o ${TAGS} ${TAGS} && \
	rm -rf $${TDIR}

links:
	-for i in conf ${TDIRS}; do \
	    (cd $$i && rm -f tags; ln -s tags tags); done

obj:	_SUBDIRUSE

.include <bsd.prog.mk>
@


1.9
log
@fix arch/mach confusion in make tags. from frantisek holop
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2013/12/08 14:46:39 espie Exp $
@


1.8
log
@reflect reality, mark as NOOBJ
"sure" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2013/03/26 19:43:01 jasper Exp $
d28 1
a28 1
	eval "HFILES=\"`find $S \( -path $S/'arch' -o -path $S/stand -o -path $S/lib/libsa -o -path $S'/lib/libkern/arch' \) -prune -o -name '*.h'; find $${_machdir} $${_archdir} $S/lib/libkern/arch/$${_mach} \( -name boot -o -name stand \) -prune -o -name '*.h'`\"" && \
@


1.7
log
@sync TDIRS with reality

"looks good" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2010/11/12 17:11:44 deraadt Exp $
d13 1
@


1.6
log
@Push all potential (as in, all system MI not utilized by the bootblocks)
.h files into the ctags run as well to bring #define's and structs and
such into scope.  Problem reported by thib
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2010/11/03 20:08:03 deraadt Exp $
d8 1
a8 1
TDIRS=	${_arch} include pci isa eisa
@


1.5
log
@no need to specify the -t flag to ctags
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2010/05/31 22:21:44 deraadt Exp $
d27 1
d31 1
a31 1
	ctags -wd -f ${TAGS} $${CFILES} && \
@


1.4
log
@Completely rewrite the tags file creation process.  use config(8) against
a fat kernel (GERERIC or GENERIC.MP) into a temporary dir, then extract some
variables using make -V, and after some more singing and dancing use this
full and (more) correct list of files with ctags.  Don't read this code.
ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2007/10/22 01:26:31 deraadt Exp $
d30 1
a30 1
	ctags -wdt -f ${TAGS} $${CFILES} && \
@


1.3
log
@make tags and links work, and use all sources
@
text
@d1 1
a1 2
# 	$OpenBSD: Makefile,v 1.2 2005/01/10 00:25:45 deraadt Exp $
#	$NetBSD: Makefile,v 1.1 2001/06/12 08:32:46 chris Exp $
d3 7
a9 4
# Makefile for zaurus tags file and boot blocks

S=${.CURDIR}/../..
.include "$S/kern/Make.tags.inc"
d11 2
d15 21
a35 21
NOPROG=	noprog
NOMAN=	noman

TZAURUS=	$S/arch/zaurus/tags

SZAURUS=	$S/arch/zaurus/dev/*.[ch] $S/arch/zaurus/include/*.h \
		$S/arch/zaurus/zaurus/*.[ch] $S/arch/arm/arm/*.[ch] \
		$S/arch/arm/include/*.h $S/arch/arm/mainbus/*.[ch] \
		$S/arch/arm/sa11x0/*.[ch] $S/arch/arm/xscale/*.[ch]
AZAURUS=	$S/arch/zaurus/zaurus/*.S $S/arch/arm/arm/*.S \
		$S/arch/arm/mainbus/*.S $S/arch/arm/xscale/*.S

# Directories in which to place tags links
DZAURUS=	dev include zaurus

tags:
	-ctags -wdtf ${TZAURUS} ${SZAURUS} ${COMM}
	egrep "^ENTRY(.*)|^ALTENTRY(.*)" ${AZAURUS} | \
	    sed "s;\([^:]*\):\([^(]*\)(\([^, )]*\)\(.*\);\3	\1	/^\2(\3\4$$/;" \
	    >> ${TZAURUS}
	sort -o ${TZAURUS} ${TZAURUS}
d38 2
a39 2
	-for i in ${DZAURUS}; do \
	    (cd $$i && { rm -f tags; ln -s ${TZAURUS} tags; }) done
@


1.2
log
@enter stand
@
text
@d1 1
a1 1
/* 	$OpenBSD: Makefile,v 1.1 2004/12/31 00:04:35 drahn Exp $	*/
d6 16
a21 4
TCATS=	../zaurus/tags
SCATS=	../zaurus/zaurus/*.[ch] ../zaurus/include/*.h \
		../zaurus/isa/*.[ch]
ACATS=	../zaurus/zaurus/*.S
d24 1
a24 3
DCATS=	isa include

.include "../../kern/Make.tags.inc"
d27 5
a31 5
	-ctags -wdtf ${TCATS} ${SCATS} ${COMM}
	egrep "^ENTRY(.*)|^ALTENTRY(.*)" ${ACATS} | \
	    sed "s;\([^:]*\):\([^(]*\)(\([^, )]*\)\(.*\);\3 \1 /^\2(\3\4$$/;" \
	    >> ${TCATS}
	sort -o ${TCATS} ${TCATS}
d34 2
a35 2
	-for i in ${DCATS}; do \
	    cd $$i && rm -f tags; ln -s ../tags tags; done
d37 1
d39 1
a39 3
SUBDIR=	stand

.include <bsd.subdir.mk>
@


1.1
log
@Port of OpenBSD to the Zaurus, currently running on C860, soon C3000.
@
text
@d1 1
a1 1
/* 	$OpenBSD: Makefile,v 1.2 2004/02/06 17:31:17 drahn Exp $	*/
d28 1
a28 1
SUBDIR=
@

