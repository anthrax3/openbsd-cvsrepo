head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.16
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.14
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.18
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.14
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.12
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.10
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.10
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.1.0.16
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.5
date	2014.06.09.16.26.32;	author miod;	state Exp;
branches;
next	1.4;
commitid	CkVHFMR82yg837kv;

1.4
date	2010.04.21.15.37.32;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2007.12.29.17.43.12;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2007.12.29.17.41.33;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.26.12.34.05;	author miod;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.06.05.23.09.48;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Replace the unmaintainable assembler code responsible for 88100 precise FPU
fault handling with a C wrapper around the softfloat code, as already done for
88110 kernels.

As a bonus, attempting to read or write FPU control registers but fcr62 and
fcr63 in userland will now correctly signal an illegal instruction, instead
of leaving the destination register unchanged and pretending nothing bad
happened.

Be sure to rm m88100_fp.d in your kernel compile directory after updating your
tree.
@
text
@/*	$OpenBSD: ieeefp.h,v 1.4 2010/04/21 15:37:32 miod Exp $ */
/*
 * Copyright (c) 1996 Nivas Madhur
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Nivas Madhur.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
/*
 * Values for fp_except are selected to match the bits in FPSR (see
 * m88100 user's manual page 6-33). This file is derived from the
 * definitions in the ABI/88k manual and sparc port.
 * 			       -- Nivas
 */

#ifndef _M88K_IEEEFP_H_
#define _M88K_IEEEFP_H_

typedef int fp_except;
#define FP_X_INV	0x10	/* invalid operation exception */
#define FP_X_DZ		0x08	/* divide-by-zero exception */
#define FP_X_UFL	0x04	/* underflow exception */
#define FP_X_OFL	0x02	/* overflow exception */
#define FP_X_IMP	0x01	/* imprecise (loss of precision) */

typedef enum {
    FP_RN=0,		/* round to nearest representable number */
    FP_RZ=1,		/* round to zero (truncate) */
    FP_RM=2,		/* round toward negative infinity */
    FP_RP=3		/* round toward positive infinity */
} fp_rnd;

#ifdef _KERNEL

/*
 * Defines for the floating-point completion code.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/proc.h>

#define	float_raise(bits)	curproc->p_md.md_tf->tf_fpsr |= bits
#define	float_set_inexact()	float_raise(FP_X_IMP)
#define	float_set_invalid()	float_raise(FP_X_INV)

/* rounding mode bits position in FPCR */
#define	FPCR_RD_SHIFT	14
#define	FPCR_RD_MASK	0x03

#define	float_get_round(fpcr)	(((fpcr) >> FPCR_RD_SHIFT) & FPCR_RD_MASK)
#define	fpgetround()		float_get_round(curproc->p_md.md_tf->tf_fpcr)

#define	SOFTFLOAT_MD_CLZ
static inline int
countLeadingZeros32(u_int32_t a)
{
	int rc;
	asm volatile("ff1 %0, %1" : "=r"(rc) : "r"(a));
	return (a != 0 ? 31 - rc : rc);
}

#endif /* _KERNEL */

#endif /* _M88K_IEEEFP_H_ */
@


1.4
log
@<sys/systm.h> required now.
@
text
@d1 1
a1 1
/*	$OpenBSD: ieeefp.h,v 1.3 2007/12/29 17:43:12 miod Exp $ */
d59 1
a59 1
 * Defines for the 88110 floating-point completion code.
d86 1
a86 1
#endif
@


1.3
log
@Override SoftFloat's countLeadingZeros32() with a faster, ff1-based, version
on m88k.
@
text
@d1 1
a1 1
/*	$OpenBSD: ieeefp.h,v 1.2 2007/12/29 17:41:33 miod Exp $ */
d63 1
@


1.2
log
@Had I known we had a kernel version of John Hauser's SoftFloat code, I would
have jumped on it instead of basing the FPU completion work on the sparc
FPU code.

This is now repaired with this commit, and m88110_fp.c changes directory
again, for the last time.
@
text
@d1 1
a1 1
/*	$OpenBSD: ieeefp.h,v 1.1 2004/04/26 12:34:05 miod Exp $ */
d75 9
@


1.1
log
@Start factorizing luna88k and mvme88k common parts.
For now, include files only.
@
text
@d1 1
a1 1
/*	$OpenBSD: ieeefp.h,v 1.4 2003/10/11 22:08:57 miod Exp $ */
d55 22
@


1.1.2.1
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
@

