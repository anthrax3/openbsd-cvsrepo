head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.12
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.10
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.6
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.8
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.22
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.20
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.14
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.18
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.16
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.12
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.10
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.8
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.6
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.7
date	2014.03.18.22.36.34;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2013.08.26.21.38.08;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2011.03.23.16.54.35;	author pirofti;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.28.22.21.15;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2005.10.12.19.05.43;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.18.16.44.37;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.26.12.34.05;	author miod;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.06.05.23.09.48;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: proc.h,v 1.6 2013/08/26 21:38:08 miod Exp $ */
/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)proc.h	8.1 (Berkeley) 6/11/93
 *
 * from: Header: proc.h,v 1.6 92/11/26 02:04:41 torek Exp  (LBL)
 */

#ifndef _M88K_PROC_H_
#define _M88K_PROC_H_

struct trapframe;

/*
 * Machine-dependent part of the proc structure for m88k.
 */
struct mdproc {
	struct trapframe *md_tf;	/* trap/syscall registers */
	volatile int md_astpending;	/* AST pending for this process */

        /*
         * Single stepping is done by moving two breakpoints in the
         * process' code:
         * - one breakpoint for regular flow (i.e. the immediately following
         *   instruction)
         * - one breakpoint for potential branches.
         * Using two breakpoints allows us to not worry about the delay slots.
         */
	vaddr_t	md_bp0va;
	u_int	md_bp0save;
	vaddr_t	md_bp1va;
	u_int	md_bp1save;
};

#define __HAVE_MD_TCB

#endif /* _M88K_PROC_H_ */
@


1.6
log
@Use %r27 as the thread control block pointer, allowing for __get_tcb() calls
in libpthread to be optimized away.

While there, follow DG/UX's example of using more than one register for thread
purposes (after all, the ABI reserves four of them), and also use %r26 to store
a pointer to the current thread's errno.

Since it is not possible to initialize %r26 at thread creation without
intrusive and potentially race-prone changes, have __tfork() reset %r26 to
zero, and libpthread's __cerror lazy initialize it. As soon as %r26 is nonzero,
it will be used instead of calling __errno().

This means that binaries linked against HEAD libpthread need to run on HEAD
kernels, and we are belatedly jumping on the 64-bit time_t bump (since there
are no 64-bit time_t m88k snapshots yet).

Joint work with guenther@@; "Your love of asm is sick and wrong, and yet
beautiful." and ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.5 2011/03/23 16:54:35 pirofti Exp $ */
d50 1
a50 1
 * Machine-dependent part of the proc structure for mvme88k.
@


1.5
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.4 2005/11/28 22:21:15 miod Exp $ */
d69 2
@


1.4
log
@Switch to per-process AST flags and clean AST-related codepaths; speeds up
forks as a bonus.
Tested on luna88k and mvme88k by aoyama@@ martin@@ and I.
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.3 2005/10/12 19:05:43 miod Exp $ */
d44 2
a45 2
#ifndef __MACHINE_PROC_H__
#define __MACHINE_PROC_H__
d70 1
a70 1
#endif /* __MACHINE_PROC_H__ */
@


1.3
log
@Stop mapping the u area at fixed UADDR in addition to its actual va.
While there, attempt to clean and comment stack usage in the kernel.
No functional change.

From the m88k SMP tree; help&test martin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.2 2005/05/18 16:44:37 miod Exp $ */
d54 1
@


1.2
log
@Rework the single step implementation; mostly delaying breakpoint
removal so that single stepping delay slots work. Also added the ability
to single step through system calls (which cause an implicit branch if
successfull).

works for me, "looks ok" kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.1 2004/04/26 12:34:05 miod Exp $ */
a53 1
	int	md_upte[UPAGES];	/* ptes for mapping u page */
@


1.1
log
@Start factorizing luna88k and mvme88k common parts.
For now, include files only.
@
text
@d1 1
a1 1
/*	$OpenBSD: proc.h,v 1.11 2004/01/12 07:46:16 miod Exp $ */
d47 1
a47 1
#include <machine/pcb.h>
d53 2
a54 3
	struct   trapframe *md_tf;    /* trap/syscall registers */
	struct   fpstate *md_fpstate; /* fpu state, if any; always resident */
	int      md_upte[UPAGES];     /* ptes for mapping u page */
d56 12
a67 4
	unsigned md_ss_addr;          /* single step address for ptrace */
	unsigned md_ss_instr;         /* single step instruction for ptrace */
	unsigned md_ss_taken_addr;    /* single step address for ptrace */
	unsigned md_ss_taken_instr;   /* single step instruction for ptrace */
a70 1

@


1.1.2.1
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
@

