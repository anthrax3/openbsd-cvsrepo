head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.16
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.14
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.10
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.6
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.8
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.7.0.8
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.8
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.6
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.5.0.12
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.6
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.10
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.8
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.6
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.2.0.8
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.1
	SMP_SYNC_B:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@# @;


1.9
date	2014.06.09.15.00.57;	author miod;	state Exp;
branches;
next	1.8;
commitid	KFz6tsuAjX4rm1f9;

1.8
date	2014.06.08.13.20.39;	author miod;	state Exp;
branches;
next	1.7;
commitid	OaOUrnKw5wRWSVZi;

1.7
date	2013.01.05.11.20.56;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2010.12.23.20.05.08;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2007.12.02.21.32.08;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.15.05.34.57;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2006.05.08.14.03.35;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.02.08.32.07;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.29.14.33.27;	author miod;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.06.05.23.09.48;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Doh, traps 128 and 129 need to point to sigsys, not unknown_vector.
@
text
@/*	$OpenBSD: vectors_88110.S,v 1.8 2014/06/08 13:20:39 miod Exp $	*/
/*
 * Mach Operating System
 * Copyright (c) 1991, 1992 Carnegie Mellon University
 * Copyright (c) 1991 OMRON Corporation
 * All Rights Reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON AND OMRON ALLOW FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON AND OMRON DISCLAIM ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <machine/asm.h>

#define	UNKNOWN16	\
	VECTOR(m88110_unknown_handler); VECTOR(m88110_unknown_handler); \
	VECTOR(m88110_unknown_handler); VECTOR(m88110_unknown_handler); \
	VECTOR(m88110_unknown_handler); VECTOR(m88110_unknown_handler); \
	VECTOR(m88110_unknown_handler); VECTOR(m88110_unknown_handler); \
	VECTOR(m88110_unknown_handler); VECTOR(m88110_unknown_handler); \
	VECTOR(m88110_unknown_handler); VECTOR(m88110_unknown_handler); \
	VECTOR(m88110_unknown_handler); VECTOR(m88110_unknown_handler); \
	VECTOR(m88110_unknown_handler); VECTOR(m88110_unknown_handler);

	.data
GLOBAL(m88110_vector_list)
	VECTOR(m88110_reset_handler)		/* 00 */
	VECTOR(m88110_interrupt_handler)	/* 01 */
	VECTOR(m88110_instruction_access_handler)	/* 02 */
	VECTOR(m88110_data_exception_handler)	/* 03 */
	VECTOR(m88110_misaligned_handler)	/* 04 */
	VECTOR(m88110_unimplemented_handler)	/* 05 */
	VECTOR(m88110_privilege_handler)	/* 06 */
	VECTOR(m88110_bounds_handler)		/* 07 */
	VECTOR(m88110_divide_handler)		/* 08 */
	VECTOR(m88110_overflow_handler)		/* 09 */
	VECTOR(m88110_error_handler)		/* 0a */
	VECTOR(m88110_nonmaskable)		/* 0b */
	VECTOR(m88110_data_read_miss)		/* 0c */
	VECTOR(m88110_data_write_miss)		/* 0d */
	VECTOR(m88110_inst_atc_miss)		/* 0e */
	VECTOR(m88110_unknown_handler)		/* 0f */
	UNKNOWN16				/* 1x */
	UNKNOWN16				/* 2x */
	UNKNOWN16				/* 3x */
	UNKNOWN16				/* 4x */
	UNKNOWN16				/* 5x */
	UNKNOWN16				/* 6x */
	VECTOR(m88110_unknown_handler)		/* 70 */
	VECTOR(m88110_unknown_handler)		/* 71 */
	VECTOR(m88110_fpu_handler)		/* 72 */
	VECTOR(m88110_unknown_handler)		/* 73 */
	VECTOR(m88110_unimplemented_handler)	/* 74 */
	VECTOR(m88110_unknown_handler)		/* 75 */
	VECTOR(m88110_unimplemented_handler)	/* 76 */
	VECTOR(m88110_unknown_handler)		/* 77 */
	VECTOR(m88110_unimplemented_handler)	/* 78 */
	VECTOR(m88110_unknown_handler)		/* 79 */
	VECTOR(m88110_unimplemented_handler)	/* 7a */
	VECTOR(m88110_unknown_handler)		/* 7b */
	VECTOR(m88110_unimplemented_handler)	/* 7c */
	VECTOR(m88110_unknown_handler)		/* 7d */
	VECTOR(m88110_unimplemented_handler)	/* 7e */
	VECTOR(m88110_unknown_handler)		/* 7f */
	VECTOR(m88110_sigsys)			/* 80 */
	VECTOR(m88110_sigsys)			/* 81 */
#ifdef DDB
	VECTOR(m88110_break)			/* 82 */
	VECTOR(m88110_trace)			/* 83 */
	VECTOR(m88110_entry)			/* 84 */
#endif
	.word	0
	VECTOR(m88110_data_exception_handler_bootstrap)
@


1.8
log
@Stop accepting system calls on trap vectors 128 and 129. Userland has not
been doing this since almost 1.5 years and there has been the 64-bit time_t
bump in between, so no old binary should remain.
@
text
@d1 1
a1 1
/*	$OpenBSD: vectors_88110.S,v 1.7 2013/01/05 11:20:56 miod Exp $	*/
d81 2
a82 2
	VECTOR(m88110_unknown_handler)		/* 80 */
	VECTOR(m88110_unknown_handler)		/* 81 */
@


1.7
log
@Switch m88k ports to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: vectors_88110.S,v 1.6 2010/12/23 20:05:08 miod Exp $	*/
d81 2
a82 2
	VECTOR(m88110_syscall_handler)		/* 80 */
	VECTOR(m88110_syscall_handler)		/* 81 */
@


1.6
log
@The exception vector page on m88k systems has always been the same page as
the one used by the firmware, which (at least on mvme88k) is at address zero.

This is unfortunate, since this means that NULL pointer dereferences in the
kernel are not caught, and writes cause havoc.

This behaviour was necessary to be able to use the PROM system call interface
during early bootstrap, without having to disassemble the VBR page and
update branches - which use pc-relative displacement - if we were to use
a different VBR address.

On mvme88k, change this and actually set up two VBR pages: one, over the PROM
page (except for the system call vectors), and another one in the kernel
image (which will be mapped read-only). We'll run with the PROM page until
the end of autoconf, and then switch to the kernel one, and unmap all the
PROM below it.

As a bonus, the final kernel page can use optimized data access fault
handlers, which do not have to check for faults caused by badaddr(), since
badaddr() is only used during device probe on buses which do not support
hotplug.

There are a few infrastructure collateral damage on aviion and luna88k, but
these ports do not change their behaviour yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: vectors_88110.S,v 1.5 2007/12/02 21:32:08 miod Exp $	*/
d41 1
a41 1
	data
d88 1
a88 1
	word	0
@


1.5
log
@The beginning of a real floating-point exception handler for the 88110. The
existing code to enable TCFP was broken, as it was not setting the TCFP bit
in the right register.

So far, the exception handler will deliver SIGFPE in all cases. It will
eventually do the necessary rounding, and handle the odd-numbered register
pair operation, as I get time to write this (or see how much can be lifted
from the 88100 floating-point exception code).
@
text
@d1 1
a1 1
/*	$OpenBSD: vectors_88110.S,v 1.4 2006/05/15 05:34:57 miod Exp $	*/
d89 1
@


1.4
log
@Wrong routine for reserved vector 0x0f.
@
text
@d1 1
a1 1
/*	$OpenBSD: vectors_88110.S,v 1.3 2006/05/08 14:03:35 miod Exp $	*/
d67 1
a67 1
	VECTOR(m88110_fp_precise_handler)	/* 72 */
@


1.3
log
@Clean the internal m88k trap type codes; while there, simplify and
factorize the build of the VBR page betweem luna88k and mvme88k.

Tested by aoyama@@ and I.
@
text
@d1 1
a1 1
/*	$OpenBSD: vectors_88110.S,v 1.2 2004/07/02 08:32:07 miod Exp $	*/
d58 1
a58 1
	VECTOR(m88110_trace)			/* 0f */
@


1.2
log
@Since these vector tables are not final tables, they don't need to be
page aligned.
@
text
@d1 1
a1 1
/*	$OpenBSD: vectors_88110.S,v 1.1 2004/04/29 14:33:27 miod Exp $	*/
d31 9
a39 9
#define	UNDEFINED16	\
	word UNKNOWN_HANDLER; word UNKNOWN_HANDLER; \
	word UNKNOWN_HANDLER; word UNKNOWN_HANDLER; \
	word UNKNOWN_HANDLER; word UNKNOWN_HANDLER; \
	word UNKNOWN_HANDLER; word UNKNOWN_HANDLER; \
	word UNKNOWN_HANDLER; word UNKNOWN_HANDLER; \
	word UNKNOWN_HANDLER; word UNKNOWN_HANDLER; \
	word UNKNOWN_HANDLER; word UNKNOWN_HANDLER; \
	word UNKNOWN_HANDLER; word UNKNOWN_HANDLER;
d59 8
a66 8
	UNDEFINED16				/* 1x */
	UNDEFINED16				/* 2x */
	UNDEFINED16				/* 3x */
	UNDEFINED16				/* 4x */
	UNDEFINED16				/* 5x */
	UNDEFINED16				/* 6x */
	word UNKNOWN_HANDLER			/* 70 */
	word UNKNOWN_HANDLER			/* 71 */
d68 1
a68 1
	word UNKNOWN_HANDLER			/* 73 */
d70 1
a70 1
	word UNKNOWN_HANDLER			/* 75 */
d72 1
a72 1
	word UNKNOWN_HANDLER			/* 77 */
d74 1
a74 1
	word UNKNOWN_HANDLER			/* 79 */
d76 1
a76 1
	word UNKNOWN_HANDLER			/* 7b */
d78 1
a78 1
	word UNKNOWN_HANDLER			/* 7d */
d80 1
a80 1
	word UNKNOWN_HANDLER			/* 7f */
d83 1
d87 2
a88 2
GLOBAL(m88110_vector_list_end)
	word END_OF_VECTOR_LIST
@


1.1
log
@Continue factorizing m88k common code, this time files in <arch>/<arch>
which were copied verbatim from mvme88k to luna88k.

This requires backing out syntactic sugar in mvme88k kernel configuration
files which would deduct the required processor types from the board models,
as the common code only depends upon the M88100 and M88110 defines.
@
text
@d1 1
a1 1
/*	$OpenBSD: vectors_88110.S,v 1.1 2003/01/14 03:20:16 miod Exp $	*/
a41 1
	.align 4096			  /* VBR points to page aligned list */
@


1.1.2.1
log
@Merge with the trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@

