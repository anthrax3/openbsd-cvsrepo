head	1.8;
access;
symbols
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.7.0.8
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2016.01.16.11.21.42;	author visa;	state Exp;
branches;
next	1.7;
commitid	pEXwXJ45iCBy9exX;

1.7
date	2014.07.14.10.23.58;	author jasper;	state Exp;
branches;
next	1.6;
commitid	3lf26COlDMZ3MfO8;

1.6
date	2014.01.15.10.29.45;	author pirofti;	state Exp;
branches;
next	1.5;

1.5
date	2011.06.25.19.39.32;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.08.13.39.30;	author syuu;	state Exp;
branches;
next	1.3;

1.3
date	2011.05.08.13.24.55;	author syuu;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.01.16.13.59;	author syuu;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.20.06.32.30;	author syuu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Attach secondary CPUs by coremask. This fixes a crash that happened if
the MP kernel was booted with coremask=1.
@
text
@/*	$OpenBSD: mainbus.c,v 1.7 2014/07/14 10:23:58 jasper Exp $ */

/*
 * Copyright (c) 2001-2003 Opsycon AB  (www.opsycon.se / www.opsycon.com)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>

#include <machine/autoconf.h>
#include <machine/octeonvar.h>

int	mainbus_match(struct device *, void *, void *);
void	mainbus_attach(struct device *, struct device *, void *);
int	mainbus_print(void *, const char *);

const struct cfattach mainbus_ca = {
	sizeof(struct device), mainbus_match, mainbus_attach
};

struct cfdriver mainbus_cd = {
	NULL, "mainbus", DV_DULL
};

int
mainbus_match(struct device *parent, void *cfdata, void *aux)
{
	static int mainbus_attached = 0;

	if (mainbus_attached != 0)
		return 0;

	return mainbus_attached = 1;
}

void
mainbus_attach(struct device *parent, struct device *self, void *aux)
{
	struct cpu_attach_args caa;
#ifdef MULTIPROCESSOR
	struct cpu_hwinfo hw;
	int cpuid;
#endif

	printf("\n");

	bzero(&caa, sizeof caa);
	caa.caa_maa.maa_name = "cpu";
	caa.caa_hw = &bootcpu_hwinfo;
	config_found(self, &caa, mainbus_print);

#ifdef MULTIPROCESSOR
	for (cpuid = 1; cpuid < OCTEON_MAXCPUS &&
	    octeon_boot_info->core_mask & (1 << cpuid); cpuid++) {
		bcopy(&bootcpu_hwinfo, &hw, sizeof(struct cpu_hwinfo));
		caa.caa_hw = &hw;
		config_found(self, &caa, mainbus_print);
	}
#endif

	caa.caa_maa.maa_name = "clock";
	config_found(self, &caa.caa_maa, mainbus_print);

	/* uart I/O */
	caa.caa_maa.maa_name = "uartbus";
	config_found(self, &caa.caa_maa, mainbus_print);

	/* on-board I/O */
	caa.caa_maa.maa_name = "iobus";
	config_found(self, &caa.caa_maa, mainbus_print);

	caa.caa_maa.maa_name = "octrtc";
	config_found(self, &caa.caa_maa, mainbus_print);

}

int
mainbus_print(void *aux, const char *pnp)
{
	return pnp != NULL ? QUIET : UNCONF;
}
@


1.7
log
@whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.6 2014/01/15 10:29:45 pirofti Exp $ */
d34 1
d65 1
d76 6
a81 3
	bcopy(&bootcpu_hwinfo, &hw, sizeof(struct cpu_hwinfo));
	caa.caa_hw = &hw;
	config_found(self, &caa, mainbus_print);
@


1.6
log
@Add support for the DS1337 TOD clocks found on some of the octeon models.


This is a very low resolution clock (1 second) that some models seem
to be blessed with.

Found at least on CAM-100 and DSR-500 models.
It seems the EdgeRouter doesn't have support for this.

Tested by jmatthew@@ and bcallah@@.
Okay miod@@, bcallah@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.5 2011/06/25 19:39:32 miod Exp $ */
d65 1
a65 1
	
d78 1
a78 1
	
@


1.5
log
@Don't forget to print a newline at attach time.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.4 2011/05/08 13:39:30 syuu Exp $ */
d89 4
@


1.4
log
@combus renamed uartbus, com_oct renamed cn30xxuart
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.3 2011/05/08 13:24:55 syuu Exp $ */
d66 2
@


1.3
log
@obio renamed iobus, moved interrupt handler code to dev/octeon_intr.c
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.2 2010/10/01 16:13:59 syuu Exp $ */
d81 1
a81 1
	caa.caa_maa.maa_name = "combus";
@


1.2
log
@Implemented combus to support com device on OCTEON without modifing dev/ic/com.c ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.1 2010/09/20 06:32:30 syuu Exp $ */
d85 1
a85 1
	caa.caa_maa.maa_name = "obio";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.4 2010/02/28 08:30:27 otto Exp $ */
d78 4
@

