head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.8
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.6
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.8
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2016.07.10.10.18.58;	author visa;	state Exp;
branches;
next	1.5;
commitid	ljeJMKR26CJ1ICNZ;

1.5
date	2014.08.11.18.08.17;	author miod;	state Exp;
branches;
next	1.4;
commitid	3N1WQMXOTORvYvCh;

1.4
date	2013.06.01.22.20.35;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2013.06.01.21.25.26;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2012.12.05.23.20.14;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.16.11.22.30;	author syuu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Use the synciobdma instruction instead of the sync instruction for
flushing any pending local IOBDMA operations. The sync instruction is
overkill because it implies a full memory barrier.

ok jasper@@ (long time ago)
@
text
@/*	$OpenBSD: cn30xxfau.c,v 1.5 2014/08/11 18:08:17 miod Exp $	*/

/*
 * Copyright (c) 2007 Internet Initiative Japan, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>

#include <machine/octeonvar.h>

#include <octeon/dev/cn30xxfaureg.h>
#include <octeon/dev/cn30xxfauvar.h>

int64_t	cn30xxfau_op_load(uint64_t);
void	cn30xxfau_op_iobdma(int, uint64_t);
void	cn30xxfau_op_store(uint64_t, int64_t);
int64_t	cn30xxfau_op_load_paddr(int, int, int) __unused;
void	cn30xxfau_op_iobdma_store_data(int, int, int, int, int);
void	cn30xxfau_op_store_paddr(int, int, int64_t);


/* ---- utilities */

int64_t
cn30xxfau_op_load(uint64_t args)
{
	paddr_t addr;

	addr =
	    ((uint64_t)1 << 48) |
	    ((uint64_t)(CN30XXFAU_MAJORDID & 0x1f) << 43) |
	    ((uint64_t)(CN30XXFAU_SUBDID & 0x7) << 40) |
	    ((uint64_t)(args & 0xfffffffffULL) << 0);
	return octeon_xkphys_read_8(addr);
}

void
cn30xxfau_op_store(uint64_t args, int64_t value)
{
	paddr_t addr;

	addr =
	    ((uint64_t)1 << 48) |
	    ((uint64_t)(CN30XXFAU_MAJORDID & 0x1f) << 43) |
	    ((uint64_t)(CN30XXFAU_SUBDID & 0x7) << 40) |
	    ((uint64_t)(args & 0xfffffffffULL) << 0);
	octeon_xkphys_write_8(addr, value);
}

/* ---- operation primitives */

/*
 * 3.4 Fetch-and-Add Operations
 */

/* 3.4.1 Load Operations */

/* Load Physical Address for FAU Operations */

int64_t
cn30xxfau_op_load_paddr(int incval, int tagwait, int reg)
{
	uint64_t args;

	args =
	    ((uint64_t)(incval & 0x3fffff) << 14) |
	    ((uint64_t)(tagwait & 0x1) << 13) |  
	    ((uint64_t)(reg & 0x7ff) << 0);
	return cn30xxfau_op_load(args);
}

/* 3.4.3 Store Operations */

/* Store Physical Address for FAU Operations */

void
cn30xxfau_op_store_paddr(int noadd, int reg, int64_t value)
{
	uint64_t args;

	args =
	    ((uint64_t)(noadd & 0x1) << 13) | 
	    ((uint64_t)(reg & 0x7ff) << 0);
	cn30xxfau_op_store(args, value);
}

/* ---- API */

void
cn30xxfau_op_init(struct cn30xxfau_desc *fd, size_t scroff, size_t regno)
{
	fd->fd_scroff = scroff;
	fd->fd_regno = regno;
}

uint64_t
cn30xxfau_op_save(struct cn30xxfau_desc *fd)
{
	octeon_synciobdma();
	return octeon_cvmseg_read_8(fd->fd_scroff);
}

void
cn30xxfau_op_restore(struct cn30xxfau_desc *fd, uint64_t backup)
{
	octeon_cvmseg_write_8(fd->fd_scroff, backup);
}

int64_t
cn30xxfau_op_inc_8(struct cn30xxfau_desc *fd, int64_t v)
{
	cn30xxfau_op_iobdma_store_data(fd->fd_scroff, v, 0, OCT_FAU_OP_SIZE_64/* XXX */,
	    fd->fd_regno);
	octeon_synciobdma();
	return octeon_cvmseg_read_8(fd->fd_scroff)/* XXX */;
}

int64_t
cn30xxfau_op_incwait_8(struct cn30xxfau_desc *fd, int v)
{
	cn30xxfau_op_iobdma_store_data(fd->fd_scroff, v, 1, OCT_FAU_OP_SIZE_64/* XXX */,
	    fd->fd_regno);
	octeon_synciobdma();
	return octeon_cvmseg_read_8(fd->fd_scroff)/* XXX */;
}

void
cn30xxfau_op_add_8(struct cn30xxfau_desc *fd, int64_t v)
{
	cn30xxfau_op_store_paddr(0, fd->fd_regno, v);
}

void
cn30xxfau_op_set_8(struct cn30xxfau_desc *fd, int64_t v)
{
	cn30xxfau_op_store_paddr(1, fd->fd_regno, v);
}
@


1.5
log
@De-static so that my ddb backtrace get closer to reality.
@
text
@d1 1
a1 1
/*	$OpenBSD: cn30xxfau.c,v 1.4 2013/06/01 22:20:35 jasper Exp $	*/
d122 1
a122 1
	mips_sync();
d137 1
a137 1
	mips_sync();
d146 1
a146 3
	/* XXX */
	mips_sync();
	/* XXX */
@


1.4
log
@as discussed with uebayasi@@ we should only use the "sync" instruction on octeon,
instead of syncs/syncw etc.
so remove the OCTEON_SYNC* macros and use mips_sync() directly.

ok uebayasi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cn30xxfau.c,v 1.3 2013/06/01 21:25:26 jasper Exp $	*/
d37 6
a42 6
static int64_t	cn30xxfau_op_load(uint64_t);
static void	cn30xxfau_op_iobdma(int, uint64_t);
static void	cn30xxfau_op_store(uint64_t, int64_t);
static int64_t	cn30xxfau_op_load_paddr(int, int, int) __unused;
static void	cn30xxfau_op_iobdma_store_data(int, int, int, int, int);
static void	cn30xxfau_op_store_paddr(int, int, int64_t);
d47 1
a47 1
static int64_t
d60 1
a60 1
static void
d83 1
a83 1
static int64_t
d99 1
a99 1
static void
@


1.3
log
@- remove more backward compat code and switch the callers over to the new function

ok uebayasi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cn30xxfau.c,v 1.2 2012/12/05 23:20:14 deraadt Exp $	*/
d122 1
a122 1
	OCTEON_SYNCIOBDMA/* XXX */;
d137 1
a137 1
	OCTEON_SYNCIOBDMA/* XXX */;
d147 1
a147 1
	OCTEON_SYNCIOBDMA/* XXX */;
@


1.2
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: cn30xxfau.c,v 1.1 2011/06/16 11:22:30 syuu Exp $	*/
d57 1
a57 1
	return octeon_read_csr(addr);
d70 1
a70 1
	octeon_write_csr(addr, value);
@


1.1
log
@Ethernet driver merged from IIJ's contribution code.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a27 2

#include <sys/cdefs.h>
@

