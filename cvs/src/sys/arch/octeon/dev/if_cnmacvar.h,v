head	1.16;
access;
symbols
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.4
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.16
date	2016.08.06.04.32.24;	author visa;	state Exp;
branches;
next	1.15;
commitid	lbRa5XjXCVkRiBMz;

1.15
date	2016.08.05.13.18.27;	author visa;	state Exp;
branches;
next	1.14;
commitid	gqK8v38Uji2feXEn;

1.14
date	2016.08.04.13.10.31;	author visa;	state Exp;
branches;
next	1.13;
commitid	0L54RPNzULFkReBc;

1.13
date	2016.07.30.09.45.09;	author visa;	state Exp;
branches;
next	1.12;
commitid	qPMO1g0qhl5uZJDu;

1.12
date	2016.05.30.15.41.28;	author visa;	state Exp;
branches;
next	1.11;
commitid	pQeTOuXCP1quhpMp;

1.11
date	2016.05.29.11.10.25;	author visa;	state Exp;
branches;
next	1.10;
commitid	6Qia14IK1r8MeKBb;

1.10
date	2016.05.21.11.04.38;	author visa;	state Exp;
branches;
next	1.9;
commitid	8L2xIescpwStJQZy;

1.9
date	2016.04.26.11.22.05;	author visa;	state Exp;
branches;
next	1.8;
commitid	z2weDohCZ7YoL32v;

1.8
date	2016.04.26.11.07.09;	author visa;	state Exp;
branches;
next	1.7;
commitid	6JzAS8wtDR2Z7CT5;

1.7
date	2015.10.08.14.24.32;	author visa;	state Exp;
branches;
next	1.6;
commitid	8Cjm6FFYim6bo1uY;

1.6
date	2015.06.11.12.30.42;	author jmatthew;	state Exp;
branches;
next	1.5;
commitid	WYFLHGYwS5er1XQl;

1.5
date	2014.08.11.18.29.56;	author miod;	state Exp;
branches;
next	1.4;
commitid	8Kx1Ci8ysFEuhw0R;

1.4
date	2014.07.09.12.56.28;	author mpi;	state Exp;
branches;
next	1.3;
commitid	NKtrbjFVOj3sQBuE;

1.3
date	2013.09.16.20.52.14;	author jmatthew;	state Exp;
branches;
next	1.2;

1.2
date	2011.06.17.03.36.25;	author yasuoka;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.16.11.22.30;	author syuu;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Log RX errors only when the interface's debug flag is set.

While here, remove unused PIP error code aliases.
@
text
@/*	$OpenBSD: if_cnmacvar.h,v 1.15 2016/08/05 13:18:27 visa Exp $	*/

/*
 * Copyright (c) 2007 Internet Initiative Japan, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#define IS_MAC_MULTICASTBIT(addr) \
        ((addr)[0] & 0x01)

#define SEND_QUEUE_SIZE		(32)
#define GATHER_QUEUE_SIZE	(1024)
#define FREE_QUEUE_SIZE		GATHER_QUEUE_SIZE
#define RECV_QUEUE_SIZE		(GATHER_QUEUE_SIZE * 2)

#define OCTEON_ETH_MAX_MTU		12288

/* Number of mbufs per port to keep in the packet pool */
#define OCTEON_ETH_MBUFS_PER_PORT	256

struct _send_queue_entry;
struct cn30xxpow_softc;
struct cn30xxpip_softc;
struct cn30xxipd_softc;
struct cn30xxpko_softc;
struct cn30xxasx_softc;
struct cn30xxsmi_softc;
struct cn30xxgmx_port_softc;
struct cn30xxpow_softc;

extern struct cn30xxpow_softc	cn30xxpow_softc;

struct octeon_eth_softc {
	struct device		sc_dev;
	bus_space_tag_t		sc_regt;
	bus_dma_tag_t		sc_dmat;

	bus_dmamap_t		sc_dmap;

	void			*sc_pow_recv_ih;
	struct cn30xxpip_softc	*sc_pip;
	struct cn30xxipd_softc	*sc_ipd;
	struct cn30xxpko_softc	*sc_pko;
	struct cn30xxsmi_softc	*sc_smi;
	struct cn30xxgmx_softc	*sc_gmx;
	struct cn30xxgmx_port_softc
				*sc_gmx_port;
	struct cn30xxpow_softc
				*sc_pow;

	struct arpcom		sc_arpcom;
	struct mii_data		sc_mii;

	struct timeout		sc_tick_misc_ch;
	struct timeout		sc_tick_free_ch;

	struct task		sc_free_task;

	int64_t			sc_soft_req_thresh;
	int64_t			sc_hard_done_cnt;
	int			sc_prefetch;
	struct mbuf_list	sc_sendq;
	uint64_t		sc_ext_callback_cnt;

	uint32_t		sc_port;
	uint32_t		sc_port_type;
	uint32_t		sc_init_flag;
	int			sc_phy_addr;

	/*
	 * Redirection - received (input) packets are redirected (directly sent)
	 * to another port.  Only meant to test hardware + driver performance.
	 *
	 *  0	- disabled
	 * >0	- redirected to ports that correspond to bits
	 *		0b001 (0x1)	- Port 0
	 *		0b010 (0x2)	- Port 1
	 *		0b100 (0x4)	- Port 2
	 */
	int			sc_redir;

	struct cn30xxfau_desc	sc_fau_done;
	struct cn30xxpko_cmdptr_desc
				sc_cmdptr;

	size_t			sc_ip_offset;

	struct timeval		sc_rxerr_log_last;
};
@


1.15
log
@Drop a pointless link carrier check from the RX path.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.14 2016/08/04 13:10:31 visa Exp $	*/
d109 1
a109 2
	struct timeval		sc_rate_recv_check_code_last;
	struct timeval		sc_rate_recv_check_code_cap;
@


1.14
log
@Add support for jumbo frames.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.13 2016/07/30 09:45:09 visa Exp $	*/
a108 2
	struct timeval		sc_rate_recv_check_link_last;
	struct timeval		sc_rate_recv_check_link_cap;
@


1.13
log
@Remove disabled jumbo frame checks. They will not be needed
for jumbo frame support.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.12 2016/05/30 15:41:28 visa Exp $	*/
d36 2
@


1.12
log
@Fill the packet data pool with standard mbuf clusters instead of
driver-specific memory blocks. This lets the cnmac(4) RX path run
without an mbuf ext_free callback.

ok uebayasi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.11 2016/05/29 11:10:25 visa Exp $	*/
a108 2
	struct timeval		sc_rate_recv_check_jumbo_last;
	struct timeval		sc_rate_recv_check_jumbo_cap;
@


1.11
log
@Map ASX registers only if link control needs them.

ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.10 2016/05/21 11:04:38 visa Exp $	*/
d36 3
@


1.10
log
@Make the TX path of cnmac(4) MP-safe and add some ifq oactive logic.

Feedback from dlg@@, ok mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.9 2016/04/26 11:22:05 visa Exp $	*/
a59 1
	struct cn30xxasx_softc	*sc_asx;
@


1.9
log
@sc_resume_ch is used nowhere.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.8 2016/04/26 11:07:09 visa Exp $	*/
d73 2
@


1.8
log
@Drop an unused workaround which does not even compile.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.7 2015/10/08 14:24:32 visa Exp $	*/
a72 1
	struct timeout		sc_resume_ch;
@


1.7
log
@Remove the sc_soft_req_cnt field because the number of tx requests is
already tracked in sc_sendq. Replace the sc_flush logic with a simple
Fetch-and-Add store that avoids an unnecessary IOBDMA transaction.

ok uebayasi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.6 2015/06/11 12:30:42 jmatthew Exp $	*/
a35 4

#ifdef OCTEON_ETH_FIXUP_ODD_NIBBLE_DYNAMIC
#define PROC_NIBBLE_SOFT_THRESHOLD 2000
#endif
@


1.6
log
@convert sc_sendq into an mbuf_list, and use ph_cookie rather than rcvif to
store the sgl address, allowing rcvif to be removed.

ok mpi@@ dlg@@ uebayasi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.5 2014/08/11 18:29:56 miod Exp $	*/
a78 1
	int64_t			sc_soft_req_cnt;
a80 1
	int			sc_flush;
@


1.5
log
@Remove evcnt and %b format strings relying upon SEIL extensions. This gives
OCTEON_ETH_DEBUG kernels a chance to build. No functional change for regular
kernels.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.4 2014/07/09 12:56:28 mpi Exp $	*/
d84 1
a84 2
	SIMPLEQ_HEAD(, _send_queue_entry)
				sc_sendq;
@


1.4
log
@Kill unused shutdown hook pointers.

ok miod@@, deraadt@@, tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.3 2013/09/16 20:52:14 jmatthew Exp $	*/
a116 34

#ifdef OCTEON_ETH_DEBUG
	struct evcnt		sc_ev_rx;
	struct evcnt		sc_ev_rxint;
	struct evcnt		sc_ev_rxrs;
	struct evcnt		sc_ev_rxbufpkalloc;
	struct evcnt		sc_ev_rxbufpkput;
	struct evcnt		sc_ev_rxbufwqalloc;
	struct evcnt		sc_ev_rxbufwqput;
	struct evcnt		sc_ev_rxerrcode;
	struct evcnt		sc_ev_rxerrfix;
	struct evcnt		sc_ev_rxerrjmb;
	struct evcnt		sc_ev_rxerrlink;
	struct evcnt		sc_ev_rxerroff;
	struct evcnt		sc_ev_rxonperrshort;
	struct evcnt		sc_ev_rxonperrpreamble;
	struct evcnt		sc_ev_rxonperrcrc;
	struct evcnt		sc_ev_rxonperraddress;
	struct evcnt		sc_ev_rxonponp;
	struct evcnt		sc_ev_rxonpok;
	struct evcnt		sc_ev_tx;
	struct evcnt		sc_ev_txadd;
	struct evcnt		sc_ev_txbufcballoc;
	struct evcnt		sc_ev_txbufcbget;
	struct evcnt		sc_ev_txbufgballoc;
	struct evcnt		sc_ev_txbufgbget;
	struct evcnt		sc_ev_txbufgbput;
	struct evcnt		sc_ev_txdel;
	struct evcnt		sc_ev_txerr;
	struct evcnt		sc_ev_txerrcmd;
	struct evcnt		sc_ev_txerrgbuf;
	struct evcnt		sc_ev_txerrlink;
	struct evcnt		sc_ev_txerrmkcmd;
#endif
@


1.3
log
@work out phy addresses before attaching cnmac and pass them to mii_attach
rather than hiding them in the mii read/write functions.

ok dlg@@ jasper@@ bcallah@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.2 2011/06/17 03:36:25 yasuoka Exp $	*/
a73 2

	void			*sc_sdhook;
@


1.2
log
@add missing the copyright notice.
delete garbage lines.

ok syuu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_cnmacvar.h,v 1.1 2011/06/16 11:22:30 syuu Exp $	*/
d93 1
@


1.1
log
@Ethernet driver merged from IIJ's contribution code.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d3 25
a27 8
#undef DEBUG
#undef TENBASET_DBG
#undef REGISTER_DUMP
#ifdef DEBUG
#define dprintf printf
#else
#define dprintf(...)
#endif
@

