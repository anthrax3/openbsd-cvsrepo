head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2016.11.06.16.42.00;	author tb;	state Exp;
branches;
next	1.2;
commitid	peo8JdlgBE9dXbST;

1.2
date	2013.06.05.01.09.09;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2013.06.05.01.02.29;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Do not create machine@@ symlinks in obj as root during includes:, but
defer their creation to later, so that they are owned by BUILDUSER.
This eliminates the last root-owned files in obj/ from 'make build'.
In addition, place a MACHINE == hppa test in hppa/stand/Makefile.inc
to avoid creating bogus symlinks on all other archs.

joint work with & ok natano, "let's try it" deraadt
@
text
@#	$OpenBSD: Makefile.inc,v 1.2 2013/06/05 01:09:09 jasper Exp $

NOMAN=
S=		${.CURDIR}/../../../..
BOOTDIR=	${S}/arch/octeon/stand/boot

CPPFLAGS+=	${SAABI} -mno-abicalls -D_NO_ABICALLS -Werror \
		-nostdinc -D__octeon__ -msoft-float \
		-I${S} -I${S}/lib/libsa \
		-I${.OBJDIR} -I${BOOTDIR}

LDSCRIPT=	${.CURDIR}/../../conf/ld.script
LDFLAGS+=	${SALDFLAGS} -T ${LDSCRIPT} -Ttext=0xffffffff81000000 -e __start

AFLAGS+=	${SAABI}

.PATH:		${BOOTDIR}
SRCS=		start.S
SRCS+=		conf.c clock.c devopen.c exec.c machdep.c uart.c

#### MI boot code
.PATH:		${S}/stand/boot
SRCS+=		boot.c cmd.c vars.c

#### libkern
.PATH:		${S}/lib/libkern/arch/mips64 ${S}/lib/libkern
SRCS+=		strlcat.c strlcpy.c strlen.c
SRCS+=		udivdi3.c qdivrem.c

.if !make(clean) && !make(cleandir) && !make(includes) && !make(obj)
.BEGIN:
	@@([ -h machine ] || ln -s ${.CURDIR}/../../include machine)
	@@([ -h mips64 ] || ln -s ${.CURDIR}/../../../mips64/include mips64)
CLEANFILES+= machine mips64
.endif

${PROG}: ${OBJS} ${LIBSA}
	${LD} ${LDFLAGS} -o ${PROG} ${OBJS} ${LIBSA}
@


1.2
log
@ditch local ld.script and use conf/ld.script instead, and adjust entry
point accordingly.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2013/06/05 01:02:29 jasper Exp $
d30 1
a30 1
.if !make(obj)
@


1.1
log
@add WIP second stage bootloader for octeon; far from working and contains many stubs still.
committing it now so I can work on this in tree.
@
text
@d1 1
a1 1
#	$OpenBSD$
d12 2
a13 2
LDSCRIPT=	${.CURDIR}/ld.script
LDFLAGS+=	${SALDFLAGS} -T ${LDSCRIPT} -Ttext=0xffffffff81000000 -e start
@

