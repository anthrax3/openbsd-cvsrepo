head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2016.10.15.13.45.08;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	TtDw6IYffbT8oPEE;

1.1
date	2016.10.14.18.43.00;	author deraadt;	state Exp;
branches;
next	;
commitid	dUZQxi6w3YqAb6KQ;


desc
@@


1.2
log
@cleandir: target for kernel compile directories
ok natano
@
text
@#	$OpenBSD: Makefile,v 1.1 2016/10/14 18:43:00 deraadt Exp $

.if	make(obj) || make(clean) || make(cleandir)
SUBDIR!=find . -type d -maxdepth 1 \! \( -name . -o -name CVS \) | cut -b3-
.endif

.include <bsd.subdir.mk>

@


1.1
log
@Kernel builds now happen in compile/CONFIG/obj@@ -> /usr/obj/... [or ./obj/,
if srctree is not rooted at /usr/src].  As a result, stock GENERIC & RAMDISK
kernels are commited to the tree, to ensure the src tree can be "readonly"
during builds, with all writes occuring inside the obj space.  config -b
options are handled by ../Makefile.inc.  The canonical new way to configure
one of these kernels is:
    % cd /sys/arch/amd64/compile/GENERIC.MP
    % doas make obj
    % make config
    % make
    % doas cp obj/bsd /bsd
The build infrastructure will use this new mechanism in a de-escalation
way using BUILDUSER.
Much help from natano and tb.
@
text
@d1 1
a1 1
#	$OpenBSD$
d3 2
a4 3
.if	make(obj) || make(clean)
SUBDIR!=find . -type d -maxdepth 1 \! \( -name . -o -name CVS \)
#SUBDIR=GENERIC GENERIC.MP RAMDISK
@

