head	1.20;
access;
symbols
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.18.0.2
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.11.0.6
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6;
locks; strict;
comment	@ * @;


1.20
date	2016.09.04.10.51.24;	author naddy;	state Exp;
branches;
next	1.19;
commitid	4OWaAfwqMvhOCLOI;

1.19
date	2016.09.02.17.06.12;	author goda;	state Exp;
branches;
next	1.18;
commitid	J1JzeTsS8K8zyH3c;

1.18
date	2016.07.05.12.53.40;	author visa;	state Exp;
branches;
next	1.17;
commitid	V7rhXg2XswiwjQlB;

1.17
date	2016.04.25.20.09.14;	author tedu;	state Exp;
branches;
next	1.16;
commitid	43yo2G4zZOY9ab4i;

1.16
date	2015.10.23.15.10.52;	author claudio;	state Exp;
branches;
next	1.15;
commitid	g17gxjQh9N9egLbB;

1.15
date	2015.07.20.19.44.32;	author pirofti;	state Exp;
branches;
next	1.14;
commitid	8BQ1mX3eNLtSDODb;

1.14
date	2015.05.04.21.45.23;	author jmatthew;	state Exp;
branches;
next	1.13;
commitid	473RAAkRVCZ4MobC;

1.13
date	2014.12.11.19.44.17;	author tedu;	state Exp;
branches;
next	1.12;
commitid	jUSAZlQ30WF1ESM9;

1.12
date	2014.08.20.06.14.42;	author mikeb;	state Exp;
branches;
next	1.11;
commitid	qXFkosC6o9cv78HT;

1.11
date	2013.11.04.14.11.29;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2013.08.20.14.27.30;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2013.06.03.17.33.58;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2012.08.23.06.12.49;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2011.10.06.20.49.28;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2011.01.14.19.04.08;	author jasper;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.22.21.10.45;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2010.11.19.20.55.48;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2010.10.26.00.02.01;	author syuu;	state Exp;
branches;
next	1.2;

1.2
date	2010.09.23.05.02.14;	author claudio;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.20.06.32.30;	author syuu;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Remove support for tape block devices. Nobody mount(8)s tapes any longer.
ok deraadt@@ guenther@@
@
text
@/*	$OpenBSD: conf.c,v 1.19 2016/09/02 17:06:12 goda Exp $ */

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/ioctl.h>
#include <sys/proc.h>
#include <sys/vnode.h>
#include <sys/tty.h>

#include <machine/conf.h>

/*
 *	Block devices.
 */

#include "vnd.h"
#include "sd.h"
#include "cd.h"
#include "st.h"
#include "wd.h"
bdev_decl(wd);
#include "rd.h"
#include "hotplug.h"

#define NOCTCF 1
bdev_decl(octcf);

#define NAMDCF 1
bdev_decl(amdcf);

struct bdevsw	bdevsw[] =
{
	bdev_disk_init(NSD,sd),		/* 0: SCSI disk */
	bdev_swap_init(1,sw),		/* 1: should be here swap pseudo-dev */
	bdev_disk_init(NVND,vnd),	/* 2: vnode disk driver */
	bdev_disk_init(NCD,cd),		/* 3: SCSI CD-ROM */
	bdev_disk_init(NWD,wd),		/* 4: ST506/ESDI/IDE disk */
	bdev_notdef(),			/* 5:  */
	bdev_notdef(),			/* 6: was: concatenated disk driver */
	bdev_notdef(),			/* 7:  */
	bdev_disk_init(NRD,rd),		/* 8: RAM disk (for install) */
	bdev_notdef(),			/* 9:  */
	bdev_notdef(),			/* 10: was: SCSI tape */
	bdev_notdef(),			/* 11:  */
	bdev_notdef(),			/* 12:  */
	bdev_notdef(),			/* 13:  */
	bdev_notdef(),			/* 14:  */
	bdev_disk_init(NOCTCF,octcf),	/* 15: CF disk */
	bdev_notdef(),			/* 16:  */
	bdev_notdef(),			/* 17:  */
	bdev_notdef(),			/* 18:  */
	bdev_disk_init(NAMDCF,amdcf),	/* 19: CF disk */
};

int	nblkdev = nitems(bdevsw);

/*
 *	Character devices.
 */

#define mmread mmrw
#define mmwrite mmrw
dev_type_read(mmrw);
cdev_decl(mm);
#include "bio.h"
#include "pty.h"
cdev_decl(fd);
#include "st.h"
#include "bpfilter.h"
#include "tun.h"
#if 0
#include "apm.h"
#endif
#include "com.h"
cdev_decl(com);
#include "lpt.h"
cdev_decl(lpt);
#include "ch.h"
#include "uk.h"
cdev_decl(wd);
#include "audio.h"
#include "video.h"
cdev_decl(octcf);
cdev_decl(amdcf);

#include "ksyms.h"

#include "wsdisplay.h"
#include "wskbd.h"
#include "wsmouse.h"
#include "wsmux.h"
#include "pci.h"
cdev_decl(pci);

#include "pf.h"

#include "usb.h"
#include "uhid.h"
#include "ugen.h"
#include "ulpt.h"
#include "ucom.h"

#include "vscsi.h"
#include "pppx.h"
#include "fuse.h"
#include "openprom.h"
#include "switch.h"

struct cdevsw	cdevsw[] =
{
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_notdef(),			/* 1: was /dev/drum */
	cdev_ctty_init(1,ctty),		/* 2: controlling terminal */
	cdev_mm_init(1,mm),		/* 3: /dev/{null,mem,kmem,...} */
	cdev_tty_init(NPTY,pts),	/* 4: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 5: pseudo-tty master */
	cdev_log_init(1,log),		/* 6: /dev/klog */
	cdev_fd_init(1,filedesc),	/* 7: file descriptor pseudo-dev */
	cdev_disk_init(NCD,cd),		/* 8: SCSI CD */
	cdev_disk_init(NSD,sd),		/* 9: SCSI disk */
	cdev_tape_init(NST,st),		/* 10: SCSI tape */
	cdev_disk_init(NVND,vnd),	/* 11: vnode disk */
	cdev_bpf_init(NBPFILTER,bpf),	/* 12: berkeley packet filter */
	cdev_tun_init(NTUN,tun),	/* 13: network tunnel */
#if 0
	cdev_apm_init(NAPM,apm),	/* 14: apm */
#else
	cdev_notdef(),			/* 14: */
#endif
	cdev_disk_init(NOCTCF,octcf),	/* 15: CF disk */
	cdev_lpt_init(NLPT,lpt),	/* 16: Parallel printer interface */
	cdev_tty_init(NCOM,com),	/* 17: 16C450 serial interface */
	cdev_disk_init(NWD,wd),		/* 18: ST506/ESDI/IDE disk */
	cdev_disk_init(NAMDCF,amdcf),	/* 19: CF disk */
	cdev_openprom_init(NOPENPROM,openprom),	/* 20: /dev/openprom */
	cdev_notdef(),			/* 21: */
	cdev_disk_init(NRD,rd),		/* 22: ramdisk device */
	cdev_notdef(),			/* 23: was: concatenated disk driver */
	cdev_notdef(),			/* 24: */
	cdev_wsdisplay_init(NWSDISPLAY, wsdisplay),	/* 25: */
	cdev_mouse_init(NWSKBD, wskbd),	/* 26: */
	cdev_mouse_init(NWSMOUSE, wsmouse),	/* 27: */
	cdev_mouse_init(NWSMUX, wsmux),	/* 28: */
#ifdef USER_PCICONF
	cdev_pci_init(NPCI,pci),	/* 29: PCI user */
#else
	cdev_notdef(),			/* 29 */
#endif
	cdev_notdef(),			/* 30: */
	cdev_pf_init(NPF,pf),		/* 31: packet filter */
	cdev_uk_init(NUK,uk),		/* 32: unknown SCSI */
	cdev_random_init(1,random),	/* 33: random data source */
	cdev_notdef(),			/* 34: */
	cdev_ksyms_init(NKSYMS,ksyms),	/* 35: Kernel symbols device */
	cdev_ch_init(NCH,ch),		/* 36: SCSI autochanger */
	cdev_notdef(),			/* 37: */
	cdev_notdef(),			/* 38: */
	cdev_notdef(),			/* 39: */
	cdev_notdef(),			/* 40: */
	cdev_notdef(),			/* 41: */
	cdev_notdef(),			/* 42: */
	cdev_notdef(),			/* 43: */
	cdev_audio_init(NAUDIO,audio),	/* 44: /dev/audio */
	cdev_video_init(NVIDEO,video),	/* 45: generic video I/O */
	cdev_notdef(),			/* 46: */
	cdev_notdef(),			/* 47: was: /dev/crypto */
	cdev_notdef(),			/* 48: */
	cdev_bio_init(NBIO,bio),	/* 49: ioctl tunnel */
	cdev_notdef(),			/* 50: */
	cdev_notdef(),			/* 51: */
	cdev_ptm_init(NPTY,ptm),	/* 52: pseudo-tty ptm device */
	cdev_fuse_init(NFUSE,fuse),	/* 53: fuse */
	cdev_notdef(),			/* 54: */
	cdev_notdef(),			/* 55: */
	cdev_notdef(),			/* 56: */
	cdev_notdef(),			/* 57: */
	cdev_notdef(),			/* 58: */
	cdev_notdef(),			/* 59: */
	cdev_notdef(),			/* 60: */
	cdev_usb_init(NUSB,usb),	/* 61: USB controller */
	cdev_usbdev_init(NUHID,uhid),	/* 62: USB generic HID */
	cdev_usbdev_init(NUGEN,ugen),	/* 63: USB generic driver */
	cdev_ulpt_init(NULPT,ulpt),	/* 64: USB printers */
	cdev_notdef(),			/* 65: */
	cdev_tty_init(NUCOM,ucom),	/* 66: USB tty */
	cdev_hotplug_init(NHOTPLUG,hotplug), /* 67: devices hotplugging */
	cdev_notdef(),			/* 68: */
	cdev_vscsi_init(NVSCSI,vscsi),	/* 69: vscsi */
	cdev_disk_init(1,diskmap),	/* 70: disk mapper */
	cdev_pppx_init(NPPPX,pppx),	/* 71: pppx */
	cdev_notdef(),			/* 72: was USB scanners */
	cdev_notdef(),			/* 73: fuse on other mips64 */
	cdev_tun_init(NTUN,tap),	/* 74: Ethernet network tunnel */
	cdev_switch_init(NSWITCH,switch), /* 75: switch(4) control interface */
};

int	nchrdev = nitems(cdevsw);

/*
 * Swapdev is a fake device implemented
 * in sw.c used only internally to get to swstrategy.
 * It cannot be provided to the users, because the
 * swstrategy routine munches the b_dev and b_blkno entries
 * before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines. Instead, /dev/drum is
 * provided as a character (raw) device.
 */
dev_t	swapdev = makedev(1, 0);

/*
 * Routine that identifies /dev/mem and /dev/kmem.
 *
 * A minimal stub routine can always return 0.
 */
int
iskmemdev(dev)
	dev_t dev;
{

	if (major(dev) == 3 && (minor(dev) == 0 || minor(dev) == 1))
		return (1);
	return (0);
}

/*
 * Returns true if def is /dev/zero
 */
int
iszerodev(dev)
	dev_t dev;
{
	return (major(dev) == 3 && minor(dev) == 12);
}

dev_t
getnulldev()
{
	return(makedev(3, 2));
}


int chrtoblktbl[] =  {
	/* VCHR         VBLK */
	/* 0 */		NODEV,
	/* 1 */		NODEV,
	/* 2 */		NODEV,
	/* 3 */		NODEV,
	/* 4 */		NODEV,
	/* 5 */		NODEV,
	/* 6 */		NODEV,
	/* 7 */		NODEV,
	/* 8 */		3,		/* cd */
	/* 9 */		0,		/* sd */
	/* 10 */	NODEV,
	/* 11 */	2,		/* vnd */
	/* 12 */	NODEV,
	/* 13 */	NODEV,
	/* 14 */	NODEV,
	/* 15 */	15,		/* octcf */
	/* 16 */	NODEV,
	/* 17 */	NODEV,
	/* 18 */	4,		/* wd */
	/* 19 */	19,		/* amdcf */
	/* 20 */	NODEV,
	/* 21 */	NODEV,
	/* 22 */	8		/* rd */
};

int nchrtoblktbl = nitems(chrtoblktbl);

#include <dev/cons.h>

cons_decl(ws);
cons_decl(com);

struct	consdev constab[] = {
#if NWSDISPLAY > 0
	cons_init(ws),
#endif
#if NCOM > 0
	cons_init(com),
#endif
	{ 0 },
};
@


1.19
log
@Add switch(4) cdev entry

ok deraadt@@ yasuoka@@ reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 2016/07/05 12:53:40 visa Exp $ */
d80 1
a80 1
	bdev_tape_init(NST,st),		/* 10: SCSI tape */
d291 1
a291 1
	/* 10 */	10,		/* st */
@


1.18
log
@Add openprom(4) for octeon.

ok kettenis@@ deraadt@@ jasper@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17 2016/04/25 20:09:14 tedu Exp $ */
d144 1
d231 1
@


1.17
log
@remove systrace
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.16 2015/10/23 15:10:52 claudio Exp $ */
d143 1
d171 1
a171 1
	cdev_notdef(),			/* 20: */
@


1.16
log
@Allocate a new major for tap(4) also note that pseudo-device tun is for tap
as well. OK dlg@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 2015/07/20 19:44:32 pirofti Exp $ */
a132 1
#include "systrace.h"
d204 1
a204 1
	cdev_systrace_init(NSYSTRACE,systrace),	/* 50: system call tracing */
@


1.15
log
@Add a new flash driver for Octeon that allows access to the internal
memory on (at least) D-Link DSR500 machines.

This follows the CFI specification with code borrowed from zrouter
(FreeBSD). The idea, once the current driver is thoroughly tested, would
be to move it to MI land.

The prerequisites to MI are width, shift and row detection and handling.
In the long run I hope to be able to also add wdc support.

For now write support is disabled.

Okay miod@@, deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14 2015/05/04 21:45:23 jmatthew Exp $ */
d228 2
@


1.14
log
@fix device numbering comments, no binary change
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.13 2014/12/11 19:44:17 tedu Exp $ */
d65 3
d86 4
d121 1
d170 1
a170 1
	cdev_notdef(),			/* 19: */
d296 1
a296 1
	/* 19 */	NODEV,
@


1.13
log
@dragonflybsd has added a urio driver. conservation of urios requires
that we delete ours, which isn't actually useful.
ok mpi sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 2014/08/20 06:14:42 mikeb Exp $ */
d190 1
a190 1
	cdev_notdef(),			/* 33: */
d215 1
a215 1
	cdev_notdef(),
@


1.12
log
@unlink crypto(4) pseudo device from the architecture dependant character
device tables and kernel config files.  ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.11 2013/11/04 14:11:29 deraadt Exp $ */
a130 1
#include "urio.h"
d212 1
a212 1
	cdev_urio_init(NURIO,urio),	/* 65: USB Diamond Rio 500 */
@


1.11
log
@remove iop(4) driver.  it is entirely unmaintained and supports something
which basically doesn't exist at all.
reminded about it by brad
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.10 2013/08/20 14:27:30 ajacoutot Exp $ */
a123 2
#include "inet.h"

d195 1
a195 1
	cdev_crypto_init(NCRYPTO,crypto),	/* 47: /dev/crypto */
@


1.10
log
@Remove uscanner(4). It was disabled in GENERIC more than 2.5 years ago.
No regression has been reported since libusb became the prefered
solution to work with USB scanners.

req. by mpi@@
ok ian@@ mpi@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.9 2013/06/03 17:33:58 tedu Exp $ */
a135 1
#include "bthub.h"
d218 1
a218 1
	cdev_bthub_init(NBTHUB,bthub),	/* 68: bluetooth hub */
@


1.9
log
@more fuse in more places. credit: miod
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.8 2012/08/23 06:12:49 deraadt Exp $ */
a134 1
#include "uscanner.h"
d223 1
a223 1
	cdev_usbdev_init(NUSCANNER,uscanner),	/* 72: USB scanners */
@


1.8
log
@kill nnpfs dead
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.7 2011/10/06 20:49:28 deraadt Exp $ */
d140 1
d205 1
a205 1
	cdev_notdef(),			/* 53: */
@


1.7
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.6 2011/01/14 19:04:08 jasper Exp $ */
a112 4
#ifdef NNPFS
#include <nnpfs/nnnpfs.h>
cdev_decl(nnpfs_dev);
#endif
a201 3
#ifdef NNPFS
	cdev_nnpfs_init(NNNPFS,nnpfs_dev),	/* 51: nnpfs communication device */
#else
a202 1
#endif
@


1.6
log
@- use nitems()

"doesn't hurt" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 2010/11/22 21:10:45 miod Exp $ */
a58 1
#include "ccd.h"
d73 1
a73 1
	bdev_disk_init(NCCD,ccd),	/* 6: concatenated disk driver */
d174 1
a174 1
	cdev_disk_init(NCCD,ccd),	/* 23: concatenated disk driver */
d303 1
a303 2
	/* 22 */	8,		/* rd */
	/* 23 */	6		/* ccd */
@


1.5
log
@Remove old comment about constab[] being eventually generated by config(8).
This has never happened and this wouldn't make much sense on anything but
hp300, if at all, nowadays.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 2010/11/19 20:55:48 miod Exp $ */
d86 1
a86 1
int	nblkdev = sizeof (bdevsw) / sizeof (bdevsw[0]);
d235 1
a235 1
int	nchrdev = sizeof (cdevsw) / sizeof (cdevsw[0]);
d308 1
a308 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(int);
@


1.4
log
@Sync MAKEDEV against conf.c, and both against GENERIC.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 2010/10/26 00:02:01 syuu Exp $ */
a309 6
/*
 * This entire table could be autoconfig()ed but that would mean that
 * the kernel's idea of the console would be out of sync with that of
 * the standalone boot.  I think it best that they both use the same
 * known algorithm unless we see a pressing need otherwise.
 */
@


1.3
log
@Replace broken CF driver with new one, fixed bus_space base address.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 2010/09/23 05:02:14 claudio Exp $ */
d140 1
d232 1
@


1.2
log
@Add pppx(4) to the cdevs of the remaining archs.
OK dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1 2010/09/20 06:32:30 syuu Exp $ */
d63 3
d83 1
a83 1
	bdev_notdef(),			/* 15:  */
d118 2
d166 1
a166 1
	cdev_notdef(),			/* 15: */
d295 1
a295 1
	/* 15 */	NODEV,
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.8 2010/07/28 21:44:41 nicm Exp $ */
d138 1
d225 1
@

