head	1.27;
access;
symbols
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2;
locks; strict;
comment	@# @;


1.27
date	2010.05.31.17.27.01;	author drahn;	state dead;
branches;
next	1.26;

1.26
date	2010.05.28.14.27.08;	author guenther;	state Exp;
branches;
next	1.25;

1.25
date	2010.05.25.17.27.55;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2010.05.25.15.05.01;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2010.05.25.02.35.02;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2010.05.24.23.19.22;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2010.05.24.17.49.37;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2010.05.24.14.59.16;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2010.04.28.15.31.33;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2010.04.27.17.25.19;	author drahn;	state Exp;
branches;
next	1.17;

1.17
date	2010.04.27.16.50.15;	author jsg;	state Exp;
branches;
next	1.16;

1.16
date	2010.04.27.16.43.42;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2010.04.27.15.33.08;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2010.04.27.06.46.26;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2010.04.27.05.07.29;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2010.04.27.05.05.21;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2010.04.27.04.31.47;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2010.04.27.03.37.38;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2010.04.26.22.21.15;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2010.04.26.22.11.37;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2010.04.26.20.52.50;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2010.04.26.20.50.16;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2010.04.26.18.58.30;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.19.19.46.56;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2009.08.09.23.04.49;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.11.21.02.03;	author pirofti;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.26.14.47.50;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.27
log
@OpenBSD/moko development has stopped, it effectively stopped long ago when
the not-publicly documented video driver needed to be written, however
between that documentation issue and developer resouces, moko will be
moved to the Attic.
@
text
@#	$OpenBSD: Makefile.moko,v 1.26 2010/05/28 14:27:08 guenther Exp $

# For instructions on building kernels consult the config(8) and options(4)
# manual pages.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
# DEBUG is set to -g by config if debugging is requested (config -g).
# PROF is set to -pg by config if profiling is requested (config -p).

.include <bsd.own.mk>

MKDEP?=	mkdep
SIZE?=	size
STRIP?=	strip

# source tree is located via $S relative to the compilation directory
.ifndef S
S!=	cd ../../../..; pwd
.endif

_machdir?=	$S/arch/${_mach}
_archdir?=	$S/arch/${_arch}

INCLUDES=	-nostdinc -I. -I$S -I$S/arch
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -D__${_mach}__
CWARNFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-main -Wno-uninitialized -Wno-format \
		-Wstack-larger-than-2047

CMACHFLAGS=	-ffreestanding -msoft-float # -march=armv4 -mtune=strongarm
CMACHFLAGS+=	-fno-builtin-printf -fno-builtin-snprintf \
		-fno-builtin-vsnprintf -fno-builtin-log \
		-fno-builtin-log2 -fno-builtin-malloc 
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif

COPTS?=		-O2
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTS} ${PIPE}
AFLAGS=		-D_LOCORE -x assembler-with-cpp ${CMACHFLAGS}
LINKFLAGS=	-T ldscript
LINKFLAGS+=	--warn-common
STRIPFLAGS=	-g -x

.if ${IDENT:M-DDDB_STRUCT}
DB_STRUCTINFO=	db_structinfo.h
.else
DB_STRUCTINFO=
.endif

HOSTCC?=	${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}
HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<

NORMAL_C_NOP=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<

%OBJS

%CFILES

%SFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ=	${_mach}_start.o locore.o param.o ioconf.o ${OBJS}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	@@rm -f $@@
SYSTEM_LD_HEAD+=; \
		cat ${_archdir}/conf/ldscript.head ${_archdir}/conf/ldscript.tail | \
		    sed -e 's/@@KERNEL_BASE_PHYS@@/${KERNEL_BASE_PHYS}/' \
		    -e 's/@@KERNEL_BASE_VIRT@@/${KERNEL_BASE_VIRT}/' > ldscript

SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@

DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
SYSTEM_LD_TAIL+=; \
		echo mv $@@ $@@.gdb; rm -f $@@.gdb; mv $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} -o $@@ $@@.gdb; \
		${STRIP} ${STRIPFLAGS} -o $@@ $@@.gdb
.else
LINKFLAGS+=	-x
.endif

%LOAD

assym.h: $S/kern/genassym.sh Makefile \
	 ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf
	cat ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} | \
	    sort -u > assym.h.tmp && \
	    mv -f assym.h.tmp assym.h

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C}

mcount.o: $S/lib/libkern/mcount.c Makefile
	${NORMAL_C_NOP}

ioconf.o: ioconf.c
	${NORMAL_C}

vers.o: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c

clean::
	rm -f eddep *bsd *bsd.gdb tags *.[io] [a-z]*.s \
	    [Ee]rrs linterrs assym.h ${DB_STRUCTINFO}

lint:
	@@lint -hbxncez -Dvolatile= ${CPPFLAGS} -UKGDB \
	    ${CFILES} ioconf.c param.c | \
	    grep -v 'static function .* unused'

tags:
	@@echo "see $S/kern/Makefile for tags"

AFILES=	${_machdir}/${_mach}/${_mach}_start.S ${_archdir}/${_arch}/locore.S
depend:: .depend
.depend: ${AFILES} param.c ioconf.c ${CFILES} ${SFILES} assym.h ${DB_STRUCTINFO}
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${AFILES}
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
.if !empty(SFILES)
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
.endif
	cat ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf | \
	    sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} ${CPPFLAGS}
	@@sed -e 's/.*\.o: /assym.h: /' -e 's/\/tmp\/genassym_c.[^ ]*//' \
	    < assym.dep >> .depend
	@@rm -f assym.dep

db_structinfo.h: $S/ddb/db_structinfo.c $S/ddb/parse_structinfo.awk
	${CC} ${CFLAGS} ${CPPFLAGS} -gstabs -c $S/ddb/db_structinfo.c
	objdump -g db_structinfo.o | awk -f $S/ddb/parse_structinfo.awk > $@@
	rm -f db_structinfo.o

${_mach}_start.o: ${_machdir}/${_mach}/${_mach}_start.S
locore.o: ${_archdir}/${_arch}/locore.S assym.h
in_cksum_arm.o fiq_subr.o bcopyinout.o copystr.o sigcode.o: assym.h
vectors.o cpuswitch.o exception.o bcopy_page.o irq_dispatch.o: assym.h

# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif

%RULES
@


1.26
log
@${PARAM} is now included in ${CPPFLAGS}, so stop passing it separately
to genassym.sh

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.25 2010/05/25 17:27:55 deraadt Exp $
@


1.25
log
@The _arch and _mach variables now come from config(8), decreasing even further
the differences between these files.  You will need a newer config(8) binary
to be able to build kernels.
ok kettenis miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.24 2010/05/25 15:05:01 deraadt Exp $
d100 1
a100 1
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} | \
@


1.24
log
@Hand-list the two-step assym.h -> .[Ss] -> .o dependencies.  The
result: kernels built without 'make depend'-provided information
(ie. the .depend file) are more likely to have their *.[Ss] file
compilations track changes to *.h files.

The "*.o: assym.h" dependencies listed are gotten from reading the
.depend output --- from the biggest kernel possible (ie. GENERIC.MP).
When an architecture changes in a substantial way (new .[sS] files),
the list should be updated in the prettiest way possible.

This is not encouraging people to skip 'make depend'; other issues are
not resolved and may be solved later with a change guenther is working
on.  You can still screwed really easily, so continue running make
depend as config tells you.

Idea from a discussion with drahn
ok drahn, kettenis likes the idea too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.23 2010/05/25 02:35:02 deraadt Exp $
a21 2
_mach?=		moko
_arch?=		arm
@


1.23
log
@${SRCS} is only used once, and fits onto the line where it is used
idea that came out of discussion with drahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.22 2010/05/24 23:19:22 deraadt Exp $
d154 1
a154 3
${_mach}_start.o: ${_machdir}/${_mach}/${_mach}_start.S assym.h
	${NORMAL_S}

d156 2
a157 1
	${NORMAL_S}
@


1.22
log
@give up on -Wvariable-decl
delete the archaic links: target which is easily misused
handle special .[sS] files in a portable way
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.zaurus,v 1.31 2010/05/24 17:49:37 deraadt Exp $
a135 1
SRCS=	${AFILES} param.c ioconf.c ${CFILES} ${SFILES}
d137 1
a137 1
.depend: ${SRCS} assym.h param.c ${DB_STRUCTINFO}
@


1.21
log
@Unify the dependency time check for whether an architecture has SFILES
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.20 2010/05/24 14:59:16 deraadt Exp $
d31 1
a31 1
		-Wstack-larger-than-2047 -Wvariable-decl
d46 1
a46 1
STRIPFLAGS=	-g -X -x
a122 1

d125 1
a125 1
	    [Ee]rrs linterrs makelinks assym.h ${DB_STRUCTINFO}
d135 2
a136 10
links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink makelinks

SRCS=	${_archdir}/${_arch}/locore.S \
	param.c ioconf.c ${CFILES} ${SFILES}
d139 1
a139 1
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${_archdir}/${_arch}/locore.S
@


1.20
log
@Reduce differences between the Makefile.* files for all architectures.
ok various people, tested by fewer people, tested by me on 15.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.19 2010/04/28 15:31:33 deraadt Exp $
d150 1
a150 1
.if ${SFILES} != ""
@


1.19
log
@clean up more more subtle and stupid differences between the various
Makefile.* files
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.18 2010/04/27 17:25:19 drahn Exp $
d28 3
a30 3
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -D__${_mach}__
CDIAGFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main \
d33 4
a36 2
CMACHFLAGS= -ffreestanding
#CMACHFLAGS=	-march=armv4 -mtune=strongarm -ffreestanding
a39 2
CMACHFLAGS+=	-msoft-float -fno-builtin-printf -fno-builtin-log \
		-fno-builtin-log2 -fno-builtin-malloc
d42 2
a43 2
CFLAGS=		${DEBUG} ${CDIAGFLAGS} ${CMACHFLAGS} ${COPTS} ${PIPE}
AFLAGS=		-x assembler-with-cpp -D_LOCORE ${CMACHFLAGS}
d54 1
a54 1
HOSTCC= ${CC}
d57 1
a57 5

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, or PROFILE; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.
a60 2
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<

a61 3
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<

HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<
d76 1
a76 1
SYSTEM_LD_HEAD=	rm -f $@@
d111 1
a111 1
	${NORMAL_C_C}
d125 1
a125 1
	rm -f eddep *bsd bsd.gdb tags *.[io] [a-z]*.s \
d129 1
a129 1
	@@lint -hbxncez -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
@


1.18
log
@Killing a few more diffs for theo, arm makes #LINKFLAGS, beagle cleanup,
INCLUDE= common.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.17 2010/04/27 16:50:15 jsg Exp $
d59 1
a59 1
# where TYPE is NORMAL, DRIVER, or PROFILE; SUFFIX is the file suffix,
a65 3

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
@


1.17
log
@Disable builtin malloc and log2 on gcc3 arches, a no-op for gcc3
but required for gcc4.

ok kettenis@@ deraadt@@ marco@@, log2 suggested by robert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.16 2010/04/27 16:43:42 deraadt Exp $
a43 2
#LINKFLAGS=	-Ttext 0xF0000020 -e start --warn-common
#LINKFLAGS=	-T ${_machdir}/conf/kern.ldscript
@


1.16
log
@Use the form ${_archdir}/${_arch} to reach a few more places, unifying the
arm Makefiles a substantial step forward
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.15 2010/04/27 15:33:08 deraadt Exp $
d38 2
a39 1
CMACHFLAGS+=	-msoft-float -fno-builtin-printf -fno-builtin-log
@


1.15
log
@teeny bit more unification
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.14 2010/04/27 06:46:26 deraadt Exp $
d157 1
a157 1
SRCS=	${_archdir}/arm/locore.S \
d161 1
a161 1
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${_archdir}/arm/locore.S
d180 1
a180 1
locore.o: ${_archdir}/arm/locore.S assym.h
@


1.14
log
@shorten preamble
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.13 2010/04/27 05:07:29 deraadt Exp $
d91 3
a93 4
    cat ${_archdir}/conf/ldscript.head ${_archdir}/conf/ldscript.tail |  \
	sed -e 's/@@KERNEL_BASE_PHYS@@/${KERNEL_BASE_PHYS}/' \
	-e 's/@@KERNEL_BASE_VIRT@@/${KERNEL_BASE_VIRT}/' \
     > ldscript
@


1.13
log
@noone needs comments about QUOTA and TRACE
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.12 2010/04/27 05:05:21 deraadt Exp $
d3 2
a4 9
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/moko/conf/``machineid''
# after which you should do
#	config machineid
# Machine generic makefile changes should be made in
#	/sys/arch/moko/conf/Makefile.moko
# after which config should be rerun for all machines of that type.
@


1.12
log
@over the years we have moved to a machine+architectures scheme that has
two directories.  in reality, because of how we place files, it has four:
.../arch/A, .../arch/A/A, .../arch/M, and .../arch/M/M
formalize this A/A and M/M scheme directly in the Makefiles, which makes
them a lot more similar
drahn likes the idea a lot
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.11 2010/04/27 04:31:47 deraadt Exp $
a14 4
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas

@


1.11
log
@use -f assymp.dep again; worked out with miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.10 2010/04/27 03:37:38 deraadt Exp $
d172 1
a172 1
.depend: ${SRCS} assym.h param.c ${APMINC} ${DB_STRUCTINFO}
@


1.10
log
@alpha/conf/Makefile.alpha
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.9 2010/04/26 22:21:15 deraadt Exp $
d179 1
a179 2
	    sh $S/kern/genassym.sh ${MKDEP} ${CFLAGS} ${CPPFLAGS} | \
	    sort -u > assym.dep
@


1.9
log
@even cleaner mach/arch/machdir/archdir
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.8 2010/04/26 22:11:37 deraadt Exp $
a188 17


# depend on root or device configuration
autoconf.o conf.o: Makefile

# depend on network or filesystem configuration
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile
if.o if_tun.o if_loop.o if_ethersubr.o: Makefile
if_arp.o if_ether.o: Makefile
ip_input.o ip_output.o in_pcb.o in_proto.o: Makefile
tcp_subr.o tcp_timer.o tcp_output.o: Makefile

# depend on maxusers
machdep.o: Makefile

# depend on CPU configuration
locore.o machdep.o: Makefile
@


1.8
log
@next step towards unification:  make all the genassym chunks handle both
arch and machine dependent files (and add the missing files)
ok miod drahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.7 2010/04/26 20:52:50 deraadt Exp $
a33 1
_machdir?=	$S/arch/moko
d35 2
a36 1
_archdir?=	$S/arch/arm
@


1.7
log
@next unification step: remove bsd.rd test build goop
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.6 2010/04/26 20:50:16 deraadt Exp $
d124 5
a128 4
assym.h: $S/kern/genassym.sh ${_archdir}/arm/genassym.cf Makefile
	cat ${_archdir}/arm/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${CFLAGS} \
	    ${CPPFLAGS} ${PARAM} > assym.h.tmp && \
d178 3
a180 3
	cat ${_archdir}/arm/genassym.cf | \
	    sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS}
@


1.6
log
@next unification step: move all MD naming _mach, _machdir, _arch, and _archdir
ok miod drahn
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.5 2010/04/26 18:58:30 deraadt Exp $
a210 9

bsd.rd: bsd
	cp bsd bsd.rd
	$S/../distrib/${_mach}/ramdisk/rdsetroot < $S/../distrib/${_mach}/ramdisk/mr.fs bsd.rd

bsd.img: bsd.rd
	${OBJCOPY} -O binary bsd.rd bsd.i
	gzip < bsd.i > bsd.rdi.gz
	mkimage -A arm -O openbsd -T kernel -C gzip -a ${KERNEL_BASE_PHYS} -e ${KERNEL_BASE_PHYS} -n "OpenBSD" -d bsd.rdi.gz bsd.img
@


1.5
log
@first step of unification: spaces at end of lines; comments, etc.
ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.4 2009/10/19 19:46:56 guenther Exp $
d32 5
a36 2
THISARM=	$S/arch/moko
ARM=	$S/arch/arm
d39 1
a39 1
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -D__moko__
d55 1
a55 1
#LINKFLAGS=	-T ${THISARM}/conf/kern.ldscript
d98 1
a98 1
SYSTEM_OBJ=	${BOARDTYPE}_start.o locore.o param.o ioconf.o ${OBJS}
d102 1
a102 1
    cat ${ARM}/conf/ldscript.head ${ARM}/conf/ldscript.tail |  \
d124 2
a125 2
assym.h: $S/kern/genassym.sh ${ARM}/arm/genassym.cf Makefile
	cat ${ARM}/arm/genassym.cf | \
d168 1
a168 1
SRCS=	${ARM}/arm/locore.S \
d172 1
a172 1
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${ARM}/arm/locore.S
d177 1
a177 1
	cat ${ARM}/arm/genassym.cf | \
d206 1
a206 1
${BOARDTYPE}_start.o: ${THISARM}/moko/${BOARDTYPE}_start.S assym.h
d209 1
a209 1
locore.o: ${ARM}/arm/locore.S assym.h
d214 1
a214 1
	$S/../distrib/${BOARDTYPE}/ramdisk/rdsetroot < $S/../distrib/${BOARDTYPE}/ramdisk/mr.fs bsd.rd
@


1.4
log
@Correct a target name so that we don't rebuild vers.o (and then
bsd) unless some other object has changed.  Rebuild and reinstall
in /usr/src/usr.sbin/config/ after updating!

"I like it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.3 2009/08/09 23:04:49 miod Exp $
a2 2
# Makefile for OpenBSD
#
d19 2
a20 2
# DEBUG is set to -g if debugging.
# PROF is set to -pg if profiling.
d50 1
a50 1
AFLAGS=		-x assembler-with-cpp -D_LOCORE ${CMACHFLAGS} 
d176 1
a176 1
	    ${CPPFLAGS} 
d189 3
a191 3
 
# depend on network or filesystem configuration 
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile 
d200 1
a200 1
# depend on CPU configuration 
@


1.3
log
@Introduce option DDB_STRUCT. Kernels compiled with this option (except on
a few arches where toolchain limitations apply) will embed some symbolic
information about the various structs used within the kernel, and have
new ddb commands allowing struct display and some useful information
gathering. Kernel rodata increase varies accross platforms from ~150KB to
~300KB.
This option is not enabled by default.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.2 2009/01/11 21:02:03 pirofti Exp $
d142 1
a142 1
newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
@


1.2
log
@Fix a sed bug in the makefile's depend target.

What happened was that the output of mkdep was fed to a sed expression
that trimmed a bit more than required and also failed to work when
attempting to do make depend with pcc.

Example:

genassym_c.o: /tmp/genassym.whatever ../../../../../sys/param.h \

was changed to:

assym.h: \

but what was intended was:

assym.h: ../../../../../sys/param.h \

For the pcc -M output things were a bit different and after the make
depend the genassym entry would still remain and make would fail. This
affected all platforms except amd64 and sgi.

Okay miod@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.1 2008/11/26 14:47:50 drahn Exp $
d59 6
d149 1
a149 1
	    [Ee]rrs linterrs makelinks assym.h
d170 1
a170 1
.depend: ${SRCS} assym.h param.c ${APMINC}
d182 5
@


1.1
log
@Start at the port of OpenBSD to the OpenMoko hardware. Work in progress.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.moko,v 1.12 2008/04/12 21:04:17 miod Exp $
d173 2
a174 1
	@@sed -e 's/.*\.o:.* /assym.h: /' < assym.dep >> .depend
@

