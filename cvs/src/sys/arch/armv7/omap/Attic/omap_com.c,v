head	1.11;
access;
symbols
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.11
date	2016.08.15.13.42.49;	author patrick;	state dead;
branches;
next	1.10;
commitid	8OAWl0pWWtbE7YFk;

1.10
date	2016.08.12.03.22.41;	author jsg;	state Exp;
branches;
next	1.9;
commitid	HjeMmhWIXnaMRjR3;

1.9
date	2016.08.06.10.07.45;	author jsg;	state Exp;
branches;
next	1.8;
commitid	tIvsLgDtJFao46i9;

1.8
date	2016.07.27.11.45.02;	author patrick;	state Exp;
branches;
next	1.7;
commitid	yc14meyJgxIAcvAg;

1.7
date	2016.07.26.22.10.10;	author patrick;	state Exp;
branches;
next	1.6;
commitid	QHTy0YAECnrTlcSQ;

1.6
date	2016.07.17.02.45.05;	author jsg;	state Exp;
branches;
next	1.5;
commitid	j81PfDWuSi4hn2JG;

1.5
date	2016.06.19.14.38.13;	author jsg;	state Exp;
branches;
next	1.4;
commitid	f8DIZKeRHMn6QFui;

1.4
date	2016.06.19.14.27.35;	author jsg;	state Exp;
branches;
next	1.3;
commitid	EAq933IGu4UbAbmj;

1.3
date	2016.06.08.15.27.05;	author jsg;	state Exp;
branches;
next	1.2;
commitid	O8sdMmMKqczNQU5p;

1.2
date	2013.11.06.19.03.07;	author syl;	state Exp;
branches;
next	1.1;

1.1
date	2013.09.04.14.38.31;	author patrick;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Move the com(4) fdt attachment driver to a more generic location and
rename it to fit the typical scheme of such an attachment driver.

ok kettenis@@ jsg@@
@
text
@/* $OpenBSD: omap_com.c,v 1.10 2016/08/12 03:22:41 jsg Exp $ */
/*
 * Copyright 2003 Wasabi Systems, Inc.
 * All rights reserved.
 *
 * Written by Steve C. Woodford for Wasabi Systems, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed for the NetBSD Project by
 *      Wasabi Systems, Inc.
 * 4. The name of Wasabi Systems, Inc. may not be used to endorse
 *    or promote products derived from this software without specific prior
 *    written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY WASABI SYSTEMS, INC. ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL WASABI SYSTEMS, INC
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/tty.h>

#include <machine/intr.h>
#include <machine/bus.h>
#include <machine/fdt.h>

#include <dev/ic/comreg.h>
#include <dev/ic/comvar.h>

/* pick up armv7_a4x_bs_tag */
#include <arch/arm/armv7/armv7var.h>

#include <armv7/armv7/armv7var.h>
#include <armv7/armv7/armv7_machdep.h>

#include <dev/ofw/fdt.h>
#include <dev/ofw/openfirm.h>
#include <dev/ofw/ofw_pinctrl.h>

#define com_isr 8
#define ISR_RECV	(ISR_RXPL | ISR_XMODE | ISR_RCVEIR)

int	omapuart_match(struct device *, void *, void *);
void	omapuart_attach(struct device *, struct device *, void *);
int	omapuart_activate(struct device *, int);

extern int comcnspeed;
extern int comcnmode;

struct cfattach com_omap_ca = {
	sizeof (struct com_softc), omapuart_match, omapuart_attach, NULL,
	omapuart_activate
};

void
omapuart_init_cons(void)
{
	struct fdt_reg reg;
	void *node;

	if ((node = fdt_find_cons("ti,omap3-uart")) == NULL)
		if ((node = fdt_find_cons("ti,omap4-uart")) == NULL)
			return;
	if (fdt_get_reg(node, 0, &reg))
		return;

	comcnattach(&armv7_a4x_bs_tag, reg.addr, comcnspeed, 48000000,
	    comcnmode);
	comdefaultrate = comcnspeed;
}

int
omapuart_match(struct device *parent, void *match, void *aux)
{
	struct fdt_attach_args *faa = aux;

	return (OF_is_compatible(faa->fa_node, "ti,omap3-uart") ||
	    OF_is_compatible(faa->fa_node, "ti,omap4-uart"));
}

void
omapuart_attach(struct device *parent, struct device *self, void *aux)
{
	struct com_softc *sc = (struct com_softc *)self;
	struct fdt_attach_args *faa = aux;

	if (faa->fa_nreg < 1)
		return;

	sc->sc_iot = &armv7_a4x_bs_tag; /* XXX: This sucks */
	sc->sc_iobase = faa->fa_reg[0].addr;
	sc->sc_frequency = 48000000;
	sc->sc_uarttype = COM_UART_TI16750;

	if (bus_space_map(sc->sc_iot, sc->sc_iobase,
	    faa->fa_reg[0].size, 0, &sc->sc_ioh)) {
		printf("%s: bus_space_map failed\n", __func__);
		return;
	}

	pinctrl_byname(faa->fa_node, "default");

	com_attach_subr(sc);

	(void)arm_intr_establish_fdt(faa->fa_node, IPL_TTY, comintr,
	    sc, sc->sc_dev.dv_xname);
}

int
omapuart_activate(struct device *self, int act)
{
	struct com_softc *sc = (struct com_softc *)self;
	bus_space_tag_t iot = sc->sc_iot;
	bus_space_handle_t ioh = sc->sc_ioh;
	struct tty *tp = sc->sc_tty;

	switch (act) {
	case DVACT_SUSPEND:
		break;
	case DVACT_RESUME:
		if (sc->enabled) {
			sc->sc_initialize = 1;
			comparam(tp, &tp->t_termios);
			bus_space_write_1(iot, ioh, com_ier, sc->sc_ier);

			if (ISSET(sc->sc_hwflags, COM_HW_SIR)) {
				bus_space_write_1(iot, ioh, com_isr,
				    ISR_RECV);
			}
		}
		break;
	}
	return 0;
}
@


1.10
log
@Switch omap to the generic ofw pinctrl framework.

ok kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.9 2016/08/06 10:07:45 jsg Exp $ */
@


1.9
log
@Dynamically attach intc(4) using the FDT and switch omap/am335x
drivers that use the FDT over to the FDT interrupt establish API.

ok kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.8 2016/07/27 11:45:02 patrick Exp $ */
a53 1
#include <armv7/omap/sitara_cm.h>
d57 1
d120 1
a120 1
	sitara_cm_pinctrlbyname(faa->fa_node, "default");
@


1.8
log
@Instead of passing the raw reg property to simplebus nodes,
pass a pre-processed array of fdt_reg structs.  This means
that the drivers don't have to understand the cell properties
themselves but can rely on the 64-bit addr/size pairs.

ok kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.7 2016/07/26 22:10:10 patrick Exp $ */
a104 1
	int irq;
d106 1
a106 1
	if (faa->fa_nreg != 1 || (faa->fa_nintr != 1 && faa->fa_nintr != 3))
a113 5
	if (faa->fa_nintr == 1)
		irq = faa->fa_intr[0];
	else
		irq = faa->fa_intr[1];

d124 1
a124 1
	(void)arm_intr_establish(irq, IPL_TTY, comintr,
@


1.7
log
@Rename struct fdt_memory to fdt_reg to match the member name
used in the fdt attach args and the device tree.

ok kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.6 2016/07/17 02:45:05 jsg Exp $ */
d107 1
a107 1
	if (faa->fa_nreg != 2 || (faa->fa_nintr != 1 && faa->fa_nintr != 3))
d111 1
a111 1
	sc->sc_iobase = faa->fa_reg[0];
d121 1
a121 1
	    faa->fa_reg[1], 0, &sc->sc_ioh)) {
@


1.6
log
@Adapt kettenis' pinctrl changes in imx to sitaracm and
pinctrl-single,pins to handle mux settings and pad configuration.

The fdt data has offsets from the start of the pinmux address range so
the am335x specific pinmux offset from the scm base is added to the
offsets.  This as not a new driver as sitaracm does manual table
driven pad configuration for gpio.  If all the offsets in the
ti_padconf_devmap table were reduced by the am335x pinmux offset (0x800)
it may make sense to map only the pinmux memory region and not the
scm superset.

looks good kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.5 2016/06/19 14:38:13 jsg Exp $ */
d77 1
a77 1
	struct fdt_memory mem;
d83 1
a83 1
	if (fdt_get_memory_address(node, 0, &mem))
d86 1
a86 1
	comcnattach(&armv7_a4x_bs_tag, mem.addr, comcnspeed, 48000000,
@


1.5
log
@omap4 uart is compatible with omap3 uart but has it's own compatible string
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.4 2016/06/19 14:27:35 jsg Exp $ */
d54 1
d125 2
@


1.4
log
@dynamically attach omap uart with fdt
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.3 2016/06/08 15:27:05 jsg Exp $ */
d80 2
a81 1
		return;
d95 2
a96 1
	return OF_is_compatible(faa->fa_node, "ti,omap3-uart");
@


1.3
log
@Use fdt to find the console to initialise.  Try to use /chosen/stdout-path
if present otherwise fallback to /aliases/serial0.

Don't require a platform match to run the various console init functions
so the init functions will run for unknown board ids.

With and ok kettenis@@ on a earlier version.
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.2 2013/11/06 19:03:07 syl Exp $ */
d44 1
d56 1
d61 1
d69 1
a69 1
	sizeof (struct com_softc), NULL, omapuart_attach, NULL,
d89 8
d101 2
a102 1
	struct armv7_attach_args *aa = aux;
d104 5
a108 2
	sc->sc_iot = &armv7_a4x_bs_tag;	/* XXX: This sucks */
	sc->sc_iobase = aa->aa_dev->mem[0].addr;
d112 5
d118 1
a118 1
	    aa->aa_dev->mem[0].size, 0, &sc->sc_ioh)) {
d125 1
a125 1
	(void)arm_intr_establish(aa->aa_dev->irq[0], IPL_TTY, comintr,
@


1.2
log
@After factorizing armv7_machdep code here is an effort to factorize all
the code present in omap/omap.c imx/imx.c and sunxi/sunxi.c

All this code looks quite the same, so we move it in a generic armv7/armv7.c

This is a step closer to only one kernel for all armv7 boards.

ok patrick@@, rapha@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.1 2013/09/04 14:38:31 patrick Exp $ */
d52 3
d62 3
d69 16
@


1.1
log
@In the future, we shouldn't have one port port ARM SoC, that's just
ridiculous.  This is the first step for a common and generic ARM port
for ARMv7 SoCs.
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.10 2012/12/05 23:20:11 deraadt Exp $ */
d51 1
a51 1
#include <armv7/omap/omapvar.h>
d60 1
a60 1
	sizeof (struct com_softc), NULL, omapuart_attach, NULL, 
d68 1
a68 1
	struct omap_attach_args *oa = aux;
d71 1
a71 1
	sc->sc_iobase = oa->oa_dev->mem[0].addr;
d76 1
a76 1
	    oa->oa_dev->mem[0].size, 0, &sc->sc_ioh)) {
d83 1
a83 1
	(void)arm_intr_establish(oa->oa_dev->irq[0], IPL_TTY, comintr,
@

