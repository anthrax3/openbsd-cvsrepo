head	1.11;
access;
symbols
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.11
date	2016.10.25.00.04.59;	author jsg;	state Exp;
branches;
next	1.10;
commitid	kyDRkoOZHQsbTiU5;

1.10
date	2016.10.23.05.07.29;	author jsg;	state Exp;
branches;
next	1.9;
commitid	G68ODWmOQTN1ucck;

1.9
date	2016.06.08.15.27.05;	author jsg;	state Exp;
branches;
next	1.8;
commitid	O8sdMmMKqczNQU5p;

1.8
date	2016.06.04.18.09.16;	author jsg;	state Exp;
branches;
next	1.7;
commitid	tYyT96DOGdhLjy9v;

1.7
date	2016.05.20.01.42.56;	author jsg;	state Exp;
branches;
next	1.6;
commitid	YGjyg8G0BIwpBGtt;

1.6
date	2015.05.19.03.30.54;	author jsg;	state Exp;
branches;
next	1.5;
commitid	l6xI4SC4UUe6il2U;

1.5
date	2015.05.19.00.05.59;	author jsg;	state Exp;
branches;
next	1.4;
commitid	bo8vCG1OOftVcP5V;

1.4
date	2015.05.15.15.35.43;	author jsg;	state Exp;
branches;
next	1.3;
commitid	AFNG6oUBgS2y44wd;

1.3
date	2015.01.22.14.33.01;	author krw;	state Exp;
branches;
next	1.2;
commitid	zVCYt6mjbluLi3jT;

1.2
date	2013.11.06.19.03.07;	author syl;	state Exp;
branches;
next	1.1;

1.1
date	2013.11.04.20.14.16;	author syl;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Remove now unused disable_l2_if_needed interface.
ok kettenis@@ patrick@@
@
text
@/*	$OpenBSD: omap_machdep.c,v 1.10 2016/10/23 05:07:29 jsg Exp $	*/
/*
 * Copyright (c) 2013 Sylvestre Gallon <ccna.syl@@gmail.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/types.h>
#include <sys/device.h>
#include <sys/systm.h>
#include <sys/termios.h>

#include <machine/bus.h>
#include <machine/bootconfig.h>

#include <dev/ic/comreg.h>
#include <dev/ic/comvar.h>

#include <arm/cortex/smc.h>
#include <arm/armv7/armv7var.h>
#include <arm/mainbus/mainbus.h>
#include <armv7/armv7/armv7var.h>
#include <armv7/armv7/armv7_machdep.h>

extern void omap4_smc_call(uint32_t, uint32_t);
extern void omdog_reset(void);
extern struct board_dev *omap_board_devs(void);
extern void omap_board_init(void);

void
omap_platform_smc_write(bus_space_tag_t iot, bus_space_handle_t ioh,
    bus_size_t off, uint32_t op, uint32_t val)
{
	switch (op) {
	case 0x100:	/* PL310 DEBUG */
	case 0x102:	/* PL310 CTL */
		break;
	default:
		panic("platform_smc_write: invalid operation %d", op);
	}

	omap4_smc_call(op, val);
}

void
omap_platform_init_mainbus(struct device *self)
{
	mainbus_legacy_found(self, "cortex");
	mainbus_legacy_found(self, "omap");
}

void
omap_platform_watchdog_reset(void)
{
	omdog_reset();
}

void
omap_platform_powerdown(void)
{

}

void
omap_platform_board_init(void)
{
	omap_board_init();
}

struct armv7_platform omap_platform = {
	.board_init = omap_platform_board_init,
	.smc_write = omap_platform_smc_write,
	.watchdog_reset = omap_platform_watchdog_reset,
	.powerdown = omap_platform_powerdown,
	.init_mainbus = omap_platform_init_mainbus,
};

struct armv7_platform *
omap_platform_match(void)
{
	struct board_dev *devs;

	devs = omap_board_devs();
	if (devs == NULL)
		return (NULL);

	omap_platform.devs = devs;
	return (&omap_platform);
}
@


1.10
log
@stop disabling the external pl310 l2 cache on pandaboard

The consensus is that this was done before the bugs in the cache
flushing code were fixed.  The pl310 has been enabled on imx for some
time now and it works fine here on pandaboard as well.

ok patrick@@ kettenis@@ bmercer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: omap_machdep.c,v 1.9 2016/06/08 15:27:05 jsg Exp $	*/
a75 5
omap_platform_disable_l2_if_needed(void)
{
}

void
a85 1
	.disable_l2_if_needed = omap_platform_disable_l2_if_needed,
@


1.9
log
@Use fdt to find the console to initialise.  Try to use /chosen/stdout-path
if present otherwise fallback to /aliases/serial0.

Don't require a platform match to run the various console init functions
so the init functions will run for unknown board ids.

With and ok kettenis@@ on a earlier version.
@
text
@d1 1
a1 1
/*	$OpenBSD: omap_machdep.c,v 1.8 2016/06/04 18:09:16 jsg Exp $	*/
a77 6
	switch (board_id) {
	case BOARD_ID_OMAP4_PANDA:
		/* disable external L2 cache */
		omap4_smc_call(0x102, 0);
		break;
	}
@


1.8
log
@Remove model specific strings keyed off the board id.
We now pull the model string from fdt.
@
text
@d1 1
a1 1
/*	$OpenBSD: omap_machdep.c,v 1.7 2016/05/20 01:42:56 jsg Exp $	*/
a39 2
extern int comcnspeed;
extern int comcnmode;
a56 22
omap_platform_init_cons(void)
{
	paddr_t paddr;

	switch (board_id) {
	case BOARD_ID_OMAP3_BEAGLE:
	case BOARD_ID_OMAP3_OVERO:
		paddr = 0x49020000;
		break;
	case BOARD_ID_AM335X_BEAGLEBONE:
		paddr = 0x44e09000;
		break;
	case BOARD_ID_OMAP4_PANDA:
		paddr = 0x48020000;
		break;
	}

	comcnattach(&armv7_a4x_bs_tag, paddr, comcnspeed, 48000000, comcnmode);
	comdefaultrate = comcnspeed;
}

void
a94 1
	.init_cons = omap_platform_init_cons,
@


1.7
log
@add init_mainbus() hooks for the other armv7 platforms
@
text
@d1 1
a1 1
/*	$OpenBSD: omap_machdep.c,v 1.6 2015/05/19 03:30:54 jsg Exp $	*/
a37 1
extern char *omap_board_name(void);
a98 6
const char *
omap_platform_board_name(void)
{
	return (omap_board_name());
}

a116 2
	.boot_name = "OpenBSD/omap",
	.board_name = omap_platform_board_name,
@


1.6
log
@Abstract the soc_machdep.c functions to allow a kernel to be built for
multiple socs.

From Patrick Wildt in bitrig with some additional changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: omap_machdep.c,v 1.5 2015/05/19 00:05:59 jsg Exp $	*/
d32 1
d82 7
d132 1
@


1.5
log
@use the same va entry point on all armv7 socs
Similiar changes were made in bitrig by Patrick Wildt.

As part of this change the physical load address for imx and sunxi have
changed.  Any u-boot settings that include it will need to be modified.

imx: 0x10800000 -> 0x10300000
sunxi: 0x40800000 -> 0x40300000

Tested by bmercer, canacar and myself.
ok bmercer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: omap_machdep.c,v 1.4 2015/05/15 15:35:43 jsg Exp $	*/
d38 2
a42 2
const char *platform_boot_name = "OpenBSD/omap";

d44 2
a45 2
platform_smc_write(bus_space_tag_t iot, bus_space_handle_t ioh, bus_size_t off,
    uint32_t op, uint32_t val)
d59 1
a59 1
platform_init_cons(void)
d81 1
a81 1
platform_watchdog_reset(void)
d87 1
a87 1
platform_powerdown(void)
d93 1
a93 1
platform_board_name(void)
d99 1
a99 1
platform_disable_l2_if_needed(void)
d107 30
@


1.4
log
@Make board attaching table driven and move it out into the soc
directories.  Move the device tables while here as was done in bitrig.
With these changes the only use of the board id defines is in the soc
directories.

Tested by matthieu and djm on imx and myself on omap and sunxi (qemu).
ok djm@@, ok jasper@@ on an earlier version
@
text
@d1 1
a1 1
/*	$OpenBSD: omap_machdep.c,v 1.3 2015/01/22 14:33:01 krw Exp $	*/
a95 40
}

void
platform_bootconfig_dram(BootConfig *bootconfig, psize_t *memstart, psize_t *memsize)
{
	uint32_t sdrc_mcfg_0, sdrc_mcfg_1, memsize0, memsize1;
	int loop;

	if (bootconfig->dramblocks == 0) {
		sdrc_mcfg_0 = *(uint32_t *)0x6d000080;
		sdrc_mcfg_1 = *(uint32_t *)0x6d0000b0;
		memsize0 = (((sdrc_mcfg_0 >> 8))&0x3ff) * (2 * 1024 * 1024);
		memsize1 = (((sdrc_mcfg_1 >> 8))&0x3ff) * (2 * 1024 * 1024);
		*memsize = memsize0 + memsize1;

		*memstart = SDRAM_START;
		*memsize =  0x02000000; /* 32MB */
		/* Fake bootconfig structure for the benefit of pmap.c */
		/* XXX must make the memory description h/w independant */
		bootconfig->dram[0].address = *memstart;
		bootconfig->dram[0].pages = memsize0 / PAGE_SIZE;
		bootconfig->dramblocks = 1;
		if (memsize1 != 0) {
			bootconfig->dram[1].address = bootconfig->dram[0].address
			    + memsize0; /* XXX */
			bootconfig->dram[1].pages = memsize1 / PAGE_SIZE;
			bootconfig->dramblocks++; /* both banks populated */
		}
	} else {
		/* doesn't deal with multiple segments, hopefully u-boot collaped them into one */
		*memstart = bootconfig->dram[0].address;
		*memsize = bootconfig->dram[0].pages * PAGE_SIZE;
		printf("memory size derived from u-boot\n");
		for (loop = 0; loop < bootconfig->dramblocks; loop++) {
			printf("bootconf.mem[%d].address = %08x pages %d/0x%08x\n",
			    loop, bootconfig->dram[0].address, bootconfig->dram[0].pages,
			        bootconfig->dram[0].pages * PAGE_SIZE);
		}
	}

@


1.3
log
@Replace some obvious '$OpenBSD' and '$OpenBSD:' typos with '$OpenBSD$'.

Pointed out by dickman@@.

ok sthen@@ phessler@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
d92 2
a93 2
void
platform_print_board_type(void)
d95 1
a95 16
	switch (board_id) {
	case BOARD_ID_OMAP3_BEAGLE:
		printf("board type: beagle\n");
		break;
	case BOARD_ID_AM335X_BEAGLEBONE:
		printf("board type: beaglebone\n");
		break;
	case BOARD_ID_OMAP3_OVERO:
		printf("board type: overo\n");
		break;
	case BOARD_ID_OMAP4_PANDA:
		printf("board type: panda\n");
		break;
	default:
		printf("board type %x unknown", board_id);
	}
@


1.2
log
@After factorizing armv7_machdep code here is an effort to factorize all
the code present in omap/omap.c imx/imx.c and sunxi/sunxi.c

All this code looks quite the same, so we move it in a generic armv7/armv7.c

This is a step closer to only one kernel for all armv7 boards.

ok patrick@@, rapha@@
@
text
@d1 1
a1 1
/*	$OpenBSD	*/
@


1.1
log
@Rename beagle_machdep.c to omap_machdep.c

ok rapha@@, jasper@@, bmercer@@, patrick@@
@
text
@d20 1
d32 1
a32 1
#include <armv7/omap/omapvar.h>
@

