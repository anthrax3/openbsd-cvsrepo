head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.10
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.12
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2015.01.22.14.33.01;	author krw;	state Exp;
branches;
next	1.3;
commitid	zVCYt6mjbluLi3jT;

1.3
date	2013.10.30.20.12.06;	author syl;	state Exp;
branches;
next	1.2;

1.2
date	2013.10.24.19.52.52;	author syl;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.10.19.40.02;	author syl;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Replace some obvious '$OpenBSD' and '$OpenBSD:' typos with '$OpenBSD$'.

Pointed out by dickman@@.

ok sthen@@ phessler@@
@
text
@/*	$OpenBSD$	*/
/*
 * Copyright (c) 2013 Sylvestre Gallon <ccna.syl@@gmail.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef __EDMAVAR_H__
#define __EDMAVAR_H__

typedef	void (*edma_intr_cb_t)(void *);

/*
 *	EDMA PaRAM dma descriptors
 */
struct edma_param{
	uint32_t		opt;		/* Option */
	uint32_t		src;		/* Ch source */
	uint16_t		acnt;		/* 1st dim count */
	uint16_t		bcnt;		/* 2nd dim count */
	uint32_t		dst;		/* Chan dst addr */
	int16_t			srcbidx;	/* Src b index */
	int16_t			dstbidx;	/* Dst b index */
	uint16_t		link;		/* Link addr */
	uint16_t		bcntrld;	/* BCNT reload */
	int16_t			srccidx;	/* Source C index */
	int16_t			dstcidx;	/* Dest C index */
	uint16_t		ccnt;		/* 3rd dim count */
	uint16_t		res;		/* Reserved */
} __attribute__((__packed__));

int	edma_intr_dma_en(uint32_t, edma_intr_cb_t, void *); /* en it for chan */
int	edma_intr_dma_dis(uint32_t);		    /* disable intr for chan */
int	edma_trig_xfer_man(uint32_t);		    /* trig a dma xfer */
int	edma_trig_xfer_by_dev(uint32_t);	    /* dma xfer trig by dev */
void	edma_param_write(uint32_t, struct edma_param *);
void	edma_param_read(uint32_t, struct edma_param *);

#endif /* __EDMAVAR_H__ */
@


1.3
log
@Add missing rcsid.

ok patrick@@ jasper@@
@
text
@d1 1
a1 1
/*	$OpenBSD	*/
@


1.2
log
@Cleanup edma.

We do not need a header for hw register definition and
the struct edma_softc should not be expose in edmavar.h

From an idea of Dale Rahn. Thanks.
@
text
@d1 1
@


1.1
log
@Add edma driver. This driver add support for am335x edma3 controller.

With some more work, it will allow us to speed-up ommmc driver.

ok patrick@@.
@
text
@a21 11
struct edma_softc {
	struct device		sc_dev;

	bus_space_tag_t		sc_iot;
	bus_space_handle_t	sc_tpcc;

	void			*sc_ih_comp;
	edma_intr_cb_t		sc_intr_cb[64];
	void			*sc_intr_dat[64];
};

@

