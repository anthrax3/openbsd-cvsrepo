head	1.6;
access;
symbols
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.4.0.6
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2017.03.10.08.42.08;	author kettenis;	state Exp;
branches;
next	1.5;
commitid	hkqpiMLX48VBywlU;

1.5
date	2017.01.24.13.33.06;	author jca;	state Exp;
branches;
next	1.4;
commitid	W2RuOo7Qz4KoBEdk;

1.4
date	2015.06.24.21.35.01;	author miod;	state Exp;
branches;
next	1.3;
commitid	W4YvjXi8Y69IvwP4;

1.3
date	2015.05.12.04.31.10;	author jsg;	state Exp;
branches;
next	1.2;
commitid	tBinwSxs19VZuAFZ;

1.2
date	2015.05.10.15.56.28;	author jsg;	state Exp;
branches;
next	1.1;
commitid	MKYLBBkRhYmhiqiC;

1.1
date	2013.09.04.14.38.29;	author patrick;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Set VM_PHYSSEG_MAX to 32 and use VM_PSTRAT_BSEARCH as the sort/search option
like we do on macppc and sparc64.  This makes our kernel recognize all the
memory on the Odroid XU4.

ok jsg@@
@
text
@/* 	$OpenBSD: vmparam.h,v 1.5 2017/01/24 13:33:06 jca Exp $	*/
/*	$NetBSD: vmparam.h,v 1.23 2003/05/22 05:47:07 thorpej Exp $	*/

/*
 * Copyright (c) 1988 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef	_MACHINE_VMPARAM_H_
#define	_MACHINE_VMPARAM_H_

#define	ARM_KERNEL_BASE		0xc0000000U

/* Allow armv7 to have bigger limits than generic arm, allow user to override */
#ifndef	MAXDSIZ
#define	MAXDSIZ		(1024*1024*1024)		/* max data size */
#endif
#ifndef BRKSIZ
#define	BRKSIZ		MAXDSIZ			/* heap gap size */
#endif
#ifndef	DFLSSIZ
#define	DFLSSIZ		(4*1024*1024)		/* initial stack size limit */
#endif
#ifndef	MAXSSIZ
#define	MAXSSIZ		(32*1024*1024)		/* max stack size */
#endif

#include <arm/vmparam.h>

#ifdef _KERNEL
/*
 * Address space constants
 */

/*
 * The line between user space and kernel space
 * Mappings >= KERNEL_BASE are constant across all processes
 */
#define	KERNEL_BASE		ARM_KERNEL_BASE

#define VM_KERNEL_SPACE_SIZE	0x10000000

/*
 * Override the default pager_map size, there's not enough KVA.
 */
#define PAGER_MAP_SIZE		(4 * 1024 * 1024)

/*
 * Size of User Raw I/O map
 */

#define USRIOSIZE       300

/* virtual sizes (bytes) for various kernel submaps */

#define VM_PHYS_SIZE		(USRIOSIZE*PAGE_SIZE)

/*
 * max number of non-contig chunks of physical RAM you can have
 */

#define	VM_PHYSSEG_MAX		32
#define	VM_PHYSSEG_STRAT	VM_PSTRAT_BSEARCH

/*
 * this indicates that we can't add RAM to the VM system after the
 * vm system is init'd.
 */

#define	VM_PHYSSEG_NOADD

#endif /* _KERNEL */

#endif	/* _MACHINE_VMPARAM_H_ */
@


1.5
log
@Use the same stack size as on i386

ok kettenis@@ deraadt@@
@
text
@d1 1
a1 1
/* 	$OpenBSD: vmparam.h,v 1.4 2015/06/24 21:35:01 miod Exp $	*/
d86 2
a87 2
#define	VM_PHYSSEG_MAX		2
#define	VM_PHYSSEG_STRAT	VM_PSTRAT_RANDOM
@


1.4
log
@Make ARM_KERNEL_BASE explicitely unsigned
@
text
@d1 1
a1 1
/* 	$OpenBSD: vmparam.h,v 1.3 2015/05/12 04:31:10 jsg Exp $	*/
d38 1
a38 1
/* Allow armv7 to have bigger DSIZ than generic arm, allow user to override */
d44 6
@


1.3
log
@Raise VM_PHYSSEG_MAX to two and load an additional physical memory
segment if u-boot reports it.  Needed for the utilite where u-boot
reports two 1GB segments of physical memory.

From Patrick Wildt in bitrig with some additional sanity checks added.
@
text
@d1 1
a1 1
/* 	$OpenBSD: vmparam.h,v 1.2 2015/05/10 15:56:28 jsg Exp $	*/
d36 1
a36 1
#define	ARM_KERNEL_BASE		0xc0000000
@


1.2
log
@VM_MAX_KERNEL_ADDRESS is the end of the kva range not the end of
addressable virtual memory space but arm ports were using a value of
0xffffffff for this.

Instead of using a shared VM_MAX_KERNEL_ADDRESS define add md
VM_KERNEL_SPACE_SIZE defines based on the KERNEL_VM_SIZE values
from the respective machdep.c files.

djm's novena was hitting "panic: bufinit: can't reserve VM for buffers"
without a similiar change.

ok miod@@
@
text
@d1 1
a1 1
/* 	$OpenBSD: vmparam.h,v 1.1 2013/09/04 14:38:29 patrick Exp $	*/
d80 1
a80 1
#define	VM_PHYSSEG_MAX		1
@


1.1
log
@In the future, we shouldn't have one port port ARM SoC, that's just
ridiculous.  This is the first step for a common and generic ARM port
for ARMv7 SoCs.
@
text
@d1 1
a1 1
/* 	$OpenBSD: vmparam.h,v 1.5 2013/04/25 23:16:02 patrick Exp $	*/
d58 2
@

