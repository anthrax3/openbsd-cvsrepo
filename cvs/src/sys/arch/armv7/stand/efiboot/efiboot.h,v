head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.8
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.6
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.3
date	2016.05.17.22.41.20;	author kettenis;	state Exp;
branches;
next	1.2;
commitid	NNtn5vXpUWa3YUEk;

1.2
date	2016.05.17.21.26.32;	author kettenis;	state Exp;
branches;
next	1.1;
commitid	3n9DvpmBesrJfZVA;

1.1
date	2016.05.14.17.55.15;	author kettenis;	state Exp;
branches;
next	;
commitid	IdQZw2Pw0GuFYXCI;


desc
@@


1.3
log
@Enable -Wall -Werror.  Fix warnings uncovered by this.

Set board IDs for i.IMX6 boards based on the "compatible" property of the
root node for now to ease the transition to full FDT support in the
kernel.
@
text
@/*	$OpenBSD: efiboot.h,v 1.2 2016/05/17 21:26:32 kettenis Exp $	*/

/*
 * Copyright (c) 2015 YASUOKA Masahiko <yasuoka@@yasuoka.net>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

void	efi_cleanup(void);
void	efi_diskprobe(void);
void	*efi_makebootargs(char *, uint32_t *);
void	efi_cons_probe(struct consdev *);
void	efi_cons_init(struct consdev *);
int	efi_cons_getc(dev_t);
void	efi_cons_putc(dev_t, int);
@


1.2
log
@Add support for passing an FDT.  The bootloader will update the "bootargs"
property of the "/chosen" node to pass arguments to the kernel.
@
text
@d1 1
a1 1
/*	$OpenBSD: efiboot.h,v 1.1 2016/05/14 17:55:15 kettenis Exp $	*/
d21 1
a21 1
void	*efi_makebootargs(char *);
@


1.1
log
@Initial stab at an EFI bootloader for armv7.  Bits and pieces from FreeBSD
and our amd64 EFI bootloader.  The current code works on a 2GB CuBox-i,
but probably not on anything else.  It needs a u-boot with EFI loader
support.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d19 7
a25 9
void	 efi_cleanup(void);
void	 efi_cons_probe (struct consdev *);
void	 efi_memprobe (void);
void	 efi_hardprobe (void);
void	 efi_diskprobe (void);
void	 efi_cons_init (struct consdev *);
int	 efi_cons_getc (dev_t);
void	 efi_cons_putc (dev_t, int);
int	 efi_cons_getshifts(dev_t dev);
@

