head	1.14;
access;
symbols
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.14
date	2017.03.06.07.41.58;	author kettenis;	state dead;
branches;
next	1.13;
commitid	ElPtONkRhgn2bBpC;

1.13
date	2016.08.21.06.36.23;	author jsg;	state Exp;
branches;
next	1.12;
commitid	TvBCJg2VADuVxapL;

1.12
date	2016.06.04.18.09.16;	author jsg;	state Exp;
branches;
next	1.11;
commitid	tYyT96DOGdhLjy9v;

1.11
date	2016.05.02.15.27.24;	author patrick;	state Exp;
branches;
next	1.10;
commitid	gOMXBf6ijXFQHRgk;

1.10
date	2016.04.24.00.57.23;	author patrick;	state Exp;
branches;
next	1.9;
commitid	LnsUZ9pocLJscsAz;

1.9
date	2016.02.02.03.31.22;	author jsg;	state Exp;
branches;
next	1.8;
commitid	RbRzD1v0uZj2WQEC;

1.8
date	2015.07.17.17.33.50;	author jsg;	state Exp;
branches;
next	1.7;
commitid	CDlKDNbSg50yNGAE;

1.7
date	2015.06.07.16.54.16;	author jsg;	state Exp;
branches;
next	1.6;
commitid	PdAY9TkBu3RC2njV;

1.6
date	2015.05.27.00.06.14;	author jsg;	state Exp;
branches;
next	1.5;
commitid	G6QP18Ap4gF8hOTp;

1.5
date	2015.05.24.11.01.48;	author jsg;	state Exp;
branches;
next	1.4;
commitid	6CITTEb8JvOPEk0I;

1.4
date	2015.05.20.00.14.55;	author jsg;	state Exp;
branches;
next	1.3;
commitid	Y47vqpZ6HtQSLXGx;

1.3
date	2015.05.19.03.30.54;	author jsg;	state Exp;
branches;
next	1.2;
commitid	l6xI4SC4UUe6il2U;

1.2
date	2015.05.15.15.35.43;	author jsg;	state Exp;
branches;
next	1.1;
commitid	AFNG6oUBgS2y44wd;

1.1
date	2015.01.26.02.48.24;	author bmercer;	state Exp;
branches;
next	;
commitid	PStGWtijE9UAf7Yd;


desc
@@


1.14
log
@De-platformize exynos.  Disable exdisplay(4) for now.
@
text
@/* $OpenBSD: exynos.c,v 1.13 2016/08/21 06:36:23 jsg Exp $ */
/*
 * Copyright (c) 2005,2008 Dale Rahn <drahn@@openbsd.com>
 * Copyright (c) 2012-2013 Patrick Wildt <patrick@@blueri.se>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/systm.h>

#include <machine/bus.h>

#include <arm/mainbus/mainbus.h>
#include <armv7/armv7/armv7var.h>

int	exynos_match(struct device *, void *, void *);
void	exynos4_init();
void	exynos5_init();

struct cfattach exynos_ca = {
	sizeof(struct armv7_softc), exynos_match, armv7_attach, NULL,
	config_activate_children
};

struct cfdriver exynos_cd = {
	NULL, "exynos", DV_DULL
};

struct board_dev chromebook_devs[] = {
	{ "exmct",	0 },
	{ "exdog",	0 },
	{ "exclock",	0 },
	{ "expower",	0 },
	{ "exsysreg",	0 },
	{ "exgpio",	0 },
	{ "exgpio",	1 },
	{ "exgpio",	2 },
	{ "exgpio",	3 },
	{ "exgpio",	4 },
	{ "exgpio",	5 },
	{ "exehci",	0 },
	{ "exiic",	4 },
//	{ "exesdhc",	2 },
//	{ "exesdhc",	3 },
	{ "exdisplay",	0 },
	{ NULL,		0 }
};

/* Samsung Mobile NURI board */
struct board_dev nuri_devs[] = {
	{ "exmct",	0 },
	{ "exdog",	0 },
//	{ "exclock",	0 },
	{ "expower",	0 },
	{ "exsysreg",	0 },
	{ "exgpio",	0 },
	{ "exgpio",	1 },
	{ "exgpio",	2 },
	{ "exgpio",	3 },
	{ "exgpio",	4 },
	{ "exgpio",	5 },
//	{ "exehci",	0 },
	{ "exiic",	0 },
//	{ "exesdhc",	2 },
	{ NULL,		0 }
};

/*
 * S5PC210/Exynos4210 reference board
 * has a LAN9215 (emulated in qemu as LAN9118)
 */
struct board_dev smdkc210_devs[] = {
	{ "exmct",	0 },
	{ "exdog",	0 },
//	{ "exclock",	0 },
	{ "expower",	0 },
	{ "exsysreg",	0 },
	{ "exgpio",	0 },
	{ "exgpio",	1 },
	{ "exgpio",	2 },
	{ "exgpio",	3 },
	{ "exgpio",	4 },
	{ "exgpio",	5 },
//	{ "exehci",	0 },
	{ "exiic",	0 },
//	{ "exesdhc",	2 },
	{ NULL,		0 }
};

struct armv7_board exynos_boards[] = {
	{
		BOARD_ID_EXYNOS5_CHROMEBOOK,
		chromebook_devs,
		exynos5_init,
	},
	{
		BOARD_ID_EXYNOS4_NURI,
		nuri_devs,
		exynos4_init,
	},
	{
		BOARD_ID_EXYNOS4_SMDKC210,
		smdkc210_devs,
		exynos4_init,
	},
	{ 0, NULL, NULL },
};

struct board_dev *
exynos_board_devs(void)
{
	int i;

	for (i = 0; exynos_boards[i].board_id != 0; i++) {
		if (exynos_boards[i].board_id == board_id)
			return (exynos_boards[i].devs);
	}
	return (NULL);
}

void
exynos_board_init(void)
{
	int i;

	for (i = 0; exynos_boards[i].board_id != 0; i++) {
		if (exynos_boards[i].board_id == board_id) {
			exynos_boards[i].init();
			break;
		}
	}
}

int
exynos_match(struct device *parent, void *cfdata, void *aux)
{
	union mainbus_attach_args *ma = (union mainbus_attach_args *)aux;
	struct cfdata *cf = (struct cfdata *)cfdata;

	if (ma->ma_name == NULL)
		return (0);

	if (strcmp(cf->cf_driver->cd_name, ma->ma_name) != 0)
		return (0);

	return (exynos_board_devs() != NULL);
}
@


1.13
log
@Dynamically attach exuart using the FDT.
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.12 2016/06/04 18:09:16 jsg Exp $ */
@


1.12
log
@Remove model specific strings keyed off the board id.
We now pull the model string from fdt.
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.11 2016/05/02 15:27:24 patrick Exp $ */
a45 1
//	{ "exuart",	1 },
a66 4
//	{ "exuart",	0 },
	{ "exuart",	1 },
	{ "exuart",	2 },
	{ "exuart",	3 },
a88 4
//	{ "exuart",	0 },
	{ "exuart",	1 },
	{ "exuart",	2 },
	{ "exuart",	3 },
@


1.11
log
@Add check to armv7 platform bus match code, so that those busses only
attach if we are running in legacy mode.

ok jsg@@
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.10 2016/04/24 00:57:23 patrick Exp $ */
a112 1
		"Exynos 5 Chromebook",
a117 1
		"Samsung NURI",
a122 1
		"Samsung SMDKC210",
d126 1
a126 1
	{ 0, NULL, NULL, NULL },
d134 1
a134 1
	for (i = 0; exynos_boards[i].name != NULL; i++) {
d146 1
a146 1
	for (i = 0; exynos_boards[i].name != NULL; i++) {
a151 12
}

const char *
exynos_board_name(void)
{
	int i;

	for (i = 0; exynos_boards[i].name != NULL; i++) {
		if (exynos_boards[i].board_id == board_id)
			return (exynos_boards[i].name);
	}
	return (NULL);
@


1.10
log
@New FDT-enabled busses will use a new "fdt" attribute.  Unfortunately
this attribute is currently already defined.  This define is only used
to disable the unused FDT functionality in the exynos and virtio code.
As the FDT code will be developed in a different manner than the way
those drivers are written today and the functionality has never been
enabled, simply remove the attribute and its users.

ok jsg@@
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.9 2016/02/02 03:31:22 jsg Exp $ */
a22 3
#if NFDT > 0
#include <machine/fdt.h>
#endif
d24 1
d172 7
a178 4
#if NFDT > 0
	/* If we're running with fdt, do not attach. */
	/* XXX: Find a better way. */
	if (fdt_next_node(0))
a179 1
#endif
@


1.9
log
@remove uneeded break statements
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.8 2015/07/17 17:33:50 jsg Exp $ */
a17 2

#include "fdt.h"
@


1.8
log
@add exdisplay to chromebook_devs
tested by and ok bmercer@@
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.7 2015/06/07 16:54:16 jsg Exp $ */
d167 1
a167 1
		if (exynos_boards[i].board_id == board_id) {
a168 2
			break;
		}
@


1.7
log
@Initial exynos4 bits.  Among other things the gic isn't mapped correctly
on exynos4/5 yet as it isn't at the usual offset from periphbase.
ok bmercer@@
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.6 2015/05/27 00:06:14 jsg Exp $ */
d61 1
@


1.6
log
@make the exynos code compile without fdt
ok bmercer@@
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.5 2015/05/24 11:01:48 jsg Exp $ */
d32 1
d64 49
d119 12
@


1.5
log
@imx_board_devs -> exynos_board_devs
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.4 2015/05/20 00:14:55 jsg Exp $ */
d19 2
d25 1
d27 1
d115 1
d120 1
@


1.4
log
@add per soc match functions instead of using armv7_match
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.3 2015/05/19 03:30:54 jsg Exp $ */
d116 1
a116 1
	return (imx_board_devs() != NULL);
@


1.3
log
@Abstract the soc_machdep.c functions to allow a kernel to be built for
multiple socs.

From Patrick Wildt in bitrig with some additional changes.
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.2 2015/05/15 15:35:43 jsg Exp $ */
d27 2
a28 18
static int
exynos_match(struct device *parent, void *cfdata, void *aux)
{
	/* If we're running with fdt, do not attach. */
	/* XXX: Find a better way. */
	if (fdt_next_node(0))
		return (0);

	switch (board_id)
	{
	case BOARD_ID_EXYNOS5_CHROMEBOOK:
		return (1);
	}

	return (0);
}

void exynos5_init();
d106 11
@


1.2
log
@Make board attaching table driven and move it out into the soc
directories.  Move the device tables while here as was done in bitrig.
With these changes the only use of the board id defines is in the soc
directories.

Tested by matthieu and djm on imx and myself on omap and sunxi (qemu).
ok djm@@, ok jasper@@ on an earlier version
@
text
@d1 1
a1 1
/* $OpenBSD: exynos.c,v 1.1 2015/01/26 02:48:24 bmercer Exp $ */
d44 2
d86 13
a98 1
exynos_board_attach(void)
a104 1
			return (exynos_boards[i].devs);
a107 1
	return (NULL);
@


1.1
log
@Import the exynos work into tree. This is from Bitrig. Discussed with and OK jsg, also OK from krw.
@
text
@d1 1
a1 1
/* $OpenBSD: omap.c,v 1.3 2011/11/15 23:01:11 drahn Exp $ */
d72 39
@

