head	1.11;
access;
symbols
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2017.03.10.13.54.48;	author kettenis;	state dead;
branches;
next	1.10;
commitid	HTxSze7e46hfwt8o;

1.10
date	2016.10.25.00.04.59;	author jsg;	state Exp;
branches;
next	1.9;
commitid	kyDRkoOZHQsbTiU5;

1.9
date	2016.06.08.15.27.05;	author jsg;	state Exp;
branches;
next	1.8;
commitid	O8sdMmMKqczNQU5p;

1.8
date	2016.06.04.18.09.16;	author jsg;	state Exp;
branches;
next	1.7;
commitid	tYyT96DOGdhLjy9v;

1.7
date	2016.05.20.01.42.56;	author jsg;	state Exp;
branches;
next	1.6;
commitid	YGjyg8G0BIwpBGtt;

1.6
date	2016.04.24.00.57.23;	author patrick;	state Exp;
branches;
next	1.5;
commitid	LnsUZ9pocLJscsAz;

1.5
date	2015.06.07.16.54.16;	author jsg;	state Exp;
branches;
next	1.4;
commitid	PdAY9TkBu3RC2njV;

1.4
date	2015.05.27.00.06.14;	author jsg;	state Exp;
branches;
next	1.3;
commitid	G6QP18Ap4gF8hOTp;

1.3
date	2015.05.19.03.30.54;	author jsg;	state Exp;
branches;
next	1.2;
commitid	l6xI4SC4UUe6il2U;

1.2
date	2015.05.15.15.35.43;	author jsg;	state Exp;
branches;
next	1.1;
commitid	AFNG6oUBgS2y44wd;

1.1
date	2015.01.26.02.48.24;	author bmercer;	state Exp;
branches;
next	;
commitid	PStGWtijE9UAf7Yd;


desc
@@


1.11
log
@Missed this file in the deplatformization commit.
@
text
@/*	$OpenBSD: exynos_machdep.c,v 1.10 2016/10/25 00:04:59 jsg Exp $	*/
/*
 * Copyright (c) 2013 Patrick Wildt <patrick@@blueri.se>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/types.h>
#include <sys/systm.h>
#include <sys/termios.h>

#include <machine/bus.h>

#include <arm/cortex/smc.h>
#include <arm/armv7/armv7var.h>
#include <arm/mainbus/mainbus.h>
#include <armv7/armv7/armv7var.h>
#include <armv7/exynos/exdisplayvar.h>
#include <armv7/exynos/exuartvar.h>
#include <armv7/armv7/armv7_machdep.h>

extern void exdog_reset(void);
extern struct board_dev *exynos_board_devs(void);
extern void exynos_board_init(void);

static void
exynos_platform_smc_write(bus_space_tag_t iot, bus_space_handle_t ioh, bus_size_t off,
    uint32_t op, uint32_t val)
{
	bus_space_write_4(iot, ioh, off, val);
}

void
exynos_platform_init_mainbus(struct device *self)
{
	mainbus_legacy_found(self, "cortex");
	mainbus_legacy_found(self, "exynos");
}

static void
exynos_platform_watchdog_reset(void)
{
	exdog_reset();
}

static void
exynos_platform_powerdown(void)
{

}

void
exynos_platform_board_init(void)
{
	exynos_board_init();
}

struct armv7_platform exynos_platform = {
	.board_init = exynos_platform_board_init,
	.smc_write = exynos_platform_smc_write,
	.watchdog_reset = exynos_platform_watchdog_reset,
	.powerdown = exynos_platform_powerdown,
	.init_mainbus = exynos_platform_init_mainbus,
};

struct armv7_platform *
exynos_platform_match(void)
{
	struct board_dev *devs;

	devs = exynos_board_devs();
	if (devs == NULL)
		return (NULL);

	exynos_platform.devs = devs;
	return (&exynos_platform);
}
@


1.10
log
@Remove now unused disable_l2_if_needed interface.
ok kettenis@@ patrick@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exynos_machdep.c,v 1.9 2016/06/08 15:27:05 jsg Exp $	*/
@


1.9
log
@Use fdt to find the console to initialise.  Try to use /chosen/stdout-path
if present otherwise fallback to /aliases/serial0.

Don't require a platform match to run the various console init functions
so the init functions will run for unknown board ids.

With and ok kettenis@@ on a earlier version.
@
text
@d1 1
a1 1
/*	$OpenBSD: exynos_machdep.c,v 1.8 2016/06/04 18:09:16 jsg Exp $	*/
a62 6
static void
exynos_platform_disable_l2_if_needed(void)
{

}

a73 1
	.disable_l2_if_needed = exynos_platform_disable_l2_if_needed,
@


1.8
log
@Remove model specific strings keyed off the board id.
We now pull the model string from fdt.
@
text
@d1 1
a1 1
/*	$OpenBSD: exynos_machdep.c,v 1.7 2016/05/20 01:42:56 jsg Exp $	*/
a24 4
#if NFDT > 0
#include <machine/fdt.h>
#endif

a35 2
extern int comcnspeed;
extern int comcnmode;
a43 36
static void
exynos_platform_init_cons(void)
{
	paddr_t paddr;
	size_t size;

	switch (board_id) {
	case BOARD_ID_EXYNOS5_CHROMEBOOK:
#if NFDT > 0
		void *node;
		node = fdt_find_node("/framebuffer");
		if (node != NULL) {
			uint32_t *mem;
			if (fdt_node_property(node, "reg", (char **)&mem) >= 2*sizeof(uint32_t)) {
				paddr = betoh32(*mem++);
				size = betoh32(*mem);
			}
		}
#else
		paddr = 0xbfc00000;
		size = 0x202000;
#endif
		exdisplay_cnattach(&armv7_bs_tag, paddr, size);
		break;
	case BOARD_ID_EXYNOS4_SMDKC210:
	case BOARD_ID_EXYNOS4_NURI:
		paddr = 0x13800000;
		exuartcnattach(&armv7_bs_tag, paddr, comcnspeed, comcnmode);
		break;
	default:
		printf("board type %x unknown", board_id);
		return;
		/* XXX - HELP */
	}
}

a77 1
	.init_cons = exynos_platform_init_cons,
@


1.7
log
@add init_mainbus() hooks for the other armv7 platforms
@
text
@d1 1
a1 1
/*	$OpenBSD: exynos_machdep.c,v 1.6 2016/04/24 00:57:23 patrick Exp $	*/
a37 1
extern char *exynos_board_name(void);
a104 6
const char *
exynos_platform_board_name(void)
{
	return (exynos_board_name());
}

a117 2
	.boot_name = "OpenBSD/exynos",
	.board_name = exynos_platform_board_name,
@


1.6
log
@New FDT-enabled busses will use a new "fdt" attribute.  Unfortunately
this attribute is currently already defined.  This define is only used
to disable the unused FDT functionality in the exynos and virtio code.
As the FDT code will be developed in a different manner than the way
those drivers are written today and the functionality has never been
enabled, simply remove the attribute and its users.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exynos_machdep.c,v 1.5 2015/06/07 16:54:16 jsg Exp $	*/
d31 1
d87 7
d133 1
@


1.5
log
@Initial exynos4 bits.  Among other things the gic isn't mapped correctly
on exynos4/5 yet as it isn't at the usual offset from periphbase.
ok bmercer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exynos_machdep.c,v 1.4 2015/05/27 00:06:14 jsg Exp $	*/
a16 2

#include "fdt.h"
@


1.4
log
@make the exynos code compile without fdt
ok bmercer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exynos_machdep.c,v 1.3 2015/05/19 03:30:54 jsg Exp $	*/
d35 1
d75 5
@


1.3
log
@Abstract the soc_machdep.c functions to allow a kernel to be built for
multiple socs.

From Patrick Wildt in bitrig with some additional changes.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d18 2
d26 2
d29 1
a55 1
	void *node;
d59 2
d69 4
@


1.2
log
@Make board attaching table driven and move it out into the soc
directories.  Move the device tables while here as was done in bitrig.
With these changes the only use of the board id defines is in the soc
directories.

Tested by matthieu and djm on imx and myself on omap and sunxi (qemu).
ok djm@@, ok jasper@@ on an earlier version
@
text
@d1 1
a1 1
/*	$OpenBSD	*/
d34 2
a35 1
extern int32_t agtimer_frequency;
d85 1
a85 1
platform_board_name(void)
d96 6
d104 2
a109 1
	.print_board_type = exynos_platform_print_board_type,
d112 13
@


1.1
log
@Import the exynos work into tree. This is from Bitrig. Discussed with and OK jsg, also OK from krw.
@
text
@d33 1
d83 2
a84 2
static void
exynos_platform_print_board_type(void)
d86 1
a86 8
	switch (board_id) {
	case BOARD_ID_EXYNOS5_CHROMEBOOK:
		agtimer_frequency = 24 * 1000 * 1000;
		printf("board type: Exynos 5 Chromebook\n");
		break;
	default:
		printf("board type %x unknown\n", board_id);
	}
@

