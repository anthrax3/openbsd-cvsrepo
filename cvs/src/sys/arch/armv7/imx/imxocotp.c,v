head	1.6;
access;
symbols
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.2.0.12
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.6
date	2017.09.22.09.34.23;	author kettenis;	state Exp;
branches;
next	1.5;
commitid	E15lBF7hdtID48hB;

1.5
date	2017.09.20.11.21.58;	author kettenis;	state Exp;
branches;
next	1.4;
commitid	jqZe30eSLNfirHy8;

1.4
date	2016.09.23.17.59.17;	author kettenis;	state Exp;
branches;
next	1.3;
commitid	G6vP1hjedt063xQO;

1.3
date	2016.08.14.19.08.44;	author kettenis;	state Exp;
branches;
next	1.2;
commitid	IeFDute4nV7Efuj0;

1.2
date	2013.11.06.19.03.07;	author syl;	state Exp;
branches;
next	1.1;

1.1
date	2013.09.06.20.45.54;	author patrick;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove unused code.
@
text
@/* $OpenBSD: imxocotp.c,v 1.5 2017/09/20 11:21:58 kettenis Exp $ */
/*
 * Copyright (c) 2012-2013 Patrick Wildt <patrick@@blueri.se>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/queue.h>
#include <sys/malloc.h>
#include <sys/device.h>
#include <sys/evcount.h>
#include <sys/socket.h>
#include <sys/timeout.h>

#include <machine/intr.h>
#include <machine/bus.h>
#include <machine/fdt.h>

#include <armv7/imx/imxocotpvar.h>

#include <dev/ofw/openfirm.h>
#include <dev/ofw/fdt.h>

/* registers */
#define OCOTP_ANA0	0x4d0
#define OCOTP_ANA1	0x4e0
#define OCOTP_ANA2	0x4f0
#define OCOTP_MAC0	0x620
#define OCOTP_MAC1	0x630

struct imxocotp_softc {
	struct device		sc_dev;
	bus_space_tag_t		sc_iot;
	bus_space_handle_t	sc_ioh;
};

struct imxocotp_softc *imxocotp_sc;

int	imxocotp_match(struct device *, void *, void *);
void	imxocotp_attach(struct device *, struct device *, void *);

struct cfattach imxocotp_ca = {
	sizeof (struct imxocotp_softc), imxocotp_match, imxocotp_attach
};

struct cfdriver imxocotp_cd = {
	NULL, "imxocotp", DV_DULL
};

int
imxocotp_match(struct device *parent, void *match, void *aux)
{
	struct fdt_attach_args *faa = aux;

	if (OF_is_compatible(faa->fa_node, "fsl,imx6q-ocotp"))
		return 10;	/* Must beat syscon(4). */

	return 0;
}

void
imxocotp_attach(struct device *parent, struct device *self, void *aux)
{
	struct imxocotp_softc *sc = (struct imxocotp_softc *)self;
	struct fdt_attach_args *faa = aux;

	KASSERT(faa->fa_nreg >= 1);

	sc->sc_iot = faa->fa_iot;
	if (bus_space_map(sc->sc_iot, faa->fa_reg[0].addr,
	    faa->fa_reg[0].size, 0, &sc->sc_ioh))
		panic("%s: bus_space_map failed!", __func__);

	imxocotp_sc = sc;
	printf("\n");
}

uint32_t
imxocotp_get_temperature_calibration(void)
{
	return bus_space_read_4(imxocotp_sc->sc_iot, imxocotp_sc->sc_ioh, OCOTP_ANA1);
}
@


1.5
log
@Raise match priority such that imxocotp(4) wins over syscon(4).

ok patrick@@
@
text
@d1 1
a1 1
/* $OpenBSD: imxocotp.c,v 1.4 2016/09/23 17:59:17 kettenis Exp $ */
a87 15
}

void
imxocotp_get_ethernet_address(u_int8_t* mac)
{
	uint32_t value;

	value = bus_space_read_4(imxocotp_sc->sc_iot, imxocotp_sc->sc_ioh, OCOTP_MAC0);
	mac[5] = value & 0xff;
	mac[4] = (value >> 8) & 0xff;
	mac[3] = (value >> 16) & 0xff;
	mac[2] = (value >> 24) & 0xff;
	value = bus_space_read_4(imxocotp_sc->sc_iot, imxocotp_sc->sc_ioh, OCOTP_MAC1);
	mac[1] = value & 0xff;
	mac[0] = (value >> 8) & 0xff;
@


1.4
log
@Attach imxocotp(4) using the fdt.  Since this means that imxtemp(4) attaches
before imxocotp(4), delay reading the temperature sensor calibration
information until after imxocotp(4) attaches.
@
text
@d1 1
a1 1
/* $OpenBSD: imxocotp.c,v 1.3 2016/08/14 19:08:44 kettenis Exp $ */
d67 4
a70 1
	return OF_is_compatible(faa->fa_node, "fsl,imx6q-ocotp");
@


1.3
log
@Add imxtemp(4), a temperature sensor for the i.MX6 SoC.  Based on code written
by patrick@@.

ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: imxocotp.c,v 1.2 2013/11/06 19:03:07 syl Exp $ */
d26 1
d29 1
a30 1
#include <armv7/armv7/armv7var.h>
d33 3
d51 2
a52 1
void imxocotp_attach(struct device *parent, struct device *self, void *args);
d55 1
a55 1
	sizeof (struct imxocotp_softc), NULL, imxocotp_attach
d62 8
d71 1
a71 1
imxocotp_attach(struct device *parent, struct device *self, void *args)
d73 4
a76 2
	struct armv7_attach_args *aa = args;
	struct imxocotp_softc *sc = (struct imxocotp_softc *) self;
d78 4
a81 4
	sc->sc_iot = aa->aa_iot;
	if (bus_space_map(sc->sc_iot, aa->aa_dev->mem[0].addr,
	    aa->aa_dev->mem[0].size, 0, &sc->sc_ioh))
		panic("imxocotp_attach: bus_space_map failed!");
d83 1
a84 1
	imxocotp_sc = sc;
@


1.2
log
@After factorizing armv7_machdep code here is an effort to factorize all
the code present in omap/omap.c imx/imx.c and sunxi/sunxi.c

All this code looks quite the same, so we move it in a generic armv7/armv7.c

This is a step closer to only one kernel for all armv7 boards.

ok patrick@@, rapha@@
@
text
@d1 1
a1 1
/* $OpenBSD: imxocotp.c,v 1.1 2013/09/06 20:45:54 patrick Exp $ */
d33 3
d85 6
@


1.1
log
@Support for FreeScale's i.MX6 SoC.
@
text
@d1 1
a1 1
/* $OpenBSD: omdog.c,v 1.5 2011/11/15 23:01:11 drahn Exp $ */
d29 1
a29 1
#include <armv7/imx/imxvar.h>
d57 1
a57 1
	struct imx_attach_args *ia = args;
d60 3
a62 3
	sc->sc_iot = ia->ia_iot;
	if (bus_space_map(sc->sc_iot, ia->ia_dev->mem[0].addr,
	    ia->ia_dev->mem[0].size, 0, &sc->sc_ioh))
@

