head	1.9;
access;
symbols
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2016.10.08.06.45.02;	author jsg;	state Exp;
branches;
next	1.8;
commitid	CJbbKA8PC6YsqXGt;

1.8
date	2016.08.06.00.54.02;	author jsg;	state Exp;
branches;
next	1.7;
commitid	8ZCwiWXIMaYvtRPC;

1.7
date	2016.08.06.00.40.54;	author jsg;	state Exp;
branches;
next	1.6;
commitid	f9CL15ugAdqaysNt;

1.6
date	2016.08.06.00.30.47;	author jsg;	state Exp;
branches;
next	1.5;
commitid	GFtSVyG3B40OA9Mt;

1.5
date	2016.06.04.18.09.16;	author jsg;	state Exp;
branches;
next	1.4;
commitid	tYyT96DOGdhLjy9v;

1.4
date	2016.05.02.15.27.24;	author patrick;	state Exp;
branches;
next	1.3;
commitid	gOMXBf6ijXFQHRgk;

1.3
date	2016.02.02.03.31.22;	author jsg;	state Exp;
branches;
next	1.2;
commitid	RbRzD1v0uZj2WQEC;

1.2
date	2015.06.14.05.01.31;	author jsg;	state Exp;
branches;
next	1.1;
commitid	gxU2Yk5XGgvQze1H;

1.1
date	2015.06.08.06.33.16;	author jsg;	state Exp;
branches;
next	;
commitid	TKnNVNES86I6ApFq;


desc
@@


1.9
log
@Dynamically attach sysreg(4) using the FDT.
@
text
@/*	$OpenBSD: vexpress.c,v 1.8 2016/08/06 00:54:02 jsg Exp $	*/

/*
 * Copyright (c) 2015 Jonathan Gray <jsg@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/systm.h>

#include <machine/bus.h>

#include <arm/cpufunc.h>
#include <arm/mainbus/mainbus.h>
#include <armv7/armv7/armv7var.h>

int	vexpress_match(struct device *, void *, void *);
void	vexpress_a9_init();
void	vexpress_a15_init();

struct cfattach vexpress_ca = {
	sizeof(struct armv7_softc), vexpress_match, armv7_attach, NULL,
	config_activate_children
};

struct cfdriver vexpress_cd = {
	NULL, "vexpress", DV_DULL
};

struct board_dev vexpress_devs[] = {
	{ NULL,		0 }
};

struct armv7_board vexpress_boards[] = {
	{
		BOARD_ID_VEXPRESS,
		vexpress_devs,
		NULL,
	},
	{ 0, NULL, NULL },
};

struct board_dev *
vexpress_board_devs(void)
{
	int i;

	for (i = 0; vexpress_boards[i].board_id != 0; i++) {
		if (vexpress_boards[i].board_id == board_id)
			return (vexpress_boards[i].devs);
	}
	return (NULL);
}

extern vaddr_t physical_start;

int
vexpress_legacy_map(void)
{
	return ((cpufunc_id() & CPU_ID_CORTEX_A9_MASK) == CPU_ID_CORTEX_A9);
}

void
vexpress_board_init(void)
{
	if (board_id != BOARD_ID_VEXPRESS)
		return;

	if (vexpress_legacy_map())
		vexpress_a9_init();
	else
		vexpress_a15_init();
}

int
vexpress_match(struct device *parent, void *cfdata, void *aux)
{
	union mainbus_attach_args *ma = (union mainbus_attach_args *)aux;
	struct cfdata *cf = (struct cfdata *)cfdata;

	if (ma->ma_name == NULL)
		return (0);

	if (strcmp(cf->cf_driver->cd_name, ma->ma_name) != 0)
		return (0);

	return (vexpress_board_devs() != NULL);
}
@


1.8
log
@Dynamically attach pluart(4) using the FDT.
ok kettenis@@ patrick@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vexpress.c,v 1.7 2016/08/06 00:40:54 jsg Exp $	*/
a41 1
	{ "sysreg",	0 },
@


1.7
log
@Dynamically attach plrtc(4) using the FDT.
ok kettenis@@ patrick@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vexpress.c,v 1.6 2016/08/06 00:30:47 jsg Exp $	*/
a42 1
	{ "pluart",	0 },
@


1.6
log
@Dynamically attach virtio(4) using the FDT.
ok kettenis@@ patrick@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vexpress.c,v 1.5 2016/06/04 18:09:16 jsg Exp $	*/
a43 1
	{ "plrtc",	0 },
@


1.5
log
@Remove model specific strings keyed off the board id.
We now pull the model string from fdt.
@
text
@d1 1
a1 1
/*	$OpenBSD: vexpress.c,v 1.4 2016/05/02 15:27:24 patrick Exp $	*/
a44 4
	{ "virtio",	0 },
	{ "virtio",	1 },
	{ "virtio",	2 },
	{ "virtio",	3 },
@


1.4
log
@Add check to armv7 platform bus match code, so that those busses only
attach if we are running in legacy mode.

ok jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vexpress.c,v 1.3 2016/02/02 03:31:22 jsg Exp $	*/
a54 1
		"ARM Versatile Express",
d58 1
a58 1
	{ 0, NULL, NULL, NULL },
d66 1
a66 1
	for (i = 0; vexpress_boards[i].name != NULL; i++) {
a90 12
}

const char *
vexpress_board_name(void)
{
	int i;

	for (i = 0; vexpress_boards[i].name != NULL; i++) {
		if (vexpress_boards[i].board_id == board_id)
			return (vexpress_boards[i].name);
	}
	return (NULL);
@


1.3
log
@remove uneeded break statements
@
text
@d1 1
a1 1
/*	$OpenBSD: vexpress.c,v 1.2 2015/06/14 05:01:31 jsg Exp $	*/
d25 1
d109 9
@


1.2
log
@add a driver for the ARM PrimeCell PL031 RTC
@
text
@d1 1
a1 1
/*	$OpenBSD: vexpress.c,v 1.1 2015/06/08 06:33:16 jsg Exp $	*/
d99 1
a99 1
		if (vexpress_boards[i].board_id == board_id) {
a100 2
			break;
		}
@


1.1
log
@Add initial support for the ARM Versatile Express boards as emulated by
qemu with virtio memory ranges.

Unfortunately the vexpress-a9 and vexpress-a15 boards/targets have
different load addresses and memory maps.

Code for the PL011 UART and mmio virtio attachment from Patrick Wildt
in bitrig.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 1
@

