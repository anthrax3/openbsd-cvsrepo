head	1.11;
access;
symbols
	OPENBSD_4_9:1.10.0.26
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.24
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.20
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.22
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.18
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.16
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.14
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.12
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.10
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.8
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.2.0.2
	UBC_BASE:1.2
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.11
date	2011.07.07.19.16.42;	author deraadt;	state dead;
branches;
next	1.10;

1.10
date	2004.11.18.16.10.43;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2004.05.14.20.38.32;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2004.01.29.21.33.10;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2004.01.29.21.28.54;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2004.01.26.22.57.20;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2004.01.14.20.50.49;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.03.15.58;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.41;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.06.22.45.54;	author miod;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.06.26.21.57.41;	author smurph;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.11.13.21.04.15;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.03.28.10.36.03;	author niklas;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2004.02.19.10.49.09;	author niklas;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2004.06.05.23.10.54;	author niklas;	state Exp;
branches;
next	;

1.2.2.1
date	2002.06.11.03.37.22;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@remove mvmeppc; it is really rough shape.  ok drahn miod
@
text
@/*	$OpenBSD: mainbus.c,v 1.10 2004/11/18 16:10:43 miod Exp $	*/

/*
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/reboot.h>

#include <machine/autoconf.h>

struct mainbus_softc {
	struct	device sc_dv;
	struct	bushook sc_bus;
};

void	mbattach(struct device *, struct device *, void *);
int	mbmatch(struct device *, void *, void *);
int	mbprint(void *, const char *);

struct cfattach mainbus_ca = {
	sizeof(struct mainbus_softc), mbmatch, mbattach
};
struct cfdriver mainbus_cd = {
	NULL, "mainbus", DV_DULL
};

int
mbmatch(struct device *parent, void *cfdata, void *aux)
{
	return (1);
}

void
mbattach(struct device *parent, struct device *self, void *aux)
{
	struct mainbus_softc *sc = (struct mainbus_softc *)self;
	struct confargs nca;
	u_int8_t systype;
	int cpu;
	extern vaddr_t isaspace_va;

	/* Pretty print the system type */
	printf(": ");
	switch ((systype = *(u_int8_t *)(isaspace_va + MVME_STATUS_REG))) {
	default:
		printf("unknown system type %x", systype);
		break;
	case MVMETYPE_RESERVED:
		/* if you ever have this one, please contact me -- miod */
		printf("Dahu MVME");
		break;
	case MVMETYPE_2600_712:
		cpu = ppc_mfpvr() >> 16;
		if (cpu == PPC_CPU_MPC750)
			printf("MVME2700 (712-compatible)");
		else
			printf("MVME2600 (712-compatible)");
		break;
	case MVMETYPE_2600_761:
		cpu = ppc_mfpvr() >> 16;
		if (cpu == PPC_CPU_MPC750)
			printf("MVME2700 (761-compatible)");
		else
			printf("MVME2600 (761-compatible)");
		break;
	case MVMETYPE_3600_712:
		printf("MVME3600 or MVME4600 (712-compatible)");
		break;
	case MVMETYPE_3600_761:
		printf("MVME3600 or MVME4600 (761-compatible)");
		break;
	case MVMETYPE_1600:
		printf("MVME1600");
		break;
	}
	printf("\n");

	sc->sc_bus.bh_dv = (struct device *)sc;
	sc->sc_bus.bh_type = BUS_MAIN;
	sc->sc_bus.bh_intr_establish = NULL;
	sc->sc_bus.bh_intr_disestablish = NULL;
	sc->sc_bus.bh_matchname = NULL;

	/*
	 * Try to find and attach all of the CPUs in the machine.
	 * Right now only one CPU is supported, so this is simple.
	 * Need to change for real MVME4600 support.
	 */

	nca.ca_name = "cpu";
	nca.ca_bus = &sc->sc_bus;
	config_found(self, &nca, mbprint);

	/*
	 * Attach the BUG terminal services if necessary.
	 */
	nca.ca_name = "bugtty";
	nca.ca_bus = &sc->sc_bus;
	config_found(self, &nca, mbprint);

	/*
	 * Find and attach the PCI Northbridge. It will find and attach
	 * everything.
	 */
	nca.ca_name = "raven";
	nca.ca_bus = &sc->sc_bus;
	config_found(self, &nca, mbprint);
}

int
mbprint(void *aux, const char *pnp)
{
	if (pnp)
		return (QUIET);
	return (UNCONF);
}
@


1.10
log
@Tell MVME2600 and MVME2700 apart.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.9 2004/05/14 20:38:32 miod Exp $	*/
@


1.9
log
@Attach a working bugtty device - userland needs at least a console tty.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.8 2004/01/29 21:33:10 miod Exp $	*/
d65 1
d79 5
a83 1
		printf("MVME2600 or MVME2700 (712-compatible)");
d86 5
a90 1
		printf("MVME2600 or MVME2700 (761-compatible)");
@


1.8
log
@Pretty printf.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.7 2004/01/29 21:28:54 miod Exp $	*/
d112 7
d122 1
a122 1
	nca.ca_name = "mpcpcibr";
@


1.7
log
@Print system type early in autoconf, as determined from the board status
register.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.6 2004/01/26 22:57:20 miod Exp $	*/
d68 1
@


1.6
log
@Asking for a too short softc size in your cfattach structure is known to
cause premature death in laboratory animals. Don't do that.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.5 2004/01/14 20:50:49 miod Exp $	*/
d42 3
a44 4
/* Definition of the mainbus driver. */
static int	mbmatch(struct device *, void *, void *);
static void	mbattach(struct device *, struct device *, void *);
static int	mbprint(void *, const char *);
d53 2
a54 12
void	mb_intr_establish(struct confargs *, int (*)(void *), void *);
void	mb_intr_disestablish(struct confargs *);
caddr_t	mb_cvtaddr(struct confargs *);
int	mb_matchname(struct confargs *, char *);

static int attached = 0;

static int
mbmatch(parent, cfdata, aux)
	struct device *parent;
	void *cfdata;
	void *aux;
d56 1
a56 8
	/*
	 * That one mainbus is always here.
	 */
   if (!attached) {
      return(1);
   } else {
      return(0);
   }
d59 2
a60 5
static void
mbattach(parent, self, aux)
	struct device *parent;
	struct device *self;
	void *aux;
d64 2
d67 25
a93 2
   attached = 1;

d96 3
a98 3
	sc->sc_bus.bh_intr_establish = mb_intr_establish;
	sc->sc_bus.bh_intr_disestablish = mb_intr_disestablish;
	sc->sc_bus.bh_matchname = mb_matchname;
d102 2
a103 1
	 * ( Right now only one CPU so code is simple )
d110 4
a113 6
	/* The following machines have an ISA bus */
	/* Do ISA first so the interrupt controller is set up! */
	nca.ca_name = "isabr";
	nca.ca_bus = &sc->sc_bus;
	config_found(self, &nca, mbprint);

d119 2
a120 4
static int
mbprint(aux, pnp)
	void *aux;
	const char *pnp;
a124 32
}

void
mb_intr_establish(ca, handler, val)
	struct confargs *ca;
	int (*handler)(void *);
	void *val;
{
	panic("can never mb_intr_establish");
}

void
mb_intr_disestablish(ca)
	struct confargs *ca;
{
	panic("can never mb_intr_disestablish");
}

caddr_t
mb_cvtaddr(ca)
	struct confargs *ca;
{

	return (NULL);
}

int
mb_matchname(ca, name)
	struct confargs *ca;
	char *name;
{
	return (strcmp(name, ca->ca_name) == 0);
@


1.5
log
@Do not fill more than the first three fields of cfdriver structures unless
necessary. No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.4 2002/03/14 03:15:58 millert Exp $	*/
d48 1
a48 1
	sizeof(struct device), mbmatch, mbattach
@


1.4
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.3 2002/03/14 01:26:41 millert Exp $	*/
d51 1
a51 1
	NULL, "mainbus", DV_DULL, NULL, 0
@


1.3
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.2 2001/11/06 22:45:54 miod Exp $	*/
d54 1
a54 1
void	mb_intr_establish __P((struct confargs *, int (*)(void *), void *));
@


1.2
log
@-Wall -Werror cleanup.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.1 2001/06/26 21:57:41 smurph Exp $	*/
d43 3
a45 3
static int	mbmatch __P((struct device *, void *, void *));
static void	mbattach __P((struct device *, struct device *, void *));
static int	mbprint __P((void *, const char *));
d55 3
a57 3
void	mb_intr_disestablish __P((struct confargs *));
caddr_t	mb_cvtaddr __P((struct confargs *));
int	mb_matchname __P((struct confargs *, char *));
d129 1
a129 1
	int (*handler) __P((void *));
@


1.2.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.2 2001/11/06 22:45:54 miod Exp $	*/
d43 3
a45 3
static int	mbmatch(struct device *, void *, void *);
static void	mbattach(struct device *, struct device *, void *);
static int	mbprint(void *, const char *);
d54 4
a57 4
void	mb_intr_establish(struct confargs *, int (*)(void *), void *);
void	mb_intr_disestablish(struct confargs *);
caddr_t	mb_cvtaddr(struct confargs *);
int	mb_matchname(struct confargs *, char *);
d129 1
a129 1
	int (*handler)(void *);
@


1.1
log
@Initial import of mvmeppc.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.4 2000/07/28 13:03:24 rahnds Exp $	*/
a66 2
	struct cfdata *cf = cfdata;

a84 1
	extern int system_type;
@


1.1.2.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d67 2
d87 1
@


1.1.2.2
log
@Merge in -current from about a week ago
@
text
@d43 3
a45 3
static int	mbmatch(struct device *, void *, void *);
static void	mbattach(struct device *, struct device *, void *);
static int	mbprint(void *, const char *);
d54 4
a57 4
void	mb_intr_establish(struct confargs *, int (*)(void *), void *);
void	mb_intr_disestablish(struct confargs *);
caddr_t	mb_cvtaddr(struct confargs *);
int	mb_matchname(struct confargs *, char *);
d129 1
a129 1
	int (*handler)(void *);
@


1.1.2.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d42 4
a45 3
void	mbattach(struct device *, struct device *, void *);
int	mbmatch(struct device *, void *, void *);
int	mbprint(void *, const char *);
d48 1
a48 1
	sizeof(struct mainbus_softc), mbmatch, mbattach
d51 1
a51 1
	NULL, "mainbus", DV_DULL
d54 12
a65 2
int
mbmatch(struct device *parent, void *cfdata, void *aux)
d67 8
a74 1
	return (1);
d77 5
a81 2
void
mbattach(struct device *parent, struct device *self, void *aux)
a84 2
	u_int8_t systype;
	extern vaddr_t isaspace_va;
a85 26
	/* Pretty print the system type */
	printf(": ");
	switch ((systype = *(u_int8_t *)(isaspace_va + MVME_STATUS_REG))) {
	default:
		printf("unknown system type %x", systype);
		break;
	case MVMETYPE_RESERVED:
		/* if you ever have this one, please contact me -- miod */
		printf("Dahu MVME");
		break;
	case MVMETYPE_2600_712:
		printf("MVME2600 or MVME2700 (712-compatible)");
		break;
	case MVMETYPE_2600_761:
		printf("MVME2600 or MVME2700 (761-compatible)");
		break;
	case MVMETYPE_3600_712:
		printf("MVME3600 or MVME4600 (712-compatible)");
		break;
	case MVMETYPE_3600_761:
		printf("MVME3600 or MVME4600 (761-compatible)");
		break;
	case MVMETYPE_1600:
		printf("MVME1600");
		break;
	}
d88 2
d92 3
a94 3
	sc->sc_bus.bh_intr_establish = NULL;
	sc->sc_bus.bh_intr_disestablish = NULL;
	sc->sc_bus.bh_matchname = NULL;
d98 1
a98 2
	 * Right now only one CPU is supported, so this is simple.
	 * Need to change for real MVME4600 support.
d105 6
a110 4
	/*
	 * Find and attach the PCI Northbridge. It will find and attach
	 * everything.
	 */
d116 4
a119 2
int
mbprint(void *aux, const char *pnp)
d124 32
@


1.1.2.4
log
@Merge with the trunk
@
text
@a111 7
	 * Attach the BUG terminal services if necessary.
	 */
	nca.ca_name = "bugtty";
	nca.ca_bus = &sc->sc_bus;
	config_found(self, &nca, mbprint);

	/*
d115 1
a115 1
	nca.ca_name = "raven";
@


