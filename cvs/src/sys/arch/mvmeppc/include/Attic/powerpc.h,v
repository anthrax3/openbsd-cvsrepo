head	1.6;
access;
symbols
	OPENBSD_4_9:1.5.0.22
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.20
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.16
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.18
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.14
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.12
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.10
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.8
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.6
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.6
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.6
date	2011.07.07.19.16.43;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2005.12.17.07.31.26;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2004.01.28.23.50.18;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.22.20.45.18;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.41;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.26.21.57.47;	author smurph;	state Exp;
branches
	1.1.2.1
	1.1.6.1;
next	;

1.1.2.1
date	2002.03.28.10.36.03;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.02.19.10.49.09;	author niklas;	state Exp;
branches;
next	;

1.1.6.1
date	2002.06.11.03.37.22;	author art;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove mvmeppc; it is really rough shape.  ok drahn miod
@
text
@/*	$OpenBSD: powerpc.h,v 1.5 2005/12/17 07:31:26 miod Exp $	*/
/*	$NetBSD: powerpc.h,v 1.1 1996/09/30 16:34:30 ws Exp $	*/

/*
 * Copyright (C) 1996 Wolfgang Solfrank.
 * Copyright (C) 1996 TooLs GmbH.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef	_MACHINE_POWERPC_H_
#define	_MACHINE_POWERPC_H_

struct mem_region {
	vaddr_t start;
	vsize_t size;
};

void mem_regions(struct mem_region **, struct mem_region **);

/*
 * These two functions get used solely in boot() in machdep.c.
 *
 * Not sure whether boot itself should be implementation dependent instead.	XXX
 */
typedef void (exit_f)(void) /*__attribute__((__noreturn__))*/ ;
typedef void (boot_f)(char *bootspec) /* __attribute__((__noreturn__))*/ ;
typedef void (vmon_f)(void);

typedef void (mem_regions_f)(struct mem_region **memp,
	struct mem_region **availp);

/* firmware interface.
 * regardless of type of firmware used several items
 * are need from firmware to boot up.
 * these include:
 *	memory information
 *	vmsetup for firmware calls.
 *	default character print mechanism ???
 *	firmware exit (return)
 *	firmware boot (reset)
 *	vmon - tell firmware the bsd vm is active.
 */

struct firmware {
	mem_regions_f	*mem_regions;
	exit_f		*exit;
	boot_f		*boot;
	vmon_f		*vmon;

#ifdef FW_HAS_PUTC
	boot_f		*putc;
#endif
};
extern  struct firmware *fw;

/* Clock callbacks */

typedef unsigned long (tps_t)(void);
typedef int (clock_read_t)(int *sec, int *min, int *hour, int *day,
    int *mon, int *yr);
typedef int (clock_write_t)(int sec, int min, int hour, int day,
    int mon, int yr);
typedef int (time_read_t)(u_int32_t *sec);
typedef int (time_write_t)(u_int32_t sec);

extern tps_t *tps;
extern clock_read_t *clock_read;
extern clock_write_t *clock_write;
extern time_read_t  *time_read;
extern time_write_t *time_write;

#endif	/* _MACHINE_POWERPC_H_ */
@


1.5
log
@Get rid of deprecated vm_{offset,size}_t types for good, use {p,v}{addr,size}_t
instead; looked at millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.4 2004/01/28 23:50:18 miod Exp $	*/
@


1.4
log
@More clock handling cleanup:
- move clock callbacks outside the firmware structure
- map the clock virtual. A bit tricky because it needs to be mapped before
  autoconf...
- compensate for the removal of 1:1 segment 8 mapping
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.3 2004/01/22 20:45:18 miod Exp $	*/
d38 2
a39 2
	vm_offset_t start;
	vm_size_t size;
@


1.3
log
@Make locore and the early initialization code closer to other ppc ports;
also remove ipkbd and other dead code.
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.2 2002/03/14 01:26:41 millert Exp $	*/
a51 4
typedef unsigned char (nvram_rd_f)(unsigned long offset);
typedef void (nvram_wr_f)(unsigned long offset, unsigned char val);
typedef unsigned long (tps_f)(void);

a55 7
typedef int (clock_read_f)(int *sec, int *min, int *hour, int *day,
									int *mon, int *yr);
typedef int (clock_write_f)(int sec, int min, int hour, int day,
									 int mon, int yr);
typedef int (time_read_f)(u_long *sec);
typedef int (time_write_f)(u_long sec);

d73 1
a73 7
	nvram_rd_f	*nvram_rd;
	nvram_wr_f	*nvram_wr;
	tps_f			*tps;
   clock_read_f *clock_read;
   clock_write_f *clock_write;
   time_read_f	*time_read;
	time_write_f *time_write;
d80 15
a94 33
#define ppc_exit() if (fw->exit != NULL) (fw->exit)()
#define ppc_boot(x) if (fw->boot != NULL) (fw->boot)(x)
#define ppc_nvram_rd(a) ({unsigned char val;		\
		if (fw->nvram_rd !=NULL)		\
			val = (fw->nvram_rd)(a);	\
		else					\
			val = 0;			\
		val;})

#define ppc_nvram_wr(a, v) if (fw->nvram_wr !=NULL) (fw->nvram_wr)(a, v)

#define ppc_tps() ({unsigned long val;			\
		if (fw->tps != NULL)			\
			val = (fw->tps)();		\
		else					\
			val = 0;			\
		val;}) 

#define SPR_XER		"1"
#define SPR_LR		"8"
#define SPR_CTR		"9"
#define SPR_DSISR	"18"
#define SPR_DAR		"19"
#define SPR_DEC		"22"
#define SPR_SDR1	"25"
#define SPR_SRR0	"26"
#define SPR_SRR1	"27"

#define ppc_get_spr(reg) ({u_int32_t val; \
		__asm__ volatile("mfspr %0," reg : "=r"(val)); \
		val;})
#define ppc_set_spr(reg, val) ({ \
		__asm__ volatile("mtspr " reg ",%0" :: "r"(val));})
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.1 2001/06/26 21:57:47 smurph Exp $	*/
a98 1
#define ppc_vmon() if (fw->vmon != NULL) (fw->vmon)()
@


1.1
log
@Initial import of mvmeppc.
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.4 1999/07/05 21:01:19 rahnds Exp $	*/
d42 1
a42 1
void mem_regions __P((struct mem_region **, struct mem_region **));
d49 17
a65 17
typedef void (exit_f) __P((void)) /*__attribute__((__noreturn__))*/ ;
typedef void (boot_f) __P((char *bootspec)) /* __attribute__((__noreturn__))*/ ;
typedef void (vmon_f) __P((void));
typedef unsigned char (nvram_rd_f) __P((unsigned long offset));
typedef void (nvram_wr_f) __P((unsigned long offset, unsigned char val));
typedef unsigned long (tps_f) __P((void));


typedef void (mem_regions_f) __P((struct mem_region **memp,
	struct mem_region **availp));

typedef int (clock_read_f) __P((int *sec, int *min, int *hour, int *day,
									int *mon, int *yr));
typedef int (clock_write_f) __P((int sec, int min, int hour, int day,
									 int mon, int yr));
typedef int (time_read_f) __P((u_long *sec));
typedef int (time_write_f) __P((u_long sec));
@


1.1.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: powerpc.h,v 1.1 2001/06/26 21:57:47 smurph Exp $	*/
d42 1
a42 1
void mem_regions(struct mem_region **, struct mem_region **);
d49 17
a65 17
typedef void (exit_f)(void) /*__attribute__((__noreturn__))*/ ;
typedef void (boot_f)(char *bootspec) /* __attribute__((__noreturn__))*/ ;
typedef void (vmon_f)(void);
typedef unsigned char (nvram_rd_f)(unsigned long offset);
typedef void (nvram_wr_f)(unsigned long offset, unsigned char val);
typedef unsigned long (tps_f)(void);


typedef void (mem_regions_f)(struct mem_region **memp,
	struct mem_region **availp);

typedef int (clock_read_f)(int *sec, int *min, int *hour, int *day,
									int *mon, int *yr);
typedef int (clock_write_f)(int sec, int min, int hour, int day,
									 int mon, int yr);
typedef int (time_read_f)(u_long *sec);
typedef int (time_write_f)(u_long sec);
@


1.1.2.1
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 1
a42 1
void mem_regions(struct mem_region **, struct mem_region **);
d49 17
a65 17
typedef void (exit_f)(void) /*__attribute__((__noreturn__))*/ ;
typedef void (boot_f)(char *bootspec) /* __attribute__((__noreturn__))*/ ;
typedef void (vmon_f)(void);
typedef unsigned char (nvram_rd_f)(unsigned long offset);
typedef void (nvram_wr_f)(unsigned long offset, unsigned char val);
typedef unsigned long (tps_f)(void);


typedef void (mem_regions_f)(struct mem_region **memp,
	struct mem_region **availp);

typedef int (clock_read_f)(int *sec, int *min, int *hour, int *day,
									int *mon, int *yr);
typedef int (clock_write_f)(int sec, int min, int hour, int day,
									 int mon, int yr);
typedef int (time_read_f)(u_long *sec);
typedef int (time_write_f)(u_long sec);
@


1.1.2.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d52 4
d60 7
d84 7
a90 1

d97 34
a130 15
/* Clock callbacks */

typedef unsigned long (tps_t)(void);
typedef int (clock_read_t)(int *sec, int *min, int *hour, int *day,
    int *mon, int *yr);
typedef int (clock_write_t)(int sec, int min, int hour, int day,
    int mon, int yr);
typedef int (time_read_t)(u_int32_t *sec);
typedef int (time_write_t)(u_int32_t sec);

extern tps_t *tps;
extern clock_read_t *clock_read;
extern clock_write_t *clock_write;
extern time_read_t  *time_read;
extern time_write_t *time_write;
@


