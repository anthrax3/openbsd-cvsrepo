head	1.9;
access;
symbols
	OPENBSD_4_9:1.8.0.30
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.28
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.24
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.26
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.22
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.20
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.18
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.16
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.14
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.12
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.10
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.8
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.6
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.5
	UBC:1.3.0.2
	UBC_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.9
date	2011.07.07.19.16.42;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	2004.01.29.21.28.56;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2004.01.28.23.50.18;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2004.01.25.21.41.28;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.08.15.45.31;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.07.01.00.55;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.06.22.45.57;	author miod;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2001.09.02.19.40.24;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.26.21.57.44;	author smurph;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.10.31.03.01.21;	author nate;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.11.13.21.04.15;	author niklas;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2003.03.27.23.52.16;	author niklas;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2004.02.19.10.49.09;	author niklas;	state Exp;
branches;
next	;

1.3.2.1
date	2002.06.11.03.37.22;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@remove mvmeppc; it is really rough shape.  ok drahn miod
@
text
@/*	$OpenBSD: cpu.h,v 1.8 2004/01/29 21:28:56 miod Exp $	*/
/*	$NetBSD: cpu.h,v 1.1 1996/09/30 16:34:21 ws Exp $	*/

/*
 * Copyright (C) 1995, 1996 Wolfgang Solfrank.
 * Copyright (C) 1995, 1996 TooLs GmbH.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef	_MACHINE_CPU_H_
#define	_MACHINE_CPU_H_

#include <powerpc/cpu.h>

void install_extint(void (*)(void));
void nvram_map(void);

/*
 * CPU Configuration registers (in ISA space)
 */

#define	MVME_CPUCONF_REG	0x0800
#define	MVME_FEATURE_REG	0x0802
#define	MVME_STATUS_REG		0x0803
#define	MVME_SEVENSEG_REG	0x08c0

/* feature bits */
#define	MVME_FEATURE_SCC	0x40
#define	MVME_FEATURE_PMC2	0x20
#define	MVME_FEATURE_PMC1	0x10
#define	MVME_FEATURE_VME	0x08
#define	MVME_FEATURE_GFX	0x04
#define	MVME_FEATURE_LAN	0x02
#define	MVME_FEATURE_SCSI	0x01

/* status values */
#define	MVMETYPE_RESERVED	0xfa
#define	MVMETYPE_2600_712	0xfb
#define	MVMETYPE_2600_761	0xfc
#define	MVMETYPE_3600_712	0xfd
#define	MVMETYPE_3600_761	0xfe
#define	MVMETYPE_1600		0xff

#endif	/* _MACHINE_CPU_H_ */
@


1.8
log
@Print system type early in autoconf, as determined from the board status
register.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.7 2004/01/28 23:50:18 miod Exp $	*/
@


1.7
log
@More clock handling cleanup:
- move clock callbacks outside the firmware structure
- map the clock virtual. A bit tricky because it needs to be mapped before
  autoconf...
- compensate for the removal of 1:1 segment 8 mapping
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.6 2004/01/25 21:41:28 miod Exp $	*/
d41 26
@


1.6
log
@Get rid of ppc_[gs]et_msr(), use ppc_m[ft]msr() instead.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.5 2002/06/08 15:45:31 miod Exp $	*/
d40 1
@


1.5
log
@Factorize common parts (cache-related stuff).
ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.4 2002/06/07 01:00:55 miod Exp $	*/
a38 2
u_int32_t ppc_set_msr(u_int32_t);
u_int32_t ppc_get_msr(void);
@


1.4
log
@Fix the cache invalidation routines, per macppc cpu.h rev 1.3.
Initially from pefo@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.3 2001/11/06 22:45:57 miod Exp $	*/
d39 3
a41 40
#define	CACHELINESIZE	32			/* For now		XXX */

static __inline void
syncicache(void *from, int len)
{
	int l;
	char *p = from;

	len = len + (((u_int32_t) from) & (CACHELINESIZE - 1));
	l = len;
	
	do {
		__asm__ __volatile__ ("dcbst 0,%0" :: "r"(p));
		p += CACHELINESIZE;
	} while ((l -= CACHELINESIZE) > 0);
	__asm__ __volatile__ ("sync");
	p = from;
	l = len;
	do {
		__asm__ __volatile__ ("icbi 0,%0" :: "r"(p));
		p += CACHELINESIZE;
	} while ((l -= CACHELINESIZE) > 0);
	__asm__ __volatile__ ("isync");
}

static __inline void
invdcache(void *from, int len)
{
	int l;
	char *p = from;
	
	len = len + (((u_int32_t) from) & (CACHELINESIZE - 1));
	l = len;
	
	do {
		__asm__ __volatile__ ("dcbi 0,%0" :: "r"(p));
		p += CACHELINESIZE;
	} while ((l -= CACHELINESIZE) > 0);
	__asm__ __volatile__ ("sync");
}
@


1.3
log
@-Wall -Werror cleanup.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.2 2001/09/02 19:40:24 miod Exp $	*/
d44 1
a44 1
	int l = len;
d46 3
d67 1
a67 1
	int l = len;
d69 3
@


1.3.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.3 2001/11/06 22:45:57 miod Exp $	*/
d39 34
a72 3
u_int32_t ppc_set_msr(u_int32_t);
u_int32_t ppc_get_msr(void);
void install_extint(void (*)(void));
@


1.2
log
@Convert mvmeppc to use common powerpc parts.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.1 2001/06/26 21:57:44 smurph Exp $	*/
d41 2
a42 4
extern __inline void
syncicache(from, len)
	void *from;
	int len;
d61 2
a62 4
extern __inline void
invdcache(from, len)
	void *from;
	int len;
@


1.1
log
@Initial import of mvmeppc.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.5 2001/01/24 21:29:12 drahn Exp $	*/
d37 1
a37 21
#include <machine/frame.h>

#include <machine/psl.h>

#define	CLKF_USERMODE(frame)	(((frame)->srr1 & PSL_PR) != 0)
#define	CLKF_BASEPRI(frame)	((frame)->pri == 0)
#define	CLKF_PC(frame)		((frame)->srr0)
#define	CLKF_INTR(frame)	((frame)->depth != 0)

#define	cpu_swapout(p)
#define cpu_wait(p)

extern void delay __P((unsigned));
#define	DELAY(n)		delay(n)

extern volatile int want_resched;
extern volatile int astpending;

#define	need_resched()		(want_resched = 1, astpending = 1)
#define	need_proftick(p)	((p)->p_flag |= P_OWEUPC, astpending = 1)
#define	signotify(p)		(astpending = 1)
a76 2

extern char *bootpath;
@


1.1.2.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: cpu.h,v 1.1 2001/06/26 21:57:44 smurph Exp $	*/
d37 21
a57 1
#include <powerpc/cpu.h>
d97 2
@


1.1.2.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 4
a44 2
static __inline void
syncicache(void *from, int len)
d63 4
a66 2
static __inline void
invdcache(void *from, int len)
@


1.1.2.3
log
@Sync the SMP branch with 3.3
@
text
@d39 34
a72 3
u_int32_t ppc_set_msr(u_int32_t);
u_int32_t ppc_get_msr(void);
void install_extint(void (*)(void));
@


1.1.2.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d39 2
a41 27
void nvram_map(void);

/*
 * CPU Configuration registers (in ISA space)
 */

#define	MVME_CPUCONF_REG	0x0800
#define	MVME_FEATURE_REG	0x0802
#define	MVME_STATUS_REG		0x0803
#define	MVME_SEVENSEG_REG	0x08c0

/* feature bits */
#define	MVME_FEATURE_SCC	0x40
#define	MVME_FEATURE_PMC2	0x20
#define	MVME_FEATURE_PMC1	0x10
#define	MVME_FEATURE_VME	0x08
#define	MVME_FEATURE_GFX	0x04
#define	MVME_FEATURE_LAN	0x02
#define	MVME_FEATURE_SCSI	0x01

/* status values */
#define	MVMETYPE_RESERVED	0xfa
#define	MVMETYPE_2600_712	0xfb
#define	MVMETYPE_2600_761	0xfc
#define	MVMETYPE_3600_712	0xfd
#define	MVMETYPE_3600_761	0xfe
#define	MVMETYPE_1600		0xff
@


