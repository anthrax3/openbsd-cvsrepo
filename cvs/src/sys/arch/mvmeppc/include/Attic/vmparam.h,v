head	1.18;
access;
symbols
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.15.0.20
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.16
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.18
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.14
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.12
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.10
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.8
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.6
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.4
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.2
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.6
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.10
	UBC:1.8.0.2
	UBC_BASE:1.8
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	SMP:1.2.0.2;
locks; strict;
comment	@ * @;


1.18
date	2011.07.07.19.16.43;	author deraadt;	state dead;
branches;
next	1.17;

1.17
date	2011.05.30.22.25.22;	author oga;	state Exp;
branches;
next	1.16;

1.16
date	2010.12.15.05.30.19;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2005.12.17.07.31.26;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2005.04.11.15.13.01;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2004.11.28.01.36.39;	author mickey;	state Exp;
branches;
next	1.12;

1.12
date	2004.06.24.22.35.56;	author drahn;	state Exp;
branches;
next	1.11;

1.11
date	2004.01.22.23.29.29;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.07.01.01.38;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.17.22.59.53;	author maja;	state Exp;
branches;
next	1.8;

1.8
date	2001.12.05.16.25.44;	author art;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2001.11.30.17.37.43;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.06.22.45.57;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.22.18.00.10;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.02.19.40.25;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.04.08.31.33;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.27.06.19.52;	author art;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.06.26.21.57.50;	author smurph;	state Exp;
branches;
next	;

1.2.2.1
date	2001.10.31.03.01.21;	author nate;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.11.13.21.04.15;	author niklas;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2002.03.06.02.04.45;	author niklas;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2002.03.30.00.42.37;	author niklas;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	2002.03.30.08.32.27;	author niklas;	state Exp;
branches;
next	1.2.2.6;

1.2.2.6
date	2003.03.27.23.52.17;	author niklas;	state Exp;
branches;
next	1.2.2.7;

1.2.2.7
date	2004.02.19.10.49.09;	author niklas;	state Exp;
branches;
next	;

1.8.2.1
date	2002.06.11.03.37.22;	author art;	state Exp;
branches;
next	;


desc
@@


1.18
log
@remove mvmeppc; it is really rough shape.  ok drahn miod
@
text
@/*	$OpenBSD: vmparam.h,v 1.17 2011/05/30 22:25:22 oga Exp $	*/
/*	$NetBSD: vmparam.h,v 1.1 1996/09/30 16:34:38 ws Exp $	*/

/*-
 * Copyright (C) 1995, 1996 Wolfgang Solfrank.
 * Copyright (C) 1995, 1996 TooLs GmbH.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef MACHINE_VMPARAM_H
#define MACHINE_VMPARAM_H

#define	USRTEXT		PAGE_SIZE
#define	USRSTACK	VM_MAXUSER_ADDRESS

#ifndef	MAXTSIZ
#define	MAXTSIZ		(16*1024*1024)		/* max text size */
#endif

#ifndef	DFLDSIZ
#define	DFLDSIZ		(32*1024*1024)		/* default data size */
#endif

#ifndef	MAXDSIZ
#define	MAXDSIZ		(512*1024*1024)		/* max data size */
#endif

#ifndef BRKSIZ
#define	BRKSIZ		MAXDSIZ			/* heap gap size */
#endif

#ifndef	DFLSSIZ
#define	DFLSSIZ		(1*1024*1024)		/* default stack size */
#endif

#ifndef	MAXSSIZ
#define	MAXSSIZ		(32*1024*1024)		/* max stack size */
#endif

#define STACKGAP_RANDOM	256*1024

/*
 * Size of shared memory map
 */
#ifndef	SHMMAXPGS
#define	SHMMAXPGS	1024
#endif

/*
 * Size of User Raw I/O map
 */
#define	USRIOSIZE	1024

/*
 * Would like to have MAX addresses = 0, but this doesn't (currently) work
 */
#define	VM_MIN_ADDRESS		((vaddr_t)0)
#define	VM_MAXUSER_ADDRESS	((vaddr_t)0xfffff000)
#define VM_MAX_ADDRESS		VM_MAXUSER_ADDRESS
#define	VM_MIN_KERNEL_ADDRESS	((vaddr_t)(PPC_KERNEL_SR << ADDR_SR_SHIFT))

/* ppc_kvm_size is so that vm space can be stolen before vm is fully
 * initialized.
 */
extern vaddr_t ppc_kvm_stolen;
#define VM_KERN_ADDRESS_SIZE	(PPC_SEGMENT_LENGTH - (32 * 1024 * 1024))
#define	VM_MAX_KERNEL_ADDRESS	(VM_MIN_KERNEL_ADDRESS + VM_KERN_ADDRESS_SIZE)

#define	VM_PHYS_SIZE		(USRIOSIZE * PAGE_SIZE)

#define __HAVE_PMAP_PHYSSEG
struct pmap_physseg {
	struct pted_pv_head *pvent;
	char *attrs;
	/* NULL ??? */
};

#define	VM_PHYSSEG_MAX	32	/* actually we could have this many segments */
#define	VM_PHYSSEG_STRAT	VM_PSTRAT_BSEARCH
#define	VM_PHYSSEG_NOADD	/* can't add RAM after vm_mem_init */

#endif
@


1.17
log
@Remove the freelist member from vm_physseg

The new world order of pmemrange makes this data completely redundant
(being dealt with by the pmemrange constraints instead). Remove all code
that messes with the freelist.

While touching every caller of uvm_page_physload() anyway, add the flags
argument to all callers (all but one is 0 and that one already used
PHYSLOAD_DEVICE) and remove the macro magic to allow callers to continue
without it.

Should shrink the code a bit, as well.

matthew@@ pointed out some mistakes i'd made.
``freelist death, I like. Ok.' ariane@@
`I agree with the general direction, go ahead and i'll fix any fallout
shortly'' miod@@ (68k 88k and vax i could not check would build)
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.16 2010/12/15 05:30:19 tedu Exp $	*/
@


1.16
log
@oops, i forgot to check in the BRKSIZ define in uvm, but deraadt thinks
its better as a per arch MD define anyway.  all default to MAXDSIZ as before.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.15 2005/12/17 07:31:26 miod Exp $	*/
a105 3

#define VM_NFREELIST		1
#define VM_FREELIST_DEFAULT	0
@


1.15
log
@Get rid of deprecated vm_{offset,size}_t types for good, use {p,v}{addr,size}_t
instead; looked at millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.14 2005/04/11 15:13:01 deraadt Exp $	*/
d51 4
@


1.14
log
@use MD #define to choose stackgap size per-architecture.  on sparc, special
case sun4c/sun4 -- because address space is more constrained
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.13 2004/11/28 01:36:39 mickey Exp $	*/
d78 2
a79 2
#define	VM_MIN_ADDRESS		((vm_offset_t)0)
#define	VM_MAXUSER_ADDRESS	((vm_offset_t)0xfffff000)
d81 1
a81 1
#define	VM_MIN_KERNEL_ADDRESS	((vm_offset_t)(PPC_KERNEL_SR << ADDR_SR_SHIFT))
d86 1
a86 1
extern vm_offset_t ppc_kvm_stolen;
@


1.13
log
@MAXSLP is not really an MD-configurable define so move it to param.h; miod@@ testing
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.12 2004/06/24 22:35:56 drahn Exp $	*/
d60 2
@


1.12
log
@Do a better job at containing powerpc specific #defines to PPC_...
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.11 2004/01/22 23:29:29 miod Exp $	*/
a71 11

/*
 * The time for a process to be blocked before being very swappable.
 * This is a number of seconds which the system takes as being a non-trivial
 * amount of real time.  You probably shouldn't change this;
 * it is used in subtle ways (fractions and multiples of it are, that is, like
 * half of a ``long time'', almost a long time, etc.)
 * It is related to human patience and other factors which don't really
 * change over time.
 */
#define	MAXSLP 		20
@


1.11
log
@Style lync with other ppc-based ports, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.10 2002/06/07 01:01:38 miod Exp $	*/
d90 1
a90 1
#define	VM_MIN_KERNEL_ADDRESS	((vm_offset_t)(KERNEL_SR << ADDR_SR_SHIFT))
d96 1
a96 1
#define VM_KERN_ADDRESS_SIZE	(SEGMENT_LENGTH - (32 * 1024 * 1024))
@


1.10
log
@Switch mvmeppc to the current powerpc pmap scheme.
Only compile-tested so far, since the VME rack is not in the room yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.9 2002/02/17 22:59:53 maja Exp $	*/
d39 1
a39 1
#define	USRSTACK	VM_MAX_ADDRESS
d88 2
a89 2
#define	VM_MAX_ADDRESS		((vm_offset_t)0xfffff000)
#define VM_MAXUSER_ADDRESS	VM_MAX_ADDRESS
a94 1
#define VM_KERN_ADDR_SIZE_DEF SEGMENT_LENGTH
@


1.9
log
@Patch from Daniel Lucq <daniel@@lucq.org>

The patch allows you to change the value of NMBCLUSTERS, BUFCACHEPERCENT
and NKMEMPAGES using the config command, instead of recompiling the kernel.

This is the kernel part of the patch. I have compiled it on i386, sparc64,
alpha and macppc. -moj ok art@@ maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.8 2001/12/05 16:25:44 art Exp $	*/
d90 1
a90 1
#define	VM_MIN_KERNEL_ADDRESS	((vm_offset_t)(KERNEL_SR << ADDR_SR_SHFT))
d96 3
a98 4
extern vm_offset_t ppc_kvm_size;
#define VM_KERN_ADDRESS_SIZE  (ppc_kvm_size)
#define	VM_MAX_KERNEL_ADDRESS	((vm_offset_t)((KERNEL_SR << ADDR_SR_SHFT) \
						+ SEGMENT_LENGTH))
d104 1
a104 1
	struct pv_entry *pvent;
@


1.8
log
@VM_KMEM_SIZE no longer needed.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.7 2001/11/30 17:37:43 art Exp $	*/
a100 1
#define	VM_MBUF_SIZE		(NMBCLUSTERS * PAGE_SIZE)
@


1.8.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.8 2001/12/05 16:25:44 art Exp $	*/
d90 1
a90 1
#define	VM_MIN_KERNEL_ADDRESS	((vm_offset_t)(KERNEL_SR << ADDR_SR_SHIFT))
d96 4
a99 3
extern vm_offset_t ppc_kvm_stolen;
#define VM_KERN_ADDRESS_SIZE	(SEGMENT_LENGTH - (32 * 1024 * 1024))
#define	VM_MAX_KERNEL_ADDRESS	(VM_MIN_KERNEL_ADDRESS + VM_KERN_ADDRESS_SIZE)
d101 1
d106 1
a106 1
	struct pted_pv_head *pvent;
@


1.7
log
@Now that pmaps can have vm_page_md, make pmap_physseg optional.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6 2001/11/06 22:45:57 miod Exp $	*/
a100 1
#define	VM_KMEM_SIZE		(NKMEMCLUSTERS * PAGE_SIZE)
@


1.6
log
@-Wall -Werror cleanup.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.5 2001/09/22 18:00:10 miod Exp $	*/
d105 1
@


1.5
log
@Remove more old, dusty, unused defines.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.4 2001/09/02 19:40:25 miod Exp $	*/
d99 1
a99 1
						+ VM_KERN_ADDRESS_SIZE))
@


1.4
log
@Convert mvmeppc to use common powerpc parts.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.3 2001/07/04 08:31:33 niklas Exp $	*/
a59 6

/*
 * Min & Max swap space allocation chunks
 */
#define	DMMIN		32
#define	DMMAX		4096
@


1.3
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.1 1996/09/30 16:34:38 ws Exp $	*/
d39 1
a39 1
#define	USRSTACK	VM_MAXUSER_ADDRESS
d94 2
a95 2
#define	VM_MAXUSER_ADDRESS	((vm_offset_t)0xfffff000)
#define	VM_MAX_ADDRESS		VM_MAXUSER_ADDRESS
@


1.2
log
@MNN is no longer an option.
@
text
@d1 1
@


1.2.2.1
log
@Sync the SMP branch to something just after 3.0
@
text
@a0 1
/*	$OpenBSD$	*/
d38 1
a38 1
#define	USRSTACK	VM_MAX_ADDRESS
d61 6
d93 2
a94 2
#define	VM_MAX_ADDRESS		((vm_offset_t)0xfffff000)
#define VM_MAXUSER_ADDRESS	VM_MAX_ADDRESS
@


1.2.2.2
log
@Merge in -current
@
text
@d99 1
a99 1
						+ SEGMENT_LENGTH))
@


1.2.2.3
log
@Merge in trunk
@
text
@d101 2
@


1.2.2.4
log
@Manual merge of changes long forgotten
@
text
@d103 1
a103 2
#define __HAVE_PMAP_PHYSSEG
struct pmap_physselg {
@


1.2.2.5
log
@manually merge stuff cvs missed long ago
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.9 2002/02/17 22:59:53 maja Exp $	*/
d104 1
a104 1
struct pmap_physseg {
@


1.2.2.6
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d90 1
a90 1
#define	VM_MIN_KERNEL_ADDRESS	((vm_offset_t)(KERNEL_SR << ADDR_SR_SHIFT))
d96 4
a99 3
extern vm_offset_t ppc_kvm_stolen;
#define VM_KERN_ADDRESS_SIZE	(SEGMENT_LENGTH - (32 * 1024 * 1024))
#define	VM_MAX_KERNEL_ADDRESS	(VM_MIN_KERNEL_ADDRESS + VM_KERN_ADDRESS_SIZE)
d105 1
a105 1
	struct pted_pv_head *pvent;
@


1.2.2.7
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d39 1
a39 1
#define	USRSTACK	VM_MAXUSER_ADDRESS
d88 2
a89 2
#define	VM_MAXUSER_ADDRESS	((vm_offset_t)0xfffff000)
#define VM_MAX_ADDRESS		VM_MAXUSER_ADDRESS
d95 1
@


1.1
log
@Initial import of mvmeppc.
@
text
@a105 2
#define	MACHINE_NEW_NONCONTIG	/* VM <=> pmap interface modifier */

@

