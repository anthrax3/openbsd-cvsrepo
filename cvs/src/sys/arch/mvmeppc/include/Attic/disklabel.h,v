head	1.13;
access;
symbols
	OPENBSD_4_9:1.12.0.16
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.14
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.10
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.12
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.8
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.6
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.2.0.2
	UBC_BASE:1.2
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.13
date	2011.07.07.19.16.42;	author deraadt;	state dead;
branches;
next	1.12;

1.12
date	2007.06.20.18.15.45;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.17.00.27.27;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2006.10.20.23.47.43;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2006.10.18.20.09.39;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.17.23.42.37;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.03.01.37.22;	author krw;	state Exp;
branches;
next	1.6;

1.6
date	2006.07.01.16.50.33;	author krw;	state Exp;
branches;
next	1.5;

1.5
date	2006.06.26.23.11.31;	author krw;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.10.10.36.12;	author grange;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.01.26.41;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.06.22.45.57;	author miod;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.06.26.21.57.44;	author smurph;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.11.13.21.04.15;	author niklas;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.03.28.10.36.03;	author niklas;	state Exp;
branches;
next	;

1.2.2.1
date	2002.06.11.03.37.22;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@remove mvmeppc; it is really rough shape.  ok drahn miod
@
text
@/*	$OpenBSD: disklabel.h,v 1.12 2007/06/20 18:15:45 deraadt Exp $	*/

/*
 * Copyright (c) 1994 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_DISKLABEL_H_
#define _MACHINE_DISKLABEL_H_

#define LABELSECTOR	1		/* sector containing label */
#define LABELOFFSET	0		/* offset of label in sector */
#define MAXPARTITIONS	16		/* number of partitions */

#endif /* _MACHINE_DISKLABEL_H_ */
@


1.12
log
@b_cylinder does not need to be set on the callpath down into drivers.
cpu_disklabel can go away, since nothing anymore needs to use it; ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.11 2007/06/17 00:27:27 deraadt Exp $	*/
@


1.11
log
@significantly simplified disklabel infrastructure.  MBR handling becomes MI
to support hotplug media on most architectures.  disklabel setup and
verification done using new helper functions.  Disklabels must *always*
have a correct checksum now.  Same code paths are used to learn on-disk
location disklabels, to avoid new errors sneaking in.  Tested on almost all
cases, testing help from todd, kettenis, krw, otto, dlg, robert, gwk, drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.10 2006/10/20 23:47:43 krw Exp $	*/
a38 3

struct cpu_disklabel {
};
@


1.10
log
@Try again with local variable to avoid alignment issues.

"The dosparts member of cpu_disklabel was not used for any persistant
data. Eliminate it, and just use the data being read in while
processing MBR and EBR records.

Should be no functional change.

ok weingart@@ deraadt@@"
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.9 2006/10/18 20:09:39 deraadt Exp $	*/
d36 3
a38 44
#define	LABELSECTOR	1		/* sector containing label */
#define	LABELOFFSET	0		/* offset of label in sector */
#define	MAXPARTITIONS	16		/* number of partitions */
#define	RAW_PART	2		/* raw partition: ie. rsd0c */

/* MBR partition table */
#define	DOSBBSECTOR	0		/* MBR sector number */
#define	DOSPARTOFF	446		/* Offset of MBR partition table */
#define	NDOSPART	4		/* # of partitions in MBR */
#define	DOSMAGICOFF	510		/* Offset of magic number */
#define	DOSMAGIC	0xaa55		/* Actual magic number */
#define	MBRMAGIC	DOSMAGIC
#define DOSMBR_SIGNATURE MBRMAGIC
#define DOSMBR_SIGNATURE_OFF DOSMAGICOFF
#define	DOSACTIVE	0x80

struct dos_partition {
	u_int8_t	dp_flag;	/* default boot flag */
	u_int8_t	dp_shd;	/* start head, IsN't Always Meaningful */
	u_int8_t	dp_ssect;	/* start sector, INAM */
	u_int8_t	dp_scyl;	/* start cylinder, INAM */
	u_int8_t	dp_typ;		/* partition type */
	u_int8_t	dp_ehd;	/* end head, INAM */
	u_int8_t	dp_esect;	/* end sector, INAM */
	u_int8_t	dp_ecyl;	/* end cylinder, INAM */
	u_int32_t	dp_start;	/* absolute start sector number */
	u_int32_t	dp_size;	/* partition size in sectors */
};

/* Known DOS partition types. */
#define	DOSPTYP_UNUSED	0x00		/* Unused partition */
#define DOSPTYP_FAT12	0x01		/* 12-bit FAT */
#define DOSPTYP_FAT16S	0x04		/* 16-bit FAT, less than 32M */
#define DOSPTYP_EXTEND	0x05		/* Extended; contains sub-partitions */
#define DOSPTYP_FAT16B	0x06		/* 16-bit FAT, more than 32M */
#define DOSPTYP_FAT32	0x0b		/* 32-bit FAT */
#define DOSPTYP_FAT32L	0x0c		/* 32-bit FAT, LBA-mapped */
#define DOSPTYP_FAT16L	0x0e		/* 16-bit FAT, LBA-mapped */
#define DOSPTYP_EXTENDL 0x0f		/* Extended, LBA-mapped; contains sub-partitions */
#define DOSPTYP_ONTRACK	0x54
#define	DOSPTYP_LINUX	0x83		/* That other thing */
#define DOSPTYP_FREEBSD	0xa5		/* FreeBSD partition type */
#define DOSPTYP_OPENBSD	0xa6		/* OpenBSD partition type */
#define DOSPTYP_NETBSD	0xa9		/* NetBSD partition type */
a41 4

/* Isolate the relevant bits to get sector and cylinder. */
#define	DPSECT(s)	((s) & 0x3f)
#define	DPCYL(c, s)	((c) + (((s) & 0xc0) << 2))
@


1.9
log
@back out disksubr changes ... since they violate strict alignment on
some architectures (kaboom); that will be fixed in the next iteration
hopefully!
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.7 2006/10/03 01:37:22 krw Exp $	*/
a81 1
	struct dos_partition dosparts[NDOSPART];
@


1.8
log
@The dosparts member of cpu_disklabel was not used for any persistant
data. Eliminate it, and just use the data being read in while
processing MBR and EBR records.

Should be no functional change.

ok weingart@@ deraadt@@
@
text
@d82 1
@


1.7
log
@Don't load bad144 bad sector information into disklabels for archs that
don't have wd* in GENERIC, since wd* is the only place such info is
being used. First step of eliminating bad144 bad sector info from all
disklabels.

'go go go' deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.6 2006/07/01 16:50:33 krw Exp $	*/
a81 1
	struct dos_partition dosparts[NDOSPART];
@


1.6
log
@Eliminate redundant get_le() in favour of letoh32(). Add letoh32()
calls in alpha, hppa, hppa64 and mips63 when accessing the two DOS MBR
u_int32_t fields dp_size and dp_start.

No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.5 2006/06/26 23:11:31 krw Exp $	*/
a80 1
#include <sys/dkbad.h>
a82 1
	struct dkbad bad;
a83 2

#define DKBAD(x) ((x)->bad)
@


1.5
log
@Clean up some inconsistancies in definitions around DOS MBR code. No
functional change.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.4 2004/11/10 10:36:12 grange Exp $	*/
a91 14

static __inline u_int32_t get_le(void *);

static __inline u_int32_t
get_le(void *p)
{
	u_int8_t *_p = (u_int8_t *)p;
	u_int32_t x;
	x = _p[0];
	x |= _p[1] << 8;
	x |= _p[2] << 16;
	x |= _p[3] << 24;
	return x;
}
@


1.4
log
@Remove __cplusplus crud.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.3 2002/03/14 01:26:41 millert Exp $	*/
d53 10
a62 10
	unsigned char	dp_flag;	/* default boot flag */
	unsigned char	dp_shd;	/* start head, IsN't Always Meaningful */
	unsigned char	dp_ssect;	/* start sector, INAM */
	unsigned char	dp_scyl;	/* start cylinder, INAM */
	unsigned char	dp_typ;		/* partition type */
	unsigned char	dp_ehd;	/* end head, INAM */
	unsigned char	dp_esect;	/* end sector, INAM */
	unsigned char	dp_ecyl;	/* end cylinder, INAM */
	unsigned long	dp_start;	/* absolute start sector number */
	unsigned long	dp_size;	/* partition size in sectors */
d73 1
a73 1
#define DOSPTYP_FAT16C	0x0e		/* 16-bit FAT, CHS-mapped */
d93 1
a93 1
static __inline u_int32_t get_le(void *p);
d99 1
a99 1
	int x;
@


1.3
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.2 2001/11/06 22:45:57 miod Exp $	*/
a95 1
#ifdef __cplusplus
a96 4
#else
get_le(p)
	void *p;
#endif
@


1.2
log
@-Wall -Werror cleanup.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.1 2001/06/26 21:57:44 smurph Exp $	*/
d93 1
a93 1
static __inline u_int32_t get_le __P((void *p));
@


1.2.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.2 2001/11/06 22:45:57 miod Exp $	*/
d93 1
a93 1
static __inline u_int32_t get_le(void *p);
@


1.1
log
@Initial import of mvmeppc.
@
text
@d1 1
a1 1
/*	$OpenBSD: disklabel.h,v 1.13 1999/12/04 03:35:57 deraadt Exp $	*/
a102 1
	u_int32_t c;
@


1.1.2.1
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d103 1
@


1.1.2.2
log
@Merge in -current from about a week ago
@
text
@d93 1
a93 1
static __inline u_int32_t get_le(void *p);
@


