head	1.11;
access;
symbols
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2;
locks; strict;
comment	@ * @;


1.11
date	2013.09.04.14.38.37;	author patrick;	state dead;
branches;
next	1.10;

1.10
date	2013.06.14.23.13.54;	author patrick;	state Exp;
branches;
next	1.9;

1.9
date	2013.05.10.00.18.42;	author patrick;	state Exp;
branches;
next	1.8;

1.8
date	2013.05.09.15.16.53;	author patrick;	state Exp;
branches;
next	1.7;

1.7
date	2013.05.01.00.16.26;	author patrick;	state Exp;
branches;
next	1.6;

1.6
date	2013.04.25.23.07.17;	author patrick;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.15.23.01.11;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.10.23.43.01;	author uwe;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.10.23.26.35;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.10.23.03.21;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.10.19.37.01;	author uwe;	state Exp;
branches;
next	;


desc
@@


1.11
log
@In the future, we shouldn't have one port port ARM SoC, that's just
ridiculous.  This is the first step for a common and generic ARM port
for ARMv7 SoCs.
@
text
@/* $OpenBSD: omap4.c,v 1.10 2013/06/14 23:13:54 patrick Exp $ */

/*
 * Copyright (c) 2011 Uwe Stuehler <uwe@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <machine/bus.h>
#include <arch/arm/armv7/armv7var.h>

#include <beagle/dev/omapvar.h>

#define OMAPID_ADDR	0x4a002000
#define OMAPID_SIZE	0x1000

#define WD_ADDR		0x4a314000
#define WD_SIZE		0x80

#define GPIOx_SIZE	0x1000
#define GPIO1_ADDR	0x4a310000
#define GPIO2_ADDR	0x48055000
#define GPIO3_ADDR	0x48057000
#define GPIO4_ADDR	0x48059000
#define GPIO5_ADDR	0x4805b000
#define GPIO6_ADDR	0x4805d000

#define GPIO1_IRQ	29
#define GPIO2_IRQ	30
#define GPIO3_IRQ	31
#define GPIO4_IRQ	32
#define GPIO5_IRQ	33
#define GPIO6_IRQ	34

#define UARTx_SIZE	0x400
#define UART1_ADDR	0x4806A000
#define UART2_ADDR	0x4806C000
#define UART3_ADDR	0x48020000
#define UART4_ADDR	0x4806E000

#define UART1_IRQ	72
#define UART2_IRQ	73
#define UART3_IRQ	74
#define UART4_IRQ	70

#define HSMMCx_SIZE	0x300
#define HSMMC1_ADDR	0x4809c000
#define HSMMC1_IRQ	83

#define PRM_ADDR	0x4a306000
#define PRM_SIZE	0x2000
#define CM1_ADDR	0x4a004000
#define CM1_SIZE	0x1000
#define CM2_ADDR	0x4a008000
#define CM2_SIZE	0x2000
#define SCRM_ADDR	0x4a30a000
#define SCRM_SIZE	0x1000
#define PCNF1_ADDR	0x4a100000
#define PCNF1_SIZE	0x1000
#define PCNF2_ADDR	0x4a31e000
#define PCNF2_SIZE	0x1000

#define HSUSBHOST_ADDR	0x4a064000
#define HSUSBHOST_SIZE	0x800
#define USBEHCI_ADDR	0x4a064c00
#define USBEHCI_SIZE	0x400
#define USBOHCI_ADDR	0x4a064800
#define USBOHCI_SIZE	0x400
#define USBEHCI_IRQ	77

struct omap_dev omap4_devs[] = {

	/*
	 * Power, Reset and Clock Manager
	 */

	{ .name = "prcm",
	  .unit = 0,
	  .mem = {
	    { PRM_ADDR, PRM_SIZE },
	    { CM1_ADDR, CM1_SIZE },
	    { CM2_ADDR, CM2_SIZE },
	  },
	},

	/*
	 * OMAP identification registers/fuses
	 */

	{ .name = "omapid",
	  .unit = 0,
	  .mem = { { OMAPID_ADDR, OMAPID_SIZE } },
	},

	/*
	 * GPIO
	 */

	{ .name = "omgpio",
	  .unit = 0,
	  .mem = { { GPIO1_ADDR, GPIOx_SIZE } },
	  .irq = { GPIO1_IRQ }
	},

	{ .name = "omgpio",
	  .unit = 1,
	  .mem = { { GPIO2_ADDR, GPIOx_SIZE } },
	  .irq = { GPIO2_IRQ }
	},

	{ .name = "omgpio",
	  .unit = 2,
	  .mem = { { GPIO3_ADDR, GPIOx_SIZE } },
	  .irq = { GPIO3_IRQ }
	},

	{ .name = "omgpio",
	  .unit = 3,
	  .mem = { { GPIO4_ADDR, GPIOx_SIZE } },
	  .irq = { GPIO4_IRQ }
	},

	{ .name = "omgpio",
	  .unit = 4,
	  .mem = { { GPIO5_ADDR, GPIOx_SIZE } },
	  .irq = { GPIO5_IRQ }
	},

	{ .name = "omgpio",
	  .unit = 5,
	  .mem = { { GPIO6_ADDR, GPIOx_SIZE } },
	  .irq = { GPIO6_IRQ }
	},

	/*
	 * Watchdog Timer
	 */

	{ .name = "omdog",
	  .unit = 0,
	  .mem = { { WD_ADDR, WD_SIZE } }
	},

	/*
	 * UART
	 */

	{ .name = "com",
	  .unit = 2,
	  .mem = { { UART3_ADDR, UARTx_SIZE } },
	  .irq = { UART3_IRQ }
	},

	/*
	 * MMC
	 */

	{ .name = "ommmc",
	  .unit = 0,
	  .mem = { { HSMMC1_ADDR, HSMMCx_SIZE } },
	  .irq = { HSMMC1_IRQ }
	},

	/*
	 * USB
	 */

	{ .name = "ehci",
	  .unit = 0,
	  .mem = {
		  { USBEHCI_ADDR, USBEHCI_SIZE },
		  { HSUSBHOST_ADDR, HSUSBHOST_SIZE },
	  },
	  .irq = { USBEHCI_IRQ }
	},

	/* Terminator */
	{ .name = NULL,
	  .unit = 0,
	}
};

void
omap4_init(void)
{
	omap_set_devs(omap4_devs);
}
@


1.10
log
@Rework beagle's ehci driver and add neccessay code to enable the clocks.
Only PandaBoard supported for now.  Lots taken from FreeBSD.

ok bmercer@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap4.c,v 1.9 2013/05/10 00:18:42 patrick Exp $ */
@


1.9
log
@whitespaces
@
text
@d1 1
a1 1
/* $OpenBSD: omap4.c,v 1.8 2013/05/09 15:16:53 patrick Exp $ */
d63 21
d87 13
d175 13
@


1.8
log
@Add a driver for the OMAP identification registers/fuses,
so that we can adjust the timer frequency for PandaBoard version.
From drahn at bitrig.

ok bmercer@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap4.c,v 1.7 2013/05/01 00:16:26 patrick Exp $ */
d68 1
a68 1
 
@


1.7
log
@Add a cortex bus which represents the ARM MPCore Complex.
It will attach only to ARM Cortex A9 and A15 SoCs.
The generic interrupt controller and timer will attach to this bus,
later a secondary cache controller can be added.
The base address for those controllers are figured out using
the periphbase register.

ok bmercer@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap4.c,v 1.6 2013/04/25 23:07:17 patrick Exp $ */
d27 3
d64 9
@


1.6
log
@Add a terminator to the device list, so that we don't end up having
unexpected behaviour when a device isn't found.

ok bmercer@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap4.c,v 1.5 2011/11/15 23:01:11 drahn Exp $ */
a26 8
#define ICP_ADDR	0x48240100
#define ICP_SIZE	0x100
#define ICD_ADDR	0x48241000
#define ICD_SIZE	0x1000

#define GTIMER_ADDR	0x48240000
#define GTIMER_SIZE	0x300

a60 21

	/*
	 * Cortex-A9 Interrupt Controller
	 */

	{ .name = "ampintc",
	  .unit = 0,
	  .mem = {
	    { ICP_ADDR, ICD_SIZE },
	    { ICD_ADDR, ICD_SIZE },
	  },
	},

	/*
	 * Cortex-A9 Global Timer
	 */

	{ .name = "amptimer",
	  .unit = 0,
	  .mem = { { GTIMER_ADDR, GTIMER_SIZE } },
	},
@


1.5
log
@Bring back 'mostly' working omdog support.
@
text
@d1 1
a1 1
/* $OpenBSD: omap4.c,v 1.4 2011/11/10 23:43:01 uwe Exp $ */
d158 5
a163 1

@


1.4
log
@Assert copyright; spotted by drahn@@
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d19 3
a21 1
#include <sys/types.h>
d23 1
d35 3
d129 9
@


1.3
log
@Missing UART irqs.
@
text
@d1 18
@


1.2
log
@Missing interrupts on gpio.
@
text
@d30 2
d33 6
d113 2
a114 1
	  .mem = { { UART3_ADDR, UARTx_SIZE } }
@


1.1
log
@Reduce autoconf(4) overuse on beagle

Renamed `ahb' to `omap' and extended it to configure the on-chip
devices directly, based a board-specific table instead of trying to
maintain addresses, interrupt numbers and such for two OMAP variants
in the same config file.

This may be an intermediate step, but should provide us some relief
already. :)

Suggestions from deraadt and drahn; ok drahn@@
@
text
@d22 7
d66 1
d72 1
d78 1
d84 1
d90 1
d96 1
@

