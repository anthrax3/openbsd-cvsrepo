head	1.11;
access;
symbols
	OPENBSD_5_4:1.10.0.4
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.1.0.6
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2013.09.04.14.38.37;	author patrick;	state dead;
branches;
next	1.10;

1.10
date	2012.12.05.23.20.11;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2011.11.10.19.37.01;	author uwe;	state Exp;
branches;
next	1.8;

1.8
date	2011.11.10.00.19.36;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2011.10.24.22.49.07;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2011.10.21.22.55.01;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2011.03.22.17.46.02;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2010.09.07.16.21.37;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2010.08.30.21.32.20;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2010.08.27.05.04.08;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.08.03.13.26;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.11
log
@In the future, we shouldn't have one port port ARM SoC, that's just
ridiculous.  This is the first step for a common and generic ARM port
for ARMv7 SoCs.
@
text
@/* $OpenBSD: omap_com.c,v 1.10 2012/12/05 23:20:11 deraadt Exp $ */
/*
 * Copyright 2003 Wasabi Systems, Inc.
 * All rights reserved.
 *
 * Written by Steve C. Woodford for Wasabi Systems, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed for the NetBSD Project by
 *      Wasabi Systems, Inc.
 * 4. The name of Wasabi Systems, Inc. may not be used to endorse
 *    or promote products derived from this software without specific prior
 *    written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY WASABI SYSTEMS, INC. ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL WASABI SYSTEMS, INC
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/tty.h>

#include <machine/intr.h>
#include <machine/bus.h>

#include <dev/ic/comreg.h>
#include <dev/ic/comvar.h>

/* pick up armv7_a4x_bs_tag */
#include <arch/arm/armv7/armv7var.h>

#include <beagle/dev/omapvar.h>

#define com_isr 8
#define ISR_RECV	(ISR_RXPL | ISR_XMODE | ISR_RCVEIR)

void	omapuart_attach(struct device *, struct device *, void *);
int	omapuart_activate(struct device *, int);

struct cfattach com_omap_ca = {
	sizeof (struct com_softc), NULL, omapuart_attach, NULL, 
	omapuart_activate
};

void
omapuart_attach(struct device *parent, struct device *self, void *aux)
{
	struct com_softc *sc = (struct com_softc *)self;
	struct omap_attach_args *oa = aux;

	sc->sc_iot = &armv7_a4x_bs_tag;	/* XXX: This sucks */
	sc->sc_iobase = oa->oa_dev->mem[0].addr;
	sc->sc_frequency = 48000000;
	sc->sc_uarttype = COM_UART_TI16750;

	if (bus_space_map(sc->sc_iot, sc->sc_iobase,
	    oa->oa_dev->mem[0].size, 0, &sc->sc_ioh)) {
		printf("%s: bus_space_map failed\n", __func__);
		return;
	}

	com_attach_subr(sc);

	(void)arm_intr_establish(oa->oa_dev->irq[0], IPL_TTY, comintr,
	    sc, sc->sc_dev.dv_xname);
}

int
omapuart_activate(struct device *self, int act)
{
	struct com_softc *sc = (struct com_softc *)self;
	bus_space_tag_t iot = sc->sc_iot;
	bus_space_handle_t ioh = sc->sc_ioh;
	struct tty *tp = sc->sc_tty;

	switch (act) {
	case DVACT_SUSPEND:
		break;
	case DVACT_RESUME:
		if (sc->enabled) {
			sc->sc_initialize = 1;
			comparam(tp, &tp->t_termios);
			bus_space_write_1(iot, ioh, com_ier, sc->sc_ier);

			if (ISSET(sc->sc_hwflags, COM_HW_SIR)) {
				bus_space_write_1(iot, ioh, com_isr,
				    ISR_RECV);
			}
		}
		break;
	}
	return 0;
}
@


1.10
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.9 2011/11/10 19:37:01 uwe Exp $ */
@


1.9
log
@Reduce autoconf(4) overuse on beagle

Renamed `ahb' to `omap' and extended it to configure the on-chip
devices directly, based a board-specific table instead of trying to
maintain addresses, interrupt numbers and such for two OMAP variants
in the same config file.

This may be an intermediate step, but should provide us some relief
already. :)

Suggestions from deraadt and drahn; ok drahn@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.8 2011/11/10 00:19:36 matthieu Exp $ */
a35 2

#include <sys/cdefs.h>
@


1.8
log
@Add gumstix overo support. It's very similar to be beagleboard at this
point. So add it's card id and handle it like the beagleboard.
ok drahn@@, miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.7 2011/10/24 22:49:07 drahn Exp $ */
d53 1
a53 1
#include <arch/beagle/beagle/ahb.h>
a57 1
int	omapuart_match(struct device *, void *, void *);
d61 2
a62 2
struct cfattach com_ahb_ca = {
        sizeof (struct com_softc), omapuart_match, omapuart_attach, NULL, 
a65 49
int
omapuart_match(struct device *parent, void *cf, void *aux)
{
        struct ahb_attach_args *aa = aux;
	extern uint32_t board_id;
	int rv = 0;

	/* XXX */
	switch (board_id) {
	case BOARD_ID_OMAP3_BEAGLE:
	case BOARD_ID_OMAP3_OVERO:
		if (aa->aa_addr == 0x4806A000 && aa->aa_intr == 72) {
			rv = 1;
			break;
		}
		if (aa->aa_addr == 0x4806C000 && aa->aa_intr == 73) {
			rv = 1;
			break;
		}
		if (aa->aa_addr == 0x49020000 && aa->aa_intr == 74) {
			rv = 1;
			break;
		}
		break;
	case BOARD_ID_OMAP4_PANDA:
		if (aa->aa_addr == 0x4806A000 && aa->aa_intr == 72) {
			rv = 1;
			break;
		}
		if (aa->aa_addr == 0x4806C000 && aa->aa_intr == 73) {
			rv = 1;
			break;
		}
		if (aa->aa_addr == 0x48020000 && aa->aa_intr == 74) {
			rv = 1;
			break;
		}
		if (aa->aa_addr == 0x4806E000 && aa->aa_intr == 70) {
			rv = 1;
			break;
		}
		break;
	default:
		printf("unknown boardid %d", board_id);
	}

	return (rv);
}

d70 1
a70 1
        struct ahb_attach_args *aa = aux;
d73 1
a73 1
	sc->sc_iobase = aa->aa_addr;
d77 5
a81 1
	bus_space_map(sc->sc_iot, sc->sc_iobase, aa->aa_size, 0, &sc->sc_ioh);
d85 1
a85 1
	(void)arm_intr_establish(aa->aa_intr, IPL_TTY, comintr,
@


1.7
log
@Introduce a pluggable interrupt controller infrastructure for beagle,
to allow panda to share the port.
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.6 2011/10/21 22:55:01 drahn Exp $ */
d77 1
@


1.6
log
@Pile of diffs to improve beagle/panda status. fetching u-boot parameters
out of the register input. (with a beagle_start.S fix from uwe@@)
Devices now detect device_id from u-boot and decide to enable/disable
themselves in the device match routine. ok uwe@@
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.5 2011/03/22 17:46:02 deraadt Exp $ */
d130 1
a130 1
	(void)intc_intr_establish(aa->aa_intr, IPL_TTY, comintr,
@


1.5
log
@no need for a xxxpower function; ok drahn
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.4 2010/09/07 16:21:37 deraadt Exp $ */
d71 2
a72 3
	bus_space_tag_t bt = &armv7_a4x_bs_tag;	/* XXX: This sucks */
	bus_space_handle_t bh;
	int rv;
d75 35
a109 11
	if (aa->aa_addr == 0x4806A000 && aa->aa_intr == 72)
		return 1;
	if (aa->aa_addr == 0x4806C000 && aa->aa_intr == 73)
		return 1;
	if (aa->aa_addr == 0x4806E000 && aa->aa_intr == 74)
		return 1;
	{
		extern bus_addr_t comconsaddr;

		if (comconsaddr == aa->aa_addr)
			return (1);
a110 9

	if (bus_space_map(bt, aa->aa_addr, aa->aa_size, 0, &bh))
		return (0);

	/* Make sure the UART is enabled - XXX */
	bus_space_write_1(bt, bh, com_ier, IER_EUART);

	rv = comprobe1(bt, bh);
	bus_space_unmap(bt, bh, aa->aa_size);
@


1.4
log
@remove the powerhook code.  All architectures now use the ca_activate tree
traversal code to suspend/resume
ok oga kettenis blambert
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.3 2010/08/30 21:32:20 deraadt Exp $ */
a60 1
void	omapuart_power(int why, void *);
a145 8

#if 0
void
omapuart_power(int why, void *arg)
{
	omapuart_activate(arg, why);
}
#endif
@


1.3
log
@lend a hand keeping beagle up-to-date with what is going on in powerhook
vs activate.  It compiles.
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.2 2010/08/27 05:04:08 deraadt Exp $ */
a118 4

#if 0
	(void)powerhook_establish(&omapuart_powerhook, sc);
#endif
@


1.2
log
@More killing of PWR_STANDBY.  cvs skipped these files
@
text
@d1 1
a1 1
/* $OpenBSD: omap_com.c,v 1.1 2009/05/08 03:13:26 drahn Exp $ */
d60 1
d64 2
a65 1
        sizeof (struct com_softc), omapuart_match, omapuart_attach
d121 1
a121 1
	(void)powerhook_establish(&omapuart_power, sc);
d125 2
a126 3
#if 0
void
omapuart_power(int why, void *arg)
d128 1
a128 1
	struct com_softc *sc = arg;
d133 2
a134 2
	switch (why) {
	case PWR_SUSPEND:
d136 1
a136 1
	case PWR_RESUME:
d149 8
@


1.1
log
@Initial effort on a port to the omap35xx platform specifically beagleboard,
however other omap system may be supportable. Not functional until armv7
core changes are complete.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a133 1
	case PWR_STANDBY:
@

