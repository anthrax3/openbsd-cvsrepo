head	1.7;
access;
symbols
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.4.0.14
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2013.09.04.14.38.40;	author patrick;	state dead;
branches;
next	1.6;

1.6
date	2013.06.14.23.13.54;	author patrick;	state Exp;
branches;
next	1.5;

1.5
date	2013.05.14.12.01.17;	author rapha;	state Exp;
branches;
next	1.4;

1.4
date	2010.02.13.06.03.37;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2010.02.12.05.31.11;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.24.00.36.41;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.08.03.13.26;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.7
log
@In the future, we shouldn't have one port port ARM SoC, that's just
ridiculous.  This is the first step for a common and generic ARM port
for ARMv7 SoCs.
@
text
@/* $OpenBSD: prcmvar.h,v 1.6 2013/06/14 23:13:54 patrick Exp $ */
/*
 * Copyright (c) 2007,2009 Dale Rahn <drahn@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

void prcm_setclock(int clock, int speed);
void prcm_enablemodule(int mod);
void prcm_disablemodule(int mod);

#define PRCM_CLK_SPEED_32	0
#define PRCM_CLK_SPEED_SYS	1

enum PRCM_MODULES {
	PRCM_TIMER0,
	PRCM_TIMER1,
	PRCM_TIMER2,
	PRCM_TIMER3,
	PRCM_MMC,
	PRCM_USB,
	PRCM_USBTLL,
	PRCM_USBP1_PHY,
	PRCM_USBP1_UTMI,
	PRCM_USBP1_HSIC,
	PRCM_USBP2_PHY,
	PRCM_USBP2_UTMI,
	PRCM_USBP2_HSIC
};

#define PRCM_REG_MAX	6
/* need interface for CM_AUTOIDLE */
@


1.6
log
@Rework beagle's ehci driver and add neccessay code to enable the clocks.
Only PandaBoard supported for now.  Lots taken from FreeBSD.

ok bmercer@@
@
text
@d1 1
a1 1
/* $OpenBSD: prcmvar.h,v 1.5 2013/05/14 12:01:17 rapha Exp $ */
@


1.5
log
@Add basic prcm support for am335x.
Use separate headers and enable/disablemodule functions for the
different boards. A lot of work by patrick@@.

ok patrick@@, bmercer@@
@
text
@d1 1
a1 1
/* $OpenBSD: prcmvar.h,v 1.4 2010/02/13 06:03:37 drahn Exp $ */
d32 7
a38 1
	PRCM_USBTLL
@


1.4
log
@Dont mix up the order of the registers with the defines.
@
text
@d1 1
a1 1
/* $OpenBSD: prcmvar.h,v 1.3 2010/02/12 05:31:11 drahn Exp $ */
d19 3
d25 9
a33 73
void prcm_enableclock(int bit);

#define CM_FCLKEN1_CORE		0x0a00
#define CM_FCLKEN1_CORE_MSK	0x41fffe00

#define CM_FCLKEN2_CORE	0x0a04
#define CM_FCLKEN2_CORE_MSK	0x00000000
#define CM_FCLKEN3_CORE	0x0a08
#define CM_FCLKEN3_CORE_MSK	0x00000007

#define PRCM_REG_CORE_CLK1	0
#define PRCM_REG_CORE_CLK1_FADDR	CM_FCLKEN1_CORE
#define PRCM_REG_CORE_CLK1_IADDR	CM_ICLKEN1_CORE
#define PRCM_REG_CORE_CLK1_FMASK	CM_FCLKEN1_CORE_MSK
#define PRCM_REG_CORE_CLK1_IMASK	CM_ICLKEN1_CORE_MSK
#define PRCM_REG_CORE_CLK1_BASE	(PRCM_REG_CORE_CLK1*32)
#define		PRCM_CLK_EN_MMC3	(PRCM_REG_CORE_CLK1_BASE + 30)
#define		PRCM_CLK_EN_ICR		(PRCM_REG_CORE_CLK1_BASE + 29)
#define		PRCM_CLK_EN_AES2 	(PRCM_REG_CORE_CLK1_BASE + 28)
#define		PRCM_CLK_EN_SHA12 	(PRCM_REG_CORE_CLK1_BASE + 27)
#define		PRCM_CLK_EN_DES2 	(PRCM_REG_CORE_CLK1_BASE + 26)
#define		PRCM_CLK_EN_MMC2	(PRCM_REG_CORE_CLK1_BASE + 25)
#define		PRCM_CLK_EN_MMC1	(PRCM_REG_CORE_CLK1_BASE + 24)
#define		PRCM_CLK_EN_MSPRO	(PRCM_REG_CORE_CLK1_BASE + 23)
#define		PRCM_CLK_EN_HDQ		(PRCM_REG_CORE_CLK1_BASE + 22)
#define		PRCM_CLK_EN_MCSPI4	(PRCM_REG_CORE_CLK1_BASE + 21)
#define		PRCM_CLK_EN_MCSPI3	(PRCM_REG_CORE_CLK1_BASE + 20)
#define		PRCM_CLK_EN_MCSPI2	(PRCM_REG_CORE_CLK1_BASE + 19)
#define		PRCM_CLK_EN_MCSPI1	(PRCM_REG_CORE_CLK1_BASE + 18)
#define		PRCM_CLK_EN_I2C3	(PRCM_REG_CORE_CLK1_BASE + 17)
#define		PRCM_CLK_EN_I2C2	(PRCM_REG_CORE_CLK1_BASE + 16)
#define		PRCM_CLK_EN_I2C1	(PRCM_REG_CORE_CLK1_BASE + 15)
#define		PRCM_CLK_EN_UART2	(PRCM_REG_CORE_CLK1_BASE + 14)
#define		PRCM_CLK_EN_UART1	(PRCM_REG_CORE_CLK1_BASE + 13)
#define		PRCM_CLK_EN_GPT11	(PRCM_REG_CORE_CLK1_BASE + 12)
#define		PRCM_CLK_EN_GPT10	(PRCM_REG_CORE_CLK1_BASE + 11)
#define		PRCM_CLK_EN_MCBSP5	(PRCM_REG_CORE_CLK1_BASE + 10)
#define		PRCM_CLK_EN_MCBSP1	(PRCM_REG_CORE_CLK1_BASE + 9)
#define		PRCM_CLK_EN_MAILBOXES 	(PRCM_REG_CORE_CLK1_BASE + 7)
#define		PRCM_CLK_EN_OMAPCTRL 	(PRCM_REG_CORE_CLK1_BASE + 6)
#define		PRCM_CLK_EN_HSOTGUSB 	(PRCM_REG_CORE_CLK1_BASE + 4)
#define		PRCM_CLK_EN_SDRC 	(PRCM_REG_CORE_CLK1_BASE + 1)

#define PRCM_REG_CORE_CLK2	1
#define PRCM_REG_CORE_CLK2_FADDR	CM_FCLKEN2_CORE
#define PRCM_REG_CORE_CLK2_IADDR	CM_ICLKEN2_CORE
#define PRCM_REG_CORE_CLK2_FMASK	CM_FCLKEN2_CORE_MSK
#define PRCM_REG_CORE_CLK2_IMASK	CM_ICLKEN2_CORE_MSK
#define PRCM_REG_CORE_CLK2_BASE	(PRCM_REG_CORE_CLK2*32)

#define PRCM_REG_CORE_CLK3	2
#define PRCM_REG_CORE_CLK3_FADDR	CM_FCLKEN3_CORE
#define PRCM_REG_CORE_CLK3_IADDR	CM_ICLKEN3_CORE
#define PRCM_REG_CORE_CLK3_FMASK	CM_FCLKEN3_CORE_MSK
#define PRCM_REG_CORE_CLK3_IMASK	CM_ICLKEN3_CORE_MSK
#define PRCM_REG_CORE_CLK3_BASE	(PRCM_REG_CORE_CLK3*32)

#define		CM_CORE_EN_USBTLL	(PRCM_REG_CORE_CLK3_BASE + 2)
#define		CM_CORE_EN_TS		(PRCM_REG_CORE_CLK3_BASE + 1)
#define		CM_CORE_EN_CPEFUSE	(PRCM_REG_CORE_CLK3_BASE + 0)

#define PRCM_REG_USBHOST	3
#define PRCM_REG_USBHOST_FADDR	0x1400
#define PRCM_REG_USBHOST_IADDR	0x1410
#define PRCM_REG_USBHOST_FMASK	0x3
#define PRCM_REG_USBHOST_IMASK	0x1
#define PRCM_REG_USBHOST_BASE	(PRCM_REG_USBHOST*32)

#define PRCM_CLK_EN_USB		(PRCM_REG_USBHOST_BASE + 0)

#define PRCM_REG_MAX	4

#define		CM_CORE_EN_
d35 1
@


1.3
log
@Rework prcm to support additional iclk/fclk registers.
@
text
@d1 1
a1 1
/* $OpenBSD: prcmvar.h,v 1.2 2009/05/24 00:36:41 drahn Exp $ */
d67 2
a68 2
#define PRCM_REG_CORE_CLK2_IADDR	CM_FCLKEN2_CORE_MSK
#define PRCM_REG_CORE_CLK2_FMASK	CM_FCLKEN2_CORE
d74 2
a75 2
#define PRCM_REG_CORE_CLK3_IADDR	CM_FCLKEN3_CORE_MSK
#define PRCM_REG_CORE_CLK3_FMASK	CM_FCLKEN3_CORE
@


1.2
log
@Rework for 3530.
@
text
@d1 1
a1 1
/* $OpenBSD: prcmvar.h,v 1.1 2009/05/08 03:13:26 drahn Exp $ */
d24 71
a94 30
#define		PRCM_CLK_EN_MMC3		(30)
#define		PRCM_CLK_EN_ICR		(29)
#define		PRCM_CLK_EN_AES2 	(28)
#define		PRCM_CLK_EN_SHA12 	(27)
#define		PRCM_CLK_EN_DES2 	(26)
#define		PRCM_CLK_EN_MMC2		(25)
#define		PRCM_CLK_EN_MMC1		(24)
#define		PRCM_CLK_EN_MSPRO	(23)
#define		PRCM_CLK_EN_HDQ		(22)
#define		PRCM_CLK_EN_MCSPI4	(21)
#define		PRCM_CLK_EN_MCSPI3	(20)
#define		PRCM_CLK_EN_MCSPI2	(19)
#define		PRCM_CLK_EN_MCSPI1	(18)
#define		PRCM_CLK_EN_I2C3		(17)
#define		PRCM_CLK_EN_I2C2		(16)
#define		PRCM_CLK_EN_I2C1		(15)
#define		PRCM_CLK_EN_UART2	(14)
#define		PRCM_CLK_EN_UART1	(13)
#define		PRCM_CLK_EN_GPT11	(12)
#define		PRCM_CLK_EN_GPT10	(11)
#define		PRCM_CLK_EN_MCBSP5	(10)
#define		PRCM_CLK_EN_MCBSP1	(9)
#define		PRCM_CLK_EN_MAILBOXES 	(7)
#define		PRCM_CLK_EN_OMAPCTRL 	(6)
#define		PRCM_CLK_EN_HSOTGUSB 	(4)
#define		PRCM_CLK_EN_SDRC 	(1)

#define		CM_CORE_EN_USBTLL	(2+64)
#define		CM_CORE_EN_TS		(1+64)
#define		CM_CORE_EN_CPEFUSE	(0+64)
@


1.1
log
@Initial effort on a port to the omap35xx platform specifically beagleboard,
however other omap system may be supportable. Not functional until armv7
core changes are complete.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a20 1
#define PRCM_CLK_SPEED_EXT	2
d24 30
a53 35
#define  	PRCM_CLK_EN_DSS1	0
#define  	PRCM_CLK_EN_DSS2	1
#define  	PRCM_CLK_EN_TV		2
#define  	PRCM_CLK_EN_VLYNQ	3
#define  	PRCM_CLK_EN_GP2		4
#define  	PRCM_CLK_EN_GP		5
#define  	PRCM_CLK_EN_GP4		6
#define  	PRCM_CLK_EN_GP5		7
#define  	PRCM_CLK_EN_GP6		8
#define  	PRCM_CLK_EN_GP7		9
#define  	PRCM_CLK_EN_GP8		10
#define  	PRCM_CLK_EN_GP9		11
#define  	PRCM_CLK_EN_GP10	12
#define  	PRCM_CLK_EN_GP11	13
#define  	PRCM_CLK_EN_GP12	14
#define  	PRCM_CLK_EN_MCBSP1	15
#define  	PRCM_CLK_EN_MCBSP2	16
#define  	PRCM_CLK_EN_MCSPI1	17
#define  	PRCM_CLK_EN_MCSPI2	18
#define  	PRCM_CLK_EN_I2C1	19
#define  	PRCM_CLK_EN_I2C2	20
#define  	PRCM_CLK_EN_UART1	21
#define  	PRCM_CLK_EN_UART2	22
#define  	PRCM_CLK_EN_HDQ		23
#define  	PRCM_CLK_EN_EAC		24
#define  	PRCM_CLK_EN_FAC		25
#define  	PRCM_CLK_EN_MMC		26
#define  	PRCM_CLK_EN_MSPR0	27
#define  	PRCM_CLK_EN_WDT3	28
#define  	PRCM_CLK_EN_WDT4	29
#define  	PRCM_CLK_EN_MAILBOX	30
#define  	PRCM_CLK_EN_CAM		31
#define  	PRCM_CLK_EN_USB		32
#define  	PRCM_CLK_EN_SSI		33
#define  	PRCM_CLK_EN_UART3	34
@

