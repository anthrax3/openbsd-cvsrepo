head	1.14;
access;
symbols
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	UBC_SYNC_A:1.14
	UBC_SYNC_B:1.14
	OPENBSD_2_8:1.13.0.2
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	SMP:1.11.0.8
	SMP_BASE:1.11
	kame_19991208:1.11
	OPENBSD_2_6:1.11.0.6
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.11.0.4
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.11.0.2
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2001.02.07.07.46.36;	author art;	state dead;
branches;
next	1.13;

1.13
date	2000.09.26.14.03.54;	author art;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.22.08.34.16;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	98.09.25.09.20.54;	author todd;	state Exp;
branches
	1.11.8.1;
next	1.10;

1.10
date	98.07.07.06.56.08;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	98.07.07.03.02.42;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.11.23.05.21.57;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	96.11.11.23.10.34;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	96.10.19.13.26.11;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.08.29.09.26.22;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.15.14.57.05;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.02.21.12.53.49;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.01.07.07.41.06;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.51.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.51.21;	author deraadt;	state Exp;
branches;
next	;

1.11.8.1
date	2000.03.24.09.08.27;	author niklas;	state Exp;
branches;
next	1.11.8.2;

1.11.8.2
date	2001.04.18.16.12.14;	author niklas;	state dead;
branches;
next	;


desc
@@


1.14
log
@We need to loose some weight.
If someone feels very opposed to this, the code is left in the Attic.
Just revive and _make_it_work_.
@
text
@/*	$OpenBSD: conf.c,v 1.13 2000/09/26 14:03:54 art Exp $	*/

/*-
 * Copyright (c) 1991 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *      @@(#)conf.c	7.9 (Berkeley) 5/28/91
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/conf.h>
#include <sys/vnode.h>

int	ttselect	__P((dev_t, int, struct proc *));

#include "sd.h"
bdev_decl(sw);
#include "st.h"
#include "cd.h"
#include "ch.h"
#include "ss.h"
#include "uk.h"
#include "rd.h"
bdev_decl(rd);
#include "vnd.h"
#include "ccd.h"

struct bdevsw	bdevsw[] =
{
	bdev_disk_init(NSD,sd),		/* 0: SCSI disk */
	bdev_swap_init(1,sw),		/* 1: swap pseudo-device */
	bdev_tape_init(NST,st),		/* 2: SCSI tape */
	bdev_disk_init(NRD,rd),		/* 3: ram disk */
	bdev_disk_init(NCD,cd),		/* 4: SCSI CD-ROM */
	bdev_disk_init(NVND,vnd),	/* 5: vnode disk driver */
	bdev_disk_init(NCCD,ccd),	/* 6: concatenated disk driver */
};
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);

/* open, close, write, ioctl */
#define	cdev_lpt_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), \
	(dev_type_read((*))) enodev, dev_init(c,n,write), \
	dev_init(c,n,ioctl), (dev_type_stop((*))) enodev, \
	0, seltrue, (dev_type_mmap((*))) enodev, 0}

#define	mmread	mmrw
#define	mmwrite	mmrw
cdev_decl(mm);
cdev_decl(sw);
#include "pty.h"
#include "scn.h"
cdev_decl(scn);
cdev_decl(rd);
cdev_decl(fd);
#include "bpfilter.h"
#include "tun.h"
#include "lpt.h"
cdev_decl(lpt);
#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
#endif

#ifdef IPFILTER
#define NIPF 1
#else
#define NIPF 0
#endif

struct cdevsw	cdevsw[] =
{
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_ctty_init(1,ctty),		/* 1: controlling terminal */
	cdev_mm_init(1,mm),		/* 2: /dev/{null,mem,kmem,...} */
	cdev_disk_init(NSD,sd),		/* 3: SCSI disk */
	cdev_swap_init(1,sw),		/* 4: /dev/drum (swap device) */
	cdev_tty_init(NPTY,pts),	/* 5: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 6: pseudo-tty master */
	cdev_log_init(1,log),		/* 7: /dev/klog */
	cdev_tty_init(NSCN,scn),	/* 8: serial ports */
	cdev_disk_init(NRD,rd),		/* 9: RAM disk */
	cdev_tape_init(NST,st),		/* 10: SCSI tape */
	cdev_fd_init(1,fd),		/* 11: file descriptor pseudo-device */
	cdev_disk_init(NCD,cd),		/* 12: SCSI CD-ROM */
	cdev_disk_init(NVND,vnd),	/* 13: vnode disk driver */
	cdev_bpftun_init(NBPFILTER,bpf),/* 14: Berkeley packet filter */
	cdev_bpftun_init(NTUN,tun),	/* 15: network tunnel */
	cdev_ch_init(NCH,ch),		/* 16: SCSI media changer */
	cdev_lpt_init(NLPT, lpt),	/* 17: Centronics */
	cdev_disk_init(NCCD,ccd),	/* 18: concatenated disk driver */
	cdev_gen_ipf(NIPF,ipl),         /* 19: IP filter log */
	cdev_random_init(1,random),	/* 20: random data source */
	cdev_uk_init(NUK,uk),		/* 21: unknown SCSI */
	cdev_ss_init(NSS,ss),           /* 22: SCSI scanner */
	cdev_notdef(),			/* 23 */
	cdev_notdef(),			/* 24 */
	cdev_notdef(),			/* 25 */
	cdev_notdef(),			/* 26 */
	cdev_notdef(),			/* 27 */
	cdev_notdef(),			/* 28 */
	cdev_notdef(),			/* 29 */
	cdev_notdef(),			/* 30 */
	cdev_notdef(),			/* 31 */
	cdev_notdef(),			/* 32 */
	cdev_notdef(),			/* 33 */
	cdev_notdef(),			/* 34 */
	cdev_notdef(),			/* 35 */
	cdev_notdef(),			/* 36 */
	cdev_notdef(),			/* 37 */
	cdev_notdef(),			/* 38 */
	cdev_notdef(),			/* 39 */
	cdev_notdef(),			/* 40 */
	cdev_notdef(),			/* 41 */
	cdev_notdef(),			/* 42 */
	cdev_notdef(),			/* 43 */
	cdev_notdef(),			/* 44 */
	cdev_notdef(),			/* 45 */
	cdev_notdef(),			/* 46 */
	cdev_notdef(),			/* 47 */
	cdev_notdef(),			/* 48 */
	cdev_notdef(),			/* 49 */
	cdev_notdef(),			/* 50 */
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),	/* 51: xfs communication device */
#else
	cdev_notdef(),			/* 51 */
#endif
};
int	nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);

int	mem_no = 2; 	/* major device number of memory special file */

/*
 * Swapdev is a fake device implemented
 * in sw.c used only internally to get to swstrategy.
 * It cannot be provided to the users, because the
 * swstrategy routine munches the b_dev and b_blkno entries
 * before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines. Instead, /dev/drum is
 * provided as a character (raw) device.
 */
dev_t	swapdev = makedev(1, 0);

/*
 * Returns true if dev is /dev/mem or /dev/kmem.
 */
iskmemdev(dev)
	dev_t dev;
{

	return (major(dev) == mem_no && minor(dev) < 2);
}

/*
 * Returns true if dev is /dev/zero.
 */
iszerodev(dev)
	dev_t dev;
{

	return (major(dev) == mem_no && minor(dev) == 12);
}

dev_t
getnulldev()
{
	return makedev(mem_no, 2);
}

static int chrtoblktbl[] = {
	/* XXXX This needs to be dynamic for LKMs. */
	/*VCHR*/	/*VBLK*/
	/*  0 */	NODEV,
	/*  1 */	NODEV,
	/*  2 */	NODEV,
	/*  3 */	0,
	/*  4 */	NODEV,
	/*  5 */	NODEV,
	/*  6 */	NODEV,
	/*  7 */	NODEV,
	/*  8 */	NODEV,
	/*  9 */	3,
	/* 10 */	2,
	/* 11 */	NODEV,
	/* 12 */	4,
	/* 13 */	5,
	/* 14 */	NODEV,
	/* 15 */	NODEV,
	/* 16 */	NODEV,
	/* 17 */	NODEV,
	/* 18 */	6
};

/*
 * Convert a character device number to a block device number.
 */
chrtoblk(dev)
	dev_t dev;
{
	int blkmaj;

	if (major(dev) >= nchrdev ||
	    major(dev) > sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]))
		return (NODEV);
	blkmaj = chrtoblktbl[major(dev)];
	if (blkmaj == NODEV)
		return (NODEV);
	return (makedev(blkmaj, minor(dev)));
}

/*
 * This entire table could be autoconfig()ed but that would mean that
 * the kernel's idea of the console would be out of sync with that of
 * the standalone boot.  I think it best that they both use the same
 * known algorithm unless we see a pressing need otherwise.
 */
#include <dev/cons.h>

cons_decl(scn);

struct	consdev constab[] = {
#if NSCN > 0
	cons_init(scn),
#endif
	{ 0 },
};
@


1.13
log
@Implement getnulldev that returns the dev_t for "/dev/null".
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 2000/03/22 08:34:16 niklas Exp $	*/
@


1.12
log
@Add ch to some dead ports for consistency, of course not tested.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.11 1998/09/25 09:20:54 todd Exp $	*/
d195 6
@


1.11
log
@o xfs is in the house (thanks art, for getting me started)
o all but vax are major 51
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.10 1998/07/07 06:56:08 deraadt Exp $	*/
d52 1
d121 1
a121 1
	cdev_notdef(),			/* 16 */
@


1.11.8.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a51 1
#include "ch.h"
d120 1
a120 1
	cdev_ch_init(NCH,ch),		/* 16: SCSI media changer */
@


1.11.8.2
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.11.8.1 2000/03/24 09:08:27 niklas Exp $	*/
@


1.10
log
@oops, i did not handle nchrdev correctly
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.9 1998/07/07 03:02:42 deraadt Exp $	*/
d91 4
d127 33
@


1.9
log
@fix chrtoblk() so that it returne ENODEV for entries beyond the end of the table
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.8 1997/11/23 05:21:57 mickey Exp $	*/
d191 1
a191 1
	if (major(dev) >= MAXDEV ||
@


1.8
log
@use MI cdev_decl(ipl)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.7 1996/11/11 23:10:34 kstailey Exp $	*/
d191 2
a192 1
	if (major(dev) >= nchrdev)
@


1.7
log
@Updates for SCSI scanner and SCSI unknown devices.
Removed MI *dev_decl() stuff that is now in sys/conf.h
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.6 1996/10/19 13:26:11 mickey Exp $	*/
a91 2
/* open, close, read, ioctl */
cdev_decl(ipl);
@


1.6
log
@random device is permanent now.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 1996/08/29 09:26:22 deraadt Exp $	*/
a48 1
bdev_decl(sd);
d51 3
a53 1
bdev_decl(st);
a55 2
#include "cd.h"
bdev_decl(cd);
a56 1
bdev_decl(vnd);
a57 1
bdev_decl(ccd);
a77 2
cdev_decl(cn);
cdev_decl(ctty);
a80 1
cdev_decl(sd);
a82 7
#define	ptstty		ptytty
#define	ptsioctl	ptyioctl
cdev_decl(pts);
#define	ptctty		ptytty
#define	ptcioctl	ptyioctl
cdev_decl(ptc);
cdev_decl(log);
a85 1
cdev_decl(st);
a86 3
cdev_decl(cd);
cdev_decl(vnd);
cdev_decl(ccd);
a87 1
cdev_decl(bpf);
a88 1
cdev_decl(tun);
a90 1
cdev_decl(random);
d123 2
@


1.5
log
@rnd -> random
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 1996/07/15 14:57:05 mickey Exp $	*/
a109 1
#include "random.h"
d142 1
a142 1
	cdev_random_init(NRANDOM,random), /* 20: random data source */
@


1.4
log
@add rnd driver
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 1996/02/21 12:53:49 mickey Exp $	*/
d110 2
a111 2
#include "rnd.h"
cdev_decl(rnd);
d143 1
a143 1
	cdev_rnd_init(NRND,rnd),	/* 20: random data source */
@


1.3
log
@move cdev_gen_ipf() macro to the <sys/conf.h>, so the lkm
for ipl is possible and also, why it is in <machine/conf.c> while
it (ipl) is in <net/*> ???
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.26 1995/09/26 20:16:25 phil Exp $	*/
d110 2
d143 1
@


1.2
log
@created devices for the IP filter log on all architectures
@
text
@d1 1
a1 1
/*	$NetBSD: conf.c,v 1.26 1995/09/26 20:16:25 phil Exp $	*/
a112 5
#define	cdev_gen_ipf(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) nullop, 0, (dev_type_select((*))) enodev, \
	(dev_type_mmap((*))) enodev, 0 }
@


1.1
log
@Initial revision
@
text
@d111 13
d145 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
