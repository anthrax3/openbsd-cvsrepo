head	1.24;
access;
symbols
	OPENBSD_5_4:1.23.0.4
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.23.0.2
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.22.0.4
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.2
	OPENBSD_5_0:1.21.0.2
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.19.0.2
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.18.0.2
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.15.0.16
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.12
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.10
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.8
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.6
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.14.0.16
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.14
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.12
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.10
	OPENBSD_3_6_BASE:1.14
	SMP_SYNC_A:1.14
	SMP_SYNC_B:1.14
	OPENBSD_3_5:1.14.0.8
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.6
	OPENBSD_3_4_BASE:1.14
	UBC_SYNC_A:1.14
	OPENBSD_3_3:1.14.0.4
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.14
	UBC:1.9.0.4
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	SMP:1.5.0.2
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.24
date	2013.08.07.07.29.20;	author mpi;	state dead;
branches;
next	1.23;

1.23
date	2012.08.28.19.52.18;	author kettenis;	state Exp;
branches;
next	1.22;

1.22
date	2011.10.10.19.42.36;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2011.05.21.20.47.39;	author kettenis;	state Exp;
branches;
next	1.20;

1.20
date	2011.05.21.19.23.29;	author kettenis;	state Exp;
branches;
next	1.19;

1.19
date	2010.12.04.17.06.31;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2010.06.29.22.08.28;	author jordan;	state Exp;
branches;
next	1.17;

1.17
date	2009.08.22.02.54.51;	author mk;	state Exp;
branches;
next	1.16;

1.16
date	2009.07.20.23.40.43;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2006.05.10.00.07.40;	author brad;	state Exp;
branches;
next	1.14;

1.14
date	2002.09.15.09.01.59;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2002.09.15.02.02.44;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2002.07.23.17.53.25;	author drahn;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.14.03.15.59;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.03.14.01.26.42;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.08.25.10.13.29;	author art;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2001.08.17.22.26.58;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.09.02.26.05;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.19.04.53.06;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	99.11.08.23.49.00;	author rahnds;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	98.08.06.15.04.01;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	98.04.06.20.24.22;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	97.10.20.19.52.43;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	97.10.11.11.29.31;	author pefo;	state Exp;
branches;
next	;

1.5.2.1
date	2001.05.14.21.36.52;	author niklas;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2001.10.31.03.07.55;	author nate;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2001.11.13.22.14.34;	author niklas;	state dead;
branches;
next	1.5.2.4;

1.5.2.4
date	2002.03.29.19.46.00;	author niklas;	state Exp;
branches;
next	1.5.2.5;

1.5.2.5
date	2003.03.27.23.42.35;	author niklas;	state Exp;
branches;
next	;

1.9.4.1
date	2002.06.11.03.37.28;	author art;	state Exp;
branches;
next	1.9.4.2;

1.9.4.2
date	2002.10.29.00.28.08;	author art;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Mimic what's done on sparc64 and parse the OpenFirmware device tree to
enumerate the pci devices.  This allow us to not store the interrupt
vector in the interrupt line register and to not try to attach pci
devices disabled by firmware.

With inputs from and ok kettenis@@
@
text
@/*	$OpenBSD: pci_machdep.h,v 1.23 2012/08/28 19:52:18 kettenis Exp $	*/

/*
 * Copyright (c) 1996 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 *
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

/*
 * Machine-specific definitions for PCI autoconfiguration.
 */

/*
 * Types provided to machine-independent PCI code
 */
typedef struct ppc_pci_chipset *pci_chipset_tag_t;
typedef u_long pcitag_t;
typedef u_long pci_intr_handle_t;

/*
 * ppc-specific PCI structure and type definitions.
 * NOT TO BE USED DIRECTLY BY MACHINE INDEPENDENT CODE.
 */
struct ppc_pci_chipset {
	void		*pc_conf_v;
	void		(*pc_attach_hook)(struct device *,
			    struct device *, struct pcibus_attach_args *);
	int		(*pc_bus_maxdevs)(void *, int);
	pcitag_t	(*pc_make_tag)(void *, int, int, int);
	void		(*pc_decompose_tag)(void *, pcitag_t, int *,
			    int *, int *);
	int		(*pc_conf_size)(void *, pcitag_t);
	pcireg_t	(*pc_conf_read)(void *, pcitag_t, int);
	void		(*pc_conf_write)(void *, pcitag_t, int, pcireg_t);

	void		*pc_intr_v;
	int		(*pc_intr_map)(void *, pcitag_t, int, int,
			    pci_intr_handle_t *);
	const char	*(*pc_intr_string)(void *, pci_intr_handle_t);
	int		(*pc_intr_line)(void *, pci_intr_handle_t);
	void		*(*pc_intr_establish)(void *, pci_intr_handle_t,
			    int, int (*)(void *), void *, const char *);
	void		(*pc_intr_disestablish)(void *, void *);
	int		(*pc_ether_hw_addr)(struct ppc_pci_chipset *, u_int8_t *);
};

/*
 * Functions provided to machine-independent PCI code.
 */
#define	pci_attach_hook(p, s, pba)					\
    (*(pba)->pba_pc->pc_attach_hook)((p), (s), (pba))
#define	pci_bus_maxdevs(c, b)						\
    (*(c)->pc_bus_maxdevs)((c)->pc_conf_v, (b))
#define	pci_make_tag(c, b, d, f)					\
    (*(c)->pc_make_tag)((c)->pc_conf_v, (b), (d), (f))
#define	pci_decompose_tag(c, t, bp, dp, fp)				\
    (*(c)->pc_decompose_tag)((c)->pc_conf_v, (t), (bp), (dp), (fp))
#define	pci_conf_size(c, t)						\
    (*(c)->pc_conf_size)((c)->pc_conf_v, (t))
#define	pci_conf_read(c, t, r)						\
    (*(c)->pc_conf_read)((c)->pc_conf_v, (t), (r))
#define	pci_conf_write(c, t, r, v)					\
    (*(c)->pc_conf_write)((c)->pc_conf_v, (t), (r), (v))
#define	pci_intr_map(pa, ihp)						\
    (*((pa)->pa_pc)->pc_intr_map)((pa)->pa_pc->pc_intr_v, 		\
	(pa)->pa_intrtag, (pa)->pa_intrpin, (pa)->pa_intrline, (ihp))
#define	pci_intr_map_msi(pa, ihp)	(-1)
#define	pci_intr_string(c, ih)						\
    (*(c)->pc_intr_string)((c)->pc_intr_v, (ih))
#define	pci_intr_line(c, ih)						\
    (*(c)->pc_intr_line)((c)->pc_intr_v, (ih))
#define	pci_intr_establish(c, ih, l, h, a, nm)				\
    (*(c)->pc_intr_establish)((c)->pc_intr_v, (ih), (l), (h), (a), (nm))
#define	pci_intr_disestablish(c, iv)					\
    (*(c)->pc_intr_disestablish)((c)->pc_intr_v, (iv))
#define	pci_ether_hw_addr(c, s)						\
    (*(c)->pc_ether_hw_addr)((c), (s))
#define	pci_probe_device_hook(c, a)	(0)

#define	pci_min_powerstate(c, t)	(PCI_PMCSR_STATE_D3)

#define	pci_dev_postattach(a, b)
@


1.23
log
@Implement pci_min_powerstate().
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.22 2011/10/10 19:42:36 miod Exp $	*/
@


1.22
log
@Introduce pci_probe_device_hook(pci_chipset_tag_t, struct pci_attach_args *).
This mandatory function will get invoked in pci_probe_device(), and allows
a pci host driver to alter the pci_attach_args passed to a device when
attaching.

This function will also, if returning non-zero, cause the device to be
skipped completely during all the phases of the PCI device discovery
(i.e. ressource enumeration, ressource assignment, and actual attachment).
This particular feature is experimental and might be reverted in the future
(or the scope narrowed to device attachment only).

A dummy #define pci_probe_device_hook() 0 is added to all platforms except
sgi, where real functions (currently only returning 0) are added; real meat
will be added shortly.

Discussed at s2k11, no objection from the usual suspects.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.21 2011/05/21 20:47:39 kettenis Exp $	*/
d100 2
@


1.21
log
@It's better to have the pci_intr_map_msi() stub return -1.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.20 2011/05/21 19:23:29 kettenis Exp $	*/
d99 1
@


1.20
log
@Add pci_intr_map_msi() stub.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.19 2010/12/04 17:06:31 miod Exp $	*/
d88 1
a88 1
#define	pci_intr_map_msi(pa, ihp)	(1)
@


1.19
log
@Introduce a new pci routine, pci_conf_size(), which returns the size of a
given pcitag_t configuration address space. Currently, all pci controllers
will return the usual 0x100 bytes of PCI configuration space, but this will
eventually change on PCIe-capable controlers.
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.18 2010/06/29 22:08:28 jordan Exp $	*/
d88 1
@


1.18
log
@Add support for mapping ACPI to PCI devices
ok kettenis, deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.17 2009/08/22 02:54:51 mk Exp $	*/
d53 1
d79 2
@


1.17
log
@Constify the what/name parameter of pci_intr_establish().

Tested by myself, sthen, oga, kettenis, and jasper.
Input from sthen and jasper.

ok kettenis

(Manpage follows shortly.)
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.16 2009/07/20 23:40:43 miod Exp $	*/
d96 1
@


1.16
log
@Pass a pci_chipset_tag_t to pci_intr_line(), to eventually allow the
logic to be chipset dependent; no functional change yet.
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.15 2006/05/10 00:07:40 brad Exp $	*/
d62 1
a62 1
			    int, int (*)(void *), void *, char *);
@


1.15
log
@Use a macro in the MI powerpc PCI header for pci_intr_line() instead
of a function in the MD macppc host bridge code.

ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.14 2002/09/15 09:01:59 deraadt Exp $	*/
a66 2
int		pci_intr_line(pci_intr_handle_t ih);

a84 1
#define	pci_intr_line(ih)	(ih)
d87 2
@


1.14
log
@backout premature
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.12 2002/07/23 17:53:25 drahn Exp $	*/
d87 1
@


1.13
log
@KNF
@
text
@d85 1
a85 1
    (*((pa)->pa_pc)->pc_intr_map)((pa)->pa_pc->pc_intr_v,		\
@


1.12
log
@Cardbus/pcmcia support for macppc. parts borrowed from NetBSD, and other
portions of the tree.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.11 2002/03/14 03:15:59 millert Exp $	*/
d85 1
a85 1
    (*((pa)->pa_pc)->pc_intr_map)((pa)->pa_pc->pc_intr_v, 		\
@


1.11
log
@Final __P removal plus some cosmetic fixups
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.10 2002/03/14 01:26:42 millert Exp $	*/
d66 2
@


1.10
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.9 2001/08/25 10:13:29 art Exp $	*/
d61 2
a62 2
	void		*(*pc_intr_establish) __P((void *, pci_intr_handle_t,
			    int, int (*)(void *), void *, char *));
@


1.9
log
@Change pci_intr_map to take pci_attach_args as an argument.
All callers actually took all arguments to pci_intr_map from pci_attach_args
structs, so this simplifies code.
This also allows more complicated interrupt assignment schemes like the one
on sparc64.

This makes sparc64 pci interrupts work.

Inspired by the same change in NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.8 2001/08/17 22:26:58 mickey Exp $	*/
d47 8
a54 8
	void		(*pc_attach_hook) __P((struct device *,
			    struct device *, struct pcibus_attach_args *));
	int		(*pc_bus_maxdevs) __P((void *, int));
	pcitag_t	(*pc_make_tag) __P((void *, int, int, int));
	void		(*pc_decompose_tag) __P((void *, pcitag_t, int *,
			    int *, int *));
	pcireg_t	(*pc_conf_read) __P((void *, pcitag_t, int));
	void		(*pc_conf_write) __P((void *, pcitag_t, int, pcireg_t));
d57 4
a60 4
	int		(*pc_intr_map) __P((void *, pcitag_t, int, int,
			    pci_intr_handle_t *));
	const char	*(*pc_intr_string) __P((void *, pci_intr_handle_t));
	int		(*pc_intr_line) __P((void *, pci_intr_handle_t));
d63 2
a64 2
	void		(*pc_intr_disestablish) __P((void *, void *));
	int		(*pc_ether_hw_addr) __P((struct ppc_pci_chipset *, u_int8_t *));
@


1.9.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.9 2001/08/25 10:13:29 art Exp $	*/
d47 8
a54 8
	void		(*pc_attach_hook)(struct device *,
			    struct device *, struct pcibus_attach_args *);
	int		(*pc_bus_maxdevs)(void *, int);
	pcitag_t	(*pc_make_tag)(void *, int, int, int);
	void		(*pc_decompose_tag)(void *, pcitag_t, int *,
			    int *, int *);
	pcireg_t	(*pc_conf_read)(void *, pcitag_t, int);
	void		(*pc_conf_write)(void *, pcitag_t, int, pcireg_t);
d57 8
a64 8
	int		(*pc_intr_map)(void *, pcitag_t, int, int,
			    pci_intr_handle_t *);
	const char	*(*pc_intr_string)(void *, pci_intr_handle_t);
	int		(*pc_intr_line)(void *, pci_intr_handle_t);
	void		*(*pc_intr_establish)(void *, pci_intr_handle_t,
			    int, int (*)(void *), void *, char *);
	void		(*pc_intr_disestablish)(void *, void *);
	int		(*pc_ether_hw_addr)(struct ppc_pci_chipset *, u_int8_t *);
@


1.9.4.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.9.4.1 2002/06/11 03:37:28 art Exp $	*/
a65 2

int		pci_intr_line(pci_intr_handle_t ih);
@


1.8
log
@provide a way to get the number used for irq line, not only a string
representation, this is needed for devices like cbb which pass
the interrupt line down to the cardbus attachment and not
getting the right line before pci_intr_map() has done it's
dirty deed.
tested on i386 by jason@@, compiles on alpha by art@@.
ppc and mveppc are to be test-compiled, but should work (;
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.7 2001/07/09 02:26:05 mickey Exp $	*/
d82 3
a84 2
#define	pci_intr_map(c, it, ip, il, ihp)				\
    (*(c)->pc_intr_map)((c)->pc_intr_v, (it), (ip), (il), (ihp))
@


1.7
log
@looking at other archs vtophys lives there
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.6 2000/10/19 04:53:06 drahn Exp $	*/
d60 1
@


1.6
log
@Changes to pci and if_gm to support obtaining the ethernet hardware address
from the pci bus. This is in preference to adding openfirmware code to
the device drivers. If there was a known way of obtaining the ethernet
hardware address from a eeprom or other methods that would be used, but
the only known way to get this information for the Apple machines with
if_gm is via openfirmware.

This modifies a previous mechanism that was used to obtain similar information
from different openfirmware systems, however the old mechanism would create
information such as media type. This information was hardcoded into
that code. Now the code only returns the actual address which is the
only informatin that openfirmware provides.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.5 1999/11/08 23:49:00 rahnds Exp $	*/
a90 2

vm_offset_t vtophys __P((void *));
@


1.5
log
@Changes for imac support. support for VI computers and MCG Powerstack
will need to be merged back in. Both are currently untested.
mac interrupt support is currently a big hack and needs to be redesigned
as part of the system, several of the mac drivers need busified also.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.4 1998/08/06 15:04:01 pefo Exp $	*/
d63 1
a63 1
	int		(*pc_ether_hw_addr) __P((u_int8_t *, u_int8_t, u_int8_t));
a65 2
#define	NEED_PCI_ETHER_HW_ADDR_FUNC	/* srom less pci ether adapter */

d89 2
a90 2
#define	pci_ether_hw_addr(c, p, b, s)					\
    (*(c)->pc_ether_hw_addr)((p), (b), (s))
@


1.5.2.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.6 2000/10/19 04:53:06 drahn Exp $	*/
d63 1
a63 1
	int		(*pc_ether_hw_addr) __P((struct ppc_pci_chipset *, u_int8_t *));
d66 2
d91 2
a92 2
#define	pci_ether_hw_addr(c, s)						\
    (*(c)->pc_ether_hw_addr)((c), (s))
@


1.5.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.5.2.1 2001/05/14 21:36:52 niklas Exp $	*/
a59 1
	int		(*pc_intr_line) __P((void *, pci_intr_handle_t));
d81 2
a82 3
#define	pci_intr_map(pa, ihp)						\
    (*((pa)->pa_pc)->pc_intr_map)((pa)->pa_pc->pc_intr_v, 		\
	(pa)->pa_intrtag, (pa)->pa_intrpin, (pa)->pa_intrline, (ihp))
d91 2
@


1.5.2.3
log
@repair
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.5.2.2 2001/10/31 03:07:55 nate Exp $	*/
@


1.5.2.4
log
@Re-add missing pieces
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.11 2002/03/14 03:15:59 millert Exp $	*/
d47 8
a54 8
	void		(*pc_attach_hook)(struct device *,
			    struct device *, struct pcibus_attach_args *);
	int		(*pc_bus_maxdevs)(void *, int);
	pcitag_t	(*pc_make_tag)(void *, int, int, int);
	void		(*pc_decompose_tag)(void *, pcitag_t, int *,
			    int *, int *);
	pcireg_t	(*pc_conf_read)(void *, pcitag_t, int);
	void		(*pc_conf_write)(void *, pcitag_t, int, pcireg_t);
d57 8
a64 8
	int		(*pc_intr_map)(void *, pcitag_t, int, int,
			    pci_intr_handle_t *);
	const char	*(*pc_intr_string)(void *, pci_intr_handle_t);
	int		(*pc_intr_line)(void *, pci_intr_handle_t);
	void		*(*pc_intr_establish)(void *, pci_intr_handle_t,
			    int, int (*)(void *), void *, char *);
	void		(*pc_intr_disestablish)(void *, void *);
	int		(*pc_ether_hw_addr)(struct ppc_pci_chipset *, u_int8_t *);
@


1.5.2.5
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a65 2

int		pci_intr_line(pci_intr_handle_t ih);
@


1.4
log
@Some small fixes for non ofw systems
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.3 1998/04/06 20:24:22 pefo Exp $	*/
d37 1
a37 1
typedef struct p4e_pci_chipset *pci_chipset_tag_t;
d42 1
a42 1
 * p4e-specific PCI structure and type definitions.
d45 1
a45 1
struct p4e_pci_chipset {
@


1.3
log
@type fix
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.2 1997/10/20 19:52:43 pefo Exp $	*/
d63 1
a63 1
	int		(*pc_ether_hw_addr) __P((u_int8_t *));
d66 2
d91 2
a92 2
#define	pci_ether_hw_addr(c, p)						\
    (*(c)->pc_ether_hw_addr)((p))
@


1.2
log
@Add IPSEC to GENERIC, move if_de srom emul to pci
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.1 1997/10/11 11:29:31 pefo Exp $	*/
d63 1
a63 1
	void		(*pc_ether_hw_addr) __P((u_int8_t *));
@


1.1
log
@PCI bus code for monolithic PowerPC kernels.
@
text
@d1 1
a1 1
/*	$OpenBSD: pci_machdep.h,v 1.2 1997/04/19 17:20:02 pefo Exp $	*/
d63 1
a63 1
	int		(*pc_ether_hw_addr) __P((u_int8_t *));
@
