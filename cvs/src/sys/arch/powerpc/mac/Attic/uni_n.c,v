head	1.6;
access;
symbols
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	UBC_SYNC_A:1.6
	UBC_SYNC_B:1.6
	SMP:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2001.09.01.15.50.00;	author drahn;	state dead;
branches;
next	1.5;

1.5
date	2001.06.29.06.55.36;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.25.23.29.57;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.29.01.20.44;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.14.03.24.54;	author deraadt;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2000.10.16.00.18.01;	author drahn;	state Exp;
branches;
next	;

1.2.4.1
date	2001.05.14.21.36.50;	author niklas;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2001.07.04.10.22.39;	author niklas;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2001.10.31.03.07.55;	author nate;	state dead;
branches;
next	;


desc
@@


1.6
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/mac to macppc/dev
@
text
@/*	$OpenBSD: uni_n.c,v 1.5 2001/06/29 06:55:36 drahn Exp $	*/

/*
 * Copyright (c) 1998-2001 Dale Rahn. All rights reserved.
 *
 *   
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Dale Rahn.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */  

#include <sys/param.h>
#include <sys/device.h>
#include <sys/systm.h>

#include <machine/bus.h>
#include <machine/autoconf.h>

#include <dev/ofw/openfirm.h>

static int	memcmatch __P((struct device *, void *, void *));
static void	memcattach __P((struct device *, struct device *, void *));

struct memc_softc {
	struct device sc_dev;
	char *baseaddr;
};
/* Driver definition */
struct cfdriver memc_cd = {
	NULL, "memc", DV_DULL
};
/* Driver definition */
struct cfattach memc_ca = {
	sizeof(struct memc_softc), memcmatch, memcattach
};

void *uni_n_config(int handle);

int
memcmatch(parent, cf, aux)
	struct device *parent;
	void *cf;
	void *aux;
{
	struct confargs *ca = aux;
	static int memc_attached = 0;

	/* allow only one instance */
	if (memc_attached == 0) {
		if (0 == strcmp (ca->ca_name, "memc")) {
			return 1;
		}
	}
	return 0;
}

static void
memcattach(parent, self, aux)
	struct device *parent, *self;
	void   *aux;
{
	struct confargs *ca = aux;
	int len;
	char name[64];
	struct memc_softc *sc = (struct memc_softc *)self;

	len = OF_getprop(ca->ca_node, "name", name, sizeof name);
	if (len > 0) {
		name[len] = 0;
	}
	if (strcmp (name, "uni-n")== 0) {
		sc->baseaddr = uni_n_config(ca->ca_node);
	}
	printf (": %s\n", name);
}
void *
uni_n_config(int handle)
{
	char name[20];
	char *baseaddr;
	int *ctladdr;
	u_int32_t address;

	if (OF_getprop(handle, "name", name, sizeof name) > 0) {
		/* sanity test */
		if (!strcmp (name, "uni-n")) {
			if (OF_getprop(handle, "reg", &address,
			    sizeof address) > 0) {
				baseaddr = mapiodev(address, NBPG);
				ctladdr = (void*)(baseaddr + 0x20);
				*ctladdr |= 0x02;
			}
		return baseaddr;
		}
	}
	return 0;
}
@


1.5
log
@Include/header cleanup. More.
@
text
@d1 1
a1 1
/*	$OpenBSD: uni_n.c,v 1.4 2001/06/25 23:29:57 drahn Exp $	*/
@


1.4
log
@closer to building with -Wno-uninitialized
@
text
@d1 1
a1 1
/*	$OpenBSD: uni_n.c,v 1.3 2001/05/29 01:20:44 drahn Exp $	*/
d35 2
@


1.3
log
@Hardware clock support, via adb.
This reduces the dependancy on openfirmware somewhat.
Since Openfirmware is not actually used for anything,
it is no longer necessary to configure it. so several lines of
useless dmesg are now gone.

This does not have clock setting code enabled yet.
All of the code is in place, but needs further testing before
it is trusted.

I wish Apple would store UTC not localtime in the hardware clock,
besides the fact that the clock base is 1904.

Need to keep the clock sane for dual boot machines.
@
text
@d1 1
a1 1
/*	$OpenBSD: uni_n.c,v 1.2 2001/03/14 03:24:54 deraadt Exp $	*/
a64 1
	int node;
a65 2
	int len;
	char name[64];
a83 2
	u_int32_t address;
	u_int32_t *ctladdr;
@


1.2
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: uni_n.c,v 1.1 2000/10/16 00:18:01 drahn Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Dale Rahn. All rights reserved.
d36 1
d40 61
a100 1
void
a112 1
				printf("found uni-n at address %x\n", address);
d117 1
d120 1
@


1.2.4.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: uni_n.c,v 1.2 2001/03/14 03:24:54 deraadt Exp $	*/
@


1.2.4.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: uni_n.c,v 1.2.4.1 2001/05/14 21:36:50 niklas Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2001 Dale Rahn. All rights reserved.
a34 2
#include <sys/systm.h>

a35 1
#include <machine/autoconf.h>
d39 1
a39 56
static int	memcmatch __P((struct device *, void *, void *));
static void	memcattach __P((struct device *, struct device *, void *));

struct memc_softc {
	struct device sc_dev;
	char *baseaddr;
};
/* Driver definition */
struct cfdriver memc_cd = {
	NULL, "memc", DV_DULL
};
/* Driver definition */
struct cfattach memc_ca = {
	sizeof(struct memc_softc), memcmatch, memcattach
};

void *uni_n_config(int handle);

int
memcmatch(parent, cf, aux)
	struct device *parent;
	void *cf;
	void *aux;
{
	struct confargs *ca = aux;
	static int memc_attached = 0;

	/* allow only one instance */
	if (memc_attached == 0) {
		if (0 == strcmp (ca->ca_name, "memc")) {
			return 1;
		}
	}
	return 0;
}

static void
memcattach(parent, self, aux)
	struct device *parent, *self;
	void   *aux;
{
	struct confargs *ca = aux;
	int len;
	char name[64];
	struct memc_softc *sc = (struct memc_softc *)self;

	len = OF_getprop(ca->ca_node, "name", name, sizeof name);
	if (len > 0) {
		name[len] = 0;
	}
	if (strcmp (name, "uni-n")== 0) {
		sc->baseaddr = uni_n_config(ca->ca_node);
	}
	printf (": %s\n", name);
}
void *
d52 1
a56 1
		return baseaddr;
a58 1
	return 0;
@


1.2.4.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: uni_n.c,v 1.2.4.2 2001/07/04 10:22:39 niklas Exp $	*/
@


1.1
log
@configuration changes to enable the uni-north memory controller to enable
the ethernet pci bus. Allows the gm ethernet controller to configure.
@
text
@d1 1
a1 1
/*	$OpenBSD: uni_n.c,v 1.1 2000/10/16 00:15:26 drahn Exp $	*/
d3 29
a31 2

/* put BSD copyright here */
d46 1
d49 1
a49 1
		if (!strcmp (name, "uni-n")) { 
d51 1
a51 2
					sizeof address) > 0)
			{
a58 1
	return;
@

