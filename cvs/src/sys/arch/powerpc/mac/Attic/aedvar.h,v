head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	UBC_SYNC_A:1.3
	UBC_SYNC_B:1.3
	SMP:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2001.09.01.15.49.59;	author drahn;	state dead;
branches;
next	1.2;

1.2
date	2001.07.04.08.38.50;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.28.19.49.45;	author drahn;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2001.05.14.21.36.46;	author niklas;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2001.10.31.03.07.55;	author nate;	state dead;
branches;
next	;


desc
@@


1.3
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/mac to macppc/dev
@
text
@/*	$OpenBSD: aedvar.h,v 1.2 2001/07/04 08:38:50 niklas Exp $	*/
/*	$NetBSD: aedvar.h,v 1.2 2000/03/23 06:40:33 thorpej Exp $	*/

/*
 * Copyright (C) 1994	Bradley A. Grantham
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Bradley A. Grantham.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifdef __NetBSD__
#include <sys/callout.h>
#endif /* __NetBSD__ */
#ifdef __OpenBSD__
#include <sys/timeout.h>
#endif /* __OpenBSD__ */
#include <machine/adbsys.h>

/* Event queue definitions */
#ifndef AED_MAX_EVENTS
#define AED_MAX_EVENTS 200	/* Maximum events to be kept in queue */  
				/* maybe should be higher for slower macs? */
#endif				/* AED_MAX_EVENTS */

struct aed_softc {
	struct  device  sc_dev;

#ifdef __NetBSD__
	struct callout sc_repeat_ch;
#endif /* __NetBSD__ */
#ifdef __OpenBSD__
	struct timeout sc_repeat_ch;
#endif /* __OpenBSD__ */

	/* ADB info */
	u_char		origaddr;	/* ADB device type (ADBADDR_AED) */
	u_char		adbaddr;	/* current ADB address */
	u_char		handler_id;	/* type of device */

	/* ADB event queue */
	adb_event_t	sc_evq[AED_MAX_EVENTS];	/* the queue */
	int		sc_evq_tail;	/* event queue tail pointer */
	int		sc_evq_len;	/* event queue length */

	/* Keyboard repeat state */
	int		sc_rptdelay;	/* ticks before auto-repeat */
	int		sc_rptinterval;	/* ticks between auto-repeat */
	int		sc_repeating;	/* key that is auto-repeating */
	adb_event_t	sc_rptevent;	/* event to auto-repeat */

	int		sc_buttons;	/* mouse button state */

	struct selinfo	sc_selinfo;	/* select() info */
	struct proc *	sc_ioproc;	/* process to wakeup */

	int		sc_open;	/* Are we queuing events? */
	int		sc_options;	/* config options */
};

/* Options */
#define AED_MSEMUL	0x1		/* emulate mouse buttons */

void	aed_input __P((adb_event_t *event));
int	aedopen __P((dev_t dev, int flag, int mode, struct proc *p));
int	aedclose __P((dev_t dev, int flag, int mode, struct proc *p));
int	aedread __P((dev_t dev, struct uio *uio, int flag));
int	aedwrite __P((dev_t dev, struct uio *uio, int flag));
int	aedioctl __P((dev_t , int , caddr_t , int , struct proc *));
int	aedpoll __P((dev_t dev, int events, struct proc *p));
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: aedvar.h,v 1.2 2000/03/23 06:40:33 thorpej Exp $	*/
@


1.1
log
@Adding ADB keyboard/mouse/apple event drivers. From Nbsd with changes to build.
aed configures on newer systems. akbd and ams not tested on system which
has a real ADB bus.
@
text
@d1 1
@


1.1.4.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@@


1.1.4.2
log
@Sync the SMP branch to something just after 3.0
@
text
@@


