head	1.37;
access;
symbols
	OPENBSD_6_1_BASE:1.37
	OPENBSD_6_0:1.36.0.14
	OPENBSD_6_0_BASE:1.36
	OPENBSD_5_9:1.36.0.10
	OPENBSD_5_9_BASE:1.36
	OPENBSD_5_8:1.36.0.12
	OPENBSD_5_8_BASE:1.36
	OPENBSD_5_7:1.36.0.4
	OPENBSD_5_7_BASE:1.36
	OPENBSD_5_6:1.36.0.8
	OPENBSD_5_6_BASE:1.36
	OPENBSD_5_5:1.36.0.6
	OPENBSD_5_5_BASE:1.36
	OPENBSD_5_4:1.36.0.2
	OPENBSD_5_4_BASE:1.36
	OPENBSD_5_3:1.32.0.6
	OPENBSD_5_3_BASE:1.32
	OPENBSD_5_2:1.32.0.4
	OPENBSD_5_2_BASE:1.32
	OPENBSD_5_1_BASE:1.32
	OPENBSD_5_1:1.32.0.2
	OPENBSD_5_0:1.31.0.2
	OPENBSD_5_0_BASE:1.31
	OPENBSD_4_9:1.30.0.14
	OPENBSD_4_9_BASE:1.30
	OPENBSD_4_8:1.30.0.12
	OPENBSD_4_8_BASE:1.30
	OPENBSD_4_7:1.30.0.8
	OPENBSD_4_7_BASE:1.30
	OPENBSD_4_6:1.30.0.10
	OPENBSD_4_6_BASE:1.30
	OPENBSD_4_5:1.30.0.6
	OPENBSD_4_5_BASE:1.30
	OPENBSD_4_4:1.30.0.4
	OPENBSD_4_4_BASE:1.30
	OPENBSD_4_3:1.30.0.2
	OPENBSD_4_3_BASE:1.30
	OPENBSD_4_2:1.29.0.2
	OPENBSD_4_2_BASE:1.29
	OPENBSD_4_1:1.28.0.4
	OPENBSD_4_1_BASE:1.28
	OPENBSD_4_0:1.28.0.2
	OPENBSD_4_0_BASE:1.28
	OPENBSD_3_9:1.27.0.2
	OPENBSD_3_9_BASE:1.27
	OPENBSD_3_8:1.25.0.6
	OPENBSD_3_8_BASE:1.25
	OPENBSD_3_7:1.25.0.4
	OPENBSD_3_7_BASE:1.25
	OPENBSD_3_6:1.25.0.2
	OPENBSD_3_6_BASE:1.25
	SMP_SYNC_A:1.23
	SMP_SYNC_B:1.23
	OPENBSD_3_5:1.22.0.6
	OPENBSD_3_5_BASE:1.22
	OPENBSD_3_4:1.22.0.4
	OPENBSD_3_4_BASE:1.22
	UBC_SYNC_A:1.22
	OPENBSD_3_3:1.22.0.2
	OPENBSD_3_3_BASE:1.22
	OPENBSD_3_2:1.21.0.4
	OPENBSD_3_2_BASE:1.21
	OPENBSD_3_1:1.21.0.2
	OPENBSD_3_1_BASE:1.21
	UBC_SYNC_B:1.21
	UBC:1.19.0.2
	UBC_BASE:1.19
	OPENBSD_3_0:1.18.0.2
	OPENBSD_3_0_BASE:1.18
	OPENBSD_2_9:1.13.0.2
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	SMP:1.8.0.2
	SMP_BASE:1.8
	kame_19991208:1.8
	OPENBSD_2_6:1.7.0.6
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	powerpc_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.37
date	2016.09.03.14.25.27;	author bluhm;	state Exp;
branches;
next	1.36;
commitid	9KYyCUntEsgBdw9n;

1.36
date	2013.06.13.11.29.20;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2013.03.26.05.04.10;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2013.03.25.17.46.24;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2013.03.23.16.12.26;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2011.09.08.03.40.32;	author guenther;	state Exp;
branches;
next	1.31;

1.31
date	2011.04.07.15.45.17;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2007.11.04.13.43.39;	author martin;	state Exp;
branches;
next	1.29;

1.29
date	2007.05.28.21.02.49;	author thib;	state Exp;
branches;
next	1.28;

1.28
date	2006.03.19.22.01.32;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2005.10.26.18.57.51;	author martin;	state Exp;
branches;
next	1.26;

1.26
date	2005.09.12.23.05.05;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2004.08.06.22.31.31;	author mickey;	state Exp;
branches;
next	1.24;

1.24
date	2004.06.24.22.35.56;	author drahn;	state Exp;
branches;
next	1.23;

1.23
date	2004.04.19.22.55.50;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2002.11.21.03.59.16;	author drahn;	state Exp;
branches;
next	1.21;

1.21
date	2002.03.21.02.08.40;	author drahn;	state Exp;
branches;
next	1.20;

1.20
date	2002.03.13.18.27.36;	author drahn;	state Exp;
branches;
next	1.19;

1.19
date	2001.12.05.01.57.15;	author provos;	state Exp;
branches
	1.19.2.1;
next	1.18;

1.18
date	2001.09.01.15.49.05;	author drahn;	state Exp;
branches;
next	1.17;

1.17
date	2001.07.09.02.14.05;	author mickey;	state Exp;
branches;
next	1.16;

1.16
date	2001.07.06.02.07.43;	author provos;	state Exp;
branches;
next	1.15;

1.15
date	2001.06.23.01.59.05;	author drahn;	state Exp;
branches;
next	1.14;

1.14
date	2001.05.05.20.56.50;	author art;	state Exp;
branches;
next	1.13;

1.13
date	2001.02.07.06.03.53;	author drahn;	state Exp;
branches;
next	1.12;

1.12
date	2001.01.24.21.17.25;	author drahn;	state Exp;
branches;
next	1.11;

1.11
date	2000.09.14.18.26.52;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2000.07.28.13.04.29;	author rahnds;	state Exp;
branches;
next	1.9;

1.9
date	2000.02.22.19.27.57;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	99.11.28.23.20.23;	author rahnds;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	98.08.18.21.28.21;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.10.14.17.11.11;	author pefo;	state Exp;
branches;
next	1.5;

1.5
date	97.10.13.10.53.47;	author pefo;	state Exp;
branches;
next	1.4;

1.4
date	97.02.28.22.57.40;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	97.02.18.15.54.26;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	96.12.28.06.25.17;	author rahnds;	state Exp;
branches;
next	1.1;

1.1
date	96.12.21.20.35.54;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.35.54;	author rahnds;	state Exp;
branches;
next	;

1.8.2.1
date	2000.03.02.07.04.32;	author niklas;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2001.04.18.16.13.03;	author niklas;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2001.07.04.10.22.24;	author niklas;	state Exp;
branches;
next	1.8.2.4;

1.8.2.4
date	2001.10.31.03.07.55;	author nate;	state Exp;
branches;
next	1.8.2.5;

1.8.2.5
date	2001.11.13.22.14.34;	author niklas;	state dead;
branches;
next	1.8.2.6;

1.8.2.6
date	2002.03.29.16.11.59;	author niklas;	state Exp;
branches;
next	1.8.2.7;

1.8.2.7
date	2003.03.27.23.42.35;	author niklas;	state Exp;
branches;
next	1.8.2.8;

1.8.2.8
date	2004.06.05.23.10.56;	author niklas;	state Exp;
branches;
next	;

1.19.2.1
date	2002.06.11.03.37.28;	author art;	state Exp;
branches;
next	1.19.2.2;

1.19.2.2
date	2003.05.19.21.49.44;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.37
log
@Increase the number of mbufs on most architectures.  This is based
on a guess how much memory a typical machine has.  If the value is
too high, users may run out of kernel memory.  Then we will have
to adjust this again.
OK claudio@@ deraadt@@
@
text
@/*	$OpenBSD: param.h,v 1.36 2013/06/13 11:29:20 deraadt Exp $	*/

/*-
 * Copyright (C) 1995, 1996 Wolfgang Solfrank.
 * Copyright (C) 1995, 1996 TooLs GmbH.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef	_POWERPC_PARAM_H_
#define	_POWERPC_PARAM_H_

#ifdef	_KERNEL
#ifndef	_LOCORE
#include <machine/cpu.h>
#endif	/* _LOCORE */
#endif

#define	MACHINE_ARCH	"powerpc"
#define	_MACHINE_ARCH	powerpc
#define	MID_MACHINE	MID_POWERPC

#define	PAGE_SHIFT	12
#define	PAGE_SIZE	(1 << PAGE_SHIFT)
#define	PAGE_MASK	(PAGE_SIZE - 1)

#ifdef _KERNEL

#define	NBPG		PAGE_SIZE
#define	PGSHIFT		PAGE_SHIFT
#define	PGOFSET		PAGE_MASK

#define	UPAGES		4			/* pages of u-area */
#define	USPACE		(UPAGES * PAGE_SIZE)	/* total size of u-area */
#define	USPACE_ALIGN	0			/* u-area alignment 0-none */

#define	NMBCLUSTERS	(4 * 1024)		/* max cluster allocation */

/*
 * Maximum size of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MAX_DEFAULT	((64 * 1024 * 1024) >> PAGE_SHIFT)

/*
 * Fixed segments
 */
#define	PPC_USER_SR		13
#define	PPC_KERNEL_SR	14
#define	PPC_KERNEL_SEG0	0xfffff0
#define	PPC_KERNEL_SEGMENT	(PPC_KERNEL_SEG0 + PPC_KERNEL_SR)
#define	PPC_USER_ADDR	((void *)(PPC_USER_SR << ADDR_SR_SHIFT))

#endif /* _KERNEL */

#endif /* _POWERPC_PARAM_H_ */
@


1.36
log
@ovbcopy begone
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.35 2013/03/26 05:04:10 deraadt Exp $	*/
d61 1
a61 1
#define	NMBCLUSTERS	4096			/* map size, max cluster allocation */
@


1.35
log
@PGSHIFT and PGOFSET are now contained inside the kernel namespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.34 2013/03/25 17:46:24 deraadt Exp $	*/
a76 5

/*
 * Temporary kludge till we do (ov)bcopy in assembler
 */
#define	ovbcopy	bcopy
@


1.34
log
@ALIGNBYTES/ALIGN/ALIGNED_POINTER can move to the MI file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.33 2013/03/23 16:12:26 deraadt Exp $	*/
a49 2
#define	PGSHIFT		PAGE_SHIFT
#define	PGOFSET		PAGE_MASK
d54 2
@


1.33
log
@refactor sys/param.h and machine/param.h.  A lot of #ifdef _KERNEL is added
to keep definitions our of user space.  The MD files now follow a consistant
order -- all namespace intrusion is at the tail can be cleaned up
independently.  locore, bootblocks, and libkvm still see enough visibility to
build.  Checked on 90% of platforms...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.32 2011/09/08 03:40:32 guenther Exp $	*/
a45 4

#define	ALIGNBYTES		_ALIGNBYTES
#define	ALIGN(p)		_ALIGN(p)
#define	ALIGNED_POINTER(p,t)	_ALIGNED_POINTER(p,t)
@


1.32
log
@Provide namespace-safe alignment macros in <machine/_types.h>, with
compat names kept in <machine/param.h>.  In <sys/socket.h>, pull
in <sys/_types.h> instead of the namespace polluting <machine/param.h>
and completely eliminate __CMSG_ALIGN, replaced by _ALIGN

ok deraadt@@
@
text
@d1 1
a1 2
/*	$OpenBSD: param.h,v 1.31 2011/04/07 15:45:17 miod Exp $	*/
/*	$NetBSD: param.h,v 1.1 1996/09/30 16:34:28 ws Exp $	*/
a42 3
/*
 * Machine dependent constants for PowerPC (32-bit only currently)
 */
a44 1

d52 1
a52 1
#define	PAGE_SIZE	4096
a54 1
#define	NBPG		PAGE_SIZE
d57 1
a57 8
#define	DEV_BSHIFT	9		/* log2(DEV_BSIZE) */
#define	DEV_BSIZE	(1 << DEV_BSHIFT)
#define	BLKDEV_IOSIZE	2048
#define	MAXPHYS		(64 * 1024)	/* max raw I/O transfer size */

#define	UPAGES		4
#define	USPACE		(UPAGES * NBPG)
#define	USPACE_ALIGN	(0)		/* u-area alignment 0-none */
d59 1
a59 6
/*
 * Minimum and maximum sizes of the kernel malloc arena in PAGE_SIZE-sized
 * logical pages.
 */
#define	NKMEMPAGES_MIN_DEFAULT	((4 * 1024 * 1024) >> PAGE_SHIFT)
#define	NKMEMPAGES_MAX_DEFAULT	((64 * 1024 * 1024) >> PAGE_SHIFT)
d61 3
a63 4
/*
 * Constants related to network buffer management.
 */
#define	NMBCLUSTERS	4096		/* map size, max cluster allocation */
d65 1
a65 5
/*
 * pages ("clicks") to disk blocks
 */
#define	ctod(x)		((x) << (PGSHIFT - DEV_BSHIFT))
#define	dtoc(x)		((x) >> (PGSHIFT - DEV_BSHIFT))
d68 2
a69 1
 * bytes to disk blocks
d71 1
a71 8
#define	dbtob(x)	((x) << DEV_BSHIFT)
#define	btodb(x)	((x) >> DEV_BSHIFT)

/*
 * Segment handling stuff
 */
#define	PPC_SEGMENT_LENGTH	0x10000000
#define	PPC_SEGMENT_MASK	0xf0000000
a82 7
 * Some system constants
 */
#ifndef	NPMAPS
#define	NPMAPS		32768	/* Number of pmaps in system */
#endif

/*
d87 3
a89 1
#endif	/* _POWERPC_PARAM_H_ */
@


1.31
log
@Make sure the ALIGN() macro uses u_long on all platforms for consistency, and
update the comment block accordingly.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.30 2007/11/04 13:43:39 martin Exp $	*/
d52 3
a54 3
#define	ALIGNBYTES	(sizeof(double) - 1)
#define	ALIGN(p)	(((u_long)(p) + ALIGNBYTES) & ~ALIGNBYTES)
#define ALIGNED_POINTER(p,t)	((((u_long)(p)) & (sizeof(t)-1)) == 0)
@


1.30
log
@replace even more ctob/btoc with ptoa/atop
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.29 2007/05/28 21:02:49 thib Exp $	*/
d53 1
a53 1
#define	ALIGN(p)	(((u_int)(p) + ALIGNBYTES) & ~ALIGNBYTES)
@


1.29
log
@Move the MSIZE, MCLSHIFT, MCLBYTES and the MCLOFSET
mbuf constants from MD param.h to MI param.h.
Besides being the same on every arch, things will
most probly break if any arch has different values
then the others.

The NMBCLUSTERS constants needs to be MD though;

ok miod@@,krw@@,claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.28 2006/03/19 22:01:32 miod Exp $	*/
a88 5
/*
 * bytes to pages
 */
#define	ctob(x)		((x) << PGSHIFT)
#define	btoc(x)		(((x) + PGOFSET) >> PGSHIFT)
@


1.28
log
@Change BLKDEV_IOSIZE down to 2KB like on all other platforms; ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.27 2005/10/26 18:57:51 martin Exp $	*/
a80 4
 * MCLBYTES must be no larger than the software page size, and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
a81 4
#define	MSIZE		256		/* size of an mbuf */
#define	MCLSHIFT	11		/* convert bytes to m_buf clusters */
#define	MCLBYTES	(1 << MCLSHIFT)	/* size of a m_buf cluster */
#define	MCLOFSET	(MCLBYTES - 1)
@


1.27
log
@Mach-macro wipeout

'do it' deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.26 2005/09/12 23:05:05 miod Exp $	*/
d65 1
a65 1
#define	BLKDEV_IOSIZE	NBPG
@


1.26
log
@Change the NKMEMPAGES range to 4-64MB for 32bit arches, and 8-128MB for 64bit
arches; except on sparc where the range is 4-8 for !sun4m and 4-64 for sun4m,
selected at runtime.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.25 2004/08/06 22:31:31 mickey Exp $	*/
a107 6

/*
 * Mach derived conversion macros
 */
#define powerpc_btop(x)	((unsigned)(x) >> PGSHIFT)
#define powerpc_ptob(x)	((unsigned)(x) << PGSHIFT)
@


1.25
log
@provide md USPACE_ALIGN zero on all but mips; deradat@@ pefo@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.24 2004/06/24 22:35:56 drahn Exp $	*/
d71 7
@


1.24
log
@Do a better job at containing powerpc specific #defines to PPC_...
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.23 2004/04/19 22:55:50 deraadt Exp $	*/
d70 1
@


1.23
log
@remove the GATEWAY junk thingy; at the same time, select a new fat
cluster value that noone will really need to crank.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.22 2002/11/21 03:59:16 drahn Exp $	*/
d110 2
a111 2
#define	SEGMENT_LENGTH	0x10000000
#define	SEGMENT_MASK	0xf0000000
d116 5
a120 5
#define	USER_SR		13
#define	KERNEL_SR	14
#define	KERNEL_SEG0	0xfffff0
#define	KERNEL_SEGMENT	(KERNEL_SEG0 + KERNEL_SR)
#define	USER_ADDR	((void *)(USER_SR << ADDR_SR_SHIFT))
@


1.22
log
@MID_MACHINE should not be 0 (MID_ZERO) but MID_POWERPC,
not used in kernel anyway. pointed out by art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 2002/03/21 02:08:40 drahn Exp $	*/
d82 1
a82 8

#ifndef NMBCLUSTERS
#ifdef GATEWAY
#define	NMBCLUSTERS	2048		/* map size, max cluster allocation */
#else
#define	NMBCLUSTERS	1024		/* map size, max cluster allocation */
#endif
#endif
@


1.21
log
@Swap the defines to be the ones we want to use, compat ones are defined
from the preferred.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.20 2002/03/13 18:27:36 drahn Exp $	*/
d50 1
a50 1
#define	MID_MACHINE	0	/* None but has to be defined */
@


1.20
log
@Complete rewrite of the powerpc pmap handling, Instead of keeping
the spill list for each PTEG, the V->P translations are stored in
trees for each pmap. All valid kernel mappings are preallocated
in 1-1 memory so that tlb spill/loads for kernel accesses can be
looked up while physical, user mappings are not guaranteed to
be 1-1 mapped, thus the kernel must go virtual to look up user
mappings. While this is more expensive, the tree search is much
lower cost than the long linked list search. Also on each pmap_remove()
it was necessary to search the linked lists for each possible mapping,
now it just looks up the entry in the tree.
This change gives a 25-36% speedup in 'make build' time. What was
around 2:50 is now around 1:55 on a 733MHz G4.

This change causes a likely existing bug to appear quite often,
it deals with the segment register invalidation in kernel mode.
Because of that problem, currently this change limits the physical
memory used to 256MB. This limitation will be fixed soon, it is not
an error in the pmap code.

 * Effort sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F30602-01-2-0537.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2001/12/05 01:57:15 provos Exp $	*/
d56 6
a61 6
#define	PGSHIFT		12
#define	NBPG		4096
#define	PGOFSET		(NBPG - 1)
#define PAGE_SIZE	NBPG
#define PAGE_MASK	PGOFSET
#define PAGE_SHIFT	PGSHIFT
@


1.19
log
@make nkmempages dynamic based on memory. okay art@@ from netbsd:
date: 2000/02/11 19:22:52;  author: thorpej;
Add some very simple code to auto-size the kmem_map.  We take the
amount of physical memory, divide it by 4, and then allow machine
dependent code to place upper and lower bounds on the size.  Export
the computed value to userspace via the new "vm.nkmempages" sysctl.

NKMEMCLUSTERS is now deprecated and will generate an error if you
attempt to use it.  The new option, should you choose to use it,
is called NKMEMPAGES, and two new options NKMEMPAGES_MIN and
NKMEMPAGES_MAX allow the user to configure the bounds in the kernel
config file.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.17 2001/07/09 02:14:05 mickey Exp $	*/
d125 3
a127 3
#define	KERNEL_SEGMENT	(0xfffff0 + KERNEL_SR)
#define	EMPTY_SEGMENT	0xfffff0
#define	USER_ADDR	((void *)(USER_SR << ADDR_SR_SHFT))
@


1.19.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.19 2001/12/05 01:57:15 provos Exp $	*/
d56 6
a61 6
#define	PAGE_SHIFT	12
#define	PAGE_SIZE	4096
#define	PAGE_MASK	(PAGE_SIZE - 1)
#define	PGSHIFT		PAGE_SHIFT
#define	NBPG		PAGE_SIZE
#define	PGOFSET		PAGE_MASK
d125 3
a127 3
#define	KERNEL_SEG0	0xfffff0
#define	KERNEL_SEGMENT	(KERNEL_SEG0 + KERNEL_SR)
#define	USER_ADDR	((void *)(USER_SR << ADDR_SR_SHIFT))
@


1.19.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 1
a50 1
#define	MID_MACHINE	MID_POWERPC
@


1.18
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/include to macppc/include
Some files were not "moved" but wrapper files were created which include
the powerpc/include version.

Several of the powerpc/include files where changed to reflect that they
are POWERPC_* not MACHINE_*.
@
text
@@


1.17
log
@more spacees, includes, protos
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.16 2001/07/06 02:07:43 provos Exp $	*/
d35 3
a43 1

a46 2
#define	MACHINE		"powerpc"
#define	_MACHINE	powerpc
a70 2
#define	KERNBASE	0x100000

a90 9
#define MSGBUFSIZE	(NBPG*2)

/*
 * Size of kernel malloc arena in logical pages.
 */
#ifndef	NKMEMCLUSTERS
#define	NKMEMCLUSTERS	(16 * 1024 * 1024 / PAGE_SIZE)
#endif

a128 2
#define	__COMPAT_OLD_TIMEOUTS

d140 2
@


1.16
log
@change MSIZE to 256, okay @@deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.15 2001/06/23 01:59:05 drahn Exp $	*/
d139 2
@


1.15
log
@Header file changes to support symbol loading just added.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.14 2001/05/05 20:56:50 art Exp $	*/
d80 1
a80 1
#define	MSIZE		128		/* size of an mbuf */
@


1.14
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 2001/02/07 06:03:53 drahn Exp $	*/
d41 1
d54 1
@


1.13
log
@Some devices use NPBG others want PAGE_SIZE, and the related macros.
so provide both.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 2001/02/07 06:01:45 drahn Exp $	*/
a65 3
#define	CLSIZELOG2	0
#define	CLSIZE		(1 << CLSIZELOG2)

d73 1
a73 1
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
d94 1
a94 1
 * Size of kernel malloc arena in CLBYTES-sized logical pages.
d97 1
a97 1
#define	NKMEMCLUSTERS	(16 * 1024 * 1024 / CLBYTES)
@


1.12
log
@Remove block of "#if 0"ed code.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.11 2000/09/14 18:26:52 deraadt Exp $	*/
d57 3
@


1.11
log
@crank MSGBUFSIZE
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.10 2000/07/28 13:04:29 rahnds Exp $	*/
a140 6
/* do not define HTABENTS, allow system size to determine # entries */
#if 0
#ifndef	HTABENTS
#define	HTABENTS	1024	/* Number of hashslots in HTAB */
#endif
#endif
@


1.10
log
@Dont force htab size to be fixed size, allow system to define size.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.9 2000/02/22 19:27:57 deraadt Exp $	*/
d91 1
a91 1
#define MSGBUFSIZE	NBPG
@


1.9
log
@enlarge msgbuf, somewhat line netbsd did
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8 1999/11/28 23:20:23 rahnds Exp $	*/
d141 2
d145 1
@


1.8
log
@Lower NKMEMCLUSTERS from 128MB to 16MB. Currently the vm size for powerpc
is set to 256MB and this prevented OpenBSD from booting on machine with
more than ~128MB, 196MB machines would fail to boot very early.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.7 1998/08/18 21:28:21 millert Exp $	*/
d90 2
@


1.8.2.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a89 2

#define MSGBUFSIZE	NBPG
@


1.8.2.2
log
@Update the SMP branch to -current, this breaks the SMP branch though.
But it will be fixed soonish.  Note, nothing new has happened, this is just
a merge of the trunk into this branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.13 2001/02/07 06:03:53 drahn Exp $	*/
a56 3
#define PAGE_SIZE	NBPG
#define PAGE_MASK	PGOFSET
#define PAGE_SHIFT	PGSHIFT
d91 1
a91 1
#define MSGBUFSIZE	(NBPG*2)
d141 3
@


1.8.2.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8.2.2 2001/04/18 16:13:03 niklas Exp $	*/
a40 1

a52 1
#define ALIGNED_POINTER(p,t)	((((u_long)(p)) & (sizeof(t)-1)) == 0)
d66 3
d76 1
a76 1
 * MCLBYTES must be no larger than the software page size, and,
d97 1
a97 1
 * Size of kernel malloc arena in logical pages.
d100 1
a100 1
#define	NKMEMCLUSTERS	(16 * 1024 * 1024 / PAGE_SIZE)
@


1.8.2.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8.2.3 2001/07/04 10:22:24 niklas Exp $	*/
a34 3
#ifndef	_POWERPC_PARAM_H_
#define	_POWERPC_PARAM_H_

d41 1
d45 2
d71 2
d80 1
a80 1
#define	MSIZE		256		/* size of an mbuf */
d93 9
a150 2

#endif	/* _POWERPC_PARAM_H_ */
@


1.8.2.5
log
@repair
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.8.2.4 2001/10/31 03:07:55 nate Exp $	*/
@


1.8.2.6
log
@Re-add missing pieces
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.21 2002/03/21 02:08:40 drahn Exp $	*/
d56 6
a61 6
#define	PAGE_SHIFT	12
#define	PAGE_SIZE	4096
#define	PAGE_MASK	(PAGE_SIZE - 1)
#define	PGSHIFT		PAGE_SHIFT
#define	NBPG		PAGE_SIZE
#define	PGOFSET		PAGE_MASK
d125 3
a127 3
#define	KERNEL_SEG0	0xfffff0
#define	KERNEL_SEGMENT	(KERNEL_SEG0 + KERNEL_SR)
#define	USER_ADDR	((void *)(USER_SR << ADDR_SR_SHIFT))
@


1.8.2.7
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 1
a50 1
#define	MID_MACHINE	MID_POWERPC
@


1.8.2.8
log
@Merge with the trunk
@
text
@d82 8
a89 1
#define	NMBCLUSTERS	4096		/* map size, max cluster allocation */
@


1.7
log
@add powerpc_btop() and powerpc_ptob() macros for consistency with other ports
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.6 1997/10/14 17:11:11 pefo Exp $	*/
d95 1
a95 1
#define	NKMEMCLUSTERS	(128 * 1024 * 1024 / CLBYTES)
@


1.6
log
@Get a few things right...
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.5 1997/10/13 10:53:47 pefo Exp $	*/
d114 6
@


1.5
log
@Monolithic PowerPC kernel, new include
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.4 1997/02/28 22:57:40 niklas Exp $	*/
d48 2
@


1.4
log
@Add missing _MACHINE & _MACHINE_ARCH defines + some RCS Ids
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.3 1997/02/18 15:54:26 rahnds Exp $	*/
a47 1
#define	MID_MACHINE	MID_ZERO
a52 3
#if 0
#define	NBPG		(1 << PGSHIFT)	/* Page size */
#endif
d79 1
d83 1
a83 1
#define	NMBCLUSTERS	512		/* map size, max cluster allocation */
d85 1
a85 1
#define	NMBCLUSTERS	256		/* map size, max cluster allocation */
@


1.3
log
@Ok, these are more stragglers in my source tree. These changes were necessary
to clean up the interdependancies caused by the siginfo changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: param.h,v 1.2 1996/12/28 06:25:17 rahnds Exp $	*/
d45 1
d47 1
@


1.2
log
@adding OpenBSD tag to files.
@
text
@d1 1
a1 1
/*	$OpenBSD:$	*/
d46 1
a46 1
#define	MID_MACHINE	MID_POWERPC
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Check-in of powerpc kernel support.
NOTE: This will not work until the other pieces are checked in.
This is primarily the NetBSD powerpc port, with modifications
to support ELF. 
@
text
@@
