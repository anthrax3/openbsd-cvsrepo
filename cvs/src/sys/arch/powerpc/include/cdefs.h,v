head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.16
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.18
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.14
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.10
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.12
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.8
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.30
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.28
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.26
	OPENBSD_5_0:1.6.0.24
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.22
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.20
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.16
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.18
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.14
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.12
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.10
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.8
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.6
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	SMP_SYNC_A:1.4
	SMP_SYNC_B:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.14
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	powerpc_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2013.03.28.17.30.45;	author martynas;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.10.00.04.04;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.24.20.46.47;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.19.03.17.45;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.01.15.49.05;	author drahn;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	96.12.28.06.25.01;	author rahnds;	state Exp;
branches
	1.2.14.1;
next	1.1;

1.1
date	96.12.21.20.35.53;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.35.53;	author rahnds;	state Exp;
branches;
next	;

1.2.14.1
date	2001.10.31.03.07.55;	author nate;	state Exp;
branches;
next	1.2.14.2;

1.2.14.2
date	2001.11.13.22.14.34;	author niklas;	state dead;
branches;
next	1.2.14.3;

1.2.14.3
date	2002.03.29.16.11.59;	author niklas;	state Exp;
branches;
next	;

1.3.4.1
date	2002.06.11.03.37.28;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Add __strong_alias macros for all architectures to be able to alias
another symbol without weak attribute.  To be used in libc and libm
soon.  Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@/*	$OpenBSD: cdefs.h,v 1.6 2006/01/10 00:04:04 millert Exp $	*/

/*
 * Written by J.T. Conklin <jtc@@wimsey.com> 01/17/95.
 * Public domain.
 */

#ifndef	_POWERPC_CDEFS_H_
#define	_POWERPC_CDEFS_H_

#define __strong_alias(alias,sym)			\
	__asm__(".global " __STRING(alias) " ; "	\
	    __STRING(alias) " = " __STRING(sym))
#define __weak_alias(alias,sym)				\
	__asm__(".weak " __STRING(alias) " ; "		\
	    __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)			\
	__asm__(".section .gnu.warning." __STRING(sym)	\
	    " ; .ascii \"" msg "\" ; .text")

#endif /* !_POWERPC_CDEFS_H_ */
@


1.6
log
@Remove duplicate _C_LABEL define.  OK miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.5 2005/11/24 20:46:47 deraadt Exp $	*/
d11 3
a13 5
#if defined(lint)
#define __indr_reference(sym,alias)	__lint_equal__(sym,alias)
#define __warn_references(sym,msg)
#define __weak_alias(alias,sym)		__lint_equal__(sym,alias)
#elif defined(__GNUC__) && defined(__STDC__)
a19 1
#endif
@


1.5
log
@add lint-specific hacks.  at the same time, clean out a lot of ancient
cruft for old compilers and environments.  there may be a 2nd round of
polishing after this; ok miod and others
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.4 2002/02/19 03:17:45 drahn Exp $	*/
a9 2

#define _C_LABEL(x)	_STRING(_ ## x)
@


1.4
log
@get rid of old if 0'ed code. add support for __weak_alias and fix
support for __warn_references (both from alpha/sparc4).
@
text
@d1 1
a1 2
/*	$OpenBSD: cdefs.h,v 1.3 2001/09/01 15:49:05 drahn Exp $	*/
/*	$NetBSD: cdefs.h,v 1.1 1996/09/30 16:34:21 ws Exp $	*/
a10 1
#ifdef __STDC__
d12 12
a23 2
#else
#define _C_LABEL(x)	_STRING(_/**/x)
a24 5

#define __weak_alias(alias,sym)                                         \
    __asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)					\
    __asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")
@


1.3
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/include to macppc/include
Some files were not "moved" but wrapper files were created which include
the powerpc/include version.

Several of the powerpc/include files where changed to reflect that they
are POWERPC_* not MACHINE_*.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.2 1996/12/28 06:25:01 rahnds Exp $	*/
d18 4
a21 24
#if 0
#ifdef __GNUC__
#ifdef __STDC__
#define __indr_reference(sym,alias)	\
	__asm__(".stabs \"_" #alias "\",11,0,0,0");	\
	__asm__(".stabs \"_" #sym "\",1,0,0,0")
#define __warn_references(sym,msg)	\
	__asm__(".stabs \"" msg "\",30,0,0,0");		\
	__asm__(".stabs \"_" #sym "\",1,0,0,0")
#else
#define __indr_reference(sym,alias)	\
	__asm__(".stabs \"_/**/alias\",11,0,0,0");	\
	__asm__(".stabs \"_/**/sym\",1,0,0,0")
#define __warn_references(sym,msg)	\
	__asm__(".stabs msg,30,0,0,0");			\
	__asm__(".stabs \"_/**/sym\",1,0,0,0")
#endif
#endif
#else
#define __warn_references(sym,msg)
/*
#define __indr_reference(sym,alias)
*/
#endif
@


1.3.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.3 2001/09/01 15:49:05 drahn Exp $	*/
d18 24
a41 4
#define __weak_alias(alias,sym)                                         \
    __asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)					\
    __asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")
@


1.2
log
@adding OpenBSD tag to files.
@
text
@d1 1
a1 1
/*	$OpenBSD:$	*/
d9 2
a10 2
#ifndef	_MACHINE_CDEFS_H_
#define	_MACHINE_CDEFS_H_
d43 1
a43 1
#endif /* !_MACHINE_CDEFS_H_ */
@


1.2.14.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.2 1996/12/28 06:25:01 rahnds Exp $	*/
d9 2
a10 2
#ifndef	_POWERPC_CDEFS_H_
#define	_POWERPC_CDEFS_H_
d43 1
a43 1
#endif /* !_POWERPC_CDEFS_H_ */
@


1.2.14.2
log
@repair
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.2.14.1 2001/10/31 03:07:55 nate Exp $	*/
@


1.2.14.3
log
@Re-add missing pieces
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.4 2002/02/19 03:17:45 drahn Exp $	*/
d18 24
a41 4
#define __weak_alias(alias,sym)                                         \
    __asm__(".weak " __STRING(alias) " ; " __STRING(alias) " = " __STRING(sym))
#define	__warn_references(sym,msg)					\
    __asm__(".section .gnu.warning." __STRING(sym) " ; .ascii \"" msg "\" ; .text")
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Check-in of powerpc kernel support.
NOTE: This will not work until the other pieces are checked in.
This is primarily the NetBSD powerpc port, with modifications
to support ELF. 
@
text
@@
