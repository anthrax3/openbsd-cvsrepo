head	1.15;
access;
symbols
	OPENBSD_6_1:1.15.0.8
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.6
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.13.0.10
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.14
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.12
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.8
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.6
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.4
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.2
	OPENBSD_5_0:1.12.0.14
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.12
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.10
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.6
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.8
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.4
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.2
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.11.0.2
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.9.0.18
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.16
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.14
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.12
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.10
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.8
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.6
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.4
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.2
	UBC_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.4.0.14
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.12
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.10
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.8
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	powerpc_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2015.07.29.18.52.44;	author miod;	state Exp;
branches;
next	1.14;
commitid	f8evG97O4V8Sypqs;

1.14
date	2015.05.05.02.13.47;	author guenther;	state Exp;
branches;
next	1.13;
commitid	dNPv28CJI5BxtRGW;

1.13
date	2011.08.22.18.18.35;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2008.04.27.16.01.47;	author drahn;	state Exp;
branches;
next	1.11;

1.11
date	2007.10.10.15.53.52;	author art;	state Exp;
branches;
next	1.10;

1.10
date	2007.03.20.20.59.53;	author kettenis;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.26.21.54.44;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.14.01.26.42;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.13.14.31.52;	author drahn;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2001.09.01.15.49.05;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.29.06.07.09;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	98.08.25.07.44.21;	author pefo;	state Exp;
branches
	1.4.8.1;
next	1.3;

1.3
date	98.08.07.02.22.03;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	96.12.28.06.25.18;	author rahnds;	state Exp;
branches;
next	1.1;

1.1
date	96.12.21.20.35.54;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.35.54;	author rahnds;	state Exp;
branches;
next	;

1.4.8.1
date	2001.07.04.10.22.25;	author niklas;	state Exp;
branches;
next	1.4.8.2;

1.4.8.2
date	2001.10.31.03.07.55;	author nate;	state Exp;
branches;
next	1.4.8.3;

1.4.8.3
date	2001.11.13.22.14.34;	author niklas;	state dead;
branches;
next	1.4.8.4;

1.4.8.4
date	2002.03.29.16.11.59;	author niklas;	state Exp;
branches;
next	1.4.8.5;

1.4.8.5
date	2003.03.27.23.42.35;	author niklas;	state Exp;
branches;
next	;

1.7.2.1
date	2002.06.11.03.37.28;	author art;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2003.05.19.21.49.44;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.15
log
@17 years ago, setfault() was modified to save the status register in the
faultbuf. But 1/ sr was only restored for machine check exceptions, and 2/ the
way it was saved was unsafe if interrupts were enabled, and could cause %r2
to be lost.

Discussing this with deraadt@@ at the end of c2k15, this was probably needed
for the old VI boards which were the target of the original powerpc port,
came with a worse-than-Genesi openfirmware. Since then, machine check
exceptions have been unheard of; or, if they happen, they do not need the
status register to be restored.

ok mpi@@ deraadt@@
@
text
@/*	$OpenBSD: pcb.h,v 1.14 2015/05/05 02:13:47 guenther Exp $	*/
/*	$NetBSD: pcb.h,v 1.1 1996/09/30 16:34:29 ws Exp $	*/

/*-
 * Copyright (C) 1995, 1996 Wolfgang Solfrank.
 * Copyright (C) 1995, 1996 TooLs GmbH.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef	_POWERPC_PCB_H_
#define	_POWERPC_PCB_H_

#include <machine/reg.h>


typedef struct __faultbuf {
	int	pc;
	int	sp;
	int	cr;
	int	regs[20];
} faultbuf;

struct pcb {
	struct pmap *pcb_pm;	/* pmap of our vmspace */
	struct pmap *pcb_pmreal; /* real address of above */
	register_t pcb_sp;	/* saved SP */
	faultbuf *pcb_onfault;	/* For use during copyin/copyout */
	int pcb_flags;
#define	PCB_FPU		1	/* Process had FPU initialized */
	struct fpu {
		double fpr[32];
		double fpcsr;	/* FPCSR stored as double for easier access */
	} pcb_fpu;		/* Floating point processor */
	struct vreg *pcb_vr;    /* Vector unit */
	struct cpu_info *pcb_fpcpu;
	struct cpu_info *pcb_veccpu;
};

#ifdef	_KERNEL
extern struct proc *fpuproc;
int  setfault(faultbuf *env) __returns_twice;
#endif
#endif	/* _POWERPC_PCB_H_ */
@


1.14
log
@emul_native is only used for kernel threads which can't dump core, so
delete coredump_trad(), uvm_coredump(), cpu_coredump(), struct md_coredump,
and various #includes that are superfluous.

This leaves compat_linux processes without a coredump callback.  If that
ability is desired, someone should update it to use coredump_elf32() and
verify the results...

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.13 2011/08/22 18:18:35 deraadt Exp $	*/
a41 1
	int	sr;
@


1.13
log
@mark setfault() with __returns_twice
ok kettenis drahn
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.12 2008/04/27 16:01:47 drahn Exp $	*/
a61 4
};

struct md_coredump {
	struct reg regs;
@


1.12
log
@FPU/Altivec cleanup and prep for SMP.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.11 2007/10/10 15:53:52 art Exp $	*/
d70 1
a70 1
int  setfault(faultbuf *env);
@


1.11
log
@Make context switching much more MI:
 - Move the functionality of choosing a process from cpu_switch into
   a much simpler function: cpu_switchto. Instead of having the locore
   code walk the run queues, let the MI code choose the process we
   want to run and only implement the context switching itself in MD
   code.
 - Let MD context switching run without worrying about spls or locks.
 - Instead of having the idle loop implemented with special contexts
   in MD code, implement one idle proc for each cpu. make the idle
   loop MI with MD hooks.
 - Change the proc lists from the old style vax queues to TAILQs.
 - Change the sleep queue from vax queues to TAILQs. This makes
   wakeup() go from O(n^2) to O(n)

there will be some MD fallout, but it will be fixed shortly.
There's also a few cleanups to be done after this.

deraadt@@, kettenis@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.10 2007/03/20 20:59:53 kettenis Exp $	*/
d60 2
@


1.10
log
@Move macppc to __HAVE_CPUINFO, and make locore.S and trap.c suitable for
MULTIPROCESSOR.  From now on sprg0 holds a pointer to struct cpuinfo, which
is used to spill registers to during trap instead of the globals we used to
use for that purpose.  Bits and pieces from NetBSD.  Help from drahn@@ and art@@.
Tested by xsa@@, thib@@, miod@@, gwk@@, deraadt@@.

ok drahn@@, gwk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.9 2003/02/26 21:54:44 drahn Exp $	*/
a51 1
	int pcb_spl;		/* saved SPL */
@


1.9
log
@Remove an unnecessary structure copy from useage of setfault(), call
by reference, not by value, ok matthieu#, miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.8 2002/03/14 01:26:42 millert Exp $	*/
a67 2
extern struct pcb *curpcb;
extern struct pmap *curpm;
@


1.8
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.7 2001/11/13 14:31:52 drahn Exp $	*/
d71 1
a71 1
int  setfault(faultbuf env);
@


1.7
log
@Add AltiVec support to powerpc/macppc. This is not currently enabled because
the 'as' in openbsd source tree does not yet support altivec instructions.
The pieces to enable it have been put in macppc/conf/GENERIC and
macppc/conf/Makefile.macppc in comments.
Once 'as' is updated the kernel option should be removed.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.6 2001/09/01 15:49:05 drahn Exp $	*/
d71 1
a71 1
int  setfault __P((faultbuf env));
@


1.7.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.7 2001/11/13 14:31:52 drahn Exp $	*/
d71 1
a71 1
int  setfault(faultbuf env);
@


1.7.2.2
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d71 1
a71 1
int  setfault(faultbuf *env);
@


1.6
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/include to macppc/include
Some files were not "moved" but wrapper files were created which include
the powerpc/include version.

Several of the powerpc/include files where changed to reflect that they
are POWERPC_* not MACHINE_*.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.5 2001/06/29 06:07:09 drahn Exp $	*/
d60 1
@


1.5
log
@header file include/define cleanup. commit N of many.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.4 1998/08/25 07:44:21 pefo Exp $	*/
d34 2
a35 2
#ifndef	_MACHINE_PCB_H_
#define	_MACHINE_PCB_H_
d72 1
a72 1
#endif	/* _MACHINE_PCB_H_ */
@


1.4
log
@Make faultbuf a struct
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.3 1998/08/07 02:22:03 rahnds Exp $	*/
d70 1
@


1.4.8.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.4 1998/08/25 07:44:21 pefo Exp $	*/
a69 1
int  setfault __P((faultbuf env));
@


1.4.8.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.4.8.1 2001/07/04 10:22:25 niklas Exp $	*/
d34 2
a35 2
#ifndef	_POWERPC_PCB_H_
#define	_POWERPC_PCB_H_
d72 1
a72 1
#endif	/* _POWERPC_PCB_H_ */
@


1.4.8.3
log
@repair
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.4.8.2 2001/10/31 03:07:55 nate Exp $	*/
@


1.4.8.4
log
@Re-add missing pieces
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.8 2002/03/14 01:26:42 millert Exp $	*/
a59 1
	struct vreg *pcb_vr;    /* Vector unit */
d70 1
a70 1
int  setfault(faultbuf env);
@


1.4.8.5
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d71 1
a71 1
int  setfault(faultbuf *env);
@


1.3
log
@Add kernel support for debugging with gdb. This also make /proc allow
access to the registers. The format of the registers returned in ptrace,
/proc and in the coredump header match what gdb was expecting.
Floating point registers are not yet copied into the structure.
The location of the fpr needs to be found and copied. <- TODO

Changes to trap.c was to add some interm debugging. code is commented out.

powerpc does not currently have a MID_* type, since it uses ELF instead
of a.out, one was never added. Currently the coredump is done in form
of MID_NONE. What is the correct approach for this?? Elf format coredumps...
maybe?
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.2 1996/12/28 06:25:18 rahnds Exp $	*/
d38 9
a46 1
typedef int faultbuf[24];
@


1.2
log
@adding OpenBSD tag to files.
@
text
@d1 1
a1 1
/*	$OpenBSD:$	*/
d37 1
d55 1
a55 2
	struct trapframe frame;
	/* Need to add FPU regs here */
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Check-in of powerpc kernel support.
NOTE: This will not work until the other pieces are checked in.
This is primarily the NetBSD powerpc port, with modifications
to support ELF. 
@
text
@@
