head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.60
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.62
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.58
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.54
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.56
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.48
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.52
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.50
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.46
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.44
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.42
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.40
	OPENBSD_5_0:1.9.0.38
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.36
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.34
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.30
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.32
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.28
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.26
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.24
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.22
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.20
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.18
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.16
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.14
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.12
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.10
	OPENBSD_3_6_BASE:1.9
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	OPENBSD_3_5:1.9.0.8
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.6
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.7.0.6
	OPENBSD_3_1_BASE:1.7
	UBC_SYNC_B:1.9
	UBC:1.7.0.4
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.4.0.8
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.2
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2002.09.15.09.01.59;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.09.15.02.02.44;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.01.15.49.05;	author drahn;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2001.06.29.06.07.09;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.24.04.45.45;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	99.11.09.04.13.54;	author rahnds;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	98.08.25.07.45.28;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	98.08.06.15.03.57;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	97.10.13.10.53.47;	author pefo;	state Exp;
branches;
next	;

1.4.2.1
date	2001.07.04.10.22.26;	author niklas;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2001.10.31.03.07.55;	author nate;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2001.11.13.22.14.34;	author niklas;	state dead;
branches;
next	1.4.2.4;

1.4.2.4
date	2002.03.29.16.11.59;	author niklas;	state Exp;
branches;
next	;

1.7.4.1
date	2002.10.29.00.28.08;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@backout premature
@
text
@/*	$OpenBSD: pio.h,v 1.7 2001/09/01 15:49:05 drahn Exp $ */

/*
 * Copyright (c) 1997 Per Fogelstrom, Opsycon AB and RTMX Inc, USA.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed under OpenBSD by
 *	Per Fogelstrom Opsycon AB for RTMX Inc, North Carolina, USA.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _POWERPC_PIO_H_
#define _POWERPC_PIO_H_
/*
 * I/O macros.
 */
void *mapiodev(paddr_t pa, psize_t len);
void unmapiodev(void * va, psize_t len);

static __inline void
__outb(volatile u_int8_t *a, int v)
{
	*a = v;
	__asm__ volatile("eieio");
}

static __inline void
__outw(volatile u_int16_t *a, u_int16_t v)
{
	*a = v;
	__asm__ volatile("eieio");
}

static __inline void
__outl(volatile u_int32_t *a, int v)
{
	*a = v;
	__asm__ volatile("eieio");
}

static __inline void
__outwrb(volatile u_int16_t *a, u_int16_t v)
{
	u_int32_t _p_ = (u_int32_t)a;

	__asm__ volatile("sthbrx %0, 0, %1" :: "r"(v), "r"(_p_));
	__asm__ volatile("eieio");
}

static __inline void
__outlrb(volatile u_int32_t *a, u_int32_t v)
{
	u_int32_t _p_ = (u_int32_t)a;

	__asm__ volatile("stwbrx %0, 0, %1" :: "r"(v), "r"(_p_));
	__asm__ volatile("eieio");
}

static __inline u_int8_t
__inb(volatile u_int8_t *a)
{
	u_int8_t _v_;

	__asm__ volatile("eieio");
	_v_ = *a;
	return _v_;
}

static __inline u_int16_t
__inw(volatile u_int16_t *a)
{
	u_int16_t _v_;

	__asm__ volatile("eieio");
	_v_ = *a;
	return _v_;
}

static __inline u_int32_t
__inl(volatile u_int32_t *a)
{
	u_int32_t _v_;

	__asm__ volatile("eieio");
	_v_ = *a;
	return _v_;
}

static __inline u_int16_t
__inwrb(volatile u_int16_t *a)
{
	u_int16_t _v_;
	u_int32_t _p_ = (u_int32_t)a;

	__asm__ volatile("eieio");
	__asm__ volatile("lhbrx %0, 0, %1" : "=r"(_v_) : "r"(_p_));
	return _v_;
}

static __inline u_int32_t
__inlrb(volatile u_int32_t *a)
{
	u_int32_t _v_;
	u_int32_t _p_ = (u_int32_t)a;

	__asm__ volatile("eieio");
	__asm__ volatile("lwbrx %0, 0, %1" : "=r"(_v_) : "r"(_p_));
	return _v_;
}


#define	outb(a,v)	(__outb((volatile u_int8_t *)(a), v))
#define	out8(a,v)	outb(a,v)
#define	outw(a,v)	(__outw((volatile u_int16_t *)(a), v))
#define	out16(a,v)	outw(a,v)
#define	outl(a,v)	(__outl((volatile u_int32_t *)(a), v))
#define	out32(a,v)	outl(a,v)
#define	inb(a)		(__inb((volatile u_int8_t *)(a)))
#define	in8(a)		inb(a)
#define	inw(a)		(__inw((volatile u_int16_t *)(a)))
#define	in16(a)		inw(a)
#define	inl(a)		(__inl((volatile u_int32_t *)(a)))
#define	in32(a)		inl(a)

#define	out8rb(a,v)	outb(a,v)
#define	outwrb(a,v)	(__outwrb((volatile u_int16_t *)(a), v))
#define	out16rb(a,v)	outwrb(a,v)
#define	outlrb(a,v)	(__outlrb((volatile u_int32_t *)(a), v))
#define	out32rb(a,v)	outlrb(a,v)
#define	in8rb(a)	inb(a)
#define	inwrb(a)	(__inwrb((volatile u_int16_t *)(a)))
#define	in16rb(a)	inwrb(a)
#define	inlrb(a)	(__inlrb((volatile u_int32_t *)(a)))
#define	in32rb(a)	inlrb(a)

#ifdef DEBUG_SPEC
static __inline void
__flash_led(bits, count)
	int bits;
{
	int i, v = 0;

	if(bits == 0) {
		v = 1; bits = 3;
	}
	bits &= 3;
	count += count;
	v |= (*(volatile u_int8_t *)(MPC106_V_ISA_IO_SPACE + 0x01f4)) & ~3;
	while(count--) {
		v ^= bits;
		for(i = 100000; i > 0; i--)
			*(volatile u_int8_t *)(MPC106_V_ISA_IO_SPACE + 0x01f4) = v;
	}
	*(u_int8_t *)(MPC106_V_ISA_IO_SPACE + 0x01f4) &= ~3;
}
#endif /* DEBUG */

#endif /*_POWERPC_PIO_H_*/
@


1.8
log
@KNF
@
text
@d5 1
a5 1
 *
d166 2
a167 3
	if (bits == 0) {
		v = 1;
		bits = 3;
d172 1
a172 1
	while (count--) {
d174 1
a174 1
		for (i = 100000; i > 0; i--)
@


1.7
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/include to macppc/include
Some files were not "moved" but wrapper files were created which include
the powerpc/include version.

Several of the powerpc/include files where changed to reflect that they
are POWERPC_* not MACHINE_*.
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.6 2001/06/29 06:07:09 drahn Exp $ */
d5 1
a5 1
 * 
d166 3
a168 2
	if(bits == 0) {
		v = 1; bits = 3;
d173 1
a173 1
	while(count--) {
d175 1
a175 1
		for(i = 100000; i > 0; i--)
@


1.7.4.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.7 2001/09/01 15:49:05 drahn Exp $ */
@


1.6
log
@header file include/define cleanup. commit N of many.
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.5 2001/06/24 04:45:45 drahn Exp $ */
d35 2
a36 2
#ifndef _MACHINE_PIO_H_
#define _MACHINE_PIO_H_
d181 1
a181 1
#endif /*_MACHINE_PIO_H_*/
@


1.5
log
@More inlined function cleanup for -W strictness.
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.4 1999/11/09 04:13:54 rahnds Exp $ */
d41 1
@


1.4
log
@autoconf.h
	add mac hooks to the powerpc config structure, probably
	a hack, and certainly needs to be cleaned up.
bus.h
	p4e_ -> ppc_X
	add write_multi and prototypes for bus_space_X_raw_multi functions.
intr.h
	add structure for interrupt handler.
pio.h
	remove the unnecessary and slowing "sync" instruction from
	each pio access.
	remove unnecessary newline characters from the generated asm.
	eieio after writes, but before reads.
types.h
	formatting change
vmparam.h
	change powerpc kernel virtual memory sizing from a fixed segment
	to a variable, initialized with a segment size, this is
	so that the pmap allocator can steal virtual memory, if vm
	is not yet set up. Necessary for mapping devices before the
	kernel vm structures are initialized.
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.3 1998/08/25 07:45:28 pefo Exp $ */
d43 1
a43 3
__outb(a,v)
	volatile u_int8_t *a;
	int v;
d50 1
a50 3
__outw(a,v)
	volatile u_int16_t *a;
	u_int16_t v;
d57 1
a57 3
__outl(a,v)
	volatile u_int32_t *a;
	int v;
d64 1
a64 3
__outwrb(a,v)
	volatile u_int16_t *a;
	u_int16_t v;
d73 1
a73 3
__outlrb(a,v)
	volatile u_int32_t *a;
	u_int32_t v;
d82 1
a82 2
__inb(a)
	volatile u_int8_t *a;
d92 1
a92 2
__inw(a)
	volatile u_int16_t *a;
d102 1
a102 2
__inl(a)
	volatile u_int32_t *a;
d112 1
a112 2
__inwrb(a)
	volatile u_int16_t *a;
d123 1
a123 2
__inlrb(a)
	volatile u_int32_t *a;
@


1.4.2.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.4 1999/11/09 04:13:54 rahnds Exp $ */
a40 1
void unmapiodev(void * va, psize_t len);
d43 3
a45 1
__outb(volatile u_int8_t *a, int v)
d52 3
a54 1
__outw(volatile u_int16_t *a, u_int16_t v)
d61 3
a63 1
__outl(volatile u_int32_t *a, int v)
d70 3
a72 1
__outwrb(volatile u_int16_t *a, u_int16_t v)
d81 3
a83 1
__outlrb(volatile u_int32_t *a, u_int32_t v)
d92 2
a93 1
__inb(volatile u_int8_t *a)
d103 2
a104 1
__inw(volatile u_int16_t *a)
d114 2
a115 1
__inl(volatile u_int32_t *a)
d125 2
a126 1
__inwrb(volatile u_int16_t *a)
d137 2
a138 1
__inlrb(volatile u_int32_t *a)
@


1.4.2.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.4.2.1 2001/07/04 10:22:26 niklas Exp $ */
d35 2
a36 2
#ifndef _POWERPC_PIO_H_
#define _POWERPC_PIO_H_
d181 1
a181 1
#endif /*_POWERPC_PIO_H_*/
@


1.4.2.3
log
@repair
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.4.2.2 2001/10/31 03:07:55 nate Exp $ */
@


1.4.2.4
log
@Re-add missing pieces
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.7 2001/09/01 15:49:05 drahn Exp $ */
@


1.3
log
@Use symbolic names
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.2 1998/08/06 15:03:57 pefo Exp $ */
d40 1
d48 1
a48 1
	__asm__ volatile("eieio\n  sync");
d57 1
a57 1
	__asm__ volatile("eieio\n  sync");
d66 1
a66 1
	__asm__ volatile("eieio\n  sync");
d76 2
a77 2
	__asm__ volatile("sthbrx %0, 0, %1\n" :: "r"(v), "r"(_p_));
	__asm__ volatile("eieio\n  sync");
d87 2
a88 2
	__asm__ volatile("stwbrx %0, 0, %1\n" :: "r"(v), "r"(_p_));
	__asm__ volatile("eieio\n  sync");
d97 1
a98 1
	__asm__ volatile("eieio\n  sync");
d108 1
a109 1
	__asm__ volatile("eieio\n  sync");
d119 1
a120 1
	__asm__ volatile("eieio\n  sync");
d131 2
a132 2
	__asm__ volatile("lhbrx %0, 0, %1\n" : "=r"(_v_) : "r"(_p_));
	__asm__ volatile("eieio\n  sync");
d143 2
a144 2
	__asm__ volatile("lwbrx %0, 0, %1\n" : "=r"(_v_) : "r"(_p_));
	__asm__ volatile("eieio\n  sync");
@


1.2
log
@Some small fixes for non ofw systems
@
text
@d1 1
a1 1
/*	$OpenBSD: pio.h,v 1.1 1997/10/13 10:53:47 pefo Exp $ */
d172 1
a172 1
#ifdef DEBUG
d184 1
a184 1
	v |= (*(volatile u_int8_t *)0x800001f4) & ~3;
d188 1
a188 1
			*(volatile u_int8_t *)0x800001f4 = v;
d190 1
a190 1
	*(u_int8_t *)0x800001f4 &= ~3;
@


1.1
log
@Monolithic PowerPC kernel, new include
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d171 22
@

