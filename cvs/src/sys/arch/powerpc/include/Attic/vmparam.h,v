head	1.11;
access;
symbols
	SMP_SYNC_A:1.11
	SMP_SYNC_B:1.11
	UBC_SYNC_A:1.11
	UBC_SYNC_B:1.11
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.6.0.6
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	SMP:1.6.0.2
	SMP_BASE:1.6
	kame_19991208:1.5
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	powerpc_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2001.09.01.15.49.05;	author drahn;	state dead;
branches;
next	1.10;

1.10
date	2001.06.27.06.19.53;	author art;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.05.20.56.50;	author art;	state Exp;
branches;
next	1.8;

1.8
date	2001.03.29.18.52.19;	author drahn;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.24.21.25.55;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2000.01.14.05.42.16;	author rahnds;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	99.11.09.04.13.54;	author rahnds;	state Exp;
branches;
next	1.4;

1.4
date	97.10.13.10.53.49;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	97.02.27.23.40.18;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	97.01.26.06.42.20;	author rahnds;	state Exp;
branches;
next	1.1;

1.1
date	96.12.21.20.35.55;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.35.55;	author rahnds;	state Exp;
branches;
next	;

1.6.2.1
date	2001.05.14.21.36.42;	author niklas;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2001.07.04.10.22.29;	author niklas;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2001.10.31.03.07.55;	author nate;	state dead;
branches;
next	1.6.2.4;

1.6.2.4
date	2001.11.13.21.04.16;	author niklas;	state Exp;
branches;
next	1.6.2.5;

1.6.2.5
date	2001.11.13.22.14.34;	author niklas;	state dead;
branches;
next	;


desc
@@


1.11
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/include to macppc/include
Some files were not "moved" but wrapper files were created which include
the powerpc/include version.

Several of the powerpc/include files where changed to reflect that they
are POWERPC_* not MACHINE_*.
@
text
@/*	$OpenBSD: vmparam.h,v 1.10 2001/06/27 06:19:53 art Exp $	*/
/*	$NetBSD: vmparam.h,v 1.1 1996/09/30 16:34:38 ws Exp $	*/

/*-
 * Copyright (C) 1995, 1996 Wolfgang Solfrank.
 * Copyright (C) 1995, 1996 TooLs GmbH.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef MACHINE_VMPARAM_H
#define MACHINE_VMPARAM_H

#define	USRTEXT		PAGE_SIZE
#define	USRSTACK	VM_MAXUSER_ADDRESS

#ifndef	MAXTSIZ
#define	MAXTSIZ		(16*1024*1024)		/* max text size */
#endif

#ifndef	DFLDSIZ
#define	DFLDSIZ		(32*1024*1024)		/* default data size */
#endif

#ifndef	MAXDSIZ
#define	MAXDSIZ		(512*1024*1024)		/* max data size */
#endif

#ifndef	DFLSSIZ
#define	DFLSSIZ		(1*1024*1024)		/* default stack size */
#endif

#ifndef	MAXSSIZ
#define	MAXSSIZ		(32*1024*1024)		/* max stack size */
#endif

/*
 * Min & Max swap space allocation chunks
 */
#define	DMMIN		32
#define	DMMAX		4096

/*
 * Size of shared memory map
 */
#ifndef	SHMMAXPGS
#define	SHMMAXPGS	1024
#endif

/*
 * Size of User Raw I/O map
 */
#define	USRIOSIZE	1024

/*
 * The time for a process to be blocked before being very swappable.
 * This is a number of seconds which the system takes as being a non-trivial
 * amount of real time.  You probably shouldn't change this;
 * it is used in subtle ways (fractions and multiples of it are, that is, like
 * half of a ``long time'', almost a long time, etc.)
 * It is related to human patience and other factors which don't really
 * change over time.
 */
#define	MAXSLP 		20

/*
 * Would like to have MAX addresses = 0, but this doesn't (currently) work
 */
#define	VM_MIN_ADDRESS		((vm_offset_t)0)
#define	VM_MAXUSER_ADDRESS	((vm_offset_t)0xfffff000)
#define	VM_MAX_ADDRESS		VM_MAXUSER_ADDRESS
#define	VM_MIN_KERNEL_ADDRESS	((vm_offset_t)(KERNEL_SR << ADDR_SR_SHFT))

/* ppc_kvm_size is so that vm space can be stolen before vm is fully
 * initialized.
 */
#define VM_KERN_ADDR_SIZE_DEF SEGMENT_LENGTH
extern vm_offset_t ppc_kvm_size;
#define VM_KERN_ADDRESS_SIZE  (ppc_kvm_size)
#define	VM_MAX_KERNEL_ADDRESS	((vm_offset_t)((KERNEL_SR << ADDR_SR_SHFT) \
						+ VM_KERN_ADDRESS_SIZE))

#define	VM_KMEM_SIZE		(NKMEMCLUSTERS * PAGE_SIZE)
#define	VM_MBUF_SIZE		(NMBCLUSTERS * PAGE_SIZE)
#define	VM_PHYS_SIZE		(USRIOSIZE * PAGE_SIZE)

struct pmap_physseg {
	struct pv_entry *pvent;
	char *attrs;
	/* NULL ??? */
};

#define	VM_PHYSSEG_MAX	32	/* actually we could have this many segments */
#define	VM_PHYSSEG_STRAT	VM_PSTRAT_BSEARCH
#define	VM_PHYSSEG_NOADD	/* can't add RAM after vm_mem_init */

#define VM_NFREELIST		1
#define VM_FREELIST_DEFAULT	0

#endif
@


1.10
log
@MNN is no longer an option.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.9 2001/05/05 20:56:50 art Exp $	*/
@


1.9
log
@Get rid of CLSIZE and all related stuff.
CLSIZE -> 1
CLBYTES -> PAGE_SIZE
OLOFSET -> PAGE_MASK
etc.
At the same time some archs needed some cleaning in vmparam.h so that
goes in at the same time.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.8 2001/03/29 18:52:19 drahn Exp $	*/
a105 2

#define	MACHINE_NEW_NONCONTIG	/* VM <=> pmap interface modifier */
@


1.8
log
@Add OpenBSD tag to headers missing them.
@
text
@d1 1
a1 1
/*	$OpenBSD:$	*/
d38 1
a38 1
#define	USRTEXT		CLBYTES
d109 3
a111 3
#define	VM_KMEM_SIZE		(NKMEMCLUSTERS * CLBYTES)
#define	VM_MBUF_SIZE		(NMBCLUSTERS * CLBYTES)
#define	VM_PHYS_SIZE		(USRIOSIZE * CLBYTES)
@


1.7
log
@Always do MACHINE_NEW_NONCONTIG, not based on UVM or not.
@
text
@d1 1
@


1.6
log
@

UVM changes mainly. As of this checkin UVM is still not working for powerpc
it has a copyin bug after device configuration. However to get these diffs
out of my tree.

All of the UVM code is currently inside ifdef UVM the kernel works fine
without option UVM. Config files have been left without UVM for now.

Prelimiary changes for busdma, (what UVM was wanted for).
@
text
@d100 1
a100 1
#define VM_KERN_ADDR_SIZE_DEF	SEGMENT_LENGTH
d102 1
a102 1
#define VM_KERN_ADDRESS_SIZE	(ppc_kvm_size)
a105 1
#ifdef UVM
a106 3
#else
#define	MACHINE_NONCONTIG	/* VM <=> pmap interface modifier */
#endif
@


1.6.2.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@a0 1
/*	$OpenBSD: vmparam.h,v 1.8 2001/03/29 18:52:19 drahn Exp $	*/
d100 1
a100 1
#define VM_KERN_ADDR_SIZE_DEF SEGMENT_LENGTH
d102 1
a102 1
#define VM_KERN_ADDRESS_SIZE  (ppc_kvm_size)
d106 1
d108 3
@


1.6.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6.2.1 2001/05/14 21:36:42 niklas Exp $	*/
d38 1
a38 1
#define	USRTEXT		PAGE_SIZE
d107 5
a111 3
#define	VM_KMEM_SIZE		(NKMEMCLUSTERS * PAGE_SIZE)
#define	VM_MBUF_SIZE		(NMBCLUSTERS * PAGE_SIZE)
#define	VM_PHYS_SIZE		(USRIOSIZE * PAGE_SIZE)
@


1.6.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6.2.2 2001/07/04 10:22:29 niklas Exp $	*/
@


1.6.2.4
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.6.2.5
log
@repair
@
text
@d1 1
a1 1
/*	$OpenBSD: vmparam.h,v 1.6.2.4 2001/11/13 21:04:16 niklas Exp $	*/
@


1.5
log
@autoconf.h
	add mac hooks to the powerpc config structure, probably
	a hack, and certainly needs to be cleaned up.
bus.h
	p4e_ -> ppc_X
	add write_multi and prototypes for bus_space_X_raw_multi functions.
intr.h
	add structure for interrupt handler.
pio.h
	remove the unnecessary and slowing "sync" instruction from
	each pio access.
	remove unnecessary newline characters from the generated asm.
	eieio after writes, but before reads.
types.h
	formatting change
vmparam.h
	change powerpc kernel virtual memory sizing from a fixed segment
	to a variable, initialized with a segment size, this is
	so that the pmap allocator can steal virtual memory, if vm
	is not yet set up. Necessary for mapping devices before the
	kernel vm structures are initialized.
@
text
@d34 3
d106 3
d110 1
d117 2
d129 1
@


1.4
log
@Monolithic PowerPC kernel, new include
@
text
@d93 7
d101 1
a101 1
						+ SEGMENT_LENGTH))
d108 12
@


1.3
log
@Fix MAXBUFCACHE changes.
@
text
@d96 2
@


1.2
log
@change default data limit so that source build will work without modifications.
@
text
@d93 2
@


1.1
log
@Initial revision
@
text
@d42 1
a42 1
#define	DFLDSIZ		(16*1024*1024)		/* default data size */
@


1.1.1.1
log
@Check-in of powerpc kernel support.
NOTE: This will not work until the other pieces are checked in.
This is primarily the NetBSD powerpc port, with modifications
to support ELF. 
@
text
@@
