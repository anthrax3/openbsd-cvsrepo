head	1.9;
access;
symbols
	SMP_SYNC_A:1.9
	SMP_SYNC_B:1.9
	UBC_SYNC_A:1.9
	UBC_SYNC_B:1.9
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	SMP:1.2.0.8
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2001.09.01.15.44.20;	author drahn;	state dead;
branches;
next	1.8;

1.8
date	2001.07.09.04.41.28;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.25.23.30.04;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.29.01.20.44;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.29.22.54.37;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.28.13.03.24;	author rahnds;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.20.07.05.53;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	98.08.22.18.31.59;	author rahnds;	state Exp;
branches
	1.2.8.1;
next	1.1;

1.1
date	97.10.13.13.42.59;	author pefo;	state Exp;
branches;
next	;

1.2.8.1
date	2000.03.24.09.08.43;	author niklas;	state Exp;
branches;
next	1.2.8.2;

1.2.8.2
date	2001.05.14.21.36.56;	author niklas;	state Exp;
branches;
next	1.2.8.3;

1.2.8.3
date	2001.07.04.10.22.59;	author niklas;	state Exp;
branches;
next	1.2.8.4;

1.2.8.4
date	2001.10.31.03.07.55;	author nate;	state dead;
branches;
next	1.2.8.5;

1.2.8.5
date	2001.11.13.21.04.16;	author niklas;	state Exp;
branches;
next	1.2.8.6;

1.2.8.6
date	2001.11.13.22.14.34;	author niklas;	state dead;
branches;
next	;


desc
@@


1.9
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/powerpc to macppc/macppc

This moves hardware specific files from the common directory to the
platform specific directory. This leaves common files.
With this change all of the debugger (db_) files have been moved to
the platform specific directory. The debugger should be reconsidered
and commonized.
@
text
@/*	$OpenBSD: mainbus.c,v 1.8 2001/07/09 04:41:28 mickey Exp $	*/

/*
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/device.h>
#include <sys/reboot.h>

#include <machine/autoconf.h>
#include <dev/ofw/openfirm.h>

struct mainbus_softc {
	struct	device sc_dv;
	struct	bushook sc_bus;
};

/* Definition of the mainbus driver. */
static int	mbmatch __P((struct device *, void *, void *));
static void	mbattach __P((struct device *, struct device *, void *));
static int	mbprint __P((void *, const char *));

struct cfattach mainbus_ca = {
	sizeof(struct mainbus_softc), mbmatch, mbattach
};
struct cfdriver mainbus_cd = {
	NULL, "mainbus", DV_DULL, NULL, 0
};

void	mb_intr_establish __P((struct confargs *, int (*)(void *), void *));
void	mb_intr_disestablish __P((struct confargs *));
caddr_t	mb_cvtaddr __P((struct confargs *));
int	mb_matchname __P((struct confargs *, char *));

/*ARGSUSED*/
static int
mbmatch(parent, cfdata, aux)
	struct device *parent;
	void *cfdata;
	void *aux;
{

	/*
	 * That one mainbus is always here.
	 */
	return(1);
}

static void
mbattach(parent, self, aux)
	struct device *parent;
	struct device *self;
	void *aux;
{
	struct mainbus_softc *sc = (struct mainbus_softc *)self;
	struct confargs nca;
	extern int system_type;

	printf("\n");

	sc->sc_bus.bh_dv = (struct device *)sc;
	sc->sc_bus.bh_type = BUS_MAIN;
	sc->sc_bus.bh_intr_establish = mb_intr_establish;
	sc->sc_bus.bh_intr_disestablish = mb_intr_disestablish;
	sc->sc_bus.bh_matchname = mb_matchname;

	/*
	 * Try to find and attach all of the CPUs in the machine.
	 * ( Right now only one CPU so code is simple )
	 */

	nca.ca_name = "cpu";
	nca.ca_bus = &sc->sc_bus;
	config_found(self, &nca, mbprint);

	/* Set up Openfirmware.*/
	if (system_type != POWER4e) { /* for now */
		nca.ca_name = "ofroot";
		nca.ca_bus = &sc->sc_bus;
		config_found(self, &nca, mbprint);
	} 


	/* The following machines have an ISA bus */
	/* Do ISA first so the interrupt controller is set up! */
	if (system_type == POWER4e) {
		nca.ca_name = "isabr";
		nca.ca_bus = &sc->sc_bus;
		config_found(self, &nca, mbprint);
	}

	/* The following machines have a PCI bus */
	if (system_type == APPL) {
		char name[32];
		int node;
		for (node = OF_child(OF_peer(0)); node; node=OF_peer(node)) {
			bzero (name, sizeof(name));
			if (OF_getprop(node, "device_type", name, sizeof(name)) <= 0)
			{
				if (OF_getprop(node, "name", name, sizeof(name)) <= 0)
					printf ("name not found on node %x\n");
					continue;
			}
			if (strcmp(name, "memory-controller") == 0) {
				nca.ca_name = "memc";
				nca.ca_node = node;
				nca.ca_bus = &sc->sc_bus;
				config_found(self, &nca, mbprint);
			}
			if (strcmp(name, "pci") == 0) {
				nca.ca_name = "mpcpcibr";
				nca.ca_node = node;
				nca.ca_bus = &sc->sc_bus;
				config_found(self, &nca, mbprint);
			} 

		}
	} else if (system_type != OFWMACH) {
		nca.ca_name = "mpcpcibr";
		nca.ca_bus = &sc->sc_bus;
		nca.ca_node = OF_finddevice("/pci");
		config_found(self, &nca, mbprint);
	}
}

static int
mbprint(aux, pnp)
	void *aux;
	const char *pnp;
{
	if (pnp)
		return (QUIET);
	return (UNCONF);
}

void
mb_intr_establish(ca, handler, val)
	struct confargs *ca;
	int (*handler) __P((void *));
	void *val;
{
	panic("can never mb_intr_establish");
}

void
mb_intr_disestablish(ca)
	struct confargs *ca;
{
	panic("can never mb_intr_disestablish");
}

caddr_t
mb_cvtaddr(ca)
	struct confargs *ca;
{

	return (NULL);
}

int
mb_matchname(ca, name)
	struct confargs *ca;
	char *name;
{
	return (strcmp(name, ca->ca_name) == 0);
}
@


1.8
log
@only on prog_switch, more includes and protos
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.7 2001/06/25 23:30:04 drahn Exp $	*/
@


1.7
log
@closer to building with -Wno-uninitialized
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.6 2001/05/29 01:20:44 drahn Exp $	*/
d36 1
d121 1
a121 1
		for (node = OF_child(OF_peer(0)); node; node= OF_peer(node)) {
@


1.6
log
@Hardware clock support, via adb.
This reduces the dependancy on openfirmware somewhat.
Since Openfirmware is not actually used for anything,
it is no longer necessary to configure it. so several lines of
useless dmesg are now gone.

This does not have clock setting code enabled yet.
All of the code is in place, but needs further testing before
it is trusted.

I wish Apple would store UTC not localtime in the hardware clock,
besides the fact that the clock base is 1904.

Need to keep the clock sane for dual boot machines.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.5 2001/03/29 22:54:37 drahn Exp $	*/
d59 1
a65 1
	struct cfdata *cf = cfdata;
@


1.5
log
@Get rid of Data modified on freelist: at boot.
Always allocate the devices's softc structure, not just struct device.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.4 2000/07/28 13:03:24 rahnds Exp $	*/
d127 6
@


1.4
log
@Allow device type or name to be used for locating the pci bridge.
Should allow configuration of bandit in older powermac machines.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.3 2000/03/20 07:05:53 rahnds Exp $	*/
d48 1
a48 1
	sizeof(struct device), mbmatch, mbattach
@


1.3
log
@add first version of bus_dma for powerpc.
changes to trap handler to print out better information for jump to 0 bugs.
changes to pmap.c and machdep.c to debug a duplicate memory region
bug occasionally observed on imac with compressed kernels.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.2 1998/08/22 18:31:59 rahnds Exp $	*/
d122 1
a122 1
			if (OF_getprop(node, "name", name, sizeof(name)) <= 0)
d124 3
a126 2
				printf ("name not found on node %x\n");
				continue;
@


1.2
log
@Various changes to allow mixing of ofw drivers and real drivers.
NCR driver seems to work.
Major changes are isa can be child of pci or mainbus.
ofroot is child of mainbus not root.
ofw bus configured before pci bus
Note that if a pci device configures accessing of driver will crash
the system. they need to be exclusive.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.1 1997/10/13 13:42:59 pefo Exp $	*/
d117 19
a135 1
	if (system_type != OFWMACH) {
d138 1
@


1.2.8.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d117 1
a117 19
	if (system_type == APPL) {
		char name[32];
		int node;
		for (node = OF_child(OF_peer(0)); node; node= OF_peer(node)) {
			bzero (name, sizeof(name));
			if (OF_getprop(node, "name", name, sizeof(name)) <= 0)
			{
				printf ("name not found on node %x\n");
				continue;
			}
			if (strcmp(name, "pci") == 0) {
				nca.ca_name = "mpcpcibr";
				nca.ca_node = node;
				nca.ca_bus = &sc->sc_bus;
				config_found(self, &nca, mbprint);
			} 

		}
	} else if (system_type != OFWMACH) {
a119 1
		nca.ca_node = OF_finddevice("/pci");
@


1.2.8.2
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.5 2001/03/29 22:54:37 drahn Exp $	*/
d48 1
a48 1
	sizeof(struct mainbus_softc), mbmatch, mbattach
d122 1
a122 1
			if (OF_getprop(node, "device_type", name, sizeof(name)) <= 0)
d124 2
a125 3
				if (OF_getprop(node, "name", name, sizeof(name)) <= 0)
					printf ("name not found on node %x\n");
					continue;
@


1.2.8.3
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.2.8.2 2001/05/14 21:36:56 niklas Exp $	*/
a58 1
/*ARGSUSED*/
d65 1
a126 6
			}
			if (strcmp(name, "memory-controller") == 0) {
				nca.ca_name = "memc";
				nca.ca_node = node;
				nca.ca_bus = &sc->sc_bus;
				config_found(self, &nca, mbprint);
@


1.2.8.4
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.2.8.3 2001/07/04 10:22:59 niklas Exp $	*/
@


1.2.8.5
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.2.8.6
log
@repair
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.2.8.5 2001/11/13 21:04:16 niklas Exp $	*/
@


1.1
log
@Monolithic (No OpenFirmware driver crap...) PowerPC kernel. This is the
first release based on Wolfgang Solfrank, TooLs GmbH, work. Most OFW stuff
has been ripped out. Only a few functions for memory probing and halt/reboot
functionality has been kept. The kernel currently works with V.I's power.4e
PowerPC604 board, but more will come.
@
text
@d1 1
a1 1
/*	$OpenBSD: mainbus.c,v 1.6 1997/04/19 17:19:45 pefo Exp $	*/
d100 7
d117 1
a117 1
	if (system_type == POWER4e) {
@

