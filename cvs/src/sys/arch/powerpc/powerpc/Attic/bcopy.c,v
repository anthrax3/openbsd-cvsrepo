head	1.8;
access;
symbols
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.5.0.36
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.34
	OPENBSD_5_0:1.5.0.32
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.30
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.28
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.24
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.26
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.22
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.20
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.18
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.16
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.14
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.12
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.14
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	powerpc_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2013.06.13.04.34.34;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2012.12.05.23.20.14;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2012.10.25.04.07.50;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.15.02.43.09;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.23.27.53;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.24.04.56.07;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	96.12.28.06.21.37;	author rahnds;	state Exp;
branches
	1.2.14.1;
next	1.1;

1.1
date	96.12.21.20.35.56;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.35.56;	author rahnds;	state Exp;
branches;
next	;

1.2.14.1
date	2001.07.04.10.22.48;	author niklas;	state Exp;
branches;
next	1.2.14.2;

1.2.14.2
date	2001.11.13.22.14.34;	author niklas;	state dead;
branches;
next	1.2.14.3;

1.2.14.3
date	2002.03.29.19.46.01;	author niklas;	state Exp;
branches;
next	1.2.14.4;

1.2.14.4
date	2003.06.07.11.13.18;	author ho;	state Exp;
branches;
next	1.2.14.5;

1.2.14.5
date	2004.02.19.10.49.57;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.8
log
@don't use a ridiculous private copy of bcopy which is just like libc.
At least try to do a better job in libkern (not yet, but one day soon)
@
text
@/*	$OpenBSD: bcopy.c,v 1.7 2012/12/05 23:20:14 deraadt Exp $	*/
/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */


#include <sys/types.h>
#include <sys/systm.h>

/*
 * sizeof(word) MUST BE A POWER OF TWO
 * SO THAT wmask BELOW IS ALL ONES
 */
typedef	int word;		/* "word" used for optimal copy speed */

#define	wsize	sizeof(word)
#define	wmask	(wsize - 1)

/*
 * Copy a block of memory, handling overlap.
 * This is the routine that actually implements
 * (the portable versions of) bcopy, memcpy, and memmove.
 */
#ifdef MEMCOPY
void *
memcpy(void *dst0, const void *src0, size_t length)
#else
#ifdef MEMMOVE
void *
memmove(void *dst0, const void *src0, size_t length)
#else
void
bcopy(const void *src0, void *dst0, size_t length)
#endif
#endif
{
	char *dst = dst0;
	const char *src = src0;
	size_t t;

	if (length == 0 || dst == src)		/* nothing to do */
		goto done;

	/*
	 * Macros: loop-t-times; and loop-t-times, t>0
	 */
#define	TLOOP(s) if (t) TLOOP1(s)
#define	TLOOP1(s) do { s; } while (--t)

	if ((unsigned long)dst < (unsigned long)src) {
		/*
		 * Copy forward.
		 */
		t = (int)src;	/* only need low bits */
		if ((t | (int)dst) & wmask) {
			/*
			 * Try to align operands.  This cannot be done
			 * unless the low bits match.
			 */
			if ((t ^ (int)dst) & wmask || length < wsize)
				t = length;
			else
				t = wsize - (t & wmask);
			length -= t;
			TLOOP1(*dst++ = *src++);
		}
		/*
		 * Copy whole words, then mop up any trailing bytes.
		 */
		t = length / wsize;
		TLOOP(*(word *)dst = *(word *)src; src += wsize; dst += wsize);
		t = length & wmask;
		TLOOP(*dst++ = *src++);
	} else {
		/*
		 * Copy backwards.  Otherwise essentially the same.
		 * Alignment works as before, except that it takes
		 * (t&wmask) bytes to align, not wsize-(t&wmask).
		 */
		src += length;
		dst += length;
		t = (int)src;
		if ((t | (int)dst) & wmask) {
			if ((t ^ (int)dst) & wmask || length <= wsize)
				t = length;
			else
				t &= wmask;
			length -= t;
			TLOOP1(*--dst = *--src);
		}
		t = length / wsize;
		TLOOP(src -= wsize; dst -= wsize; *(word *)dst = *(word *)src);
		t = length & wmask;
		TLOOP(*--dst = *--src);
	}
done:
#if defined(MEMCOPY) || defined(MEMMOVE)
	return (dst0);
#else
	return;
#endif
}
@


1.7
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: bcopy.c,v 1.6 2012/10/25 04:07:50 deraadt Exp $	*/
@


1.6
log
@Some LIBC_SCCS found lurking in the shadows
@
text
@d1 1
a1 1
/*	$OpenBSD: bcopy.c,v 1.5 2003/10/15 02:43:09 drahn Exp $	*/
a34 4
#include <sys/cdefs.h>
/*
#include <string.h>
*/
@


1.5
log
@Sometimes KNF is not a destination, but a journey. Also ANSI.
Binaries unchanged.
@
text
@d1 1
a1 1
/*	$OpenBSD: bcopy.c,v 1.4 2003/06/02 23:27:53 millert Exp $	*/
a33 4
#if defined(LIBC_SCCS) && !defined(lint)
/*static char *sccsid = "from: @@(#)bcopy.c	5.11 (Berkeley) 6/21/91";*/
static char *rcsid = "$Id: bcopy.c,v 1.4 2003/06/02 23:27:53 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: bcopy.c,v 1.3 2001/06/24 04:56:07 drahn Exp $	*/
d36 1
a36 1
static char *rcsid = "$Id: bcopy.c,v 1.3 2001/06/24 04:56:07 drahn Exp $";
d62 1
a62 1
memcpy(dst0, src0, length)
d66 1
a66 1
memmove(dst0, src0, length)
d69 1
a69 1
bcopy(src0, dst0, length)
a71 3
	void *dst0;
	const void *src0;
	register size_t length;
d73 3
a75 3
	register char *dst = dst0;
	register const char *src = src0;
	register size_t t;
@


1.3
log
@Add systm.h for prototypes.
@
text
@d1 1
a1 1
/*	$OpenBSD: bcopy.c,v 1.2 1996/12/28 06:21:37 rahnds Exp $	*/
d17 1
a17 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
static char *rcsid = "$Id: bcopy.c,v 1.2 1996/12/28 06:21:37 rahnds Exp $";
@


1.2
log
@Adding OpenBSD tags to files.
@
text
@d1 1
a1 1
/*	$OpenBSD:$	*/
d40 1
a40 1
static char *rcsid = "$Id: bcopy.c,v 1.1.1.1 1996/12/21 20:35:56 rahnds Exp $";
d48 1
@


1.2.14.1
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: bcopy.c,v 1.2 1996/12/28 06:21:37 rahnds Exp $	*/
d40 1
a40 1
static char *rcsid = "$Id: bcopy.c,v 1.2 1996/12/28 06:21:37 rahnds Exp $";
a47 1
#include <sys/systm.h>
@


1.2.14.2
log
@repair
@
text
@d1 1
a1 1
/*	$OpenBSD: bcopy.c,v 1.2.14.1 2001/07/04 10:22:48 niklas Exp $	*/
d40 1
a40 1
static char *rcsid = "$Id: bcopy.c,v 1.2.14.1 2001/07/04 10:22:48 niklas Exp $";
@


1.2.14.3
log
@Re-add missing pieces
@
text
@d1 1
a1 1
/*	$OpenBSD: bcopy.c,v 1.3 2001/06/24 04:56:07 drahn Exp $	*/
d40 1
a40 1
static char *rcsid = "$Id: bcopy.c,v 1.3 2001/06/24 04:56:07 drahn Exp $";
@


1.2.14.4
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: bcopy.c,v 1.2.14.3 2002/03/29 19:46:01 niklas Exp $	*/
d17 5
a21 1
 * 3. Neither the name of the University nor the names of its contributors
d40 1
a40 1
static char *rcsid = "$Id: bcopy.c,v 1.2.14.3 2002/03/29 19:46:01 niklas Exp $";
@


1.2.14.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d36 1
a36 1
static char *rcsid = "$Id$";
d62 1
a62 1
memcpy(void *dst0, const void *src0, size_t length)
d66 1
a66 1
memmove(void *dst0, const void *src0, size_t length)
d69 1
a69 1
bcopy(const void *src0, void *dst0, size_t length)
d72 3
d76 3
a78 3
	char *dst = dst0;
	const char *src = src0;
	size_t t;
@


1.1
log
@Initial revision
@
text
@d1 1
d40 1
a40 1
static char *rcsid = "$Id: bcopy.c,v 1.1 1996/09/30 16:34:40 ws Exp $";
@


1.1.1.1
log
@Check-in of powerpc kernel support.
NOTE: This will not work until the other pieces are checked in.
This is primarily the NetBSD powerpc port, with modifications
to support ELF. 
@
text
@@
