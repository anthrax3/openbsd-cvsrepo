head	1.27;
access;
symbols
	SMP_SYNC_A:1.27
	SMP_SYNC_B:1.27
	UBC_SYNC_A:1.27
	UBC_SYNC_B:1.27
	OPENBSD_2_9_BASE:1.20
	OPENBSD_2_9:1.20.0.2
	OPENBSD_2_8:1.18.0.2
	OPENBSD_2_8_BASE:1.18
	OPENBSD_2_7:1.14.0.4
	OPENBSD_2_7_BASE:1.14
	SMP:1.14.0.2
	SMP_BASE:1.14
	kame_19991208:1.14
	OPENBSD_2_6:1.13.0.6
	OPENBSD_2_6_BASE:1.13
	OPENBSD_2_5:1.13.0.4
	OPENBSD_2_5_BASE:1.13
	OPENBSD_2_4:1.13.0.2
	OPENBSD_2_4_BASE:1.13
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	powerpc_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.27
date	2001.09.01.15.44.20;	author drahn;	state dead;
branches;
next	1.26;

1.26
date	2001.08.06.22.34.44;	author mickey;	state Exp;
branches;
next	1.25;

1.25
date	2001.07.09.04.41.28;	author mickey;	state Exp;
branches;
next	1.24;

1.24
date	2001.07.05.02.40.44;	author mickey;	state Exp;
branches;
next	1.23;

1.23
date	2001.06.27.06.56.29;	author kjc;	state Exp;
branches;
next	1.22;

1.22
date	2001.06.25.03.20.13;	author kjell;	state Exp;
branches;
next	1.21;

1.21
date	2001.06.23.03.30.38;	author matthieu;	state Exp;
branches;
next	1.20;

1.20
date	2001.03.29.19.56.33;	author drahn;	state Exp;
branches;
next	1.19;

1.19
date	2001.03.01.23.19.34;	author drahn;	state Exp;
branches;
next	1.18;

1.18
date	2000.10.01.00.23.26;	author rahnds;	state Exp;
branches;
next	1.17;

1.17
date	2000.09.26.14.03.54;	author art;	state Exp;
branches;
next	1.16;

1.16
date	2000.09.06.02.45.11;	author rahnds;	state Exp;
branches;
next	1.15;

1.15
date	2000.06.15.03.12.46;	author rahnds;	state Exp;
branches;
next	1.14;

1.14
date	99.11.09.00.20.42;	author rahnds;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	98.09.27.03.56.00;	author rahnds;	state Exp;
branches;
next	1.12;

1.12
date	98.09.25.09.20.54;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	98.09.16.04.18.09;	author rahnds;	state Exp;
branches;
next	1.10;

1.10
date	98.08.06.15.04.06;	author pefo;	state Exp;
branches;
next	1.9;

1.9
date	98.07.07.06.56.09;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	98.07.07.03.02.45;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	98.05.29.04.15.38;	author rahnds;	state Exp;
branches;
next	1.6;

1.6
date	97.11.23.05.21.58;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	97.10.28.10.36.13;	author pefo;	state Exp;
branches;
next	1.4;

1.4
date	97.10.13.13.42.54;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	97.02.06.04.36.41;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	96.12.28.06.21.41;	author rahnds;	state Exp;
branches;
next	1.1;

1.1
date	96.12.21.20.35.56;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.35.56;	author rahnds;	state Exp;
branches;
next	;

1.14.2.1
date	2001.05.14.21.36.55;	author niklas;	state Exp;
branches;
next	1.14.2.2;

1.14.2.2
date	2001.07.04.10.22.48;	author niklas;	state Exp;
branches;
next	1.14.2.3;

1.14.2.3
date	2001.10.31.03.07.55;	author nate;	state dead;
branches;
next	1.14.2.4;

1.14.2.4
date	2001.11.13.21.04.16;	author niklas;	state Exp;
branches;
next	1.14.2.5;

1.14.2.5
date	2001.11.13.22.14.34;	author niklas;	state dead;
branches;
next	;


desc
@@


1.27
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/powerpc to macppc/macppc

This moves hardware specific files from the common directory to the
platform specific directory. This leaves common files.
With this change all of the debugger (db_) files have been moved to
the platform specific directory. The debugger should be reconsidered
and commonized.
@
text
@/*	$OpenBSD: conf.c,v 1.26 2001/08/06 22:34:44 mickey Exp $ */

/*
 * Copyright (c) 1997 Per Fogelstrom
 * Copyright (c) 1997 RTMX Inc, North Carolina
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed under OpenBSD for RTMX Inc,
 *	North Carolina, USA, by Per Fogelstrom, Opsycon AB, Sweden.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */
#include <sys/param.h>
#include <sys/buf.h>
#include <sys/conf.h>
#include <sys/ioctl.h>
#include <sys/systm.h>
#include <sys/tty.h>
#include <sys/vnode.h>

#include "wd.h"
bdev_decl(wd);
#include "sd.h"
bdev_decl(sd);
#include "cd.h"
bdev_decl(cd);

#include "ofdisk.h"
bdev_decl(ofd);

#include "rd.h"
bdev_decl(rd);

#include "vnd.h"
bdev_decl(vnd);
#include "ccd.h"
bdev_decl(ccd);
#include "raid.h"
bdev_decl(raid);

struct bdevsw bdevsw[] = {
	bdev_disk_init(NWD,wd),		/* 0: ST506/ESDI/IDE disk */
	bdev_swap_init(1,sw),		/* 1 swap pseudo device */
	bdev_disk_init(NSD,sd),		/* 2 SCSI Disk */
	bdev_disk_init(NCD,cd),		/* 3 SCSI CD-ROM */
	bdev_disk_init(NOFDISK,ofd),	/* 4 Openfirmware disk */
	bdev_notdef(),                  /* 5 unknown*/
	bdev_notdef(),                  /* 6 unknown*/
	bdev_notdef(),                  /* 7 unknown*/
	bdev_lkm_dummy(),		/* 8 */
	bdev_lkm_dummy(),		/* 9 */
	bdev_lkm_dummy(),		/* 10 */
	bdev_lkm_dummy(),		/* 11 */
	bdev_lkm_dummy(),		/* 12 */
	bdev_lkm_dummy(),		/* 13 */
	bdev_disk_init(NVND,vnd),	/* 14 vnode disk driver*/
	bdev_notdef(),                  /* 15 unknown*/
	bdev_disk_init(NCCD,ccd),	/* 16 concatenated disk driver*/
	bdev_disk_init(NRD,rd),		/* 17 ram disk driver*/
	bdev_notdef(),                  /* 18 unknown*/
	bdev_disk_init(NRAID,raid),	/* 19: RAIDframe disk driver */
};
int nblkdev = sizeof bdevsw / sizeof bdevsw[0];

cdev_decl(cn);
cdev_decl(ctty);
#define mmread	mmrw
#define	mmwrite	mmrw
cdev_decl(mm);
#include "pty.h"
#define	ptstty		ptytty
#define	ptsioctl	ptyioctl
cdev_decl(pts);
#define	ptctty		ptytty
#define	ptcioctl	ptyioctl
cdev_decl(ptc);
cdev_decl(log);
#include "com.h"
cdev_decl(com);

#include "ofcons.h"
cdev_decl(ofc);
cdev_decl(ofd);

#include "ofrtc.h"
cdev_decl(ofrtc);


cdev_decl(kbd);
cdev_decl(ms);

#include "wsdisplay.h"
#include "wskbd.h"
#include "wsmouse.h"

cdev_decl(wsdisplay);
cdev_decl(wskbd);
cdev_decl(wsmouse);

#include <sd.h>
#include <st.h>
#include <cd.h>
#include <uk.h>
#include <ss.h>
cdev_decl(st);  
cdev_decl(sd);
cdev_decl(cd);
cdev_decl(vnd);
cdev_decl(ccd);
cdev_decl(rd);  
#include "raid.h"
#include "iop.h"

#include <wd.h>
cdev_decl(wd);

dev_decl(filedesc,open);

#include "bpfilter.h"
cdev_decl(bpf); 

#include "tun.h"
cdev_decl(tun);
cdev_decl(random); 

#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
#endif

#ifdef LKM
#define NLKM 1
#else
#define NLKM 0
#endif  
 
cdev_decl(lkm);

#include "ksyms.h"
cdev_decl(ksyms);
#include "usb.h"
cdev_decl(usb);
#include "uhid.h"
cdev_decl(uhid);
#include "ugen.h"
cdev_decl(ugen);
#include "ulpt.h"
cdev_decl(ulpt);
#include "urio.h"
cdev_decl(urio);
#include "ucom.h"
cdev_decl(ucom);

#include "wsmux.h"
cdev_decl(wsmux);

#ifdef USER_PCICONF
#include "pci.h"
cdev_decl(pci);
#endif

#include "audio.h"
cdev_decl(audio);

#include "pf.h"
cdev_decl(pf);

#include <altq/altqconf.h>

struct cdevsw cdevsw[] = {
        cdev_cn_init(1,cn),             /* 0: virtual console */
        cdev_ctty_init(1,ctty),         /* 1: controlling terminal */
        cdev_mm_init(1,mm),             /* 2: /dev/{null,mem,kmem,...} */
        cdev_swap_init(1,sw),           /* 3: /dev/drum (swap pseudo-device) */
        cdev_tty_init(NPTY,pts),        /* 4: pseudo-tty slave */
        cdev_ptc_init(NPTY,ptc),        /* 5: pseudo-tty master */
        cdev_log_init(1,log),           /* 6: /dev/klog */
	cdev_tty_init(NCOM,com),	/* 7: Serial ports */
        cdev_disk_init(NSD,sd),         /* 8: SCSI disk */
        cdev_disk_init(NCD,cd),         /* 9: SCSI CD-ROM */
        cdev_notdef(),                  /* 10: SCSI changer */
	cdev_disk_init(NWD,wd),		/* 11: ST506/ESDI/IDE disk */
        cdev_notdef(),                  /* 12 */
	cdev_disk_init(NOFDISK,ofd),	/* 13 Openfirmware disk */
        cdev_tty_init(NOFCONS,ofc),	/* 14 Openfirmware console */
        cdev_notdef(),                  /* 15 */
        cdev_notdef(),                  /* 16 */
	cdev_disk_init(NRD,rd),		/* 17 ram disk driver*/
	cdev_disk_init(NCCD,ccd),	/* 18 concatenated disk driver */
        cdev_disk_init(NVND,vnd),       /* 19: vnode disk */
        cdev_tape_init(NST,st),         /* 20: SCSI tape */
        cdev_fd_init(1,filedesc),       /* 21: file descriptor pseudo-dev */
        cdev_bpftun_init(NBPFILTER,bpf),/* 22: berkeley packet filter */
        cdev_bpftun_init(NTUN,tun),     /* 23: network tunnel */
        cdev_lkm_init(NLKM,lkm),        /* 24: loadable module driver */
        cdev_notdef(),                  /* 25 */
        cdev_notdef(),                  /* 26 */
        cdev_notdef(),                  /* 27 */
        cdev_notdef(),                  /* 28 */
        cdev_notdef(),                  /* 29 */
        cdev_notdef(),                  /* 30 */
        cdev_notdef(),                  /* 31 */
        cdev_notdef(),                  /* 32 */
        cdev_lkm_dummy(),               /* 33 */
        cdev_lkm_dummy(),               /* 34 */
        cdev_lkm_dummy(),               /* 35 */
        cdev_lkm_dummy(),               /* 36 */
        cdev_lkm_dummy(),               /* 37 */
        cdev_lkm_dummy(),               /* 38 */
        cdev_pf_init(NPF,pf),		/* 39: packet filter */
        cdev_random_init(1,random),     /* 40: random data source */
	cdev_uk_init(NUK,uk),		/* 41: unknown SCSI */
	cdev_ss_init(NSS,ss),           /* 42: SCSI scanner */
	cdev_ksyms_init(NKSYMS,ksyms),	/* 43: Kernel symbols device */
	cdev_audio_init(NAUDIO,audio),  /* 44: generic audio I/O */
        cdev_notdef(),                  /* 45 */
        cdev_notdef(),                  /* 46 */
        cdev_notdef(),                  /* 47 */
        cdev_notdef(),                  /* 48 */
        cdev_notdef(),                  /* 49 */ 
        cdev_notdef(),                  /* 50 */ 
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),	/* 51: xfs communication device */
#else
        cdev_notdef(),                  /* 51 */
#endif
        cdev_notdef(),                  /* 52 */ 
        cdev_notdef(),                  /* 53 */ 
	cdev_disk_init(NRAID,raid),	/* 54: RAIDframe disk driver */
        cdev_notdef(),                  /* 55 */ 
	/* The following slots are reserved for isdn4bsd. */
	cdev_notdef(),			/* 56: i4b main device */
	cdev_notdef(),			/* 57: i4b control device */
	cdev_notdef(),			/* 58: i4b raw b-channel access */
	cdev_notdef(),			/* 59: i4b trace device */
	cdev_notdef(),			/* 60: i4b phone device */
	/* End of reserved slots for isdn4bsd. */
	cdev_usb_init(NUSB,usb),	/* 61: USB controller */
	cdev_usbdev_init(NUHID,uhid),	/* 62: USB generic HID */
	cdev_ugen_init(NUGEN,ugen),	/* 63: USB generic driver */
	cdev_ulpt_init(NULPT,ulpt), 	/* 64: USB printers */
	cdev_usbdev_init(NURIO,urio),	/* 65: USB Diamond Rio 500 */
	cdev_tty_init(NUCOM,ucom),	/* 66: USB tty */
	cdev_wsdisplay_init(NWSDISPLAY,	/* 67: frame buffers, etc. */
		wsdisplay),
	cdev_mouse_init(NWSKBD, wskbd),	/* 68: keyboards */
	cdev_mouse_init(NWSMOUSE,	/* 69: mice */
		wsmouse),
	cdev_mouse_init(NWSMUX, wsmux),	/* 70: ws multiplexor */
#ifdef USER_PCICONF
	cdev_pci_init(NPCI,pci),        /* 71: PCI user */
#else
	cdev_notdef(),
#endif
	cdev_altq_init(NALTQ,altq),	/* 72: ALTQ control interface */
	cdev_iop_init(NIOP,iop),	/* 73: I2O IOP control interface */
};
int nchrdev = sizeof cdevsw / sizeof cdevsw[0];

int mem_no = 2;				/* major number of /dev/mem */

/*
 * Swapdev is a fake device implemented in sw.c.
 * It is used only internally to get to swstrategy.
 */
dev_t swapdev = makedev(1, 0);

/*
 * Check whether dev is /dev/mem or /dev/kmem.
 */
int
iskmemdev(dev)
	dev_t dev;
{
	return major(dev) == mem_no && minor(dev) < 2;
}

/*
 * Check whether dev is /dev/zero.
 */
int
iszerodev(dev)
	dev_t dev;
{
	return major(dev) == mem_no && minor(dev) == 12;
}

dev_t
getnulldev()
{
	return makedev(mem_no, 2);
}

static int chrtoblktbl[] = {
	/*VCHR*/	/*VBLK*/
	/*  0 */	NODEV,
	/*  1 */	NODEV,
	/*  2 */	NODEV,
	/*  3 */	NODEV,
	/*  4 */	NODEV,
	/*  5 */	NODEV,
	/*  6 */	NODEV,
	/*  7 */	NODEV,
	/*  8 */	2,
	/*  9 */	NODEV,
	/* 10 */	NODEV,
	/* 11 */	0,
	/* 12 */	NODEV,
	/* 13 */	4,
	/* 14 */	NODEV,
	/* 15 */	NODEV,
	/* 16 */	NODEV,
	/* 17 */	17,
};

/*
 * Return accompanying block dev for a char dev.
 */
int
chrtoblk(dev)
	dev_t dev;
{
	int blkmaj;
	
	if (major(dev) >= nchrdev ||
	    major(dev) > sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]))
		return (NODEV);
	blkmaj = chrtoblktbl[major(dev)];
	if (blkmaj == NODEV)
		return (NODEV);
	return (makedev(blkmaj, minor(dev)));
}

/*
 * Convert a character device number to a block device number.
 */
dev_t
blktochr(dev)
	dev_t dev;
{
	int blkmaj = major(dev);
	int i;

	if (blkmaj >= nblkdev)
		return (NODEV);
	for (i = 0; i < sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]); i++)
		if (blkmaj == chrtoblktbl[i])
			return (makedev(i, minor(dev)));
	return (NODEV);
}

#include <dev/cons.h>
#include "vgafb_pci.h"

cons_decl(ws);
cons_decl(com);
cons_decl(ofc);

struct consdev constab[] = {
#if NWSDISPLAY > 0
	cons_init(ws),
#endif
#if NOFCONS > 0
	cons_init(ofc),
#endif
#if NCOM > 0
	cons_init(com),
#endif
	{ 0 },
};
@


1.26
log
@remove vm_conf.h; art@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.25 2001/07/09 04:41:28 mickey Exp $ */
@


1.25
log
@only on prog_switch, more includes and protos
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.24 2001/07/05 02:40:44 mickey Exp $ */
a46 1
bdev_decl(sw);
a99 1
cdev_decl(sw);
@


1.24
log
@add iop
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.23 2001/06/27 06:56:29 kjc Exp $ */
d377 1
a377 1
#include <vgafb_pci.h>
@


1.23
log
@add the ALTQ device to the rest of the architectures.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.22 2001/06/25 03:20:13 kjell Exp $ */
d136 1
a136 1
cdev_decl(raid);
d280 1
@


1.22
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.21 2001/06/23 03:30:38 matthieu Exp $ */
d192 2
d279 1
@


1.21
log
@PCI bus configuration userland access from FreeBSD.
Will be used by XFree86 on powerpc (works on i386 too, but its not currently
used).
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 2001/03/29 19:56:33 drahn Exp $ */
a162 5
#ifdef IPFILTER
#define NIPF 1
#else   
#define NIPF 0
#endif  
d189 2
d232 1
a232 1
        cdev_gen_ipf(NIPF,ipl),         /* 39: IP filter */
@


1.20
log
@Add device node for audio.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19 2001/03/01 23:19:34 drahn Exp $ */
d186 5
d275 5
@


1.19
log
@Fix (or a least hack around) console configuration changes to wscons.
Needs to be looked at closer, but seems to work. Mostly copied from i386.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19 2001/03/01 23:12:51 drahn Exp $ */
d186 3
d235 1
a235 1
        cdev_notdef(),                  /* 44 */
@


1.18
log
@Complete raidframe support, support was incomplete before. Not known
to be working, but was starting to configure before testing was stopped.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 2000/10/01 00:19:47 drahn Exp $ */
d365 1
d370 3
@


1.17
log
@Implement getnulldev that returns the dev_t for "/dev/null".
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.16 2000/09/06 02:45:11 rahnds Exp $ */
d61 2
d84 1
d135 2
a182 2
#include "raid.h"
cdev_decl(raid);
@


1.16
log
@First cut at vga console support for PowerMac (USB keyboard)
uses adb to reboot or power-off system.
add support for various USB devices into device table, as well
as some other missing devices.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 2000/06/15 03:12:46 rahnds Exp $ */
d293 6
@


1.15
log
@#if 0 support for WSCONS, not currently used and wscons has changed since
this code worked.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14 1999/11/09 00:20:42 rahnds Exp $ */
a112 1
#if 0
d114 1
a114 1
#include "wskdb.h"
a115 4
#else
#define NWSKBD 0
#define NWSDISPLAY 0
#define NWSMOUSE 0
d118 1
a118 1
cdev_decl(wskdb);
a119 1
#endif
d165 17
a209 3
	#if 0
	cdev_wsdisplay_init(NWSDISPLAY,wscons), /* 25: workstation console */
	#else
a210 1
	#endif
a213 4
	#if 0
        cdev_mouse_init(NWSKDB,wskbd),   /* 29 /dev/kbd XX */
        cdev_mouse_init(NWSMOUSE,msmouse),    /* 30 /dev/mouse XXX */
	#else
a215 1
	#endif
d241 23
a263 1
	/* If adding devs, don't forget to expand 'chrtoblktbl' below! */
d354 1
a357 1
/* cons_decl(wscons); */
a361 3
#endif
#if NWSCONS1 > 0
	cons_init(wscons),
@


1.14
log
@autoconf.c:
	calculate delay time for delay() before it is acutally used.
	add support for md_diskconf come closer to supporting crashdumps,
	eventually this code should be un if 0 ed and supported.
	add the wd device as a supported device, fix some comments.
clock.c:
	support calculation of delay loop earlier, do the spin loop correcly,
	unsigned math on the lower half, not signed math.
conf.c:
	addd support for wd driver, block major 0, char major 11.
machdep.c:
	bus_space_map becomes a real function, not just inlined function.
	Support devices that are not mapped with bats (most still currently
	are mapped with bats,...). BAT mapping does not allow proper
	mapping of cachable devices.
	mapiodev HACK, NEEDS TO BE REMOVED. added for quicker import
	of BROKEN mac drivers. the drivers NEED to be rewritten in
	a busified manner. it would FIX all of the endian swabbing
	done by each driver. (Is that emphasized enough?)

	bus_space_(read|write)_raw_multi as functions, should these
	be turned into inline functions and put in bus.h?
ofw_machdep.c:
	removed extranious variable.
openfirm.c:
	telling openfirmware to "boot" will put the system
	in somewhat of a strange state, try reset-all, but that
	typically fails, therefore, try OF_exit before spinning.
pmap.c:
	support stealing memory from kernel address space so that
	mappings can be created before vm is initalized.
vm_machdep.c:
	maybe the meaning of removing this will later become obvious. ???
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.13 1998/09/27 03:56:00 rahnds Exp $ */
d113 13
a125 7
#define cdev_wscons_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	dev_init(c,n,write), dev_init(c,n,ioctl), dev_init(c,n,stop), \
	dev_init(c,n,tty), ttselect /* ttpoll */, dev_init(c,n,mmap), D_TTY }

#include "wscons.h"
cdev_decl(wscons);
d199 5
a203 1
	cdev_wscons_init(NWSCONS,wscons), /* 25: workstation console */     
d207 7
a213 2
        cdev_mouse_init(NWSCONS,kbd),   /* 29 /dev/kbd XX */
        cdev_mouse_init(NWSCONS,ms),    /* 30 /dev/mouse XXX */
d333 1
d338 3
@


1.14.2.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 2001/03/29 19:56:33 drahn Exp $ */
a60 2
#include "raid.h"
bdev_decl(raid);
a81 1
	bdev_disk_init(NRAID,raid),	/* 19: RAIDframe disk driver */
d113 7
a119 7
#include "wsdisplay.h"
#include "wskbd.h"
#include "wsmouse.h"

cdev_decl(wsdisplay);
cdev_decl(wskbd);
cdev_decl(wsmouse);
a131 2
#include "raid.h"
cdev_decl(raid);
a164 18
#include "usb.h"
cdev_decl(usb);
#include "uhid.h"
cdev_decl(uhid);
#include "ugen.h"
cdev_decl(ugen);
#include "ulpt.h"
cdev_decl(ulpt);
#include "urio.h"
cdev_decl(urio);
#include "ucom.h"
cdev_decl(ucom);

#include "wsmux.h"
cdev_decl(wsmux);

#include "audio.h"
cdev_decl(audio);
d193 1
a193 1
        cdev_notdef(),                  /* 25 */
d197 2
a198 2
        cdev_notdef(),                  /* 29 */
        cdev_notdef(),                  /* 30 */
d212 1
a212 1
	cdev_audio_init(NAUDIO,audio),  /* 44: generic audio I/O */
d224 1
a224 23
        cdev_notdef(),                  /* 52 */ 
        cdev_notdef(),                  /* 53 */ 
	cdev_disk_init(NRAID,raid),	/* 54: RAIDframe disk driver */
        cdev_notdef(),                  /* 55 */ 
	/* The following slots are reserved for isdn4bsd. */
	cdev_notdef(),			/* 56: i4b main device */
	cdev_notdef(),			/* 57: i4b control device */
	cdev_notdef(),			/* 58: i4b raw b-channel access */
	cdev_notdef(),			/* 59: i4b trace device */
	cdev_notdef(),			/* 60: i4b phone device */
	/* End of reserved slots for isdn4bsd. */
	cdev_usb_init(NUSB,usb),	/* 61: USB controller */
	cdev_usbdev_init(NUHID,uhid),	/* 62: USB generic HID */
	cdev_ugen_init(NUGEN,ugen),	/* 63: USB generic driver */
	cdev_ulpt_init(NULPT,ulpt), 	/* 64: USB printers */
	cdev_usbdev_init(NURIO,urio),	/* 65: USB Diamond Rio 500 */
	cdev_tty_init(NUCOM,ucom),	/* 66: USB tty */
	cdev_wsdisplay_init(NWSDISPLAY,	/* 67: frame buffers, etc. */
		wsdisplay),
	cdev_mouse_init(NWSKBD, wskbd),	/* 68: keyboards */
	cdev_mouse_init(NWSMOUSE,	/* 69: mice */
		wsmouse),
	cdev_mouse_init(NWSMUX, wsmux),	/* 70: ws multiplexor */
a255 6
dev_t
getnulldev()
{
	return makedev(mem_no, 2);
}

a314 1
#include <vgafb_pci.h>
a315 1
cons_decl(ws);
a319 3
#if NWSDISPLAY > 0
	cons_init(ws),
#endif
@


1.14.2.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14.2.1 2001/05/14 21:36:55 niklas Exp $ */
d163 5
a185 5
#ifdef USER_PCICONF
#include "pci.h"
cdev_decl(pci);
#endif

a188 4
#include "pf.h"
cdev_decl(pf);

#include <altq/altqconf.h>
d230 1
a230 1
        cdev_pf_init(NPF,pf),		/* 39: packet filter */
a269 6
#ifdef USER_PCICONF
	cdev_pci_init(NPCI,pci),        /* 71: PCI user */
#else
	cdev_notdef(),
#endif
	cdev_altq_init(NALTQ,altq),	/* 72: ALTQ control interface */
@


1.14.2.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14.2.2 2001/07/04 10:22:48 niklas Exp $ */
@


1.14.2.4
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
@


1.14.2.5
log
@repair
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14.2.4 2001/11/13 21:04:16 niklas Exp $ */
@


1.13
log
@add wscons support to powerpc port.
This contains several pieces of the port
MI:
    vgafb, on powerpc under openfirmware the vga card comes up in gfx mode.
    instead of resetting it to text mode, vgafb treats this as a raster
    display. The mechanism used may not have been the best, it's
    interface to wscons is as a text display, and it does the character
    plotting itself.
    font_8x16.c was stolen from the atari port for use.

MD:
    ppcppi support stolen from alpha
    pms.c, pckbd.c and the rest of the support files were
    used nearly directly.

    powerpc
      conf.c to support wscon, vga/kbd
      machdep.c hack to get around a bus_space_set_region,bus_space_copy error.
      ofw_machdep.c some hack code on the road to supporting wscons as console.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 1998/09/25 09:20:54 todd Exp $ */
d43 2
d63 1
a63 1
	bdev_notdef(),			/* 0 */
d133 3
d179 1
a179 1
        cdev_notdef(),                  /* 11 */
d269 1
a269 1
	/* 11 */	NODEV,
@


1.12
log
@o xfs is in the house (thanks art, for getting me started)
o all but vax are major 51
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.10 1998/08/06 15:04:06 pefo Exp $ */
d107 12
d143 1
a143 1
#endef
d188 1
a188 1
        cdev_notdef(),                  /* 25 */ 
d192 2
a193 2
        cdev_notdef(),                  /* 29 */
        cdev_notdef(),                  /* 30 */
@


1.11
log
@Add entries for the following devices in the cdev switch ksyms, uk, and ss.
@
text
@d128 5
d195 12
@


1.10
log
@Some small fixes for non ofw systems
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.9 1998/07/07 06:56:09 deraadt Exp $ */
d110 2
d141 2
d187 3
@


1.9
log
@oops, i did not handle nchrdev correctly
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.8 1998/07/07 03:02:45 deraadt Exp $ */
d244 1
a244 1
	int major;
@


1.8
log
@fix chrtoblk() so that it returne ENODEV for entries beyond the end of the table
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.7 1998/05/29 04:15:38 rahnds Exp $ */
d246 1
a246 1
	if (major(dev) >= MAXDEV ||
@


1.7
log
@Major changes here and there, tweaks elsewhere.
Support for Openfirmware drivers was reintroduced so that more systems
were supported. This should work with the real driver configurations
as well.

Bootloader files were deleted/replaced with the newer versions in the
subdirectory. Some effort has been made to be closer to support booting
(at least the bootloader) on the Mac.

Config files that end with OFW are the openfirmware versions of the kernels
without have native drivers.

Native driver support has not been changed, presumably it still works.
I couldn't test that.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.6 1997/11/23 05:21:58 mickey Exp $ */
a234 23
	/* 18 */	NODEV,
	/* 19 */	NODEV,
	/* 20 */	NODEV,
	/* 21 */	NODEV,
	/* 22 */	NODEV,
	/* 23 */	NODEV,
	/* 24 */	NODEV,
	/* 25 */	NODEV,
	/* 26 */	NODEV,
	/* 27 */	NODEV,
	/* 28 */	NODEV,
	/* 29 */	NODEV,
	/* 30 */	NODEV,
	/* 31 */	NODEV,
	/* 32 */	NODEV,
	/* 33 */	NODEV,
	/* 34 */	NODEV,
	/* 35 */	NODEV,
	/* 36 */	NODEV,
	/* 37 */	NODEV,
	/* 38 */	NODEV,
	/* 39 */	NODEV,
	/* 40 */	NODEV,
d246 7
a252 5
	if ((major = major(dev)) >= nchrdev)
		return NODEV;
	if ((major = chrtoblktbl[major]) == NODEV)
		return NODEV;
	return makedev(major, minor(dev));
@


1.6
log
@use MI cdev_decl(ipl)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 1997/10/28 10:36:13 pefo Exp $ */
d49 3
d65 1
a65 1
	bdev_notdef(),			/* 4 */
d100 7
d155 2
a156 2
	cdev_notdef(),			/* 13 */
        cdev_notdef(),                  /* 14 */
d230 1
a230 1
	/* 13 */	NODEV,
d297 1
d300 3
@


1.5
log
@stand missing
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 1997/10/13 13:42:54 pefo Exp $ */
a123 2
/* open, close, read, ioctl */
cdev_decl(ipl);
@


1.4
log
@Monolithic (No OpenFirmware driver crap...) PowerPC kernel. This is the
first release based on Wolfgang Solfrank, TooLs GmbH, work. Most OFW stuff
has been ripped out. Only a few functions for memory probing and halt/reboot
functionality has been kept. The kernel currently works with V.I's power.4e
PowerPC604 board, but more will come.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d46 2
d58 1
a58 1
	bdev_notdef(),                  /* 0 */
d61 1
a61 1
	bdev_notdef(),                  /* 3 SCSI CD-ROM */
@


1.3
log
@PowerPC pieces for ramdisk (rd) changes this is adds majors,
rd_root pieces, config file to generate MINIROOT with rdroot and
MAKEDEV changes as well as adding the rd device to known device types.
@
text
@d1 1
a1 2
/*	$OpenBSD: conf.c,v 1.2 1996/12/28 06:21:41 rahnds Exp $	*/
/*	$NetBSD: conf.c,v 1.2 1996/10/16 17:26:19 ws Exp $	*/
d4 3
a6 4
 * Copyright (C) 1995, 1996 Wolfgang Solfrank.
 * Copyright (C) 1995, 1996 TooLs GmbH.
 * All rights reserved.
 *
d17 3
a19 2
 *	This product includes software developed by TooLs GmbH.
 * 4. The name of TooLs GmbH may not be used to endorse or promote products
d22 12
a33 10
 * THIS SOFTWARE IS PROVIDED BY TOOLS GMBH ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TOOLS GMBH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d43 2
a44 2
#include "ofdisk.h"
bdev_decl(ofd);
d57 2
a58 2
	bdev_swap_init(1,sw),		/* 1: swap pseudo device */
	bdev_notdef(),                  /* 2 SCSI tape */
d60 1
a60 1
	bdev_disk_init(NOFDISK,ofd),	/* 4: Openfirmware disk */
d92 2
a93 5
#include "ofcons.h"
cdev_decl(ofc);
cdev_decl(ofd);
#include "ofrtc.h"
cdev_decl(ofrtc);
a129 5
#define	cdev_rtc_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), \
	dev_init(c,n,read), dev_init(c,n,write), \
	(dev_type_ioctl((*))) enodev, (dev_type_stop((*))) enodev, \
	0, seltrue, (dev_type_mmap((*))) enodev }
d139 1
a139 1
	cdev_tty_init(NOFCONS,ofc),	/* 7: Openfirmware console */
d142 1
a142 1
        cdev_notdef(),                  /* 10 */
d145 1
a145 1
	cdev_disk_init(NOFDISK,ofd),	/* 13: Openfirmware disk */
d150 1
a150 1
	cdev_rtc_init(NOFRTC,ofrtc),	/* 18: Openfirmware RTC */
d173 1
d215 1
a215 1
	/*  8 */	NODEV,
d220 1
a220 1
	/* 13 */	4,
d229 19
d286 1
a286 1
cons_decl(ofc);
d289 2
a290 2
#if NOFCONS > 0
	cons_init(ofc),
@


1.2
log
@Adding OpenBSD tags to files.
@
text
@d1 1
a1 1
/*	$OpenBSD:$	*/
d46 8
d60 14
a99 1
#include <vnd.h>
d105 1
d156 2
a157 2
	cdev_rtc_init(NOFRTC,ofrtc),	/* 17: Openfirmware RTC */
        cdev_notdef(),                  /* 18 */
d230 5
a234 5
	/* 10 */	NODEV,
	/* 10 */	NODEV,
	/* 10 */	NODEV,
	/* 10 */	NODEV,
	/* 10 */	NODEV,
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Check-in of powerpc kernel support.
NOTE: This will not work until the other pieces are checked in.
This is primarily the NetBSD powerpc port, with modifications
to support ELF. 
@
text
@@
