head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	UBC_SYNC_A:1.3
	UBC_SYNC_B:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.18
	OPENBSD_2_8:1.2.0.16
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.14
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.12
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.10
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	powerpc_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2001.09.01.15.44.20;	author drahn;	state dead;
branches;
next	1.2;

1.2
date	97.10.13.13.43.00;	author pefo;	state Exp;
branches
	1.2.12.1;
next	1.1;

1.1
date	96.12.21.20.35.58;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.35.58;	author rahnds;	state Exp;
branches;
next	;

1.2.12.1
date	2001.10.31.03.07.56;	author nate;	state dead;
branches;
next	1.2.12.2;

1.2.12.2
date	2001.11.13.21.04.16;	author niklas;	state Exp;
branches;
next	1.2.12.3;

1.2.12.3
date	2001.11.13.22.14.34;	author niklas;	state dead;
branches;
next	;


desc
@@


1.3
log
@The "powerpc" port which has supported the newer Apple Macintosh powerpc based
is being renamed to macppc. This is to allow sharing of common code
between different powerpc base platforms.

Most of the work involved in the renaming process was performed by miod@@

Files moved from powerpc/powerpc to macppc/macppc

This moves hardware specific files from the common directory to the
platform specific directory. This leaves common files.
With this change all of the debugger (db_) files have been moved to
the platform specific directory. The debugger should be reconsidered
and commonized.
@
text
@/*	$OpenBSD: random.c,v 1.2 1997/10/13 13:43:00 pefo Exp $	*/

/*
 * Copyright (c) 1990,1993 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that: (1) source code distributions
 * retain the above copyright notice and this paragraph in its entirety, (2)
 * distributions including binary code include the above copyright notice and
 * this paragraph in its entirety in the documentation or other materials
 * provided with the distribution, and (3) all advertising materials mentioning
 * features or use of this software display the following acknowledgement:
 * ``This product includes software developed by the University of California,
 * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
 * the University nor the names of its contributors may be used to endorse
 * or promote products derived from this software without specific prior
 * written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Here is a very good random number generator.  This implementation is
 * based on ``Two Fast Implementations of the "Minimal Standard" Random
 * Number Generator'', David G. Carta, Communications of the ACM, Jan 1990,
 * Vol 33 No 1.  Do NOT modify this code unless you have a very thorough
 * understanding of the algorithm.  It's trickier than you think.  If
 * you do change it, make sure that its 10,000'th invocation returns
 * 1043618065.
 *
 * Here is easier-to-decipher pseudocode:
 *
 * p = (16807*seed)<30:0>	# e.g., the low 31 bits of the product
 * q = (16807*seed)<62:31>	# e.g., the high 31 bits starting at bit 32
 * if (p + q < 2^31)
 * 	seed = p + q
 * else
 *	seed = ((p + q) & (2^31 - 1)) + 1
 * return (seed);
 *
 * The result is in (0,2^31), e.g., it's always positive.
 */
#if 0
#include <machine/asm.h>

	.data
	.globl	_C_SYMBOL(_randseed)
_C_SYMBOL(_randseed):
	.long	1
	.text
ENTRY(random)
#	movl	#16807, d0
	lis	r5, 1
	ori	r5, r5, 0x6807
	lis	r4, _C_SYMBOL(_randseed)@@h
	lwz	r6, _C_SYMBOL(_randseed)@@l(r4)
#	mulsl	__randseed, d1:d0
	mulhw	r7, r6, r5
	mulhw	r8, r6, r5

#	lsll	#1, d0
#	roxll	#2, d1
#	addl	d1, d0
#	moveql	#1, d1
#	addxl	d1, d0
#	lsrl	#1, d0
	lis	r4, _C_SYMBOL(_randseed)@@h
	stw	r6, _C_SYMBOL(_randseed)@@l(r4)
#	movl	d0, __randseed
#	rts
#endif

extern int _randseed;
int
random()
{
	long long value;
	int p, q;
	value = 16807 * _randseed;
	p = value & (long long) (0xffffffff);
	q = (value >> 32) & (long long) (0xffffffff);
	if (((long long) p + q) < 0x3fffffff) {
		_randseed = p + q;
	} else {
		_randseed = (int)(((long long)p + q ) & 0x3ffffffe) +1;
	}
	return _randseed;
}
@


1.2
log
@Monolithic (No OpenFirmware driver crap...) PowerPC kernel. This is the
first release based on Wolfgang Solfrank, TooLs GmbH, work. Most OFW stuff
has been ripped out. Only a few functions for memory probing and halt/reboot
functionality has been kept. The kernel currently works with V.I's power.4e
PowerPC604 board, but more will come.
@
text
@d1 1
a1 1
/*	$OpenBSD: random.c,v 1.1.1.1 1996/12/21 20:35:58 rahnds Exp $	*/
@


1.2.12.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: random.c,v 1.2 1997/10/13 13:43:00 pefo Exp $	*/
@


1.2.12.2
log
@Merge in -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.2.12.3
log
@repair
@
text
@d1 1
a1 1
/*	$OpenBSD: random.c,v 1.2.12.2 2001/11/13 21:04:16 niklas Exp $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 2
/*	$OpenBSD: random.s,v 1.3 1996/08/10 21:41:08 deraadt Exp $	*/
/*	$NetBSD: random.s,v 1.5 1995/01/15 22:32:35 mycroft Exp $	*/
@


1.1.1.1
log
@Check-in of powerpc kernel support.
NOTE: This will not work until the other pieces are checked in.
This is primarily the NetBSD powerpc port, with modifications
to support ELF. 
@
text
@@
