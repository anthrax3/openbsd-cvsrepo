head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.52
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.48
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.50
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.42
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.46
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.44
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.40
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.38
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.36
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.34
	OPENBSD_5_0:1.5.0.32
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.30
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.28
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.24
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.26
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.22
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.20
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.18
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.16
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.14
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.12
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	SMP:1.4.0.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	UBC:1.3.0.4
	UBC_SYNC_B:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.5
date	2003.10.15.01.06.13;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.26.21.54.44;	author drahn;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2002.09.15.09.01.59;	author deraadt;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2002.09.15.02.02.44;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.08.16.02.14;	author miod;	state Exp;
branches;
next	;

1.3.4.1
date	2003.05.19.21.49.44;	author tedu;	state Exp;
branches;
next	;

1.4.4.1
date	2004.02.19.10.49.57;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Housecleaning, no binary change.
@
text
@/*	$NetBSD: db_memrw.c,v 1.4 2001/05/18 20:38:27 matt Exp $	*/
/*	$OpenBSD: db_memrw.c,v 1.4 2003/02/26 21:54:44 drahn Exp $	*/

/* 
 * Mach Operating System
 * Copyright (c) 1992 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon 
 * the rights to redistribute these changes.
 */

/*
 * Interface to the debugger for virtual memory read/write.
 * This is a simple version for kernels with writable text.
 * For an example of read-only kernel text, see the file:
 * sys/arch/sun3/sun3/db_memrw.c
 *
 * ALERT!  If you want to access device registers with a
 * specific size, then the read/write functions have to
 * make sure to do the correct sized pointer access.
 */

#include <sys/param.h>
#include <sys/proc.h>
#include <sys/systm.h>

#include <uvm/uvm_extern.h>

#include <machine/db_machdep.h>
#include <machine/pcb.h>

#include <ddb/db_access.h>

/*
 * Read bytes from kernel address space for debugger.
 */
void
db_read_bytes(addr, size, data)
	vaddr_t		addr;
	size_t	size;
	char	*data;
{
	char	*src = (char *)addr;
	faultbuf env;
	faultbuf *old_onfault = curpcb->pcb_onfault;
	if (setfault(&env)) {
		curpcb->pcb_onfault = old_onfault;
		return;
	}

	if (size == 4) {
		*((int *)data) = *((int *)src);
	} else if (size == 2) {
		*((short *)data) = *((short *)src);
	} else {
		while (size > 0) {
			--size;
			*data++ = *src++;
		}
	}
	curpcb->pcb_onfault = old_onfault;
}

/*
 * Write bytes to kernel address space for debugger.
 */
void
db_write_bytes(addr, size, data)
	vaddr_t		addr;
	size_t	size;
	char	*data;
{
	char	*dst = (char *)addr;
	faultbuf env;
	faultbuf *old_onfault = curpcb->pcb_onfault;

	if (setfault(&env)) {
		curpcb->pcb_onfault = old_onfault;
		return;
	}

	if (size == 4) {
		*((int *)dst) = *((int *)data);
	} else if (size == 2) {
		*((short *)dst) = *((short *)data);
	} else  {
		while (size > 0) {
			--size;
			*dst++ = *data++;
		}
	}
	syncicache((void *)addr, size);
	curpcb->pcb_onfault = old_onfault;
}

@


1.4
log
@Remove an unnecessary structure copy from useage of setfault(), call
by reference, not by value, ok matthieu#, miod@@
@
text
@d2 1
a2 1
/*	$OpenBSD: db_memrw.c,v 1.3 2002/09/15 09:01:59 deraadt Exp $	*/
d58 2
a59 2
	register size_t	size;
	register char	*data;
d61 1
a61 1
	register char	*src = (char *)addr;
d88 2
a89 2
	register size_t	size;
	register char	*data;
d91 1
a91 1
	register char	*dst = (char *)addr;
@


1.4.4.1
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d2 1
a2 1
/*	$OpenBSD$	*/
d58 2
a59 2
	size_t	size;
	char	*data;
d61 1
a61 1
	char	*src = (char *)addr;
d88 2
a89 2
	size_t	size;
	char	*data;
d91 1
a91 1
	char	*dst = (char *)addr;
@


1.3
log
@backout premature
@
text
@d2 1
a2 1
/*	$OpenBSD: db_memrw.c,v 1.1 2002/06/08 16:02:14 miod Exp $	*/
d64 1
a64 1
	if (setfault(env)) {
d95 1
a95 1
	if (setfault(env)) {
@


1.3.4.1
log
@sync
@
text
@d2 1
a2 1
/*	$OpenBSD$	*/
d64 1
a64 1
	if (setfault(&env)) {
d95 1
a95 1
	if (setfault(&env)) {
@


1.2
log
@KNF
@
text
@d4 1
a4 1
/*
d8 1
a8 1
 *
d14 1
a14 1
 *
d18 1
a18 1
 *
d20 1
a20 1
 *
d25 2
a26 2
 *
 * any improvements or extensions that they make and grant Carnegie Mellon
@


1.1
log
@One ddb to rule them all.

Move the ddb files form macppc/macppc to powerpc/ddb, so that mvmeppc
can benefit from the better ddb that was in macppc.
db_interface.c is left as an md part.
@
text
@d2 1
a2 1
/*	$OpenBSD: db_memrw.c,v 1.4 2002/03/14 03:15:56 millert Exp $	*/
d4 1
a4 1
/* 
d8 1
a8 1
 * 
d14 1
a14 1
 * 
d18 1
a18 1
 * 
d20 1
a20 1
 * 
d25 2
a26 2
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon 
@

