head	1.7;
access;
symbols
	OPENBSD_6_0:1.6.0.12
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.8
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.10
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.12
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.10
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.8
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.6
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.10
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.8
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.7
date	2016.08.10.14.27.17;	author deraadt;	state dead;
branches;
next	1.6;
commitid	nJ2GKPOeS3xtih2N;

1.6
date	2013.12.28.02.53.03;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2010.12.06.18.44.49;	author jasper;	state Exp;
branches;
next	1.4;

1.4
date	2008.04.19.23.20.22;	author weingart;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.30.21.38.12;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.29.15.01.49;	author kettenis;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.28.17.12.06;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.7
log
@armish handled some early-gen arm machines, which required tons of
workarounds.  Some of them will soon stand in the way of armv7.
Off to the attic you go.
@
text
@/*	$OpenBSD: conf.c,v 1.6 2013/12/28 02:53:03 deraadt Exp $	*/
/*	$NetBSD: conf.c,v 1.4 2005/12/11 12:17:06 christos Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)conf.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>

#include <dev/cons.h>

#include "libsa.h"
#include <lib/libsa/ufs.h>

const char version[] = "1.2";
int	debug = 0;

/*
 * Device configuration
 */
struct devsw devsw[] = {
	{ "wd",	wdstrategy, wdopen, wdclose, noioctl },
};
int ndevs = nitems(devsw);

/*
 * Filesystem configuration
 */
struct fs_ops file_system[] = {
	{ ufs_open,    ufs_close,    ufs_read,    ufs_write,    ufs_seek,
	  ufs_stat,    ufs_readdir }
};
int nfsys = nitems(file_system);

/*
 * Console configuration
 */
struct consdev constab[] = {
	{ com_probe, com_init, com_getc, com_putc },
	{ NULL }
};
struct consdev *cn_tab;
@


1.6
log
@crank the version
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.5 2010/12/06 18:44:49 jasper Exp $	*/
@


1.5
log
@- drop NENTS(), which was yet another copy of nitems().
no binary change


ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.4 2008/04/19 23:20:22 weingart Exp $	*/
d42 1
a42 1
const char version[] = "1.1";
@


1.4
log
@Change ELF loader to use the LMA as the load address for the
various segments.  Hopefully this will help remove various
hacks in the boot loader in the future.  This should have no
effect on most architectures (as we tend to have LMA == VMA).

ok drahn@@, soft ok's various others.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.3 2006/07/30 21:38:12 drahn Exp $	*/
d51 1
a51 1
int ndevs = NENTS(devsw);
d60 1
a60 1
int nfsys = NENTS(file_system);
@


1.3
log
@With new kernel and bootloader, argument passing now works, version 1.0.
(and yes this does work on iodata and thecus)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.2 2006/07/29 15:01:49 kettenis Exp $	*/
d42 1
a42 1
const char version[] = "1.0";
@


1.2
log
@ework armish bootloader into an interactive one, much like i386 has.
Make sure disk names match those used by the kernel.  This means that now
it boots from wd0 by default, whatever slot it is in.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.1 2006/07/28 17:12:06 kettenis Exp $	*/
d42 1
a42 1
const char version[] = "0.9";
@


1.1
log
@First stab at an armish bootloader.  It will load /bsd from the drive in the
upper slot of the Thecus n2100.  Glued together from bits from the NetBSD
cobalt and evbarm ports.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 3
a39 1
#include <lib/libsa/stand.h>
d42 2
a43 1
#include "boot.h"
d51 1
a51 2

int	ndevs = (sizeof(devsw)/sizeof(devsw[0]));
d60 1
d62 8
a69 1
int nfsys = sizeof(file_system) / sizeof(file_system[0]);
@

