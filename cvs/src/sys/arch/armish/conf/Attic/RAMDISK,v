head	1.36;
access;
symbols
	OPENBSD_6_0:1.35.0.2
	OPENBSD_6_0_BASE:1.35
	OPENBSD_5_9:1.34.0.2
	OPENBSD_5_9_BASE:1.34
	OPENBSD_5_8:1.34.0.4
	OPENBSD_5_8_BASE:1.34
	OPENBSD_5_7:1.33.0.2
	OPENBSD_5_7_BASE:1.33
	OPENBSD_5_6:1.29.0.4
	OPENBSD_5_6_BASE:1.29
	OPENBSD_5_5:1.27.0.4
	OPENBSD_5_5_BASE:1.27
	OPENBSD_5_4:1.25.0.4
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.25.0.2
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.24.0.2
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.2
	OPENBSD_5_0:1.20.0.2
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.17.0.2
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.16.0.2
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.4
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.11.0.4
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.2
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9;
locks; strict;
comment	@# @;


1.36
date	2016.08.10.14.27.16;	author deraadt;	state dead;
branches;
next	1.35;
commitid	nJ2GKPOeS3xtih2N;

1.35
date	2016.06.28.04.41.37;	author jmatthew;	state Exp;
branches;
next	1.34;
commitid	YZhKLotIHp83F5gq;

1.34
date	2015.07.17.22.52.28;	author tedu;	state Exp;
branches;
next	1.33;
commitid	OOrGfFHYAn65M2qc;

1.33
date	2015.01.04.20.55.38;	author uaa;	state Exp;
branches;
next	1.32;
commitid	wC4MIxetRQmy4yZq;

1.32
date	2014.11.24.02.03.37;	author brad;	state Exp;
branches;
next	1.31;
commitid	Wmnzf8bGQILqXRTG;

1.31
date	2014.10.10.05.43.35;	author deraadt;	state Exp;
branches;
next	1.30;
commitid	eyBTAcDp3o260Uyq;

1.30
date	2014.08.22.20.03.54;	author deraadt;	state Exp;
branches;
next	1.29;
commitid	v3mi9m9bp9Skjxm7;

1.29
date	2014.07.12.21.56.56;	author tedu;	state Exp;
branches;
next	1.28;
commitid	6Bshd6p5VmKoCOQI;

1.28
date	2014.04.07.08.27.23;	author brad;	state Exp;
branches;
next	1.27;

1.27
date	2013.11.15.19.42.20;	author sasano;	state Exp;
branches;
next	1.26;

1.26
date	2013.08.20.14.27.26;	author ajacoutot;	state Exp;
branches;
next	1.25;

1.25
date	2012.09.27.14.01.35;	author jsg;	state Exp;
branches;
next	1.24;

1.24
date	2012.04.06.15.10.39;	author jsing;	state Exp;
branches;
next	1.23;

1.23
date	2012.01.31.18.12.28;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2011.11.14.15.28.46;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2011.09.20.22.11.42;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2011.08.02.06.36.29;	author matthieu;	state Exp;
branches;
next	1.19;

1.19
date	2011.06.29.20.52.09;	author matthew;	state Exp;
branches;
next	1.18;

1.18
date	2011.05.24.20.27.11;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	2011.02.17.20.14.30;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2010.07.03.03.59.16;	author krw;	state Exp;
branches;
next	1.15;

1.15
date	2010.07.03.01.48.18;	author matthew;	state Exp;
branches;
next	1.14;

1.14
date	2010.04.26.20.51.51;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2009.08.11.12.25.07;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2009.05.17.04.58.20;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2008.07.01.04.50.59;	author brad;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.08.20.37.39;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2006.08.26.10.47.34;	author kettenis;	state Exp;
branches;
next	1.8;

1.8
date	2006.08.01.22.21.00;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2006.06.17.04.47.06;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2006.06.15.20.50.44;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2006.06.15.20.42.53;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2006.06.15.20.38.01;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2006.06.10.04.03.39;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.01.03.50.42;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.29.17.13.19;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.36
log
@armish handled some early-gen arm machines, which required tons of
workarounds.  Some of them will soon stand in the way of armv7.
Off to the attic you go.
@
text
@#	$OpenBSD: RAMDISK,v 1.35 2016/06/28 04:41:37 jmatthew Exp $

machine		armish arm
maxusers	4

option		TIMEZONE=0
option		DST=0
option		SMALL_KERNEL
option		NO_PROPOLICE
option		BOOT_CONFIG

option		MINIROOTSIZE=5120
option		RAMDISK_HOOKS

option		PCIVERBOSE

option		FFS
option		FFS2
option		CD9660
option		MSDOSFS
option		EXT2FS
option		INET6
option		CRYPTO

config		bsd root on rd0a swap on rd0b

option		ARM32
#makeoptions	KERNEL_BASE_PHYS="0xa0200000"
makeoptions	KERNEL_BASE_PHYS="0x00200000"
makeoptions	KERNEL_BASE_VIRT="0xc0200000"
option		CPU_XSCALE_80321	# Support the XScale core
option		XSCALE_CACHE_READ_WRITE_ALLOCATE
#makeoptions	CPUFLAGS="-mcpu=xscale"

mainbus0	at root
cpu0		at mainbus?
obio0		at mainbus?

com0		at obio? addr 0xfe800000 xint 3

iopxs0		at mainbus?

iopiic*		at iopxs?		# I2C Controller Unit(s)
iic0		at iopiic?
iic1		at iopiic?
pcaled0		at iic? addr 0x60	# led controller
ricohrtc0	at iic? addr 0x32	# Ricoh RTC
fintek0		at iic?	flags 0x0001	# temp/fan controller

pci0		at iopxs? bus ?		# PCI/PCI-X support

siop*		at pci?			# NCR 538XX SCSI controllers(new)
em*		at pci?
re*		at pci?
ral*		at pci?
bwi*		at pci?

pciide*		at pci? flags 0x0000
wd*		at pciide? flags 0x0000

softraid0	at root

scsibus*	at scsi?
sd*		at scsibus?		# SCSI disk drives
cd*		at scsibus?		# SCSI CD-ROM drives

ohci*		at pci?
uhci*		at pci?
ehci*		at pci?
usb*		at ohci?
usb*		at uhci?
usb*		at ehci?

uhub*		at usb?
uhub*		at uhub?
umodem*		at uhub?		# USB Modems/Serial
ucom*		at umodem?
uvisor*		at uhub?		# Handspring Visor
ucom*		at uvisor?
uvscom*		at uhub?		# SUNTAC Slipper U VS-10U serial
ucom*		at uvscom?
ubsa*		at uhub?		# Belkin serial adapter
ucom*		at ubsa?
uftdi*		at uhub?		# FTDI FT8U100AX serial adapter
ucom*		at uftdi?
uplcom*		at uhub?		# I/O DATA USB-RSAQ2 serial adapter
ucom*		at uplcom?
umct*		at uhub?		# MCT USB-RS232 serial adapter
ucom*		at umct?
uipaq*		at uhub?		# iPAQ serial adapter
ucom*		at uipaq?
umsm*		at uhub?		# Qualcomm MSM EVDO
ucom*		at umsm?
umass*		at uhub?
uhidev*		at uhub?		# Human Interface Devices
ukbd*		at uhidev?		# USB keyboard
wskbd*		at ukbd? mux 1
uslhcom*	at uhidev?		# Silicon Labs CP2110 USB HID UART
ucom*		at uslhcom?
uhid*		at uhidev?		# USB generic HID support
aue*		at uhub?		# ADMtek AN986 Pegasus Ethernet
atu*		at uhub?		# Atmel AT76c50x based 802.11b
axe*		at uhub?		# ASIX Electronics AX88172 USB Ethernet
axen*		at uhub?		# ASIX Electronics AX88179 USB Ethernet
cue*		at uhub?		# CATC USB-EL1201A based Ethernet
kue*		at uhub?		# Kawasaki KL5KUSB101B based Ethernet
smsc*		at uhub?		# SMSC LAN95xx Ethernet
cdce*		at uhub?		# CDC Ethernet
upl*		at uhub?		# Prolific PL2301/PL2302 host-to-host
ugl*		at uhub?		# Genesys Logic GL620USB-A host-to-host
udav*		at uhub?		# Davicom DM9601 based Ethernet
url*		at uhub?		# Realtek RTL8150L based adapters
ure*		at uhub?		# Realtek RTL8152 based adapters
wi*		at uhub?		# WaveLAN IEEE 802.11DS
ugen*		at uhub?		# USB Generic driver
ural*		at uhub?		# Ralink RT2500

amphy*		at mii?			# AMD 79C873 PHYs
dcphy*		at mii?			# Digital Clone PHYs
exphy*		at mii?			# 3Com internal PHYs
inphy*		at mii?			# Intel 82555 PHYs
iophy*		at mii?			# Intel 82553 PHYs
icsphy*		at mii?			# ICS1890 PHYs
lxtphy*		at mii?			# Level One LXT-970 PHYs
nsphy*		at mii?			# NS83840 PHYs
mtdphy*		at mii?			# Myson MTD972 PHYs
acphy*		at mii?			# Altima AC101 PHYs
qsphy*		at mii?			# Quality Semi QS6612 PHYs
luphy*		at mii?			# Lucent LU6612 PHY
sqphy*		at mii?			# Seeq 8022[013] PHYs
rlphy*		at mii?			# Realtek 8139 internal PHYs
tqphy*		at mii?			# TDK Semiconductor PHYs
brgphy*		at mii?			# Broadcom 10/100/1000 PHYs
bmtphy*		at mii?			# Broadcom 10/100 PHYs
eephy*		at mii?			# Marvell 88E1000 Gigabit PHYs
urlphy*		at mii?			# Realtek RTL8150L internal PHY
rgephy*		at mii?			# Realtek 8169S/8110S PHY
rlphy*		at mii?			# Realtek 8139 internal PHYs
ciphy*		at mii?			# Cicada CS8201 10/100/1000 copper PHY
ukphy*		at mii?			# generic unknown PHYs

pseudo-device	wsmux 2
pseudo-device	bio 1
pseudo-device	loop 1
pseudo-device	bpfilter 1
pseudo-device	rd 1
@


1.35
log
@enable ure(4) where we already have url(4)
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.34 2015/07/17 22:52:28 tedu Exp $
@


1.34
log
@remove obsolete INET kernel option
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.33 2015/01/04 20:55:38 uaa Exp $
d113 1
@


1.33
log
@add new driver uslhcom(4) USB HID based UART.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.32 2014/11/24 02:03:37 brad Exp $
a21 1
option		INET
@


1.32
log
@use the correct capitalization for Realtek.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.31 2014/10/10 05:43:35 deraadt Exp $
d99 2
@


1.31
log
@Significant unification of RAMDISK* config files, making them diffable.
This makes it easier to remove components not required to do an install,
and subsequently add other desireable components ...
In snapshots (in various forks) for about a week.
Do some upgrades and installs, please.
@
text
@d1 1
a1 1
#	$OpenBSD: RAMDISK,v 1.30 2014/08/22 20:03:54 deraadt Exp $
d129 1
a129 1
rlphy*		at mii?			# RealTek 8139 internal PHYs
@


1.30
log
@pseudo-device crypto was accidentally left for some architectures.
@
text
@d1 1
a1 10
# $OpenBSD: RAMDISK,v 1.29 2014/07/12 21:56:56 tedu Exp $ 
#
# For further information on compiling OpenBSD kernels, see the config(8)
# man page.
#
# For further information on hardware support for this architecture, see
# the intro(4) man page.  For further information about kernel options
# for this architecture, see the options(4) man page.  For an explanation
# of each device driver in this file see the section 4 man page for the
# device.
d4 1
a4 1
maxusers	32			# estimated number of users
d6 5
a10 1
options		ARM32
d12 17
a31 1

a35 18
#option		PERFCTRS		# performance counters

option		PCIVERBOSE

option		DST=0			# daylight saving time used by RTC
option		FFS			# UFS
option		FFS2			# UFS2
option		CD9660			# ISO 9660 + Rock Ridge file system
option		MSDOSFS			# MS-DOS file system
option		INET			# IP + ICMP + TCP + UDP
option		INET6			# IPv6 (needs INET)
option		DDB			# kernel debugger
option		EXT2FS			# Second Extended Filesystem
option		CRYPTO			# Cryptographic framework

config		bsd	root on rd0a swap on rd0b

# The main bus device
a39 1
# On-board 16550 UART
a41 1
# i80321 I/O Processor peripheral support
d44 1
a44 2
#iopaau*	at iopxs?		# Application Accelerator Unit
iopiic*	at iopxs?		# I2C Controller Unit(s)
a47 1
#gpio*		at pcaled0
a50 1
#iopwdog*	at iopxs?		# Watchdog timer
d53 1
a53 2

siop*		at pci? 		# NCR 538XX SCSI controllers(new)
d58 1
a58 1
# IDE controllers
d62 1
a62 1
softraid0	at root		# Software RAID
a65 1
#st*		at scsibus?		# SCSI tape drives
a66 2
#ch*		at scsibus?		# SCSI autochangers
#uk*		at scsibus?		# unknown SCSI
d68 3
a70 6
# USB Controllers
ohci*		at pci?		# Open Host Controller
uhci*		at pci?		# Universal Host Controller
ehci*		at pci?		# Enhanced Host Controller

# USB bus support
d75 70
a144 95
# USB devices
uhub*	at usb?			# USB Hubs
uhub*	at uhub?		# USB Hubs
umodem*	at uhub?		# USB Modems/Serial
ucom*	at umodem?
uvisor*	at uhub?		# Handspring Visor
ucom*	at uvisor?
uvscom*	at uhub?		# SUNTAC Slipper U VS-10U serial
ucom*	at uvscom?
ubsa*	at uhub?		# Belkin serial adapter
ucom*	at ubsa?
uftdi*	at uhub?		# FTDI FT8U100AX serial adapter
ucom*	at uftdi?
uplcom* at uhub?		# I/O DATA USB-RSAQ2 serial adapter
ucom*	at uplcom?
umct*	at uhub?		# MCT USB-RS232 serial adapter
ucom*	at umct?
uipaq*	at uhub?		# iPAQ serial adapter
ucom*	at uipaq?
umsm*	at uhub?		# Qualcomm MSM EVDO
ucom*	at umsm?
#uaudio* at uhub?		# USB Audio
#audio*	at uaudio?
#umidi*	at uhub?		# USB MIDI
#midi*	at umidi?
#ulpt*	at uhub?		# USB Printers
umass*	at uhub?		# USB Mass Storage devices
uhidev*	at uhub?		# Human Interface Devices
ums*	at uhidev?		# USB mouse
wsmouse* at ums? mux 0
ukbd*	at uhidev?		# USB keyboard
wskbd*	at ukbd? mux 1
uhid*	at uhidev?		# USB generic HID support
aue*	at uhub?		# ADMtek AN986 Pegasus Ethernet
atu*	at uhub?		# Atmel AT76c50x based 802.11b
axe*	at uhub?		# ASIX Electronics AX88172 USB Ethernet
axen*	at uhub?		# ASIX Electronics AX88179 USB Ethernet
cue*	at uhub?		# CATC USB-EL1201A based Ethernet
kue*	at uhub?		# Kawasaki KL5KUSB101B based Ethernet
smsc*	at uhub?		# SMSC LAN95xx Ethernet
cdce*	at uhub?		# CDC Ethernet
upl*	at uhub?		# Prolific PL2301/PL2302 host-to-host `network'
ugl*	at uhub?		# Genesys Logic GL620USB-A host-to-host `network'
udav*	at uhub?		# Davicom DM9601 based Ethernet
url*	at uhub?		# Realtek RTL8150L based adapters
wi*	at uhub?		# WaveLAN IEEE 802.11DS
#urio*	at uhub?		# Diamond Multimedia Rio 500
#udsbr*	at uhub?		# D-Link DSB-R100 radio
#radio*	at udsbr?		# USB radio
#ubt*	at uhub? disable	# USB Bluetooth
ugen*	at uhub?		# USB Generic driver
ural*	at uhub?		# Ralink RT2500
#udcf*	at uhub?		# Gude Expert mouseCLOCK

amphy*		at mii?		# AMD 79C873 PHYs
dcphy*		at mii?		# Digital Clone PHYs
exphy*		at mii?		# 3Com internal PHYs
inphy*		at mii?		# Intel 82555 PHYs
iophy*		at mii?		# Intel 82553 PHYs
icsphy*		at mii?		# ICS1890 PHYs
lxtphy*		at mii?		# Level One LXT-970 PHYs
nsphy*		at mii?		# NS83840 PHYs
#nsphyter*	at mii?		# NS83843 PHYs
mtdphy*		at mii?		# Myson MTD972 PHYs
acphy*		at mii?		# Altima AC101 PHYs
qsphy*		at mii?		# Quality Semi QS6612 PHYs
luphy*		at mii?		# Lucent LU6612 PHY
sqphy*		at mii?		# Seeq 8022[013] PHYs
rlphy*		at mii?		# RealTek 8139 internal PHYs
#tlphy*		at mii?		# ThunderLAN PHYs
tqphy*		at mii?		# TDK Semiconductor PHYs
brgphy*		at mii?		# Broadcom 10/100/1000 PHYs
bmtphy*		at mii?		# Broadcom 10/100 PHYs
eephy*		at mii?		# Marvell 88E1000 Gigabit PHYs
urlphy*		at mii?		# Realtek RTL8150L internal PHY
rgephy*		at mii?		# Realtek 8169S/8110S PHY
rlphy*		at mii?		# Realtek 8139 internal PHYs
ciphy*		at mii?		# Cicada CS8201 10/100/1000 copper PHY
ukphy*		at mii?		# generic unknown PHYs

# mouse & keyboard multiplexor pseudo-devices
pseudo-device	wsmux		2
pseudo-device	bio		1	# ioctl multiplexing device
pseudo-device	hotplug		1	# devices hot plugging

#
pseudo-device	loop		1	# network loopback
pseudo-device	bpfilter		1	# packet filter
pseudo-device	rd		1	# ram disk

option		BOOT_CONFIG		# boot-time kernel config

# RAMDISK stuff
option		MINIROOTSIZE=5120
option		RAMDISK_HOOKS
@


1.29
log
@"Dr. Jones. Again we see there is nothing you can possess which I cannot
take away."

remove uyap. no effect except on hppa where it was strangely enabled.
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.28 2014/04/07 08:27:23 brad Exp $ 
a175 1
pseudo-device	crypto		1
@


1.28
log
@Add axen(4) wherever axe(4) is.

ok mpi@@ yuo@@
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.27 2013/11/15 19:42:20 sasano Exp $ 
a140 1
#uyap*	at uhub?		# Y@@P firmware loader
@


1.27
log
@Added dev/usb/if_ugl.c, a driver for Genesys Logic GL620USB-A
USB host-to-host link cable. This driver is derived from upl(4).
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.26 2013/08/20 14:27:26 ajacoutot Exp $ 
d130 1
@


1.26
log
@Remove uscanner(4). It was disabled in GENERIC more than 2.5 years ago.
No regression has been reported since libusb became the prefered
solution to work with USB scanners.

req. by mpi@@
ok ian@@ mpi@@ miod@@
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.25 2012/09/27 14:01:35 jsg Exp $ 
d135 1
@


1.25
log
@enable smsc
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.24 2012/04/06 15:10:39 jsing Exp $ 
a138 1
#uscanner* at uhub?		# USB Scanners
@


1.24
log
@tedu the raidframe.

ok deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.22 2011/11/14 15:28:46 deraadt Exp $ 
d132 1
@


1.23
log
@give up on mcpu options; something remains broken in pmap it looks like; ok miod
@
text
@a177 1
#pseudo-device	raid		4	# RAIDframe disk driver
@


1.22
log
@dale and i theorize that these days armish can safely be compiled
with -mcpu=xscale
ok drahn
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.21 2011/09/20 22:11:42 miod Exp $ 
d23 1
a23 1
makeoptions	CPUFLAGS="-mcpu=xscale"
@


1.21
log
@Remove !defined(CACHE_CLEAN_BLOCK_INTR) code, and make CACHE_CLEAN_BLOCK_INTR
no longer an option.
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.20 2011/08/02 06:36:29 matthieu Exp $ 
d23 1
@


1.20
log
@Add softraid (and option CRYPTO as pointed out by todd).
Tested on my thecus. ok miod@@, todd@@, deraadt@@.
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.19 2011/06/29 20:52:09 matthew Exp $ 
a22 1
option		CACHE_CLEAN_BLOCK_INTR
@


1.19
log
@Replace all instances of "scsibus* at hba?" with a single "scsibus* at
scsi?" rule, similar to how ethernet PHY drivers attach at mii.

Discussed on icb.
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.18 2011/05/24 20:27:11 matthew Exp $ 
d38 1
d75 1
@


1.18
log
@On OpenBSD, we've always attached scsibus(4) to umass(4), even for
ATAPI devices.  atapiscsi(4) is only for handling ATAPI devices on an
ATA bus, so umass(4) shouldn't care about it.

ok krw@@, dlg@@; no objections from deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.17 2011/02/17 20:14:30 miod Exp $ 
a65 1
scsibus*	at siop?
d75 1
a118 1
scsibus* at umass?
@


1.17
log
@Disable sbt and ubt devices. The bluetooth code will sometimes sleep while
holding locks, this is not allowed, and nobody has stepped up to fix this,
so better not lure people into using bluetooth devices.
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.16 2010/07/03 03:59:16 krw Exp $ 
a119 1
atapiscsi* at umass?
@


1.16
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.15 2010/07/03 01:48:18 matthew Exp $ 
d142 1
a142 1
#ubt*	at uhub?		# USB Bluetooth
@


1.15
log
@Omit some silly USB devices from RAMDISK kernels.

suggestion of more devices and ok tedu@@; ok krw@@
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.14 2010/04/26 20:51:51 deraadt Exp $ 
a79 1
#ss*		at scsibus?		# SCSI scanners
a138 2
#usscanner* at uhub?		# USB SCSI scanners, e.g., HP5300
#scsibus* at usscanner?
@


1.14
log
@BOARDTYPE is no longer used by Makefile.*; spotted by miod
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.13 2009/08/11 12:25:07 krw Exp $ 
d114 5
a118 5
uaudio* at uhub?		# USB Audio
audio*	at uaudio?
umidi*	at uhub?		# USB MIDI
midi*	at umidi?
ulpt*	at uhub?		# USB Printers
d138 4
a141 4
urio*	at uhub?		# Diamond Multimedia Rio 500
uscanner* at uhub?		# USB Scanners
usscanner* at uhub?		# USB SCSI scanners, e.g., HP5300
scsibus* at usscanner?
d143 2
a144 2
udsbr*	at uhub?		# D-Link DSB-R100 radio
radio*	at udsbr?		# USB radio
@


1.13
log
@Recent alignment fixes seem to make bwi(4) work at least
semi-reliably on my Thecus. Let others play too.

'no objections' miod@@ 'sure' deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.12 2009/05/17 04:58:20 deraadt Exp $ 
a19 1
makeoptions	BOARDTYPE="armish"
@


1.12
log
@mux too, like GENERIC
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.11 2008/07/01 04:50:59 brad Exp $ 
d71 1
@


1.11
log
@Enable FFS2 on most of the larger RAMDISK media.

ok deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.10 2008/06/08 20:37:39 deraadt Exp $ 
d177 1
a177 1
#pseudo-device	wsmux		2
@


1.10
log
@alpha/conf/RAMDISK
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.9 2006/08/26 10:47:34 kettenis Exp $ 
d32 1
@


1.9
log
@Set flags to 0x0001 for fintek(4), to make the fans run at full speed.
Seems to be the only reliable way to guarantee the fan runs at sufficient speed
on the Thecus n2100.

ok drahn@@
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.8 2006/08/01 22:21:00 kettenis Exp $ 
a37 2
option		FIFO			# FIFOs; RECOMMENDED

a39 1

@


1.8
log
@Enable pcaled0.

ok deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.7 2006/06/17 04:47:06 drahn Exp $ 
d62 1
a62 1
fintek0		at iic?			# temp/fan controller
@


1.7
log
@Dont disable siop, add pcalcd, commented for now (no gpioctl on ramdisk).
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.6 2006/06/15 20:50:44 drahn Exp $ 
d59 1
a59 1
#pcaled0		at iic? addr 0x60	# led controller
@


1.6
log
@Fan controller for Thecus N2100, still needs more work, currently sets the
fan so it is running. The nice auto fan speed isn't working currently.
Also gives temperature sensors.
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.5 2006/06/15 20:42:53 drahn Exp $ 
d59 2
d68 1
a68 1
siop*		at pci? disable		# NCR 538XX SCSI controllers(new)
@


1.5
log
@Ricoh rtc support for armish, driver from netbsd.
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.4 2006/06/15 20:38:01 drahn Exp $ 
d60 1
@


1.4
log
@whitespace cleanup
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.3 2006/06/10 04:03:39 drahn Exp $ 
d59 1
@


1.3
log
@Add IIC attachment/probe. no IIC devices yet.
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.2 2006/06/01 03:50:42 drahn Exp $ 
d59 1
d175 5
a179 5
#pseudo-device   wsmux		2
pseudo-device   crypto		1
pseudo-device   bio		1	# ioctl multiplexing device
pseudo-device   hotplug		1	# devices hot plugging
#pseudo-device  raid		4	# RAIDframe disk driver
d182 3
a184 3
pseudo-device loop		1	# network loopback
pseudo-device bpfilter		1	# packet filter
pseudo-device rd		1	# ram disk
@


1.2
log
@Consistantly map com0 irq.
@
text
@d1 1
a1 1
# $OpenBSD: RAMDISK,v 1.1 2006/05/29 17:13:19 drahn Exp $ 
d56 3
a58 3
#iopiic*	at iopxs?		# I2C Controller Unit(s)
#iic0		at iopiic?
#iic1		at iopiic?
@


1.1
log
@Add a new port for ARM based products from a variety of vendors, typically
using Redboot as a loader and using pci, that have a variety of fairly minor
hardware differences between them.
@
text
@d1 1
a1 1
# $OpenBSD$ 
d50 1
a50 2
#com0		at obio? addr 0xfe810000 xint 3
com0		at obio? addr 0xfe800000 xint 0
@

