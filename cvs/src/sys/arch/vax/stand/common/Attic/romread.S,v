head	1.4;
access;
symbols
	OPENBSD_5_9:1.3.0.10
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2016.03.09.16.28.49;	author deraadt;	state dead;
branches;
next	1.3;
commitid	OSDG2O3Cgeifnf1W;

1.3
date	2013.07.05.21.13.06;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.06.18.32.59;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.11.09.36.23;	author hugh;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2002.10.29.00.28.13;	author art;	state Exp;
branches;
next	;


desc
@@


1.4
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: romread.S,v 1.3 2013/07/05 21:13:06 miod Exp $ */
/*	$NetBSD: romread.S,v 1.1 2002/02/24 01:04:25 matt Exp $ */
/*
 * Copyright (c) 1995 Ludd, University of Lule}, Sweden.
 * All rights reserved.
 *
 * This code is derived from software contributed to Ludd by
 * Bertram Barth.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed at Ludd, University of 
 *      Lule}, Sweden and its contributors.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

 /* All bugs are subject to removal without further notice */
		


#include "../include/asm.h"

/*
 * romread_uvax (int lbn, int size, void *buf, struct rpb *rpb)
 */
ENTRY(romread_uvax, 0xFFE)
	movl	16(%ap),%r11	# restore boot-contents of %r11 (rpb)
	movl    52(%r11), %r7	# load iovec/bqo into %r7
	addl3   (%r7), %r7, %r6	# load qio into %r6
	pushl	%r11		# base of rpb
	pushl	$0		# virtual-flag 
	pushl	$33		# read-logical-block
	pushl	4(%ap)		# lbn to start reading
	pushl	8(%ap)		# number of bytes to read
	pushl	12(%ap)		# buffer-address 
	calls	$6, (%r6)	# call the qio-routine
	ret			# %r0 holds the result

/*
 * romwrite_uvax (int lbn, int size, void *buf, struct rpb *rpb)
 */
ENTRY(romwrite_uvax, 0xFFE)
	movl    16(%ap), %r11	# restore boot-contents of %r11 (rpb)
	movl    52(%r11), %r7	# load iovec/bqo into %r7
	addl3   (%r7), %r7, %r6	# load qio into %r6
	pushl   %r11		# base of rpb
	pushl   $0		# virtual-flag 
	pushl   $32		# write-logical-block
	pushl   4(%ap)		# lbn to start reading
	pushl   8(%ap)		# number of bytes to read
	pushl   12(%ap)		# buffer-address 
	calls   $6, (%r6)	# call the qio-routine
	ret			# %r0 holds the result

@


1.3
log
@VAX ELF boot block bits, and version crank.
@
text
@d1 1
a1 1
/*	$OpenBSD: romread.S,v 1.2 2011/07/06 18:32:59 miod Exp $ */
@


1.2
log
@Remove support for non-microVAX, non-VAXstation, non-VXT hardware in the
VAX port. This means, 11/7xx, VAX6000 and VAX8x00 systems, as well as SBI,
CMI, BI, XMI and MASSBUS drivers.
Most of these files were not being compiled or kept in compilable state over
the years anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: romread.S,v 1.1 2002/06/11 09:36:23 hugh Exp $ */
d47 4
a50 4
	movl	16(ap),r11	# restore boot-contents of %r11 (rpb)
	movl    52(r11), r7     # load iovec/bqo into %r7
	addl3   (r7), r7, r6	# load qio into %r6
	pushl	r11		# base of rpb
d53 4
a56 4
	pushl	4(ap)		# lbn to start reading
	pushl	8(ap)		# number of bytes to read
	pushl	12(ap)		# buffer-address 
	calls	$6, (r6)	# call the qio-routine
d63 11
a73 11
	movl    16(ap), r11	# restore boot-contents of %r11 (rpb)
	movl    52(r11), r7     # load iovec/bqo into %r7
	addl3   (r7), r7, r6    # load qio into %r6
	pushl   r11             # base of rpb
	pushl   $0              # virtual-flag 
	pushl   $32             # write-logical-block
	pushl   4(ap)           # lbn to start reading
	pushl   8(ap)           # number of bytes to read
	pushl   12(ap)          # buffer-address 
	calls   $6, (r6)        # call the qio-routine
	ret                     # %r0 holds the result
@


1.1
log
@New boot code, mostly from ragge's work in NetBSD.
Some header syncing and a couple network drivers came along for the ride.
Assembly files have been renamed from .s to .S to facilitate diffs.
Kernel is backwards compat - with manual interaction.
OpenBSD features have been preserved.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a41 18

/*
 * read750 (int block, int *regs)
 */
ENTRY(read750, 0xFFE)
	movl	8(ap), r8
	movl	4(r8), r1
	movl	8(r8), r2
	movl	12(r8), r3
	movl	24(r8), r6
	clrl	r5
	movl	4(ap), r8
	pushl	$0
	movl	$0, 4(sp)
	movl    fp, 0xf0000	# ragge ???
	jsb	(r6)
	movl    0xf0000, fp	
	ret
@


1.1.4.1
log
@sync to -current
@
text
@@

