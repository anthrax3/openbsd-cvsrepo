head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2000.04.27.02.26.22;	author bjc;	state dead;
branches;
next	1.2;

1.2
date	97.05.29.00.04.27;	author niklas;	state Exp;
branches
	1.2.12.1;
next	1.1;

1.1
date	97.01.15.23.24.25;	author maja;	state Exp;
branches;
next	;

1.2.12.1
date	2001.05.14.21.37.42;	author niklas;	state dead;
branches;
next	;


desc
@@


1.3
log
@sync with netbsd -- this involved rearranging things for sanity reasons
and because separate builds of libsa are done.  this is a pretty nice
bootloader.
@
text
@/*	$OpenBSD: so.h,v 1.2 1997/05/29 00:04:27 niklas Exp $	*/
/*	$NetBSD: so.h,v 1.1 1996/08/02 11:22:41 ragge Exp $	*/

#ifndef _SO_H_INCLUDE
#define _SO_H_INCLUDE

/* Definitions for standalone I/O lib */

/* #define SCSI_POLLED	0x200C0080 */
#define SCSI_DMA	0x200D0000

/* Which SCSI device to use by default */
#define DEFAULT_SCSI_ADR	1
#define DEFAULT_SCSI_LUN	0

/* Low level scsi operation codes */
#define DISK_READ	3
#define DISK_WRITE	4

/* The size of a disk block */
#define DBLKSIZE	512

/* Some disk address that will never be used */
#define INSANE_BADDR	0x800000

struct scsi_args {
  long ptr [8];
};

#ifndef NULL
#define NULL		0L
#endif

/*
 * The next macro defines where the "break" area in memory ends for
 * malloc() and friends. The area between edata and this address will
 * then be reserved and should not be used for anything else (or you will
 * no doubt have big problems). Depending on where your program's end-of-data
 * is, you may wish to locate this in such a way as to usurp a minimum
 * amount of memory.
 */
#define BREAK_END_ADDR		((char *)0x400000)	/* to   4MB */

/* Selectivly enable inline functions */
#ifndef NO_INLINE
#define Inline	inline
#else
#define Inline
#endif
 
extern void fatal(), warn();
extern long ulimit(int, long);
extern int brk(char *);
extern char *sbrk(int);

extern int sc_rdwt();

#endif /* _SO_H_INCLUDE */
@


1.2
log
@RCS tagging
@
text
@d1 1
a1 1
/*	$OpenBSD: so.h,v 1.1 1996/08/02 11:22:41 ragge Exp $	*/
@


1.2.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: so.h,v 1.2 1997/05/29 00:04:27 niklas Exp $	*/
@


1.1
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
@
