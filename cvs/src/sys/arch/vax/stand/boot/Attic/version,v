head	1.12;
access;
symbols
	OPENBSD_5_9:1.11.0.8
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.10
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.6
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9;
locks; strict;
comment	@# @;


1.12
date	2016.03.09.16.28.49;	author deraadt;	state dead;
branches;
next	1.11;
commitid	OSDG2O3Cgeifnf1W;

1.11
date	2014.02.19.22.13.53;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2013.07.05.21.13.06;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2011.07.06.18.32.59;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2008.08.26.18.36.21;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2008.08.12.17.23.21;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2008.08.10.18.20.07;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2008.03.30.19.54.05;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2007.04.10.17.47.55;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2006.08.30.20.02.13;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.24.20.29.38;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.11.09.36.23;	author hugh;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2002.10.29.00.28.13;	author art;	state Exp;
branches;
next	;


desc
@@


1.12
log
@We are done providing support for the vax.
lots of agreement.
@
text
@$OpenBSD: version,v 1.11 2014/02/19 22:13:53 miod Exp $
$NetBSD: version,v 1.4 2001/11/09 19:53:15 scw Exp $

NOTE ANY CHANGES YOU MAKE TO THE BOOTBLOCKS HERE.  The format of this
file is important - make sure the entries are appended on end, last item
is taken as the current.

1.0:	Initial import.
1.1:	Bunch of small fixes to make boot work on most VAXen.
1.2:	Use common routines to identify cpu type.
	Set up a SCB to be able to handle clock interrupts in the boot program.
	Now timer countdown should work on all types of vaxen.
1.3:	Unify the ra and tmscp driver.
	Standalone driver for the Digital Equipment Unibus Network Adapter
	(DEUNA). This allows 11/750 owners to install from a single TU58
	cassette.
	Adapt to the RPB changes. Complete change of how network devices are
	handled. No more hacks to find bus addresses.
1.5:	Standalone device driver for DEBNx (ni) ethernet controllers.
1.6:	Add support for VAX 6000 + VAX 8000. Tweak console routines.
	Create a fake RPB if either netbooted (on machine without RPB) or
	loaded from console storage (without VMB intervention).
1.7:	Add support for loading a 2nd stage boot in either a.out or ELF.
	Add support for loading a 2nd stage boot directly to its desired
	address if possible.
	Cleanup use of u_int/size_t.
1.8:	Switch to loadfile instead of exec.  Now we can load a.out or ELF
	kernels. (disabled in OpenBSD)
1.9:	Support verbose/quiet boot.
1.10:	Remove the 11/750 pcs code and the list of kernels to try to boot
	in order.
	Work around some PROM bugs in graphics mode which cause \h and \t not
	to behave as expected.
1.11:	Better VXT2000{,+} support.
1.12:	Glass console support on VXT2000{,+}.
1.13:	Enable the loadfile code added in revision 1.8.
1.14:	Support for VaxStation 3[58][24]0.
1.15:	Restore boot sd()... functionality on machines with asc(4) or sii(4)
	controllers.
1.16:	Remove support for VAX 11/7x0, VAX6000 and VAX8000
1.17:	ELF bootblocks.
1.18:	/etc/random.seed support
@


1.11
log
@/etc/random.seed support (only loaded from disk devices).
@
text
@d1 1
a1 1
$OpenBSD: version,v 1.10 2013/07/05 21:13:06 miod Exp $
@


1.10
log
@VAX ELF boot block bits, and version crank.
@
text
@d1 1
a1 1
$OpenBSD: version,v 1.9 2011/07/06 18:32:59 miod Exp $
d42 1
@


1.9
log
@Remove support for non-microVAX, non-VAXstation, non-VXT hardware in the
VAX port. This means, 11/7xx, VAX6000 and VAX8x00 systems, as well as SBI,
CMI, BI, XMI and MASSBUS drivers.
Most of these files were not being compiled or kept in compilable state over
the years anyway.
@
text
@d1 1
a1 1
$OpenBSD: version,v 1.8 2008/08/26 18:36:21 miod Exp $
d41 1
@


1.8
log
@When using the not-documented-but-ought-to 'boot sd(...)file' syntax (e.g.
when mopbooting the bootblocks because one trashed the ones on disk by
accident), be sure to use the proper BDEV_SDx rpb device type value,
depending on the type of onboard controller. Crank version.
@
text
@d1 1
a1 1
$OpenBSD: version,v 1.7 2008/08/12 17:23:21 miod Exp $
d40 1
@


1.7
log
@Figured out where the prom console routines are on KA60 and how to invoke
them, thanks to old ultrix bootblocks lying around.
Also, enable M-Bus clock on the I/O slot IOCSR, this unstucks the cpu
clocks (which really are implemented on the SSC on the I/O module, but
need to be controlled via the cpu's ``internal'' processor registers...)
@
text
@d1 1
a1 1
$OpenBSD: version,v 1.6 2008/08/10 18:20:07 miod Exp $
d17 1
a17 1
	Adopt to the RPB changes. Complete change of how network devices are
d38 2
@


1.6
log
@Add support for the VAXstation 3[58][24]0 to the bootblocks, currently
limited to serial console. This is enough for a 3520 to mopboot and download
a kernel over NFS.
@
text
@d1 1
a1 1
$OpenBSD: version,v 1.5 2008/03/30 19:54:05 miod Exp $
d37 1
a37 1
1.14:	Support for VaxStation 3[58][24]0 (serial port console only).
@


1.5
log
@Switch bootloader code to loadfile, and enable a.out and ELF loaders within.
Crank the second stage boot blocks version.
@
text
@d1 1
a1 1
$OpenBSD: version,v 1.4 2007/04/10 17:47:55 miod Exp $
d37 1
@


1.4
log
@``it's'' -> ``its'' when the grammar gods require this change.
@
text
@d1 1
a1 1
$OpenBSD: version,v 1.3 2006/08/30 20:02:13 miod Exp $
d28 1
a28 1
	kernels.
d36 1
@


1.3
log
@Horrible code to work around stupid VXT2000 rom getchar() behaviour, but
at least this allows our boot blocks to work with glass console on these
machines now.

Caution: reading this code will hurt your eyes.

ok deraadt@@
@
text
@d1 1
a1 1
$OpenBSD: version,v 1.2 2006/08/24 20:29:38 miod Exp $
d24 1
a24 1
	Add support for loading a 2nd stage boot directly to it's desired
@


1.2
log
@Enable the appropriate serial transmitters in VXT2000 serial routines, this
makes output work when the VXT2000 is not configured for serial console.
@
text
@d1 1
a1 1
$OpenBSD: version,v 1.1 2002/06/11 09:36:23 hugh Exp $
d35 1
@


1.1
log
@New boot code, mostly from ragge's work in NetBSD.
Some header syncing and a couple network drivers came along for the ride.
Assembly files have been renamed from .s to .S to facilitate diffs.
Kernel is backwards compat - with manual interaction.
OpenBSD features have been preserved.
@
text
@d1 1
a1 1
$OpenBSD$
d30 5
a34 2
1.10:	loadfile() update:  ELF symbols no longer need backward seeks.
1.11:	loadfile() update to avoid backwards seeks for ELF Program Headers.
@


1.1.4.1
log
@sync to -current
@
text
@@

