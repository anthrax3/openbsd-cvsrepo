head	1.14;
access;
symbols
	OPENBSD_5_9:1.13.0.6
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.8
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9;
locks; strict;
comment	@# @;


1.14
date	2016.03.09.16.28.49;	author deraadt;	state dead;
branches;
next	1.13;
commitid	OSDG2O3Cgeifnf1W;

1.13
date	2014.07.13.21.18.44;	author jasper;	state Exp;
branches;
next	1.12;
commitid	Y3LcLObEiHDZvy27;

1.12
date	2013.10.15.22.49.03;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2013.07.05.21.13.06;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2012.08.21.14.46.20;	author pascal;	state Exp;
branches;
next	1.9;

1.9
date	2011.07.06.18.32.59;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2008.03.30.19.54.05;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2007.11.25.18.25.33;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2005.07.30.16.36.09;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.10.15.51.18;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.11.09.36.23;	author hugh;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.14.20.45.31;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.04.05.03.10;	author bjc;	state Exp;
branches
	1.2.6.1
	1.2.10.1;
next	1.1;

1.1
date	2000.04.27.02.26.24;	author bjc;	state Exp;
branches;
next	;

1.2.6.1
date	2001.05.14.21.37.43;	author niklas;	state Exp;
branches;
next	1.2.6.2;

1.2.6.2
date	2002.03.06.02.04.47;	author niklas;	state Exp;
branches;
next	1.2.6.3;

1.2.6.3
date	2003.03.27.23.52.19;	author niklas;	state Exp;
branches;
next	1.2.6.4;

1.2.6.4
date	2004.02.19.10.50.02;	author niklas;	state Exp;
branches;
next	;

1.2.10.1
date	2002.06.11.03.39.18;	author art;	state Exp;
branches;
next	1.2.10.2;

1.2.10.2
date	2002.10.29.00.28.13;	author art;	state Exp;
branches;
next	;


desc
@@


1.14
log
@We are done providing support for the vax.
lots of agreement.
@
text
@#	$OpenBSD: Makefile,v 1.13 2014/07/13 21:18:44 jasper Exp $
#	$NetBSD: Makefile,v 1.27 2002/04/07 07:00:25 matt Exp $

S!=	cd ${.CURDIR}/../../../../; pwd
NOMAN=	# defined
NOPIE=

.include <bsd.own.mk>

PROG=	boot
DEVS=	ra.c mfm.c if_qe.c if_le.c if_ze.c if_de.c
SRCS=	srt0.S boot.c devopen.c conf.c autoconf.c netio.c rom.c romread.S \
	urem.s udiv.s consio.c consio2.S str.S ${DEVS} findcpu.c

CPPFLAGS+=-DSUPPORT_BOOTPARAMS -DSUPPORT_DHCP -D_STANDALONE \
	-DNO_MID_CHECK
#CPPFLAGS+=-DBOOTP_DEBUG -DNETIF_DEBUG -DETHER_DEBUG -DNFS_DEBUG -DDEV_DEBUG \
#	-DRPC_DEBUG -DRARP_DEBUG -DPARANOID

BINDIR=/usr/mdec

SA_ZLIB=	yes
USE_LOADFILE=	yes
SAREL=
.include "${S}/lib/libsa/Makefile.inc"
LIBSA=	${SALIB}

Z_AS=	library
CFLAGS+=-I${S}/lib/libsa
.include "${S}/lib/libz/Makefile.inc"
LIBZ=	${ZLIB}

.PATH:	${S}/lib/libkern/arch/vax ${S}/lib/libkern
SRCS+= moddi3.c negdi2.c

.if ${MACHINE} == "vax"
.if !make(obj)
.BEGIN:
	@@([ -h machine ] || ln -s ${.CURDIR}/../../../${MACHINE}/include machine)
.NOPATH: machine
CLEANFILES+=	machine
.endif
.endif

START=start
STRIP?=strip
CLEANFILES+=	${PROG}.sym

${PROG}: ${OBJS} ${LIBSA} ${LIBZ}
	${LD} -N -Ttext ${RELOC} -e ${START} -o ${PROG}.sym ${OBJS} \
	    -Llib/sa -L. ${LIBSA} ${LIBZ} ${LIBSA}
	${STRIP} -o ${PROG} ${PROG}.sym

clean::
	rm -f a.out [Ee]rrs mklog *.core ${PROG} ${OBJS} ${LOBJS} \
	    ${CLEANFILES}

.include <bsd.prog.mk>
@


1.13
log
@fix even more trailing tabs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2013/10/15 22:49:03 deraadt Exp $
@


1.12
log
@We do not produce "core" files, so they do not need to be deleted.  they
have been *.core files for a very long time.  That's a lot of unlink()
calls saved.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2013/07/05 21:13:06 miod Exp $
d29 1
a29 1
CFLAGS+=-I${S}/lib/libsa 
@


1.11
log
@VAX ELF boot block bits, and version crank.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2012/08/21 14:46:20 pascal Exp $
d55 1
a55 1
	rm -f a.out [Ee]rrs mklog core *.core ${PROG} ${OBJS} ${LOBJS} \
@


1.10
log
@Add NOPIE= bits for sys/arch/*/stand to ensure that bootblocks will always be
built with -fno-pie.  This gets the hairiest part of PIE out of the way ...

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2011/07/06 18:32:59 miod Exp $
a14 1
CLEANFILES+=${PROG} ${PROG}.sym ${PROG}.mop
d37 6
a42 8
.PHONY: machine-links
beforedepend: machine-links
machine-links:
	@@rm -f machine && ln -s ${S}/arch/${MACHINE}/include machine
	@@rm -f ${MACHINE_ARCH} && ln -s ${S}/arch/${MACHINE_ARCH}/include ${MACHINE_ARCH}
.NOPATH: machine ${MACHINE_ARCH}
CLEANFILES+= machine ${MACHINE_ARCH}
CPPFLAGS+=	-I${.OBJDIR}
d45 8
a52 9
START=nisse

${PROG}: machine-links ${OBJS} ${LIBSA} ${LIBZ}
	${LD} -N -Ttext ${RELOC} -e ${START} -o ${PROG}.sym -Llib/sa -L. ${OBJS} \
	    ${LIBSA} ${LIBZ} ${LIBSA}
	/usr/sbin/mopa.out ${PROG}.sym ${PROG}.mop
	/bin/cp ${PROG}.sym ${PROG}
	/usr/bin/strip ${PROG}
	/usr/bin/size ${PROG}
d54 1
a54 1
clean::	
a56 4

#install:
#	${INSTALL_FILE} -o ${BINOWN} -g ${BINGRP} -m 555 \
#	    ${PROG} ${DESTDIR}${MDEC_DIR}/${PROG}
@


1.9
log
@Remove support for non-microVAX, non-VAXstation, non-VXT hardware in the
VAX port. This means, 11/7xx, VAX6000 and VAX8x00 systems, as well as SBI,
CMI, BI, XMI and MASSBUS drivers.
Most of these files were not being compiled or kept in compilable state over
the years anyway.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2008/03/30 19:54:05 miod Exp $
d6 1
@


1.8
log
@Switch bootloader code to loadfile, and enable a.out and ELF loaders within.
Crank the second stage boot blocks version.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2007/11/25 18:25:33 deraadt Exp $
d10 1
a10 1
DEVS=	hp.c ctu.c ra.c mfm.c if_qe.c if_le.c if_ze.c if_de.c if_ni.c
@


1.7
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2005/07/30 16:36:09 millert Exp $
a9 1
WARNS?=	1
a21 2
#SA_AS= library
#SAMISCMAKEFLAGS=SA_USE_CREAD=yes SA_INCLUDE_NET=yes SA_USE_LOADFILE=yes
d23 1
d44 1
a46 3
#.if ${OBJECT_FMT} == "ELF"
#START=start
#.else
a47 1
#.endif
@


1.6
log
@Pull in moddi3.c and negdi2.c from libkern since libz needs them.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2003/08/10 15:51:18 deraadt Exp $
d35 1
a35 6
#KERN_AS=library
#.include "${S}/lib/libkern/Makefile.inc"
#LIBKERN=${KERNLIB}

# Only need these from libkern
.PATH:	${S}/lib/libkern
d54 1
a54 1
${PROG}: machine-links ${OBJS} ${LIBSA} ${LIBZ} ${LIBKERN}
d56 1
a56 1
	    ${LIBSA} ${LIBZ} ${LIBSA} ${LIBKERN}
@


1.5
log
@clean leftovers
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2002/06/11 09:36:23 hugh Exp $
d38 4
@


1.4
log
@New boot code, mostly from ragge's work in NetBSD.
Some header syncing and a couple network drivers came along for the ride.
Assembly files have been renamed from .s to .S to facilitate diffs.
Kernel is backwards compat - with manual interaction.
OpenBSD features have been preserved.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2002/02/14 20:45:31 deraadt Exp $
d15 1
a15 1
CLEANFILES+=${PROG} ${PROG}.sym
d65 1
a65 1
		${CLEANFILES}
@


1.3
log
@put "boot" in /usr/mdec instead of /
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile,v 1.2 2000/10/04 05:03:10 bjc Exp $
#	$NetBSD: Makefile,v 1.4 1999/05/23 21:58:19 ragge Exp $
d5 3
a8 1
NOMAN=	1
d10 10
a19 6
DEVS=	hp.c ctu.c ra.c tmscp.c mfm.c if_qe.c if_le.c if_ze.c
SRCS=	srt0.s boot.c devopen.c conf.c autoconf.c netio.c rom.c romread.s \
	urem.s udiv.s consio.c str.s ${DEVS} findcpu.c
#OBJS=	autoconf.o boot.o conf.o consio.o ctu.o devopen.o findcpu.o hp.o \
#	if_le.o if_qe.o if_ze.o mfm.o netio.o ra.o rom.o romread.o srt0.o \
#	str.o tmscp.o udiv.o urem.o
d21 1
a21 5
CLEANFILES+=${PROG}.mop
CPPFLAGS+=-DSUPPORT_BOOTPARAMS -DSUPPORT_DHCP -D_STANDALONE 
#CPPFLAGS+=-DBOOTP_DEBUG -DNETIF_DEBUG -DETHER_DEBUG -DNFS_DEBUG -DDEV_DEBUG \
#	-DRPC_DEBUG -DRARP_DEBUG -DPARANOID -DSUPPORT_BOOTP
BINDIR=	/usr/mdec
d23 2
d39 23
a61 6
boot: ${OBJS} ${SALIB} ${LIBZ} ${LIBKERN}
	ld -N -Ttext ${RELOC} -e nisse -o ${PROG} -Llib/sa -L. ${OBJS} \
    ${LIBSA} ${LIBZ} -lsa ${LIBKERN}
	/usr/sbin/mopa.out ${PROG} ${PROG}.mop
	strip ${PROG}
	size ${PROG}
d66 4
@


1.2
log
@nothing uses this variable
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2000/04/27 02:26:24 bjc Exp $
d19 1
a19 1
BINDIR=	/
@


1.2.10.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2000/10/04 05:03:10 bjc Exp $
d19 1
a19 1
BINDIR=	/usr/mdec
@


1.2.10.2
log
@sync to -current
@
text
@d1 2
a2 2
#	$OpenBSD$
#	$NetBSD: Makefile,v 1.27 2002/04/07 07:00:25 matt Exp $
a4 1
NOMAN=	# defined
d6 8
a13 1
.include <bsd.own.mk>
d15 2
a16 9
PROG=	boot
WARNS?=	1
DEVS=	hp.c ctu.c ra.c mfm.c if_qe.c if_le.c if_ze.c if_de.c if_ni.c
SRCS=	srt0.S boot.c devopen.c conf.c autoconf.c netio.c rom.c romread.S \
	urem.s udiv.s consio.c consio2.S str.S ${DEVS} findcpu.c

CLEANFILES+=${PROG} ${PROG}.sym
CPPFLAGS+=-DSUPPORT_BOOTPARAMS -DSUPPORT_DHCP -D_STANDALONE \
	-DNO_MID_CHECK
d18 2
a19 1
#	-DRPC_DEBUG -DRARP_DEBUG -DPARANOID
a20 4
BINDIR=/usr/mdec

#SA_AS= library
#SAMISCMAKEFLAGS=SA_USE_CREAD=yes SA_INCLUDE_NET=yes SA_USE_LOADFILE=yes
d35 6
a40 23
.if ${MACHINE} == "vax"
.PHONY: machine-links
beforedepend: machine-links
machine-links:
	@@rm -f machine && ln -s ${S}/arch/${MACHINE}/include machine
	@@rm -f ${MACHINE_ARCH} && ln -s ${S}/arch/${MACHINE_ARCH}/include ${MACHINE_ARCH}
.NOPATH: machine ${MACHINE_ARCH}
CLEANFILES+= machine ${MACHINE_ARCH}
.endif

#.if ${OBJECT_FMT} == "ELF"
#START=start
#.else
START=nisse
#.endif

${PROG}: machine-links ${OBJS} ${LIBSA} ${LIBZ} ${LIBKERN}
	${LD} -N -Ttext ${RELOC} -e ${START} -o ${PROG}.sym -Llib/sa -L. ${OBJS} \
	    ${LIBSA} ${LIBZ} ${LIBSA} ${LIBKERN}
	/usr/sbin/mopa.out ${PROG}.sym ${PROG}.mop
	/bin/cp ${PROG}.sym ${PROG}
	/usr/bin/strip ${PROG}
	/usr/bin/size ${PROG}
a44 4

#install:
#	${INSTALL_FILE} -o ${BINOWN} -g ${BINGRP} -m 555 \
#	    ${PROG} ${DESTDIR}${MDEC_DIR}/${PROG}
@


1.2.6.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2000/10/04 05:03:10 bjc Exp $
@


1.2.6.2
log
@Merge in trunk
@
text
@d1 1
a1 1
#	$OpenBSD$
d19 1
a19 1
BINDIR=	/usr/mdec
@


1.2.6.3
log
@Sync the SMP branch with 3.3
@
text
@d2 1
a2 1
#	$NetBSD: Makefile,v 1.27 2002/04/07 07:00:25 matt Exp $
a4 1
NOMAN=	# defined
d6 8
a13 1
.include <bsd.own.mk>
d15 2
a16 9
PROG=	boot
WARNS?=	1
DEVS=	hp.c ctu.c ra.c mfm.c if_qe.c if_le.c if_ze.c if_de.c if_ni.c
SRCS=	srt0.S boot.c devopen.c conf.c autoconf.c netio.c rom.c romread.S \
	urem.s udiv.s consio.c consio2.S str.S ${DEVS} findcpu.c

CLEANFILES+=${PROG} ${PROG}.sym
CPPFLAGS+=-DSUPPORT_BOOTPARAMS -DSUPPORT_DHCP -D_STANDALONE \
	-DNO_MID_CHECK
d18 2
a19 1
#	-DRPC_DEBUG -DRARP_DEBUG -DPARANOID
a20 4
BINDIR=/usr/mdec

#SA_AS= library
#SAMISCMAKEFLAGS=SA_USE_CREAD=yes SA_INCLUDE_NET=yes SA_USE_LOADFILE=yes
d35 6
a40 23
.if ${MACHINE} == "vax"
.PHONY: machine-links
beforedepend: machine-links
machine-links:
	@@rm -f machine && ln -s ${S}/arch/${MACHINE}/include machine
	@@rm -f ${MACHINE_ARCH} && ln -s ${S}/arch/${MACHINE_ARCH}/include ${MACHINE_ARCH}
.NOPATH: machine ${MACHINE_ARCH}
CLEANFILES+= machine ${MACHINE_ARCH}
.endif

#.if ${OBJECT_FMT} == "ELF"
#START=start
#.else
START=nisse
#.endif

${PROG}: machine-links ${OBJS} ${LIBSA} ${LIBZ} ${LIBKERN}
	${LD} -N -Ttext ${RELOC} -e ${START} -o ${PROG}.sym -Llib/sa -L. ${OBJS} \
	    ${LIBSA} ${LIBZ} ${LIBSA} ${LIBKERN}
	/usr/sbin/mopa.out ${PROG}.sym ${PROG}.mop
	/bin/cp ${PROG}.sym ${PROG}
	/usr/bin/strip ${PROG}
	/usr/bin/size ${PROG}
a44 4

#install:
#	${INSTALL_FILE} -o ${BINOWN} -g ${BINGRP} -m 555 \
#	    ${PROG} ${DESTDIR}${MDEC_DIR}/${PROG}
@


1.2.6.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d15 1
a15 1
CLEANFILES+=${PROG} ${PROG}.sym ${PROG}.mop
d65 1
a65 1
	    ${CLEANFILES}
@


1.1
log
@sync with netbsd -- this involved rearranging things for sanity reasons
and because separate builds of libsa are done.  this is a pretty nice
bootloader.
@
text
@d1 1
a1 1
#	$OpenBSD$
a4 1
OBJ!=pwd
@

