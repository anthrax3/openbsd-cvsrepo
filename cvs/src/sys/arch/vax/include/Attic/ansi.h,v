head	1.13;
access;
symbols
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.16
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.14
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.12
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.8.0.10
	UBC_BASE:1.8
	OPENBSD_3_0:1.8.0.8
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.6
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	SMP:1.6.0.12
	SMP_BASE:1.6
	kame_19991208:1.6
	OPENBSD_2_6:1.6.0.10
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.8
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2006.01.06.18.50.10;	author millert;	state dead;
branches;
next	1.12;

1.12
date	2005.12.14.16.30.03;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2005.04.14.20.56.24;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.03.14.08.53;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.23.27.57;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.26.03.08.40;	author bjc;	state Exp;
branches;
next	1.7;

1.7
date	2000.02.22.17.29.14;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.07.07.05.56.43;	author millert;	state Exp;
branches
	1.6.12.1;
next	1.5;

1.5
date	97.07.05.21.09.14;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.05.29.00.04.34;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.24.35;	author maja;	state Exp;
branches;
next	1.2;

1.2
date	96.05.03.09.09.35;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.05;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.05;	author deraadt;	state Exp;
branches;
next	;

1.6.12.1
date	2000.03.02.07.04.34;	author niklas;	state Exp;
branches;
next	1.6.12.2;

1.6.12.2
date	2001.05.14.21.37.57;	author niklas;	state Exp;
branches;
next	1.6.12.3;

1.6.12.3
date	2003.06.07.11.14.47;	author ho;	state Exp;
branches;
next	1.6.12.4;

1.6.12.4
date	2004.02.19.10.50.02;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Merge machine/ansi.h and machine/types.h into machine/_types.h and
rename the types using the __ protected namespace (e.g. __size_t).
Idea from FreeBSD.
@
text
@/*	$OpenBSD: ansi.h,v 1.12 2005/12/14 16:30:03 millert Exp $	*/
/*	$NetBSD: ansi.h,v 1.7 1998/04/27 17:39:11 kleink Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *      @@(#)ansi.h      7.1 (Berkeley) 3/9/91
 */

#ifndef _ANSI_H_
#define _ANSI_H_

/*
 * Types which are fundamental to the implementation and may appear in
 * more than one standard header are defined here.  Standard headers
 * then use:
 *      #ifdef  _SIZE_T_
 *      typedef _SIZE_T_ size_t;
 *      #undef  _SIZE_T_
 *      #endif
 *
 * Thanks, ANSI!
 */
#define	_BSD_CLOCK_T_		int		/* clock() */
#define	_BSD_PTRDIFF_T_		int		/* ptr1 - ptr2 */
#define	_BSD_SIZE_T_		unsigned int	/* sizeof() */
#define	_BSD_SSIZE_T_		int		/* byte count or error */
#define	_BSD_TIME_T_		int		/* time() */
#if defined(__GNUC__) && __GNUC__ >= 3
#define _BSD_VA_LIST_	__builtin_va_list
#else
#define	_BSD_VA_LIST_		char *		/* va_list */
#endif
#define	_BSD_WCHAR_T_		int		/* wchar_t */
#define	_BSD_WINT_T_		int		/* wint_t */
#define	_BSD_CLOCKID_T_		int		/* clockid_t */
#define	_BSD_TIMER_T_		int		/* timer_t */
#define	_BSD_SUSECONDS_T_	int		/* suseconds_t */
#define	_BSD_USECONDS_T_	unsigned int	/* useconds_t */
#define	_BSD_INTPTR_T_		int		/* intptr_t */
#define	_BSD_UINTPTR_T_		unsigned int	/* uintptr_t */

#define	_BSD_WCHAR_T_		int		/* wchar_t */
#define	_BSD_WINT_T_            int		/* wint_t */
#define	_BSD_RUNE_T_            int		/* rune_t */
#define	_BSD_WCTRANS_T_		void *		/* wctrans_t */
#define	_BSD_WCTYPE_T_		void *		/* wctype_t */

#define _BSD_OFF_T_		long long	/* off_t */

/*
 * mbstate_t is an opaque object to keep conversion state, during multibyte
 * stream conversions. The content must not be referenced by user programs.
 */
typedef union {
	char __mbstate8[128];
	long long __mbstateL;			/* for alignment */
} __mbstate_t;
#define	_BSD_MBSTATE_T_		__mbstate_t	/* mbstate_t */

#endif  /* _ANSI_H_ */
@


1.12
log
@Make clock_t consistent across platforms as a 32 bit int.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ansi.h,v 1.11 2005/04/14 20:56:24 espie Exp $	*/
@


1.11
log
@internal _BSD_WCTRANS_T_, _BSD_MSTATE_T_, _BSD_WCTYPE_T_ types.
@
text
@d1 1
a1 1
/*	$OpenBSD: ansi.h,v 1.10 2004/01/03 14:08:53 espie Exp $	*/
d49 1
a49 1
#define	_BSD_CLOCK_T_		unsigned long	/* clock() */
@


1.10
log
@put an mi wrapper around stdarg.h/varargs.h. gcc3 moved stdarg/varargs macros
to built-ins, so eventually we will have one version of these files.
Special adjustments for the kernel to cope: machine/stdarg.h -> sys/stdarg.h
and machine/ansi.h needs to have a _BSD_VA_LIST_ for syslog* prototypes.
okay millert@@, drahn@@, miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: ansi.h,v 1.9 2003/06/02 23:27:57 millert Exp $	*/
d68 17
a84 1
#define _BSD_OFF_T_			long long	/* off_t */
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ansi.h,v 1.8 2000/04/26 03:08:40 bjc Exp $	*/
d54 3
d58 1
@


1.8
log
@vax resurrection, part 1: sync with early-april netbsd

many changes here, notable:  uvm, ansi.h, more (and cleaner) vsbus support
@
text
@d1 1
a1 1
/*	$OpenBSD: ansi.h,v 1.7 2000/02/22 17:29:14 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the University of
 *      California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.7
log
@Use an _BSD_FOO_T_ type declaration for off_t in machine/ansi.h to allow
off_t to be visible in stdio.h even in strict ansi mode.  This is needed
for ftello()/fseeko() and it allows us to remove the horrible fpos_t hack.
@
text
@d1 2
a2 2
/*	$OpenBSD: ansi.h,v 1.6 1997/07/07 05:56:43 millert Exp $	*/
/*	$NetBSD: ansi.h,v 1.5 1996/11/15 22:39:01 jtc Exp $	*/
d50 2
d53 14
a66 26
#define	_BSD_CLOCK_T_   unsigned long		/* clock() */
#define	_BSD_PTRDIFF_T_ int			/* ptr1 - ptr2 */
#define	_BSD_SIZE_T_    unsigned int		/* sizeof() */
#define	_BSD_SSIZE_T_   int			/* byte count or error */
#define	_BSD_TIME_T_    int			/* time() */
#define	_BSD_VA_LIST_   char *			/* va_list */
#define	_BSD_CLOCKID_T_	int
#define	_BSD_TIMER_T_	int

/*
 * Runes (wchar_t) is declared to be an ``int'' instead of the more natural
 * ``unsigned long'' or ``long''.  Two things are happening here.  It is not
 * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,
 * it looks like 10646 will be a 31 bit standard.  This means that if your
 * ints cannot hold 32 bits, you will be in trouble.  The reason an int was
 * chosen over a long is that the is*() and to*() routines take ints (says
 * ANSI C), but they use _RUNE_T_ instead of int.  By changing it here, you
 * lose a bit of ANSI conformance, but your programs will still work.
 *    
 * Note that _WCHAR_T_ and _RUNE_T_ must be of the same type.  When wchar_t
 * and rune_t are typedef'd, _WCHAR_T_ will be undef'd, but _RUNE_T remains
 * defined for ctype.h.
 */
#define	_BSD_WCHAR_T_	int			/* wchar_t */
#define _BSD_WINT_T_	int			/* wint_t */
#define	_BSD_RUNE_T_	int			/* rune_t */
d68 1
a68 5
/*
 * We describe off_t here so its declaration can be visible to
 * stdio without pulling in all of <sys/type.h>, thus appeasing ANSI.
 */
#define _BSD_OFF_T_	long long		/* file offset */
@


1.6
log
@Too many things include <machine/ansi.h> w/o <sys/types.h> so
make time_t int not int32_t.
@
text
@d1 1
a1 1
/*	$OpenBSD: ansi.h,v 1.5 1997/07/05 21:09:14 millert Exp $	*/
a49 2
 *
 * Thanks, ANSI!
a56 2
#define	_BSD_WCHAR_T_	int			/* wchar_t */
#define	_BSD_WINT_T_	int			/* wint_t */
d60 23
@


1.6.12.1
log
@Sync with -current
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 2
d59 2
a63 23
/*
 * Runes (wchar_t) is declared to be an ``int'' instead of the more natural
 * ``unsigned long'' or ``long''.  Two things are happening here.  It is not
 * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,
 * it looks like 10646 will be a 31 bit standard.  This means that if your
 * ints cannot hold 32 bits, you will be in trouble.  The reason an int was
 * chosen over a long is that the is*() and to*() routines take ints (says
 * ANSI C), but they use _RUNE_T_ instead of int.  By changing it here, you
 * lose a bit of ANSI conformance, but your programs will still work.
 *    
 * Note that _WCHAR_T_ and _RUNE_T_ must be of the same type.  When wchar_t
 * and rune_t are typedef'd, _WCHAR_T_ will be undef'd, but _RUNE_T remains
 * defined for ctype.h.
 */
#define	_BSD_WCHAR_T_	int			/* wchar_t */
#define _BSD_WINT_T_	int			/* wint_t */
#define	_BSD_RUNE_T_	int			/* rune_t */

/*
 * We describe off_t here so its declaration can be visible to
 * stdio without pulling in all of <sys/type.h>, thus appeasing ANSI.
 */
#define _BSD_OFF_T_	long long		/* file offset */
@


1.6.12.2
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 2
a2 2
/*	$OpenBSD: ansi.h,v 1.8 2000/04/26 03:08:40 bjc Exp $	*/
/*	$NetBSD: ansi.h,v 1.7 1998/04/27 17:39:11 kleink Exp $	*/
a49 2
 *
 * Thanks, ANSI!
d51 26
a76 14
#define	_BSD_CLOCK_T_		unsigned long	/* clock() */
#define	_BSD_PTRDIFF_T_		int		/* ptr1 - ptr2 */
#define	_BSD_SIZE_T_		unsigned int	/* sizeof() */
#define	_BSD_SSIZE_T_		int		/* byte count or error */
#define	_BSD_TIME_T_		int		/* time() */
#define	_BSD_VA_LIST_		char *		/* va_list */
#define	_BSD_WCHAR_T_		int		/* wchar_t */
#define	_BSD_WINT_T_		int		/* wint_t */
#define	_BSD_CLOCKID_T_		int		/* clockid_t */
#define	_BSD_TIMER_T_		int		/* timer_t */
#define	_BSD_SUSECONDS_T_	int		/* suseconds_t */
#define	_BSD_USECONDS_T_	unsigned int	/* useconds_t */
#define	_BSD_INTPTR_T_		int		/* intptr_t */
#define	_BSD_UINTPTR_T_		unsigned int	/* uintptr_t */
d78 5
a82 1
#define _BSD_OFF_T_			long long	/* off_t */
@


1.6.12.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: ansi.h,v 1.6.12.2 2001/05/14 21:37:57 niklas Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.6.12.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a53 3
#if defined(__GNUC__) && __GNUC__ >= 3
#define _BSD_VA_LIST_	__builtin_va_list
#else
a54 1
#endif
@


1.5
log
@Make _BSD_TIME_T_ int32_t on all platforms.  You can't write
lint-free code when these differ in name accross platforms.
Fundamnetal type has not changed (was int on alpha and long on others).
@
text
@d1 1
a1 1
/*	$OpenBSD: ansi.h,v 1.4 1997/05/29 00:04:34 niklas Exp $	*/
d57 1
a57 1
#define	_BSD_TIME_T_    int32_t			/* time() */
@


1.4
log
@RCS tagging
@
text
@d1 1
a1 1
/*	$OpenBSD: ansi.h,v 1.5 1996/11/15 22:39:01 jtc Exp $	*/
d53 10
a62 10
#define _BSD_CLOCK_T_   unsigned long           /* clock() */
#define _BSD_PTRDIFF_T_ int                     /* ptr1 - ptr2 */
#define _BSD_SIZE_T_    unsigned int            /* sizeof() */
#define _BSD_SSIZE_T_   int                     /* byte count or error */
#define _BSD_TIME_T_    long                    /* time() */
#define _BSD_VA_LIST_   char *                  /* va_list */
#define	_BSD_WCHAR_T_	int                     /* wchar_t */
#define _BSD_WINT_T_	int			/* wint_t */
#define _BSD_CLOCKID_T_	int
#define _BSD_TIMER_T_	int
@


1.3
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
@


1.2
log
@sync w/ 0430
@
text
@d1 1
a1 1
/*	$NetBSD: ansi.h,v 1.4 1996/03/16 01:32:03 jtc Exp $	*/
d60 3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: ansi.h,v 1.3 1994/10/26 08:01:59 cgd Exp $	*/
d59 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
