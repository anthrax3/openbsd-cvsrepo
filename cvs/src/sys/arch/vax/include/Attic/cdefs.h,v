head	1.10;
access;
symbols
	OPENBSD_5_9:1.9.0.10
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.12
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.8
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.6
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.7.0.30
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.28
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.26
	OPENBSD_5_0:1.7.0.24
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.22
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.20
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.16
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.18
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.14
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.12
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.10
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.8
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.6
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.4
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.5.0.16
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.22
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.20
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.12
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.9;
commitid	OSDG2O3Cgeifnf1W;

1.9
date	2013.07.05.21.10.50;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2013.03.28.17.30.45;	author martynas;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.10.00.04.04;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.24.20.46.48;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.11.20.31.44;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	97.05.29.00.04.36;	author niklas;	state Exp;
branches
	1.4.12.1
	1.4.22.1;
next	1.3;

1.3
date	96.06.12.08.20.23;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.24.16.51.50;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.06;	author deraadt;	state Exp;
branches;
next	;

1.4.12.1
date	2002.03.06.02.04.47;	author niklas;	state Exp;
branches;
next	;

1.4.22.1
date	2002.06.11.03.39.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: cdefs.h,v 1.9 2013/07/05 21:10:50 miod Exp $	*/

/*
 * Written by J.T. Conklin <jtc@@wimsey.com> 01/17/95.
 * Public domain.
 */

#ifndef	_MACHINE_CDEFS_H_
#define	_MACHINE_CDEFS_H_

#define __warn_references(sym,msg)				\
	__asm__(".section .gnu.warning." __STRING(sym)		\
	    " ; .ascii \"" msg "\" ; .text")
#define __strong_alias(alias,sym)			\
	__asm__(".global " __STRING(alias) " ; " __STRING(alias)	\
	    " = " __STRING(sym))
#define __weak_alias(alias,sym)					\
	__asm__(".weak " __STRING(alias) " ; " __STRING(alias)	\
	    " = " __STRING(sym))

#endif /* !_MACHINE_CDEFS_H_ */
@


1.9
log
@VAX ELF userland bits. Consists mostly of register prefix additions.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.8 2013/03/28 17:30:45 martynas Exp $	*/
@


1.8
log
@Add __strong_alias macros for all architectures to be able to alias
another symbol without weak attribute.  To be used in libc and libm
soon.  Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.7 2006/01/10 00:04:04 millert Exp $	*/
d11 3
a13 6
#define __indr_reference(sym,alias)			\
	__asm__(".stabs \"_" #alias "\",11,0,0,0");	\
	__asm__(".stabs \"_" #sym "\",1,0,0,0")
#define __warn_references(sym,msg)			\
	__asm__(".stabs \"" msg "\",30,0,0,0");		\
	__asm__(".stabs \"_" #sym "\",1,0,0,0")
d15 5
a19 3
	__asm__(".global _" #alias "; _" #alias "= _" __STRING(sym))
#define __weak_alias(alias,sym)				\
	__asm__(".weak _" #alias "; _" #alias "= _" __STRING(sym))
@


1.7
log
@Remove duplicate _C_LABEL define.  OK miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.6 2005/11/24 20:46:48 deraadt Exp $	*/
a10 5
#if defined(lint)
#define __indr_reference(sym,alias)	__lint_equal__(sym,alias)
#define __warn_references(sym,msg)
#define __weak_alias(alias,sym)		__lint_equal__(sym,alias)
#elif defined(__GNUC__) && defined(__STDC__)
d17 2
a20 1
#endif
@


1.6
log
@add lint-specific hacks.  at the same time, clean out a lot of ancient
cruft for old compilers and environments.  there may be a 2nd round of
polishing after this; ok miod and others
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.5 2002/02/11 20:31:44 fgsch Exp $	*/
a9 2

#define _C_LABEL(x)	_STRING(_ ## x)
@


1.5
log
@o add __weak_alias definition.
o empty definitions if !__GNUC__

miod@@ testing and ok.
@
text
@d1 1
a1 2
/*	$OpenBSD: cdefs.h,v 1.4 1997/05/29 00:04:36 niklas Exp $	*/
/*	$NetBSD: cdefs.h,v 1.2 1995/03/23 20:10:53 jtc Exp $	*/
a10 1
#ifdef __STDC__
a11 3
#else
#define _C_LABEL(x)	_STRING(_/**/x)
#endif
d13 6
a18 3
#ifdef __GNUC__
#ifdef __STDC__
#define __indr_reference(sym,alias)	\
d21 1
a21 1
#define __warn_references(sym,msg)	\
d24 1
a24 1
#define __weak_alias(alias,sym)		\
a25 14
#else
#define __indr_reference(sym,alias)	\
	__asm__(".stabs \"_/**/alias\",11,0,0,0");	\
	__asm__(".stabs \"_/**/sym\",1,0,0,0")
#define __warn_references(sym,msg)	\
	__asm__(".stabs msg,30,0,0,0");			\
	__asm__(".stabs \"_/**/sym\",1,0,0,0")
#define __weak_alias(alias,sym)		\
	__asm__(".weak _/**/alias; _/**/alias = _/**/sym")
#endif
#else
#define __indr_reference(sym,alias)
#define __warn_references(sym,alias)
#define __weak_alias(sym,alias)
@


1.4
log
@RCS tagging
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.2 1995/03/23 20:10:53 jtc Exp $	*/
d26 2
d35 2
d38 4
@


1.4.22.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: cdefs.h,v 1.4 1997/05/29 00:04:36 niklas Exp $	*/
a25 2
#define __weak_alias(alias,sym)		\
	__asm__(".weak _" #alias "; _" #alias "= _" __STRING(sym))
a32 2
#define __weak_alias(alias,sym)		\
	__asm__(".weak _/**/alias; _/**/alias = _/**/sym")
a33 4
#else
#define __indr_reference(sym,alias)
#define __warn_references(sym,alias)
#define __weak_alias(sym,alias)
@


1.4.12.1
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a25 2
#define __weak_alias(alias,sym)		\
	__asm__(".weak _" #alias "; _" #alias "= _" __STRING(sym))
a32 2
#define __weak_alias(alias,sym)		\
	__asm__(".weak _/**/alias; _/**/alias = _/**/sym")
a33 4
#else
#define __indr_reference(sym,alias)
#define __warn_references(sym,alias)
#define __weak_alias(sym,alias)
@


1.3
log
@sync to 0611
@
text
@d1 1
@


1.2
log
@Provide empty __warn_references() when we are not running GCC
@
text
@a32 2
#else
#define	__warn_references(sym,msg)	/* nothing */
@


1.1
log
@Initial revision
@
text
@d33 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
