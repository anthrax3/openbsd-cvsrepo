head	1.5;
access;
symbols
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.12
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.8
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.10
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.12
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.4;
commitid	OSDG2O3Cgeifnf1W;

1.4
date	2013.05.21.20.05.30;	author tedu;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.23.16.54.37;	author pirofti;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.21.03.03.26;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.01.18.56.31;	author miod;	state Exp;
branches;
next	;


desc
@@


1.5
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: lock.h,v 1.4 2013/05/21 20:05:30 tedu Exp $	*/

/* public domain */

#ifndef	_MACHINE_LOCK_H_
#define	_MACHINE_LOCK_H_

#include <machine/atomic.h>

#endif	/* _MACHINE_LOCK_H_ */
@


1.4
log
@remove unused cpu_lock code (where it is truly unused). it is not
part of the future we have planned. middling ok from a few
@
text
@d1 1
a1 1
/*	$OpenBSD: lock.h,v 1.3 2011/03/23 16:54:37 pirofti Exp $	*/
@


1.3
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: lock.h,v 1.2 2010/04/21 03:03:26 deraadt Exp $	*/
a8 46

typedef volatile u_int	__cpu_simple_lock_t;

#define	__SIMPLELOCK_LOCKED	1
#define	__SIMPLELOCK_UNLOCKED	0

static __inline__ void
__cpu_simple_lock_init(__cpu_simple_lock_t *l)
{
	*l = __SIMPLELOCK_UNLOCKED;
}

static __inline__ void
__cpu_simple_lock(__cpu_simple_lock_t *l)
{
	__cpu_simple_lock_t old;

	do {
		old = __SIMPLELOCK_LOCKED;
		__asm__ __volatile__
		   ("\tmovl\t$1, %1\n"		/* _SPLINLOCK_LOCKED */
		    "\tbbssi\t$0, %0, 1f\n"
		    "\tmovl\t$0, %1\n"		/* _SPLINLOCK_UNLOCKED */
		    "1:\n" : "=m" (*l), "=r" (old) : "0" (*l));
	} while (old != __SIMPLELOCK_UNLOCKED);
}

static __inline__ int
__cpu_simple_lock_try(__cpu_simple_lock_t *l)
{
	__cpu_simple_lock_t old = __SIMPLELOCK_LOCKED;

	__asm__ __volatile__
	   ("\tmovl\t$1, %1\n"		/* _SPLINLOCK_LOCKED */
	    "\tbbssi\t$0, %0, 1f\n"
	    "\tmovl\t$0, %1\n"		/* _SPLINLOCK_UNLOCKED */
	    "1:\n" : "=m" (*l), "=r" (old) : "0" (*l));

	return (old == __SIMPLELOCK_UNLOCKED);
}

static __inline__ void
__cpu_simple_unlock(__cpu_simple_lock_t *l)
{
	*l = __SIMPLELOCK_UNLOCKED;
}
@


1.2
log
@more cleanup to cope with the change that tries to make proc.h not act
like it is everything.h
ok tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: lock.h,v 1.1 2007/05/01 18:56:31 miod Exp $	*/
d5 2
a6 2
#ifndef	_VAX_LOCK_H_
#define	_VAX_LOCK_H_
d56 1
a56 1
#endif	/* _VAX_LOCK_H_ */
@


1.1
log
@Provide <machine/lock.h> on all platforms, so that MI code may #include it
unconditionnaly.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 2
@

