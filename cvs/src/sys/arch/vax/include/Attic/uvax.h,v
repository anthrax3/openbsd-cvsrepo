head	1.7;
access;
symbols
	OPENBSD_5_9:1.6.0.18
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.20
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.12
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.16
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.14
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.10
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.36
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.34
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.30
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.32
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.28
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.26
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.24
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.22
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.20
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.18
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.16
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.14
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.12
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.5
	UBC:1.4.0.10
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.6;
commitid	OSDG2O3Cgeifnf1W;

1.6
date	2011.03.23.16.54.37;	author pirofti;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.21.13.42.43;	author hugh;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.26.03.08.43;	author bjc;	state Exp;
branches
	1.4.10.1;
next	1.3;

1.3
date	97.09.10.11.47.11;	author maja;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	97.05.29.00.04.55;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	97.01.15.23.24.45;	author maja;	state Exp;
branches;
next	;

1.3.12.1
date	2001.05.14.21.38.09;	author niklas;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2003.03.27.23.52.19;	author niklas;	state Exp;
branches;
next	;

1.4.10.1
date	2002.10.29.00.28.13;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: uvax.h,v 1.6 2011/03/23 16:54:37 pirofti Exp $ */
/*	$NetBSD: uvax.h,v 1.5 1999/02/02 18:37:22 ragge Exp $ */
/*
 * Copyright (c) 2002 Hugh Graham.
 * Copyright (c) 1996 Ludd, University of Lule}, Sweden.
 * All rights reserved.
 *
 * This code is derived from software contributed to Ludd by Bertram Barth.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed at Ludd, University of 
 *      Lule}, Sweden and its contributors.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_UVAX_H_
#define _MACHINE_UVAX_H_

/*
 * Generic definitions common on all MicroVAXen clock chip.
 */
#define	uVAX_CLKVRT	0200
#define	uVAX_CLKUIP	0200
#define	uVAX_CLKRATE	040
#define	uVAX_CLKENABLE	06
#define	uVAX_CLKSET	0206

/* cpmbx bits  */
#define	uVAX_CLKHLTACT	03

/* halt action values */
#define	uVAX_CLKRESTRT	01
#define	uVAX_CLKREBOOT	02
#define	uVAX_CLKHALT	03

/* in progress flags */
#define	uVAX_CLKBOOT	04
#define	uVAX_CLKRSTRT	010
#define	uVAX_CLKLANG	0360

/*
 * Miscellaneous registers common on most VAXststions.
 */
struct vs_cpu {
        u_long  vc_hltcod;      /* Halt Code Register */
        u_long  vc_410mser;	/* VS2K */
        u_long  vc_410cear;	/* VS2K */
	u_char	vc_intmsk;	/* Interrupt mask register */
	u_char	vc_vdcorg;	/* Mono display origin */
	u_char	vc_vdcsel;	/* Video interrupt select */
	u_char	vc_intreq;	/* Interrupt request register */
#define	vc_intclr vc_intreq
        u_short vc_diagdsp;     /* Diagnostic display register */
        u_short pad4;
        u_long  vc_parctl;      /* Parity Control Register */
#define	vc_bwf0	vc_parctl
        u_short pad5;
        u_short pad6;
        u_short vc_diagtimu;	/* usecond timer KA46 */
        u_short vc_diagtme;     /* Diagnostic time register */
#define	vc_diagtimm vc_diagtme	/* msecond time KA46 */
};
#define	PARCTL_DMA	0x1000000
#define	PARCTL_CPEN	2
#define	PARCTL_DPEN	1

/*
 * Console Mailbox layout common to several models.
 */

struct cpmbx {
	unsigned int mbox_halt:2;	/* mailbox halt action */
	unsigned int mbox_bip:1;	/* bootstrap in progress */
	unsigned int mbox_rip:1;	/* restart in progress */
	unsigned int mbox_lang:4;	/* language info */
	unsigned int terminal:8;	/* terminal info */
	unsigned int keyboard:8;	/* keyboard info */
	unsigned int user_four:4;	/* unknown */
	unsigned int user_halt:3;	/* user halt action */
	unsigned int user_one:1;	/* unknown */
};

extern struct cpmbx *cpmbx;

void	generic_halt(void);
void	generic_reboot(int);

#define	MHALT_RESTART_REBOOT	0
#define	MHALT_RESTART		1
#define	MHALT_REBOOT		2
#define	MHALT_HALT		3

#define	UHALT_DEFAULT		0
#define	UHALT_RESTART		1
#define	UHALT_REBOOT		2
#define	UHALT_HALT		3
#define	UHALT_RESTART_REBOOT	4

#endif
@


1.6
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: uvax.h,v 1.5 2002/09/21 13:42:43 hugh Exp $ */
@


1.5
log
@Add support for OS defined halt action on Cheetah and Omega.
Should also work on Legacy, but tester hasn't reported back yet...
@
text
@d1 1
a1 1
/*	$OpenBSD: uvax.h,v 1.4 2000/04/26 03:08:43 bjc Exp $ */
d37 2
a38 2
#ifndef _VAX_UVAX_H_
#define _VAX_UVAX_H_
@


1.4
log
@vax resurrection, part 1: sync with early-april netbsd

many changes here, notable:  uvm, ansi.h, more (and cleaner) vsbus support
@
text
@d1 1
a1 1
/*	$OpenBSD: uvax.h,v 1.3 1997/09/10 11:47:11 maja Exp $ */
d4 1
d87 32
@


1.4.10.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: uvax.h,v 1.4 2000/04/26 03:08:43 bjc Exp $ */
a3 1
 * Copyright (c) 2002 Hugh Graham.
a85 32

/*
 * Console Mailbox layout common to several models.
 */

struct cpmbx {
	unsigned int mbox_halt:2;	/* mailbox halt action */
	unsigned int mbox_bip:1;	/* bootstrap in progress */
	unsigned int mbox_rip:1;	/* restart in progress */
	unsigned int mbox_lang:4;	/* language info */
	unsigned int terminal:8;	/* terminal info */
	unsigned int keyboard:8;	/* keyboard info */
	unsigned int user_four:4;	/* unknown */
	unsigned int user_halt:3;	/* user halt action */
	unsigned int user_one:1;	/* unknown */
};

extern struct cpmbx *cpmbx;

void	generic_halt(void);
void	generic_reboot(int);

#define	MHALT_RESTART_REBOOT	0
#define	MHALT_RESTART		1
#define	MHALT_REBOOT		2
#define	MHALT_HALT		3

#define	UHALT_DEFAULT		0
#define	UHALT_RESTART		1
#define	UHALT_REBOOT		2
#define	UHALT_HALT		3
#define	UHALT_RESTART_REBOOT	4
@


1.3
log
@Sync with NetBSD 970516. -moj
@
text
@d1 2
a2 2
/*	$OpenBSD: uvax.h,v 1.2 1997/05/29 00:04:55 niklas Exp $ */
/*	$NetBSD: uvax.h,v 1.2 1997/02/19 10:06:07 ragge Exp $ */
a39 45
 * generic(?) MicroVAX and VAXstation support
 *
 * There are similarities to struct cpu_calls[] in autoconf.c
 */

/* 
 * Prototypes for autoconf.c
 */
struct	device;
void	uvax_conf __P((struct device*, struct device*, void*));
int	uvax_clock __P((void));
void	uvax_memerr __P((void));
int	uvax_mchk __P((caddr_t));
void	uvax_steal_pages __P((void));

int	uvax_setup __P((int mapen));

struct uvax_calls {
	u_long	(*uc_memsize) __P((void));

	char	*uc_name;

	void	*le_iomem;		/* base addr of RAM -- CPU's view */
	u_long	*le_ioaddr;		/* base addr of RAM -- LANCE's view */
	int	*le_memsize;		/* size of RAM reserved for LANCE */

	void	*uc_physmap;
	int	uc_vups;		/* used by delay() */

	int	uv_flags;
	int	vs_flags;
};		

extern struct uvax_calls guc;		/* Generic uVAX Calls */
extern struct uvax_calls *ucp;

struct uc_map {
	u_long	um_base;
	u_long	um_end;
	u_long	um_size;
	u_long	um_virt;
};
extern struct uc_map *uc_physmap;

/*
d61 26
a86 5
/* Prototypes */
int	uvax_clkread __P((time_t));
void	uvax_clkwrite __P((void));
void	uvax_fillmap __P((void));
u_long	uvax_phys2virt __P((u_long));
@


1.3.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 2
a2 2
/*	$OpenBSD: uvax.h,v 1.4 2000/04/26 03:08:43 bjc Exp $ */
/*	$NetBSD: uvax.h,v 1.5 1999/02/02 18:37:22 ragge Exp $ */
d40 45
d106 5
a110 26
/*
 * Miscellaneous registers common on most VAXststions.
 */
struct vs_cpu {
        u_long  vc_hltcod;      /* Halt Code Register */
        u_long  vc_410mser;	/* VS2K */
        u_long  vc_410cear;	/* VS2K */
	u_char	vc_intmsk;	/* Interrupt mask register */
	u_char	vc_vdcorg;	/* Mono display origin */
	u_char	vc_vdcsel;	/* Video interrupt select */
	u_char	vc_intreq;	/* Interrupt request register */
#define	vc_intclr vc_intreq
        u_short vc_diagdsp;     /* Diagnostic display register */
        u_short pad4;
        u_long  vc_parctl;      /* Parity Control Register */
#define	vc_bwf0	vc_parctl
        u_short pad5;
        u_short pad6;
        u_short vc_diagtimu;	/* usecond timer KA46 */
        u_short vc_diagtme;     /* Diagnostic time register */
#define	vc_diagtimm vc_diagtme	/* msecond time KA46 */
};
#define	PARCTL_DMA	0x1000000
#define	PARCTL_CPEN	2
#define	PARCTL_DPEN	1

@


1.3.12.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a3 1
 * Copyright (c) 2002 Hugh Graham.
a85 32

/*
 * Console Mailbox layout common to several models.
 */

struct cpmbx {
	unsigned int mbox_halt:2;	/* mailbox halt action */
	unsigned int mbox_bip:1;	/* bootstrap in progress */
	unsigned int mbox_rip:1;	/* restart in progress */
	unsigned int mbox_lang:4;	/* language info */
	unsigned int terminal:8;	/* terminal info */
	unsigned int keyboard:8;	/* keyboard info */
	unsigned int user_four:4;	/* unknown */
	unsigned int user_halt:3;	/* user halt action */
	unsigned int user_one:1;	/* unknown */
};

extern struct cpmbx *cpmbx;

void	generic_halt(void);
void	generic_reboot(int);

#define	MHALT_RESTART_REBOOT	0
#define	MHALT_RESTART		1
#define	MHALT_REBOOT		2
#define	MHALT_HALT		3

#define	UHALT_DEFAULT		0
#define	UHALT_RESTART		1
#define	UHALT_REBOOT		2
#define	UHALT_HALT		3
#define	UHALT_RESTART_REBOOT	4
@


1.2
log
@RCS tagging
@
text
@d1 2
a2 2
/*	$OpenBSD: uvax.h,v 1.1 1996/07/20 17:58:24 ragge Exp $ */
/*	$NetBSD: uvax.h,v 1.1 1996/07/20 17:58:24 ragge Exp $ */
d36 3
a57 1
	u_long	(*uc_phys2virt) __P((u_long));	/* most often used! */
a58 6
	void	(*uc_steal_pages) __P((void));
	void	(*uc_conf) __P((struct device*, struct device*, void*));
	void	(*uc_memerr) __P((void));
	int	(*uc_mchk) __P((caddr_t));
	int	(*uc_clkread) __P((time_t));
	void	(*uc_clkwrite) __P((void));
a60 3
	u_char  *uc_intreq;
	u_char	*uc_intclr;
	u_char  *uc_intmsk;
a66 1
	int	uc_busTypes;
d109 3
@


1.1
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
@
