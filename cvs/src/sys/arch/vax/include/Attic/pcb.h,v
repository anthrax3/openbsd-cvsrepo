head	1.10;
access;
symbols
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.10
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.8
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.30
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.28
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.24
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.26
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.22
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.20
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.18
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.16
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.14
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	SMP_SYNC_A:1.6
	SMP_SYNC_B:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.16
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.14
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.12
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.10
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.5.0.8
	UBC_BASE:1.5
	OPENBSD_3_0:1.5.0.6
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	SMP:1.4.0.12
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.9;
commitid	OSDG2O3Cgeifnf1W;

1.9
date	2015.05.05.02.13.47;	author guenther;	state Exp;
branches;
next	1.8;
commitid	dNPv28CJI5BxtRGW;

1.8
date	2013.11.24.22.08.23;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2011.03.23.16.54.37;	author pirofti;	state Exp;
branches;
next	1.6;

1.6
date	2003.11.10.21.05.06;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.09.22.57.42;	author bjc;	state Exp;
branches;
next	1.4;

1.4
date	97.05.29.00.04.45;	author niklas;	state Exp;
branches
	1.4.12.1;
next	1.3;

1.3
date	96.05.03.09.09.43;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.01.31.05.09.05;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.07;	author deraadt;	state Exp;
branches;
next	;

1.4.12.1
date	2001.05.14.21.38.03;	author niklas;	state Exp;
branches;
next	1.4.12.2;

1.4.12.2
date	2004.02.19.10.50.02;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.10
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: pcb.h,v 1.9 2015/05/05 02:13:47 guenther Exp $	*/
/*	$NetBSD: pcb.h,v 1.10 1996/02/02 18:08:26 mycroft Exp $	*/

/*
 * Copyright (c) 1994 Ludd, University of Lule}, Sweden.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *     This product includes software developed at Ludd, University of Lule}.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

 /* All bugs are subject to removal without further notice */

#ifndef _MACHINE_PCB_H_
#define _MACHINE_PCB_H_

#include <machine/reg.h>
#include <machine/pte.h>

struct pcb {

  	/* Hardware registers, based on VAX special instructions */

	long	KSP;		/*  Kernel Stack Pointer      */
	long	ESP;		/*  Executive Stack Pointer   */
	long	SSP;		/*  Supervisor Stack Pointer  */
	long	USP;		/*  User Stack Pointer        */
	long	R[12];		/*  Register 0-11             */
	long	AP;		/*  Argument Pointer          */
	long	FP;		/*  Frame Pointer             */
	long	PC;		/*  Program Counter           */
	long	PSL;		/*  Program Status Longword   */
	pt_entry_t *P0BR;	/*  Page 0 Base Register      */
	long	P0LR;		/*  Page 0 Length Register    */
	pt_entry_t *P1BR;	/*  Page 1 Base Register      */
	long	P1LR;		/*  Page 1 Length Register    */

	/* Software registers, only used by kernel software */
	void   *framep;		/* Pointer to syscall frame */
	void   *iftrap;		/* Tells whether fault copy */

	paddr_t	pcb_paddr;	/* physical address of PCB */
	struct pmap *pcb_pm;	/* owning pmap */
	struct pcb *pcb_pmnext;	/* next pcb that shares this pmap */
};

#define	AST_MASK 0x07000000
#define	AST_PCB	 0x04000000

#endif /* _MACHINE_PCB_H_ */

@


1.9
log
@emul_native is only used for kernel threads which can't dump core, so
delete coredump_trad(), uvm_coredump(), cpu_coredump(), struct md_coredump,
and various #includes that are superfluous.

This leaves compat_linux processes without a coredump callback.  If that
ability is desired, someone should update it to use coredump_elf32() and
verify the results...

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.8 2013/11/24 22:08:23 miod Exp $	*/
@


1.8
log
@Rework pmap to use dynamic P0 and P1 region allocation, instead of allocating
the largest possible page table for every pmap; from NetBSD. This allows the
kernel to use much less memory for page tables.

Significant differences against the NetBSD code are:
- allocation of page table pages is done with a pool instead of allocating
  whole logical pages from uvm and managing the freelist within pmap, never
  releasing allocated pages.
- try to use pt_entry_t * rather than int * whenever possible.
- growth of P0 and P1 regions is allowed to fail, if invoked from
  pmap_enter with the PMAP_CANFAIL flag. This will stall processes until
  memory for the page tables can be obtained, rather than panicing, in
  most cases.
- keep management of mappings for managed pages using pv lists tied to the
  vm_page (using __HAVE_VM_PAGE_MD), rather than a global pv_list head.
- bound check against Sysmap[] in pmap_extract() when asked for a kernel
  address.

As a result of this, bsd.rd can now install a working system on a 12MB machine
without needing to enable swap.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.7 2011/03/23 16:54:37 pirofti Exp $	*/
a70 5

/* machine-specific core dump; save regs */
struct	md_coredump {
	struct reg md_reg;
};
@


1.7
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.6 2003/11/10 21:05:06 miod Exp $	*/
d63 4
@


1.6
log
@Get rid of the "struct pte" bitfield, and use straight integers.

Makes the code slightly more readble, removes casts, and makes some
specific constants defined for the bitfields disappear in pmap.c...

No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.5 2000/10/09 22:57:42 bjc Exp $	*/
d36 2
a37 2
#ifndef _VAX_PCB_H_
#define _VAX_PCB_H_
d73 1
a73 1
#endif /* _VAX_PCB_H_ */
@


1.5
log
@save the right info in struct md_coredump
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.4 1997/05/29 00:04:45 niklas Exp $	*/
d40 1
d55 1
a55 1
	struct	pte *P0BR;	/*  Page 0 Base Register      */
d57 1
a57 1
	struct	pte *P1BR;	/*  Page 1 Base Register      */
@


1.4
log
@RCS tagging
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.10 1996/02/02 18:08:26 mycroft Exp $	*/
d39 1
a39 1
#include <machine/trap.h>
d67 1
a67 1
/* machine-specific core dump; save trapframe */
d69 1
a69 1
	struct trapframe md_tf;
@


1.4.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: pcb.h,v 1.5 2000/10/09 22:57:42 bjc Exp $	*/
d39 1
a39 1
#include <machine/reg.h>
d67 1
a67 1
/* machine-specific core dump; save regs */
d69 1
a69 1
	struct reg md_reg;
@


1.4.12.2
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a39 1
#include <machine/pte.h>
d54 1
a54 1
	pt_entry_t *P0BR;	/*  Page 0 Base Register      */
d56 1
a56 1
	pt_entry_t *P1BR;	/*  Page 1 Base Register      */
@


1.3
log
@sync w/ 0430
@
text
@d1 1
@


1.2
log
@from ragge; use struct pte * as needed
@
text
@d1 1
a1 1
/*	$NetBSD: pcb.h,v 1.9 1996/01/28 12:27:19 ragge Exp $	*/
d38 1
a38 1
#include "machine/trap.h"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: pcb.h,v 1.8 1995/05/07 16:43:34 ragge Exp $	*/
d53 1
a53 1
	void   *P0BR;		/*  Page 0 Base Register      */
d55 1
a55 1
	void   *P1BR;		/*  Page 1 Base Register      */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
