head	1.14;
access;
symbols
	OPENBSD_5_9:1.13.0.18
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.20
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.12
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.16
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.14
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.10
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.8
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.6
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.4
	OPENBSD_5_0:1.13.0.2
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.12.0.32
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.30
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.26
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.28
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.24
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.22
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.20
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.18
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.16
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.12
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.10
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	SMP_SYNC_A:1.12
	SMP_SYNC_B:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	UBC_SYNC_A:1.11
	OPENBSD_3_3:1.11.0.10
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.8
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.6
	OPENBSD_3_1_BASE:1.11
	UBC_SYNC_B:1.11
	UBC:1.11.0.4
	UBC_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.6
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	SMP:1.9.0.12
	SMP_BASE:1.9
	kame_19991208:1.9
	OPENBSD_2_6:1.9.0.10
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.8
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.6
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.4
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.13;
commitid	OSDG2O3Cgeifnf1W;

1.13
date	2011.03.23.16.54.37;	author pirofti;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.02.23.27.57;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.08.25.13.33.36;	author hugh;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.26.03.08.43;	author bjc;	state Exp;
branches;
next	1.9;

1.9
date	97.09.12.09.21.25;	author maja;	state Exp;
branches
	1.9.12.1;
next	1.8;

1.8
date	97.09.10.11.47.11;	author maja;	state Exp;
branches;
next	1.7;

1.7
date	97.05.29.00.04.53;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	97.01.15.23.24.44;	author maja;	state Exp;
branches;
next	1.5;

1.5
date	96.05.03.09.09.45;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.01.31.08.32.22;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	95.12.14.13.59.57;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.05.27.25;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.08;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.08;	author deraadt;	state Exp;
branches;
next	;

1.9.12.1
date	2001.05.14.21.38.07;	author niklas;	state Exp;
branches;
next	1.9.12.2;

1.9.12.2
date	2001.10.31.03.08.01;	author nate;	state Exp;
branches;
next	1.9.12.3;

1.9.12.3
date	2003.06.07.11.14.47;	author ho;	state Exp;
branches;
next	;


desc
@@


1.14
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*      $OpenBSD: trap.h,v 1.13 2011/03/23 16:54:37 pirofti Exp $     */
/*      $NetBSD: trap.h,v 1.18 2000/06/04 02:19:26 matt Exp $     */

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)trap.h	5.4 (Berkeley) 5/9/91
 */

/*
 * Trap type values
 * also known in trap.c for name strings
 */
#ifndef _MACHINE_TRAP_H_
#define _MACHINE_TRAP_H_

#define	T_RESADFLT	0	/* reserved addressing */
#define	T_PRIVINFLT	1	/* privileged instruction */
#define	T_RESOPFLT	2	/* reserved operand */
#define	T_BPTFLT	3	/* breakpoint instruction */
#define	T_XFCFLT	4	/* Customer reserved instruction */
#define	T_SYSCALL	5	/* system call (kcall) */
#define	T_ARITHFLT	6	/* arithmetic trap */
#define	T_ASTFLT	7	/* system forced exception */
#define	T_PTELEN	8	/* Page table length exceeded */
#define	T_TRANSFLT	9	/* translation fault */
#define	T_TRCTRAP	10	/* trace trap */
#define	T_COMPAT	11	/* compatibility mode fault on VAX */
#define	T_ACCFLT	12	/* Access violation fault */
#define	T_KSPNOTVAL	15	/* kernel stack pointer not valid */
#define	T_KDBTRAP	17	/* kernel debugger trap */

/* These gets ORed with the word for page handling routines */
#define	T_WRITE		0x80
#define	T_PTEFETCH	0x40

/* Trap's coming from user mode */
#define	T_USER	0x100

#ifndef _LOCORE
struct	trapframe {
	long	fp;	/* Stack frame pointer */
	long	ap;     /* Argument pointer on user stack */
	long	sp;	/* Stack pointer */
	long	r0;     /* General registers saved upon trap/syscall */
	long	r1;
	long	r2;
	long	r3;
	long	r4;
	long	r5;
	long	r6;
	long	r7;
	long	r8;
	long	r9;
	long	r10;
	long	r11;
	long	trap;	/* Type of trap */
        long	code;   /* Trap specific code */
        long	pc;     /* User pc */
        long	psl;    /* User psl */
};

#endif /* _LOCORE */

#endif /* _MACHINE_TRAP_H_ */
@


1.13
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*      $OpenBSD: trap.h,v 1.12 2003/06/02 23:27:57 millert Exp $     */
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*      $OpenBSD: trap.h,v 1.11 2001/08/25 13:33:36 hugh Exp $     */
d42 2
a43 2
#ifndef _VAX_TRAP_H_
#define _VAX_TRAP_H_
d93 1
a93 1
#endif /* _VAX_TRAP_H_ */
@


1.11
log
@Bring in some useful stuff from NetBSD. Mostly work by Matt Thomas,
and concerned with intvec counting. Also some ANSIfication.
@
text
@d1 1
a1 1
/*      $OpenBSD: trap.h,v 1.10 2000/04/26 03:08:43 bjc Exp $     */
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.10
log
@vax resurrection, part 1: sync with early-april netbsd

many changes here, notable:  uvm, ansi.h, more (and cleaner) vsbus support
@
text
@d1 2
a2 2
/*      $OpenBSD: trap.h,v 1.9 1997/09/12 09:21:25 maja Exp $     */
/*      $NetBSD: trap.h,v 1.17 2000/01/24 02:40:32 matt Exp $     */
a93 20

/*
 * This struct is used when setting up interrupt vectors dynamically.
 * It pushes a longword between 0-63 on the stack; this number is
 * normally used as the ctlr number on devices. This use effectively
 * limits the number of interruptable ctlrs on one unibus to 64.
 */
struct ivec_dsp {
	char	pushr; 		/* pushr */
	char	pushrarg;	/* $0x3f */
	char	jsb;
	char	mode;
	long	displacement;
	void	(*hoppaddr) __P((void *));
	void	*pushlarg;
};

#ifdef _KERNEL
extern	const struct ivec_dsp idsptch;
#endif
@


1.9
log
@Sync with NetBSD 970827. -moj
@
text
@d1 2
a2 2
/*      $OpenBSD: trap.h,v 1.8 1997/09/10 11:47:11 maja Exp $     */
/*      $NetBSD: trap.h,v 1.16 1997/07/28 21:48:36 ragge Exp $     */
d103 6
a108 10
	char	pushrarg;	/* $3f */
	char	pushl; 		/* pushl */
	char	pushlarg;	/* $? */
	char	nop;      	/* nop, for foolish gcc */
	char	calls[3]; 	/* calls $1,? */
	void	(*hoppaddr) __P((int));	/* jump for calls */
	char	popr;	  	/* popr $0x3f */
	char	poprarg;
	char	rei;      	/* rei */
	char	pad;		/* sizeof(struct ivec_dsp) == 16 */
d111 3
a113 1
extern	struct ivec_dsp idsptch;
d117 1
a117 1
#endif _VAX_TRAP_H_
@


1.9.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 2
a2 2
/*      $OpenBSD: trap.h,v 1.10 2000/04/26 03:08:43 bjc Exp $     */
/*      $NetBSD: trap.h,v 1.17 2000/01/24 02:40:32 matt Exp $     */
d103 10
a112 6
	char	pushrarg;	/* $0x3f */
	char	jsb;
	char	mode;
	long	displacement;
	void	(*hoppaddr) __P((void *));
	void	*pushlarg;
d115 1
a115 3
#ifdef _KERNEL
extern	const struct ivec_dsp idsptch;
#endif
d119 1
a119 1
#endif /* _VAX_TRAP_H_ */
@


1.9.12.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 2
a2 2
/*      $OpenBSD: trap.h,v 1.9.12.1 2001/05/14 21:38:07 niklas Exp $     */
/*      $NetBSD: trap.h,v 1.18 2000/06/04 02:19:26 matt Exp $     */
d94 20
@


1.9.12.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*      $OpenBSD: trap.h,v 1.9.12.2 2001/10/31 03:08:01 nate Exp $     */
d19 5
a23 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.8
log
@Sync with NetBSD 970516. -moj
@
text
@d1 2
a2 2
/*      $OpenBSD: trap.h,v 1.7 1997/05/29 00:04:53 niklas Exp $     */
/*      $NetBSD: trap.h,v 1.15 1997/02/16 20:37:29 ragge Exp $     */
d53 1
@


1.7
log
@RCS tagging
@
text
@d1 2
a2 2
/*      $OpenBSD: trap.h,v 1.14 1997/01/11 11:46:43 ragge Exp $     */
/*      $NetBSD: trap.h,v 1.14 1997/01/11 11:46:43 ragge Exp $     */
d73 19
a91 19
	unsigned	fp;	/* Stack frame pointer */
	unsigned	ap;     /* Argument pointer on user stack */
	unsigned	sp;	/* Stack pointer */
	unsigned	r0;     /* General registers saved upon trap/syscall */
	unsigned	r1;
	unsigned	r2;
	unsigned	r3;
	unsigned	r4;
	unsigned	r5;
	unsigned	r6;
	unsigned	r7;
	unsigned	r8;
	unsigned	r9;
	unsigned	r10;
	unsigned	r11;
	unsigned	trap;	/* Type of trap */
        unsigned	code;   /* Trap specific code */
        unsigned	pc;     /* User pc */
        unsigned	psl;    /* User psl */
@


1.6
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
@


1.5
log
@sync w/ 0430
@
text
@d1 1
a1 1
/*      $NetBSD: trap.h,v 1.13 1996/04/08 18:35:52 ragge Exp $     */
d112 2
@


1.4
log
@from ragge; put sp in trapframe
@
text
@d1 1
a1 1
/*      $NetBSD: trap.h,v 1.11 1996/01/28 12:30:13 ragge Exp $     */
d70 1
a70 1
#ifndef ASSEMBLER
d106 1
a106 1
	void	(*hoppaddr)();	/* jump for calls */
d113 1
a113 1
#endif /* ASSEMBLER */
@


1.3
log
@update from netbsd
@
text
@d1 1
a1 1
/*      $NetBSD: trap.h,v 1.10 1995/12/13 18:54:03 ragge Exp $     */
d58 1
a58 1
/* #define	T_COMPAT	11	/* compatibility mode fault on VAX */
a59 2
/* #define	T_TABLEFLT	13	/* page table fault */
/* #define	T_ALIGNFLT	14	/* alignment fault */
a60 1
/* #define	T_BUSERR	16	/* bus error */
a62 12
/* #define	T_DIVIDE	18	/* integer divide fault */
/* #define	T_NMI		19	/* non-maskable trap */
/* #define	T_OFLOW		20	/* overflow trap */
/* #define	T_BOUND		21	/* bound instruction fault */
/* #define	T_DNA		22	/* device not available fault */
/* #define	T_DOUBLEFLT	23	/* double fault */
/* #define	T_FPOPFLT	24	/* fp coprocessor operand fetch fault */
/* #define	T_TSSFLT	25	/* invalid tss fault */
/* #define	T_SEGNPFLT	26	/* segment not present fault */
/* #define	T_STKFLT	27	/* stack fault */
/* #define	T_RESERVED	28	/* reserved fault base */

a70 1
/* If we want to alter USP in some syscall, we do it with mtpr */
d72 19
a90 18
	int	fp;	/* Stack frame pointer */
        int     ap;     /* Argument pointer on user stack */
        int     r0;     /* General registers saved upon trap/syscall */
        int     r1;
        int     r2;
        int     r3;
        int     r4;
        int     r5;
        int     r6;
        int     r7;
        int     r8;
        int     r9;
        int     r10;
        int     r11;
	int	trap;	/* Type of trap */
        u_int	code;   /* Trap specific code */
        u_int   pc;     /* User pc */
        u_int   psl;    /* User psl */
d97 1
a97 1
 * limits the number of interruptable ctlrs on the unibus to 64.
@


1.2
log
@update from netbsd (verbatim)
@
text
@d1 1
a1 1
/*      $NetBSD: trap.h,v 1.9 1995/11/12 14:33:11 ragge Exp $     */
d121 1
a121 1
	u_int	hoppaddr;	/* jump for calls */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*      $NetBSD: trap.h,v 1.8 1995/06/16 15:17:40 ragge Exp $     */
d107 21
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
