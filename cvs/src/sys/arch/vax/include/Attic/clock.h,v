head	1.11;
access;
symbols
	OPENBSD_5_9:1.10.0.4
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.14
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.12
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.8
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.6
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.8.0.12
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.10
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.8
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.4
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.6.0.10
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.8
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.5.0.18
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.16
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.5
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	UBC_SYNC_B:1.5
	UBC:1.4.0.10
	UBC_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SMP:1.3.0.12
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.10;
commitid	OSDG2O3Cgeifnf1W;

1.10
date	2015.02.07.00.09.09;	author miod;	state Exp;
branches;
next	1.9;
commitid	Qe3vArVvKm8Wjnss;

1.9
date	2011.09.15.00.48.24;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2008.08.18.23.19.24;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2008.08.15.22.41.46;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.27.16.55.41;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.01.26.48;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.26.03.08.40;	author bjc;	state Exp;
branches
	1.4.10.1;
next	1.3;

1.3
date	97.09.10.11.47.04;	author maja;	state Exp;
branches
	1.3.12.1;
next	1.2;

1.2
date	97.05.29.00.04.36;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	97.01.15.23.24.37;	author maja;	state Exp;
branches;
next	;

1.3.12.1
date	2001.05.14.21.37.58;	author niklas;	state Exp;
branches;
next	1.3.12.2;

1.3.12.2
date	2002.03.28.11.26.46;	author niklas;	state Exp;
branches;
next	;

1.4.10.1
date	2002.06.11.03.39.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.11
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: clock.h,v 1.10 2015/02/07 00:09:09 miod Exp $ */
/*	$NetBSD: clock.h,v 1.4 1999/09/06 19:52:53 ragge Exp $ */
/*
 * Copyright (c) 1996 Ludd, University of Lule}, Sweden.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed at Ludd, University of 
 *	Lule}, Sweden and its contributors.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Time constants. These are unlikely to change.
 */
#define IS_LEAPYEAR(y) (((y % 4) == 0) && (y % 100))

#define SEC_PER_MIN	(60)
#define SEC_PER_HOUR	(SEC_PER_MIN * 60)
#define SEC_PER_DAY	(SEC_PER_HOUR * 24)
#define DAYSPERYEAR(y)	(IS_LEAPYEAR(y) ? 366 : 365)
#define SECPERYEAR(y)	(DAYSPERYEAR(y) * SEC_PER_DAY)

#define TODRBASE	(1 << 28) /* Rumours say it comes from VMS */

#define	SEC_OFF		0
#define	MIN_OFF		2
#define	HR_OFF		4
#define	WDAY_OFF	6
#define	DAY_OFF		7
#define	MON_OFF		8
#define	YR_OFF		9
#define	CSRA_OFF	10
#define	CSRB_OFF	11
#define	CSRD_OFF	13

#define	CSRA_UIP	0200
#define	CSRB_SET	0200
#define	CSRB_24		0002
#define	CSRB_DM		0004
#define	CSRD_VRT	0200

/* ICCS bits */

#define	ICCS_ERR	0x80000000	/* lost tick */
#define	ICCS_OFLOW	0x00000080	/* icr overflow */
#define	ICCS_INTENA	0x00000040	/* interrupt enable */
#define	ICCS_INCR	0x00000020	/* increment (if not running) */
#define	ICCS_RESET	0x00000010	/* reset to nicr */
#define	ICCS_RUN	0x00000001	/* enable */

/* Var's used when dealing with clock chip */
extern	volatile short *clk_page;
extern	int clk_adrshift, clk_tweak;

/* Prototypes */
void	icr_hardclock(struct clockframe *);
int	generic_clkread(struct timespec *, time_t);
void	generic_clkwrite(void);
int	chip_clkread(struct timespec *, time_t);
void	chip_clkwrite(void);

int	yeartonum(int);
int	numtoyear(int);
@


1.10
log
@Provide symbolic defines for the ICCS register magic bits, and use them
rather than hardcoded values.
@
text
@d1 1
a1 1
/*	$OpenBSD: clock.h,v 1.9 2011/09/15 00:48:24 miod Exp $ */
@


1.9
log
@Switch vax to timecounters. There are three different clock sources:
- ICR/NICR on most systems (1MHz counter resolution).
- diagnostic timer on KA46/KA48 (1kHz counter resolution, counter is actually
  running at around 1024 kHz but is not guaranteed to be monotonic at this
  rate).
- 100Hz clock on VXT (nothing but the 100Hz clock interrupt).

Tested on KA49 (ICR style), KA46, KA48 (diagtmr style), VXT2000+ (VXT
{empty,hopeless}ness'r'us style).
@
text
@d1 1
a1 1
/*	$OpenBSD: clock.h,v 1.8 2008/08/18 23:19:24 miod Exp $ */
d63 9
@


1.8
log
@Add support for the ``Firefox'' VAXstation 3520/3540/3820/3840 workstations,
currently limited to serial console and a single processor working.

All ``on-board'' devices, including the Q-bus adapter, but except for
the frame buffer, are supported. The machine will boot over the network
or from SCSI devices.

Lots of thanks to Al Kossow for www.bitsavers.org, on which I found the
technical documentation allowing me to complete this port (which was
lacking at the time I got that machine...).
@
text
@d1 1
a1 1
/*	$OpenBSD: clock.h,v 1.7 2008/08/15 22:41:46 miod Exp $ */
a44 4
#define CLKREAD_OK	0
#define CLKREAD_BAD	-1
#define CLKREAD_WARN	-2

d69 2
a70 1
int	generic_clkread(time_t);
d72 1
a72 1
int	chip_clkread(time_t);
@


1.7
log
@Move the vxt-specific clock functions frow clock.c to the cpu-specific support
file, fewer #ifdef this way.
@
text
@d1 1
a1 1
/*	$OpenBSD: clock.h,v 1.6 2006/08/27 16:55:41 miod Exp $ */
d77 3
@


1.6
log
@Work-in-progress VXT2000 support (commented out in GENERIC so far). Glass
console works on color model, serial console works, ethernet attaches but
does not work correctly yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: clock.h,v 1.5 2002/03/14 01:26:48 millert Exp $ */
a76 2
int	missing_clkread(time_t);
void	missing_clkwrite(void);
@


1.5
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: clock.h,v 1.4 2000/04/26 03:08:40 bjc Exp $ */
d77 2
@


1.4
log
@vax resurrection, part 1: sync with early-april netbsd

many changes here, notable:  uvm, ansi.h, more (and cleaner) vsbus support
@
text
@d1 1
a1 1
/*	$OpenBSD: clock.h,v 1.3 1997/09/10 11:47:04 maja Exp $ */
d73 4
a76 4
int	generic_clkread __P((time_t));
void	generic_clkwrite __P((void));
int	chip_clkread __P((time_t));
void	chip_clkwrite __P((void));
@


1.4.10.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: clock.h,v 1.4 2000/04/26 03:08:40 bjc Exp $ */
d73 4
a76 4
int	generic_clkread(time_t);
void	generic_clkwrite(void);
int	chip_clkread(time_t);
void	chip_clkwrite(void);
@


1.3
log
@Sync with NetBSD 970516. -moj
@
text
@d1 2
a2 2
/*	$OpenBSD: clock.h,v 1.2 1997/05/29 00:04:36 niklas Exp $ */
/*	$NetBSD: clock.h,v 1.2 1997/05/04 19:13:33 ragge Exp $ */
d49 1
a49 1
#define TODRBASE	(1 << 28) /* Rumours says it comes from VMS */
d68 4
a72 2
void	generic_clock __P((void));
void	no_nicr_clock __P((void));
@


1.3.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 2
a2 2
/*	$OpenBSD: clock.h,v 1.4 2000/04/26 03:08:40 bjc Exp $ */
/*	$NetBSD: clock.h,v 1.4 1999/09/06 19:52:53 ragge Exp $ */
d49 1
a49 1
#define TODRBASE	(1 << 28) /* Rumours say it comes from VMS */
a67 4
/* Var's used when dealing with clock chip */
extern	volatile short *clk_page;
extern	int clk_adrshift, clk_tweak;

d69 2
@


1.3.12.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d73 4
a76 4
int	generic_clkread(time_t);
void	generic_clkwrite(void);
int	chip_clkread(time_t);
void	chip_clkwrite(void);
@


1.2
log
@RCS tagging
@
text
@d1 2
a2 2
/*	$OpenBSD: clock.h,v 1.1 1996/07/20 17:35:42 ragge Exp $ */
/*	$NetBSD: clock.h,v 1.1 1996/07/20 17:35:42 ragge Exp $ */
a33 13

/*
 * Conversion structure.
 */
struct chiptime {
	long	sec;
	long	min;
	long	hour;
	long	day;
	long	mon;
	long	year;
};

d51 17
a68 2
long	chiptotime __P((struct chiptime *));
void	timetochip __P((struct chiptime *));
d73 2
@


1.1
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
@
