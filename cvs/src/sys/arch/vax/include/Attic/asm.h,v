head	1.14;
access;
symbols
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.12.0.12
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.4
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.8
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.6
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.10.0.12
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.10
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.8
	OPENBSD_5_0:1.10.0.6
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.4
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.2
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.9.0.6
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.8
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.4
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.2
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.8.0.20
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.18
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	SMP_SYNC_A:1.8
	SMP_SYNC_B:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	UBC_SYNC_A:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.10
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.8
	OPENBSD_3_1_BASE:1.6
	UBC_SYNC_B:1.6
	UBC:1.6.0.6
	UBC_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	SMP:1.4.0.12
	SMP_BASE:1.4
	kame_19991208:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.13;
commitid	OSDG2O3Cgeifnf1W;

1.13
date	2015.08.30.10.19.49;	author guenther;	state Exp;
branches;
next	1.12;
commitid	8jcHMpj3s6RFn6Dt;

1.12
date	2013.07.05.21.10.50;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2013.03.28.17.41.04;	author martynas;	state Exp;
branches;
next	1.10;

1.10
date	2010.05.29.14.08.21;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2008.05.21.20.33.39;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.27.57;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.05.18.04.36;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.09.01.01.25;	author hugh;	state Exp;
branches
	1.6.6.1;
next	1.5;

1.5
date	2000.04.26.03.08.40;	author bjc;	state Exp;
branches;
next	1.4;

1.4
date	97.05.29.00.04.35;	author niklas;	state Exp;
branches
	1.4.12.1;
next	1.3;

1.3
date	97.01.15.23.24.36;	author maja;	state Exp;
branches;
next	1.2;

1.2
date	96.01.08.18.55.02;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.06;	author deraadt;	state Exp;
branches;
next	;

1.4.12.1
date	2001.05.14.21.37.57;	author niklas;	state Exp;
branches;
next	1.4.12.2;

1.4.12.2
date	2003.03.27.23.52.19;	author niklas;	state Exp;
branches;
next	1.4.12.3;

1.4.12.3
date	2003.06.07.11.14.47;	author ho;	state Exp;
branches;
next	;

1.6.6.1
date	2003.05.19.21.46.09;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: asm.h,v 1.13 2015/08/30 10:19:49 guenther Exp $ */
/*	$NetBSD: asm.h,v 1.9 1999/01/15 13:31:28 bouyer Exp $ */
/*
 * Copyright (c) 1982, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)DEFS.h	8.1 (Berkeley) 6/4/93
 */

#ifndef _MACHINE_ASM_H_
#define _MACHINE_ASM_H_

#define R0	0x001
#define R1	0x002
#define R2	0x004
#define R3	0x008
#define R4	0x010
#define R5	0x020
#define R6	0x040
#define R7 	0x080
#define R8	0x100
#define R9	0x200
#define R10	0x400
#define R11	0x800

#ifdef __ELF__
# define _C_LABEL(x)	x
#else
# ifdef __STDC__
#  define _C_LABEL(x)	_ ## x
# else
#  define _C_LABEL(x)	_/**/x
# endif
#endif

#define	_ASM_LABEL(x)	x

#ifdef __STDC__
# define __CONCAT(x,y)	x ## y
# define __STRING(x)	#x
#else
# define __CONCAT(x,y)	x/**/y
# define __STRING(x)	"x"
#endif

/* let kernels and others override entrypoint alignment */
#ifndef _ALIGN_TEXT
# define _ALIGN_TEXT .align 2
#endif

#define _ALTENTRY(x) \
	.globl x; .type x,@@function; x:
#define	_ENTRY(x, regs) \
	.text; _ALIGN_TEXT; _ALTENTRY(x) .word regs

#if defined(PROF) || defined(GPROF)
# ifdef __ELF__
#  define _PROF_PROLOGUE	\
	.data; 1:; .long 0; .text; moval 1b,r0; jsb _ASM_LABEL(__mcount)
# else 
#  define _PROF_PROLOGUE	\
	.data; 1:; .long 0; .text; moval 1b,r0; jsb _ASM_LABEL(mcount)
# endif
#else
# define _PROF_PROLOGUE
#endif

#define ENTRY(x, regs)			_ENTRY(_C_LABEL(x), regs); _PROF_PROLOGUE
#define ENTRY_NOPROFILE(x, regs)	_ENTRY(_C_LABEL(x), regs)
#define NENTRY(x, regs)			_ENTRY(_C_LABEL(x), regs)
#define ASENTRY(x, regs)		_ENTRY(_ASM_LABEL(x), regs); _PROF_PROLOGUE
#define ASENTRY_NOPROFILE(x, regs)	_ENTRY(_ASM_LABEL(x), regs)

#define ALTENTRY(x)		_ALTENTRY(_C_LABEL(x))
#define END(y)			.size y, . - y
#define RCSID(x)		.text; .asciz x

#ifdef	__ELF__
#define	STRONG_ALIAS(alias,sym)						\
	.global alias;							\
	alias = sym
#define	WEAK_ALIAS(alias,sym)						\
	.weak alias;							\
	alias = sym
#else
#define	STRONG_ALIAS(alias,sym)						\
	.global _##alias;						\
	_##alias = _##sym
#define	WEAK_ALIAS(alias,sym)						\
	.weak _##alias;							\
	_##alias = _##sym
#endif

#ifdef __STDC__
#define	WARN_REFERENCES(sym,msg)					\
	.stabs msg ## ,30,0,0,0 ;					\
	.stabs __STRING(_C_LABEL(sym)) ## ,1,0,0,0
#else
#define	WARN_REFERENCES(sym,msg)					\
	.stabs msg,30,0,0,0 ;						\
	.stabs __STRING(_C_LABEL(sym)),1,0,0,0
#endif /* __STDC__ */

#endif /* _MACHINE_ASM_H_ */
@


1.13
log
@Provide remaining arch with END() macro for setting calculated size on
symbols in ASM

ok deraadt@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.12 2013/07/05 21:10:50 miod Exp $ */
@


1.12
log
@VAX ELF userland bits. Consists mostly of register prefix additions.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.11 2013/03/28 17:41:04 martynas Exp $ */
d99 1
@


1.11
log
@Add STRONG_ALIAS macros to be used from assembly code in libc and
libm.  While at it, remove now unused workarounds for lint.
Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.10 2010/05/29 14:08:21 deraadt Exp $ */
d72 1
a72 5
# ifdef __ELF__
#  define _ALIGN_TEXT .align 4
# else
#  define _ALIGN_TEXT .align 2
# endif
@


1.10
log
@merge subr.s into locore.S, which requires a fairly complicated dance
mixing and matching the various styles of *ENTRY* macros
prescribed by miod, ok ragge, tested by jasper
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.9 2008/05/21 20:33:39 miod Exp $ */
d106 3
d113 3
a115 1
#ifdef	__STDC__
a118 5
#else
#define	WEAK_ALIAS(alias,sym)						\
	.weak _/**/alias;						\
	_/**/alias = _/**/sym
#endif
@


1.9
log
@Make _PROF_PROLOGUE visible if PROF is defined; will be needed by libc
shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.8 2003/06/02 23:27:57 millert Exp $ */
d96 5
a100 3
#define ENTRY(x, regs)		_ENTRY(_C_LABEL(x), regs); _PROF_PROLOGUE
#define NENTRY(x, regs)		_ENTRY(_C_LABEL(x), regs)
#define ASENTRY(x, regs)	_ENTRY(_ASM_LABEL(x), regs); _PROF_PROLOGUE
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.7 2002/11/05 18:04:36 miod Exp $ */
d79 2
d82 1
a82 1
	.text; _ALIGN_TEXT; .globl x; .type x,@@function; x: .word regs
d84 1
a84 1
#ifdef GPROF
d100 1
a100 1
#define ALTENTRY(x)		.globl _C_LABEL(x); _C_LABEL(x):
@


1.7
log
@Add a WEAK_ALIAS macro, to be used by libc/libc_r shortly.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.6 2001/04/09 01:01:25 hugh Exp $ */
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@A much tidier layout, from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.5 2000/04/26 03:08:40 bjc Exp $ */
d105 1
a105 1
#ifdef __ELF__
d109 10
@


1.6.6.1
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d105 1
a105 1
#ifdef	__ELF__
a108 10
#else
#ifdef	__STDC__
#define	WEAK_ALIAS(alias,sym)						\
	.weak _##alias;							\
	_##alias = _##sym
#else
#define	WEAK_ALIAS(alias,sym)						\
	.weak _/**/alias;						\
	_/**/alias = _/**/sym
#endif
@


1.5
log
@vax resurrection, part 1: sync with early-april netbsd

many changes here, notable:  uvm, ansi.h, more (and cleaner) vsbus support
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.4 1997/05/29 00:04:35 niklas Exp $ */
d48 17
a64 5
#define	R7 	0x080
#define	R8	0x100
#define	R9	0x200
#define	R10	0x400
#define	R11	0x800
d67 2
a68 7
#ifdef GPROF
#define	ENTRY(x, regs) \
	.globl _ ## x; .type _ ## x,@@function ; .align 2; _ ## x: .word regs; \
	.data; 1:; .long 0; .text; moval 1b,r0; jsb mcount
#define	ASENTRY(x, regs) \
	.globl x; .type x,@@function; .align 2; x: .word regs; \
	.data; 1:; .long 0; .text; moval 1b,r0; jsb mcount
d70 2
a71 5
#define	ENTRY(x, regs) \
	.globl _ ## x; .type _ ## x,@@function; \
	.align 2; _ ## x : .word regs
#define	ASENTRY(x, regs) \
	.globl x; .type x,@@function; .align 2; x: .word regs
d73 5
a77 1
#define ALTENTRY(x) .globl _ ## x; _ ## x:
d79 7
d87 7
a93 6
#define ENTRY(x, regs) \
	.globl _/**/x; .type _/**/x,@@function; .align 2; _/**/x: .word regs; \
	.data; 1:; .long 0; .text; moval 1b,r0; jsb mcount
#define ASENTRY(x, regs) \
	.globl x; .type x,@@function; .align 2; x: .word regs; \
	.data; 1:; .long 0; .text; moval 1b,r0; jsb mcount
d95 1
a95 4
#define ENTRY(x, regs) \
	.globl _/**/x; .type _/**/x,@@function; .align 2; _/**/x: .word regs
#define ASENTRY(x, regs) \
	.globl x; .type x,@@function; .align 2; x: .word regs
d97 12
a108 1
#define ALTENTRY(x) .globl _/**/x; _/**/x:
a111 1
#define	__STRING(x)			#x
d114 1
a114 1
	.stabs __STRING(_ ## sym) ## ,1,0,0,0
a115 1
#define	__STRING(x)			"x"
d118 1
a118 1
	.stabs __STRING(_/**/sym),1,0,0,0
d121 1
a121 1
#endif
@


1.4
log
@RCS tagging
@
text
@d1 2
a2 2
/*	$OpenBSD: asm.h,v 1.5 1996/11/30 02:49:06 jtc Exp $ */
/*	$NetBSD: asm.h,v 1.5 1996/11/30 02:49:06 jtc Exp $ */
d57 1
a57 1
	.globl _ ## x ## ; .align 2; _ ## x ## : .word regs; \
d60 1
a60 1
	.globl x; .align 2; x ## : .word regs; \
d64 2
a65 1
	.globl _ ## x; .align 2; _ ## x ## : .word regs
d67 1
a67 1
	.globl x; .align 2; x ## : .word regs
d69 1
d73 1
a73 1
	.globl _/**/x; .align 2; _/**/x: .word regs; \
d76 1
a76 1
	.globl x; .align 2; x: .word regs; \
d80 1
a80 1
	.globl _/**/x; .align 2; _/**/x: .word regs
d82 1
a82 1
	.globl x; .align 2; x: .word regs
d84 1
d86 12
@


1.4.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 2
a2 2
/*	$OpenBSD: asm.h,v 1.6 2001/04/09 01:01:25 hugh Exp $ */
/*	$NetBSD: asm.h,v 1.9 1999/01/15 13:31:28 bouyer Exp $ */
d48 5
a52 17
#define R7 	0x080
#define R8	0x100
#define R9	0x200
#define R10	0x400
#define R11	0x800

#ifdef __ELF__
# define _C_LABEL(x)	x
#else
# ifdef __STDC__
#  define _C_LABEL(x)	_ ## x
# else
#  define _C_LABEL(x)	_/**/x
# endif
#endif

#define	_ASM_LABEL(x)	x
d55 7
a61 2
# define __CONCAT(x,y)	x ## y
# define __STRING(x)	#x
d63 4
a66 2
# define __CONCAT(x,y)	x/**/y
# define __STRING(x)	"x"
a67 5

/* let kernels and others override entrypoint alignment */
#ifndef _ALIGN_TEXT
# ifdef __ELF__
#  define _ALIGN_TEXT .align 4
a68 7
#  define _ALIGN_TEXT .align 2
# endif
#endif

#define	_ENTRY(x, regs) \
	.text; _ALIGN_TEXT; .globl x; .type x,@@function; x: .word regs

d70 6
a75 7
# ifdef __ELF__
#  define _PROF_PROLOGUE	\
	.data; 1:; .long 0; .text; moval 1b,r0; jsb _ASM_LABEL(__mcount)
# else 
#  define _PROF_PROLOGUE	\
	.data; 1:; .long 0; .text; moval 1b,r0; jsb _ASM_LABEL(mcount)
# endif
d77 5
a81 1
# define _PROF_PROLOGUE
a83 11
#define ENTRY(x, regs)		_ENTRY(_C_LABEL(x), regs); _PROF_PROLOGUE
#define NENTRY(x, regs)		_ENTRY(_C_LABEL(x), regs)
#define ASENTRY(x, regs)	_ENTRY(_ASM_LABEL(x), regs); _PROF_PROLOGUE

#define ALTENTRY(x)		.globl _C_LABEL(x); _C_LABEL(x):
#define RCSID(x)		.text; .asciz x

#ifdef __ELF__
#define	WEAK_ALIAS(alias,sym)						\
	.weak alias;							\
	alias = sym
a84 12

#ifdef __STDC__
#define	WARN_REFERENCES(sym,msg)					\
	.stabs msg ## ,30,0,0,0 ;					\
	.stabs __STRING(_C_LABEL(sym)) ## ,1,0,0,0
#else
#define	WARN_REFERENCES(sym,msg)					\
	.stabs msg,30,0,0,0 ;						\
	.stabs __STRING(_C_LABEL(sym)),1,0,0,0
#endif /* __STDC__ */

#endif /* _MACHINE_ASM_H_ */
@


1.4.12.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d105 1
a105 1
#ifdef	__ELF__
a108 10
#else
#ifdef	__STDC__
#define	WEAK_ALIAS(alias,sym)						\
	.weak _##alias;							\
	_##alias = _##sym
#else
#define	WEAK_ALIAS(alias,sym)						\
	.weak _/**/alias;						\
	_/**/alias = _/**/sym
#endif
@


1.4.12.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: asm.h,v 1.4.12.2 2003/03/27 23:52:19 niklas Exp $ */
d15 5
a19 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.3
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
@


1.2
log
@from ragge; Changed to work correctly with both K&R and ANSI cpp.
@
text
@d1 1
a1 1
/*	$NetBSD: asm.h,v 1.4 1996/01/06 18:37:35 ragge Exp $ */
d54 1
a54 1
#ifdef PROF
d68 1
a68 1
#ifdef PROF
@


1.1
log
@Initial revision
@
text
@d1 4
a4 8
/*	$NetBSD: asm.h,v 1.3 1995/05/03 19:53:40 ragge Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
d34 1
a34 2
 *	@@(#)asm.h	5.5 (Berkeley) 5/7/91
 *      @@(#)DEFS.h      5.3 (Berkeley) 6/1/90
d40 12
a51 12
#define R0      0x001
#define R1      0x002
#define R2      0x004
#define R3      0x008
#define R4      0x010
#define R5      0x020
#define R6      0x040
#define R7      0x080
#define R8      0x100
#define R9      0x200
#define R10     0x400
#define R11     0x800
d54 7
a60 2
# define _FUNC(x)       _ ## x ## :
# define _GLOB(x)       .globl _ ## x
d62 4
a65 2
# define _FUNC(x)       _/**/x:
# define _GLOB(x)        .globl _/**/x
d67 1
a67 1

d69 12
a80 5
#define ENTRY(x,regs) \
        _GLOB(x);.align 2;_FUNC(x);.word regs;jsb mcount;
#else   
#define ENTRY(x,regs) \
        _GLOB(x);.align 2;_FUNC(x);.word regs;
d83 1
a83 3
#define	ASMSTR		.asciz

#endif /* !_MACHINE_ASM_H_ */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
