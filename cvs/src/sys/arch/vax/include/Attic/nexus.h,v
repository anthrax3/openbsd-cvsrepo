head	1.18;
access;
symbols
	OPENBSD_5_9:1.17.0.18
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.20
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.12
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.16
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.14
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.10
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.8
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.6
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.14.0.10
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.8
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.4
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.6
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.2
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.13.0.10
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.8
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.6
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.9
	OPENBSD_3_3:1.9.0.10
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.8
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.6
	OPENBSD_3_1_BASE:1.9
	UBC_SYNC_B:1.9
	UBC:1.9.0.4
	UBC_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.6
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	SMP:1.7.0.12
	SMP_BASE:1.7
	kame_19991208:1.7
	OPENBSD_2_6:1.7.0.10
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.8
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.6
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.17;
commitid	OSDG2O3Cgeifnf1W;

1.17
date	2011.07.06.20.44.11;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2011.07.06.18.32.59;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2011.03.23.16.54.37;	author pirofti;	state Exp;
branches;
next	1.14;

1.14
date	2008.08.18.23.19.24;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2006.08.27.16.55.41;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2006.07.20.19.15.34;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2006.07.20.19.08.14;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.23.27.57;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.08.25.13.33.36;	author hugh;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.26.03.08.42;	author bjc;	state Exp;
branches;
next	1.7;

1.7
date	97.05.29.00.04.45;	author niklas;	state Exp;
branches
	1.7.12.1;
next	1.6;

1.6
date	97.01.15.23.24.42;	author maja;	state Exp;
branches;
next	1.5;

1.5
date	96.05.03.09.59.50;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.05.03.09.09.41;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	95.12.14.13.59.56;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.05.27.21;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.07;	author deraadt;	state Exp;
branches;
next	;

1.7.12.1
date	2001.05.14.21.38.02;	author niklas;	state Exp;
branches;
next	1.7.12.2;

1.7.12.2
date	2001.10.31.03.08.01;	author nate;	state Exp;
branches;
next	1.7.12.3;

1.7.12.3
date	2003.06.07.11.14.47;	author ho;	state Exp;
branches;
next	;


desc
@@


1.18
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: nexus.h,v 1.17 2011/07/06 20:44:11 miod Exp $	*/
/*	$NetBSD: nexus.h,v 1.17 2000/06/04 17:58:19 ragge Exp $	*/

/*-
 * Copyright (c) 1982, 1986 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)nexus.h	7.3 (Berkeley) 5/9/91
 */

#ifndef _MACHINE_NEXUS_H_
#define _MACHINE_NEXUS_H_

#include <machine/bus.h>

struct	mainbus_attach_args {
	int	maa_bustype;
};

/*
 * Values for bus (or pseudo-bus) types
 */
#define	VAX_VSBUS	0	/* Virtual vaxstation bus */
#define	VAX_IBUS	1	/* Internal Microvax bus */
#define	VAX_VXTBUS	2	/* Pseudo VXT2000 bus */
#define	VAX_MBUS	3	/* M-bus (KA60) */

#define	VAX_LEDS	4	/* pseudo value to attach led0 */

#ifdef _KERNEL

struct bp_conf {
	const char *type;
};

#endif

/* Memory recover defines */
#define	MCHK_PANIC	-1
#define	MCHK_RECOVERED	0

#endif /* _MACHINE_NEXUS_H_ */
@


1.17
log
@Renumber root busses symbolic values, and drop more fields from struct bp_conf,
soon to become struct generic_attach_args.
@
text
@d1 1
a1 1
/*	$OpenBSD: nexus.h,v 1.16 2011/07/06 18:32:59 miod Exp $	*/
@


1.16
log
@Remove support for non-microVAX, non-VAXstation, non-VXT hardware in the
VAX port. This means, 11/7xx, VAX6000 and VAX8x00 systems, as well as SBI,
CMI, BI, XMI and MASSBUS drivers.
Most of these files were not being compiled or kept in compilable state over
the years anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: nexus.h,v 1.15 2011/03/23 16:54:37 pirofti Exp $	*/
d47 4
a50 4
#define	VAX_VSBUS	7	/* Virtual vaxstation bus */
#define	VAX_IBUS	8	/* Internal Microvax bus */
#define	VAX_VXTBUS	10	/* Pseudo VXT2000 bus */
#define	VAX_MBUS	11	/* M-bus (KA60) */
d52 1
a52 1
#define	VAX_LEDS	0x42	/* pseudo value to attach led0 */
d57 1
a57 2
	char *type;
	int bp_addr;
@


1.15
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: nexus.h,v 1.14 2008/08/18 23:19:24 miod Exp $	*/
a46 6
#define	VAX_SBIBUS	1	/* SBI parent (780) */
#define	VAX_CMIBUS	2	/* CMI backplane (750) */
#define	VAX_UNIBUS	3	/* Direct backplane (730) */
#define	VAX_ABUS	4	/* SBI placeholder (8600) */
#define	VAX_BIBUS	5	/* BI bus (8200) */
#define	VAX_NBIBUS	6	/* NBI backplane (8800) */
a48 1
#define	VAX_XMIBUS	9	/* XMI master bus (6000) */
a53 34
/*
 * Information about nexus's.
 *
 * Each machine has an address of backplane slots (nexi).
 * Each nexus is some type of adapter, whose code is the low
 * byte of the first word of the adapter address space.
 * At boot time the system looks through the array of available
 * slots and finds the interconnects for the machine.
 */
#define IO_CMI750       2
#define MAXNMCR         1

#define	NNEXSBI		16
#if VAX8600
#define	NNEX8600	NNEXSBI
#define	NEXA8600	((struct nexus *)(0x20000000))
#define	NEXB8600	((struct nexus *)(0x22000000))
#endif
#if VAX780
#define	NNEX780	NNEXSBI
#define	NEX780	((struct nexus *)0x20000000)
#endif
#if VAX730
#define	NNEX730	NNEXSBI
#define	NEX730	((struct nexus *)0xf20000)
#endif
#define	NEXSIZE	0x2000

#if VAX8600
#define	MAXNNEXUS (2 * NNEXSBI)
#else 
#define	MAXNNEXUS NNEXSBI
#endif

a55 23
struct	nexus {
	union nexcsr {
		long	nex_csr;
		u_char	nex_type;
	} nexcsr;
	long	nex_pad[NEXSIZE / sizeof (long) - 1];
};

struct sbi_attach_args {
	int sa_nexnum;		/* This nexus TR number */
	int sa_type;		/* This nexus type */
	bus_space_tag_t sa_iot;
	bus_space_handle_t sa_ioh;
};

/* Memory device struct. This should be somewhere else */
struct mem_softc {
	struct	device sc_dev;
	caddr_t	sc_memaddr;
	int	sc_memtype;
	int	sc_memnr;
};

a57 2
	int num;
	int partyp;
a61 64

/*
 * Bits in high word of nexus's.
 */
#define	SBI_PARFLT	(1<<31)		/* sbi parity fault */
#define	SBI_WSQFLT	(1<<30)		/* write sequence fault */
#define	SBI_URDFLT	(1<<29)		/* unexpected read data fault */
#define	SBI_ISQFLT	(1<<28)		/* interlock sequence fault */
#define	SBI_MXTFLT	(1<<27)		/* multiple transmitter fault */
#define	SBI_XMTFLT	(1<<26)		/* transmit fault */

#define	NEX_CFGFLT	(0xfc000000)

#ifndef _LOCORE
#if VAX780 || VAX8600
#define	NEXFLT_BITS \
"\20\40PARFLT\37WSQFLT\36URDFLT\35ISQFLT\34MXTFLT\33XMTFLT"
#endif
#endif

#define	NEX_APD		(1<<23)		/* adaptor power down */
#define	NEX_APU		(1<<22)		/* adaptor power up */

#define	MBA_OT		(1<<21)		/* overtemperature */

#define	UBA_UBINIT	(1<<18)		/* unibus init */
#define	UBA_UBPDN	(1<<17)		/* unibus power down */
#define	UBA_UBIC	(1<<16)		/* unibus initialization complete */

/*
 * Types for nex_type.
 */
#define	NEX_ANY		0		/* pseudo for handling 11/750 */
#define	NEX_MEM4	0x08		/* 4K chips, non-interleaved mem */
#define	NEX_MEM4I	0x09		/* 4K chips, interleaved mem */
#define	NEX_MEM16	0x10		/* 16K chips, non-interleaved mem */
#define	NEX_MEM16I	0x11		/* 16K chips, interleaved mem */
#define	NEX_MBA		0x20		/* Massbus adaptor */
#define	NEX_UBA0	0x28		/* Unibus adaptor */
#define	NEX_UBA1	0x29		/* 4 flavours for 4 addr spaces */
#define	NEX_UBA2	0x2a
#define	NEX_UBA3	0x2b
#define	NEX_DR32	0x30		/* DR32 user i'face to SBI */
#define	NEX_CI		0x38		/* CI adaptor */
#define	NEX_MPM0	0x40		/* Multi-port mem */
#define	NEX_MPM1	0x41		/* Who knows why 4 different ones ? */
#define	NEX_MPM2	0x42
#define	NEX_MPM3	0x43
#define	NEX_MEM64L	0x68		/* 64K chips, non-interleaved, lower */
#define	NEX_MEM64LI	0x69		/* 64K chips, ext-interleaved, lower */
#define	NEX_MEM64U	0x6a		/* 64K chips, non-interleaved, upper */
#define	NEX_MEM64UI	0x6b		/* 64K chips, ext-interleaved, upper */
#define	NEX_MEM64I	0x6c		/* 64K chips, interleaved */
#define	NEX_MEM256L	0x70		/* 256K chips, non-interleaved, lower */
#define	NEX_MEM256LI	0x71		/* 256K chips, ext-interleaved, lower */
#define	NEX_MEM256U	0x72		/* 256K chips, non-interleaved, upper */
#define	NEX_MEM256UI	0x73		/* 256K chips, ext-interleaved, upper */
#define	NEX_MEM256I	0x74		/* 256K chips, interleaved */

/* Memory classes */
#define	M_NONE		0
#define	M780C		1
#define	M780EL		2
#define	M780EU		3
@


1.14
log
@Add support for the ``Firefox'' VAXstation 3520/3540/3820/3840 workstations,
currently limited to serial console and a single processor working.

All ``on-board'' devices, including the Q-bus adapter, but except for
the frame buffer, are supported. The machine will boot over the network
or from SCSI devices.

Lots of thanks to Al Kossow for www.bitsavers.org, on which I found the
technical documentation allowing me to complete this port (which was
lacking at the time I got that machine...).
@
text
@d1 1
a1 1
/*	$OpenBSD: nexus.h,v 1.13 2006/08/27 16:55:41 miod Exp $	*/
d35 2
a36 2
#ifndef _VAX_NEXUS_H_
#define _VAX_NEXUS_H_
d197 1
a197 1
#endif /* _VAX_NEXUS_H_ */
@


1.13
log
@Work-in-progress VXT2000 support (commented out in GENERIC so far). Glass
console works on color model, serial console works, ethernet attaches but
does not work correctly yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: nexus.h,v 1.12 2006/07/20 19:15:34 miod Exp $	*/
d57 1
@


1.12
log
@Here cometh the blinkenlichten on VAXens.
Register information from NetBSD (except for KA53), logic from OpenBSD/sparc.
@
text
@d1 1
a1 1
/*	$OpenBSD: nexus.h,v 1.11 2006/07/20 19:08:14 miod Exp $	*/
d56 1
@


1.11
log
@Kill an autoconf abuse introduced with Cheetah support, and pass real
attachment information to mainbus children. Makes it much cleaner to
attach both ibus and vsbus on those machines.
@
text
@d1 1
a1 1
/*	$OpenBSD: nexus.h,v 1.10 2003/06/02 23:27:57 millert Exp $	*/
d56 2
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: nexus.h,v 1.9 2001/08/25 13:33:36 hugh Exp $	*/
d40 4
d45 1
a45 1
 * Different definitions for nicer autoconf probing.
d47 10
a56 11
enum bustypes {
	VAX_SBIBUS,		/* SBI parent (780) */
	VAX_CMIBUS,		/* CMI backplane (750) */
	VAX_UNIBUS,		/* Direct backplane (730) */
	VAX_ABUS,		/* SBI placeholder (8600) */
	VAX_BIBUS,		/* BI bus (8200) */
	VAX_NBIBUS,		/* NBI backplane (8800) */
	VAX_VSBUS,		/* Virtual vaxstation bus */
	VAX_IBUS,		/* Internal Microvax bus */
	VAX_XMIBUS,		/* XMI master bus (6000) */
};
@


1.9
log
@Bring in some useful stuff from NetBSD. Mostly work by Matt Thomas,
and concerned with intvec counting. Also some ANSIfication.
@
text
@d1 1
a1 1
/*	$OpenBSD: nexus.h,v 1.8 2000/04/26 03:08:42 bjc Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@vax resurrection, part 1: sync with early-april netbsd

many changes here, notable:  uvm, ansi.h, more (and cleaner) vsbus support
@
text
@d1 2
a2 2
/*	$OpenBSD: nexus.h,v 1.7 1997/05/29 00:04:45 niklas Exp $	*/
/*	$NetBSD: nexus.h,v 1.15 1999/08/07 10:36:46 ragge Exp $	*/
d41 3
d103 4
a106 4
	u_int	nexnum; 	/* This nexus TR number */
	u_int	type;		/* This nexus type */
	int	nexinfo;	/* Some info sent between attach & match */
	void	*nexaddr;	/* Virtual address of this nexus */
a123 3
extern caddr_t *nex_vec;
#define nex_vec_num(ipl, nexnum) nex_vec[(ipl-14)*16+nexnum]

d139 1
a139 1
#if defined(VAX780) || defined(VAX8600)
d185 4
a188 3
#define	M780C		0
#define	M780EL		1
#define	M780EU		2
@


1.7
log
@RCS tagging
@
text
@d1 2
a2 2
/*	$OpenBSD: nexus.h,v 1.12 1996/08/20 14:19:43 ragge Exp $	*/
/*	$NetBSD: nexus.h,v 1.12 1996/08/20 14:19:43 ragge Exp $	*/
d44 11
a54 8
#define VAX_SBIBUS      1       /* SBI parent; 780/790 */
#define VAX_CPUBUS      2       /* Has backplane CPU */
#define VAX_MEMBUS      4       /* Has backplane memory */ 
#define VAX_UNIBUS      8       /* Directly attached (630/650) */
#define VAX_VSBUS       16      /* VAXstation board */
#define VAX_BIBUS       32      /* BI bus expansions: 8200/8800 */ 
#define VAX_CMIBUS	64	/* CMI backplane (750) */

d89 1
a89 3
#ifndef _LOCORE

#include <sys/types.h>
a191 4

#ifndef	_LOCORE
struct	nexus *nexus;
#endif
@


1.7.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 2
a2 2
/*	$OpenBSD: nexus.h,v 1.8 2000/04/26 03:08:42 bjc Exp $	*/
/*	$NetBSD: nexus.h,v 1.15 1999/08/07 10:36:46 ragge Exp $	*/
d44 8
a51 11
enum bustypes {
	VAX_SBIBUS,		/* SBI parent (780) */
	VAX_CMIBUS,		/* CMI backplane (750) */
	VAX_UNIBUS,		/* Direct backplane (730) */
	VAX_ABUS,		/* SBI placeholder (8600) */
	VAX_BIBUS,		/* BI bus (8200) */
	VAX_NBIBUS,		/* NBI backplane (8800) */
	VAX_VSBUS,		/* Virtual vaxstation bus */
	VAX_IBUS,		/* Internal Microvax bus */
	VAX_XMIBUS,		/* XMI master bus (6000) */
};
d86 3
a88 1
#ifdef _KERNEL
d191 4
@


1.7.12.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 2
a2 2
/*	$OpenBSD: nexus.h,v 1.7.12.1 2001/05/14 21:38:02 niklas Exp $	*/
/*	$NetBSD: nexus.h,v 1.17 2000/06/04 17:58:19 ragge Exp $	*/
a40 3

#include <machine/bus.h>

d100 4
a103 4
	int sa_nexnum;		/* This nexus TR number */
	int sa_type;		/* This nexus type */
	bus_space_tag_t sa_iot;
	bus_space_handle_t sa_ioh;
d121 3
d139 1
a139 1
#if VAX780 || VAX8600
d185 3
a187 4
#define	M_NONE		0
#define	M780C		1
#define	M780EL		2
#define	M780EU		3
@


1.7.12.3
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: nexus.h,v 1.7.12.2 2001/10/31 03:08:01 nate Exp $	*/
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.6
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
@


1.5
log
@fix LOCORE->_LOCORE changes.
@
text
@d1 1
a1 1
/*	$NetBSD: nexus.h,v 1.10 1996/03/02 14:27:53 ragge Exp $	*/
d41 11
a76 4
#if VAX630
#define NNEX630 1
#define NEX630  ((struct nexus *)0x20088000)
#endif
d112 5
a116 14
struct iobus {
        int io_type;
        int io_addr;
        int io_size;
        int io_details;
};

struct nexusconnect {
        int psb_nnexus;
        struct nexus *psb_nexbase;
	int psb_ubatype;
	int psb_nubabdp;
	caddr_t *psb_umaddr;
        int *psb_nextype;
@


1.4
log
@sync w/ 0430
@
text
@d138 1
a138 1
#ifndef LOCORE
@


1.3
log
@update from netbsd
@
text
@d1 1
a1 1
/*	$NetBSD: nexus.h,v 1.6 1995/12/13 18:55:27 ragge Exp $	*/
d78 1
a78 1
#ifndef ASSEMBLER
d80 1
a80 1
#include "sys/types.h"
d97 8
d184 10
a193 1
#ifndef	ASSEMBLER
@


1.2
log
@update from netbsd (verbatim)
@
text
@d1 1
a1 1
/*	$NetBSD: nexus.h,v 1.5 1995/11/12 14:37:22 ragge Exp $	*/
d38 2
d179 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: nexus.h,v 1.4 1995/02/23 17:51:42 ragge Exp $	*/
a59 8
#if VAX750
#define	NNEX750	NNEXSBI
#ifndef ASSEMBLER
#define NEX750           ((struct nexus*)0xf20000)
#else
#define NEX750           (0xF20000)
#endif
#endif
d89 4
a92 3
	u_int	nexnum;
	u_int	type;
	void	*nexaddr;
d173 4
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
