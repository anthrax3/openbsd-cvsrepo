head	1.17;
access;
symbols
	OPENBSD_5_9:1.16.0.16
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.18
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.10
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.14
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.12
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.8
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.6
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.4
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.2
	OPENBSD_5_0:1.15.0.22
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.20
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.18
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.14
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.16
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.12
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.10
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.8
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.6
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.13.0.16
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.14
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.12
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.10
	OPENBSD_3_6_BASE:1.13
	SMP_SYNC_A:1.13
	SMP_SYNC_B:1.13
	OPENBSD_3_5:1.13.0.8
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.6
	OPENBSD_3_4_BASE:1.13
	UBC_SYNC_A:1.13
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	UBC_SYNC_B:1.13
	UBC:1.11.0.4
	UBC_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	SMP:1.5.0.12
	SMP_BASE:1.5
	kame_19991208:1.5
	OPENBSD_2_6:1.5.0.10
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.8
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.6
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.16;
commitid	OSDG2O3Cgeifnf1W;

1.16
date	2011.09.19.21.53.02;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2006.07.19.20.22.36;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.04.19.33.21;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.25.04.29.53;	author hugh;	state Exp;
branches;
next	1.12;

1.12
date	2002.01.31.11.42.52;	author hugh;	state Exp;
branches;
next	1.11;

1.11
date	2001.10.01.12.53.37;	author hugh;	state Exp;
branches
	1.11.4.1;
next	1.10;

1.10
date	2001.03.16.22.46.25;	author hugh;	state Exp;
branches;
next	1.9;

1.9
date	2001.03.12.11.45.35;	author hugh;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.25.15.48.19;	author hugh;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.30.17.06.47;	author hugh;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.26.03.08.42;	author bjc;	state Exp;
branches;
next	1.5;

1.5
date	97.09.10.11.47.10;	author maja;	state Exp;
branches
	1.5.12.1;
next	1.4;

1.4
date	97.05.29.00.04.52;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.24.43;	author maja;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.05.27.25;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.07;	author deraadt;	state Exp;
branches;
next	;

1.5.12.1
date	2001.05.14.21.38.06;	author niklas;	state Exp;
branches;
next	1.5.12.2;

1.5.12.2
date	2001.10.31.03.08.01;	author nate;	state Exp;
branches;
next	1.5.12.3;

1.5.12.3
date	2002.03.06.02.04.47;	author niklas;	state Exp;
branches;
next	1.5.12.4;

1.5.12.4
date	2003.03.27.23.52.19;	author niklas;	state Exp;
branches;
next	;

1.11.4.1
date	2002.01.31.22.55.26;	author niklas;	state Exp;
branches;
next	1.11.4.2;

1.11.4.2
date	2002.06.11.03.39.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.17
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: sid.h,v 1.16 2011/09/19 21:53:02 miod Exp $	*/
/*	$NetBSD: sid.h,v 1.12 1999/12/11 17:55:13 ragge Exp $	*/

/*
 * Copyright (c) 1994 Ludd, University of Lule}, Sweden.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *     This product includes software developed at Ludd, University of Lule}.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Chip CPU types / chip CPU Subtypes
 *
 * The type of a VAX is given by the high-order byte of the System
 * identification register (SID) and describes families or series of VAXen.
 * Board-Types/Sub-Types within series are described by the SIED register.
 */

/*
 * 700 series (1977)
 */
#define VAX_TYP_780	1	/* VAX-11/780, 785, 782 */
#define VAX_TYP_750	2	/* VAX-11/750 */
#define VAX_TYP_730	3	/* VAX-11/730, 725 */
#define VAX_TYP_790	4	/* VAX 8600, 8650 */
 
#define VAX_BTYP_780	0x01000000	/* generic 11/780 */
#define VAX_BTYP_750	0x02000000	/* generic 11/750 */
#define VAX_BTYP_730	0x03000000	/* generic 11/730 */
#define VAX_BTYP_790	0x04000000	/* generic 11/790 */

/*
 * 8000 series (1986)
 */
#define VAX_TYP_8SS	5	/* VAX 8200, 8300, 8250, 8350, VS 8000 */
#define VAX_TYP_8NN	6	/* VAX 8530, 8550, 8700, 8800 */
 
#define VAX_BTYP_8000	0x05000000	/* generic VAX 8000 */
 
#define VAX_BTYP_8800	0x06000000	/* generic Nautilus */
#define VAX_BTYP_8700	0x06000001
#define VAX_BTYP_8550	0x06000006
#define VAX_BTYP_8500	0x06000007

/*
 * MicroVAX I (1984)
 */
#define VAX_TYP_UV1	7	/* MicroVAX I, VAXstation I */
 
#define VAX_BTYP_610	0x07000000	/* generic MicroVAX-I */
 
/*
 * MicroVAX II series (1985)
 */
#define VAX_TYP_UV2	8
 
#define VAX_BTYP_630	0x08000001	/* MicroVAX II, VAXstation II */
#define VAX_BTYP_410	0x08000004	/* MicroVAX 2000, VAXstation 2000 */
 
/*
 * CVAX chip series (1987)
 */
#define VAX_TYP_CVAX	10

#define VAX_BTYP_650	0x0A000001	/* MicroVAX 3[345689]00 */
#define	VAX_STYP_650	0x1		/* MicroVAX 3500, 3600 */
#define	VAX_STYP_640	0x2		/* MicroVAX 3300, 3400 */
#define	VAX_STYP_655	0x3		/* MicroVAX 3800, 3900 */
#define VAX_BTYP_9CC	0x0A000002	/* VAX 6000 model 210/310 */
#define VAX_BTYP_60	0x0A000003	/* VAXstation 3520, 3540 */
#define VAX_BTYP_420	0x0A000004	/* VAXstation 3100 models 10 - 48 */
#define	VAX_BTYP_IS1	0x0A000006	/* Infoserver 1000 */
#define VAX_BTYP_5x0	0x0A000007	/* VAXft model 110, 310 */

/*
 * Rigel chip series (1990)
 */
#define VAX_TYP_RIGEL	11
 
#define VAX_BTYP_670	0x0B000001	/* VAX 4000 300 */
#define	VAX_STYP_670	0x4		/* VAX 4000 300 */
#define VAX_BTYP_9RR	0x0B000002	/* VAX 6000 model 410-460 */
#define VAX_BTYP_43	0x0B000004	/* VAXstation 3100 model 76 */
 
/*
 * Aquarius series (1990)
 */
#define VAX_TYP_9000	14
 
/*
 * Polarstar series (1988)
 */
#define VAX_TYP_8PS	17
 
#define VAX_BTYP_8PS	0x11000000	/* VAX 8810 to 8840 */
 
/*
 * Mariah chip series (1991)
 */
#define VAX_TYP_MARIAH	18
 
#define VAX_BTYP_1202	0x12000002	/* VAX 6000 model 510-560 */

#define VAX_BTYP_46	0x12000004	/* VAXstation 4000/60, 3100/80 */
#define VAX_VTYP_47	0x00000001	/* MicroVAX 3100/80 */
#define VAX_VTYP_46	0x00000002	/* VAXstation 4000/60 */
 
/*
 * NVAX chip series (1991)
 */
#define VAX_TYP_NVAX	19
 
#define VAX_BTYP_1301	0x13000001	/* Omega machines */
#define VAX_STYP_675	0x00000c	/* VAX 4000 model 400 */
#define VAX_STYP_680	0x000006	/* VAX 4000 model 500 */
#define VAX_STYP_690	0x000007	/* VAX 4000 model 600 */

#define VAX_BTYP_1302	0x13000002

#define VAX_BTYP_1303	0x13000003	/* Cheetah machines */
#define VAX_STYP_50	0x000008	/* KA50 or KA55 */
#define VAX_STYP_51	0x000009	/* MicroVAX 3100 model 90 / 95 */
#define VAX_STYP_52	0x00000a	/* VAX 4000 model 100 */
#define VAX_STYP_53	0x00000b	/* VAX 4000 model 105A */

#define VAX_BTYP_1305	0x13000005	/* Legacy machines */
#define VAX_STYP_681	0x00000e	/* VAX 4000 model 500A */
#define VAX_STYP_691	0x00000f	/* VAX 4000 model 605A */
#define VAX_STYP_692	0x000010	/* VAX 4000 model 700 */
#define VAX_STYP_694	0x000010	/* VAX 4000 model 705A
					   (same value as 692) */

#define VAX_BTYP_49	0x13000004	/* VaxStation 4000 model 90 */

/*
 * SOC chip series (1991)
 */
#define VAX_TYP_SOC	20
 
#define VAX_BTYP_660	0x14000001	/* VAX 4000 model 200 */
#define	VAX_STYP_660	0x5
#define VAX_BTYP_48	0x14000004	/* VS4000/VLC and MV3100/{30,40} */
#define VAX_STYP_45	0x000000	/* MicroVAX 3100 {30,40} */
#define VAX_STYP_48	0x000001	/* VAXstation 4000 VLC */
#define VAX_BTYP_550	0x14000007	/* VAXft model 410, 610 */
#define VAX_BTYP_VXT	0x14000008	/* VXT 2000+ */
 
/*
 * NVAX+ chip series (1991)
 */
#define VAX_TYP_NVPLUS	23
 
#define VAX_BTYP_1701	0x17000001
 
/*
 * Some common-used external variables.
 */
extern	int vax_cputype;	/* general, highest byte of the SID-register */
extern	int vax_cpustype;	/* general, second byte of the SIE-register */
extern	int vax_cpudata;	/* general, the contents of the SID-register */
extern	int vax_siedata;	/* contents of the SIE register */
extern	int vax_bustype;	/* HW-dep., setup at consinit() in ka???.c */
extern	int vax_boardtype;	/* HW-dep., msb of SID | SIE (SID-extension) */
extern	int vax_confdata;	/* HW-dep., hardware dependent config-data   */

@


1.16
log
@Try and clean system type constants a bit:
- save the second byte of vax_siedata into a new variable, vax_cpustype,
  and use it instead of (vax_siedata >> 8) & 0xff or other similar
  constructs.
- the VAX_SIE_KAxxx constants are duplicates of the VAX_STYP_xx constants.
  Standardize on the latter and kill the former.
- only keep VAX_VTYP_xx constants for KA46 and KA47, those are the only
  systems which use these constants and are told apart by a different
  SIE byte.

No functional change intended.
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.15 2006/07/19 20:22:36 miod Exp $	*/
@


1.15
log
@Remove long dead meat and irrelevant defines. No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.14 2006/03/04 19:33:21 miod Exp $	*/
a34 9
 * Board-Type (?_BTYP_?) and Sub-Type (?_STYP_?) are synonyms.
 * Michael Kukat changed this 01/27/2001, STYP is relly a subtype now.
 * other synonyms are:
 */
#define cpudata	    vax_cpudata
#define cputype	    vax_cputype
#define cpusubtype  vax_boardtype

/*
a71 1
     /* VAX_TYP_610	7 */
a78 1
     /* VAX_TYP_78032	8 */
a86 1
     /* VAX_TYP_650	10 */
d88 4
a91 5
 
#define VAX_BTYP_650	0x0A000001	/* MicroVAX 3500, 3600 */
     /* VAX_BTYP_65D	0x0A000001	   VAXstation 3200, 3500 XXX */
     /* VAX_BTYP_640	0x0A000001	   MicroVAX 3300, 3400 XXX */
     /* VAX_BTYP_655	0x0A000001	   MicroVAX 3800, 3900 XXX */
d96 1
a96 2
#define VAX_BTYP_510	0x0A000007	/* VAXft model 110 */
     /* VAX_BTYP_520	0x0A000007	   VAXft model 310 */
a98 7
 * SID Extension register definitions for CVAX series
 */
#define	VAX_SIE_KA640	0x2		/* KA640 MicroVAX 3300, 3400 */
#define	VAX_SIE_KA650	0x1		/* KA650 MicroVAX 3500, 3600 */
#define	VAX_SIE_KA655	0x3		/* KA655 MicroVAX 3800, 3900 */
 
/*
a101 1
     /* VAX_TYP_9RR	11 */
d103 2
a104 1
#define VAX_BTYP_670	0x0B000001	/* VAX 4000 model 300 */
a112 3
#define VAX_BTYP_9AR	0x0E00000?	/* VAX 9000 models 210, 410-440 */
#define VAX_BTYP_9AQ	0x0E00000?	/* VAX 9000 models 400-800 */
 
a123 1
#define VAX_TYP_V12	18
a124 1
#define VAX_BTYP_690	0x12000001	/* VAX 4000 model 400 */
a134 1
#define VAX_TYP_V13	19
d136 1
a136 1
#define VAX_BTYP_1301	0x13000001	/* VAX 4000 model [4-6]00 */
a139 1
#define VAX_STYP_692	0x000010	/* VAX 4000 model 700? */
d152 3
a154 1
#define VAX_STYP_694	0x000010	/* VAX 4000 model 705A */
a161 1
#define VAX_TYP_V14	20
d164 1
a166 1
#define VAX_VTYP_45	0x00000001	/* MicroVAX 3100 {30,40} */
a167 1
#define VAX_VTYP_48	0x00000002	/* VAXstation 4000 VLC */
a174 1
#define VAX_TYP_V17	23
a178 14
 * compatibility with old names:
 */
 
#define VAX_780		VAX_TYP_780
#define VAX_750		VAX_TYP_750
#define VAX_730		VAX_TYP_730
#define VAX_8600	VAX_TYP_790
#define VAX_8200	VAX_TYP_8SS
#define VAX_8800	VAX_TYP_8NN
#define VAX_610		VAX_TYP_UV1
#define VAX_78032	VAX_TYP_UV2
#define VAX_650		VAX_TYP_CVAX
 
/*
d182 1
@


1.14
log
@Typos grab bag of the month, eyeballed by jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.13 2002/05/25 04:29:53 hugh Exp $	*/
a206 5
/*
 * Highest Number supported by OpenBSD/VAX
 */
#define VAX_TYP_MAX	VAX_TYP_RIGEL

@


1.13
log
@Add a board type for VXT2000+. Info gathered by Daniel SZILAGYI.
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.12 2002/01/31 11:42:52 hugh Exp $	*/
d35 1
a35 1
 * Board-Type (?_BTYP_?) and Sub-Type (?_STYP_?) are synonima.
d37 1
a37 1
 * other synonima are:
@


1.12
log
@Add support for VAX 4000 500A.
Thanks to kernel testing by Andrew Reynolds.
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.11 2001/10/01 12:53:37 hugh Exp $	*/
d197 1
@


1.11
log
@Add system variant types for VAXstation 4000/60 and MicroVAX 3100m80.
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.10 2001/03/16 22:46:25 hugh Exp $	*/
a165 1
#define VAX_STYP_681	0x00000e	/* VAX 4000 model 500A */
a166 1
#define VAX_STYP_691	0x00000f	/* VAX 4000 model 605A */
d176 5
@


1.11.4.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.12 2002/01/31 11:42:52 hugh Exp $	*/
d166 1
d168 1
a177 5

#define VAX_BTYP_1305	0x13000005	/* Legacy machines */
#define VAX_STYP_681	0x00000e	/* VAX 4000 model 500A */
#define VAX_STYP_691	0x00000f	/* VAX 4000 model 605A */
#define VAX_STYP_694	0x000010	/* VAX 4000 model 705A */
@


1.11.4.2
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.11.4.1 2002/01/31 22:55:26 niklas Exp $	*/
a196 1
#define VAX_BTYP_VXT	0x14000008	/* VXT 2000+ */
@


1.10
log
@Add some more model subtypes from Antonio Carlini.
Won't try to match VAX_STYP_692 until we can find a 4000 70x and learn
more about this model.
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.9 2001/03/12 11:45:35 hugh Exp $	*/
d152 1
d154 2
@


1.9
log
@Omega is now VAX_BTYP_1301. Also add an STYP for 4000 600.
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.8 2001/02/25 15:48:19 hugh Exp $	*/
d163 1
d165 2
@


1.8
log
@Provide both system sub type and system variant data for KA45 and KA48.
It's not yet clear which is better used to differentiate these models.
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.7 2001/01/30 17:06:47 hugh Exp $	*/
d160 1
a160 1
#define VAX_BTYP_680	0x13000001	/* VAX 4000 model [45]00 */
d163 2
d166 1
d172 1
@


1.7
log
@Update with SIE data provided by:
Michael Kukat, Martin Domany, and Mark Cooper
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.6 2000/04/26 03:08:42 bjc Exp $	*/
d161 2
a162 2
#define VAX_STYP_675	0x0000000c	/* VAX 4000 model 400 */
#define VAX_STYP_680	0x00000006	/* VAX 4000 model 500 */
d165 4
a168 4
#define VAX_STYP_50	0x00000008	/* KA50 Cheetah, unknown model */
#define VAX_STYP_51	0x00000009	/* MicroVAX 3100 model 90 / 95 */
#define VAX_STYP_52	0x0000000a	/* VAX 4000 model 100 */
#define VAX_STYP_53	0x0000000b	/* VAX 4000 model 105A */
d178 5
a182 1
#define VAX_BTYP_48	0x14000004	/* VAXstation 4000 VLC */
@


1.6
log
@vax resurrection, part 1: sync with early-april netbsd

many changes here, notable:  uvm, ansi.h, more (and cleaner) vsbus support
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.5 1997/09/10 11:47:10 maja Exp $	*/
d36 1
d160 3
a162 2
#define VAX_BTYP_69D	0x13000001	/* VAX 4000 model 500 */
#define VAX_BTYP_1301	0x13000001	/* VAX 4000 model 100 */
d164 6
a169 2
#define VAX_BTYP_1303	0x13000003
#define VAX_BTYP_49	0x13000004	/* MicroVAX 3100 model 90 */
@


1.5
log
@Sync with NetBSD 970516. -moj
@
text
@d1 2
a2 2
/*	$OpenBSD: sid.h,v 1.4 1997/05/29 00:04:52 niklas Exp $	*/
/*	$NetBSD: sid.h,v 1.9 1997/02/12 17:50:38 ragge Exp $	*/
d82 1
a82 1
#define VAX_BTYP_610	0x70000000	/* generic MicroVAX-I */
d107 1
d172 1
a172 1
#define VAX_BTYP_440	0x14000004	/* VS 4000/30, 3100/30, 3100/40 */
d184 1
a184 1
 * Highest Number supported by NetBSD/VAX
@


1.5.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 2
a2 2
/*	$OpenBSD: sid.h,v 1.10 2001/03/16 22:46:25 hugh Exp $	*/
/*	$NetBSD: sid.h,v 1.12 1999/12/11 17:55:13 ragge Exp $	*/
a35 1
 * Michael Kukat changed this 01/27/2001, STYP is relly a subtype now.
d82 1
a82 1
#define VAX_BTYP_610	0x07000000	/* generic MicroVAX-I */
a106 1
#define	VAX_BTYP_IS1	0x0A000006	/* Infoserver 1000 */
d158 2
a159 8
#define VAX_BTYP_1301	0x13000001	/* VAX 4000 model [4-6]00 */
#define VAX_STYP_675	0x00000c	/* VAX 4000 model 400 */
#define VAX_STYP_680	0x000006	/* VAX 4000 model 500 */
#define VAX_STYP_681	0x00000e	/* VAX 4000 model 500A */
#define VAX_STYP_690	0x000007	/* VAX 4000 model 600 */
#define VAX_STYP_691	0x00000f	/* VAX 4000 model 605A */
#define VAX_STYP_692	0x000010	/* VAX 4000 model 700? */

d161 2
a162 8

#define VAX_BTYP_1303	0x13000003	/* Cheetah machines */
#define VAX_STYP_50	0x000008	/* KA50 or KA55 */
#define VAX_STYP_51	0x000009	/* MicroVAX 3100 model 90 / 95 */
#define VAX_STYP_52	0x00000a	/* VAX 4000 model 100 */
#define VAX_STYP_53	0x00000b	/* VAX 4000 model 105A */

#define VAX_BTYP_49	0x13000004	/* VaxStation 4000 model 90 */
d171 1
a171 5
#define VAX_BTYP_48	0x14000004	/* VS4000/VLC and MV3100/{30,40} */
#define VAX_STYP_45	0x000000	/* MicroVAX 3100 {30,40} */
#define VAX_VTYP_45	0x00000001	/* MicroVAX 3100 {30,40} */
#define VAX_STYP_48	0x000001	/* VAXstation 4000 VLC */
#define VAX_VTYP_48	0x00000002	/* VAXstation 4000 VLC */
d183 1
a183 1
 * Highest Number supported by OpenBSD/VAX
@


1.5.12.2
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: sid.h,v 1.5.12.1 2001/05/14 21:38:06 niklas Exp $	*/
a151 1

a152 2
#define VAX_VTYP_47	0x00000001	/* MicroVAX 3100/80 */
#define VAX_VTYP_46	0x00000002	/* VAXstation 4000/60 */
@


1.5.12.3
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d166 1
d168 1
a177 5

#define VAX_BTYP_1305	0x13000005	/* Legacy machines */
#define VAX_STYP_681	0x00000e	/* VAX 4000 model 500A */
#define VAX_STYP_691	0x00000f	/* VAX 4000 model 605A */
#define VAX_STYP_694	0x000010	/* VAX 4000 model 705A */
@


1.5.12.4
log
@Sync the SMP branch with 3.3
@
text
@a196 1
#define VAX_BTYP_VXT	0x14000008	/* VXT 2000+ */
@


1.4
log
@RCS tagging
@
text
@d1 2
a2 2
/*	$OpenBSD: sid.h,v 1.8 1996/08/20 14:19:41 ragge Exp $	*/
/*	$NetBSD: sid.h,v 1.8 1996/08/20 14:19:41 ragge Exp $	*/
d101 3
a103 3
     /* VAX_BTYP_65D	0x0A000001	   VAXstation 3200, 3500 */
     /* VAX_BTYP_640	0x0A000001	   MicroVAX 3300, 3400 */
     /* VAX_BTYP_655	0x0A000001	   MicroVAX 3800, 3900 */
d109 7
@


1.3
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
@


1.2
log
@update from netbsd (verbatim)
@
text
@d1 1
a1 1
/*	$NetBSD: sid.h,v 1.6 1995/11/12 14:37:18 ragge Exp $	*/
d33 7
a39 2
 /* All bugs are subject to removal without further notice */
		
d41 7
d49 12
a60 10
#define	VAX_780	1
#define VAX_750	2
#define	VAX_730	3
#define VAX_8600 4
#define VAX_8200 5
#define VAX_8800 6
#define VAX_610 7
#define VAX_78032 8
#define VAX_650 10
#define	VAX_MAX	10
d62 12
a73 1
#define MACHID(x)       ((x>>24)&255)
d75 22
a96 1
#define V750UCODE(x)    ((x>>8)&255)
d98 95
d194 1
a194 5
 * The MicroVAXII CPU chip (78032) is used on more than one type of system
 * that are differentiated by the low order 8 bits of cpu_type. (Filled in
 * from the System Identification Extension Register.) To test for the cpu
 * chip, compare cpunumber == VAX_78032, but to test for a Qbus MicroVAXII
 * compare cpu_type == VAX_630.
d196 6
a201 2
#define VAX_630       0x8000001
#define VAX_410       0x8000002
a202 1
extern int cpu_type, cpunumber;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: sid.h,v 1.5 1995/02/23 17:51:44 ragge Exp $	*/
a50 1
#define V750HARDW(x)    (cpu_type&255)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
