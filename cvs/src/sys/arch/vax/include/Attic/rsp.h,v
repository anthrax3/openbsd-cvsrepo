head	1.3;
access;
symbols
	OPENBSD_4_9:1.2.0.60
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.58
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.54
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.56
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.52
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.50
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.48
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.46
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.44
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.42
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.40
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.38
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.36
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.34
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.2.0.22
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.20
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.18
	OPENBSD_2_8:1.2.0.16
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.14
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.12
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.10
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2011.07.06.18.32.59;	author miod;	state dead;
branches;
next	1.2;

1.2
date	97.05.29.00.04.50;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.05.03.09.09.44;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove support for non-microVAX, non-VAXstation, non-VXT hardware in the
VAX port. This means, 11/7xx, VAX6000 and VAX8x00 systems, as well as SBI,
CMI, BI, XMI and MASSBUS drivers.
Most of these files were not being compiled or kept in compilable state over
the years anyway.
@
text
@/*	$OpenBSD: rsp.h,v 1.2 1997/05/29 00:04:50 niklas Exp $ */
/*	$NetBSD: rsp.h,v 1.1 1996/02/17 18:14:50 ragge Exp $ */
/*
 * Copyright (c) 1995 Ludd, University of Lule}, Sweden.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed at Ludd, University of 
 *      Lule}, Sweden and its contributors.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */


/*
 * The Radial Serial Protocol (RSP) that TU58 (DECtape II) uses
 * is a strange animal that is sent over serial lines.
 * Most packet types can match the struct rsp, but some can't (i.e. 
 * data packets). 
 * More about RSP can be read in Digital Peripherals Handbook, p. 92.
 */

struct rsp {
	char	rsp_typ;	/* Packet type */
	char	rsp_sz;		/* Packet size */
	char	rsp_op;		/* Operation */
	char	rsp_mod;	/* Modifier */
	char	rsp_drv;	/* Tape drive number */
	char	rsp_sw;		/* Switches */
	char	rsp_xx1;	/* Unused, always zero */
	char	rsp_xx2;	/* Unused, always zero */
	short	rsp_cnt;	/* Byte count to transfer */
	short	rsp_blk;	/* Block number */
	short	rsp_sum;	/* Checksum of packet */
};

/* Types of packets */
#define	RSP_TYP_DATA		001	/* DATA packet */
#define	RSP_TYP_COMMAND		002	/* COMMAND packet */
#define	RSP_TYP_INIT		004	/* INITIALIZE packet */
#define	RSP_TYP_BOOT		010	/* BOOTSTRAP packet (PDP11) */
#define	RSP_TYP_CONTINUE	020	/* CONTINUE packet */
#define	RSP_TYP_XOFF		023	/* XOFF packet */

/* Operation types */
#define	RSP_OP_NOP		000	/* No operation */
#define	RSP_OP_RESET		001	/* Reset */
#define	RSP_OP_READ		002	/* Read data */
#define	RSP_OP_WRITE		003	/* Write data */
#define	RSP_OP_POS		005	/* Position tape */
#define	RSP_OP_DIAG		007	/* internal diagnose */
#define	RSP_OP_GSTAT		010	/* Get status */
#define	RSP_OP_SSTAT		011	/* Set status */
#define	RSP_OP_END		100	/* End packet */

/* Modifier */
#define	RSP_MOD_VERIFY		001	/* Verify read data */
#define	RSP_MOD_OK		000	/* Success */
#define	RSP_MOD_RETR		001	/* Success w/ retries */
#define	RSP_MOD_FAIL		-1	/* Failed self-test */
#define	RSP_MOD_PART		-2	/* Partial operation */
#define	RSP_MOD_NET		-8	/* Non-existent tape drive */
#define	RSP_MOD_NOC		-9	/* No cartridge */
#define	RSP_MOD_WP		-11	/* Write protected */
#define	RSP_MOD_DERR		-17	/* Data error */
#define	RSP_MOD_SERR		-32	/* Seek error */
#define	RSP_MOD_STOP		-33	/* Motor stopped */
#define	RSP_MOD_INVAL		-48	/* Invalid opcode */
#define	RSP_MOD_INVBLK		-55	/* Invalid bloch number */

@


1.2
log
@RCS tagging
@
text
@d1 1
a1 1
/*	$OpenBSD: rsp.h,v 1.1 1996/02/17 18:14:50 ragge Exp $ */
@


1.1
log
@sync w/ 0430
@
text
@d1 1
@
