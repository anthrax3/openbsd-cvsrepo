head	1.5;
access;
symbols
	OPENBSD_5_9:1.4.0.18
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.20
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.12
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.16
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.14
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.10
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.8
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.42
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.40
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.36
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.38
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.34
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.32
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.30
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.28
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.26
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.24
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.22
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.20
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.18
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.16
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.14
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.12
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.18
	OPENBSD_2_8:1.2.0.16
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.14
	OPENBSD_2_7_BASE:1.2
	SMP:1.2.0.12
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.10
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.4;
commitid	OSDG2O3Cgeifnf1W;

1.4
date	2011.03.23.16.54.37;	author pirofti;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.25.13.33.36;	author hugh;	state Exp;
branches;
next	1.2;

1.2
date	97.05.29.00.04.39;	author niklas;	state Exp;
branches
	1.2.12.1;
next	1.1;

1.1
date	95.12.14.05.27.17;	author deraadt;	state Exp;
branches;
next	;

1.2.12.1
date	2001.10.31.03.08.01;	author nate;	state Exp;
branches;
next	;


desc
@@


1.5
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: frame.h,v 1.4 2011/03/23 16:54:37 pirofti Exp $ */
/*	$NetBSD: frame.h,v 1.2 2000/06/04 19:30:15 matt Exp $ */
/*
 * Copyright (c) 1995 Ludd, University of Lule}, Sweden.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed at Ludd, University of 
 *      Lule}, Sweden and its contributors.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MACHINE_FRAME_H_
#define	_MACHINE_FRAME_H_

/*
 * Description of calls frame on stack. This is the 
 * standard way of making procedure calls on vax systems.
 */
struct callsframe {
	unsigned int	ca_cond;	/* condition handler */
	unsigned int	ca_maskpsw;	/* register mask and saved psw */
	unsigned int	ca_ap;		/* argument pointer */
	unsigned int	ca_fp;		/* frame pointer */
	unsigned int	ca_pc;		/* program counter */
	unsigned int	ca_argno;	/* argument count on stack */
	unsigned int	ca_arg1;	/* first arg on stack */
	/* This can be followed by more arguments */
};

struct icallsframe {
	struct callsframe ica_frame;	/* std call frame */
	unsigned int	ica_r0;		/* interrupt saved r0 */
	unsigned int	ica_r1;		/* interrupt saved r1 */
	unsigned int	ica_r2;		/* interrupt saved r2 */
	unsigned int	ica_r3;		/* interrupt saved r3 */
	unsigned int	ica_r4;		/* interrupt saved r4 */
	unsigned int	ica_r5;		/* interrupt saved r5 */
	unsigned int	ica_pc;		/* interrupt saved pc */
	unsigned int	ica_psl;	/* interrupt saved psl */
};

#endif /* _VAX_FRAME_H */
@


1.4
log
@Normalize sentinel. Use _MACHINE_*_H_ and _<ARCH>_*_H_ properly and consitently.

Discussed and okay drahn@@. Okay deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: frame.h,v 1.3 2001/08/25 13:33:36 hugh Exp $ */
@


1.3
log
@Bring in some useful stuff from NetBSD. Mostly work by Matt Thomas,
and concerned with intvec counting. Also some ANSIfication.
@
text
@d1 1
a1 1
/*	$OpenBSD: frame.h,v 1.2 1997/05/29 00:04:39 niklas Exp $ */
d34 2
a35 2
#ifndef _VAX_FRAME_H_
#define	_VAX_FRAME_H_
@


1.2
log
@RCS tagging
@
text
@d1 2
a2 2
/*	$OpenBSD: frame.h,v 1.1 1995/11/12 15:07:30 ragge Exp $ */
/*	$NetBSD: frame.h,v 1.1 1995/11/12 15:07:30 ragge Exp $ */
d34 3
d52 11
a62 2
/* Offset to beginning of calls frame from first arg */
#define	FRAMEOFFSET(arg1) ((struct callsframe *)((unsigned int)&(arg1) - 24))
d64 1
@


1.2.12.1
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 2
a2 2
/*	$OpenBSD: frame.h,v 1.2 1997/05/29 00:04:39 niklas Exp $ */
/*	$NetBSD: frame.h,v 1.2 2000/06/04 19:30:15 matt Exp $ */
a33 3
#ifndef _VAX_FRAME_H_
#define	_VAX_FRAME_H_

d49 2
a50 11
struct icallsframe {
	struct callsframe ica_frame;	/* std call frame */
	unsigned int	ica_r0;		/* interrupt saved r0 */
	unsigned int	ica_r1;		/* interrupt saved r1 */
	unsigned int	ica_r2;		/* interrupt saved r2 */
	unsigned int	ica_r3;		/* interrupt saved r3 */
	unsigned int	ica_r4;		/* interrupt saved r4 */
	unsigned int	ica_r5;		/* interrupt saved r5 */
	unsigned int	ica_pc;		/* interrupt saved pc */
	unsigned int	ica_psl;	/* interrupt saved psl */
};
a51 1
#endif /* _VAX_FRAME_H */
@


1.1
log
@update from netbsd (verbatim)
@
text
@d1 1
@
