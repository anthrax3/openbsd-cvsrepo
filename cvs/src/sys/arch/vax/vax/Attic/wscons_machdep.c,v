head	1.7;
access;
symbols
	OPENBSD_5_9:1.6.0.28
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.30
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.22
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.26
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.24
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.20
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.18
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.16
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.14
	OPENBSD_5_0:1.6.0.12
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.10
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.8
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.4
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2016.03.09.16.28.49;	author deraadt;	state dead;
branches;
next	1.6;
commitid	OSDG2O3Cgeifnf1W;

1.6
date	2008.08.20.19.00.01;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2008.08.18.23.04.28;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2008.01.23.16.37.57;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2007.12.28.20.44.37;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.27.16.55.41;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.29.14.18.57;	author miod;	state Exp;
branches;
next	;


desc
@@


1.7
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: wscons_machdep.c,v 1.6 2008/08/20 19:00:01 miod Exp $	*/
/*
 * Copyright (c) 2006 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice, this permission notice, and the disclaimer below
 * appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/device.h>
#include <sys/systm.h>
#include <sys/malloc.h>
#include <sys/conf.h>
#include <sys/kernel.h>

#include <machine/nexus.h>
#include <machine/vsbus.h>
#include <machine/scb.h>
#include <machine/sid.h>
#include <machine/cpu.h>

#include "wsdisplay.h"
#include "wskbd.h"

#include <dev/wscons/wsconsio.h>
#include <dev/wscons/wsdisplayvar.h>
#include <dev/wscons/wskbdvar.h>

#include "dzkbd.h"

#include <vax/qbus/dzreg.h>
#include <vax/qbus/dzvar.h>
#include <vax/dec/dzkbdvar.h>

#include "qsckbd.h"

#include <vax/vxt/qscvar.h>

#include "gpx.h"
#include "lcg.h"
#include "lcspx.h"
#include "legss.h"
#include "smg.h"

int (*wsfbcninit)(void) = NULL;

#define	FRAMEBUFFER_PROTOS(fb) \
extern int fb##cnprobe(void); \
extern int fb##cninit(void);

#define	FRAMEBUFFER_PROBE(fb) \
do { \
	if (fb##cnprobe()) { \
		wsfbcninit = fb##cninit; \
		goto found; \
	} \
} while (0)

FRAMEBUFFER_PROTOS(gpx);
FRAMEBUFFER_PROTOS(lcg);
FRAMEBUFFER_PROTOS(lcspx);
FRAMEBUFFER_PROTOS(legss);
FRAMEBUFFER_PROTOS(smg);

#include <dev/cons.h>
cons_decl(ws);

int	wscn_ignore = 0;	/* nonzero if forcing a new console election */

void
wscnprobe(struct consdev *cp)
{
	extern int getmajor(void *);	/* conf.c */
	int major;

	/*
	 * If we forced a console device reelection, mark ourselves as
	 * non-working.
	 */
	if (wscn_ignore != 0) {
		cp->cn_pri = CN_DEAD;
		return;
	}

	major = getmajor(wsdisplayopen);
	if (major < 0)
		return;

#if NGPX > 0
	FRAMEBUFFER_PROBE(gpx);
#endif
#if NLCG > 0
	FRAMEBUFFER_PROBE(lcg);
#endif
#if NLCSPX > 0
	FRAMEBUFFER_PROBE(lcspx);
#endif
#if NLEGSS > 0
	FRAMEBUFFER_PROBE(legss);
#endif
#if NSMG > 0
	FRAMEBUFFER_PROBE(smg);
#endif
	return;

found:
	cp->cn_pri = CN_MIDPRI;
	cp->cn_dev = makedev(major, 0);
}

void
wscninit(struct consdev *cp)
{
	if ((*wsfbcninit)()) {
		/*
		 * For some reason, the console initialization failed.
		 * Fallback to serial console, by re-electing a console.
		 */
		wscn_ignore = 1;
		cninit();
		return;
	}

	switch (vax_bustype) {
	case VAX_MBUS:
	case VAX_VSBUS:
#if NDZKBD > 0
		dzkbd_cnattach();
#endif
		break;
	case VAX_VXTBUS:
#if NQSCKBD > 0
		qsckbd_cnattach(QSC_LINE_KEYBOARD);
#endif
		break;
	}
}

void
wscnputc(dev_t dev, int c)
{
#if NWSDISPLAY > 0
	wsdisplay_cnputc(dev, c);
#endif
}

int
wscngetc(dev_t dev)
{
#if NWSKBD > 0
	return (wskbd_cngetc(dev));
#else
	return (0);
#endif
}

void
wscnpollc(dev_t dev, int on)
{
#if NWSKBD > 0
	wskbd_cnpollc(dev, on);
#endif
}
@


1.6
log
@Minimal driver for the VAXstation 35x0/38x0 LEGSS option, currently limited
to 8 bit mode operation, and no color or accelerated features until I can
find documentation about it.

Speed is decent by VAX standards, except for scrolling, which is so
abysmally slow one could see ZZ Top's beards growing while waiting for the
screen to scroll...
@
text
@d1 1
a1 1
/*	$OpenBSD: wscons_machdep.c,v 1.5 2008/08/18 23:04:28 miod Exp $	*/
@


1.5
log
@Shuffle the dz console code (both serial and keyboard) to be more independent
of the console device attachment, and to be able to work on system where there
are more than one dz device of the same type, one of it being the console one.

This also allows a different register layout than the dz@@ibus one to be used
for the dz console device.
@
text
@d1 1
a1 1
/*	$OpenBSD: wscons_machdep.c,v 1.4 2008/01/23 16:37:57 jsing Exp $	*/
d52 1
d72 1
d108 3
d135 1
@


1.4
log
@Cleanup cn_pri. Change constants to more meaningful names, rather than
the hp300 related ones currently in use. CN_NORMAL becomes CN_LOWPRI,
CN_INTERNAL becomes CN_MIDPRI and CN_REMOTE becomes CN_HIGHPRI.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wscons_machdep.c,v 1.2 2006/08/27 16:55:41 miod Exp $	*/
d132 1
a132 1
		dzkbd_cnattach(0); /* Connect keyboard and screen together */
@


1.3
log
@If initializing a frame buffer as glass console fails, instead of an invisible
panic (for you ichc fans out there), disable the wscons console and force a
console device reselection, which ends up in picking a serial console.

This should not happen, but just in case, it's a less rude behaviour.
@
text
@d112 1
a112 1
	cp->cn_pri = CN_INTERNAL;
@


1.2
log
@Work-in-progress VXT2000 support (commented out in GENERIC so far). Glass
console works on color model, serial console works, ethernet attaches but
does not work correctly yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: wscons_machdep.c,v 1.1 2006/07/29 14:18:57 miod Exp $	*/
d54 1
a54 1
void (*wsfbcninit)(void) = NULL;
d58 1
a58 1
extern void fb##cninit(void);
d76 2
d84 9
d119 9
a127 1
	(*wsfbcninit)();
@


1.1
log
@Rewrite glass console detection and initialization code, it's simpler and
will not allocate frame buffer resources at probe time. A few buglets fixed
while doing so.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d26 1
d45 4
d110 2
d113 6
a118 1
	dzkbd_cnattach(0); /* Connect keyboard and screen together */
d120 2
@

