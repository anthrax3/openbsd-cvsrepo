head	1.73;
access;
symbols
	OPENBSD_5_9:1.71.0.2
	OPENBSD_5_9_BASE:1.71
	OPENBSD_5_8:1.70.0.6
	OPENBSD_5_8_BASE:1.70
	OPENBSD_5_7:1.70.0.2
	OPENBSD_5_7_BASE:1.70
	OPENBSD_5_6:1.69.0.8
	OPENBSD_5_6_BASE:1.69
	OPENBSD_5_5:1.69.0.6
	OPENBSD_5_5_BASE:1.69
	OPENBSD_5_4:1.69.0.2
	OPENBSD_5_4_BASE:1.69
	OPENBSD_5_3:1.68.0.2
	OPENBSD_5_3_BASE:1.68
	OPENBSD_5_2:1.67.0.2
	OPENBSD_5_2_BASE:1.67
	OPENBSD_5_1_BASE:1.66
	OPENBSD_5_1:1.66.0.2
	OPENBSD_5_0:1.64.0.2
	OPENBSD_5_0_BASE:1.64
	OPENBSD_4_9:1.62.0.2
	OPENBSD_4_9_BASE:1.62
	OPENBSD_4_8:1.60.0.2
	OPENBSD_4_8_BASE:1.60
	OPENBSD_4_7:1.58.0.2
	OPENBSD_4_7_BASE:1.58
	OPENBSD_4_6:1.57.0.4
	OPENBSD_4_6_BASE:1.57
	OPENBSD_4_5:1.56.0.2
	OPENBSD_4_5_BASE:1.56
	OPENBSD_4_4:1.54.0.2
	OPENBSD_4_4_BASE:1.54
	OPENBSD_4_3:1.52.0.4
	OPENBSD_4_3_BASE:1.52
	OPENBSD_4_2:1.52.0.2
	OPENBSD_4_2_BASE:1.52
	OPENBSD_4_1:1.49.0.4
	OPENBSD_4_1_BASE:1.49
	OPENBSD_4_0:1.49.0.2
	OPENBSD_4_0_BASE:1.49
	OPENBSD_3_9:1.43.0.10
	OPENBSD_3_9_BASE:1.43
	OPENBSD_3_8:1.43.0.8
	OPENBSD_3_8_BASE:1.43
	OPENBSD_3_7:1.43.0.6
	OPENBSD_3_7_BASE:1.43
	OPENBSD_3_6:1.43.0.4
	OPENBSD_3_6_BASE:1.43
	SMP_SYNC_A:1.43
	SMP_SYNC_B:1.43
	OPENBSD_3_5:1.43.0.2
	OPENBSD_3_5_BASE:1.43
	OPENBSD_3_4:1.41.0.2
	OPENBSD_3_4_BASE:1.41
	UBC_SYNC_A:1.39
	OPENBSD_3_3:1.38.0.2
	OPENBSD_3_3_BASE:1.38
	OPENBSD_3_2:1.37.0.2
	OPENBSD_3_2_BASE:1.37
	OPENBSD_3_1:1.33.0.2
	OPENBSD_3_1_BASE:1.33
	UBC_SYNC_B:1.37
	UBC:1.32.0.2
	UBC_BASE:1.32
	OPENBSD_3_0:1.30.0.2
	OPENBSD_3_0_BASE:1.30
	OPENBSD_2_9_BASE:1.25
	OPENBSD_2_9:1.25.0.2
	OPENBSD_2_8:1.22.0.2
	OPENBSD_2_8_BASE:1.22
	OPENBSD_2_7:1.18.0.2
	OPENBSD_2_7_BASE:1.18
	SMP:1.17.0.8
	SMP_BASE:1.17
	kame_19991208:1.17
	OPENBSD_2_6:1.17.0.6
	OPENBSD_2_6_BASE:1.17
	OPENBSD_2_5:1.17.0.4
	OPENBSD_2_5_BASE:1.17
	OPENBSD_2_4:1.17.0.2
	OPENBSD_2_4_BASE:1.17
	OPENBSD_2_3:1.14.0.2
	OPENBSD_2_3_BASE:1.14
	OPENBSD_2_2:1.13.0.2
	OPENBSD_2_2_BASE:1.13
	OPENBSD_2_1:1.11.0.2
	OPENBSD_2_1_BASE:1.11
	OPENBSD_2_0:1.8.0.2
	OPENBSD_2_0_BASE:1.8
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.73
date	2016.03.09.16.28.49;	author deraadt;	state dead;
branches;
next	1.72;
commitid	OSDG2O3Cgeifnf1W;

1.72
date	2016.02.26.09.10.05;	author natano;	state Exp;
branches;
next	1.71;
commitid	NHDvdrxPpwDqGtpK;

1.71
date	2015.10.23.15.10.53;	author claudio;	state Exp;
branches;
next	1.70;
commitid	g17gxjQh9N9egLbB;

1.70
date	2014.10.09.03.59.59;	author tedu;	state Exp;
branches;
next	1.69;
commitid	I0KLtD9aVxAdm6aW;

1.69
date	2013.06.03.15.54.47;	author tedu;	state Exp;
branches;
next	1.68;

1.68
date	2012.08.23.06.12.49;	author deraadt;	state Exp;
branches;
next	1.67;

1.67
date	2012.04.06.15.10.40;	author jsing;	state Exp;
branches;
next	1.66;

1.66
date	2011.10.06.20.49.28;	author deraadt;	state Exp;
branches;
next	1.65;

1.65
date	2011.09.03.20.41.31;	author miod;	state Exp;
branches;
next	1.64;

1.64
date	2011.07.06.18.32.59;	author miod;	state Exp;
branches;
next	1.63;

1.63
date	2011.04.30.15.24.07;	author miod;	state Exp;
branches;
next	1.62;

1.62
date	2011.01.14.19.04.08;	author jasper;	state Exp;
branches;
next	1.61;

1.61
date	2010.09.23.05.02.14;	author claudio;	state Exp;
branches;
next	1.60;

1.60
date	2010.07.03.03.59.17;	author krw;	state Exp;
branches;
next	1.59;

1.59
date	2010.06.09.15.25.33;	author jsing;	state Exp;
branches;
next	1.58;

1.58
date	2009.08.13.15.04.20;	author dlg;	state Exp;
branches;
next	1.57;

1.57
date	2009.06.03.14.45.53;	author jj;	state Exp;
branches;
next	1.56;

1.56
date	2009.01.25.17.30.49;	author miod;	state Exp;
branches;
next	1.55;

1.55
date	2008.08.18.23.19.29;	author miod;	state Exp;
branches;
next	1.54;

1.54
date	2008.05.14.20.49.48;	author miod;	state Exp;
branches;
next	1.53;

1.53
date	2008.04.08.14.31.54;	author claudio;	state Exp;
branches;
next	1.52;

1.52
date	2007.05.28.22.26.03;	author todd;	state Exp;
branches;
next	1.51;

1.51
date	2007.05.27.01.50.36;	author todd;	state Exp;
branches;
next	1.50;

1.50
date	2007.05.26.19.54.24;	author todd;	state Exp;
branches;
next	1.49;

1.49
date	2006.08.27.16.55.41;	author miod;	state Exp;
branches;
next	1.48;

1.48
date	2006.07.30.12.32.43;	author miod;	state Exp;
branches;
next	1.47;

1.47
date	2006.07.29.14.18.57;	author miod;	state Exp;
branches;
next	1.46;

1.46
date	2006.07.28.21.07.05;	author miod;	state Exp;
branches;
next	1.45;

1.45
date	2006.07.24.22.19.54;	author miod;	state Exp;
branches;
next	1.44;

1.44
date	2006.07.24.20.35.08;	author miod;	state Exp;
branches;
next	1.43;

1.43
date	2004.02.10.01.31.21;	author millert;	state Exp;
branches;
next	1.42;

1.42
date	2003.09.23.16.51.12;	author millert;	state Exp;
branches;
next	1.41;

1.41
date	2003.06.26.13.06.26;	author miod;	state Exp;
branches;
next	1.40;

1.40
date	2003.06.02.23.27.58;	author millert;	state Exp;
branches;
next	1.39;

1.39
date	2003.05.14.00.20.37;	author tedu;	state Exp;
branches;
next	1.38;

1.38
date	2002.12.05.02.49.55;	author kjc;	state Exp;
branches;
next	1.37;

1.37
date	2002.07.10.22.08.47;	author mickey;	state Exp;
branches;
next	1.36;

1.36
date	2002.06.24.10.41.13;	author hugh;	state Exp;
branches;
next	1.35;

1.35
date	2002.06.12.12.36.14;	author hugh;	state Exp;
branches;
next	1.34;

1.34
date	2002.05.16.21.11.19;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2002.03.14.01.26.48;	author millert;	state Exp;
branches;
next	1.32;

1.32
date	2001.12.13.09.20.47;	author hugh;	state Exp;
branches
	1.32.2.1;
next	1.31;

1.31
date	2001.12.11.23.19.02;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2001.09.28.02.53.14;	author mickey;	state Exp;
branches;
next	1.29;

1.29
date	2001.08.06.22.34.44;	author mickey;	state Exp;
branches;
next	1.28;

1.28
date	2001.06.27.06.56.30;	author kjc;	state Exp;
branches;
next	1.27;

1.27
date	2001.06.25.03.20.22;	author kjell;	state Exp;
branches;
next	1.26;

1.26
date	2001.05.16.22.15.18;	author hugh;	state Exp;
branches;
next	1.25;

1.25
date	2001.04.18.16.15.20;	author hugh;	state Exp;
branches;
next	1.24;

1.24
date	2001.03.15.20.32.11;	author bjc;	state Exp;
branches;
next	1.23;

1.23
date	2001.02.24.10.31.58;	author hugh;	state Exp;
branches;
next	1.22;

1.22
date	2000.10.31.02.30.57;	author hugh;	state Exp;
branches;
next	1.21;

1.21
date	2000.10.09.23.11.57;	author bjc;	state Exp;
branches;
next	1.20;

1.20
date	2000.09.26.14.03.55;	author art;	state Exp;
branches;
next	1.19;

1.19
date	2000.06.01.00.02.11;	author bjc;	state Exp;
branches;
next	1.18;

1.18
date	2000.04.27.01.10.11;	author bjc;	state Exp;
branches;
next	1.17;

1.17
date	98.09.25.09.20.54;	author todd;	state Exp;
branches
	1.17.8.1;
next	1.16;

1.16
date	98.07.07.06.56.14;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	98.07.07.03.02.50;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	97.11.23.05.21.59;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	97.09.10.12.04.43;	author maja;	state Exp;
branches;
next	1.12;

1.12
date	97.05.28.23.17.59;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	97.01.17.08.44.25;	author maja;	state Exp;
branches;
next	1.10;

1.10
date	97.01.15.23.25.06;	author maja;	state Exp;
branches;
next	1.9;

1.9
date	96.10.19.13.26.13;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	96.08.29.09.26.32;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.07.15.14.57.08;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	96.06.12.08.20.36;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.05.04.18.50.59;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.05.03.09.10.06;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.01.31.05.21.25;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.07.07.41.14;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.09;	author deraadt;	state Exp;
branches;
next	;

1.17.8.1
date	2001.05.14.21.38.44;	author niklas;	state Exp;
branches;
next	1.17.8.2;

1.17.8.2
date	2001.07.04.10.24.33;	author niklas;	state Exp;
branches;
next	1.17.8.3;

1.17.8.3
date	2001.10.31.03.08.01;	author nate;	state Exp;
branches;
next	1.17.8.4;

1.17.8.4
date	2002.03.06.02.04.48;	author niklas;	state Exp;
branches;
next	1.17.8.5;

1.17.8.5
date	2002.03.28.11.26.46;	author niklas;	state Exp;
branches;
next	1.17.8.6;

1.17.8.6
date	2003.03.27.23.52.20;	author niklas;	state Exp;
branches;
next	1.17.8.7;

1.17.8.7
date	2003.05.16.00.29.41;	author niklas;	state Exp;
branches;
next	1.17.8.8;

1.17.8.8
date	2003.06.07.11.14.48;	author ho;	state Exp;
branches;
next	1.17.8.9;

1.17.8.9
date	2004.02.19.10.50.03;	author niklas;	state Exp;
branches;
next	1.17.8.10;

1.17.8.10
date	2004.06.05.23.11.03;	author niklas;	state Exp;
branches;
next	;

1.32.2.1
date	2002.06.11.03.39.19;	author art;	state Exp;
branches;
next	1.32.2.2;

1.32.2.2
date	2002.10.29.00.28.14;	author art;	state Exp;
branches;
next	1.32.2.3;

1.32.2.3
date	2003.05.19.21.46.09;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.73
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: conf.c,v 1.72 2016/02/26 09:10:05 natano Exp $ */
/*	$NetBSD: conf.c,v 1.44 1999/10/27 16:38:54 ragge Exp $	*/

/*-
 * Copyright (c) 1982, 1986 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)conf.c	7.18 (Berkeley) 5/9/91
 */

#include <sys/param.h>
#include <sys/systm.h>
#include <sys/buf.h>
#include <sys/ioctl.h>
#include <sys/tty.h>
#include <sys/conf.h>
#include <sys/vnode.h>

#include "mt.h"
bdev_decl(mt);

#include "rd.h"

#include "ra.h"
bdev_decl(ra);
bdev_decl(rx);

#include "vnd.h"

#include "hdc.h"
bdev_decl(hd);
bdev_decl(ry);

#include "sd.h"
#include "st.h"
#include "cd.h"

#include "ksyms.h"

struct bdevsw	bdevsw[] =
{
	bdev_notdef(),			/* 0 */
	bdev_notdef(),			/* 1 */
	bdev_notdef(),			/* 2 */
	bdev_notdef(),			/* 3 */
	bdev_swap_init(1,sw),		/* 4: swap pseudo-device */
	bdev_notdef(),			/* 5 */
	bdev_notdef(),			/* 6 */
	bdev_notdef(),			/* 7 */
	bdev_notdef(),			/* 8 */
	bdev_disk_init(NRA,ra),		/* 9: MSCP disk */
	bdev_notdef(),			/* 10 */
	bdev_notdef(),			/* 11 */
	bdev_disk_init(NRX,rx),		/* 12: RX?? on MSCP */
	bdev_notdef(),			/* 13 */
	bdev_notdef(),			/* 14 */
	bdev_tape_init(NMT,mt),		/* 15: MSCP tape */
	bdev_notdef(),			/* 16: was: KDB50/RA?? */
	bdev_notdef(),			/* 17: was: concatenated disk driver */
	bdev_disk_init(NVND,vnd),	/* 18: vnode disk driver */
	bdev_disk_init(NHD,hd),		/* 19: VS3100 ST506 disk */
	bdev_disk_init(NSD,sd),		/* 20: SCSI disk */
	bdev_tape_init(NST,st),		/* 21: SCSI tape */
	bdev_disk_init(NCD,cd),		/* 22: SCSI CD-ROM */
	bdev_disk_init(NRD,rd),		/* 23: ram disk driver */
	bdev_disk_init(NRY,ry),		/* 24: VS3100 floppy */
	bdev_notdef(),			/* 25 was: RAIDframe disk driver */
};
int	nblkdev = nitems(bdevsw);

/*
 * Console routines for VAX console.
 */
#include <dev/cons.h>

cons_decl(dz);
cons_decl(gen);
cons_decl(qsc);
cons_decl(ws);

#include "dz.h"
#include "qsc.h"
#include "wsdisplay.h"
#include "wskbd.h"

struct	consdev constab[]={
#if VAX650 || VAX630 || VAX660 || VAX670 || VAX680
#define NGEN	1
	cons_init(gen), /* Generic console type; mtpr/mfpr */
#else
#define NGEN	0
#endif
#if VAX410 || VAX43 || VAX46 || VAX48 || VAX49 || VAX53 || VAX60
#if NDZ > 0
	cons_init(dz),	/* DZ11-like serial console on VAXstations */
#endif
#endif
#ifdef VXT
#if NQSC > 0
	cons_init(qsc),	/* SC26C94 serial console on VXT2000 */
#endif
#endif
#if NWSDISPLAY > 0 || NWSKBD > 0
	cons_init(ws),	/* any other frame buffer console */
#endif

#ifdef notyet
/* We may not always use builtin console, sometimes RD */
	{ hdcnprobe, hdcninit, hdcngetc, hdcnputc },
#endif
	{ 0 }
};

#define mmread	mmrw
#define mmwrite mmrw
cdev_decl(mm);
#include "bio.h"
#include "pty.h"

cdev_decl(mt);
cdev_decl(ra);
cdev_decl(gencn);
cdev_decl(rx);
cdev_decl(hd);
cdev_decl(ry);

cdev_decl(qsc);

cdev_decl(dz);

#include "dhu.h"
cdev_decl(dhu);

#include "dl.h"
cdev_decl(dl);

#include "bpfilter.h"

#include "tun.h" 
#include "ch.h"
#include "uk.h"

#include "wsdisplay.h"
#include "wskbd.h"
#include "wsmouse.h"

#include "pf.h"

#include "systrace.h"

#include "vscsi.h"
#include "pppx.h"
#include "audio.h"
#include "fuse.h"

struct cdevsw	cdevsw[] =
{
	cdev_cn_init(1,cn),		/* 0: virtual console */
	cdev_tty_init(NDZ,dz),		/* 1: DZ11 */
	cdev_ctty_init(1,ctty),		/* 2: controlling terminal */
	cdev_mm_init(1,mm),		/* 3: /dev/{null,mem,kmem,...} */
	cdev_notdef(),			/* 4 */
	cdev_notdef(),			/* 5 */
	cdev_notdef(),			/* 6 */
	cdev_notdef(),			/* 7 was /dev/drum */
	cdev_notdef(),			/* 8 */
	cdev_disk_init(NRA,ra),		/* 9: MSCP disk interface */
	cdev_notdef(),			/* 10 */
	cdev_notdef(),			/* 11 */
	cdev_notdef(),			/* 12 */
	cdev_notdef(),			/* 13 */
	cdev_notdef(),			/* 14 */
	cdev_notdef(),			/* 15 */
	cdev_notdef(),			/* 16 */
	cdev_notdef(),			/* 17 */
	cdev_notdef(),			/* 18 */
	cdev_notdef(),			/* 19 */
	cdev_tty_init(NPTY,pts),	/* 20: pseudo-tty slave */
	cdev_ptc_init(NPTY,ptc),	/* 21: pseudo-tty master */
	cdev_notdef(),			/* 22 */
	cdev_notdef(),			/* 23 */
	cdev_notdef(),			/* 24 */
	cdev_tty_init(NGEN,gencn),	/* 25: Generic console (mtpr...) */
	cdev_notdef(),			/* 26 */
	cdev_notdef(),			/* 27 */
	cdev_notdef(),			/* 28 was LKM */
	cdev_notdef(),			/* 29 */
	cdev_disk_init(NRX,rx),		/* 30: RX?? on MSCP */
	cdev_notdef(),			/* 31 */
	cdev_notdef(),			/* 32: RL01/02 on unibus */
	cdev_log_init(1,log),		/* 33: /dev/klog */
	cdev_tty_init(NDHU,dhu),	/* 34: DHU-11 */
	cdev_notdef(),			/* 35 */
	cdev_notdef(),			/* 36 */
	cdev_notdef(),			/* 37 */
	cdev_tape_init(NMT,mt),		/* 38: MSCP tape */
	cdev_notdef(),			/* 39 */
	cdev_notdef(),			/* 40 */
	cdev_notdef(),			/* 41 */
	cdev_pf_init(NPF,pf),		/* 42: packet filter */
	cdev_notdef(),			/* 43 */
	cdev_notdef(),			/* 44  was Datakit */
	cdev_notdef(),			/* 45  was Datakit */
	cdev_notdef(),			/* 46  was Datakit */
	cdev_notdef(),			/* 47 */
	cdev_tty_init(NQSC,qsc),	/* 48: SC26C94 on VXT2000 */
	cdev_systrace_init(NSYSTRACE,systrace),	/* 49: system call tracing */
	cdev_ksyms_init(NKSYMS,ksyms),	/* 50: Kernel symbols device */
	cdev_notdef(),			/* 51 */
	cdev_notdef(),			/* 52: was: KDB50/RA?? */
	cdev_fd_init(1,filedesc),	/* 53: file descriptor pseudo-device */
	cdev_notdef(),			/* 54: was: concatenated disk driver */
	cdev_disk_init(NVND,vnd),	/* 55: vnode disk driver */
	cdev_bpf_init(NBPFILTER,bpf),	/* 56: berkeley packet filter */
	cdev_tun_init(NTUN,tun),	/* 57: tunnel filter */
	cdev_disk_init(NHD,hd),		/* 58: HDC9224/RD?? */
	cdev_disk_init(NSD,sd),		/* 59: SCSI disk */
	cdev_tape_init(NST,st),		/* 60: SCSI tape */
	cdev_disk_init(NCD,cd),		/* 61: SCSI CD-ROM */
	cdev_disk_init(NRD,rd),		/* 62: memory disk driver */
	cdev_ch_init(NCH,ch),		/* 63: SCSI autochanger */
	cdev_notdef(),			/* 64 */
	cdev_uk_init(NUK,uk),		/* 65: SCSI unknown */
	cdev_tty_init(NDL,dl),		/* 66: DL11 */
	cdev_random_init(1,random),	/* 67: random data source */
	cdev_wsdisplay_init(NWSDISPLAY, wsdisplay), /* 68: frame buffers */
	cdev_mouse_init(NWSKBD, wskbd),	/* 69: keyboards */
	cdev_mouse_init(NWSMOUSE, wsmouse), /* 70: mice */
	cdev_disk_init(NRY,ry),		/* 71: VS floppy */
	cdev_bio_init(NBIO,bio),	/* 72: ioctl tunnel */
	cdev_notdef(),			/* 73 was: RAIDframe disk driver */
	cdev_notdef(),			/* 74 */
	cdev_ptm_init(NPTY,ptm),	/* 75: pseudo-tty ptm device */
	cdev_notdef(),			/* 76 */
	cdev_notdef(),			/* 77 */
	cdev_vscsi_init(NVSCSI,vscsi),	/* 78: vscsi */
	cdev_disk_init(1,diskmap),	/* 79: disk mapper */
	cdev_pppx_init(NPPPX,pppx),	/* 80: pppx */
	cdev_audio_init(NAUDIO,audio),	/* 81: /dev/audio */
	cdev_fuse_init(NFUSE,fuse),	/* 82: fuse */
	cdev_tun_init(NTUN,tap),	/* 83: Ethernet network tunnel */
};
int	nchrdev = nitems(cdevsw);

int	mem_no = 3;	/* major device number of memory special file */

/*
 * Swapdev is a fake device implemented
 * in sw.c used only internally to get to swstrategy.
 * It cannot be provided to the users, because the
 * swstrategy routine munches the b_dev and b_blkno entries
 * before calling the appropriate driver.  This would horribly
 * confuse, e.g. the hashing routines. Instead, /dev/drum is
 * provided as a character (raw) device.
 */
dev_t	swapdev = makedev(4, 0);

int	chrtoblktbl[] = {
	NODEV,	/* 0 */
	NODEV,	/* 1 */
	NODEV,	/* 2 */
	NODEV,	/* 3 */
	NODEV,	/* 4 */
	NODEV,	/* 5 */
	NODEV,	/* 6 */
	NODEV,	/* 7 */
	NODEV,	/* 8 */
	9,	/* 9 ra */
	NODEV,	/* 10 */
	NODEV,	/* 11 */
	NODEV,	/* 12 */
	NODEV,	/* 13 */
	NODEV,	/* 14 */
	NODEV,	/* 15 */
	NODEV,	/* 16 */
	NODEV,	/* 17 */
	NODEV,	/* 18 */
	NODEV,	/* 19 */
	NODEV,	/* 20 */
	NODEV,	/* 21 */
	NODEV,	/* 22 */
	NODEV,	/* 23 */
	NODEV,	/* 24 */
	NODEV,	/* 25 */
	NODEV,	/* 26 */
	NODEV,	/* 27 */
	NODEV,	/* 28 */
	NODEV,	/* 29 */
	12,	/* 30 rx */
	NODEV,	/* 31 */
	NODEV,	/* 32 */
	NODEV,	/* 33 */
	NODEV,	/* 34 */
	NODEV,	/* 35 */
	NODEV,	/* 36 */
	NODEV,	/* 37 */
	15,	/* 38 mt */
	NODEV,	/* 39 */
	NODEV,	/* 40 */
	NODEV,	/* 41 */
	NODEV,	/* 42 */
	NODEV,	/* 43 */
	NODEV,	/* 44 */
	NODEV,	/* 45 */
	NODEV,	/* 46 */
	NODEV,	/* 47 */
	NODEV,	/* 48 */
	NODEV,	/* 49 */
	NODEV,	/* 50 */
	NODEV,	/* 51 */
	NODEV,	/* 52 */
	NODEV,	/* 53 */
	NODEV,	/* 54 */
	18,	/* 55 vnd */
	NODEV,	/* 56 */
	NODEV,	/* 57 */
	19,	/* 58 hd */
	20,	/* 59 sd */
	21,	/* 60 st */
	22,	/* 61 cd */
	23,	/* 62 rd */
	NODEV,	/* 63 ch */
	NODEV,	/* 64 */
	NODEV,	/* 65 uk */
	NODEV,	/* 66 */
	NODEV,	/* 67 */
	NODEV,	/* 68 */
	NODEV,	/* 69 */
	NODEV,	/* 70 */
	24,	/* 71 ry */
};
int nchrtoblktbl = nitems(chrtoblktbl);

/*
 * Returns true if dev is /dev/mem or /dev/kmem.
 */
int
iskmemdev(dev)
	dev_t dev;
{
	return (major(dev) == 3 && minor(dev) < 2);
}

/*
 * Returns true if dev is /dev/zero.
 * ?? Shall I use 12 as /dev/zero?
 */
int
iszerodev(dev)
	dev_t dev;
{

	return (major(dev) == 3 && minor(dev) == 12);
}

int getmajor(void *);	/* XXX used by dz_ibus and wscons, die die die */

int
getmajor(void *ptr)
{
	int i;

	for (i = 0; i < nchrdev; i++)
		if (cdevsw[i].d_open == ptr)
			return i;
	
	return (-1);
}

dev_t
getnulldev()
{
	return makedev(3, 2);
}
@


1.72
log
@Remove stale RAIDframe entries from chrtoblktbl.

While there truncate the tables to the minimum required size; chrtoblk()
and blktochr() are designed to handle a table shorter than cdevsw.

"Looks good to me" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.71 2015/10/23 15:10:53 claudio Exp $ */
@


1.71
log
@Allocate a new major for tap(4) also note that pseudo-device tun is for tap
as well. OK dlg@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.70 2014/10/09 03:59:59 tedu Exp $ */
a354 3
	NODEV,	/* 72 */
	25,	/* 73 raid */
	NODEV,	/* 74 */
@


1.70
log
@remove LKM devices
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.69 2013/06/03 15:54:47 tedu Exp $ */
d265 1
@


1.69
log
@changes for isc fuse support. not enabled. ok beck deraadt.
from Sylvestre Gallon ccna.syl gmail.com
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.68 2012/08/23 06:12:49 deraadt Exp $ */
d210 1
a210 1
	cdev_lkm_init(NLKM,lkm),	/* 28: loadable module driver */
@


1.68
log
@kill nnpfs dead
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.67 2012/04/06 15:10:40 jsing Exp $ */
d178 1
d264 1
@


1.67
log
@tedu the raidframe.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.65 2011/09/03 20:41:31 miod Exp $ */
a166 5
#ifdef NNPFS
#include <nnpfs/nnnpfs.h>
cdev_decl(nnpfs_dev);
#endif

a254 3
#ifdef NNPFS
	cdev_nnpfs_init(NNNPFS,nnpfs_dev),	/* 74: nnpfs communication device */
#else
a255 1
#endif
@


1.66
log
@ccd goes to the attic
discussed with jsing and millert
@
text
@a51 2
#include "raid.h"

d91 1
a91 1
	bdev_disk_init(NRAID,raid),	/* 25: RAIDframe disk driver */
d259 1
a259 1
	cdev_disk_init(NRAID,raid),	/* 73: RAIDframe disk driver */
@


1.65
log
@Driver for the audio chip found on VAXstation 4000. Tested on VLC, /60 and
/90.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.64 2011/07/06 18:32:59 miod Exp $ */
a51 2
#include "ccd.h"

d85 1
a85 1
	bdev_disk_init(NCCD,ccd),	/* 17: concatenated disk driver */
d242 1
a242 1
	cdev_disk_init(NCCD,ccd),	/* 54: concatenated disk driver */
d345 1
a345 1
	17,	/* 54 ccd */
@


1.64
log
@Remove support for non-microVAX, non-VAXstation, non-VXT hardware in the
VAX port. This means, 11/7xx, VAX6000 and VAX8x00 systems, as well as SBI,
CMI, BI, XMI and MASSBUS drivers.
Most of these files were not being compiled or kept in compilable state over
the years anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.63 2011/04/30 15:24:07 miod Exp $ */
d186 1
d275 1
@


1.63
log
@Plug holes in cdevsw[] to make vscsi, diskmap and pppx entries match the
numbers in comments and the MAKEDEV majors.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.62 2011/01/14 19:04:08 jasper Exp $ */
a42 12
#include "hp.h" /* 0 */
bdev_decl(hp);

#include "ht.h"
bdev_decl(ht);

#include "rk.h"
bdev_decl(rk);

#include "te.h"
bdev_decl(tm);

a45 12
#include "ts.h"
bdev_decl(ts);

#include "mu.h"
bdev_decl(mu);

#if defined(VAX750)
#define NCTU	1
#else
#define NCTU	0
#endif
bdev_decl(ctu);
a51 17
#include "up.h"
bdev_decl(up);

#include "tj.h"
bdev_decl(ut);

#include "rb.h"
bdev_decl(idc);

#include "uu.h"
bdev_decl(uu);

#if 0
#include "rl.h"
bdev_decl(rl);
#endif

d70 4
a73 4
	bdev_disk_init(NHP,hp),		/* 0: RP0?/RM0? */
	bdev_tape_init(NHT,ht),		/* 1: TU77 w/ TM03 */
	bdev_disk_init(NUP,up),		/* 2: SC-21/SC-31 */
	bdev_disk_init(NRK,rk),		/* 3: RK06/07 */
d75 4
a78 4
	bdev_tape_init(NTE,tm),		/* 5: TM11/TE10 */
	bdev_tape_init(NTS,ts),		/* 6: TS11 */
	bdev_tape_init(NMU,mu),		/* 7: TU78 */
	bdev_tape_init(NCTU,ctu),	/* 8: Console TU58 on 730/750 */
d80 2
a81 2
	bdev_tape_init(NTJ,ut),		/* 10: TU45 */
	bdev_disk_init(NRB,idc),	/* 11: IDC (RB730) */
d83 2
a84 2
	bdev_disk_init(NUU,uu),		/* 13: TU58 on DL11 */
	bdev_notdef(),			/* 14: RL01/02 */
a105 1
cons_decl(qd);
a109 1
#include "qd.h"
a110 1
#include "qv.h"
d115 1
a115 2
#if VAX8600 || VAX8200 || VAX780 || VAX750 || VAX650 || VAX630 || VAX660 || \
    VAX670 || VAX680
a130 8
#if VAX650 || VAX630
#if NQV
	cons_init(qv),	/* QVSS/QDSS bit-mapped console driver */
#endif
#if NQD
	cons_init(qd),
#endif
#endif
a141 34
/* Special for console storage */
#define dev_type_rw(n)	int n(dev_t, int, int, struct proc *)

/* plotters - open, close, write, ioctl, poll*/
#define cdev_plotter_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	dev_init(c,n,write), dev_init(c,n,ioctl), (dev_type_stop((*))) enodev, \
	0, dev_init(c,n,poll), (dev_type_mmap((*))) enodev }

/* console mass storage - open, close, read/write */
#define cdev_cnstore_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	dev_init(c,n,write), (dev_type_ioctl((*))) enodev, \
	(dev_type_stop((*))) enodev, 0, (dev_type_poll((*))) enodev, \
	(dev_type_mmap((*))) enodev }

#define cdev_lp_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) enodev, \
	dev_init(c,n,write), (dev_type_ioctl((*))) enodev, \
	(dev_type_stop((*))) enodev, 0, seltrue, (dev_type_mmap((*))) enodev }

/* graphic display adapters */
#define cdev_graph_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	dev_init(c,n,write), dev_init(c,n,ioctl), dev_init(c,n,stop), \
	0, dev_init(c,n,poll), (dev_type_mmap((*))) enodev }

/* Ingres */
#define cdev_ingres_init(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), (dev_type_read((*))) nullop, \
	(dev_type_write((*))) nullop, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) nullop, 0, (dev_type_poll((*))) nullop, \
	(dev_type_mmap((*))) enodev }

a147 3
cdev_decl(hp);
cdev_decl(rk);
cdev_decl(tm);
a148 2
cdev_decl(ts);
cdev_decl(mu);
a149 4
cdev_decl(up);
cdev_decl(ut);
cdev_decl(idc);
cdev_decl(fd);
a151 3
#if 0
cdev_decl(rl);
#endif
a154 37
#include "ct.h"
cdev_decl(ct);
#include "dh.h"
cdev_decl(dh);
#include "dmf.h"
cdev_decl(dmf);

#include "np.h"
cdev_decl(np);

#if VAX8600
#define NCRL 1
#else
#define NCRL 0
#endif
#define crlread crlrw
#define crlwrite crlrw
cdev_decl(crl);

#if VAX8200
#define NCRX 1
#else
#define NCRX 0
#endif
#define crxread crxrw
#define crxwrite crxrw
cdev_decl(crx);

#if VAX780
#define NCFL 1
#else
#define NCFL 0
#endif
#define cflread cflrw
#define cflwrite cflrw
cdev_decl(cfl);

a158 24
#include "vp.h"
cdev_decl(vp);

#include "lp.h"
cdev_decl(lp);

#include "va.h"
cdev_decl(va);

#include "lpa.h"
cdev_decl(lpa);

#include "dn.h"
cdev_decl(dn);

#include "ik.h"
cdev_decl(ik);

#include "ps.h"
cdev_decl(ps);

#include "ad.h"
cdev_decl(ad);

a161 6
#include "dmz.h"
cdev_decl(dmz);

cdev_decl(qv);
cdev_decl(qd);

a164 7
#if defined(INGRES)
#define NII 1
#else
#define NII 0
#endif
cdev_decl(ii);

d193 1
a193 1
	cdev_disk_init(NHP,hp),		/* 4: Massbuss disk */
d195 1
a195 1
	cdev_plotter_init(NVP,vp),	/* 6: Versatec plotter */
d197 1
a197 1
	cdev_cnstore_init(NCFL,cfl),	/* 8: 11/780 console floppy */
d199 10
a208 10
	cdev_plotter_init(NVA,va),	/* 10: Benson-Varian plotter */
	cdev_disk_init(NRK,rk),		/* 11: RK06/07 */
	cdev_tty_init(NDH,dh),		/* 12: DH-11/DM-11 */
	cdev_disk_init(NUP,up),		/* 13: SC-21/SC-31 */
	cdev_tape_init(NTE,tm),		/* 14: TM11/TE10 */
	cdev_lp_init(NLP,lp),		/* 15: LP-11 line printer */
	cdev_tape_init(NTS,ts),		/* 16: TS11 */
	cdev_tape_init(NTJ,ut),		/* 17: TU45 */
	cdev_lp_init(NCT,ct),		/* 18: phototypesetter interface */
	cdev_tape_init(NMU,mu),		/* 19: TU78 */
d211 3
a213 3
	cdev_tty_init(NDMF,dmf),	/* 22: DMF32 */
	cdev_disk_init(NRB,idc),	/* 23: IDC (RB730) */
	cdev_lp_init(NDN,dn),		/* 24: DN-11 autocall unit */
d215 2
a216 2
	cdev_audio_init(NLPA,lpa),	/* 26 ??? */
	cdev_graph_init(NPS,ps),	/* 27: E/S graphics device */
d218 1
a218 1
	cdev_ch_init(NAD,ad),		/* 29: DT A/D converter */
d220 1
a220 1
	cdev_graph_init(NIK,ik),	/* 31: Ikonas frame buffer */
d224 1
a224 1
	cdev_cnstore_init(NCRL,crl),	/* 35: Console RL02 on 8600 */
d226 1
a226 1
	cdev_tty_init(NDMZ,dmz),	/* 37: DMZ32 */
d228 3
a230 3
	cdev_audio_init(NNP,np),	/* 39: NP Intelligent Board */
	cdev_graph_init(NQV,qv),	/* 40: QVSS graphic display */
	cdev_graph_init(NQD,qd),	/* 41: QDSS graphic display */
d232 1
a232 1
	cdev_ingres_init(NII,ii),	/* 43: Ingres device */
d240 1
a240 1
	cdev_cnstore_init(NCRX,crx),	/* 51: Console RX50 at 8200 */
d295 1
a295 1
	0,	/* 4 */
d300 1
a300 1
	9,	/* 9 */
d302 1
a302 1
	3,	/* 11 */
d304 2
a305 2
	2,	/* 13 */
	5,	/* 14 */
d307 2
a308 2
	6,	/* 16 */
	10,	/* 17 */
d310 1
a310 1
	7,	/* 19 */
d314 1
a314 1
	11,	/* 23 */
d321 1
a321 1
	12,	/* 30 */
d329 1
a329 1
	15,	/* 38 */
d345 2
a346 2
	17,	/* 54 */
	18,	/* 55 */
d349 6
a354 6
	19,	/* 58 */
	20,	/* 59 */
	21,	/* 60 */
	22,	/* 61 */
	23,	/* 62 */
	NODEV,	/* 63 */
d356 1
a356 1
	NODEV,	/* 65 */
d362 1
a362 1
	24,	/* 71 */
d364 1
a364 1
	25,	/* 73 */
@


1.62
log
@- use nitems()

"doesn't hurt" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.61 2010/09/23 05:02:14 claudio Exp $ */
d442 2
@


1.61
log
@Add pppx(4) to the cdevs of the remaining archs.
OK dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.60 2010/07/03 03:59:17 krw Exp $ */
d138 1
a138 1
int	nblkdev = sizeof(bdevsw) / sizeof(bdevsw[0]);
d446 1
a446 1
int	nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);
d538 1
a538 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.60
log
@No more ss(4) or usscanner(4). Unused, unloved and unmaintained.
General huzzahs.

"go for it" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.59 2010/06/09 15:25:33 jsing Exp $ */
d358 1
d444 1
@


1.59
log
@Wire up device nodes for disk mapper.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.57 2009/06/03 14:45:53 jj Exp $ */
a341 1
#include "ss.h"
d425 1
a425 1
	cdev_scanner_init(NSS,ss),	/* 64: SCSI scanner */
@


1.58
log
@wire vscsi up to a cdev

for claudio@@ ok deraadt@@
@
text
@d443 1
@


1.57
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.56 2009/01/25 17:30:49 miod Exp $ */
d358 2
d442 1
@


1.56
log
@Remove /dev/drum and related code.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.55 2008/08/18 23:19:29 miod Exp $ */
d345 3
a347 3
#ifdef XFS
#include <xfs/nxfs.h>
cdev_decl(xfs_dev);
d434 2
a435 2
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),	/* 74: xfs communication device */
@


1.55
log
@Add support for the ``Firefox'' VAXstation 3520/3540/3820/3840 workstations,
currently limited to serial console and a single processor working.

All ``on-board'' devices, including the Q-bus adapter, but except for
the frame buffer, are supported. The machine will boot over the network
or from SCSI devices.

Lots of thanks to Al Kossow for www.bitsavers.org, on which I found the
technical documentation allowing me to complete this port (which was
lacking at the time I got that machine...).
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.54 2008/05/14 20:49:48 miod Exp $ */
d367 1
a367 1
	cdev_swap_init(1,sw),		/* 7 */
@


1.54
log
@Fix more chrtoblktbl[] sloppyness, and add proper block st nodes to *ppc and
sgi.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.53 2008/04/08 14:31:54 claudio Exp $ */
d166 1
a166 1
#if VAX410 || VAX43 || VAX46 || VAX48 || VAX49 || VAX53
@


1.53
log
@Split the cdev makro for bpftun into two seperate definitions. tun(4) and
bpf(4) are different enough so that the split makes sense -- this is necessary
to make bpf(4) cloneable.
requested deraadt@@, OK thib@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.52 2007/05/28 22:26:03 todd Exp $ */
d462 1
a462 1
	1,	/* 5 */
d489 1
a489 1
	14,	/* 32 */
d509 1
a509 1
	16,	/* 52 */
d528 1
a528 1
	NODEV,	/* 71 */
@


1.52
log
@bio for all archs, ok krw@@ kettenis@@ sounds good marco@@ go for it deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.51 2007/05/27 01:50:36 todd Exp $ */
d416 2
a417 2
	cdev_bpftun_init(NBPFILTER,bpf),/* 56: berkeley packet filter */
	cdev_bpftun_init(NTUN,tun),	/* 57: tunnel filter */
@


1.51
log
@back out bio, breaks dlg's sparc64 v215
prompted by/ok dlg@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.50 2007/05/26 19:54:24 todd Exp $ */
d232 1
d432 1
a432 1
	cdev_notdef(),			/* 72: was: SCSI bus */
@


1.50
log
@prodded by marco, enable bio everywhere
grudgingly ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.49 2006/08/27 16:55:41 miod Exp $ */
a231 1
#include "bio.h"
d364 1
a364 1
	cdev_bio_init(NBIO,bio),	/* 5: ioctl tunnel */
@


1.49
log
@Work-in-progress VXT2000 support (commented out in GENERIC so far). Glass
console works on color model, serial console works, ethernet attaches but
does not work correctly yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.48 2006/07/30 12:32:43 miod Exp $ */
d232 1
d365 1
a365 1
	cdev_notdef(),			/* 5 */
@


1.48
log
@wskbd and wsmouse nodes.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.47 2006/07/29 14:18:57 miod Exp $ */
d148 1
d151 1
d153 1
d167 1
d170 6
d185 1
a185 1
	cons_init(ws),
d290 2
a291 1
#include "dz.h"
d407 1
a407 1
	cdev_notdef(),			/* 48 */
@


1.47
log
@Rewrite glass console detection and initialization code, it's simpler and
will not allocate frame buffer resources at probe time. A few buglets fixed
while doing so.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.46 2006/07/28 21:07:05 miod Exp $ */
d416 3
a418 3
	cdev_wsdisplay_init(NWSDISPLAY, wsdisplay),	/* 68: workstation console */
	cdev_notdef(),			/* 69 */
	cdev_notdef(),			/* 70 */
@


1.46
log
@Driver for the color frame buffer option on VAXstation 3100 models 3x/4x.
Still a few rough edges to polish, but nevertheless usable; 4bpp flavour
untested.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.45 2006/07/24 22:19:54 miod Exp $ */
d145 1
a145 33
#include "wskbd.h"
#include "gpx.h"
#include "lcg.h"
#include "lcspx.h"
#include "smg.h"
#if NGPX > 0 || NLCG > 0 || NLCSPX > 0 || NSMG > 0
#if NWSKBD > 0
#define gpxcngetc wskbd_cngetc
#define lcgcngetc wskbd_cngetc
#define lcspxcngetc wskbd_cngetc
#define smgcngetc wskbd_cngetc
#else
static int
dummycngetc(dev_t dev)
{
	return 0;
}
#define gpxcngetc dummycngetc
#define lcgcngetc dummycngetc
#define lcspxcngetc dummycngetc
#define smgcngetc dummycngetc
#endif	/* NWSKBD > 0 */
#endif	/* NGPX > 0 || NLCG > 0 || NLCSPX > 0 || NSMG > 0 */

#define gpxcnputc wsdisplay_cnputc
#define lcgcnputc wsdisplay_cnputc
#define lcspxcnputc wsdisplay_cnputc
#define smgcnputc wsdisplay_cnputc
#define	gpxcnpollc nullcnpollc
#define	lcgcnpollc nullcnpollc
#define	lcspxcnpollc nullcnpollc
#define	smgcnpollc nullcnpollc

a146 1
cons_decl(dz);
d148 3
a150 4
cons_decl(gpx);
cons_decl(lcg);
cons_decl(lcspx);
cons_decl(smg);
d152 2
a153 1
#include "qd.h"
d174 2
a175 11
#if NGPX
	cons_init(gpx),
#endif
#if NLCG
	cons_init(lcg),
#endif
#if NLCSPX
	cons_init(lcspx),
#endif
#if NSMG
	cons_init(smg),
d398 1
a398 1
	cdev_ksyms_init(NKSYMS,ksyms),  /* 50: Kernel symbols device */
d415 1
a415 1
    cdev_random_init(1,random), /* 67: random data source */
d420 1
a420 1
	cdev_notdef(),		/* 72: was: SCSI bus */
d423 1
a423 1
	cdev_xfs_init(NXFS,xfs_dev),    /* 74: xfs communication device */
d545 1
a545 1
int getmajor(void *);	/* XXX used by dz_ibus and smg, die die die */
@


1.45
log
@Driver for the VS4000/90 frame buffer, adapted from NetBSD (ragge) and
Blaz Antonic's work, no acceleration yet, untested due to the lack of
hardware, but enough sacrifices were made to the RAMDAC Gods.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.44 2006/07/24 20:35:08 miod Exp $ */
d146 1
d150 1
a150 1
#if NLCG > 0 || NLCSPX > 0 || NSMG > 0
d152 1
d162 1
d167 1
a167 1
#endif	/* NLCG > 0 || NLCSPX > 0 || NSMG > 0 */
d169 1
d173 1
d181 1
d206 3
@


1.44
log
@Add a wsdisplay driver for the frame buffer found on VS4000/60 and VLC
systems, based on Blaz Antonic's work and adjusted to fit modern wscons
requirements; currently running as a dumb frame buffer, acceleration code
going in soon.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.43 2004/02/10 01:31:21 millert Exp $ */
d146 2
d149 1
a149 2
#include "lcg.h"
#if NLCG > 0 || NSMG > 0
d152 1
d161 1
d164 1
a164 1
#endif	/* NLCG > 0 || NSMG > 0 */
d167 1
d170 1
d177 1
d203 3
@


1.43
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.42 2003/09/23 16:51:12 millert Exp $ */
d147 2
a148 1
#if NSMG > 0
d150 1
d154 1
a154 1
smgcngetc(dev_t dev)
d158 2
d161 1
a161 1
#endif	/* NSMG > 0 */
d163 1
d165 1
d171 1
d195 3
d579 2
a580 1
	panic("getmajor");
@


1.42
log
@Replace select backends with poll backends.  selscan() and pollscan()
now call the poll backend.  With this change we implement greater
poll(2) functionality instead of emulating it via the select backend.
Adapted from NetBSD and including some changes from FreeBSD.
Tested by many, deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.41 2003/06/26 13:06:26 miod Exp $ */
d441 1
@


1.41
log
@Compile the vax kernel with -Wmissing-prototypes -Wstrict-prototypes now.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.40 2003/06/02 23:27:58 millert Exp $ */
d202 1
a202 1
/* plotters - open, close, write, ioctl, select*/
d206 1
a206 1
	0, dev_init(c,n,select), (dev_type_mmap((*))) enodev }
d212 1
a212 1
	(dev_type_stop((*))) enodev, 0, (dev_type_select((*))) enodev, \
d224 1
a224 1
	0, dev_init(c,n,select), (dev_type_mmap((*))) enodev }
d230 1
a230 1
	(dev_type_stop((*))) nullop, 0, (dev_type_select((*))) nullop, \
@


1.40
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.39 2003/05/14 00:20:37 tedu Exp $ */
d557 2
@


1.39
log
@add {b,c}devsw_lookup convenience functions.
move chrtoblk and blktochr into MI code.
tested on several archs and ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.38 2002/12/05 02:49:55 kjc Exp $ */
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.38
log
@remove altq entries.
altq is merged into pf and handled through pf.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.37 2002/07/10 22:08:47 mickey Exp $ */
d538 1
a538 33

dev_t
chrtoblk(dev)
	dev_t dev;
{
	int blkmaj;

	if (major(dev) >= nchrdev ||
	    major(dev) > sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]))
		return (NODEV);
	blkmaj = chrtoblktbl[major(dev)];
	if (blkmaj == NODEV)
		return (NODEV);
	return (makedev(blkmaj, minor(dev)));
}

/*
 * Convert a character device number to a block device number.
 */
dev_t
blktochr(dev)
    dev_t dev;
{
    int blkmaj = major(dev);
    int i;

    if (blkmaj >= nblkdev)
        return (NODEV);
    for (i = 0; i < sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]); i++)
        if (blkmaj == chrtoblktbl[i])
            return (makedev(i, minor(dev)));
    return (NODEV);
}
@


1.37
log
@proper cdev_decl(ksyms), fix ksyms's broken functions
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.36 2002/06/24 10:41:13 hugh Exp $ */
a361 2
#include <altq/altqconf.h>

a444 1
	cdev_altq_init(NALTQ,altq),	/* 75: ALTQ control interface */
@


1.36
log
@hello missing cdevsw entries
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.35 2002/06/12 12:36:14 hugh Exp $ */
a111 1
cdev_decl(ksyms);
@


1.35
log
@bdevtomaj worked well, but is no longer needed.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.34 2002/05/16 21:11:19 miod Exp $ */
d438 2
@


1.34
log
@Add systrace support to all the remaining architectures.

Tested by various people on various platforms, I'm willing to fix any
breakage this causes.

ok niels@@ deraadt@@ and mickey@@ (after his comments were applied)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.33 2002/03/14 01:26:48 millert Exp $ */
a46 2
#include <vax/include/rpb.h> 

a143 40

struct bdevmajtpl {
	int bdev;
	int maj;
} bdevtpls[] = {
	{ BDEV_HP,	0 },
	{ BDEV_RK,	3 }, 
	{ BDEV_UDA,	9 },
	{ BDEV_IDC,	11 },
	{ BDEV_RL,	14 },
	{ BDEV_KDB,	16 },
	{ BDEV_RD,	19 },
	{ BDEV_SD,	20 },
	{ BDEV_SDN,	20 },
	{ BDEV_ST,	21 },
	
	/* some things need these network devices, do not change them */
	{ BDEV_QE, BDEV_QE },
	{ BDEV_DE, BDEV_DE },
	{ BDEV_NI, BDEV_NI },
	{ BDEV_LE, BDEV_LE },
	{ BDEV_ZE, BDEV_ZE },

	{ -1, -1 }
};

/* 
 * BDEV_* -> major table (for bootable block devices)
 */
int	bdevtomaj (bdev)
	int bdev;
{
	struct bdevmajtpl *bd; 

	for(bd = bdevtpls; bd; bd++) {
		if(bdev == bd->bdev || bd->bdev == -1)
			return bd->maj;
	}
	return bd != NULL ? bd->maj : NULL;
}
@


1.33
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.32 2001/12/13 09:20:47 hugh Exp $ */
d407 2
d460 1
a460 1
	cdev_notdef(),			/* 49 */
@


1.32
log
@Add major for uda to the bootdev table.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.31 2001/12/11 23:19:02 miod Exp $ */
d247 1
a247 1
#define dev_type_rw(n)	int n __P((dev_t, int, int, struct proc *))
@


1.32.2.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.32 2001/12/13 09:20:47 hugh Exp $ */
d247 1
a247 1
#define dev_type_rw(n)	int n(dev_t, int, int, struct proc *)
a406 2
#include "systrace.h"

d458 1
a458 1
	cdev_systrace_init(NSYSTRACE,systrace),	/* 49: system call tracing */
@


1.32.2.2
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.32.2.1 2002/06/11 03:39:19 art Exp $ */
d47 2
d114 1
d147 40
a479 2
	cdev_notdef(),			/* 69 */
	cdev_notdef(),			/* 70 */
@


1.32.2.3
log
@sync
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d362 2
d447 1
d541 33
a573 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.31
log
@Remove declarations that already exist in <sys/conf.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.30 2001/09/28 02:53:14 mickey Exp $ */
d153 2
a154 1
	{ BDEV_IDC, 11 },
@


1.30
log
@move cdev_decl(pf) into it's proper place, kill cdev_decl(ipl) at the same time
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.29 2001/08/06 22:34:44 mickey Exp $ */
a99 1
bdev_decl(ccd);
a101 1
bdev_decl(raid);
a103 1
bdev_decl(vnd);
a109 2
bdev_decl(sd);

a110 2
bdev_decl(st);

a111 1
bdev_decl(cd);
d192 2
d202 2
a203 1
#endif
a213 1
#include "smg.h"
a278 2
cdev_decl(cn);
cdev_decl(ctty);
a282 7
#define ptstty		ptytty
#define ptsioctl	ptyioctl
cdev_decl(pts);
#define ptctty		ptytty
#define ptcioctl	ptyioctl
cdev_decl(ptc);
cdev_decl(log);
a299 2
cdev_decl(ccd);
cdev_decl(raid);
a301 4
cdev_decl(sd);
cdev_decl(st);

cdev_decl(rd);
a385 2
cdev_decl(vnd);

a386 1
cdev_decl(bpf);
a388 2
cdev_decl(tun);
cdev_decl(cd);
a389 1
cdev_decl(ch);
a390 1
cdev_decl(ss);
a391 3
cdev_decl(uk);

bdev_decl(rd);
a396 2

dev_decl(filedesc,open);
@


1.29
log
@remove vm_conf.h; art@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.28 2001/06/27 06:56:30 kjc Exp $ */
a435 1
cdev_decl(pf);
@


1.28
log
@add the ALTQ device to the rest of the architectures.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.27 2001/06/25 03:20:22 kjell Exp $ */
a57 2
bdev_decl(sw);

a289 1
cdev_decl(sw);
@


1.27
log
@add pf device on all architectures.
fix my previously bogus MAKEDEVs.
If you used pf on a non-i386. the major device number has changed,
and you'll need to recreate /dev/pf
ok theo
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.26 2001/05/16 22:15:18 hugh Exp $ */
d441 2
d522 1
a522 1

@


1.26
log
@Blind merge of wscons support from NetBSD/vax. Perhaps someone with a
supported framebuffer (simple monochrome) can finish this off.
If anyone has run across docs for LCG or SPGFX, please get in touch.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.25 2001/04/18 16:15:20 hugh Exp $ */
a125 6
#ifdef IPFILTER
#define NIPF 1
#else
#define NIPF 0
#endif

d438 3
d485 1
a485 1
	cdev_gen_ipf(NIPF,ipl),	/* 42: Packet filter */
@


1.25
log
@Cover rl with #ifdef's and put it to sleep. ZZzz..
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.24 2001/03/15 20:32:11 bjc Exp $ */
d207 3
a209 3
#include "lkc.h"
#if NLKC
#define	smgcngetc lkccngetc
d211 5
a215 1
#define	smgcngetc nullcngetc
d671 11
@


1.24
log
@wsdisplay/wskbd/wsmouse devices
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.23 2001/02/24 10:31:58 hugh Exp $ */
d96 1
d99 1
d148 1
a148 1
	bdev_disk_init(NRL,rl),		/* 14: RL01/02 */
d317 1
d319 1
d474 1
a474 1
	cdev_disk_init(NRL,rl),		/* 32: RL01/02 on unibus */
@


1.23
log
@Support for VAX 4000/{2,4,5}00 from Michael Kukat. untested.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.22 2000/10/31 02:30:57 hugh Exp $ */
a286 7
/* open, close, read, write, ioctl, stop, tty, select, mmap */
#define cdev_wscons_init(c,n) { \
        dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
        dev_init(c,n,write), dev_init(c,n,ioctl), dev_init(c,n,stop), \
        dev_init(c,n,tty), ttselect, dev_init(c,n,mmap), D_TTY }


d432 3
a434 2
#include "wscons.h"
cdev_decl(wscons);
d506 1
a506 1
	cdev_wscons_init(NWSCONS, wscons),	/* 68: workstation console */
@


1.22
log
@ramdisk support for vax.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.21 2000/10/09 23:11:57 bjc Exp $ */
d224 2
a225 1
#if VAX8600 || VAX8200 || VAX780 || VAX750 || VAX650 || VAX630 || VAX670
@


1.21
log
@code to get asc* (ncr 53c9x) working; most of this from netbsd
also, write the correct stuff in cpu_coredump (vm_machdep.c)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.20 2000/09/26 14:03:55 art Exp $ */
d151 1
a151 1
	bdev_disk_init(NHD,hd),	/* 19: VS3100 ST506 disk */
d501 1
a501 1
	cdev_disk_init(NHD,hd),	/* 58: HDC9224/RD?? */
@


1.20
log
@Implement getnulldev that returns the dev_t for "/dev/null".
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.19 2000/06/01 00:02:11 bjc Exp $ */
d172 1
d197 1
d230 1
a230 1
#if VAX410 || VAX43 || VAX46 || VAX48 || VAX49
@


1.19
log
@ramdisk stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.18 2000/04/27 01:10:11 bjc Exp $ */
d668 5
@


1.18
log
@sync with netbsd of early april; some archs still untested
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17 1998/09/25 09:20:54 todd Exp $ */
d78 1
d155 1
a155 1
	bdev_notdef(),		/* 23: was: memory disk driver */
d327 2
d427 2
d503 1
a503 1
	cdev_notdef(),				/* 62: was: memory disk driver */
@


1.17
log
@o xfs is in the house (thanks art, for getting me started)
o all but vax are major 51
@
text
@d1 2
a2 2
/*	$OpenBSD: conf.c,v 1.16 1998/07/07 06:56:14 deraadt Exp $ */
/*	$NetBSD: conf.c,v 1.28 1997/02/04 19:13:17 ragge Exp $	*/
d47 2
d81 1
a91 3
#include "rx.h"
bdev_decl(rx);

d101 3
d108 2
a109 1
bdev_decl(hdc);
d120 9
d143 1
a143 1
	bdev_disk_init(NRX,rx),		/* 12: RX01/02 on unibus */
d150 1
a150 1
	bdev_disk_init(NHDC,hdc),	/* 19: HDC9224/RD?? */
d154 3
a156 1
	bdev_notdef(),			/* 23: was: memory disk driver */
d160 37
d202 10
a211 1
#define gencnpollc	nullcnpollc
a212 1
#define dzcnpollc	nullcnpollc
d214 5
d221 1
a221 1
#if VAX8600 || VAX780 || VAX750 || VAX650 || VAX630
d227 1
a227 2
#if VAX410 || VAX43
#define NDZCN	1
a228 2
#else
#define NDZCN	0
d230 2
a231 1
#if 0 /* VAX410 || VAX43 || VAX650 || VAX630 */
d233 2
d237 4
d244 1
a244 1
	{ rdcnprobe, rdcninit, rdcngetc, rdcnputc },
d252 1
a252 1
/* plotters - open, close, write, ioctl, select */
d283 5
a316 1
cdev_decl(dzcn);
d320 3
a322 1
cdev_decl(hdc);
d345 1
a345 1
#if VAX8200 && 0
a353 1
#ifdef notyet
a361 1
#endif
a395 1
#include "qv.h"
a396 2

#include "qd.h"
a398 6
#ifdef IPFILTER
#define NIPF 1
#else
#define NIPF 0
#endif

d429 1
a429 1
cdev_decl(random);
d431 2
a432 1
dev_decl(filedesc,open);
a443 1
#ifdef notyet
a444 3
#else
	cdev_notdef(),			/* 8 */
#endif
d466 1
a466 1
	cdev_disk_init(NRX,rx),		/* 30: RX01/02 on unibus */
d472 1
a472 1
	cdev_tty_init(NDZCN,dzcn),	/* 36: DZ11-like console on VAXst. */
d478 1
a478 1
	cdev_gen_ipf(NIPF,ipl),		/* 42: ip filtering */
d486 1
a486 5
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),	/* 50: xfs communication device */
#else
	cdev_notdef(),			/* 50 */
#endif
d494 1
a494 1
	cdev_disk_init(NHDC,hdc),	/* 58: HDC9224/RD?? */
d498 1
a498 1
	cdev_notdef(),			/* 62: was: memory disk driver */
d502 12
a513 2
	cdev_random_init(1,random),	/* 66: random data source */
	cdev_tty_init(NDL,dl),		/* 67; DL11 */
d594 12
d608 1
a608 1
int
d612 2
d624 18
a647 1

a662 17
/*
 * Convert a character device number to a block device number.
 */
dev_t
blktochr(dev)
	dev_t dev;
{
	int blkmaj = major(dev);
	int i;

	if (blkmaj >= nblkdev)
		return (NODEV);
	for (i = 0; i < sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]); i++)
		if (blkmaj == chrtoblktbl[i])
			return (makedev(i, minor(dev)));
	return (NODEV);
}
@


1.17.8.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 2
a2 2
/*	$OpenBSD: conf.c,v 1.24 2001/03/15 20:32:11 bjc Exp $ */
/*	$NetBSD: conf.c,v 1.44 1999/10/27 16:38:54 ragge Exp $	*/
a46 2
#include <vax/include/rpb.h> 

a75 1
#include "rd.h"
a78 1
bdev_decl(rx);
d89 3
a100 3
#include "raid.h"
bdev_decl(raid);

d105 1
a105 2
bdev_decl(hd);
bdev_decl(ry);
a115 9
#include "ksyms.h"
cdev_decl(ksyms);

#ifdef IPFILTER
#define NIPF 1
#else
#define NIPF 0
#endif

d130 1
a130 1
	bdev_disk_init(NRX,rx),		/* 12: RX?? on MSCP */
d137 1
a137 1
	bdev_disk_init(NHD,hd),		/* 19: VS3100 ST506 disk */
d141 1
a141 3
	bdev_disk_init(NRD,rd),		/* 23: ram disk driver */
	bdev_disk_init(NRY,ry),		/* 24: VS3100 floppy */
	bdev_disk_init(NRAID,raid),	/* 25: RAIDframe disk driver */
a144 39
struct bdevmajtpl {
	int bdev;
	int maj;
} bdevtpls[] = {
	{ BDEV_HP,	0 },
	{ BDEV_RK,	3 }, 
	{ BDEV_IDC, 11 },
	{ BDEV_RL,	14 },
	{ BDEV_KDB,	16 },
	{ BDEV_RD,	19 },
	{ BDEV_SD,	20 },
	{ BDEV_SDN,	20 },
	{ BDEV_ST,	21 },
	
	/* some things need these network devices, do not change them */
	{ BDEV_QE, BDEV_QE },
	{ BDEV_DE, BDEV_DE },
	{ BDEV_NI, BDEV_NI },
	{ BDEV_LE, BDEV_LE },
	{ BDEV_ZE, BDEV_ZE },

	{ -1, -1 }
};

/* 
 * BDEV_* -> major table (for bootable block devices)
 */
int	bdevtomaj (bdev)
	int bdev;
{
	struct bdevmajtpl *bd; 

	for(bd = bdevtpls; bd; bd++) {
		if(bdev == bd->bdev || bd->bdev == -1)
			return bd->maj;
	}
	return bd != NULL ? bd->maj : NULL;
}

d150 1
a150 10
#include "lkc.h"
#if NLKC
#define	smgcngetc lkccngetc
#else
#define	smgcngetc nullcngetc
#endif

#define smgcnputc wsdisplay_cnputc
#define	smgcnpollc nullcnpollc

d152 1
a153 5
cons_decl(qd);
cons_decl(smg);
#include "qv.h"
#include "qd.h"
#include "smg.h"
d156 1
a156 2
#if VAX8600 || VAX8200 || VAX780 || VAX750 || VAX650 || VAX630 || VAX660 || \
    VAX670 || VAX680
d162 2
a163 1
#if VAX410 || VAX43 || VAX46 || VAX48 || VAX49 || VAX53
d165 2
d168 1
a168 2
#if VAX650 || VAX630
#if NQV
a169 2
#endif
#if NQD
a171 4
#endif
#if NSMG
	cons_init(smg),
#endif
d175 1
a175 1
	{ hdcnprobe, hdcninit, hdcngetc, hdcnputc },
d183 1
a183 1
/* plotters - open, close, write, ioctl, select*/
d214 2
d243 1
d247 1
a247 3
cdev_decl(raid);
cdev_decl(hd);
cdev_decl(ry);
a250 2
cdev_decl(rd);

d270 1
a270 1
#if VAX8200
d279 1
d288 1
d323 1
d325 2
d329 6
a359 2
bdev_decl(rd);

d365 2
a368 4
#include "wsdisplay.h"
#include "wskbd.h"
#include "wsmouse.h"

d379 1
d381 3
d405 1
a405 1
	cdev_disk_init(NRX,rx),		/* 30: RX?? on MSCP */
d411 1
a411 1
	cdev_notdef(),			/* 36 */
d417 1
a417 1
	cdev_gen_ipf(NIPF,ipl),	/* 42: Packet filter */
d425 5
a429 1
	cdev_ksyms_init(NKSYMS,ksyms),  /* 50: Kernel symbols device */
d437 1
a437 1
	cdev_disk_init(NHD,hd),		/* 58: HDC9224/RD?? */
d441 1
a441 1
	cdev_disk_init(NRD,rd),		/* 62: memory disk driver */
d445 2
a446 12
	cdev_tty_init(NDL,dl),		/* 66: DL11 */
    cdev_random_init(1,random), /* 67: random data source */
	cdev_wsdisplay_init(NWSDISPLAY, wsdisplay),	/* 68: workstation console */
	cdev_disk_init(NRY,ry),		/* 71: VS floppy */
	cdev_notdef(),		/* 72: was: SCSI bus */
	cdev_disk_init(NRAID,raid),	/* 73: RAIDframe disk driver */
#ifdef XFS
	cdev_xfs_init(NXFS,xfs_dev),    /* 74: xfs communication device */
#else
	cdev_notdef(),			/* 74 */
#endif

a526 12
	NODEV,	/* 63 */
	NODEV,	/* 64 */
	NODEV,	/* 65 */
	NODEV,	/* 66 */
	NODEV,	/* 67 */
	NODEV,	/* 68 */
	NODEV,	/* 69 */
	NODEV,	/* 70 */
	NODEV,	/* 71 */
	NODEV,	/* 72 */
	25,	/* 73 */
	NODEV,	/* 74 */
d529 1
a529 1
dev_t
a532 2
	int blkmaj;

a542 18
 * Convert a character device number to a block device number.
 */
dev_t
blktochr(dev)
    dev_t dev;
{
    int blkmaj = major(dev);
    int i;

    if (blkmaj >= nblkdev)
        return (NODEV);
    for (i = 0; i < sizeof(chrtoblktbl)/sizeof(chrtoblktbl[0]); i++)
        if (blkmaj == chrtoblktbl[i])
            return (makedev(i, minor(dev)));
    return (NODEV);
}

/*
d549 1
d565 3
d569 2
a570 1
getnulldev()
d572 9
a580 1
	return makedev(3, 2);
@


1.17.8.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17.8.1 2001/05/14 21:38:44 niklas Exp $ */
a95 1
#if 0
a97 1
#endif
d124 6
d146 1
a146 1
	bdev_notdef(),			/* 14: RL01/02 */
d205 3
a207 3
#include "wskbd.h"
#if NWSKBD > 0
#define smgcngetc wskbd_cngetc
d209 1
a209 5
static int
smgcngetc(dev_t dev)
{
	return 0;
}
a314 1
#if 0
a315 1
#endif
a435 5
#include "pf.h"
cdev_decl(pf);

#include <altq/altqconf.h>

d470 1
a470 1
	cdev_notdef(),			/* 32: RL01/02 on unibus */
d480 1
a480 1
	cdev_pf_init(NPF,pf),		/* 42: packet filter */
d515 1
a515 1
	cdev_altq_init(NALTQ,altq),	/* 75: ALTQ control interface */
a662 11
}

int
getmajor(void *ptr)
{
	int i;

	for (i = 0; i < nchrdev; i++)
		if (cdevsw[i].d_open == ptr)
			return i;
	panic("getmajor");
@


1.17.8.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17.8.2 2001/07/04 10:24:33 niklas Exp $ */
d58 2
d292 1
d439 1
@


1.17.8.4
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d100 1
d103 1
d106 1
d113 2
d116 2
d119 1
d161 1
a161 2
	{ BDEV_UDA,	9 },
	{ BDEV_IDC,	11 },
a199 2
#include "smg.h"
#if NSMG > 0
d208 1
a208 2
#endif	/* NWSKBD > 0 */
#endif	/* NSMG > 0 */
d219 1
d285 2
d291 7
d315 2
d319 4
d407 2
d410 1
d413 2
d416 1
d418 1
d420 3
d428 2
@


1.17.8.5
log
@Merge in -current from about a week ago
@
text
@d247 1
a247 1
#define dev_type_rw(n)	int n(dev_t, int, int, struct proc *)
@


1.17.8.6
log
@Sync the SMP branch with 3.3
@
text
@d47 2
d114 1
d147 40
d405 1
a405 1
#include "systrace.h"
d458 1
a458 1
	cdev_systrace_init(NSYSTRACE,systrace),	/* 49: system call tracing */
a477 2
	cdev_notdef(),			/* 69 */
	cdev_notdef(),			/* 70 */
d486 1
@


1.17.8.7
log
@merge the trunk so we will get the genfs and locking fixes
@
text
@d538 33
a570 1
int nchrtoblktbl = sizeof(chrtoblktbl) / sizeof(chrtoblktbl[0]);
@


1.17.8.8
log
@Sync SMP branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.17.8.7 2003/05/16 00:29:41 niklas Exp $ */
d16 5
a20 1
 * 3. Neither the name of the University nor the names of its contributors
@


1.17.8.9
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d202 1
a202 1
/* plotters - open, close, write, ioctl, poll*/
d206 1
a206 1
	0, dev_init(c,n,poll), (dev_type_mmap((*))) enodev }
d212 1
a212 1
	(dev_type_stop((*))) enodev, 0, (dev_type_poll((*))) enodev, \
d224 1
a224 1
	0, dev_init(c,n,poll), (dev_type_mmap((*))) enodev }
d230 1
a230 1
	(dev_type_stop((*))) nullop, 0, (dev_type_poll((*))) nullop, \
a556 2

int getmajor(void *);	/* XXX used by dz_ibus and smg, die die die */
@


1.17.8.10
log
@Merge with the trunk
@
text
@a440 1
	cdev_ptm_init(NPTY,ptm),	/* 75: pseudo-tty ptm device */
@


1.16
log
@oops, i did not handle nchrdev correctly
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.15 1998/07/07 03:02:50 deraadt Exp $ */
d360 5
d425 3
d429 1
@


1.15
log
@fix chrtoblk() so that it returne ENODEV for entries beyond the end of the table
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.14 1997/11/23 05:21:59 mickey Exp $ */
d524 1
a524 1
	if (major(dev) >= MAXDEV ||
@


1.14
log
@use MI cdev_decl(ipl)
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.13 1997/09/10 12:04:43 maja Exp $ */
a517 3
	NODEV,	/* 63 */
	NODEV,	/* 64 */
	NODEV,	/* 65 */
d524 7
a530 3
	if(major(dev)>=nchrdev) return(NODEV);
	return chrtoblktbl[major(dev)]==NODEV?NODEV:
		makedev(chrtoblktbl[major(dev)],minor(dev));
@


1.13
log
@Sync with NetBSD 970516. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.12 1997/05/28 23:17:59 niklas Exp $ */
a328 1
cdev_decl(ipl);
@


1.12
log
@We use select, not poll.  Correct ipl entry.  Add blktochr func.
Comment out the cfl device for the time being, we miss some file for it.
@
text
@d1 2
a2 2
/*	$OpenBSD: conf.c,v 1.11 1997/01/17 08:44:25 maja Exp $ */
/*	$NetBSD: conf.c,v 1.27 1997/01/07 11:35:20 mrg Exp $	*/
a115 3
#include "md.h"
bdev_decl(md);

d141 1
a141 1
	bdev_disk_init(NMD,md),		/* 23: memory disk driver */
d336 3
a355 1
cdev_decl(md);
d433 1
a433 1
	cdev_disk_init(NMD,md),		/* 62: memory disk driver */
d438 1
@


1.11
log
@Do IPFILTER the OpenBSD way... -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: conf.c,v 1.10 1997/01/15 23:25:06 maja Exp $ */
d186 1
a186 1
/* plotters - open, close, write, ioctl, poll */
d190 1
a190 1
	0, dev_init(c,n,poll), (dev_type_mmap((*))) enodev }
d196 1
a196 1
	(dev_type_stop((*))) enodev, 0, (dev_type_poll((*))) enodev, \
d208 1
a208 1
	0, dev_init(c,n,poll), (dev_type_mmap((*))) enodev }
d214 1
a214 1
	(dev_type_stop((*))) nullop, 0, (dev_type_poll((*))) nullop, \
d282 1
d291 1
d376 1
d378 3
d414 1
a414 1
	cdev_gen_init(NIPF,ipl),	/* 42: ip filtering */
d554 18
@


1.10
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a329 2
#ifdef 0
#include "ipfilter.h"
d331 4
d408 1
a408 5
#ifdef 0
	cdev_ipf_init(NIPFILTER,ipl),	/* 42: Packet filter */
#else
	cdev_notdef(),
#endif
@


1.9
log
@random device is permanent now.
@
text
@d1 2
a2 1
/*	$NetBSD: conf.c,v 1.21 1996/04/08 18:32:29 ragge Exp $	*/
a46 6
int	ttselect	__P((dev_t, int, struct proc *));

#ifndef LKM
#define lkmenodev       enodev
#endif

d61 2
a62 2
#include "tmscp.h"
bdev_decl(tmscp);
d68 1
a68 1
bdev_decl(mt);
d71 1
a71 1
#define	NCTU	1
d73 1
a73 1
#define	NCTU	0
d77 2
a78 5
#include "uda.h"
bdev_decl(uda);

#include "kdb.h"
bdev_decl(kdb);
d104 15
d128 1
a128 1
	bdev_tape_init(NMU,mt),		/* 7: TU78 */
d130 1
a130 1
	bdev_disk_init(NUDA,uda),	/* 9: UDA50/RA?? */
d136 2
a137 2
	bdev_tape_init(NTMSCP,tmscp),	/* 15: TMSCP tape */
	bdev_disk_init(NKDB,kdb),	/* 16: KDB50/RA?? */
d140 5
d149 1
a149 2
 * Console routines for VAX console. There are always an generic console,
 * but maybe we should care about RD, QDSS etc?
d153 1
a153 1
#define gencnpollc      nullcnpollc
d155 2
d158 17
a174 3
struct	consdev	constab[]={
/* Generic console, should always be present */
	cons_init(gen),
d186 1
a186 1
/* plotters - open, close, write, ioctl, select */
d190 1
a190 1
	0, dev_init(c,n,select), (dev_type_mmap((*))) enodev }
d193 1
a193 1
#define	cdev_cnstore_init(c,n) { \
d196 1
a196 1
	(dev_type_stop((*))) enodev, 0, (dev_type_select((*))) enodev, \
d199 1
a199 1
#define	cdev_lp_init(c,n) { \
d205 1
a205 1
#define	cdev_graph_init(c,n) { \
d208 1
a208 1
	0, dev_init(c,n,select), (dev_type_mmap((*))) enodev }
d214 1
a214 1
	(dev_type_stop((*))) nullop, 0, (dev_type_select((*))) nullop, \
d221 2
a222 2
#define	mmread	mmrw
#define	mmwrite	mmrw
d226 2
a227 2
#define	ptstty		ptytty
#define	ptsioctl	ptyioctl
d229 2
a230 2
#define	ptctty		ptytty
#define	ptcioctl	ptyioctl
a232 6
#ifdef LKM
#define	NLKM	1
#else
#define	NLKM	0
#endif
cdev_decl(lkm);
d237 1
a237 1
cdev_decl(tmscp);
d239 2
a240 2
cdev_decl(mt);
cdev_decl(uda);
d246 1
a248 1
cdev_decl(kdb);
d250 3
d265 1
a265 1
#define	NCRL 1
d269 1
a269 1
#define	crlread	crlrw
d273 1
a273 1
#if VAX8200
d278 2
a279 2
#define	crxread	crxrw
#define	crxwrite crxrw
d282 2
a283 2
#if VAX780 && 0
#define	NFL 1
d285 1
a285 1
#define NFL 0
d287 3
a289 3
#define flread flrw
#define flwrite flrw
cdev_decl(fl);
d330 5
d336 1
a336 1
#define	NII 1
d338 1
a338 1
#define	NII 0
d349 8
d372 2
a373 2
	cdev_cnstore_init(NFL,fl),	/* 8: 11/780 console floppy */
	cdev_disk_init(NUDA,uda),	/* 9: MSCP disk interface */
d383 1
a383 1
	cdev_tape_init(NMU,mt),		/* 19: TU78 */
d389 1
a389 1
	cdev_tty_init(1,gencn),		/* 25: Generic console (mtpr...) */
d400 1
a400 1
	cdev_notdef(),			/* 36: was vs100 interface. ??? */
d402 1
a402 1
	cdev_tape_init(NTMSCP,tmscp),	/* 38: TMSCP tape */
d406 5
a410 1
	cdev_notdef(),			/* 42 */
d420 1
a420 1
	cdev_disk_init(NKDB,kdb),	/* 52: KDB50/RA?? */
d426 9
a434 1
	cdev_random_init(1,random),	/* 58: random data source */
d438 1
a438 1
int	mem_no = 3; 	/* major device number of memory special file */
d456 2
a457 2
	0,    	/* 4 */
	1,    	/* 5 */
d461 1
a461 1
	9,   	/* 9 */
d463 1
a463 1
	3,    	/* 11 */
d465 1
a465 1
	2,    	/* 13 */
d503 1
a503 1
	NODEV, 	/* 51 */
d508 10
@


1.8
log
@rnd -> random
@
text
@a320 1
#include "random.h"
d385 1
a385 1
	cdev_random_init(NRANDOM,random), /* 58: random data source */
@


1.7
log
@add rnd driver
@
text
@d321 2
a322 2
#include "rnd.h"
cdev_decl(rnd);
d386 1
a386 1
	cdev_rnd_init(NRND,rnd),	/* 58: random data source */
@


1.6
log
@sync to 0611
@
text
@d321 3
d386 1
@


1.5
log
@remove #ifndef LKM, since that stuff already in sys/conf.h,
add lkmenodev prototype.
@
text
@d48 4
d206 5
@


1.4
log
@sync w/ 0430
@
text
@a47 4
#ifndef LKM
#define lkmenodev       enodev
#endif

a201 5
#ifdef LKM
#define	NLKM	1
#else
#define	NLKM	0
#endif
@


1.3
log
@from ragge; add bfd, tun, vnd
@
text
@d1 1
a1 1
/*	$NetBSD: conf.c,v 1.15 1996/01/28 11:46:54 ragge Exp $	*/
a49 2
#else
int     lkmenodev();
d55 1
a55 1
#include "tu.h"
d115 1
a115 1
	bdev_tape_init(NTU,ht),		/* 1: TU77 w/ TM03 */
d258 1
a258 1
#if VAX780
d321 2
d378 1
a378 1
	cdev_fd_init(1,fd),		/* 53: file descriptor pseudo-device */
d458 1
d470 1
d482 1
@


1.2
log
@created devices for the IP filter log on all architectures
@
text
@d1 1
a1 1
/*	$NetBSD: conf.c,v 1.14 1995/08/17 17:41:05 thorpej Exp $	*/
d77 1
a77 1
#if 0 /* defined(VAX750) || defined(VAX730) */
d82 1
a82 1
bdev_decl(tu);
d111 3
d124 1
a124 1
	bdev_tape_init(NCTU,tu),	/* 8: Console TU58 on 730/750 */
d134 1
d315 7
a321 12
/* open, close, read, ioctl */
cdev_decl(ipl);
#define	cdev_gen_ipf(c,n) { \
	dev_init(c,n,open), dev_init(c,n,close), dev_init(c,n,read), \
	(dev_type_write((*))) enodev, dev_init(c,n,ioctl), \
	(dev_type_stop((*))) nullop, 0, (dev_type_select((*))) enodev, \
	(dev_type_mmap((*))) enodev, 0 }
#ifdef IPFILTER
#define NIPF 1
#else
#define NIPF 0
#endif
d375 1
a375 1
	cdev_gen_ipf(NIPF,ipl),		/* 50: IP filter log */
d380 3
d455 1
@


1.1
log
@Initial revision
@
text
@d311 13
d376 1
a376 1
	cdev_notdef(),			/* 50 */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
