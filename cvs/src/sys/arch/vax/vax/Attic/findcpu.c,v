head	1.17;
access;
symbols
	OPENBSD_5_9:1.16.0.16
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.18
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.10
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.14
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.12
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.8
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.6
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.4
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.2
	OPENBSD_5_0:1.15.0.2
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.14.0.10
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.8
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.4
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.6
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.2
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.12.0.10
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.8
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.6
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.4
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.2
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	SMP_SYNC_A:1.10
	SMP_SYNC_B:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	UBC_SYNC_A:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	UBC_SYNC_B:1.8
	UBC:1.7.0.8
	UBC_BASE:1.7
	OPENBSD_3_0:1.7.0.6
	OPENBSD_3_0_BASE:1.7
	SMP:1.7.0.4
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.17
date	2016.03.09.16.28.49;	author deraadt;	state dead;
branches;
next	1.16;
commitid	OSDG2O3Cgeifnf1W;

1.16
date	2011.09.19.21.53.02;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2011.07.06.18.32.59;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2008.08.20.19.00.01;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2008.08.18.23.19.29;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2006.08.27.16.55.41;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2006.07.20.19.07.14;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2003.08.15.23.16.11;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.08.10.15.55.23;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.31.11.42.51;	author hugh;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.12.11.45.38;	author hugh;	state Exp;
branches
	1.7.4.1
	1.7.8.1;
next	1.6;

1.6
date	2001.02.24.10.31.58;	author hugh;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.30.17.10.05;	author hugh;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.28.02.24.25;	author hugh;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.11.11.32.07;	author hugh;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.10.18.21.28;	author bjc;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.27.01.10.09;	author bjc;	state Exp;
branches;
next	;

1.7.4.1
date	2001.05.14.21.38.50;	author niklas;	state Exp;
branches;
next	1.7.4.2;

1.7.4.2
date	2002.03.06.02.04.48;	author niklas;	state Exp;
branches;
next	1.7.4.3;

1.7.4.3
date	2004.02.19.10.50.03;	author niklas;	state Exp;
branches;
next	;

1.7.8.1
date	2002.01.31.22.55.27;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.17
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: findcpu.c,v 1.16 2011/09/19 21:53:02 miod Exp $	*/
/*	$NetBSD: findcpu.c,v 1.5 1999/08/23 19:10:43 ragge Exp $	*/
/*
 * Copyright (c) 1994, 1998 Ludd, University of Lule}, Sweden.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *     This product includes software developed at Ludd, University of Lule}.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */


#include <sys/param.h>
#include <sys/device.h>

#include <machine/sid.h>
#include <machine/nexus.h>
#include <machine/mtpr.h>
#include <machine/cpu.h>
#include <machine/cvax.h>

/* 
 * We set up some information about the machine we're
 * running on and thus initializes/uses vax_cputype and vax_boardtype.
 * There should be no need to change/reinitialize these variables
 * outside of this routine, they should be read only!
 */
int vax_cputype;	/* highest byte of SID register */
int vax_cpustype;	/* second byte of SIE register */
int vax_bustype;	/* holds/defines the main bus type on this machine */
int vax_boardtype;	/* machine dependent, combination of SID and SIE */
 
int vax_cpudata = 0;	/* contents of the SID register */
int vax_siedata = 0;	/* contents of the SIE register */
int vax_confdata;	/* machine dependent, configuration/setup data */

void	findcpu(void);

/*
 * Try to figure out which type of system this is.
 */
void
findcpu(void)
{
	vax_cpudata = mfpr(PR_SID);
	vax_cputype = vax_cpudata >> 24;
	vax_boardtype = vax_cputype << 24;

	switch (vax_cputype) {
	case VAX_TYP_UV2:
	case VAX_TYP_CVAX:
	case VAX_TYP_RIGEL:
	case VAX_TYP_MARIAH:
	case VAX_TYP_NVAX:
	case VAX_TYP_SOC:
		vax_siedata = *(int *)(0x20040004);	/* SIE address */
		vax_cpustype = (vax_siedata >> 8) & 0xff;
		vax_boardtype |= vax_siedata >> 24;

		switch (vax_boardtype) {
		case VAX_BTYP_420: /* They are very similar */
		case VAX_BTYP_410:
		case VAX_BTYP_43:
		case VAX_BTYP_46:
		case VAX_BTYP_48:
		case VAX_BTYP_IS1:	
			vax_confdata = *(int *)(0x20020000);
			vax_bustype = VAX_VSBUS;
			break;
		case VAX_BTYP_49:
			vax_confdata = *(int *)(0x25800000);
			vax_bustype = VAX_VSBUS;
			break;
		case VAX_BTYP_VXT:
			vax_confdata = *(int *)(0x200c0000);
			vax_bustype = VAX_VXTBUS;
			break;

		case VAX_BTYP_60:
			vax_confdata =
			    ((struct cvax_ssc *)CVAX_SSC)->ssc_terminfo;
			vax_bustype = VAX_MBUS;
			break;

		case VAX_BTYP_630:
		case VAX_BTYP_650:
		case VAX_BTYP_660:
		case VAX_BTYP_670:
		case VAX_BTYP_1301:
		case VAX_BTYP_1303:
		case VAX_BTYP_1305:
			vax_bustype = VAX_IBUS;
			break;

		default:
			/* CPU not supported, just give up */
			asm("halt");
		}
		break;

	default:
		/* CPU not supported, just give up */
		asm("halt");
	}
}
@


1.16
log
@Try and clean system type constants a bit:
- save the second byte of vax_siedata into a new variable, vax_cpustype,
  and use it instead of (vax_siedata >> 8) & 0xff or other similar
  constructs.
- the VAX_SIE_KAxxx constants are duplicates of the VAX_STYP_xx constants.
  Standardize on the latter and kill the former.
- only keep VAX_VTYP_xx constants for KA46 and KA47, those are the only
  systems which use these constants and are told apart by a different
  SIE byte.

No functional change intended.
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.15 2011/07/06 18:32:59 miod Exp $	*/
@


1.15
log
@Remove support for non-microVAX, non-VAXstation, non-VXT hardware in the
VAX port. This means, 11/7xx, VAX6000 and VAX8x00 systems, as well as SBI,
CMI, BI, XMI and MASSBUS drivers.
Most of these files were not being compiled or kept in compilable state over
the years anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.14 2008/08/20 19:00:01 miod Exp $	*/
d50 1
d78 1
@


1.14
log
@Minimal driver for the VAXstation 35x0/38x0 LEGSS option, currently limited
to 8 bit mode operation, and no color or accelerated features until I can
find documentation about it.

Speed is decent by VAX standards, except for scrolling, which is so
abysmally slow one could see ZZ Top's beards growing while waiting for the
screen to scroll...
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.13 2008/08/18 23:19:29 miod Exp $	*/
a69 10
	case VAX_TYP_780:
		vax_bustype = VAX_SBIBUS;
		break;
	case VAX_TYP_750:
		vax_bustype = VAX_CMIBUS;
		break;
	case VAX_TYP_790:
		vax_bustype = VAX_ABUS;
		break;

a97 7
		case VAX_BTYP_9CC:
		case VAX_BTYP_9RR:
		case VAX_BTYP_1202:
		case VAX_BTYP_1302:
			vax_bustype = VAX_XMIBUS;
			break;

d113 4
a117 11
		break;

	case VAX_TYP_8SS:
		vax_boardtype = VAX_BTYP_8000;
		vax_bustype = VAX_BIBUS;
		break;

	case VAX_TYP_8NN:
	case VAX_TYP_8PS:
		vax_boardtype = VAX_BTYP_8800;
		vax_bustype = VAX_NBIBUS;
@


1.13
log
@Add support for the ``Firefox'' VAXstation 3520/3540/3820/3840 workstations,
currently limited to serial console and a single processor working.

All ``on-board'' devices, including the Q-bus adapter, but except for
the frame buffer, are supported. The machine will boot over the network
or from SCSI devices.

Lots of thanks to Al Kossow for www.bitsavers.org, on which I found the
technical documentation allowing me to complete this port (which was
lacking at the time I got that machine...).
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.12 2006/08/27 16:55:41 miod Exp $	*/
d41 1
d50 2
a51 2
int vax_bustype;	/* holds/defines all busses on this machine */
int vax_boardtype;	/* machine dependend, combination of SID and SIE */
d116 2
a129 1

@


1.12
log
@Work-in-progress VXT2000 support (commented out in GENERIC so far). Glass
console works on color model, serial console works, ethernet attaches but
does not work correctly yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.11 2006/07/20 19:07:14 miod Exp $	*/
d54 1
a54 1
int vax_confdata;	/* machine dependend, configuration/setup data */
d115 3
@


1.11
log
@Oops, correctly initialize vax_confdata for VS4k/90.
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.10 2003/08/15 23:16:11 deraadt Exp $	*/
d101 4
@


1.10
log
@proto findcpu, because bootblocks use this too
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.9 2003/08/10 15:55:23 deraadt Exp $	*/
d96 2
d99 1
@


1.9
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.8 2002/01/31 11:42:51 hugh Exp $	*/
d55 2
@


1.8
log
@Add support for VAX 4000 500A.
Thanks to kernel testing by Andrew Reynolds.
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.7 2001/03/12 11:45:38 hugh Exp $	*/
d60 1
a60 1
findcpu()
@


1.7
log
@Omega is now VAX_BTYP_1301. Also add an STYP for 4000 600.
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.6 2001/02/24 10:31:58 hugh Exp $	*/
d112 1
@


1.7.8.1
log
@Merge in -current, builds on i386, otherwise untested
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.8 2002/01/31 11:42:51 hugh Exp $	*/
a111 1
		case VAX_BTYP_1305:
@


1.7.4.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.7 2001/03/12 11:45:38 hugh Exp $	*/
@


1.7.4.2
log
@Merge in trunk
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a111 1
		case VAX_BTYP_1305:
@


1.7.4.3
log
@Merge of current from two weeks agointo the SMP branch
@
text
@a55 2
void	findcpu(void);

d60 1
a60 1
findcpu(void)
@


1.6
log
@Support for VAX 4000/{2,4,5}00 from Michael Kukat. untested.
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.5 2001/01/30 17:10:05 hugh Exp $	*/
d110 1
a110 1
		case VAX_BTYP_680:
@


1.5
log
@Improve printing of various NVAX models. Similar to work by Michael Kukat.
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.4 2001/01/28 02:24:25 hugh Exp $	*/
a104 2
		case VAX_BTYP_670:
		case VAX_BTYP_660:
d108 2
@


1.4
log
@Print contents of the SID and extension as well as findcpu's guess.
Doesn't take up much space, and provides unequivocal information.
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.3 2000/10/11 11:32:07 hugh Exp $	*/
a107 1
		case VAX_BTYP_69D:
d110 1
@


1.3
log
@extraneous tab
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.2 2000/10/10 18:21:28 bjc Exp $	*/
d52 2
a53 2
int vax_cpudata;	/* contents of the SID register */
int vax_siedata;	/* contents of the SIE register */
@


1.2
log
@- add some cases for ka52/53 (VAX_BTYP_1303), tested by hugh
- things depend on proc0paddr being zero'd out, so do it
- also forgot a "3100" in a cpu_model
@
text
@d1 1
a1 1
/*	$OpenBSD: findcpu.c,v 1.1 2000/04/27 01:10:09 bjc Exp $	*/
d111 1
a111 1
		case VAX_BTYP_1303:	
@


1.1
log
@sync with netbsd of early april; some archs still untested
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d111 1
@

