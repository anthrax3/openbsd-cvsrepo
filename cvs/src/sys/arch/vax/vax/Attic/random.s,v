head	1.6;
access;
symbols
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.38
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.36
	OPENBSD_3_6_BASE:1.3
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	OPENBSD_3_5:1.3.0.34
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.32
	OPENBSD_3_4_BASE:1.3
	UBC_SYNC_A:1.3
	OPENBSD_3_3:1.3.0.30
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.28
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.26
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.3
	UBC:1.3.0.24
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.22
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	SMP:1.3.0.14
	SMP_BASE:1.3
	kame_19991208:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.6
date	2008.10.10.20.21.39;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2007.01.14.19.13.35;	author otto;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.06.18.55.02;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.25.21;	author maja;	state Exp;
branches;
next	1.2;

1.2
date	96.08.10.21.41.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.52.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.52.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Use the MI random() for all cases; no need for a MD version since it
has never been performance sensitive.
Running on all platforms, discussed with millert and kettenis, ok toby
@
text
@/*	$OpenBSD: random.s,v 1.5 2007/01/14 19:13:35 otto Exp $ */
/*	$NetBSD: random.S,v 1.4 2007/01/14 13:26:18 ragge Exp $	*/

/*
 * Copyright (c) 1994 Ludd, University of Lule}, Sweden. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Copyright (c) 1990,1993 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that: (1) source code distributions
 * retain the above copyright notice and this paragraph in its entirety, (2)
 * distributions including binary code include the above copyright notice and
 * this paragraph in its entirety in the documentation or other materials
 * provided with the distribution, and (3) all advertising materials mentioning
 * features or use of this software display the following acknowledgement:
 * ``This product includes software developed by the University of California,
 * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
 * the University nor the names of its contributors may be used to endorse
 * or promote products derived from this software without specific prior
 * written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Here is a very good random number generator.  This implementation is
 * based on ``Two Fast Implementations of the "Minimal Standard" Random
 * Number Generator'', David G. Carta, Communications of the ACM, Jan 1990,
 * Vol 33 No 1.  Do NOT modify this code unless you have a very thorough
 * understanding of the algorithm.  It's trickier than you think.  If
 * you do change it, make sure that its 10,000'th invocation returns
 * 1043618065.
 *
 * Here is easier-to-decipher pseudocode:
 *
 * p = (16807*seed)<30:0>	# e.g., the low 31 bits of the product
 * q = (16807*seed)<62:31>	# e.g., the high 31 bits starting at bit 32
 * if (p + q < 2^31)
 * 	seed = p + q
 * else
 *	seed = ((p + q) & (2^31 - 1)) + 1
 * return (seed);
 *
 * The result is in (0,2^31), e.g., it's always positive.
 */

#include <machine/asm.h>

	.data
	.globl	__randseed
__randseed:
	.long	1
ENTRY(random, 0)
	movl	$16807,r0

	movl	__randseed,r1		# r2=16807*loword(__randseed)
	bicl3	$0xffff0000,r1,r2
	mull2	r0,r2
	ashl	$-16,r1,r1		# r1=16807*hiword(__randseed)
	bicl2	$0xffff0000,r1
	mull2	r0,r1
	bicl3	$0xffff0000,r2,r0
	ashl	$-16,r2,r2		# r1+=(r2>>16)
	bicl2	$0xffff0000,r2
	addl2	r2,r1
	ashl	$16,r1,r2		# r0|=r1<<16
	bisl2	r2,r0
	ashl	$-16,r1,r1		# r1=r1>>16

	ashl	$1,r1,r1
	movl	r0,r2
	rotl	$1,r0,r0
	bicl2	$0xfffffffe,r0
	bisl2	r0,r1
	movl	r2,r0
	bicl2	$0x80000000,r0
	addl2	r1,r0
	bgeq	L1
	subl2	$0x7fffffff,r0
L1:	movl	r0,__randseed
	ret
@


1.5
log
@ragge@@netbsd fixed the copyright, thanks. ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: random.s,v 1.4 2005/05/06 18:55:02 miod Exp $ */
@


1.4
log
@Use *ENTRY() macros for function prologues, rather than providing the
register save mask as a number.

ok hugh@@
@
text
@d1 28
a28 2
/*	$OpenBSD: random.s,v 1.3 1997/01/15 23:25:21 maja Exp $ */
/*	$NetBSD: random.s,v 1.2 1994/10/26 08:03:24 cgd Exp $	*/
a56 5
 *
 * This implementation Copyright (c) 1994 Ludd, University of Lule}, Sweden
 * All rights reserved.
 *
 * All bugs subject to removal without further notice.
@


1.3
log
@sync with NetBSD 970112 -moj
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d50 2
d56 1
a56 4
	.text
	.globl _random
_random:
	.word 0x0
@


1.2
log
@srandom() seeds random() at boottime
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d50 2
a51 1
randseed:
d59 1
a59 1
	movl	randseed,r1		# r2=16807*loword(randseed)
d62 1
a62 1
	ashl	$-16,r1,r1		# r1=16807*hiword(randseed)
d83 1
a83 1
L1:	movl	r0,randseed
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
