head	1.8;
access;
symbols
	OPENBSD_5_9:1.7.0.38
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.40
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.32
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.36
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.34
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.30
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.28
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.26
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.24
	OPENBSD_5_0:1.7.0.22
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.20
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.18
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.14
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.16
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.12
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.10
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.8
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.2.0.18
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.16
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.14
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.12
	OPENBSD_3_6_BASE:1.2
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	OPENBSD_3_5:1.2.0.10
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	UBC_SYNC_B:1.2
	UBC:1.1.0.6
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.2;
locks; strict;
comment	@ * @;


1.8
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.7;
commitid	OSDG2O3Cgeifnf1W;

1.7
date	2006.08.05.22.05.55;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2006.07.31.21.57.05;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2006.07.31.06.47.25;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2006.07.30.18.35.10;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.29.17.06.25;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.14.01.26.47;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.16.22.15.17;	author hugh;	state Exp;
branches
	1.1.2.1
	1.1.6.1;
next	;

1.1.2.1
date	2002.03.28.11.26.46;	author niklas;	state Exp;
branches;
next	;

1.1.6.1
date	2002.06.11.03.39.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.8
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: lk201var.h,v 1.7 2006/08/05 22:05:55 miod Exp $	*/
/* $NetBSD: lk201var.h,v 1.2 1998/10/22 17:55:20 drochner Exp $ */

/*
 * Copyright (c) 1998
 *	Matthias Drochner.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed for the NetBSD Project
 *	by Matthias Drochner.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

struct lk201_attachment {
	int (*sendchar)(void *, int);
	void *cookie;
};

struct lk201_state {
	struct	device *device;
	struct	lk201_attachment attmt;

	struct timeout probetmo;
	volatile int waitack;
	int	ackdata;

	int	kbdtype;
#define	KBD_NONE	0x00
#define	KBD_LK201	0x01
#define	KBD_LK401	0x02

#define LK_KLL 8
	int	down_keys_list[LK_KLL];

	int	bellvol;
	int	leds_state;
	int	kcvol;
};

void	lk201_bell(struct lk201_state *, struct wskbd_bell_data *);
int	lk201_decode(struct lk201_state *, int, int, int, u_int *, int *);
int	lk201_get_leds(struct lk201_state *);
int	lk201_get_type(struct lk201_state *);
void	lk201_init(struct lk201_state *);
void	lk201_set_keyclick(struct lk201_state *, int);
void	lk201_set_leds(struct lk201_state *, int);

/* Values returned by lk201_decode */
#define	LKD_NODATA	0x00
#define	LKD_COMPLETE	0x01
#define	LKD_MORE	0x02
@


1.7
log
@Ugly hack to avoid sending the ``all keys up'' event to userland, replacing
it with as many key release events as necessary. Necessary for X until it
knows how to handle this event properly.
@
text
@d1 1
a1 1
/*	$OpenBSD: lk201var.h,v 1.6 2006/07/31 21:57:05 miod Exp $	*/
@


1.6
log
@Since we now know which keyboard type we are connected to:
- report the proper type to WSKBDIO_GTYPE.
- merge the LK201 and LK401 keymaps.
- if the keyboard is LK201, handle the compose key as the left alt key,
  unless shifted, so that you can have both an alt and a compose key.
@
text
@d1 1
a1 1
/*	$OpenBSD: lk201var.h,v 1.5 2006/07/31 06:47:25 miod Exp $	*/
d63 1
a63 1
int	lk201_decode(struct lk201_state *, int, int, u_int *, int *);
d69 5
@


1.5
log
@On startup, and when a keyboard change is detected, probe for the keyboard
type. For now it is only reported to the user, but we'll use this very soon
to alter keycodes depending upon the keyboard type (so that we do not have
the compose and alt keys swapped on LK401 keyboards).
@
text
@d1 1
a1 1
/*	$OpenBSD: lk201var.h,v 1.4 2006/07/30 18:35:10 miod Exp $	*/
d64 2
@


1.4
log
@Always invoke the lk201 input handler, even when the wskbd device is disabled,
so that the keyboard gets configured correctly if plugged late.
@
text
@d1 1
a1 1
/*	$OpenBSD: lk201var.h,v 1.3 2006/07/29 17:06:25 miod Exp $	*/
d42 12
a53 1
	struct lk201_attachment attmt;
d55 5
a59 4
	int down_keys_list[LK_KLL];
	int bellvol;
	int leds_state;
	int kcvol;
d62 5
a66 5
int lk201_init(struct lk201_state *);
int lk201_decode(struct lk201_state *, int, int, u_int *, int *);
void lk201_bell(struct lk201_state *, struct wskbd_bell_data *);
void lk201_set_leds(struct lk201_state *, int);
void lk201_set_keyclick(struct lk201_state *, int);
@


1.3
log
@Sync dz and lk{kbd,ms} code with NetBSD, this allows keyboards to work when
initialized by the PROM.
@
text
@d1 1
a1 1
/*	$OpenBSD: lk201var.h,v 1.2 2002/03/14 01:26:47 millert Exp $	*/
d37 1
a37 1
	int (*sendchar)(void *, u_char);
d51 1
a51 1
int lk201_decode(struct lk201_state *, int, u_int *, int *);
@


1.2
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: lk201var.h,v 1.1 2001/05/16 22:15:17 hugh Exp $	*/
d47 1
d54 1
@


1.1
log
@Blind merge of wscons support from NetBSD/vax. Perhaps someone with a
supported framebuffer (simple monochrome) can finish this off.
If anyone has run across docs for LCG or SPGFX, please get in touch.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
	int (*sendchar) __P((void *, u_char));
d49 4
a52 4
int lk201_init __P((struct lk201_state *));
int lk201_decode __P((struct lk201_state *, int, u_int *, int *));
void lk201_bell __P((struct lk201_state *, struct wskbd_bell_data *));
void lk201_set_leds __P((struct lk201_state *, int));
@


1.1.6.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: lk201var.h,v 1.1 2001/05/16 22:15:17 hugh Exp $	*/
d37 1
a37 1
	int (*sendchar)(void *, u_char);
d49 4
a52 4
int lk201_init(struct lk201_state *);
int lk201_decode(struct lk201_state *, int, u_int *, int *);
void lk201_bell(struct lk201_state *, struct wskbd_bell_data *);
void lk201_set_leds(struct lk201_state *, int);
@


1.1.2.1
log
@Merge in -current from about a week ago
@
text
@d37 1
a37 1
	int (*sendchar)(void *, u_char);
d49 4
a52 4
int lk201_init(struct lk201_state *);
int lk201_decode(struct lk201_state *, int, u_int *, int *);
void lk201_bell(struct lk201_state *, struct wskbd_bell_data *);
void lk201_set_leds(struct lk201_state *, int);
@


