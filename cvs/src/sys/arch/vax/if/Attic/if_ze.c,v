head	1.12;
access;
symbols
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.18
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.16
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.12
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.10
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.8
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.6
	OPENBSD_5_0:1.9.0.4
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.8.0.8
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.4
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.7.0.10
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.8
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	UBC_SYNC_B:1.4
	UBC:1.3.0.4
	UBC_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	SMP:1.1.0.8
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.03.09.16.28.48;	author deraadt;	state dead;
branches;
next	1.11;
commitid	OSDG2O3Cgeifnf1W;

1.11
date	2015.11.24.17.11.38;	author mpi;	state Exp;
branches;
next	1.10;
commitid	5gdEnqVoJuTuwdTu;

1.10
date	2014.11.05.07.09.04;	author jsg;	state Exp;
branches;
next	1.9;
commitid	ANf4pDZ9nvP0MIpf;

1.9
date	2010.09.20.06.33.47;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	2008.08.22.17.09.06;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.30.19.28.11;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.27.16.50.44;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.07.10.16.45;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.01.26.48;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.25.13.33.36;	author hugh;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2001.05.20.14.19.43;	author hugh;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.27.03.14.43;	author bjc;	state Exp;
branches
	1.1.8.1;
next	;

1.1.8.1
date	2001.05.14.21.37.55;	author niklas;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2001.07.04.10.24.25;	author niklas;	state Exp;
branches;
next	1.1.8.3;

1.1.8.3
date	2001.10.31.03.08.01;	author nate;	state Exp;
branches;
next	1.1.8.4;

1.1.8.4
date	2002.03.28.11.26.46;	author niklas;	state Exp;
branches;
next	1.1.8.5;

1.1.8.5
date	2004.02.19.10.50.02;	author niklas;	state Exp;
branches;
next	;

1.3.4.1
date	2002.06.11.03.39.19;	author art;	state Exp;
branches;
next	;


desc
@@


1.12
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: if_ze.c,v 1.11 2015/11/24 17:11:38 mpi Exp $	*/
/*      $NetBSD: if_ze.c,v 1.3 2000/01/24 02:54:03 matt Exp $ */
/*
 * Copyright (c) 1999 Ludd, University of Lule}, Sweden. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed at Ludd, University of 
 *      Lule}, Sweden and its contributors.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/socket.h>
#include <sys/device.h>
#include <sys/systm.h>
#include <sys/sockio.h>

#include <net/if.h>
#include <net/if_media.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>

#include <machine/bus.h>
#include <machine/nexus.h>
#include <machine/cpu.h>
#include <machine/scb.h>
#include <machine/sid.h>

#include <arch/vax/if/sgecreg.h>
#include <arch/vax/if/sgecvar.h>

/*
 * Addresses.
 */
#define SGECADDR        0x20008000
#define NISA_ROM        0x20084000
#define	SGECVEC		0x108

static	int	zematch(struct device *, struct cfdata *, void *);
static	void	zeattach(struct device *, struct device *, void *);

struct	cfattach ze_ibus_ca = {
	sizeof(struct ze_softc), (cfmatch_t)zematch, zeattach
};

/*
 * Check for present SGEC.
 */
int
zematch(parent, cf, aux)
	struct	device *parent;
	struct	cfdata *cf;
	void	*aux;
{
	struct bp_conf *bp = aux;

	/*
	 * Should some more intelligent checking be done???
	 */
	if (strcmp(bp->type, "sgec") == 0)
		return 1;
	return 0;
}

/*
 * Interface exists: make available by filling in network interface
 * record.  System will initialize the interface when it is ready
 * to accept packets.
 */
void
zeattach(parent, self, aux)
	struct	device *parent, *self;
	void	*aux;
{
	extern struct vax_bus_dma_tag vax_bus_dma_tag;
	struct	ze_softc *sc = (struct ze_softc *)self;
	int *ea, i;

	/*
	 * Map in SGEC registers.
	 */
	sc->sc_ioh = vax_map_physmem(SGECADDR, 1);
	sc->sc_iot = 0; /* :-) */
	sc->sc_dmat = &vax_bus_dma_tag;

	sc->sc_intvec = SGECVEC;

	/*
	 * Map in, read and release ethernet rom address.
	 */
	ea = (int *)vax_map_physmem(NISA_ROM, 1);
	for (i = 0; i < ETHER_ADDR_LEN; i++)
		if (vax_boardtype == VAX_BTYP_660)
			sc->sc_ac.ac_enaddr[i] = (ea[i] >> 24) & 0377;
		else
			sc->sc_ac.ac_enaddr[i] = (ea[i] >> 8) & 0377;

	vax_unmap_physmem((vaddr_t)ea, 1);

	scb_vecalloc(SGECVEC, (void (*)(void *)) sgec_intr, sc,
	    SCB_ISTACK, &sc->sc_intrcnt);
	evcount_attach(&sc->sc_intrcnt, sc->sc_dev.dv_xname, &sc->sc_intvec);

	sgec_attach(sc);
}
@


1.11
log
@You only need <net/if_dl.h> if you're using LLADDR() or a sockaddr_dl.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.10 2014/11/05 07:09:04 jsg Exp $	*/
@


1.10
log
@remove uneeded bpf includes
ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.9 2010/09/20 06:33:47 matthew Exp $	*/
a39 1
#include <net/if_dl.h>
@


1.9
log
@Get rid of evcount's support for arranging counters in a tree
hierarchy.  Everything attached to a single root node anyway, so at
best we had a bush.

"i think it is good" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.8 2008/08/22 17:09:06 deraadt Exp $	*/
a44 5

#if NBPFILTER > 0
#include <net/bpf.h>
#include <net/bpfdesc.h>
#endif
@


1.8
log
@Instead of spewing error messages about link status, support link status
like all drivers should
ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.7 2006/08/30 19:28:11 miod Exp $	*/
d130 1
a130 2
	evcount_attach(&sc->sc_intrcnt, sc->sc_dev.dv_xname,
	    (void *)&sc->sc_intvec, &evcount_intr);
@


1.7
log
@Teach the SGEC driver about the Real World:
- check for error bits in descriptors, and count and report errors
  accordingly; make sure we do not pass up known-to-be-bad packets up the
  receive path.
- check for various error conditions which would cause the transmit process
  to go to suspended state, and recover from them, before the timeout expires.
- finally, on the VXT2000, the transmit process for some reason will reset
  its ring position to the beginning of the ring every time it completes a
  transmission burst, while we don't, so play with the head of ring register
  behind its back. This makes my VXT2000+ (net)boot multiuser.

Tested on VXT2000 (ze@@vxtbus), KA49 (ze@@vsbus) and KA53 (ze@@ibus); ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.6 2006/08/27 16:50:44 miod Exp $	*/
d41 2
@


1.6
log
@Move cfdriver structs to better places, in preparation for new attachments.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.5 2003/11/07 10:16:45 jmc Exp $	*/
d128 2
@


1.5
log
@adress -> address, and a few more; all from Jonathon Gray;

(mvme68k/mvme88k) vs.c and (vax) if_le.c ok miod@@
isakmpd ones ok ho@@
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.4 2002/03/14 01:26:48 millert Exp $	*/
a69 4
};

struct	cfdriver ze_cd = {
	NULL, "ze", DV_IFNET
@


1.4
log
@First round of __P removal in sys
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.3 2001/08/25 13:33:36 hugh Exp $	*/
d59 1
a59 1
 * Adresses.
@


1.3
log
@Bring in some useful stuff from NetBSD. Mostly work by Matt Thomas,
and concerned with intvec counting. Also some ANSIfication.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.2 2001/05/20 14:19:43 hugh Exp $	*/
d65 2
a66 2
static	int	zematch __P((struct device *, struct cfdata *, void *));
static	void	zeattach __P((struct device *, struct device *, void *));
@


1.3.4.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.3 2001/08/25 13:33:36 hugh Exp $	*/
d65 2
a66 2
static	int	zematch(struct device *, struct cfdata *, void *);
static	void	zeattach(struct device *, struct device *, void *);
@


1.2
log
@From NetBSD:
> date: 2000/05/08 18:51:17;  author: ragge;  state: Exp;  lines: +6 -2
> branches:  1.4.2;
> Get correct MAC address out of rom on VAX 4000/200. From Michael Kukat.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.1 2000/04/27 03:14:43 bjc Exp $	*/
d130 2
a131 1
	scb_vecalloc(SGECVEC, (void (*)(void *)) sgec_intr, sc, SCB_ISTACK);
@


1.1
log
@sync w/netbsd
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d53 1
d123 5
a127 1
		sc->sc_ac.ac_enaddr[i] = (ea[i] >> 8) & 0377;
@


1.1.8.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.1 2000/04/27 03:14:43 bjc Exp $	*/
@


1.1.8.2
log
@Merge in -current from two days ago in the SMP branch.
As usual with merges, they do not indicate progress, so do not hold
your breath for working SMP, and do not mail me and ask about the
state of it.  It has not changed.  There is work ongoing, but very, very
slowly.  The commit is done in parts as to not lock up the tree in too
big chunks at a time.
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.1.8.1 2001/05/14 21:37:55 niklas Exp $	*/
a52 1
#include <machine/sid.h>
d122 1
a122 5
		if (vax_boardtype == VAX_BTYP_660)
			sc->sc_ac.ac_enaddr[i] = (ea[i] >> 24) & 0377;
		else
			sc->sc_ac.ac_enaddr[i] = (ea[i] >> 8) & 0377;

@


1.1.8.3
log
@Sync the SMP branch to something just after 3.0
@
text
@d1 1
a1 1
/*	$OpenBSD: if_ze.c,v 1.1.8.2 2001/07/04 10:24:25 niklas Exp $	*/
d130 1
a130 2
	scb_vecalloc(SGECVEC, (void (*)(void *)) sgec_intr, sc,
	    SCB_ISTACK, &sc->sc_intrcnt);
@


1.1.8.4
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d65 2
a66 2
static	int	zematch(struct device *, struct cfdata *, void *);
static	void	zeattach(struct device *, struct device *, void *);
@


1.1.8.5
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d59 1
a59 1
 * Addresses.
@


