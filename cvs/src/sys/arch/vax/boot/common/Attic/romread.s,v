head	1.2;
access;
symbols
	SMP_SYNC_A:1.2
	SMP_SYNC_B:1.2
	UBC_SYNC_A:1.2
	OPENBSD_3_1:1.1.0.14
	OPENBSD_3_1_BASE:1.1
	UBC_SYNC_B:1.2
	UBC:1.1.0.12
	UBC_BASE:1.1
	OPENBSD_3_0:1.1.0.10
	OPENBSD_3_0_BASE:1.1
	SMP:1.1.0.8
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2002.06.11.09.36.23;	author hugh;	state dead;
branches;
next	1.1;

1.1
date	2000.04.27.02.26.26;	author bjc;	state Exp;
branches
	1.1.8.1
	1.1.12.1;
next	;

1.1.8.1
date	2001.05.14.21.37.48;	author niklas;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2003.03.27.23.52.19;	author niklas;	state dead;
branches;
next	;

1.1.12.1
date	2002.10.29.00.28.13;	author art;	state dead;
branches;
next	;


desc
@@


1.2
log
@New boot code, mostly from ragge's work in NetBSD.
Some header syncing and a couple network drivers came along for the ride.
Assembly files have been renamed from .s to .S to facilitate diffs.
Kernel is backwards compat - with manual interaction.
OpenBSD features have been preserved.
@
text
@/*	$OpenBSD: romread.s,v 1.1 2000/04/27 02:26:26 bjc Exp $ */
/*	$NetBSD: romread.s,v 1.4 1996/08/02 11:22:24 ragge Exp $ */
/*
 * Copyright (c) 1995 Ludd, University of Lule}, Sweden.
 * All rights reserved.
 *
 * This code is derived from software contributed to Ludd by
 * Bertram Barth.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed at Ludd, University of 
 *      Lule}, Sweden and its contributors.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

 /* All bugs are subject to removal without further notice */
		


#include "../include/asm.h"

/*
 * read750 (int block, int *regs)
 */
ENTRY(read750, 0xFFE)
	movl	8(ap), r8
	movl	4(r8), r1
	movl	8(r8), r2
	movl	12(r8), r3
	movl	24(r8), r6
	clrl	r5
	movl	4(ap), r8
	pushl	$0
	movl	$0, 4(sp)
	movl    fp, 0xf0000	# ragge ???
	jsb	(r6)
	movl    0xf0000, fp	
	ret

/*
 * romread_uvax (int lbn, int size, void *buf, int *regs)
 */
ENTRY(romread_uvax, 0xFFE)
	movl	16(ap), r11	# array of bootregs
	movl	44(r11), r11	# restore boot-contents of r11 (rpb)
	movl    52(r11), r7     # load iovec/bqo into r7
	addl3   (r7), r7, r6	# load qio into r6
	pushl	r11			# base of rpb
	pushl	$0			# virtual-flag 
	pushl	$33			# read-logical-block
	pushl	4(ap)			# lbn to start reading
	pushl	8(ap)			# number of bytes to read
	pushl	12(ap)			# buffer-address 
	calls	$6, (r6)	# call the qio-routine
	ret			# r0 holds the result

/*
 * romwrite_uvax (int lbn, int size, void *buf, int *regs)
 */
ENTRY(romwrite_uvax, 0xFFE)
	movl    16(ap), r11     # array of bootregs
	movl    44(r11), r11    # restore boot-contents of r11 (rpb)
	movl    52(r11), r7     # load iovec/bqo into r7
	addl3   (r7), r7, r6    # load qio into r6
	pushl   r11                     # base of rpb
	pushl   $0                      # virtual-flag 
	pushl   $32                     # write-logical-block
	pushl   4(ap)                   # lbn to start reading
	pushl   8(ap)                   # number of bytes to read
	pushl   12(ap)                  # buffer-address 
	calls   $6, (r6)        # call the qio-routine
	ret                     # r0 holds the result

@


1.1
log
@sync with netbsd -- this involved rearranging things for sanity reasons
and because separate builds of libsa are done.  this is a pretty nice
bootloader.
@
text
@d1 1
a1 1
/*	$OpenBSD: romread.s,v 1.3 1997/05/29 00:04:24 niklas Exp $ */
@


1.1.12.1
log
@sync to -current
@
text
@d1 1
a1 1
/*	$OpenBSD: romread.s,v 1.1 2000/04/27 02:26:26 bjc Exp $ */
@


1.1.8.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: romread.s,v 1.1 2000/04/27 02:26:26 bjc Exp $ */
@


1.1.8.2
log
@Sync the SMP branch with 3.3
@
text
@d1 1
a1 1
/*	$OpenBSD: romread.s,v 1.1.8.1 2001/05/14 21:37:48 niklas Exp $ */
@


