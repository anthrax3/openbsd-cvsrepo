head	1.9;
access;
symbols
	OPENBSD_4_9:1.7.0.14
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.12
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.8
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.10
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.6
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.4
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.2
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	SMP_SYNC_A:1.5
	SMP_SYNC_B:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	UBC_SYNC_A:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	UBC_SYNC_B:1.4
	UBC:1.2.0.10
	UBC_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	SMP:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2011.07.10.17.31.40;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	2011.07.06.18.32.59;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2007.11.25.18.25.33;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2006.07.04.21.43.53;	author martin;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.10.15.51.18;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.11.09.36.24;	author hugh;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.10.06.52.16;	author hugh;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.04.04.54.38;	author bjc;	state Exp;
branches
	1.2.6.1
	1.2.10.1;
next	1.1;

1.1
date	2000.04.27.02.26.27;	author bjc;	state Exp;
branches;
next	;

1.2.6.1
date	2001.05.14.21.37.50;	author niklas;	state Exp;
branches;
next	1.2.6.2;

1.2.6.2
date	2002.03.28.11.26.46;	author niklas;	state Exp;
branches;
next	1.2.6.3;

1.2.6.3
date	2003.03.27.23.52.19;	author niklas;	state Exp;
branches;
next	1.2.6.4;

1.2.6.4
date	2004.02.19.10.50.02;	author niklas;	state Exp;
branches;
next	;

1.2.10.1
date	2002.06.11.03.39.18;	author art;	state Exp;
branches;
next	1.2.10.2;

1.2.10.2
date	2002.10.29.00.28.13;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Move the vax/boot code to vax/stand.  A cvs 'mv' with de-tagging has been
done behind the scenes to retain history.  Having all the bootblocks in the
same architecture sub-directory satisfies several principles.
ok miod
@
text
@#	$OpenBSD: Makefile,v 1.8 2011/07/06 18:32:59 miod Exp $
#	$NetBSD: Makefile,v 1.12 2002/02/24 01:04:25 matt Exp $

S=	${.CURDIR}/../../../../

PROG=	xxboot
LINKS=	${BINDIR}/xxboot ${BINDIR}/raboot 
LINKS+=	${BINDIR}/xxboot ${BINDIR}/hdboot
LINKS+=	${BINDIR}/xxboot ${BINDIR}/sdboot
WARNS?=	1

SRCS=	start.S bootxx.c romread.S str.S urem.s udiv.s

INSTALL_STRIP=
CPPFLAGS+=-D_STANDALONE -DLIBSA_NO_FD_CHECKING -DLIBSA_NO_RAW_ACCESS \
	-DLIBSA_NO_TWIDDLE -DLIBSA_SINGLE_DEVICE=rom \
	-DLIBSA_NO_COMPAT_UFS \
	-DLIBSA_NO_FS_SYMLINK -DLIBSA_NO_FS_CLOSE \
	-DLIBSA_NO_FS_WRITE -DLIBSA_NO_FS_SEEK \
	-DNEED_UFS
BINDIR=	/usr/mdec
NOMAN=	# defined

CFLAGS=	-Os

SAREL=
SA_AS=	library
.include "${S}/lib/libsa/Makefile.inc"
LIBSA=	${SALIB}

.if ${MACHINE} == "vax"
.PHONY: machine-links
beforedepend: machine-links
machine-links:
	@@[ -h machine ] || ln -s ${S}/arch/${MACHINE}/include machine
	@@[ -h ${MACHINE_ARCH} ] || ln -s ${S}/arch/${MACHINE_ARCH}/include ${MACHINE_ARCH}
.NOPATH: machine ${MACHINE_ARCH}
CLEANFILES+= machine ${MACHINE_ARCH} ${PROG}.out
.endif

${PROG}: ${OBJS} ${LIBSA}
	${LD} -N -Ttext 100000 -o ${PROG}.out ${OBJS} ${LIBSA}
	/usr/bin/strip ${PROG}.out
	/usr/bin/size ${PROG}.out
	/bin/dd if=${PROG}.out of=${PROG} bs=32 skip=1

clean::
	rm -f a.out [Ee]rrs mklog core *.core ${PROG} ${OBJS} ${LOBJS} \
	    ${CLEANFILES} 

.include <bsd.prog.mk>
@


1.8
log
@Remove support for non-microVAX, non-VAXstation, non-VXT hardware in the
VAX port. This means, 11/7xx, VAX6000 and VAX8x00 systems, as well as SBI,
CMI, BI, XMI and MASSBUS drivers.
Most of these files were not being compiled or kept in compilable state over
the years anyway.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2007/11/25 18:25:33 deraadt Exp $
@


1.7
log
@libkern, begone.  Move to a new mechanism where config(8)'s "file"
directive can select between MI and MD versions of these files.  At
the same time, adjust the boot programs to pick exactly what they need,
instead of the 7 or 8 mechanisms previously used.

There will be some fallout from this, but testing it all by myself is a
ridiculously slow process; it will be finished in-tree.

Various developers were very nice and avoided making fun of me when I
was gibbering in the corner..
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2006/07/04 21:43:53 martin Exp $
a9 1
LINKS+=	${BINDIR}/xxboot ${BINDIR}/hpboot
@


1.6
log
@use empty INSTALL_STRIP instead of STRIPFLAG to indicate we don't want to
strip xxboot on install
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2003/08/10 15:51:18 deraadt Exp $
a31 4
#KERN_AS=library
#.include "${S}/lib/libkern/Makefile.inc"
#LIBKERN=${KERNLIB}

d42 2
a43 3
${PROG}: ${OBJS} ${LIBSA} ${LIBZ} ${LIBKERN}
${PROG}: ${OBJS} ${LIBSA} ${LIBKERN}
	${LD} -N -Ttext 100000 -o ${PROG}.out ${OBJS} ${LIBSA} ${LIBKERN}
@


1.5
log
@clean leftovers
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2002/06/11 09:36:24 hugh Exp $
d15 1
a15 1
STRIPFLAG=
@


1.4
log
@New boot code, mostly from ragge's work in NetBSD.
Some header syncing and a couple network drivers came along for the ride.
Assembly files have been renamed from .s to .S to facilitate diffs.
Kernel is backwards compat - with manual interaction.
OpenBSD features have been preserved.
@
text
@d1 1
a1 1
#	$OpenBSD$
d43 1
a43 1
CLEANFILES+= machine ${MACHINE_ARCH}
@


1.3
log
@rdboot -> hdboot
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile,v 1.2 2000/10/04 04:54:38 bjc Exp $	
#	$NetBSD: Makefile,v 1.2 1999/10/23 14:40:39 ragge Exp $
d4 1
a4 1
S=${.CURDIR}/../../../../
d11 1
d13 1
a13 1
SRCS=	start.s bootxx.c romread.s urem.s udiv.s str.s
d18 4
a21 1
	-DLIBSA_SINGLE_FILESYSTEM=ufs
d23 3
a25 1
NOMAN=	1
d32 20
a51 6
${PROG}: ${OBJS} ${LIBSA}
	ld -N -Ttext 100000 -o a.out ${OBJS} ${LIBSA}
	strip a.out
	size a.out
	dd if=a.out of=${PROG} bs=32 skip=1
#	rm -f a.out
d55 1
a55 1
		${CLEANFILES} 
@


1.2
log
@better (relative) definition of ${S}
undef SAREL
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2000/04/27 02:26:27 bjc Exp $	
d8 1
a8 1
LINKS+=	${BINDIR}/xxboot ${BINDIR}/rdboot
@


1.2.10.1
log
@Sync UBC branch to -current
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2000/10/04 04:54:38 bjc Exp $	
d8 1
a8 1
LINKS+=	${BINDIR}/xxboot ${BINDIR}/hdboot
@


1.2.10.2
log
@sync to -current
@
text
@d1 2
a2 2
#	$OpenBSD$
#	$NetBSD: Makefile,v 1.12 2002/02/24 01:04:25 matt Exp $
d4 1
a4 1
S=	${.CURDIR}/../../../../
a10 1
WARNS?=	1
d12 1
a12 1
SRCS=	start.S bootxx.c romread.S str.S urem.s udiv.s
d17 1
a17 4
	-DLIBSA_NO_COMPAT_UFS \
	-DLIBSA_NO_FS_SYMLINK -DLIBSA_NO_FS_CLOSE \
	-DLIBSA_NO_FS_WRITE -DLIBSA_NO_FS_SEEK \
	-DNEED_UFS
d19 1
a19 3
NOMAN=	# defined

CFLAGS=	-Os
d26 6
a31 20
#KERN_AS=library
#.include "${S}/lib/libkern/Makefile.inc"
#LIBKERN=${KERNLIB}

.if ${MACHINE} == "vax"
.PHONY: machine-links
beforedepend: machine-links
machine-links:
	@@[ -h machine ] || ln -s ${S}/arch/${MACHINE}/include machine
	@@[ -h ${MACHINE_ARCH} ] || ln -s ${S}/arch/${MACHINE_ARCH}/include ${MACHINE_ARCH}
.NOPATH: machine ${MACHINE_ARCH}
CLEANFILES+= machine ${MACHINE_ARCH}
.endif

${PROG}: ${OBJS} ${LIBSA} ${LIBZ} ${LIBKERN}
${PROG}: ${OBJS} ${LIBSA} ${LIBKERN}
	${LD} -N -Ttext 100000 -o ${PROG}.out ${OBJS} ${LIBSA} ${LIBKERN}
	/usr/bin/strip ${PROG}.out
	/usr/bin/size ${PROG}.out
	/bin/dd if=${PROG}.out of=${PROG} bs=32 skip=1
d35 1
a35 1
	    ${CLEANFILES} 
@


1.2.6.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2000/10/04 04:54:38 bjc Exp $	
@


1.2.6.2
log
@Merge in -current from about a week ago
@
text
@d1 1
a1 1
#	$OpenBSD$	
d8 1
a8 1
LINKS+=	${BINDIR}/xxboot ${BINDIR}/hdboot
@


1.2.6.3
log
@Sync the SMP branch with 3.3
@
text
@d1 2
a2 2
#	$OpenBSD$
#	$NetBSD: Makefile,v 1.12 2002/02/24 01:04:25 matt Exp $
d4 1
a4 1
S=	${.CURDIR}/../../../../
a10 1
WARNS?=	1
d12 1
a12 1
SRCS=	start.S bootxx.c romread.S str.S urem.s udiv.s
d17 1
a17 4
	-DLIBSA_NO_COMPAT_UFS \
	-DLIBSA_NO_FS_SYMLINK -DLIBSA_NO_FS_CLOSE \
	-DLIBSA_NO_FS_WRITE -DLIBSA_NO_FS_SEEK \
	-DNEED_UFS
d19 1
a19 3
NOMAN=	# defined

CFLAGS=	-Os
d26 6
a31 20
#KERN_AS=library
#.include "${S}/lib/libkern/Makefile.inc"
#LIBKERN=${KERNLIB}

.if ${MACHINE} == "vax"
.PHONY: machine-links
beforedepend: machine-links
machine-links:
	@@[ -h machine ] || ln -s ${S}/arch/${MACHINE}/include machine
	@@[ -h ${MACHINE_ARCH} ] || ln -s ${S}/arch/${MACHINE_ARCH}/include ${MACHINE_ARCH}
.NOPATH: machine ${MACHINE_ARCH}
CLEANFILES+= machine ${MACHINE_ARCH}
.endif

${PROG}: ${OBJS} ${LIBSA} ${LIBZ} ${LIBKERN}
${PROG}: ${OBJS} ${LIBSA} ${LIBKERN}
	${LD} -N -Ttext 100000 -o ${PROG}.out ${OBJS} ${LIBSA} ${LIBKERN}
	/usr/bin/strip ${PROG}.out
	/usr/bin/size ${PROG}.out
	/bin/dd if=${PROG}.out of=${PROG} bs=32 skip=1
d35 1
a35 1
	    ${CLEANFILES} 
@


1.2.6.4
log
@Merge of current from two weeks agointo the SMP branch
@
text
@d43 1
a43 1
CLEANFILES+= machine ${MACHINE_ARCH} ${PROG}.out
@


1.1
log
@sync with netbsd -- this involved rearranging things for sanity reasons
and because separate builds of libsa are done.  this is a pretty nice
bootloader.
@
text
@d1 1
a1 1
#	$OpenBSD$	
d4 1
a4 1
S=../../../..
d21 1
@

