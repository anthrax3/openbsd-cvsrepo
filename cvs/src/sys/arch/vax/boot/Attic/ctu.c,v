head	1.3;
access;
symbols
	SMP_SYNC_A:1.3
	SMP_SYNC_B:1.3
	UBC_SYNC_A:1.3
	UBC_SYNC_B:1.3
	SMP:1.2.0.12
	SMP_BASE:1.2
	kame_19991208:1.2
	OPENBSD_2_6:1.2.0.10
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2000.04.27.02.26.19;	author bjc;	state dead;
branches;
next	1.2;

1.2
date	97.05.29.00.04.20;	author niklas;	state Exp;
branches
	1.2.12.1;
next	1.1;

1.1
date	96.05.03.09.09.01;	author mickey;	state Exp;
branches;
next	;

1.2.12.1
date	2001.05.14.21.37.40;	author niklas;	state dead;
branches;
next	;


desc
@@


1.3
log
@sync with netbsd -- this involved rearranging things for sanity reasons
and because separate builds of libsa are done.  this is a pretty nice
bootloader.
@
text
@/*	$OpenBSD: ctu.c,v 1.2 1997/05/29 00:04:20 niklas Exp $ */
/*	$NetBSD: ctu.c,v 1.1 1996/02/17 18:23:20 ragge Exp $ */
/*
 * Copyright (c) 1996 Ludd, University of Lule}, Sweden.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed at Ludd, University of 
 *      Lule}, Sweden and its contributors.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Standalone device driver for 11/750 Console TU58.
 * It can only handle reads, and doesn't calculate checksum.
 */

#include <sys/param.h>

#include <lib/libsa/stand.h>

#include <machine/mtpr.h>
#include <machine/rsp.h>

enum tu_state {
	SC_INIT,
	SC_READY,
	SC_SEND_CMD,
	SC_GET_RESP,
};

volatile struct tu_softc {
	enum	tu_state sc_state;
	char	sc_rsp[15];	/* Should be struct rsb; but don't work */
	u_char	*sc_xfptr;	/* Current char to xfer */
	int	sc_nbytes;	/* Number of bytes to xfer */
	int	sc_xbytes;	/* Number of xfer'd bytes */
	int	sc_bbytes;	/* Number of xfer'd bytes this block */
} tu_sc;

void	ctutintr __P(());
void	cturintr __P(());

int
ctuopen(f, adapt, ctlr, unit, part)
	struct open_file *f;
	int ctlr, unit, part;
{

	tu_sc.sc_state = SC_INIT;

	mtpr(RSP_TYP_INIT, PR_CSTD);
	cturintr();
	tu_sc.sc_state = SC_READY;
	return 0;

}

int
ctustrategy(ra, func, dblk, size, buf, rsize)
        struct ra_softc *ra;
        int func;
        daddr_t dblk;
        char *buf;
        u_int size, *rsize;
{
	int	s;

	struct rsp *rsp = (struct rsp *)tu_sc.sc_rsp;

	tu_sc.sc_xfptr = buf;
	tu_sc.sc_nbytes = size;
	tu_sc.sc_xbytes = tu_sc.sc_bbytes = 0;

	rsp->rsp_typ = RSP_TYP_COMMAND;
	rsp->rsp_sz = 012;
	rsp->rsp_op = RSP_OP_READ;
	rsp->rsp_mod = 0;
	rsp->rsp_drv = 0;
	rsp->rsp_sw = rsp->rsp_xx1 = rsp->rsp_xx2 = 0;
	rsp->rsp_cnt = tu_sc.sc_nbytes;
	rsp->rsp_blk = dblk;
	rsp->rsp_sum = ctu_cksum(rsp, 6);
	tu_sc.sc_state = SC_SEND_CMD;
	while (tu_sc.sc_state != SC_GET_RESP)
		ctutintr();
	while (tu_sc.sc_state != SC_READY)
		cturintr();
	*rsize = size;
	return 0;
}

void
cturintr()
{
	int	status;

	while ((mfpr(PR_CSRS) & 0x80) == 0)
		;

	status = mfpr(PR_CSRD);

	switch (tu_sc.sc_state) {

	case SC_INIT:
		break;

	case SC_GET_RESP:
		if (tu_sc.sc_xbytes == tu_sc.sc_nbytes) {
			tu_sc.sc_bbytes++;
			if (tu_sc.sc_bbytes == 146)
				tu_sc.sc_state = SC_READY;
			break;
		}
		tu_sc.sc_bbytes++;
		if (tu_sc.sc_bbytes <  3) /* Data header */
			break;
		if (tu_sc.sc_bbytes == 132) { /* Finished */
			tu_sc.sc_bbytes = 0;
			break;
		}
		if (tu_sc.sc_bbytes == 131) /* First checksum */
			break;
		tu_sc.sc_xfptr[tu_sc.sc_xbytes++] = status;
		break;

	}

}

void
ctutintr()
{
	int	c;

	while ((mfpr(PR_CSTS) & 0x80) == 0)
		;

	c = tu_sc.sc_rsp[tu_sc.sc_xbytes++] & 0xff;
	mtpr(c, PR_CSTD);
	if (tu_sc.sc_xbytes > 13) {
		tu_sc.sc_state = SC_GET_RESP;
		tu_sc.sc_xbytes = 0;
	}
}

ctu_cksum(buf, words)
	unsigned short *buf;
	int words;
{
	int i, cksum;

	for (i = cksum = 0; i < words; i++)
		cksum += buf[i];

hej:	if (cksum > 65535) {
		cksum = (cksum & 65535) + (cksum >> 16);
		goto hej;
	}
	return cksum;
}
@


1.2
log
@RCS tagging
@
text
@d1 1
a1 1
/*	$OpenBSD: ctu.c,v 1.1 1996/02/17 18:23:20 ragge Exp $ */
@


1.2.12.1
log
@Continue the aborted merge of current just before 2.9 was cut into the
SMP branch.  Note that this will not make any progress of SMP functionality,
it is just merging of new code from the trunk into the old branch.
Please do not ask me questions about SMP status because of this mail,
instead go read the archives of smp@@openbsd.org, where I mailed about
these commits some week ago.  Another note: I am doing this in chunks now,
so as to not lock too much of the tree for long times
@
text
@d1 1
a1 1
/*	$OpenBSD: ctu.c,v 1.2 1997/05/29 00:04:20 niklas Exp $ */
@


1.1
log
@sync w/ 0430
@
text
@d1 1
@
